ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC81:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 35


 805              	.LC82:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC83:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC84:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC85:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC86:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC87:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC88:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC89:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC90:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC91:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 36


 835              	.LC92:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC93:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC94:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC95:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC96:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC97:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC98:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC99:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC100:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC101:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC102:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC103:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC104:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC105:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC106:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC107:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC108:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC109:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC110:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891 019f 00       		.align	2
 892              	.LC111:
 893 01a0 20414952 		.ascii	" AIR CHAMBERS \000\000"
 893      20434841 
 893      4D424552 
 893      53200000 
 894              		.section	.text.get_param_list,"ax",%progbits
 895              		.align	2
 896              		.global	get_param_list
 897              		.thumb
 898              		.thumb_func
 899              		.type	get_param_list, %function
 900              	get_param_list:
 901              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 38


 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 902              		.loc 1 345 0
 903              		.cfi_startproc
 904              		@ args = 16, pretend = 0, frame = 3160
 905              		@ frame_needed = 1, uses_anonymous_args = 0
 906 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 907              		.cfi_def_cfa_offset 20
 908              		.cfi_offset 4, -20
 909              		.cfi_offset 5, -16
 910              		.cfi_offset 6, -12
 911              		.cfi_offset 7, -8
 912              		.cfi_offset 14, -4
 913 0002 ADF65C4D 		subw	sp, sp, #3164
 914              		.cfi_def_cfa_offset 3184
 915 0006 00AF     		add	r7, sp, #0
 916              		.cfi_def_cfa_register 7
 917 0008 07F10C04 		add	r4, r7, #12
 918 000c 2060     		str	r0, [r4]
 919 000e 07F10800 		add	r0, r7, #8
 920 0012 0160     		str	r1, [r0]
 921 0014 391D     		adds	r1, r7, #4
 922 0016 0A60     		str	r2, [r1]
 923 0018 3A46     		mov	r2, r7
 924 001a 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 925              		.loc 1 348 0
 926 001c 07F15803 		add	r3, r7, #88
 927 0020 0022     		movs	r2, #0
 928 0022 1A60     		str	r2, [r3]
 929 0024 0433     		adds	r3, r3, #4
 930 0026 40F6E632 		movw	r2, #3046
 931 002a 0021     		movs	r1, #0
 932 002c 1846     		mov	r0, r3
 933 002e FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 934              		.loc 1 349 0
 935 0032 40F6EA33 		movw	r3, #3050
 936 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 937              		.loc 1 353 0
 938 003a 0023     		movs	r3, #0
 939 003c 87F8553C 		strb	r3, [r7, #3157]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 940              		.loc 1 354 0
 941 0040 0023     		movs	r3, #0
 942 0042 87F8543C 		strb	r3, [r7, #3156]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 943              		.loc 1 355 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 39


 944 0046 0023     		movs	r3, #0
 945 0048 87F8533C 		strb	r3, [r7, #3155]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 946              		.loc 1 357 0
 947 004c 07F12403 		add	r3, r7, #36
 948 0050 0022     		movs	r2, #0
 949 0052 1A60     		str	r2, [r3]
 950 0054 0433     		adds	r3, r3, #4
 951 0056 2E22     		movs	r2, #46
 952 0058 0021     		movs	r1, #0
 953 005a 1846     		mov	r0, r3
 954 005c FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 955              		.loc 1 364 0
 956 0060 0023     		movs	r3, #0
 957 0062 87F84F3C 		strb	r3, [r7, #3151]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 958              		.loc 1 365 0
 959 0066 0123     		movs	r3, #1
 960 0068 87F84E3C 		strb	r3, [r7, #3150]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 961              		.loc 1 367 0
 962 006c 07F10C03 		add	r3, r7, #12
 963 0070 1B68     		ldr	r3, [r3]
 964 0072 1B68     		ldr	r3, [r3]
 965 0074 C7F8483C 		str	r3, [r7, #3144]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 966              		.loc 1 368 0
 967 0078 D7F8483C 		ldr	r3, [r7, #3144]
 968 007c C7F8443C 		str	r3, [r7, #3140]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 969              		.loc 1 370 0
 970 0080 07F15803 		add	r3, r7, #88
 971 0084 0C22     		movs	r2, #12
 972 0086 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 973              		.loc 1 371 0
 974 0088 07F15803 		add	r3, r7, #88
 975 008c 2422     		movs	r2, #36
 976 008e 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 977              		.loc 1 373 0
 978 0090 0023     		movs	r3, #0
 979 0092 87F8553C 		strb	r3, [r7, #3157]
 980 0096 01F08ABF 		b	.L63
 981              	.L249:
 374:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 40


 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 982              		.loc 1 376 0
 983 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 984 009e 9B00     		lsls	r3, r3, #2
 985 00a0 07F10C02 		add	r2, r7, #12
 986 00a4 1268     		ldr	r2, [r2]
 987 00a6 1344     		add	r3, r3, r2
 988 00a8 1B68     		ldr	r3, [r3]
 989 00aa C7F8483C 		str	r3, [r7, #3144]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 990              		.loc 1 379 0
 991 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 992 00b2 3222     		movs	r2, #50
 993 00b4 02FB03F3 		mul	r3, r2, r3
 994 00b8 0233     		adds	r3, r3, #2
 995 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 996 00be 07F10801 		add	r1, r7, #8
 997 00c2 0968     		ldr	r1, [r1]
 998 00c4 0A44     		add	r2, r2, r1
 999 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1000 00c8 07F15802 		add	r2, r7, #88
 1001 00cc D154     		strb	r1, [r2, r3]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1002              		.loc 1 380 0
 1003 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1004 00d2 3222     		movs	r2, #50
 1005 00d4 02FB03F3 		mul	r3, r2, r3
 1006 00d8 0333     		adds	r3, r3, #3
 1007 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1008 00de 391D     		adds	r1, r7, #4
 1009 00e0 0968     		ldr	r1, [r1]
 1010 00e2 0A44     		add	r2, r2, r1
 1011 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1012 00e6 07F15802 		add	r2, r7, #88
 1013 00ea D154     		strb	r1, [r2, r3]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1014              		.loc 1 383 0
 1015 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1016 00f0 07F10802 		add	r2, r7, #8
 1017 00f4 1268     		ldr	r2, [r2]
 1018 00f6 1344     		add	r3, r3, r2
 1019 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1020 00fa 092B     		cmp	r3, #9
 1021 00fc 22D8     		bhi	.L64
 1022 00fe 01A2     		adr	r2, .L66
 1023 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1024              		.p2align 2
 1025              	.L66:
 1026 0104 2D010000 		.word	.L65+1
 1027 0108 2D010000 		.word	.L65+1
 1028 010c 2D010000 		.word	.L65+1
 1029 0110 35010000 		.word	.L67+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 41


 1030 0114 35010000 		.word	.L67+1
 1031 0118 3D010000 		.word	.L68+1
 1032 011c 3D010000 		.word	.L68+1
 1033 0120 3D010000 		.word	.L68+1
 1034 0124 45010000 		.word	.L64+1
 1035 0128 2D010000 		.word	.L65+1
 1036              		.p2align 1
 1037              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1038              		.loc 1 385 0
 1039 012c 0123     		movs	r3, #1
 1040 012e 87F8533C 		strb	r3, [r7, #3155]
 1041 0132 07E0     		b	.L64
 1042              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1043              		.loc 1 387 0
 1044 0134 0223     		movs	r3, #2
 1045 0136 87F8533C 		strb	r3, [r7, #3155]
 1046 013a 03E0     		b	.L64
 1047              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1048              		.loc 1 389 0
 1049 013c 0423     		movs	r3, #4
 1050 013e 87F8533C 		strb	r3, [r7, #3155]
 1051 0142 00BF     		nop
 1052              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1053              		.loc 1 392 0
 1054 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1055 0148 D7F8782C 		ldr	r2, [r7, #3192]
 1056 014c 1344     		add	r3, r3, r2
 1057 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1058 0150 002B     		cmp	r3, #0
 1059 0152 40F02A82 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1060              		.loc 1 395 0
 1061 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1062 015a 07F10802 		add	r2, r7, #8
 1063 015e 1268     		ldr	r2, [r2]
 1064 0160 1344     		add	r3, r3, r2
 1065 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1066 0164 092B     		cmp	r3, #9
 1067 0166 01F20E83 		bhi	.L103
 1068 016a 01A2     		adr	r2, .L72
 1069 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1070              		.p2align 2
 1071              	.L72:
 1072 0170 99010000 		.word	.L71+1
 1073 0174 01020000 		.word	.L73+1
 1074 0178 99010000 		.word	.L71+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 42


 1075 017c 69020000 		.word	.L74+1
 1076 0180 11030000 		.word	.L75+1
 1077 0184 B7030000 		.word	.L76+1
 1078 0188 5D040000 		.word	.L77+1
 1079 018c 03050000 		.word	.L78+1
 1080 0190 87170000 		.word	.L103+1
 1081 0194 99010000 		.word	.L71+1
 1082              		.p2align 1
 1083              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1084              		.loc 1 397 0
 1085 0198 0023     		movs	r3, #0
 1086 019a 87F8573C 		strb	r3, [r7, #3159]
 1087 019e 23E0     		b	.L79
 1088              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1089              		.loc 1 398 0 discriminator 3
 1090 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1091 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1092 01a8 02FB03F3 		mul	r3, r2, r3
 1093 01ac 1A46     		mov	r2, r3
 1094 01ae D7F8483C 		ldr	r3, [r7, #3144]
 1095 01b2 1344     		add	r3, r3, r2
 1096 01b4 C7F8443C 		str	r3, [r7, #3140]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1097              		.loc 1 399 0 discriminator 3
 1098 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1099 01bc 3222     		movs	r2, #50
 1100 01be 02FB03F3 		mul	r3, r2, r3
 1101 01c2 1A1D     		adds	r2, r3, #4
 1102 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1103 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1104 01cc 01FB03F3 		mul	r3, r1, r3
 1105 01d0 1344     		add	r3, r3, r2
 1106 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1107 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1108 01d8 07F15802 		add	r2, r7, #88
 1109 01dc D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1110              		.loc 1 397 0 discriminator 3
 1111 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1112 01e2 0133     		adds	r3, r3, #1
 1113 01e4 87F8573C 		strb	r3, [r7, #3159]
 1114              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1115              		.loc 1 397 0 is_stmt 0 discriminator 1
 1116 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1117 01ec 3A1D     		adds	r2, r7, #4
 1118 01ee 1268     		ldr	r2, [r2]
 1119 01f0 1344     		add	r3, r3, r2
 1120 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1121 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1122 01f8 9A42     		cmp	r2, r3
 1123 01fa D1D3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 43


 1124              		.loc 1 401 0 is_stmt 1
 1125 01fc 01F0C3BA 		b	.L103
 1126              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1127              		.loc 1 403 0
 1128 0200 0023     		movs	r3, #0
 1129 0202 87F8573C 		strb	r3, [r7, #3159]
 1130 0206 23E0     		b	.L81
 1131              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1132              		.loc 1 404 0 discriminator 3
 1133 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1134 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1135 0210 02FB03F3 		mul	r3, r2, r3
 1136 0214 1A46     		mov	r2, r3
 1137 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1138 021a 1344     		add	r3, r3, r2
 1139 021c C7F8443C 		str	r3, [r7, #3140]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1140              		.loc 1 405 0 discriminator 3
 1141 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1142 0224 3222     		movs	r2, #50
 1143 0226 02FB03F3 		mul	r3, r2, r3
 1144 022a 1A1D     		adds	r2, r3, #4
 1145 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1146 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1147 0234 01FB03F3 		mul	r3, r1, r3
 1148 0238 1344     		add	r3, r3, r2
 1149 023a D7F8442C 		ldr	r2, [r7, #3140]
 1150 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1151 0240 07F15802 		add	r2, r7, #88
 1152 0244 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1153              		.loc 1 403 0 discriminator 3
 1154 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1155 024a 0133     		adds	r3, r3, #1
 1156 024c 87F8573C 		strb	r3, [r7, #3159]
 1157              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1158              		.loc 1 403 0 is_stmt 0 discriminator 1
 1159 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1160 0254 3A1D     		adds	r2, r7, #4
 1161 0256 1268     		ldr	r2, [r2]
 1162 0258 1344     		add	r3, r3, r2
 1163 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1164 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1165 0260 9A42     		cmp	r2, r3
 1166 0262 D1D3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1167              		.loc 1 407 0 is_stmt 1
 1168 0264 01F08FBA 		b	.L103
 1169              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1170              		.loc 1 409 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 44


 1171 0268 0023     		movs	r3, #0
 1172 026a 87F8573C 		strb	r3, [r7, #3159]
 1173 026e 43E0     		b	.L83
 1174              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1175              		.loc 1 410 0
 1176 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1177 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1178 0278 02FB03F3 		mul	r3, r2, r3
 1179 027c 1A46     		mov	r2, r3
 1180 027e D7F8483C 		ldr	r3, [r7, #3144]
 1181 0282 1344     		add	r3, r3, r2
 1182 0284 C7F8443C 		str	r3, [r7, #3140]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1183              		.loc 1 411 0
 1184 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1185 028c B3F90020 		ldrsh	r2, [r3]
 1186 0290 07F11E03 		add	r3, r7, #30
 1187 0294 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1188              		.loc 1 412 0
 1189 0296 0023     		movs	r3, #0
 1190 0298 87F8563C 		strb	r3, [r7, #3158]
 1191 029c 21E0     		b	.L84
 1192              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1193              		.loc 1 413 0 discriminator 3
 1194 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1195 02a2 3222     		movs	r2, #50
 1196 02a4 02FB03F3 		mul	r3, r2, r3
 1197 02a8 1A1D     		adds	r2, r3, #4
 1198 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1199 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1200 02b2 01FB03F3 		mul	r3, r1, r3
 1201 02b6 1A44     		add	r2, r2, r3
 1202 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1203 02bc 1A44     		add	r2, r2, r3
 1204 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1205 02c2 D31A     		subs	r3, r2, r3
 1206 02c4 013B     		subs	r3, r3, #1
 1207 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1208 02ca 07F11E01 		add	r1, r7, #30
 1209 02ce 0A44     		add	r2, r2, r1
 1210 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1211 02d2 07F15802 		add	r2, r7, #88
 1212 02d6 D154     		strb	r1, [r2, r3]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1213              		.loc 1 412 0 discriminator 3
 1214 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1215 02dc 0133     		adds	r3, r3, #1
 1216 02de 87F8563C 		strb	r3, [r7, #3158]
 1217              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1218              		.loc 1 412 0 is_stmt 0 discriminator 1
 1219 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1220 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1221 02ea 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 45


 1222 02ec D7D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1223              		.loc 1 409 0 is_stmt 1 discriminator 2
 1224 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1225 02f2 0133     		adds	r3, r3, #1
 1226 02f4 87F8573C 		strb	r3, [r7, #3159]
 1227              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1228              		.loc 1 409 0 is_stmt 0 discriminator 1
 1229 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1230 02fc 3A1D     		adds	r2, r7, #4
 1231 02fe 1268     		ldr	r2, [r2]
 1232 0300 1344     		add	r3, r3, r2
 1233 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1234 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1235 0308 9A42     		cmp	r2, r3
 1236 030a B1D3     		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1237              		.loc 1 416 0 is_stmt 1
 1238 030c 01F03BBA 		b	.L103
 1239              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1240              		.loc 1 418 0
 1241 0310 0023     		movs	r3, #0
 1242 0312 87F8573C 		strb	r3, [r7, #3159]
 1243 0316 42E0     		b	.L87
 1244              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1245              		.loc 1 419 0
 1246 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1247 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1248 0320 02FB03F3 		mul	r3, r2, r3
 1249 0324 1A46     		mov	r2, r3
 1250 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1251 032a 1344     		add	r3, r3, r2
 1252 032c C7F8443C 		str	r3, [r7, #3140]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1253              		.loc 1 420 0
 1254 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1255 0334 1A88     		ldrh	r2, [r3]
 1256 0336 07F11C03 		add	r3, r7, #28
 1257 033a 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1258              		.loc 1 421 0
 1259 033c 0023     		movs	r3, #0
 1260 033e 87F8563C 		strb	r3, [r7, #3158]
 1261 0342 21E0     		b	.L88
 1262              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1263              		.loc 1 422 0 discriminator 3
 1264 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1265 0348 3222     		movs	r2, #50
 1266 034a 02FB03F3 		mul	r3, r2, r3
 1267 034e 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 46


 1268 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1269 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1270 0358 01FB03F3 		mul	r3, r1, r3
 1271 035c 1A44     		add	r2, r2, r3
 1272 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1273 0362 1A44     		add	r2, r2, r3
 1274 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1275 0368 D31A     		subs	r3, r2, r3
 1276 036a 013B     		subs	r3, r3, #1
 1277 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1278 0370 07F11C01 		add	r1, r7, #28
 1279 0374 0A44     		add	r2, r2, r1
 1280 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1281 0378 07F15802 		add	r2, r7, #88
 1282 037c D154     		strb	r1, [r2, r3]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1283              		.loc 1 421 0 discriminator 3
 1284 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1285 0382 0133     		adds	r3, r3, #1
 1286 0384 87F8563C 		strb	r3, [r7, #3158]
 1287              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1288              		.loc 1 421 0 is_stmt 0 discriminator 1
 1289 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1290 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1291 0390 9A42     		cmp	r2, r3
 1292 0392 D7D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1293              		.loc 1 418 0 is_stmt 1 discriminator 2
 1294 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1295 0398 0133     		adds	r3, r3, #1
 1296 039a 87F8573C 		strb	r3, [r7, #3159]
 1297              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1298              		.loc 1 418 0 is_stmt 0 discriminator 1
 1299 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1300 03a2 3A1D     		adds	r2, r7, #4
 1301 03a4 1268     		ldr	r2, [r2]
 1302 03a6 1344     		add	r3, r3, r2
 1303 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1304 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1305 03ae 9A42     		cmp	r2, r3
 1306 03b0 B2D3     		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1307              		.loc 1 425 0 is_stmt 1
 1308 03b2 01F0E8B9 		b	.L103
 1309              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1310              		.loc 1 427 0
 1311 03b6 0023     		movs	r3, #0
 1312 03b8 87F8573C 		strb	r3, [r7, #3159]
 1313 03bc 42E0     		b	.L91
 1314              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 47


 1315              		.loc 1 428 0
 1316 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1317 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1318 03c6 02FB03F3 		mul	r3, r2, r3
 1319 03ca 1A46     		mov	r2, r3
 1320 03cc D7F8483C 		ldr	r3, [r7, #3144]
 1321 03d0 1344     		add	r3, r3, r2
 1322 03d2 C7F8443C 		str	r3, [r7, #3140]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1323              		.loc 1 429 0
 1324 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1325 03da 1A68     		ldr	r2, [r3]
 1326 03dc 07F11803 		add	r3, r7, #24
 1327 03e0 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1328              		.loc 1 430 0
 1329 03e2 0023     		movs	r3, #0
 1330 03e4 87F8563C 		strb	r3, [r7, #3158]
 1331 03e8 21E0     		b	.L92
 1332              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1333              		.loc 1 431 0 discriminator 3
 1334 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1335 03ee 3222     		movs	r2, #50
 1336 03f0 02FB03F3 		mul	r3, r2, r3
 1337 03f4 1A1D     		adds	r2, r3, #4
 1338 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1339 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1340 03fe 01FB03F3 		mul	r3, r1, r3
 1341 0402 1A44     		add	r2, r2, r3
 1342 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1343 0408 1A44     		add	r2, r2, r3
 1344 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1345 040e D31A     		subs	r3, r2, r3
 1346 0410 013B     		subs	r3, r3, #1
 1347 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1348 0416 07F11801 		add	r1, r7, #24
 1349 041a 0A44     		add	r2, r2, r1
 1350 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1351 041e 07F15802 		add	r2, r7, #88
 1352 0422 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1353              		.loc 1 430 0 discriminator 3
 1354 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1355 0428 0133     		adds	r3, r3, #1
 1356 042a 87F8563C 		strb	r3, [r7, #3158]
 1357              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1358              		.loc 1 430 0 is_stmt 0 discriminator 1
 1359 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1360 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1361 0436 9A42     		cmp	r2, r3
 1362 0438 D7D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1363              		.loc 1 427 0 is_stmt 1 discriminator 2
 1364 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1365 043e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 48


 1366 0440 87F8573C 		strb	r3, [r7, #3159]
 1367              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1368              		.loc 1 427 0 is_stmt 0 discriminator 1
 1369 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1370 0448 3A1D     		adds	r2, r7, #4
 1371 044a 1268     		ldr	r2, [r2]
 1372 044c 1344     		add	r3, r3, r2
 1373 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1374 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1375 0454 9A42     		cmp	r2, r3
 1376 0456 B2D3     		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1377              		.loc 1 434 0 is_stmt 1
 1378 0458 01F095B9 		b	.L103
 1379              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1380              		.loc 1 436 0
 1381 045c 0023     		movs	r3, #0
 1382 045e 87F8573C 		strb	r3, [r7, #3159]
 1383 0462 42E0     		b	.L95
 1384              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1385              		.loc 1 437 0
 1386 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1387 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1388 046c 02FB03F3 		mul	r3, r2, r3
 1389 0470 1A46     		mov	r2, r3
 1390 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1391 0476 1344     		add	r3, r3, r2
 1392 0478 C7F8443C 		str	r3, [r7, #3140]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1393              		.loc 1 438 0
 1394 047c D7F8443C 		ldr	r3, [r7, #3140]
 1395 0480 1A68     		ldr	r2, [r3]
 1396 0482 07F11403 		add	r3, r7, #20
 1397 0486 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1398              		.loc 1 439 0
 1399 0488 0023     		movs	r3, #0
 1400 048a 87F8563C 		strb	r3, [r7, #3158]
 1401 048e 21E0     		b	.L96
 1402              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1403              		.loc 1 440 0 discriminator 3
 1404 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1405 0494 3222     		movs	r2, #50
 1406 0496 02FB03F3 		mul	r3, r2, r3
 1407 049a 1A1D     		adds	r2, r3, #4
 1408 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1409 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1410 04a4 01FB03F3 		mul	r3, r1, r3
 1411 04a8 1A44     		add	r2, r2, r3
 1412 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 49


 1413 04ae 1A44     		add	r2, r2, r3
 1414 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1415 04b4 D31A     		subs	r3, r2, r3
 1416 04b6 013B     		subs	r3, r3, #1
 1417 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1418 04bc 07F11401 		add	r1, r7, #20
 1419 04c0 0A44     		add	r2, r2, r1
 1420 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1421 04c4 07F15802 		add	r2, r7, #88
 1422 04c8 D154     		strb	r1, [r2, r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1423              		.loc 1 439 0 discriminator 3
 1424 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1425 04ce 0133     		adds	r3, r3, #1
 1426 04d0 87F8563C 		strb	r3, [r7, #3158]
 1427              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1428              		.loc 1 439 0 is_stmt 0 discriminator 1
 1429 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1430 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1431 04dc 9A42     		cmp	r2, r3
 1432 04de D7D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1433              		.loc 1 436 0 is_stmt 1 discriminator 2
 1434 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1435 04e4 0133     		adds	r3, r3, #1
 1436 04e6 87F8573C 		strb	r3, [r7, #3159]
 1437              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1438              		.loc 1 436 0 is_stmt 0 discriminator 1
 1439 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1440 04ee 3A1D     		adds	r2, r7, #4
 1441 04f0 1268     		ldr	r2, [r2]
 1442 04f2 1344     		add	r3, r3, r2
 1443 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1444 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1445 04fa 9A42     		cmp	r2, r3
 1446 04fc B2D3     		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1447              		.loc 1 443 0 is_stmt 1
 1448 04fe 01F042B9 		b	.L103
 1449              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1450              		.loc 1 446 0
 1451 0502 0023     		movs	r3, #0
 1452 0504 87F8573C 		strb	r3, [r7, #3159]
 1453 0508 42E0     		b	.L99
 1454              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1455              		.loc 1 447 0
 1456 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1457 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1458 0512 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 50


 1459 0516 1A46     		mov	r2, r3
 1460 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1461 051c 1344     		add	r3, r3, r2
 1462 051e C7F8443C 		str	r3, [r7, #3140]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1463              		.loc 1 448 0
 1464 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1465 0526 1A68     		ldr	r2, [r3]	@ float
 1466 0528 07F12003 		add	r3, r7, #32
 1467 052c 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1468              		.loc 1 449 0
 1469 052e 0023     		movs	r3, #0
 1470 0530 87F8563C 		strb	r3, [r7, #3158]
 1471 0534 21E0     		b	.L100
 1472              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1473              		.loc 1 450 0 discriminator 3
 1474 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1475 053a 3222     		movs	r2, #50
 1476 053c 02FB03F3 		mul	r3, r2, r3
 1477 0540 1A1D     		adds	r2, r3, #4
 1478 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1479 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1480 054a 01FB03F3 		mul	r3, r1, r3
 1481 054e 1A44     		add	r2, r2, r3
 1482 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1483 0554 1A44     		add	r2, r2, r3
 1484 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1485 055a D31A     		subs	r3, r2, r3
 1486 055c 013B     		subs	r3, r3, #1
 1487 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1488 0562 07F12001 		add	r1, r7, #32
 1489 0566 0A44     		add	r2, r2, r1
 1490 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1491 056a 07F15802 		add	r2, r7, #88
 1492 056e D154     		strb	r1, [r2, r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1493              		.loc 1 449 0 discriminator 3
 1494 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1495 0574 0133     		adds	r3, r3, #1
 1496 0576 87F8563C 		strb	r3, [r7, #3158]
 1497              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1498              		.loc 1 449 0 is_stmt 0 discriminator 1
 1499 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1500 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1501 0582 9A42     		cmp	r2, r3
 1502 0584 D7D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1503              		.loc 1 446 0 is_stmt 1 discriminator 2
 1504 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1505 058a 0133     		adds	r3, r3, #1
 1506 058c 87F8573C 		strb	r3, [r7, #3159]
 1507              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1508              		.loc 1 446 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 51


 1509 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1510 0594 3A1D     		adds	r2, r7, #4
 1511 0596 1268     		ldr	r2, [r2]
 1512 0598 1344     		add	r3, r3, r2
 1513 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1514 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1515 05a0 9A42     		cmp	r2, r3
 1516 05a2 B2D3     		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1517              		.loc 1 453 0 is_stmt 1 discriminator 7
 1518 05a4 00BF     		nop
 1519 05a6 01F0EEB8 		b	.L103
 1520              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1521              		.loc 1 461 0
 1522 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1523 05ae 0133     		adds	r3, r3, #1
 1524 05b0 023B     		subs	r3, r3, #2
 1525 05b2 332B     		cmp	r3, #51
 1526 05b4 01F2E680 		bhi	.L254
 1527 05b8 01A2     		adr	r2, .L106
 1528 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1529 05be 00BF     		.p2align 2
 1530              	.L106:
 1531 05c0 91060000 		.word	.L105+1
 1532 05c4 B1090000 		.word	.L107+1
 1533 05c8 85170000 		.word	.L254+1
 1534 05cc 85170000 		.word	.L254+1
 1535 05d0 85170000 		.word	.L254+1
 1536 05d4 85170000 		.word	.L254+1
 1537 05d8 D10C0000 		.word	.L108+1
 1538 05dc 85170000 		.word	.L254+1
 1539 05e0 85170000 		.word	.L254+1
 1540 05e4 970D0000 		.word	.L109+1
 1541 05e8 85170000 		.word	.L254+1
 1542 05ec 85170000 		.word	.L254+1
 1543 05f0 85170000 		.word	.L254+1
 1544 05f4 85170000 		.word	.L254+1
 1545 05f8 85170000 		.word	.L254+1
 1546 05fc 85170000 		.word	.L254+1
 1547 0600 85170000 		.word	.L254+1
 1548 0604 85170000 		.word	.L254+1
 1549 0608 85170000 		.word	.L254+1
 1550 060c 85170000 		.word	.L254+1
 1551 0610 85170000 		.word	.L254+1
 1552 0614 C50E0000 		.word	.L110+1
 1553 0618 85170000 		.word	.L254+1
 1554 061c 85170000 		.word	.L254+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 52


 1555 0620 85170000 		.word	.L254+1
 1556 0624 85170000 		.word	.L254+1
 1557 0628 85170000 		.word	.L254+1
 1558 062c 85170000 		.word	.L254+1
 1559 0630 85170000 		.word	.L254+1
 1560 0634 85170000 		.word	.L254+1
 1561 0638 85170000 		.word	.L254+1
 1562 063c 85170000 		.word	.L254+1
 1563 0640 85170000 		.word	.L254+1
 1564 0644 85170000 		.word	.L254+1
 1565 0648 85170000 		.word	.L254+1
 1566 064c 85170000 		.word	.L254+1
 1567 0650 85170000 		.word	.L254+1
 1568 0654 85170000 		.word	.L254+1
 1569 0658 85170000 		.word	.L254+1
 1570 065c 85170000 		.word	.L254+1
 1571 0660 85170000 		.word	.L254+1
 1572 0664 85170000 		.word	.L254+1
 1573 0668 4D0F0000 		.word	.L111+1
 1574 066c 6F120000 		.word	.L112+1
 1575 0670 85170000 		.word	.L254+1
 1576 0674 85170000 		.word	.L254+1
 1577 0678 85170000 		.word	.L254+1
 1578 067c 85170000 		.word	.L254+1
 1579 0680 8B150000 		.word	.L113+1
 1580 0684 85170000 		.word	.L254+1
 1581 0688 85170000 		.word	.L254+1
 1582 068c 4F160000 		.word	.L114+1
 1583              		.p2align 1
 1584              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1585              		.loc 1 463 0
 1586 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1587 0694 C549     		ldr	r1, .L258
 1588 0696 1346     		mov	r3, r2
 1589 0698 DB00     		lsls	r3, r3, #3
 1590 069a 9B1A     		subs	r3, r3, r2
 1591 069c 1B01     		lsls	r3, r3, #4
 1592 069e 0B44     		add	r3, r3, r1
 1593 06a0 03F20F13 		addw	r3, r3, #271
 1594 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1595 06a6 032B     		cmp	r3, #3
 1596 06a8 00F0C080 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1597              		.loc 1 464 0
 1598 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1599 06b0 BE49     		ldr	r1, .L258
 1600 06b2 1346     		mov	r3, r2
 1601 06b4 DB00     		lsls	r3, r3, #3
 1602 06b6 9B1A     		subs	r3, r3, r2
 1603 06b8 1B01     		lsls	r3, r3, #4
 1604 06ba 0B44     		add	r3, r3, r1
 1605 06bc B033     		adds	r3, r3, #176
 1606 06be 1B68     		ldr	r3, [r3]
 1607 06c0 1846     		mov	r0, r3
 1608 06c2 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 53


 1609 06c6 0346     		mov	r3, r0
 1610 06c8 4FF08F41 		mov	r1, #1199570944
 1611 06cc 1846     		mov	r0, r3
 1612 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1613 06d2 0346     		mov	r3, r0
 1614 06d4 1A46     		mov	r2, r3
 1615 06d6 07F12003 		add	r3, r7, #32
 1616 06da 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1617              		.loc 1 465 0
 1618 06dc 0023     		movs	r3, #0
 1619 06de 87F8573C 		strb	r3, [r7, #3159]
 1620 06e2 1AE0     		b	.L116
 1621              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1622              		.loc 1 466 0 discriminator 3
 1623 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1624 06e8 3222     		movs	r2, #50
 1625 06ea 02FB03F3 		mul	r3, r2, r3
 1626 06ee 1A1D     		adds	r2, r3, #4
 1627 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1628 06f4 1A44     		add	r2, r2, r3
 1629 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1630 06fa D31A     		subs	r3, r2, r3
 1631 06fc 013B     		subs	r3, r3, #1
 1632 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1633 0702 07F12001 		add	r1, r7, #32
 1634 0706 0A44     		add	r2, r2, r1
 1635 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1636 070a 07F15802 		add	r2, r7, #88
 1637 070e D154     		strb	r1, [r2, r3]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1638              		.loc 1 465 0 discriminator 3
 1639 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1640 0714 0133     		adds	r3, r3, #1
 1641 0716 87F8573C 		strb	r3, [r7, #3159]
 1642              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1643              		.loc 1 465 0 is_stmt 0 discriminator 1
 1644 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1645 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1646 0722 9A42     		cmp	r2, r3
 1647 0724 DED3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1648              		.loc 1 468 0 is_stmt 1
 1649 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1650 072a A049     		ldr	r1, .L258
 1651 072c 1346     		mov	r3, r2
 1652 072e DB00     		lsls	r3, r3, #3
 1653 0730 9B1A     		subs	r3, r3, r2
 1654 0732 1B01     		lsls	r3, r3, #4
 1655 0734 0B44     		add	r3, r3, r1
 1656 0736 B433     		adds	r3, r3, #180
 1657 0738 1B68     		ldr	r3, [r3]
 1658 073a 1846     		mov	r0, r3
 1659 073c FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 54


 1660 0740 0346     		mov	r3, r0
 1661 0742 4FF08F41 		mov	r1, #1199570944
 1662 0746 1846     		mov	r0, r3
 1663 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1664 074c 0346     		mov	r3, r0
 1665 074e 1A46     		mov	r2, r3
 1666 0750 07F12003 		add	r3, r7, #32
 1667 0754 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1668              		.loc 1 469 0
 1669 0756 0023     		movs	r3, #0
 1670 0758 87F8573C 		strb	r3, [r7, #3159]
 1671 075c 1DE0     		b	.L118
 1672              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1673              		.loc 1 470 0 discriminator 3
 1674 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1675 0762 3222     		movs	r2, #50
 1676 0764 02FB03F3 		mul	r3, r2, r3
 1677 0768 1A1D     		adds	r2, r3, #4
 1678 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1679 076e 1A44     		add	r2, r2, r3
 1680 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1681 0774 1A44     		add	r2, r2, r3
 1682 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1683 077a D31A     		subs	r3, r2, r3
 1684 077c 013B     		subs	r3, r3, #1
 1685 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1686 0782 07F12001 		add	r1, r7, #32
 1687 0786 0A44     		add	r2, r2, r1
 1688 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1689 078a 07F15802 		add	r2, r7, #88
 1690 078e D154     		strb	r1, [r2, r3]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1691              		.loc 1 469 0 discriminator 3
 1692 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1693 0794 0133     		adds	r3, r3, #1
 1694 0796 87F8573C 		strb	r3, [r7, #3159]
 1695              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1696              		.loc 1 469 0 is_stmt 0 discriminator 1
 1697 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1698 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1699 07a2 9A42     		cmp	r2, r3
 1700 07a4 DBD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1701              		.loc 1 472 0 is_stmt 1
 1702 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1703 07aa 8049     		ldr	r1, .L258
 1704 07ac 1346     		mov	r3, r2
 1705 07ae DB00     		lsls	r3, r3, #3
 1706 07b0 9B1A     		subs	r3, r3, r2
 1707 07b2 1B01     		lsls	r3, r3, #4
 1708 07b4 0B44     		add	r3, r3, r1
 1709 07b6 B833     		adds	r3, r3, #184
 1710 07b8 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 55


 1711 07ba 1846     		mov	r0, r3
 1712 07bc FFF7FEFF 		bl	__aeabi_i2f
 1713 07c0 0346     		mov	r3, r0
 1714 07c2 4FF08F41 		mov	r1, #1199570944
 1715 07c6 1846     		mov	r0, r3
 1716 07c8 FFF7FEFF 		bl	__aeabi_fdiv
 1717 07cc 0346     		mov	r3, r0
 1718 07ce 1A46     		mov	r2, r3
 1719 07d0 07F12003 		add	r3, r7, #32
 1720 07d4 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1721              		.loc 1 473 0
 1722 07d6 0023     		movs	r3, #0
 1723 07d8 87F8573C 		strb	r3, [r7, #3159]
 1724 07dc 1EE0     		b	.L120
 1725              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1726              		.loc 1 474 0 discriminator 3
 1727 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1728 07e2 3222     		movs	r2, #50
 1729 07e4 02FB03F3 		mul	r3, r2, r3
 1730 07e8 1A1D     		adds	r2, r3, #4
 1731 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1732 07ee 5B00     		lsls	r3, r3, #1
 1733 07f0 1A44     		add	r2, r2, r3
 1734 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1735 07f6 1A44     		add	r2, r2, r3
 1736 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1737 07fc D31A     		subs	r3, r2, r3
 1738 07fe 013B     		subs	r3, r3, #1
 1739 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1740 0804 07F12001 		add	r1, r7, #32
 1741 0808 0A44     		add	r2, r2, r1
 1742 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1743 080c 07F15802 		add	r2, r7, #88
 1744 0810 D154     		strb	r1, [r2, r3]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1745              		.loc 1 473 0 discriminator 3
 1746 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1747 0816 0133     		adds	r3, r3, #1
 1748 0818 87F8573C 		strb	r3, [r7, #3159]
 1749              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1750              		.loc 1 473 0 is_stmt 0 discriminator 1
 1751 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1752 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1753 0824 9A42     		cmp	r2, r3
 1754 0826 DAD3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 56


 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 1755              		.loc 1 491 0 is_stmt 1
 1756 0828 00F0ADBF 		b	.L103
 1757              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1758              		.loc 1 478 0
 1759 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1760 0830 5E49     		ldr	r1, .L258
 1761 0832 1346     		mov	r3, r2
 1762 0834 DB00     		lsls	r3, r3, #3
 1763 0836 9B1A     		subs	r3, r3, r2
 1764 0838 1B01     		lsls	r3, r3, #4
 1765 083a 0B44     		add	r3, r3, r1
 1766 083c C833     		adds	r3, r3, #200
 1767 083e 1B68     		ldr	r3, [r3]
 1768 0840 1846     		mov	r0, r3
 1769 0842 FFF7FEFF 		bl	__aeabi_i2f
 1770 0846 0346     		mov	r3, r0
 1771 0848 4FF08F41 		mov	r1, #1199570944
 1772 084c 1846     		mov	r0, r3
 1773 084e FFF7FEFF 		bl	__aeabi_fdiv
 1774 0852 0346     		mov	r3, r0
 1775 0854 1A46     		mov	r2, r3
 1776 0856 07F12003 		add	r3, r7, #32
 1777 085a 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1778              		.loc 1 479 0
 1779 085c 0023     		movs	r3, #0
 1780 085e 87F8573C 		strb	r3, [r7, #3159]
 1781 0862 1AE0     		b	.L123
 1782              	.L124:
 480:..\src/command_processing.c ****                             }
 1783              		.loc 1 480 0 discriminator 3
 1784 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1785 0868 3222     		movs	r2, #50
 1786 086a 02FB03F3 		mul	r3, r2, r3
 1787 086e 1A1D     		adds	r2, r3, #4
 1788 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1789 0874 1A44     		add	r2, r2, r3
 1790 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1791 087a D31A     		subs	r3, r2, r3
 1792 087c 013B     		subs	r3, r3, #1
 1793 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1794 0882 07F12001 		add	r1, r7, #32
 1795 0886 0A44     		add	r2, r2, r1
 1796 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1797 088a 07F15802 		add	r2, r7, #88
 1798 088e D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1799              		.loc 1 479 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 57


 1800 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1801 0894 0133     		adds	r3, r3, #1
 1802 0896 87F8573C 		strb	r3, [r7, #3159]
 1803              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1804              		.loc 1 479 0 is_stmt 0 discriminator 1
 1805 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1806 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1807 08a2 9A42     		cmp	r2, r3
 1808 08a4 DED3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1809              		.loc 1 482 0 is_stmt 1
 1810 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1811 08aa 4049     		ldr	r1, .L258
 1812 08ac 1346     		mov	r3, r2
 1813 08ae DB00     		lsls	r3, r3, #3
 1814 08b0 9B1A     		subs	r3, r3, r2
 1815 08b2 1B01     		lsls	r3, r3, #4
 1816 08b4 0B44     		add	r3, r3, r1
 1817 08b6 CC33     		adds	r3, r3, #204
 1818 08b8 1B68     		ldr	r3, [r3]
 1819 08ba 1846     		mov	r0, r3
 1820 08bc FFF7FEFF 		bl	__aeabi_i2f
 1821 08c0 0346     		mov	r3, r0
 1822 08c2 4FF08F41 		mov	r1, #1199570944
 1823 08c6 1846     		mov	r0, r3
 1824 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1825 08cc 0346     		mov	r3, r0
 1826 08ce 1A46     		mov	r2, r3
 1827 08d0 07F12003 		add	r3, r7, #32
 1828 08d4 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1829              		.loc 1 483 0
 1830 08d6 0023     		movs	r3, #0
 1831 08d8 87F8573C 		strb	r3, [r7, #3159]
 1832 08dc 1DE0     		b	.L125
 1833              	.L126:
 484:..\src/command_processing.c ****                             }
 1834              		.loc 1 484 0 discriminator 3
 1835 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1836 08e2 3222     		movs	r2, #50
 1837 08e4 02FB03F3 		mul	r3, r2, r3
 1838 08e8 1A1D     		adds	r2, r3, #4
 1839 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1840 08ee 1A44     		add	r2, r2, r3
 1841 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1842 08f4 1A44     		add	r2, r2, r3
 1843 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1844 08fa D31A     		subs	r3, r2, r3
 1845 08fc 013B     		subs	r3, r3, #1
 1846 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1847 0902 07F12001 		add	r1, r7, #32
 1848 0906 0A44     		add	r2, r2, r1
 1849 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1850 090a 07F15802 		add	r2, r7, #88
 1851 090e D154     		strb	r1, [r2, r3]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 58


 1852              		.loc 1 483 0 discriminator 3
 1853 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1854 0914 0133     		adds	r3, r3, #1
 1855 0916 87F8573C 		strb	r3, [r7, #3159]
 1856              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1857              		.loc 1 483 0 is_stmt 0 discriminator 1
 1858 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1859 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1860 0922 9A42     		cmp	r2, r3
 1861 0924 DBD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1862              		.loc 1 486 0 is_stmt 1
 1863 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1864 092a 2049     		ldr	r1, .L258
 1865 092c 1346     		mov	r3, r2
 1866 092e DB00     		lsls	r3, r3, #3
 1867 0930 9B1A     		subs	r3, r3, r2
 1868 0932 1B01     		lsls	r3, r3, #4
 1869 0934 0B44     		add	r3, r3, r1
 1870 0936 D033     		adds	r3, r3, #208
 1871 0938 1B68     		ldr	r3, [r3]
 1872 093a 1846     		mov	r0, r3
 1873 093c FFF7FEFF 		bl	__aeabi_i2f
 1874 0940 0346     		mov	r3, r0
 1875 0942 4FF08F41 		mov	r1, #1199570944
 1876 0946 1846     		mov	r0, r3
 1877 0948 FFF7FEFF 		bl	__aeabi_fdiv
 1878 094c 0346     		mov	r3, r0
 1879 094e 1A46     		mov	r2, r3
 1880 0950 07F12003 		add	r3, r7, #32
 1881 0954 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1882              		.loc 1 487 0
 1883 0956 0023     		movs	r3, #0
 1884 0958 87F8573C 		strb	r3, [r7, #3159]
 1885 095c 1EE0     		b	.L127
 1886              	.L128:
 488:..\src/command_processing.c ****                             }
 1887              		.loc 1 488 0 discriminator 3
 1888 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1889 0962 3222     		movs	r2, #50
 1890 0964 02FB03F3 		mul	r3, r2, r3
 1891 0968 1A1D     		adds	r2, r3, #4
 1892 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1893 096e 5B00     		lsls	r3, r3, #1
 1894 0970 1A44     		add	r2, r2, r3
 1895 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1896 0976 1A44     		add	r2, r2, r3
 1897 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1898 097c D31A     		subs	r3, r2, r3
 1899 097e 013B     		subs	r3, r3, #1
 1900 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1901 0984 07F12001 		add	r1, r7, #32
 1902 0988 0A44     		add	r2, r2, r1
 1903 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1904 098c 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 59


 1905 0990 D154     		strb	r1, [r2, r3]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1906              		.loc 1 487 0 discriminator 3
 1907 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1908 0996 0133     		adds	r3, r3, #1
 1909 0998 87F8573C 		strb	r3, [r7, #3159]
 1910              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1911              		.loc 1 487 0 is_stmt 0 discriminator 1
 1912 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1913 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1914 09a4 9A42     		cmp	r2, r3
 1915 09a6 DAD3     		bcc	.L128
 1916              		.loc 1 491 0 is_stmt 1
 1917 09a8 00F0EDBE 		b	.L103
 1918              	.L259:
 1919              		.align	2
 1920              	.L258:
 1921 09ac 00000000 		.word	c_mem
 1922              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1923              		.loc 1 494 0
 1924 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1925 09b4 C549     		ldr	r1, .L260
 1926 09b6 1346     		mov	r3, r2
 1927 09b8 DB00     		lsls	r3, r3, #3
 1928 09ba 9B1A     		subs	r3, r3, r2
 1929 09bc 1B01     		lsls	r3, r3, #4
 1930 09be 0B44     		add	r3, r3, r1
 1931 09c0 03F20F13 		addw	r3, r3, #271
 1932 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1933 09c6 032B     		cmp	r3, #3
 1934 09c8 00F0C080 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 1935              		.loc 1 495 0
 1936 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1937 09d0 BE49     		ldr	r1, .L260
 1938 09d2 1346     		mov	r3, r2
 1939 09d4 DB00     		lsls	r3, r3, #3
 1940 09d6 9B1A     		subs	r3, r3, r2
 1941 09d8 1B01     		lsls	r3, r3, #4
 1942 09da 0B44     		add	r3, r3, r1
 1943 09dc BC33     		adds	r3, r3, #188
 1944 09de 1B68     		ldr	r3, [r3]
 1945 09e0 1846     		mov	r0, r3
 1946 09e2 FFF7FEFF 		bl	__aeabi_i2f
 1947 09e6 0346     		mov	r3, r0
 1948 09e8 4FF08F41 		mov	r1, #1199570944
 1949 09ec 1846     		mov	r0, r3
 1950 09ee FFF7FEFF 		bl	__aeabi_fdiv
 1951 09f2 0346     		mov	r3, r0
 1952 09f4 1A46     		mov	r2, r3
 1953 09f6 07F12003 		add	r3, r7, #32
 1954 09fa 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 60


 1955              		.loc 1 496 0
 1956 09fc 0023     		movs	r3, #0
 1957 09fe 87F8573C 		strb	r3, [r7, #3159]
 1958 0a02 1AE0     		b	.L130
 1959              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1960              		.loc 1 497 0 discriminator 3
 1961 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1962 0a08 3222     		movs	r2, #50
 1963 0a0a 02FB03F3 		mul	r3, r2, r3
 1964 0a0e 1A1D     		adds	r2, r3, #4
 1965 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1966 0a14 1A44     		add	r2, r2, r3
 1967 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1968 0a1a D31A     		subs	r3, r2, r3
 1969 0a1c 013B     		subs	r3, r3, #1
 1970 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1971 0a22 07F12001 		add	r1, r7, #32
 1972 0a26 0A44     		add	r2, r2, r1
 1973 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1974 0a2a 07F15802 		add	r2, r7, #88
 1975 0a2e D154     		strb	r1, [r2, r3]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1976              		.loc 1 496 0 discriminator 3
 1977 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1978 0a34 0133     		adds	r3, r3, #1
 1979 0a36 87F8573C 		strb	r3, [r7, #3159]
 1980              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1981              		.loc 1 496 0 is_stmt 0 discriminator 1
 1982 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1983 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1984 0a42 9A42     		cmp	r2, r3
 1985 0a44 DED3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 1986              		.loc 1 499 0 is_stmt 1
 1987 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1988 0a4a A049     		ldr	r1, .L260
 1989 0a4c 1346     		mov	r3, r2
 1990 0a4e DB00     		lsls	r3, r3, #3
 1991 0a50 9B1A     		subs	r3, r3, r2
 1992 0a52 1B01     		lsls	r3, r3, #4
 1993 0a54 0B44     		add	r3, r3, r1
 1994 0a56 C033     		adds	r3, r3, #192
 1995 0a58 1B68     		ldr	r3, [r3]
 1996 0a5a 1846     		mov	r0, r3
 1997 0a5c FFF7FEFF 		bl	__aeabi_i2f
 1998 0a60 0346     		mov	r3, r0
 1999 0a62 4FF08F41 		mov	r1, #1199570944
 2000 0a66 1846     		mov	r0, r3
 2001 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 2002 0a6c 0346     		mov	r3, r0
 2003 0a6e 1A46     		mov	r2, r3
 2004 0a70 07F12003 		add	r3, r7, #32
 2005 0a74 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 61


 2006              		.loc 1 500 0
 2007 0a76 0023     		movs	r3, #0
 2008 0a78 87F8573C 		strb	r3, [r7, #3159]
 2009 0a7c 1DE0     		b	.L132
 2010              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2011              		.loc 1 501 0 discriminator 3
 2012 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2013 0a82 3222     		movs	r2, #50
 2014 0a84 02FB03F3 		mul	r3, r2, r3
 2015 0a88 1A1D     		adds	r2, r3, #4
 2016 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2017 0a8e 1A44     		add	r2, r2, r3
 2018 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2019 0a94 1A44     		add	r2, r2, r3
 2020 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2021 0a9a D31A     		subs	r3, r2, r3
 2022 0a9c 013B     		subs	r3, r3, #1
 2023 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2024 0aa2 07F12001 		add	r1, r7, #32
 2025 0aa6 0A44     		add	r2, r2, r1
 2026 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2027 0aaa 07F15802 		add	r2, r7, #88
 2028 0aae D154     		strb	r1, [r2, r3]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2029              		.loc 1 500 0 discriminator 3
 2030 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2031 0ab4 0133     		adds	r3, r3, #1
 2032 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2033              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2034              		.loc 1 500 0 is_stmt 0 discriminator 1
 2035 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2036 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2037 0ac2 9A42     		cmp	r2, r3
 2038 0ac4 DBD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2039              		.loc 1 503 0 is_stmt 1
 2040 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2041 0aca 8049     		ldr	r1, .L260
 2042 0acc 1346     		mov	r3, r2
 2043 0ace DB00     		lsls	r3, r3, #3
 2044 0ad0 9B1A     		subs	r3, r3, r2
 2045 0ad2 1B01     		lsls	r3, r3, #4
 2046 0ad4 0B44     		add	r3, r3, r1
 2047 0ad6 C433     		adds	r3, r3, #196
 2048 0ad8 1B68     		ldr	r3, [r3]
 2049 0ada 1846     		mov	r0, r3
 2050 0adc FFF7FEFF 		bl	__aeabi_i2f
 2051 0ae0 0346     		mov	r3, r0
 2052 0ae2 4FF08F41 		mov	r1, #1199570944
 2053 0ae6 1846     		mov	r0, r3
 2054 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2055 0aec 0346     		mov	r3, r0
 2056 0aee 1A46     		mov	r2, r3
 2057 0af0 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 62


 2058 0af4 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2059              		.loc 1 504 0
 2060 0af6 0023     		movs	r3, #0
 2061 0af8 87F8573C 		strb	r3, [r7, #3159]
 2062 0afc 1EE0     		b	.L134
 2063              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2064              		.loc 1 505 0 discriminator 3
 2065 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2066 0b02 3222     		movs	r2, #50
 2067 0b04 02FB03F3 		mul	r3, r2, r3
 2068 0b08 1A1D     		adds	r2, r3, #4
 2069 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2070 0b0e 5B00     		lsls	r3, r3, #1
 2071 0b10 1A44     		add	r2, r2, r3
 2072 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2073 0b16 1A44     		add	r2, r2, r3
 2074 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2075 0b1c D31A     		subs	r3, r2, r3
 2076 0b1e 013B     		subs	r3, r3, #1
 2077 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2078 0b24 07F12001 		add	r1, r7, #32
 2079 0b28 0A44     		add	r2, r2, r1
 2080 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2081 0b2c 07F15802 		add	r2, r7, #88
 2082 0b30 D154     		strb	r1, [r2, r3]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2083              		.loc 1 504 0 discriminator 3
 2084 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2085 0b36 0133     		adds	r3, r3, #1
 2086 0b38 87F8573C 		strb	r3, [r7, #3159]
 2087              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2088              		.loc 1 504 0 is_stmt 0 discriminator 1
 2089 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2090 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2091 0b44 9A42     		cmp	r2, r3
 2092 0b46 DAD3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2093              		.loc 1 522 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 63


 2094 0b48 00F01DBE 		b	.L103
 2095              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2096              		.loc 1 509 0
 2097 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2098 0b50 5E49     		ldr	r1, .L260
 2099 0b52 1346     		mov	r3, r2
 2100 0b54 DB00     		lsls	r3, r3, #3
 2101 0b56 9B1A     		subs	r3, r3, r2
 2102 0b58 1B01     		lsls	r3, r3, #4
 2103 0b5a 0B44     		add	r3, r3, r1
 2104 0b5c D433     		adds	r3, r3, #212
 2105 0b5e 1B68     		ldr	r3, [r3]
 2106 0b60 1846     		mov	r0, r3
 2107 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2108 0b66 0346     		mov	r3, r0
 2109 0b68 4FF08F41 		mov	r1, #1199570944
 2110 0b6c 1846     		mov	r0, r3
 2111 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2112 0b72 0346     		mov	r3, r0
 2113 0b74 1A46     		mov	r2, r3
 2114 0b76 07F12003 		add	r3, r7, #32
 2115 0b7a 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2116              		.loc 1 510 0
 2117 0b7c 0023     		movs	r3, #0
 2118 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2119 0b82 1AE0     		b	.L137
 2120              	.L138:
 511:..\src/command_processing.c ****                             }
 2121              		.loc 1 511 0 discriminator 3
 2122 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2123 0b88 3222     		movs	r2, #50
 2124 0b8a 02FB03F3 		mul	r3, r2, r3
 2125 0b8e 1A1D     		adds	r2, r3, #4
 2126 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2127 0b94 1A44     		add	r2, r2, r3
 2128 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2129 0b9a D31A     		subs	r3, r2, r3
 2130 0b9c 013B     		subs	r3, r3, #1
 2131 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2132 0ba2 07F12001 		add	r1, r7, #32
 2133 0ba6 0A44     		add	r2, r2, r1
 2134 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2135 0baa 07F15802 		add	r2, r7, #88
 2136 0bae D154     		strb	r1, [r2, r3]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2137              		.loc 1 510 0 discriminator 3
 2138 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2139 0bb4 0133     		adds	r3, r3, #1
 2140 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2141              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2142              		.loc 1 510 0 is_stmt 0 discriminator 1
 2143 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2144 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2145 0bc2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 64


 2146 0bc4 DED3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2147              		.loc 1 513 0 is_stmt 1
 2148 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2149 0bca 4049     		ldr	r1, .L260
 2150 0bcc 1346     		mov	r3, r2
 2151 0bce DB00     		lsls	r3, r3, #3
 2152 0bd0 9B1A     		subs	r3, r3, r2
 2153 0bd2 1B01     		lsls	r3, r3, #4
 2154 0bd4 0B44     		add	r3, r3, r1
 2155 0bd6 D833     		adds	r3, r3, #216
 2156 0bd8 1B68     		ldr	r3, [r3]
 2157 0bda 1846     		mov	r0, r3
 2158 0bdc FFF7FEFF 		bl	__aeabi_i2f
 2159 0be0 0346     		mov	r3, r0
 2160 0be2 4FF08F41 		mov	r1, #1199570944
 2161 0be6 1846     		mov	r0, r3
 2162 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2163 0bec 0346     		mov	r3, r0
 2164 0bee 1A46     		mov	r2, r3
 2165 0bf0 07F12003 		add	r3, r7, #32
 2166 0bf4 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2167              		.loc 1 514 0
 2168 0bf6 0023     		movs	r3, #0
 2169 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2170 0bfc 1DE0     		b	.L139
 2171              	.L140:
 515:..\src/command_processing.c ****                             }
 2172              		.loc 1 515 0 discriminator 3
 2173 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2174 0c02 3222     		movs	r2, #50
 2175 0c04 02FB03F3 		mul	r3, r2, r3
 2176 0c08 1A1D     		adds	r2, r3, #4
 2177 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2178 0c0e 1A44     		add	r2, r2, r3
 2179 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2180 0c14 1A44     		add	r2, r2, r3
 2181 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2182 0c1a D31A     		subs	r3, r2, r3
 2183 0c1c 013B     		subs	r3, r3, #1
 2184 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2185 0c22 07F12001 		add	r1, r7, #32
 2186 0c26 0A44     		add	r2, r2, r1
 2187 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2188 0c2a 07F15802 		add	r2, r7, #88
 2189 0c2e D154     		strb	r1, [r2, r3]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2190              		.loc 1 514 0 discriminator 3
 2191 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2192 0c34 0133     		adds	r3, r3, #1
 2193 0c36 87F8573C 		strb	r3, [r7, #3159]
 2194              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2195              		.loc 1 514 0 is_stmt 0 discriminator 1
 2196 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2197 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 65


 2198 0c42 9A42     		cmp	r2, r3
 2199 0c44 DBD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2200              		.loc 1 517 0 is_stmt 1
 2201 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2202 0c4a 2049     		ldr	r1, .L260
 2203 0c4c 1346     		mov	r3, r2
 2204 0c4e DB00     		lsls	r3, r3, #3
 2205 0c50 9B1A     		subs	r3, r3, r2
 2206 0c52 1B01     		lsls	r3, r3, #4
 2207 0c54 0B44     		add	r3, r3, r1
 2208 0c56 DC33     		adds	r3, r3, #220
 2209 0c58 1B68     		ldr	r3, [r3]
 2210 0c5a 1846     		mov	r0, r3
 2211 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2212 0c60 0346     		mov	r3, r0
 2213 0c62 4FF08F41 		mov	r1, #1199570944
 2214 0c66 1846     		mov	r0, r3
 2215 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2216 0c6c 0346     		mov	r3, r0
 2217 0c6e 1A46     		mov	r2, r3
 2218 0c70 07F12003 		add	r3, r7, #32
 2219 0c74 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2220              		.loc 1 518 0
 2221 0c76 0023     		movs	r3, #0
 2222 0c78 87F8573C 		strb	r3, [r7, #3159]
 2223 0c7c 1EE0     		b	.L141
 2224              	.L142:
 519:..\src/command_processing.c ****                             }
 2225              		.loc 1 519 0 discriminator 3
 2226 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2227 0c82 3222     		movs	r2, #50
 2228 0c84 02FB03F3 		mul	r3, r2, r3
 2229 0c88 1A1D     		adds	r2, r3, #4
 2230 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2231 0c8e 5B00     		lsls	r3, r3, #1
 2232 0c90 1A44     		add	r2, r2, r3
 2233 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2234 0c96 1A44     		add	r2, r2, r3
 2235 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2236 0c9c D31A     		subs	r3, r2, r3
 2237 0c9e 013B     		subs	r3, r3, #1
 2238 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2239 0ca4 07F12001 		add	r1, r7, #32
 2240 0ca8 0A44     		add	r2, r2, r1
 2241 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2242 0cac 07F15802 		add	r2, r7, #88
 2243 0cb0 D154     		strb	r1, [r2, r3]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2244              		.loc 1 518 0 discriminator 3
 2245 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2246 0cb6 0133     		adds	r3, r3, #1
 2247 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2248              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2249              		.loc 1 518 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 66


 2250 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2251 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2252 0cc4 9A42     		cmp	r2, r3
 2253 0cc6 DAD3     		bcc	.L142
 2254              		.loc 1 522 0 is_stmt 1
 2255 0cc8 00F05DBD 		b	.L103
 2256              	.L261:
 2257              		.align	2
 2258              	.L260:
 2259 0ccc 00000000 		.word	c_mem
 2260              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2261              		.loc 1 525 0
 2262 0cd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2263 0cd4 D149     		ldr	r1, .L262
 2264 0cd6 1346     		mov	r3, r2
 2265 0cd8 DB00     		lsls	r3, r3, #3
 2266 0cda 9B1A     		subs	r3, r3, r2
 2267 0cdc 1B01     		lsls	r3, r3, #4
 2268 0cde 0B44     		add	r3, r3, r1
 2269 0ce0 03F58873 		add	r3, r3, #272
 2270 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2271 0ce6 1846     		mov	r0, r3
 2272 0ce8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2273 0cec CC49     		ldr	r1, .L262+4
 2274 0cee 0346     		mov	r3, r0
 2275 0cf0 5B00     		lsls	r3, r3, #1
 2276 0cf2 0344     		add	r3, r3, r0
 2277 0cf4 9B00     		lsls	r3, r3, #2
 2278 0cf6 1344     		add	r3, r3, r2
 2279 0cf8 6633     		adds	r3, r3, #102
 2280 0cfa 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2281 0cfe 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2282 0d02 C648     		ldr	r0, .L262
 2283 0d04 1346     		mov	r3, r2
 2284 0d06 DB00     		lsls	r3, r3, #3
 2285 0d08 9B1A     		subs	r3, r3, r2
 2286 0d0a 1B01     		lsls	r3, r3, #4
 2287 0d0c 0344     		add	r3, r3, r0
 2288 0d0e 03F58873 		add	r3, r3, #272
 2289 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2290 0d14 1C46     		mov	r4, r3
 2291 0d16 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2292 0d1a C148     		ldr	r0, .L262+4
 2293 0d1c 2346     		mov	r3, r4
 2294 0d1e 5B00     		lsls	r3, r3, #1
 2295 0d20 2344     		add	r3, r3, r4
 2296 0d22 1B01     		lsls	r3, r3, #4
 2297 0d24 0344     		add	r3, r3, r0
 2298 0d26 1344     		add	r3, r3, r2
 2299 0d28 03F29513 		addw	r3, r3, #405
 2300 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2301 0d2e 41FA03F3 		asr	r3, r1, r3
 2302 0d32 1AB2     		sxth	r2, r3
 2303 0d34 07F11E03 		add	r3, r7, #30
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 67


 2304 0d38 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2305              		.loc 1 526 0
 2306 0d3a 0023     		movs	r3, #0
 2307 0d3c 87F8563C 		strb	r3, [r7, #3158]
 2308 0d40 21E0     		b	.L143
 2309              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2310              		.loc 1 527 0 discriminator 3
 2311 0d42 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2312 0d46 3222     		movs	r2, #50
 2313 0d48 02FB03F3 		mul	r3, r2, r3
 2314 0d4c 1A1D     		adds	r2, r3, #4
 2315 0d4e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2316 0d52 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2317 0d56 01FB03F3 		mul	r3, r1, r3
 2318 0d5a 1A44     		add	r2, r2, r3
 2319 0d5c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2320 0d60 1A44     		add	r2, r2, r3
 2321 0d62 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2322 0d66 D31A     		subs	r3, r2, r3
 2323 0d68 013B     		subs	r3, r3, #1
 2324 0d6a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2325 0d6e 07F11E01 		add	r1, r7, #30
 2326 0d72 0A44     		add	r2, r2, r1
 2327 0d74 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2328 0d76 07F15802 		add	r2, r7, #88
 2329 0d7a D154     		strb	r1, [r2, r3]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2330              		.loc 1 526 0 discriminator 3
 2331 0d7c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2332 0d80 0133     		adds	r3, r3, #1
 2333 0d82 87F8563C 		strb	r3, [r7, #3158]
 2334              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2335              		.loc 1 526 0 is_stmt 0 discriminator 1
 2336 0d86 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2337 0d8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2338 0d8e 9A42     		cmp	r2, r3
 2339 0d90 D7D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2340              		.loc 1 529 0 is_stmt 1
 2341 0d92 00F0F8BC 		b	.L103
 2342              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2343              		.loc 1 532 0
 2344 0d96 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2345 0d9a A149     		ldr	r1, .L262+4
 2346 0d9c 1346     		mov	r3, r2
 2347 0d9e DB00     		lsls	r3, r3, #3
 2348 0da0 9B1A     		subs	r3, r3, r2
 2349 0da2 1B01     		lsls	r3, r3, #4
 2350 0da4 0B44     		add	r3, r3, r1
 2351 0da6 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 68


 2352 0da8 1968     		ldr	r1, [r3]
 2353 0daa 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2354 0dae 9B48     		ldr	r0, .L262
 2355 0db0 1346     		mov	r3, r2
 2356 0db2 DB00     		lsls	r3, r3, #3
 2357 0db4 9B1A     		subs	r3, r3, r2
 2358 0db6 1B01     		lsls	r3, r3, #4
 2359 0db8 0344     		add	r3, r3, r0
 2360 0dba 03F58873 		add	r3, r3, #272
 2361 0dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2362 0dc0 1846     		mov	r0, r3
 2363 0dc2 974A     		ldr	r2, .L262+4
 2364 0dc4 0346     		mov	r3, r0
 2365 0dc6 5B00     		lsls	r3, r3, #1
 2366 0dc8 0344     		add	r3, r3, r0
 2367 0dca 1B01     		lsls	r3, r3, #4
 2368 0dcc 1344     		add	r3, r3, r2
 2369 0dce 03F29513 		addw	r3, r3, #405
 2370 0dd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2371 0dd4 41FA03F2 		asr	r2, r1, r3
 2372 0dd8 07F11803 		add	r3, r7, #24
 2373 0ddc 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2374              		.loc 1 533 0
 2375 0dde 0023     		movs	r3, #0
 2376 0de0 87F8563C 		strb	r3, [r7, #3158]
 2377 0de4 1AE0     		b	.L145
 2378              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2379              		.loc 1 534 0 discriminator 3
 2380 0de6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2381 0dea 3222     		movs	r2, #50
 2382 0dec 02FB03F3 		mul	r3, r2, r3
 2383 0df0 1A1D     		adds	r2, r3, #4
 2384 0df2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2385 0df6 1A44     		add	r2, r2, r3
 2386 0df8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2387 0dfc D31A     		subs	r3, r2, r3
 2388 0dfe 013B     		subs	r3, r3, #1
 2389 0e00 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2390 0e04 07F11801 		add	r1, r7, #24
 2391 0e08 0A44     		add	r2, r2, r1
 2392 0e0a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2393 0e0c 07F15802 		add	r2, r7, #88
 2394 0e10 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2395              		.loc 1 533 0 discriminator 3
 2396 0e12 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2397 0e16 0133     		adds	r3, r3, #1
 2398 0e18 87F8563C 		strb	r3, [r7, #3158]
 2399              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2400              		.loc 1 533 0 is_stmt 0 discriminator 1
 2401 0e1c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2402 0e20 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2403 0e24 9A42     		cmp	r2, r3
 2404 0e26 DED3     		bcc	.L146
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 69


 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2405              		.loc 1 536 0 is_stmt 1
 2406 0e28 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2407 0e2c 7C49     		ldr	r1, .L262+4
 2408 0e2e 1346     		mov	r3, r2
 2409 0e30 DB00     		lsls	r3, r3, #3
 2410 0e32 9B1A     		subs	r3, r3, r2
 2411 0e34 1B01     		lsls	r3, r3, #4
 2412 0e36 0B44     		add	r3, r3, r1
 2413 0e38 E833     		adds	r3, r3, #232
 2414 0e3a 1968     		ldr	r1, [r3]
 2415 0e3c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2416 0e40 7648     		ldr	r0, .L262
 2417 0e42 1346     		mov	r3, r2
 2418 0e44 DB00     		lsls	r3, r3, #3
 2419 0e46 9B1A     		subs	r3, r3, r2
 2420 0e48 1B01     		lsls	r3, r3, #4
 2421 0e4a 0344     		add	r3, r3, r0
 2422 0e4c 03F58873 		add	r3, r3, #272
 2423 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2424 0e52 1846     		mov	r0, r3
 2425 0e54 724A     		ldr	r2, .L262+4
 2426 0e56 0346     		mov	r3, r0
 2427 0e58 5B00     		lsls	r3, r3, #1
 2428 0e5a 0344     		add	r3, r3, r0
 2429 0e5c 1B01     		lsls	r3, r3, #4
 2430 0e5e 1344     		add	r3, r3, r2
 2431 0e60 03F29513 		addw	r3, r3, #405
 2432 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2433 0e66 41FA03F2 		asr	r2, r1, r3
 2434 0e6a 07F11803 		add	r3, r7, #24
 2435 0e6e 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2436              		.loc 1 537 0
 2437 0e70 0023     		movs	r3, #0
 2438 0e72 87F8563C 		strb	r3, [r7, #3158]
 2439 0e76 1DE0     		b	.L147
 2440              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2441              		.loc 1 538 0 discriminator 3
 2442 0e78 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2443 0e7c 3222     		movs	r2, #50
 2444 0e7e 02FB03F3 		mul	r3, r2, r3
 2445 0e82 1A1D     		adds	r2, r3, #4
 2446 0e84 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2447 0e88 1A44     		add	r2, r2, r3
 2448 0e8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2449 0e8e 1A44     		add	r2, r2, r3
 2450 0e90 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2451 0e94 D31A     		subs	r3, r2, r3
 2452 0e96 013B     		subs	r3, r3, #1
 2453 0e98 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2454 0e9c 07F11801 		add	r1, r7, #24
 2455 0ea0 0A44     		add	r2, r2, r1
 2456 0ea2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2457 0ea4 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 70


 2458 0ea8 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2459              		.loc 1 537 0 discriminator 3
 2460 0eaa 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2461 0eae 0133     		adds	r3, r3, #1
 2462 0eb0 87F8563C 		strb	r3, [r7, #3158]
 2463              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2464              		.loc 1 537 0 is_stmt 0 discriminator 1
 2465 0eb4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2466 0eb8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2467 0ebc 9A42     		cmp	r2, r3
 2468 0ebe DBD3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 2469              		.loc 1 540 0 is_stmt 1
 2470 0ec0 00F061BC 		b	.L103
 2471              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2472              		.loc 1 543 0
 2473 0ec4 564B     		ldr	r3, .L262+4
 2474 0ec6 D3F8A012 		ldr	r1, [r3, #672]
 2475 0eca 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2476 0ece 5348     		ldr	r0, .L262
 2477 0ed0 1346     		mov	r3, r2
 2478 0ed2 DB00     		lsls	r3, r3, #3
 2479 0ed4 9B1A     		subs	r3, r3, r2
 2480 0ed6 1B01     		lsls	r3, r3, #4
 2481 0ed8 0344     		add	r3, r3, r0
 2482 0eda 03F58873 		add	r3, r3, #272
 2483 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2484 0ee0 1846     		mov	r0, r3
 2485 0ee2 4F4A     		ldr	r2, .L262+4
 2486 0ee4 0346     		mov	r3, r0
 2487 0ee6 5B00     		lsls	r3, r3, #1
 2488 0ee8 0344     		add	r3, r3, r0
 2489 0eea 1B01     		lsls	r3, r3, #4
 2490 0eec 1344     		add	r3, r3, r2
 2491 0eee 03F29513 		addw	r3, r3, #405
 2492 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2493 0ef4 41FA03F2 		asr	r2, r1, r3
 2494 0ef8 07F11803 		add	r3, r7, #24
 2495 0efc 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2496              		.loc 1 544 0
 2497 0efe 0023     		movs	r3, #0
 2498 0f00 87F8563C 		strb	r3, [r7, #3158]
 2499 0f04 1AE0     		b	.L149
 2500              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2501              		.loc 1 545 0 discriminator 3
 2502 0f06 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2503 0f0a 3222     		movs	r2, #50
 2504 0f0c 02FB03F3 		mul	r3, r2, r3
 2505 0f10 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 71


 2506 0f12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2507 0f16 1A44     		add	r2, r2, r3
 2508 0f18 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2509 0f1c D31A     		subs	r3, r2, r3
 2510 0f1e 013B     		subs	r3, r3, #1
 2511 0f20 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2512 0f24 07F11801 		add	r1, r7, #24
 2513 0f28 0A44     		add	r2, r2, r1
 2514 0f2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2515 0f2c 07F15802 		add	r2, r7, #88
 2516 0f30 D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2517              		.loc 1 544 0 discriminator 3
 2518 0f32 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2519 0f36 0133     		adds	r3, r3, #1
 2520 0f38 87F8563C 		strb	r3, [r7, #3158]
 2521              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2522              		.loc 1 544 0 is_stmt 0 discriminator 1
 2523 0f3c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2524 0f40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2525 0f44 9A42     		cmp	r2, r3
 2526 0f46 DED3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 2527              		.loc 1 547 0 is_stmt 1
 2528 0f48 00F01DBC 		b	.L103
 2529              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2530              		.loc 1 550 0
 2531 0f4c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2532 0f50 3349     		ldr	r1, .L262+4
 2533 0f52 1346     		mov	r3, r2
 2534 0f54 DB00     		lsls	r3, r3, #3
 2535 0f56 9B1A     		subs	r3, r3, r2
 2536 0f58 1B01     		lsls	r3, r3, #4
 2537 0f5a 0B44     		add	r3, r3, r1
 2538 0f5c 03F20F13 		addw	r3, r3, #271
 2539 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2540 0f62 032B     		cmp	r3, #3
 2541 0f64 00F0C480 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2542              		.loc 1 551 0
 2543 0f68 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2544 0f6c 2C49     		ldr	r1, .L262+4
 2545 0f6e 1346     		mov	r3, r2
 2546 0f70 DB00     		lsls	r3, r3, #3
 2547 0f72 9B1A     		subs	r3, r3, r2
 2548 0f74 1B01     		lsls	r3, r3, #4
 2549 0f76 0B44     		add	r3, r3, r1
 2550 0f78 B033     		adds	r3, r3, #176
 2551 0f7a 1B68     		ldr	r3, [r3]
 2552 0f7c 1846     		mov	r0, r3
 2553 0f7e FFF7FEFF 		bl	__aeabi_i2f
 2554 0f82 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 72


 2555 0f84 4FF08F41 		mov	r1, #1199570944
 2556 0f88 1846     		mov	r0, r3
 2557 0f8a FFF7FEFF 		bl	__aeabi_fdiv
 2558 0f8e 0346     		mov	r3, r0
 2559 0f90 1A46     		mov	r2, r3
 2560 0f92 07F12003 		add	r3, r7, #32
 2561 0f96 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2562              		.loc 1 552 0
 2563 0f98 0023     		movs	r3, #0
 2564 0f9a 87F8573C 		strb	r3, [r7, #3159]
 2565 0f9e 1AE0     		b	.L152
 2566              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2567              		.loc 1 553 0 discriminator 3
 2568 0fa0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2569 0fa4 3222     		movs	r2, #50
 2570 0fa6 02FB03F3 		mul	r3, r2, r3
 2571 0faa 1A1D     		adds	r2, r3, #4
 2572 0fac 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2573 0fb0 1A44     		add	r2, r2, r3
 2574 0fb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2575 0fb6 D31A     		subs	r3, r2, r3
 2576 0fb8 013B     		subs	r3, r3, #1
 2577 0fba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2578 0fbe 07F12001 		add	r1, r7, #32
 2579 0fc2 0A44     		add	r2, r2, r1
 2580 0fc4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2581 0fc6 07F15802 		add	r2, r7, #88
 2582 0fca D154     		strb	r1, [r2, r3]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2583              		.loc 1 552 0 discriminator 3
 2584 0fcc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2585 0fd0 0133     		adds	r3, r3, #1
 2586 0fd2 87F8573C 		strb	r3, [r7, #3159]
 2587              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2588              		.loc 1 552 0 is_stmt 0 discriminator 1
 2589 0fd6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2590 0fda 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2591 0fde 9A42     		cmp	r2, r3
 2592 0fe0 DED3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2593              		.loc 1 555 0 is_stmt 1
 2594 0fe2 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2595 0fe6 0E49     		ldr	r1, .L262+4
 2596 0fe8 1346     		mov	r3, r2
 2597 0fea DB00     		lsls	r3, r3, #3
 2598 0fec 9B1A     		subs	r3, r3, r2
 2599 0fee 1B01     		lsls	r3, r3, #4
 2600 0ff0 0B44     		add	r3, r3, r1
 2601 0ff2 B433     		adds	r3, r3, #180
 2602 0ff4 1B68     		ldr	r3, [r3]
 2603 0ff6 1846     		mov	r0, r3
 2604 0ff8 FFF7FEFF 		bl	__aeabi_i2f
 2605 0ffc 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 73


 2606 0ffe 4FF08F41 		mov	r1, #1199570944
 2607 1002 1846     		mov	r0, r3
 2608 1004 FFF7FEFF 		bl	__aeabi_fdiv
 2609 1008 0346     		mov	r3, r0
 2610 100a 1A46     		mov	r2, r3
 2611 100c 07F12003 		add	r3, r7, #32
 2612 1010 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2613              		.loc 1 556 0
 2614 1012 0023     		movs	r3, #0
 2615 1014 87F8573C 		strb	r3, [r7, #3159]
 2616 1018 22E0     		b	.L154
 2617              	.L263:
 2618 101a 00BF     		.align	2
 2619              	.L262:
 2620 101c 00000000 		.word	g_mem
 2621 1020 00000000 		.word	c_mem
 2622              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2623              		.loc 1 557 0 discriminator 3
 2624 1024 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2625 1028 3222     		movs	r2, #50
 2626 102a 02FB03F3 		mul	r3, r2, r3
 2627 102e 1A1D     		adds	r2, r3, #4
 2628 1030 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2629 1034 1A44     		add	r2, r2, r3
 2630 1036 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2631 103a 1A44     		add	r2, r2, r3
 2632 103c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2633 1040 D31A     		subs	r3, r2, r3
 2634 1042 013B     		subs	r3, r3, #1
 2635 1044 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2636 1048 07F12001 		add	r1, r7, #32
 2637 104c 0A44     		add	r2, r2, r1
 2638 104e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2639 1050 07F15802 		add	r2, r7, #88
 2640 1054 D154     		strb	r1, [r2, r3]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2641              		.loc 1 556 0 discriminator 3
 2642 1056 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2643 105a 0133     		adds	r3, r3, #1
 2644 105c 87F8573C 		strb	r3, [r7, #3159]
 2645              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2646              		.loc 1 556 0 is_stmt 0 discriminator 1
 2647 1060 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2648 1064 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2649 1068 9A42     		cmp	r2, r3
 2650 106a DBD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2651              		.loc 1 559 0 is_stmt 1
 2652 106c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2653 1070 D249     		ldr	r1, .L264
 2654 1072 1346     		mov	r3, r2
 2655 1074 DB00     		lsls	r3, r3, #3
 2656 1076 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 74


 2657 1078 1B01     		lsls	r3, r3, #4
 2658 107a 0B44     		add	r3, r3, r1
 2659 107c B833     		adds	r3, r3, #184
 2660 107e 1B68     		ldr	r3, [r3]
 2661 1080 1846     		mov	r0, r3
 2662 1082 FFF7FEFF 		bl	__aeabi_i2f
 2663 1086 0346     		mov	r3, r0
 2664 1088 4FF08F41 		mov	r1, #1199570944
 2665 108c 1846     		mov	r0, r3
 2666 108e FFF7FEFF 		bl	__aeabi_fdiv
 2667 1092 0346     		mov	r3, r0
 2668 1094 1A46     		mov	r2, r3
 2669 1096 07F12003 		add	r3, r7, #32
 2670 109a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2671              		.loc 1 560 0
 2672 109c 0023     		movs	r3, #0
 2673 109e 87F8573C 		strb	r3, [r7, #3159]
 2674 10a2 1EE0     		b	.L156
 2675              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2676              		.loc 1 561 0 discriminator 3
 2677 10a4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2678 10a8 3222     		movs	r2, #50
 2679 10aa 02FB03F3 		mul	r3, r2, r3
 2680 10ae 1A1D     		adds	r2, r3, #4
 2681 10b0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2682 10b4 5B00     		lsls	r3, r3, #1
 2683 10b6 1A44     		add	r2, r2, r3
 2684 10b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2685 10bc 1A44     		add	r2, r2, r3
 2686 10be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2687 10c2 D31A     		subs	r3, r2, r3
 2688 10c4 013B     		subs	r3, r3, #1
 2689 10c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2690 10ca 07F12001 		add	r1, r7, #32
 2691 10ce 0A44     		add	r2, r2, r1
 2692 10d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2693 10d2 07F15802 		add	r2, r7, #88
 2694 10d6 D154     		strb	r1, [r2, r3]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2695              		.loc 1 560 0 discriminator 3
 2696 10d8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2697 10dc 0133     		adds	r3, r3, #1
 2698 10de 87F8573C 		strb	r3, [r7, #3159]
 2699              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2700              		.loc 1 560 0 is_stmt 0 discriminator 1
 2701 10e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2702 10e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2703 10ea 9A42     		cmp	r2, r3
 2704 10ec DAD3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 75


 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 2705              		.loc 1 578 0 is_stmt 1
 2706 10ee 4AE3     		b	.L103
 2707              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2708              		.loc 1 565 0
 2709 10f0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2710 10f4 B149     		ldr	r1, .L264
 2711 10f6 1346     		mov	r3, r2
 2712 10f8 DB00     		lsls	r3, r3, #3
 2713 10fa 9B1A     		subs	r3, r3, r2
 2714 10fc 1B01     		lsls	r3, r3, #4
 2715 10fe 0B44     		add	r3, r3, r1
 2716 1100 C833     		adds	r3, r3, #200
 2717 1102 1B68     		ldr	r3, [r3]
 2718 1104 1846     		mov	r0, r3
 2719 1106 FFF7FEFF 		bl	__aeabi_i2f
 2720 110a 0346     		mov	r3, r0
 2721 110c 4FF08F41 		mov	r1, #1199570944
 2722 1110 1846     		mov	r0, r3
 2723 1112 FFF7FEFF 		bl	__aeabi_fdiv
 2724 1116 0346     		mov	r3, r0
 2725 1118 1A46     		mov	r2, r3
 2726 111a 07F12003 		add	r3, r7, #32
 2727 111e 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2728              		.loc 1 566 0
 2729 1120 0023     		movs	r3, #0
 2730 1122 87F8573C 		strb	r3, [r7, #3159]
 2731 1126 1AE0     		b	.L159
 2732              	.L160:
 567:..\src/command_processing.c ****                             }
 2733              		.loc 1 567 0 discriminator 3
 2734 1128 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2735 112c 3222     		movs	r2, #50
 2736 112e 02FB03F3 		mul	r3, r2, r3
 2737 1132 1A1D     		adds	r2, r3, #4
 2738 1134 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2739 1138 1A44     		add	r2, r2, r3
 2740 113a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2741 113e D31A     		subs	r3, r2, r3
 2742 1140 013B     		subs	r3, r3, #1
 2743 1142 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2744 1146 07F12001 		add	r1, r7, #32
 2745 114a 0A44     		add	r2, r2, r1
 2746 114c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 76


 2747 114e 07F15802 		add	r2, r7, #88
 2748 1152 D154     		strb	r1, [r2, r3]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2749              		.loc 1 566 0 discriminator 3
 2750 1154 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2751 1158 0133     		adds	r3, r3, #1
 2752 115a 87F8573C 		strb	r3, [r7, #3159]
 2753              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2754              		.loc 1 566 0 is_stmt 0 discriminator 1
 2755 115e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2756 1162 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2757 1166 9A42     		cmp	r2, r3
 2758 1168 DED3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2759              		.loc 1 569 0 is_stmt 1
 2760 116a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2761 116e 9349     		ldr	r1, .L264
 2762 1170 1346     		mov	r3, r2
 2763 1172 DB00     		lsls	r3, r3, #3
 2764 1174 9B1A     		subs	r3, r3, r2
 2765 1176 1B01     		lsls	r3, r3, #4
 2766 1178 0B44     		add	r3, r3, r1
 2767 117a CC33     		adds	r3, r3, #204
 2768 117c 1B68     		ldr	r3, [r3]
 2769 117e 1846     		mov	r0, r3
 2770 1180 FFF7FEFF 		bl	__aeabi_i2f
 2771 1184 0346     		mov	r3, r0
 2772 1186 4FF08F41 		mov	r1, #1199570944
 2773 118a 1846     		mov	r0, r3
 2774 118c FFF7FEFF 		bl	__aeabi_fdiv
 2775 1190 0346     		mov	r3, r0
 2776 1192 1A46     		mov	r2, r3
 2777 1194 07F12003 		add	r3, r7, #32
 2778 1198 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2779              		.loc 1 570 0
 2780 119a 0023     		movs	r3, #0
 2781 119c 87F8573C 		strb	r3, [r7, #3159]
 2782 11a0 1DE0     		b	.L161
 2783              	.L162:
 571:..\src/command_processing.c ****                             }
 2784              		.loc 1 571 0 discriminator 3
 2785 11a2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2786 11a6 3222     		movs	r2, #50
 2787 11a8 02FB03F3 		mul	r3, r2, r3
 2788 11ac 1A1D     		adds	r2, r3, #4
 2789 11ae 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2790 11b2 1A44     		add	r2, r2, r3
 2791 11b4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2792 11b8 1A44     		add	r2, r2, r3
 2793 11ba 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2794 11be D31A     		subs	r3, r2, r3
 2795 11c0 013B     		subs	r3, r3, #1
 2796 11c2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2797 11c6 07F12001 		add	r1, r7, #32
 2798 11ca 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 77


 2799 11cc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2800 11ce 07F15802 		add	r2, r7, #88
 2801 11d2 D154     		strb	r1, [r2, r3]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2802              		.loc 1 570 0 discriminator 3
 2803 11d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2804 11d8 0133     		adds	r3, r3, #1
 2805 11da 87F8573C 		strb	r3, [r7, #3159]
 2806              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2807              		.loc 1 570 0 is_stmt 0 discriminator 1
 2808 11de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2809 11e2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2810 11e6 9A42     		cmp	r2, r3
 2811 11e8 DBD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2812              		.loc 1 573 0 is_stmt 1
 2813 11ea 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2814 11ee 7349     		ldr	r1, .L264
 2815 11f0 1346     		mov	r3, r2
 2816 11f2 DB00     		lsls	r3, r3, #3
 2817 11f4 9B1A     		subs	r3, r3, r2
 2818 11f6 1B01     		lsls	r3, r3, #4
 2819 11f8 0B44     		add	r3, r3, r1
 2820 11fa D033     		adds	r3, r3, #208
 2821 11fc 1B68     		ldr	r3, [r3]
 2822 11fe 1846     		mov	r0, r3
 2823 1200 FFF7FEFF 		bl	__aeabi_i2f
 2824 1204 0346     		mov	r3, r0
 2825 1206 4FF08F41 		mov	r1, #1199570944
 2826 120a 1846     		mov	r0, r3
 2827 120c FFF7FEFF 		bl	__aeabi_fdiv
 2828 1210 0346     		mov	r3, r0
 2829 1212 1A46     		mov	r2, r3
 2830 1214 07F12003 		add	r3, r7, #32
 2831 1218 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2832              		.loc 1 574 0
 2833 121a 0023     		movs	r3, #0
 2834 121c 87F8573C 		strb	r3, [r7, #3159]
 2835 1220 1EE0     		b	.L163
 2836              	.L164:
 575:..\src/command_processing.c ****                             }
 2837              		.loc 1 575 0 discriminator 3
 2838 1222 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2839 1226 3222     		movs	r2, #50
 2840 1228 02FB03F3 		mul	r3, r2, r3
 2841 122c 1A1D     		adds	r2, r3, #4
 2842 122e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2843 1232 5B00     		lsls	r3, r3, #1
 2844 1234 1A44     		add	r2, r2, r3
 2845 1236 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2846 123a 1A44     		add	r2, r2, r3
 2847 123c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2848 1240 D31A     		subs	r3, r2, r3
 2849 1242 013B     		subs	r3, r3, #1
 2850 1244 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 78


 2851 1248 07F12001 		add	r1, r7, #32
 2852 124c 0A44     		add	r2, r2, r1
 2853 124e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2854 1250 07F15802 		add	r2, r7, #88
 2855 1254 D154     		strb	r1, [r2, r3]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2856              		.loc 1 574 0 discriminator 3
 2857 1256 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2858 125a 0133     		adds	r3, r3, #1
 2859 125c 87F8573C 		strb	r3, [r7, #3159]
 2860              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2861              		.loc 1 574 0 is_stmt 0 discriminator 1
 2862 1260 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2863 1264 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2864 1268 9A42     		cmp	r2, r3
 2865 126a DAD3     		bcc	.L164
 2866              		.loc 1 578 0 is_stmt 1
 2867 126c 8BE2     		b	.L103
 2868              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2869              		.loc 1 581 0
 2870 126e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2871 1272 5249     		ldr	r1, .L264
 2872 1274 1346     		mov	r3, r2
 2873 1276 DB00     		lsls	r3, r3, #3
 2874 1278 9B1A     		subs	r3, r3, r2
 2875 127a 1B01     		lsls	r3, r3, #4
 2876 127c 0B44     		add	r3, r3, r1
 2877 127e 03F20F13 		addw	r3, r3, #271
 2878 1282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2879 1284 032B     		cmp	r3, #3
 2880 1286 00F0C180 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 2881              		.loc 1 582 0
 2882 128a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2883 128e 4B49     		ldr	r1, .L264
 2884 1290 1346     		mov	r3, r2
 2885 1292 DB00     		lsls	r3, r3, #3
 2886 1294 9B1A     		subs	r3, r3, r2
 2887 1296 1B01     		lsls	r3, r3, #4
 2888 1298 0B44     		add	r3, r3, r1
 2889 129a BC33     		adds	r3, r3, #188
 2890 129c 1B68     		ldr	r3, [r3]
 2891 129e 1846     		mov	r0, r3
 2892 12a0 FFF7FEFF 		bl	__aeabi_i2f
 2893 12a4 0346     		mov	r3, r0
 2894 12a6 4FF08F41 		mov	r1, #1199570944
 2895 12aa 1846     		mov	r0, r3
 2896 12ac FFF7FEFF 		bl	__aeabi_fdiv
 2897 12b0 0346     		mov	r3, r0
 2898 12b2 1A46     		mov	r2, r3
 2899 12b4 07F12003 		add	r3, r7, #32
 2900 12b8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 79


 2901              		.loc 1 583 0
 2902 12ba 0023     		movs	r3, #0
 2903 12bc 87F8573C 		strb	r3, [r7, #3159]
 2904 12c0 1AE0     		b	.L166
 2905              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2906              		.loc 1 584 0 discriminator 3
 2907 12c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2908 12c6 3222     		movs	r2, #50
 2909 12c8 02FB03F3 		mul	r3, r2, r3
 2910 12cc 1A1D     		adds	r2, r3, #4
 2911 12ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2912 12d2 1A44     		add	r2, r2, r3
 2913 12d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2914 12d8 D31A     		subs	r3, r2, r3
 2915 12da 013B     		subs	r3, r3, #1
 2916 12dc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2917 12e0 07F12001 		add	r1, r7, #32
 2918 12e4 0A44     		add	r2, r2, r1
 2919 12e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2920 12e8 07F15802 		add	r2, r7, #88
 2921 12ec D154     		strb	r1, [r2, r3]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2922              		.loc 1 583 0 discriminator 3
 2923 12ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2924 12f2 0133     		adds	r3, r3, #1
 2925 12f4 87F8573C 		strb	r3, [r7, #3159]
 2926              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2927              		.loc 1 583 0 is_stmt 0 discriminator 1
 2928 12f8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2929 12fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2930 1300 9A42     		cmp	r2, r3
 2931 1302 DED3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 2932              		.loc 1 586 0 is_stmt 1
 2933 1304 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2934 1308 2C49     		ldr	r1, .L264
 2935 130a 1346     		mov	r3, r2
 2936 130c DB00     		lsls	r3, r3, #3
 2937 130e 9B1A     		subs	r3, r3, r2
 2938 1310 1B01     		lsls	r3, r3, #4
 2939 1312 0B44     		add	r3, r3, r1
 2940 1314 C033     		adds	r3, r3, #192
 2941 1316 1B68     		ldr	r3, [r3]
 2942 1318 1846     		mov	r0, r3
 2943 131a FFF7FEFF 		bl	__aeabi_i2f
 2944 131e 0346     		mov	r3, r0
 2945 1320 4FF08F41 		mov	r1, #1199570944
 2946 1324 1846     		mov	r0, r3
 2947 1326 FFF7FEFF 		bl	__aeabi_fdiv
 2948 132a 0346     		mov	r3, r0
 2949 132c 1A46     		mov	r2, r3
 2950 132e 07F12003 		add	r3, r7, #32
 2951 1332 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 80


 2952              		.loc 1 587 0
 2953 1334 0023     		movs	r3, #0
 2954 1336 87F8573C 		strb	r3, [r7, #3159]
 2955 133a 1DE0     		b	.L168
 2956              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2957              		.loc 1 588 0 discriminator 3
 2958 133c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2959 1340 3222     		movs	r2, #50
 2960 1342 02FB03F3 		mul	r3, r2, r3
 2961 1346 1A1D     		adds	r2, r3, #4
 2962 1348 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2963 134c 1A44     		add	r2, r2, r3
 2964 134e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2965 1352 1A44     		add	r2, r2, r3
 2966 1354 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2967 1358 D31A     		subs	r3, r2, r3
 2968 135a 013B     		subs	r3, r3, #1
 2969 135c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2970 1360 07F12001 		add	r1, r7, #32
 2971 1364 0A44     		add	r2, r2, r1
 2972 1366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2973 1368 07F15802 		add	r2, r7, #88
 2974 136c D154     		strb	r1, [r2, r3]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2975              		.loc 1 587 0 discriminator 3
 2976 136e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2977 1372 0133     		adds	r3, r3, #1
 2978 1374 87F8573C 		strb	r3, [r7, #3159]
 2979              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2980              		.loc 1 587 0 is_stmt 0 discriminator 1
 2981 1378 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2982 137c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2983 1380 9A42     		cmp	r2, r3
 2984 1382 DBD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 2985              		.loc 1 590 0 is_stmt 1
 2986 1384 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2987 1388 0C49     		ldr	r1, .L264
 2988 138a 1346     		mov	r3, r2
 2989 138c DB00     		lsls	r3, r3, #3
 2990 138e 9B1A     		subs	r3, r3, r2
 2991 1390 1B01     		lsls	r3, r3, #4
 2992 1392 0B44     		add	r3, r3, r1
 2993 1394 C433     		adds	r3, r3, #196
 2994 1396 1B68     		ldr	r3, [r3]
 2995 1398 1846     		mov	r0, r3
 2996 139a FFF7FEFF 		bl	__aeabi_i2f
 2997 139e 0346     		mov	r3, r0
 2998 13a0 4FF08F41 		mov	r1, #1199570944
 2999 13a4 1846     		mov	r0, r3
 3000 13a6 FFF7FEFF 		bl	__aeabi_fdiv
 3001 13aa 0346     		mov	r3, r0
 3002 13ac 1A46     		mov	r2, r3
 3003 13ae 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 81


 3004 13b2 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3005              		.loc 1 591 0
 3006 13b4 0023     		movs	r3, #0
 3007 13b6 87F8573C 		strb	r3, [r7, #3159]
 3008 13ba 20E0     		b	.L170
 3009              	.L265:
 3010              		.align	2
 3011              	.L264:
 3012 13bc 00000000 		.word	c_mem
 3013              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3014              		.loc 1 592 0 discriminator 3
 3015 13c0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3016 13c4 3222     		movs	r2, #50
 3017 13c6 02FB03F3 		mul	r3, r2, r3
 3018 13ca 1A1D     		adds	r2, r3, #4
 3019 13cc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3020 13d0 5B00     		lsls	r3, r3, #1
 3021 13d2 1A44     		add	r2, r2, r3
 3022 13d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3023 13d8 1A44     		add	r2, r2, r3
 3024 13da 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3025 13de D31A     		subs	r3, r2, r3
 3026 13e0 013B     		subs	r3, r3, #1
 3027 13e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3028 13e6 07F12001 		add	r1, r7, #32
 3029 13ea 0A44     		add	r2, r2, r1
 3030 13ec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3031 13ee 07F15802 		add	r2, r7, #88
 3032 13f2 D154     		strb	r1, [r2, r3]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3033              		.loc 1 591 0 discriminator 3
 3034 13f4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3035 13f8 0133     		adds	r3, r3, #1
 3036 13fa 87F8573C 		strb	r3, [r7, #3159]
 3037              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3038              		.loc 1 591 0 is_stmt 0 discriminator 1
 3039 13fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3040 1402 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3041 1406 9A42     		cmp	r2, r3
 3042 1408 DAD3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 82


 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3043              		.loc 1 609 0 is_stmt 1
 3044 140a BCE1     		b	.L103
 3045              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3046              		.loc 1 596 0
 3047 140c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3048 1410 DA49     		ldr	r1, .L266
 3049 1412 1346     		mov	r3, r2
 3050 1414 DB00     		lsls	r3, r3, #3
 3051 1416 9B1A     		subs	r3, r3, r2
 3052 1418 1B01     		lsls	r3, r3, #4
 3053 141a 0B44     		add	r3, r3, r1
 3054 141c D433     		adds	r3, r3, #212
 3055 141e 1B68     		ldr	r3, [r3]
 3056 1420 1846     		mov	r0, r3
 3057 1422 FFF7FEFF 		bl	__aeabi_i2f
 3058 1426 0346     		mov	r3, r0
 3059 1428 4FF08F41 		mov	r1, #1199570944
 3060 142c 1846     		mov	r0, r3
 3061 142e FFF7FEFF 		bl	__aeabi_fdiv
 3062 1432 0346     		mov	r3, r0
 3063 1434 1A46     		mov	r2, r3
 3064 1436 07F12003 		add	r3, r7, #32
 3065 143a 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3066              		.loc 1 597 0
 3067 143c 0023     		movs	r3, #0
 3068 143e 87F8573C 		strb	r3, [r7, #3159]
 3069 1442 1AE0     		b	.L173
 3070              	.L174:
 598:..\src/command_processing.c ****                             }
 3071              		.loc 1 598 0 discriminator 3
 3072 1444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3073 1448 3222     		movs	r2, #50
 3074 144a 02FB03F3 		mul	r3, r2, r3
 3075 144e 1A1D     		adds	r2, r3, #4
 3076 1450 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3077 1454 1A44     		add	r2, r2, r3
 3078 1456 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3079 145a D31A     		subs	r3, r2, r3
 3080 145c 013B     		subs	r3, r3, #1
 3081 145e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3082 1462 07F12001 		add	r1, r7, #32
 3083 1466 0A44     		add	r2, r2, r1
 3084 1468 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3085 146a 07F15802 		add	r2, r7, #88
 3086 146e D154     		strb	r1, [r2, r3]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3087              		.loc 1 597 0 discriminator 3
 3088 1470 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3089 1474 0133     		adds	r3, r3, #1
 3090 1476 87F8573C 		strb	r3, [r7, #3159]
 3091              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 83


 3092              		.loc 1 597 0 is_stmt 0 discriminator 1
 3093 147a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3094 147e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3095 1482 9A42     		cmp	r2, r3
 3096 1484 DED3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3097              		.loc 1 600 0 is_stmt 1
 3098 1486 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3099 148a BC49     		ldr	r1, .L266
 3100 148c 1346     		mov	r3, r2
 3101 148e DB00     		lsls	r3, r3, #3
 3102 1490 9B1A     		subs	r3, r3, r2
 3103 1492 1B01     		lsls	r3, r3, #4
 3104 1494 0B44     		add	r3, r3, r1
 3105 1496 D833     		adds	r3, r3, #216
 3106 1498 1B68     		ldr	r3, [r3]
 3107 149a 1846     		mov	r0, r3
 3108 149c FFF7FEFF 		bl	__aeabi_i2f
 3109 14a0 0346     		mov	r3, r0
 3110 14a2 4FF08F41 		mov	r1, #1199570944
 3111 14a6 1846     		mov	r0, r3
 3112 14a8 FFF7FEFF 		bl	__aeabi_fdiv
 3113 14ac 0346     		mov	r3, r0
 3114 14ae 1A46     		mov	r2, r3
 3115 14b0 07F12003 		add	r3, r7, #32
 3116 14b4 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3117              		.loc 1 601 0
 3118 14b6 0023     		movs	r3, #0
 3119 14b8 87F8573C 		strb	r3, [r7, #3159]
 3120 14bc 1DE0     		b	.L175
 3121              	.L176:
 602:..\src/command_processing.c ****                             }
 3122              		.loc 1 602 0 discriminator 3
 3123 14be 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3124 14c2 3222     		movs	r2, #50
 3125 14c4 02FB03F3 		mul	r3, r2, r3
 3126 14c8 1A1D     		adds	r2, r3, #4
 3127 14ca 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3128 14ce 1A44     		add	r2, r2, r3
 3129 14d0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3130 14d4 1A44     		add	r2, r2, r3
 3131 14d6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3132 14da D31A     		subs	r3, r2, r3
 3133 14dc 013B     		subs	r3, r3, #1
 3134 14de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3135 14e2 07F12001 		add	r1, r7, #32
 3136 14e6 0A44     		add	r2, r2, r1
 3137 14e8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3138 14ea 07F15802 		add	r2, r7, #88
 3139 14ee D154     		strb	r1, [r2, r3]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3140              		.loc 1 601 0 discriminator 3
 3141 14f0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3142 14f4 0133     		adds	r3, r3, #1
 3143 14f6 87F8573C 		strb	r3, [r7, #3159]
 3144              	.L175:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 84


 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3145              		.loc 1 601 0 is_stmt 0 discriminator 1
 3146 14fa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3147 14fe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3148 1502 9A42     		cmp	r2, r3
 3149 1504 DBD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3150              		.loc 1 604 0 is_stmt 1
 3151 1506 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3152 150a 9C49     		ldr	r1, .L266
 3153 150c 1346     		mov	r3, r2
 3154 150e DB00     		lsls	r3, r3, #3
 3155 1510 9B1A     		subs	r3, r3, r2
 3156 1512 1B01     		lsls	r3, r3, #4
 3157 1514 0B44     		add	r3, r3, r1
 3158 1516 DC33     		adds	r3, r3, #220
 3159 1518 1B68     		ldr	r3, [r3]
 3160 151a 1846     		mov	r0, r3
 3161 151c FFF7FEFF 		bl	__aeabi_i2f
 3162 1520 0346     		mov	r3, r0
 3163 1522 4FF08F41 		mov	r1, #1199570944
 3164 1526 1846     		mov	r0, r3
 3165 1528 FFF7FEFF 		bl	__aeabi_fdiv
 3166 152c 0346     		mov	r3, r0
 3167 152e 1A46     		mov	r2, r3
 3168 1530 07F12003 		add	r3, r7, #32
 3169 1534 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3170              		.loc 1 605 0
 3171 1536 0023     		movs	r3, #0
 3172 1538 87F8573C 		strb	r3, [r7, #3159]
 3173 153c 1EE0     		b	.L177
 3174              	.L178:
 606:..\src/command_processing.c ****                             }
 3175              		.loc 1 606 0 discriminator 3
 3176 153e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3177 1542 3222     		movs	r2, #50
 3178 1544 02FB03F3 		mul	r3, r2, r3
 3179 1548 1A1D     		adds	r2, r3, #4
 3180 154a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3181 154e 5B00     		lsls	r3, r3, #1
 3182 1550 1A44     		add	r2, r2, r3
 3183 1552 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3184 1556 1A44     		add	r2, r2, r3
 3185 1558 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3186 155c D31A     		subs	r3, r2, r3
 3187 155e 013B     		subs	r3, r3, #1
 3188 1560 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3189 1564 07F12001 		add	r1, r7, #32
 3190 1568 0A44     		add	r2, r2, r1
 3191 156a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3192 156c 07F15802 		add	r2, r7, #88
 3193 1570 D154     		strb	r1, [r2, r3]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3194              		.loc 1 605 0 discriminator 3
 3195 1572 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3196 1576 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 85


 3197 1578 87F8573C 		strb	r3, [r7, #3159]
 3198              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3199              		.loc 1 605 0 is_stmt 0 discriminator 1
 3200 157c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3201 1580 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3202 1584 9A42     		cmp	r2, r3
 3203 1586 DAD3     		bcc	.L178
 3204              		.loc 1 609 0 is_stmt 1
 3205 1588 FDE0     		b	.L103
 3206              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 3207              		.loc 1 612 0
 3208 158a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3209 158e 7C49     		ldr	r1, .L266+4
 3210 1590 1346     		mov	r3, r2
 3211 1592 DB00     		lsls	r3, r3, #3
 3212 1594 9B1A     		subs	r3, r3, r2
 3213 1596 1B01     		lsls	r3, r3, #4
 3214 1598 0B44     		add	r3, r3, r1
 3215 159a 03F58873 		add	r3, r3, #272
 3216 159e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 15a0 1846     		mov	r0, r3
 3218 15a2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3219 15a6 7549     		ldr	r1, .L266
 3220 15a8 0346     		mov	r3, r0
 3221 15aa 5B00     		lsls	r3, r3, #1
 3222 15ac 0344     		add	r3, r3, r0
 3223 15ae 9B00     		lsls	r3, r3, #2
 3224 15b0 1344     		add	r3, r3, r2
 3225 15b2 6633     		adds	r3, r3, #102
 3226 15b4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3227 15b8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3228 15bc 7048     		ldr	r0, .L266+4
 3229 15be 1346     		mov	r3, r2
 3230 15c0 DB00     		lsls	r3, r3, #3
 3231 15c2 9B1A     		subs	r3, r3, r2
 3232 15c4 1B01     		lsls	r3, r3, #4
 3233 15c6 0344     		add	r3, r3, r0
 3234 15c8 03F58873 		add	r3, r3, #272
 3235 15cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3236 15ce 1C46     		mov	r4, r3
 3237 15d0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3238 15d4 6948     		ldr	r0, .L266
 3239 15d6 2346     		mov	r3, r4
 3240 15d8 5B00     		lsls	r3, r3, #1
 3241 15da 2344     		add	r3, r3, r4
 3242 15dc 1B01     		lsls	r3, r3, #4
 3243 15de 0344     		add	r3, r3, r0
 3244 15e0 1344     		add	r3, r3, r2
 3245 15e2 03F29513 		addw	r3, r3, #405
 3246 15e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3247 15e8 41FA03F3 		asr	r3, r1, r3
 3248 15ec 1AB2     		sxth	r2, r3
 3249 15ee 07F11E03 		add	r3, r7, #30
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 86


 3250 15f2 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3251              		.loc 1 613 0
 3252 15f4 0023     		movs	r3, #0
 3253 15f6 87F8563C 		strb	r3, [r7, #3158]
 3254 15fa 21E0     		b	.L179
 3255              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3256              		.loc 1 614 0 discriminator 3
 3257 15fc 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3258 1600 3222     		movs	r2, #50
 3259 1602 02FB03F3 		mul	r3, r2, r3
 3260 1606 1A1D     		adds	r2, r3, #4
 3261 1608 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3262 160c 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3263 1610 01FB03F3 		mul	r3, r1, r3
 3264 1614 1A44     		add	r2, r2, r3
 3265 1616 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3266 161a 1A44     		add	r2, r2, r3
 3267 161c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3268 1620 D31A     		subs	r3, r2, r3
 3269 1622 013B     		subs	r3, r3, #1
 3270 1624 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3271 1628 07F11E01 		add	r1, r7, #30
 3272 162c 0A44     		add	r2, r2, r1
 3273 162e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3274 1630 07F15802 		add	r2, r7, #88
 3275 1634 D154     		strb	r1, [r2, r3]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3276              		.loc 1 613 0 discriminator 3
 3277 1636 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3278 163a 0133     		adds	r3, r3, #1
 3279 163c 87F8563C 		strb	r3, [r7, #3158]
 3280              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3281              		.loc 1 613 0 is_stmt 0 discriminator 1
 3282 1640 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3283 1644 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3284 1648 9A42     		cmp	r2, r3
 3285 164a D7D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3286              		.loc 1 616 0 is_stmt 1
 3287 164c 9BE0     		b	.L103
 3288              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3289              		.loc 1 619 0
 3290 164e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3291 1652 4A49     		ldr	r1, .L266
 3292 1654 1346     		mov	r3, r2
 3293 1656 DB00     		lsls	r3, r3, #3
 3294 1658 9B1A     		subs	r3, r3, r2
 3295 165a 1B01     		lsls	r3, r3, #4
 3296 165c 0B44     		add	r3, r3, r1
 3297 165e E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 87


 3298 1660 1968     		ldr	r1, [r3]
 3299 1662 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3300 1666 4648     		ldr	r0, .L266+4
 3301 1668 1346     		mov	r3, r2
 3302 166a DB00     		lsls	r3, r3, #3
 3303 166c 9B1A     		subs	r3, r3, r2
 3304 166e 1B01     		lsls	r3, r3, #4
 3305 1670 0344     		add	r3, r3, r0
 3306 1672 03F58873 		add	r3, r3, #272
 3307 1676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3308 1678 1846     		mov	r0, r3
 3309 167a 404A     		ldr	r2, .L266
 3310 167c 0346     		mov	r3, r0
 3311 167e 5B00     		lsls	r3, r3, #1
 3312 1680 0344     		add	r3, r3, r0
 3313 1682 1B01     		lsls	r3, r3, #4
 3314 1684 1344     		add	r3, r3, r2
 3315 1686 03F29513 		addw	r3, r3, #405
 3316 168a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3317 168c 41FA03F2 		asr	r2, r1, r3
 3318 1690 07F11803 		add	r3, r7, #24
 3319 1694 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3320              		.loc 1 620 0
 3321 1696 0023     		movs	r3, #0
 3322 1698 87F8563C 		strb	r3, [r7, #3158]
 3323 169c 1AE0     		b	.L181
 3324              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3325              		.loc 1 621 0 discriminator 3
 3326 169e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3327 16a2 3222     		movs	r2, #50
 3328 16a4 02FB03F3 		mul	r3, r2, r3
 3329 16a8 1A1D     		adds	r2, r3, #4
 3330 16aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3331 16ae 1A44     		add	r2, r2, r3
 3332 16b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3333 16b4 D31A     		subs	r3, r2, r3
 3334 16b6 013B     		subs	r3, r3, #1
 3335 16b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3336 16bc 07F11801 		add	r1, r7, #24
 3337 16c0 0A44     		add	r2, r2, r1
 3338 16c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3339 16c4 07F15802 		add	r2, r7, #88
 3340 16c8 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3341              		.loc 1 620 0 discriminator 3
 3342 16ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3343 16ce 0133     		adds	r3, r3, #1
 3344 16d0 87F8563C 		strb	r3, [r7, #3158]
 3345              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3346              		.loc 1 620 0 is_stmt 0 discriminator 1
 3347 16d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3348 16d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3349 16dc 9A42     		cmp	r2, r3
 3350 16de DED3     		bcc	.L182
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 88


 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3351              		.loc 1 623 0 is_stmt 1
 3352 16e0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3353 16e4 2549     		ldr	r1, .L266
 3354 16e6 1346     		mov	r3, r2
 3355 16e8 DB00     		lsls	r3, r3, #3
 3356 16ea 9B1A     		subs	r3, r3, r2
 3357 16ec 1B01     		lsls	r3, r3, #4
 3358 16ee 0B44     		add	r3, r3, r1
 3359 16f0 E833     		adds	r3, r3, #232
 3360 16f2 1968     		ldr	r1, [r3]
 3361 16f4 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3362 16f8 2148     		ldr	r0, .L266+4
 3363 16fa 1346     		mov	r3, r2
 3364 16fc DB00     		lsls	r3, r3, #3
 3365 16fe 9B1A     		subs	r3, r3, r2
 3366 1700 1B01     		lsls	r3, r3, #4
 3367 1702 0344     		add	r3, r3, r0
 3368 1704 03F58873 		add	r3, r3, #272
 3369 1708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3370 170a 1846     		mov	r0, r3
 3371 170c 1B4A     		ldr	r2, .L266
 3372 170e 0346     		mov	r3, r0
 3373 1710 5B00     		lsls	r3, r3, #1
 3374 1712 0344     		add	r3, r3, r0
 3375 1714 1B01     		lsls	r3, r3, #4
 3376 1716 1344     		add	r3, r3, r2
 3377 1718 03F29513 		addw	r3, r3, #405
 3378 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3379 171e 41FA03F2 		asr	r2, r1, r3
 3380 1722 07F11803 		add	r3, r7, #24
 3381 1726 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3382              		.loc 1 624 0
 3383 1728 0023     		movs	r3, #0
 3384 172a 87F8563C 		strb	r3, [r7, #3158]
 3385 172e 1DE0     		b	.L183
 3386              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3387              		.loc 1 625 0 discriminator 3
 3388 1730 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3389 1734 3222     		movs	r2, #50
 3390 1736 02FB03F3 		mul	r3, r2, r3
 3391 173a 1A1D     		adds	r2, r3, #4
 3392 173c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3393 1740 1A44     		add	r2, r2, r3
 3394 1742 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3395 1746 1A44     		add	r2, r2, r3
 3396 1748 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3397 174c D31A     		subs	r3, r2, r3
 3398 174e 013B     		subs	r3, r3, #1
 3399 1750 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3400 1754 07F11801 		add	r1, r7, #24
 3401 1758 0A44     		add	r2, r2, r1
 3402 175a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3403 175c 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 89


 3404 1760 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3405              		.loc 1 624 0 discriminator 3
 3406 1762 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3407 1766 0133     		adds	r3, r3, #1
 3408 1768 87F8563C 		strb	r3, [r7, #3158]
 3409              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3410              		.loc 1 624 0 is_stmt 0 discriminator 1
 3411 176c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3412 1770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3413 1774 9A42     		cmp	r2, r3
 3414 1776 DBD3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 3415              		.loc 1 627 0 is_stmt 1
 3416 1778 05E0     		b	.L103
 3417              	.L267:
 3418 177a 00BF     		.align	2
 3419              	.L266:
 3420 177c 00000000 		.word	c_mem
 3421 1780 00000000 		.word	g_mem
 3422              	.L254:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 3423              		.loc 1 630 0
 3424 1784 00BF     		nop
 3425              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3426              		.loc 1 637 0
 3427 1786 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3428 178a 9B00     		lsls	r3, r3, #2
 3429 178c D7F8742C 		ldr	r2, [r7, #3188]
 3430 1790 1344     		add	r3, r3, r2
 3431 1792 1A68     		ldr	r2, [r3]
 3432 1794 07F12403 		add	r3, r7, #36
 3433 1798 1146     		mov	r1, r2
 3434 179a 1846     		mov	r0, r3
 3435 179c FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3436              		.loc 1 638 0
 3437 17a0 07F12403 		add	r3, r7, #36
 3438 17a4 1846     		mov	r0, r3
 3439 17a6 FFF7FEFF 		bl	strlen
 3440 17aa 0346     		mov	r3, r0
 3441 17ac 87F8523C 		strb	r3, [r7, #3154]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3442              		.loc 1 641 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 90


 3443 17b0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3444 17b4 07F10802 		add	r2, r7, #8
 3445 17b8 1268     		ldr	r2, [r2]
 3446 17ba 1344     		add	r3, r3, r2
 3447 17bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3448 17be 002B     		cmp	r3, #0
 3449 17c0 40F03783 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3450              		.loc 1 642 0
 3451 17c4 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3452 17c8 D7F8702C 		ldr	r2, [r7, #3184]
 3453 17cc 1344     		add	r3, r3, r2
 3454 17ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3455 17d0 013B     		subs	r3, r3, #1
 3456 17d2 092B     		cmp	r3, #9
 3457 17d4 00F22383 		bhi	.L186
 3458 17d8 01A2     		adr	r2, .L188
 3459 17da 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3460 17de 00BF     		.p2align 2
 3461              	.L188:
 3462 17e0 09180000 		.word	.L187+1
 3463 17e4 65190000 		.word	.L189+1
 3464 17e8 251A0000 		.word	.L190+1
 3465 17ec 6B1A0000 		.word	.L191+1
 3466 17f0 C11A0000 		.word	.L192+1
 3467 17f4 0F1B0000 		.word	.L193+1
 3468 17f8 1F1C0000 		.word	.L194+1
 3469 17fc 951C0000 		.word	.L195+1
 3470 1800 171D0000 		.word	.L196+1
 3471 1804 811D0000 		.word	.L197+1
 3472              		.p2align 1
 3473              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 3474              		.loc 1 644 0
 3475 1808 D7F8483C 		ldr	r3, [r7, #3144]
 3476 180c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3477 180e 062B     		cmp	r3, #6
 3478 1810 00F20083 		bhi	.L255
 3479 1814 01A2     		adr	r2, .L200
 3480 1816 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3481 181a 00BF     		.p2align 2
 3482              	.L200:
 3483 181c 39180000 		.word	.L199+1
 3484 1820 59180000 		.word	.L201+1
 3485 1824 7B180000 		.word	.L202+1
 3486 1828 A5180000 		.word	.L203+1
 3487 182c CD180000 		.word	.L204+1
 3488 1830 F3180000 		.word	.L205+1
 3489 1834 23190000 		.word	.L206+1
 3490              		.p2align 1
 3491              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 3492              		.loc 1 646 0
 3493 1838 07F12403 		add	r3, r7, #36
 3494 183c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 91


 3495 183e FFF7FEFF 		bl	strlen
 3496 1842 0346     		mov	r3, r0
 3497 1844 1A46     		mov	r2, r3
 3498 1846 07F12403 		add	r3, r7, #36
 3499 184a 1344     		add	r3, r3, r2
 3500 184c D54A     		ldr	r2, .L268
 3501 184e 1068     		ldr	r0, [r2]	@ unaligned
 3502 1850 1860     		str	r0, [r3]	@ unaligned
 3503 1852 1279     		ldrb	r2, [r2, #4]
 3504 1854 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 3505              		.loc 1 647 0
 3506 1856 84E0     		b	.L198
 3507              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3508              		.loc 1 649 0
 3509 1858 07F12403 		add	r3, r7, #36
 3510 185c 1846     		mov	r0, r3
 3511 185e FFF7FEFF 		bl	strlen
 3512 1862 0346     		mov	r3, r0
 3513 1864 1A46     		mov	r2, r3
 3514 1866 07F12403 		add	r3, r7, #36
 3515 186a 1344     		add	r3, r3, r2
 3516 186c CE49     		ldr	r1, .L268+4
 3517 186e 1A46     		mov	r2, r3
 3518 1870 0B46     		mov	r3, r1
 3519 1872 03CB     		ldmia	r3!, {r0, r1}
 3520 1874 1060     		str	r0, [r2]	@ unaligned
 3521 1876 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 3522              		.loc 1 650 0
 3523 1878 73E0     		b	.L198
 3524              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3525              		.loc 1 652 0
 3526 187a 07F12403 		add	r3, r7, #36
 3527 187e 1846     		mov	r0, r3
 3528 1880 FFF7FEFF 		bl	strlen
 3529 1884 0346     		mov	r3, r0
 3530 1886 1A46     		mov	r2, r3
 3531 1888 07F12403 		add	r3, r7, #36
 3532 188c 1344     		add	r3, r3, r2
 3533 188e C74A     		ldr	r2, .L268+8
 3534 1890 1D46     		mov	r5, r3
 3535 1892 1446     		mov	r4, r2
 3536 1894 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3537 1896 2860     		str	r0, [r5]	@ unaligned
 3538 1898 6960     		str	r1, [r5, #4]	@ unaligned
 3539 189a AA60     		str	r2, [r5, #8]	@ unaligned
 3540 189c EB60     		str	r3, [r5, #12]	@ unaligned
 3541 189e 2388     		ldrh	r3, [r4]	@ unaligned
 3542 18a0 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 3543              		.loc 1 653 0
 3544 18a2 5EE0     		b	.L198
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 92


 3545              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 3546              		.loc 1 655 0
 3547 18a4 07F12403 		add	r3, r7, #36
 3548 18a8 1846     		mov	r0, r3
 3549 18aa FFF7FEFF 		bl	strlen
 3550 18ae 0346     		mov	r3, r0
 3551 18b0 1A46     		mov	r2, r3
 3552 18b2 07F12403 		add	r3, r7, #36
 3553 18b6 1344     		add	r3, r3, r2
 3554 18b8 BD4A     		ldr	r2, .L268+12
 3555 18ba 1C46     		mov	r4, r3
 3556 18bc 1346     		mov	r3, r2
 3557 18be 07CB     		ldmia	r3!, {r0, r1, r2}
 3558 18c0 2060     		str	r0, [r4]	@ unaligned
 3559 18c2 6160     		str	r1, [r4, #4]	@ unaligned
 3560 18c4 A260     		str	r2, [r4, #8]	@ unaligned
 3561 18c6 1B88     		ldrh	r3, [r3]	@ unaligned
 3562 18c8 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 3563              		.loc 1 656 0
 3564 18ca 4AE0     		b	.L198
 3565              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3566              		.loc 1 658 0
 3567 18cc 07F12403 		add	r3, r7, #36
 3568 18d0 1846     		mov	r0, r3
 3569 18d2 FFF7FEFF 		bl	strlen
 3570 18d6 0346     		mov	r3, r0
 3571 18d8 1A46     		mov	r2, r3
 3572 18da 07F12403 		add	r3, r7, #36
 3573 18de 1344     		add	r3, r3, r2
 3574 18e0 B449     		ldr	r1, .L268+16
 3575 18e2 1A46     		mov	r2, r3
 3576 18e4 0B46     		mov	r3, r1
 3577 18e6 03CB     		ldmia	r3!, {r0, r1}
 3578 18e8 1060     		str	r0, [r2]	@ unaligned
 3579 18ea 5160     		str	r1, [r2, #4]	@ unaligned
 3580 18ec 1B88     		ldrh	r3, [r3]	@ unaligned
 3581 18ee 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 3582              		.loc 1 659 0
 3583 18f0 37E0     		b	.L198
 3584              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3585              		.loc 1 661 0
 3586 18f2 07F12403 		add	r3, r7, #36
 3587 18f6 1846     		mov	r0, r3
 3588 18f8 FFF7FEFF 		bl	strlen
 3589 18fc 0346     		mov	r3, r0
 3590 18fe 1A46     		mov	r2, r3
 3591 1900 07F12403 		add	r3, r7, #36
 3592 1904 1344     		add	r3, r3, r2
 3593 1906 AC4A     		ldr	r2, .L268+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 93


 3594 1908 1D46     		mov	r5, r3
 3595 190a 1446     		mov	r4, r2
 3596 190c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3597 190e 2860     		str	r0, [r5]	@ unaligned
 3598 1910 6960     		str	r1, [r5, #4]	@ unaligned
 3599 1912 AA60     		str	r2, [r5, #8]	@ unaligned
 3600 1914 EB60     		str	r3, [r5, #12]	@ unaligned
 3601 1916 2388     		ldrh	r3, [r4]	@ unaligned
 3602 1918 A278     		ldrb	r2, [r4, #2]
 3603 191a 2B82     		strh	r3, [r5, #16]	@ unaligned
 3604 191c 1346     		mov	r3, r2
 3605 191e AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 3606              		.loc 1 662 0
 3607 1920 1FE0     		b	.L198
 3608              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 3609              		.loc 1 664 0
 3610 1922 07F12403 		add	r3, r7, #36
 3611 1926 1846     		mov	r0, r3
 3612 1928 FFF7FEFF 		bl	strlen
 3613 192c 0346     		mov	r3, r0
 3614 192e 1A46     		mov	r2, r3
 3615 1930 07F12403 		add	r3, r7, #36
 3616 1934 1344     		add	r3, r3, r2
 3617 1936 A14A     		ldr	r2, .L268+24
 3618 1938 1446     		mov	r4, r2
 3619 193a 9E46     		mov	lr, r3
 3620 193c 04F1200C 		add	ip, r4, #32
 3621              	.L207:
 3622 1940 7546     		mov	r5, lr
 3623 1942 2646     		mov	r6, r4
 3624 1944 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3625 1946 2860     		str	r0, [r5]	@ unaligned
 3626 1948 6960     		str	r1, [r5, #4]	@ unaligned
 3627 194a AA60     		str	r2, [r5, #8]	@ unaligned
 3628 194c EB60     		str	r3, [r5, #12]	@ unaligned
 3629 194e 1034     		adds	r4, r4, #16
 3630 1950 0EF1100E 		add	lr, lr, #16
 3631 1954 6445     		cmp	r4, ip
 3632 1956 F3D1     		bne	.L207
 3633 1958 7246     		mov	r2, lr
 3634 195a 2346     		mov	r3, r4
 3635 195c 1B88     		ldrh	r3, [r3]	@ unaligned
 3636 195e 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 3637              		.loc 1 665 0
 3638 1960 00BF     		nop
 3639              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 3640              		.loc 1 667 0
 3641 1962 57E2     		b	.L255
 3642              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 94


 3643              		.loc 1 669 0
 3644 1964 D7F8483C 		ldr	r3, [r7, #3144]
 3645 1968 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3646 196a 032B     		cmp	r3, #3
 3647 196c 00F25482 		bhi	.L256
 3648 1970 01A2     		adr	r2, .L210
 3649 1972 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3650 1976 00BF     		.p2align 2
 3651              	.L210:
 3652 1978 89190000 		.word	.L209+1
 3653 197c AF190000 		.word	.L211+1
 3654 1980 CF190000 		.word	.L212+1
 3655 1984 F5190000 		.word	.L213+1
 3656              		.p2align 1
 3657              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3658              		.loc 1 671 0
 3659 1988 07F12403 		add	r3, r7, #36
 3660 198c 1846     		mov	r0, r3
 3661 198e FFF7FEFF 		bl	strlen
 3662 1992 0346     		mov	r3, r0
 3663 1994 1A46     		mov	r2, r3
 3664 1996 07F12403 		add	r3, r7, #36
 3665 199a 1344     		add	r3, r3, r2
 3666 199c 8849     		ldr	r1, .L268+28
 3667 199e 1A46     		mov	r2, r3
 3668 19a0 0B46     		mov	r3, r1
 3669 19a2 03CB     		ldmia	r3!, {r0, r1}
 3670 19a4 1060     		str	r0, [r2]	@ unaligned
 3671 19a6 5160     		str	r1, [r2, #4]	@ unaligned
 3672 19a8 1B88     		ldrh	r3, [r3]	@ unaligned
 3673 19aa 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 3674              		.loc 1 672 0
 3675 19ac 39E0     		b	.L208
 3676              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3677              		.loc 1 674 0
 3678 19ae 07F12403 		add	r3, r7, #36
 3679 19b2 1846     		mov	r0, r3
 3680 19b4 FFF7FEFF 		bl	strlen
 3681 19b8 0346     		mov	r3, r0
 3682 19ba 1A46     		mov	r2, r3
 3683 19bc 07F12403 		add	r3, r7, #36
 3684 19c0 1344     		add	r3, r3, r2
 3685 19c2 804A     		ldr	r2, .L268+32
 3686 19c4 1068     		ldr	r0, [r2]	@ unaligned
 3687 19c6 1860     		str	r0, [r3]	@ unaligned
 3688 19c8 1279     		ldrb	r2, [r2, #4]
 3689 19ca 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 3690              		.loc 1 675 0
 3691 19cc 29E0     		b	.L208
 3692              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 95


 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3693              		.loc 1 677 0
 3694 19ce 07F12403 		add	r3, r7, #36
 3695 19d2 1846     		mov	r0, r3
 3696 19d4 FFF7FEFF 		bl	strlen
 3697 19d8 0346     		mov	r3, r0
 3698 19da 1A46     		mov	r2, r3
 3699 19dc 07F12403 		add	r3, r7, #36
 3700 19e0 1344     		add	r3, r3, r2
 3701 19e2 7949     		ldr	r1, .L268+36
 3702 19e4 1A46     		mov	r2, r3
 3703 19e6 0B46     		mov	r3, r1
 3704 19e8 03CB     		ldmia	r3!, {r0, r1}
 3705 19ea 1060     		str	r0, [r2]	@ unaligned
 3706 19ec 5160     		str	r1, [r2, #4]	@ unaligned
 3707 19ee 1B78     		ldrb	r3, [r3]
 3708 19f0 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 3709              		.loc 1 678 0
 3710 19f2 16E0     		b	.L208
 3711              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3712              		.loc 1 680 0
 3713 19f4 07F12403 		add	r3, r7, #36
 3714 19f8 1846     		mov	r0, r3
 3715 19fa FFF7FEFF 		bl	strlen
 3716 19fe 0346     		mov	r3, r0
 3717 1a00 1A46     		mov	r2, r3
 3718 1a02 07F12403 		add	r3, r7, #36
 3719 1a06 1344     		add	r3, r3, r2
 3720 1a08 704A     		ldr	r2, .L268+40
 3721 1a0a 1D46     		mov	r5, r3
 3722 1a0c 1446     		mov	r4, r2
 3723 1a0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3724 1a10 2860     		str	r0, [r5]	@ unaligned
 3725 1a12 6960     		str	r1, [r5, #4]	@ unaligned
 3726 1a14 AA60     		str	r2, [r5, #8]	@ unaligned
 3727 1a16 EB60     		str	r3, [r5, #12]	@ unaligned
 3728 1a18 2068     		ldr	r0, [r4]	@ unaligned
 3729 1a1a 2861     		str	r0, [r5, #16]	@ unaligned
 3730 1a1c A388     		ldrh	r3, [r4, #4]	@ unaligned
 3731 1a1e AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 3732              		.loc 1 681 0
 3733 1a20 00BF     		nop
 3734              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 3735              		.loc 1 683 0
 3736 1a22 F9E1     		b	.L256
 3737              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 3738              		.loc 1 685 0
 3739 1a24 D7F8483C 		ldr	r3, [r7, #3144]
 3740 1a28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 96


 3741 1a2a 002B     		cmp	r3, #0
 3742 1a2c 0FD0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3743              		.loc 1 686 0
 3744 1a2e 07F12403 		add	r3, r7, #36
 3745 1a32 1846     		mov	r0, r3
 3746 1a34 FFF7FEFF 		bl	strlen
 3747 1a38 0346     		mov	r3, r0
 3748 1a3a 1A46     		mov	r2, r3
 3749 1a3c 07F12403 		add	r3, r7, #36
 3750 1a40 1344     		add	r3, r3, r2
 3751 1a42 634A     		ldr	r2, .L268+44
 3752 1a44 1068     		ldr	r0, [r2]	@ unaligned
 3753 1a46 1860     		str	r0, [r3]	@ unaligned
 3754 1a48 1279     		ldrb	r2, [r2, #4]
 3755 1a4a 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 3756              		.loc 1 691 0
 3757 1a4c E7E1     		b	.L186
 3758              	.L214:
 689:..\src/command_processing.c ****                     }
 3759              		.loc 1 689 0
 3760 1a4e 07F12403 		add	r3, r7, #36
 3761 1a52 1846     		mov	r0, r3
 3762 1a54 FFF7FEFF 		bl	strlen
 3763 1a58 0346     		mov	r3, r0
 3764 1a5a 1A46     		mov	r2, r3
 3765 1a5c 07F12403 		add	r3, r7, #36
 3766 1a60 1344     		add	r3, r3, r2
 3767 1a62 5C4A     		ldr	r2, .L268+48
 3768 1a64 1068     		ldr	r0, [r2]	@ unaligned
 3769 1a66 1860     		str	r0, [r3]	@ unaligned
 3770              		.loc 1 691 0
 3771 1a68 D9E1     		b	.L186
 3772              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 3773              		.loc 1 693 0
 3774 1a6a D7F8483C 		ldr	r3, [r7, #3144]
 3775 1a6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3776 1a70 002B     		cmp	r3, #0
 3777 1a72 02D0     		beq	.L217
 3778 1a74 012B     		cmp	r3, #1
 3779 1a76 12D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 3780              		.loc 1 701 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 97


 3781 1a78 D1E1     		b	.L186
 3782              	.L217:
 695:..\src/command_processing.c ****                         break;
 3783              		.loc 1 695 0
 3784 1a7a 07F12403 		add	r3, r7, #36
 3785 1a7e 1846     		mov	r0, r3
 3786 1a80 FFF7FEFF 		bl	strlen
 3787 1a84 0346     		mov	r3, r0
 3788 1a86 1A46     		mov	r2, r3
 3789 1a88 07F12403 		add	r3, r7, #36
 3790 1a8c 1344     		add	r3, r3, r2
 3791 1a8e 524A     		ldr	r2, .L268+52
 3792 1a90 1068     		ldr	r0, [r2]	@ unaligned
 3793 1a92 1860     		str	r0, [r3]	@ unaligned
 3794 1a94 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3795 1a96 9279     		ldrb	r2, [r2, #6]
 3796 1a98 9980     		strh	r1, [r3, #4]	@ unaligned
 3797 1a9a 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 3798              		.loc 1 696 0
 3799 1a9c 0FE0     		b	.L216
 3800              	.L218:
 698:..\src/command_processing.c ****                         break;
 3801              		.loc 1 698 0
 3802 1a9e 07F12403 		add	r3, r7, #36
 3803 1aa2 1846     		mov	r0, r3
 3804 1aa4 FFF7FEFF 		bl	strlen
 3805 1aa8 0346     		mov	r3, r0
 3806 1aaa 1A46     		mov	r2, r3
 3807 1aac 07F12403 		add	r3, r7, #36
 3808 1ab0 1344     		add	r3, r3, r2
 3809 1ab2 4A4A     		ldr	r2, .L268+56
 3810 1ab4 1068     		ldr	r0, [r2]	@ unaligned
 3811 1ab6 1860     		str	r0, [r3]	@ unaligned
 3812 1ab8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3813 1aba 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 3814              		.loc 1 699 0
 3815 1abc 00BF     		nop
 3816              	.L216:
 3817              		.loc 1 701 0
 3818 1abe AEE1     		b	.L186
 3819              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 3820              		.loc 1 703 0
 3821 1ac0 D7F8483C 		ldr	r3, [r7, #3144]
 3822 1ac4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3823 1ac6 002B     		cmp	r3, #0
 3824 1ac8 02D0     		beq	.L220
 3825 1aca 012B     		cmp	r3, #1
 3826 1acc 10D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 98


 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 3827              		.loc 1 711 0
 3828 1ace A6E1     		b	.L186
 3829              	.L220:
 705:..\src/command_processing.c ****                         break;
 3830              		.loc 1 705 0
 3831 1ad0 07F12403 		add	r3, r7, #36
 3832 1ad4 1846     		mov	r0, r3
 3833 1ad6 FFF7FEFF 		bl	strlen
 3834 1ada 0346     		mov	r3, r0
 3835 1adc 1A46     		mov	r2, r3
 3836 1ade 07F12403 		add	r3, r7, #36
 3837 1ae2 1344     		add	r3, r3, r2
 3838 1ae4 3E4A     		ldr	r2, .L268+60
 3839 1ae6 1068     		ldr	r0, [r2]	@ unaligned
 3840 1ae8 1860     		str	r0, [r3]	@ unaligned
 3841 1aea 1279     		ldrb	r2, [r2, #4]
 3842 1aec 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 3843              		.loc 1 706 0
 3844 1aee 0DE0     		b	.L219
 3845              	.L221:
 708:..\src/command_processing.c ****                         break;
 3846              		.loc 1 708 0
 3847 1af0 07F12403 		add	r3, r7, #36
 3848 1af4 1846     		mov	r0, r3
 3849 1af6 FFF7FEFF 		bl	strlen
 3850 1afa 0346     		mov	r3, r0
 3851 1afc 1A46     		mov	r2, r3
 3852 1afe 07F12403 		add	r3, r7, #36
 3853 1b02 1344     		add	r3, r3, r2
 3854 1b04 374A     		ldr	r2, .L268+64
 3855 1b06 1068     		ldr	r0, [r2]	@ unaligned
 3856 1b08 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 3857              		.loc 1 709 0
 3858 1b0a 00BF     		nop
 3859              	.L219:
 3860              		.loc 1 711 0
 3861 1b0c 87E1     		b	.L186
 3862              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
 713:..\src/command_processing.c ****                     switch(*m_addr){
 3863              		.loc 1 713 0
 3864 1b0e D7F8483C 		ldr	r3, [r7, #3144]
 3865 1b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3866 1b14 032B     		cmp	r3, #3
 3867 1b16 00F28181 		bhi	.L257
 3868 1b1a 01A2     		adr	r2, .L224
 3869 1b1c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3870              		.p2align 2
 3871              	.L224:
 3872 1b20 311B0000 		.word	.L223+1
 3873 1b24 511B0000 		.word	.L225+1
 3874 1b28 791B0000 		.word	.L226+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 99


 3875 1b2c F51B0000 		.word	.L227+1
 3876              		.p2align 1
 3877              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 3878              		.loc 1 715 0
 3879 1b30 07F12403 		add	r3, r7, #36
 3880 1b34 1846     		mov	r0, r3
 3881 1b36 FFF7FEFF 		bl	strlen
 3882 1b3a 0346     		mov	r3, r0
 3883 1b3c 1A46     		mov	r2, r3
 3884 1b3e 07F12403 		add	r3, r7, #36
 3885 1b42 1344     		add	r3, r3, r2
 3886 1b44 284A     		ldr	r2, .L268+68
 3887 1b46 1068     		ldr	r0, [r2]	@ unaligned
 3888 1b48 1860     		str	r0, [r3]	@ unaligned
 3889 1b4a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3890 1b4c 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 3891              		.loc 1 716 0
 3892 1b4e 65E0     		b	.L222
 3893              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 3894              		.loc 1 718 0
 3895 1b50 07F12403 		add	r3, r7, #36
 3896 1b54 1846     		mov	r0, r3
 3897 1b56 FFF7FEFF 		bl	strlen
 3898 1b5a 0346     		mov	r3, r0
 3899 1b5c 1A46     		mov	r2, r3
 3900 1b5e 07F12403 		add	r3, r7, #36
 3901 1b62 1344     		add	r3, r3, r2
 3902 1b64 214A     		ldr	r2, .L268+72
 3903 1b66 1C46     		mov	r4, r3
 3904 1b68 1346     		mov	r3, r2
 3905 1b6a 07CB     		ldmia	r3!, {r0, r1, r2}
 3906 1b6c 2060     		str	r0, [r4]	@ unaligned
 3907 1b6e 6160     		str	r1, [r4, #4]	@ unaligned
 3908 1b70 A260     		str	r2, [r4, #8]	@ unaligned
 3909 1b72 1B88     		ldrh	r3, [r3]	@ unaligned
 3910 1b74 A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 3911              		.loc 1 719 0
 3912 1b76 51E0     		b	.L222
 3913              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 3914              		.loc 1 721 0
 3915 1b78 07F12403 		add	r3, r7, #36
 3916 1b7c 1846     		mov	r0, r3
 3917 1b7e FFF7FEFF 		bl	strlen
 3918 1b82 0346     		mov	r3, r0
 3919 1b84 1A46     		mov	r2, r3
 3920 1b86 07F12403 		add	r3, r7, #36
 3921 1b8a 1344     		add	r3, r3, r2
 3922 1b8c 184A     		ldr	r2, .L268+76
 3923 1b8e 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 100


 3924 1b90 1446     		mov	r4, r2
 3925 1b92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3926 1b94 2860     		str	r0, [r5]	@ unaligned
 3927 1b96 6960     		str	r1, [r5, #4]	@ unaligned
 3928 1b98 AA60     		str	r2, [r5, #8]	@ unaligned
 3929 1b9a EB60     		str	r3, [r5, #12]	@ unaligned
 3930 1b9c 2388     		ldrh	r3, [r4]	@ unaligned
 3931 1b9e 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 3932              		.loc 1 722 0
 3933 1ba0 3CE0     		b	.L222
 3934              	.L269:
 3935 1ba2 00BF     		.align	2
 3936              	.L268:
 3937 1ba4 00000000 		.word	.LC81
 3938 1ba8 08000000 		.word	.LC82
 3939 1bac 10000000 		.word	.LC83
 3940 1bb0 24000000 		.word	.LC84
 3941 1bb4 34000000 		.word	.LC85
 3942 1bb8 40000000 		.word	.LC86
 3943 1bbc 54000000 		.word	.LC87
 3944 1bc0 78000000 		.word	.LC88
 3945 1bc4 84000000 		.word	.LC89
 3946 1bc8 8C000000 		.word	.LC90
 3947 1bcc 98000000 		.word	.LC91
 3948 1bd0 B0000000 		.word	.LC92
 3949 1bd4 B8000000 		.word	.LC93
 3950 1bd8 C0000000 		.word	.LC94
 3951 1bdc C8000000 		.word	.LC95
 3952 1be0 D0000000 		.word	.LC96
 3953 1be4 D8000000 		.word	.LC97
 3954 1be8 E0000000 		.word	.LC98
 3955 1bec E8000000 		.word	.LC99
 3956 1bf0 F8000000 		.word	.LC100
 3957              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 3958              		.loc 1 724 0
 3959 1bf4 07F12403 		add	r3, r7, #36
 3960 1bf8 1846     		mov	r0, r3
 3961 1bfa FFF7FEFF 		bl	strlen
 3962 1bfe 0346     		mov	r3, r0
 3963 1c00 1A46     		mov	r2, r3
 3964 1c02 07F12403 		add	r3, r7, #36
 3965 1c06 1344     		add	r3, r3, r2
 3966 1c08 CB4A     		ldr	r2, .L270
 3967 1c0a 1C46     		mov	r4, r3
 3968 1c0c 1346     		mov	r3, r2
 3969 1c0e 07CB     		ldmia	r3!, {r0, r1, r2}
 3970 1c10 2060     		str	r0, [r4]	@ unaligned
 3971 1c12 6160     		str	r1, [r4, #4]	@ unaligned
 3972 1c14 A260     		str	r2, [r4, #8]	@ unaligned
 3973 1c16 1B78     		ldrb	r3, [r3]
 3974 1c18 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 3975              		.loc 1 725 0
 3976 1c1a 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 101


 3977              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 3978              		.loc 1 727 0
 3979 1c1c FEE0     		b	.L257
 3980              	.L194:
 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 3981              		.loc 1 729 0
 3982 1c1e D7F8483C 		ldr	r3, [r7, #3144]
 3983 1c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3984 1c24 012B     		cmp	r3, #1
 3985 1c26 14D0     		beq	.L229
 3986 1c28 022B     		cmp	r3, #2
 3987 1c2a 22D0     		beq	.L230
 3988 1c2c 002B     		cmp	r3, #0
 3989 1c2e 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 3990              		.loc 1 740 0
 3991 1c30 2FE0     		b	.L232
 3992              	.L231:
 731:..\src/command_processing.c ****                             break;
 3993              		.loc 1 731 0
 3994 1c32 07F12403 		add	r3, r7, #36
 3995 1c36 1846     		mov	r0, r3
 3996 1c38 FFF7FEFF 		bl	strlen
 3997 1c3c 0346     		mov	r3, r0
 3998 1c3e 1A46     		mov	r2, r3
 3999 1c40 07F12403 		add	r3, r7, #36
 4000 1c44 1344     		add	r3, r3, r2
 4001 1c46 BD4A     		ldr	r2, .L270+4
 4002 1c48 1068     		ldr	r0, [r2]	@ unaligned
 4003 1c4a 1860     		str	r0, [r3]	@ unaligned
 4004 1c4c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4005 1c4e 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 4006              		.loc 1 732 0
 4007 1c50 1FE0     		b	.L232
 4008              	.L229:
 734:..\src/command_processing.c ****                             break;
 4009              		.loc 1 734 0
 4010 1c52 07F12403 		add	r3, r7, #36
 4011 1c56 1846     		mov	r0, r3
 4012 1c58 FFF7FEFF 		bl	strlen
 4013 1c5c 0346     		mov	r3, r0
 4014 1c5e 1A46     		mov	r2, r3
 4015 1c60 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 102


 4016 1c64 1344     		add	r3, r3, r2
 4017 1c66 B64A     		ldr	r2, .L270+8
 4018 1c68 1068     		ldr	r0, [r2]	@ unaligned
 4019 1c6a 1860     		str	r0, [r3]	@ unaligned
 4020 1c6c 1279     		ldrb	r2, [r2, #4]
 4021 1c6e 1A71     		strb	r2, [r3, #4]
 735:..\src/command_processing.c ****                         case 2: 
 4022              		.loc 1 735 0
 4023 1c70 0FE0     		b	.L232
 4024              	.L230:
 737:..\src/command_processing.c ****                             break;
 4025              		.loc 1 737 0
 4026 1c72 07F12403 		add	r3, r7, #36
 4027 1c76 1846     		mov	r0, r3
 4028 1c78 FFF7FEFF 		bl	strlen
 4029 1c7c 0346     		mov	r3, r0
 4030 1c7e 1A46     		mov	r2, r3
 4031 1c80 07F12403 		add	r3, r7, #36
 4032 1c84 1344     		add	r3, r3, r2
 4033 1c86 AF4A     		ldr	r2, .L270+12
 4034 1c88 1068     		ldr	r0, [r2]	@ unaligned
 4035 1c8a 1860     		str	r0, [r3]	@ unaligned
 4036 1c8c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4037 1c8e 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 4038              		.loc 1 738 0
 4039 1c90 00BF     		nop
 4040              	.L232:
 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 4041              		.loc 1 742 0 discriminator 12
 4042 1c92 C4E0     		b	.L186
 4043              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
 744:..\src/command_processing.c ****                     switch(*m_addr){
 4044              		.loc 1 744 0
 4045 1c94 D7F8483C 		ldr	r3, [r7, #3144]
 4046 1c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4047 1c9a 012B     		cmp	r3, #1
 4048 1c9c 18D0     		beq	.L234
 4049 1c9e 022B     		cmp	r3, #2
 4050 1ca0 28D0     		beq	.L235
 4051 1ca2 002B     		cmp	r3, #0
 4052 1ca4 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 4053              		.loc 1 755 0
 4054 1ca6 BAE0     		b	.L186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 103


 4055              	.L236:
 746:..\src/command_processing.c ****                         break;
 4056              		.loc 1 746 0
 4057 1ca8 07F12403 		add	r3, r7, #36
 4058 1cac 1846     		mov	r0, r3
 4059 1cae FFF7FEFF 		bl	strlen
 4060 1cb2 0346     		mov	r3, r0
 4061 1cb4 1A46     		mov	r2, r3
 4062 1cb6 07F12403 		add	r3, r7, #36
 4063 1cba 1344     		add	r3, r3, r2
 4064 1cbc A24A     		ldr	r2, .L270+16
 4065 1cbe 1C46     		mov	r4, r3
 4066 1cc0 1346     		mov	r3, r2
 4067 1cc2 07CB     		ldmia	r3!, {r0, r1, r2}
 4068 1cc4 2060     		str	r0, [r4]	@ unaligned
 4069 1cc6 6160     		str	r1, [r4, #4]	@ unaligned
 4070 1cc8 A260     		str	r2, [r4, #8]	@ unaligned
 4071 1cca 1B88     		ldrh	r3, [r3]	@ unaligned
 4072 1ccc A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 4073              		.loc 1 747 0
 4074 1cce 21E0     		b	.L233
 4075              	.L234:
 749:..\src/command_processing.c ****                         break;
 4076              		.loc 1 749 0
 4077 1cd0 07F12403 		add	r3, r7, #36
 4078 1cd4 1846     		mov	r0, r3
 4079 1cd6 FFF7FEFF 		bl	strlen
 4080 1cda 0346     		mov	r3, r0
 4081 1cdc 1A46     		mov	r2, r3
 4082 1cde 07F12403 		add	r3, r7, #36
 4083 1ce2 1344     		add	r3, r3, r2
 4084 1ce4 994A     		ldr	r2, .L270+20
 4085 1ce6 1068     		ldr	r0, [r2]	@ unaligned
 4086 1ce8 1860     		str	r0, [r3]	@ unaligned
 4087 1cea 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4088 1cec 9279     		ldrb	r2, [r2, #6]
 4089 1cee 9980     		strh	r1, [r3, #4]	@ unaligned
 4090 1cf0 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 4091              		.loc 1 750 0
 4092 1cf2 0FE0     		b	.L233
 4093              	.L235:
 752:..\src/command_processing.c ****                         break;
 4094              		.loc 1 752 0
 4095 1cf4 07F12403 		add	r3, r7, #36
 4096 1cf8 1846     		mov	r0, r3
 4097 1cfa FFF7FEFF 		bl	strlen
 4098 1cfe 0346     		mov	r3, r0
 4099 1d00 1A46     		mov	r2, r3
 4100 1d02 07F12403 		add	r3, r7, #36
 4101 1d06 1344     		add	r3, r3, r2
 4102 1d08 914A     		ldr	r2, .L270+24
 4103 1d0a 1068     		ldr	r0, [r2]	@ unaligned
 4104 1d0c 1860     		str	r0, [r3]	@ unaligned
 4105 1d0e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4106 1d10 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 104


 753:..\src/command_processing.c ****                     }   
 4107              		.loc 1 753 0
 4108 1d12 00BF     		nop
 4109              	.L233:
 4110              		.loc 1 755 0
 4111 1d14 83E0     		b	.L186
 4112              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 4113              		.loc 1 757 0
 4114 1d16 D7F8483C 		ldr	r3, [r7, #3144]
 4115 1d1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4116 1d1c 002B     		cmp	r3, #0
 4117 1d1e 02D0     		beq	.L238
 4118 1d20 012B     		cmp	r3, #1
 4119 1d22 15D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
 4120              		.loc 1 765 0
 4121 1d24 7BE0     		b	.L186
 4122              	.L238:
 759:..\src/command_processing.c ****                         break;
 4123              		.loc 1 759 0
 4124 1d26 07F12403 		add	r3, r7, #36
 4125 1d2a 1846     		mov	r0, r3
 4126 1d2c FFF7FEFF 		bl	strlen
 4127 1d30 0346     		mov	r3, r0
 4128 1d32 1A46     		mov	r2, r3
 4129 1d34 07F12403 		add	r3, r7, #36
 4130 1d38 1344     		add	r3, r3, r2
 4131 1d3a 864A     		ldr	r2, .L270+28
 4132 1d3c 1D46     		mov	r5, r3
 4133 1d3e 1446     		mov	r4, r2
 4134 1d40 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4135 1d42 2860     		str	r0, [r5]	@ unaligned
 4136 1d44 6960     		str	r1, [r5, #4]	@ unaligned
 4137 1d46 AA60     		str	r2, [r5, #8]	@ unaligned
 4138 1d48 EB60     		str	r3, [r5, #12]	@ unaligned
 4139 1d4a 2068     		ldr	r0, [r4]	@ unaligned
 4140 1d4c 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 4141              		.loc 1 760 0
 4142 1d4e 16E0     		b	.L237
 4143              	.L239:
 762:..\src/command_processing.c ****                         break;
 4144              		.loc 1 762 0
 4145 1d50 07F12403 		add	r3, r7, #36
 4146 1d54 1846     		mov	r0, r3
 4147 1d56 FFF7FEFF 		bl	strlen
 4148 1d5a 0346     		mov	r3, r0
 4149 1d5c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 105


 4150 1d5e 07F12403 		add	r3, r7, #36
 4151 1d62 1344     		add	r3, r3, r2
 4152 1d64 7C4A     		ldr	r2, .L270+32
 4153 1d66 1D46     		mov	r5, r3
 4154 1d68 1446     		mov	r4, r2
 4155 1d6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4156 1d6c 2860     		str	r0, [r5]	@ unaligned
 4157 1d6e 6960     		str	r1, [r5, #4]	@ unaligned
 4158 1d70 AA60     		str	r2, [r5, #8]	@ unaligned
 4159 1d72 EB60     		str	r3, [r5, #12]	@ unaligned
 4160 1d74 2068     		ldr	r0, [r4]	@ unaligned
 4161 1d76 2861     		str	r0, [r5, #16]	@ unaligned
 4162 1d78 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4163 1d7a AB82     		strh	r3, [r5, #20]	@ unaligned
 763:..\src/command_processing.c ****                     }
 4164              		.loc 1 763 0
 4165 1d7c 00BF     		nop
 4166              	.L237:
 4167              		.loc 1 765 0
 4168 1d7e 4EE0     		b	.L186
 4169              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 4170              		.loc 1 767 0
 4171 1d80 D7F8483C 		ldr	r3, [r7, #3144]
 4172 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4173 1d86 012B     		cmp	r3, #1
 4174 1d88 18D0     		beq	.L241
 4175 1d8a 022B     		cmp	r3, #2
 4176 1d8c 2BD0     		beq	.L242
 4177 1d8e 002B     		cmp	r3, #0
 4178 1d90 00D0     		beq	.L243
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                         case 2:
 775:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS \0");
 776:..\src/command_processing.c ****                     }
 777:..\src/command_processing.c ****                     break;
 4179              		.loc 1 777 0
 4180 1d92 44E0     		b	.L186
 4181              	.L243:
 769:..\src/command_processing.c ****                         break;
 4182              		.loc 1 769 0
 4183 1d94 07F12403 		add	r3, r7, #36
 4184 1d98 1846     		mov	r0, r3
 4185 1d9a FFF7FEFF 		bl	strlen
 4186 1d9e 0346     		mov	r3, r0
 4187 1da0 1A46     		mov	r2, r3
 4188 1da2 07F12403 		add	r3, r7, #36
 4189 1da6 1344     		add	r3, r3, r2
 4190 1da8 6C4A     		ldr	r2, .L270+36
 4191 1daa 1C46     		mov	r4, r3
 4192 1dac 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 106


 4193 1dae 07CB     		ldmia	r3!, {r0, r1, r2}
 4194 1db0 2060     		str	r0, [r4]	@ unaligned
 4195 1db2 6160     		str	r1, [r4, #4]	@ unaligned
 4196 1db4 A260     		str	r2, [r4, #8]	@ unaligned
 4197 1db6 1B88     		ldrh	r3, [r3]	@ unaligned
 4198 1db8 A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 4199              		.loc 1 770 0
 4200 1dba 2AE0     		b	.L240
 4201              	.L241:
 772:..\src/command_processing.c ****                         break;
 4202              		.loc 1 772 0
 4203 1dbc 07F12403 		add	r3, r7, #36
 4204 1dc0 1846     		mov	r0, r3
 4205 1dc2 FFF7FEFF 		bl	strlen
 4206 1dc6 0346     		mov	r3, r0
 4207 1dc8 1A46     		mov	r2, r3
 4208 1dca 07F12403 		add	r3, r7, #36
 4209 1dce 1344     		add	r3, r3, r2
 4210 1dd0 634A     		ldr	r2, .L270+40
 4211 1dd2 1D46     		mov	r5, r3
 4212 1dd4 1446     		mov	r4, r2
 4213 1dd6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4214 1dd8 2860     		str	r0, [r5]	@ unaligned
 4215 1dda 6960     		str	r1, [r5, #4]	@ unaligned
 4216 1ddc AA60     		str	r2, [r5, #8]	@ unaligned
 4217 1dde EB60     		str	r3, [r5, #12]	@ unaligned
 4218 1de0 2388     		ldrh	r3, [r4]	@ unaligned
 4219 1de2 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                         case 2:
 4220              		.loc 1 773 0
 4221 1de4 15E0     		b	.L240
 4222              	.L242:
 775:..\src/command_processing.c ****                     }
 4223              		.loc 1 775 0
 4224 1de6 07F12403 		add	r3, r7, #36
 4225 1dea 1846     		mov	r0, r3
 4226 1dec FFF7FEFF 		bl	strlen
 4227 1df0 0346     		mov	r3, r0
 4228 1df2 1A46     		mov	r2, r3
 4229 1df4 07F12403 		add	r3, r7, #36
 4230 1df8 1344     		add	r3, r3, r2
 4231 1dfa 5A4A     		ldr	r2, .L270+44
 4232 1dfc 1C46     		mov	r4, r3
 4233 1dfe 1346     		mov	r3, r2
 4234 1e00 07CB     		ldmia	r3!, {r0, r1, r2}
 4235 1e02 2060     		str	r0, [r4]	@ unaligned
 4236 1e04 6160     		str	r1, [r4, #4]	@ unaligned
 4237 1e06 A260     		str	r2, [r4, #8]	@ unaligned
 4238 1e08 1A88     		ldrh	r2, [r3]	@ unaligned
 4239 1e0a 9B78     		ldrb	r3, [r3, #2]
 4240 1e0c A281     		strh	r2, [r4, #12]	@ unaligned
 4241 1e0e A373     		strb	r3, [r4, #14]
 4242              		.loc 1 777 0
 4243 1e10 05E0     		b	.L186
 4244              	.L240:
 4245 1e12 04E0     		b	.L186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 107


 4246              	.L255:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 4247              		.loc 1 667 0
 4248 1e14 00BF     		nop
 4249 1e16 02E0     		b	.L186
 4250              	.L256:
 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4251              		.loc 1 683 0
 4252 1e18 00BF     		nop
 4253 1e1a 00E0     		b	.L186
 4254              	.L257:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4255              		.loc 1 727 0
 4256 1e1c 00BF     		nop
 4257              	.L186:
 778:..\src/command_processing.c ****             }
 779:..\src/command_processing.c ****             //Recomputes string lenght
 780:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 4258              		.loc 1 780 0
 4259 1e1e 07F12403 		add	r3, r7, #36
 4260 1e22 1846     		mov	r0, r3
 4261 1e24 FFF7FEFF 		bl	strlen
 4262 1e28 0346     		mov	r3, r0
 4263 1e2a DBB2     		uxtb	r3, r3
 4264 1e2c 0133     		adds	r3, r3, #1
 4265 1e2e 87F8523C 		strb	r3, [r7, #3154]
 4266              	.L185:
 781:..\src/command_processing.c ****         }
 782:..\src/command_processing.c **** 
 783:..\src/command_processing.c ****         // Add parameter string to packet
 784:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4267              		.loc 1 784 0
 4268 1e32 97F8523C 		ldrb	r3, [r7, #3154]
 4269 1e36 87F8573C 		strb	r3, [r7, #3159]
 4270 1e3a 26E0     		b	.L244
 4271              	.L245:
 785:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4272              		.loc 1 785 0 discriminator 3
 4273 1e3c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4274 1e40 3222     		movs	r2, #50
 4275 1e42 02FB03F3 		mul	r3, r2, r3
 4276 1e46 1A1D     		adds	r2, r3, #4
 4277 1e48 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4278 1e4c 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4279 1e50 381D     		adds	r0, r7, #4
 4280 1e52 0068     		ldr	r0, [r0]
 4281 1e54 0144     		add	r1, r1, r0
 4282 1e56 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4283 1e58 01FB03F3 		mul	r3, r1, r3
 4284 1e5c 1A44     		add	r2, r2, r3
 4285 1e5e 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4286 1e62 1A44     		add	r2, r2, r3
 4287 1e64 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4288 1e68 D31A     		subs	r3, r2, r3
 4289 1e6a 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4290 1e6e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 4291 1e72 8A1A     		subs	r2, r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 108


 4292 1e74 07F12401 		add	r1, r7, #36
 4293 1e78 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4294 1e7a 07F15802 		add	r2, r7, #88
 4295 1e7e D154     		strb	r1, [r2, r3]
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4296              		.loc 1 784 0 discriminator 3
 4297 1e80 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4298 1e84 013B     		subs	r3, r3, #1
 4299 1e86 87F8573C 		strb	r3, [r7, #3159]
 4300              	.L244:
 784:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4301              		.loc 1 784 0 is_stmt 0 discriminator 1
 4302 1e8a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4303 1e8e 002B     		cmp	r3, #0
 4304 1e90 D4D1     		bne	.L245
 786:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 787:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4305              		.loc 1 787 0 is_stmt 1
 4306 1e92 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4307 1e96 07F10802 		add	r2, r7, #8
 4308 1e9a 1268     		ldr	r2, [r2]
 4309 1e9c 1344     		add	r3, r3, r2
 4310 1e9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4311 1ea0 002B     		cmp	r3, #0
 4312 1ea2 21D1     		bne	.L246
 788:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4313              		.loc 1 788 0
 4314 1ea4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4315 1ea8 3222     		movs	r2, #50
 4316 1eaa 02FB03F3 		mul	r3, r2, r3
 4317 1eae 1A1D     		adds	r2, r3, #4
 4318 1eb0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4319 1eb4 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4320 1eb8 381D     		adds	r0, r7, #4
 4321 1eba 0068     		ldr	r0, [r0]
 4322 1ebc 0144     		add	r1, r1, r0
 4323 1ebe 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4324 1ec0 01FB03F3 		mul	r3, r1, r3
 4325 1ec4 1A44     		add	r2, r2, r3
 4326 1ec6 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4327 1eca 1344     		add	r3, r3, r2
 4328 1ecc 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4329 1ed0 D7F8701C 		ldr	r1, [r7, #3184]
 4330 1ed4 0A44     		add	r2, r2, r1
 4331 1ed6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4332 1ed8 07F15802 		add	r2, r7, #88
 4333 1edc D154     		strb	r1, [r2, r3]
 789:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4334              		.loc 1 789 0
 4335 1ede 97F8543C 		ldrb	r3, [r7, #3156]
 4336 1ee2 0133     		adds	r3, r3, #1
 4337 1ee4 87F8543C 		strb	r3, [r7, #3156]
 4338              	.L246:
 790:..\src/command_processing.c ****         }      
 791:..\src/command_processing.c ****         
 792:..\src/command_processing.c ****         // Add struct index after an empty bit
 793:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 109


 794:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4339              		.loc 1 794 0
 4340 1ee8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4341 1eec 07F10802 		add	r2, r7, #8
 4342 1ef0 1268     		ldr	r2, [r2]
 4343 1ef2 1344     		add	r3, r3, r2
 4344 1ef4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4345 1ef6 002B     		cmp	r3, #0
 4346 1ef8 36D1     		bne	.L247
 795:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4347              		.loc 1 795 0
 4348 1efa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4349 1efe 3222     		movs	r2, #50
 4350 1f00 02FB03F3 		mul	r3, r2, r3
 4351 1f04 1A1D     		adds	r2, r3, #4
 4352 1f06 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4353 1f0a 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4354 1f0e 381D     		adds	r0, r7, #4
 4355 1f10 0068     		ldr	r0, [r0]
 4356 1f12 0144     		add	r1, r1, r0
 4357 1f14 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4358 1f16 01FB03F3 		mul	r3, r1, r3
 4359 1f1a 1A44     		add	r2, r2, r3
 4360 1f1c 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4361 1f20 1344     		add	r3, r3, r2
 4362 1f22 0233     		adds	r3, r3, #2
 4363 1f24 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4364 1f28 3946     		mov	r1, r7
 4365 1f2a 0968     		ldr	r1, [r1]
 4366 1f2c 0A44     		add	r2, r2, r1
 4367 1f2e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4368 1f30 07F15802 		add	r2, r7, #88
 4369 1f34 D154     		strb	r1, [r2, r3]
 4370 1f36 35E0     		b	.L248
 4371              	.L271:
 4372              		.align	2
 4373              	.L270:
 4374 1f38 0C010000 		.word	.LC101
 4375 1f3c E0000000 		.word	.LC98
 4376 1f40 1C010000 		.word	.LC102
 4377 1f44 24010000 		.word	.LC103
 4378 1f48 2C010000 		.word	.LC104
 4379 1f4c 3C010000 		.word	.LC105
 4380 1f50 44010000 		.word	.LC106
 4381 1f54 4C010000 		.word	.LC107
 4382 1f58 64010000 		.word	.LC108
 4383 1f5c 7C010000 		.word	.LC109
 4384 1f60 8C010000 		.word	.LC110
 4385 1f64 A0010000 		.word	.LC111
 4386              	.L247:
 796:..\src/command_processing.c ****         }
 797:..\src/command_processing.c ****         else {
 798:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4387              		.loc 1 798 0
 4388 1f68 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4389 1f6c 3222     		movs	r2, #50
 4390 1f6e 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 110


 4391 1f72 1A1D     		adds	r2, r3, #4
 4392 1f74 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4393 1f78 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4394 1f7c 381D     		adds	r0, r7, #4
 4395 1f7e 0068     		ldr	r0, [r0]
 4396 1f80 0144     		add	r1, r1, r0
 4397 1f82 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4398 1f84 01FB03F3 		mul	r3, r1, r3
 4399 1f88 1A44     		add	r2, r2, r3
 4400 1f8a 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4401 1f8e 1344     		add	r3, r3, r2
 4402 1f90 0133     		adds	r3, r3, #1
 4403 1f92 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4404 1f96 3946     		mov	r1, r7
 4405 1f98 0968     		ldr	r1, [r1]
 4406 1f9a 0A44     		add	r2, r2, r1
 4407 1f9c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4408 1f9e 07F15802 		add	r2, r7, #88
 4409 1fa2 D154     		strb	r1, [r2, r3]
 4410              	.L248:
 373:..\src/command_processing.c ****         
 4411              		.loc 1 373 0 discriminator 2
 4412 1fa4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4413 1fa8 0133     		adds	r3, r3, #1
 4414 1faa 87F8553C 		strb	r3, [r7, #3157]
 4415              	.L63:
 373:..\src/command_processing.c ****         
 4416              		.loc 1 373 0 is_stmt 0 discriminator 1
 4417 1fae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4418 1fb2 232B     		cmp	r3, #35
 4419 1fb4 7EF671A8 		bls	.L249
 799:..\src/command_processing.c ****         }
 800:..\src/command_processing.c ****     }
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c ****     // Add menu
 803:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4420              		.loc 1 803 0 is_stmt 1
 4421 1fb8 0023     		movs	r3, #0
 4422 1fba 87F8563C 		strb	r3, [r7, #3158]
 4423 1fbe 3DE0     		b	.L250
 4424              	.L253:
 804:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4425              		.loc 1 804 0
 4426 1fc0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4427 1fc4 9B00     		lsls	r3, r3, #2
 4428 1fc6 D7F87C2C 		ldr	r2, [r7, #3196]
 4429 1fca 1344     		add	r3, r3, r2
 4430 1fcc 1B68     		ldr	r3, [r3]
 4431 1fce 1846     		mov	r0, r3
 4432 1fd0 FFF7FEFF 		bl	strlen
 4433 1fd4 0346     		mov	r3, r0
 4434 1fd6 87F8523C 		strb	r3, [r7, #3154]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4435              		.loc 1 805 0
 4436 1fda 97F8523C 		ldrb	r3, [r7, #3154]
 4437 1fde 87F8573C 		strb	r3, [r7, #3159]
 4438 1fe2 22E0     		b	.L251
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 111


 4439              	.L252:
 806:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4440              		.loc 1 806 0 discriminator 3
 4441 1fe4 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4442 1fe8 9622     		movs	r2, #150
 4443 1fea 02FB03F3 		mul	r3, r2, r3
 4444 1fee 03F20A72 		addw	r2, r3, #1802
 4445 1ff2 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4446 1ff6 1A44     		add	r2, r2, r3
 4447 1ff8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4448 1ffc D31A     		subs	r3, r2, r3
 4449 1ffe 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4450 2002 9200     		lsls	r2, r2, #2
 4451 2004 D7F87C1C 		ldr	r1, [r7, #3196]
 4452 2008 0A44     		add	r2, r2, r1
 4453 200a 1268     		ldr	r2, [r2]
 4454 200c 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4455 2010 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4456 2014 411A     		subs	r1, r0, r1
 4457 2016 0A44     		add	r2, r2, r1
 4458 2018 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4459 201a 07F15802 		add	r2, r7, #88
 4460 201e D154     		strb	r1, [r2, r3]
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4461              		.loc 1 805 0 discriminator 3
 4462 2020 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4463 2024 013B     		subs	r3, r3, #1
 4464 2026 87F8573C 		strb	r3, [r7, #3159]
 4465              	.L251:
 805:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4466              		.loc 1 805 0 is_stmt 0 discriminator 1
 4467 202a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4468 202e 002B     		cmp	r3, #0
 4469 2030 D8D1     		bne	.L252
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4470              		.loc 1 803 0 is_stmt 1 discriminator 2
 4471 2032 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4472 2036 0133     		adds	r3, r3, #1
 4473 2038 87F8563C 		strb	r3, [r7, #3158]
 4474              	.L250:
 803:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4475              		.loc 1 803 0 is_stmt 0 discriminator 1
 4476 203c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4477 2040 072B     		cmp	r3, #7
 4478 2042 BDD9     		bls	.L253
 807:..\src/command_processing.c ****     }
 808:..\src/command_processing.c ****     
 809:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4479              		.loc 1 809 0 is_stmt 1
 4480 2044 B7F8503C 		ldrh	r3, [r7, #3152]
 4481 2048 5C1E     		subs	r4, r3, #1
 4482 204a B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4483 204e DBB2     		uxtb	r3, r3
 4484 2050 013B     		subs	r3, r3, #1
 4485 2052 DAB2     		uxtb	r2, r3
 4486 2054 07F15803 		add	r3, r7, #88
 4487 2058 1146     		mov	r1, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 112


 4488 205a 1846     		mov	r0, r3
 4489 205c FFF7FEFF 		bl	LCRChecksum
 4490 2060 0346     		mov	r3, r0
 4491 2062 1A46     		mov	r2, r3
 4492 2064 07F15803 		add	r3, r7, #88
 4493 2068 1A55     		strb	r2, [r3, r4]
 810:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4494              		.loc 1 810 0
 4495 206a B7F8502C 		ldrh	r2, [r7, #3152]
 4496 206e 07F15803 		add	r3, r7, #88
 4497 2072 1146     		mov	r1, r2
 4498 2074 1846     		mov	r0, r3
 4499 2076 FFF7FEFF 		bl	commWrite
 811:..\src/command_processing.c **** }
 4500              		.loc 1 811 0
 4501 207a 00BF     		nop
 4502 207c 07F65C47 		addw	r7, r7, #3164
 4503              		.cfi_def_cfa_offset 20
 4504 2080 BD46     		mov	sp, r7
 4505              		.cfi_def_cfa_register 13
 4506              		@ sp needed
 4507 2082 F0BD     		pop	{r4, r5, r6, r7, pc}
 4508              		.cfi_endproc
 4509              	.LFE67:
 4510              		.size	get_param_list, .-get_param_list
 4511              		.section	.rodata
 4512              		.align	2
 4513              	.LC113:
 4514 01b0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4514      204E6F6E 
 4514      650A3120 
 4514      2D3E204C 
 4514      6F772028 
 4515 01e0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4515      74657220 
 4515      72656164 
 4515      290A3220 
 4515      2D3E2048 
 4516 0210 62697420 		.ascii	"bit register read)\012\000"
 4516      72656769 
 4516      73746572 
 4516      20726561 
 4516      64290A00 
 4517              		.align	2
 4518              	.LC114:
 4519 0224 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4519      20557362 
 4519      0A31202D 
 4519      3E204861 
 4519      6E646C65 
 4520 024f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4520      20454D47 
 4520      20496E74 
 4520      65677261 
 4520      6C0A3420 
 4521 027c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 4521      616E6365 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 113


 4521      640A3620 
 4521      2D3E2045 
 4521      4D472070 
 4522              		.align	2
 4523              	.LC115:
 4524 02a0 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4524      20506F73 
 4524      6974696F 
 4524      6E0A3120 
 4524      2D3E2050 
 4525 02ca 6F736974 		.ascii	"osition and Current\012\000"
 4525      696F6E20 
 4525      616E6420 
 4525      43757272 
 4525      656E740A 
 4526 02df 00       		.align	2
 4527              	.LC116:
 4528 02e0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4528      20446561 
 4528      63746976 
 4528      61746520 
 4528      5B4E4F5D 
 4529 030a 0000     		.align	2
 4530              	.LC117:
 4531 030c 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4531      20526967 
 4531      68740A31 
 4531      202D3E20 
 4531      4C656674 
 4532 0322 0000     		.align	2
 4533              	.LC118:
 4534 0324 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4534      204F4646 
 4534      0A31202D 
 4534      3E204F4E 
 4534      0A546865 
 4535 034b 00       		.align	2
 4536              	.LC119:
 4537 034c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4537      204E6F6E 
 4537      650A3120 
 4537      2D3E2053 
 4537      442F5254 
 4538 0379 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4538      0A33202D 
 4538      3E204F74 
 4538      68657220 
 4538      5B4E2F41 
 4539 03a4 00       		.ascii	"\000"
 4540 03a5 000000   		.align	2
 4541              	.LC120:
 4542 03a8 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 4542      2047656E 
 4542      65726963 
 4542      20757365 
 4542      720A3120 
 4543 03d2 20626F61 		.ascii	" board will reset\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 114


 4543      72642077 
 4543      696C6C20 
 4543      72657365 
 4543      740A00
 4544 03e5 000000   		.align	2
 4545              	.LC121:
 4546 03e8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4546      204D4333 
 4546      33383837 
 4546      20285374 
 4546      616E6461 
 4547 0418 290A5468 		.ascii	")\012The board will reset\012\000"
 4547      6520626F 
 4547      61726420 
 4547      77696C6C 
 4547      20726573 
 4548              		.align	2
 4549              	.LC122:
 4550 0430 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 4550      20534F46 
 4550      5448414E 
 4550      44205052 
 4550      4F0A3120 
 4551 045d 41495220 		.ascii	"AIR CHAMBERS\012The board will reset\012\000"
 4551      4348414D 
 4551      42455253 
 4551      0A546865 
 4551      20626F61 
 4552              		.align	2
 4553              	.LC0:
 4554 0480 02       		.byte	2
 4555 0481 07       		.byte	7
 4556 0482 07       		.byte	7
 4557 0483 00       		.byte	0
 4558 0484 00       		.byte	0
 4559 0485 00       		.byte	0
 4560 0486 02       		.byte	2
 4561 0487 03       		.byte	3
 4562 0488 07       		.byte	7
 4563 0489 00       		.byte	0
 4564 048a 05       		.byte	5
 4565 048b 05       		.byte	5
 4566 048c 03       		.byte	3
 4567 048d 04       		.byte	4
 4568 048e 00       		.byte	0
 4569 048f 06       		.byte	6
 4570 0490 02       		.byte	2
 4571 0491 00       		.byte	0
 4572 0492 01       		.byte	1
 4573 0493 00       		.byte	0
 4574 0494 07       		.byte	7
 4575 0495 02       		.byte	2
 4576 0496 05       		.byte	5
 4577 0497 05       		.byte	5
 4578 0498 05       		.byte	5
 4579 0499 00       		.byte	0
 4580 049a 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 115


 4581 049b 00       		.byte	0
 4582 049c 00       		.byte	0
 4583 049d 00       		.byte	0
 4584 049e 00       		.byte	0
 4585 049f 02       		.byte	2
 4586 04a0 00       		.byte	0
 4587 04a1 02       		.byte	2
 4588 04a2 00       		.byte	0
 4589 04a3 09       		.byte	9
 4590 04a4 02       		.byte	2
 4591 04a5 00       		.byte	0
 4592 04a6 02       		.byte	2
 4593 04a7 00       		.byte	0
 4594 04a8 02       		.byte	2
 4595 04a9 01       		.byte	1
 4596 04aa 00       		.byte	0
 4597 04ab 07       		.byte	7
 4598 04ac 07       		.byte	7
 4599 04ad 00       		.byte	0
 4600 04ae 00       		.byte	0
 4601 04af 00       		.byte	0
 4602 04b0 02       		.byte	2
 4603 04b1 03       		.byte	3
 4604 04b2 07       		.byte	7
 4605 04b3 00       		.byte	0
 4606 04b4 05       		.byte	5
 4607 04b5 05       		.byte	5
 4608 04b6 03       		.byte	3
 4609 04b7 00       		.byte	0
 4610 04b8 01       		.byte	1
 4611 04b9 00       		.byte	0
 4612 04ba 07       		.byte	7
 4613 04bb 02       		.byte	2
 4614 04bc 00       		.byte	0
 4615 04bd 02       		.byte	2
 4616 04be 00       		.byte	0
 4617 04bf 02       		.byte	2
 4618 04c0 01       		.byte	1
 4619 04c1 02       		.byte	2
 4620 04c2 02       		.byte	2
 4621 04c3 00       		.byte	0
 4622 04c4 02       		.byte	2
 4623 04c5 02       		.byte	2
 4624 04c6 00       		.byte	0
 4625 04c7 00       		.byte	0
 4626 04c8 02       		.byte	2
 4627 04c9 05       		.byte	5
 4628 04ca 07       		.byte	7
 4629 04cb 07       		.byte	7
 4630              		.align	2
 4631              	.LC1:
 4632 04cc 31202D20 		.ascii	"1 - Device ID:\000"
 4632      44657669 
 4632      63652049 
 4632      443A00
 4633 04db 00       		.align	2
 4634              	.LC2:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 116


 4635 04dc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 4635      506F7369 
 4635      74696F6E 
 4635      20504944 
 4635      205B502C 
 4636              		.align	2
 4637              	.LC3:
 4638 04f8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 4638      43757272 
 4638      656E7420 
 4638      50494420 
 4638      5B502C20 
 4639 0513 00       		.align	2
 4640              	.LC4:
 4641 0514 34202D20 		.ascii	"4 - Startup Activation:\000"
 4641      53746172 
 4641      74757020 
 4641      41637469 
 4641      76617469 
 4642              		.align	2
 4643              	.LC5:
 4644 052c 35202D20 		.ascii	"5 - Input mode:\000"
 4644      496E7075 
 4644      74206D6F 
 4644      64653A00 
 4645              		.align	2
 4646              	.LC6:
 4647 053c 36202D20 		.ascii	"6 - Control mode:\000"
 4647      436F6E74 
 4647      726F6C20 
 4647      6D6F6465 
 4647      3A00
 4648 054e 0000     		.align	2
 4649              	.LC7:
 4650 0550 37202D20 		.ascii	"7 - Resolutions:\000"
 4650      5265736F 
 4650      6C757469 
 4650      6F6E733A 
 4650      00
 4651 0561 000000   		.align	2
 4652              	.LC8:
 4653 0564 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 4653      4D656173 
 4653      7572656D 
 4653      656E7420 
 4653      4F666673 
 4654 057d 000000   		.align	2
 4655              	.LC9:
 4656 0580 39202D20 		.ascii	"9 - Multipliers:\000"
 4656      4D756C74 
 4656      69706C69 
 4656      6572733A 
 4656      00
 4657 0591 000000   		.align	2
 4658              	.LC10:
 4659 0594 3130202D 		.ascii	"10 - Pos. limit active:\000"
 4659      20506F73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 117


 4659      2E206C69 
 4659      6D697420 
 4659      61637469 
 4660              		.align	2
 4661              	.LC11:
 4662 05ac 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 4662      20506F73 
 4662      2E206C69 
 4662      6D697473 
 4662      205B696E 
 4663 05c9 000000   		.align	2
 4664              	.LC12:
 4665 05cc 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 4665      204D6178 
 4665      20737465 
 4665      7073205B 
 4665      6E65672C 
 4666 05e7 00       		.align	2
 4667              	.LC13:
 4668 05e8 3133202D 		.ascii	"13 - Current limit:\000"
 4668      20437572 
 4668      72656E74 
 4668      206C696D 
 4668      69743A00 
 4669              		.align	2
 4670              	.LC14:
 4671 05fc 3134202D 		.ascii	"14 - EMG thresholds:\000"
 4671      20454D47 
 4671      20746872 
 4671      6573686F 
 4671      6C64733A 
 4672 0611 000000   		.align	2
 4673              	.LC15:
 4674 0614 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 4674      20454D47 
 4674      2063616C 
 4674      69627261 
 4674      74696F6E 
 4675 0635 000000   		.align	2
 4676              	.LC16:
 4677 0638 3136202D 		.ascii	"16 - EMG max values:\000"
 4677      20454D47 
 4677      206D6178 
 4677      2076616C 
 4677      7565733A 
 4678 064d 000000   		.align	2
 4679              	.LC17:
 4680 0650 3137202D 		.ascii	"17 - EMG max speeds:\000"
 4680      20454D47 
 4680      206D6178 
 4680      20737065 
 4680      6564733A 
 4681 0665 000000   		.align	2
 4682              	.LC18:
 4683 0668 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 4683      20416273 
 4683      6F6C7574 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 118


 4683      6520656E 
 4683      636F6465 
 4684              		.align	2
 4685              	.LC19:
 4686 0688 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 4686      204D6F74 
 4686      6F722068 
 4686      616E646C 
 4686      65207261 
 4687 06a1 000000   		.align	2
 4688              	.LC20:
 4689 06a4 3230202D 		.ascii	"20 - PWM rescaling:\000"
 4689      2050574D 
 4689      20726573 
 4689      63616C69 
 4689      6E673A00 
 4690              		.align	2
 4691              	.LC21:
 4692 06b8 3231202D 		.ascii	"21 - Current lookup:\000"
 4692      20437572 
 4692      72656E74 
 4692      206C6F6F 
 4692      6B75703A 
 4693 06cd 000000   		.align	2
 4694              	.LC22:
 4695 06d0 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 4695      20446174 
 4695      65206F66 
 4695      206D6169 
 4695      6E74656E 
 4696 06f2 0000     		.align	2
 4697              	.LC23:
 4698 06f4 3233202D 		.ascii	"23 - Rest position:\000"
 4698      20526573 
 4698      7420706F 
 4698      73697469 
 4698      6F6E3A00 
 4699              		.align	2
 4700              	.LC24:
 4701 0708 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 4701      20526573 
 4701      7420706F 
 4701      73697469 
 4701      6F6E2074 
 4702              		.align	2
 4703              	.LC25:
 4704 072c 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 4704      20526573 
 4704      74207665 
 4704      6C20636C 
 4704      6F737572 
 4705 074f 00       		.align	2
 4706              	.LC26:
 4707 0750 3236202D 		.ascii	"26 - Rest position enabled:\000"
 4707      20526573 
 4707      7420706F 
 4707      73697469 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 119


 4707      6F6E2065 
 4708              		.align	2
 4709              	.LC27:
 4710 076c 3237202D 		.ascii	"27 - EMG inversion:\000"
 4710      20454D47 
 4710      20696E76 
 4710      65727369 
 4710      6F6E3A00 
 4711              		.align	2
 4712              	.LC28:
 4713 0780 3238202D 		.ascii	"28 - Hand side:\000"
 4713      2048616E 
 4713      64207369 
 4713      64653A00 
 4714              		.align	2
 4715              	.LC29:
 4716 0790 3239202D 		.ascii	"29 - Enable IMUs:\000"
 4716      20456E61 
 4716      626C6520 
 4716      494D5573 
 4716      3A00
 4717 07a2 0000     		.align	2
 4718              	.LC30:
 4719 07a4 3330202D 		.ascii	"30 - Read Expansion port:\000"
 4719      20526561 
 4719      64204578 
 4719      70616E73 
 4719      696F6E20 
 4720 07be 0000     		.align	2
 4721              	.LC31:
 4722 07c0 3331202D 		.ascii	"31 - Reset counters:\000"
 4722      20526573 
 4722      65742063 
 4722      6F756E74 
 4722      6572733A 
 4723 07d5 000000   		.align	2
 4724              	.LC32:
 4725 07d8 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 4725      204C6173 
 4725      74206368 
 4725      65636B65 
 4725      64205469 
 4726 07fe 0000     		.align	2
 4727              	.LC33:
 4728 0800 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 4728      20535049 
 4728      20726561 
 4728      64206465 
 4728      6C617920 
 4729 081b 00       		.align	2
 4730              	.LC34:
 4731 081c 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 4731      204F6E20 
 4731      626F6172 
 4731      6420494D 
 4731      5520636F 
 4732 0841 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 120


 4733              	.LC35:
 4734 0844 3335202D 		.ascii	"35 - User ID:\000"
 4734      20557365 
 4734      72204944 
 4734      3A00
 4735 0852 0000     		.align	2
 4736              	.LC36:
 4737 0854 3336202D 		.ascii	"36 - User code:\000"
 4737      20557365 
 4737      7220636F 
 4737      64653A00 
 4738              		.align	2
 4739              	.LC37:
 4740 0864 3337202D 		.ascii	"37 - Associated encoder line:\000"
 4740      20417373 
 4740      6F636961 
 4740      74656420 
 4740      656E636F 
 4741 0882 0000     		.align	2
 4742              	.LC38:
 4743 0884 3338202D 		.ascii	"38 - Driver type:\000"
 4743      20447269 
 4743      76657220 
 4743      74797065 
 4743      3A00
 4744 0896 0000     		.align	2
 4745              	.LC39:
 4746 0898 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 4746      2050574D 
 4746      20726174 
 4746      65206C69 
 4746      6D697465 
 4747 08af 00       		.align	2
 4748              	.LC40:
 4749 08b0 3430202D 		.ascii	"40 - Not reversible:\000"
 4749      204E6F74 
 4749      20726576 
 4749      65727369 
 4749      626C653A 
 4750 08c5 000000   		.align	2
 4751              	.LC41:
 4752 08c8 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 4752      20456E63 
 4752      20696478 
 4752      20757365 
 4752      6420666F 
 4753 08e7 00       		.align	2
 4754              	.LC42:
 4755 08e8 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 4755      20476561 
 4755      72207061 
 4755      72616D73 
 4755      5B4E312C 
 4756 0906 0000     		.align	2
 4757              	.LC43:
 4758 0908 3433202D 		.ascii	"43 - Use second motor:\000"
 4758      20557365 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 121


 4758      20736563 
 4758      6F6E6420 
 4758      6D6F746F 
 4759 091f 00       		.align	2
 4760              	.LC44:
 4761 0920 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 4761      20506F73 
 4761      6974696F 
 4761      6E205049 
 4761      44205B50 
 4762 093d 000000   		.align	2
 4763              	.LC45:
 4764 0940 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 4764      20437572 
 4764      72656E74 
 4764      20504944 
 4764      205B502C 
 4765              		.align	2
 4766              	.LC46:
 4767 095c 3436202D 		.ascii	"46 - Startup Activation:\000"
 4767      20537461 
 4767      72747570 
 4767      20416374 
 4767      69766174 
 4768 0975 000000   		.align	2
 4769              	.LC47:
 4770 0978 3437202D 		.ascii	"47 - Input mode:\000"
 4770      20496E70 
 4770      7574206D 
 4770      6F64653A 
 4770      00
 4771 0989 000000   		.align	2
 4772              	.LC48:
 4773 098c 3438202D 		.ascii	"48 - Control mode:\000"
 4773      20436F6E 
 4773      74726F6C 
 4773      206D6F64 
 4773      653A00
 4774 099f 00       		.align	2
 4775              	.LC49:
 4776 09a0 3439202D 		.ascii	"49 - Resolutions:\000"
 4776      20526573 
 4776      6F6C7574 
 4776      696F6E73 
 4776      3A00
 4777 09b2 0000     		.align	2
 4778              	.LC50:
 4779 09b4 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 4779      204D6561 
 4779      73757265 
 4779      6D656E74 
 4779      204F6666 
 4780 09ce 0000     		.align	2
 4781              	.LC51:
 4782 09d0 3531202D 		.ascii	"51 - Multipliers:\000"
 4782      204D756C 
 4782      7469706C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 122


 4782      69657273 
 4782      3A00
 4783 09e2 0000     		.align	2
 4784              	.LC52:
 4785 09e4 3532202D 		.ascii	"52 - Pos. limit active:\000"
 4785      20506F73 
 4785      2E206C69 
 4785      6D697420 
 4785      61637469 
 4786              		.align	2
 4787              	.LC53:
 4788 09fc 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 4788      20506F73 
 4788      2E206C69 
 4788      6D697473 
 4788      205B696E 
 4789 0a19 000000   		.align	2
 4790              	.LC54:
 4791 0a1c 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 4791      204D6178 
 4791      20737465 
 4791      7073205B 
 4791      6E65672C 
 4792 0a37 00       		.align	2
 4793              	.LC55:
 4794 0a38 3535202D 		.ascii	"55 - Current limit:\000"
 4794      20437572 
 4794      72656E74 
 4794      206C696D 
 4794      69743A00 
 4795              		.align	2
 4796              	.LC56:
 4797 0a4c 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 4797      20416273 
 4797      6F6C7574 
 4797      6520656E 
 4797      636F6465 
 4798              		.align	2
 4799              	.LC57:
 4800 0a6c 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 4800      204D6F74 
 4800      6F722068 
 4800      616E646C 
 4800      65207261 
 4801 0a85 000000   		.align	2
 4802              	.LC58:
 4803 0a88 3538202D 		.ascii	"58 - PWM rescaling:\000"
 4803      2050574D 
 4803      20726573 
 4803      63616C69 
 4803      6E673A00 
 4804              		.align	2
 4805              	.LC59:
 4806 0a9c 3539202D 		.ascii	"59 - Current lookup:\000"
 4806      20437572 
 4806      72656E74 
 4806      206C6F6F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 123


 4806      6B75703A 
 4807 0ab1 000000   		.align	2
 4808              	.LC60:
 4809 0ab4 3630202D 		.ascii	"60 - Associated encoder line:\000"
 4809      20417373 
 4809      6F636961 
 4809      74656420 
 4809      656E636F 
 4810 0ad2 0000     		.align	2
 4811              	.LC61:
 4812 0ad4 3631202D 		.ascii	"61 - Driver type:\000"
 4812      20447269 
 4812      76657220 
 4812      74797065 
 4812      3A00
 4813 0ae6 0000     		.align	2
 4814              	.LC62:
 4815 0ae8 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 4815      2050574D 
 4815      20726174 
 4815      65206C69 
 4815      6D697465 
 4816 0aff 00       		.align	2
 4817              	.LC63:
 4818 0b00 3633202D 		.ascii	"63 - Not reversible:\000"
 4818      204E6F74 
 4818      20726576 
 4818      65727369 
 4818      626C653A 
 4819 0b15 000000   		.align	2
 4820              	.LC64:
 4821 0b18 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 4821      20456E63 
 4821      20696478 
 4821      20757365 
 4821      6420666F 
 4822 0b37 00       		.align	2
 4823              	.LC65:
 4824 0b38 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 4824      20476561 
 4824      72207061 
 4824      72616D73 
 4824      5B4E312C 
 4825 0b56 0000     		.align	2
 4826              	.LC66:
 4827 0b58 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 4827      20526561 
 4827      6420656E 
 4827      63207261 
 4827      77206C69 
 4828 0b72 0000     		.align	2
 4829              	.LC67:
 4830 0b74 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 4830      20526561 
 4830      6420656E 
 4830      63207261 
 4830      77206C69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 124


 4831 0b8e 0000     		.align	2
 4832              	.LC68:
 4833 0b90 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 4833      20526561 
 4833      64206164 
 4833      64697469 
 4833      6F6E616C 
 4834 0baf 00       		.align	2
 4835              	.LC69:
 4836 0bb0 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 4836      20414443 
 4836      20636861 
 4836      6E6E656C 
 4836      205B312D 
 4837              		.align	2
 4838              	.LC70:
 4839 0bc8 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 4839      20414443 
 4839      20636861 
 4839      6E6E656C 
 4839      205B372D 
 4840 0be1 000000   		.align	2
 4841              	.LC71:
 4842 0be4 3731202D 		.ascii	"71 - Device type:\000"
 4842      20446576 
 4842      69636520 
 4842      74797065 
 4842      3A00
 4843 0bf6 0000     		.align	2
 4844              	.LC72:
 4845 0bf8 3732202D 		.ascii	"72 - Slave communication active:\000"
 4845      20536C61 
 4845      76652063 
 4845      6F6D6D75 
 4845      6E696361 
 4846 0c19 000000   		.align	2
 4847              	.LC73:
 4848 0c1c 3733202D 		.ascii	"73 - Slave ID:\000"
 4848      20536C61 
 4848      76652049 
 4848      443A00
 4849 0c2b 00       		.align	2
 4850              	.LC74:
 4851 0c2c 3734202D 		.ascii	"74 - Maximum slave residual current:\000"
 4851      204D6178 
 4851      696D756D 
 4851      20736C61 
 4851      76652072 
 4852 0c51 000000   		.align	2
 4853              	.LC75:
 4854 0c54 3735202D 		.ascii	"75 - Maximum pressure feedback (kPa):\000"
 4854      204D6178 
 4854      696D756D 
 4854      20707265 
 4854      73737572 
 4855 0c7a 0000     		.align	2
 4856              	.LC76:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 125


 4857 0c7c 3736202D 		.ascii	"76 - Proportional pressure error gain:\000"
 4857      2050726F 
 4857      706F7274 
 4857      696F6E61 
 4857      6C207072 
 4858 0ca3 00       		.align	2
 4859              	.LC112:
 4860 0ca4 CC040000 		.word	.LC1
 4861 0ca8 DC040000 		.word	.LC2
 4862 0cac F8040000 		.word	.LC3
 4863 0cb0 14050000 		.word	.LC4
 4864 0cb4 2C050000 		.word	.LC5
 4865 0cb8 3C050000 		.word	.LC6
 4866 0cbc 50050000 		.word	.LC7
 4867 0cc0 64050000 		.word	.LC8
 4868 0cc4 80050000 		.word	.LC9
 4869 0cc8 94050000 		.word	.LC10
 4870 0ccc AC050000 		.word	.LC11
 4871 0cd0 CC050000 		.word	.LC12
 4872 0cd4 E8050000 		.word	.LC13
 4873 0cd8 FC050000 		.word	.LC14
 4874 0cdc 14060000 		.word	.LC15
 4875 0ce0 38060000 		.word	.LC16
 4876 0ce4 50060000 		.word	.LC17
 4877 0ce8 68060000 		.word	.LC18
 4878 0cec 88060000 		.word	.LC19
 4879 0cf0 A4060000 		.word	.LC20
 4880 0cf4 B8060000 		.word	.LC21
 4881 0cf8 D0060000 		.word	.LC22
 4882 0cfc F4060000 		.word	.LC23
 4883 0d00 08070000 		.word	.LC24
 4884 0d04 2C070000 		.word	.LC25
 4885 0d08 50070000 		.word	.LC26
 4886 0d0c 6C070000 		.word	.LC27
 4887 0d10 80070000 		.word	.LC28
 4888 0d14 90070000 		.word	.LC29
 4889 0d18 A4070000 		.word	.LC30
 4890 0d1c C0070000 		.word	.LC31
 4891 0d20 D8070000 		.word	.LC32
 4892 0d24 00080000 		.word	.LC33
 4893 0d28 1C080000 		.word	.LC34
 4894 0d2c 44080000 		.word	.LC35
 4895 0d30 54080000 		.word	.LC36
 4896 0d34 64080000 		.word	.LC37
 4897 0d38 84080000 		.word	.LC38
 4898 0d3c 98080000 		.word	.LC39
 4899 0d40 B0080000 		.word	.LC40
 4900 0d44 C8080000 		.word	.LC41
 4901 0d48 E8080000 		.word	.LC42
 4902 0d4c 08090000 		.word	.LC43
 4903 0d50 20090000 		.word	.LC44
 4904 0d54 40090000 		.word	.LC45
 4905 0d58 5C090000 		.word	.LC46
 4906 0d5c 78090000 		.word	.LC47
 4907 0d60 8C090000 		.word	.LC48
 4908 0d64 A0090000 		.word	.LC49
 4909 0d68 B4090000 		.word	.LC50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 126


 4910 0d6c D0090000 		.word	.LC51
 4911 0d70 E4090000 		.word	.LC52
 4912 0d74 FC090000 		.word	.LC53
 4913 0d78 1C0A0000 		.word	.LC54
 4914 0d7c 380A0000 		.word	.LC55
 4915 0d80 4C0A0000 		.word	.LC56
 4916 0d84 6C0A0000 		.word	.LC57
 4917 0d88 880A0000 		.word	.LC58
 4918 0d8c 9C0A0000 		.word	.LC59
 4919 0d90 B40A0000 		.word	.LC60
 4920 0d94 D40A0000 		.word	.LC61
 4921 0d98 E80A0000 		.word	.LC62
 4922 0d9c 000B0000 		.word	.LC63
 4923 0da0 180B0000 		.word	.LC64
 4924 0da4 380B0000 		.word	.LC65
 4925 0da8 580B0000 		.word	.LC66
 4926 0dac 740B0000 		.word	.LC67
 4927 0db0 900B0000 		.word	.LC68
 4928 0db4 B00B0000 		.word	.LC69
 4929 0db8 C80B0000 		.word	.LC70
 4930 0dbc E40B0000 		.word	.LC71
 4931 0dc0 F80B0000 		.word	.LC72
 4932 0dc4 1C0C0000 		.word	.LC73
 4933 0dc8 2C0C0000 		.word	.LC74
 4934 0dcc 540C0000 		.word	.LC75
 4935 0dd0 7C0C0000 		.word	.LC76
 4936              		.align	2
 4937              	.LC78:
 4938 0dd4 03       		.byte	3
 4939 0dd5 01       		.byte	1
 4940 0dd6 02       		.byte	2
 4941 0dd7 03       		.byte	3
 4942 0dd8 03       		.byte	3
 4943 0dd9 03       		.byte	3
 4944 0dda 03       		.byte	3
 4945 0ddb 03       		.byte	3
 4946 0ddc 03       		.byte	3
 4947 0ddd 04       		.byte	4
 4948 0dde 05       		.byte	5
 4949 0ddf 06       		.byte	6
 4950 0de0 03       		.byte	3
 4951 0de1 07       		.byte	7
 4952 0de2 08       		.byte	8
 4953 0de3 09       		.byte	9
 4954 0de4 03       		.byte	3
 4955 0de5 05       		.byte	5
 4956 0de6 03       		.byte	3
 4957 0de7 01       		.byte	1
 4958 0de8 02       		.byte	2
 4959 0de9 03       		.byte	3
 4960 0dea 03       		.byte	3
 4961 0deb 03       		.byte	3
 4962 0dec 09       		.byte	9
 4963 0ded 03       		.byte	3
 4964 0dee 05       		.byte	5
 4965 0def 0A       		.byte	10
 4966 0df0 03       		.byte	3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 127


 4967 0df1 000000   		.align	2
 4968              	.LC79:
 4969 0df4 02       		.byte	2
 4970 0df5 03       		.byte	3
 4971 0df6 08       		.byte	8
 4972 0df7 0B       		.byte	11
 4973 0df8 17       		.byte	23
 4974 0df9 2C       		.byte	44
 4975 0dfa 2D       		.byte	45
 4976 0dfb 32       		.byte	50
 4977 0dfc 35       		.byte	53
 4978 0dfd 000000   		.align	2
 4979              	.LC80:
 4980 0e00 02       		.byte	2
 4981 0e01 03       		.byte	3
 4982 0e02 05       		.byte	5
 4983 0e03 08       		.byte	8
 4984 0e04 0B       		.byte	11
 4985 0e05 17       		.byte	23
 4986 0e06 18       		.byte	24
 4987 0e07 1C       		.byte	28
 4988 0e08 1F       		.byte	31
 4989 0e09 20       		.byte	32
 4990 0e0a 26       		.byte	38
 4991 0e0b 2C       		.byte	44
 4992 0e0c 2D       		.byte	45
 4993 0e0d 2F       		.byte	47
 4994 0e0e 32       		.byte	50
 4995 0e0f 35       		.byte	53
 4996 0e10 3D       		.byte	61
 4997 0e11 47       		.byte	71
 4998              		.section	.text.manage_param_list,"ax",%progbits
 4999              		.align	2
 5000              		.global	manage_param_list
 5001              		.thumb
 5002              		.thumb_func
 5003              		.type	manage_param_list, %function
 5004              	manage_param_list:
 5005              	.LFB68:
 812:..\src/command_processing.c **** 
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 815:..\src/command_processing.c **** //==============================================================================
 816:..\src/command_processing.c **** 
 817:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 5006              		.loc 1 817 0
 5007              		.cfi_startproc
 5008              		@ args = 0, pretend = 0, frame = 1256
 5009              		@ frame_needed = 1, uses_anonymous_args = 0
 5010 0000 B0B5     		push	{r4, r5, r7, lr}
 5011              		.cfi_def_cfa_offset 16
 5012              		.cfi_offset 4, -16
 5013              		.cfi_offset 5, -12
 5014              		.cfi_offset 7, -8
 5015              		.cfi_offset 14, -4
 5016 0002 ADF59F6D 		sub	sp, sp, #1272
 5017              		.cfi_def_cfa_offset 1288
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 128


 5018 0006 04AF     		add	r7, sp, #16
 5019              		.cfi_def_cfa 7, 1272
 5020 0008 0246     		mov	r2, r0
 5021 000a BB1D     		adds	r3, r7, #6
 5022 000c 1A80     		strh	r2, [r3]	@ movhi
 818:..\src/command_processing.c ****     uint8 CYDATA i, j;
 819:..\src/command_processing.c ****     uint8 CYDATA sod;
 820:..\src/command_processing.c ****     uint8 PARAM_IDX;
 821:..\src/command_processing.c ****     int16 aux_int16;
 822:..\src/command_processing.c ****     uint16 aux_uint16;
 823:..\src/command_processing.c ****     int32 aux_int32;
 824:..\src/command_processing.c ****     uint32 aux_uint32;
 825:..\src/command_processing.c ****     float aux_float;
 826:..\src/command_processing.c ****  
 827:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 5023              		.loc 1 827 0
 5024 000e 0023     		movs	r3, #0
 5025 0010 87F8DD34 		strb	r3, [r7, #1245]
 828:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 5026              		.loc 1 828 0
 5027 0014 0123     		movs	r3, #1
 5028 0016 87F8DC34 		strb	r3, [r7, #1244]
 829:..\src/command_processing.c ****     
 830:..\src/command_processing.c ****     // Arrays
 831:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 5029              		.loc 1 831 0
 5030 001a 054B     		ldr	r3, .L334
 5031 001c C7F8E034 		str	r3, [r7, #1248]
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 5032              		.loc 1 833 0
 5033 0020 BB1D     		adds	r3, r7, #6
 5034 0022 1B88     		ldrh	r3, [r3]
 5035 0024 002B     		cmp	r3, #0
 5036 0026 07D0     		beq	.L273
 834:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 5037              		.loc 1 834 0
 5038 0028 024B     		ldr	r3, .L334+4
 5039 002a C7F8E034 		str	r3, [r7, #1248]
 5040 002e 03E0     		b	.L335
 5041              	.L336:
 5042              		.align	2
 5043              	.L334:
 5044 0030 00000000 		.word	c_mem
 5045 0034 00000000 		.word	g_mem
 5046              	.L335:
 5047              	.L273:
 835:..\src/command_processing.c ****     }
 836:..\src/command_processing.c ****  
 837:..\src/command_processing.c ****     
 838:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 839:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5048              		.loc 1 840 0
 5049 0038 D7F8E034 		ldr	r3, [r7, #1248]
 5050 003c 03F1A002 		add	r2, r3, #160
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 129


 5051              		.loc 1 839 0
 5052 0040 07F56673 		add	r3, r7, #920
 5053 0044 1A60     		str	r2, [r3]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 5054              		.loc 1 841 0
 5055 0046 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5056 004a 1346     		mov	r3, r2
 5057 004c DB00     		lsls	r3, r3, #3
 5058 004e 9B1A     		subs	r3, r3, r2
 5059 0050 1B01     		lsls	r3, r3, #4
 5060 0052 B033     		adds	r3, r3, #176
 5061 0054 D7F8E024 		ldr	r2, [r7, #1248]
 5062 0058 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5063              		.loc 1 839 0
 5064 005a 07F56673 		add	r3, r7, #920
 5065 005e 5A60     		str	r2, [r3, #4]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 5066              		.loc 1 842 0
 5067 0060 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5068 0064 1346     		mov	r3, r2
 5069 0066 DB00     		lsls	r3, r3, #3
 5070 0068 9B1A     		subs	r3, r3, r2
 5071 006a 1B01     		lsls	r3, r3, #4
 5072 006c B833     		adds	r3, r3, #184
 5073 006e D7F8E024 		ldr	r2, [r7, #1248]
 5074 0072 1344     		add	r3, r3, r2
 5075 0074 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5076              		.loc 1 839 0
 5077 0076 07F56673 		add	r3, r7, #920
 5078 007a 9A60     		str	r2, [r3, #8]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 5079              		.loc 1 843 0
 5080 007c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5081 0080 1346     		mov	r3, r2
 5082 0082 DB00     		lsls	r3, r3, #3
 5083 0084 9B1A     		subs	r3, r3, r2
 5084 0086 1B01     		lsls	r3, r3, #4
 5085 0088 E033     		adds	r3, r3, #224
 5086 008a D7F8E024 		ldr	r2, [r7, #1248]
 5087 008e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5088              		.loc 1 839 0
 5089 0090 07F56673 		add	r3, r7, #920
 5090 0094 DA60     		str	r2, [r3, #12]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5091              		.loc 1 844 0
 5092 0096 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5093 009a 1346     		mov	r3, r2
 5094 009c DB00     		lsls	r3, r3, #3
 5095 009e 9B1A     		subs	r3, r3, r2
 5096 00a0 1B01     		lsls	r3, r3, #4
 5097 00a2 03F58473 		add	r3, r3, #264
 5098 00a6 D7F8E024 		ldr	r2, [r7, #1248]
 5099 00aa 1344     		add	r3, r3, r2
 5100 00ac 9A1D     		adds	r2, r3, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 130


 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5101              		.loc 1 839 0
 5102 00ae 07F56673 		add	r3, r7, #920
 5103 00b2 1A61     		str	r2, [r3, #16]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5104              		.loc 1 845 0
 5105 00b4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5106 00b8 1346     		mov	r3, r2
 5107 00ba DB00     		lsls	r3, r3, #3
 5108 00bc 9B1A     		subs	r3, r3, r2
 5109 00be 1B01     		lsls	r3, r3, #4
 5110 00c0 03F58473 		add	r3, r3, #264
 5111 00c4 D7F8E024 		ldr	r2, [r7, #1248]
 5112 00c8 1344     		add	r3, r3, r2
 5113 00ca DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5114              		.loc 1 839 0
 5115 00cc 07F56673 		add	r3, r7, #920
 5116 00d0 5A61     		str	r2, [r3, #20]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 5117              		.loc 1 846 0
 5118 00d2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5119 00d6 D7F8E014 		ldr	r1, [r7, #1248]
 5120 00da 1346     		mov	r3, r2
 5121 00dc DB00     		lsls	r3, r3, #3
 5122 00de 9B1A     		subs	r3, r3, r2
 5123 00e0 1B01     		lsls	r3, r3, #4
 5124 00e2 0B44     		add	r3, r3, r1
 5125 00e4 03F58873 		add	r3, r3, #272
 5126 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5127 00ea 1A46     		mov	r2, r3
 5128 00ec 1346     		mov	r3, r2
 5129 00ee 5B00     		lsls	r3, r3, #1
 5130 00f0 1344     		add	r3, r3, r2
 5131 00f2 1B01     		lsls	r3, r3, #4
 5132 00f4 03F5C873 		add	r3, r3, #400
 5133 00f8 D7F8E024 		ldr	r2, [r7, #1248]
 5134 00fc 1344     		add	r3, r3, r2
 5135 00fe 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5136              		.loc 1 839 0
 5137 0100 07F56673 		add	r3, r7, #920
 5138 0104 9A61     		str	r2, [r3, #24]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5139              		.loc 1 847 0
 5140 0106 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5141 010a D7F8E014 		ldr	r1, [r7, #1248]
 5142 010e 1346     		mov	r3, r2
 5143 0110 DB00     		lsls	r3, r3, #3
 5144 0112 9B1A     		subs	r3, r3, r2
 5145 0114 1B01     		lsls	r3, r3, #4
 5146 0116 0B44     		add	r3, r3, r1
 5147 0118 03F58873 		add	r3, r3, #272
 5148 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5149 011e 1A46     		mov	r2, r3
 5150 0120 1346     		mov	r3, r2
 5151 0122 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 131


 5152 0124 1344     		add	r3, r3, r2
 5153 0126 1B01     		lsls	r3, r3, #4
 5154 0128 03F5CC73 		add	r3, r3, #408
 5155 012c D7F8E024 		ldr	r2, [r7, #1248]
 5156 0130 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5157              		.loc 1 839 0
 5158 0132 07F56673 		add	r3, r7, #920
 5159 0136 DA61     		str	r2, [r3, #28]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 5160              		.loc 1 848 0
 5161 0138 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5162 013c D7F8E014 		ldr	r1, [r7, #1248]
 5163 0140 1346     		mov	r3, r2
 5164 0142 DB00     		lsls	r3, r3, #3
 5165 0144 9B1A     		subs	r3, r3, r2
 5166 0146 1B01     		lsls	r3, r3, #4
 5167 0148 0B44     		add	r3, r3, r1
 5168 014a 03F58873 		add	r3, r3, #272
 5169 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5170 0150 1A46     		mov	r2, r3
 5171 0152 1346     		mov	r3, r2
 5172 0154 5B00     		lsls	r3, r3, #1
 5173 0156 1344     		add	r3, r3, r2
 5174 0158 1B01     		lsls	r3, r3, #4
 5175 015a 03F5D073 		add	r3, r3, #416
 5176 015e D7F8E024 		ldr	r2, [r7, #1248]
 5177 0162 1344     		add	r3, r3, r2
 5178 0164 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5179              		.loc 1 839 0
 5180 0166 07F56673 		add	r3, r7, #920
 5181 016a 1A62     		str	r2, [r3, #32]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5182              		.loc 1 849 0
 5183 016c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5184 0170 1346     		mov	r3, r2
 5185 0172 DB00     		lsls	r3, r3, #3
 5186 0174 9B1A     		subs	r3, r3, r2
 5187 0176 1B01     		lsls	r3, r3, #4
 5188 0178 E033     		adds	r3, r3, #224
 5189 017a D7F8E024 		ldr	r2, [r7, #1248]
 5190 017e 1344     		add	r3, r3, r2
 5191 0180 DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5192              		.loc 1 839 0
 5193 0182 07F56673 		add	r3, r7, #920
 5194 0186 5A62     		str	r2, [r3, #36]
 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5195              		.loc 1 850 0
 5196 0188 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5197 018c 1346     		mov	r3, r2
 5198 018e DB00     		lsls	r3, r3, #3
 5199 0190 9B1A     		subs	r3, r3, r2
 5200 0192 1B01     		lsls	r3, r3, #4
 5201 0194 E033     		adds	r3, r3, #224
 5202 0196 D7F8E024 		ldr	r2, [r7, #1248]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 132


 5203 019a 1344     		add	r3, r3, r2
 5204 019c 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5205              		.loc 1 839 0
 5206 019e 07F56673 		add	r3, r7, #920
 5207 01a2 9A62     		str	r2, [r3, #40]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5208              		.loc 1 851 0
 5209 01a4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5210 01a8 1346     		mov	r3, r2
 5211 01aa DB00     		lsls	r3, r3, #3
 5212 01ac 9B1A     		subs	r3, r3, r2
 5213 01ae 1B01     		lsls	r3, r3, #4
 5214 01b0 E833     		adds	r3, r3, #232
 5215 01b2 D7F8E024 		ldr	r2, [r7, #1248]
 5216 01b6 1344     		add	r3, r3, r2
 5217 01b8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5218              		.loc 1 839 0
 5219 01ba 07F56673 		add	r3, r7, #920
 5220 01be DA62     		str	r2, [r3, #44]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5221              		.loc 1 852 0
 5222 01c0 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5223 01c4 1346     		mov	r3, r2
 5224 01c6 DB00     		lsls	r3, r3, #3
 5225 01c8 9B1A     		subs	r3, r3, r2
 5226 01ca 1B01     		lsls	r3, r3, #4
 5227 01cc 03F58473 		add	r3, r3, #264
 5228 01d0 D7F8E024 		ldr	r2, [r7, #1248]
 5229 01d4 1344     		add	r3, r3, r2
 5230 01d6 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5231              		.loc 1 839 0
 5232 01d8 07F56673 		add	r3, r7, #920
 5233 01dc 1A63     		str	r2, [r3, #48]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5234              		.loc 1 853 0
 5235 01de D7F8E034 		ldr	r3, [r7, #1248]
 5236 01e2 03F5F872 		add	r2, r3, #496
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5237              		.loc 1 839 0
 5238 01e6 07F56673 		add	r3, r7, #920
 5239 01ea 5A63     		str	r2, [r3, #52]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5240              		.loc 1 854 0
 5241 01ec D7F8E034 		ldr	r3, [r7, #1248]
 5242 01f0 03F5FF72 		add	r2, r3, #510
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5243              		.loc 1 839 0
 5244 01f4 07F56673 		add	r3, r7, #920
 5245 01f8 9A63     		str	r2, [r3, #56]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5246              		.loc 1 855 0
 5247 01fa D7F8E034 		ldr	r3, [r7, #1248]
 5248 01fe 03F5FA72 		add	r2, r3, #500
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 133


 5249              		.loc 1 839 0
 5250 0202 07F56673 		add	r3, r7, #920
 5251 0206 DA63     		str	r2, [r3, #60]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 5252              		.loc 1 856 0
 5253 0208 D7F8E034 		ldr	r3, [r7, #1248]
 5254 020c 03F5FE72 		add	r2, r3, #508
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5255              		.loc 1 839 0
 5256 0210 07F56673 		add	r3, r7, #920
 5257 0214 1A64     		str	r2, [r3, #64]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5258              		.loc 1 857 0
 5259 0216 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5260 021a D7F8E014 		ldr	r1, [r7, #1248]
 5261 021e 1346     		mov	r3, r2
 5262 0220 DB00     		lsls	r3, r3, #3
 5263 0222 9B1A     		subs	r3, r3, r2
 5264 0224 1B01     		lsls	r3, r3, #4
 5265 0226 0B44     		add	r3, r3, r1
 5266 0228 03F58873 		add	r3, r3, #272
 5267 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5268 022e 1A46     		mov	r2, r3
 5269 0230 1346     		mov	r3, r2
 5270 0232 5B00     		lsls	r3, r3, #1
 5271 0234 1344     		add	r3, r3, r2
 5272 0236 1B01     		lsls	r3, r3, #4
 5273 0238 03F5D873 		add	r3, r3, #432
 5274 023c D7F8E024 		ldr	r2, [r7, #1248]
 5275 0240 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5276              		.loc 1 839 0
 5277 0242 07F56673 		add	r3, r7, #920
 5278 0246 5A64     		str	r2, [r3, #68]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5279              		.loc 1 858 0
 5280 0248 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5281 024c D7F8E014 		ldr	r1, [r7, #1248]
 5282 0250 1346     		mov	r3, r2
 5283 0252 DB00     		lsls	r3, r3, #3
 5284 0254 9B1A     		subs	r3, r3, r2
 5285 0256 1B01     		lsls	r3, r3, #4
 5286 0258 0B44     		add	r3, r3, r1
 5287 025a 03F58873 		add	r3, r3, #272
 5288 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5289 0260 1A46     		mov	r2, r3
 5290 0262 1346     		mov	r3, r2
 5291 0264 5B00     		lsls	r3, r3, #1
 5292 0266 1344     		add	r3, r3, r2
 5293 0268 1B01     		lsls	r3, r3, #4
 5294 026a 03F5D873 		add	r3, r3, #432
 5295 026e D7F8E024 		ldr	r2, [r7, #1248]
 5296 0272 1344     		add	r3, r3, r2
 5297 0274 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5298              		.loc 1 839 0
 5299 0276 07F56673 		add	r3, r7, #920
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 134


 5300 027a 9A64     		str	r2, [r3, #72]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5301              		.loc 1 859 0
 5302 027c 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5303 0280 1346     		mov	r3, r2
 5304 0282 DB00     		lsls	r3, r3, #3
 5305 0284 9B1A     		subs	r3, r3, r2
 5306 0286 1B01     		lsls	r3, r3, #4
 5307 0288 E033     		adds	r3, r3, #224
 5308 028a D7F8E024 		ldr	r2, [r7, #1248]
 5309 028e 1344     		add	r3, r3, r2
 5310 0290 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5311              		.loc 1 839 0
 5312 0292 07F56673 		add	r3, r7, #920
 5313 0296 DA64     		str	r2, [r3, #76]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5314              		.loc 1 860 0
 5315 0298 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5316 029c 1346     		mov	r3, r2
 5317 029e DB00     		lsls	r3, r3, #3
 5318 02a0 9B1A     		subs	r3, r3, r2
 5319 02a2 1B01     		lsls	r3, r3, #4
 5320 02a4 F033     		adds	r3, r3, #240
 5321 02a6 D7F8E024 		ldr	r2, [r7, #1248]
 5322 02aa 1344     		add	r3, r3, r2
 5323 02ac 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5324              		.loc 1 839 0
 5325 02ae 07F56673 		add	r3, r7, #920
 5326 02b2 1A65     		str	r2, [r3, #80]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5327              		.loc 1 861 0
 5328 02b4 D7F8E034 		ldr	r3, [r7, #1248]
 5329 02b8 03F1A102 		add	r2, r3, #161
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5330              		.loc 1 839 0
 5331 02bc 07F56673 		add	r3, r7, #920
 5332 02c0 5A65     		str	r2, [r3, #84]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5333              		.loc 1 862 0
 5334 02c2 D7F8E034 		ldr	r3, [r7, #1248]
 5335 02c6 03F52872 		add	r2, r3, #672
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5336              		.loc 1 839 0
 5337 02ca 07F56673 		add	r3, r7, #920
 5338 02ce 9A65     		str	r2, [r3, #88]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5339              		.loc 1 863 0
 5340 02d0 D7F8E034 		ldr	r3, [r7, #1248]
 5341 02d4 03F52972 		add	r2, r3, #676
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5342              		.loc 1 839 0
 5343 02d8 07F56673 		add	r3, r7, #920
 5344 02dc DA65     		str	r2, [r3, #92]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5345              		.loc 1 864 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 135


 5346 02de D7F8E034 		ldr	r3, [r7, #1248]
 5347 02e2 03F52A72 		add	r2, r3, #680
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5348              		.loc 1 839 0
 5349 02e6 07F56673 		add	r3, r7, #920
 5350 02ea 1A66     		str	r2, [r3, #96]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5351              		.loc 1 865 0
 5352 02ec D7F8E034 		ldr	r3, [r7, #1248]
 5353 02f0 03F52B72 		add	r2, r3, #684
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5354              		.loc 1 839 0
 5355 02f4 07F56673 		add	r3, r7, #920
 5356 02f8 5A66     		str	r2, [r3, #100]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5357              		.loc 1 866 0
 5358 02fa D7F8E034 		ldr	r3, [r7, #1248]
 5359 02fe 03F2FF12 		addw	r2, r3, #511
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5360              		.loc 1 839 0
 5361 0302 07F56673 		add	r3, r7, #920
 5362 0306 9A66     		str	r2, [r3, #104]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5363              		.loc 1 867 0
 5364 0308 D7F8E034 		ldr	r3, [r7, #1248]
 5365 030c 03F1A702 		add	r2, r3, #167
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5366              		.loc 1 839 0
 5367 0310 07F56673 		add	r3, r7, #920
 5368 0314 DA66     		str	r2, [r3, #108]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5369              		.loc 1 868 0
 5370 0316 D7F8E034 		ldr	r3, [r7, #1248]
 5371 031a 03F50072 		add	r2, r3, #512
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5372              		.loc 1 839 0
 5373 031e 07F56673 		add	r3, r7, #920
 5374 0322 1A67     		str	r2, [r3, #112]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5375              		.loc 1 869 0
 5376 0324 D7F8E034 		ldr	r3, [r7, #1248]
 5377 0328 03F22622 		addw	r2, r3, #550
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5378              		.loc 1 839 0
 5379 032c 07F56673 		add	r3, r7, #920
 5380 0330 5A67     		str	r2, [r3, #116]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5381              		.loc 1 870 0
 5382 0332 D7F8E034 		ldr	r3, [r7, #1248]
 5383 0336 03F1A802 		add	r2, r3, #168
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5384              		.loc 1 839 0
 5385 033a 07F56673 		add	r3, r7, #920
 5386 033e 9A67     		str	r2, [r3, #120]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5387              		.loc 1 871 0
 5388 0340 D7F8E034 		ldr	r3, [r7, #1248]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 136


 5389 0344 03F50872 		add	r2, r3, #544
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5390              		.loc 1 839 0
 5391 0348 07F56673 		add	r3, r7, #920
 5392 034c DA67     		str	r2, [r3, #124]
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5393              		.loc 1 872 0
 5394 034e D7F8E034 		ldr	r3, [r7, #1248]
 5395 0352 03F20122 		addw	r2, r3, #513
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5396              		.loc 1 839 0
 5397 0356 07F56673 		add	r3, r7, #920
 5398 035a C3F88020 		str	r2, [r3, #128]
 873:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5399              		.loc 1 873 0
 5400 035e D7F8E034 		ldr	r3, [r7, #1248]
 5401 0362 03F20222 		addw	r2, r3, #514
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5402              		.loc 1 839 0
 5403 0366 07F56673 		add	r3, r7, #920
 5404 036a C3F88420 		str	r2, [r3, #132]
 874:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5405              		.loc 1 874 0
 5406 036e D7F8E034 		ldr	r3, [r7, #1248]
 5407 0372 03F1AB02 		add	r2, r3, #171
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5408              		.loc 1 839 0
 5409 0376 07F56673 		add	r3, r7, #920
 5410 037a C3F88820 		str	r2, [r3, #136]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5411              		.loc 1 875 0
 5412 037e D7F8E034 		ldr	r3, [r7, #1248]
 5413 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5414 0386 1233     		adds	r3, r3, #18
 5415 0388 5B01     		lsls	r3, r3, #5
 5416 038a D7F8E024 		ldr	r2, [r7, #1248]
 5417 038e 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5418              		.loc 1 839 0
 5419 0390 07F56673 		add	r3, r7, #920
 5420 0394 C3F88C20 		str	r2, [r3, #140]
 876:..\src/command_processing.c ****         
 877:..\src/command_processing.c ****         // GENERIC PARAMS
 878:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5421              		.loc 1 878 0
 5422 0398 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5423 039c 1346     		mov	r3, r2
 5424 039e DB00     		lsls	r3, r3, #3
 5425 03a0 9B1A     		subs	r3, r3, r2
 5426 03a2 1B01     		lsls	r3, r3, #4
 5427 03a4 03F58873 		add	r3, r3, #272
 5428 03a8 D7F8E024 		ldr	r2, [r7, #1248]
 5429 03ac 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5430              		.loc 1 839 0
 5431 03ae 07F56673 		add	r3, r7, #920
 5432 03b2 C3F89020 		str	r2, [r3, #144]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 137


 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5433              		.loc 1 879 0
 5434 03b6 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5435 03ba 1346     		mov	r3, r2
 5436 03bc DB00     		lsls	r3, r3, #3
 5437 03be 9B1A     		subs	r3, r3, r2
 5438 03c0 1B01     		lsls	r3, r3, #4
 5439 03c2 E033     		adds	r3, r3, #224
 5440 03c4 D7F8E024 		ldr	r2, [r7, #1248]
 5441 03c8 1344     		add	r3, r3, r2
 5442 03ca 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5443              		.loc 1 839 0
 5444 03cc 07F56673 		add	r3, r7, #920
 5445 03d0 C3F89420 		str	r2, [r3, #148]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5446              		.loc 1 880 0
 5447 03d4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5448 03d8 1346     		mov	r3, r2
 5449 03da DB00     		lsls	r3, r3, #3
 5450 03dc 9B1A     		subs	r3, r3, r2
 5451 03de 1B01     		lsls	r3, r3, #4
 5452 03e0 03F58873 		add	r3, r3, #272
 5453 03e4 D7F8E024 		ldr	r2, [r7, #1248]
 5454 03e8 1344     		add	r3, r3, r2
 5455 03ea 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5456              		.loc 1 839 0
 5457 03ec 07F56673 		add	r3, r7, #920
 5458 03f0 C3F89820 		str	r2, [r3, #152]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5459              		.loc 1 881 0
 5460 03f4 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5461 03f8 1346     		mov	r3, r2
 5462 03fa DB00     		lsls	r3, r3, #3
 5463 03fc 9B1A     		subs	r3, r3, r2
 5464 03fe 1B01     		lsls	r3, r3, #4
 5465 0400 03F58873 		add	r3, r3, #272
 5466 0404 D7F8E024 		ldr	r2, [r7, #1248]
 5467 0408 1344     		add	r3, r3, r2
 5468 040a 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5469              		.loc 1 839 0
 5470 040c 07F56673 		add	r3, r7, #920
 5471 0410 C3F89C20 		str	r2, [r3, #156]
 882:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5472              		.loc 1 882 0
 5473 0414 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5474 0418 D7F8E014 		ldr	r1, [r7, #1248]
 5475 041c 1346     		mov	r3, r2
 5476 041e DB00     		lsls	r3, r3, #3
 5477 0420 9B1A     		subs	r3, r3, r2
 5478 0422 1B01     		lsls	r3, r3, #4
 5479 0424 0B44     		add	r3, r3, r1
 5480 0426 03F58873 		add	r3, r3, #272
 5481 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5482 042c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 138


 5483 042e 1346     		mov	r3, r2
 5484 0430 5B00     		lsls	r3, r3, #1
 5485 0432 1344     		add	r3, r3, r2
 5486 0434 1B01     		lsls	r3, r3, #4
 5487 0436 03F5D873 		add	r3, r3, #432
 5488 043a D7F8E024 		ldr	r2, [r7, #1248]
 5489 043e 1344     		add	r3, r3, r2
 5490 0440 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5491              		.loc 1 839 0
 5492 0442 07F56673 		add	r3, r7, #920
 5493 0446 C3F8A020 		str	r2, [r3, #160]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5494              		.loc 1 883 0
 5495 044a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 5496 044e D7F8E014 		ldr	r1, [r7, #1248]
 5497 0452 1346     		mov	r3, r2
 5498 0454 DB00     		lsls	r3, r3, #3
 5499 0456 9B1A     		subs	r3, r3, r2
 5500 0458 1B01     		lsls	r3, r3, #4
 5501 045a 0B44     		add	r3, r3, r1
 5502 045c 03F58873 		add	r3, r3, #272
 5503 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5504 0462 1A46     		mov	r2, r3
 5505 0464 1346     		mov	r3, r2
 5506 0466 5B00     		lsls	r3, r3, #1
 5507 0468 1344     		add	r3, r3, r2
 5508 046a 1B01     		lsls	r3, r3, #4
 5509 046c 03F5D873 		add	r3, r3, #432
 5510 0470 D7F8E024 		ldr	r2, [r7, #1248]
 5511 0474 1344     		add	r3, r3, r2
 5512 0476 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5513              		.loc 1 839 0
 5514 0478 07F56673 		add	r3, r7, #920
 5515 047c C3F8A420 		str	r2, [r3, #164]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 5516              		.loc 1 884 0
 5517 0480 D7F8E034 		ldr	r3, [r7, #1248]
 5518 0484 03F1A902 		add	r2, r3, #169
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5519              		.loc 1 839 0
 5520 0488 07F56673 		add	r3, r7, #920
 5521 048c C3F8A820 		str	r2, [r3, #168]
 885:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 5522              		.loc 1 885 0
 5523 0490 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5524 0494 1346     		mov	r3, r2
 5525 0496 DB00     		lsls	r3, r3, #3
 5526 0498 9B1A     		subs	r3, r3, r2
 5527 049a 1B01     		lsls	r3, r3, #4
 5528 049c B033     		adds	r3, r3, #176
 5529 049e D7F8E024 		ldr	r2, [r7, #1248]
 5530 04a2 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5531              		.loc 1 839 0
 5532 04a4 07F56673 		add	r3, r7, #920
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 139


 5533 04a8 C3F8AC20 		str	r2, [r3, #172]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 5534              		.loc 1 886 0
 5535 04ac 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5536 04b0 1346     		mov	r3, r2
 5537 04b2 DB00     		lsls	r3, r3, #3
 5538 04b4 9B1A     		subs	r3, r3, r2
 5539 04b6 1B01     		lsls	r3, r3, #4
 5540 04b8 B833     		adds	r3, r3, #184
 5541 04ba D7F8E024 		ldr	r2, [r7, #1248]
 5542 04be 1344     		add	r3, r3, r2
 5543 04c0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5544              		.loc 1 839 0
 5545 04c2 07F56673 		add	r3, r7, #920
 5546 04c6 C3F8B020 		str	r2, [r3, #176]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 5547              		.loc 1 887 0
 5548 04ca 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5549 04ce 1346     		mov	r3, r2
 5550 04d0 DB00     		lsls	r3, r3, #3
 5551 04d2 9B1A     		subs	r3, r3, r2
 5552 04d4 1B01     		lsls	r3, r3, #4
 5553 04d6 E033     		adds	r3, r3, #224
 5554 04d8 D7F8E024 		ldr	r2, [r7, #1248]
 5555 04dc 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5556              		.loc 1 839 0
 5557 04de 07F56673 		add	r3, r7, #920
 5558 04e2 C3F8B420 		str	r2, [r3, #180]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 5559              		.loc 1 888 0
 5560 04e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5561 04ea 1346     		mov	r3, r2
 5562 04ec DB00     		lsls	r3, r3, #3
 5563 04ee 9B1A     		subs	r3, r3, r2
 5564 04f0 1B01     		lsls	r3, r3, #4
 5565 04f2 03F58473 		add	r3, r3, #264
 5566 04f6 D7F8E024 		ldr	r2, [r7, #1248]
 5567 04fa 1344     		add	r3, r3, r2
 5568 04fc 9A1D     		adds	r2, r3, #6
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5569              		.loc 1 839 0
 5570 04fe 07F56673 		add	r3, r7, #920
 5571 0502 C3F8B820 		str	r2, [r3, #184]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 5572              		.loc 1 889 0
 5573 0506 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5574 050a 1346     		mov	r3, r2
 5575 050c DB00     		lsls	r3, r3, #3
 5576 050e 9B1A     		subs	r3, r3, r2
 5577 0510 1B01     		lsls	r3, r3, #4
 5578 0512 03F58473 		add	r3, r3, #264
 5579 0516 D7F8E024 		ldr	r2, [r7, #1248]
 5580 051a 1344     		add	r3, r3, r2
 5581 051c DA1D     		adds	r2, r3, #7
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 140


 5582              		.loc 1 839 0
 5583 051e 07F56673 		add	r3, r7, #920
 5584 0522 C3F8BC20 		str	r2, [r3, #188]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 5585              		.loc 1 890 0
 5586 0526 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5587 052a D7F8E014 		ldr	r1, [r7, #1248]
 5588 052e 1346     		mov	r3, r2
 5589 0530 DB00     		lsls	r3, r3, #3
 5590 0532 9B1A     		subs	r3, r3, r2
 5591 0534 1B01     		lsls	r3, r3, #4
 5592 0536 0B44     		add	r3, r3, r1
 5593 0538 03F58873 		add	r3, r3, #272
 5594 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5595 053e 1A46     		mov	r2, r3
 5596 0540 1346     		mov	r3, r2
 5597 0542 5B00     		lsls	r3, r3, #1
 5598 0544 1344     		add	r3, r3, r2
 5599 0546 1B01     		lsls	r3, r3, #4
 5600 0548 03F5C873 		add	r3, r3, #400
 5601 054c D7F8E024 		ldr	r2, [r7, #1248]
 5602 0550 1344     		add	r3, r3, r2
 5603 0552 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5604              		.loc 1 839 0
 5605 0554 07F56673 		add	r3, r7, #920
 5606 0558 C3F8C020 		str	r2, [r3, #192]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 5607              		.loc 1 891 0
 5608 055c 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5609 0560 D7F8E014 		ldr	r1, [r7, #1248]
 5610 0564 1346     		mov	r3, r2
 5611 0566 DB00     		lsls	r3, r3, #3
 5612 0568 9B1A     		subs	r3, r3, r2
 5613 056a 1B01     		lsls	r3, r3, #4
 5614 056c 0B44     		add	r3, r3, r1
 5615 056e 03F58873 		add	r3, r3, #272
 5616 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5617 0574 1A46     		mov	r2, r3
 5618 0576 1346     		mov	r3, r2
 5619 0578 5B00     		lsls	r3, r3, #1
 5620 057a 1344     		add	r3, r3, r2
 5621 057c 1B01     		lsls	r3, r3, #4
 5622 057e 03F5CC73 		add	r3, r3, #408
 5623 0582 D7F8E024 		ldr	r2, [r7, #1248]
 5624 0586 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5625              		.loc 1 839 0
 5626 0588 07F56673 		add	r3, r7, #920
 5627 058c C3F8C420 		str	r2, [r3, #196]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 5628              		.loc 1 892 0
 5629 0590 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5630 0594 D7F8E014 		ldr	r1, [r7, #1248]
 5631 0598 1346     		mov	r3, r2
 5632 059a DB00     		lsls	r3, r3, #3
 5633 059c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 141


 5634 059e 1B01     		lsls	r3, r3, #4
 5635 05a0 0B44     		add	r3, r3, r1
 5636 05a2 03F58873 		add	r3, r3, #272
 5637 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5638 05a8 1A46     		mov	r2, r3
 5639 05aa 1346     		mov	r3, r2
 5640 05ac 5B00     		lsls	r3, r3, #1
 5641 05ae 1344     		add	r3, r3, r2
 5642 05b0 1B01     		lsls	r3, r3, #4
 5643 05b2 03F5D073 		add	r3, r3, #416
 5644 05b6 D7F8E024 		ldr	r2, [r7, #1248]
 5645 05ba 1344     		add	r3, r3, r2
 5646 05bc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5647              		.loc 1 839 0
 5648 05be 07F56673 		add	r3, r7, #920
 5649 05c2 C3F8C820 		str	r2, [r3, #200]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 5650              		.loc 1 893 0
 5651 05c6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5652 05ca 1346     		mov	r3, r2
 5653 05cc DB00     		lsls	r3, r3, #3
 5654 05ce 9B1A     		subs	r3, r3, r2
 5655 05d0 1B01     		lsls	r3, r3, #4
 5656 05d2 E033     		adds	r3, r3, #224
 5657 05d4 D7F8E024 		ldr	r2, [r7, #1248]
 5658 05d8 1344     		add	r3, r3, r2
 5659 05da DA1C     		adds	r2, r3, #3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5660              		.loc 1 839 0
 5661 05dc 07F56673 		add	r3, r7, #920
 5662 05e0 C3F8CC20 		str	r2, [r3, #204]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 5663              		.loc 1 894 0
 5664 05e4 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5665 05e8 1346     		mov	r3, r2
 5666 05ea DB00     		lsls	r3, r3, #3
 5667 05ec 9B1A     		subs	r3, r3, r2
 5668 05ee 1B01     		lsls	r3, r3, #4
 5669 05f0 E033     		adds	r3, r3, #224
 5670 05f2 D7F8E024 		ldr	r2, [r7, #1248]
 5671 05f6 1344     		add	r3, r3, r2
 5672 05f8 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5673              		.loc 1 839 0
 5674 05fa 07F56673 		add	r3, r7, #920
 5675 05fe C3F8D020 		str	r2, [r3, #208]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 5676              		.loc 1 895 0
 5677 0602 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5678 0606 1346     		mov	r3, r2
 5679 0608 DB00     		lsls	r3, r3, #3
 5680 060a 9B1A     		subs	r3, r3, r2
 5681 060c 1B01     		lsls	r3, r3, #4
 5682 060e E833     		adds	r3, r3, #232
 5683 0610 D7F8E024 		ldr	r2, [r7, #1248]
 5684 0614 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 142


 5685 0616 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5686              		.loc 1 839 0
 5687 0618 07F56673 		add	r3, r7, #920
 5688 061c C3F8D420 		str	r2, [r3, #212]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 5689              		.loc 1 896 0
 5690 0620 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5691 0624 1346     		mov	r3, r2
 5692 0626 DB00     		lsls	r3, r3, #3
 5693 0628 9B1A     		subs	r3, r3, r2
 5694 062a 1B01     		lsls	r3, r3, #4
 5695 062c 03F58473 		add	r3, r3, #264
 5696 0630 D7F8E024 		ldr	r2, [r7, #1248]
 5697 0634 1344     		add	r3, r3, r2
 5698 0636 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5699              		.loc 1 839 0
 5700 0638 07F56673 		add	r3, r7, #920
 5701 063c C3F8D820 		str	r2, [r3, #216]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 5702              		.loc 1 897 0
 5703 0640 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5704 0644 D7F8E014 		ldr	r1, [r7, #1248]
 5705 0648 1346     		mov	r3, r2
 5706 064a DB00     		lsls	r3, r3, #3
 5707 064c 9B1A     		subs	r3, r3, r2
 5708 064e 1B01     		lsls	r3, r3, #4
 5709 0650 0B44     		add	r3, r3, r1
 5710 0652 03F58873 		add	r3, r3, #272
 5711 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5712 0658 1A46     		mov	r2, r3
 5713 065a 1346     		mov	r3, r2
 5714 065c 5B00     		lsls	r3, r3, #1
 5715 065e 1344     		add	r3, r3, r2
 5716 0660 1B01     		lsls	r3, r3, #4
 5717 0662 03F5D873 		add	r3, r3, #432
 5718 0666 D7F8E024 		ldr	r2, [r7, #1248]
 5719 066a 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5720              		.loc 1 839 0
 5721 066c 07F56673 		add	r3, r7, #920
 5722 0670 C3F8DC20 		str	r2, [r3, #220]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 5723              		.loc 1 898 0
 5724 0674 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5725 0678 D7F8E014 		ldr	r1, [r7, #1248]
 5726 067c 1346     		mov	r3, r2
 5727 067e DB00     		lsls	r3, r3, #3
 5728 0680 9B1A     		subs	r3, r3, r2
 5729 0682 1B01     		lsls	r3, r3, #4
 5730 0684 0B44     		add	r3, r3, r1
 5731 0686 03F58873 		add	r3, r3, #272
 5732 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5733 068c 1A46     		mov	r2, r3
 5734 068e 1346     		mov	r3, r2
 5735 0690 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 143


 5736 0692 1344     		add	r3, r3, r2
 5737 0694 1B01     		lsls	r3, r3, #4
 5738 0696 03F5D873 		add	r3, r3, #432
 5739 069a D7F8E024 		ldr	r2, [r7, #1248]
 5740 069e 1344     		add	r3, r3, r2
 5741 06a0 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5742              		.loc 1 839 0
 5743 06a2 07F56673 		add	r3, r7, #920
 5744 06a6 C3F8E020 		str	r2, [r3, #224]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 5745              		.loc 1 899 0
 5746 06aa 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5747 06ae 1346     		mov	r3, r2
 5748 06b0 DB00     		lsls	r3, r3, #3
 5749 06b2 9B1A     		subs	r3, r3, r2
 5750 06b4 1B01     		lsls	r3, r3, #4
 5751 06b6 E033     		adds	r3, r3, #224
 5752 06b8 D7F8E024 		ldr	r2, [r7, #1248]
 5753 06bc 1344     		add	r3, r3, r2
 5754 06be 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5755              		.loc 1 839 0
 5756 06c0 07F56673 		add	r3, r7, #920
 5757 06c4 C3F8E420 		str	r2, [r3, #228]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 5758              		.loc 1 900 0
 5759 06c8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5760 06cc 1346     		mov	r3, r2
 5761 06ce DB00     		lsls	r3, r3, #3
 5762 06d0 9B1A     		subs	r3, r3, r2
 5763 06d2 1B01     		lsls	r3, r3, #4
 5764 06d4 F033     		adds	r3, r3, #240
 5765 06d6 D7F8E024 		ldr	r2, [r7, #1248]
 5766 06da 1344     		add	r3, r3, r2
 5767 06dc 1A1D     		adds	r2, r3, #4
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5768              		.loc 1 839 0
 5769 06de 07F56673 		add	r3, r7, #920
 5770 06e2 C3F8E820 		str	r2, [r3, #232]
 901:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 5771              		.loc 1 901 0
 5772 06e6 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5773 06ea 1346     		mov	r3, r2
 5774 06ec DB00     		lsls	r3, r3, #3
 5775 06ee 9B1A     		subs	r3, r3, r2
 5776 06f0 1B01     		lsls	r3, r3, #4
 5777 06f2 03F58873 		add	r3, r3, #272
 5778 06f6 D7F8E024 		ldr	r2, [r7, #1248]
 5779 06fa 1A44     		add	r2, r2, r3
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5780              		.loc 1 839 0
 5781 06fc 07F56673 		add	r3, r7, #920
 5782 0700 C3F8EC20 		str	r2, [r3, #236]
 902:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 5783              		.loc 1 902 0
 5784 0704 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 144


 5785 0708 1346     		mov	r3, r2
 5786 070a DB00     		lsls	r3, r3, #3
 5787 070c 9B1A     		subs	r3, r3, r2
 5788 070e 1B01     		lsls	r3, r3, #4
 5789 0710 E033     		adds	r3, r3, #224
 5790 0712 D7F8E024 		ldr	r2, [r7, #1248]
 5791 0716 1344     		add	r3, r3, r2
 5792 0718 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5793              		.loc 1 839 0
 5794 071a 07F56673 		add	r3, r7, #920
 5795 071e C3F8F020 		str	r2, [r3, #240]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 5796              		.loc 1 903 0
 5797 0722 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5798 0726 1346     		mov	r3, r2
 5799 0728 DB00     		lsls	r3, r3, #3
 5800 072a 9B1A     		subs	r3, r3, r2
 5801 072c 1B01     		lsls	r3, r3, #4
 5802 072e 03F58873 		add	r3, r3, #272
 5803 0732 D7F8E024 		ldr	r2, [r7, #1248]
 5804 0736 1344     		add	r3, r3, r2
 5805 0738 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5806              		.loc 1 839 0
 5807 073a 07F56673 		add	r3, r7, #920
 5808 073e C3F8F420 		str	r2, [r3, #244]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 5809              		.loc 1 904 0
 5810 0742 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5811 0746 1346     		mov	r3, r2
 5812 0748 DB00     		lsls	r3, r3, #3
 5813 074a 9B1A     		subs	r3, r3, r2
 5814 074c 1B01     		lsls	r3, r3, #4
 5815 074e 03F58873 		add	r3, r3, #272
 5816 0752 D7F8E024 		ldr	r2, [r7, #1248]
 5817 0756 1344     		add	r3, r3, r2
 5818 0758 9A1C     		adds	r2, r3, #2
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5819              		.loc 1 839 0
 5820 075a 07F56673 		add	r3, r7, #920
 5821 075e C3F8F820 		str	r2, [r3, #248]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5822              		.loc 1 905 0
 5823 0762 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5824 0766 D7F8E014 		ldr	r1, [r7, #1248]
 5825 076a 1346     		mov	r3, r2
 5826 076c DB00     		lsls	r3, r3, #3
 5827 076e 9B1A     		subs	r3, r3, r2
 5828 0770 1B01     		lsls	r3, r3, #4
 5829 0772 0B44     		add	r3, r3, r1
 5830 0774 03F58873 		add	r3, r3, #272
 5831 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5832 077a 1A46     		mov	r2, r3
 5833 077c 1346     		mov	r3, r2
 5834 077e 5B00     		lsls	r3, r3, #1
 5835 0780 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 145


 5836 0782 1B01     		lsls	r3, r3, #4
 5837 0784 03F5D873 		add	r3, r3, #432
 5838 0788 D7F8E024 		ldr	r2, [r7, #1248]
 5839 078c 1344     		add	r3, r3, r2
 5840 078e 5A1C     		adds	r2, r3, #1
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5841              		.loc 1 839 0
 5842 0790 07F56673 		add	r3, r7, #920
 5843 0794 C3F8FC20 		str	r2, [r3, #252]
 906:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 5844              		.loc 1 906 0
 5845 0798 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 5846 079c D7F8E014 		ldr	r1, [r7, #1248]
 5847 07a0 1346     		mov	r3, r2
 5848 07a2 DB00     		lsls	r3, r3, #3
 5849 07a4 9B1A     		subs	r3, r3, r2
 5850 07a6 1B01     		lsls	r3, r3, #4
 5851 07a8 0B44     		add	r3, r3, r1
 5852 07aa 03F58873 		add	r3, r3, #272
 5853 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5854 07b0 1A46     		mov	r2, r3
 5855 07b2 1346     		mov	r3, r2
 5856 07b4 5B00     		lsls	r3, r3, #1
 5857 07b6 1344     		add	r3, r3, r2
 5858 07b8 1B01     		lsls	r3, r3, #4
 5859 07ba 03F5D873 		add	r3, r3, #432
 5860 07be D7F8E024 		ldr	r2, [r7, #1248]
 5861 07c2 1344     		add	r3, r3, r2
 5862 07c4 5A1D     		adds	r2, r3, #5
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5863              		.loc 1 839 0
 5864 07c6 07F56673 		add	r3, r7, #920
 5865 07ca C3F80021 		str	r2, [r3, #256]
 907:..\src/command_processing.c ****         
 908:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 5866              		.loc 1 908 0
 5867 07ce D7F8E034 		ldr	r3, [r7, #1248]
 5868 07d2 03F5C872 		add	r2, r3, #400
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5869              		.loc 1 839 0
 5870 07d6 07F56673 		add	r3, r7, #920
 5871 07da C3F80421 		str	r2, [r3, #260]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 5872              		.loc 1 909 0
 5873 07de D7F8E034 		ldr	r3, [r7, #1248]
 5874 07e2 03F5E072 		add	r2, r3, #448
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5875              		.loc 1 839 0
 5876 07e6 07F56673 		add	r3, r7, #920
 5877 07ea C3F80821 		str	r2, [r3, #264]
 910:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 5878              		.loc 1 910 0
 5879 07ee D7F8E034 		ldr	r3, [r7, #1248]
 5880 07f2 03F22722 		addw	r2, r3, #551
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5881              		.loc 1 839 0
 5882 07f6 07F56673 		add	r3, r7, #920
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 146


 5883 07fa C3F80C21 		str	r2, [r3, #268]
 911:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 5884              		.loc 1 911 0
 5885 07fe D7F8E034 		ldr	r3, [r7, #1248]
 5886 0802 03F50A72 		add	r2, r3, #552
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5887              		.loc 1 839 0
 5888 0806 07F56673 		add	r3, r7, #920
 5889 080a C3F81021 		str	r2, [r3, #272]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 5890              		.loc 1 912 0
 5891 080e D7F8E034 		ldr	r3, [r7, #1248]
 5892 0812 03F22E22 		addw	r2, r3, #558
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5893              		.loc 1 839 0
 5894 0816 07F56673 		add	r3, r7, #920
 5895 081a C3F81421 		str	r2, [r3, #276]
 913:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 5896              		.loc 1 913 0
 5897 081e D7F8E034 		ldr	r3, [r7, #1248]
 5898 0822 03F1AC02 		add	r2, r3, #172
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5899              		.loc 1 839 0
 5900 0826 07F56673 		add	r3, r7, #920
 5901 082a C3F81821 		str	r2, [r3, #280]
 914:..\src/command_processing.c ****         
 915:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 5902              		.loc 1 915 0
 5903 082e D7F8E034 		ldr	r3, [r7, #1248]
 5904 0832 03F52C72 		add	r2, r3, #688
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5905              		.loc 1 839 0
 5906 0836 07F56673 		add	r3, r7, #920
 5907 083a C3F81C21 		str	r2, [r3, #284]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 5908              		.loc 1 916 0
 5909 083e D7F8E034 		ldr	r3, [r7, #1248]
 5910 0842 03F2B122 		addw	r2, r3, #689
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5911              		.loc 1 839 0
 5912 0846 07F56673 		add	r3, r7, #920
 5913 084a C3F82021 		str	r2, [r3, #288]
 917:..\src/command_processing.c ****         
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 5914              		.loc 1 918 0
 5915 084e D7F8E034 		ldr	r3, [r7, #1248]
 5916 0852 03F53072 		add	r2, r3, #704
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5917              		.loc 1 839 0
 5918 0856 07F56673 		add	r3, r7, #920
 5919 085a C3F82421 		str	r2, [r3, #292]
 919:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 5920              		.loc 1 919 0
 5921 085e D7F8E034 		ldr	r3, [r7, #1248]
 5922 0862 03F53172 		add	r2, r3, #708
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5923              		.loc 1 839 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 147


 5924 0866 07F56673 		add	r3, r7, #920
 5925 086a C3F82821 		str	r2, [r3, #296]
 920:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain)
 5926              		.loc 1 920 0
 5927 086e D7F8E034 		ldr	r3, [r7, #1248]
 5928 0872 03F53272 		add	r2, r3, #712
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5929              		.loc 1 839 0
 5930 0876 07F56673 		add	r3, r7, #920
 5931 087a C3F82C21 		str	r2, [r3, #300]
 921:..\src/command_processing.c ****     };
 922:..\src/command_processing.c ****     
 923:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 5932              		.loc 1 923 0
 5933 087e 07F55373 		add	r3, r7, #844
 5934 0882 F44A     		ldr	r2, .L337
 5935 0884 1846     		mov	r0, r3
 5936 0886 1146     		mov	r1, r2
 5937 0888 4C23     		movs	r3, #76
 5938 088a 1A46     		mov	r2, r3
 5939 088c FFF7FEFF 		bl	memcpy
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 925:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 926:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 927:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 928:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 929:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 931:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 932:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 933:..\src/command_processing.c ****         
 934:..\src/command_processing.c ****         // GENERIC PARAMS
 935:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 936:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 937:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 938:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 939:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 940:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 941:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 942:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 943:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG,
 944:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT      
 945:..\src/command_processing.c ****     };
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 5940              		.loc 1 947 0
 5941 0890 07F54073 		add	r3, r7, #768
 5942 0894 0122     		movs	r2, #1
 5943 0896 1A70     		strb	r2, [r3]
 5944 0898 07F54073 		add	r3, r7, #768
 5945 089c 0322     		movs	r2, #3
 5946 089e 5A70     		strb	r2, [r3, #1]
 5947 08a0 07F54073 		add	r3, r7, #768
 5948 08a4 0322     		movs	r2, #3
 5949 08a6 9A70     		strb	r2, [r3, #2]
 5950 08a8 07F54073 		add	r3, r7, #768
 5951 08ac 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 148


 5952 08ae DA70     		strb	r2, [r3, #3]
 5953 08b0 07F54073 		add	r3, r7, #768
 5954 08b4 0122     		movs	r2, #1
 5955 08b6 1A71     		strb	r2, [r3, #4]
 5956 08b8 07F54073 		add	r3, r7, #768
 5957 08bc 0122     		movs	r2, #1
 5958 08be 5A71     		strb	r2, [r3, #5]
 5959 08c0 07F54073 		add	r3, r7, #768
 5960 08c4 0322     		movs	r2, #3
 5961 08c6 9A71     		strb	r2, [r3, #6]
 5962 08c8 07F54073 		add	r3, r7, #768
 5963 08cc 0322     		movs	r2, #3
 5964 08ce DA71     		strb	r2, [r3, #7]
 5965 08d0 07F54073 		add	r3, r7, #768
 5966 08d4 0322     		movs	r2, #3
 5967 08d6 1A72     		strb	r2, [r3, #8]
 5968 08d8 07F54073 		add	r3, r7, #768
 5969 08dc 0122     		movs	r2, #1
 5970 08de 5A72     		strb	r2, [r3, #9]
 5971 08e0 07F54073 		add	r3, r7, #768
 5972 08e4 0222     		movs	r2, #2
 5973 08e6 9A72     		strb	r2, [r3, #10]
 5974 08e8 07F54073 		add	r3, r7, #768
 5975 08ec 0222     		movs	r2, #2
 5976 08ee DA72     		strb	r2, [r3, #11]
 5977 08f0 07F54073 		add	r3, r7, #768
 5978 08f4 0122     		movs	r2, #1
 5979 08f6 1A73     		strb	r2, [r3, #12]
 5980 08f8 07F54073 		add	r3, r7, #768
 5981 08fc 0222     		movs	r2, #2
 5982 08fe 5A73     		strb	r2, [r3, #13]
 5983 0900 07F54073 		add	r3, r7, #768
 5984 0904 0122     		movs	r2, #1
 5985 0906 9A73     		strb	r2, [r3, #14]
 5986 0908 07F54073 		add	r3, r7, #768
 5987 090c 0222     		movs	r2, #2
 5988 090e DA73     		strb	r2, [r3, #15]
 5989 0910 07F54073 		add	r3, r7, #768
 5990 0914 0222     		movs	r2, #2
 5991 0916 1A74     		strb	r2, [r3, #16]
 5992 0918 07F54073 		add	r3, r7, #768
 5993 091c 0122     		movs	r2, #1
 5994 091e 5A74     		strb	r2, [r3, #17]
 5995 0920 07F54073 		add	r3, r7, #768
 5996 0924 0122     		movs	r2, #1
 5997 0926 9A74     		strb	r2, [r3, #18]
 5998 0928 07F54073 		add	r3, r7, #768
 5999 092c 0122     		movs	r2, #1
 6000 092e DA74     		strb	r2, [r3, #19]
 6001 0930 07F54073 		add	r3, r7, #768
 6002 0934 0622     		movs	r2, #6
 6003 0936 1A75     		strb	r2, [r3, #20]
 6004 0938 07F54073 		add	r3, r7, #768
 6005 093c 0322     		movs	r2, #3
 6006 093e 5A75     		strb	r2, [r3, #21]
 6007 0940 07F54073 		add	r3, r7, #768
 6008 0944 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 149


 6009 0946 9A75     		strb	r2, [r3, #22]
 6010 0948 07F54073 		add	r3, r7, #768
 6011 094c 0122     		movs	r2, #1
 6012 094e DA75     		strb	r2, [r3, #23]
 6013 0950 07F54073 		add	r3, r7, #768
 6014 0954 0122     		movs	r2, #1
 6015 0956 1A76     		strb	r2, [r3, #24]
 6016 0958 07F54073 		add	r3, r7, #768
 6017 095c 0122     		movs	r2, #1
 6018 095e 5A76     		strb	r2, [r3, #25]
 6019 0960 07F54073 		add	r3, r7, #768
 6020 0964 0122     		movs	r2, #1
 6021 0966 9A76     		strb	r2, [r3, #26]
 6022 0968 07F54073 		add	r3, r7, #768
 6023 096c 0122     		movs	r2, #1
 6024 096e DA76     		strb	r2, [r3, #27]
 6025 0970 07F54073 		add	r3, r7, #768
 6026 0974 0122     		movs	r2, #1
 6027 0976 1A77     		strb	r2, [r3, #28]
 6028 0978 07F54073 		add	r3, r7, #768
 6029 097c 0122     		movs	r2, #1
 6030 097e 5A77     		strb	r2, [r3, #29]
 6031 0980 07F54073 		add	r3, r7, #768
 6032 0984 0122     		movs	r2, #1
 6033 0986 9A77     		strb	r2, [r3, #30]
 6034 0988 07F54073 		add	r3, r7, #768
 6035 098c 0622     		movs	r2, #6
 6036 098e DA77     		strb	r2, [r3, #31]
 6037 0990 07F54073 		add	r3, r7, #768
 6038 0994 0122     		movs	r2, #1
 6039 0996 83F82020 		strb	r2, [r3, #32]
 6040 099a 07F54073 		add	r3, r7, #768
 6041 099e 0522     		movs	r2, #5
 6042 09a0 83F82120 		strb	r2, [r3, #33]
 6043 09a4 07F54073 		add	r3, r7, #768
 6044 09a8 0122     		movs	r2, #1
 6045 09aa 83F82220 		strb	r2, [r3, #34]
 6046 09ae 07F54073 		add	r3, r7, #768
 6047 09b2 0622     		movs	r2, #6
 6048 09b4 83F82320 		strb	r2, [r3, #35]
 6049 09b8 07F54073 		add	r3, r7, #768
 6050 09bc 0122     		movs	r2, #1
 6051 09be 83F82420 		strb	r2, [r3, #36]
 6052 09c2 07F54073 		add	r3, r7, #768
 6053 09c6 0122     		movs	r2, #1
 6054 09c8 83F82520 		strb	r2, [r3, #37]
 6055 09cc 07F54073 		add	r3, r7, #768
 6056 09d0 0122     		movs	r2, #1
 6057 09d2 83F82620 		strb	r2, [r3, #38]
 6058 09d6 07F54073 		add	r3, r7, #768
 6059 09da 0122     		movs	r2, #1
 6060 09dc 83F82720 		strb	r2, [r3, #39]
 6061 09e0 07F54073 		add	r3, r7, #768
 6062 09e4 0322     		movs	r2, #3
 6063 09e6 83F82820 		strb	r2, [r3, #40]
 6064 09ea 07F54073 		add	r3, r7, #768
 6065 09ee 0322     		movs	r2, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 150


 6066 09f0 83F82920 		strb	r2, [r3, #41]
 6067 09f4 07F54073 		add	r3, r7, #768
 6068 09f8 0122     		movs	r2, #1
 6069 09fa 83F82A20 		strb	r2, [r3, #42]
 6070 09fe 07F54073 		add	r3, r7, #768
 6071 0a02 0322     		movs	r2, #3
 6072 0a04 83F82B20 		strb	r2, [r3, #43]
 6073 0a08 07F54073 		add	r3, r7, #768
 6074 0a0c 0322     		movs	r2, #3
 6075 0a0e 83F82C20 		strb	r2, [r3, #44]
 6076 0a12 07F54073 		add	r3, r7, #768
 6077 0a16 0122     		movs	r2, #1
 6078 0a18 83F82D20 		strb	r2, [r3, #45]
 6079 0a1c 07F54073 		add	r3, r7, #768
 6080 0a20 0122     		movs	r2, #1
 6081 0a22 83F82E20 		strb	r2, [r3, #46]
 6082 0a26 07F54073 		add	r3, r7, #768
 6083 0a2a 0122     		movs	r2, #1
 6084 0a2c 83F82F20 		strb	r2, [r3, #47]
 6085 0a30 07F54073 		add	r3, r7, #768
 6086 0a34 0322     		movs	r2, #3
 6087 0a36 83F83020 		strb	r2, [r3, #48]
 6088 0a3a 07F54073 		add	r3, r7, #768
 6089 0a3e 0322     		movs	r2, #3
 6090 0a40 83F83120 		strb	r2, [r3, #49]
 6091 0a44 07F54073 		add	r3, r7, #768
 6092 0a48 0322     		movs	r2, #3
 6093 0a4a 83F83220 		strb	r2, [r3, #50]
 6094 0a4e 07F54073 		add	r3, r7, #768
 6095 0a52 0122     		movs	r2, #1
 6096 0a54 83F83320 		strb	r2, [r3, #51]
 6097 0a58 07F54073 		add	r3, r7, #768
 6098 0a5c 0222     		movs	r2, #2
 6099 0a5e 83F83420 		strb	r2, [r3, #52]
 6100 0a62 07F54073 		add	r3, r7, #768
 6101 0a66 0222     		movs	r2, #2
 6102 0a68 83F83520 		strb	r2, [r3, #53]
 6103 0a6c 07F54073 		add	r3, r7, #768
 6104 0a70 0122     		movs	r2, #1
 6105 0a72 83F83620 		strb	r2, [r3, #54]
 6106 0a76 07F54073 		add	r3, r7, #768
 6107 0a7a 0122     		movs	r2, #1
 6108 0a7c 83F83720 		strb	r2, [r3, #55]
 6109 0a80 07F54073 		add	r3, r7, #768
 6110 0a84 0122     		movs	r2, #1
 6111 0a86 83F83820 		strb	r2, [r3, #56]
 6112 0a8a 07F54073 		add	r3, r7, #768
 6113 0a8e 0122     		movs	r2, #1
 6114 0a90 83F83920 		strb	r2, [r3, #57]
 6115 0a94 07F54073 		add	r3, r7, #768
 6116 0a98 0622     		movs	r2, #6
 6117 0a9a 83F83A20 		strb	r2, [r3, #58]
 6118 0a9e 07F54073 		add	r3, r7, #768
 6119 0aa2 0122     		movs	r2, #1
 6120 0aa4 83F83B20 		strb	r2, [r3, #59]
 6121 0aa8 07F54073 		add	r3, r7, #768
 6122 0aac 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 151


 6123 0aae 83F83C20 		strb	r2, [r3, #60]
 6124 0ab2 07F54073 		add	r3, r7, #768
 6125 0ab6 0122     		movs	r2, #1
 6126 0ab8 83F83D20 		strb	r2, [r3, #61]
 6127 0abc 07F54073 		add	r3, r7, #768
 6128 0ac0 0122     		movs	r2, #1
 6129 0ac2 83F83E20 		strb	r2, [r3, #62]
 6130 0ac6 07F54073 		add	r3, r7, #768
 6131 0aca 0322     		movs	r2, #3
 6132 0acc 83F83F20 		strb	r2, [r3, #63]
 6133 0ad0 07F54073 		add	r3, r7, #768
 6134 0ad4 0322     		movs	r2, #3
 6135 0ad6 83F84020 		strb	r2, [r3, #64]
 948:..\src/command_processing.c ****         1, 3, 3, 1, 
 949:..\src/command_processing.c ****         1, 1, 3, 3,
 950:..\src/command_processing.c ****         3, 1, 2, 2, 
 951:..\src/command_processing.c ****         1, 2, 1, 2,
 952:..\src/command_processing.c ****         2, 1, 1, 1, 
 953:..\src/command_processing.c ****         6, 3, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 1, 1, 
 955:..\src/command_processing.c ****         1, 1, 1, 6,
 956:..\src/command_processing.c ****         1, 5, 1, 6,
 957:..\src/command_processing.c ****         
 958:..\src/command_processing.c ****         // GENERIC PARAMS
 959:..\src/command_processing.c ****         1, 1, 1, 1,
 960:..\src/command_processing.c ****         3, 3, 1, 3,
 961:..\src/command_processing.c ****         3, 1, 1, 1,
 962:..\src/command_processing.c ****         3, 3, 3, 1,
 963:..\src/command_processing.c ****         2, 2, 1, 1,
 964:..\src/command_processing.c ****         1, 1, 6, 1,
 965:..\src/command_processing.c ****         1, 1, 1, 3, 
 966:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6136              		.loc 1 966 0
 6137 0ada 5F4B     		ldr	r3, .L337+4
 6138 0adc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 6139              		.loc 1 947 0
 6140 0ade 07F54073 		add	r3, r7, #768
 6141 0ae2 83F84120 		strb	r2, [r3, #65]
 6142              		.loc 1 966 0
 6143 0ae6 5C4B     		ldr	r3, .L337+4
 6144 0ae8 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 947:..\src/command_processing.c ****         1, 3, 3, 1, 
 6145              		.loc 1 947 0
 6146 0aea 07F54073 		add	r3, r7, #768
 6147 0aee 83F84220 		strb	r2, [r3, #66]
 6148 0af2 07F54073 		add	r3, r7, #768
 6149 0af6 0122     		movs	r2, #1
 6150 0af8 83F84320 		strb	r2, [r3, #67]
 6151 0afc 07F54073 		add	r3, r7, #768
 6152 0b00 0622     		movs	r2, #6
 6153 0b02 83F84420 		strb	r2, [r3, #68]
 6154 0b06 07F54073 		add	r3, r7, #768
 6155 0b0a 0622     		movs	r2, #6
 6156 0b0c 83F84520 		strb	r2, [r3, #69]
 6157 0b10 07F54073 		add	r3, r7, #768
 6158 0b14 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 152


 6159 0b16 83F84620 		strb	r2, [r3, #70]
 6160 0b1a 07F54073 		add	r3, r7, #768
 6161 0b1e 0122     		movs	r2, #1
 6162 0b20 83F84720 		strb	r2, [r3, #71]
 6163 0b24 07F54073 		add	r3, r7, #768
 6164 0b28 0122     		movs	r2, #1
 6165 0b2a 83F84820 		strb	r2, [r3, #72]
 6166 0b2e 07F54073 		add	r3, r7, #768
 6167 0b32 0122     		movs	r2, #1
 6168 0b34 83F84920 		strb	r2, [r3, #73]
 6169 0b38 07F54073 		add	r3, r7, #768
 6170 0b3c 0122     		movs	r2, #1
 6171 0b3e 83F84A20 		strb	r2, [r3, #74]
 6172 0b42 07F54073 		add	r3, r7, #768
 6173 0b46 0122     		movs	r2, #1
 6174 0b48 83F84B20 		strb	r2, [r3, #75]
 967:..\src/command_processing.c ****         6, 6, 1, 1,
 968:..\src/command_processing.c ****         1, 1, 1, 1
 969:..\src/command_processing.c ****     };
 970:..\src/command_processing.c ****     
 971:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6175              		.loc 1 971 0
 6176 0b4c 07F52D73 		add	r3, r7, #692
 6177 0b50 0022     		movs	r2, #0
 6178 0b52 1A70     		strb	r2, [r3]
 6179 0b54 97F8DD34 		ldrb	r3, [r7, #1245]
 6180 0b58 0A33     		adds	r3, r3, #10
 6181 0b5a DAB2     		uxtb	r2, r3
 6182 0b5c 07F52D73 		add	r3, r7, #692
 6183 0b60 5A70     		strb	r2, [r3, #1]
 6184 0b62 97F8DD34 		ldrb	r3, [r7, #1245]
 6185 0b66 0A33     		adds	r3, r3, #10
 6186 0b68 DAB2     		uxtb	r2, r3
 6187 0b6a 07F52D73 		add	r3, r7, #692
 6188 0b6e 9A70     		strb	r2, [r3, #2]
 6189 0b70 97F8DD34 		ldrb	r3, [r7, #1245]
 6190 0b74 0A33     		adds	r3, r3, #10
 6191 0b76 DAB2     		uxtb	r2, r3
 6192 0b78 07F52D73 		add	r3, r7, #692
 6193 0b7c DA70     		strb	r2, [r3, #3]
 6194 0b7e 97F8DD34 		ldrb	r3, [r7, #1245]
 6195 0b82 0A33     		adds	r3, r3, #10
 6196 0b84 DAB2     		uxtb	r2, r3
 6197 0b86 07F52D73 		add	r3, r7, #692
 6198 0b8a 1A71     		strb	r2, [r3, #4]
 6199 0b8c 97F8DD34 		ldrb	r3, [r7, #1245]
 6200 0b90 0A33     		adds	r3, r3, #10
 6201 0b92 DAB2     		uxtb	r2, r3
 6202 0b94 07F52D73 		add	r3, r7, #692
 6203 0b98 5A71     		strb	r2, [r3, #5]
 972:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 973:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6204              		.loc 1 973 0
 6205 0b9a 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6206 0b9e D7F8E014 		ldr	r1, [r7, #1248]
 6207 0ba2 1346     		mov	r3, r2
 6208 0ba4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 153


 6209 0ba6 9B1A     		subs	r3, r3, r2
 6210 0ba8 1B01     		lsls	r3, r3, #4
 6211 0baa 0B44     		add	r3, r3, r1
 6212 0bac 03F58873 		add	r3, r3, #272
 6213 0bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6214              		.loc 1 971 0
 6215 0bb2 1433     		adds	r3, r3, #20
 6216 0bb4 DAB2     		uxtb	r2, r3
 6217 0bb6 07F52D73 		add	r3, r7, #692
 6218 0bba 9A71     		strb	r2, [r3, #6]
 6219              		.loc 1 973 0
 6220 0bbc 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6221 0bc0 D7F8E014 		ldr	r1, [r7, #1248]
 6222 0bc4 1346     		mov	r3, r2
 6223 0bc6 DB00     		lsls	r3, r3, #3
 6224 0bc8 9B1A     		subs	r3, r3, r2
 6225 0bca 1B01     		lsls	r3, r3, #4
 6226 0bcc 0B44     		add	r3, r3, r1
 6227 0bce 03F58873 		add	r3, r3, #272
 6228 0bd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6229              		.loc 1 971 0
 6230 0bd4 1433     		adds	r3, r3, #20
 6231 0bd6 DAB2     		uxtb	r2, r3
 6232 0bd8 07F52D73 		add	r3, r7, #692
 6233 0bdc DA71     		strb	r2, [r3, #7]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6234              		.loc 1 974 0
 6235 0bde 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6236 0be2 D7F8E014 		ldr	r1, [r7, #1248]
 6237 0be6 1346     		mov	r3, r2
 6238 0be8 DB00     		lsls	r3, r3, #3
 6239 0bea 9B1A     		subs	r3, r3, r2
 6240 0bec 1B01     		lsls	r3, r3, #4
 6241 0bee 0B44     		add	r3, r3, r1
 6242 0bf0 03F58873 		add	r3, r3, #272
 6243 0bf4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6244              		.loc 1 971 0
 6245 0bf6 1433     		adds	r3, r3, #20
 6246 0bf8 DAB2     		uxtb	r2, r3
 6247 0bfa 07F52D73 		add	r3, r7, #692
 6248 0bfe 1A72     		strb	r2, [r3, #8]
 6249 0c00 97F8DD34 		ldrb	r3, [r7, #1245]
 6250 0c04 0A33     		adds	r3, r3, #10
 6251 0c06 DAB2     		uxtb	r2, r3
 6252 0c08 07F52D73 		add	r3, r7, #692
 6253 0c0c 5A72     		strb	r2, [r3, #9]
 6254 0c0e 97F8DD34 		ldrb	r3, [r7, #1245]
 6255 0c12 0A33     		adds	r3, r3, #10
 6256 0c14 DAB2     		uxtb	r2, r3
 6257 0c16 07F52D73 		add	r3, r7, #692
 6258 0c1a 9A72     		strb	r2, [r3, #10]
 6259 0c1c 97F8DD34 		ldrb	r3, [r7, #1245]
 6260 0c20 0A33     		adds	r3, r3, #10
 6261 0c22 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 154


 6262 0c24 07F52D73 		add	r3, r7, #692
 6263 0c28 DA72     		strb	r2, [r3, #11]
 6264 0c2a 97F8DD34 		ldrb	r3, [r7, #1245]
 6265 0c2e 0A33     		adds	r3, r3, #10
 6266 0c30 DAB2     		uxtb	r2, r3
 6267 0c32 07F52D73 		add	r3, r7, #692
 6268 0c36 1A73     		strb	r2, [r3, #12]
 6269 0c38 07F52D73 		add	r3, r7, #692
 6270 0c3c 1E22     		movs	r2, #30
 6271 0c3e 5A73     		strb	r2, [r3, #13]
 6272 0c40 07F52D73 		add	r3, r7, #692
 6273 0c44 1E22     		movs	r2, #30
 6274 0c46 9A73     		strb	r2, [r3, #14]
 6275 0c48 07F52D73 		add	r3, r7, #692
 6276 0c4c 1E22     		movs	r2, #30
 6277 0c4e DA73     		strb	r2, [r3, #15]
 6278 0c50 04E0     		b	.L338
 6279              	.L339:
 6280 0c52 00BF     		.align	2
 6281              	.L337:
 6282 0c54 80040000 		.word	.LC0
 6283 0c58 00000000 		.word	N_Encoder_Line_Connected
 6284              	.L338:
 6285 0c5c 07F52D73 		add	r3, r7, #692
 6286 0c60 1E22     		movs	r2, #30
 6287 0c62 1A74     		strb	r2, [r3, #16]
 975:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 976:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6288              		.loc 1 976 0
 6289 0c64 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6290 0c68 D7F8E014 		ldr	r1, [r7, #1248]
 6291 0c6c 1346     		mov	r3, r2
 6292 0c6e DB00     		lsls	r3, r3, #3
 6293 0c70 9B1A     		subs	r3, r3, r2
 6294 0c72 1B01     		lsls	r3, r3, #4
 6295 0c74 0B44     		add	r3, r3, r1
 6296 0c76 03F58873 		add	r3, r3, #272
 6297 0c7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6298              		.loc 1 971 0
 6299 0c7c 1433     		adds	r3, r3, #20
 6300 0c7e DAB2     		uxtb	r2, r3
 6301 0c80 07F52D73 		add	r3, r7, #692
 6302 0c84 5A74     		strb	r2, [r3, #17]
 6303              		.loc 1 976 0
 6304 0c86 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6305 0c8a D7F8E014 		ldr	r1, [r7, #1248]
 6306 0c8e 1346     		mov	r3, r2
 6307 0c90 DB00     		lsls	r3, r3, #3
 6308 0c92 9B1A     		subs	r3, r3, r2
 6309 0c94 1B01     		lsls	r3, r3, #4
 6310 0c96 0B44     		add	r3, r3, r1
 6311 0c98 03F58873 		add	r3, r3, #272
 6312 0c9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6313              		.loc 1 971 0
 6314 0c9e 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 155


 6315 0ca0 DAB2     		uxtb	r2, r3
 6316 0ca2 07F52D73 		add	r3, r7, #692
 6317 0ca6 9A74     		strb	r2, [r3, #18]
 6318 0ca8 97F8DD34 		ldrb	r3, [r7, #1245]
 6319 0cac 0A33     		adds	r3, r3, #10
 6320 0cae DAB2     		uxtb	r2, r3
 6321 0cb0 07F52D73 		add	r3, r7, #692
 6322 0cb4 DA74     		strb	r2, [r3, #19]
 6323 0cb6 97F8DD34 		ldrb	r3, [r7, #1245]
 6324 0cba 0A33     		adds	r3, r3, #10
 6325 0cbc DAB2     		uxtb	r2, r3
 6326 0cbe 07F52D73 		add	r3, r7, #692
 6327 0cc2 1A75     		strb	r2, [r3, #20]
 6328 0cc4 07F52D73 		add	r3, r7, #692
 6329 0cc8 0022     		movs	r2, #0
 6330 0cca 5A75     		strb	r2, [r3, #21]
 6331 0ccc 07F52D73 		add	r3, r7, #692
 6332 0cd0 4622     		movs	r2, #70
 6333 0cd2 9A75     		strb	r2, [r3, #22]
 6334 0cd4 07F52D73 		add	r3, r7, #692
 6335 0cd8 4622     		movs	r2, #70
 6336 0cda DA75     		strb	r2, [r3, #23]
 6337 0cdc 07F52D73 		add	r3, r7, #692
 6338 0ce0 4622     		movs	r2, #70
 6339 0ce2 1A76     		strb	r2, [r3, #24]
 6340 0ce4 07F52D73 		add	r3, r7, #692
 6341 0ce8 4622     		movs	r2, #70
 6342 0cea 5A76     		strb	r2, [r3, #25]
 6343 0cec 07F52D73 		add	r3, r7, #692
 6344 0cf0 1E22     		movs	r2, #30
 6345 0cf2 9A76     		strb	r2, [r3, #26]
 6346 0cf4 07F52D73 		add	r3, r7, #692
 6347 0cf8 0022     		movs	r2, #0
 6348 0cfa DA76     		strb	r2, [r3, #27]
 6349 0cfc 07F52D73 		add	r3, r7, #692
 6350 0d00 2822     		movs	r2, #40
 6351 0d02 1A77     		strb	r2, [r3, #28]
 6352 0d04 07F52D73 		add	r3, r7, #692
 6353 0d08 3222     		movs	r2, #50
 6354 0d0a 5A77     		strb	r2, [r3, #29]
 6355 0d0c 07F52D73 		add	r3, r7, #692
 6356 0d10 0022     		movs	r2, #0
 6357 0d12 9A77     		strb	r2, [r3, #30]
 6358 0d14 07F52D73 		add	r3, r7, #692
 6359 0d18 3222     		movs	r2, #50
 6360 0d1a DA77     		strb	r2, [r3, #31]
 6361 0d1c 07F52D73 		add	r3, r7, #692
 6362 0d20 2822     		movs	r2, #40
 6363 0d22 83F82020 		strb	r2, [r3, #32]
 6364 0d26 07F52D73 		add	r3, r7, #692
 6365 0d2a 2822     		movs	r2, #40
 6366 0d2c 83F82120 		strb	r2, [r3, #33]
 6367 0d30 07F52D73 		add	r3, r7, #692
 6368 0d34 0022     		movs	r2, #0
 6369 0d36 83F82220 		strb	r2, [r3, #34]
 977:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 978:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 156


 979:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 980:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6370              		.loc 1 980 0
 6371 0d3a D7F8E034 		ldr	r3, [r7, #1248]
 6372 0d3e 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6373              		.loc 1 971 0
 6374 0d42 3C33     		adds	r3, r3, #60
 6375 0d44 DAB2     		uxtb	r2, r3
 6376 0d46 07F52D73 		add	r3, r7, #692
 6377 0d4a 83F82320 		strb	r2, [r3, #35]
 6378 0d4e 97F8DD34 		ldrb	r3, [r7, #1245]
 6379 0d52 0A33     		adds	r3, r3, #10
 6380 0d54 DAB2     		uxtb	r2, r3
 6381 0d56 07F52D73 		add	r3, r7, #692
 6382 0d5a 83F82420 		strb	r2, [r3, #36]
 6383 0d5e 97F8DD34 		ldrb	r3, [r7, #1245]
 6384 0d62 0A33     		adds	r3, r3, #10
 6385 0d64 DAB2     		uxtb	r2, r3
 6386 0d66 07F52D73 		add	r3, r7, #692
 6387 0d6a 83F82520 		strb	r2, [r3, #37]
 6388 0d6e 97F8DD34 		ldrb	r3, [r7, #1245]
 6389 0d72 0A33     		adds	r3, r3, #10
 6390 0d74 DAB2     		uxtb	r2, r3
 6391 0d76 07F52D73 		add	r3, r7, #692
 6392 0d7a 83F82620 		strb	r2, [r3, #38]
 6393 0d7e 97F8DD34 		ldrb	r3, [r7, #1245]
 6394 0d82 0A33     		adds	r3, r3, #10
 6395 0d84 DAB2     		uxtb	r2, r3
 6396 0d86 07F52D73 		add	r3, r7, #692
 6397 0d8a 83F82720 		strb	r2, [r3, #39]
 981:..\src/command_processing.c ****         
 982:..\src/command_processing.c ****         // GENERIC PARAMS
 983:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 984:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6398              		.loc 1 984 0
 6399 0d8e 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6400 0d92 D7F8E014 		ldr	r1, [r7, #1248]
 6401 0d96 1346     		mov	r3, r2
 6402 0d98 DB00     		lsls	r3, r3, #3
 6403 0d9a 9B1A     		subs	r3, r3, r2
 6404 0d9c 1B01     		lsls	r3, r3, #4
 6405 0d9e 0B44     		add	r3, r3, r1
 6406 0da0 03F58873 		add	r3, r3, #272
 6407 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6408              		.loc 1 971 0
 6409 0da6 1433     		adds	r3, r3, #20
 6410 0da8 DAB2     		uxtb	r2, r3
 6411 0daa 07F52D73 		add	r3, r7, #692
 6412 0dae 83F82820 		strb	r2, [r3, #40]
 6413              		.loc 1 984 0
 6414 0db2 97F8DD24 		ldrb	r2, [r7, #1245]	@ zero_extendqisi2
 6415 0db6 D7F8E014 		ldr	r1, [r7, #1248]
 6416 0dba 1346     		mov	r3, r2
 6417 0dbc DB00     		lsls	r3, r3, #3
 6418 0dbe 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 157


 6419 0dc0 1B01     		lsls	r3, r3, #4
 6420 0dc2 0B44     		add	r3, r3, r1
 6421 0dc4 03F58873 		add	r3, r3, #272
 6422 0dc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6423              		.loc 1 971 0
 6424 0dca 1433     		adds	r3, r3, #20
 6425 0dcc DAB2     		uxtb	r2, r3
 6426 0dce 07F52D73 		add	r3, r7, #692
 6427 0dd2 83F82920 		strb	r2, [r3, #41]
 6428 0dd6 07F52D73 		add	r3, r7, #692
 6429 0dda 0022     		movs	r2, #0
 6430 0ddc 83F82A20 		strb	r2, [r3, #42]
 6431 0de0 97F8DC34 		ldrb	r3, [r7, #1244]
 6432 0de4 0A33     		adds	r3, r3, #10
 6433 0de6 DAB2     		uxtb	r2, r3
 6434 0de8 07F52D73 		add	r3, r7, #692
 6435 0dec 83F82B20 		strb	r2, [r3, #43]
 6436 0df0 97F8DC34 		ldrb	r3, [r7, #1244]
 6437 0df4 0A33     		adds	r3, r3, #10
 6438 0df6 DAB2     		uxtb	r2, r3
 6439 0df8 07F52D73 		add	r3, r7, #692
 6440 0dfc 83F82C20 		strb	r2, [r3, #44]
 6441 0e00 97F8DC34 		ldrb	r3, [r7, #1244]
 6442 0e04 0A33     		adds	r3, r3, #10
 6443 0e06 DAB2     		uxtb	r2, r3
 6444 0e08 07F52D73 		add	r3, r7, #692
 6445 0e0c 83F82D20 		strb	r2, [r3, #45]
 6446 0e10 97F8DC34 		ldrb	r3, [r7, #1244]
 6447 0e14 0A33     		adds	r3, r3, #10
 6448 0e16 DAB2     		uxtb	r2, r3
 6449 0e18 07F52D73 		add	r3, r7, #692
 6450 0e1c 83F82E20 		strb	r2, [r3, #46]
 6451 0e20 97F8DC34 		ldrb	r3, [r7, #1244]
 6452 0e24 0A33     		adds	r3, r3, #10
 6453 0e26 DAB2     		uxtb	r2, r3
 6454 0e28 07F52D73 		add	r3, r7, #692
 6455 0e2c 83F82F20 		strb	r2, [r3, #47]
 985:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 986:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 6456              		.loc 1 986 0
 6457 0e30 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6458 0e34 D7F8E014 		ldr	r1, [r7, #1248]
 6459 0e38 1346     		mov	r3, r2
 6460 0e3a DB00     		lsls	r3, r3, #3
 6461 0e3c 9B1A     		subs	r3, r3, r2
 6462 0e3e 1B01     		lsls	r3, r3, #4
 6463 0e40 0B44     		add	r3, r3, r1
 6464 0e42 03F58873 		add	r3, r3, #272
 6465 0e46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6466              		.loc 1 971 0
 6467 0e48 1433     		adds	r3, r3, #20
 6468 0e4a DAB2     		uxtb	r2, r3
 6469 0e4c 07F52D73 		add	r3, r7, #692
 6470 0e50 83F83020 		strb	r2, [r3, #48]
 6471              		.loc 1 986 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 158


 6472 0e54 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6473 0e58 D7F8E014 		ldr	r1, [r7, #1248]
 6474 0e5c 1346     		mov	r3, r2
 6475 0e5e DB00     		lsls	r3, r3, #3
 6476 0e60 9B1A     		subs	r3, r3, r2
 6477 0e62 1B01     		lsls	r3, r3, #4
 6478 0e64 0B44     		add	r3, r3, r1
 6479 0e66 03F58873 		add	r3, r3, #272
 6480 0e6a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6481              		.loc 1 971 0
 6482 0e6c 1433     		adds	r3, r3, #20
 6483 0e6e DAB2     		uxtb	r2, r3
 6484 0e70 07F52D73 		add	r3, r7, #692
 6485 0e74 83F83120 		strb	r2, [r3, #49]
 6486              		.loc 1 986 0
 6487 0e78 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6488 0e7c D7F8E014 		ldr	r1, [r7, #1248]
 6489 0e80 1346     		mov	r3, r2
 6490 0e82 DB00     		lsls	r3, r3, #3
 6491 0e84 9B1A     		subs	r3, r3, r2
 6492 0e86 1B01     		lsls	r3, r3, #4
 6493 0e88 0B44     		add	r3, r3, r1
 6494 0e8a 03F58873 		add	r3, r3, #272
 6495 0e8e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6496              		.loc 1 971 0
 6497 0e90 1433     		adds	r3, r3, #20
 6498 0e92 DAB2     		uxtb	r2, r3
 6499 0e94 07F52D73 		add	r3, r7, #692
 6500 0e98 83F83220 		strb	r2, [r3, #50]
 6501 0e9c 97F8DC34 		ldrb	r3, [r7, #1244]
 6502 0ea0 0A33     		adds	r3, r3, #10
 6503 0ea2 DAB2     		uxtb	r2, r3
 6504 0ea4 07F52D73 		add	r3, r7, #692
 6505 0ea8 83F83320 		strb	r2, [r3, #51]
 6506 0eac 97F8DC34 		ldrb	r3, [r7, #1244]
 6507 0eb0 0A33     		adds	r3, r3, #10
 6508 0eb2 DAB2     		uxtb	r2, r3
 6509 0eb4 07F52D73 		add	r3, r7, #692
 6510 0eb8 83F83420 		strb	r2, [r3, #52]
 6511 0ebc 97F8DC34 		ldrb	r3, [r7, #1244]
 6512 0ec0 0A33     		adds	r3, r3, #10
 6513 0ec2 DAB2     		uxtb	r2, r3
 6514 0ec4 07F52D73 		add	r3, r7, #692
 6515 0ec8 83F83520 		strb	r2, [r3, #53]
 6516 0ecc 97F8DC34 		ldrb	r3, [r7, #1244]
 6517 0ed0 0A33     		adds	r3, r3, #10
 6518 0ed2 DAB2     		uxtb	r2, r3
 6519 0ed4 07F52D73 		add	r3, r7, #692
 6520 0ed8 83F83620 		strb	r2, [r3, #54]
 987:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6521              		.loc 1 987 0
 6522 0edc 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6523 0ee0 D7F8E014 		ldr	r1, [r7, #1248]
 6524 0ee4 1346     		mov	r3, r2
 6525 0ee6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 159


 6526 0ee8 9B1A     		subs	r3, r3, r2
 6527 0eea 1B01     		lsls	r3, r3, #4
 6528 0eec 0B44     		add	r3, r3, r1
 6529 0eee 03F58873 		add	r3, r3, #272
 6530 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6531              		.loc 1 971 0
 6532 0ef4 1433     		adds	r3, r3, #20
 6533 0ef6 DAB2     		uxtb	r2, r3
 6534 0ef8 07F52D73 		add	r3, r7, #692
 6535 0efc 83F83720 		strb	r2, [r3, #55]
 988:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 6536              		.loc 1 988 0
 6537 0f00 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6538 0f04 D7F8E014 		ldr	r1, [r7, #1248]
 6539 0f08 1346     		mov	r3, r2
 6540 0f0a DB00     		lsls	r3, r3, #3
 6541 0f0c 9B1A     		subs	r3, r3, r2
 6542 0f0e 1B01     		lsls	r3, r3, #4
 6543 0f10 0B44     		add	r3, r3, r1
 6544 0f12 03F58873 		add	r3, r3, #272
 6545 0f16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6546              		.loc 1 971 0
 6547 0f18 1433     		adds	r3, r3, #20
 6548 0f1a DAB2     		uxtb	r2, r3
 6549 0f1c 07F52D73 		add	r3, r7, #692
 6550 0f20 83F83820 		strb	r2, [r3, #56]
 6551 0f24 97F8DC34 		ldrb	r3, [r7, #1244]
 6552 0f28 0A33     		adds	r3, r3, #10
 6553 0f2a DAB2     		uxtb	r2, r3
 6554 0f2c 07F52D73 		add	r3, r7, #692
 6555 0f30 83F83920 		strb	r2, [r3, #57]
 6556 0f34 97F8DC34 		ldrb	r3, [r7, #1244]
 6557 0f38 0A33     		adds	r3, r3, #10
 6558 0f3a DAB2     		uxtb	r2, r3
 6559 0f3c 07F52D73 		add	r3, r7, #692
 6560 0f40 83F83A20 		strb	r2, [r3, #58]
 6561 0f44 97F8DC34 		ldrb	r3, [r7, #1244]
 6562 0f48 0A33     		adds	r3, r3, #10
 6563 0f4a DAB2     		uxtb	r2, r3
 6564 0f4c 07F52D73 		add	r3, r7, #692
 6565 0f50 83F83B20 		strb	r2, [r3, #59]
 6566 0f54 97F8DC34 		ldrb	r3, [r7, #1244]
 6567 0f58 0A33     		adds	r3, r3, #10
 6568 0f5a DAB2     		uxtb	r2, r3
 6569 0f5c 07F52D73 		add	r3, r7, #692
 6570 0f60 83F83C20 		strb	r2, [r3, #60]
 6571 0f64 97F8DC34 		ldrb	r3, [r7, #1244]
 6572 0f68 0A33     		adds	r3, r3, #10
 6573 0f6a DAB2     		uxtb	r2, r3
 6574 0f6c 07F52D73 		add	r3, r7, #692
 6575 0f70 83F83D20 		strb	r2, [r3, #61]
 6576 0f74 97F8DC34 		ldrb	r3, [r7, #1244]
 6577 0f78 0A33     		adds	r3, r3, #10
 6578 0f7a DAB2     		uxtb	r2, r3
 6579 0f7c 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 160


 6580 0f80 83F83E20 		strb	r2, [r3, #62]
 989:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6581              		.loc 1 989 0
 6582 0f84 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6583 0f88 D7F8E014 		ldr	r1, [r7, #1248]
 6584 0f8c 1346     		mov	r3, r2
 6585 0f8e DB00     		lsls	r3, r3, #3
 6586 0f90 9B1A     		subs	r3, r3, r2
 6587 0f92 1B01     		lsls	r3, r3, #4
 6588 0f94 0B44     		add	r3, r3, r1
 6589 0f96 03F58873 		add	r3, r3, #272
 6590 0f9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6591              		.loc 1 971 0
 6592 0f9c 1433     		adds	r3, r3, #20
 6593 0f9e DAB2     		uxtb	r2, r3
 6594 0fa0 07F52D73 		add	r3, r7, #692
 6595 0fa4 83F83F20 		strb	r2, [r3, #63]
 990:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 6596              		.loc 1 990 0
 6597 0fa8 97F8DC24 		ldrb	r2, [r7, #1244]	@ zero_extendqisi2
 6598 0fac D7F8E014 		ldr	r1, [r7, #1248]
 6599 0fb0 1346     		mov	r3, r2
 6600 0fb2 DB00     		lsls	r3, r3, #3
 6601 0fb4 9B1A     		subs	r3, r3, r2
 6602 0fb6 1B01     		lsls	r3, r3, #4
 6603 0fb8 0B44     		add	r3, r3, r1
 6604 0fba 03F58873 		add	r3, r3, #272
 6605 0fbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 971:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6606              		.loc 1 971 0
 6607 0fc0 1433     		adds	r3, r3, #20
 6608 0fc2 DAB2     		uxtb	r2, r3
 6609 0fc4 07F52D73 		add	r3, r7, #692
 6610 0fc8 83F84020 		strb	r2, [r3, #64]
 6611 0fcc 07F52D73 		add	r3, r7, #692
 6612 0fd0 1422     		movs	r2, #20
 6613 0fd2 83F84120 		strb	r2, [r3, #65]
 6614 0fd6 07F52D73 		add	r3, r7, #692
 6615 0fda 1522     		movs	r2, #21
 6616 0fdc 83F84220 		strb	r2, [r3, #66]
 6617 0fe0 07F52D73 		add	r3, r7, #692
 6618 0fe4 3222     		movs	r2, #50
 6619 0fe6 83F84320 		strb	r2, [r3, #67]
 6620 0fea 07F52D73 		add	r3, r7, #692
 6621 0fee 3222     		movs	r2, #50
 6622 0ff0 83F84420 		strb	r2, [r3, #68]
 6623 0ff4 07F52D73 		add	r3, r7, #692
 6624 0ff8 3222     		movs	r2, #50
 6625 0ffa 83F84520 		strb	r2, [r3, #69]
 6626 0ffe 07F52D73 		add	r3, r7, #692
 6627 1002 0022     		movs	r2, #0
 6628 1004 83F84620 		strb	r2, [r3, #70]
 6629 1008 07F52D73 		add	r3, r7, #692
 6630 100c 5022     		movs	r2, #80
 6631 100e 83F84720 		strb	r2, [r3, #71]
 6632 1012 07F52D73 		add	r3, r7, #692
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 161


 6633 1016 5022     		movs	r2, #80
 6634 1018 83F84820 		strb	r2, [r3, #72]
 6635 101c 07F52D73 		add	r3, r7, #692
 6636 1020 5A22     		movs	r2, #90
 6637 1022 83F84920 		strb	r2, [r3, #73]
 6638 1026 07F52D73 		add	r3, r7, #692
 6639 102a 5A22     		movs	r2, #90
 6640 102c 83F84A20 		strb	r2, [r3, #74]
 6641 1030 07F52D73 		add	r3, r7, #692
 6642 1034 5A22     		movs	r2, #90
 6643 1036 83F84B20 		strb	r2, [r3, #75]
 991:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE, ST_MS_SPEC, 
 992:..\src/command_processing.c ****         ST_MS_SPEC, ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC
 993:..\src/command_processing.c ****     };
 994:..\src/command_processing.c ****     
 995:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 6644              		.loc 1 995 0
 6645 103a 07F5C273 		add	r3, r7, #388
 6646 103e CB4A     		ldr	r2, .L340
 6647 1040 1846     		mov	r0, r3
 6648 1042 1146     		mov	r1, r2
 6649 1044 4FF49873 		mov	r3, #304
 6650 1048 1A46     		mov	r2, r3
 6651 104a FFF7FEFF 		bl	memcpy
 996:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 997:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 998:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 999:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1000:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1001:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1002:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1003:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1004:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1005:..\src/command_processing.c ****         
1006:..\src/command_processing.c ****         // GENERIC PARAMS
1007:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1008:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1009:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1010:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1011:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1012:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1013:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1014:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1015:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:", "72 - Slave com
1016:..\src/command_processing.c ****         "73 - Slave ID:", "74 - Maximum slave residual current:", "75 - Maximum pressure feedback (
1017:..\src/command_processing.c ****     };
1018:..\src/command_processing.c **** 
1019:..\src/command_processing.c ****     //Parameters menu
1020:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 6652              		.loc 1 1020 0
 6653 104e 07F58673 		add	r3, r7, #268
 6654 1052 0022     		movs	r2, #0
 6655 1054 1A60     		str	r2, [r3]
 6656 1056 0433     		adds	r3, r3, #4
 6657 1058 7222     		movs	r2, #114
 6658 105a 0021     		movs	r1, #0
 6659 105c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 162


 6660 105e FFF7FEFF 		bl	memset
1021:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 6661              		.loc 1 1021 0
 6662 1062 07F58670 		add	r0, r7, #268
 6663 1066 6423     		movs	r3, #100
 6664 1068 0A22     		movs	r2, #10
 6665 106a C149     		ldr	r1, .L340+4
 6666 106c FFF7FEFF 		bl	sprintf
1022:..\src/command_processing.c **** 
1023:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 6667              		.loc 1 1023 0
 6668 1070 07F1E403 		add	r3, r7, #228
 6669 1074 BF4A     		ldr	r2, .L340+8
 6670 1076 1A60     		str	r2, [r3]
 6671 1078 07F1E403 		add	r3, r7, #228
 6672 107c BE4A     		ldr	r2, .L340+12
 6673 107e 5A60     		str	r2, [r3, #4]
 6674 1080 07F1E403 		add	r3, r7, #228
 6675 1084 BD4A     		ldr	r2, .L340+16
 6676 1086 9A60     		str	r2, [r3, #8]
 6677 1088 07F1E403 		add	r3, r7, #228
 6678 108c BC4A     		ldr	r2, .L340+20
 6679 108e DA60     		str	r2, [r3, #12]
 6680 1090 07F1E403 		add	r3, r7, #228
 6681 1094 BB4A     		ldr	r2, .L340+24
 6682 1096 1A61     		str	r2, [r3, #16]
 6683 1098 07F1E403 		add	r3, r7, #228
 6684 109c BA4A     		ldr	r2, .L340+28
 6685 109e 5A61     		str	r2, [r3, #20]
 6686 10a0 07F1E403 		add	r3, r7, #228
 6687 10a4 07F58672 		add	r2, r7, #268
 6688 10a8 9A61     		str	r2, [r3, #24]
 6689 10aa 07F1E403 		add	r3, r7, #228
 6690 10ae B74A     		ldr	r2, .L340+32
 6691 10b0 DA61     		str	r2, [r3, #28]
 6692 10b2 07F1E403 		add	r3, r7, #228
 6693 10b6 B64A     		ldr	r2, .L340+36
 6694 10b8 1A62     		str	r2, [r3, #32]
 6695 10ba 07F1E403 		add	r3, r7, #228
 6696 10be B54A     		ldr	r2, .L340+40
 6697 10c0 5A62     		str	r2, [r3, #36]
1024:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1025:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1026:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1027:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1028:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1029:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1030:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1031:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1032:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1033:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\nThe board will reset\n"      
1034:..\src/command_processing.c ****     };   
1035:..\src/command_processing.c ****     
1036:..\src/command_processing.c ****     uint8 NUM_MENU[29] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 6698              		.loc 1 1036 0
 6699 10c2 07F1C403 		add	r3, r7, #196
 6700 10c6 B44A     		ldr	r2, .L340+44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 163


 6701 10c8 1C46     		mov	r4, r3
 6702 10ca 1546     		mov	r5, r2
 6703 10cc 2868     		ldr	r0, [r5]	@ unaligned
 6704 10ce 6968     		ldr	r1, [r5, #4]	@ unaligned
 6705 10d0 AA68     		ldr	r2, [r5, #8]	@ unaligned
 6706 10d2 EB68     		ldr	r3, [r5, #12]	@ unaligned
 6707 10d4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6708 10d6 2869     		ldr	r0, [r5, #16]	@ unaligned
 6709 10d8 6969     		ldr	r1, [r5, #20]	@ unaligned
 6710 10da AA69     		ldr	r2, [r5, #24]	@ unaligned
 6711 10dc 07C4     		stmia	r4!, {r0, r1, r2}
 6712 10de 2B7F     		ldrb	r3, [r5, #28]
 6713 10e0 2370     		strb	r3, [r4]
1037:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 6714              		.loc 1 1037 0
 6715 10e2 07F1B803 		add	r3, r7, #184
 6716 10e6 AD4A     		ldr	r2, .L340+48
 6717 10e8 1068     		ldr	r0, [r2]	@ unaligned
 6718 10ea 5168     		ldr	r1, [r2, #4]	@ unaligned
 6719 10ec 03C3     		stmia	r3!, {r0, r1}
 6720 10ee 127A     		ldrb	r2, [r2, #8]
 6721 10f0 1A70     		strb	r2, [r3]
1038:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 6722              		.loc 1 1038 0
 6723 10f2 07F1A403 		add	r3, r7, #164
 6724 10f6 AA4A     		ldr	r2, .L340+52
 6725 10f8 1C46     		mov	r4, r3
 6726 10fa 1546     		mov	r5, r2
 6727 10fc 2868     		ldr	r0, [r5]	@ unaligned
 6728 10fe 6968     		ldr	r1, [r5, #4]	@ unaligned
 6729 1100 AA68     		ldr	r2, [r5, #8]	@ unaligned
 6730 1102 EB68     		ldr	r3, [r5, #12]	@ unaligned
 6731 1104 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6732 1106 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 6733 1108 2380     		strh	r3, [r4]	@ unaligned
1039:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 6734              		.loc 1 1039 0
 6735 110a 2323     		movs	r3, #35
 6736 110c 87F8DB34 		strb	r3, [r7, #1243]
1040:..\src/command_processing.c **** 
1041:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1042:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1043:..\src/command_processing.c ****     
1044:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1045:..\src/command_processing.c **** 
1046:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1047:..\src/command_processing.c ****     
1048:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1049:..\src/command_processing.c ****     j = 0;
 6737              		.loc 1 1049 0
 6738 1110 0023     		movs	r3, #0
 6739 1112 87F8E634 		strb	r3, [r7, #1254]
1050:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6740              		.loc 1 1050 0
 6741 1116 0023     		movs	r3, #0
 6742 1118 87F8E734 		strb	r3, [r7, #1255]
 6743 111c 21E0     		b	.L274
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 164


 6744              	.L277:
1051:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6745              		.loc 1 1051 0
 6746 111e 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 6747 1122 07F1B802 		add	r2, r7, #184
 6748 1126 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6749 1128 1A46     		mov	r2, r3
 6750 112a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6751 112e 0133     		adds	r3, r3, #1
 6752 1130 9A42     		cmp	r2, r3
 6753 1132 0BD1     		bne	.L275
1052:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 6754              		.loc 1 1052 0
 6755 1134 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6756 1138 07F15802 		add	r2, r7, #88
 6757 113c 0121     		movs	r1, #1
 6758 113e D154     		strb	r1, [r2, r3]
1053:..\src/command_processing.c ****             j++;
 6759              		.loc 1 1053 0
 6760 1140 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 6761 1144 0133     		adds	r3, r3, #1
 6762 1146 87F8E634 		strb	r3, [r7, #1254]
 6763 114a 05E0     		b	.L276
 6764              	.L275:
1054:..\src/command_processing.c ****         }
1055:..\src/command_processing.c ****         else {
1056:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 6765              		.loc 1 1056 0
 6766 114c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6767 1150 07F15802 		add	r2, r7, #88
 6768 1154 0021     		movs	r1, #0
 6769 1156 D154     		strb	r1, [r2, r3]
 6770              	.L276:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6771              		.loc 1 1050 0 discriminator 2
 6772 1158 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6773 115c 0133     		adds	r3, r3, #1
 6774 115e 87F8E734 		strb	r3, [r7, #1255]
 6775              	.L274:
1050:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6776              		.loc 1 1050 0 is_stmt 0 discriminator 1
 6777 1162 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6778 1166 4B2B     		cmp	r3, #75
 6779 1168 D9D9     		bls	.L277
1057:..\src/command_processing.c ****         }
1058:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1059:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1060:..\src/command_processing.c ****     j = 0;
 6780              		.loc 1 1060 0 is_stmt 1
 6781 116a 0023     		movs	r3, #0
 6782 116c 87F8E634 		strb	r3, [r7, #1254]
1061:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6783              		.loc 1 1061 0
 6784 1170 0023     		movs	r3, #0
 6785 1172 87F8E734 		strb	r3, [r7, #1255]
 6786 1176 21E0     		b	.L278
 6787              	.L281:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 165


1062:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6788              		.loc 1 1062 0
 6789 1178 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 6790 117c 07F1A402 		add	r2, r7, #164
 6791 1180 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6792 1182 1A46     		mov	r2, r3
 6793 1184 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6794 1188 0133     		adds	r3, r3, #1
 6795 118a 9A42     		cmp	r2, r3
 6796 118c 0BD1     		bne	.L279
1063:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 6797              		.loc 1 1063 0
 6798 118e 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6799 1192 07F10C02 		add	r2, r7, #12
 6800 1196 0121     		movs	r1, #1
 6801 1198 D154     		strb	r1, [r2, r3]
1064:..\src/command_processing.c ****             j++;
 6802              		.loc 1 1064 0
 6803 119a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 6804 119e 0133     		adds	r3, r3, #1
 6805 11a0 87F8E634 		strb	r3, [r7, #1254]
 6806 11a4 05E0     		b	.L280
 6807              	.L279:
1065:..\src/command_processing.c ****         }
1066:..\src/command_processing.c ****         else {
1067:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 6808              		.loc 1 1067 0
 6809 11a6 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6810 11aa 07F10C02 		add	r2, r7, #12
 6811 11ae 0021     		movs	r1, #0
 6812 11b0 D154     		strb	r1, [r2, r3]
 6813              	.L280:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6814              		.loc 1 1061 0 discriminator 2
 6815 11b2 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6816 11b6 0133     		adds	r3, r3, #1
 6817 11b8 87F8E734 		strb	r3, [r7, #1255]
 6818              	.L278:
1061:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6819              		.loc 1 1061 0 is_stmt 0 discriminator 1
 6820 11bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6821 11c0 4B2B     		cmp	r3, #75
 6822 11c2 D9D9     		bls	.L281
1068:..\src/command_processing.c ****         }
1069:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1070:..\src/command_processing.c ****         
1071:..\src/command_processing.c ****     if (!index) {
 6823              		.loc 1 1071 0 is_stmt 1
 6824 11c4 BB1D     		adds	r3, r7, #6
 6825 11c6 1B88     		ldrh	r3, [r3]
 6826 11c8 002B     		cmp	r3, #0
 6827 11ca 17D1     		bne	.L282
1072:..\src/command_processing.c ****         // Get parameters list with relative types
1073:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 6828              		.loc 1 1073 0
 6829 11cc 07F52D74 		add	r4, r7, #692
 6830 11d0 07F54072 		add	r2, r7, #768
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 166


 6831 11d4 07F55371 		add	r1, r7, #844
 6832 11d8 07F56670 		add	r0, r7, #920
 6833 11dc 07F1E403 		add	r3, r7, #228
 6834 11e0 0393     		str	r3, [sp, #12]
 6835 11e2 07F15803 		add	r3, r7, #88
 6836 11e6 0293     		str	r3, [sp, #8]
 6837 11e8 07F5C273 		add	r3, r7, #388
 6838 11ec 0193     		str	r3, [sp, #4]
 6839 11ee 07F1C403 		add	r3, r7, #196
 6840 11f2 0093     		str	r3, [sp]
 6841 11f4 2346     		mov	r3, r4
 6842 11f6 FFF7FEFF 		bl	get_param_list
1074:..\src/command_processing.c ****     }
1075:..\src/command_processing.c ****     else {
1076:..\src/command_processing.c ****         // Set specific parameter        
1077:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1078:..\src/command_processing.c ****         
1079:..\src/command_processing.c ****         // Find size of data
1080:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1081:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1082:..\src/command_processing.c ****                 sod = 1; break;
1083:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1084:..\src/command_processing.c ****                 sod = 2; break;
1085:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1086:..\src/command_processing.c ****                 sod = 4; break;
1087:..\src/command_processing.c ****         }   
1088:..\src/command_processing.c ****             
1089:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1090:..\src/command_processing.c ****             // Use default specifications for param setting
1091:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1092:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1095:..\src/command_processing.c ****                     }
1096:..\src/command_processing.c ****                     break;                
1097:..\src/command_processing.c ****                 case TYPE_STRING:
1098:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1099:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1100:..\src/command_processing.c ****                     }
1101:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1102:..\src/command_processing.c ****                 break; 
1103:..\src/command_processing.c ****                 case TYPE_INT8:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;                    
1108:..\src/command_processing.c ****                 case TYPE_INT16:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1110:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }                   
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT16:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 167


1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_INT32:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1126:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 case TYPE_UINT32:
1133:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1134:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1135:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1136:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1137:..\src/command_processing.c ****                         }
1138:..\src/command_processing.c ****                     }
1139:..\src/command_processing.c ****                     break;
1140:..\src/command_processing.c ****                 case TYPE_FLOAT:
1141:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1142:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1143:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1144:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1145:..\src/command_processing.c ****                         }
1146:..\src/command_processing.c ****                     }
1147:..\src/command_processing.c ****                     break;
1148:..\src/command_processing.c ****                 default:
1149:..\src/command_processing.c ****                     break;
1150:..\src/command_processing.c ****             }
1151:..\src/command_processing.c ****         }
1152:..\src/command_processing.c ****         else {  
1153:..\src/command_processing.c ****             // Use custom specifications for param setting
1154:..\src/command_processing.c ****             set_custom_param(index);
1155:..\src/command_processing.c ****         }
1156:..\src/command_processing.c ****         
1157:..\src/command_processing.c ****         // Store param also in user_emg structure
1158:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1159:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****         
1162:..\src/command_processing.c ****         // Perform chip reset if needed
1163:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1164:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1165:..\src/command_processing.c ****             do {
1166:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1167:..\src/command_processing.c ****                 idx++;
1168:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1169:..\src/command_processing.c ****             
1170:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1171:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1172:..\src/command_processing.c ****             }   
1173:..\src/command_processing.c ****         }
1174:..\src/command_processing.c ****     }
1175:..\src/command_processing.c **** } 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 168


 6843              		.loc 1 1175 0
 6844 11fa D9E2     		b	.L333
 6845              	.L282:
1077:..\src/command_processing.c ****         
 6846              		.loc 1 1077 0
 6847 11fc BB1D     		adds	r3, r7, #6
 6848 11fe 1B88     		ldrh	r3, [r3]	@ movhi
 6849 1200 DBB2     		uxtb	r3, r3
 6850 1202 013B     		subs	r3, r3, #1
 6851 1204 87F8DA34 		strb	r3, [r7, #1242]
1080:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 6852              		.loc 1 1080 0
 6853 1208 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 6854 120c 07F55372 		add	r2, r7, #844
 6855 1210 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6856 1212 092B     		cmp	r3, #9
 6857 1214 22D8     		bhi	.L284
 6858 1216 01A2     		adr	r2, .L286
 6859 1218 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6860              		.p2align 2
 6861              	.L286:
 6862 121c 45120000 		.word	.L285+1
 6863 1220 45120000 		.word	.L285+1
 6864 1224 45120000 		.word	.L285+1
 6865 1228 4D120000 		.word	.L287+1
 6866 122c 4D120000 		.word	.L287+1
 6867 1230 55120000 		.word	.L288+1
 6868 1234 55120000 		.word	.L288+1
 6869 1238 55120000 		.word	.L288+1
 6870 123c 5D120000 		.word	.L284+1
 6871 1240 45120000 		.word	.L285+1
 6872              		.p2align 1
 6873              	.L285:
1082:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 6874              		.loc 1 1082 0
 6875 1244 0123     		movs	r3, #1
 6876 1246 87F8E534 		strb	r3, [r7, #1253]
 6877 124a 07E0     		b	.L284
 6878              	.L287:
1084:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 6879              		.loc 1 1084 0
 6880 124c 0223     		movs	r3, #2
 6881 124e 87F8E534 		strb	r3, [r7, #1253]
 6882 1252 03E0     		b	.L284
 6883              	.L288:
1086:..\src/command_processing.c ****         }   
 6884              		.loc 1 1086 0
 6885 1254 0423     		movs	r3, #4
 6886 1256 87F8E534 		strb	r3, [r7, #1253]
 6887 125a 00BF     		nop
 6888              	.L284:
1089:..\src/command_processing.c ****             // Use default specifications for param setting
 6889              		.loc 1 1089 0
 6890 125c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 6891 1260 07F10C02 		add	r2, r7, #12
 6892 1264 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6893 1266 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 169


 6894 1268 40F03682 		bne	.L289
1091:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 6895              		.loc 1 1091 0
 6896 126c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 6897 1270 07F55372 		add	r2, r7, #844
 6898 1274 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6899 1276 092B     		cmp	r3, #9
 6900 1278 00F23682 		bhi	.L332
 6901 127c 01A2     		adr	r2, .L292
 6902 127e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6903 1282 00BF     		.p2align 2
 6904              	.L292:
 6905 1284 AD120000 		.word	.L291+1
 6906 1288 63130000 		.word	.L293+1
 6907 128c AD120000 		.word	.L291+1
 6908 1290 F3130000 		.word	.L294+1
 6909 1294 89140000 		.word	.L295+1
 6910 1298 1D150000 		.word	.L296+1
 6911 129c B1150000 		.word	.L297+1
 6912 12a0 45160000 		.word	.L298+1
 6913 12a4 E9160000 		.word	.L332+1
 6914 12a8 F9120000 		.word	.L299+1
 6915              		.p2align 1
 6916              	.L291:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6917              		.loc 1 1093 0
 6918 12ac 0023     		movs	r3, #0
 6919 12ae 87F8E734 		strb	r3, [r7, #1255]
 6920 12b2 17E0     		b	.L300
 6921              	.L301:
1094:..\src/command_processing.c ****                     }
 6922              		.loc 1 1094 0 discriminator 3
 6923 12b4 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 6924 12b8 07F56673 		add	r3, r7, #920
 6925 12bc 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6926 12c0 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6927 12c4 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 6928 12c8 01FB02F2 		mul	r2, r1, r2
 6929 12cc 1344     		add	r3, r3, r2
 6930 12ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6931 12d2 0332     		adds	r2, r2, #3
 6932 12d4 3349     		ldr	r1, .L340+56
 6933 12d6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6934 12d8 1A70     		strb	r2, [r3]
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6935              		.loc 1 1093 0 discriminator 3
 6936 12da 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6937 12de 0133     		adds	r3, r3, #1
 6938 12e0 87F8E734 		strb	r3, [r7, #1255]
 6939              	.L300:
1093:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6940              		.loc 1 1093 0 is_stmt 0 discriminator 1
 6941 12e4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 6942 12e8 07F54072 		add	r2, r7, #768
 6943 12ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6944 12ee 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6945 12f2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 170


 6946 12f4 DED3     		bcc	.L301
1096:..\src/command_processing.c ****                 case TYPE_STRING:
 6947              		.loc 1 1096 0 is_stmt 1
 6948 12f6 F8E1     		b	.L327
 6949              	.L299:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6950              		.loc 1 1098 0
 6951 12f8 0023     		movs	r3, #0
 6952 12fa 87F8E734 		strb	r3, [r7, #1255]
 6953 12fe 17E0     		b	.L303
 6954              	.L304:
1099:..\src/command_processing.c ****                     }
 6955              		.loc 1 1099 0 discriminator 3
 6956 1300 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 6957 1304 07F56673 		add	r3, r7, #920
 6958 1308 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6959 130c 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6960 1310 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 6961 1314 01FB02F2 		mul	r2, r1, r2
 6962 1318 1344     		add	r3, r3, r2
 6963 131a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6964 131e 0332     		adds	r2, r2, #3
 6965 1320 2049     		ldr	r1, .L340+56
 6966 1322 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6967 1324 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6968              		.loc 1 1098 0 discriminator 3
 6969 1326 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 6970 132a 0133     		adds	r3, r3, #1
 6971 132c 87F8E734 		strb	r3, [r7, #1255]
 6972              	.L303:
1098:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6973              		.loc 1 1098 0 is_stmt 0 discriminator 1
 6974 1330 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 6975 1334 07F54072 		add	r2, r7, #768
 6976 1338 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6977 133a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6978 133e 9A42     		cmp	r2, r3
 6979 1340 DED3     		bcc	.L304
1101:..\src/command_processing.c ****                 break; 
 6980              		.loc 1 1101 0 is_stmt 1
 6981 1342 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 6982 1346 07F56673 		add	r3, r7, #920
 6983 134a 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6984 134e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 6985 1352 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 6986 1356 01FB02F2 		mul	r2, r1, r2
 6987 135a 1344     		add	r3, r3, r2
 6988 135c 0022     		movs	r2, #0
 6989 135e 1A70     		strb	r2, [r3]
1102:..\src/command_processing.c ****                 case TYPE_INT8:
 6990              		.loc 1 1102 0
 6991 1360 C3E1     		b	.L327
 6992              	.L293:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6993              		.loc 1 1104 0
 6994 1362 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 171


 6995 1364 87F8E734 		strb	r3, [r7, #1255]
 6996 1368 39E0     		b	.L305
 6997              	.L341:
 6998 136a 00BF     		.align	2
 6999              	.L340:
 7000 136c A40C0000 		.word	.LC112
 7001 1370 B0010000 		.word	.LC113
 7002 1374 24020000 		.word	.LC114
 7003 1378 A0020000 		.word	.LC115
 7004 137c E0020000 		.word	.LC116
 7005 1380 0C030000 		.word	.LC117
 7006 1384 24030000 		.word	.LC118
 7007 1388 4C030000 		.word	.LC119
 7008 138c A8030000 		.word	.LC120
 7009 1390 E8030000 		.word	.LC121
 7010 1394 30040000 		.word	.LC122
 7011 1398 D40D0000 		.word	.LC78
 7012 139c F40D0000 		.word	.LC79
 7013 13a0 000E0000 		.word	.LC80
 7014 13a4 00000000 		.word	g_rx
 7015              	.L306:
1105:..\src/command_processing.c ****                     }
 7016              		.loc 1 1105 0 discriminator 3
 7017 13a8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7018 13ac 07F56673 		add	r3, r7, #920
 7019 13b0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7020 13b4 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7021 13b8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7022 13bc 01FB02F2 		mul	r2, r1, r2
 7023 13c0 1344     		add	r3, r3, r2
 7024 13c2 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7025 13c6 0332     		adds	r2, r2, #3
 7026 13c8 C649     		ldr	r1, .L342
 7027 13ca 0A44     		add	r2, r2, r1
 7028 13cc 92F90020 		ldrsb	r2, [r2]
 7029 13d0 D2B2     		uxtb	r2, r2
 7030 13d2 1A70     		strb	r2, [r3]
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7031              		.loc 1 1104 0 discriminator 3
 7032 13d4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7033 13d8 0133     		adds	r3, r3, #1
 7034 13da 87F8E734 		strb	r3, [r7, #1255]
 7035              	.L305:
1104:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7036              		.loc 1 1104 0 is_stmt 0 discriminator 1
 7037 13de 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7038 13e2 07F54072 		add	r2, r7, #768
 7039 13e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7040 13e8 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7041 13ec 9A42     		cmp	r2, r3
 7042 13ee DBD3     		bcc	.L306
1107:..\src/command_processing.c ****                 case TYPE_INT16:
 7043              		.loc 1 1107 0 is_stmt 1
 7044 13f0 7BE1     		b	.L327
 7045              	.L294:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7046              		.loc 1 1109 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 172


 7047 13f2 0023     		movs	r3, #0
 7048 13f4 87F8E734 		strb	r3, [r7, #1255]
 7049 13f8 3CE0     		b	.L307
 7050              	.L310:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7051              		.loc 1 1110 0
 7052 13fa 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7053 13fe 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 7054 1402 02FB03F3 		mul	r3, r2, r3
 7055 1406 0333     		adds	r3, r3, #3
 7056 1408 B64A     		ldr	r2, .L342
 7057 140a 1344     		add	r3, r3, r2
 7058 140c B3F90030 		ldrsh	r3, [r3]
 7059 1410 A7F8D834 		strh	r3, [r7, #1240]	@ movhi
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7060              		.loc 1 1111 0
 7061 1414 0023     		movs	r3, #0
 7062 1416 87F8E634 		strb	r3, [r7, #1254]
 7063 141a 20E0     		b	.L308
 7064              	.L309:
1112:..\src/command_processing.c ****                         }
 7065              		.loc 1 1112 0 discriminator 3
 7066 141c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7067 1420 07F56673 		add	r3, r7, #920
 7068 1424 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7069 1428 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7070 142c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7071 1430 01FB03F3 		mul	r3, r1, r3
 7072 1434 1846     		mov	r0, r3
 7073 1436 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7074 143a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7075 143e CB1A     		subs	r3, r1, r3
 7076 1440 0344     		add	r3, r3, r0
 7077 1442 013B     		subs	r3, r3, #1
 7078 1444 1344     		add	r3, r3, r2
 7079 1446 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7080 144a 07F59B61 		add	r1, r7, #1240
 7081 144e 0A44     		add	r2, r2, r1
 7082 1450 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7083 1452 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7084              		.loc 1 1111 0 discriminator 3
 7085 1454 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7086 1458 0133     		adds	r3, r3, #1
 7087 145a 87F8E634 		strb	r3, [r7, #1254]
 7088              	.L308:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7089              		.loc 1 1111 0 is_stmt 0 discriminator 1
 7090 145e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7091 1462 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 7092 1466 9A42     		cmp	r2, r3
 7093 1468 D8D3     		bcc	.L309
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7094              		.loc 1 1109 0 is_stmt 1 discriminator 2
 7095 146a 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7096 146e 0133     		adds	r3, r3, #1
 7097 1470 87F8E734 		strb	r3, [r7, #1255]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 173


 7098              	.L307:
1109:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7099              		.loc 1 1109 0 is_stmt 0 discriminator 1
 7100 1474 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7101 1478 07F54072 		add	r2, r7, #768
 7102 147c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7103 147e 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7104 1482 9A42     		cmp	r2, r3
 7105 1484 B9D3     		bcc	.L310
1115:..\src/command_processing.c ****                 case TYPE_UINT16:
 7106              		.loc 1 1115 0 is_stmt 1
 7107 1486 30E1     		b	.L327
 7108              	.L295:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7109              		.loc 1 1117 0
 7110 1488 0023     		movs	r3, #0
 7111 148a 87F8E734 		strb	r3, [r7, #1255]
 7112 148e 3BE0     		b	.L311
 7113              	.L314:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7114              		.loc 1 1118 0
 7115 1490 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7116 1494 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 7117 1498 02FB03F3 		mul	r3, r2, r3
 7118 149c 0333     		adds	r3, r3, #3
 7119 149e 914A     		ldr	r2, .L342
 7120 14a0 1344     		add	r3, r3, r2
 7121 14a2 1B88     		ldrh	r3, [r3]
 7122 14a4 A7F8D634 		strh	r3, [r7, #1238]	@ movhi
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7123              		.loc 1 1119 0
 7124 14a8 0023     		movs	r3, #0
 7125 14aa 87F8E634 		strb	r3, [r7, #1254]
 7126 14ae 20E0     		b	.L312
 7127              	.L313:
1120:..\src/command_processing.c ****                         }
 7128              		.loc 1 1120 0 discriminator 3
 7129 14b0 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7130 14b4 07F56673 		add	r3, r7, #920
 7131 14b8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7132 14bc 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7133 14c0 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7134 14c4 01FB03F3 		mul	r3, r1, r3
 7135 14c8 1846     		mov	r0, r3
 7136 14ca 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7137 14ce 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7138 14d2 CB1A     		subs	r3, r1, r3
 7139 14d4 0344     		add	r3, r3, r0
 7140 14d6 013B     		subs	r3, r3, #1
 7141 14d8 1344     		add	r3, r3, r2
 7142 14da 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7143 14de 07F2D641 		addw	r1, r7, #1238
 7144 14e2 0A44     		add	r2, r2, r1
 7145 14e4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7146 14e6 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7147              		.loc 1 1119 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 174


 7148 14e8 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7149 14ec 0133     		adds	r3, r3, #1
 7150 14ee 87F8E634 		strb	r3, [r7, #1254]
 7151              	.L312:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7152              		.loc 1 1119 0 is_stmt 0 discriminator 1
 7153 14f2 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7154 14f6 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 7155 14fa 9A42     		cmp	r2, r3
 7156 14fc D8D3     		bcc	.L313
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7157              		.loc 1 1117 0 is_stmt 1 discriminator 2
 7158 14fe 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7159 1502 0133     		adds	r3, r3, #1
 7160 1504 87F8E734 		strb	r3, [r7, #1255]
 7161              	.L311:
1117:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7162              		.loc 1 1117 0 is_stmt 0 discriminator 1
 7163 1508 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7164 150c 07F54072 		add	r2, r7, #768
 7165 1510 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7166 1512 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7167 1516 9A42     		cmp	r2, r3
 7168 1518 BAD3     		bcc	.L314
1123:..\src/command_processing.c ****                 case TYPE_INT32:
 7169              		.loc 1 1123 0 is_stmt 1
 7170 151a E6E0     		b	.L327
 7171              	.L296:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7172              		.loc 1 1125 0
 7173 151c 0023     		movs	r3, #0
 7174 151e 87F8E734 		strb	r3, [r7, #1255]
 7175 1522 3BE0     		b	.L315
 7176              	.L318:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7177              		.loc 1 1126 0
 7178 1524 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7179 1528 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 7180 152c 02FB03F3 		mul	r3, r2, r3
 7181 1530 0333     		adds	r3, r3, #3
 7182 1532 6C4A     		ldr	r2, .L342
 7183 1534 1344     		add	r3, r3, r2
 7184 1536 1B68     		ldr	r3, [r3]
 7185 1538 C7F8D034 		str	r3, [r7, #1232]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7186              		.loc 1 1127 0
 7187 153c 0023     		movs	r3, #0
 7188 153e 87F8E634 		strb	r3, [r7, #1254]
 7189 1542 20E0     		b	.L316
 7190              	.L317:
1128:..\src/command_processing.c ****                         }
 7191              		.loc 1 1128 0 discriminator 3
 7192 1544 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7193 1548 07F56673 		add	r3, r7, #920
 7194 154c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7195 1550 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7196 1554 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 175


 7197 1558 01FB03F3 		mul	r3, r1, r3
 7198 155c 1846     		mov	r0, r3
 7199 155e 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7200 1562 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7201 1566 CB1A     		subs	r3, r1, r3
 7202 1568 0344     		add	r3, r3, r0
 7203 156a 013B     		subs	r3, r3, #1
 7204 156c 1344     		add	r3, r3, r2
 7205 156e 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7206 1572 07F59A61 		add	r1, r7, #1232
 7207 1576 0A44     		add	r2, r2, r1
 7208 1578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7209 157a 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7210              		.loc 1 1127 0 discriminator 3
 7211 157c 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7212 1580 0133     		adds	r3, r3, #1
 7213 1582 87F8E634 		strb	r3, [r7, #1254]
 7214              	.L316:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7215              		.loc 1 1127 0 is_stmt 0 discriminator 1
 7216 1586 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7217 158a 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 7218 158e 9A42     		cmp	r2, r3
 7219 1590 D8D3     		bcc	.L317
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7220              		.loc 1 1125 0 is_stmt 1 discriminator 2
 7221 1592 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7222 1596 0133     		adds	r3, r3, #1
 7223 1598 87F8E734 		strb	r3, [r7, #1255]
 7224              	.L315:
1125:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7225              		.loc 1 1125 0 is_stmt 0 discriminator 1
 7226 159c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7227 15a0 07F54072 		add	r2, r7, #768
 7228 15a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7229 15a6 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7230 15aa 9A42     		cmp	r2, r3
 7231 15ac BAD3     		bcc	.L318
1131:..\src/command_processing.c ****                 case TYPE_UINT32:
 7232              		.loc 1 1131 0 is_stmt 1
 7233 15ae 9CE0     		b	.L327
 7234              	.L297:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7235              		.loc 1 1133 0
 7236 15b0 0023     		movs	r3, #0
 7237 15b2 87F8E734 		strb	r3, [r7, #1255]
 7238 15b6 3BE0     		b	.L319
 7239              	.L322:
1134:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7240              		.loc 1 1134 0
 7241 15b8 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7242 15bc 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 7243 15c0 02FB03F3 		mul	r3, r2, r3
 7244 15c4 0333     		adds	r3, r3, #3
 7245 15c6 474A     		ldr	r2, .L342
 7246 15c8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 176


 7247 15ca 1B68     		ldr	r3, [r3]
 7248 15cc C7F8CC34 		str	r3, [r7, #1228]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7249              		.loc 1 1135 0
 7250 15d0 0023     		movs	r3, #0
 7251 15d2 87F8E634 		strb	r3, [r7, #1254]
 7252 15d6 20E0     		b	.L320
 7253              	.L321:
1136:..\src/command_processing.c ****                         }
 7254              		.loc 1 1136 0 discriminator 3
 7255 15d8 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7256 15dc 07F56673 		add	r3, r7, #920
 7257 15e0 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7258 15e4 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7259 15e8 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7260 15ec 01FB03F3 		mul	r3, r1, r3
 7261 15f0 1846     		mov	r0, r3
 7262 15f2 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7263 15f6 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7264 15fa CB1A     		subs	r3, r1, r3
 7265 15fc 0344     		add	r3, r3, r0
 7266 15fe 013B     		subs	r3, r3, #1
 7267 1600 1344     		add	r3, r3, r2
 7268 1602 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7269 1606 07F2CC41 		addw	r1, r7, #1228
 7270 160a 0A44     		add	r2, r2, r1
 7271 160c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7272 160e 1A70     		strb	r2, [r3]
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7273              		.loc 1 1135 0 discriminator 3
 7274 1610 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7275 1614 0133     		adds	r3, r3, #1
 7276 1616 87F8E634 		strb	r3, [r7, #1254]
 7277              	.L320:
1135:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7278              		.loc 1 1135 0 is_stmt 0 discriminator 1
 7279 161a 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7280 161e 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 7281 1622 9A42     		cmp	r2, r3
 7282 1624 D8D3     		bcc	.L321
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7283              		.loc 1 1133 0 is_stmt 1 discriminator 2
 7284 1626 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7285 162a 0133     		adds	r3, r3, #1
 7286 162c 87F8E734 		strb	r3, [r7, #1255]
 7287              	.L319:
1133:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7288              		.loc 1 1133 0 is_stmt 0 discriminator 1
 7289 1630 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7290 1634 07F54072 		add	r2, r7, #768
 7291 1638 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7292 163a 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7293 163e 9A42     		cmp	r2, r3
 7294 1640 BAD3     		bcc	.L322
1139:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7295              		.loc 1 1139 0 is_stmt 1
 7296 1642 52E0     		b	.L327
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 177


 7297              	.L298:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7298              		.loc 1 1141 0
 7299 1644 0023     		movs	r3, #0
 7300 1646 87F8E734 		strb	r3, [r7, #1255]
 7301 164a 3BE0     		b	.L323
 7302              	.L326:
1142:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7303              		.loc 1 1142 0
 7304 164c 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7305 1650 97F8E524 		ldrb	r2, [r7, #1253]	@ zero_extendqisi2
 7306 1654 02FB03F3 		mul	r3, r2, r3
 7307 1658 0333     		adds	r3, r3, #3
 7308 165a 224A     		ldr	r2, .L342
 7309 165c 1344     		add	r3, r3, r2
 7310 165e 1B68     		ldr	r3, [r3]	@ float
 7311 1660 C7F8C834 		str	r3, [r7, #1224]	@ float
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7312              		.loc 1 1143 0
 7313 1664 0023     		movs	r3, #0
 7314 1666 87F8E634 		strb	r3, [r7, #1254]
 7315 166a 20E0     		b	.L324
 7316              	.L325:
1144:..\src/command_processing.c ****                         }
 7317              		.loc 1 1144 0 discriminator 3
 7318 166c 97F8DA24 		ldrb	r2, [r7, #1242]	@ zero_extendqisi2
 7319 1670 07F56673 		add	r3, r7, #920
 7320 1674 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7321 1678 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7322 167c 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7323 1680 01FB03F3 		mul	r3, r1, r3
 7324 1684 1846     		mov	r0, r3
 7325 1686 97F8E514 		ldrb	r1, [r7, #1253]	@ zero_extendqisi2
 7326 168a 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7327 168e CB1A     		subs	r3, r1, r3
 7328 1690 0344     		add	r3, r3, r0
 7329 1692 013B     		subs	r3, r3, #1
 7330 1694 1344     		add	r3, r3, r2
 7331 1696 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7332 169a 07F59961 		add	r1, r7, #1224
 7333 169e 0A44     		add	r2, r2, r1
 7334 16a0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7335 16a2 1A70     		strb	r2, [r3]
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7336              		.loc 1 1143 0 discriminator 3
 7337 16a4 97F8E634 		ldrb	r3, [r7, #1254]	@ zero_extendqisi2
 7338 16a8 0133     		adds	r3, r3, #1
 7339 16aa 87F8E634 		strb	r3, [r7, #1254]
 7340              	.L324:
1143:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7341              		.loc 1 1143 0 is_stmt 0 discriminator 1
 7342 16ae 97F8E624 		ldrb	r2, [r7, #1254]	@ zero_extendqisi2
 7343 16b2 97F8E534 		ldrb	r3, [r7, #1253]	@ zero_extendqisi2
 7344 16b6 9A42     		cmp	r2, r3
 7345 16b8 D8D3     		bcc	.L325
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7346              		.loc 1 1141 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 178


 7347 16ba 97F8E734 		ldrb	r3, [r7, #1255]	@ zero_extendqisi2
 7348 16be 0133     		adds	r3, r3, #1
 7349 16c0 87F8E734 		strb	r3, [r7, #1255]
 7350              	.L323:
1141:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7351              		.loc 1 1141 0 is_stmt 0 discriminator 1
 7352 16c4 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7353 16c8 07F54072 		add	r2, r7, #768
 7354 16cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7355 16ce 97F8E724 		ldrb	r2, [r7, #1255]	@ zero_extendqisi2
 7356 16d2 9A42     		cmp	r2, r3
 7357 16d4 BAD3     		bcc	.L326
1147:..\src/command_processing.c ****                 default:
 7358              		.loc 1 1147 0 is_stmt 1
 7359 16d6 08E0     		b	.L327
 7360              	.L289:
1154:..\src/command_processing.c ****         }
 7361              		.loc 1 1154 0
 7362 16d8 BB1D     		adds	r3, r7, #6
 7363 16da 1B88     		ldrh	r3, [r3]
 7364 16dc 1846     		mov	r0, r3
 7365 16de FFF7FEFF 		bl	set_custom_param
 7366 16e2 02E0     		b	.L327
 7367              	.L343:
 7368              		.align	2
 7369              	.L342:
 7370 16e4 00000000 		.word	g_rx
 7371              	.L332:
1149:..\src/command_processing.c ****             }
 7372              		.loc 1 1149 0
 7373 16e8 00BF     		nop
 7374              	.L327:
1158:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 7375              		.loc 1 1158 0
 7376 16ea 97F8DB34 		ldrb	r3, [r7, #1243]	@ zero_extendqisi2
 7377 16ee 9BB2     		uxth	r3, r3
 7378 16f0 BA1D     		adds	r2, r7, #6
 7379 16f2 1288     		ldrh	r2, [r2]
 7380 16f4 9A42     		cmp	r2, r3
 7381 16f6 11D0     		beq	.L328
1159:..\src/command_processing.c ****         }
 7382              		.loc 1 1159 0
 7383 16f8 D7F8E034 		ldr	r3, [r7, #1248]
 7384 16fc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7385 1700 5B01     		lsls	r3, r3, #5
 7386 1702 03F51273 		add	r3, r3, #584
 7387 1706 D7F8E024 		ldr	r2, [r7, #1248]
 7388 170a D018     		adds	r0, r2, r3
 7389 170c D7F8E034 		ldr	r3, [r7, #1248]
 7390 1710 03F5F873 		add	r3, r3, #496
 7391 1714 1022     		movs	r2, #16
 7392 1716 1946     		mov	r1, r3
 7393 1718 FFF7FEFF 		bl	memcpy
 7394              	.L328:
1163:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 7395              		.loc 1 1163 0
 7396 171c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 179


 7397 1720 07F55372 		add	r2, r7, #844
 7398 1724 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7399 1726 002B     		cmp	r3, #0
 7400 1728 42D1     		bne	.L333
 7401              	.LBB14:
1164:..\src/command_processing.c ****             do {
 7402              		.loc 1 1164 0
 7403 172a 0023     		movs	r3, #0
 7404 172c 87F8DF34 		strb	r3, [r7, #1247]
 7405 1730 FF23     		movs	r3, #255
 7406 1732 87F8DE34 		strb	r3, [r7, #1246]
 7407              	.L330:
1166:..\src/command_processing.c ****                 idx++;
 7408              		.loc 1 1166 0
 7409 1736 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 7410 173a 07F55372 		add	r2, r7, #844
 7411 173e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7412 1740 002B     		cmp	r3, #0
 7413 1742 04D1     		bne	.L329
1166:..\src/command_processing.c ****                 idx++;
 7414              		.loc 1 1166 0 is_stmt 0 discriminator 1
 7415 1744 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7416 1748 0133     		adds	r3, r3, #1
 7417 174a 87F8DE34 		strb	r3, [r7, #1246]
 7418              	.L329:
1167:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 7419              		.loc 1 1167 0 is_stmt 1
 7420 174e 97F8DF34 		ldrb	r3, [r7, #1247]	@ zero_extendqisi2
 7421 1752 0133     		adds	r3, r3, #1
 7422 1754 87F8DF34 		strb	r3, [r7, #1247]
1168:..\src/command_processing.c ****             
 7423              		.loc 1 1168 0
 7424 1758 97F8DF24 		ldrb	r2, [r7, #1247]	@ zero_extendqisi2
 7425 175c 97F8DA34 		ldrb	r3, [r7, #1242]	@ zero_extendqisi2
 7426 1760 9A42     		cmp	r2, r3
 7427 1762 E8D9     		bls	.L330
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7428              		.loc 1 1170 0
 7429 1764 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7430 1768 07F1C402 		add	r2, r7, #196
 7431 176c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7432 176e 052B     		cmp	r3, #5
 7433 1770 1BD0     		beq	.L331
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7434              		.loc 1 1170 0 is_stmt 0 discriminator 1
 7435 1772 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7436 1776 07F1C402 		add	r2, r7, #196
 7437 177a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7438 177c 062B     		cmp	r3, #6
 7439 177e 14D0     		beq	.L331
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7440              		.loc 1 1170 0 discriminator 2
 7441 1780 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7442 1784 07F1C402 		add	r2, r7, #196
 7443 1788 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7444 178a 082B     		cmp	r3, #8
 7445 178c 0DD0     		beq	.L331
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 180


1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7446              		.loc 1 1170 0 discriminator 3
 7447 178e 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7448 1792 07F1C402 		add	r2, r7, #196
 7449 1796 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7450 1798 092B     		cmp	r3, #9
 7451 179a 06D0     		beq	.L331
1170:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7452              		.loc 1 1170 0 discriminator 4
 7453 179c 97F8DE34 		ldrb	r3, [r7, #1246]	@ zero_extendqisi2
 7454 17a0 07F1C402 		add	r2, r7, #196
 7455 17a4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7456 17a6 0A2B     		cmp	r3, #10
 7457 17a8 02D1     		bne	.L333
 7458              	.L331:
1171:..\src/command_processing.c ****             }   
 7459              		.loc 1 1171 0 is_stmt 1
 7460 17aa 044B     		ldr	r3, .L344
 7461 17ac 0122     		movs	r2, #1
 7462 17ae 1A70     		strb	r2, [r3]
 7463              	.L333:
 7464              	.LBE14:
 7465              		.loc 1 1175 0
 7466 17b0 00BF     		nop
 7467 17b2 07F59D67 		add	r7, r7, #1256
 7468              		.cfi_def_cfa_offset 16
 7469 17b6 BD46     		mov	sp, r7
 7470              		.cfi_def_cfa_register 13
 7471              		@ sp needed
 7472 17b8 B0BD     		pop	{r4, r5, r7, pc}
 7473              	.L345:
 7474 17ba 00BF     		.align	2
 7475              	.L344:
 7476 17bc 00000000 		.word	reset_PSoC_flag
 7477              		.cfi_endproc
 7478              	.LFE68:
 7479              		.size	manage_param_list, .-manage_param_list
 7480              		.global	__aeabi_fmul
 7481              		.global	__aeabi_f2iz
 7482              		.section	.text.set_custom_param,"ax",%progbits
 7483              		.align	2
 7484              		.global	set_custom_param
 7485              		.thumb
 7486              		.thumb_func
 7487              		.type	set_custom_param, %function
 7488              	set_custom_param:
 7489              	.LFB69:
1176:..\src/command_processing.c **** 
1177:..\src/command_processing.c **** //==============================================================================
1178:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1179:..\src/command_processing.c **** //==============================================================================
1180:..\src/command_processing.c **** 
1181:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 7490              		.loc 1 1181 0
 7491              		.cfi_startproc
 7492              		@ args = 0, pretend = 0, frame = 24
 7493              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 181


 7494 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7495              		.cfi_def_cfa_offset 20
 7496              		.cfi_offset 4, -20
 7497              		.cfi_offset 5, -16
 7498              		.cfi_offset 6, -12
 7499              		.cfi_offset 7, -8
 7500              		.cfi_offset 14, -4
 7501 0002 87B0     		sub	sp, sp, #28
 7502              		.cfi_def_cfa_offset 48
 7503 0004 00AF     		add	r7, sp, #0
 7504              		.cfi_def_cfa_register 7
 7505 0006 0346     		mov	r3, r0
 7506 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1182:..\src/command_processing.c **** 
1183:..\src/command_processing.c ****     uint8 CYDATA i, j;
1184:..\src/command_processing.c ****     uint8 aux_uchar;
1185:..\src/command_processing.c ****     float aux_float, aux_float2;
1186:..\src/command_processing.c **** 
1187:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7507              		.loc 1 1187 0
 7508 000a 0023     		movs	r3, #0
 7509 000c 3B75     		strb	r3, [r7, #20]
1188:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7510              		.loc 1 1188 0
 7511 000e 0123     		movs	r3, #1
 7512 0010 FB74     		strb	r3, [r7, #19]
1189:..\src/command_processing.c ****     
1190:..\src/command_processing.c ****     switch(index){
 7513              		.loc 1 1190 0
 7514 0012 FB88     		ldrh	r3, [r7, #6]
 7515 0014 023B     		subs	r3, r3, #2
 7516 0016 452B     		cmp	r3, #69
 7517 0018 01F2EB81 		bhi	.L438
 7518 001c 01A2     		adr	r2, .L349
 7519 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7520 0022 00BF     		.p2align 2
 7521              	.L349:
 7522 0024 3D010000 		.word	.L348+1
 7523 0028 6F030000 		.word	.L350+1
 7524 002c F3130000 		.word	.L438+1
 7525 0030 B5050000 		.word	.L351+1
 7526 0034 F3130000 		.word	.L438+1
 7527 0038 F3130000 		.word	.L438+1
 7528 003c FF050000 		.word	.L352+1
 7529 0040 F3130000 		.word	.L438+1
 7530 0044 F3130000 		.word	.L438+1
 7531 0048 35070000 		.word	.L353+1
 7532 004c F3130000 		.word	.L438+1
 7533 0050 F3130000 		.word	.L438+1
 7534 0054 F3130000 		.word	.L438+1
 7535 0058 F3130000 		.word	.L438+1
 7536 005c F3130000 		.word	.L438+1
 7537 0060 F3130000 		.word	.L438+1
 7538 0064 F3130000 		.word	.L438+1
 7539 0068 F3130000 		.word	.L438+1
 7540 006c F3130000 		.word	.L438+1
 7541 0070 F3130000 		.word	.L438+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 182


 7542 0074 F3130000 		.word	.L438+1
 7543 0078 35080000 		.word	.L354+1
 7544 007c 93080000 		.word	.L355+1
 7545 0080 F3130000 		.word	.L438+1
 7546 0084 F3130000 		.word	.L438+1
 7547 0088 F3130000 		.word	.L438+1
 7548 008c CD080000 		.word	.L356+1
 7549 0090 F3130000 		.word	.L438+1
 7550 0094 F3130000 		.word	.L438+1
 7551 0098 490A0000 		.word	.L357+1
 7552 009c F50A0000 		.word	.L358+1
 7553 00a0 F3130000 		.word	.L438+1
 7554 00a4 F3130000 		.word	.L438+1
 7555 00a8 F3130000 		.word	.L438+1
 7556 00ac F3130000 		.word	.L438+1
 7557 00b0 F3130000 		.word	.L438+1
 7558 00b4 2F0B0000 		.word	.L359+1
 7559 00b8 F3130000 		.word	.L438+1
 7560 00bc F3130000 		.word	.L438+1
 7561 00c0 F3130000 		.word	.L438+1
 7562 00c4 F3130000 		.word	.L438+1
 7563 00c8 F3130000 		.word	.L438+1
 7564 00cc 690B0000 		.word	.L360+1
 7565 00d0 AF0D0000 		.word	.L361+1
 7566 00d4 F3130000 		.word	.L438+1
 7567 00d8 DD0F0000 		.word	.L362+1
 7568 00dc F3130000 		.word	.L438+1
 7569 00e0 F3130000 		.word	.L438+1
 7570 00e4 45100000 		.word	.L363+1
 7571 00e8 F3130000 		.word	.L438+1
 7572 00ec F3130000 		.word	.L438+1
 7573 00f0 59110000 		.word	.L364+1
 7574 00f4 F3130000 		.word	.L438+1
 7575 00f8 F3130000 		.word	.L438+1
 7576 00fc F3130000 		.word	.L438+1
 7577 0100 F3130000 		.word	.L438+1
 7578 0104 F3130000 		.word	.L438+1
 7579 0108 F3130000 		.word	.L438+1
 7580 010c F3130000 		.word	.L438+1
 7581 0110 57120000 		.word	.L365+1
 7582 0114 F3130000 		.word	.L438+1
 7583 0118 F3130000 		.word	.L438+1
 7584 011c F3130000 		.word	.L438+1
 7585 0120 F3130000 		.word	.L438+1
 7586 0124 F3130000 		.word	.L438+1
 7587 0128 F3130000 		.word	.L438+1
 7588 012c F3130000 		.word	.L438+1
 7589 0130 F3130000 		.word	.L438+1
 7590 0134 F3130000 		.word	.L438+1
 7591 0138 A1120000 		.word	.L366+1
 7592              		.p2align 1
 7593              	.L348:
1191:..\src/command_processing.c ****         case 2:         // Position PID
1192:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7594              		.loc 1 1192 0
 7595 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7596 013e AB49     		ldr	r1, .L444
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 183


 7597 0140 1346     		mov	r3, r2
 7598 0142 DB00     		lsls	r3, r3, #3
 7599 0144 9B1A     		subs	r3, r3, r2
 7600 0146 1B01     		lsls	r3, r3, #4
 7601 0148 0B44     		add	r3, r3, r1
 7602 014a 03F20F13 		addw	r3, r3, #271
 7603 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7604 0150 032B     		cmp	r3, #3
 7605 0152 00F08680 		beq	.L367
1193:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7606              		.loc 1 1193 0
 7607 0156 A64B     		ldr	r3, .L444+4
 7608 0158 1B68     		ldr	r3, [r3]	@ float
 7609 015a FB60     		str	r3, [r7, #12]	@ float
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7610              		.loc 1 1194 0
 7611 015c 0023     		movs	r3, #0
 7612 015e BB75     		strb	r3, [r7, #22]
 7613 0160 0EE0     		b	.L368
 7614              	.L369:
1195:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7615              		.loc 1 1195 0 discriminator 3
 7616 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7617 0164 C3F10303 		rsb	r3, r3, #3
 7618 0168 07F10802 		add	r2, r7, #8
 7619 016c 1344     		add	r3, r3, r2
 7620 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7621 0170 07F10C01 		add	r1, r7, #12
 7622 0174 0A44     		add	r2, r2, r1
 7623 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7624 0178 1A70     		strb	r2, [r3]
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7625              		.loc 1 1194 0 discriminator 3
 7626 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7627 017c 0133     		adds	r3, r3, #1
 7628 017e BB75     		strb	r3, [r7, #22]
 7629              	.L368:
1194:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7630              		.loc 1 1194 0 is_stmt 0 discriminator 1
 7631 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7632 0182 032B     		cmp	r3, #3
 7633 0184 EDD9     		bls	.L369
1196:..\src/command_processing.c ****                 }
1197:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 7634              		.loc 1 1197 0 is_stmt 1
 7635 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7636 0188 BB68     		ldr	r3, [r7, #8]	@ float
 7637 018a 4FF08F41 		mov	r1, #1199570944
 7638 018e 1846     		mov	r0, r3
 7639 0190 FFF7FEFF 		bl	__aeabi_fmul
 7640 0194 0346     		mov	r3, r0
 7641 0196 1846     		mov	r0, r3
 7642 0198 FFF7FEFF 		bl	__aeabi_f2iz
 7643 019c 0146     		mov	r1, r0
 7644 019e 954A     		ldr	r2, .L444+8
 7645 01a0 2346     		mov	r3, r4
 7646 01a2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 184


 7647 01a4 1B1B     		subs	r3, r3, r4
 7648 01a6 1B01     		lsls	r3, r3, #4
 7649 01a8 1344     		add	r3, r3, r2
 7650 01aa B033     		adds	r3, r3, #176
 7651 01ac 1960     		str	r1, [r3]
1198:..\src/command_processing.c ****                 
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7652              		.loc 1 1199 0
 7653 01ae 924B     		ldr	r3, .L444+12
 7654 01b0 1B68     		ldr	r3, [r3]	@ float
 7655 01b2 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7656              		.loc 1 1200 0
 7657 01b4 0023     		movs	r3, #0
 7658 01b6 BB75     		strb	r3, [r7, #22]
 7659 01b8 0EE0     		b	.L370
 7660              	.L371:
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7661              		.loc 1 1201 0 discriminator 3
 7662 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7663 01bc C3F10303 		rsb	r3, r3, #3
 7664 01c0 07F10802 		add	r2, r7, #8
 7665 01c4 1344     		add	r3, r3, r2
 7666 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7667 01c8 07F10C01 		add	r1, r7, #12
 7668 01cc 0A44     		add	r2, r2, r1
 7669 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7670 01d0 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7671              		.loc 1 1200 0 discriminator 3
 7672 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7673 01d4 0133     		adds	r3, r3, #1
 7674 01d6 BB75     		strb	r3, [r7, #22]
 7675              	.L370:
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7676              		.loc 1 1200 0 is_stmt 0 discriminator 1
 7677 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7678 01da 032B     		cmp	r3, #3
 7679 01dc EDD9     		bls	.L371
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 7680              		.loc 1 1203 0 is_stmt 1
 7681 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7682 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 7683 01e2 4FF08F41 		mov	r1, #1199570944
 7684 01e6 1846     		mov	r0, r3
 7685 01e8 FFF7FEFF 		bl	__aeabi_fmul
 7686 01ec 0346     		mov	r3, r0
 7687 01ee 1846     		mov	r0, r3
 7688 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 7689 01f4 0146     		mov	r1, r0
 7690 01f6 7F4A     		ldr	r2, .L444+8
 7691 01f8 2346     		mov	r3, r4
 7692 01fa DB00     		lsls	r3, r3, #3
 7693 01fc 1B1B     		subs	r3, r3, r4
 7694 01fe 1B01     		lsls	r3, r3, #4
 7695 0200 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 185


 7696 0202 B433     		adds	r3, r3, #180
 7697 0204 1960     		str	r1, [r3]
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7698              		.loc 1 1205 0
 7699 0206 7D4B     		ldr	r3, .L444+16
 7700 0208 1B68     		ldr	r3, [r3]	@ float
 7701 020a FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7702              		.loc 1 1206 0
 7703 020c 0023     		movs	r3, #0
 7704 020e BB75     		strb	r3, [r7, #22]
 7705 0210 0EE0     		b	.L372
 7706              	.L373:
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7707              		.loc 1 1207 0 discriminator 3
 7708 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7709 0214 C3F10303 		rsb	r3, r3, #3
 7710 0218 07F10802 		add	r2, r7, #8
 7711 021c 1344     		add	r3, r3, r2
 7712 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7713 0220 07F10C01 		add	r1, r7, #12
 7714 0224 0A44     		add	r2, r2, r1
 7715 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7716 0228 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7717              		.loc 1 1206 0 discriminator 3
 7718 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7719 022c 0133     		adds	r3, r3, #1
 7720 022e BB75     		strb	r3, [r7, #22]
 7721              	.L372:
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7722              		.loc 1 1206 0 is_stmt 0 discriminator 1
 7723 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7724 0232 032B     		cmp	r3, #3
 7725 0234 EDD9     		bls	.L373
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 7726              		.loc 1 1209 0 is_stmt 1
 7727 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7728 0238 BB68     		ldr	r3, [r7, #8]	@ float
 7729 023a 4FF08F41 		mov	r1, #1199570944
 7730 023e 1846     		mov	r0, r3
 7731 0240 FFF7FEFF 		bl	__aeabi_fmul
 7732 0244 0346     		mov	r3, r0
 7733 0246 1846     		mov	r0, r3
 7734 0248 FFF7FEFF 		bl	__aeabi_f2iz
 7735 024c 0146     		mov	r1, r0
 7736 024e 694A     		ldr	r2, .L444+8
 7737 0250 2346     		mov	r3, r4
 7738 0252 DB00     		lsls	r3, r3, #3
 7739 0254 1B1B     		subs	r3, r3, r4
 7740 0256 1B01     		lsls	r3, r3, #4
 7741 0258 1344     		add	r3, r3, r2
 7742 025a B833     		adds	r3, r3, #184
 7743 025c 1960     		str	r1, [r3]
1210:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 186


1211:..\src/command_processing.c ****             else {
1212:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1213:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1214:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1215:..\src/command_processing.c ****                 }
1216:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1217:..\src/command_processing.c ****                 
1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1229:..\src/command_processing.c ****             }
1230:..\src/command_processing.c ****             break;
 7744              		.loc 1 1230 0
 7745 025e 01F0D3B8 		b	.L381
 7746              	.L367:
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7747              		.loc 1 1212 0
 7748 0262 634B     		ldr	r3, .L444+4
 7749 0264 1B68     		ldr	r3, [r3]	@ float
 7750 0266 FB60     		str	r3, [r7, #12]	@ float
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7751              		.loc 1 1213 0
 7752 0268 0023     		movs	r3, #0
 7753 026a BB75     		strb	r3, [r7, #22]
 7754 026c 0EE0     		b	.L375
 7755              	.L376:
1214:..\src/command_processing.c ****                 }
 7756              		.loc 1 1214 0 discriminator 3
 7757 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7758 0270 C3F10303 		rsb	r3, r3, #3
 7759 0274 07F10802 		add	r2, r7, #8
 7760 0278 1344     		add	r3, r3, r2
 7761 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7762 027c 07F10C01 		add	r1, r7, #12
 7763 0280 0A44     		add	r2, r2, r1
 7764 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7765 0284 1A70     		strb	r2, [r3]
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7766              		.loc 1 1213 0 discriminator 3
 7767 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7768 0288 0133     		adds	r3, r3, #1
 7769 028a BB75     		strb	r3, [r7, #22]
 7770              	.L375:
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7771              		.loc 1 1213 0 is_stmt 0 discriminator 1
 7772 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7773 028e 032B     		cmp	r3, #3
 7774 0290 EDD9     		bls	.L376
1216:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 187


 7775              		.loc 1 1216 0 is_stmt 1
 7776 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7777 0294 BB68     		ldr	r3, [r7, #8]	@ float
 7778 0296 4FF08F41 		mov	r1, #1199570944
 7779 029a 1846     		mov	r0, r3
 7780 029c FFF7FEFF 		bl	__aeabi_fmul
 7781 02a0 0346     		mov	r3, r0
 7782 02a2 1846     		mov	r0, r3
 7783 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 7784 02a8 0146     		mov	r1, r0
 7785 02aa 524A     		ldr	r2, .L444+8
 7786 02ac 2346     		mov	r3, r4
 7787 02ae DB00     		lsls	r3, r3, #3
 7788 02b0 1B1B     		subs	r3, r3, r4
 7789 02b2 1B01     		lsls	r3, r3, #4
 7790 02b4 1344     		add	r3, r3, r2
 7791 02b6 C833     		adds	r3, r3, #200
 7792 02b8 1960     		str	r1, [r3]
1218:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7793              		.loc 1 1218 0
 7794 02ba 4F4B     		ldr	r3, .L444+12
 7795 02bc 1B68     		ldr	r3, [r3]	@ float
 7796 02be FB60     		str	r3, [r7, #12]	@ float
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7797              		.loc 1 1219 0
 7798 02c0 0023     		movs	r3, #0
 7799 02c2 BB75     		strb	r3, [r7, #22]
 7800 02c4 0EE0     		b	.L377
 7801              	.L378:
1220:..\src/command_processing.c ****                 }
 7802              		.loc 1 1220 0 discriminator 3
 7803 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7804 02c8 C3F10303 		rsb	r3, r3, #3
 7805 02cc 07F10802 		add	r2, r7, #8
 7806 02d0 1344     		add	r3, r3, r2
 7807 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7808 02d4 07F10C01 		add	r1, r7, #12
 7809 02d8 0A44     		add	r2, r2, r1
 7810 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7811 02dc 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7812              		.loc 1 1219 0 discriminator 3
 7813 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7814 02e0 0133     		adds	r3, r3, #1
 7815 02e2 BB75     		strb	r3, [r7, #22]
 7816              	.L377:
1219:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7817              		.loc 1 1219 0 is_stmt 0 discriminator 1
 7818 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7819 02e6 032B     		cmp	r3, #3
 7820 02e8 EDD9     		bls	.L378
1222:..\src/command_processing.c ****                 
 7821              		.loc 1 1222 0 is_stmt 1
 7822 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7823 02ec BB68     		ldr	r3, [r7, #8]	@ float
 7824 02ee 4FF08F41 		mov	r1, #1199570944
 7825 02f2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 188


 7826 02f4 FFF7FEFF 		bl	__aeabi_fmul
 7827 02f8 0346     		mov	r3, r0
 7828 02fa 1846     		mov	r0, r3
 7829 02fc FFF7FEFF 		bl	__aeabi_f2iz
 7830 0300 0146     		mov	r1, r0
 7831 0302 3C4A     		ldr	r2, .L444+8
 7832 0304 2346     		mov	r3, r4
 7833 0306 DB00     		lsls	r3, r3, #3
 7834 0308 1B1B     		subs	r3, r3, r4
 7835 030a 1B01     		lsls	r3, r3, #4
 7836 030c 1344     		add	r3, r3, r2
 7837 030e CC33     		adds	r3, r3, #204
 7838 0310 1960     		str	r1, [r3]
1224:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7839              		.loc 1 1224 0
 7840 0312 3A4B     		ldr	r3, .L444+16
 7841 0314 1B68     		ldr	r3, [r3]	@ float
 7842 0316 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7843              		.loc 1 1225 0
 7844 0318 0023     		movs	r3, #0
 7845 031a BB75     		strb	r3, [r7, #22]
 7846 031c 0EE0     		b	.L379
 7847              	.L380:
1226:..\src/command_processing.c ****                 }
 7848              		.loc 1 1226 0 discriminator 3
 7849 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7850 0320 C3F10303 		rsb	r3, r3, #3
 7851 0324 07F10802 		add	r2, r7, #8
 7852 0328 1344     		add	r3, r3, r2
 7853 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7854 032c 07F10C01 		add	r1, r7, #12
 7855 0330 0A44     		add	r2, r2, r1
 7856 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7857 0334 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7858              		.loc 1 1225 0 discriminator 3
 7859 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7860 0338 0133     		adds	r3, r3, #1
 7861 033a BB75     		strb	r3, [r7, #22]
 7862              	.L379:
1225:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7863              		.loc 1 1225 0 is_stmt 0 discriminator 1
 7864 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7865 033e 032B     		cmp	r3, #3
 7866 0340 EDD9     		bls	.L380
1228:..\src/command_processing.c ****             }
 7867              		.loc 1 1228 0 is_stmt 1
 7868 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7869 0344 BB68     		ldr	r3, [r7, #8]	@ float
 7870 0346 4FF08F41 		mov	r1, #1199570944
 7871 034a 1846     		mov	r0, r3
 7872 034c FFF7FEFF 		bl	__aeabi_fmul
 7873 0350 0346     		mov	r3, r0
 7874 0352 1846     		mov	r0, r3
 7875 0354 FFF7FEFF 		bl	__aeabi_f2iz
 7876 0358 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 189


 7877 035a 264A     		ldr	r2, .L444+8
 7878 035c 2346     		mov	r3, r4
 7879 035e DB00     		lsls	r3, r3, #3
 7880 0360 1B1B     		subs	r3, r3, r4
 7881 0362 1B01     		lsls	r3, r3, #4
 7882 0364 1344     		add	r3, r3, r2
 7883 0366 D033     		adds	r3, r3, #208
 7884 0368 1960     		str	r1, [r3]
 7885              		.loc 1 1230 0
 7886 036a 01F04DB8 		b	.L381
 7887              	.L350:
1231:..\src/command_processing.c ****             
1232:..\src/command_processing.c ****         case 3:         //Current PID
1233:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7888              		.loc 1 1233 0
 7889 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7890 0370 1E49     		ldr	r1, .L444
 7891 0372 1346     		mov	r3, r2
 7892 0374 DB00     		lsls	r3, r3, #3
 7893 0376 9B1A     		subs	r3, r3, r2
 7894 0378 1B01     		lsls	r3, r3, #4
 7895 037a 0B44     		add	r3, r3, r1
 7896 037c 03F20F13 		addw	r3, r3, #271
 7897 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7898 0382 032B     		cmp	r3, #3
 7899 0384 00F09080 		beq	.L382
1234:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7900              		.loc 1 1234 0
 7901 0388 194B     		ldr	r3, .L444+4
 7902 038a 1B68     		ldr	r3, [r3]	@ float
 7903 038c FB60     		str	r3, [r7, #12]	@ float
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7904              		.loc 1 1235 0
 7905 038e 0023     		movs	r3, #0
 7906 0390 BB75     		strb	r3, [r7, #22]
 7907 0392 0EE0     		b	.L383
 7908              	.L384:
1236:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7909              		.loc 1 1236 0 discriminator 3
 7910 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7911 0396 C3F10303 		rsb	r3, r3, #3
 7912 039a 07F10802 		add	r2, r7, #8
 7913 039e 1344     		add	r3, r3, r2
 7914 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7915 03a2 07F10C01 		add	r1, r7, #12
 7916 03a6 0A44     		add	r2, r2, r1
 7917 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7918 03aa 1A70     		strb	r2, [r3]
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7919              		.loc 1 1235 0 discriminator 3
 7920 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7921 03ae 0133     		adds	r3, r3, #1
 7922 03b0 BB75     		strb	r3, [r7, #22]
 7923              	.L383:
1235:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7924              		.loc 1 1235 0 is_stmt 0 discriminator 1
 7925 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 190


 7926 03b4 032B     		cmp	r3, #3
 7927 03b6 EDD9     		bls	.L384
1237:..\src/command_processing.c ****                 }
1238:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 7928              		.loc 1 1238 0 is_stmt 1
 7929 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7930 03ba BB68     		ldr	r3, [r7, #8]	@ float
 7931 03bc 4FF08F41 		mov	r1, #1199570944
 7932 03c0 1846     		mov	r0, r3
 7933 03c2 FFF7FEFF 		bl	__aeabi_fmul
 7934 03c6 0346     		mov	r3, r0
 7935 03c8 1846     		mov	r0, r3
 7936 03ca FFF7FEFF 		bl	__aeabi_f2iz
 7937 03ce 0146     		mov	r1, r0
 7938 03d0 084A     		ldr	r2, .L444+8
 7939 03d2 2346     		mov	r3, r4
 7940 03d4 DB00     		lsls	r3, r3, #3
 7941 03d6 1B1B     		subs	r3, r3, r4
 7942 03d8 1B01     		lsls	r3, r3, #4
 7943 03da 1344     		add	r3, r3, r2
 7944 03dc BC33     		adds	r3, r3, #188
 7945 03de 1960     		str	r1, [r3]
1239:..\src/command_processing.c ****                 
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7946              		.loc 1 1240 0
 7947 03e0 054B     		ldr	r3, .L444+12
 7948 03e2 1B68     		ldr	r3, [r3]	@ float
 7949 03e4 FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7950              		.loc 1 1241 0
 7951 03e6 0023     		movs	r3, #0
 7952 03e8 BB75     		strb	r3, [r7, #22]
 7953 03ea 18E0     		b	.L385
 7954              	.L445:
 7955              		.align	2
 7956              	.L444:
 7957 03ec 00000000 		.word	c_mem
 7958 03f0 03000000 		.word	g_rx+3
 7959 03f4 00000000 		.word	g_mem
 7960 03f8 07000000 		.word	g_rx+7
 7961 03fc 0B000000 		.word	g_rx+11
 7962              	.L386:
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7963              		.loc 1 1242 0 discriminator 3
 7964 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7965 0402 C3F10303 		rsb	r3, r3, #3
 7966 0406 07F10802 		add	r2, r7, #8
 7967 040a 1344     		add	r3, r3, r2
 7968 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7969 040e 07F10C01 		add	r1, r7, #12
 7970 0412 0A44     		add	r2, r2, r1
 7971 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7972 0416 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7973              		.loc 1 1241 0 discriminator 3
 7974 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7975 041a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 191


 7976 041c BB75     		strb	r3, [r7, #22]
 7977              	.L385:
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7978              		.loc 1 1241 0 is_stmt 0 discriminator 1
 7979 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7980 0420 032B     		cmp	r3, #3
 7981 0422 EDD9     		bls	.L386
1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 7982              		.loc 1 1244 0 is_stmt 1
 7983 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7984 0426 BB68     		ldr	r3, [r7, #8]	@ float
 7985 0428 4FF08F41 		mov	r1, #1199570944
 7986 042c 1846     		mov	r0, r3
 7987 042e FFF7FEFF 		bl	__aeabi_fmul
 7988 0432 0346     		mov	r3, r0
 7989 0434 1846     		mov	r0, r3
 7990 0436 FFF7FEFF 		bl	__aeabi_f2iz
 7991 043a 0146     		mov	r1, r0
 7992 043c B54A     		ldr	r2, .L446
 7993 043e 2346     		mov	r3, r4
 7994 0440 DB00     		lsls	r3, r3, #3
 7995 0442 1B1B     		subs	r3, r3, r4
 7996 0444 1B01     		lsls	r3, r3, #4
 7997 0446 1344     		add	r3, r3, r2
 7998 0448 C033     		adds	r3, r3, #192
 7999 044a 1960     		str	r1, [r3]
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8000              		.loc 1 1246 0
 8001 044c B24B     		ldr	r3, .L446+4
 8002 044e 1B68     		ldr	r3, [r3]	@ float
 8003 0450 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8004              		.loc 1 1247 0
 8005 0452 0023     		movs	r3, #0
 8006 0454 BB75     		strb	r3, [r7, #22]
 8007 0456 0EE0     		b	.L387
 8008              	.L388:
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8009              		.loc 1 1248 0 discriminator 3
 8010 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8011 045a C3F10303 		rsb	r3, r3, #3
 8012 045e 07F10802 		add	r2, r7, #8
 8013 0462 1344     		add	r3, r3, r2
 8014 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8015 0466 07F10C01 		add	r1, r7, #12
 8016 046a 0A44     		add	r2, r2, r1
 8017 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8018 046e 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8019              		.loc 1 1247 0 discriminator 3
 8020 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8021 0472 0133     		adds	r3, r3, #1
 8022 0474 BB75     		strb	r3, [r7, #22]
 8023              	.L387:
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 192


 8024              		.loc 1 1247 0 is_stmt 0 discriminator 1
 8025 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8026 0478 032B     		cmp	r3, #3
 8027 047a EDD9     		bls	.L388
1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 8028              		.loc 1 1250 0 is_stmt 1
 8029 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8030 047e BB68     		ldr	r3, [r7, #8]	@ float
 8031 0480 4FF08F41 		mov	r1, #1199570944
 8032 0484 1846     		mov	r0, r3
 8033 0486 FFF7FEFF 		bl	__aeabi_fmul
 8034 048a 0346     		mov	r3, r0
 8035 048c 1846     		mov	r0, r3
 8036 048e FFF7FEFF 		bl	__aeabi_f2iz
 8037 0492 0146     		mov	r1, r0
 8038 0494 9F4A     		ldr	r2, .L446
 8039 0496 2346     		mov	r3, r4
 8040 0498 DB00     		lsls	r3, r3, #3
 8041 049a 1B1B     		subs	r3, r3, r4
 8042 049c 1B01     		lsls	r3, r3, #4
 8043 049e 1344     		add	r3, r3, r2
 8044 04a0 C433     		adds	r3, r3, #196
 8045 04a2 1960     		str	r1, [r3]
1251:..\src/command_processing.c ****             }
1252:..\src/command_processing.c ****             else {
1253:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1254:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1255:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1256:..\src/command_processing.c ****                 }
1257:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1260:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1261:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1262:..\src/command_processing.c ****                 }
1263:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1264:..\src/command_processing.c ****                 
1265:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1266:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1267:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1268:..\src/command_processing.c ****                 }
1269:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1270:..\src/command_processing.c ****             }            
1271:..\src/command_processing.c ****             break;  
 8046              		.loc 1 1271 0
 8047 04a4 00F0B0BF 		b	.L381
 8048              	.L382:
1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8049              		.loc 1 1253 0
 8050 04a8 9C4B     		ldr	r3, .L446+8
 8051 04aa 1B68     		ldr	r3, [r3]	@ float
 8052 04ac FB60     		str	r3, [r7, #12]	@ float
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8053              		.loc 1 1254 0
 8054 04ae 0023     		movs	r3, #0
 8055 04b0 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 193


 8056 04b2 0EE0     		b	.L390
 8057              	.L391:
1255:..\src/command_processing.c ****                 }
 8058              		.loc 1 1255 0 discriminator 3
 8059 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8060 04b6 C3F10303 		rsb	r3, r3, #3
 8061 04ba 07F10802 		add	r2, r7, #8
 8062 04be 1344     		add	r3, r3, r2
 8063 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8064 04c2 07F10C01 		add	r1, r7, #12
 8065 04c6 0A44     		add	r2, r2, r1
 8066 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8067 04ca 1A70     		strb	r2, [r3]
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8068              		.loc 1 1254 0 discriminator 3
 8069 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8070 04ce 0133     		adds	r3, r3, #1
 8071 04d0 BB75     		strb	r3, [r7, #22]
 8072              	.L390:
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8073              		.loc 1 1254 0 is_stmt 0 discriminator 1
 8074 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8075 04d4 032B     		cmp	r3, #3
 8076 04d6 EDD9     		bls	.L391
1257:..\src/command_processing.c ****                 
 8077              		.loc 1 1257 0 is_stmt 1
 8078 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8079 04da BB68     		ldr	r3, [r7, #8]	@ float
 8080 04dc 4FF08F41 		mov	r1, #1199570944
 8081 04e0 1846     		mov	r0, r3
 8082 04e2 FFF7FEFF 		bl	__aeabi_fmul
 8083 04e6 0346     		mov	r3, r0
 8084 04e8 1846     		mov	r0, r3
 8085 04ea FFF7FEFF 		bl	__aeabi_f2iz
 8086 04ee 0146     		mov	r1, r0
 8087 04f0 884A     		ldr	r2, .L446
 8088 04f2 2346     		mov	r3, r4
 8089 04f4 DB00     		lsls	r3, r3, #3
 8090 04f6 1B1B     		subs	r3, r3, r4
 8091 04f8 1B01     		lsls	r3, r3, #4
 8092 04fa 1344     		add	r3, r3, r2
 8093 04fc D433     		adds	r3, r3, #212
 8094 04fe 1960     		str	r1, [r3]
1259:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8095              		.loc 1 1259 0
 8096 0500 874B     		ldr	r3, .L446+12
 8097 0502 1B68     		ldr	r3, [r3]	@ float
 8098 0504 FB60     		str	r3, [r7, #12]	@ float
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8099              		.loc 1 1260 0
 8100 0506 0023     		movs	r3, #0
 8101 0508 BB75     		strb	r3, [r7, #22]
 8102 050a 0EE0     		b	.L392
 8103              	.L393:
1261:..\src/command_processing.c ****                 }
 8104              		.loc 1 1261 0 discriminator 3
 8105 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 194


 8106 050e C3F10303 		rsb	r3, r3, #3
 8107 0512 07F10802 		add	r2, r7, #8
 8108 0516 1344     		add	r3, r3, r2
 8109 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8110 051a 07F10C01 		add	r1, r7, #12
 8111 051e 0A44     		add	r2, r2, r1
 8112 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8113 0522 1A70     		strb	r2, [r3]
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8114              		.loc 1 1260 0 discriminator 3
 8115 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8116 0526 0133     		adds	r3, r3, #1
 8117 0528 BB75     		strb	r3, [r7, #22]
 8118              	.L392:
1260:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8119              		.loc 1 1260 0 is_stmt 0 discriminator 1
 8120 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8121 052c 032B     		cmp	r3, #3
 8122 052e EDD9     		bls	.L393
1263:..\src/command_processing.c ****                 
 8123              		.loc 1 1263 0 is_stmt 1
 8124 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8125 0532 BB68     		ldr	r3, [r7, #8]	@ float
 8126 0534 4FF08F41 		mov	r1, #1199570944
 8127 0538 1846     		mov	r0, r3
 8128 053a FFF7FEFF 		bl	__aeabi_fmul
 8129 053e 0346     		mov	r3, r0
 8130 0540 1846     		mov	r0, r3
 8131 0542 FFF7FEFF 		bl	__aeabi_f2iz
 8132 0546 0146     		mov	r1, r0
 8133 0548 724A     		ldr	r2, .L446
 8134 054a 2346     		mov	r3, r4
 8135 054c DB00     		lsls	r3, r3, #3
 8136 054e 1B1B     		subs	r3, r3, r4
 8137 0550 1B01     		lsls	r3, r3, #4
 8138 0552 1344     		add	r3, r3, r2
 8139 0554 D833     		adds	r3, r3, #216
 8140 0556 1960     		str	r1, [r3]
1265:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8141              		.loc 1 1265 0
 8142 0558 6F4B     		ldr	r3, .L446+4
 8143 055a 1B68     		ldr	r3, [r3]	@ float
 8144 055c FB60     		str	r3, [r7, #12]	@ float
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8145              		.loc 1 1266 0
 8146 055e 0023     		movs	r3, #0
 8147 0560 BB75     		strb	r3, [r7, #22]
 8148 0562 0EE0     		b	.L394
 8149              	.L395:
1267:..\src/command_processing.c ****                 }
 8150              		.loc 1 1267 0 discriminator 3
 8151 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8152 0566 C3F10303 		rsb	r3, r3, #3
 8153 056a 07F10802 		add	r2, r7, #8
 8154 056e 1344     		add	r3, r3, r2
 8155 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8156 0572 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 195


 8157 0576 0A44     		add	r2, r2, r1
 8158 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8159 057a 1A70     		strb	r2, [r3]
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8160              		.loc 1 1266 0 discriminator 3
 8161 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8162 057e 0133     		adds	r3, r3, #1
 8163 0580 BB75     		strb	r3, [r7, #22]
 8164              	.L394:
1266:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8165              		.loc 1 1266 0 is_stmt 0 discriminator 1
 8166 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8167 0584 032B     		cmp	r3, #3
 8168 0586 EDD9     		bls	.L395
1269:..\src/command_processing.c ****             }            
 8169              		.loc 1 1269 0 is_stmt 1
 8170 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8171 058a BB68     		ldr	r3, [r7, #8]	@ float
 8172 058c 4FF08F41 		mov	r1, #1199570944
 8173 0590 1846     		mov	r0, r3
 8174 0592 FFF7FEFF 		bl	__aeabi_fmul
 8175 0596 0346     		mov	r3, r0
 8176 0598 1846     		mov	r0, r3
 8177 059a FFF7FEFF 		bl	__aeabi_f2iz
 8178 059e 0146     		mov	r1, r0
 8179 05a0 5C4A     		ldr	r2, .L446
 8180 05a2 2346     		mov	r3, r4
 8181 05a4 DB00     		lsls	r3, r3, #3
 8182 05a6 1B1B     		subs	r3, r3, r4
 8183 05a8 1B01     		lsls	r3, r3, #4
 8184 05aa 1344     		add	r3, r3, r2
 8185 05ac DC33     		adds	r3, r3, #220
 8186 05ae 1960     		str	r1, [r3]
 8187              		.loc 1 1271 0
 8188 05b0 00F02ABF 		b	.L381
 8189              	.L351:
1272:..\src/command_processing.c ****             
1273:..\src/command_processing.c ****         case 5:         //Input mode
1274:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 8190              		.loc 1 1274 0
 8191 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8192 05b6 5B4B     		ldr	r3, .L446+16
 8193 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8194 05ba 5649     		ldr	r1, .L446
 8195 05bc 1346     		mov	r3, r2
 8196 05be DB00     		lsls	r3, r3, #3
 8197 05c0 9B1A     		subs	r3, r3, r2
 8198 05c2 1B01     		lsls	r3, r3, #4
 8199 05c4 0B44     		add	r3, r3, r1
 8200 05c6 03F58773 		add	r3, r3, #270
 8201 05ca 0246     		mov	r2, r0
 8202 05cc 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             
1276:..\src/command_processing.c ****             // Hold the actual position
1277:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 8203              		.loc 1 1277 0
 8204 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 196


 8205 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8206 05d2 5048     		ldr	r0, .L446
 8207 05d4 1346     		mov	r3, r2
 8208 05d6 DB00     		lsls	r3, r3, #3
 8209 05d8 9B1A     		subs	r3, r3, r2
 8210 05da 1B01     		lsls	r3, r3, #4
 8211 05dc 0344     		add	r3, r3, r0
 8212 05de 03F58873 		add	r3, r3, #272
 8213 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8214 05e4 1846     		mov	r0, r3
 8215 05e6 504A     		ldr	r2, .L446+20
 8216 05e8 3423     		movs	r3, #52
 8217 05ea 03FB00F3 		mul	r3, r3, r0
 8218 05ee 1344     		add	r3, r3, r2
 8219 05f0 1A68     		ldr	r2, [r3]
 8220 05f2 4E48     		ldr	r0, .L446+24
 8221 05f4 0B01     		lsls	r3, r1, #4
 8222 05f6 0344     		add	r3, r3, r0
 8223 05f8 1A60     		str	r2, [r3]
1278:..\src/command_processing.c ****             break;   
 8224              		.loc 1 1278 0
 8225 05fa 00F005BF 		b	.L381
 8226              	.L352:
1279:..\src/command_processing.c **** 
1280:..\src/command_processing.c ****         case 8:         //Measurement Offset
1281:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 8227              		.loc 1 1281 0
 8228 05fe 0023     		movs	r3, #0
 8229 0600 FB75     		strb	r3, [r7, #23]
 8230 0602 7EE0     		b	.L396
 8231              	.L397:
1282:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8232              		.loc 1 1282 0 discriminator 3
 8233 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8234 0606 4349     		ldr	r1, .L446
 8235 0608 1346     		mov	r3, r2
 8236 060a DB00     		lsls	r3, r3, #3
 8237 060c 9B1A     		subs	r3, r3, r2
 8238 060e 1B01     		lsls	r3, r3, #4
 8239 0610 0B44     		add	r3, r3, r1
 8240 0612 03F58873 		add	r3, r3, #272
 8241 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8242 0618 1C46     		mov	r4, r3
 8243 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8244 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8245 061e 5B00     		lsls	r3, r3, #1
 8246 0620 0333     		adds	r3, r3, #3
 8247 0622 4049     		ldr	r1, .L446+16
 8248 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8249 0626 1B02     		lsls	r3, r3, #8
 8250 0628 19B2     		sxth	r1, r3
 8251 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8252 062c 0233     		adds	r3, r3, #2
 8253 062e 5B00     		lsls	r3, r3, #1
 8254 0630 3C48     		ldr	r0, .L446+16
 8255 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 8256 0634 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 197


 8257 0636 0B43     		orrs	r3, r3, r1
 8258 0638 1BB2     		sxth	r3, r3
 8259 063a 1846     		mov	r0, r3
 8260 063c 3549     		ldr	r1, .L446
 8261 063e 2346     		mov	r3, r4
 8262 0640 5B00     		lsls	r3, r3, #1
 8263 0642 2344     		add	r3, r3, r4
 8264 0644 9B00     		lsls	r3, r3, #2
 8265 0646 1344     		add	r3, r3, r2
 8266 0648 6633     		adds	r3, r3, #102
 8267 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1283:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 8268              		.loc 1 1283 0 discriminator 3
 8269 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8270 0650 3049     		ldr	r1, .L446
 8271 0652 1346     		mov	r3, r2
 8272 0654 DB00     		lsls	r3, r3, #3
 8273 0656 9B1A     		subs	r3, r3, r2
 8274 0658 1B01     		lsls	r3, r3, #4
 8275 065a 0B44     		add	r3, r3, r1
 8276 065c 03F58873 		add	r3, r3, #272
 8277 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8278 0662 1D46     		mov	r5, r3
 8279 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 8280 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8281 0668 2A48     		ldr	r0, .L446
 8282 066a 1346     		mov	r3, r2
 8283 066c DB00     		lsls	r3, r3, #3
 8284 066e 9B1A     		subs	r3, r3, r2
 8285 0670 1B01     		lsls	r3, r3, #4
 8286 0672 0344     		add	r3, r3, r0
 8287 0674 03F58873 		add	r3, r3, #272
 8288 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8289 067a 1C46     		mov	r4, r3
 8290 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8291 067e 2548     		ldr	r0, .L446
 8292 0680 2346     		mov	r3, r4
 8293 0682 5B00     		lsls	r3, r3, #1
 8294 0684 2344     		add	r3, r3, r4
 8295 0686 9B00     		lsls	r3, r3, #2
 8296 0688 1344     		add	r3, r3, r2
 8297 068a 6633     		adds	r3, r3, #102
 8298 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 8299 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8300 0692 204C     		ldr	r4, .L446
 8301 0694 1346     		mov	r3, r2
 8302 0696 DB00     		lsls	r3, r3, #3
 8303 0698 9B1A     		subs	r3, r3, r2
 8304 069a 1B01     		lsls	r3, r3, #4
 8305 069c 2344     		add	r3, r3, r4
 8306 069e 03F58873 		add	r3, r3, #272
 8307 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8308 06a4 1E46     		mov	r6, r3
 8309 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8310 06a8 1A4C     		ldr	r4, .L446
 8311 06aa 3346     		mov	r3, r6
 8312 06ac 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 198


 8313 06ae 3344     		add	r3, r3, r6
 8314 06b0 1B01     		lsls	r3, r3, #4
 8315 06b2 2344     		add	r3, r3, r4
 8316 06b4 1344     		add	r3, r3, r2
 8317 06b6 03F29513 		addw	r3, r3, #405
 8318 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8319 06bc 00FA03F2 		lsl	r2, r0, r3
 8320 06c0 1448     		ldr	r0, .L446
 8321 06c2 2B46     		mov	r3, r5
 8322 06c4 5B00     		lsls	r3, r3, #1
 8323 06c6 2B44     		add	r3, r3, r5
 8324 06c8 9B00     		lsls	r3, r3, #2
 8325 06ca 0B44     		add	r3, r3, r1
 8326 06cc 6633     		adds	r3, r3, #102
 8327 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 8328              		.loc 1 1285 0 discriminator 3
 8329 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8330 06d4 0F49     		ldr	r1, .L446
 8331 06d6 1346     		mov	r3, r2
 8332 06d8 DB00     		lsls	r3, r3, #3
 8333 06da 9B1A     		subs	r3, r3, r2
 8334 06dc 1B01     		lsls	r3, r3, #4
 8335 06de 0B44     		add	r3, r3, r1
 8336 06e0 03F58873 		add	r3, r3, #272
 8337 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8338 06e6 1846     		mov	r0, r3
 8339 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8340 06ea 0F49     		ldr	r1, .L446+20
 8341 06ec 3422     		movs	r2, #52
 8342 06ee 02FB00F2 		mul	r2, r2, r0
 8343 06f2 0A44     		add	r2, r2, r1
 8344 06f4 1344     		add	r3, r3, r2
 8345 06f6 1833     		adds	r3, r3, #24
 8346 06f8 0022     		movs	r2, #0
 8347 06fa 1A70     		strb	r2, [r3]
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8348              		.loc 1 1281 0 discriminator 3
 8349 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8350 06fe 0133     		adds	r3, r3, #1
 8351 0700 FB75     		strb	r3, [r7, #23]
 8352              	.L396:
1281:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8353              		.loc 1 1281 0 is_stmt 0 discriminator 1
 8354 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8355 0704 022B     		cmp	r3, #2
 8356 0706 7FF67DAF 		bls	.L397
1286:..\src/command_processing.c ****             }
1287:..\src/command_processing.c ****             reset_last_value_flag = 1;
 8357              		.loc 1 1287 0 is_stmt 1
 8358 070a 094B     		ldr	r3, .L446+28
 8359 070c 0122     		movs	r2, #1
 8360 070e 1A70     		strb	r2, [r3]
1288:..\src/command_processing.c ****             break;
 8361              		.loc 1 1288 0
 8362 0710 00F07ABE 		b	.L381
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 199


 8363              	.L447:
 8364              		.align	2
 8365              	.L446:
 8366 0714 00000000 		.word	g_mem
 8367 0718 0B000000 		.word	g_rx+11
 8368 071c 03000000 		.word	g_rx+3
 8369 0720 07000000 		.word	g_rx+7
 8370 0724 00000000 		.word	g_rx
 8371 0728 00000000 		.word	g_meas
 8372 072c 00000000 		.word	g_refNew
 8373 0730 00000000 		.word	reset_last_value_flag
 8374              	.L353:
1289:..\src/command_processing.c ****     
1290:..\src/command_processing.c ****         case 11:        //Position limits
1291:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 8375              		.loc 1 1291 0
 8376 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8377 0736 C14B     		ldr	r3, .L448
 8378 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8379 073a 1906     		lsls	r1, r3, #24
 8380 073c BF4B     		ldr	r3, .L448
 8381 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8382 0740 1B04     		lsls	r3, r3, #16
 8383 0742 1943     		orrs	r1, r1, r3
 8384 0744 BD4B     		ldr	r3, .L448
 8385 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8386 0748 1B02     		lsls	r3, r3, #8
 8387 074a 0B43     		orrs	r3, r3, r1
 8388 074c BB49     		ldr	r1, .L448
 8389 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 8390 0750 1943     		orrs	r1, r1, r3
 8391 0752 BB48     		ldr	r0, .L448+4
 8392 0754 1346     		mov	r3, r2
 8393 0756 DB00     		lsls	r3, r3, #3
 8394 0758 9B1A     		subs	r3, r3, r2
 8395 075a 1B01     		lsls	r3, r3, #4
 8396 075c 0344     		add	r3, r3, r0
 8397 075e E433     		adds	r3, r3, #228
 8398 0760 1960     		str	r1, [r3]
1292:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 8399              		.loc 1 1292 0
 8400 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8401 0764 B54B     		ldr	r3, .L448
 8402 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 8403 0768 1906     		lsls	r1, r3, #24
 8404 076a B44B     		ldr	r3, .L448
 8405 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 8406 076e 1B04     		lsls	r3, r3, #16
 8407 0770 1943     		orrs	r1, r1, r3
 8408 0772 B24B     		ldr	r3, .L448
 8409 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 8410 0776 1B02     		lsls	r3, r3, #8
 8411 0778 0B43     		orrs	r3, r3, r1
 8412 077a B049     		ldr	r1, .L448
 8413 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 8414 077e 1943     		orrs	r1, r1, r3
 8415 0780 AF48     		ldr	r0, .L448+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 200


 8416 0782 1346     		mov	r3, r2
 8417 0784 DB00     		lsls	r3, r3, #3
 8418 0786 9B1A     		subs	r3, r3, r2
 8419 0788 1B01     		lsls	r3, r3, #4
 8420 078a 0344     		add	r3, r3, r0
 8421 078c E833     		adds	r3, r3, #232
 8422 078e 1960     		str	r1, [r3]
1293:..\src/command_processing.c **** 
1294:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 8423              		.loc 1 1294 0
 8424 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8425 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8426 0794 AA48     		ldr	r0, .L448+4
 8427 0796 0B46     		mov	r3, r1
 8428 0798 DB00     		lsls	r3, r3, #3
 8429 079a 5B1A     		subs	r3, r3, r1
 8430 079c 1B01     		lsls	r3, r3, #4
 8431 079e 0344     		add	r3, r3, r0
 8432 07a0 E433     		adds	r3, r3, #228
 8433 07a2 1868     		ldr	r0, [r3]
 8434 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8435 07a6 A64C     		ldr	r4, .L448+4
 8436 07a8 0B46     		mov	r3, r1
 8437 07aa DB00     		lsls	r3, r3, #3
 8438 07ac 5B1A     		subs	r3, r3, r1
 8439 07ae 1B01     		lsls	r3, r3, #4
 8440 07b0 2344     		add	r3, r3, r4
 8441 07b2 03F58873 		add	r3, r3, #272
 8442 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8443 07b8 1C46     		mov	r4, r3
 8444 07ba A149     		ldr	r1, .L448+4
 8445 07bc 2346     		mov	r3, r4
 8446 07be 5B00     		lsls	r3, r3, #1
 8447 07c0 2344     		add	r3, r3, r4
 8448 07c2 1B01     		lsls	r3, r3, #4
 8449 07c4 0B44     		add	r3, r3, r1
 8450 07c6 03F29513 		addw	r3, r3, #405
 8451 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8452 07cc 00FA03F1 		lsl	r1, r0, r3
 8453 07d0 9B48     		ldr	r0, .L448+4
 8454 07d2 1346     		mov	r3, r2
 8455 07d4 DB00     		lsls	r3, r3, #3
 8456 07d6 9B1A     		subs	r3, r3, r2
 8457 07d8 1B01     		lsls	r3, r3, #4
 8458 07da 0344     		add	r3, r3, r0
 8459 07dc E433     		adds	r3, r3, #228
 8460 07de 1960     		str	r1, [r3]
1295:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 8461              		.loc 1 1295 0
 8462 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8463 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8464 07e4 9648     		ldr	r0, .L448+4
 8465 07e6 0B46     		mov	r3, r1
 8466 07e8 DB00     		lsls	r3, r3, #3
 8467 07ea 5B1A     		subs	r3, r3, r1
 8468 07ec 1B01     		lsls	r3, r3, #4
 8469 07ee 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 201


 8470 07f0 E833     		adds	r3, r3, #232
 8471 07f2 1868     		ldr	r0, [r3]
 8472 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8473 07f6 924C     		ldr	r4, .L448+4
 8474 07f8 0B46     		mov	r3, r1
 8475 07fa DB00     		lsls	r3, r3, #3
 8476 07fc 5B1A     		subs	r3, r3, r1
 8477 07fe 1B01     		lsls	r3, r3, #4
 8478 0800 2344     		add	r3, r3, r4
 8479 0802 03F58873 		add	r3, r3, #272
 8480 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8481 0808 1C46     		mov	r4, r3
 8482 080a 8D49     		ldr	r1, .L448+4
 8483 080c 2346     		mov	r3, r4
 8484 080e 5B00     		lsls	r3, r3, #1
 8485 0810 2344     		add	r3, r3, r4
 8486 0812 1B01     		lsls	r3, r3, #4
 8487 0814 0B44     		add	r3, r3, r1
 8488 0816 03F29513 		addw	r3, r3, #405
 8489 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8490 081c 00FA03F1 		lsl	r1, r0, r3
 8491 0820 8748     		ldr	r0, .L448+4
 8492 0822 1346     		mov	r3, r2
 8493 0824 DB00     		lsls	r3, r3, #3
 8494 0826 9B1A     		subs	r3, r3, r2
 8495 0828 1B01     		lsls	r3, r3, #4
 8496 082a 0344     		add	r3, r3, r0
 8497 082c E833     		adds	r3, r3, #232
 8498 082e 1960     		str	r1, [r3]
1296:..\src/command_processing.c ****             break;            
 8499              		.loc 1 1296 0
 8500 0830 00F0EABD 		b	.L381
 8501              	.L354:
1297:..\src/command_processing.c **** 
1298:..\src/command_processing.c ****         case 23:        //Rest Position
1299:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 8502              		.loc 1 1299 0
 8503 0834 814B     		ldr	r3, .L448
 8504 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8505 0838 1A06     		lsls	r2, r3, #24
 8506 083a 804B     		ldr	r3, .L448
 8507 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8508 083e 1B04     		lsls	r3, r3, #16
 8509 0840 1A43     		orrs	r2, r2, r3
 8510 0842 7E4B     		ldr	r3, .L448
 8511 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8512 0846 1B02     		lsls	r3, r3, #8
 8513 0848 1343     		orrs	r3, r3, r2
 8514 084a 7C4A     		ldr	r2, .L448
 8515 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8516 084e 1343     		orrs	r3, r3, r2
 8517 0850 7B4A     		ldr	r2, .L448+4
 8518 0852 C2F8A032 		str	r3, [r2, #672]
1300:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 8519              		.loc 1 1300 0
 8520 0856 7A4B     		ldr	r3, .L448+4
 8521 0858 D3F8A012 		ldr	r1, [r3, #672]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 202


 8522 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8523 085e 7848     		ldr	r0, .L448+4
 8524 0860 1346     		mov	r3, r2
 8525 0862 DB00     		lsls	r3, r3, #3
 8526 0864 9B1A     		subs	r3, r3, r2
 8527 0866 1B01     		lsls	r3, r3, #4
 8528 0868 0344     		add	r3, r3, r0
 8529 086a 03F58873 		add	r3, r3, #272
 8530 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8531 0870 1846     		mov	r0, r3
 8532 0872 734A     		ldr	r2, .L448+4
 8533 0874 0346     		mov	r3, r0
 8534 0876 5B00     		lsls	r3, r3, #1
 8535 0878 0344     		add	r3, r3, r0
 8536 087a 1B01     		lsls	r3, r3, #4
 8537 087c 1344     		add	r3, r3, r2
 8538 087e 03F29513 		addw	r3, r3, #405
 8539 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8540 0884 01FA03F3 		lsl	r3, r1, r3
 8541 0888 6D4A     		ldr	r2, .L448+4
 8542 088a C2F8A032 		str	r3, [r2, #672]
1301:..\src/command_processing.c ****             break; 
 8543              		.loc 1 1301 0
 8544 088e 00F0BBBD 		b	.L381
 8545              	.L355:
1302:..\src/command_processing.c ****             
1303:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1304:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 8546              		.loc 1 1304 0
 8547 0892 6A4B     		ldr	r3, .L448
 8548 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8549 0896 1A06     		lsls	r2, r3, #24
 8550 0898 684B     		ldr	r3, .L448
 8551 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8552 089c 1B04     		lsls	r3, r3, #16
 8553 089e 1A43     		orrs	r2, r2, r3
 8554 08a0 664B     		ldr	r3, .L448
 8555 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8556 08a4 1B02     		lsls	r3, r3, #8
 8557 08a6 1343     		orrs	r3, r3, r2
 8558 08a8 644A     		ldr	r2, .L448
 8559 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8560 08ac 1343     		orrs	r3, r3, r2
 8561 08ae 644A     		ldr	r2, .L448+4
 8562 08b0 C2F8A432 		str	r3, [r2, #676]
1305:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 8563              		.loc 1 1305 0
 8564 08b4 624B     		ldr	r3, .L448+4
 8565 08b6 D3F8A432 		ldr	r3, [r3, #676]
 8566 08ba 092B     		cmp	r3, #9
 8567 08bc 00F39B85 		bgt	.L439
 8568              		.loc 1 1305 0 is_stmt 0 discriminator 1
 8569 08c0 5F4B     		ldr	r3, .L448+4
 8570 08c2 0A22     		movs	r2, #10
 8571 08c4 C3F8A422 		str	r2, [r3, #676]
1306:..\src/command_processing.c ****            break; 
 8572              		.loc 1 1306 0 is_stmt 1 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 203


 8573 08c8 00F095BD 		b	.L439
 8574              	.L356:
1307:..\src/command_processing.c ****             
1308:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1309:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8575              		.loc 1 1309 0
 8576 08cc 5B4B     		ldr	r3, .L448
 8577 08ce DB78     		ldrb	r3, [r3, #3]
 8578 08d0 BB74     		strb	r3, [r7, #18]
1310:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 8579              		.loc 1 1310 0
 8580 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8581 08d4 002B     		cmp	r3, #0
 8582 08d6 04D0     		beq	.L399
1311:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 8583              		.loc 1 1311 0
 8584 08d8 594B     		ldr	r3, .L448+4
 8585 08da 0122     		movs	r2, #1
 8586 08dc 83F8A720 		strb	r2, [r3, #167]
 8587 08e0 03E0     		b	.L400
 8588              	.L399:
1312:..\src/command_processing.c ****             } else {            // 0
1313:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 8589              		.loc 1 1313 0
 8590 08e2 574B     		ldr	r3, .L448+4
 8591 08e4 0022     		movs	r2, #0
 8592 08e6 83F8A720 		strb	r2, [r3, #167]
 8593              	.L400:
1314:..\src/command_processing.c ****             }
1315:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 8594              		.loc 1 1315 0
 8595 08ea 564B     		ldr	r3, .L448+8
 8596 08ec 0122     		movs	r2, #1
 8597 08ee 1A70     		strb	r2, [r3]
1316:..\src/command_processing.c **** 
1317:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 8598              		.loc 1 1317 0
 8599 08f0 534B     		ldr	r3, .L448+4
 8600 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8601 08f6 002B     		cmp	r3, #0
 8602 08f8 40F07F85 		bne	.L440
1318:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1319:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 8603              		.loc 1 1319 0
 8604 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8605 08fe 504B     		ldr	r3, .L448+4
 8606 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 8607 0904 4E49     		ldr	r1, .L448+4
 8608 0906 1346     		mov	r3, r2
 8609 0908 DB00     		lsls	r3, r3, #3
 8610 090a 9B1A     		subs	r3, r3, r2
 8611 090c 1B01     		lsls	r3, r3, #4
 8612 090e 0B44     		add	r3, r3, r1
 8613 0910 03F58873 		add	r3, r3, #272
 8614 0914 0246     		mov	r2, r0
 8615 0916 1A70     		strb	r2, [r3]
1320:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 204


1321:..\src/command_processing.c ****                 // Change also gears parameters
1322:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 8616              		.loc 1 1322 0
 8617 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8618 091a 4949     		ldr	r1, .L448+4
 8619 091c 1346     		mov	r3, r2
 8620 091e DB00     		lsls	r3, r3, #3
 8621 0920 9B1A     		subs	r3, r3, r2
 8622 0922 1B01     		lsls	r3, r3, #4
 8623 0924 0B44     		add	r3, r3, r1
 8624 0926 03F58873 		add	r3, r3, #272
 8625 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8626 092c 1946     		mov	r1, r3
 8627 092e 444A     		ldr	r2, .L448+4
 8628 0930 0B46     		mov	r3, r1
 8629 0932 5B00     		lsls	r3, r3, #1
 8630 0934 0B44     		add	r3, r3, r1
 8631 0936 1B01     		lsls	r3, r3, #4
 8632 0938 1344     		add	r3, r3, r2
 8633 093a 03F5D873 		add	r3, r3, #432
 8634 093e 0122     		movs	r2, #1
 8635 0940 1A70     		strb	r2, [r3]
1323:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 8636              		.loc 1 1323 0
 8637 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8638 0944 3E49     		ldr	r1, .L448+4
 8639 0946 1346     		mov	r3, r2
 8640 0948 DB00     		lsls	r3, r3, #3
 8641 094a 9B1A     		subs	r3, r3, r2
 8642 094c 1B01     		lsls	r3, r3, #4
 8643 094e 0B44     		add	r3, r3, r1
 8644 0950 03F58873 		add	r3, r3, #272
 8645 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8646 0956 1946     		mov	r1, r3
 8647 0958 394A     		ldr	r2, .L448+4
 8648 095a 0B46     		mov	r3, r1
 8649 095c 5B00     		lsls	r3, r3, #1
 8650 095e 0B44     		add	r3, r3, r1
 8651 0960 1B01     		lsls	r3, r3, #4
 8652 0962 1344     		add	r3, r3, r2
 8653 0964 03F2B513 		addw	r3, r3, #437
 8654 0968 2322     		movs	r2, #35
 8655 096a 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 8656              		.loc 1 1324 0
 8657 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8658 096e 3449     		ldr	r1, .L448+4
 8659 0970 1346     		mov	r3, r2
 8660 0972 DB00     		lsls	r3, r3, #3
 8661 0974 9B1A     		subs	r3, r3, r2
 8662 0976 1B01     		lsls	r3, r3, #4
 8663 0978 0B44     		add	r3, r3, r1
 8664 097a 03F58873 		add	r3, r3, #272
 8665 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8666 0980 1946     		mov	r1, r3
 8667 0982 2F4A     		ldr	r2, .L448+4
 8668 0984 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 205


 8669 0986 5B00     		lsls	r3, r3, #1
 8670 0988 0B44     		add	r3, r3, r1
 8671 098a 1B01     		lsls	r3, r3, #4
 8672 098c 1344     		add	r3, r3, r2
 8673 098e 03F5DB73 		add	r3, r3, #438
 8674 0992 0322     		movs	r2, #3
 8675 0994 1A70     		strb	r2, [r3]
1325:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 8676              		.loc 1 1325 0
 8677 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8678 0998 2949     		ldr	r1, .L448+4
 8679 099a 1346     		mov	r3, r2
 8680 099c DB00     		lsls	r3, r3, #3
 8681 099e 9B1A     		subs	r3, r3, r2
 8682 09a0 1B01     		lsls	r3, r3, #4
 8683 09a2 0B44     		add	r3, r3, r1
 8684 09a4 03F58873 		add	r3, r3, #272
 8685 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8686 09aa 1946     		mov	r1, r3
 8687 09ac 244A     		ldr	r2, .L448+4
 8688 09ae 0B46     		mov	r3, r1
 8689 09b0 5B00     		lsls	r3, r3, #1
 8690 09b2 0B44     		add	r3, r3, r1
 8691 09b4 1B01     		lsls	r3, r3, #4
 8692 09b6 1344     		add	r3, r3, r2
 8693 09b8 03F2B713 		addw	r3, r3, #439
 8694 09bc FF22     		movs	r2, #255
 8695 09be 1A70     		strb	r2, [r3]
1326:..\src/command_processing.c ****                 
1327:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1328:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 8696              		.loc 1 1328 0
 8697 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8698 09c2 1F49     		ldr	r1, .L448+4
 8699 09c4 1346     		mov	r3, r2
 8700 09c6 DB00     		lsls	r3, r3, #3
 8701 09c8 9B1A     		subs	r3, r3, r2
 8702 09ca 1B01     		lsls	r3, r3, #4
 8703 09cc 0B44     		add	r3, r3, r1
 8704 09ce 03F21113 		addw	r3, r3, #273
 8705 09d2 0122     		movs	r2, #1
 8706 09d4 1A70     		strb	r2, [r3]
1329:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 8707              		.loc 1 1329 0
 8708 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8709 09d8 1949     		ldr	r1, .L448+4
 8710 09da 1346     		mov	r3, r2
 8711 09dc DB00     		lsls	r3, r3, #3
 8712 09de 9B1A     		subs	r3, r3, r2
 8713 09e0 1B01     		lsls	r3, r3, #4
 8714 09e2 0B44     		add	r3, r3, r1
 8715 09e4 03F58973 		add	r3, r3, #274
 8716 09e8 0122     		movs	r2, #1
 8717 09ea 1A70     		strb	r2, [r3]
1330:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 8718              		.loc 1 1330 0
 8719 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 206


 8720 09ee 1449     		ldr	r1, .L448+4
 8721 09f0 1346     		mov	r3, r2
 8722 09f2 DB00     		lsls	r3, r3, #3
 8723 09f4 9B1A     		subs	r3, r3, r2
 8724 09f6 1B01     		lsls	r3, r3, #4
 8725 09f8 0B44     		add	r3, r3, r1
 8726 09fa E433     		adds	r3, r3, #228
 8727 09fc 0022     		movs	r2, #0
 8728 09fe 1A60     		str	r2, [r3]
1331:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 8729              		.loc 1 1331 0
 8730 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8731 0a02 0F4B     		ldr	r3, .L448+4
 8732 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8733 0a08 1846     		mov	r0, r3
 8734 0a0a 0D49     		ldr	r1, .L448+4
 8735 0a0c 0346     		mov	r3, r0
 8736 0a0e 5B00     		lsls	r3, r3, #1
 8737 0a10 0344     		add	r3, r3, r0
 8738 0a12 1B01     		lsls	r3, r3, #4
 8739 0a14 0B44     		add	r3, r3, r1
 8740 0a16 03F29513 		addw	r3, r3, #405
 8741 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8742 0a1c 1946     		mov	r1, r3
 8743 0a1e 4FF47A53 		mov	r3, #16000
 8744 0a22 03FA01F1 		lsl	r1, r3, r1
 8745 0a26 0648     		ldr	r0, .L448+4
 8746 0a28 1346     		mov	r3, r2
 8747 0a2a DB00     		lsls	r3, r3, #3
 8748 0a2c 9B1A     		subs	r3, r3, r2
 8749 0a2e 1B01     		lsls	r3, r3, #4
 8750 0a30 0344     		add	r3, r3, r0
 8751 0a32 E833     		adds	r3, r3, #232
 8752 0a34 1960     		str	r1, [r3]
1332:..\src/command_processing.c ****             }    
1333:..\src/command_processing.c **** 
1334:..\src/command_processing.c ****             break; 
 8753              		.loc 1 1334 0
 8754 0a36 00F0E0BC 		b	.L440
 8755              	.L449:
 8756 0a3a 00BF     		.align	2
 8757              	.L448:
 8758 0a3c 00000000 		.word	g_rx
 8759 0a40 00000000 		.word	g_mem
 8760 0a44 00000000 		.word	reset_last_value_flag
 8761              	.L357:
1335:..\src/command_processing.c **** 
1336:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1337:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8762              		.loc 1 1337 0
 8763 0a48 A94B     		ldr	r3, .L450
 8764 0a4a DB78     		ldrb	r3, [r3, #3]
 8765 0a4c BB74     		strb	r3, [r7, #18]
1338:..\src/command_processing.c ****             if (aux_uchar) {
 8766              		.loc 1 1338 0
 8767 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8768 0a50 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 207


 8769 0a52 05D0     		beq	.L402
1339:..\src/command_processing.c ****                 reset_counters();
 8770              		.loc 1 1339 0
 8771 0a54 FFF7FEFF 		bl	reset_counters
1340:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 8772              		.loc 1 1340 0
 8773 0a58 A64B     		ldr	r3, .L450+4
 8774 0a5a 0022     		movs	r2, #0
 8775 0a5c 83F8A820 		strb	r2, [r3, #168]
 8776              	.L402:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8777              		.loc 1 1343 0
 8778 0a60 A54B     		ldr	r3, .L450+8
 8779 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8780 0a66 012B     		cmp	r3, #1
 8781 0a68 40F0C984 		bne	.L441
1344:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1345:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 8782              		.loc 1 1345 0
 8783 0a6c 8720     		movs	r0, #135
 8784 0a6e FFF7FEFF 		bl	DS1302_read
 8785 0a72 0346     		mov	r3, r0
 8786 0a74 BB74     		strb	r3, [r7, #18]
1346:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 8787              		.loc 1 1346 0
 8788 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8789 0a78 1B09     		lsrs	r3, r3, #4
 8790 0a7a DBB2     		uxtb	r3, r3
 8791 0a7c 1A46     		mov	r2, r3
 8792 0a7e 9200     		lsls	r2, r2, #2
 8793 0a80 1344     		add	r3, r3, r2
 8794 0a82 5B00     		lsls	r3, r3, #1
 8795 0a84 DAB2     		uxtb	r2, r3
 8796 0a86 BB7C     		ldrb	r3, [r7, #18]
 8797 0a88 03F00F03 		and	r3, r3, #15
 8798 0a8c DBB2     		uxtb	r3, r3
 8799 0a8e 1344     		add	r3, r3, r2
 8800 0a90 DAB2     		uxtb	r2, r3
 8801 0a92 984B     		ldr	r3, .L450+4
 8802 0a94 83F8A420 		strb	r2, [r3, #164]
1347:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 8803              		.loc 1 1347 0
 8804 0a98 8920     		movs	r0, #137
 8805 0a9a FFF7FEFF 		bl	DS1302_read
 8806 0a9e 0346     		mov	r3, r0
 8807 0aa0 BB74     		strb	r3, [r7, #18]
1348:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 8808              		.loc 1 1348 0
 8809 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8810 0aa4 1B09     		lsrs	r3, r3, #4
 8811 0aa6 DBB2     		uxtb	r3, r3
 8812 0aa8 1A46     		mov	r2, r3
 8813 0aaa 9200     		lsls	r2, r2, #2
 8814 0aac 1344     		add	r3, r3, r2
 8815 0aae 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 208


 8816 0ab0 DAB2     		uxtb	r2, r3
 8817 0ab2 BB7C     		ldrb	r3, [r7, #18]
 8818 0ab4 03F00F03 		and	r3, r3, #15
 8819 0ab8 DBB2     		uxtb	r3, r3
 8820 0aba 1344     		add	r3, r3, r2
 8821 0abc DAB2     		uxtb	r2, r3
 8822 0abe 8D4B     		ldr	r3, .L450+4
 8823 0ac0 83F8A520 		strb	r2, [r3, #165]
1349:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 8824              		.loc 1 1349 0
 8825 0ac4 8D20     		movs	r0, #141
 8826 0ac6 FFF7FEFF 		bl	DS1302_read
 8827 0aca 0346     		mov	r3, r0
 8828 0acc BB74     		strb	r3, [r7, #18]
1350:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 8829              		.loc 1 1350 0
 8830 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8831 0ad0 1B09     		lsrs	r3, r3, #4
 8832 0ad2 DBB2     		uxtb	r3, r3
 8833 0ad4 1A46     		mov	r2, r3
 8834 0ad6 9200     		lsls	r2, r2, #2
 8835 0ad8 1344     		add	r3, r3, r2
 8836 0ada 5B00     		lsls	r3, r3, #1
 8837 0adc DAB2     		uxtb	r2, r3
 8838 0ade BB7C     		ldrb	r3, [r7, #18]
 8839 0ae0 03F00F03 		and	r3, r3, #15
 8840 0ae4 DBB2     		uxtb	r3, r3
 8841 0ae6 1344     		add	r3, r3, r2
 8842 0ae8 DAB2     		uxtb	r2, r3
 8843 0aea 824B     		ldr	r3, .L450+4
 8844 0aec 83F8A620 		strb	r2, [r3, #166]
1351:..\src/command_processing.c ****             }
1352:..\src/command_processing.c ****             break;             
 8845              		.loc 1 1352 0
 8846 0af0 00F085BC 		b	.L441
 8847              	.L358:
 8848              	.LBB15:
1353:..\src/command_processing.c ****             
1354:..\src/command_processing.c ****         case 32:         //Current Time
1355:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 8849              		.loc 1 1355 0
 8850 0af4 0023     		movs	r3, #0
 8851 0af6 7B75     		strb	r3, [r7, #21]
 8852 0af8 0CE0     		b	.L404
 8853              	.L405:
1356:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8854              		.loc 1 1356 0 discriminator 3
 8855 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8856 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 8857 0afe 0332     		adds	r2, r2, #3
 8858 0b00 7B49     		ldr	r1, .L450
 8859 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8860 0b04 7B4A     		ldr	r2, .L450+4
 8861 0b06 1344     		add	r3, r3, r2
 8862 0b08 0A46     		mov	r2, r1
 8863 0b0a 83F82022 		strb	r2, [r3, #544]
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 209


 8864              		.loc 1 1355 0 discriminator 3
 8865 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8866 0b10 0133     		adds	r3, r3, #1
 8867 0b12 7B75     		strb	r3, [r7, #21]
 8868              	.L404:
1355:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8869              		.loc 1 1355 0 is_stmt 0 discriminator 1
 8870 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8871 0b16 052B     		cmp	r3, #5
 8872 0b18 EFD9     		bls	.L405
 8873              	.LBE15:
1357:..\src/command_processing.c ****             }
1358:..\src/command_processing.c ****             
1359:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8874              		.loc 1 1359 0 is_stmt 1
 8875 0b1a 764B     		ldr	r3, .L450+4
 8876 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8877 0b20 012B     		cmp	r3, #1
 8878 0b22 40F06E84 		bne	.L442
1360:..\src/command_processing.c ****                 set_RTC_time();
 8879              		.loc 1 1360 0
 8880 0b26 FFF7FEFF 		bl	set_RTC_time
1361:..\src/command_processing.c ****             }
1362:..\src/command_processing.c ****             break;
 8881              		.loc 1 1362 0
 8882 0b2a 00F06ABC 		b	.L442
 8883              	.L359:
1363:..\src/command_processing.c ****            
1364:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1365:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 8884              		.loc 1 1365 0
 8885 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8886 0b30 6F4B     		ldr	r3, .L450
 8887 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8888 0b34 6F49     		ldr	r1, .L450+4
 8889 0b36 1346     		mov	r3, r2
 8890 0b38 DB00     		lsls	r3, r3, #3
 8891 0b3a 9B1A     		subs	r3, r3, r2
 8892 0b3c 1B01     		lsls	r3, r3, #4
 8893 0b3e 0B44     		add	r3, r3, r1
 8894 0b40 E233     		adds	r3, r3, #226
 8895 0b42 0246     		mov	r2, r0
 8896 0b44 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 8897              		.loc 1 1366 0
 8898 0b46 6B4B     		ldr	r3, .L450+4
 8899 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 8900 0b4c 5B00     		lsls	r3, r3, #1
 8901 0b4e 5AB2     		sxtb	r2, r3
 8902 0b50 684B     		ldr	r3, .L450+4
 8903 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 8904 0b56 5BB2     		sxtb	r3, r3
 8905 0b58 1343     		orrs	r3, r3, r2
 8906 0b5a 5BB2     		sxtb	r3, r3
 8907 0b5c DBB2     		uxtb	r3, r3
 8908 0b5e 1846     		mov	r0, r3
 8909 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 210


1367:..\src/command_processing.c ****             break;
 8910              		.loc 1 1367 0
 8911 0b64 00F050BC 		b	.L381
 8912              	.L360:
1368:..\src/command_processing.c ****             
1369:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1370:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8913              		.loc 1 1370 0
 8914 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 8915 0b6a 6349     		ldr	r1, .L450+8
 8916 0b6c 1346     		mov	r3, r2
 8917 0b6e DB00     		lsls	r3, r3, #3
 8918 0b70 9B1A     		subs	r3, r3, r2
 8919 0b72 1B01     		lsls	r3, r3, #4
 8920 0b74 0B44     		add	r3, r3, r1
 8921 0b76 03F20F13 		addw	r3, r3, #271
 8922 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8923 0b7c 032B     		cmp	r3, #3
 8924 0b7e 00F08580 		beq	.L407
1371:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8925              		.loc 1 1371 0
 8926 0b82 5E4B     		ldr	r3, .L450+12
 8927 0b84 1B68     		ldr	r3, [r3]	@ float
 8928 0b86 FB60     		str	r3, [r7, #12]	@ float
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8929              		.loc 1 1372 0
 8930 0b88 0023     		movs	r3, #0
 8931 0b8a BB75     		strb	r3, [r7, #22]
 8932 0b8c 0EE0     		b	.L408
 8933              	.L409:
1373:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8934              		.loc 1 1373 0 discriminator 3
 8935 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8936 0b90 C3F10303 		rsb	r3, r3, #3
 8937 0b94 07F10802 		add	r2, r7, #8
 8938 0b98 1344     		add	r3, r3, r2
 8939 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8940 0b9c 07F10C01 		add	r1, r7, #12
 8941 0ba0 0A44     		add	r2, r2, r1
 8942 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8943 0ba4 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8944              		.loc 1 1372 0 discriminator 3
 8945 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8946 0ba8 0133     		adds	r3, r3, #1
 8947 0baa BB75     		strb	r3, [r7, #22]
 8948              	.L408:
1372:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8949              		.loc 1 1372 0 is_stmt 0 discriminator 1
 8950 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8951 0bae 032B     		cmp	r3, #3
 8952 0bb0 EDD9     		bls	.L409
1374:..\src/command_processing.c ****                 }
1375:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 8953              		.loc 1 1375 0 is_stmt 1
 8954 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8955 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 211


 8956 0bb6 4FF08F41 		mov	r1, #1199570944
 8957 0bba 1846     		mov	r0, r3
 8958 0bbc FFF7FEFF 		bl	__aeabi_fmul
 8959 0bc0 0346     		mov	r3, r0
 8960 0bc2 1846     		mov	r0, r3
 8961 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 8962 0bc8 0146     		mov	r1, r0
 8963 0bca 4A4A     		ldr	r2, .L450+4
 8964 0bcc 2346     		mov	r3, r4
 8965 0bce DB00     		lsls	r3, r3, #3
 8966 0bd0 1B1B     		subs	r3, r3, r4
 8967 0bd2 1B01     		lsls	r3, r3, #4
 8968 0bd4 1344     		add	r3, r3, r2
 8969 0bd6 B033     		adds	r3, r3, #176
 8970 0bd8 1960     		str	r1, [r3]
1376:..\src/command_processing.c ****                 
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8971              		.loc 1 1377 0
 8972 0bda 494B     		ldr	r3, .L450+16
 8973 0bdc 1B68     		ldr	r3, [r3]	@ float
 8974 0bde FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8975              		.loc 1 1378 0
 8976 0be0 0023     		movs	r3, #0
 8977 0be2 BB75     		strb	r3, [r7, #22]
 8978 0be4 0EE0     		b	.L410
 8979              	.L411:
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8980              		.loc 1 1379 0 discriminator 3
 8981 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8982 0be8 C3F10303 		rsb	r3, r3, #3
 8983 0bec 07F10802 		add	r2, r7, #8
 8984 0bf0 1344     		add	r3, r3, r2
 8985 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8986 0bf4 07F10C01 		add	r1, r7, #12
 8987 0bf8 0A44     		add	r2, r2, r1
 8988 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8989 0bfc 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8990              		.loc 1 1378 0 discriminator 3
 8991 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8992 0c00 0133     		adds	r3, r3, #1
 8993 0c02 BB75     		strb	r3, [r7, #22]
 8994              	.L410:
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8995              		.loc 1 1378 0 is_stmt 0 discriminator 1
 8996 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8997 0c06 032B     		cmp	r3, #3
 8998 0c08 EDD9     		bls	.L411
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 8999              		.loc 1 1381 0 is_stmt 1
 9000 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9001 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 9002 0c0e 4FF08F41 		mov	r1, #1199570944
 9003 0c12 1846     		mov	r0, r3
 9004 0c14 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 212


 9005 0c18 0346     		mov	r3, r0
 9006 0c1a 1846     		mov	r0, r3
 9007 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 9008 0c20 0146     		mov	r1, r0
 9009 0c22 344A     		ldr	r2, .L450+4
 9010 0c24 2346     		mov	r3, r4
 9011 0c26 DB00     		lsls	r3, r3, #3
 9012 0c28 1B1B     		subs	r3, r3, r4
 9013 0c2a 1B01     		lsls	r3, r3, #4
 9014 0c2c 1344     		add	r3, r3, r2
 9015 0c2e B433     		adds	r3, r3, #180
 9016 0c30 1960     		str	r1, [r3]
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9017              		.loc 1 1383 0
 9018 0c32 344B     		ldr	r3, .L450+20
 9019 0c34 1B68     		ldr	r3, [r3]	@ float
 9020 0c36 FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9021              		.loc 1 1384 0
 9022 0c38 0023     		movs	r3, #0
 9023 0c3a BB75     		strb	r3, [r7, #22]
 9024 0c3c 0EE0     		b	.L412
 9025              	.L413:
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9026              		.loc 1 1385 0 discriminator 3
 9027 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9028 0c40 C3F10303 		rsb	r3, r3, #3
 9029 0c44 07F10802 		add	r2, r7, #8
 9030 0c48 1344     		add	r3, r3, r2
 9031 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9032 0c4c 07F10C01 		add	r1, r7, #12
 9033 0c50 0A44     		add	r2, r2, r1
 9034 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9035 0c54 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9036              		.loc 1 1384 0 discriminator 3
 9037 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9038 0c58 0133     		adds	r3, r3, #1
 9039 0c5a BB75     		strb	r3, [r7, #22]
 9040              	.L412:
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9041              		.loc 1 1384 0 is_stmt 0 discriminator 1
 9042 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9043 0c5e 032B     		cmp	r3, #3
 9044 0c60 EDD9     		bls	.L413
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 9045              		.loc 1 1387 0 is_stmt 1
 9046 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9047 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 9048 0c66 4FF08F41 		mov	r1, #1199570944
 9049 0c6a 1846     		mov	r0, r3
 9050 0c6c FFF7FEFF 		bl	__aeabi_fmul
 9051 0c70 0346     		mov	r3, r0
 9052 0c72 1846     		mov	r0, r3
 9053 0c74 FFF7FEFF 		bl	__aeabi_f2iz
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 213


 9054 0c78 0146     		mov	r1, r0
 9055 0c7a 1E4A     		ldr	r2, .L450+4
 9056 0c7c 2346     		mov	r3, r4
 9057 0c7e DB00     		lsls	r3, r3, #3
 9058 0c80 1B1B     		subs	r3, r3, r4
 9059 0c82 1B01     		lsls	r3, r3, #4
 9060 0c84 1344     		add	r3, r3, r2
 9061 0c86 B833     		adds	r3, r3, #184
 9062 0c88 1960     		str	r1, [r3]
1388:..\src/command_processing.c ****             }
1389:..\src/command_processing.c ****             else {
1390:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1391:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1392:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1393:..\src/command_processing.c ****                 }
1394:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1395:..\src/command_processing.c ****                 
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1399:..\src/command_processing.c ****                 }
1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1407:..\src/command_processing.c ****             }
1408:..\src/command_processing.c ****             break;
 9063              		.loc 1 1408 0
 9064 0c8a BDE3     		b	.L381
 9065              	.L407:
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9066              		.loc 1 1390 0
 9067 0c8c 1B4B     		ldr	r3, .L450+12
 9068 0c8e 1B68     		ldr	r3, [r3]	@ float
 9069 0c90 FB60     		str	r3, [r7, #12]	@ float
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9070              		.loc 1 1391 0
 9071 0c92 0023     		movs	r3, #0
 9072 0c94 BB75     		strb	r3, [r7, #22]
 9073 0c96 0EE0     		b	.L415
 9074              	.L416:
1392:..\src/command_processing.c ****                 }
 9075              		.loc 1 1392 0 discriminator 3
 9076 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9077 0c9a C3F10303 		rsb	r3, r3, #3
 9078 0c9e 07F10802 		add	r2, r7, #8
 9079 0ca2 1344     		add	r3, r3, r2
 9080 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9081 0ca6 07F10C01 		add	r1, r7, #12
 9082 0caa 0A44     		add	r2, r2, r1
 9083 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9084 0cae 1A70     		strb	r2, [r3]
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9085              		.loc 1 1391 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 214


 9086 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9087 0cb2 0133     		adds	r3, r3, #1
 9088 0cb4 BB75     		strb	r3, [r7, #22]
 9089              	.L415:
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9090              		.loc 1 1391 0 is_stmt 0 discriminator 1
 9091 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9092 0cb8 032B     		cmp	r3, #3
 9093 0cba EDD9     		bls	.L416
1394:..\src/command_processing.c ****                 
 9094              		.loc 1 1394 0 is_stmt 1
 9095 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9096 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 9097 0cc0 4FF08F41 		mov	r1, #1199570944
 9098 0cc4 1846     		mov	r0, r3
 9099 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 9100 0cca 0346     		mov	r3, r0
 9101 0ccc 1846     		mov	r0, r3
 9102 0cce FFF7FEFF 		bl	__aeabi_f2iz
 9103 0cd2 0146     		mov	r1, r0
 9104 0cd4 074A     		ldr	r2, .L450+4
 9105 0cd6 2346     		mov	r3, r4
 9106 0cd8 DB00     		lsls	r3, r3, #3
 9107 0cda 1B1B     		subs	r3, r3, r4
 9108 0cdc 1B01     		lsls	r3, r3, #4
 9109 0cde 1344     		add	r3, r3, r2
 9110 0ce0 C833     		adds	r3, r3, #200
 9111 0ce2 1960     		str	r1, [r3]
1396:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9112              		.loc 1 1396 0
 9113 0ce4 064B     		ldr	r3, .L450+16
 9114 0ce6 1B68     		ldr	r3, [r3]	@ float
 9115 0ce8 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9116              		.loc 1 1397 0
 9117 0cea 0023     		movs	r3, #0
 9118 0cec BB75     		strb	r3, [r7, #22]
 9119 0cee 1AE0     		b	.L417
 9120              	.L451:
 9121              		.align	2
 9122              	.L450:
 9123 0cf0 00000000 		.word	g_rx
 9124 0cf4 00000000 		.word	g_mem
 9125 0cf8 00000000 		.word	c_mem
 9126 0cfc 03000000 		.word	g_rx+3
 9127 0d00 07000000 		.word	g_rx+7
 9128 0d04 0B000000 		.word	g_rx+11
 9129              	.L418:
1398:..\src/command_processing.c ****                 }
 9130              		.loc 1 1398 0 discriminator 3
 9131 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9132 0d0a C3F10303 		rsb	r3, r3, #3
 9133 0d0e 07F10802 		add	r2, r7, #8
 9134 0d12 1344     		add	r3, r3, r2
 9135 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9136 0d16 07F10C01 		add	r1, r7, #12
 9137 0d1a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 215


 9138 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9139 0d1e 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9140              		.loc 1 1397 0 discriminator 3
 9141 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9142 0d22 0133     		adds	r3, r3, #1
 9143 0d24 BB75     		strb	r3, [r7, #22]
 9144              	.L417:
1397:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9145              		.loc 1 1397 0 is_stmt 0 discriminator 1
 9146 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9147 0d28 032B     		cmp	r3, #3
 9148 0d2a EDD9     		bls	.L418
1400:..\src/command_processing.c ****                 
 9149              		.loc 1 1400 0 is_stmt 1
 9150 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9151 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 9152 0d30 4FF08F41 		mov	r1, #1199570944
 9153 0d34 1846     		mov	r0, r3
 9154 0d36 FFF7FEFF 		bl	__aeabi_fmul
 9155 0d3a 0346     		mov	r3, r0
 9156 0d3c 1846     		mov	r0, r3
 9157 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 9158 0d42 0146     		mov	r1, r0
 9159 0d44 B74A     		ldr	r2, .L452
 9160 0d46 2346     		mov	r3, r4
 9161 0d48 DB00     		lsls	r3, r3, #3
 9162 0d4a 1B1B     		subs	r3, r3, r4
 9163 0d4c 1B01     		lsls	r3, r3, #4
 9164 0d4e 1344     		add	r3, r3, r2
 9165 0d50 CC33     		adds	r3, r3, #204
 9166 0d52 1960     		str	r1, [r3]
1402:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9167              		.loc 1 1402 0
 9168 0d54 B44B     		ldr	r3, .L452+4
 9169 0d56 1B68     		ldr	r3, [r3]	@ float
 9170 0d58 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9171              		.loc 1 1403 0
 9172 0d5a 0023     		movs	r3, #0
 9173 0d5c BB75     		strb	r3, [r7, #22]
 9174 0d5e 0EE0     		b	.L419
 9175              	.L420:
1404:..\src/command_processing.c ****                 }
 9176              		.loc 1 1404 0 discriminator 3
 9177 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9178 0d62 C3F10303 		rsb	r3, r3, #3
 9179 0d66 07F10802 		add	r2, r7, #8
 9180 0d6a 1344     		add	r3, r3, r2
 9181 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9182 0d6e 07F10C01 		add	r1, r7, #12
 9183 0d72 0A44     		add	r2, r2, r1
 9184 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9185 0d76 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9186              		.loc 1 1403 0 discriminator 3
 9187 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 216


 9188 0d7a 0133     		adds	r3, r3, #1
 9189 0d7c BB75     		strb	r3, [r7, #22]
 9190              	.L419:
1403:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9191              		.loc 1 1403 0 is_stmt 0 discriminator 1
 9192 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9193 0d80 032B     		cmp	r3, #3
 9194 0d82 EDD9     		bls	.L420
1406:..\src/command_processing.c ****             }
 9195              		.loc 1 1406 0 is_stmt 1
 9196 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9197 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 9198 0d88 4FF08F41 		mov	r1, #1199570944
 9199 0d8c 1846     		mov	r0, r3
 9200 0d8e FFF7FEFF 		bl	__aeabi_fmul
 9201 0d92 0346     		mov	r3, r0
 9202 0d94 1846     		mov	r0, r3
 9203 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 9204 0d9a 0146     		mov	r1, r0
 9205 0d9c A14A     		ldr	r2, .L452
 9206 0d9e 2346     		mov	r3, r4
 9207 0da0 DB00     		lsls	r3, r3, #3
 9208 0da2 1B1B     		subs	r3, r3, r4
 9209 0da4 1B01     		lsls	r3, r3, #4
 9210 0da6 1344     		add	r3, r3, r2
 9211 0da8 D033     		adds	r3, r3, #208
 9212 0daa 1960     		str	r1, [r3]
 9213              		.loc 1 1408 0
 9214 0dac 2CE3     		b	.L381
 9215              	.L361:
1409:..\src/command_processing.c ****             
1410:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1411:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9216              		.loc 1 1411 0
 9217 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9218 0db0 9E49     		ldr	r1, .L452+8
 9219 0db2 1346     		mov	r3, r2
 9220 0db4 DB00     		lsls	r3, r3, #3
 9221 0db6 9B1A     		subs	r3, r3, r2
 9222 0db8 1B01     		lsls	r3, r3, #4
 9223 0dba 0B44     		add	r3, r3, r1
 9224 0dbc 03F20F13 		addw	r3, r3, #271
 9225 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9226 0dc2 032B     		cmp	r3, #3
 9227 0dc4 00F08580 		beq	.L421
1412:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9228              		.loc 1 1412 0
 9229 0dc8 994B     		ldr	r3, .L452+12
 9230 0dca 1B68     		ldr	r3, [r3]	@ float
 9231 0dcc FB60     		str	r3, [r7, #12]	@ float
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9232              		.loc 1 1413 0
 9233 0dce 0023     		movs	r3, #0
 9234 0dd0 BB75     		strb	r3, [r7, #22]
 9235 0dd2 0EE0     		b	.L422
 9236              	.L423:
1414:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 217


 9237              		.loc 1 1414 0 discriminator 3
 9238 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9239 0dd6 C3F10303 		rsb	r3, r3, #3
 9240 0dda 07F10802 		add	r2, r7, #8
 9241 0dde 1344     		add	r3, r3, r2
 9242 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9243 0de2 07F10C01 		add	r1, r7, #12
 9244 0de6 0A44     		add	r2, r2, r1
 9245 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9246 0dea 1A70     		strb	r2, [r3]
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9247              		.loc 1 1413 0 discriminator 3
 9248 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9249 0dee 0133     		adds	r3, r3, #1
 9250 0df0 BB75     		strb	r3, [r7, #22]
 9251              	.L422:
1413:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9252              		.loc 1 1413 0 is_stmt 0 discriminator 1
 9253 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9254 0df4 032B     		cmp	r3, #3
 9255 0df6 EDD9     		bls	.L423
1415:..\src/command_processing.c ****                 }
1416:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9256              		.loc 1 1416 0 is_stmt 1
 9257 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9258 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 9259 0dfc 4FF08F41 		mov	r1, #1199570944
 9260 0e00 1846     		mov	r0, r3
 9261 0e02 FFF7FEFF 		bl	__aeabi_fmul
 9262 0e06 0346     		mov	r3, r0
 9263 0e08 1846     		mov	r0, r3
 9264 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 9265 0e0e 0146     		mov	r1, r0
 9266 0e10 844A     		ldr	r2, .L452
 9267 0e12 2346     		mov	r3, r4
 9268 0e14 DB00     		lsls	r3, r3, #3
 9269 0e16 1B1B     		subs	r3, r3, r4
 9270 0e18 1B01     		lsls	r3, r3, #4
 9271 0e1a 1344     		add	r3, r3, r2
 9272 0e1c BC33     		adds	r3, r3, #188
 9273 0e1e 1960     		str	r1, [r3]
1417:..\src/command_processing.c ****                 
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9274              		.loc 1 1418 0
 9275 0e20 844B     		ldr	r3, .L452+16
 9276 0e22 1B68     		ldr	r3, [r3]	@ float
 9277 0e24 FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9278              		.loc 1 1419 0
 9279 0e26 0023     		movs	r3, #0
 9280 0e28 BB75     		strb	r3, [r7, #22]
 9281 0e2a 0EE0     		b	.L424
 9282              	.L425:
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9283              		.loc 1 1420 0 discriminator 3
 9284 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9285 0e2e C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 218


 9286 0e32 07F10802 		add	r2, r7, #8
 9287 0e36 1344     		add	r3, r3, r2
 9288 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9289 0e3a 07F10C01 		add	r1, r7, #12
 9290 0e3e 0A44     		add	r2, r2, r1
 9291 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9292 0e42 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9293              		.loc 1 1419 0 discriminator 3
 9294 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9295 0e46 0133     		adds	r3, r3, #1
 9296 0e48 BB75     		strb	r3, [r7, #22]
 9297              	.L424:
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9298              		.loc 1 1419 0 is_stmt 0 discriminator 1
 9299 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9300 0e4c 032B     		cmp	r3, #3
 9301 0e4e EDD9     		bls	.L425
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9302              		.loc 1 1422 0 is_stmt 1
 9303 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9304 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 9305 0e54 4FF08F41 		mov	r1, #1199570944
 9306 0e58 1846     		mov	r0, r3
 9307 0e5a FFF7FEFF 		bl	__aeabi_fmul
 9308 0e5e 0346     		mov	r3, r0
 9309 0e60 1846     		mov	r0, r3
 9310 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 9311 0e66 0146     		mov	r1, r0
 9312 0e68 6E4A     		ldr	r2, .L452
 9313 0e6a 2346     		mov	r3, r4
 9314 0e6c DB00     		lsls	r3, r3, #3
 9315 0e6e 1B1B     		subs	r3, r3, r4
 9316 0e70 1B01     		lsls	r3, r3, #4
 9317 0e72 1344     		add	r3, r3, r2
 9318 0e74 C033     		adds	r3, r3, #192
 9319 0e76 1960     		str	r1, [r3]
1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9320              		.loc 1 1424 0
 9321 0e78 6B4B     		ldr	r3, .L452+4
 9322 0e7a 1B68     		ldr	r3, [r3]	@ float
 9323 0e7c FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9324              		.loc 1 1425 0
 9325 0e7e 0023     		movs	r3, #0
 9326 0e80 BB75     		strb	r3, [r7, #22]
 9327 0e82 0EE0     		b	.L426
 9328              	.L427:
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9329              		.loc 1 1426 0 discriminator 3
 9330 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9331 0e86 C3F10303 		rsb	r3, r3, #3
 9332 0e8a 07F10802 		add	r2, r7, #8
 9333 0e8e 1344     		add	r3, r3, r2
 9334 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 219


 9335 0e92 07F10C01 		add	r1, r7, #12
 9336 0e96 0A44     		add	r2, r2, r1
 9337 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9338 0e9a 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9339              		.loc 1 1425 0 discriminator 3
 9340 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9341 0e9e 0133     		adds	r3, r3, #1
 9342 0ea0 BB75     		strb	r3, [r7, #22]
 9343              	.L426:
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9344              		.loc 1 1425 0 is_stmt 0 discriminator 1
 9345 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9346 0ea4 032B     		cmp	r3, #3
 9347 0ea6 EDD9     		bls	.L427
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9348              		.loc 1 1428 0 is_stmt 1
 9349 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9350 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 9351 0eac 4FF08F41 		mov	r1, #1199570944
 9352 0eb0 1846     		mov	r0, r3
 9353 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 9354 0eb6 0346     		mov	r3, r0
 9355 0eb8 1846     		mov	r0, r3
 9356 0eba FFF7FEFF 		bl	__aeabi_f2iz
 9357 0ebe 0146     		mov	r1, r0
 9358 0ec0 584A     		ldr	r2, .L452
 9359 0ec2 2346     		mov	r3, r4
 9360 0ec4 DB00     		lsls	r3, r3, #3
 9361 0ec6 1B1B     		subs	r3, r3, r4
 9362 0ec8 1B01     		lsls	r3, r3, #4
 9363 0eca 1344     		add	r3, r3, r2
 9364 0ecc C433     		adds	r3, r3, #196
 9365 0ece 1960     		str	r1, [r3]
1429:..\src/command_processing.c ****             }
1430:..\src/command_processing.c ****             else {
1431:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1432:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1433:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1434:..\src/command_processing.c ****                 }
1435:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1436:..\src/command_processing.c ****                 
1437:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1438:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1439:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1440:..\src/command_processing.c ****                 }
1441:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1442:..\src/command_processing.c ****                 
1443:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1444:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1445:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1446:..\src/command_processing.c ****                 }
1447:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1448:..\src/command_processing.c ****             }            
1449:..\src/command_processing.c ****             break;  
 9366              		.loc 1 1449 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 220


 9367 0ed0 9AE2     		b	.L381
 9368              	.L421:
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9369              		.loc 1 1431 0
 9370 0ed2 574B     		ldr	r3, .L452+12
 9371 0ed4 1B68     		ldr	r3, [r3]	@ float
 9372 0ed6 FB60     		str	r3, [r7, #12]	@ float
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9373              		.loc 1 1432 0
 9374 0ed8 0023     		movs	r3, #0
 9375 0eda BB75     		strb	r3, [r7, #22]
 9376 0edc 0EE0     		b	.L429
 9377              	.L430:
1433:..\src/command_processing.c ****                 }
 9378              		.loc 1 1433 0 discriminator 3
 9379 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9380 0ee0 C3F10303 		rsb	r3, r3, #3
 9381 0ee4 07F10802 		add	r2, r7, #8
 9382 0ee8 1344     		add	r3, r3, r2
 9383 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9384 0eec 07F10C01 		add	r1, r7, #12
 9385 0ef0 0A44     		add	r2, r2, r1
 9386 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9387 0ef4 1A70     		strb	r2, [r3]
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9388              		.loc 1 1432 0 discriminator 3
 9389 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9390 0ef8 0133     		adds	r3, r3, #1
 9391 0efa BB75     		strb	r3, [r7, #22]
 9392              	.L429:
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9393              		.loc 1 1432 0 is_stmt 0 discriminator 1
 9394 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9395 0efe 032B     		cmp	r3, #3
 9396 0f00 EDD9     		bls	.L430
1435:..\src/command_processing.c ****                 
 9397              		.loc 1 1435 0 is_stmt 1
 9398 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9399 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 9400 0f06 4FF08F41 		mov	r1, #1199570944
 9401 0f0a 1846     		mov	r0, r3
 9402 0f0c FFF7FEFF 		bl	__aeabi_fmul
 9403 0f10 0346     		mov	r3, r0
 9404 0f12 1846     		mov	r0, r3
 9405 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 9406 0f18 0146     		mov	r1, r0
 9407 0f1a 424A     		ldr	r2, .L452
 9408 0f1c 2346     		mov	r3, r4
 9409 0f1e DB00     		lsls	r3, r3, #3
 9410 0f20 1B1B     		subs	r3, r3, r4
 9411 0f22 1B01     		lsls	r3, r3, #4
 9412 0f24 1344     		add	r3, r3, r2
 9413 0f26 D433     		adds	r3, r3, #212
 9414 0f28 1960     		str	r1, [r3]
1437:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9415              		.loc 1 1437 0
 9416 0f2a 424B     		ldr	r3, .L452+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 221


 9417 0f2c 1B68     		ldr	r3, [r3]	@ float
 9418 0f2e FB60     		str	r3, [r7, #12]	@ float
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9419              		.loc 1 1438 0
 9420 0f30 0023     		movs	r3, #0
 9421 0f32 BB75     		strb	r3, [r7, #22]
 9422 0f34 0EE0     		b	.L431
 9423              	.L432:
1439:..\src/command_processing.c ****                 }
 9424              		.loc 1 1439 0 discriminator 3
 9425 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9426 0f38 C3F10303 		rsb	r3, r3, #3
 9427 0f3c 07F10802 		add	r2, r7, #8
 9428 0f40 1344     		add	r3, r3, r2
 9429 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9430 0f44 07F10C01 		add	r1, r7, #12
 9431 0f48 0A44     		add	r2, r2, r1
 9432 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9433 0f4c 1A70     		strb	r2, [r3]
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9434              		.loc 1 1438 0 discriminator 3
 9435 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9436 0f50 0133     		adds	r3, r3, #1
 9437 0f52 BB75     		strb	r3, [r7, #22]
 9438              	.L431:
1438:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9439              		.loc 1 1438 0 is_stmt 0 discriminator 1
 9440 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9441 0f56 032B     		cmp	r3, #3
 9442 0f58 EDD9     		bls	.L432
1441:..\src/command_processing.c ****                 
 9443              		.loc 1 1441 0 is_stmt 1
 9444 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9445 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 9446 0f5e 4FF08F41 		mov	r1, #1199570944
 9447 0f62 1846     		mov	r0, r3
 9448 0f64 FFF7FEFF 		bl	__aeabi_fmul
 9449 0f68 0346     		mov	r3, r0
 9450 0f6a 1846     		mov	r0, r3
 9451 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 9452 0f70 0146     		mov	r1, r0
 9453 0f72 2C4A     		ldr	r2, .L452
 9454 0f74 2346     		mov	r3, r4
 9455 0f76 DB00     		lsls	r3, r3, #3
 9456 0f78 1B1B     		subs	r3, r3, r4
 9457 0f7a 1B01     		lsls	r3, r3, #4
 9458 0f7c 1344     		add	r3, r3, r2
 9459 0f7e D833     		adds	r3, r3, #216
 9460 0f80 1960     		str	r1, [r3]
1443:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9461              		.loc 1 1443 0
 9462 0f82 294B     		ldr	r3, .L452+4
 9463 0f84 1B68     		ldr	r3, [r3]	@ float
 9464 0f86 FB60     		str	r3, [r7, #12]	@ float
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9465              		.loc 1 1444 0
 9466 0f88 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 222


 9467 0f8a BB75     		strb	r3, [r7, #22]
 9468 0f8c 0EE0     		b	.L433
 9469              	.L434:
1445:..\src/command_processing.c ****                 }
 9470              		.loc 1 1445 0 discriminator 3
 9471 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9472 0f90 C3F10303 		rsb	r3, r3, #3
 9473 0f94 07F10802 		add	r2, r7, #8
 9474 0f98 1344     		add	r3, r3, r2
 9475 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9476 0f9c 07F10C01 		add	r1, r7, #12
 9477 0fa0 0A44     		add	r2, r2, r1
 9478 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9479 0fa4 1A70     		strb	r2, [r3]
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9480              		.loc 1 1444 0 discriminator 3
 9481 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9482 0fa8 0133     		adds	r3, r3, #1
 9483 0faa BB75     		strb	r3, [r7, #22]
 9484              	.L433:
1444:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9485              		.loc 1 1444 0 is_stmt 0 discriminator 1
 9486 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9487 0fae 032B     		cmp	r3, #3
 9488 0fb0 EDD9     		bls	.L434
1447:..\src/command_processing.c ****             }            
 9489              		.loc 1 1447 0 is_stmt 1
 9490 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9491 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 9492 0fb6 4FF08F41 		mov	r1, #1199570944
 9493 0fba 1846     		mov	r0, r3
 9494 0fbc FFF7FEFF 		bl	__aeabi_fmul
 9495 0fc0 0346     		mov	r3, r0
 9496 0fc2 1846     		mov	r0, r3
 9497 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 9498 0fc8 0146     		mov	r1, r0
 9499 0fca 164A     		ldr	r2, .L452
 9500 0fcc 2346     		mov	r3, r4
 9501 0fce DB00     		lsls	r3, r3, #3
 9502 0fd0 1B1B     		subs	r3, r3, r4
 9503 0fd2 1B01     		lsls	r3, r3, #4
 9504 0fd4 1344     		add	r3, r3, r2
 9505 0fd6 DC33     		adds	r3, r3, #220
 9506 0fd8 1960     		str	r1, [r3]
 9507              		.loc 1 1449 0
 9508 0fda 15E2     		b	.L381
 9509              	.L362:
1450:..\src/command_processing.c ****             
1451:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1452:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 9510              		.loc 1 1452 0
 9511 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9512 0fde 164B     		ldr	r3, .L452+20
 9513 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9514 0fe2 1049     		ldr	r1, .L452
 9515 0fe4 1346     		mov	r3, r2
 9516 0fe6 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 223


 9517 0fe8 9B1A     		subs	r3, r3, r2
 9518 0fea 1B01     		lsls	r3, r3, #4
 9519 0fec 0B44     		add	r3, r3, r1
 9520 0fee 03F58773 		add	r3, r3, #270
 9521 0ff2 0246     		mov	r2, r0
 9522 0ff4 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             
1454:..\src/command_processing.c ****             // Hold the actual position
1455:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 9523              		.loc 1 1455 0
 9524 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9525 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9526 0ffa 0A48     		ldr	r0, .L452
 9527 0ffc 1346     		mov	r3, r2
 9528 0ffe DB00     		lsls	r3, r3, #3
 9529 1000 9B1A     		subs	r3, r3, r2
 9530 1002 1B01     		lsls	r3, r3, #4
 9531 1004 0344     		add	r3, r3, r0
 9532 1006 03F58873 		add	r3, r3, #272
 9533 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9534 100c 1846     		mov	r0, r3
 9535 100e 0B4A     		ldr	r2, .L452+24
 9536 1010 3423     		movs	r3, #52
 9537 1012 03FB00F3 		mul	r3, r3, r0
 9538 1016 1344     		add	r3, r3, r2
 9539 1018 1A68     		ldr	r2, [r3]
 9540 101a 0948     		ldr	r0, .L452+28
 9541 101c 0B01     		lsls	r3, r1, #4
 9542 101e 0344     		add	r3, r3, r0
 9543 1020 1A60     		str	r2, [r3]
1456:..\src/command_processing.c ****             break;   
 9544              		.loc 1 1456 0
 9545 1022 F1E1     		b	.L381
 9546              	.L453:
 9547              		.align	2
 9548              	.L452:
 9549 1024 00000000 		.word	g_mem
 9550 1028 0B000000 		.word	g_rx+11
 9551 102c 00000000 		.word	c_mem
 9552 1030 03000000 		.word	g_rx+3
 9553 1034 07000000 		.word	g_rx+7
 9554 1038 00000000 		.word	g_rx
 9555 103c 00000000 		.word	g_meas
 9556 1040 00000000 		.word	g_refNew
 9557              	.L363:
1457:..\src/command_processing.c **** 
1458:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1459:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9558              		.loc 1 1459 0
 9559 1044 0023     		movs	r3, #0
 9560 1046 FB75     		strb	r3, [r7, #23]
 9561 1048 7EE0     		b	.L435
 9562              	.L436:
1460:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9563              		.loc 1 1460 0 discriminator 3
 9564 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9565 104c 9049     		ldr	r1, .L454
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 224


 9566 104e 1346     		mov	r3, r2
 9567 1050 DB00     		lsls	r3, r3, #3
 9568 1052 9B1A     		subs	r3, r3, r2
 9569 1054 1B01     		lsls	r3, r3, #4
 9570 1056 0B44     		add	r3, r3, r1
 9571 1058 03F58873 		add	r3, r3, #272
 9572 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9573 105e 1C46     		mov	r4, r3
 9574 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9575 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9576 1064 5B00     		lsls	r3, r3, #1
 9577 1066 0333     		adds	r3, r3, #3
 9578 1068 8A49     		ldr	r1, .L454+4
 9579 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9580 106c 1B02     		lsls	r3, r3, #8
 9581 106e 19B2     		sxth	r1, r3
 9582 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9583 1072 0233     		adds	r3, r3, #2
 9584 1074 5B00     		lsls	r3, r3, #1
 9585 1076 8748     		ldr	r0, .L454+4
 9586 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9587 107a 1BB2     		sxth	r3, r3
 9588 107c 0B43     		orrs	r3, r3, r1
 9589 107e 1BB2     		sxth	r3, r3
 9590 1080 1846     		mov	r0, r3
 9591 1082 8349     		ldr	r1, .L454
 9592 1084 2346     		mov	r3, r4
 9593 1086 5B00     		lsls	r3, r3, #1
 9594 1088 2344     		add	r3, r3, r4
 9595 108a 9B00     		lsls	r3, r3, #2
 9596 108c 1344     		add	r3, r3, r2
 9597 108e 6633     		adds	r3, r3, #102
 9598 1090 41F82300 		str	r0, [r1, r3, lsl #2]
1461:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 9599              		.loc 1 1461 0 discriminator 3
 9600 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9601 1096 7E49     		ldr	r1, .L454
 9602 1098 1346     		mov	r3, r2
 9603 109a DB00     		lsls	r3, r3, #3
 9604 109c 9B1A     		subs	r3, r3, r2
 9605 109e 1B01     		lsls	r3, r3, #4
 9606 10a0 0B44     		add	r3, r3, r1
 9607 10a2 03F58873 		add	r3, r3, #272
 9608 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9609 10a8 1D46     		mov	r5, r3
 9610 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9611 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9612 10ae 7848     		ldr	r0, .L454
 9613 10b0 1346     		mov	r3, r2
 9614 10b2 DB00     		lsls	r3, r3, #3
 9615 10b4 9B1A     		subs	r3, r3, r2
 9616 10b6 1B01     		lsls	r3, r3, #4
 9617 10b8 0344     		add	r3, r3, r0
 9618 10ba 03F58873 		add	r3, r3, #272
 9619 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9620 10c0 1C46     		mov	r4, r3
 9621 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 225


 9622 10c4 7248     		ldr	r0, .L454
 9623 10c6 2346     		mov	r3, r4
 9624 10c8 5B00     		lsls	r3, r3, #1
 9625 10ca 2344     		add	r3, r3, r4
 9626 10cc 9B00     		lsls	r3, r3, #2
 9627 10ce 1344     		add	r3, r3, r2
 9628 10d0 6633     		adds	r3, r3, #102
 9629 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9630 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9631 10d8 6D4C     		ldr	r4, .L454
 9632 10da 1346     		mov	r3, r2
 9633 10dc DB00     		lsls	r3, r3, #3
 9634 10de 9B1A     		subs	r3, r3, r2
 9635 10e0 1B01     		lsls	r3, r3, #4
 9636 10e2 2344     		add	r3, r3, r4
 9637 10e4 03F58873 		add	r3, r3, #272
 9638 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9639 10ea 1E46     		mov	r6, r3
 9640 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9641 10ee 684C     		ldr	r4, .L454
 9642 10f0 3346     		mov	r3, r6
 9643 10f2 5B00     		lsls	r3, r3, #1
 9644 10f4 3344     		add	r3, r3, r6
 9645 10f6 1B01     		lsls	r3, r3, #4
 9646 10f8 2344     		add	r3, r3, r4
 9647 10fa 1344     		add	r3, r3, r2
 9648 10fc 03F29513 		addw	r3, r3, #405
 9649 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9650 1102 00FA03F2 		lsl	r2, r0, r3
 9651 1106 6248     		ldr	r0, .L454
 9652 1108 2B46     		mov	r3, r5
 9653 110a 5B00     		lsls	r3, r3, #1
 9654 110c 2B44     		add	r3, r3, r5
 9655 110e 9B00     		lsls	r3, r3, #2
 9656 1110 0B44     		add	r3, r3, r1
 9657 1112 6633     		adds	r3, r3, #102
 9658 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1462:..\src/command_processing.c **** 
1463:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 9659              		.loc 1 1463 0 discriminator 3
 9660 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9661 111a 5D49     		ldr	r1, .L454
 9662 111c 1346     		mov	r3, r2
 9663 111e DB00     		lsls	r3, r3, #3
 9664 1120 9B1A     		subs	r3, r3, r2
 9665 1122 1B01     		lsls	r3, r3, #4
 9666 1124 0B44     		add	r3, r3, r1
 9667 1126 03F58873 		add	r3, r3, #272
 9668 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9669 112c 1846     		mov	r0, r3
 9670 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9671 1130 5949     		ldr	r1, .L454+8
 9672 1132 3422     		movs	r2, #52
 9673 1134 02FB00F2 		mul	r2, r2, r0
 9674 1138 0A44     		add	r2, r2, r1
 9675 113a 1344     		add	r3, r3, r2
 9676 113c 1833     		adds	r3, r3, #24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 226


 9677 113e 0022     		movs	r2, #0
 9678 1140 1A70     		strb	r2, [r3]
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9679              		.loc 1 1459 0 discriminator 3
 9680 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9681 1144 0133     		adds	r3, r3, #1
 9682 1146 FB75     		strb	r3, [r7, #23]
 9683              	.L435:
1459:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9684              		.loc 1 1459 0 is_stmt 0 discriminator 1
 9685 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9686 114a 022B     		cmp	r3, #2
 9687 114c 7FF67DAF 		bls	.L436
1464:..\src/command_processing.c ****             }
1465:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9688              		.loc 1 1465 0 is_stmt 1
 9689 1150 524B     		ldr	r3, .L454+12
 9690 1152 0122     		movs	r2, #1
 9691 1154 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****             break;
 9692              		.loc 1 1466 0
 9693 1156 57E1     		b	.L381
 9694              	.L364:
1467:..\src/command_processing.c ****     
1468:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1469:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 9695              		.loc 1 1469 0
 9696 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9697 115a 4E4B     		ldr	r3, .L454+4
 9698 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9699 115e 1906     		lsls	r1, r3, #24
 9700 1160 4C4B     		ldr	r3, .L454+4
 9701 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9702 1164 1B04     		lsls	r3, r3, #16
 9703 1166 1943     		orrs	r1, r1, r3
 9704 1168 4A4B     		ldr	r3, .L454+4
 9705 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9706 116c 1B02     		lsls	r3, r3, #8
 9707 116e 0B43     		orrs	r3, r3, r1
 9708 1170 4849     		ldr	r1, .L454+4
 9709 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9710 1174 1943     		orrs	r1, r1, r3
 9711 1176 4648     		ldr	r0, .L454
 9712 1178 1346     		mov	r3, r2
 9713 117a DB00     		lsls	r3, r3, #3
 9714 117c 9B1A     		subs	r3, r3, r2
 9715 117e 1B01     		lsls	r3, r3, #4
 9716 1180 0344     		add	r3, r3, r0
 9717 1182 E433     		adds	r3, r3, #228
 9718 1184 1960     		str	r1, [r3]
1470:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 9719              		.loc 1 1470 0
 9720 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9721 1188 424B     		ldr	r3, .L454+4
 9722 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9723 118c 1906     		lsls	r1, r3, #24
 9724 118e 414B     		ldr	r3, .L454+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 227


 9725 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9726 1192 1B04     		lsls	r3, r3, #16
 9727 1194 1943     		orrs	r1, r1, r3
 9728 1196 3F4B     		ldr	r3, .L454+4
 9729 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9730 119a 1B02     		lsls	r3, r3, #8
 9731 119c 0B43     		orrs	r3, r3, r1
 9732 119e 3D49     		ldr	r1, .L454+4
 9733 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9734 11a2 1943     		orrs	r1, r1, r3
 9735 11a4 3A48     		ldr	r0, .L454
 9736 11a6 1346     		mov	r3, r2
 9737 11a8 DB00     		lsls	r3, r3, #3
 9738 11aa 9B1A     		subs	r3, r3, r2
 9739 11ac 1B01     		lsls	r3, r3, #4
 9740 11ae 0344     		add	r3, r3, r0
 9741 11b0 E833     		adds	r3, r3, #232
 9742 11b2 1960     		str	r1, [r3]
1471:..\src/command_processing.c **** 
1472:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 9743              		.loc 1 1472 0
 9744 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9745 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9746 11b8 3548     		ldr	r0, .L454
 9747 11ba 0B46     		mov	r3, r1
 9748 11bc DB00     		lsls	r3, r3, #3
 9749 11be 5B1A     		subs	r3, r3, r1
 9750 11c0 1B01     		lsls	r3, r3, #4
 9751 11c2 0344     		add	r3, r3, r0
 9752 11c4 E433     		adds	r3, r3, #228
 9753 11c6 1868     		ldr	r0, [r3]
 9754 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9755 11ca 314C     		ldr	r4, .L454
 9756 11cc 0B46     		mov	r3, r1
 9757 11ce DB00     		lsls	r3, r3, #3
 9758 11d0 5B1A     		subs	r3, r3, r1
 9759 11d2 1B01     		lsls	r3, r3, #4
 9760 11d4 2344     		add	r3, r3, r4
 9761 11d6 03F58873 		add	r3, r3, #272
 9762 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9763 11dc 1C46     		mov	r4, r3
 9764 11de 2C49     		ldr	r1, .L454
 9765 11e0 2346     		mov	r3, r4
 9766 11e2 5B00     		lsls	r3, r3, #1
 9767 11e4 2344     		add	r3, r3, r4
 9768 11e6 1B01     		lsls	r3, r3, #4
 9769 11e8 0B44     		add	r3, r3, r1
 9770 11ea 03F29513 		addw	r3, r3, #405
 9771 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9772 11f0 00FA03F1 		lsl	r1, r0, r3
 9773 11f4 2648     		ldr	r0, .L454
 9774 11f6 1346     		mov	r3, r2
 9775 11f8 DB00     		lsls	r3, r3, #3
 9776 11fa 9B1A     		subs	r3, r3, r2
 9777 11fc 1B01     		lsls	r3, r3, #4
 9778 11fe 0344     		add	r3, r3, r0
 9779 1200 E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 228


 9780 1202 1960     		str	r1, [r3]
1473:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 9781              		.loc 1 1473 0
 9782 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9783 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9784 1208 2148     		ldr	r0, .L454
 9785 120a 0B46     		mov	r3, r1
 9786 120c DB00     		lsls	r3, r3, #3
 9787 120e 5B1A     		subs	r3, r3, r1
 9788 1210 1B01     		lsls	r3, r3, #4
 9789 1212 0344     		add	r3, r3, r0
 9790 1214 E833     		adds	r3, r3, #232
 9791 1216 1868     		ldr	r0, [r3]
 9792 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9793 121a 1D4C     		ldr	r4, .L454
 9794 121c 0B46     		mov	r3, r1
 9795 121e DB00     		lsls	r3, r3, #3
 9796 1220 5B1A     		subs	r3, r3, r1
 9797 1222 1B01     		lsls	r3, r3, #4
 9798 1224 2344     		add	r3, r3, r4
 9799 1226 03F58873 		add	r3, r3, #272
 9800 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9801 122c 1C46     		mov	r4, r3
 9802 122e 1849     		ldr	r1, .L454
 9803 1230 2346     		mov	r3, r4
 9804 1232 5B00     		lsls	r3, r3, #1
 9805 1234 2344     		add	r3, r3, r4
 9806 1236 1B01     		lsls	r3, r3, #4
 9807 1238 0B44     		add	r3, r3, r1
 9808 123a 03F29513 		addw	r3, r3, #405
 9809 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9810 1240 00FA03F1 		lsl	r1, r0, r3
 9811 1244 1248     		ldr	r0, .L454
 9812 1246 1346     		mov	r3, r2
 9813 1248 DB00     		lsls	r3, r3, #3
 9814 124a 9B1A     		subs	r3, r3, r2
 9815 124c 1B01     		lsls	r3, r3, #4
 9816 124e 0344     		add	r3, r3, r0
 9817 1250 E833     		adds	r3, r3, #232
 9818 1252 1960     		str	r1, [r3]
1474:..\src/command_processing.c ****             break;
 9819              		.loc 1 1474 0
 9820 1254 D8E0     		b	.L381
 9821              	.L365:
1475:..\src/command_processing.c ****             
1476:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1477:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 9822              		.loc 1 1477 0
 9823 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9824 1258 0E4B     		ldr	r3, .L454+4
 9825 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9826 125c 0C49     		ldr	r1, .L454
 9827 125e 1346     		mov	r3, r2
 9828 1260 DB00     		lsls	r3, r3, #3
 9829 1262 9B1A     		subs	r3, r3, r2
 9830 1264 1B01     		lsls	r3, r3, #4
 9831 1266 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 229


 9832 1268 E233     		adds	r3, r3, #226
 9833 126a 0246     		mov	r2, r0
 9834 126c 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 9835              		.loc 1 1478 0
 9836 126e 084B     		ldr	r3, .L454
 9837 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 9838 1274 5B00     		lsls	r3, r3, #1
 9839 1276 5AB2     		sxtb	r2, r3
 9840 1278 054B     		ldr	r3, .L454
 9841 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 9842 127e 5BB2     		sxtb	r3, r3
 9843 1280 1343     		orrs	r3, r3, r2
 9844 1282 5BB2     		sxtb	r3, r3
 9845 1284 DBB2     		uxtb	r3, r3
 9846 1286 1846     		mov	r0, r3
 9847 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1479:..\src/command_processing.c ****             break;
 9848              		.loc 1 1479 0
 9849 128c BCE0     		b	.L381
 9850              	.L455:
 9851 128e 00BF     		.align	2
 9852              	.L454:
 9853 1290 00000000 		.word	g_mem
 9854 1294 00000000 		.word	g_rx
 9855 1298 00000000 		.word	g_meas
 9856 129c 00000000 		.word	reset_last_value_flag
 9857              	.L366:
1480:..\src/command_processing.c **** 
1481:..\src/command_processing.c ****         case 71:        // Device type
1482:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 9858              		.loc 1 1482 0
 9859 12a0 5B4B     		ldr	r3, .L456
 9860 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9861 12a4 5B4B     		ldr	r3, .L456+4
 9862 12a6 83F8AC20 		strb	r2, [r3, #172]
1483:..\src/command_processing.c ****             
1484:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 9863              		.loc 1 1484 0
 9864 12aa 5A4B     		ldr	r3, .L456+4
 9865 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9866 12b0 002B     		cmp	r3, #0
 9867 12b2 40F0A880 		bne	.L443
1485:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9868              		.loc 1 1485 0
 9869 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9870 12b8 5649     		ldr	r1, .L456+4
 9871 12ba 1346     		mov	r3, r2
 9872 12bc DB00     		lsls	r3, r3, #3
 9873 12be 9B1A     		subs	r3, r3, r2
 9874 12c0 1B01     		lsls	r3, r3, #4
 9875 12c2 0B44     		add	r3, r3, r1
 9876 12c4 03F58873 		add	r3, r3, #272
 9877 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9878 12ca 1946     		mov	r1, r3
 9879 12cc 514A     		ldr	r2, .L456+4
 9880 12ce 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 230


 9881 12d0 5B00     		lsls	r3, r3, #1
 9882 12d2 0B44     		add	r3, r3, r1
 9883 12d4 1B01     		lsls	r3, r3, #4
 9884 12d6 1344     		add	r3, r3, r2
 9885 12d8 03F5D873 		add	r3, r3, #432
 9886 12dc 0122     		movs	r2, #1
 9887 12de 1A70     		strb	r2, [r3]
1486:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9888              		.loc 1 1486 0
 9889 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9890 12e2 4C49     		ldr	r1, .L456+4
 9891 12e4 1346     		mov	r3, r2
 9892 12e6 DB00     		lsls	r3, r3, #3
 9893 12e8 9B1A     		subs	r3, r3, r2
 9894 12ea 1B01     		lsls	r3, r3, #4
 9895 12ec 0B44     		add	r3, r3, r1
 9896 12ee 03F58873 		add	r3, r3, #272
 9897 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9898 12f4 1946     		mov	r1, r3
 9899 12f6 474A     		ldr	r2, .L456+4
 9900 12f8 0B46     		mov	r3, r1
 9901 12fa 5B00     		lsls	r3, r3, #1
 9902 12fc 0B44     		add	r3, r3, r1
 9903 12fe 1B01     		lsls	r3, r3, #4
 9904 1300 1344     		add	r3, r3, r2
 9905 1302 03F2B513 		addw	r3, r3, #437
 9906 1306 2322     		movs	r2, #35
 9907 1308 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9908              		.loc 1 1487 0
 9909 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9910 130c 4149     		ldr	r1, .L456+4
 9911 130e 1346     		mov	r3, r2
 9912 1310 DB00     		lsls	r3, r3, #3
 9913 1312 9B1A     		subs	r3, r3, r2
 9914 1314 1B01     		lsls	r3, r3, #4
 9915 1316 0B44     		add	r3, r3, r1
 9916 1318 03F58873 		add	r3, r3, #272
 9917 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9918 131e 1946     		mov	r1, r3
 9919 1320 3C4A     		ldr	r2, .L456+4
 9920 1322 0B46     		mov	r3, r1
 9921 1324 5B00     		lsls	r3, r3, #1
 9922 1326 0B44     		add	r3, r3, r1
 9923 1328 1B01     		lsls	r3, r3, #4
 9924 132a 1344     		add	r3, r3, r2
 9925 132c 03F5DB73 		add	r3, r3, #438
 9926 1330 0322     		movs	r2, #3
 9927 1332 1A70     		strb	r2, [r3]
1488:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9928              		.loc 1 1488 0
 9929 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9930 1336 3749     		ldr	r1, .L456+4
 9931 1338 1346     		mov	r3, r2
 9932 133a DB00     		lsls	r3, r3, #3
 9933 133c 9B1A     		subs	r3, r3, r2
 9934 133e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 231


 9935 1340 0B44     		add	r3, r3, r1
 9936 1342 03F58873 		add	r3, r3, #272
 9937 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9938 1348 1946     		mov	r1, r3
 9939 134a 324A     		ldr	r2, .L456+4
 9940 134c 0B46     		mov	r3, r1
 9941 134e 5B00     		lsls	r3, r3, #1
 9942 1350 0B44     		add	r3, r3, r1
 9943 1352 1B01     		lsls	r3, r3, #4
 9944 1354 1344     		add	r3, r3, r2
 9945 1356 03F2B713 		addw	r3, r3, #439
 9946 135a FF22     		movs	r2, #255
 9947 135c 1A70     		strb	r2, [r3]
1489:..\src/command_processing.c ****                 
1490:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1491:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 9948              		.loc 1 1491 0
 9949 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9950 1360 2C4B     		ldr	r3, .L456+4
 9951 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9952 1366 2B49     		ldr	r1, .L456+4
 9953 1368 1346     		mov	r3, r2
 9954 136a DB00     		lsls	r3, r3, #3
 9955 136c 9B1A     		subs	r3, r3, r2
 9956 136e 1B01     		lsls	r3, r3, #4
 9957 1370 0B44     		add	r3, r3, r1
 9958 1372 03F58873 		add	r3, r3, #272
 9959 1376 0246     		mov	r2, r0
 9960 1378 1A70     		strb	r2, [r3]
1492:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 9961              		.loc 1 1492 0
 9962 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9963 137c 2549     		ldr	r1, .L456+4
 9964 137e 1346     		mov	r3, r2
 9965 1380 DB00     		lsls	r3, r3, #3
 9966 1382 9B1A     		subs	r3, r3, r2
 9967 1384 1B01     		lsls	r3, r3, #4
 9968 1386 0B44     		add	r3, r3, r1
 9969 1388 03F21113 		addw	r3, r3, #273
 9970 138c 0122     		movs	r2, #1
 9971 138e 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 9972              		.loc 1 1493 0
 9973 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9974 1392 2049     		ldr	r1, .L456+4
 9975 1394 1346     		mov	r3, r2
 9976 1396 DB00     		lsls	r3, r3, #3
 9977 1398 9B1A     		subs	r3, r3, r2
 9978 139a 1B01     		lsls	r3, r3, #4
 9979 139c 0B44     		add	r3, r3, r1
 9980 139e 03F58973 		add	r3, r3, #274
 9981 13a2 0122     		movs	r2, #1
 9982 13a4 1A70     		strb	r2, [r3]
1494:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9983              		.loc 1 1494 0
 9984 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9985 13a8 1A49     		ldr	r1, .L456+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 232


 9986 13aa 1346     		mov	r3, r2
 9987 13ac DB00     		lsls	r3, r3, #3
 9988 13ae 9B1A     		subs	r3, r3, r2
 9989 13b0 1B01     		lsls	r3, r3, #4
 9990 13b2 0B44     		add	r3, r3, r1
 9991 13b4 E433     		adds	r3, r3, #228
 9992 13b6 0022     		movs	r2, #0
 9993 13b8 1A60     		str	r2, [r3]
1495:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9994              		.loc 1 1495 0
 9995 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9996 13bc 154B     		ldr	r3, .L456+4
 9997 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9998 13c2 1846     		mov	r0, r3
 9999 13c4 1349     		ldr	r1, .L456+4
 10000 13c6 0346     		mov	r3, r0
 10001 13c8 5B00     		lsls	r3, r3, #1
 10002 13ca 0344     		add	r3, r3, r0
 10003 13cc 1B01     		lsls	r3, r3, #4
 10004 13ce 0B44     		add	r3, r3, r1
 10005 13d0 03F29513 		addw	r3, r3, #405
 10006 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10007 13d6 1946     		mov	r1, r3
 10008 13d8 4FF47A53 		mov	r3, #16000
 10009 13dc 03FA01F1 		lsl	r1, r3, r1
 10010 13e0 0C48     		ldr	r0, .L456+4
 10011 13e2 1346     		mov	r3, r2
 10012 13e4 DB00     		lsls	r3, r3, #3
 10013 13e6 9B1A     		subs	r3, r3, r2
 10014 13e8 1B01     		lsls	r3, r3, #4
 10015 13ea 0344     		add	r3, r3, r0
 10016 13ec E833     		adds	r3, r3, #232
 10017 13ee 1960     		str	r1, [r3]
1496:..\src/command_processing.c ****             }        
1497:..\src/command_processing.c ****             break;
 10018              		.loc 1 1497 0
 10019 13f0 09E0     		b	.L443
 10020              	.L438:
1498:..\src/command_processing.c ****             
1499:..\src/command_processing.c ****         default:
1500:..\src/command_processing.c ****             break;
 10021              		.loc 1 1500 0
 10022 13f2 00BF     		nop
 10023 13f4 08E0     		b	.L381
 10024              	.L439:
1306:..\src/command_processing.c ****             
 10025              		.loc 1 1306 0
 10026 13f6 00BF     		nop
 10027 13f8 06E0     		b	.L381
 10028              	.L440:
1334:..\src/command_processing.c **** 
 10029              		.loc 1 1334 0
 10030 13fa 00BF     		nop
 10031 13fc 04E0     		b	.L381
 10032              	.L441:
1352:..\src/command_processing.c ****             
 10033              		.loc 1 1352 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 233


 10034 13fe 00BF     		nop
 10035 1400 02E0     		b	.L381
 10036              	.L442:
1362:..\src/command_processing.c ****            
 10037              		.loc 1 1362 0
 10038 1402 00BF     		nop
 10039 1404 00E0     		b	.L381
 10040              	.L443:
1497:..\src/command_processing.c ****             
 10041              		.loc 1 1497 0
 10042 1406 00BF     		nop
 10043              	.L381:
1501:..\src/command_processing.c ****     }
1502:..\src/command_processing.c **** }
 10044              		.loc 1 1502 0 discriminator 1
 10045 1408 00BF     		nop
 10046 140a 1C37     		adds	r7, r7, #28
 10047              		.cfi_def_cfa_offset 20
 10048 140c BD46     		mov	sp, r7
 10049              		.cfi_def_cfa_register 13
 10050              		@ sp needed
 10051 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 10052              	.L457:
 10053              		.align	2
 10054              	.L456:
 10055 1410 00000000 		.word	g_rx
 10056 1414 00000000 		.word	g_mem
 10057              		.cfi_endproc
 10058              	.LFE69:
 10059              		.size	set_custom_param, .-set_custom_param
 10060              		.section	.rodata
 10061 0e12 0000     		.align	2
 10062              	.LC125:
 10063 0e14 506F7274 		.ascii	"Port %u ID:\000"
 10063      20257520 
 10063      49443A00 
 10064              		.align	2
 10065              	.LC126:
 10066 0e20 2575202D 		.ascii	"%u - Device ID:\000"
 10066      20446576 
 10066      69636520 
 10066      49443A00 
 10067              		.align	2
 10068              	.LC127:
 10069 0e30 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 10069      20494D55 
 10069      20256420 
 10069      636F6E66 
 10069      69677572 
 10070 0e4b 00       		.align	2
 10071              	.LC128:
 10072 0e4c 2575202D 		.ascii	"%u - SPI read delay:\000"
 10072      20535049 
 10072      20726561 
 10072      64206465 
 10072      6C61793A 
 10073 0e61 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 234


 10074              	.LC129:
 10075 0e64 204E6F6E 		.ascii	" None\000"
 10075      6500
 10076 0e6a 0000     		.align	2
 10077              	.LC130:
 10078 0e6c 204C6F77 		.ascii	" Low\000"
 10078      00
 10079 0e71 000000   		.align	2
 10080              	.LC131:
 10081 0e74 20486967 		.ascii	" High\000"
 10081      6800
 10082 0e7a 0000     		.align	2
 10083              	.LC123:
 10084 0e7c 4E756D62 		.ascii	"Number of connected IMUs:\000"
 10084      6572206F 
 10084      6620636F 
 10084      6E6E6563 
 10084      74656420 
 10085 0e96 0000     		.align	2
 10086              	.LC124:
 10087 0e98 4D616720 		.ascii	"Mag cal parameters:\000"
 10087      63616C20 
 10087      70617261 
 10087      6D657465 
 10087      72733A00 
 10088              		.section	.text.get_IMU_param_list,"ax",%progbits
 10089              		.align	2
 10090              		.global	get_IMU_param_list
 10091              		.thumb
 10092              		.thumb_func
 10093              		.type	get_IMU_param_list, %function
 10094              	get_IMU_param_list:
 10095              	.LFB70:
1503:..\src/command_processing.c **** 
1504:..\src/command_processing.c **** //==============================================================================
1505:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1506:..\src/command_processing.c **** //==============================================================================
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1509:..\src/command_processing.c **** {
 10096              		.loc 1 1509 0
 10097              		.cfi_startproc
 10098              		@ args = 0, pretend = 0, frame = 1704
 10099              		@ frame_needed = 1, uses_anonymous_args = 0
 10100 0000 B0B5     		push	{r4, r5, r7, lr}
 10101              		.cfi_def_cfa_offset 16
 10102              		.cfi_offset 4, -16
 10103              		.cfi_offset 5, -12
 10104              		.cfi_offset 7, -8
 10105              		.cfi_offset 14, -4
 10106 0002 ADF5D56D 		sub	sp, sp, #1704
 10107              		.cfi_def_cfa_offset 1720
 10108 0006 00AF     		add	r7, sp, #0
 10109              		.cfi_def_cfa_register 7
 10110 0008 0246     		mov	r2, r0
 10111 000a BB1D     		adds	r3, r7, #6
 10112 000c 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 235


1510:..\src/command_processing.c ****     //Package to be sent variables
1511:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 10113              		.loc 1 1511 0
 10114 000e 07F58A73 		add	r3, r7, #276
 10115 0012 0022     		movs	r2, #0
 10116 0014 1A60     		str	r2, [r3]
 10117 0016 0433     		adds	r3, r3, #4
 10118 0018 40F27552 		movw	r2, #1397
 10119 001c 0021     		movs	r1, #0
 10120 001e 1846     		mov	r0, r3
 10121 0020 FFF7FEFF 		bl	memset
1512:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1513:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1514:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1515:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1516:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1517:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1518:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 10122              		.loc 1 1518 0
 10123 0024 0723     		movs	r3, #7
 10124 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1519:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 10125              		.loc 1 1519 0
 10126 002a 0023     		movs	r3, #0
 10127 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1520:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 10128              		.loc 1 1520 0
 10129 0030 0223     		movs	r3, #2
 10130 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10131              		.loc 1 1521 0
 10132 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 10133 003a 5A1C     		adds	r2, r3, #1
1522:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 10134              		.loc 1 1522 0
 10135 003c B7F8A636 		ldrh	r3, [r7, #1702]
 10136 0040 1344     		add	r3, r3, r2
1523:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 10137              		.loc 1 1523 0
 10138 0042 0133     		adds	r3, r3, #1
1521:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10139              		.loc 1 1521 0
 10140 0044 9AB2     		uxth	r2, r3
 10141 0046 D24B     		ldr	r3, .L504
 10142 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10143 004a 9BB2     		uxth	r3, r3
 10144 004c 1344     		add	r3, r3, r2
 10145 004e 9BB2     		uxth	r3, r3
 10146 0050 1A46     		mov	r2, r3	@ movhi
 10147 0052 9200     		lsls	r2, r2, #2
 10148 0054 1344     		add	r3, r3, r2
 10149 0056 1A46     		mov	r2, r3	@ movhi
 10150 0058 9100     		lsls	r1, r2, #2
 10151 005a 1A46     		mov	r2, r3	@ movhi
 10152 005c 0B46     		mov	r3, r1	@ movhi
 10153 005e 1344     		add	r3, r3, r2
 10154 0060 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 236


 10155 0062 9BB2     		uxth	r3, r3
 10156 0064 FB33     		adds	r3, r3, #251
 10157 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1524:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1525:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1526:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1527:..\src/command_processing.c **** 
1528:..\src/command_processing.c ****     //Auxiliary variables
1529:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1530:..\src/command_processing.c ****     uint16 start_byte = 0;
 10158              		.loc 1 1530 0
 10159 006a 0023     		movs	r3, #0
 10160 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1531:..\src/command_processing.c **** 
1532:..\src/command_processing.c ****     //Parameters menu string definitions
1533:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 10161              		.loc 1 1533 0
 10162 0070 07F1F803 		add	r3, r7, #248
 10163 0074 C74A     		ldr	r2, .L504+4
 10164 0076 1C46     		mov	r4, r3
 10165 0078 1546     		mov	r5, r2
 10166 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10167 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10168 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 10169 0082 03C4     		stmia	r4!, {r0, r1}
 10170 0084 2280     		strh	r2, [r4]	@ movhi
1534:..\src/command_processing.c ****     char ids_str[11]            = "";
 10171              		.loc 1 1534 0
 10172 0086 07F1EC03 		add	r3, r7, #236
 10173 008a 0022     		movs	r2, #0
 10174 008c 1A60     		str	r2, [r3]
 10175 008e 0433     		adds	r3, r3, #4
 10176 0090 0022     		movs	r2, #0
 10177 0092 1A60     		str	r2, [r3]
 10178 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1535:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 10179              		.loc 1 1535 0
 10180 0098 07F1D803 		add	r3, r7, #216
 10181 009c BE4A     		ldr	r2, .L504+8
 10182 009e 1C46     		mov	r4, r3
 10183 00a0 1546     		mov	r5, r2
 10184 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10185 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10186 00a6 2B68     		ldr	r3, [r5]
 10187 00a8 2360     		str	r3, [r4]
1536:..\src/command_processing.c ****     char id_str[16]             = "";
 10188              		.loc 1 1536 0
 10189 00aa 07F1C803 		add	r3, r7, #200
 10190 00ae 0022     		movs	r2, #0
 10191 00b0 1A60     		str	r2, [r3]
 10192 00b2 0433     		adds	r3, r3, #4
 10193 00b4 0022     		movs	r2, #0
 10194 00b6 1A60     		str	r2, [r3]
 10195 00b8 5A60     		str	r2, [r3, #4]
 10196 00ba 9A60     		str	r2, [r3, #8]
1537:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 10197              		.loc 1 1537 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 237


 10198 00bc 07F19C03 		add	r3, r7, #156
 10199 00c0 0022     		movs	r2, #0
 10200 00c2 1A60     		str	r2, [r3]
 10201 00c4 0433     		adds	r3, r3, #4
 10202 00c6 2622     		movs	r2, #38
 10203 00c8 0021     		movs	r1, #0
 10204 00ca 1846     		mov	r0, r3
 10205 00cc FFF7FEFF 		bl	memset
1538:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 10206              		.loc 1 1538 0
 10207 00d0 07F18003 		add	r3, r7, #128
 10208 00d4 0022     		movs	r2, #0
 10209 00d6 1A60     		str	r2, [r3]
 10210 00d8 0433     		adds	r3, r3, #4
 10211 00da 0022     		movs	r2, #0
 10212 00dc 1A60     		str	r2, [r3]
 10213 00de 5A60     		str	r2, [r3, #4]
 10214 00e0 9A60     		str	r2, [r3, #8]
 10215 00e2 DA60     		str	r2, [r3, #12]
 10216 00e4 1A61     		str	r2, [r3, #16]
 10217 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1539:..\src/command_processing.c ****     
1540:..\src/command_processing.c ****     //Strings lenghts
1541:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 10218              		.loc 1 1541 0
 10219 00e8 07F1C803 		add	r3, r7, #200
 10220 00ec 1846     		mov	r0, r3
 10221 00ee FFF7FEFF 		bl	strlen
 10222 00f2 0346     		mov	r3, r0
 10223 00f4 87F89336 		strb	r3, [r7, #1683]
1542:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 10224              		.loc 1 1542 0
 10225 00f8 07F1F803 		add	r3, r7, #248
 10226 00fc 1846     		mov	r0, r3
 10227 00fe FFF7FEFF 		bl	strlen
 10228 0102 0346     		mov	r3, r0
 10229 0104 87F89236 		strb	r3, [r7, #1682]
1543:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 10230              		.loc 1 1543 0
 10231 0108 07F1EC03 		add	r3, r7, #236
 10232 010c 1846     		mov	r0, r3
 10233 010e FFF7FEFF 		bl	strlen
 10234 0112 0346     		mov	r3, r0
 10235 0114 87F89136 		strb	r3, [r7, #1681]
1544:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 10236              		.loc 1 1544 0
 10237 0118 07F1D803 		add	r3, r7, #216
 10238 011c 1846     		mov	r0, r3
 10239 011e FFF7FEFF 		bl	strlen
 10240 0122 0346     		mov	r3, r0
 10241 0124 87F89036 		strb	r3, [r7, #1680]
1545:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 10242              		.loc 1 1545 0
 10243 0128 07F19C03 		add	r3, r7, #156
 10244 012c 1846     		mov	r0, r3
 10245 012e FFF7FEFF 		bl	strlen
 10246 0132 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 238


 10247 0134 87F88F36 		strb	r3, [r7, #1679]
1546:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 10248              		.loc 1 1546 0
 10249 0138 07F18003 		add	r3, r7, #128
 10250 013c 1846     		mov	r0, r3
 10251 013e FFF7FEFF 		bl	strlen
 10252 0142 0346     		mov	r3, r0
 10253 0144 87F89D36 		strb	r3, [r7, #1693]
1547:..\src/command_processing.c ****     
1548:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 10254              		.loc 1 1548 0
 10255 0148 07F10803 		add	r3, r7, #8
 10256 014c 0022     		movs	r2, #0
 10257 014e 1A60     		str	r2, [r3]
 10258 0150 0433     		adds	r3, r3, #4
 10259 0152 7222     		movs	r2, #114
 10260 0154 0021     		movs	r1, #0
 10261 0156 1846     		mov	r0, r3
 10262 0158 FFF7FEFF 		bl	memset
1549:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1550:..\src/command_processing.c ****  
1551:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 10263              		.loc 1 1551 0
 10264 015c 07F10800 		add	r0, r7, #8
 10265 0160 6423     		movs	r3, #100
 10266 0162 0A22     		movs	r2, #10
 10267 0164 8D49     		ldr	r1, .L504+12
 10268 0166 FFF7FEFF 		bl	sprintf
1552:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 10269              		.loc 1 1552 0
 10270 016a 07F10803 		add	r3, r7, #8
 10271 016e 1846     		mov	r0, r3
 10272 0170 FFF7FEFF 		bl	strlen
 10273 0174 0346     		mov	r3, r0
 10274 0176 87F88E36 		strb	r3, [r7, #1678]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1555:..\src/command_processing.c ****     // update packet_length
1556:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 10275              		.loc 1 1556 0
 10276 017a 854B     		ldr	r3, .L504
 10277 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10278 017e 5B08     		lsrs	r3, r3, #1
 10279 0180 DBB2     		uxtb	r3, r3
 10280 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1557:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 10281              		.loc 1 1557 0
 10282 0186 824B     		ldr	r3, .L504
 10283 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10284 018a 1A46     		mov	r2, r3
 10285 018c B7F8A636 		ldrh	r3, [r7, #1702]
 10286 0190 5B00     		lsls	r3, r3, #1
 10287 0192 D31A     		subs	r3, r2, r3
 10288 0194 002B     		cmp	r3, #0
 10289 0196 04DD     		ble	.L459
 10290              		.loc 1 1557 0 is_stmt 0 discriminator 1
 10291 0198 B7F8A636 		ldrh	r3, [r7, #1702]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 239


 10292 019c 0133     		adds	r3, r3, #1
 10293 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 10294              	.L459:
1558:..\src/command_processing.c ****     
1559:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 10295              		.loc 1 1559 0 is_stmt 1
 10296 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 10297 01a6 5A1C     		adds	r2, r3, #1
1560:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10298              		.loc 1 1560 0
 10299 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 10300 01ac 1344     		add	r3, r3, r2
1561:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 10301              		.loc 1 1561 0
 10302 01ae 0133     		adds	r3, r3, #1
1559:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10303              		.loc 1 1559 0
 10304 01b0 9AB2     		uxth	r2, r3
 10305 01b2 774B     		ldr	r3, .L504
 10306 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10307 01b6 9BB2     		uxth	r3, r3
 10308 01b8 1344     		add	r3, r3, r2
 10309 01ba 9BB2     		uxth	r3, r3
 10310 01bc 1A46     		mov	r2, r3	@ movhi
 10311 01be 9200     		lsls	r2, r2, #2
 10312 01c0 1344     		add	r3, r3, r2
 10313 01c2 1A46     		mov	r2, r3	@ movhi
 10314 01c4 9100     		lsls	r1, r2, #2
 10315 01c6 1A46     		mov	r2, r3	@ movhi
 10316 01c8 0B46     		mov	r3, r1	@ movhi
 10317 01ca 1344     		add	r3, r3, r2
 10318 01cc 5B00     		lsls	r3, r3, #1
 10319 01ce 9BB2     		uxth	r3, r3
 10320 01d0 C933     		adds	r3, r3, #201
 10321 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1562:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1563:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1564:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1565:..\src/command_processing.c **** 
1566:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 10322              		.loc 1 1566 0
 10323 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 10324 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10325 01de 1344     		add	r3, r3, r2
 10326 01e0 9BB2     		uxth	r3, r3
 10327 01e2 0333     		adds	r3, r3, #3
 10328 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1567:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 10329              		.loc 1 1567 0
 10330 01e8 07F58A73 		add	r3, r7, #276
 10331 01ec A222     		movs	r2, #162
 10332 01ee 1A70     		strb	r2, [r3]
1568:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 10333              		.loc 1 1568 0
 10334 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10335 01f4 DAB2     		uxtb	r2, r3
 10336 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 240


 10337 01fa DBB2     		uxtb	r3, r3
 10338 01fc 1344     		add	r3, r3, r2
 10339 01fe DAB2     		uxtb	r2, r3
 10340 0200 634B     		ldr	r3, .L504
 10341 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10342 0204 1344     		add	r3, r3, r2
 10343 0206 DBB2     		uxtb	r3, r3
 10344 0208 0333     		adds	r3, r3, #3
 10345 020a DAB2     		uxtb	r2, r3
 10346 020c 07F58A73 		add	r3, r7, #276
 10347 0210 5A70     		strb	r2, [r3, #1]
1569:..\src/command_processing.c **** 
1570:..\src/command_processing.c ****     switch(index) {
 10348              		.loc 1 1570 0
 10349 0212 BB1D     		adds	r3, r7, #6
 10350 0214 1B88     		ldrh	r3, [r3]
 10351 0216 002B     		cmp	r3, #0
 10352 0218 40F0D084 		bne	.L502
1571:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1572:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1573:..\src/command_processing.c ****             start_byte = 0;
 10353              		.loc 1 1573 0
 10354 021c 0023     		movs	r3, #0
 10355 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1574:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 10356              		.loc 1 1574 0
 10357 0222 07F58A73 		add	r3, r7, #276
 10358 0226 0222     		movs	r2, #2
 10359 0228 9A70     		strb	r2, [r3, #2]
1575:..\src/command_processing.c ****             packet_data[3] = 1;
 10360              		.loc 1 1575 0
 10361 022a 07F58A73 		add	r3, r7, #276
 10362 022e 0122     		movs	r2, #1
 10363 0230 DA70     		strb	r2, [r3, #3]
1576:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 10364              		.loc 1 1576 0
 10365 0232 574B     		ldr	r3, .L504
 10366 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10367 0236 07F58A73 		add	r3, r7, #276
 10368 023a 1A71     		strb	r2, [r3, #4]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10369              		.loc 1 1577 0
 10370 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10371 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10372 0244 15E0     		b	.L462
 10373              	.L463:
1578:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 10374              		.loc 1 1578 0 discriminator 3
 10375 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10376 024a 5A1D     		adds	r2, r3, #5
 10377 024c B7F8A436 		ldrh	r3, [r7, #1700]
 10378 0250 D31A     		subs	r3, r2, r3
 10379 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 10380 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 10381 025a 8A1A     		subs	r2, r1, r2
 10382 025c 07F1F801 		add	r1, r7, #248
 10383 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 241


 10384 0262 07F58A72 		add	r2, r7, #276
 10385 0266 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10386              		.loc 1 1577 0 discriminator 3
 10387 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 10388 026c 013B     		subs	r3, r3, #1
 10389 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10390              	.L462:
1577:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10391              		.loc 1 1577 0 is_stmt 0 discriminator 1
 10392 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 10393 0276 002B     		cmp	r3, #0
 10394 0278 E5D1     		bne	.L463
1579:..\src/command_processing.c ****                 
1580:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1581:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10395              		.loc 1 1581 0 is_stmt 1
 10396 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10397 027e 3233     		adds	r3, r3, #50
 10398 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1582:..\src/command_processing.c ****             i = 0;
 10399              		.loc 1 1582 0
 10400 0284 0023     		movs	r3, #0
 10401 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1583:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 10402              		.loc 1 1583 0
 10403 028a 0023     		movs	r3, #0
 10404 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10405 0290 B2E0     		b	.L464
 10406              	.L471:
1584:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10407              		.loc 1 1584 0
 10408 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 10409 0296 07F1EC03 		add	r3, r7, #236
 10410 029a 4149     		ldr	r1, .L504+16
 10411 029c 1846     		mov	r0, r3
 10412 029e FFF7FEFF 		bl	sprintf
1585:..\src/command_processing.c ****                 h = 4;
 10413              		.loc 1 1585 0
 10414 02a2 0423     		movs	r3, #4
 10415 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1586:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 10416              		.loc 1 1586 0
 10417 02a8 07F1EC03 		add	r3, r7, #236
 10418 02ac 1846     		mov	r0, r3
 10419 02ae FFF7FEFF 		bl	strlen
 10420 02b2 0346     		mov	r3, r0
 10421 02b4 87F89136 		strb	r3, [r7, #1681]
1587:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10422              		.loc 1 1587 0
 10423 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 10424 02bc 9A1C     		adds	r2, r3, #2
 10425 02be B7F8A036 		ldrh	r3, [r7, #1696]
 10426 02c2 3221     		movs	r1, #50
 10427 02c4 01FB03F3 		mul	r3, r1, r3
 10428 02c8 1344     		add	r3, r3, r2
 10429 02ca 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 242


 10430 02ce 0221     		movs	r1, #2
 10431 02d0 D154     		strb	r1, [r2, r3]
1588:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10432              		.loc 1 1588 0
 10433 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 10434 02d6 DA1C     		adds	r2, r3, #3
 10435 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10436 02dc 3221     		movs	r1, #50
 10437 02de 01FB03F3 		mul	r3, r1, r3
 10438 02e2 1344     		add	r3, r3, r2
 10439 02e4 07F58A72 		add	r2, r7, #276
 10440 02e8 0321     		movs	r1, #3
 10441 02ea D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                 
1590:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 10442              		.loc 1 1590 0
 10443 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 10444 02f0 1A46     		mov	r2, r3	@ movhi
 10445 02f2 5200     		lsls	r2, r2, #1
 10446 02f4 1344     		add	r3, r3, r2
 10447 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10448 02fa 39E0     		b	.L465
 10449              	.L468:
1591:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10450              		.loc 1 1591 0
 10451 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 10452 0300 284A     		ldr	r2, .L504+20
 10453 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10454 0304 9BB2     		uxth	r3, r3
 10455 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 10456 030a 9A42     		cmp	r2, r3
 10457 030c 17D1     		bne	.L466
1592:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 10458              		.loc 1 1592 0
 10459 030e B7F89E26 		ldrh	r2, [r7, #1694]
 10460 0312 B7F89436 		ldrh	r3, [r7, #1684]
 10461 0316 1A44     		add	r2, r2, r3
 10462 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 10463 031c 3221     		movs	r1, #50
 10464 031e 01FB03F3 		mul	r3, r1, r3
 10465 0322 1344     		add	r3, r3, r2
 10466 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 10467 0328 1E49     		ldr	r1, .L504+20
 10468 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10469 032c 07F58A72 		add	r2, r7, #276
 10470 0330 D154     		strb	r1, [r2, r3]
1593:..\src/command_processing.c ****                         i++;
 10471              		.loc 1 1593 0
 10472 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 10473 0336 0133     		adds	r3, r3, #1
 10474 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10475 033c 0EE0     		b	.L467
 10476              	.L466:
1594:..\src/command_processing.c ****                     } 
1595:..\src/command_processing.c ****                     else {
1596:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 10477              		.loc 1 1596 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 243


 10478 033e B7F89E26 		ldrh	r2, [r7, #1694]
 10479 0342 B7F89436 		ldrh	r3, [r7, #1684]
 10480 0346 1A44     		add	r2, r2, r3
 10481 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 10482 034c 3221     		movs	r1, #50
 10483 034e 01FB03F3 		mul	r3, r1, r3
 10484 0352 1344     		add	r3, r3, r2
 10485 0354 07F58A72 		add	r2, r7, #276
 10486 0358 FF21     		movs	r1, #255
 10487 035a D154     		strb	r1, [r2, r3]
 10488              	.L467:
1597:..\src/command_processing.c ****                     }
1598:..\src/command_processing.c ****                     h++;
 10489              		.loc 1 1598 0 discriminator 2
 10490 035c B7F89E36 		ldrh	r3, [r7, #1694]
 10491 0360 0133     		adds	r3, r3, #1
 10492 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10493              		.loc 1 1590 0 discriminator 2
 10494 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 10495 036a 0133     		adds	r3, r3, #1
 10496 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10497              	.L465:
1590:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10498              		.loc 1 1590 0 is_stmt 0 discriminator 1
 10499 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 10500 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 10501 0378 1346     		mov	r3, r2
 10502 037a 5B00     		lsls	r3, r3, #1
 10503 037c 1344     		add	r3, r3, r2
 10504 037e 0233     		adds	r3, r3, #2
 10505 0380 9942     		cmp	r1, r3
 10506 0382 BBDD     		ble	.L468
1599:..\src/command_processing.c ****                 }
1600:..\src/command_processing.c **** 
1601:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1602:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 10507              		.loc 1 1602 0 is_stmt 1
 10508 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10509 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10510 038c 2BE0     		b	.L469
 10511              	.L505:
 10512 038e 00BF     		.align	2
 10513              	.L504:
 10514 0390 00000000 		.word	N_IMU_Connected
 10515 0394 7C0E0000 		.word	.LC123
 10516 0398 980E0000 		.word	.LC124
 10517 039c B0010000 		.word	.LC113
 10518 03a0 140E0000 		.word	.LC125
 10519 03a4 00000000 		.word	IMU_connected
 10520              	.L470:
1603:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10521              		.loc 1 1603 0 discriminator 3
 10522 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 10523 03ac DA1D     		adds	r2, r3, #7
 10524 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 10525 03b2 3221     		movs	r1, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 244


 10526 03b4 01FB03F3 		mul	r3, r1, r3
 10527 03b8 1A44     		add	r2, r2, r3
 10528 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10529 03be 1A44     		add	r2, r2, r3
 10530 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 10531 03c4 D31A     		subs	r3, r2, r3
 10532 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 10533 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 10534 03ce 8A1A     		subs	r2, r1, r2
 10535 03d0 07F1EC01 		add	r1, r7, #236
 10536 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10537 03d6 07F58A72 		add	r2, r7, #276
 10538 03da D154     		strb	r1, [r2, r3]
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10539              		.loc 1 1602 0 discriminator 3
 10540 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 10541 03e0 013B     		subs	r3, r3, #1
 10542 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10543              	.L469:
1602:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10544              		.loc 1 1602 0 is_stmt 0 discriminator 1
 10545 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 10546 03ea 002B     		cmp	r3, #0
 10547 03ec DCD1     		bne	.L470
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10548              		.loc 1 1583 0 is_stmt 1 discriminator 2
 10549 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 10550 03f2 0133     		adds	r3, r3, #1
 10551 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10552              	.L464:
1583:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10553              		.loc 1 1583 0 is_stmt 0 discriminator 1
 10554 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 10555 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 10556 0400 9A42     		cmp	r2, r3
 10557 0402 FFF446AF 		bcc	.L471
1604:..\src/command_processing.c ****             }
1605:..\src/command_processing.c ****             
1606:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1607:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 10558              		.loc 1 1607 0 is_stmt 1
 10559 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10560 040a 1A46     		mov	r2, r3	@ movhi
 10561 040c 9200     		lsls	r2, r2, #2
 10562 040e 1344     		add	r3, r3, r2
 10563 0410 1A46     		mov	r2, r3	@ movhi
 10564 0412 9100     		lsls	r1, r2, #2
 10565 0414 1A46     		mov	r2, r3	@ movhi
 10566 0416 0B46     		mov	r3, r1	@ movhi
 10567 0418 1344     		add	r3, r3, r2
 10568 041a 5B00     		lsls	r3, r3, #1
 10569 041c 9AB2     		uxth	r2, r3
 10570 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10571 0422 1344     		add	r3, r3, r2
 10572 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1608:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 10573              		.loc 1 1608 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 245


 10574 0428 0023     		movs	r3, #0
 10575 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10576 042e 1FE1     		b	.L472
 10577              	.L479:
1609:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10578              		.loc 1 1609 0
 10579 0430 B7F89436 		ldrh	r3, [r7, #1684]
 10580 0434 9A1C     		adds	r2, r3, #2
 10581 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 10582 043a 3221     		movs	r1, #50
 10583 043c 01FB03F3 		mul	r3, r1, r3
 10584 0440 1344     		add	r3, r3, r2
 10585 0442 07F58A72 		add	r2, r7, #276
 10586 0446 0221     		movs	r1, #2
 10587 0448 D154     		strb	r1, [r2, r3]
1610:..\src/command_processing.c ****                 
1611:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10588              		.loc 1 1611 0
 10589 044a B7F89436 		ldrh	r3, [r7, #1684]
 10590 044e DA1C     		adds	r2, r3, #3
 10591 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 10592 0454 3221     		movs	r1, #50
 10593 0456 01FB03F3 		mul	r3, r1, r3
 10594 045a 1344     		add	r3, r3, r2
 10595 045c 07F58A72 		add	r2, r7, #276
 10596 0460 0321     		movs	r1, #3
 10597 0462 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10598              		.loc 1 1612 0
 10599 0464 B7F89436 		ldrh	r3, [r7, #1684]
 10600 0468 1A1D     		adds	r2, r3, #4
 10601 046a B7F8A036 		ldrh	r3, [r7, #1696]
 10602 046e 3221     		movs	r1, #50
 10603 0470 01FB03F3 		mul	r3, r1, r3
 10604 0474 1A44     		add	r2, r2, r3
 10605 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 10606 047a 5B00     		lsls	r3, r3, #1
 10607 047c B249     		ldr	r1, .L506
 10608 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10609 0480 1846     		mov	r0, r3
 10610 0482 B249     		ldr	r1, .L506+4
 10611 0484 0346     		mov	r3, r0
 10612 0486 5B00     		lsls	r3, r3, #1
 10613 0488 0344     		add	r3, r3, r0
 10614 048a 0B44     		add	r3, r3, r1
 10615 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10616 048e 07F58A73 		add	r3, r7, #276
 10617 0492 9954     		strb	r1, [r3, r2]
1613:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10618              		.loc 1 1613 0
 10619 0494 B7F89436 		ldrh	r3, [r7, #1684]
 10620 0498 5A1D     		adds	r2, r3, #5
 10621 049a B7F8A036 		ldrh	r3, [r7, #1696]
 10622 049e 3221     		movs	r1, #50
 10623 04a0 01FB03F3 		mul	r3, r1, r3
 10624 04a4 1A44     		add	r2, r2, r3
 10625 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 246


 10626 04aa 5B00     		lsls	r3, r3, #1
 10627 04ac A649     		ldr	r1, .L506
 10628 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10629 04b0 1846     		mov	r0, r3
 10630 04b2 A649     		ldr	r1, .L506+4
 10631 04b4 0346     		mov	r3, r0
 10632 04b6 5B00     		lsls	r3, r3, #1
 10633 04b8 0344     		add	r3, r3, r0
 10634 04ba 0B44     		add	r3, r3, r1
 10635 04bc 0133     		adds	r3, r3, #1
 10636 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10637 04c0 07F58A73 		add	r3, r7, #276
 10638 04c4 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10639              		.loc 1 1614 0
 10640 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 10641 04ca 9A1D     		adds	r2, r3, #6
 10642 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 10643 04d0 3221     		movs	r1, #50
 10644 04d2 01FB03F3 		mul	r3, r1, r3
 10645 04d6 1A44     		add	r2, r2, r3
 10646 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10647 04dc 5B00     		lsls	r3, r3, #1
 10648 04de 9A49     		ldr	r1, .L506
 10649 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10650 04e2 1846     		mov	r0, r3
 10651 04e4 9949     		ldr	r1, .L506+4
 10652 04e6 0346     		mov	r3, r0
 10653 04e8 5B00     		lsls	r3, r3, #1
 10654 04ea 0344     		add	r3, r3, r0
 10655 04ec 0B44     		add	r3, r3, r1
 10656 04ee 0233     		adds	r3, r3, #2
 10657 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10658 04f2 07F58A73 		add	r3, r7, #276
 10659 04f6 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                 // check if there is a second value
1617:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 10660              		.loc 1 1617 0
 10661 04f8 954B     		ldr	r3, .L506+8
 10662 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10663 04fc 1A46     		mov	r2, r3
 10664 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 10665 0502 0133     		adds	r3, r3, #1
 10666 0504 5B00     		lsls	r3, r3, #1
 10667 0506 9A42     		cmp	r2, r3
 10668 0508 28DA     		bge	.L473
1618:..\src/command_processing.c ****                     // there is only one value
1619:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10669              		.loc 1 1619 0
 10670 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10671 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10672 0512 1EE0     		b	.L474
 10673              	.L475:
1620:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10674              		.loc 1 1620 0 discriminator 3
 10675 0514 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 247


 10676 0518 DA1D     		adds	r2, r3, #7
 10677 051a B7F8A036 		ldrh	r3, [r7, #1696]
 10678 051e 3221     		movs	r1, #50
 10679 0520 01FB03F3 		mul	r3, r1, r3
 10680 0524 1A44     		add	r2, r2, r3
 10681 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10682 052a 1A44     		add	r2, r2, r3
 10683 052c B7F8A236 		ldrh	r3, [r7, #1698]
 10684 0530 D31A     		subs	r3, r2, r3
 10685 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10686 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 10687 053a 8A1A     		subs	r2, r1, r2
 10688 053c 07F1D801 		add	r1, r7, #216
 10689 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10690 0542 07F58A72 		add	r2, r7, #276
 10691 0546 D154     		strb	r1, [r2, r3]
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10692              		.loc 1 1619 0 discriminator 3
 10693 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 10694 054c 013B     		subs	r3, r3, #1
 10695 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10696              	.L474:
1619:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10697              		.loc 1 1619 0 is_stmt 0 discriminator 1
 10698 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 10699 0556 002B     		cmp	r3, #0
 10700 0558 DCD1     		bne	.L475
 10701 055a 84E0     		b	.L476
 10702              	.L473:
1621:..\src/command_processing.c ****                 }
1622:..\src/command_processing.c ****                 else {
1623:..\src/command_processing.c ****                     // fill the second value
1624:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 10703              		.loc 1 1624 0 is_stmt 1
 10704 055c B7F89436 		ldrh	r3, [r7, #1684]
 10705 0560 DA1C     		adds	r2, r3, #3
 10706 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 10707 0566 3221     		movs	r1, #50
 10708 0568 01FB03F3 		mul	r3, r1, r3
 10709 056c 1344     		add	r3, r3, r2
 10710 056e 07F58A72 		add	r2, r7, #276
 10711 0572 0621     		movs	r1, #6
 10712 0574 D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10713              		.loc 1 1625 0
 10714 0576 B7F89436 		ldrh	r3, [r7, #1684]
 10715 057a DA1D     		adds	r2, r3, #7
 10716 057c B7F8A036 		ldrh	r3, [r7, #1696]
 10717 0580 3221     		movs	r1, #50
 10718 0582 01FB03F3 		mul	r3, r1, r3
 10719 0586 1A44     		add	r2, r2, r3
 10720 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 10721 058c 5B00     		lsls	r3, r3, #1
 10722 058e 0133     		adds	r3, r3, #1
 10723 0590 6D49     		ldr	r1, .L506
 10724 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10725 0594 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 248


 10726 0596 6D49     		ldr	r1, .L506+4
 10727 0598 0346     		mov	r3, r0
 10728 059a 5B00     		lsls	r3, r3, #1
 10729 059c 0344     		add	r3, r3, r0
 10730 059e 0B44     		add	r3, r3, r1
 10731 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10732 05a2 07F58A73 		add	r3, r7, #276
 10733 05a6 9954     		strb	r1, [r3, r2]
1626:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10734              		.loc 1 1626 0
 10735 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 10736 05ac 03F10802 		add	r2, r3, #8
 10737 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 10738 05b4 3221     		movs	r1, #50
 10739 05b6 01FB03F3 		mul	r3, r1, r3
 10740 05ba 1A44     		add	r2, r2, r3
 10741 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 10742 05c0 5B00     		lsls	r3, r3, #1
 10743 05c2 0133     		adds	r3, r3, #1
 10744 05c4 6049     		ldr	r1, .L506
 10745 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10746 05c8 1846     		mov	r0, r3
 10747 05ca 6049     		ldr	r1, .L506+4
 10748 05cc 0346     		mov	r3, r0
 10749 05ce 5B00     		lsls	r3, r3, #1
 10750 05d0 0344     		add	r3, r3, r0
 10751 05d2 0B44     		add	r3, r3, r1
 10752 05d4 0133     		adds	r3, r3, #1
 10753 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10754 05d8 07F58A73 		add	r3, r7, #276
 10755 05dc 9954     		strb	r1, [r3, r2]
1627:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10756              		.loc 1 1627 0
 10757 05de B7F89436 		ldrh	r3, [r7, #1684]
 10758 05e2 03F10902 		add	r2, r3, #9
 10759 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 10760 05ea 3221     		movs	r1, #50
 10761 05ec 01FB03F3 		mul	r3, r1, r3
 10762 05f0 1A44     		add	r2, r2, r3
 10763 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 10764 05f6 5B00     		lsls	r3, r3, #1
 10765 05f8 0133     		adds	r3, r3, #1
 10766 05fa 5349     		ldr	r1, .L506
 10767 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10768 05fe 1846     		mov	r0, r3
 10769 0600 5249     		ldr	r1, .L506+4
 10770 0602 0346     		mov	r3, r0
 10771 0604 5B00     		lsls	r3, r3, #1
 10772 0606 0344     		add	r3, r3, r0
 10773 0608 0B44     		add	r3, r3, r1
 10774 060a 0233     		adds	r3, r3, #2
 10775 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10776 060e 07F58A73 		add	r3, r7, #276
 10777 0612 9954     		strb	r1, [r3, r2]
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10778              		.loc 1 1629 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 249


 10779 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10780 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10781 061c 1FE0     		b	.L477
 10782              	.L478:
1630:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10783              		.loc 1 1630 0 discriminator 3
 10784 061e B7F89436 		ldrh	r3, [r7, #1684]
 10785 0622 03F10A02 		add	r2, r3, #10
 10786 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 10787 062a 3221     		movs	r1, #50
 10788 062c 01FB03F3 		mul	r3, r1, r3
 10789 0630 1A44     		add	r2, r2, r3
 10790 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10791 0636 1A44     		add	r2, r2, r3
 10792 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 10793 063c D31A     		subs	r3, r2, r3
 10794 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10795 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 10796 0646 8A1A     		subs	r2, r1, r2
 10797 0648 07F1D801 		add	r1, r7, #216
 10798 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10799 064e 07F58A72 		add	r2, r7, #276
 10800 0652 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10801              		.loc 1 1629 0 discriminator 3
 10802 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 10803 0658 013B     		subs	r3, r3, #1
 10804 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10805              	.L477:
1629:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10806              		.loc 1 1629 0 is_stmt 0 discriminator 1
 10807 065e B7F8A236 		ldrh	r3, [r7, #1698]
 10808 0662 002B     		cmp	r3, #0
 10809 0664 DBD1     		bne	.L478
 10810              	.L476:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10811              		.loc 1 1608 0 is_stmt 1 discriminator 2
 10812 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 10813 066a 0133     		adds	r3, r3, #1
 10814 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10815              	.L472:
1608:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10816              		.loc 1 1608 0 is_stmt 0 discriminator 1
 10817 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 10818 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 10819 0678 9A42     		cmp	r2, r3
 10820 067a FFF4D9AE 		bcc	.L479
1631:..\src/command_processing.c ****                 }
1632:..\src/command_processing.c ****             }
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 10821              		.loc 1 1636 0 is_stmt 1
 10822 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10823 0682 1A46     		mov	r2, r3	@ movhi
 10824 0684 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 250


 10825 0686 1344     		add	r3, r3, r2
 10826 0688 1A46     		mov	r2, r3	@ movhi
 10827 068a 9100     		lsls	r1, r2, #2
 10828 068c 1A46     		mov	r2, r3	@ movhi
 10829 068e 0B46     		mov	r3, r1	@ movhi
 10830 0690 1344     		add	r3, r3, r2
 10831 0692 5B00     		lsls	r3, r3, #1
 10832 0694 9AB2     		uxth	r2, r3
 10833 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10834 069a 1344     		add	r3, r3, r2
 10835 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1637:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 10836              		.loc 1 1637 0
 10837 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 10838 06a4 5A1E     		subs	r2, r3, #1
 10839 06a6 07F1C803 		add	r3, r7, #200
 10840 06aa 2A49     		ldr	r1, .L506+12
 10841 06ac 1846     		mov	r0, r3
 10842 06ae FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 10843              		.loc 1 1638 0
 10844 06b2 07F1C803 		add	r3, r7, #200
 10845 06b6 1846     		mov	r0, r3
 10846 06b8 FFF7FEFF 		bl	strlen
 10847 06bc 0346     		mov	r3, r0
 10848 06be 87F89336 		strb	r3, [r7, #1683]
1639:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 10849              		.loc 1 1639 0
 10850 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 10851 06c6 0233     		adds	r3, r3, #2
 10852 06c8 07F58A72 		add	r2, r7, #276
 10853 06cc 0221     		movs	r1, #2
 10854 06ce D154     		strb	r1, [r2, r3]
1640:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 10855              		.loc 1 1640 0
 10856 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 10857 06d4 0333     		adds	r3, r3, #3
 10858 06d6 07F58A72 		add	r2, r7, #276
 10859 06da 0121     		movs	r1, #1
 10860 06dc D154     		strb	r1, [r2, r3]
1641:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 10861              		.loc 1 1641 0
 10862 06de B7F89436 		ldrh	r3, [r7, #1684]
 10863 06e2 0433     		adds	r3, r3, #4
 10864 06e4 1C4A     		ldr	r2, .L506+16
 10865 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 10866 06ea 07F58A72 		add	r2, r7, #276
 10867 06ee D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10868              		.loc 1 1642 0
 10869 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10870 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10871 06f8 18E0     		b	.L480
 10872              	.L481:
1643:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 10873              		.loc 1 1643 0 discriminator 3
 10874 06fa B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 251


 10875 06fe 5A1D     		adds	r2, r3, #5
 10876 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10877 0704 1A44     		add	r2, r2, r3
 10878 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 10879 070a D31A     		subs	r3, r2, r3
 10880 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 10881 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 10882 0714 8A1A     		subs	r2, r1, r2
 10883 0716 07F1C801 		add	r1, r7, #200
 10884 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10885 071c 07F58A72 		add	r2, r7, #276
 10886 0720 D154     		strb	r1, [r2, r3]
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10887              		.loc 1 1642 0 discriminator 3
 10888 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 10889 0726 013B     		subs	r3, r3, #1
 10890 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10891              	.L480:
1642:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10892              		.loc 1 1642 0 is_stmt 0 discriminator 1
 10893 072c B7F8A436 		ldrh	r3, [r7, #1700]
 10894 0730 002B     		cmp	r3, #0
 10895 0732 E2D1     		bne	.L481
1644:..\src/command_processing.c ****                 
1645:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1646:..\src/command_processing.c ****             
1647:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10896              		.loc 1 1647 0 is_stmt 1
 10897 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10898 0738 3233     		adds	r3, r3, #50
 10899 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1648:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 10900              		.loc 1 1648 0
 10901 073e 0023     		movs	r3, #0
 10902 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10903 0744 38E1     		b	.L482
 10904              	.L507:
 10905 0746 00BF     		.align	2
 10906              	.L506:
 10907 0748 00000000 		.word	IMU_connected
 10908 074c 00000000 		.word	MagCal
 10909 0750 00000000 		.word	N_IMU_Connected
 10910 0754 200E0000 		.word	.LC126
 10911 0758 00000000 		.word	c_mem
 10912              	.L485:
1649:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 10913              		.loc 1 1649 0
 10914 075c B7F89826 		ldrh	r2, [r7, #1688]
 10915 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 10916 0764 D118     		adds	r1, r2, r3
 10917 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 10918 076a D54A     		ldr	r2, .L508
 10919 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10920 076e 07F19C00 		add	r0, r7, #156
 10921 0772 0A46     		mov	r2, r1
 10922 0774 D349     		ldr	r1, .L508+4
 10923 0776 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 252


1650:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 10924              		.loc 1 1650 0
 10925 077a 07F19C03 		add	r3, r7, #156
 10926 077e 1846     		mov	r0, r3
 10927 0780 FFF7FEFF 		bl	strlen
 10928 0784 0346     		mov	r3, r0
 10929 0786 87F88F36 		strb	r3, [r7, #1679]
1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 10930              		.loc 1 1652 0
 10931 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10932 078e 1A46     		mov	r2, r3	@ movhi
 10933 0790 9200     		lsls	r2, r2, #2
 10934 0792 1344     		add	r3, r3, r2
 10935 0794 1A46     		mov	r2, r3	@ movhi
 10936 0796 9100     		lsls	r1, r2, #2
 10937 0798 1A46     		mov	r2, r3	@ movhi
 10938 079a 0B46     		mov	r3, r1	@ movhi
 10939 079c 1344     		add	r3, r3, r2
 10940 079e 5B00     		lsls	r3, r3, #1
 10941 07a0 9AB2     		uxth	r2, r3
 10942 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10943 07a6 1344     		add	r3, r3, r2
 10944 07a8 9BB2     		uxth	r3, r3
 10945 07aa 0233     		adds	r3, r3, #2
 10946 07ac 9BB2     		uxth	r3, r3
 10947 07ae 1A46     		mov	r2, r3
 10948 07b0 07F58A73 		add	r3, r7, #276
 10949 07b4 0221     		movs	r1, #2
 10950 07b6 9954     		strb	r1, [r3, r2]
1653:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 10951              		.loc 1 1653 0
 10952 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10953 07bc 1A46     		mov	r2, r3	@ movhi
 10954 07be 9200     		lsls	r2, r2, #2
 10955 07c0 1344     		add	r3, r3, r2
 10956 07c2 1A46     		mov	r2, r3	@ movhi
 10957 07c4 9100     		lsls	r1, r2, #2
 10958 07c6 1A46     		mov	r2, r3	@ movhi
 10959 07c8 0B46     		mov	r3, r1	@ movhi
 10960 07ca 1344     		add	r3, r3, r2
 10961 07cc 5B00     		lsls	r3, r3, #1
 10962 07ce 9AB2     		uxth	r2, r3
 10963 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10964 07d4 1344     		add	r3, r3, r2
 10965 07d6 9BB2     		uxth	r3, r3
 10966 07d8 0333     		adds	r3, r3, #3
 10967 07da 9BB2     		uxth	r3, r3
 10968 07dc 1A46     		mov	r2, r3
 10969 07de 07F58A73 		add	r3, r7, #276
 10970 07e2 0521     		movs	r1, #5
 10971 07e4 9954     		strb	r1, [r3, r2]
1654:..\src/command_processing.c ****                 
1655:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10972              		.loc 1 1655 0
 10973 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10974 07ea 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 253


 10975 07ec 9200     		lsls	r2, r2, #2
 10976 07ee 1344     		add	r3, r3, r2
 10977 07f0 1A46     		mov	r2, r3	@ movhi
 10978 07f2 9100     		lsls	r1, r2, #2
 10979 07f4 1A46     		mov	r2, r3	@ movhi
 10980 07f6 0B46     		mov	r3, r1	@ movhi
 10981 07f8 1344     		add	r3, r3, r2
 10982 07fa 5B00     		lsls	r3, r3, #1
 10983 07fc 9AB2     		uxth	r2, r3
 10984 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10985 0802 1344     		add	r3, r3, r2
 10986 0804 9BB2     		uxth	r3, r3
 10987 0806 0433     		adds	r3, r3, #4
 10988 0808 9BB2     		uxth	r3, r3
 10989 080a 1846     		mov	r0, r3
 10990 080c B7F8A436 		ldrh	r3, [r7, #1700]
 10991 0810 AB4A     		ldr	r2, .L508
 10992 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10993 0814 1946     		mov	r1, r3
 10994 0816 AC4A     		ldr	r2, .L508+8
 10995 0818 0B46     		mov	r3, r1
 10996 081a 9B00     		lsls	r3, r3, #2
 10997 081c 0B44     		add	r3, r3, r1
 10998 081e 1344     		add	r3, r3, r2
 10999 0820 03F20223 		addw	r3, r3, #514
 11000 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11001 0826 07F58A73 		add	r3, r7, #276
 11002 082a 1A54     		strb	r2, [r3, r0]
1656:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11003              		.loc 1 1656 0
 11004 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11005 0830 1A46     		mov	r2, r3	@ movhi
 11006 0832 9200     		lsls	r2, r2, #2
 11007 0834 1344     		add	r3, r3, r2
 11008 0836 1A46     		mov	r2, r3	@ movhi
 11009 0838 9100     		lsls	r1, r2, #2
 11010 083a 1A46     		mov	r2, r3	@ movhi
 11011 083c 0B46     		mov	r3, r1	@ movhi
 11012 083e 1344     		add	r3, r3, r2
 11013 0840 5B00     		lsls	r3, r3, #1
 11014 0842 9AB2     		uxth	r2, r3
 11015 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11016 0848 1344     		add	r3, r3, r2
 11017 084a 9BB2     		uxth	r3, r3
 11018 084c 0533     		adds	r3, r3, #5
 11019 084e 9BB2     		uxth	r3, r3
 11020 0850 1846     		mov	r0, r3
 11021 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 11022 0856 9A4A     		ldr	r2, .L508
 11023 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11024 085a 1946     		mov	r1, r3
 11025 085c 9A4A     		ldr	r2, .L508+8
 11026 085e 0B46     		mov	r3, r1
 11027 0860 9B00     		lsls	r3, r3, #2
 11028 0862 0B44     		add	r3, r3, r1
 11029 0864 1344     		add	r3, r3, r2
 11030 0866 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 254


 11031 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11032 086c 07F58A73 		add	r3, r7, #276
 11033 0870 1A54     		strb	r2, [r3, r0]
1657:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11034              		.loc 1 1657 0
 11035 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11036 0876 1A46     		mov	r2, r3	@ movhi
 11037 0878 9200     		lsls	r2, r2, #2
 11038 087a 1344     		add	r3, r3, r2
 11039 087c 1A46     		mov	r2, r3	@ movhi
 11040 087e 9100     		lsls	r1, r2, #2
 11041 0880 1A46     		mov	r2, r3	@ movhi
 11042 0882 0B46     		mov	r3, r1	@ movhi
 11043 0884 1344     		add	r3, r3, r2
 11044 0886 5B00     		lsls	r3, r3, #1
 11045 0888 9AB2     		uxth	r2, r3
 11046 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11047 088e 1344     		add	r3, r3, r2
 11048 0890 9BB2     		uxth	r3, r3
 11049 0892 0633     		adds	r3, r3, #6
 11050 0894 9BB2     		uxth	r3, r3
 11051 0896 1846     		mov	r0, r3
 11052 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 11053 089c 884A     		ldr	r2, .L508
 11054 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11055 08a0 1946     		mov	r1, r3
 11056 08a2 894A     		ldr	r2, .L508+8
 11057 08a4 0B46     		mov	r3, r1
 11058 08a6 9B00     		lsls	r3, r3, #2
 11059 08a8 0B44     		add	r3, r3, r1
 11060 08aa 1344     		add	r3, r3, r2
 11061 08ac 03F50173 		add	r3, r3, #516
 11062 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11063 08b2 07F58A73 		add	r3, r7, #276
 11064 08b6 1A54     		strb	r2, [r3, r0]
1658:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11065              		.loc 1 1658 0
 11066 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11067 08bc 1A46     		mov	r2, r3	@ movhi
 11068 08be 9200     		lsls	r2, r2, #2
 11069 08c0 1344     		add	r3, r3, r2
 11070 08c2 1A46     		mov	r2, r3	@ movhi
 11071 08c4 9100     		lsls	r1, r2, #2
 11072 08c6 1A46     		mov	r2, r3	@ movhi
 11073 08c8 0B46     		mov	r3, r1	@ movhi
 11074 08ca 1344     		add	r3, r3, r2
 11075 08cc 5B00     		lsls	r3, r3, #1
 11076 08ce 9AB2     		uxth	r2, r3
 11077 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11078 08d4 1344     		add	r3, r3, r2
 11079 08d6 9BB2     		uxth	r3, r3
 11080 08d8 0733     		adds	r3, r3, #7
 11081 08da 9BB2     		uxth	r3, r3
 11082 08dc 1846     		mov	r0, r3
 11083 08de B7F8A436 		ldrh	r3, [r7, #1700]
 11084 08e2 774A     		ldr	r2, .L508
 11085 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 255


 11086 08e6 1946     		mov	r1, r3
 11087 08e8 774A     		ldr	r2, .L508+8
 11088 08ea 0B46     		mov	r3, r1
 11089 08ec 9B00     		lsls	r3, r3, #2
 11090 08ee 0B44     		add	r3, r3, r1
 11091 08f0 1344     		add	r3, r3, r2
 11092 08f2 03F20523 		addw	r3, r3, #517
 11093 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11094 08f8 07F58A73 		add	r3, r7, #276
 11095 08fc 1A54     		strb	r2, [r3, r0]
1659:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11096              		.loc 1 1659 0
 11097 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11098 0902 1A46     		mov	r2, r3	@ movhi
 11099 0904 9200     		lsls	r2, r2, #2
 11100 0906 1344     		add	r3, r3, r2
 11101 0908 1A46     		mov	r2, r3	@ movhi
 11102 090a 9100     		lsls	r1, r2, #2
 11103 090c 1A46     		mov	r2, r3	@ movhi
 11104 090e 0B46     		mov	r3, r1	@ movhi
 11105 0910 1344     		add	r3, r3, r2
 11106 0912 5B00     		lsls	r3, r3, #1
 11107 0914 9AB2     		uxth	r2, r3
 11108 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11109 091a 1344     		add	r3, r3, r2
 11110 091c 9BB2     		uxth	r3, r3
 11111 091e 0833     		adds	r3, r3, #8
 11112 0920 9BB2     		uxth	r3, r3
 11113 0922 1846     		mov	r0, r3
 11114 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 11115 0928 654A     		ldr	r2, .L508
 11116 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11117 092c 1946     		mov	r1, r3
 11118 092e 664A     		ldr	r2, .L508+8
 11119 0930 0B46     		mov	r3, r1
 11120 0932 9B00     		lsls	r3, r3, #2
 11121 0934 0B44     		add	r3, r3, r1
 11122 0936 1344     		add	r3, r3, r2
 11123 0938 03F20623 		addw	r3, r3, #518
 11124 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11125 093e 07F58A73 		add	r3, r7, #276
 11126 0942 1A54     		strb	r2, [r3, r0]
1660:..\src/command_processing.c **** 
1661:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 11127              		.loc 1 1661 0
 11128 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11129 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11130 094c 2BE0     		b	.L483
 11131              	.L484:
1662:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11132              		.loc 1 1662 0 discriminator 3
 11133 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11134 0952 1A46     		mov	r2, r3	@ movhi
 11135 0954 9200     		lsls	r2, r2, #2
 11136 0956 1344     		add	r3, r3, r2
 11137 0958 1A46     		mov	r2, r3	@ movhi
 11138 095a 9100     		lsls	r1, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 256


 11139 095c 1A46     		mov	r2, r3	@ movhi
 11140 095e 0B46     		mov	r3, r1	@ movhi
 11141 0960 1344     		add	r3, r3, r2
 11142 0962 5B00     		lsls	r3, r3, #1
 11143 0964 9AB2     		uxth	r2, r3
 11144 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11145 096a 1344     		add	r3, r3, r2
 11146 096c 9AB2     		uxth	r2, r3
 11147 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11148 0972 9BB2     		uxth	r3, r3
 11149 0974 1344     		add	r3, r3, r2
 11150 0976 9AB2     		uxth	r2, r3
 11151 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 11152 097c D31A     		subs	r3, r2, r3
 11153 097e 9BB2     		uxth	r3, r3
 11154 0980 0933     		adds	r3, r3, #9
 11155 0982 9BB2     		uxth	r3, r3
 11156 0984 1946     		mov	r1, r3
 11157 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 11158 098a B7F8A236 		ldrh	r3, [r7, #1698]
 11159 098e D31A     		subs	r3, r2, r3
 11160 0990 07F19C02 		add	r2, r7, #156
 11161 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11162 0996 07F58A73 		add	r3, r7, #276
 11163 099a 5A54     		strb	r2, [r3, r1]
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11164              		.loc 1 1661 0 discriminator 3
 11165 099c B7F8A236 		ldrh	r3, [r7, #1698]
 11166 09a0 013B     		subs	r3, r3, #1
 11167 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11168              	.L483:
1661:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11169              		.loc 1 1661 0 is_stmt 0 discriminator 1
 11170 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 11171 09aa 002B     		cmp	r3, #0
 11172 09ac CFD1     		bne	.L484
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11173              		.loc 1 1648 0 is_stmt 1 discriminator 2
 11174 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 11175 09b2 0133     		adds	r3, r3, #1
 11176 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11177              	.L482:
1648:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11178              		.loc 1 1648 0 is_stmt 0 discriminator 1
 11179 09b8 444B     		ldr	r3, .L508+12
 11180 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11181 09bc 9BB2     		uxth	r3, r3
 11182 09be B7F8A426 		ldrh	r2, [r7, #1700]
 11183 09c2 9A42     		cmp	r2, r3
 11184 09c4 FFF4CAAE 		bcc	.L485
1663:..\src/command_processing.c ****             }  
1664:..\src/command_processing.c ****           
1665:..\src/command_processing.c **** 
1666:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1667:..\src/command_processing.c ****             
1668:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 11185              		.loc 1 1668 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 257


 11186 09c8 404B     		ldr	r3, .L508+12
 11187 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11188 09cc 9BB2     		uxth	r3, r3
 11189 09ce 1A46     		mov	r2, r3	@ movhi
 11190 09d0 9200     		lsls	r2, r2, #2
 11191 09d2 1344     		add	r3, r3, r2
 11192 09d4 1A46     		mov	r2, r3	@ movhi
 11193 09d6 9100     		lsls	r1, r2, #2
 11194 09d8 1A46     		mov	r2, r3	@ movhi
 11195 09da 0B46     		mov	r3, r1	@ movhi
 11196 09dc 1344     		add	r3, r3, r2
 11197 09de 5B00     		lsls	r3, r3, #1
 11198 09e0 9AB2     		uxth	r2, r3
 11199 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11200 09e6 1344     		add	r3, r3, r2
 11201 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1669:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 11202              		.loc 1 1669 0
 11203 09ec B7F89836 		ldrh	r3, [r7, #1688]
 11204 09f0 364A     		ldr	r2, .L508+12
 11205 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11206 09f4 1A44     		add	r2, r2, r3
 11207 09f6 07F18003 		add	r3, r7, #128
 11208 09fa 3549     		ldr	r1, .L508+16
 11209 09fc 1846     		mov	r0, r3
 11210 09fe FFF7FEFF 		bl	sprintf
1670:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 11211              		.loc 1 1670 0
 11212 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 11213 0a06 0233     		adds	r3, r3, #2
 11214 0a08 07F58A72 		add	r2, r7, #276
 11215 0a0c 0021     		movs	r1, #0
 11216 0a0e D154     		strb	r1, [r2, r3]
1671:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11217              		.loc 1 1671 0
 11218 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 11219 0a14 0333     		adds	r3, r3, #3
 11220 0a16 07F58A72 		add	r2, r7, #276
 11221 0a1a 0121     		movs	r1, #1
 11222 0a1c D154     		strb	r1, [r2, r3]
1672:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 11223              		.loc 1 1672 0
 11224 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 11225 0a22 0433     		adds	r3, r3, #4
 11226 0a24 284A     		ldr	r2, .L508+8
 11227 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 11228 0a2a 07F58A72 		add	r2, r7, #276
 11229 0a2e D154     		strb	r1, [r2, r3]
1673:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 11230              		.loc 1 1673 0
 11231 0a30 254B     		ldr	r3, .L508+8
 11232 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 11233 0a36 012B     		cmp	r3, #1
 11234 0a38 17D0     		beq	.L487
 11235 0a3a 022B     		cmp	r3, #2
 11236 0a3c 28D0     		beq	.L488
 11237 0a3e 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 258


 11238 0a40 00D0     		beq	.L489
1674:..\src/command_processing.c ****                 case 0: 
1675:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1676:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1677:..\src/command_processing.c ****                     break;
1678:..\src/command_processing.c ****                 case 1: 
1679:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1680:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1681:..\src/command_processing.c ****                     break;
1682:..\src/command_processing.c ****                 case 2: 
1683:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1684:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1685:..\src/command_processing.c ****                     break;
1686:..\src/command_processing.c ****                 default:
1687:..\src/command_processing.c ****                     break;
 11239              		.loc 1 1687 0
 11240 0a42 38E0     		b	.L490
 11241              	.L489:
1675:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11242              		.loc 1 1675 0
 11243 0a44 07F18003 		add	r3, r7, #128
 11244 0a48 1846     		mov	r0, r3
 11245 0a4a FFF7FEFF 		bl	strlen
 11246 0a4e 0346     		mov	r3, r0
 11247 0a50 1A46     		mov	r2, r3
 11248 0a52 07F18003 		add	r3, r7, #128
 11249 0a56 1344     		add	r3, r3, r2
 11250 0a58 1E4A     		ldr	r2, .L508+20
 11251 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 11252 0a5c 1860     		str	r0, [r3]	@ unaligned
 11253 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11254 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1676:..\src/command_processing.c ****                     break;
 11255              		.loc 1 1676 0
 11256 0a62 1A23     		movs	r3, #26
 11257 0a64 87F89D36 		strb	r3, [r7, #1693]
1677:..\src/command_processing.c ****                 case 1: 
 11258              		.loc 1 1677 0
 11259 0a68 25E0     		b	.L490
 11260              	.L487:
1679:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 11261              		.loc 1 1679 0
 11262 0a6a 07F18003 		add	r3, r7, #128
 11263 0a6e 1846     		mov	r0, r3
 11264 0a70 FFF7FEFF 		bl	strlen
 11265 0a74 0346     		mov	r3, r0
 11266 0a76 1A46     		mov	r2, r3
 11267 0a78 07F18003 		add	r3, r7, #128
 11268 0a7c 1344     		add	r3, r3, r2
 11269 0a7e 164A     		ldr	r2, .L508+24
 11270 0a80 1068     		ldr	r0, [r2]	@ unaligned
 11271 0a82 1860     		str	r0, [r3]	@ unaligned
 11272 0a84 1279     		ldrb	r2, [r2, #4]
 11273 0a86 1A71     		strb	r2, [r3, #4]
1680:..\src/command_processing.c ****                     break;
 11274              		.loc 1 1680 0
 11275 0a88 1923     		movs	r3, #25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 259


 11276 0a8a 87F89D36 		strb	r3, [r7, #1693]
1681:..\src/command_processing.c ****                 case 2: 
 11277              		.loc 1 1681 0
 11278 0a8e 12E0     		b	.L490
 11279              	.L488:
1683:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11280              		.loc 1 1683 0
 11281 0a90 07F18003 		add	r3, r7, #128
 11282 0a94 1846     		mov	r0, r3
 11283 0a96 FFF7FEFF 		bl	strlen
 11284 0a9a 0346     		mov	r3, r0
 11285 0a9c 1A46     		mov	r2, r3
 11286 0a9e 07F18003 		add	r3, r7, #128
 11287 0aa2 1344     		add	r3, r3, r2
 11288 0aa4 0D4A     		ldr	r2, .L508+28
 11289 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 11290 0aa8 1860     		str	r0, [r3]	@ unaligned
 11291 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11292 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1684:..\src/command_processing.c ****                     break;
 11293              		.loc 1 1684 0
 11294 0aae 1A23     		movs	r3, #26
 11295 0ab0 87F89D36 		strb	r3, [r7, #1693]
1685:..\src/command_processing.c ****                 default:
 11296              		.loc 1 1685 0
 11297 0ab4 00BF     		nop
 11298              	.L490:
1688:..\src/command_processing.c ****             }            
1689:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 11299              		.loc 1 1689 0
 11300 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11301 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11302 0abe 28E0     		b	.L491
 11303              	.L509:
 11304              		.align	2
 11305              	.L508:
 11306 0ac0 00000000 		.word	IMU_connected
 11307 0ac4 300E0000 		.word	.LC127
 11308 0ac8 00000000 		.word	c_mem
 11309 0acc 00000000 		.word	N_IMU_Connected
 11310 0ad0 4C0E0000 		.word	.LC128
 11311 0ad4 640E0000 		.word	.LC129
 11312 0ad8 6C0E0000 		.word	.LC130
 11313 0adc 740E0000 		.word	.LC131
 11314              	.L492:
1690:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11315              		.loc 1 1690 0 discriminator 3
 11316 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 11317 0ae4 5A1D     		adds	r2, r3, #5
 11318 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11319 0aea 1A44     		add	r2, r2, r3
 11320 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 11321 0af0 D31A     		subs	r3, r2, r3
 11322 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 11323 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 11324 0afa 8A1A     		subs	r2, r1, r2
 11325 0afc 07F18001 		add	r1, r7, #128
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 260


 11326 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11327 0b02 07F58A72 		add	r2, r7, #276
 11328 0b06 D154     		strb	r1, [r2, r3]
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11329              		.loc 1 1689 0 discriminator 3
 11330 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 11331 0b0c 013B     		subs	r3, r3, #1
 11332 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11333              	.L491:
1689:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11334              		.loc 1 1689 0 is_stmt 0 discriminator 1
 11335 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 11336 0b16 002B     		cmp	r3, #0
 11337 0b18 E2D1     		bne	.L492
1691:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1692:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 11338              		.loc 1 1692 0 is_stmt 1
 11339 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 11340 0b1e 5A1D     		adds	r2, r3, #5
 11341 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11342 0b24 1344     		add	r3, r3, r2
 11343 0b26 07F58A72 		add	r2, r7, #276
 11344 0b2a 0121     		movs	r1, #1
 11345 0b2c D154     		strb	r1, [r2, r3]
1693:..\src/command_processing.c ****                   
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1696:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11346              		.loc 1 1696 0
 11347 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11348 0b32 3233     		adds	r3, r3, #50
 11349 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11350              		.loc 1 1697 0
 11351 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11352 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11353 0b40 1AE0     		b	.L493
 11354              	.L494:
1698:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 11355              		.loc 1 1698 0 discriminator 3
 11356 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11357 0b46 0233     		adds	r3, r3, #2
 11358 0b48 9BB2     		uxth	r3, r3
 11359 0b4a 1A46     		mov	r2, r3
 11360 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11361 0b50 1A44     		add	r2, r2, r3
 11362 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 11363 0b56 D31A     		subs	r3, r2, r3
 11364 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 11365 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 11366 0b60 8A1A     		subs	r2, r1, r2
 11367 0b62 07F10801 		add	r1, r7, #8
 11368 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11369 0b68 07F58A72 		add	r2, r7, #276
 11370 0b6c D154     		strb	r1, [r2, r3]
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11371              		.loc 1 1697 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 261


 11372 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 11373 0b72 013B     		subs	r3, r3, #1
 11374 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11375              	.L493:
1697:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11376              		.loc 1 1697 0 is_stmt 0 discriminator 1
 11377 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 11378 0b7c 002B     		cmp	r3, #0
 11379 0b7e E0D1     		bne	.L494
1699:..\src/command_processing.c **** 
1700:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 11380              		.loc 1 1700 0 is_stmt 1
 11381 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 11382 0b84 5C1E     		subs	r4, r3, #1
 11383 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 11384 0b8a DBB2     		uxtb	r3, r3
 11385 0b8c 013B     		subs	r3, r3, #1
 11386 0b8e DAB2     		uxtb	r2, r3
 11387 0b90 07F58A73 		add	r3, r7, #276
 11388 0b94 1146     		mov	r1, r2
 11389 0b96 1846     		mov	r0, r3
 11390 0b98 FFF7FEFF 		bl	LCRChecksum
 11391 0b9c 0346     		mov	r3, r0
 11392 0b9e 1A46     		mov	r2, r3
 11393 0ba0 07F58A73 		add	r3, r7, #276
 11394 0ba4 1A55     		strb	r2, [r3, r4]
1701:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 11395              		.loc 1 1701 0
 11396 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 11397 0baa 07F58A73 		add	r3, r7, #276
 11398 0bae 1146     		mov	r1, r2
 11399 0bb0 1846     		mov	r0, r3
 11400 0bb2 FFF7FEFF 		bl	commWrite
1702:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 11401              		.loc 1 1702 0
 11402 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1703:..\src/command_processing.c ****         break;
 11403              		.loc 1 1703 0
 11404 0bba 09E1     		b	.L495
 11405              	.L502:
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c **** //=========================================================     other_params
1706:..\src/command_processing.c ****         default: 
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 11406              		.loc 1 1708 0
 11407 0bbc BB1D     		adds	r3, r7, #6
 11408 0bbe 1A88     		ldrh	r2, [r3]
 11409 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 11410 0bc4 013B     		subs	r3, r3, #1
 11411 0bc6 9A42     		cmp	r2, r3
 11412 0bc8 C0F20181 		blt	.L503
1709:..\src/command_processing.c ****                 break;
1710:..\src/command_processing.c ****             
1711:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 11413              		.loc 1 1711 0
 11414 0bcc BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 262


 11415 0bce 1A88     		ldrh	r2, [r3]
 11416 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 11417 0bd4 8149     		ldr	r1, .L510
 11418 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 11419 0bd8 0B44     		add	r3, r3, r1
 11420 0bda 9A42     		cmp	r2, r3
 11421 0bdc 05D1     		bne	.L497
1712:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 11422              		.loc 1 1712 0
 11423 0bde 804B     		ldr	r3, .L510+4
 11424 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11425 0be2 804B     		ldr	r3, .L510+8
 11426 0be4 83F80122 		strb	r2, [r3, #513]
1713:..\src/command_processing.c ****                 break;
 11427              		.loc 1 1713 0
 11428 0be8 F2E0     		b	.L495
 11429              	.L497:
1714:..\src/command_processing.c ****             }
1715:..\src/command_processing.c ****             
1716:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 11430              		.loc 1 1716 0
 11431 0bea BB1D     		adds	r3, r7, #6
 11432 0bec 1A88     		ldrh	r2, [r3]
 11433 0bee B7F89836 		ldrh	r3, [r7, #1688]
 11434 0bf2 013B     		subs	r3, r3, #1
 11435 0bf4 9A42     		cmp	r2, r3
 11436 0bf6 05D1     		bne	.L498
1717:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 11437              		.loc 1 1717 0
 11438 0bf8 794B     		ldr	r3, .L510+4
 11439 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11440 0bfc 794B     		ldr	r3, .L510+8
 11441 0bfe 83F8A020 		strb	r2, [r3, #160]
1718:..\src/command_processing.c ****             }
1719:..\src/command_processing.c ****             else {
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1726:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1727:..\src/command_processing.c ****                 
1728:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1729:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1730:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1731:..\src/command_processing.c ****                 {
1732:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1733:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1734:..\src/command_processing.c ****                 }
1735:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1736:..\src/command_processing.c ****             
1737:..\src/command_processing.c ****             }
1738:..\src/command_processing.c ****             
1739:..\src/command_processing.c ****         break;
 11442              		.loc 1 1739 0
 11443 0c02 E5E0     		b	.L495
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 263


 11444              	.L498:
1722:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 11445              		.loc 1 1722 0
 11446 0c04 BB1D     		adds	r3, r7, #6
 11447 0c06 1A88     		ldrh	r2, [r3]
 11448 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 11449 0c0c D31A     		subs	r3, r2, r3
 11450 0c0e 764A     		ldr	r2, .L510+12
 11451 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11452 0c12 1946     		mov	r1, r3
 11453 0c14 724B     		ldr	r3, .L510+4
 11454 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11455 0c18 724A     		ldr	r2, .L510+8
 11456 0c1a 0B46     		mov	r3, r1
 11457 0c1c 9B00     		lsls	r3, r3, #2
 11458 0c1e 0B44     		add	r3, r3, r1
 11459 0c20 1344     		add	r3, r3, r2
 11460 0c22 03F20223 		addw	r3, r3, #514
 11461 0c26 0246     		mov	r2, r0
 11462 0c28 1A70     		strb	r2, [r3]
1723:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 11463              		.loc 1 1723 0
 11464 0c2a BB1D     		adds	r3, r7, #6
 11465 0c2c 1A88     		ldrh	r2, [r3]
 11466 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 11467 0c32 D31A     		subs	r3, r2, r3
 11468 0c34 6C4A     		ldr	r2, .L510+12
 11469 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11470 0c38 1946     		mov	r1, r3
 11471 0c3a 694B     		ldr	r3, .L510+4
 11472 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 11473 0c3e 694A     		ldr	r2, .L510+8
 11474 0c40 0B46     		mov	r3, r1
 11475 0c42 9B00     		lsls	r3, r3, #2
 11476 0c44 0B44     		add	r3, r3, r1
 11477 0c46 1344     		add	r3, r3, r2
 11478 0c48 03F20323 		addw	r3, r3, #515
 11479 0c4c 0246     		mov	r2, r0
 11480 0c4e 1A70     		strb	r2, [r3]
1724:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 11481              		.loc 1 1724 0
 11482 0c50 BB1D     		adds	r3, r7, #6
 11483 0c52 1A88     		ldrh	r2, [r3]
 11484 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 11485 0c58 D31A     		subs	r3, r2, r3
 11486 0c5a 634A     		ldr	r2, .L510+12
 11487 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11488 0c5e 1946     		mov	r1, r3
 11489 0c60 5F4B     		ldr	r3, .L510+4
 11490 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 11491 0c64 5F4A     		ldr	r2, .L510+8
 11492 0c66 0B46     		mov	r3, r1
 11493 0c68 9B00     		lsls	r3, r3, #2
 11494 0c6a 0B44     		add	r3, r3, r1
 11495 0c6c 1344     		add	r3, r3, r2
 11496 0c6e 03F50173 		add	r3, r3, #516
 11497 0c72 0246     		mov	r2, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 264


 11498 0c74 1A70     		strb	r2, [r3]
1725:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 11499              		.loc 1 1725 0
 11500 0c76 BB1D     		adds	r3, r7, #6
 11501 0c78 1A88     		ldrh	r2, [r3]
 11502 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 11503 0c7e D31A     		subs	r3, r2, r3
 11504 0c80 594A     		ldr	r2, .L510+12
 11505 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11506 0c84 1946     		mov	r1, r3
 11507 0c86 564B     		ldr	r3, .L510+4
 11508 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 11509 0c8a 564A     		ldr	r2, .L510+8
 11510 0c8c 0B46     		mov	r3, r1
 11511 0c8e 9B00     		lsls	r3, r3, #2
 11512 0c90 0B44     		add	r3, r3, r1
 11513 0c92 1344     		add	r3, r3, r2
 11514 0c94 03F20523 		addw	r3, r3, #517
 11515 0c98 0246     		mov	r2, r0
 11516 0c9a 1A70     		strb	r2, [r3]
1726:..\src/command_processing.c ****                 
 11517              		.loc 1 1726 0
 11518 0c9c BB1D     		adds	r3, r7, #6
 11519 0c9e 1A88     		ldrh	r2, [r3]
 11520 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 11521 0ca4 D31A     		subs	r3, r2, r3
 11522 0ca6 504A     		ldr	r2, .L510+12
 11523 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11524 0caa 1946     		mov	r1, r3
 11525 0cac 4C4B     		ldr	r3, .L510+4
 11526 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 11527 0cb0 4C4A     		ldr	r2, .L510+8
 11528 0cb2 0B46     		mov	r3, r1
 11529 0cb4 9B00     		lsls	r3, r3, #2
 11530 0cb6 0B44     		add	r3, r3, r1
 11531 0cb8 1344     		add	r3, r3, r2
 11532 0cba 03F20623 		addw	r3, r3, #518
 11533 0cbe 0246     		mov	r2, r0
 11534 0cc0 1A70     		strb	r2, [r3]
1729:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 11535              		.loc 1 1729 0
 11536 0cc2 4A4B     		ldr	r3, .L510+16
 11537 0cc4 0122     		movs	r2, #1
 11538 0cc6 1A60     		str	r2, [r3]
1730:..\src/command_processing.c ****                 {
 11539              		.loc 1 1730 0
 11540 0cc8 0023     		movs	r3, #0
 11541 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11542 0cce 71E0     		b	.L500
 11543              	.L501:
1732:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 11544              		.loc 1 1732 0 discriminator 3
 11545 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 11546 0cd4 444A     		ldr	r2, .L510+12
 11547 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11548 0cd8 1C46     		mov	r4, r3
 11549 0cda B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 265


 11550 0cde 424A     		ldr	r2, .L510+12
 11551 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11552 0ce2 1946     		mov	r1, r3
 11553 0ce4 3F4A     		ldr	r2, .L510+8
 11554 0ce6 0B46     		mov	r3, r1
 11555 0ce8 9B00     		lsls	r3, r3, #2
 11556 0cea 0B44     		add	r3, r3, r1
 11557 0cec 1344     		add	r3, r3, r2
 11558 0cee 03F20223 		addw	r3, r3, #514
 11559 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11560 0cf4 1A46     		mov	r2, r3
 11561 0cf6 1346     		mov	r3, r2
 11562 0cf8 5B00     		lsls	r3, r3, #1
 11563 0cfa 1344     		add	r3, r3, r2
 11564 0cfc 5B00     		lsls	r3, r3, #1
 11565 0cfe 5A1C     		adds	r2, r3, #1
 11566 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 11567 0d04 3849     		ldr	r1, .L510+12
 11568 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11569 0d08 1846     		mov	r0, r3
 11570 0d0a 3649     		ldr	r1, .L510+8
 11571 0d0c 0346     		mov	r3, r0
 11572 0d0e 9B00     		lsls	r3, r3, #2
 11573 0d10 0344     		add	r3, r3, r0
 11574 0d12 0B44     		add	r3, r3, r1
 11575 0d14 03F20323 		addw	r3, r3, #515
 11576 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11577 0d1a 1946     		mov	r1, r3
 11578 0d1c 0B46     		mov	r3, r1
 11579 0d1e 5B00     		lsls	r3, r3, #1
 11580 0d20 0B44     		add	r3, r3, r1
 11581 0d22 5B00     		lsls	r3, r3, #1
 11582 0d24 1A44     		add	r2, r2, r3
 11583 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 11584 0d2a 2F49     		ldr	r1, .L510+12
 11585 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11586 0d2e 1846     		mov	r0, r3
 11587 0d30 2C49     		ldr	r1, .L510+8
 11588 0d32 0346     		mov	r3, r0
 11589 0d34 9B00     		lsls	r3, r3, #2
 11590 0d36 0344     		add	r3, r3, r0
 11591 0d38 0B44     		add	r3, r3, r1
 11592 0d3a 03F50173 		add	r3, r3, #516
 11593 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11594 0d40 1946     		mov	r1, r3
 11595 0d42 0B46     		mov	r3, r1
 11596 0d44 5B00     		lsls	r3, r3, #1
 11597 0d46 0B44     		add	r3, r3, r1
 11598 0d48 5B00     		lsls	r3, r3, #1
 11599 0d4a 1A44     		add	r2, r2, r3
 11600 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 11601 0d50 2549     		ldr	r1, .L510+12
 11602 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11603 0d54 1846     		mov	r0, r3
 11604 0d56 2349     		ldr	r1, .L510+8
 11605 0d58 0346     		mov	r3, r0
 11606 0d5a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 266


 11607 0d5c 0344     		add	r3, r3, r0
 11608 0d5e 0B44     		add	r3, r3, r1
 11609 0d60 03F20523 		addw	r3, r3, #517
 11610 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11611 0d66 1B01     		lsls	r3, r3, #4
 11612 0d68 1A44     		add	r2, r2, r3
 11613 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 11614 0d6e 1E49     		ldr	r1, .L510+12
 11615 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11616 0d72 1846     		mov	r0, r3
 11617 0d74 1B49     		ldr	r1, .L510+8
 11618 0d76 0346     		mov	r3, r0
 11619 0d78 9B00     		lsls	r3, r3, #2
 11620 0d7a 0344     		add	r3, r3, r0
 11621 0d7c 0B44     		add	r3, r3, r1
 11622 0d7e 03F20623 		addw	r3, r3, #518
 11623 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11624 0d84 5B00     		lsls	r3, r3, #1
 11625 0d86 1344     		add	r3, r3, r2
 11626 0d88 0133     		adds	r3, r3, #1
 11627 0d8a 194A     		ldr	r2, .L510+20
 11628 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1733:..\src/command_processing.c ****                 }
 11629              		.loc 1 1733 0 discriminator 3
 11630 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 11631 0d94 144A     		ldr	r2, .L510+12
 11632 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11633 0d98 1A46     		mov	r2, r3
 11634 0d9a 154B     		ldr	r3, .L510+20
 11635 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 11636 0da0 124B     		ldr	r3, .L510+16
 11637 0da2 1B68     		ldr	r3, [r3]
 11638 0da4 1344     		add	r3, r3, r2
 11639 0da6 114A     		ldr	r2, .L510+16
 11640 0da8 1360     		str	r3, [r2]
1730:..\src/command_processing.c ****                 {
 11641              		.loc 1 1730 0 discriminator 3
 11642 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 11643 0dae 0133     		adds	r3, r3, #1
 11644 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11645              	.L500:
1730:..\src/command_processing.c ****                 {
 11646              		.loc 1 1730 0 is_stmt 0 discriminator 1
 11647 0db4 094B     		ldr	r3, .L510
 11648 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11649 0db8 9BB2     		uxth	r3, r3
 11650 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 11651 0dbe 9A42     		cmp	r2, r3
 11652 0dc0 86D3     		bcc	.L501
1735:..\src/command_processing.c ****             
 11653              		.loc 1 1735 0 is_stmt 1
 11654 0dc2 0A4B     		ldr	r3, .L510+16
 11655 0dc4 1B68     		ldr	r3, [r3]
 11656 0dc6 0133     		adds	r3, r3, #1
 11657 0dc8 084A     		ldr	r2, .L510+16
 11658 0dca 1360     		str	r3, [r2]
 11659              		.loc 1 1739 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 267


 11660 0dcc 00E0     		b	.L495
 11661              	.L503:
1709:..\src/command_processing.c ****             
 11662              		.loc 1 1709 0
 11663 0dce 00BF     		nop
 11664              	.L495:
1740:..\src/command_processing.c ****     }
1741:..\src/command_processing.c **** }
 11665              		.loc 1 1741 0 discriminator 1
 11666 0dd0 00BF     		nop
 11667 0dd2 07F5D567 		add	r7, r7, #1704
 11668              		.cfi_def_cfa_offset 16
 11669 0dd6 BD46     		mov	sp, r7
 11670              		.cfi_def_cfa_register 13
 11671              		@ sp needed
 11672 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 11673              	.L511:
 11674 0dda 00BF     		.align	2
 11675              	.L510:
 11676 0ddc 00000000 		.word	N_IMU_Connected
 11677 0de0 00000000 		.word	g_rx
 11678 0de4 00000000 		.word	g_mem
 11679 0de8 00000000 		.word	IMU_connected
 11680 0dec 00000000 		.word	imus_data_size
 11681 0df0 00000000 		.word	single_imu_size
 11682              		.cfi_endproc
 11683              	.LFE70:
 11684              		.size	get_IMU_param_list, .-get_IMU_param_list
 11685              		.section	.text.setZeros,"ax",%progbits
 11686              		.align	2
 11687              		.global	setZeros
 11688              		.thumb
 11689              		.thumb_func
 11690              		.type	setZeros, %function
 11691              	setZeros:
 11692              	.LFB71:
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c **** //==============================================================================
1744:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1745:..\src/command_processing.c **** //==============================================================================
1746:..\src/command_processing.c **** 
1747:..\src/command_processing.c **** void setZeros()
1748:..\src/command_processing.c **** {
 11693              		.loc 1 1748 0
 11694              		.cfi_startproc
 11695              		@ args = 0, pretend = 0, frame = 8
 11696              		@ frame_needed = 1, uses_anonymous_args = 0
 11697 0000 90B5     		push	{r4, r7, lr}
 11698              		.cfi_def_cfa_offset 12
 11699              		.cfi_offset 4, -12
 11700              		.cfi_offset 7, -8
 11701              		.cfi_offset 14, -4
 11702 0002 83B0     		sub	sp, sp, #12
 11703              		.cfi_def_cfa_offset 24
 11704 0004 00AF     		add	r7, sp, #0
 11705              		.cfi_def_cfa_register 7
1749:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 268


1750:..\src/command_processing.c ****     
1751:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 11706              		.loc 1 1751 0
 11707 0006 0023     		movs	r3, #0
 11708 0008 BB71     		strb	r3, [r7, #6]
 11709 000a 26E0     		b	.L513
 11710              	.L516:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11711              		.loc 1 1752 0
 11712 000c 0023     		movs	r3, #0
 11713 000e FB71     		strb	r3, [r7, #7]
 11714 0010 1DE0     		b	.L514
 11715              	.L515:
1753:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 11716              		.loc 1 1753 0 discriminator 3
 11717 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11718 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 11719 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11720 0018 1648     		ldr	r0, .L517
 11721 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 11722 001e 1C46     		mov	r4, r3
 11723 0020 1548     		ldr	r0, .L517+4
 11724 0022 1346     		mov	r3, r2
 11725 0024 5B00     		lsls	r3, r3, #1
 11726 0026 1344     		add	r3, r3, r2
 11727 0028 9B00     		lsls	r3, r3, #2
 11728 002a 0B44     		add	r3, r3, r1
 11729 002c 6633     		adds	r3, r3, #102
 11730 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1754:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 11731              		.loc 1 1754 0 discriminator 3
 11732 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11733 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11734 0036 1149     		ldr	r1, .L517+8
 11735 0038 3420     		movs	r0, #52
 11736 003a 00FB02F2 		mul	r2, r0, r2
 11737 003e 0A44     		add	r2, r2, r1
 11738 0040 1344     		add	r3, r3, r2
 11739 0042 1833     		adds	r3, r3, #24
 11740 0044 0022     		movs	r2, #0
 11741 0046 1A70     		strb	r2, [r3]
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11742              		.loc 1 1752 0 discriminator 3
 11743 0048 FB79     		ldrb	r3, [r7, #7]
 11744 004a 0133     		adds	r3, r3, #1
 11745 004c FB71     		strb	r3, [r7, #7]
 11746              	.L514:
1752:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11747              		.loc 1 1752 0 is_stmt 0 discriminator 1
 11748 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11749 0050 022B     		cmp	r3, #2
 11750 0052 DED9     		bls	.L515
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11751              		.loc 1 1751 0 is_stmt 1 discriminator 2
 11752 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11753 0056 0133     		adds	r3, r3, #1
 11754 0058 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 269


 11755              	.L513:
1751:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11756              		.loc 1 1751 0 is_stmt 0 discriminator 1
 11757 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11758 005c 012B     		cmp	r3, #1
 11759 005e D5D9     		bls	.L516
1755:..\src/command_processing.c ****         }
1756:..\src/command_processing.c ****     }
1757:..\src/command_processing.c ****     reset_last_value_flag = 1;
 11760              		.loc 1 1757 0 is_stmt 1
 11761 0060 074B     		ldr	r3, .L517+12
 11762 0062 0122     		movs	r2, #1
 11763 0064 1A70     		strb	r2, [r3]
1758:..\src/command_processing.c **** 
1759:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 11764              		.loc 1 1759 0
 11765 0066 0120     		movs	r0, #1
 11766 0068 FFF7FEFF 		bl	sendAcknowledgment
1760:..\src/command_processing.c **** }
 11767              		.loc 1 1760 0
 11768 006c 00BF     		nop
 11769 006e 0C37     		adds	r7, r7, #12
 11770              		.cfi_def_cfa_offset 12
 11771 0070 BD46     		mov	sp, r7
 11772              		.cfi_def_cfa_register 13
 11773              		@ sp needed
 11774 0072 90BD     		pop	{r4, r7, pc}
 11775              	.L518:
 11776              		.align	2
 11777              	.L517:
 11778 0074 00000000 		.word	data_encoder_raw
 11779 0078 00000000 		.word	g_mem
 11780 007c 00000000 		.word	g_meas
 11781 0080 00000000 		.word	reset_last_value_flag
 11782              		.cfi_endproc
 11783              	.LFE71:
 11784              		.size	setZeros, .-setZeros
 11785              		.section	.rodata
 11786              		.align	2
 11787              	.LC132:
 11788 0eac 0D0A00   		.ascii	"\015\012\000"
 11789 0eaf 00       		.align	2
 11790              	.LC133:
 11791 0eb0 4669726D 		.ascii	"Firmware version: \000"
 11791      77617265 
 11791      20766572 
 11791      73696F6E 
 11791      3A2000
 11792 0ec3 00       		.align	2
 11793              	.LC134:
 11794 0ec4 536F6674 		.ascii	"SoftHand PRO firmware v. 1.8.1 (PSoC5)\000"
 11794      48616E64 
 11794      2050524F 
 11794      20666972 
 11794      6D776172 
 11795 0eeb 00       		.align	2
 11796              	.LC135:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 270


 11797 0eec 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 11797      0A00
 11798 0ef2 0000     		.align	2
 11799              	.LC136:
 11800 0ef4 44455649 		.ascii	"DEVICE INFO\015\012\000"
 11800      43452049 
 11800      4E464F0D 
 11800      0A00
 11801 0f02 0000     		.align	2
 11802              	.LC137:
 11803 0f04 49443A20 		.ascii	"ID: %d\015\012\000"
 11803      25640D0A 
 11803      00
 11804 0f0d 000000   		.align	2
 11805              	.LC138:
 11806 0f10 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 11806      63653A20 
 11806      534F4654 
 11806      48414E44 
 11806      2050524F 
 11807 0f27 00       		.align	2
 11808              	.LC139:
 11809 0f28 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 11809      63653A20 
 11809      47454E45 
 11809      52494320 
 11809      32204D4F 
 11810 0f43 00       		.align	2
 11811              	.LC140:
 11812 0f44 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 11812      63653A20 
 11812      41495220 
 11812      4348414D 
 11812      42455253 
 11813 0f6b 00       		.align	2
 11814              	.LC141:
 11815 0f6c 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 11815      20736964 
 11815      653A2052 
 11815      49474854 
 11815      0D0A00
 11816 0f7f 00       		.align	2
 11817              	.LC142:
 11818 0f80 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 11818      20736964 
 11818      653A204C 
 11818      4546540D 
 11818      0A00
 11819 0f92 0000     		.align	2
 11820              	.LC143:
 11821 0f94 55736572 		.ascii	"User: MARIA\015\012\000"
 11821      3A204D41 
 11821      5249410D 
 11821      0A00
 11822 0fa2 0000     		.align	2
 11823              	.LC144:
 11824 0fa4 55736572 		.ascii	"User: ROZA\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 271


 11824      3A20524F 
 11824      5A410D0A 
 11824      00
 11825 0fb1 000000   		.align	2
 11826              	.LC145:
 11827 0fb4 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 11827      3A204745 
 11827      4E455249 
 11827      43205553 
 11827      45520D0A 
 11828 0fc9 000000   		.align	2
 11829              	.LC146:
 11830 0fcc 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 11830      52202564 
 11830      20494E46 
 11830      4F0D0A00 
 11831              		.align	2
 11832              	.LC147:
 11833 0fdc 4D6F746F 		.ascii	"Motor reference\000"
 11833      72207265 
 11833      66657265 
 11833      6E636500 
 11834              		.align	2
 11835              	.LC148:
 11836 0fec 202D2043 		.ascii	" - Currents: \000"
 11836      75727265 
 11836      6E74733A 
 11836      2000
 11837 0ffa 0000     		.align	2
 11838              	.LC149:
 11839 0ffc 202D2050 		.ascii	" - Pwm: \000"
 11839      776D3A20 
 11839      00
 11840 1005 000000   		.align	2
 11841              	.LC150:
 11842 1008 202D2050 		.ascii	" - Position: \000"
 11842      6F736974 
 11842      696F6E3A 
 11842      2000
 11843 1016 0000     		.align	2
 11844              	.LC151:
 11845 1018 25642000 		.ascii	"%d \000"
 11846              		.align	2
 11847              	.LC152:
 11848 101c 4D6F746F 		.ascii	"Motor enabled: \000"
 11848      7220656E 
 11848      61626C65 
 11848      643A2000 
 11849              		.align	2
 11850              	.LC153:
 11851 102c 5945530D 		.ascii	"YES\015\012\000"
 11851      0A00
 11852 1032 0000     		.align	2
 11853              	.LC154:
 11854 1034 4E4F0D0A 		.ascii	"NO\015\012\000"
 11854      00
 11855 1039 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 272


 11856              	.LC155:
 11857 103c 50574D20 		.ascii	"PWM rescaling activation: \000"
 11857      72657363 
 11857      616C696E 
 11857      67206163 
 11857      74697661 
 11858 1057 00       		.align	2
 11859              	.LC156:
 11860 1058 5945530A 		.ascii	"YES\012\000"
 11860      00
 11861 105d 000000   		.align	2
 11862              	.LC157:
 11863 1060 4E4F0A00 		.ascii	"NO\012\000"
 11864              		.align	2
 11865              	.LC158:
 11866 1064 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 11866      4C696D69 
 11866      743A2025 
 11866      640D0A00 
 11867              		.align	2
 11868              	.LC159:
 11869 1074 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 11869      41535552 
 11869      454D454E 
 11869      54532049 
 11869      4E464F0D 
 11870 108a 0000     		.align	2
 11871              	.LC160:
 11872 108c 53656E73 		.ascii	"Sensor value: \000"
 11872      6F722076 
 11872      616C7565 
 11872      3A2000
 11873 109b 00       		.align	2
 11874              	.LC161:
 11875 109c 256400   		.ascii	"%d\000"
 11876 109f 00       		.align	2
 11877              	.LC162:
 11878 10a0 2C2000   		.ascii	", \000"
 11879 10a3 00       		.align	2
 11880              	.LC163:
 11881 10a4 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 11881      65727920 
 11881      25642056 
 11881      6F6C7461 
 11881      67652028 
 11882 10c1 000000   		.align	2
 11883              	.LC164:
 11884 10c4 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 11884      20636861 
 11884      72676520 
 11884      706F7765 
 11884      72207465 
 11885 10eb 00       		.align	2
 11886              	.LC165:
 11887 10ec 43757272 		.ascii	"Current %d (mA): %ld\000"
 11887      656E7420 
 11887      25642028 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 273


 11887      6D41293A 
 11887      20256C64 
 11888 1101 000000   		.align	2
 11889              	.LC166:
 11890 1104 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 11890      20477261 
 11890      73702048 
 11890      6F6C6420 
 11890      43757272 
 11891 1129 000000   		.align	2
 11892              	.LC167:
 11893 112c 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 11893      544F5220 
 11893      25642043 
 11893      4F4E4649 
 11893      47555241 
 11894 1147 00       		.align	2
 11895              	.LC168:
 11896 1148 50494420 		.ascii	"PID Controller: \000"
 11896      436F6E74 
 11896      726F6C6C 
 11896      65723A20 
 11896      00
 11897              		.global	__aeabi_i2d
 11898              		.global	__aeabi_ddiv
 11899 1159 000000   		.align	2
 11900              	.LC169:
 11901 115c 50202D3E 		.ascii	"P -> %f  \000"
 11901      20256620 
 11901      2000
 11902 1166 0000     		.align	2
 11903              	.LC170:
 11904 1168 49202D3E 		.ascii	"I -> %f  \000"
 11904      20256620 
 11904      2000
 11905 1172 0000     		.align	2
 11906              	.LC171:
 11907 1174 44202D3E 		.ascii	"D -> %f\015\012\000"
 11907      2025660D 
 11907      0A00
 11908 117e 0000     		.align	2
 11909              	.LC172:
 11910 1180 43757272 		.ascii	"Current PID Controller: \000"
 11910      656E7420 
 11910      50494420 
 11910      436F6E74 
 11910      726F6C6C 
 11911 1199 000000   		.align	2
 11912              	.LC173:
 11913 119c 53746172 		.ascii	"Startup activation: YES\015\012\000"
 11913      74757020 
 11913      61637469 
 11913      76617469 
 11913      6F6E3A20 
 11914 11b6 0000     		.align	2
 11915              	.LC174:
 11916 11b8 53746172 		.ascii	"Startup activation: NO\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 274


 11916      74757020 
 11916      61637469 
 11916      76617469 
 11916      6F6E3A20 
 11917 11d1 000000   		.align	2
 11918              	.LC175:
 11919 11d4 496E7075 		.ascii	"Input mode: USB\015\012\000"
 11919      74206D6F 
 11919      64653A20 
 11919      5553420D 
 11919      0A00
 11920 11e6 0000     		.align	2
 11921              	.LC176:
 11922 11e8 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 11922      74206D6F 
 11922      64653A20 
 11922      48616E64 
 11922      6C650D0A 
 11923 11fd 000000   		.align	2
 11924              	.LC177:
 11925 1200 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 11925      74206D6F 
 11925      64653A20 
 11925      454D4720 
 11925      70726F70 
 11926 121f 00       		.align	2
 11927              	.LC178:
 11928 1220 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 11928      74206D6F 
 11928      64653A20 
 11928      454D4720 
 11928      696E7465 
 11929 123b 00       		.align	2
 11930              	.LC179:
 11931 123c 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 11931      74206D6F 
 11931      64653A20 
 11931      454D4720 
 11931      46434653 
 11932 1253 00       		.align	2
 11933              	.LC180:
 11934 1254 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 11934      74206D6F 
 11934      64653A20 
 11934      454D4720 
 11934      46434653 
 11935 126f 00       		.align	2
 11936              	.LC181:
 11937 1270 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 11937      74206D6F 
 11937      64653A20 
 11937      454D4720 
 11937      70726F70 
 11938 129e 00       		.ascii	"\000"
 11939 129f 00       		.align	2
 11940              	.LC182:
 11941 12a0 436F6E74 		.ascii	"Control mode: Position\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 275


 11941      726F6C20 
 11941      6D6F6465 
 11941      3A20506F 
 11941      73697469 
 11942 12b9 000000   		.align	2
 11943              	.LC183:
 11944 12bc 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 11944      726F6C20 
 11944      6D6F6465 
 11944      3A205057 
 11944      4D0D0A00 
 11945              		.align	2
 11946              	.LC184:
 11947 12d0 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 11947      726F6C20 
 11947      6D6F6465 
 11947      3A204375 
 11947      7272656E 
 11948              		.align	2
 11949              	.LC185:
 11950 12e8 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 11950      726F6C20 
 11950      6D6F6465 
 11950      3A20506F 
 11950      73697469 
 11951 130d 000000   		.align	2
 11952              	.LC186:
 11953 1310 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 11953      6C757465 
 11953      20656E63 
 11953      6F646572 
 11953      20706F73 
 11954 1331 000000   		.align	2
 11955              	.LC187:
 11956 1334 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 11956      6C757465 
 11956      20656E63 
 11956      6F646572 
 11956      20706F73 
 11957              		.align	2
 11958              	.LC188:
 11959 1354 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 11959      722D4861 
 11959      6E646C65 
 11959      20526174 
 11959      696F3A20 
 11960 136d 000000   		.align	2
 11961              	.LC189:
 11962 1370 53656E73 		.ascii	"Sensor resolution: \000"
 11962      6F722072 
 11962      65736F6C 
 11962      7574696F 
 11962      6E3A2000 
 11963              		.align	2
 11964              	.LC190:
 11965 1384 4D656173 		.ascii	"Measurement Offset: \000"
 11965      7572656D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 276


 11965      656E7420 
 11965      4F666673 
 11965      65743A20 
 11966 1399 000000   		.align	2
 11967              	.LC191:
 11968 139c 256C6400 		.ascii	"%ld\000"
 11969              		.align	2
 11970              	.LC192:
 11971 13a0 4D656173 		.ascii	"Measurement Multiplier: \000"
 11971      7572656D 
 11971      656E7420 
 11971      4D756C74 
 11971      69706C69 
 11972              		.global	__aeabi_f2d
 11973 13b9 000000   		.align	2
 11974              	.LC193:
 11975 13bc 256600   		.ascii	"%f\000"
 11976 13bf 00       		.align	2
 11977              	.LC194:
 11978 13c0 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 11978      656E7420 
 11978      6C6F6F6B 
 11978      75702074 
 11978      61626C65 
 11979 13ee 00       		.ascii	"\000"
 11980 13ef 00       		.align	2
 11981              	.LC195:
 11982 13f0 506F7369 		.ascii	"Position limit active: %d\000"
 11982      74696F6E 
 11982      206C696D 
 11982      69742061 
 11982      63746976 
 11983 140a 0000     		.align	2
 11984              	.LC196:
 11985 140c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 11985      74696F6E 
 11985      206C696D 
 11985      6974206D 
 11985      6F746F72 
 11986 142f 00       		.align	2
 11987              	.LC197:
 11988 1430 73757020 		.ascii	"sup -> %ld\015\012\000"
 11988      2D3E2025 
 11988      6C640D0A 
 11988      00
 11989 143d 000000   		.align	2
 11990              	.LC198:
 11991 1440 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 11991      73746570 
 11991      20706F73 
 11991      20616E64 
 11991      206E6567 
 11992              		.align	2
 11993              	.LC199:
 11994 145c 43757272 		.ascii	"Current limit: %d\015\012\000"
 11994      656E7420 
 11994      6C696D69 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 277


 11994      743A2025 
 11994      640D0A00 
 11995              		.align	2
 11996              	.LC200:
 11997 1470 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 11997      434F4E46 
 11997      49475552 
 11997      4154494F 
 11997      4E0D0A00 
 11998              		.align	2
 11999              	.LC201:
 12000 1484 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 12000      74687265 
 12000      73686F6C 
 12000      6473205B 
 12000      30202D20 
 12001 14a6 0000     		.align	2
 12002              	.LC202:
 12003 14a8 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 12003      6D617820 
 12003      76616C75 
 12003      6573205B 
 12003      30202D20 
 12004              		.align	2
 12005              	.LC203:
 12006 14cc 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 12006      696E7665 
 12006      7273696F 
 12006      6E3A2059 
 12006      45530D0A 
 12007 14e1 000000   		.align	2
 12008              	.LC204:
 12009 14e4 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 12009      696E7665 
 12009      7273696F 
 12009      6E3A204E 
 12009      4F0D0A00 
 12010              		.align	2
 12011              	.LC205:
 12012 14f8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 12012      62726174 
 12012      696F6E20 
 12012      656E6162 
 12012      6C65643A 
 12013 1513 00       		.align	2
 12014              	.LC206:
 12015 1514 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 12015      62726174 
 12015      696F6E20 
 12015      656E6162 
 12015      6C65643A 
 12016 152e 0000     		.align	2
 12017              	.LC207:
 12018 1530 454D4720 		.ascii	"EMG max speed: %d %d\000"
 12018      6D617820 
 12018      73706565 
 12018      643A2025 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 278


 12018      64202564 
 12019 1545 000000   		.align	2
 12020              	.LC208:
 12021 1548 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 12021      74696F6E 
 12021      616C2041 
 12021      44432073 
 12021      656E736F 
 12022              		.align	2
 12023              	.LC209:
 12024 1568 41444320 		.ascii	"ADC %d -> %d\000"
 12024      2564202D 
 12024      3E202564 
 12024      00
 12025 1575 000000   		.align	2
 12026              	.LC210:
 12027 1578 454D4720 		.ascii	"EMG input %d -> %d\000"
 12027      696E7075 
 12027      74202564 
 12027      202D3E20 
 12027      256400
 12028 158b 00       		.align	2
 12029              	.LC211:
 12030 158c 52657374 		.ascii	"Rest time delay (ms): %d\000"
 12030      2074696D 
 12030      65206465 
 12030      6C617920 
 12030      286D7329 
 12031 15a5 000000   		.align	2
 12032              	.LC212:
 12033 15a8 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 12033      2076656C 
 12033      6F636974 
 12033      7920636C 
 12033      6F737572 
 12034 15ce 0000     		.align	2
 12035              	.LC213:
 12036 15d0 52657374 		.ascii	"Rest position: %d\000"
 12036      20706F73 
 12036      6974696F 
 12036      6E3A2025 
 12036      6400
 12037 15e2 0000     		.align	2
 12038              	.LC214:
 12039 15e4 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 12039      436F6E6E 
 12039      65637465 
 12039      643A2025 
 12039      640D0A00 
 12040              		.align	2
 12041              	.LC215:
 12042 15f8 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 12042      20434F4E 
 12042      46494755 
 12042      52415449 
 12042      4F4E0D0A 
 12043 160d 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 279


 12044              	.LC216:
 12045 1610 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 12045      2564200D 
 12045      0A094944 
 12045      3A202564 
 12045      0D0A00
 12046 1623 00       		.align	2
 12047              	.LC217:
 12048 1624 09416363 		.ascii	"\011Accelerometers: \000"
 12048      656C6572 
 12048      6F6D6574 
 12048      6572733A 
 12048      2000
 12049 1636 0000     		.align	2
 12050              	.LC218:
 12051 1638 09477972 		.ascii	"\011Gyroscopes: \000"
 12051      6F73636F 
 12051      7065733A 
 12051      2000
 12052 1646 0000     		.align	2
 12053              	.LC219:
 12054 1648 094D6167 		.ascii	"\011Magnetometers: \000"
 12054      6E65746F 
 12054      6D657465 
 12054      72733A20 
 12054      00
 12055 1659 000000   		.align	2
 12056              	.LC220:
 12057 165c 09517561 		.ascii	"\011Quaternion: \000"
 12057      7465726E 
 12057      696F6E3A 
 12057      2000
 12058 166a 0000     		.align	2
 12059              	.LC221:
 12060 166c 0954656D 		.ascii	"\011Temperature: \000"
 12060      70657261 
 12060      74757265 
 12060      3A2000
 12061 167b 00       		.align	2
 12062              	.LC222:
 12063 167c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 12063      20465720 
 12063      6379636C 
 12063      65207469 
 12063      6D653A20 
 12064              		.align	2
 12065              	.LC223:
 12066 1698 0D0A0000 		.ascii	"\015\012\000\000"
 12067              		.section	.text.prepare_generic_info,"ax",%progbits
 12068              		.align	2
 12069              		.global	prepare_generic_info
 12070              		.thumb
 12071              		.thumb_func
 12072              		.type	prepare_generic_info, %function
 12073              	prepare_generic_info:
 12074              	.LFB72:
1761:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 280


1762:..\src/command_processing.c **** //==============================================================================
1763:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1764:..\src/command_processing.c **** //==============================================================================
1765:..\src/command_processing.c **** 
1766:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1767:..\src/command_processing.c **** {
 12075              		.loc 1 1767 0
 12076              		.cfi_startproc
 12077              		@ args = 0, pretend = 0, frame = 152
 12078              		@ frame_needed = 1, uses_anonymous_args = 0
 12079 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12080              		.cfi_def_cfa_offset 36
 12081              		.cfi_offset 4, -36
 12082              		.cfi_offset 5, -32
 12083              		.cfi_offset 6, -28
 12084              		.cfi_offset 7, -24
 12085              		.cfi_offset 8, -20
 12086              		.cfi_offset 9, -16
 12087              		.cfi_offset 10, -12
 12088              		.cfi_offset 11, -8
 12089              		.cfi_offset 14, -4
 12090 0004 B1B0     		sub	sp, sp, #196
 12091              		.cfi_def_cfa_offset 232
 12092 0006 0AAF     		add	r7, sp, #40
 12093              		.cfi_def_cfa 7, 192
 12094 0008 7861     		str	r0, [r7, #20]
1768:..\src/command_processing.c ****     int i;
1769:..\src/command_processing.c **** 
1770:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 12095              		.loc 1 1770 0
 12096 000a CF4B     		ldr	r3, .L613
 12097 000c C7F88C30 		str	r3, [r7, #140]
1771:..\src/command_processing.c ****     
1772:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 12098              		.loc 1 1772 0
 12099 0010 CD4B     		ldr	r3, .L613
 12100 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12101 0016 FA2B     		cmp	r3, #250
 12102 0018 01F04285 		beq	.L611
 12103              	.LBB16:
1773:..\src/command_processing.c ****         char str[100];
1774:..\src/command_processing.c ****         strcpy(info_string, "");
 12104              		.loc 1 1774 0
 12105 001c 7B69     		ldr	r3, [r7, #20]
 12106 001e 0022     		movs	r2, #0
 12107 0020 1A70     		strb	r2, [r3]
1775:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12108              		.loc 1 1775 0
 12109 0022 7869     		ldr	r0, [r7, #20]
 12110 0024 FFF7FEFF 		bl	strlen
 12111 0028 0346     		mov	r3, r0
 12112 002a 1A46     		mov	r2, r3
 12113 002c 7B69     		ldr	r3, [r7, #20]
 12114 002e 1344     		add	r3, r3, r2
 12115 0030 C64A     		ldr	r2, .L613+4
 12116 0032 1188     		ldrh	r1, [r2]	@ unaligned
 12117 0034 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 281


 12118 0036 1980     		strh	r1, [r3]	@ unaligned
 12119 0038 9A70     		strb	r2, [r3, #2]
1776:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 12120              		.loc 1 1776 0
 12121 003a 7869     		ldr	r0, [r7, #20]
 12122 003c FFF7FEFF 		bl	strlen
 12123 0040 0346     		mov	r3, r0
 12124 0042 1A46     		mov	r2, r3
 12125 0044 7B69     		ldr	r3, [r7, #20]
 12126 0046 1344     		add	r3, r3, r2
 12127 0048 C14A     		ldr	r2, .L613+8
 12128 004a 1D46     		mov	r5, r3
 12129 004c 1446     		mov	r4, r2
 12130 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12131 0050 2860     		str	r0, [r5]	@ unaligned
 12132 0052 6960     		str	r1, [r5, #4]	@ unaligned
 12133 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 12134 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 12135 0058 2388     		ldrh	r3, [r4]	@ unaligned
 12136 005a A278     		ldrb	r2, [r4, #2]
 12137 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 12138 005e 1346     		mov	r3, r2
 12139 0060 AB74     		strb	r3, [r5, #18]
1777:..\src/command_processing.c ****         strcat(info_string, VERSION);
 12140              		.loc 1 1777 0
 12141 0062 7869     		ldr	r0, [r7, #20]
 12142 0064 FFF7FEFF 		bl	strlen
 12143 0068 0346     		mov	r3, r0
 12144 006a 1A46     		mov	r2, r3
 12145 006c 7B69     		ldr	r3, [r7, #20]
 12146 006e 1344     		add	r3, r3, r2
 12147 0070 B84A     		ldr	r2, .L613+12
 12148 0072 1446     		mov	r4, r2
 12149 0074 9E46     		mov	lr, r3
 12150 0076 04F1200C 		add	ip, r4, #32
 12151              	.L521:
 12152 007a 7546     		mov	r5, lr
 12153 007c 2646     		mov	r6, r4
 12154 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12155 0080 2860     		str	r0, [r5]	@ unaligned
 12156 0082 6960     		str	r1, [r5, #4]	@ unaligned
 12157 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 12158 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 12159 0088 1034     		adds	r4, r4, #16
 12160 008a 0EF1100E 		add	lr, lr, #16
 12161 008e 6445     		cmp	r4, ip
 12162 0090 F3D1     		bne	.L521
 12163 0092 7346     		mov	r3, lr
 12164 0094 2246     		mov	r2, r4
 12165 0096 1068     		ldr	r0, [r2]	@ unaligned
 12166 0098 1860     		str	r0, [r3]	@ unaligned
 12167 009a 9188     		ldrh	r1, [r2, #4]	@ unaligned
 12168 009c 9279     		ldrb	r2, [r2, #6]
 12169 009e 9980     		strh	r1, [r3, #4]	@ unaligned
 12170 00a0 9A71     		strb	r2, [r3, #6]
1778:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 12171              		.loc 1 1778 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 282


 12172 00a2 7869     		ldr	r0, [r7, #20]
 12173 00a4 FFF7FEFF 		bl	strlen
 12174 00a8 0346     		mov	r3, r0
 12175 00aa 1A46     		mov	r2, r3
 12176 00ac 7B69     		ldr	r3, [r7, #20]
 12177 00ae 1344     		add	r3, r3, r2
 12178 00b0 A94A     		ldr	r2, .L613+16
 12179 00b2 1068     		ldr	r0, [r2]	@ unaligned
 12180 00b4 1860     		str	r0, [r3]	@ unaligned
 12181 00b6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12182 00b8 9A80     		strh	r2, [r3, #4]	@ unaligned
1779:..\src/command_processing.c **** 
1780:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 12183              		.loc 1 1780 0
 12184 00ba 7869     		ldr	r0, [r7, #20]
 12185 00bc FFF7FEFF 		bl	strlen
 12186 00c0 0346     		mov	r3, r0
 12187 00c2 1A46     		mov	r2, r3
 12188 00c4 7B69     		ldr	r3, [r7, #20]
 12189 00c6 1344     		add	r3, r3, r2
 12190 00c8 A44A     		ldr	r2, .L613+20
 12191 00ca 1C46     		mov	r4, r3
 12192 00cc 1346     		mov	r3, r2
 12193 00ce 07CB     		ldmia	r3!, {r0, r1, r2}
 12194 00d0 2060     		str	r0, [r4]	@ unaligned
 12195 00d2 6160     		str	r1, [r4, #4]	@ unaligned
 12196 00d4 A260     		str	r2, [r4, #8]	@ unaligned
 12197 00d6 1B88     		ldrh	r3, [r3]	@ unaligned
 12198 00d8 A381     		strh	r3, [r4, #12]	@ unaligned
1781:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 12199              		.loc 1 1781 0
 12200 00da D7F88C30 		ldr	r3, [r7, #140]
 12201 00de 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12202 00e2 1A46     		mov	r2, r3
 12203 00e4 07F11C03 		add	r3, r7, #28
 12204 00e8 9D49     		ldr	r1, .L613+24
 12205 00ea 1846     		mov	r0, r3
 12206 00ec FFF7FEFF 		bl	sprintf
1782:..\src/command_processing.c ****         strcat(info_string, str);
 12207              		.loc 1 1782 0
 12208 00f0 07F11C03 		add	r3, r7, #28
 12209 00f4 1946     		mov	r1, r3
 12210 00f6 7869     		ldr	r0, [r7, #20]
 12211 00f8 FFF7FEFF 		bl	strcat
1783:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 12212              		.loc 1 1783 0
 12213 00fc D7F88C30 		ldr	r3, [r7, #140]
 12214 0100 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12215 0104 012B     		cmp	r3, #1
 12216 0106 1BD0     		beq	.L523
 12217 0108 022B     		cmp	r3, #2
 12218 010a 31D0     		beq	.L524
 12219 010c 002B     		cmp	r3, #0
 12220 010e 00D0     		beq	.L525
1784:..\src/command_processing.c ****             case SOFTHAND_PRO:
1785:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1786:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 283


1787:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1788:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1789:..\src/command_processing.c ****                 break;
1790:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1791:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
1792:..\src/command_processing.c ****                 break;
1793:..\src/command_processing.c ****             default:
1794:..\src/command_processing.c ****                 break;
 12221              		.loc 1 1794 0
 12222 0110 4FE0     		b	.L526
 12223              	.L525:
1785:..\src/command_processing.c ****                 break;
 12224              		.loc 1 1785 0
 12225 0112 7869     		ldr	r0, [r7, #20]
 12226 0114 FFF7FEFF 		bl	strlen
 12227 0118 0346     		mov	r3, r0
 12228 011a 1A46     		mov	r2, r3
 12229 011c 7B69     		ldr	r3, [r7, #20]
 12230 011e 1344     		add	r3, r3, r2
 12231 0120 904A     		ldr	r2, .L613+28
 12232 0122 1C46     		mov	r4, r3
 12233 0124 1546     		mov	r5, r2
 12234 0126 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12235 0128 2060     		str	r0, [r4]	@ unaligned
 12236 012a 6160     		str	r1, [r4, #4]	@ unaligned
 12237 012c A260     		str	r2, [r4, #8]	@ unaligned
 12238 012e E360     		str	r3, [r4, #12]	@ unaligned
 12239 0130 2868     		ldr	r0, [r5]	@ unaligned
 12240 0132 2061     		str	r0, [r4, #16]	@ unaligned
 12241 0134 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 12242 0136 AA79     		ldrb	r2, [r5, #6]
 12243 0138 A382     		strh	r3, [r4, #20]	@ unaligned
 12244 013a 1346     		mov	r3, r2
 12245 013c A375     		strb	r3, [r4, #22]
1786:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 12246              		.loc 1 1786 0
 12247 013e 38E0     		b	.L526
 12248              	.L523:
1788:..\src/command_processing.c ****                 break;
 12249              		.loc 1 1788 0
 12250 0140 7869     		ldr	r0, [r7, #20]
 12251 0142 FFF7FEFF 		bl	strlen
 12252 0146 0346     		mov	r3, r0
 12253 0148 1A46     		mov	r2, r3
 12254 014a 7B69     		ldr	r3, [r7, #20]
 12255 014c 1344     		add	r3, r3, r2
 12256 014e 864A     		ldr	r2, .L613+32
 12257 0150 1D46     		mov	r5, r3
 12258 0152 1446     		mov	r4, r2
 12259 0154 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12260 0156 2860     		str	r0, [r5]	@ unaligned
 12261 0158 6960     		str	r1, [r5, #4]	@ unaligned
 12262 015a AA60     		str	r2, [r5, #8]	@ unaligned
 12263 015c EB60     		str	r3, [r5, #12]	@ unaligned
 12264 015e 03CC     		ldmia	r4!, {r0, r1}
 12265 0160 2861     		str	r0, [r5, #16]	@ unaligned
 12266 0162 6961     		str	r1, [r5, #20]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 284


 12267 0164 2388     		ldrh	r3, [r4]	@ unaligned
 12268 0166 A278     		ldrb	r2, [r4, #2]
 12269 0168 2B83     		strh	r3, [r5, #24]	@ unaligned
 12270 016a 1346     		mov	r3, r2
 12271 016c AB76     		strb	r3, [r5, #26]
1789:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
 12272              		.loc 1 1789 0
 12273 016e 20E0     		b	.L526
 12274              	.L524:
1791:..\src/command_processing.c ****                 break;
 12275              		.loc 1 1791 0
 12276 0170 7869     		ldr	r0, [r7, #20]
 12277 0172 FFF7FEFF 		bl	strlen
 12278 0176 0346     		mov	r3, r0
 12279 0178 1A46     		mov	r2, r3
 12280 017a 7B69     		ldr	r3, [r7, #20]
 12281 017c 1344     		add	r3, r3, r2
 12282 017e 7B4A     		ldr	r2, .L613+36
 12283 0180 1446     		mov	r4, r2
 12284 0182 9E46     		mov	lr, r3
 12285 0184 04F1200C 		add	ip, r4, #32
 12286              	.L527:
 12287 0188 7546     		mov	r5, lr
 12288 018a 2646     		mov	r6, r4
 12289 018c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12290 018e 2860     		str	r0, [r5]	@ unaligned
 12291 0190 6960     		str	r1, [r5, #4]	@ unaligned
 12292 0192 AA60     		str	r2, [r5, #8]	@ unaligned
 12293 0194 EB60     		str	r3, [r5, #12]	@ unaligned
 12294 0196 1034     		adds	r4, r4, #16
 12295 0198 0EF1100E 		add	lr, lr, #16
 12296 019c 6445     		cmp	r4, ip
 12297 019e F3D1     		bne	.L527
 12298 01a0 7346     		mov	r3, lr
 12299 01a2 2246     		mov	r2, r4
 12300 01a4 1068     		ldr	r0, [r2]	@ unaligned
 12301 01a6 1860     		str	r0, [r3]	@ unaligned
 12302 01a8 9188     		ldrh	r1, [r2, #4]	@ unaligned
 12303 01aa 9279     		ldrb	r2, [r2, #6]
 12304 01ac 9980     		strh	r1, [r3, #4]	@ unaligned
 12305 01ae 9A71     		strb	r2, [r3, #6]
1792:..\src/command_processing.c ****             default:
 12306              		.loc 1 1792 0
 12307 01b0 00BF     		nop
 12308              	.L526:
1795:..\src/command_processing.c ****         }
1796:..\src/command_processing.c ****         
1797:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 12309              		.loc 1 1797 0
 12310 01b2 D7F88C30 		ldr	r3, [r7, #140]
 12311 01b6 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 12312 01ba 002B     		cmp	r3, #0
 12313 01bc 02D0     		beq	.L529
 12314 01be 012B     		cmp	r3, #1
 12315 01c0 15D0     		beq	.L530
 12316 01c2 26E0     		b	.L528
 12317              	.L529:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 285


1798:..\src/command_processing.c ****             case RIGHT_HAND:
1799:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 12318              		.loc 1 1799 0
 12319 01c4 7869     		ldr	r0, [r7, #20]
 12320 01c6 FFF7FEFF 		bl	strlen
 12321 01ca 0346     		mov	r3, r0
 12322 01cc 1A46     		mov	r2, r3
 12323 01ce 7B69     		ldr	r3, [r7, #20]
 12324 01d0 1344     		add	r3, r3, r2
 12325 01d2 674A     		ldr	r2, .L613+40
 12326 01d4 1D46     		mov	r5, r3
 12327 01d6 1446     		mov	r4, r2
 12328 01d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12329 01da 2860     		str	r0, [r5]	@ unaligned
 12330 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 12331 01de AA60     		str	r2, [r5, #8]	@ unaligned
 12332 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 12333 01e2 2388     		ldrh	r3, [r4]	@ unaligned
 12334 01e4 A278     		ldrb	r2, [r4, #2]
 12335 01e6 2B82     		strh	r3, [r5, #16]	@ unaligned
 12336 01e8 1346     		mov	r3, r2
 12337 01ea AB74     		strb	r3, [r5, #18]
1800:..\src/command_processing.c ****                 break;
 12338              		.loc 1 1800 0
 12339 01ec 11E0     		b	.L528
 12340              	.L530:
1801:..\src/command_processing.c ****             case LEFT_HAND:
1802:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 12341              		.loc 1 1802 0
 12342 01ee 7869     		ldr	r0, [r7, #20]
 12343 01f0 FFF7FEFF 		bl	strlen
 12344 01f4 0346     		mov	r3, r0
 12345 01f6 1A46     		mov	r2, r3
 12346 01f8 7B69     		ldr	r3, [r7, #20]
 12347 01fa 1344     		add	r3, r3, r2
 12348 01fc 5D4A     		ldr	r2, .L613+44
 12349 01fe 1D46     		mov	r5, r3
 12350 0200 1446     		mov	r4, r2
 12351 0202 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12352 0204 2860     		str	r0, [r5]	@ unaligned
 12353 0206 6960     		str	r1, [r5, #4]	@ unaligned
 12354 0208 AA60     		str	r2, [r5, #8]	@ unaligned
 12355 020a EB60     		str	r3, [r5, #12]	@ unaligned
 12356 020c 2388     		ldrh	r3, [r4]	@ unaligned
 12357 020e 2B82     		strh	r3, [r5, #16]	@ unaligned
1803:..\src/command_processing.c ****                 break;
 12358              		.loc 1 1803 0
 12359 0210 00BF     		nop
 12360              	.L528:
1804:..\src/command_processing.c ****         }
1805:..\src/command_processing.c **** 
1806:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 12361              		.loc 1 1806 0
 12362 0212 D7F88C30 		ldr	r3, [r7, #140]
 12363 0216 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 12364 021a 012B     		cmp	r3, #1
 12365 021c 02D0     		beq	.L532
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 286


 12366 021e 022B     		cmp	r3, #2
 12367 0220 11D0     		beq	.L533
 12368 0222 21E0     		b	.L610
 12369              	.L532:
1807:..\src/command_processing.c ****             case MARIA:
1808:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 12370              		.loc 1 1808 0
 12371 0224 7869     		ldr	r0, [r7, #20]
 12372 0226 FFF7FEFF 		bl	strlen
 12373 022a 0346     		mov	r3, r0
 12374 022c 1A46     		mov	r2, r3
 12375 022e 7B69     		ldr	r3, [r7, #20]
 12376 0230 1344     		add	r3, r3, r2
 12377 0232 514A     		ldr	r2, .L613+48
 12378 0234 1C46     		mov	r4, r3
 12379 0236 1346     		mov	r3, r2
 12380 0238 07CB     		ldmia	r3!, {r0, r1, r2}
 12381 023a 2060     		str	r0, [r4]	@ unaligned
 12382 023c 6160     		str	r1, [r4, #4]	@ unaligned
 12383 023e A260     		str	r2, [r4, #8]	@ unaligned
 12384 0240 1B88     		ldrh	r3, [r3]	@ unaligned
 12385 0242 A381     		strh	r3, [r4, #12]	@ unaligned
1809:..\src/command_processing.c ****                 break;
 12386              		.loc 1 1809 0
 12387 0244 24E0     		b	.L534
 12388              	.L533:
1810:..\src/command_processing.c ****             case ROZA:
1811:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 12389              		.loc 1 1811 0
 12390 0246 7869     		ldr	r0, [r7, #20]
 12391 0248 FFF7FEFF 		bl	strlen
 12392 024c 0346     		mov	r3, r0
 12393 024e 1A46     		mov	r2, r3
 12394 0250 7B69     		ldr	r3, [r7, #20]
 12395 0252 1344     		add	r3, r3, r2
 12396 0254 494A     		ldr	r2, .L613+52
 12397 0256 1C46     		mov	r4, r3
 12398 0258 1346     		mov	r3, r2
 12399 025a 07CB     		ldmia	r3!, {r0, r1, r2}
 12400 025c 2060     		str	r0, [r4]	@ unaligned
 12401 025e 6160     		str	r1, [r4, #4]	@ unaligned
 12402 0260 A260     		str	r2, [r4, #8]	@ unaligned
 12403 0262 1B78     		ldrb	r3, [r3]
 12404 0264 2373     		strb	r3, [r4, #12]
1812:..\src/command_processing.c ****                 break;
 12405              		.loc 1 1812 0
 12406 0266 13E0     		b	.L534
 12407              	.L610:
1813:..\src/command_processing.c ****             default:
1814:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 12408              		.loc 1 1814 0
 12409 0268 7869     		ldr	r0, [r7, #20]
 12410 026a FFF7FEFF 		bl	strlen
 12411 026e 0346     		mov	r3, r0
 12412 0270 1A46     		mov	r2, r3
 12413 0272 7B69     		ldr	r3, [r7, #20]
 12414 0274 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 287


 12415 0276 424A     		ldr	r2, .L613+56
 12416 0278 1D46     		mov	r5, r3
 12417 027a 1446     		mov	r4, r2
 12418 027c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12419 027e 2860     		str	r0, [r5]	@ unaligned
 12420 0280 6960     		str	r1, [r5, #4]	@ unaligned
 12421 0282 AA60     		str	r2, [r5, #8]	@ unaligned
 12422 0284 EB60     		str	r3, [r5, #12]	@ unaligned
 12423 0286 2068     		ldr	r0, [r4]	@ unaligned
 12424 0288 2861     		str	r0, [r5, #16]	@ unaligned
 12425 028a 2379     		ldrb	r3, [r4, #4]
 12426 028c 2B75     		strb	r3, [r5, #20]
1815:..\src/command_processing.c ****                 break;
 12427              		.loc 1 1815 0
 12428 028e 00BF     		nop
 12429              	.L534:
1816:..\src/command_processing.c ****         }
1817:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 12430              		.loc 1 1817 0
 12431 0290 7869     		ldr	r0, [r7, #20]
 12432 0292 FFF7FEFF 		bl	strlen
 12433 0296 0346     		mov	r3, r0
 12434 0298 1A46     		mov	r2, r3
 12435 029a 7B69     		ldr	r3, [r7, #20]
 12436 029c 1344     		add	r3, r3, r2
 12437 029e 2B4A     		ldr	r2, .L613+4
 12438 02a0 1188     		ldrh	r1, [r2]	@ unaligned
 12439 02a2 9278     		ldrb	r2, [r2, #2]
 12440 02a4 1980     		strh	r1, [r3]	@ unaligned
 12441 02a6 9A70     		strb	r2, [r3, #2]
 12442              	.LBB17:
1818:..\src/command_processing.c ****         
1819:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 12443              		.loc 1 1819 0
 12444 02a8 0023     		movs	r3, #0
 12445 02aa 87F89330 		strb	r3, [r7, #147]
 12446 02ae 01F02AB8 		b	.L535
 12447              	.L586:
 12448              	.LBB18:
1820:..\src/command_processing.c ****             
1821:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 12449              		.loc 1 1821 0
 12450 02b2 97F89330 		ldrb	r3, [r7, #147]
 12451 02b6 87F88B30 		strb	r3, [r7, #139]
1822:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 12452              		.loc 1 1822 0
 12453 02ba 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 12454 02be 1346     		mov	r3, r2
 12455 02c0 DB00     		lsls	r3, r3, #3
 12456 02c2 9B1A     		subs	r3, r3, r2
 12457 02c4 1B01     		lsls	r3, r3, #4
 12458 02c6 B033     		adds	r3, r3, #176
 12459 02c8 D7F88C20 		ldr	r2, [r7, #140]
 12460 02cc 1344     		add	r3, r3, r2
 12461 02ce C7F88430 		str	r3, [r7, #132]
1823:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 12462              		.loc 1 1823 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 288


 12463 02d2 D7F88430 		ldr	r3, [r7, #132]
 12464 02d6 93F86030 		ldrb	r3, [r3, #96]
 12465 02da 87F88330 		strb	r3, [r7, #131]
1824:..\src/command_processing.c ****                   
1825:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 12466              		.loc 1 1825 0
 12467 02de 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12468 02e2 5A1C     		adds	r2, r3, #1
 12469 02e4 07F11C03 		add	r3, r7, #28
 12470 02e8 2649     		ldr	r1, .L613+60
 12471 02ea 1846     		mov	r0, r3
 12472 02ec FFF7FEFF 		bl	sprintf
1826:..\src/command_processing.c ****             strcat(info_string, str);
 12473              		.loc 1 1826 0
 12474 02f0 07F11C03 		add	r3, r7, #28
 12475 02f4 1946     		mov	r1, r3
 12476 02f6 7869     		ldr	r0, [r7, #20]
 12477 02f8 FFF7FEFF 		bl	strcat
1827:..\src/command_processing.c ****                         
1828:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 12478              		.loc 1 1828 0
 12479 02fc 7869     		ldr	r0, [r7, #20]
 12480 02fe FFF7FEFF 		bl	strlen
 12481 0302 0346     		mov	r3, r0
 12482 0304 1A46     		mov	r2, r3
 12483 0306 7B69     		ldr	r3, [r7, #20]
 12484 0308 1344     		add	r3, r3, r2
 12485 030a 1F4A     		ldr	r2, .L613+64
 12486 030c 1C46     		mov	r4, r3
 12487 030e 1546     		mov	r5, r2
 12488 0310 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12489 0312 2060     		str	r0, [r4]	@ unaligned
 12490 0314 6160     		str	r1, [r4, #4]	@ unaligned
 12491 0316 A260     		str	r2, [r4, #8]	@ unaligned
 12492 0318 E360     		str	r3, [r4, #12]	@ unaligned
1829:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 12493              		.loc 1 1829 0
 12494 031a D7F88430 		ldr	r3, [r7, #132]
 12495 031e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12496 0322 022B     		cmp	r3, #2
 12497 0324 34D1     		bne	.L536
1830:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 12498              		.loc 1 1830 0
 12499 0326 7869     		ldr	r0, [r7, #20]
 12500 0328 FFF7FEFF 		bl	strlen
 12501 032c 0346     		mov	r3, r0
 12502 032e 1A46     		mov	r2, r3
 12503 0330 7B69     		ldr	r3, [r7, #20]
 12504 0332 1344     		add	r3, r3, r2
 12505 0334 154A     		ldr	r2, .L613+68
 12506 0336 1C46     		mov	r4, r3
 12507 0338 1346     		mov	r3, r2
 12508 033a 07CB     		ldmia	r3!, {r0, r1, r2}
 12509 033c 2060     		str	r0, [r4]	@ unaligned
 12510 033e 6160     		str	r1, [r4, #4]	@ unaligned
 12511 0340 A260     		str	r2, [r4, #8]	@ unaligned
 12512 0342 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 289


 12513 0344 A381     		strh	r3, [r4, #12]	@ unaligned
 12514 0346 49E0     		b	.L537
 12515              	.L614:
 12516              		.align	2
 12517              	.L613:
 12518 0348 00000000 		.word	c_mem
 12519 034c AC0E0000 		.word	.LC132
 12520 0350 B00E0000 		.word	.LC133
 12521 0354 C40E0000 		.word	.LC134
 12522 0358 EC0E0000 		.word	.LC135
 12523 035c F40E0000 		.word	.LC136
 12524 0360 040F0000 		.word	.LC137
 12525 0364 100F0000 		.word	.LC138
 12526 0368 280F0000 		.word	.LC139
 12527 036c 440F0000 		.word	.LC140
 12528 0370 6C0F0000 		.word	.LC141
 12529 0374 800F0000 		.word	.LC142
 12530 0378 940F0000 		.word	.LC143
 12531 037c A40F0000 		.word	.LC144
 12532 0380 B40F0000 		.word	.LC145
 12533 0384 CC0F0000 		.word	.LC146
 12534 0388 DC0F0000 		.word	.LC147
 12535 038c EC0F0000 		.word	.LC148
 12536              	.L536:
1831:..\src/command_processing.c ****             else {
1832:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 12537              		.loc 1 1832 0
 12538 0390 D7F88430 		ldr	r3, [r7, #132]
 12539 0394 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12540 0398 012B     		cmp	r3, #1
 12541 039a 0FD1     		bne	.L538
1833:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 12542              		.loc 1 1833 0
 12543 039c 7869     		ldr	r0, [r7, #20]
 12544 039e FFF7FEFF 		bl	strlen
 12545 03a2 0346     		mov	r3, r0
 12546 03a4 1A46     		mov	r2, r3
 12547 03a6 7B69     		ldr	r3, [r7, #20]
 12548 03a8 1344     		add	r3, r3, r2
 12549 03aa 8F49     		ldr	r1, .L615
 12550 03ac 1A46     		mov	r2, r3
 12551 03ae 0B46     		mov	r3, r1
 12552 03b0 03CB     		ldmia	r3!, {r0, r1}
 12553 03b2 1060     		str	r0, [r2]	@ unaligned
 12554 03b4 5160     		str	r1, [r2, #4]	@ unaligned
 12555 03b6 1B78     		ldrb	r3, [r3]
 12556 03b8 1372     		strb	r3, [r2, #8]
 12557 03ba 0FE0     		b	.L537
 12558              	.L538:
1834:..\src/command_processing.c ****                 else
1835:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 12559              		.loc 1 1835 0
 12560 03bc 7869     		ldr	r0, [r7, #20]
 12561 03be FFF7FEFF 		bl	strlen
 12562 03c2 0346     		mov	r3, r0
 12563 03c4 1A46     		mov	r2, r3
 12564 03c6 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 290


 12565 03c8 1344     		add	r3, r3, r2
 12566 03ca 884A     		ldr	r2, .L615+4
 12567 03cc 1C46     		mov	r4, r3
 12568 03ce 1346     		mov	r3, r2
 12569 03d0 07CB     		ldmia	r3!, {r0, r1, r2}
 12570 03d2 2060     		str	r0, [r4]	@ unaligned
 12571 03d4 6160     		str	r1, [r4, #4]	@ unaligned
 12572 03d6 A260     		str	r2, [r4, #8]	@ unaligned
 12573 03d8 1B88     		ldrh	r3, [r3]	@ unaligned
 12574 03da A381     		strh	r3, [r4, #12]	@ unaligned
 12575              	.L537:
1836:..\src/command_processing.c ****             }
1837:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 12576              		.loc 1 1837 0
 12577 03dc D7F88430 		ldr	r3, [r7, #132]
 12578 03e0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12579 03e4 022B     		cmp	r3, #2
 12580 03e6 13D1     		bne	.L539
1838:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 12581              		.loc 1 1838 0
 12582 03e8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12583 03ec 804A     		ldr	r2, .L615+8
 12584 03ee 1B01     		lsls	r3, r3, #4
 12585 03f0 1344     		add	r3, r3, r2
 12586 03f2 0433     		adds	r3, r3, #4
 12587 03f4 1A68     		ldr	r2, [r3]
 12588 03f6 07F11C03 		add	r3, r7, #28
 12589 03fa 7E49     		ldr	r1, .L615+12
 12590 03fc 1846     		mov	r0, r3
 12591 03fe FFF7FEFF 		bl	sprintf
1839:..\src/command_processing.c ****                 strcat(info_string,str);
 12592              		.loc 1 1839 0
 12593 0402 07F11C03 		add	r3, r7, #28
 12594 0406 1946     		mov	r1, r3
 12595 0408 7869     		ldr	r0, [r7, #20]
 12596 040a FFF7FEFF 		bl	strcat
 12597 040e 39E0     		b	.L540
 12598              	.L539:
1840:..\src/command_processing.c ****             }
1841:..\src/command_processing.c ****             else {
1842:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 12599              		.loc 1 1842 0
 12600 0410 D7F88430 		ldr	r3, [r7, #132]
 12601 0414 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12602 0418 012B     		cmp	r3, #1
 12603 041a 13D1     		bne	.L541
1843:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 12604              		.loc 1 1843 0
 12605 041c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12606 0420 734A     		ldr	r2, .L615+8
 12607 0422 1B01     		lsls	r3, r3, #4
 12608 0424 1344     		add	r3, r3, r2
 12609 0426 0833     		adds	r3, r3, #8
 12610 0428 1A68     		ldr	r2, [r3]
 12611 042a 07F11C03 		add	r3, r7, #28
 12612 042e 7149     		ldr	r1, .L615+12
 12613 0430 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 291


 12614 0432 FFF7FEFF 		bl	sprintf
1844:..\src/command_processing.c ****                     strcat(info_string,str);
 12615              		.loc 1 1844 0
 12616 0436 07F11C03 		add	r3, r7, #28
 12617 043a 1946     		mov	r1, r3
 12618 043c 7869     		ldr	r0, [r7, #20]
 12619 043e FFF7FEFF 		bl	strcat
 12620 0442 1FE0     		b	.L540
 12621              	.L541:
1845:..\src/command_processing.c ****                 }
1846:..\src/command_processing.c ****                 else {
1847:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 12622              		.loc 1 1847 0
 12623 0444 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12624 0448 694A     		ldr	r2, .L615+8
 12625 044a 1B01     		lsls	r3, r3, #4
 12626 044c 1344     		add	r3, r3, r2
 12627 044e 1968     		ldr	r1, [r3]
 12628 0450 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12629 0454 D7F88C00 		ldr	r0, [r7, #140]
 12630 0458 1346     		mov	r3, r2
 12631 045a 5B00     		lsls	r3, r3, #1
 12632 045c 1344     		add	r3, r3, r2
 12633 045e 1B01     		lsls	r3, r3, #4
 12634 0460 0344     		add	r3, r3, r0
 12635 0462 03F29513 		addw	r3, r3, #405
 12636 0466 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12637 0468 41FA03F2 		asr	r2, r1, r3
 12638 046c 07F11C03 		add	r3, r7, #28
 12639 0470 6049     		ldr	r1, .L615+12
 12640 0472 1846     		mov	r0, r3
 12641 0474 FFF7FEFF 		bl	sprintf
1848:..\src/command_processing.c ****                     strcat(info_string,str);
 12642              		.loc 1 1848 0
 12643 0478 07F11C03 		add	r3, r7, #28
 12644 047c 1946     		mov	r1, r3
 12645 047e 7869     		ldr	r0, [r7, #20]
 12646 0480 FFF7FEFF 		bl	strcat
 12647              	.L540:
1849:..\src/command_processing.c ****                 }
1850:..\src/command_processing.c ****             }
1851:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 12648              		.loc 1 1851 0
 12649 0484 7869     		ldr	r0, [r7, #20]
 12650 0486 FFF7FEFF 		bl	strlen
 12651 048a 0346     		mov	r3, r0
 12652 048c 1A46     		mov	r2, r3
 12653 048e 7B69     		ldr	r3, [r7, #20]
 12654 0490 1344     		add	r3, r3, r2
 12655 0492 594A     		ldr	r2, .L615+16
 12656 0494 1188     		ldrh	r1, [r2]	@ unaligned
 12657 0496 9278     		ldrb	r2, [r2, #2]
 12658 0498 1980     		strh	r1, [r3]	@ unaligned
 12659 049a 9A70     		strb	r2, [r3, #2]
1852:..\src/command_processing.c **** 
1853:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 12660              		.loc 1 1853 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 292


 12661 049c 07F11C03 		add	r3, r7, #28
 12662 04a0 564A     		ldr	r2, .L615+20
 12663 04a2 1C46     		mov	r4, r3
 12664 04a4 1346     		mov	r3, r2
 12665 04a6 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 12666 04a8 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1854:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 12667              		.loc 1 1854 0
 12668 04ac 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12669 04b0 534A     		ldr	r2, .L615+24
 12670 04b2 1B01     		lsls	r3, r3, #4
 12671 04b4 1344     		add	r3, r3, r2
 12672 04b6 0C33     		adds	r3, r3, #12
 12673 04b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12674 04ba 03F00103 		and	r3, r3, #1
 12675 04be 002B     		cmp	r3, #0
 12676 04c0 0FD0     		beq	.L542
1855:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 12677              		.loc 1 1855 0
 12678 04c2 07F11C03 		add	r3, r7, #28
 12679 04c6 1846     		mov	r0, r3
 12680 04c8 FFF7FEFF 		bl	strlen
 12681 04cc 0346     		mov	r3, r0
 12682 04ce 1A46     		mov	r2, r3
 12683 04d0 07F11C03 		add	r3, r7, #28
 12684 04d4 1344     		add	r3, r3, r2
 12685 04d6 4B4A     		ldr	r2, .L615+28
 12686 04d8 1068     		ldr	r0, [r2]	@ unaligned
 12687 04da 1860     		str	r0, [r3]	@ unaligned
 12688 04dc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12689 04de 9A80     		strh	r2, [r3, #4]	@ unaligned
 12690 04e0 0EE0     		b	.L543
 12691              	.L542:
1856:..\src/command_processing.c ****             } else {
1857:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 12692              		.loc 1 1857 0
 12693 04e2 07F11C03 		add	r3, r7, #28
 12694 04e6 1846     		mov	r0, r3
 12695 04e8 FFF7FEFF 		bl	strlen
 12696 04ec 0346     		mov	r3, r0
 12697 04ee 1A46     		mov	r2, r3
 12698 04f0 07F11C03 		add	r3, r7, #28
 12699 04f4 1344     		add	r3, r3, r2
 12700 04f6 444A     		ldr	r2, .L615+32
 12701 04f8 1068     		ldr	r0, [r2]	@ unaligned
 12702 04fa 1860     		str	r0, [r3]	@ unaligned
 12703 04fc 1279     		ldrb	r2, [r2, #4]
 12704 04fe 1A71     		strb	r2, [r3, #4]
 12705              	.L543:
1858:..\src/command_processing.c ****             }
1859:..\src/command_processing.c ****             strcat(info_string, str);
 12706              		.loc 1 1859 0
 12707 0500 07F11C03 		add	r3, r7, #28
 12708 0504 1946     		mov	r1, r3
 12709 0506 7869     		ldr	r0, [r7, #20]
 12710 0508 FFF7FEFF 		bl	strcat
1860:..\src/command_processing.c ****                         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 293


1861:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 12711              		.loc 1 1861 0
 12712 050c 7869     		ldr	r0, [r7, #20]
 12713 050e FFF7FEFF 		bl	strlen
 12714 0512 0346     		mov	r3, r0
 12715 0514 1A46     		mov	r2, r3
 12716 0516 7B69     		ldr	r3, [r7, #20]
 12717 0518 1344     		add	r3, r3, r2
 12718 051a 3C4A     		ldr	r2, .L615+36
 12719 051c 1D46     		mov	r5, r3
 12720 051e 1446     		mov	r4, r2
 12721 0520 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12722 0522 2860     		str	r0, [r5]	@ unaligned
 12723 0524 6960     		str	r1, [r5, #4]	@ unaligned
 12724 0526 AA60     		str	r2, [r5, #8]	@ unaligned
 12725 0528 EB60     		str	r3, [r5, #12]	@ unaligned
 12726 052a 03CC     		ldmia	r4!, {r0, r1}
 12727 052c 2861     		str	r0, [r5, #16]	@ unaligned
 12728 052e 6961     		str	r1, [r5, #20]	@ unaligned
 12729 0530 2388     		ldrh	r3, [r4]	@ unaligned
 12730 0532 A278     		ldrb	r2, [r4, #2]
 12731 0534 2B83     		strh	r3, [r5, #24]	@ unaligned
 12732 0536 1346     		mov	r3, r2
 12733 0538 AB76     		strb	r3, [r5, #26]
1862:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 12734              		.loc 1 1862 0
 12735 053a D7F88430 		ldr	r3, [r7, #132]
 12736 053e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 12737 0542 012B     		cmp	r3, #1
 12738 0544 0CD1     		bne	.L544
1863:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 12739              		.loc 1 1863 0
 12740 0546 7869     		ldr	r0, [r7, #20]
 12741 0548 FFF7FEFF 		bl	strlen
 12742 054c 0346     		mov	r3, r0
 12743 054e 1A46     		mov	r2, r3
 12744 0550 7B69     		ldr	r3, [r7, #20]
 12745 0552 1344     		add	r3, r3, r2
 12746 0554 2E4A     		ldr	r2, .L615+40
 12747 0556 1068     		ldr	r0, [r2]	@ unaligned
 12748 0558 1860     		str	r0, [r3]	@ unaligned
 12749 055a 1279     		ldrb	r2, [r2, #4]
 12750 055c 1A71     		strb	r2, [r3, #4]
 12751 055e 09E0     		b	.L545
 12752              	.L544:
1864:..\src/command_processing.c ****             else
1865:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 12753              		.loc 1 1865 0
 12754 0560 7869     		ldr	r0, [r7, #20]
 12755 0562 FFF7FEFF 		bl	strlen
 12756 0566 0346     		mov	r3, r0
 12757 0568 1A46     		mov	r2, r3
 12758 056a 7B69     		ldr	r3, [r7, #20]
 12759 056c 1344     		add	r3, r3, r2
 12760 056e 294A     		ldr	r2, .L615+44
 12761 0570 1068     		ldr	r0, [r2]	@ unaligned
 12762 0572 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 294


 12763              	.L545:
1866:..\src/command_processing.c ****             
1867:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 12764              		.loc 1 1867 0
 12765 0574 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12766 0578 274A     		ldr	r2, .L615+48
 12767 057a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12768 057c 1A46     		mov	r2, r3
 12769 057e 07F11C03 		add	r3, r7, #28
 12770 0582 2649     		ldr	r1, .L615+52
 12771 0584 1846     		mov	r0, r3
 12772 0586 FFF7FEFF 		bl	sprintf
1868:..\src/command_processing.c ****             strcat(info_string, str);
 12773              		.loc 1 1868 0
 12774 058a 07F11C03 		add	r3, r7, #28
 12775 058e 1946     		mov	r1, r3
 12776 0590 7869     		ldr	r0, [r7, #20]
 12777 0592 FFF7FEFF 		bl	strcat
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 12778              		.loc 1 1870 0
 12779 0596 7869     		ldr	r0, [r7, #20]
 12780 0598 FFF7FEFF 		bl	strlen
 12781 059c 0346     		mov	r3, r0
 12782 059e 1A46     		mov	r2, r3
 12783 05a0 7B69     		ldr	r3, [r7, #20]
 12784 05a2 1344     		add	r3, r3, r2
 12785 05a4 1E4A     		ldr	r2, .L615+56
 12786 05a6 1D46     		mov	r5, r3
 12787 05a8 1446     		mov	r4, r2
 12788 05aa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12789 05ac 2860     		str	r0, [r5]	@ unaligned
 12790 05ae 6960     		str	r1, [r5, #4]	@ unaligned
 12791 05b0 AA60     		str	r2, [r5, #8]	@ unaligned
 12792 05b2 EB60     		str	r3, [r5, #12]	@ unaligned
 12793 05b4 2068     		ldr	r0, [r4]	@ unaligned
 12794 05b6 2861     		str	r0, [r5, #16]	@ unaligned
 12795 05b8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 12796 05ba AB82     		strh	r3, [r5, #20]	@ unaligned
1871:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 12797              		.loc 1 1871 0
 12798 05bc 7869     		ldr	r0, [r7, #20]
 12799 05be FFF7FEFF 		bl	strlen
 12800 05c2 0346     		mov	r3, r0
 12801 05c4 1A46     		mov	r2, r3
 12802 05c6 7B69     		ldr	r3, [r7, #20]
 12803 05c8 1344     		add	r3, r3, r2
 12804 05ca 164A     		ldr	r2, .L615+60
 12805 05cc 1C46     		mov	r4, r3
 12806 05ce 1346     		mov	r3, r2
 12807 05d0 07CB     		ldmia	r3!, {r0, r1, r2}
 12808 05d2 2060     		str	r0, [r4]	@ unaligned
 12809 05d4 6160     		str	r1, [r4, #4]	@ unaligned
 12810 05d6 A260     		str	r2, [r4, #8]	@ unaligned
 12811 05d8 1A88     		ldrh	r2, [r3]	@ unaligned
 12812 05da 9B78     		ldrb	r3, [r3, #2]
 12813 05dc A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 295


 12814 05de A373     		strb	r3, [r4, #14]
1872:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 12815              		.loc 1 1872 0
 12816 05e0 0023     		movs	r3, #0
 12817 05e2 C7F89430 		str	r3, [r7, #148]
 12818 05e6 5EE0     		b	.L546
 12819              	.L616:
 12820              		.align	2
 12821              	.L615:
 12822 05e8 FC0F0000 		.word	.LC149
 12823 05ec 08100000 		.word	.LC150
 12824 05f0 00000000 		.word	g_refOld
 12825 05f4 18100000 		.word	.LC151
 12826 05f8 AC0E0000 		.word	.LC132
 12827 05fc 1C100000 		.word	.LC152
 12828 0600 00000000 		.word	g_ref
 12829 0604 2C100000 		.word	.LC153
 12830 0608 34100000 		.word	.LC154
 12831 060c 3C100000 		.word	.LC155
 12832 0610 58100000 		.word	.LC156
 12833 0614 60100000 		.word	.LC157
 12834 0618 00000000 		.word	dev_pwm_limit
 12835 061c 64100000 		.word	.LC158
 12836 0620 74100000 		.word	.LC159
 12837 0624 8C100000 		.word	.LC160
 12838              	.L548:
1873:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12839              		.loc 1 1873 0
 12840 0628 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12841 062c A749     		ldr	r1, .L617
 12842 062e 1346     		mov	r3, r2
 12843 0630 5B00     		lsls	r3, r3, #1
 12844 0632 1344     		add	r3, r3, r2
 12845 0634 9B00     		lsls	r3, r3, #2
 12846 0636 1344     		add	r3, r3, r2
 12847 0638 D7F89420 		ldr	r2, [r7, #148]
 12848 063c 1344     		add	r3, r3, r2
 12849 063e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 12850 0642 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12851 0646 D7F88C00 		ldr	r0, [r7, #140]
 12852 064a 1346     		mov	r3, r2
 12853 064c 5B00     		lsls	r3, r3, #1
 12854 064e 1344     		add	r3, r3, r2
 12855 0650 1B01     		lsls	r3, r3, #4
 12856 0652 C218     		adds	r2, r0, r3
 12857 0654 D7F89430 		ldr	r3, [r7, #148]
 12858 0658 1344     		add	r3, r3, r2
 12859 065a 03F29513 		addw	r3, r3, #405
 12860 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12861 0660 41FA03F2 		asr	r2, r1, r3
 12862 0664 07F11C03 		add	r3, r7, #28
 12863 0668 9949     		ldr	r1, .L617+4
 12864 066a 1846     		mov	r0, r3
 12865 066c FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****                 strcat(info_string, str);
 12866              		.loc 1 1874 0
 12867 0670 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 296


 12868 0674 1946     		mov	r1, r3
 12869 0676 7869     		ldr	r0, [r7, #20]
 12870 0678 FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12871              		.loc 1 1875 0
 12872 067c D7F89430 		ldr	r3, [r7, #148]
 12873 0680 022B     		cmp	r3, #2
 12874 0682 0BD0     		beq	.L547
1876:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12875              		.loc 1 1876 0
 12876 0684 7869     		ldr	r0, [r7, #20]
 12877 0686 FFF7FEFF 		bl	strlen
 12878 068a 0346     		mov	r3, r0
 12879 068c 1A46     		mov	r2, r3
 12880 068e 7B69     		ldr	r3, [r7, #20]
 12881 0690 1344     		add	r3, r3, r2
 12882 0692 904A     		ldr	r2, .L617+8
 12883 0694 1188     		ldrh	r1, [r2]	@ unaligned
 12884 0696 9278     		ldrb	r2, [r2, #2]
 12885 0698 1980     		strh	r1, [r3]	@ unaligned
 12886 069a 9A70     		strb	r2, [r3, #2]
 12887              	.L547:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12888              		.loc 1 1872 0 discriminator 2
 12889 069c D7F89430 		ldr	r3, [r7, #148]
 12890 06a0 0133     		adds	r3, r3, #1
 12891 06a2 C7F89430 		str	r3, [r7, #148]
 12892              	.L546:
1872:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12893              		.loc 1 1872 0 is_stmt 0 discriminator 1
 12894 06a6 D7F89430 		ldr	r3, [r7, #148]
 12895 06aa 022B     		cmp	r3, #2
 12896 06ac BCDD     		ble	.L548
1877:..\src/command_processing.c ****                 }                
1878:..\src/command_processing.c ****             }
1879:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12897              		.loc 1 1879 0 is_stmt 1
 12898 06ae 7869     		ldr	r0, [r7, #20]
 12899 06b0 FFF7FEFF 		bl	strlen
 12900 06b4 0346     		mov	r3, r0
 12901 06b6 1A46     		mov	r2, r3
 12902 06b8 7B69     		ldr	r3, [r7, #20]
 12903 06ba 1344     		add	r3, r3, r2
 12904 06bc 864A     		ldr	r2, .L617+12
 12905 06be 1188     		ldrh	r1, [r2]	@ unaligned
 12906 06c0 9278     		ldrb	r2, [r2, #2]
 12907 06c2 1980     		strh	r1, [r3]	@ unaligned
 12908 06c4 9A70     		strb	r2, [r3, #2]
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 12909              		.loc 1 1881 0
 12910 06c6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12911 06ca 591C     		adds	r1, r3, #1
 12912 06cc 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12913 06d0 824A     		ldr	r2, .L617+16
 12914 06d2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12915 06d6 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 297


 12916 06da 0A46     		mov	r2, r1
 12917 06dc 8049     		ldr	r1, .L617+20
 12918 06de FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****             strcat(info_string, str);
 12919              		.loc 1 1882 0
 12920 06e2 07F11C03 		add	r3, r7, #28
 12921 06e6 1946     		mov	r1, r3
 12922 06e8 7869     		ldr	r0, [r7, #20]
 12923 06ea FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12924              		.loc 1 1883 0
 12925 06ee 7869     		ldr	r0, [r7, #20]
 12926 06f0 FFF7FEFF 		bl	strlen
 12927 06f4 0346     		mov	r3, r0
 12928 06f6 1A46     		mov	r2, r3
 12929 06f8 7B69     		ldr	r3, [r7, #20]
 12930 06fa 1344     		add	r3, r3, r2
 12931 06fc 764A     		ldr	r2, .L617+12
 12932 06fe 1188     		ldrh	r1, [r2]	@ unaligned
 12933 0700 9278     		ldrb	r2, [r2, #2]
 12934 0702 1980     		strh	r1, [r3]	@ unaligned
 12935 0704 9A70     		strb	r2, [r3, #2]
1884:..\src/command_processing.c ****             
1885:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 12936              		.loc 1 1885 0
 12937 0706 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12938 070a 591C     		adds	r1, r3, #1
 12939 070c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12940 0710 744A     		ldr	r2, .L617+24
 12941 0712 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12942 0716 07F11C00 		add	r0, r7, #28
 12943 071a 0A46     		mov	r2, r1
 12944 071c 7249     		ldr	r1, .L617+28
 12945 071e FFF7FEFF 		bl	sprintf
1886:..\src/command_processing.c ****             strcat(info_string, str);
 12946              		.loc 1 1886 0
 12947 0722 07F11C03 		add	r3, r7, #28
 12948 0726 1946     		mov	r1, r3
 12949 0728 7869     		ldr	r0, [r7, #20]
 12950 072a FFF7FEFF 		bl	strcat
1887:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12951              		.loc 1 1887 0
 12952 072e 7869     		ldr	r0, [r7, #20]
 12953 0730 FFF7FEFF 		bl	strlen
 12954 0734 0346     		mov	r3, r0
 12955 0736 1A46     		mov	r2, r3
 12956 0738 7B69     		ldr	r3, [r7, #20]
 12957 073a 1344     		add	r3, r3, r2
 12958 073c 664A     		ldr	r2, .L617+12
 12959 073e 1188     		ldrh	r1, [r2]	@ unaligned
 12960 0740 9278     		ldrb	r2, [r2, #2]
 12961 0742 1980     		strh	r1, [r3]	@ unaligned
 12962 0744 9A70     		strb	r2, [r3, #2]
1888:..\src/command_processing.c **** 
1889:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 12963              		.loc 1 1889 0
 12964 0746 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 298


 12965 074a 5C1C     		adds	r4, r3, #1
 12966 074c 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 12967 0750 5E4A     		ldr	r2, .L617
 12968 0752 3421     		movs	r1, #52
 12969 0754 01FB03F3 		mul	r3, r1, r3
 12970 0758 1344     		add	r3, r3, r2
 12971 075a 0C33     		adds	r3, r3, #12
 12972 075c 1B68     		ldr	r3, [r3]
 12973 075e 07F11C00 		add	r0, r7, #28
 12974 0762 2246     		mov	r2, r4
 12975 0764 6149     		ldr	r1, .L617+32
 12976 0766 FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****             strcat(info_string, str);
 12977              		.loc 1 1890 0
 12978 076a 07F11C03 		add	r3, r7, #28
 12979 076e 1946     		mov	r1, r3
 12980 0770 7869     		ldr	r0, [r7, #20]
 12981 0772 FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12982              		.loc 1 1891 0
 12983 0776 7869     		ldr	r0, [r7, #20]
 12984 0778 FFF7FEFF 		bl	strlen
 12985 077c 0346     		mov	r3, r0
 12986 077e 1A46     		mov	r2, r3
 12987 0780 7B69     		ldr	r3, [r7, #20]
 12988 0782 1344     		add	r3, r3, r2
 12989 0784 544A     		ldr	r2, .L617+12
 12990 0786 1188     		ldrh	r1, [r2]	@ unaligned
 12991 0788 9278     		ldrb	r2, [r2, #2]
 12992 078a 1980     		strh	r1, [r3]	@ unaligned
 12993 078c 9A70     		strb	r2, [r3, #2]
1892:..\src/command_processing.c ****             
1893:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 12994              		.loc 1 1893 0
 12995 078e D7F88430 		ldr	r3, [r7, #132]
 12996 0792 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 12997 0796 012B     		cmp	r3, #1
 12998 0798 23D1     		bne	.L549
1894:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 12999              		.loc 1 1894 0
 13000 079a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13001 079e 5C1C     		adds	r4, r3, #1
 13002 07a0 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 13003 07a4 494A     		ldr	r2, .L617
 13004 07a6 3421     		movs	r1, #52
 13005 07a8 01FB03F3 		mul	r3, r1, r3
 13006 07ac 1344     		add	r3, r3, r2
 13007 07ae 1433     		adds	r3, r3, #20
 13008 07b0 1B68     		ldr	r3, [r3]
 13009 07b2 07F11C00 		add	r0, r7, #28
 13010 07b6 2246     		mov	r2, r4
 13011 07b8 4D49     		ldr	r1, .L617+36
 13012 07ba FFF7FEFF 		bl	sprintf
1895:..\src/command_processing.c ****                 strcat(info_string, str);
 13013              		.loc 1 1895 0
 13014 07be 07F11C03 		add	r3, r7, #28
 13015 07c2 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 299


 13016 07c4 7869     		ldr	r0, [r7, #20]
 13017 07c6 FFF7FEFF 		bl	strcat
1896:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 13018              		.loc 1 1896 0
 13019 07ca 7869     		ldr	r0, [r7, #20]
 13020 07cc FFF7FEFF 		bl	strlen
 13021 07d0 0346     		mov	r3, r0
 13022 07d2 1A46     		mov	r2, r3
 13023 07d4 7B69     		ldr	r3, [r7, #20]
 13024 07d6 1344     		add	r3, r3, r2
 13025 07d8 3F4A     		ldr	r2, .L617+12
 13026 07da 1188     		ldrh	r1, [r2]	@ unaligned
 13027 07dc 9278     		ldrb	r2, [r2, #2]
 13028 07de 1980     		strh	r1, [r3]	@ unaligned
 13029 07e0 9A70     		strb	r2, [r3, #2]
 13030              	.L549:
1897:..\src/command_processing.c ****             }
1898:..\src/command_processing.c ****             
1899:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 13031              		.loc 1 1899 0
 13032 07e2 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13033 07e6 5A1C     		adds	r2, r3, #1
 13034 07e8 07F11C03 		add	r3, r7, #28
 13035 07ec 4149     		ldr	r1, .L617+40
 13036 07ee 1846     		mov	r0, r3
 13037 07f0 FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****             strcat(info_string, str);
 13038              		.loc 1 1900 0
 13039 07f4 07F11C03 		add	r3, r7, #28
 13040 07f8 1946     		mov	r1, r3
 13041 07fa 7869     		ldr	r0, [r7, #20]
 13042 07fc FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c **** 
1902:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 13043              		.loc 1 1902 0
 13044 0800 7869     		ldr	r0, [r7, #20]
 13045 0802 FFF7FEFF 		bl	strlen
 13046 0806 0346     		mov	r3, r0
 13047 0808 1A46     		mov	r2, r3
 13048 080a 7B69     		ldr	r3, [r7, #20]
 13049 080c 1344     		add	r3, r3, r2
 13050 080e 3A4A     		ldr	r2, .L617+44
 13051 0810 1D46     		mov	r5, r3
 13052 0812 1446     		mov	r4, r2
 13053 0814 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13054 0816 2860     		str	r0, [r5]	@ unaligned
 13055 0818 6960     		str	r1, [r5, #4]	@ unaligned
 13056 081a AA60     		str	r2, [r5, #8]	@ unaligned
 13057 081c EB60     		str	r3, [r5, #12]	@ unaligned
 13058 081e 2378     		ldrb	r3, [r4]
 13059 0820 2B74     		strb	r3, [r5, #16]
1903:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13060              		.loc 1 1903 0
 13061 0822 D7F88430 		ldr	r3, [r7, #132]
 13062 0826 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13063 082a 032B     		cmp	r3, #3
 13064 082c 6ED0     		beq	.L550
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 300


1904:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 13065              		.loc 1 1904 0
 13066 082e D7F88430 		ldr	r3, [r7, #132]
 13067 0832 1B68     		ldr	r3, [r3]
 13068 0834 1846     		mov	r0, r3
 13069 0836 FFF7FEFF 		bl	__aeabi_i2d
 13070 083a 4FF00002 		mov	r2, #0
 13071 083e 2F4B     		ldr	r3, .L617+48
 13072 0840 FFF7FEFF 		bl	__aeabi_ddiv
 13073 0844 0346     		mov	r3, r0
 13074 0846 0C46     		mov	r4, r1
 13075 0848 07F11C00 		add	r0, r7, #28
 13076 084c 1A46     		mov	r2, r3
 13077 084e 2346     		mov	r3, r4
 13078 0850 2B49     		ldr	r1, .L617+52
 13079 0852 FFF7FEFF 		bl	sprintf
1905:..\src/command_processing.c ****                 strcat(info_string, str);
 13080              		.loc 1 1905 0
 13081 0856 07F11C03 		add	r3, r7, #28
 13082 085a 1946     		mov	r1, r3
 13083 085c 7869     		ldr	r0, [r7, #20]
 13084 085e FFF7FEFF 		bl	strcat
1906:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 13085              		.loc 1 1906 0
 13086 0862 D7F88430 		ldr	r3, [r7, #132]
 13087 0866 5B68     		ldr	r3, [r3, #4]
 13088 0868 1846     		mov	r0, r3
 13089 086a FFF7FEFF 		bl	__aeabi_i2d
 13090 086e 4FF00002 		mov	r2, #0
 13091 0872 224B     		ldr	r3, .L617+48
 13092 0874 FFF7FEFF 		bl	__aeabi_ddiv
 13093 0878 0346     		mov	r3, r0
 13094 087a 0C46     		mov	r4, r1
 13095 087c 07F11C00 		add	r0, r7, #28
 13096 0880 1A46     		mov	r2, r3
 13097 0882 2346     		mov	r3, r4
 13098 0884 1F49     		ldr	r1, .L617+56
 13099 0886 FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 13100              		.loc 1 1907 0
 13101 088a 07F11C03 		add	r3, r7, #28
 13102 088e 1946     		mov	r1, r3
 13103 0890 7869     		ldr	r0, [r7, #20]
 13104 0892 FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 13105              		.loc 1 1908 0
 13106 0896 D7F88430 		ldr	r3, [r7, #132]
 13107 089a 9B68     		ldr	r3, [r3, #8]
 13108 089c 1846     		mov	r0, r3
 13109 089e FFF7FEFF 		bl	__aeabi_i2d
 13110 08a2 4FF00002 		mov	r2, #0
 13111 08a6 154B     		ldr	r3, .L617+48
 13112 08a8 FFF7FEFF 		bl	__aeabi_ddiv
 13113 08ac 0346     		mov	r3, r0
 13114 08ae 0C46     		mov	r4, r1
 13115 08b0 07F11C00 		add	r0, r7, #28
 13116 08b4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 301


 13117 08b6 2346     		mov	r3, r4
 13118 08b8 1349     		ldr	r1, .L617+60
 13119 08ba FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 13120              		.loc 1 1909 0
 13121 08be 07F11C03 		add	r3, r7, #28
 13122 08c2 1946     		mov	r1, r3
 13123 08c4 7869     		ldr	r0, [r7, #20]
 13124 08c6 FFF7FEFF 		bl	strcat
 13125 08ca 6DE0     		b	.L551
 13126              	.L618:
 13127              		.align	2
 13128              	.L617:
 13129 08cc 00000000 		.word	g_meas
 13130 08d0 9C100000 		.word	.LC161
 13131 08d4 A0100000 		.word	.LC162
 13132 08d8 AC0E0000 		.word	.LC132
 13133 08dc 00000000 		.word	dev_tension
 13134 08e0 A4100000 		.word	.LC163
 13135 08e4 00000000 		.word	pow_tension
 13136 08e8 C4100000 		.word	.LC164
 13137 08ec EC100000 		.word	.LC165
 13138 08f0 04110000 		.word	.LC166
 13139 08f4 2C110000 		.word	.LC167
 13140 08f8 48110000 		.word	.LC168
 13141 08fc 0000F040 		.word	1089470464
 13142 0900 5C110000 		.word	.LC169
 13143 0904 68110000 		.word	.LC170
 13144 0908 74110000 		.word	.LC171
 13145              	.L550:
1910:..\src/command_processing.c ****             }
1911:..\src/command_processing.c ****             else { 
1912:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 13146              		.loc 1 1912 0
 13147 090c D7F88430 		ldr	r3, [r7, #132]
 13148 0910 9B69     		ldr	r3, [r3, #24]
 13149 0912 1846     		mov	r0, r3
 13150 0914 FFF7FEFF 		bl	__aeabi_i2d
 13151 0918 4FF00002 		mov	r2, #0
 13152 091c CD4B     		ldr	r3, .L619
 13153 091e FFF7FEFF 		bl	__aeabi_ddiv
 13154 0922 0346     		mov	r3, r0
 13155 0924 0C46     		mov	r4, r1
 13156 0926 07F11C00 		add	r0, r7, #28
 13157 092a 1A46     		mov	r2, r3
 13158 092c 2346     		mov	r3, r4
 13159 092e CA49     		ldr	r1, .L619+4
 13160 0930 FFF7FEFF 		bl	sprintf
1913:..\src/command_processing.c ****                 strcat(info_string, str);
 13161              		.loc 1 1913 0
 13162 0934 07F11C03 		add	r3, r7, #28
 13163 0938 1946     		mov	r1, r3
 13164 093a 7869     		ldr	r0, [r7, #20]
 13165 093c FFF7FEFF 		bl	strcat
1914:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 13166              		.loc 1 1914 0
 13167 0940 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 302


 13168 0944 DB69     		ldr	r3, [r3, #28]
 13169 0946 1846     		mov	r0, r3
 13170 0948 FFF7FEFF 		bl	__aeabi_i2d
 13171 094c 4FF00002 		mov	r2, #0
 13172 0950 C04B     		ldr	r3, .L619
 13173 0952 FFF7FEFF 		bl	__aeabi_ddiv
 13174 0956 0346     		mov	r3, r0
 13175 0958 0C46     		mov	r4, r1
 13176 095a 07F11C00 		add	r0, r7, #28
 13177 095e 1A46     		mov	r2, r3
 13178 0960 2346     		mov	r3, r4
 13179 0962 BE49     		ldr	r1, .L619+8
 13180 0964 FFF7FEFF 		bl	sprintf
1915:..\src/command_processing.c ****                 strcat(info_string, str);
 13181              		.loc 1 1915 0
 13182 0968 07F11C03 		add	r3, r7, #28
 13183 096c 1946     		mov	r1, r3
 13184 096e 7869     		ldr	r0, [r7, #20]
 13185 0970 FFF7FEFF 		bl	strcat
1916:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 13186              		.loc 1 1916 0
 13187 0974 D7F88430 		ldr	r3, [r7, #132]
 13188 0978 1B6A     		ldr	r3, [r3, #32]
 13189 097a 1846     		mov	r0, r3
 13190 097c FFF7FEFF 		bl	__aeabi_i2d
 13191 0980 4FF00002 		mov	r2, #0
 13192 0984 B34B     		ldr	r3, .L619
 13193 0986 FFF7FEFF 		bl	__aeabi_ddiv
 13194 098a 0346     		mov	r3, r0
 13195 098c 0C46     		mov	r4, r1
 13196 098e 07F11C00 		add	r0, r7, #28
 13197 0992 1A46     		mov	r2, r3
 13198 0994 2346     		mov	r3, r4
 13199 0996 B249     		ldr	r1, .L619+12
 13200 0998 FFF7FEFF 		bl	sprintf
1917:..\src/command_processing.c ****                 strcat(info_string, str);
 13201              		.loc 1 1917 0
 13202 099c 07F11C03 		add	r3, r7, #28
 13203 09a0 1946     		mov	r1, r3
 13204 09a2 7869     		ldr	r0, [r7, #20]
 13205 09a4 FFF7FEFF 		bl	strcat
 13206              	.L551:
1918:..\src/command_processing.c ****             }
1919:..\src/command_processing.c **** 
1920:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 13207              		.loc 1 1920 0
 13208 09a8 7869     		ldr	r0, [r7, #20]
 13209 09aa FFF7FEFF 		bl	strlen
 13210 09ae 0346     		mov	r3, r0
 13211 09b0 1A46     		mov	r2, r3
 13212 09b2 7B69     		ldr	r3, [r7, #20]
 13213 09b4 1344     		add	r3, r3, r2
 13214 09b6 AB4A     		ldr	r2, .L619+16
 13215 09b8 1D46     		mov	r5, r3
 13216 09ba 1446     		mov	r4, r2
 13217 09bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13218 09be 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 303


 13219 09c0 6960     		str	r1, [r5, #4]	@ unaligned
 13220 09c2 AA60     		str	r2, [r5, #8]	@ unaligned
 13221 09c4 EB60     		str	r3, [r5, #12]	@ unaligned
 13222 09c6 03CC     		ldmia	r4!, {r0, r1}
 13223 09c8 2861     		str	r0, [r5, #16]	@ unaligned
 13224 09ca 6961     		str	r1, [r5, #20]	@ unaligned
 13225 09cc 2378     		ldrb	r3, [r4]
 13226 09ce 2B76     		strb	r3, [r5, #24]
1921:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13227              		.loc 1 1921 0
 13228 09d0 D7F88430 		ldr	r3, [r7, #132]
 13229 09d4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13230 09d8 032B     		cmp	r3, #3
 13231 09da 4ED0     		beq	.L552
1922:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 13232              		.loc 1 1922 0
 13233 09dc D7F88430 		ldr	r3, [r7, #132]
 13234 09e0 DB68     		ldr	r3, [r3, #12]
 13235 09e2 1846     		mov	r0, r3
 13236 09e4 FFF7FEFF 		bl	__aeabi_i2d
 13237 09e8 4FF00002 		mov	r2, #0
 13238 09ec 994B     		ldr	r3, .L619
 13239 09ee FFF7FEFF 		bl	__aeabi_ddiv
 13240 09f2 0346     		mov	r3, r0
 13241 09f4 0C46     		mov	r4, r1
 13242 09f6 07F11C00 		add	r0, r7, #28
 13243 09fa 1A46     		mov	r2, r3
 13244 09fc 2346     		mov	r3, r4
 13245 09fe 9649     		ldr	r1, .L619+4
 13246 0a00 FFF7FEFF 		bl	sprintf
1923:..\src/command_processing.c ****                 strcat(info_string, str);
 13247              		.loc 1 1923 0
 13248 0a04 07F11C03 		add	r3, r7, #28
 13249 0a08 1946     		mov	r1, r3
 13250 0a0a 7869     		ldr	r0, [r7, #20]
 13251 0a0c FFF7FEFF 		bl	strcat
1924:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 13252              		.loc 1 1924 0
 13253 0a10 D7F88430 		ldr	r3, [r7, #132]
 13254 0a14 1B69     		ldr	r3, [r3, #16]
 13255 0a16 1846     		mov	r0, r3
 13256 0a18 FFF7FEFF 		bl	__aeabi_i2d
 13257 0a1c 4FF00002 		mov	r2, #0
 13258 0a20 8C4B     		ldr	r3, .L619
 13259 0a22 FFF7FEFF 		bl	__aeabi_ddiv
 13260 0a26 0346     		mov	r3, r0
 13261 0a28 0C46     		mov	r4, r1
 13262 0a2a 07F11C00 		add	r0, r7, #28
 13263 0a2e 1A46     		mov	r2, r3
 13264 0a30 2346     		mov	r3, r4
 13265 0a32 8A49     		ldr	r1, .L619+8
 13266 0a34 FFF7FEFF 		bl	sprintf
1925:..\src/command_processing.c ****                 strcat(info_string, str);
 13267              		.loc 1 1925 0
 13268 0a38 07F11C03 		add	r3, r7, #28
 13269 0a3c 1946     		mov	r1, r3
 13270 0a3e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 304


 13271 0a40 FFF7FEFF 		bl	strcat
1926:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 13272              		.loc 1 1926 0
 13273 0a44 D7F88430 		ldr	r3, [r7, #132]
 13274 0a48 5B69     		ldr	r3, [r3, #20]
 13275 0a4a 1846     		mov	r0, r3
 13276 0a4c FFF7FEFF 		bl	__aeabi_i2d
 13277 0a50 4FF00002 		mov	r2, #0
 13278 0a54 7F4B     		ldr	r3, .L619
 13279 0a56 FFF7FEFF 		bl	__aeabi_ddiv
 13280 0a5a 0346     		mov	r3, r0
 13281 0a5c 0C46     		mov	r4, r1
 13282 0a5e 07F11C00 		add	r0, r7, #28
 13283 0a62 1A46     		mov	r2, r3
 13284 0a64 2346     		mov	r3, r4
 13285 0a66 7E49     		ldr	r1, .L619+12
 13286 0a68 FFF7FEFF 		bl	sprintf
1927:..\src/command_processing.c ****                 strcat(info_string, str);
 13287              		.loc 1 1927 0
 13288 0a6c 07F11C03 		add	r3, r7, #28
 13289 0a70 1946     		mov	r1, r3
 13290 0a72 7869     		ldr	r0, [r7, #20]
 13291 0a74 FFF7FEFF 		bl	strcat
 13292 0a78 4DE0     		b	.L553
 13293              	.L552:
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c ****             }
1930:..\src/command_processing.c ****             else {
1931:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 13294              		.loc 1 1931 0
 13295 0a7a D7F88430 		ldr	r3, [r7, #132]
 13296 0a7e 5B6A     		ldr	r3, [r3, #36]
 13297 0a80 1846     		mov	r0, r3
 13298 0a82 FFF7FEFF 		bl	__aeabi_i2d
 13299 0a86 4FF00002 		mov	r2, #0
 13300 0a8a 724B     		ldr	r3, .L619
 13301 0a8c FFF7FEFF 		bl	__aeabi_ddiv
 13302 0a90 0346     		mov	r3, r0
 13303 0a92 0C46     		mov	r4, r1
 13304 0a94 07F11C00 		add	r0, r7, #28
 13305 0a98 1A46     		mov	r2, r3
 13306 0a9a 2346     		mov	r3, r4
 13307 0a9c 6E49     		ldr	r1, .L619+4
 13308 0a9e FFF7FEFF 		bl	sprintf
1932:..\src/command_processing.c ****                 strcat(info_string, str);
 13309              		.loc 1 1932 0
 13310 0aa2 07F11C03 		add	r3, r7, #28
 13311 0aa6 1946     		mov	r1, r3
 13312 0aa8 7869     		ldr	r0, [r7, #20]
 13313 0aaa FFF7FEFF 		bl	strcat
1933:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 13314              		.loc 1 1933 0
 13315 0aae D7F88430 		ldr	r3, [r7, #132]
 13316 0ab2 9B6A     		ldr	r3, [r3, #40]
 13317 0ab4 1846     		mov	r0, r3
 13318 0ab6 FFF7FEFF 		bl	__aeabi_i2d
 13319 0aba 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 305


 13320 0abe 654B     		ldr	r3, .L619
 13321 0ac0 FFF7FEFF 		bl	__aeabi_ddiv
 13322 0ac4 0346     		mov	r3, r0
 13323 0ac6 0C46     		mov	r4, r1
 13324 0ac8 07F11C00 		add	r0, r7, #28
 13325 0acc 1A46     		mov	r2, r3
 13326 0ace 2346     		mov	r3, r4
 13327 0ad0 6249     		ldr	r1, .L619+8
 13328 0ad2 FFF7FEFF 		bl	sprintf
1934:..\src/command_processing.c ****                 strcat(info_string, str);
 13329              		.loc 1 1934 0
 13330 0ad6 07F11C03 		add	r3, r7, #28
 13331 0ada 1946     		mov	r1, r3
 13332 0adc 7869     		ldr	r0, [r7, #20]
 13333 0ade FFF7FEFF 		bl	strcat
1935:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 13334              		.loc 1 1935 0
 13335 0ae2 D7F88430 		ldr	r3, [r7, #132]
 13336 0ae6 DB6A     		ldr	r3, [r3, #44]
 13337 0ae8 1846     		mov	r0, r3
 13338 0aea FFF7FEFF 		bl	__aeabi_i2d
 13339 0aee 4FF00002 		mov	r2, #0
 13340 0af2 584B     		ldr	r3, .L619
 13341 0af4 FFF7FEFF 		bl	__aeabi_ddiv
 13342 0af8 0346     		mov	r3, r0
 13343 0afa 0C46     		mov	r4, r1
 13344 0afc 07F11C00 		add	r0, r7, #28
 13345 0b00 1A46     		mov	r2, r3
 13346 0b02 2346     		mov	r3, r4
 13347 0b04 5649     		ldr	r1, .L619+12
 13348 0b06 FFF7FEFF 		bl	sprintf
1936:..\src/command_processing.c ****                 strcat(info_string, str);
 13349              		.loc 1 1936 0
 13350 0b0a 07F11C03 		add	r3, r7, #28
 13351 0b0e 1946     		mov	r1, r3
 13352 0b10 7869     		ldr	r0, [r7, #20]
 13353 0b12 FFF7FEFF 		bl	strcat
 13354              	.L553:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 13355              		.loc 1 1938 0
 13356 0b16 D7F88430 		ldr	r3, [r7, #132]
 13357 0b1a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 13358 0b1e 012B     		cmp	r3, #1
 13359 0b20 14D1     		bne	.L554
1939:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 13360              		.loc 1 1939 0
 13361 0b22 7869     		ldr	r0, [r7, #20]
 13362 0b24 FFF7FEFF 		bl	strlen
 13363 0b28 0346     		mov	r3, r0
 13364 0b2a 1A46     		mov	r2, r3
 13365 0b2c 7B69     		ldr	r3, [r7, #20]
 13366 0b2e 1344     		add	r3, r3, r2
 13367 0b30 4D4A     		ldr	r2, .L619+20
 13368 0b32 1D46     		mov	r5, r3
 13369 0b34 1446     		mov	r4, r2
 13370 0b36 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 306


 13371 0b38 2860     		str	r0, [r5]	@ unaligned
 13372 0b3a 6960     		str	r1, [r5, #4]	@ unaligned
 13373 0b3c AA60     		str	r2, [r5, #8]	@ unaligned
 13374 0b3e EB60     		str	r3, [r5, #12]	@ unaligned
 13375 0b40 03CC     		ldmia	r4!, {r0, r1}
 13376 0b42 2861     		str	r0, [r5, #16]	@ unaligned
 13377 0b44 6961     		str	r1, [r5, #20]	@ unaligned
 13378 0b46 2388     		ldrh	r3, [r4]	@ unaligned
 13379 0b48 2B83     		strh	r3, [r5, #24]	@ unaligned
 13380 0b4a 13E0     		b	.L555
 13381              	.L554:
1940:..\src/command_processing.c ****             else
1941:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 13382              		.loc 1 1941 0
 13383 0b4c 7869     		ldr	r0, [r7, #20]
 13384 0b4e FFF7FEFF 		bl	strlen
 13385 0b52 0346     		mov	r3, r0
 13386 0b54 1A46     		mov	r2, r3
 13387 0b56 7B69     		ldr	r3, [r7, #20]
 13388 0b58 1344     		add	r3, r3, r2
 13389 0b5a 444A     		ldr	r2, .L619+24
 13390 0b5c 1D46     		mov	r5, r3
 13391 0b5e 1446     		mov	r4, r2
 13392 0b60 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13393 0b62 2860     		str	r0, [r5]	@ unaligned
 13394 0b64 6960     		str	r1, [r5, #4]	@ unaligned
 13395 0b66 AA60     		str	r2, [r5, #8]	@ unaligned
 13396 0b68 EB60     		str	r3, [r5, #12]	@ unaligned
 13397 0b6a 03CC     		ldmia	r4!, {r0, r1}
 13398 0b6c 2861     		str	r0, [r5, #16]	@ unaligned
 13399 0b6e 6961     		str	r1, [r5, #20]	@ unaligned
 13400 0b70 2378     		ldrb	r3, [r4]
 13401 0b72 2B76     		strb	r3, [r5, #24]
 13402              	.L555:
1942:..\src/command_processing.c **** 
1943:..\src/command_processing.c ****             switch(MOT->input_mode) {
 13403              		.loc 1 1943 0
 13404 0b74 D7F88430 		ldr	r3, [r7, #132]
 13405 0b78 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 13406 0b7c 062B     		cmp	r3, #6
 13407 0b7e 00F2D180 		bhi	.L556
 13408 0b82 01A2     		adr	r2, .L558
 13409 0b84 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13410              		.p2align 2
 13411              	.L558:
 13412 0b88 A50B0000 		.word	.L557+1
 13413 0b8c C90B0000 		.word	.L559+1
 13414 0b90 F10B0000 		.word	.L560+1
 13415 0b94 230C0000 		.word	.L561+1
 13416 0b98 810C0000 		.word	.L562+1
 13417 0b9c AF0C0000 		.word	.L563+1
 13418 0ba0 DF0C0000 		.word	.L564+1
 13419              		.p2align 1
 13420              	.L557:
1944:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1945:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 13421              		.loc 1 1945 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 307


 13422 0ba4 7869     		ldr	r0, [r7, #20]
 13423 0ba6 FFF7FEFF 		bl	strlen
 13424 0baa 0346     		mov	r3, r0
 13425 0bac 1A46     		mov	r2, r3
 13426 0bae 7B69     		ldr	r3, [r7, #20]
 13427 0bb0 1344     		add	r3, r3, r2
 13428 0bb2 2F4A     		ldr	r2, .L619+28
 13429 0bb4 1D46     		mov	r5, r3
 13430 0bb6 1446     		mov	r4, r2
 13431 0bb8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13432 0bba 2860     		str	r0, [r5]	@ unaligned
 13433 0bbc 6960     		str	r1, [r5, #4]	@ unaligned
 13434 0bbe AA60     		str	r2, [r5, #8]	@ unaligned
 13435 0bc0 EB60     		str	r3, [r5, #12]	@ unaligned
 13436 0bc2 2388     		ldrh	r3, [r4]	@ unaligned
 13437 0bc4 2B82     		strh	r3, [r5, #16]	@ unaligned
1946:..\src/command_processing.c ****                     break;
 13438              		.loc 1 1946 0
 13439 0bc6 ADE0     		b	.L556
 13440              	.L559:
1947:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1948:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 13441              		.loc 1 1948 0
 13442 0bc8 7869     		ldr	r0, [r7, #20]
 13443 0bca FFF7FEFF 		bl	strlen
 13444 0bce 0346     		mov	r3, r0
 13445 0bd0 1A46     		mov	r2, r3
 13446 0bd2 7B69     		ldr	r3, [r7, #20]
 13447 0bd4 1344     		add	r3, r3, r2
 13448 0bd6 274A     		ldr	r2, .L619+32
 13449 0bd8 1D46     		mov	r5, r3
 13450 0bda 1446     		mov	r4, r2
 13451 0bdc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13452 0bde 2860     		str	r0, [r5]	@ unaligned
 13453 0be0 6960     		str	r1, [r5, #4]	@ unaligned
 13454 0be2 AA60     		str	r2, [r5, #8]	@ unaligned
 13455 0be4 EB60     		str	r3, [r5, #12]	@ unaligned
 13456 0be6 2068     		ldr	r0, [r4]	@ unaligned
 13457 0be8 2861     		str	r0, [r5, #16]	@ unaligned
 13458 0bea 2379     		ldrb	r3, [r4, #4]
 13459 0bec 2B75     		strb	r3, [r5, #20]
1949:..\src/command_processing.c ****                     break;
 13460              		.loc 1 1949 0
 13461 0bee 99E0     		b	.L556
 13462              	.L560:
1950:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1951:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 13463              		.loc 1 1951 0
 13464 0bf0 7869     		ldr	r0, [r7, #20]
 13465 0bf2 FFF7FEFF 		bl	strlen
 13466 0bf6 0346     		mov	r3, r0
 13467 0bf8 1A46     		mov	r2, r3
 13468 0bfa 7B69     		ldr	r3, [r7, #20]
 13469 0bfc 1344     		add	r3, r3, r2
 13470 0bfe 1E4A     		ldr	r2, .L619+36
 13471 0c00 1D46     		mov	r5, r3
 13472 0c02 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 308


 13473 0c04 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13474 0c06 2860     		str	r0, [r5]	@ unaligned
 13475 0c08 6960     		str	r1, [r5, #4]	@ unaligned
 13476 0c0a AA60     		str	r2, [r5, #8]	@ unaligned
 13477 0c0c EB60     		str	r3, [r5, #12]	@ unaligned
 13478 0c0e 07CC     		ldmia	r4!, {r0, r1, r2}
 13479 0c10 2861     		str	r0, [r5, #16]	@ unaligned
 13480 0c12 6961     		str	r1, [r5, #20]	@ unaligned
 13481 0c14 AA61     		str	r2, [r5, #24]	@ unaligned
 13482 0c16 2388     		ldrh	r3, [r4]	@ unaligned
 13483 0c18 A278     		ldrb	r2, [r4, #2]
 13484 0c1a AB83     		strh	r3, [r5, #28]	@ unaligned
 13485 0c1c 1346     		mov	r3, r2
 13486 0c1e AB77     		strb	r3, [r5, #30]
1952:..\src/command_processing.c ****                     break;
 13487              		.loc 1 1952 0
 13488 0c20 80E0     		b	.L556
 13489              	.L561:
1953:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1954:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 13490              		.loc 1 1954 0
 13491 0c22 7869     		ldr	r0, [r7, #20]
 13492 0c24 FFF7FEFF 		bl	strlen
 13493 0c28 0346     		mov	r3, r0
 13494 0c2a 1A46     		mov	r2, r3
 13495 0c2c 7B69     		ldr	r3, [r7, #20]
 13496 0c2e 1344     		add	r3, r3, r2
 13497 0c30 124A     		ldr	r2, .L619+40
 13498 0c32 1D46     		mov	r5, r3
 13499 0c34 1446     		mov	r4, r2
 13500 0c36 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13501 0c38 2860     		str	r0, [r5]	@ unaligned
 13502 0c3a 6960     		str	r1, [r5, #4]	@ unaligned
 13503 0c3c AA60     		str	r2, [r5, #8]	@ unaligned
 13504 0c3e EB60     		str	r3, [r5, #12]	@ unaligned
 13505 0c40 03CC     		ldmia	r4!, {r0, r1}
 13506 0c42 2861     		str	r0, [r5, #16]	@ unaligned
 13507 0c44 6961     		str	r1, [r5, #20]	@ unaligned
 13508 0c46 2388     		ldrh	r3, [r4]	@ unaligned
 13509 0c48 A278     		ldrb	r2, [r4, #2]
 13510 0c4a 2B83     		strh	r3, [r5, #24]	@ unaligned
 13511 0c4c 1346     		mov	r3, r2
 13512 0c4e AB76     		strb	r3, [r5, #26]
1955:..\src/command_processing.c ****                     break;
 13513              		.loc 1 1955 0
 13514 0c50 68E0     		b	.L556
 13515              	.L620:
 13516 0c52 00BF     		.align	2
 13517              	.L619:
 13518 0c54 0000F040 		.word	1089470464
 13519 0c58 5C110000 		.word	.LC169
 13520 0c5c 68110000 		.word	.LC170
 13521 0c60 74110000 		.word	.LC171
 13522 0c64 80110000 		.word	.LC172
 13523 0c68 9C110000 		.word	.LC173
 13524 0c6c B8110000 		.word	.LC174
 13525 0c70 D4110000 		.word	.LC175
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 309


 13526 0c74 E8110000 		.word	.LC176
 13527 0c78 00120000 		.word	.LC177
 13528 0c7c 20120000 		.word	.LC178
 13529              	.L562:
1956:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1957:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 13530              		.loc 1 1957 0
 13531 0c80 7869     		ldr	r0, [r7, #20]
 13532 0c82 FFF7FEFF 		bl	strlen
 13533 0c86 0346     		mov	r3, r0
 13534 0c88 1A46     		mov	r2, r3
 13535 0c8a 7B69     		ldr	r3, [r7, #20]
 13536 0c8c 1344     		add	r3, r3, r2
 13537 0c8e C44A     		ldr	r2, .L621
 13538 0c90 1C46     		mov	r4, r3
 13539 0c92 1546     		mov	r5, r2
 13540 0c94 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13541 0c96 2060     		str	r0, [r4]	@ unaligned
 13542 0c98 6160     		str	r1, [r4, #4]	@ unaligned
 13543 0c9a A260     		str	r2, [r4, #8]	@ unaligned
 13544 0c9c E360     		str	r3, [r4, #12]	@ unaligned
 13545 0c9e 2868     		ldr	r0, [r5]	@ unaligned
 13546 0ca0 2061     		str	r0, [r4, #16]	@ unaligned
 13547 0ca2 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13548 0ca4 AA79     		ldrb	r2, [r5, #6]
 13549 0ca6 A382     		strh	r3, [r4, #20]	@ unaligned
 13550 0ca8 1346     		mov	r3, r2
 13551 0caa A375     		strb	r3, [r4, #22]
1958:..\src/command_processing.c ****                     break;
 13552              		.loc 1 1958 0
 13553 0cac 3AE0     		b	.L556
 13554              	.L563:
1959:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1960:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 13555              		.loc 1 1960 0
 13556 0cae 7869     		ldr	r0, [r7, #20]
 13557 0cb0 FFF7FEFF 		bl	strlen
 13558 0cb4 0346     		mov	r3, r0
 13559 0cb6 1A46     		mov	r2, r3
 13560 0cb8 7B69     		ldr	r3, [r7, #20]
 13561 0cba 1344     		add	r3, r3, r2
 13562 0cbc B94A     		ldr	r2, .L621+4
 13563 0cbe 1D46     		mov	r5, r3
 13564 0cc0 1446     		mov	r4, r2
 13565 0cc2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13566 0cc4 2860     		str	r0, [r5]	@ unaligned
 13567 0cc6 6960     		str	r1, [r5, #4]	@ unaligned
 13568 0cc8 AA60     		str	r2, [r5, #8]	@ unaligned
 13569 0cca EB60     		str	r3, [r5, #12]	@ unaligned
 13570 0ccc 03CC     		ldmia	r4!, {r0, r1}
 13571 0cce 2861     		str	r0, [r5, #16]	@ unaligned
 13572 0cd0 6961     		str	r1, [r5, #20]	@ unaligned
 13573 0cd2 2388     		ldrh	r3, [r4]	@ unaligned
 13574 0cd4 A278     		ldrb	r2, [r4, #2]
 13575 0cd6 2B83     		strh	r3, [r5, #24]	@ unaligned
 13576 0cd8 1346     		mov	r3, r2
 13577 0cda AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 310


1961:..\src/command_processing.c ****                     break;
 13578              		.loc 1 1961 0
 13579 0cdc 22E0     		b	.L556
 13580              	.L564:
1962:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1963:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 13581              		.loc 1 1963 0
 13582 0cde 7869     		ldr	r0, [r7, #20]
 13583 0ce0 FFF7FEFF 		bl	strlen
 13584 0ce4 0346     		mov	r3, r0
 13585 0ce6 1A46     		mov	r2, r3
 13586 0ce8 7B69     		ldr	r3, [r7, #20]
 13587 0cea 1344     		add	r3, r3, r2
 13588 0cec AE4A     		ldr	r2, .L621+8
 13589 0cee 1546     		mov	r5, r2
 13590 0cf0 9E46     		mov	lr, r3
 13591 0cf2 05F1200C 		add	ip, r5, #32
 13592              	.L565:
 13593 0cf6 7446     		mov	r4, lr
 13594 0cf8 2E46     		mov	r6, r5
 13595 0cfa 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13596 0cfc 2060     		str	r0, [r4]	@ unaligned
 13597 0cfe 6160     		str	r1, [r4, #4]	@ unaligned
 13598 0d00 A260     		str	r2, [r4, #8]	@ unaligned
 13599 0d02 E360     		str	r3, [r4, #12]	@ unaligned
 13600 0d04 1035     		adds	r5, r5, #16
 13601 0d06 0EF1100E 		add	lr, lr, #16
 13602 0d0a 6545     		cmp	r5, ip
 13603 0d0c F3D1     		bne	.L565
 13604 0d0e 7446     		mov	r4, lr
 13605 0d10 2B46     		mov	r3, r5
 13606 0d12 07CB     		ldmia	r3!, {r0, r1, r2}
 13607 0d14 2060     		str	r0, [r4]	@ unaligned
 13608 0d16 6160     		str	r1, [r4, #4]	@ unaligned
 13609 0d18 A260     		str	r2, [r4, #8]	@ unaligned
 13610 0d1a 1A88     		ldrh	r2, [r3]	@ unaligned
 13611 0d1c 9B78     		ldrb	r3, [r3, #2]
 13612 0d1e A281     		strh	r2, [r4, #12]	@ unaligned
 13613 0d20 A373     		strb	r3, [r4, #14]
1964:..\src/command_processing.c ****                     break;
 13614              		.loc 1 1964 0
 13615 0d22 00BF     		nop
 13616              	.L556:
1965:..\src/command_processing.c ****             }
1966:..\src/command_processing.c **** 
1967:..\src/command_processing.c ****             switch(MOT->control_mode) {
 13617              		.loc 1 1967 0
 13618 0d24 D7F88430 		ldr	r3, [r7, #132]
 13619 0d28 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13620 0d2c 032B     		cmp	r3, #3
 13621 0d2e 64D8     		bhi	.L612
 13622 0d30 01A2     		adr	r2, .L568
 13623 0d32 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13624 0d36 00BF     		.p2align 2
 13625              	.L568:
 13626 0d38 490D0000 		.word	.L567+1
 13627 0d3c 730D0000 		.word	.L569+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 311


 13628 0d40 970D0000 		.word	.L570+1
 13629 0d44 BD0D0000 		.word	.L571+1
 13630              		.p2align 1
 13631              	.L567:
1968:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1969:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 13632              		.loc 1 1969 0
 13633 0d48 7869     		ldr	r0, [r7, #20]
 13634 0d4a FFF7FEFF 		bl	strlen
 13635 0d4e 0346     		mov	r3, r0
 13636 0d50 1A46     		mov	r2, r3
 13637 0d52 7B69     		ldr	r3, [r7, #20]
 13638 0d54 1344     		add	r3, r3, r2
 13639 0d56 954A     		ldr	r2, .L621+12
 13640 0d58 1D46     		mov	r5, r3
 13641 0d5a 1446     		mov	r4, r2
 13642 0d5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13643 0d5e 2860     		str	r0, [r5]	@ unaligned
 13644 0d60 6960     		str	r1, [r5, #4]	@ unaligned
 13645 0d62 AA60     		str	r2, [r5, #8]	@ unaligned
 13646 0d64 EB60     		str	r3, [r5, #12]	@ unaligned
 13647 0d66 03CC     		ldmia	r4!, {r0, r1}
 13648 0d68 2861     		str	r0, [r5, #16]	@ unaligned
 13649 0d6a 6961     		str	r1, [r5, #20]	@ unaligned
 13650 0d6c 2378     		ldrb	r3, [r4]
 13651 0d6e 2B76     		strb	r3, [r5, #24]
1970:..\src/command_processing.c ****                     break;
 13652              		.loc 1 1970 0
 13653 0d70 44E0     		b	.L572
 13654              	.L569:
1971:..\src/command_processing.c ****                 case CONTROL_PWM:
1972:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 13655              		.loc 1 1972 0
 13656 0d72 7869     		ldr	r0, [r7, #20]
 13657 0d74 FFF7FEFF 		bl	strlen
 13658 0d78 0346     		mov	r3, r0
 13659 0d7a 1A46     		mov	r2, r3
 13660 0d7c 7B69     		ldr	r3, [r7, #20]
 13661 0d7e 1344     		add	r3, r3, r2
 13662 0d80 8B4A     		ldr	r2, .L621+16
 13663 0d82 1D46     		mov	r5, r3
 13664 0d84 1446     		mov	r4, r2
 13665 0d86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13666 0d88 2860     		str	r0, [r5]	@ unaligned
 13667 0d8a 6960     		str	r1, [r5, #4]	@ unaligned
 13668 0d8c AA60     		str	r2, [r5, #8]	@ unaligned
 13669 0d8e EB60     		str	r3, [r5, #12]	@ unaligned
 13670 0d90 2068     		ldr	r0, [r4]	@ unaligned
 13671 0d92 2861     		str	r0, [r5, #16]	@ unaligned
1973:..\src/command_processing.c ****                     break;
 13672              		.loc 1 1973 0
 13673 0d94 32E0     		b	.L572
 13674              	.L570:
1974:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1975:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 13675              		.loc 1 1975 0
 13676 0d96 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 312


 13677 0d98 FFF7FEFF 		bl	strlen
 13678 0d9c 0346     		mov	r3, r0
 13679 0d9e 1A46     		mov	r2, r3
 13680 0da0 7B69     		ldr	r3, [r7, #20]
 13681 0da2 1344     		add	r3, r3, r2
 13682 0da4 834A     		ldr	r2, .L621+20
 13683 0da6 1D46     		mov	r5, r3
 13684 0da8 1446     		mov	r4, r2
 13685 0daa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13686 0dac 2860     		str	r0, [r5]	@ unaligned
 13687 0dae 6960     		str	r1, [r5, #4]	@ unaligned
 13688 0db0 AA60     		str	r2, [r5, #8]	@ unaligned
 13689 0db2 EB60     		str	r3, [r5, #12]	@ unaligned
 13690 0db4 03CC     		ldmia	r4!, {r0, r1}
 13691 0db6 2861     		str	r0, [r5, #16]	@ unaligned
 13692 0db8 6961     		str	r1, [r5, #20]	@ unaligned
1976:..\src/command_processing.c ****                     break;
 13693              		.loc 1 1976 0
 13694 0dba 1FE0     		b	.L572
 13695              	.L571:
1977:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1978:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 13696              		.loc 1 1978 0
 13697 0dbc 7869     		ldr	r0, [r7, #20]
 13698 0dbe FFF7FEFF 		bl	strlen
 13699 0dc2 0346     		mov	r3, r0
 13700 0dc4 1A46     		mov	r2, r3
 13701 0dc6 7B69     		ldr	r3, [r7, #20]
 13702 0dc8 1344     		add	r3, r3, r2
 13703 0dca 7B4A     		ldr	r2, .L621+24
 13704 0dcc 1446     		mov	r4, r2
 13705 0dce 9E46     		mov	lr, r3
 13706 0dd0 04F1200C 		add	ip, r4, #32
 13707              	.L573:
 13708 0dd4 7546     		mov	r5, lr
 13709 0dd6 2646     		mov	r6, r4
 13710 0dd8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13711 0dda 2860     		str	r0, [r5]	@ unaligned
 13712 0ddc 6960     		str	r1, [r5, #4]	@ unaligned
 13713 0dde AA60     		str	r2, [r5, #8]	@ unaligned
 13714 0de0 EB60     		str	r3, [r5, #12]	@ unaligned
 13715 0de2 1034     		adds	r4, r4, #16
 13716 0de4 0EF1100E 		add	lr, lr, #16
 13717 0de8 6445     		cmp	r4, ip
 13718 0dea F3D1     		bne	.L573
 13719 0dec 7346     		mov	r3, lr
 13720 0dee 2246     		mov	r2, r4
 13721 0df0 1068     		ldr	r0, [r2]	@ unaligned
 13722 0df2 1860     		str	r0, [r3]	@ unaligned
 13723 0df4 1279     		ldrb	r2, [r2, #4]
 13724 0df6 1A71     		strb	r2, [r3, #4]
1979:..\src/command_processing.c ****                     break;
 13725              		.loc 1 1979 0
 13726 0df8 00E0     		b	.L572
 13727              	.L612:
1980:..\src/command_processing.c ****                 default:
1981:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 313


 13728              		.loc 1 1981 0
 13729 0dfa 00BF     		nop
 13730              	.L572:
1982:..\src/command_processing.c ****             }
1983:..\src/command_processing.c **** 
1984:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 13731              		.loc 1 1984 0
 13732 0dfc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13733 0e00 D7F88C10 		ldr	r1, [r7, #140]
 13734 0e04 1346     		mov	r3, r2
 13735 0e06 5B00     		lsls	r3, r3, #1
 13736 0e08 1344     		add	r3, r3, r2
 13737 0e0a 1B01     		lsls	r3, r3, #4
 13738 0e0c 0B44     		add	r3, r3, r1
 13739 0e0e 03F5D873 		add	r3, r3, #432
 13740 0e12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13741 0e14 002B     		cmp	r3, #0
 13742 0e16 1CD0     		beq	.L574
1985:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 13743              		.loc 1 1985 0
 13744 0e18 7869     		ldr	r0, [r7, #20]
 13745 0e1a FFF7FEFF 		bl	strlen
 13746 0e1e 0346     		mov	r3, r0
 13747 0e20 1A46     		mov	r2, r3
 13748 0e22 7B69     		ldr	r3, [r7, #20]
 13749 0e24 1344     		add	r3, r3, r2
 13750 0e26 654A     		ldr	r2, .L621+28
 13751 0e28 1446     		mov	r4, r2
 13752 0e2a 9E46     		mov	lr, r3
 13753 0e2c 04F1200C 		add	ip, r4, #32
 13754              	.L575:
 13755 0e30 7546     		mov	r5, lr
 13756 0e32 2646     		mov	r6, r4
 13757 0e34 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13758 0e36 2860     		str	r0, [r5]	@ unaligned
 13759 0e38 6960     		str	r1, [r5, #4]	@ unaligned
 13760 0e3a AA60     		str	r2, [r5, #8]	@ unaligned
 13761 0e3c EB60     		str	r3, [r5, #12]	@ unaligned
 13762 0e3e 1034     		adds	r4, r4, #16
 13763 0e40 0EF1100E 		add	lr, lr, #16
 13764 0e44 6445     		cmp	r4, ip
 13765 0e46 F3D1     		bne	.L575
 13766 0e48 7346     		mov	r3, lr
 13767 0e4a 2246     		mov	r2, r4
 13768 0e4c 1278     		ldrb	r2, [r2]
 13769 0e4e 1A70     		strb	r2, [r3]
 13770 0e50 13E0     		b	.L576
 13771              	.L574:
1986:..\src/command_processing.c ****             else
1987:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 13772              		.loc 1 1987 0
 13773 0e52 7869     		ldr	r0, [r7, #20]
 13774 0e54 FFF7FEFF 		bl	strlen
 13775 0e58 0346     		mov	r3, r0
 13776 0e5a 1A46     		mov	r2, r3
 13777 0e5c 7B69     		ldr	r3, [r7, #20]
 13778 0e5e 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 314


 13779 0e60 574A     		ldr	r2, .L621+32
 13780 0e62 1C46     		mov	r4, r3
 13781 0e64 1546     		mov	r5, r2
 13782 0e66 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13783 0e68 2060     		str	r0, [r4]	@ unaligned
 13784 0e6a 6160     		str	r1, [r4, #4]	@ unaligned
 13785 0e6c A260     		str	r2, [r4, #8]	@ unaligned
 13786 0e6e E360     		str	r3, [r4, #12]	@ unaligned
 13787 0e70 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13788 0e72 2061     		str	r0, [r4, #16]	@ unaligned
 13789 0e74 6161     		str	r1, [r4, #20]	@ unaligned
 13790 0e76 A261     		str	r2, [r4, #24]	@ unaligned
 13791 0e78 E361     		str	r3, [r4, #28]	@ unaligned
 13792              	.L576:
1988:..\src/command_processing.c **** 
1989:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 13793              		.loc 1 1989 0
 13794 0e7a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13795 0e7e D7F88C10 		ldr	r1, [r7, #140]
 13796 0e82 1346     		mov	r3, r2
 13797 0e84 5B00     		lsls	r3, r3, #1
 13798 0e86 1344     		add	r3, r3, r2
 13799 0e88 1B01     		lsls	r3, r3, #4
 13800 0e8a 0B44     		add	r3, r3, r1
 13801 0e8c 03F5DA73 		add	r3, r3, #436
 13802 0e90 93F90030 		ldrsb	r3, [r3]
 13803 0e94 1A46     		mov	r2, r3
 13804 0e96 07F11C03 		add	r3, r7, #28
 13805 0e9a 4A49     		ldr	r1, .L621+36
 13806 0e9c 1846     		mov	r0, r3
 13807 0e9e FFF7FEFF 		bl	sprintf
1990:..\src/command_processing.c ****             strcat(info_string, str);
 13808              		.loc 1 1990 0
 13809 0ea2 07F11C03 		add	r3, r7, #28
 13810 0ea6 1946     		mov	r1, r3
 13811 0ea8 7869     		ldr	r0, [r7, #20]
 13812 0eaa FFF7FEFF 		bl	strcat
1991:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1992:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
1994:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
1995:..\src/command_processing.c ****                 strcat(info_string, str);
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
1998:..\src/command_processing.c ****                 }                
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2001:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2002:..\src/command_processing.c ****             strcat(info_string, str);
2003:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2004:..\src/command_processing.c ****             strcat(info_string, str);
2005:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2006:..\src/command_processing.c ****             strcat(info_string, str);
2007:..\src/command_processing.c **** #endif            
2008:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13813              		.loc 1 2008 0
 13814 0eae 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 315


 13815 0eb0 FFF7FEFF 		bl	strlen
 13816 0eb4 0346     		mov	r3, r0
 13817 0eb6 1A46     		mov	r2, r3
 13818 0eb8 7B69     		ldr	r3, [r7, #20]
 13819 0eba 1344     		add	r3, r3, r2
 13820 0ebc 424A     		ldr	r2, .L621+40
 13821 0ebe 1188     		ldrh	r1, [r2]	@ unaligned
 13822 0ec0 9278     		ldrb	r2, [r2, #2]
 13823 0ec2 1980     		strh	r1, [r3]	@ unaligned
 13824 0ec4 9A70     		strb	r2, [r3, #2]
2009:..\src/command_processing.c **** 
2010:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 13825              		.loc 1 2010 0
 13826 0ec6 7869     		ldr	r0, [r7, #20]
 13827 0ec8 FFF7FEFF 		bl	strlen
 13828 0ecc 0346     		mov	r3, r0
 13829 0ece 1A46     		mov	r2, r3
 13830 0ed0 7B69     		ldr	r3, [r7, #20]
 13831 0ed2 1344     		add	r3, r3, r2
 13832 0ed4 3D4A     		ldr	r2, .L621+44
 13833 0ed6 1D46     		mov	r5, r3
 13834 0ed8 1446     		mov	r4, r2
 13835 0eda 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13836 0edc 2860     		str	r0, [r5]	@ unaligned
 13837 0ede 6960     		str	r1, [r5, #4]	@ unaligned
 13838 0ee0 AA60     		str	r2, [r5, #8]	@ unaligned
 13839 0ee2 EB60     		str	r3, [r5, #12]	@ unaligned
 13840 0ee4 2068     		ldr	r0, [r4]	@ unaligned
 13841 0ee6 2861     		str	r0, [r5, #16]	@ unaligned
2011:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13842              		.loc 1 2011 0
 13843 0ee8 0023     		movs	r3, #0
 13844 0eea C7F89430 		str	r3, [r7, #148]
 13845 0eee 30E0     		b	.L577
 13846              	.L579:
2012:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13847              		.loc 1 2012 0
 13848 0ef0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13849 0ef4 D7F88C10 		ldr	r1, [r7, #140]
 13850 0ef8 1346     		mov	r3, r2
 13851 0efa 5B00     		lsls	r3, r3, #1
 13852 0efc 1344     		add	r3, r3, r2
 13853 0efe 1B01     		lsls	r3, r3, #4
 13854 0f00 CA18     		adds	r2, r1, r3
 13855 0f02 D7F89430 		ldr	r3, [r7, #148]
 13856 0f06 1344     		add	r3, r3, r2
 13857 0f08 03F29513 		addw	r3, r3, #405
 13858 0f0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13859 0f0e 1A46     		mov	r2, r3
 13860 0f10 07F11C03 		add	r3, r7, #28
 13861 0f14 2E49     		ldr	r1, .L621+48
 13862 0f16 1846     		mov	r0, r3
 13863 0f18 FFF7FEFF 		bl	sprintf
2013:..\src/command_processing.c ****                 strcat(info_string, str);
 13864              		.loc 1 2013 0
 13865 0f1c 07F11C03 		add	r3, r7, #28
 13866 0f20 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 316


 13867 0f22 7869     		ldr	r0, [r7, #20]
 13868 0f24 FFF7FEFF 		bl	strcat
2014:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13869              		.loc 1 2014 0
 13870 0f28 D7F89430 		ldr	r3, [r7, #148]
 13871 0f2c 022B     		cmp	r3, #2
 13872 0f2e 0BD0     		beq	.L578
2015:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13873              		.loc 1 2015 0
 13874 0f30 7869     		ldr	r0, [r7, #20]
 13875 0f32 FFF7FEFF 		bl	strlen
 13876 0f36 0346     		mov	r3, r0
 13877 0f38 1A46     		mov	r2, r3
 13878 0f3a 7B69     		ldr	r3, [r7, #20]
 13879 0f3c 1344     		add	r3, r3, r2
 13880 0f3e 254A     		ldr	r2, .L621+52
 13881 0f40 1188     		ldrh	r1, [r2]	@ unaligned
 13882 0f42 9278     		ldrb	r2, [r2, #2]
 13883 0f44 1980     		strh	r1, [r3]	@ unaligned
 13884 0f46 9A70     		strb	r2, [r3, #2]
 13885              	.L578:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13886              		.loc 1 2011 0 discriminator 2
 13887 0f48 D7F89430 		ldr	r3, [r7, #148]
 13888 0f4c 0133     		adds	r3, r3, #1
 13889 0f4e C7F89430 		str	r3, [r7, #148]
 13890              	.L577:
2011:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13891              		.loc 1 2011 0 is_stmt 0 discriminator 1
 13892 0f52 D7F89430 		ldr	r3, [r7, #148]
 13893 0f56 022B     		cmp	r3, #2
 13894 0f58 CADD     		ble	.L579
2016:..\src/command_processing.c ****                 }                
2017:..\src/command_processing.c ****             }
2018:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13895              		.loc 1 2018 0 is_stmt 1
 13896 0f5a 7869     		ldr	r0, [r7, #20]
 13897 0f5c FFF7FEFF 		bl	strlen
 13898 0f60 0346     		mov	r3, r0
 13899 0f62 1A46     		mov	r2, r3
 13900 0f64 7B69     		ldr	r3, [r7, #20]
 13901 0f66 1344     		add	r3, r3, r2
 13902 0f68 174A     		ldr	r2, .L621+40
 13903 0f6a 1188     		ldrh	r1, [r2]	@ unaligned
 13904 0f6c 9278     		ldrb	r2, [r2, #2]
 13905 0f6e 1980     		strh	r1, [r3]	@ unaligned
 13906 0f70 9A70     		strb	r2, [r3, #2]
2019:..\src/command_processing.c **** 
2020:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 13907              		.loc 1 2020 0
 13908 0f72 7869     		ldr	r0, [r7, #20]
 13909 0f74 FFF7FEFF 		bl	strlen
 13910 0f78 0346     		mov	r3, r0
 13911 0f7a 1A46     		mov	r2, r3
 13912 0f7c 7B69     		ldr	r3, [r7, #20]
 13913 0f7e 1344     		add	r3, r3, r2
 13914 0f80 154A     		ldr	r2, .L621+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 317


 13915 0f82 1D46     		mov	r5, r3
 13916 0f84 1446     		mov	r4, r2
 13917 0f86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13918 0f88 2860     		str	r0, [r5]	@ unaligned
 13919 0f8a 6960     		str	r1, [r5, #4]	@ unaligned
 13920 0f8c AA60     		str	r2, [r5, #8]	@ unaligned
 13921 0f8e EB60     		str	r3, [r5, #12]	@ unaligned
 13922 0f90 2068     		ldr	r0, [r4]	@ unaligned
 13923 0f92 2861     		str	r0, [r5, #16]	@ unaligned
 13924 0f94 2379     		ldrb	r3, [r4, #4]
 13925 0f96 2B75     		strb	r3, [r5, #20]
2021:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13926              		.loc 1 2021 0
 13927 0f98 0023     		movs	r3, #0
 13928 0f9a C7F89430 		str	r3, [r7, #148]
 13929 0f9e 5DE0     		b	.L580
 13930              	.L622:
 13931              		.align	2
 13932              	.L621:
 13933 0fa0 3C120000 		.word	.LC179
 13934 0fa4 54120000 		.word	.LC180
 13935 0fa8 70120000 		.word	.LC181
 13936 0fac A0120000 		.word	.LC182
 13937 0fb0 BC120000 		.word	.LC183
 13938 0fb4 D0120000 		.word	.LC184
 13939 0fb8 E8120000 		.word	.LC185
 13940 0fbc 10130000 		.word	.LC186
 13941 0fc0 34130000 		.word	.LC187
 13942 0fc4 54130000 		.word	.LC188
 13943 0fc8 AC0E0000 		.word	.LC132
 13944 0fcc 70130000 		.word	.LC189
 13945 0fd0 9C100000 		.word	.LC161
 13946 0fd4 A0100000 		.word	.LC162
 13947 0fd8 84130000 		.word	.LC190
 13948              	.L582:
2022:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13949              		.loc 1 2022 0
 13950 0fdc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13951 0fe0 D7F88C10 		ldr	r1, [r7, #140]
 13952 0fe4 1346     		mov	r3, r2
 13953 0fe6 5B00     		lsls	r3, r3, #1
 13954 0fe8 1344     		add	r3, r3, r2
 13955 0fea 9B00     		lsls	r3, r3, #2
 13956 0fec D7F89420 		ldr	r2, [r7, #148]
 13957 0ff0 1344     		add	r3, r3, r2
 13958 0ff2 6633     		adds	r3, r3, #102
 13959 0ff4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 13960 0ff8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13961 0ffc D7F88C00 		ldr	r0, [r7, #140]
 13962 1000 1346     		mov	r3, r2
 13963 1002 5B00     		lsls	r3, r3, #1
 13964 1004 1344     		add	r3, r3, r2
 13965 1006 1B01     		lsls	r3, r3, #4
 13966 1008 C218     		adds	r2, r0, r3
 13967 100a D7F89430 		ldr	r3, [r7, #148]
 13968 100e 1344     		add	r3, r3, r2
 13969 1010 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 318


 13970 1014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13971 1016 41FA03F2 		asr	r2, r1, r3
 13972 101a 07F11C03 		add	r3, r7, #28
 13973 101e 2349     		ldr	r1, .L623
 13974 1020 1846     		mov	r0, r3
 13975 1022 FFF7FEFF 		bl	sprintf
2023:..\src/command_processing.c ****                 strcat(info_string, str);
 13976              		.loc 1 2023 0
 13977 1026 07F11C03 		add	r3, r7, #28
 13978 102a 1946     		mov	r1, r3
 13979 102c 7869     		ldr	r0, [r7, #20]
 13980 102e FFF7FEFF 		bl	strcat
2024:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13981              		.loc 1 2024 0
 13982 1032 D7F89430 		ldr	r3, [r7, #148]
 13983 1036 022B     		cmp	r3, #2
 13984 1038 0BD0     		beq	.L581
2025:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13985              		.loc 1 2025 0
 13986 103a 7869     		ldr	r0, [r7, #20]
 13987 103c FFF7FEFF 		bl	strlen
 13988 1040 0346     		mov	r3, r0
 13989 1042 1A46     		mov	r2, r3
 13990 1044 7B69     		ldr	r3, [r7, #20]
 13991 1046 1344     		add	r3, r3, r2
 13992 1048 194A     		ldr	r2, .L623+4
 13993 104a 1188     		ldrh	r1, [r2]	@ unaligned
 13994 104c 9278     		ldrb	r2, [r2, #2]
 13995 104e 1980     		strh	r1, [r3]	@ unaligned
 13996 1050 9A70     		strb	r2, [r3, #2]
 13997              	.L581:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13998              		.loc 1 2021 0 discriminator 2
 13999 1052 D7F89430 		ldr	r3, [r7, #148]
 14000 1056 0133     		adds	r3, r3, #1
 14001 1058 C7F89430 		str	r3, [r7, #148]
 14002              	.L580:
2021:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14003              		.loc 1 2021 0 is_stmt 0 discriminator 1
 14004 105c D7F89430 		ldr	r3, [r7, #148]
 14005 1060 022B     		cmp	r3, #2
 14006 1062 BBDD     		ble	.L582
2026:..\src/command_processing.c ****                 }
2027:..\src/command_processing.c ****             }
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14007              		.loc 1 2028 0 is_stmt 1
 14008 1064 7869     		ldr	r0, [r7, #20]
 14009 1066 FFF7FEFF 		bl	strlen
 14010 106a 0346     		mov	r3, r0
 14011 106c 1A46     		mov	r2, r3
 14012 106e 7B69     		ldr	r3, [r7, #20]
 14013 1070 1344     		add	r3, r3, r2
 14014 1072 104A     		ldr	r2, .L623+8
 14015 1074 1188     		ldrh	r1, [r2]	@ unaligned
 14016 1076 9278     		ldrb	r2, [r2, #2]
 14017 1078 1980     		strh	r1, [r3]	@ unaligned
 14018 107a 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 319


2029:..\src/command_processing.c ****                 
2030:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 14019              		.loc 1 2030 0
 14020 107c 7869     		ldr	r0, [r7, #20]
 14021 107e FFF7FEFF 		bl	strlen
 14022 1082 0346     		mov	r3, r0
 14023 1084 1A46     		mov	r2, r3
 14024 1086 7B69     		ldr	r3, [r7, #20]
 14025 1088 1344     		add	r3, r3, r2
 14026 108a 0B4A     		ldr	r2, .L623+12
 14027 108c 1D46     		mov	r5, r3
 14028 108e 1446     		mov	r4, r2
 14029 1090 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14030 1092 2860     		str	r0, [r5]	@ unaligned
 14031 1094 6960     		str	r1, [r5, #4]	@ unaligned
 14032 1096 AA60     		str	r2, [r5, #8]	@ unaligned
 14033 1098 EB60     		str	r3, [r5, #12]	@ unaligned
 14034 109a 03CC     		ldmia	r4!, {r0, r1}
 14035 109c 2861     		str	r0, [r5, #16]	@ unaligned
 14036 109e 6961     		str	r1, [r5, #20]	@ unaligned
 14037 10a0 2378     		ldrb	r3, [r4]
 14038 10a2 2B76     		strb	r3, [r5, #24]
2031:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14039              		.loc 1 2031 0
 14040 10a4 0023     		movs	r3, #0
 14041 10a6 C7F89430 		str	r3, [r7, #148]
 14042 10aa 3DE0     		b	.L583
 14043              	.L624:
 14044              		.align	2
 14045              	.L623:
 14046 10ac 9C130000 		.word	.LC191
 14047 10b0 A0100000 		.word	.LC162
 14048 10b4 AC0E0000 		.word	.LC132
 14049 10b8 A0130000 		.word	.LC192
 14050              	.L585:
2032:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14051              		.loc 1 2032 0
 14052 10bc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14053 10c0 D7F88C10 		ldr	r1, [r7, #140]
 14054 10c4 1346     		mov	r3, r2
 14055 10c6 5B00     		lsls	r3, r3, #1
 14056 10c8 1344     		add	r3, r3, r2
 14057 10ca 9B00     		lsls	r3, r3, #2
 14058 10cc D7F89420 		ldr	r2, [r7, #148]
 14059 10d0 1344     		add	r3, r3, r2
 14060 10d2 6833     		adds	r3, r3, #104
 14061 10d4 9B00     		lsls	r3, r3, #2
 14062 10d6 0B44     		add	r3, r3, r1
 14063 10d8 5B68     		ldr	r3, [r3, #4]	@ float
 14064 10da 1846     		mov	r0, r3
 14065 10dc FFF7FEFF 		bl	__aeabi_f2d
 14066 10e0 0346     		mov	r3, r0
 14067 10e2 0C46     		mov	r4, r1
 14068 10e4 07F11C00 		add	r0, r7, #28
 14069 10e8 1A46     		mov	r2, r3
 14070 10ea 2346     		mov	r3, r4
 14071 10ec BF49     		ldr	r1, .L625
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 320


 14072 10ee FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****                 strcat(info_string, str);
 14073              		.loc 1 2033 0
 14074 10f2 07F11C03 		add	r3, r7, #28
 14075 10f6 1946     		mov	r1, r3
 14076 10f8 7869     		ldr	r0, [r7, #20]
 14077 10fa FFF7FEFF 		bl	strcat
2034:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14078              		.loc 1 2034 0
 14079 10fe D7F89430 		ldr	r3, [r7, #148]
 14080 1102 022B     		cmp	r3, #2
 14081 1104 0BD0     		beq	.L584
2035:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14082              		.loc 1 2035 0
 14083 1106 7869     		ldr	r0, [r7, #20]
 14084 1108 FFF7FEFF 		bl	strlen
 14085 110c 0346     		mov	r3, r0
 14086 110e 1A46     		mov	r2, r3
 14087 1110 7B69     		ldr	r3, [r7, #20]
 14088 1112 1344     		add	r3, r3, r2
 14089 1114 B64A     		ldr	r2, .L625+4
 14090 1116 1188     		ldrh	r1, [r2]	@ unaligned
 14091 1118 9278     		ldrb	r2, [r2, #2]
 14092 111a 1980     		strh	r1, [r3]	@ unaligned
 14093 111c 9A70     		strb	r2, [r3, #2]
 14094              	.L584:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14095              		.loc 1 2031 0 discriminator 2
 14096 111e D7F89430 		ldr	r3, [r7, #148]
 14097 1122 0133     		adds	r3, r3, #1
 14098 1124 C7F89430 		str	r3, [r7, #148]
 14099              	.L583:
2031:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14100              		.loc 1 2031 0 is_stmt 0 discriminator 1
 14101 1128 D7F89430 		ldr	r3, [r7, #148]
 14102 112c 022B     		cmp	r3, #2
 14103 112e C5DD     		ble	.L585
2036:..\src/command_processing.c ****                 }
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14104              		.loc 1 2038 0 is_stmt 1 discriminator 2
 14105 1130 7869     		ldr	r0, [r7, #20]
 14106 1132 FFF7FEFF 		bl	strlen
 14107 1136 0346     		mov	r3, r0
 14108 1138 1A46     		mov	r2, r3
 14109 113a 7B69     		ldr	r3, [r7, #20]
 14110 113c 1344     		add	r3, r3, r2
 14111 113e AD4A     		ldr	r2, .L625+8
 14112 1140 1188     		ldrh	r1, [r2]	@ unaligned
 14113 1142 9278     		ldrb	r2, [r2, #2]
 14114 1144 1980     		strh	r1, [r3]	@ unaligned
 14115 1146 9A70     		strb	r2, [r3, #2]
2039:..\src/command_processing.c ****             
2040:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2041:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14116              		.loc 1 2041 0 discriminator 2
 14117 1148 D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 321


 14118 114c 5B6C     		ldr	r3, [r3, #68]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14119              		.loc 1 2040 0 discriminator 2
 14120 114e 1846     		mov	r0, r3
 14121 1150 FFF7FEFF 		bl	__aeabi_f2d
 14122 1154 C7E90201 		strd	r0, [r7, #8]
 14123              		.loc 1 2041 0 discriminator 2
 14124 1158 D7F88430 		ldr	r3, [r7, #132]
 14125 115c 9B6C     		ldr	r3, [r3, #72]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14126              		.loc 1 2040 0 discriminator 2
 14127 115e 1846     		mov	r0, r3
 14128 1160 FFF7FEFF 		bl	__aeabi_f2d
 14129 1164 0446     		mov	r4, r0
 14130 1166 0D46     		mov	r5, r1
 14131              		.loc 1 2041 0 discriminator 2
 14132 1168 D7F88430 		ldr	r3, [r7, #132]
 14133 116c DB6C     		ldr	r3, [r3, #76]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14134              		.loc 1 2040 0 discriminator 2
 14135 116e 1846     		mov	r0, r3
 14136 1170 FFF7FEFF 		bl	__aeabi_f2d
 14137 1174 8046     		mov	r8, r0
 14138 1176 8946     		mov	r9, r1
2042:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 14139              		.loc 1 2042 0 discriminator 2
 14140 1178 D7F88430 		ldr	r3, [r7, #132]
 14141 117c 1B6D     		ldr	r3, [r3, #80]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14142              		.loc 1 2040 0 discriminator 2
 14143 117e 1846     		mov	r0, r3
 14144 1180 FFF7FEFF 		bl	__aeabi_f2d
 14145 1184 8246     		mov	r10, r0
 14146 1186 8B46     		mov	fp, r1
 14147              		.loc 1 2042 0 discriminator 2
 14148 1188 D7F88430 		ldr	r3, [r7, #132]
 14149 118c 5B6D     		ldr	r3, [r3, #84]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14150              		.loc 1 2040 0 discriminator 2
 14151 118e 1846     		mov	r0, r3
 14152 1190 FFF7FEFF 		bl	__aeabi_f2d
 14153 1194 C7E90001 		strd	r0, [r7]
 14154              		.loc 1 2042 0 discriminator 2
 14155 1198 D7F88430 		ldr	r3, [r7, #132]
 14156 119c 9B6D     		ldr	r3, [r3, #88]	@ float
2040:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14157              		.loc 1 2040 0 discriminator 2
 14158 119e 1846     		mov	r0, r3
 14159 11a0 FFF7FEFF 		bl	__aeabi_f2d
 14160 11a4 0246     		mov	r2, r0
 14161 11a6 0B46     		mov	r3, r1
 14162 11a8 07F11C00 		add	r0, r7, #28
 14163 11ac CDE90823 		strd	r2, [sp, #32]
 14164 11b0 D7E90012 		ldrd	r1, [r7]
 14165 11b4 CDE90612 		strd	r1, [sp, #24]
 14166 11b8 CDE904AB 		strd	r10, [sp, #16]
 14167 11bc CDE90289 		strd	r8, [sp, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 322


 14168 11c0 CDE90045 		strd	r4, [sp]
 14169 11c4 D7E90223 		ldrd	r2, [r7, #8]
 14170 11c8 8B49     		ldr	r1, .L625+12
 14171 11ca FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c **** 		    strcat(info_string, str);       
 14172              		.loc 1 2043 0 discriminator 2
 14173 11ce 07F11C03 		add	r3, r7, #28
 14174 11d2 1946     		mov	r1, r3
 14175 11d4 7869     		ldr	r0, [r7, #20]
 14176 11d6 FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 14177              		.loc 1 2045 0 discriminator 2
 14178 11da D7F88430 		ldr	r3, [r7, #132]
 14179 11de 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 14180 11e2 1A46     		mov	r2, r3
 14181 11e4 07F11C03 		add	r3, r7, #28
 14182 11e8 8449     		ldr	r1, .L625+16
 14183 11ea 1846     		mov	r0, r3
 14184 11ec FFF7FEFF 		bl	sprintf
2046:..\src/command_processing.c ****             strcat(info_string, str);
 14185              		.loc 1 2046 0 discriminator 2
 14186 11f0 07F11C03 		add	r3, r7, #28
 14187 11f4 1946     		mov	r1, r3
 14188 11f6 7869     		ldr	r0, [r7, #20]
 14189 11f8 FFF7FEFF 		bl	strcat
2047:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14190              		.loc 1 2047 0 discriminator 2
 14191 11fc 7869     		ldr	r0, [r7, #20]
 14192 11fe FFF7FEFF 		bl	strlen
 14193 1202 0346     		mov	r3, r0
 14194 1204 1A46     		mov	r2, r3
 14195 1206 7B69     		ldr	r3, [r7, #20]
 14196 1208 1344     		add	r3, r3, r2
 14197 120a 7A4A     		ldr	r2, .L625+8
 14198 120c 1188     		ldrh	r1, [r2]	@ unaligned
 14199 120e 9278     		ldrb	r2, [r2, #2]
 14200 1210 1980     		strh	r1, [r3]	@ unaligned
 14201 1212 9A70     		strb	r2, [r3, #2]
2048:..\src/command_processing.c **** 
2049:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 14202              		.loc 1 2049 0 discriminator 2
 14203 1214 D7F88430 		ldr	r3, [r7, #132]
 14204 1218 596B     		ldr	r1, [r3, #52]
 14205 121a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14206 121e D7F88C00 		ldr	r0, [r7, #140]
 14207 1222 1346     		mov	r3, r2
 14208 1224 5B00     		lsls	r3, r3, #1
 14209 1226 1344     		add	r3, r3, r2
 14210 1228 1B01     		lsls	r3, r3, #4
 14211 122a 0344     		add	r3, r3, r0
 14212 122c 03F29513 		addw	r3, r3, #405
 14213 1230 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14214 1232 41FA03F2 		asr	r2, r1, r3
 14215 1236 07F11C03 		add	r3, r7, #28
 14216 123a 7149     		ldr	r1, .L625+20
 14217 123c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 323


 14218 123e FFF7FEFF 		bl	sprintf
2050:..\src/command_processing.c ****             strcat(info_string, str);
 14219              		.loc 1 2050 0 discriminator 2
 14220 1242 07F11C03 		add	r3, r7, #28
 14221 1246 1946     		mov	r1, r3
 14222 1248 7869     		ldr	r0, [r7, #20]
 14223 124a FFF7FEFF 		bl	strcat
2051:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 14224              		.loc 1 2051 0 discriminator 2
 14225 124e D7F88430 		ldr	r3, [r7, #132]
 14226 1252 996B     		ldr	r1, [r3, #56]
 14227 1254 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14228 1258 D7F88C00 		ldr	r0, [r7, #140]
 14229 125c 1346     		mov	r3, r2
 14230 125e 5B00     		lsls	r3, r3, #1
 14231 1260 1344     		add	r3, r3, r2
 14232 1262 1B01     		lsls	r3, r3, #4
 14233 1264 0344     		add	r3, r3, r0
 14234 1266 03F29513 		addw	r3, r3, #405
 14235 126a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14236 126c 41FA03F2 		asr	r2, r1, r3
 14237 1270 07F11C03 		add	r3, r7, #28
 14238 1274 6349     		ldr	r1, .L625+24
 14239 1276 1846     		mov	r0, r3
 14240 1278 FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****             strcat(info_string, str);
 14241              		.loc 1 2052 0 discriminator 2
 14242 127c 07F11C03 		add	r3, r7, #28
 14243 1280 1946     		mov	r1, r3
 14244 1282 7869     		ldr	r0, [r7, #20]
 14245 1284 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c **** 
2054:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 14246              		.loc 1 2054 0 discriminator 2
 14247 1288 D7F88430 		ldr	r3, [r7, #132]
 14248 128c 1A6C     		ldr	r2, [r3, #64]
 14249 128e D7F88430 		ldr	r3, [r7, #132]
 14250 1292 DB6B     		ldr	r3, [r3, #60]
 14251 1294 07F11C00 		add	r0, r7, #28
 14252 1298 5B49     		ldr	r1, .L625+28
 14253 129a FFF7FEFF 		bl	sprintf
2055:..\src/command_processing.c ****             strcat(info_string, str);
 14254              		.loc 1 2055 0 discriminator 2
 14255 129e 07F11C03 		add	r3, r7, #28
 14256 12a2 1946     		mov	r1, r3
 14257 12a4 7869     		ldr	r0, [r7, #20]
 14258 12a6 FFF7FEFF 		bl	strcat
2056:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14259              		.loc 1 2056 0 discriminator 2
 14260 12aa 7869     		ldr	r0, [r7, #20]
 14261 12ac FFF7FEFF 		bl	strlen
 14262 12b0 0346     		mov	r3, r0
 14263 12b2 1A46     		mov	r2, r3
 14264 12b4 7B69     		ldr	r3, [r7, #20]
 14265 12b6 1344     		add	r3, r3, r2
 14266 12b8 4E4A     		ldr	r2, .L625+8
 14267 12ba 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 324


 14268 12bc 9278     		ldrb	r2, [r2, #2]
 14269 12be 1980     		strh	r1, [r3]	@ unaligned
 14270 12c0 9A70     		strb	r2, [r3, #2]
2057:..\src/command_processing.c **** 
2058:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 14271              		.loc 1 2058 0 discriminator 2
 14272 12c2 D7F88430 		ldr	r3, [r7, #132]
 14273 12c6 B3F95C30 		ldrsh	r3, [r3, #92]
 14274 12ca 1A46     		mov	r2, r3
 14275 12cc 07F11C03 		add	r3, r7, #28
 14276 12d0 4E49     		ldr	r1, .L625+32
 14277 12d2 1846     		mov	r0, r3
 14278 12d4 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****             strcat(info_string, str);
 14279              		.loc 1 2059 0 discriminator 2
 14280 12d8 07F11C03 		add	r3, r7, #28
 14281 12dc 1946     		mov	r1, r3
 14282 12de 7869     		ldr	r0, [r7, #20]
 14283 12e0 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2061:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2062:..\src/command_processing.c ****             strcat(info_string, str);
2063:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2064:..\src/command_processing.c ****                 case DRIVER_MC33887:
2065:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2066:..\src/command_processing.c ****                     break;
2067:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2068:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2069:..\src/command_processing.c ****                     break;
2070:..\src/command_processing.c ****                 default:
2071:..\src/command_processing.c ****                     break;
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2074:..\src/command_processing.c ****             strcat(info_string, str);
2075:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2076:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2077:..\src/command_processing.c ****             else
2078:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2079:..\src/command_processing.c **** #endif                
2080:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14284              		.loc 1 2080 0 discriminator 2
 14285 12e4 7869     		ldr	r0, [r7, #20]
 14286 12e6 FFF7FEFF 		bl	strlen
 14287 12ea 0346     		mov	r3, r0
 14288 12ec 1A46     		mov	r2, r3
 14289 12ee 7B69     		ldr	r3, [r7, #20]
 14290 12f0 1344     		add	r3, r3, r2
 14291 12f2 404A     		ldr	r2, .L625+8
 14292 12f4 1188     		ldrh	r1, [r2]	@ unaligned
 14293 12f6 9278     		ldrb	r2, [r2, #2]
 14294 12f8 1980     		strh	r1, [r3]	@ unaligned
 14295 12fa 9A70     		strb	r2, [r3, #2]
 14296              	.LBE18:
1819:..\src/command_processing.c ****             
 14297              		.loc 1 1819 0 discriminator 2
 14298 12fc 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 14299 1300 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 325


 14300 1302 87F89330 		strb	r3, [r7, #147]
 14301              	.L535:
1819:..\src/command_processing.c ****             
 14302              		.loc 1 1819 0 is_stmt 0 discriminator 1
 14303 1306 D7F88C30 		ldr	r3, [r7, #140]
 14304 130a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 14305 130e 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 14306 1312 9A42     		cmp	r2, r3
 14307 1314 7EF6CDAF 		bls	.L586
 14308              	.LBE17:
2081:..\src/command_processing.c ****         }
2082:..\src/command_processing.c ****       
2083:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 14309              		.loc 1 2083 0 is_stmt 1
 14310 1318 7869     		ldr	r0, [r7, #20]
 14311 131a FFF7FEFF 		bl	strlen
 14312 131e 0346     		mov	r3, r0
 14313 1320 1A46     		mov	r2, r3
 14314 1322 7B69     		ldr	r3, [r7, #20]
 14315 1324 1344     		add	r3, r3, r2
 14316 1326 3A4A     		ldr	r2, .L625+36
 14317 1328 1D46     		mov	r5, r3
 14318 132a 1446     		mov	r4, r2
 14319 132c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14320 132e 2860     		str	r0, [r5]	@ unaligned
 14321 1330 6960     		str	r1, [r5, #4]	@ unaligned
 14322 1332 AA60     		str	r2, [r5, #8]	@ unaligned
 14323 1334 EB60     		str	r3, [r5, #12]	@ unaligned
 14324 1336 2068     		ldr	r0, [r4]	@ unaligned
 14325 1338 2861     		str	r0, [r5, #16]	@ unaligned
2084:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 14326              		.loc 1 2084 0
 14327 133a D7F88C30 		ldr	r3, [r7, #140]
 14328 133e B3F8F031 		ldrh	r3, [r3, #496]
 14329 1342 1A46     		mov	r2, r3
 14330 1344 D7F88C30 		ldr	r3, [r7, #140]
 14331 1348 B3F8F231 		ldrh	r3, [r3, #498]
 14332 134c 07F11C00 		add	r0, r7, #28
 14333 1350 3049     		ldr	r1, .L625+40
 14334 1352 FFF7FEFF 		bl	sprintf
2085:..\src/command_processing.c ****         strcat(info_string, str);
 14335              		.loc 1 2085 0
 14336 1356 07F11C03 		add	r3, r7, #28
 14337 135a 1946     		mov	r1, r3
 14338 135c 7869     		ldr	r0, [r7, #20]
 14339 135e FFF7FEFF 		bl	strcat
2086:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14340              		.loc 1 2086 0
 14341 1362 7869     		ldr	r0, [r7, #20]
 14342 1364 FFF7FEFF 		bl	strlen
 14343 1368 0346     		mov	r3, r0
 14344 136a 1A46     		mov	r2, r3
 14345 136c 7B69     		ldr	r3, [r7, #20]
 14346 136e 1344     		add	r3, r3, r2
 14347 1370 204A     		ldr	r2, .L625+8
 14348 1372 1188     		ldrh	r1, [r2]	@ unaligned
 14349 1374 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 326


 14350 1376 1980     		strh	r1, [r3]	@ unaligned
 14351 1378 9A70     		strb	r2, [r3, #2]
2087:..\src/command_processing.c **** 
2088:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 14352              		.loc 1 2088 0
 14353 137a D7F88C30 		ldr	r3, [r7, #140]
 14354 137e D3F8F421 		ldr	r2, [r3, #500]
 14355 1382 D7F88C30 		ldr	r3, [r7, #140]
 14356 1386 D3F8F831 		ldr	r3, [r3, #504]
 14357 138a 07F11C00 		add	r0, r7, #28
 14358 138e 2249     		ldr	r1, .L625+44
 14359 1390 FFF7FEFF 		bl	sprintf
2089:..\src/command_processing.c ****         strcat(info_string, str);
 14360              		.loc 1 2089 0
 14361 1394 07F11C03 		add	r3, r7, #28
 14362 1398 1946     		mov	r1, r3
 14363 139a 7869     		ldr	r0, [r7, #20]
 14364 139c FFF7FEFF 		bl	strcat
2090:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14365              		.loc 1 2090 0
 14366 13a0 7869     		ldr	r0, [r7, #20]
 14367 13a2 FFF7FEFF 		bl	strlen
 14368 13a6 0346     		mov	r3, r0
 14369 13a8 1A46     		mov	r2, r3
 14370 13aa 7B69     		ldr	r3, [r7, #20]
 14371 13ac 1344     		add	r3, r3, r2
 14372 13ae 114A     		ldr	r2, .L625+8
 14373 13b0 1188     		ldrh	r1, [r2]	@ unaligned
 14374 13b2 9278     		ldrb	r2, [r2, #2]
 14375 13b4 1980     		strh	r1, [r3]	@ unaligned
 14376 13b6 9A70     		strb	r2, [r3, #2]
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 14377              		.loc 1 2092 0
 14378 13b8 D7F88C30 		ldr	r3, [r7, #140]
 14379 13bc 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 14380 13c0 002B     		cmp	r3, #0
 14381 13c2 2DD0     		beq	.L587
2093:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 14382              		.loc 1 2093 0
 14383 13c4 7869     		ldr	r0, [r7, #20]
 14384 13c6 FFF7FEFF 		bl	strlen
 14385 13ca 0346     		mov	r3, r0
 14386 13cc 1A46     		mov	r2, r3
 14387 13ce 7B69     		ldr	r3, [r7, #20]
 14388 13d0 1344     		add	r3, r3, r2
 14389 13d2 124A     		ldr	r2, .L625+48
 14390 13d4 1D46     		mov	r5, r3
 14391 13d6 1446     		mov	r4, r2
 14392 13d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14393 13da 2860     		str	r0, [r5]	@ unaligned
 14394 13dc 6960     		str	r1, [r5, #4]	@ unaligned
 14395 13de AA60     		str	r2, [r5, #8]	@ unaligned
 14396 13e0 EB60     		str	r3, [r5, #12]	@ unaligned
 14397 13e2 2068     		ldr	r0, [r4]	@ unaligned
 14398 13e4 2861     		str	r0, [r5, #16]	@ unaligned
 14399 13e6 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 327


 14400 13e8 2B75     		strb	r3, [r5, #20]
 14401 13ea 2AE0     		b	.L588
 14402              	.L626:
 14403              		.align	2
 14404              	.L625:
 14405 13ec BC130000 		.word	.LC193
 14406 13f0 A0100000 		.word	.LC162
 14407 13f4 AC0E0000 		.word	.LC132
 14408 13f8 C0130000 		.word	.LC194
 14409 13fc F0130000 		.word	.LC195
 14410 1400 0C140000 		.word	.LC196
 14411 1404 30140000 		.word	.LC197
 14412 1408 40140000 		.word	.LC198
 14413 140c 5C140000 		.word	.LC199
 14414 1410 70140000 		.word	.LC200
 14415 1414 84140000 		.word	.LC201
 14416 1418 A8140000 		.word	.LC202
 14417 141c CC140000 		.word	.LC203
 14418              	.L587:
2094:..\src/command_processing.c ****         else
2095:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 14419              		.loc 1 2095 0
 14420 1420 7869     		ldr	r0, [r7, #20]
 14421 1422 FFF7FEFF 		bl	strlen
 14422 1426 0346     		mov	r3, r0
 14423 1428 1A46     		mov	r2, r3
 14424 142a 7B69     		ldr	r3, [r7, #20]
 14425 142c 1344     		add	r3, r3, r2
 14426 142e BA4A     		ldr	r2, .L627
 14427 1430 1D46     		mov	r5, r3
 14428 1432 1446     		mov	r4, r2
 14429 1434 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14430 1436 2860     		str	r0, [r5]	@ unaligned
 14431 1438 6960     		str	r1, [r5, #4]	@ unaligned
 14432 143a AA60     		str	r2, [r5, #8]	@ unaligned
 14433 143c EB60     		str	r3, [r5, #12]	@ unaligned
 14434 143e 2068     		ldr	r0, [r4]	@ unaligned
 14435 1440 2861     		str	r0, [r5, #16]	@ unaligned
 14436              	.L588:
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 14437              		.loc 1 2097 0
 14438 1442 D7F88C30 		ldr	r3, [r7, #140]
 14439 1446 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 14440 144a 002B     		cmp	r3, #0
 14441 144c 17D0     		beq	.L589
2098:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 14442              		.loc 1 2098 0
 14443 144e 7869     		ldr	r0, [r7, #20]
 14444 1450 FFF7FEFF 		bl	strlen
 14445 1454 0346     		mov	r3, r0
 14446 1456 1A46     		mov	r2, r3
 14447 1458 7B69     		ldr	r3, [r7, #20]
 14448 145a 1344     		add	r3, r3, r2
 14449 145c AF4A     		ldr	r2, .L627+4
 14450 145e 1D46     		mov	r5, r3
 14451 1460 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 328


 14452 1462 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14453 1464 2860     		str	r0, [r5]	@ unaligned
 14454 1466 6960     		str	r1, [r5, #4]	@ unaligned
 14455 1468 AA60     		str	r2, [r5, #8]	@ unaligned
 14456 146a EB60     		str	r3, [r5, #12]	@ unaligned
 14457 146c 03CC     		ldmia	r4!, {r0, r1}
 14458 146e 2861     		str	r0, [r5, #16]	@ unaligned
 14459 1470 6961     		str	r1, [r5, #20]	@ unaligned
 14460 1472 2388     		ldrh	r3, [r4]	@ unaligned
 14461 1474 A278     		ldrb	r2, [r4, #2]
 14462 1476 2B83     		strh	r3, [r5, #24]	@ unaligned
 14463 1478 1346     		mov	r3, r2
 14464 147a AB76     		strb	r3, [r5, #26]
 14465 147c 13E0     		b	.L590
 14466              	.L589:
2099:..\src/command_processing.c ****         else
2100:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 14467              		.loc 1 2100 0
 14468 147e 7869     		ldr	r0, [r7, #20]
 14469 1480 FFF7FEFF 		bl	strlen
 14470 1484 0346     		mov	r3, r0
 14471 1486 1A46     		mov	r2, r3
 14472 1488 7B69     		ldr	r3, [r7, #20]
 14473 148a 1344     		add	r3, r3, r2
 14474 148c A44A     		ldr	r2, .L627+8
 14475 148e 1D46     		mov	r5, r3
 14476 1490 1446     		mov	r4, r2
 14477 1492 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14478 1494 2860     		str	r0, [r5]	@ unaligned
 14479 1496 6960     		str	r1, [r5, #4]	@ unaligned
 14480 1498 AA60     		str	r2, [r5, #8]	@ unaligned
 14481 149a EB60     		str	r3, [r5, #12]	@ unaligned
 14482 149c 03CC     		ldmia	r4!, {r0, r1}
 14483 149e 2861     		str	r0, [r5, #16]	@ unaligned
 14484 14a0 6961     		str	r1, [r5, #20]	@ unaligned
 14485 14a2 2388     		ldrh	r3, [r4]	@ unaligned
 14486 14a4 2B83     		strh	r3, [r5, #24]	@ unaligned
 14487              	.L590:
2101:..\src/command_processing.c **** 
2102:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 14488              		.loc 1 2102 0
 14489 14a6 D7F88C30 		ldr	r3, [r7, #140]
 14490 14aa 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 14491 14ae 1A46     		mov	r2, r3
 14492 14b0 D7F88C30 		ldr	r3, [r7, #140]
 14493 14b4 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 14494 14b8 07F11C00 		add	r0, r7, #28
 14495 14bc 9949     		ldr	r1, .L627+12
 14496 14be FFF7FEFF 		bl	sprintf
2103:..\src/command_processing.c ****         strcat(info_string, str);
 14497              		.loc 1 2103 0
 14498 14c2 07F11C03 		add	r3, r7, #28
 14499 14c6 1946     		mov	r1, r3
 14500 14c8 7869     		ldr	r0, [r7, #20]
 14501 14ca FFF7FEFF 		bl	strcat
2104:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14502              		.loc 1 2104 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 329


 14503 14ce 7869     		ldr	r0, [r7, #20]
 14504 14d0 FFF7FEFF 		bl	strlen
 14505 14d4 0346     		mov	r3, r0
 14506 14d6 1A46     		mov	r2, r3
 14507 14d8 7B69     		ldr	r3, [r7, #20]
 14508 14da 1344     		add	r3, r3, r2
 14509 14dc 924A     		ldr	r2, .L627+16
 14510 14de 1188     		ldrh	r1, [r2]	@ unaligned
 14511 14e0 9278     		ldrb	r2, [r2, #2]
 14512 14e2 1980     		strh	r1, [r3]	@ unaligned
 14513 14e4 9A70     		strb	r2, [r3, #2]
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 14514              		.loc 1 2106 0
 14515 14e6 D7F88C30 		ldr	r3, [r7, #140]
 14516 14ea 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 14517 14ee 012B     		cmp	r3, #1
 14518 14f0 6ED1     		bne	.L591
2107:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 14519              		.loc 1 2107 0
 14520 14f2 7869     		ldr	r0, [r7, #20]
 14521 14f4 FFF7FEFF 		bl	strlen
 14522 14f8 0346     		mov	r3, r0
 14523 14fa 1A46     		mov	r2, r3
 14524 14fc 7B69     		ldr	r3, [r7, #20]
 14525 14fe 1344     		add	r3, r3, r2
 14526 1500 8A4A     		ldr	r2, .L627+20
 14527 1502 1C46     		mov	r4, r3
 14528 1504 1546     		mov	r5, r2
 14529 1506 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14530 1508 2060     		str	r0, [r4]	@ unaligned
 14531 150a 6160     		str	r1, [r4, #4]	@ unaligned
 14532 150c A260     		str	r2, [r4, #8]	@ unaligned
 14533 150e E360     		str	r3, [r4, #12]	@ unaligned
 14534 1510 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14535 1512 2061     		str	r0, [r4, #16]	@ unaligned
 14536 1514 6161     		str	r1, [r4, #20]	@ unaligned
 14537 1516 A261     		str	r2, [r4, #24]	@ unaligned
 14538 1518 E361     		str	r3, [r4, #28]	@ unaligned
2108:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 14539              		.loc 1 2108 0
 14540 151a 0023     		movs	r3, #0
 14541 151c C7F89430 		str	r3, [r7, #148]
 14542 1520 25E0     		b	.L592
 14543              	.L593:
2109:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14544              		.loc 1 2109 0 discriminator 3
 14545 1522 D7F89430 		ldr	r3, [r7, #148]
 14546 1526 591C     		adds	r1, r3, #1
 14547 1528 814A     		ldr	r2, .L627+24
 14548 152a D7F89430 		ldr	r3, [r7, #148]
 14549 152e 0233     		adds	r3, r3, #2
 14550 1530 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14551 1534 07F11C00 		add	r0, r7, #28
 14552 1538 0A46     		mov	r2, r1
 14553 153a 7E49     		ldr	r1, .L627+28
 14554 153c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 330


2110:..\src/command_processing.c ****                 strcat(info_string, str);
 14555              		.loc 1 2110 0 discriminator 3
 14556 1540 07F11C03 		add	r3, r7, #28
 14557 1544 1946     		mov	r1, r3
 14558 1546 7869     		ldr	r0, [r7, #20]
 14559 1548 FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14560              		.loc 1 2111 0 discriminator 3
 14561 154c 7869     		ldr	r0, [r7, #20]
 14562 154e FFF7FEFF 		bl	strlen
 14563 1552 0346     		mov	r3, r0
 14564 1554 1A46     		mov	r2, r3
 14565 1556 7B69     		ldr	r3, [r7, #20]
 14566 1558 1344     		add	r3, r3, r2
 14567 155a 734A     		ldr	r2, .L627+16
 14568 155c 1188     		ldrh	r1, [r2]	@ unaligned
 14569 155e 9278     		ldrb	r2, [r2, #2]
 14570 1560 1980     		strh	r1, [r3]	@ unaligned
 14571 1562 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14572              		.loc 1 2108 0 discriminator 3
 14573 1564 D7F89430 		ldr	r3, [r7, #148]
 14574 1568 0133     		adds	r3, r3, #1
 14575 156a C7F89430 		str	r3, [r7, #148]
 14576              	.L592:
2108:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14577              		.loc 1 2108 0 is_stmt 0 discriminator 1
 14578 156e D7F89430 		ldr	r3, [r7, #148]
 14579 1572 052B     		cmp	r3, #5
 14580 1574 D5DD     		ble	.L593
2112:..\src/command_processing.c ****             }
2113:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 14581              		.loc 1 2113 0 is_stmt 1
 14582 1576 0023     		movs	r3, #0
 14583 1578 C7F89430 		str	r3, [r7, #148]
 14584 157c 24E0     		b	.L594
 14585              	.L595:
2114:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14586              		.loc 1 2114 0 discriminator 3
 14587 157e D7F89430 		ldr	r3, [r7, #148]
 14588 1582 591C     		adds	r1, r3, #1
 14589 1584 6A4A     		ldr	r2, .L627+24
 14590 1586 D7F89430 		ldr	r3, [r7, #148]
 14591 158a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14592 158e 07F11C00 		add	r0, r7, #28
 14593 1592 0A46     		mov	r2, r1
 14594 1594 6849     		ldr	r1, .L627+32
 14595 1596 FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 14596              		.loc 1 2115 0 discriminator 3
 14597 159a 07F11C03 		add	r3, r7, #28
 14598 159e 1946     		mov	r1, r3
 14599 15a0 7869     		ldr	r0, [r7, #20]
 14600 15a2 FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14601              		.loc 1 2116 0 discriminator 3
 14602 15a6 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 331


 14603 15a8 FFF7FEFF 		bl	strlen
 14604 15ac 0346     		mov	r3, r0
 14605 15ae 1A46     		mov	r2, r3
 14606 15b0 7B69     		ldr	r3, [r7, #20]
 14607 15b2 1344     		add	r3, r3, r2
 14608 15b4 5C4A     		ldr	r2, .L627+16
 14609 15b6 1188     		ldrh	r1, [r2]	@ unaligned
 14610 15b8 9278     		ldrb	r2, [r2, #2]
 14611 15ba 1980     		strh	r1, [r3]	@ unaligned
 14612 15bc 9A70     		strb	r2, [r3, #2]
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14613              		.loc 1 2113 0 discriminator 3
 14614 15be D7F89430 		ldr	r3, [r7, #148]
 14615 15c2 0133     		adds	r3, r3, #1
 14616 15c4 C7F89430 		str	r3, [r7, #148]
 14617              	.L594:
2113:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14618              		.loc 1 2113 0 is_stmt 0 discriminator 1
 14619 15c8 D7F89430 		ldr	r3, [r7, #148]
 14620 15cc 012B     		cmp	r3, #1
 14621 15ce D6DD     		ble	.L595
 14622              	.L591:
2117:..\src/command_processing.c ****             }
2118:..\src/command_processing.c ****         }
2119:..\src/command_processing.c ****         
2120:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 14623              		.loc 1 2120 0 is_stmt 1
 14624 15d0 D7F88C30 		ldr	r3, [r7, #140]
 14625 15d4 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 14626 15d8 002B     		cmp	r3, #0
 14627 15da 63D0     		beq	.L596
2121:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 14628              		.loc 1 2121 0
 14629 15dc D7F88C30 		ldr	r3, [r7, #140]
 14630 15e0 D3F8A422 		ldr	r2, [r3, #676]
 14631 15e4 07F11C03 		add	r3, r7, #28
 14632 15e8 5449     		ldr	r1, .L627+36
 14633 15ea 1846     		mov	r0, r3
 14634 15ec FFF7FEFF 		bl	sprintf
2122:..\src/command_processing.c ****             strcat(info_string, str);
 14635              		.loc 1 2122 0
 14636 15f0 07F11C03 		add	r3, r7, #28
 14637 15f4 1946     		mov	r1, r3
 14638 15f6 7869     		ldr	r0, [r7, #20]
 14639 15f8 FFF7FEFF 		bl	strcat
2123:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14640              		.loc 1 2123 0
 14641 15fc 7869     		ldr	r0, [r7, #20]
 14642 15fe FFF7FEFF 		bl	strlen
 14643 1602 0346     		mov	r3, r0
 14644 1604 1A46     		mov	r2, r3
 14645 1606 7B69     		ldr	r3, [r7, #20]
 14646 1608 1344     		add	r3, r3, r2
 14647 160a 474A     		ldr	r2, .L627+16
 14648 160c 1188     		ldrh	r1, [r2]	@ unaligned
 14649 160e 9278     		ldrb	r2, [r2, #2]
 14650 1610 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 332


 14651 1612 9A70     		strb	r2, [r3, #2]
2124:..\src/command_processing.c ****             
2125:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 14652              		.loc 1 2125 0
 14653 1614 D7F88C30 		ldr	r3, [r7, #140]
 14654 1618 D3F8A822 		ldr	r2, [r3, #680]
 14655 161c 07F11C03 		add	r3, r7, #28
 14656 1620 4749     		ldr	r1, .L627+40
 14657 1622 1846     		mov	r0, r3
 14658 1624 FFF7FEFF 		bl	sprintf
2126:..\src/command_processing.c ****             strcat(info_string, str);
 14659              		.loc 1 2126 0
 14660 1628 07F11C03 		add	r3, r7, #28
 14661 162c 1946     		mov	r1, r3
 14662 162e 7869     		ldr	r0, [r7, #20]
 14663 1630 FFF7FEFF 		bl	strcat
2127:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14664              		.loc 1 2127 0
 14665 1634 7869     		ldr	r0, [r7, #20]
 14666 1636 FFF7FEFF 		bl	strlen
 14667 163a 0346     		mov	r3, r0
 14668 163c 1A46     		mov	r2, r3
 14669 163e 7B69     		ldr	r3, [r7, #20]
 14670 1640 1344     		add	r3, r3, r2
 14671 1642 394A     		ldr	r2, .L627+16
 14672 1644 1188     		ldrh	r1, [r2]	@ unaligned
 14673 1646 9278     		ldrb	r2, [r2, #2]
 14674 1648 1980     		strh	r1, [r3]	@ unaligned
 14675 164a 9A70     		strb	r2, [r3, #2]
2128:..\src/command_processing.c ****             
2129:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 14676              		.loc 1 2129 0
 14677 164c D7F88C30 		ldr	r3, [r7, #140]
 14678 1650 D3F8A022 		ldr	r2, [r3, #672]
 14679 1654 D7F88C30 		ldr	r3, [r7, #140]
 14680 1658 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 14681 165c 1846     		mov	r0, r3
 14682 165e D7F88C10 		ldr	r1, [r7, #140]
 14683 1662 0346     		mov	r3, r0
 14684 1664 5B00     		lsls	r3, r3, #1
 14685 1666 0344     		add	r3, r3, r0
 14686 1668 1B01     		lsls	r3, r3, #4
 14687 166a 0B44     		add	r3, r3, r1
 14688 166c 03F29513 		addw	r3, r3, #405
 14689 1670 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14690 1672 1A41     		asrs	r2, r2, r3
 14691 1674 07F11C03 		add	r3, r7, #28
 14692 1678 3249     		ldr	r1, .L627+44
 14693 167a 1846     		mov	r0, r3
 14694 167c FFF7FEFF 		bl	sprintf
2130:..\src/command_processing.c ****             strcat(info_string, str);
 14695              		.loc 1 2130 0
 14696 1680 07F11C03 		add	r3, r7, #28
 14697 1684 1946     		mov	r1, r3
 14698 1686 7869     		ldr	r0, [r7, #20]
 14699 1688 FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 333


 14700              		.loc 1 2131 0
 14701 168c 7869     		ldr	r0, [r7, #20]
 14702 168e FFF7FEFF 		bl	strlen
 14703 1692 0346     		mov	r3, r0
 14704 1694 1A46     		mov	r2, r3
 14705 1696 7B69     		ldr	r3, [r7, #20]
 14706 1698 1344     		add	r3, r3, r2
 14707 169a 234A     		ldr	r2, .L627+16
 14708 169c 1188     		ldrh	r1, [r2]	@ unaligned
 14709 169e 9278     		ldrb	r2, [r2, #2]
 14710 16a0 1980     		strh	r1, [r3]	@ unaligned
 14711 16a2 9A70     		strb	r2, [r3, #2]
 14712              	.L596:
2132:..\src/command_processing.c ****         }
2133:..\src/command_processing.c **** 
2134:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 14713              		.loc 1 2134 0
 14714 16a4 D7F88C30 		ldr	r3, [r7, #140]
 14715 16a8 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 14716 16ac 002B     		cmp	r3, #0
 14717 16ae 00F0CD81 		beq	.L597
2135:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 14718              		.loc 1 2135 0
 14719 16b2 254B     		ldr	r3, .L627+48
 14720 16b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14721 16b6 1A46     		mov	r2, r3
 14722 16b8 07F11C03 		add	r3, r7, #28
 14723 16bc 2349     		ldr	r1, .L627+52
 14724 16be 1846     		mov	r0, r3
 14725 16c0 FFF7FEFF 		bl	sprintf
2136:..\src/command_processing.c ****             strcat(info_string, str);
 14726              		.loc 1 2136 0
 14727 16c4 07F11C03 		add	r3, r7, #28
 14728 16c8 1946     		mov	r1, r3
 14729 16ca 7869     		ldr	r0, [r7, #20]
 14730 16cc FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****             
2138:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14731              		.loc 1 2138 0
 14732 16d0 7869     		ldr	r0, [r7, #20]
 14733 16d2 FFF7FEFF 		bl	strlen
 14734 16d6 0346     		mov	r3, r0
 14735 16d8 1A46     		mov	r2, r3
 14736 16da 7B69     		ldr	r3, [r7, #20]
 14737 16dc 1344     		add	r3, r3, r2
 14738 16de 124A     		ldr	r2, .L627+16
 14739 16e0 1188     		ldrh	r1, [r2]	@ unaligned
 14740 16e2 9278     		ldrb	r2, [r2, #2]
 14741 16e4 1980     		strh	r1, [r3]	@ unaligned
 14742 16e6 9A70     		strb	r2, [r3, #2]
2139:..\src/command_processing.c ****             
2140:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 14743              		.loc 1 2140 0
 14744 16e8 7869     		ldr	r0, [r7, #20]
 14745 16ea FFF7FEFF 		bl	strlen
 14746 16ee 0346     		mov	r3, r0
 14747 16f0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 334


 14748 16f2 7B69     		ldr	r3, [r7, #20]
 14749 16f4 1344     		add	r3, r3, r2
 14750 16f6 164A     		ldr	r2, .L627+56
 14751 16f8 1D46     		mov	r5, r3
 14752 16fa 1446     		mov	r4, r2
 14753 16fc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14754 16fe 2860     		str	r0, [r5]	@ unaligned
 14755 1700 6960     		str	r1, [r5, #4]	@ unaligned
 14756 1702 AA60     		str	r2, [r5, #8]	@ unaligned
 14757 1704 EB60     		str	r3, [r5, #12]	@ unaligned
 14758 1706 2068     		ldr	r0, [r4]	@ unaligned
 14759 1708 2861     		str	r0, [r5, #16]	@ unaligned
 14760 170a 2379     		ldrb	r3, [r4, #4]
 14761 170c 2B75     		strb	r3, [r5, #20]
2141:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 14762              		.loc 1 2141 0
 14763 170e 0023     		movs	r3, #0
 14764 1710 C7F89430 		str	r3, [r7, #148]
 14765 1714 83E1     		b	.L598
 14766              	.L628:
 14767 1716 00BF     		.align	2
 14768              	.L627:
 14769 1718 E4140000 		.word	.LC204
 14770 171c F8140000 		.word	.LC205
 14771 1720 14150000 		.word	.LC206
 14772 1724 30150000 		.word	.LC207
 14773 1728 AC0E0000 		.word	.LC132
 14774 172c 48150000 		.word	.LC208
 14775 1730 00000000 		.word	g_emg_meas
 14776 1734 68150000 		.word	.LC209
 14777 1738 78150000 		.word	.LC210
 14778 173c 8C150000 		.word	.LC211
 14779 1740 A8150000 		.word	.LC212
 14780 1744 D0150000 		.word	.LC213
 14781 1748 00000000 		.word	N_IMU_Connected
 14782 174c E4150000 		.word	.LC214
 14783 1750 F8150000 		.word	.LC215
 14784              	.L609:
2142:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 14785              		.loc 1 2142 0
 14786 1754 D54A     		ldr	r2, .L629
 14787 1756 D7F89430 		ldr	r3, [r7, #148]
 14788 175a 1344     		add	r3, r3, r2
 14789 175c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14790 175e 07F11C00 		add	r0, r7, #28
 14791 1762 D7F89420 		ldr	r2, [r7, #148]
 14792 1766 D249     		ldr	r1, .L629+4
 14793 1768 FFF7FEFF 		bl	sprintf
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 14794              		.loc 1 2143 0
 14795 176c 07F11C03 		add	r3, r7, #28
 14796 1770 1946     		mov	r1, r3
 14797 1772 7869     		ldr	r0, [r7, #20]
 14798 1774 FFF7FEFF 		bl	strcat
2144:..\src/command_processing.c ****                 
2145:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 14799              		.loc 1 2145 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 335


 14800 1778 07F11C03 		add	r3, r7, #28
 14801 177c CD4A     		ldr	r2, .L629+8
 14802 177e 1C46     		mov	r4, r3
 14803 1780 1546     		mov	r5, r2
 14804 1782 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14805 1784 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 14806 1786 2B68     		ldr	r3, [r5]
 14807 1788 2380     		strh	r3, [r4]	@ movhi
2146:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 14808              		.loc 1 2146 0
 14809 178a C84A     		ldr	r2, .L629
 14810 178c D7F89430 		ldr	r3, [r7, #148]
 14811 1790 1344     		add	r3, r3, r2
 14812 1792 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14813 1794 1946     		mov	r1, r3
 14814 1796 D7F88C20 		ldr	r2, [r7, #140]
 14815 179a 0B46     		mov	r3, r1
 14816 179c 9B00     		lsls	r3, r3, #2
 14817 179e 0B44     		add	r3, r3, r1
 14818 17a0 1344     		add	r3, r3, r2
 14819 17a2 03F20223 		addw	r3, r3, #514
 14820 17a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14821 17a8 002B     		cmp	r3, #0
 14822 17aa 0FD0     		beq	.L599
2147:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14823              		.loc 1 2147 0
 14824 17ac 07F11C03 		add	r3, r7, #28
 14825 17b0 1846     		mov	r0, r3
 14826 17b2 FFF7FEFF 		bl	strlen
 14827 17b6 0346     		mov	r3, r0
 14828 17b8 1A46     		mov	r2, r3
 14829 17ba 07F11C03 		add	r3, r7, #28
 14830 17be 1344     		add	r3, r3, r2
 14831 17c0 BD4A     		ldr	r2, .L629+12
 14832 17c2 1068     		ldr	r0, [r2]	@ unaligned
 14833 17c4 1860     		str	r0, [r3]	@ unaligned
 14834 17c6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14835 17c8 9A80     		strh	r2, [r3, #4]	@ unaligned
 14836 17ca 0EE0     		b	.L600
 14837              	.L599:
2148:..\src/command_processing.c ****                 else
2149:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14838              		.loc 1 2149 0
 14839 17cc 07F11C03 		add	r3, r7, #28
 14840 17d0 1846     		mov	r0, r3
 14841 17d2 FFF7FEFF 		bl	strlen
 14842 17d6 0346     		mov	r3, r0
 14843 17d8 1A46     		mov	r2, r3
 14844 17da 07F11C03 		add	r3, r7, #28
 14845 17de 1344     		add	r3, r3, r2
 14846 17e0 B64A     		ldr	r2, .L629+16
 14847 17e2 1068     		ldr	r0, [r2]	@ unaligned
 14848 17e4 1860     		str	r0, [r3]	@ unaligned
 14849 17e6 1279     		ldrb	r2, [r2, #4]
 14850 17e8 1A71     		strb	r2, [r3, #4]
 14851              	.L600:
2150:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 336


 14852              		.loc 1 2150 0
 14853 17ea 07F11C03 		add	r3, r7, #28
 14854 17ee 1846     		mov	r0, r3
 14855 17f0 FFF7FEFF 		bl	strlen
 14856 17f4 0346     		mov	r3, r0
 14857 17f6 1A46     		mov	r2, r3
 14858 17f8 07F11C03 		add	r3, r7, #28
 14859 17fc 1344     		add	r3, r3, r2
 14860 17fe B04A     		ldr	r2, .L629+20
 14861 1800 1C46     		mov	r4, r3
 14862 1802 1346     		mov	r3, r2
 14863 1804 07CB     		ldmia	r3!, {r0, r1, r2}
 14864 1806 2060     		str	r0, [r4]	@ unaligned
 14865 1808 6160     		str	r1, [r4, #4]	@ unaligned
 14866 180a A260     		str	r2, [r4, #8]	@ unaligned
 14867 180c 1B88     		ldrh	r3, [r3]	@ unaligned
 14868 180e A381     		strh	r3, [r4, #12]	@ unaligned
2151:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 14869              		.loc 1 2151 0
 14870 1810 A64A     		ldr	r2, .L629
 14871 1812 D7F89430 		ldr	r3, [r7, #148]
 14872 1816 1344     		add	r3, r3, r2
 14873 1818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14874 181a 1946     		mov	r1, r3
 14875 181c D7F88C20 		ldr	r2, [r7, #140]
 14876 1820 0B46     		mov	r3, r1
 14877 1822 9B00     		lsls	r3, r3, #2
 14878 1824 0B44     		add	r3, r3, r1
 14879 1826 1344     		add	r3, r3, r2
 14880 1828 03F20323 		addw	r3, r3, #515
 14881 182c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14882 182e 002B     		cmp	r3, #0
 14883 1830 0FD0     		beq	.L601
2152:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14884              		.loc 1 2152 0
 14885 1832 07F11C03 		add	r3, r7, #28
 14886 1836 1846     		mov	r0, r3
 14887 1838 FFF7FEFF 		bl	strlen
 14888 183c 0346     		mov	r3, r0
 14889 183e 1A46     		mov	r2, r3
 14890 1840 07F11C03 		add	r3, r7, #28
 14891 1844 1344     		add	r3, r3, r2
 14892 1846 9C4A     		ldr	r2, .L629+12
 14893 1848 1068     		ldr	r0, [r2]	@ unaligned
 14894 184a 1860     		str	r0, [r3]	@ unaligned
 14895 184c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14896 184e 9A80     		strh	r2, [r3, #4]	@ unaligned
 14897 1850 0EE0     		b	.L602
 14898              	.L601:
2153:..\src/command_processing.c ****                 else
2154:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14899              		.loc 1 2154 0
 14900 1852 07F11C03 		add	r3, r7, #28
 14901 1856 1846     		mov	r0, r3
 14902 1858 FFF7FEFF 		bl	strlen
 14903 185c 0346     		mov	r3, r0
 14904 185e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 337


 14905 1860 07F11C03 		add	r3, r7, #28
 14906 1864 1344     		add	r3, r3, r2
 14907 1866 954A     		ldr	r2, .L629+16
 14908 1868 1068     		ldr	r0, [r2]	@ unaligned
 14909 186a 1860     		str	r0, [r3]	@ unaligned
 14910 186c 1279     		ldrb	r2, [r2, #4]
 14911 186e 1A71     		strb	r2, [r3, #4]
 14912              	.L602:
2155:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 14913              		.loc 1 2155 0
 14914 1870 07F11C03 		add	r3, r7, #28
 14915 1874 1846     		mov	r0, r3
 14916 1876 FFF7FEFF 		bl	strlen
 14917 187a 0346     		mov	r3, r0
 14918 187c 1A46     		mov	r2, r3
 14919 187e 07F11C03 		add	r3, r7, #28
 14920 1882 1344     		add	r3, r3, r2
 14921 1884 8F4A     		ldr	r2, .L629+24
 14922 1886 1D46     		mov	r5, r3
 14923 1888 1446     		mov	r4, r2
 14924 188a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14925 188c 2860     		str	r0, [r5]	@ unaligned
 14926 188e 6960     		str	r1, [r5, #4]	@ unaligned
 14927 1890 AA60     		str	r2, [r5, #8]	@ unaligned
 14928 1892 EB60     		str	r3, [r5, #12]	@ unaligned
 14929 1894 2378     		ldrb	r3, [r4]
 14930 1896 2B74     		strb	r3, [r5, #16]
2156:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 14931              		.loc 1 2156 0
 14932 1898 844A     		ldr	r2, .L629
 14933 189a D7F89430 		ldr	r3, [r7, #148]
 14934 189e 1344     		add	r3, r3, r2
 14935 18a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14936 18a2 1946     		mov	r1, r3
 14937 18a4 D7F88C20 		ldr	r2, [r7, #140]
 14938 18a8 0B46     		mov	r3, r1
 14939 18aa 9B00     		lsls	r3, r3, #2
 14940 18ac 0B44     		add	r3, r3, r1
 14941 18ae 1344     		add	r3, r3, r2
 14942 18b0 03F50173 		add	r3, r3, #516
 14943 18b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14944 18b6 002B     		cmp	r3, #0
 14945 18b8 0FD0     		beq	.L603
2157:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14946              		.loc 1 2157 0
 14947 18ba 07F11C03 		add	r3, r7, #28
 14948 18be 1846     		mov	r0, r3
 14949 18c0 FFF7FEFF 		bl	strlen
 14950 18c4 0346     		mov	r3, r0
 14951 18c6 1A46     		mov	r2, r3
 14952 18c8 07F11C03 		add	r3, r7, #28
 14953 18cc 1344     		add	r3, r3, r2
 14954 18ce 7A4A     		ldr	r2, .L629+12
 14955 18d0 1068     		ldr	r0, [r2]	@ unaligned
 14956 18d2 1860     		str	r0, [r3]	@ unaligned
 14957 18d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14958 18d6 9A80     		strh	r2, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 338


 14959 18d8 0EE0     		b	.L604
 14960              	.L603:
2158:..\src/command_processing.c ****                 else
2159:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14961              		.loc 1 2159 0
 14962 18da 07F11C03 		add	r3, r7, #28
 14963 18de 1846     		mov	r0, r3
 14964 18e0 FFF7FEFF 		bl	strlen
 14965 18e4 0346     		mov	r3, r0
 14966 18e6 1A46     		mov	r2, r3
 14967 18e8 07F11C03 		add	r3, r7, #28
 14968 18ec 1344     		add	r3, r3, r2
 14969 18ee 734A     		ldr	r2, .L629+16
 14970 18f0 1068     		ldr	r0, [r2]	@ unaligned
 14971 18f2 1860     		str	r0, [r3]	@ unaligned
 14972 18f4 1279     		ldrb	r2, [r2, #4]
 14973 18f6 1A71     		strb	r2, [r3, #4]
 14974              	.L604:
2160:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 14975              		.loc 1 2160 0
 14976 18f8 07F11C03 		add	r3, r7, #28
 14977 18fc 1846     		mov	r0, r3
 14978 18fe FFF7FEFF 		bl	strlen
 14979 1902 0346     		mov	r3, r0
 14980 1904 1A46     		mov	r2, r3
 14981 1906 07F11C03 		add	r3, r7, #28
 14982 190a 1344     		add	r3, r3, r2
 14983 190c 6E4A     		ldr	r2, .L629+28
 14984 190e 1C46     		mov	r4, r3
 14985 1910 1346     		mov	r3, r2
 14986 1912 07CB     		ldmia	r3!, {r0, r1, r2}
 14987 1914 2060     		str	r0, [r4]	@ unaligned
 14988 1916 6160     		str	r1, [r4, #4]	@ unaligned
 14989 1918 A260     		str	r2, [r4, #8]	@ unaligned
 14990 191a 1B88     		ldrh	r3, [r3]	@ unaligned
 14991 191c A381     		strh	r3, [r4, #12]	@ unaligned
2161:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 14992              		.loc 1 2161 0
 14993 191e 634A     		ldr	r2, .L629
 14994 1920 D7F89430 		ldr	r3, [r7, #148]
 14995 1924 1344     		add	r3, r3, r2
 14996 1926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14997 1928 1946     		mov	r1, r3
 14998 192a D7F88C20 		ldr	r2, [r7, #140]
 14999 192e 0B46     		mov	r3, r1
 15000 1930 9B00     		lsls	r3, r3, #2
 15001 1932 0B44     		add	r3, r3, r1
 15002 1934 1344     		add	r3, r3, r2
 15003 1936 03F20523 		addw	r3, r3, #517
 15004 193a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15005 193c 002B     		cmp	r3, #0
 15006 193e 0FD0     		beq	.L605
2162:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15007              		.loc 1 2162 0
 15008 1940 07F11C03 		add	r3, r7, #28
 15009 1944 1846     		mov	r0, r3
 15010 1946 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 339


 15011 194a 0346     		mov	r3, r0
 15012 194c 1A46     		mov	r2, r3
 15013 194e 07F11C03 		add	r3, r7, #28
 15014 1952 1344     		add	r3, r3, r2
 15015 1954 584A     		ldr	r2, .L629+12
 15016 1956 1068     		ldr	r0, [r2]	@ unaligned
 15017 1958 1860     		str	r0, [r3]	@ unaligned
 15018 195a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15019 195c 9A80     		strh	r2, [r3, #4]	@ unaligned
 15020 195e 0EE0     		b	.L606
 15021              	.L605:
2163:..\src/command_processing.c ****                 else
2164:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15022              		.loc 1 2164 0
 15023 1960 07F11C03 		add	r3, r7, #28
 15024 1964 1846     		mov	r0, r3
 15025 1966 FFF7FEFF 		bl	strlen
 15026 196a 0346     		mov	r3, r0
 15027 196c 1A46     		mov	r2, r3
 15028 196e 07F11C03 		add	r3, r7, #28
 15029 1972 1344     		add	r3, r3, r2
 15030 1974 514A     		ldr	r2, .L629+16
 15031 1976 1068     		ldr	r0, [r2]	@ unaligned
 15032 1978 1860     		str	r0, [r3]	@ unaligned
 15033 197a 1279     		ldrb	r2, [r2, #4]
 15034 197c 1A71     		strb	r2, [r3, #4]
 15035              	.L606:
2165:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 15036              		.loc 1 2165 0
 15037 197e 07F11C03 		add	r3, r7, #28
 15038 1982 1846     		mov	r0, r3
 15039 1984 FFF7FEFF 		bl	strlen
 15040 1988 0346     		mov	r3, r0
 15041 198a 1A46     		mov	r2, r3
 15042 198c 07F11C03 		add	r3, r7, #28
 15043 1990 1344     		add	r3, r3, r2
 15044 1992 4E4A     		ldr	r2, .L629+32
 15045 1994 1C46     		mov	r4, r3
 15046 1996 1346     		mov	r3, r2
 15047 1998 07CB     		ldmia	r3!, {r0, r1, r2}
 15048 199a 2060     		str	r0, [r4]	@ unaligned
 15049 199c 6160     		str	r1, [r4, #4]	@ unaligned
 15050 199e A260     		str	r2, [r4, #8]	@ unaligned
 15051 19a0 1A88     		ldrh	r2, [r3]	@ unaligned
 15052 19a2 9B78     		ldrb	r3, [r3, #2]
 15053 19a4 A281     		strh	r2, [r4, #12]	@ unaligned
 15054 19a6 A373     		strb	r3, [r4, #14]
2166:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 15055              		.loc 1 2166 0
 15056 19a8 404A     		ldr	r2, .L629
 15057 19aa D7F89430 		ldr	r3, [r7, #148]
 15058 19ae 1344     		add	r3, r3, r2
 15059 19b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15060 19b2 1946     		mov	r1, r3
 15061 19b4 D7F88C20 		ldr	r2, [r7, #140]
 15062 19b8 0B46     		mov	r3, r1
 15063 19ba 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 340


 15064 19bc 0B44     		add	r3, r3, r1
 15065 19be 1344     		add	r3, r3, r2
 15066 19c0 03F20623 		addw	r3, r3, #518
 15067 19c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15068 19c6 002B     		cmp	r3, #0
 15069 19c8 0FD0     		beq	.L607
2167:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15070              		.loc 1 2167 0
 15071 19ca 07F11C03 		add	r3, r7, #28
 15072 19ce 1846     		mov	r0, r3
 15073 19d0 FFF7FEFF 		bl	strlen
 15074 19d4 0346     		mov	r3, r0
 15075 19d6 1A46     		mov	r2, r3
 15076 19d8 07F11C03 		add	r3, r7, #28
 15077 19dc 1344     		add	r3, r3, r2
 15078 19de 364A     		ldr	r2, .L629+12
 15079 19e0 1068     		ldr	r0, [r2]	@ unaligned
 15080 19e2 1860     		str	r0, [r3]	@ unaligned
 15081 19e4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15082 19e6 9A80     		strh	r2, [r3, #4]	@ unaligned
 15083 19e8 0EE0     		b	.L608
 15084              	.L607:
2168:..\src/command_processing.c ****                 else
2169:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15085              		.loc 1 2169 0
 15086 19ea 07F11C03 		add	r3, r7, #28
 15087 19ee 1846     		mov	r0, r3
 15088 19f0 FFF7FEFF 		bl	strlen
 15089 19f4 0346     		mov	r3, r0
 15090 19f6 1A46     		mov	r2, r3
 15091 19f8 07F11C03 		add	r3, r7, #28
 15092 19fc 1344     		add	r3, r3, r2
 15093 19fe 2F4A     		ldr	r2, .L629+16
 15094 1a00 1068     		ldr	r0, [r2]	@ unaligned
 15095 1a02 1860     		str	r0, [r3]	@ unaligned
 15096 1a04 1279     		ldrb	r2, [r2, #4]
 15097 1a06 1A71     		strb	r2, [r3, #4]
 15098              	.L608:
2170:..\src/command_processing.c ****                      
2171:..\src/command_processing.c ****                 strcat(info_string, str);
 15099              		.loc 1 2171 0 discriminator 2
 15100 1a08 07F11C03 		add	r3, r7, #28
 15101 1a0c 1946     		mov	r1, r3
 15102 1a0e 7869     		ldr	r0, [r7, #20]
 15103 1a10 FFF7FEFF 		bl	strcat
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15104              		.loc 1 2141 0 discriminator 2
 15105 1a14 D7F89430 		ldr	r3, [r7, #148]
 15106 1a18 0133     		adds	r3, r3, #1
 15107 1a1a C7F89430 		str	r3, [r7, #148]
 15108              	.L598:
2141:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15109              		.loc 1 2141 0 is_stmt 0 discriminator 1
 15110 1a1e 2C4B     		ldr	r3, .L629+36
 15111 1a20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15112 1a22 1A46     		mov	r2, r3
 15113 1a24 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 341


 15114 1a28 9A42     		cmp	r2, r3
 15115 1a2a 3FF793AE 		bgt	.L609
2172:..\src/command_processing.c ****             }       
2173:..\src/command_processing.c ****             
2174:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15116              		.loc 1 2174 0 is_stmt 1
 15117 1a2e 7869     		ldr	r0, [r7, #20]
 15118 1a30 FFF7FEFF 		bl	strlen
 15119 1a34 0346     		mov	r3, r0
 15120 1a36 1A46     		mov	r2, r3
 15121 1a38 7B69     		ldr	r3, [r7, #20]
 15122 1a3a 1344     		add	r3, r3, r2
 15123 1a3c 254A     		ldr	r2, .L629+40
 15124 1a3e 1188     		ldrh	r1, [r2]	@ unaligned
 15125 1a40 9278     		ldrb	r2, [r2, #2]
 15126 1a42 1980     		strh	r1, [r3]	@ unaligned
 15127 1a44 9A70     		strb	r2, [r3, #2]
2175:..\src/command_processing.c ****           
2176:..\src/command_processing.c ****             IMU_reading_info(info_string);
 15128              		.loc 1 2176 0
 15129 1a46 7869     		ldr	r0, [r7, #20]
 15130 1a48 FFF7FEFF 		bl	IMU_reading_info
 15131              	.L597:
2177:..\src/command_processing.c ****         }
2178:..\src/command_processing.c ****         
2179:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15132              		.loc 1 2179 0
 15133 1a4c 7869     		ldr	r0, [r7, #20]
 15134 1a4e FFF7FEFF 		bl	strlen
 15135 1a52 0346     		mov	r3, r0
 15136 1a54 1A46     		mov	r2, r3
 15137 1a56 7B69     		ldr	r3, [r7, #20]
 15138 1a58 1344     		add	r3, r3, r2
 15139 1a5a 1E4A     		ldr	r2, .L629+40
 15140 1a5c 1188     		ldrh	r1, [r2]	@ unaligned
 15141 1a5e 9278     		ldrb	r2, [r2, #2]
 15142 1a60 1980     		strh	r1, [r3]	@ unaligned
 15143 1a62 9A70     		strb	r2, [r3, #2]
2180:..\src/command_processing.c **** 
2181:..\src/command_processing.c **** #ifdef GENERIC_FW   
2182:..\src/command_processing.c ****         int j;
2183:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2184:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2185:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2186:..\src/command_processing.c ****             strcat(info_string, str);
2187:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2188:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2189:..\src/command_processing.c ****                 strcat(info_string, str);
2190:..\src/command_processing.c ****             }
2191:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2192:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2193:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2194:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2195:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2196:..\src/command_processing.c ****                     strcat(info_string, str);
2197:..\src/command_processing.c ****                 }
2198:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 342


2199:..\src/command_processing.c ****             }
2200:..\src/command_processing.c ****         }
2201:..\src/command_processing.c **** #endif   
2202:..\src/command_processing.c ****         
2203:..\src/command_processing.c **** #ifdef MASTER_FW
2204:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2205:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2206:..\src/command_processing.c ****         else
2207:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2208:..\src/command_processing.c **** 
2209:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2210:..\src/command_processing.c ****         strcat(info_string, str);
2211:..\src/command_processing.c **** #endif
2212:..\src/command_processing.c **** 
2213:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 15144              		.loc 1 2213 0
 15145 1a64 1C4B     		ldr	r3, .L629+44
 15146 1a66 1B88     		ldrh	r3, [r3]
 15147 1a68 1A46     		mov	r2, r3
 15148 1a6a 1C4B     		ldr	r3, .L629+48
 15149 1a6c 1B88     		ldrh	r3, [r3]
 15150 1a6e D21A     		subs	r2, r2, r3
 15151 1a70 07F11C03 		add	r3, r7, #28
 15152 1a74 1A49     		ldr	r1, .L629+52
 15153 1a76 1846     		mov	r0, r3
 15154 1a78 FFF7FEFF 		bl	sprintf
2214:..\src/command_processing.c ****         strcat(info_string, str);
 15155              		.loc 1 2214 0
 15156 1a7c 07F11C03 		add	r3, r7, #28
 15157 1a80 1946     		mov	r1, r3
 15158 1a82 7869     		ldr	r0, [r7, #20]
 15159 1a84 FFF7FEFF 		bl	strcat
2215:..\src/command_processing.c ****   
2216:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 15160              		.loc 1 2216 0
 15161 1a88 7869     		ldr	r0, [r7, #20]
 15162 1a8a FFF7FEFF 		bl	strlen
 15163 1a8e 0346     		mov	r3, r0
 15164 1a90 1A46     		mov	r2, r3
 15165 1a92 7B69     		ldr	r3, [r7, #20]
 15166 1a94 1344     		add	r3, r3, r2
 15167 1a96 134A     		ldr	r2, .L629+56
 15168 1a98 1188     		ldrh	r1, [r2]	@ unaligned
 15169 1a9a 9278     		ldrb	r2, [r2, #2]
 15170 1a9c 1980     		strh	r1, [r3]	@ unaligned
 15171 1a9e 9A70     		strb	r2, [r3, #2]
 15172              	.L611:
 15173              	.LBE16:
2217:..\src/command_processing.c ****     }
2218:..\src/command_processing.c **** }
 15174              		.loc 1 2218 0
 15175 1aa0 00BF     		nop
 15176 1aa2 9C37     		adds	r7, r7, #156
 15177              		.cfi_def_cfa_offset 36
 15178 1aa4 BD46     		mov	sp, r7
 15179              		.cfi_def_cfa_register 13
 15180              		@ sp needed
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 343


 15181 1aa6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15182              	.L630:
 15183 1aaa 00BF     		.align	2
 15184              	.L629:
 15185 1aac 00000000 		.word	IMU_connected
 15186 1ab0 10160000 		.word	.LC216
 15187 1ab4 24160000 		.word	.LC217
 15188 1ab8 2C100000 		.word	.LC153
 15189 1abc 34100000 		.word	.LC154
 15190 1ac0 38160000 		.word	.LC218
 15191 1ac4 48160000 		.word	.LC219
 15192 1ac8 5C160000 		.word	.LC220
 15193 1acc 6C160000 		.word	.LC221
 15194 1ad0 00000000 		.word	N_IMU_Connected
 15195 1ad4 AC0E0000 		.word	.LC132
 15196 1ad8 00000000 		.word	timer_value0
 15197 1adc 00000000 		.word	timer_value
 15198 1ae0 7C160000 		.word	.LC222
 15199 1ae4 98160000 		.word	.LC223
 15200              		.cfi_endproc
 15201              	.LFE72:
 15202              		.size	prepare_generic_info, .-prepare_generic_info
 15203              		.section	.rodata
 15204              		.align	2
 15205              	.LC224:
 15206 169c 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 15206      41474520 
 15206      53544154 
 15206      49535449 
 15206      43530D0A 
 15207 16b1 000000   		.align	2
 15208              	.LC225:
 15209 16b4 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 15209      206F6620 
 15209      4857206D 
 15209      61696E74 
 15209      656E616E 
 15210 16df 00       		.align	2
 15211              	.LC226:
 15212 16e0 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 15212      206F6620 
 15212      75736167 
 15212      65207374 
 15212      61747320 
 15213 1713 0A00     		.ascii	"\012\000"
 15214 1715 000000   		.align	2
 15215              	.LC227:
 15216 1718 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 15216      20636865 
 15216      636B6564 
 15216      2054696D 
 15216      653A2025 
 15217 174b 0A00     		.ascii	"\012\000"
 15218 174d 000000   		.align	2
 15219              	.LC228:
 15220 1750 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 15220      74696F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 344


 15220      73206869 
 15220      73746F67 
 15220      72616D20 
 15221 176f 00       		.align	2
 15222              	.LC229:
 15223 1770 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 15223      2564205B 
 15223      25642D25 
 15223      645D3A20 
 15223      256C750D 
 15224 1786 0000     		.align	2
 15225              	.LC230:
 15226 1788 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 15226      656E7420 
 15226      68697374 
 15226      6F677261 
 15226      6D20286D 
 15227 17a2 0000     		.align	2
 15228              	.LC231:
 15229 17a4 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 15229      73686F6C 
 15229      64202564 
 15229      205B2564 
 15229      2D25645D 
 15230              		.align	2
 15231              	.LC232:
 15232 17c0 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 15232      61637469 
 15232      76617469 
 15232      6F6E7320 
 15232      636F756E 
 15233 17e2 0000     		.align	2
 15234              	.LC233:
 15235 17e4 52657374 		.ascii	"Rest position occurrences: %lu\000"
 15235      20706F73 
 15235      6974696F 
 15235      6E206F63 
 15235      63757272 
 15236 1803 00       		.align	2
 15237              	.LC234:
 15238 1804 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 15238      6520746F 
 15238      74616C20 
 15238      64697370 
 15238      6C616365 
 15239 182a 0000     		.align	2
 15240              	.LC235:
 15241 182c 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 15241      6C20706F 
 15241      77657220 
 15241      6F6E2074 
 15241      696D6520 
 15242 184b 00       		.align	2
 15243              	.LC236:
 15244 184c 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 15244      6C207265 
 15244      73742070 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 345


 15244      6F736974 
 15244      696F6E20 
 15245              		.section	.text.prepare_counter_info,"ax",%progbits
 15246              		.align	2
 15247              		.global	prepare_counter_info
 15248              		.thumb
 15249              		.thumb_func
 15250              		.type	prepare_counter_info, %function
 15251              	prepare_counter_info:
 15252              	.LFB73:
2219:..\src/command_processing.c **** 
2220:..\src/command_processing.c **** //==============================================================================
2221:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2222:..\src/command_processing.c **** //==============================================================================
2223:..\src/command_processing.c **** 
2224:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2225:..\src/command_processing.c **** {
 15253              		.loc 1 2225 0
 15254              		.cfi_startproc
 15255              		@ args = 0, pretend = 0, frame = 128
 15256              		@ frame_needed = 1, uses_anonymous_args = 0
 15257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 15258              		.cfi_def_cfa_offset 20
 15259              		.cfi_offset 4, -20
 15260              		.cfi_offset 5, -16
 15261              		.cfi_offset 6, -12
 15262              		.cfi_offset 7, -8
 15263              		.cfi_offset 14, -4
 15264 0002 A5B0     		sub	sp, sp, #148
 15265              		.cfi_def_cfa_offset 168
 15266 0004 04AF     		add	r7, sp, #16
 15267              		.cfi_def_cfa 7, 152
 15268 0006 7860     		str	r0, [r7, #4]
2226:..\src/command_processing.c ****     char str[100];  
2227:..\src/command_processing.c ****     int i;
2228:..\src/command_processing.c ****     int step;
2229:..\src/command_processing.c **** 
2230:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15269              		.loc 1 2230 0
 15270 0008 7D4B     		ldr	r3, .L637
 15271 000a BB67     		str	r3, [r7, #120]
2231:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 15272              		.loc 1 2231 0
 15273 000c BB6F     		ldr	r3, [r7, #120]
 15274 000e B033     		adds	r3, r3, #176
 15275 0010 7B67     		str	r3, [r7, #116]
2232:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 15276              		.loc 1 2232 0
 15277 0012 7B6F     		ldr	r3, [r7, #116]
 15278 0014 93F86030 		ldrb	r3, [r3, #96]
 15279 0018 87F87330 		strb	r3, [r7, #115]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 15280              		.loc 1 2234 0
 15281 001c 7868     		ldr	r0, [r7, #4]
 15282 001e FFF7FEFF 		bl	strlen
 15283 0022 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 346


 15284 0024 1A46     		mov	r2, r3
 15285 0026 7B68     		ldr	r3, [r7, #4]
 15286 0028 1344     		add	r3, r3, r2
 15287 002a 764A     		ldr	r2, .L637+4
 15288 002c 1D46     		mov	r5, r3
 15289 002e 1446     		mov	r4, r2
 15290 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15291 0032 2860     		str	r0, [r5]	@ unaligned
 15292 0034 6960     		str	r1, [r5, #4]	@ unaligned
 15293 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 15294 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 15295 003a 2068     		ldr	r0, [r4]	@ unaligned
 15296 003c 2861     		str	r0, [r5, #16]	@ unaligned
 15297 003e 2379     		ldrb	r3, [r4, #4]
 15298 0040 2B75     		strb	r3, [r5, #20]
2235:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15299              		.loc 1 2235 0
 15300 0042 7868     		ldr	r0, [r7, #4]
 15301 0044 FFF7FEFF 		bl	strlen
 15302 0048 0346     		mov	r3, r0
 15303 004a 1A46     		mov	r2, r3
 15304 004c 7B68     		ldr	r3, [r7, #4]
 15305 004e 1344     		add	r3, r3, r2
 15306 0050 6D4A     		ldr	r2, .L637+8
 15307 0052 1188     		ldrh	r1, [r2]	@ unaligned
 15308 0054 9278     		ldrb	r2, [r2, #2]
 15309 0056 1980     		strh	r1, [r3]	@ unaligned
 15310 0058 9A70     		strb	r2, [r3, #2]
2236:..\src/command_processing.c ****     
2237:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15311              		.loc 1 2237 0
 15312 005a BB6F     		ldr	r3, [r7, #120]
 15313 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15314 0060 1A46     		mov	r2, r3
 15315 0062 BB6F     		ldr	r3, [r7, #120]
 15316 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15317 0068 1946     		mov	r1, r3
 15318 006a BB6F     		ldr	r3, [r7, #120]
 15319 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15320 0070 07F10800 		add	r0, r7, #8
 15321 0074 0093     		str	r3, [sp]
 15322 0076 0B46     		mov	r3, r1
 15323 0078 6449     		ldr	r1, .L637+12
 15324 007a FFF7FEFF 		bl	sprintf
2238:..\src/command_processing.c ****     strcat(info_string, str);
 15325              		.loc 1 2238 0
 15326 007e 07F10803 		add	r3, r7, #8
 15327 0082 1946     		mov	r1, r3
 15328 0084 7868     		ldr	r0, [r7, #4]
 15329 0086 FFF7FEFF 		bl	strcat
2239:..\src/command_processing.c ****     
2240:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15330              		.loc 1 2240 0
 15331 008a BB6F     		ldr	r3, [r7, #120]
 15332 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15333 0090 1A46     		mov	r2, r3
 15334 0092 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 347


 15335 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15336 0098 1946     		mov	r1, r3
 15337 009a BB6F     		ldr	r3, [r7, #120]
 15338 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15339 00a0 07F10800 		add	r0, r7, #8
 15340 00a4 0093     		str	r3, [sp]
 15341 00a6 0B46     		mov	r3, r1
 15342 00a8 5949     		ldr	r1, .L637+16
 15343 00aa FFF7FEFF 		bl	sprintf
2241:..\src/command_processing.c ****     strcat(info_string, str);
 15344              		.loc 1 2241 0
 15345 00ae 07F10803 		add	r3, r7, #8
 15346 00b2 1946     		mov	r1, r3
 15347 00b4 7868     		ldr	r0, [r7, #4]
 15348 00b6 FFF7FEFF 		bl	strcat
2242:..\src/command_processing.c ****             
2243:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 15349              		.loc 1 2243 0
 15350 00ba BB6F     		ldr	r3, [r7, #120]
 15351 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 15352 00c0 1D46     		mov	r5, r3
 15353 00c2 BB6F     		ldr	r3, [r7, #120]
 15354 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 15355 00c8 1E46     		mov	r6, r3
 15356 00ca BB6F     		ldr	r3, [r7, #120]
 15357 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 15358 00d0 1A46     		mov	r2, r3
 15359 00d2 BB6F     		ldr	r3, [r7, #120]
 15360 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 15361 00d8 1946     		mov	r1, r3
 15362 00da BB6F     		ldr	r3, [r7, #120]
 15363 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 15364 00e0 1C46     		mov	r4, r3
 15365 00e2 BB6F     		ldr	r3, [r7, #120]
 15366 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 15367 00e8 07F10800 		add	r0, r7, #8
 15368 00ec 0393     		str	r3, [sp, #12]
 15369 00ee 0294     		str	r4, [sp, #8]
 15370 00f0 0191     		str	r1, [sp, #4]
 15371 00f2 0092     		str	r2, [sp]
 15372 00f4 3346     		mov	r3, r6
 15373 00f6 2A46     		mov	r2, r5
 15374 00f8 4649     		ldr	r1, .L637+20
 15375 00fa FFF7FEFF 		bl	sprintf
2244:..\src/command_processing.c ****     strcat(info_string, str);
 15376              		.loc 1 2244 0
 15377 00fe 07F10803 		add	r3, r7, #8
 15378 0102 1946     		mov	r1, r3
 15379 0104 7868     		ldr	r0, [r7, #4]
 15380 0106 FFF7FEFF 		bl	strcat
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 15381              		.loc 1 2246 0
 15382 010a 07F10803 		add	r3, r7, #8
 15383 010e 424A     		ldr	r2, .L637+24
 15384 0110 1C46     		mov	r4, r3
 15385 0112 1546     		mov	r5, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 348


 15386 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15387 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15388 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 15389 011c 07C4     		stmia	r4!, {r0, r1, r2}
 15390 011e 2380     		strh	r3, [r4]	@ movhi
 15391 0120 0234     		adds	r4, r4, #2
 15392 0122 1B0C     		lsrs	r3, r3, #16
 15393 0124 2370     		strb	r3, [r4]
2247:..\src/command_processing.c ****     strcat(info_string, str);
 15394              		.loc 1 2247 0
 15395 0126 07F10803 		add	r3, r7, #8
 15396 012a 1946     		mov	r1, r3
 15397 012c 7868     		ldr	r0, [r7, #4]
 15398 012e FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 15399              		.loc 1 2248 0
 15400 0132 7B6F     		ldr	r3, [r7, #116]
 15401 0134 996B     		ldr	r1, [r3, #56]
 15402 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 15403 013a B86F     		ldr	r0, [r7, #120]
 15404 013c 1346     		mov	r3, r2
 15405 013e 5B00     		lsls	r3, r3, #1
 15406 0140 1344     		add	r3, r3, r2
 15407 0142 1B01     		lsls	r3, r3, #4
 15408 0144 0344     		add	r3, r3, r0
 15409 0146 03F29513 		addw	r3, r3, #405
 15410 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15411 014c 41FA03F3 		asr	r3, r1, r3
 15412 0150 324A     		ldr	r2, .L637+28
 15413 0152 82FB0312 		smull	r1, r2, r2, r3
 15414 0156 9210     		asrs	r2, r2, #2
 15415 0158 DB17     		asrs	r3, r3, #31
 15416 015a D31A     		subs	r3, r2, r3
 15417 015c FB66     		str	r3, [r7, #108]
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15418              		.loc 1 2249 0
 15419 015e 0123     		movs	r3, #1
 15420 0160 FB67     		str	r3, [r7, #124]
 15421 0162 21E0     		b	.L632
 15422              	.L633:
2250:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 15423              		.loc 1 2250 0 discriminator 3
 15424 0164 FB6F     		ldr	r3, [r7, #124]
 15425 0166 013B     		subs	r3, r3, #1
 15426 0168 FA6E     		ldr	r2, [r7, #108]
 15427 016a 02FB03F3 		mul	r3, r2, r3
 15428 016e 5C1C     		adds	r4, r3, #1
 15429 0170 FB6E     		ldr	r3, [r7, #108]
 15430 0172 FA6F     		ldr	r2, [r7, #124]
 15431 0174 02FB03F3 		mul	r3, r2, r3
 15432 0178 FA6F     		ldr	r2, [r7, #124]
 15433 017a 511E     		subs	r1, r2, #1
 15434 017c BA6F     		ldr	r2, [r7, #120]
 15435 017e 0631     		adds	r1, r1, #6
 15436 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15437 0184 07F10800 		add	r0, r7, #8
 15438 0188 0192     		str	r2, [sp, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 349


 15439 018a 0093     		str	r3, [sp]
 15440 018c 2346     		mov	r3, r4
 15441 018e FA6F     		ldr	r2, [r7, #124]
 15442 0190 2349     		ldr	r1, .L637+32
 15443 0192 FFF7FEFF 		bl	sprintf
2251:..\src/command_processing.c ****         strcat(info_string, str);
 15444              		.loc 1 2251 0 discriminator 3
 15445 0196 07F10803 		add	r3, r7, #8
 15446 019a 1946     		mov	r1, r3
 15447 019c 7868     		ldr	r0, [r7, #4]
 15448 019e FFF7FEFF 		bl	strcat
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15449              		.loc 1 2249 0 discriminator 3
 15450 01a2 FB6F     		ldr	r3, [r7, #124]
 15451 01a4 0133     		adds	r3, r3, #1
 15452 01a6 FB67     		str	r3, [r7, #124]
 15453              	.L632:
2249:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15454              		.loc 1 2249 0 is_stmt 0 discriminator 1
 15455 01a8 FB6F     		ldr	r3, [r7, #124]
 15456 01aa 0A2B     		cmp	r3, #10
 15457 01ac DADD     		ble	.L633
2252:..\src/command_processing.c ****     }
2253:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15458              		.loc 1 2253 0 is_stmt 1
 15459 01ae 7868     		ldr	r0, [r7, #4]
 15460 01b0 FFF7FEFF 		bl	strlen
 15461 01b4 0346     		mov	r3, r0
 15462 01b6 1A46     		mov	r2, r3
 15463 01b8 7B68     		ldr	r3, [r7, #4]
 15464 01ba 1344     		add	r3, r3, r2
 15465 01bc 124A     		ldr	r2, .L637+8
 15466 01be 1188     		ldrh	r1, [r2]	@ unaligned
 15467 01c0 9278     		ldrb	r2, [r2, #2]
 15468 01c2 1980     		strh	r1, [r3]	@ unaligned
 15469 01c4 9A70     		strb	r2, [r3, #2]
2254:..\src/command_processing.c ****     
2255:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 15470              		.loc 1 2255 0
 15471 01c6 07F10803 		add	r3, r7, #8
 15472 01ca 164A     		ldr	r2, .L637+36
 15473 01cc 1C46     		mov	r4, r3
 15474 01ce 1546     		mov	r5, r2
 15475 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15476 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15477 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 15478 01d8 03C4     		stmia	r4!, {r0, r1}
 15479 01da 2280     		strh	r2, [r4]	@ movhi
2256:..\src/command_processing.c ****     strcat(info_string, str);
 15480              		.loc 1 2256 0
 15481 01dc 07F10803 		add	r3, r7, #8
 15482 01e0 1946     		mov	r1, r3
 15483 01e2 7868     		ldr	r0, [r7, #4]
 15484 01e4 FFF7FEFF 		bl	strcat
2257:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 15485              		.loc 1 2257 0
 15486 01e8 7B6F     		ldr	r3, [r7, #116]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 350


 15487 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 15488 01ee 002B     		cmp	r3, #0
 15489 01f0 00DA     		bge	.L634
 15490 01f2 0333     		adds	r3, r3, #3
 15491              	.L634:
 15492 01f4 9B10     		asrs	r3, r3, #2
 15493 01f6 1BB2     		sxth	r3, r3
 15494 01f8 FB66     		str	r3, [r7, #108]
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15495              		.loc 1 2258 0
 15496 01fa 0123     		movs	r3, #1
 15497 01fc FB67     		str	r3, [r7, #124]
 15498 01fe 34E0     		b	.L635
 15499              	.L638:
 15500              		.align	2
 15501              	.L637:
 15502 0200 00000000 		.word	g_mem
 15503 0204 9C160000 		.word	.LC224
 15504 0208 AC0E0000 		.word	.LC132
 15505 020c B4160000 		.word	.LC225
 15506 0210 E0160000 		.word	.LC226
 15507 0214 18170000 		.word	.LC227
 15508 0218 50170000 		.word	.LC228
 15509 021c 67666666 		.word	1717986919
 15510 0220 70170000 		.word	.LC229
 15511 0224 88170000 		.word	.LC230
 15512              	.L636:
2259:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 15513              		.loc 1 2259 0 discriminator 3
 15514 0228 FB6F     		ldr	r3, [r7, #124]
 15515 022a 013B     		subs	r3, r3, #1
 15516 022c FA6E     		ldr	r2, [r7, #108]
 15517 022e 02FB03F4 		mul	r4, r2, r3
 15518 0232 FB6E     		ldr	r3, [r7, #108]
 15519 0234 FA6F     		ldr	r2, [r7, #124]
 15520 0236 02FB03F3 		mul	r3, r2, r3
 15521 023a FA6F     		ldr	r2, [r7, #124]
 15522 023c 511E     		subs	r1, r2, #1
 15523 023e BA6F     		ldr	r2, [r7, #120]
 15524 0240 1031     		adds	r1, r1, #16
 15525 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15526 0246 07F10800 		add	r0, r7, #8
 15527 024a 0192     		str	r2, [sp, #4]
 15528 024c 0093     		str	r3, [sp]
 15529 024e 2346     		mov	r3, r4
 15530 0250 FA6F     		ldr	r2, [r7, #124]
 15531 0252 5149     		ldr	r1, .L639
 15532 0254 FFF7FEFF 		bl	sprintf
2260:..\src/command_processing.c ****         strcat(info_string, str);
 15533              		.loc 1 2260 0 discriminator 3
 15534 0258 07F10803 		add	r3, r7, #8
 15535 025c 1946     		mov	r1, r3
 15536 025e 7868     		ldr	r0, [r7, #4]
 15537 0260 FFF7FEFF 		bl	strcat
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15538              		.loc 1 2258 0 discriminator 3
 15539 0264 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 351


 15540 0266 0133     		adds	r3, r3, #1
 15541 0268 FB67     		str	r3, [r7, #124]
 15542              	.L635:
2258:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15543              		.loc 1 2258 0 is_stmt 0 discriminator 1
 15544 026a FB6F     		ldr	r3, [r7, #124]
 15545 026c 042B     		cmp	r3, #4
 15546 026e DBDD     		ble	.L636
2261:..\src/command_processing.c ****     }
2262:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15547              		.loc 1 2262 0 is_stmt 1
 15548 0270 7868     		ldr	r0, [r7, #4]
 15549 0272 FFF7FEFF 		bl	strlen
 15550 0276 0346     		mov	r3, r0
 15551 0278 1A46     		mov	r2, r3
 15552 027a 7B68     		ldr	r3, [r7, #4]
 15553 027c 1344     		add	r3, r3, r2
 15554 027e 474A     		ldr	r2, .L639+4
 15555 0280 1188     		ldrh	r1, [r2]	@ unaligned
 15556 0282 9278     		ldrb	r2, [r2, #2]
 15557 0284 1980     		strh	r1, [r3]	@ unaligned
 15558 0286 9A70     		strb	r2, [r3, #2]
2263:..\src/command_processing.c ****             
2264:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 15559              		.loc 1 2264 0
 15560 0288 BB6F     		ldr	r3, [r7, #120]
 15561 028a 1A69     		ldr	r2, [r3, #16]
 15562 028c BB6F     		ldr	r3, [r7, #120]
 15563 028e 5B69     		ldr	r3, [r3, #20]
 15564 0290 07F10800 		add	r0, r7, #8
 15565 0294 4249     		ldr	r1, .L639+8
 15566 0296 FFF7FEFF 		bl	sprintf
2265:..\src/command_processing.c ****     strcat(info_string, str);
 15567              		.loc 1 2265 0
 15568 029a 07F10803 		add	r3, r7, #8
 15569 029e 1946     		mov	r1, r3
 15570 02a0 7868     		ldr	r0, [r7, #4]
 15571 02a2 FFF7FEFF 		bl	strcat
2266:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15572              		.loc 1 2266 0
 15573 02a6 7868     		ldr	r0, [r7, #4]
 15574 02a8 FFF7FEFF 		bl	strlen
 15575 02ac 0346     		mov	r3, r0
 15576 02ae 1A46     		mov	r2, r3
 15577 02b0 7B68     		ldr	r3, [r7, #4]
 15578 02b2 1344     		add	r3, r3, r2
 15579 02b4 394A     		ldr	r2, .L639+4
 15580 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 15581 02b8 9278     		ldrb	r2, [r2, #2]
 15582 02ba 1980     		strh	r1, [r3]	@ unaligned
 15583 02bc 9A70     		strb	r2, [r3, #2]
2267:..\src/command_processing.c ****     
2268:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 15584              		.loc 1 2268 0
 15585 02be BB6F     		ldr	r3, [r7, #120]
 15586 02c0 1A6D     		ldr	r2, [r3, #80]
 15587 02c2 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 352


 15588 02c6 3749     		ldr	r1, .L639+12
 15589 02c8 1846     		mov	r0, r3
 15590 02ca FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****     strcat(info_string, str);
 15591              		.loc 1 2269 0
 15592 02ce 07F10803 		add	r3, r7, #8
 15593 02d2 1946     		mov	r1, r3
 15594 02d4 7868     		ldr	r0, [r7, #4]
 15595 02d6 FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15596              		.loc 1 2270 0
 15597 02da 7868     		ldr	r0, [r7, #4]
 15598 02dc FFF7FEFF 		bl	strlen
 15599 02e0 0346     		mov	r3, r0
 15600 02e2 1A46     		mov	r2, r3
 15601 02e4 7B68     		ldr	r3, [r7, #4]
 15602 02e6 1344     		add	r3, r3, r2
 15603 02e8 2C4A     		ldr	r2, .L639+4
 15604 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 15605 02ec 9278     		ldrb	r2, [r2, #2]
 15606 02ee 1980     		strh	r1, [r3]	@ unaligned
 15607 02f0 9A70     		strb	r2, [r3, #2]
2271:..\src/command_processing.c ****     
2272:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 15608              		.loc 1 2272 0
 15609 02f2 BB6F     		ldr	r3, [r7, #120]
 15610 02f4 5A6D     		ldr	r2, [r3, #84]
 15611 02f6 07F10803 		add	r3, r7, #8
 15612 02fa 2B49     		ldr	r1, .L639+16
 15613 02fc 1846     		mov	r0, r3
 15614 02fe FFF7FEFF 		bl	sprintf
2273:..\src/command_processing.c ****     strcat(info_string, str);
 15615              		.loc 1 2273 0
 15616 0302 07F10803 		add	r3, r7, #8
 15617 0306 1946     		mov	r1, r3
 15618 0308 7868     		ldr	r0, [r7, #4]
 15619 030a FFF7FEFF 		bl	strcat
2274:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15620              		.loc 1 2274 0
 15621 030e 7868     		ldr	r0, [r7, #4]
 15622 0310 FFF7FEFF 		bl	strlen
 15623 0314 0346     		mov	r3, r0
 15624 0316 1A46     		mov	r2, r3
 15625 0318 7B68     		ldr	r3, [r7, #4]
 15626 031a 1344     		add	r3, r3, r2
 15627 031c 1F4A     		ldr	r2, .L639+4
 15628 031e 1188     		ldrh	r1, [r2]	@ unaligned
 15629 0320 9278     		ldrb	r2, [r2, #2]
 15630 0322 1980     		strh	r1, [r3]	@ unaligned
 15631 0324 9A70     		strb	r2, [r3, #2]
2275:..\src/command_processing.c ****     
2276:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 15632              		.loc 1 2276 0
 15633 0326 BB6F     		ldr	r3, [r7, #120]
 15634 0328 9A6D     		ldr	r2, [r3, #88]
 15635 032a 07F10803 		add	r3, r7, #8
 15636 032e 1F49     		ldr	r1, .L639+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 353


 15637 0330 1846     		mov	r0, r3
 15638 0332 FFF7FEFF 		bl	sprintf
2277:..\src/command_processing.c ****     strcat(info_string, str);
 15639              		.loc 1 2277 0
 15640 0336 07F10803 		add	r3, r7, #8
 15641 033a 1946     		mov	r1, r3
 15642 033c 7868     		ldr	r0, [r7, #4]
 15643 033e FFF7FEFF 		bl	strcat
2278:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15644              		.loc 1 2278 0
 15645 0342 7868     		ldr	r0, [r7, #4]
 15646 0344 FFF7FEFF 		bl	strlen
 15647 0348 0346     		mov	r3, r0
 15648 034a 1A46     		mov	r2, r3
 15649 034c 7B68     		ldr	r3, [r7, #4]
 15650 034e 1344     		add	r3, r3, r2
 15651 0350 124A     		ldr	r2, .L639+4
 15652 0352 1188     		ldrh	r1, [r2]	@ unaligned
 15653 0354 9278     		ldrb	r2, [r2, #2]
 15654 0356 1980     		strh	r1, [r3]	@ unaligned
 15655 0358 9A70     		strb	r2, [r3, #2]
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 15656              		.loc 1 2280 0
 15657 035a BB6F     		ldr	r3, [r7, #120]
 15658 035c DA6D     		ldr	r2, [r3, #92]
 15659 035e 07F10803 		add	r3, r7, #8
 15660 0362 1349     		ldr	r1, .L639+24
 15661 0364 1846     		mov	r0, r3
 15662 0366 FFF7FEFF 		bl	sprintf
2281:..\src/command_processing.c ****     strcat(info_string, str);
 15663              		.loc 1 2281 0
 15664 036a 07F10803 		add	r3, r7, #8
 15665 036e 1946     		mov	r1, r3
 15666 0370 7868     		ldr	r0, [r7, #4]
 15667 0372 FFF7FEFF 		bl	strcat
2282:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15668              		.loc 1 2282 0
 15669 0376 7868     		ldr	r0, [r7, #4]
 15670 0378 FFF7FEFF 		bl	strlen
 15671 037c 0346     		mov	r3, r0
 15672 037e 1A46     		mov	r2, r3
 15673 0380 7B68     		ldr	r3, [r7, #4]
 15674 0382 1344     		add	r3, r3, r2
 15675 0384 054A     		ldr	r2, .L639+4
 15676 0386 1188     		ldrh	r1, [r2]	@ unaligned
 15677 0388 9278     		ldrb	r2, [r2, #2]
 15678 038a 1980     		strh	r1, [r3]	@ unaligned
 15679 038c 9A70     		strb	r2, [r3, #2]
2283:..\src/command_processing.c **** 
2284:..\src/command_processing.c **** }
 15680              		.loc 1 2284 0
 15681 038e 00BF     		nop
 15682 0390 8437     		adds	r7, r7, #132
 15683              		.cfi_def_cfa_offset 20
 15684 0392 BD46     		mov	sp, r7
 15685              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 354


 15686              		@ sp needed
 15687 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 15688              	.L640:
 15689 0396 00BF     		.align	2
 15690              	.L639:
 15691 0398 A4170000 		.word	.LC231
 15692 039c AC0E0000 		.word	.LC132
 15693 03a0 C0170000 		.word	.LC232
 15694 03a4 E4170000 		.word	.LC233
 15695 03a8 04180000 		.word	.LC234
 15696 03ac 2C180000 		.word	.LC235
 15697 03b0 4C180000 		.word	.LC236
 15698              		.cfi_endproc
 15699              	.LFE73:
 15700              		.size	prepare_counter_info, .-prepare_counter_info
 15701              		.section	.rodata
 15702              		.align	2
 15703              	.LC237:
 15704 1870 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 15704      77617265 
 15704      20766572 
 15704      73696F6E 
 15704      3A202573 
 15705 1887 00       		.align	2
 15706              	.LC238:
 15707 1888 506F7369 		.ascii	"Position PID: \000"
 15707      74696F6E 
 15707      20504944 
 15707      3A2000
 15708 1897 00       		.align	2
 15709              	.LC239:
 15710 1898 43757272 		.ascii	"Current PID: \000"
 15710      656E7420 
 15710      5049443A 
 15710      2000
 15711 18a6 0000     		.align	2
 15712              	.LC240:
 15713 18a8 5265736F 		.ascii	"Resolutions: \000"
 15713      6C757469 
 15713      6F6E733A 
 15713      2000
 15714 18b6 0000     		.align	2
 15715              	.LC241:
 15716 18b8 4F666673 		.ascii	"Offsets: \000"
 15716      6574733A 
 15716      2000
 15717 18c2 0000     		.align	2
 15718              	.LC242:
 15719 18c4 4D756C74 		.ascii	"Multipliers: \000"
 15719      69706C69 
 15719      6572733A 
 15719      2000
 15720 18d2 0000     		.align	2
 15721              	.LC243:
 15722 18d4 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 15722      656E7420 
 15722      6C6F6F6B 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 355


 15722      75702074 
 15722      61626C65 
 15723 1907 662C2025 		.ascii	"f, %f\015\012\000"
 15723      660D0A00 
 15724 190f 00       		.align	2
 15725              	.LC244:
 15726 1910 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 15726      74696F6E 
 15726      206C696D 
 15726      69742061 
 15726      63746976 
 15727              		.align	2
 15728              	.LC245:
 15729 192c 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 15729      74696F6E 
 15729      206C696D 
 15729      6974733A 
 15729      20696E66 
 15730              		.section	.text.prepare_SD_param_info,"ax",%progbits
 15731              		.align	2
 15732              		.global	prepare_SD_param_info
 15733              		.thumb
 15734              		.thumb_func
 15735              		.type	prepare_SD_param_info, %function
 15736              	prepare_SD_param_info:
 15737              	.LFB74:
2285:..\src/command_processing.c **** 
2286:..\src/command_processing.c **** //==============================================================================
2287:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2288:..\src/command_processing.c **** //==============================================================================
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2291:..\src/command_processing.c **** {
 15738              		.loc 1 2291 0
 15739              		.cfi_startproc
 15740              		@ args = 0, pretend = 0, frame = 152
 15741              		@ frame_needed = 1, uses_anonymous_args = 0
 15742 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 15743              		.cfi_def_cfa_offset 36
 15744              		.cfi_offset 4, -36
 15745              		.cfi_offset 5, -32
 15746              		.cfi_offset 6, -28
 15747              		.cfi_offset 7, -24
 15748              		.cfi_offset 8, -20
 15749              		.cfi_offset 9, -16
 15750              		.cfi_offset 10, -12
 15751              		.cfi_offset 11, -8
 15752              		.cfi_offset 14, -4
 15753 0004 B1B0     		sub	sp, sp, #196
 15754              		.cfi_def_cfa_offset 232
 15755 0006 0AAF     		add	r7, sp, #40
 15756              		.cfi_def_cfa 7, 192
 15757 0008 7861     		str	r0, [r7, #20]
2292:..\src/command_processing.c ****     char str[100];  
2293:..\src/command_processing.c ****     int i;
2294:..\src/command_processing.c ****            
2295:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 356


2296:..\src/command_processing.c ****     
2297:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15758              		.loc 1 2297 0
 15759 000a AB4B     		ldr	r3, .L705
 15760 000c C7F88C30 		str	r3, [r7, #140]
2298:..\src/command_processing.c ****         
2299:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 15761              		.loc 1 2299 0
 15762 0010 AA4A     		ldr	r2, .L705+4
 15763 0012 AB49     		ldr	r1, .L705+8
 15764 0014 7869     		ldr	r0, [r7, #20]
 15765 0016 FFF7FEFF 		bl	sprintf
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 15766              		.loc 1 2301 0
 15767 001a D7F88C30 		ldr	r3, [r7, #140]
 15768 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 15769 0022 1A46     		mov	r2, r3
 15770 0024 07F11C03 		add	r3, r7, #28
 15771 0028 A649     		ldr	r1, .L705+12
 15772 002a 1846     		mov	r0, r3
 15773 002c FFF7FEFF 		bl	sprintf
2302:..\src/command_processing.c ****     strcat(info_string, str);
 15774              		.loc 1 2302 0
 15775 0030 07F11C03 		add	r3, r7, #28
 15776 0034 1946     		mov	r1, r3
 15777 0036 7869     		ldr	r0, [r7, #20]
 15778 0038 FFF7FEFF 		bl	strcat
2303:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 15779              		.loc 1 2303 0
 15780 003c D7F88C30 		ldr	r3, [r7, #140]
 15781 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 15782 0044 002B     		cmp	r3, #0
 15783 0046 02D0     		beq	.L643
 15784 0048 012B     		cmp	r3, #1
 15785 004a 15D0     		beq	.L644
 15786 004c 26E0     		b	.L642
 15787              	.L643:
2304:..\src/command_processing.c ****         case RIGHT_HAND:
2305:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 15788              		.loc 1 2305 0
 15789 004e 7869     		ldr	r0, [r7, #20]
 15790 0050 FFF7FEFF 		bl	strlen
 15791 0054 0346     		mov	r3, r0
 15792 0056 1A46     		mov	r2, r3
 15793 0058 7B69     		ldr	r3, [r7, #20]
 15794 005a 1344     		add	r3, r3, r2
 15795 005c 9A4A     		ldr	r2, .L705+16
 15796 005e 1D46     		mov	r5, r3
 15797 0060 1446     		mov	r4, r2
 15798 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15799 0064 2860     		str	r0, [r5]	@ unaligned
 15800 0066 6960     		str	r1, [r5, #4]	@ unaligned
 15801 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 15802 006a EB60     		str	r3, [r5, #12]	@ unaligned
 15803 006c 2388     		ldrh	r3, [r4]	@ unaligned
 15804 006e A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 357


 15805 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 15806 0072 1346     		mov	r3, r2
 15807 0074 AB74     		strb	r3, [r5, #18]
2306:..\src/command_processing.c ****             break;
 15808              		.loc 1 2306 0
 15809 0076 11E0     		b	.L642
 15810              	.L644:
2307:..\src/command_processing.c ****         case LEFT_HAND:
2308:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 15811              		.loc 1 2308 0
 15812 0078 7869     		ldr	r0, [r7, #20]
 15813 007a FFF7FEFF 		bl	strlen
 15814 007e 0346     		mov	r3, r0
 15815 0080 1A46     		mov	r2, r3
 15816 0082 7B69     		ldr	r3, [r7, #20]
 15817 0084 1344     		add	r3, r3, r2
 15818 0086 914A     		ldr	r2, .L705+20
 15819 0088 1D46     		mov	r5, r3
 15820 008a 1446     		mov	r4, r2
 15821 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15822 008e 2860     		str	r0, [r5]	@ unaligned
 15823 0090 6960     		str	r1, [r5, #4]	@ unaligned
 15824 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 15825 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 15826 0096 2388     		ldrh	r3, [r4]	@ unaligned
 15827 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2309:..\src/command_processing.c ****             break;
 15828              		.loc 1 2309 0
 15829 009a 00BF     		nop
 15830              	.L642:
2310:..\src/command_processing.c ****     }
2311:..\src/command_processing.c **** 
2312:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15831              		.loc 1 2312 0
 15832 009c D7F88C30 		ldr	r3, [r7, #140]
 15833 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15834 00a4 1A46     		mov	r2, r3
 15835 00a6 D7F88C30 		ldr	r3, [r7, #140]
 15836 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15837 00ae 1946     		mov	r1, r3
 15838 00b0 D7F88C30 		ldr	r3, [r7, #140]
 15839 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15840 00b8 07F11C00 		add	r0, r7, #28
 15841 00bc 0093     		str	r3, [sp]
 15842 00be 0B46     		mov	r3, r1
 15843 00c0 8349     		ldr	r1, .L705+24
 15844 00c2 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****     strcat(info_string, str);
 15845              		.loc 1 2313 0
 15846 00c6 07F11C03 		add	r3, r7, #28
 15847 00ca 1946     		mov	r1, r3
 15848 00cc 7869     		ldr	r0, [r7, #20]
 15849 00ce FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****     
2315:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15850              		.loc 1 2315 0
 15851 00d2 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 358


 15852 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15853 00da 1A46     		mov	r2, r3
 15854 00dc D7F88C30 		ldr	r3, [r7, #140]
 15855 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15856 00e4 1946     		mov	r1, r3
 15857 00e6 D7F88C30 		ldr	r3, [r7, #140]
 15858 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15859 00ee 07F11C00 		add	r0, r7, #28
 15860 00f2 0093     		str	r3, [sp]
 15861 00f4 0B46     		mov	r3, r1
 15862 00f6 7749     		ldr	r1, .L705+28
 15863 00f8 FFF7FEFF 		bl	sprintf
2316:..\src/command_processing.c ****     strcat(info_string, str);
 15864              		.loc 1 2316 0
 15865 00fc 07F11C03 		add	r3, r7, #28
 15866 0100 1946     		mov	r1, r3
 15867 0102 7869     		ldr	r0, [r7, #20]
 15868 0104 FFF7FEFF 		bl	strcat
 15869              	.LBB19:
2317:..\src/command_processing.c ****     
2318:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 15870              		.loc 1 2318 0
 15871 0108 0023     		movs	r3, #0
 15872 010a 87F89330 		strb	r3, [r7, #147]
 15873 010e 00F03CBE 		b	.L645
 15874              	.L688:
 15875              	.LBB20:
2319:..\src/command_processing.c ****             
2320:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 15876              		.loc 1 2320 0
 15877 0112 97F89330 		ldrb	r3, [r7, #147]
 15878 0116 87F88B30 		strb	r3, [r7, #139]
2321:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 15879              		.loc 1 2321 0
 15880 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 15881 011e 1346     		mov	r3, r2
 15882 0120 DB00     		lsls	r3, r3, #3
 15883 0122 9B1A     		subs	r3, r3, r2
 15884 0124 1B01     		lsls	r3, r3, #4
 15885 0126 B033     		adds	r3, r3, #176
 15886 0128 D7F88C20 		ldr	r2, [r7, #140]
 15887 012c 1344     		add	r3, r3, r2
 15888 012e C7F88430 		str	r3, [r7, #132]
2322:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 15889              		.loc 1 2322 0
 15890 0132 D7F88430 		ldr	r3, [r7, #132]
 15891 0136 93F86030 		ldrb	r3, [r3, #96]
 15892 013a 87F88330 		strb	r3, [r7, #131]
2323:..\src/command_processing.c ****               
2324:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 15893              		.loc 1 2324 0
 15894 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15895 0142 5A1C     		adds	r2, r3, #1
 15896 0144 07F11C03 		add	r3, r7, #28
 15897 0148 6349     		ldr	r1, .L705+32
 15898 014a 1846     		mov	r0, r3
 15899 014c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 359


2325:..\src/command_processing.c ****         strcat(info_string, str);
 15900              		.loc 1 2325 0
 15901 0150 07F11C03 		add	r3, r7, #28
 15902 0154 1946     		mov	r1, r3
 15903 0156 7869     		ldr	r0, [r7, #20]
 15904 0158 FFF7FEFF 		bl	strcat
2326:..\src/command_processing.c ****                     
2327:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 15905              		.loc 1 2327 0
 15906 015c 7869     		ldr	r0, [r7, #20]
 15907 015e FFF7FEFF 		bl	strlen
 15908 0162 0346     		mov	r3, r0
 15909 0164 1A46     		mov	r2, r3
 15910 0166 7B69     		ldr	r3, [r7, #20]
 15911 0168 1344     		add	r3, r3, r2
 15912 016a 5C4A     		ldr	r2, .L705+36
 15913 016c 1D46     		mov	r5, r3
 15914 016e 1446     		mov	r4, r2
 15915 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15916 0172 2860     		str	r0, [r5]	@ unaligned
 15917 0174 6960     		str	r1, [r5, #4]	@ unaligned
 15918 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 15919 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 15920 017a 03CC     		ldmia	r4!, {r0, r1}
 15921 017c 2861     		str	r0, [r5, #16]	@ unaligned
 15922 017e 6961     		str	r1, [r5, #20]	@ unaligned
 15923 0180 2388     		ldrh	r3, [r4]	@ unaligned
 15924 0182 A278     		ldrb	r2, [r4, #2]
 15925 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 15926 0186 1346     		mov	r3, r2
 15927 0188 AB76     		strb	r3, [r5, #26]
2328:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 15928              		.loc 1 2328 0
 15929 018a D7F88430 		ldr	r3, [r7, #132]
 15930 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15931 0192 012B     		cmp	r3, #1
 15932 0194 0CD1     		bne	.L646
2329:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 15933              		.loc 1 2329 0
 15934 0196 7869     		ldr	r0, [r7, #20]
 15935 0198 FFF7FEFF 		bl	strlen
 15936 019c 0346     		mov	r3, r0
 15937 019e 1A46     		mov	r2, r3
 15938 01a0 7B69     		ldr	r3, [r7, #20]
 15939 01a2 1344     		add	r3, r3, r2
 15940 01a4 4E4A     		ldr	r2, .L705+40
 15941 01a6 1068     		ldr	r0, [r2]	@ unaligned
 15942 01a8 1860     		str	r0, [r3]	@ unaligned
 15943 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15944 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 15945 01ae 0BE0     		b	.L647
 15946              	.L646:
2330:..\src/command_processing.c ****         else
2331:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 15947              		.loc 1 2331 0
 15948 01b0 7869     		ldr	r0, [r7, #20]
 15949 01b2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 360


 15950 01b6 0346     		mov	r3, r0
 15951 01b8 1A46     		mov	r2, r3
 15952 01ba 7B69     		ldr	r3, [r7, #20]
 15953 01bc 1344     		add	r3, r3, r2
 15954 01be 494A     		ldr	r2, .L705+44
 15955 01c0 1068     		ldr	r0, [r2]	@ unaligned
 15956 01c2 1860     		str	r0, [r3]	@ unaligned
 15957 01c4 1279     		ldrb	r2, [r2, #4]
 15958 01c6 1A71     		strb	r2, [r3, #4]
 15959              	.L647:
2332:..\src/command_processing.c ****         
2333:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15960              		.loc 1 2333 0
 15961 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15962 01cc 464A     		ldr	r2, .L705+48
 15963 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15964 01d0 1A46     		mov	r2, r3
 15965 01d2 07F11C03 		add	r3, r7, #28
 15966 01d6 4549     		ldr	r1, .L705+52
 15967 01d8 1846     		mov	r0, r3
 15968 01da FFF7FEFF 		bl	sprintf
2334:..\src/command_processing.c ****         strcat(info_string, str);
 15969              		.loc 1 2334 0
 15970 01de 07F11C03 		add	r3, r7, #28
 15971 01e2 1946     		mov	r1, r3
 15972 01e4 7869     		ldr	r0, [r7, #20]
 15973 01e6 FFF7FEFF 		bl	strcat
2335:..\src/command_processing.c **** 
2336:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 15974              		.loc 1 2336 0
 15975 01ea 7869     		ldr	r0, [r7, #20]
 15976 01ec FFF7FEFF 		bl	strlen
 15977 01f0 0346     		mov	r3, r0
 15978 01f2 1A46     		mov	r2, r3
 15979 01f4 7B69     		ldr	r3, [r7, #20]
 15980 01f6 1344     		add	r3, r3, r2
 15981 01f8 3D4A     		ldr	r2, .L705+56
 15982 01fa 1C46     		mov	r4, r3
 15983 01fc 1346     		mov	r3, r2
 15984 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 15985 0200 2060     		str	r0, [r4]	@ unaligned
 15986 0202 6160     		str	r1, [r4, #4]	@ unaligned
 15987 0204 A260     		str	r2, [r4, #8]	@ unaligned
 15988 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 15989 0208 9B78     		ldrb	r3, [r3, #2]
 15990 020a A281     		strh	r2, [r4, #12]	@ unaligned
 15991 020c A373     		strb	r3, [r4, #14]
2337:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15992              		.loc 1 2337 0
 15993 020e D7F88430 		ldr	r3, [r7, #132]
 15994 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15995 0216 032B     		cmp	r3, #3
 15996 0218 74D0     		beq	.L648
2338:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15997              		.loc 1 2338 0
 15998 021a D7F88430 		ldr	r3, [r7, #132]
 15999 021e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 361


 16000 0220 1846     		mov	r0, r3
 16001 0222 FFF7FEFF 		bl	__aeabi_i2d
 16002 0226 4FF00002 		mov	r2, #0
 16003 022a 324B     		ldr	r3, .L705+60
 16004 022c FFF7FEFF 		bl	__aeabi_ddiv
 16005 0230 0346     		mov	r3, r0
 16006 0232 0C46     		mov	r4, r1
 16007 0234 07F11C00 		add	r0, r7, #28
 16008 0238 1A46     		mov	r2, r3
 16009 023a 2346     		mov	r3, r4
 16010 023c 2E49     		ldr	r1, .L705+64
 16011 023e FFF7FEFF 		bl	sprintf
2339:..\src/command_processing.c ****             strcat(info_string, str);
 16012              		.loc 1 2339 0
 16013 0242 07F11C03 		add	r3, r7, #28
 16014 0246 1946     		mov	r1, r3
 16015 0248 7869     		ldr	r0, [r7, #20]
 16016 024a FFF7FEFF 		bl	strcat
2340:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 16017              		.loc 1 2340 0
 16018 024e D7F88430 		ldr	r3, [r7, #132]
 16019 0252 5B68     		ldr	r3, [r3, #4]
 16020 0254 1846     		mov	r0, r3
 16021 0256 FFF7FEFF 		bl	__aeabi_i2d
 16022 025a 4FF00002 		mov	r2, #0
 16023 025e 254B     		ldr	r3, .L705+60
 16024 0260 FFF7FEFF 		bl	__aeabi_ddiv
 16025 0264 0346     		mov	r3, r0
 16026 0266 0C46     		mov	r4, r1
 16027 0268 07F11C00 		add	r0, r7, #28
 16028 026c 1A46     		mov	r2, r3
 16029 026e 2346     		mov	r3, r4
 16030 0270 2249     		ldr	r1, .L705+68
 16031 0272 FFF7FEFF 		bl	sprintf
2341:..\src/command_processing.c ****             strcat(info_string, str);
 16032              		.loc 1 2341 0
 16033 0276 07F11C03 		add	r3, r7, #28
 16034 027a 1946     		mov	r1, r3
 16035 027c 7869     		ldr	r0, [r7, #20]
 16036 027e FFF7FEFF 		bl	strcat
2342:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 16037              		.loc 1 2342 0
 16038 0282 D7F88430 		ldr	r3, [r7, #132]
 16039 0286 9B68     		ldr	r3, [r3, #8]
 16040 0288 1846     		mov	r0, r3
 16041 028a FFF7FEFF 		bl	__aeabi_i2d
 16042 028e 4FF00002 		mov	r2, #0
 16043 0292 184B     		ldr	r3, .L705+60
 16044 0294 FFF7FEFF 		bl	__aeabi_ddiv
 16045 0298 0346     		mov	r3, r0
 16046 029a 0C46     		mov	r4, r1
 16047 029c 07F11C00 		add	r0, r7, #28
 16048 02a0 1A46     		mov	r2, r3
 16049 02a2 2346     		mov	r3, r4
 16050 02a4 1649     		ldr	r1, .L705+72
 16051 02a6 FFF7FEFF 		bl	sprintf
2343:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 362


 16052              		.loc 1 2343 0
 16053 02aa 07F11C03 		add	r3, r7, #28
 16054 02ae 1946     		mov	r1, r3
 16055 02b0 7869     		ldr	r0, [r7, #20]
 16056 02b2 FFF7FEFF 		bl	strcat
 16057 02b6 73E0     		b	.L649
 16058              	.L706:
 16059              		.align	2
 16060              	.L705:
 16061 02b8 00000000 		.word	g_mem
 16062 02bc C40E0000 		.word	.LC134
 16063 02c0 70180000 		.word	.LC237
 16064 02c4 040F0000 		.word	.LC137
 16065 02c8 6C0F0000 		.word	.LC141
 16066 02cc 800F0000 		.word	.LC142
 16067 02d0 B4160000 		.word	.LC225
 16068 02d4 E0160000 		.word	.LC226
 16069 02d8 CC0F0000 		.word	.LC146
 16070 02dc 3C100000 		.word	.LC155
 16071 02e0 2C100000 		.word	.LC153
 16072 02e4 34100000 		.word	.LC154
 16073 02e8 00000000 		.word	dev_pwm_limit
 16074 02ec 64100000 		.word	.LC158
 16075 02f0 88180000 		.word	.LC238
 16076 02f4 0000F040 		.word	1089470464
 16077 02f8 5C110000 		.word	.LC169
 16078 02fc 68110000 		.word	.LC170
 16079 0300 74110000 		.word	.LC171
 16080              	.L648:
2344:..\src/command_processing.c ****         }
2345:..\src/command_processing.c ****         else { 
2346:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 16081              		.loc 1 2346 0
 16082 0304 D7F88430 		ldr	r3, [r7, #132]
 16083 0308 9B69     		ldr	r3, [r3, #24]
 16084 030a 1846     		mov	r0, r3
 16085 030c FFF7FEFF 		bl	__aeabi_i2d
 16086 0310 4FF00002 		mov	r2, #0
 16087 0314 CB4B     		ldr	r3, .L707
 16088 0316 FFF7FEFF 		bl	__aeabi_ddiv
 16089 031a 0346     		mov	r3, r0
 16090 031c 0C46     		mov	r4, r1
 16091 031e 07F11C00 		add	r0, r7, #28
 16092 0322 1A46     		mov	r2, r3
 16093 0324 2346     		mov	r3, r4
 16094 0326 C849     		ldr	r1, .L707+4
 16095 0328 FFF7FEFF 		bl	sprintf
2347:..\src/command_processing.c ****             strcat(info_string, str);
 16096              		.loc 1 2347 0
 16097 032c 07F11C03 		add	r3, r7, #28
 16098 0330 1946     		mov	r1, r3
 16099 0332 7869     		ldr	r0, [r7, #20]
 16100 0334 FFF7FEFF 		bl	strcat
2348:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 16101              		.loc 1 2348 0
 16102 0338 D7F88430 		ldr	r3, [r7, #132]
 16103 033c DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 363


 16104 033e 1846     		mov	r0, r3
 16105 0340 FFF7FEFF 		bl	__aeabi_i2d
 16106 0344 4FF00002 		mov	r2, #0
 16107 0348 BE4B     		ldr	r3, .L707
 16108 034a FFF7FEFF 		bl	__aeabi_ddiv
 16109 034e 0346     		mov	r3, r0
 16110 0350 0C46     		mov	r4, r1
 16111 0352 07F11C00 		add	r0, r7, #28
 16112 0356 1A46     		mov	r2, r3
 16113 0358 2346     		mov	r3, r4
 16114 035a BC49     		ldr	r1, .L707+8
 16115 035c FFF7FEFF 		bl	sprintf
2349:..\src/command_processing.c ****             strcat(info_string, str);
 16116              		.loc 1 2349 0
 16117 0360 07F11C03 		add	r3, r7, #28
 16118 0364 1946     		mov	r1, r3
 16119 0366 7869     		ldr	r0, [r7, #20]
 16120 0368 FFF7FEFF 		bl	strcat
2350:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 16121              		.loc 1 2350 0
 16122 036c D7F88430 		ldr	r3, [r7, #132]
 16123 0370 1B6A     		ldr	r3, [r3, #32]
 16124 0372 1846     		mov	r0, r3
 16125 0374 FFF7FEFF 		bl	__aeabi_i2d
 16126 0378 4FF00002 		mov	r2, #0
 16127 037c B14B     		ldr	r3, .L707
 16128 037e FFF7FEFF 		bl	__aeabi_ddiv
 16129 0382 0346     		mov	r3, r0
 16130 0384 0C46     		mov	r4, r1
 16131 0386 07F11C00 		add	r0, r7, #28
 16132 038a 1A46     		mov	r2, r3
 16133 038c 2346     		mov	r3, r4
 16134 038e B049     		ldr	r1, .L707+12
 16135 0390 FFF7FEFF 		bl	sprintf
2351:..\src/command_processing.c ****             strcat(info_string, str);
 16136              		.loc 1 2351 0
 16137 0394 07F11C03 		add	r3, r7, #28
 16138 0398 1946     		mov	r1, r3
 16139 039a 7869     		ldr	r0, [r7, #20]
 16140 039c FFF7FEFF 		bl	strcat
 16141              	.L649:
2352:..\src/command_processing.c ****         }
2353:..\src/command_processing.c **** 
2354:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 16142              		.loc 1 2354 0
 16143 03a0 7869     		ldr	r0, [r7, #20]
 16144 03a2 FFF7FEFF 		bl	strlen
 16145 03a6 0346     		mov	r3, r0
 16146 03a8 1A46     		mov	r2, r3
 16147 03aa 7B69     		ldr	r3, [r7, #20]
 16148 03ac 1344     		add	r3, r3, r2
 16149 03ae A94A     		ldr	r2, .L707+16
 16150 03b0 1C46     		mov	r4, r3
 16151 03b2 1346     		mov	r3, r2
 16152 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 16153 03b6 2060     		str	r0, [r4]	@ unaligned
 16154 03b8 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 364


 16155 03ba A260     		str	r2, [r4, #8]	@ unaligned
 16156 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16157 03be A381     		strh	r3, [r4, #12]	@ unaligned
2355:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 16158              		.loc 1 2355 0
 16159 03c0 D7F88430 		ldr	r3, [r7, #132]
 16160 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16161 03c8 032B     		cmp	r3, #3
 16162 03ca 4ED0     		beq	.L650
2356:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 16163              		.loc 1 2356 0
 16164 03cc D7F88430 		ldr	r3, [r7, #132]
 16165 03d0 DB68     		ldr	r3, [r3, #12]
 16166 03d2 1846     		mov	r0, r3
 16167 03d4 FFF7FEFF 		bl	__aeabi_i2d
 16168 03d8 4FF00002 		mov	r2, #0
 16169 03dc 994B     		ldr	r3, .L707
 16170 03de FFF7FEFF 		bl	__aeabi_ddiv
 16171 03e2 0346     		mov	r3, r0
 16172 03e4 0C46     		mov	r4, r1
 16173 03e6 07F11C00 		add	r0, r7, #28
 16174 03ea 1A46     		mov	r2, r3
 16175 03ec 2346     		mov	r3, r4
 16176 03ee 9649     		ldr	r1, .L707+4
 16177 03f0 FFF7FEFF 		bl	sprintf
2357:..\src/command_processing.c ****             strcat(info_string, str);
 16178              		.loc 1 2357 0
 16179 03f4 07F11C03 		add	r3, r7, #28
 16180 03f8 1946     		mov	r1, r3
 16181 03fa 7869     		ldr	r0, [r7, #20]
 16182 03fc FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 16183              		.loc 1 2358 0
 16184 0400 D7F88430 		ldr	r3, [r7, #132]
 16185 0404 1B69     		ldr	r3, [r3, #16]
 16186 0406 1846     		mov	r0, r3
 16187 0408 FFF7FEFF 		bl	__aeabi_i2d
 16188 040c 4FF00002 		mov	r2, #0
 16189 0410 8C4B     		ldr	r3, .L707
 16190 0412 FFF7FEFF 		bl	__aeabi_ddiv
 16191 0416 0346     		mov	r3, r0
 16192 0418 0C46     		mov	r4, r1
 16193 041a 07F11C00 		add	r0, r7, #28
 16194 041e 1A46     		mov	r2, r3
 16195 0420 2346     		mov	r3, r4
 16196 0422 8A49     		ldr	r1, .L707+8
 16197 0424 FFF7FEFF 		bl	sprintf
2359:..\src/command_processing.c ****             strcat(info_string, str);
 16198              		.loc 1 2359 0
 16199 0428 07F11C03 		add	r3, r7, #28
 16200 042c 1946     		mov	r1, r3
 16201 042e 7869     		ldr	r0, [r7, #20]
 16202 0430 FFF7FEFF 		bl	strcat
2360:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 16203              		.loc 1 2360 0
 16204 0434 D7F88430 		ldr	r3, [r7, #132]
 16205 0438 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 365


 16206 043a 1846     		mov	r0, r3
 16207 043c FFF7FEFF 		bl	__aeabi_i2d
 16208 0440 4FF00002 		mov	r2, #0
 16209 0444 7F4B     		ldr	r3, .L707
 16210 0446 FFF7FEFF 		bl	__aeabi_ddiv
 16211 044a 0346     		mov	r3, r0
 16212 044c 0C46     		mov	r4, r1
 16213 044e 07F11C00 		add	r0, r7, #28
 16214 0452 1A46     		mov	r2, r3
 16215 0454 2346     		mov	r3, r4
 16216 0456 7E49     		ldr	r1, .L707+12
 16217 0458 FFF7FEFF 		bl	sprintf
2361:..\src/command_processing.c ****             strcat(info_string, str);
 16218              		.loc 1 2361 0
 16219 045c 07F11C03 		add	r3, r7, #28
 16220 0460 1946     		mov	r1, r3
 16221 0462 7869     		ldr	r0, [r7, #20]
 16222 0464 FFF7FEFF 		bl	strcat
 16223 0468 4DE0     		b	.L651
 16224              	.L650:
2362:..\src/command_processing.c **** 
2363:..\src/command_processing.c ****         }
2364:..\src/command_processing.c ****         else {
2365:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 16225              		.loc 1 2365 0
 16226 046a D7F88430 		ldr	r3, [r7, #132]
 16227 046e 5B6A     		ldr	r3, [r3, #36]
 16228 0470 1846     		mov	r0, r3
 16229 0472 FFF7FEFF 		bl	__aeabi_i2d
 16230 0476 4FF00002 		mov	r2, #0
 16231 047a 724B     		ldr	r3, .L707
 16232 047c FFF7FEFF 		bl	__aeabi_ddiv
 16233 0480 0346     		mov	r3, r0
 16234 0482 0C46     		mov	r4, r1
 16235 0484 07F11C00 		add	r0, r7, #28
 16236 0488 1A46     		mov	r2, r3
 16237 048a 2346     		mov	r3, r4
 16238 048c 6E49     		ldr	r1, .L707+4
 16239 048e FFF7FEFF 		bl	sprintf
2366:..\src/command_processing.c ****             strcat(info_string, str);
 16240              		.loc 1 2366 0
 16241 0492 07F11C03 		add	r3, r7, #28
 16242 0496 1946     		mov	r1, r3
 16243 0498 7869     		ldr	r0, [r7, #20]
 16244 049a FFF7FEFF 		bl	strcat
2367:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 16245              		.loc 1 2367 0
 16246 049e D7F88430 		ldr	r3, [r7, #132]
 16247 04a2 9B6A     		ldr	r3, [r3, #40]
 16248 04a4 1846     		mov	r0, r3
 16249 04a6 FFF7FEFF 		bl	__aeabi_i2d
 16250 04aa 4FF00002 		mov	r2, #0
 16251 04ae 654B     		ldr	r3, .L707
 16252 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 16253 04b4 0346     		mov	r3, r0
 16254 04b6 0C46     		mov	r4, r1
 16255 04b8 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 366


 16256 04bc 1A46     		mov	r2, r3
 16257 04be 2346     		mov	r3, r4
 16258 04c0 6249     		ldr	r1, .L707+8
 16259 04c2 FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****             strcat(info_string, str);
 16260              		.loc 1 2368 0
 16261 04c6 07F11C03 		add	r3, r7, #28
 16262 04ca 1946     		mov	r1, r3
 16263 04cc 7869     		ldr	r0, [r7, #20]
 16264 04ce FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 16265              		.loc 1 2369 0
 16266 04d2 D7F88430 		ldr	r3, [r7, #132]
 16267 04d6 DB6A     		ldr	r3, [r3, #44]
 16268 04d8 1846     		mov	r0, r3
 16269 04da FFF7FEFF 		bl	__aeabi_i2d
 16270 04de 4FF00002 		mov	r2, #0
 16271 04e2 584B     		ldr	r3, .L707
 16272 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 16273 04e8 0346     		mov	r3, r0
 16274 04ea 0C46     		mov	r4, r1
 16275 04ec 07F11C00 		add	r0, r7, #28
 16276 04f0 1A46     		mov	r2, r3
 16277 04f2 2346     		mov	r3, r4
 16278 04f4 5649     		ldr	r1, .L707+12
 16279 04f6 FFF7FEFF 		bl	sprintf
2370:..\src/command_processing.c ****             strcat(info_string, str);
 16280              		.loc 1 2370 0
 16281 04fa 07F11C03 		add	r3, r7, #28
 16282 04fe 1946     		mov	r1, r3
 16283 0500 7869     		ldr	r0, [r7, #20]
 16284 0502 FFF7FEFF 		bl	strcat
 16285              	.L651:
2371:..\src/command_processing.c ****         }
2372:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 16286              		.loc 1 2372 0
 16287 0506 D7F88430 		ldr	r3, [r7, #132]
 16288 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 16289 050e 012B     		cmp	r3, #1
 16290 0510 14D1     		bne	.L652
2373:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 16291              		.loc 1 2373 0
 16292 0512 7869     		ldr	r0, [r7, #20]
 16293 0514 FFF7FEFF 		bl	strlen
 16294 0518 0346     		mov	r3, r0
 16295 051a 1A46     		mov	r2, r3
 16296 051c 7B69     		ldr	r3, [r7, #20]
 16297 051e 1344     		add	r3, r3, r2
 16298 0520 4D4A     		ldr	r2, .L707+20
 16299 0522 1D46     		mov	r5, r3
 16300 0524 1446     		mov	r4, r2
 16301 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16302 0528 2860     		str	r0, [r5]	@ unaligned
 16303 052a 6960     		str	r1, [r5, #4]	@ unaligned
 16304 052c AA60     		str	r2, [r5, #8]	@ unaligned
 16305 052e EB60     		str	r3, [r5, #12]	@ unaligned
 16306 0530 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 367


 16307 0532 2861     		str	r0, [r5, #16]	@ unaligned
 16308 0534 6961     		str	r1, [r5, #20]	@ unaligned
 16309 0536 2388     		ldrh	r3, [r4]	@ unaligned
 16310 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 16311 053a 13E0     		b	.L653
 16312              	.L652:
2374:..\src/command_processing.c ****         else
2375:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 16313              		.loc 1 2375 0
 16314 053c 7869     		ldr	r0, [r7, #20]
 16315 053e FFF7FEFF 		bl	strlen
 16316 0542 0346     		mov	r3, r0
 16317 0544 1A46     		mov	r2, r3
 16318 0546 7B69     		ldr	r3, [r7, #20]
 16319 0548 1344     		add	r3, r3, r2
 16320 054a 444A     		ldr	r2, .L707+24
 16321 054c 1D46     		mov	r5, r3
 16322 054e 1446     		mov	r4, r2
 16323 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16324 0552 2860     		str	r0, [r5]	@ unaligned
 16325 0554 6960     		str	r1, [r5, #4]	@ unaligned
 16326 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 16327 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 16328 055a 03CC     		ldmia	r4!, {r0, r1}
 16329 055c 2861     		str	r0, [r5, #16]	@ unaligned
 16330 055e 6961     		str	r1, [r5, #20]	@ unaligned
 16331 0560 2378     		ldrb	r3, [r4]
 16332 0562 2B76     		strb	r3, [r5, #24]
 16333              	.L653:
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         switch(MOT->input_mode) {
 16334              		.loc 1 2377 0
 16335 0564 D7F88430 		ldr	r3, [r7, #132]
 16336 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16337 056c 062B     		cmp	r3, #6
 16338 056e 00F2D180 		bhi	.L654
 16339 0572 01A2     		adr	r2, .L656
 16340 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16341              		.p2align 2
 16342              	.L656:
 16343 0578 95050000 		.word	.L655+1
 16344 057c B9050000 		.word	.L657+1
 16345 0580 E1050000 		.word	.L658+1
 16346 0584 13060000 		.word	.L659+1
 16347 0588 71060000 		.word	.L660+1
 16348 058c 9F060000 		.word	.L661+1
 16349 0590 CF060000 		.word	.L662+1
 16350              		.p2align 1
 16351              	.L655:
2378:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2379:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 16352              		.loc 1 2379 0
 16353 0594 7869     		ldr	r0, [r7, #20]
 16354 0596 FFF7FEFF 		bl	strlen
 16355 059a 0346     		mov	r3, r0
 16356 059c 1A46     		mov	r2, r3
 16357 059e 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 368


 16358 05a0 1344     		add	r3, r3, r2
 16359 05a2 2F4A     		ldr	r2, .L707+28
 16360 05a4 1D46     		mov	r5, r3
 16361 05a6 1446     		mov	r4, r2
 16362 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16363 05aa 2860     		str	r0, [r5]	@ unaligned
 16364 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 16365 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 16366 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 16367 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 16368 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2380:..\src/command_processing.c ****                 break;
 16369              		.loc 1 2380 0
 16370 05b6 ADE0     		b	.L654
 16371              	.L657:
2381:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2382:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 16372              		.loc 1 2382 0
 16373 05b8 7869     		ldr	r0, [r7, #20]
 16374 05ba FFF7FEFF 		bl	strlen
 16375 05be 0346     		mov	r3, r0
 16376 05c0 1A46     		mov	r2, r3
 16377 05c2 7B69     		ldr	r3, [r7, #20]
 16378 05c4 1344     		add	r3, r3, r2
 16379 05c6 274A     		ldr	r2, .L707+32
 16380 05c8 1D46     		mov	r5, r3
 16381 05ca 1446     		mov	r4, r2
 16382 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16383 05ce 2860     		str	r0, [r5]	@ unaligned
 16384 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 16385 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 16386 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 16387 05d6 2068     		ldr	r0, [r4]	@ unaligned
 16388 05d8 2861     		str	r0, [r5, #16]	@ unaligned
 16389 05da 2379     		ldrb	r3, [r4, #4]
 16390 05dc 2B75     		strb	r3, [r5, #20]
2383:..\src/command_processing.c ****                 break;
 16391              		.loc 1 2383 0
 16392 05de 99E0     		b	.L654
 16393              	.L658:
2384:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2385:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 16394              		.loc 1 2385 0
 16395 05e0 7869     		ldr	r0, [r7, #20]
 16396 05e2 FFF7FEFF 		bl	strlen
 16397 05e6 0346     		mov	r3, r0
 16398 05e8 1A46     		mov	r2, r3
 16399 05ea 7B69     		ldr	r3, [r7, #20]
 16400 05ec 1344     		add	r3, r3, r2
 16401 05ee 1E4A     		ldr	r2, .L707+36
 16402 05f0 1D46     		mov	r5, r3
 16403 05f2 1446     		mov	r4, r2
 16404 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16405 05f6 2860     		str	r0, [r5]	@ unaligned
 16406 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 16407 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 16408 05fc EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 369


 16409 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 16410 0600 2861     		str	r0, [r5, #16]	@ unaligned
 16411 0602 6961     		str	r1, [r5, #20]	@ unaligned
 16412 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 16413 0606 2388     		ldrh	r3, [r4]	@ unaligned
 16414 0608 A278     		ldrb	r2, [r4, #2]
 16415 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 16416 060c 1346     		mov	r3, r2
 16417 060e AB77     		strb	r3, [r5, #30]
2386:..\src/command_processing.c ****                 break;
 16418              		.loc 1 2386 0
 16419 0610 80E0     		b	.L654
 16420              	.L659:
2387:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2388:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 16421              		.loc 1 2388 0
 16422 0612 7869     		ldr	r0, [r7, #20]
 16423 0614 FFF7FEFF 		bl	strlen
 16424 0618 0346     		mov	r3, r0
 16425 061a 1A46     		mov	r2, r3
 16426 061c 7B69     		ldr	r3, [r7, #20]
 16427 061e 1344     		add	r3, r3, r2
 16428 0620 124A     		ldr	r2, .L707+40
 16429 0622 1D46     		mov	r5, r3
 16430 0624 1446     		mov	r4, r2
 16431 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16432 0628 2860     		str	r0, [r5]	@ unaligned
 16433 062a 6960     		str	r1, [r5, #4]	@ unaligned
 16434 062c AA60     		str	r2, [r5, #8]	@ unaligned
 16435 062e EB60     		str	r3, [r5, #12]	@ unaligned
 16436 0630 03CC     		ldmia	r4!, {r0, r1}
 16437 0632 2861     		str	r0, [r5, #16]	@ unaligned
 16438 0634 6961     		str	r1, [r5, #20]	@ unaligned
 16439 0636 2388     		ldrh	r3, [r4]	@ unaligned
 16440 0638 A278     		ldrb	r2, [r4, #2]
 16441 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16442 063c 1346     		mov	r3, r2
 16443 063e AB76     		strb	r3, [r5, #26]
2389:..\src/command_processing.c ****                 break;
 16444              		.loc 1 2389 0
 16445 0640 68E0     		b	.L654
 16446              	.L708:
 16447 0642 00BF     		.align	2
 16448              	.L707:
 16449 0644 0000F040 		.word	1089470464
 16450 0648 5C110000 		.word	.LC169
 16451 064c 68110000 		.word	.LC170
 16452 0650 74110000 		.word	.LC171
 16453 0654 98180000 		.word	.LC239
 16454 0658 9C110000 		.word	.LC173
 16455 065c B8110000 		.word	.LC174
 16456 0660 D4110000 		.word	.LC175
 16457 0664 E8110000 		.word	.LC176
 16458 0668 00120000 		.word	.LC177
 16459 066c 20120000 		.word	.LC178
 16460              	.L660:
2390:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 370


2391:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 16461              		.loc 1 2391 0
 16462 0670 7869     		ldr	r0, [r7, #20]
 16463 0672 FFF7FEFF 		bl	strlen
 16464 0676 0346     		mov	r3, r0
 16465 0678 1A46     		mov	r2, r3
 16466 067a 7B69     		ldr	r3, [r7, #20]
 16467 067c 1344     		add	r3, r3, r2
 16468 067e AF4A     		ldr	r2, .L709
 16469 0680 1C46     		mov	r4, r3
 16470 0682 1546     		mov	r5, r2
 16471 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16472 0686 2060     		str	r0, [r4]	@ unaligned
 16473 0688 6160     		str	r1, [r4, #4]	@ unaligned
 16474 068a A260     		str	r2, [r4, #8]	@ unaligned
 16475 068c E360     		str	r3, [r4, #12]	@ unaligned
 16476 068e 2868     		ldr	r0, [r5]	@ unaligned
 16477 0690 2061     		str	r0, [r4, #16]	@ unaligned
 16478 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16479 0694 AA79     		ldrb	r2, [r5, #6]
 16480 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 16481 0698 1346     		mov	r3, r2
 16482 069a A375     		strb	r3, [r4, #22]
2392:..\src/command_processing.c ****                 break;
 16483              		.loc 1 2392 0
 16484 069c 3AE0     		b	.L654
 16485              	.L661:
2393:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2394:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 16486              		.loc 1 2394 0
 16487 069e 7869     		ldr	r0, [r7, #20]
 16488 06a0 FFF7FEFF 		bl	strlen
 16489 06a4 0346     		mov	r3, r0
 16490 06a6 1A46     		mov	r2, r3
 16491 06a8 7B69     		ldr	r3, [r7, #20]
 16492 06aa 1344     		add	r3, r3, r2
 16493 06ac A44A     		ldr	r2, .L709+4
 16494 06ae 1D46     		mov	r5, r3
 16495 06b0 1446     		mov	r4, r2
 16496 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16497 06b4 2860     		str	r0, [r5]	@ unaligned
 16498 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 16499 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 16500 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 16501 06bc 03CC     		ldmia	r4!, {r0, r1}
 16502 06be 2861     		str	r0, [r5, #16]	@ unaligned
 16503 06c0 6961     		str	r1, [r5, #20]	@ unaligned
 16504 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 16505 06c4 A278     		ldrb	r2, [r4, #2]
 16506 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 16507 06c8 1346     		mov	r3, r2
 16508 06ca AB76     		strb	r3, [r5, #26]
2395:..\src/command_processing.c ****                 break;
 16509              		.loc 1 2395 0
 16510 06cc 22E0     		b	.L654
 16511              	.L662:
2396:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 371


2397:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 16512              		.loc 1 2397 0
 16513 06ce 7869     		ldr	r0, [r7, #20]
 16514 06d0 FFF7FEFF 		bl	strlen
 16515 06d4 0346     		mov	r3, r0
 16516 06d6 1A46     		mov	r2, r3
 16517 06d8 7B69     		ldr	r3, [r7, #20]
 16518 06da 1344     		add	r3, r3, r2
 16519 06dc 994A     		ldr	r2, .L709+8
 16520 06de 1546     		mov	r5, r2
 16521 06e0 9E46     		mov	lr, r3
 16522 06e2 05F1200C 		add	ip, r5, #32
 16523              	.L663:
 16524 06e6 7446     		mov	r4, lr
 16525 06e8 2E46     		mov	r6, r5
 16526 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16527 06ec 2060     		str	r0, [r4]	@ unaligned
 16528 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 16529 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 16530 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 16531 06f4 1035     		adds	r5, r5, #16
 16532 06f6 0EF1100E 		add	lr, lr, #16
 16533 06fa 6545     		cmp	r5, ip
 16534 06fc F3D1     		bne	.L663
 16535 06fe 7446     		mov	r4, lr
 16536 0700 2B46     		mov	r3, r5
 16537 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 16538 0704 2060     		str	r0, [r4]	@ unaligned
 16539 0706 6160     		str	r1, [r4, #4]	@ unaligned
 16540 0708 A260     		str	r2, [r4, #8]	@ unaligned
 16541 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 16542 070c 9B78     		ldrb	r3, [r3, #2]
 16543 070e A281     		strh	r2, [r4, #12]	@ unaligned
 16544 0710 A373     		strb	r3, [r4, #14]
2398:..\src/command_processing.c ****                     break;
 16545              		.loc 1 2398 0
 16546 0712 00BF     		nop
 16547              	.L654:
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c **** 
2401:..\src/command_processing.c ****         switch(MOT->control_mode) {
 16548              		.loc 1 2401 0
 16549 0714 D7F88430 		ldr	r3, [r7, #132]
 16550 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16551 071c 032B     		cmp	r3, #3
 16552 071e 64D8     		bhi	.L703
 16553 0720 01A2     		adr	r2, .L666
 16554 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16555 0726 00BF     		.p2align 2
 16556              	.L666:
 16557 0728 39070000 		.word	.L665+1
 16558 072c 63070000 		.word	.L667+1
 16559 0730 87070000 		.word	.L668+1
 16560 0734 AD070000 		.word	.L669+1
 16561              		.p2align 1
 16562              	.L665:
2402:..\src/command_processing.c ****             case CONTROL_ANGLE:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 372


2403:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 16563              		.loc 1 2403 0
 16564 0738 7869     		ldr	r0, [r7, #20]
 16565 073a FFF7FEFF 		bl	strlen
 16566 073e 0346     		mov	r3, r0
 16567 0740 1A46     		mov	r2, r3
 16568 0742 7B69     		ldr	r3, [r7, #20]
 16569 0744 1344     		add	r3, r3, r2
 16570 0746 804A     		ldr	r2, .L709+12
 16571 0748 1D46     		mov	r5, r3
 16572 074a 1446     		mov	r4, r2
 16573 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16574 074e 2860     		str	r0, [r5]	@ unaligned
 16575 0750 6960     		str	r1, [r5, #4]	@ unaligned
 16576 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 16577 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 16578 0756 03CC     		ldmia	r4!, {r0, r1}
 16579 0758 2861     		str	r0, [r5, #16]	@ unaligned
 16580 075a 6961     		str	r1, [r5, #20]	@ unaligned
 16581 075c 2378     		ldrb	r3, [r4]
 16582 075e 2B76     		strb	r3, [r5, #24]
2404:..\src/command_processing.c ****                 break;
 16583              		.loc 1 2404 0
 16584 0760 44E0     		b	.L670
 16585              	.L667:
2405:..\src/command_processing.c ****             case CONTROL_PWM:
2406:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 16586              		.loc 1 2406 0
 16587 0762 7869     		ldr	r0, [r7, #20]
 16588 0764 FFF7FEFF 		bl	strlen
 16589 0768 0346     		mov	r3, r0
 16590 076a 1A46     		mov	r2, r3
 16591 076c 7B69     		ldr	r3, [r7, #20]
 16592 076e 1344     		add	r3, r3, r2
 16593 0770 764A     		ldr	r2, .L709+16
 16594 0772 1D46     		mov	r5, r3
 16595 0774 1446     		mov	r4, r2
 16596 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16597 0778 2860     		str	r0, [r5]	@ unaligned
 16598 077a 6960     		str	r1, [r5, #4]	@ unaligned
 16599 077c AA60     		str	r2, [r5, #8]	@ unaligned
 16600 077e EB60     		str	r3, [r5, #12]	@ unaligned
 16601 0780 2068     		ldr	r0, [r4]	@ unaligned
 16602 0782 2861     		str	r0, [r5, #16]	@ unaligned
2407:..\src/command_processing.c ****                 break;
 16603              		.loc 1 2407 0
 16604 0784 32E0     		b	.L670
 16605              	.L668:
2408:..\src/command_processing.c ****             case CONTROL_CURRENT:
2409:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 16606              		.loc 1 2409 0
 16607 0786 7869     		ldr	r0, [r7, #20]
 16608 0788 FFF7FEFF 		bl	strlen
 16609 078c 0346     		mov	r3, r0
 16610 078e 1A46     		mov	r2, r3
 16611 0790 7B69     		ldr	r3, [r7, #20]
 16612 0792 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 373


 16613 0794 6E4A     		ldr	r2, .L709+20
 16614 0796 1D46     		mov	r5, r3
 16615 0798 1446     		mov	r4, r2
 16616 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16617 079c 2860     		str	r0, [r5]	@ unaligned
 16618 079e 6960     		str	r1, [r5, #4]	@ unaligned
 16619 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 16620 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 16621 07a4 03CC     		ldmia	r4!, {r0, r1}
 16622 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 16623 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2410:..\src/command_processing.c ****                 break;
 16624              		.loc 1 2410 0
 16625 07aa 1FE0     		b	.L670
 16626              	.L669:
2411:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2412:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 16627              		.loc 1 2412 0
 16628 07ac 7869     		ldr	r0, [r7, #20]
 16629 07ae FFF7FEFF 		bl	strlen
 16630 07b2 0346     		mov	r3, r0
 16631 07b4 1A46     		mov	r2, r3
 16632 07b6 7B69     		ldr	r3, [r7, #20]
 16633 07b8 1344     		add	r3, r3, r2
 16634 07ba 664A     		ldr	r2, .L709+24
 16635 07bc 1446     		mov	r4, r2
 16636 07be 9E46     		mov	lr, r3
 16637 07c0 04F1200C 		add	ip, r4, #32
 16638              	.L671:
 16639 07c4 7546     		mov	r5, lr
 16640 07c6 2646     		mov	r6, r4
 16641 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16642 07ca 2860     		str	r0, [r5]	@ unaligned
 16643 07cc 6960     		str	r1, [r5, #4]	@ unaligned
 16644 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 16645 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 16646 07d2 1034     		adds	r4, r4, #16
 16647 07d4 0EF1100E 		add	lr, lr, #16
 16648 07d8 6445     		cmp	r4, ip
 16649 07da F3D1     		bne	.L671
 16650 07dc 7346     		mov	r3, lr
 16651 07de 2246     		mov	r2, r4
 16652 07e0 1068     		ldr	r0, [r2]	@ unaligned
 16653 07e2 1860     		str	r0, [r3]	@ unaligned
 16654 07e4 1279     		ldrb	r2, [r2, #4]
 16655 07e6 1A71     		strb	r2, [r3, #4]
2413:..\src/command_processing.c ****                 break;
 16656              		.loc 1 2413 0
 16657 07e8 00E0     		b	.L670
 16658              	.L703:
2414:..\src/command_processing.c ****             default:
2415:..\src/command_processing.c ****                 break;
 16659              		.loc 1 2415 0
 16660 07ea 00BF     		nop
 16661              	.L670:
2416:..\src/command_processing.c ****         }
2417:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 374


2418:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16662              		.loc 1 2418 0
 16663 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16664 07f0 D7F88C10 		ldr	r1, [r7, #140]
 16665 07f4 1346     		mov	r3, r2
 16666 07f6 5B00     		lsls	r3, r3, #1
 16667 07f8 1344     		add	r3, r3, r2
 16668 07fa 1B01     		lsls	r3, r3, #4
 16669 07fc 0B44     		add	r3, r3, r1
 16670 07fe 03F5D873 		add	r3, r3, #432
 16671 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16672 0804 002B     		cmp	r3, #0
 16673 0806 1CD0     		beq	.L672
2419:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 16674              		.loc 1 2419 0
 16675 0808 7869     		ldr	r0, [r7, #20]
 16676 080a FFF7FEFF 		bl	strlen
 16677 080e 0346     		mov	r3, r0
 16678 0810 1A46     		mov	r2, r3
 16679 0812 7B69     		ldr	r3, [r7, #20]
 16680 0814 1344     		add	r3, r3, r2
 16681 0816 504A     		ldr	r2, .L709+28
 16682 0818 1446     		mov	r4, r2
 16683 081a 9E46     		mov	lr, r3
 16684 081c 04F1200C 		add	ip, r4, #32
 16685              	.L673:
 16686 0820 7546     		mov	r5, lr
 16687 0822 2646     		mov	r6, r4
 16688 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16689 0826 2860     		str	r0, [r5]	@ unaligned
 16690 0828 6960     		str	r1, [r5, #4]	@ unaligned
 16691 082a AA60     		str	r2, [r5, #8]	@ unaligned
 16692 082c EB60     		str	r3, [r5, #12]	@ unaligned
 16693 082e 1034     		adds	r4, r4, #16
 16694 0830 0EF1100E 		add	lr, lr, #16
 16695 0834 6445     		cmp	r4, ip
 16696 0836 F3D1     		bne	.L673
 16697 0838 7346     		mov	r3, lr
 16698 083a 2246     		mov	r2, r4
 16699 083c 1278     		ldrb	r2, [r2]
 16700 083e 1A70     		strb	r2, [r3]
 16701 0840 13E0     		b	.L674
 16702              	.L672:
2420:..\src/command_processing.c ****         else
2421:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 16703              		.loc 1 2421 0
 16704 0842 7869     		ldr	r0, [r7, #20]
 16705 0844 FFF7FEFF 		bl	strlen
 16706 0848 0346     		mov	r3, r0
 16707 084a 1A46     		mov	r2, r3
 16708 084c 7B69     		ldr	r3, [r7, #20]
 16709 084e 1344     		add	r3, r3, r2
 16710 0850 424A     		ldr	r2, .L709+32
 16711 0852 1C46     		mov	r4, r3
 16712 0854 1546     		mov	r5, r2
 16713 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16714 0858 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 375


 16715 085a 6160     		str	r1, [r4, #4]	@ unaligned
 16716 085c A260     		str	r2, [r4, #8]	@ unaligned
 16717 085e E360     		str	r3, [r4, #12]	@ unaligned
 16718 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16719 0862 2061     		str	r0, [r4, #16]	@ unaligned
 16720 0864 6161     		str	r1, [r4, #20]	@ unaligned
 16721 0866 A261     		str	r2, [r4, #24]	@ unaligned
 16722 0868 E361     		str	r3, [r4, #28]	@ unaligned
 16723              	.L674:
2422:..\src/command_processing.c **** 
2423:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 16724              		.loc 1 2423 0
 16725 086a 7869     		ldr	r0, [r7, #20]
 16726 086c FFF7FEFF 		bl	strlen
 16727 0870 0346     		mov	r3, r0
 16728 0872 1A46     		mov	r2, r3
 16729 0874 7B69     		ldr	r3, [r7, #20]
 16730 0876 1344     		add	r3, r3, r2
 16731 0878 394A     		ldr	r2, .L709+36
 16732 087a 1C46     		mov	r4, r3
 16733 087c 1346     		mov	r3, r2
 16734 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 16735 0880 2060     		str	r0, [r4]	@ unaligned
 16736 0882 6160     		str	r1, [r4, #4]	@ unaligned
 16737 0884 A260     		str	r2, [r4, #8]	@ unaligned
 16738 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 16739 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2424:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16740              		.loc 1 2424 0
 16741 088a 0023     		movs	r3, #0
 16742 088c C7F89430 		str	r3, [r7, #148]
 16743 0890 30E0     		b	.L675
 16744              	.L677:
2425:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16745              		.loc 1 2425 0
 16746 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16747 0896 D7F88C10 		ldr	r1, [r7, #140]
 16748 089a 1346     		mov	r3, r2
 16749 089c 5B00     		lsls	r3, r3, #1
 16750 089e 1344     		add	r3, r3, r2
 16751 08a0 1B01     		lsls	r3, r3, #4
 16752 08a2 CA18     		adds	r2, r1, r3
 16753 08a4 D7F89430 		ldr	r3, [r7, #148]
 16754 08a8 1344     		add	r3, r3, r2
 16755 08aa 03F29513 		addw	r3, r3, #405
 16756 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16757 08b0 1A46     		mov	r2, r3
 16758 08b2 07F11C03 		add	r3, r7, #28
 16759 08b6 2B49     		ldr	r1, .L709+40
 16760 08b8 1846     		mov	r0, r3
 16761 08ba FFF7FEFF 		bl	sprintf
2426:..\src/command_processing.c ****             strcat(info_string, str);
 16762              		.loc 1 2426 0
 16763 08be 07F11C03 		add	r3, r7, #28
 16764 08c2 1946     		mov	r1, r3
 16765 08c4 7869     		ldr	r0, [r7, #20]
 16766 08c6 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 376


2427:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16767              		.loc 1 2427 0
 16768 08ca D7F89430 		ldr	r3, [r7, #148]
 16769 08ce 022B     		cmp	r3, #2
 16770 08d0 0BD0     		beq	.L676
2428:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16771              		.loc 1 2428 0
 16772 08d2 7869     		ldr	r0, [r7, #20]
 16773 08d4 FFF7FEFF 		bl	strlen
 16774 08d8 0346     		mov	r3, r0
 16775 08da 1A46     		mov	r2, r3
 16776 08dc 7B69     		ldr	r3, [r7, #20]
 16777 08de 1344     		add	r3, r3, r2
 16778 08e0 214A     		ldr	r2, .L709+44
 16779 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 16780 08e4 9278     		ldrb	r2, [r2, #2]
 16781 08e6 1980     		strh	r1, [r3]	@ unaligned
 16782 08e8 9A70     		strb	r2, [r3, #2]
 16783              	.L676:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16784              		.loc 1 2424 0 discriminator 2
 16785 08ea D7F89430 		ldr	r3, [r7, #148]
 16786 08ee 0133     		adds	r3, r3, #1
 16787 08f0 C7F89430 		str	r3, [r7, #148]
 16788              	.L675:
2424:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16789              		.loc 1 2424 0 is_stmt 0 discriminator 1
 16790 08f4 D7F89430 		ldr	r3, [r7, #148]
 16791 08f8 022B     		cmp	r3, #2
 16792 08fa CADD     		ble	.L677
2429:..\src/command_processing.c ****             }                
2430:..\src/command_processing.c ****         }
2431:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16793              		.loc 1 2431 0 is_stmt 1
 16794 08fc 7869     		ldr	r0, [r7, #20]
 16795 08fe FFF7FEFF 		bl	strlen
 16796 0902 0346     		mov	r3, r0
 16797 0904 1A46     		mov	r2, r3
 16798 0906 7B69     		ldr	r3, [r7, #20]
 16799 0908 1344     		add	r3, r3, r2
 16800 090a 184A     		ldr	r2, .L709+48
 16801 090c 1188     		ldrh	r1, [r2]	@ unaligned
 16802 090e 9278     		ldrb	r2, [r2, #2]
 16803 0910 1980     		strh	r1, [r3]	@ unaligned
 16804 0912 9A70     		strb	r2, [r3, #2]
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 16805              		.loc 1 2433 0
 16806 0914 7869     		ldr	r0, [r7, #20]
 16807 0916 FFF7FEFF 		bl	strlen
 16808 091a 0346     		mov	r3, r0
 16809 091c 1A46     		mov	r2, r3
 16810 091e 7B69     		ldr	r3, [r7, #20]
 16811 0920 1344     		add	r3, r3, r2
 16812 0922 1349     		ldr	r1, .L709+52
 16813 0924 1A46     		mov	r2, r3
 16814 0926 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 377


 16815 0928 03CB     		ldmia	r3!, {r0, r1}
 16816 092a 1060     		str	r0, [r2]	@ unaligned
 16817 092c 5160     		str	r1, [r2, #4]	@ unaligned
 16818 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 16819 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2434:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16820              		.loc 1 2434 0
 16821 0932 0023     		movs	r3, #0
 16822 0934 C7F89430 		str	r3, [r7, #148]
 16823 0938 5CE0     		b	.L678
 16824              	.L710:
 16825 093a 00BF     		.align	2
 16826              	.L709:
 16827 093c 3C120000 		.word	.LC179
 16828 0940 54120000 		.word	.LC180
 16829 0944 70120000 		.word	.LC181
 16830 0948 A0120000 		.word	.LC182
 16831 094c BC120000 		.word	.LC183
 16832 0950 D0120000 		.word	.LC184
 16833 0954 E8120000 		.word	.LC185
 16834 0958 10130000 		.word	.LC186
 16835 095c 34130000 		.word	.LC187
 16836 0960 A8180000 		.word	.LC240
 16837 0964 9C100000 		.word	.LC161
 16838 0968 A0100000 		.word	.LC162
 16839 096c AC0E0000 		.word	.LC132
 16840 0970 B8180000 		.word	.LC241
 16841              	.L680:
2435:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16842              		.loc 1 2435 0
 16843 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16844 0978 D7F88C10 		ldr	r1, [r7, #140]
 16845 097c 1346     		mov	r3, r2
 16846 097e 5B00     		lsls	r3, r3, #1
 16847 0980 1344     		add	r3, r3, r2
 16848 0982 9B00     		lsls	r3, r3, #2
 16849 0984 D7F89420 		ldr	r2, [r7, #148]
 16850 0988 1344     		add	r3, r3, r2
 16851 098a 6633     		adds	r3, r3, #102
 16852 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16853 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16854 0994 D7F88C00 		ldr	r0, [r7, #140]
 16855 0998 1346     		mov	r3, r2
 16856 099a 5B00     		lsls	r3, r3, #1
 16857 099c 1344     		add	r3, r3, r2
 16858 099e 1B01     		lsls	r3, r3, #4
 16859 09a0 C218     		adds	r2, r0, r3
 16860 09a2 D7F89430 		ldr	r3, [r7, #148]
 16861 09a6 1344     		add	r3, r3, r2
 16862 09a8 03F29513 		addw	r3, r3, #405
 16863 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16864 09ae 41FA03F2 		asr	r2, r1, r3
 16865 09b2 07F11C03 		add	r3, r7, #28
 16866 09b6 CC49     		ldr	r1, .L711
 16867 09b8 1846     		mov	r0, r3
 16868 09ba FFF7FEFF 		bl	sprintf
2436:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 378


 16869              		.loc 1 2436 0
 16870 09be 07F11C03 		add	r3, r7, #28
 16871 09c2 1946     		mov	r1, r3
 16872 09c4 7869     		ldr	r0, [r7, #20]
 16873 09c6 FFF7FEFF 		bl	strcat
2437:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16874              		.loc 1 2437 0
 16875 09ca D7F89430 		ldr	r3, [r7, #148]
 16876 09ce 022B     		cmp	r3, #2
 16877 09d0 0BD0     		beq	.L679
2438:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16878              		.loc 1 2438 0
 16879 09d2 7869     		ldr	r0, [r7, #20]
 16880 09d4 FFF7FEFF 		bl	strlen
 16881 09d8 0346     		mov	r3, r0
 16882 09da 1A46     		mov	r2, r3
 16883 09dc 7B69     		ldr	r3, [r7, #20]
 16884 09de 1344     		add	r3, r3, r2
 16885 09e0 C24A     		ldr	r2, .L711+4
 16886 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 16887 09e4 9278     		ldrb	r2, [r2, #2]
 16888 09e6 1980     		strh	r1, [r3]	@ unaligned
 16889 09e8 9A70     		strb	r2, [r3, #2]
 16890              	.L679:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16891              		.loc 1 2434 0 discriminator 2
 16892 09ea D7F89430 		ldr	r3, [r7, #148]
 16893 09ee 0133     		adds	r3, r3, #1
 16894 09f0 C7F89430 		str	r3, [r7, #148]
 16895              	.L678:
2434:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16896              		.loc 1 2434 0 is_stmt 0 discriminator 1
 16897 09f4 D7F89430 		ldr	r3, [r7, #148]
 16898 09f8 022B     		cmp	r3, #2
 16899 09fa BBDD     		ble	.L680
2439:..\src/command_processing.c ****             }
2440:..\src/command_processing.c ****         }
2441:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16900              		.loc 1 2441 0 is_stmt 1
 16901 09fc 7869     		ldr	r0, [r7, #20]
 16902 09fe FFF7FEFF 		bl	strlen
 16903 0a02 0346     		mov	r3, r0
 16904 0a04 1A46     		mov	r2, r3
 16905 0a06 7B69     		ldr	r3, [r7, #20]
 16906 0a08 1344     		add	r3, r3, r2
 16907 0a0a B94A     		ldr	r2, .L711+8
 16908 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
 16909 0a0e 9278     		ldrb	r2, [r2, #2]
 16910 0a10 1980     		strh	r1, [r3]	@ unaligned
 16911 0a12 9A70     		strb	r2, [r3, #2]
2442:..\src/command_processing.c ****             
2443:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 16912              		.loc 1 2443 0
 16913 0a14 7869     		ldr	r0, [r7, #20]
 16914 0a16 FFF7FEFF 		bl	strlen
 16915 0a1a 0346     		mov	r3, r0
 16916 0a1c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 379


 16917 0a1e 7B69     		ldr	r3, [r7, #20]
 16918 0a20 1344     		add	r3, r3, r2
 16919 0a22 B44A     		ldr	r2, .L711+12
 16920 0a24 1C46     		mov	r4, r3
 16921 0a26 1346     		mov	r3, r2
 16922 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 16923 0a2a 2060     		str	r0, [r4]	@ unaligned
 16924 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 16925 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 16926 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 16927 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2444:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16928              		.loc 1 2444 0
 16929 0a34 0023     		movs	r3, #0
 16930 0a36 C7F89430 		str	r3, [r7, #148]
 16931 0a3a 35E0     		b	.L681
 16932              	.L683:
2445:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16933              		.loc 1 2445 0
 16934 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16935 0a40 D7F88C10 		ldr	r1, [r7, #140]
 16936 0a44 1346     		mov	r3, r2
 16937 0a46 5B00     		lsls	r3, r3, #1
 16938 0a48 1344     		add	r3, r3, r2
 16939 0a4a 9B00     		lsls	r3, r3, #2
 16940 0a4c D7F89420 		ldr	r2, [r7, #148]
 16941 0a50 1344     		add	r3, r3, r2
 16942 0a52 6833     		adds	r3, r3, #104
 16943 0a54 9B00     		lsls	r3, r3, #2
 16944 0a56 0B44     		add	r3, r3, r1
 16945 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 16946 0a5a 1846     		mov	r0, r3
 16947 0a5c FFF7FEFF 		bl	__aeabi_f2d
 16948 0a60 0346     		mov	r3, r0
 16949 0a62 0C46     		mov	r4, r1
 16950 0a64 07F11C00 		add	r0, r7, #28
 16951 0a68 1A46     		mov	r2, r3
 16952 0a6a 2346     		mov	r3, r4
 16953 0a6c A249     		ldr	r1, .L711+16
 16954 0a6e FFF7FEFF 		bl	sprintf
2446:..\src/command_processing.c ****             strcat(info_string, str);
 16955              		.loc 1 2446 0
 16956 0a72 07F11C03 		add	r3, r7, #28
 16957 0a76 1946     		mov	r1, r3
 16958 0a78 7869     		ldr	r0, [r7, #20]
 16959 0a7a FFF7FEFF 		bl	strcat
2447:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16960              		.loc 1 2447 0
 16961 0a7e D7F89430 		ldr	r3, [r7, #148]
 16962 0a82 022B     		cmp	r3, #2
 16963 0a84 0BD0     		beq	.L682
2448:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16964              		.loc 1 2448 0
 16965 0a86 7869     		ldr	r0, [r7, #20]
 16966 0a88 FFF7FEFF 		bl	strlen
 16967 0a8c 0346     		mov	r3, r0
 16968 0a8e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 380


 16969 0a90 7B69     		ldr	r3, [r7, #20]
 16970 0a92 1344     		add	r3, r3, r2
 16971 0a94 954A     		ldr	r2, .L711+4
 16972 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 16973 0a98 9278     		ldrb	r2, [r2, #2]
 16974 0a9a 1980     		strh	r1, [r3]	@ unaligned
 16975 0a9c 9A70     		strb	r2, [r3, #2]
 16976              	.L682:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16977              		.loc 1 2444 0 discriminator 2
 16978 0a9e D7F89430 		ldr	r3, [r7, #148]
 16979 0aa2 0133     		adds	r3, r3, #1
 16980 0aa4 C7F89430 		str	r3, [r7, #148]
 16981              	.L681:
2444:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16982              		.loc 1 2444 0 is_stmt 0 discriminator 1
 16983 0aa8 D7F89430 		ldr	r3, [r7, #148]
 16984 0aac 022B     		cmp	r3, #2
 16985 0aae C5DD     		ble	.L683
2449:..\src/command_processing.c ****             }
2450:..\src/command_processing.c ****         }
2451:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 16986              		.loc 1 2451 0 is_stmt 1
 16987 0ab0 7869     		ldr	r0, [r7, #20]
 16988 0ab2 FFF7FEFF 		bl	strlen
 16989 0ab6 0346     		mov	r3, r0
 16990 0ab8 1A46     		mov	r2, r3
 16991 0aba 7B69     		ldr	r3, [r7, #20]
 16992 0abc 1344     		add	r3, r3, r2
 16993 0abe 8C4A     		ldr	r2, .L711+8
 16994 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 16995 0ac2 9278     		ldrb	r2, [r2, #2]
 16996 0ac4 1980     		strh	r1, [r3]	@ unaligned
 16997 0ac6 9A70     		strb	r2, [r3, #2]
2452:..\src/command_processing.c **** 
2453:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 16998              		.loc 1 2453 0
 16999 0ac8 D7F88430 		ldr	r3, [r7, #132]
 17000 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
 17001 0ace 1846     		mov	r0, r3
 17002 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 17003 0ad4 C7E90201 		strd	r0, [r7, #8]
 17004 0ad8 D7F88430 		ldr	r3, [r7, #132]
 17005 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 17006 0ade 1846     		mov	r0, r3
 17007 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 17008 0ae4 0446     		mov	r4, r0
 17009 0ae6 0D46     		mov	r5, r1
 17010 0ae8 D7F88430 		ldr	r3, [r7, #132]
 17011 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 17012 0aee 1846     		mov	r0, r3
 17013 0af0 FFF7FEFF 		bl	__aeabi_f2d
 17014 0af4 8046     		mov	r8, r0
 17015 0af6 8946     		mov	r9, r1
 17016 0af8 D7F88430 		ldr	r3, [r7, #132]
 17017 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 17018 0afe 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 381


 17019 0b00 FFF7FEFF 		bl	__aeabi_f2d
 17020 0b04 8246     		mov	r10, r0
 17021 0b06 8B46     		mov	fp, r1
 17022 0b08 D7F88430 		ldr	r3, [r7, #132]
 17023 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 17024 0b0e 1846     		mov	r0, r3
 17025 0b10 FFF7FEFF 		bl	__aeabi_f2d
 17026 0b14 C7E90001 		strd	r0, [r7]
 17027 0b18 D7F88430 		ldr	r3, [r7, #132]
 17028 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 17029 0b1e 1846     		mov	r0, r3
 17030 0b20 FFF7FEFF 		bl	__aeabi_f2d
 17031 0b24 0246     		mov	r2, r0
 17032 0b26 0B46     		mov	r3, r1
 17033 0b28 07F11C00 		add	r0, r7, #28
 17034 0b2c CDE90823 		strd	r2, [sp, #32]
 17035 0b30 D7E90012 		ldrd	r1, [r7]
 17036 0b34 CDE90612 		strd	r1, [sp, #24]
 17037 0b38 CDE904AB 		strd	r10, [sp, #16]
 17038 0b3c CDE90289 		strd	r8, [sp, #8]
 17039 0b40 CDE90045 		strd	r4, [sp]
 17040 0b44 D7E90223 		ldrd	r2, [r7, #8]
 17041 0b48 6C49     		ldr	r1, .L711+20
 17042 0b4a FFF7FEFF 		bl	sprintf
2454:..\src/command_processing.c **** 		strcat(info_string, str);
 17043              		.loc 1 2454 0
 17044 0b4e 07F11C03 		add	r3, r7, #28
 17045 0b52 1946     		mov	r1, r3
 17046 0b54 7869     		ldr	r0, [r7, #20]
 17047 0b56 FFF7FEFF 		bl	strcat
2455:..\src/command_processing.c **** 
2456:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 17048              		.loc 1 2456 0
 17049 0b5a D7F88430 		ldr	r3, [r7, #132]
 17050 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 17051 0b62 1A46     		mov	r2, r3
 17052 0b64 07F11C03 		add	r3, r7, #28
 17053 0b68 6549     		ldr	r1, .L711+24
 17054 0b6a 1846     		mov	r0, r3
 17055 0b6c FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c **** 		strcat(info_string, str);
 17056              		.loc 1 2457 0
 17057 0b70 07F11C03 		add	r3, r7, #28
 17058 0b74 1946     		mov	r1, r3
 17059 0b76 7869     		ldr	r0, [r7, #20]
 17060 0b78 FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 
2459:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 17061              		.loc 1 2459 0
 17062 0b7c D7F88430 		ldr	r3, [r7, #132]
 17063 0b80 596B     		ldr	r1, [r3, #52]
 17064 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17065 0b86 D7F88C00 		ldr	r0, [r7, #140]
 17066 0b8a 1346     		mov	r3, r2
 17067 0b8c 5B00     		lsls	r3, r3, #1
 17068 0b8e 1344     		add	r3, r3, r2
 17069 0b90 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 382


 17070 0b92 0344     		add	r3, r3, r0
 17071 0b94 03F29513 		addw	r3, r3, #405
 17072 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17073 0b9a 41FA03F4 		asr	r4, r1, r3
 17074 0b9e D7F88430 		ldr	r3, [r7, #132]
 17075 0ba2 996B     		ldr	r1, [r3, #56]
 17076 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17077 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 17078 0bac 1346     		mov	r3, r2
 17079 0bae 5B00     		lsls	r3, r3, #1
 17080 0bb0 1344     		add	r3, r3, r2
 17081 0bb2 1B01     		lsls	r3, r3, #4
 17082 0bb4 0344     		add	r3, r3, r0
 17083 0bb6 03F29513 		addw	r3, r3, #405
 17084 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17085 0bbc 41FA03F3 		asr	r3, r1, r3
 17086 0bc0 07F11C00 		add	r0, r7, #28
 17087 0bc4 2246     		mov	r2, r4
 17088 0bc6 4F49     		ldr	r1, .L711+28
 17089 0bc8 FFF7FEFF 		bl	sprintf
2460:..\src/command_processing.c **** 		strcat(info_string, str);
 17090              		.loc 1 2460 0
 17091 0bcc 07F11C03 		add	r3, r7, #28
 17092 0bd0 1946     		mov	r1, r3
 17093 0bd2 7869     		ldr	r0, [r7, #20]
 17094 0bd4 FFF7FEFF 		bl	strcat
2461:..\src/command_processing.c **** 
2462:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 17095              		.loc 1 2462 0
 17096 0bd8 D7F88430 		ldr	r3, [r7, #132]
 17097 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 17098 0be0 1A46     		mov	r2, r3
 17099 0be2 07F11C03 		add	r3, r7, #28
 17100 0be6 4849     		ldr	r1, .L711+32
 17101 0be8 1846     		mov	r0, r3
 17102 0bea FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 17103              		.loc 1 2463 0
 17104 0bee 07F11C03 		add	r3, r7, #28
 17105 0bf2 1946     		mov	r1, r3
 17106 0bf4 7869     		ldr	r0, [r7, #20]
 17107 0bf6 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 
2465:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 17108              		.loc 1 2465 0
 17109 0bfa D7F88430 		ldr	r3, [r7, #132]
 17110 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 17111 0c02 022B     		cmp	r3, #2
 17112 0c04 12D0     		beq	.L684
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17113              		.loc 1 2466 0 discriminator 1
 17114 0c06 D7F88430 		ldr	r3, [r7, #132]
 17115 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2465:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17116              		.loc 1 2465 0 discriminator 1
 17117 0c0e 032B     		cmp	r3, #3
 17118 0c10 0CD0     		beq	.L684
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 383


2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 17119              		.loc 1 2467 0
 17120 0c12 D7F88430 		ldr	r3, [r7, #132]
 17121 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2466:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17122              		.loc 1 2466 0
 17123 0c1a 042B     		cmp	r3, #4
 17124 0c1c 06D0     		beq	.L684
2468:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 17125              		.loc 1 2468 0
 17126 0c1e D7F88430 		ldr	r3, [r7, #132]
 17127 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2467:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 17128              		.loc 1 2467 0
 17129 0c26 052B     		cmp	r3, #5
 17130 0c28 40F0AA80 		bne	.L685
 17131              	.L684:
2469:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 17132              		.loc 1 2469 0
 17133 0c2c D7F88C30 		ldr	r3, [r7, #140]
 17134 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 17135 0c34 1A46     		mov	r2, r3
 17136 0c36 D7F88C30 		ldr	r3, [r7, #140]
 17137 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 17138 0c3e 07F11C00 		add	r0, r7, #28
 17139 0c42 3249     		ldr	r1, .L711+36
 17140 0c44 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 17141              		.loc 1 2470 0
 17142 0c48 07F11C03 		add	r3, r7, #28
 17143 0c4c 1946     		mov	r1, r3
 17144 0c4e 7869     		ldr	r0, [r7, #20]
 17145 0c50 FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17146              		.loc 1 2471 0
 17147 0c54 7869     		ldr	r0, [r7, #20]
 17148 0c56 FFF7FEFF 		bl	strlen
 17149 0c5a 0346     		mov	r3, r0
 17150 0c5c 1A46     		mov	r2, r3
 17151 0c5e 7B69     		ldr	r3, [r7, #20]
 17152 0c60 1344     		add	r3, r3, r2
 17153 0c62 234A     		ldr	r2, .L711+8
 17154 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 17155 0c66 9278     		ldrb	r2, [r2, #2]
 17156 0c68 1980     		strh	r1, [r3]	@ unaligned
 17157 0c6a 9A70     		strb	r2, [r3, #2]
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 17158              		.loc 1 2473 0
 17159 0c6c D7F88C30 		ldr	r3, [r7, #140]
 17160 0c70 D3F8F421 		ldr	r2, [r3, #500]
 17161 0c74 D7F88C30 		ldr	r3, [r7, #140]
 17162 0c78 D3F8F831 		ldr	r3, [r3, #504]
 17163 0c7c 07F11C00 		add	r0, r7, #28
 17164 0c80 2349     		ldr	r1, .L711+40
 17165 0c82 FFF7FEFF 		bl	sprintf
2474:..\src/command_processing.c **** 			strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 384


 17166              		.loc 1 2474 0
 17167 0c86 07F11C03 		add	r3, r7, #28
 17168 0c8a 1946     		mov	r1, r3
 17169 0c8c 7869     		ldr	r0, [r7, #20]
 17170 0c8e FFF7FEFF 		bl	strcat
2475:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17171              		.loc 1 2475 0
 17172 0c92 7869     		ldr	r0, [r7, #20]
 17173 0c94 FFF7FEFF 		bl	strlen
 17174 0c98 0346     		mov	r3, r0
 17175 0c9a 1A46     		mov	r2, r3
 17176 0c9c 7B69     		ldr	r3, [r7, #20]
 17177 0c9e 1344     		add	r3, r3, r2
 17178 0ca0 134A     		ldr	r2, .L711+8
 17179 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 17180 0ca4 9278     		ldrb	r2, [r2, #2]
 17181 0ca6 1980     		strh	r1, [r3]	@ unaligned
 17182 0ca8 9A70     		strb	r2, [r3, #2]
2476:..\src/command_processing.c **** 
2477:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 17183              		.loc 1 2477 0
 17184 0caa D7F88C30 		ldr	r3, [r7, #140]
 17185 0cae 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17186 0cb2 002B     		cmp	r3, #0
 17187 0cb4 30D0     		beq	.L686
2478:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 17188              		.loc 1 2478 0
 17189 0cb6 7869     		ldr	r0, [r7, #20]
 17190 0cb8 FFF7FEFF 		bl	strlen
 17191 0cbc 0346     		mov	r3, r0
 17192 0cbe 1A46     		mov	r2, r3
 17193 0cc0 7B69     		ldr	r3, [r7, #20]
 17194 0cc2 1344     		add	r3, r3, r2
 17195 0cc4 134A     		ldr	r2, .L711+44
 17196 0cc6 1D46     		mov	r5, r3
 17197 0cc8 1446     		mov	r4, r2
 17198 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17199 0ccc 2860     		str	r0, [r5]	@ unaligned
 17200 0cce 6960     		str	r1, [r5, #4]	@ unaligned
 17201 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 17202 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 17203 0cd4 03CC     		ldmia	r4!, {r0, r1}
 17204 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 17205 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 17206 0cda 2388     		ldrh	r3, [r4]	@ unaligned
 17207 0cdc A278     		ldrb	r2, [r4, #2]
 17208 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
 17209 0ce0 1346     		mov	r3, r2
 17210 0ce2 AB76     		strb	r3, [r5, #26]
 17211 0ce4 2CE0     		b	.L687
 17212              	.L712:
 17213 0ce6 00BF     		.align	2
 17214              	.L711:
 17215 0ce8 9C130000 		.word	.LC191
 17216 0cec A0100000 		.word	.LC162
 17217 0cf0 AC0E0000 		.word	.LC132
 17218 0cf4 C4180000 		.word	.LC242
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 385


 17219 0cf8 BC130000 		.word	.LC193
 17220 0cfc D4180000 		.word	.LC243
 17221 0d00 10190000 		.word	.LC244
 17222 0d04 2C190000 		.word	.LC245
 17223 0d08 5C140000 		.word	.LC199
 17224 0d0c 84140000 		.word	.LC201
 17225 0d10 A8140000 		.word	.LC202
 17226 0d14 F8140000 		.word	.LC205
 17227              	.L686:
2479:..\src/command_processing.c **** 			else
2480:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 17228              		.loc 1 2480 0
 17229 0d18 7869     		ldr	r0, [r7, #20]
 17230 0d1a FFF7FEFF 		bl	strlen
 17231 0d1e 0346     		mov	r3, r0
 17232 0d20 1A46     		mov	r2, r3
 17233 0d22 7B69     		ldr	r3, [r7, #20]
 17234 0d24 1344     		add	r3, r3, r2
 17235 0d26 D04A     		ldr	r2, .L713
 17236 0d28 1D46     		mov	r5, r3
 17237 0d2a 1446     		mov	r4, r2
 17238 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17239 0d2e 2860     		str	r0, [r5]	@ unaligned
 17240 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 17241 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 17242 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 17243 0d36 03CC     		ldmia	r4!, {r0, r1}
 17244 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 17245 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 17246 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 17247 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 17248              	.L687:
2481:..\src/command_processing.c **** 
2482:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 17249              		.loc 1 2482 0
 17250 0d40 D7F88C30 		ldr	r3, [r7, #140]
 17251 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17252 0d48 1A46     		mov	r2, r3
 17253 0d4a D7F88C30 		ldr	r3, [r7, #140]
 17254 0d4e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17255 0d52 07F11C00 		add	r0, r7, #28
 17256 0d56 C549     		ldr	r1, .L713+4
 17257 0d58 FFF7FEFF 		bl	sprintf
2483:..\src/command_processing.c **** 			strcat(info_string, str);
 17258              		.loc 1 2483 0
 17259 0d5c 07F11C03 		add	r3, r7, #28
 17260 0d60 1946     		mov	r1, r3
 17261 0d62 7869     		ldr	r0, [r7, #20]
 17262 0d64 FFF7FEFF 		bl	strcat
2484:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17263              		.loc 1 2484 0
 17264 0d68 7869     		ldr	r0, [r7, #20]
 17265 0d6a FFF7FEFF 		bl	strlen
 17266 0d6e 0346     		mov	r3, r0
 17267 0d70 1A46     		mov	r2, r3
 17268 0d72 7B69     		ldr	r3, [r7, #20]
 17269 0d74 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 386


 17270 0d76 BE4A     		ldr	r2, .L713+8
 17271 0d78 1188     		ldrh	r1, [r2]	@ unaligned
 17272 0d7a 9278     		ldrb	r2, [r2, #2]
 17273 0d7c 1980     		strh	r1, [r3]	@ unaligned
 17274 0d7e 9A70     		strb	r2, [r3, #2]
 17275              	.L685:
 17276              	.LBE20:
2318:..\src/command_processing.c ****             
 17277              		.loc 1 2318 0 discriminator 2
 17278 0d80 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17279 0d84 0133     		adds	r3, r3, #1
 17280 0d86 87F89330 		strb	r3, [r7, #147]
 17281              	.L645:
2318:..\src/command_processing.c ****             
 17282              		.loc 1 2318 0 is_stmt 0 discriminator 1
 17283 0d8a D7F88C30 		ldr	r3, [r7, #140]
 17284 0d8e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17285 0d92 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17286 0d96 9A42     		cmp	r2, r3
 17287 0d98 7FF6BBA9 		bls	.L688
 17288              	.LBE19:
2485:..\src/command_processing.c **** 		}
2486:..\src/command_processing.c **** 	}
2487:..\src/command_processing.c **** 	 
2488:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 17289              		.loc 1 2488 0 is_stmt 1
 17290 0d9c D7F88C30 		ldr	r3, [r7, #140]
 17291 0da0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17292 0da4 002B     		cmp	r3, #0
 17293 0da6 63D0     		beq	.L689
2489:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17294              		.loc 1 2489 0
 17295 0da8 D7F88C30 		ldr	r3, [r7, #140]
 17296 0dac D3F8A422 		ldr	r2, [r3, #676]
 17297 0db0 07F11C03 		add	r3, r7, #28
 17298 0db4 AF49     		ldr	r1, .L713+12
 17299 0db6 1846     		mov	r0, r3
 17300 0db8 FFF7FEFF 		bl	sprintf
2490:..\src/command_processing.c ****         strcat(info_string, str);
 17301              		.loc 1 2490 0
 17302 0dbc 07F11C03 		add	r3, r7, #28
 17303 0dc0 1946     		mov	r1, r3
 17304 0dc2 7869     		ldr	r0, [r7, #20]
 17305 0dc4 FFF7FEFF 		bl	strcat
2491:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17306              		.loc 1 2491 0
 17307 0dc8 7869     		ldr	r0, [r7, #20]
 17308 0dca FFF7FEFF 		bl	strlen
 17309 0dce 0346     		mov	r3, r0
 17310 0dd0 1A46     		mov	r2, r3
 17311 0dd2 7B69     		ldr	r3, [r7, #20]
 17312 0dd4 1344     		add	r3, r3, r2
 17313 0dd6 A64A     		ldr	r2, .L713+8
 17314 0dd8 1188     		ldrh	r1, [r2]	@ unaligned
 17315 0dda 9278     		ldrb	r2, [r2, #2]
 17316 0ddc 1980     		strh	r1, [r3]	@ unaligned
 17317 0dde 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 387


2492:..\src/command_processing.c ****         
2493:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17318              		.loc 1 2493 0
 17319 0de0 D7F88C30 		ldr	r3, [r7, #140]
 17320 0de4 D3F8A822 		ldr	r2, [r3, #680]
 17321 0de8 07F11C03 		add	r3, r7, #28
 17322 0dec A249     		ldr	r1, .L713+16
 17323 0dee 1846     		mov	r0, r3
 17324 0df0 FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****         strcat(info_string, str);
 17325              		.loc 1 2494 0
 17326 0df4 07F11C03 		add	r3, r7, #28
 17327 0df8 1946     		mov	r1, r3
 17328 0dfa 7869     		ldr	r0, [r7, #20]
 17329 0dfc FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17330              		.loc 1 2495 0
 17331 0e00 7869     		ldr	r0, [r7, #20]
 17332 0e02 FFF7FEFF 		bl	strlen
 17333 0e06 0346     		mov	r3, r0
 17334 0e08 1A46     		mov	r2, r3
 17335 0e0a 7B69     		ldr	r3, [r7, #20]
 17336 0e0c 1344     		add	r3, r3, r2
 17337 0e0e 984A     		ldr	r2, .L713+8
 17338 0e10 1188     		ldrh	r1, [r2]	@ unaligned
 17339 0e12 9278     		ldrb	r2, [r2, #2]
 17340 0e14 1980     		strh	r1, [r3]	@ unaligned
 17341 0e16 9A70     		strb	r2, [r3, #2]
2496:..\src/command_processing.c ****         
2497:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 17342              		.loc 1 2497 0
 17343 0e18 D7F88C30 		ldr	r3, [r7, #140]
 17344 0e1c D3F8A022 		ldr	r2, [r3, #672]
 17345 0e20 D7F88C30 		ldr	r3, [r7, #140]
 17346 0e24 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17347 0e28 1846     		mov	r0, r3
 17348 0e2a D7F88C10 		ldr	r1, [r7, #140]
 17349 0e2e 0346     		mov	r3, r0
 17350 0e30 5B00     		lsls	r3, r3, #1
 17351 0e32 0344     		add	r3, r3, r0
 17352 0e34 1B01     		lsls	r3, r3, #4
 17353 0e36 0B44     		add	r3, r3, r1
 17354 0e38 03F29513 		addw	r3, r3, #405
 17355 0e3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17356 0e3e 1A41     		asrs	r2, r2, r3
 17357 0e40 07F11C03 		add	r3, r7, #28
 17358 0e44 8D49     		ldr	r1, .L713+20
 17359 0e46 1846     		mov	r0, r3
 17360 0e48 FFF7FEFF 		bl	sprintf
2498:..\src/command_processing.c ****         strcat(info_string, str);
 17361              		.loc 1 2498 0
 17362 0e4c 07F11C03 		add	r3, r7, #28
 17363 0e50 1946     		mov	r1, r3
 17364 0e52 7869     		ldr	r0, [r7, #20]
 17365 0e54 FFF7FEFF 		bl	strcat
2499:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 17366              		.loc 1 2499 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 388


 17367 0e58 7869     		ldr	r0, [r7, #20]
 17368 0e5a FFF7FEFF 		bl	strlen
 17369 0e5e 0346     		mov	r3, r0
 17370 0e60 1A46     		mov	r2, r3
 17371 0e62 7B69     		ldr	r3, [r7, #20]
 17372 0e64 1344     		add	r3, r3, r2
 17373 0e66 824A     		ldr	r2, .L713+8
 17374 0e68 1188     		ldrh	r1, [r2]	@ unaligned
 17375 0e6a 9278     		ldrb	r2, [r2, #2]
 17376 0e6c 1980     		strh	r1, [r3]	@ unaligned
 17377 0e6e 9A70     		strb	r2, [r3, #2]
 17378              	.L689:
2500:..\src/command_processing.c ****     }
2501:..\src/command_processing.c **** 	
2502:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 17379              		.loc 1 2502 0
 17380 0e70 D7F88C30 		ldr	r3, [r7, #140]
 17381 0e74 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17382 0e78 002B     		cmp	r3, #0
 17383 0e7a 00F0CB81 		beq	.L704
2503:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17384              		.loc 1 2503 0
 17385 0e7e 804B     		ldr	r3, .L713+24
 17386 0e80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17387 0e82 1A46     		mov	r2, r3
 17388 0e84 07F11C03 		add	r3, r7, #28
 17389 0e88 7E49     		ldr	r1, .L713+28
 17390 0e8a 1846     		mov	r0, r3
 17391 0e8c FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c **** 		strcat(info_string, str);
 17392              		.loc 1 2504 0
 17393 0e90 07F11C03 		add	r3, r7, #28
 17394 0e94 1946     		mov	r1, r3
 17395 0e96 7869     		ldr	r0, [r7, #20]
 17396 0e98 FFF7FEFF 		bl	strcat
2505:..\src/command_processing.c **** 		
2506:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17397              		.loc 1 2506 0
 17398 0e9c 7869     		ldr	r0, [r7, #20]
 17399 0e9e FFF7FEFF 		bl	strlen
 17400 0ea2 0346     		mov	r3, r0
 17401 0ea4 1A46     		mov	r2, r3
 17402 0ea6 7B69     		ldr	r3, [r7, #20]
 17403 0ea8 1344     		add	r3, r3, r2
 17404 0eaa 714A     		ldr	r2, .L713+8
 17405 0eac 1188     		ldrh	r1, [r2]	@ unaligned
 17406 0eae 9278     		ldrb	r2, [r2, #2]
 17407 0eb0 1980     		strh	r1, [r3]	@ unaligned
 17408 0eb2 9A70     		strb	r2, [r3, #2]
2507:..\src/command_processing.c **** 		
2508:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 17409              		.loc 1 2508 0
 17410 0eb4 7869     		ldr	r0, [r7, #20]
 17411 0eb6 FFF7FEFF 		bl	strlen
 17412 0eba 0346     		mov	r3, r0
 17413 0ebc 1A46     		mov	r2, r3
 17414 0ebe 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 389


 17415 0ec0 1344     		add	r3, r3, r2
 17416 0ec2 714A     		ldr	r2, .L713+32
 17417 0ec4 1D46     		mov	r5, r3
 17418 0ec6 1446     		mov	r4, r2
 17419 0ec8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17420 0eca 2860     		str	r0, [r5]	@ unaligned
 17421 0ecc 6960     		str	r1, [r5, #4]	@ unaligned
 17422 0ece AA60     		str	r2, [r5, #8]	@ unaligned
 17423 0ed0 EB60     		str	r3, [r5, #12]	@ unaligned
 17424 0ed2 2068     		ldr	r0, [r4]	@ unaligned
 17425 0ed4 2861     		str	r0, [r5, #16]	@ unaligned
 17426 0ed6 2379     		ldrb	r3, [r4, #4]
 17427 0ed8 2B75     		strb	r3, [r5, #20]
2509:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 17428              		.loc 1 2509 0
 17429 0eda 0023     		movs	r3, #0
 17430 0edc C7F89430 		str	r3, [r7, #148]
 17431 0ee0 84E1     		b	.L691
 17432              	.L702:
2510:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17433              		.loc 1 2510 0
 17434 0ee2 6A4A     		ldr	r2, .L713+36
 17435 0ee4 D7F89430 		ldr	r3, [r7, #148]
 17436 0ee8 1344     		add	r3, r3, r2
 17437 0eea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17438 0eec 07F11C00 		add	r0, r7, #28
 17439 0ef0 D7F89420 		ldr	r2, [r7, #148]
 17440 0ef4 6649     		ldr	r1, .L713+40
 17441 0ef6 FFF7FEFF 		bl	sprintf
2511:..\src/command_processing.c **** 			strcat(info_string, str);
 17442              		.loc 1 2511 0
 17443 0efa 07F11C03 		add	r3, r7, #28
 17444 0efe 1946     		mov	r1, r3
 17445 0f00 7869     		ldr	r0, [r7, #20]
 17446 0f02 FFF7FEFF 		bl	strcat
2512:..\src/command_processing.c **** 			
2513:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 17447              		.loc 1 2513 0
 17448 0f06 07F11C03 		add	r3, r7, #28
 17449 0f0a 624A     		ldr	r2, .L713+44
 17450 0f0c 1C46     		mov	r4, r3
 17451 0f0e 1546     		mov	r5, r2
 17452 0f10 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17453 0f12 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17454 0f14 2B68     		ldr	r3, [r5]
 17455 0f16 2380     		strh	r3, [r4]	@ movhi
2514:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17456              		.loc 1 2514 0
 17457 0f18 5C4A     		ldr	r2, .L713+36
 17458 0f1a D7F89430 		ldr	r3, [r7, #148]
 17459 0f1e 1344     		add	r3, r3, r2
 17460 0f20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17461 0f22 1946     		mov	r1, r3
 17462 0f24 D7F88C20 		ldr	r2, [r7, #140]
 17463 0f28 0B46     		mov	r3, r1
 17464 0f2a 9B00     		lsls	r3, r3, #2
 17465 0f2c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 390


 17466 0f2e 1344     		add	r3, r3, r2
 17467 0f30 03F20223 		addw	r3, r3, #514
 17468 0f34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17469 0f36 002B     		cmp	r3, #0
 17470 0f38 0FD0     		beq	.L692
2515:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17471              		.loc 1 2515 0
 17472 0f3a 07F11C03 		add	r3, r7, #28
 17473 0f3e 1846     		mov	r0, r3
 17474 0f40 FFF7FEFF 		bl	strlen
 17475 0f44 0346     		mov	r3, r0
 17476 0f46 1A46     		mov	r2, r3
 17477 0f48 07F11C03 		add	r3, r7, #28
 17478 0f4c 1344     		add	r3, r3, r2
 17479 0f4e 524A     		ldr	r2, .L713+48
 17480 0f50 1068     		ldr	r0, [r2]	@ unaligned
 17481 0f52 1860     		str	r0, [r3]	@ unaligned
 17482 0f54 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17483 0f56 9A80     		strh	r2, [r3, #4]	@ unaligned
 17484 0f58 0EE0     		b	.L693
 17485              	.L692:
2516:..\src/command_processing.c **** 			else
2517:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17486              		.loc 1 2517 0
 17487 0f5a 07F11C03 		add	r3, r7, #28
 17488 0f5e 1846     		mov	r0, r3
 17489 0f60 FFF7FEFF 		bl	strlen
 17490 0f64 0346     		mov	r3, r0
 17491 0f66 1A46     		mov	r2, r3
 17492 0f68 07F11C03 		add	r3, r7, #28
 17493 0f6c 1344     		add	r3, r3, r2
 17494 0f6e 4B4A     		ldr	r2, .L713+52
 17495 0f70 1068     		ldr	r0, [r2]	@ unaligned
 17496 0f72 1860     		str	r0, [r3]	@ unaligned
 17497 0f74 1279     		ldrb	r2, [r2, #4]
 17498 0f76 1A71     		strb	r2, [r3, #4]
 17499              	.L693:
2518:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 17500              		.loc 1 2518 0
 17501 0f78 07F11C03 		add	r3, r7, #28
 17502 0f7c 1846     		mov	r0, r3
 17503 0f7e FFF7FEFF 		bl	strlen
 17504 0f82 0346     		mov	r3, r0
 17505 0f84 1A46     		mov	r2, r3
 17506 0f86 07F11C03 		add	r3, r7, #28
 17507 0f8a 1344     		add	r3, r3, r2
 17508 0f8c 444A     		ldr	r2, .L713+56
 17509 0f8e 1C46     		mov	r4, r3
 17510 0f90 1346     		mov	r3, r2
 17511 0f92 07CB     		ldmia	r3!, {r0, r1, r2}
 17512 0f94 2060     		str	r0, [r4]	@ unaligned
 17513 0f96 6160     		str	r1, [r4, #4]	@ unaligned
 17514 0f98 A260     		str	r2, [r4, #8]	@ unaligned
 17515 0f9a 1B88     		ldrh	r3, [r3]	@ unaligned
 17516 0f9c A381     		strh	r3, [r4, #12]	@ unaligned
2519:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17517              		.loc 1 2519 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 391


 17518 0f9e 3B4A     		ldr	r2, .L713+36
 17519 0fa0 D7F89430 		ldr	r3, [r7, #148]
 17520 0fa4 1344     		add	r3, r3, r2
 17521 0fa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17522 0fa8 1946     		mov	r1, r3
 17523 0faa D7F88C20 		ldr	r2, [r7, #140]
 17524 0fae 0B46     		mov	r3, r1
 17525 0fb0 9B00     		lsls	r3, r3, #2
 17526 0fb2 0B44     		add	r3, r3, r1
 17527 0fb4 1344     		add	r3, r3, r2
 17528 0fb6 03F20323 		addw	r3, r3, #515
 17529 0fba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17530 0fbc 002B     		cmp	r3, #0
 17531 0fbe 0FD0     		beq	.L694
2520:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17532              		.loc 1 2520 0
 17533 0fc0 07F11C03 		add	r3, r7, #28
 17534 0fc4 1846     		mov	r0, r3
 17535 0fc6 FFF7FEFF 		bl	strlen
 17536 0fca 0346     		mov	r3, r0
 17537 0fcc 1A46     		mov	r2, r3
 17538 0fce 07F11C03 		add	r3, r7, #28
 17539 0fd2 1344     		add	r3, r3, r2
 17540 0fd4 304A     		ldr	r2, .L713+48
 17541 0fd6 1068     		ldr	r0, [r2]	@ unaligned
 17542 0fd8 1860     		str	r0, [r3]	@ unaligned
 17543 0fda 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17544 0fdc 9A80     		strh	r2, [r3, #4]	@ unaligned
 17545 0fde 0EE0     		b	.L695
 17546              	.L694:
2521:..\src/command_processing.c **** 			else
2522:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17547              		.loc 1 2522 0
 17548 0fe0 07F11C03 		add	r3, r7, #28
 17549 0fe4 1846     		mov	r0, r3
 17550 0fe6 FFF7FEFF 		bl	strlen
 17551 0fea 0346     		mov	r3, r0
 17552 0fec 1A46     		mov	r2, r3
 17553 0fee 07F11C03 		add	r3, r7, #28
 17554 0ff2 1344     		add	r3, r3, r2
 17555 0ff4 294A     		ldr	r2, .L713+52
 17556 0ff6 1068     		ldr	r0, [r2]	@ unaligned
 17557 0ff8 1860     		str	r0, [r3]	@ unaligned
 17558 0ffa 1279     		ldrb	r2, [r2, #4]
 17559 0ffc 1A71     		strb	r2, [r3, #4]
 17560              	.L695:
2523:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 17561              		.loc 1 2523 0
 17562 0ffe 07F11C03 		add	r3, r7, #28
 17563 1002 1846     		mov	r0, r3
 17564 1004 FFF7FEFF 		bl	strlen
 17565 1008 0346     		mov	r3, r0
 17566 100a 1A46     		mov	r2, r3
 17567 100c 07F11C03 		add	r3, r7, #28
 17568 1010 1344     		add	r3, r3, r2
 17569 1012 244A     		ldr	r2, .L713+60
 17570 1014 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 392


 17571 1016 1446     		mov	r4, r2
 17572 1018 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17573 101a 2860     		str	r0, [r5]	@ unaligned
 17574 101c 6960     		str	r1, [r5, #4]	@ unaligned
 17575 101e AA60     		str	r2, [r5, #8]	@ unaligned
 17576 1020 EB60     		str	r3, [r5, #12]	@ unaligned
 17577 1022 2378     		ldrb	r3, [r4]
 17578 1024 2B74     		strb	r3, [r5, #16]
2524:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17579              		.loc 1 2524 0
 17580 1026 194A     		ldr	r2, .L713+36
 17581 1028 D7F89430 		ldr	r3, [r7, #148]
 17582 102c 1344     		add	r3, r3, r2
 17583 102e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17584 1030 1946     		mov	r1, r3
 17585 1032 D7F88C20 		ldr	r2, [r7, #140]
 17586 1036 0B46     		mov	r3, r1
 17587 1038 9B00     		lsls	r3, r3, #2
 17588 103a 0B44     		add	r3, r3, r1
 17589 103c 1344     		add	r3, r3, r2
 17590 103e 03F50173 		add	r3, r3, #516
 17591 1042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17592 1044 002B     		cmp	r3, #0
 17593 1046 2FD0     		beq	.L696
2525:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17594              		.loc 1 2525 0
 17595 1048 07F11C03 		add	r3, r7, #28
 17596 104c 1846     		mov	r0, r3
 17597 104e FFF7FEFF 		bl	strlen
 17598 1052 0346     		mov	r3, r0
 17599 1054 1A46     		mov	r2, r3
 17600 1056 07F11C03 		add	r3, r7, #28
 17601 105a 1344     		add	r3, r3, r2
 17602 105c 0E4A     		ldr	r2, .L713+48
 17603 105e 1068     		ldr	r0, [r2]	@ unaligned
 17604 1060 1860     		str	r0, [r3]	@ unaligned
 17605 1062 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17606 1064 9A80     		strh	r2, [r3, #4]	@ unaligned
 17607 1066 2EE0     		b	.L697
 17608              	.L714:
 17609              		.align	2
 17610              	.L713:
 17611 1068 14150000 		.word	.LC206
 17612 106c 30150000 		.word	.LC207
 17613 1070 AC0E0000 		.word	.LC132
 17614 1074 8C150000 		.word	.LC211
 17615 1078 A8150000 		.word	.LC212
 17616 107c D0150000 		.word	.LC213
 17617 1080 00000000 		.word	N_IMU_Connected
 17618 1084 E4150000 		.word	.LC214
 17619 1088 F8150000 		.word	.LC215
 17620 108c 00000000 		.word	IMU_connected
 17621 1090 10160000 		.word	.LC216
 17622 1094 24160000 		.word	.LC217
 17623 1098 2C100000 		.word	.LC153
 17624 109c 34100000 		.word	.LC154
 17625 10a0 38160000 		.word	.LC218
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 393


 17626 10a4 48160000 		.word	.LC219
 17627              	.L696:
2526:..\src/command_processing.c **** 			else
2527:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17628              		.loc 1 2527 0
 17629 10a8 07F11C03 		add	r3, r7, #28
 17630 10ac 1846     		mov	r0, r3
 17631 10ae FFF7FEFF 		bl	strlen
 17632 10b2 0346     		mov	r3, r0
 17633 10b4 1A46     		mov	r2, r3
 17634 10b6 07F11C03 		add	r3, r7, #28
 17635 10ba 1344     		add	r3, r3, r2
 17636 10bc 584A     		ldr	r2, .L715
 17637 10be 1068     		ldr	r0, [r2]	@ unaligned
 17638 10c0 1860     		str	r0, [r3]	@ unaligned
 17639 10c2 1279     		ldrb	r2, [r2, #4]
 17640 10c4 1A71     		strb	r2, [r3, #4]
 17641              	.L697:
2528:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 17642              		.loc 1 2528 0
 17643 10c6 07F11C03 		add	r3, r7, #28
 17644 10ca 1846     		mov	r0, r3
 17645 10cc FFF7FEFF 		bl	strlen
 17646 10d0 0346     		mov	r3, r0
 17647 10d2 1A46     		mov	r2, r3
 17648 10d4 07F11C03 		add	r3, r7, #28
 17649 10d8 1344     		add	r3, r3, r2
 17650 10da 524A     		ldr	r2, .L715+4
 17651 10dc 1C46     		mov	r4, r3
 17652 10de 1346     		mov	r3, r2
 17653 10e0 07CB     		ldmia	r3!, {r0, r1, r2}
 17654 10e2 2060     		str	r0, [r4]	@ unaligned
 17655 10e4 6160     		str	r1, [r4, #4]	@ unaligned
 17656 10e6 A260     		str	r2, [r4, #8]	@ unaligned
 17657 10e8 1B88     		ldrh	r3, [r3]	@ unaligned
 17658 10ea A381     		strh	r3, [r4, #12]	@ unaligned
2529:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17659              		.loc 1 2529 0
 17660 10ec 4E4A     		ldr	r2, .L715+8
 17661 10ee D7F89430 		ldr	r3, [r7, #148]
 17662 10f2 1344     		add	r3, r3, r2
 17663 10f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17664 10f6 1946     		mov	r1, r3
 17665 10f8 D7F88C20 		ldr	r2, [r7, #140]
 17666 10fc 0B46     		mov	r3, r1
 17667 10fe 9B00     		lsls	r3, r3, #2
 17668 1100 0B44     		add	r3, r3, r1
 17669 1102 1344     		add	r3, r3, r2
 17670 1104 03F20523 		addw	r3, r3, #517
 17671 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17672 110a 002B     		cmp	r3, #0
 17673 110c 0FD0     		beq	.L698
2530:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17674              		.loc 1 2530 0
 17675 110e 07F11C03 		add	r3, r7, #28
 17676 1112 1846     		mov	r0, r3
 17677 1114 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 394


 17678 1118 0346     		mov	r3, r0
 17679 111a 1A46     		mov	r2, r3
 17680 111c 07F11C03 		add	r3, r7, #28
 17681 1120 1344     		add	r3, r3, r2
 17682 1122 424A     		ldr	r2, .L715+12
 17683 1124 1068     		ldr	r0, [r2]	@ unaligned
 17684 1126 1860     		str	r0, [r3]	@ unaligned
 17685 1128 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17686 112a 9A80     		strh	r2, [r3, #4]	@ unaligned
 17687 112c 0EE0     		b	.L699
 17688              	.L698:
2531:..\src/command_processing.c **** 			else
2532:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17689              		.loc 1 2532 0
 17690 112e 07F11C03 		add	r3, r7, #28
 17691 1132 1846     		mov	r0, r3
 17692 1134 FFF7FEFF 		bl	strlen
 17693 1138 0346     		mov	r3, r0
 17694 113a 1A46     		mov	r2, r3
 17695 113c 07F11C03 		add	r3, r7, #28
 17696 1140 1344     		add	r3, r3, r2
 17697 1142 374A     		ldr	r2, .L715
 17698 1144 1068     		ldr	r0, [r2]	@ unaligned
 17699 1146 1860     		str	r0, [r3]	@ unaligned
 17700 1148 1279     		ldrb	r2, [r2, #4]
 17701 114a 1A71     		strb	r2, [r3, #4]
 17702              	.L699:
2533:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 17703              		.loc 1 2533 0
 17704 114c 07F11C03 		add	r3, r7, #28
 17705 1150 1846     		mov	r0, r3
 17706 1152 FFF7FEFF 		bl	strlen
 17707 1156 0346     		mov	r3, r0
 17708 1158 1A46     		mov	r2, r3
 17709 115a 07F11C03 		add	r3, r7, #28
 17710 115e 1344     		add	r3, r3, r2
 17711 1160 334A     		ldr	r2, .L715+16
 17712 1162 1C46     		mov	r4, r3
 17713 1164 1346     		mov	r3, r2
 17714 1166 07CB     		ldmia	r3!, {r0, r1, r2}
 17715 1168 2060     		str	r0, [r4]	@ unaligned
 17716 116a 6160     		str	r1, [r4, #4]	@ unaligned
 17717 116c A260     		str	r2, [r4, #8]	@ unaligned
 17718 116e 1A88     		ldrh	r2, [r3]	@ unaligned
 17719 1170 9B78     		ldrb	r3, [r3, #2]
 17720 1172 A281     		strh	r2, [r4, #12]	@ unaligned
 17721 1174 A373     		strb	r3, [r4, #14]
2534:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17722              		.loc 1 2534 0
 17723 1176 2C4A     		ldr	r2, .L715+8
 17724 1178 D7F89430 		ldr	r3, [r7, #148]
 17725 117c 1344     		add	r3, r3, r2
 17726 117e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17727 1180 1946     		mov	r1, r3
 17728 1182 D7F88C20 		ldr	r2, [r7, #140]
 17729 1186 0B46     		mov	r3, r1
 17730 1188 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 395


 17731 118a 0B44     		add	r3, r3, r1
 17732 118c 1344     		add	r3, r3, r2
 17733 118e 03F20623 		addw	r3, r3, #518
 17734 1192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17735 1194 002B     		cmp	r3, #0
 17736 1196 0FD0     		beq	.L700
2535:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17737              		.loc 1 2535 0
 17738 1198 07F11C03 		add	r3, r7, #28
 17739 119c 1846     		mov	r0, r3
 17740 119e FFF7FEFF 		bl	strlen
 17741 11a2 0346     		mov	r3, r0
 17742 11a4 1A46     		mov	r2, r3
 17743 11a6 07F11C03 		add	r3, r7, #28
 17744 11aa 1344     		add	r3, r3, r2
 17745 11ac 1F4A     		ldr	r2, .L715+12
 17746 11ae 1068     		ldr	r0, [r2]	@ unaligned
 17747 11b0 1860     		str	r0, [r3]	@ unaligned
 17748 11b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17749 11b4 9A80     		strh	r2, [r3, #4]	@ unaligned
 17750 11b6 0EE0     		b	.L701
 17751              	.L700:
2536:..\src/command_processing.c **** 			else
2537:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17752              		.loc 1 2537 0
 17753 11b8 07F11C03 		add	r3, r7, #28
 17754 11bc 1846     		mov	r0, r3
 17755 11be FFF7FEFF 		bl	strlen
 17756 11c2 0346     		mov	r3, r0
 17757 11c4 1A46     		mov	r2, r3
 17758 11c6 07F11C03 		add	r3, r7, #28
 17759 11ca 1344     		add	r3, r3, r2
 17760 11cc 144A     		ldr	r2, .L715
 17761 11ce 1068     		ldr	r0, [r2]	@ unaligned
 17762 11d0 1860     		str	r0, [r3]	@ unaligned
 17763 11d2 1279     		ldrb	r2, [r2, #4]
 17764 11d4 1A71     		strb	r2, [r3, #4]
 17765              	.L701:
2538:..\src/command_processing.c **** 				 
2539:..\src/command_processing.c **** 			strcat(info_string, str);
 17766              		.loc 1 2539 0 discriminator 2
 17767 11d6 07F11C03 		add	r3, r7, #28
 17768 11da 1946     		mov	r1, r3
 17769 11dc 7869     		ldr	r0, [r7, #20]
 17770 11de FFF7FEFF 		bl	strcat
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17771              		.loc 1 2509 0 discriminator 2
 17772 11e2 D7F89430 		ldr	r3, [r7, #148]
 17773 11e6 0133     		adds	r3, r3, #1
 17774 11e8 C7F89430 		str	r3, [r7, #148]
 17775              	.L691:
2509:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17776              		.loc 1 2509 0 is_stmt 0 discriminator 1
 17777 11ec 114B     		ldr	r3, .L715+20
 17778 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17779 11f0 1A46     		mov	r2, r3
 17780 11f2 D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 396


 17781 11f6 9A42     		cmp	r2, r3
 17782 11f8 3FF773AE 		bgt	.L702
2540:..\src/command_processing.c **** 		}       
2541:..\src/command_processing.c **** 		
2542:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17783              		.loc 1 2542 0 is_stmt 1
 17784 11fc 7869     		ldr	r0, [r7, #20]
 17785 11fe FFF7FEFF 		bl	strlen
 17786 1202 0346     		mov	r3, r0
 17787 1204 1A46     		mov	r2, r3
 17788 1206 7B69     		ldr	r3, [r7, #20]
 17789 1208 1344     		add	r3, r3, r2
 17790 120a 0B4A     		ldr	r2, .L715+24
 17791 120c 1188     		ldrh	r1, [r2]	@ unaligned
 17792 120e 9278     		ldrb	r2, [r2, #2]
 17793 1210 1980     		strh	r1, [r3]	@ unaligned
 17794 1212 9A70     		strb	r2, [r3, #2]
 17795              	.L704:
2543:..\src/command_processing.c **** 	}
2544:..\src/command_processing.c **** }
 17796              		.loc 1 2544 0
 17797 1214 00BF     		nop
 17798 1216 9C37     		adds	r7, r7, #156
 17799              		.cfi_def_cfa_offset 36
 17800 1218 BD46     		mov	sp, r7
 17801              		.cfi_def_cfa_register 13
 17802              		@ sp needed
 17803 121a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17804              	.L716:
 17805 121e 00BF     		.align	2
 17806              	.L715:
 17807 1220 34100000 		.word	.LC154
 17808 1224 5C160000 		.word	.LC220
 17809 1228 00000000 		.word	IMU_connected
 17810 122c 2C100000 		.word	.LC153
 17811 1230 6C160000 		.word	.LC221
 17812 1234 00000000 		.word	N_IMU_Connected
 17813 1238 AC0E0000 		.word	.LC132
 17814              		.cfi_endproc
 17815              	.LFE74:
 17816              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 17817              		.section	.rodata
 17818 1956 0000     		.align	2
 17819              	.LC246:
 17820 1958 486F7572 		.ascii	"Hour,Min,Sec,\000"
 17820      2C4D696E 
 17820      2C536563 
 17820      2C00
 17821 1966 0000     		.align	2
 17822              	.LC247:
 17823 1968 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 17823      25645F50 
 17823      6F732C00 
 17824              		.align	2
 17825              	.LC248:
 17826 1974 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 17826      25645F43 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 397


 17826      7572722C 
 17826      00
 17827 1981 000000   		.align	2
 17828              	.LC249:
 17829 1984 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 17829      315F6163 
 17829      742C454D 
 17829      475F325F 
 17829      6163742C 
 17830 19b7 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 17830      5F74696D 
 17830      652C546F 
 17830      74616C5F 
 17830      72657374 
 17831              		.section	.text.prepare_SD_legend,"ax",%progbits
 17832              		.align	2
 17833              		.global	prepare_SD_legend
 17834              		.thumb
 17835              		.thumb_func
 17836              		.type	prepare_SD_legend, %function
 17837              	prepare_SD_legend:
 17838              	.LFB75:
2545:..\src/command_processing.c **** 
2546:..\src/command_processing.c **** 
2547:..\src/command_processing.c **** //==============================================================================
2548:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2549:..\src/command_processing.c **** //==============================================================================
2550:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2551:..\src/command_processing.c **** {
 17839              		.loc 1 2551 0
 17840              		.cfi_startproc
 17841              		@ args = 0, pretend = 0, frame = 112
 17842              		@ frame_needed = 1, uses_anonymous_args = 0
 17843 0000 90B5     		push	{r4, r7, lr}
 17844              		.cfi_def_cfa_offset 12
 17845              		.cfi_offset 4, -12
 17846              		.cfi_offset 7, -8
 17847              		.cfi_offset 14, -4
 17848 0002 9DB0     		sub	sp, sp, #116
 17849              		.cfi_def_cfa_offset 128
 17850 0004 00AF     		add	r7, sp, #0
 17851              		.cfi_def_cfa_register 7
 17852 0006 7860     		str	r0, [r7, #4]
2552:..\src/command_processing.c ****     char str[100];  
2553:..\src/command_processing.c ****     int i;
2554:..\src/command_processing.c ****         
2555:..\src/command_processing.c ****     // Legend
2556:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 17853              		.loc 1 2556 0
 17854 0008 7B68     		ldr	r3, [r7, #4]
 17855 000a 2A4A     		ldr	r2, .L722
 17856 000c 1C46     		mov	r4, r3
 17857 000e 1346     		mov	r3, r2
 17858 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 17859 0012 2060     		str	r0, [r4]	@ unaligned
 17860 0014 6160     		str	r1, [r4, #4]	@ unaligned
 17861 0016 A260     		str	r2, [r4, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 398


 17862 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 17863 001a A381     		strh	r3, [r4, #12]	@ unaligned
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17864              		.loc 1 2557 0
 17865 001c 0123     		movs	r3, #1
 17866 001e FB66     		str	r3, [r7, #108]
 17867 0020 0FE0     		b	.L718
 17868              	.L719:
2558:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 17869              		.loc 1 2558 0 discriminator 3
 17870 0022 07F10803 		add	r3, r7, #8
 17871 0026 FA6E     		ldr	r2, [r7, #108]
 17872 0028 2349     		ldr	r1, .L722+4
 17873 002a 1846     		mov	r0, r3
 17874 002c FFF7FEFF 		bl	sprintf
2559:..\src/command_processing.c ****         strcat(info_string, str);
 17875              		.loc 1 2559 0 discriminator 3
 17876 0030 07F10803 		add	r3, r7, #8
 17877 0034 1946     		mov	r1, r3
 17878 0036 7868     		ldr	r0, [r7, #4]
 17879 0038 FFF7FEFF 		bl	strcat
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17880              		.loc 1 2557 0 discriminator 3
 17881 003c FB6E     		ldr	r3, [r7, #108]
 17882 003e 0133     		adds	r3, r3, #1
 17883 0040 FB66     		str	r3, [r7, #108]
 17884              	.L718:
2557:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17885              		.loc 1 2557 0 is_stmt 0 discriminator 1
 17886 0042 FB6E     		ldr	r3, [r7, #108]
 17887 0044 0A2B     		cmp	r3, #10
 17888 0046 ECDD     		ble	.L719
2560:..\src/command_processing.c ****     }
2561:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 17889              		.loc 1 2561 0 is_stmt 1
 17890 0048 0123     		movs	r3, #1
 17891 004a FB66     		str	r3, [r7, #108]
 17892 004c 0FE0     		b	.L720
 17893              	.L721:
2562:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17894              		.loc 1 2562 0 discriminator 3
 17895 004e 07F10803 		add	r3, r7, #8
 17896 0052 FA6E     		ldr	r2, [r7, #108]
 17897 0054 1949     		ldr	r1, .L722+8
 17898 0056 1846     		mov	r0, r3
 17899 0058 FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c ****         strcat(info_string, str);
 17900              		.loc 1 2563 0 discriminator 3
 17901 005c 07F10803 		add	r3, r7, #8
 17902 0060 1946     		mov	r1, r3
 17903 0062 7868     		ldr	r0, [r7, #4]
 17904 0064 FFF7FEFF 		bl	strcat
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17905              		.loc 1 2561 0 discriminator 3
 17906 0068 FB6E     		ldr	r3, [r7, #108]
 17907 006a 0133     		adds	r3, r3, #1
 17908 006c FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 399


 17909              	.L720:
2561:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17910              		.loc 1 2561 0 is_stmt 0 discriminator 1
 17911 006e FB6E     		ldr	r3, [r7, #108]
 17912 0070 042B     		cmp	r3, #4
 17913 0072 ECDD     		ble	.L721
2564:..\src/command_processing.c ****     }
2565:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 17914              		.loc 1 2565 0 is_stmt 1
 17915 0074 07F10803 		add	r3, r7, #8
 17916 0078 114A     		ldr	r2, .L722+12
 17917 007a 1846     		mov	r0, r3
 17918 007c 1146     		mov	r1, r2
 17919 007e 4D23     		movs	r3, #77
 17920 0080 1A46     		mov	r2, r3
 17921 0082 FFF7FEFF 		bl	memcpy
2566:..\src/command_processing.c ****     strcat(info_string, str);
 17922              		.loc 1 2566 0
 17923 0086 07F10803 		add	r3, r7, #8
 17924 008a 1946     		mov	r1, r3
 17925 008c 7868     		ldr	r0, [r7, #4]
 17926 008e FFF7FEFF 		bl	strcat
2567:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17927              		.loc 1 2567 0
 17928 0092 7868     		ldr	r0, [r7, #4]
 17929 0094 FFF7FEFF 		bl	strlen
 17930 0098 0346     		mov	r3, r0
 17931 009a 1A46     		mov	r2, r3
 17932 009c 7B68     		ldr	r3, [r7, #4]
 17933 009e 1344     		add	r3, r3, r2
 17934 00a0 084A     		ldr	r2, .L722+16
 17935 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 17936 00a4 9278     		ldrb	r2, [r2, #2]
 17937 00a6 1980     		strh	r1, [r3]	@ unaligned
 17938 00a8 9A70     		strb	r2, [r3, #2]
2568:..\src/command_processing.c **** }
 17939              		.loc 1 2568 0
 17940 00aa 00BF     		nop
 17941 00ac 7437     		adds	r7, r7, #116
 17942              		.cfi_def_cfa_offset 12
 17943 00ae BD46     		mov	sp, r7
 17944              		.cfi_def_cfa_register 13
 17945              		@ sp needed
 17946 00b0 90BD     		pop	{r4, r7, pc}
 17947              	.L723:
 17948 00b2 00BF     		.align	2
 17949              	.L722:
 17950 00b4 58190000 		.word	.LC246
 17951 00b8 68190000 		.word	.LC247
 17952 00bc 74190000 		.word	.LC248
 17953 00c0 84190000 		.word	.LC249
 17954 00c4 AC0E0000 		.word	.LC132
 17955              		.cfi_endproc
 17956              	.LFE75:
 17957              		.size	prepare_SD_legend, .-prepare_SD_legend
 17958              		.section	.rodata
 17959 19d1 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 400


 17960              	.LC250:
 17961 19d4 25303264 		.ascii	"%02d,%02d,%02d,\000"
 17961      2C253032 
 17961      642C2530 
 17961      32642C00 
 17962              		.align	2
 17963              	.LC251:
 17964 19e4 256C752C 		.ascii	"%lu,\000"
 17964      00
 17965 19e9 000000   		.align	2
 17966              	.LC252:
 17967 19ec 256C752C 		.ascii	"%lu,%lu,\000"
 17967      256C752C 
 17967      00
 17968 19f5 000000   		.align	2
 17969              	.LC253:
 17970 19f8 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 17970      256C752C 
 17970      256C752C 
 17970      256C7500 
 17971              		.section	.text.prepare_SD_info,"ax",%progbits
 17972              		.align	2
 17973              		.global	prepare_SD_info
 17974              		.thumb
 17975              		.thumb_func
 17976              		.type	prepare_SD_info, %function
 17977              	prepare_SD_info:
 17978              	.LFB76:
2569:..\src/command_processing.c **** 
2570:..\src/command_processing.c **** //==============================================================================
2571:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2572:..\src/command_processing.c **** //==============================================================================
2573:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2574:..\src/command_processing.c **** {
 17979              		.loc 1 2574 0
 17980              		.cfi_startproc
 17981              		@ args = 0, pretend = 0, frame = 112
 17982              		@ frame_needed = 1, uses_anonymous_args = 0
 17983 0000 90B5     		push	{r4, r7, lr}
 17984              		.cfi_def_cfa_offset 12
 17985              		.cfi_offset 4, -12
 17986              		.cfi_offset 7, -8
 17987              		.cfi_offset 14, -4
 17988 0002 9FB0     		sub	sp, sp, #124
 17989              		.cfi_def_cfa_offset 136
 17990 0004 02AF     		add	r7, sp, #8
 17991              		.cfi_def_cfa 7, 128
 17992 0006 7860     		str	r0, [r7, #4]
2575:..\src/command_processing.c ****     char str[100];  
2576:..\src/command_processing.c ****     int i;
2577:..\src/command_processing.c ****             
2578:..\src/command_processing.c ****     strcpy(info_string, "");
 17993              		.loc 1 2578 0
 17994 0008 7B68     		ldr	r3, [r7, #4]
 17995 000a 0022     		movs	r2, #0
 17996 000c 1A70     		strb	r2, [r3]
2579:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 401


2580:..\src/command_processing.c ****     // Time
2581:..\src/command_processing.c ****     strcat(info_string, "");
2582:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 17997              		.loc 1 2582 0
 17998 000e 424B     		ldr	r3, .L729
 17999 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18000 0014 1A46     		mov	r2, r3
 18001 0016 404B     		ldr	r3, .L729
 18002 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18003 001c 1946     		mov	r1, r3
 18004 001e 3E4B     		ldr	r3, .L729
 18005 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18006 0024 07F10800 		add	r0, r7, #8
 18007 0028 0093     		str	r3, [sp]
 18008 002a 0B46     		mov	r3, r1
 18009 002c 3B49     		ldr	r1, .L729+4
 18010 002e FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****     strcat(info_string, str);
 18011              		.loc 1 2583 0
 18012 0032 07F10803 		add	r3, r7, #8
 18013 0036 1946     		mov	r1, r3
 18014 0038 7868     		ldr	r0, [r7, #4]
 18015 003a FFF7FEFF 		bl	strcat
2584:..\src/command_processing.c **** 
2585:..\src/command_processing.c ****     // Pos_Bin
2586:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18016              		.loc 1 2586 0
 18017 003e 0123     		movs	r3, #1
 18018 0040 FB66     		str	r3, [r7, #108]
 18019 0042 14E0     		b	.L725
 18020              	.L726:
2587:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18021              		.loc 1 2587 0 discriminator 3
 18022 0044 FB6E     		ldr	r3, [r7, #108]
 18023 0046 013B     		subs	r3, r3, #1
 18024 0048 334A     		ldr	r2, .L729
 18025 004a 0633     		adds	r3, r3, #6
 18026 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 18027 0050 07F10803 		add	r3, r7, #8
 18028 0054 3249     		ldr	r1, .L729+8
 18029 0056 1846     		mov	r0, r3
 18030 0058 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****         strcat(info_string, str);
 18031              		.loc 1 2588 0 discriminator 3
 18032 005c 07F10803 		add	r3, r7, #8
 18033 0060 1946     		mov	r1, r3
 18034 0062 7868     		ldr	r0, [r7, #4]
 18035 0064 FFF7FEFF 		bl	strcat
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18036              		.loc 1 2586 0 discriminator 3
 18037 0068 FB6E     		ldr	r3, [r7, #108]
 18038 006a 0133     		adds	r3, r3, #1
 18039 006c FB66     		str	r3, [r7, #108]
 18040              	.L725:
2586:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18041              		.loc 1 2586 0 is_stmt 0 discriminator 1
 18042 006e FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 402


 18043 0070 0A2B     		cmp	r3, #10
 18044 0072 E7DD     		ble	.L726
2589:..\src/command_processing.c ****     }
2590:..\src/command_processing.c ****     
2591:..\src/command_processing.c ****     // Curr_Bin
2592:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18045              		.loc 1 2592 0 is_stmt 1
 18046 0074 0123     		movs	r3, #1
 18047 0076 FB66     		str	r3, [r7, #108]
 18048 0078 14E0     		b	.L727
 18049              	.L728:
2593:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18050              		.loc 1 2593 0 discriminator 3
 18051 007a FB6E     		ldr	r3, [r7, #108]
 18052 007c 013B     		subs	r3, r3, #1
 18053 007e 264A     		ldr	r2, .L729
 18054 0080 1033     		adds	r3, r3, #16
 18055 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 18056 0086 07F10803 		add	r3, r7, #8
 18057 008a 2549     		ldr	r1, .L729+8
 18058 008c 1846     		mov	r0, r3
 18059 008e FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c ****         strcat(info_string, str);
 18060              		.loc 1 2594 0 discriminator 3
 18061 0092 07F10803 		add	r3, r7, #8
 18062 0096 1946     		mov	r1, r3
 18063 0098 7868     		ldr	r0, [r7, #4]
 18064 009a FFF7FEFF 		bl	strcat
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18065              		.loc 1 2592 0 discriminator 3
 18066 009e FB6E     		ldr	r3, [r7, #108]
 18067 00a0 0133     		adds	r3, r3, #1
 18068 00a2 FB66     		str	r3, [r7, #108]
 18069              	.L727:
2592:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18070              		.loc 1 2592 0 is_stmt 0 discriminator 1
 18071 00a4 FB6E     		ldr	r3, [r7, #108]
 18072 00a6 042B     		cmp	r3, #4
 18073 00a8 E7DD     		ble	.L728
2595:..\src/command_processing.c ****     }
2596:..\src/command_processing.c ****        
2597:..\src/command_processing.c ****     // EMG_1, EMG_2
2598:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 18074              		.loc 1 2598 0 is_stmt 1
 18075 00aa 1B4B     		ldr	r3, .L729
 18076 00ac 1A69     		ldr	r2, [r3, #16]
 18077 00ae 1A4B     		ldr	r3, .L729
 18078 00b0 5B69     		ldr	r3, [r3, #20]
 18079 00b2 07F10800 		add	r0, r7, #8
 18080 00b6 1B49     		ldr	r1, .L729+12
 18081 00b8 FFF7FEFF 		bl	sprintf
2599:..\src/command_processing.c ****     strcat(info_string, str);
 18082              		.loc 1 2599 0
 18083 00bc 07F10803 		add	r3, r7, #8
 18084 00c0 1946     		mov	r1, r3
 18085 00c2 7868     		ldr	r0, [r7, #4]
 18086 00c4 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 403


2600:..\src/command_processing.c ****     
2601:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2602:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 18087              		.loc 1 2602 0
 18088 00c8 134B     		ldr	r3, .L729
 18089 00ca 196D     		ldr	r1, [r3, #80]
 18090 00cc 124B     		ldr	r3, .L729
 18091 00ce 5C6D     		ldr	r4, [r3, #84]
 18092 00d0 114B     		ldr	r3, .L729
 18093 00d2 9B6D     		ldr	r3, [r3, #88]
 18094 00d4 104A     		ldr	r2, .L729
 18095 00d6 D26D     		ldr	r2, [r2, #92]
 18096 00d8 07F10800 		add	r0, r7, #8
 18097 00dc 0192     		str	r2, [sp, #4]
 18098 00de 0093     		str	r3, [sp]
 18099 00e0 2346     		mov	r3, r4
 18100 00e2 0A46     		mov	r2, r1
 18101 00e4 1049     		ldr	r1, .L729+16
 18102 00e6 FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****     strcat(info_string, str);
 18103              		.loc 1 2603 0
 18104 00ea 07F10803 		add	r3, r7, #8
 18105 00ee 1946     		mov	r1, r3
 18106 00f0 7868     		ldr	r0, [r7, #4]
 18107 00f2 FFF7FEFF 		bl	strcat
2604:..\src/command_processing.c ****     
2605:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18108              		.loc 1 2605 0
 18109 00f6 7868     		ldr	r0, [r7, #4]
 18110 00f8 FFF7FEFF 		bl	strlen
 18111 00fc 0346     		mov	r3, r0
 18112 00fe 1A46     		mov	r2, r3
 18113 0100 7B68     		ldr	r3, [r7, #4]
 18114 0102 1344     		add	r3, r3, r2
 18115 0104 094A     		ldr	r2, .L729+20
 18116 0106 1188     		ldrh	r1, [r2]	@ unaligned
 18117 0108 9278     		ldrb	r2, [r2, #2]
 18118 010a 1980     		strh	r1, [r3]	@ unaligned
 18119 010c 9A70     		strb	r2, [r3, #2]
2606:..\src/command_processing.c **** }
 18120              		.loc 1 2606 0
 18121 010e 00BF     		nop
 18122 0110 7437     		adds	r7, r7, #116
 18123              		.cfi_def_cfa_offset 12
 18124 0112 BD46     		mov	sp, r7
 18125              		.cfi_def_cfa_register 13
 18126              		@ sp needed
 18127 0114 90BD     		pop	{r4, r7, pc}
 18128              	.L730:
 18129 0116 00BF     		.align	2
 18130              	.L729:
 18131 0118 00000000 		.word	g_mem
 18132 011c D4190000 		.word	.LC250
 18133 0120 E4190000 		.word	.LC251
 18134 0124 EC190000 		.word	.LC252
 18135 0128 F8190000 		.word	.LC253
 18136 012c AC0E0000 		.word	.LC132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 404


 18137              		.cfi_endproc
 18138              	.LFE76:
 18139              		.size	prepare_SD_info, .-prepare_SD_info
 18140              		.section	.rodata
 18141              		.align	2
 18142              	.LC254:
 18143 1a08 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 18143      4F525320 
 18143      494E464F 
 18143      0D0A00
 18144 1a17 00       		.align	2
 18145              	.LC255:
 18146 1a18 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 18146      3A202564 
 18146      09256409 
 18146      25640D0A 
 18146      00
 18147 1a29 000000   		.align	2
 18148              	.LC256:
 18149 1a2c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 18149      6F3A2025 
 18149      64092564 
 18149      0925640D 
 18149      0A00
 18150 1a3e 0000     		.align	2
 18151              	.LC257:
 18152 1a40 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 18152      3A202564 
 18152      09256409 
 18152      25640D0A 
 18152      00
 18153 1a51 000000   		.align	2
 18154              	.LC258:
 18155 1a54 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 18155      743A2025 
 18155      2E336609 
 18155      252E3366 
 18155      09252E33 
 18156 1a71 000000   		.align	2
 18157              	.LC259:
 18158 1a74 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 18158      70657261 
 18158      74757265 
 18158      3A202564 
 18158      0D0A00
 18159              		.section	.text.IMU_reading_info,"ax",%progbits
 18160              		.align	2
 18161              		.global	IMU_reading_info
 18162              		.thumb
 18163              		.thumb_func
 18164              		.type	IMU_reading_info, %function
 18165              	IMU_reading_info:
 18166              	.LFB77:
2607:..\src/command_processing.c **** 
2608:..\src/command_processing.c **** //==============================================================================
2609:..\src/command_processing.c **** //                                                              IMU READING INFO
2610:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 405


2611:..\src/command_processing.c **** 
2612:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2613:..\src/command_processing.c **** {
 18167              		.loc 1 2613 0
 18168              		.cfi_startproc
 18169              		@ args = 0, pretend = 0, frame = 312
 18170              		@ frame_needed = 1, uses_anonymous_args = 0
 18171 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 18172              		.cfi_def_cfa_offset 32
 18173              		.cfi_offset 4, -32
 18174              		.cfi_offset 5, -28
 18175              		.cfi_offset 7, -24
 18176              		.cfi_offset 8, -20
 18177              		.cfi_offset 9, -16
 18178              		.cfi_offset 10, -12
 18179              		.cfi_offset 11, -8
 18180              		.cfi_offset 14, -4
 18181 0004 D4B0     		sub	sp, sp, #336
 18182              		.cfi_def_cfa_offset 368
 18183 0006 06AF     		add	r7, sp, #24
 18184              		.cfi_def_cfa 7, 344
 18185 0008 3B1D     		adds	r3, r7, #4
 18186 000a 1860     		str	r0, [r3]
2614:..\src/command_processing.c ****     char str[300];  
2615:..\src/command_processing.c ****     int i;
2616:..\src/command_processing.c ****                  
2617:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 18187              		.loc 1 2617 0
 18188 000c 3B1D     		adds	r3, r7, #4
 18189 000e 1868     		ldr	r0, [r3]
 18190 0010 FFF7FEFF 		bl	strlen
 18191 0014 0346     		mov	r3, r0
 18192 0016 1A46     		mov	r2, r3
 18193 0018 3B1D     		adds	r3, r7, #4
 18194 001a 1B68     		ldr	r3, [r3]
 18195 001c 1344     		add	r3, r3, r2
 18196 001e C94A     		ldr	r2, .L739
 18197 0020 1C46     		mov	r4, r3
 18198 0022 1346     		mov	r3, r2
 18199 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 18200 0026 2060     		str	r0, [r4]	@ unaligned
 18201 0028 6160     		str	r1, [r4, #4]	@ unaligned
 18202 002a A260     		str	r2, [r4, #8]	@ unaligned
 18203 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 18204 002e 9B78     		ldrb	r3, [r3, #2]
 18205 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 18206 0032 A373     		strb	r3, [r4, #14]
2618:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 18207              		.loc 1 2618 0
 18208 0034 0023     		movs	r3, #0
 18209 0036 C7F83431 		str	r3, [r7, #308]
 18210 003a 66E1     		b	.L732
 18211              	.L738:
2619:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18212              		.loc 1 2619 0
 18213 003c C24A     		ldr	r2, .L739+4
 18214 003e D7F83431 		ldr	r3, [r7, #308]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 406


 18215 0042 1344     		add	r3, r3, r2
 18216 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18217 0046 07F10800 		add	r0, r7, #8
 18218 004a D7F83421 		ldr	r2, [r7, #308]
 18219 004e BF49     		ldr	r1, .L739+8
 18220 0050 FFF7FEFF 		bl	sprintf
2620:..\src/command_processing.c ****         strcat(info_string, str);
 18221              		.loc 1 2620 0
 18222 0054 07F10802 		add	r2, r7, #8
 18223 0058 3B1D     		adds	r3, r7, #4
 18224 005a 1146     		mov	r1, r2
 18225 005c 1868     		ldr	r0, [r3]
 18226 005e FFF7FEFF 		bl	strcat
2621:..\src/command_processing.c ****         
2622:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 18227              		.loc 1 2622 0
 18228 0062 B94A     		ldr	r2, .L739+4
 18229 0064 D7F83431 		ldr	r3, [r7, #308]
 18230 0068 1344     		add	r3, r3, r2
 18231 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18232 006c 1946     		mov	r1, r3
 18233 006e B84A     		ldr	r2, .L739+12
 18234 0070 0B46     		mov	r3, r1
 18235 0072 9B00     		lsls	r3, r3, #2
 18236 0074 0B44     		add	r3, r3, r1
 18237 0076 1344     		add	r3, r3, r2
 18238 0078 03F20223 		addw	r3, r3, #514
 18239 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18240 007e 002B     		cmp	r3, #0
 18241 0080 31D0     		beq	.L733
2623:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 18242              		.loc 1 2623 0
 18243 0082 B449     		ldr	r1, .L739+16
 18244 0084 D7F83421 		ldr	r2, [r7, #308]
 18245 0088 1346     		mov	r3, r2
 18246 008a 9B00     		lsls	r3, r3, #2
 18247 008c 1344     		add	r3, r3, r2
 18248 008e DB00     		lsls	r3, r3, #3
 18249 0090 0B44     		add	r3, r3, r1
 18250 0092 0233     		adds	r3, r3, #2
 18251 0094 B3F90030 		ldrsh	r3, [r3]
 18252 0098 1C46     		mov	r4, r3
 18253 009a AE49     		ldr	r1, .L739+16
 18254 009c D7F83421 		ldr	r2, [r7, #308]
 18255 00a0 1346     		mov	r3, r2
 18256 00a2 9B00     		lsls	r3, r3, #2
 18257 00a4 1344     		add	r3, r3, r2
 18258 00a6 DB00     		lsls	r3, r3, #3
 18259 00a8 0B44     		add	r3, r3, r1
 18260 00aa 0433     		adds	r3, r3, #4
 18261 00ac B3F90030 		ldrsh	r3, [r3]
 18262 00b0 1D46     		mov	r5, r3
 18263 00b2 A849     		ldr	r1, .L739+16
 18264 00b4 D7F83421 		ldr	r2, [r7, #308]
 18265 00b8 1346     		mov	r3, r2
 18266 00ba 9B00     		lsls	r3, r3, #2
 18267 00bc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 407


 18268 00be DB00     		lsls	r3, r3, #3
 18269 00c0 0B44     		add	r3, r3, r1
 18270 00c2 0633     		adds	r3, r3, #6
 18271 00c4 B3F90030 		ldrsh	r3, [r3]
 18272 00c8 07F10800 		add	r0, r7, #8
 18273 00cc 0093     		str	r3, [sp]
 18274 00ce 2B46     		mov	r3, r5
 18275 00d0 2246     		mov	r2, r4
 18276 00d2 A149     		ldr	r1, .L739+20
 18277 00d4 FFF7FEFF 		bl	sprintf
2624:..\src/command_processing.c ****             strcat(info_string, str);
 18278              		.loc 1 2624 0
 18279 00d8 07F10802 		add	r2, r7, #8
 18280 00dc 3B1D     		adds	r3, r7, #4
 18281 00de 1146     		mov	r1, r2
 18282 00e0 1868     		ldr	r0, [r3]
 18283 00e2 FFF7FEFF 		bl	strcat
 18284              	.L733:
2625:..\src/command_processing.c ****         }
2626:..\src/command_processing.c **** 
2627:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 18285              		.loc 1 2627 0
 18286 00e6 984A     		ldr	r2, .L739+4
 18287 00e8 D7F83431 		ldr	r3, [r7, #308]
 18288 00ec 1344     		add	r3, r3, r2
 18289 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18290 00f0 1946     		mov	r1, r3
 18291 00f2 974A     		ldr	r2, .L739+12
 18292 00f4 0B46     		mov	r3, r1
 18293 00f6 9B00     		lsls	r3, r3, #2
 18294 00f8 0B44     		add	r3, r3, r1
 18295 00fa 1344     		add	r3, r3, r2
 18296 00fc 03F20323 		addw	r3, r3, #515
 18297 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18298 0102 002B     		cmp	r3, #0
 18299 0104 31D0     		beq	.L734
2628:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 18300              		.loc 1 2628 0
 18301 0106 9349     		ldr	r1, .L739+16
 18302 0108 D7F83421 		ldr	r2, [r7, #308]
 18303 010c 1346     		mov	r3, r2
 18304 010e 9B00     		lsls	r3, r3, #2
 18305 0110 1344     		add	r3, r3, r2
 18306 0112 DB00     		lsls	r3, r3, #3
 18307 0114 0B44     		add	r3, r3, r1
 18308 0116 0833     		adds	r3, r3, #8
 18309 0118 B3F90030 		ldrsh	r3, [r3]
 18310 011c 1C46     		mov	r4, r3
 18311 011e 8D49     		ldr	r1, .L739+16
 18312 0120 D7F83421 		ldr	r2, [r7, #308]
 18313 0124 1346     		mov	r3, r2
 18314 0126 9B00     		lsls	r3, r3, #2
 18315 0128 1344     		add	r3, r3, r2
 18316 012a DB00     		lsls	r3, r3, #3
 18317 012c 0B44     		add	r3, r3, r1
 18318 012e 0A33     		adds	r3, r3, #10
 18319 0130 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 408


 18320 0134 1D46     		mov	r5, r3
 18321 0136 8749     		ldr	r1, .L739+16
 18322 0138 D7F83421 		ldr	r2, [r7, #308]
 18323 013c 1346     		mov	r3, r2
 18324 013e 9B00     		lsls	r3, r3, #2
 18325 0140 1344     		add	r3, r3, r2
 18326 0142 DB00     		lsls	r3, r3, #3
 18327 0144 0B44     		add	r3, r3, r1
 18328 0146 0C33     		adds	r3, r3, #12
 18329 0148 B3F90030 		ldrsh	r3, [r3]
 18330 014c 07F10800 		add	r0, r7, #8
 18331 0150 0093     		str	r3, [sp]
 18332 0152 2B46     		mov	r3, r5
 18333 0154 2246     		mov	r2, r4
 18334 0156 8149     		ldr	r1, .L739+24
 18335 0158 FFF7FEFF 		bl	sprintf
2629:..\src/command_processing.c ****             strcat(info_string, str);
 18336              		.loc 1 2629 0
 18337 015c 07F10802 		add	r2, r7, #8
 18338 0160 3B1D     		adds	r3, r7, #4
 18339 0162 1146     		mov	r1, r2
 18340 0164 1868     		ldr	r0, [r3]
 18341 0166 FFF7FEFF 		bl	strcat
 18342              	.L734:
2630:..\src/command_processing.c ****         }
2631:..\src/command_processing.c **** 
2632:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 18343              		.loc 1 2632 0
 18344 016a 774A     		ldr	r2, .L739+4
 18345 016c D7F83431 		ldr	r3, [r7, #308]
 18346 0170 1344     		add	r3, r3, r2
 18347 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18348 0174 1946     		mov	r1, r3
 18349 0176 764A     		ldr	r2, .L739+12
 18350 0178 0B46     		mov	r3, r1
 18351 017a 9B00     		lsls	r3, r3, #2
 18352 017c 0B44     		add	r3, r3, r1
 18353 017e 1344     		add	r3, r3, r2
 18354 0180 03F50173 		add	r3, r3, #516
 18355 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18356 0186 002B     		cmp	r3, #0
 18357 0188 31D0     		beq	.L735
2633:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 18358              		.loc 1 2633 0
 18359 018a 7249     		ldr	r1, .L739+16
 18360 018c D7F83421 		ldr	r2, [r7, #308]
 18361 0190 1346     		mov	r3, r2
 18362 0192 9B00     		lsls	r3, r3, #2
 18363 0194 1344     		add	r3, r3, r2
 18364 0196 DB00     		lsls	r3, r3, #3
 18365 0198 0B44     		add	r3, r3, r1
 18366 019a 0E33     		adds	r3, r3, #14
 18367 019c B3F90030 		ldrsh	r3, [r3]
 18368 01a0 1C46     		mov	r4, r3
 18369 01a2 6C49     		ldr	r1, .L739+16
 18370 01a4 D7F83421 		ldr	r2, [r7, #308]
 18371 01a8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 409


 18372 01aa 9B00     		lsls	r3, r3, #2
 18373 01ac 1344     		add	r3, r3, r2
 18374 01ae DB00     		lsls	r3, r3, #3
 18375 01b0 0B44     		add	r3, r3, r1
 18376 01b2 1033     		adds	r3, r3, #16
 18377 01b4 B3F90030 		ldrsh	r3, [r3]
 18378 01b8 1D46     		mov	r5, r3
 18379 01ba 6649     		ldr	r1, .L739+16
 18380 01bc D7F83421 		ldr	r2, [r7, #308]
 18381 01c0 1346     		mov	r3, r2
 18382 01c2 9B00     		lsls	r3, r3, #2
 18383 01c4 1344     		add	r3, r3, r2
 18384 01c6 DB00     		lsls	r3, r3, #3
 18385 01c8 0B44     		add	r3, r3, r1
 18386 01ca 1233     		adds	r3, r3, #18
 18387 01cc B3F90030 		ldrsh	r3, [r3]
 18388 01d0 07F10800 		add	r0, r7, #8
 18389 01d4 0093     		str	r3, [sp]
 18390 01d6 2B46     		mov	r3, r5
 18391 01d8 2246     		mov	r2, r4
 18392 01da 6149     		ldr	r1, .L739+28
 18393 01dc FFF7FEFF 		bl	sprintf
2634:..\src/command_processing.c ****             strcat(info_string, str);
 18394              		.loc 1 2634 0
 18395 01e0 07F10802 		add	r2, r7, #8
 18396 01e4 3B1D     		adds	r3, r7, #4
 18397 01e6 1146     		mov	r1, r2
 18398 01e8 1868     		ldr	r0, [r3]
 18399 01ea FFF7FEFF 		bl	strcat
 18400              	.L735:
2635:..\src/command_processing.c ****         }
2636:..\src/command_processing.c ****         
2637:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 18401              		.loc 1 2637 0
 18402 01ee 564A     		ldr	r2, .L739+4
 18403 01f0 D7F83431 		ldr	r3, [r7, #308]
 18404 01f4 1344     		add	r3, r3, r2
 18405 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18406 01f8 1946     		mov	r1, r3
 18407 01fa 554A     		ldr	r2, .L739+12
 18408 01fc 0B46     		mov	r3, r1
 18409 01fe 9B00     		lsls	r3, r3, #2
 18410 0200 0B44     		add	r3, r3, r1
 18411 0202 1344     		add	r3, r3, r2
 18412 0204 03F20523 		addw	r3, r3, #517
 18413 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18414 020a 002B     		cmp	r3, #0
 18415 020c 4FD0     		beq	.L736
2638:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 18416              		.loc 1 2638 0
 18417 020e 5149     		ldr	r1, .L739+16
 18418 0210 D7F83421 		ldr	r2, [r7, #308]
 18419 0214 1346     		mov	r3, r2
 18420 0216 9B00     		lsls	r3, r3, #2
 18421 0218 1344     		add	r3, r3, r2
 18422 021a DB00     		lsls	r3, r3, #3
 18423 021c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 410


 18424 021e 1433     		adds	r3, r3, #20
 18425 0220 1B68     		ldr	r3, [r3]	@ float
 18426 0222 1846     		mov	r0, r3
 18427 0224 FFF7FEFF 		bl	__aeabi_f2d
 18428 0228 8246     		mov	r10, r0
 18429 022a 8B46     		mov	fp, r1
 18430 022c 4949     		ldr	r1, .L739+16
 18431 022e D7F83421 		ldr	r2, [r7, #308]
 18432 0232 1346     		mov	r3, r2
 18433 0234 9B00     		lsls	r3, r3, #2
 18434 0236 1344     		add	r3, r3, r2
 18435 0238 DB00     		lsls	r3, r3, #3
 18436 023a 0B44     		add	r3, r3, r1
 18437 023c 1833     		adds	r3, r3, #24
 18438 023e 1B68     		ldr	r3, [r3]	@ float
 18439 0240 1846     		mov	r0, r3
 18440 0242 FFF7FEFF 		bl	__aeabi_f2d
 18441 0246 0446     		mov	r4, r0
 18442 0248 0D46     		mov	r5, r1
 18443 024a 4249     		ldr	r1, .L739+16
 18444 024c D7F83421 		ldr	r2, [r7, #308]
 18445 0250 1346     		mov	r3, r2
 18446 0252 9B00     		lsls	r3, r3, #2
 18447 0254 1344     		add	r3, r3, r2
 18448 0256 DB00     		lsls	r3, r3, #3
 18449 0258 0B44     		add	r3, r3, r1
 18450 025a 1C33     		adds	r3, r3, #28
 18451 025c 1B68     		ldr	r3, [r3]	@ float
 18452 025e 1846     		mov	r0, r3
 18453 0260 FFF7FEFF 		bl	__aeabi_f2d
 18454 0264 8046     		mov	r8, r0
 18455 0266 8946     		mov	r9, r1
 18456 0268 3A49     		ldr	r1, .L739+16
 18457 026a D7F83421 		ldr	r2, [r7, #308]
 18458 026e 1346     		mov	r3, r2
 18459 0270 9B00     		lsls	r3, r3, #2
 18460 0272 1344     		add	r3, r3, r2
 18461 0274 DB00     		lsls	r3, r3, #3
 18462 0276 0B44     		add	r3, r3, r1
 18463 0278 2033     		adds	r3, r3, #32
 18464 027a 1B68     		ldr	r3, [r3]	@ float
 18465 027c 1846     		mov	r0, r3
 18466 027e FFF7FEFF 		bl	__aeabi_f2d
 18467 0282 0246     		mov	r2, r0
 18468 0284 0B46     		mov	r3, r1
 18469 0286 07F10800 		add	r0, r7, #8
 18470 028a CDE90423 		strd	r2, [sp, #16]
 18471 028e CDE90289 		strd	r8, [sp, #8]
 18472 0292 CDE90045 		strd	r4, [sp]
 18473 0296 5246     		mov	r2, r10
 18474 0298 5B46     		mov	r3, fp
 18475 029a 3249     		ldr	r1, .L739+32
 18476 029c FFF7FEFF 		bl	sprintf
2639:..\src/command_processing.c ****             strcat(info_string, str);
 18477              		.loc 1 2639 0
 18478 02a0 07F10802 		add	r2, r7, #8
 18479 02a4 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 411


 18480 02a6 1146     		mov	r1, r2
 18481 02a8 1868     		ldr	r0, [r3]
 18482 02aa FFF7FEFF 		bl	strcat
 18483              	.L736:
2640:..\src/command_processing.c ****         }
2641:..\src/command_processing.c ****         
2642:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 18484              		.loc 1 2642 0
 18485 02ae 264A     		ldr	r2, .L739+4
 18486 02b0 D7F83431 		ldr	r3, [r7, #308]
 18487 02b4 1344     		add	r3, r3, r2
 18488 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18489 02b8 1946     		mov	r1, r3
 18490 02ba 254A     		ldr	r2, .L739+12
 18491 02bc 0B46     		mov	r3, r1
 18492 02be 9B00     		lsls	r3, r3, #2
 18493 02c0 0B44     		add	r3, r3, r1
 18494 02c2 1344     		add	r3, r3, r2
 18495 02c4 03F20623 		addw	r3, r3, #518
 18496 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18497 02ca 002B     		cmp	r3, #0
 18498 02cc 18D0     		beq	.L737
2643:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 18499              		.loc 1 2643 0
 18500 02ce 2149     		ldr	r1, .L739+16
 18501 02d0 D7F83421 		ldr	r2, [r7, #308]
 18502 02d4 1346     		mov	r3, r2
 18503 02d6 9B00     		lsls	r3, r3, #2
 18504 02d8 1344     		add	r3, r3, r2
 18505 02da DB00     		lsls	r3, r3, #3
 18506 02dc 0B44     		add	r3, r3, r1
 18507 02de 2433     		adds	r3, r3, #36
 18508 02e0 B3F90030 		ldrsh	r3, [r3]
 18509 02e4 1A46     		mov	r2, r3
 18510 02e6 07F10803 		add	r3, r7, #8
 18511 02ea 1F49     		ldr	r1, .L739+36
 18512 02ec 1846     		mov	r0, r3
 18513 02ee FFF7FEFF 		bl	sprintf
2644:..\src/command_processing.c ****             strcat(info_string, str);
 18514              		.loc 1 2644 0
 18515 02f2 07F10802 		add	r2, r7, #8
 18516 02f6 3B1D     		adds	r3, r7, #4
 18517 02f8 1146     		mov	r1, r2
 18518 02fa 1868     		ldr	r0, [r3]
 18519 02fc FFF7FEFF 		bl	strcat
 18520              	.L737:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18521              		.loc 1 2618 0 discriminator 2
 18522 0300 D7F83431 		ldr	r3, [r7, #308]
 18523 0304 0133     		adds	r3, r3, #1
 18524 0306 C7F83431 		str	r3, [r7, #308]
 18525              	.L732:
2618:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18526              		.loc 1 2618 0 is_stmt 0 discriminator 1
 18527 030a 184B     		ldr	r3, .L739+40
 18528 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18529 030e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 412


 18530 0310 D7F83431 		ldr	r3, [r7, #308]
 18531 0314 9A42     		cmp	r2, r3
 18532 0316 3FF791AE 		bgt	.L738
2645:..\src/command_processing.c ****         }
2646:..\src/command_processing.c ****         
2647:..\src/command_processing.c ****     }
2648:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18533              		.loc 1 2648 0 is_stmt 1
 18534 031a 3B1D     		adds	r3, r7, #4
 18535 031c 1868     		ldr	r0, [r3]
 18536 031e FFF7FEFF 		bl	strlen
 18537 0322 0346     		mov	r3, r0
 18538 0324 1A46     		mov	r2, r3
 18539 0326 3B1D     		adds	r3, r7, #4
 18540 0328 1B68     		ldr	r3, [r3]
 18541 032a 1344     		add	r3, r3, r2
 18542 032c 104A     		ldr	r2, .L739+44
 18543 032e 1188     		ldrh	r1, [r2]	@ unaligned
 18544 0330 9278     		ldrb	r2, [r2, #2]
 18545 0332 1980     		strh	r1, [r3]	@ unaligned
 18546 0334 9A70     		strb	r2, [r3, #2]
2649:..\src/command_processing.c **** }
 18547              		.loc 1 2649 0
 18548 0336 00BF     		nop
 18549 0338 07F59C77 		add	r7, r7, #312
 18550              		.cfi_def_cfa_offset 32
 18551 033c BD46     		mov	sp, r7
 18552              		.cfi_def_cfa_register 13
 18553              		@ sp needed
 18554 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 18555              	.L740:
 18556 0342 00BF     		.align	2
 18557              	.L739:
 18558 0344 081A0000 		.word	.LC254
 18559 0348 00000000 		.word	IMU_connected
 18560 034c 10160000 		.word	.LC216
 18561 0350 00000000 		.word	c_mem
 18562 0354 00000000 		.word	g_imu
 18563 0358 181A0000 		.word	.LC255
 18564 035c 2C1A0000 		.word	.LC256
 18565 0360 401A0000 		.word	.LC257
 18566 0364 541A0000 		.word	.LC258
 18567 0368 741A0000 		.word	.LC259
 18568 036c 00000000 		.word	N_IMU_Connected
 18569 0370 AC0E0000 		.word	.LC132
 18570              		.cfi_endproc
 18571              	.LFE77:
 18572              		.size	IMU_reading_info, .-IMU_reading_info
 18573              		.section	.text.commWrite_old_id,"ax",%progbits
 18574              		.align	2
 18575              		.global	commWrite_old_id
 18576              		.thumb
 18577              		.thumb_func
 18578              		.type	commWrite_old_id, %function
 18579              	commWrite_old_id:
 18580              	.LFB78:
2650:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 413


2651:..\src/command_processing.c **** //==============================================================================
2652:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2653:..\src/command_processing.c **** //==============================================================================
2654:..\src/command_processing.c **** 
2655:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2656:..\src/command_processing.c **** {
 18581              		.loc 1 2656 0
 18582              		.cfi_startproc
 18583              		@ args = 0, pretend = 0, frame = 16
 18584              		@ frame_needed = 1, uses_anonymous_args = 0
 18585 0000 80B5     		push	{r7, lr}
 18586              		.cfi_def_cfa_offset 8
 18587              		.cfi_offset 7, -8
 18588              		.cfi_offset 14, -4
 18589 0002 84B0     		sub	sp, sp, #16
 18590              		.cfi_def_cfa_offset 24
 18591 0004 00AF     		add	r7, sp, #0
 18592              		.cfi_def_cfa_register 7
 18593 0006 7860     		str	r0, [r7, #4]
 18594 0008 0B46     		mov	r3, r1
 18595 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 18596 000c 1346     		mov	r3, r2
 18597 000e 7B70     		strb	r3, [r7, #1]
2657:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2658:..\src/command_processing.c **** 
2659:..\src/command_processing.c ****     // frame - start
2660:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18598              		.loc 1 2660 0
 18599 0010 3A20     		movs	r0, #58
 18600 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2661:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18601              		.loc 1 2661 0
 18602 0016 3A20     		movs	r0, #58
 18603 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2662:..\src/command_processing.c ****     // frame - ID
2663:..\src/command_processing.c ****     //if(old_id)
2664:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 18604              		.loc 1 2664 0
 18605 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 18606 001e 1846     		mov	r0, r3
 18607 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2665:..\src/command_processing.c ****     //else
2666:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2667:..\src/command_processing.c ****         
2668:..\src/command_processing.c ****     // frame - length
2669:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18608              		.loc 1 2669 0
 18609 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18610 0026 DBB2     		uxtb	r3, r3
 18611 0028 1846     		mov	r0, r3
 18612 002a FFF7FEFF 		bl	UART_RS485_PutChar
2670:..\src/command_processing.c ****     // frame - packet data
2671:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18613              		.loc 1 2671 0
 18614 002e 0023     		movs	r3, #0
 18615 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18616 0032 09E0     		b	.L742
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 414


 18617              	.L743:
2672:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18618              		.loc 1 2672 0 discriminator 3
 18619 0034 FB89     		ldrh	r3, [r7, #14]
 18620 0036 7A68     		ldr	r2, [r7, #4]
 18621 0038 1344     		add	r3, r3, r2
 18622 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18623 003c 1846     		mov	r0, r3
 18624 003e FFF7FEFF 		bl	UART_RS485_PutChar
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18625              		.loc 1 2671 0 discriminator 3
 18626 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18627 0044 0133     		adds	r3, r3, #1
 18628 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18629              	.L742:
2671:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18630              		.loc 1 2671 0 is_stmt 0 discriminator 1
 18631 0048 FA89     		ldrh	r2, [r7, #14]
 18632 004a 7B88     		ldrh	r3, [r7, #2]
 18633 004c 9A42     		cmp	r2, r3
 18634 004e F1D3     		bcc	.L743
2673:..\src/command_processing.c ****     }
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c ****     index = 0;
 18635              		.loc 1 2675 0 is_stmt 1
 18636 0050 0023     		movs	r3, #0
 18637 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18638              		.loc 1 2677 0
 18639 0054 00BF     		nop
 18640              	.L745:
 18641              		.loc 1 2677 0 is_stmt 0 discriminator 2
 18642 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18643 005a 0346     		mov	r3, r0
 18644 005c 03F00103 		and	r3, r3, #1
 18645 0060 002B     		cmp	r3, #0
 18646 0062 05D1     		bne	.L744
 18647              		.loc 1 2677 0 discriminator 1
 18648 0064 FB89     		ldrh	r3, [r7, #14]
 18649 0066 5A1C     		adds	r2, r3, #1
 18650 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18651 006a B3F57A7F 		cmp	r3, #1000
 18652 006e F2D9     		bls	.L745
 18653              	.L744:
2678:..\src/command_processing.c **** 
2679:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18654              		.loc 1 2679 0 is_stmt 1
 18655 0070 0120     		movs	r0, #1
 18656 0072 FFF7FEFF 		bl	RS485_CTS_Write
2680:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18657              		.loc 1 2680 0
 18658 0076 0020     		movs	r0, #0
 18659 0078 FFF7FEFF 		bl	RS485_CTS_Write
2681:..\src/command_processing.c **** }
 18660              		.loc 1 2681 0
 18661 007c 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 415


 18662 007e 1037     		adds	r7, r7, #16
 18663              		.cfi_def_cfa_offset 8
 18664 0080 BD46     		mov	sp, r7
 18665              		.cfi_def_cfa_register 13
 18666              		@ sp needed
 18667 0082 80BD     		pop	{r7, pc}
 18668              		.cfi_endproc
 18669              	.LFE78:
 18670              		.size	commWrite_old_id, .-commWrite_old_id
 18671              		.section	.text.commWrite,"ax",%progbits
 18672              		.align	2
 18673              		.global	commWrite
 18674              		.thumb
 18675              		.thumb_func
 18676              		.type	commWrite, %function
 18677              	commWrite:
 18678              	.LFB79:
2682:..\src/command_processing.c **** 
2683:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2684:..\src/command_processing.c **** {
 18679              		.loc 1 2684 0
 18680              		.cfi_startproc
 18681              		@ args = 0, pretend = 0, frame = 16
 18682              		@ frame_needed = 1, uses_anonymous_args = 0
 18683 0000 80B5     		push	{r7, lr}
 18684              		.cfi_def_cfa_offset 8
 18685              		.cfi_offset 7, -8
 18686              		.cfi_offset 14, -4
 18687 0002 84B0     		sub	sp, sp, #16
 18688              		.cfi_def_cfa_offset 24
 18689 0004 00AF     		add	r7, sp, #0
 18690              		.cfi_def_cfa_register 7
 18691 0006 7860     		str	r0, [r7, #4]
 18692 0008 0B46     		mov	r3, r1
 18693 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2685:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c ****     // frame - start
2688:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18694              		.loc 1 2688 0
 18695 000c 3A20     		movs	r0, #58
 18696 000e FFF7FEFF 		bl	UART_RS485_PutChar
2689:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18697              		.loc 1 2689 0
 18698 0012 3A20     		movs	r0, #58
 18699 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2690:..\src/command_processing.c ****     // frame - ID
2691:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 18700              		.loc 1 2691 0
 18701 0018 1A4B     		ldr	r3, .L751
 18702 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18703 001e 1846     		mov	r0, r3
 18704 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2692:..\src/command_processing.c ****     // frame - length
2693:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18705              		.loc 1 2693 0
 18706 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 416


 18707 0026 DBB2     		uxtb	r3, r3
 18708 0028 1846     		mov	r0, r3
 18709 002a FFF7FEFF 		bl	UART_RS485_PutChar
2694:..\src/command_processing.c ****     // frame - packet data
2695:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18710              		.loc 1 2695 0
 18711 002e 0023     		movs	r3, #0
 18712 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18713 0032 09E0     		b	.L747
 18714              	.L748:
2696:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18715              		.loc 1 2696 0 discriminator 3
 18716 0034 FB89     		ldrh	r3, [r7, #14]
 18717 0036 7A68     		ldr	r2, [r7, #4]
 18718 0038 1344     		add	r3, r3, r2
 18719 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18720 003c 1846     		mov	r0, r3
 18721 003e FFF7FEFF 		bl	UART_RS485_PutChar
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18722              		.loc 1 2695 0 discriminator 3
 18723 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18724 0044 0133     		adds	r3, r3, #1
 18725 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18726              	.L747:
2695:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18727              		.loc 1 2695 0 is_stmt 0 discriminator 1
 18728 0048 FA89     		ldrh	r2, [r7, #14]
 18729 004a 7B88     		ldrh	r3, [r7, #2]
 18730 004c 9A42     		cmp	r2, r3
 18731 004e F1D3     		bcc	.L748
2697:..\src/command_processing.c ****     }
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c ****     index = 0;
 18732              		.loc 1 2699 0 is_stmt 1
 18733 0050 0023     		movs	r3, #0
 18734 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2700:..\src/command_processing.c **** 
2701:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18735              		.loc 1 2701 0
 18736 0054 00BF     		nop
 18737              	.L750:
 18738              		.loc 1 2701 0 is_stmt 0 discriminator 2
 18739 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18740 005a 0346     		mov	r3, r0
 18741 005c 03F00103 		and	r3, r3, #1
 18742 0060 002B     		cmp	r3, #0
 18743 0062 05D1     		bne	.L749
 18744              		.loc 1 2701 0 discriminator 1
 18745 0064 FB89     		ldrh	r3, [r7, #14]
 18746 0066 5A1C     		adds	r2, r3, #1
 18747 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18748 006a B3F57A7F 		cmp	r3, #1000
 18749 006e F2D9     		bls	.L750
 18750              	.L749:
2702:..\src/command_processing.c **** 
2703:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18751              		.loc 1 2703 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 417


 18752 0070 0120     		movs	r0, #1
 18753 0072 FFF7FEFF 		bl	RS485_CTS_Write
2704:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18754              		.loc 1 2704 0
 18755 0076 0020     		movs	r0, #0
 18756 0078 FFF7FEFF 		bl	RS485_CTS_Write
2705:..\src/command_processing.c **** }
 18757              		.loc 1 2705 0
 18758 007c 00BF     		nop
 18759 007e 1037     		adds	r7, r7, #16
 18760              		.cfi_def_cfa_offset 8
 18761 0080 BD46     		mov	sp, r7
 18762              		.cfi_def_cfa_register 13
 18763              		@ sp needed
 18764 0082 80BD     		pop	{r7, pc}
 18765              	.L752:
 18766              		.align	2
 18767              	.L751:
 18768 0084 00000000 		.word	g_mem
 18769              		.cfi_endproc
 18770              	.LFE79:
 18771              		.size	commWrite, .-commWrite
 18772              		.section	.text.commWriteID,"ax",%progbits
 18773              		.align	2
 18774              		.global	commWriteID
 18775              		.thumb
 18776              		.thumb_func
 18777              		.type	commWriteID, %function
 18778              	commWriteID:
 18779              	.LFB80:
2706:..\src/command_processing.c **** 
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
2709:..\src/command_processing.c **** //==============================================================================
2710:..\src/command_processing.c **** 
2711:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2712:..\src/command_processing.c **** {
 18780              		.loc 1 2712 0
 18781              		.cfi_startproc
 18782              		@ args = 0, pretend = 0, frame = 8
 18783              		@ frame_needed = 1, uses_anonymous_args = 0
 18784 0000 80B5     		push	{r7, lr}
 18785              		.cfi_def_cfa_offset 8
 18786              		.cfi_offset 7, -8
 18787              		.cfi_offset 14, -4
 18788 0002 82B0     		sub	sp, sp, #8
 18789              		.cfi_def_cfa_offset 16
 18790 0004 00AF     		add	r7, sp, #0
 18791              		.cfi_def_cfa_register 7
 18792 0006 7860     		str	r0, [r7, #4]
 18793 0008 0B46     		mov	r3, r1
 18794 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 18795 000c 1346     		mov	r3, r2
 18796 000e 7B70     		strb	r3, [r7, #1]
2713:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2714:..\src/command_processing.c **** 
2715:..\src/command_processing.c ****     // frame - start
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 418


2716:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18797              		.loc 1 2716 0
 18798 0010 3A20     		movs	r0, #58
 18799 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2717:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18800              		.loc 1 2717 0
 18801 0016 3A20     		movs	r0, #58
 18802 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2718:..\src/command_processing.c ****     // frame - ID
2719:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 18803              		.loc 1 2719 0
 18804 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 18805 001e 1846     		mov	r0, r3
 18806 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2720:..\src/command_processing.c ****     // frame - length
2721:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18807              		.loc 1 2721 0
 18808 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18809 0026 DBB2     		uxtb	r3, r3
 18810 0028 1846     		mov	r0, r3
 18811 002a FFF7FEFF 		bl	UART_RS485_PutChar
2722:..\src/command_processing.c ****     // frame - packet data
2723:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 18812              		.loc 1 2723 0
 18813 002e 1B4B     		ldr	r3, .L758
 18814 0030 0022     		movs	r2, #0
 18815 0032 1A80     		strh	r2, [r3]	@ movhi
 18816 0034 0EE0     		b	.L754
 18817              	.L755:
2724:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 18818              		.loc 1 2724 0 discriminator 3
 18819 0036 194B     		ldr	r3, .L758
 18820 0038 1B88     		ldrh	r3, [r3]
 18821 003a 1A46     		mov	r2, r3
 18822 003c 7B68     		ldr	r3, [r7, #4]
 18823 003e 1344     		add	r3, r3, r2
 18824 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18825 0042 1846     		mov	r0, r3
 18826 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 18827              		.loc 1 2723 0 discriminator 3
 18828 0048 144B     		ldr	r3, .L758
 18829 004a 1B88     		ldrh	r3, [r3]
 18830 004c 0133     		adds	r3, r3, #1
 18831 004e 9AB2     		uxth	r2, r3
 18832 0050 124B     		ldr	r3, .L758
 18833 0052 1A80     		strh	r2, [r3]	@ movhi
 18834              	.L754:
2723:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 18835              		.loc 1 2723 0 is_stmt 0 discriminator 1
 18836 0054 114B     		ldr	r3, .L758
 18837 0056 1B88     		ldrh	r3, [r3]
 18838 0058 7A88     		ldrh	r2, [r7, #2]
 18839 005a 9A42     		cmp	r2, r3
 18840 005c EBD8     		bhi	.L755
2725:..\src/command_processing.c ****     }
2726:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 419


2727:..\src/command_processing.c ****     i = 0;
 18841              		.loc 1 2727 0 is_stmt 1
 18842 005e 0F4B     		ldr	r3, .L758
 18843 0060 0022     		movs	r2, #0
 18844 0062 1A80     		strh	r2, [r3]	@ movhi
2728:..\src/command_processing.c **** 
2729:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 18845              		.loc 1 2729 0
 18846 0064 00BF     		nop
 18847              	.L757:
 18848              		.loc 1 2729 0 is_stmt 0 discriminator 2
 18849 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18850 006a 0346     		mov	r3, r0
 18851 006c 03F00103 		and	r3, r3, #1
 18852 0070 002B     		cmp	r3, #0
 18853 0072 08D1     		bne	.L756
 18854              		.loc 1 2729 0 discriminator 1
 18855 0074 094B     		ldr	r3, .L758
 18856 0076 1B88     		ldrh	r3, [r3]
 18857 0078 5A1C     		adds	r2, r3, #1
 18858 007a 91B2     		uxth	r1, r2
 18859 007c 074A     		ldr	r2, .L758
 18860 007e 1180     		strh	r1, [r2]	@ movhi
 18861 0080 B3F57A7F 		cmp	r3, #1000
 18862 0084 EFD9     		bls	.L757
 18863              	.L756:
2730:..\src/command_processing.c ****     
2731:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18864              		.loc 1 2731 0 is_stmt 1
 18865 0086 0120     		movs	r0, #1
 18866 0088 FFF7FEFF 		bl	RS485_CTS_Write
2732:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18867              		.loc 1 2732 0
 18868 008c 0020     		movs	r0, #0
 18869 008e FFF7FEFF 		bl	RS485_CTS_Write
2733:..\src/command_processing.c **** }
 18870              		.loc 1 2733 0
 18871 0092 00BF     		nop
 18872 0094 0837     		adds	r7, r7, #8
 18873              		.cfi_def_cfa_offset 8
 18874 0096 BD46     		mov	sp, r7
 18875              		.cfi_def_cfa_register 13
 18876              		@ sp needed
 18877 0098 80BD     		pop	{r7, pc}
 18878              	.L759:
 18879 009a 00BF     		.align	2
 18880              	.L758:
 18881 009c 00000000 		.word	i.11141
 18882              		.cfi_endproc
 18883              	.LFE80:
 18884              		.size	commWriteID, .-commWriteID
 18885              		.section	.text.LCRChecksum,"ax",%progbits
 18886              		.align	2
 18887              		.global	LCRChecksum
 18888              		.thumb
 18889              		.thumb_func
 18890              		.type	LCRChecksum, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 420


 18891              	LCRChecksum:
 18892              	.LFB81:
2734:..\src/command_processing.c **** 
2735:..\src/command_processing.c **** //==============================================================================
2736:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2737:..\src/command_processing.c **** //==============================================================================
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2740:..\src/command_processing.c **** 
2741:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 18893              		.loc 1 2741 0
 18894              		.cfi_startproc
 18895              		@ args = 0, pretend = 0, frame = 16
 18896              		@ frame_needed = 1, uses_anonymous_args = 0
 18897              		@ link register save eliminated.
 18898 0000 80B4     		push	{r7}
 18899              		.cfi_def_cfa_offset 4
 18900              		.cfi_offset 7, -4
 18901 0002 85B0     		sub	sp, sp, #20
 18902              		.cfi_def_cfa_offset 24
 18903 0004 00AF     		add	r7, sp, #0
 18904              		.cfi_def_cfa_register 7
 18905 0006 7860     		str	r0, [r7, #4]
 18906 0008 0B46     		mov	r3, r1
 18907 000a FB70     		strb	r3, [r7, #3]
2742:..\src/command_processing.c ****     
2743:..\src/command_processing.c ****     uint8 CYDATA i;
2744:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 18908              		.loc 1 2744 0
 18909 000c 0023     		movs	r3, #0
 18910 000e BB73     		strb	r3, [r7, #14]
2745:..\src/command_processing.c ****     
2746:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 18911              		.loc 1 2746 0
 18912 0010 0023     		movs	r3, #0
 18913 0012 FB73     		strb	r3, [r7, #15]
 18914 0014 09E0     		b	.L761
 18915              	.L762:
2747:..\src/command_processing.c ****        checksum ^= data_array[i];
 18916              		.loc 1 2747 0 discriminator 3
 18917 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 18918 0018 7A68     		ldr	r2, [r7, #4]
 18919 001a 1344     		add	r3, r3, r2
 18920 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 18921 001e BB7B     		ldrb	r3, [r7, #14]
 18922 0020 5340     		eors	r3, r3, r2
 18923 0022 BB73     		strb	r3, [r7, #14]
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 18924              		.loc 1 2746 0 discriminator 3
 18925 0024 FB7B     		ldrb	r3, [r7, #15]
 18926 0026 0133     		adds	r3, r3, #1
 18927 0028 FB73     		strb	r3, [r7, #15]
 18928              	.L761:
2746:..\src/command_processing.c ****        checksum ^= data_array[i];
 18929              		.loc 1 2746 0 is_stmt 0 discriminator 1
 18930 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 18931 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 421


 18932 002e 9A42     		cmp	r2, r3
 18933 0030 F1D3     		bcc	.L762
2748:..\src/command_processing.c ****   
2749:..\src/command_processing.c ****     return checksum;
 18934              		.loc 1 2749 0 is_stmt 1
 18935 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2750:..\src/command_processing.c **** }
 18936              		.loc 1 2750 0
 18937 0034 1846     		mov	r0, r3
 18938 0036 1437     		adds	r7, r7, #20
 18939              		.cfi_def_cfa_offset 4
 18940 0038 BD46     		mov	sp, r7
 18941              		.cfi_def_cfa_register 13
 18942              		@ sp needed
 18943 003a 80BC     		pop	{r7}
 18944              		.cfi_restore 7
 18945              		.cfi_def_cfa_offset 0
 18946 003c 7047     		bx	lr
 18947              		.cfi_endproc
 18948              	.LFE81:
 18949              		.size	LCRChecksum, .-LCRChecksum
 18950 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 18951              		.align	2
 18952              		.global	sendAcknowledgment
 18953              		.thumb
 18954              		.thumb_func
 18955              		.type	sendAcknowledgment, %function
 18956              	sendAcknowledgment:
 18957              	.LFB82:
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c **** 
2753:..\src/command_processing.c **** //==============================================================================
2754:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2755:..\src/command_processing.c **** //==============================================================================
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 18958              		.loc 1 2757 0
 18959              		.cfi_startproc
 18960              		@ args = 0, pretend = 0, frame = 16
 18961              		@ frame_needed = 1, uses_anonymous_args = 0
 18962 0000 80B5     		push	{r7, lr}
 18963              		.cfi_def_cfa_offset 8
 18964              		.cfi_offset 7, -8
 18965              		.cfi_offset 14, -4
 18966 0002 84B0     		sub	sp, sp, #16
 18967              		.cfi_def_cfa_offset 24
 18968 0004 00AF     		add	r7, sp, #0
 18969              		.cfi_def_cfa_register 7
 18970 0006 0346     		mov	r3, r0
 18971 0008 FB71     		strb	r3, [r7, #7]
2758:..\src/command_processing.c ****     int packet_lenght = 2;
 18972              		.loc 1 2758 0
 18973 000a 0223     		movs	r3, #2
 18974 000c FB60     		str	r3, [r7, #12]
2759:..\src/command_processing.c ****     uint8 packet_data[2];
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     packet_data[0] = value;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 422


 18975              		.loc 1 2761 0
 18976 000e FB79     		ldrb	r3, [r7, #7]
 18977 0010 3B72     		strb	r3, [r7, #8]
2762:..\src/command_processing.c ****     packet_data[1] = value;
 18978              		.loc 1 2762 0
 18979 0012 FB79     		ldrb	r3, [r7, #7]
 18980 0014 7B72     		strb	r3, [r7, #9]
2763:..\src/command_processing.c **** 
2764:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 18981              		.loc 1 2764 0
 18982 0016 FB68     		ldr	r3, [r7, #12]
 18983 0018 9AB2     		uxth	r2, r3
 18984 001a 07F10803 		add	r3, r7, #8
 18985 001e 1146     		mov	r1, r2
 18986 0020 1846     		mov	r0, r3
 18987 0022 FFF7FEFF 		bl	commWrite
2765:..\src/command_processing.c **** }
 18988              		.loc 1 2765 0
 18989 0026 00BF     		nop
 18990 0028 1037     		adds	r7, r7, #16
 18991              		.cfi_def_cfa_offset 8
 18992 002a BD46     		mov	sp, r7
 18993              		.cfi_def_cfa_register 13
 18994              		@ sp needed
 18995 002c 80BD     		pop	{r7, pc}
 18996              		.cfi_endproc
 18997              	.LFE82:
 18998              		.size	sendAcknowledgment, .-sendAcknowledgment
 18999 002e 00BF     		.section	.text.memStore,"ax",%progbits
 19000              		.align	2
 19001              		.global	memStore
 19002              		.thumb
 19003              		.thumb_func
 19004              		.type	memStore, %function
 19005              	memStore:
 19006              	.LFB83:
2766:..\src/command_processing.c **** 
2767:..\src/command_processing.c **** //==============================================================================
2768:..\src/command_processing.c **** //                                                                  STORE MEMORY
2769:..\src/command_processing.c **** //==============================================================================
2770:..\src/command_processing.c **** 
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c **** uint8 memStore(int displacement)
2773:..\src/command_processing.c **** {
 19007              		.loc 1 2773 0
 19008              		.cfi_startproc
 19009              		@ args = 0, pretend = 0, frame = 24
 19010              		@ frame_needed = 1, uses_anonymous_args = 0
 19011 0000 80B5     		push	{r7, lr}
 19012              		.cfi_def_cfa_offset 8
 19013              		.cfi_offset 7, -8
 19014              		.cfi_offset 14, -4
 19015 0002 86B0     		sub	sp, sp, #24
 19016              		.cfi_def_cfa_offset 32
 19017 0004 00AF     		add	r7, sp, #0
 19018              		.cfi_def_cfa_register 7
 19019 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 423


2774:..\src/command_processing.c ****     int i;  // iterator
2775:..\src/command_processing.c ****     uint8 writeStatus;
2776:..\src/command_processing.c ****     int pages;
2777:..\src/command_processing.c ****     uint8 ret_val = 1;
 19020              		.loc 1 2777 0
 19021 0008 0123     		movs	r3, #1
 19022 000a FB74     		strb	r3, [r7, #19]
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     // Disable Interrupt
2780:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 19023              		.loc 1 2780 0
 19024 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2781:..\src/command_processing.c **** 
2782:..\src/command_processing.c ****     // Stop motor
2783:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 19025              		.loc 1 2783 0
 19026 0010 0020     		movs	r0, #0
 19027 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2786:..\src/command_processing.c ****     CySetTemp();
 19028              		.loc 1 2786 0
 19029 0016 FFF7FEFF 		bl	CySetTemp
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 19030              		.loc 1 2788 0
 19031 001a 1D4A     		ldr	r2, .L771
 19032 001c 1D4B     		ldr	r3, .L771+4
 19033 001e 1046     		mov	r0, r2
 19034 0020 1946     		mov	r1, r3
 19035 0022 4FF43473 		mov	r3, #720
 19036 0026 1A46     		mov	r2, r3
 19037 0028 FFF7FEFF 		bl	memcpy
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 19038              		.loc 1 2790 0
 19039 002c 2D23     		movs	r3, #45
 19040 002e FB60     		str	r3, [r7, #12]
2791:..\src/command_processing.c **** 
2792:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 19041              		.loc 1 2792 0
 19042 0030 0023     		movs	r3, #0
 19043 0032 7B61     		str	r3, [r7, #20]
 19044 0034 18E0     		b	.L766
 19045              	.L769:
2793:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19046              		.loc 1 2793 0
 19047 0036 7B69     		ldr	r3, [r7, #20]
 19048 0038 1B01     		lsls	r3, r3, #4
 19049 003a 1A46     		mov	r2, r3
 19050 003c 154B     		ldr	r3, .L771+4
 19051 003e D018     		adds	r0, r2, r3
 19052 0040 7B69     		ldr	r3, [r7, #20]
 19053 0042 DAB2     		uxtb	r2, r3
 19054 0044 7B68     		ldr	r3, [r7, #4]
 19055 0046 DBB2     		uxtb	r3, r3
 19056 0048 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 424


 19057 004a DBB2     		uxtb	r3, r3
 19058 004c 1946     		mov	r1, r3
 19059 004e FFF7FEFF 		bl	EEPROM_Write
 19060 0052 0346     		mov	r3, r0
 19061 0054 FB72     		strb	r3, [r7, #11]
2794:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 19062              		.loc 1 2794 0
 19063 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 19064 0058 002B     		cmp	r3, #0
 19065 005a 02D0     		beq	.L767
2795:..\src/command_processing.c ****             ret_val = 0;
 19066              		.loc 1 2795 0
 19067 005c 0023     		movs	r3, #0
 19068 005e FB74     		strb	r3, [r7, #19]
2796:..\src/command_processing.c ****             break;
 19069              		.loc 1 2796 0
 19070 0060 06E0     		b	.L768
 19071              	.L767:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19072              		.loc 1 2792 0 discriminator 2
 19073 0062 7B69     		ldr	r3, [r7, #20]
 19074 0064 0133     		adds	r3, r3, #1
 19075 0066 7B61     		str	r3, [r7, #20]
 19076              	.L766:
2792:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19077              		.loc 1 2792 0 is_stmt 0 discriminator 1
 19078 0068 7A69     		ldr	r2, [r7, #20]
 19079 006a FB68     		ldr	r3, [r7, #12]
 19080 006c 9A42     		cmp	r2, r3
 19081 006e E2DB     		blt	.L769
 19082              	.L768:
2797:..\src/command_processing.c ****         }
2798:..\src/command_processing.c ****     }
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 19083              		.loc 1 2800 0 is_stmt 1
 19084 0070 084A     		ldr	r2, .L771+4
 19085 0072 074B     		ldr	r3, .L771
 19086 0074 1046     		mov	r0, r2
 19087 0076 1946     		mov	r1, r3
 19088 0078 4FF43473 		mov	r3, #720
 19089 007c 1A46     		mov	r2, r3
 19090 007e FFF7FEFF 		bl	memcpy
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     // Re-Enable Interrupt
2803:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 19091              		.loc 1 2803 0
 19092 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c ****     return ret_val;
 19093              		.loc 1 2805 0
 19094 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2806:..\src/command_processing.c **** }
 19095              		.loc 1 2806 0
 19096 0088 1846     		mov	r0, r3
 19097 008a 1837     		adds	r7, r7, #24
 19098              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 425


 19099 008c BD46     		mov	sp, r7
 19100              		.cfi_def_cfa_register 13
 19101              		@ sp needed
 19102 008e 80BD     		pop	{r7, pc}
 19103              	.L772:
 19104              		.align	2
 19105              	.L771:
 19106 0090 00000000 		.word	c_mem
 19107 0094 00000000 		.word	g_mem
 19108              		.cfi_endproc
 19109              	.LFE83:
 19110              		.size	memStore, .-memStore
 19111              		.section	.text.memRecall,"ax",%progbits
 19112              		.align	2
 19113              		.global	memRecall
 19114              		.thumb
 19115              		.thumb_func
 19116              		.type	memRecall, %function
 19117              	memRecall:
 19118              	.LFB84:
2807:..\src/command_processing.c **** 
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** //==============================================================================
2810:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2811:..\src/command_processing.c **** //==============================================================================
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c **** void memRecall(void)
2815:..\src/command_processing.c **** {
 19119              		.loc 1 2815 0
 19120              		.cfi_startproc
 19121              		@ args = 0, pretend = 0, frame = 8
 19122              		@ frame_needed = 1, uses_anonymous_args = 0
 19123 0000 80B5     		push	{r7, lr}
 19124              		.cfi_def_cfa_offset 8
 19125              		.cfi_offset 7, -8
 19126              		.cfi_offset 14, -4
 19127 0002 82B0     		sub	sp, sp, #8
 19128              		.cfi_def_cfa_offset 16
 19129 0004 00AF     		add	r7, sp, #0
 19130              		.cfi_def_cfa_register 7
2816:..\src/command_processing.c ****     uint16 i;
2817:..\src/command_processing.c **** 
2818:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19131              		.loc 1 2818 0
 19132 0006 0023     		movs	r3, #0
 19133 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19134 000a 0CE0     		b	.L774
 19135              	.L775:
2819:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19136              		.loc 1 2819 0 discriminator 3
 19137 000c FB88     		ldrh	r3, [r7, #6]
 19138 000e 184A     		ldr	r2, .L779
 19139 0010 1344     		add	r3, r3, r2
 19140 0012 184A     		ldr	r2, .L779+4
 19141 0014 1168     		ldr	r1, [r2]
 19142 0016 FA88     		ldrh	r2, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 426


 19143 0018 0A44     		add	r2, r2, r1
 19144 001a 1278     		ldrb	r2, [r2]
 19145 001c D2B2     		uxtb	r2, r2
 19146 001e 1A70     		strb	r2, [r3]
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19147              		.loc 1 2818 0 discriminator 3
 19148 0020 FB88     		ldrh	r3, [r7, #6]
 19149 0022 0133     		adds	r3, r3, #1
 19150 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 19151              	.L774:
2818:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19152              		.loc 1 2818 0 is_stmt 0 discriminator 1
 19153 0026 FB88     		ldrh	r3, [r7, #6]
 19154 0028 B3F5347F 		cmp	r3, #720
 19155 002c EED3     		bcc	.L775
2820:..\src/command_processing.c ****     }
2821:..\src/command_processing.c ****     
2822:..\src/command_processing.c ****     // Recall saved user_emg structure
2823:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 19156              		.loc 1 2823 0 is_stmt 1
 19157 002e 104B     		ldr	r3, .L779
 19158 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19159 0034 5B01     		lsls	r3, r3, #5
 19160 0036 03F51273 		add	r3, r3, #584
 19161 003a 0D4A     		ldr	r2, .L779
 19162 003c 1344     		add	r3, r3, r2
 19163 003e 1022     		movs	r2, #16
 19164 0040 1946     		mov	r1, r3
 19165 0042 0D48     		ldr	r0, .L779+8
 19166 0044 FFF7FEFF 		bl	memcpy
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c ****     //check for initialization
2826:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19167              		.loc 1 2826 0
 19168 0048 094B     		ldr	r3, .L779
 19169 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19170 004c 002B     		cmp	r3, #0
 19171 004e 02D1     		bne	.L776
2827:..\src/command_processing.c ****         memRestore();
 19172              		.loc 1 2827 0
 19173 0050 FFF7FEFF 		bl	memRestore
2828:..\src/command_processing.c ****     } else {
2829:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2830:..\src/command_processing.c ****     }        
2831:..\src/command_processing.c **** }
 19174              		.loc 1 2831 0
 19175 0054 08E0     		b	.L778
 19176              	.L776:
2829:..\src/command_processing.c ****     }        
 19177              		.loc 1 2829 0
 19178 0056 094A     		ldr	r2, .L779+12
 19179 0058 054B     		ldr	r3, .L779
 19180 005a 1046     		mov	r0, r2
 19181 005c 1946     		mov	r1, r3
 19182 005e 4FF43473 		mov	r3, #720
 19183 0062 1A46     		mov	r2, r3
 19184 0064 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 427


 19185              	.L778:
 19186              		.loc 1 2831 0
 19187 0068 00BF     		nop
 19188 006a 0837     		adds	r7, r7, #8
 19189              		.cfi_def_cfa_offset 8
 19190 006c BD46     		mov	sp, r7
 19191              		.cfi_def_cfa_register 13
 19192              		@ sp needed
 19193 006e 80BD     		pop	{r7, pc}
 19194              	.L780:
 19195              		.align	2
 19196              	.L779:
 19197 0070 00000000 		.word	g_mem
 19198 0074 00000000 		.word	EEPROM_ADDR
 19199 0078 F0010000 		.word	g_mem+496
 19200 007c 00000000 		.word	c_mem
 19201              		.cfi_endproc
 19202              	.LFE84:
 19203              		.size	memRecall, .-memRecall
 19204              		.section	.text.memRestore,"ax",%progbits
 19205              		.align	2
 19206              		.global	memRestore
 19207              		.thumb
 19208              		.thumb_func
 19209              		.type	memRestore, %function
 19210              	memRestore:
 19211              	.LFB85:
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c **** 
2834:..\src/command_processing.c **** //==============================================================================
2835:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2836:..\src/command_processing.c **** //==============================================================================
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c **** uint8 memRestore(void) {
 19212              		.loc 1 2839 0
 19213              		.cfi_startproc
 19214              		@ args = 0, pretend = 0, frame = 8
 19215              		@ frame_needed = 1, uses_anonymous_args = 0
 19216 0000 80B5     		push	{r7, lr}
 19217              		.cfi_def_cfa_offset 8
 19218              		.cfi_offset 7, -8
 19219              		.cfi_offset 14, -4
 19220 0002 82B0     		sub	sp, sp, #8
 19221              		.cfi_def_cfa_offset 16
 19222 0004 00AF     		add	r7, sp, #0
 19223              		.cfi_def_cfa_register 7
2840:..\src/command_processing.c ****     uint16 i;
2841:..\src/command_processing.c **** 
2842:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19224              		.loc 1 2842 0
 19225 0006 0023     		movs	r3, #0
 19226 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19227 000a 0EE0     		b	.L782
 19228              	.L783:
2843:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19229              		.loc 1 2843 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 428


 19230 000c FB88     		ldrh	r3, [r7, #6]
 19231 000e 114A     		ldr	r2, .L786
 19232 0010 1344     		add	r3, r3, r2
 19233 0012 114A     		ldr	r2, .L786+4
 19234 0014 1168     		ldr	r1, [r2]
 19235 0016 FA88     		ldrh	r2, [r7, #6]
 19236 0018 02F54872 		add	r2, r2, #800
 19237 001c 0A44     		add	r2, r2, r1
 19238 001e 1278     		ldrb	r2, [r2]
 19239 0020 D2B2     		uxtb	r2, r2
 19240 0022 1A70     		strb	r2, [r3]
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19241              		.loc 1 2842 0 discriminator 3
 19242 0024 FB88     		ldrh	r3, [r7, #6]
 19243 0026 0133     		adds	r3, r3, #1
 19244 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 19245              	.L782:
2842:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19246              		.loc 1 2842 0 is_stmt 0 discriminator 1
 19247 002a FB88     		ldrh	r3, [r7, #6]
 19248 002c B3F5347F 		cmp	r3, #720
 19249 0030 ECD3     		bcc	.L783
2844:..\src/command_processing.c ****     }
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     //check for initialization
2847:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19250              		.loc 1 2847 0 is_stmt 1
 19251 0032 084B     		ldr	r3, .L786
 19252 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19253 0036 002B     		cmp	r3, #0
 19254 0038 03D1     		bne	.L784
2848:..\src/command_processing.c ****         return memInit();
 19255              		.loc 1 2848 0
 19256 003a FFF7FEFF 		bl	memInit
 19257 003e 0346     		mov	r3, r0
 19258 0040 03E0     		b	.L785
 19259              	.L784:
2849:..\src/command_processing.c ****     } else {
2850:..\src/command_processing.c ****         return memStore(0);
 19260              		.loc 1 2850 0
 19261 0042 0020     		movs	r0, #0
 19262 0044 FFF7FEFF 		bl	memStore
 19263 0048 0346     		mov	r3, r0
 19264              	.L785:
2851:..\src/command_processing.c ****     }  
2852:..\src/command_processing.c **** }
 19265              		.loc 1 2852 0
 19266 004a 1846     		mov	r0, r3
 19267 004c 0837     		adds	r7, r7, #8
 19268              		.cfi_def_cfa_offset 8
 19269 004e BD46     		mov	sp, r7
 19270              		.cfi_def_cfa_register 13
 19271              		@ sp needed
 19272 0050 80BD     		pop	{r7, pc}
 19273              	.L787:
 19274 0052 00BF     		.align	2
 19275              	.L786:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 429


 19276 0054 00000000 		.word	g_mem
 19277 0058 00000000 		.word	EEPROM_ADDR
 19278              		.cfi_endproc
 19279              	.LFE85:
 19280              		.size	memRestore, .-memRestore
 19281              		.section	.rodata
 19282 1a87 00       		.align	2
 19283              	.LC260:
 19284 1a88 47454E30 		.ascii	"GEN001\000"
 19284      303100
 19285              		.section	.text.memInit,"ax",%progbits
 19286              		.align	2
 19287              		.global	memInit
 19288              		.thumb
 19289              		.thumb_func
 19290              		.type	memInit, %function
 19291              	memInit:
 19292              	.LFB86:
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c **** //==============================================================================
2855:..\src/command_processing.c **** //                                                                   MEMORY INIT
2856:..\src/command_processing.c **** //==============================================================================
2857:..\src/command_processing.c **** 
2858:..\src/command_processing.c **** uint8 memInit(void)
2859:..\src/command_processing.c **** {
 19293              		.loc 1 2859 0
 19294              		.cfi_startproc
 19295              		@ args = 0, pretend = 0, frame = 8
 19296              		@ frame_needed = 1, uses_anonymous_args = 0
 19297 0000 80B5     		push	{r7, lr}
 19298              		.cfi_def_cfa_offset 8
 19299              		.cfi_offset 7, -8
 19300              		.cfi_offset 14, -4
 19301 0002 82B0     		sub	sp, sp, #8
 19302              		.cfi_def_cfa_offset 16
 19303 0004 00AF     		add	r7, sp, #0
 19304              		.cfi_def_cfa_register 7
2860:..\src/command_processing.c ****     uint8 i, j;
2861:..\src/command_processing.c **** 
2862:..\src/command_processing.c ****     //initialize memory settings
2863:..\src/command_processing.c ****     for (i=0; i<15; i++){
 19305              		.loc 1 2863 0
 19306 0006 0023     		movs	r3, #0
 19307 0008 FB71     		strb	r3, [r7, #7]
 19308 000a 07E0     		b	.L789
 19309              	.L790:
2864:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19310              		.loc 1 2864 0 discriminator 3
 19311 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19312 000e B44A     		ldr	r2, .L815
 19313 0010 1344     		add	r3, r3, r2
 19314 0012 0022     		movs	r2, #0
 19315 0014 5A70     		strb	r2, [r3, #1]
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19316              		.loc 1 2863 0 discriminator 3
 19317 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19318 0018 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 430


 19319 001a FB71     		strb	r3, [r7, #7]
 19320              	.L789:
2863:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19321              		.loc 1 2863 0 is_stmt 0 discriminator 1
 19322 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19323 001e 0E2B     		cmp	r3, #14
 19324 0020 F4D9     		bls	.L790
2865:..\src/command_processing.c ****     }
2866:..\src/command_processing.c ****         
2867:..\src/command_processing.c ****     // DEV STRUCT
2868:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 19325              		.loc 1 2868 0 is_stmt 1
 19326 0022 AF4B     		ldr	r3, .L815
 19327 0024 0122     		movs	r2, #1
 19328 0026 83F8A020 		strb	r2, [r3, #160]
2869:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 19329              		.loc 1 2869 0
 19330 002a AD4B     		ldr	r3, .L815
 19331 002c 0022     		movs	r2, #0
 19332 002e 83F8A720 		strb	r2, [r3, #167]
2870:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 19333              		.loc 1 2870 0
 19334 0032 AB4B     		ldr	r3, .L815
 19335 0034 0122     		movs	r2, #1
 19336 0036 83F8AC20 		strb	r2, [r3, #172]
2871:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 19337              		.loc 1 2871 0
 19338 003a A94B     		ldr	r3, .L815
 19339 003c 0022     		movs	r2, #0
 19340 003e 83F8A820 		strb	r2, [r3, #168]
2872:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 19341              		.loc 1 2872 0
 19342 0042 FFF7FEFF 		bl	reset_counters
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19343              		.loc 1 2873 0
 19344 0046 0023     		movs	r3, #0
 19345 0048 FB71     		strb	r3, [r7, #7]
 19346 004a 08E0     		b	.L791
 19347              	.L792:
2874:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 19348              		.loc 1 2874 0 discriminator 3
 19349 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19350 004e A44A     		ldr	r2, .L815
 19351 0050 1344     		add	r3, r3, r2
 19352 0052 0022     		movs	r2, #0
 19353 0054 83F86020 		strb	r2, [r3, #96]
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19354              		.loc 1 2873 0 discriminator 3
 19355 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19356 005a 0133     		adds	r3, r3, #1
 19357 005c FB71     		strb	r3, [r7, #7]
 19358              	.L791:
2873:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19359              		.loc 1 2873 0 is_stmt 0 discriminator 1
 19360 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19361 0060 3F2B     		cmp	r3, #63
 19362 0062 F3D9     		bls	.L792
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 431


2875:..\src/command_processing.c ****     }
2876:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 19363              		.loc 1 2876 0 is_stmt 1
 19364 0064 9E4B     		ldr	r3, .L815
 19365 0066 0022     		movs	r2, #0
 19366 0068 83F8A920 		strb	r2, [r3, #169]
2877:..\src/command_processing.c **** 
2878:..\src/command_processing.c ****     // MOTOR STRUCT
2879:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19367              		.loc 1 2879 0
 19368 006c 0023     		movs	r3, #0
 19369 006e FB71     		strb	r3, [r7, #7]
 19370 0070 15E1     		b	.L793
 19371              	.L796:
2880:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19372              		.loc 1 2880 0
 19373 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19374 0074 9A49     		ldr	r1, .L815
 19375 0076 1346     		mov	r3, r2
 19376 0078 DB00     		lsls	r3, r3, #3
 19377 007a 9B1A     		subs	r3, r3, r2
 19378 007c 1B01     		lsls	r3, r3, #4
 19379 007e 0B44     		add	r3, r3, r1
 19380 0080 B033     		adds	r3, r3, #176
 19381 0082 40F23942 		movw	r2, #1081
 19382 0086 1A60     		str	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 19383              		.loc 1 2881 0
 19384 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19385 008a 9549     		ldr	r1, .L815
 19386 008c 1346     		mov	r3, r2
 19387 008e DB00     		lsls	r3, r3, #3
 19388 0090 9B1A     		subs	r3, r3, r2
 19389 0092 1B01     		lsls	r3, r3, #4
 19390 0094 0B44     		add	r3, r3, r1
 19391 0096 B433     		adds	r3, r3, #180
 19392 0098 0022     		movs	r2, #0
 19393 009a 1A60     		str	r2, [r3]
2882:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 19394              		.loc 1 2882 0
 19395 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19396 009e 9049     		ldr	r1, .L815
 19397 00a0 1346     		mov	r3, r2
 19398 00a2 DB00     		lsls	r3, r3, #3
 19399 00a4 9B1A     		subs	r3, r3, r2
 19400 00a6 1B01     		lsls	r3, r3, #4
 19401 00a8 0B44     		add	r3, r3, r1
 19402 00aa B833     		adds	r3, r3, #184
 19403 00ac 4FF4E572 		mov	r2, #458
 19404 00b0 1A60     		str	r2, [r3]
2883:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 19405              		.loc 1 2883 0
 19406 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19407 00b4 8A49     		ldr	r1, .L815
 19408 00b6 1346     		mov	r3, r2
 19409 00b8 DB00     		lsls	r3, r3, #3
 19410 00ba 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 432


 19411 00bc 1B01     		lsls	r3, r3, #4
 19412 00be 0B44     		add	r3, r3, r1
 19413 00c0 BC33     		adds	r3, r3, #188
 19414 00c2 4FF48032 		mov	r2, #65536
 19415 00c6 1A60     		str	r2, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 19416              		.loc 1 2884 0
 19417 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19418 00ca 8549     		ldr	r1, .L815
 19419 00cc 1346     		mov	r3, r2
 19420 00ce DB00     		lsls	r3, r3, #3
 19421 00d0 9B1A     		subs	r3, r3, r2
 19422 00d2 1B01     		lsls	r3, r3, #4
 19423 00d4 0B44     		add	r3, r3, r1
 19424 00d6 C033     		adds	r3, r3, #192
 19425 00d8 4122     		movs	r2, #65
 19426 00da 1A60     		str	r2, [r3]
2885:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 19427              		.loc 1 2885 0
 19428 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19429 00de 8049     		ldr	r1, .L815
 19430 00e0 1346     		mov	r3, r2
 19431 00e2 DB00     		lsls	r3, r3, #3
 19432 00e4 9B1A     		subs	r3, r3, r2
 19433 00e6 1B01     		lsls	r3, r3, #4
 19434 00e8 0B44     		add	r3, r3, r1
 19435 00ea C433     		adds	r3, r3, #196
 19436 00ec 0022     		movs	r2, #0
 19437 00ee 1A60     		str	r2, [r3]
2886:..\src/command_processing.c **** 
2887:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 19438              		.loc 1 2887 0
 19439 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19440 00f2 7B49     		ldr	r1, .L815
 19441 00f4 1346     		mov	r3, r2
 19442 00f6 DB00     		lsls	r3, r3, #3
 19443 00f8 9B1A     		subs	r3, r3, r2
 19444 00fa 1B01     		lsls	r3, r3, #4
 19445 00fc 0B44     		add	r3, r3, r1
 19446 00fe C833     		adds	r3, r3, #200
 19447 0100 41F69912 		movw	r2, #6553
 19448 0104 1A60     		str	r2, [r3]
2888:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 19449              		.loc 1 2888 0
 19450 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19451 0108 7549     		ldr	r1, .L815
 19452 010a 1346     		mov	r3, r2
 19453 010c DB00     		lsls	r3, r3, #3
 19454 010e 9B1A     		subs	r3, r3, r2
 19455 0110 1B01     		lsls	r3, r3, #4
 19456 0112 0B44     		add	r3, r3, r1
 19457 0114 CC33     		adds	r3, r3, #204
 19458 0116 0022     		movs	r2, #0
 19459 0118 1A60     		str	r2, [r3]
2889:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 19460              		.loc 1 2889 0
 19461 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 433


 19462 011c 7049     		ldr	r1, .L815
 19463 011e 1346     		mov	r3, r2
 19464 0120 DB00     		lsls	r3, r3, #3
 19465 0122 9B1A     		subs	r3, r3, r2
 19466 0124 1B01     		lsls	r3, r3, #4
 19467 0126 0B44     		add	r3, r3, r1
 19468 0128 D033     		adds	r3, r3, #208
 19469 012a 0022     		movs	r2, #0
 19470 012c 1A60     		str	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 19471              		.loc 1 2890 0
 19472 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19473 0130 6B49     		ldr	r1, .L815
 19474 0132 1346     		mov	r3, r2
 19475 0134 DB00     		lsls	r3, r3, #3
 19476 0136 9B1A     		subs	r3, r3, r2
 19477 0138 1B01     		lsls	r3, r3, #4
 19478 013a 0B44     		add	r3, r3, r1
 19479 013c D433     		adds	r3, r3, #212
 19480 013e 44F6CC42 		movw	r2, #19660
 19481 0142 1A60     		str	r2, [r3]
2891:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 19482              		.loc 1 2891 0
 19483 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19484 0146 6649     		ldr	r1, .L815
 19485 0148 1346     		mov	r3, r2
 19486 014a DB00     		lsls	r3, r3, #3
 19487 014c 9B1A     		subs	r3, r3, r2
 19488 014e 1B01     		lsls	r3, r3, #4
 19489 0150 0B44     		add	r3, r3, r1
 19490 0152 D833     		adds	r3, r3, #216
 19491 0154 0D22     		movs	r2, #13
 19492 0156 1A60     		str	r2, [r3]
2892:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 19493              		.loc 1 2892 0
 19494 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19495 015a 6149     		ldr	r1, .L815
 19496 015c 1346     		mov	r3, r2
 19497 015e DB00     		lsls	r3, r3, #3
 19498 0160 9B1A     		subs	r3, r3, r2
 19499 0162 1B01     		lsls	r3, r3, #4
 19500 0164 0B44     		add	r3, r3, r1
 19501 0166 DC33     		adds	r3, r3, #220
 19502 0168 0022     		movs	r2, #0
 19503 016a 1A60     		str	r2, [r3]
2893:..\src/command_processing.c **** 
2894:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 19504              		.loc 1 2894 0
 19505 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19506 016e 5C49     		ldr	r1, .L815
 19507 0170 1346     		mov	r3, r2
 19508 0172 DB00     		lsls	r3, r3, #3
 19509 0174 9B1A     		subs	r3, r3, r2
 19510 0176 1B01     		lsls	r3, r3, #4
 19511 0178 0B44     		add	r3, r3, r1
 19512 017a E033     		adds	r3, r3, #224
 19513 017c 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 434


 19514 017e 1A70     		strb	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 19515              		.loc 1 2895 0
 19516 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19517 0182 5749     		ldr	r1, .L815
 19518 0184 1346     		mov	r3, r2
 19519 0186 DB00     		lsls	r3, r3, #3
 19520 0188 9B1A     		subs	r3, r3, r2
 19521 018a 1B01     		lsls	r3, r3, #4
 19522 018c 0B44     		add	r3, r3, r1
 19523 018e E133     		adds	r3, r3, #225
 19524 0190 0022     		movs	r2, #0
 19525 0192 1A70     		strb	r2, [r3]
2896:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 19526              		.loc 1 2896 0
 19527 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19528 0196 5249     		ldr	r1, .L815
 19529 0198 1346     		mov	r3, r2
 19530 019a DB00     		lsls	r3, r3, #3
 19531 019c 9B1A     		subs	r3, r3, r2
 19532 019e 1B01     		lsls	r3, r3, #4
 19533 01a0 0B44     		add	r3, r3, r1
 19534 01a2 E233     		adds	r3, r3, #226
 19535 01a4 0022     		movs	r2, #0
 19536 01a6 1A70     		strb	r2, [r3]
2897:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 19537              		.loc 1 2897 0
 19538 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19539 01aa 4D49     		ldr	r1, .L815
 19540 01ac 1346     		mov	r3, r2
 19541 01ae DB00     		lsls	r3, r3, #3
 19542 01b0 9B1A     		subs	r3, r3, r2
 19543 01b2 1B01     		lsls	r3, r3, #4
 19544 01b4 0B44     		add	r3, r3, r1
 19545 01b6 03F58773 		add	r3, r3, #270
 19546 01ba 0022     		movs	r2, #0
 19547 01bc 1A70     		strb	r2, [r3]
2898:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 19548              		.loc 1 2898 0
 19549 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19550 01c0 4749     		ldr	r1, .L815
 19551 01c2 1346     		mov	r3, r2
 19552 01c4 DB00     		lsls	r3, r3, #3
 19553 01c6 9B1A     		subs	r3, r3, r2
 19554 01c8 1B01     		lsls	r3, r3, #4
 19555 01ca 0B44     		add	r3, r3, r1
 19556 01cc 03F20F13 		addw	r3, r3, #271
 19557 01d0 0022     		movs	r2, #0
 19558 01d2 1A70     		strb	r2, [r3]
2899:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 19559              		.loc 1 2899 0
 19560 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19561 01d6 4249     		ldr	r1, .L815
 19562 01d8 1346     		mov	r3, r2
 19563 01da DB00     		lsls	r3, r3, #3
 19564 01dc 9B1A     		subs	r3, r3, r2
 19565 01de 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 435


 19566 01e0 0B44     		add	r3, r3, r1
 19567 01e2 F033     		adds	r3, r3, #240
 19568 01e4 0022     		movs	r2, #0
 19569 01e6 1A60     		str	r2, [r3]
2900:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 19570              		.loc 1 2900 0
 19571 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19572 01ea 3D49     		ldr	r1, .L815
 19573 01ec 1346     		mov	r3, r2
 19574 01ee DB00     		lsls	r3, r3, #3
 19575 01f0 9B1A     		subs	r3, r3, r2
 19576 01f2 1B01     		lsls	r3, r3, #4
 19577 01f4 0B44     		add	r3, r3, r1
 19578 01f6 EC33     		adds	r3, r3, #236
 19579 01f8 0022     		movs	r2, #0
 19580 01fa 1A60     		str	r2, [r3]
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19581              		.loc 1 2901 0
 19582 01fc 0023     		movs	r3, #0
 19583 01fe BB71     		strb	r3, [r7, #6]
 19584 0200 10E0     		b	.L794
 19585              	.L795:
2902:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 19586              		.loc 1 2902 0 discriminator 3
 19587 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19588 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19589 0206 3648     		ldr	r0, .L815
 19590 0208 1346     		mov	r3, r2
 19591 020a DB00     		lsls	r3, r3, #3
 19592 020c 9B1A     		subs	r3, r3, r2
 19593 020e 9B00     		lsls	r3, r3, #2
 19594 0210 0B44     		add	r3, r3, r1
 19595 0212 3C33     		adds	r3, r3, #60
 19596 0214 9B00     		lsls	r3, r3, #2
 19597 0216 0344     		add	r3, r3, r0
 19598 0218 4FF00002 		mov	r2, #0
 19599 021c 5A60     		str	r2, [r3, #4]	@ float
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19600              		.loc 1 2901 0 discriminator 3
 19601 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19602 0220 0133     		adds	r3, r3, #1
 19603 0222 BB71     		strb	r3, [r7, #6]
 19604              	.L794:
2901:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19605              		.loc 1 2901 0 is_stmt 0 discriminator 1
 19606 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19607 0226 052B     		cmp	r3, #5
 19608 0228 EBD9     		bls	.L795
2903:..\src/command_processing.c ****         }
2904:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 19609              		.loc 1 2904 0 is_stmt 1 discriminator 2
 19610 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19611 022c 2C49     		ldr	r1, .L815
 19612 022e 1346     		mov	r3, r2
 19613 0230 DB00     		lsls	r3, r3, #3
 19614 0232 9B1A     		subs	r3, r3, r2
 19615 0234 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 436


 19616 0236 0B44     		add	r3, r3, r1
 19617 0238 03F58673 		add	r3, r3, #268
 19618 023c 40F2DC52 		movw	r2, #1500
 19619 0240 1A80     		strh	r2, [r3]	@ movhi
2905:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 19620              		.loc 1 2905 0 discriminator 2
 19621 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19622 0244 2649     		ldr	r1, .L815
 19623 0246 1346     		mov	r3, r2
 19624 0248 DB00     		lsls	r3, r3, #3
 19625 024a 9B1A     		subs	r3, r3, r2
 19626 024c 1B01     		lsls	r3, r3, #4
 19627 024e 0B44     		add	r3, r3, r1
 19628 0250 03F58873 		add	r3, r3, #272
 19629 0254 FA79     		ldrb	r2, [r7, #7]
 19630 0256 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 19631              		.loc 1 2906 0 discriminator 2
 19632 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19633 025a 2149     		ldr	r1, .L815
 19634 025c 1346     		mov	r3, r2
 19635 025e DB00     		lsls	r3, r3, #3
 19636 0260 9B1A     		subs	r3, r3, r2
 19637 0262 1B01     		lsls	r3, r3, #4
 19638 0264 0B44     		add	r3, r3, r1
 19639 0266 E333     		adds	r3, r3, #227
 19640 0268 0122     		movs	r2, #1
 19641 026a 1A70     		strb	r2, [r3]
2907:..\src/command_processing.c ****         
2908:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 19642              		.loc 1 2908 0 discriminator 2
 19643 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19644 026e 1C49     		ldr	r1, .L815
 19645 0270 1346     		mov	r3, r2
 19646 0272 DB00     		lsls	r3, r3, #3
 19647 0274 9B1A     		subs	r3, r3, r2
 19648 0276 1B01     		lsls	r3, r3, #4
 19649 0278 0B44     		add	r3, r3, r1
 19650 027a 03F21113 		addw	r3, r3, #273
 19651 027e 0122     		movs	r2, #1
 19652 0280 1A70     		strb	r2, [r3]
2909:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 19653              		.loc 1 2909 0 discriminator 2
 19654 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19655 0284 1649     		ldr	r1, .L815
 19656 0286 1346     		mov	r3, r2
 19657 0288 DB00     		lsls	r3, r3, #3
 19658 028a 9B1A     		subs	r3, r3, r2
 19659 028c 1B01     		lsls	r3, r3, #4
 19660 028e 0B44     		add	r3, r3, r1
 19661 0290 03F58973 		add	r3, r3, #274
 19662 0294 0022     		movs	r2, #0
 19663 0296 1A70     		strb	r2, [r3]
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19664              		.loc 1 2879 0 discriminator 2
 19665 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19666 029a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 437


 19667 029c FB71     		strb	r3, [r7, #7]
 19668              	.L793:
2879:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19669              		.loc 1 2879 0 is_stmt 0 discriminator 1
 19670 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19671 02a0 012B     		cmp	r3, #1
 19672 02a2 7FF6E6AE 		bls	.L796
2910:..\src/command_processing.c ****     }
2911:..\src/command_processing.c ****     
2912:..\src/command_processing.c ****     // ENC STRUCT
2913:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 19673              		.loc 1 2913 0 is_stmt 1
 19674 02a6 0023     		movs	r3, #0
 19675 02a8 FB71     		strb	r3, [r7, #7]
 19676 02aa 98E0     		b	.L797
 19677              	.L804:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19678              		.loc 1 2914 0
 19679 02ac 0023     		movs	r3, #0
 19680 02ae BB71     		strb	r3, [r7, #6]
 19681 02b0 0FE0     		b	.L798
 19682              	.L799:
2915:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 19683              		.loc 1 2915 0 discriminator 3
 19684 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19685 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19686 02b6 0A48     		ldr	r0, .L815
 19687 02b8 1346     		mov	r3, r2
 19688 02ba 5B00     		lsls	r3, r3, #1
 19689 02bc 1344     		add	r3, r3, r2
 19690 02be 1B01     		lsls	r3, r3, #4
 19691 02c0 0344     		add	r3, r3, r0
 19692 02c2 0B44     		add	r3, r3, r1
 19693 02c4 03F5C873 		add	r3, r3, #400
 19694 02c8 0022     		movs	r2, #0
 19695 02ca 1A70     		strb	r2, [r3]
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19696              		.loc 1 2914 0 discriminator 3
 19697 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19698 02ce 0133     		adds	r3, r3, #1
 19699 02d0 BB71     		strb	r3, [r7, #6]
 19700              	.L798:
2914:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19701              		.loc 1 2914 0 is_stmt 0 discriminator 1
 19702 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19703 02d4 042B     		cmp	r3, #4
 19704 02d6 ECD9     		bls	.L799
2916:..\src/command_processing.c ****         }
2917:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19705              		.loc 1 2917 0 is_stmt 1
 19706 02d8 0023     		movs	r3, #0
 19707 02da BB71     		strb	r3, [r7, #6]
 19708 02dc 2CE0     		b	.L800
 19709              	.L816:
 19710 02de 00BF     		.align	2
 19711              	.L815:
 19712 02e0 00000000 		.word	g_mem
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 438


 19713              	.L801:
2918:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19714              		.loc 1 2918 0 discriminator 3
 19715 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19716 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19717 02e8 BD48     		ldr	r0, .L817
 19718 02ea 1346     		mov	r3, r2
 19719 02ec 5B00     		lsls	r3, r3, #1
 19720 02ee 1344     		add	r3, r3, r2
 19721 02f0 1B01     		lsls	r3, r3, #4
 19722 02f2 0344     		add	r3, r3, r0
 19723 02f4 0B44     		add	r3, r3, r1
 19724 02f6 03F29513 		addw	r3, r3, #405
 19725 02fa 0322     		movs	r2, #3
 19726 02fc 1A70     		strb	r2, [r3]
2919:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 19727              		.loc 1 2919 0 discriminator 3
 19728 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19729 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19730 0302 B748     		ldr	r0, .L817
 19731 0304 1346     		mov	r3, r2
 19732 0306 5B00     		lsls	r3, r3, #1
 19733 0308 1344     		add	r3, r3, r2
 19734 030a 9B00     		lsls	r3, r3, #2
 19735 030c 0B44     		add	r3, r3, r1
 19736 030e 6833     		adds	r3, r3, #104
 19737 0310 9B00     		lsls	r3, r3, #2
 19738 0312 0344     		add	r3, r3, r0
 19739 0314 4FF07E52 		mov	r2, #1065353216
 19740 0318 5A60     		str	r2, [r3, #4]	@ float
2920:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 19741              		.loc 1 2920 0 discriminator 3
 19742 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19743 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19744 031e B048     		ldr	r0, .L817
 19745 0320 1346     		mov	r3, r2
 19746 0322 5B00     		lsls	r3, r3, #1
 19747 0324 1344     		add	r3, r3, r2
 19748 0326 9B00     		lsls	r3, r3, #2
 19749 0328 0B44     		add	r3, r3, r1
 19750 032a 6633     		adds	r3, r3, #102
 19751 032c 0022     		movs	r2, #0
 19752 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19753              		.loc 1 2917 0 discriminator 3
 19754 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19755 0334 0133     		adds	r3, r3, #1
 19756 0336 BB71     		strb	r3, [r7, #6]
 19757              	.L800:
2917:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19758              		.loc 1 2917 0 is_stmt 0 discriminator 1
 19759 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19760 033a 022B     		cmp	r3, #2
 19761 033c D2D9     		bls	.L801
2921:..\src/command_processing.c ****         }
2922:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 19762              		.loc 1 2922 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 439


 19763 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19764 0340 A749     		ldr	r1, .L817
 19765 0342 1346     		mov	r3, r2
 19766 0344 5B00     		lsls	r3, r3, #1
 19767 0346 1344     		add	r3, r3, r2
 19768 0348 1B01     		lsls	r3, r3, #4
 19769 034a 0B44     		add	r3, r3, r1
 19770 034c 03F5D873 		add	r3, r3, #432
 19771 0350 0022     		movs	r2, #0
 19772 0352 1A70     		strb	r2, [r3]
2923:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 19773              		.loc 1 2923 0
 19774 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19775 0356 A249     		ldr	r1, .L817
 19776 0358 1346     		mov	r3, r2
 19777 035a 5B00     		lsls	r3, r3, #1
 19778 035c 1344     		add	r3, r3, r2
 19779 035e 1B01     		lsls	r3, r3, #4
 19780 0360 0B44     		add	r3, r3, r1
 19781 0362 03F5DA73 		add	r3, r3, #436
 19782 0366 1622     		movs	r2, #22
 19783 0368 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19784              		.loc 1 2924 0
 19785 036a 0023     		movs	r3, #0
 19786 036c BB71     		strb	r3, [r7, #6]
 19787 036e 0FE0     		b	.L802
 19788              	.L803:
2925:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 19789              		.loc 1 2925 0 discriminator 3
 19790 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19791 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19792 0374 9A48     		ldr	r0, .L817
 19793 0376 1346     		mov	r3, r2
 19794 0378 5B00     		lsls	r3, r3, #1
 19795 037a 1344     		add	r3, r3, r2
 19796 037c 1B01     		lsls	r3, r3, #4
 19797 037e 0344     		add	r3, r3, r0
 19798 0380 0B44     		add	r3, r3, r1
 19799 0382 03F2B113 		addw	r3, r3, #433
 19800 0386 BA79     		ldrb	r2, [r7, #6]
 19801 0388 1A70     		strb	r2, [r3]
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19802              		.loc 1 2924 0 discriminator 3
 19803 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19804 038c 0133     		adds	r3, r3, #1
 19805 038e BB71     		strb	r3, [r7, #6]
 19806              	.L802:
2924:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19807              		.loc 1 2924 0 is_stmt 0 discriminator 1
 19808 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19809 0392 022B     		cmp	r3, #2
 19810 0394 ECD9     		bls	.L803
2926:..\src/command_processing.c ****         }
2927:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 19811              		.loc 1 2927 0 is_stmt 1 discriminator 2
 19812 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 440


 19813 0398 9149     		ldr	r1, .L817
 19814 039a 1346     		mov	r3, r2
 19815 039c 5B00     		lsls	r3, r3, #1
 19816 039e 1344     		add	r3, r3, r2
 19817 03a0 1B01     		lsls	r3, r3, #4
 19818 03a2 0B44     		add	r3, r3, r1
 19819 03a4 03F2B513 		addw	r3, r3, #437
 19820 03a8 0F22     		movs	r2, #15
 19821 03aa 1A70     		strb	r2, [r3]
2928:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 19822              		.loc 1 2928 0 discriminator 2
 19823 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19824 03ae 8C49     		ldr	r1, .L817
 19825 03b0 1346     		mov	r3, r2
 19826 03b2 5B00     		lsls	r3, r3, #1
 19827 03b4 1344     		add	r3, r3, r2
 19828 03b6 1B01     		lsls	r3, r3, #4
 19829 03b8 0B44     		add	r3, r3, r1
 19830 03ba 03F5DB73 		add	r3, r3, #438
 19831 03be 0E22     		movs	r2, #14
 19832 03c0 1A70     		strb	r2, [r3]
2929:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 19833              		.loc 1 2929 0 discriminator 2
 19834 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19835 03c4 8649     		ldr	r1, .L817
 19836 03c6 1346     		mov	r3, r2
 19837 03c8 5B00     		lsls	r3, r3, #1
 19838 03ca 1344     		add	r3, r3, r2
 19839 03cc 1B01     		lsls	r3, r3, #4
 19840 03ce 0B44     		add	r3, r3, r1
 19841 03d0 03F2B713 		addw	r3, r3, #439
 19842 03d4 0122     		movs	r2, #1
 19843 03d6 1A70     		strb	r2, [r3]
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19844              		.loc 1 2913 0 discriminator 2
 19845 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19846 03da 0133     		adds	r3, r3, #1
 19847 03dc FB71     		strb	r3, [r7, #7]
 19848              	.L797:
2913:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19849              		.loc 1 2913 0 is_stmt 0 discriminator 1
 19850 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19851 03e0 012B     		cmp	r3, #1
 19852 03e2 7FF663AF 		bls	.L804
2930:..\src/command_processing.c ****     }
2931:..\src/command_processing.c ****     
2932:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19853              		.loc 1 2932 0 is_stmt 1
 19854 03e6 0023     		movs	r3, #0
 19855 03e8 FB71     		strb	r3, [r7, #7]
 19856 03ea 2EE0     		b	.L805
 19857              	.L806:
2933:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19858              		.loc 1 2933 0 discriminator 3
 19859 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19860 03ee 7C49     		ldr	r1, .L817
 19861 03f0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 441


 19862 03f2 DB00     		lsls	r3, r3, #3
 19863 03f4 9B1A     		subs	r3, r3, r2
 19864 03f6 1B01     		lsls	r3, r3, #4
 19865 03f8 0B44     		add	r3, r3, r1
 19866 03fa E433     		adds	r3, r3, #228
 19867 03fc 0022     		movs	r2, #0
 19868 03fe 1A60     		str	r2, [r3]
2934:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 19869              		.loc 1 2934 0 discriminator 3
 19870 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19871 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 19872 0404 7648     		ldr	r0, .L817
 19873 0406 0B46     		mov	r3, r1
 19874 0408 DB00     		lsls	r3, r3, #3
 19875 040a 5B1A     		subs	r3, r3, r1
 19876 040c 1B01     		lsls	r3, r3, #4
 19877 040e 0344     		add	r3, r3, r0
 19878 0410 03F58873 		add	r3, r3, #272
 19879 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19880 0416 1846     		mov	r0, r3
 19881 0418 7149     		ldr	r1, .L817
 19882 041a 0346     		mov	r3, r0
 19883 041c 5B00     		lsls	r3, r3, #1
 19884 041e 0344     		add	r3, r3, r0
 19885 0420 1B01     		lsls	r3, r3, #4
 19886 0422 0B44     		add	r3, r3, r1
 19887 0424 03F29513 		addw	r3, r3, #405
 19888 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19889 042a 1946     		mov	r1, r3
 19890 042c 44F63823 		movw	r3, #19000
 19891 0430 03FA01F1 		lsl	r1, r3, r1
 19892 0434 6A48     		ldr	r0, .L817
 19893 0436 1346     		mov	r3, r2
 19894 0438 DB00     		lsls	r3, r3, #3
 19895 043a 9B1A     		subs	r3, r3, r2
 19896 043c 1B01     		lsls	r3, r3, #4
 19897 043e 0344     		add	r3, r3, r0
 19898 0440 E833     		adds	r3, r3, #232
 19899 0442 1960     		str	r1, [r3]
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19900              		.loc 1 2932 0 discriminator 3
 19901 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19902 0446 0133     		adds	r3, r3, #1
 19903 0448 FB71     		strb	r3, [r7, #7]
 19904              	.L805:
2932:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19905              		.loc 1 2932 0 is_stmt 0 discriminator 1
 19906 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19907 044c 012B     		cmp	r3, #1
 19908 044e CDD9     		bls	.L806
2935:..\src/command_processing.c ****     }
2936:..\src/command_processing.c ****     
2937:..\src/command_processing.c ****     // EMG STRUCT     
2938:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 19909              		.loc 1 2938 0 is_stmt 1
 19910 0450 634B     		ldr	r3, .L817
 19911 0452 C822     		movs	r2, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 442


 19912 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2939:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 19913              		.loc 1 2939 0
 19914 0458 614B     		ldr	r3, .L817
 19915 045a C822     		movs	r2, #200
 19916 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2940:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 19917              		.loc 1 2940 0
 19918 0460 5F4B     		ldr	r3, .L817
 19919 0462 4FF48062 		mov	r2, #1024
 19920 0466 C3F8F421 		str	r2, [r3, #500]
2941:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 19921              		.loc 1 2941 0
 19922 046a 5D4B     		ldr	r3, .L817
 19923 046c 4FF48062 		mov	r2, #1024
 19924 0470 C3F8F821 		str	r2, [r3, #504]
2942:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 19925              		.loc 1 2942 0
 19926 0474 5A4B     		ldr	r3, .L817
 19927 0476 6422     		movs	r2, #100
 19928 0478 83F8FC21 		strb	r2, [r3, #508]
2943:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 19929              		.loc 1 2943 0
 19930 047c 584B     		ldr	r3, .L817
 19931 047e 6422     		movs	r2, #100
 19932 0480 83F8FD21 		strb	r2, [r3, #509]
2944:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 19933              		.loc 1 2944 0
 19934 0484 564B     		ldr	r3, .L817
 19935 0486 0022     		movs	r2, #0
 19936 0488 83F8FE21 		strb	r2, [r3, #510]
2945:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 19937              		.loc 1 2945 0
 19938 048c 544B     		ldr	r3, .L817
 19939 048e 0022     		movs	r2, #0
 19940 0490 83F8FF21 		strb	r2, [r3, #511]
2946:..\src/command_processing.c **** 
2947:..\src/command_processing.c ****     // IMU STRUCT
2948:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 19941              		.loc 1 2948 0
 19942 0494 524B     		ldr	r3, .L817
 19943 0496 0022     		movs	r2, #0
 19944 0498 83F80022 		strb	r2, [r3, #512]
2949:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 19945              		.loc 1 2949 0
 19946 049c 504B     		ldr	r3, .L817
 19947 049e 0022     		movs	r2, #0
 19948 04a0 83F80122 		strb	r2, [r3, #513]
2950:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 19949              		.loc 1 2950 0
 19950 04a4 0023     		movs	r3, #0
 19951 04a6 FB71     		strb	r3, [r7, #7]
 19952 04a8 34E0     		b	.L807
 19953              	.L808:
2951:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19954              		.loc 1 2951 0 discriminator 3
 19955 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 443


 19956 04ac 4C49     		ldr	r1, .L817
 19957 04ae 1346     		mov	r3, r2
 19958 04b0 9B00     		lsls	r3, r3, #2
 19959 04b2 1344     		add	r3, r3, r2
 19960 04b4 0B44     		add	r3, r3, r1
 19961 04b6 03F20223 		addw	r3, r3, #514
 19962 04ba 0122     		movs	r2, #1
 19963 04bc 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 19964              		.loc 1 2952 0 discriminator 3
 19965 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19966 04c0 4749     		ldr	r1, .L817
 19967 04c2 1346     		mov	r3, r2
 19968 04c4 9B00     		lsls	r3, r3, #2
 19969 04c6 1344     		add	r3, r3, r2
 19970 04c8 0B44     		add	r3, r3, r1
 19971 04ca 03F20323 		addw	r3, r3, #515
 19972 04ce 0122     		movs	r2, #1
 19973 04d0 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 19974              		.loc 1 2953 0 discriminator 3
 19975 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19976 04d4 4249     		ldr	r1, .L817
 19977 04d6 1346     		mov	r3, r2
 19978 04d8 9B00     		lsls	r3, r3, #2
 19979 04da 1344     		add	r3, r3, r2
 19980 04dc 0B44     		add	r3, r3, r1
 19981 04de 03F50173 		add	r3, r3, #516
 19982 04e2 0022     		movs	r2, #0
 19983 04e4 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 19984              		.loc 1 2954 0 discriminator 3
 19985 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19986 04e8 3D49     		ldr	r1, .L817
 19987 04ea 1346     		mov	r3, r2
 19988 04ec 9B00     		lsls	r3, r3, #2
 19989 04ee 1344     		add	r3, r3, r2
 19990 04f0 0B44     		add	r3, r3, r1
 19991 04f2 03F20523 		addw	r3, r3, #517
 19992 04f6 0022     		movs	r2, #0
 19993 04f8 1A70     		strb	r2, [r3]
2955:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 19994              		.loc 1 2955 0 discriminator 3
 19995 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19996 04fc 3849     		ldr	r1, .L817
 19997 04fe 1346     		mov	r3, r2
 19998 0500 9B00     		lsls	r3, r3, #2
 19999 0502 1344     		add	r3, r3, r2
 20000 0504 0B44     		add	r3, r3, r1
 20001 0506 03F20623 		addw	r3, r3, #518
 20002 050a 0022     		movs	r2, #0
 20003 050c 1A70     		strb	r2, [r3]
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 20004              		.loc 1 2950 0 discriminator 3
 20005 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20006 0510 0133     		adds	r3, r3, #1
 20007 0512 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 444


 20008              	.L807:
2950:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 20009              		.loc 1 2950 0 is_stmt 0 discriminator 1
 20010 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20011 0516 042B     		cmp	r3, #4
 20012 0518 C7D9     		bls	.L808
2956:..\src/command_processing.c ****     }
2957:..\src/command_processing.c ****      
2958:..\src/command_processing.c ****     // EXP STRUCT
2959:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20013              		.loc 1 2959 0 is_stmt 1
 20014 051a 314B     		ldr	r3, .L817
 20015 051c 0022     		movs	r2, #0
 20016 051e 83F82622 		strb	r2, [r3, #550]
2960:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 20017              		.loc 1 2960 0
 20018 0522 2F4B     		ldr	r3, .L817
 20019 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20020 0528 1233     		adds	r3, r3, #18
 20021 052a 5B01     		lsls	r3, r3, #5
 20022 052c 2C4A     		ldr	r2, .L817
 20023 052e 1344     		add	r3, r3, r2
 20024 0530 2C4A     		ldr	r2, .L817+4
 20025 0532 1068     		ldr	r0, [r2]	@ unaligned
 20026 0534 1860     		str	r0, [r3]	@ unaligned
 20027 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20028 0538 9279     		ldrb	r2, [r2, #6]
 20029 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 20030 053c 9A71     		strb	r2, [r3, #6]
2961:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 20031              		.loc 1 2961 0
 20032 053e 284B     		ldr	r3, .L817
 20033 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 20034 0544 012B     		cmp	r3, #1
 20035 0546 13D1     		bne	.L809
2962:..\src/command_processing.c ****         // Set date of maintenance from RTC
2963:..\src/command_processing.c ****         store_RTC_current_time();
 20036              		.loc 1 2963 0
 20037 0548 FFF7FEFF 		bl	store_RTC_current_time
2964:..\src/command_processing.c ****         
2965:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 20038              		.loc 1 2965 0
 20039 054c 244B     		ldr	r3, .L817
 20040 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 20041 0552 234B     		ldr	r3, .L817
 20042 0554 83F8A420 		strb	r2, [r3, #164]
2966:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 20043              		.loc 1 2966 0
 20044 0558 214B     		ldr	r3, .L817
 20045 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 20046 055e 204B     		ldr	r3, .L817
 20047 0560 83F8A520 		strb	r2, [r3, #165]
2967:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 20048              		.loc 1 2967 0
 20049 0564 1E4B     		ldr	r3, .L817
 20050 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 20051 056a 1D4B     		ldr	r3, .L817
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 445


 20052 056c 83F8A620 		strb	r2, [r3, #166]
 20053              	.L809:
2968:..\src/command_processing.c ****     }
2969:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 20054              		.loc 1 2969 0
 20055 0570 1B4B     		ldr	r3, .L817
 20056 0572 0022     		movs	r2, #0
 20057 0574 83F82722 		strb	r2, [r3, #551]
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20058              		.loc 1 2970 0
 20059 0578 0023     		movs	r3, #0
 20060 057a FB71     		strb	r3, [r7, #7]
 20061 057c 08E0     		b	.L810
 20062              	.L811:
2971:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 20063              		.loc 1 2971 0 discriminator 3
 20064 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20065 0580 174A     		ldr	r2, .L817
 20066 0582 1344     		add	r3, r3, r2
 20067 0584 0022     		movs	r2, #0
 20068 0586 83F82822 		strb	r2, [r3, #552]
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20069              		.loc 1 2970 0 discriminator 3
 20070 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20071 058c 0133     		adds	r3, r3, #1
 20072 058e FB71     		strb	r3, [r7, #7]
 20073              	.L810:
2970:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20074              		.loc 1 2970 0 is_stmt 0 discriminator 1
 20075 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20076 0592 0B2B     		cmp	r3, #11
 20077 0594 F3D9     		bls	.L811
2972:..\src/command_processing.c ****     }
2973:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
2974:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 20078              		.loc 1 2974 0 is_stmt 1
 20079 0596 124B     		ldr	r3, .L817
 20080 0598 0122     		movs	r2, #1
 20081 059a 83F82A22 		strb	r2, [r3, #554]
2975:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 20082              		.loc 1 2975 0
 20083 059e 104B     		ldr	r3, .L817
 20084 05a0 0122     		movs	r2, #1
 20085 05a2 83F82B22 		strb	r2, [r3, #555]
2976:..\src/command_processing.c **** 
2977:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2978:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2979:..\src/command_processing.c ****     memInit_SoftHandPro();
 20086              		.loc 1 2979 0
 20087 05a6 FFF7FEFF 		bl	memInit_SoftHandPro
2980:..\src/command_processing.c **** #endif 
2981:..\src/command_processing.c **** 
2982:..\src/command_processing.c **** #ifdef MASTER_FW
2983:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
2984:..\src/command_processing.c ****     memInit_Master();
2985:..\src/command_processing.c **** #endif 
2986:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 446


2987:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
2988:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chmabers device
2989:..\src/command_processing.c ****     memInit_AirChambersFb();
2990:..\src/command_processing.c **** #endif 
2991:..\src/command_processing.c **** 
2992:..\src/command_processing.c ****     // Default generic user_id
2993:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 20088              		.loc 1 2993 0
 20089 05aa 0D4B     		ldr	r3, .L817
 20090 05ac 0022     		movs	r2, #0
 20091 05ae 83F8AB20 		strb	r2, [r3, #171]
2994:..\src/command_processing.c **** 
2995:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2996:..\src/command_processing.c ****     g_mem.flag = TRUE;
 20092              		.loc 1 2996 0
 20093 05b2 0B4B     		ldr	r3, .L817
 20094 05b4 0122     		movs	r2, #1
 20095 05b6 1A70     		strb	r2, [r3]
2997:..\src/command_processing.c ****     
2998:..\src/command_processing.c ****     //write that configuration to EEPROM
2999:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 20096              		.loc 1 2999 0
 20097 05b8 0020     		movs	r0, #0
 20098 05ba FFF7FEFF 		bl	memStore
 20099 05be 0346     		mov	r3, r0
 20100 05c0 002B     		cmp	r3, #0
 20101 05c2 07D0     		beq	.L812
 20102              		.loc 1 2999 0 is_stmt 0 discriminator 1
 20103 05c4 3220     		movs	r0, #50
 20104 05c6 FFF7FEFF 		bl	memStore
 20105 05ca 0346     		mov	r3, r0
 20106 05cc 002B     		cmp	r3, #0
 20107 05ce 01D0     		beq	.L812
 20108              		.loc 1 2999 0 discriminator 3
 20109 05d0 0123     		movs	r3, #1
 20110 05d2 00E0     		b	.L813
 20111              	.L812:
 20112              		.loc 1 2999 0 discriminator 4
 20113 05d4 0023     		movs	r3, #0
 20114              	.L813:
 20115              		.loc 1 2999 0 discriminator 6
 20116 05d6 DBB2     		uxtb	r3, r3
3000:..\src/command_processing.c **** }
 20117              		.loc 1 3000 0 is_stmt 1 discriminator 6
 20118 05d8 1846     		mov	r0, r3
 20119 05da 0837     		adds	r7, r7, #8
 20120              		.cfi_def_cfa_offset 8
 20121 05dc BD46     		mov	sp, r7
 20122              		.cfi_def_cfa_register 13
 20123              		@ sp needed
 20124 05de 80BD     		pop	{r7, pc}
 20125              	.L818:
 20126              		.align	2
 20127              	.L817:
 20128 05e0 00000000 		.word	g_mem
 20129 05e4 881A0000 		.word	.LC260
 20130              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 447


 20131              	.LFE86:
 20132              		.size	memInit, .-memInit
 20133              		.section	.rodata
 20134 1a8f 00       		.align	2
 20135              	.LC261:
 20136 1a90 55535230 		.ascii	"USR001\000"
 20136      303100
 20137              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 20138              		.align	2
 20139              		.global	memInit_SoftHandPro
 20140              		.thumb
 20141              		.thumb_func
 20142              		.type	memInit_SoftHandPro, %function
 20143              	memInit_SoftHandPro:
 20144              	.LFB87:
3001:..\src/command_processing.c **** 
3002:..\src/command_processing.c **** //==============================================================================
3003:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3004:..\src/command_processing.c **** //==============================================================================
3005:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3006:..\src/command_processing.c **** {
 20145              		.loc 1 3006 0
 20146              		.cfi_startproc
 20147              		@ args = 0, pretend = 0, frame = 8
 20148              		@ frame_needed = 1, uses_anonymous_args = 0
 20149              		@ link register save eliminated.
 20150 0000 80B4     		push	{r7}
 20151              		.cfi_def_cfa_offset 4
 20152              		.cfi_offset 7, -4
 20153 0002 83B0     		sub	sp, sp, #12
 20154              		.cfi_def_cfa_offset 16
 20155 0004 00AF     		add	r7, sp, #0
 20156              		.cfi_def_cfa_register 7
3007:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 20157              		.loc 1 3007 0
 20158 0006 0023     		movs	r3, #0
 20159 0008 FB70     		strb	r3, [r7, #3]
3008:..\src/command_processing.c ****     
3009:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3010:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 20160              		.loc 1 3010 0
 20161 000a 894B     		ldr	r3, .L822
 20162 000c 0122     		movs	r2, #1
 20163 000e 83F8A720 		strb	r2, [r3, #167]
3011:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 20164              		.loc 1 3011 0
 20165 0012 874B     		ldr	r3, .L822
 20166 0014 0022     		movs	r2, #0
 20167 0016 83F8AC20 		strb	r2, [r3, #172]
3012:..\src/command_processing.c ****     
3013:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 20168              		.loc 1 3013 0
 20169 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20170 001c 8449     		ldr	r1, .L822
 20171 001e 1346     		mov	r3, r2
 20172 0020 DB00     		lsls	r3, r3, #3
 20173 0022 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 448


 20174 0024 1B01     		lsls	r3, r3, #4
 20175 0026 0B44     		add	r3, r3, r1
 20176 0028 E033     		adds	r3, r3, #224
 20177 002a 0122     		movs	r2, #1
 20178 002c 1A70     		strb	r2, [r3]
3014:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 20179              		.loc 1 3014 0
 20180 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20181 0030 7F49     		ldr	r1, .L822
 20182 0032 1346     		mov	r3, r2
 20183 0034 DB00     		lsls	r3, r3, #3
 20184 0036 9B1A     		subs	r3, r3, r2
 20185 0038 1B01     		lsls	r3, r3, #4
 20186 003a 0B44     		add	r3, r3, r1
 20187 003c 03F58773 		add	r3, r3, #270
 20188 0040 0022     		movs	r2, #0
 20189 0042 1A70     		strb	r2, [r3]
3015:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 20190              		.loc 1 3015 0
 20191 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20192 0046 7A49     		ldr	r1, .L822
 20193 0048 1346     		mov	r3, r2
 20194 004a DB00     		lsls	r3, r3, #3
 20195 004c 9B1A     		subs	r3, r3, r2
 20196 004e 1B01     		lsls	r3, r3, #4
 20197 0050 0B44     		add	r3, r3, r1
 20198 0052 03F20F13 		addw	r3, r3, #271
 20199 0056 0022     		movs	r2, #0
 20200 0058 1A70     		strb	r2, [r3]
3016:..\src/command_processing.c ****     
3017:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3018:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 20201              		.loc 1 3018 0
 20202 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20203 005c 744B     		ldr	r3, .L822
 20204 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 20205 0062 7349     		ldr	r1, .L822
 20206 0064 1346     		mov	r3, r2
 20207 0066 DB00     		lsls	r3, r3, #3
 20208 0068 9B1A     		subs	r3, r3, r2
 20209 006a 1B01     		lsls	r3, r3, #4
 20210 006c 0B44     		add	r3, r3, r1
 20211 006e 03F58873 		add	r3, r3, #272
 20212 0072 0246     		mov	r2, r0
 20213 0074 1A70     		strb	r2, [r3]
3019:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 20214              		.loc 1 3019 0
 20215 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20216 0078 6D49     		ldr	r1, .L822
 20217 007a 1346     		mov	r3, r2
 20218 007c DB00     		lsls	r3, r3, #3
 20219 007e 9B1A     		subs	r3, r3, r2
 20220 0080 1B01     		lsls	r3, r3, #4
 20221 0082 0B44     		add	r3, r3, r1
 20222 0084 03F21113 		addw	r3, r3, #273
 20223 0088 0122     		movs	r2, #1
 20224 008a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 449


3020:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 20225              		.loc 1 3020 0
 20226 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20227 008e 6849     		ldr	r1, .L822
 20228 0090 1346     		mov	r3, r2
 20229 0092 DB00     		lsls	r3, r3, #3
 20230 0094 9B1A     		subs	r3, r3, r2
 20231 0096 1B01     		lsls	r3, r3, #4
 20232 0098 0B44     		add	r3, r3, r1
 20233 009a 03F58973 		add	r3, r3, #274
 20234 009e 0122     		movs	r2, #1
 20235 00a0 1A70     		strb	r2, [r3]
3021:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 20236              		.loc 1 3021 0
 20237 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20238 00a4 6249     		ldr	r1, .L822
 20239 00a6 1346     		mov	r3, r2
 20240 00a8 DB00     		lsls	r3, r3, #3
 20241 00aa 9B1A     		subs	r3, r3, r2
 20242 00ac 1B01     		lsls	r3, r3, #4
 20243 00ae 0B44     		add	r3, r3, r1
 20244 00b0 E433     		adds	r3, r3, #228
 20245 00b2 0022     		movs	r2, #0
 20246 00b4 1A60     		str	r2, [r3]
3022:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 20247              		.loc 1 3022 0
 20248 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20249 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 20250 00ba 5D48     		ldr	r0, .L822
 20251 00bc 0B46     		mov	r3, r1
 20252 00be DB00     		lsls	r3, r3, #3
 20253 00c0 5B1A     		subs	r3, r3, r1
 20254 00c2 1B01     		lsls	r3, r3, #4
 20255 00c4 0344     		add	r3, r3, r0
 20256 00c6 03F58873 		add	r3, r3, #272
 20257 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20258 00cc 1846     		mov	r0, r3
 20259 00ce 5849     		ldr	r1, .L822
 20260 00d0 0346     		mov	r3, r0
 20261 00d2 5B00     		lsls	r3, r3, #1
 20262 00d4 0344     		add	r3, r3, r0
 20263 00d6 1B01     		lsls	r3, r3, #4
 20264 00d8 0B44     		add	r3, r3, r1
 20265 00da 03F29513 		addw	r3, r3, #405
 20266 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20267 00e0 1946     		mov	r1, r3
 20268 00e2 4FF47A53 		mov	r3, #16000
 20269 00e6 03FA01F1 		lsl	r1, r3, r1
 20270 00ea 5148     		ldr	r0, .L822
 20271 00ec 1346     		mov	r3, r2
 20272 00ee DB00     		lsls	r3, r3, #3
 20273 00f0 9B1A     		subs	r3, r3, r2
 20274 00f2 1B01     		lsls	r3, r3, #4
 20275 00f4 0344     		add	r3, r3, r0
 20276 00f6 E833     		adds	r3, r3, #232
 20277 00f8 1960     		str	r1, [r3]
 20278              	.LBB21:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 450


3023:..\src/command_processing.c ****     
3024:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 20279              		.loc 1 3024 0
 20280 00fa 0023     		movs	r3, #0
 20281 00fc 7B60     		str	r3, [r7, #4]
 20282 00fe 2EE0     		b	.L820
 20283              	.L821:
3025:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3026:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 20284              		.loc 1 3026 0 discriminator 3
 20285 0100 4B49     		ldr	r1, .L822
 20286 0102 7A68     		ldr	r2, [r7, #4]
 20287 0104 1346     		mov	r3, r2
 20288 0106 5B00     		lsls	r3, r3, #1
 20289 0108 1344     		add	r3, r3, r2
 20290 010a 1B01     		lsls	r3, r3, #4
 20291 010c 0B44     		add	r3, r3, r1
 20292 010e 03F5D873 		add	r3, r3, #432
 20293 0112 0122     		movs	r2, #1
 20294 0114 1A70     		strb	r2, [r3]
3027:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 20295              		.loc 1 3027 0 discriminator 3
 20296 0116 4649     		ldr	r1, .L822
 20297 0118 7A68     		ldr	r2, [r7, #4]
 20298 011a 1346     		mov	r3, r2
 20299 011c 5B00     		lsls	r3, r3, #1
 20300 011e 1344     		add	r3, r3, r2
 20301 0120 1B01     		lsls	r3, r3, #4
 20302 0122 0B44     		add	r3, r3, r1
 20303 0124 03F2B513 		addw	r3, r3, #437
 20304 0128 2322     		movs	r2, #35
 20305 012a 1A70     		strb	r2, [r3]
3028:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 20306              		.loc 1 3028 0 discriminator 3
 20307 012c 4049     		ldr	r1, .L822
 20308 012e 7A68     		ldr	r2, [r7, #4]
 20309 0130 1346     		mov	r3, r2
 20310 0132 5B00     		lsls	r3, r3, #1
 20311 0134 1344     		add	r3, r3, r2
 20312 0136 1B01     		lsls	r3, r3, #4
 20313 0138 0B44     		add	r3, r3, r1
 20314 013a 03F5DB73 		add	r3, r3, #438
 20315 013e 0322     		movs	r2, #3
 20316 0140 1A70     		strb	r2, [r3]
3029:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 20317              		.loc 1 3029 0 discriminator 3
 20318 0142 3B49     		ldr	r1, .L822
 20319 0144 7A68     		ldr	r2, [r7, #4]
 20320 0146 1346     		mov	r3, r2
 20321 0148 5B00     		lsls	r3, r3, #1
 20322 014a 1344     		add	r3, r3, r2
 20323 014c 1B01     		lsls	r3, r3, #4
 20324 014e 0B44     		add	r3, r3, r1
 20325 0150 03F2B713 		addw	r3, r3, #439
 20326 0154 FF22     		movs	r2, #255
 20327 0156 1A70     		strb	r2, [r3]
3024:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 451


 20328              		.loc 1 3024 0 discriminator 3
 20329 0158 7B68     		ldr	r3, [r7, #4]
 20330 015a 0133     		adds	r3, r3, #1
 20331 015c 7B60     		str	r3, [r7, #4]
 20332              	.L820:
3024:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20333              		.loc 1 3024 0 is_stmt 0 discriminator 1
 20334 015e 7B68     		ldr	r3, [r7, #4]
 20335 0160 012B     		cmp	r3, #1
 20336 0162 CDDD     		ble	.L821
 20337              	.LBE21:
3030:..\src/command_processing.c ****     }
3031:..\src/command_processing.c ****     
3032:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 20338              		.loc 1 3032 0 is_stmt 1
 20339 0164 324B     		ldr	r3, .L822
 20340 0166 4FF48062 		mov	r2, #1024
 20341 016a C3F8F421 		str	r2, [r3, #500]
3033:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 20342              		.loc 1 3033 0
 20343 016e 304B     		ldr	r3, .L822
 20344 0170 4FF48062 		mov	r2, #1024
 20345 0174 C3F8F821 		str	r2, [r3, #504]
3034:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 20346              		.loc 1 3034 0
 20347 0178 2D4B     		ldr	r3, .L822
 20348 017a C822     		movs	r2, #200
 20349 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3035:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 20350              		.loc 1 3035 0
 20351 0180 2B4B     		ldr	r3, .L822
 20352 0182 C822     		movs	r2, #200
 20353 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3036:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 20354              		.loc 1 3036 0
 20355 0188 294B     		ldr	r3, .L822
 20356 018a 6422     		movs	r2, #100
 20357 018c 83F8FC21 		strb	r2, [r3, #508]
3037:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 20358              		.loc 1 3037 0
 20359 0190 274B     		ldr	r3, .L822
 20360 0192 6422     		movs	r2, #100
 20361 0194 83F8FD21 		strb	r2, [r3, #509]
3038:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 20362              		.loc 1 3038 0
 20363 0198 254B     		ldr	r3, .L822
 20364 019a 0022     		movs	r2, #0
 20365 019c 83F8FE21 		strb	r2, [r3, #510]
3039:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 20366              		.loc 1 3039 0
 20367 01a0 234B     		ldr	r3, .L822
 20368 01a2 0022     		movs	r2, #0
 20369 01a4 83F8FF21 		strb	r2, [r3, #511]
3040:..\src/command_processing.c ****     
3041:..\src/command_processing.c ****     //Initialize rest position parameters  
3042:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 20370              		.loc 1 3042 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 452


 20371 01a8 214B     		ldr	r3, .L822
 20372 01aa 0022     		movs	r2, #0
 20373 01ac 83F8AC22 		strb	r2, [r3, #684]
3043:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 20374              		.loc 1 3043 0
 20375 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20376 01b2 1F49     		ldr	r1, .L822
 20377 01b4 1346     		mov	r3, r2
 20378 01b6 DB00     		lsls	r3, r3, #3
 20379 01b8 9B1A     		subs	r3, r3, r2
 20380 01ba 1B01     		lsls	r3, r3, #4
 20381 01bc 0B44     		add	r3, r3, r1
 20382 01be 03F58873 		add	r3, r3, #272
 20383 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20384 01c4 1946     		mov	r1, r3
 20385 01c6 1A4A     		ldr	r2, .L822
 20386 01c8 0B46     		mov	r3, r1
 20387 01ca 5B00     		lsls	r3, r3, #1
 20388 01cc 0B44     		add	r3, r3, r1
 20389 01ce 1B01     		lsls	r3, r3, #4
 20390 01d0 1344     		add	r3, r3, r2
 20391 01d2 03F29513 		addw	r3, r3, #405
 20392 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20393 01d8 1A46     		mov	r2, r3
 20394 01da 41F65833 		movw	r3, #7000
 20395 01de 9340     		lsls	r3, r3, r2
 20396 01e0 134A     		ldr	r2, .L822
 20397 01e2 C2F8A032 		str	r3, [r2, #672]
3044:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 20398              		.loc 1 3044 0
 20399 01e6 124B     		ldr	r3, .L822
 20400 01e8 0A22     		movs	r2, #10
 20401 01ea C3F8A422 		str	r2, [r3, #676]
3045:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 20402              		.loc 1 3045 0
 20403 01ee 104B     		ldr	r3, .L822
 20404 01f0 42F21072 		movw	r2, #10000
 20405 01f4 C3F8A822 		str	r2, [r3, #680]
3046:..\src/command_processing.c **** 	
3047:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 20406              		.loc 1 3047 0
 20407 01f8 0D4B     		ldr	r3, .L822
 20408 01fa 0022     		movs	r2, #0
 20409 01fc 83F80022 		strb	r2, [r3, #512]
3048:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20410              		.loc 1 3048 0
 20411 0200 0B4B     		ldr	r3, .L822
 20412 0202 0022     		movs	r2, #0
 20413 0204 83F82622 		strb	r2, [r3, #550]
3049:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 20414              		.loc 1 3049 0
 20415 0208 094B     		ldr	r3, .L822
 20416 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20417 020e 1233     		adds	r3, r3, #18
 20418 0210 5B01     		lsls	r3, r3, #5
 20419 0212 074A     		ldr	r2, .L822
 20420 0214 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 453


 20421 0216 074A     		ldr	r2, .L822+4
 20422 0218 1068     		ldr	r0, [r2]	@ unaligned
 20423 021a 1860     		str	r0, [r3]	@ unaligned
 20424 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20425 021e 9279     		ldrb	r2, [r2, #6]
 20426 0220 9980     		strh	r1, [r3, #4]	@ unaligned
 20427 0222 9A71     		strb	r2, [r3, #6]
3050:..\src/command_processing.c **** }
 20428              		.loc 1 3050 0
 20429 0224 00BF     		nop
 20430 0226 0C37     		adds	r7, r7, #12
 20431              		.cfi_def_cfa_offset 4
 20432 0228 BD46     		mov	sp, r7
 20433              		.cfi_def_cfa_register 13
 20434              		@ sp needed
 20435 022a 80BC     		pop	{r7}
 20436              		.cfi_restore 7
 20437              		.cfi_def_cfa_offset 0
 20438 022c 7047     		bx	lr
 20439              	.L823:
 20440 022e 00BF     		.align	2
 20441              	.L822:
 20442 0230 00000000 		.word	g_mem
 20443 0234 901A0000 		.word	.LC261
 20444              		.cfi_endproc
 20445              	.LFE87:
 20446              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 20447              		.section	.text.memInit_Master,"ax",%progbits
 20448              		.align	2
 20449              		.global	memInit_Master
 20450              		.thumb
 20451              		.thumb_func
 20452              		.type	memInit_Master, %function
 20453              	memInit_Master:
 20454              	.LFB88:
3051:..\src/command_processing.c **** 
3052:..\src/command_processing.c **** //==============================================================================
3053:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3054:..\src/command_processing.c **** //==============================================================================
3055:..\src/command_processing.c **** void memInit_Master(void)
3056:..\src/command_processing.c **** {
 20455              		.loc 1 3056 0
 20456              		.cfi_startproc
 20457              		@ args = 0, pretend = 0, frame = 0
 20458              		@ frame_needed = 1, uses_anonymous_args = 0
 20459              		@ link register save eliminated.
 20460 0000 80B4     		push	{r7}
 20461              		.cfi_def_cfa_offset 4
 20462              		.cfi_offset 7, -4
 20463 0002 00AF     		add	r7, sp, #0
 20464              		.cfi_def_cfa_register 7
3057:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 20465              		.loc 1 3057 0
 20466 0004 074B     		ldr	r3, .L825
 20467 0006 0222     		movs	r2, #2
 20468 0008 83F8A020 		strb	r2, [r3, #160]
3058:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 454


3059:..\src/command_processing.c ****     // MS STRUCT
3060:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 20469              		.loc 1 3060 0
 20470 000c 054B     		ldr	r3, .L825
 20471 000e 0122     		movs	r2, #1
 20472 0010 83F8B122 		strb	r2, [r3, #689]
3061:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 20473              		.loc 1 3061 0
 20474 0014 034B     		ldr	r3, .L825
 20475 0016 0022     		movs	r2, #0
 20476 0018 83F8B022 		strb	r2, [r3, #688]
3062:..\src/command_processing.c **** }
 20477              		.loc 1 3062 0
 20478 001c 00BF     		nop
 20479 001e BD46     		mov	sp, r7
 20480              		.cfi_def_cfa_register 13
 20481              		@ sp needed
 20482 0020 80BC     		pop	{r7}
 20483              		.cfi_restore 7
 20484              		.cfi_def_cfa_offset 0
 20485 0022 7047     		bx	lr
 20486              	.L826:
 20487              		.align	2
 20488              	.L825:
 20489 0024 00000000 		.word	g_mem
 20490              		.cfi_endproc
 20491              	.LFE88:
 20492              		.size	memInit_Master, .-memInit_Master
 20493              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 20494              		.align	2
 20495              		.global	memInit_AirChambersFb
 20496              		.thumb
 20497              		.thumb_func
 20498              		.type	memInit_AirChambersFb, %function
 20499              	memInit_AirChambersFb:
 20500              	.LFB89:
3063:..\src/command_processing.c **** 
3064:..\src/command_processing.c **** //==============================================================================
3065:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3066:..\src/command_processing.c **** //==============================================================================
3067:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3068:..\src/command_processing.c **** {
 20501              		.loc 1 3068 0
 20502              		.cfi_startproc
 20503              		@ args = 0, pretend = 0, frame = 0
 20504              		@ frame_needed = 1, uses_anonymous_args = 0
 20505              		@ link register save eliminated.
 20506 0000 80B4     		push	{r7}
 20507              		.cfi_def_cfa_offset 4
 20508              		.cfi_offset 7, -4
 20509 0002 00AF     		add	r7, sp, #0
 20510              		.cfi_def_cfa_register 7
3069:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3070:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 20511              		.loc 1 3070 0
 20512 0004 1A4B     		ldr	r3, .L828
 20513 0006 0222     		movs	r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 455


 20514 0008 83F8AC20 		strb	r2, [r3, #172]
3071:..\src/command_processing.c ****     
3072:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 20515              		.loc 1 3072 0
 20516 000c 184B     		ldr	r3, .L828
 20517 000e 0122     		movs	r2, #1
 20518 0010 83F80F21 		strb	r2, [r3, #271]
3073:..\src/command_processing.c ****     
3074:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3075:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3076:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 20519              		.loc 1 3076 0
 20520 0014 164B     		ldr	r3, .L828
 20521 0016 0422     		movs	r2, #4
 20522 0018 83F87E21 		strb	r2, [r3, #382]
3077:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 20523              		.loc 1 3077 0
 20524 001c 144B     		ldr	r3, .L828
 20525 001e 0022     		movs	r2, #0
 20526 0020 C3F85421 		str	r2, [r3, #340]
3078:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 20527              		.loc 1 3078 0
 20528 0024 124B     		ldr	r3, .L828
 20529 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 20530 002a 1946     		mov	r1, r3
 20531 002c 104A     		ldr	r2, .L828
 20532 002e 0B46     		mov	r3, r1
 20533 0030 5B00     		lsls	r3, r3, #1
 20534 0032 0B44     		add	r3, r3, r1
 20535 0034 1B01     		lsls	r3, r3, #4
 20536 0036 1344     		add	r3, r3, r2
 20537 0038 03F29513 		addw	r3, r3, #405
 20538 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20539 003e 1A46     		mov	r2, r3
 20540 0040 45F2F053 		movw	r3, #22000
 20541 0044 9340     		lsls	r3, r3, r2
 20542 0046 0A4A     		ldr	r2, .L828
 20543 0048 C2F85831 		str	r3, [r2, #344]
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     // FB STRUCT
3081:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 20544              		.loc 1 3081 0
 20545 004c 084B     		ldr	r3, .L828
 20546 004e 4FF4E172 		mov	r2, #450
 20547 0052 C3F8C022 		str	r2, [r3, #704]
3082:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 20548              		.loc 1 3082 0
 20549 0056 064B     		ldr	r3, .L828
 20550 0058 064A     		ldr	r2, .L828+4
 20551 005a C3F8C422 		str	r2, [r3, #708]	@ float
3083:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 20552              		.loc 1 3083 0
 20553 005e 044B     		ldr	r3, .L828
 20554 0060 4FF07E52 		mov	r2, #1065353216
 20555 0064 C3F8C822 		str	r2, [r3, #712]	@ float
3084:..\src/command_processing.c **** }
 20556              		.loc 1 3084 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 456


 20557 0068 00BF     		nop
 20558 006a BD46     		mov	sp, r7
 20559              		.cfi_def_cfa_register 13
 20560              		@ sp needed
 20561 006c 80BC     		pop	{r7}
 20562              		.cfi_restore 7
 20563              		.cfi_def_cfa_offset 0
 20564 006e 7047     		bx	lr
 20565              	.L829:
 20566              		.align	2
 20567              	.L828:
 20568 0070 00000000 		.word	g_mem
 20569 0074 0000C841 		.word	1103626240
 20570              		.cfi_endproc
 20571              	.LFE89:
 20572              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 20573              		.section	.text.cmd_get_measurements,"ax",%progbits
 20574              		.align	2
 20575              		.global	cmd_get_measurements
 20576              		.thumb
 20577              		.thumb_func
 20578              		.type	cmd_get_measurements, %function
 20579              	cmd_get_measurements:
 20580              	.LFB90:
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c **** //==============================================================================
3087:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3088:..\src/command_processing.c **** //==============================================================================
3089:..\src/command_processing.c **** /**
3090:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3091:..\src/command_processing.c **** **/
3092:..\src/command_processing.c **** 
3093:..\src/command_processing.c **** void cmd_get_measurements(){
 20581              		.loc 1 3093 0
 20582              		.cfi_startproc
 20583              		@ args = 0, pretend = 0, frame = 16
 20584              		@ frame_needed = 1, uses_anonymous_args = 0
 20585 0000 90B5     		push	{r4, r7, lr}
 20586              		.cfi_def_cfa_offset 12
 20587              		.cfi_offset 4, -12
 20588              		.cfi_offset 7, -8
 20589              		.cfi_offset 14, -4
 20590 0002 85B0     		sub	sp, sp, #20
 20591              		.cfi_def_cfa_offset 32
 20592 0004 00AF     		add	r7, sp, #0
 20593              		.cfi_def_cfa_register 7
3094:..\src/command_processing.c ****  
3095:..\src/command_processing.c ****     uint8 CYDATA index;
3096:..\src/command_processing.c ****     int16 aux_int16;
3097:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3098:..\src/command_processing.c ****     
3099:..\src/command_processing.c ****     uint8 packet_data[8]; 
3100:..\src/command_processing.c ****     
3101:..\src/command_processing.c ****     //Header package
3102:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 20594              		.loc 1 3102 0
 20595 0006 8423     		movs	r3, #132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 457


 20596 0008 3B71     		strb	r3, [r7, #4]
3103:..\src/command_processing.c ****     
3104:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20597              		.loc 1 3104 0
 20598 000a 0323     		movs	r3, #3
 20599 000c FB73     		strb	r3, [r7, #15]
 20600 000e 38E0     		b	.L831
 20601              	.L832:
3105:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20602              		.loc 1 3105 0
 20603 0010 264B     		ldr	r3, .L833
 20604 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20605 0016 1A46     		mov	r2, r3
 20606 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20607 001a 2548     		ldr	r0, .L833+4
 20608 001c 1346     		mov	r3, r2
 20609 001e 5B00     		lsls	r3, r3, #1
 20610 0020 1344     		add	r3, r3, r2
 20611 0022 9B00     		lsls	r3, r3, #2
 20612 0024 1344     		add	r3, r3, r2
 20613 0026 0B44     		add	r3, r3, r1
 20614 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 20615 002c 1F4B     		ldr	r3, .L833
 20616 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20617 0032 1C46     		mov	r4, r3
 20618 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20619 0036 1D48     		ldr	r0, .L833
 20620 0038 2346     		mov	r3, r4
 20621 003a 5B00     		lsls	r3, r3, #1
 20622 003c 2344     		add	r3, r3, r4
 20623 003e 1B01     		lsls	r3, r3, #4
 20624 0040 0344     		add	r3, r3, r0
 20625 0042 0B44     		add	r3, r3, r1
 20626 0044 03F29513 		addw	r3, r3, #405
 20627 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20628 004a 42FA03F3 		asr	r3, r2, r3
 20629 004e 1BB2     		sxth	r3, r3
 20630 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3106:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20631              		.loc 1 3106 0
 20632 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20633 0054 5B00     		lsls	r3, r3, #1
 20634 0056 0233     		adds	r3, r3, #2
 20635 0058 07F10C02 		add	r2, r7, #12
 20636 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20637 005e 07F11001 		add	r1, r7, #16
 20638 0062 0B44     		add	r3, r3, r1
 20639 0064 03F80C2C 		strb	r2, [r3, #-12]
3107:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20640              		.loc 1 3107 0
 20641 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20642 006a 5B00     		lsls	r3, r3, #1
 20643 006c 5A1C     		adds	r2, r3, #1
 20644 006e 07F10C03 		add	r3, r7, #12
 20645 0072 0133     		adds	r3, r3, #1
 20646 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20647 0076 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 458


 20648 007a 1344     		add	r3, r3, r2
 20649 007c 0A46     		mov	r2, r1
 20650 007e 03F80C2C 		strb	r2, [r3, #-12]
 20651              	.L831:
3104:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20652              		.loc 1 3104 0 discriminator 1
 20653 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20654 0084 5A1E     		subs	r2, r3, #1
 20655 0086 FA73     		strb	r2, [r7, #15]
 20656 0088 002B     		cmp	r3, #0
 20657 008a C1D1     		bne	.L832
3108:..\src/command_processing.c ****     }
3109:..\src/command_processing.c **** 
3110:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20658              		.loc 1 3112 0
 20659 008c 3B1D     		adds	r3, r7, #4
 20660 008e 0721     		movs	r1, #7
 20661 0090 1846     		mov	r0, r3
 20662 0092 FFF7FEFF 		bl	LCRChecksum
 20663 0096 0346     		mov	r3, r0
 20664 0098 FB72     		strb	r3, [r7, #11]
3113:..\src/command_processing.c **** 
3114:..\src/command_processing.c ****     commWrite(packet_data, 8);
 20665              		.loc 1 3114 0
 20666 009a 3B1D     		adds	r3, r7, #4
 20667 009c 0821     		movs	r1, #8
 20668 009e 1846     		mov	r0, r3
 20669 00a0 FFF7FEFF 		bl	commWrite
3115:..\src/command_processing.c ****    
3116:..\src/command_processing.c **** }
 20670              		.loc 1 3116 0
 20671 00a4 00BF     		nop
 20672 00a6 1437     		adds	r7, r7, #20
 20673              		.cfi_def_cfa_offset 12
 20674 00a8 BD46     		mov	sp, r7
 20675              		.cfi_def_cfa_register 13
 20676              		@ sp needed
 20677 00aa 90BD     		pop	{r4, r7, pc}
 20678              	.L834:
 20679              		.align	2
 20680              	.L833:
 20681 00ac 00000000 		.word	g_mem
 20682 00b0 00000000 		.word	g_measOld
 20683              		.cfi_endproc
 20684              	.LFE90:
 20685              		.size	cmd_get_measurements, .-cmd_get_measurements
 20686              		.section	.text.cmd_get_velocities,"ax",%progbits
 20687              		.align	2
 20688              		.global	cmd_get_velocities
 20689              		.thumb
 20690              		.thumb_func
 20691              		.type	cmd_get_velocities, %function
 20692              	cmd_get_velocities:
 20693              	.LFB91:
3117:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 459


3118:..\src/command_processing.c **** void cmd_get_velocities(){
 20694              		.loc 1 3118 0
 20695              		.cfi_startproc
 20696              		@ args = 0, pretend = 0, frame = 16
 20697              		@ frame_needed = 1, uses_anonymous_args = 0
 20698 0000 90B5     		push	{r4, r7, lr}
 20699              		.cfi_def_cfa_offset 12
 20700              		.cfi_offset 4, -12
 20701              		.cfi_offset 7, -8
 20702              		.cfi_offset 14, -4
 20703 0002 85B0     		sub	sp, sp, #20
 20704              		.cfi_def_cfa_offset 32
 20705 0004 00AF     		add	r7, sp, #0
 20706              		.cfi_def_cfa_register 7
3119:..\src/command_processing.c ****  
3120:..\src/command_processing.c ****     uint8 CYDATA index;
3121:..\src/command_processing.c ****     int16 aux_int16;
3122:..\src/command_processing.c ****    
3123:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3124:..\src/command_processing.c ****     
3125:..\src/command_processing.c ****     uint8 packet_data[8]; 
3126:..\src/command_processing.c ****     
3127:..\src/command_processing.c ****     //Header package
3128:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 20707              		.loc 1 3128 0
 20708 0006 8923     		movs	r3, #137
 20709 0008 3B71     		strb	r3, [r7, #4]
3129:..\src/command_processing.c ****     
3130:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20710              		.loc 1 3130 0
 20711 000a 0323     		movs	r3, #3
 20712 000c FB73     		strb	r3, [r7, #15]
 20713 000e 3AE0     		b	.L836
 20714              	.L837:
3131:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20715              		.loc 1 3131 0
 20716 0010 274B     		ldr	r3, .L838
 20717 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20718 0016 1A46     		mov	r2, r3
 20719 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20720 001a 2648     		ldr	r0, .L838+4
 20721 001c 1346     		mov	r3, r2
 20722 001e 5B00     		lsls	r3, r3, #1
 20723 0020 1344     		add	r3, r3, r2
 20724 0022 9B00     		lsls	r3, r3, #2
 20725 0024 1344     		add	r3, r3, r2
 20726 0026 0B44     		add	r3, r3, r1
 20727 0028 0633     		adds	r3, r3, #6
 20728 002a 9B00     		lsls	r3, r3, #2
 20729 002c 0344     		add	r3, r3, r0
 20730 002e 5A68     		ldr	r2, [r3, #4]
 20731 0030 1F4B     		ldr	r3, .L838
 20732 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20733 0036 1C46     		mov	r4, r3
 20734 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20735 003a 1D48     		ldr	r0, .L838
 20736 003c 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 460


 20737 003e 5B00     		lsls	r3, r3, #1
 20738 0040 2344     		add	r3, r3, r4
 20739 0042 1B01     		lsls	r3, r3, #4
 20740 0044 0344     		add	r3, r3, r0
 20741 0046 0B44     		add	r3, r3, r1
 20742 0048 03F29513 		addw	r3, r3, #405
 20743 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20744 004e 42FA03F3 		asr	r3, r2, r3
 20745 0052 1BB2     		sxth	r3, r3
 20746 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3132:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20747              		.loc 1 3132 0
 20748 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20749 0058 5B00     		lsls	r3, r3, #1
 20750 005a 0233     		adds	r3, r3, #2
 20751 005c 07F10C02 		add	r2, r7, #12
 20752 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20753 0062 07F11001 		add	r1, r7, #16
 20754 0066 0B44     		add	r3, r3, r1
 20755 0068 03F80C2C 		strb	r2, [r3, #-12]
3133:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20756              		.loc 1 3133 0
 20757 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20758 006e 5B00     		lsls	r3, r3, #1
 20759 0070 5A1C     		adds	r2, r3, #1
 20760 0072 07F10C03 		add	r3, r7, #12
 20761 0076 0133     		adds	r3, r3, #1
 20762 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20763 007a 07F11003 		add	r3, r7, #16
 20764 007e 1344     		add	r3, r3, r2
 20765 0080 0A46     		mov	r2, r1
 20766 0082 03F80C2C 		strb	r2, [r3, #-12]
 20767              	.L836:
3130:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20768              		.loc 1 3130 0 discriminator 1
 20769 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20770 0088 5A1E     		subs	r2, r3, #1
 20771 008a FA73     		strb	r2, [r7, #15]
 20772 008c 002B     		cmp	r3, #0
 20773 008e BFD1     		bne	.L837
3134:..\src/command_processing.c ****     }
3135:..\src/command_processing.c ****             
3136:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3137:..\src/command_processing.c **** 
3138:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20774              		.loc 1 3138 0
 20775 0090 3B1D     		adds	r3, r7, #4
 20776 0092 0721     		movs	r1, #7
 20777 0094 1846     		mov	r0, r3
 20778 0096 FFF7FEFF 		bl	LCRChecksum
 20779 009a 0346     		mov	r3, r0
 20780 009c FB72     		strb	r3, [r7, #11]
3139:..\src/command_processing.c **** 
3140:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20781              		.loc 1 3140 0
 20782 009e 3B1D     		adds	r3, r7, #4
 20783 00a0 0821     		movs	r1, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 461


 20784 00a2 1846     		mov	r0, r3
 20785 00a4 FFF7FEFF 		bl	commWrite
3141:..\src/command_processing.c **** }
 20786              		.loc 1 3141 0
 20787 00a8 00BF     		nop
 20788 00aa 1437     		adds	r7, r7, #20
 20789              		.cfi_def_cfa_offset 12
 20790 00ac BD46     		mov	sp, r7
 20791              		.cfi_def_cfa_register 13
 20792              		@ sp needed
 20793 00ae 90BD     		pop	{r4, r7, pc}
 20794              	.L839:
 20795              		.align	2
 20796              	.L838:
 20797 00b0 00000000 		.word	g_mem
 20798 00b4 00000000 		.word	g_measOld
 20799              		.cfi_endproc
 20800              	.LFE91:
 20801              		.size	cmd_get_velocities, .-cmd_get_velocities
 20802              		.section	.text.cmd_get_accelerations,"ax",%progbits
 20803              		.align	2
 20804              		.global	cmd_get_accelerations
 20805              		.thumb
 20806              		.thumb_func
 20807              		.type	cmd_get_accelerations, %function
 20808              	cmd_get_accelerations:
 20809              	.LFB92:
3142:..\src/command_processing.c **** 
3143:..\src/command_processing.c **** void cmd_get_accelerations(){
 20810              		.loc 1 3143 0
 20811              		.cfi_startproc
 20812              		@ args = 0, pretend = 0, frame = 16
 20813              		@ frame_needed = 1, uses_anonymous_args = 0
 20814 0000 90B5     		push	{r4, r7, lr}
 20815              		.cfi_def_cfa_offset 12
 20816              		.cfi_offset 4, -12
 20817              		.cfi_offset 7, -8
 20818              		.cfi_offset 14, -4
 20819 0002 85B0     		sub	sp, sp, #20
 20820              		.cfi_def_cfa_offset 32
 20821 0004 00AF     		add	r7, sp, #0
 20822              		.cfi_def_cfa_register 7
3144:..\src/command_processing.c ****  
3145:..\src/command_processing.c ****     uint8 CYDATA index;
3146:..\src/command_processing.c ****     int16 aux_int16;
3147:..\src/command_processing.c ****     
3148:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     uint8 packet_data[8]; 
3151:..\src/command_processing.c ****     
3152:..\src/command_processing.c ****     //Header package
3153:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 20823              		.loc 1 3153 0
 20824 0006 8B23     		movs	r3, #139
 20825 0008 3B71     		strb	r3, [r7, #4]
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 462


 20826              		.loc 1 3155 0
 20827 000a 0323     		movs	r3, #3
 20828 000c FB73     		strb	r3, [r7, #15]
 20829 000e 39E0     		b	.L841
 20830              	.L842:
3156:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20831              		.loc 1 3156 0
 20832 0010 274B     		ldr	r3, .L843
 20833 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20834 0016 1A46     		mov	r2, r3
 20835 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20836 001a 2648     		ldr	r0, .L843+4
 20837 001c 1346     		mov	r3, r2
 20838 001e 5B00     		lsls	r3, r3, #1
 20839 0020 1344     		add	r3, r3, r2
 20840 0022 9B00     		lsls	r3, r3, #2
 20841 0024 1344     		add	r3, r3, r2
 20842 0026 0B44     		add	r3, r3, r1
 20843 0028 0A33     		adds	r3, r3, #10
 20844 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 20845 002e 204B     		ldr	r3, .L843
 20846 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20847 0034 1C46     		mov	r4, r3
 20848 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20849 0038 1D48     		ldr	r0, .L843
 20850 003a 2346     		mov	r3, r4
 20851 003c 5B00     		lsls	r3, r3, #1
 20852 003e 2344     		add	r3, r3, r4
 20853 0040 1B01     		lsls	r3, r3, #4
 20854 0042 0344     		add	r3, r3, r0
 20855 0044 0B44     		add	r3, r3, r1
 20856 0046 03F29513 		addw	r3, r3, #405
 20857 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20858 004c 42FA03F3 		asr	r3, r2, r3
 20859 0050 1BB2     		sxth	r3, r3
 20860 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3157:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20861              		.loc 1 3157 0
 20862 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20863 0056 5B00     		lsls	r3, r3, #1
 20864 0058 0233     		adds	r3, r3, #2
 20865 005a 07F10C02 		add	r2, r7, #12
 20866 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20867 0060 07F11001 		add	r1, r7, #16
 20868 0064 0B44     		add	r3, r3, r1
 20869 0066 03F80C2C 		strb	r2, [r3, #-12]
3158:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20870              		.loc 1 3158 0
 20871 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20872 006c 5B00     		lsls	r3, r3, #1
 20873 006e 5A1C     		adds	r2, r3, #1
 20874 0070 07F10C03 		add	r3, r7, #12
 20875 0074 0133     		adds	r3, r3, #1
 20876 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20877 0078 07F11003 		add	r3, r7, #16
 20878 007c 1344     		add	r3, r3, r2
 20879 007e 0A46     		mov	r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 463


 20880 0080 03F80C2C 		strb	r2, [r3, #-12]
 20881              	.L841:
3155:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20882              		.loc 1 3155 0 discriminator 1
 20883 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20884 0086 5A1E     		subs	r2, r3, #1
 20885 0088 FA73     		strb	r2, [r7, #15]
 20886 008a 002B     		cmp	r3, #0
 20887 008c C0D1     		bne	.L842
3159:..\src/command_processing.c ****     }
3160:..\src/command_processing.c ****     
3161:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20888              		.loc 1 3163 0
 20889 008e 3B1D     		adds	r3, r7, #4
 20890 0090 0721     		movs	r1, #7
 20891 0092 1846     		mov	r0, r3
 20892 0094 FFF7FEFF 		bl	LCRChecksum
 20893 0098 0346     		mov	r3, r0
 20894 009a FB72     		strb	r3, [r7, #11]
3164:..\src/command_processing.c **** 
3165:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20895              		.loc 1 3165 0
 20896 009c 3B1D     		adds	r3, r7, #4
 20897 009e 0821     		movs	r1, #8
 20898 00a0 1846     		mov	r0, r3
 20899 00a2 FFF7FEFF 		bl	commWrite
3166:..\src/command_processing.c **** }
 20900              		.loc 1 3166 0
 20901 00a6 00BF     		nop
 20902 00a8 1437     		adds	r7, r7, #20
 20903              		.cfi_def_cfa_offset 12
 20904 00aa BD46     		mov	sp, r7
 20905              		.cfi_def_cfa_register 13
 20906              		@ sp needed
 20907 00ac 90BD     		pop	{r4, r7, pc}
 20908              	.L844:
 20909 00ae 00BF     		.align	2
 20910              	.L843:
 20911 00b0 00000000 		.word	g_mem
 20912 00b4 00000000 		.word	g_measOld
 20913              		.cfi_endproc
 20914              	.LFE92:
 20915              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 20916              		.section	.text.cmd_set_inputs,"ax",%progbits
 20917              		.align	2
 20918              		.global	cmd_set_inputs
 20919              		.thumb
 20920              		.thumb_func
 20921              		.type	cmd_set_inputs, %function
 20922              	cmd_set_inputs:
 20923              	.LFB93:
3167:..\src/command_processing.c **** 
3168:..\src/command_processing.c **** void cmd_set_inputs(){
 20924              		.loc 1 3168 0
 20925              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 464


 20926              		@ args = 0, pretend = 0, frame = 8
 20927              		@ frame_needed = 1, uses_anonymous_args = 0
 20928              		@ link register save eliminated.
 20929 0000 90B4     		push	{r4, r7}
 20930              		.cfi_def_cfa_offset 8
 20931              		.cfi_offset 4, -8
 20932              		.cfi_offset 7, -4
 20933 0002 82B0     		sub	sp, sp, #8
 20934              		.cfi_def_cfa_offset 16
 20935 0004 00AF     		add	r7, sp, #0
 20936              		.cfi_def_cfa_register 7
3169:..\src/command_processing.c ****     
3170:..\src/command_processing.c ****     // Store position setted in right variables
3171:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3172:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3173:..\src/command_processing.c ****     
3174:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 20937              		.loc 1 3174 0
 20938 0006 894B     		ldr	r3, .L859
 20939 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20940 000a 1B02     		lsls	r3, r3, #8
 20941 000c 1AB2     		sxth	r2, r3
 20942 000e 874B     		ldr	r3, .L859
 20943 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 20944 0012 1BB2     		sxth	r3, r3
 20945 0014 1343     		orrs	r3, r3, r2
 20946 0016 1BB2     		sxth	r3, r3
 20947 0018 3B80     		strh	r3, [r7]	@ movhi
3175:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 20948              		.loc 1 3175 0
 20949 001a 844B     		ldr	r3, .L859
 20950 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 20951 001e 1B02     		lsls	r3, r3, #8
 20952 0020 1AB2     		sxth	r2, r3
 20953 0022 824B     		ldr	r3, .L859
 20954 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20955 0026 1BB2     		sxth	r3, r3
 20956 0028 1343     		orrs	r3, r3, r2
 20957 002a 1BB2     		sxth	r3, r3
 20958 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 20959              	.LBB22:
3176:..\src/command_processing.c ****     
3177:..\src/command_processing.c ****     // Check if last command received was the same as this 
3178:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3179:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 20960              		.loc 1 3179 0
 20961 002e 0023     		movs	r3, #0
 20962 0030 FB71     		strb	r3, [r7, #7]
 20963 0032 1DE0     		b	.L846
 20964              	.L848:
3180:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20965              		.loc 1 3180 0
 20966 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20967 0036 7E4A     		ldr	r2, .L859+4
 20968 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 20969 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20970 003e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 465


 20971 0040 07F10801 		add	r1, r7, #8
 20972 0044 0B44     		add	r3, r3, r1
 20973 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 20974 004a 9A42     		cmp	r2, r3
 20975 004c 02D0     		beq	.L847
3181:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 20976              		.loc 1 3181 0
 20977 004e 794B     		ldr	r3, .L859+8
 20978 0050 0122     		movs	r2, #1
 20979 0052 1A70     		strb	r2, [r3]
 20980              	.L847:
3182:..\src/command_processing.c ****        }
3183:..\src/command_processing.c ****         // Update last command
3184:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 20981              		.loc 1 3184 0 discriminator 2
 20982 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20983 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20984 0058 5B00     		lsls	r3, r3, #1
 20985 005a 07F10801 		add	r1, r7, #8
 20986 005e 0B44     		add	r3, r3, r1
 20987 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 20988 0064 724B     		ldr	r3, .L859+4
 20989 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3179:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20990              		.loc 1 3179 0 discriminator 2
 20991 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20992 006c 0133     		adds	r3, r3, #1
 20993 006e FB71     		strb	r3, [r7, #7]
 20994              	.L846:
3179:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20995              		.loc 1 3179 0 is_stmt 0 discriminator 1
 20996 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20997 0072 714B     		ldr	r3, .L859+12
 20998 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20999 0078 0133     		adds	r3, r3, #1
 21000 007a 9A42     		cmp	r2, r3
 21001 007c DADB     		blt	.L848
 21002              	.LBE22:
3185:..\src/command_processing.c ****     }
3186:..\src/command_processing.c ****     
3187:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3188:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 21003              		.loc 1 3188 0 is_stmt 1
 21004 007e 6D4B     		ldr	r3, .L859+8
 21005 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21006 0082 002B     		cmp	r3, #0
 21007 0084 00F0CC80 		beq	.L858
 21008              	.LBB23:
3189:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 21009              		.loc 1 3189 0
 21010 0088 0023     		movs	r3, #0
 21011 008a BB71     		strb	r3, [r7, #6]
 21012 008c C4E0     		b	.L850
 21013              	.L857:
3190:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21014              		.loc 1 3190 0
 21015 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 466


 21016 0090 6A49     		ldr	r1, .L859+16
 21017 0092 1346     		mov	r3, r2
 21018 0094 DB00     		lsls	r3, r3, #3
 21019 0096 9B1A     		subs	r3, r3, r2
 21020 0098 1B01     		lsls	r3, r3, #4
 21021 009a 0B44     		add	r3, r3, r1
 21022 009c 03F20F13 		addw	r3, r3, #271
 21023 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21024 00a2 022B     		cmp	r3, #2
 21025 00a4 0ED1     		bne	.L851
3191:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 21026              		.loc 1 3191 0
 21027 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21028 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21029 00aa 5B00     		lsls	r3, r3, #1
 21030 00ac 07F10801 		add	r1, r7, #8
 21031 00b0 0B44     		add	r3, r3, r1
 21032 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 21033 00b6 1846     		mov	r0, r3
 21034 00b8 6149     		ldr	r1, .L859+20
 21035 00ba 1301     		lsls	r3, r2, #4
 21036 00bc 0B44     		add	r3, r3, r1
 21037 00be 0433     		adds	r3, r3, #4
 21038 00c0 1860     		str	r0, [r3]
 21039 00c2 47E0     		b	.L852
 21040              	.L851:
3192:..\src/command_processing.c ****             }
3193:..\src/command_processing.c ****             else {
3194:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 21041              		.loc 1 3194 0
 21042 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21043 00c6 5D49     		ldr	r1, .L859+16
 21044 00c8 1346     		mov	r3, r2
 21045 00ca DB00     		lsls	r3, r3, #3
 21046 00cc 9B1A     		subs	r3, r3, r2
 21047 00ce 1B01     		lsls	r3, r3, #4
 21048 00d0 0B44     		add	r3, r3, r1
 21049 00d2 03F20F13 		addw	r3, r3, #271
 21050 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21051 00d8 012B     		cmp	r3, #1
 21052 00da 0ED1     		bne	.L853
3195:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 21053              		.loc 1 3195 0
 21054 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21055 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21056 00e0 5B00     		lsls	r3, r3, #1
 21057 00e2 07F10801 		add	r1, r7, #8
 21058 00e6 0B44     		add	r3, r3, r1
 21059 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 21060 00ec 1846     		mov	r0, r3
 21061 00ee 5449     		ldr	r1, .L859+20
 21062 00f0 1301     		lsls	r3, r2, #4
 21063 00f2 0B44     		add	r3, r3, r1
 21064 00f4 0833     		adds	r3, r3, #8
 21065 00f6 1860     		str	r0, [r3]
 21066 00f8 2CE0     		b	.L852
 21067              	.L853:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 467


3196:..\src/command_processing.c ****                 }
3197:..\src/command_processing.c ****                 else {
3198:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 21068              		.loc 1 3198 0
 21069 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21070 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21071 00fe 5B00     		lsls	r3, r3, #1
 21072 0100 07F10801 		add	r1, r7, #8
 21073 0104 0B44     		add	r3, r3, r1
 21074 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 21075 010a 1846     		mov	r0, r3
 21076 010c 4C49     		ldr	r1, .L859+20
 21077 010e 1301     		lsls	r3, r2, #4
 21078 0110 0B44     		add	r3, r3, r1
 21079 0112 1860     		str	r0, [r3]
3199:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 21080              		.loc 1 3199 0
 21081 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21082 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21083 0118 494A     		ldr	r2, .L859+20
 21084 011a 1B01     		lsls	r3, r3, #4
 21085 011c 1344     		add	r3, r3, r2
 21086 011e 1868     		ldr	r0, [r3]
 21087 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21088 0122 454C     		ldr	r4, .L859+12
 21089 0124 1346     		mov	r3, r2
 21090 0126 DB00     		lsls	r3, r3, #3
 21091 0128 9B1A     		subs	r3, r3, r2
 21092 012a 1B01     		lsls	r3, r3, #4
 21093 012c 2344     		add	r3, r3, r4
 21094 012e 03F58873 		add	r3, r3, #272
 21095 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21096 0134 1C46     		mov	r4, r3
 21097 0136 414A     		ldr	r2, .L859+16
 21098 0138 2346     		mov	r3, r4
 21099 013a 5B00     		lsls	r3, r3, #1
 21100 013c 2344     		add	r3, r3, r4
 21101 013e 1B01     		lsls	r3, r3, #4
 21102 0140 1344     		add	r3, r3, r2
 21103 0142 03F29513 		addw	r3, r3, #405
 21104 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21105 0148 00FA03F2 		lsl	r2, r0, r3
 21106 014c 3C48     		ldr	r0, .L859+20
 21107 014e 0B01     		lsls	r3, r1, #4
 21108 0150 0344     		add	r3, r3, r0
 21109 0152 1A60     		str	r2, [r3]
 21110              	.L852:
3200:..\src/command_processing.c ****                 }
3201:..\src/command_processing.c ****             }  
3202:..\src/command_processing.c ****                
3203:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3204:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 21111              		.loc 1 3204 0
 21112 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21113 0156 3849     		ldr	r1, .L859+12
 21114 0158 1346     		mov	r3, r2
 21115 015a DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 468


 21116 015c 9B1A     		subs	r3, r3, r2
 21117 015e 1B01     		lsls	r3, r3, #4
 21118 0160 0B44     		add	r3, r3, r1
 21119 0162 E333     		adds	r3, r3, #227
 21120 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21121 0166 002B     		cmp	r3, #0
 21122 0168 53D0     		beq	.L854
 21123              		.loc 1 3204 0 is_stmt 0 discriminator 1
 21124 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21125 016c 3349     		ldr	r1, .L859+16
 21126 016e 1346     		mov	r3, r2
 21127 0170 DB00     		lsls	r3, r3, #3
 21128 0172 9B1A     		subs	r3, r3, r2
 21129 0174 1B01     		lsls	r3, r3, #4
 21130 0176 0B44     		add	r3, r3, r1
 21131 0178 03F20F13 		addw	r3, r3, #271
 21132 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21133 017e 032B     		cmp	r3, #3
 21134 0180 0BD0     		beq	.L855
 21135              		.loc 1 3204 0 discriminator 2
 21136 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21137 0184 2D49     		ldr	r1, .L859+16
 21138 0186 1346     		mov	r3, r2
 21139 0188 DB00     		lsls	r3, r3, #3
 21140 018a 9B1A     		subs	r3, r3, r2
 21141 018c 1B01     		lsls	r3, r3, #4
 21142 018e 0B44     		add	r3, r3, r1
 21143 0190 03F20F13 		addw	r3, r3, #271
 21144 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21145 0196 002B     		cmp	r3, #0
 21146 0198 3BD1     		bne	.L854
 21147              	.L855:
3205:..\src/command_processing.c ****                 
3206:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 21148              		.loc 1 3206 0 is_stmt 1
 21149 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21150 019c 284A     		ldr	r2, .L859+20
 21151 019e 1B01     		lsls	r3, r3, #4
 21152 01a0 1344     		add	r3, r3, r2
 21153 01a2 1968     		ldr	r1, [r3]
 21154 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21155 01a6 2448     		ldr	r0, .L859+12
 21156 01a8 1346     		mov	r3, r2
 21157 01aa DB00     		lsls	r3, r3, #3
 21158 01ac 9B1A     		subs	r3, r3, r2
 21159 01ae 1B01     		lsls	r3, r3, #4
 21160 01b0 0344     		add	r3, r3, r0
 21161 01b2 E433     		adds	r3, r3, #228
 21162 01b4 1B68     		ldr	r3, [r3]
 21163 01b6 9942     		cmp	r1, r3
 21164 01b8 0DDA     		bge	.L856
3207:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 21165              		.loc 1 3207 0
 21166 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21167 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21168 01be 1E48     		ldr	r0, .L859+12
 21169 01c0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 469


 21170 01c2 DB00     		lsls	r3, r3, #3
 21171 01c4 9B1A     		subs	r3, r3, r2
 21172 01c6 1B01     		lsls	r3, r3, #4
 21173 01c8 0344     		add	r3, r3, r0
 21174 01ca E433     		adds	r3, r3, #228
 21175 01cc 1A68     		ldr	r2, [r3]
 21176 01ce 1C48     		ldr	r0, .L859+20
 21177 01d0 0B01     		lsls	r3, r1, #4
 21178 01d2 0344     		add	r3, r3, r0
 21179 01d4 1A60     		str	r2, [r3]
 21180              	.L856:
3208:..\src/command_processing.c **** 
3209:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 21181              		.loc 1 3209 0
 21182 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21183 01d8 194A     		ldr	r2, .L859+20
 21184 01da 1B01     		lsls	r3, r3, #4
 21185 01dc 1344     		add	r3, r3, r2
 21186 01de 1968     		ldr	r1, [r3]
 21187 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21188 01e2 1548     		ldr	r0, .L859+12
 21189 01e4 1346     		mov	r3, r2
 21190 01e6 DB00     		lsls	r3, r3, #3
 21191 01e8 9B1A     		subs	r3, r3, r2
 21192 01ea 1B01     		lsls	r3, r3, #4
 21193 01ec 0344     		add	r3, r3, r0
 21194 01ee E833     		adds	r3, r3, #232
 21195 01f0 1B68     		ldr	r3, [r3]
 21196 01f2 9942     		cmp	r1, r3
 21197 01f4 0DDD     		ble	.L854
3210:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 21198              		.loc 1 3210 0
 21199 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21200 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21201 01fa 0F48     		ldr	r0, .L859+12
 21202 01fc 1346     		mov	r3, r2
 21203 01fe DB00     		lsls	r3, r3, #3
 21204 0200 9B1A     		subs	r3, r3, r2
 21205 0202 1B01     		lsls	r3, r3, #4
 21206 0204 0344     		add	r3, r3, r0
 21207 0206 E833     		adds	r3, r3, #232
 21208 0208 1A68     		ldr	r2, [r3]
 21209 020a 0D48     		ldr	r0, .L859+20
 21210 020c 0B01     		lsls	r3, r1, #4
 21211 020e 0344     		add	r3, r3, r0
 21212 0210 1A60     		str	r2, [r3]
 21213              	.L854:
3189:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21214              		.loc 1 3189 0 discriminator 2
 21215 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21216 0214 0133     		adds	r3, r3, #1
 21217 0216 BB71     		strb	r3, [r7, #6]
 21218              	.L850:
3189:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21219              		.loc 1 3189 0 is_stmt 0 discriminator 1
 21220 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21221 021a 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 470


 21222 021c 7FF637AF 		bls	.L857
 21223              	.L858:
 21224              	.LBE23:
3211:..\src/command_processing.c ****             }
3212:..\src/command_processing.c ****         }  
3213:..\src/command_processing.c ****     }
3214:..\src/command_processing.c **** }
 21225              		.loc 1 3214 0 is_stmt 1
 21226 0220 00BF     		nop
 21227 0222 0837     		adds	r7, r7, #8
 21228              		.cfi_def_cfa_offset 8
 21229 0224 BD46     		mov	sp, r7
 21230              		.cfi_def_cfa_register 13
 21231              		@ sp needed
 21232 0226 90BC     		pop	{r4, r7}
 21233              		.cfi_restore 7
 21234              		.cfi_restore 4
 21235              		.cfi_def_cfa_offset 0
 21236 0228 7047     		bx	lr
 21237              	.L860:
 21238 022a 00BF     		.align	2
 21239              	.L859:
 21240 022c 00000000 		.word	g_rx
 21241 0230 04000000 		.word	last_aux_int16.11265
 21242 0234 00000000 		.word	change_ext_ref_flag
 21243 0238 00000000 		.word	c_mem
 21244 023c 00000000 		.word	g_mem
 21245 0240 00000000 		.word	g_refNew
 21246              		.cfi_endproc
 21247              	.LFE93:
 21248              		.size	cmd_set_inputs, .-cmd_set_inputs
 21249              		.section	.text.cmd_activate,"ax",%progbits
 21250              		.align	2
 21251              		.global	cmd_activate
 21252              		.thumb
 21253              		.thumb_func
 21254              		.type	cmd_activate, %function
 21255              	cmd_activate:
 21256              	.LFB94:
3215:..\src/command_processing.c **** 
3216:..\src/command_processing.c **** void cmd_activate(){
 21257              		.loc 1 3216 0
 21258              		.cfi_startproc
 21259              		@ args = 0, pretend = 0, frame = 8
 21260              		@ frame_needed = 1, uses_anonymous_args = 0
 21261 0000 80B5     		push	{r7, lr}
 21262              		.cfi_def_cfa_offset 8
 21263              		.cfi_offset 7, -8
 21264              		.cfi_offset 14, -4
 21265 0002 82B0     		sub	sp, sp, #8
 21266              		.cfi_def_cfa_offset 16
 21267 0004 00AF     		add	r7, sp, #0
 21268              		.cfi_def_cfa_register 7
3217:..\src/command_processing.c ****     
3218:..\src/command_processing.c ****     // Store new value reads
3219:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 21269              		.loc 1 3219 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 471


 21270 0006 294B     		ldr	r3, .L868
 21271 0008 5B78     		ldrb	r3, [r3, #1]
 21272 000a FB71     		strb	r3, [r7, #7]
3220:..\src/command_processing.c ****     
3221:..\src/command_processing.c ****     // Check type of control mode enabled
3222:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 21273              		.loc 1 3222 0
 21274 000c 284B     		ldr	r3, .L868+4
 21275 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 21276 0012 002B     		cmp	r3, #0
 21277 0014 04D0     		beq	.L862
 21278              		.loc 1 3222 0 is_stmt 0 discriminator 1
 21279 0016 264B     		ldr	r3, .L868+4
 21280 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 21281 001c 032B     		cmp	r3, #3
 21282 001e 0BD1     		bne	.L863
 21283              	.L862:
3223:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 21284              		.loc 1 3223 0 is_stmt 1
 21285 0020 234B     		ldr	r3, .L868+4
 21286 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21287 0026 1946     		mov	r1, r3
 21288 0028 224A     		ldr	r2, .L868+8
 21289 002a 3423     		movs	r3, #52
 21290 002c 03FB01F3 		mul	r3, r3, r1
 21291 0030 1344     		add	r3, r3, r2
 21292 0032 1B68     		ldr	r3, [r3]
 21293 0034 204A     		ldr	r2, .L868+12
 21294 0036 1360     		str	r3, [r2]
 21295              	.L863:
3224:..\src/command_processing.c ****     }
3225:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 21296              		.loc 1 3225 0
 21297 0038 FB79     		ldrb	r3, [r7, #7]
 21298 003a 03F00103 		and	r3, r3, #1
 21299 003e DAB2     		uxtb	r2, r3
 21300 0040 1D4B     		ldr	r3, .L868+12
 21301 0042 1A73     		strb	r2, [r3, #12]
3226:..\src/command_processing.c ****     
3227:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3228:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3229:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3230:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3231:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3232:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3233:..\src/command_processing.c ****         }
3234:..\src/command_processing.c ****         
3235:..\src/command_processing.c ****         // Activate or deactivate the valve
3236:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3237:..\src/command_processing.c ****     }
3238:..\src/command_processing.c **** #endif
3239:..\src/command_processing.c ****     
3240:..\src/command_processing.c ****     // Activate/Deactivate motor
3241:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 21302              		.loc 1 3241 0
 21303 0044 1C4B     		ldr	r3, .L868+12
 21304 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 472


 21305 0048 1946     		mov	r1, r3
 21306 004a 0020     		movs	r0, #0
 21307 004c FFF7FEFF 		bl	enable_motor
3242:..\src/command_processing.c ****     
3243:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21308              		.loc 1 3243 0
 21309 0050 174B     		ldr	r3, .L868+4
 21310 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21311 0056 012B     		cmp	r3, #1
 21312 0058 23D1     		bne	.L867
3244:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 21313              		.loc 1 3244 0
 21314 005a 154B     		ldr	r3, .L868+4
 21315 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21316 0060 002B     		cmp	r3, #0
 21317 0062 04D0     		beq	.L865
 21318              		.loc 1 3244 0 is_stmt 0 discriminator 1
 21319 0064 124B     		ldr	r3, .L868+4
 21320 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21321 006a 032B     		cmp	r3, #3
 21322 006c 0BD1     		bne	.L866
 21323              	.L865:
3245:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 21324              		.loc 1 3245 0 is_stmt 1
 21325 006e 104B     		ldr	r3, .L868+4
 21326 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21327 0074 1946     		mov	r1, r3
 21328 0076 0F4A     		ldr	r2, .L868+8
 21329 0078 3423     		movs	r3, #52
 21330 007a 03FB01F3 		mul	r3, r3, r1
 21331 007e 1344     		add	r3, r3, r2
 21332 0080 1B68     		ldr	r3, [r3]
 21333 0082 0D4A     		ldr	r2, .L868+12
 21334 0084 1361     		str	r3, [r2, #16]
 21335              	.L866:
3246:..\src/command_processing.c ****         }
3247:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 21336              		.loc 1 3247 0
 21337 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21338 0088 5B08     		lsrs	r3, r3, #1
 21339 008a DBB2     		uxtb	r3, r3
 21340 008c 03F00103 		and	r3, r3, #1
 21341 0090 DAB2     		uxtb	r2, r3
 21342 0092 094B     		ldr	r3, .L868+12
 21343 0094 1A77     		strb	r2, [r3, #28]
3248:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 21344              		.loc 1 3248 0
 21345 0096 084B     		ldr	r3, .L868+12
 21346 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21347 009a 1946     		mov	r1, r3
 21348 009c 0120     		movs	r0, #1
 21349 009e FFF7FEFF 		bl	enable_motor
 21350              	.L867:
3249:..\src/command_processing.c ****     }
3250:..\src/command_processing.c ****     
3251:..\src/command_processing.c **** }
 21351              		.loc 1 3251 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 473


 21352 00a2 00BF     		nop
 21353 00a4 0837     		adds	r7, r7, #8
 21354              		.cfi_def_cfa_offset 8
 21355 00a6 BD46     		mov	sp, r7
 21356              		.cfi_def_cfa_register 13
 21357              		@ sp needed
 21358 00a8 80BD     		pop	{r7, pc}
 21359              	.L869:
 21360 00aa 00BF     		.align	2
 21361              	.L868:
 21362 00ac 00000000 		.word	g_rx
 21363 00b0 00000000 		.word	g_mem
 21364 00b4 00000000 		.word	g_meas
 21365 00b8 00000000 		.word	g_refNew
 21366              		.cfi_endproc
 21367              	.LFE94:
 21368              		.size	cmd_activate, .-cmd_activate
 21369              		.section	.text.cmd_get_activate,"ax",%progbits
 21370              		.align	2
 21371              		.global	cmd_get_activate
 21372              		.thumb
 21373              		.thumb_func
 21374              		.type	cmd_get_activate, %function
 21375              	cmd_get_activate:
 21376              	.LFB95:
3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c **** void cmd_get_activate(){
 21377              		.loc 1 3253 0
 21378              		.cfi_startproc
 21379              		@ args = 0, pretend = 0, frame = 8
 21380              		@ frame_needed = 1, uses_anonymous_args = 0
 21381 0000 80B5     		push	{r7, lr}
 21382              		.cfi_def_cfa_offset 8
 21383              		.cfi_offset 7, -8
 21384              		.cfi_offset 14, -4
 21385 0002 82B0     		sub	sp, sp, #8
 21386              		.cfi_def_cfa_offset 16
 21387 0004 00AF     		add	r7, sp, #0
 21388              		.cfi_def_cfa_register 7
3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     uint8 packet_data[3];
3256:..\src/command_processing.c **** 
3257:..\src/command_processing.c ****     // Header        
3258:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 21389              		.loc 1 3258 0
 21390 0006 8123     		movs	r3, #129
 21391 0008 3B71     		strb	r3, [r7, #4]
3259:..\src/command_processing.c ****     
3260:..\src/command_processing.c ****     // Fill payload
3261:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21392              		.loc 1 3261 0
 21393 000a 124B     		ldr	r3, .L873
 21394 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21395 0010 012B     		cmp	r3, #1
 21396 0012 0BD1     		bne	.L871
3262:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 21397              		.loc 1 3262 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 474


 21398 0014 104B     		ldr	r3, .L873+4
 21399 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21400 0018 5B00     		lsls	r3, r3, #1
 21401 001a 5AB2     		sxtb	r2, r3
 21402 001c 0E4B     		ldr	r3, .L873+4
 21403 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21404 0020 5BB2     		sxtb	r3, r3
 21405 0022 1343     		orrs	r3, r3, r2
 21406 0024 5BB2     		sxtb	r3, r3
 21407 0026 DBB2     		uxtb	r3, r3
 21408 0028 7B71     		strb	r3, [r7, #5]
 21409 002a 02E0     		b	.L872
 21410              	.L871:
3263:..\src/command_processing.c ****     } 
3264:..\src/command_processing.c ****     else {
3265:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 21411              		.loc 1 3265 0
 21412 002c 0A4B     		ldr	r3, .L873+4
 21413 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21414 0030 7B71     		strb	r3, [r7, #5]
 21415              	.L872:
3266:..\src/command_processing.c ****     }
3267:..\src/command_processing.c ****     
3268:..\src/command_processing.c ****     // Calculate checksum
3269:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 21416              		.loc 1 3269 0
 21417 0032 3B1D     		adds	r3, r7, #4
 21418 0034 0221     		movs	r1, #2
 21419 0036 1846     		mov	r0, r3
 21420 0038 FFF7FEFF 		bl	LCRChecksum
 21421 003c 0346     		mov	r3, r0
 21422 003e BB71     		strb	r3, [r7, #6]
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     // Send package to UART
3272:..\src/command_processing.c ****     commWrite(packet_data, 3);
 21423              		.loc 1 3272 0
 21424 0040 3B1D     		adds	r3, r7, #4
 21425 0042 0321     		movs	r1, #3
 21426 0044 1846     		mov	r0, r3
 21427 0046 FFF7FEFF 		bl	commWrite
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c **** }
 21428              		.loc 1 3274 0
 21429 004a 00BF     		nop
 21430 004c 0837     		adds	r7, r7, #8
 21431              		.cfi_def_cfa_offset 8
 21432 004e BD46     		mov	sp, r7
 21433              		.cfi_def_cfa_register 13
 21434              		@ sp needed
 21435 0050 80BD     		pop	{r7, pc}
 21436              	.L874:
 21437 0052 00BF     		.align	2
 21438              	.L873:
 21439 0054 00000000 		.word	g_mem
 21440 0058 00000000 		.word	g_ref
 21441              		.cfi_endproc
 21442              	.LFE95:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 475


 21443              		.size	cmd_get_activate, .-cmd_get_activate
 21444              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 21445              		.align	2
 21446              		.global	cmd_get_curr_and_meas
 21447              		.thumb
 21448              		.thumb_func
 21449              		.type	cmd_get_curr_and_meas, %function
 21450              	cmd_get_curr_and_meas:
 21451              	.LFB96:
3275:..\src/command_processing.c **** 
3276:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 21452              		.loc 1 3276 0
 21453              		.cfi_startproc
 21454              		@ args = 0, pretend = 0, frame = 16
 21455              		@ frame_needed = 1, uses_anonymous_args = 0
 21456 0000 90B5     		push	{r4, r7, lr}
 21457              		.cfi_def_cfa_offset 12
 21458              		.cfi_offset 4, -12
 21459              		.cfi_offset 7, -8
 21460              		.cfi_offset 14, -4
 21461 0002 85B0     		sub	sp, sp, #20
 21462              		.cfi_def_cfa_offset 32
 21463 0004 00AF     		add	r7, sp, #0
 21464              		.cfi_def_cfa_register 7
3277:..\src/command_processing.c ****     
3278:..\src/command_processing.c ****     uint8 CYDATA index;
3279:..\src/command_processing.c ****     int16 aux_int16;
3280:..\src/command_processing.c ****    
3281:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3282:..\src/command_processing.c ****     
3283:..\src/command_processing.c ****     uint8 packet_data[12]; 
3284:..\src/command_processing.c **** 
3285:..\src/command_processing.c ****     //Header package
3286:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 21465              		.loc 1 3286 0
 21466 0006 8623     		movs	r3, #134
 21467 0008 3B70     		strb	r3, [r7]
3287:..\src/command_processing.c **** 
3288:..\src/command_processing.c ****     // Currents
3289:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 21468              		.loc 1 3289 0
 21469 000a 484B     		ldr	r3, .L880
 21470 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21471 0010 1946     		mov	r1, r3
 21472 0012 474A     		ldr	r2, .L880+4
 21473 0014 3423     		movs	r3, #52
 21474 0016 03FB01F3 		mul	r3, r3, r1
 21475 001a 1344     		add	r3, r3, r2
 21476 001c 0C33     		adds	r3, r3, #12
 21477 001e 1B68     		ldr	r3, [r3]
 21478 0020 1BB2     		sxth	r3, r3
 21479 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3290:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21480              		.loc 1 3290 0
 21481 0024 07F10C03 		add	r3, r7, #12
 21482 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21483 002a BB70     		strb	r3, [r7, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 476


3291:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21484              		.loc 1 3291 0
 21485 002c 07F10C03 		add	r3, r7, #12
 21486 0030 0133     		adds	r3, r3, #1
 21487 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21488 0034 7B70     		strb	r3, [r7, #1]
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21489              		.loc 1 3293 0
 21490 0036 3F4B     		ldr	r3, .L880+8
 21491 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21492 003c 012B     		cmp	r3, #1
 21493 003e 0DD1     		bne	.L876
3294:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21494              		.loc 1 3294 0
 21495 0040 3A4B     		ldr	r3, .L880
 21496 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21497 0046 1946     		mov	r1, r3
 21498 0048 394A     		ldr	r2, .L880+4
 21499 004a 3423     		movs	r3, #52
 21500 004c 03FB01F3 		mul	r3, r3, r1
 21501 0050 1344     		add	r3, r3, r2
 21502 0052 0C33     		adds	r3, r3, #12
 21503 0054 1B68     		ldr	r3, [r3]
 21504 0056 1BB2     		sxth	r3, r3
 21505 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 21506 005a 0CE0     		b	.L877
 21507              	.L876:
3295:..\src/command_processing.c ****     }
3296:..\src/command_processing.c ****     else {
3297:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21508              		.loc 1 3297 0
 21509 005c 334B     		ldr	r3, .L880
 21510 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21511 0062 1946     		mov	r1, r3
 21512 0064 324A     		ldr	r2, .L880+4
 21513 0066 3423     		movs	r3, #52
 21514 0068 03FB01F3 		mul	r3, r3, r1
 21515 006c 1344     		add	r3, r3, r2
 21516 006e 1033     		adds	r3, r3, #16
 21517 0070 1B68     		ldr	r3, [r3]
 21518 0072 1BB2     		sxth	r3, r3
 21519 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 21520              	.L877:
3298:..\src/command_processing.c ****     }
3299:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21521              		.loc 1 3299 0
 21522 0076 07F10C03 		add	r3, r7, #12
 21523 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21524 007c 3B71     		strb	r3, [r7, #4]
3300:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21525              		.loc 1 3300 0
 21526 007e 07F10C03 		add	r3, r7, #12
 21527 0082 0133     		adds	r3, r3, #1
 21528 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21529 0086 FB70     		strb	r3, [r7, #3]
3301:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 477


3302:..\src/command_processing.c ****     // Positions
3303:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21530              		.loc 1 3303 0
 21531 0088 0323     		movs	r3, #3
 21532 008a FB73     		strb	r3, [r7, #15]
 21533 008c 38E0     		b	.L878
 21534              	.L879:
3304:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21535              		.loc 1 3304 0
 21536 008e 274B     		ldr	r3, .L880
 21537 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21538 0094 1A46     		mov	r2, r3
 21539 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21540 0098 2548     		ldr	r0, .L880+4
 21541 009a 1346     		mov	r3, r2
 21542 009c 5B00     		lsls	r3, r3, #1
 21543 009e 1344     		add	r3, r3, r2
 21544 00a0 9B00     		lsls	r3, r3, #2
 21545 00a2 1344     		add	r3, r3, r2
 21546 00a4 0B44     		add	r3, r3, r1
 21547 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 21548 00aa 204B     		ldr	r3, .L880
 21549 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21550 00b0 1C46     		mov	r4, r3
 21551 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21552 00b4 1D48     		ldr	r0, .L880
 21553 00b6 2346     		mov	r3, r4
 21554 00b8 5B00     		lsls	r3, r3, #1
 21555 00ba 2344     		add	r3, r3, r4
 21556 00bc 1B01     		lsls	r3, r3, #4
 21557 00be 0344     		add	r3, r3, r0
 21558 00c0 0B44     		add	r3, r3, r1
 21559 00c2 03F29513 		addw	r3, r3, #405
 21560 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21561 00c8 42FA03F3 		asr	r3, r2, r3
 21562 00cc 1BB2     		sxth	r3, r3
 21563 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3305:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 21564              		.loc 1 3305 0
 21565 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21566 00d2 5B00     		lsls	r3, r3, #1
 21567 00d4 0633     		adds	r3, r3, #6
 21568 00d6 07F10C02 		add	r2, r7, #12
 21569 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21570 00dc 07F11001 		add	r1, r7, #16
 21571 00e0 0B44     		add	r3, r3, r1
 21572 00e2 03F8102C 		strb	r2, [r3, #-16]
3306:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 21573              		.loc 1 3306 0
 21574 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21575 00e8 5B00     		lsls	r3, r3, #1
 21576 00ea 5A1D     		adds	r2, r3, #5
 21577 00ec 07F10C03 		add	r3, r7, #12
 21578 00f0 0133     		adds	r3, r3, #1
 21579 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21580 00f4 07F11003 		add	r3, r7, #16
 21581 00f8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 478


 21582 00fa 0A46     		mov	r2, r1
 21583 00fc 03F8102C 		strb	r2, [r3, #-16]
 21584              	.L878:
3303:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21585              		.loc 1 3303 0 discriminator 1
 21586 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21587 0102 5A1E     		subs	r2, r3, #1
 21588 0104 FA73     		strb	r2, [r7, #15]
 21589 0106 002B     		cmp	r3, #0
 21590 0108 C1D1     		bne	.L879
3307:..\src/command_processing.c ****     }
3308:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3309:..\src/command_processing.c ****         
3310:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 21591              		.loc 1 3310 0
 21592 010a 3B46     		mov	r3, r7
 21593 010c 0B21     		movs	r1, #11
 21594 010e 1846     		mov	r0, r3
 21595 0110 FFF7FEFF 		bl	LCRChecksum
 21596 0114 0346     		mov	r3, r0
 21597 0116 FB72     		strb	r3, [r7, #11]
3311:..\src/command_processing.c ****     commWrite(packet_data, 12);
 21598              		.loc 1 3311 0
 21599 0118 3B46     		mov	r3, r7
 21600 011a 0C21     		movs	r1, #12
 21601 011c 1846     		mov	r0, r3
 21602 011e FFF7FEFF 		bl	commWrite
3312:..\src/command_processing.c ****    
3313:..\src/command_processing.c **** }
 21603              		.loc 1 3313 0
 21604 0122 00BF     		nop
 21605 0124 1437     		adds	r7, r7, #20
 21606              		.cfi_def_cfa_offset 12
 21607 0126 BD46     		mov	sp, r7
 21608              		.cfi_def_cfa_register 13
 21609              		@ sp needed
 21610 0128 90BD     		pop	{r4, r7, pc}
 21611              	.L881:
 21612 012a 00BF     		.align	2
 21613              	.L880:
 21614 012c 00000000 		.word	g_mem
 21615 0130 00000000 		.word	g_measOld
 21616 0134 00000000 		.word	c_mem
 21617              		.cfi_endproc
 21618              	.LFE96:
 21619              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 21620              		.global	__aeabi_dmul
 21621              		.global	__aeabi_d2iz
 21622              		.section	.text.cmd_get_currents,"ax",%progbits
 21623              		.align	2
 21624              		.global	cmd_get_currents
 21625              		.thumb
 21626              		.thumb_func
 21627              		.type	cmd_get_currents, %function
 21628              	cmd_get_currents:
 21629              	.LFB97:
3314:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 479


3315:..\src/command_processing.c **** void cmd_get_currents(){
 21630              		.loc 1 3315 0
 21631              		.cfi_startproc
 21632              		@ args = 0, pretend = 0, frame = 16
 21633              		@ frame_needed = 1, uses_anonymous_args = 0
 21634 0000 90B5     		push	{r4, r7, lr}
 21635              		.cfi_def_cfa_offset 12
 21636              		.cfi_offset 4, -12
 21637              		.cfi_offset 7, -8
 21638              		.cfi_offset 14, -4
 21639 0002 85B0     		sub	sp, sp, #20
 21640              		.cfi_def_cfa_offset 32
 21641 0004 00AF     		add	r7, sp, #0
 21642              		.cfi_def_cfa_register 7
3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3318:..\src/command_processing.c ****     
3319:..\src/command_processing.c ****     uint8 packet_data[6]; 
3320:..\src/command_processing.c ****     int16 aux_int16;
3321:..\src/command_processing.c ****     
3322:..\src/command_processing.c ****     //Header package
3323:..\src/command_processing.c **** 
3324:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 21643              		.loc 1 3324 0
 21644 0006 8523     		movs	r3, #133
 21645 0008 3B72     		strb	r3, [r7, #8]
3325:..\src/command_processing.c **** 
3326:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 21646              		.loc 1 3326 0
 21647 000a 334B     		ldr	r3, .L887
 21648 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 21649 0010 022B     		cmp	r3, #2
 21650 0012 0DD0     		beq	.L883
3327:..\src/command_processing.c ****         // Currents
3328:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 21651              		.loc 1 3328 0
 21652 0014 314B     		ldr	r3, .L887+4
 21653 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21654 001a 1946     		mov	r1, r3
 21655 001c 304A     		ldr	r2, .L887+8
 21656 001e 3423     		movs	r3, #52
 21657 0020 03FB01F3 		mul	r3, r3, r1
 21658 0024 1344     		add	r3, r3, r2
 21659 0026 0C33     		adds	r3, r3, #12
 21660 0028 1B68     		ldr	r3, [r3]
 21661 002a 1BB2     		sxth	r3, r3
 21662 002c FB80     		strh	r3, [r7, #6]	@ movhi
 21663 002e 12E0     		b	.L884
 21664              	.L883:
3329:..\src/command_processing.c ****     }
3330:..\src/command_processing.c ****     else {
3331:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
3332:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 21665              		.loc 1 3332 0
 21666 0030 2C4B     		ldr	r3, .L887+12
 21667 0032 1B68     		ldr	r3, [r3]	@ float
 21668 0034 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 480


 21669 0036 FFF7FEFF 		bl	__aeabi_f2d
 21670 003a 4FF00002 		mov	r2, #0
 21671 003e 2A4B     		ldr	r3, .L887+16
 21672 0040 FFF7FEFF 		bl	__aeabi_dmul
 21673 0044 0346     		mov	r3, r0
 21674 0046 0C46     		mov	r4, r1
 21675 0048 1846     		mov	r0, r3
 21676 004a 2146     		mov	r1, r4
 21677 004c FFF7FEFF 		bl	__aeabi_d2iz
 21678 0050 0346     		mov	r3, r0
 21679 0052 1BB2     		sxth	r3, r3
 21680 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 21681              	.L884:
3333:..\src/command_processing.c ****     }
3334:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21682              		.loc 1 3334 0
 21683 0056 BB1D     		adds	r3, r7, #6
 21684 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21685 005a BB72     		strb	r3, [r7, #10]
3335:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21686              		.loc 1 3335 0
 21687 005c BB1D     		adds	r3, r7, #6
 21688 005e 0133     		adds	r3, r3, #1
 21689 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21690 0062 7B72     		strb	r3, [r7, #9]
3336:..\src/command_processing.c ****     
3337:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21691              		.loc 1 3337 0
 21692 0064 1C4B     		ldr	r3, .L887
 21693 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21694 006a 012B     		cmp	r3, #1
 21695 006c 0DD1     		bne	.L885
3338:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21696              		.loc 1 3338 0
 21697 006e 1B4B     		ldr	r3, .L887+4
 21698 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21699 0074 1946     		mov	r1, r3
 21700 0076 1A4A     		ldr	r2, .L887+8
 21701 0078 3423     		movs	r3, #52
 21702 007a 03FB01F3 		mul	r3, r3, r1
 21703 007e 1344     		add	r3, r3, r2
 21704 0080 0C33     		adds	r3, r3, #12
 21705 0082 1B68     		ldr	r3, [r3]
 21706 0084 1BB2     		sxth	r3, r3
 21707 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 21708 0088 0CE0     		b	.L886
 21709              	.L885:
3339:..\src/command_processing.c ****     }
3340:..\src/command_processing.c ****     else {
3341:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21710              		.loc 1 3341 0
 21711 008a 144B     		ldr	r3, .L887+4
 21712 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21713 0090 1946     		mov	r1, r3
 21714 0092 134A     		ldr	r2, .L887+8
 21715 0094 3423     		movs	r3, #52
 21716 0096 03FB01F3 		mul	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 481


 21717 009a 1344     		add	r3, r3, r2
 21718 009c 1033     		adds	r3, r3, #16
 21719 009e 1B68     		ldr	r3, [r3]
 21720 00a0 1BB2     		sxth	r3, r3
 21721 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 21722              	.L886:
3342:..\src/command_processing.c ****     }
3343:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21723              		.loc 1 3343 0
 21724 00a4 BB1D     		adds	r3, r7, #6
 21725 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21726 00a8 3B73     		strb	r3, [r7, #12]
3344:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21727              		.loc 1 3344 0
 21728 00aa BB1D     		adds	r3, r7, #6
 21729 00ac 0133     		adds	r3, r3, #1
 21730 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21731 00b0 FB72     		strb	r3, [r7, #11]
3345:..\src/command_processing.c **** 
3346:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21732              		.loc 1 3348 0
 21733 00b2 07F10803 		add	r3, r7, #8
 21734 00b6 0521     		movs	r1, #5
 21735 00b8 1846     		mov	r0, r3
 21736 00ba FFF7FEFF 		bl	LCRChecksum
 21737 00be 0346     		mov	r3, r0
 21738 00c0 7B73     		strb	r3, [r7, #13]
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21739              		.loc 1 3350 0
 21740 00c2 07F10803 		add	r3, r7, #8
 21741 00c6 0621     		movs	r1, #6
 21742 00c8 1846     		mov	r0, r3
 21743 00ca FFF7FEFF 		bl	commWrite
3351:..\src/command_processing.c **** }
 21744              		.loc 1 3351 0
 21745 00ce 00BF     		nop
 21746 00d0 1437     		adds	r7, r7, #20
 21747              		.cfi_def_cfa_offset 12
 21748 00d2 BD46     		mov	sp, r7
 21749              		.cfi_def_cfa_register 13
 21750              		@ sp needed
 21751 00d4 90BD     		pop	{r4, r7, pc}
 21752              	.L888:
 21753 00d6 00BF     		.align	2
 21754              	.L887:
 21755 00d8 00000000 		.word	c_mem
 21756 00dc 00000000 		.word	g_mem
 21757 00e0 00000000 		.word	g_measOld
 21758 00e4 00000000 		.word	g_fb_meas
 21759 00e8 00005940 		.word	1079574528
 21760              		.cfi_endproc
 21761              	.LFE97:
 21762              		.size	cmd_get_currents, .-cmd_get_currents
 21763              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 482


 21764              		.align	2
 21765              		.global	cmd_get_currents_for_cuff
 21766              		.thumb
 21767              		.thumb_func
 21768              		.type	cmd_get_currents_for_cuff, %function
 21769              	cmd_get_currents_for_cuff:
 21770              	.LFB98:
3352:..\src/command_processing.c **** 
3353:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 21771              		.loc 1 3353 0
 21772              		.cfi_startproc
 21773              		@ args = 0, pretend = 0, frame = 8
 21774              		@ frame_needed = 1, uses_anonymous_args = 0
 21775 0000 80B5     		push	{r7, lr}
 21776              		.cfi_def_cfa_offset 8
 21777              		.cfi_offset 7, -8
 21778              		.cfi_offset 14, -4
 21779 0002 82B0     		sub	sp, sp, #8
 21780              		.cfi_def_cfa_offset 16
 21781 0004 00AF     		add	r7, sp, #0
 21782              		.cfi_def_cfa_register 7
3354:..\src/command_processing.c ****     
3355:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3356:..\src/command_processing.c ****     
3357:..\src/command_processing.c ****     uint8 packet_data[4]; 
3358:..\src/command_processing.c ****     int16 aux_int16;
3359:..\src/command_processing.c ****     
3360:..\src/command_processing.c ****     //Header package
3361:..\src/command_processing.c **** 
3362:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 21783              		.loc 1 3362 0
 21784 0006 8E23     		movs	r3, #142
 21785 0008 3B71     		strb	r3, [r7, #4]
3363:..\src/command_processing.c **** 
3364:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 21786              		.loc 1 3364 0
 21787 000a 144B     		ldr	r3, .L890
 21788 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21789 0010 1946     		mov	r1, r3
 21790 0012 134A     		ldr	r2, .L890+4
 21791 0014 3423     		movs	r3, #52
 21792 0016 03FB01F3 		mul	r3, r3, r1
 21793 001a 1344     		add	r3, r3, r2
 21794 001c 1033     		adds	r3, r3, #16
 21795 001e 1B68     		ldr	r3, [r3]
 21796 0020 1BB2     		sxth	r3, r3
 21797 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3365:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21798              		.loc 1 3365 0
 21799 0024 BB1C     		adds	r3, r7, #2
 21800 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21801 0028 BB71     		strb	r3, [r7, #6]
3366:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21802              		.loc 1 3366 0
 21803 002a BB1C     		adds	r3, r7, #2
 21804 002c 0133     		adds	r3, r3, #1
 21805 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 483


 21806 0030 7B71     		strb	r3, [r7, #5]
3367:..\src/command_processing.c **** 
3368:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3369:..\src/command_processing.c **** 
3370:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 21807              		.loc 1 3370 0
 21808 0032 3B1D     		adds	r3, r7, #4
 21809 0034 0321     		movs	r1, #3
 21810 0036 1846     		mov	r0, r3
 21811 0038 FFF7FEFF 		bl	LCRChecksum
 21812 003c 0346     		mov	r3, r0
 21813 003e FB71     		strb	r3, [r7, #7]
3371:..\src/command_processing.c ****     
3372:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 21814              		.loc 1 3372 0
 21815 0040 064B     		ldr	r3, .L890
 21816 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21817 0046 013B     		subs	r3, r3, #1
 21818 0048 DAB2     		uxtb	r2, r3
 21819 004a 3B1D     		adds	r3, r7, #4
 21820 004c 0421     		movs	r1, #4
 21821 004e 1846     		mov	r0, r3
 21822 0050 FFF7FEFF 		bl	commWriteID
3373:..\src/command_processing.c **** }
 21823              		.loc 1 3373 0
 21824 0054 00BF     		nop
 21825 0056 0837     		adds	r7, r7, #8
 21826              		.cfi_def_cfa_offset 8
 21827 0058 BD46     		mov	sp, r7
 21828              		.cfi_def_cfa_register 13
 21829              		@ sp needed
 21830 005a 80BD     		pop	{r7, pc}
 21831              	.L891:
 21832              		.align	2
 21833              	.L890:
 21834 005c 00000000 		.word	g_mem
 21835 0060 00000000 		.word	g_measOld
 21836              		.cfi_endproc
 21837              	.LFE98:
 21838              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 21839              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 21840              		.align	2
 21841              		.global	commReadResCurrFromSH
 21842              		.thumb
 21843              		.thumb_func
 21844              		.type	commReadResCurrFromSH, %function
 21845              	commReadResCurrFromSH:
 21846              	.LFB99:
3374:..\src/command_processing.c **** 
3375:..\src/command_processing.c **** //==============================================================================
3376:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3377:..\src/command_processing.c **** //==============================================================================
3378:..\src/command_processing.c **** 
3379:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3380:..\src/command_processing.c **** {
 21847              		.loc 1 3380 0
 21848              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 484


 21849              		@ args = 0, pretend = 0, frame = 32
 21850              		@ frame_needed = 1, uses_anonymous_args = 0
 21851 0000 80B5     		push	{r7, lr}
 21852              		.cfi_def_cfa_offset 8
 21853              		.cfi_offset 7, -8
 21854              		.cfi_offset 14, -4
 21855 0002 88B0     		sub	sp, sp, #32
 21856              		.cfi_def_cfa_offset 40
 21857 0004 00AF     		add	r7, sp, #0
 21858              		.cfi_def_cfa_register 7
3381:..\src/command_processing.c ****     uint8 packet_data[16];
3382:..\src/command_processing.c ****     uint8 packet_lenght;
3383:..\src/command_processing.c ****     int16 curr_diff = 0;
 21859              		.loc 1 3383 0
 21860 0006 0023     		movs	r3, #0
 21861 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3384:..\src/command_processing.c ****     uint32 t_start, t_end;
3385:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 21862              		.loc 1 3385 0
 21863 000a 0123     		movs	r3, #1
 21864 000c 7B77     		strb	r3, [r7, #29]
3386:..\src/command_processing.c **** 
3387:..\src/command_processing.c ****     packet_lenght = 2;
 21865              		.loc 1 3387 0
 21866 000e 0223     		movs	r3, #2
 21867 0010 3B77     		strb	r3, [r7, #28]
3388:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 21868              		.loc 1 3388 0
 21869 0012 8C23     		movs	r3, #140
 21870 0014 3B71     		strb	r3, [r7, #4]
3389:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 21871              		.loc 1 3389 0
 21872 0016 8C23     		movs	r3, #140
 21873 0018 7B71     		strb	r3, [r7, #5]
3390:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 21874              		.loc 1 3390 0
 21875 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 21876 001c 99B2     		uxth	r1, r3
 21877 001e 1D4B     		ldr	r3, .L899
 21878 0020 93F8B122 		ldrb	r2, [r3, #689]	@ zero_extendqisi2
 21879 0024 3B1D     		adds	r3, r7, #4
 21880 0026 1846     		mov	r0, r3
 21881 0028 FFF7FEFF 		bl	commWriteID
3391:..\src/command_processing.c **** 
3392:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 21882              		.loc 1 3392 0
 21883 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 21884 0030 0346     		mov	r3, r0
 21885 0032 BB61     		str	r3, [r7, #24]
3393:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 21886              		.loc 1 3393 0
 21887 0034 18E0     		b	.L893
 21888              	.L896:
3394:..\src/command_processing.c ****         if (interrupt_flag){
 21889              		.loc 1 3394 0
 21890 0036 184B     		ldr	r3, .L899+4
 21891 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 485


 21892 003a 002B     		cmp	r3, #0
 21893 003c 04D0     		beq	.L894
3395:..\src/command_processing.c ****             interrupt_flag = FALSE;
 21894              		.loc 1 3395 0
 21895 003e 164B     		ldr	r3, .L899+4
 21896 0040 0022     		movs	r2, #0
 21897 0042 1A70     		strb	r2, [r3]
3396:..\src/command_processing.c ****             interrupt_manager();
 21898              		.loc 1 3396 0
 21899 0044 FFF7FEFF 		bl	interrupt_manager
 21900              	.L894:
3397:..\src/command_processing.c ****         }
3398:..\src/command_processing.c **** 
3399:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 21901              		.loc 1 3399 0
 21902 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 21903 004c 0346     		mov	r3, r0
 21904 004e 7B61     		str	r3, [r7, #20]
3400:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 21905              		.loc 1 3400 0
 21906 0050 BA69     		ldr	r2, [r7, #24]
 21907 0052 7B69     		ldr	r3, [r7, #20]
 21908 0054 D31A     		subs	r3, r2, r3
 21909 0056 114A     		ldr	r2, .L899+8
 21910 0058 9342     		cmp	r3, r2
 21911 005a 05D9     		bls	.L893
3401:..\src/command_processing.c ****             read_flag = FALSE;
 21912              		.loc 1 3401 0
 21913 005c 0023     		movs	r3, #0
 21914 005e 7B77     		strb	r3, [r7, #29]
3402:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 21915              		.loc 1 3402 0
 21916 0060 0F4B     		ldr	r3, .L899+12
 21917 0062 0022     		movs	r2, #0
 21918 0064 1A70     		strb	r2, [r3]
3403:..\src/command_processing.c ****             break;
 21919              		.loc 1 3403 0
 21920 0066 03E0     		b	.L895
 21921              	.L893:
3393:..\src/command_processing.c ****         if (interrupt_flag){
 21922              		.loc 1 3393 0
 21923 0068 0E4B     		ldr	r3, .L899+16
 21924 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21925 006c 8E2B     		cmp	r3, #142
 21926 006e E2D1     		bne	.L896
 21927              	.L895:
3404:..\src/command_processing.c ****         }
3405:..\src/command_processing.c ****     }
3406:..\src/command_processing.c **** 
3407:..\src/command_processing.c ****     if (read_flag) {
 21928              		.loc 1 3407 0
 21929 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 21930 0072 002B     		cmp	r3, #0
 21931 0074 08D0     		beq	.L897
3408:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 21932              		.loc 1 3408 0
 21933 0076 0B4B     		ldr	r3, .L899+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 486


 21934 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 21935 007a 1B02     		lsls	r3, r3, #8
 21936 007c 1AB2     		sxth	r2, r3
 21937 007e 094B     		ldr	r3, .L899+16
 21938 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 21939 0082 1BB2     		sxth	r3, r3
 21940 0084 1343     		orrs	r3, r3, r2
 21941 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 21942              	.L897:
3409:..\src/command_processing.c ****     }
3410:..\src/command_processing.c ****     
3411:..\src/command_processing.c ****     return curr_diff;
 21943              		.loc 1 3411 0
 21944 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3412:..\src/command_processing.c **** }
 21945              		.loc 1 3412 0
 21946 008c 1846     		mov	r0, r3
 21947 008e 2037     		adds	r7, r7, #32
 21948              		.cfi_def_cfa_offset 8
 21949 0090 BD46     		mov	sp, r7
 21950              		.cfi_def_cfa_register 13
 21951              		@ sp needed
 21952 0092 80BD     		pop	{r7, pc}
 21953              	.L900:
 21954              		.align	2
 21955              	.L899:
 21956 0094 00000000 		.word	c_mem
 21957 0098 00000000 		.word	interrupt_flag
 21958 009c 20AA4400 		.word	4500000
 21959 00a0 00000000 		.word	master_mode
 21960 00a4 00000000 		.word	g_rx
 21961              		.cfi_endproc
 21962              	.LFE99:
 21963              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 21964              		.section	.text.cmd_set_baudrate,"ax",%progbits
 21965              		.align	2
 21966              		.global	cmd_set_baudrate
 21967              		.thumb
 21968              		.thumb_func
 21969              		.type	cmd_set_baudrate, %function
 21970              	cmd_set_baudrate:
 21971              	.LFB100:
3413:..\src/command_processing.c **** 
3414:..\src/command_processing.c **** void cmd_set_baudrate(){
 21972              		.loc 1 3414 0
 21973              		.cfi_startproc
 21974              		@ args = 0, pretend = 0, frame = 0
 21975              		@ frame_needed = 1, uses_anonymous_args = 0
 21976 0000 80B5     		push	{r7, lr}
 21977              		.cfi_def_cfa_offset 8
 21978              		.cfi_offset 7, -8
 21979              		.cfi_offset 14, -4
 21980 0002 00AF     		add	r7, sp, #0
 21981              		.cfi_def_cfa_register 7
3415:..\src/command_processing.c ****     
3416:..\src/command_processing.c ****     // Set BaudRate
3417:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 487


 21982              		.loc 1 3417 0
 21983 0004 094B     		ldr	r3, .L906
 21984 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 21985 0008 094B     		ldr	r3, .L906+4
 21986 000a 83F8AA20 		strb	r2, [r3, #170]
3418:..\src/command_processing.c ****     
3419:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 21987              		.loc 1 3419 0
 21988 000e 074B     		ldr	r3, .L906
 21989 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 21990 0012 0D2B     		cmp	r3, #13
 21991 0014 04D1     		bne	.L905
3420:..\src/command_processing.c ****         case 13:
3421:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 21992              		.loc 1 3421 0
 21993 0016 0121     		movs	r1, #1
 21994 0018 0C20     		movs	r0, #12
 21995 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3422:..\src/command_processing.c ****             break;
 21996              		.loc 1 3422 0
 21997 001e 03E0     		b	.L904
 21998              	.L905:
3423:..\src/command_processing.c ****         default:
3424:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 21999              		.loc 1 3424 0
 22000 0020 0121     		movs	r1, #1
 22001 0022 0220     		movs	r0, #2
 22002 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 22003              	.L904:
3425:..\src/command_processing.c ****     }
3426:..\src/command_processing.c **** }
 22004              		.loc 1 3426 0
 22005 0028 00BF     		nop
 22006 002a 80BD     		pop	{r7, pc}
 22007              	.L907:
 22008              		.align	2
 22009              	.L906:
 22010 002c 00000000 		.word	g_rx
 22011 0030 00000000 		.word	c_mem
 22012              		.cfi_endproc
 22013              	.LFE100:
 22014              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 22015              		.section	.text.cmd_ping,"ax",%progbits
 22016              		.align	2
 22017              		.global	cmd_ping
 22018              		.thumb
 22019              		.thumb_func
 22020              		.type	cmd_ping, %function
 22021              	cmd_ping:
 22022              	.LFB101:
3427:..\src/command_processing.c **** 
3428:..\src/command_processing.c **** void cmd_ping(){
 22023              		.loc 1 3428 0
 22024              		.cfi_startproc
 22025              		@ args = 0, pretend = 0, frame = 8
 22026              		@ frame_needed = 1, uses_anonymous_args = 0
 22027 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 488


 22028              		.cfi_def_cfa_offset 8
 22029              		.cfi_offset 7, -8
 22030              		.cfi_offset 14, -4
 22031 0002 82B0     		sub	sp, sp, #8
 22032              		.cfi_def_cfa_offset 16
 22033 0004 00AF     		add	r7, sp, #0
 22034              		.cfi_def_cfa_register 7
3429:..\src/command_processing.c **** 
3430:..\src/command_processing.c ****     uint8 packet_data[2];
3431:..\src/command_processing.c **** 
3432:..\src/command_processing.c ****     // Header
3433:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 22035              		.loc 1 3433 0
 22036 0006 0023     		movs	r3, #0
 22037 0008 3B71     		strb	r3, [r7, #4]
3434:..\src/command_processing.c ****     
3435:..\src/command_processing.c ****     // Load Payload
3436:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 22038              		.loc 1 3436 0
 22039 000a 0023     		movs	r3, #0
 22040 000c 7B71     		strb	r3, [r7, #5]
3437:..\src/command_processing.c **** 
3438:..\src/command_processing.c ****     // Send Package to uart
3439:..\src/command_processing.c ****     commWrite(packet_data, 2);
 22041              		.loc 1 3439 0
 22042 000e 3B1D     		adds	r3, r7, #4
 22043 0010 0221     		movs	r1, #2
 22044 0012 1846     		mov	r0, r3
 22045 0014 FFF7FEFF 		bl	commWrite
3440:..\src/command_processing.c **** }
 22046              		.loc 1 3440 0
 22047 0018 00BF     		nop
 22048 001a 0837     		adds	r7, r7, #8
 22049              		.cfi_def_cfa_offset 8
 22050 001c BD46     		mov	sp, r7
 22051              		.cfi_def_cfa_register 13
 22052              		@ sp needed
 22053 001e 80BD     		pop	{r7, pc}
 22054              		.cfi_endproc
 22055              	.LFE101:
 22056              		.size	cmd_ping, .-cmd_ping
 22057              		.section	.text.cmd_get_inputs,"ax",%progbits
 22058              		.align	2
 22059              		.global	cmd_get_inputs
 22060              		.thumb
 22061              		.thumb_func
 22062              		.type	cmd_get_inputs, %function
 22063              	cmd_get_inputs:
 22064              	.LFB102:
3441:..\src/command_processing.c **** 
3442:..\src/command_processing.c **** void cmd_get_inputs(){
 22065              		.loc 1 3442 0
 22066              		.cfi_startproc
 22067              		@ args = 0, pretend = 0, frame = 16
 22068              		@ frame_needed = 1, uses_anonymous_args = 0
 22069 0000 80B5     		push	{r7, lr}
 22070              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 489


 22071              		.cfi_offset 7, -8
 22072              		.cfi_offset 14, -4
 22073 0002 84B0     		sub	sp, sp, #16
 22074              		.cfi_def_cfa_offset 24
 22075 0004 00AF     		add	r7, sp, #0
 22076              		.cfi_def_cfa_register 7
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3445:..\src/command_processing.c **** 
3446:..\src/command_processing.c ****     uint8 packet_data[6]; 
3447:..\src/command_processing.c ****     int16 aux_int16;
3448:..\src/command_processing.c ****     
3449:..\src/command_processing.c ****     //Header package
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 22077              		.loc 1 3451 0
 22078 0006 8323     		movs	r3, #131
 22079 0008 3B72     		strb	r3, [r7, #8]
3452:..\src/command_processing.c ****         
3453:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 22080              		.loc 1 3453 0
 22081 000a 164B     		ldr	r3, .L910
 22082 000c 1A68     		ldr	r2, [r3]
 22083 000e 164B     		ldr	r3, .L910+4
 22084 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22085 0014 1846     		mov	r0, r3
 22086 0016 1449     		ldr	r1, .L910+4
 22087 0018 0346     		mov	r3, r0
 22088 001a 5B00     		lsls	r3, r3, #1
 22089 001c 0344     		add	r3, r3, r0
 22090 001e 1B01     		lsls	r3, r3, #4
 22091 0020 0B44     		add	r3, r3, r1
 22092 0022 03F29513 		addw	r3, r3, #405
 22093 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22094 0028 42FA03F3 		asr	r3, r2, r3
 22095 002c 1BB2     		sxth	r3, r3
 22096 002e FB80     		strh	r3, [r7, #6]	@ movhi
3454:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22097              		.loc 1 3454 0
 22098 0030 BB1D     		adds	r3, r7, #6
 22099 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22100 0034 BB72     		strb	r3, [r7, #10]
3455:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22101              		.loc 1 3455 0
 22102 0036 BB1D     		adds	r3, r7, #6
 22103 0038 0133     		adds	r3, r3, #1
 22104 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22105 003c 7B72     		strb	r3, [r7, #9]
3456:..\src/command_processing.c ****     
3457:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 22106              		.loc 1 3459 0
 22107 003e 07F10803 		add	r3, r7, #8
 22108 0042 0521     		movs	r1, #5
 22109 0044 1846     		mov	r0, r3
 22110 0046 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 490


 22111 004a 0346     		mov	r3, r0
 22112 004c 7B73     		strb	r3, [r7, #13]
3460:..\src/command_processing.c **** 
3461:..\src/command_processing.c ****     commWrite(packet_data, 6);
 22113              		.loc 1 3461 0
 22114 004e 07F10803 		add	r3, r7, #8
 22115 0052 0621     		movs	r1, #6
 22116 0054 1846     		mov	r0, r3
 22117 0056 FFF7FEFF 		bl	commWrite
3462:..\src/command_processing.c **** }
 22118              		.loc 1 3462 0
 22119 005a 00BF     		nop
 22120 005c 1037     		adds	r7, r7, #16
 22121              		.cfi_def_cfa_offset 8
 22122 005e BD46     		mov	sp, r7
 22123              		.cfi_def_cfa_register 13
 22124              		@ sp needed
 22125 0060 80BD     		pop	{r7, pc}
 22126              	.L911:
 22127 0062 00BF     		.align	2
 22128              	.L910:
 22129 0064 00000000 		.word	g_refOld
 22130 0068 00000000 		.word	g_mem
 22131              		.cfi_endproc
 22132              	.LFE102:
 22133              		.size	cmd_get_inputs, .-cmd_get_inputs
 22134              		.section	.text.cmd_store_params,"ax",%progbits
 22135              		.align	2
 22136              		.global	cmd_store_params
 22137              		.thumb
 22138              		.thumb_func
 22139              		.type	cmd_store_params, %function
 22140              	cmd_store_params:
 22141              	.LFB103:
3463:..\src/command_processing.c **** 
3464:..\src/command_processing.c **** void cmd_store_params(){
 22142              		.loc 1 3464 0
 22143              		.cfi_startproc
 22144              		@ args = 0, pretend = 0, frame = 16
 22145              		@ frame_needed = 1, uses_anonymous_args = 0
 22146 0000 80B5     		push	{r7, lr}
 22147              		.cfi_def_cfa_offset 8
 22148              		.cfi_offset 7, -8
 22149              		.cfi_offset 14, -4
 22150 0002 84B0     		sub	sp, sp, #16
 22151              		.cfi_def_cfa_offset 24
 22152 0004 00AF     		add	r7, sp, #0
 22153              		.cfi_def_cfa_register 7
3465:..\src/command_processing.c ****     
3466:..\src/command_processing.c ****     // Check input mode enabled
3467:..\src/command_processing.c ****     uint32 off_1;
3468:..\src/command_processing.c ****     float mult_1;
3469:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 22154              		.loc 1 3469 0
 22155 0006 0223     		movs	r3, #2
 22156 0008 FB73     		strb	r3, [r7, #15]
3470:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 491


3471:..\src/command_processing.c ****     uint8 CYDATA old_id;
3472:..\src/command_processing.c ****     
3473:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 22157              		.loc 1 3473 0
 22158 000a 674B     		ldr	r3, .L923
 22159 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 22160 0010 002B     		cmp	r3, #0
 22161 0012 7CD1     		bne	.L913
3474:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 22162              		.loc 1 3474 0
 22163 0014 644B     		ldr	r3, .L923
 22164 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22165 001a 1946     		mov	r1, r3
 22166 001c 624A     		ldr	r2, .L923
 22167 001e 0B46     		mov	r3, r1
 22168 0020 5B00     		lsls	r3, r3, #1
 22169 0022 0B44     		add	r3, r3, r1
 22170 0024 1B01     		lsls	r3, r3, #4
 22171 0026 1344     		add	r3, r3, r2
 22172 0028 03F5CC73 		add	r3, r3, #408
 22173 002c 1B68     		ldr	r3, [r3]
 22174 002e BB60     		str	r3, [r7, #8]
3475:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 22175              		.loc 1 3475 0
 22176 0030 5D4B     		ldr	r3, .L923
 22177 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22178 0036 1946     		mov	r1, r3
 22179 0038 5B4A     		ldr	r2, .L923
 22180 003a 0B46     		mov	r3, r1
 22181 003c 5B00     		lsls	r3, r3, #1
 22182 003e 0B44     		add	r3, r3, r1
 22183 0040 1B01     		lsls	r3, r3, #4
 22184 0042 1344     		add	r3, r3, r2
 22185 0044 03F5D273 		add	r3, r3, #420
 22186 0048 1B68     		ldr	r3, [r3]	@ float
 22187 004a 7B60     		str	r3, [r7, #4]	@ float
3476:..\src/command_processing.c **** 
3477:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 22188              		.loc 1 3477 0
 22189 004c 574B     		ldr	r3, .L923+4
 22190 004e 1B68     		ldr	r3, [r3]
 22191 0050 1846     		mov	r0, r3
 22192 0052 FFF7FEFF 		bl	__aeabi_i2f
 22193 0056 0346     		mov	r3, r0
 22194 0058 7968     		ldr	r1, [r7, #4]	@ float
 22195 005a 1846     		mov	r0, r3
 22196 005c FFF7FEFF 		bl	__aeabi_fdiv
 22197 0060 0346     		mov	r3, r0
 22198 0062 1846     		mov	r0, r3
 22199 0064 FFF7FEFF 		bl	__aeabi_f2iz
 22200 0068 0246     		mov	r2, r0
 22201 006a 504B     		ldr	r3, .L923+4
 22202 006c 1A60     		str	r2, [r3]
3478:..\src/command_processing.c **** 
3479:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 22203              		.loc 1 3479 0
 22204 006e 4F4B     		ldr	r3, .L923+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 492


 22205 0070 1B68     		ldr	r3, [r3]
 22206 0072 1846     		mov	r0, r3
 22207 0074 FFF7FEFF 		bl	__aeabi_i2f
 22208 0078 4B4B     		ldr	r3, .L923
 22209 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22210 007e 1946     		mov	r1, r3
 22211 0080 4B4A     		ldr	r2, .L923+8
 22212 0082 0B46     		mov	r3, r1
 22213 0084 5B00     		lsls	r3, r3, #1
 22214 0086 0B44     		add	r3, r3, r1
 22215 0088 1B01     		lsls	r3, r3, #4
 22216 008a 1344     		add	r3, r3, r2
 22217 008c 03F5D273 		add	r3, r3, #420
 22218 0090 1B68     		ldr	r3, [r3]	@ float
 22219 0092 1946     		mov	r1, r3
 22220 0094 FFF7FEFF 		bl	__aeabi_fmul
 22221 0098 0346     		mov	r3, r0
 22222 009a 1846     		mov	r0, r3
 22223 009c FFF7FEFF 		bl	__aeabi_f2iz
 22224 00a0 0246     		mov	r2, r0
 22225 00a2 424B     		ldr	r3, .L923+4
 22226 00a4 1A60     		str	r2, [r3]
3480:..\src/command_processing.c **** 
3481:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 22227              		.loc 1 3481 0
 22228 00a6 414B     		ldr	r3, .L923+4
 22229 00a8 1B68     		ldr	r3, [r3]
 22230 00aa 1846     		mov	r0, r3
 22231 00ac 3E4B     		ldr	r3, .L923
 22232 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22233 00b2 1946     		mov	r1, r3
 22234 00b4 3E4A     		ldr	r2, .L923+8
 22235 00b6 0B46     		mov	r3, r1
 22236 00b8 5B00     		lsls	r3, r3, #1
 22237 00ba 0B44     		add	r3, r3, r1
 22238 00bc 1B01     		lsls	r3, r3, #4
 22239 00be 1344     		add	r3, r3, r2
 22240 00c0 03F5CC73 		add	r3, r3, #408
 22241 00c4 1B68     		ldr	r3, [r3]
 22242 00c6 1A46     		mov	r2, r3
 22243 00c8 BB68     		ldr	r3, [r7, #8]
 22244 00ca D31A     		subs	r3, r2, r3
 22245 00cc 0344     		add	r3, r3, r0
 22246 00ce 1A46     		mov	r2, r3
 22247 00d0 364B     		ldr	r3, .L923+4
 22248 00d2 1A60     		str	r2, [r3]
3482:..\src/command_processing.c ****         
3483:..\src/command_processing.c ****         // Check position Limits
3484:..\src/command_processing.c **** 
3485:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 22249              		.loc 1 3485 0
 22250 00d4 344B     		ldr	r3, .L923
 22251 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 22252 00da 002B     		cmp	r3, #0
 22253 00dc 17D0     		beq	.L913
3486:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 22254              		.loc 1 3486 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 493


 22255 00de 334B     		ldr	r3, .L923+4
 22256 00e0 1A68     		ldr	r2, [r3]
 22257 00e2 314B     		ldr	r3, .L923
 22258 00e4 D3F8E430 		ldr	r3, [r3, #228]
 22259 00e8 9A42     		cmp	r2, r3
 22260 00ea 04DA     		bge	.L914
3487:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 22261              		.loc 1 3487 0
 22262 00ec 2E4B     		ldr	r3, .L923
 22263 00ee D3F8E430 		ldr	r3, [r3, #228]
 22264 00f2 2E4A     		ldr	r2, .L923+4
 22265 00f4 1360     		str	r3, [r2]
 22266              	.L914:
3488:..\src/command_processing.c **** 
3489:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 22267              		.loc 1 3489 0
 22268 00f6 2D4B     		ldr	r3, .L923+4
 22269 00f8 1A68     		ldr	r2, [r3]
 22270 00fa 2B4B     		ldr	r3, .L923
 22271 00fc D3F8E830 		ldr	r3, [r3, #232]
 22272 0100 9A42     		cmp	r2, r3
 22273 0102 04DD     		ble	.L913
3490:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 22274              		.loc 1 3490 0
 22275 0104 284B     		ldr	r3, .L923
 22276 0106 D3F8E830 		ldr	r3, [r3, #232]
 22277 010a 284A     		ldr	r2, .L923+4
 22278 010c 1360     		str	r3, [r2]
 22279              	.L913:
3491:..\src/command_processing.c ****         }
3492:..\src/command_processing.c ****     }
3493:..\src/command_processing.c ****     
3494:..\src/command_processing.c ****     // If SD is used, create new param and data file
3495:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 22280              		.loc 1 3495 0
 22281 010e 264B     		ldr	r3, .L923
 22282 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 22283 0114 012B     		cmp	r3, #1
 22284 0116 06D1     		bne	.L915
3496:..\src/command_processing.c ****         FS_FClose(pFile);
 22285              		.loc 1 3496 0
 22286 0118 264B     		ldr	r3, .L923+12
 22287 011a 1B68     		ldr	r3, [r3]
 22288 011c 1846     		mov	r0, r3
 22289 011e FFF7FEFF 		bl	FS_FClose
3497:..\src/command_processing.c ****         
3498:..\src/command_processing.c ****         InitSD_FS();
 22290              		.loc 1 3498 0
 22291 0122 FFF7FEFF 		bl	InitSD_FS
 22292              	.L915:
3499:..\src/command_processing.c ****     }
3500:..\src/command_processing.c ****    
3501:..\src/command_processing.c ****     // Store params 
3502:..\src/command_processing.c **** 
3503:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 22293              		.loc 1 3503 0
 22294 0126 204B     		ldr	r3, .L923
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 494


 22295 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 22296 012c 204B     		ldr	r3, .L923+8
 22297 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 22298 0132 9A42     		cmp	r2, r3
 22299 0134 21D0     		beq	.L916
3504:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 22300              		.loc 1 3504 0
 22301 0136 1C4B     		ldr	r3, .L923
 22302 0138 93F8A030 		ldrb	r3, [r3, #160]
 22303 013c FB70     		strb	r3, [r7, #3]
3505:..\src/command_processing.c ****         if(memStore(0)) {
 22304              		.loc 1 3505 0
 22305 013e 0020     		movs	r0, #0
 22306 0140 FFF7FEFF 		bl	memStore
 22307 0144 0346     		mov	r3, r0
 22308 0146 002B     		cmp	r3, #0
 22309 0148 0BD0     		beq	.L917
3506:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 22310              		.loc 1 3506 0
 22311 014a 0123     		movs	r3, #1
 22312 014c 3B70     		strb	r3, [r7]
3507:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 22313              		.loc 1 3507 0
 22314 014e 0123     		movs	r3, #1
 22315 0150 7B70     		strb	r3, [r7, #1]
3508:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 22316              		.loc 1 3508 0
 22317 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22318 0154 99B2     		uxth	r1, r3
 22319 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22320 0158 3B46     		mov	r3, r7
 22321 015a 1846     		mov	r0, r3
 22322 015c FFF7FEFF 		bl	commWrite_old_id
 22323 0160 18E0     		b	.L919
 22324              	.L917:
3509:..\src/command_processing.c ****         }    
3510:..\src/command_processing.c ****         else{
3511:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 22325              		.loc 1 3511 0
 22326 0162 0023     		movs	r3, #0
 22327 0164 3B70     		strb	r3, [r7]
3512:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 22328              		.loc 1 3512 0
 22329 0166 0023     		movs	r3, #0
 22330 0168 7B70     		strb	r3, [r7, #1]
3513:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 22331              		.loc 1 3513 0
 22332 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22333 016c 99B2     		uxth	r1, r3
 22334 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22335 0170 3B46     		mov	r3, r7
 22336 0172 1846     		mov	r0, r3
 22337 0174 FFF7FEFF 		bl	commWrite_old_id
 22338 0178 0CE0     		b	.L919
 22339              	.L916:
3514:..\src/command_processing.c ****         }
3515:..\src/command_processing.c ****     }    
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 495


3516:..\src/command_processing.c ****     else {
3517:..\src/command_processing.c ****         if(memStore(0))
 22340              		.loc 1 3517 0
 22341 017a 0020     		movs	r0, #0
 22342 017c FFF7FEFF 		bl	memStore
 22343 0180 0346     		mov	r3, r0
 22344 0182 002B     		cmp	r3, #0
 22345 0184 03D0     		beq	.L920
3518:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 22346              		.loc 1 3518 0
 22347 0186 0120     		movs	r0, #1
 22348 0188 FFF7FEFF 		bl	sendAcknowledgment
 22349 018c 02E0     		b	.L919
 22350              	.L920:
3519:..\src/command_processing.c ****         else
3520:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 22351              		.loc 1 3520 0
 22352 018e 0020     		movs	r0, #0
 22353 0190 FFF7FEFF 		bl	sendAcknowledgment
 22354              	.L919:
3521:..\src/command_processing.c ****     }
3522:..\src/command_processing.c ****     
3523:..\src/command_processing.c ****     // FW reset (if necessary)
3524:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 22355              		.loc 1 3524 0
 22356 0194 084B     		ldr	r3, .L923+16
 22357 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22358 0198 012B     		cmp	r3, #1
 22359 019a 01D1     		bne	.L922
3525:..\src/command_processing.c ****         CySoftwareReset();
 22360              		.loc 1 3525 0
 22361 019c FFF7FEFF 		bl	CySoftwareReset
 22362              	.L922:
3526:..\src/command_processing.c ****     }
3527:..\src/command_processing.c **** }
 22363              		.loc 1 3527 0
 22364 01a0 00BF     		nop
 22365 01a2 1037     		adds	r7, r7, #16
 22366              		.cfi_def_cfa_offset 8
 22367 01a4 BD46     		mov	sp, r7
 22368              		.cfi_def_cfa_register 13
 22369              		@ sp needed
 22370 01a6 80BD     		pop	{r7, pc}
 22371              	.L924:
 22372              		.align	2
 22373              	.L923:
 22374 01a8 00000000 		.word	c_mem
 22375 01ac 00000000 		.word	g_refNew
 22376 01b0 00000000 		.word	g_mem
 22377 01b4 00000000 		.word	pFile
 22378 01b8 00000000 		.word	reset_PSoC_flag
 22379              		.cfi_endproc
 22380              	.LFE103:
 22381              		.size	cmd_store_params, .-cmd_store_params
 22382              		.section	.text.cmd_get_emg,"ax",%progbits
 22383              		.align	2
 22384              		.global	cmd_get_emg
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 496


 22385              		.thumb
 22386              		.thumb_func
 22387              		.type	cmd_get_emg, %function
 22388              	cmd_get_emg:
 22389              	.LFB104:
3528:..\src/command_processing.c **** 
3529:..\src/command_processing.c **** void cmd_get_emg(){
 22390              		.loc 1 3529 0
 22391              		.cfi_startproc
 22392              		@ args = 0, pretend = 0, frame = 16
 22393              		@ frame_needed = 1, uses_anonymous_args = 0
 22394 0000 80B5     		push	{r7, lr}
 22395              		.cfi_def_cfa_offset 8
 22396              		.cfi_offset 7, -8
 22397              		.cfi_offset 14, -4
 22398 0002 84B0     		sub	sp, sp, #16
 22399              		.cfi_def_cfa_offset 24
 22400 0004 00AF     		add	r7, sp, #0
 22401              		.cfi_def_cfa_register 7
3530:..\src/command_processing.c ****     
3531:..\src/command_processing.c ****     uint8 packet_data[6];
3532:..\src/command_processing.c ****     int16 aux_int16;
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     // Header        
3535:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 22402              		.loc 1 3535 0
 22403 0006 8823     		movs	r3, #136
 22404 0008 3B72     		strb	r3, [r7, #8]
3536:..\src/command_processing.c ****     
3537:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 22405              		.loc 1 3537 0
 22406 000a 144B     		ldr	r3, .L926
 22407 000c 1B68     		ldr	r3, [r3]
 22408 000e 1BB2     		sxth	r3, r3
 22409 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3538:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22410              		.loc 1 3538 0
 22411 0012 BB1D     		adds	r3, r7, #6
 22412 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22413 0016 BB72     		strb	r3, [r7, #10]
3539:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22414              		.loc 1 3539 0
 22415 0018 BB1D     		adds	r3, r7, #6
 22416 001a 0133     		adds	r3, r3, #1
 22417 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22418 001e 7B72     		strb	r3, [r7, #9]
3540:..\src/command_processing.c ****     
3541:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 22419              		.loc 1 3541 0
 22420 0020 0E4B     		ldr	r3, .L926
 22421 0022 5B68     		ldr	r3, [r3, #4]
 22422 0024 1BB2     		sxth	r3, r3
 22423 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3542:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22424              		.loc 1 3542 0
 22425 0028 BB1D     		adds	r3, r7, #6
 22426 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 497


 22427 002c 3B73     		strb	r3, [r7, #12]
3543:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22428              		.loc 1 3543 0
 22429 002e BB1D     		adds	r3, r7, #6
 22430 0030 0133     		adds	r3, r3, #1
 22431 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22432 0034 FB72     		strb	r3, [r7, #11]
3544:..\src/command_processing.c **** 
3545:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 22433              		.loc 1 3545 0
 22434 0036 07F10803 		add	r3, r7, #8
 22435 003a 0521     		movs	r1, #5
 22436 003c 1846     		mov	r0, r3
 22437 003e FFF7FEFF 		bl	LCRChecksum
 22438 0042 0346     		mov	r3, r0
 22439 0044 7B73     		strb	r3, [r7, #13]
3546:..\src/command_processing.c **** 
3547:..\src/command_processing.c ****     commWrite(packet_data, 6);
 22440              		.loc 1 3547 0
 22441 0046 07F10803 		add	r3, r7, #8
 22442 004a 0621     		movs	r1, #6
 22443 004c 1846     		mov	r0, r3
 22444 004e FFF7FEFF 		bl	commWrite
3548:..\src/command_processing.c **** 
3549:..\src/command_processing.c **** }
 22445              		.loc 1 3549 0
 22446 0052 00BF     		nop
 22447 0054 1037     		adds	r7, r7, #16
 22448              		.cfi_def_cfa_offset 8
 22449 0056 BD46     		mov	sp, r7
 22450              		.cfi_def_cfa_register 13
 22451              		@ sp needed
 22452 0058 80BD     		pop	{r7, pc}
 22453              	.L927:
 22454 005a 00BF     		.align	2
 22455              	.L926:
 22456 005c 00000000 		.word	g_emg_measOld
 22457              		.cfi_endproc
 22458              	.LFE104:
 22459              		.size	cmd_get_emg, .-cmd_get_emg
 22460              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 22461              		.align	2
 22462              		.global	cmd_get_imu_readings
 22463              		.thumb
 22464              		.thumb_func
 22465              		.type	cmd_get_imu_readings, %function
 22466              	cmd_get_imu_readings:
 22467              	.LFB105:
3550:..\src/command_processing.c **** 
3551:..\src/command_processing.c **** void cmd_get_imu_readings(){
 22468              		.loc 1 3551 0
 22469              		.cfi_startproc
 22470              		@ args = 0, pretend = 0, frame = 400
 22471              		@ frame_needed = 1, uses_anonymous_args = 0
 22472 0000 90B5     		push	{r4, r7, lr}
 22473              		.cfi_def_cfa_offset 12
 22474              		.cfi_offset 4, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 498


 22475              		.cfi_offset 7, -8
 22476              		.cfi_offset 14, -4
 22477 0002 E5B0     		sub	sp, sp, #404
 22478              		.cfi_def_cfa_offset 416
 22479 0004 00AF     		add	r7, sp, #0
 22480              		.cfi_def_cfa_register 7
3552:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3553:..\src/command_processing.c ****     
3554:..\src/command_processing.c ****     uint8 k_imu;
3555:..\src/command_processing.c ****     uint16 c = 1;
 22481              		.loc 1 3555 0
 22482 0006 0123     		movs	r3, #1
 22483 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3556:..\src/command_processing.c ****     uint8 k = 0;
 22484              		.loc 1 3556 0
 22485 000c 0023     		movs	r3, #0
 22486 000e 87F88B31 		strb	r3, [r7, #395]
3557:..\src/command_processing.c ****     uint16 gl_c = 1;
 22487              		.loc 1 3557 0
 22488 0012 0123     		movs	r3, #1
 22489 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3558:..\src/command_processing.c ****     int16 aux_int16;
3559:..\src/command_processing.c ****     float aux_float;
3560:..\src/command_processing.c ****     
3561:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3562:..\src/command_processing.c ****     uint8 packet_data[350];
3563:..\src/command_processing.c ****     uint8 single_packet[32];
3564:..\src/command_processing.c ****     
3565:..\src/command_processing.c ****     //Header package 
3566:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 22490              		.loc 1 3566 0
 22491 0018 07F12003 		add	r3, r7, #32
 22492 001c A122     		movs	r2, #161
 22493 001e 1A70     		strb	r2, [r3]
3567:..\src/command_processing.c ****  
3568:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 22494              		.loc 1 3568 0
 22495 0020 0023     		movs	r3, #0
 22496 0022 87F88F31 		strb	r3, [r7, #399]
 22497 0026 82E2     		b	.L929
 22498              	.L945:
3569:..\src/command_processing.c ****     {	
3570:..\src/command_processing.c ****             
3571:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 22499              		.loc 1 3571 0
 22500 0028 3B46     		mov	r3, r7
 22501 002a 3A22     		movs	r2, #58
 22502 002c 1A70     		strb	r2, [r3]
3572:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 22503              		.loc 1 3572 0
 22504 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22505 0032 DB4A     		ldr	r2, .L946
 22506 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22507 0036 1946     		mov	r1, r3
 22508 0038 DA4A     		ldr	r2, .L946+4
 22509 003a 0B46     		mov	r3, r1
 22510 003c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 499


 22511 003e 0B44     		add	r3, r3, r1
 22512 0040 1344     		add	r3, r3, r2
 22513 0042 03F20223 		addw	r3, r3, #514
 22514 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22515 0048 002B     		cmp	r3, #0
 22516 004a 5DD0     		beq	.L930
3573:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 22517              		.loc 1 3573 0
 22518 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22519 0050 D549     		ldr	r1, .L946+8
 22520 0052 1346     		mov	r3, r2
 22521 0054 9B00     		lsls	r3, r3, #2
 22522 0056 1344     		add	r3, r3, r2
 22523 0058 DB00     		lsls	r3, r3, #3
 22524 005a 0B44     		add	r3, r3, r1
 22525 005c 0233     		adds	r3, r3, #2
 22526 005e B3F90030 		ldrsh	r3, [r3]
 22527 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3574:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22528              		.loc 1 3574 0
 22529 0066 B7F88C31 		ldrh	r3, [r7, #396]
 22530 006a 0133     		adds	r3, r3, #1
 22531 006c 07F5C372 		add	r2, r7, #390
 22532 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22533 0072 3A46     		mov	r2, r7
 22534 0074 D154     		strb	r1, [r2, r3]
3575:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22535              		.loc 1 3575 0
 22536 0076 B7F88C21 		ldrh	r2, [r7, #396]
 22537 007a 07F5C373 		add	r3, r7, #390
 22538 007e 0133     		adds	r3, r3, #1
 22539 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22540 0082 3B46     		mov	r3, r7
 22541 0084 9954     		strb	r1, [r3, r2]
3576:..\src/command_processing.c **** 
3577:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 22542              		.loc 1 3577 0
 22543 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22544 008a C749     		ldr	r1, .L946+8
 22545 008c 1346     		mov	r3, r2
 22546 008e 9B00     		lsls	r3, r3, #2
 22547 0090 1344     		add	r3, r3, r2
 22548 0092 DB00     		lsls	r3, r3, #3
 22549 0094 0B44     		add	r3, r3, r1
 22550 0096 0433     		adds	r3, r3, #4
 22551 0098 B3F90030 		ldrsh	r3, [r3]
 22552 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3578:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22553              		.loc 1 3578 0
 22554 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 22555 00a4 0333     		adds	r3, r3, #3
 22556 00a6 07F5C372 		add	r2, r7, #390
 22557 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22558 00ac 3A46     		mov	r2, r7
 22559 00ae D154     		strb	r1, [r2, r3]
3579:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22560              		.loc 1 3579 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 500


 22561 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 22562 00b4 9A1C     		adds	r2, r3, #2
 22563 00b6 07F5C373 		add	r3, r7, #390
 22564 00ba 0133     		adds	r3, r3, #1
 22565 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22566 00be 3B46     		mov	r3, r7
 22567 00c0 9954     		strb	r1, [r3, r2]
3580:..\src/command_processing.c **** 
3581:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 22568              		.loc 1 3581 0
 22569 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22570 00c6 B849     		ldr	r1, .L946+8
 22571 00c8 1346     		mov	r3, r2
 22572 00ca 9B00     		lsls	r3, r3, #2
 22573 00cc 1344     		add	r3, r3, r2
 22574 00ce DB00     		lsls	r3, r3, #3
 22575 00d0 0B44     		add	r3, r3, r1
 22576 00d2 0633     		adds	r3, r3, #6
 22577 00d4 B3F90030 		ldrsh	r3, [r3]
 22578 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3582:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22579              		.loc 1 3582 0
 22580 00dc B7F88C31 		ldrh	r3, [r7, #396]
 22581 00e0 0533     		adds	r3, r3, #5
 22582 00e2 07F5C372 		add	r2, r7, #390
 22583 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22584 00e8 3A46     		mov	r2, r7
 22585 00ea D154     		strb	r1, [r2, r3]
3583:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22586              		.loc 1 3583 0
 22587 00ec B7F88C31 		ldrh	r3, [r7, #396]
 22588 00f0 1A1D     		adds	r2, r3, #4
 22589 00f2 07F5C373 		add	r3, r7, #390
 22590 00f6 0133     		adds	r3, r3, #1
 22591 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22592 00fa 3B46     		mov	r3, r7
 22593 00fc 9954     		strb	r1, [r3, r2]
3584:..\src/command_processing.c **** 
3585:..\src/command_processing.c ****             c = c + 6;
 22594              		.loc 1 3585 0
 22595 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22596 0102 0633     		adds	r3, r3, #6
 22597 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22598              	.L930:
3586:..\src/command_processing.c ****         }
3587:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 22599              		.loc 1 3587 0
 22600 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22601 010c A44A     		ldr	r2, .L946
 22602 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22603 0110 1946     		mov	r1, r3
 22604 0112 A44A     		ldr	r2, .L946+4
 22605 0114 0B46     		mov	r3, r1
 22606 0116 9B00     		lsls	r3, r3, #2
 22607 0118 0B44     		add	r3, r3, r1
 22608 011a 1344     		add	r3, r3, r2
 22609 011c 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 501


 22610 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22611 0122 002B     		cmp	r3, #0
 22612 0124 5DD0     		beq	.L931
3588:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 22613              		.loc 1 3588 0
 22614 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22615 012a 9F49     		ldr	r1, .L946+8
 22616 012c 1346     		mov	r3, r2
 22617 012e 9B00     		lsls	r3, r3, #2
 22618 0130 1344     		add	r3, r3, r2
 22619 0132 DB00     		lsls	r3, r3, #3
 22620 0134 0B44     		add	r3, r3, r1
 22621 0136 0833     		adds	r3, r3, #8
 22622 0138 B3F90030 		ldrsh	r3, [r3]
 22623 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3589:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22624              		.loc 1 3589 0
 22625 0140 B7F88C31 		ldrh	r3, [r7, #396]
 22626 0144 0133     		adds	r3, r3, #1
 22627 0146 07F5C372 		add	r2, r7, #390
 22628 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22629 014c 3A46     		mov	r2, r7
 22630 014e D154     		strb	r1, [r2, r3]
3590:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22631              		.loc 1 3590 0
 22632 0150 B7F88C21 		ldrh	r2, [r7, #396]
 22633 0154 07F5C373 		add	r3, r7, #390
 22634 0158 0133     		adds	r3, r3, #1
 22635 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22636 015c 3B46     		mov	r3, r7
 22637 015e 9954     		strb	r1, [r3, r2]
3591:..\src/command_processing.c **** 
3592:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 22638              		.loc 1 3592 0
 22639 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22640 0164 9049     		ldr	r1, .L946+8
 22641 0166 1346     		mov	r3, r2
 22642 0168 9B00     		lsls	r3, r3, #2
 22643 016a 1344     		add	r3, r3, r2
 22644 016c DB00     		lsls	r3, r3, #3
 22645 016e 0B44     		add	r3, r3, r1
 22646 0170 0A33     		adds	r3, r3, #10
 22647 0172 B3F90030 		ldrsh	r3, [r3]
 22648 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3593:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22649              		.loc 1 3593 0
 22650 017a B7F88C31 		ldrh	r3, [r7, #396]
 22651 017e 0333     		adds	r3, r3, #3
 22652 0180 07F5C372 		add	r2, r7, #390
 22653 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22654 0186 3A46     		mov	r2, r7
 22655 0188 D154     		strb	r1, [r2, r3]
3594:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22656              		.loc 1 3594 0
 22657 018a B7F88C31 		ldrh	r3, [r7, #396]
 22658 018e 9A1C     		adds	r2, r3, #2
 22659 0190 07F5C373 		add	r3, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 502


 22660 0194 0133     		adds	r3, r3, #1
 22661 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22662 0198 3B46     		mov	r3, r7
 22663 019a 9954     		strb	r1, [r3, r2]
3595:..\src/command_processing.c **** 
3596:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 22664              		.loc 1 3596 0
 22665 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22666 01a0 8149     		ldr	r1, .L946+8
 22667 01a2 1346     		mov	r3, r2
 22668 01a4 9B00     		lsls	r3, r3, #2
 22669 01a6 1344     		add	r3, r3, r2
 22670 01a8 DB00     		lsls	r3, r3, #3
 22671 01aa 0B44     		add	r3, r3, r1
 22672 01ac 0C33     		adds	r3, r3, #12
 22673 01ae B3F90030 		ldrsh	r3, [r3]
 22674 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3597:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22675              		.loc 1 3597 0
 22676 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 22677 01ba 0533     		adds	r3, r3, #5
 22678 01bc 07F5C372 		add	r2, r7, #390
 22679 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22680 01c2 3A46     		mov	r2, r7
 22681 01c4 D154     		strb	r1, [r2, r3]
3598:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22682              		.loc 1 3598 0
 22683 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 22684 01ca 1A1D     		adds	r2, r3, #4
 22685 01cc 07F5C373 		add	r3, r7, #390
 22686 01d0 0133     		adds	r3, r3, #1
 22687 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22688 01d4 3B46     		mov	r3, r7
 22689 01d6 9954     		strb	r1, [r3, r2]
3599:..\src/command_processing.c **** 
3600:..\src/command_processing.c ****             c = c + 6;
 22690              		.loc 1 3600 0
 22691 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22692 01dc 0633     		adds	r3, r3, #6
 22693 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22694              	.L931:
3601:..\src/command_processing.c ****         }
3602:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 22695              		.loc 1 3602 0
 22696 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22697 01e6 6E4A     		ldr	r2, .L946
 22698 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22699 01ea 1946     		mov	r1, r3
 22700 01ec 6D4A     		ldr	r2, .L946+4
 22701 01ee 0B46     		mov	r3, r1
 22702 01f0 9B00     		lsls	r3, r3, #2
 22703 01f2 0B44     		add	r3, r3, r1
 22704 01f4 1344     		add	r3, r3, r2
 22705 01f6 03F50173 		add	r3, r3, #516
 22706 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22707 01fc 002B     		cmp	r3, #0
 22708 01fe 5DD0     		beq	.L932
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 503


3603:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 22709              		.loc 1 3603 0
 22710 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22711 0204 6849     		ldr	r1, .L946+8
 22712 0206 1346     		mov	r3, r2
 22713 0208 9B00     		lsls	r3, r3, #2
 22714 020a 1344     		add	r3, r3, r2
 22715 020c DB00     		lsls	r3, r3, #3
 22716 020e 0B44     		add	r3, r3, r1
 22717 0210 0E33     		adds	r3, r3, #14
 22718 0212 B3F90030 		ldrsh	r3, [r3]
 22719 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3604:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22720              		.loc 1 3604 0
 22721 021a B7F88C31 		ldrh	r3, [r7, #396]
 22722 021e 0133     		adds	r3, r3, #1
 22723 0220 07F5C372 		add	r2, r7, #390
 22724 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22725 0226 3A46     		mov	r2, r7
 22726 0228 D154     		strb	r1, [r2, r3]
3605:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22727              		.loc 1 3605 0
 22728 022a B7F88C21 		ldrh	r2, [r7, #396]
 22729 022e 07F5C373 		add	r3, r7, #390
 22730 0232 0133     		adds	r3, r3, #1
 22731 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22732 0236 3B46     		mov	r3, r7
 22733 0238 9954     		strb	r1, [r3, r2]
3606:..\src/command_processing.c **** 
3607:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 22734              		.loc 1 3607 0
 22735 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22736 023e 5A49     		ldr	r1, .L946+8
 22737 0240 1346     		mov	r3, r2
 22738 0242 9B00     		lsls	r3, r3, #2
 22739 0244 1344     		add	r3, r3, r2
 22740 0246 DB00     		lsls	r3, r3, #3
 22741 0248 0B44     		add	r3, r3, r1
 22742 024a 1033     		adds	r3, r3, #16
 22743 024c B3F90030 		ldrsh	r3, [r3]
 22744 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3608:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22745              		.loc 1 3608 0
 22746 0254 B7F88C31 		ldrh	r3, [r7, #396]
 22747 0258 0333     		adds	r3, r3, #3
 22748 025a 07F5C372 		add	r2, r7, #390
 22749 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22750 0260 3A46     		mov	r2, r7
 22751 0262 D154     		strb	r1, [r2, r3]
3609:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22752              		.loc 1 3609 0
 22753 0264 B7F88C31 		ldrh	r3, [r7, #396]
 22754 0268 9A1C     		adds	r2, r3, #2
 22755 026a 07F5C373 		add	r3, r7, #390
 22756 026e 0133     		adds	r3, r3, #1
 22757 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22758 0272 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 504


 22759 0274 9954     		strb	r1, [r3, r2]
3610:..\src/command_processing.c **** 
3611:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 22760              		.loc 1 3611 0
 22761 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22762 027a 4B49     		ldr	r1, .L946+8
 22763 027c 1346     		mov	r3, r2
 22764 027e 9B00     		lsls	r3, r3, #2
 22765 0280 1344     		add	r3, r3, r2
 22766 0282 DB00     		lsls	r3, r3, #3
 22767 0284 0B44     		add	r3, r3, r1
 22768 0286 1233     		adds	r3, r3, #18
 22769 0288 B3F90030 		ldrsh	r3, [r3]
 22770 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3612:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22771              		.loc 1 3612 0
 22772 0290 B7F88C31 		ldrh	r3, [r7, #396]
 22773 0294 0533     		adds	r3, r3, #5
 22774 0296 07F5C372 		add	r2, r7, #390
 22775 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22776 029c 3A46     		mov	r2, r7
 22777 029e D154     		strb	r1, [r2, r3]
3613:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22778              		.loc 1 3613 0
 22779 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 22780 02a4 1A1D     		adds	r2, r3, #4
 22781 02a6 07F5C373 		add	r3, r7, #390
 22782 02aa 0133     		adds	r3, r3, #1
 22783 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22784 02ae 3B46     		mov	r3, r7
 22785 02b0 9954     		strb	r1, [r3, r2]
3614:..\src/command_processing.c **** 
3615:..\src/command_processing.c ****             c = c + 6;
 22786              		.loc 1 3615 0
 22787 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22788 02b6 0633     		adds	r3, r3, #6
 22789 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22790              	.L932:
3616:..\src/command_processing.c ****         }
3617:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 22791              		.loc 1 3617 0
 22792 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22793 02c0 374A     		ldr	r2, .L946
 22794 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22795 02c4 1946     		mov	r1, r3
 22796 02c6 374A     		ldr	r2, .L946+4
 22797 02c8 0B46     		mov	r3, r1
 22798 02ca 9B00     		lsls	r3, r3, #2
 22799 02cc 0B44     		add	r3, r3, r1
 22800 02ce 1344     		add	r3, r3, r2
 22801 02d0 03F20523 		addw	r3, r3, #517
 22802 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22803 02d6 002B     		cmp	r3, #0
 22804 02d8 00F0AF80 		beq	.L933
3618:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 22805              		.loc 1 3618 0
 22806 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 505


 22807 02e0 3149     		ldr	r1, .L946+8
 22808 02e2 1346     		mov	r3, r2
 22809 02e4 9B00     		lsls	r3, r3, #2
 22810 02e6 1344     		add	r3, r3, r2
 22811 02e8 DB00     		lsls	r3, r3, #3
 22812 02ea 0B44     		add	r3, r3, r1
 22813 02ec 1433     		adds	r3, r3, #20
 22814 02ee 1B68     		ldr	r3, [r3]	@ float
 22815 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22816              		.loc 1 3619 0
 22817 02f4 0023     		movs	r3, #0
 22818 02f6 87F88B31 		strb	r3, [r7, #395]
 22819 02fa 13E0     		b	.L934
 22820              	.L935:
3620:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 22821              		.loc 1 3620 0 discriminator 3
 22822 02fc B7F88C31 		ldrh	r3, [r7, #396]
 22823 0300 1A1D     		adds	r2, r3, #4
 22824 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22825 0306 D31A     		subs	r3, r2, r3
 22826 0308 013B     		subs	r3, r3, #1
 22827 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22828 030e 07F5C071 		add	r1, r7, #384
 22829 0312 0A44     		add	r2, r2, r1
 22830 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22831 0316 3A46     		mov	r2, r7
 22832 0318 D154     		strb	r1, [r2, r3]
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22833              		.loc 1 3619 0 discriminator 3
 22834 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22835 031e 0133     		adds	r3, r3, #1
 22836 0320 87F88B31 		strb	r3, [r7, #395]
 22837              	.L934:
3619:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22838              		.loc 1 3619 0 is_stmt 0 discriminator 1
 22839 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22840 0328 032B     		cmp	r3, #3
 22841 032a E7D9     		bls	.L935
3621:..\src/command_processing.c ****             }
3622:..\src/command_processing.c **** 
3623:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 22842              		.loc 1 3623 0 is_stmt 1
 22843 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22844 0330 1D49     		ldr	r1, .L946+8
 22845 0332 1346     		mov	r3, r2
 22846 0334 9B00     		lsls	r3, r3, #2
 22847 0336 1344     		add	r3, r3, r2
 22848 0338 DB00     		lsls	r3, r3, #3
 22849 033a 0B44     		add	r3, r3, r1
 22850 033c 1833     		adds	r3, r3, #24
 22851 033e 1B68     		ldr	r3, [r3]	@ float
 22852 0340 C7F88031 		str	r3, [r7, #384]	@ float
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22853              		.loc 1 3624 0
 22854 0344 0023     		movs	r3, #0
 22855 0346 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 506


 22856 034a 14E0     		b	.L936
 22857              	.L937:
3625:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 22858              		.loc 1 3625 0 discriminator 3
 22859 034c B7F88C31 		ldrh	r3, [r7, #396]
 22860 0350 03F10802 		add	r2, r3, #8
 22861 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22862 0358 D31A     		subs	r3, r2, r3
 22863 035a 013B     		subs	r3, r3, #1
 22864 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22865 0360 07F5C071 		add	r1, r7, #384
 22866 0364 0A44     		add	r2, r2, r1
 22867 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22868 0368 3A46     		mov	r2, r7
 22869 036a D154     		strb	r1, [r2, r3]
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22870              		.loc 1 3624 0 discriminator 3
 22871 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22872 0370 0133     		adds	r3, r3, #1
 22873 0372 87F88B31 		strb	r3, [r7, #395]
 22874              	.L936:
3624:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22875              		.loc 1 3624 0 is_stmt 0 discriminator 1
 22876 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22877 037a 032B     		cmp	r3, #3
 22878 037c E6D9     		bls	.L937
3626:..\src/command_processing.c ****             }
3627:..\src/command_processing.c **** 
3628:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 22879              		.loc 1 3628 0 is_stmt 1
 22880 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22881 0382 0949     		ldr	r1, .L946+8
 22882 0384 1346     		mov	r3, r2
 22883 0386 9B00     		lsls	r3, r3, #2
 22884 0388 1344     		add	r3, r3, r2
 22885 038a DB00     		lsls	r3, r3, #3
 22886 038c 0B44     		add	r3, r3, r1
 22887 038e 1C33     		adds	r3, r3, #28
 22888 0390 1B68     		ldr	r3, [r3]	@ float
 22889 0392 C7F88031 		str	r3, [r7, #384]	@ float
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22890              		.loc 1 3629 0
 22891 0396 0023     		movs	r3, #0
 22892 0398 87F88B31 		strb	r3, [r7, #395]
 22893 039c 1BE0     		b	.L938
 22894              	.L947:
 22895 039e 00BF     		.align	2
 22896              	.L946:
 22897 03a0 00000000 		.word	IMU_connected
 22898 03a4 00000000 		.word	c_mem
 22899 03a8 00000000 		.word	g_imu
 22900              	.L939:
3630:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 22901              		.loc 1 3630 0 discriminator 3
 22902 03ac B7F88C31 		ldrh	r3, [r7, #396]
 22903 03b0 03F10C02 		add	r2, r3, #12
 22904 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 507


 22905 03b8 D31A     		subs	r3, r2, r3
 22906 03ba 013B     		subs	r3, r3, #1
 22907 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22908 03c0 07F5C071 		add	r1, r7, #384
 22909 03c4 0A44     		add	r2, r2, r1
 22910 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22911 03c8 3A46     		mov	r2, r7
 22912 03ca D154     		strb	r1, [r2, r3]
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22913              		.loc 1 3629 0 discriminator 3
 22914 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22915 03d0 0133     		adds	r3, r3, #1
 22916 03d2 87F88B31 		strb	r3, [r7, #395]
 22917              	.L938:
3629:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22918              		.loc 1 3629 0 is_stmt 0 discriminator 1
 22919 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22920 03da 032B     		cmp	r3, #3
 22921 03dc E6D9     		bls	.L939
3631:..\src/command_processing.c ****             }
3632:..\src/command_processing.c **** 
3633:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 22922              		.loc 1 3633 0 is_stmt 1
 22923 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22924 03e2 6749     		ldr	r1, .L948
 22925 03e4 1346     		mov	r3, r2
 22926 03e6 9B00     		lsls	r3, r3, #2
 22927 03e8 1344     		add	r3, r3, r2
 22928 03ea DB00     		lsls	r3, r3, #3
 22929 03ec 0B44     		add	r3, r3, r1
 22930 03ee 2033     		adds	r3, r3, #32
 22931 03f0 1B68     		ldr	r3, [r3]	@ float
 22932 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22933              		.loc 1 3634 0
 22934 03f6 0023     		movs	r3, #0
 22935 03f8 87F88B31 		strb	r3, [r7, #395]
 22936 03fc 14E0     		b	.L940
 22937              	.L941:
3635:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 22938              		.loc 1 3635 0 discriminator 3
 22939 03fe B7F88C31 		ldrh	r3, [r7, #396]
 22940 0402 03F11002 		add	r2, r3, #16
 22941 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22942 040a D31A     		subs	r3, r2, r3
 22943 040c 013B     		subs	r3, r3, #1
 22944 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22945 0412 07F5C071 		add	r1, r7, #384
 22946 0416 0A44     		add	r2, r2, r1
 22947 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22948 041a 3A46     		mov	r2, r7
 22949 041c D154     		strb	r1, [r2, r3]
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22950              		.loc 1 3634 0 discriminator 3
 22951 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22952 0422 0133     		adds	r3, r3, #1
 22953 0424 87F88B31 		strb	r3, [r7, #395]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 508


 22954              	.L940:
3634:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22955              		.loc 1 3634 0 is_stmt 0 discriminator 1
 22956 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22957 042c 032B     		cmp	r3, #3
 22958 042e E6D9     		bls	.L941
3636:..\src/command_processing.c ****             }
3637:..\src/command_processing.c ****             c = c + 16;
 22959              		.loc 1 3637 0 is_stmt 1
 22960 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22961 0434 1033     		adds	r3, r3, #16
 22962 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22963              	.L933:
3638:..\src/command_processing.c ****         }
3639:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 22964              		.loc 1 3639 0
 22965 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22966 043e 514A     		ldr	r2, .L948+4
 22967 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22968 0442 1946     		mov	r1, r3
 22969 0444 504A     		ldr	r2, .L948+8
 22970 0446 0B46     		mov	r3, r1
 22971 0448 9B00     		lsls	r3, r3, #2
 22972 044a 0B44     		add	r3, r3, r1
 22973 044c 1344     		add	r3, r3, r2
 22974 044e 03F20623 		addw	r3, r3, #518
 22975 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22976 0454 002B     		cmp	r3, #0
 22977 0456 21D0     		beq	.L942
3640:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 22978              		.loc 1 3640 0
 22979 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22980 045c 4849     		ldr	r1, .L948
 22981 045e 1346     		mov	r3, r2
 22982 0460 9B00     		lsls	r3, r3, #2
 22983 0462 1344     		add	r3, r3, r2
 22984 0464 DB00     		lsls	r3, r3, #3
 22985 0466 0B44     		add	r3, r3, r1
 22986 0468 2433     		adds	r3, r3, #36
 22987 046a B3F90030 		ldrsh	r3, [r3]
 22988 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3641:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22989              		.loc 1 3641 0
 22990 0472 B7F88C31 		ldrh	r3, [r7, #396]
 22991 0476 0133     		adds	r3, r3, #1
 22992 0478 07F5C372 		add	r2, r7, #390
 22993 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22994 047e 3A46     		mov	r2, r7
 22995 0480 D154     		strb	r1, [r2, r3]
3642:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22996              		.loc 1 3642 0
 22997 0482 B7F88C21 		ldrh	r2, [r7, #396]
 22998 0486 07F5C373 		add	r3, r7, #390
 22999 048a 0133     		adds	r3, r3, #1
 23000 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23001 048e 3B46     		mov	r3, r7
 23002 0490 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 509


3643:..\src/command_processing.c ****             c = c + 2;
 23003              		.loc 1 3643 0
 23004 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23005 0496 0233     		adds	r3, r3, #2
 23006 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23007              	.L942:
3644:..\src/command_processing.c ****         }
3645:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 23008              		.loc 1 3645 0
 23009 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23010 04a0 384A     		ldr	r2, .L948+4
 23011 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23012 04a4 1A46     		mov	r2, r3
 23013 04a6 394B     		ldr	r3, .L948+12
 23014 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 23015 04ac 013B     		subs	r3, r3, #1
 23016 04ae 3A46     		mov	r2, r7
 23017 04b0 3A21     		movs	r1, #58
 23018 04b2 D154     		strb	r1, [r2, r3]
3646:..\src/command_processing.c ****         c = 1;
 23019              		.loc 1 3646 0
 23020 04b4 0123     		movs	r3, #1
 23021 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3647:..\src/command_processing.c ****                
3648:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 23022              		.loc 1 3648 0
 23023 04ba 0023     		movs	r3, #0
 23024 04bc 87F88B31 		strb	r3, [r7, #395]
 23025 04c0 10E0     		b	.L943
 23026              	.L944:
3649:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23027              		.loc 1 3649 0 discriminator 3
 23028 04c2 B7F88821 		ldrh	r2, [r7, #392]
 23029 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23030 04ca 1344     		add	r3, r3, r2
 23031 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23032 04d0 3946     		mov	r1, r7
 23033 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 23034 04d4 07F12002 		add	r2, r7, #32
 23035 04d8 D154     		strb	r1, [r2, r3]
3648:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23036              		.loc 1 3648 0 discriminator 3
 23037 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23038 04de 0133     		adds	r3, r3, #1
 23039 04e0 87F88B31 		strb	r3, [r7, #395]
 23040              	.L943:
3648:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23041              		.loc 1 3648 0 is_stmt 0 discriminator 1
 23042 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23043 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23044 04ec 2549     		ldr	r1, .L948+4
 23045 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 23046 04f0 1946     		mov	r1, r3
 23047 04f2 264B     		ldr	r3, .L948+12
 23048 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 23049 04f8 9A42     		cmp	r2, r3
 23050 04fa E2DB     		blt	.L944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 510


3650:..\src/command_processing.c ****         }
3651:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 23051              		.loc 1 3651 0 is_stmt 1 discriminator 2
 23052 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23053 0500 204A     		ldr	r2, .L948+4
 23054 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23055 0504 1A46     		mov	r2, r3
 23056 0506 214B     		ldr	r3, .L948+12
 23057 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 23058 050c 9AB2     		uxth	r2, r3
 23059 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 23060 0512 1344     		add	r3, r3, r2
 23061 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3652:..\src/command_processing.c ****         
3653:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 23062              		.loc 1 3653 0 discriminator 2
 23063 0518 3B46     		mov	r3, r7
 23064 051a 2022     		movs	r2, #32
 23065 051c 0021     		movs	r1, #0
 23066 051e 1846     		mov	r0, r3
 23067 0520 FFF7FEFF 		bl	memset
3568:..\src/command_processing.c ****     {	
 23068              		.loc 1 3568 0 discriminator 2
 23069 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23070 0528 0133     		adds	r3, r3, #1
 23071 052a 87F88F31 		strb	r3, [r7, #399]
 23072              	.L929:
3568:..\src/command_processing.c ****     {	
 23073              		.loc 1 3568 0 is_stmt 0 discriminator 1
 23074 052e 184B     		ldr	r3, .L948+16
 23075 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23076 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23077 0536 9A42     		cmp	r2, r3
 23078 0538 FFF476AD 		bcc	.L945
3654:..\src/command_processing.c ****         
3655:..\src/command_processing.c ****     }
3656:..\src/command_processing.c **** 
3657:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3658:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 23079              		.loc 1 3658 0 is_stmt 1
 23080 053c 154B     		ldr	r3, .L948+20
 23081 053e 1B68     		ldr	r3, [r3]
 23082 0540 5C1E     		subs	r4, r3, #1
 23083 0542 144B     		ldr	r3, .L948+20
 23084 0544 1B68     		ldr	r3, [r3]
 23085 0546 DBB2     		uxtb	r3, r3
 23086 0548 013B     		subs	r3, r3, #1
 23087 054a DAB2     		uxtb	r2, r3
 23088 054c 07F12003 		add	r3, r7, #32
 23089 0550 1146     		mov	r1, r2
 23090 0552 1846     		mov	r0, r3
 23091 0554 FFF7FEFF 		bl	LCRChecksum
 23092 0558 0346     		mov	r3, r0
 23093 055a 1A46     		mov	r2, r3
 23094 055c 07F12003 		add	r3, r7, #32
 23095 0560 1A55     		strb	r2, [r3, r4]
3659:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 511


 23096              		.loc 1 3659 0
 23097 0562 0C4B     		ldr	r3, .L948+20
 23098 0564 1B68     		ldr	r3, [r3]
 23099 0566 9AB2     		uxth	r2, r3
 23100 0568 07F12003 		add	r3, r7, #32
 23101 056c 1146     		mov	r1, r2
 23102 056e 1846     		mov	r0, r3
 23103 0570 FFF7FEFF 		bl	commWrite
3660:..\src/command_processing.c **** }
 23104              		.loc 1 3660 0
 23105 0574 00BF     		nop
 23106 0576 07F5CA77 		add	r7, r7, #404
 23107              		.cfi_def_cfa_offset 12
 23108 057a BD46     		mov	sp, r7
 23109              		.cfi_def_cfa_register 13
 23110              		@ sp needed
 23111 057c 90BD     		pop	{r4, r7, pc}
 23112              	.L949:
 23113 057e 00BF     		.align	2
 23114              	.L948:
 23115 0580 00000000 		.word	g_imu
 23116 0584 00000000 		.word	IMU_connected
 23117 0588 00000000 		.word	c_mem
 23118 058c 00000000 		.word	single_imu_size
 23119 0590 00000000 		.word	N_IMU_Connected
 23120 0594 00000000 		.word	imus_data_size
 23121              		.cfi_endproc
 23122              	.LFE105:
 23123              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 23124              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 23125              		.align	2
 23126              		.global	cmd_get_encoder_map
 23127              		.thumb
 23128              		.thumb_func
 23129              		.type	cmd_get_encoder_map, %function
 23130              	cmd_get_encoder_map:
 23131              	.LFB106:
3661:..\src/command_processing.c **** 
3662:..\src/command_processing.c **** void cmd_get_encoder_map(){
 23132              		.loc 1 3662 0
 23133              		.cfi_startproc
 23134              		@ args = 0, pretend = 0, frame = 16
 23135              		@ frame_needed = 1, uses_anonymous_args = 0
 23136 0000 90B5     		push	{r4, r7, lr}
 23137              		.cfi_def_cfa_offset 12
 23138              		.cfi_offset 4, -12
 23139              		.cfi_offset 7, -8
 23140              		.cfi_offset 14, -4
 23141 0002 85B0     		sub	sp, sp, #20
 23142              		.cfi_def_cfa_offset 32
 23143 0004 00AF     		add	r7, sp, #0
 23144              		.cfi_def_cfa_register 7
3663:..\src/command_processing.c ****     //Retrieve Encoder map
3664:..\src/command_processing.c ****     
3665:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3666:..\src/command_processing.c ****     uint8 CYDATA i, j;
3667:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 512


3668:..\src/command_processing.c ****     // Header        
3669:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 23145              		.loc 1 3669 0
 23146 0006 A323     		movs	r3, #163
 23147 0008 3B70     		strb	r3, [r7]
3670:..\src/command_processing.c ****     
3671:..\src/command_processing.c ****     // Fill payload
3672:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 23148              		.loc 1 3672 0
 23149 000a 0223     		movs	r3, #2
 23150 000c 7B70     		strb	r3, [r7, #1]
3673:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 23151              		.loc 1 3673 0
 23152 000e 0523     		movs	r3, #5
 23153 0010 BB70     		strb	r3, [r7, #2]
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23154              		.loc 1 3674 0
 23155 0012 0023     		movs	r3, #0
 23156 0014 FB73     		strb	r3, [r7, #15]
 23157 0016 23E0     		b	.L951
 23158              	.L954:
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 23159              		.loc 1 3675 0
 23160 0018 0023     		movs	r3, #0
 23161 001a BB73     		strb	r3, [r7, #14]
 23162 001c 1AE0     		b	.L952
 23163              	.L953:
3676:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 23164              		.loc 1 3676 0 discriminator 3
 23165 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23166 0020 1346     		mov	r3, r2
 23167 0022 9B00     		lsls	r3, r3, #2
 23168 0024 1344     		add	r3, r3, r2
 23169 0026 DA1C     		adds	r2, r3, #3
 23170 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23171 002a D118     		adds	r1, r2, r3
 23172 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23173 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 23174 0030 154C     		ldr	r4, .L955
 23175 0032 1346     		mov	r3, r2
 23176 0034 5B00     		lsls	r3, r3, #1
 23177 0036 1344     		add	r3, r3, r2
 23178 0038 1B01     		lsls	r3, r3, #4
 23179 003a 2344     		add	r3, r3, r4
 23180 003c 0344     		add	r3, r3, r0
 23181 003e 03F5C873 		add	r3, r3, #400
 23182 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 23183 0044 07F11003 		add	r3, r7, #16
 23184 0048 0B44     		add	r3, r3, r1
 23185 004a 03F8102C 		strb	r2, [r3, #-16]
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 23186              		.loc 1 3675 0 discriminator 3
 23187 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23188 0050 0133     		adds	r3, r3, #1
 23189 0052 BB73     		strb	r3, [r7, #14]
 23190              	.L952:
3675:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 513


 23191              		.loc 1 3675 0 is_stmt 0 discriminator 1
 23192 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23193 0056 042B     		cmp	r3, #4
 23194 0058 E1D9     		bls	.L953
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23195              		.loc 1 3674 0 is_stmt 1 discriminator 2
 23196 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23197 005c 0133     		adds	r3, r3, #1
 23198 005e FB73     		strb	r3, [r7, #15]
 23199              	.L951:
3674:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23200              		.loc 1 3674 0 is_stmt 0 discriminator 1
 23201 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23202 0062 012B     		cmp	r3, #1
 23203 0064 D8D9     		bls	.L954
3677:..\src/command_processing.c ****         }
3678:..\src/command_processing.c ****     }
3679:..\src/command_processing.c ****     
3680:..\src/command_processing.c ****     // Calculate checksum
3681:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 23204              		.loc 1 3681 0 is_stmt 1
 23205 0066 3B46     		mov	r3, r7
 23206 0068 0D21     		movs	r1, #13
 23207 006a 1846     		mov	r0, r3
 23208 006c FFF7FEFF 		bl	LCRChecksum
 23209 0070 0346     		mov	r3, r0
 23210 0072 7B73     		strb	r3, [r7, #13]
3682:..\src/command_processing.c ****     
3683:..\src/command_processing.c ****     // Send package to UART
3684:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 23211              		.loc 1 3684 0
 23212 0074 3B46     		mov	r3, r7
 23213 0076 0E21     		movs	r1, #14
 23214 0078 1846     		mov	r0, r3
 23215 007a FFF7FEFF 		bl	commWrite
3685:..\src/command_processing.c **** }
 23216              		.loc 1 3685 0
 23217 007e 00BF     		nop
 23218 0080 1437     		adds	r7, r7, #20
 23219              		.cfi_def_cfa_offset 12
 23220 0082 BD46     		mov	sp, r7
 23221              		.cfi_def_cfa_register 13
 23222              		@ sp needed
 23223 0084 90BD     		pop	{r4, r7, pc}
 23224              	.L956:
 23225 0086 00BF     		.align	2
 23226              	.L955:
 23227 0088 00000000 		.word	c_mem
 23228              		.cfi_endproc
 23229              	.LFE106:
 23230              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 23231              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 23232              		.align	2
 23233              		.global	cmd_get_encoder_raw
 23234              		.thumb
 23235              		.thumb_func
 23236              		.type	cmd_get_encoder_raw, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 514


 23237              	cmd_get_encoder_raw:
 23238              	.LFB107:
3686:..\src/command_processing.c **** 
3687:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 23239              		.loc 1 3687 0
 23240              		.cfi_startproc
 23241              		@ args = 0, pretend = 0, frame = 32
 23242              		@ frame_needed = 1, uses_anonymous_args = 0
 23243 0000 90B5     		push	{r4, r7, lr}
 23244              		.cfi_def_cfa_offset 12
 23245              		.cfi_offset 4, -12
 23246              		.cfi_offset 7, -8
 23247              		.cfi_offset 14, -4
 23248 0002 89B0     		sub	sp, sp, #36
 23249              		.cfi_def_cfa_offset 48
 23250 0004 00AF     		add	r7, sp, #0
 23251              		.cfi_def_cfa_register 7
3688:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3689:..\src/command_processing.c ****     
3690:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3691:..\src/command_processing.c ****     uint8 i, j, idx;
3692:..\src/command_processing.c ****     uint16 aux_uint16;
3693:..\src/command_processing.c ****     
3694:..\src/command_processing.c ****     //Header package 
3695:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 23252              		.loc 1 3695 0
 23253 0006 A423     		movs	r3, #164
 23254 0008 3B71     		strb	r3, [r7, #4]
3696:..\src/command_processing.c ****  
3697:..\src/command_processing.c ****     // Fill payload
3698:..\src/command_processing.c ****     idx = 0;
 23255              		.loc 1 3698 0
 23256 000a 0023     		movs	r3, #0
 23257 000c 7B77     		strb	r3, [r7, #29]
3699:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23258              		.loc 1 3699 0
 23259 000e 0023     		movs	r3, #0
 23260 0010 FB77     		strb	r3, [r7, #31]
 23261 0012 3FE0     		b	.L958
 23262              	.L962:
3700:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23263              		.loc 1 3700 0
 23264 0014 0023     		movs	r3, #0
 23265 0016 BB77     		strb	r3, [r7, #30]
 23266 0018 33E0     		b	.L959
 23267              	.L961:
3701:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23268              		.loc 1 3701 0
 23269 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23270 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 23271 001e 3048     		ldr	r0, .L963
 23272 0020 1346     		mov	r3, r2
 23273 0022 5B00     		lsls	r3, r3, #1
 23274 0024 1344     		add	r3, r3, r2
 23275 0026 1B01     		lsls	r3, r3, #4
 23276 0028 0344     		add	r3, r3, r0
 23277 002a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 515


 23278 002c 03F5C873 		add	r3, r3, #400
 23279 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23280 0032 012B     		cmp	r3, #1
 23281 0034 22D1     		bne	.L960
3702:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 23282              		.loc 1 3702 0
 23283 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23284 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 23285 003a 2A48     		ldr	r0, .L963+4
 23286 003c 1346     		mov	r3, r2
 23287 003e 9B00     		lsls	r3, r3, #2
 23288 0040 1344     		add	r3, r3, r2
 23289 0042 0B44     		add	r3, r3, r1
 23290 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 23291 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3703:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 23292              		.loc 1 3703 0
 23293 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23294 004c 5B00     		lsls	r3, r3, #1
 23295 004e 0233     		adds	r3, r3, #2
 23296 0050 BA1C     		adds	r2, r7, #2
 23297 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23298 0054 07F12001 		add	r1, r7, #32
 23299 0058 0B44     		add	r3, r3, r1
 23300 005a 03F81C2C 		strb	r2, [r3, #-28]
3704:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 23301              		.loc 1 3704 0
 23302 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23303 0060 5B00     		lsls	r3, r3, #1
 23304 0062 5A1C     		adds	r2, r3, #1
 23305 0064 BB1C     		adds	r3, r7, #2
 23306 0066 0133     		adds	r3, r3, #1
 23307 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23308 006a 07F12003 		add	r3, r7, #32
 23309 006e 1344     		add	r3, r3, r2
 23310 0070 0A46     		mov	r2, r1
 23311 0072 03F81C2C 		strb	r2, [r3, #-28]
3705:..\src/command_processing.c ****                 idx++;
 23312              		.loc 1 3705 0
 23313 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23314 0078 0133     		adds	r3, r3, #1
 23315 007a 7B77     		strb	r3, [r7, #29]
 23316              	.L960:
3700:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23317              		.loc 1 3700 0 discriminator 2
 23318 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23319 007e 0133     		adds	r3, r3, #1
 23320 0080 BB77     		strb	r3, [r7, #30]
 23321              	.L959:
3700:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23322              		.loc 1 3700 0 is_stmt 0 discriminator 1
 23323 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23324 0084 184A     		ldr	r2, .L963+8
 23325 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23326 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 23327 008a 9A42     		cmp	r2, r3
 23328 008c C5D3     		bcc	.L961
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 516


3699:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23329              		.loc 1 3699 0 is_stmt 1 discriminator 2
 23330 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23331 0090 0133     		adds	r3, r3, #1
 23332 0092 FB77     		strb	r3, [r7, #31]
 23333              	.L958:
3699:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23334              		.loc 1 3699 0 is_stmt 0 discriminator 1
 23335 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23336 0096 012B     		cmp	r3, #1
 23337 0098 BCD9     		bls	.L962
3706:..\src/command_processing.c ****             }
3707:..\src/command_processing.c ****         }
3708:..\src/command_processing.c ****     }
3709:..\src/command_processing.c **** 
3710:..\src/command_processing.c ****     // Calculate checksum
3711:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 23338              		.loc 1 3711 0 is_stmt 1
 23339 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23340 009c 5B00     		lsls	r3, r3, #1
 23341 009e 5C1C     		adds	r4, r3, #1
 23342 00a0 7B7F     		ldrb	r3, [r7, #29]
 23343 00a2 5B00     		lsls	r3, r3, #1
 23344 00a4 DBB2     		uxtb	r3, r3
 23345 00a6 0133     		adds	r3, r3, #1
 23346 00a8 DAB2     		uxtb	r2, r3
 23347 00aa 3B1D     		adds	r3, r7, #4
 23348 00ac 1146     		mov	r1, r2
 23349 00ae 1846     		mov	r0, r3
 23350 00b0 FFF7FEFF 		bl	LCRChecksum
 23351 00b4 0346     		mov	r3, r0
 23352 00b6 1A46     		mov	r2, r3
 23353 00b8 07F12003 		add	r3, r7, #32
 23354 00bc 2344     		add	r3, r3, r4
 23355 00be 03F81C2C 		strb	r2, [r3, #-28]
3712:..\src/command_processing.c ****     
3713:..\src/command_processing.c ****     // Send package to UART
3714:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 23356              		.loc 1 3714 0
 23357 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23358 00c4 0133     		adds	r3, r3, #1
 23359 00c6 9BB2     		uxth	r3, r3
 23360 00c8 5B00     		lsls	r3, r3, #1
 23361 00ca 9AB2     		uxth	r2, r3
 23362 00cc 3B1D     		adds	r3, r7, #4
 23363 00ce 1146     		mov	r1, r2
 23364 00d0 1846     		mov	r0, r3
 23365 00d2 FFF7FEFF 		bl	commWrite
3715:..\src/command_processing.c **** }
 23366              		.loc 1 3715 0
 23367 00d6 00BF     		nop
 23368 00d8 2437     		adds	r7, r7, #36
 23369              		.cfi_def_cfa_offset 12
 23370 00da BD46     		mov	sp, r7
 23371              		.cfi_def_cfa_register 13
 23372              		@ sp needed
 23373 00dc 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 517


 23374              	.L964:
 23375 00de 00BF     		.align	2
 23376              	.L963:
 23377 00e0 00000000 		.word	c_mem
 23378 00e4 00000000 		.word	Encoder_Value
 23379 00e8 00000000 		.word	N_Encoder_Line_Connected
 23380              		.cfi_endproc
 23381              	.LFE107:
 23382              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 23383              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 23384              		.align	2
 23385              		.global	cmd_get_ADC_map
 23386              		.thumb
 23387              		.thumb_func
 23388              		.type	cmd_get_ADC_map, %function
 23389              	cmd_get_ADC_map:
 23390              	.LFB108:
3716:..\src/command_processing.c **** 
3717:..\src/command_processing.c **** void cmd_get_ADC_map(){
 23391              		.loc 1 3717 0
 23392              		.cfi_startproc
 23393              		@ args = 0, pretend = 0, frame = 16
 23394              		@ frame_needed = 1, uses_anonymous_args = 0
 23395 0000 80B5     		push	{r7, lr}
 23396              		.cfi_def_cfa_offset 8
 23397              		.cfi_offset 7, -8
 23398              		.cfi_offset 14, -4
 23399 0002 84B0     		sub	sp, sp, #16
 23400              		.cfi_def_cfa_offset 24
 23401 0004 00AF     		add	r7, sp, #0
 23402              		.cfi_def_cfa_register 7
3718:..\src/command_processing.c ****     //Retrieve Encoder map
3719:..\src/command_processing.c ****     
3720:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3721:..\src/command_processing.c ****     uint8 CYDATA i;
3722:..\src/command_processing.c ****     
3723:..\src/command_processing.c ****     // Header        
3724:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 23403              		.loc 1 3724 0
 23404 0006 A523     		movs	r3, #165
 23405 0008 3B70     		strb	r3, [r7]
3725:..\src/command_processing.c ****     
3726:..\src/command_processing.c ****     // Fill payload
3727:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 23406              		.loc 1 3727 0
 23407 000a 0C23     		movs	r3, #12
 23408 000c 7B70     		strb	r3, [r7, #1]
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 23409              		.loc 1 3728 0
 23410 000e 0023     		movs	r3, #0
 23411 0010 FB73     		strb	r3, [r7, #15]
 23412 0012 0EE0     		b	.L966
 23413              	.L967:
3729:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 23414              		.loc 1 3729 0 discriminator 3
 23415 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23416 0016 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 518


 23417 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23418 001a 0F49     		ldr	r1, .L968
 23419 001c 0A44     		add	r2, r2, r1
 23420 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 23421 0022 07F11001 		add	r1, r7, #16
 23422 0026 0B44     		add	r3, r3, r1
 23423 0028 03F8102C 		strb	r2, [r3, #-16]
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 23424              		.loc 1 3728 0 discriminator 3
 23425 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23426 002e 0133     		adds	r3, r3, #1
 23427 0030 FB73     		strb	r3, [r7, #15]
 23428              	.L966:
3728:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 23429              		.loc 1 3728 0 is_stmt 0 discriminator 1
 23430 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23431 0034 0B2B     		cmp	r3, #11
 23432 0036 EDD9     		bls	.L967
3730:..\src/command_processing.c ****     }
3731:..\src/command_processing.c ****     
3732:..\src/command_processing.c ****     // Calculate checksum
3733:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 23433              		.loc 1 3733 0 is_stmt 1
 23434 0038 3B46     		mov	r3, r7
 23435 003a 0E21     		movs	r1, #14
 23436 003c 1846     		mov	r0, r3
 23437 003e FFF7FEFF 		bl	LCRChecksum
 23438 0042 0346     		mov	r3, r0
 23439 0044 BB73     		strb	r3, [r7, #14]
3734:..\src/command_processing.c ****     
3735:..\src/command_processing.c ****     // Send package to UART
3736:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 23440              		.loc 1 3736 0
 23441 0046 3B46     		mov	r3, r7
 23442 0048 0F21     		movs	r1, #15
 23443 004a 1846     		mov	r0, r3
 23444 004c FFF7FEFF 		bl	commWrite
3737:..\src/command_processing.c ****     
3738:..\src/command_processing.c **** }
 23445              		.loc 1 3738 0
 23446 0050 00BF     		nop
 23447 0052 1037     		adds	r7, r7, #16
 23448              		.cfi_def_cfa_offset 8
 23449 0054 BD46     		mov	sp, r7
 23450              		.cfi_def_cfa_register 13
 23451              		@ sp needed
 23452 0056 80BD     		pop	{r7, pc}
 23453              	.L969:
 23454              		.align	2
 23455              	.L968:
 23456 0058 00000000 		.word	c_mem
 23457              		.cfi_endproc
 23458              	.LFE108:
 23459              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 23460              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 23461              		.align	2
 23462              		.global	cmd_get_ADC_raw
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 519


 23463              		.thumb
 23464              		.thumb_func
 23465              		.type	cmd_get_ADC_raw, %function
 23466              	cmd_get_ADC_raw:
 23467              	.LFB109:
3739:..\src/command_processing.c **** 
3740:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 23468              		.loc 1 3740 0
 23469              		.cfi_startproc
 23470              		@ args = 0, pretend = 0, frame = 32
 23471              		@ frame_needed = 1, uses_anonymous_args = 0
 23472 0000 90B5     		push	{r4, r7, lr}
 23473              		.cfi_def_cfa_offset 12
 23474              		.cfi_offset 4, -12
 23475              		.cfi_offset 7, -8
 23476              		.cfi_offset 14, -4
 23477 0002 89B0     		sub	sp, sp, #36
 23478              		.cfi_def_cfa_offset 48
 23479 0004 00AF     		add	r7, sp, #0
 23480              		.cfi_def_cfa_register 7
3741:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3742:..\src/command_processing.c ****     
3743:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3744:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 23481              		.loc 1 3744 0
 23482 0006 0023     		movs	r3, #0
 23483 0008 BB77     		strb	r3, [r7, #30]
3745:..\src/command_processing.c ****     int16 aux_int16;
3746:..\src/command_processing.c ****     
3747:..\src/command_processing.c ****     // Header        
3748:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 23484              		.loc 1 3748 0
 23485 000a A623     		movs	r3, #166
 23486 000c 3B71     		strb	r3, [r7, #4]
3749:..\src/command_processing.c ****     
3750:..\src/command_processing.c ****     // Fill payload
3751:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 23487              		.loc 1 3751 0
 23488 000e 0023     		movs	r3, #0
 23489 0010 FB77     		strb	r3, [r7, #31]
 23490 0012 27E0     		b	.L971
 23491              	.L973:
3752:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23492              		.loc 1 3752 0
 23493 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23494 0016 274A     		ldr	r2, .L974
 23495 0018 1344     		add	r3, r3, r2
 23496 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 23497 001e 012B     		cmp	r3, #1
 23498 0020 1DD1     		bne	.L972
3753:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 23499              		.loc 1 3753 0
 23500 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23501 0024 244A     		ldr	r2, .L974+4
 23502 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 23503 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3754:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 520


 23504              		.loc 1 3754 0
 23505 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23506 002e 5B00     		lsls	r3, r3, #1
 23507 0030 0233     		adds	r3, r3, #2
 23508 0032 BA1C     		adds	r2, r7, #2
 23509 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23510 0036 07F12001 		add	r1, r7, #32
 23511 003a 0B44     		add	r3, r3, r1
 23512 003c 03F81C2C 		strb	r2, [r3, #-28]
3755:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 23513              		.loc 1 3755 0
 23514 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23515 0042 5B00     		lsls	r3, r3, #1
 23516 0044 5A1C     		adds	r2, r3, #1
 23517 0046 BB1C     		adds	r3, r7, #2
 23518 0048 0133     		adds	r3, r3, #1
 23519 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23520 004c 07F12003 		add	r3, r7, #32
 23521 0050 1344     		add	r3, r3, r2
 23522 0052 0A46     		mov	r2, r1
 23523 0054 03F81C2C 		strb	r2, [r3, #-28]
3756:..\src/command_processing.c ****             idx++;
 23524              		.loc 1 3756 0
 23525 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23526 005a 0133     		adds	r3, r3, #1
 23527 005c BB77     		strb	r3, [r7, #30]
 23528              	.L972:
3751:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23529              		.loc 1 3751 0 discriminator 2
 23530 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23531 0060 0133     		adds	r3, r3, #1
 23532 0062 FB77     		strb	r3, [r7, #31]
 23533              	.L971:
3751:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23534              		.loc 1 3751 0 is_stmt 0 discriminator 1
 23535 0064 154B     		ldr	r3, .L974+8
 23536 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23537 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23538 006a 9A42     		cmp	r2, r3
 23539 006c D2D3     		bcc	.L973
3757:..\src/command_processing.c ****         }
3758:..\src/command_processing.c ****     }
3759:..\src/command_processing.c **** 
3760:..\src/command_processing.c ****     // Calculate checksum
3761:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 23540              		.loc 1 3761 0 is_stmt 1
 23541 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23542 0070 5B00     		lsls	r3, r3, #1
 23543 0072 5C1C     		adds	r4, r3, #1
 23544 0074 BB7F     		ldrb	r3, [r7, #30]
 23545 0076 5B00     		lsls	r3, r3, #1
 23546 0078 DBB2     		uxtb	r3, r3
 23547 007a 0133     		adds	r3, r3, #1
 23548 007c DAB2     		uxtb	r2, r3
 23549 007e 3B1D     		adds	r3, r7, #4
 23550 0080 1146     		mov	r1, r2
 23551 0082 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 521


 23552 0084 FFF7FEFF 		bl	LCRChecksum
 23553 0088 0346     		mov	r3, r0
 23554 008a 1A46     		mov	r2, r3
 23555 008c 07F12003 		add	r3, r7, #32
 23556 0090 2344     		add	r3, r3, r4
 23557 0092 03F81C2C 		strb	r2, [r3, #-28]
3762:..\src/command_processing.c ****     
3763:..\src/command_processing.c ****     // Send package to UART
3764:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 23558              		.loc 1 3764 0
 23559 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23560 0098 0133     		adds	r3, r3, #1
 23561 009a 9BB2     		uxth	r3, r3
 23562 009c 5B00     		lsls	r3, r3, #1
 23563 009e 9AB2     		uxth	r2, r3
 23564 00a0 3B1D     		adds	r3, r7, #4
 23565 00a2 1146     		mov	r1, r2
 23566 00a4 1846     		mov	r0, r3
 23567 00a6 FFF7FEFF 		bl	commWrite
3765:..\src/command_processing.c **** }
 23568              		.loc 1 3765 0
 23569 00aa 00BF     		nop
 23570 00ac 2437     		adds	r7, r7, #36
 23571              		.cfi_def_cfa_offset 12
 23572 00ae BD46     		mov	sp, r7
 23573              		.cfi_def_cfa_register 13
 23574              		@ sp needed
 23575 00b0 90BD     		pop	{r4, r7, pc}
 23576              	.L975:
 23577 00b2 00BF     		.align	2
 23578              	.L974:
 23579 00b4 00000000 		.word	c_mem
 23580 00b8 00000000 		.word	ADC_buf
 23581 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 23582              		.cfi_endproc
 23583              	.LFE109:
 23584              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 23585              		.section	.text.air_chambers_control,"ax",%progbits
 23586              		.align	2
 23587              		.global	air_chambers_control
 23588              		.thumb
 23589              		.thumb_func
 23590              		.type	air_chambers_control, %function
 23591              	air_chambers_control:
 23592              	.LFB110:
3766:..\src/command_processing.c **** 
3767:..\src/command_processing.c **** //==============================================================================
3768:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3769:..\src/command_processing.c **** //==============================================================================
3770:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3771:..\src/command_processing.c **** 
3772:..\src/command_processing.c **** void air_chambers_control() {
 23593              		.loc 1 3772 0
 23594              		.cfi_startproc
 23595              		@ args = 0, pretend = 0, frame = 0
 23596              		@ frame_needed = 1, uses_anonymous_args = 0
 23597              		@ link register save eliminated.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 522


 23598 0000 80B4     		push	{r7}
 23599              		.cfi_def_cfa_offset 4
 23600              		.cfi_offset 7, -4
 23601 0002 00AF     		add	r7, sp, #0
 23602              		.cfi_def_cfa_register 7
3773:..\src/command_processing.c ****     
3774:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3775:..\src/command_processing.c ****     
3776:..\src/command_processing.c ****     int16 curr_diff;
3777:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
3778:..\src/command_processing.c ****     int32 valve_command;
3779:..\src/command_processing.c ****     int16 x_value;
3780:..\src/command_processing.c **** 
3781:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
3782:..\src/command_processing.c ****     
3783:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
3784:..\src/command_processing.c ****     
3785:..\src/command_processing.c ****     // Current difference saturation old mapping
3786:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3787:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3788:..\src/command_processing.c **** //    }
3789:..\src/command_processing.c **** //    if(curr_diff < 0) {
3790:..\src/command_processing.c **** //        curr_diff = 0;
3791:..\src/command_processing.c **** //    }
3792:..\src/command_processing.c **** 
3793:..\src/command_processing.c ****     // Compute pressure reference
3794:..\src/command_processing.c **** 
3795:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
3796:..\src/command_processing.c ****     if (x_value < 0)
3797:..\src/command_processing.c ****         x_value = 0;
3798:..\src/command_processing.c ****     
3799:..\src/command_processing.c ****     // old mapping --- linear mapping
3800:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3801:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
3802:..\src/command_processing.c ****     if (pressure_reference < 0)
3803:..\src/command_processing.c ****         pressure_reference = 0;
3804:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
3805:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
3806:..\src/command_processing.c ****     
3807:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
3808:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
3809:..\src/command_processing.c **** //    if (err_pressure < 0){
3810:..\src/command_processing.c **** //        err_pressure = 0;
3811:..\src/command_processing.c **** //    }
3812:..\src/command_processing.c ****     
3813:..\src/command_processing.c ****     if (x_value <= 0){
3814:..\src/command_processing.c ****         //i.e the hand is opening
3815:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
3816:..\src/command_processing.c ****     }
3817:..\src/command_processing.c ****     else {
3818:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3819:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3820:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3821:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
3822:..\src/command_processing.c ****     }
3823:..\src/command_processing.c ****     
3824:..\src/command_processing.c ****     // Pump control
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 523


3825:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
3826:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3827:..\src/command_processing.c ****     
3828:..\src/command_processing.c ****     // Limit output voltage
3829:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
3830:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
3831:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
3832:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
3833:..\src/command_processing.c ****         
3834:..\src/command_processing.c ****     VALVE_Write(valve_command);
3835:..\src/command_processing.c **** #endif
3836:..\src/command_processing.c **** }
 23603              		.loc 1 3836 0
 23604 0004 00BF     		nop
 23605 0006 BD46     		mov	sp, r7
 23606              		.cfi_def_cfa_register 13
 23607              		@ sp needed
 23608 0008 80BC     		pop	{r7}
 23609              		.cfi_restore 7
 23610              		.cfi_def_cfa_offset 0
 23611 000a 7047     		bx	lr
 23612              		.cfi_endproc
 23613              	.LFE110:
 23614              		.size	air_chambers_control, .-air_chambers_control
 23615              		.section	.text.drive_slave,"ax",%progbits
 23616              		.align	2
 23617              		.global	drive_slave
 23618              		.thumb
 23619              		.thumb_func
 23620              		.type	drive_slave, %function
 23621              	drive_slave:
 23622              	.LFB111:
3837:..\src/command_processing.c **** 
3838:..\src/command_processing.c **** //==============================================================================
3839:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
3840:..\src/command_processing.c **** //==============================================================================
3841:..\src/command_processing.c ****  
3842:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 23623              		.loc 1 3842 0
 23624              		.cfi_startproc
 23625              		@ args = 0, pretend = 0, frame = 8
 23626              		@ frame_needed = 1, uses_anonymous_args = 0
 23627              		@ link register save eliminated.
 23628 0000 80B4     		push	{r7}
 23629              		.cfi_def_cfa_offset 4
 23630              		.cfi_offset 7, -4
 23631 0002 83B0     		sub	sp, sp, #12
 23632              		.cfi_def_cfa_offset 16
 23633 0004 00AF     		add	r7, sp, #0
 23634              		.cfi_def_cfa_register 7
 23635 0006 0346     		mov	r3, r0
 23636 0008 0A46     		mov	r2, r1
 23637 000a FB71     		strb	r3, [r7, #7]
 23638 000c 1346     		mov	r3, r2
 23639 000e BB71     		strb	r3, [r7, #6]
3843:..\src/command_processing.c **** 
3844:..\src/command_processing.c **** #ifdef MASTER_FW
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 524


3845:..\src/command_processing.c ****     uint8 packet_data[6];
3846:..\src/command_processing.c ****     uint8 packet_lenght;
3847:..\src/command_processing.c ****     int16 aux_int16;
3848:..\src/command_processing.c ****     
3849:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
3850:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
3851:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3852:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3853:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
3854:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3855:..\src/command_processing.c ****         master_mode = 0;
3856:..\src/command_processing.c ****         return;
3857:..\src/command_processing.c ****     }
3858:..\src/command_processing.c ****         
3859:..\src/command_processing.c ****     if (dev_tension[0] > 5000 && dev_tension[0] < 7000){
3860:..\src/command_processing.c ****         master_mode = 0;
3861:..\src/command_processing.c ****         return;
3862:..\src/command_processing.c ****     }
3863:..\src/command_processing.c ****     
3864:..\src/command_processing.c ****        
3865:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3866:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
3867:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
3868:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
3869:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
3870:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
3871:..\src/command_processing.c ****     
3872:..\src/command_processing.c ****     packet_lenght = 6;
3873:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3874:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
3875:..\src/command_processing.c **** 
3876:..\src/command_processing.c **** #endif
3877:..\src/command_processing.c **** }
 23640              		.loc 1 3877 0
 23641 0010 00BF     		nop
 23642 0012 0C37     		adds	r7, r7, #12
 23643              		.cfi_def_cfa_offset 4
 23644 0014 BD46     		mov	sp, r7
 23645              		.cfi_def_cfa_register 13
 23646              		@ sp needed
 23647 0016 80BC     		pop	{r7}
 23648              		.cfi_restore 7
 23649              		.cfi_def_cfa_offset 0
 23650 0018 7047     		bx	lr
 23651              		.cfi_endproc
 23652              	.LFE111:
 23653              		.size	drive_slave, .-drive_slave
 23654 001a 00BF     		.section	.text.stop_feedback,"ax",%progbits
 23655              		.align	2
 23656              		.global	stop_feedback
 23657              		.thumb
 23658              		.thumb_func
 23659              		.type	stop_feedback, %function
 23660              	stop_feedback:
 23661              	.LFB112:
3878:..\src/command_processing.c **** 
3879:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 525


3880:..\src/command_processing.c **** //                                                                 STOP FEEDBACK
3881:..\src/command_processing.c **** //==============================================================================
3882:..\src/command_processing.c ****  
3883:..\src/command_processing.c **** void stop_feedback() {
 23662              		.loc 1 3883 0
 23663              		.cfi_startproc
 23664              		@ args = 0, pretend = 0, frame = 0
 23665              		@ frame_needed = 1, uses_anonymous_args = 0
 23666              		@ link register save eliminated.
 23667 0000 80B4     		push	{r7}
 23668              		.cfi_def_cfa_offset 4
 23669              		.cfi_offset 7, -4
 23670 0002 00AF     		add	r7, sp, #0
 23671              		.cfi_def_cfa_register 7
3884:..\src/command_processing.c ****     
3885:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3886:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
3887:..\src/command_processing.c ****         // Stop pump and open valve
3888:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
3889:..\src/command_processing.c ****         VALVE_Write(0);
3890:..\src/command_processing.c ****     }
3891:..\src/command_processing.c **** #endif
3892:..\src/command_processing.c **** }
 23672              		.loc 1 3892 0
 23673 0004 00BF     		nop
 23674 0006 BD46     		mov	sp, r7
 23675              		.cfi_def_cfa_register 13
 23676              		@ sp needed
 23677 0008 80BC     		pop	{r7}
 23678              		.cfi_restore 7
 23679              		.cfi_def_cfa_offset 0
 23680 000a 7047     		bx	lr
 23681              		.cfi_endproc
 23682              	.LFE112:
 23683              		.size	stop_feedback, .-stop_feedback
 23684              		.section	.text.deactivate_slaves,"ax",%progbits
 23685              		.align	2
 23686              		.global	deactivate_slaves
 23687              		.thumb
 23688              		.thumb_func
 23689              		.type	deactivate_slaves, %function
 23690              	deactivate_slaves:
 23691              	.LFB113:
3893:..\src/command_processing.c **** 
3894:..\src/command_processing.c **** //==============================================================================
3895:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
3896:..\src/command_processing.c **** //==============================================================================
3897:..\src/command_processing.c ****  
3898:..\src/command_processing.c **** void deactivate_slaves() {
 23692              		.loc 1 3898 0
 23693              		.cfi_startproc
 23694              		@ args = 0, pretend = 0, frame = 0
 23695              		@ frame_needed = 1, uses_anonymous_args = 0
 23696              		@ link register save eliminated.
 23697 0000 80B4     		push	{r7}
 23698              		.cfi_def_cfa_offset 4
 23699              		.cfi_offset 7, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 526


 23700 0002 00AF     		add	r7, sp, #0
 23701              		.cfi_def_cfa_register 7
3899:..\src/command_processing.c ****     
3900:..\src/command_processing.c **** #ifdef MASTER_FW
3901:..\src/command_processing.c ****     
3902:..\src/command_processing.c ****     uint8 packet_data[10];
3903:..\src/command_processing.c ****     uint8 packet_lenght;
3904:..\src/command_processing.c ****     
3905:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
3906:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
3907:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
3908:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS          &&
3909:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     ){
3910:..\src/command_processing.c ****         master_mode = 0;
3911:..\src/command_processing.c ****         return;
3912:..\src/command_processing.c ****     }
3913:..\src/command_processing.c ****     
3914:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
3915:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
3916:..\src/command_processing.c **** 
3917:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
3918:..\src/command_processing.c ****     packet_lenght = 3;
3919:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
3920:..\src/command_processing.c ****     
3921:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
3922:..\src/command_processing.c ****     
3923:..\src/command_processing.c **** #endif    
3924:..\src/command_processing.c **** }
 23702              		.loc 1 3924 0
 23703 0004 00BF     		nop
 23704 0006 BD46     		mov	sp, r7
 23705              		.cfi_def_cfa_register 13
 23706              		@ sp needed
 23707 0008 80BC     		pop	{r7}
 23708              		.cfi_restore 7
 23709              		.cfi_def_cfa_offset 0
 23710 000a 7047     		bx	lr
 23711              		.cfi_endproc
 23712              	.LFE113:
 23713              		.size	deactivate_slaves, .-deactivate_slaves
 23714              		.bss
 23715              		.align	1
 23716              	i.11141:
 23717 0000 0000     		.space	2
 23718 0002 0000     		.align	2
 23719              	last_aux_int16.11265:
 23720 0004 00000000 		.space	4
 23721              		.text
 23722              	.Letext0:
 23723              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23724              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23725              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 23726              		.file 6 "..\\src\\commands.h"
 23727              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 23728              		.file 8 "..\\src\\globals.h"
 23729              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 23730              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 527


 23731              	.Ldebug_info0:
 23732 0000 71220000 		.4byte	0x2271
 23733 0004 0400     		.2byte	0x4
 23734 0006 00000000 		.4byte	.Ldebug_abbrev0
 23735 000a 04       		.byte	0x4
 23736 000b 01       		.uleb128 0x1
 23737 000c 14080000 		.4byte	.LASF363
 23738 0010 0C       		.byte	0xc
 23739 0011 C8120000 		.4byte	.LASF364
 23740 0015 31100000 		.4byte	.LASF365
 23741 0019 00000000 		.4byte	.Ldebug_ranges0+0
 23742 001d 00000000 		.4byte	0
 23743 0021 00000000 		.4byte	.Ldebug_line0
 23744 0025 02       		.uleb128 0x2
 23745 0026 01       		.byte	0x1
 23746 0027 06       		.byte	0x6
 23747 0028 55030000 		.4byte	.LASF0
 23748 002c 02       		.uleb128 0x2
 23749 002d 01       		.byte	0x1
 23750 002e 08       		.byte	0x8
 23751 002f CC030000 		.4byte	.LASF1
 23752 0033 02       		.uleb128 0x2
 23753 0034 02       		.byte	0x2
 23754 0035 05       		.byte	0x5
 23755 0036 0D0F0000 		.4byte	.LASF2
 23756 003a 02       		.uleb128 0x2
 23757 003b 02       		.byte	0x2
 23758 003c 07       		.byte	0x7
 23759 003d CE110000 		.4byte	.LASF3
 23760 0041 03       		.uleb128 0x3
 23761 0042 86120000 		.4byte	.LASF5
 23762 0046 03       		.byte	0x3
 23763 0047 3F       		.byte	0x3f
 23764 0048 4C000000 		.4byte	0x4c
 23765 004c 02       		.uleb128 0x2
 23766 004d 04       		.byte	0x4
 23767 004e 05       		.byte	0x5
 23768 004f 61020000 		.4byte	.LASF4
 23769 0053 03       		.uleb128 0x3
 23770 0054 CE080000 		.4byte	.LASF6
 23771 0058 03       		.byte	0x3
 23772 0059 41       		.byte	0x41
 23773 005a 5E000000 		.4byte	0x5e
 23774 005e 02       		.uleb128 0x2
 23775 005f 04       		.byte	0x4
 23776 0060 07       		.byte	0x7
 23777 0061 CD060000 		.4byte	.LASF7
 23778 0065 02       		.uleb128 0x2
 23779 0066 08       		.byte	0x8
 23780 0067 05       		.byte	0x5
 23781 0068 D9080000 		.4byte	.LASF8
 23782 006c 02       		.uleb128 0x2
 23783 006d 08       		.byte	0x8
 23784 006e 07       		.byte	0x7
 23785 006f 590C0000 		.4byte	.LASF9
 23786 0073 04       		.uleb128 0x4
 23787 0074 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 528


 23788 0075 05       		.byte	0x5
 23789 0076 696E7400 		.ascii	"int\000"
 23790 007a 02       		.uleb128 0x2
 23791 007b 04       		.byte	0x4
 23792 007c 07       		.byte	0x7
 23793 007d CD090000 		.4byte	.LASF10
 23794 0081 03       		.uleb128 0x3
 23795 0082 55000000 		.4byte	.LASF11
 23796 0086 04       		.byte	0x4
 23797 0087 2C       		.byte	0x2c
 23798 0088 41000000 		.4byte	0x41
 23799 008c 03       		.uleb128 0x3
 23800 008d 3F110000 		.4byte	.LASF12
 23801 0091 04       		.byte	0x4
 23802 0092 30       		.byte	0x30
 23803 0093 53000000 		.4byte	0x53
 23804 0097 05       		.uleb128 0x5
 23805 0098 FB0E0000 		.4byte	.LASF13
 23806 009c 05       		.byte	0x5
 23807 009d E401     		.2byte	0x1e4
 23808 009f 2C000000 		.4byte	0x2c
 23809 00a3 05       		.uleb128 0x5
 23810 00a4 1B130000 		.4byte	.LASF14
 23811 00a8 05       		.byte	0x5
 23812 00a9 E501     		.2byte	0x1e5
 23813 00ab 3A000000 		.4byte	0x3a
 23814 00af 05       		.uleb128 0x5
 23815 00b0 81000000 		.4byte	.LASF15
 23816 00b4 05       		.byte	0x5
 23817 00b5 E601     		.2byte	0x1e6
 23818 00b7 5E000000 		.4byte	0x5e
 23819 00bb 05       		.uleb128 0x5
 23820 00bc 8E010000 		.4byte	.LASF16
 23821 00c0 05       		.byte	0x5
 23822 00c1 E701     		.2byte	0x1e7
 23823 00c3 25000000 		.4byte	0x25
 23824 00c7 05       		.uleb128 0x5
 23825 00c8 9F100000 		.4byte	.LASF17
 23826 00cc 05       		.byte	0x5
 23827 00cd E801     		.2byte	0x1e8
 23828 00cf 33000000 		.4byte	0x33
 23829 00d3 05       		.uleb128 0x5
 23830 00d4 1D120000 		.4byte	.LASF18
 23831 00d8 05       		.byte	0x5
 23832 00d9 E901     		.2byte	0x1e9
 23833 00db 4C000000 		.4byte	0x4c
 23834 00df 05       		.uleb128 0x5
 23835 00e0 D8020000 		.4byte	.LASF19
 23836 00e4 05       		.byte	0x5
 23837 00e5 EA01     		.2byte	0x1ea
 23838 00e7 EB000000 		.4byte	0xeb
 23839 00eb 02       		.uleb128 0x2
 23840 00ec 04       		.byte	0x4
 23841 00ed 04       		.byte	0x4
 23842 00ee 93090000 		.4byte	.LASF20
 23843 00f2 02       		.uleb128 0x2
 23844 00f3 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 529


 23845 00f4 04       		.byte	0x4
 23846 00f5 31090000 		.4byte	.LASF21
 23847 00f9 02       		.uleb128 0x2
 23848 00fa 01       		.byte	0x1
 23849 00fb 08       		.byte	0x8
 23850 00fc 70040000 		.4byte	.LASF22
 23851 0100 05       		.uleb128 0x5
 23852 0101 4E0D0000 		.4byte	.LASF23
 23853 0105 05       		.byte	0x5
 23854 0106 8E02     		.2byte	0x28e
 23855 0108 0C010000 		.4byte	0x10c
 23856 010c 06       		.uleb128 0x6
 23857 010d 97000000 		.4byte	0x97
 23858 0111 02       		.uleb128 0x2
 23859 0112 08       		.byte	0x8
 23860 0113 04       		.byte	0x4
 23861 0114 3F0B0000 		.4byte	.LASF24
 23862 0118 02       		.uleb128 0x2
 23863 0119 04       		.byte	0x4
 23864 011a 07       		.byte	0x7
 23865 011b 10000000 		.4byte	.LASF25
 23866 011f 07       		.uleb128 0x7
 23867 0120 04       		.byte	0x4
 23868 0121 F9000000 		.4byte	0xf9
 23869 0125 07       		.uleb128 0x7
 23870 0126 04       		.byte	0x4
 23871 0127 2B010000 		.4byte	0x12b
 23872 012b 08       		.uleb128 0x8
 23873 012c F9000000 		.4byte	0xf9
 23874 0130 09       		.uleb128 0x9
 23875 0131 F9000000 		.4byte	0xf9
 23876 0135 40010000 		.4byte	0x140
 23877 0139 0A       		.uleb128 0xa
 23878 013a 18010000 		.4byte	0x118
 23879 013e 19       		.byte	0x19
 23880 013f 00       		.byte	0
 23881 0140 09       		.uleb128 0x9
 23882 0141 F9000000 		.4byte	0xf9
 23883 0145 50010000 		.4byte	0x150
 23884 0149 0A       		.uleb128 0xa
 23885 014a 18010000 		.4byte	0x118
 23886 014e 07       		.byte	0x7
 23887 014f 00       		.byte	0
 23888 0150 0B       		.uleb128 0xb
 23889 0151 150A0000 		.4byte	.LASF55
 23890 0155 01       		.byte	0x1
 23891 0156 2C000000 		.4byte	0x2c
 23892 015a 06       		.byte	0x6
 23893 015b 42       		.byte	0x42
 23894 015c 0F020000 		.4byte	0x20f
 23895 0160 0C       		.uleb128 0xc
 23896 0161 43130000 		.4byte	.LASF26
 23897 0165 00       		.byte	0
 23898 0166 0C       		.uleb128 0xc
 23899 0167 950F0000 		.4byte	.LASF27
 23900 016b 01       		.byte	0x1
 23901 016c 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 530


 23902 016d A9060000 		.4byte	.LASF28
 23903 0171 03       		.byte	0x3
 23904 0172 0C       		.uleb128 0xc
 23905 0173 04040000 		.4byte	.LASF29
 23906 0177 04       		.byte	0x4
 23907 0178 0C       		.uleb128 0xc
 23908 0179 870D0000 		.4byte	.LASF30
 23909 017d 05       		.byte	0x5
 23910 017e 0C       		.uleb128 0xc
 23911 017f BC070000 		.4byte	.LASF31
 23912 0183 06       		.byte	0x6
 23913 0184 0C       		.uleb128 0xc
 23914 0185 ED060000 		.4byte	.LASF32
 23915 0189 09       		.byte	0x9
 23916 018a 0C       		.uleb128 0xc
 23917 018b 19000000 		.4byte	.LASF33
 23918 018f 0A       		.byte	0xa
 23919 0190 0C       		.uleb128 0xc
 23920 0191 81050000 		.4byte	.LASF34
 23921 0195 0C       		.byte	0xc
 23922 0196 0C       		.uleb128 0xc
 23923 0197 AF0B0000 		.4byte	.LASF35
 23924 019b 0D       		.byte	0xd
 23925 019c 0C       		.uleb128 0xc
 23926 019d 43000000 		.4byte	.LASF36
 23927 01a1 80       		.byte	0x80
 23928 01a2 0C       		.uleb128 0xc
 23929 01a3 5F040000 		.4byte	.LASF37
 23930 01a7 81       		.byte	0x81
 23931 01a8 0C       		.uleb128 0xc
 23932 01a9 72050000 		.4byte	.LASF38
 23933 01ad 82       		.byte	0x82
 23934 01ae 0C       		.uleb128 0xc
 23935 01af 5F0F0000 		.4byte	.LASF39
 23936 01b3 83       		.byte	0x83
 23937 01b4 0C       		.uleb128 0xc
 23938 01b5 D20E0000 		.4byte	.LASF40
 23939 01b9 84       		.byte	0x84
 23940 01ba 0C       		.uleb128 0xc
 23941 01bb F0020000 		.4byte	.LASF41
 23942 01bf 85       		.byte	0x85
 23943 01c0 0C       		.uleb128 0xc
 23944 01c1 FE070000 		.4byte	.LASF42
 23945 01c5 86       		.byte	0x86
 23946 01c6 0C       		.uleb128 0xc
 23947 01c7 9C070000 		.4byte	.LASF43
 23948 01cb 88       		.byte	0x88
 23949 01cc 0C       		.uleb128 0xc
 23950 01cd 12100000 		.4byte	.LASF44
 23951 01d1 89       		.byte	0x89
 23952 01d2 0C       		.uleb128 0xc
 23953 01d3 B70C0000 		.4byte	.LASF45
 23954 01d7 8B       		.byte	0x8b
 23955 01d8 0C       		.uleb128 0xc
 23956 01d9 100B0000 		.4byte	.LASF46
 23957 01dd 8C       		.byte	0x8c
 23958 01de 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 531


 23959 01df A9080000 		.4byte	.LASF47
 23960 01e3 8E       		.byte	0x8e
 23961 01e4 0C       		.uleb128 0xc
 23962 01e5 EF0C0000 		.4byte	.LASF48
 23963 01e9 90       		.byte	0x90
 23964 01ea 0C       		.uleb128 0xc
 23965 01eb A7110000 		.4byte	.LASF49
 23966 01ef A1       		.byte	0xa1
 23967 01f0 0C       		.uleb128 0xc
 23968 01f1 8B0E0000 		.4byte	.LASF50
 23969 01f5 A2       		.byte	0xa2
 23970 01f6 0C       		.uleb128 0xc
 23971 01f7 730A0000 		.4byte	.LASF51
 23972 01fb A3       		.byte	0xa3
 23973 01fc 0C       		.uleb128 0xc
 23974 01fd A70E0000 		.4byte	.LASF52
 23975 0201 A4       		.byte	0xa4
 23976 0202 0C       		.uleb128 0xc
 23977 0203 840F0000 		.4byte	.LASF53
 23978 0207 A5       		.byte	0xa5
 23979 0208 0C       		.uleb128 0xc
 23980 0209 520E0000 		.4byte	.LASF54
 23981 020d A6       		.byte	0xa6
 23982 020e 00       		.byte	0
 23983 020f 0B       		.uleb128 0xb
 23984 0210 F2120000 		.4byte	.LASF56
 23985 0214 01       		.byte	0x1
 23986 0215 2C000000 		.4byte	0x2c
 23987 0219 06       		.byte	0x6
 23988 021a 8B       		.byte	0x8b
 23989 021b 4A020000 		.4byte	0x24a
 23990 021f 0C       		.uleb128 0xc
 23991 0220 03060000 		.4byte	.LASF57
 23992 0224 00       		.byte	0
 23993 0225 0C       		.uleb128 0xc
 23994 0226 530A0000 		.4byte	.LASF58
 23995 022a 01       		.byte	0x1
 23996 022b 0C       		.uleb128 0xc
 23997 022c 10020000 		.4byte	.LASF59
 23998 0230 02       		.byte	0x2
 23999 0231 0C       		.uleb128 0xc
 24000 0232 70010000 		.4byte	.LASF60
 24001 0236 03       		.byte	0x3
 24002 0237 0C       		.uleb128 0xc
 24003 0238 14010000 		.4byte	.LASF61
 24004 023c 04       		.byte	0x4
 24005 023d 0C       		.uleb128 0xc
 24006 023e 2B000000 		.4byte	.LASF62
 24007 0242 05       		.byte	0x5
 24008 0243 0C       		.uleb128 0xc
 24009 0244 6C0E0000 		.4byte	.LASF63
 24010 0248 06       		.byte	0x6
 24011 0249 00       		.byte	0
 24012 024a 0B       		.uleb128 0xb
 24013 024b E7080000 		.4byte	.LASF64
 24014 024f 01       		.byte	0x1
 24015 0250 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 532


 24016 0254 06       		.byte	0x6
 24017 0255 9E       		.byte	0x9e
 24018 0256 73020000 		.4byte	0x273
 24019 025a 0C       		.uleb128 0xc
 24020 025b 6B120000 		.4byte	.LASF65
 24021 025f 00       		.byte	0
 24022 0260 0C       		.uleb128 0xc
 24023 0261 90070000 		.4byte	.LASF66
 24024 0265 01       		.byte	0x1
 24025 0266 0C       		.uleb128 0xc
 24026 0267 2F0B0000 		.4byte	.LASF67
 24027 026b 02       		.byte	0x2
 24028 026c 0C       		.uleb128 0xc
 24029 026d 94060000 		.4byte	.LASF68
 24030 0271 03       		.byte	0x3
 24031 0272 00       		.byte	0
 24032 0273 0B       		.uleb128 0xb
 24033 0274 94030000 		.4byte	.LASF69
 24034 0278 01       		.byte	0x1
 24035 0279 2C000000 		.4byte	0x2c
 24036 027d 06       		.byte	0x6
 24037 027e A8       		.byte	0xa8
 24038 027f 90020000 		.4byte	0x290
 24039 0283 0C       		.uleb128 0xc
 24040 0284 620E0000 		.4byte	.LASF70
 24041 0288 00       		.byte	0
 24042 0289 0C       		.uleb128 0xc
 24043 028a 13090000 		.4byte	.LASF71
 24044 028e 01       		.byte	0x1
 24045 028f 00       		.byte	0
 24046 0290 0B       		.uleb128 0xb
 24047 0291 080C0000 		.4byte	.LASF72
 24048 0295 01       		.byte	0x1
 24049 0296 2C000000 		.4byte	0x2c
 24050 029a 06       		.byte	0x6
 24051 029b AD       		.byte	0xad
 24052 029c AD020000 		.4byte	0x2ad
 24053 02a0 0C       		.uleb128 0xc
 24054 02a1 E8050000 		.4byte	.LASF73
 24055 02a5 00       		.byte	0
 24056 02a6 0C       		.uleb128 0xc
 24057 02a7 4D070000 		.4byte	.LASF74
 24058 02ab 01       		.byte	0x1
 24059 02ac 00       		.byte	0
 24060 02ad 0B       		.uleb128 0xb
 24061 02ae 94100000 		.4byte	.LASF75
 24062 02b2 01       		.byte	0x1
 24063 02b3 2C000000 		.4byte	0x2c
 24064 02b7 06       		.byte	0x6
 24065 02b8 B5       		.byte	0xb5
 24066 02b9 FA020000 		.4byte	0x2fa
 24067 02bd 0C       		.uleb128 0xc
 24068 02be 54070000 		.4byte	.LASF76
 24069 02c2 00       		.byte	0
 24070 02c3 0C       		.uleb128 0xc
 24071 02c4 00130000 		.4byte	.LASF77
 24072 02c8 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 533


 24073 02c9 0C       		.uleb128 0xc
 24074 02ca F7080000 		.4byte	.LASF78
 24075 02ce 02       		.byte	0x2
 24076 02cf 0C       		.uleb128 0xc
 24077 02d0 EC0A0000 		.4byte	.LASF79
 24078 02d4 03       		.byte	0x3
 24079 02d5 0C       		.uleb128 0xc
 24080 02d6 200A0000 		.4byte	.LASF80
 24081 02da 04       		.byte	0x4
 24082 02db 0C       		.uleb128 0xc
 24083 02dc 700C0000 		.4byte	.LASF81
 24084 02e0 05       		.byte	0x5
 24085 02e1 0C       		.uleb128 0xc
 24086 02e2 4B0B0000 		.4byte	.LASF82
 24087 02e6 06       		.byte	0x6
 24088 02e7 0C       		.uleb128 0xc
 24089 02e8 AE0A0000 		.4byte	.LASF83
 24090 02ec 07       		.byte	0x7
 24091 02ed 0C       		.uleb128 0xc
 24092 02ee C6050000 		.4byte	.LASF84
 24093 02f2 08       		.byte	0x8
 24094 02f3 0C       		.uleb128 0xc
 24095 02f4 88060000 		.4byte	.LASF85
 24096 02f8 09       		.byte	0x9
 24097 02f9 00       		.byte	0
 24098 02fa 03       		.uleb128 0x3
 24099 02fb 4C120000 		.4byte	.LASF86
 24100 02ff 07       		.byte	0x7
 24101 0300 7E       		.byte	0x7e
 24102 0301 05030000 		.4byte	0x305
 24103 0305 0D       		.uleb128 0xd
 24104 0306 4C120000 		.4byte	.LASF86
 24105 030a 07       		.uleb128 0x7
 24106 030b 04       		.byte	0x4
 24107 030c FA020000 		.4byte	0x2fa
 24108 0310 0E       		.uleb128 0xe
 24109 0311 A2080000 		.4byte	.LASF89
 24110 0315 10       		.byte	0x10
 24111 0316 08       		.byte	0x8
 24112 0317 D3       		.byte	0xd3
 24113 0318 4D030000 		.4byte	0x34d
 24114 031c 0F       		.uleb128 0xf
 24115 031d 706F7300 		.ascii	"pos\000"
 24116 0321 08       		.byte	0x8
 24117 0322 D4       		.byte	0xd4
 24118 0323 D3000000 		.4byte	0xd3
 24119 0327 00       		.byte	0
 24120 0328 10       		.uleb128 0x10
 24121 0329 80070000 		.4byte	.LASF87
 24122 032d 08       		.byte	0x8
 24123 032e D5       		.byte	0xd5
 24124 032f D3000000 		.4byte	0xd3
 24125 0333 04       		.byte	0x4
 24126 0334 0F       		.uleb128 0xf
 24127 0335 70776D00 		.ascii	"pwm\000"
 24128 0339 08       		.byte	0x8
 24129 033a D6       		.byte	0xd6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 534


 24130 033b D3000000 		.4byte	0xd3
 24131 033f 08       		.byte	0x8
 24132 0340 10       		.uleb128 0x10
 24133 0341 B10C0000 		.4byte	.LASF88
 24134 0345 08       		.byte	0x8
 24135 0346 D7       		.byte	0xd7
 24136 0347 97000000 		.4byte	0x97
 24137 034b 0C       		.byte	0xc
 24138 034c 00       		.byte	0
 24139 034d 0E       		.uleb128 0xe
 24140 034e 4A0E0000 		.4byte	.LASF90
 24141 0352 34       		.byte	0x34
 24142 0353 08       		.byte	0x8
 24143 0354 DE       		.byte	0xde
 24144 0355 AE030000 		.4byte	0x3ae
 24145 0359 0F       		.uleb128 0xf
 24146 035a 706F7300 		.ascii	"pos\000"
 24147 035e 08       		.byte	0x8
 24148 035f DF       		.byte	0xdf
 24149 0360 AE030000 		.4byte	0x3ae
 24150 0364 00       		.byte	0
 24151 0365 10       		.uleb128 0x10
 24152 0366 80070000 		.4byte	.LASF87
 24153 036a 08       		.byte	0x8
 24154 036b E0       		.byte	0xe0
 24155 036c D3000000 		.4byte	0xd3
 24156 0370 0C       		.byte	0xc
 24157 0371 10       		.uleb128 0x10
 24158 0372 E1100000 		.4byte	.LASF91
 24159 0376 08       		.byte	0x8
 24160 0377 E1       		.byte	0xe1
 24161 0378 D3000000 		.4byte	0xd3
 24162 037c 10       		.byte	0x10
 24163 037d 10       		.uleb128 0x10
 24164 037e FC060000 		.4byte	.LASF92
 24165 0382 08       		.byte	0x8
 24166 0383 E2       		.byte	0xe2
 24167 0384 D3000000 		.4byte	0xd3
 24168 0388 14       		.byte	0x14
 24169 0389 0F       		.uleb128 0xf
 24170 038a 726F7400 		.ascii	"rot\000"
 24171 038e 08       		.byte	0x8
 24172 038f E3       		.byte	0xe3
 24173 0390 BE030000 		.4byte	0x3be
 24174 0394 18       		.byte	0x18
 24175 0395 0F       		.uleb128 0xf
 24176 0396 76656C00 		.ascii	"vel\000"
 24177 039a 08       		.byte	0x8
 24178 039b E4       		.byte	0xe4
 24179 039c AE030000 		.4byte	0x3ae
 24180 03a0 1C       		.byte	0x1c
 24181 03a1 0F       		.uleb128 0xf
 24182 03a2 61636300 		.ascii	"acc\000"
 24183 03a6 08       		.byte	0x8
 24184 03a7 E5       		.byte	0xe5
 24185 03a8 AE030000 		.4byte	0x3ae
 24186 03ac 28       		.byte	0x28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 535


 24187 03ad 00       		.byte	0
 24188 03ae 09       		.uleb128 0x9
 24189 03af D3000000 		.4byte	0xd3
 24190 03b3 BE030000 		.4byte	0x3be
 24191 03b7 0A       		.uleb128 0xa
 24192 03b8 18010000 		.4byte	0x118
 24193 03bc 02       		.byte	0x2
 24194 03bd 00       		.byte	0
 24195 03be 09       		.uleb128 0x9
 24196 03bf BB000000 		.4byte	0xbb
 24197 03c3 CE030000 		.4byte	0x3ce
 24198 03c7 0A       		.uleb128 0xa
 24199 03c8 18010000 		.4byte	0x118
 24200 03cc 02       		.byte	0x2
 24201 03cd 00       		.byte	0
 24202 03ce 0E       		.uleb128 0xe
 24203 03cf 620B0000 		.4byte	.LASF93
 24204 03d3 20       		.byte	0x20
 24205 03d4 08       		.byte	0x8
 24206 03d5 E8       		.byte	0xe8
 24207 03d6 F3030000 		.4byte	0x3f3
 24208 03da 0F       		.uleb128 0xf
 24209 03db 656D6700 		.ascii	"emg\000"
 24210 03df 08       		.byte	0x8
 24211 03e0 E9       		.byte	0xe9
 24212 03e1 F3030000 		.4byte	0x3f3
 24213 03e5 00       		.byte	0
 24214 03e6 10       		.uleb128 0x10
 24215 03e7 E40A0000 		.4byte	.LASF94
 24216 03eb 08       		.byte	0x8
 24217 03ec EA       		.byte	0xea
 24218 03ed 03040000 		.4byte	0x403
 24219 03f1 08       		.byte	0x8
 24220 03f2 00       		.byte	0
 24221 03f3 09       		.uleb128 0x9
 24222 03f4 D3000000 		.4byte	0xd3
 24223 03f8 03040000 		.4byte	0x403
 24224 03fc 0A       		.uleb128 0xa
 24225 03fd 18010000 		.4byte	0x118
 24226 0401 01       		.byte	0x1
 24227 0402 00       		.byte	0
 24228 0403 09       		.uleb128 0x9
 24229 0404 D3000000 		.4byte	0xd3
 24230 0408 13040000 		.4byte	0x413
 24231 040c 0A       		.uleb128 0xa
 24232 040d 18010000 		.4byte	0x118
 24233 0411 05       		.byte	0x5
 24234 0412 00       		.byte	0
 24235 0413 0E       		.uleb128 0xe
 24236 0414 C8040000 		.4byte	.LASF95
 24237 0418 04       		.byte	0x4
 24238 0419 08       		.byte	0x8
 24239 041a ED       		.byte	0xed
 24240 041b 2C040000 		.4byte	0x42c
 24241 041f 10       		.uleb128 0x10
 24242 0420 56040000 		.4byte	.LASF96
 24243 0424 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 536


 24244 0425 EE       		.byte	0xee
 24245 0426 EB000000 		.4byte	0xeb
 24246 042a 00       		.byte	0
 24247 042b 00       		.byte	0
 24248 042c 0E       		.uleb128 0xe
 24249 042d 62000000 		.4byte	.LASF97
 24250 0431 86       		.byte	0x86
 24251 0432 08       		.byte	0x8
 24252 0433 F5       		.byte	0xf5
 24253 0434 69040000 		.4byte	0x469
 24254 0438 10       		.uleb128 0x10
 24255 0439 94050000 		.4byte	.LASF98
 24256 043d 08       		.byte	0x8
 24257 043e F6       		.byte	0xf6
 24258 043f 69040000 		.4byte	0x469
 24259 0443 00       		.byte	0
 24260 0444 10       		.uleb128 0x10
 24261 0445 860C0000 		.4byte	.LASF99
 24262 0449 08       		.byte	0x8
 24263 044a F7       		.byte	0xf7
 24264 044b C7000000 		.4byte	0xc7
 24265 044f 80       		.byte	0x80
 24266 0450 0F       		.uleb128 0xf
 24267 0451 696E6400 		.ascii	"ind\000"
 24268 0455 08       		.byte	0x8
 24269 0456 F8       		.byte	0xf8
 24270 0457 C7000000 		.4byte	0xc7
 24271 045b 82       		.byte	0x82
 24272 045c 10       		.uleb128 0x10
 24273 045d E8010000 		.4byte	.LASF100
 24274 0461 08       		.byte	0x8
 24275 0462 F9       		.byte	0xf9
 24276 0463 97000000 		.4byte	0x97
 24277 0467 84       		.byte	0x84
 24278 0468 00       		.byte	0
 24279 0469 09       		.uleb128 0x9
 24280 046a 97000000 		.4byte	0x97
 24281 046e 79040000 		.4byte	0x479
 24282 0472 0A       		.uleb128 0xa
 24283 0473 18010000 		.4byte	0x118
 24284 0477 7F       		.byte	0x7f
 24285 0478 00       		.byte	0
 24286 0479 11       		.uleb128 0x11
 24287 047a C6020000 		.4byte	.LASF101
 24288 047e 50       		.byte	0x50
 24289 047f 08       		.byte	0x8
 24290 0480 0201     		.2byte	0x102
 24291 0482 E2040000 		.4byte	0x4e2
 24292 0486 12       		.uleb128 0x12
 24293 0487 01030000 		.4byte	.LASF102
 24294 048b 08       		.byte	0x8
 24295 048c 0301     		.2byte	0x103
 24296 048e E2040000 		.4byte	0x4e2
 24297 0492 00       		.byte	0
 24298 0493 12       		.uleb128 0x12
 24299 0494 B5010000 		.4byte	.LASF103
 24300 0498 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 537


 24301 0499 0401     		.2byte	0x104
 24302 049b F2040000 		.4byte	0x4f2
 24303 049f 08       		.byte	0x8
 24304 04a0 12       		.uleb128 0x12
 24305 04a1 220B0000 		.4byte	.LASF104
 24306 04a5 08       		.byte	0x8
 24307 04a6 0501     		.2byte	0x105
 24308 04a8 02050000 		.4byte	0x502
 24309 04ac 30       		.byte	0x30
 24310 04ad 12       		.uleb128 0x12
 24311 04ae 34010000 		.4byte	.LASF105
 24312 04b2 08       		.byte	0x8
 24313 04b3 0601     		.2byte	0x106
 24314 04b5 AF000000 		.4byte	0xaf
 24315 04b9 40       		.byte	0x40
 24316 04ba 12       		.uleb128 0x12
 24317 04bb 9F120000 		.4byte	.LASF106
 24318 04bf 08       		.byte	0x8
 24319 04c0 0701     		.2byte	0x107
 24320 04c2 AF000000 		.4byte	0xaf
 24321 04c6 44       		.byte	0x44
 24322 04c7 12       		.uleb128 0x12
 24323 04c8 DF060000 		.4byte	.LASF107
 24324 04cc 08       		.byte	0x8
 24325 04cd 0801     		.2byte	0x108
 24326 04cf AF000000 		.4byte	0xaf
 24327 04d3 48       		.byte	0x48
 24328 04d4 12       		.uleb128 0x12
 24329 04d5 1C070000 		.4byte	.LASF108
 24330 04d9 08       		.byte	0x8
 24331 04da 0901     		.2byte	0x109
 24332 04dc AF000000 		.4byte	0xaf
 24333 04e0 4C       		.byte	0x4c
 24334 04e1 00       		.byte	0
 24335 04e2 09       		.uleb128 0x9
 24336 04e3 AF000000 		.4byte	0xaf
 24337 04e7 F2040000 		.4byte	0x4f2
 24338 04eb 0A       		.uleb128 0xa
 24339 04ec 18010000 		.4byte	0x118
 24340 04f0 01       		.byte	0x1
 24341 04f1 00       		.byte	0
 24342 04f2 09       		.uleb128 0x9
 24343 04f3 AF000000 		.4byte	0xaf
 24344 04f7 02050000 		.4byte	0x502
 24345 04fb 0A       		.uleb128 0xa
 24346 04fc 18010000 		.4byte	0x118
 24347 0500 09       		.byte	0x9
 24348 0501 00       		.byte	0
 24349 0502 09       		.uleb128 0x9
 24350 0503 AF000000 		.4byte	0xaf
 24351 0507 12050000 		.4byte	0x512
 24352 050b 0A       		.uleb128 0xa
 24353 050c 18010000 		.4byte	0x118
 24354 0510 03       		.byte	0x3
 24355 0511 00       		.byte	0
 24356 0512 11       		.uleb128 0x11
 24357 0513 06020000 		.4byte	.LASF109
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 538


 24358 0517 10       		.byte	0x10
 24359 0518 08       		.byte	0x8
 24360 0519 1001     		.2byte	0x110
 24361 051b A1050000 		.4byte	0x5a1
 24362 051f 13       		.uleb128 0x13
 24363 0520 696400   		.ascii	"id\000"
 24364 0523 08       		.byte	0x8
 24365 0524 1101     		.2byte	0x111
 24366 0526 97000000 		.4byte	0x97
 24367 052a 00       		.byte	0
 24368 052b 12       		.uleb128 0x12
 24369 052c 6E0F0000 		.4byte	.LASF110
 24370 0530 08       		.byte	0x8
 24371 0531 1201     		.2byte	0x112
 24372 0533 A1050000 		.4byte	0x5a1
 24373 0537 01       		.byte	0x1
 24374 0538 12       		.uleb128 0x12
 24375 0539 DE0F0000 		.4byte	.LASF111
 24376 053d 08       		.byte	0x8
 24377 053e 1301     		.2byte	0x113
 24378 0540 A1050000 		.4byte	0x5a1
 24379 0544 04       		.byte	0x4
 24380 0545 12       		.uleb128 0x12
 24381 0546 F9030000 		.4byte	.LASF112
 24382 054a 08       		.byte	0x8
 24383 054b 1401     		.2byte	0x114
 24384 054d 97000000 		.4byte	0x97
 24385 0551 07       		.byte	0x7
 24386 0552 12       		.uleb128 0x12
 24387 0553 82020000 		.4byte	.LASF113
 24388 0557 08       		.byte	0x8
 24389 0558 1501     		.2byte	0x115
 24390 055a 97000000 		.4byte	0x97
 24391 055e 08       		.byte	0x8
 24392 055f 12       		.uleb128 0x12
 24393 0560 2C020000 		.4byte	.LASF114
 24394 0564 08       		.byte	0x8
 24395 0565 1601     		.2byte	0x116
 24396 0567 97000000 		.4byte	0x97
 24397 056b 09       		.byte	0x9
 24398 056c 12       		.uleb128 0x12
 24399 056d 73110000 		.4byte	.LASF115
 24400 0571 08       		.byte	0x8
 24401 0572 1701     		.2byte	0x117
 24402 0574 97000000 		.4byte	0x97
 24403 0578 0A       		.byte	0xa
 24404 0579 12       		.uleb128 0x12
 24405 057a 37110000 		.4byte	.LASF116
 24406 057e 08       		.byte	0x8
 24407 057f 1801     		.2byte	0x118
 24408 0581 97000000 		.4byte	0x97
 24409 0585 0B       		.byte	0xb
 24410 0586 12       		.uleb128 0x12
 24411 0587 F40D0000 		.4byte	.LASF117
 24412 058b 08       		.byte	0x8
 24413 058c 1901     		.2byte	0x119
 24414 058e 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 539


 24415 0592 0C       		.byte	0xc
 24416 0593 12       		.uleb128 0x12
 24417 0594 A3020000 		.4byte	.LASF118
 24418 0598 08       		.byte	0x8
 24419 0599 1A01     		.2byte	0x11a
 24420 059b A1050000 		.4byte	0x5a1
 24421 059f 0D       		.byte	0xd
 24422 05a0 00       		.byte	0
 24423 05a1 09       		.uleb128 0x9
 24424 05a2 97000000 		.4byte	0x97
 24425 05a6 B1050000 		.4byte	0x5b1
 24426 05aa 0A       		.uleb128 0xa
 24427 05ab 18010000 		.4byte	0x118
 24428 05af 02       		.byte	0x2
 24429 05b0 00       		.byte	0
 24430 05b1 11       		.uleb128 0x11
 24431 05b2 AC090000 		.4byte	.LASF119
 24432 05b6 70       		.byte	0x70
 24433 05b7 08       		.byte	0x8
 24434 05b8 2101     		.2byte	0x121
 24435 05ba 2B070000 		.4byte	0x72b
 24436 05be 13       		.uleb128 0x13
 24437 05bf 6B5F7000 		.ascii	"k_p\000"
 24438 05c3 08       		.byte	0x8
 24439 05c4 2201     		.2byte	0x122
 24440 05c6 D3000000 		.4byte	0xd3
 24441 05ca 00       		.byte	0
 24442 05cb 13       		.uleb128 0x13
 24443 05cc 6B5F6900 		.ascii	"k_i\000"
 24444 05d0 08       		.byte	0x8
 24445 05d1 2301     		.2byte	0x123
 24446 05d3 D3000000 		.4byte	0xd3
 24447 05d7 04       		.byte	0x4
 24448 05d8 13       		.uleb128 0x13
 24449 05d9 6B5F6400 		.ascii	"k_d\000"
 24450 05dd 08       		.byte	0x8
 24451 05de 2401     		.2byte	0x124
 24452 05e0 D3000000 		.4byte	0xd3
 24453 05e4 08       		.byte	0x8
 24454 05e5 12       		.uleb128 0x12
 24455 05e6 000D0000 		.4byte	.LASF120
 24456 05ea 08       		.byte	0x8
 24457 05eb 2501     		.2byte	0x125
 24458 05ed D3000000 		.4byte	0xd3
 24459 05f1 0C       		.byte	0xc
 24460 05f2 12       		.uleb128 0x12
 24461 05f3 E8040000 		.4byte	.LASF121
 24462 05f7 08       		.byte	0x8
 24463 05f8 2601     		.2byte	0x126
 24464 05fa D3000000 		.4byte	0xd3
 24465 05fe 10       		.byte	0x10
 24466 05ff 12       		.uleb128 0x12
 24467 0600 C2040000 		.4byte	.LASF122
 24468 0604 08       		.byte	0x8
 24469 0605 2701     		.2byte	0x127
 24470 0607 D3000000 		.4byte	0xd3
 24471 060b 14       		.byte	0x14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 540


 24472 060c 12       		.uleb128 0x12
 24473 060d DA100000 		.4byte	.LASF123
 24474 0611 08       		.byte	0x8
 24475 0612 2801     		.2byte	0x128
 24476 0614 D3000000 		.4byte	0xd3
 24477 0618 18       		.byte	0x18
 24478 0619 12       		.uleb128 0x12
 24479 061a 6B050000 		.4byte	.LASF124
 24480 061e 08       		.byte	0x8
 24481 061f 2901     		.2byte	0x129
 24482 0621 D3000000 		.4byte	0xd3
 24483 0625 1C       		.byte	0x1c
 24484 0626 12       		.uleb128 0x12
 24485 0627 390F0000 		.4byte	.LASF125
 24486 062b 08       		.byte	0x8
 24487 062c 2A01     		.2byte	0x12a
 24488 062e D3000000 		.4byte	0xd3
 24489 0632 20       		.byte	0x20
 24490 0633 12       		.uleb128 0x12
 24491 0634 9B050000 		.4byte	.LASF126
 24492 0638 08       		.byte	0x8
 24493 0639 2B01     		.2byte	0x12b
 24494 063b D3000000 		.4byte	0xd3
 24495 063f 24       		.byte	0x24
 24496 0640 12       		.uleb128 0x12
 24497 0641 4B060000 		.4byte	.LASF127
 24498 0645 08       		.byte	0x8
 24499 0646 2C01     		.2byte	0x12c
 24500 0648 D3000000 		.4byte	0xd3
 24501 064c 28       		.byte	0x28
 24502 064d 12       		.uleb128 0x12
 24503 064e 4C130000 		.4byte	.LASF128
 24504 0652 08       		.byte	0x8
 24505 0653 2D01     		.2byte	0x12d
 24506 0655 D3000000 		.4byte	0xd3
 24507 0659 2C       		.byte	0x2c
 24508 065a 12       		.uleb128 0x12
 24509 065b 38070000 		.4byte	.LASF129
 24510 065f 08       		.byte	0x8
 24511 0660 2E01     		.2byte	0x12e
 24512 0662 97000000 		.4byte	0x97
 24513 0666 30       		.byte	0x30
 24514 0667 12       		.uleb128 0x12
 24515 0668 C3100000 		.4byte	.LASF130
 24516 066c 08       		.byte	0x8
 24517 066d 2F01     		.2byte	0x12f
 24518 066f 97000000 		.4byte	0x97
 24519 0673 31       		.byte	0x31
 24520 0674 12       		.uleb128 0x12
 24521 0675 200D0000 		.4byte	.LASF131
 24522 0679 08       		.byte	0x8
 24523 067a 3001     		.2byte	0x130
 24524 067c 97000000 		.4byte	0x97
 24525 0680 32       		.byte	0x32
 24526 0681 12       		.uleb128 0x12
 24527 0682 54120000 		.4byte	.LASF132
 24528 0686 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 541


 24529 0687 3101     		.2byte	0x131
 24530 0689 97000000 		.4byte	0x97
 24531 068d 33       		.byte	0x33
 24532 068e 12       		.uleb128 0x12
 24533 068f E8000000 		.4byte	.LASF133
 24534 0693 08       		.byte	0x8
 24535 0694 3201     		.2byte	0x132
 24536 0696 D3000000 		.4byte	0xd3
 24537 069a 34       		.byte	0x34
 24538 069b 12       		.uleb128 0x12
 24539 069c 07050000 		.4byte	.LASF134
 24540 06a0 08       		.byte	0x8
 24541 06a1 3301     		.2byte	0x133
 24542 06a3 D3000000 		.4byte	0xd3
 24543 06a7 38       		.byte	0x38
 24544 06a8 12       		.uleb128 0x12
 24545 06a9 56090000 		.4byte	.LASF135
 24546 06ad 08       		.byte	0x8
 24547 06ae 3401     		.2byte	0x134
 24548 06b0 D3000000 		.4byte	0xd3
 24549 06b4 3C       		.byte	0x3c
 24550 06b5 12       		.uleb128 0x12
 24551 06b6 75040000 		.4byte	.LASF136
 24552 06ba 08       		.byte	0x8
 24553 06bb 3501     		.2byte	0x135
 24554 06bd D3000000 		.4byte	0xd3
 24555 06c1 40       		.byte	0x40
 24556 06c2 12       		.uleb128 0x12
 24557 06c3 28010000 		.4byte	.LASF137
 24558 06c7 08       		.byte	0x8
 24559 06c8 3601     		.2byte	0x136
 24560 06ca 2B070000 		.4byte	0x72b
 24561 06ce 44       		.byte	0x44
 24562 06cf 12       		.uleb128 0x12
 24563 06d0 E4120000 		.4byte	.LASF138
 24564 06d4 08       		.byte	0x8
 24565 06d5 3701     		.2byte	0x137
 24566 06d7 C7000000 		.4byte	0xc7
 24567 06db 5C       		.byte	0x5c
 24568 06dc 12       		.uleb128 0x12
 24569 06dd 85070000 		.4byte	.LASF139
 24570 06e1 08       		.byte	0x8
 24571 06e2 3801     		.2byte	0x138
 24572 06e4 97000000 		.4byte	0x97
 24573 06e8 5E       		.byte	0x5e
 24574 06e9 12       		.uleb128 0x12
 24575 06ea 400A0000 		.4byte	.LASF140
 24576 06ee 08       		.byte	0x8
 24577 06ef 3901     		.2byte	0x139
 24578 06f1 97000000 		.4byte	0x97
 24579 06f5 5F       		.byte	0x5f
 24580 06f6 12       		.uleb128 0x12
 24581 06f7 1D040000 		.4byte	.LASF141
 24582 06fb 08       		.byte	0x8
 24583 06fc 3A01     		.2byte	0x13a
 24584 06fe 97000000 		.4byte	0x97
 24585 0702 60       		.byte	0x60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 542


 24586 0703 12       		.uleb128 0x12
 24587 0704 B1040000 		.4byte	.LASF142
 24588 0708 08       		.byte	0x8
 24589 0709 3B01     		.2byte	0x13b
 24590 070b 97000000 		.4byte	0x97
 24591 070f 61       		.byte	0x61
 24592 0710 12       		.uleb128 0x12
 24593 0711 DA030000 		.4byte	.LASF143
 24594 0715 08       		.byte	0x8
 24595 0716 3C01     		.2byte	0x13c
 24596 0718 97000000 		.4byte	0x97
 24597 071c 62       		.byte	0x62
 24598 071d 12       		.uleb128 0x12
 24599 071e A3020000 		.4byte	.LASF118
 24600 0722 08       		.byte	0x8
 24601 0723 3D01     		.2byte	0x13d
 24602 0725 3B070000 		.4byte	0x73b
 24603 0729 63       		.byte	0x63
 24604 072a 00       		.byte	0
 24605 072b 09       		.uleb128 0x9
 24606 072c EB000000 		.4byte	0xeb
 24607 0730 3B070000 		.4byte	0x73b
 24608 0734 0A       		.uleb128 0xa
 24609 0735 18010000 		.4byte	0x118
 24610 0739 05       		.byte	0x5
 24611 073a 00       		.byte	0
 24612 073b 09       		.uleb128 0x9
 24613 073c 97000000 		.4byte	0x97
 24614 0740 4B070000 		.4byte	0x74b
 24615 0744 0A       		.uleb128 0xa
 24616 0745 18010000 		.4byte	0x118
 24617 0749 0C       		.byte	0xc
 24618 074a 00       		.byte	0
 24619 074b 11       		.uleb128 0x11
 24620 074c E1110000 		.4byte	.LASF144
 24621 0750 30       		.byte	0x30
 24622 0751 08       		.byte	0x8
 24623 0752 4401     		.2byte	0x144
 24624 0754 CE070000 		.4byte	0x7ce
 24625 0758 12       		.uleb128 0x12
 24626 0759 38090000 		.4byte	.LASF145
 24627 075d 08       		.byte	0x8
 24628 075e 4501     		.2byte	0x145
 24629 0760 CE070000 		.4byte	0x7ce
 24630 0764 00       		.byte	0
 24631 0765 13       		.uleb128 0x13
 24632 0766 72657300 		.ascii	"res\000"
 24633 076a 08       		.byte	0x8
 24634 076b 4601     		.2byte	0x146
 24635 076d A1050000 		.4byte	0x5a1
 24636 0771 05       		.byte	0x5
 24637 0772 12       		.uleb128 0x12
 24638 0773 47070000 		.4byte	.LASF146
 24639 0777 08       		.byte	0x8
 24640 0778 4701     		.2byte	0x147
 24641 077a AE030000 		.4byte	0x3ae
 24642 077e 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 543


 24643 077f 12       		.uleb128 0x12
 24644 0780 E1040000 		.4byte	.LASF147
 24645 0784 08       		.byte	0x8
 24646 0785 4801     		.2byte	0x148
 24647 0787 DE070000 		.4byte	0x7de
 24648 078b 14       		.byte	0x14
 24649 078c 12       		.uleb128 0x12
 24650 078d D70B0000 		.4byte	.LASF148
 24651 0791 08       		.byte	0x8
 24652 0792 4901     		.2byte	0x149
 24653 0794 97000000 		.4byte	0x97
 24654 0798 20       		.byte	0x20
 24655 0799 12       		.uleb128 0x12
 24656 079a EE010000 		.4byte	.LASF149
 24657 079e 08       		.byte	0x8
 24658 079f 4A01     		.2byte	0x14a
 24659 07a1 A1050000 		.4byte	0x5a1
 24660 07a5 21       		.byte	0x21
 24661 07a6 12       		.uleb128 0x12
 24662 07a7 8A0B0000 		.4byte	.LASF150
 24663 07ab 08       		.byte	0x8
 24664 07ac 4B01     		.2byte	0x14b
 24665 07ae BB000000 		.4byte	0xbb
 24666 07b2 24       		.byte	0x24
 24667 07b3 12       		.uleb128 0x12
 24668 07b4 1B0E0000 		.4byte	.LASF151
 24669 07b8 08       		.byte	0x8
 24670 07b9 4C01     		.2byte	0x14c
 24671 07bb BE030000 		.4byte	0x3be
 24672 07bf 25       		.byte	0x25
 24673 07c0 12       		.uleb128 0x12
 24674 07c1 A3020000 		.4byte	.LASF118
 24675 07c5 08       		.byte	0x8
 24676 07c6 4D01     		.2byte	0x14d
 24677 07c8 EE070000 		.4byte	0x7ee
 24678 07cc 28       		.byte	0x28
 24679 07cd 00       		.byte	0
 24680 07ce 09       		.uleb128 0x9
 24681 07cf 97000000 		.4byte	0x97
 24682 07d3 DE070000 		.4byte	0x7de
 24683 07d7 0A       		.uleb128 0xa
 24684 07d8 18010000 		.4byte	0x118
 24685 07dc 04       		.byte	0x4
 24686 07dd 00       		.byte	0
 24687 07de 09       		.uleb128 0x9
 24688 07df DF000000 		.4byte	0xdf
 24689 07e3 EE070000 		.4byte	0x7ee
 24690 07e7 0A       		.uleb128 0xa
 24691 07e8 18010000 		.4byte	0x118
 24692 07ec 02       		.byte	0x2
 24693 07ed 00       		.byte	0
 24694 07ee 09       		.uleb128 0x9
 24695 07ef 97000000 		.4byte	0x97
 24696 07f3 FE070000 		.4byte	0x7fe
 24697 07f7 0A       		.uleb128 0xa
 24698 07f8 18010000 		.4byte	0x118
 24699 07fc 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 544


 24700 07fd 00       		.byte	0
 24701 07fe 11       		.uleb128 0x11
 24702 07ff AE010000 		.4byte	.LASF152
 24703 0803 10       		.byte	0x10
 24704 0804 08       		.byte	0x8
 24705 0805 5401     		.2byte	0x154
 24706 0807 4D080000 		.4byte	0x84d
 24707 080b 12       		.uleb128 0x12
 24708 080c 020B0000 		.4byte	.LASF153
 24709 0810 08       		.byte	0x8
 24710 0811 5501     		.2byte	0x155
 24711 0813 4D080000 		.4byte	0x84d
 24712 0817 00       		.byte	0
 24713 0818 12       		.uleb128 0x12
 24714 0819 A9120000 		.4byte	.LASF154
 24715 081d 08       		.byte	0x8
 24716 081e 5601     		.2byte	0x156
 24717 0820 E2040000 		.4byte	0x4e2
 24718 0824 04       		.byte	0x4
 24719 0825 12       		.uleb128 0x12
 24720 0826 13050000 		.4byte	.LASF155
 24721 082a 08       		.byte	0x8
 24722 082b 5701     		.2byte	0x157
 24723 082d 5D080000 		.4byte	0x85d
 24724 0831 0C       		.byte	0xc
 24725 0832 12       		.uleb128 0x12
 24726 0833 350E0000 		.4byte	.LASF156
 24727 0837 08       		.byte	0x8
 24728 0838 5801     		.2byte	0x158
 24729 083a 97000000 		.4byte	0x97
 24730 083e 0E       		.byte	0xe
 24731 083f 12       		.uleb128 0x12
 24732 0840 B8100000 		.4byte	.LASF157
 24733 0844 08       		.byte	0x8
 24734 0845 5901     		.2byte	0x159
 24735 0847 97000000 		.4byte	0x97
 24736 084b 0F       		.byte	0xf
 24737 084c 00       		.byte	0
 24738 084d 09       		.uleb128 0x9
 24739 084e A3000000 		.4byte	0xa3
 24740 0852 5D080000 		.4byte	0x85d
 24741 0856 0A       		.uleb128 0xa
 24742 0857 18010000 		.4byte	0x118
 24743 085b 01       		.byte	0x1
 24744 085c 00       		.byte	0
 24745 085d 09       		.uleb128 0x9
 24746 085e 97000000 		.4byte	0x97
 24747 0862 6D080000 		.4byte	0x86d
 24748 0866 0A       		.uleb128 0xa
 24749 0867 18010000 		.4byte	0x118
 24750 086b 01       		.byte	0x1
 24751 086c 00       		.byte	0
 24752 086d 11       		.uleb128 0x11
 24753 086e 880A0000 		.4byte	.LASF158
 24754 0872 20       		.byte	0x20
 24755 0873 08       		.byte	0x8
 24756 0874 6001     		.2byte	0x160
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 545


 24757 0876 AF080000 		.4byte	0x8af
 24758 087a 12       		.uleb128 0x12
 24759 087b 47020000 		.4byte	.LASF159
 24760 087f 08       		.byte	0x8
 24761 0880 6101     		.2byte	0x161
 24762 0882 97000000 		.4byte	0x97
 24763 0886 00       		.byte	0
 24764 0887 12       		.uleb128 0x12
 24765 0888 F90B0000 		.4byte	.LASF160
 24766 088c 08       		.byte	0x8
 24767 088d 6201     		.2byte	0x162
 24768 088f 97000000 		.4byte	0x97
 24769 0893 01       		.byte	0x1
 24770 0894 12       		.uleb128 0x12
 24771 0895 99090000 		.4byte	.LASF161
 24772 0899 08       		.byte	0x8
 24773 089a 6301     		.2byte	0x163
 24774 089c AF080000 		.4byte	0x8af
 24775 08a0 02       		.byte	0x2
 24776 08a1 12       		.uleb128 0x12
 24777 08a2 A3020000 		.4byte	.LASF118
 24778 08a6 08       		.byte	0x8
 24779 08a7 6401     		.2byte	0x164
 24780 08a9 CE070000 		.4byte	0x7ce
 24781 08ad 1B       		.byte	0x1b
 24782 08ae 00       		.byte	0
 24783 08af 09       		.uleb128 0x9
 24784 08b0 97000000 		.4byte	0x97
 24785 08b4 C5080000 		.4byte	0x8c5
 24786 08b8 0A       		.uleb128 0xa
 24787 08b9 18010000 		.4byte	0x118
 24788 08bd 04       		.byte	0x4
 24789 08be 0A       		.uleb128 0xa
 24790 08bf 18010000 		.4byte	0x118
 24791 08c3 04       		.byte	0x4
 24792 08c4 00       		.byte	0
 24793 08c5 11       		.uleb128 0x11
 24794 08c6 280E0000 		.4byte	.LASF162
 24795 08ca 20       		.byte	0x20
 24796 08cb 08       		.byte	0x8
 24797 08cc 6B01     		.2byte	0x16b
 24798 08ce 14090000 		.4byte	0x914
 24799 08d2 12       		.uleb128 0x12
 24800 08d3 CD0B0000 		.4byte	.LASF163
 24801 08d7 08       		.byte	0x8
 24802 08d8 6C01     		.2byte	0x16c
 24803 08da 14090000 		.4byte	0x914
 24804 08de 00       		.byte	0
 24805 08df 12       		.uleb128 0x12
 24806 08e0 A5100000 		.4byte	.LASF164
 24807 08e4 08       		.byte	0x8
 24808 08e5 6D01     		.2byte	0x16d
 24809 08e7 97000000 		.4byte	0x97
 24810 08eb 06       		.byte	0x6
 24811 08ec 12       		.uleb128 0x12
 24812 08ed FA100000 		.4byte	.LASF165
 24813 08f1 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 546


 24814 08f2 6E01     		.2byte	0x16e
 24815 08f4 97000000 		.4byte	0x97
 24816 08f8 07       		.byte	0x7
 24817 08f9 12       		.uleb128 0x12
 24818 08fa 38050000 		.4byte	.LASF166
 24819 08fe 08       		.byte	0x8
 24820 08ff 6F01     		.2byte	0x16f
 24821 0901 24090000 		.4byte	0x924
 24822 0905 08       		.byte	0x8
 24823 0906 12       		.uleb128 0x12
 24824 0907 A3020000 		.4byte	.LASF118
 24825 090b 08       		.byte	0x8
 24826 090c 7001     		.2byte	0x170
 24827 090e 24090000 		.4byte	0x924
 24828 0912 14       		.byte	0x14
 24829 0913 00       		.byte	0
 24830 0914 09       		.uleb128 0x9
 24831 0915 97000000 		.4byte	0x97
 24832 0919 24090000 		.4byte	0x924
 24833 091d 0A       		.uleb128 0xa
 24834 091e 18010000 		.4byte	0x118
 24835 0922 05       		.byte	0x5
 24836 0923 00       		.byte	0
 24837 0924 09       		.uleb128 0x9
 24838 0925 97000000 		.4byte	0x97
 24839 0929 34090000 		.4byte	0x934
 24840 092d 0A       		.uleb128 0xa
 24841 092e 18010000 		.4byte	0x118
 24842 0932 0B       		.byte	0xb
 24843 0933 00       		.byte	0
 24844 0934 11       		.uleb128 0x11
 24845 0935 FD0D0000 		.4byte	.LASF167
 24846 0939 20       		.byte	0x20
 24847 093a 08       		.byte	0x8
 24848 093b 7701     		.2byte	0x177
 24849 093d 69090000 		.4byte	0x969
 24850 0941 12       		.uleb128 0x12
 24851 0942 61030000 		.4byte	.LASF168
 24852 0946 08       		.byte	0x8
 24853 0947 7801     		.2byte	0x178
 24854 0949 40010000 		.4byte	0x140
 24855 094d 00       		.byte	0
 24856 094e 12       		.uleb128 0x12
 24857 094f 91020000 		.4byte	.LASF169
 24858 0953 08       		.byte	0x8
 24859 0954 7901     		.2byte	0x179
 24860 0956 FE070000 		.4byte	0x7fe
 24861 095a 08       		.byte	0x8
 24862 095b 12       		.uleb128 0x12
 24863 095c A3020000 		.4byte	.LASF118
 24864 0960 08       		.byte	0x8
 24865 0961 7A01     		.2byte	0x17a
 24866 0963 EE070000 		.4byte	0x7ee
 24867 0967 18       		.byte	0x18
 24868 0968 00       		.byte	0
 24869 0969 11       		.uleb128 0x11
 24870 096a BD080000 		.4byte	.LASF170
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 547


 24871 096e 10       		.byte	0x10
 24872 096f 08       		.byte	0x8
 24873 0970 8101     		.2byte	0x181
 24874 0972 B8090000 		.4byte	0x9b8
 24875 0976 12       		.uleb128 0x12
 24876 0977 77070000 		.4byte	.LASF171
 24877 097b 08       		.byte	0x8
 24878 097c 8201     		.2byte	0x182
 24879 097e D3000000 		.4byte	0xd3
 24880 0982 00       		.byte	0
 24881 0983 12       		.uleb128 0x12
 24882 0984 30130000 		.4byte	.LASF172
 24883 0988 08       		.byte	0x8
 24884 0989 8301     		.2byte	0x183
 24885 098b D3000000 		.4byte	0xd3
 24886 098f 04       		.byte	0x4
 24887 0990 12       		.uleb128 0x12
 24888 0991 1D050000 		.4byte	.LASF173
 24889 0995 08       		.byte	0x8
 24890 0996 8401     		.2byte	0x184
 24891 0998 D3000000 		.4byte	0xd3
 24892 099c 08       		.byte	0x8
 24893 099d 12       		.uleb128 0x12
 24894 099e 32060000 		.4byte	.LASF174
 24895 09a2 08       		.byte	0x8
 24896 09a3 8501     		.2byte	0x185
 24897 09a5 97000000 		.4byte	0x97
 24898 09a9 0C       		.byte	0xc
 24899 09aa 12       		.uleb128 0x12
 24900 09ab A3020000 		.4byte	.LASF118
 24901 09af 08       		.byte	0x8
 24902 09b0 8601     		.2byte	0x186
 24903 09b2 A1050000 		.4byte	0x5a1
 24904 09b6 0D       		.byte	0xd
 24905 09b7 00       		.byte	0
 24906 09b8 11       		.uleb128 0x11
 24907 09b9 56010000 		.4byte	.LASF175
 24908 09bd 10       		.byte	0x10
 24909 09be 08       		.byte	0x8
 24910 09bf 8D01     		.2byte	0x18d
 24911 09c1 ED090000 		.4byte	0x9ed
 24912 09c5 12       		.uleb128 0x12
 24913 09c6 BA0D0000 		.4byte	.LASF176
 24914 09ca 08       		.byte	0x8
 24915 09cb 8E01     		.2byte	0x18e
 24916 09cd 97000000 		.4byte	0x97
 24917 09d1 00       		.byte	0
 24918 09d2 12       		.uleb128 0x12
 24919 09d3 63090000 		.4byte	.LASF177
 24920 09d7 08       		.byte	0x8
 24921 09d8 8F01     		.2byte	0x18f
 24922 09da 97000000 		.4byte	0x97
 24923 09de 01       		.byte	0x1
 24924 09df 12       		.uleb128 0x12
 24925 09e0 A3020000 		.4byte	.LASF118
 24926 09e4 08       		.byte	0x8
 24927 09e5 9001     		.2byte	0x190
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 548


 24928 09e7 ED090000 		.4byte	0x9ed
 24929 09eb 02       		.byte	0x2
 24930 09ec 00       		.byte	0
 24931 09ed 09       		.uleb128 0x9
 24932 09ee 97000000 		.4byte	0x97
 24933 09f2 FD090000 		.4byte	0x9fd
 24934 09f6 0A       		.uleb128 0xa
 24935 09f7 18010000 		.4byte	0x118
 24936 09fb 0D       		.byte	0xd
 24937 09fc 00       		.byte	0
 24938 09fd 11       		.uleb128 0x11
 24939 09fe 570B0000 		.4byte	.LASF178
 24940 0a02 10       		.byte	0x10
 24941 0a03 08       		.byte	0x8
 24942 0a04 9701     		.2byte	0x197
 24943 0a06 3F0A0000 		.4byte	0xa3f
 24944 0a0a 12       		.uleb128 0x12
 24945 0a0b EC110000 		.4byte	.LASF179
 24946 0a0f 08       		.byte	0x8
 24947 0a10 9801     		.2byte	0x198
 24948 0a12 D3000000 		.4byte	0xd3
 24949 0a16 00       		.byte	0
 24950 0a17 12       		.uleb128 0x12
 24951 0a18 1D060000 		.4byte	.LASF180
 24952 0a1c 08       		.byte	0x8
 24953 0a1d 9901     		.2byte	0x199
 24954 0a1f EB000000 		.4byte	0xeb
 24955 0a23 04       		.byte	0x4
 24956 0a24 12       		.uleb128 0x12
 24957 0a25 530D0000 		.4byte	.LASF181
 24958 0a29 08       		.byte	0x8
 24959 0a2a 9A01     		.2byte	0x19a
 24960 0a2c EB000000 		.4byte	0xeb
 24961 0a30 08       		.byte	0x8
 24962 0a31 12       		.uleb128 0x12
 24963 0a32 A3020000 		.4byte	.LASF118
 24964 0a36 08       		.byte	0x8
 24965 0a37 9B01     		.2byte	0x19b
 24966 0a39 3F0A0000 		.4byte	0xa3f
 24967 0a3d 0C       		.byte	0xc
 24968 0a3e 00       		.byte	0
 24969 0a3f 09       		.uleb128 0x9
 24970 0a40 97000000 		.4byte	0x97
 24971 0a44 4F0A0000 		.4byte	0xa4f
 24972 0a48 0A       		.uleb128 0xa
 24973 0a49 18010000 		.4byte	0x118
 24974 0a4d 03       		.byte	0x3
 24975 0a4e 00       		.byte	0
 24976 0a4f 14       		.uleb128 0x14
 24977 0a50 07120000 		.4byte	.LASF182
 24978 0a54 D002     		.2byte	0x2d0
 24979 0a56 08       		.byte	0x8
 24980 0a57 A401     		.2byte	0x1a4
 24981 0a59 190B0000 		.4byte	0xb19
 24982 0a5d 12       		.uleb128 0x12
 24983 0a5e 2C0A0000 		.4byte	.LASF183
 24984 0a62 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 549


 24985 0a63 A601     		.2byte	0x1a6
 24986 0a65 97000000 		.4byte	0x97
 24987 0a69 00       		.byte	0
 24988 0a6a 12       		.uleb128 0x12
 24989 0a6b A3020000 		.4byte	.LASF118
 24990 0a6f 08       		.byte	0x8
 24991 0a70 A701     		.2byte	0x1a7
 24992 0a72 190B0000 		.4byte	0xb19
 24993 0a76 01       		.byte	0x1
 24994 0a77 13       		.uleb128 0x13
 24995 0a78 636E7400 		.ascii	"cnt\000"
 24996 0a7c 08       		.byte	0x8
 24997 0a7d A801     		.2byte	0x1a8
 24998 0a7f 79040000 		.4byte	0x479
 24999 0a83 10       		.byte	0x10
 25000 0a84 12       		.uleb128 0x12
 25001 0a85 6A020000 		.4byte	.LASF184
 25002 0a89 08       		.byte	0x8
 25003 0a8a A901     		.2byte	0x1a9
 25004 0a8c 290B0000 		.4byte	0xb29
 25005 0a90 60       		.byte	0x60
 25006 0a91 13       		.uleb128 0x13
 25007 0a92 64657600 		.ascii	"dev\000"
 25008 0a96 08       		.byte	0x8
 25009 0a97 AA01     		.2byte	0x1aa
 25010 0a99 12050000 		.4byte	0x512
 25011 0a9d A0       		.byte	0xa0
 25012 0a9e 12       		.uleb128 0x12
 25013 0a9f 490F0000 		.4byte	.LASF185
 25014 0aa3 08       		.byte	0x8
 25015 0aa4 AB01     		.2byte	0x1ab
 25016 0aa6 390B0000 		.4byte	0xb39
 25017 0aaa B0       		.byte	0xb0
 25018 0aab 15       		.uleb128 0x15
 25019 0aac 656E6300 		.ascii	"enc\000"
 25020 0ab0 08       		.byte	0x8
 25021 0ab1 AC01     		.2byte	0x1ac
 25022 0ab3 490B0000 		.4byte	0xb49
 25023 0ab7 9001     		.2byte	0x190
 25024 0ab9 15       		.uleb128 0x15
 25025 0aba 656D6700 		.ascii	"emg\000"
 25026 0abe 08       		.byte	0x8
 25027 0abf AD01     		.2byte	0x1ad
 25028 0ac1 FE070000 		.4byte	0x7fe
 25029 0ac5 F001     		.2byte	0x1f0
 25030 0ac7 15       		.uleb128 0x15
 25031 0ac8 696D7500 		.ascii	"imu\000"
 25032 0acc 08       		.byte	0x8
 25033 0acd AE01     		.2byte	0x1ae
 25034 0acf 6D080000 		.4byte	0x86d
 25035 0ad3 0002     		.2byte	0x200
 25036 0ad5 15       		.uleb128 0x15
 25037 0ad6 65787000 		.ascii	"exp\000"
 25038 0ada 08       		.byte	0x8
 25039 0adb AF01     		.2byte	0x1af
 25040 0add C5080000 		.4byte	0x8c5
 25041 0ae1 2002     		.2byte	0x220
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 550


 25042 0ae3 16       		.uleb128 0x16
 25043 0ae4 50000000 		.4byte	.LASF186
 25044 0ae8 08       		.byte	0x8
 25045 0ae9 B001     		.2byte	0x1b0
 25046 0aeb 590B0000 		.4byte	0xb59
 25047 0aef 4002     		.2byte	0x240
 25048 0af1 15       		.uleb128 0x15
 25049 0af2 534800   		.ascii	"SH\000"
 25050 0af5 08       		.byte	0x8
 25051 0af6 B201     		.2byte	0x1b2
 25052 0af8 69090000 		.4byte	0x969
 25053 0afc A002     		.2byte	0x2a0
 25054 0afe 15       		.uleb128 0x15
 25055 0aff 4D5300   		.ascii	"MS\000"
 25056 0b02 08       		.byte	0x8
 25057 0b03 B301     		.2byte	0x1b3
 25058 0b05 B8090000 		.4byte	0x9b8
 25059 0b09 B002     		.2byte	0x2b0
 25060 0b0b 15       		.uleb128 0x15
 25061 0b0c 464200   		.ascii	"FB\000"
 25062 0b0f 08       		.byte	0x8
 25063 0b10 B401     		.2byte	0x1b4
 25064 0b12 FD090000 		.4byte	0x9fd
 25065 0b16 C002     		.2byte	0x2c0
 25066 0b18 00       		.byte	0
 25067 0b19 09       		.uleb128 0x9
 25068 0b1a 97000000 		.4byte	0x97
 25069 0b1e 290B0000 		.4byte	0xb29
 25070 0b22 0A       		.uleb128 0xa
 25071 0b23 18010000 		.4byte	0x118
 25072 0b27 0E       		.byte	0xe
 25073 0b28 00       		.byte	0
 25074 0b29 09       		.uleb128 0x9
 25075 0b2a 97000000 		.4byte	0x97
 25076 0b2e 390B0000 		.4byte	0xb39
 25077 0b32 0A       		.uleb128 0xa
 25078 0b33 18010000 		.4byte	0x118
 25079 0b37 3F       		.byte	0x3f
 25080 0b38 00       		.byte	0
 25081 0b39 09       		.uleb128 0x9
 25082 0b3a B1050000 		.4byte	0x5b1
 25083 0b3e 490B0000 		.4byte	0xb49
 25084 0b42 0A       		.uleb128 0xa
 25085 0b43 18010000 		.4byte	0x118
 25086 0b47 01       		.byte	0x1
 25087 0b48 00       		.byte	0
 25088 0b49 09       		.uleb128 0x9
 25089 0b4a 4B070000 		.4byte	0x74b
 25090 0b4e 590B0000 		.4byte	0xb59
 25091 0b52 0A       		.uleb128 0xa
 25092 0b53 18010000 		.4byte	0x118
 25093 0b57 01       		.byte	0x1
 25094 0b58 00       		.byte	0
 25095 0b59 09       		.uleb128 0x9
 25096 0b5a 34090000 		.4byte	0x934
 25097 0b5e 690B0000 		.4byte	0xb69
 25098 0b62 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 551


 25099 0b63 18010000 		.4byte	0x118
 25100 0b67 02       		.byte	0x2
 25101 0b68 00       		.byte	0
 25102 0b69 11       		.uleb128 0x11
 25103 0b6a 9B0C0000 		.4byte	.LASF187
 25104 0b6e 28       		.byte	0x28
 25105 0b6f 08       		.byte	0x8
 25106 0b70 C001     		.2byte	0x1c0
 25107 0b72 C50B0000 		.4byte	0xbc5
 25108 0b76 12       		.uleb128 0x12
 25109 0b77 50040000 		.4byte	.LASF188
 25110 0b7b 08       		.byte	0x8
 25111 0b7c C101     		.2byte	0x1c1
 25112 0b7e 97000000 		.4byte	0x97
 25113 0b82 00       		.byte	0
 25114 0b83 12       		.uleb128 0x12
 25115 0b84 B0020000 		.4byte	.LASF189
 25116 0b88 08       		.byte	0x8
 25117 0b89 C201     		.2byte	0x1c2
 25118 0b8b C50B0000 		.4byte	0xbc5
 25119 0b8f 02       		.byte	0x2
 25120 0b90 12       		.uleb128 0x12
 25121 0b91 C20B0000 		.4byte	.LASF190
 25122 0b95 08       		.byte	0x8
 25123 0b96 C301     		.2byte	0x1c3
 25124 0b98 C50B0000 		.4byte	0xbc5
 25125 0b9c 08       		.byte	0x8
 25126 0b9d 12       		.uleb128 0x12
 25127 0b9e A70C0000 		.4byte	.LASF191
 25128 0ba2 08       		.byte	0x8
 25129 0ba3 C401     		.2byte	0x1c4
 25130 0ba5 C50B0000 		.4byte	0xbc5
 25131 0ba9 0E       		.byte	0xe
 25132 0baa 12       		.uleb128 0x12
 25133 0bab 5E070000 		.4byte	.LASF192
 25134 0baf 08       		.byte	0x8
 25135 0bb0 C501     		.2byte	0x1c5
 25136 0bb2 D50B0000 		.4byte	0xbd5
 25137 0bb6 14       		.byte	0x14
 25138 0bb7 12       		.uleb128 0x12
 25139 0bb8 C3010000 		.4byte	.LASF193
 25140 0bbc 08       		.byte	0x8
 25141 0bbd C601     		.2byte	0x1c6
 25142 0bbf C7000000 		.4byte	0xc7
 25143 0bc3 24       		.byte	0x24
 25144 0bc4 00       		.byte	0
 25145 0bc5 09       		.uleb128 0x9
 25146 0bc6 C7000000 		.4byte	0xc7
 25147 0bca D50B0000 		.4byte	0xbd5
 25148 0bce 0A       		.uleb128 0xa
 25149 0bcf 18010000 		.4byte	0x118
 25150 0bd3 02       		.byte	0x2
 25151 0bd4 00       		.byte	0
 25152 0bd5 09       		.uleb128 0x9
 25153 0bd6 EB000000 		.4byte	0xeb
 25154 0bda E50B0000 		.4byte	0xbe5
 25155 0bde 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 552


 25156 0bdf 18010000 		.4byte	0x118
 25157 0be3 03       		.byte	0x3
 25158 0be4 00       		.byte	0
 25159 0be5 11       		.uleb128 0x11
 25160 0be6 72030000 		.4byte	.LASF194
 25161 0bea 06       		.byte	0x6
 25162 0beb 08       		.byte	0x8
 25163 0bec D601     		.2byte	0x1d6
 25164 0bee 270C0000 		.4byte	0xc27
 25165 0bf2 12       		.uleb128 0x12
 25166 0bf3 C5060000 		.4byte	.LASF195
 25167 0bf7 08       		.byte	0x8
 25168 0bf8 D701     		.2byte	0x1d7
 25169 0bfa 97000000 		.4byte	0x97
 25170 0bfe 00       		.byte	0
 25171 0bff 12       		.uleb128 0x12
 25172 0c00 55130000 		.4byte	.LASF196
 25173 0c04 08       		.byte	0x8
 25174 0c05 D801     		.2byte	0x1d8
 25175 0c07 97000000 		.4byte	0x97
 25176 0c0b 01       		.byte	0x1
 25177 0c0c 12       		.uleb128 0x12
 25178 0c0d B9050000 		.4byte	.LASF197
 25179 0c11 08       		.byte	0x8
 25180 0c12 D901     		.2byte	0x1d9
 25181 0c14 C7000000 		.4byte	0xc7
 25182 0c18 02       		.byte	0x2
 25183 0c19 12       		.uleb128 0x12
 25184 0c1a 4A090000 		.4byte	.LASF198
 25185 0c1e 08       		.byte	0x8
 25186 0c1f DA01     		.2byte	0x1da
 25187 0c21 C7000000 		.4byte	0xc7
 25188 0c25 04       		.byte	0x4
 25189 0c26 00       		.byte	0
 25190 0c27 17       		.uleb128 0x17
 25191 0c28 D30D0000 		.4byte	.LASF366
 25192 0c2c 02       		.byte	0x2
 25193 0c2d 1403     		.2byte	0x314
 25194 0c2f 8C000000 		.4byte	0x8c
 25195 0c33 03       		.byte	0x3
 25196 0c34 510C0000 		.4byte	0xc51
 25197 0c38 18       		.uleb128 0x18
 25198 0c39 4A040000 		.4byte	.LASF278
 25199 0c3d 02       		.byte	0x2
 25200 0c3e 1403     		.2byte	0x314
 25201 0c40 8C000000 		.4byte	0x8c
 25202 0c44 19       		.uleb128 0x19
 25203 0c45 CE010000 		.4byte	.LASF367
 25204 0c49 02       		.byte	0x2
 25205 0c4a 1603     		.2byte	0x316
 25206 0c4c 8C000000 		.4byte	0x8c
 25207 0c50 00       		.byte	0
 25208 0c51 1A       		.uleb128 0x1a
 25209 0c52 010F0000 		.4byte	.LASF199
 25210 0c56 01       		.byte	0x1
 25211 0c57 3D       		.byte	0x3d
 25212 0c58 00000000 		.4byte	.LFB64
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 553


 25213 0c5c DC040000 		.4byte	.LFE64-.LFB64
 25214 0c60 01       		.uleb128 0x1
 25215 0c61 9C       		.byte	0x9c
 25216 0c62 FB0C0000 		.4byte	0xcfb
 25217 0c66 1B       		.uleb128 0x1b
 25218 0c67 BF050000 		.4byte	.LASF201
 25219 0c6b 01       		.byte	0x1
 25220 0c6c 3F       		.byte	0x3f
 25221 0c6d 97000000 		.4byte	0x97
 25222 0c71 02       		.uleb128 0x2
 25223 0c72 91       		.byte	0x91
 25224 0c73 77       		.sleb128 -9
 25225 0c74 1C       		.uleb128 0x1c
 25226 0c75 270C0000 		.4byte	0xc27
 25227 0c79 36030000 		.4byte	.LBB8
 25228 0c7d 08000000 		.4byte	.LBE8-.LBB8
 25229 0c81 01       		.byte	0x1
 25230 0c82 96       		.byte	0x96
 25231 0c83 A20C0000 		.4byte	0xca2
 25232 0c87 1D       		.uleb128 0x1d
 25233 0c88 380C0000 		.4byte	0xc38
 25234 0c8c 02       		.uleb128 0x2
 25235 0c8d 91       		.byte	0x91
 25236 0c8e 68       		.sleb128 -24
 25237 0c8f 1E       		.uleb128 0x1e
 25238 0c90 36030000 		.4byte	.LBB9
 25239 0c94 08000000 		.4byte	.LBE9-.LBB9
 25240 0c98 1F       		.uleb128 0x1f
 25241 0c99 440C0000 		.4byte	0xc44
 25242 0c9d 02       		.uleb128 0x2
 25243 0c9e 91       		.byte	0x91
 25244 0c9f 64       		.sleb128 -28
 25245 0ca0 00       		.byte	0
 25246 0ca1 00       		.byte	0
 25247 0ca2 1C       		.uleb128 0x1c
 25248 0ca3 270C0000 		.4byte	0xc27
 25249 0ca7 54030000 		.4byte	.LBB10
 25250 0cab 08000000 		.4byte	.LBE10-.LBB10
 25251 0caf 01       		.byte	0x1
 25252 0cb0 A2       		.byte	0xa2
 25253 0cb1 D00C0000 		.4byte	0xcd0
 25254 0cb5 1D       		.uleb128 0x1d
 25255 0cb6 380C0000 		.4byte	0xc38
 25256 0cba 02       		.uleb128 0x2
 25257 0cbb 91       		.byte	0x91
 25258 0cbc 70       		.sleb128 -16
 25259 0cbd 1E       		.uleb128 0x1e
 25260 0cbe 54030000 		.4byte	.LBB11
 25261 0cc2 08000000 		.4byte	.LBE11-.LBB11
 25262 0cc6 1F       		.uleb128 0x1f
 25263 0cc7 440C0000 		.4byte	0xc44
 25264 0ccb 02       		.uleb128 0x2
 25265 0ccc 91       		.byte	0x91
 25266 0ccd 60       		.sleb128 -32
 25267 0cce 00       		.byte	0
 25268 0ccf 00       		.byte	0
 25269 0cd0 20       		.uleb128 0x20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 554


 25270 0cd1 270C0000 		.4byte	0xc27
 25271 0cd5 98040000 		.4byte	.LBB12
 25272 0cd9 08000000 		.4byte	.LBE12-.LBB12
 25273 0cdd 01       		.byte	0x1
 25274 0cde FE       		.byte	0xfe
 25275 0cdf 1D       		.uleb128 0x1d
 25276 0ce0 380C0000 		.4byte	0xc38
 25277 0ce4 02       		.uleb128 0x2
 25278 0ce5 91       		.byte	0x91
 25279 0ce6 6C       		.sleb128 -20
 25280 0ce7 1E       		.uleb128 0x1e
 25281 0ce8 98040000 		.4byte	.LBB13
 25282 0cec 08000000 		.4byte	.LBE13-.LBB13
 25283 0cf0 1F       		.uleb128 0x1f
 25284 0cf1 440C0000 		.4byte	0xc44
 25285 0cf5 02       		.uleb128 0x2
 25286 0cf6 91       		.byte	0x91
 25287 0cf7 5C       		.sleb128 -36
 25288 0cf8 00       		.byte	0
 25289 0cf9 00       		.byte	0
 25290 0cfa 00       		.byte	0
 25291 0cfb 21       		.uleb128 0x21
 25292 0cfc 00000000 		.4byte	.LASF200
 25293 0d00 01       		.byte	0x1
 25294 0d01 2501     		.2byte	0x125
 25295 0d03 00000000 		.4byte	.LFB65
 25296 0d07 22000000 		.4byte	.LFE65-.LFB65
 25297 0d0b 01       		.uleb128 0x1
 25298 0d0c 9C       		.byte	0x9c
 25299 0d0d 220D0000 		.4byte	0xd22
 25300 0d11 22       		.uleb128 0x22
 25301 0d12 D3040000 		.4byte	.LASF202
 25302 0d16 01       		.byte	0x1
 25303 0d17 2601     		.2byte	0x126
 25304 0d19 220D0000 		.4byte	0xd22
 25305 0d1d 03       		.uleb128 0x3
 25306 0d1e 91       		.byte	0x91
 25307 0d1f 9C74     		.sleb128 -1508
 25308 0d21 00       		.byte	0
 25309 0d22 09       		.uleb128 0x9
 25310 0d23 F9000000 		.4byte	0xf9
 25311 0d27 330D0000 		.4byte	0xd33
 25312 0d2b 23       		.uleb128 0x23
 25313 0d2c 18010000 		.4byte	0x118
 25314 0d30 DB05     		.2byte	0x5db
 25315 0d32 00       		.byte	0
 25316 0d33 21       		.uleb128 0x21
 25317 0d34 38120000 		.4byte	.LASF203
 25318 0d38 01       		.byte	0x1
 25319 0d39 3101     		.2byte	0x131
 25320 0d3b 00000000 		.4byte	.LFB66
 25321 0d3f 02010000 		.4byte	.LFE66-.LFB66
 25322 0d43 01       		.uleb128 0x1
 25323 0d44 9C       		.byte	0x9c
 25324 0d45 7C0D0000 		.4byte	0xd7c
 25325 0d49 24       		.uleb128 0x24
 25326 0d4a 9D110000 		.4byte	.LASF206
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 555


 25327 0d4e 01       		.byte	0x1
 25328 0d4f 3101     		.2byte	0x131
 25329 0d51 A3000000 		.4byte	0xa3
 25330 0d55 04       		.uleb128 0x4
 25331 0d56 91       		.byte	0x91
 25332 0d57 B6C47E   		.sleb128 -24010
 25333 0d5a 22       		.uleb128 0x22
 25334 0d5b D3040000 		.4byte	.LASF202
 25335 0d5f 01       		.byte	0x1
 25336 0d60 3201     		.2byte	0x132
 25337 0d62 7C0D0000 		.4byte	0xd7c
 25338 0d66 03       		.uleb128 0x3
 25339 0d67 91       		.byte	0x91
 25340 0d68 D860     		.sleb128 -4008
 25341 0d6a 22       		.uleb128 0x22
 25342 0d6b 2C070000 		.4byte	.LASF204
 25343 0d6f 01       		.byte	0x1
 25344 0d70 3301     		.2byte	0x133
 25345 0d72 8D0D0000 		.4byte	0xd8d
 25346 0d76 04       		.uleb128 0x4
 25347 0d77 91       		.byte	0x91
 25348 0d78 B8C47E   		.sleb128 -24008
 25349 0d7b 00       		.byte	0
 25350 0d7c 09       		.uleb128 0x9
 25351 0d7d F9000000 		.4byte	0xf9
 25352 0d81 8D0D0000 		.4byte	0xd8d
 25353 0d85 23       		.uleb128 0x23
 25354 0d86 18010000 		.4byte	0x118
 25355 0d8a 9F0F     		.2byte	0xf9f
 25356 0d8c 00       		.byte	0
 25357 0d8d 09       		.uleb128 0x9
 25358 0d8e F9000000 		.4byte	0xf9
 25359 0d92 9E0D0000 		.4byte	0xd9e
 25360 0d96 23       		.uleb128 0x23
 25361 0d97 18010000 		.4byte	0x118
 25362 0d9b 1F4E     		.2byte	0x4e1f
 25363 0d9d 00       		.byte	0
 25364 0d9e 21       		.uleb128 0x21
 25365 0d9f 93010000 		.4byte	.LASF205
 25366 0da3 01       		.byte	0x1
 25367 0da4 5601     		.2byte	0x156
 25368 0da6 00000000 		.4byte	.LFB67
 25369 0daa 84200000 		.4byte	.LFE67-.LFB67
 25370 0dae 01       		.uleb128 0x1
 25371 0daf 9C       		.byte	0x9c
 25372 0db0 420F0000 		.4byte	0xf42
 25373 0db4 24       		.uleb128 0x24
 25374 0db5 6E0B0000 		.4byte	.LASF207
 25375 0db9 01       		.byte	0x1
 25376 0dba 5601     		.2byte	0x156
 25377 0dbc 420F0000 		.4byte	0xf42
 25378 0dc0 03       		.uleb128 0x3
 25379 0dc1 91       		.byte	0x91
 25380 0dc2 9C67     		.sleb128 -3172
 25381 0dc4 24       		.uleb128 0x24
 25382 0dc5 11120000 		.4byte	.LASF208
 25383 0dc9 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 556


 25384 0dca 5601     		.2byte	0x156
 25385 0dcc 480F0000 		.4byte	0xf48
 25386 0dd0 03       		.uleb128 0x3
 25387 0dd1 91       		.byte	0x91
 25388 0dd2 9867     		.sleb128 -3176
 25389 0dd4 24       		.uleb128 0x24
 25390 0dd5 BC020000 		.4byte	.LASF209
 25391 0dd9 01       		.byte	0x1
 25392 0dda 5701     		.2byte	0x157
 25393 0ddc 480F0000 		.4byte	0xf48
 25394 0de0 03       		.uleb128 0x3
 25395 0de1 91       		.byte	0x91
 25396 0de2 9467     		.sleb128 -3180
 25397 0de4 24       		.uleb128 0x24
 25398 0de5 CF0A0000 		.4byte	.LASF210
 25399 0de9 01       		.byte	0x1
 25400 0dea 5701     		.2byte	0x157
 25401 0dec 480F0000 		.4byte	0xf48
 25402 0df0 03       		.uleb128 0x3
 25403 0df1 91       		.byte	0x91
 25404 0df2 9067     		.sleb128 -3184
 25405 0df4 24       		.uleb128 0x24
 25406 0df5 60110000 		.4byte	.LASF211
 25407 0df9 01       		.byte	0x1
 25408 0dfa 5801     		.2byte	0x158
 25409 0dfc 480F0000 		.4byte	0xf48
 25410 0e00 02       		.uleb128 0x2
 25411 0e01 91       		.byte	0x91
 25412 0e02 00       		.sleb128 0
 25413 0e03 24       		.uleb128 0x24
 25414 0e04 BA060000 		.4byte	.LASF212
 25415 0e08 01       		.byte	0x1
 25416 0e09 5801     		.2byte	0x158
 25417 0e0b 4E0F0000 		.4byte	0xf4e
 25418 0e0f 02       		.uleb128 0x2
 25419 0e10 91       		.byte	0x91
 25420 0e11 04       		.sleb128 4
 25421 0e12 24       		.uleb128 0x24
 25422 0e13 82090000 		.4byte	.LASF213
 25423 0e17 01       		.byte	0x1
 25424 0e18 5901     		.2byte	0x159
 25425 0e1a 480F0000 		.4byte	0xf48
 25426 0e1e 02       		.uleb128 0x2
 25427 0e1f 91       		.byte	0x91
 25428 0e20 08       		.sleb128 8
 25429 0e21 24       		.uleb128 0x24
 25430 0e22 3E070000 		.4byte	.LASF214
 25431 0e26 01       		.byte	0x1
 25432 0e27 5901     		.2byte	0x159
 25433 0e29 4E0F0000 		.4byte	0xf4e
 25434 0e2d 02       		.uleb128 0x2
 25435 0e2e 91       		.byte	0x91
 25436 0e2f 0C       		.sleb128 12
 25437 0e30 22       		.uleb128 0x22
 25438 0e31 26050000 		.4byte	.LASF215
 25439 0e35 01       		.byte	0x1
 25440 0e36 5C01     		.2byte	0x15c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 557


 25441 0e38 540F0000 		.4byte	0xf54
 25442 0e3c 03       		.uleb128 0x3
 25443 0e3d 91       		.byte	0x91
 25444 0e3e E867     		.sleb128 -3096
 25445 0e40 22       		.uleb128 0x22
 25446 0e41 C5000000 		.4byte	.LASF216
 25447 0e45 01       		.byte	0x1
 25448 0e46 5D01     		.2byte	0x15d
 25449 0e48 A3000000 		.4byte	0xa3
 25450 0e4c 02       		.uleb128 0x2
 25451 0e4d 91       		.byte	0x91
 25452 0e4e 60       		.sleb128 -32
 25453 0e4f 25       		.uleb128 0x25
 25454 0e50 6900     		.ascii	"i\000"
 25455 0e52 01       		.byte	0x1
 25456 0e53 6001     		.2byte	0x160
 25457 0e55 97000000 		.4byte	0x97
 25458 0e59 02       		.uleb128 0x2
 25459 0e5a 91       		.byte	0x91
 25460 0e5b 67       		.sleb128 -25
 25461 0e5c 25       		.uleb128 0x25
 25462 0e5d 6A00     		.ascii	"j\000"
 25463 0e5f 01       		.byte	0x1
 25464 0e60 6001     		.2byte	0x160
 25465 0e62 97000000 		.4byte	0x97
 25466 0e66 02       		.uleb128 0x2
 25467 0e67 91       		.byte	0x91
 25468 0e68 66       		.sleb128 -26
 25469 0e69 25       		.uleb128 0x25
 25470 0e6a 69647800 		.ascii	"idx\000"
 25471 0e6e 01       		.byte	0x1
 25472 0e6f 6101     		.2byte	0x161
 25473 0e71 97000000 		.4byte	0x97
 25474 0e75 02       		.uleb128 0x2
 25475 0e76 91       		.byte	0x91
 25476 0e77 65       		.sleb128 -27
 25477 0e78 22       		.uleb128 0x22
 25478 0e79 400F0000 		.4byte	.LASF217
 25479 0e7d 01       		.byte	0x1
 25480 0e7e 6201     		.2byte	0x162
 25481 0e80 97000000 		.4byte	0x97
 25482 0e84 02       		.uleb128 0x2
 25483 0e85 91       		.byte	0x91
 25484 0e86 64       		.sleb128 -28
 25485 0e87 25       		.uleb128 0x25
 25486 0e88 736F6400 		.ascii	"sod\000"
 25487 0e8c 01       		.byte	0x1
 25488 0e8d 6301     		.2byte	0x163
 25489 0e8f 97000000 		.4byte	0x97
 25490 0e93 02       		.uleb128 0x2
 25491 0e94 91       		.byte	0x91
 25492 0e95 63       		.sleb128 -29
 25493 0e96 22       		.uleb128 0x22
 25494 0e97 A00A0000 		.4byte	.LASF218
 25495 0e9b 01       		.byte	0x1
 25496 0e9c 6401     		.2byte	0x164
 25497 0e9e 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 558


 25498 0ea2 02       		.uleb128 0x2
 25499 0ea3 91       		.byte	0x91
 25500 0ea4 62       		.sleb128 -30
 25501 0ea5 22       		.uleb128 0x22
 25502 0ea6 3B130000 		.4byte	.LASF219
 25503 0eaa 01       		.byte	0x1
 25504 0eab 6501     		.2byte	0x165
 25505 0ead 650F0000 		.4byte	0xf65
 25506 0eb1 03       		.uleb128 0x3
 25507 0eb2 91       		.byte	0x91
 25508 0eb3 B467     		.sleb128 -3148
 25509 0eb5 22       		.uleb128 0x22
 25510 0eb6 48110000 		.4byte	.LASF220
 25511 0eba 01       		.byte	0x1
 25512 0ebb 6601     		.2byte	0x166
 25513 0ebd EB000000 		.4byte	0xeb
 25514 0ec1 03       		.uleb128 0x3
 25515 0ec2 91       		.byte	0x91
 25516 0ec3 B067     		.sleb128 -3152
 25517 0ec5 22       		.uleb128 0x22
 25518 0ec6 C80F0000 		.4byte	.LASF221
 25519 0eca 01       		.byte	0x1
 25520 0ecb 6701     		.2byte	0x167
 25521 0ecd C7000000 		.4byte	0xc7
 25522 0ed1 03       		.uleb128 0x3
 25523 0ed2 91       		.byte	0x91
 25524 0ed3 AE67     		.sleb128 -3154
 25525 0ed5 22       		.uleb128 0x22
 25526 0ed6 F70A0000 		.4byte	.LASF222
 25527 0eda 01       		.byte	0x1
 25528 0edb 6801     		.2byte	0x168
 25529 0edd A3000000 		.4byte	0xa3
 25530 0ee1 03       		.uleb128 0x3
 25531 0ee2 91       		.byte	0x91
 25532 0ee3 AC67     		.sleb128 -3156
 25533 0ee5 22       		.uleb128 0x22
 25534 0ee6 69110000 		.4byte	.LASF223
 25535 0eea 01       		.byte	0x1
 25536 0eeb 6901     		.2byte	0x169
 25537 0eed D3000000 		.4byte	0xd3
 25538 0ef1 03       		.uleb128 0x3
 25539 0ef2 91       		.byte	0x91
 25540 0ef3 A867     		.sleb128 -3160
 25541 0ef5 22       		.uleb128 0x22
 25542 0ef6 7B0C0000 		.4byte	.LASF224
 25543 0efa 01       		.byte	0x1
 25544 0efb 6A01     		.2byte	0x16a
 25545 0efd AF000000 		.4byte	0xaf
 25546 0f01 03       		.uleb128 0x3
 25547 0f02 91       		.byte	0x91
 25548 0f03 A467     		.sleb128 -3164
 25549 0f05 22       		.uleb128 0x22
 25550 0f06 1E0C0000 		.4byte	.LASF225
 25551 0f0a 01       		.byte	0x1
 25552 0f0b 6C01     		.2byte	0x16c
 25553 0f0d 97000000 		.4byte	0x97
 25554 0f11 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 559


 25555 0f12 91       		.byte	0x91
 25556 0f13 5F       		.sleb128 -33
 25557 0f14 22       		.uleb128 0x22
 25558 0f15 F4000000 		.4byte	.LASF226
 25559 0f19 01       		.byte	0x1
 25560 0f1a 6D01     		.2byte	0x16d
 25561 0f1c 97000000 		.4byte	0x97
 25562 0f20 02       		.uleb128 0x2
 25563 0f21 91       		.byte	0x91
 25564 0f22 5E       		.sleb128 -34
 25565 0f23 22       		.uleb128 0x22
 25566 0f24 B5090000 		.4byte	.LASF227
 25567 0f28 01       		.byte	0x1
 25568 0f29 6F01     		.2byte	0x16f
 25569 0f2b 480F0000 		.4byte	0xf48
 25570 0f2f 02       		.uleb128 0x2
 25571 0f30 91       		.byte	0x91
 25572 0f31 58       		.sleb128 -40
 25573 0f32 22       		.uleb128 0x22
 25574 0f33 88010000 		.4byte	.LASF228
 25575 0f37 01       		.byte	0x1
 25576 0f38 7001     		.2byte	0x170
 25577 0f3a 480F0000 		.4byte	0xf48
 25578 0f3e 02       		.uleb128 0x2
 25579 0f3f 91       		.byte	0x91
 25580 0f40 54       		.sleb128 -44
 25581 0f41 00       		.byte	0
 25582 0f42 07       		.uleb128 0x7
 25583 0f43 04       		.byte	0x4
 25584 0f44 480F0000 		.4byte	0xf48
 25585 0f48 07       		.uleb128 0x7
 25586 0f49 04       		.byte	0x4
 25587 0f4a 97000000 		.4byte	0x97
 25588 0f4e 07       		.uleb128 0x7
 25589 0f4f 04       		.byte	0x4
 25590 0f50 25010000 		.4byte	0x125
 25591 0f54 09       		.uleb128 0x9
 25592 0f55 97000000 		.4byte	0x97
 25593 0f59 650F0000 		.4byte	0xf65
 25594 0f5d 23       		.uleb128 0x23
 25595 0f5e 18010000 		.4byte	0x118
 25596 0f62 E90B     		.2byte	0xbe9
 25597 0f64 00       		.byte	0
 25598 0f65 09       		.uleb128 0x9
 25599 0f66 F9000000 		.4byte	0xf9
 25600 0f6a 750F0000 		.4byte	0xf75
 25601 0f6e 0A       		.uleb128 0xa
 25602 0f6f 18010000 		.4byte	0x118
 25603 0f73 31       		.byte	0x31
 25604 0f74 00       		.byte	0
 25605 0f75 21       		.uleb128 0x21
 25606 0f76 750D0000 		.4byte	.LASF229
 25607 0f7a 01       		.byte	0x1
 25608 0f7b 3103     		.2byte	0x331
 25609 0f7d 00000000 		.4byte	.LFB68
 25610 0f81 C0170000 		.4byte	.LFE68-.LFB68
 25611 0f85 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 560


 25612 0f86 9C       		.byte	0x9c
 25613 0f87 43110000 		.4byte	0x1143
 25614 0f8b 24       		.uleb128 0x24
 25615 0f8c 17060000 		.4byte	.LASF230
 25616 0f90 01       		.byte	0x1
 25617 0f91 3103     		.2byte	0x331
 25618 0f93 A3000000 		.4byte	0xa3
 25619 0f97 03       		.uleb128 0x3
 25620 0f98 91       		.byte	0x91
 25621 0f99 8E76     		.sleb128 -1266
 25622 0f9b 25       		.uleb128 0x25
 25623 0f9c 6900     		.ascii	"i\000"
 25624 0f9e 01       		.byte	0x1
 25625 0f9f 3203     		.2byte	0x332
 25626 0fa1 97000000 		.4byte	0x97
 25627 0fa5 02       		.uleb128 0x2
 25628 0fa6 91       		.byte	0x91
 25629 0fa7 6F       		.sleb128 -17
 25630 0fa8 25       		.uleb128 0x25
 25631 0fa9 6A00     		.ascii	"j\000"
 25632 0fab 01       		.byte	0x1
 25633 0fac 3203     		.2byte	0x332
 25634 0fae 97000000 		.4byte	0x97
 25635 0fb2 02       		.uleb128 0x2
 25636 0fb3 91       		.byte	0x91
 25637 0fb4 6E       		.sleb128 -18
 25638 0fb5 25       		.uleb128 0x25
 25639 0fb6 736F6400 		.ascii	"sod\000"
 25640 0fba 01       		.byte	0x1
 25641 0fbb 3303     		.2byte	0x333
 25642 0fbd 97000000 		.4byte	0x97
 25643 0fc1 02       		.uleb128 0x2
 25644 0fc2 91       		.byte	0x91
 25645 0fc3 6D       		.sleb128 -19
 25646 0fc4 22       		.uleb128 0x22
 25647 0fc5 A2090000 		.4byte	.LASF231
 25648 0fc9 01       		.byte	0x1
 25649 0fca 3403     		.2byte	0x334
 25650 0fcc 97000000 		.4byte	0x97
 25651 0fd0 02       		.uleb128 0x2
 25652 0fd1 91       		.byte	0x91
 25653 0fd2 62       		.sleb128 -30
 25654 0fd3 22       		.uleb128 0x22
 25655 0fd4 C80F0000 		.4byte	.LASF221
 25656 0fd8 01       		.byte	0x1
 25657 0fd9 3503     		.2byte	0x335
 25658 0fdb C7000000 		.4byte	0xc7
 25659 0fdf 02       		.uleb128 0x2
 25660 0fe0 91       		.byte	0x91
 25661 0fe1 60       		.sleb128 -32
 25662 0fe2 22       		.uleb128 0x22
 25663 0fe3 F70A0000 		.4byte	.LASF222
 25664 0fe7 01       		.byte	0x1
 25665 0fe8 3603     		.2byte	0x336
 25666 0fea A3000000 		.4byte	0xa3
 25667 0fee 02       		.uleb128 0x2
 25668 0fef 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 561


 25669 0ff0 5E       		.sleb128 -34
 25670 0ff1 22       		.uleb128 0x22
 25671 0ff2 69110000 		.4byte	.LASF223
 25672 0ff6 01       		.byte	0x1
 25673 0ff7 3703     		.2byte	0x337
 25674 0ff9 D3000000 		.4byte	0xd3
 25675 0ffd 02       		.uleb128 0x2
 25676 0ffe 91       		.byte	0x91
 25677 0fff 58       		.sleb128 -40
 25678 1000 22       		.uleb128 0x22
 25679 1001 7B0C0000 		.4byte	.LASF224
 25680 1005 01       		.byte	0x1
 25681 1006 3803     		.2byte	0x338
 25682 1008 AF000000 		.4byte	0xaf
 25683 100c 02       		.uleb128 0x2
 25684 100d 91       		.byte	0x91
 25685 100e 54       		.sleb128 -44
 25686 100f 22       		.uleb128 0x22
 25687 1010 48110000 		.4byte	.LASF220
 25688 1014 01       		.byte	0x1
 25689 1015 3903     		.2byte	0x339
 25690 1017 EB000000 		.4byte	0xeb
 25691 101b 02       		.uleb128 0x2
 25692 101c 91       		.byte	0x91
 25693 101d 50       		.sleb128 -48
 25694 101e 22       		.uleb128 0x22
 25695 101f 1E0C0000 		.4byte	.LASF225
 25696 1023 01       		.byte	0x1
 25697 1024 3B03     		.2byte	0x33b
 25698 1026 97000000 		.4byte	0x97
 25699 102a 02       		.uleb128 0x2
 25700 102b 91       		.byte	0x91
 25701 102c 65       		.sleb128 -27
 25702 102d 22       		.uleb128 0x22
 25703 102e F4000000 		.4byte	.LASF226
 25704 1032 01       		.byte	0x1
 25705 1033 3C03     		.2byte	0x33c
 25706 1035 97000000 		.4byte	0x97
 25707 1039 02       		.uleb128 0x2
 25708 103a 91       		.byte	0x91
 25709 103b 64       		.sleb128 -28
 25710 103c 22       		.uleb128 0x22
 25711 103d D2020000 		.4byte	.LASF232
 25712 1041 01       		.byte	0x1
 25713 1042 3F03     		.2byte	0x33f
 25714 1044 43110000 		.4byte	0x1143
 25715 1048 02       		.uleb128 0x2
 25716 1049 91       		.byte	0x91
 25717 104a 68       		.sleb128 -24
 25718 104b 22       		.uleb128 0x22
 25719 104c 6E0B0000 		.4byte	.LASF207
 25720 1050 01       		.byte	0x1
 25721 1051 4703     		.2byte	0x347
 25722 1053 49110000 		.4byte	0x1149
 25723 1057 03       		.uleb128 0x3
 25724 1058 91       		.byte	0x91
 25725 1059 A07D     		.sleb128 -352
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 562


 25726 105b 22       		.uleb128 0x22
 25727 105c 11120000 		.4byte	.LASF208
 25728 1060 01       		.byte	0x1
 25729 1061 9B03     		.2byte	0x39b
 25730 1063 59110000 		.4byte	0x1159
 25731 1067 03       		.uleb128 0x3
 25732 1068 91       		.byte	0x91
 25733 1069 D47C     		.sleb128 -428
 25734 106b 22       		.uleb128 0x22
 25735 106c BC020000 		.4byte	.LASF209
 25736 1070 01       		.byte	0x1
 25737 1071 B303     		.2byte	0x3b3
 25738 1073 59110000 		.4byte	0x1159
 25739 1077 03       		.uleb128 0x3
 25740 1078 91       		.byte	0x91
 25741 1079 887C     		.sleb128 -504
 25742 107b 22       		.uleb128 0x22
 25743 107c CF0A0000 		.4byte	.LASF210
 25744 1080 01       		.byte	0x1
 25745 1081 CB03     		.2byte	0x3cb
 25746 1083 59110000 		.4byte	0x1159
 25747 1087 03       		.uleb128 0x3
 25748 1088 91       		.byte	0x91
 25749 1089 BC7B     		.sleb128 -580
 25750 108b 22       		.uleb128 0x22
 25751 108c BA060000 		.4byte	.LASF212
 25752 1090 01       		.byte	0x1
 25753 1091 E303     		.2byte	0x3e3
 25754 1093 69110000 		.4byte	0x1169
 25755 1097 03       		.uleb128 0x3
 25756 1098 91       		.byte	0x91
 25757 1099 8C79     		.sleb128 -884
 25758 109b 22       		.uleb128 0x22
 25759 109c 90120000 		.4byte	.LASF233
 25760 10a0 01       		.byte	0x1
 25761 10a1 FC03     		.2byte	0x3fc
 25762 10a3 79110000 		.4byte	0x1179
 25763 10a7 03       		.uleb128 0x3
 25764 10a8 91       		.byte	0x91
 25765 10a9 9478     		.sleb128 -1004
 25766 10ab 22       		.uleb128 0x22
 25767 10ac 3E070000 		.4byte	.LASF214
 25768 10b0 01       		.byte	0x1
 25769 10b1 FF03     		.2byte	0x3ff
 25770 10b3 89110000 		.4byte	0x1189
 25771 10b7 03       		.uleb128 0x3
 25772 10b8 91       		.byte	0x91
 25773 10b9 EC77     		.sleb128 -1044
 25774 10bb 22       		.uleb128 0x22
 25775 10bc 60110000 		.4byte	.LASF211
 25776 10c0 01       		.byte	0x1
 25777 10c1 0C04     		.2byte	0x40c
 25778 10c3 99110000 		.4byte	0x1199
 25779 10c7 03       		.uleb128 0x3
 25780 10c8 91       		.byte	0x91
 25781 10c9 CC77     		.sleb128 -1076
 25782 10cb 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 563


 25783 10cc 740B0000 		.4byte	.LASF234
 25784 10d0 01       		.byte	0x1
 25785 10d1 0D04     		.2byte	0x40d
 25786 10d3 A9110000 		.4byte	0x11a9
 25787 10d7 03       		.uleb128 0x3
 25788 10d8 91       		.byte	0x91
 25789 10d9 C077     		.sleb128 -1088
 25790 10db 22       		.uleb128 0x22
 25791 10dc B90A0000 		.4byte	.LASF235
 25792 10e0 01       		.byte	0x1
 25793 10e1 0E04     		.2byte	0x40e
 25794 10e3 B9110000 		.4byte	0x11b9
 25795 10e7 03       		.uleb128 0x3
 25796 10e8 91       		.byte	0x91
 25797 10e9 AC77     		.sleb128 -1108
 25798 10eb 22       		.uleb128 0x22
 25799 10ec 8D0C0000 		.4byte	.LASF236
 25800 10f0 01       		.byte	0x1
 25801 10f1 0F04     		.2byte	0x40f
 25802 10f3 97000000 		.4byte	0x97
 25803 10f7 02       		.uleb128 0x2
 25804 10f8 91       		.byte	0x91
 25805 10f9 63       		.sleb128 -29
 25806 10fa 22       		.uleb128 0x22
 25807 10fb 82090000 		.4byte	.LASF213
 25808 10ff 01       		.byte	0x1
 25809 1100 1804     		.2byte	0x418
 25810 1102 59110000 		.4byte	0x1159
 25811 1106 03       		.uleb128 0x3
 25812 1107 91       		.byte	0x91
 25813 1108 E076     		.sleb128 -1184
 25814 110a 22       		.uleb128 0x22
 25815 110b B7120000 		.4byte	.LASF237
 25816 110f 01       		.byte	0x1
 25817 1110 2304     		.2byte	0x423
 25818 1112 59110000 		.4byte	0x1159
 25819 1116 03       		.uleb128 0x3
 25820 1117 91       		.byte	0x91
 25821 1118 9476     		.sleb128 -1260
 25822 111a 1E       		.uleb128 0x1e
 25823 111b 2A170000 		.4byte	.LBB14
 25824 111f 86000000 		.4byte	.LBE14-.LBB14
 25825 1123 25       		.uleb128 0x25
 25826 1124 69647800 		.ascii	"idx\000"
 25827 1128 01       		.byte	0x1
 25828 1129 8C04     		.2byte	0x48c
 25829 112b 97000000 		.4byte	0x97
 25830 112f 02       		.uleb128 0x2
 25831 1130 91       		.byte	0x91
 25832 1131 67       		.sleb128 -25
 25833 1132 22       		.uleb128 0x22
 25834 1133 8A040000 		.4byte	.LASF238
 25835 1137 01       		.byte	0x1
 25836 1138 8C04     		.2byte	0x48c
 25837 113a 97000000 		.4byte	0x97
 25838 113e 02       		.uleb128 0x2
 25839 113f 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 564


 25840 1140 66       		.sleb128 -26
 25841 1141 00       		.byte	0
 25842 1142 00       		.byte	0
 25843 1143 07       		.uleb128 0x7
 25844 1144 04       		.byte	0x4
 25845 1145 4F0A0000 		.4byte	0xa4f
 25846 1149 09       		.uleb128 0x9
 25847 114a 480F0000 		.4byte	0xf48
 25848 114e 59110000 		.4byte	0x1159
 25849 1152 0A       		.uleb128 0xa
 25850 1153 18010000 		.4byte	0x118
 25851 1157 4B       		.byte	0x4b
 25852 1158 00       		.byte	0
 25853 1159 09       		.uleb128 0x9
 25854 115a 97000000 		.4byte	0x97
 25855 115e 69110000 		.4byte	0x1169
 25856 1162 0A       		.uleb128 0xa
 25857 1163 18010000 		.4byte	0x118
 25858 1167 4B       		.byte	0x4b
 25859 1168 00       		.byte	0
 25860 1169 09       		.uleb128 0x9
 25861 116a 25010000 		.4byte	0x125
 25862 116e 79110000 		.4byte	0x1179
 25863 1172 0A       		.uleb128 0xa
 25864 1173 18010000 		.4byte	0x118
 25865 1177 4B       		.byte	0x4b
 25866 1178 00       		.byte	0
 25867 1179 09       		.uleb128 0x9
 25868 117a F9000000 		.4byte	0xf9
 25869 117e 89110000 		.4byte	0x1189
 25870 1182 0A       		.uleb128 0xa
 25871 1183 18010000 		.4byte	0x118
 25872 1187 75       		.byte	0x75
 25873 1188 00       		.byte	0
 25874 1189 09       		.uleb128 0x9
 25875 118a 25010000 		.4byte	0x125
 25876 118e 99110000 		.4byte	0x1199
 25877 1192 0A       		.uleb128 0xa
 25878 1193 18010000 		.4byte	0x118
 25879 1197 09       		.byte	0x9
 25880 1198 00       		.byte	0
 25881 1199 09       		.uleb128 0x9
 25882 119a 97000000 		.4byte	0x97
 25883 119e A9110000 		.4byte	0x11a9
 25884 11a2 0A       		.uleb128 0xa
 25885 11a3 18010000 		.4byte	0x118
 25886 11a7 1C       		.byte	0x1c
 25887 11a8 00       		.byte	0
 25888 11a9 09       		.uleb128 0x9
 25889 11aa 97000000 		.4byte	0x97
 25890 11ae B9110000 		.4byte	0x11b9
 25891 11b2 0A       		.uleb128 0xa
 25892 11b3 18010000 		.4byte	0x118
 25893 11b7 08       		.byte	0x8
 25894 11b8 00       		.byte	0
 25895 11b9 09       		.uleb128 0x9
 25896 11ba 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 565


 25897 11be C9110000 		.4byte	0x11c9
 25898 11c2 0A       		.uleb128 0xa
 25899 11c3 18010000 		.4byte	0x118
 25900 11c7 11       		.byte	0x11
 25901 11c8 00       		.byte	0
 25902 11c9 21       		.uleb128 0x21
 25903 11ca 44030000 		.4byte	.LASF239
 25904 11ce 01       		.byte	0x1
 25905 11cf 9D04     		.2byte	0x49d
 25906 11d1 00000000 		.4byte	.LFB69
 25907 11d5 18140000 		.4byte	.LFE69-.LFB69
 25908 11d9 01       		.uleb128 0x1
 25909 11da 9C       		.byte	0x9c
 25910 11db 6B120000 		.4byte	0x126b
 25911 11df 24       		.uleb128 0x24
 25912 11e0 17060000 		.4byte	.LASF230
 25913 11e4 01       		.byte	0x1
 25914 11e5 9D04     		.2byte	0x49d
 25915 11e7 A3000000 		.4byte	0xa3
 25916 11eb 02       		.uleb128 0x2
 25917 11ec 91       		.byte	0x91
 25918 11ed 56       		.sleb128 -42
 25919 11ee 25       		.uleb128 0x25
 25920 11ef 6900     		.ascii	"i\000"
 25921 11f1 01       		.byte	0x1
 25922 11f2 9F04     		.2byte	0x49f
 25923 11f4 97000000 		.4byte	0x97
 25924 11f8 02       		.uleb128 0x2
 25925 11f9 91       		.byte	0x91
 25926 11fa 67       		.sleb128 -25
 25927 11fb 25       		.uleb128 0x25
 25928 11fc 6A00     		.ascii	"j\000"
 25929 11fe 01       		.byte	0x1
 25930 11ff 9F04     		.2byte	0x49f
 25931 1201 97000000 		.4byte	0x97
 25932 1205 02       		.uleb128 0x2
 25933 1206 91       		.byte	0x91
 25934 1207 66       		.sleb128 -26
 25935 1208 22       		.uleb128 0x22
 25936 1209 DA0A0000 		.4byte	.LASF240
 25937 120d 01       		.byte	0x1
 25938 120e A004     		.2byte	0x4a0
 25939 1210 97000000 		.4byte	0x97
 25940 1214 02       		.uleb128 0x2
 25941 1215 91       		.byte	0x91
 25942 1216 62       		.sleb128 -30
 25943 1217 22       		.uleb128 0x22
 25944 1218 48110000 		.4byte	.LASF220
 25945 121c 01       		.byte	0x1
 25946 121d A104     		.2byte	0x4a1
 25947 121f EB000000 		.4byte	0xeb
 25948 1223 02       		.uleb128 0x2
 25949 1224 91       		.byte	0x91
 25950 1225 5C       		.sleb128 -36
 25951 1226 22       		.uleb128 0x22
 25952 1227 1D030000 		.4byte	.LASF241
 25953 122b 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 566


 25954 122c A104     		.2byte	0x4a1
 25955 122e EB000000 		.4byte	0xeb
 25956 1232 02       		.uleb128 0x2
 25957 1233 91       		.byte	0x91
 25958 1234 58       		.sleb128 -40
 25959 1235 22       		.uleb128 0x22
 25960 1236 1E0C0000 		.4byte	.LASF225
 25961 123a 01       		.byte	0x1
 25962 123b A304     		.2byte	0x4a3
 25963 123d 97000000 		.4byte	0x97
 25964 1241 02       		.uleb128 0x2
 25965 1242 91       		.byte	0x91
 25966 1243 64       		.sleb128 -28
 25967 1244 22       		.uleb128 0x22
 25968 1245 F4000000 		.4byte	.LASF226
 25969 1249 01       		.byte	0x1
 25970 124a A404     		.2byte	0x4a4
 25971 124c 97000000 		.4byte	0x97
 25972 1250 02       		.uleb128 0x2
 25973 1251 91       		.byte	0x91
 25974 1252 63       		.sleb128 -29
 25975 1253 1E       		.uleb128 0x1e
 25976 1254 F40A0000 		.4byte	.LBB15
 25977 1258 26000000 		.4byte	.LBE15-.LBB15
 25978 125c 25       		.uleb128 0x25
 25979 125d 6900     		.ascii	"i\000"
 25980 125f 01       		.byte	0x1
 25981 1260 4B05     		.2byte	0x54b
 25982 1262 97000000 		.4byte	0x97
 25983 1266 02       		.uleb128 0x2
 25984 1267 91       		.byte	0x91
 25985 1268 65       		.sleb128 -27
 25986 1269 00       		.byte	0
 25987 126a 00       		.byte	0
 25988 126b 21       		.uleb128 0x21
 25989 126c C9070000 		.4byte	.LASF242
 25990 1270 01       		.byte	0x1
 25991 1271 E405     		.2byte	0x5e4
 25992 1273 00000000 		.4byte	.LFB70
 25993 1277 F40D0000 		.4byte	.LFE70-.LFB70
 25994 127b 01       		.uleb128 0x1
 25995 127c 9C       		.byte	0x9c
 25996 127d FA130000 		.4byte	0x13fa
 25997 1281 24       		.uleb128 0x24
 25998 1282 17060000 		.4byte	.LASF230
 25999 1286 01       		.byte	0x1
 26000 1287 E405     		.2byte	0x5e4
 26001 1289 A3000000 		.4byte	0xa3
 26002 128d 03       		.uleb128 0x3
 26003 128e 91       		.byte	0x91
 26004 128f CE72     		.sleb128 -1714
 26005 1291 22       		.uleb128 0x22
 26006 1292 26050000 		.4byte	.LASF215
 26007 1296 01       		.byte	0x1
 26008 1297 E705     		.2byte	0x5e7
 26009 1299 FA130000 		.4byte	0x13fa
 26010 129d 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 567


 26011 129e 91       		.byte	0x91
 26012 129f DC74     		.sleb128 -1444
 26013 12a1 22       		.uleb128 0x22
 26014 12a2 B50F0000 		.4byte	.LASF243
 26015 12a6 01       		.byte	0x1
 26016 12a7 EE05     		.2byte	0x5ee
 26017 12a9 A3000000 		.4byte	0xa3
 26018 12ad 02       		.uleb128 0x2
 26019 12ae 91       		.byte	0x91
 26020 12af 62       		.sleb128 -30
 26021 12b0 22       		.uleb128 0x22
 26022 12b1 9E040000 		.4byte	.LASF244
 26023 12b5 01       		.byte	0x1
 26024 12b6 EF05     		.2byte	0x5ef
 26025 12b8 A3000000 		.4byte	0xa3
 26026 12bc 02       		.uleb128 0x2
 26027 12bd 91       		.byte	0x91
 26028 12be 6E       		.sleb128 -18
 26029 12bf 22       		.uleb128 0x22
 26030 12c0 EA070000 		.4byte	.LASF245
 26031 12c4 01       		.byte	0x1
 26032 12c5 F005     		.2byte	0x5f0
 26033 12c7 A3000000 		.4byte	0xa3
 26034 12cb 02       		.uleb128 0x2
 26035 12cc 91       		.byte	0x91
 26036 12cd 60       		.sleb128 -32
 26037 12ce 22       		.uleb128 0x22
 26038 12cf 69070000 		.4byte	.LASF246
 26039 12d3 01       		.byte	0x1
 26040 12d4 F105     		.2byte	0x5f1
 26041 12d6 A3000000 		.4byte	0xa3
 26042 12da 02       		.uleb128 0x2
 26043 12db 91       		.byte	0x91
 26044 12dc 5E       		.sleb128 -34
 26045 12dd 25       		.uleb128 0x25
 26046 12de 6900     		.ascii	"i\000"
 26047 12e0 01       		.byte	0x1
 26048 12e1 F905     		.2byte	0x5f9
 26049 12e3 A3000000 		.4byte	0xa3
 26050 12e7 02       		.uleb128 0x2
 26051 12e8 91       		.byte	0x91
 26052 12e9 6C       		.sleb128 -20
 26053 12ea 25       		.uleb128 0x25
 26054 12eb 6A00     		.ascii	"j\000"
 26055 12ed 01       		.byte	0x1
 26056 12ee F905     		.2byte	0x5f9
 26057 12f0 A3000000 		.4byte	0xa3
 26058 12f4 02       		.uleb128 0x2
 26059 12f5 91       		.byte	0x91
 26060 12f6 6A       		.sleb128 -22
 26061 12f7 25       		.uleb128 0x25
 26062 12f8 6B00     		.ascii	"k\000"
 26063 12fa 01       		.byte	0x1
 26064 12fb F905     		.2byte	0x5f9
 26065 12fd A3000000 		.4byte	0xa3
 26066 1301 02       		.uleb128 0x2
 26067 1302 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 568


 26068 1303 68       		.sleb128 -24
 26069 1304 25       		.uleb128 0x25
 26070 1305 6800     		.ascii	"h\000"
 26071 1307 01       		.byte	0x1
 26072 1308 F905     		.2byte	0x5f9
 26073 130a A3000000 		.4byte	0xa3
 26074 130e 02       		.uleb128 0x2
 26075 130f 91       		.byte	0x91
 26076 1310 66       		.sleb128 -26
 26077 1311 22       		.uleb128 0x22
 26078 1312 93040000 		.4byte	.LASF247
 26079 1316 01       		.byte	0x1
 26080 1317 FA05     		.2byte	0x5fa
 26081 1319 A3000000 		.4byte	0xa3
 26082 131d 02       		.uleb128 0x2
 26083 131e 91       		.byte	0x91
 26084 131f 5C       		.sleb128 -36
 26085 1320 22       		.uleb128 0x22
 26086 1321 330C0000 		.4byte	.LASF248
 26087 1325 01       		.byte	0x1
 26088 1326 FD05     		.2byte	0x5fd
 26089 1328 30010000 		.4byte	0x130
 26090 132c 03       		.uleb128 0x3
 26091 132d 91       		.byte	0x91
 26092 132e C074     		.sleb128 -1472
 26093 1330 22       		.uleb128 0x22
 26094 1331 7C0F0000 		.4byte	.LASF249
 26095 1335 01       		.byte	0x1
 26096 1336 FE05     		.2byte	0x5fe
 26097 1338 0B140000 		.4byte	0x140b
 26098 133c 03       		.uleb128 0x3
 26099 133d 91       		.byte	0x91
 26100 133e B474     		.sleb128 -1484
 26101 1340 22       		.uleb128 0x22
 26102 1341 6A060000 		.4byte	.LASF250
 26103 1345 01       		.byte	0x1
 26104 1346 FF05     		.2byte	0x5ff
 26105 1348 1B140000 		.4byte	0x141b
 26106 134c 03       		.uleb128 0x3
 26107 134d 91       		.byte	0x91
 26108 134e A074     		.sleb128 -1504
 26109 1350 22       		.uleb128 0x22
 26110 1351 09000000 		.4byte	.LASF251
 26111 1355 01       		.byte	0x1
 26112 1356 0006     		.2byte	0x600
 26113 1358 2B140000 		.4byte	0x142b
 26114 135c 03       		.uleb128 0x3
 26115 135d 91       		.byte	0x91
 26116 135e 9074     		.sleb128 -1520
 26117 1360 22       		.uleb128 0x22
 26118 1361 060D0000 		.4byte	.LASF252
 26119 1365 01       		.byte	0x1
 26120 1366 0106     		.2byte	0x601
 26121 1368 3B140000 		.4byte	0x143b
 26122 136c 03       		.uleb128 0x3
 26123 136d 91       		.byte	0x91
 26124 136e E473     		.sleb128 -1564
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 569


 26125 1370 22       		.uleb128 0x22
 26126 1371 D5010000 		.4byte	.LASF253
 26127 1375 01       		.byte	0x1
 26128 1376 0206     		.2byte	0x602
 26129 1378 30010000 		.4byte	0x130
 26130 137c 03       		.uleb128 0x3
 26131 137d 91       		.byte	0x91
 26132 137e C873     		.sleb128 -1592
 26133 1380 22       		.uleb128 0x22
 26134 1381 65010000 		.4byte	.LASF254
 26135 1385 01       		.byte	0x1
 26136 1386 0506     		.2byte	0x605
 26137 1388 97000000 		.4byte	0x97
 26138 138c 02       		.uleb128 0x2
 26139 138d 91       		.byte	0x91
 26140 138e 5B       		.sleb128 -37
 26141 138f 22       		.uleb128 0x22
 26142 1390 2A040000 		.4byte	.LASF255
 26143 1394 01       		.byte	0x1
 26144 1395 0606     		.2byte	0x606
 26145 1397 97000000 		.4byte	0x97
 26146 139b 02       		.uleb128 0x2
 26147 139c 91       		.byte	0x91
 26148 139d 5A       		.sleb128 -38
 26149 139e 22       		.uleb128 0x22
 26150 139f 2D0F0000 		.4byte	.LASF256
 26151 13a3 01       		.byte	0x1
 26152 13a4 0706     		.2byte	0x607
 26153 13a6 97000000 		.4byte	0x97
 26154 13aa 02       		.uleb128 0x2
 26155 13ab 91       		.byte	0x91
 26156 13ac 59       		.sleb128 -39
 26157 13ad 22       		.uleb128 0x22
 26158 13ae A30F0000 		.4byte	.LASF257
 26159 13b2 01       		.byte	0x1
 26160 13b3 0806     		.2byte	0x608
 26161 13b5 97000000 		.4byte	0x97
 26162 13b9 02       		.uleb128 0x2
 26163 13ba 91       		.byte	0x91
 26164 13bb 58       		.sleb128 -40
 26165 13bc 22       		.uleb128 0x22
 26166 13bd 38040000 		.4byte	.LASF258
 26167 13c1 01       		.byte	0x1
 26168 13c2 0906     		.2byte	0x609
 26169 13c4 97000000 		.4byte	0x97
 26170 13c8 02       		.uleb128 0x2
 26171 13c9 91       		.byte	0x91
 26172 13ca 57       		.sleb128 -41
 26173 13cb 22       		.uleb128 0x22
 26174 13cc AE000000 		.4byte	.LASF259
 26175 13d0 01       		.byte	0x1
 26176 13d1 0A06     		.2byte	0x60a
 26177 13d3 97000000 		.4byte	0x97
 26178 13d7 02       		.uleb128 0x2
 26179 13d8 91       		.byte	0x91
 26180 13d9 65       		.sleb128 -27
 26181 13da 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 570


 26182 13db 90120000 		.4byte	.LASF233
 26183 13df 01       		.byte	0x1
 26184 13e0 0C06     		.2byte	0x60c
 26185 13e2 79110000 		.4byte	0x1179
 26186 13e6 03       		.uleb128 0x3
 26187 13e7 91       		.byte	0x91
 26188 13e8 D072     		.sleb128 -1712
 26189 13ea 22       		.uleb128 0x22
 26190 13eb 31030000 		.4byte	.LASF260
 26191 13ef 01       		.byte	0x1
 26192 13f0 0D06     		.2byte	0x60d
 26193 13f2 97000000 		.4byte	0x97
 26194 13f6 02       		.uleb128 0x2
 26195 13f7 91       		.byte	0x91
 26196 13f8 56       		.sleb128 -42
 26197 13f9 00       		.byte	0
 26198 13fa 09       		.uleb128 0x9
 26199 13fb 97000000 		.4byte	0x97
 26200 13ff 0B140000 		.4byte	0x140b
 26201 1403 23       		.uleb128 0x23
 26202 1404 18010000 		.4byte	0x118
 26203 1408 7805     		.2byte	0x578
 26204 140a 00       		.byte	0
 26205 140b 09       		.uleb128 0x9
 26206 140c F9000000 		.4byte	0xf9
 26207 1410 1B140000 		.4byte	0x141b
 26208 1414 0A       		.uleb128 0xa
 26209 1415 18010000 		.4byte	0x118
 26210 1419 0A       		.byte	0xa
 26211 141a 00       		.byte	0
 26212 141b 09       		.uleb128 0x9
 26213 141c F9000000 		.4byte	0xf9
 26214 1420 2B140000 		.4byte	0x142b
 26215 1424 0A       		.uleb128 0xa
 26216 1425 18010000 		.4byte	0x118
 26217 1429 13       		.byte	0x13
 26218 142a 00       		.byte	0
 26219 142b 09       		.uleb128 0x9
 26220 142c F9000000 		.4byte	0xf9
 26221 1430 3B140000 		.4byte	0x143b
 26222 1434 0A       		.uleb128 0xa
 26223 1435 18010000 		.4byte	0x118
 26224 1439 0F       		.byte	0xf
 26225 143a 00       		.byte	0
 26226 143b 09       		.uleb128 0x9
 26227 143c F9000000 		.4byte	0xf9
 26228 1440 4B140000 		.4byte	0x144b
 26229 1444 0A       		.uleb128 0xa
 26230 1445 18010000 		.4byte	0x118
 26231 1449 29       		.byte	0x29
 26232 144a 00       		.byte	0
 26233 144b 26       		.uleb128 0x26
 26234 144c 9A020000 		.4byte	.LASF291
 26235 1450 01       		.byte	0x1
 26236 1451 D306     		.2byte	0x6d3
 26237 1453 00000000 		.4byte	.LFB71
 26238 1457 84000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 571


 26239 145b 01       		.uleb128 0x1
 26240 145c 9C       		.byte	0x9c
 26241 145d 7C140000 		.4byte	0x147c
 26242 1461 25       		.uleb128 0x25
 26243 1462 6900     		.ascii	"i\000"
 26244 1464 01       		.byte	0x1
 26245 1465 D506     		.2byte	0x6d5
 26246 1467 97000000 		.4byte	0x97
 26247 146b 02       		.uleb128 0x2
 26248 146c 91       		.byte	0x91
 26249 146d 6F       		.sleb128 -17
 26250 146e 25       		.uleb128 0x25
 26251 146f 6A00     		.ascii	"j\000"
 26252 1471 01       		.byte	0x1
 26253 1472 D506     		.2byte	0x6d5
 26254 1474 97000000 		.4byte	0x97
 26255 1478 02       		.uleb128 0x2
 26256 1479 91       		.byte	0x91
 26257 147a 6E       		.sleb128 -18
 26258 147b 00       		.byte	0
 26259 147c 21       		.uleb128 0x21
 26260 147d D3000000 		.4byte	.LASF261
 26261 1481 01       		.byte	0x1
 26262 1482 E606     		.2byte	0x6e6
 26263 1484 00000000 		.4byte	.LFB72
 26264 1488 E81A0000 		.4byte	.LFE72-.LFB72
 26265 148c 01       		.uleb128 0x1
 26266 148d 9C       		.byte	0x9c
 26267 148e 27150000 		.4byte	0x1527
 26268 1492 24       		.uleb128 0x24
 26269 1493 3D0C0000 		.4byte	.LASF262
 26270 1497 01       		.byte	0x1
 26271 1498 E606     		.2byte	0x6e6
 26272 149a 1F010000 		.4byte	0x11f
 26273 149e 03       		.uleb128 0x3
 26274 149f 91       		.byte	0x91
 26275 14a0 D47E     		.sleb128 -172
 26276 14a2 25       		.uleb128 0x25
 26277 14a3 6900     		.ascii	"i\000"
 26278 14a5 01       		.byte	0x1
 26279 14a6 E806     		.2byte	0x6e8
 26280 14a8 73000000 		.4byte	0x73
 26281 14ac 02       		.uleb128 0x2
 26282 14ad 91       		.byte	0x91
 26283 14ae 54       		.sleb128 -44
 26284 14af 22       		.uleb128 0x22
 26285 14b0 D2020000 		.4byte	.LASF232
 26286 14b4 01       		.byte	0x1
 26287 14b5 EA06     		.2byte	0x6ea
 26288 14b7 43110000 		.4byte	0x1143
 26289 14bb 02       		.uleb128 0x2
 26290 14bc 91       		.byte	0x91
 26291 14bd 4C       		.sleb128 -52
 26292 14be 1E       		.uleb128 0x1e
 26293 14bf 1C000000 		.4byte	.LBB16
 26294 14c3 841A0000 		.4byte	.LBE16-.LBB16
 26295 14c7 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 572


 26296 14c8 73747200 		.ascii	"str\000"
 26297 14cc 01       		.byte	0x1
 26298 14cd ED06     		.2byte	0x6ed
 26299 14cf 27150000 		.4byte	0x1527
 26300 14d3 03       		.uleb128 0x3
 26301 14d4 91       		.byte	0x91
 26302 14d5 DC7E     		.sleb128 -164
 26303 14d7 1E       		.uleb128 0x1e
 26304 14d8 A8020000 		.4byte	.LBB17
 26305 14dc 70100000 		.4byte	.LBE17-.LBB17
 26306 14e0 25       		.uleb128 0x25
 26307 14e1 6B00     		.ascii	"k\000"
 26308 14e3 01       		.byte	0x1
 26309 14e4 1B07     		.2byte	0x71b
 26310 14e6 97000000 		.4byte	0x97
 26311 14ea 02       		.uleb128 0x2
 26312 14eb 91       		.byte	0x91
 26313 14ec 53       		.sleb128 -45
 26314 14ed 1E       		.uleb128 0x1e
 26315 14ee B2020000 		.4byte	.LBB18
 26316 14f2 4A100000 		.4byte	.LBE18-.LBB18
 26317 14f6 22       		.uleb128 0x22
 26318 14f7 1E0C0000 		.4byte	.LASF225
 26319 14fb 01       		.byte	0x1
 26320 14fc 1D07     		.2byte	0x71d
 26321 14fe 97000000 		.4byte	0x97
 26322 1502 02       		.uleb128 0x2
 26323 1503 91       		.byte	0x91
 26324 1504 4B       		.sleb128 -53
 26325 1505 25       		.uleb128 0x25
 26326 1506 4D4F5400 		.ascii	"MOT\000"
 26327 150a 01       		.byte	0x1
 26328 150b 1E07     		.2byte	0x71e
 26329 150d 37150000 		.4byte	0x1537
 26330 1511 02       		.uleb128 0x2
 26331 1512 91       		.byte	0x91
 26332 1513 44       		.sleb128 -60
 26333 1514 22       		.uleb128 0x22
 26334 1515 01120000 		.4byte	.LASF263
 26335 1519 01       		.byte	0x1
 26336 151a 1F07     		.2byte	0x71f
 26337 151c 97000000 		.4byte	0x97
 26338 1520 02       		.uleb128 0x2
 26339 1521 91       		.byte	0x91
 26340 1522 43       		.sleb128 -61
 26341 1523 00       		.byte	0
 26342 1524 00       		.byte	0
 26343 1525 00       		.byte	0
 26344 1526 00       		.byte	0
 26345 1527 09       		.uleb128 0x9
 26346 1528 F9000000 		.4byte	0xf9
 26347 152c 37150000 		.4byte	0x1537
 26348 1530 0A       		.uleb128 0xa
 26349 1531 18010000 		.4byte	0x118
 26350 1535 63       		.byte	0x63
 26351 1536 00       		.byte	0
 26352 1537 07       		.uleb128 0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 573


 26353 1538 04       		.byte	0x4
 26354 1539 B1050000 		.4byte	0x5b1
 26355 153d 21       		.uleb128 0x21
 26356 153e 390D0000 		.4byte	.LASF264
 26357 1542 01       		.byte	0x1
 26358 1543 B008     		.2byte	0x8b0
 26359 1545 00000000 		.4byte	.LFB73
 26360 1549 B4030000 		.4byte	.LFE73-.LFB73
 26361 154d 01       		.uleb128 0x1
 26362 154e 9C       		.byte	0x9c
 26363 154f BD150000 		.4byte	0x15bd
 26364 1553 24       		.uleb128 0x24
 26365 1554 3D0C0000 		.4byte	.LASF262
 26366 1558 01       		.byte	0x1
 26367 1559 B008     		.2byte	0x8b0
 26368 155b 1F010000 		.4byte	0x11f
 26369 155f 03       		.uleb128 0x3
 26370 1560 91       		.byte	0x91
 26371 1561 EC7E     		.sleb128 -148
 26372 1563 25       		.uleb128 0x25
 26373 1564 73747200 		.ascii	"str\000"
 26374 1568 01       		.byte	0x1
 26375 1569 B208     		.2byte	0x8b2
 26376 156b 27150000 		.4byte	0x1527
 26377 156f 03       		.uleb128 0x3
 26378 1570 91       		.byte	0x91
 26379 1571 F07E     		.sleb128 -144
 26380 1573 25       		.uleb128 0x25
 26381 1574 6900     		.ascii	"i\000"
 26382 1576 01       		.byte	0x1
 26383 1577 B308     		.2byte	0x8b3
 26384 1579 73000000 		.4byte	0x73
 26385 157d 02       		.uleb128 0x2
 26386 157e 91       		.byte	0x91
 26387 157f 64       		.sleb128 -28
 26388 1580 22       		.uleb128 0x22
 26389 1581 C7030000 		.4byte	.LASF265
 26390 1585 01       		.byte	0x1
 26391 1586 B408     		.2byte	0x8b4
 26392 1588 73000000 		.4byte	0x73
 26393 158c 02       		.uleb128 0x2
 26394 158d 91       		.byte	0x91
 26395 158e 54       		.sleb128 -44
 26396 158f 22       		.uleb128 0x22
 26397 1590 D2020000 		.4byte	.LASF232
 26398 1594 01       		.byte	0x1
 26399 1595 B608     		.2byte	0x8b6
 26400 1597 43110000 		.4byte	0x1143
 26401 159b 02       		.uleb128 0x2
 26402 159c 91       		.byte	0x91
 26403 159d 60       		.sleb128 -32
 26404 159e 25       		.uleb128 0x25
 26405 159f 4D4F5400 		.ascii	"MOT\000"
 26406 15a3 01       		.byte	0x1
 26407 15a4 B708     		.2byte	0x8b7
 26408 15a6 37150000 		.4byte	0x1537
 26409 15aa 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 574


 26410 15ab 91       		.byte	0x91
 26411 15ac 5C       		.sleb128 -36
 26412 15ad 22       		.uleb128 0x22
 26413 15ae 01120000 		.4byte	.LASF263
 26414 15b2 01       		.byte	0x1
 26415 15b3 B808     		.2byte	0x8b8
 26416 15b5 97000000 		.4byte	0x97
 26417 15b9 02       		.uleb128 0x2
 26418 15ba 91       		.byte	0x91
 26419 15bb 5B       		.sleb128 -37
 26420 15bc 00       		.byte	0
 26421 15bd 21       		.uleb128 0x21
 26422 15be 9A0D0000 		.4byte	.LASF266
 26423 15c2 01       		.byte	0x1
 26424 15c3 F208     		.2byte	0x8f2
 26425 15c5 00000000 		.4byte	.LFB74
 26426 15c9 3C120000 		.4byte	.LFE74-.LFB74
 26427 15cd 01       		.uleb128 0x1
 26428 15ce 9C       		.byte	0x9c
 26429 15cf 5E160000 		.4byte	0x165e
 26430 15d3 24       		.uleb128 0x24
 26431 15d4 3D0C0000 		.4byte	.LASF262
 26432 15d8 01       		.byte	0x1
 26433 15d9 F208     		.2byte	0x8f2
 26434 15db 1F010000 		.4byte	0x11f
 26435 15df 03       		.uleb128 0x3
 26436 15e0 91       		.byte	0x91
 26437 15e1 D47E     		.sleb128 -172
 26438 15e3 25       		.uleb128 0x25
 26439 15e4 73747200 		.ascii	"str\000"
 26440 15e8 01       		.byte	0x1
 26441 15e9 F408     		.2byte	0x8f4
 26442 15eb 27150000 		.4byte	0x1527
 26443 15ef 03       		.uleb128 0x3
 26444 15f0 91       		.byte	0x91
 26445 15f1 DC7E     		.sleb128 -164
 26446 15f3 25       		.uleb128 0x25
 26447 15f4 6900     		.ascii	"i\000"
 26448 15f6 01       		.byte	0x1
 26449 15f7 F508     		.2byte	0x8f5
 26450 15f9 73000000 		.4byte	0x73
 26451 15fd 02       		.uleb128 0x2
 26452 15fe 91       		.byte	0x91
 26453 15ff 54       		.sleb128 -44
 26454 1600 22       		.uleb128 0x22
 26455 1601 D2020000 		.4byte	.LASF232
 26456 1605 01       		.byte	0x1
 26457 1606 F908     		.2byte	0x8f9
 26458 1608 43110000 		.4byte	0x1143
 26459 160c 02       		.uleb128 0x2
 26460 160d 91       		.byte	0x91
 26461 160e 4C       		.sleb128 -52
 26462 160f 1E       		.uleb128 0x1e
 26463 1610 08010000 		.4byte	.LBB19
 26464 1614 940C0000 		.4byte	.LBE19-.LBB19
 26465 1618 25       		.uleb128 0x25
 26466 1619 6B00     		.ascii	"k\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 575


 26467 161b 01       		.byte	0x1
 26468 161c 0E09     		.2byte	0x90e
 26469 161e 97000000 		.4byte	0x97
 26470 1622 02       		.uleb128 0x2
 26471 1623 91       		.byte	0x91
 26472 1624 53       		.sleb128 -45
 26473 1625 1E       		.uleb128 0x1e
 26474 1626 12010000 		.4byte	.LBB20
 26475 162a 6E0C0000 		.4byte	.LBE20-.LBB20
 26476 162e 22       		.uleb128 0x22
 26477 162f 1E0C0000 		.4byte	.LASF225
 26478 1633 01       		.byte	0x1
 26479 1634 1009     		.2byte	0x910
 26480 1636 97000000 		.4byte	0x97
 26481 163a 02       		.uleb128 0x2
 26482 163b 91       		.byte	0x91
 26483 163c 4B       		.sleb128 -53
 26484 163d 25       		.uleb128 0x25
 26485 163e 4D4F5400 		.ascii	"MOT\000"
 26486 1642 01       		.byte	0x1
 26487 1643 1109     		.2byte	0x911
 26488 1645 37150000 		.4byte	0x1537
 26489 1649 02       		.uleb128 0x2
 26490 164a 91       		.byte	0x91
 26491 164b 44       		.sleb128 -60
 26492 164c 22       		.uleb128 0x22
 26493 164d 01120000 		.4byte	.LASF263
 26494 1651 01       		.byte	0x1
 26495 1652 1209     		.2byte	0x912
 26496 1654 97000000 		.4byte	0x97
 26497 1658 02       		.uleb128 0x2
 26498 1659 91       		.byte	0x91
 26499 165a 43       		.sleb128 -61
 26500 165b 00       		.byte	0
 26501 165c 00       		.byte	0
 26502 165d 00       		.byte	0
 26503 165e 21       		.uleb128 0x21
 26504 165f FC090000 		.4byte	.LASF267
 26505 1663 01       		.byte	0x1
 26506 1664 F609     		.2byte	0x9f6
 26507 1666 00000000 		.4byte	.LFB75
 26508 166a C8000000 		.4byte	.LFE75-.LFB75
 26509 166e 01       		.uleb128 0x1
 26510 166f 9C       		.byte	0x9c
 26511 1670 A2160000 		.4byte	0x16a2
 26512 1674 24       		.uleb128 0x24
 26513 1675 3D0C0000 		.4byte	.LASF262
 26514 1679 01       		.byte	0x1
 26515 167a F609     		.2byte	0x9f6
 26516 167c 1F010000 		.4byte	0x11f
 26517 1680 03       		.uleb128 0x3
 26518 1681 91       		.byte	0x91
 26519 1682 847F     		.sleb128 -124
 26520 1684 25       		.uleb128 0x25
 26521 1685 73747200 		.ascii	"str\000"
 26522 1689 01       		.byte	0x1
 26523 168a F809     		.2byte	0x9f8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 576


 26524 168c 27150000 		.4byte	0x1527
 26525 1690 03       		.uleb128 0x3
 26526 1691 91       		.byte	0x91
 26527 1692 887F     		.sleb128 -120
 26528 1694 25       		.uleb128 0x25
 26529 1695 6900     		.ascii	"i\000"
 26530 1697 01       		.byte	0x1
 26531 1698 F909     		.2byte	0x9f9
 26532 169a 73000000 		.4byte	0x73
 26533 169e 02       		.uleb128 0x2
 26534 169f 91       		.byte	0x91
 26535 16a0 6C       		.sleb128 -20
 26536 16a1 00       		.byte	0
 26537 16a2 21       		.uleb128 0x21
 26538 16a3 490C0000 		.4byte	.LASF268
 26539 16a7 01       		.byte	0x1
 26540 16a8 0D0A     		.2byte	0xa0d
 26541 16aa 00000000 		.4byte	.LFB76
 26542 16ae 30010000 		.4byte	.LFE76-.LFB76
 26543 16b2 01       		.uleb128 0x1
 26544 16b3 9C       		.byte	0x9c
 26545 16b4 E6160000 		.4byte	0x16e6
 26546 16b8 24       		.uleb128 0x24
 26547 16b9 3D0C0000 		.4byte	.LASF262
 26548 16bd 01       		.byte	0x1
 26549 16be 0D0A     		.2byte	0xa0d
 26550 16c0 1F010000 		.4byte	0x11f
 26551 16c4 03       		.uleb128 0x3
 26552 16c5 91       		.byte	0x91
 26553 16c6 847F     		.sleb128 -124
 26554 16c8 25       		.uleb128 0x25
 26555 16c9 73747200 		.ascii	"str\000"
 26556 16cd 01       		.byte	0x1
 26557 16ce 0F0A     		.2byte	0xa0f
 26558 16d0 27150000 		.4byte	0x1527
 26559 16d4 03       		.uleb128 0x3
 26560 16d5 91       		.byte	0x91
 26561 16d6 887F     		.sleb128 -120
 26562 16d8 25       		.uleb128 0x25
 26563 16d9 6900     		.ascii	"i\000"
 26564 16db 01       		.byte	0x1
 26565 16dc 100A     		.2byte	0xa10
 26566 16de 73000000 		.4byte	0x73
 26567 16e2 02       		.uleb128 0x2
 26568 16e3 91       		.byte	0x91
 26569 16e4 6C       		.sleb128 -20
 26570 16e5 00       		.byte	0
 26571 16e6 21       		.uleb128 0x21
 26572 16e7 0A130000 		.4byte	.LASF269
 26573 16eb 01       		.byte	0x1
 26574 16ec 340A     		.2byte	0xa34
 26575 16ee 00000000 		.4byte	.LFB77
 26576 16f2 74030000 		.4byte	.LFE77-.LFB77
 26577 16f6 01       		.uleb128 0x1
 26578 16f7 9C       		.byte	0x9c
 26579 16f8 2A170000 		.4byte	0x172a
 26580 16fc 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 577


 26581 16fd 3D0C0000 		.4byte	.LASF262
 26582 1701 01       		.byte	0x1
 26583 1702 340A     		.2byte	0xa34
 26584 1704 1F010000 		.4byte	0x11f
 26585 1708 03       		.uleb128 0x3
 26586 1709 91       		.byte	0x91
 26587 170a AC7D     		.sleb128 -340
 26588 170c 25       		.uleb128 0x25
 26589 170d 73747200 		.ascii	"str\000"
 26590 1711 01       		.byte	0x1
 26591 1712 360A     		.2byte	0xa36
 26592 1714 2A170000 		.4byte	0x172a
 26593 1718 03       		.uleb128 0x3
 26594 1719 91       		.byte	0x91
 26595 171a B07D     		.sleb128 -336
 26596 171c 25       		.uleb128 0x25
 26597 171d 6900     		.ascii	"i\000"
 26598 171f 01       		.byte	0x1
 26599 1720 370A     		.2byte	0xa37
 26600 1722 73000000 		.4byte	0x73
 26601 1726 02       		.uleb128 0x2
 26602 1727 91       		.byte	0x91
 26603 1728 5C       		.sleb128 -36
 26604 1729 00       		.byte	0
 26605 172a 09       		.uleb128 0x9
 26606 172b F9000000 		.4byte	0xf9
 26607 172f 3B170000 		.4byte	0x173b
 26608 1733 23       		.uleb128 0x23
 26609 1734 18010000 		.4byte	0x118
 26610 1738 2B01     		.2byte	0x12b
 26611 173a 00       		.byte	0
 26612 173b 21       		.uleb128 0x21
 26613 173c 640D0000 		.4byte	.LASF270
 26614 1740 01       		.byte	0x1
 26615 1741 5F0A     		.2byte	0xa5f
 26616 1743 00000000 		.4byte	.LFB78
 26617 1747 84000000 		.4byte	.LFE78-.LFB78
 26618 174b 01       		.uleb128 0x1
 26619 174c 9C       		.byte	0x9c
 26620 174d 8E170000 		.4byte	0x178e
 26621 1751 24       		.uleb128 0x24
 26622 1752 26050000 		.4byte	.LASF215
 26623 1756 01       		.byte	0x1
 26624 1757 5F0A     		.2byte	0xa5f
 26625 1759 480F0000 		.4byte	0xf48
 26626 175d 02       		.uleb128 0x2
 26627 175e 91       		.byte	0x91
 26628 175f 6C       		.sleb128 -20
 26629 1760 24       		.uleb128 0x24
 26630 1761 C5000000 		.4byte	.LASF216
 26631 1765 01       		.byte	0x1
 26632 1766 5F0A     		.2byte	0xa5f
 26633 1768 A3000000 		.4byte	0xa3
 26634 176c 02       		.uleb128 0x2
 26635 176d 91       		.byte	0x91
 26636 176e 6A       		.sleb128 -22
 26637 176f 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 578


 26638 1770 CC0D0000 		.4byte	.LASF271
 26639 1774 01       		.byte	0x1
 26640 1775 5F0A     		.2byte	0xa5f
 26641 1777 97000000 		.4byte	0x97
 26642 177b 02       		.uleb128 0x2
 26643 177c 91       		.byte	0x91
 26644 177d 69       		.sleb128 -23
 26645 177e 22       		.uleb128 0x22
 26646 177f 17060000 		.4byte	.LASF230
 26647 1783 01       		.byte	0x1
 26648 1784 610A     		.2byte	0xa61
 26649 1786 A3000000 		.4byte	0xa3
 26650 178a 02       		.uleb128 0x2
 26651 178b 91       		.byte	0x91
 26652 178c 76       		.sleb128 -10
 26653 178d 00       		.byte	0
 26654 178e 21       		.uleb128 0x21
 26655 178f 41050000 		.4byte	.LASF272
 26656 1793 01       		.byte	0x1
 26657 1794 7B0A     		.2byte	0xa7b
 26658 1796 00000000 		.4byte	.LFB79
 26659 179a 88000000 		.4byte	.LFE79-.LFB79
 26660 179e 01       		.uleb128 0x1
 26661 179f 9C       		.byte	0x9c
 26662 17a0 D2170000 		.4byte	0x17d2
 26663 17a4 24       		.uleb128 0x24
 26664 17a5 26050000 		.4byte	.LASF215
 26665 17a9 01       		.byte	0x1
 26666 17aa 7B0A     		.2byte	0xa7b
 26667 17ac 480F0000 		.4byte	0xf48
 26668 17b0 02       		.uleb128 0x2
 26669 17b1 91       		.byte	0x91
 26670 17b2 6C       		.sleb128 -20
 26671 17b3 24       		.uleb128 0x24
 26672 17b4 C5000000 		.4byte	.LASF216
 26673 17b8 01       		.byte	0x1
 26674 17b9 7B0A     		.2byte	0xa7b
 26675 17bb A3000000 		.4byte	0xa3
 26676 17bf 02       		.uleb128 0x2
 26677 17c0 91       		.byte	0x91
 26678 17c1 6A       		.sleb128 -22
 26679 17c2 22       		.uleb128 0x22
 26680 17c3 17060000 		.4byte	.LASF230
 26681 17c7 01       		.byte	0x1
 26682 17c8 7D0A     		.2byte	0xa7d
 26683 17ca A3000000 		.4byte	0xa3
 26684 17ce 02       		.uleb128 0x2
 26685 17cf 91       		.byte	0x91
 26686 17d0 76       		.sleb128 -10
 26687 17d1 00       		.byte	0
 26688 17d2 21       		.uleb128 0x21
 26689 17d3 670A0000 		.4byte	.LASF273
 26690 17d7 01       		.byte	0x1
 26691 17d8 970A     		.2byte	0xa97
 26692 17da 00000000 		.4byte	.LFB80
 26693 17de A0000000 		.4byte	.LFE80-.LFB80
 26694 17e2 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 579


 26695 17e3 9C       		.byte	0x9c
 26696 17e4 25180000 		.4byte	0x1825
 26697 17e8 24       		.uleb128 0x24
 26698 17e9 26050000 		.4byte	.LASF215
 26699 17ed 01       		.byte	0x1
 26700 17ee 970A     		.2byte	0xa97
 26701 17f0 480F0000 		.4byte	0xf48
 26702 17f4 02       		.uleb128 0x2
 26703 17f5 91       		.byte	0x91
 26704 17f6 74       		.sleb128 -12
 26705 17f7 24       		.uleb128 0x24
 26706 17f8 C5000000 		.4byte	.LASF216
 26707 17fc 01       		.byte	0x1
 26708 17fd 970A     		.2byte	0xa97
 26709 17ff A3000000 		.4byte	0xa3
 26710 1803 02       		.uleb128 0x2
 26711 1804 91       		.byte	0x91
 26712 1805 72       		.sleb128 -14
 26713 1806 27       		.uleb128 0x27
 26714 1807 696400   		.ascii	"id\000"
 26715 180a 01       		.byte	0x1
 26716 180b 970A     		.2byte	0xa97
 26717 180d 97000000 		.4byte	0x97
 26718 1811 02       		.uleb128 0x2
 26719 1812 91       		.byte	0x91
 26720 1813 71       		.sleb128 -15
 26721 1814 25       		.uleb128 0x25
 26722 1815 6900     		.ascii	"i\000"
 26723 1817 01       		.byte	0x1
 26724 1818 990A     		.2byte	0xa99
 26725 181a A3000000 		.4byte	0xa3
 26726 181e 05       		.uleb128 0x5
 26727 181f 03       		.byte	0x3
 26728 1820 00000000 		.4byte	i.11141
 26729 1824 00       		.byte	0
 26730 1825 28       		.uleb128 0x28
 26731 1826 BC110000 		.4byte	.LASF279
 26732 182a 01       		.byte	0x1
 26733 182b B50A     		.2byte	0xab5
 26734 182d 97000000 		.4byte	0x97
 26735 1831 00000000 		.4byte	.LFB81
 26736 1835 3E000000 		.4byte	.LFE81-.LFB81
 26737 1839 01       		.uleb128 0x1
 26738 183a 9C       		.byte	0x9c
 26739 183b 7A180000 		.4byte	0x187a
 26740 183f 24       		.uleb128 0x24
 26741 1840 C2090000 		.4byte	.LASF274
 26742 1844 01       		.byte	0x1
 26743 1845 B50A     		.2byte	0xab5
 26744 1847 480F0000 		.4byte	0xf48
 26745 184b 02       		.uleb128 0x2
 26746 184c 91       		.byte	0x91
 26747 184d 6C       		.sleb128 -20
 26748 184e 24       		.uleb128 0x24
 26749 184f FB040000 		.4byte	.LASF275
 26750 1853 01       		.byte	0x1
 26751 1854 B50A     		.2byte	0xab5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 580


 26752 1856 97000000 		.4byte	0x97
 26753 185a 02       		.uleb128 0x2
 26754 185b 91       		.byte	0x91
 26755 185c 6B       		.sleb128 -21
 26756 185d 25       		.uleb128 0x25
 26757 185e 6900     		.ascii	"i\000"
 26758 1860 01       		.byte	0x1
 26759 1861 B70A     		.2byte	0xab7
 26760 1863 97000000 		.4byte	0x97
 26761 1867 02       		.uleb128 0x2
 26762 1868 91       		.byte	0x91
 26763 1869 77       		.sleb128 -9
 26764 186a 22       		.uleb128 0x22
 26765 186b 9D0B0000 		.4byte	.LASF276
 26766 186f 01       		.byte	0x1
 26767 1870 B80A     		.2byte	0xab8
 26768 1872 97000000 		.4byte	0x97
 26769 1876 02       		.uleb128 0x2
 26770 1877 91       		.byte	0x91
 26771 1878 76       		.sleb128 -10
 26772 1879 00       		.byte	0
 26773 187a 21       		.uleb128 0x21
 26774 187b E9090000 		.4byte	.LASF277
 26775 187f 01       		.byte	0x1
 26776 1880 C50A     		.2byte	0xac5
 26777 1882 00000000 		.4byte	.LFB82
 26778 1886 2E000000 		.4byte	.LFE82-.LFB82
 26779 188a 01       		.uleb128 0x1
 26780 188b 9C       		.byte	0x9c
 26781 188c BE180000 		.4byte	0x18be
 26782 1890 24       		.uleb128 0x24
 26783 1891 4A040000 		.4byte	.LASF278
 26784 1895 01       		.byte	0x1
 26785 1896 C50A     		.2byte	0xac5
 26786 1898 97000000 		.4byte	0x97
 26787 189c 02       		.uleb128 0x2
 26788 189d 91       		.byte	0x91
 26789 189e 6F       		.sleb128 -17
 26790 189f 22       		.uleb128 0x22
 26791 18a0 C5000000 		.4byte	.LASF216
 26792 18a4 01       		.byte	0x1
 26793 18a5 C60A     		.2byte	0xac6
 26794 18a7 73000000 		.4byte	0x73
 26795 18ab 02       		.uleb128 0x2
 26796 18ac 91       		.byte	0x91
 26797 18ad 74       		.sleb128 -12
 26798 18ae 22       		.uleb128 0x22
 26799 18af 26050000 		.4byte	.LASF215
 26800 18b3 01       		.byte	0x1
 26801 18b4 C70A     		.2byte	0xac7
 26802 18b6 5D080000 		.4byte	0x85d
 26803 18ba 02       		.uleb128 0x2
 26804 18bb 91       		.byte	0x91
 26805 18bc 70       		.sleb128 -16
 26806 18bd 00       		.byte	0
 26807 18be 29       		.uleb128 0x29
 26808 18bf 7B030000 		.4byte	.LASF280
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 581


 26809 18c3 01       		.byte	0x1
 26810 18c4 D40A     		.2byte	0xad4
 26811 18c6 97000000 		.4byte	0x97
 26812 18ca 00000000 		.4byte	.LFB83
 26813 18ce 98000000 		.4byte	.LFE83-.LFB83
 26814 18d2 01       		.uleb128 0x1
 26815 18d3 9C       		.byte	0x9c
 26816 18d4 22190000 		.4byte	0x1922
 26817 18d8 24       		.uleb128 0x24
 26818 18d9 EE040000 		.4byte	.LASF281
 26819 18dd 01       		.byte	0x1
 26820 18de D40A     		.2byte	0xad4
 26821 18e0 73000000 		.4byte	0x73
 26822 18e4 02       		.uleb128 0x2
 26823 18e5 91       		.byte	0x91
 26824 18e6 64       		.sleb128 -28
 26825 18e7 25       		.uleb128 0x25
 26826 18e8 6900     		.ascii	"i\000"
 26827 18ea 01       		.byte	0x1
 26828 18eb D60A     		.2byte	0xad6
 26829 18ed 73000000 		.4byte	0x73
 26830 18f1 02       		.uleb128 0x2
 26831 18f2 91       		.byte	0x91
 26832 18f3 74       		.sleb128 -12
 26833 18f4 22       		.uleb128 0x22
 26834 18f5 75000000 		.4byte	.LASF282
 26835 18f9 01       		.byte	0x1
 26836 18fa D70A     		.2byte	0xad7
 26837 18fc 97000000 		.4byte	0x97
 26838 1900 02       		.uleb128 0x2
 26839 1901 91       		.byte	0x91
 26840 1902 6B       		.sleb128 -21
 26841 1903 22       		.uleb128 0x22
 26842 1904 5D050000 		.4byte	.LASF283
 26843 1908 01       		.byte	0x1
 26844 1909 D80A     		.2byte	0xad8
 26845 190b 73000000 		.4byte	0x73
 26846 190f 02       		.uleb128 0x2
 26847 1910 91       		.byte	0x91
 26848 1911 6C       		.sleb128 -20
 26849 1912 22       		.uleb128 0x22
 26850 1913 82040000 		.4byte	.LASF284
 26851 1917 01       		.byte	0x1
 26852 1918 D90A     		.2byte	0xad9
 26853 191a 97000000 		.4byte	0x97
 26854 191e 02       		.uleb128 0x2
 26855 191f 91       		.byte	0x91
 26856 1920 73       		.sleb128 -13
 26857 1921 00       		.byte	0
 26858 1922 21       		.uleb128 0x21
 26859 1923 D80C0000 		.4byte	.LASF285
 26860 1927 01       		.byte	0x1
 26861 1928 FE0A     		.2byte	0xafe
 26862 192a 00000000 		.4byte	.LFB84
 26863 192e 80000000 		.4byte	.LFE84-.LFB84
 26864 1932 01       		.uleb128 0x1
 26865 1933 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 582


 26866 1934 46190000 		.4byte	0x1946
 26867 1938 25       		.uleb128 0x25
 26868 1939 6900     		.ascii	"i\000"
 26869 193b 01       		.byte	0x1
 26870 193c 000B     		.2byte	0xb00
 26871 193e A3000000 		.4byte	0xa3
 26872 1942 02       		.uleb128 0x2
 26873 1943 91       		.byte	0x91
 26874 1944 76       		.sleb128 -10
 26875 1945 00       		.byte	0
 26876 1946 29       		.uleb128 0x29
 26877 1947 280C0000 		.4byte	.LASF286
 26878 194b 01       		.byte	0x1
 26879 194c 170B     		.2byte	0xb17
 26880 194e 97000000 		.4byte	0x97
 26881 1952 00000000 		.4byte	.LFB85
 26882 1956 5C000000 		.4byte	.LFE85-.LFB85
 26883 195a 01       		.uleb128 0x1
 26884 195b 9C       		.byte	0x9c
 26885 195c 6E190000 		.4byte	0x196e
 26886 1960 25       		.uleb128 0x25
 26887 1961 6900     		.ascii	"i\000"
 26888 1963 01       		.byte	0x1
 26889 1964 180B     		.2byte	0xb18
 26890 1966 A3000000 		.4byte	0xa3
 26891 196a 02       		.uleb128 0x2
 26892 196b 91       		.byte	0x91
 26893 196c 76       		.sleb128 -10
 26894 196d 00       		.byte	0
 26895 196e 29       		.uleb128 0x29
 26896 196f 63050000 		.4byte	.LASF287
 26897 1973 01       		.byte	0x1
 26898 1974 2A0B     		.2byte	0xb2a
 26899 1976 97000000 		.4byte	0x97
 26900 197a 00000000 		.4byte	.LFB86
 26901 197e E8050000 		.4byte	.LFE86-.LFB86
 26902 1982 01       		.uleb128 0x1
 26903 1983 9C       		.byte	0x9c
 26904 1984 A3190000 		.4byte	0x19a3
 26905 1988 25       		.uleb128 0x25
 26906 1989 6900     		.ascii	"i\000"
 26907 198b 01       		.byte	0x1
 26908 198c 2C0B     		.2byte	0xb2c
 26909 198e 97000000 		.4byte	0x97
 26910 1992 02       		.uleb128 0x2
 26911 1993 91       		.byte	0x91
 26912 1994 77       		.sleb128 -9
 26913 1995 25       		.uleb128 0x25
 26914 1996 6A00     		.ascii	"j\000"
 26915 1998 01       		.byte	0x1
 26916 1999 2C0B     		.2byte	0xb2c
 26917 199b 97000000 		.4byte	0x97
 26918 199f 02       		.uleb128 0x2
 26919 19a0 91       		.byte	0x91
 26920 19a1 76       		.sleb128 -10
 26921 19a2 00       		.byte	0
 26922 19a3 2A       		.uleb128 0x2a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 583


 26923 19a4 A8070000 		.4byte	.LASF288
 26924 19a8 01       		.byte	0x1
 26925 19a9 BD0B     		.2byte	0xbbd
 26926 19ab 00000000 		.4byte	.LFB87
 26927 19af 38020000 		.4byte	.LFE87-.LFB87
 26928 19b3 01       		.uleb128 0x1
 26929 19b4 9C       		.byte	0x9c
 26930 19b5 E0190000 		.4byte	0x19e0
 26931 19b9 22       		.uleb128 0x22
 26932 19ba 1E0C0000 		.4byte	.LASF225
 26933 19be 01       		.byte	0x1
 26934 19bf BF0B     		.2byte	0xbbf
 26935 19c1 97000000 		.4byte	0x97
 26936 19c5 02       		.uleb128 0x2
 26937 19c6 91       		.byte	0x91
 26938 19c7 73       		.sleb128 -13
 26939 19c8 1E       		.uleb128 0x1e
 26940 19c9 FA000000 		.4byte	.LBB21
 26941 19cd 6A000000 		.4byte	.LBE21-.LBB21
 26942 19d1 25       		.uleb128 0x25
 26943 19d2 6900     		.ascii	"i\000"
 26944 19d4 01       		.byte	0x1
 26945 19d5 D00B     		.2byte	0xbd0
 26946 19d7 73000000 		.4byte	0x73
 26947 19db 02       		.uleb128 0x2
 26948 19dc 91       		.byte	0x91
 26949 19dd 74       		.sleb128 -12
 26950 19de 00       		.byte	0
 26951 19df 00       		.byte	0
 26952 19e0 2B       		.uleb128 0x2b
 26953 19e1 DA090000 		.4byte	.LASF289
 26954 19e5 01       		.byte	0x1
 26955 19e6 EF0B     		.2byte	0xbef
 26956 19e8 00000000 		.4byte	.LFB88
 26957 19ec 28000000 		.4byte	.LFE88-.LFB88
 26958 19f0 01       		.uleb128 0x1
 26959 19f1 9C       		.byte	0x9c
 26960 19f2 2B       		.uleb128 0x2b
 26961 19f3 170F0000 		.4byte	.LASF290
 26962 19f7 01       		.byte	0x1
 26963 19f8 FB0B     		.2byte	0xbfb
 26964 19fa 00000000 		.4byte	.LFB89
 26965 19fe 78000000 		.4byte	.LFE89-.LFB89
 26966 1a02 01       		.uleb128 0x1
 26967 1a03 9C       		.byte	0x9c
 26968 1a04 26       		.uleb128 0x26
 26969 1a05 A4050000 		.4byte	.LASF292
 26970 1a09 01       		.byte	0x1
 26971 1a0a 150C     		.2byte	0xc15
 26972 1a0c 00000000 		.4byte	.LFB90
 26973 1a10 B4000000 		.4byte	.LFE90-.LFB90
 26974 1a14 01       		.uleb128 0x1
 26975 1a15 9C       		.byte	0x9c
 26976 1a16 481A0000 		.4byte	0x1a48
 26977 1a1a 22       		.uleb128 0x22
 26978 1a1b 17060000 		.4byte	.LASF230
 26979 1a1f 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 584


 26980 1a20 170C     		.2byte	0xc17
 26981 1a22 97000000 		.4byte	0x97
 26982 1a26 02       		.uleb128 0x2
 26983 1a27 91       		.byte	0x91
 26984 1a28 6F       		.sleb128 -17
 26985 1a29 22       		.uleb128 0x22
 26986 1a2a C80F0000 		.4byte	.LASF221
 26987 1a2e 01       		.byte	0x1
 26988 1a2f 180C     		.2byte	0xc18
 26989 1a31 C7000000 		.4byte	0xc7
 26990 1a35 02       		.uleb128 0x2
 26991 1a36 91       		.byte	0x91
 26992 1a37 6C       		.sleb128 -20
 26993 1a38 22       		.uleb128 0x22
 26994 1a39 26050000 		.4byte	.LASF215
 26995 1a3d 01       		.byte	0x1
 26996 1a3e 1B0C     		.2byte	0xc1b
 26997 1a40 EE070000 		.4byte	0x7ee
 26998 1a44 02       		.uleb128 0x2
 26999 1a45 91       		.byte	0x91
 27000 1a46 64       		.sleb128 -28
 27001 1a47 00       		.byte	0
 27002 1a48 26       		.uleb128 0x26
 27003 1a49 C50C0000 		.4byte	.LASF293
 27004 1a4d 01       		.byte	0x1
 27005 1a4e 2E0C     		.2byte	0xc2e
 27006 1a50 00000000 		.4byte	.LFB91
 27007 1a54 B8000000 		.4byte	.LFE91-.LFB91
 27008 1a58 01       		.uleb128 0x1
 27009 1a59 9C       		.byte	0x9c
 27010 1a5a 8C1A0000 		.4byte	0x1a8c
 27011 1a5e 22       		.uleb128 0x22
 27012 1a5f 17060000 		.4byte	.LASF230
 27013 1a63 01       		.byte	0x1
 27014 1a64 300C     		.2byte	0xc30
 27015 1a66 97000000 		.4byte	0x97
 27016 1a6a 02       		.uleb128 0x2
 27017 1a6b 91       		.byte	0x91
 27018 1a6c 6F       		.sleb128 -17
 27019 1a6d 22       		.uleb128 0x22
 27020 1a6e C80F0000 		.4byte	.LASF221
 27021 1a72 01       		.byte	0x1
 27022 1a73 310C     		.2byte	0xc31
 27023 1a75 C7000000 		.4byte	0xc7
 27024 1a79 02       		.uleb128 0x2
 27025 1a7a 91       		.byte	0x91
 27026 1a7b 6C       		.sleb128 -20
 27027 1a7c 22       		.uleb128 0x22
 27028 1a7d 26050000 		.4byte	.LASF215
 27029 1a81 01       		.byte	0x1
 27030 1a82 350C     		.2byte	0xc35
 27031 1a84 EE070000 		.4byte	0x7ee
 27032 1a88 02       		.uleb128 0x2
 27033 1a89 91       		.byte	0x91
 27034 1a8a 64       		.sleb128 -28
 27035 1a8b 00       		.byte	0
 27036 1a8c 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 585


 27037 1a8d 06070000 		.4byte	.LASF294
 27038 1a91 01       		.byte	0x1
 27039 1a92 470C     		.2byte	0xc47
 27040 1a94 00000000 		.4byte	.LFB92
 27041 1a98 B8000000 		.4byte	.LFE92-.LFB92
 27042 1a9c 01       		.uleb128 0x1
 27043 1a9d 9C       		.byte	0x9c
 27044 1a9e D01A0000 		.4byte	0x1ad0
 27045 1aa2 22       		.uleb128 0x22
 27046 1aa3 17060000 		.4byte	.LASF230
 27047 1aa7 01       		.byte	0x1
 27048 1aa8 490C     		.2byte	0xc49
 27049 1aaa 97000000 		.4byte	0x97
 27050 1aae 02       		.uleb128 0x2
 27051 1aaf 91       		.byte	0x91
 27052 1ab0 6F       		.sleb128 -17
 27053 1ab1 22       		.uleb128 0x22
 27054 1ab2 C80F0000 		.4byte	.LASF221
 27055 1ab6 01       		.byte	0x1
 27056 1ab7 4A0C     		.2byte	0xc4a
 27057 1ab9 C7000000 		.4byte	0xc7
 27058 1abd 02       		.uleb128 0x2
 27059 1abe 91       		.byte	0x91
 27060 1abf 6C       		.sleb128 -20
 27061 1ac0 22       		.uleb128 0x22
 27062 1ac1 26050000 		.4byte	.LASF215
 27063 1ac5 01       		.byte	0x1
 27064 1ac6 4E0C     		.2byte	0xc4e
 27065 1ac8 EE070000 		.4byte	0x7ee
 27066 1acc 02       		.uleb128 0x2
 27067 1acd 91       		.byte	0x91
 27068 1ace 64       		.sleb128 -28
 27069 1acf 00       		.byte	0
 27070 1ad0 2C       		.uleb128 0x2c
 27071 1ad1 310A0000 		.4byte	.LASF295
 27072 1ad5 01       		.byte	0x1
 27073 1ad6 600C     		.2byte	0xc60
 27074 1ad8 00000000 		.4byte	.LFB93
 27075 1adc 44020000 		.4byte	.LFE93-.LFB93
 27076 1ae0 01       		.uleb128 0x1
 27077 1ae1 9C       		.byte	0x9c
 27078 1ae2 3A1B0000 		.4byte	0x1b3a
 27079 1ae6 22       		.uleb128 0x22
 27080 1ae7 C80F0000 		.4byte	.LASF221
 27081 1aeb 01       		.byte	0x1
 27082 1aec 630C     		.2byte	0xc63
 27083 1aee 3A1B0000 		.4byte	0x1b3a
 27084 1af2 02       		.uleb128 0x2
 27085 1af3 91       		.byte	0x91
 27086 1af4 70       		.sleb128 -16
 27087 1af5 22       		.uleb128 0x22
 27088 1af6 D9050000 		.4byte	.LASF296
 27089 1afa 01       		.byte	0x1
 27090 1afb 640C     		.2byte	0xc64
 27091 1afd 3A1B0000 		.4byte	0x1b3a
 27092 1b01 05       		.uleb128 0x5
 27093 1b02 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 586


 27094 1b03 04000000 		.4byte	last_aux_int16.11265
 27095 1b07 2D       		.uleb128 0x2d
 27096 1b08 2E000000 		.4byte	.LBB22
 27097 1b0c 50000000 		.4byte	.LBE22-.LBB22
 27098 1b10 221B0000 		.4byte	0x1b22
 27099 1b14 25       		.uleb128 0x25
 27100 1b15 6900     		.ascii	"i\000"
 27101 1b17 01       		.byte	0x1
 27102 1b18 6B0C     		.2byte	0xc6b
 27103 1b1a 97000000 		.4byte	0x97
 27104 1b1e 02       		.uleb128 0x2
 27105 1b1f 91       		.byte	0x91
 27106 1b20 77       		.sleb128 -9
 27107 1b21 00       		.byte	0
 27108 1b22 1E       		.uleb128 0x1e
 27109 1b23 88000000 		.4byte	.LBB23
 27110 1b27 98010000 		.4byte	.LBE23-.LBB23
 27111 1b2b 25       		.uleb128 0x25
 27112 1b2c 6900     		.ascii	"i\000"
 27113 1b2e 01       		.byte	0x1
 27114 1b2f 750C     		.2byte	0xc75
 27115 1b31 97000000 		.4byte	0x97
 27116 1b35 02       		.uleb128 0x2
 27117 1b36 91       		.byte	0x91
 27118 1b37 76       		.sleb128 -10
 27119 1b38 00       		.byte	0
 27120 1b39 00       		.byte	0
 27121 1b3a 09       		.uleb128 0x9
 27122 1b3b C7000000 		.4byte	0xc7
 27123 1b3f 4A1B0000 		.4byte	0x1b4a
 27124 1b43 0A       		.uleb128 0xa
 27125 1b44 18010000 		.4byte	0x118
 27126 1b48 01       		.byte	0x1
 27127 1b49 00       		.byte	0
 27128 1b4a 26       		.uleb128 0x26
 27129 1b4b 79120000 		.4byte	.LASF297
 27130 1b4f 01       		.byte	0x1
 27131 1b50 900C     		.2byte	0xc90
 27132 1b52 00000000 		.4byte	.LFB94
 27133 1b56 BC000000 		.4byte	.LFE94-.LFB94
 27134 1b5a 01       		.uleb128 0x1
 27135 1b5b 9C       		.byte	0x9c
 27136 1b5c 701B0000 		.4byte	0x1b70
 27137 1b60 25       		.uleb128 0x25
 27138 1b61 61757800 		.ascii	"aux\000"
 27139 1b65 01       		.byte	0x1
 27140 1b66 930C     		.2byte	0xc93
 27141 1b68 97000000 		.4byte	0x97
 27142 1b6c 02       		.uleb128 0x2
 27143 1b6d 91       		.byte	0x91
 27144 1b6e 77       		.sleb128 -9
 27145 1b6f 00       		.byte	0
 27146 1b70 26       		.uleb128 0x26
 27147 1b71 8F0A0000 		.4byte	.LASF298
 27148 1b75 01       		.byte	0x1
 27149 1b76 B50C     		.2byte	0xcb5
 27150 1b78 00000000 		.4byte	.LFB95
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 587


 27151 1b7c 5C000000 		.4byte	.LFE95-.LFB95
 27152 1b80 01       		.uleb128 0x1
 27153 1b81 9C       		.byte	0x9c
 27154 1b82 961B0000 		.4byte	0x1b96
 27155 1b86 22       		.uleb128 0x22
 27156 1b87 26050000 		.4byte	.LASF215
 27157 1b8b 01       		.byte	0x1
 27158 1b8c B70C     		.2byte	0xcb7
 27159 1b8e A1050000 		.4byte	0x5a1
 27160 1b92 02       		.uleb128 0x2
 27161 1b93 91       		.byte	0x91
 27162 1b94 74       		.sleb128 -12
 27163 1b95 00       		.byte	0
 27164 1b96 26       		.uleb128 0x26
 27165 1b97 050E0000 		.4byte	.LASF299
 27166 1b9b 01       		.byte	0x1
 27167 1b9c CC0C     		.2byte	0xccc
 27168 1b9e 00000000 		.4byte	.LFB96
 27169 1ba2 38010000 		.4byte	.LFE96-.LFB96
 27170 1ba6 01       		.uleb128 0x1
 27171 1ba7 9C       		.byte	0x9c
 27172 1ba8 DA1B0000 		.4byte	0x1bda
 27173 1bac 22       		.uleb128 0x22
 27174 1bad 17060000 		.4byte	.LASF230
 27175 1bb1 01       		.byte	0x1
 27176 1bb2 CE0C     		.2byte	0xcce
 27177 1bb4 97000000 		.4byte	0x97
 27178 1bb8 02       		.uleb128 0x2
 27179 1bb9 91       		.byte	0x91
 27180 1bba 6F       		.sleb128 -17
 27181 1bbb 22       		.uleb128 0x22
 27182 1bbc C80F0000 		.4byte	.LASF221
 27183 1bc0 01       		.byte	0x1
 27184 1bc1 CF0C     		.2byte	0xccf
 27185 1bc3 C7000000 		.4byte	0xc7
 27186 1bc7 02       		.uleb128 0x2
 27187 1bc8 91       		.byte	0x91
 27188 1bc9 6C       		.sleb128 -20
 27189 1bca 22       		.uleb128 0x22
 27190 1bcb 26050000 		.4byte	.LASF215
 27191 1bcf 01       		.byte	0x1
 27192 1bd0 D30C     		.2byte	0xcd3
 27193 1bd2 24090000 		.4byte	0x924
 27194 1bd6 02       		.uleb128 0x2
 27195 1bd7 91       		.byte	0x91
 27196 1bd8 60       		.sleb128 -32
 27197 1bd9 00       		.byte	0
 27198 1bda 26       		.uleb128 0x26
 27199 1bdb 02090000 		.4byte	.LASF300
 27200 1bdf 01       		.byte	0x1
 27201 1be0 F30C     		.2byte	0xcf3
 27202 1be2 00000000 		.4byte	.LFB97
 27203 1be6 EC000000 		.4byte	.LFE97-.LFB97
 27204 1bea 01       		.uleb128 0x1
 27205 1beb 9C       		.byte	0x9c
 27206 1bec 0F1C0000 		.4byte	0x1c0f
 27207 1bf0 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 588


 27208 1bf1 26050000 		.4byte	.LASF215
 27209 1bf5 01       		.byte	0x1
 27210 1bf6 F70C     		.2byte	0xcf7
 27211 1bf8 14090000 		.4byte	0x914
 27212 1bfc 02       		.uleb128 0x2
 27213 1bfd 91       		.byte	0x91
 27214 1bfe 68       		.sleb128 -24
 27215 1bff 22       		.uleb128 0x22
 27216 1c00 C80F0000 		.4byte	.LASF221
 27217 1c04 01       		.byte	0x1
 27218 1c05 F80C     		.2byte	0xcf8
 27219 1c07 C7000000 		.4byte	0xc7
 27220 1c0b 02       		.uleb128 0x2
 27221 1c0c 91       		.byte	0x91
 27222 1c0d 66       		.sleb128 -26
 27223 1c0e 00       		.byte	0
 27224 1c0f 26       		.uleb128 0x26
 27225 1c10 83110000 		.4byte	.LASF301
 27226 1c14 01       		.byte	0x1
 27227 1c15 190D     		.2byte	0xd19
 27228 1c17 00000000 		.4byte	.LFB98
 27229 1c1b 64000000 		.4byte	.LFE98-.LFB98
 27230 1c1f 01       		.uleb128 0x1
 27231 1c20 9C       		.byte	0x9c
 27232 1c21 441C0000 		.4byte	0x1c44
 27233 1c25 22       		.uleb128 0x22
 27234 1c26 26050000 		.4byte	.LASF215
 27235 1c2a 01       		.byte	0x1
 27236 1c2b 1D0D     		.2byte	0xd1d
 27237 1c2d 3F0A0000 		.4byte	0xa3f
 27238 1c31 02       		.uleb128 0x2
 27239 1c32 91       		.byte	0x91
 27240 1c33 74       		.sleb128 -12
 27241 1c34 22       		.uleb128 0x22
 27242 1c35 C80F0000 		.4byte	.LASF221
 27243 1c39 01       		.byte	0x1
 27244 1c3a 1E0D     		.2byte	0xd1e
 27245 1c3c C7000000 		.4byte	0xc7
 27246 1c40 02       		.uleb128 0x2
 27247 1c41 91       		.byte	0x91
 27248 1c42 72       		.sleb128 -14
 27249 1c43 00       		.byte	0
 27250 1c44 2E       		.uleb128 0x2e
 27251 1c45 54060000 		.4byte	.LASF302
 27252 1c49 01       		.byte	0x1
 27253 1c4a 330D     		.2byte	0xd33
 27254 1c4c C7000000 		.4byte	0xc7
 27255 1c50 00000000 		.4byte	.LFB99
 27256 1c54 A8000000 		.4byte	.LFE99-.LFB99
 27257 1c58 01       		.uleb128 0x1
 27258 1c59 9C       		.byte	0x9c
 27259 1c5a B91C0000 		.4byte	0x1cb9
 27260 1c5e 22       		.uleb128 0x22
 27261 1c5f 26050000 		.4byte	.LASF215
 27262 1c63 01       		.byte	0x1
 27263 1c64 350D     		.2byte	0xd35
 27264 1c66 B91C0000 		.4byte	0x1cb9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 589


 27265 1c6a 02       		.uleb128 0x2
 27266 1c6b 91       		.byte	0x91
 27267 1c6c 5C       		.sleb128 -36
 27268 1c6d 22       		.uleb128 0x22
 27269 1c6e C5000000 		.4byte	.LASF216
 27270 1c72 01       		.byte	0x1
 27271 1c73 360D     		.2byte	0xd36
 27272 1c75 97000000 		.4byte	0x97
 27273 1c79 02       		.uleb128 0x2
 27274 1c7a 91       		.byte	0x91
 27275 1c7b 74       		.sleb128 -12
 27276 1c7c 22       		.uleb128 0x22
 27277 1c7d B00D0000 		.4byte	.LASF303
 27278 1c81 01       		.byte	0x1
 27279 1c82 370D     		.2byte	0xd37
 27280 1c84 C7000000 		.4byte	0xc7
 27281 1c88 02       		.uleb128 0x2
 27282 1c89 91       		.byte	0x91
 27283 1c8a 76       		.sleb128 -10
 27284 1c8b 22       		.uleb128 0x22
 27285 1c8c 3F020000 		.4byte	.LASF304
 27286 1c90 01       		.byte	0x1
 27287 1c91 380D     		.2byte	0xd38
 27288 1c93 AF000000 		.4byte	0xaf
 27289 1c97 02       		.uleb128 0x2
 27290 1c98 91       		.byte	0x91
 27291 1c99 70       		.sleb128 -16
 27292 1c9a 22       		.uleb128 0x22
 27293 1c9b 7D110000 		.4byte	.LASF305
 27294 1c9f 01       		.byte	0x1
 27295 1ca0 380D     		.2byte	0xd38
 27296 1ca2 AF000000 		.4byte	0xaf
 27297 1ca6 02       		.uleb128 0x2
 27298 1ca7 91       		.byte	0x91
 27299 1ca8 6C       		.sleb128 -20
 27300 1ca9 22       		.uleb128 0x22
 27301 1caa A6030000 		.4byte	.LASF306
 27302 1cae 01       		.byte	0x1
 27303 1caf 390D     		.2byte	0xd39
 27304 1cb1 97000000 		.4byte	0x97
 27305 1cb5 02       		.uleb128 0x2
 27306 1cb6 91       		.byte	0x91
 27307 1cb7 75       		.sleb128 -11
 27308 1cb8 00       		.byte	0
 27309 1cb9 09       		.uleb128 0x9
 27310 1cba 97000000 		.4byte	0x97
 27311 1cbe C91C0000 		.4byte	0x1cc9
 27312 1cc2 0A       		.uleb128 0xa
 27313 1cc3 18010000 		.4byte	0x118
 27314 1cc7 0F       		.byte	0xf
 27315 1cc8 00       		.byte	0
 27316 1cc9 2F       		.uleb128 0x2f
 27317 1cca 88000000 		.4byte	.LASF321
 27318 1cce 01       		.byte	0x1
 27319 1ccf 560D     		.2byte	0xd56
 27320 1cd1 00000000 		.4byte	.LFB100
 27321 1cd5 34000000 		.4byte	.LFE100-.LFB100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 590


 27322 1cd9 01       		.uleb128 0x1
 27323 1cda 9C       		.byte	0x9c
 27324 1cdb 26       		.uleb128 0x26
 27325 1cdc 28030000 		.4byte	.LASF307
 27326 1ce0 01       		.byte	0x1
 27327 1ce1 640D     		.2byte	0xd64
 27328 1ce3 00000000 		.4byte	.LFB101
 27329 1ce7 20000000 		.4byte	.LFE101-.LFB101
 27330 1ceb 01       		.uleb128 0x1
 27331 1cec 9C       		.byte	0x9c
 27332 1ced 011D0000 		.4byte	0x1d01
 27333 1cf1 22       		.uleb128 0x22
 27334 1cf2 26050000 		.4byte	.LASF215
 27335 1cf6 01       		.byte	0x1
 27336 1cf7 660D     		.2byte	0xd66
 27337 1cf9 5D080000 		.4byte	0x85d
 27338 1cfd 02       		.uleb128 0x2
 27339 1cfe 91       		.byte	0x91
 27340 1cff 74       		.sleb128 -12
 27341 1d00 00       		.byte	0
 27342 1d01 26       		.uleb128 0x26
 27343 1d02 05010000 		.4byte	.LASF308
 27344 1d06 01       		.byte	0x1
 27345 1d07 720D     		.2byte	0xd72
 27346 1d09 00000000 		.4byte	.LFB102
 27347 1d0d 6C000000 		.4byte	.LFE102-.LFB102
 27348 1d11 01       		.uleb128 0x1
 27349 1d12 9C       		.byte	0x9c
 27350 1d13 361D0000 		.4byte	0x1d36
 27351 1d17 22       		.uleb128 0x22
 27352 1d18 26050000 		.4byte	.LASF215
 27353 1d1c 01       		.byte	0x1
 27354 1d1d 760D     		.2byte	0xd76
 27355 1d1f 14090000 		.4byte	0x914
 27356 1d23 02       		.uleb128 0x2
 27357 1d24 91       		.byte	0x91
 27358 1d25 70       		.sleb128 -16
 27359 1d26 22       		.uleb128 0x22
 27360 1d27 C80F0000 		.4byte	.LASF221
 27361 1d2b 01       		.byte	0x1
 27362 1d2c 770D     		.2byte	0xd77
 27363 1d2e C7000000 		.4byte	0xc7
 27364 1d32 02       		.uleb128 0x2
 27365 1d33 91       		.byte	0x91
 27366 1d34 6E       		.sleb128 -18
 27367 1d35 00       		.byte	0
 27368 1d36 26       		.uleb128 0x26
 27369 1d37 BB0E0000 		.4byte	.LASF309
 27370 1d3b 01       		.byte	0x1
 27371 1d3c 880D     		.2byte	0xd88
 27372 1d3e 00000000 		.4byte	.LFB103
 27373 1d42 BC010000 		.4byte	.LFE103-.LFB103
 27374 1d46 01       		.uleb128 0x1
 27375 1d47 9C       		.byte	0x9c
 27376 1d48 981D0000 		.4byte	0x1d98
 27377 1d4c 22       		.uleb128 0x22
 27378 1d4d 4D0A0000 		.4byte	.LASF310
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 591


 27379 1d51 01       		.byte	0x1
 27380 1d52 8B0D     		.2byte	0xd8b
 27381 1d54 AF000000 		.4byte	0xaf
 27382 1d58 02       		.uleb128 0x2
 27383 1d59 91       		.byte	0x91
 27384 1d5a 70       		.sleb128 -16
 27385 1d5b 22       		.uleb128 0x22
 27386 1d5c 320D0000 		.4byte	.LASF311
 27387 1d60 01       		.byte	0x1
 27388 1d61 8C0D     		.2byte	0xd8c
 27389 1d63 EB000000 		.4byte	0xeb
 27390 1d67 02       		.uleb128 0x2
 27391 1d68 91       		.byte	0x91
 27392 1d69 6C       		.sleb128 -20
 27393 1d6a 22       		.uleb128 0x22
 27394 1d6b C5000000 		.4byte	.LASF216
 27395 1d6f 01       		.byte	0x1
 27396 1d70 8D0D     		.2byte	0xd8d
 27397 1d72 97000000 		.4byte	0x97
 27398 1d76 02       		.uleb128 0x2
 27399 1d77 91       		.byte	0x91
 27400 1d78 77       		.sleb128 -9
 27401 1d79 22       		.uleb128 0x22
 27402 1d7a 26050000 		.4byte	.LASF215
 27403 1d7e 01       		.byte	0x1
 27404 1d7f 8E0D     		.2byte	0xd8e
 27405 1d81 5D080000 		.4byte	0x85d
 27406 1d85 02       		.uleb128 0x2
 27407 1d86 91       		.byte	0x91
 27408 1d87 68       		.sleb128 -24
 27409 1d88 22       		.uleb128 0x22
 27410 1d89 CC0D0000 		.4byte	.LASF271
 27411 1d8d 01       		.byte	0x1
 27412 1d8e 8F0D     		.2byte	0xd8f
 27413 1d90 97000000 		.4byte	0x97
 27414 1d94 02       		.uleb128 0x2
 27415 1d95 91       		.byte	0x91
 27416 1d96 6B       		.sleb128 -21
 27417 1d97 00       		.byte	0
 27418 1d98 26       		.uleb128 0x26
 27419 1d99 A2010000 		.4byte	.LASF312
 27420 1d9d 01       		.byte	0x1
 27421 1d9e C90D     		.2byte	0xdc9
 27422 1da0 00000000 		.4byte	.LFB104
 27423 1da4 60000000 		.4byte	.LFE104-.LFB104
 27424 1da8 01       		.uleb128 0x1
 27425 1da9 9C       		.byte	0x9c
 27426 1daa CD1D0000 		.4byte	0x1dcd
 27427 1dae 22       		.uleb128 0x22
 27428 1daf 26050000 		.4byte	.LASF215
 27429 1db3 01       		.byte	0x1
 27430 1db4 CB0D     		.2byte	0xdcb
 27431 1db6 14090000 		.4byte	0x914
 27432 1dba 02       		.uleb128 0x2
 27433 1dbb 91       		.byte	0x91
 27434 1dbc 70       		.sleb128 -16
 27435 1dbd 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 592


 27436 1dbe C80F0000 		.4byte	.LASF221
 27437 1dc2 01       		.byte	0x1
 27438 1dc3 CC0D     		.2byte	0xdcc
 27439 1dc5 C7000000 		.4byte	0xc7
 27440 1dc9 02       		.uleb128 0x2
 27441 1dca 91       		.byte	0x91
 27442 1dcb 6E       		.sleb128 -18
 27443 1dcc 00       		.byte	0
 27444 1dcd 26       		.uleb128 0x26
 27445 1dce 41010000 		.4byte	.LASF313
 27446 1dd2 01       		.byte	0x1
 27447 1dd3 DF0D     		.2byte	0xddf
 27448 1dd5 00000000 		.4byte	.LFB105
 27449 1dd9 98050000 		.4byte	.LFE105-.LFB105
 27450 1ddd 01       		.uleb128 0x1
 27451 1dde 9C       		.byte	0x9c
 27452 1ddf 5A1E0000 		.4byte	0x1e5a
 27453 1de3 22       		.uleb128 0x22
 27454 1de4 C8110000 		.4byte	.LASF314
 27455 1de8 01       		.byte	0x1
 27456 1de9 E20D     		.2byte	0xde2
 27457 1deb 97000000 		.4byte	0x97
 27458 1def 02       		.uleb128 0x2
 27459 1df0 91       		.byte	0x91
 27460 1df1 6F       		.sleb128 -17
 27461 1df2 25       		.uleb128 0x25
 27462 1df3 6300     		.ascii	"c\000"
 27463 1df5 01       		.byte	0x1
 27464 1df6 E30D     		.2byte	0xde3
 27465 1df8 A3000000 		.4byte	0xa3
 27466 1dfc 02       		.uleb128 0x2
 27467 1dfd 91       		.byte	0x91
 27468 1dfe 6C       		.sleb128 -20
 27469 1dff 25       		.uleb128 0x25
 27470 1e00 6B00     		.ascii	"k\000"
 27471 1e02 01       		.byte	0x1
 27472 1e03 E40D     		.2byte	0xde4
 27473 1e05 97000000 		.4byte	0x97
 27474 1e09 02       		.uleb128 0x2
 27475 1e0a 91       		.byte	0x91
 27476 1e0b 6B       		.sleb128 -21
 27477 1e0c 22       		.uleb128 0x22
 27478 1e0d 26000000 		.4byte	.LASF315
 27479 1e11 01       		.byte	0x1
 27480 1e12 E50D     		.2byte	0xde5
 27481 1e14 A3000000 		.4byte	0xa3
 27482 1e18 02       		.uleb128 0x2
 27483 1e19 91       		.byte	0x91
 27484 1e1a 68       		.sleb128 -24
 27485 1e1b 22       		.uleb128 0x22
 27486 1e1c C80F0000 		.4byte	.LASF221
 27487 1e20 01       		.byte	0x1
 27488 1e21 E60D     		.2byte	0xde6
 27489 1e23 C7000000 		.4byte	0xc7
 27490 1e27 02       		.uleb128 0x2
 27491 1e28 91       		.byte	0x91
 27492 1e29 66       		.sleb128 -26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 593


 27493 1e2a 22       		.uleb128 0x22
 27494 1e2b 48110000 		.4byte	.LASF220
 27495 1e2f 01       		.byte	0x1
 27496 1e30 E70D     		.2byte	0xde7
 27497 1e32 EB000000 		.4byte	0xeb
 27498 1e36 02       		.uleb128 0x2
 27499 1e37 91       		.byte	0x91
 27500 1e38 60       		.sleb128 -32
 27501 1e39 22       		.uleb128 0x22
 27502 1e3a 26050000 		.4byte	.LASF215
 27503 1e3e 01       		.byte	0x1
 27504 1e3f EA0D     		.2byte	0xdea
 27505 1e41 5A1E0000 		.4byte	0x1e5a
 27506 1e45 03       		.uleb128 0x3
 27507 1e46 91       		.byte	0x91
 27508 1e47 807D     		.sleb128 -384
 27509 1e49 22       		.uleb128 0x22
 27510 1e4a DC070000 		.4byte	.LASF316
 27511 1e4e 01       		.byte	0x1
 27512 1e4f EB0D     		.2byte	0xdeb
 27513 1e51 6B1E0000 		.4byte	0x1e6b
 27514 1e55 03       		.uleb128 0x3
 27515 1e56 91       		.byte	0x91
 27516 1e57 E07C     		.sleb128 -416
 27517 1e59 00       		.byte	0
 27518 1e5a 09       		.uleb128 0x9
 27519 1e5b 97000000 		.4byte	0x97
 27520 1e5f 6B1E0000 		.4byte	0x1e6b
 27521 1e63 23       		.uleb128 0x23
 27522 1e64 18010000 		.4byte	0x118
 27523 1e68 5D01     		.2byte	0x15d
 27524 1e6a 00       		.byte	0
 27525 1e6b 09       		.uleb128 0x9
 27526 1e6c 97000000 		.4byte	0x97
 27527 1e70 7B1E0000 		.4byte	0x1e7b
 27528 1e74 0A       		.uleb128 0xa
 27529 1e75 18010000 		.4byte	0x118
 27530 1e79 1F       		.byte	0x1f
 27531 1e7a 00       		.byte	0
 27532 1e7b 26       		.uleb128 0x26
 27533 1e7c 23110000 		.4byte	.LASF317
 27534 1e80 01       		.byte	0x1
 27535 1e81 4E0E     		.2byte	0xe4e
 27536 1e83 00000000 		.4byte	.LFB106
 27537 1e87 8C000000 		.4byte	.LFE106-.LFB106
 27538 1e8b 01       		.uleb128 0x1
 27539 1e8c 9C       		.byte	0x9c
 27540 1e8d BB1E0000 		.4byte	0x1ebb
 27541 1e91 22       		.uleb128 0x22
 27542 1e92 26050000 		.4byte	.LASF215
 27543 1e96 01       		.byte	0x1
 27544 1e97 510E     		.2byte	0xe51
 27545 1e99 ED090000 		.4byte	0x9ed
 27546 1e9d 02       		.uleb128 0x2
 27547 1e9e 91       		.byte	0x91
 27548 1e9f 60       		.sleb128 -32
 27549 1ea0 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 594


 27550 1ea1 6900     		.ascii	"i\000"
 27551 1ea3 01       		.byte	0x1
 27552 1ea4 520E     		.2byte	0xe52
 27553 1ea6 97000000 		.4byte	0x97
 27554 1eaa 02       		.uleb128 0x2
 27555 1eab 91       		.byte	0x91
 27556 1eac 6F       		.sleb128 -17
 27557 1ead 25       		.uleb128 0x25
 27558 1eae 6A00     		.ascii	"j\000"
 27559 1eb0 01       		.byte	0x1
 27560 1eb1 520E     		.2byte	0xe52
 27561 1eb3 97000000 		.4byte	0x97
 27562 1eb7 02       		.uleb128 0x2
 27563 1eb8 91       		.byte	0x91
 27564 1eb9 6E       		.sleb128 -18
 27565 1eba 00       		.byte	0
 27566 1ebb 26       		.uleb128 0x26
 27567 1ebc E70E0000 		.4byte	.LASF318
 27568 1ec0 01       		.byte	0x1
 27569 1ec1 670E     		.2byte	0xe67
 27570 1ec3 00000000 		.4byte	.LFB107
 27571 1ec7 EC000000 		.4byte	.LFE107-.LFB107
 27572 1ecb 01       		.uleb128 0x1
 27573 1ecc 9C       		.byte	0x9c
 27574 1ecd 191F0000 		.4byte	0x1f19
 27575 1ed1 22       		.uleb128 0x22
 27576 1ed2 26050000 		.4byte	.LASF215
 27577 1ed6 01       		.byte	0x1
 27578 1ed7 6A0E     		.2byte	0xe6a
 27579 1ed9 191F0000 		.4byte	0x1f19
 27580 1edd 02       		.uleb128 0x2
 27581 1ede 91       		.byte	0x91
 27582 1edf 54       		.sleb128 -44
 27583 1ee0 25       		.uleb128 0x25
 27584 1ee1 6900     		.ascii	"i\000"
 27585 1ee3 01       		.byte	0x1
 27586 1ee4 6B0E     		.2byte	0xe6b
 27587 1ee6 97000000 		.4byte	0x97
 27588 1eea 02       		.uleb128 0x2
 27589 1eeb 91       		.byte	0x91
 27590 1eec 6F       		.sleb128 -17
 27591 1eed 25       		.uleb128 0x25
 27592 1eee 6A00     		.ascii	"j\000"
 27593 1ef0 01       		.byte	0x1
 27594 1ef1 6B0E     		.2byte	0xe6b
 27595 1ef3 97000000 		.4byte	0x97
 27596 1ef7 02       		.uleb128 0x2
 27597 1ef8 91       		.byte	0x91
 27598 1ef9 6E       		.sleb128 -18
 27599 1efa 25       		.uleb128 0x25
 27600 1efb 69647800 		.ascii	"idx\000"
 27601 1eff 01       		.byte	0x1
 27602 1f00 6B0E     		.2byte	0xe6b
 27603 1f02 97000000 		.4byte	0x97
 27604 1f06 02       		.uleb128 0x2
 27605 1f07 91       		.byte	0x91
 27606 1f08 6D       		.sleb128 -19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 595


 27607 1f09 22       		.uleb128 0x22
 27608 1f0a F70A0000 		.4byte	.LASF222
 27609 1f0e 01       		.byte	0x1
 27610 1f0f 6C0E     		.2byte	0xe6c
 27611 1f11 A3000000 		.4byte	0xa3
 27612 1f15 02       		.uleb128 0x2
 27613 1f16 91       		.byte	0x91
 27614 1f17 52       		.sleb128 -46
 27615 1f18 00       		.byte	0
 27616 1f19 09       		.uleb128 0x9
 27617 1f1a 97000000 		.4byte	0x97
 27618 1f1e 291F0000 		.4byte	0x1f29
 27619 1f22 0A       		.uleb128 0xa
 27620 1f23 18010000 		.4byte	0x118
 27621 1f27 15       		.byte	0x15
 27622 1f28 00       		.byte	0
 27623 1f29 26       		.uleb128 0x26
 27624 1f2a E0020000 		.4byte	.LASF319
 27625 1f2e 01       		.byte	0x1
 27626 1f2f 850E     		.2byte	0xe85
 27627 1f31 00000000 		.4byte	.LFB108
 27628 1f35 5C000000 		.4byte	.LFE108-.LFB108
 27629 1f39 01       		.uleb128 0x1
 27630 1f3a 9C       		.byte	0x9c
 27631 1f3b 5C1F0000 		.4byte	0x1f5c
 27632 1f3f 22       		.uleb128 0x22
 27633 1f40 26050000 		.4byte	.LASF215
 27634 1f44 01       		.byte	0x1
 27635 1f45 880E     		.2byte	0xe88
 27636 1f47 190B0000 		.4byte	0xb19
 27637 1f4b 02       		.uleb128 0x2
 27638 1f4c 91       		.byte	0x91
 27639 1f4d 68       		.sleb128 -24
 27640 1f4e 25       		.uleb128 0x25
 27641 1f4f 6900     		.ascii	"i\000"
 27642 1f51 01       		.byte	0x1
 27643 1f52 890E     		.2byte	0xe89
 27644 1f54 97000000 		.4byte	0x97
 27645 1f58 02       		.uleb128 0x2
 27646 1f59 91       		.byte	0x91
 27647 1f5a 77       		.sleb128 -9
 27648 1f5b 00       		.byte	0
 27649 1f5c 26       		.uleb128 0x26
 27650 1f5d 0D030000 		.4byte	.LASF320
 27651 1f61 01       		.byte	0x1
 27652 1f62 9C0E     		.2byte	0xe9c
 27653 1f64 00000000 		.4byte	.LFB109
 27654 1f68 C0000000 		.4byte	.LFE109-.LFB109
 27655 1f6c 01       		.uleb128 0x1
 27656 1f6d 9C       		.byte	0x9c
 27657 1f6e AD1F0000 		.4byte	0x1fad
 27658 1f72 22       		.uleb128 0x22
 27659 1f73 26050000 		.4byte	.LASF215
 27660 1f77 01       		.byte	0x1
 27661 1f78 9F0E     		.2byte	0xe9f
 27662 1f7a AD1F0000 		.4byte	0x1fad
 27663 1f7e 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 596


 27664 1f7f 91       		.byte	0x91
 27665 1f80 54       		.sleb128 -44
 27666 1f81 25       		.uleb128 0x25
 27667 1f82 6900     		.ascii	"i\000"
 27668 1f84 01       		.byte	0x1
 27669 1f85 A00E     		.2byte	0xea0
 27670 1f87 97000000 		.4byte	0x97
 27671 1f8b 02       		.uleb128 0x2
 27672 1f8c 91       		.byte	0x91
 27673 1f8d 6F       		.sleb128 -17
 27674 1f8e 25       		.uleb128 0x25
 27675 1f8f 69647800 		.ascii	"idx\000"
 27676 1f93 01       		.byte	0x1
 27677 1f94 A00E     		.2byte	0xea0
 27678 1f96 97000000 		.4byte	0x97
 27679 1f9a 02       		.uleb128 0x2
 27680 1f9b 91       		.byte	0x91
 27681 1f9c 6E       		.sleb128 -18
 27682 1f9d 22       		.uleb128 0x22
 27683 1f9e C80F0000 		.4byte	.LASF221
 27684 1fa2 01       		.byte	0x1
 27685 1fa3 A10E     		.2byte	0xea1
 27686 1fa5 C7000000 		.4byte	0xc7
 27687 1fa9 02       		.uleb128 0x2
 27688 1faa 91       		.byte	0x91
 27689 1fab 52       		.sleb128 -46
 27690 1fac 00       		.byte	0
 27691 1fad 09       		.uleb128 0x9
 27692 1fae 97000000 		.4byte	0x97
 27693 1fb2 BD1F0000 		.4byte	0x1fbd
 27694 1fb6 0A       		.uleb128 0xa
 27695 1fb7 18010000 		.4byte	0x118
 27696 1fbb 19       		.byte	0x19
 27697 1fbc 00       		.byte	0
 27698 1fbd 30       		.uleb128 0x30
 27699 1fbe 99000000 		.4byte	.LASF322
 27700 1fc2 01       		.byte	0x1
 27701 1fc3 BC0E     		.2byte	0xebc
 27702 1fc5 00000000 		.4byte	.LFB110
 27703 1fc9 0C000000 		.4byte	.LFE110-.LFB110
 27704 1fcd 01       		.uleb128 0x1
 27705 1fce 9C       		.byte	0x9c
 27706 1fcf 2A       		.uleb128 0x2a
 27707 1fd0 ED0B0000 		.4byte	.LASF323
 27708 1fd4 01       		.byte	0x1
 27709 1fd5 020F     		.2byte	0xf02
 27710 1fd7 00000000 		.4byte	.LFB111
 27711 1fdb 1A000000 		.4byte	.LFE111-.LFB111
 27712 1fdf 01       		.uleb128 0x1
 27713 1fe0 9C       		.byte	0x9c
 27714 1fe1 04200000 		.4byte	0x2004
 27715 1fe5 24       		.uleb128 0x24
 27716 1fe6 78020000 		.4byte	.LASF324
 27717 1fea 01       		.byte	0x1
 27718 1feb 020F     		.2byte	0xf02
 27719 1fed 97000000 		.4byte	0x97
 27720 1ff1 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 597


 27721 1ff2 91       		.byte	0x91
 27722 1ff3 77       		.sleb128 -9
 27723 1ff4 24       		.uleb128 0x24
 27724 1ff5 63090000 		.4byte	.LASF177
 27725 1ff9 01       		.byte	0x1
 27726 1ffa 020F     		.2byte	0xf02
 27727 1ffc 97000000 		.4byte	0x97
 27728 2000 02       		.uleb128 0x2
 27729 2001 91       		.byte	0x91
 27730 2002 76       		.sleb128 -10
 27731 2003 00       		.byte	0
 27732 2004 30       		.uleb128 0x30
 27733 2005 86100000 		.4byte	.LASF325
 27734 2009 01       		.byte	0x1
 27735 200a 2B0F     		.2byte	0xf2b
 27736 200c 00000000 		.4byte	.LFB112
 27737 2010 0C000000 		.4byte	.LFE112-.LFB112
 27738 2014 01       		.uleb128 0x1
 27739 2015 9C       		.byte	0x9c
 27740 2016 30       		.uleb128 0x30
 27741 2017 4B050000 		.4byte	.LASF326
 27742 201b 01       		.byte	0x1
 27743 201c 3A0F     		.2byte	0xf3a
 27744 201e 00000000 		.4byte	.LFB113
 27745 2022 0C000000 		.4byte	.LFE113-.LFB113
 27746 2026 01       		.uleb128 0x1
 27747 2027 9C       		.byte	0x9c
 27748 2028 31       		.uleb128 0x31
 27749 2029 05100000 		.4byte	.LASF327
 27750 202d 09       		.byte	0x9
 27751 202e 1207     		.2byte	0x712
 27752 2030 34200000 		.4byte	0x2034
 27753 2034 06       		.uleb128 0x6
 27754 2035 81000000 		.4byte	0x81
 27755 2039 09       		.uleb128 0x9
 27756 203a 10030000 		.4byte	0x310
 27757 203e 49200000 		.4byte	0x2049
 27758 2042 0A       		.uleb128 0xa
 27759 2043 18010000 		.4byte	0x118
 27760 2047 01       		.byte	0x1
 27761 2048 00       		.byte	0
 27762 2049 31       		.uleb128 0x31
 27763 204a 17120000 		.4byte	.LASF328
 27764 204e 08       		.byte	0x8
 27765 204f F301     		.2byte	0x1f3
 27766 2051 39200000 		.4byte	0x2039
 27767 2055 31       		.uleb128 0x31
 27768 2056 F0030000 		.4byte	.LASF329
 27769 205a 08       		.byte	0x8
 27770 205b F301     		.2byte	0x1f3
 27771 205d 39200000 		.4byte	0x2039
 27772 2061 31       		.uleb128 0x31
 27773 2062 A60B0000 		.4byte	.LASF330
 27774 2066 08       		.byte	0x8
 27775 2067 F301     		.2byte	0x1f3
 27776 2069 39200000 		.4byte	0x2039
 27777 206d 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 598


 27778 206e 4D030000 		.4byte	0x34d
 27779 2072 7D200000 		.4byte	0x207d
 27780 2076 0A       		.uleb128 0xa
 27781 2077 18010000 		.4byte	0x118
 27782 207b 01       		.byte	0x1
 27783 207c 00       		.byte	0
 27784 207d 31       		.uleb128 0x31
 27785 207e D2050000 		.4byte	.LASF331
 27786 2082 08       		.byte	0x8
 27787 2083 F401     		.2byte	0x1f4
 27788 2085 6D200000 		.4byte	0x206d
 27789 2089 31       		.uleb128 0x31
 27790 208a 61120000 		.4byte	.LASF332
 27791 208e 08       		.byte	0x8
 27792 208f F401     		.2byte	0x1f4
 27793 2091 6D200000 		.4byte	0x206d
 27794 2095 31       		.uleb128 0x31
 27795 2096 6A000000 		.4byte	.LASF333
 27796 209a 08       		.byte	0x8
 27797 209b F501     		.2byte	0x1f5
 27798 209d CE030000 		.4byte	0x3ce
 27799 20a1 31       		.uleb128 0x31
 27800 20a2 22130000 		.4byte	.LASF334
 27801 20a6 08       		.byte	0x8
 27802 20a7 F501     		.2byte	0x1f5
 27803 20a9 CE030000 		.4byte	0x3ce
 27804 20ad 31       		.uleb128 0x31
 27805 20ae 9D0E0000 		.4byte	.LASF335
 27806 20b2 08       		.byte	0x8
 27807 20b3 F601     		.2byte	0x1f6
 27808 20b5 13040000 		.4byte	0x413
 27809 20b9 31       		.uleb128 0x31
 27810 20ba 5D000000 		.4byte	.LASF336
 27811 20be 08       		.byte	0x8
 27812 20bf F701     		.2byte	0x1f7
 27813 20c1 2C040000 		.4byte	0x42c
 27814 20c5 31       		.uleb128 0x31
 27815 20c6 CC0E0000 		.4byte	.LASF337
 27816 20ca 08       		.byte	0x8
 27817 20cb F801     		.2byte	0x1f8
 27818 20cd 4F0A0000 		.4byte	0xa4f
 27819 20d1 31       		.uleb128 0x31
 27820 20d2 BC090000 		.4byte	.LASF338
 27821 20d6 08       		.byte	0x8
 27822 20d7 F801     		.2byte	0x1f8
 27823 20d9 4F0A0000 		.4byte	0xa4f
 27824 20dd 31       		.uleb128 0x31
 27825 20de C8080000 		.4byte	.LASF339
 27826 20e2 08       		.byte	0x8
 27827 20e3 F901     		.2byte	0x1f9
 27828 20e5 E50B0000 		.4byte	0xbe5
 27829 20e9 31       		.uleb128 0x31
 27830 20ea 55020000 		.4byte	.LASF340
 27831 20ee 08       		.byte	0x8
 27832 20ef FE01     		.2byte	0x1fe
 27833 20f1 A3000000 		.4byte	0xa3
 27834 20f5 31       		.uleb128 0x31
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 599


 27835 20f6 E20C0000 		.4byte	.LASF341
 27836 20fa 08       		.byte	0x8
 27837 20fb FF01     		.2byte	0x1ff
 27838 20fd A3000000 		.4byte	0xa3
 27839 2101 31       		.uleb128 0x31
 27840 2102 140D0000 		.4byte	.LASF342
 27841 2106 08       		.byte	0x8
 27842 2107 0202     		.2byte	0x202
 27843 2109 F3030000 		.4byte	0x3f3
 27844 210d 31       		.uleb128 0x31
 27845 210e EC100000 		.4byte	.LASF343
 27846 2112 08       		.byte	0x8
 27847 2113 0302     		.2byte	0x203
 27848 2115 5D080000 		.4byte	0x85d
 27849 2119 31       		.uleb128 0x31
 27850 211a 25100000 		.4byte	.LASF344
 27851 211e 08       		.byte	0x8
 27852 211f 0602     		.2byte	0x206
 27853 2121 F3030000 		.4byte	0x3f3
 27854 2125 31       		.uleb128 0x31
 27855 2126 6C090000 		.4byte	.LASF345
 27856 212a 08       		.byte	0x8
 27857 212b 0D02     		.2byte	0x20d
 27858 212d 97000000 		.4byte	0x97
 27859 2131 31       		.uleb128 0x31
 27860 2132 B8030000 		.4byte	.LASF346
 27861 2136 08       		.byte	0x8
 27862 2137 0F02     		.2byte	0x20f
 27863 2139 97000000 		.4byte	0x97
 27864 213d 31       		.uleb128 0x31
 27865 213e 1D090000 		.4byte	.LASF347
 27866 2142 08       		.byte	0x8
 27867 2143 1602     		.2byte	0x216
 27868 2145 97000000 		.4byte	0x97
 27869 2149 31       		.uleb128 0x31
 27870 214a 78060000 		.4byte	.LASF348
 27871 214e 08       		.byte	0x8
 27872 214f 1702     		.2byte	0x217
 27873 2151 97000000 		.4byte	0x97
 27874 2155 09       		.uleb128 0x9
 27875 2156 C7000000 		.4byte	0xc7
 27876 215a 65210000 		.4byte	0x2165
 27877 215e 0A       		.uleb128 0xa
 27878 215f 18010000 		.4byte	0x118
 27879 2163 0B       		.byte	0xb
 27880 2164 00       		.byte	0
 27881 2165 31       		.uleb128 0x31
 27882 2166 B0030000 		.4byte	.LASF349
 27883 216a 08       		.byte	0x8
 27884 216b 1A02     		.2byte	0x21a
 27885 216d 55210000 		.4byte	0x2155
 27886 2171 31       		.uleb128 0x31
 27887 2172 23120000 		.4byte	.LASF350
 27888 2176 08       		.byte	0x8
 27889 2177 1B02     		.2byte	0x21b
 27890 2179 97000000 		.4byte	0x97
 27891 217d 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 600


 27892 217e AF000000 		.4byte	0xaf
 27893 2182 8D210000 		.4byte	0x218d
 27894 2186 0A       		.uleb128 0xa
 27895 2187 18010000 		.4byte	0x118
 27896 218b 04       		.byte	0x4
 27897 218c 00       		.byte	0
 27898 218d 31       		.uleb128 0x31
 27899 218e F2050000 		.4byte	.LASF351
 27900 2192 08       		.byte	0x8
 27901 2193 2102     		.2byte	0x221
 27902 2195 7D210000 		.4byte	0x217d
 27903 2199 31       		.uleb128 0x31
 27904 219a DB0D0000 		.4byte	.LASF352
 27905 219e 08       		.byte	0x8
 27906 219f 2202     		.2byte	0x222
 27907 21a1 5D080000 		.4byte	0x85d
 27908 21a5 09       		.uleb128 0x9
 27909 21a6 A3000000 		.4byte	0xa3
 27910 21aa BB210000 		.4byte	0x21bb
 27911 21ae 0A       		.uleb128 0xa
 27912 21af 18010000 		.4byte	0x118
 27913 21b3 01       		.byte	0x1
 27914 21b4 0A       		.uleb128 0xa
 27915 21b5 18010000 		.4byte	0x118
 27916 21b9 04       		.byte	0x4
 27917 21ba 00       		.byte	0
 27918 21bb 31       		.uleb128 0x31
 27919 21bc 15110000 		.4byte	.LASF353
 27920 21c0 08       		.byte	0x8
 27921 21c1 2302     		.2byte	0x223
 27922 21c3 A5210000 		.4byte	0x21a5
 27923 21c7 31       		.uleb128 0x31
 27924 21c8 32050000 		.4byte	.LASF354
 27925 21cc 08       		.byte	0x8
 27926 21cd 2A02     		.2byte	0x22a
 27927 21cf 0A030000 		.4byte	0x30a
 27928 21d3 31       		.uleb128 0x31
 27929 21d4 4F0F0000 		.4byte	.LASF355
 27930 21d8 08       		.byte	0x8
 27931 21d9 2F02     		.2byte	0x22f
 27932 21db 97000000 		.4byte	0x97
 27933 21df 31       		.uleb128 0x31
 27934 21e0 52110000 		.4byte	.LASF356
 27935 21e4 08       		.byte	0x8
 27936 21e5 3002     		.2byte	0x230
 27937 21e7 CE070000 		.4byte	0x7ce
 27938 21eb 31       		.uleb128 0x31
 27939 21ec F60F0000 		.4byte	.LASF357
 27940 21f0 08       		.byte	0x8
 27941 21f1 3102     		.2byte	0x231
 27942 21f3 73000000 		.4byte	0x73
 27943 21f7 09       		.uleb128 0x9
 27944 21f8 73000000 		.4byte	0x73
 27945 21fc 07220000 		.4byte	0x2207
 27946 2200 0A       		.uleb128 0xa
 27947 2201 18010000 		.4byte	0x118
 27948 2205 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 601


 27949 2206 00       		.byte	0
 27950 2207 31       		.uleb128 0x31
 27951 2208 84030000 		.4byte	.LASF358
 27952 220c 08       		.byte	0x8
 27953 220d 3202     		.2byte	0x232
 27954 220f F7210000 		.4byte	0x21f7
 27955 2213 09       		.uleb128 0x9
 27956 2214 690B0000 		.4byte	0xb69
 27957 2218 23220000 		.4byte	0x2223
 27958 221c 0A       		.uleb128 0xa
 27959 221d 18010000 		.4byte	0x118
 27960 2221 04       		.byte	0x4
 27961 2222 00       		.byte	0
 27962 2223 31       		.uleb128 0x31
 27963 2224 45060000 		.4byte	.LASF359
 27964 2228 08       		.byte	0x8
 27965 2229 3302     		.2byte	0x233
 27966 222b 13220000 		.4byte	0x2213
 27967 222f 09       		.uleb128 0x9
 27968 2230 97000000 		.4byte	0x97
 27969 2234 45220000 		.4byte	0x2245
 27970 2238 0A       		.uleb128 0xa
 27971 2239 18010000 		.4byte	0x118
 27972 223d 04       		.byte	0x4
 27973 223e 0A       		.uleb128 0xa
 27974 223f 18010000 		.4byte	0x118
 27975 2243 02       		.byte	0x2
 27976 2244 00       		.byte	0
 27977 2245 31       		.uleb128 0x31
 27978 2246 0E0A0000 		.4byte	.LASF360
 27979 224a 08       		.byte	0x8
 27980 224b 3702     		.2byte	0x237
 27981 224d 2F220000 		.4byte	0x222f
 27982 2251 31       		.uleb128 0x31
 27983 2252 40120000 		.4byte	.LASF361
 27984 2256 08       		.byte	0x8
 27985 2257 3C02     		.2byte	0x23c
 27986 2259 97000000 		.4byte	0x97
 27987 225d 32       		.uleb128 0x32
 27988 225e D20F0000 		.4byte	.LASF362
 27989 2262 01       		.byte	0x1
 27990 2263 33       		.byte	0x33
 27991 2264 6E220000 		.4byte	0x226e
 27992 2268 05       		.uleb128 0x5
 27993 2269 03       		.byte	0x3
 27994 226a 00000000 		.4byte	EEPROM_ADDR
 27995 226e 07       		.uleb128 0x7
 27996 226f 04       		.byte	0x4
 27997 2270 00010000 		.4byte	0x100
 27998 2274 00       		.byte	0
 27999              		.section	.debug_abbrev,"",%progbits
 28000              	.Ldebug_abbrev0:
 28001 0000 01       		.uleb128 0x1
 28002 0001 11       		.uleb128 0x11
 28003 0002 01       		.byte	0x1
 28004 0003 25       		.uleb128 0x25
 28005 0004 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 602


 28006 0005 13       		.uleb128 0x13
 28007 0006 0B       		.uleb128 0xb
 28008 0007 03       		.uleb128 0x3
 28009 0008 0E       		.uleb128 0xe
 28010 0009 1B       		.uleb128 0x1b
 28011 000a 0E       		.uleb128 0xe
 28012 000b 55       		.uleb128 0x55
 28013 000c 17       		.uleb128 0x17
 28014 000d 11       		.uleb128 0x11
 28015 000e 01       		.uleb128 0x1
 28016 000f 10       		.uleb128 0x10
 28017 0010 17       		.uleb128 0x17
 28018 0011 00       		.byte	0
 28019 0012 00       		.byte	0
 28020 0013 02       		.uleb128 0x2
 28021 0014 24       		.uleb128 0x24
 28022 0015 00       		.byte	0
 28023 0016 0B       		.uleb128 0xb
 28024 0017 0B       		.uleb128 0xb
 28025 0018 3E       		.uleb128 0x3e
 28026 0019 0B       		.uleb128 0xb
 28027 001a 03       		.uleb128 0x3
 28028 001b 0E       		.uleb128 0xe
 28029 001c 00       		.byte	0
 28030 001d 00       		.byte	0
 28031 001e 03       		.uleb128 0x3
 28032 001f 16       		.uleb128 0x16
 28033 0020 00       		.byte	0
 28034 0021 03       		.uleb128 0x3
 28035 0022 0E       		.uleb128 0xe
 28036 0023 3A       		.uleb128 0x3a
 28037 0024 0B       		.uleb128 0xb
 28038 0025 3B       		.uleb128 0x3b
 28039 0026 0B       		.uleb128 0xb
 28040 0027 49       		.uleb128 0x49
 28041 0028 13       		.uleb128 0x13
 28042 0029 00       		.byte	0
 28043 002a 00       		.byte	0
 28044 002b 04       		.uleb128 0x4
 28045 002c 24       		.uleb128 0x24
 28046 002d 00       		.byte	0
 28047 002e 0B       		.uleb128 0xb
 28048 002f 0B       		.uleb128 0xb
 28049 0030 3E       		.uleb128 0x3e
 28050 0031 0B       		.uleb128 0xb
 28051 0032 03       		.uleb128 0x3
 28052 0033 08       		.uleb128 0x8
 28053 0034 00       		.byte	0
 28054 0035 00       		.byte	0
 28055 0036 05       		.uleb128 0x5
 28056 0037 16       		.uleb128 0x16
 28057 0038 00       		.byte	0
 28058 0039 03       		.uleb128 0x3
 28059 003a 0E       		.uleb128 0xe
 28060 003b 3A       		.uleb128 0x3a
 28061 003c 0B       		.uleb128 0xb
 28062 003d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 603


 28063 003e 05       		.uleb128 0x5
 28064 003f 49       		.uleb128 0x49
 28065 0040 13       		.uleb128 0x13
 28066 0041 00       		.byte	0
 28067 0042 00       		.byte	0
 28068 0043 06       		.uleb128 0x6
 28069 0044 35       		.uleb128 0x35
 28070 0045 00       		.byte	0
 28071 0046 49       		.uleb128 0x49
 28072 0047 13       		.uleb128 0x13
 28073 0048 00       		.byte	0
 28074 0049 00       		.byte	0
 28075 004a 07       		.uleb128 0x7
 28076 004b 0F       		.uleb128 0xf
 28077 004c 00       		.byte	0
 28078 004d 0B       		.uleb128 0xb
 28079 004e 0B       		.uleb128 0xb
 28080 004f 49       		.uleb128 0x49
 28081 0050 13       		.uleb128 0x13
 28082 0051 00       		.byte	0
 28083 0052 00       		.byte	0
 28084 0053 08       		.uleb128 0x8
 28085 0054 26       		.uleb128 0x26
 28086 0055 00       		.byte	0
 28087 0056 49       		.uleb128 0x49
 28088 0057 13       		.uleb128 0x13
 28089 0058 00       		.byte	0
 28090 0059 00       		.byte	0
 28091 005a 09       		.uleb128 0x9
 28092 005b 01       		.uleb128 0x1
 28093 005c 01       		.byte	0x1
 28094 005d 49       		.uleb128 0x49
 28095 005e 13       		.uleb128 0x13
 28096 005f 01       		.uleb128 0x1
 28097 0060 13       		.uleb128 0x13
 28098 0061 00       		.byte	0
 28099 0062 00       		.byte	0
 28100 0063 0A       		.uleb128 0xa
 28101 0064 21       		.uleb128 0x21
 28102 0065 00       		.byte	0
 28103 0066 49       		.uleb128 0x49
 28104 0067 13       		.uleb128 0x13
 28105 0068 2F       		.uleb128 0x2f
 28106 0069 0B       		.uleb128 0xb
 28107 006a 00       		.byte	0
 28108 006b 00       		.byte	0
 28109 006c 0B       		.uleb128 0xb
 28110 006d 04       		.uleb128 0x4
 28111 006e 01       		.byte	0x1
 28112 006f 03       		.uleb128 0x3
 28113 0070 0E       		.uleb128 0xe
 28114 0071 0B       		.uleb128 0xb
 28115 0072 0B       		.uleb128 0xb
 28116 0073 49       		.uleb128 0x49
 28117 0074 13       		.uleb128 0x13
 28118 0075 3A       		.uleb128 0x3a
 28119 0076 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 604


 28120 0077 3B       		.uleb128 0x3b
 28121 0078 0B       		.uleb128 0xb
 28122 0079 01       		.uleb128 0x1
 28123 007a 13       		.uleb128 0x13
 28124 007b 00       		.byte	0
 28125 007c 00       		.byte	0
 28126 007d 0C       		.uleb128 0xc
 28127 007e 28       		.uleb128 0x28
 28128 007f 00       		.byte	0
 28129 0080 03       		.uleb128 0x3
 28130 0081 0E       		.uleb128 0xe
 28131 0082 1C       		.uleb128 0x1c
 28132 0083 0B       		.uleb128 0xb
 28133 0084 00       		.byte	0
 28134 0085 00       		.byte	0
 28135 0086 0D       		.uleb128 0xd
 28136 0087 13       		.uleb128 0x13
 28137 0088 00       		.byte	0
 28138 0089 03       		.uleb128 0x3
 28139 008a 0E       		.uleb128 0xe
 28140 008b 3C       		.uleb128 0x3c
 28141 008c 19       		.uleb128 0x19
 28142 008d 00       		.byte	0
 28143 008e 00       		.byte	0
 28144 008f 0E       		.uleb128 0xe
 28145 0090 13       		.uleb128 0x13
 28146 0091 01       		.byte	0x1
 28147 0092 03       		.uleb128 0x3
 28148 0093 0E       		.uleb128 0xe
 28149 0094 0B       		.uleb128 0xb
 28150 0095 0B       		.uleb128 0xb
 28151 0096 3A       		.uleb128 0x3a
 28152 0097 0B       		.uleb128 0xb
 28153 0098 3B       		.uleb128 0x3b
 28154 0099 0B       		.uleb128 0xb
 28155 009a 01       		.uleb128 0x1
 28156 009b 13       		.uleb128 0x13
 28157 009c 00       		.byte	0
 28158 009d 00       		.byte	0
 28159 009e 0F       		.uleb128 0xf
 28160 009f 0D       		.uleb128 0xd
 28161 00a0 00       		.byte	0
 28162 00a1 03       		.uleb128 0x3
 28163 00a2 08       		.uleb128 0x8
 28164 00a3 3A       		.uleb128 0x3a
 28165 00a4 0B       		.uleb128 0xb
 28166 00a5 3B       		.uleb128 0x3b
 28167 00a6 0B       		.uleb128 0xb
 28168 00a7 49       		.uleb128 0x49
 28169 00a8 13       		.uleb128 0x13
 28170 00a9 38       		.uleb128 0x38
 28171 00aa 0B       		.uleb128 0xb
 28172 00ab 00       		.byte	0
 28173 00ac 00       		.byte	0
 28174 00ad 10       		.uleb128 0x10
 28175 00ae 0D       		.uleb128 0xd
 28176 00af 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 605


 28177 00b0 03       		.uleb128 0x3
 28178 00b1 0E       		.uleb128 0xe
 28179 00b2 3A       		.uleb128 0x3a
 28180 00b3 0B       		.uleb128 0xb
 28181 00b4 3B       		.uleb128 0x3b
 28182 00b5 0B       		.uleb128 0xb
 28183 00b6 49       		.uleb128 0x49
 28184 00b7 13       		.uleb128 0x13
 28185 00b8 38       		.uleb128 0x38
 28186 00b9 0B       		.uleb128 0xb
 28187 00ba 00       		.byte	0
 28188 00bb 00       		.byte	0
 28189 00bc 11       		.uleb128 0x11
 28190 00bd 13       		.uleb128 0x13
 28191 00be 01       		.byte	0x1
 28192 00bf 03       		.uleb128 0x3
 28193 00c0 0E       		.uleb128 0xe
 28194 00c1 0B       		.uleb128 0xb
 28195 00c2 0B       		.uleb128 0xb
 28196 00c3 3A       		.uleb128 0x3a
 28197 00c4 0B       		.uleb128 0xb
 28198 00c5 3B       		.uleb128 0x3b
 28199 00c6 05       		.uleb128 0x5
 28200 00c7 01       		.uleb128 0x1
 28201 00c8 13       		.uleb128 0x13
 28202 00c9 00       		.byte	0
 28203 00ca 00       		.byte	0
 28204 00cb 12       		.uleb128 0x12
 28205 00cc 0D       		.uleb128 0xd
 28206 00cd 00       		.byte	0
 28207 00ce 03       		.uleb128 0x3
 28208 00cf 0E       		.uleb128 0xe
 28209 00d0 3A       		.uleb128 0x3a
 28210 00d1 0B       		.uleb128 0xb
 28211 00d2 3B       		.uleb128 0x3b
 28212 00d3 05       		.uleb128 0x5
 28213 00d4 49       		.uleb128 0x49
 28214 00d5 13       		.uleb128 0x13
 28215 00d6 38       		.uleb128 0x38
 28216 00d7 0B       		.uleb128 0xb
 28217 00d8 00       		.byte	0
 28218 00d9 00       		.byte	0
 28219 00da 13       		.uleb128 0x13
 28220 00db 0D       		.uleb128 0xd
 28221 00dc 00       		.byte	0
 28222 00dd 03       		.uleb128 0x3
 28223 00de 08       		.uleb128 0x8
 28224 00df 3A       		.uleb128 0x3a
 28225 00e0 0B       		.uleb128 0xb
 28226 00e1 3B       		.uleb128 0x3b
 28227 00e2 05       		.uleb128 0x5
 28228 00e3 49       		.uleb128 0x49
 28229 00e4 13       		.uleb128 0x13
 28230 00e5 38       		.uleb128 0x38
 28231 00e6 0B       		.uleb128 0xb
 28232 00e7 00       		.byte	0
 28233 00e8 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 606


 28234 00e9 14       		.uleb128 0x14
 28235 00ea 13       		.uleb128 0x13
 28236 00eb 01       		.byte	0x1
 28237 00ec 03       		.uleb128 0x3
 28238 00ed 0E       		.uleb128 0xe
 28239 00ee 0B       		.uleb128 0xb
 28240 00ef 05       		.uleb128 0x5
 28241 00f0 3A       		.uleb128 0x3a
 28242 00f1 0B       		.uleb128 0xb
 28243 00f2 3B       		.uleb128 0x3b
 28244 00f3 05       		.uleb128 0x5
 28245 00f4 01       		.uleb128 0x1
 28246 00f5 13       		.uleb128 0x13
 28247 00f6 00       		.byte	0
 28248 00f7 00       		.byte	0
 28249 00f8 15       		.uleb128 0x15
 28250 00f9 0D       		.uleb128 0xd
 28251 00fa 00       		.byte	0
 28252 00fb 03       		.uleb128 0x3
 28253 00fc 08       		.uleb128 0x8
 28254 00fd 3A       		.uleb128 0x3a
 28255 00fe 0B       		.uleb128 0xb
 28256 00ff 3B       		.uleb128 0x3b
 28257 0100 05       		.uleb128 0x5
 28258 0101 49       		.uleb128 0x49
 28259 0102 13       		.uleb128 0x13
 28260 0103 38       		.uleb128 0x38
 28261 0104 05       		.uleb128 0x5
 28262 0105 00       		.byte	0
 28263 0106 00       		.byte	0
 28264 0107 16       		.uleb128 0x16
 28265 0108 0D       		.uleb128 0xd
 28266 0109 00       		.byte	0
 28267 010a 03       		.uleb128 0x3
 28268 010b 0E       		.uleb128 0xe
 28269 010c 3A       		.uleb128 0x3a
 28270 010d 0B       		.uleb128 0xb
 28271 010e 3B       		.uleb128 0x3b
 28272 010f 05       		.uleb128 0x5
 28273 0110 49       		.uleb128 0x49
 28274 0111 13       		.uleb128 0x13
 28275 0112 38       		.uleb128 0x38
 28276 0113 05       		.uleb128 0x5
 28277 0114 00       		.byte	0
 28278 0115 00       		.byte	0
 28279 0116 17       		.uleb128 0x17
 28280 0117 2E       		.uleb128 0x2e
 28281 0118 01       		.byte	0x1
 28282 0119 03       		.uleb128 0x3
 28283 011a 0E       		.uleb128 0xe
 28284 011b 3A       		.uleb128 0x3a
 28285 011c 0B       		.uleb128 0xb
 28286 011d 3B       		.uleb128 0x3b
 28287 011e 05       		.uleb128 0x5
 28288 011f 27       		.uleb128 0x27
 28289 0120 19       		.uleb128 0x19
 28290 0121 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 607


 28291 0122 13       		.uleb128 0x13
 28292 0123 20       		.uleb128 0x20
 28293 0124 0B       		.uleb128 0xb
 28294 0125 01       		.uleb128 0x1
 28295 0126 13       		.uleb128 0x13
 28296 0127 00       		.byte	0
 28297 0128 00       		.byte	0
 28298 0129 18       		.uleb128 0x18
 28299 012a 05       		.uleb128 0x5
 28300 012b 00       		.byte	0
 28301 012c 03       		.uleb128 0x3
 28302 012d 0E       		.uleb128 0xe
 28303 012e 3A       		.uleb128 0x3a
 28304 012f 0B       		.uleb128 0xb
 28305 0130 3B       		.uleb128 0x3b
 28306 0131 05       		.uleb128 0x5
 28307 0132 49       		.uleb128 0x49
 28308 0133 13       		.uleb128 0x13
 28309 0134 00       		.byte	0
 28310 0135 00       		.byte	0
 28311 0136 19       		.uleb128 0x19
 28312 0137 34       		.uleb128 0x34
 28313 0138 00       		.byte	0
 28314 0139 03       		.uleb128 0x3
 28315 013a 0E       		.uleb128 0xe
 28316 013b 3A       		.uleb128 0x3a
 28317 013c 0B       		.uleb128 0xb
 28318 013d 3B       		.uleb128 0x3b
 28319 013e 05       		.uleb128 0x5
 28320 013f 49       		.uleb128 0x49
 28321 0140 13       		.uleb128 0x13
 28322 0141 00       		.byte	0
 28323 0142 00       		.byte	0
 28324 0143 1A       		.uleb128 0x1a
 28325 0144 2E       		.uleb128 0x2e
 28326 0145 01       		.byte	0x1
 28327 0146 3F       		.uleb128 0x3f
 28328 0147 19       		.uleb128 0x19
 28329 0148 03       		.uleb128 0x3
 28330 0149 0E       		.uleb128 0xe
 28331 014a 3A       		.uleb128 0x3a
 28332 014b 0B       		.uleb128 0xb
 28333 014c 3B       		.uleb128 0x3b
 28334 014d 0B       		.uleb128 0xb
 28335 014e 27       		.uleb128 0x27
 28336 014f 19       		.uleb128 0x19
 28337 0150 11       		.uleb128 0x11
 28338 0151 01       		.uleb128 0x1
 28339 0152 12       		.uleb128 0x12
 28340 0153 06       		.uleb128 0x6
 28341 0154 40       		.uleb128 0x40
 28342 0155 18       		.uleb128 0x18
 28343 0156 9642     		.uleb128 0x2116
 28344 0158 19       		.uleb128 0x19
 28345 0159 01       		.uleb128 0x1
 28346 015a 13       		.uleb128 0x13
 28347 015b 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 608


 28348 015c 00       		.byte	0
 28349 015d 1B       		.uleb128 0x1b
 28350 015e 34       		.uleb128 0x34
 28351 015f 00       		.byte	0
 28352 0160 03       		.uleb128 0x3
 28353 0161 0E       		.uleb128 0xe
 28354 0162 3A       		.uleb128 0x3a
 28355 0163 0B       		.uleb128 0xb
 28356 0164 3B       		.uleb128 0x3b
 28357 0165 0B       		.uleb128 0xb
 28358 0166 49       		.uleb128 0x49
 28359 0167 13       		.uleb128 0x13
 28360 0168 02       		.uleb128 0x2
 28361 0169 18       		.uleb128 0x18
 28362 016a 00       		.byte	0
 28363 016b 00       		.byte	0
 28364 016c 1C       		.uleb128 0x1c
 28365 016d 1D       		.uleb128 0x1d
 28366 016e 01       		.byte	0x1
 28367 016f 31       		.uleb128 0x31
 28368 0170 13       		.uleb128 0x13
 28369 0171 11       		.uleb128 0x11
 28370 0172 01       		.uleb128 0x1
 28371 0173 12       		.uleb128 0x12
 28372 0174 06       		.uleb128 0x6
 28373 0175 58       		.uleb128 0x58
 28374 0176 0B       		.uleb128 0xb
 28375 0177 59       		.uleb128 0x59
 28376 0178 0B       		.uleb128 0xb
 28377 0179 01       		.uleb128 0x1
 28378 017a 13       		.uleb128 0x13
 28379 017b 00       		.byte	0
 28380 017c 00       		.byte	0
 28381 017d 1D       		.uleb128 0x1d
 28382 017e 05       		.uleb128 0x5
 28383 017f 00       		.byte	0
 28384 0180 31       		.uleb128 0x31
 28385 0181 13       		.uleb128 0x13
 28386 0182 02       		.uleb128 0x2
 28387 0183 18       		.uleb128 0x18
 28388 0184 00       		.byte	0
 28389 0185 00       		.byte	0
 28390 0186 1E       		.uleb128 0x1e
 28391 0187 0B       		.uleb128 0xb
 28392 0188 01       		.byte	0x1
 28393 0189 11       		.uleb128 0x11
 28394 018a 01       		.uleb128 0x1
 28395 018b 12       		.uleb128 0x12
 28396 018c 06       		.uleb128 0x6
 28397 018d 00       		.byte	0
 28398 018e 00       		.byte	0
 28399 018f 1F       		.uleb128 0x1f
 28400 0190 34       		.uleb128 0x34
 28401 0191 00       		.byte	0
 28402 0192 31       		.uleb128 0x31
 28403 0193 13       		.uleb128 0x13
 28404 0194 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 609


 28405 0195 18       		.uleb128 0x18
 28406 0196 00       		.byte	0
 28407 0197 00       		.byte	0
 28408 0198 20       		.uleb128 0x20
 28409 0199 1D       		.uleb128 0x1d
 28410 019a 01       		.byte	0x1
 28411 019b 31       		.uleb128 0x31
 28412 019c 13       		.uleb128 0x13
 28413 019d 11       		.uleb128 0x11
 28414 019e 01       		.uleb128 0x1
 28415 019f 12       		.uleb128 0x12
 28416 01a0 06       		.uleb128 0x6
 28417 01a1 58       		.uleb128 0x58
 28418 01a2 0B       		.uleb128 0xb
 28419 01a3 59       		.uleb128 0x59
 28420 01a4 0B       		.uleb128 0xb
 28421 01a5 00       		.byte	0
 28422 01a6 00       		.byte	0
 28423 01a7 21       		.uleb128 0x21
 28424 01a8 2E       		.uleb128 0x2e
 28425 01a9 01       		.byte	0x1
 28426 01aa 3F       		.uleb128 0x3f
 28427 01ab 19       		.uleb128 0x19
 28428 01ac 03       		.uleb128 0x3
 28429 01ad 0E       		.uleb128 0xe
 28430 01ae 3A       		.uleb128 0x3a
 28431 01af 0B       		.uleb128 0xb
 28432 01b0 3B       		.uleb128 0x3b
 28433 01b1 05       		.uleb128 0x5
 28434 01b2 27       		.uleb128 0x27
 28435 01b3 19       		.uleb128 0x19
 28436 01b4 11       		.uleb128 0x11
 28437 01b5 01       		.uleb128 0x1
 28438 01b6 12       		.uleb128 0x12
 28439 01b7 06       		.uleb128 0x6
 28440 01b8 40       		.uleb128 0x40
 28441 01b9 18       		.uleb128 0x18
 28442 01ba 9642     		.uleb128 0x2116
 28443 01bc 19       		.uleb128 0x19
 28444 01bd 01       		.uleb128 0x1
 28445 01be 13       		.uleb128 0x13
 28446 01bf 00       		.byte	0
 28447 01c0 00       		.byte	0
 28448 01c1 22       		.uleb128 0x22
 28449 01c2 34       		.uleb128 0x34
 28450 01c3 00       		.byte	0
 28451 01c4 03       		.uleb128 0x3
 28452 01c5 0E       		.uleb128 0xe
 28453 01c6 3A       		.uleb128 0x3a
 28454 01c7 0B       		.uleb128 0xb
 28455 01c8 3B       		.uleb128 0x3b
 28456 01c9 05       		.uleb128 0x5
 28457 01ca 49       		.uleb128 0x49
 28458 01cb 13       		.uleb128 0x13
 28459 01cc 02       		.uleb128 0x2
 28460 01cd 18       		.uleb128 0x18
 28461 01ce 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 610


 28462 01cf 00       		.byte	0
 28463 01d0 23       		.uleb128 0x23
 28464 01d1 21       		.uleb128 0x21
 28465 01d2 00       		.byte	0
 28466 01d3 49       		.uleb128 0x49
 28467 01d4 13       		.uleb128 0x13
 28468 01d5 2F       		.uleb128 0x2f
 28469 01d6 05       		.uleb128 0x5
 28470 01d7 00       		.byte	0
 28471 01d8 00       		.byte	0
 28472 01d9 24       		.uleb128 0x24
 28473 01da 05       		.uleb128 0x5
 28474 01db 00       		.byte	0
 28475 01dc 03       		.uleb128 0x3
 28476 01dd 0E       		.uleb128 0xe
 28477 01de 3A       		.uleb128 0x3a
 28478 01df 0B       		.uleb128 0xb
 28479 01e0 3B       		.uleb128 0x3b
 28480 01e1 05       		.uleb128 0x5
 28481 01e2 49       		.uleb128 0x49
 28482 01e3 13       		.uleb128 0x13
 28483 01e4 02       		.uleb128 0x2
 28484 01e5 18       		.uleb128 0x18
 28485 01e6 00       		.byte	0
 28486 01e7 00       		.byte	0
 28487 01e8 25       		.uleb128 0x25
 28488 01e9 34       		.uleb128 0x34
 28489 01ea 00       		.byte	0
 28490 01eb 03       		.uleb128 0x3
 28491 01ec 08       		.uleb128 0x8
 28492 01ed 3A       		.uleb128 0x3a
 28493 01ee 0B       		.uleb128 0xb
 28494 01ef 3B       		.uleb128 0x3b
 28495 01f0 05       		.uleb128 0x5
 28496 01f1 49       		.uleb128 0x49
 28497 01f2 13       		.uleb128 0x13
 28498 01f3 02       		.uleb128 0x2
 28499 01f4 18       		.uleb128 0x18
 28500 01f5 00       		.byte	0
 28501 01f6 00       		.byte	0
 28502 01f7 26       		.uleb128 0x26
 28503 01f8 2E       		.uleb128 0x2e
 28504 01f9 01       		.byte	0x1
 28505 01fa 3F       		.uleb128 0x3f
 28506 01fb 19       		.uleb128 0x19
 28507 01fc 03       		.uleb128 0x3
 28508 01fd 0E       		.uleb128 0xe
 28509 01fe 3A       		.uleb128 0x3a
 28510 01ff 0B       		.uleb128 0xb
 28511 0200 3B       		.uleb128 0x3b
 28512 0201 05       		.uleb128 0x5
 28513 0202 11       		.uleb128 0x11
 28514 0203 01       		.uleb128 0x1
 28515 0204 12       		.uleb128 0x12
 28516 0205 06       		.uleb128 0x6
 28517 0206 40       		.uleb128 0x40
 28518 0207 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 611


 28519 0208 9642     		.uleb128 0x2116
 28520 020a 19       		.uleb128 0x19
 28521 020b 01       		.uleb128 0x1
 28522 020c 13       		.uleb128 0x13
 28523 020d 00       		.byte	0
 28524 020e 00       		.byte	0
 28525 020f 27       		.uleb128 0x27
 28526 0210 05       		.uleb128 0x5
 28527 0211 00       		.byte	0
 28528 0212 03       		.uleb128 0x3
 28529 0213 08       		.uleb128 0x8
 28530 0214 3A       		.uleb128 0x3a
 28531 0215 0B       		.uleb128 0xb
 28532 0216 3B       		.uleb128 0x3b
 28533 0217 05       		.uleb128 0x5
 28534 0218 49       		.uleb128 0x49
 28535 0219 13       		.uleb128 0x13
 28536 021a 02       		.uleb128 0x2
 28537 021b 18       		.uleb128 0x18
 28538 021c 00       		.byte	0
 28539 021d 00       		.byte	0
 28540 021e 28       		.uleb128 0x28
 28541 021f 2E       		.uleb128 0x2e
 28542 0220 01       		.byte	0x1
 28543 0221 3F       		.uleb128 0x3f
 28544 0222 19       		.uleb128 0x19
 28545 0223 03       		.uleb128 0x3
 28546 0224 0E       		.uleb128 0xe
 28547 0225 3A       		.uleb128 0x3a
 28548 0226 0B       		.uleb128 0xb
 28549 0227 3B       		.uleb128 0x3b
 28550 0228 05       		.uleb128 0x5
 28551 0229 27       		.uleb128 0x27
 28552 022a 19       		.uleb128 0x19
 28553 022b 49       		.uleb128 0x49
 28554 022c 13       		.uleb128 0x13
 28555 022d 11       		.uleb128 0x11
 28556 022e 01       		.uleb128 0x1
 28557 022f 12       		.uleb128 0x12
 28558 0230 06       		.uleb128 0x6
 28559 0231 40       		.uleb128 0x40
 28560 0232 18       		.uleb128 0x18
 28561 0233 9742     		.uleb128 0x2117
 28562 0235 19       		.uleb128 0x19
 28563 0236 01       		.uleb128 0x1
 28564 0237 13       		.uleb128 0x13
 28565 0238 00       		.byte	0
 28566 0239 00       		.byte	0
 28567 023a 29       		.uleb128 0x29
 28568 023b 2E       		.uleb128 0x2e
 28569 023c 01       		.byte	0x1
 28570 023d 3F       		.uleb128 0x3f
 28571 023e 19       		.uleb128 0x19
 28572 023f 03       		.uleb128 0x3
 28573 0240 0E       		.uleb128 0xe
 28574 0241 3A       		.uleb128 0x3a
 28575 0242 0B       		.uleb128 0xb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 612


 28576 0243 3B       		.uleb128 0x3b
 28577 0244 05       		.uleb128 0x5
 28578 0245 27       		.uleb128 0x27
 28579 0246 19       		.uleb128 0x19
 28580 0247 49       		.uleb128 0x49
 28581 0248 13       		.uleb128 0x13
 28582 0249 11       		.uleb128 0x11
 28583 024a 01       		.uleb128 0x1
 28584 024b 12       		.uleb128 0x12
 28585 024c 06       		.uleb128 0x6
 28586 024d 40       		.uleb128 0x40
 28587 024e 18       		.uleb128 0x18
 28588 024f 9642     		.uleb128 0x2116
 28589 0251 19       		.uleb128 0x19
 28590 0252 01       		.uleb128 0x1
 28591 0253 13       		.uleb128 0x13
 28592 0254 00       		.byte	0
 28593 0255 00       		.byte	0
 28594 0256 2A       		.uleb128 0x2a
 28595 0257 2E       		.uleb128 0x2e
 28596 0258 01       		.byte	0x1
 28597 0259 3F       		.uleb128 0x3f
 28598 025a 19       		.uleb128 0x19
 28599 025b 03       		.uleb128 0x3
 28600 025c 0E       		.uleb128 0xe
 28601 025d 3A       		.uleb128 0x3a
 28602 025e 0B       		.uleb128 0xb
 28603 025f 3B       		.uleb128 0x3b
 28604 0260 05       		.uleb128 0x5
 28605 0261 27       		.uleb128 0x27
 28606 0262 19       		.uleb128 0x19
 28607 0263 11       		.uleb128 0x11
 28608 0264 01       		.uleb128 0x1
 28609 0265 12       		.uleb128 0x12
 28610 0266 06       		.uleb128 0x6
 28611 0267 40       		.uleb128 0x40
 28612 0268 18       		.uleb128 0x18
 28613 0269 9742     		.uleb128 0x2117
 28614 026b 19       		.uleb128 0x19
 28615 026c 01       		.uleb128 0x1
 28616 026d 13       		.uleb128 0x13
 28617 026e 00       		.byte	0
 28618 026f 00       		.byte	0
 28619 0270 2B       		.uleb128 0x2b
 28620 0271 2E       		.uleb128 0x2e
 28621 0272 00       		.byte	0
 28622 0273 3F       		.uleb128 0x3f
 28623 0274 19       		.uleb128 0x19
 28624 0275 03       		.uleb128 0x3
 28625 0276 0E       		.uleb128 0xe
 28626 0277 3A       		.uleb128 0x3a
 28627 0278 0B       		.uleb128 0xb
 28628 0279 3B       		.uleb128 0x3b
 28629 027a 05       		.uleb128 0x5
 28630 027b 27       		.uleb128 0x27
 28631 027c 19       		.uleb128 0x19
 28632 027d 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 613


 28633 027e 01       		.uleb128 0x1
 28634 027f 12       		.uleb128 0x12
 28635 0280 06       		.uleb128 0x6
 28636 0281 40       		.uleb128 0x40
 28637 0282 18       		.uleb128 0x18
 28638 0283 9742     		.uleb128 0x2117
 28639 0285 19       		.uleb128 0x19
 28640 0286 00       		.byte	0
 28641 0287 00       		.byte	0
 28642 0288 2C       		.uleb128 0x2c
 28643 0289 2E       		.uleb128 0x2e
 28644 028a 01       		.byte	0x1
 28645 028b 3F       		.uleb128 0x3f
 28646 028c 19       		.uleb128 0x19
 28647 028d 03       		.uleb128 0x3
 28648 028e 0E       		.uleb128 0xe
 28649 028f 3A       		.uleb128 0x3a
 28650 0290 0B       		.uleb128 0xb
 28651 0291 3B       		.uleb128 0x3b
 28652 0292 05       		.uleb128 0x5
 28653 0293 11       		.uleb128 0x11
 28654 0294 01       		.uleb128 0x1
 28655 0295 12       		.uleb128 0x12
 28656 0296 06       		.uleb128 0x6
 28657 0297 40       		.uleb128 0x40
 28658 0298 18       		.uleb128 0x18
 28659 0299 9742     		.uleb128 0x2117
 28660 029b 19       		.uleb128 0x19
 28661 029c 01       		.uleb128 0x1
 28662 029d 13       		.uleb128 0x13
 28663 029e 00       		.byte	0
 28664 029f 00       		.byte	0
 28665 02a0 2D       		.uleb128 0x2d
 28666 02a1 0B       		.uleb128 0xb
 28667 02a2 01       		.byte	0x1
 28668 02a3 11       		.uleb128 0x11
 28669 02a4 01       		.uleb128 0x1
 28670 02a5 12       		.uleb128 0x12
 28671 02a6 06       		.uleb128 0x6
 28672 02a7 01       		.uleb128 0x1
 28673 02a8 13       		.uleb128 0x13
 28674 02a9 00       		.byte	0
 28675 02aa 00       		.byte	0
 28676 02ab 2E       		.uleb128 0x2e
 28677 02ac 2E       		.uleb128 0x2e
 28678 02ad 01       		.byte	0x1
 28679 02ae 3F       		.uleb128 0x3f
 28680 02af 19       		.uleb128 0x19
 28681 02b0 03       		.uleb128 0x3
 28682 02b1 0E       		.uleb128 0xe
 28683 02b2 3A       		.uleb128 0x3a
 28684 02b3 0B       		.uleb128 0xb
 28685 02b4 3B       		.uleb128 0x3b
 28686 02b5 05       		.uleb128 0x5
 28687 02b6 49       		.uleb128 0x49
 28688 02b7 13       		.uleb128 0x13
 28689 02b8 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 614


 28690 02b9 01       		.uleb128 0x1
 28691 02ba 12       		.uleb128 0x12
 28692 02bb 06       		.uleb128 0x6
 28693 02bc 40       		.uleb128 0x40
 28694 02bd 18       		.uleb128 0x18
 28695 02be 9642     		.uleb128 0x2116
 28696 02c0 19       		.uleb128 0x19
 28697 02c1 01       		.uleb128 0x1
 28698 02c2 13       		.uleb128 0x13
 28699 02c3 00       		.byte	0
 28700 02c4 00       		.byte	0
 28701 02c5 2F       		.uleb128 0x2f
 28702 02c6 2E       		.uleb128 0x2e
 28703 02c7 00       		.byte	0
 28704 02c8 3F       		.uleb128 0x3f
 28705 02c9 19       		.uleb128 0x19
 28706 02ca 03       		.uleb128 0x3
 28707 02cb 0E       		.uleb128 0xe
 28708 02cc 3A       		.uleb128 0x3a
 28709 02cd 0B       		.uleb128 0xb
 28710 02ce 3B       		.uleb128 0x3b
 28711 02cf 05       		.uleb128 0x5
 28712 02d0 11       		.uleb128 0x11
 28713 02d1 01       		.uleb128 0x1
 28714 02d2 12       		.uleb128 0x12
 28715 02d3 06       		.uleb128 0x6
 28716 02d4 40       		.uleb128 0x40
 28717 02d5 18       		.uleb128 0x18
 28718 02d6 9642     		.uleb128 0x2116
 28719 02d8 19       		.uleb128 0x19
 28720 02d9 00       		.byte	0
 28721 02da 00       		.byte	0
 28722 02db 30       		.uleb128 0x30
 28723 02dc 2E       		.uleb128 0x2e
 28724 02dd 00       		.byte	0
 28725 02de 3F       		.uleb128 0x3f
 28726 02df 19       		.uleb128 0x19
 28727 02e0 03       		.uleb128 0x3
 28728 02e1 0E       		.uleb128 0xe
 28729 02e2 3A       		.uleb128 0x3a
 28730 02e3 0B       		.uleb128 0xb
 28731 02e4 3B       		.uleb128 0x3b
 28732 02e5 05       		.uleb128 0x5
 28733 02e6 11       		.uleb128 0x11
 28734 02e7 01       		.uleb128 0x1
 28735 02e8 12       		.uleb128 0x12
 28736 02e9 06       		.uleb128 0x6
 28737 02ea 40       		.uleb128 0x40
 28738 02eb 18       		.uleb128 0x18
 28739 02ec 9742     		.uleb128 0x2117
 28740 02ee 19       		.uleb128 0x19
 28741 02ef 00       		.byte	0
 28742 02f0 00       		.byte	0
 28743 02f1 31       		.uleb128 0x31
 28744 02f2 34       		.uleb128 0x34
 28745 02f3 00       		.byte	0
 28746 02f4 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 615


 28747 02f5 0E       		.uleb128 0xe
 28748 02f6 3A       		.uleb128 0x3a
 28749 02f7 0B       		.uleb128 0xb
 28750 02f8 3B       		.uleb128 0x3b
 28751 02f9 05       		.uleb128 0x5
 28752 02fa 49       		.uleb128 0x49
 28753 02fb 13       		.uleb128 0x13
 28754 02fc 3F       		.uleb128 0x3f
 28755 02fd 19       		.uleb128 0x19
 28756 02fe 3C       		.uleb128 0x3c
 28757 02ff 19       		.uleb128 0x19
 28758 0300 00       		.byte	0
 28759 0301 00       		.byte	0
 28760 0302 32       		.uleb128 0x32
 28761 0303 34       		.uleb128 0x34
 28762 0304 00       		.byte	0
 28763 0305 03       		.uleb128 0x3
 28764 0306 0E       		.uleb128 0xe
 28765 0307 3A       		.uleb128 0x3a
 28766 0308 0B       		.uleb128 0xb
 28767 0309 3B       		.uleb128 0x3b
 28768 030a 0B       		.uleb128 0xb
 28769 030b 49       		.uleb128 0x49
 28770 030c 13       		.uleb128 0x13
 28771 030d 3F       		.uleb128 0x3f
 28772 030e 19       		.uleb128 0x19
 28773 030f 02       		.uleb128 0x2
 28774 0310 18       		.uleb128 0x18
 28775 0311 00       		.byte	0
 28776 0312 00       		.byte	0
 28777 0313 00       		.byte	0
 28778              		.section	.debug_aranges,"",%progbits
 28779 0000 A4010000 		.4byte	0x1a4
 28780 0004 0200     		.2byte	0x2
 28781 0006 00000000 		.4byte	.Ldebug_info0
 28782 000a 04       		.byte	0x4
 28783 000b 00       		.byte	0
 28784 000c 0000     		.2byte	0
 28785 000e 0000     		.2byte	0
 28786 0010 00000000 		.4byte	.LFB64
 28787 0014 DC040000 		.4byte	.LFE64-.LFB64
 28788 0018 00000000 		.4byte	.LFB65
 28789 001c 22000000 		.4byte	.LFE65-.LFB65
 28790 0020 00000000 		.4byte	.LFB66
 28791 0024 02010000 		.4byte	.LFE66-.LFB66
 28792 0028 00000000 		.4byte	.LFB67
 28793 002c 84200000 		.4byte	.LFE67-.LFB67
 28794 0030 00000000 		.4byte	.LFB68
 28795 0034 C0170000 		.4byte	.LFE68-.LFB68
 28796 0038 00000000 		.4byte	.LFB69
 28797 003c 18140000 		.4byte	.LFE69-.LFB69
 28798 0040 00000000 		.4byte	.LFB70
 28799 0044 F40D0000 		.4byte	.LFE70-.LFB70
 28800 0048 00000000 		.4byte	.LFB71
 28801 004c 84000000 		.4byte	.LFE71-.LFB71
 28802 0050 00000000 		.4byte	.LFB72
 28803 0054 E81A0000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 616


 28804 0058 00000000 		.4byte	.LFB73
 28805 005c B4030000 		.4byte	.LFE73-.LFB73
 28806 0060 00000000 		.4byte	.LFB74
 28807 0064 3C120000 		.4byte	.LFE74-.LFB74
 28808 0068 00000000 		.4byte	.LFB75
 28809 006c C8000000 		.4byte	.LFE75-.LFB75
 28810 0070 00000000 		.4byte	.LFB76
 28811 0074 30010000 		.4byte	.LFE76-.LFB76
 28812 0078 00000000 		.4byte	.LFB77
 28813 007c 74030000 		.4byte	.LFE77-.LFB77
 28814 0080 00000000 		.4byte	.LFB78
 28815 0084 84000000 		.4byte	.LFE78-.LFB78
 28816 0088 00000000 		.4byte	.LFB79
 28817 008c 88000000 		.4byte	.LFE79-.LFB79
 28818 0090 00000000 		.4byte	.LFB80
 28819 0094 A0000000 		.4byte	.LFE80-.LFB80
 28820 0098 00000000 		.4byte	.LFB81
 28821 009c 3E000000 		.4byte	.LFE81-.LFB81
 28822 00a0 00000000 		.4byte	.LFB82
 28823 00a4 2E000000 		.4byte	.LFE82-.LFB82
 28824 00a8 00000000 		.4byte	.LFB83
 28825 00ac 98000000 		.4byte	.LFE83-.LFB83
 28826 00b0 00000000 		.4byte	.LFB84
 28827 00b4 80000000 		.4byte	.LFE84-.LFB84
 28828 00b8 00000000 		.4byte	.LFB85
 28829 00bc 5C000000 		.4byte	.LFE85-.LFB85
 28830 00c0 00000000 		.4byte	.LFB86
 28831 00c4 E8050000 		.4byte	.LFE86-.LFB86
 28832 00c8 00000000 		.4byte	.LFB87
 28833 00cc 38020000 		.4byte	.LFE87-.LFB87
 28834 00d0 00000000 		.4byte	.LFB88
 28835 00d4 28000000 		.4byte	.LFE88-.LFB88
 28836 00d8 00000000 		.4byte	.LFB89
 28837 00dc 78000000 		.4byte	.LFE89-.LFB89
 28838 00e0 00000000 		.4byte	.LFB90
 28839 00e4 B4000000 		.4byte	.LFE90-.LFB90
 28840 00e8 00000000 		.4byte	.LFB91
 28841 00ec B8000000 		.4byte	.LFE91-.LFB91
 28842 00f0 00000000 		.4byte	.LFB92
 28843 00f4 B8000000 		.4byte	.LFE92-.LFB92
 28844 00f8 00000000 		.4byte	.LFB93
 28845 00fc 44020000 		.4byte	.LFE93-.LFB93
 28846 0100 00000000 		.4byte	.LFB94
 28847 0104 BC000000 		.4byte	.LFE94-.LFB94
 28848 0108 00000000 		.4byte	.LFB95
 28849 010c 5C000000 		.4byte	.LFE95-.LFB95
 28850 0110 00000000 		.4byte	.LFB96
 28851 0114 38010000 		.4byte	.LFE96-.LFB96
 28852 0118 00000000 		.4byte	.LFB97
 28853 011c EC000000 		.4byte	.LFE97-.LFB97
 28854 0120 00000000 		.4byte	.LFB98
 28855 0124 64000000 		.4byte	.LFE98-.LFB98
 28856 0128 00000000 		.4byte	.LFB99
 28857 012c A8000000 		.4byte	.LFE99-.LFB99
 28858 0130 00000000 		.4byte	.LFB100
 28859 0134 34000000 		.4byte	.LFE100-.LFB100
 28860 0138 00000000 		.4byte	.LFB101
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 617


 28861 013c 20000000 		.4byte	.LFE101-.LFB101
 28862 0140 00000000 		.4byte	.LFB102
 28863 0144 6C000000 		.4byte	.LFE102-.LFB102
 28864 0148 00000000 		.4byte	.LFB103
 28865 014c BC010000 		.4byte	.LFE103-.LFB103
 28866 0150 00000000 		.4byte	.LFB104
 28867 0154 60000000 		.4byte	.LFE104-.LFB104
 28868 0158 00000000 		.4byte	.LFB105
 28869 015c 98050000 		.4byte	.LFE105-.LFB105
 28870 0160 00000000 		.4byte	.LFB106
 28871 0164 8C000000 		.4byte	.LFE106-.LFB106
 28872 0168 00000000 		.4byte	.LFB107
 28873 016c EC000000 		.4byte	.LFE107-.LFB107
 28874 0170 00000000 		.4byte	.LFB108
 28875 0174 5C000000 		.4byte	.LFE108-.LFB108
 28876 0178 00000000 		.4byte	.LFB109
 28877 017c C0000000 		.4byte	.LFE109-.LFB109
 28878 0180 00000000 		.4byte	.LFB110
 28879 0184 0C000000 		.4byte	.LFE110-.LFB110
 28880 0188 00000000 		.4byte	.LFB111
 28881 018c 1A000000 		.4byte	.LFE111-.LFB111
 28882 0190 00000000 		.4byte	.LFB112
 28883 0194 0C000000 		.4byte	.LFE112-.LFB112
 28884 0198 00000000 		.4byte	.LFB113
 28885 019c 0C000000 		.4byte	.LFE113-.LFB113
 28886 01a0 00000000 		.4byte	0
 28887 01a4 00000000 		.4byte	0
 28888              		.section	.debug_ranges,"",%progbits
 28889              	.Ldebug_ranges0:
 28890 0000 00000000 		.4byte	.LFB64
 28891 0004 DC040000 		.4byte	.LFE64
 28892 0008 00000000 		.4byte	.LFB65
 28893 000c 22000000 		.4byte	.LFE65
 28894 0010 00000000 		.4byte	.LFB66
 28895 0014 02010000 		.4byte	.LFE66
 28896 0018 00000000 		.4byte	.LFB67
 28897 001c 84200000 		.4byte	.LFE67
 28898 0020 00000000 		.4byte	.LFB68
 28899 0024 C0170000 		.4byte	.LFE68
 28900 0028 00000000 		.4byte	.LFB69
 28901 002c 18140000 		.4byte	.LFE69
 28902 0030 00000000 		.4byte	.LFB70
 28903 0034 F40D0000 		.4byte	.LFE70
 28904 0038 00000000 		.4byte	.LFB71
 28905 003c 84000000 		.4byte	.LFE71
 28906 0040 00000000 		.4byte	.LFB72
 28907 0044 E81A0000 		.4byte	.LFE72
 28908 0048 00000000 		.4byte	.LFB73
 28909 004c B4030000 		.4byte	.LFE73
 28910 0050 00000000 		.4byte	.LFB74
 28911 0054 3C120000 		.4byte	.LFE74
 28912 0058 00000000 		.4byte	.LFB75
 28913 005c C8000000 		.4byte	.LFE75
 28914 0060 00000000 		.4byte	.LFB76
 28915 0064 30010000 		.4byte	.LFE76
 28916 0068 00000000 		.4byte	.LFB77
 28917 006c 74030000 		.4byte	.LFE77
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 618


 28918 0070 00000000 		.4byte	.LFB78
 28919 0074 84000000 		.4byte	.LFE78
 28920 0078 00000000 		.4byte	.LFB79
 28921 007c 88000000 		.4byte	.LFE79
 28922 0080 00000000 		.4byte	.LFB80
 28923 0084 A0000000 		.4byte	.LFE80
 28924 0088 00000000 		.4byte	.LFB81
 28925 008c 3E000000 		.4byte	.LFE81
 28926 0090 00000000 		.4byte	.LFB82
 28927 0094 2E000000 		.4byte	.LFE82
 28928 0098 00000000 		.4byte	.LFB83
 28929 009c 98000000 		.4byte	.LFE83
 28930 00a0 00000000 		.4byte	.LFB84
 28931 00a4 80000000 		.4byte	.LFE84
 28932 00a8 00000000 		.4byte	.LFB85
 28933 00ac 5C000000 		.4byte	.LFE85
 28934 00b0 00000000 		.4byte	.LFB86
 28935 00b4 E8050000 		.4byte	.LFE86
 28936 00b8 00000000 		.4byte	.LFB87
 28937 00bc 38020000 		.4byte	.LFE87
 28938 00c0 00000000 		.4byte	.LFB88
 28939 00c4 28000000 		.4byte	.LFE88
 28940 00c8 00000000 		.4byte	.LFB89
 28941 00cc 78000000 		.4byte	.LFE89
 28942 00d0 00000000 		.4byte	.LFB90
 28943 00d4 B4000000 		.4byte	.LFE90
 28944 00d8 00000000 		.4byte	.LFB91
 28945 00dc B8000000 		.4byte	.LFE91
 28946 00e0 00000000 		.4byte	.LFB92
 28947 00e4 B8000000 		.4byte	.LFE92
 28948 00e8 00000000 		.4byte	.LFB93
 28949 00ec 44020000 		.4byte	.LFE93
 28950 00f0 00000000 		.4byte	.LFB94
 28951 00f4 BC000000 		.4byte	.LFE94
 28952 00f8 00000000 		.4byte	.LFB95
 28953 00fc 5C000000 		.4byte	.LFE95
 28954 0100 00000000 		.4byte	.LFB96
 28955 0104 38010000 		.4byte	.LFE96
 28956 0108 00000000 		.4byte	.LFB97
 28957 010c EC000000 		.4byte	.LFE97
 28958 0110 00000000 		.4byte	.LFB98
 28959 0114 64000000 		.4byte	.LFE98
 28960 0118 00000000 		.4byte	.LFB99
 28961 011c A8000000 		.4byte	.LFE99
 28962 0120 00000000 		.4byte	.LFB100
 28963 0124 34000000 		.4byte	.LFE100
 28964 0128 00000000 		.4byte	.LFB101
 28965 012c 20000000 		.4byte	.LFE101
 28966 0130 00000000 		.4byte	.LFB102
 28967 0134 6C000000 		.4byte	.LFE102
 28968 0138 00000000 		.4byte	.LFB103
 28969 013c BC010000 		.4byte	.LFE103
 28970 0140 00000000 		.4byte	.LFB104
 28971 0144 60000000 		.4byte	.LFE104
 28972 0148 00000000 		.4byte	.LFB105
 28973 014c 98050000 		.4byte	.LFE105
 28974 0150 00000000 		.4byte	.LFB106
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 619


 28975 0154 8C000000 		.4byte	.LFE106
 28976 0158 00000000 		.4byte	.LFB107
 28977 015c EC000000 		.4byte	.LFE107
 28978 0160 00000000 		.4byte	.LFB108
 28979 0164 5C000000 		.4byte	.LFE108
 28980 0168 00000000 		.4byte	.LFB109
 28981 016c C0000000 		.4byte	.LFE109
 28982 0170 00000000 		.4byte	.LFB110
 28983 0174 0C000000 		.4byte	.LFE110
 28984 0178 00000000 		.4byte	.LFB111
 28985 017c 1A000000 		.4byte	.LFE111
 28986 0180 00000000 		.4byte	.LFB112
 28987 0184 0C000000 		.4byte	.LFE112
 28988 0188 00000000 		.4byte	.LFB113
 28989 018c 0C000000 		.4byte	.LFE113
 28990 0190 00000000 		.4byte	0
 28991 0194 00000000 		.4byte	0
 28992              		.section	.debug_line,"",%progbits
 28993              	.Ldebug_line0:
 28994 0000 241C0000 		.section	.debug_str,"MS",%progbits,1
 28994      0200C001 
 28994      00000201 
 28994      FB0E0D00 
 28994      01010101 
 28995              	.LASF200:
 28996 0000 696E666F 		.ascii	"infoSend\000"
 28996      53656E64 
 28996      00
 28997              	.LASF251:
 28998 0009 69645F73 		.ascii	"id_str\000"
 28998      747200
 28999              	.LASF25:
 29000 0010 73697A65 		.ascii	"sizetype\000"
 29000      74797065 
 29000      00
 29001              	.LASF33:
 29002 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 29002      494E4954 
 29002      5F4D454D 
 29002      00
 29003              	.LASF315:
 29004 0026 676C5F63 		.ascii	"gl_c\000"
 29004      00
 29005              	.LASF62:
 29006 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 29006      545F4D4F 
 29006      44455F45 
 29006      4D475F46 
 29006      4346535F 
 29007              	.LASF36:
 29008 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 29008      41435449 
 29008      56415445 
 29008      00
 29009              	.LASF186:
 29010 0050 75736572 		.ascii	"user\000"
 29010      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 620


 29011              	.LASF11:
 29012 0055 696E7433 		.ascii	"int32_t\000"
 29012      325F7400 
 29013              	.LASF336:
 29014 005d 675F7278 		.ascii	"g_rx\000"
 29014      00
 29015              	.LASF97:
 29016 0062 73745F64 		.ascii	"st_data\000"
 29016      61746100 
 29017              	.LASF333:
 29018 006a 675F656D 		.ascii	"g_emg_meas\000"
 29018      675F6D65 
 29018      617300
 29019              	.LASF282:
 29020 0075 77726974 		.ascii	"writeStatus\000"
 29020      65537461 
 29020      74757300 
 29021              	.LASF15:
 29022 0081 75696E74 		.ascii	"uint32\000"
 29022      333200
 29023              	.LASF321:
 29024 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 29024      7365745F 
 29024      62617564 
 29024      72617465 
 29024      00
 29025              	.LASF322:
 29026 0099 6169725F 		.ascii	"air_chambers_control\000"
 29026      6368616D 
 29026      62657273 
 29026      5F636F6E 
 29026      74726F6C 
 29027              	.LASF259:
 29028 00ae 7370695F 		.ascii	"spi_read_delay_str_len\000"
 29028      72656164 
 29028      5F64656C 
 29028      61795F73 
 29028      74725F6C 
 29029              	.LASF216:
 29030 00c5 7061636B 		.ascii	"packet_lenght\000"
 29030      65745F6C 
 29030      656E6768 
 29030      7400
 29031              	.LASF261:
 29032 00d3 70726570 		.ascii	"prepare_generic_info\000"
 29032      6172655F 
 29032      67656E65 
 29032      7269635F 
 29032      696E666F 
 29033              	.LASF133:
 29034 00e8 706F735F 		.ascii	"pos_lim_inf\000"
 29034      6C696D5F 
 29034      696E6600 
 29035              	.LASF226:
 29036 00f4 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 29036      4E445F4D 
 29036      4F544F52 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 621


 29036      5F494458 
 29036      00
 29037              	.LASF308:
 29038 0105 636D645F 		.ascii	"cmd_get_inputs\000"
 29038      6765745F 
 29038      696E7075 
 29038      747300
 29039              	.LASF61:
 29040 0114 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 29040      545F4D4F 
 29040      44455F45 
 29040      4D475F46 
 29040      43465300 
 29041              	.LASF137:
 29042 0128 63757272 		.ascii	"curr_lookup\000"
 29042      5F6C6F6F 
 29042      6B757000 
 29043              	.LASF105:
 29044 0134 72657374 		.ascii	"rest_counter\000"
 29044      5F636F75 
 29044      6E746572 
 29044      00
 29045              	.LASF313:
 29046 0141 636D645F 		.ascii	"cmd_get_imu_readings\000"
 29046      6765745F 
 29046      696D755F 
 29046      72656164 
 29046      696E6773 
 29047              	.LASF175:
 29048 0156 73745F4D 		.ascii	"st_MASTER_spec\000"
 29048      41535445 
 29048      525F7370 
 29048      656300
 29049              	.LASF254:
 29050 0165 69645F73 		.ascii	"id_str_len\000"
 29050      74725F6C 
 29050      656E00
 29051              	.LASF60:
 29052 0170 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 29052      545F4D4F 
 29052      44455F45 
 29052      4D475F49 
 29052      4E544547 
 29053              	.LASF228:
 29054 0188 6D5F746D 		.ascii	"m_tmp\000"
 29054      7000
 29055              	.LASF16:
 29056 018e 696E7438 		.ascii	"int8\000"
 29056      00
 29057              	.LASF205:
 29058 0193 6765745F 		.ascii	"get_param_list\000"
 29058      70617261 
 29058      6D5F6C69 
 29058      737400
 29059              	.LASF312:
 29060 01a2 636D645F 		.ascii	"cmd_get_emg\000"
 29060      6765745F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 622


 29060      656D6700 
 29061              	.LASF152:
 29062 01ae 73745F65 		.ascii	"st_emg\000"
 29062      6D6700
 29063              	.LASF103:
 29064 01b5 706F7369 		.ascii	"position_hist\000"
 29064      74696F6E 
 29064      5F686973 
 29064      7400
 29065              	.LASF193:
 29066 01c3 74656D70 		.ascii	"temp_value\000"
 29066      5F76616C 
 29066      756500
 29067              	.LASF367:
 29068 01ce 72657375 		.ascii	"result\000"
 29068      6C7400
 29069              	.LASF253:
 29070 01d5 7370695F 		.ascii	"spi_read_delay_str\000"
 29070      72656164 
 29070      5F64656C 
 29070      61795F73 
 29070      747200
 29071              	.LASF100:
 29072 01e8 72656164 		.ascii	"ready\000"
 29072      7900
 29073              	.LASF149:
 29074 01ee 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 29074      6964785F 
 29074      7573655F 
 29074      666F725F 
 29074      636F6E74 
 29075              	.LASF109:
 29076 0206 73745F64 		.ascii	"st_device\000"
 29076      65766963 
 29076      6500
 29077              	.LASF59:
 29078 0210 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 29078      545F4D4F 
 29078      44455F45 
 29078      4D475F50 
 29078      524F504F 
 29079              	.LASF114:
 29080 022c 7573655F 		.ascii	"use_2nd_motor_flag\000"
 29080      326E645F 
 29080      6D6F746F 
 29080      725F666C 
 29080      616700
 29081              	.LASF304:
 29082 023f 745F7374 		.ascii	"t_start\000"
 29082      61727400 
 29083              	.LASF159:
 29084 0247 72656164 		.ascii	"read_imu_flag\000"
 29084      5F696D75 
 29084      5F666C61 
 29084      6700
 29085              	.LASF340:
 29086 0255 74696D65 		.ascii	"timer_value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 623


 29086      725F7661 
 29086      6C756500 
 29087              	.LASF4:
 29088 0261 6C6F6E67 		.ascii	"long int\000"
 29088      20696E74 
 29088      00
 29089              	.LASF184:
 29090 026a 756E7573 		.ascii	"unused_bytes1\000"
 29090      65645F62 
 29090      79746573 
 29090      3100
 29091              	.LASF324:
 29092 0278 6D6F746F 		.ascii	"motor_idx\000"
 29092      725F6964 
 29092      7800
 29093              	.LASF113:
 29094 0282 72657365 		.ascii	"reset_counters\000"
 29094      745F636F 
 29094      756E7465 
 29094      727300
 29095              	.LASF169:
 29096 0291 75736572 		.ascii	"user_emg\000"
 29096      5F656D67 
 29096      00
 29097              	.LASF291:
 29098 029a 7365745A 		.ascii	"setZeros\000"
 29098      65726F73 
 29098      00
 29099              	.LASF118:
 29100 02a3 756E7573 		.ascii	"unused_bytes\000"
 29100      65645F62 
 29100      79746573 
 29100      00
 29101              	.LASF189:
 29102 02b0 61636365 		.ascii	"accel_value\000"
 29102      6C5F7661 
 29102      6C756500 
 29103              	.LASF209:
 29104 02bc 4E554D5F 		.ascii	"NUM_ITEMS\000"
 29104      4954454D 
 29104      5300
 29105              	.LASF101:
 29106 02c6 73745F63 		.ascii	"st_counters\000"
 29106      6F756E74 
 29106      65727300 
 29107              	.LASF232:
 29108 02d2 4D454D5F 		.ascii	"MEM_P\000"
 29108      5000
 29109              	.LASF19:
 29110 02d8 666C6F61 		.ascii	"float32\000"
 29110      74333200 
 29111              	.LASF319:
 29112 02e0 636D645F 		.ascii	"cmd_get_ADC_map\000"
 29112      6765745F 
 29112      4144435F 
 29112      6D617000 
 29113              	.LASF41:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 624


 29114 02f0 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 29114      4745545F 
 29114      43555252 
 29114      454E5453 
 29114      00
 29115              	.LASF102:
 29116 0301 656D675F 		.ascii	"emg_counter\000"
 29116      636F756E 
 29116      74657200 
 29117              	.LASF320:
 29118 030d 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 29118      6765745F 
 29118      4144435F 
 29118      72617700 
 29119              	.LASF241:
 29120 031d 6175785F 		.ascii	"aux_float2\000"
 29120      666C6F61 
 29120      743200
 29121              	.LASF307:
 29122 0328 636D645F 		.ascii	"cmd_ping\000"
 29122      70696E67 
 29122      00
 29123              	.LASF260:
 29124 0331 7370695F 		.ascii	"spi_delay_menu_len\000"
 29124      64656C61 
 29124      795F6D65 
 29124      6E755F6C 
 29124      656E00
 29125              	.LASF239:
 29126 0344 7365745F 		.ascii	"set_custom_param\000"
 29126      63757374 
 29126      6F6D5F70 
 29126      6172616D 
 29126      00
 29127              	.LASF0:
 29128 0355 7369676E 		.ascii	"signed char\000"
 29128      65642063 
 29128      68617200 
 29129              	.LASF168:
 29130 0361 75736572 		.ascii	"user_code_string\000"
 29130      5F636F64 
 29130      655F7374 
 29130      72696E67 
 29130      00
 29131              	.LASF194:
 29132 0372 73745F63 		.ascii	"st_calib\000"
 29132      616C6962 
 29132      00
 29133              	.LASF280:
 29134 037b 6D656D53 		.ascii	"memStore\000"
 29134      746F7265 
 29134      00
 29135              	.LASF358:
 29136 0384 73696E67 		.ascii	"single_imu_size\000"
 29136      6C655F69 
 29136      6D755F73 
 29136      697A6500 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 625


 29137              	.LASF69:
 29138 0394 6D6F746F 		.ascii	"motor_supply_type\000"
 29138      725F7375 
 29138      70706C79 
 29138      5F747970 
 29138      6500
 29139              	.LASF306:
 29140 03a6 72656164 		.ascii	"read_flag\000"
 29140      5F666C61 
 29140      6700
 29141              	.LASF349:
 29142 03b0 4144435F 		.ascii	"ADC_buf\000"
 29142      62756600 
 29143              	.LASF346:
 29144 03b8 696E7465 		.ascii	"interrupt_flag\000"
 29144      72727570 
 29144      745F666C 
 29144      616700
 29145              	.LASF265:
 29146 03c7 73746570 		.ascii	"step\000"
 29146      00
 29147              	.LASF1:
 29148 03cc 756E7369 		.ascii	"unsigned char\000"
 29148      676E6564 
 29148      20636861 
 29148      7200
 29149              	.LASF143:
 29150 03da 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 29150      72657665 
 29150      72735F6D 
 29150      6F746F72 
 29150      5F666C61 
 29151              	.LASF329:
 29152 03f0 675F7265 		.ascii	"g_refNew\000"
 29152      664E6577 
 29152      00
 29153              	.LASF112:
 29154 03f9 72696768 		.ascii	"right_left\000"
 29154      745F6C65 
 29154      667400
 29155              	.LASF29:
 29156 0404 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 29156      53544F52 
 29156      455F4445 
 29156      4641554C 
 29156      545F5041 
 29157              	.LASF141:
 29158 041d 656E636F 		.ascii	"encoder_line\000"
 29158      6465725F 
 29158      6C696E65 
 29158      00
 29159              	.LASF255:
 29160 042a 6E5F696D 		.ascii	"n_imu_str_len\000"
 29160      755F7374 
 29160      725F6C65 
 29160      6E00
 29161              	.LASF258:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 626


 29162 0438 696D755F 		.ascii	"imu_table_str_len\000"
 29162      7461626C 
 29162      655F7374 
 29162      725F6C65 
 29162      6E00
 29163              	.LASF278:
 29164 044a 76616C75 		.ascii	"value\000"
 29164      6500
 29165              	.LASF188:
 29166 0450 666C6167 		.ascii	"flags\000"
 29166      7300
 29167              	.LASF96:
 29168 0456 70726573 		.ascii	"pressure\000"
 29168      73757265 
 29168      00
 29169              	.LASF37:
 29170 045f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 29170      4745545F 
 29170      41435449 
 29170      56415445 
 29170      00
 29171              	.LASF22:
 29172 0470 63686172 		.ascii	"char\000"
 29172      00
 29173              	.LASF136:
 29174 0475 6D61785F 		.ascii	"max_step_pos\000"
 29174      73746570 
 29174      5F706F73 
 29174      00
 29175              	.LASF284:
 29176 0482 7265745F 		.ascii	"ret_val\000"
 29176      76616C00 
 29177              	.LASF238:
 29178 048a 6D656E75 		.ascii	"menu_idx\000"
 29178      5F696478 
 29178      00
 29179              	.LASF247:
 29180 0493 73746172 		.ascii	"start_byte\000"
 29180      745F6279 
 29180      746500
 29181              	.LASF244:
 29182 049e 6E756D5F 		.ascii	"num_mag_cal_params\000"
 29182      6D61675F 
 29182      63616C5F 
 29182      70617261 
 29182      6D7300
 29183              	.LASF142:
 29184 04b1 70776D5F 		.ascii	"pwm_rate_limiter\000"
 29184      72617465 
 29184      5F6C696D 
 29184      69746572 
 29184      00
 29185              	.LASF122:
 29186 04c2 6B5F645F 		.ascii	"k_d_c\000"
 29186      6300
 29187              	.LASF95:
 29188 04c8 73745F66 		.ascii	"st_fb_meas\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 627


 29188      625F6D65 
 29188      617300
 29189              	.LASF202:
 29190 04d3 7061636B 		.ascii	"packet_string\000"
 29190      65745F73 
 29190      7472696E 
 29190      6700
 29191              	.LASF147:
 29192 04e1 6D5F6D75 		.ascii	"m_mult\000"
 29192      6C7400
 29193              	.LASF121:
 29194 04e8 6B5F695F 		.ascii	"k_i_c\000"
 29194      6300
 29195              	.LASF281:
 29196 04ee 64697370 		.ascii	"displacement\000"
 29196      6C616365 
 29196      6D656E74 
 29196      00
 29197              	.LASF275:
 29198 04fb 64617461 		.ascii	"data_length\000"
 29198      5F6C656E 
 29198      67746800 
 29199              	.LASF134:
 29200 0507 706F735F 		.ascii	"pos_lim_sup\000"
 29200      6C696D5F 
 29200      73757000 
 29201              	.LASF155:
 29202 0513 656D675F 		.ascii	"emg_speed\000"
 29202      73706565 
 29202      6400
 29203              	.LASF173:
 29204 051d 72657374 		.ascii	"rest_vel\000"
 29204      5F76656C 
 29204      00
 29205              	.LASF215:
 29206 0526 7061636B 		.ascii	"packet_data\000"
 29206      65745F64 
 29206      61746100 
 29207              	.LASF354:
 29208 0532 7046696C 		.ascii	"pFile\000"
 29208      6500
 29209              	.LASF166:
 29210 0538 4144435F 		.ascii	"ADC_conf\000"
 29210      636F6E66 
 29210      00
 29211              	.LASF272:
 29212 0541 636F6D6D 		.ascii	"commWrite\000"
 29212      57726974 
 29212      6500
 29213              	.LASF326:
 29214 054b 64656163 		.ascii	"deactivate_slaves\000"
 29214      74697661 
 29214      74655F73 
 29214      6C617665 
 29214      7300
 29215              	.LASF283:
 29216 055d 70616765 		.ascii	"pages\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 628


 29216      7300
 29217              	.LASF287:
 29218 0563 6D656D49 		.ascii	"memInit\000"
 29218      6E697400 
 29219              	.LASF124:
 29220 056b 6B5F695F 		.ascii	"k_i_dl\000"
 29220      646C00
 29221              	.LASF38:
 29222 0572 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 29222      5345545F 
 29222      494E5055 
 29222      545300
 29223              	.LASF34:
 29224 0581 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 29224      4745545F 
 29224      50415241 
 29224      4D5F4C49 
 29224      535400
 29225              	.LASF98:
 29226 0594 62756666 		.ascii	"buffer\000"
 29226      657200
 29227              	.LASF126:
 29228 059b 6B5F705F 		.ascii	"k_p_c_dl\000"
 29228      635F646C 
 29228      00
 29229              	.LASF292:
 29230 05a4 636D645F 		.ascii	"cmd_get_measurements\000"
 29230      6765745F 
 29230      6D656173 
 29230      7572656D 
 29230      656E7473 
 29231              	.LASF197:
 29232 05b9 73706565 		.ascii	"speed\000"
 29232      6400
 29233              	.LASF201:
 29234 05bf 72785F63 		.ascii	"rx_cmd\000"
 29234      6D6400
 29235              	.LASF84:
 29236 05c6 54595045 		.ascii	"TYPE_DOUBLE\000"
 29236      5F444F55 
 29236      424C4500 
 29237              	.LASF331:
 29238 05d2 675F6D65 		.ascii	"g_meas\000"
 29238      617300
 29239              	.LASF296:
 29240 05d9 6C617374 		.ascii	"last_aux_int16\000"
 29240      5F617578 
 29240      5F696E74 
 29240      313600
 29241              	.LASF73:
 29242 05e8 41434B5F 		.ascii	"ACK_ERROR\000"
 29242      4552524F 
 29242      5200
 29243              	.LASF351:
 29244 05f2 64617461 		.ascii	"data_encoder_raw\000"
 29244      5F656E63 
 29244      6F646572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 629


 29244      5F726177 
 29244      00
 29245              	.LASF57:
 29246 0603 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 29246      545F4D4F 
 29246      44455F45 
 29246      58544552 
 29246      4E414C00 
 29247              	.LASF230:
 29248 0617 696E6465 		.ascii	"index\000"
 29248      7800
 29249              	.LASF180:
 29250 061d 6D617869 		.ascii	"maximum_pressure_kPa\000"
 29250      6D756D5F 
 29250      70726573 
 29250      73757265 
 29250      5F6B5061 
 29251              	.LASF174:
 29252 0632 72657374 		.ascii	"rest_position_flag\000"
 29252      5F706F73 
 29252      6974696F 
 29252      6E5F666C 
 29252      616700
 29253              	.LASF359:
 29254 0645 675F696D 		.ascii	"g_imu\000"
 29254      7500
 29255              	.LASF127:
 29256 064b 6B5F695F 		.ascii	"k_i_c_dl\000"
 29256      635F646C 
 29256      00
 29257              	.LASF302:
 29258 0654 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 29258      52656164 
 29258      52657343 
 29258      75727246 
 29258      726F6D53 
 29259              	.LASF250:
 29260 066a 6D61675F 		.ascii	"mag_param_str\000"
 29260      70617261 
 29260      6D5F7374 
 29260      7200
 29261              	.LASF348:
 29262 0678 72657365 		.ascii	"reset_PSoC_flag\000"
 29262      745F5053 
 29262      6F435F66 
 29262      6C616700 
 29263              	.LASF85:
 29264 0688 54595045 		.ascii	"TYPE_STRING\000"
 29264      5F535452 
 29264      494E4700 
 29265              	.LASF68:
 29266 0694 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 29266      5F414E44 
 29266      5F504F53 
 29266      5F434F4E 
 29266      54524F4C 
 29267              	.LASF28:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 630


 29268 06a9 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 29268      53544F52 
 29268      455F5041 
 29268      52414D53 
 29268      00
 29269              	.LASF212:
 29270 06ba 50415241 		.ascii	"PARAMS_STR\000"
 29270      4D535F53 
 29270      545200
 29271              	.LASF195:
 29272 06c5 656E6162 		.ascii	"enabled\000"
 29272      6C656400 
 29273              	.LASF7:
 29274 06cd 6C6F6E67 		.ascii	"long unsigned int\000"
 29274      20756E73 
 29274      69676E65 
 29274      6420696E 
 29274      7400
 29275              	.LASF107:
 29276 06df 746F7461 		.ascii	"total_time_on\000"
 29276      6C5F7469 
 29276      6D655F6F 
 29276      6E00
 29277              	.LASF32:
 29278 06ed 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 29278      424F4F54 
 29278      4C4F4144 
 29278      455200
 29279              	.LASF92:
 29280 06fc 686F6C64 		.ascii	"hold_curr\000"
 29280      5F637572 
 29280      7200
 29281              	.LASF294:
 29282 0706 636D645F 		.ascii	"cmd_get_accelerations\000"
 29282      6765745F 
 29282      61636365 
 29282      6C657261 
 29282      74696F6E 
 29283              	.LASF108:
 29284 071c 746F7461 		.ascii	"total_time_rest\000"
 29284      6C5F7469 
 29284      6D655F72 
 29284      65737400 
 29285              	.LASF204:
 29286 072c 7374725F 		.ascii	"str_sd_data\000"
 29286      73645F64 
 29286      61746100 
 29287              	.LASF129:
 29288 0738 61637469 		.ascii	"activ\000"
 29288      7600
 29289              	.LASF214:
 29290 073e 4D454E55 		.ascii	"MENU_STR\000"
 29290      5F535452 
 29290      00
 29291              	.LASF146:
 29292 0747 6D5F6F66 		.ascii	"m_off\000"
 29292      6600
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 631


 29293              	.LASF74:
 29294 074d 41434B5F 		.ascii	"ACK_OK\000"
 29294      4F4B00
 29295              	.LASF76:
 29296 0754 54595045 		.ascii	"TYPE_FLAG\000"
 29296      5F464C41 
 29296      4700
 29297              	.LASF192:
 29298 075e 71756174 		.ascii	"quat_value\000"
 29298      5F76616C 
 29298      756500
 29299              	.LASF246:
 29300 0769 7061636B 		.ascii	"packet_length\000"
 29300      65745F6C 
 29300      656E6774 
 29300      6800
 29301              	.LASF171:
 29302 0777 72657374 		.ascii	"rest_pos\000"
 29302      5F706F73 
 29302      00
 29303              	.LASF87:
 29304 0780 63757272 		.ascii	"curr\000"
 29304      00
 29305              	.LASF139:
 29306 0785 696E7075 		.ascii	"input_mode\000"
 29306      745F6D6F 
 29306      646500
 29307              	.LASF66:
 29308 0790 434F4E54 		.ascii	"CONTROL_PWM\000"
 29308      524F4C5F 
 29308      50574D00 
 29309              	.LASF43:
 29310 079c 434D445F 		.ascii	"CMD_GET_EMG\000"
 29310      4745545F 
 29310      454D4700 
 29311              	.LASF288:
 29312 07a8 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 29312      6E69745F 
 29312      536F6674 
 29312      48616E64 
 29312      50726F00 
 29313              	.LASF31:
 29314 07bc 434D445F 		.ascii	"CMD_GET_INFO\000"
 29314      4745545F 
 29314      494E464F 
 29314      00
 29315              	.LASF242:
 29316 07c9 6765745F 		.ascii	"get_IMU_param_list\000"
 29316      494D555F 
 29316      70617261 
 29316      6D5F6C69 
 29316      737400
 29317              	.LASF316:
 29318 07dc 73696E67 		.ascii	"single_packet\000"
 29318      6C655F70 
 29318      61636B65 
 29318      7400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 632


 29319              	.LASF245:
 29320 07ea 66697273 		.ascii	"first_imu_parameter\000"
 29320      745F696D 
 29320      755F7061 
 29320      72616D65 
 29320      74657200 
 29321              	.LASF42:
 29322 07fe 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 29322      4745545F 
 29322      43555252 
 29322      5F414E44 
 29322      5F4D4541 
 29323              	.LASF363:
 29324 0814 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 29324      43313120 
 29324      352E342E 
 29324      31203230 
 29324      31363036 
 29325 0847 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 29325      20726576 
 29325      6973696F 
 29325      6E203233 
 29325      37373135 
 29326 087a 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 29326      66756E63 
 29326      74696F6E 
 29326      2D736563 
 29326      74696F6E 
 29327              	.LASF89:
 29328 08a2 73745F72 		.ascii	"st_ref\000"
 29328      656600
 29329              	.LASF47:
 29330 08a9 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 29330      5345545F 
 29330      43554646 
 29330      5F494E50 
 29330      55545300 
 29331              	.LASF170:
 29332 08bd 73745F53 		.ascii	"st_SH_spec\000"
 29332      485F7370 
 29332      656300
 29333              	.LASF339:
 29334 08c8 63616C69 		.ascii	"calib\000"
 29334      6200
 29335              	.LASF6:
 29336 08ce 5F5F7569 		.ascii	"__uint32_t\000"
 29336      6E743332 
 29336      5F7400
 29337              	.LASF8:
 29338 08d9 6C6F6E67 		.ascii	"long long int\000"
 29338      206C6F6E 
 29338      6720696E 
 29338      7400
 29339              	.LASF64:
 29340 08e7 53485F63 		.ascii	"SH_control_mode\000"
 29340      6F6E7472 
 29340      6F6C5F6D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 633


 29340      6F646500 
 29341              	.LASF78:
 29342 08f7 54595045 		.ascii	"TYPE_UINT8\000"
 29342      5F55494E 
 29342      543800
 29343              	.LASF300:
 29344 0902 636D645F 		.ascii	"cmd_get_currents\000"
 29344      6765745F 
 29344      63757272 
 29344      656E7473 
 29344      00
 29345              	.LASF71:
 29346 0913 4D41584F 		.ascii	"MAXON_12V\000"
 29346      4E5F3132 
 29346      5600
 29347              	.LASF347:
 29348 091d 6368616E 		.ascii	"change_ext_ref_flag\000"
 29348      67655F65 
 29348      78745F72 
 29348      65665F66 
 29348      6C616700 
 29349              	.LASF21:
 29350 0931 646F7562 		.ascii	"double\000"
 29350      6C6500
 29351              	.LASF145:
 29352 0938 456E635F 		.ascii	"Enc_raw_read_conf\000"
 29352      7261775F 
 29352      72656164 
 29352      5F636F6E 
 29352      6600
 29353              	.LASF198:
 29354 094a 72657065 		.ascii	"repetitions\000"
 29354      74697469 
 29354      6F6E7300 
 29355              	.LASF135:
 29356 0956 6D61785F 		.ascii	"max_step_neg\000"
 29356      73746570 
 29356      5F6E6567 
 29356      00
 29357              	.LASF177:
 29358 0963 736C6176 		.ascii	"slave_ID\000"
 29358      655F4944 
 29358      00
 29359              	.LASF345:
 29360 096c 72657365 		.ascii	"reset_last_value_flag\000"
 29360      745F6C61 
 29360      73745F76 
 29360      616C7565 
 29360      5F666C61 
 29361              	.LASF213:
 29362 0982 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 29362      4F4D5F50 
 29362      4152414D 
 29362      5F474554 
 29362      00
 29363              	.LASF20:
 29364 0993 666C6F61 		.ascii	"float\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 634


 29364      7400
 29365              	.LASF161:
 29366 0999 494D555F 		.ascii	"IMU_conf\000"
 29366      636F6E66 
 29366      00
 29367              	.LASF231:
 29368 09a2 50415241 		.ascii	"PARAM_IDX\000"
 29368      4D5F4944 
 29368      5800
 29369              	.LASF119:
 29370 09ac 73745F6D 		.ascii	"st_motor\000"
 29370      6F746F72 
 29370      00
 29371              	.LASF227:
 29372 09b5 6D5F6164 		.ascii	"m_addr\000"
 29372      647200
 29373              	.LASF338:
 29374 09bc 635F6D65 		.ascii	"c_mem\000"
 29374      6D00
 29375              	.LASF274:
 29376 09c2 64617461 		.ascii	"data_array\000"
 29376      5F617272 
 29376      617900
 29377              	.LASF10:
 29378 09cd 756E7369 		.ascii	"unsigned int\000"
 29378      676E6564 
 29378      20696E74 
 29378      00
 29379              	.LASF289:
 29380 09da 6D656D49 		.ascii	"memInit_Master\000"
 29380      6E69745F 
 29380      4D617374 
 29380      657200
 29381              	.LASF277:
 29382 09e9 73656E64 		.ascii	"sendAcknowledgment\000"
 29382      41636B6E 
 29382      6F776C65 
 29382      64676D65 
 29382      6E7400
 29383              	.LASF267:
 29384 09fc 70726570 		.ascii	"prepare_SD_legend\000"
 29384      6172655F 
 29384      53445F6C 
 29384      6567656E 
 29384      6400
 29385              	.LASF360:
 29386 0a0e 4D616743 		.ascii	"MagCal\000"
 29386      616C00
 29387              	.LASF55:
 29388 0a15 53485F63 		.ascii	"SH_command\000"
 29388      6F6D6D61 
 29388      6E6400
 29389              	.LASF80:
 29390 0a20 54595045 		.ascii	"TYPE_UINT16\000"
 29390      5F55494E 
 29390      54313600 
 29391              	.LASF183:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 635


 29392 0a2c 666C6167 		.ascii	"flag\000"
 29392      00
 29393              	.LASF295:
 29394 0a31 636D645F 		.ascii	"cmd_set_inputs\000"
 29394      7365745F 
 29394      696E7075 
 29394      747300
 29395              	.LASF140:
 29396 0a40 636F6E74 		.ascii	"control_mode\000"
 29396      726F6C5F 
 29396      6D6F6465 
 29396      00
 29397              	.LASF310:
 29398 0a4d 6F66665F 		.ascii	"off_1\000"
 29398      3100
 29399              	.LASF58:
 29400 0a53 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 29400      545F4D4F 
 29400      44455F45 
 29400      4E434F44 
 29400      45523300 
 29401              	.LASF273:
 29402 0a67 636F6D6D 		.ascii	"commWriteID\000"
 29402      57726974 
 29402      65494400 
 29403              	.LASF51:
 29404 0a73 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 29404      4745545F 
 29404      454E434F 
 29404      4445525F 
 29404      434F4E46 
 29405              	.LASF158:
 29406 0a88 73745F69 		.ascii	"st_imu\000"
 29406      6D7500
 29407              	.LASF298:
 29408 0a8f 636D645F 		.ascii	"cmd_get_activate\000"
 29408      6765745F 
 29408      61637469 
 29408      76617465 
 29408      00
 29409              	.LASF218:
 29410 0aa0 73747269 		.ascii	"string_lenght\000"
 29410      6E675F6C 
 29410      656E6768 
 29410      7400
 29411              	.LASF83:
 29412 0aae 54595045 		.ascii	"TYPE_FLOAT\000"
 29412      5F464C4F 
 29412      415400
 29413              	.LASF235:
 29414 0ab9 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 29414      4F4D5F50 
 29414      4152414D 
 29414      5F534554 
 29414      5F4C4953 
 29415              	.LASF210:
 29416 0acf 4E554D5F 		.ascii	"NUM_STRUCT\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 636


 29416      53545255 
 29416      435400
 29417              	.LASF240:
 29418 0ada 6175785F 		.ascii	"aux_uchar\000"
 29418      75636861 
 29418      7200
 29419              	.LASF94:
 29420 0ae4 6164645F 		.ascii	"add_emg\000"
 29420      656D6700 
 29421              	.LASF79:
 29422 0aec 54595045 		.ascii	"TYPE_INT16\000"
 29422      5F494E54 
 29422      313600
 29423              	.LASF222:
 29424 0af7 6175785F 		.ascii	"aux_uint16\000"
 29424      75696E74 
 29424      313600
 29425              	.LASF153:
 29426 0b02 656D675F 		.ascii	"emg_threshold\000"
 29426      74687265 
 29426      73686F6C 
 29426      6400
 29427              	.LASF46:
 29428 0b10 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 29428      4745545F 
 29428      43555252 
 29428      5F444946 
 29428      4600
 29429              	.LASF104:
 29430 0b22 63757272 		.ascii	"current_hist\000"
 29430      656E745F 
 29430      68697374 
 29430      00
 29431              	.LASF67:
 29432 0b2f 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 29432      524F4C5F 
 29432      43555252 
 29432      454E5400 
 29433              	.LASF24:
 29434 0b3f 6C6F6E67 		.ascii	"long double\000"
 29434      20646F75 
 29434      626C6500 
 29435              	.LASF82:
 29436 0b4b 54595045 		.ascii	"TYPE_UINT32\000"
 29436      5F55494E 
 29436      54333200 
 29437              	.LASF178:
 29438 0b57 73745F46 		.ascii	"st_FB_spec\000"
 29438      425F7370 
 29438      656300
 29439              	.LASF93:
 29440 0b62 73745F65 		.ascii	"st_emg_meas\000"
 29440      6D675F6D 
 29440      65617300 
 29441              	.LASF207:
 29442 0b6e 5641525F 		.ascii	"VAR_P\000"
 29442      5000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 637


 29443              	.LASF234:
 29444 0b74 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 29444      4F4D5F50 
 29444      4152414D 
 29444      5F474554 
 29444      5F4C4953 
 29445              	.LASF150:
 29446 0b8a 6D6F746F 		.ascii	"motor_handle_ratio\000"
 29446      725F6861 
 29446      6E646C65 
 29446      5F726174 
 29446      696F00
 29447              	.LASF276:
 29448 0b9d 63686563 		.ascii	"checksum\000"
 29448      6B73756D 
 29448      00
 29449              	.LASF330:
 29450 0ba6 675F7265 		.ascii	"g_refOld\000"
 29450      664F6C64 
 29450      00
 29451              	.LASF35:
 29452 0baf 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 29452      48414E44 
 29452      5F43414C 
 29452      49425241 
 29452      544500
 29453              	.LASF190:
 29454 0bc2 6779726F 		.ascii	"gyro_value\000"
 29454      5F76616C 
 29454      756500
 29455              	.LASF163:
 29456 0bcd 63757272 		.ascii	"curr_time\000"
 29456      5F74696D 
 29456      6500
 29457              	.LASF148:
 29458 0bd7 646F7562 		.ascii	"double_encoder_on_off\000"
 29458      6C655F65 
 29458      6E636F64 
 29458      65725F6F 
 29458      6E5F6F66 
 29459              	.LASF323:
 29460 0bed 64726976 		.ascii	"drive_slave\000"
 29460      655F736C 
 29460      61766500 
 29461              	.LASF160:
 29462 0bf9 5350495F 		.ascii	"SPI_read_delay\000"
 29462      72656164 
 29462      5F64656C 
 29462      617900
 29463              	.LASF72:
 29464 0c08 61636B6E 		.ascii	"acknowledgment_values\000"
 29464      6F776C65 
 29464      64676D65 
 29464      6E745F76 
 29464      616C7565 
 29465              	.LASF225:
 29466 0c1e 4D4F544F 		.ascii	"MOTOR_IDX\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 638


 29466      525F4944 
 29466      5800
 29467              	.LASF286:
 29468 0c28 6D656D52 		.ascii	"memRestore\000"
 29468      6573746F 
 29468      726500
 29469              	.LASF248:
 29470 0c33 6E5F696D 		.ascii	"n_imu_str\000"
 29470      755F7374 
 29470      7200
 29471              	.LASF262:
 29472 0c3d 696E666F 		.ascii	"info_string\000"
 29472      5F737472 
 29472      696E6700 
 29473              	.LASF268:
 29474 0c49 70726570 		.ascii	"prepare_SD_info\000"
 29474      6172655F 
 29474      53445F69 
 29474      6E666F00 
 29475              	.LASF9:
 29476 0c59 6C6F6E67 		.ascii	"long long unsigned int\000"
 29476      206C6F6E 
 29476      6720756E 
 29476      7369676E 
 29476      65642069 
 29477              	.LASF81:
 29478 0c70 54595045 		.ascii	"TYPE_INT32\000"
 29478      5F494E54 
 29478      333200
 29479              	.LASF224:
 29480 0c7b 6175785F 		.ascii	"aux_uint32\000"
 29480      75696E74 
 29480      333200
 29481              	.LASF99:
 29482 0c86 6C656E67 		.ascii	"length\000"
 29482      746800
 29483              	.LASF236:
 29484 0c8d 55534552 		.ascii	"USER_ID_PARAM\000"
 29484      5F49445F 
 29484      50415241 
 29484      4D00
 29485              	.LASF187:
 29486 0c9b 73745F69 		.ascii	"st_imu_data\000"
 29486      6D755F64 
 29486      61746100 
 29487              	.LASF191:
 29488 0ca7 6D61675F 		.ascii	"mag_value\000"
 29488      76616C75 
 29488      6500
 29489              	.LASF88:
 29490 0cb1 6F6E6F66 		.ascii	"onoff\000"
 29490      6600
 29491              	.LASF45:
 29492 0cb7 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 29492      4745545F 
 29492      41434345 
 29492      4C00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 639


 29493              	.LASF293:
 29494 0cc5 636D645F 		.ascii	"cmd_get_velocities\000"
 29494      6765745F 
 29494      76656C6F 
 29494      63697469 
 29494      657300
 29495              	.LASF285:
 29496 0cd8 6D656D52 		.ascii	"memRecall\000"
 29496      6563616C 
 29496      6C00
 29497              	.LASF341:
 29498 0ce2 74696D65 		.ascii	"timer_value0\000"
 29498      725F7661 
 29498      6C756530 
 29498      00
 29499              	.LASF48:
 29500 0cef 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 29500      5345545F 
 29500      42415544 
 29500      52415445 
 29500      00
 29501              	.LASF120:
 29502 0d00 6B5F705F 		.ascii	"k_p_c\000"
 29502      6300
 29503              	.LASF252:
 29504 0d06 696D755F 		.ascii	"imu_table_str\000"
 29504      7461626C 
 29504      655F7374 
 29504      7200
 29505              	.LASF342:
 29506 0d14 6465765F 		.ascii	"dev_tension\000"
 29506      74656E73 
 29506      696F6E00 
 29507              	.LASF131:
 29508 0d20 6D6F746F 		.ascii	"motor_driver_type\000"
 29508      725F6472 
 29508      69766572 
 29508      5F747970 
 29508      6500
 29509              	.LASF311:
 29510 0d32 6D756C74 		.ascii	"mult_1\000"
 29510      5F3100
 29511              	.LASF264:
 29512 0d39 70726570 		.ascii	"prepare_counter_info\000"
 29512      6172655F 
 29512      636F756E 
 29512      7465725F 
 29512      696E666F 
 29513              	.LASF23:
 29514 0d4e 72656738 		.ascii	"reg8\000"
 29514      00
 29515              	.LASF181:
 29516 0d53 70726F70 		.ascii	"prop_err_fb_gain\000"
 29516      5F657272 
 29516      5F66625F 
 29516      6761696E 
 29516      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 640


 29517              	.LASF270:
 29518 0d64 636F6D6D 		.ascii	"commWrite_old_id\000"
 29518      57726974 
 29518      655F6F6C 
 29518      645F6964 
 29518      00
 29519              	.LASF229:
 29520 0d75 6D616E61 		.ascii	"manage_param_list\000"
 29520      67655F70 
 29520      6172616D 
 29520      5F6C6973 
 29520      7400
 29521              	.LASF30:
 29522 0d87 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 29522      52455354 
 29522      4F52455F 
 29522      50415241 
 29522      4D5300
 29523              	.LASF266:
 29524 0d9a 70726570 		.ascii	"prepare_SD_param_info\000"
 29524      6172655F 
 29524      53445F70 
 29524      6172616D 
 29524      5F696E66 
 29525              	.LASF303:
 29526 0db0 63757272 		.ascii	"curr_diff\000"
 29526      5F646966 
 29526      6600
 29527              	.LASF176:
 29528 0dba 736C6176 		.ascii	"slave_comm_active\000"
 29528      655F636F 
 29528      6D6D5F61 
 29528      63746976 
 29528      6500
 29529              	.LASF271:
 29530 0dcc 6F6C645F 		.ascii	"old_id\000"
 29530      696400
 29531              	.LASF366:
 29532 0dd3 5F5F5245 		.ascii	"__REV16\000"
 29532      56313600 
 29533              	.LASF352:
 29534 0ddb 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 29534      636F6465 
 29534      725F4C69 
 29534      6E655F43 
 29534      6F6E6E65 
 29535              	.LASF117:
 29536 0df4 6465765F 		.ascii	"dev_type\000"
 29536      74797065 
 29536      00
 29537              	.LASF167:
 29538 0dfd 73745F75 		.ascii	"st_user\000"
 29538      73657200 
 29539              	.LASF299:
 29540 0e05 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 29540      6765745F 
 29540      63757272 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 641


 29540      5F616E64 
 29540      5F6D6561 
 29541              	.LASF151:
 29542 0e1b 67656172 		.ascii	"gears_params\000"
 29542      735F7061 
 29542      72616D73 
 29542      00
 29543              	.LASF162:
 29544 0e28 73745F65 		.ascii	"st_expansion\000"
 29544      7870616E 
 29544      73696F6E 
 29544      00
 29545              	.LASF156:
 29546 0e35 656D675F 		.ascii	"emg_calibration_flag\000"
 29546      63616C69 
 29546      62726174 
 29546      696F6E5F 
 29546      666C6167 
 29547              	.LASF90:
 29548 0e4a 73745F6D 		.ascii	"st_meas\000"
 29548      65617300 
 29549              	.LASF54:
 29550 0e52 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 29550      4745545F 
 29550      4144435F 
 29550      52415700 
 29551              	.LASF70:
 29552 0e62 4D41584F 		.ascii	"MAXON_24V\000"
 29552      4E5F3234 
 29552      5600
 29553              	.LASF63:
 29554 0e6c 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 29554      545F4D4F 
 29554      44455F45 
 29554      4D475F50 
 29554      524F504F 
 29555              	.LASF50:
 29556 0e8b 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 29556      4745545F 
 29556      494D555F 
 29556      50415241 
 29556      4D00
 29557              	.LASF335:
 29558 0e9d 675F6662 		.ascii	"g_fb_meas\000"
 29558      5F6D6561 
 29558      7300
 29559              	.LASF52:
 29560 0ea7 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 29560      4745545F 
 29560      454E434F 
 29560      4445525F 
 29560      52415700 
 29561              	.LASF309:
 29562 0ebb 636D645F 		.ascii	"cmd_store_params\000"
 29562      73746F72 
 29562      655F7061 
 29562      72616D73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 642


 29562      00
 29563              	.LASF337:
 29564 0ecc 675F6D65 		.ascii	"g_mem\000"
 29564      6D00
 29565              	.LASF40:
 29566 0ed2 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 29566      4745545F 
 29566      4D454153 
 29566      5552454D 
 29566      454E5453 
 29567              	.LASF318:
 29568 0ee7 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 29568      6765745F 
 29568      656E636F 
 29568      6465725F 
 29568      72617700 
 29569              	.LASF13:
 29570 0efb 75696E74 		.ascii	"uint8\000"
 29570      3800
 29571              	.LASF199:
 29572 0f01 636F6D6D 		.ascii	"commProcess\000"
 29572      50726F63 
 29572      65737300 
 29573              	.LASF2:
 29574 0f0d 73686F72 		.ascii	"short int\000"
 29574      7420696E 
 29574      7400
 29575              	.LASF290:
 29576 0f17 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 29576      6E69745F 
 29576      41697243 
 29576      68616D62 
 29576      65727346 
 29577              	.LASF256:
 29578 0f2d 6964735F 		.ascii	"ids_str_len\000"
 29578      7374725F 
 29578      6C656E00 
 29579              	.LASF125:
 29580 0f39 6B5F645F 		.ascii	"k_d_dl\000"
 29580      646C00
 29581              	.LASF217:
 29582 0f40 6964785F 		.ascii	"idx_menu\000"
 29582      6D656E75 
 29582      00
 29583              	.LASF185:
 29584 0f49 6D6F746F 		.ascii	"motor\000"
 29584      7200
 29585              	.LASF355:
 29586 0f4f 4E5F494D 		.ascii	"N_IMU_Connected\000"
 29586      555F436F 
 29586      6E6E6563 
 29586      74656400 
 29587              	.LASF39:
 29588 0f5f 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 29588      4745545F 
 29588      494E5055 
 29588      545300
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 643


 29589              	.LASF110:
 29590 0f6e 68775F6D 		.ascii	"hw_maint_date\000"
 29590      61696E74 
 29590      5F646174 
 29590      6500
 29591              	.LASF249:
 29592 0f7c 6964735F 		.ascii	"ids_str\000"
 29592      73747200 
 29593              	.LASF53:
 29594 0f84 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 29594      4745545F 
 29594      4144435F 
 29594      434F4E46 
 29594      00
 29595              	.LASF27:
 29596 0f95 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 29596      5345545F 
 29596      5A45524F 
 29596      5300
 29597              	.LASF257:
 29598 0fa3 6D61675F 		.ascii	"mag_param_str_len\000"
 29598      70617261 
 29598      6D5F7374 
 29598      725F6C65 
 29598      6E00
 29599              	.LASF243:
 29600 0fb5 6E756D5F 		.ascii	"num_imus_id_params\000"
 29600      696D7573 
 29600      5F69645F 
 29600      70617261 
 29600      6D7300
 29601              	.LASF221:
 29602 0fc8 6175785F 		.ascii	"aux_int16\000"
 29602      696E7431 
 29602      3600
 29603              	.LASF362:
 29604 0fd2 45455052 		.ascii	"EEPROM_ADDR\000"
 29604      4F4D5F41 
 29604      44445200 
 29605              	.LASF111:
 29606 0fde 73746174 		.ascii	"stats_period_begin_date\000"
 29606      735F7065 
 29606      72696F64 
 29606      5F626567 
 29606      696E5F64 
 29607              	.LASF357:
 29608 0ff6 696D7573 		.ascii	"imus_data_size\000"
 29608      5F646174 
 29608      615F7369 
 29608      7A6500
 29609              	.LASF327:
 29610 1005 49544D5F 		.ascii	"ITM_RxBuffer\000"
 29610      52784275 
 29610      66666572 
 29610      00
 29611              	.LASF44:
 29612 1012 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 644


 29612      4745545F 
 29612      56454C4F 
 29612      43495449 
 29612      455300
 29613              	.LASF344:
 29614 1025 706F775F 		.ascii	"pow_tension\000"
 29614      74656E73 
 29614      696F6E00 
 29615              	.LASF365:
 29616 1031 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 29616      73657273 
 29616      5C4D6174 
 29616      7469615C 
 29616      446F6375 
 29617 105f 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\SoftHand_Pro.cydsn\000"
 29617      656E6572 
 29617      69632D46 
 29617      572D5053 
 29617      6F43355C 
 29618              	.LASF325:
 29619 1086 73746F70 		.ascii	"stop_feedback\000"
 29619      5F666565 
 29619      64626163 
 29619      6B00
 29620              	.LASF75:
 29621 1094 64617461 		.ascii	"data_types\000"
 29621      5F747970 
 29621      657300
 29622              	.LASF17:
 29623 109f 696E7431 		.ascii	"int16\000"
 29623      3600
 29624              	.LASF164:
 29625 10a5 72656164 		.ascii	"read_exp_port_flag\000"
 29625      5F657870 
 29625      5F706F72 
 29625      745F666C 
 29625      616700
 29626              	.LASF157:
 29627 10b8 73776974 		.ascii	"switch_emg\000"
 29627      63685F65 
 29627      6D6700
 29628              	.LASF130:
 29629 10c3 61637469 		.ascii	"activate_pwm_rescaling\000"
 29629      76617465 
 29629      5F70776D 
 29629      5F726573 
 29629      63616C69 
 29630              	.LASF123:
 29631 10da 6B5F705F 		.ascii	"k_p_dl\000"
 29631      646C00
 29632              	.LASF91:
 29633 10e1 65737469 		.ascii	"estim_curr\000"
 29633      6D5F6375 
 29633      727200
 29634              	.LASF343:
 29635 10ec 6465765F 		.ascii	"dev_pwm_limit\000"
 29635      70776D5F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 645


 29635      6C696D69 
 29635      7400
 29636              	.LASF165:
 29637 10fa 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 29637      5F414443 
 29637      5F73656E 
 29637      736F7273 
 29637      5F706F72 
 29638              	.LASF353:
 29639 1115 456E636F 		.ascii	"Encoder_Value\000"
 29639      6465725F 
 29639      56616C75 
 29639      6500
 29640              	.LASF317:
 29641 1123 636D645F 		.ascii	"cmd_get_encoder_map\000"
 29641      6765745F 
 29641      656E636F 
 29641      6465725F 
 29641      6D617000 
 29642              	.LASF116:
 29643 1137 75736572 		.ascii	"user_id\000"
 29643      5F696400 
 29644              	.LASF12:
 29645 113f 75696E74 		.ascii	"uint32_t\000"
 29645      33325F74 
 29645      00
 29646              	.LASF220:
 29647 1148 6175785F 		.ascii	"aux_float\000"
 29647      666C6F61 
 29647      7400
 29648              	.LASF356:
 29649 1152 494D555F 		.ascii	"IMU_connected\000"
 29649      636F6E6E 
 29649      65637465 
 29649      6400
 29650              	.LASF211:
 29651 1160 4E554D5F 		.ascii	"NUM_MENU\000"
 29651      4D454E55 
 29651      00
 29652              	.LASF223:
 29653 1169 6175785F 		.ascii	"aux_int32\000"
 29653      696E7433 
 29653      3200
 29654              	.LASF115:
 29655 1173 62617564 		.ascii	"baud_rate\000"
 29655      5F726174 
 29655      6500
 29656              	.LASF305:
 29657 117d 745F656E 		.ascii	"t_end\000"
 29657      6400
 29658              	.LASF301:
 29659 1183 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 29659      6765745F 
 29659      63757272 
 29659      656E7473 
 29659      5F666F72 
 29660              	.LASF206:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 646


 29661 119d 696E666F 		.ascii	"info_type\000"
 29661      5F747970 
 29661      6500
 29662              	.LASF49:
 29663 11a7 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 29663      4745545F 
 29663      494D555F 
 29663      52454144 
 29663      494E4753 
 29664              	.LASF279:
 29665 11bc 4C435243 		.ascii	"LCRChecksum\000"
 29665      6865636B 
 29665      73756D00 
 29666              	.LASF314:
 29667 11c8 6B5F696D 		.ascii	"k_imu\000"
 29667      7500
 29668              	.LASF3:
 29669 11ce 73686F72 		.ascii	"short unsigned int\000"
 29669      7420756E 
 29669      7369676E 
 29669      65642069 
 29669      6E7400
 29670              	.LASF144:
 29671 11e1 73745F65 		.ascii	"st_encoder\000"
 29671      6E636F64 
 29671      657200
 29672              	.LASF179:
 29673 11ec 6D61785F 		.ascii	"max_residual_current\000"
 29673      72657369 
 29673      6475616C 
 29673      5F637572 
 29673      72656E74 
 29674              	.LASF263:
 29675 1201 454E435F 		.ascii	"ENC_L\000"
 29675      4C00
 29676              	.LASF182:
 29677 1207 73745F65 		.ascii	"st_eeprom\000"
 29677      6570726F 
 29677      6D00
 29678              	.LASF208:
 29679 1211 54595045 		.ascii	"TYPES\000"
 29679      5300
 29680              	.LASF328:
 29681 1217 675F7265 		.ascii	"g_ref\000"
 29681      6600
 29682              	.LASF18:
 29683 121d 696E7433 		.ascii	"int32\000"
 29683      3200
 29684              	.LASF350:
 29685 1223 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 29685      4F465F41 
 29685      4E414C4F 
 29685      475F494E 
 29685      50555453 
 29686              	.LASF203:
 29687 1238 696E666F 		.ascii	"infoGet\000"
 29687      47657400 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 647


 29688              	.LASF361:
 29689 1240 6D617374 		.ascii	"master_mode\000"
 29689      65725F6D 
 29689      6F646500 
 29690              	.LASF86:
 29691 124c 46535F46 		.ascii	"FS_FILE\000"
 29691      494C4500 
 29692              	.LASF132:
 29693 1254 706F735F 		.ascii	"pos_lim_flag\000"
 29693      6C696D5F 
 29693      666C6167 
 29693      00
 29694              	.LASF332:
 29695 1261 675F6D65 		.ascii	"g_measOld\000"
 29695      61734F6C 
 29695      6400
 29696              	.LASF65:
 29697 126b 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 29697      524F4C5F 
 29697      414E474C 
 29697      4500
 29698              	.LASF297:
 29699 1279 636D645F 		.ascii	"cmd_activate\000"
 29699      61637469 
 29699      76617465 
 29699      00
 29700              	.LASF5:
 29701 1286 5F5F696E 		.ascii	"__int32_t\000"
 29701      7433325F 
 29701      7400
 29702              	.LASF233:
 29703 1290 7370695F 		.ascii	"spi_delay_menu\000"
 29703      64656C61 
 29703      795F6D65 
 29703      6E7500
 29704              	.LASF106:
 29705 129f 77697265 		.ascii	"wire_disp\000"
 29705      5F646973 
 29705      7000
 29706              	.LASF154:
 29707 12a9 656D675F 		.ascii	"emg_max_value\000"
 29707      6D61785F 
 29707      76616C75 
 29707      6500
 29708              	.LASF237:
 29709 12b7 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 29709      4F4D5F50 
 29709      4152414D 
 29709      5F534554 
 29709      00
 29710              	.LASF364:
 29711 12c8 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 29711      72635C63 
 29711      6F6D6D61 
 29711      6E645F70 
 29711      726F6365 
 29712              	.LASF138:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccIarOfh.s 			page 648


 29713 12e4 63757272 		.ascii	"current_limit\000"
 29713      656E745F 
 29713      6C696D69 
 29713      7400
 29714              	.LASF56:
 29715 12f2 53485F69 		.ascii	"SH_input_mode\000"
 29715      6E707574 
 29715      5F6D6F64 
 29715      6500
 29716              	.LASF77:
 29717 1300 54595045 		.ascii	"TYPE_INT8\000"
 29717      5F494E54 
 29717      3800
 29718              	.LASF269:
 29719 130a 494D555F 		.ascii	"IMU_reading_info\000"
 29719      72656164 
 29719      696E675F 
 29719      696E666F 
 29719      00
 29720              	.LASF14:
 29721 131b 75696E74 		.ascii	"uint16\000"
 29721      313600
 29722              	.LASF334:
 29723 1322 675F656D 		.ascii	"g_emg_measOld\000"
 29723      675F6D65 
 29723      61734F6C 
 29723      6400
 29724              	.LASF172:
 29725 1330 72657374 		.ascii	"rest_delay\000"
 29725      5F64656C 
 29725      617900
 29726              	.LASF219:
 29727 133b 6175785F 		.ascii	"aux_str\000"
 29727      73747200 
 29728              	.LASF26:
 29729 1343 434D445F 		.ascii	"CMD_PING\000"
 29729      50494E47 
 29729      00
 29730              	.LASF128:
 29731 134c 6B5F645F 		.ascii	"k_d_c_dl\000"
 29731      635F646C 
 29731      00
 29732              	.LASF196:
 29733 1355 64697265 		.ascii	"direction\000"
 29733      6374696F 
 29733      6E00
 29734              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
