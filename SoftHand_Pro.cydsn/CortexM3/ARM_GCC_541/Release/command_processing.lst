ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC76:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 35


 805              	.LC77:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC78:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC79:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC80:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC81:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC82:
 821 0054 20506F73 		.ascii	" Position\000"
 821      6974696F 
 821      6E00
 822 005e 0000     		.align	2
 823              	.LC83:
 824 0060 2050574D 		.ascii	" PWM\000"
 824      00
 825 0065 000000   		.align	2
 826              	.LC84:
 827 0068 20437572 		.ascii	" Current\000"
 827      72656E74 
 827      00
 828 0071 000000   		.align	2
 829              	.LC85:
 830 0074 20506F73 		.ascii	" Position and Current\000"
 830      6974696F 
 830      6E20616E 
 830      64204375 
 830      7272656E 
 831 008a 0000     		.align	2
 832              	.LC86:
 833 008c 20594553 		.ascii	" YES\000\000"
 833      0000
 834 0092 0000     		.align	2
 835              	.LC87:
 836 0094 204E4F00 		.ascii	" NO\000\000"
 836      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 36


 837 0099 000000   		.align	2
 838              	.LC88:
 839 009c 20526967 		.ascii	" Right\000\000"
 839      68740000 
 840              		.align	2
 841              	.LC89:
 842 00a4 204C6566 		.ascii	" Left\000\000"
 842      740000
 843 00ab 00       		.align	2
 844              	.LC90:
 845 00ac 204F4646 		.ascii	" OFF\000\000"
 845      0000
 846 00b2 0000     		.align	2
 847              	.LC91:
 848 00b4 204F4E00 		.ascii	" ON\000\000"
 848      00
 849 00b9 000000   		.align	2
 850              	.LC92:
 851 00bc 204E6F6E 		.ascii	" None\000\000"
 851      650000
 852 00c3 00       		.align	2
 853              	.LC93:
 854 00c4 2053442F 		.ascii	" SD/RTC board\000\000"
 854      52544320 
 854      626F6172 
 854      640000
 855 00d3 00       		.align	2
 856              	.LC94:
 857 00d4 20576946 		.ascii	" WiFi board [N/A]\000\000"
 857      6920626F 
 857      61726420 
 857      5B4E2F41 
 857      5D0000
 858 00e7 00       		.align	2
 859              	.LC95:
 860 00e8 204F7468 		.ascii	" Other [N/A]\000\000"
 860      6572205B 
 860      4E2F415D 
 860      0000
 861 00f6 0000     		.align	2
 862              	.LC96:
 863 00f8 204C6F77 		.ascii	" Low\000\000"
 863      0000
 864 00fe 0000     		.align	2
 865              	.LC97:
 866 0100 20486967 		.ascii	" High\000\000"
 866      680000
 867 0107 00       		.align	2
 868              	.LC98:
 869 0108 2047454E 		.ascii	" GENERIC USER\000\000"
 869      45524943 
 869      20555345 
 869      520000
 870 0117 00       		.align	2
 871              	.LC99:
 872 0118 204D4152 		.ascii	" MARIA\000\000"
 872      49410000 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 37


 873              		.align	2
 874              	.LC100:
 875 0120 20524F5A 		.ascii	" ROZA\000\000"
 875      410000
 876 0127 00       		.align	2
 877              	.LC101:
 878 0128 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 878      33383837 
 878      20285374 
 878      616E6461 
 878      72642900 
 879 013d 000000   		.align	2
 880              	.LC102:
 881 0140 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 881      35303139 
 881      20284869 
 881      67682070 
 881      6F776572 
 882 0157 00       		.align	2
 883              	.LC103:
 884 0158 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 884      5448414E 
 884      44205052 
 884      4F0000
 885 0167 00       		.align	2
 886              	.LC104:
 887 0168 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 887      45524943 
 887      2032204D 
 887      4F544F52 
 887      530000
 888              		.section	.text.get_param_list,"ax",%progbits
 889              		.align	2
 890              		.global	get_param_list
 891              		.thumb
 892              		.thumb_func
 893              		.type	get_param_list, %function
 894              	get_param_list:
 895              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 896              		.loc 1 345 0
 897              		.cfi_startproc
 898              		@ args = 16, pretend = 0, frame = 3160
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900 0000 B0B5     		push	{r4, r5, r7, lr}
 901              		.cfi_def_cfa_offset 16
 902              		.cfi_offset 4, -16
 903              		.cfi_offset 5, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 38


 904              		.cfi_offset 7, -8
 905              		.cfi_offset 14, -4
 906 0002 ADF6584D 		subw	sp, sp, #3160
 907              		.cfi_def_cfa_offset 3176
 908 0006 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0008 07F10C04 		add	r4, r7, #12
 911 000c 2060     		str	r0, [r4]
 912 000e 07F10800 		add	r0, r7, #8
 913 0012 0160     		str	r1, [r0]
 914 0014 391D     		adds	r1, r7, #4
 915 0016 0A60     		str	r2, [r1]
 916 0018 3A46     		mov	r2, r7
 917 001a 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 918              		.loc 1 348 0
 919 001c 07F15803 		add	r3, r7, #88
 920 0020 0022     		movs	r2, #0
 921 0022 1A60     		str	r2, [r3]
 922 0024 0433     		adds	r3, r3, #4
 923 0026 40F6E632 		movw	r2, #3046
 924 002a 0021     		movs	r1, #0
 925 002c 1846     		mov	r0, r3
 926 002e FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 927              		.loc 1 349 0
 928 0032 40F6EA33 		movw	r3, #3050
 929 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 930              		.loc 1 353 0
 931 003a 0023     		movs	r3, #0
 932 003c 87F8553C 		strb	r3, [r7, #3157]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 933              		.loc 1 354 0
 934 0040 0023     		movs	r3, #0
 935 0042 87F8543C 		strb	r3, [r7, #3156]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 936              		.loc 1 355 0
 937 0046 0023     		movs	r3, #0
 938 0048 87F8533C 		strb	r3, [r7, #3155]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 939              		.loc 1 357 0
 940 004c 07F12403 		add	r3, r7, #36
 941 0050 0022     		movs	r2, #0
 942 0052 1A60     		str	r2, [r3]
 943 0054 0433     		adds	r3, r3, #4
 944 0056 2E22     		movs	r2, #46
 945 0058 0021     		movs	r1, #0
 946 005a 1846     		mov	r0, r3
 947 005c FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 39


 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 948              		.loc 1 364 0
 949 0060 0023     		movs	r3, #0
 950 0062 87F84F3C 		strb	r3, [r7, #3151]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 951              		.loc 1 365 0
 952 0066 0123     		movs	r3, #1
 953 0068 87F84E3C 		strb	r3, [r7, #3150]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 954              		.loc 1 367 0
 955 006c 07F10C03 		add	r3, r7, #12
 956 0070 1B68     		ldr	r3, [r3]
 957 0072 1B68     		ldr	r3, [r3]
 958 0074 C7F8483C 		str	r3, [r7, #3144]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 959              		.loc 1 368 0
 960 0078 D7F8483C 		ldr	r3, [r7, #3144]
 961 007c C7F8443C 		str	r3, [r7, #3140]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 962              		.loc 1 370 0
 963 0080 07F15803 		add	r3, r7, #88
 964 0084 0C22     		movs	r2, #12
 965 0086 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 966              		.loc 1 371 0
 967 0088 07F15803 		add	r3, r7, #88
 968 008c 2422     		movs	r2, #36
 969 008e 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 970              		.loc 1 373 0
 971 0090 0023     		movs	r3, #0
 972 0092 87F8553C 		strb	r3, [r7, #3157]
 973 0096 01F037BF 		b	.L63
 974              	.L246:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 975              		.loc 1 376 0
 976 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 977 009e 9B00     		lsls	r3, r3, #2
 978 00a0 07F10C02 		add	r2, r7, #12
 979 00a4 1268     		ldr	r2, [r2]
 980 00a6 1344     		add	r3, r3, r2
 981 00a8 1B68     		ldr	r3, [r3]
 982 00aa C7F8483C 		str	r3, [r7, #3144]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 983              		.loc 1 379 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 40


 984 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 985 00b2 3222     		movs	r2, #50
 986 00b4 02FB03F3 		mul	r3, r2, r3
 987 00b8 0233     		adds	r3, r3, #2
 988 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 989 00be 07F10801 		add	r1, r7, #8
 990 00c2 0968     		ldr	r1, [r1]
 991 00c4 0A44     		add	r2, r2, r1
 992 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 993 00c8 07F15802 		add	r2, r7, #88
 994 00cc D154     		strb	r1, [r2, r3]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 995              		.loc 1 380 0
 996 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 997 00d2 3222     		movs	r2, #50
 998 00d4 02FB03F3 		mul	r3, r2, r3
 999 00d8 0333     		adds	r3, r3, #3
 1000 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1001 00de 391D     		adds	r1, r7, #4
 1002 00e0 0968     		ldr	r1, [r1]
 1003 00e2 0A44     		add	r2, r2, r1
 1004 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1005 00e6 07F15802 		add	r2, r7, #88
 1006 00ea D154     		strb	r1, [r2, r3]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1007              		.loc 1 383 0
 1008 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1009 00f0 07F10802 		add	r2, r7, #8
 1010 00f4 1268     		ldr	r2, [r2]
 1011 00f6 1344     		add	r3, r3, r2
 1012 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1013 00fa 092B     		cmp	r3, #9
 1014 00fc 22D8     		bhi	.L64
 1015 00fe 01A2     		adr	r2, .L66
 1016 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1017              		.p2align 2
 1018              	.L66:
 1019 0104 2D010000 		.word	.L65+1
 1020 0108 2D010000 		.word	.L65+1
 1021 010c 2D010000 		.word	.L65+1
 1022 0110 35010000 		.word	.L67+1
 1023 0114 35010000 		.word	.L67+1
 1024 0118 3D010000 		.word	.L68+1
 1025 011c 3D010000 		.word	.L68+1
 1026 0120 3D010000 		.word	.L68+1
 1027 0124 45010000 		.word	.L64+1
 1028 0128 2D010000 		.word	.L65+1
 1029              		.p2align 1
 1030              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1031              		.loc 1 385 0
 1032 012c 0123     		movs	r3, #1
 1033 012e 87F8533C 		strb	r3, [r7, #3155]
 1034 0132 07E0     		b	.L64
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 41


 1035              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1036              		.loc 1 387 0
 1037 0134 0223     		movs	r3, #2
 1038 0136 87F8533C 		strb	r3, [r7, #3155]
 1039 013a 03E0     		b	.L64
 1040              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1041              		.loc 1 389 0
 1042 013c 0423     		movs	r3, #4
 1043 013e 87F8533C 		strb	r3, [r7, #3155]
 1044 0142 00BF     		nop
 1045              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1046              		.loc 1 392 0
 1047 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1048 0148 D7F8702C 		ldr	r2, [r7, #3184]
 1049 014c 1344     		add	r3, r3, r2
 1050 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 0150 002B     		cmp	r3, #0
 1052 0152 40F02A82 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1053              		.loc 1 395 0
 1054 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1055 015a 07F10802 		add	r2, r7, #8
 1056 015e 1268     		ldr	r2, [r2]
 1057 0160 1344     		add	r3, r3, r2
 1058 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1059 0164 092B     		cmp	r3, #9
 1060 0166 01F20E83 		bhi	.L103
 1061 016a 01A2     		adr	r2, .L72
 1062 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1063              		.p2align 2
 1064              	.L72:
 1065 0170 99010000 		.word	.L71+1
 1066 0174 01020000 		.word	.L73+1
 1067 0178 99010000 		.word	.L71+1
 1068 017c 69020000 		.word	.L74+1
 1069 0180 11030000 		.word	.L75+1
 1070 0184 B7030000 		.word	.L76+1
 1071 0188 5D040000 		.word	.L77+1
 1072 018c 03050000 		.word	.L78+1
 1073 0190 87170000 		.word	.L103+1
 1074 0194 99010000 		.word	.L71+1
 1075              		.p2align 1
 1076              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1077              		.loc 1 397 0
 1078 0198 0023     		movs	r3, #0
 1079 019a 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 42


 1080 019e 23E0     		b	.L79
 1081              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1082              		.loc 1 398 0 discriminator 3
 1083 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1084 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1085 01a8 02FB03F3 		mul	r3, r2, r3
 1086 01ac 1A46     		mov	r2, r3
 1087 01ae D7F8483C 		ldr	r3, [r7, #3144]
 1088 01b2 1344     		add	r3, r3, r2
 1089 01b4 C7F8443C 		str	r3, [r7, #3140]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1090              		.loc 1 399 0 discriminator 3
 1091 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1092 01bc 3222     		movs	r2, #50
 1093 01be 02FB03F3 		mul	r3, r2, r3
 1094 01c2 1A1D     		adds	r2, r3, #4
 1095 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1096 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1097 01cc 01FB03F3 		mul	r3, r1, r3
 1098 01d0 1344     		add	r3, r3, r2
 1099 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1100 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1101 01d8 07F15802 		add	r2, r7, #88
 1102 01dc D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1103              		.loc 1 397 0 discriminator 3
 1104 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1105 01e2 0133     		adds	r3, r3, #1
 1106 01e4 87F8573C 		strb	r3, [r7, #3159]
 1107              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1108              		.loc 1 397 0 is_stmt 0 discriminator 1
 1109 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1110 01ec 3A1D     		adds	r2, r7, #4
 1111 01ee 1268     		ldr	r2, [r2]
 1112 01f0 1344     		add	r3, r3, r2
 1113 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1114 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1115 01f8 9A42     		cmp	r2, r3
 1116 01fa D1D3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1117              		.loc 1 401 0 is_stmt 1
 1118 01fc 01F0C3BA 		b	.L103
 1119              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1120              		.loc 1 403 0
 1121 0200 0023     		movs	r3, #0
 1122 0202 87F8573C 		strb	r3, [r7, #3159]
 1123 0206 23E0     		b	.L81
 1124              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1125              		.loc 1 404 0 discriminator 3
 1126 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1127 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 43


 1128 0210 02FB03F3 		mul	r3, r2, r3
 1129 0214 1A46     		mov	r2, r3
 1130 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1131 021a 1344     		add	r3, r3, r2
 1132 021c C7F8443C 		str	r3, [r7, #3140]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1133              		.loc 1 405 0 discriminator 3
 1134 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1135 0224 3222     		movs	r2, #50
 1136 0226 02FB03F3 		mul	r3, r2, r3
 1137 022a 1A1D     		adds	r2, r3, #4
 1138 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1139 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1140 0234 01FB03F3 		mul	r3, r1, r3
 1141 0238 1344     		add	r3, r3, r2
 1142 023a D7F8442C 		ldr	r2, [r7, #3140]
 1143 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1144 0240 07F15802 		add	r2, r7, #88
 1145 0244 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1146              		.loc 1 403 0 discriminator 3
 1147 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1148 024a 0133     		adds	r3, r3, #1
 1149 024c 87F8573C 		strb	r3, [r7, #3159]
 1150              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1151              		.loc 1 403 0 is_stmt 0 discriminator 1
 1152 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1153 0254 3A1D     		adds	r2, r7, #4
 1154 0256 1268     		ldr	r2, [r2]
 1155 0258 1344     		add	r3, r3, r2
 1156 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1157 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1158 0260 9A42     		cmp	r2, r3
 1159 0262 D1D3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1160              		.loc 1 407 0 is_stmt 1
 1161 0264 01F08FBA 		b	.L103
 1162              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1163              		.loc 1 409 0
 1164 0268 0023     		movs	r3, #0
 1165 026a 87F8573C 		strb	r3, [r7, #3159]
 1166 026e 43E0     		b	.L83
 1167              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1168              		.loc 1 410 0
 1169 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1170 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1171 0278 02FB03F3 		mul	r3, r2, r3
 1172 027c 1A46     		mov	r2, r3
 1173 027e D7F8483C 		ldr	r3, [r7, #3144]
 1174 0282 1344     		add	r3, r3, r2
 1175 0284 C7F8443C 		str	r3, [r7, #3140]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 44


 1176              		.loc 1 411 0
 1177 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1178 028c B3F90020 		ldrsh	r2, [r3]
 1179 0290 07F11E03 		add	r3, r7, #30
 1180 0294 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1181              		.loc 1 412 0
 1182 0296 0023     		movs	r3, #0
 1183 0298 87F8563C 		strb	r3, [r7, #3158]
 1184 029c 21E0     		b	.L84
 1185              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1186              		.loc 1 413 0 discriminator 3
 1187 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1188 02a2 3222     		movs	r2, #50
 1189 02a4 02FB03F3 		mul	r3, r2, r3
 1190 02a8 1A1D     		adds	r2, r3, #4
 1191 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1192 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1193 02b2 01FB03F3 		mul	r3, r1, r3
 1194 02b6 1A44     		add	r2, r2, r3
 1195 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1196 02bc 1A44     		add	r2, r2, r3
 1197 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1198 02c2 D31A     		subs	r3, r2, r3
 1199 02c4 013B     		subs	r3, r3, #1
 1200 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1201 02ca 07F11E01 		add	r1, r7, #30
 1202 02ce 0A44     		add	r2, r2, r1
 1203 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1204 02d2 07F15802 		add	r2, r7, #88
 1205 02d6 D154     		strb	r1, [r2, r3]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1206              		.loc 1 412 0 discriminator 3
 1207 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1208 02dc 0133     		adds	r3, r3, #1
 1209 02de 87F8563C 		strb	r3, [r7, #3158]
 1210              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1211              		.loc 1 412 0 is_stmt 0 discriminator 1
 1212 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1213 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1214 02ea 9A42     		cmp	r2, r3
 1215 02ec D7D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1216              		.loc 1 409 0 is_stmt 1 discriminator 2
 1217 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1218 02f2 0133     		adds	r3, r3, #1
 1219 02f4 87F8573C 		strb	r3, [r7, #3159]
 1220              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1221              		.loc 1 409 0 is_stmt 0 discriminator 1
 1222 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1223 02fc 3A1D     		adds	r2, r7, #4
 1224 02fe 1268     		ldr	r2, [r2]
 1225 0300 1344     		add	r3, r3, r2
 1226 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 45


 1227 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1228 0308 9A42     		cmp	r2, r3
 1229 030a B1D3     		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1230              		.loc 1 416 0 is_stmt 1
 1231 030c 01F03BBA 		b	.L103
 1232              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1233              		.loc 1 418 0
 1234 0310 0023     		movs	r3, #0
 1235 0312 87F8573C 		strb	r3, [r7, #3159]
 1236 0316 42E0     		b	.L87
 1237              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1238              		.loc 1 419 0
 1239 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1240 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1241 0320 02FB03F3 		mul	r3, r2, r3
 1242 0324 1A46     		mov	r2, r3
 1243 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1244 032a 1344     		add	r3, r3, r2
 1245 032c C7F8443C 		str	r3, [r7, #3140]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1246              		.loc 1 420 0
 1247 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1248 0334 1A88     		ldrh	r2, [r3]
 1249 0336 07F11C03 		add	r3, r7, #28
 1250 033a 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1251              		.loc 1 421 0
 1252 033c 0023     		movs	r3, #0
 1253 033e 87F8563C 		strb	r3, [r7, #3158]
 1254 0342 21E0     		b	.L88
 1255              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1256              		.loc 1 422 0 discriminator 3
 1257 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1258 0348 3222     		movs	r2, #50
 1259 034a 02FB03F3 		mul	r3, r2, r3
 1260 034e 1A1D     		adds	r2, r3, #4
 1261 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1262 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1263 0358 01FB03F3 		mul	r3, r1, r3
 1264 035c 1A44     		add	r2, r2, r3
 1265 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1266 0362 1A44     		add	r2, r2, r3
 1267 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1268 0368 D31A     		subs	r3, r2, r3
 1269 036a 013B     		subs	r3, r3, #1
 1270 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1271 0370 07F11C01 		add	r1, r7, #28
 1272 0374 0A44     		add	r2, r2, r1
 1273 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1274 0378 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 46


 1275 037c D154     		strb	r1, [r2, r3]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1276              		.loc 1 421 0 discriminator 3
 1277 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1278 0382 0133     		adds	r3, r3, #1
 1279 0384 87F8563C 		strb	r3, [r7, #3158]
 1280              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1281              		.loc 1 421 0 is_stmt 0 discriminator 1
 1282 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1283 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1284 0390 9A42     		cmp	r2, r3
 1285 0392 D7D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1286              		.loc 1 418 0 is_stmt 1 discriminator 2
 1287 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1288 0398 0133     		adds	r3, r3, #1
 1289 039a 87F8573C 		strb	r3, [r7, #3159]
 1290              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1291              		.loc 1 418 0 is_stmt 0 discriminator 1
 1292 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1293 03a2 3A1D     		adds	r2, r7, #4
 1294 03a4 1268     		ldr	r2, [r2]
 1295 03a6 1344     		add	r3, r3, r2
 1296 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1297 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1298 03ae 9A42     		cmp	r2, r3
 1299 03b0 B2D3     		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1300              		.loc 1 425 0 is_stmt 1
 1301 03b2 01F0E8B9 		b	.L103
 1302              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1303              		.loc 1 427 0
 1304 03b6 0023     		movs	r3, #0
 1305 03b8 87F8573C 		strb	r3, [r7, #3159]
 1306 03bc 42E0     		b	.L91
 1307              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1308              		.loc 1 428 0
 1309 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1310 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1311 03c6 02FB03F3 		mul	r3, r2, r3
 1312 03ca 1A46     		mov	r2, r3
 1313 03cc D7F8483C 		ldr	r3, [r7, #3144]
 1314 03d0 1344     		add	r3, r3, r2
 1315 03d2 C7F8443C 		str	r3, [r7, #3140]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1316              		.loc 1 429 0
 1317 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1318 03da 1A68     		ldr	r2, [r3]
 1319 03dc 07F11803 		add	r3, r7, #24
 1320 03e0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 47


 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1321              		.loc 1 430 0
 1322 03e2 0023     		movs	r3, #0
 1323 03e4 87F8563C 		strb	r3, [r7, #3158]
 1324 03e8 21E0     		b	.L92
 1325              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1326              		.loc 1 431 0 discriminator 3
 1327 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1328 03ee 3222     		movs	r2, #50
 1329 03f0 02FB03F3 		mul	r3, r2, r3
 1330 03f4 1A1D     		adds	r2, r3, #4
 1331 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1332 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1333 03fe 01FB03F3 		mul	r3, r1, r3
 1334 0402 1A44     		add	r2, r2, r3
 1335 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1336 0408 1A44     		add	r2, r2, r3
 1337 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1338 040e D31A     		subs	r3, r2, r3
 1339 0410 013B     		subs	r3, r3, #1
 1340 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1341 0416 07F11801 		add	r1, r7, #24
 1342 041a 0A44     		add	r2, r2, r1
 1343 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1344 041e 07F15802 		add	r2, r7, #88
 1345 0422 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1346              		.loc 1 430 0 discriminator 3
 1347 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1348 0428 0133     		adds	r3, r3, #1
 1349 042a 87F8563C 		strb	r3, [r7, #3158]
 1350              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1351              		.loc 1 430 0 is_stmt 0 discriminator 1
 1352 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1353 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1354 0436 9A42     		cmp	r2, r3
 1355 0438 D7D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1356              		.loc 1 427 0 is_stmt 1 discriminator 2
 1357 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1358 043e 0133     		adds	r3, r3, #1
 1359 0440 87F8573C 		strb	r3, [r7, #3159]
 1360              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1361              		.loc 1 427 0 is_stmt 0 discriminator 1
 1362 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1363 0448 3A1D     		adds	r2, r7, #4
 1364 044a 1268     		ldr	r2, [r2]
 1365 044c 1344     		add	r3, r3, r2
 1366 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1367 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1368 0454 9A42     		cmp	r2, r3
 1369 0456 B2D3     		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 48


 434:..\src/command_processing.c ****                     break;
 1370              		.loc 1 434 0 is_stmt 1
 1371 0458 01F095B9 		b	.L103
 1372              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1373              		.loc 1 436 0
 1374 045c 0023     		movs	r3, #0
 1375 045e 87F8573C 		strb	r3, [r7, #3159]
 1376 0462 42E0     		b	.L95
 1377              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1378              		.loc 1 437 0
 1379 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1380 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1381 046c 02FB03F3 		mul	r3, r2, r3
 1382 0470 1A46     		mov	r2, r3
 1383 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1384 0476 1344     		add	r3, r3, r2
 1385 0478 C7F8443C 		str	r3, [r7, #3140]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1386              		.loc 1 438 0
 1387 047c D7F8443C 		ldr	r3, [r7, #3140]
 1388 0480 1A68     		ldr	r2, [r3]
 1389 0482 07F11403 		add	r3, r7, #20
 1390 0486 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1391              		.loc 1 439 0
 1392 0488 0023     		movs	r3, #0
 1393 048a 87F8563C 		strb	r3, [r7, #3158]
 1394 048e 21E0     		b	.L96
 1395              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1396              		.loc 1 440 0 discriminator 3
 1397 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1398 0494 3222     		movs	r2, #50
 1399 0496 02FB03F3 		mul	r3, r2, r3
 1400 049a 1A1D     		adds	r2, r3, #4
 1401 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1402 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1403 04a4 01FB03F3 		mul	r3, r1, r3
 1404 04a8 1A44     		add	r2, r2, r3
 1405 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1406 04ae 1A44     		add	r2, r2, r3
 1407 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1408 04b4 D31A     		subs	r3, r2, r3
 1409 04b6 013B     		subs	r3, r3, #1
 1410 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1411 04bc 07F11401 		add	r1, r7, #20
 1412 04c0 0A44     		add	r2, r2, r1
 1413 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1414 04c4 07F15802 		add	r2, r7, #88
 1415 04c8 D154     		strb	r1, [r2, r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1416              		.loc 1 439 0 discriminator 3
 1417 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1418 04ce 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 49


 1419 04d0 87F8563C 		strb	r3, [r7, #3158]
 1420              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1421              		.loc 1 439 0 is_stmt 0 discriminator 1
 1422 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1423 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1424 04dc 9A42     		cmp	r2, r3
 1425 04de D7D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1426              		.loc 1 436 0 is_stmt 1 discriminator 2
 1427 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1428 04e4 0133     		adds	r3, r3, #1
 1429 04e6 87F8573C 		strb	r3, [r7, #3159]
 1430              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1431              		.loc 1 436 0 is_stmt 0 discriminator 1
 1432 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1433 04ee 3A1D     		adds	r2, r7, #4
 1434 04f0 1268     		ldr	r2, [r2]
 1435 04f2 1344     		add	r3, r3, r2
 1436 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1437 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1438 04fa 9A42     		cmp	r2, r3
 1439 04fc B2D3     		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1440              		.loc 1 443 0 is_stmt 1
 1441 04fe 01F042B9 		b	.L103
 1442              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1443              		.loc 1 446 0
 1444 0502 0023     		movs	r3, #0
 1445 0504 87F8573C 		strb	r3, [r7, #3159]
 1446 0508 42E0     		b	.L99
 1447              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1448              		.loc 1 447 0
 1449 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1450 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1451 0512 02FB03F3 		mul	r3, r2, r3
 1452 0516 1A46     		mov	r2, r3
 1453 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1454 051c 1344     		add	r3, r3, r2
 1455 051e C7F8443C 		str	r3, [r7, #3140]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1456              		.loc 1 448 0
 1457 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1458 0526 1A68     		ldr	r2, [r3]	@ float
 1459 0528 07F12003 		add	r3, r7, #32
 1460 052c 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1461              		.loc 1 449 0
 1462 052e 0023     		movs	r3, #0
 1463 0530 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 50


 1464 0534 21E0     		b	.L100
 1465              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1466              		.loc 1 450 0 discriminator 3
 1467 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1468 053a 3222     		movs	r2, #50
 1469 053c 02FB03F3 		mul	r3, r2, r3
 1470 0540 1A1D     		adds	r2, r3, #4
 1471 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1472 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1473 054a 01FB03F3 		mul	r3, r1, r3
 1474 054e 1A44     		add	r2, r2, r3
 1475 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1476 0554 1A44     		add	r2, r2, r3
 1477 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1478 055a D31A     		subs	r3, r2, r3
 1479 055c 013B     		subs	r3, r3, #1
 1480 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1481 0562 07F12001 		add	r1, r7, #32
 1482 0566 0A44     		add	r2, r2, r1
 1483 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1484 056a 07F15802 		add	r2, r7, #88
 1485 056e D154     		strb	r1, [r2, r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1486              		.loc 1 449 0 discriminator 3
 1487 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1488 0574 0133     		adds	r3, r3, #1
 1489 0576 87F8563C 		strb	r3, [r7, #3158]
 1490              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1491              		.loc 1 449 0 is_stmt 0 discriminator 1
 1492 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1493 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1494 0582 9A42     		cmp	r2, r3
 1495 0584 D7D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1496              		.loc 1 446 0 is_stmt 1 discriminator 2
 1497 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1498 058a 0133     		adds	r3, r3, #1
 1499 058c 87F8573C 		strb	r3, [r7, #3159]
 1500              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1501              		.loc 1 446 0 is_stmt 0 discriminator 1
 1502 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1503 0594 3A1D     		adds	r2, r7, #4
 1504 0596 1268     		ldr	r2, [r2]
 1505 0598 1344     		add	r3, r3, r2
 1506 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1507 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1508 05a0 9A42     		cmp	r2, r3
 1509 05a2 B2D3     		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1510              		.loc 1 453 0 is_stmt 1 discriminator 7
 1511 05a4 00BF     		nop
 1512 05a6 01F0EEB8 		b	.L103
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 51


 1513              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1514              		.loc 1 461 0
 1515 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1516 05ae 0133     		adds	r3, r3, #1
 1517 05b0 023B     		subs	r3, r3, #2
 1518 05b2 332B     		cmp	r3, #51
 1519 05b4 01F2E680 		bhi	.L251
 1520 05b8 01A2     		adr	r2, .L106
 1521 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1522 05be 00BF     		.p2align 2
 1523              	.L106:
 1524 05c0 91060000 		.word	.L105+1
 1525 05c4 B1090000 		.word	.L107+1
 1526 05c8 85170000 		.word	.L251+1
 1527 05cc 85170000 		.word	.L251+1
 1528 05d0 85170000 		.word	.L251+1
 1529 05d4 85170000 		.word	.L251+1
 1530 05d8 D10C0000 		.word	.L108+1
 1531 05dc 85170000 		.word	.L251+1
 1532 05e0 85170000 		.word	.L251+1
 1533 05e4 970D0000 		.word	.L109+1
 1534 05e8 85170000 		.word	.L251+1
 1535 05ec 85170000 		.word	.L251+1
 1536 05f0 85170000 		.word	.L251+1
 1537 05f4 85170000 		.word	.L251+1
 1538 05f8 85170000 		.word	.L251+1
 1539 05fc 85170000 		.word	.L251+1
 1540 0600 85170000 		.word	.L251+1
 1541 0604 85170000 		.word	.L251+1
 1542 0608 85170000 		.word	.L251+1
 1543 060c 85170000 		.word	.L251+1
 1544 0610 85170000 		.word	.L251+1
 1545 0614 C50E0000 		.word	.L110+1
 1546 0618 85170000 		.word	.L251+1
 1547 061c 85170000 		.word	.L251+1
 1548 0620 85170000 		.word	.L251+1
 1549 0624 85170000 		.word	.L251+1
 1550 0628 85170000 		.word	.L251+1
 1551 062c 85170000 		.word	.L251+1
 1552 0630 85170000 		.word	.L251+1
 1553 0634 85170000 		.word	.L251+1
 1554 0638 85170000 		.word	.L251+1
 1555 063c 85170000 		.word	.L251+1
 1556 0640 85170000 		.word	.L251+1
 1557 0644 85170000 		.word	.L251+1
 1558 0648 85170000 		.word	.L251+1
 1559 064c 85170000 		.word	.L251+1
 1560 0650 85170000 		.word	.L251+1
 1561 0654 85170000 		.word	.L251+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 52


 1562 0658 85170000 		.word	.L251+1
 1563 065c 85170000 		.word	.L251+1
 1564 0660 85170000 		.word	.L251+1
 1565 0664 85170000 		.word	.L251+1
 1566 0668 4D0F0000 		.word	.L111+1
 1567 066c 6F120000 		.word	.L112+1
 1568 0670 85170000 		.word	.L251+1
 1569 0674 85170000 		.word	.L251+1
 1570 0678 85170000 		.word	.L251+1
 1571 067c 85170000 		.word	.L251+1
 1572 0680 8B150000 		.word	.L113+1
 1573 0684 85170000 		.word	.L251+1
 1574 0688 85170000 		.word	.L251+1
 1575 068c 4F160000 		.word	.L114+1
 1576              		.p2align 1
 1577              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1578              		.loc 1 463 0
 1579 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1580 0694 C549     		ldr	r1, .L255
 1581 0696 1346     		mov	r3, r2
 1582 0698 DB00     		lsls	r3, r3, #3
 1583 069a 9B1A     		subs	r3, r3, r2
 1584 069c 1B01     		lsls	r3, r3, #4
 1585 069e 0B44     		add	r3, r3, r1
 1586 06a0 03F20F13 		addw	r3, r3, #271
 1587 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1588 06a6 032B     		cmp	r3, #3
 1589 06a8 00F0C080 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1590              		.loc 1 464 0
 1591 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1592 06b0 BE49     		ldr	r1, .L255
 1593 06b2 1346     		mov	r3, r2
 1594 06b4 DB00     		lsls	r3, r3, #3
 1595 06b6 9B1A     		subs	r3, r3, r2
 1596 06b8 1B01     		lsls	r3, r3, #4
 1597 06ba 0B44     		add	r3, r3, r1
 1598 06bc B033     		adds	r3, r3, #176
 1599 06be 1B68     		ldr	r3, [r3]
 1600 06c0 1846     		mov	r0, r3
 1601 06c2 FFF7FEFF 		bl	__aeabi_i2f
 1602 06c6 0346     		mov	r3, r0
 1603 06c8 4FF08F41 		mov	r1, #1199570944
 1604 06cc 1846     		mov	r0, r3
 1605 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1606 06d2 0346     		mov	r3, r0
 1607 06d4 1A46     		mov	r2, r3
 1608 06d6 07F12003 		add	r3, r7, #32
 1609 06da 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1610              		.loc 1 465 0
 1611 06dc 0023     		movs	r3, #0
 1612 06de 87F8573C 		strb	r3, [r7, #3159]
 1613 06e2 1AE0     		b	.L116
 1614              	.L117:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 53


 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1615              		.loc 1 466 0 discriminator 3
 1616 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1617 06e8 3222     		movs	r2, #50
 1618 06ea 02FB03F3 		mul	r3, r2, r3
 1619 06ee 1A1D     		adds	r2, r3, #4
 1620 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1621 06f4 1A44     		add	r2, r2, r3
 1622 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1623 06fa D31A     		subs	r3, r2, r3
 1624 06fc 013B     		subs	r3, r3, #1
 1625 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1626 0702 07F12001 		add	r1, r7, #32
 1627 0706 0A44     		add	r2, r2, r1
 1628 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1629 070a 07F15802 		add	r2, r7, #88
 1630 070e D154     		strb	r1, [r2, r3]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1631              		.loc 1 465 0 discriminator 3
 1632 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1633 0714 0133     		adds	r3, r3, #1
 1634 0716 87F8573C 		strb	r3, [r7, #3159]
 1635              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1636              		.loc 1 465 0 is_stmt 0 discriminator 1
 1637 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1638 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1639 0722 9A42     		cmp	r2, r3
 1640 0724 DED3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1641              		.loc 1 468 0 is_stmt 1
 1642 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1643 072a A049     		ldr	r1, .L255
 1644 072c 1346     		mov	r3, r2
 1645 072e DB00     		lsls	r3, r3, #3
 1646 0730 9B1A     		subs	r3, r3, r2
 1647 0732 1B01     		lsls	r3, r3, #4
 1648 0734 0B44     		add	r3, r3, r1
 1649 0736 B433     		adds	r3, r3, #180
 1650 0738 1B68     		ldr	r3, [r3]
 1651 073a 1846     		mov	r0, r3
 1652 073c FFF7FEFF 		bl	__aeabi_i2f
 1653 0740 0346     		mov	r3, r0
 1654 0742 4FF08F41 		mov	r1, #1199570944
 1655 0746 1846     		mov	r0, r3
 1656 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1657 074c 0346     		mov	r3, r0
 1658 074e 1A46     		mov	r2, r3
 1659 0750 07F12003 		add	r3, r7, #32
 1660 0754 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1661              		.loc 1 469 0
 1662 0756 0023     		movs	r3, #0
 1663 0758 87F8573C 		strb	r3, [r7, #3159]
 1664 075c 1DE0     		b	.L118
 1665              	.L119:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 54


 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1666              		.loc 1 470 0 discriminator 3
 1667 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1668 0762 3222     		movs	r2, #50
 1669 0764 02FB03F3 		mul	r3, r2, r3
 1670 0768 1A1D     		adds	r2, r3, #4
 1671 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1672 076e 1A44     		add	r2, r2, r3
 1673 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1674 0774 1A44     		add	r2, r2, r3
 1675 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1676 077a D31A     		subs	r3, r2, r3
 1677 077c 013B     		subs	r3, r3, #1
 1678 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1679 0782 07F12001 		add	r1, r7, #32
 1680 0786 0A44     		add	r2, r2, r1
 1681 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1682 078a 07F15802 		add	r2, r7, #88
 1683 078e D154     		strb	r1, [r2, r3]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1684              		.loc 1 469 0 discriminator 3
 1685 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1686 0794 0133     		adds	r3, r3, #1
 1687 0796 87F8573C 		strb	r3, [r7, #3159]
 1688              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1689              		.loc 1 469 0 is_stmt 0 discriminator 1
 1690 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1691 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1692 07a2 9A42     		cmp	r2, r3
 1693 07a4 DBD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1694              		.loc 1 472 0 is_stmt 1
 1695 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1696 07aa 8049     		ldr	r1, .L255
 1697 07ac 1346     		mov	r3, r2
 1698 07ae DB00     		lsls	r3, r3, #3
 1699 07b0 9B1A     		subs	r3, r3, r2
 1700 07b2 1B01     		lsls	r3, r3, #4
 1701 07b4 0B44     		add	r3, r3, r1
 1702 07b6 B833     		adds	r3, r3, #184
 1703 07b8 1B68     		ldr	r3, [r3]
 1704 07ba 1846     		mov	r0, r3
 1705 07bc FFF7FEFF 		bl	__aeabi_i2f
 1706 07c0 0346     		mov	r3, r0
 1707 07c2 4FF08F41 		mov	r1, #1199570944
 1708 07c6 1846     		mov	r0, r3
 1709 07c8 FFF7FEFF 		bl	__aeabi_fdiv
 1710 07cc 0346     		mov	r3, r0
 1711 07ce 1A46     		mov	r2, r3
 1712 07d0 07F12003 		add	r3, r7, #32
 1713 07d4 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1714              		.loc 1 473 0
 1715 07d6 0023     		movs	r3, #0
 1716 07d8 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 55


 1717 07dc 1EE0     		b	.L120
 1718              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1719              		.loc 1 474 0 discriminator 3
 1720 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1721 07e2 3222     		movs	r2, #50
 1722 07e4 02FB03F3 		mul	r3, r2, r3
 1723 07e8 1A1D     		adds	r2, r3, #4
 1724 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1725 07ee 5B00     		lsls	r3, r3, #1
 1726 07f0 1A44     		add	r2, r2, r3
 1727 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1728 07f6 1A44     		add	r2, r2, r3
 1729 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1730 07fc D31A     		subs	r3, r2, r3
 1731 07fe 013B     		subs	r3, r3, #1
 1732 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1733 0804 07F12001 		add	r1, r7, #32
 1734 0808 0A44     		add	r2, r2, r1
 1735 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1736 080c 07F15802 		add	r2, r7, #88
 1737 0810 D154     		strb	r1, [r2, r3]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1738              		.loc 1 473 0 discriminator 3
 1739 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1740 0816 0133     		adds	r3, r3, #1
 1741 0818 87F8573C 		strb	r3, [r7, #3159]
 1742              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1743              		.loc 1 473 0 is_stmt 0 discriminator 1
 1744 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1745 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1746 0824 9A42     		cmp	r2, r3
 1747 0826 DAD3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 1748              		.loc 1 491 0 is_stmt 1
 1749 0828 00F0ADBF 		b	.L103
 1750              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1751              		.loc 1 478 0
 1752 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 56


 1753 0830 5E49     		ldr	r1, .L255
 1754 0832 1346     		mov	r3, r2
 1755 0834 DB00     		lsls	r3, r3, #3
 1756 0836 9B1A     		subs	r3, r3, r2
 1757 0838 1B01     		lsls	r3, r3, #4
 1758 083a 0B44     		add	r3, r3, r1
 1759 083c C833     		adds	r3, r3, #200
 1760 083e 1B68     		ldr	r3, [r3]
 1761 0840 1846     		mov	r0, r3
 1762 0842 FFF7FEFF 		bl	__aeabi_i2f
 1763 0846 0346     		mov	r3, r0
 1764 0848 4FF08F41 		mov	r1, #1199570944
 1765 084c 1846     		mov	r0, r3
 1766 084e FFF7FEFF 		bl	__aeabi_fdiv
 1767 0852 0346     		mov	r3, r0
 1768 0854 1A46     		mov	r2, r3
 1769 0856 07F12003 		add	r3, r7, #32
 1770 085a 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1771              		.loc 1 479 0
 1772 085c 0023     		movs	r3, #0
 1773 085e 87F8573C 		strb	r3, [r7, #3159]
 1774 0862 1AE0     		b	.L123
 1775              	.L124:
 480:..\src/command_processing.c ****                             }
 1776              		.loc 1 480 0 discriminator 3
 1777 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1778 0868 3222     		movs	r2, #50
 1779 086a 02FB03F3 		mul	r3, r2, r3
 1780 086e 1A1D     		adds	r2, r3, #4
 1781 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1782 0874 1A44     		add	r2, r2, r3
 1783 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1784 087a D31A     		subs	r3, r2, r3
 1785 087c 013B     		subs	r3, r3, #1
 1786 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1787 0882 07F12001 		add	r1, r7, #32
 1788 0886 0A44     		add	r2, r2, r1
 1789 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1790 088a 07F15802 		add	r2, r7, #88
 1791 088e D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1792              		.loc 1 479 0 discriminator 3
 1793 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1794 0894 0133     		adds	r3, r3, #1
 1795 0896 87F8573C 		strb	r3, [r7, #3159]
 1796              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1797              		.loc 1 479 0 is_stmt 0 discriminator 1
 1798 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1799 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1800 08a2 9A42     		cmp	r2, r3
 1801 08a4 DED3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1802              		.loc 1 482 0 is_stmt 1
 1803 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1804 08aa 4049     		ldr	r1, .L255
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 57


 1805 08ac 1346     		mov	r3, r2
 1806 08ae DB00     		lsls	r3, r3, #3
 1807 08b0 9B1A     		subs	r3, r3, r2
 1808 08b2 1B01     		lsls	r3, r3, #4
 1809 08b4 0B44     		add	r3, r3, r1
 1810 08b6 CC33     		adds	r3, r3, #204
 1811 08b8 1B68     		ldr	r3, [r3]
 1812 08ba 1846     		mov	r0, r3
 1813 08bc FFF7FEFF 		bl	__aeabi_i2f
 1814 08c0 0346     		mov	r3, r0
 1815 08c2 4FF08F41 		mov	r1, #1199570944
 1816 08c6 1846     		mov	r0, r3
 1817 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1818 08cc 0346     		mov	r3, r0
 1819 08ce 1A46     		mov	r2, r3
 1820 08d0 07F12003 		add	r3, r7, #32
 1821 08d4 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1822              		.loc 1 483 0
 1823 08d6 0023     		movs	r3, #0
 1824 08d8 87F8573C 		strb	r3, [r7, #3159]
 1825 08dc 1DE0     		b	.L125
 1826              	.L126:
 484:..\src/command_processing.c ****                             }
 1827              		.loc 1 484 0 discriminator 3
 1828 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1829 08e2 3222     		movs	r2, #50
 1830 08e4 02FB03F3 		mul	r3, r2, r3
 1831 08e8 1A1D     		adds	r2, r3, #4
 1832 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1833 08ee 1A44     		add	r2, r2, r3
 1834 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1835 08f4 1A44     		add	r2, r2, r3
 1836 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1837 08fa D31A     		subs	r3, r2, r3
 1838 08fc 013B     		subs	r3, r3, #1
 1839 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1840 0902 07F12001 		add	r1, r7, #32
 1841 0906 0A44     		add	r2, r2, r1
 1842 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1843 090a 07F15802 		add	r2, r7, #88
 1844 090e D154     		strb	r1, [r2, r3]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1845              		.loc 1 483 0 discriminator 3
 1846 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1847 0914 0133     		adds	r3, r3, #1
 1848 0916 87F8573C 		strb	r3, [r7, #3159]
 1849              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1850              		.loc 1 483 0 is_stmt 0 discriminator 1
 1851 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1852 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1853 0922 9A42     		cmp	r2, r3
 1854 0924 DBD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1855              		.loc 1 486 0 is_stmt 1
 1856 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 58


 1857 092a 2049     		ldr	r1, .L255
 1858 092c 1346     		mov	r3, r2
 1859 092e DB00     		lsls	r3, r3, #3
 1860 0930 9B1A     		subs	r3, r3, r2
 1861 0932 1B01     		lsls	r3, r3, #4
 1862 0934 0B44     		add	r3, r3, r1
 1863 0936 D033     		adds	r3, r3, #208
 1864 0938 1B68     		ldr	r3, [r3]
 1865 093a 1846     		mov	r0, r3
 1866 093c FFF7FEFF 		bl	__aeabi_i2f
 1867 0940 0346     		mov	r3, r0
 1868 0942 4FF08F41 		mov	r1, #1199570944
 1869 0946 1846     		mov	r0, r3
 1870 0948 FFF7FEFF 		bl	__aeabi_fdiv
 1871 094c 0346     		mov	r3, r0
 1872 094e 1A46     		mov	r2, r3
 1873 0950 07F12003 		add	r3, r7, #32
 1874 0954 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1875              		.loc 1 487 0
 1876 0956 0023     		movs	r3, #0
 1877 0958 87F8573C 		strb	r3, [r7, #3159]
 1878 095c 1EE0     		b	.L127
 1879              	.L128:
 488:..\src/command_processing.c ****                             }
 1880              		.loc 1 488 0 discriminator 3
 1881 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1882 0962 3222     		movs	r2, #50
 1883 0964 02FB03F3 		mul	r3, r2, r3
 1884 0968 1A1D     		adds	r2, r3, #4
 1885 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1886 096e 5B00     		lsls	r3, r3, #1
 1887 0970 1A44     		add	r2, r2, r3
 1888 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1889 0976 1A44     		add	r2, r2, r3
 1890 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1891 097c D31A     		subs	r3, r2, r3
 1892 097e 013B     		subs	r3, r3, #1
 1893 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1894 0984 07F12001 		add	r1, r7, #32
 1895 0988 0A44     		add	r2, r2, r1
 1896 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1897 098c 07F15802 		add	r2, r7, #88
 1898 0990 D154     		strb	r1, [r2, r3]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1899              		.loc 1 487 0 discriminator 3
 1900 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1901 0996 0133     		adds	r3, r3, #1
 1902 0998 87F8573C 		strb	r3, [r7, #3159]
 1903              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1904              		.loc 1 487 0 is_stmt 0 discriminator 1
 1905 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1906 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1907 09a4 9A42     		cmp	r2, r3
 1908 09a6 DAD3     		bcc	.L128
 1909              		.loc 1 491 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 59


 1910 09a8 00F0EDBE 		b	.L103
 1911              	.L256:
 1912              		.align	2
 1913              	.L255:
 1914 09ac 00000000 		.word	c_mem
 1915              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1916              		.loc 1 494 0
 1917 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1918 09b4 C549     		ldr	r1, .L257
 1919 09b6 1346     		mov	r3, r2
 1920 09b8 DB00     		lsls	r3, r3, #3
 1921 09ba 9B1A     		subs	r3, r3, r2
 1922 09bc 1B01     		lsls	r3, r3, #4
 1923 09be 0B44     		add	r3, r3, r1
 1924 09c0 03F20F13 		addw	r3, r3, #271
 1925 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1926 09c6 032B     		cmp	r3, #3
 1927 09c8 00F0C080 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 1928              		.loc 1 495 0
 1929 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1930 09d0 BE49     		ldr	r1, .L257
 1931 09d2 1346     		mov	r3, r2
 1932 09d4 DB00     		lsls	r3, r3, #3
 1933 09d6 9B1A     		subs	r3, r3, r2
 1934 09d8 1B01     		lsls	r3, r3, #4
 1935 09da 0B44     		add	r3, r3, r1
 1936 09dc BC33     		adds	r3, r3, #188
 1937 09de 1B68     		ldr	r3, [r3]
 1938 09e0 1846     		mov	r0, r3
 1939 09e2 FFF7FEFF 		bl	__aeabi_i2f
 1940 09e6 0346     		mov	r3, r0
 1941 09e8 4FF08F41 		mov	r1, #1199570944
 1942 09ec 1846     		mov	r0, r3
 1943 09ee FFF7FEFF 		bl	__aeabi_fdiv
 1944 09f2 0346     		mov	r3, r0
 1945 09f4 1A46     		mov	r2, r3
 1946 09f6 07F12003 		add	r3, r7, #32
 1947 09fa 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1948              		.loc 1 496 0
 1949 09fc 0023     		movs	r3, #0
 1950 09fe 87F8573C 		strb	r3, [r7, #3159]
 1951 0a02 1AE0     		b	.L130
 1952              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1953              		.loc 1 497 0 discriminator 3
 1954 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1955 0a08 3222     		movs	r2, #50
 1956 0a0a 02FB03F3 		mul	r3, r2, r3
 1957 0a0e 1A1D     		adds	r2, r3, #4
 1958 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1959 0a14 1A44     		add	r2, r2, r3
 1960 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 60


 1961 0a1a D31A     		subs	r3, r2, r3
 1962 0a1c 013B     		subs	r3, r3, #1
 1963 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1964 0a22 07F12001 		add	r1, r7, #32
 1965 0a26 0A44     		add	r2, r2, r1
 1966 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1967 0a2a 07F15802 		add	r2, r7, #88
 1968 0a2e D154     		strb	r1, [r2, r3]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1969              		.loc 1 496 0 discriminator 3
 1970 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1971 0a34 0133     		adds	r3, r3, #1
 1972 0a36 87F8573C 		strb	r3, [r7, #3159]
 1973              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1974              		.loc 1 496 0 is_stmt 0 discriminator 1
 1975 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1976 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1977 0a42 9A42     		cmp	r2, r3
 1978 0a44 DED3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 1979              		.loc 1 499 0 is_stmt 1
 1980 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1981 0a4a A049     		ldr	r1, .L257
 1982 0a4c 1346     		mov	r3, r2
 1983 0a4e DB00     		lsls	r3, r3, #3
 1984 0a50 9B1A     		subs	r3, r3, r2
 1985 0a52 1B01     		lsls	r3, r3, #4
 1986 0a54 0B44     		add	r3, r3, r1
 1987 0a56 C033     		adds	r3, r3, #192
 1988 0a58 1B68     		ldr	r3, [r3]
 1989 0a5a 1846     		mov	r0, r3
 1990 0a5c FFF7FEFF 		bl	__aeabi_i2f
 1991 0a60 0346     		mov	r3, r0
 1992 0a62 4FF08F41 		mov	r1, #1199570944
 1993 0a66 1846     		mov	r0, r3
 1994 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 1995 0a6c 0346     		mov	r3, r0
 1996 0a6e 1A46     		mov	r2, r3
 1997 0a70 07F12003 		add	r3, r7, #32
 1998 0a74 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1999              		.loc 1 500 0
 2000 0a76 0023     		movs	r3, #0
 2001 0a78 87F8573C 		strb	r3, [r7, #3159]
 2002 0a7c 1DE0     		b	.L132
 2003              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2004              		.loc 1 501 0 discriminator 3
 2005 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2006 0a82 3222     		movs	r2, #50
 2007 0a84 02FB03F3 		mul	r3, r2, r3
 2008 0a88 1A1D     		adds	r2, r3, #4
 2009 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2010 0a8e 1A44     		add	r2, r2, r3
 2011 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 61


 2012 0a94 1A44     		add	r2, r2, r3
 2013 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2014 0a9a D31A     		subs	r3, r2, r3
 2015 0a9c 013B     		subs	r3, r3, #1
 2016 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2017 0aa2 07F12001 		add	r1, r7, #32
 2018 0aa6 0A44     		add	r2, r2, r1
 2019 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2020 0aaa 07F15802 		add	r2, r7, #88
 2021 0aae D154     		strb	r1, [r2, r3]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2022              		.loc 1 500 0 discriminator 3
 2023 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2024 0ab4 0133     		adds	r3, r3, #1
 2025 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2026              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2027              		.loc 1 500 0 is_stmt 0 discriminator 1
 2028 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2029 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2030 0ac2 9A42     		cmp	r2, r3
 2031 0ac4 DBD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2032              		.loc 1 503 0 is_stmt 1
 2033 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2034 0aca 8049     		ldr	r1, .L257
 2035 0acc 1346     		mov	r3, r2
 2036 0ace DB00     		lsls	r3, r3, #3
 2037 0ad0 9B1A     		subs	r3, r3, r2
 2038 0ad2 1B01     		lsls	r3, r3, #4
 2039 0ad4 0B44     		add	r3, r3, r1
 2040 0ad6 C433     		adds	r3, r3, #196
 2041 0ad8 1B68     		ldr	r3, [r3]
 2042 0ada 1846     		mov	r0, r3
 2043 0adc FFF7FEFF 		bl	__aeabi_i2f
 2044 0ae0 0346     		mov	r3, r0
 2045 0ae2 4FF08F41 		mov	r1, #1199570944
 2046 0ae6 1846     		mov	r0, r3
 2047 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2048 0aec 0346     		mov	r3, r0
 2049 0aee 1A46     		mov	r2, r3
 2050 0af0 07F12003 		add	r3, r7, #32
 2051 0af4 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2052              		.loc 1 504 0
 2053 0af6 0023     		movs	r3, #0
 2054 0af8 87F8573C 		strb	r3, [r7, #3159]
 2055 0afc 1EE0     		b	.L134
 2056              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2057              		.loc 1 505 0 discriminator 3
 2058 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2059 0b02 3222     		movs	r2, #50
 2060 0b04 02FB03F3 		mul	r3, r2, r3
 2061 0b08 1A1D     		adds	r2, r3, #4
 2062 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 62


 2063 0b0e 5B00     		lsls	r3, r3, #1
 2064 0b10 1A44     		add	r2, r2, r3
 2065 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2066 0b16 1A44     		add	r2, r2, r3
 2067 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2068 0b1c D31A     		subs	r3, r2, r3
 2069 0b1e 013B     		subs	r3, r3, #1
 2070 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2071 0b24 07F12001 		add	r1, r7, #32
 2072 0b28 0A44     		add	r2, r2, r1
 2073 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2074 0b2c 07F15802 		add	r2, r7, #88
 2075 0b30 D154     		strb	r1, [r2, r3]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2076              		.loc 1 504 0 discriminator 3
 2077 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2078 0b36 0133     		adds	r3, r3, #1
 2079 0b38 87F8573C 		strb	r3, [r7, #3159]
 2080              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2081              		.loc 1 504 0 is_stmt 0 discriminator 1
 2082 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2083 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2084 0b44 9A42     		cmp	r2, r3
 2085 0b46 DAD3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2086              		.loc 1 522 0 is_stmt 1
 2087 0b48 00F01DBE 		b	.L103
 2088              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2089              		.loc 1 509 0
 2090 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2091 0b50 5E49     		ldr	r1, .L257
 2092 0b52 1346     		mov	r3, r2
 2093 0b54 DB00     		lsls	r3, r3, #3
 2094 0b56 9B1A     		subs	r3, r3, r2
 2095 0b58 1B01     		lsls	r3, r3, #4
 2096 0b5a 0B44     		add	r3, r3, r1
 2097 0b5c D433     		adds	r3, r3, #212
 2098 0b5e 1B68     		ldr	r3, [r3]
 2099 0b60 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 63


 2100 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2101 0b66 0346     		mov	r3, r0
 2102 0b68 4FF08F41 		mov	r1, #1199570944
 2103 0b6c 1846     		mov	r0, r3
 2104 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2105 0b72 0346     		mov	r3, r0
 2106 0b74 1A46     		mov	r2, r3
 2107 0b76 07F12003 		add	r3, r7, #32
 2108 0b7a 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2109              		.loc 1 510 0
 2110 0b7c 0023     		movs	r3, #0
 2111 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2112 0b82 1AE0     		b	.L137
 2113              	.L138:
 511:..\src/command_processing.c ****                             }
 2114              		.loc 1 511 0 discriminator 3
 2115 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2116 0b88 3222     		movs	r2, #50
 2117 0b8a 02FB03F3 		mul	r3, r2, r3
 2118 0b8e 1A1D     		adds	r2, r3, #4
 2119 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2120 0b94 1A44     		add	r2, r2, r3
 2121 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2122 0b9a D31A     		subs	r3, r2, r3
 2123 0b9c 013B     		subs	r3, r3, #1
 2124 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2125 0ba2 07F12001 		add	r1, r7, #32
 2126 0ba6 0A44     		add	r2, r2, r1
 2127 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2128 0baa 07F15802 		add	r2, r7, #88
 2129 0bae D154     		strb	r1, [r2, r3]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2130              		.loc 1 510 0 discriminator 3
 2131 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2132 0bb4 0133     		adds	r3, r3, #1
 2133 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2134              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2135              		.loc 1 510 0 is_stmt 0 discriminator 1
 2136 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2137 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2138 0bc2 9A42     		cmp	r2, r3
 2139 0bc4 DED3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2140              		.loc 1 513 0 is_stmt 1
 2141 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2142 0bca 4049     		ldr	r1, .L257
 2143 0bcc 1346     		mov	r3, r2
 2144 0bce DB00     		lsls	r3, r3, #3
 2145 0bd0 9B1A     		subs	r3, r3, r2
 2146 0bd2 1B01     		lsls	r3, r3, #4
 2147 0bd4 0B44     		add	r3, r3, r1
 2148 0bd6 D833     		adds	r3, r3, #216
 2149 0bd8 1B68     		ldr	r3, [r3]
 2150 0bda 1846     		mov	r0, r3
 2151 0bdc FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 64


 2152 0be0 0346     		mov	r3, r0
 2153 0be2 4FF08F41 		mov	r1, #1199570944
 2154 0be6 1846     		mov	r0, r3
 2155 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2156 0bec 0346     		mov	r3, r0
 2157 0bee 1A46     		mov	r2, r3
 2158 0bf0 07F12003 		add	r3, r7, #32
 2159 0bf4 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2160              		.loc 1 514 0
 2161 0bf6 0023     		movs	r3, #0
 2162 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2163 0bfc 1DE0     		b	.L139
 2164              	.L140:
 515:..\src/command_processing.c ****                             }
 2165              		.loc 1 515 0 discriminator 3
 2166 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2167 0c02 3222     		movs	r2, #50
 2168 0c04 02FB03F3 		mul	r3, r2, r3
 2169 0c08 1A1D     		adds	r2, r3, #4
 2170 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2171 0c0e 1A44     		add	r2, r2, r3
 2172 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2173 0c14 1A44     		add	r2, r2, r3
 2174 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2175 0c1a D31A     		subs	r3, r2, r3
 2176 0c1c 013B     		subs	r3, r3, #1
 2177 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2178 0c22 07F12001 		add	r1, r7, #32
 2179 0c26 0A44     		add	r2, r2, r1
 2180 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2181 0c2a 07F15802 		add	r2, r7, #88
 2182 0c2e D154     		strb	r1, [r2, r3]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2183              		.loc 1 514 0 discriminator 3
 2184 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2185 0c34 0133     		adds	r3, r3, #1
 2186 0c36 87F8573C 		strb	r3, [r7, #3159]
 2187              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2188              		.loc 1 514 0 is_stmt 0 discriminator 1
 2189 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2190 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2191 0c42 9A42     		cmp	r2, r3
 2192 0c44 DBD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2193              		.loc 1 517 0 is_stmt 1
 2194 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2195 0c4a 2049     		ldr	r1, .L257
 2196 0c4c 1346     		mov	r3, r2
 2197 0c4e DB00     		lsls	r3, r3, #3
 2198 0c50 9B1A     		subs	r3, r3, r2
 2199 0c52 1B01     		lsls	r3, r3, #4
 2200 0c54 0B44     		add	r3, r3, r1
 2201 0c56 DC33     		adds	r3, r3, #220
 2202 0c58 1B68     		ldr	r3, [r3]
 2203 0c5a 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 65


 2204 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2205 0c60 0346     		mov	r3, r0
 2206 0c62 4FF08F41 		mov	r1, #1199570944
 2207 0c66 1846     		mov	r0, r3
 2208 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2209 0c6c 0346     		mov	r3, r0
 2210 0c6e 1A46     		mov	r2, r3
 2211 0c70 07F12003 		add	r3, r7, #32
 2212 0c74 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2213              		.loc 1 518 0
 2214 0c76 0023     		movs	r3, #0
 2215 0c78 87F8573C 		strb	r3, [r7, #3159]
 2216 0c7c 1EE0     		b	.L141
 2217              	.L142:
 519:..\src/command_processing.c ****                             }
 2218              		.loc 1 519 0 discriminator 3
 2219 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2220 0c82 3222     		movs	r2, #50
 2221 0c84 02FB03F3 		mul	r3, r2, r3
 2222 0c88 1A1D     		adds	r2, r3, #4
 2223 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2224 0c8e 5B00     		lsls	r3, r3, #1
 2225 0c90 1A44     		add	r2, r2, r3
 2226 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2227 0c96 1A44     		add	r2, r2, r3
 2228 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2229 0c9c D31A     		subs	r3, r2, r3
 2230 0c9e 013B     		subs	r3, r3, #1
 2231 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2232 0ca4 07F12001 		add	r1, r7, #32
 2233 0ca8 0A44     		add	r2, r2, r1
 2234 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2235 0cac 07F15802 		add	r2, r7, #88
 2236 0cb0 D154     		strb	r1, [r2, r3]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2237              		.loc 1 518 0 discriminator 3
 2238 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2239 0cb6 0133     		adds	r3, r3, #1
 2240 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2241              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2242              		.loc 1 518 0 is_stmt 0 discriminator 1
 2243 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2244 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2245 0cc4 9A42     		cmp	r2, r3
 2246 0cc6 DAD3     		bcc	.L142
 2247              		.loc 1 522 0 is_stmt 1
 2248 0cc8 00F05DBD 		b	.L103
 2249              	.L258:
 2250              		.align	2
 2251              	.L257:
 2252 0ccc 00000000 		.word	c_mem
 2253              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 66


 2254              		.loc 1 525 0
 2255 0cd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2256 0cd4 D149     		ldr	r1, .L259
 2257 0cd6 1346     		mov	r3, r2
 2258 0cd8 DB00     		lsls	r3, r3, #3
 2259 0cda 9B1A     		subs	r3, r3, r2
 2260 0cdc 1B01     		lsls	r3, r3, #4
 2261 0cde 0B44     		add	r3, r3, r1
 2262 0ce0 03F58873 		add	r3, r3, #272
 2263 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2264 0ce6 1846     		mov	r0, r3
 2265 0ce8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2266 0cec CC49     		ldr	r1, .L259+4
 2267 0cee 0346     		mov	r3, r0
 2268 0cf0 5B00     		lsls	r3, r3, #1
 2269 0cf2 0344     		add	r3, r3, r0
 2270 0cf4 9B00     		lsls	r3, r3, #2
 2271 0cf6 1344     		add	r3, r3, r2
 2272 0cf8 6633     		adds	r3, r3, #102
 2273 0cfa 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2274 0cfe 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2275 0d02 C648     		ldr	r0, .L259
 2276 0d04 1346     		mov	r3, r2
 2277 0d06 DB00     		lsls	r3, r3, #3
 2278 0d08 9B1A     		subs	r3, r3, r2
 2279 0d0a 1B01     		lsls	r3, r3, #4
 2280 0d0c 0344     		add	r3, r3, r0
 2281 0d0e 03F58873 		add	r3, r3, #272
 2282 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2283 0d14 1C46     		mov	r4, r3
 2284 0d16 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2285 0d1a C148     		ldr	r0, .L259+4
 2286 0d1c 2346     		mov	r3, r4
 2287 0d1e 5B00     		lsls	r3, r3, #1
 2288 0d20 2344     		add	r3, r3, r4
 2289 0d22 1B01     		lsls	r3, r3, #4
 2290 0d24 0344     		add	r3, r3, r0
 2291 0d26 1344     		add	r3, r3, r2
 2292 0d28 03F29513 		addw	r3, r3, #405
 2293 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2294 0d2e 41FA03F3 		asr	r3, r1, r3
 2295 0d32 1AB2     		sxth	r2, r3
 2296 0d34 07F11E03 		add	r3, r7, #30
 2297 0d38 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2298              		.loc 1 526 0
 2299 0d3a 0023     		movs	r3, #0
 2300 0d3c 87F8563C 		strb	r3, [r7, #3158]
 2301 0d40 21E0     		b	.L143
 2302              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2303              		.loc 1 527 0 discriminator 3
 2304 0d42 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2305 0d46 3222     		movs	r2, #50
 2306 0d48 02FB03F3 		mul	r3, r2, r3
 2307 0d4c 1A1D     		adds	r2, r3, #4
 2308 0d4e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 67


 2309 0d52 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2310 0d56 01FB03F3 		mul	r3, r1, r3
 2311 0d5a 1A44     		add	r2, r2, r3
 2312 0d5c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2313 0d60 1A44     		add	r2, r2, r3
 2314 0d62 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2315 0d66 D31A     		subs	r3, r2, r3
 2316 0d68 013B     		subs	r3, r3, #1
 2317 0d6a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2318 0d6e 07F11E01 		add	r1, r7, #30
 2319 0d72 0A44     		add	r2, r2, r1
 2320 0d74 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2321 0d76 07F15802 		add	r2, r7, #88
 2322 0d7a D154     		strb	r1, [r2, r3]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2323              		.loc 1 526 0 discriminator 3
 2324 0d7c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2325 0d80 0133     		adds	r3, r3, #1
 2326 0d82 87F8563C 		strb	r3, [r7, #3158]
 2327              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2328              		.loc 1 526 0 is_stmt 0 discriminator 1
 2329 0d86 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2330 0d8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2331 0d8e 9A42     		cmp	r2, r3
 2332 0d90 D7D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2333              		.loc 1 529 0 is_stmt 1
 2334 0d92 00F0F8BC 		b	.L103
 2335              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2336              		.loc 1 532 0
 2337 0d96 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2338 0d9a A149     		ldr	r1, .L259+4
 2339 0d9c 1346     		mov	r3, r2
 2340 0d9e DB00     		lsls	r3, r3, #3
 2341 0da0 9B1A     		subs	r3, r3, r2
 2342 0da2 1B01     		lsls	r3, r3, #4
 2343 0da4 0B44     		add	r3, r3, r1
 2344 0da6 E433     		adds	r3, r3, #228
 2345 0da8 1968     		ldr	r1, [r3]
 2346 0daa 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2347 0dae 9B48     		ldr	r0, .L259
 2348 0db0 1346     		mov	r3, r2
 2349 0db2 DB00     		lsls	r3, r3, #3
 2350 0db4 9B1A     		subs	r3, r3, r2
 2351 0db6 1B01     		lsls	r3, r3, #4
 2352 0db8 0344     		add	r3, r3, r0
 2353 0dba 03F58873 		add	r3, r3, #272
 2354 0dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2355 0dc0 1846     		mov	r0, r3
 2356 0dc2 974A     		ldr	r2, .L259+4
 2357 0dc4 0346     		mov	r3, r0
 2358 0dc6 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 68


 2359 0dc8 0344     		add	r3, r3, r0
 2360 0dca 1B01     		lsls	r3, r3, #4
 2361 0dcc 1344     		add	r3, r3, r2
 2362 0dce 03F29513 		addw	r3, r3, #405
 2363 0dd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2364 0dd4 41FA03F2 		asr	r2, r1, r3
 2365 0dd8 07F11803 		add	r3, r7, #24
 2366 0ddc 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2367              		.loc 1 533 0
 2368 0dde 0023     		movs	r3, #0
 2369 0de0 87F8563C 		strb	r3, [r7, #3158]
 2370 0de4 1AE0     		b	.L145
 2371              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2372              		.loc 1 534 0 discriminator 3
 2373 0de6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2374 0dea 3222     		movs	r2, #50
 2375 0dec 02FB03F3 		mul	r3, r2, r3
 2376 0df0 1A1D     		adds	r2, r3, #4
 2377 0df2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2378 0df6 1A44     		add	r2, r2, r3
 2379 0df8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2380 0dfc D31A     		subs	r3, r2, r3
 2381 0dfe 013B     		subs	r3, r3, #1
 2382 0e00 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2383 0e04 07F11801 		add	r1, r7, #24
 2384 0e08 0A44     		add	r2, r2, r1
 2385 0e0a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2386 0e0c 07F15802 		add	r2, r7, #88
 2387 0e10 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2388              		.loc 1 533 0 discriminator 3
 2389 0e12 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2390 0e16 0133     		adds	r3, r3, #1
 2391 0e18 87F8563C 		strb	r3, [r7, #3158]
 2392              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2393              		.loc 1 533 0 is_stmt 0 discriminator 1
 2394 0e1c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2395 0e20 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2396 0e24 9A42     		cmp	r2, r3
 2397 0e26 DED3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2398              		.loc 1 536 0 is_stmt 1
 2399 0e28 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2400 0e2c 7C49     		ldr	r1, .L259+4
 2401 0e2e 1346     		mov	r3, r2
 2402 0e30 DB00     		lsls	r3, r3, #3
 2403 0e32 9B1A     		subs	r3, r3, r2
 2404 0e34 1B01     		lsls	r3, r3, #4
 2405 0e36 0B44     		add	r3, r3, r1
 2406 0e38 E833     		adds	r3, r3, #232
 2407 0e3a 1968     		ldr	r1, [r3]
 2408 0e3c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2409 0e40 7648     		ldr	r0, .L259
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 69


 2410 0e42 1346     		mov	r3, r2
 2411 0e44 DB00     		lsls	r3, r3, #3
 2412 0e46 9B1A     		subs	r3, r3, r2
 2413 0e48 1B01     		lsls	r3, r3, #4
 2414 0e4a 0344     		add	r3, r3, r0
 2415 0e4c 03F58873 		add	r3, r3, #272
 2416 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2417 0e52 1846     		mov	r0, r3
 2418 0e54 724A     		ldr	r2, .L259+4
 2419 0e56 0346     		mov	r3, r0
 2420 0e58 5B00     		lsls	r3, r3, #1
 2421 0e5a 0344     		add	r3, r3, r0
 2422 0e5c 1B01     		lsls	r3, r3, #4
 2423 0e5e 1344     		add	r3, r3, r2
 2424 0e60 03F29513 		addw	r3, r3, #405
 2425 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2426 0e66 41FA03F2 		asr	r2, r1, r3
 2427 0e6a 07F11803 		add	r3, r7, #24
 2428 0e6e 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2429              		.loc 1 537 0
 2430 0e70 0023     		movs	r3, #0
 2431 0e72 87F8563C 		strb	r3, [r7, #3158]
 2432 0e76 1DE0     		b	.L147
 2433              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2434              		.loc 1 538 0 discriminator 3
 2435 0e78 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2436 0e7c 3222     		movs	r2, #50
 2437 0e7e 02FB03F3 		mul	r3, r2, r3
 2438 0e82 1A1D     		adds	r2, r3, #4
 2439 0e84 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2440 0e88 1A44     		add	r2, r2, r3
 2441 0e8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2442 0e8e 1A44     		add	r2, r2, r3
 2443 0e90 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2444 0e94 D31A     		subs	r3, r2, r3
 2445 0e96 013B     		subs	r3, r3, #1
 2446 0e98 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2447 0e9c 07F11801 		add	r1, r7, #24
 2448 0ea0 0A44     		add	r2, r2, r1
 2449 0ea2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2450 0ea4 07F15802 		add	r2, r7, #88
 2451 0ea8 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2452              		.loc 1 537 0 discriminator 3
 2453 0eaa 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2454 0eae 0133     		adds	r3, r3, #1
 2455 0eb0 87F8563C 		strb	r3, [r7, #3158]
 2456              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2457              		.loc 1 537 0 is_stmt 0 discriminator 1
 2458 0eb4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2459 0eb8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2460 0ebc 9A42     		cmp	r2, r3
 2461 0ebe DBD3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 70


 540:..\src/command_processing.c ****                         break;            
 2462              		.loc 1 540 0 is_stmt 1
 2463 0ec0 00F061BC 		b	.L103
 2464              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2465              		.loc 1 543 0
 2466 0ec4 564B     		ldr	r3, .L259+4
 2467 0ec6 D3F8A012 		ldr	r1, [r3, #672]
 2468 0eca 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2469 0ece 5348     		ldr	r0, .L259
 2470 0ed0 1346     		mov	r3, r2
 2471 0ed2 DB00     		lsls	r3, r3, #3
 2472 0ed4 9B1A     		subs	r3, r3, r2
 2473 0ed6 1B01     		lsls	r3, r3, #4
 2474 0ed8 0344     		add	r3, r3, r0
 2475 0eda 03F58873 		add	r3, r3, #272
 2476 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2477 0ee0 1846     		mov	r0, r3
 2478 0ee2 4F4A     		ldr	r2, .L259+4
 2479 0ee4 0346     		mov	r3, r0
 2480 0ee6 5B00     		lsls	r3, r3, #1
 2481 0ee8 0344     		add	r3, r3, r0
 2482 0eea 1B01     		lsls	r3, r3, #4
 2483 0eec 1344     		add	r3, r3, r2
 2484 0eee 03F29513 		addw	r3, r3, #405
 2485 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2486 0ef4 41FA03F2 		asr	r2, r1, r3
 2487 0ef8 07F11803 		add	r3, r7, #24
 2488 0efc 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2489              		.loc 1 544 0
 2490 0efe 0023     		movs	r3, #0
 2491 0f00 87F8563C 		strb	r3, [r7, #3158]
 2492 0f04 1AE0     		b	.L149
 2493              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2494              		.loc 1 545 0 discriminator 3
 2495 0f06 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2496 0f0a 3222     		movs	r2, #50
 2497 0f0c 02FB03F3 		mul	r3, r2, r3
 2498 0f10 1A1D     		adds	r2, r3, #4
 2499 0f12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2500 0f16 1A44     		add	r2, r2, r3
 2501 0f18 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2502 0f1c D31A     		subs	r3, r2, r3
 2503 0f1e 013B     		subs	r3, r3, #1
 2504 0f20 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2505 0f24 07F11801 		add	r1, r7, #24
 2506 0f28 0A44     		add	r2, r2, r1
 2507 0f2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2508 0f2c 07F15802 		add	r2, r7, #88
 2509 0f30 D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2510              		.loc 1 544 0 discriminator 3
 2511 0f32 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 71


 2512 0f36 0133     		adds	r3, r3, #1
 2513 0f38 87F8563C 		strb	r3, [r7, #3158]
 2514              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2515              		.loc 1 544 0 is_stmt 0 discriminator 1
 2516 0f3c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2517 0f40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2518 0f44 9A42     		cmp	r2, r3
 2519 0f46 DED3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 2520              		.loc 1 547 0 is_stmt 1
 2521 0f48 00F01DBC 		b	.L103
 2522              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2523              		.loc 1 550 0
 2524 0f4c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2525 0f50 3349     		ldr	r1, .L259+4
 2526 0f52 1346     		mov	r3, r2
 2527 0f54 DB00     		lsls	r3, r3, #3
 2528 0f56 9B1A     		subs	r3, r3, r2
 2529 0f58 1B01     		lsls	r3, r3, #4
 2530 0f5a 0B44     		add	r3, r3, r1
 2531 0f5c 03F20F13 		addw	r3, r3, #271
 2532 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2533 0f62 032B     		cmp	r3, #3
 2534 0f64 00F0C480 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2535              		.loc 1 551 0
 2536 0f68 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2537 0f6c 2C49     		ldr	r1, .L259+4
 2538 0f6e 1346     		mov	r3, r2
 2539 0f70 DB00     		lsls	r3, r3, #3
 2540 0f72 9B1A     		subs	r3, r3, r2
 2541 0f74 1B01     		lsls	r3, r3, #4
 2542 0f76 0B44     		add	r3, r3, r1
 2543 0f78 B033     		adds	r3, r3, #176
 2544 0f7a 1B68     		ldr	r3, [r3]
 2545 0f7c 1846     		mov	r0, r3
 2546 0f7e FFF7FEFF 		bl	__aeabi_i2f
 2547 0f82 0346     		mov	r3, r0
 2548 0f84 4FF08F41 		mov	r1, #1199570944
 2549 0f88 1846     		mov	r0, r3
 2550 0f8a FFF7FEFF 		bl	__aeabi_fdiv
 2551 0f8e 0346     		mov	r3, r0
 2552 0f90 1A46     		mov	r2, r3
 2553 0f92 07F12003 		add	r3, r7, #32
 2554 0f96 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2555              		.loc 1 552 0
 2556 0f98 0023     		movs	r3, #0
 2557 0f9a 87F8573C 		strb	r3, [r7, #3159]
 2558 0f9e 1AE0     		b	.L152
 2559              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 72


 2560              		.loc 1 553 0 discriminator 3
 2561 0fa0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2562 0fa4 3222     		movs	r2, #50
 2563 0fa6 02FB03F3 		mul	r3, r2, r3
 2564 0faa 1A1D     		adds	r2, r3, #4
 2565 0fac 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2566 0fb0 1A44     		add	r2, r2, r3
 2567 0fb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2568 0fb6 D31A     		subs	r3, r2, r3
 2569 0fb8 013B     		subs	r3, r3, #1
 2570 0fba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2571 0fbe 07F12001 		add	r1, r7, #32
 2572 0fc2 0A44     		add	r2, r2, r1
 2573 0fc4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2574 0fc6 07F15802 		add	r2, r7, #88
 2575 0fca D154     		strb	r1, [r2, r3]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2576              		.loc 1 552 0 discriminator 3
 2577 0fcc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2578 0fd0 0133     		adds	r3, r3, #1
 2579 0fd2 87F8573C 		strb	r3, [r7, #3159]
 2580              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2581              		.loc 1 552 0 is_stmt 0 discriminator 1
 2582 0fd6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2583 0fda 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2584 0fde 9A42     		cmp	r2, r3
 2585 0fe0 DED3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2586              		.loc 1 555 0 is_stmt 1
 2587 0fe2 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2588 0fe6 0E49     		ldr	r1, .L259+4
 2589 0fe8 1346     		mov	r3, r2
 2590 0fea DB00     		lsls	r3, r3, #3
 2591 0fec 9B1A     		subs	r3, r3, r2
 2592 0fee 1B01     		lsls	r3, r3, #4
 2593 0ff0 0B44     		add	r3, r3, r1
 2594 0ff2 B433     		adds	r3, r3, #180
 2595 0ff4 1B68     		ldr	r3, [r3]
 2596 0ff6 1846     		mov	r0, r3
 2597 0ff8 FFF7FEFF 		bl	__aeabi_i2f
 2598 0ffc 0346     		mov	r3, r0
 2599 0ffe 4FF08F41 		mov	r1, #1199570944
 2600 1002 1846     		mov	r0, r3
 2601 1004 FFF7FEFF 		bl	__aeabi_fdiv
 2602 1008 0346     		mov	r3, r0
 2603 100a 1A46     		mov	r2, r3
 2604 100c 07F12003 		add	r3, r7, #32
 2605 1010 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2606              		.loc 1 556 0
 2607 1012 0023     		movs	r3, #0
 2608 1014 87F8573C 		strb	r3, [r7, #3159]
 2609 1018 22E0     		b	.L154
 2610              	.L260:
 2611 101a 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 73


 2612              	.L259:
 2613 101c 00000000 		.word	g_mem
 2614 1020 00000000 		.word	c_mem
 2615              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2616              		.loc 1 557 0 discriminator 3
 2617 1024 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2618 1028 3222     		movs	r2, #50
 2619 102a 02FB03F3 		mul	r3, r2, r3
 2620 102e 1A1D     		adds	r2, r3, #4
 2621 1030 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2622 1034 1A44     		add	r2, r2, r3
 2623 1036 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2624 103a 1A44     		add	r2, r2, r3
 2625 103c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2626 1040 D31A     		subs	r3, r2, r3
 2627 1042 013B     		subs	r3, r3, #1
 2628 1044 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2629 1048 07F12001 		add	r1, r7, #32
 2630 104c 0A44     		add	r2, r2, r1
 2631 104e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2632 1050 07F15802 		add	r2, r7, #88
 2633 1054 D154     		strb	r1, [r2, r3]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2634              		.loc 1 556 0 discriminator 3
 2635 1056 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2636 105a 0133     		adds	r3, r3, #1
 2637 105c 87F8573C 		strb	r3, [r7, #3159]
 2638              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2639              		.loc 1 556 0 is_stmt 0 discriminator 1
 2640 1060 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2641 1064 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2642 1068 9A42     		cmp	r2, r3
 2643 106a DBD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2644              		.loc 1 559 0 is_stmt 1
 2645 106c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2646 1070 D249     		ldr	r1, .L261
 2647 1072 1346     		mov	r3, r2
 2648 1074 DB00     		lsls	r3, r3, #3
 2649 1076 9B1A     		subs	r3, r3, r2
 2650 1078 1B01     		lsls	r3, r3, #4
 2651 107a 0B44     		add	r3, r3, r1
 2652 107c B833     		adds	r3, r3, #184
 2653 107e 1B68     		ldr	r3, [r3]
 2654 1080 1846     		mov	r0, r3
 2655 1082 FFF7FEFF 		bl	__aeabi_i2f
 2656 1086 0346     		mov	r3, r0
 2657 1088 4FF08F41 		mov	r1, #1199570944
 2658 108c 1846     		mov	r0, r3
 2659 108e FFF7FEFF 		bl	__aeabi_fdiv
 2660 1092 0346     		mov	r3, r0
 2661 1094 1A46     		mov	r2, r3
 2662 1096 07F12003 		add	r3, r7, #32
 2663 109a 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 74


 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2664              		.loc 1 560 0
 2665 109c 0023     		movs	r3, #0
 2666 109e 87F8573C 		strb	r3, [r7, #3159]
 2667 10a2 1EE0     		b	.L156
 2668              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2669              		.loc 1 561 0 discriminator 3
 2670 10a4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2671 10a8 3222     		movs	r2, #50
 2672 10aa 02FB03F3 		mul	r3, r2, r3
 2673 10ae 1A1D     		adds	r2, r3, #4
 2674 10b0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2675 10b4 5B00     		lsls	r3, r3, #1
 2676 10b6 1A44     		add	r2, r2, r3
 2677 10b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2678 10bc 1A44     		add	r2, r2, r3
 2679 10be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2680 10c2 D31A     		subs	r3, r2, r3
 2681 10c4 013B     		subs	r3, r3, #1
 2682 10c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2683 10ca 07F12001 		add	r1, r7, #32
 2684 10ce 0A44     		add	r2, r2, r1
 2685 10d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2686 10d2 07F15802 		add	r2, r7, #88
 2687 10d6 D154     		strb	r1, [r2, r3]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2688              		.loc 1 560 0 discriminator 3
 2689 10d8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2690 10dc 0133     		adds	r3, r3, #1
 2691 10de 87F8573C 		strb	r3, [r7, #3159]
 2692              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2693              		.loc 1 560 0 is_stmt 0 discriminator 1
 2694 10e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2695 10e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2696 10ea 9A42     		cmp	r2, r3
 2697 10ec DAD3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 2698              		.loc 1 578 0 is_stmt 1
 2699 10ee 4AE3     		b	.L103
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 75


 2700              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2701              		.loc 1 565 0
 2702 10f0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2703 10f4 B149     		ldr	r1, .L261
 2704 10f6 1346     		mov	r3, r2
 2705 10f8 DB00     		lsls	r3, r3, #3
 2706 10fa 9B1A     		subs	r3, r3, r2
 2707 10fc 1B01     		lsls	r3, r3, #4
 2708 10fe 0B44     		add	r3, r3, r1
 2709 1100 C833     		adds	r3, r3, #200
 2710 1102 1B68     		ldr	r3, [r3]
 2711 1104 1846     		mov	r0, r3
 2712 1106 FFF7FEFF 		bl	__aeabi_i2f
 2713 110a 0346     		mov	r3, r0
 2714 110c 4FF08F41 		mov	r1, #1199570944
 2715 1110 1846     		mov	r0, r3
 2716 1112 FFF7FEFF 		bl	__aeabi_fdiv
 2717 1116 0346     		mov	r3, r0
 2718 1118 1A46     		mov	r2, r3
 2719 111a 07F12003 		add	r3, r7, #32
 2720 111e 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2721              		.loc 1 566 0
 2722 1120 0023     		movs	r3, #0
 2723 1122 87F8573C 		strb	r3, [r7, #3159]
 2724 1126 1AE0     		b	.L159
 2725              	.L160:
 567:..\src/command_processing.c ****                             }
 2726              		.loc 1 567 0 discriminator 3
 2727 1128 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2728 112c 3222     		movs	r2, #50
 2729 112e 02FB03F3 		mul	r3, r2, r3
 2730 1132 1A1D     		adds	r2, r3, #4
 2731 1134 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2732 1138 1A44     		add	r2, r2, r3
 2733 113a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2734 113e D31A     		subs	r3, r2, r3
 2735 1140 013B     		subs	r3, r3, #1
 2736 1142 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2737 1146 07F12001 		add	r1, r7, #32
 2738 114a 0A44     		add	r2, r2, r1
 2739 114c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2740 114e 07F15802 		add	r2, r7, #88
 2741 1152 D154     		strb	r1, [r2, r3]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2742              		.loc 1 566 0 discriminator 3
 2743 1154 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2744 1158 0133     		adds	r3, r3, #1
 2745 115a 87F8573C 		strb	r3, [r7, #3159]
 2746              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2747              		.loc 1 566 0 is_stmt 0 discriminator 1
 2748 115e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2749 1162 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2750 1166 9A42     		cmp	r2, r3
 2751 1168 DED3     		bcc	.L160
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 76


 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2752              		.loc 1 569 0 is_stmt 1
 2753 116a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2754 116e 9349     		ldr	r1, .L261
 2755 1170 1346     		mov	r3, r2
 2756 1172 DB00     		lsls	r3, r3, #3
 2757 1174 9B1A     		subs	r3, r3, r2
 2758 1176 1B01     		lsls	r3, r3, #4
 2759 1178 0B44     		add	r3, r3, r1
 2760 117a CC33     		adds	r3, r3, #204
 2761 117c 1B68     		ldr	r3, [r3]
 2762 117e 1846     		mov	r0, r3
 2763 1180 FFF7FEFF 		bl	__aeabi_i2f
 2764 1184 0346     		mov	r3, r0
 2765 1186 4FF08F41 		mov	r1, #1199570944
 2766 118a 1846     		mov	r0, r3
 2767 118c FFF7FEFF 		bl	__aeabi_fdiv
 2768 1190 0346     		mov	r3, r0
 2769 1192 1A46     		mov	r2, r3
 2770 1194 07F12003 		add	r3, r7, #32
 2771 1198 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2772              		.loc 1 570 0
 2773 119a 0023     		movs	r3, #0
 2774 119c 87F8573C 		strb	r3, [r7, #3159]
 2775 11a0 1DE0     		b	.L161
 2776              	.L162:
 571:..\src/command_processing.c ****                             }
 2777              		.loc 1 571 0 discriminator 3
 2778 11a2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2779 11a6 3222     		movs	r2, #50
 2780 11a8 02FB03F3 		mul	r3, r2, r3
 2781 11ac 1A1D     		adds	r2, r3, #4
 2782 11ae 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2783 11b2 1A44     		add	r2, r2, r3
 2784 11b4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2785 11b8 1A44     		add	r2, r2, r3
 2786 11ba 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2787 11be D31A     		subs	r3, r2, r3
 2788 11c0 013B     		subs	r3, r3, #1
 2789 11c2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2790 11c6 07F12001 		add	r1, r7, #32
 2791 11ca 0A44     		add	r2, r2, r1
 2792 11cc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2793 11ce 07F15802 		add	r2, r7, #88
 2794 11d2 D154     		strb	r1, [r2, r3]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2795              		.loc 1 570 0 discriminator 3
 2796 11d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2797 11d8 0133     		adds	r3, r3, #1
 2798 11da 87F8573C 		strb	r3, [r7, #3159]
 2799              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2800              		.loc 1 570 0 is_stmt 0 discriminator 1
 2801 11de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2802 11e2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2803 11e6 9A42     		cmp	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 77


 2804 11e8 DBD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2805              		.loc 1 573 0 is_stmt 1
 2806 11ea 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2807 11ee 7349     		ldr	r1, .L261
 2808 11f0 1346     		mov	r3, r2
 2809 11f2 DB00     		lsls	r3, r3, #3
 2810 11f4 9B1A     		subs	r3, r3, r2
 2811 11f6 1B01     		lsls	r3, r3, #4
 2812 11f8 0B44     		add	r3, r3, r1
 2813 11fa D033     		adds	r3, r3, #208
 2814 11fc 1B68     		ldr	r3, [r3]
 2815 11fe 1846     		mov	r0, r3
 2816 1200 FFF7FEFF 		bl	__aeabi_i2f
 2817 1204 0346     		mov	r3, r0
 2818 1206 4FF08F41 		mov	r1, #1199570944
 2819 120a 1846     		mov	r0, r3
 2820 120c FFF7FEFF 		bl	__aeabi_fdiv
 2821 1210 0346     		mov	r3, r0
 2822 1212 1A46     		mov	r2, r3
 2823 1214 07F12003 		add	r3, r7, #32
 2824 1218 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2825              		.loc 1 574 0
 2826 121a 0023     		movs	r3, #0
 2827 121c 87F8573C 		strb	r3, [r7, #3159]
 2828 1220 1EE0     		b	.L163
 2829              	.L164:
 575:..\src/command_processing.c ****                             }
 2830              		.loc 1 575 0 discriminator 3
 2831 1222 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2832 1226 3222     		movs	r2, #50
 2833 1228 02FB03F3 		mul	r3, r2, r3
 2834 122c 1A1D     		adds	r2, r3, #4
 2835 122e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2836 1232 5B00     		lsls	r3, r3, #1
 2837 1234 1A44     		add	r2, r2, r3
 2838 1236 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2839 123a 1A44     		add	r2, r2, r3
 2840 123c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2841 1240 D31A     		subs	r3, r2, r3
 2842 1242 013B     		subs	r3, r3, #1
 2843 1244 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2844 1248 07F12001 		add	r1, r7, #32
 2845 124c 0A44     		add	r2, r2, r1
 2846 124e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2847 1250 07F15802 		add	r2, r7, #88
 2848 1254 D154     		strb	r1, [r2, r3]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2849              		.loc 1 574 0 discriminator 3
 2850 1256 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2851 125a 0133     		adds	r3, r3, #1
 2852 125c 87F8573C 		strb	r3, [r7, #3159]
 2853              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2854              		.loc 1 574 0 is_stmt 0 discriminator 1
 2855 1260 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 78


 2856 1264 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2857 1268 9A42     		cmp	r2, r3
 2858 126a DAD3     		bcc	.L164
 2859              		.loc 1 578 0 is_stmt 1
 2860 126c 8BE2     		b	.L103
 2861              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2862              		.loc 1 581 0
 2863 126e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2864 1272 5249     		ldr	r1, .L261
 2865 1274 1346     		mov	r3, r2
 2866 1276 DB00     		lsls	r3, r3, #3
 2867 1278 9B1A     		subs	r3, r3, r2
 2868 127a 1B01     		lsls	r3, r3, #4
 2869 127c 0B44     		add	r3, r3, r1
 2870 127e 03F20F13 		addw	r3, r3, #271
 2871 1282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2872 1284 032B     		cmp	r3, #3
 2873 1286 00F0C180 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 2874              		.loc 1 582 0
 2875 128a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2876 128e 4B49     		ldr	r1, .L261
 2877 1290 1346     		mov	r3, r2
 2878 1292 DB00     		lsls	r3, r3, #3
 2879 1294 9B1A     		subs	r3, r3, r2
 2880 1296 1B01     		lsls	r3, r3, #4
 2881 1298 0B44     		add	r3, r3, r1
 2882 129a BC33     		adds	r3, r3, #188
 2883 129c 1B68     		ldr	r3, [r3]
 2884 129e 1846     		mov	r0, r3
 2885 12a0 FFF7FEFF 		bl	__aeabi_i2f
 2886 12a4 0346     		mov	r3, r0
 2887 12a6 4FF08F41 		mov	r1, #1199570944
 2888 12aa 1846     		mov	r0, r3
 2889 12ac FFF7FEFF 		bl	__aeabi_fdiv
 2890 12b0 0346     		mov	r3, r0
 2891 12b2 1A46     		mov	r2, r3
 2892 12b4 07F12003 		add	r3, r7, #32
 2893 12b8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2894              		.loc 1 583 0
 2895 12ba 0023     		movs	r3, #0
 2896 12bc 87F8573C 		strb	r3, [r7, #3159]
 2897 12c0 1AE0     		b	.L166
 2898              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2899              		.loc 1 584 0 discriminator 3
 2900 12c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2901 12c6 3222     		movs	r2, #50
 2902 12c8 02FB03F3 		mul	r3, r2, r3
 2903 12cc 1A1D     		adds	r2, r3, #4
 2904 12ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2905 12d2 1A44     		add	r2, r2, r3
 2906 12d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 79


 2907 12d8 D31A     		subs	r3, r2, r3
 2908 12da 013B     		subs	r3, r3, #1
 2909 12dc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2910 12e0 07F12001 		add	r1, r7, #32
 2911 12e4 0A44     		add	r2, r2, r1
 2912 12e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2913 12e8 07F15802 		add	r2, r7, #88
 2914 12ec D154     		strb	r1, [r2, r3]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2915              		.loc 1 583 0 discriminator 3
 2916 12ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2917 12f2 0133     		adds	r3, r3, #1
 2918 12f4 87F8573C 		strb	r3, [r7, #3159]
 2919              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2920              		.loc 1 583 0 is_stmt 0 discriminator 1
 2921 12f8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2922 12fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2923 1300 9A42     		cmp	r2, r3
 2924 1302 DED3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 2925              		.loc 1 586 0 is_stmt 1
 2926 1304 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2927 1308 2C49     		ldr	r1, .L261
 2928 130a 1346     		mov	r3, r2
 2929 130c DB00     		lsls	r3, r3, #3
 2930 130e 9B1A     		subs	r3, r3, r2
 2931 1310 1B01     		lsls	r3, r3, #4
 2932 1312 0B44     		add	r3, r3, r1
 2933 1314 C033     		adds	r3, r3, #192
 2934 1316 1B68     		ldr	r3, [r3]
 2935 1318 1846     		mov	r0, r3
 2936 131a FFF7FEFF 		bl	__aeabi_i2f
 2937 131e 0346     		mov	r3, r0
 2938 1320 4FF08F41 		mov	r1, #1199570944
 2939 1324 1846     		mov	r0, r3
 2940 1326 FFF7FEFF 		bl	__aeabi_fdiv
 2941 132a 0346     		mov	r3, r0
 2942 132c 1A46     		mov	r2, r3
 2943 132e 07F12003 		add	r3, r7, #32
 2944 1332 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2945              		.loc 1 587 0
 2946 1334 0023     		movs	r3, #0
 2947 1336 87F8573C 		strb	r3, [r7, #3159]
 2948 133a 1DE0     		b	.L168
 2949              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2950              		.loc 1 588 0 discriminator 3
 2951 133c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2952 1340 3222     		movs	r2, #50
 2953 1342 02FB03F3 		mul	r3, r2, r3
 2954 1346 1A1D     		adds	r2, r3, #4
 2955 1348 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2956 134c 1A44     		add	r2, r2, r3
 2957 134e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 80


 2958 1352 1A44     		add	r2, r2, r3
 2959 1354 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2960 1358 D31A     		subs	r3, r2, r3
 2961 135a 013B     		subs	r3, r3, #1
 2962 135c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2963 1360 07F12001 		add	r1, r7, #32
 2964 1364 0A44     		add	r2, r2, r1
 2965 1366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2966 1368 07F15802 		add	r2, r7, #88
 2967 136c D154     		strb	r1, [r2, r3]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2968              		.loc 1 587 0 discriminator 3
 2969 136e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2970 1372 0133     		adds	r3, r3, #1
 2971 1374 87F8573C 		strb	r3, [r7, #3159]
 2972              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2973              		.loc 1 587 0 is_stmt 0 discriminator 1
 2974 1378 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2975 137c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2976 1380 9A42     		cmp	r2, r3
 2977 1382 DBD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 2978              		.loc 1 590 0 is_stmt 1
 2979 1384 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2980 1388 0C49     		ldr	r1, .L261
 2981 138a 1346     		mov	r3, r2
 2982 138c DB00     		lsls	r3, r3, #3
 2983 138e 9B1A     		subs	r3, r3, r2
 2984 1390 1B01     		lsls	r3, r3, #4
 2985 1392 0B44     		add	r3, r3, r1
 2986 1394 C433     		adds	r3, r3, #196
 2987 1396 1B68     		ldr	r3, [r3]
 2988 1398 1846     		mov	r0, r3
 2989 139a FFF7FEFF 		bl	__aeabi_i2f
 2990 139e 0346     		mov	r3, r0
 2991 13a0 4FF08F41 		mov	r1, #1199570944
 2992 13a4 1846     		mov	r0, r3
 2993 13a6 FFF7FEFF 		bl	__aeabi_fdiv
 2994 13aa 0346     		mov	r3, r0
 2995 13ac 1A46     		mov	r2, r3
 2996 13ae 07F12003 		add	r3, r7, #32
 2997 13b2 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2998              		.loc 1 591 0
 2999 13b4 0023     		movs	r3, #0
 3000 13b6 87F8573C 		strb	r3, [r7, #3159]
 3001 13ba 20E0     		b	.L170
 3002              	.L262:
 3003              		.align	2
 3004              	.L261:
 3005 13bc 00000000 		.word	c_mem
 3006              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3007              		.loc 1 592 0 discriminator 3
 3008 13c0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 81


 3009 13c4 3222     		movs	r2, #50
 3010 13c6 02FB03F3 		mul	r3, r2, r3
 3011 13ca 1A1D     		adds	r2, r3, #4
 3012 13cc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3013 13d0 5B00     		lsls	r3, r3, #1
 3014 13d2 1A44     		add	r2, r2, r3
 3015 13d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3016 13d8 1A44     		add	r2, r2, r3
 3017 13da 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3018 13de D31A     		subs	r3, r2, r3
 3019 13e0 013B     		subs	r3, r3, #1
 3020 13e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3021 13e6 07F12001 		add	r1, r7, #32
 3022 13ea 0A44     		add	r2, r2, r1
 3023 13ec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3024 13ee 07F15802 		add	r2, r7, #88
 3025 13f2 D154     		strb	r1, [r2, r3]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3026              		.loc 1 591 0 discriminator 3
 3027 13f4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3028 13f8 0133     		adds	r3, r3, #1
 3029 13fa 87F8573C 		strb	r3, [r7, #3159]
 3030              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3031              		.loc 1 591 0 is_stmt 0 discriminator 1
 3032 13fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3033 1402 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3034 1406 9A42     		cmp	r2, r3
 3035 1408 DAD3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3036              		.loc 1 609 0 is_stmt 1
 3037 140a BCE1     		b	.L103
 3038              	.L165:
 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3039              		.loc 1 596 0
 3040 140c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3041 1410 DA49     		ldr	r1, .L263
 3042 1412 1346     		mov	r3, r2
 3043 1414 DB00     		lsls	r3, r3, #3
 3044 1416 9B1A     		subs	r3, r3, r2
 3045 1418 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 82


 3046 141a 0B44     		add	r3, r3, r1
 3047 141c D433     		adds	r3, r3, #212
 3048 141e 1B68     		ldr	r3, [r3]
 3049 1420 1846     		mov	r0, r3
 3050 1422 FFF7FEFF 		bl	__aeabi_i2f
 3051 1426 0346     		mov	r3, r0
 3052 1428 4FF08F41 		mov	r1, #1199570944
 3053 142c 1846     		mov	r0, r3
 3054 142e FFF7FEFF 		bl	__aeabi_fdiv
 3055 1432 0346     		mov	r3, r0
 3056 1434 1A46     		mov	r2, r3
 3057 1436 07F12003 		add	r3, r7, #32
 3058 143a 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3059              		.loc 1 597 0
 3060 143c 0023     		movs	r3, #0
 3061 143e 87F8573C 		strb	r3, [r7, #3159]
 3062 1442 1AE0     		b	.L173
 3063              	.L174:
 598:..\src/command_processing.c ****                             }
 3064              		.loc 1 598 0 discriminator 3
 3065 1444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3066 1448 3222     		movs	r2, #50
 3067 144a 02FB03F3 		mul	r3, r2, r3
 3068 144e 1A1D     		adds	r2, r3, #4
 3069 1450 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3070 1454 1A44     		add	r2, r2, r3
 3071 1456 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3072 145a D31A     		subs	r3, r2, r3
 3073 145c 013B     		subs	r3, r3, #1
 3074 145e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3075 1462 07F12001 		add	r1, r7, #32
 3076 1466 0A44     		add	r2, r2, r1
 3077 1468 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3078 146a 07F15802 		add	r2, r7, #88
 3079 146e D154     		strb	r1, [r2, r3]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3080              		.loc 1 597 0 discriminator 3
 3081 1470 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3082 1474 0133     		adds	r3, r3, #1
 3083 1476 87F8573C 		strb	r3, [r7, #3159]
 3084              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3085              		.loc 1 597 0 is_stmt 0 discriminator 1
 3086 147a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3087 147e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3088 1482 9A42     		cmp	r2, r3
 3089 1484 DED3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3090              		.loc 1 600 0 is_stmt 1
 3091 1486 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3092 148a BC49     		ldr	r1, .L263
 3093 148c 1346     		mov	r3, r2
 3094 148e DB00     		lsls	r3, r3, #3
 3095 1490 9B1A     		subs	r3, r3, r2
 3096 1492 1B01     		lsls	r3, r3, #4
 3097 1494 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 83


 3098 1496 D833     		adds	r3, r3, #216
 3099 1498 1B68     		ldr	r3, [r3]
 3100 149a 1846     		mov	r0, r3
 3101 149c FFF7FEFF 		bl	__aeabi_i2f
 3102 14a0 0346     		mov	r3, r0
 3103 14a2 4FF08F41 		mov	r1, #1199570944
 3104 14a6 1846     		mov	r0, r3
 3105 14a8 FFF7FEFF 		bl	__aeabi_fdiv
 3106 14ac 0346     		mov	r3, r0
 3107 14ae 1A46     		mov	r2, r3
 3108 14b0 07F12003 		add	r3, r7, #32
 3109 14b4 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3110              		.loc 1 601 0
 3111 14b6 0023     		movs	r3, #0
 3112 14b8 87F8573C 		strb	r3, [r7, #3159]
 3113 14bc 1DE0     		b	.L175
 3114              	.L176:
 602:..\src/command_processing.c ****                             }
 3115              		.loc 1 602 0 discriminator 3
 3116 14be 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3117 14c2 3222     		movs	r2, #50
 3118 14c4 02FB03F3 		mul	r3, r2, r3
 3119 14c8 1A1D     		adds	r2, r3, #4
 3120 14ca 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3121 14ce 1A44     		add	r2, r2, r3
 3122 14d0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3123 14d4 1A44     		add	r2, r2, r3
 3124 14d6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3125 14da D31A     		subs	r3, r2, r3
 3126 14dc 013B     		subs	r3, r3, #1
 3127 14de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3128 14e2 07F12001 		add	r1, r7, #32
 3129 14e6 0A44     		add	r2, r2, r1
 3130 14e8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3131 14ea 07F15802 		add	r2, r7, #88
 3132 14ee D154     		strb	r1, [r2, r3]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3133              		.loc 1 601 0 discriminator 3
 3134 14f0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3135 14f4 0133     		adds	r3, r3, #1
 3136 14f6 87F8573C 		strb	r3, [r7, #3159]
 3137              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3138              		.loc 1 601 0 is_stmt 0 discriminator 1
 3139 14fa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3140 14fe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3141 1502 9A42     		cmp	r2, r3
 3142 1504 DBD3     		bcc	.L176
 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3143              		.loc 1 604 0 is_stmt 1
 3144 1506 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3145 150a 9C49     		ldr	r1, .L263
 3146 150c 1346     		mov	r3, r2
 3147 150e DB00     		lsls	r3, r3, #3
 3148 1510 9B1A     		subs	r3, r3, r2
 3149 1512 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 84


 3150 1514 0B44     		add	r3, r3, r1
 3151 1516 DC33     		adds	r3, r3, #220
 3152 1518 1B68     		ldr	r3, [r3]
 3153 151a 1846     		mov	r0, r3
 3154 151c FFF7FEFF 		bl	__aeabi_i2f
 3155 1520 0346     		mov	r3, r0
 3156 1522 4FF08F41 		mov	r1, #1199570944
 3157 1526 1846     		mov	r0, r3
 3158 1528 FFF7FEFF 		bl	__aeabi_fdiv
 3159 152c 0346     		mov	r3, r0
 3160 152e 1A46     		mov	r2, r3
 3161 1530 07F12003 		add	r3, r7, #32
 3162 1534 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3163              		.loc 1 605 0
 3164 1536 0023     		movs	r3, #0
 3165 1538 87F8573C 		strb	r3, [r7, #3159]
 3166 153c 1EE0     		b	.L177
 3167              	.L178:
 606:..\src/command_processing.c ****                             }
 3168              		.loc 1 606 0 discriminator 3
 3169 153e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3170 1542 3222     		movs	r2, #50
 3171 1544 02FB03F3 		mul	r3, r2, r3
 3172 1548 1A1D     		adds	r2, r3, #4
 3173 154a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3174 154e 5B00     		lsls	r3, r3, #1
 3175 1550 1A44     		add	r2, r2, r3
 3176 1552 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3177 1556 1A44     		add	r2, r2, r3
 3178 1558 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3179 155c D31A     		subs	r3, r2, r3
 3180 155e 013B     		subs	r3, r3, #1
 3181 1560 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3182 1564 07F12001 		add	r1, r7, #32
 3183 1568 0A44     		add	r2, r2, r1
 3184 156a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3185 156c 07F15802 		add	r2, r7, #88
 3186 1570 D154     		strb	r1, [r2, r3]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3187              		.loc 1 605 0 discriminator 3
 3188 1572 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3189 1576 0133     		adds	r3, r3, #1
 3190 1578 87F8573C 		strb	r3, [r7, #3159]
 3191              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3192              		.loc 1 605 0 is_stmt 0 discriminator 1
 3193 157c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3194 1580 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3195 1584 9A42     		cmp	r2, r3
 3196 1586 DAD3     		bcc	.L178
 3197              		.loc 1 609 0 is_stmt 1
 3198 1588 FDE0     		b	.L103
 3199              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 85


 3200              		.loc 1 612 0
 3201 158a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3202 158e 7C49     		ldr	r1, .L263+4
 3203 1590 1346     		mov	r3, r2
 3204 1592 DB00     		lsls	r3, r3, #3
 3205 1594 9B1A     		subs	r3, r3, r2
 3206 1596 1B01     		lsls	r3, r3, #4
 3207 1598 0B44     		add	r3, r3, r1
 3208 159a 03F58873 		add	r3, r3, #272
 3209 159e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3210 15a0 1846     		mov	r0, r3
 3211 15a2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3212 15a6 7549     		ldr	r1, .L263
 3213 15a8 0346     		mov	r3, r0
 3214 15aa 5B00     		lsls	r3, r3, #1
 3215 15ac 0344     		add	r3, r3, r0
 3216 15ae 9B00     		lsls	r3, r3, #2
 3217 15b0 1344     		add	r3, r3, r2
 3218 15b2 6633     		adds	r3, r3, #102
 3219 15b4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3220 15b8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3221 15bc 7048     		ldr	r0, .L263+4
 3222 15be 1346     		mov	r3, r2
 3223 15c0 DB00     		lsls	r3, r3, #3
 3224 15c2 9B1A     		subs	r3, r3, r2
 3225 15c4 1B01     		lsls	r3, r3, #4
 3226 15c6 0344     		add	r3, r3, r0
 3227 15c8 03F58873 		add	r3, r3, #272
 3228 15cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3229 15ce 1C46     		mov	r4, r3
 3230 15d0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3231 15d4 6948     		ldr	r0, .L263
 3232 15d6 2346     		mov	r3, r4
 3233 15d8 5B00     		lsls	r3, r3, #1
 3234 15da 2344     		add	r3, r3, r4
 3235 15dc 1B01     		lsls	r3, r3, #4
 3236 15de 0344     		add	r3, r3, r0
 3237 15e0 1344     		add	r3, r3, r2
 3238 15e2 03F29513 		addw	r3, r3, #405
 3239 15e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3240 15e8 41FA03F3 		asr	r3, r1, r3
 3241 15ec 1AB2     		sxth	r2, r3
 3242 15ee 07F11E03 		add	r3, r7, #30
 3243 15f2 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3244              		.loc 1 613 0
 3245 15f4 0023     		movs	r3, #0
 3246 15f6 87F8563C 		strb	r3, [r7, #3158]
 3247 15fa 21E0     		b	.L179
 3248              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3249              		.loc 1 614 0 discriminator 3
 3250 15fc 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3251 1600 3222     		movs	r2, #50
 3252 1602 02FB03F3 		mul	r3, r2, r3
 3253 1606 1A1D     		adds	r2, r3, #4
 3254 1608 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 86


 3255 160c 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3256 1610 01FB03F3 		mul	r3, r1, r3
 3257 1614 1A44     		add	r2, r2, r3
 3258 1616 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3259 161a 1A44     		add	r2, r2, r3
 3260 161c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3261 1620 D31A     		subs	r3, r2, r3
 3262 1622 013B     		subs	r3, r3, #1
 3263 1624 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3264 1628 07F11E01 		add	r1, r7, #30
 3265 162c 0A44     		add	r2, r2, r1
 3266 162e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3267 1630 07F15802 		add	r2, r7, #88
 3268 1634 D154     		strb	r1, [r2, r3]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3269              		.loc 1 613 0 discriminator 3
 3270 1636 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3271 163a 0133     		adds	r3, r3, #1
 3272 163c 87F8563C 		strb	r3, [r7, #3158]
 3273              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3274              		.loc 1 613 0 is_stmt 0 discriminator 1
 3275 1640 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3276 1644 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3277 1648 9A42     		cmp	r2, r3
 3278 164a D7D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3279              		.loc 1 616 0 is_stmt 1
 3280 164c 9BE0     		b	.L103
 3281              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3282              		.loc 1 619 0
 3283 164e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3284 1652 4A49     		ldr	r1, .L263
 3285 1654 1346     		mov	r3, r2
 3286 1656 DB00     		lsls	r3, r3, #3
 3287 1658 9B1A     		subs	r3, r3, r2
 3288 165a 1B01     		lsls	r3, r3, #4
 3289 165c 0B44     		add	r3, r3, r1
 3290 165e E433     		adds	r3, r3, #228
 3291 1660 1968     		ldr	r1, [r3]
 3292 1662 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3293 1666 4648     		ldr	r0, .L263+4
 3294 1668 1346     		mov	r3, r2
 3295 166a DB00     		lsls	r3, r3, #3
 3296 166c 9B1A     		subs	r3, r3, r2
 3297 166e 1B01     		lsls	r3, r3, #4
 3298 1670 0344     		add	r3, r3, r0
 3299 1672 03F58873 		add	r3, r3, #272
 3300 1676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3301 1678 1846     		mov	r0, r3
 3302 167a 404A     		ldr	r2, .L263
 3303 167c 0346     		mov	r3, r0
 3304 167e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 87


 3305 1680 0344     		add	r3, r3, r0
 3306 1682 1B01     		lsls	r3, r3, #4
 3307 1684 1344     		add	r3, r3, r2
 3308 1686 03F29513 		addw	r3, r3, #405
 3309 168a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3310 168c 41FA03F2 		asr	r2, r1, r3
 3311 1690 07F11803 		add	r3, r7, #24
 3312 1694 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3313              		.loc 1 620 0
 3314 1696 0023     		movs	r3, #0
 3315 1698 87F8563C 		strb	r3, [r7, #3158]
 3316 169c 1AE0     		b	.L181
 3317              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3318              		.loc 1 621 0 discriminator 3
 3319 169e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3320 16a2 3222     		movs	r2, #50
 3321 16a4 02FB03F3 		mul	r3, r2, r3
 3322 16a8 1A1D     		adds	r2, r3, #4
 3323 16aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3324 16ae 1A44     		add	r2, r2, r3
 3325 16b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3326 16b4 D31A     		subs	r3, r2, r3
 3327 16b6 013B     		subs	r3, r3, #1
 3328 16b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3329 16bc 07F11801 		add	r1, r7, #24
 3330 16c0 0A44     		add	r2, r2, r1
 3331 16c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3332 16c4 07F15802 		add	r2, r7, #88
 3333 16c8 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3334              		.loc 1 620 0 discriminator 3
 3335 16ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3336 16ce 0133     		adds	r3, r3, #1
 3337 16d0 87F8563C 		strb	r3, [r7, #3158]
 3338              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3339              		.loc 1 620 0 is_stmt 0 discriminator 1
 3340 16d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3341 16d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3342 16dc 9A42     		cmp	r2, r3
 3343 16de DED3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3344              		.loc 1 623 0 is_stmt 1
 3345 16e0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3346 16e4 2549     		ldr	r1, .L263
 3347 16e6 1346     		mov	r3, r2
 3348 16e8 DB00     		lsls	r3, r3, #3
 3349 16ea 9B1A     		subs	r3, r3, r2
 3350 16ec 1B01     		lsls	r3, r3, #4
 3351 16ee 0B44     		add	r3, r3, r1
 3352 16f0 E833     		adds	r3, r3, #232
 3353 16f2 1968     		ldr	r1, [r3]
 3354 16f4 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3355 16f8 2148     		ldr	r0, .L263+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 88


 3356 16fa 1346     		mov	r3, r2
 3357 16fc DB00     		lsls	r3, r3, #3
 3358 16fe 9B1A     		subs	r3, r3, r2
 3359 1700 1B01     		lsls	r3, r3, #4
 3360 1702 0344     		add	r3, r3, r0
 3361 1704 03F58873 		add	r3, r3, #272
 3362 1708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3363 170a 1846     		mov	r0, r3
 3364 170c 1B4A     		ldr	r2, .L263
 3365 170e 0346     		mov	r3, r0
 3366 1710 5B00     		lsls	r3, r3, #1
 3367 1712 0344     		add	r3, r3, r0
 3368 1714 1B01     		lsls	r3, r3, #4
 3369 1716 1344     		add	r3, r3, r2
 3370 1718 03F29513 		addw	r3, r3, #405
 3371 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3372 171e 41FA03F2 		asr	r2, r1, r3
 3373 1722 07F11803 		add	r3, r7, #24
 3374 1726 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3375              		.loc 1 624 0
 3376 1728 0023     		movs	r3, #0
 3377 172a 87F8563C 		strb	r3, [r7, #3158]
 3378 172e 1DE0     		b	.L183
 3379              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3380              		.loc 1 625 0 discriminator 3
 3381 1730 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3382 1734 3222     		movs	r2, #50
 3383 1736 02FB03F3 		mul	r3, r2, r3
 3384 173a 1A1D     		adds	r2, r3, #4
 3385 173c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3386 1740 1A44     		add	r2, r2, r3
 3387 1742 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3388 1746 1A44     		add	r2, r2, r3
 3389 1748 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3390 174c D31A     		subs	r3, r2, r3
 3391 174e 013B     		subs	r3, r3, #1
 3392 1750 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3393 1754 07F11801 		add	r1, r7, #24
 3394 1758 0A44     		add	r2, r2, r1
 3395 175a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3396 175c 07F15802 		add	r2, r7, #88
 3397 1760 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3398              		.loc 1 624 0 discriminator 3
 3399 1762 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3400 1766 0133     		adds	r3, r3, #1
 3401 1768 87F8563C 		strb	r3, [r7, #3158]
 3402              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3403              		.loc 1 624 0 is_stmt 0 discriminator 1
 3404 176c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3405 1770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3406 1774 9A42     		cmp	r2, r3
 3407 1776 DBD3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 89


 627:..\src/command_processing.c ****                         break;
 3408              		.loc 1 627 0 is_stmt 1
 3409 1778 05E0     		b	.L103
 3410              	.L264:
 3411 177a 00BF     		.align	2
 3412              	.L263:
 3413 177c 00000000 		.word	c_mem
 3414 1780 00000000 		.word	g_mem
 3415              	.L251:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 3416              		.loc 1 630 0
 3417 1784 00BF     		nop
 3418              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3419              		.loc 1 637 0
 3420 1786 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3421 178a 9B00     		lsls	r3, r3, #2
 3422 178c D7F86C2C 		ldr	r2, [r7, #3180]
 3423 1790 1344     		add	r3, r3, r2
 3424 1792 1A68     		ldr	r2, [r3]
 3425 1794 07F12403 		add	r3, r7, #36
 3426 1798 1146     		mov	r1, r2
 3427 179a 1846     		mov	r0, r3
 3428 179c FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3429              		.loc 1 638 0
 3430 17a0 07F12403 		add	r3, r7, #36
 3431 17a4 1846     		mov	r0, r3
 3432 17a6 FFF7FEFF 		bl	strlen
 3433 17aa 0346     		mov	r3, r0
 3434 17ac 87F8523C 		strb	r3, [r7, #3154]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3435              		.loc 1 641 0
 3436 17b0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3437 17b4 07F10802 		add	r2, r7, #8
 3438 17b8 1268     		ldr	r2, [r2]
 3439 17ba 1344     		add	r3, r3, r2
 3440 17bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 17be 002B     		cmp	r3, #0
 3442 17c0 40F0FC82 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3443              		.loc 1 642 0
 3444 17c4 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3445 17c8 D7F8682C 		ldr	r2, [r7, #3176]
 3446 17cc 1344     		add	r3, r3, r2
 3447 17ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3448 17d0 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 90


 3449 17d2 092B     		cmp	r3, #9
 3450 17d4 00F2E882 		bhi	.L186
 3451 17d8 01A2     		adr	r2, .L188
 3452 17da 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3453 17de 00BF     		.p2align 2
 3454              	.L188:
 3455 17e0 09180000 		.word	.L187+1
 3456 17e4 21190000 		.word	.L189+1
 3457 17e8 E1190000 		.word	.L190+1
 3458 17ec 271A0000 		.word	.L191+1
 3459 17f0 7D1A0000 		.word	.L192+1
 3460 17f4 CB1A0000 		.word	.L193+1
 3461 17f8 891B0000 		.word	.L194+1
 3462 17fc 4F1C0000 		.word	.L195+1
 3463 1800 D11C0000 		.word	.L196+1
 3464 1804 3B1D0000 		.word	.L197+1
 3465              		.p2align 1
 3466              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 3467              		.loc 1 644 0
 3468 1808 D7F8483C 		ldr	r3, [r7, #3144]
 3469 180c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3470 180e 052B     		cmp	r3, #5
 3471 1810 00F2C582 		bhi	.L252
 3472 1814 01A2     		adr	r2, .L200
 3473 1816 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3474 181a 00BF     		.p2align 2
 3475              	.L200:
 3476 181c 35180000 		.word	.L199+1
 3477 1820 55180000 		.word	.L201+1
 3478 1824 77180000 		.word	.L202+1
 3479 1828 A1180000 		.word	.L203+1
 3480 182c C9180000 		.word	.L204+1
 3481 1830 EF180000 		.word	.L205+1
 3482              		.p2align 1
 3483              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 3484              		.loc 1 646 0
 3485 1834 07F12403 		add	r3, r7, #36
 3486 1838 1846     		mov	r0, r3
 3487 183a FFF7FEFF 		bl	strlen
 3488 183e 0346     		mov	r3, r0
 3489 1840 1A46     		mov	r2, r3
 3490 1842 07F12403 		add	r3, r7, #36
 3491 1846 1344     		add	r3, r3, r2
 3492 1848 D44A     		ldr	r2, .L265
 3493 184a 1068     		ldr	r0, [r2]	@ unaligned
 3494 184c 1860     		str	r0, [r3]	@ unaligned
 3495 184e 1279     		ldrb	r2, [r2, #4]
 3496 1850 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 3497              		.loc 1 647 0
 3498 1852 64E0     		b	.L198
 3499              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 91


 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3500              		.loc 1 649 0
 3501 1854 07F12403 		add	r3, r7, #36
 3502 1858 1846     		mov	r0, r3
 3503 185a FFF7FEFF 		bl	strlen
 3504 185e 0346     		mov	r3, r0
 3505 1860 1A46     		mov	r2, r3
 3506 1862 07F12403 		add	r3, r7, #36
 3507 1866 1344     		add	r3, r3, r2
 3508 1868 CD49     		ldr	r1, .L265+4
 3509 186a 1A46     		mov	r2, r3
 3510 186c 0B46     		mov	r3, r1
 3511 186e 03CB     		ldmia	r3!, {r0, r1}
 3512 1870 1060     		str	r0, [r2]	@ unaligned
 3513 1872 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 3514              		.loc 1 650 0
 3515 1874 53E0     		b	.L198
 3516              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3517              		.loc 1 652 0
 3518 1876 07F12403 		add	r3, r7, #36
 3519 187a 1846     		mov	r0, r3
 3520 187c FFF7FEFF 		bl	strlen
 3521 1880 0346     		mov	r3, r0
 3522 1882 1A46     		mov	r2, r3
 3523 1884 07F12403 		add	r3, r7, #36
 3524 1888 1344     		add	r3, r3, r2
 3525 188a C64A     		ldr	r2, .L265+8
 3526 188c 1D46     		mov	r5, r3
 3527 188e 1446     		mov	r4, r2
 3528 1890 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3529 1892 2860     		str	r0, [r5]	@ unaligned
 3530 1894 6960     		str	r1, [r5, #4]	@ unaligned
 3531 1896 AA60     		str	r2, [r5, #8]	@ unaligned
 3532 1898 EB60     		str	r3, [r5, #12]	@ unaligned
 3533 189a 2388     		ldrh	r3, [r4]	@ unaligned
 3534 189c 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 3535              		.loc 1 653 0
 3536 189e 3EE0     		b	.L198
 3537              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 3538              		.loc 1 655 0
 3539 18a0 07F12403 		add	r3, r7, #36
 3540 18a4 1846     		mov	r0, r3
 3541 18a6 FFF7FEFF 		bl	strlen
 3542 18aa 0346     		mov	r3, r0
 3543 18ac 1A46     		mov	r2, r3
 3544 18ae 07F12403 		add	r3, r7, #36
 3545 18b2 1344     		add	r3, r3, r2
 3546 18b4 BC4A     		ldr	r2, .L265+12
 3547 18b6 1C46     		mov	r4, r3
 3548 18b8 1346     		mov	r3, r2
 3549 18ba 07CB     		ldmia	r3!, {r0, r1, r2}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 92


 3550 18bc 2060     		str	r0, [r4]	@ unaligned
 3551 18be 6160     		str	r1, [r4, #4]	@ unaligned
 3552 18c0 A260     		str	r2, [r4, #8]	@ unaligned
 3553 18c2 1B88     		ldrh	r3, [r3]	@ unaligned
 3554 18c4 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 3555              		.loc 1 656 0
 3556 18c6 2AE0     		b	.L198
 3557              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3558              		.loc 1 658 0
 3559 18c8 07F12403 		add	r3, r7, #36
 3560 18cc 1846     		mov	r0, r3
 3561 18ce FFF7FEFF 		bl	strlen
 3562 18d2 0346     		mov	r3, r0
 3563 18d4 1A46     		mov	r2, r3
 3564 18d6 07F12403 		add	r3, r7, #36
 3565 18da 1344     		add	r3, r3, r2
 3566 18dc B349     		ldr	r1, .L265+16
 3567 18de 1A46     		mov	r2, r3
 3568 18e0 0B46     		mov	r3, r1
 3569 18e2 03CB     		ldmia	r3!, {r0, r1}
 3570 18e4 1060     		str	r0, [r2]	@ unaligned
 3571 18e6 5160     		str	r1, [r2, #4]	@ unaligned
 3572 18e8 1B88     		ldrh	r3, [r3]	@ unaligned
 3573 18ea 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 3574              		.loc 1 659 0
 3575 18ec 17E0     		b	.L198
 3576              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3577              		.loc 1 661 0
 3578 18ee 07F12403 		add	r3, r7, #36
 3579 18f2 1846     		mov	r0, r3
 3580 18f4 FFF7FEFF 		bl	strlen
 3581 18f8 0346     		mov	r3, r0
 3582 18fa 1A46     		mov	r2, r3
 3583 18fc 07F12403 		add	r3, r7, #36
 3584 1900 1344     		add	r3, r3, r2
 3585 1902 AB4A     		ldr	r2, .L265+20
 3586 1904 1D46     		mov	r5, r3
 3587 1906 1446     		mov	r4, r2
 3588 1908 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3589 190a 2860     		str	r0, [r5]	@ unaligned
 3590 190c 6960     		str	r1, [r5, #4]	@ unaligned
 3591 190e AA60     		str	r2, [r5, #8]	@ unaligned
 3592 1910 EB60     		str	r3, [r5, #12]	@ unaligned
 3593 1912 2388     		ldrh	r3, [r4]	@ unaligned
 3594 1914 A278     		ldrb	r2, [r4, #2]
 3595 1916 2B82     		strh	r3, [r5, #16]	@ unaligned
 3596 1918 1346     		mov	r3, r2
 3597 191a AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 3598              		.loc 1 662 0
 3599 191c 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 93


 3600              	.L198:
 663:..\src/command_processing.c ****                     }
 664:..\src/command_processing.c ****                     break;
 3601              		.loc 1 664 0
 3602 191e 3EE2     		b	.L252
 3603              	.L189:
 665:..\src/command_processing.c ****                 case 2:     // control mode menu
 666:..\src/command_processing.c ****                     switch(*m_addr){
 3604              		.loc 1 666 0
 3605 1920 D7F8483C 		ldr	r3, [r7, #3144]
 3606 1924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3607 1926 032B     		cmp	r3, #3
 3608 1928 00F23B82 		bhi	.L253
 3609 192c 01A2     		adr	r2, .L208
 3610 192e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3611 1932 00BF     		.p2align 2
 3612              	.L208:
 3613 1934 45190000 		.word	.L207+1
 3614 1938 6B190000 		.word	.L209+1
 3615 193c 8B190000 		.word	.L210+1
 3616 1940 B1190000 		.word	.L211+1
 3617              		.p2align 1
 3618              	.L207:
 667:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 668:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3619              		.loc 1 668 0
 3620 1944 07F12403 		add	r3, r7, #36
 3621 1948 1846     		mov	r0, r3
 3622 194a FFF7FEFF 		bl	strlen
 3623 194e 0346     		mov	r3, r0
 3624 1950 1A46     		mov	r2, r3
 3625 1952 07F12403 		add	r3, r7, #36
 3626 1956 1344     		add	r3, r3, r2
 3627 1958 9649     		ldr	r1, .L265+24
 3628 195a 1A46     		mov	r2, r3
 3629 195c 0B46     		mov	r3, r1
 3630 195e 03CB     		ldmia	r3!, {r0, r1}
 3631 1960 1060     		str	r0, [r2]	@ unaligned
 3632 1962 5160     		str	r1, [r2, #4]	@ unaligned
 3633 1964 1B88     		ldrh	r3, [r3]	@ unaligned
 3634 1966 1381     		strh	r3, [r2, #8]	@ unaligned
 669:..\src/command_processing.c ****                         break;
 3635              		.loc 1 669 0
 3636 1968 39E0     		b	.L206
 3637              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_PWM:
 671:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3638              		.loc 1 671 0
 3639 196a 07F12403 		add	r3, r7, #36
 3640 196e 1846     		mov	r0, r3
 3641 1970 FFF7FEFF 		bl	strlen
 3642 1974 0346     		mov	r3, r0
 3643 1976 1A46     		mov	r2, r3
 3644 1978 07F12403 		add	r3, r7, #36
 3645 197c 1344     		add	r3, r3, r2
 3646 197e 8E4A     		ldr	r2, .L265+28
 3647 1980 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 94


 3648 1982 1860     		str	r0, [r3]	@ unaligned
 3649 1984 1279     		ldrb	r2, [r2, #4]
 3650 1986 1A71     		strb	r2, [r3, #4]
 672:..\src/command_processing.c ****                         break;
 3651              		.loc 1 672 0
 3652 1988 29E0     		b	.L206
 3653              	.L210:
 673:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 674:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3654              		.loc 1 674 0
 3655 198a 07F12403 		add	r3, r7, #36
 3656 198e 1846     		mov	r0, r3
 3657 1990 FFF7FEFF 		bl	strlen
 3658 1994 0346     		mov	r3, r0
 3659 1996 1A46     		mov	r2, r3
 3660 1998 07F12403 		add	r3, r7, #36
 3661 199c 1344     		add	r3, r3, r2
 3662 199e 8749     		ldr	r1, .L265+32
 3663 19a0 1A46     		mov	r2, r3
 3664 19a2 0B46     		mov	r3, r1
 3665 19a4 03CB     		ldmia	r3!, {r0, r1}
 3666 19a6 1060     		str	r0, [r2]	@ unaligned
 3667 19a8 5160     		str	r1, [r2, #4]	@ unaligned
 3668 19aa 1B78     		ldrb	r3, [r3]
 3669 19ac 1372     		strb	r3, [r2, #8]
 675:..\src/command_processing.c ****                         break;
 3670              		.loc 1 675 0
 3671 19ae 16E0     		b	.L206
 3672              	.L211:
 676:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3673              		.loc 1 677 0
 3674 19b0 07F12403 		add	r3, r7, #36
 3675 19b4 1846     		mov	r0, r3
 3676 19b6 FFF7FEFF 		bl	strlen
 3677 19ba 0346     		mov	r3, r0
 3678 19bc 1A46     		mov	r2, r3
 3679 19be 07F12403 		add	r3, r7, #36
 3680 19c2 1344     		add	r3, r3, r2
 3681 19c4 7E4A     		ldr	r2, .L265+36
 3682 19c6 1D46     		mov	r5, r3
 3683 19c8 1446     		mov	r4, r2
 3684 19ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3685 19cc 2860     		str	r0, [r5]	@ unaligned
 3686 19ce 6960     		str	r1, [r5, #4]	@ unaligned
 3687 19d0 AA60     		str	r2, [r5, #8]	@ unaligned
 3688 19d2 EB60     		str	r3, [r5, #12]	@ unaligned
 3689 19d4 2068     		ldr	r0, [r4]	@ unaligned
 3690 19d6 2861     		str	r0, [r5, #16]	@ unaligned
 3691 19d8 A388     		ldrh	r3, [r4, #4]	@ unaligned
 3692 19da AB82     		strh	r3, [r5, #20]	@ unaligned
 678:..\src/command_processing.c ****                         break;
 3693              		.loc 1 678 0
 3694 19dc 00BF     		nop
 3695              	.L206:
 679:..\src/command_processing.c ****                     }
 680:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 95


 3696              		.loc 1 680 0
 3697 19de E0E1     		b	.L253
 3698              	.L190:
 681:..\src/command_processing.c ****                 case 3:     // yes/no menu
 682:..\src/command_processing.c ****                     if(*m_addr){
 3699              		.loc 1 682 0
 3700 19e0 D7F8483C 		ldr	r3, [r7, #3144]
 3701 19e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3702 19e6 002B     		cmp	r3, #0
 3703 19e8 0FD0     		beq	.L212
 683:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3704              		.loc 1 683 0
 3705 19ea 07F12403 		add	r3, r7, #36
 3706 19ee 1846     		mov	r0, r3
 3707 19f0 FFF7FEFF 		bl	strlen
 3708 19f4 0346     		mov	r3, r0
 3709 19f6 1A46     		mov	r2, r3
 3710 19f8 07F12403 		add	r3, r7, #36
 3711 19fc 1344     		add	r3, r3, r2
 3712 19fe 714A     		ldr	r2, .L265+40
 3713 1a00 1068     		ldr	r0, [r2]	@ unaligned
 3714 1a02 1860     		str	r0, [r3]	@ unaligned
 3715 1a04 1279     		ldrb	r2, [r2, #4]
 3716 1a06 1A71     		strb	r2, [r3, #4]
 684:..\src/command_processing.c ****                     }
 685:..\src/command_processing.c ****                     else {
 686:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     break;    
 3717              		.loc 1 688 0
 3718 1a08 CEE1     		b	.L186
 3719              	.L212:
 686:..\src/command_processing.c ****                     }
 3720              		.loc 1 686 0
 3721 1a0a 07F12403 		add	r3, r7, #36
 3722 1a0e 1846     		mov	r0, r3
 3723 1a10 FFF7FEFF 		bl	strlen
 3724 1a14 0346     		mov	r3, r0
 3725 1a16 1A46     		mov	r2, r3
 3726 1a18 07F12403 		add	r3, r7, #36
 3727 1a1c 1344     		add	r3, r3, r2
 3728 1a1e 6A4A     		ldr	r2, .L265+44
 3729 1a20 1068     		ldr	r0, [r2]	@ unaligned
 3730 1a22 1860     		str	r0, [r3]	@ unaligned
 3731              		.loc 1 688 0
 3732 1a24 C0E1     		b	.L186
 3733              	.L191:
 689:..\src/command_processing.c ****                 case 4:     // right/lef menu
 690:..\src/command_processing.c ****                     switch(*m_addr){
 3734              		.loc 1 690 0
 3735 1a26 D7F8483C 		ldr	r3, [r7, #3144]
 3736 1a2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3737 1a2c 002B     		cmp	r3, #0
 3738 1a2e 02D0     		beq	.L215
 3739 1a30 012B     		cmp	r3, #1
 3740 1a32 12D0     		beq	.L216
 691:..\src/command_processing.c ****                         case RIGHT_HAND:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 96


 692:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 693:..\src/command_processing.c ****                         break;
 694:..\src/command_processing.c ****                         case LEFT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                     }
 698:..\src/command_processing.c ****                     break;
 3741              		.loc 1 698 0
 3742 1a34 B8E1     		b	.L186
 3743              	.L215:
 692:..\src/command_processing.c ****                         break;
 3744              		.loc 1 692 0
 3745 1a36 07F12403 		add	r3, r7, #36
 3746 1a3a 1846     		mov	r0, r3
 3747 1a3c FFF7FEFF 		bl	strlen
 3748 1a40 0346     		mov	r3, r0
 3749 1a42 1A46     		mov	r2, r3
 3750 1a44 07F12403 		add	r3, r7, #36
 3751 1a48 1344     		add	r3, r3, r2
 3752 1a4a 604A     		ldr	r2, .L265+48
 3753 1a4c 1068     		ldr	r0, [r2]	@ unaligned
 3754 1a4e 1860     		str	r0, [r3]	@ unaligned
 3755 1a50 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3756 1a52 9279     		ldrb	r2, [r2, #6]
 3757 1a54 9980     		strh	r1, [r3, #4]	@ unaligned
 3758 1a56 9A71     		strb	r2, [r3, #6]
 693:..\src/command_processing.c ****                         case LEFT_HAND:
 3759              		.loc 1 693 0
 3760 1a58 0FE0     		b	.L214
 3761              	.L216:
 695:..\src/command_processing.c ****                         break;
 3762              		.loc 1 695 0
 3763 1a5a 07F12403 		add	r3, r7, #36
 3764 1a5e 1846     		mov	r0, r3
 3765 1a60 FFF7FEFF 		bl	strlen
 3766 1a64 0346     		mov	r3, r0
 3767 1a66 1A46     		mov	r2, r3
 3768 1a68 07F12403 		add	r3, r7, #36
 3769 1a6c 1344     		add	r3, r3, r2
 3770 1a6e 584A     		ldr	r2, .L265+52
 3771 1a70 1068     		ldr	r0, [r2]	@ unaligned
 3772 1a72 1860     		str	r0, [r3]	@ unaligned
 3773 1a74 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3774 1a76 9A80     		strh	r2, [r3, #4]	@ unaligned
 696:..\src/command_processing.c ****                     }
 3775              		.loc 1 696 0
 3776 1a78 00BF     		nop
 3777              	.L214:
 3778              		.loc 1 698 0
 3779 1a7a 95E1     		b	.L186
 3780              	.L192:
 699:..\src/command_processing.c ****                 case 5:     // on/off menu
 700:..\src/command_processing.c ****                     switch(*m_addr){
 3781              		.loc 1 700 0
 3782 1a7c D7F8483C 		ldr	r3, [r7, #3144]
 3783 1a80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3784 1a82 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 97


 3785 1a84 02D0     		beq	.L218
 3786 1a86 012B     		cmp	r3, #1
 3787 1a88 10D0     		beq	.L219
 701:..\src/command_processing.c ****                         case 0:
 702:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 703:..\src/command_processing.c ****                         break;
 704:..\src/command_processing.c ****                         case 1:
 705:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 3788              		.loc 1 708 0
 3789 1a8a 8DE1     		b	.L186
 3790              	.L218:
 702:..\src/command_processing.c ****                         break;
 3791              		.loc 1 702 0
 3792 1a8c 07F12403 		add	r3, r7, #36
 3793 1a90 1846     		mov	r0, r3
 3794 1a92 FFF7FEFF 		bl	strlen
 3795 1a96 0346     		mov	r3, r0
 3796 1a98 1A46     		mov	r2, r3
 3797 1a9a 07F12403 		add	r3, r7, #36
 3798 1a9e 1344     		add	r3, r3, r2
 3799 1aa0 4C4A     		ldr	r2, .L265+56
 3800 1aa2 1068     		ldr	r0, [r2]	@ unaligned
 3801 1aa4 1860     		str	r0, [r3]	@ unaligned
 3802 1aa6 1279     		ldrb	r2, [r2, #4]
 3803 1aa8 1A71     		strb	r2, [r3, #4]
 703:..\src/command_processing.c ****                         case 1:
 3804              		.loc 1 703 0
 3805 1aaa 0DE0     		b	.L217
 3806              	.L219:
 705:..\src/command_processing.c ****                         break;
 3807              		.loc 1 705 0
 3808 1aac 07F12403 		add	r3, r7, #36
 3809 1ab0 1846     		mov	r0, r3
 3810 1ab2 FFF7FEFF 		bl	strlen
 3811 1ab6 0346     		mov	r3, r0
 3812 1ab8 1A46     		mov	r2, r3
 3813 1aba 07F12403 		add	r3, r7, #36
 3814 1abe 1344     		add	r3, r3, r2
 3815 1ac0 454A     		ldr	r2, .L265+60
 3816 1ac2 1068     		ldr	r0, [r2]	@ unaligned
 3817 1ac4 1860     		str	r0, [r3]	@ unaligned
 706:..\src/command_processing.c ****                     }
 3818              		.loc 1 706 0
 3819 1ac6 00BF     		nop
 3820              	.L217:
 3821              		.loc 1 708 0
 3822 1ac8 6EE1     		b	.L186
 3823              	.L193:
 709:..\src/command_processing.c ****                 case 6:     // expansion port menu
 710:..\src/command_processing.c ****                     switch(*m_addr){
 3824              		.loc 1 710 0
 3825 1aca D7F8483C 		ldr	r3, [r7, #3144]
 3826 1ace 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3827 1ad0 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 98


 3828 1ad2 00F26881 		bhi	.L254
 3829 1ad6 01A2     		adr	r2, .L222
 3830 1ad8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3831              		.p2align 2
 3832              	.L222:
 3833 1adc ED1A0000 		.word	.L221+1
 3834 1ae0 0D1B0000 		.word	.L223+1
 3835 1ae4 351B0000 		.word	.L224+1
 3836 1ae8 5F1B0000 		.word	.L225+1
 3837              		.p2align 1
 3838              	.L221:
 711:..\src/command_processing.c ****                         case EXP_NONE:
 712:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 3839              		.loc 1 712 0
 3840 1aec 07F12403 		add	r3, r7, #36
 3841 1af0 1846     		mov	r0, r3
 3842 1af2 FFF7FEFF 		bl	strlen
 3843 1af6 0346     		mov	r3, r0
 3844 1af8 1A46     		mov	r2, r3
 3845 1afa 07F12403 		add	r3, r7, #36
 3846 1afe 1344     		add	r3, r3, r2
 3847 1b00 364A     		ldr	r2, .L265+64
 3848 1b02 1068     		ldr	r0, [r2]	@ unaligned
 3849 1b04 1860     		str	r0, [r3]	@ unaligned
 3850 1b06 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3851 1b08 9A80     		strh	r2, [r3, #4]	@ unaligned
 713:..\src/command_processing.c ****                             break;
 3852              		.loc 1 713 0
 3853 1b0a 3CE0     		b	.L220
 3854              	.L223:
 714:..\src/command_processing.c ****                         case EXP_SD_RTC:
 715:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 3855              		.loc 1 715 0
 3856 1b0c 07F12403 		add	r3, r7, #36
 3857 1b10 1846     		mov	r0, r3
 3858 1b12 FFF7FEFF 		bl	strlen
 3859 1b16 0346     		mov	r3, r0
 3860 1b18 1A46     		mov	r2, r3
 3861 1b1a 07F12403 		add	r3, r7, #36
 3862 1b1e 1344     		add	r3, r3, r2
 3863 1b20 2F4A     		ldr	r2, .L265+68
 3864 1b22 1C46     		mov	r4, r3
 3865 1b24 1346     		mov	r3, r2
 3866 1b26 07CB     		ldmia	r3!, {r0, r1, r2}
 3867 1b28 2060     		str	r0, [r4]	@ unaligned
 3868 1b2a 6160     		str	r1, [r4, #4]	@ unaligned
 3869 1b2c A260     		str	r2, [r4, #8]	@ unaligned
 3870 1b2e 1B88     		ldrh	r3, [r3]	@ unaligned
 3871 1b30 A381     		strh	r3, [r4, #12]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 3872              		.loc 1 716 0
 3873 1b32 28E0     		b	.L220
 3874              	.L224:
 717:..\src/command_processing.c ****                         case EXP_WIFI:
 718:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 3875              		.loc 1 718 0
 3876 1b34 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 99


 3877 1b38 1846     		mov	r0, r3
 3878 1b3a FFF7FEFF 		bl	strlen
 3879 1b3e 0346     		mov	r3, r0
 3880 1b40 1A46     		mov	r2, r3
 3881 1b42 07F12403 		add	r3, r7, #36
 3882 1b46 1344     		add	r3, r3, r2
 3883 1b48 264A     		ldr	r2, .L265+72
 3884 1b4a 1D46     		mov	r5, r3
 3885 1b4c 1446     		mov	r4, r2
 3886 1b4e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3887 1b50 2860     		str	r0, [r5]	@ unaligned
 3888 1b52 6960     		str	r1, [r5, #4]	@ unaligned
 3889 1b54 AA60     		str	r2, [r5, #8]	@ unaligned
 3890 1b56 EB60     		str	r3, [r5, #12]	@ unaligned
 3891 1b58 2388     		ldrh	r3, [r4]	@ unaligned
 3892 1b5a 2B82     		strh	r3, [r5, #16]	@ unaligned
 719:..\src/command_processing.c ****         					break;
 3893              		.loc 1 719 0
 3894 1b5c 13E0     		b	.L220
 3895              	.L225:
 720:..\src/command_processing.c ****                         case EXP_OTHER:
 721:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 3896              		.loc 1 721 0
 3897 1b5e 07F12403 		add	r3, r7, #36
 3898 1b62 1846     		mov	r0, r3
 3899 1b64 FFF7FEFF 		bl	strlen
 3900 1b68 0346     		mov	r3, r0
 3901 1b6a 1A46     		mov	r2, r3
 3902 1b6c 07F12403 		add	r3, r7, #36
 3903 1b70 1344     		add	r3, r3, r2
 3904 1b72 1D4A     		ldr	r2, .L265+76
 3905 1b74 1C46     		mov	r4, r3
 3906 1b76 1346     		mov	r3, r2
 3907 1b78 07CB     		ldmia	r3!, {r0, r1, r2}
 3908 1b7a 2060     		str	r0, [r4]	@ unaligned
 3909 1b7c 6160     		str	r1, [r4, #4]	@ unaligned
 3910 1b7e A260     		str	r2, [r4, #8]	@ unaligned
 3911 1b80 1B78     		ldrb	r3, [r3]
 3912 1b82 2373     		strb	r3, [r4, #12]
 722:..\src/command_processing.c ****         					break;
 3913              		.loc 1 722 0
 3914 1b84 00BF     		nop
 3915              	.L220:
 723:..\src/command_processing.c ****                     }
 724:..\src/command_processing.c ****                     break;
 3916              		.loc 1 724 0
 3917 1b86 0EE1     		b	.L254
 3918              	.L194:
 725:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 726:..\src/command_processing.c ****                     switch(*m_addr){
 3919              		.loc 1 726 0
 3920 1b88 D7F8483C 		ldr	r3, [r7, #3144]
 3921 1b8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3922 1b8e 012B     		cmp	r3, #1
 3923 1b90 3CD0     		beq	.L227
 3924 1b92 022B     		cmp	r3, #2
 3925 1b94 4AD0     		beq	.L228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 100


 3926 1b96 002B     		cmp	r3, #0
 3927 1b98 28D0     		beq	.L229
 727:..\src/command_processing.c ****                         case 0: 
 728:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 729:..\src/command_processing.c ****                             break;
 730:..\src/command_processing.c ****                         case 1: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 2: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         default:
 737:..\src/command_processing.c ****                             break;
 3928              		.loc 1 737 0
 3929 1b9a 57E0     		b	.L230
 3930              	.L266:
 3931              		.align	2
 3932              	.L265:
 3933 1b9c 00000000 		.word	.LC76
 3934 1ba0 08000000 		.word	.LC77
 3935 1ba4 10000000 		.word	.LC78
 3936 1ba8 24000000 		.word	.LC79
 3937 1bac 34000000 		.word	.LC80
 3938 1bb0 40000000 		.word	.LC81
 3939 1bb4 54000000 		.word	.LC82
 3940 1bb8 60000000 		.word	.LC83
 3941 1bbc 68000000 		.word	.LC84
 3942 1bc0 74000000 		.word	.LC85
 3943 1bc4 8C000000 		.word	.LC86
 3944 1bc8 94000000 		.word	.LC87
 3945 1bcc 9C000000 		.word	.LC88
 3946 1bd0 A4000000 		.word	.LC89
 3947 1bd4 AC000000 		.word	.LC90
 3948 1bd8 B4000000 		.word	.LC91
 3949 1bdc BC000000 		.word	.LC92
 3950 1be0 C4000000 		.word	.LC93
 3951 1be4 D4000000 		.word	.LC94
 3952 1be8 E8000000 		.word	.LC95
 3953              	.L229:
 728:..\src/command_processing.c ****                             break;
 3954              		.loc 1 728 0
 3955 1bec 07F12403 		add	r3, r7, #36
 3956 1bf0 1846     		mov	r0, r3
 3957 1bf2 FFF7FEFF 		bl	strlen
 3958 1bf6 0346     		mov	r3, r0
 3959 1bf8 1A46     		mov	r2, r3
 3960 1bfa 07F12403 		add	r3, r7, #36
 3961 1bfe 1344     		add	r3, r3, r2
 3962 1c00 CF4A     		ldr	r2, .L267
 3963 1c02 1068     		ldr	r0, [r2]	@ unaligned
 3964 1c04 1860     		str	r0, [r3]	@ unaligned
 3965 1c06 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3966 1c08 9A80     		strh	r2, [r3, #4]	@ unaligned
 729:..\src/command_processing.c ****                         case 1: 
 3967              		.loc 1 729 0
 3968 1c0a 1FE0     		b	.L230
 3969              	.L227:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 101


 731:..\src/command_processing.c ****                             break;
 3970              		.loc 1 731 0
 3971 1c0c 07F12403 		add	r3, r7, #36
 3972 1c10 1846     		mov	r0, r3
 3973 1c12 FFF7FEFF 		bl	strlen
 3974 1c16 0346     		mov	r3, r0
 3975 1c18 1A46     		mov	r2, r3
 3976 1c1a 07F12403 		add	r3, r7, #36
 3977 1c1e 1344     		add	r3, r3, r2
 3978 1c20 C84A     		ldr	r2, .L267+4
 3979 1c22 1068     		ldr	r0, [r2]	@ unaligned
 3980 1c24 1860     		str	r0, [r3]	@ unaligned
 3981 1c26 1279     		ldrb	r2, [r2, #4]
 3982 1c28 1A71     		strb	r2, [r3, #4]
 732:..\src/command_processing.c ****                         case 2: 
 3983              		.loc 1 732 0
 3984 1c2a 0FE0     		b	.L230
 3985              	.L228:
 734:..\src/command_processing.c ****                             break;
 3986              		.loc 1 734 0
 3987 1c2c 07F12403 		add	r3, r7, #36
 3988 1c30 1846     		mov	r0, r3
 3989 1c32 FFF7FEFF 		bl	strlen
 3990 1c36 0346     		mov	r3, r0
 3991 1c38 1A46     		mov	r2, r3
 3992 1c3a 07F12403 		add	r3, r7, #36
 3993 1c3e 1344     		add	r3, r3, r2
 3994 1c40 C14A     		ldr	r2, .L267+8
 3995 1c42 1068     		ldr	r0, [r2]	@ unaligned
 3996 1c44 1860     		str	r0, [r3]	@ unaligned
 3997 1c46 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3998 1c48 9A80     		strh	r2, [r3, #4]	@ unaligned
 735:..\src/command_processing.c ****                         default:
 3999              		.loc 1 735 0
 4000 1c4a 00BF     		nop
 4001              	.L230:
 738:..\src/command_processing.c ****                     } 
 739:..\src/command_processing.c ****                     break;
 4002              		.loc 1 739 0 discriminator 12
 4003 1c4c ACE0     		b	.L186
 4004              	.L195:
 740:..\src/command_processing.c ****                 case 8:     // user menu          
 741:..\src/command_processing.c ****                     switch(*m_addr){
 4005              		.loc 1 741 0
 4006 1c4e D7F8483C 		ldr	r3, [r7, #3144]
 4007 1c52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4008 1c54 012B     		cmp	r3, #1
 4009 1c56 18D0     		beq	.L232
 4010 1c58 022B     		cmp	r3, #2
 4011 1c5a 28D0     		beq	.L233
 4012 1c5c 002B     		cmp	r3, #0
 4013 1c5e 00D0     		beq	.L234
 742:..\src/command_processing.c ****                         case GENERIC_USER:
 743:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 744:..\src/command_processing.c ****                         break;
 745:..\src/command_processing.c ****                         case MARIA:
 746:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 102


 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case ROZA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                     }   
 752:..\src/command_processing.c ****                     break;                    
 4014              		.loc 1 752 0
 4015 1c60 A2E0     		b	.L186
 4016              	.L234:
 743:..\src/command_processing.c ****                         break;
 4017              		.loc 1 743 0
 4018 1c62 07F12403 		add	r3, r7, #36
 4019 1c66 1846     		mov	r0, r3
 4020 1c68 FFF7FEFF 		bl	strlen
 4021 1c6c 0346     		mov	r3, r0
 4022 1c6e 1A46     		mov	r2, r3
 4023 1c70 07F12403 		add	r3, r7, #36
 4024 1c74 1344     		add	r3, r3, r2
 4025 1c76 B54A     		ldr	r2, .L267+12
 4026 1c78 1C46     		mov	r4, r3
 4027 1c7a 1346     		mov	r3, r2
 4028 1c7c 07CB     		ldmia	r3!, {r0, r1, r2}
 4029 1c7e 2060     		str	r0, [r4]	@ unaligned
 4030 1c80 6160     		str	r1, [r4, #4]	@ unaligned
 4031 1c82 A260     		str	r2, [r4, #8]	@ unaligned
 4032 1c84 1B88     		ldrh	r3, [r3]	@ unaligned
 4033 1c86 A381     		strh	r3, [r4, #12]	@ unaligned
 744:..\src/command_processing.c ****                         case MARIA:
 4034              		.loc 1 744 0
 4035 1c88 21E0     		b	.L231
 4036              	.L232:
 746:..\src/command_processing.c ****                         break;
 4037              		.loc 1 746 0
 4038 1c8a 07F12403 		add	r3, r7, #36
 4039 1c8e 1846     		mov	r0, r3
 4040 1c90 FFF7FEFF 		bl	strlen
 4041 1c94 0346     		mov	r3, r0
 4042 1c96 1A46     		mov	r2, r3
 4043 1c98 07F12403 		add	r3, r7, #36
 4044 1c9c 1344     		add	r3, r3, r2
 4045 1c9e AC4A     		ldr	r2, .L267+16
 4046 1ca0 1068     		ldr	r0, [r2]	@ unaligned
 4047 1ca2 1860     		str	r0, [r3]	@ unaligned
 4048 1ca4 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4049 1ca6 9279     		ldrb	r2, [r2, #6]
 4050 1ca8 9980     		strh	r1, [r3, #4]	@ unaligned
 4051 1caa 9A71     		strb	r2, [r3, #6]
 747:..\src/command_processing.c ****                         case ROZA:
 4052              		.loc 1 747 0
 4053 1cac 0FE0     		b	.L231
 4054              	.L233:
 749:..\src/command_processing.c ****                         break;
 4055              		.loc 1 749 0
 4056 1cae 07F12403 		add	r3, r7, #36
 4057 1cb2 1846     		mov	r0, r3
 4058 1cb4 FFF7FEFF 		bl	strlen
 4059 1cb8 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 103


 4060 1cba 1A46     		mov	r2, r3
 4061 1cbc 07F12403 		add	r3, r7, #36
 4062 1cc0 1344     		add	r3, r3, r2
 4063 1cc2 A44A     		ldr	r2, .L267+20
 4064 1cc4 1068     		ldr	r0, [r2]	@ unaligned
 4065 1cc6 1860     		str	r0, [r3]	@ unaligned
 4066 1cc8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4067 1cca 9A80     		strh	r2, [r3, #4]	@ unaligned
 750:..\src/command_processing.c ****                     }   
 4068              		.loc 1 750 0
 4069 1ccc 00BF     		nop
 4070              	.L231:
 4071              		.loc 1 752 0
 4072 1cce 6BE0     		b	.L186
 4073              	.L196:
 753:..\src/command_processing.c ****                 case 9:     // driver type menu
 754:..\src/command_processing.c ****                     switch(*m_addr){
 4074              		.loc 1 754 0
 4075 1cd0 D7F8483C 		ldr	r3, [r7, #3144]
 4076 1cd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4077 1cd6 002B     		cmp	r3, #0
 4078 1cd8 02D0     		beq	.L236
 4079 1cda 012B     		cmp	r3, #1
 4080 1cdc 15D0     		beq	.L237
 755:..\src/command_processing.c ****                         case 0:
 756:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 757:..\src/command_processing.c ****                         break;
 758:..\src/command_processing.c ****                         case 1:
 759:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                     }
 762:..\src/command_processing.c ****                     break;
 4081              		.loc 1 762 0
 4082 1cde 63E0     		b	.L186
 4083              	.L236:
 756:..\src/command_processing.c ****                         break;
 4084              		.loc 1 756 0
 4085 1ce0 07F12403 		add	r3, r7, #36
 4086 1ce4 1846     		mov	r0, r3
 4087 1ce6 FFF7FEFF 		bl	strlen
 4088 1cea 0346     		mov	r3, r0
 4089 1cec 1A46     		mov	r2, r3
 4090 1cee 07F12403 		add	r3, r7, #36
 4091 1cf2 1344     		add	r3, r3, r2
 4092 1cf4 984A     		ldr	r2, .L267+24
 4093 1cf6 1D46     		mov	r5, r3
 4094 1cf8 1446     		mov	r4, r2
 4095 1cfa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4096 1cfc 2860     		str	r0, [r5]	@ unaligned
 4097 1cfe 6960     		str	r1, [r5, #4]	@ unaligned
 4098 1d00 AA60     		str	r2, [r5, #8]	@ unaligned
 4099 1d02 EB60     		str	r3, [r5, #12]	@ unaligned
 4100 1d04 2068     		ldr	r0, [r4]	@ unaligned
 4101 1d06 2861     		str	r0, [r5, #16]	@ unaligned
 757:..\src/command_processing.c ****                         case 1:
 4102              		.loc 1 757 0
 4103 1d08 16E0     		b	.L235
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 104


 4104              	.L237:
 759:..\src/command_processing.c ****                         break;
 4105              		.loc 1 759 0
 4106 1d0a 07F12403 		add	r3, r7, #36
 4107 1d0e 1846     		mov	r0, r3
 4108 1d10 FFF7FEFF 		bl	strlen
 4109 1d14 0346     		mov	r3, r0
 4110 1d16 1A46     		mov	r2, r3
 4111 1d18 07F12403 		add	r3, r7, #36
 4112 1d1c 1344     		add	r3, r3, r2
 4113 1d1e 8F4A     		ldr	r2, .L267+28
 4114 1d20 1D46     		mov	r5, r3
 4115 1d22 1446     		mov	r4, r2
 4116 1d24 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4117 1d26 2860     		str	r0, [r5]	@ unaligned
 4118 1d28 6960     		str	r1, [r5, #4]	@ unaligned
 4119 1d2a AA60     		str	r2, [r5, #8]	@ unaligned
 4120 1d2c EB60     		str	r3, [r5, #12]	@ unaligned
 4121 1d2e 2068     		ldr	r0, [r4]	@ unaligned
 4122 1d30 2861     		str	r0, [r5, #16]	@ unaligned
 4123 1d32 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4124 1d34 AB82     		strh	r3, [r5, #20]	@ unaligned
 760:..\src/command_processing.c ****                     }
 4125              		.loc 1 760 0
 4126 1d36 00BF     		nop
 4127              	.L235:
 4128              		.loc 1 762 0
 4129 1d38 36E0     		b	.L186
 4130              	.L197:
 763:..\src/command_processing.c ****                 case 10:    // device type menu
 764:..\src/command_processing.c ****                     switch(*m_addr){
 4131              		.loc 1 764 0
 4132 1d3a D7F8483C 		ldr	r3, [r7, #3144]
 4133 1d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4134 1d40 002B     		cmp	r3, #0
 4135 1d42 02D0     		beq	.L239
 4136 1d44 012B     		cmp	r3, #1
 4137 1d46 14D0     		beq	.L240
 765:..\src/command_processing.c ****                         case 0:
 766:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 767:..\src/command_processing.c ****                         break;
 768:..\src/command_processing.c ****                         case 1:
 769:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                     }
 772:..\src/command_processing.c ****                     break;
 4138              		.loc 1 772 0
 4139 1d48 2EE0     		b	.L186
 4140              	.L239:
 766:..\src/command_processing.c ****                         break;
 4141              		.loc 1 766 0
 4142 1d4a 07F12403 		add	r3, r7, #36
 4143 1d4e 1846     		mov	r0, r3
 4144 1d50 FFF7FEFF 		bl	strlen
 4145 1d54 0346     		mov	r3, r0
 4146 1d56 1A46     		mov	r2, r3
 4147 1d58 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 105


 4148 1d5c 1344     		add	r3, r3, r2
 4149 1d5e 804A     		ldr	r2, .L267+32
 4150 1d60 1C46     		mov	r4, r3
 4151 1d62 1346     		mov	r3, r2
 4152 1d64 07CB     		ldmia	r3!, {r0, r1, r2}
 4153 1d66 2060     		str	r0, [r4]	@ unaligned
 4154 1d68 6160     		str	r1, [r4, #4]	@ unaligned
 4155 1d6a A260     		str	r2, [r4, #8]	@ unaligned
 4156 1d6c 1B88     		ldrh	r3, [r3]	@ unaligned
 4157 1d6e A381     		strh	r3, [r4, #12]	@ unaligned
 767:..\src/command_processing.c ****                         case 1:
 4158              		.loc 1 767 0
 4159 1d70 14E0     		b	.L238
 4160              	.L240:
 769:..\src/command_processing.c ****                         break;
 4161              		.loc 1 769 0
 4162 1d72 07F12403 		add	r3, r7, #36
 4163 1d76 1846     		mov	r0, r3
 4164 1d78 FFF7FEFF 		bl	strlen
 4165 1d7c 0346     		mov	r3, r0
 4166 1d7e 1A46     		mov	r2, r3
 4167 1d80 07F12403 		add	r3, r7, #36
 4168 1d84 1344     		add	r3, r3, r2
 4169 1d86 774A     		ldr	r2, .L267+36
 4170 1d88 1D46     		mov	r5, r3
 4171 1d8a 1446     		mov	r4, r2
 4172 1d8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4173 1d8e 2860     		str	r0, [r5]	@ unaligned
 4174 1d90 6960     		str	r1, [r5, #4]	@ unaligned
 4175 1d92 AA60     		str	r2, [r5, #8]	@ unaligned
 4176 1d94 EB60     		str	r3, [r5, #12]	@ unaligned
 4177 1d96 2388     		ldrh	r3, [r4]	@ unaligned
 4178 1d98 2B82     		strh	r3, [r5, #16]	@ unaligned
 770:..\src/command_processing.c ****                     }
 4179              		.loc 1 770 0
 4180 1d9a 00BF     		nop
 4181              	.L238:
 4182              		.loc 1 772 0
 4183 1d9c 04E0     		b	.L186
 4184              	.L252:
 664:..\src/command_processing.c ****                 case 2:     // control mode menu
 4185              		.loc 1 664 0
 4186 1d9e 00BF     		nop
 4187 1da0 02E0     		b	.L186
 4188              	.L253:
 680:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4189              		.loc 1 680 0
 4190 1da2 00BF     		nop
 4191 1da4 00E0     		b	.L186
 4192              	.L254:
 724:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4193              		.loc 1 724 0
 4194 1da6 00BF     		nop
 4195              	.L186:
 773:..\src/command_processing.c ****             }
 774:..\src/command_processing.c ****             //Recomputes string lenght
 775:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 106


 4196              		.loc 1 775 0
 4197 1da8 07F12403 		add	r3, r7, #36
 4198 1dac 1846     		mov	r0, r3
 4199 1dae FFF7FEFF 		bl	strlen
 4200 1db2 0346     		mov	r3, r0
 4201 1db4 DBB2     		uxtb	r3, r3
 4202 1db6 0133     		adds	r3, r3, #1
 4203 1db8 87F8523C 		strb	r3, [r7, #3154]
 4204              	.L185:
 776:..\src/command_processing.c ****         }
 777:..\src/command_processing.c **** 
 778:..\src/command_processing.c ****         // Add parameter string to packet
 779:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4205              		.loc 1 779 0
 4206 1dbc 97F8523C 		ldrb	r3, [r7, #3154]
 4207 1dc0 87F8573C 		strb	r3, [r7, #3159]
 4208 1dc4 26E0     		b	.L241
 4209              	.L242:
 780:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4210              		.loc 1 780 0 discriminator 3
 4211 1dc6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4212 1dca 3222     		movs	r2, #50
 4213 1dcc 02FB03F3 		mul	r3, r2, r3
 4214 1dd0 1A1D     		adds	r2, r3, #4
 4215 1dd2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4216 1dd6 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4217 1dda 381D     		adds	r0, r7, #4
 4218 1ddc 0068     		ldr	r0, [r0]
 4219 1dde 0144     		add	r1, r1, r0
 4220 1de0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4221 1de2 01FB03F3 		mul	r3, r1, r3
 4222 1de6 1A44     		add	r2, r2, r3
 4223 1de8 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4224 1dec 1A44     		add	r2, r2, r3
 4225 1dee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4226 1df2 D31A     		subs	r3, r2, r3
 4227 1df4 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4228 1df8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 4229 1dfc 8A1A     		subs	r2, r1, r2
 4230 1dfe 07F12401 		add	r1, r7, #36
 4231 1e02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4232 1e04 07F15802 		add	r2, r7, #88
 4233 1e08 D154     		strb	r1, [r2, r3]
 779:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4234              		.loc 1 779 0 discriminator 3
 4235 1e0a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4236 1e0e 013B     		subs	r3, r3, #1
 4237 1e10 87F8573C 		strb	r3, [r7, #3159]
 4238              	.L241:
 779:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4239              		.loc 1 779 0 is_stmt 0 discriminator 1
 4240 1e14 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4241 1e18 002B     		cmp	r3, #0
 4242 1e1a D4D1     		bne	.L242
 781:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 782:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4243              		.loc 1 782 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 107


 4244 1e1c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4245 1e20 07F10802 		add	r2, r7, #8
 4246 1e24 1268     		ldr	r2, [r2]
 4247 1e26 1344     		add	r3, r3, r2
 4248 1e28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4249 1e2a 002B     		cmp	r3, #0
 4250 1e2c 21D1     		bne	.L243
 783:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4251              		.loc 1 783 0
 4252 1e2e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4253 1e32 3222     		movs	r2, #50
 4254 1e34 02FB03F3 		mul	r3, r2, r3
 4255 1e38 1A1D     		adds	r2, r3, #4
 4256 1e3a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4257 1e3e 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4258 1e42 381D     		adds	r0, r7, #4
 4259 1e44 0068     		ldr	r0, [r0]
 4260 1e46 0144     		add	r1, r1, r0
 4261 1e48 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4262 1e4a 01FB03F3 		mul	r3, r1, r3
 4263 1e4e 1A44     		add	r2, r2, r3
 4264 1e50 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4265 1e54 1344     		add	r3, r3, r2
 4266 1e56 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4267 1e5a D7F8681C 		ldr	r1, [r7, #3176]
 4268 1e5e 0A44     		add	r2, r2, r1
 4269 1e60 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4270 1e62 07F15802 		add	r2, r7, #88
 4271 1e66 D154     		strb	r1, [r2, r3]
 784:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4272              		.loc 1 784 0
 4273 1e68 97F8543C 		ldrb	r3, [r7, #3156]
 4274 1e6c 0133     		adds	r3, r3, #1
 4275 1e6e 87F8543C 		strb	r3, [r7, #3156]
 4276              	.L243:
 785:..\src/command_processing.c ****         }      
 786:..\src/command_processing.c ****         
 787:..\src/command_processing.c ****         // Add struct index after an empty bit
 788:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 789:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4277              		.loc 1 789 0
 4278 1e72 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4279 1e76 07F10802 		add	r2, r7, #8
 4280 1e7a 1268     		ldr	r2, [r2]
 4281 1e7c 1344     		add	r3, r3, r2
 4282 1e7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4283 1e80 002B     		cmp	r3, #0
 4284 1e82 1ED1     		bne	.L244
 790:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4285              		.loc 1 790 0
 4286 1e84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4287 1e88 3222     		movs	r2, #50
 4288 1e8a 02FB03F3 		mul	r3, r2, r3
 4289 1e8e 1A1D     		adds	r2, r3, #4
 4290 1e90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4291 1e94 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4292 1e98 381D     		adds	r0, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 108


 4293 1e9a 0068     		ldr	r0, [r0]
 4294 1e9c 0144     		add	r1, r1, r0
 4295 1e9e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4296 1ea0 01FB03F3 		mul	r3, r1, r3
 4297 1ea4 1A44     		add	r2, r2, r3
 4298 1ea6 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4299 1eaa 1344     		add	r3, r3, r2
 4300 1eac 0233     		adds	r3, r3, #2
 4301 1eae 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4302 1eb2 3946     		mov	r1, r7
 4303 1eb4 0968     		ldr	r1, [r1]
 4304 1eb6 0A44     		add	r2, r2, r1
 4305 1eb8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4306 1eba 07F15802 		add	r2, r7, #88
 4307 1ebe D154     		strb	r1, [r2, r3]
 4308 1ec0 1DE0     		b	.L245
 4309              	.L244:
 791:..\src/command_processing.c ****         }
 792:..\src/command_processing.c ****         else {
 793:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4310              		.loc 1 793 0
 4311 1ec2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4312 1ec6 3222     		movs	r2, #50
 4313 1ec8 02FB03F3 		mul	r3, r2, r3
 4314 1ecc 1A1D     		adds	r2, r3, #4
 4315 1ece 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4316 1ed2 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4317 1ed6 381D     		adds	r0, r7, #4
 4318 1ed8 0068     		ldr	r0, [r0]
 4319 1eda 0144     		add	r1, r1, r0
 4320 1edc 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4321 1ede 01FB03F3 		mul	r3, r1, r3
 4322 1ee2 1A44     		add	r2, r2, r3
 4323 1ee4 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4324 1ee8 1344     		add	r3, r3, r2
 4325 1eea 0133     		adds	r3, r3, #1
 4326 1eec 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4327 1ef0 3946     		mov	r1, r7
 4328 1ef2 0968     		ldr	r1, [r1]
 4329 1ef4 0A44     		add	r2, r2, r1
 4330 1ef6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4331 1ef8 07F15802 		add	r2, r7, #88
 4332 1efc D154     		strb	r1, [r2, r3]
 4333              	.L245:
 373:..\src/command_processing.c ****         
 4334              		.loc 1 373 0 discriminator 2
 4335 1efe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4336 1f02 0133     		adds	r3, r3, #1
 4337 1f04 87F8553C 		strb	r3, [r7, #3157]
 4338              	.L63:
 373:..\src/command_processing.c ****         
 4339              		.loc 1 373 0 is_stmt 0 discriminator 1
 4340 1f08 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4341 1f0c 232B     		cmp	r3, #35
 4342 1f0e 7EF6C4A8 		bls	.L246
 794:..\src/command_processing.c ****         }
 795:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 109


 796:..\src/command_processing.c **** 
 797:..\src/command_processing.c ****     // Add menu
 798:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4343              		.loc 1 798 0 is_stmt 1
 4344 1f12 0023     		movs	r3, #0
 4345 1f14 87F8563C 		strb	r3, [r7, #3158]
 4346 1f18 52E0     		b	.L247
 4347              	.L250:
 799:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4348              		.loc 1 799 0
 4349 1f1a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4350 1f1e 9B00     		lsls	r3, r3, #2
 4351 1f20 D7F8742C 		ldr	r2, [r7, #3188]
 4352 1f24 1344     		add	r3, r3, r2
 4353 1f26 1B68     		ldr	r3, [r3]
 4354 1f28 1846     		mov	r0, r3
 4355 1f2a FFF7FEFF 		bl	strlen
 4356 1f2e 0346     		mov	r3, r0
 4357 1f30 87F8523C 		strb	r3, [r7, #3154]
 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4358              		.loc 1 800 0
 4359 1f34 97F8523C 		ldrb	r3, [r7, #3154]
 4360 1f38 87F8573C 		strb	r3, [r7, #3159]
 4361 1f3c 37E0     		b	.L248
 4362              	.L268:
 4363 1f3e 00BF     		.align	2
 4364              	.L267:
 4365 1f40 BC000000 		.word	.LC92
 4366 1f44 F8000000 		.word	.LC96
 4367 1f48 00010000 		.word	.LC97
 4368 1f4c 08010000 		.word	.LC98
 4369 1f50 18010000 		.word	.LC99
 4370 1f54 20010000 		.word	.LC100
 4371 1f58 28010000 		.word	.LC101
 4372 1f5c 40010000 		.word	.LC102
 4373 1f60 58010000 		.word	.LC103
 4374 1f64 68010000 		.word	.LC104
 4375              	.L249:
 801:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4376              		.loc 1 801 0 discriminator 3
 4377 1f68 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4378 1f6c 9622     		movs	r2, #150
 4379 1f6e 02FB03F3 		mul	r3, r2, r3
 4380 1f72 03F20A72 		addw	r2, r3, #1802
 4381 1f76 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4382 1f7a 1A44     		add	r2, r2, r3
 4383 1f7c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4384 1f80 D31A     		subs	r3, r2, r3
 4385 1f82 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4386 1f86 9200     		lsls	r2, r2, #2
 4387 1f88 D7F8741C 		ldr	r1, [r7, #3188]
 4388 1f8c 0A44     		add	r2, r2, r1
 4389 1f8e 1268     		ldr	r2, [r2]
 4390 1f90 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4391 1f94 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4392 1f98 411A     		subs	r1, r0, r1
 4393 1f9a 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 110


 4394 1f9c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4395 1f9e 07F15802 		add	r2, r7, #88
 4396 1fa2 D154     		strb	r1, [r2, r3]
 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4397              		.loc 1 800 0 discriminator 3
 4398 1fa4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4399 1fa8 013B     		subs	r3, r3, #1
 4400 1faa 87F8573C 		strb	r3, [r7, #3159]
 4401              	.L248:
 800:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4402              		.loc 1 800 0 is_stmt 0 discriminator 1
 4403 1fae 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4404 1fb2 002B     		cmp	r3, #0
 4405 1fb4 D8D1     		bne	.L249
 798:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4406              		.loc 1 798 0 is_stmt 1 discriminator 2
 4407 1fb6 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4408 1fba 0133     		adds	r3, r3, #1
 4409 1fbc 87F8563C 		strb	r3, [r7, #3158]
 4410              	.L247:
 798:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4411              		.loc 1 798 0 is_stmt 0 discriminator 1
 4412 1fc0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4413 1fc4 072B     		cmp	r3, #7
 4414 1fc6 A8D9     		bls	.L250
 802:..\src/command_processing.c ****     }
 803:..\src/command_processing.c ****     
 804:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4415              		.loc 1 804 0 is_stmt 1
 4416 1fc8 B7F8503C 		ldrh	r3, [r7, #3152]
 4417 1fcc 5C1E     		subs	r4, r3, #1
 4418 1fce B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4419 1fd2 DBB2     		uxtb	r3, r3
 4420 1fd4 013B     		subs	r3, r3, #1
 4421 1fd6 DAB2     		uxtb	r2, r3
 4422 1fd8 07F15803 		add	r3, r7, #88
 4423 1fdc 1146     		mov	r1, r2
 4424 1fde 1846     		mov	r0, r3
 4425 1fe0 FFF7FEFF 		bl	LCRChecksum
 4426 1fe4 0346     		mov	r3, r0
 4427 1fe6 1A46     		mov	r2, r3
 4428 1fe8 07F15803 		add	r3, r7, #88
 4429 1fec 1A55     		strb	r2, [r3, r4]
 805:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4430              		.loc 1 805 0
 4431 1fee B7F8502C 		ldrh	r2, [r7, #3152]
 4432 1ff2 07F15803 		add	r3, r7, #88
 4433 1ff6 1146     		mov	r1, r2
 4434 1ff8 1846     		mov	r0, r3
 4435 1ffa FFF7FEFF 		bl	commWrite
 806:..\src/command_processing.c **** }
 4436              		.loc 1 806 0
 4437 1ffe 00BF     		nop
 4438 2000 07F65847 		addw	r7, r7, #3160
 4439              		.cfi_def_cfa_offset 16
 4440 2004 BD46     		mov	sp, r7
 4441              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 111


 4442              		@ sp needed
 4443 2006 B0BD     		pop	{r4, r5, r7, pc}
 4444              		.cfi_endproc
 4445              	.LFE67:
 4446              		.size	get_param_list, .-get_param_list
 4447              		.section	.rodata
 4448 017b 00       		.align	2
 4449              	.LC106:
 4450 017c 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4450      204E6F6E 
 4450      650A3120 
 4450      2D3E204C 
 4450      6F772028 
 4451 01ac 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4451      74657220 
 4451      72656164 
 4451      290A3220 
 4451      2D3E2048 
 4452 01dc 62697420 		.ascii	"bit register read)\012\000"
 4452      72656769 
 4452      73746572 
 4452      20726561 
 4452      64290A00 
 4453              		.align	2
 4454              	.LC107:
 4455 01f0 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4455      20557362 
 4455      0A31202D 
 4455      3E204861 
 4455      6E646C65 
 4456 021b 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4456      20454D47 
 4456      20496E74 
 4456      65677261 
 4456      6C0A3420 
 4457 0248 20416476 		.ascii	" Advanced\012\000"
 4457      616E6365 
 4457      640A00
 4458 0253 00       		.align	2
 4459              	.LC108:
 4460 0254 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4460      20506F73 
 4460      6974696F 
 4460      6E0A3120 
 4460      2D3E2050 
 4461 027e 6F736974 		.ascii	"osition and Current\012\000"
 4461      696F6E20 
 4461      616E6420 
 4461      43757272 
 4461      656E740A 
 4462 0293 00       		.align	2
 4463              	.LC109:
 4464 0294 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4464      20446561 
 4464      63746976 
 4464      61746520 
 4464      5B4E4F5D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 112


 4465 02be 0000     		.align	2
 4466              	.LC110:
 4467 02c0 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4467      20526967 
 4467      68740A31 
 4467      202D3E20 
 4467      4C656674 
 4468 02d6 0000     		.align	2
 4469              	.LC111:
 4470 02d8 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4470      204F4646 
 4470      0A31202D 
 4470      3E204F4E 
 4470      0A546865 
 4471 02ff 00       		.align	2
 4472              	.LC112:
 4473 0300 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4473      204E6F6E 
 4473      650A3120 
 4473      2D3E2053 
 4473      442F5254 
 4474 032d 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4474      0A33202D 
 4474      3E204F74 
 4474      68657220 
 4474      5B4E2F41 
 4475 0358 00       		.ascii	"\000"
 4476 0359 000000   		.align	2
 4477              	.LC113:
 4478 035c 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 4478      2047656E 
 4478      65726963 
 4478      20757365 
 4478      720A3120 
 4479 0386 20626F61 		.ascii	" board will reset\012\000"
 4479      72642077 
 4479      696C6C20 
 4479      72657365 
 4479      740A00
 4480 0399 000000   		.align	2
 4481              	.LC114:
 4482 039c 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4482      204D4333 
 4482      33383837 
 4482      20285374 
 4482      616E6461 
 4483 03cc 290A5468 		.ascii	")\012The board will reset\012\000"
 4483      6520626F 
 4483      61726420 
 4483      77696C6C 
 4483      20726573 
 4484              		.align	2
 4485              	.LC115:
 4486 03e4 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\012The b"
 4486      20534F46 
 4486      5448414E 
 4486      44205052 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 113


 4486      4F0A3120 
 4487 0411 6F617264 		.ascii	"oard will reset\012\000"
 4487      2077696C 
 4487      6C207265 
 4487      7365740A 
 4487      00
 4488 0422 0000     		.align	2
 4489              	.LC0:
 4490 0424 02       		.byte	2
 4491 0425 07       		.byte	7
 4492 0426 07       		.byte	7
 4493 0427 00       		.byte	0
 4494 0428 00       		.byte	0
 4495 0429 00       		.byte	0
 4496 042a 02       		.byte	2
 4497 042b 03       		.byte	3
 4498 042c 07       		.byte	7
 4499 042d 00       		.byte	0
 4500 042e 05       		.byte	5
 4501 042f 05       		.byte	5
 4502 0430 03       		.byte	3
 4503 0431 04       		.byte	4
 4504 0432 00       		.byte	0
 4505 0433 06       		.byte	6
 4506 0434 02       		.byte	2
 4507 0435 00       		.byte	0
 4508 0436 01       		.byte	1
 4509 0437 00       		.byte	0
 4510 0438 07       		.byte	7
 4511 0439 02       		.byte	2
 4512 043a 05       		.byte	5
 4513 043b 05       		.byte	5
 4514 043c 05       		.byte	5
 4515 043d 00       		.byte	0
 4516 043e 00       		.byte	0
 4517 043f 00       		.byte	0
 4518 0440 00       		.byte	0
 4519 0441 00       		.byte	0
 4520 0442 00       		.byte	0
 4521 0443 02       		.byte	2
 4522 0444 00       		.byte	0
 4523 0445 02       		.byte	2
 4524 0446 00       		.byte	0
 4525 0447 09       		.byte	9
 4526 0448 02       		.byte	2
 4527 0449 00       		.byte	0
 4528 044a 02       		.byte	2
 4529 044b 00       		.byte	0
 4530 044c 02       		.byte	2
 4531 044d 01       		.byte	1
 4532 044e 00       		.byte	0
 4533 044f 07       		.byte	7
 4534 0450 07       		.byte	7
 4535 0451 00       		.byte	0
 4536 0452 00       		.byte	0
 4537 0453 00       		.byte	0
 4538 0454 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 114


 4539 0455 03       		.byte	3
 4540 0456 07       		.byte	7
 4541 0457 00       		.byte	0
 4542 0458 05       		.byte	5
 4543 0459 05       		.byte	5
 4544 045a 03       		.byte	3
 4545 045b 00       		.byte	0
 4546 045c 01       		.byte	1
 4547 045d 00       		.byte	0
 4548 045e 07       		.byte	7
 4549 045f 02       		.byte	2
 4550 0460 00       		.byte	0
 4551 0461 02       		.byte	2
 4552 0462 00       		.byte	0
 4553 0463 02       		.byte	2
 4554 0464 01       		.byte	1
 4555 0465 02       		.byte	2
 4556 0466 02       		.byte	2
 4557 0467 00       		.byte	0
 4558 0468 02       		.byte	2
 4559 0469 02       		.byte	2
 4560 046a 00       		.byte	0
 4561 046b 00       		.align	2
 4562              	.LC1:
 4563 046c 31202D20 		.ascii	"1 - Device ID:\000"
 4563      44657669 
 4563      63652049 
 4563      443A00
 4564 047b 00       		.align	2
 4565              	.LC2:
 4566 047c 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 4566      506F7369 
 4566      74696F6E 
 4566      20504944 
 4566      205B502C 
 4567              		.align	2
 4568              	.LC3:
 4569 0498 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 4569      43757272 
 4569      656E7420 
 4569      50494420 
 4569      5B502C20 
 4570 04b3 00       		.align	2
 4571              	.LC4:
 4572 04b4 34202D20 		.ascii	"4 - Startup Activation:\000"
 4572      53746172 
 4572      74757020 
 4572      41637469 
 4572      76617469 
 4573              		.align	2
 4574              	.LC5:
 4575 04cc 35202D20 		.ascii	"5 - Input mode:\000"
 4575      496E7075 
 4575      74206D6F 
 4575      64653A00 
 4576              		.align	2
 4577              	.LC6:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 115


 4578 04dc 36202D20 		.ascii	"6 - Control mode:\000"
 4578      436F6E74 
 4578      726F6C20 
 4578      6D6F6465 
 4578      3A00
 4579 04ee 0000     		.align	2
 4580              	.LC7:
 4581 04f0 37202D20 		.ascii	"7 - Resolutions:\000"
 4581      5265736F 
 4581      6C757469 
 4581      6F6E733A 
 4581      00
 4582 0501 000000   		.align	2
 4583              	.LC8:
 4584 0504 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 4584      4D656173 
 4584      7572656D 
 4584      656E7420 
 4584      4F666673 
 4585 051d 000000   		.align	2
 4586              	.LC9:
 4587 0520 39202D20 		.ascii	"9 - Multipliers:\000"
 4587      4D756C74 
 4587      69706C69 
 4587      6572733A 
 4587      00
 4588 0531 000000   		.align	2
 4589              	.LC10:
 4590 0534 3130202D 		.ascii	"10 - Pos. limit active:\000"
 4590      20506F73 
 4590      2E206C69 
 4590      6D697420 
 4590      61637469 
 4591              		.align	2
 4592              	.LC11:
 4593 054c 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 4593      20506F73 
 4593      2E206C69 
 4593      6D697473 
 4593      205B696E 
 4594 0569 000000   		.align	2
 4595              	.LC12:
 4596 056c 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 4596      204D6178 
 4596      20737465 
 4596      7073205B 
 4596      6E65672C 
 4597 0587 00       		.align	2
 4598              	.LC13:
 4599 0588 3133202D 		.ascii	"13 - Current limit:\000"
 4599      20437572 
 4599      72656E74 
 4599      206C696D 
 4599      69743A00 
 4600              		.align	2
 4601              	.LC14:
 4602 059c 3134202D 		.ascii	"14 - EMG thresholds:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 116


 4602      20454D47 
 4602      20746872 
 4602      6573686F 
 4602      6C64733A 
 4603 05b1 000000   		.align	2
 4604              	.LC15:
 4605 05b4 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 4605      20454D47 
 4605      2063616C 
 4605      69627261 
 4605      74696F6E 
 4606 05d5 000000   		.align	2
 4607              	.LC16:
 4608 05d8 3136202D 		.ascii	"16 - EMG max values:\000"
 4608      20454D47 
 4608      206D6178 
 4608      2076616C 
 4608      7565733A 
 4609 05ed 000000   		.align	2
 4610              	.LC17:
 4611 05f0 3137202D 		.ascii	"17 - EMG max speed:\000"
 4611      20454D47 
 4611      206D6178 
 4611      20737065 
 4611      65643A00 
 4612              		.align	2
 4613              	.LC18:
 4614 0604 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 4614      20416273 
 4614      6F6C7574 
 4614      6520656E 
 4614      636F6465 
 4615              		.align	2
 4616              	.LC19:
 4617 0624 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 4617      204D6F74 
 4617      6F722068 
 4617      616E646C 
 4617      65207261 
 4618 063d 000000   		.align	2
 4619              	.LC20:
 4620 0640 3230202D 		.ascii	"20 - PWM rescaling:\000"
 4620      2050574D 
 4620      20726573 
 4620      63616C69 
 4620      6E673A00 
 4621              		.align	2
 4622              	.LC21:
 4623 0654 3231202D 		.ascii	"21 - Current lookup:\000"
 4623      20437572 
 4623      72656E74 
 4623      206C6F6F 
 4623      6B75703A 
 4624 0669 000000   		.align	2
 4625              	.LC22:
 4626 066c 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 4626      20446174 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 117


 4626      65206F66 
 4626      206D6169 
 4626      6E74656E 
 4627 068e 0000     		.align	2
 4628              	.LC23:
 4629 0690 3233202D 		.ascii	"23 - Rest position:\000"
 4629      20526573 
 4629      7420706F 
 4629      73697469 
 4629      6F6E3A00 
 4630              		.align	2
 4631              	.LC24:
 4632 06a4 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 4632      20526573 
 4632      7420706F 
 4632      73697469 
 4632      6F6E2074 
 4633              		.align	2
 4634              	.LC25:
 4635 06c8 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 4635      20526573 
 4635      74207665 
 4635      6C20636C 
 4635      6F737572 
 4636 06eb 00       		.align	2
 4637              	.LC26:
 4638 06ec 3236202D 		.ascii	"26 - Rest position enabled:\000"
 4638      20526573 
 4638      7420706F 
 4638      73697469 
 4638      6F6E2065 
 4639              		.align	2
 4640              	.LC27:
 4641 0708 3237202D 		.ascii	"27 - EMG inversion:\000"
 4641      20454D47 
 4641      20696E76 
 4641      65727369 
 4641      6F6E3A00 
 4642              		.align	2
 4643              	.LC28:
 4644 071c 3238202D 		.ascii	"28 - Hand side:\000"
 4644      2048616E 
 4644      64207369 
 4644      64653A00 
 4645              		.align	2
 4646              	.LC29:
 4647 072c 3239202D 		.ascii	"29 - Enable IMUs:\000"
 4647      20456E61 
 4647      626C6520 
 4647      494D5573 
 4647      3A00
 4648 073e 0000     		.align	2
 4649              	.LC30:
 4650 0740 3330202D 		.ascii	"30 - Read Expansion port:\000"
 4650      20526561 
 4650      64204578 
 4650      70616E73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 118


 4650      696F6E20 
 4651 075a 0000     		.align	2
 4652              	.LC31:
 4653 075c 3331202D 		.ascii	"31 - Reset counters:\000"
 4653      20526573 
 4653      65742063 
 4653      6F756E74 
 4653      6572733A 
 4654 0771 000000   		.align	2
 4655              	.LC32:
 4656 0774 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 4656      204C6173 
 4656      74206368 
 4656      65636B65 
 4656      64205469 
 4657 079a 0000     		.align	2
 4658              	.LC33:
 4659 079c 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 4659      20535049 
 4659      20726561 
 4659      64206465 
 4659      6C617920 
 4660 07b7 00       		.align	2
 4661              	.LC34:
 4662 07b8 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 4662      204F6E20 
 4662      626F6172 
 4662      6420494D 
 4662      5520636F 
 4663 07dd 000000   		.align	2
 4664              	.LC35:
 4665 07e0 3335202D 		.ascii	"35 - User ID:\000"
 4665      20557365 
 4665      72204944 
 4665      3A00
 4666 07ee 0000     		.align	2
 4667              	.LC36:
 4668 07f0 3336202D 		.ascii	"36 - User code:\000"
 4668      20557365 
 4668      7220636F 
 4668      64653A00 
 4669              		.align	2
 4670              	.LC37:
 4671 0800 3337202D 		.ascii	"37 - Associated encoder line:\000"
 4671      20417373 
 4671      6F636961 
 4671      74656420 
 4671      656E636F 
 4672 081e 0000     		.align	2
 4673              	.LC38:
 4674 0820 3338202D 		.ascii	"38 - Driver type:\000"
 4674      20447269 
 4674      76657220 
 4674      74797065 
 4674      3A00
 4675 0832 0000     		.align	2
 4676              	.LC39:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 119


 4677 0834 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 4677      2050574D 
 4677      20726174 
 4677      65206C69 
 4677      6D697465 
 4678 084b 00       		.align	2
 4679              	.LC40:
 4680 084c 3430202D 		.ascii	"40 - Not reversible:\000"
 4680      204E6F74 
 4680      20726576 
 4680      65727369 
 4680      626C653A 
 4681 0861 000000   		.align	2
 4682              	.LC41:
 4683 0864 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 4683      20456E63 
 4683      20696478 
 4683      20757365 
 4683      6420666F 
 4684 0883 00       		.align	2
 4685              	.LC42:
 4686 0884 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 4686      20476561 
 4686      72207061 
 4686      72616D73 
 4686      5B4E312C 
 4687 08a2 0000     		.align	2
 4688              	.LC43:
 4689 08a4 3433202D 		.ascii	"43 - Use second motor:\000"
 4689      20557365 
 4689      20736563 
 4689      6F6E6420 
 4689      6D6F746F 
 4690 08bb 00       		.align	2
 4691              	.LC44:
 4692 08bc 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 4692      20506F73 
 4692      6974696F 
 4692      6E205049 
 4692      44205B50 
 4693 08d9 000000   		.align	2
 4694              	.LC45:
 4695 08dc 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 4695      20437572 
 4695      72656E74 
 4695      20504944 
 4695      205B502C 
 4696              		.align	2
 4697              	.LC46:
 4698 08f8 3436202D 		.ascii	"46 - Startup Activation:\000"
 4698      20537461 
 4698      72747570 
 4698      20416374 
 4698      69766174 
 4699 0911 000000   		.align	2
 4700              	.LC47:
 4701 0914 3437202D 		.ascii	"47 - Input mode:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 120


 4701      20496E70 
 4701      7574206D 
 4701      6F64653A 
 4701      00
 4702 0925 000000   		.align	2
 4703              	.LC48:
 4704 0928 3438202D 		.ascii	"48 - Control mode:\000"
 4704      20436F6E 
 4704      74726F6C 
 4704      206D6F64 
 4704      653A00
 4705 093b 00       		.align	2
 4706              	.LC49:
 4707 093c 3439202D 		.ascii	"49 - Resolutions:\000"
 4707      20526573 
 4707      6F6C7574 
 4707      696F6E73 
 4707      3A00
 4708 094e 0000     		.align	2
 4709              	.LC50:
 4710 0950 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 4710      204D6561 
 4710      73757265 
 4710      6D656E74 
 4710      204F6666 
 4711 096a 0000     		.align	2
 4712              	.LC51:
 4713 096c 3531202D 		.ascii	"51 - Multipliers:\000"
 4713      204D756C 
 4713      7469706C 
 4713      69657273 
 4713      3A00
 4714 097e 0000     		.align	2
 4715              	.LC52:
 4716 0980 3532202D 		.ascii	"52 - Pos. limit active:\000"
 4716      20506F73 
 4716      2E206C69 
 4716      6D697420 
 4716      61637469 
 4717              		.align	2
 4718              	.LC53:
 4719 0998 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 4719      20506F73 
 4719      2E206C69 
 4719      6D697473 
 4719      205B696E 
 4720 09b5 000000   		.align	2
 4721              	.LC54:
 4722 09b8 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 4722      204D6178 
 4722      20737465 
 4722      7073205B 
 4722      6E65672C 
 4723 09d3 00       		.align	2
 4724              	.LC55:
 4725 09d4 3535202D 		.ascii	"55 - Current limit:\000"
 4725      20437572 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 121


 4725      72656E74 
 4725      206C696D 
 4725      69743A00 
 4726              		.align	2
 4727              	.LC56:
 4728 09e8 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 4728      20416273 
 4728      6F6C7574 
 4728      6520656E 
 4728      636F6465 
 4729              		.align	2
 4730              	.LC57:
 4731 0a08 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 4731      204D6F74 
 4731      6F722068 
 4731      616E646C 
 4731      65207261 
 4732 0a21 000000   		.align	2
 4733              	.LC58:
 4734 0a24 3538202D 		.ascii	"58 - PWM rescaling:\000"
 4734      2050574D 
 4734      20726573 
 4734      63616C69 
 4734      6E673A00 
 4735              		.align	2
 4736              	.LC59:
 4737 0a38 3539202D 		.ascii	"59 - Current lookup:\000"
 4737      20437572 
 4737      72656E74 
 4737      206C6F6F 
 4737      6B75703A 
 4738 0a4d 000000   		.align	2
 4739              	.LC60:
 4740 0a50 3630202D 		.ascii	"60 - Associated encoder line:\000"
 4740      20417373 
 4740      6F636961 
 4740      74656420 
 4740      656E636F 
 4741 0a6e 0000     		.align	2
 4742              	.LC61:
 4743 0a70 3631202D 		.ascii	"61 - Driver type:\000"
 4743      20447269 
 4743      76657220 
 4743      74797065 
 4743      3A00
 4744 0a82 0000     		.align	2
 4745              	.LC62:
 4746 0a84 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 4746      2050574D 
 4746      20726174 
 4746      65206C69 
 4746      6D697465 
 4747 0a9b 00       		.align	2
 4748              	.LC63:
 4749 0a9c 3633202D 		.ascii	"63 - Not reversible:\000"
 4749      204E6F74 
 4749      20726576 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 122


 4749      65727369 
 4749      626C653A 
 4750 0ab1 000000   		.align	2
 4751              	.LC64:
 4752 0ab4 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 4752      20456E63 
 4752      20696478 
 4752      20757365 
 4752      6420666F 
 4753 0ad3 00       		.align	2
 4754              	.LC65:
 4755 0ad4 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 4755      20476561 
 4755      72207061 
 4755      72616D73 
 4755      5B4E312C 
 4756 0af2 0000     		.align	2
 4757              	.LC66:
 4758 0af4 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 4758      20526561 
 4758      6420656E 
 4758      63207261 
 4758      77206C69 
 4759 0b0e 0000     		.align	2
 4760              	.LC67:
 4761 0b10 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 4761      20526561 
 4761      6420656E 
 4761      63207261 
 4761      77206C69 
 4762 0b2a 0000     		.align	2
 4763              	.LC68:
 4764 0b2c 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 4764      20526561 
 4764      64206164 
 4764      64697469 
 4764      6F6E616C 
 4765 0b4b 00       		.align	2
 4766              	.LC69:
 4767 0b4c 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 4767      20414443 
 4767      20636861 
 4767      6E6E656C 
 4767      205B312D 
 4768              		.align	2
 4769              	.LC70:
 4770 0b64 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 4770      20414443 
 4770      20636861 
 4770      6E6E656C 
 4770      205B372D 
 4771 0b7d 000000   		.align	2
 4772              	.LC71:
 4773 0b80 3731202D 		.ascii	"71 - Device type:\000"
 4773      20446576 
 4773      69636520 
 4773      74797065 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 123


 4773      3A00
 4774 0b92 0000     		.align	2
 4775              	.LC105:
 4776 0b94 6C040000 		.word	.LC1
 4777 0b98 7C040000 		.word	.LC2
 4778 0b9c 98040000 		.word	.LC3
 4779 0ba0 B4040000 		.word	.LC4
 4780 0ba4 CC040000 		.word	.LC5
 4781 0ba8 DC040000 		.word	.LC6
 4782 0bac F0040000 		.word	.LC7
 4783 0bb0 04050000 		.word	.LC8
 4784 0bb4 20050000 		.word	.LC9
 4785 0bb8 34050000 		.word	.LC10
 4786 0bbc 4C050000 		.word	.LC11
 4787 0bc0 6C050000 		.word	.LC12
 4788 0bc4 88050000 		.word	.LC13
 4789 0bc8 9C050000 		.word	.LC14
 4790 0bcc B4050000 		.word	.LC15
 4791 0bd0 D8050000 		.word	.LC16
 4792 0bd4 F0050000 		.word	.LC17
 4793 0bd8 04060000 		.word	.LC18
 4794 0bdc 24060000 		.word	.LC19
 4795 0be0 40060000 		.word	.LC20
 4796 0be4 54060000 		.word	.LC21
 4797 0be8 6C060000 		.word	.LC22
 4798 0bec 90060000 		.word	.LC23
 4799 0bf0 A4060000 		.word	.LC24
 4800 0bf4 C8060000 		.word	.LC25
 4801 0bf8 EC060000 		.word	.LC26
 4802 0bfc 08070000 		.word	.LC27
 4803 0c00 1C070000 		.word	.LC28
 4804 0c04 2C070000 		.word	.LC29
 4805 0c08 40070000 		.word	.LC30
 4806 0c0c 5C070000 		.word	.LC31
 4807 0c10 74070000 		.word	.LC32
 4808 0c14 9C070000 		.word	.LC33
 4809 0c18 B8070000 		.word	.LC34
 4810 0c1c E0070000 		.word	.LC35
 4811 0c20 F0070000 		.word	.LC36
 4812 0c24 00080000 		.word	.LC37
 4813 0c28 20080000 		.word	.LC38
 4814 0c2c 34080000 		.word	.LC39
 4815 0c30 4C080000 		.word	.LC40
 4816 0c34 64080000 		.word	.LC41
 4817 0c38 84080000 		.word	.LC42
 4818 0c3c A4080000 		.word	.LC43
 4819 0c40 BC080000 		.word	.LC44
 4820 0c44 DC080000 		.word	.LC45
 4821 0c48 F8080000 		.word	.LC46
 4822 0c4c 14090000 		.word	.LC47
 4823 0c50 28090000 		.word	.LC48
 4824 0c54 3C090000 		.word	.LC49
 4825 0c58 50090000 		.word	.LC50
 4826 0c5c 6C090000 		.word	.LC51
 4827 0c60 80090000 		.word	.LC52
 4828 0c64 98090000 		.word	.LC53
 4829 0c68 B8090000 		.word	.LC54
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 124


 4830 0c6c D4090000 		.word	.LC55
 4831 0c70 E8090000 		.word	.LC56
 4832 0c74 080A0000 		.word	.LC57
 4833 0c78 240A0000 		.word	.LC58
 4834 0c7c 380A0000 		.word	.LC59
 4835 0c80 500A0000 		.word	.LC60
 4836 0c84 700A0000 		.word	.LC61
 4837 0c88 840A0000 		.word	.LC62
 4838 0c8c 9C0A0000 		.word	.LC63
 4839 0c90 B40A0000 		.word	.LC64
 4840 0c94 D40A0000 		.word	.LC65
 4841 0c98 F40A0000 		.word	.LC66
 4842 0c9c 100B0000 		.word	.LC67
 4843 0ca0 2C0B0000 		.word	.LC68
 4844 0ca4 4C0B0000 		.word	.LC69
 4845 0ca8 640B0000 		.word	.LC70
 4846 0cac 800B0000 		.word	.LC71
 4847              		.align	2
 4848              	.LC73:
 4849 0cb0 03       		.byte	3
 4850 0cb1 01       		.byte	1
 4851 0cb2 02       		.byte	2
 4852 0cb3 03       		.byte	3
 4853 0cb4 03       		.byte	3
 4854 0cb5 03       		.byte	3
 4855 0cb6 03       		.byte	3
 4856 0cb7 03       		.byte	3
 4857 0cb8 03       		.byte	3
 4858 0cb9 04       		.byte	4
 4859 0cba 05       		.byte	5
 4860 0cbb 06       		.byte	6
 4861 0cbc 03       		.byte	3
 4862 0cbd 07       		.byte	7
 4863 0cbe 08       		.byte	8
 4864 0cbf 09       		.byte	9
 4865 0cc0 03       		.byte	3
 4866 0cc1 05       		.byte	5
 4867 0cc2 03       		.byte	3
 4868 0cc3 01       		.byte	1
 4869 0cc4 02       		.byte	2
 4870 0cc5 03       		.byte	3
 4871 0cc6 03       		.byte	3
 4872 0cc7 03       		.byte	3
 4873 0cc8 09       		.byte	9
 4874 0cc9 03       		.byte	3
 4875 0cca 05       		.byte	5
 4876 0ccb 0A       		.byte	10
 4877              		.align	2
 4878              	.LC74:
 4879 0ccc 02       		.byte	2
 4880 0ccd 03       		.byte	3
 4881 0cce 08       		.byte	8
 4882 0ccf 0B       		.byte	11
 4883 0cd0 17       		.byte	23
 4884 0cd1 2C       		.byte	44
 4885 0cd2 2D       		.byte	45
 4886 0cd3 32       		.byte	50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 125


 4887 0cd4 35       		.byte	53
 4888 0cd5 000000   		.align	2
 4889              	.LC75:
 4890 0cd8 02       		.byte	2
 4891 0cd9 03       		.byte	3
 4892 0cda 05       		.byte	5
 4893 0cdb 08       		.byte	8
 4894 0cdc 0B       		.byte	11
 4895 0cdd 17       		.byte	23
 4896 0cde 18       		.byte	24
 4897 0cdf 1C       		.byte	28
 4898 0ce0 1F       		.byte	31
 4899 0ce1 20       		.byte	32
 4900 0ce2 26       		.byte	38
 4901 0ce3 2C       		.byte	44
 4902 0ce4 2D       		.byte	45
 4903 0ce5 2F       		.byte	47
 4904 0ce6 32       		.byte	50
 4905 0ce7 35       		.byte	53
 4906 0ce8 3D       		.byte	61
 4907 0ce9 47       		.byte	71
 4908              		.section	.text.manage_param_list,"ax",%progbits
 4909              		.align	2
 4910              		.global	manage_param_list
 4911              		.thumb
 4912              		.thumb_func
 4913              		.type	manage_param_list, %function
 4914              	manage_param_list:
 4915              	.LFB68:
 807:..\src/command_processing.c **** 
 808:..\src/command_processing.c **** //==============================================================================
 809:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 810:..\src/command_processing.c **** //==============================================================================
 811:..\src/command_processing.c **** 
 812:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 4916              		.loc 1 812 0
 4917              		.cfi_startproc
 4918              		@ args = 0, pretend = 0, frame = 1192
 4919              		@ frame_needed = 1, uses_anonymous_args = 0
 4920 0000 B0B5     		push	{r4, r5, r7, lr}
 4921              		.cfi_def_cfa_offset 16
 4922              		.cfi_offset 4, -16
 4923              		.cfi_offset 5, -12
 4924              		.cfi_offset 7, -8
 4925              		.cfi_offset 14, -4
 4926 0002 ADF5976D 		sub	sp, sp, #1208
 4927              		.cfi_def_cfa_offset 1224
 4928 0006 04AF     		add	r7, sp, #16
 4929              		.cfi_def_cfa 7, 1208
 4930 0008 0246     		mov	r2, r0
 4931 000a BB1D     		adds	r3, r7, #6
 4932 000c 1A80     		strh	r2, [r3]	@ movhi
 813:..\src/command_processing.c ****     uint8 CYDATA i, j;
 814:..\src/command_processing.c ****     uint8 CYDATA sod;
 815:..\src/command_processing.c ****     uint8 PARAM_IDX;
 816:..\src/command_processing.c ****     int16 aux_int16;
 817:..\src/command_processing.c ****     uint16 aux_uint16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 126


 818:..\src/command_processing.c ****     int32 aux_int32;
 819:..\src/command_processing.c ****     uint32 aux_uint32;
 820:..\src/command_processing.c ****     float aux_float;
 821:..\src/command_processing.c ****  
 822:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 4933              		.loc 1 822 0
 4934 000e 0023     		movs	r3, #0
 4935 0010 87F89D34 		strb	r3, [r7, #1181]
 823:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 4936              		.loc 1 823 0
 4937 0014 0123     		movs	r3, #1
 4938 0016 87F89C34 		strb	r3, [r7, #1180]
 824:..\src/command_processing.c ****     
 825:..\src/command_processing.c ****     // Arrays
 826:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 4939              		.loc 1 826 0
 4940 001a 054B     		ldr	r3, .L331
 4941 001c C7F8A034 		str	r3, [r7, #1184]
 827:..\src/command_processing.c ****     
 828:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 4942              		.loc 1 828 0
 4943 0020 BB1D     		adds	r3, r7, #6
 4944 0022 1B88     		ldrh	r3, [r3]
 4945 0024 002B     		cmp	r3, #0
 4946 0026 07D0     		beq	.L270
 829:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 4947              		.loc 1 829 0
 4948 0028 024B     		ldr	r3, .L331+4
 4949 002a C7F8A034 		str	r3, [r7, #1184]
 4950 002e 03E0     		b	.L332
 4951              	.L333:
 4952              		.align	2
 4953              	.L331:
 4954 0030 00000000 		.word	c_mem
 4955 0034 00000000 		.word	g_mem
 4956              	.L332:
 4957              	.L270:
 830:..\src/command_processing.c ****     }
 831:..\src/command_processing.c ****  
 832:..\src/command_processing.c ****     
 833:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 834:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 835:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4958              		.loc 1 835 0
 4959 0038 D7F8A034 		ldr	r3, [r7, #1184]
 4960 003c 03F1A002 		add	r2, r3, #160
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4961              		.loc 1 834 0
 4962 0040 07F55B73 		add	r3, r7, #876
 4963 0044 1A60     		str	r2, [r3]
 836:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 4964              		.loc 1 836 0
 4965 0046 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 4966 004a 1346     		mov	r3, r2
 4967 004c DB00     		lsls	r3, r3, #3
 4968 004e 9B1A     		subs	r3, r3, r2
 4969 0050 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 127


 4970 0052 B033     		adds	r3, r3, #176
 4971 0054 D7F8A024 		ldr	r2, [r7, #1184]
 4972 0058 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4973              		.loc 1 834 0
 4974 005a 07F55B73 		add	r3, r7, #876
 4975 005e 5A60     		str	r2, [r3, #4]
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 4976              		.loc 1 837 0
 4977 0060 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 4978 0064 1346     		mov	r3, r2
 4979 0066 DB00     		lsls	r3, r3, #3
 4980 0068 9B1A     		subs	r3, r3, r2
 4981 006a 1B01     		lsls	r3, r3, #4
 4982 006c B833     		adds	r3, r3, #184
 4983 006e D7F8A024 		ldr	r2, [r7, #1184]
 4984 0072 1344     		add	r3, r3, r2
 4985 0074 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4986              		.loc 1 834 0
 4987 0076 07F55B73 		add	r3, r7, #876
 4988 007a 9A60     		str	r2, [r3, #8]
 838:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 4989              		.loc 1 838 0
 4990 007c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 4991 0080 1346     		mov	r3, r2
 4992 0082 DB00     		lsls	r3, r3, #3
 4993 0084 9B1A     		subs	r3, r3, r2
 4994 0086 1B01     		lsls	r3, r3, #4
 4995 0088 E033     		adds	r3, r3, #224
 4996 008a D7F8A024 		ldr	r2, [r7, #1184]
 4997 008e 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4998              		.loc 1 834 0
 4999 0090 07F55B73 		add	r3, r7, #876
 5000 0094 DA60     		str	r2, [r3, #12]
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5001              		.loc 1 839 0
 5002 0096 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5003 009a 1346     		mov	r3, r2
 5004 009c DB00     		lsls	r3, r3, #3
 5005 009e 9B1A     		subs	r3, r3, r2
 5006 00a0 1B01     		lsls	r3, r3, #4
 5007 00a2 03F58473 		add	r3, r3, #264
 5008 00a6 D7F8A024 		ldr	r2, [r7, #1184]
 5009 00aa 1344     		add	r3, r3, r2
 5010 00ac 9A1D     		adds	r2, r3, #6
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5011              		.loc 1 834 0
 5012 00ae 07F55B73 		add	r3, r7, #876
 5013 00b2 1A61     		str	r2, [r3, #16]
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5014              		.loc 1 840 0
 5015 00b4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5016 00b8 1346     		mov	r3, r2
 5017 00ba DB00     		lsls	r3, r3, #3
 5018 00bc 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 128


 5019 00be 1B01     		lsls	r3, r3, #4
 5020 00c0 03F58473 		add	r3, r3, #264
 5021 00c4 D7F8A024 		ldr	r2, [r7, #1184]
 5022 00c8 1344     		add	r3, r3, r2
 5023 00ca DA1D     		adds	r2, r3, #7
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5024              		.loc 1 834 0
 5025 00cc 07F55B73 		add	r3, r7, #876
 5026 00d0 5A61     		str	r2, [r3, #20]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 5027              		.loc 1 841 0
 5028 00d2 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5029 00d6 D7F8A014 		ldr	r1, [r7, #1184]
 5030 00da 1346     		mov	r3, r2
 5031 00dc DB00     		lsls	r3, r3, #3
 5032 00de 9B1A     		subs	r3, r3, r2
 5033 00e0 1B01     		lsls	r3, r3, #4
 5034 00e2 0B44     		add	r3, r3, r1
 5035 00e4 03F58873 		add	r3, r3, #272
 5036 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5037 00ea 1A46     		mov	r2, r3
 5038 00ec 1346     		mov	r3, r2
 5039 00ee 5B00     		lsls	r3, r3, #1
 5040 00f0 1344     		add	r3, r3, r2
 5041 00f2 1B01     		lsls	r3, r3, #4
 5042 00f4 03F5C873 		add	r3, r3, #400
 5043 00f8 D7F8A024 		ldr	r2, [r7, #1184]
 5044 00fc 1344     		add	r3, r3, r2
 5045 00fe 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5046              		.loc 1 834 0
 5047 0100 07F55B73 		add	r3, r7, #876
 5048 0104 9A61     		str	r2, [r3, #24]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5049              		.loc 1 842 0
 5050 0106 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5051 010a D7F8A014 		ldr	r1, [r7, #1184]
 5052 010e 1346     		mov	r3, r2
 5053 0110 DB00     		lsls	r3, r3, #3
 5054 0112 9B1A     		subs	r3, r3, r2
 5055 0114 1B01     		lsls	r3, r3, #4
 5056 0116 0B44     		add	r3, r3, r1
 5057 0118 03F58873 		add	r3, r3, #272
 5058 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5059 011e 1A46     		mov	r2, r3
 5060 0120 1346     		mov	r3, r2
 5061 0122 5B00     		lsls	r3, r3, #1
 5062 0124 1344     		add	r3, r3, r2
 5063 0126 1B01     		lsls	r3, r3, #4
 5064 0128 03F5CC73 		add	r3, r3, #408
 5065 012c D7F8A024 		ldr	r2, [r7, #1184]
 5066 0130 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5067              		.loc 1 834 0
 5068 0132 07F55B73 		add	r3, r7, #876
 5069 0136 DA61     		str	r2, [r3, #28]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 129


 5070              		.loc 1 843 0
 5071 0138 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5072 013c D7F8A014 		ldr	r1, [r7, #1184]
 5073 0140 1346     		mov	r3, r2
 5074 0142 DB00     		lsls	r3, r3, #3
 5075 0144 9B1A     		subs	r3, r3, r2
 5076 0146 1B01     		lsls	r3, r3, #4
 5077 0148 0B44     		add	r3, r3, r1
 5078 014a 03F58873 		add	r3, r3, #272
 5079 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5080 0150 1A46     		mov	r2, r3
 5081 0152 1346     		mov	r3, r2
 5082 0154 5B00     		lsls	r3, r3, #1
 5083 0156 1344     		add	r3, r3, r2
 5084 0158 1B01     		lsls	r3, r3, #4
 5085 015a 03F5D073 		add	r3, r3, #416
 5086 015e D7F8A024 		ldr	r2, [r7, #1184]
 5087 0162 1344     		add	r3, r3, r2
 5088 0164 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5089              		.loc 1 834 0
 5090 0166 07F55B73 		add	r3, r7, #876
 5091 016a 1A62     		str	r2, [r3, #32]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5092              		.loc 1 844 0
 5093 016c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5094 0170 1346     		mov	r3, r2
 5095 0172 DB00     		lsls	r3, r3, #3
 5096 0174 9B1A     		subs	r3, r3, r2
 5097 0176 1B01     		lsls	r3, r3, #4
 5098 0178 E033     		adds	r3, r3, #224
 5099 017a D7F8A024 		ldr	r2, [r7, #1184]
 5100 017e 1344     		add	r3, r3, r2
 5101 0180 DA1C     		adds	r2, r3, #3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5102              		.loc 1 834 0
 5103 0182 07F55B73 		add	r3, r7, #876
 5104 0186 5A62     		str	r2, [r3, #36]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5105              		.loc 1 845 0
 5106 0188 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5107 018c 1346     		mov	r3, r2
 5108 018e DB00     		lsls	r3, r3, #3
 5109 0190 9B1A     		subs	r3, r3, r2
 5110 0192 1B01     		lsls	r3, r3, #4
 5111 0194 E033     		adds	r3, r3, #224
 5112 0196 D7F8A024 		ldr	r2, [r7, #1184]
 5113 019a 1344     		add	r3, r3, r2
 5114 019c 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5115              		.loc 1 834 0
 5116 019e 07F55B73 		add	r3, r7, #876
 5117 01a2 9A62     		str	r2, [r3, #40]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5118              		.loc 1 846 0
 5119 01a4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5120 01a8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 130


 5121 01aa DB00     		lsls	r3, r3, #3
 5122 01ac 9B1A     		subs	r3, r3, r2
 5123 01ae 1B01     		lsls	r3, r3, #4
 5124 01b0 E833     		adds	r3, r3, #232
 5125 01b2 D7F8A024 		ldr	r2, [r7, #1184]
 5126 01b6 1344     		add	r3, r3, r2
 5127 01b8 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5128              		.loc 1 834 0
 5129 01ba 07F55B73 		add	r3, r7, #876
 5130 01be DA62     		str	r2, [r3, #44]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5131              		.loc 1 847 0
 5132 01c0 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5133 01c4 1346     		mov	r3, r2
 5134 01c6 DB00     		lsls	r3, r3, #3
 5135 01c8 9B1A     		subs	r3, r3, r2
 5136 01ca 1B01     		lsls	r3, r3, #4
 5137 01cc 03F58473 		add	r3, r3, #264
 5138 01d0 D7F8A024 		ldr	r2, [r7, #1184]
 5139 01d4 1344     		add	r3, r3, r2
 5140 01d6 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5141              		.loc 1 834 0
 5142 01d8 07F55B73 		add	r3, r7, #876
 5143 01dc 1A63     		str	r2, [r3, #48]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5144              		.loc 1 848 0
 5145 01de D7F8A034 		ldr	r3, [r7, #1184]
 5146 01e2 03F5F872 		add	r2, r3, #496
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5147              		.loc 1 834 0
 5148 01e6 07F55B73 		add	r3, r7, #876
 5149 01ea 5A63     		str	r2, [r3, #52]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5150              		.loc 1 849 0
 5151 01ec D7F8A034 		ldr	r3, [r7, #1184]
 5152 01f0 03F2FD12 		addw	r2, r3, #509
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5153              		.loc 1 834 0
 5154 01f4 07F55B73 		add	r3, r7, #876
 5155 01f8 9A63     		str	r2, [r3, #56]
 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5156              		.loc 1 850 0
 5157 01fa D7F8A034 		ldr	r3, [r7, #1184]
 5158 01fe 03F5FA72 		add	r2, r3, #500
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5159              		.loc 1 834 0
 5160 0202 07F55B73 		add	r3, r7, #876
 5161 0206 DA63     		str	r2, [r3, #60]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 5162              		.loc 1 851 0
 5163 0208 D7F8A034 		ldr	r3, [r7, #1184]
 5164 020c 03F5FE72 		add	r2, r3, #508
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5165              		.loc 1 834 0
 5166 0210 07F55B73 		add	r3, r7, #876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 131


 5167 0214 1A64     		str	r2, [r3, #64]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5168              		.loc 1 852 0
 5169 0216 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5170 021a D7F8A014 		ldr	r1, [r7, #1184]
 5171 021e 1346     		mov	r3, r2
 5172 0220 DB00     		lsls	r3, r3, #3
 5173 0222 9B1A     		subs	r3, r3, r2
 5174 0224 1B01     		lsls	r3, r3, #4
 5175 0226 0B44     		add	r3, r3, r1
 5176 0228 03F58873 		add	r3, r3, #272
 5177 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5178 022e 1A46     		mov	r2, r3
 5179 0230 1346     		mov	r3, r2
 5180 0232 5B00     		lsls	r3, r3, #1
 5181 0234 1344     		add	r3, r3, r2
 5182 0236 1B01     		lsls	r3, r3, #4
 5183 0238 03F5D873 		add	r3, r3, #432
 5184 023c D7F8A024 		ldr	r2, [r7, #1184]
 5185 0240 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5186              		.loc 1 834 0
 5187 0242 07F55B73 		add	r3, r7, #876
 5188 0246 5A64     		str	r2, [r3, #68]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5189              		.loc 1 853 0
 5190 0248 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5191 024c D7F8A014 		ldr	r1, [r7, #1184]
 5192 0250 1346     		mov	r3, r2
 5193 0252 DB00     		lsls	r3, r3, #3
 5194 0254 9B1A     		subs	r3, r3, r2
 5195 0256 1B01     		lsls	r3, r3, #4
 5196 0258 0B44     		add	r3, r3, r1
 5197 025a 03F58873 		add	r3, r3, #272
 5198 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5199 0260 1A46     		mov	r2, r3
 5200 0262 1346     		mov	r3, r2
 5201 0264 5B00     		lsls	r3, r3, #1
 5202 0266 1344     		add	r3, r3, r2
 5203 0268 1B01     		lsls	r3, r3, #4
 5204 026a 03F5D873 		add	r3, r3, #432
 5205 026e D7F8A024 		ldr	r2, [r7, #1184]
 5206 0272 1344     		add	r3, r3, r2
 5207 0274 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5208              		.loc 1 834 0
 5209 0276 07F55B73 		add	r3, r7, #876
 5210 027a 9A64     		str	r2, [r3, #72]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5211              		.loc 1 854 0
 5212 027c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5213 0280 1346     		mov	r3, r2
 5214 0282 DB00     		lsls	r3, r3, #3
 5215 0284 9B1A     		subs	r3, r3, r2
 5216 0286 1B01     		lsls	r3, r3, #4
 5217 0288 E033     		adds	r3, r3, #224
 5218 028a D7F8A024 		ldr	r2, [r7, #1184]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 132


 5219 028e 1344     		add	r3, r3, r2
 5220 0290 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5221              		.loc 1 834 0
 5222 0292 07F55B73 		add	r3, r7, #876
 5223 0296 DA64     		str	r2, [r3, #76]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5224              		.loc 1 855 0
 5225 0298 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5226 029c 1346     		mov	r3, r2
 5227 029e DB00     		lsls	r3, r3, #3
 5228 02a0 9B1A     		subs	r3, r3, r2
 5229 02a2 1B01     		lsls	r3, r3, #4
 5230 02a4 F033     		adds	r3, r3, #240
 5231 02a6 D7F8A024 		ldr	r2, [r7, #1184]
 5232 02aa 1344     		add	r3, r3, r2
 5233 02ac 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5234              		.loc 1 834 0
 5235 02ae 07F55B73 		add	r3, r7, #876
 5236 02b2 1A65     		str	r2, [r3, #80]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5237              		.loc 1 856 0
 5238 02b4 D7F8A034 		ldr	r3, [r7, #1184]
 5239 02b8 03F1A102 		add	r2, r3, #161
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5240              		.loc 1 834 0
 5241 02bc 07F55B73 		add	r3, r7, #876
 5242 02c0 5A65     		str	r2, [r3, #84]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5243              		.loc 1 857 0
 5244 02c2 D7F8A034 		ldr	r3, [r7, #1184]
 5245 02c6 03F52872 		add	r2, r3, #672
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5246              		.loc 1 834 0
 5247 02ca 07F55B73 		add	r3, r7, #876
 5248 02ce 9A65     		str	r2, [r3, #88]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5249              		.loc 1 858 0
 5250 02d0 D7F8A034 		ldr	r3, [r7, #1184]
 5251 02d4 03F52972 		add	r2, r3, #676
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5252              		.loc 1 834 0
 5253 02d8 07F55B73 		add	r3, r7, #876
 5254 02dc DA65     		str	r2, [r3, #92]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5255              		.loc 1 859 0
 5256 02de D7F8A034 		ldr	r3, [r7, #1184]
 5257 02e2 03F52A72 		add	r2, r3, #680
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5258              		.loc 1 834 0
 5259 02e6 07F55B73 		add	r3, r7, #876
 5260 02ea 1A66     		str	r2, [r3, #96]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5261              		.loc 1 860 0
 5262 02ec D7F8A034 		ldr	r3, [r7, #1184]
 5263 02f0 03F52B72 		add	r2, r3, #684
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 133


 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5264              		.loc 1 834 0
 5265 02f4 07F55B73 		add	r3, r7, #876
 5266 02f8 5A66     		str	r2, [r3, #100]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5267              		.loc 1 861 0
 5268 02fa D7F8A034 		ldr	r3, [r7, #1184]
 5269 02fe 03F5FF72 		add	r2, r3, #510
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5270              		.loc 1 834 0
 5271 0302 07F55B73 		add	r3, r7, #876
 5272 0306 9A66     		str	r2, [r3, #104]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5273              		.loc 1 862 0
 5274 0308 D7F8A034 		ldr	r3, [r7, #1184]
 5275 030c 03F1A702 		add	r2, r3, #167
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5276              		.loc 1 834 0
 5277 0310 07F55B73 		add	r3, r7, #876
 5278 0314 DA66     		str	r2, [r3, #108]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5279              		.loc 1 863 0
 5280 0316 D7F8A034 		ldr	r3, [r7, #1184]
 5281 031a 03F50072 		add	r2, r3, #512
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5282              		.loc 1 834 0
 5283 031e 07F55B73 		add	r3, r7, #876
 5284 0322 1A67     		str	r2, [r3, #112]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5285              		.loc 1 864 0
 5286 0324 D7F8A034 		ldr	r3, [r7, #1184]
 5287 0328 03F22622 		addw	r2, r3, #550
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5288              		.loc 1 834 0
 5289 032c 07F55B73 		add	r3, r7, #876
 5290 0330 5A67     		str	r2, [r3, #116]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5291              		.loc 1 865 0
 5292 0332 D7F8A034 		ldr	r3, [r7, #1184]
 5293 0336 03F1A802 		add	r2, r3, #168
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5294              		.loc 1 834 0
 5295 033a 07F55B73 		add	r3, r7, #876
 5296 033e 9A67     		str	r2, [r3, #120]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5297              		.loc 1 866 0
 5298 0340 D7F8A034 		ldr	r3, [r7, #1184]
 5299 0344 03F50872 		add	r2, r3, #544
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5300              		.loc 1 834 0
 5301 0348 07F55B73 		add	r3, r7, #876
 5302 034c DA67     		str	r2, [r3, #124]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5303              		.loc 1 867 0
 5304 034e D7F8A034 		ldr	r3, [r7, #1184]
 5305 0352 03F20122 		addw	r2, r3, #513
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 134


 5306              		.loc 1 834 0
 5307 0356 07F55B73 		add	r3, r7, #876
 5308 035a C3F88020 		str	r2, [r3, #128]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5309              		.loc 1 868 0
 5310 035e D7F8A034 		ldr	r3, [r7, #1184]
 5311 0362 03F20222 		addw	r2, r3, #514
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5312              		.loc 1 834 0
 5313 0366 07F55B73 		add	r3, r7, #876
 5314 036a C3F88420 		str	r2, [r3, #132]
 869:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5315              		.loc 1 869 0
 5316 036e D7F8A034 		ldr	r3, [r7, #1184]
 5317 0372 03F1AB02 		add	r2, r3, #171
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5318              		.loc 1 834 0
 5319 0376 07F55B73 		add	r3, r7, #876
 5320 037a C3F88820 		str	r2, [r3, #136]
 870:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5321              		.loc 1 870 0
 5322 037e D7F8A034 		ldr	r3, [r7, #1184]
 5323 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5324 0386 1233     		adds	r3, r3, #18
 5325 0388 5B01     		lsls	r3, r3, #5
 5326 038a D7F8A024 		ldr	r2, [r7, #1184]
 5327 038e 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5328              		.loc 1 834 0
 5329 0390 07F55B73 		add	r3, r7, #876
 5330 0394 C3F88C20 		str	r2, [r3, #140]
 871:..\src/command_processing.c ****         
 872:..\src/command_processing.c ****         // GENERIC PARAMS
 873:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5331              		.loc 1 873 0
 5332 0398 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5333 039c 1346     		mov	r3, r2
 5334 039e DB00     		lsls	r3, r3, #3
 5335 03a0 9B1A     		subs	r3, r3, r2
 5336 03a2 1B01     		lsls	r3, r3, #4
 5337 03a4 03F58873 		add	r3, r3, #272
 5338 03a8 D7F8A024 		ldr	r2, [r7, #1184]
 5339 03ac 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5340              		.loc 1 834 0
 5341 03ae 07F55B73 		add	r3, r7, #876
 5342 03b2 C3F89020 		str	r2, [r3, #144]
 874:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5343              		.loc 1 874 0
 5344 03b6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5345 03ba 1346     		mov	r3, r2
 5346 03bc DB00     		lsls	r3, r3, #3
 5347 03be 9B1A     		subs	r3, r3, r2
 5348 03c0 1B01     		lsls	r3, r3, #4
 5349 03c2 E033     		adds	r3, r3, #224
 5350 03c4 D7F8A024 		ldr	r2, [r7, #1184]
 5351 03c8 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 135


 5352 03ca 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5353              		.loc 1 834 0
 5354 03cc 07F55B73 		add	r3, r7, #876
 5355 03d0 C3F89420 		str	r2, [r3, #148]
 875:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5356              		.loc 1 875 0
 5357 03d4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5358 03d8 1346     		mov	r3, r2
 5359 03da DB00     		lsls	r3, r3, #3
 5360 03dc 9B1A     		subs	r3, r3, r2
 5361 03de 1B01     		lsls	r3, r3, #4
 5362 03e0 03F58873 		add	r3, r3, #272
 5363 03e4 D7F8A024 		ldr	r2, [r7, #1184]
 5364 03e8 1344     		add	r3, r3, r2
 5365 03ea 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5366              		.loc 1 834 0
 5367 03ec 07F55B73 		add	r3, r7, #876
 5368 03f0 C3F89820 		str	r2, [r3, #152]
 876:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5369              		.loc 1 876 0
 5370 03f4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5371 03f8 1346     		mov	r3, r2
 5372 03fa DB00     		lsls	r3, r3, #3
 5373 03fc 9B1A     		subs	r3, r3, r2
 5374 03fe 1B01     		lsls	r3, r3, #4
 5375 0400 03F58873 		add	r3, r3, #272
 5376 0404 D7F8A024 		ldr	r2, [r7, #1184]
 5377 0408 1344     		add	r3, r3, r2
 5378 040a 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5379              		.loc 1 834 0
 5380 040c 07F55B73 		add	r3, r7, #876
 5381 0410 C3F89C20 		str	r2, [r3, #156]
 877:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5382              		.loc 1 877 0
 5383 0414 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5384 0418 D7F8A014 		ldr	r1, [r7, #1184]
 5385 041c 1346     		mov	r3, r2
 5386 041e DB00     		lsls	r3, r3, #3
 5387 0420 9B1A     		subs	r3, r3, r2
 5388 0422 1B01     		lsls	r3, r3, #4
 5389 0424 0B44     		add	r3, r3, r1
 5390 0426 03F58873 		add	r3, r3, #272
 5391 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5392 042c 1A46     		mov	r2, r3
 5393 042e 1346     		mov	r3, r2
 5394 0430 5B00     		lsls	r3, r3, #1
 5395 0432 1344     		add	r3, r3, r2
 5396 0434 1B01     		lsls	r3, r3, #4
 5397 0436 03F5D873 		add	r3, r3, #432
 5398 043a D7F8A024 		ldr	r2, [r7, #1184]
 5399 043e 1344     		add	r3, r3, r2
 5400 0440 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5401              		.loc 1 834 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 136


 5402 0442 07F55B73 		add	r3, r7, #876
 5403 0446 C3F8A020 		str	r2, [r3, #160]
 878:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5404              		.loc 1 878 0
 5405 044a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5406 044e D7F8A014 		ldr	r1, [r7, #1184]
 5407 0452 1346     		mov	r3, r2
 5408 0454 DB00     		lsls	r3, r3, #3
 5409 0456 9B1A     		subs	r3, r3, r2
 5410 0458 1B01     		lsls	r3, r3, #4
 5411 045a 0B44     		add	r3, r3, r1
 5412 045c 03F58873 		add	r3, r3, #272
 5413 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5414 0462 1A46     		mov	r2, r3
 5415 0464 1346     		mov	r3, r2
 5416 0466 5B00     		lsls	r3, r3, #1
 5417 0468 1344     		add	r3, r3, r2
 5418 046a 1B01     		lsls	r3, r3, #4
 5419 046c 03F5D873 		add	r3, r3, #432
 5420 0470 D7F8A024 		ldr	r2, [r7, #1184]
 5421 0474 1344     		add	r3, r3, r2
 5422 0476 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5423              		.loc 1 834 0
 5424 0478 07F55B73 		add	r3, r7, #876
 5425 047c C3F8A420 		str	r2, [r3, #164]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 5426              		.loc 1 879 0
 5427 0480 D7F8A034 		ldr	r3, [r7, #1184]
 5428 0484 03F1A902 		add	r2, r3, #169
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5429              		.loc 1 834 0
 5430 0488 07F55B73 		add	r3, r7, #876
 5431 048c C3F8A820 		str	r2, [r3, #168]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 5432              		.loc 1 880 0
 5433 0490 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5434 0494 1346     		mov	r3, r2
 5435 0496 DB00     		lsls	r3, r3, #3
 5436 0498 9B1A     		subs	r3, r3, r2
 5437 049a 1B01     		lsls	r3, r3, #4
 5438 049c B033     		adds	r3, r3, #176
 5439 049e D7F8A024 		ldr	r2, [r7, #1184]
 5440 04a2 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5441              		.loc 1 834 0
 5442 04a4 07F55B73 		add	r3, r7, #876
 5443 04a8 C3F8AC20 		str	r2, [r3, #172]
 881:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 5444              		.loc 1 881 0
 5445 04ac 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5446 04b0 1346     		mov	r3, r2
 5447 04b2 DB00     		lsls	r3, r3, #3
 5448 04b4 9B1A     		subs	r3, r3, r2
 5449 04b6 1B01     		lsls	r3, r3, #4
 5450 04b8 B833     		adds	r3, r3, #184
 5451 04ba D7F8A024 		ldr	r2, [r7, #1184]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 137


 5452 04be 1344     		add	r3, r3, r2
 5453 04c0 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5454              		.loc 1 834 0
 5455 04c2 07F55B73 		add	r3, r7, #876
 5456 04c6 C3F8B020 		str	r2, [r3, #176]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 5457              		.loc 1 882 0
 5458 04ca 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5459 04ce 1346     		mov	r3, r2
 5460 04d0 DB00     		lsls	r3, r3, #3
 5461 04d2 9B1A     		subs	r3, r3, r2
 5462 04d4 1B01     		lsls	r3, r3, #4
 5463 04d6 E033     		adds	r3, r3, #224
 5464 04d8 D7F8A024 		ldr	r2, [r7, #1184]
 5465 04dc 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5466              		.loc 1 834 0
 5467 04de 07F55B73 		add	r3, r7, #876
 5468 04e2 C3F8B420 		str	r2, [r3, #180]
 883:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 5469              		.loc 1 883 0
 5470 04e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5471 04ea 1346     		mov	r3, r2
 5472 04ec DB00     		lsls	r3, r3, #3
 5473 04ee 9B1A     		subs	r3, r3, r2
 5474 04f0 1B01     		lsls	r3, r3, #4
 5475 04f2 03F58473 		add	r3, r3, #264
 5476 04f6 D7F8A024 		ldr	r2, [r7, #1184]
 5477 04fa 1344     		add	r3, r3, r2
 5478 04fc 9A1D     		adds	r2, r3, #6
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5479              		.loc 1 834 0
 5480 04fe 07F55B73 		add	r3, r7, #876
 5481 0502 C3F8B820 		str	r2, [r3, #184]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 5482              		.loc 1 884 0
 5483 0506 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5484 050a 1346     		mov	r3, r2
 5485 050c DB00     		lsls	r3, r3, #3
 5486 050e 9B1A     		subs	r3, r3, r2
 5487 0510 1B01     		lsls	r3, r3, #4
 5488 0512 03F58473 		add	r3, r3, #264
 5489 0516 D7F8A024 		ldr	r2, [r7, #1184]
 5490 051a 1344     		add	r3, r3, r2
 5491 051c DA1D     		adds	r2, r3, #7
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5492              		.loc 1 834 0
 5493 051e 07F55B73 		add	r3, r7, #876
 5494 0522 C3F8BC20 		str	r2, [r3, #188]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 5495              		.loc 1 885 0
 5496 0526 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5497 052a D7F8A014 		ldr	r1, [r7, #1184]
 5498 052e 1346     		mov	r3, r2
 5499 0530 DB00     		lsls	r3, r3, #3
 5500 0532 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 138


 5501 0534 1B01     		lsls	r3, r3, #4
 5502 0536 0B44     		add	r3, r3, r1
 5503 0538 03F58873 		add	r3, r3, #272
 5504 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5505 053e 1A46     		mov	r2, r3
 5506 0540 1346     		mov	r3, r2
 5507 0542 5B00     		lsls	r3, r3, #1
 5508 0544 1344     		add	r3, r3, r2
 5509 0546 1B01     		lsls	r3, r3, #4
 5510 0548 03F5C873 		add	r3, r3, #400
 5511 054c D7F8A024 		ldr	r2, [r7, #1184]
 5512 0550 1344     		add	r3, r3, r2
 5513 0552 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5514              		.loc 1 834 0
 5515 0554 07F55B73 		add	r3, r7, #876
 5516 0558 C3F8C020 		str	r2, [r3, #192]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 5517              		.loc 1 886 0
 5518 055c 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5519 0560 D7F8A014 		ldr	r1, [r7, #1184]
 5520 0564 1346     		mov	r3, r2
 5521 0566 DB00     		lsls	r3, r3, #3
 5522 0568 9B1A     		subs	r3, r3, r2
 5523 056a 1B01     		lsls	r3, r3, #4
 5524 056c 0B44     		add	r3, r3, r1
 5525 056e 03F58873 		add	r3, r3, #272
 5526 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5527 0574 1A46     		mov	r2, r3
 5528 0576 1346     		mov	r3, r2
 5529 0578 5B00     		lsls	r3, r3, #1
 5530 057a 1344     		add	r3, r3, r2
 5531 057c 1B01     		lsls	r3, r3, #4
 5532 057e 03F5CC73 		add	r3, r3, #408
 5533 0582 D7F8A024 		ldr	r2, [r7, #1184]
 5534 0586 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5535              		.loc 1 834 0
 5536 0588 07F55B73 		add	r3, r7, #876
 5537 058c C3F8C420 		str	r2, [r3, #196]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 5538              		.loc 1 887 0
 5539 0590 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5540 0594 D7F8A014 		ldr	r1, [r7, #1184]
 5541 0598 1346     		mov	r3, r2
 5542 059a DB00     		lsls	r3, r3, #3
 5543 059c 9B1A     		subs	r3, r3, r2
 5544 059e 1B01     		lsls	r3, r3, #4
 5545 05a0 0B44     		add	r3, r3, r1
 5546 05a2 03F58873 		add	r3, r3, #272
 5547 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5548 05a8 1A46     		mov	r2, r3
 5549 05aa 1346     		mov	r3, r2
 5550 05ac 5B00     		lsls	r3, r3, #1
 5551 05ae 1344     		add	r3, r3, r2
 5552 05b0 1B01     		lsls	r3, r3, #4
 5553 05b2 03F5D073 		add	r3, r3, #416
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 139


 5554 05b6 D7F8A024 		ldr	r2, [r7, #1184]
 5555 05ba 1344     		add	r3, r3, r2
 5556 05bc 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5557              		.loc 1 834 0
 5558 05be 07F55B73 		add	r3, r7, #876
 5559 05c2 C3F8C820 		str	r2, [r3, #200]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 5560              		.loc 1 888 0
 5561 05c6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5562 05ca 1346     		mov	r3, r2
 5563 05cc DB00     		lsls	r3, r3, #3
 5564 05ce 9B1A     		subs	r3, r3, r2
 5565 05d0 1B01     		lsls	r3, r3, #4
 5566 05d2 E033     		adds	r3, r3, #224
 5567 05d4 D7F8A024 		ldr	r2, [r7, #1184]
 5568 05d8 1344     		add	r3, r3, r2
 5569 05da DA1C     		adds	r2, r3, #3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5570              		.loc 1 834 0
 5571 05dc 07F55B73 		add	r3, r7, #876
 5572 05e0 C3F8CC20 		str	r2, [r3, #204]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 5573              		.loc 1 889 0
 5574 05e4 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5575 05e8 1346     		mov	r3, r2
 5576 05ea DB00     		lsls	r3, r3, #3
 5577 05ec 9B1A     		subs	r3, r3, r2
 5578 05ee 1B01     		lsls	r3, r3, #4
 5579 05f0 E033     		adds	r3, r3, #224
 5580 05f2 D7F8A024 		ldr	r2, [r7, #1184]
 5581 05f6 1344     		add	r3, r3, r2
 5582 05f8 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5583              		.loc 1 834 0
 5584 05fa 07F55B73 		add	r3, r7, #876
 5585 05fe C3F8D020 		str	r2, [r3, #208]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 5586              		.loc 1 890 0
 5587 0602 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5588 0606 1346     		mov	r3, r2
 5589 0608 DB00     		lsls	r3, r3, #3
 5590 060a 9B1A     		subs	r3, r3, r2
 5591 060c 1B01     		lsls	r3, r3, #4
 5592 060e E833     		adds	r3, r3, #232
 5593 0610 D7F8A024 		ldr	r2, [r7, #1184]
 5594 0614 1344     		add	r3, r3, r2
 5595 0616 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5596              		.loc 1 834 0
 5597 0618 07F55B73 		add	r3, r7, #876
 5598 061c C3F8D420 		str	r2, [r3, #212]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 5599              		.loc 1 891 0
 5600 0620 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5601 0624 1346     		mov	r3, r2
 5602 0626 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 140


 5603 0628 9B1A     		subs	r3, r3, r2
 5604 062a 1B01     		lsls	r3, r3, #4
 5605 062c 03F58473 		add	r3, r3, #264
 5606 0630 D7F8A024 		ldr	r2, [r7, #1184]
 5607 0634 1344     		add	r3, r3, r2
 5608 0636 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5609              		.loc 1 834 0
 5610 0638 07F55B73 		add	r3, r7, #876
 5611 063c C3F8D820 		str	r2, [r3, #216]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 5612              		.loc 1 892 0
 5613 0640 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5614 0644 D7F8A014 		ldr	r1, [r7, #1184]
 5615 0648 1346     		mov	r3, r2
 5616 064a DB00     		lsls	r3, r3, #3
 5617 064c 9B1A     		subs	r3, r3, r2
 5618 064e 1B01     		lsls	r3, r3, #4
 5619 0650 0B44     		add	r3, r3, r1
 5620 0652 03F58873 		add	r3, r3, #272
 5621 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5622 0658 1A46     		mov	r2, r3
 5623 065a 1346     		mov	r3, r2
 5624 065c 5B00     		lsls	r3, r3, #1
 5625 065e 1344     		add	r3, r3, r2
 5626 0660 1B01     		lsls	r3, r3, #4
 5627 0662 03F5D873 		add	r3, r3, #432
 5628 0666 D7F8A024 		ldr	r2, [r7, #1184]
 5629 066a 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5630              		.loc 1 834 0
 5631 066c 07F55B73 		add	r3, r7, #876
 5632 0670 C3F8DC20 		str	r2, [r3, #220]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 5633              		.loc 1 893 0
 5634 0674 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5635 0678 D7F8A014 		ldr	r1, [r7, #1184]
 5636 067c 1346     		mov	r3, r2
 5637 067e DB00     		lsls	r3, r3, #3
 5638 0680 9B1A     		subs	r3, r3, r2
 5639 0682 1B01     		lsls	r3, r3, #4
 5640 0684 0B44     		add	r3, r3, r1
 5641 0686 03F58873 		add	r3, r3, #272
 5642 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5643 068c 1A46     		mov	r2, r3
 5644 068e 1346     		mov	r3, r2
 5645 0690 5B00     		lsls	r3, r3, #1
 5646 0692 1344     		add	r3, r3, r2
 5647 0694 1B01     		lsls	r3, r3, #4
 5648 0696 03F5D873 		add	r3, r3, #432
 5649 069a D7F8A024 		ldr	r2, [r7, #1184]
 5650 069e 1344     		add	r3, r3, r2
 5651 06a0 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5652              		.loc 1 834 0
 5653 06a2 07F55B73 		add	r3, r7, #876
 5654 06a6 C3F8E020 		str	r2, [r3, #224]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 141


 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 5655              		.loc 1 894 0
 5656 06aa 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5657 06ae 1346     		mov	r3, r2
 5658 06b0 DB00     		lsls	r3, r3, #3
 5659 06b2 9B1A     		subs	r3, r3, r2
 5660 06b4 1B01     		lsls	r3, r3, #4
 5661 06b6 E033     		adds	r3, r3, #224
 5662 06b8 D7F8A024 		ldr	r2, [r7, #1184]
 5663 06bc 1344     		add	r3, r3, r2
 5664 06be 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5665              		.loc 1 834 0
 5666 06c0 07F55B73 		add	r3, r7, #876
 5667 06c4 C3F8E420 		str	r2, [r3, #228]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 5668              		.loc 1 895 0
 5669 06c8 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5670 06cc 1346     		mov	r3, r2
 5671 06ce DB00     		lsls	r3, r3, #3
 5672 06d0 9B1A     		subs	r3, r3, r2
 5673 06d2 1B01     		lsls	r3, r3, #4
 5674 06d4 F033     		adds	r3, r3, #240
 5675 06d6 D7F8A024 		ldr	r2, [r7, #1184]
 5676 06da 1344     		add	r3, r3, r2
 5677 06dc 1A1D     		adds	r2, r3, #4
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5678              		.loc 1 834 0
 5679 06de 07F55B73 		add	r3, r7, #876
 5680 06e2 C3F8E820 		str	r2, [r3, #232]
 896:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 5681              		.loc 1 896 0
 5682 06e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5683 06ea 1346     		mov	r3, r2
 5684 06ec DB00     		lsls	r3, r3, #3
 5685 06ee 9B1A     		subs	r3, r3, r2
 5686 06f0 1B01     		lsls	r3, r3, #4
 5687 06f2 03F58873 		add	r3, r3, #272
 5688 06f6 D7F8A024 		ldr	r2, [r7, #1184]
 5689 06fa 1A44     		add	r2, r2, r3
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5690              		.loc 1 834 0
 5691 06fc 07F55B73 		add	r3, r7, #876
 5692 0700 C3F8EC20 		str	r2, [r3, #236]
 897:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 5693              		.loc 1 897 0
 5694 0704 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5695 0708 1346     		mov	r3, r2
 5696 070a DB00     		lsls	r3, r3, #3
 5697 070c 9B1A     		subs	r3, r3, r2
 5698 070e 1B01     		lsls	r3, r3, #4
 5699 0710 E033     		adds	r3, r3, #224
 5700 0712 D7F8A024 		ldr	r2, [r7, #1184]
 5701 0716 1344     		add	r3, r3, r2
 5702 0718 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5703              		.loc 1 834 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 142


 5704 071a 07F55B73 		add	r3, r7, #876
 5705 071e C3F8F020 		str	r2, [r3, #240]
 898:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 5706              		.loc 1 898 0
 5707 0722 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5708 0726 1346     		mov	r3, r2
 5709 0728 DB00     		lsls	r3, r3, #3
 5710 072a 9B1A     		subs	r3, r3, r2
 5711 072c 1B01     		lsls	r3, r3, #4
 5712 072e 03F58873 		add	r3, r3, #272
 5713 0732 D7F8A024 		ldr	r2, [r7, #1184]
 5714 0736 1344     		add	r3, r3, r2
 5715 0738 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5716              		.loc 1 834 0
 5717 073a 07F55B73 		add	r3, r7, #876
 5718 073e C3F8F420 		str	r2, [r3, #244]
 899:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 5719              		.loc 1 899 0
 5720 0742 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5721 0746 1346     		mov	r3, r2
 5722 0748 DB00     		lsls	r3, r3, #3
 5723 074a 9B1A     		subs	r3, r3, r2
 5724 074c 1B01     		lsls	r3, r3, #4
 5725 074e 03F58873 		add	r3, r3, #272
 5726 0752 D7F8A024 		ldr	r2, [r7, #1184]
 5727 0756 1344     		add	r3, r3, r2
 5728 0758 9A1C     		adds	r2, r3, #2
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5729              		.loc 1 834 0
 5730 075a 07F55B73 		add	r3, r7, #876
 5731 075e C3F8F820 		str	r2, [r3, #248]
 900:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5732              		.loc 1 900 0
 5733 0762 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5734 0766 D7F8A014 		ldr	r1, [r7, #1184]
 5735 076a 1346     		mov	r3, r2
 5736 076c DB00     		lsls	r3, r3, #3
 5737 076e 9B1A     		subs	r3, r3, r2
 5738 0770 1B01     		lsls	r3, r3, #4
 5739 0772 0B44     		add	r3, r3, r1
 5740 0774 03F58873 		add	r3, r3, #272
 5741 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5742 077a 1A46     		mov	r2, r3
 5743 077c 1346     		mov	r3, r2
 5744 077e 5B00     		lsls	r3, r3, #1
 5745 0780 1344     		add	r3, r3, r2
 5746 0782 1B01     		lsls	r3, r3, #4
 5747 0784 03F5D873 		add	r3, r3, #432
 5748 0788 D7F8A024 		ldr	r2, [r7, #1184]
 5749 078c 1344     		add	r3, r3, r2
 5750 078e 5A1C     		adds	r2, r3, #1
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5751              		.loc 1 834 0
 5752 0790 07F55B73 		add	r3, r7, #876
 5753 0794 C3F8FC20 		str	r2, [r3, #252]
 901:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 143


 5754              		.loc 1 901 0
 5755 0798 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5756 079c D7F8A014 		ldr	r1, [r7, #1184]
 5757 07a0 1346     		mov	r3, r2
 5758 07a2 DB00     		lsls	r3, r3, #3
 5759 07a4 9B1A     		subs	r3, r3, r2
 5760 07a6 1B01     		lsls	r3, r3, #4
 5761 07a8 0B44     		add	r3, r3, r1
 5762 07aa 03F58873 		add	r3, r3, #272
 5763 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5764 07b0 1A46     		mov	r2, r3
 5765 07b2 1346     		mov	r3, r2
 5766 07b4 5B00     		lsls	r3, r3, #1
 5767 07b6 1344     		add	r3, r3, r2
 5768 07b8 1B01     		lsls	r3, r3, #4
 5769 07ba 03F5D873 		add	r3, r3, #432
 5770 07be D7F8A024 		ldr	r2, [r7, #1184]
 5771 07c2 1344     		add	r3, r3, r2
 5772 07c4 5A1D     		adds	r2, r3, #5
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5773              		.loc 1 834 0
 5774 07c6 07F55B73 		add	r3, r7, #876
 5775 07ca C3F80021 		str	r2, [r3, #256]
 902:..\src/command_processing.c ****         
 903:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 5776              		.loc 1 903 0
 5777 07ce D7F8A034 		ldr	r3, [r7, #1184]
 5778 07d2 03F5C872 		add	r2, r3, #400
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5779              		.loc 1 834 0
 5780 07d6 07F55B73 		add	r3, r7, #876
 5781 07da C3F80421 		str	r2, [r3, #260]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 5782              		.loc 1 904 0
 5783 07de D7F8A034 		ldr	r3, [r7, #1184]
 5784 07e2 03F5E072 		add	r2, r3, #448
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5785              		.loc 1 834 0
 5786 07e6 07F55B73 		add	r3, r7, #876
 5787 07ea C3F80821 		str	r2, [r3, #264]
 905:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 5788              		.loc 1 905 0
 5789 07ee D7F8A034 		ldr	r3, [r7, #1184]
 5790 07f2 03F22722 		addw	r2, r3, #551
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5791              		.loc 1 834 0
 5792 07f6 07F55B73 		add	r3, r7, #876
 5793 07fa C3F80C21 		str	r2, [r3, #268]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 5794              		.loc 1 906 0
 5795 07fe D7F8A034 		ldr	r3, [r7, #1184]
 5796 0802 03F50A72 		add	r2, r3, #552
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5797              		.loc 1 834 0
 5798 0806 07F55B73 		add	r3, r7, #876
 5799 080a C3F81021 		str	r2, [r3, #272]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 144


 5800              		.loc 1 907 0
 5801 080e D7F8A034 		ldr	r3, [r7, #1184]
 5802 0812 03F22E22 		addw	r2, r3, #558
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5803              		.loc 1 834 0
 5804 0816 07F55B73 		add	r3, r7, #876
 5805 081a C3F81421 		str	r2, [r3, #276]
 908:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type)
 5806              		.loc 1 908 0
 5807 081e D7F8A034 		ldr	r3, [r7, #1184]
 5808 0822 03F1AC02 		add	r2, r3, #172
 834:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5809              		.loc 1 834 0
 5810 0826 07F55B73 		add	r3, r7, #876
 5811 082a C3F81821 		str	r2, [r3, #280]
 909:..\src/command_processing.c ****     };
 910:..\src/command_processing.c ****     
 911:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 5812              		.loc 1 911 0
 5813 082e 07F54973 		add	r3, r7, #804
 5814 0832 F34A     		ldr	r2, .L334
 5815 0834 1846     		mov	r0, r3
 5816 0836 1146     		mov	r1, r2
 5817 0838 4723     		movs	r3, #71
 5818 083a 1A46     		mov	r2, r3
 5819 083c FFF7FEFF 		bl	memcpy
 912:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 913:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 914:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 915:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 916:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 917:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 918:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 919:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 920:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 921:..\src/command_processing.c ****         
 922:..\src/command_processing.c ****         // GENERIC PARAMS
 923:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 924:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 925:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 926:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 927:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 928:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 929:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 930:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 931:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG      
 932:..\src/command_processing.c ****     };
 933:..\src/command_processing.c **** 
 934:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 5820              		.loc 1 934 0
 5821 0840 07F53773 		add	r3, r7, #732
 5822 0844 0122     		movs	r2, #1
 5823 0846 1A70     		strb	r2, [r3]
 5824 0848 07F53773 		add	r3, r7, #732
 5825 084c 0322     		movs	r2, #3
 5826 084e 5A70     		strb	r2, [r3, #1]
 5827 0850 07F53773 		add	r3, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 145


 5828 0854 0322     		movs	r2, #3
 5829 0856 9A70     		strb	r2, [r3, #2]
 5830 0858 07F53773 		add	r3, r7, #732
 5831 085c 0122     		movs	r2, #1
 5832 085e DA70     		strb	r2, [r3, #3]
 5833 0860 07F53773 		add	r3, r7, #732
 5834 0864 0122     		movs	r2, #1
 5835 0866 1A71     		strb	r2, [r3, #4]
 5836 0868 07F53773 		add	r3, r7, #732
 5837 086c 0122     		movs	r2, #1
 5838 086e 5A71     		strb	r2, [r3, #5]
 5839 0870 07F53773 		add	r3, r7, #732
 5840 0874 0322     		movs	r2, #3
 5841 0876 9A71     		strb	r2, [r3, #6]
 5842 0878 07F53773 		add	r3, r7, #732
 5843 087c 0322     		movs	r2, #3
 5844 087e DA71     		strb	r2, [r3, #7]
 5845 0880 07F53773 		add	r3, r7, #732
 5846 0884 0322     		movs	r2, #3
 5847 0886 1A72     		strb	r2, [r3, #8]
 5848 0888 07F53773 		add	r3, r7, #732
 5849 088c 0122     		movs	r2, #1
 5850 088e 5A72     		strb	r2, [r3, #9]
 5851 0890 07F53773 		add	r3, r7, #732
 5852 0894 0222     		movs	r2, #2
 5853 0896 9A72     		strb	r2, [r3, #10]
 5854 0898 07F53773 		add	r3, r7, #732
 5855 089c 0222     		movs	r2, #2
 5856 089e DA72     		strb	r2, [r3, #11]
 5857 08a0 07F53773 		add	r3, r7, #732
 5858 08a4 0122     		movs	r2, #1
 5859 08a6 1A73     		strb	r2, [r3, #12]
 5860 08a8 07F53773 		add	r3, r7, #732
 5861 08ac 0222     		movs	r2, #2
 5862 08ae 5A73     		strb	r2, [r3, #13]
 5863 08b0 07F53773 		add	r3, r7, #732
 5864 08b4 0122     		movs	r2, #1
 5865 08b6 9A73     		strb	r2, [r3, #14]
 5866 08b8 07F53773 		add	r3, r7, #732
 5867 08bc 0222     		movs	r2, #2
 5868 08be DA73     		strb	r2, [r3, #15]
 5869 08c0 07F53773 		add	r3, r7, #732
 5870 08c4 0122     		movs	r2, #1
 5871 08c6 1A74     		strb	r2, [r3, #16]
 5872 08c8 07F53773 		add	r3, r7, #732
 5873 08cc 0122     		movs	r2, #1
 5874 08ce 5A74     		strb	r2, [r3, #17]
 5875 08d0 07F53773 		add	r3, r7, #732
 5876 08d4 0122     		movs	r2, #1
 5877 08d6 9A74     		strb	r2, [r3, #18]
 5878 08d8 07F53773 		add	r3, r7, #732
 5879 08dc 0122     		movs	r2, #1
 5880 08de DA74     		strb	r2, [r3, #19]
 5881 08e0 07F53773 		add	r3, r7, #732
 5882 08e4 0622     		movs	r2, #6
 5883 08e6 1A75     		strb	r2, [r3, #20]
 5884 08e8 07F53773 		add	r3, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 146


 5885 08ec 0322     		movs	r2, #3
 5886 08ee 5A75     		strb	r2, [r3, #21]
 5887 08f0 07F53773 		add	r3, r7, #732
 5888 08f4 0122     		movs	r2, #1
 5889 08f6 9A75     		strb	r2, [r3, #22]
 5890 08f8 07F53773 		add	r3, r7, #732
 5891 08fc 0122     		movs	r2, #1
 5892 08fe DA75     		strb	r2, [r3, #23]
 5893 0900 07F53773 		add	r3, r7, #732
 5894 0904 0122     		movs	r2, #1
 5895 0906 1A76     		strb	r2, [r3, #24]
 5896 0908 07F53773 		add	r3, r7, #732
 5897 090c 0122     		movs	r2, #1
 5898 090e 5A76     		strb	r2, [r3, #25]
 5899 0910 07F53773 		add	r3, r7, #732
 5900 0914 0122     		movs	r2, #1
 5901 0916 9A76     		strb	r2, [r3, #26]
 5902 0918 07F53773 		add	r3, r7, #732
 5903 091c 0122     		movs	r2, #1
 5904 091e DA76     		strb	r2, [r3, #27]
 5905 0920 07F53773 		add	r3, r7, #732
 5906 0924 0122     		movs	r2, #1
 5907 0926 1A77     		strb	r2, [r3, #28]
 5908 0928 07F53773 		add	r3, r7, #732
 5909 092c 0122     		movs	r2, #1
 5910 092e 5A77     		strb	r2, [r3, #29]
 5911 0930 07F53773 		add	r3, r7, #732
 5912 0934 0122     		movs	r2, #1
 5913 0936 9A77     		strb	r2, [r3, #30]
 5914 0938 07F53773 		add	r3, r7, #732
 5915 093c 0622     		movs	r2, #6
 5916 093e DA77     		strb	r2, [r3, #31]
 5917 0940 07F53773 		add	r3, r7, #732
 5918 0944 0122     		movs	r2, #1
 5919 0946 83F82020 		strb	r2, [r3, #32]
 5920 094a 07F53773 		add	r3, r7, #732
 5921 094e 0522     		movs	r2, #5
 5922 0950 83F82120 		strb	r2, [r3, #33]
 5923 0954 07F53773 		add	r3, r7, #732
 5924 0958 0122     		movs	r2, #1
 5925 095a 83F82220 		strb	r2, [r3, #34]
 5926 095e 07F53773 		add	r3, r7, #732
 5927 0962 0622     		movs	r2, #6
 5928 0964 83F82320 		strb	r2, [r3, #35]
 5929 0968 07F53773 		add	r3, r7, #732
 5930 096c 0122     		movs	r2, #1
 5931 096e 83F82420 		strb	r2, [r3, #36]
 5932 0972 07F53773 		add	r3, r7, #732
 5933 0976 0122     		movs	r2, #1
 5934 0978 83F82520 		strb	r2, [r3, #37]
 5935 097c 07F53773 		add	r3, r7, #732
 5936 0980 0122     		movs	r2, #1
 5937 0982 83F82620 		strb	r2, [r3, #38]
 5938 0986 07F53773 		add	r3, r7, #732
 5939 098a 0122     		movs	r2, #1
 5940 098c 83F82720 		strb	r2, [r3, #39]
 5941 0990 07F53773 		add	r3, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 147


 5942 0994 0322     		movs	r2, #3
 5943 0996 83F82820 		strb	r2, [r3, #40]
 5944 099a 07F53773 		add	r3, r7, #732
 5945 099e 0322     		movs	r2, #3
 5946 09a0 83F82920 		strb	r2, [r3, #41]
 5947 09a4 07F53773 		add	r3, r7, #732
 5948 09a8 0122     		movs	r2, #1
 5949 09aa 83F82A20 		strb	r2, [r3, #42]
 5950 09ae 07F53773 		add	r3, r7, #732
 5951 09b2 0322     		movs	r2, #3
 5952 09b4 83F82B20 		strb	r2, [r3, #43]
 5953 09b8 07F53773 		add	r3, r7, #732
 5954 09bc 0322     		movs	r2, #3
 5955 09be 83F82C20 		strb	r2, [r3, #44]
 5956 09c2 07F53773 		add	r3, r7, #732
 5957 09c6 0122     		movs	r2, #1
 5958 09c8 83F82D20 		strb	r2, [r3, #45]
 5959 09cc 07F53773 		add	r3, r7, #732
 5960 09d0 0122     		movs	r2, #1
 5961 09d2 83F82E20 		strb	r2, [r3, #46]
 5962 09d6 07F53773 		add	r3, r7, #732
 5963 09da 0122     		movs	r2, #1
 5964 09dc 83F82F20 		strb	r2, [r3, #47]
 5965 09e0 07F53773 		add	r3, r7, #732
 5966 09e4 0322     		movs	r2, #3
 5967 09e6 83F83020 		strb	r2, [r3, #48]
 5968 09ea 07F53773 		add	r3, r7, #732
 5969 09ee 0322     		movs	r2, #3
 5970 09f0 83F83120 		strb	r2, [r3, #49]
 5971 09f4 07F53773 		add	r3, r7, #732
 5972 09f8 0322     		movs	r2, #3
 5973 09fa 83F83220 		strb	r2, [r3, #50]
 5974 09fe 07F53773 		add	r3, r7, #732
 5975 0a02 0122     		movs	r2, #1
 5976 0a04 83F83320 		strb	r2, [r3, #51]
 5977 0a08 07F53773 		add	r3, r7, #732
 5978 0a0c 0222     		movs	r2, #2
 5979 0a0e 83F83420 		strb	r2, [r3, #52]
 5980 0a12 07F53773 		add	r3, r7, #732
 5981 0a16 0222     		movs	r2, #2
 5982 0a18 83F83520 		strb	r2, [r3, #53]
 5983 0a1c 07F53773 		add	r3, r7, #732
 5984 0a20 0122     		movs	r2, #1
 5985 0a22 83F83620 		strb	r2, [r3, #54]
 5986 0a26 07F53773 		add	r3, r7, #732
 5987 0a2a 0122     		movs	r2, #1
 5988 0a2c 83F83720 		strb	r2, [r3, #55]
 5989 0a30 07F53773 		add	r3, r7, #732
 5990 0a34 0122     		movs	r2, #1
 5991 0a36 83F83820 		strb	r2, [r3, #56]
 5992 0a3a 07F53773 		add	r3, r7, #732
 5993 0a3e 0122     		movs	r2, #1
 5994 0a40 83F83920 		strb	r2, [r3, #57]
 5995 0a44 07F53773 		add	r3, r7, #732
 5996 0a48 0622     		movs	r2, #6
 5997 0a4a 83F83A20 		strb	r2, [r3, #58]
 5998 0a4e 07F53773 		add	r3, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 148


 5999 0a52 0122     		movs	r2, #1
 6000 0a54 83F83B20 		strb	r2, [r3, #59]
 6001 0a58 07F53773 		add	r3, r7, #732
 6002 0a5c 0122     		movs	r2, #1
 6003 0a5e 83F83C20 		strb	r2, [r3, #60]
 6004 0a62 07F53773 		add	r3, r7, #732
 6005 0a66 0122     		movs	r2, #1
 6006 0a68 83F83D20 		strb	r2, [r3, #61]
 6007 0a6c 07F53773 		add	r3, r7, #732
 6008 0a70 0122     		movs	r2, #1
 6009 0a72 83F83E20 		strb	r2, [r3, #62]
 6010 0a76 07F53773 		add	r3, r7, #732
 6011 0a7a 0322     		movs	r2, #3
 6012 0a7c 83F83F20 		strb	r2, [r3, #63]
 6013 0a80 07F53773 		add	r3, r7, #732
 6014 0a84 0322     		movs	r2, #3
 6015 0a86 83F84020 		strb	r2, [r3, #64]
 935:..\src/command_processing.c ****         1, 3, 3, 1, 
 936:..\src/command_processing.c ****         1, 1, 3, 3,
 937:..\src/command_processing.c ****         3, 1, 2, 2, 
 938:..\src/command_processing.c ****         1, 2, 1, 2,
 939:..\src/command_processing.c ****         1, 1, 1, 1, 
 940:..\src/command_processing.c ****         6, 3, 1, 1,
 941:..\src/command_processing.c ****         1, 1, 1, 1, 
 942:..\src/command_processing.c ****         1, 1, 1, 6,
 943:..\src/command_processing.c ****         1, 5, 1, 6,
 944:..\src/command_processing.c ****         
 945:..\src/command_processing.c ****         // GENERIC PARAMS
 946:..\src/command_processing.c ****         1, 1, 1, 1,
 947:..\src/command_processing.c ****         3, 3, 1, 3,
 948:..\src/command_processing.c ****         3, 1, 1, 1,
 949:..\src/command_processing.c ****         3, 3, 3, 1,
 950:..\src/command_processing.c ****         2, 2, 1, 1,
 951:..\src/command_processing.c ****         1, 1, 6, 1,
 952:..\src/command_processing.c ****         1, 1, 1, 3, 
 953:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6016              		.loc 1 953 0
 6017 0a8a 5E4B     		ldr	r3, .L334+4
 6018 0a8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 934:..\src/command_processing.c ****         1, 3, 3, 1, 
 6019              		.loc 1 934 0
 6020 0a8e 07F53773 		add	r3, r7, #732
 6021 0a92 83F84120 		strb	r2, [r3, #65]
 6022              		.loc 1 953 0
 6023 0a96 5B4B     		ldr	r3, .L334+4
 6024 0a98 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 934:..\src/command_processing.c ****         1, 3, 3, 1, 
 6025              		.loc 1 934 0
 6026 0a9a 07F53773 		add	r3, r7, #732
 6027 0a9e 83F84220 		strb	r2, [r3, #66]
 6028 0aa2 07F53773 		add	r3, r7, #732
 6029 0aa6 0122     		movs	r2, #1
 6030 0aa8 83F84320 		strb	r2, [r3, #67]
 6031 0aac 07F53773 		add	r3, r7, #732
 6032 0ab0 0622     		movs	r2, #6
 6033 0ab2 83F84420 		strb	r2, [r3, #68]
 6034 0ab6 07F53773 		add	r3, r7, #732
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 149


 6035 0aba 0622     		movs	r2, #6
 6036 0abc 83F84520 		strb	r2, [r3, #69]
 6037 0ac0 07F53773 		add	r3, r7, #732
 6038 0ac4 0122     		movs	r2, #1
 6039 0ac6 83F84620 		strb	r2, [r3, #70]
 954:..\src/command_processing.c ****         6, 6, 1
 955:..\src/command_processing.c ****     };
 956:..\src/command_processing.c ****     
 957:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6040              		.loc 1 957 0
 6041 0aca 07F52573 		add	r3, r7, #660
 6042 0ace 0022     		movs	r2, #0
 6043 0ad0 1A70     		strb	r2, [r3]
 6044 0ad2 97F89D34 		ldrb	r3, [r7, #1181]
 6045 0ad6 0A33     		adds	r3, r3, #10
 6046 0ad8 DAB2     		uxtb	r2, r3
 6047 0ada 07F52573 		add	r3, r7, #660
 6048 0ade 5A70     		strb	r2, [r3, #1]
 6049 0ae0 97F89D34 		ldrb	r3, [r7, #1181]
 6050 0ae4 0A33     		adds	r3, r3, #10
 6051 0ae6 DAB2     		uxtb	r2, r3
 6052 0ae8 07F52573 		add	r3, r7, #660
 6053 0aec 9A70     		strb	r2, [r3, #2]
 6054 0aee 97F89D34 		ldrb	r3, [r7, #1181]
 6055 0af2 0A33     		adds	r3, r3, #10
 6056 0af4 DAB2     		uxtb	r2, r3
 6057 0af6 07F52573 		add	r3, r7, #660
 6058 0afa DA70     		strb	r2, [r3, #3]
 6059 0afc 97F89D34 		ldrb	r3, [r7, #1181]
 6060 0b00 0A33     		adds	r3, r3, #10
 6061 0b02 DAB2     		uxtb	r2, r3
 6062 0b04 07F52573 		add	r3, r7, #660
 6063 0b08 1A71     		strb	r2, [r3, #4]
 6064 0b0a 97F89D34 		ldrb	r3, [r7, #1181]
 6065 0b0e 0A33     		adds	r3, r3, #10
 6066 0b10 DAB2     		uxtb	r2, r3
 6067 0b12 07F52573 		add	r3, r7, #660
 6068 0b16 5A71     		strb	r2, [r3, #5]
 958:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 959:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6069              		.loc 1 959 0
 6070 0b18 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6071 0b1c D7F8A014 		ldr	r1, [r7, #1184]
 6072 0b20 1346     		mov	r3, r2
 6073 0b22 DB00     		lsls	r3, r3, #3
 6074 0b24 9B1A     		subs	r3, r3, r2
 6075 0b26 1B01     		lsls	r3, r3, #4
 6076 0b28 0B44     		add	r3, r3, r1
 6077 0b2a 03F58873 		add	r3, r3, #272
 6078 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6079              		.loc 1 957 0
 6080 0b30 1433     		adds	r3, r3, #20
 6081 0b32 DAB2     		uxtb	r2, r3
 6082 0b34 07F52573 		add	r3, r7, #660
 6083 0b38 9A71     		strb	r2, [r3, #6]
 6084              		.loc 1 959 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 150


 6085 0b3a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6086 0b3e D7F8A014 		ldr	r1, [r7, #1184]
 6087 0b42 1346     		mov	r3, r2
 6088 0b44 DB00     		lsls	r3, r3, #3
 6089 0b46 9B1A     		subs	r3, r3, r2
 6090 0b48 1B01     		lsls	r3, r3, #4
 6091 0b4a 0B44     		add	r3, r3, r1
 6092 0b4c 03F58873 		add	r3, r3, #272
 6093 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6094              		.loc 1 957 0
 6095 0b52 1433     		adds	r3, r3, #20
 6096 0b54 DAB2     		uxtb	r2, r3
 6097 0b56 07F52573 		add	r3, r7, #660
 6098 0b5a DA71     		strb	r2, [r3, #7]
 960:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6099              		.loc 1 960 0
 6100 0b5c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6101 0b60 D7F8A014 		ldr	r1, [r7, #1184]
 6102 0b64 1346     		mov	r3, r2
 6103 0b66 DB00     		lsls	r3, r3, #3
 6104 0b68 9B1A     		subs	r3, r3, r2
 6105 0b6a 1B01     		lsls	r3, r3, #4
 6106 0b6c 0B44     		add	r3, r3, r1
 6107 0b6e 03F58873 		add	r3, r3, #272
 6108 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6109              		.loc 1 957 0
 6110 0b74 1433     		adds	r3, r3, #20
 6111 0b76 DAB2     		uxtb	r2, r3
 6112 0b78 07F52573 		add	r3, r7, #660
 6113 0b7c 1A72     		strb	r2, [r3, #8]
 6114 0b7e 97F89D34 		ldrb	r3, [r7, #1181]
 6115 0b82 0A33     		adds	r3, r3, #10
 6116 0b84 DAB2     		uxtb	r2, r3
 6117 0b86 07F52573 		add	r3, r7, #660
 6118 0b8a 5A72     		strb	r2, [r3, #9]
 6119 0b8c 97F89D34 		ldrb	r3, [r7, #1181]
 6120 0b90 0A33     		adds	r3, r3, #10
 6121 0b92 DAB2     		uxtb	r2, r3
 6122 0b94 07F52573 		add	r3, r7, #660
 6123 0b98 9A72     		strb	r2, [r3, #10]
 6124 0b9a 97F89D34 		ldrb	r3, [r7, #1181]
 6125 0b9e 0A33     		adds	r3, r3, #10
 6126 0ba0 DAB2     		uxtb	r2, r3
 6127 0ba2 07F52573 		add	r3, r7, #660
 6128 0ba6 DA72     		strb	r2, [r3, #11]
 6129 0ba8 97F89D34 		ldrb	r3, [r7, #1181]
 6130 0bac 0A33     		adds	r3, r3, #10
 6131 0bae DAB2     		uxtb	r2, r3
 6132 0bb0 07F52573 		add	r3, r7, #660
 6133 0bb4 1A73     		strb	r2, [r3, #12]
 6134 0bb6 07F52573 		add	r3, r7, #660
 6135 0bba 1E22     		movs	r2, #30
 6136 0bbc 5A73     		strb	r2, [r3, #13]
 6137 0bbe 07F52573 		add	r3, r7, #660
 6138 0bc2 1E22     		movs	r2, #30
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 151


 6139 0bc4 9A73     		strb	r2, [r3, #14]
 6140 0bc6 07F52573 		add	r3, r7, #660
 6141 0bca 1E22     		movs	r2, #30
 6142 0bcc DA73     		strb	r2, [r3, #15]
 6143 0bce 07F52573 		add	r3, r7, #660
 6144 0bd2 1E22     		movs	r2, #30
 6145 0bd4 1A74     		strb	r2, [r3, #16]
 961:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 962:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6146              		.loc 1 962 0
 6147 0bd6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6148 0bda D7F8A014 		ldr	r1, [r7, #1184]
 6149 0bde 1346     		mov	r3, r2
 6150 0be0 DB00     		lsls	r3, r3, #3
 6151 0be2 9B1A     		subs	r3, r3, r2
 6152 0be4 1B01     		lsls	r3, r3, #4
 6153 0be6 0B44     		add	r3, r3, r1
 6154 0be8 03F58873 		add	r3, r3, #272
 6155 0bec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6156              		.loc 1 957 0
 6157 0bee 1433     		adds	r3, r3, #20
 6158 0bf0 DAB2     		uxtb	r2, r3
 6159 0bf2 07F52573 		add	r3, r7, #660
 6160 0bf6 5A74     		strb	r2, [r3, #17]
 6161              		.loc 1 962 0
 6162 0bf8 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6163 0bfc 04E0     		b	.L335
 6164              	.L336:
 6165 0bfe 00BF     		.align	2
 6166              	.L334:
 6167 0c00 24040000 		.word	.LC0
 6168 0c04 00000000 		.word	N_Encoder_Line_Connected
 6169              	.L335:
 6170 0c08 D7F8A014 		ldr	r1, [r7, #1184]
 6171 0c0c 1346     		mov	r3, r2
 6172 0c0e DB00     		lsls	r3, r3, #3
 6173 0c10 9B1A     		subs	r3, r3, r2
 6174 0c12 1B01     		lsls	r3, r3, #4
 6175 0c14 0B44     		add	r3, r3, r1
 6176 0c16 03F58873 		add	r3, r3, #272
 6177 0c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6178              		.loc 1 957 0
 6179 0c1c 1433     		adds	r3, r3, #20
 6180 0c1e DAB2     		uxtb	r2, r3
 6181 0c20 07F52573 		add	r3, r7, #660
 6182 0c24 9A74     		strb	r2, [r3, #18]
 6183 0c26 97F89D34 		ldrb	r3, [r7, #1181]
 6184 0c2a 0A33     		adds	r3, r3, #10
 6185 0c2c DAB2     		uxtb	r2, r3
 6186 0c2e 07F52573 		add	r3, r7, #660
 6187 0c32 DA74     		strb	r2, [r3, #19]
 6188 0c34 97F89D34 		ldrb	r3, [r7, #1181]
 6189 0c38 0A33     		adds	r3, r3, #10
 6190 0c3a DAB2     		uxtb	r2, r3
 6191 0c3c 07F52573 		add	r3, r7, #660
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 152


 6192 0c40 1A75     		strb	r2, [r3, #20]
 6193 0c42 07F52573 		add	r3, r7, #660
 6194 0c46 0022     		movs	r2, #0
 6195 0c48 5A75     		strb	r2, [r3, #21]
 6196 0c4a 07F52573 		add	r3, r7, #660
 6197 0c4e 4622     		movs	r2, #70
 6198 0c50 9A75     		strb	r2, [r3, #22]
 6199 0c52 07F52573 		add	r3, r7, #660
 6200 0c56 4622     		movs	r2, #70
 6201 0c58 DA75     		strb	r2, [r3, #23]
 6202 0c5a 07F52573 		add	r3, r7, #660
 6203 0c5e 4622     		movs	r2, #70
 6204 0c60 1A76     		strb	r2, [r3, #24]
 6205 0c62 07F52573 		add	r3, r7, #660
 6206 0c66 4622     		movs	r2, #70
 6207 0c68 5A76     		strb	r2, [r3, #25]
 6208 0c6a 07F52573 		add	r3, r7, #660
 6209 0c6e 1E22     		movs	r2, #30
 6210 0c70 9A76     		strb	r2, [r3, #26]
 6211 0c72 07F52573 		add	r3, r7, #660
 6212 0c76 0022     		movs	r2, #0
 6213 0c78 DA76     		strb	r2, [r3, #27]
 6214 0c7a 07F52573 		add	r3, r7, #660
 6215 0c7e 2822     		movs	r2, #40
 6216 0c80 1A77     		strb	r2, [r3, #28]
 6217 0c82 07F52573 		add	r3, r7, #660
 6218 0c86 3222     		movs	r2, #50
 6219 0c88 5A77     		strb	r2, [r3, #29]
 6220 0c8a 07F52573 		add	r3, r7, #660
 6221 0c8e 0022     		movs	r2, #0
 6222 0c90 9A77     		strb	r2, [r3, #30]
 6223 0c92 07F52573 		add	r3, r7, #660
 6224 0c96 3222     		movs	r2, #50
 6225 0c98 DA77     		strb	r2, [r3, #31]
 6226 0c9a 07F52573 		add	r3, r7, #660
 6227 0c9e 2822     		movs	r2, #40
 6228 0ca0 83F82020 		strb	r2, [r3, #32]
 6229 0ca4 07F52573 		add	r3, r7, #660
 6230 0ca8 2822     		movs	r2, #40
 6231 0caa 83F82120 		strb	r2, [r3, #33]
 6232 0cae 07F52573 		add	r3, r7, #660
 6233 0cb2 0022     		movs	r2, #0
 6234 0cb4 83F82220 		strb	r2, [r3, #34]
 963:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 964:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 965:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 966:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6235              		.loc 1 966 0
 6236 0cb8 D7F8A034 		ldr	r3, [r7, #1184]
 6237 0cbc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6238              		.loc 1 957 0
 6239 0cc0 3C33     		adds	r3, r3, #60
 6240 0cc2 DAB2     		uxtb	r2, r3
 6241 0cc4 07F52573 		add	r3, r7, #660
 6242 0cc8 83F82320 		strb	r2, [r3, #35]
 6243 0ccc 97F89D34 		ldrb	r3, [r7, #1181]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 153


 6244 0cd0 0A33     		adds	r3, r3, #10
 6245 0cd2 DAB2     		uxtb	r2, r3
 6246 0cd4 07F52573 		add	r3, r7, #660
 6247 0cd8 83F82420 		strb	r2, [r3, #36]
 6248 0cdc 97F89D34 		ldrb	r3, [r7, #1181]
 6249 0ce0 0A33     		adds	r3, r3, #10
 6250 0ce2 DAB2     		uxtb	r2, r3
 6251 0ce4 07F52573 		add	r3, r7, #660
 6252 0ce8 83F82520 		strb	r2, [r3, #37]
 6253 0cec 97F89D34 		ldrb	r3, [r7, #1181]
 6254 0cf0 0A33     		adds	r3, r3, #10
 6255 0cf2 DAB2     		uxtb	r2, r3
 6256 0cf4 07F52573 		add	r3, r7, #660
 6257 0cf8 83F82620 		strb	r2, [r3, #38]
 6258 0cfc 97F89D34 		ldrb	r3, [r7, #1181]
 6259 0d00 0A33     		adds	r3, r3, #10
 6260 0d02 DAB2     		uxtb	r2, r3
 6261 0d04 07F52573 		add	r3, r7, #660
 6262 0d08 83F82720 		strb	r2, [r3, #39]
 967:..\src/command_processing.c ****         
 968:..\src/command_processing.c ****         // GENERIC PARAMS
 969:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 970:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6263              		.loc 1 970 0
 6264 0d0c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6265 0d10 D7F8A014 		ldr	r1, [r7, #1184]
 6266 0d14 1346     		mov	r3, r2
 6267 0d16 DB00     		lsls	r3, r3, #3
 6268 0d18 9B1A     		subs	r3, r3, r2
 6269 0d1a 1B01     		lsls	r3, r3, #4
 6270 0d1c 0B44     		add	r3, r3, r1
 6271 0d1e 03F58873 		add	r3, r3, #272
 6272 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6273              		.loc 1 957 0
 6274 0d24 1433     		adds	r3, r3, #20
 6275 0d26 DAB2     		uxtb	r2, r3
 6276 0d28 07F52573 		add	r3, r7, #660
 6277 0d2c 83F82820 		strb	r2, [r3, #40]
 6278              		.loc 1 970 0
 6279 0d30 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6280 0d34 D7F8A014 		ldr	r1, [r7, #1184]
 6281 0d38 1346     		mov	r3, r2
 6282 0d3a DB00     		lsls	r3, r3, #3
 6283 0d3c 9B1A     		subs	r3, r3, r2
 6284 0d3e 1B01     		lsls	r3, r3, #4
 6285 0d40 0B44     		add	r3, r3, r1
 6286 0d42 03F58873 		add	r3, r3, #272
 6287 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6288              		.loc 1 957 0
 6289 0d48 1433     		adds	r3, r3, #20
 6290 0d4a DAB2     		uxtb	r2, r3
 6291 0d4c 07F52573 		add	r3, r7, #660
 6292 0d50 83F82920 		strb	r2, [r3, #41]
 6293 0d54 07F52573 		add	r3, r7, #660
 6294 0d58 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 154


 6295 0d5a 83F82A20 		strb	r2, [r3, #42]
 6296 0d5e 97F89C34 		ldrb	r3, [r7, #1180]
 6297 0d62 0A33     		adds	r3, r3, #10
 6298 0d64 DAB2     		uxtb	r2, r3
 6299 0d66 07F52573 		add	r3, r7, #660
 6300 0d6a 83F82B20 		strb	r2, [r3, #43]
 6301 0d6e 97F89C34 		ldrb	r3, [r7, #1180]
 6302 0d72 0A33     		adds	r3, r3, #10
 6303 0d74 DAB2     		uxtb	r2, r3
 6304 0d76 07F52573 		add	r3, r7, #660
 6305 0d7a 83F82C20 		strb	r2, [r3, #44]
 6306 0d7e 97F89C34 		ldrb	r3, [r7, #1180]
 6307 0d82 0A33     		adds	r3, r3, #10
 6308 0d84 DAB2     		uxtb	r2, r3
 6309 0d86 07F52573 		add	r3, r7, #660
 6310 0d8a 83F82D20 		strb	r2, [r3, #45]
 6311 0d8e 97F89C34 		ldrb	r3, [r7, #1180]
 6312 0d92 0A33     		adds	r3, r3, #10
 6313 0d94 DAB2     		uxtb	r2, r3
 6314 0d96 07F52573 		add	r3, r7, #660
 6315 0d9a 83F82E20 		strb	r2, [r3, #46]
 6316 0d9e 97F89C34 		ldrb	r3, [r7, #1180]
 6317 0da2 0A33     		adds	r3, r3, #10
 6318 0da4 DAB2     		uxtb	r2, r3
 6319 0da6 07F52573 		add	r3, r7, #660
 6320 0daa 83F82F20 		strb	r2, [r3, #47]
 971:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 972:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 6321              		.loc 1 972 0
 6322 0dae 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6323 0db2 D7F8A014 		ldr	r1, [r7, #1184]
 6324 0db6 1346     		mov	r3, r2
 6325 0db8 DB00     		lsls	r3, r3, #3
 6326 0dba 9B1A     		subs	r3, r3, r2
 6327 0dbc 1B01     		lsls	r3, r3, #4
 6328 0dbe 0B44     		add	r3, r3, r1
 6329 0dc0 03F58873 		add	r3, r3, #272
 6330 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6331              		.loc 1 957 0
 6332 0dc6 1433     		adds	r3, r3, #20
 6333 0dc8 DAB2     		uxtb	r2, r3
 6334 0dca 07F52573 		add	r3, r7, #660
 6335 0dce 83F83020 		strb	r2, [r3, #48]
 6336              		.loc 1 972 0
 6337 0dd2 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6338 0dd6 D7F8A014 		ldr	r1, [r7, #1184]
 6339 0dda 1346     		mov	r3, r2
 6340 0ddc DB00     		lsls	r3, r3, #3
 6341 0dde 9B1A     		subs	r3, r3, r2
 6342 0de0 1B01     		lsls	r3, r3, #4
 6343 0de2 0B44     		add	r3, r3, r1
 6344 0de4 03F58873 		add	r3, r3, #272
 6345 0de8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6346              		.loc 1 957 0
 6347 0dea 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 155


 6348 0dec DAB2     		uxtb	r2, r3
 6349 0dee 07F52573 		add	r3, r7, #660
 6350 0df2 83F83120 		strb	r2, [r3, #49]
 6351              		.loc 1 972 0
 6352 0df6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6353 0dfa D7F8A014 		ldr	r1, [r7, #1184]
 6354 0dfe 1346     		mov	r3, r2
 6355 0e00 DB00     		lsls	r3, r3, #3
 6356 0e02 9B1A     		subs	r3, r3, r2
 6357 0e04 1B01     		lsls	r3, r3, #4
 6358 0e06 0B44     		add	r3, r3, r1
 6359 0e08 03F58873 		add	r3, r3, #272
 6360 0e0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6361              		.loc 1 957 0
 6362 0e0e 1433     		adds	r3, r3, #20
 6363 0e10 DAB2     		uxtb	r2, r3
 6364 0e12 07F52573 		add	r3, r7, #660
 6365 0e16 83F83220 		strb	r2, [r3, #50]
 6366 0e1a 97F89C34 		ldrb	r3, [r7, #1180]
 6367 0e1e 0A33     		adds	r3, r3, #10
 6368 0e20 DAB2     		uxtb	r2, r3
 6369 0e22 07F52573 		add	r3, r7, #660
 6370 0e26 83F83320 		strb	r2, [r3, #51]
 6371 0e2a 97F89C34 		ldrb	r3, [r7, #1180]
 6372 0e2e 0A33     		adds	r3, r3, #10
 6373 0e30 DAB2     		uxtb	r2, r3
 6374 0e32 07F52573 		add	r3, r7, #660
 6375 0e36 83F83420 		strb	r2, [r3, #52]
 6376 0e3a 97F89C34 		ldrb	r3, [r7, #1180]
 6377 0e3e 0A33     		adds	r3, r3, #10
 6378 0e40 DAB2     		uxtb	r2, r3
 6379 0e42 07F52573 		add	r3, r7, #660
 6380 0e46 83F83520 		strb	r2, [r3, #53]
 6381 0e4a 97F89C34 		ldrb	r3, [r7, #1180]
 6382 0e4e 0A33     		adds	r3, r3, #10
 6383 0e50 DAB2     		uxtb	r2, r3
 6384 0e52 07F52573 		add	r3, r7, #660
 6385 0e56 83F83620 		strb	r2, [r3, #54]
 973:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6386              		.loc 1 973 0
 6387 0e5a 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6388 0e5e D7F8A014 		ldr	r1, [r7, #1184]
 6389 0e62 1346     		mov	r3, r2
 6390 0e64 DB00     		lsls	r3, r3, #3
 6391 0e66 9B1A     		subs	r3, r3, r2
 6392 0e68 1B01     		lsls	r3, r3, #4
 6393 0e6a 0B44     		add	r3, r3, r1
 6394 0e6c 03F58873 		add	r3, r3, #272
 6395 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6396              		.loc 1 957 0
 6397 0e72 1433     		adds	r3, r3, #20
 6398 0e74 DAB2     		uxtb	r2, r3
 6399 0e76 07F52573 		add	r3, r7, #660
 6400 0e7a 83F83720 		strb	r2, [r3, #55]
 974:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 156


 6401              		.loc 1 974 0
 6402 0e7e 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6403 0e82 D7F8A014 		ldr	r1, [r7, #1184]
 6404 0e86 1346     		mov	r3, r2
 6405 0e88 DB00     		lsls	r3, r3, #3
 6406 0e8a 9B1A     		subs	r3, r3, r2
 6407 0e8c 1B01     		lsls	r3, r3, #4
 6408 0e8e 0B44     		add	r3, r3, r1
 6409 0e90 03F58873 		add	r3, r3, #272
 6410 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6411              		.loc 1 957 0
 6412 0e96 1433     		adds	r3, r3, #20
 6413 0e98 DAB2     		uxtb	r2, r3
 6414 0e9a 07F52573 		add	r3, r7, #660
 6415 0e9e 83F83820 		strb	r2, [r3, #56]
 6416 0ea2 97F89C34 		ldrb	r3, [r7, #1180]
 6417 0ea6 0A33     		adds	r3, r3, #10
 6418 0ea8 DAB2     		uxtb	r2, r3
 6419 0eaa 07F52573 		add	r3, r7, #660
 6420 0eae 83F83920 		strb	r2, [r3, #57]
 6421 0eb2 97F89C34 		ldrb	r3, [r7, #1180]
 6422 0eb6 0A33     		adds	r3, r3, #10
 6423 0eb8 DAB2     		uxtb	r2, r3
 6424 0eba 07F52573 		add	r3, r7, #660
 6425 0ebe 83F83A20 		strb	r2, [r3, #58]
 6426 0ec2 97F89C34 		ldrb	r3, [r7, #1180]
 6427 0ec6 0A33     		adds	r3, r3, #10
 6428 0ec8 DAB2     		uxtb	r2, r3
 6429 0eca 07F52573 		add	r3, r7, #660
 6430 0ece 83F83B20 		strb	r2, [r3, #59]
 6431 0ed2 97F89C34 		ldrb	r3, [r7, #1180]
 6432 0ed6 0A33     		adds	r3, r3, #10
 6433 0ed8 DAB2     		uxtb	r2, r3
 6434 0eda 07F52573 		add	r3, r7, #660
 6435 0ede 83F83C20 		strb	r2, [r3, #60]
 6436 0ee2 97F89C34 		ldrb	r3, [r7, #1180]
 6437 0ee6 0A33     		adds	r3, r3, #10
 6438 0ee8 DAB2     		uxtb	r2, r3
 6439 0eea 07F52573 		add	r3, r7, #660
 6440 0eee 83F83D20 		strb	r2, [r3, #61]
 6441 0ef2 97F89C34 		ldrb	r3, [r7, #1180]
 6442 0ef6 0A33     		adds	r3, r3, #10
 6443 0ef8 DAB2     		uxtb	r2, r3
 6444 0efa 07F52573 		add	r3, r7, #660
 6445 0efe 83F83E20 		strb	r2, [r3, #62]
 975:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6446              		.loc 1 975 0
 6447 0f02 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6448 0f06 D7F8A014 		ldr	r1, [r7, #1184]
 6449 0f0a 1346     		mov	r3, r2
 6450 0f0c DB00     		lsls	r3, r3, #3
 6451 0f0e 9B1A     		subs	r3, r3, r2
 6452 0f10 1B01     		lsls	r3, r3, #4
 6453 0f12 0B44     		add	r3, r3, r1
 6454 0f14 03F58873 		add	r3, r3, #272
 6455 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 157


 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6456              		.loc 1 957 0
 6457 0f1a 1433     		adds	r3, r3, #20
 6458 0f1c DAB2     		uxtb	r2, r3
 6459 0f1e 07F52573 		add	r3, r7, #660
 6460 0f22 83F83F20 		strb	r2, [r3, #63]
 976:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 6461              		.loc 1 976 0
 6462 0f26 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6463 0f2a D7F8A014 		ldr	r1, [r7, #1184]
 6464 0f2e 1346     		mov	r3, r2
 6465 0f30 DB00     		lsls	r3, r3, #3
 6466 0f32 9B1A     		subs	r3, r3, r2
 6467 0f34 1B01     		lsls	r3, r3, #4
 6468 0f36 0B44     		add	r3, r3, r1
 6469 0f38 03F58873 		add	r3, r3, #272
 6470 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 957:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6471              		.loc 1 957 0
 6472 0f3e 1433     		adds	r3, r3, #20
 6473 0f40 DAB2     		uxtb	r2, r3
 6474 0f42 07F52573 		add	r3, r7, #660
 6475 0f46 83F84020 		strb	r2, [r3, #64]
 6476 0f4a 07F52573 		add	r3, r7, #660
 6477 0f4e 1422     		movs	r2, #20
 6478 0f50 83F84120 		strb	r2, [r3, #65]
 6479 0f54 07F52573 		add	r3, r7, #660
 6480 0f58 1522     		movs	r2, #21
 6481 0f5a 83F84220 		strb	r2, [r3, #66]
 6482 0f5e 07F52573 		add	r3, r7, #660
 6483 0f62 3222     		movs	r2, #50
 6484 0f64 83F84320 		strb	r2, [r3, #67]
 6485 0f68 07F52573 		add	r3, r7, #660
 6486 0f6c 3222     		movs	r2, #50
 6487 0f6e 83F84420 		strb	r2, [r3, #68]
 6488 0f72 07F52573 		add	r3, r7, #660
 6489 0f76 3222     		movs	r2, #50
 6490 0f78 83F84520 		strb	r2, [r3, #69]
 6491 0f7c 07F52573 		add	r3, r7, #660
 6492 0f80 0022     		movs	r2, #0
 6493 0f82 83F84620 		strb	r2, [r3, #70]
 977:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE
 978:..\src/command_processing.c ****     };
 979:..\src/command_processing.c ****     
 980:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 6494              		.loc 1 980 0
 6495 0f86 07F5BC73 		add	r3, r7, #376
 6496 0f8a CA4A     		ldr	r2, .L337
 6497 0f8c 1846     		mov	r0, r3
 6498 0f8e 1146     		mov	r1, r2
 6499 0f90 4FF48E73 		mov	r3, #284
 6500 0f94 1A46     		mov	r2, r3
 6501 0f96 FFF7FEFF 		bl	memcpy
 981:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 982:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 983:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 984:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 158


 985:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 986:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
 987:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
 988:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
 989:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
 990:..\src/command_processing.c ****         
 991:..\src/command_processing.c ****         // GENERIC PARAMS
 992:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
 993:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
 994:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
 995:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
 996:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
 997:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
 998:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
 999:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1000:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:"
1001:..\src/command_processing.c ****     };
1002:..\src/command_processing.c **** 
1003:..\src/command_processing.c ****     //Parameters menu
1004:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 6502              		.loc 1 1004 0
 6503 0f9a 07F58073 		add	r3, r7, #256
 6504 0f9e 0022     		movs	r2, #0
 6505 0fa0 1A60     		str	r2, [r3]
 6506 0fa2 0433     		adds	r3, r3, #4
 6507 0fa4 7222     		movs	r2, #114
 6508 0fa6 0021     		movs	r1, #0
 6509 0fa8 1846     		mov	r0, r3
 6510 0faa FFF7FEFF 		bl	memset
1005:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 6511              		.loc 1 1005 0
 6512 0fae 07F58070 		add	r0, r7, #256
 6513 0fb2 6423     		movs	r3, #100
 6514 0fb4 0A22     		movs	r2, #10
 6515 0fb6 C049     		ldr	r1, .L337+4
 6516 0fb8 FFF7FEFF 		bl	sprintf
1006:..\src/command_processing.c **** 
1007:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 6517              		.loc 1 1007 0
 6518 0fbc 07F1D803 		add	r3, r7, #216
 6519 0fc0 BE4A     		ldr	r2, .L337+8
 6520 0fc2 1A60     		str	r2, [r3]
 6521 0fc4 07F1D803 		add	r3, r7, #216
 6522 0fc8 BD4A     		ldr	r2, .L337+12
 6523 0fca 5A60     		str	r2, [r3, #4]
 6524 0fcc 07F1D803 		add	r3, r7, #216
 6525 0fd0 BC4A     		ldr	r2, .L337+16
 6526 0fd2 9A60     		str	r2, [r3, #8]
 6527 0fd4 07F1D803 		add	r3, r7, #216
 6528 0fd8 BB4A     		ldr	r2, .L337+20
 6529 0fda DA60     		str	r2, [r3, #12]
 6530 0fdc 07F1D803 		add	r3, r7, #216
 6531 0fe0 BA4A     		ldr	r2, .L337+24
 6532 0fe2 1A61     		str	r2, [r3, #16]
 6533 0fe4 07F1D803 		add	r3, r7, #216
 6534 0fe8 B94A     		ldr	r2, .L337+28
 6535 0fea 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 159


 6536 0fec 07F1D803 		add	r3, r7, #216
 6537 0ff0 07F58072 		add	r2, r7, #256
 6538 0ff4 9A61     		str	r2, [r3, #24]
 6539 0ff6 07F1D803 		add	r3, r7, #216
 6540 0ffa B64A     		ldr	r2, .L337+32
 6541 0ffc DA61     		str	r2, [r3, #28]
 6542 0ffe 07F1D803 		add	r3, r7, #216
 6543 1002 B54A     		ldr	r2, .L337+36
 6544 1004 1A62     		str	r2, [r3, #32]
 6545 1006 07F1D803 		add	r3, r7, #216
 6546 100a B44A     		ldr	r2, .L337+40
 6547 100c 5A62     		str	r2, [r3, #36]
1008:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1009:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1010:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1011:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1012:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1013:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1014:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1015:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1016:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1017:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\nThe board will reset\n"                         
1018:..\src/command_processing.c ****     };   
1019:..\src/command_processing.c ****     
1020:..\src/command_processing.c ****     uint8 NUM_MENU[28] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 6548              		.loc 1 1020 0
 6549 100e 07F1BC03 		add	r3, r7, #188
 6550 1012 B34A     		ldr	r2, .L337+44
 6551 1014 1C46     		mov	r4, r3
 6552 1016 1546     		mov	r5, r2
 6553 1018 2868     		ldr	r0, [r5]	@ unaligned
 6554 101a 6968     		ldr	r1, [r5, #4]	@ unaligned
 6555 101c AA68     		ldr	r2, [r5, #8]	@ unaligned
 6556 101e EB68     		ldr	r3, [r5, #12]	@ unaligned
 6557 1020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6558 1022 2869     		ldr	r0, [r5, #16]	@ unaligned
 6559 1024 6969     		ldr	r1, [r5, #20]	@ unaligned
 6560 1026 AA69     		ldr	r2, [r5, #24]	@ unaligned
 6561 1028 07C4     		stmia	r4!, {r0, r1, r2}
1021:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 6562              		.loc 1 1021 0
 6563 102a 07F1B003 		add	r3, r7, #176
 6564 102e AD4A     		ldr	r2, .L337+48
 6565 1030 1068     		ldr	r0, [r2]	@ unaligned
 6566 1032 5168     		ldr	r1, [r2, #4]	@ unaligned
 6567 1034 03C3     		stmia	r3!, {r0, r1}
 6568 1036 127A     		ldrb	r2, [r2, #8]
 6569 1038 1A70     		strb	r2, [r3]
1022:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 6570              		.loc 1 1022 0
 6571 103a 07F19C03 		add	r3, r7, #156
 6572 103e AA4A     		ldr	r2, .L337+52
 6573 1040 1C46     		mov	r4, r3
 6574 1042 1546     		mov	r5, r2
 6575 1044 2868     		ldr	r0, [r5]	@ unaligned
 6576 1046 6968     		ldr	r1, [r5, #4]	@ unaligned
 6577 1048 AA68     		ldr	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 160


 6578 104a EB68     		ldr	r3, [r5, #12]	@ unaligned
 6579 104c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6580 104e 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 6581 1050 2380     		strh	r3, [r4]	@ unaligned
1023:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 6582              		.loc 1 1023 0
 6583 1052 2323     		movs	r3, #35
 6584 1054 87F89B34 		strb	r3, [r7, #1179]
1024:..\src/command_processing.c **** 
1025:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1026:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1027:..\src/command_processing.c ****     
1028:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1029:..\src/command_processing.c **** 
1030:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1031:..\src/command_processing.c ****     
1032:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1033:..\src/command_processing.c ****     j = 0;
 6585              		.loc 1 1033 0
 6586 1058 0023     		movs	r3, #0
 6587 105a 87F8A634 		strb	r3, [r7, #1190]
1034:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6588              		.loc 1 1034 0
 6589 105e 0023     		movs	r3, #0
 6590 1060 87F8A734 		strb	r3, [r7, #1191]
 6591 1064 21E0     		b	.L271
 6592              	.L274:
1035:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6593              		.loc 1 1035 0
 6594 1066 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6595 106a 07F1B002 		add	r2, r7, #176
 6596 106e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6597 1070 1A46     		mov	r2, r3
 6598 1072 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6599 1076 0133     		adds	r3, r3, #1
 6600 1078 9A42     		cmp	r2, r3
 6601 107a 0BD1     		bne	.L272
1036:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 6602              		.loc 1 1036 0
 6603 107c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6604 1080 07F15402 		add	r2, r7, #84
 6605 1084 0121     		movs	r1, #1
 6606 1086 D154     		strb	r1, [r2, r3]
1037:..\src/command_processing.c ****             j++;
 6607              		.loc 1 1037 0
 6608 1088 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6609 108c 0133     		adds	r3, r3, #1
 6610 108e 87F8A634 		strb	r3, [r7, #1190]
 6611 1092 05E0     		b	.L273
 6612              	.L272:
1038:..\src/command_processing.c ****         }
1039:..\src/command_processing.c ****         else {
1040:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 6613              		.loc 1 1040 0
 6614 1094 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6615 1098 07F15402 		add	r2, r7, #84
 6616 109c 0021     		movs	r1, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 161


 6617 109e D154     		strb	r1, [r2, r3]
 6618              	.L273:
1034:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6619              		.loc 1 1034 0 discriminator 2
 6620 10a0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6621 10a4 0133     		adds	r3, r3, #1
 6622 10a6 87F8A734 		strb	r3, [r7, #1191]
 6623              	.L271:
1034:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6624              		.loc 1 1034 0 is_stmt 0 discriminator 1
 6625 10aa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6626 10ae 462B     		cmp	r3, #70
 6627 10b0 D9D9     		bls	.L274
1041:..\src/command_processing.c ****         }
1042:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1043:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1044:..\src/command_processing.c ****     j = 0;
 6628              		.loc 1 1044 0 is_stmt 1
 6629 10b2 0023     		movs	r3, #0
 6630 10b4 87F8A634 		strb	r3, [r7, #1190]
1045:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6631              		.loc 1 1045 0
 6632 10b8 0023     		movs	r3, #0
 6633 10ba 87F8A734 		strb	r3, [r7, #1191]
 6634 10be 21E0     		b	.L275
 6635              	.L278:
1046:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6636              		.loc 1 1046 0
 6637 10c0 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6638 10c4 07F19C02 		add	r2, r7, #156
 6639 10c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6640 10ca 1A46     		mov	r2, r3
 6641 10cc 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6642 10d0 0133     		adds	r3, r3, #1
 6643 10d2 9A42     		cmp	r2, r3
 6644 10d4 0BD1     		bne	.L276
1047:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 6645              		.loc 1 1047 0
 6646 10d6 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6647 10da 07F10C02 		add	r2, r7, #12
 6648 10de 0121     		movs	r1, #1
 6649 10e0 D154     		strb	r1, [r2, r3]
1048:..\src/command_processing.c ****             j++;
 6650              		.loc 1 1048 0
 6651 10e2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6652 10e6 0133     		adds	r3, r3, #1
 6653 10e8 87F8A634 		strb	r3, [r7, #1190]
 6654 10ec 05E0     		b	.L277
 6655              	.L276:
1049:..\src/command_processing.c ****         }
1050:..\src/command_processing.c ****         else {
1051:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 6656              		.loc 1 1051 0
 6657 10ee 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6658 10f2 07F10C02 		add	r2, r7, #12
 6659 10f6 0021     		movs	r1, #0
 6660 10f8 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 162


 6661              	.L277:
1045:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6662              		.loc 1 1045 0 discriminator 2
 6663 10fa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6664 10fe 0133     		adds	r3, r3, #1
 6665 1100 87F8A734 		strb	r3, [r7, #1191]
 6666              	.L275:
1045:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6667              		.loc 1 1045 0 is_stmt 0 discriminator 1
 6668 1104 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6669 1108 462B     		cmp	r3, #70
 6670 110a D9D9     		bls	.L278
1052:..\src/command_processing.c ****         }
1053:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1054:..\src/command_processing.c ****         
1055:..\src/command_processing.c ****     if (!index) {
 6671              		.loc 1 1055 0 is_stmt 1
 6672 110c BB1D     		adds	r3, r7, #6
 6673 110e 1B88     		ldrh	r3, [r3]
 6674 1110 002B     		cmp	r3, #0
 6675 1112 17D1     		bne	.L279
1056:..\src/command_processing.c ****         // Get parameters list with relative types
1057:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 6676              		.loc 1 1057 0
 6677 1114 07F52574 		add	r4, r7, #660
 6678 1118 07F53772 		add	r2, r7, #732
 6679 111c 07F54971 		add	r1, r7, #804
 6680 1120 07F55B70 		add	r0, r7, #876
 6681 1124 07F1D803 		add	r3, r7, #216
 6682 1128 0393     		str	r3, [sp, #12]
 6683 112a 07F15403 		add	r3, r7, #84
 6684 112e 0293     		str	r3, [sp, #8]
 6685 1130 07F5BC73 		add	r3, r7, #376
 6686 1134 0193     		str	r3, [sp, #4]
 6687 1136 07F1BC03 		add	r3, r7, #188
 6688 113a 0093     		str	r3, [sp]
 6689 113c 2346     		mov	r3, r4
 6690 113e FFF7FEFF 		bl	get_param_list
1058:..\src/command_processing.c ****     }
1059:..\src/command_processing.c ****     else {
1060:..\src/command_processing.c ****         // Set specific parameter        
1061:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1062:..\src/command_processing.c ****         
1063:..\src/command_processing.c ****         // Find size of data
1064:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1065:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1066:..\src/command_processing.c ****                 sod = 1; break;
1067:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1068:..\src/command_processing.c ****                 sod = 2; break;
1069:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1070:..\src/command_processing.c ****                 sod = 4; break;
1071:..\src/command_processing.c ****         }   
1072:..\src/command_processing.c ****             
1073:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1074:..\src/command_processing.c ****             // Use default specifications for param setting
1075:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1076:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 163


1077:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1078:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1079:..\src/command_processing.c ****                     }
1080:..\src/command_processing.c ****                     break;                
1081:..\src/command_processing.c ****                 case TYPE_STRING:
1082:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1083:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1084:..\src/command_processing.c ****                     }
1085:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1086:..\src/command_processing.c ****                 break; 
1087:..\src/command_processing.c ****                 case TYPE_INT8:
1088:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1089:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1090:..\src/command_processing.c ****                     }
1091:..\src/command_processing.c ****                     break;                    
1092:..\src/command_processing.c ****                 case TYPE_INT16:
1093:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1094:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1095:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1096:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1097:..\src/command_processing.c ****                         }
1098:..\src/command_processing.c ****                     }                   
1099:..\src/command_processing.c ****                     break;
1100:..\src/command_processing.c ****                 case TYPE_UINT16:
1101:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1102:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1103:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1104:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1105:..\src/command_processing.c ****                         }
1106:..\src/command_processing.c ****                     }
1107:..\src/command_processing.c ****                     break;
1108:..\src/command_processing.c ****                 case TYPE_INT32:
1109:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1110:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1111:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1112:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1113:..\src/command_processing.c ****                         }
1114:..\src/command_processing.c ****                     }
1115:..\src/command_processing.c ****                     break;
1116:..\src/command_processing.c ****                 case TYPE_UINT32:
1117:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1118:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1119:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1120:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1121:..\src/command_processing.c ****                         }
1122:..\src/command_processing.c ****                     }
1123:..\src/command_processing.c ****                     break;
1124:..\src/command_processing.c ****                 case TYPE_FLOAT:
1125:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1126:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1127:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1128:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1129:..\src/command_processing.c ****                         }
1130:..\src/command_processing.c ****                     }
1131:..\src/command_processing.c ****                     break;
1132:..\src/command_processing.c ****                 default:
1133:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 164


1134:..\src/command_processing.c ****             }
1135:..\src/command_processing.c ****         }
1136:..\src/command_processing.c ****         else {  
1137:..\src/command_processing.c ****             // Use custom specifications for param setting
1138:..\src/command_processing.c ****             set_custom_param(index);
1139:..\src/command_processing.c ****         }
1140:..\src/command_processing.c ****         
1141:..\src/command_processing.c ****         // Store param also in user_emg structure
1142:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1143:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1144:..\src/command_processing.c ****         }
1145:..\src/command_processing.c ****         
1146:..\src/command_processing.c ****         // Perform chip reset if needed
1147:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1148:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1149:..\src/command_processing.c ****             do {
1150:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1151:..\src/command_processing.c ****                 idx++;
1152:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1153:..\src/command_processing.c ****             
1154:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1155:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1156:..\src/command_processing.c ****             }   
1157:..\src/command_processing.c ****         }
1158:..\src/command_processing.c ****     }
1159:..\src/command_processing.c **** } 
 6691              		.loc 1 1159 0
 6692 1142 D9E2     		b	.L330
 6693              	.L279:
1061:..\src/command_processing.c ****         
 6694              		.loc 1 1061 0
 6695 1144 BB1D     		adds	r3, r7, #6
 6696 1146 1B88     		ldrh	r3, [r3]	@ movhi
 6697 1148 DBB2     		uxtb	r3, r3
 6698 114a 013B     		subs	r3, r3, #1
 6699 114c 87F89A34 		strb	r3, [r7, #1178]
1064:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 6700              		.loc 1 1064 0
 6701 1150 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6702 1154 07F54972 		add	r2, r7, #804
 6703 1158 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6704 115a 092B     		cmp	r3, #9
 6705 115c 22D8     		bhi	.L281
 6706 115e 01A2     		adr	r2, .L283
 6707 1160 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6708              		.p2align 2
 6709              	.L283:
 6710 1164 8D110000 		.word	.L282+1
 6711 1168 8D110000 		.word	.L282+1
 6712 116c 8D110000 		.word	.L282+1
 6713 1170 95110000 		.word	.L284+1
 6714 1174 95110000 		.word	.L284+1
 6715 1178 9D110000 		.word	.L285+1
 6716 117c 9D110000 		.word	.L285+1
 6717 1180 9D110000 		.word	.L285+1
 6718 1184 A5110000 		.word	.L281+1
 6719 1188 8D110000 		.word	.L282+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 165


 6720              		.p2align 1
 6721              	.L282:
1066:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 6722              		.loc 1 1066 0
 6723 118c 0123     		movs	r3, #1
 6724 118e 87F8A534 		strb	r3, [r7, #1189]
 6725 1192 07E0     		b	.L281
 6726              	.L284:
1068:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 6727              		.loc 1 1068 0
 6728 1194 0223     		movs	r3, #2
 6729 1196 87F8A534 		strb	r3, [r7, #1189]
 6730 119a 03E0     		b	.L281
 6731              	.L285:
1070:..\src/command_processing.c ****         }   
 6732              		.loc 1 1070 0
 6733 119c 0423     		movs	r3, #4
 6734 119e 87F8A534 		strb	r3, [r7, #1189]
 6735 11a2 00BF     		nop
 6736              	.L281:
1073:..\src/command_processing.c ****             // Use default specifications for param setting
 6737              		.loc 1 1073 0
 6738 11a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6739 11a8 07F10C02 		add	r2, r7, #12
 6740 11ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6741 11ae 002B     		cmp	r3, #0
 6742 11b0 40F03682 		bne	.L286
1075:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 6743              		.loc 1 1075 0
 6744 11b4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6745 11b8 07F54972 		add	r2, r7, #804
 6746 11bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6747 11be 092B     		cmp	r3, #9
 6748 11c0 00F23682 		bhi	.L329
 6749 11c4 01A2     		adr	r2, .L289
 6750 11c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6751 11ca 00BF     		.p2align 2
 6752              	.L289:
 6753 11cc F5110000 		.word	.L288+1
 6754 11d0 AB120000 		.word	.L290+1
 6755 11d4 F5110000 		.word	.L288+1
 6756 11d8 3B130000 		.word	.L291+1
 6757 11dc D1130000 		.word	.L292+1
 6758 11e0 65140000 		.word	.L293+1
 6759 11e4 F9140000 		.word	.L294+1
 6760 11e8 8D150000 		.word	.L295+1
 6761 11ec 31160000 		.word	.L329+1
 6762 11f0 41120000 		.word	.L296+1
 6763              		.p2align 1
 6764              	.L288:
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6765              		.loc 1 1077 0
 6766 11f4 0023     		movs	r3, #0
 6767 11f6 87F8A734 		strb	r3, [r7, #1191]
 6768 11fa 17E0     		b	.L297
 6769              	.L298:
1078:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 166


 6770              		.loc 1 1078 0 discriminator 3
 6771 11fc 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6772 1200 07F55B73 		add	r3, r7, #876
 6773 1204 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6774 1208 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6775 120c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6776 1210 01FB02F2 		mul	r2, r1, r2
 6777 1214 1344     		add	r3, r3, r2
 6778 1216 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6779 121a 0332     		adds	r2, r2, #3
 6780 121c 3349     		ldr	r1, .L337+56
 6781 121e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6782 1220 1A70     		strb	r2, [r3]
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6783              		.loc 1 1077 0 discriminator 3
 6784 1222 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6785 1226 0133     		adds	r3, r3, #1
 6786 1228 87F8A734 		strb	r3, [r7, #1191]
 6787              	.L297:
1077:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6788              		.loc 1 1077 0 is_stmt 0 discriminator 1
 6789 122c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6790 1230 07F53772 		add	r2, r7, #732
 6791 1234 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6792 1236 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6793 123a 9A42     		cmp	r2, r3
 6794 123c DED3     		bcc	.L298
1080:..\src/command_processing.c ****                 case TYPE_STRING:
 6795              		.loc 1 1080 0 is_stmt 1
 6796 123e F8E1     		b	.L324
 6797              	.L296:
1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6798              		.loc 1 1082 0
 6799 1240 0023     		movs	r3, #0
 6800 1242 87F8A734 		strb	r3, [r7, #1191]
 6801 1246 17E0     		b	.L300
 6802              	.L301:
1083:..\src/command_processing.c ****                     }
 6803              		.loc 1 1083 0 discriminator 3
 6804 1248 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6805 124c 07F55B73 		add	r3, r7, #876
 6806 1250 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6807 1254 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6808 1258 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6809 125c 01FB02F2 		mul	r2, r1, r2
 6810 1260 1344     		add	r3, r3, r2
 6811 1262 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6812 1266 0332     		adds	r2, r2, #3
 6813 1268 2049     		ldr	r1, .L337+56
 6814 126a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6815 126c 1A70     		strb	r2, [r3]
1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6816              		.loc 1 1082 0 discriminator 3
 6817 126e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6818 1272 0133     		adds	r3, r3, #1
 6819 1274 87F8A734 		strb	r3, [r7, #1191]
 6820              	.L300:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 167


1082:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6821              		.loc 1 1082 0 is_stmt 0 discriminator 1
 6822 1278 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6823 127c 07F53772 		add	r2, r7, #732
 6824 1280 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6825 1282 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6826 1286 9A42     		cmp	r2, r3
 6827 1288 DED3     		bcc	.L301
1085:..\src/command_processing.c ****                 break; 
 6828              		.loc 1 1085 0 is_stmt 1
 6829 128a 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6830 128e 07F55B73 		add	r3, r7, #876
 6831 1292 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6832 1296 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6833 129a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6834 129e 01FB02F2 		mul	r2, r1, r2
 6835 12a2 1344     		add	r3, r3, r2
 6836 12a4 0022     		movs	r2, #0
 6837 12a6 1A70     		strb	r2, [r3]
1086:..\src/command_processing.c ****                 case TYPE_INT8:
 6838              		.loc 1 1086 0
 6839 12a8 C3E1     		b	.L324
 6840              	.L290:
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6841              		.loc 1 1088 0
 6842 12aa 0023     		movs	r3, #0
 6843 12ac 87F8A734 		strb	r3, [r7, #1191]
 6844 12b0 39E0     		b	.L302
 6845              	.L338:
 6846 12b2 00BF     		.align	2
 6847              	.L337:
 6848 12b4 940B0000 		.word	.LC105
 6849 12b8 7C010000 		.word	.LC106
 6850 12bc F0010000 		.word	.LC107
 6851 12c0 54020000 		.word	.LC108
 6852 12c4 94020000 		.word	.LC109
 6853 12c8 C0020000 		.word	.LC110
 6854 12cc D8020000 		.word	.LC111
 6855 12d0 00030000 		.word	.LC112
 6856 12d4 5C030000 		.word	.LC113
 6857 12d8 9C030000 		.word	.LC114
 6858 12dc E4030000 		.word	.LC115
 6859 12e0 B00C0000 		.word	.LC73
 6860 12e4 CC0C0000 		.word	.LC74
 6861 12e8 D80C0000 		.word	.LC75
 6862 12ec 00000000 		.word	g_rx
 6863              	.L303:
1089:..\src/command_processing.c ****                     }
 6864              		.loc 1 1089 0 discriminator 3
 6865 12f0 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6866 12f4 07F55B73 		add	r3, r7, #876
 6867 12f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6868 12fc 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6869 1300 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6870 1304 01FB02F2 		mul	r2, r1, r2
 6871 1308 1344     		add	r3, r3, r2
 6872 130a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 168


 6873 130e 0332     		adds	r2, r2, #3
 6874 1310 C649     		ldr	r1, .L339
 6875 1312 0A44     		add	r2, r2, r1
 6876 1314 92F90020 		ldrsb	r2, [r2]
 6877 1318 D2B2     		uxtb	r2, r2
 6878 131a 1A70     		strb	r2, [r3]
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6879              		.loc 1 1088 0 discriminator 3
 6880 131c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6881 1320 0133     		adds	r3, r3, #1
 6882 1322 87F8A734 		strb	r3, [r7, #1191]
 6883              	.L302:
1088:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6884              		.loc 1 1088 0 is_stmt 0 discriminator 1
 6885 1326 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6886 132a 07F53772 		add	r2, r7, #732
 6887 132e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6888 1330 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6889 1334 9A42     		cmp	r2, r3
 6890 1336 DBD3     		bcc	.L303
1091:..\src/command_processing.c ****                 case TYPE_INT16:
 6891              		.loc 1 1091 0 is_stmt 1
 6892 1338 7BE1     		b	.L324
 6893              	.L291:
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6894              		.loc 1 1093 0
 6895 133a 0023     		movs	r3, #0
 6896 133c 87F8A734 		strb	r3, [r7, #1191]
 6897 1340 3CE0     		b	.L304
 6898              	.L307:
1094:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 6899              		.loc 1 1094 0
 6900 1342 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6901 1346 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 6902 134a 02FB03F3 		mul	r3, r2, r3
 6903 134e 0333     		adds	r3, r3, #3
 6904 1350 B64A     		ldr	r2, .L339
 6905 1352 1344     		add	r3, r3, r2
 6906 1354 B3F90030 		ldrsh	r3, [r3]
 6907 1358 A7F89834 		strh	r3, [r7, #1176]	@ movhi
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6908              		.loc 1 1095 0
 6909 135c 0023     		movs	r3, #0
 6910 135e 87F8A634 		strb	r3, [r7, #1190]
 6911 1362 20E0     		b	.L305
 6912              	.L306:
1096:..\src/command_processing.c ****                         }
 6913              		.loc 1 1096 0 discriminator 3
 6914 1364 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6915 1368 07F55B73 		add	r3, r7, #876
 6916 136c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6917 1370 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6918 1374 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6919 1378 01FB03F3 		mul	r3, r1, r3
 6920 137c 1846     		mov	r0, r3
 6921 137e 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6922 1382 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 169


 6923 1386 CB1A     		subs	r3, r1, r3
 6924 1388 0344     		add	r3, r3, r0
 6925 138a 013B     		subs	r3, r3, #1
 6926 138c 1344     		add	r3, r3, r2
 6927 138e 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 6928 1392 07F59361 		add	r1, r7, #1176
 6929 1396 0A44     		add	r2, r2, r1
 6930 1398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6931 139a 1A70     		strb	r2, [r3]
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6932              		.loc 1 1095 0 discriminator 3
 6933 139c 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6934 13a0 0133     		adds	r3, r3, #1
 6935 13a2 87F8A634 		strb	r3, [r7, #1190]
 6936              	.L305:
1095:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6937              		.loc 1 1095 0 is_stmt 0 discriminator 1
 6938 13a6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 6939 13aa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 6940 13ae 9A42     		cmp	r2, r3
 6941 13b0 D8D3     		bcc	.L306
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6942              		.loc 1 1093 0 is_stmt 1 discriminator 2
 6943 13b2 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6944 13b6 0133     		adds	r3, r3, #1
 6945 13b8 87F8A734 		strb	r3, [r7, #1191]
 6946              	.L304:
1093:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6947              		.loc 1 1093 0 is_stmt 0 discriminator 1
 6948 13bc 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6949 13c0 07F53772 		add	r2, r7, #732
 6950 13c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6951 13c6 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6952 13ca 9A42     		cmp	r2, r3
 6953 13cc B9D3     		bcc	.L307
1099:..\src/command_processing.c ****                 case TYPE_UINT16:
 6954              		.loc 1 1099 0 is_stmt 1
 6955 13ce 30E1     		b	.L324
 6956              	.L292:
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 6957              		.loc 1 1101 0
 6958 13d0 0023     		movs	r3, #0
 6959 13d2 87F8A734 		strb	r3, [r7, #1191]
 6960 13d6 3BE0     		b	.L308
 6961              	.L311:
1102:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 6962              		.loc 1 1102 0
 6963 13d8 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6964 13dc 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 6965 13e0 02FB03F3 		mul	r3, r2, r3
 6966 13e4 0333     		adds	r3, r3, #3
 6967 13e6 914A     		ldr	r2, .L339
 6968 13e8 1344     		add	r3, r3, r2
 6969 13ea 1B88     		ldrh	r3, [r3]
 6970 13ec A7F89634 		strh	r3, [r7, #1174]	@ movhi
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 6971              		.loc 1 1103 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 170


 6972 13f0 0023     		movs	r3, #0
 6973 13f2 87F8A634 		strb	r3, [r7, #1190]
 6974 13f6 20E0     		b	.L309
 6975              	.L310:
1104:..\src/command_processing.c ****                         }
 6976              		.loc 1 1104 0 discriminator 3
 6977 13f8 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6978 13fc 07F55B73 		add	r3, r7, #876
 6979 1400 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6980 1404 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6981 1408 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6982 140c 01FB03F3 		mul	r3, r1, r3
 6983 1410 1846     		mov	r0, r3
 6984 1412 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6985 1416 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6986 141a CB1A     		subs	r3, r1, r3
 6987 141c 0344     		add	r3, r3, r0
 6988 141e 013B     		subs	r3, r3, #1
 6989 1420 1344     		add	r3, r3, r2
 6990 1422 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 6991 1426 07F29641 		addw	r1, r7, #1174
 6992 142a 0A44     		add	r2, r2, r1
 6993 142c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6994 142e 1A70     		strb	r2, [r3]
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 6995              		.loc 1 1103 0 discriminator 3
 6996 1430 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6997 1434 0133     		adds	r3, r3, #1
 6998 1436 87F8A634 		strb	r3, [r7, #1190]
 6999              	.L309:
1103:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7000              		.loc 1 1103 0 is_stmt 0 discriminator 1
 7001 143a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7002 143e 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7003 1442 9A42     		cmp	r2, r3
 7004 1444 D8D3     		bcc	.L310
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7005              		.loc 1 1101 0 is_stmt 1 discriminator 2
 7006 1446 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7007 144a 0133     		adds	r3, r3, #1
 7008 144c 87F8A734 		strb	r3, [r7, #1191]
 7009              	.L308:
1101:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7010              		.loc 1 1101 0 is_stmt 0 discriminator 1
 7011 1450 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7012 1454 07F53772 		add	r2, r7, #732
 7013 1458 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7014 145a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7015 145e 9A42     		cmp	r2, r3
 7016 1460 BAD3     		bcc	.L311
1107:..\src/command_processing.c ****                 case TYPE_INT32:
 7017              		.loc 1 1107 0 is_stmt 1
 7018 1462 E6E0     		b	.L324
 7019              	.L293:
1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7020              		.loc 1 1109 0
 7021 1464 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 171


 7022 1466 87F8A734 		strb	r3, [r7, #1191]
 7023 146a 3BE0     		b	.L312
 7024              	.L315:
1110:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7025              		.loc 1 1110 0
 7026 146c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7027 1470 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7028 1474 02FB03F3 		mul	r3, r2, r3
 7029 1478 0333     		adds	r3, r3, #3
 7030 147a 6C4A     		ldr	r2, .L339
 7031 147c 1344     		add	r3, r3, r2
 7032 147e 1B68     		ldr	r3, [r3]
 7033 1480 C7F89034 		str	r3, [r7, #1168]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7034              		.loc 1 1111 0
 7035 1484 0023     		movs	r3, #0
 7036 1486 87F8A634 		strb	r3, [r7, #1190]
 7037 148a 20E0     		b	.L313
 7038              	.L314:
1112:..\src/command_processing.c ****                         }
 7039              		.loc 1 1112 0 discriminator 3
 7040 148c 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7041 1490 07F55B73 		add	r3, r7, #876
 7042 1494 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7043 1498 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7044 149c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7045 14a0 01FB03F3 		mul	r3, r1, r3
 7046 14a4 1846     		mov	r0, r3
 7047 14a6 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7048 14aa 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7049 14ae CB1A     		subs	r3, r1, r3
 7050 14b0 0344     		add	r3, r3, r0
 7051 14b2 013B     		subs	r3, r3, #1
 7052 14b4 1344     		add	r3, r3, r2
 7053 14b6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7054 14ba 07F59261 		add	r1, r7, #1168
 7055 14be 0A44     		add	r2, r2, r1
 7056 14c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7057 14c2 1A70     		strb	r2, [r3]
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7058              		.loc 1 1111 0 discriminator 3
 7059 14c4 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7060 14c8 0133     		adds	r3, r3, #1
 7061 14ca 87F8A634 		strb	r3, [r7, #1190]
 7062              	.L313:
1111:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7063              		.loc 1 1111 0 is_stmt 0 discriminator 1
 7064 14ce 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7065 14d2 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7066 14d6 9A42     		cmp	r2, r3
 7067 14d8 D8D3     		bcc	.L314
1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7068              		.loc 1 1109 0 is_stmt 1 discriminator 2
 7069 14da 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7070 14de 0133     		adds	r3, r3, #1
 7071 14e0 87F8A734 		strb	r3, [r7, #1191]
 7072              	.L312:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 172


1109:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7073              		.loc 1 1109 0 is_stmt 0 discriminator 1
 7074 14e4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7075 14e8 07F53772 		add	r2, r7, #732
 7076 14ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7077 14ee 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7078 14f2 9A42     		cmp	r2, r3
 7079 14f4 BAD3     		bcc	.L315
1115:..\src/command_processing.c ****                 case TYPE_UINT32:
 7080              		.loc 1 1115 0 is_stmt 1
 7081 14f6 9CE0     		b	.L324
 7082              	.L294:
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7083              		.loc 1 1117 0
 7084 14f8 0023     		movs	r3, #0
 7085 14fa 87F8A734 		strb	r3, [r7, #1191]
 7086 14fe 3BE0     		b	.L316
 7087              	.L319:
1118:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7088              		.loc 1 1118 0
 7089 1500 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7090 1504 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7091 1508 02FB03F3 		mul	r3, r2, r3
 7092 150c 0333     		adds	r3, r3, #3
 7093 150e 474A     		ldr	r2, .L339
 7094 1510 1344     		add	r3, r3, r2
 7095 1512 1B68     		ldr	r3, [r3]
 7096 1514 C7F88C34 		str	r3, [r7, #1164]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7097              		.loc 1 1119 0
 7098 1518 0023     		movs	r3, #0
 7099 151a 87F8A634 		strb	r3, [r7, #1190]
 7100 151e 20E0     		b	.L317
 7101              	.L318:
1120:..\src/command_processing.c ****                         }
 7102              		.loc 1 1120 0 discriminator 3
 7103 1520 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7104 1524 07F55B73 		add	r3, r7, #876
 7105 1528 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7106 152c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7107 1530 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7108 1534 01FB03F3 		mul	r3, r1, r3
 7109 1538 1846     		mov	r0, r3
 7110 153a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7111 153e 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7112 1542 CB1A     		subs	r3, r1, r3
 7113 1544 0344     		add	r3, r3, r0
 7114 1546 013B     		subs	r3, r3, #1
 7115 1548 1344     		add	r3, r3, r2
 7116 154a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7117 154e 07F28C41 		addw	r1, r7, #1164
 7118 1552 0A44     		add	r2, r2, r1
 7119 1554 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7120 1556 1A70     		strb	r2, [r3]
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7121              		.loc 1 1119 0 discriminator 3
 7122 1558 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 173


 7123 155c 0133     		adds	r3, r3, #1
 7124 155e 87F8A634 		strb	r3, [r7, #1190]
 7125              	.L317:
1119:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7126              		.loc 1 1119 0 is_stmt 0 discriminator 1
 7127 1562 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7128 1566 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7129 156a 9A42     		cmp	r2, r3
 7130 156c D8D3     		bcc	.L318
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7131              		.loc 1 1117 0 is_stmt 1 discriminator 2
 7132 156e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7133 1572 0133     		adds	r3, r3, #1
 7134 1574 87F8A734 		strb	r3, [r7, #1191]
 7135              	.L316:
1117:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7136              		.loc 1 1117 0 is_stmt 0 discriminator 1
 7137 1578 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7138 157c 07F53772 		add	r2, r7, #732
 7139 1580 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7140 1582 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7141 1586 9A42     		cmp	r2, r3
 7142 1588 BAD3     		bcc	.L319
1123:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7143              		.loc 1 1123 0 is_stmt 1
 7144 158a 52E0     		b	.L324
 7145              	.L295:
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7146              		.loc 1 1125 0
 7147 158c 0023     		movs	r3, #0
 7148 158e 87F8A734 		strb	r3, [r7, #1191]
 7149 1592 3BE0     		b	.L320
 7150              	.L323:
1126:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7151              		.loc 1 1126 0
 7152 1594 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7153 1598 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7154 159c 02FB03F3 		mul	r3, r2, r3
 7155 15a0 0333     		adds	r3, r3, #3
 7156 15a2 224A     		ldr	r2, .L339
 7157 15a4 1344     		add	r3, r3, r2
 7158 15a6 1B68     		ldr	r3, [r3]	@ float
 7159 15a8 C7F88834 		str	r3, [r7, #1160]	@ float
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7160              		.loc 1 1127 0
 7161 15ac 0023     		movs	r3, #0
 7162 15ae 87F8A634 		strb	r3, [r7, #1190]
 7163 15b2 20E0     		b	.L321
 7164              	.L322:
1128:..\src/command_processing.c ****                         }
 7165              		.loc 1 1128 0 discriminator 3
 7166 15b4 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7167 15b8 07F55B73 		add	r3, r7, #876
 7168 15bc 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7169 15c0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7170 15c4 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7171 15c8 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 174


 7172 15cc 1846     		mov	r0, r3
 7173 15ce 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7174 15d2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7175 15d6 CB1A     		subs	r3, r1, r3
 7176 15d8 0344     		add	r3, r3, r0
 7177 15da 013B     		subs	r3, r3, #1
 7178 15dc 1344     		add	r3, r3, r2
 7179 15de 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7180 15e2 07F59161 		add	r1, r7, #1160
 7181 15e6 0A44     		add	r2, r2, r1
 7182 15e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7183 15ea 1A70     		strb	r2, [r3]
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7184              		.loc 1 1127 0 discriminator 3
 7185 15ec 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7186 15f0 0133     		adds	r3, r3, #1
 7187 15f2 87F8A634 		strb	r3, [r7, #1190]
 7188              	.L321:
1127:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7189              		.loc 1 1127 0 is_stmt 0 discriminator 1
 7190 15f6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7191 15fa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7192 15fe 9A42     		cmp	r2, r3
 7193 1600 D8D3     		bcc	.L322
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7194              		.loc 1 1125 0 is_stmt 1 discriminator 2
 7195 1602 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7196 1606 0133     		adds	r3, r3, #1
 7197 1608 87F8A734 		strb	r3, [r7, #1191]
 7198              	.L320:
1125:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7199              		.loc 1 1125 0 is_stmt 0 discriminator 1
 7200 160c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7201 1610 07F53772 		add	r2, r7, #732
 7202 1614 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7203 1616 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7204 161a 9A42     		cmp	r2, r3
 7205 161c BAD3     		bcc	.L323
1131:..\src/command_processing.c ****                 default:
 7206              		.loc 1 1131 0 is_stmt 1
 7207 161e 08E0     		b	.L324
 7208              	.L286:
1138:..\src/command_processing.c ****         }
 7209              		.loc 1 1138 0
 7210 1620 BB1D     		adds	r3, r7, #6
 7211 1622 1B88     		ldrh	r3, [r3]
 7212 1624 1846     		mov	r0, r3
 7213 1626 FFF7FEFF 		bl	set_custom_param
 7214 162a 02E0     		b	.L324
 7215              	.L340:
 7216              		.align	2
 7217              	.L339:
 7218 162c 00000000 		.word	g_rx
 7219              	.L329:
1133:..\src/command_processing.c ****             }
 7220              		.loc 1 1133 0
 7221 1630 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 175


 7222              	.L324:
1142:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 7223              		.loc 1 1142 0
 7224 1632 97F89B34 		ldrb	r3, [r7, #1179]	@ zero_extendqisi2
 7225 1636 9BB2     		uxth	r3, r3
 7226 1638 BA1D     		adds	r2, r7, #6
 7227 163a 1288     		ldrh	r2, [r2]
 7228 163c 9A42     		cmp	r2, r3
 7229 163e 11D0     		beq	.L325
1143:..\src/command_processing.c ****         }
 7230              		.loc 1 1143 0
 7231 1640 D7F8A034 		ldr	r3, [r7, #1184]
 7232 1644 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7233 1648 5B01     		lsls	r3, r3, #5
 7234 164a 03F51273 		add	r3, r3, #584
 7235 164e D7F8A024 		ldr	r2, [r7, #1184]
 7236 1652 D018     		adds	r0, r2, r3
 7237 1654 D7F8A034 		ldr	r3, [r7, #1184]
 7238 1658 03F5F873 		add	r3, r3, #496
 7239 165c 1022     		movs	r2, #16
 7240 165e 1946     		mov	r1, r3
 7241 1660 FFF7FEFF 		bl	memcpy
 7242              	.L325:
1147:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 7243              		.loc 1 1147 0
 7244 1664 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7245 1668 07F54972 		add	r2, r7, #804
 7246 166c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7247 166e 002B     		cmp	r3, #0
 7248 1670 42D1     		bne	.L330
 7249              	.LBB14:
1148:..\src/command_processing.c ****             do {
 7250              		.loc 1 1148 0
 7251 1672 0023     		movs	r3, #0
 7252 1674 87F89F34 		strb	r3, [r7, #1183]
 7253 1678 FF23     		movs	r3, #255
 7254 167a 87F89E34 		strb	r3, [r7, #1182]
 7255              	.L327:
1150:..\src/command_processing.c ****                 idx++;
 7256              		.loc 1 1150 0
 7257 167e 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 7258 1682 07F54972 		add	r2, r7, #804
 7259 1686 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7260 1688 002B     		cmp	r3, #0
 7261 168a 04D1     		bne	.L326
1150:..\src/command_processing.c ****                 idx++;
 7262              		.loc 1 1150 0 is_stmt 0 discriminator 1
 7263 168c 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7264 1690 0133     		adds	r3, r3, #1
 7265 1692 87F89E34 		strb	r3, [r7, #1182]
 7266              	.L326:
1151:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 7267              		.loc 1 1151 0 is_stmt 1
 7268 1696 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 7269 169a 0133     		adds	r3, r3, #1
 7270 169c 87F89F34 		strb	r3, [r7, #1183]
1152:..\src/command_processing.c ****             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 176


 7271              		.loc 1 1152 0
 7272 16a0 97F89F24 		ldrb	r2, [r7, #1183]	@ zero_extendqisi2
 7273 16a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7274 16a8 9A42     		cmp	r2, r3
 7275 16aa E8D9     		bls	.L327
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7276              		.loc 1 1154 0
 7277 16ac 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7278 16b0 07F1BC02 		add	r2, r7, #188
 7279 16b4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7280 16b6 052B     		cmp	r3, #5
 7281 16b8 1BD0     		beq	.L328
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7282              		.loc 1 1154 0 is_stmt 0 discriminator 1
 7283 16ba 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7284 16be 07F1BC02 		add	r2, r7, #188
 7285 16c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7286 16c4 062B     		cmp	r3, #6
 7287 16c6 14D0     		beq	.L328
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7288              		.loc 1 1154 0 discriminator 2
 7289 16c8 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7290 16cc 07F1BC02 		add	r2, r7, #188
 7291 16d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7292 16d2 082B     		cmp	r3, #8
 7293 16d4 0DD0     		beq	.L328
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7294              		.loc 1 1154 0 discriminator 3
 7295 16d6 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7296 16da 07F1BC02 		add	r2, r7, #188
 7297 16de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7298 16e0 092B     		cmp	r3, #9
 7299 16e2 06D0     		beq	.L328
1154:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7300              		.loc 1 1154 0 discriminator 4
 7301 16e4 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7302 16e8 07F1BC02 		add	r2, r7, #188
 7303 16ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7304 16ee 0A2B     		cmp	r3, #10
 7305 16f0 02D1     		bne	.L330
 7306              	.L328:
1155:..\src/command_processing.c ****             }   
 7307              		.loc 1 1155 0 is_stmt 1
 7308 16f2 044B     		ldr	r3, .L341
 7309 16f4 0122     		movs	r2, #1
 7310 16f6 1A70     		strb	r2, [r3]
 7311              	.L330:
 7312              	.LBE14:
 7313              		.loc 1 1159 0
 7314 16f8 00BF     		nop
 7315 16fa 07F59567 		add	r7, r7, #1192
 7316              		.cfi_def_cfa_offset 16
 7317 16fe BD46     		mov	sp, r7
 7318              		.cfi_def_cfa_register 13
 7319              		@ sp needed
 7320 1700 B0BD     		pop	{r4, r5, r7, pc}
 7321              	.L342:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 177


 7322 1702 00BF     		.align	2
 7323              	.L341:
 7324 1704 00000000 		.word	reset_PSoC_flag
 7325              		.cfi_endproc
 7326              	.LFE68:
 7327              		.size	manage_param_list, .-manage_param_list
 7328              		.global	__aeabi_fmul
 7329              		.global	__aeabi_f2iz
 7330              		.section	.text.set_custom_param,"ax",%progbits
 7331              		.align	2
 7332              		.global	set_custom_param
 7333              		.thumb
 7334              		.thumb_func
 7335              		.type	set_custom_param, %function
 7336              	set_custom_param:
 7337              	.LFB69:
1160:..\src/command_processing.c **** 
1161:..\src/command_processing.c **** //==============================================================================
1162:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1163:..\src/command_processing.c **** //==============================================================================
1164:..\src/command_processing.c **** 
1165:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 7338              		.loc 1 1165 0
 7339              		.cfi_startproc
 7340              		@ args = 0, pretend = 0, frame = 24
 7341              		@ frame_needed = 1, uses_anonymous_args = 0
 7342 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7343              		.cfi_def_cfa_offset 20
 7344              		.cfi_offset 4, -20
 7345              		.cfi_offset 5, -16
 7346              		.cfi_offset 6, -12
 7347              		.cfi_offset 7, -8
 7348              		.cfi_offset 14, -4
 7349 0002 87B0     		sub	sp, sp, #28
 7350              		.cfi_def_cfa_offset 48
 7351 0004 00AF     		add	r7, sp, #0
 7352              		.cfi_def_cfa_register 7
 7353 0006 0346     		mov	r3, r0
 7354 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1166:..\src/command_processing.c **** 
1167:..\src/command_processing.c ****     uint8 CYDATA i, j;
1168:..\src/command_processing.c ****     uint8 aux_uchar;
1169:..\src/command_processing.c ****     float aux_float, aux_float2;
1170:..\src/command_processing.c **** 
1171:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7355              		.loc 1 1171 0
 7356 000a 0023     		movs	r3, #0
 7357 000c 3B75     		strb	r3, [r7, #20]
1172:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7358              		.loc 1 1172 0
 7359 000e 0123     		movs	r3, #1
 7360 0010 FB74     		strb	r3, [r7, #19]
1173:..\src/command_processing.c ****     
1174:..\src/command_processing.c ****     switch(index){
 7361              		.loc 1 1174 0
 7362 0012 FB88     		ldrh	r3, [r7, #6]
 7363 0014 023B     		subs	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 178


 7364 0016 452B     		cmp	r3, #69
 7365 0018 01F2EB81 		bhi	.L435
 7366 001c 01A2     		adr	r2, .L346
 7367 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7368 0022 00BF     		.p2align 2
 7369              	.L346:
 7370 0024 3D010000 		.word	.L345+1
 7371 0028 6F030000 		.word	.L347+1
 7372 002c F3130000 		.word	.L435+1
 7373 0030 B5050000 		.word	.L348+1
 7374 0034 F3130000 		.word	.L435+1
 7375 0038 F3130000 		.word	.L435+1
 7376 003c 01060000 		.word	.L349+1
 7377 0040 F3130000 		.word	.L435+1
 7378 0044 F3130000 		.word	.L435+1
 7379 0048 39070000 		.word	.L350+1
 7380 004c F3130000 		.word	.L435+1
 7381 0050 F3130000 		.word	.L435+1
 7382 0054 F3130000 		.word	.L435+1
 7383 0058 F3130000 		.word	.L435+1
 7384 005c F3130000 		.word	.L435+1
 7385 0060 F3130000 		.word	.L435+1
 7386 0064 F3130000 		.word	.L435+1
 7387 0068 F3130000 		.word	.L435+1
 7388 006c F3130000 		.word	.L435+1
 7389 0070 F3130000 		.word	.L435+1
 7390 0074 F3130000 		.word	.L435+1
 7391 0078 39080000 		.word	.L351+1
 7392 007c 97080000 		.word	.L352+1
 7393 0080 F3130000 		.word	.L435+1
 7394 0084 F3130000 		.word	.L435+1
 7395 0088 F3130000 		.word	.L435+1
 7396 008c D1080000 		.word	.L353+1
 7397 0090 F3130000 		.word	.L435+1
 7398 0094 F3130000 		.word	.L435+1
 7399 0098 4D0A0000 		.word	.L354+1
 7400 009c F90A0000 		.word	.L355+1
 7401 00a0 F3130000 		.word	.L435+1
 7402 00a4 F3130000 		.word	.L435+1
 7403 00a8 F3130000 		.word	.L435+1
 7404 00ac F3130000 		.word	.L435+1
 7405 00b0 F3130000 		.word	.L435+1
 7406 00b4 330B0000 		.word	.L356+1
 7407 00b8 F3130000 		.word	.L435+1
 7408 00bc F3130000 		.word	.L435+1
 7409 00c0 F3130000 		.word	.L435+1
 7410 00c4 F3130000 		.word	.L435+1
 7411 00c8 F3130000 		.word	.L435+1
 7412 00cc 6D0B0000 		.word	.L357+1
 7413 00d0 B30D0000 		.word	.L358+1
 7414 00d4 F3130000 		.word	.L435+1
 7415 00d8 F50F0000 		.word	.L359+1
 7416 00dc F3130000 		.word	.L435+1
 7417 00e0 F3130000 		.word	.L435+1
 7418 00e4 3F100000 		.word	.L360+1
 7419 00e8 F3130000 		.word	.L435+1
 7420 00ec F3130000 		.word	.L435+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 179


 7421 00f0 55110000 		.word	.L361+1
 7422 00f4 F3130000 		.word	.L435+1
 7423 00f8 F3130000 		.word	.L435+1
 7424 00fc F3130000 		.word	.L435+1
 7425 0100 F3130000 		.word	.L435+1
 7426 0104 F3130000 		.word	.L435+1
 7427 0108 F3130000 		.word	.L435+1
 7428 010c F3130000 		.word	.L435+1
 7429 0110 53120000 		.word	.L362+1
 7430 0114 F3130000 		.word	.L435+1
 7431 0118 F3130000 		.word	.L435+1
 7432 011c F3130000 		.word	.L435+1
 7433 0120 F3130000 		.word	.L435+1
 7434 0124 F3130000 		.word	.L435+1
 7435 0128 F3130000 		.word	.L435+1
 7436 012c F3130000 		.word	.L435+1
 7437 0130 F3130000 		.word	.L435+1
 7438 0134 F3130000 		.word	.L435+1
 7439 0138 A1120000 		.word	.L363+1
 7440              		.p2align 1
 7441              	.L345:
1175:..\src/command_processing.c ****         case 2:         // Position PID
1176:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7442              		.loc 1 1176 0
 7443 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7444 013e AB49     		ldr	r1, .L441
 7445 0140 1346     		mov	r3, r2
 7446 0142 DB00     		lsls	r3, r3, #3
 7447 0144 9B1A     		subs	r3, r3, r2
 7448 0146 1B01     		lsls	r3, r3, #4
 7449 0148 0B44     		add	r3, r3, r1
 7450 014a 03F20F13 		addw	r3, r3, #271
 7451 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7452 0150 032B     		cmp	r3, #3
 7453 0152 00F08680 		beq	.L364
1177:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7454              		.loc 1 1177 0
 7455 0156 A64B     		ldr	r3, .L441+4
 7456 0158 1B68     		ldr	r3, [r3]	@ float
 7457 015a FB60     		str	r3, [r7, #12]	@ float
1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7458              		.loc 1 1178 0
 7459 015c 0023     		movs	r3, #0
 7460 015e BB75     		strb	r3, [r7, #22]
 7461 0160 0EE0     		b	.L365
 7462              	.L366:
1179:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7463              		.loc 1 1179 0 discriminator 3
 7464 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7465 0164 C3F10303 		rsb	r3, r3, #3
 7466 0168 07F10802 		add	r2, r7, #8
 7467 016c 1344     		add	r3, r3, r2
 7468 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7469 0170 07F10C01 		add	r1, r7, #12
 7470 0174 0A44     		add	r2, r2, r1
 7471 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7472 0178 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 180


1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7473              		.loc 1 1178 0 discriminator 3
 7474 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7475 017c 0133     		adds	r3, r3, #1
 7476 017e BB75     		strb	r3, [r7, #22]
 7477              	.L365:
1178:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7478              		.loc 1 1178 0 is_stmt 0 discriminator 1
 7479 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7480 0182 032B     		cmp	r3, #3
 7481 0184 EDD9     		bls	.L366
1180:..\src/command_processing.c ****                 }
1181:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 7482              		.loc 1 1181 0 is_stmt 1
 7483 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7484 0188 BB68     		ldr	r3, [r7, #8]	@ float
 7485 018a 4FF08F41 		mov	r1, #1199570944
 7486 018e 1846     		mov	r0, r3
 7487 0190 FFF7FEFF 		bl	__aeabi_fmul
 7488 0194 0346     		mov	r3, r0
 7489 0196 1846     		mov	r0, r3
 7490 0198 FFF7FEFF 		bl	__aeabi_f2iz
 7491 019c 0146     		mov	r1, r0
 7492 019e 954A     		ldr	r2, .L441+8
 7493 01a0 2346     		mov	r3, r4
 7494 01a2 DB00     		lsls	r3, r3, #3
 7495 01a4 1B1B     		subs	r3, r3, r4
 7496 01a6 1B01     		lsls	r3, r3, #4
 7497 01a8 1344     		add	r3, r3, r2
 7498 01aa B033     		adds	r3, r3, #176
 7499 01ac 1960     		str	r1, [r3]
1182:..\src/command_processing.c ****                 
1183:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7500              		.loc 1 1183 0
 7501 01ae 924B     		ldr	r3, .L441+12
 7502 01b0 1B68     		ldr	r3, [r3]	@ float
 7503 01b2 FB60     		str	r3, [r7, #12]	@ float
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7504              		.loc 1 1184 0
 7505 01b4 0023     		movs	r3, #0
 7506 01b6 BB75     		strb	r3, [r7, #22]
 7507 01b8 0EE0     		b	.L367
 7508              	.L368:
1185:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7509              		.loc 1 1185 0 discriminator 3
 7510 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7511 01bc C3F10303 		rsb	r3, r3, #3
 7512 01c0 07F10802 		add	r2, r7, #8
 7513 01c4 1344     		add	r3, r3, r2
 7514 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7515 01c8 07F10C01 		add	r1, r7, #12
 7516 01cc 0A44     		add	r2, r2, r1
 7517 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7518 01d0 1A70     		strb	r2, [r3]
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7519              		.loc 1 1184 0 discriminator 3
 7520 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 181


 7521 01d4 0133     		adds	r3, r3, #1
 7522 01d6 BB75     		strb	r3, [r7, #22]
 7523              	.L367:
1184:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7524              		.loc 1 1184 0 is_stmt 0 discriminator 1
 7525 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7526 01da 032B     		cmp	r3, #3
 7527 01dc EDD9     		bls	.L368
1186:..\src/command_processing.c ****                 }
1187:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 7528              		.loc 1 1187 0 is_stmt 1
 7529 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7530 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 7531 01e2 4FF08F41 		mov	r1, #1199570944
 7532 01e6 1846     		mov	r0, r3
 7533 01e8 FFF7FEFF 		bl	__aeabi_fmul
 7534 01ec 0346     		mov	r3, r0
 7535 01ee 1846     		mov	r0, r3
 7536 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 7537 01f4 0146     		mov	r1, r0
 7538 01f6 7F4A     		ldr	r2, .L441+8
 7539 01f8 2346     		mov	r3, r4
 7540 01fa DB00     		lsls	r3, r3, #3
 7541 01fc 1B1B     		subs	r3, r3, r4
 7542 01fe 1B01     		lsls	r3, r3, #4
 7543 0200 1344     		add	r3, r3, r2
 7544 0202 B433     		adds	r3, r3, #180
 7545 0204 1960     		str	r1, [r3]
1188:..\src/command_processing.c ****                 
1189:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7546              		.loc 1 1189 0
 7547 0206 7D4B     		ldr	r3, .L441+16
 7548 0208 1B68     		ldr	r3, [r3]	@ float
 7549 020a FB60     		str	r3, [r7, #12]	@ float
1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7550              		.loc 1 1190 0
 7551 020c 0023     		movs	r3, #0
 7552 020e BB75     		strb	r3, [r7, #22]
 7553 0210 0EE0     		b	.L369
 7554              	.L370:
1191:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7555              		.loc 1 1191 0 discriminator 3
 7556 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7557 0214 C3F10303 		rsb	r3, r3, #3
 7558 0218 07F10802 		add	r2, r7, #8
 7559 021c 1344     		add	r3, r3, r2
 7560 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7561 0220 07F10C01 		add	r1, r7, #12
 7562 0224 0A44     		add	r2, r2, r1
 7563 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7564 0228 1A70     		strb	r2, [r3]
1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7565              		.loc 1 1190 0 discriminator 3
 7566 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7567 022c 0133     		adds	r3, r3, #1
 7568 022e BB75     		strb	r3, [r7, #22]
 7569              	.L369:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 182


1190:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7570              		.loc 1 1190 0 is_stmt 0 discriminator 1
 7571 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7572 0232 032B     		cmp	r3, #3
 7573 0234 EDD9     		bls	.L370
1192:..\src/command_processing.c ****                 }
1193:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 7574              		.loc 1 1193 0 is_stmt 1
 7575 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7576 0238 BB68     		ldr	r3, [r7, #8]	@ float
 7577 023a 4FF08F41 		mov	r1, #1199570944
 7578 023e 1846     		mov	r0, r3
 7579 0240 FFF7FEFF 		bl	__aeabi_fmul
 7580 0244 0346     		mov	r3, r0
 7581 0246 1846     		mov	r0, r3
 7582 0248 FFF7FEFF 		bl	__aeabi_f2iz
 7583 024c 0146     		mov	r1, r0
 7584 024e 694A     		ldr	r2, .L441+8
 7585 0250 2346     		mov	r3, r4
 7586 0252 DB00     		lsls	r3, r3, #3
 7587 0254 1B1B     		subs	r3, r3, r4
 7588 0256 1B01     		lsls	r3, r3, #4
 7589 0258 1344     		add	r3, r3, r2
 7590 025a B833     		adds	r3, r3, #184
 7591 025c 1960     		str	r1, [r3]
1194:..\src/command_processing.c ****             }
1195:..\src/command_processing.c ****             else {
1196:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1197:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1198:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1199:..\src/command_processing.c ****                 }
1200:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1201:..\src/command_processing.c ****                 
1202:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1203:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1204:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1205:..\src/command_processing.c ****                 }
1206:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1207:..\src/command_processing.c ****                 
1208:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1209:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1210:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1211:..\src/command_processing.c ****                 }
1212:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1213:..\src/command_processing.c ****             }
1214:..\src/command_processing.c ****             break;
 7592              		.loc 1 1214 0
 7593 025e 01F0D3B8 		b	.L378
 7594              	.L364:
1196:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7595              		.loc 1 1196 0
 7596 0262 634B     		ldr	r3, .L441+4
 7597 0264 1B68     		ldr	r3, [r3]	@ float
 7598 0266 FB60     		str	r3, [r7, #12]	@ float
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7599              		.loc 1 1197 0
 7600 0268 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 183


 7601 026a BB75     		strb	r3, [r7, #22]
 7602 026c 0EE0     		b	.L372
 7603              	.L373:
1198:..\src/command_processing.c ****                 }
 7604              		.loc 1 1198 0 discriminator 3
 7605 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7606 0270 C3F10303 		rsb	r3, r3, #3
 7607 0274 07F10802 		add	r2, r7, #8
 7608 0278 1344     		add	r3, r3, r2
 7609 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7610 027c 07F10C01 		add	r1, r7, #12
 7611 0280 0A44     		add	r2, r2, r1
 7612 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7613 0284 1A70     		strb	r2, [r3]
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7614              		.loc 1 1197 0 discriminator 3
 7615 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7616 0288 0133     		adds	r3, r3, #1
 7617 028a BB75     		strb	r3, [r7, #22]
 7618              	.L372:
1197:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7619              		.loc 1 1197 0 is_stmt 0 discriminator 1
 7620 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7621 028e 032B     		cmp	r3, #3
 7622 0290 EDD9     		bls	.L373
1200:..\src/command_processing.c ****                 
 7623              		.loc 1 1200 0 is_stmt 1
 7624 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7625 0294 BB68     		ldr	r3, [r7, #8]	@ float
 7626 0296 4FF08F41 		mov	r1, #1199570944
 7627 029a 1846     		mov	r0, r3
 7628 029c FFF7FEFF 		bl	__aeabi_fmul
 7629 02a0 0346     		mov	r3, r0
 7630 02a2 1846     		mov	r0, r3
 7631 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 7632 02a8 0146     		mov	r1, r0
 7633 02aa 524A     		ldr	r2, .L441+8
 7634 02ac 2346     		mov	r3, r4
 7635 02ae DB00     		lsls	r3, r3, #3
 7636 02b0 1B1B     		subs	r3, r3, r4
 7637 02b2 1B01     		lsls	r3, r3, #4
 7638 02b4 1344     		add	r3, r3, r2
 7639 02b6 C833     		adds	r3, r3, #200
 7640 02b8 1960     		str	r1, [r3]
1202:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7641              		.loc 1 1202 0
 7642 02ba 4F4B     		ldr	r3, .L441+12
 7643 02bc 1B68     		ldr	r3, [r3]	@ float
 7644 02be FB60     		str	r3, [r7, #12]	@ float
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7645              		.loc 1 1203 0
 7646 02c0 0023     		movs	r3, #0
 7647 02c2 BB75     		strb	r3, [r7, #22]
 7648 02c4 0EE0     		b	.L374
 7649              	.L375:
1204:..\src/command_processing.c ****                 }
 7650              		.loc 1 1204 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 184


 7651 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7652 02c8 C3F10303 		rsb	r3, r3, #3
 7653 02cc 07F10802 		add	r2, r7, #8
 7654 02d0 1344     		add	r3, r3, r2
 7655 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7656 02d4 07F10C01 		add	r1, r7, #12
 7657 02d8 0A44     		add	r2, r2, r1
 7658 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7659 02dc 1A70     		strb	r2, [r3]
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7660              		.loc 1 1203 0 discriminator 3
 7661 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7662 02e0 0133     		adds	r3, r3, #1
 7663 02e2 BB75     		strb	r3, [r7, #22]
 7664              	.L374:
1203:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7665              		.loc 1 1203 0 is_stmt 0 discriminator 1
 7666 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7667 02e6 032B     		cmp	r3, #3
 7668 02e8 EDD9     		bls	.L375
1206:..\src/command_processing.c ****                 
 7669              		.loc 1 1206 0 is_stmt 1
 7670 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7671 02ec BB68     		ldr	r3, [r7, #8]	@ float
 7672 02ee 4FF08F41 		mov	r1, #1199570944
 7673 02f2 1846     		mov	r0, r3
 7674 02f4 FFF7FEFF 		bl	__aeabi_fmul
 7675 02f8 0346     		mov	r3, r0
 7676 02fa 1846     		mov	r0, r3
 7677 02fc FFF7FEFF 		bl	__aeabi_f2iz
 7678 0300 0146     		mov	r1, r0
 7679 0302 3C4A     		ldr	r2, .L441+8
 7680 0304 2346     		mov	r3, r4
 7681 0306 DB00     		lsls	r3, r3, #3
 7682 0308 1B1B     		subs	r3, r3, r4
 7683 030a 1B01     		lsls	r3, r3, #4
 7684 030c 1344     		add	r3, r3, r2
 7685 030e CC33     		adds	r3, r3, #204
 7686 0310 1960     		str	r1, [r3]
1208:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7687              		.loc 1 1208 0
 7688 0312 3A4B     		ldr	r3, .L441+16
 7689 0314 1B68     		ldr	r3, [r3]	@ float
 7690 0316 FB60     		str	r3, [r7, #12]	@ float
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7691              		.loc 1 1209 0
 7692 0318 0023     		movs	r3, #0
 7693 031a BB75     		strb	r3, [r7, #22]
 7694 031c 0EE0     		b	.L376
 7695              	.L377:
1210:..\src/command_processing.c ****                 }
 7696              		.loc 1 1210 0 discriminator 3
 7697 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7698 0320 C3F10303 		rsb	r3, r3, #3
 7699 0324 07F10802 		add	r2, r7, #8
 7700 0328 1344     		add	r3, r3, r2
 7701 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 185


 7702 032c 07F10C01 		add	r1, r7, #12
 7703 0330 0A44     		add	r2, r2, r1
 7704 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7705 0334 1A70     		strb	r2, [r3]
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7706              		.loc 1 1209 0 discriminator 3
 7707 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7708 0338 0133     		adds	r3, r3, #1
 7709 033a BB75     		strb	r3, [r7, #22]
 7710              	.L376:
1209:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7711              		.loc 1 1209 0 is_stmt 0 discriminator 1
 7712 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7713 033e 032B     		cmp	r3, #3
 7714 0340 EDD9     		bls	.L377
1212:..\src/command_processing.c ****             }
 7715              		.loc 1 1212 0 is_stmt 1
 7716 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7717 0344 BB68     		ldr	r3, [r7, #8]	@ float
 7718 0346 4FF08F41 		mov	r1, #1199570944
 7719 034a 1846     		mov	r0, r3
 7720 034c FFF7FEFF 		bl	__aeabi_fmul
 7721 0350 0346     		mov	r3, r0
 7722 0352 1846     		mov	r0, r3
 7723 0354 FFF7FEFF 		bl	__aeabi_f2iz
 7724 0358 0146     		mov	r1, r0
 7725 035a 264A     		ldr	r2, .L441+8
 7726 035c 2346     		mov	r3, r4
 7727 035e DB00     		lsls	r3, r3, #3
 7728 0360 1B1B     		subs	r3, r3, r4
 7729 0362 1B01     		lsls	r3, r3, #4
 7730 0364 1344     		add	r3, r3, r2
 7731 0366 D033     		adds	r3, r3, #208
 7732 0368 1960     		str	r1, [r3]
 7733              		.loc 1 1214 0
 7734 036a 01F04DB8 		b	.L378
 7735              	.L347:
1215:..\src/command_processing.c ****             
1216:..\src/command_processing.c ****         case 3:         //Current PID
1217:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7736              		.loc 1 1217 0
 7737 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7738 0370 1E49     		ldr	r1, .L441
 7739 0372 1346     		mov	r3, r2
 7740 0374 DB00     		lsls	r3, r3, #3
 7741 0376 9B1A     		subs	r3, r3, r2
 7742 0378 1B01     		lsls	r3, r3, #4
 7743 037a 0B44     		add	r3, r3, r1
 7744 037c 03F20F13 		addw	r3, r3, #271
 7745 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7746 0382 032B     		cmp	r3, #3
 7747 0384 00F09080 		beq	.L379
1218:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7748              		.loc 1 1218 0
 7749 0388 194B     		ldr	r3, .L441+4
 7750 038a 1B68     		ldr	r3, [r3]	@ float
 7751 038c FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 186


1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7752              		.loc 1 1219 0
 7753 038e 0023     		movs	r3, #0
 7754 0390 BB75     		strb	r3, [r7, #22]
 7755 0392 0EE0     		b	.L380
 7756              	.L381:
1220:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7757              		.loc 1 1220 0 discriminator 3
 7758 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7759 0396 C3F10303 		rsb	r3, r3, #3
 7760 039a 07F10802 		add	r2, r7, #8
 7761 039e 1344     		add	r3, r3, r2
 7762 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7763 03a2 07F10C01 		add	r1, r7, #12
 7764 03a6 0A44     		add	r2, r2, r1
 7765 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7766 03aa 1A70     		strb	r2, [r3]
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7767              		.loc 1 1219 0 discriminator 3
 7768 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7769 03ae 0133     		adds	r3, r3, #1
 7770 03b0 BB75     		strb	r3, [r7, #22]
 7771              	.L380:
1219:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7772              		.loc 1 1219 0 is_stmt 0 discriminator 1
 7773 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7774 03b4 032B     		cmp	r3, #3
 7775 03b6 EDD9     		bls	.L381
1221:..\src/command_processing.c ****                 }
1222:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 7776              		.loc 1 1222 0 is_stmt 1
 7777 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7778 03ba BB68     		ldr	r3, [r7, #8]	@ float
 7779 03bc 4FF08F41 		mov	r1, #1199570944
 7780 03c0 1846     		mov	r0, r3
 7781 03c2 FFF7FEFF 		bl	__aeabi_fmul
 7782 03c6 0346     		mov	r3, r0
 7783 03c8 1846     		mov	r0, r3
 7784 03ca FFF7FEFF 		bl	__aeabi_f2iz
 7785 03ce 0146     		mov	r1, r0
 7786 03d0 084A     		ldr	r2, .L441+8
 7787 03d2 2346     		mov	r3, r4
 7788 03d4 DB00     		lsls	r3, r3, #3
 7789 03d6 1B1B     		subs	r3, r3, r4
 7790 03d8 1B01     		lsls	r3, r3, #4
 7791 03da 1344     		add	r3, r3, r2
 7792 03dc BC33     		adds	r3, r3, #188
 7793 03de 1960     		str	r1, [r3]
1223:..\src/command_processing.c ****                 
1224:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7794              		.loc 1 1224 0
 7795 03e0 054B     		ldr	r3, .L441+12
 7796 03e2 1B68     		ldr	r3, [r3]	@ float
 7797 03e4 FB60     		str	r3, [r7, #12]	@ float
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7798              		.loc 1 1225 0
 7799 03e6 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 187


 7800 03e8 BB75     		strb	r3, [r7, #22]
 7801 03ea 18E0     		b	.L382
 7802              	.L442:
 7803              		.align	2
 7804              	.L441:
 7805 03ec 00000000 		.word	c_mem
 7806 03f0 03000000 		.word	g_rx+3
 7807 03f4 00000000 		.word	g_mem
 7808 03f8 07000000 		.word	g_rx+7
 7809 03fc 0B000000 		.word	g_rx+11
 7810              	.L383:
1226:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7811              		.loc 1 1226 0 discriminator 3
 7812 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7813 0402 C3F10303 		rsb	r3, r3, #3
 7814 0406 07F10802 		add	r2, r7, #8
 7815 040a 1344     		add	r3, r3, r2
 7816 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7817 040e 07F10C01 		add	r1, r7, #12
 7818 0412 0A44     		add	r2, r2, r1
 7819 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7820 0416 1A70     		strb	r2, [r3]
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7821              		.loc 1 1225 0 discriminator 3
 7822 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7823 041a 0133     		adds	r3, r3, #1
 7824 041c BB75     		strb	r3, [r7, #22]
 7825              	.L382:
1225:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7826              		.loc 1 1225 0 is_stmt 0 discriminator 1
 7827 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7828 0420 032B     		cmp	r3, #3
 7829 0422 EDD9     		bls	.L383
1227:..\src/command_processing.c ****                 }
1228:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 7830              		.loc 1 1228 0 is_stmt 1
 7831 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7832 0426 BB68     		ldr	r3, [r7, #8]	@ float
 7833 0428 4FF08F41 		mov	r1, #1199570944
 7834 042c 1846     		mov	r0, r3
 7835 042e FFF7FEFF 		bl	__aeabi_fmul
 7836 0432 0346     		mov	r3, r0
 7837 0434 1846     		mov	r0, r3
 7838 0436 FFF7FEFF 		bl	__aeabi_f2iz
 7839 043a 0146     		mov	r1, r0
 7840 043c B64A     		ldr	r2, .L443
 7841 043e 2346     		mov	r3, r4
 7842 0440 DB00     		lsls	r3, r3, #3
 7843 0442 1B1B     		subs	r3, r3, r4
 7844 0444 1B01     		lsls	r3, r3, #4
 7845 0446 1344     		add	r3, r3, r2
 7846 0448 C033     		adds	r3, r3, #192
 7847 044a 1960     		str	r1, [r3]
1229:..\src/command_processing.c ****                 
1230:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7848              		.loc 1 1230 0
 7849 044c B34B     		ldr	r3, .L443+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 188


 7850 044e 1B68     		ldr	r3, [r3]	@ float
 7851 0450 FB60     		str	r3, [r7, #12]	@ float
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7852              		.loc 1 1231 0
 7853 0452 0023     		movs	r3, #0
 7854 0454 BB75     		strb	r3, [r7, #22]
 7855 0456 0EE0     		b	.L384
 7856              	.L385:
1232:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7857              		.loc 1 1232 0 discriminator 3
 7858 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7859 045a C3F10303 		rsb	r3, r3, #3
 7860 045e 07F10802 		add	r2, r7, #8
 7861 0462 1344     		add	r3, r3, r2
 7862 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7863 0466 07F10C01 		add	r1, r7, #12
 7864 046a 0A44     		add	r2, r2, r1
 7865 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7866 046e 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7867              		.loc 1 1231 0 discriminator 3
 7868 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7869 0472 0133     		adds	r3, r3, #1
 7870 0474 BB75     		strb	r3, [r7, #22]
 7871              	.L384:
1231:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7872              		.loc 1 1231 0 is_stmt 0 discriminator 1
 7873 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7874 0478 032B     		cmp	r3, #3
 7875 047a EDD9     		bls	.L385
1233:..\src/command_processing.c ****                 }
1234:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 7876              		.loc 1 1234 0 is_stmt 1
 7877 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7878 047e BB68     		ldr	r3, [r7, #8]	@ float
 7879 0480 4FF08F41 		mov	r1, #1199570944
 7880 0484 1846     		mov	r0, r3
 7881 0486 FFF7FEFF 		bl	__aeabi_fmul
 7882 048a 0346     		mov	r3, r0
 7883 048c 1846     		mov	r0, r3
 7884 048e FFF7FEFF 		bl	__aeabi_f2iz
 7885 0492 0146     		mov	r1, r0
 7886 0494 A04A     		ldr	r2, .L443
 7887 0496 2346     		mov	r3, r4
 7888 0498 DB00     		lsls	r3, r3, #3
 7889 049a 1B1B     		subs	r3, r3, r4
 7890 049c 1B01     		lsls	r3, r3, #4
 7891 049e 1344     		add	r3, r3, r2
 7892 04a0 C433     		adds	r3, r3, #196
 7893 04a2 1960     		str	r1, [r3]
1235:..\src/command_processing.c ****             }
1236:..\src/command_processing.c ****             else {
1237:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1238:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1239:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1240:..\src/command_processing.c ****                 }
1241:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 189


1242:..\src/command_processing.c ****                 
1243:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1244:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1245:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1246:..\src/command_processing.c ****                 }
1247:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1248:..\src/command_processing.c ****                 
1249:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1250:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1251:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1252:..\src/command_processing.c ****                 }
1253:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1254:..\src/command_processing.c ****             }            
1255:..\src/command_processing.c ****             break;  
 7894              		.loc 1 1255 0
 7895 04a4 00F0B0BF 		b	.L378
 7896              	.L379:
1237:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7897              		.loc 1 1237 0
 7898 04a8 9D4B     		ldr	r3, .L443+8
 7899 04aa 1B68     		ldr	r3, [r3]	@ float
 7900 04ac FB60     		str	r3, [r7, #12]	@ float
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7901              		.loc 1 1238 0
 7902 04ae 0023     		movs	r3, #0
 7903 04b0 BB75     		strb	r3, [r7, #22]
 7904 04b2 0EE0     		b	.L387
 7905              	.L388:
1239:..\src/command_processing.c ****                 }
 7906              		.loc 1 1239 0 discriminator 3
 7907 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7908 04b6 C3F10303 		rsb	r3, r3, #3
 7909 04ba 07F10802 		add	r2, r7, #8
 7910 04be 1344     		add	r3, r3, r2
 7911 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7912 04c2 07F10C01 		add	r1, r7, #12
 7913 04c6 0A44     		add	r2, r2, r1
 7914 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7915 04ca 1A70     		strb	r2, [r3]
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7916              		.loc 1 1238 0 discriminator 3
 7917 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7918 04ce 0133     		adds	r3, r3, #1
 7919 04d0 BB75     		strb	r3, [r7, #22]
 7920              	.L387:
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7921              		.loc 1 1238 0 is_stmt 0 discriminator 1
 7922 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7923 04d4 032B     		cmp	r3, #3
 7924 04d6 EDD9     		bls	.L388
1241:..\src/command_processing.c ****                 
 7925              		.loc 1 1241 0 is_stmt 1
 7926 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7927 04da BB68     		ldr	r3, [r7, #8]	@ float
 7928 04dc 4FF08F41 		mov	r1, #1199570944
 7929 04e0 1846     		mov	r0, r3
 7930 04e2 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 190


 7931 04e6 0346     		mov	r3, r0
 7932 04e8 1846     		mov	r0, r3
 7933 04ea FFF7FEFF 		bl	__aeabi_f2iz
 7934 04ee 0146     		mov	r1, r0
 7935 04f0 894A     		ldr	r2, .L443
 7936 04f2 2346     		mov	r3, r4
 7937 04f4 DB00     		lsls	r3, r3, #3
 7938 04f6 1B1B     		subs	r3, r3, r4
 7939 04f8 1B01     		lsls	r3, r3, #4
 7940 04fa 1344     		add	r3, r3, r2
 7941 04fc D433     		adds	r3, r3, #212
 7942 04fe 1960     		str	r1, [r3]
1243:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7943              		.loc 1 1243 0
 7944 0500 884B     		ldr	r3, .L443+12
 7945 0502 1B68     		ldr	r3, [r3]	@ float
 7946 0504 FB60     		str	r3, [r7, #12]	@ float
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7947              		.loc 1 1244 0
 7948 0506 0023     		movs	r3, #0
 7949 0508 BB75     		strb	r3, [r7, #22]
 7950 050a 0EE0     		b	.L389
 7951              	.L390:
1245:..\src/command_processing.c ****                 }
 7952              		.loc 1 1245 0 discriminator 3
 7953 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7954 050e C3F10303 		rsb	r3, r3, #3
 7955 0512 07F10802 		add	r2, r7, #8
 7956 0516 1344     		add	r3, r3, r2
 7957 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7958 051a 07F10C01 		add	r1, r7, #12
 7959 051e 0A44     		add	r2, r2, r1
 7960 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7961 0522 1A70     		strb	r2, [r3]
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7962              		.loc 1 1244 0 discriminator 3
 7963 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7964 0526 0133     		adds	r3, r3, #1
 7965 0528 BB75     		strb	r3, [r7, #22]
 7966              	.L389:
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7967              		.loc 1 1244 0 is_stmt 0 discriminator 1
 7968 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7969 052c 032B     		cmp	r3, #3
 7970 052e EDD9     		bls	.L390
1247:..\src/command_processing.c ****                 
 7971              		.loc 1 1247 0 is_stmt 1
 7972 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7973 0532 BB68     		ldr	r3, [r7, #8]	@ float
 7974 0534 4FF08F41 		mov	r1, #1199570944
 7975 0538 1846     		mov	r0, r3
 7976 053a FFF7FEFF 		bl	__aeabi_fmul
 7977 053e 0346     		mov	r3, r0
 7978 0540 1846     		mov	r0, r3
 7979 0542 FFF7FEFF 		bl	__aeabi_f2iz
 7980 0546 0146     		mov	r1, r0
 7981 0548 734A     		ldr	r2, .L443
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 191


 7982 054a 2346     		mov	r3, r4
 7983 054c DB00     		lsls	r3, r3, #3
 7984 054e 1B1B     		subs	r3, r3, r4
 7985 0550 1B01     		lsls	r3, r3, #4
 7986 0552 1344     		add	r3, r3, r2
 7987 0554 D833     		adds	r3, r3, #216
 7988 0556 1960     		str	r1, [r3]
1249:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7989              		.loc 1 1249 0
 7990 0558 704B     		ldr	r3, .L443+4
 7991 055a 1B68     		ldr	r3, [r3]	@ float
 7992 055c FB60     		str	r3, [r7, #12]	@ float
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7993              		.loc 1 1250 0
 7994 055e 0023     		movs	r3, #0
 7995 0560 BB75     		strb	r3, [r7, #22]
 7996 0562 0EE0     		b	.L391
 7997              	.L392:
1251:..\src/command_processing.c ****                 }
 7998              		.loc 1 1251 0 discriminator 3
 7999 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8000 0566 C3F10303 		rsb	r3, r3, #3
 8001 056a 07F10802 		add	r2, r7, #8
 8002 056e 1344     		add	r3, r3, r2
 8003 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8004 0572 07F10C01 		add	r1, r7, #12
 8005 0576 0A44     		add	r2, r2, r1
 8006 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8007 057a 1A70     		strb	r2, [r3]
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8008              		.loc 1 1250 0 discriminator 3
 8009 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8010 057e 0133     		adds	r3, r3, #1
 8011 0580 BB75     		strb	r3, [r7, #22]
 8012              	.L391:
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8013              		.loc 1 1250 0 is_stmt 0 discriminator 1
 8014 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8015 0584 032B     		cmp	r3, #3
 8016 0586 EDD9     		bls	.L392
1253:..\src/command_processing.c ****             }            
 8017              		.loc 1 1253 0 is_stmt 1
 8018 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8019 058a BB68     		ldr	r3, [r7, #8]	@ float
 8020 058c 4FF08F41 		mov	r1, #1199570944
 8021 0590 1846     		mov	r0, r3
 8022 0592 FFF7FEFF 		bl	__aeabi_fmul
 8023 0596 0346     		mov	r3, r0
 8024 0598 1846     		mov	r0, r3
 8025 059a FFF7FEFF 		bl	__aeabi_f2iz
 8026 059e 0146     		mov	r1, r0
 8027 05a0 5D4A     		ldr	r2, .L443
 8028 05a2 2346     		mov	r3, r4
 8029 05a4 DB00     		lsls	r3, r3, #3
 8030 05a6 1B1B     		subs	r3, r3, r4
 8031 05a8 1B01     		lsls	r3, r3, #4
 8032 05aa 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 192


 8033 05ac DC33     		adds	r3, r3, #220
 8034 05ae 1960     		str	r1, [r3]
 8035              		.loc 1 1255 0
 8036 05b0 00F02ABF 		b	.L378
 8037              	.L348:
1256:..\src/command_processing.c ****             
1257:..\src/command_processing.c ****         case 5:         //Input mode
1258:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 8038              		.loc 1 1258 0
 8039 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8040 05b6 5C4B     		ldr	r3, .L443+16
 8041 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8042 05ba 5749     		ldr	r1, .L443
 8043 05bc 1346     		mov	r3, r2
 8044 05be DB00     		lsls	r3, r3, #3
 8045 05c0 9B1A     		subs	r3, r3, r2
 8046 05c2 1B01     		lsls	r3, r3, #4
 8047 05c4 0B44     		add	r3, r3, r1
 8048 05c6 03F58773 		add	r3, r3, #270
 8049 05ca 0246     		mov	r2, r0
 8050 05cc 1A70     		strb	r2, [r3]
1259:..\src/command_processing.c ****             
1260:..\src/command_processing.c ****             // Hold the actual position
1261:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 8051              		.loc 1 1261 0
 8052 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8053 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8054 05d2 5148     		ldr	r0, .L443
 8055 05d4 1346     		mov	r3, r2
 8056 05d6 DB00     		lsls	r3, r3, #3
 8057 05d8 9B1A     		subs	r3, r3, r2
 8058 05da 1B01     		lsls	r3, r3, #4
 8059 05dc 0344     		add	r3, r3, r0
 8060 05de 03F58873 		add	r3, r3, #272
 8061 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8062 05e4 1846     		mov	r0, r3
 8063 05e6 514A     		ldr	r2, .L443+20
 8064 05e8 0346     		mov	r3, r0
 8065 05ea 5B00     		lsls	r3, r3, #1
 8066 05ec 0344     		add	r3, r3, r0
 8067 05ee 1B01     		lsls	r3, r3, #4
 8068 05f0 1344     		add	r3, r3, r2
 8069 05f2 1A68     		ldr	r2, [r3]
 8070 05f4 4E48     		ldr	r0, .L443+24
 8071 05f6 0B01     		lsls	r3, r1, #4
 8072 05f8 0344     		add	r3, r3, r0
 8073 05fa 1A60     		str	r2, [r3]
1262:..\src/command_processing.c ****             break;   
 8074              		.loc 1 1262 0
 8075 05fc 00F004BF 		b	.L378
 8076              	.L349:
1263:..\src/command_processing.c **** 
1264:..\src/command_processing.c ****         case 8:         //Measurement Offset
1265:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 8077              		.loc 1 1265 0
 8078 0600 0023     		movs	r3, #0
 8079 0602 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 193


 8080 0604 7FE0     		b	.L393
 8081              	.L394:
1266:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8082              		.loc 1 1266 0 discriminator 3
 8083 0606 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8084 0608 4349     		ldr	r1, .L443
 8085 060a 1346     		mov	r3, r2
 8086 060c DB00     		lsls	r3, r3, #3
 8087 060e 9B1A     		subs	r3, r3, r2
 8088 0610 1B01     		lsls	r3, r3, #4
 8089 0612 0B44     		add	r3, r3, r1
 8090 0614 03F58873 		add	r3, r3, #272
 8091 0618 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8092 061a 1C46     		mov	r4, r3
 8093 061c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8094 061e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8095 0620 5B00     		lsls	r3, r3, #1
 8096 0622 0333     		adds	r3, r3, #3
 8097 0624 4049     		ldr	r1, .L443+16
 8098 0626 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8099 0628 1B02     		lsls	r3, r3, #8
 8100 062a 19B2     		sxth	r1, r3
 8101 062c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8102 062e 0233     		adds	r3, r3, #2
 8103 0630 5B00     		lsls	r3, r3, #1
 8104 0632 3D48     		ldr	r0, .L443+16
 8105 0634 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 8106 0636 1BB2     		sxth	r3, r3
 8107 0638 0B43     		orrs	r3, r3, r1
 8108 063a 1BB2     		sxth	r3, r3
 8109 063c 1846     		mov	r0, r3
 8110 063e 3649     		ldr	r1, .L443
 8111 0640 2346     		mov	r3, r4
 8112 0642 5B00     		lsls	r3, r3, #1
 8113 0644 2344     		add	r3, r3, r4
 8114 0646 9B00     		lsls	r3, r3, #2
 8115 0648 1344     		add	r3, r3, r2
 8116 064a 6633     		adds	r3, r3, #102
 8117 064c 41F82300 		str	r0, [r1, r3, lsl #2]
1267:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 8118              		.loc 1 1267 0 discriminator 3
 8119 0650 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8120 0652 3149     		ldr	r1, .L443
 8121 0654 1346     		mov	r3, r2
 8122 0656 DB00     		lsls	r3, r3, #3
 8123 0658 9B1A     		subs	r3, r3, r2
 8124 065a 1B01     		lsls	r3, r3, #4
 8125 065c 0B44     		add	r3, r3, r1
 8126 065e 03F58873 		add	r3, r3, #272
 8127 0662 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8128 0664 1D46     		mov	r5, r3
 8129 0666 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 8130 0668 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8131 066a 2B48     		ldr	r0, .L443
 8132 066c 1346     		mov	r3, r2
 8133 066e DB00     		lsls	r3, r3, #3
 8134 0670 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 194


 8135 0672 1B01     		lsls	r3, r3, #4
 8136 0674 0344     		add	r3, r3, r0
 8137 0676 03F58873 		add	r3, r3, #272
 8138 067a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8139 067c 1C46     		mov	r4, r3
 8140 067e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8141 0680 2548     		ldr	r0, .L443
 8142 0682 2346     		mov	r3, r4
 8143 0684 5B00     		lsls	r3, r3, #1
 8144 0686 2344     		add	r3, r3, r4
 8145 0688 9B00     		lsls	r3, r3, #2
 8146 068a 1344     		add	r3, r3, r2
 8147 068c 6633     		adds	r3, r3, #102
 8148 068e 50F82300 		ldr	r0, [r0, r3, lsl #2]
 8149 0692 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8150 0694 204C     		ldr	r4, .L443
 8151 0696 1346     		mov	r3, r2
 8152 0698 DB00     		lsls	r3, r3, #3
 8153 069a 9B1A     		subs	r3, r3, r2
 8154 069c 1B01     		lsls	r3, r3, #4
 8155 069e 2344     		add	r3, r3, r4
 8156 06a0 03F58873 		add	r3, r3, #272
 8157 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8158 06a6 1E46     		mov	r6, r3
 8159 06a8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8160 06aa 1B4C     		ldr	r4, .L443
 8161 06ac 3346     		mov	r3, r6
 8162 06ae 5B00     		lsls	r3, r3, #1
 8163 06b0 3344     		add	r3, r3, r6
 8164 06b2 1B01     		lsls	r3, r3, #4
 8165 06b4 2344     		add	r3, r3, r4
 8166 06b6 1344     		add	r3, r3, r2
 8167 06b8 03F29513 		addw	r3, r3, #405
 8168 06bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8169 06be 00FA03F2 		lsl	r2, r0, r3
 8170 06c2 1548     		ldr	r0, .L443
 8171 06c4 2B46     		mov	r3, r5
 8172 06c6 5B00     		lsls	r3, r3, #1
 8173 06c8 2B44     		add	r3, r3, r5
 8174 06ca 9B00     		lsls	r3, r3, #2
 8175 06cc 0B44     		add	r3, r3, r1
 8176 06ce 6633     		adds	r3, r3, #102
 8177 06d0 40F82320 		str	r2, [r0, r3, lsl #2]
1268:..\src/command_processing.c **** 
1269:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 8178              		.loc 1 1269 0 discriminator 3
 8179 06d4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8180 06d6 1049     		ldr	r1, .L443
 8181 06d8 1346     		mov	r3, r2
 8182 06da DB00     		lsls	r3, r3, #3
 8183 06dc 9B1A     		subs	r3, r3, r2
 8184 06de 1B01     		lsls	r3, r3, #4
 8185 06e0 0B44     		add	r3, r3, r1
 8186 06e2 03F58873 		add	r3, r3, #272
 8187 06e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8188 06e8 1846     		mov	r0, r3
 8189 06ea FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 195


 8190 06ec 0F49     		ldr	r1, .L443+20
 8191 06ee 0346     		mov	r3, r0
 8192 06f0 5B00     		lsls	r3, r3, #1
 8193 06f2 0344     		add	r3, r3, r0
 8194 06f4 1B01     		lsls	r3, r3, #4
 8195 06f6 0B44     		add	r3, r3, r1
 8196 06f8 1344     		add	r3, r3, r2
 8197 06fa 1433     		adds	r3, r3, #20
 8198 06fc 0022     		movs	r2, #0
 8199 06fe 1A70     		strb	r2, [r3]
1265:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8200              		.loc 1 1265 0 discriminator 3
 8201 0700 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8202 0702 0133     		adds	r3, r3, #1
 8203 0704 FB75     		strb	r3, [r7, #23]
 8204              	.L393:
1265:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8205              		.loc 1 1265 0 is_stmt 0 discriminator 1
 8206 0706 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8207 0708 022B     		cmp	r3, #2
 8208 070a 7FF67CAF 		bls	.L394
1270:..\src/command_processing.c ****             }
1271:..\src/command_processing.c ****             reset_last_value_flag = 1;
 8209              		.loc 1 1271 0 is_stmt 1
 8210 070e 094B     		ldr	r3, .L443+28
 8211 0710 0122     		movs	r2, #1
 8212 0712 1A70     		strb	r2, [r3]
1272:..\src/command_processing.c ****             break;
 8213              		.loc 1 1272 0
 8214 0714 00F078BE 		b	.L378
 8215              	.L444:
 8216              		.align	2
 8217              	.L443:
 8218 0718 00000000 		.word	g_mem
 8219 071c 0B000000 		.word	g_rx+11
 8220 0720 03000000 		.word	g_rx+3
 8221 0724 07000000 		.word	g_rx+7
 8222 0728 00000000 		.word	g_rx
 8223 072c 00000000 		.word	g_meas
 8224 0730 00000000 		.word	g_refNew
 8225 0734 00000000 		.word	reset_last_value_flag
 8226              	.L350:
1273:..\src/command_processing.c ****     
1274:..\src/command_processing.c ****         case 11:        //Position limits
1275:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 8227              		.loc 1 1275 0
 8228 0738 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8229 073a C14B     		ldr	r3, .L445
 8230 073c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8231 073e 1906     		lsls	r1, r3, #24
 8232 0740 BF4B     		ldr	r3, .L445
 8233 0742 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8234 0744 1B04     		lsls	r3, r3, #16
 8235 0746 1943     		orrs	r1, r1, r3
 8236 0748 BD4B     		ldr	r3, .L445
 8237 074a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8238 074c 1B02     		lsls	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 196


 8239 074e 0B43     		orrs	r3, r3, r1
 8240 0750 BB49     		ldr	r1, .L445
 8241 0752 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 8242 0754 1943     		orrs	r1, r1, r3
 8243 0756 BB48     		ldr	r0, .L445+4
 8244 0758 1346     		mov	r3, r2
 8245 075a DB00     		lsls	r3, r3, #3
 8246 075c 9B1A     		subs	r3, r3, r2
 8247 075e 1B01     		lsls	r3, r3, #4
 8248 0760 0344     		add	r3, r3, r0
 8249 0762 E433     		adds	r3, r3, #228
 8250 0764 1960     		str	r1, [r3]
1276:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 8251              		.loc 1 1276 0
 8252 0766 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8253 0768 B54B     		ldr	r3, .L445
 8254 076a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 8255 076c 1906     		lsls	r1, r3, #24
 8256 076e B44B     		ldr	r3, .L445
 8257 0770 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 8258 0772 1B04     		lsls	r3, r3, #16
 8259 0774 1943     		orrs	r1, r1, r3
 8260 0776 B24B     		ldr	r3, .L445
 8261 0778 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 8262 077a 1B02     		lsls	r3, r3, #8
 8263 077c 0B43     		orrs	r3, r3, r1
 8264 077e B049     		ldr	r1, .L445
 8265 0780 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 8266 0782 1943     		orrs	r1, r1, r3
 8267 0784 AF48     		ldr	r0, .L445+4
 8268 0786 1346     		mov	r3, r2
 8269 0788 DB00     		lsls	r3, r3, #3
 8270 078a 9B1A     		subs	r3, r3, r2
 8271 078c 1B01     		lsls	r3, r3, #4
 8272 078e 0344     		add	r3, r3, r0
 8273 0790 E833     		adds	r3, r3, #232
 8274 0792 1960     		str	r1, [r3]
1277:..\src/command_processing.c **** 
1278:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 8275              		.loc 1 1278 0
 8276 0794 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8277 0796 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8278 0798 AA48     		ldr	r0, .L445+4
 8279 079a 0B46     		mov	r3, r1
 8280 079c DB00     		lsls	r3, r3, #3
 8281 079e 5B1A     		subs	r3, r3, r1
 8282 07a0 1B01     		lsls	r3, r3, #4
 8283 07a2 0344     		add	r3, r3, r0
 8284 07a4 E433     		adds	r3, r3, #228
 8285 07a6 1868     		ldr	r0, [r3]
 8286 07a8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8287 07aa A64C     		ldr	r4, .L445+4
 8288 07ac 0B46     		mov	r3, r1
 8289 07ae DB00     		lsls	r3, r3, #3
 8290 07b0 5B1A     		subs	r3, r3, r1
 8291 07b2 1B01     		lsls	r3, r3, #4
 8292 07b4 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 197


 8293 07b6 03F58873 		add	r3, r3, #272
 8294 07ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8295 07bc 1C46     		mov	r4, r3
 8296 07be A149     		ldr	r1, .L445+4
 8297 07c0 2346     		mov	r3, r4
 8298 07c2 5B00     		lsls	r3, r3, #1
 8299 07c4 2344     		add	r3, r3, r4
 8300 07c6 1B01     		lsls	r3, r3, #4
 8301 07c8 0B44     		add	r3, r3, r1
 8302 07ca 03F29513 		addw	r3, r3, #405
 8303 07ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8304 07d0 00FA03F1 		lsl	r1, r0, r3
 8305 07d4 9B48     		ldr	r0, .L445+4
 8306 07d6 1346     		mov	r3, r2
 8307 07d8 DB00     		lsls	r3, r3, #3
 8308 07da 9B1A     		subs	r3, r3, r2
 8309 07dc 1B01     		lsls	r3, r3, #4
 8310 07de 0344     		add	r3, r3, r0
 8311 07e0 E433     		adds	r3, r3, #228
 8312 07e2 1960     		str	r1, [r3]
1279:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 8313              		.loc 1 1279 0
 8314 07e4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8315 07e6 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8316 07e8 9648     		ldr	r0, .L445+4
 8317 07ea 0B46     		mov	r3, r1
 8318 07ec DB00     		lsls	r3, r3, #3
 8319 07ee 5B1A     		subs	r3, r3, r1
 8320 07f0 1B01     		lsls	r3, r3, #4
 8321 07f2 0344     		add	r3, r3, r0
 8322 07f4 E833     		adds	r3, r3, #232
 8323 07f6 1868     		ldr	r0, [r3]
 8324 07f8 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8325 07fa 924C     		ldr	r4, .L445+4
 8326 07fc 0B46     		mov	r3, r1
 8327 07fe DB00     		lsls	r3, r3, #3
 8328 0800 5B1A     		subs	r3, r3, r1
 8329 0802 1B01     		lsls	r3, r3, #4
 8330 0804 2344     		add	r3, r3, r4
 8331 0806 03F58873 		add	r3, r3, #272
 8332 080a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8333 080c 1C46     		mov	r4, r3
 8334 080e 8D49     		ldr	r1, .L445+4
 8335 0810 2346     		mov	r3, r4
 8336 0812 5B00     		lsls	r3, r3, #1
 8337 0814 2344     		add	r3, r3, r4
 8338 0816 1B01     		lsls	r3, r3, #4
 8339 0818 0B44     		add	r3, r3, r1
 8340 081a 03F29513 		addw	r3, r3, #405
 8341 081e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8342 0820 00FA03F1 		lsl	r1, r0, r3
 8343 0824 8748     		ldr	r0, .L445+4
 8344 0826 1346     		mov	r3, r2
 8345 0828 DB00     		lsls	r3, r3, #3
 8346 082a 9B1A     		subs	r3, r3, r2
 8347 082c 1B01     		lsls	r3, r3, #4
 8348 082e 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 198


 8349 0830 E833     		adds	r3, r3, #232
 8350 0832 1960     		str	r1, [r3]
1280:..\src/command_processing.c ****             break;            
 8351              		.loc 1 1280 0
 8352 0834 00F0E8BD 		b	.L378
 8353              	.L351:
1281:..\src/command_processing.c **** 
1282:..\src/command_processing.c ****         case 23:        //Rest Position
1283:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 8354              		.loc 1 1283 0
 8355 0838 814B     		ldr	r3, .L445
 8356 083a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8357 083c 1A06     		lsls	r2, r3, #24
 8358 083e 804B     		ldr	r3, .L445
 8359 0840 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8360 0842 1B04     		lsls	r3, r3, #16
 8361 0844 1A43     		orrs	r2, r2, r3
 8362 0846 7E4B     		ldr	r3, .L445
 8363 0848 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8364 084a 1B02     		lsls	r3, r3, #8
 8365 084c 1343     		orrs	r3, r3, r2
 8366 084e 7C4A     		ldr	r2, .L445
 8367 0850 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8368 0852 1343     		orrs	r3, r3, r2
 8369 0854 7B4A     		ldr	r2, .L445+4
 8370 0856 C2F8A032 		str	r3, [r2, #672]
1284:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 8371              		.loc 1 1284 0
 8372 085a 7A4B     		ldr	r3, .L445+4
 8373 085c D3F8A012 		ldr	r1, [r3, #672]
 8374 0860 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8375 0862 7848     		ldr	r0, .L445+4
 8376 0864 1346     		mov	r3, r2
 8377 0866 DB00     		lsls	r3, r3, #3
 8378 0868 9B1A     		subs	r3, r3, r2
 8379 086a 1B01     		lsls	r3, r3, #4
 8380 086c 0344     		add	r3, r3, r0
 8381 086e 03F58873 		add	r3, r3, #272
 8382 0872 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8383 0874 1846     		mov	r0, r3
 8384 0876 734A     		ldr	r2, .L445+4
 8385 0878 0346     		mov	r3, r0
 8386 087a 5B00     		lsls	r3, r3, #1
 8387 087c 0344     		add	r3, r3, r0
 8388 087e 1B01     		lsls	r3, r3, #4
 8389 0880 1344     		add	r3, r3, r2
 8390 0882 03F29513 		addw	r3, r3, #405
 8391 0886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8392 0888 01FA03F3 		lsl	r3, r1, r3
 8393 088c 6D4A     		ldr	r2, .L445+4
 8394 088e C2F8A032 		str	r3, [r2, #672]
1285:..\src/command_processing.c ****             break; 
 8395              		.loc 1 1285 0
 8396 0892 00F0B9BD 		b	.L378
 8397              	.L352:
1286:..\src/command_processing.c ****             
1287:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 199


1288:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 8398              		.loc 1 1288 0
 8399 0896 6A4B     		ldr	r3, .L445
 8400 0898 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8401 089a 1A06     		lsls	r2, r3, #24
 8402 089c 684B     		ldr	r3, .L445
 8403 089e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8404 08a0 1B04     		lsls	r3, r3, #16
 8405 08a2 1A43     		orrs	r2, r2, r3
 8406 08a4 664B     		ldr	r3, .L445
 8407 08a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8408 08a8 1B02     		lsls	r3, r3, #8
 8409 08aa 1343     		orrs	r3, r3, r2
 8410 08ac 644A     		ldr	r2, .L445
 8411 08ae 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8412 08b0 1343     		orrs	r3, r3, r2
 8413 08b2 644A     		ldr	r2, .L445+4
 8414 08b4 C2F8A432 		str	r3, [r2, #676]
1289:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 8415              		.loc 1 1289 0
 8416 08b8 624B     		ldr	r3, .L445+4
 8417 08ba D3F8A432 		ldr	r3, [r3, #676]
 8418 08be 092B     		cmp	r3, #9
 8419 08c0 00F39985 		bgt	.L436
 8420              		.loc 1 1289 0 is_stmt 0 discriminator 1
 8421 08c4 5F4B     		ldr	r3, .L445+4
 8422 08c6 0A22     		movs	r2, #10
 8423 08c8 C3F8A422 		str	r2, [r3, #676]
1290:..\src/command_processing.c ****            break; 
 8424              		.loc 1 1290 0 is_stmt 1 discriminator 1
 8425 08cc 00F093BD 		b	.L436
 8426              	.L353:
1291:..\src/command_processing.c ****             
1292:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1293:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8427              		.loc 1 1293 0
 8428 08d0 5B4B     		ldr	r3, .L445
 8429 08d2 DB78     		ldrb	r3, [r3, #3]
 8430 08d4 BB74     		strb	r3, [r7, #18]
1294:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 8431              		.loc 1 1294 0
 8432 08d6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8433 08d8 002B     		cmp	r3, #0
 8434 08da 04D0     		beq	.L396
1295:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 8435              		.loc 1 1295 0
 8436 08dc 594B     		ldr	r3, .L445+4
 8437 08de 0122     		movs	r2, #1
 8438 08e0 83F8A720 		strb	r2, [r3, #167]
 8439 08e4 03E0     		b	.L397
 8440              	.L396:
1296:..\src/command_processing.c ****             } else {            // 0
1297:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 8441              		.loc 1 1297 0
 8442 08e6 574B     		ldr	r3, .L445+4
 8443 08e8 0022     		movs	r2, #0
 8444 08ea 83F8A720 		strb	r2, [r3, #167]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 200


 8445              	.L397:
1298:..\src/command_processing.c ****             }
1299:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 8446              		.loc 1 1299 0
 8447 08ee 564B     		ldr	r3, .L445+8
 8448 08f0 0122     		movs	r2, #1
 8449 08f2 1A70     		strb	r2, [r3]
1300:..\src/command_processing.c **** 
1301:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 8450              		.loc 1 1301 0
 8451 08f4 534B     		ldr	r3, .L445+4
 8452 08f6 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8453 08fa 002B     		cmp	r3, #0
 8454 08fc 40F07D85 		bne	.L437
1302:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1303:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 8455              		.loc 1 1303 0
 8456 0900 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8457 0902 504B     		ldr	r3, .L445+4
 8458 0904 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 8459 0908 4E49     		ldr	r1, .L445+4
 8460 090a 1346     		mov	r3, r2
 8461 090c DB00     		lsls	r3, r3, #3
 8462 090e 9B1A     		subs	r3, r3, r2
 8463 0910 1B01     		lsls	r3, r3, #4
 8464 0912 0B44     		add	r3, r3, r1
 8465 0914 03F58873 		add	r3, r3, #272
 8466 0918 0246     		mov	r2, r0
 8467 091a 1A70     		strb	r2, [r3]
1304:..\src/command_processing.c ****                 
1305:..\src/command_processing.c ****                 // Change also gears parameters
1306:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 8468              		.loc 1 1306 0
 8469 091c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8470 091e 4949     		ldr	r1, .L445+4
 8471 0920 1346     		mov	r3, r2
 8472 0922 DB00     		lsls	r3, r3, #3
 8473 0924 9B1A     		subs	r3, r3, r2
 8474 0926 1B01     		lsls	r3, r3, #4
 8475 0928 0B44     		add	r3, r3, r1
 8476 092a 03F58873 		add	r3, r3, #272
 8477 092e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8478 0930 1946     		mov	r1, r3
 8479 0932 444A     		ldr	r2, .L445+4
 8480 0934 0B46     		mov	r3, r1
 8481 0936 5B00     		lsls	r3, r3, #1
 8482 0938 0B44     		add	r3, r3, r1
 8483 093a 1B01     		lsls	r3, r3, #4
 8484 093c 1344     		add	r3, r3, r2
 8485 093e 03F5D873 		add	r3, r3, #432
 8486 0942 0122     		movs	r2, #1
 8487 0944 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 8488              		.loc 1 1307 0
 8489 0946 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8490 0948 3E49     		ldr	r1, .L445+4
 8491 094a 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 201


 8492 094c DB00     		lsls	r3, r3, #3
 8493 094e 9B1A     		subs	r3, r3, r2
 8494 0950 1B01     		lsls	r3, r3, #4
 8495 0952 0B44     		add	r3, r3, r1
 8496 0954 03F58873 		add	r3, r3, #272
 8497 0958 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8498 095a 1946     		mov	r1, r3
 8499 095c 394A     		ldr	r2, .L445+4
 8500 095e 0B46     		mov	r3, r1
 8501 0960 5B00     		lsls	r3, r3, #1
 8502 0962 0B44     		add	r3, r3, r1
 8503 0964 1B01     		lsls	r3, r3, #4
 8504 0966 1344     		add	r3, r3, r2
 8505 0968 03F2B513 		addw	r3, r3, #437
 8506 096c 2322     		movs	r2, #35
 8507 096e 1A70     		strb	r2, [r3]
1308:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 8508              		.loc 1 1308 0
 8509 0970 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8510 0972 3449     		ldr	r1, .L445+4
 8511 0974 1346     		mov	r3, r2
 8512 0976 DB00     		lsls	r3, r3, #3
 8513 0978 9B1A     		subs	r3, r3, r2
 8514 097a 1B01     		lsls	r3, r3, #4
 8515 097c 0B44     		add	r3, r3, r1
 8516 097e 03F58873 		add	r3, r3, #272
 8517 0982 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8518 0984 1946     		mov	r1, r3
 8519 0986 2F4A     		ldr	r2, .L445+4
 8520 0988 0B46     		mov	r3, r1
 8521 098a 5B00     		lsls	r3, r3, #1
 8522 098c 0B44     		add	r3, r3, r1
 8523 098e 1B01     		lsls	r3, r3, #4
 8524 0990 1344     		add	r3, r3, r2
 8525 0992 03F5DB73 		add	r3, r3, #438
 8526 0996 0322     		movs	r2, #3
 8527 0998 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 8528              		.loc 1 1309 0
 8529 099a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8530 099c 2949     		ldr	r1, .L445+4
 8531 099e 1346     		mov	r3, r2
 8532 09a0 DB00     		lsls	r3, r3, #3
 8533 09a2 9B1A     		subs	r3, r3, r2
 8534 09a4 1B01     		lsls	r3, r3, #4
 8535 09a6 0B44     		add	r3, r3, r1
 8536 09a8 03F58873 		add	r3, r3, #272
 8537 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8538 09ae 1946     		mov	r1, r3
 8539 09b0 244A     		ldr	r2, .L445+4
 8540 09b2 0B46     		mov	r3, r1
 8541 09b4 5B00     		lsls	r3, r3, #1
 8542 09b6 0B44     		add	r3, r3, r1
 8543 09b8 1B01     		lsls	r3, r3, #4
 8544 09ba 1344     		add	r3, r3, r2
 8545 09bc 03F2B713 		addw	r3, r3, #439
 8546 09c0 FF22     		movs	r2, #255
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 202


 8547 09c2 1A70     		strb	r2, [r3]
1310:..\src/command_processing.c ****                 
1311:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 8548              		.loc 1 1312 0
 8549 09c4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8550 09c6 1F49     		ldr	r1, .L445+4
 8551 09c8 1346     		mov	r3, r2
 8552 09ca DB00     		lsls	r3, r3, #3
 8553 09cc 9B1A     		subs	r3, r3, r2
 8554 09ce 1B01     		lsls	r3, r3, #4
 8555 09d0 0B44     		add	r3, r3, r1
 8556 09d2 03F21113 		addw	r3, r3, #273
 8557 09d6 0122     		movs	r2, #1
 8558 09d8 1A70     		strb	r2, [r3]
1313:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 8559              		.loc 1 1313 0
 8560 09da 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8561 09dc 1949     		ldr	r1, .L445+4
 8562 09de 1346     		mov	r3, r2
 8563 09e0 DB00     		lsls	r3, r3, #3
 8564 09e2 9B1A     		subs	r3, r3, r2
 8565 09e4 1B01     		lsls	r3, r3, #4
 8566 09e6 0B44     		add	r3, r3, r1
 8567 09e8 03F58973 		add	r3, r3, #274
 8568 09ec 0122     		movs	r2, #1
 8569 09ee 1A70     		strb	r2, [r3]
1314:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 8570              		.loc 1 1314 0
 8571 09f0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8572 09f2 1449     		ldr	r1, .L445+4
 8573 09f4 1346     		mov	r3, r2
 8574 09f6 DB00     		lsls	r3, r3, #3
 8575 09f8 9B1A     		subs	r3, r3, r2
 8576 09fa 1B01     		lsls	r3, r3, #4
 8577 09fc 0B44     		add	r3, r3, r1
 8578 09fe E433     		adds	r3, r3, #228
 8579 0a00 0022     		movs	r2, #0
 8580 0a02 1A60     		str	r2, [r3]
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 8581              		.loc 1 1315 0
 8582 0a04 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8583 0a06 0F4B     		ldr	r3, .L445+4
 8584 0a08 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8585 0a0c 1846     		mov	r0, r3
 8586 0a0e 0D49     		ldr	r1, .L445+4
 8587 0a10 0346     		mov	r3, r0
 8588 0a12 5B00     		lsls	r3, r3, #1
 8589 0a14 0344     		add	r3, r3, r0
 8590 0a16 1B01     		lsls	r3, r3, #4
 8591 0a18 0B44     		add	r3, r3, r1
 8592 0a1a 03F29513 		addw	r3, r3, #405
 8593 0a1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8594 0a20 1946     		mov	r1, r3
 8595 0a22 4FF47A53 		mov	r3, #16000
 8596 0a26 03FA01F1 		lsl	r1, r3, r1
 8597 0a2a 0648     		ldr	r0, .L445+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 203


 8598 0a2c 1346     		mov	r3, r2
 8599 0a2e DB00     		lsls	r3, r3, #3
 8600 0a30 9B1A     		subs	r3, r3, r2
 8601 0a32 1B01     		lsls	r3, r3, #4
 8602 0a34 0344     		add	r3, r3, r0
 8603 0a36 E833     		adds	r3, r3, #232
 8604 0a38 1960     		str	r1, [r3]
1316:..\src/command_processing.c ****             }    
1317:..\src/command_processing.c **** 
1318:..\src/command_processing.c ****             break; 
 8605              		.loc 1 1318 0
 8606 0a3a 00F0DEBC 		b	.L437
 8607              	.L446:
 8608 0a3e 00BF     		.align	2
 8609              	.L445:
 8610 0a40 00000000 		.word	g_rx
 8611 0a44 00000000 		.word	g_mem
 8612 0a48 00000000 		.word	reset_last_value_flag
 8613              	.L354:
1319:..\src/command_processing.c **** 
1320:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1321:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8614              		.loc 1 1321 0
 8615 0a4c A94B     		ldr	r3, .L447
 8616 0a4e DB78     		ldrb	r3, [r3, #3]
 8617 0a50 BB74     		strb	r3, [r7, #18]
1322:..\src/command_processing.c ****             if (aux_uchar) {
 8618              		.loc 1 1322 0
 8619 0a52 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8620 0a54 002B     		cmp	r3, #0
 8621 0a56 05D0     		beq	.L399
1323:..\src/command_processing.c ****                 reset_counters();
 8622              		.loc 1 1323 0
 8623 0a58 FFF7FEFF 		bl	reset_counters
1324:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 8624              		.loc 1 1324 0
 8625 0a5c A64B     		ldr	r3, .L447+4
 8626 0a5e 0022     		movs	r2, #0
 8627 0a60 83F8A820 		strb	r2, [r3, #168]
 8628              	.L399:
1325:..\src/command_processing.c ****             }
1326:..\src/command_processing.c ****             
1327:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8629              		.loc 1 1327 0
 8630 0a64 A54B     		ldr	r3, .L447+8
 8631 0a66 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8632 0a6a 012B     		cmp	r3, #1
 8633 0a6c 40F0C784 		bne	.L438
1328:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1329:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 8634              		.loc 1 1329 0
 8635 0a70 8720     		movs	r0, #135
 8636 0a72 FFF7FEFF 		bl	DS1302_read
 8637 0a76 0346     		mov	r3, r0
 8638 0a78 BB74     		strb	r3, [r7, #18]
1330:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 8639              		.loc 1 1330 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 204


 8640 0a7a BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8641 0a7c 1B09     		lsrs	r3, r3, #4
 8642 0a7e DBB2     		uxtb	r3, r3
 8643 0a80 1A46     		mov	r2, r3
 8644 0a82 9200     		lsls	r2, r2, #2
 8645 0a84 1344     		add	r3, r3, r2
 8646 0a86 5B00     		lsls	r3, r3, #1
 8647 0a88 DAB2     		uxtb	r2, r3
 8648 0a8a BB7C     		ldrb	r3, [r7, #18]
 8649 0a8c 03F00F03 		and	r3, r3, #15
 8650 0a90 DBB2     		uxtb	r3, r3
 8651 0a92 1344     		add	r3, r3, r2
 8652 0a94 DAB2     		uxtb	r2, r3
 8653 0a96 984B     		ldr	r3, .L447+4
 8654 0a98 83F8A420 		strb	r2, [r3, #164]
1331:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 8655              		.loc 1 1331 0
 8656 0a9c 8920     		movs	r0, #137
 8657 0a9e FFF7FEFF 		bl	DS1302_read
 8658 0aa2 0346     		mov	r3, r0
 8659 0aa4 BB74     		strb	r3, [r7, #18]
1332:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 8660              		.loc 1 1332 0
 8661 0aa6 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8662 0aa8 1B09     		lsrs	r3, r3, #4
 8663 0aaa DBB2     		uxtb	r3, r3
 8664 0aac 1A46     		mov	r2, r3
 8665 0aae 9200     		lsls	r2, r2, #2
 8666 0ab0 1344     		add	r3, r3, r2
 8667 0ab2 5B00     		lsls	r3, r3, #1
 8668 0ab4 DAB2     		uxtb	r2, r3
 8669 0ab6 BB7C     		ldrb	r3, [r7, #18]
 8670 0ab8 03F00F03 		and	r3, r3, #15
 8671 0abc DBB2     		uxtb	r3, r3
 8672 0abe 1344     		add	r3, r3, r2
 8673 0ac0 DAB2     		uxtb	r2, r3
 8674 0ac2 8D4B     		ldr	r3, .L447+4
 8675 0ac4 83F8A520 		strb	r2, [r3, #165]
1333:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 8676              		.loc 1 1333 0
 8677 0ac8 8D20     		movs	r0, #141
 8678 0aca FFF7FEFF 		bl	DS1302_read
 8679 0ace 0346     		mov	r3, r0
 8680 0ad0 BB74     		strb	r3, [r7, #18]
1334:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 8681              		.loc 1 1334 0
 8682 0ad2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8683 0ad4 1B09     		lsrs	r3, r3, #4
 8684 0ad6 DBB2     		uxtb	r3, r3
 8685 0ad8 1A46     		mov	r2, r3
 8686 0ada 9200     		lsls	r2, r2, #2
 8687 0adc 1344     		add	r3, r3, r2
 8688 0ade 5B00     		lsls	r3, r3, #1
 8689 0ae0 DAB2     		uxtb	r2, r3
 8690 0ae2 BB7C     		ldrb	r3, [r7, #18]
 8691 0ae4 03F00F03 		and	r3, r3, #15
 8692 0ae8 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 205


 8693 0aea 1344     		add	r3, r3, r2
 8694 0aec DAB2     		uxtb	r2, r3
 8695 0aee 824B     		ldr	r3, .L447+4
 8696 0af0 83F8A620 		strb	r2, [r3, #166]
1335:..\src/command_processing.c ****             }
1336:..\src/command_processing.c ****             break;             
 8697              		.loc 1 1336 0
 8698 0af4 00F083BC 		b	.L438
 8699              	.L355:
 8700              	.LBB15:
1337:..\src/command_processing.c ****             
1338:..\src/command_processing.c ****         case 32:         //Current Time
1339:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 8701              		.loc 1 1339 0
 8702 0af8 0023     		movs	r3, #0
 8703 0afa 7B75     		strb	r3, [r7, #21]
 8704 0afc 0CE0     		b	.L401
 8705              	.L402:
1340:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8706              		.loc 1 1340 0 discriminator 3
 8707 0afe 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8708 0b00 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 8709 0b02 0332     		adds	r2, r2, #3
 8710 0b04 7B49     		ldr	r1, .L447
 8711 0b06 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8712 0b08 7B4A     		ldr	r2, .L447+4
 8713 0b0a 1344     		add	r3, r3, r2
 8714 0b0c 0A46     		mov	r2, r1
 8715 0b0e 83F82022 		strb	r2, [r3, #544]
1339:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8716              		.loc 1 1339 0 discriminator 3
 8717 0b12 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8718 0b14 0133     		adds	r3, r3, #1
 8719 0b16 7B75     		strb	r3, [r7, #21]
 8720              	.L401:
1339:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8721              		.loc 1 1339 0 is_stmt 0 discriminator 1
 8722 0b18 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8723 0b1a 052B     		cmp	r3, #5
 8724 0b1c EFD9     		bls	.L402
 8725              	.LBE15:
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8726              		.loc 1 1343 0 is_stmt 1
 8727 0b1e 764B     		ldr	r3, .L447+4
 8728 0b20 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8729 0b24 012B     		cmp	r3, #1
 8730 0b26 40F06C84 		bne	.L439
1344:..\src/command_processing.c ****                 set_RTC_time();
 8731              		.loc 1 1344 0
 8732 0b2a FFF7FEFF 		bl	set_RTC_time
1345:..\src/command_processing.c ****             }
1346:..\src/command_processing.c ****             break;
 8733              		.loc 1 1346 0
 8734 0b2e 00F068BC 		b	.L439
 8735              	.L356:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 206


1347:..\src/command_processing.c ****            
1348:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1349:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 8736              		.loc 1 1349 0
 8737 0b32 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8738 0b34 6F4B     		ldr	r3, .L447
 8739 0b36 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8740 0b38 6F49     		ldr	r1, .L447+4
 8741 0b3a 1346     		mov	r3, r2
 8742 0b3c DB00     		lsls	r3, r3, #3
 8743 0b3e 9B1A     		subs	r3, r3, r2
 8744 0b40 1B01     		lsls	r3, r3, #4
 8745 0b42 0B44     		add	r3, r3, r1
 8746 0b44 E233     		adds	r3, r3, #226
 8747 0b46 0246     		mov	r2, r0
 8748 0b48 1A70     		strb	r2, [r3]
1350:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 8749              		.loc 1 1350 0
 8750 0b4a 6B4B     		ldr	r3, .L447+4
 8751 0b4c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 8752 0b50 5B00     		lsls	r3, r3, #1
 8753 0b52 5AB2     		sxtb	r2, r3
 8754 0b54 684B     		ldr	r3, .L447+4
 8755 0b56 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 8756 0b5a 5BB2     		sxtb	r3, r3
 8757 0b5c 1343     		orrs	r3, r3, r2
 8758 0b5e 5BB2     		sxtb	r3, r3
 8759 0b60 DBB2     		uxtb	r3, r3
 8760 0b62 1846     		mov	r0, r3
 8761 0b64 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1351:..\src/command_processing.c ****             break;
 8762              		.loc 1 1351 0
 8763 0b68 00F04EBC 		b	.L378
 8764              	.L357:
1352:..\src/command_processing.c ****             
1353:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1354:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8765              		.loc 1 1354 0
 8766 0b6c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 8767 0b6e 6349     		ldr	r1, .L447+8
 8768 0b70 1346     		mov	r3, r2
 8769 0b72 DB00     		lsls	r3, r3, #3
 8770 0b74 9B1A     		subs	r3, r3, r2
 8771 0b76 1B01     		lsls	r3, r3, #4
 8772 0b78 0B44     		add	r3, r3, r1
 8773 0b7a 03F20F13 		addw	r3, r3, #271
 8774 0b7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8775 0b80 032B     		cmp	r3, #3
 8776 0b82 00F08580 		beq	.L404
1355:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8777              		.loc 1 1355 0
 8778 0b86 5E4B     		ldr	r3, .L447+12
 8779 0b88 1B68     		ldr	r3, [r3]	@ float
 8780 0b8a FB60     		str	r3, [r7, #12]	@ float
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8781              		.loc 1 1356 0
 8782 0b8c 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 207


 8783 0b8e BB75     		strb	r3, [r7, #22]
 8784 0b90 0EE0     		b	.L405
 8785              	.L406:
1357:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8786              		.loc 1 1357 0 discriminator 3
 8787 0b92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8788 0b94 C3F10303 		rsb	r3, r3, #3
 8789 0b98 07F10802 		add	r2, r7, #8
 8790 0b9c 1344     		add	r3, r3, r2
 8791 0b9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8792 0ba0 07F10C01 		add	r1, r7, #12
 8793 0ba4 0A44     		add	r2, r2, r1
 8794 0ba6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8795 0ba8 1A70     		strb	r2, [r3]
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8796              		.loc 1 1356 0 discriminator 3
 8797 0baa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8798 0bac 0133     		adds	r3, r3, #1
 8799 0bae BB75     		strb	r3, [r7, #22]
 8800              	.L405:
1356:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8801              		.loc 1 1356 0 is_stmt 0 discriminator 1
 8802 0bb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8803 0bb2 032B     		cmp	r3, #3
 8804 0bb4 EDD9     		bls	.L406
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 8805              		.loc 1 1359 0 is_stmt 1
 8806 0bb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8807 0bb8 BB68     		ldr	r3, [r7, #8]	@ float
 8808 0bba 4FF08F41 		mov	r1, #1199570944
 8809 0bbe 1846     		mov	r0, r3
 8810 0bc0 FFF7FEFF 		bl	__aeabi_fmul
 8811 0bc4 0346     		mov	r3, r0
 8812 0bc6 1846     		mov	r0, r3
 8813 0bc8 FFF7FEFF 		bl	__aeabi_f2iz
 8814 0bcc 0146     		mov	r1, r0
 8815 0bce 4A4A     		ldr	r2, .L447+4
 8816 0bd0 2346     		mov	r3, r4
 8817 0bd2 DB00     		lsls	r3, r3, #3
 8818 0bd4 1B1B     		subs	r3, r3, r4
 8819 0bd6 1B01     		lsls	r3, r3, #4
 8820 0bd8 1344     		add	r3, r3, r2
 8821 0bda B033     		adds	r3, r3, #176
 8822 0bdc 1960     		str	r1, [r3]
1360:..\src/command_processing.c ****                 
1361:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8823              		.loc 1 1361 0
 8824 0bde 494B     		ldr	r3, .L447+16
 8825 0be0 1B68     		ldr	r3, [r3]	@ float
 8826 0be2 FB60     		str	r3, [r7, #12]	@ float
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8827              		.loc 1 1362 0
 8828 0be4 0023     		movs	r3, #0
 8829 0be6 BB75     		strb	r3, [r7, #22]
 8830 0be8 0EE0     		b	.L407
 8831              	.L408:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 208


1363:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8832              		.loc 1 1363 0 discriminator 3
 8833 0bea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8834 0bec C3F10303 		rsb	r3, r3, #3
 8835 0bf0 07F10802 		add	r2, r7, #8
 8836 0bf4 1344     		add	r3, r3, r2
 8837 0bf6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8838 0bf8 07F10C01 		add	r1, r7, #12
 8839 0bfc 0A44     		add	r2, r2, r1
 8840 0bfe 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8841 0c00 1A70     		strb	r2, [r3]
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8842              		.loc 1 1362 0 discriminator 3
 8843 0c02 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8844 0c04 0133     		adds	r3, r3, #1
 8845 0c06 BB75     		strb	r3, [r7, #22]
 8846              	.L407:
1362:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8847              		.loc 1 1362 0 is_stmt 0 discriminator 1
 8848 0c08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8849 0c0a 032B     		cmp	r3, #3
 8850 0c0c EDD9     		bls	.L408
1364:..\src/command_processing.c ****                 }
1365:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 8851              		.loc 1 1365 0 is_stmt 1
 8852 0c0e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8853 0c10 BB68     		ldr	r3, [r7, #8]	@ float
 8854 0c12 4FF08F41 		mov	r1, #1199570944
 8855 0c16 1846     		mov	r0, r3
 8856 0c18 FFF7FEFF 		bl	__aeabi_fmul
 8857 0c1c 0346     		mov	r3, r0
 8858 0c1e 1846     		mov	r0, r3
 8859 0c20 FFF7FEFF 		bl	__aeabi_f2iz
 8860 0c24 0146     		mov	r1, r0
 8861 0c26 344A     		ldr	r2, .L447+4
 8862 0c28 2346     		mov	r3, r4
 8863 0c2a DB00     		lsls	r3, r3, #3
 8864 0c2c 1B1B     		subs	r3, r3, r4
 8865 0c2e 1B01     		lsls	r3, r3, #4
 8866 0c30 1344     		add	r3, r3, r2
 8867 0c32 B433     		adds	r3, r3, #180
 8868 0c34 1960     		str	r1, [r3]
1366:..\src/command_processing.c ****                 
1367:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8869              		.loc 1 1367 0
 8870 0c36 344B     		ldr	r3, .L447+20
 8871 0c38 1B68     		ldr	r3, [r3]	@ float
 8872 0c3a FB60     		str	r3, [r7, #12]	@ float
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8873              		.loc 1 1368 0
 8874 0c3c 0023     		movs	r3, #0
 8875 0c3e BB75     		strb	r3, [r7, #22]
 8876 0c40 0EE0     		b	.L409
 8877              	.L410:
1369:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8878              		.loc 1 1369 0 discriminator 3
 8879 0c42 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 209


 8880 0c44 C3F10303 		rsb	r3, r3, #3
 8881 0c48 07F10802 		add	r2, r7, #8
 8882 0c4c 1344     		add	r3, r3, r2
 8883 0c4e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8884 0c50 07F10C01 		add	r1, r7, #12
 8885 0c54 0A44     		add	r2, r2, r1
 8886 0c56 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8887 0c58 1A70     		strb	r2, [r3]
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8888              		.loc 1 1368 0 discriminator 3
 8889 0c5a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8890 0c5c 0133     		adds	r3, r3, #1
 8891 0c5e BB75     		strb	r3, [r7, #22]
 8892              	.L409:
1368:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8893              		.loc 1 1368 0 is_stmt 0 discriminator 1
 8894 0c60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8895 0c62 032B     		cmp	r3, #3
 8896 0c64 EDD9     		bls	.L410
1370:..\src/command_processing.c ****                 }
1371:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 8897              		.loc 1 1371 0 is_stmt 1
 8898 0c66 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8899 0c68 BB68     		ldr	r3, [r7, #8]	@ float
 8900 0c6a 4FF08F41 		mov	r1, #1199570944
 8901 0c6e 1846     		mov	r0, r3
 8902 0c70 FFF7FEFF 		bl	__aeabi_fmul
 8903 0c74 0346     		mov	r3, r0
 8904 0c76 1846     		mov	r0, r3
 8905 0c78 FFF7FEFF 		bl	__aeabi_f2iz
 8906 0c7c 0146     		mov	r1, r0
 8907 0c7e 1E4A     		ldr	r2, .L447+4
 8908 0c80 2346     		mov	r3, r4
 8909 0c82 DB00     		lsls	r3, r3, #3
 8910 0c84 1B1B     		subs	r3, r3, r4
 8911 0c86 1B01     		lsls	r3, r3, #4
 8912 0c88 1344     		add	r3, r3, r2
 8913 0c8a B833     		adds	r3, r3, #184
 8914 0c8c 1960     		str	r1, [r3]
1372:..\src/command_processing.c ****             }
1373:..\src/command_processing.c ****             else {
1374:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1375:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1376:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1377:..\src/command_processing.c ****                 }
1378:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1379:..\src/command_processing.c ****                 
1380:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1381:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1382:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1383:..\src/command_processing.c ****                 }
1384:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1385:..\src/command_processing.c ****                 
1386:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1387:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1388:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1389:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 210


1390:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1391:..\src/command_processing.c ****             }
1392:..\src/command_processing.c ****             break;
 8915              		.loc 1 1392 0
 8916 0c8e BBE3     		b	.L378
 8917              	.L404:
1374:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8918              		.loc 1 1374 0
 8919 0c90 1B4B     		ldr	r3, .L447+12
 8920 0c92 1B68     		ldr	r3, [r3]	@ float
 8921 0c94 FB60     		str	r3, [r7, #12]	@ float
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8922              		.loc 1 1375 0
 8923 0c96 0023     		movs	r3, #0
 8924 0c98 BB75     		strb	r3, [r7, #22]
 8925 0c9a 0EE0     		b	.L412
 8926              	.L413:
1376:..\src/command_processing.c ****                 }
 8927              		.loc 1 1376 0 discriminator 3
 8928 0c9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8929 0c9e C3F10303 		rsb	r3, r3, #3
 8930 0ca2 07F10802 		add	r2, r7, #8
 8931 0ca6 1344     		add	r3, r3, r2
 8932 0ca8 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8933 0caa 07F10C01 		add	r1, r7, #12
 8934 0cae 0A44     		add	r2, r2, r1
 8935 0cb0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8936 0cb2 1A70     		strb	r2, [r3]
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8937              		.loc 1 1375 0 discriminator 3
 8938 0cb4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8939 0cb6 0133     		adds	r3, r3, #1
 8940 0cb8 BB75     		strb	r3, [r7, #22]
 8941              	.L412:
1375:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8942              		.loc 1 1375 0 is_stmt 0 discriminator 1
 8943 0cba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8944 0cbc 032B     		cmp	r3, #3
 8945 0cbe EDD9     		bls	.L413
1378:..\src/command_processing.c ****                 
 8946              		.loc 1 1378 0 is_stmt 1
 8947 0cc0 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8948 0cc2 BB68     		ldr	r3, [r7, #8]	@ float
 8949 0cc4 4FF08F41 		mov	r1, #1199570944
 8950 0cc8 1846     		mov	r0, r3
 8951 0cca FFF7FEFF 		bl	__aeabi_fmul
 8952 0cce 0346     		mov	r3, r0
 8953 0cd0 1846     		mov	r0, r3
 8954 0cd2 FFF7FEFF 		bl	__aeabi_f2iz
 8955 0cd6 0146     		mov	r1, r0
 8956 0cd8 074A     		ldr	r2, .L447+4
 8957 0cda 2346     		mov	r3, r4
 8958 0cdc DB00     		lsls	r3, r3, #3
 8959 0cde 1B1B     		subs	r3, r3, r4
 8960 0ce0 1B01     		lsls	r3, r3, #4
 8961 0ce2 1344     		add	r3, r3, r2
 8962 0ce4 C833     		adds	r3, r3, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 211


 8963 0ce6 1960     		str	r1, [r3]
1380:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8964              		.loc 1 1380 0
 8965 0ce8 064B     		ldr	r3, .L447+16
 8966 0cea 1B68     		ldr	r3, [r3]	@ float
 8967 0cec FB60     		str	r3, [r7, #12]	@ float
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8968              		.loc 1 1381 0
 8969 0cee 0023     		movs	r3, #0
 8970 0cf0 BB75     		strb	r3, [r7, #22]
 8971 0cf2 1AE0     		b	.L414
 8972              	.L448:
 8973              		.align	2
 8974              	.L447:
 8975 0cf4 00000000 		.word	g_rx
 8976 0cf8 00000000 		.word	g_mem
 8977 0cfc 00000000 		.word	c_mem
 8978 0d00 03000000 		.word	g_rx+3
 8979 0d04 07000000 		.word	g_rx+7
 8980 0d08 0B000000 		.word	g_rx+11
 8981              	.L415:
1382:..\src/command_processing.c ****                 }
 8982              		.loc 1 1382 0 discriminator 3
 8983 0d0c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8984 0d0e C3F10303 		rsb	r3, r3, #3
 8985 0d12 07F10802 		add	r2, r7, #8
 8986 0d16 1344     		add	r3, r3, r2
 8987 0d18 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8988 0d1a 07F10C01 		add	r1, r7, #12
 8989 0d1e 0A44     		add	r2, r2, r1
 8990 0d20 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8991 0d22 1A70     		strb	r2, [r3]
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8992              		.loc 1 1381 0 discriminator 3
 8993 0d24 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8994 0d26 0133     		adds	r3, r3, #1
 8995 0d28 BB75     		strb	r3, [r7, #22]
 8996              	.L414:
1381:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8997              		.loc 1 1381 0 is_stmt 0 discriminator 1
 8998 0d2a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8999 0d2c 032B     		cmp	r3, #3
 9000 0d2e EDD9     		bls	.L415
1384:..\src/command_processing.c ****                 
 9001              		.loc 1 1384 0 is_stmt 1
 9002 0d30 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9003 0d32 BB68     		ldr	r3, [r7, #8]	@ float
 9004 0d34 4FF08F41 		mov	r1, #1199570944
 9005 0d38 1846     		mov	r0, r3
 9006 0d3a FFF7FEFF 		bl	__aeabi_fmul
 9007 0d3e 0346     		mov	r3, r0
 9008 0d40 1846     		mov	r0, r3
 9009 0d42 FFF7FEFF 		bl	__aeabi_f2iz
 9010 0d46 0146     		mov	r1, r0
 9011 0d48 A54A     		ldr	r2, .L449
 9012 0d4a 2346     		mov	r3, r4
 9013 0d4c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 212


 9014 0d4e 1B1B     		subs	r3, r3, r4
 9015 0d50 1B01     		lsls	r3, r3, #4
 9016 0d52 1344     		add	r3, r3, r2
 9017 0d54 CC33     		adds	r3, r3, #204
 9018 0d56 1960     		str	r1, [r3]
1386:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9019              		.loc 1 1386 0
 9020 0d58 A24B     		ldr	r3, .L449+4
 9021 0d5a 1B68     		ldr	r3, [r3]	@ float
 9022 0d5c FB60     		str	r3, [r7, #12]	@ float
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9023              		.loc 1 1387 0
 9024 0d5e 0023     		movs	r3, #0
 9025 0d60 BB75     		strb	r3, [r7, #22]
 9026 0d62 0EE0     		b	.L416
 9027              	.L417:
1388:..\src/command_processing.c ****                 }
 9028              		.loc 1 1388 0 discriminator 3
 9029 0d64 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9030 0d66 C3F10303 		rsb	r3, r3, #3
 9031 0d6a 07F10802 		add	r2, r7, #8
 9032 0d6e 1344     		add	r3, r3, r2
 9033 0d70 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9034 0d72 07F10C01 		add	r1, r7, #12
 9035 0d76 0A44     		add	r2, r2, r1
 9036 0d78 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9037 0d7a 1A70     		strb	r2, [r3]
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9038              		.loc 1 1387 0 discriminator 3
 9039 0d7c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9040 0d7e 0133     		adds	r3, r3, #1
 9041 0d80 BB75     		strb	r3, [r7, #22]
 9042              	.L416:
1387:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9043              		.loc 1 1387 0 is_stmt 0 discriminator 1
 9044 0d82 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9045 0d84 032B     		cmp	r3, #3
 9046 0d86 EDD9     		bls	.L417
1390:..\src/command_processing.c ****             }
 9047              		.loc 1 1390 0 is_stmt 1
 9048 0d88 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9049 0d8a BB68     		ldr	r3, [r7, #8]	@ float
 9050 0d8c 4FF08F41 		mov	r1, #1199570944
 9051 0d90 1846     		mov	r0, r3
 9052 0d92 FFF7FEFF 		bl	__aeabi_fmul
 9053 0d96 0346     		mov	r3, r0
 9054 0d98 1846     		mov	r0, r3
 9055 0d9a FFF7FEFF 		bl	__aeabi_f2iz
 9056 0d9e 0146     		mov	r1, r0
 9057 0da0 8F4A     		ldr	r2, .L449
 9058 0da2 2346     		mov	r3, r4
 9059 0da4 DB00     		lsls	r3, r3, #3
 9060 0da6 1B1B     		subs	r3, r3, r4
 9061 0da8 1B01     		lsls	r3, r3, #4
 9062 0daa 1344     		add	r3, r3, r2
 9063 0dac D033     		adds	r3, r3, #208
 9064 0dae 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 213


 9065              		.loc 1 1392 0
 9066 0db0 2AE3     		b	.L378
 9067              	.L358:
1393:..\src/command_processing.c ****             
1394:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1395:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9068              		.loc 1 1395 0
 9069 0db2 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9070 0db4 8C49     		ldr	r1, .L449+8
 9071 0db6 1346     		mov	r3, r2
 9072 0db8 DB00     		lsls	r3, r3, #3
 9073 0dba 9B1A     		subs	r3, r3, r2
 9074 0dbc 1B01     		lsls	r3, r3, #4
 9075 0dbe 0B44     		add	r3, r3, r1
 9076 0dc0 03F20F13 		addw	r3, r3, #271
 9077 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9078 0dc6 032B     		cmp	r3, #3
 9079 0dc8 00F08580 		beq	.L418
1396:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9080              		.loc 1 1396 0
 9081 0dcc 874B     		ldr	r3, .L449+12
 9082 0dce 1B68     		ldr	r3, [r3]	@ float
 9083 0dd0 FB60     		str	r3, [r7, #12]	@ float
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9084              		.loc 1 1397 0
 9085 0dd2 0023     		movs	r3, #0
 9086 0dd4 BB75     		strb	r3, [r7, #22]
 9087 0dd6 0EE0     		b	.L419
 9088              	.L420:
1398:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9089              		.loc 1 1398 0 discriminator 3
 9090 0dd8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9091 0dda C3F10303 		rsb	r3, r3, #3
 9092 0dde 07F10802 		add	r2, r7, #8
 9093 0de2 1344     		add	r3, r3, r2
 9094 0de4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9095 0de6 07F10C01 		add	r1, r7, #12
 9096 0dea 0A44     		add	r2, r2, r1
 9097 0dec 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9098 0dee 1A70     		strb	r2, [r3]
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9099              		.loc 1 1397 0 discriminator 3
 9100 0df0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9101 0df2 0133     		adds	r3, r3, #1
 9102 0df4 BB75     		strb	r3, [r7, #22]
 9103              	.L419:
1397:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9104              		.loc 1 1397 0 is_stmt 0 discriminator 1
 9105 0df6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9106 0df8 032B     		cmp	r3, #3
 9107 0dfa EDD9     		bls	.L420
1399:..\src/command_processing.c ****                 }
1400:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9108              		.loc 1 1400 0 is_stmt 1
 9109 0dfc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9110 0dfe BB68     		ldr	r3, [r7, #8]	@ float
 9111 0e00 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 214


 9112 0e04 1846     		mov	r0, r3
 9113 0e06 FFF7FEFF 		bl	__aeabi_fmul
 9114 0e0a 0346     		mov	r3, r0
 9115 0e0c 1846     		mov	r0, r3
 9116 0e0e FFF7FEFF 		bl	__aeabi_f2iz
 9117 0e12 0146     		mov	r1, r0
 9118 0e14 724A     		ldr	r2, .L449
 9119 0e16 2346     		mov	r3, r4
 9120 0e18 DB00     		lsls	r3, r3, #3
 9121 0e1a 1B1B     		subs	r3, r3, r4
 9122 0e1c 1B01     		lsls	r3, r3, #4
 9123 0e1e 1344     		add	r3, r3, r2
 9124 0e20 BC33     		adds	r3, r3, #188
 9125 0e22 1960     		str	r1, [r3]
1401:..\src/command_processing.c ****                 
1402:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9126              		.loc 1 1402 0
 9127 0e24 724B     		ldr	r3, .L449+16
 9128 0e26 1B68     		ldr	r3, [r3]	@ float
 9129 0e28 FB60     		str	r3, [r7, #12]	@ float
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9130              		.loc 1 1403 0
 9131 0e2a 0023     		movs	r3, #0
 9132 0e2c BB75     		strb	r3, [r7, #22]
 9133 0e2e 0EE0     		b	.L421
 9134              	.L422:
1404:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9135              		.loc 1 1404 0 discriminator 3
 9136 0e30 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9137 0e32 C3F10303 		rsb	r3, r3, #3
 9138 0e36 07F10802 		add	r2, r7, #8
 9139 0e3a 1344     		add	r3, r3, r2
 9140 0e3c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9141 0e3e 07F10C01 		add	r1, r7, #12
 9142 0e42 0A44     		add	r2, r2, r1
 9143 0e44 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9144 0e46 1A70     		strb	r2, [r3]
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9145              		.loc 1 1403 0 discriminator 3
 9146 0e48 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9147 0e4a 0133     		adds	r3, r3, #1
 9148 0e4c BB75     		strb	r3, [r7, #22]
 9149              	.L421:
1403:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9150              		.loc 1 1403 0 is_stmt 0 discriminator 1
 9151 0e4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9152 0e50 032B     		cmp	r3, #3
 9153 0e52 EDD9     		bls	.L422
1405:..\src/command_processing.c ****                 }
1406:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9154              		.loc 1 1406 0 is_stmt 1
 9155 0e54 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9156 0e56 BB68     		ldr	r3, [r7, #8]	@ float
 9157 0e58 4FF08F41 		mov	r1, #1199570944
 9158 0e5c 1846     		mov	r0, r3
 9159 0e5e FFF7FEFF 		bl	__aeabi_fmul
 9160 0e62 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 215


 9161 0e64 1846     		mov	r0, r3
 9162 0e66 FFF7FEFF 		bl	__aeabi_f2iz
 9163 0e6a 0146     		mov	r1, r0
 9164 0e6c 5C4A     		ldr	r2, .L449
 9165 0e6e 2346     		mov	r3, r4
 9166 0e70 DB00     		lsls	r3, r3, #3
 9167 0e72 1B1B     		subs	r3, r3, r4
 9168 0e74 1B01     		lsls	r3, r3, #4
 9169 0e76 1344     		add	r3, r3, r2
 9170 0e78 C033     		adds	r3, r3, #192
 9171 0e7a 1960     		str	r1, [r3]
1407:..\src/command_processing.c ****                 
1408:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9172              		.loc 1 1408 0
 9173 0e7c 594B     		ldr	r3, .L449+4
 9174 0e7e 1B68     		ldr	r3, [r3]	@ float
 9175 0e80 FB60     		str	r3, [r7, #12]	@ float
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9176              		.loc 1 1409 0
 9177 0e82 0023     		movs	r3, #0
 9178 0e84 BB75     		strb	r3, [r7, #22]
 9179 0e86 0EE0     		b	.L423
 9180              	.L424:
1410:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9181              		.loc 1 1410 0 discriminator 3
 9182 0e88 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9183 0e8a C3F10303 		rsb	r3, r3, #3
 9184 0e8e 07F10802 		add	r2, r7, #8
 9185 0e92 1344     		add	r3, r3, r2
 9186 0e94 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9187 0e96 07F10C01 		add	r1, r7, #12
 9188 0e9a 0A44     		add	r2, r2, r1
 9189 0e9c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9190 0e9e 1A70     		strb	r2, [r3]
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9191              		.loc 1 1409 0 discriminator 3
 9192 0ea0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9193 0ea2 0133     		adds	r3, r3, #1
 9194 0ea4 BB75     		strb	r3, [r7, #22]
 9195              	.L423:
1409:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9196              		.loc 1 1409 0 is_stmt 0 discriminator 1
 9197 0ea6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9198 0ea8 032B     		cmp	r3, #3
 9199 0eaa EDD9     		bls	.L424
1411:..\src/command_processing.c ****                 }
1412:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9200              		.loc 1 1412 0 is_stmt 1
 9201 0eac FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9202 0eae BB68     		ldr	r3, [r7, #8]	@ float
 9203 0eb0 4FF08F41 		mov	r1, #1199570944
 9204 0eb4 1846     		mov	r0, r3
 9205 0eb6 FFF7FEFF 		bl	__aeabi_fmul
 9206 0eba 0346     		mov	r3, r0
 9207 0ebc 1846     		mov	r0, r3
 9208 0ebe FFF7FEFF 		bl	__aeabi_f2iz
 9209 0ec2 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 216


 9210 0ec4 464A     		ldr	r2, .L449
 9211 0ec6 2346     		mov	r3, r4
 9212 0ec8 DB00     		lsls	r3, r3, #3
 9213 0eca 1B1B     		subs	r3, r3, r4
 9214 0ecc 1B01     		lsls	r3, r3, #4
 9215 0ece 1344     		add	r3, r3, r2
 9216 0ed0 C433     		adds	r3, r3, #196
 9217 0ed2 1960     		str	r1, [r3]
1413:..\src/command_processing.c ****             }
1414:..\src/command_processing.c ****             else {
1415:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1416:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1417:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1418:..\src/command_processing.c ****                 }
1419:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1420:..\src/command_processing.c ****                 
1421:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1422:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1423:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1424:..\src/command_processing.c ****                 }
1425:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1426:..\src/command_processing.c ****                 
1427:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1428:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1429:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1430:..\src/command_processing.c ****                 }
1431:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1432:..\src/command_processing.c ****             }            
1433:..\src/command_processing.c ****             break;  
 9218              		.loc 1 1433 0
 9219 0ed4 98E2     		b	.L378
 9220              	.L418:
1415:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9221              		.loc 1 1415 0
 9222 0ed6 454B     		ldr	r3, .L449+12
 9223 0ed8 1B68     		ldr	r3, [r3]	@ float
 9224 0eda FB60     		str	r3, [r7, #12]	@ float
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9225              		.loc 1 1416 0
 9226 0edc 0023     		movs	r3, #0
 9227 0ede BB75     		strb	r3, [r7, #22]
 9228 0ee0 0EE0     		b	.L426
 9229              	.L427:
1417:..\src/command_processing.c ****                 }
 9230              		.loc 1 1417 0 discriminator 3
 9231 0ee2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9232 0ee4 C3F10303 		rsb	r3, r3, #3
 9233 0ee8 07F10802 		add	r2, r7, #8
 9234 0eec 1344     		add	r3, r3, r2
 9235 0eee BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9236 0ef0 07F10C01 		add	r1, r7, #12
 9237 0ef4 0A44     		add	r2, r2, r1
 9238 0ef6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9239 0ef8 1A70     		strb	r2, [r3]
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9240              		.loc 1 1416 0 discriminator 3
 9241 0efa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 217


 9242 0efc 0133     		adds	r3, r3, #1
 9243 0efe BB75     		strb	r3, [r7, #22]
 9244              	.L426:
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9245              		.loc 1 1416 0 is_stmt 0 discriminator 1
 9246 0f00 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9247 0f02 032B     		cmp	r3, #3
 9248 0f04 EDD9     		bls	.L427
1419:..\src/command_processing.c ****                 
 9249              		.loc 1 1419 0 is_stmt 1
 9250 0f06 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9251 0f08 BB68     		ldr	r3, [r7, #8]	@ float
 9252 0f0a 4FF08F41 		mov	r1, #1199570944
 9253 0f0e 1846     		mov	r0, r3
 9254 0f10 FFF7FEFF 		bl	__aeabi_fmul
 9255 0f14 0346     		mov	r3, r0
 9256 0f16 1846     		mov	r0, r3
 9257 0f18 FFF7FEFF 		bl	__aeabi_f2iz
 9258 0f1c 0146     		mov	r1, r0
 9259 0f1e 304A     		ldr	r2, .L449
 9260 0f20 2346     		mov	r3, r4
 9261 0f22 DB00     		lsls	r3, r3, #3
 9262 0f24 1B1B     		subs	r3, r3, r4
 9263 0f26 1B01     		lsls	r3, r3, #4
 9264 0f28 1344     		add	r3, r3, r2
 9265 0f2a D433     		adds	r3, r3, #212
 9266 0f2c 1960     		str	r1, [r3]
1421:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9267              		.loc 1 1421 0
 9268 0f2e 304B     		ldr	r3, .L449+16
 9269 0f30 1B68     		ldr	r3, [r3]	@ float
 9270 0f32 FB60     		str	r3, [r7, #12]	@ float
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9271              		.loc 1 1422 0
 9272 0f34 0023     		movs	r3, #0
 9273 0f36 BB75     		strb	r3, [r7, #22]
 9274 0f38 0EE0     		b	.L428
 9275              	.L429:
1423:..\src/command_processing.c ****                 }
 9276              		.loc 1 1423 0 discriminator 3
 9277 0f3a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9278 0f3c C3F10303 		rsb	r3, r3, #3
 9279 0f40 07F10802 		add	r2, r7, #8
 9280 0f44 1344     		add	r3, r3, r2
 9281 0f46 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9282 0f48 07F10C01 		add	r1, r7, #12
 9283 0f4c 0A44     		add	r2, r2, r1
 9284 0f4e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9285 0f50 1A70     		strb	r2, [r3]
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9286              		.loc 1 1422 0 discriminator 3
 9287 0f52 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9288 0f54 0133     		adds	r3, r3, #1
 9289 0f56 BB75     		strb	r3, [r7, #22]
 9290              	.L428:
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9291              		.loc 1 1422 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 218


 9292 0f58 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9293 0f5a 032B     		cmp	r3, #3
 9294 0f5c EDD9     		bls	.L429
1425:..\src/command_processing.c ****                 
 9295              		.loc 1 1425 0 is_stmt 1
 9296 0f5e FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9297 0f60 BB68     		ldr	r3, [r7, #8]	@ float
 9298 0f62 4FF08F41 		mov	r1, #1199570944
 9299 0f66 1846     		mov	r0, r3
 9300 0f68 FFF7FEFF 		bl	__aeabi_fmul
 9301 0f6c 0346     		mov	r3, r0
 9302 0f6e 1846     		mov	r0, r3
 9303 0f70 FFF7FEFF 		bl	__aeabi_f2iz
 9304 0f74 0146     		mov	r1, r0
 9305 0f76 1A4A     		ldr	r2, .L449
 9306 0f78 2346     		mov	r3, r4
 9307 0f7a DB00     		lsls	r3, r3, #3
 9308 0f7c 1B1B     		subs	r3, r3, r4
 9309 0f7e 1B01     		lsls	r3, r3, #4
 9310 0f80 1344     		add	r3, r3, r2
 9311 0f82 D833     		adds	r3, r3, #216
 9312 0f84 1960     		str	r1, [r3]
1427:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9313              		.loc 1 1427 0
 9314 0f86 174B     		ldr	r3, .L449+4
 9315 0f88 1B68     		ldr	r3, [r3]	@ float
 9316 0f8a FB60     		str	r3, [r7, #12]	@ float
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9317              		.loc 1 1428 0
 9318 0f8c 0023     		movs	r3, #0
 9319 0f8e BB75     		strb	r3, [r7, #22]
 9320 0f90 0EE0     		b	.L430
 9321              	.L431:
1429:..\src/command_processing.c ****                 }
 9322              		.loc 1 1429 0 discriminator 3
 9323 0f92 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9324 0f94 C3F10303 		rsb	r3, r3, #3
 9325 0f98 07F10802 		add	r2, r7, #8
 9326 0f9c 1344     		add	r3, r3, r2
 9327 0f9e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9328 0fa0 07F10C01 		add	r1, r7, #12
 9329 0fa4 0A44     		add	r2, r2, r1
 9330 0fa6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9331 0fa8 1A70     		strb	r2, [r3]
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9332              		.loc 1 1428 0 discriminator 3
 9333 0faa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9334 0fac 0133     		adds	r3, r3, #1
 9335 0fae BB75     		strb	r3, [r7, #22]
 9336              	.L430:
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9337              		.loc 1 1428 0 is_stmt 0 discriminator 1
 9338 0fb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9339 0fb2 032B     		cmp	r3, #3
 9340 0fb4 EDD9     		bls	.L431
1431:..\src/command_processing.c ****             }            
 9341              		.loc 1 1431 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 219


 9342 0fb6 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9343 0fb8 BB68     		ldr	r3, [r7, #8]	@ float
 9344 0fba 4FF08F41 		mov	r1, #1199570944
 9345 0fbe 1846     		mov	r0, r3
 9346 0fc0 FFF7FEFF 		bl	__aeabi_fmul
 9347 0fc4 0346     		mov	r3, r0
 9348 0fc6 1846     		mov	r0, r3
 9349 0fc8 FFF7FEFF 		bl	__aeabi_f2iz
 9350 0fcc 0146     		mov	r1, r0
 9351 0fce 044A     		ldr	r2, .L449
 9352 0fd0 2346     		mov	r3, r4
 9353 0fd2 DB00     		lsls	r3, r3, #3
 9354 0fd4 1B1B     		subs	r3, r3, r4
 9355 0fd6 1B01     		lsls	r3, r3, #4
 9356 0fd8 1344     		add	r3, r3, r2
 9357 0fda DC33     		adds	r3, r3, #220
 9358 0fdc 1960     		str	r1, [r3]
 9359              		.loc 1 1433 0
 9360 0fde 13E2     		b	.L378
 9361              	.L450:
 9362              		.align	2
 9363              	.L449:
 9364 0fe0 00000000 		.word	g_mem
 9365 0fe4 0B000000 		.word	g_rx+11
 9366 0fe8 00000000 		.word	c_mem
 9367 0fec 03000000 		.word	g_rx+3
 9368 0ff0 07000000 		.word	g_rx+7
 9369              	.L359:
1434:..\src/command_processing.c ****             
1435:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1436:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 9370              		.loc 1 1436 0
 9371 0ff4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9372 0ff6 A54B     		ldr	r3, .L451
 9373 0ff8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9374 0ffa A549     		ldr	r1, .L451+4
 9375 0ffc 1346     		mov	r3, r2
 9376 0ffe DB00     		lsls	r3, r3, #3
 9377 1000 9B1A     		subs	r3, r3, r2
 9378 1002 1B01     		lsls	r3, r3, #4
 9379 1004 0B44     		add	r3, r3, r1
 9380 1006 03F58773 		add	r3, r3, #270
 9381 100a 0246     		mov	r2, r0
 9382 100c 1A70     		strb	r2, [r3]
1437:..\src/command_processing.c ****             
1438:..\src/command_processing.c ****             // Hold the actual position
1439:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 9383              		.loc 1 1439 0
 9384 100e F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9385 1010 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9386 1012 9F48     		ldr	r0, .L451+4
 9387 1014 1346     		mov	r3, r2
 9388 1016 DB00     		lsls	r3, r3, #3
 9389 1018 9B1A     		subs	r3, r3, r2
 9390 101a 1B01     		lsls	r3, r3, #4
 9391 101c 0344     		add	r3, r3, r0
 9392 101e 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 220


 9393 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9394 1024 1846     		mov	r0, r3
 9395 1026 9B4A     		ldr	r2, .L451+8
 9396 1028 0346     		mov	r3, r0
 9397 102a 5B00     		lsls	r3, r3, #1
 9398 102c 0344     		add	r3, r3, r0
 9399 102e 1B01     		lsls	r3, r3, #4
 9400 1030 1344     		add	r3, r3, r2
 9401 1032 1A68     		ldr	r2, [r3]
 9402 1034 9848     		ldr	r0, .L451+12
 9403 1036 0B01     		lsls	r3, r1, #4
 9404 1038 0344     		add	r3, r3, r0
 9405 103a 1A60     		str	r2, [r3]
1440:..\src/command_processing.c ****             break;   
 9406              		.loc 1 1440 0
 9407 103c E4E1     		b	.L378
 9408              	.L360:
1441:..\src/command_processing.c **** 
1442:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1443:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9409              		.loc 1 1443 0
 9410 103e 0023     		movs	r3, #0
 9411 1040 FB75     		strb	r3, [r7, #23]
 9412 1042 7FE0     		b	.L432
 9413              	.L433:
1444:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9414              		.loc 1 1444 0 discriminator 3
 9415 1044 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9416 1046 9249     		ldr	r1, .L451+4
 9417 1048 1346     		mov	r3, r2
 9418 104a DB00     		lsls	r3, r3, #3
 9419 104c 9B1A     		subs	r3, r3, r2
 9420 104e 1B01     		lsls	r3, r3, #4
 9421 1050 0B44     		add	r3, r3, r1
 9422 1052 03F58873 		add	r3, r3, #272
 9423 1056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9424 1058 1C46     		mov	r4, r3
 9425 105a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9426 105c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9427 105e 5B00     		lsls	r3, r3, #1
 9428 1060 0333     		adds	r3, r3, #3
 9429 1062 8A49     		ldr	r1, .L451
 9430 1064 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9431 1066 1B02     		lsls	r3, r3, #8
 9432 1068 19B2     		sxth	r1, r3
 9433 106a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9434 106c 0233     		adds	r3, r3, #2
 9435 106e 5B00     		lsls	r3, r3, #1
 9436 1070 8648     		ldr	r0, .L451
 9437 1072 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9438 1074 1BB2     		sxth	r3, r3
 9439 1076 0B43     		orrs	r3, r3, r1
 9440 1078 1BB2     		sxth	r3, r3
 9441 107a 1846     		mov	r0, r3
 9442 107c 8449     		ldr	r1, .L451+4
 9443 107e 2346     		mov	r3, r4
 9444 1080 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 221


 9445 1082 2344     		add	r3, r3, r4
 9446 1084 9B00     		lsls	r3, r3, #2
 9447 1086 1344     		add	r3, r3, r2
 9448 1088 6633     		adds	r3, r3, #102
 9449 108a 41F82300 		str	r0, [r1, r3, lsl #2]
1445:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 9450              		.loc 1 1445 0 discriminator 3
 9451 108e FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9452 1090 7F49     		ldr	r1, .L451+4
 9453 1092 1346     		mov	r3, r2
 9454 1094 DB00     		lsls	r3, r3, #3
 9455 1096 9B1A     		subs	r3, r3, r2
 9456 1098 1B01     		lsls	r3, r3, #4
 9457 109a 0B44     		add	r3, r3, r1
 9458 109c 03F58873 		add	r3, r3, #272
 9459 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9460 10a2 1D46     		mov	r5, r3
 9461 10a4 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9462 10a6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9463 10a8 7948     		ldr	r0, .L451+4
 9464 10aa 1346     		mov	r3, r2
 9465 10ac DB00     		lsls	r3, r3, #3
 9466 10ae 9B1A     		subs	r3, r3, r2
 9467 10b0 1B01     		lsls	r3, r3, #4
 9468 10b2 0344     		add	r3, r3, r0
 9469 10b4 03F58873 		add	r3, r3, #272
 9470 10b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9471 10ba 1C46     		mov	r4, r3
 9472 10bc FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9473 10be 7448     		ldr	r0, .L451+4
 9474 10c0 2346     		mov	r3, r4
 9475 10c2 5B00     		lsls	r3, r3, #1
 9476 10c4 2344     		add	r3, r3, r4
 9477 10c6 9B00     		lsls	r3, r3, #2
 9478 10c8 1344     		add	r3, r3, r2
 9479 10ca 6633     		adds	r3, r3, #102
 9480 10cc 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9481 10d0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9482 10d2 6F4C     		ldr	r4, .L451+4
 9483 10d4 1346     		mov	r3, r2
 9484 10d6 DB00     		lsls	r3, r3, #3
 9485 10d8 9B1A     		subs	r3, r3, r2
 9486 10da 1B01     		lsls	r3, r3, #4
 9487 10dc 2344     		add	r3, r3, r4
 9488 10de 03F58873 		add	r3, r3, #272
 9489 10e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9490 10e4 1E46     		mov	r6, r3
 9491 10e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9492 10e8 694C     		ldr	r4, .L451+4
 9493 10ea 3346     		mov	r3, r6
 9494 10ec 5B00     		lsls	r3, r3, #1
 9495 10ee 3344     		add	r3, r3, r6
 9496 10f0 1B01     		lsls	r3, r3, #4
 9497 10f2 2344     		add	r3, r3, r4
 9498 10f4 1344     		add	r3, r3, r2
 9499 10f6 03F29513 		addw	r3, r3, #405
 9500 10fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 222


 9501 10fc 00FA03F2 		lsl	r2, r0, r3
 9502 1100 6348     		ldr	r0, .L451+4
 9503 1102 2B46     		mov	r3, r5
 9504 1104 5B00     		lsls	r3, r3, #1
 9505 1106 2B44     		add	r3, r3, r5
 9506 1108 9B00     		lsls	r3, r3, #2
 9507 110a 0B44     		add	r3, r3, r1
 9508 110c 6633     		adds	r3, r3, #102
 9509 110e 40F82320 		str	r2, [r0, r3, lsl #2]
1446:..\src/command_processing.c **** 
1447:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 9510              		.loc 1 1447 0 discriminator 3
 9511 1112 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9512 1114 5E49     		ldr	r1, .L451+4
 9513 1116 1346     		mov	r3, r2
 9514 1118 DB00     		lsls	r3, r3, #3
 9515 111a 9B1A     		subs	r3, r3, r2
 9516 111c 1B01     		lsls	r3, r3, #4
 9517 111e 0B44     		add	r3, r3, r1
 9518 1120 03F58873 		add	r3, r3, #272
 9519 1124 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9520 1126 1846     		mov	r0, r3
 9521 1128 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9522 112a 5A49     		ldr	r1, .L451+8
 9523 112c 0346     		mov	r3, r0
 9524 112e 5B00     		lsls	r3, r3, #1
 9525 1130 0344     		add	r3, r3, r0
 9526 1132 1B01     		lsls	r3, r3, #4
 9527 1134 0B44     		add	r3, r3, r1
 9528 1136 1344     		add	r3, r3, r2
 9529 1138 1433     		adds	r3, r3, #20
 9530 113a 0022     		movs	r2, #0
 9531 113c 1A70     		strb	r2, [r3]
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9532              		.loc 1 1443 0 discriminator 3
 9533 113e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9534 1140 0133     		adds	r3, r3, #1
 9535 1142 FB75     		strb	r3, [r7, #23]
 9536              	.L432:
1443:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9537              		.loc 1 1443 0 is_stmt 0 discriminator 1
 9538 1144 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9539 1146 022B     		cmp	r3, #2
 9540 1148 7FF67CAF 		bls	.L433
1448:..\src/command_processing.c ****             }
1449:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9541              		.loc 1 1449 0 is_stmt 1
 9542 114c 534B     		ldr	r3, .L451+16
 9543 114e 0122     		movs	r2, #1
 9544 1150 1A70     		strb	r2, [r3]
1450:..\src/command_processing.c ****             break;
 9545              		.loc 1 1450 0
 9546 1152 59E1     		b	.L378
 9547              	.L361:
1451:..\src/command_processing.c ****     
1452:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1453:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 223


 9548              		.loc 1 1453 0
 9549 1154 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9550 1156 4D4B     		ldr	r3, .L451
 9551 1158 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9552 115a 1906     		lsls	r1, r3, #24
 9553 115c 4B4B     		ldr	r3, .L451
 9554 115e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9555 1160 1B04     		lsls	r3, r3, #16
 9556 1162 1943     		orrs	r1, r1, r3
 9557 1164 494B     		ldr	r3, .L451
 9558 1166 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9559 1168 1B02     		lsls	r3, r3, #8
 9560 116a 0B43     		orrs	r3, r3, r1
 9561 116c 4749     		ldr	r1, .L451
 9562 116e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9563 1170 1943     		orrs	r1, r1, r3
 9564 1172 4748     		ldr	r0, .L451+4
 9565 1174 1346     		mov	r3, r2
 9566 1176 DB00     		lsls	r3, r3, #3
 9567 1178 9B1A     		subs	r3, r3, r2
 9568 117a 1B01     		lsls	r3, r3, #4
 9569 117c 0344     		add	r3, r3, r0
 9570 117e E433     		adds	r3, r3, #228
 9571 1180 1960     		str	r1, [r3]
1454:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 9572              		.loc 1 1454 0
 9573 1182 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9574 1184 414B     		ldr	r3, .L451
 9575 1186 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9576 1188 1906     		lsls	r1, r3, #24
 9577 118a 404B     		ldr	r3, .L451
 9578 118c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9579 118e 1B04     		lsls	r3, r3, #16
 9580 1190 1943     		orrs	r1, r1, r3
 9581 1192 3E4B     		ldr	r3, .L451
 9582 1194 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9583 1196 1B02     		lsls	r3, r3, #8
 9584 1198 0B43     		orrs	r3, r3, r1
 9585 119a 3C49     		ldr	r1, .L451
 9586 119c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9587 119e 1943     		orrs	r1, r1, r3
 9588 11a0 3B48     		ldr	r0, .L451+4
 9589 11a2 1346     		mov	r3, r2
 9590 11a4 DB00     		lsls	r3, r3, #3
 9591 11a6 9B1A     		subs	r3, r3, r2
 9592 11a8 1B01     		lsls	r3, r3, #4
 9593 11aa 0344     		add	r3, r3, r0
 9594 11ac E833     		adds	r3, r3, #232
 9595 11ae 1960     		str	r1, [r3]
1455:..\src/command_processing.c **** 
1456:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 9596              		.loc 1 1456 0
 9597 11b0 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9598 11b2 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9599 11b4 3648     		ldr	r0, .L451+4
 9600 11b6 0B46     		mov	r3, r1
 9601 11b8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 224


 9602 11ba 5B1A     		subs	r3, r3, r1
 9603 11bc 1B01     		lsls	r3, r3, #4
 9604 11be 0344     		add	r3, r3, r0
 9605 11c0 E433     		adds	r3, r3, #228
 9606 11c2 1868     		ldr	r0, [r3]
 9607 11c4 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9608 11c6 324C     		ldr	r4, .L451+4
 9609 11c8 0B46     		mov	r3, r1
 9610 11ca DB00     		lsls	r3, r3, #3
 9611 11cc 5B1A     		subs	r3, r3, r1
 9612 11ce 1B01     		lsls	r3, r3, #4
 9613 11d0 2344     		add	r3, r3, r4
 9614 11d2 03F58873 		add	r3, r3, #272
 9615 11d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9616 11d8 1C46     		mov	r4, r3
 9617 11da 2D49     		ldr	r1, .L451+4
 9618 11dc 2346     		mov	r3, r4
 9619 11de 5B00     		lsls	r3, r3, #1
 9620 11e0 2344     		add	r3, r3, r4
 9621 11e2 1B01     		lsls	r3, r3, #4
 9622 11e4 0B44     		add	r3, r3, r1
 9623 11e6 03F29513 		addw	r3, r3, #405
 9624 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9625 11ec 00FA03F1 		lsl	r1, r0, r3
 9626 11f0 2748     		ldr	r0, .L451+4
 9627 11f2 1346     		mov	r3, r2
 9628 11f4 DB00     		lsls	r3, r3, #3
 9629 11f6 9B1A     		subs	r3, r3, r2
 9630 11f8 1B01     		lsls	r3, r3, #4
 9631 11fa 0344     		add	r3, r3, r0
 9632 11fc E433     		adds	r3, r3, #228
 9633 11fe 1960     		str	r1, [r3]
1457:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 9634              		.loc 1 1457 0
 9635 1200 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9636 1202 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9637 1204 2248     		ldr	r0, .L451+4
 9638 1206 0B46     		mov	r3, r1
 9639 1208 DB00     		lsls	r3, r3, #3
 9640 120a 5B1A     		subs	r3, r3, r1
 9641 120c 1B01     		lsls	r3, r3, #4
 9642 120e 0344     		add	r3, r3, r0
 9643 1210 E833     		adds	r3, r3, #232
 9644 1212 1868     		ldr	r0, [r3]
 9645 1214 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9646 1216 1E4C     		ldr	r4, .L451+4
 9647 1218 0B46     		mov	r3, r1
 9648 121a DB00     		lsls	r3, r3, #3
 9649 121c 5B1A     		subs	r3, r3, r1
 9650 121e 1B01     		lsls	r3, r3, #4
 9651 1220 2344     		add	r3, r3, r4
 9652 1222 03F58873 		add	r3, r3, #272
 9653 1226 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9654 1228 1C46     		mov	r4, r3
 9655 122a 1949     		ldr	r1, .L451+4
 9656 122c 2346     		mov	r3, r4
 9657 122e 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 225


 9658 1230 2344     		add	r3, r3, r4
 9659 1232 1B01     		lsls	r3, r3, #4
 9660 1234 0B44     		add	r3, r3, r1
 9661 1236 03F29513 		addw	r3, r3, #405
 9662 123a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9663 123c 00FA03F1 		lsl	r1, r0, r3
 9664 1240 1348     		ldr	r0, .L451+4
 9665 1242 1346     		mov	r3, r2
 9666 1244 DB00     		lsls	r3, r3, #3
 9667 1246 9B1A     		subs	r3, r3, r2
 9668 1248 1B01     		lsls	r3, r3, #4
 9669 124a 0344     		add	r3, r3, r0
 9670 124c E833     		adds	r3, r3, #232
 9671 124e 1960     		str	r1, [r3]
1458:..\src/command_processing.c ****             break;
 9672              		.loc 1 1458 0
 9673 1250 DAE0     		b	.L378
 9674              	.L362:
1459:..\src/command_processing.c ****             
1460:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1461:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 9675              		.loc 1 1461 0
 9676 1252 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9677 1254 0D4B     		ldr	r3, .L451
 9678 1256 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9679 1258 0D49     		ldr	r1, .L451+4
 9680 125a 1346     		mov	r3, r2
 9681 125c DB00     		lsls	r3, r3, #3
 9682 125e 9B1A     		subs	r3, r3, r2
 9683 1260 1B01     		lsls	r3, r3, #4
 9684 1262 0B44     		add	r3, r3, r1
 9685 1264 E233     		adds	r3, r3, #226
 9686 1266 0246     		mov	r2, r0
 9687 1268 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 9688              		.loc 1 1462 0
 9689 126a 094B     		ldr	r3, .L451+4
 9690 126c 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 9691 1270 5B00     		lsls	r3, r3, #1
 9692 1272 5AB2     		sxtb	r2, r3
 9693 1274 064B     		ldr	r3, .L451+4
 9694 1276 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 9695 127a 5BB2     		sxtb	r3, r3
 9696 127c 1343     		orrs	r3, r3, r2
 9697 127e 5BB2     		sxtb	r3, r3
 9698 1280 DBB2     		uxtb	r3, r3
 9699 1282 1846     		mov	r0, r3
 9700 1284 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1463:..\src/command_processing.c ****             break;
 9701              		.loc 1 1463 0
 9702 1288 BEE0     		b	.L378
 9703              	.L452:
 9704 128a 00BF     		.align	2
 9705              	.L451:
 9706 128c 00000000 		.word	g_rx
 9707 1290 00000000 		.word	g_mem
 9708 1294 00000000 		.word	g_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 226


 9709 1298 00000000 		.word	g_refNew
 9710 129c 00000000 		.word	reset_last_value_flag
 9711              	.L363:
1464:..\src/command_processing.c **** 
1465:..\src/command_processing.c ****         case 71:        // Device type
1466:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 9712              		.loc 1 1466 0
 9713 12a0 5B4B     		ldr	r3, .L453
 9714 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9715 12a4 5B4B     		ldr	r3, .L453+4
 9716 12a6 83F8AC20 		strb	r2, [r3, #172]
1467:..\src/command_processing.c ****             
1468:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 9717              		.loc 1 1468 0
 9718 12aa 5A4B     		ldr	r3, .L453+4
 9719 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9720 12b0 002B     		cmp	r3, #0
 9721 12b2 40F0A880 		bne	.L440
1469:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9722              		.loc 1 1469 0
 9723 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9724 12b8 5649     		ldr	r1, .L453+4
 9725 12ba 1346     		mov	r3, r2
 9726 12bc DB00     		lsls	r3, r3, #3
 9727 12be 9B1A     		subs	r3, r3, r2
 9728 12c0 1B01     		lsls	r3, r3, #4
 9729 12c2 0B44     		add	r3, r3, r1
 9730 12c4 03F58873 		add	r3, r3, #272
 9731 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9732 12ca 1946     		mov	r1, r3
 9733 12cc 514A     		ldr	r2, .L453+4
 9734 12ce 0B46     		mov	r3, r1
 9735 12d0 5B00     		lsls	r3, r3, #1
 9736 12d2 0B44     		add	r3, r3, r1
 9737 12d4 1B01     		lsls	r3, r3, #4
 9738 12d6 1344     		add	r3, r3, r2
 9739 12d8 03F5D873 		add	r3, r3, #432
 9740 12dc 0122     		movs	r2, #1
 9741 12de 1A70     		strb	r2, [r3]
1470:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9742              		.loc 1 1470 0
 9743 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9744 12e2 4C49     		ldr	r1, .L453+4
 9745 12e4 1346     		mov	r3, r2
 9746 12e6 DB00     		lsls	r3, r3, #3
 9747 12e8 9B1A     		subs	r3, r3, r2
 9748 12ea 1B01     		lsls	r3, r3, #4
 9749 12ec 0B44     		add	r3, r3, r1
 9750 12ee 03F58873 		add	r3, r3, #272
 9751 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9752 12f4 1946     		mov	r1, r3
 9753 12f6 474A     		ldr	r2, .L453+4
 9754 12f8 0B46     		mov	r3, r1
 9755 12fa 5B00     		lsls	r3, r3, #1
 9756 12fc 0B44     		add	r3, r3, r1
 9757 12fe 1B01     		lsls	r3, r3, #4
 9758 1300 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 227


 9759 1302 03F2B513 		addw	r3, r3, #437
 9760 1306 2322     		movs	r2, #35
 9761 1308 1A70     		strb	r2, [r3]
1471:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9762              		.loc 1 1471 0
 9763 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9764 130c 4149     		ldr	r1, .L453+4
 9765 130e 1346     		mov	r3, r2
 9766 1310 DB00     		lsls	r3, r3, #3
 9767 1312 9B1A     		subs	r3, r3, r2
 9768 1314 1B01     		lsls	r3, r3, #4
 9769 1316 0B44     		add	r3, r3, r1
 9770 1318 03F58873 		add	r3, r3, #272
 9771 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9772 131e 1946     		mov	r1, r3
 9773 1320 3C4A     		ldr	r2, .L453+4
 9774 1322 0B46     		mov	r3, r1
 9775 1324 5B00     		lsls	r3, r3, #1
 9776 1326 0B44     		add	r3, r3, r1
 9777 1328 1B01     		lsls	r3, r3, #4
 9778 132a 1344     		add	r3, r3, r2
 9779 132c 03F5DB73 		add	r3, r3, #438
 9780 1330 0322     		movs	r2, #3
 9781 1332 1A70     		strb	r2, [r3]
1472:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9782              		.loc 1 1472 0
 9783 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9784 1336 3749     		ldr	r1, .L453+4
 9785 1338 1346     		mov	r3, r2
 9786 133a DB00     		lsls	r3, r3, #3
 9787 133c 9B1A     		subs	r3, r3, r2
 9788 133e 1B01     		lsls	r3, r3, #4
 9789 1340 0B44     		add	r3, r3, r1
 9790 1342 03F58873 		add	r3, r3, #272
 9791 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9792 1348 1946     		mov	r1, r3
 9793 134a 324A     		ldr	r2, .L453+4
 9794 134c 0B46     		mov	r3, r1
 9795 134e 5B00     		lsls	r3, r3, #1
 9796 1350 0B44     		add	r3, r3, r1
 9797 1352 1B01     		lsls	r3, r3, #4
 9798 1354 1344     		add	r3, r3, r2
 9799 1356 03F2B713 		addw	r3, r3, #439
 9800 135a FF22     		movs	r2, #255
 9801 135c 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 
1474:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1475:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 9802              		.loc 1 1475 0
 9803 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9804 1360 2C4B     		ldr	r3, .L453+4
 9805 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9806 1366 2B49     		ldr	r1, .L453+4
 9807 1368 1346     		mov	r3, r2
 9808 136a DB00     		lsls	r3, r3, #3
 9809 136c 9B1A     		subs	r3, r3, r2
 9810 136e 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 228


 9811 1370 0B44     		add	r3, r3, r1
 9812 1372 03F58873 		add	r3, r3, #272
 9813 1376 0246     		mov	r2, r0
 9814 1378 1A70     		strb	r2, [r3]
1476:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 9815              		.loc 1 1476 0
 9816 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9817 137c 2549     		ldr	r1, .L453+4
 9818 137e 1346     		mov	r3, r2
 9819 1380 DB00     		lsls	r3, r3, #3
 9820 1382 9B1A     		subs	r3, r3, r2
 9821 1384 1B01     		lsls	r3, r3, #4
 9822 1386 0B44     		add	r3, r3, r1
 9823 1388 03F21113 		addw	r3, r3, #273
 9824 138c 0122     		movs	r2, #1
 9825 138e 1A70     		strb	r2, [r3]
1477:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 9826              		.loc 1 1477 0
 9827 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9828 1392 2049     		ldr	r1, .L453+4
 9829 1394 1346     		mov	r3, r2
 9830 1396 DB00     		lsls	r3, r3, #3
 9831 1398 9B1A     		subs	r3, r3, r2
 9832 139a 1B01     		lsls	r3, r3, #4
 9833 139c 0B44     		add	r3, r3, r1
 9834 139e 03F58973 		add	r3, r3, #274
 9835 13a2 0122     		movs	r2, #1
 9836 13a4 1A70     		strb	r2, [r3]
1478:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9837              		.loc 1 1478 0
 9838 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9839 13a8 1A49     		ldr	r1, .L453+4
 9840 13aa 1346     		mov	r3, r2
 9841 13ac DB00     		lsls	r3, r3, #3
 9842 13ae 9B1A     		subs	r3, r3, r2
 9843 13b0 1B01     		lsls	r3, r3, #4
 9844 13b2 0B44     		add	r3, r3, r1
 9845 13b4 E433     		adds	r3, r3, #228
 9846 13b6 0022     		movs	r2, #0
 9847 13b8 1A60     		str	r2, [r3]
1479:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9848              		.loc 1 1479 0
 9849 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9850 13bc 154B     		ldr	r3, .L453+4
 9851 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9852 13c2 1846     		mov	r0, r3
 9853 13c4 1349     		ldr	r1, .L453+4
 9854 13c6 0346     		mov	r3, r0
 9855 13c8 5B00     		lsls	r3, r3, #1
 9856 13ca 0344     		add	r3, r3, r0
 9857 13cc 1B01     		lsls	r3, r3, #4
 9858 13ce 0B44     		add	r3, r3, r1
 9859 13d0 03F29513 		addw	r3, r3, #405
 9860 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9861 13d6 1946     		mov	r1, r3
 9862 13d8 4FF47A53 		mov	r3, #16000
 9863 13dc 03FA01F1 		lsl	r1, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 229


 9864 13e0 0C48     		ldr	r0, .L453+4
 9865 13e2 1346     		mov	r3, r2
 9866 13e4 DB00     		lsls	r3, r3, #3
 9867 13e6 9B1A     		subs	r3, r3, r2
 9868 13e8 1B01     		lsls	r3, r3, #4
 9869 13ea 0344     		add	r3, r3, r0
 9870 13ec E833     		adds	r3, r3, #232
 9871 13ee 1960     		str	r1, [r3]
1480:..\src/command_processing.c ****             }        
1481:..\src/command_processing.c ****             break;
 9872              		.loc 1 1481 0
 9873 13f0 09E0     		b	.L440
 9874              	.L435:
1482:..\src/command_processing.c ****             
1483:..\src/command_processing.c ****         default:
1484:..\src/command_processing.c ****             break;
 9875              		.loc 1 1484 0
 9876 13f2 00BF     		nop
 9877 13f4 08E0     		b	.L378
 9878              	.L436:
1290:..\src/command_processing.c ****             
 9879              		.loc 1 1290 0
 9880 13f6 00BF     		nop
 9881 13f8 06E0     		b	.L378
 9882              	.L437:
1318:..\src/command_processing.c **** 
 9883              		.loc 1 1318 0
 9884 13fa 00BF     		nop
 9885 13fc 04E0     		b	.L378
 9886              	.L438:
1336:..\src/command_processing.c ****             
 9887              		.loc 1 1336 0
 9888 13fe 00BF     		nop
 9889 1400 02E0     		b	.L378
 9890              	.L439:
1346:..\src/command_processing.c ****            
 9891              		.loc 1 1346 0
 9892 1402 00BF     		nop
 9893 1404 00E0     		b	.L378
 9894              	.L440:
1481:..\src/command_processing.c ****             
 9895              		.loc 1 1481 0
 9896 1406 00BF     		nop
 9897              	.L378:
1485:..\src/command_processing.c ****     }
1486:..\src/command_processing.c **** }
 9898              		.loc 1 1486 0 discriminator 1
 9899 1408 00BF     		nop
 9900 140a 1C37     		adds	r7, r7, #28
 9901              		.cfi_def_cfa_offset 20
 9902 140c BD46     		mov	sp, r7
 9903              		.cfi_def_cfa_register 13
 9904              		@ sp needed
 9905 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 9906              	.L454:
 9907              		.align	2
 9908              	.L453:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 230


 9909 1410 00000000 		.word	g_rx
 9910 1414 00000000 		.word	g_mem
 9911              		.cfi_endproc
 9912              	.LFE69:
 9913              		.size	set_custom_param, .-set_custom_param
 9914              		.section	.rodata
 9915 0cea 0000     		.align	2
 9916              	.LC118:
 9917 0cec 506F7274 		.ascii	"Port %u ID:\000"
 9917      20257520 
 9917      49443A00 
 9918              		.align	2
 9919              	.LC119:
 9920 0cf8 2575202D 		.ascii	"%u - Device ID:\000"
 9920      20446576 
 9920      69636520 
 9920      49443A00 
 9921              		.align	2
 9922              	.LC120:
 9923 0d08 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 9923      20494D55 
 9923      20256420 
 9923      636F6E66 
 9923      69677572 
 9924 0d23 00       		.align	2
 9925              	.LC121:
 9926 0d24 2575202D 		.ascii	"%u - SPI read delay:\000"
 9926      20535049 
 9926      20726561 
 9926      64206465 
 9926      6C61793A 
 9927 0d39 000000   		.align	2
 9928              	.LC122:
 9929 0d3c 204E6F6E 		.ascii	" None\000"
 9929      6500
 9930 0d42 0000     		.align	2
 9931              	.LC123:
 9932 0d44 204C6F77 		.ascii	" Low\000"
 9932      00
 9933 0d49 000000   		.align	2
 9934              	.LC124:
 9935 0d4c 20486967 		.ascii	" High\000"
 9935      6800
 9936 0d52 0000     		.align	2
 9937              	.LC116:
 9938 0d54 4E756D62 		.ascii	"Number of connected IMUs:\000"
 9938      6572206F 
 9938      6620636F 
 9938      6E6E6563 
 9938      74656420 
 9939 0d6e 0000     		.align	2
 9940              	.LC117:
 9941 0d70 4D616720 		.ascii	"Mag cal parameters:\000"
 9941      63616C20 
 9941      70617261 
 9941      6D657465 
 9941      72733A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 231


 9942              		.section	.text.get_IMU_param_list,"ax",%progbits
 9943              		.align	2
 9944              		.global	get_IMU_param_list
 9945              		.thumb
 9946              		.thumb_func
 9947              		.type	get_IMU_param_list, %function
 9948              	get_IMU_param_list:
 9949              	.LFB70:
1487:..\src/command_processing.c **** 
1488:..\src/command_processing.c **** //==============================================================================
1489:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1490:..\src/command_processing.c **** //==============================================================================
1491:..\src/command_processing.c **** 
1492:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1493:..\src/command_processing.c **** {
 9950              		.loc 1 1493 0
 9951              		.cfi_startproc
 9952              		@ args = 0, pretend = 0, frame = 1704
 9953              		@ frame_needed = 1, uses_anonymous_args = 0
 9954 0000 B0B5     		push	{r4, r5, r7, lr}
 9955              		.cfi_def_cfa_offset 16
 9956              		.cfi_offset 4, -16
 9957              		.cfi_offset 5, -12
 9958              		.cfi_offset 7, -8
 9959              		.cfi_offset 14, -4
 9960 0002 ADF5D56D 		sub	sp, sp, #1704
 9961              		.cfi_def_cfa_offset 1720
 9962 0006 00AF     		add	r7, sp, #0
 9963              		.cfi_def_cfa_register 7
 9964 0008 0246     		mov	r2, r0
 9965 000a BB1D     		adds	r3, r7, #6
 9966 000c 1A80     		strh	r2, [r3]	@ movhi
1494:..\src/command_processing.c ****     //Package to be sent variables
1495:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 9967              		.loc 1 1495 0
 9968 000e 07F58A73 		add	r3, r7, #276
 9969 0012 0022     		movs	r2, #0
 9970 0014 1A60     		str	r2, [r3]
 9971 0016 0433     		adds	r3, r3, #4
 9972 0018 40F27552 		movw	r2, #1397
 9973 001c 0021     		movs	r1, #0
 9974 001e 1846     		mov	r0, r3
 9975 0020 FFF7FEFF 		bl	memset
1496:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1497:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1498:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1499:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1500:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1501:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1502:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 9976              		.loc 1 1502 0
 9977 0024 0723     		movs	r3, #7
 9978 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1503:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 9979              		.loc 1 1503 0
 9980 002a 0023     		movs	r3, #0
 9981 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 232


1504:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 9982              		.loc 1 1504 0
 9983 0030 0223     		movs	r3, #2
 9984 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1505:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 9985              		.loc 1 1505 0
 9986 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 9987 003a 5A1C     		adds	r2, r3, #1
1506:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 9988              		.loc 1 1506 0
 9989 003c B7F8A636 		ldrh	r3, [r7, #1702]
 9990 0040 1344     		add	r3, r3, r2
1507:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 9991              		.loc 1 1507 0
 9992 0042 0133     		adds	r3, r3, #1
1505:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 9993              		.loc 1 1505 0
 9994 0044 9AB2     		uxth	r2, r3
 9995 0046 D24B     		ldr	r3, .L501
 9996 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9997 004a 9BB2     		uxth	r3, r3
 9998 004c 1344     		add	r3, r3, r2
 9999 004e 9BB2     		uxth	r3, r3
 10000 0050 1A46     		mov	r2, r3	@ movhi
 10001 0052 9200     		lsls	r2, r2, #2
 10002 0054 1344     		add	r3, r3, r2
 10003 0056 1A46     		mov	r2, r3	@ movhi
 10004 0058 9100     		lsls	r1, r2, #2
 10005 005a 1A46     		mov	r2, r3	@ movhi
 10006 005c 0B46     		mov	r3, r1	@ movhi
 10007 005e 1344     		add	r3, r3, r2
 10008 0060 5B00     		lsls	r3, r3, #1
 10009 0062 9BB2     		uxth	r3, r3
 10010 0064 FB33     		adds	r3, r3, #251
 10011 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1508:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1509:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1510:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1511:..\src/command_processing.c **** 
1512:..\src/command_processing.c ****     //Auxiliary variables
1513:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1514:..\src/command_processing.c ****     uint16 start_byte = 0;
 10012              		.loc 1 1514 0
 10013 006a 0023     		movs	r3, #0
 10014 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1515:..\src/command_processing.c **** 
1516:..\src/command_processing.c ****     //Parameters menu string definitions
1517:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 10015              		.loc 1 1517 0
 10016 0070 07F1F803 		add	r3, r7, #248
 10017 0074 C74A     		ldr	r2, .L501+4
 10018 0076 1C46     		mov	r4, r3
 10019 0078 1546     		mov	r5, r2
 10020 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10021 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10022 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 10023 0082 03C4     		stmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 233


 10024 0084 2280     		strh	r2, [r4]	@ movhi
1518:..\src/command_processing.c ****     char ids_str[11]            = "";
 10025              		.loc 1 1518 0
 10026 0086 07F1EC03 		add	r3, r7, #236
 10027 008a 0022     		movs	r2, #0
 10028 008c 1A60     		str	r2, [r3]
 10029 008e 0433     		adds	r3, r3, #4
 10030 0090 0022     		movs	r2, #0
 10031 0092 1A60     		str	r2, [r3]
 10032 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1519:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 10033              		.loc 1 1519 0
 10034 0098 07F1D803 		add	r3, r7, #216
 10035 009c BE4A     		ldr	r2, .L501+8
 10036 009e 1C46     		mov	r4, r3
 10037 00a0 1546     		mov	r5, r2
 10038 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10039 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10040 00a6 2B68     		ldr	r3, [r5]
 10041 00a8 2360     		str	r3, [r4]
1520:..\src/command_processing.c ****     char id_str[16]             = "";
 10042              		.loc 1 1520 0
 10043 00aa 07F1C803 		add	r3, r7, #200
 10044 00ae 0022     		movs	r2, #0
 10045 00b0 1A60     		str	r2, [r3]
 10046 00b2 0433     		adds	r3, r3, #4
 10047 00b4 0022     		movs	r2, #0
 10048 00b6 1A60     		str	r2, [r3]
 10049 00b8 5A60     		str	r2, [r3, #4]
 10050 00ba 9A60     		str	r2, [r3, #8]
1521:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 10051              		.loc 1 1521 0
 10052 00bc 07F19C03 		add	r3, r7, #156
 10053 00c0 0022     		movs	r2, #0
 10054 00c2 1A60     		str	r2, [r3]
 10055 00c4 0433     		adds	r3, r3, #4
 10056 00c6 2622     		movs	r2, #38
 10057 00c8 0021     		movs	r1, #0
 10058 00ca 1846     		mov	r0, r3
 10059 00cc FFF7FEFF 		bl	memset
1522:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 10060              		.loc 1 1522 0
 10061 00d0 07F18003 		add	r3, r7, #128
 10062 00d4 0022     		movs	r2, #0
 10063 00d6 1A60     		str	r2, [r3]
 10064 00d8 0433     		adds	r3, r3, #4
 10065 00da 0022     		movs	r2, #0
 10066 00dc 1A60     		str	r2, [r3]
 10067 00de 5A60     		str	r2, [r3, #4]
 10068 00e0 9A60     		str	r2, [r3, #8]
 10069 00e2 DA60     		str	r2, [r3, #12]
 10070 00e4 1A61     		str	r2, [r3, #16]
 10071 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1523:..\src/command_processing.c ****     
1524:..\src/command_processing.c ****     //Strings lenghts
1525:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 10072              		.loc 1 1525 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 234


 10073 00e8 07F1C803 		add	r3, r7, #200
 10074 00ec 1846     		mov	r0, r3
 10075 00ee FFF7FEFF 		bl	strlen
 10076 00f2 0346     		mov	r3, r0
 10077 00f4 87F89336 		strb	r3, [r7, #1683]
1526:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 10078              		.loc 1 1526 0
 10079 00f8 07F1F803 		add	r3, r7, #248
 10080 00fc 1846     		mov	r0, r3
 10081 00fe FFF7FEFF 		bl	strlen
 10082 0102 0346     		mov	r3, r0
 10083 0104 87F89236 		strb	r3, [r7, #1682]
1527:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 10084              		.loc 1 1527 0
 10085 0108 07F1EC03 		add	r3, r7, #236
 10086 010c 1846     		mov	r0, r3
 10087 010e FFF7FEFF 		bl	strlen
 10088 0112 0346     		mov	r3, r0
 10089 0114 87F89136 		strb	r3, [r7, #1681]
1528:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 10090              		.loc 1 1528 0
 10091 0118 07F1D803 		add	r3, r7, #216
 10092 011c 1846     		mov	r0, r3
 10093 011e FFF7FEFF 		bl	strlen
 10094 0122 0346     		mov	r3, r0
 10095 0124 87F89036 		strb	r3, [r7, #1680]
1529:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 10096              		.loc 1 1529 0
 10097 0128 07F19C03 		add	r3, r7, #156
 10098 012c 1846     		mov	r0, r3
 10099 012e FFF7FEFF 		bl	strlen
 10100 0132 0346     		mov	r3, r0
 10101 0134 87F88F36 		strb	r3, [r7, #1679]
1530:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 10102              		.loc 1 1530 0
 10103 0138 07F18003 		add	r3, r7, #128
 10104 013c 1846     		mov	r0, r3
 10105 013e FFF7FEFF 		bl	strlen
 10106 0142 0346     		mov	r3, r0
 10107 0144 87F89D36 		strb	r3, [r7, #1693]
1531:..\src/command_processing.c ****     
1532:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 10108              		.loc 1 1532 0
 10109 0148 07F10803 		add	r3, r7, #8
 10110 014c 0022     		movs	r2, #0
 10111 014e 1A60     		str	r2, [r3]
 10112 0150 0433     		adds	r3, r3, #4
 10113 0152 7222     		movs	r2, #114
 10114 0154 0021     		movs	r1, #0
 10115 0156 1846     		mov	r0, r3
 10116 0158 FFF7FEFF 		bl	memset
1533:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1534:..\src/command_processing.c ****  
1535:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 10117              		.loc 1 1535 0
 10118 015c 07F10800 		add	r0, r7, #8
 10119 0160 6423     		movs	r3, #100
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 235


 10120 0162 0A22     		movs	r2, #10
 10121 0164 8D49     		ldr	r1, .L501+12
 10122 0166 FFF7FEFF 		bl	sprintf
1536:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 10123              		.loc 1 1536 0
 10124 016a 07F10803 		add	r3, r7, #8
 10125 016e 1846     		mov	r0, r3
 10126 0170 FFF7FEFF 		bl	strlen
 10127 0174 0346     		mov	r3, r0
 10128 0176 87F88E36 		strb	r3, [r7, #1678]
1537:..\src/command_processing.c **** 
1538:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1539:..\src/command_processing.c ****     // update packet_length
1540:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 10129              		.loc 1 1540 0
 10130 017a 854B     		ldr	r3, .L501
 10131 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10132 017e 5B08     		lsrs	r3, r3, #1
 10133 0180 DBB2     		uxtb	r3, r3
 10134 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1541:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 10135              		.loc 1 1541 0
 10136 0186 824B     		ldr	r3, .L501
 10137 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10138 018a 1A46     		mov	r2, r3
 10139 018c B7F8A636 		ldrh	r3, [r7, #1702]
 10140 0190 5B00     		lsls	r3, r3, #1
 10141 0192 D31A     		subs	r3, r2, r3
 10142 0194 002B     		cmp	r3, #0
 10143 0196 04DD     		ble	.L456
 10144              		.loc 1 1541 0 is_stmt 0 discriminator 1
 10145 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 10146 019c 0133     		adds	r3, r3, #1
 10147 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 10148              	.L456:
1542:..\src/command_processing.c ****     
1543:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 10149              		.loc 1 1543 0 is_stmt 1
 10150 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 10151 01a6 5A1C     		adds	r2, r3, #1
1544:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10152              		.loc 1 1544 0
 10153 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 10154 01ac 1344     		add	r3, r3, r2
1545:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 10155              		.loc 1 1545 0
 10156 01ae 0133     		adds	r3, r3, #1
1543:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10157              		.loc 1 1543 0
 10158 01b0 9AB2     		uxth	r2, r3
 10159 01b2 774B     		ldr	r3, .L501
 10160 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10161 01b6 9BB2     		uxth	r3, r3
 10162 01b8 1344     		add	r3, r3, r2
 10163 01ba 9BB2     		uxth	r3, r3
 10164 01bc 1A46     		mov	r2, r3	@ movhi
 10165 01be 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 236


 10166 01c0 1344     		add	r3, r3, r2
 10167 01c2 1A46     		mov	r2, r3	@ movhi
 10168 01c4 9100     		lsls	r1, r2, #2
 10169 01c6 1A46     		mov	r2, r3	@ movhi
 10170 01c8 0B46     		mov	r3, r1	@ movhi
 10171 01ca 1344     		add	r3, r3, r2
 10172 01cc 5B00     		lsls	r3, r3, #1
 10173 01ce 9BB2     		uxth	r3, r3
 10174 01d0 C933     		adds	r3, r3, #201
 10175 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1546:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1547:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1548:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1549:..\src/command_processing.c **** 
1550:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 10176              		.loc 1 1550 0
 10177 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 10178 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10179 01de 1344     		add	r3, r3, r2
 10180 01e0 9BB2     		uxth	r3, r3
 10181 01e2 0333     		adds	r3, r3, #3
 10182 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1551:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 10183              		.loc 1 1551 0
 10184 01e8 07F58A73 		add	r3, r7, #276
 10185 01ec A222     		movs	r2, #162
 10186 01ee 1A70     		strb	r2, [r3]
1552:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 10187              		.loc 1 1552 0
 10188 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10189 01f4 DAB2     		uxtb	r2, r3
 10190 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10191 01fa DBB2     		uxtb	r3, r3
 10192 01fc 1344     		add	r3, r3, r2
 10193 01fe DAB2     		uxtb	r2, r3
 10194 0200 634B     		ldr	r3, .L501
 10195 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10196 0204 1344     		add	r3, r3, r2
 10197 0206 DBB2     		uxtb	r3, r3
 10198 0208 0333     		adds	r3, r3, #3
 10199 020a DAB2     		uxtb	r2, r3
 10200 020c 07F58A73 		add	r3, r7, #276
 10201 0210 5A70     		strb	r2, [r3, #1]
1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c ****     switch(index) {
 10202              		.loc 1 1554 0
 10203 0212 BB1D     		adds	r3, r7, #6
 10204 0214 1B88     		ldrh	r3, [r3]
 10205 0216 002B     		cmp	r3, #0
 10206 0218 40F0D084 		bne	.L499
1555:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1556:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1557:..\src/command_processing.c ****             start_byte = 0;
 10207              		.loc 1 1557 0
 10208 021c 0023     		movs	r3, #0
 10209 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1558:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 237


 10210              		.loc 1 1558 0
 10211 0222 07F58A73 		add	r3, r7, #276
 10212 0226 0222     		movs	r2, #2
 10213 0228 9A70     		strb	r2, [r3, #2]
1559:..\src/command_processing.c ****             packet_data[3] = 1;
 10214              		.loc 1 1559 0
 10215 022a 07F58A73 		add	r3, r7, #276
 10216 022e 0122     		movs	r2, #1
 10217 0230 DA70     		strb	r2, [r3, #3]
1560:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 10218              		.loc 1 1560 0
 10219 0232 574B     		ldr	r3, .L501
 10220 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10221 0236 07F58A73 		add	r3, r7, #276
 10222 023a 1A71     		strb	r2, [r3, #4]
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10223              		.loc 1 1561 0
 10224 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10225 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10226 0244 15E0     		b	.L459
 10227              	.L460:
1562:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 10228              		.loc 1 1562 0 discriminator 3
 10229 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10230 024a 5A1D     		adds	r2, r3, #5
 10231 024c B7F8A436 		ldrh	r3, [r7, #1700]
 10232 0250 D31A     		subs	r3, r2, r3
 10233 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 10234 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 10235 025a 8A1A     		subs	r2, r1, r2
 10236 025c 07F1F801 		add	r1, r7, #248
 10237 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10238 0262 07F58A72 		add	r2, r7, #276
 10239 0266 D154     		strb	r1, [r2, r3]
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10240              		.loc 1 1561 0 discriminator 3
 10241 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 10242 026c 013B     		subs	r3, r3, #1
 10243 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10244              	.L459:
1561:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10245              		.loc 1 1561 0 is_stmt 0 discriminator 1
 10246 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 10247 0276 002B     		cmp	r3, #0
 10248 0278 E5D1     		bne	.L460
1563:..\src/command_processing.c ****                 
1564:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1565:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10249              		.loc 1 1565 0 is_stmt 1
 10250 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10251 027e 3233     		adds	r3, r3, #50
 10252 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1566:..\src/command_processing.c ****             i = 0;
 10253              		.loc 1 1566 0
 10254 0284 0023     		movs	r3, #0
 10255 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1567:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 238


 10256              		.loc 1 1567 0
 10257 028a 0023     		movs	r3, #0
 10258 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10259 0290 B2E0     		b	.L461
 10260              	.L468:
1568:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10261              		.loc 1 1568 0
 10262 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 10263 0296 07F1EC03 		add	r3, r7, #236
 10264 029a 4149     		ldr	r1, .L501+16
 10265 029c 1846     		mov	r0, r3
 10266 029e FFF7FEFF 		bl	sprintf
1569:..\src/command_processing.c ****                 h = 4;
 10267              		.loc 1 1569 0
 10268 02a2 0423     		movs	r3, #4
 10269 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1570:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 10270              		.loc 1 1570 0
 10271 02a8 07F1EC03 		add	r3, r7, #236
 10272 02ac 1846     		mov	r0, r3
 10273 02ae FFF7FEFF 		bl	strlen
 10274 02b2 0346     		mov	r3, r0
 10275 02b4 87F89136 		strb	r3, [r7, #1681]
1571:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10276              		.loc 1 1571 0
 10277 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 10278 02bc 9A1C     		adds	r2, r3, #2
 10279 02be B7F8A036 		ldrh	r3, [r7, #1696]
 10280 02c2 3221     		movs	r1, #50
 10281 02c4 01FB03F3 		mul	r3, r1, r3
 10282 02c8 1344     		add	r3, r3, r2
 10283 02ca 07F58A72 		add	r2, r7, #276
 10284 02ce 0221     		movs	r1, #2
 10285 02d0 D154     		strb	r1, [r2, r3]
1572:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10286              		.loc 1 1572 0
 10287 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 10288 02d6 DA1C     		adds	r2, r3, #3
 10289 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10290 02dc 3221     		movs	r1, #50
 10291 02de 01FB03F3 		mul	r3, r1, r3
 10292 02e2 1344     		add	r3, r3, r2
 10293 02e4 07F58A72 		add	r2, r7, #276
 10294 02e8 0321     		movs	r1, #3
 10295 02ea D154     		strb	r1, [r2, r3]
1573:..\src/command_processing.c ****                 
1574:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 10296              		.loc 1 1574 0
 10297 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 10298 02f0 1A46     		mov	r2, r3	@ movhi
 10299 02f2 5200     		lsls	r2, r2, #1
 10300 02f4 1344     		add	r3, r3, r2
 10301 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10302 02fa 39E0     		b	.L462
 10303              	.L465:
1575:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10304              		.loc 1 1575 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 239


 10305 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 10306 0300 284A     		ldr	r2, .L501+20
 10307 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10308 0304 9BB2     		uxth	r3, r3
 10309 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 10310 030a 9A42     		cmp	r2, r3
 10311 030c 17D1     		bne	.L463
1576:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 10312              		.loc 1 1576 0
 10313 030e B7F89E26 		ldrh	r2, [r7, #1694]
 10314 0312 B7F89436 		ldrh	r3, [r7, #1684]
 10315 0316 1A44     		add	r2, r2, r3
 10316 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 10317 031c 3221     		movs	r1, #50
 10318 031e 01FB03F3 		mul	r3, r1, r3
 10319 0322 1344     		add	r3, r3, r2
 10320 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 10321 0328 1E49     		ldr	r1, .L501+20
 10322 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10323 032c 07F58A72 		add	r2, r7, #276
 10324 0330 D154     		strb	r1, [r2, r3]
1577:..\src/command_processing.c ****                         i++;
 10325              		.loc 1 1577 0
 10326 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 10327 0336 0133     		adds	r3, r3, #1
 10328 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10329 033c 0EE0     		b	.L464
 10330              	.L463:
1578:..\src/command_processing.c ****                     } 
1579:..\src/command_processing.c ****                     else {
1580:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 10331              		.loc 1 1580 0
 10332 033e B7F89E26 		ldrh	r2, [r7, #1694]
 10333 0342 B7F89436 		ldrh	r3, [r7, #1684]
 10334 0346 1A44     		add	r2, r2, r3
 10335 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 10336 034c 3221     		movs	r1, #50
 10337 034e 01FB03F3 		mul	r3, r1, r3
 10338 0352 1344     		add	r3, r3, r2
 10339 0354 07F58A72 		add	r2, r7, #276
 10340 0358 FF21     		movs	r1, #255
 10341 035a D154     		strb	r1, [r2, r3]
 10342              	.L464:
1581:..\src/command_processing.c ****                     }
1582:..\src/command_processing.c ****                     h++;
 10343              		.loc 1 1582 0 discriminator 2
 10344 035c B7F89E36 		ldrh	r3, [r7, #1694]
 10345 0360 0133     		adds	r3, r3, #1
 10346 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1574:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10347              		.loc 1 1574 0 discriminator 2
 10348 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 10349 036a 0133     		adds	r3, r3, #1
 10350 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10351              	.L462:
1574:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10352              		.loc 1 1574 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 240


 10353 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 10354 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 10355 0378 1346     		mov	r3, r2
 10356 037a 5B00     		lsls	r3, r3, #1
 10357 037c 1344     		add	r3, r3, r2
 10358 037e 0233     		adds	r3, r3, #2
 10359 0380 9942     		cmp	r1, r3
 10360 0382 BBDD     		ble	.L465
1583:..\src/command_processing.c ****                 }
1584:..\src/command_processing.c **** 
1585:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1586:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 10361              		.loc 1 1586 0 is_stmt 1
 10362 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10363 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10364 038c 2BE0     		b	.L466
 10365              	.L502:
 10366 038e 00BF     		.align	2
 10367              	.L501:
 10368 0390 00000000 		.word	N_IMU_Connected
 10369 0394 540D0000 		.word	.LC116
 10370 0398 700D0000 		.word	.LC117
 10371 039c 7C010000 		.word	.LC106
 10372 03a0 EC0C0000 		.word	.LC118
 10373 03a4 00000000 		.word	IMU_connected
 10374              	.L467:
1587:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10375              		.loc 1 1587 0 discriminator 3
 10376 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 10377 03ac DA1D     		adds	r2, r3, #7
 10378 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 10379 03b2 3221     		movs	r1, #50
 10380 03b4 01FB03F3 		mul	r3, r1, r3
 10381 03b8 1A44     		add	r2, r2, r3
 10382 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10383 03be 1A44     		add	r2, r2, r3
 10384 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 10385 03c4 D31A     		subs	r3, r2, r3
 10386 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 10387 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 10388 03ce 8A1A     		subs	r2, r1, r2
 10389 03d0 07F1EC01 		add	r1, r7, #236
 10390 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10391 03d6 07F58A72 		add	r2, r7, #276
 10392 03da D154     		strb	r1, [r2, r3]
1586:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10393              		.loc 1 1586 0 discriminator 3
 10394 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 10395 03e0 013B     		subs	r3, r3, #1
 10396 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10397              	.L466:
1586:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10398              		.loc 1 1586 0 is_stmt 0 discriminator 1
 10399 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 10400 03ea 002B     		cmp	r3, #0
 10401 03ec DCD1     		bne	.L467
1567:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 241


 10402              		.loc 1 1567 0 is_stmt 1 discriminator 2
 10403 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 10404 03f2 0133     		adds	r3, r3, #1
 10405 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10406              	.L461:
1567:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10407              		.loc 1 1567 0 is_stmt 0 discriminator 1
 10408 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 10409 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 10410 0400 9A42     		cmp	r2, r3
 10411 0402 FFF446AF 		bcc	.L468
1588:..\src/command_processing.c ****             }
1589:..\src/command_processing.c ****             
1590:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1591:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 10412              		.loc 1 1591 0 is_stmt 1
 10413 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10414 040a 1A46     		mov	r2, r3	@ movhi
 10415 040c 9200     		lsls	r2, r2, #2
 10416 040e 1344     		add	r3, r3, r2
 10417 0410 1A46     		mov	r2, r3	@ movhi
 10418 0412 9100     		lsls	r1, r2, #2
 10419 0414 1A46     		mov	r2, r3	@ movhi
 10420 0416 0B46     		mov	r3, r1	@ movhi
 10421 0418 1344     		add	r3, r3, r2
 10422 041a 5B00     		lsls	r3, r3, #1
 10423 041c 9AB2     		uxth	r2, r3
 10424 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10425 0422 1344     		add	r3, r3, r2
 10426 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1592:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 10427              		.loc 1 1592 0
 10428 0428 0023     		movs	r3, #0
 10429 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10430 042e 1FE1     		b	.L469
 10431              	.L476:
1593:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10432              		.loc 1 1593 0
 10433 0430 B7F89436 		ldrh	r3, [r7, #1684]
 10434 0434 9A1C     		adds	r2, r3, #2
 10435 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 10436 043a 3221     		movs	r1, #50
 10437 043c 01FB03F3 		mul	r3, r1, r3
 10438 0440 1344     		add	r3, r3, r2
 10439 0442 07F58A72 		add	r2, r7, #276
 10440 0446 0221     		movs	r1, #2
 10441 0448 D154     		strb	r1, [r2, r3]
1594:..\src/command_processing.c ****                 
1595:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10442              		.loc 1 1595 0
 10443 044a B7F89436 		ldrh	r3, [r7, #1684]
 10444 044e DA1C     		adds	r2, r3, #3
 10445 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 10446 0454 3221     		movs	r1, #50
 10447 0456 01FB03F3 		mul	r3, r1, r3
 10448 045a 1344     		add	r3, r3, r2
 10449 045c 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 242


 10450 0460 0321     		movs	r1, #3
 10451 0462 D154     		strb	r1, [r2, r3]
1596:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10452              		.loc 1 1596 0
 10453 0464 B7F89436 		ldrh	r3, [r7, #1684]
 10454 0468 1A1D     		adds	r2, r3, #4
 10455 046a B7F8A036 		ldrh	r3, [r7, #1696]
 10456 046e 3221     		movs	r1, #50
 10457 0470 01FB03F3 		mul	r3, r1, r3
 10458 0474 1A44     		add	r2, r2, r3
 10459 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 10460 047a 5B00     		lsls	r3, r3, #1
 10461 047c B249     		ldr	r1, .L503
 10462 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10463 0480 1846     		mov	r0, r3
 10464 0482 B249     		ldr	r1, .L503+4
 10465 0484 0346     		mov	r3, r0
 10466 0486 5B00     		lsls	r3, r3, #1
 10467 0488 0344     		add	r3, r3, r0
 10468 048a 0B44     		add	r3, r3, r1
 10469 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10470 048e 07F58A73 		add	r3, r7, #276
 10471 0492 9954     		strb	r1, [r3, r2]
1597:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10472              		.loc 1 1597 0
 10473 0494 B7F89436 		ldrh	r3, [r7, #1684]
 10474 0498 5A1D     		adds	r2, r3, #5
 10475 049a B7F8A036 		ldrh	r3, [r7, #1696]
 10476 049e 3221     		movs	r1, #50
 10477 04a0 01FB03F3 		mul	r3, r1, r3
 10478 04a4 1A44     		add	r2, r2, r3
 10479 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 10480 04aa 5B00     		lsls	r3, r3, #1
 10481 04ac A649     		ldr	r1, .L503
 10482 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10483 04b0 1846     		mov	r0, r3
 10484 04b2 A649     		ldr	r1, .L503+4
 10485 04b4 0346     		mov	r3, r0
 10486 04b6 5B00     		lsls	r3, r3, #1
 10487 04b8 0344     		add	r3, r3, r0
 10488 04ba 0B44     		add	r3, r3, r1
 10489 04bc 0133     		adds	r3, r3, #1
 10490 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10491 04c0 07F58A73 		add	r3, r7, #276
 10492 04c4 9954     		strb	r1, [r3, r2]
1598:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10493              		.loc 1 1598 0
 10494 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 10495 04ca 9A1D     		adds	r2, r3, #6
 10496 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 10497 04d0 3221     		movs	r1, #50
 10498 04d2 01FB03F3 		mul	r3, r1, r3
 10499 04d6 1A44     		add	r2, r2, r3
 10500 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10501 04dc 5B00     		lsls	r3, r3, #1
 10502 04de 9A49     		ldr	r1, .L503
 10503 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 243


 10504 04e2 1846     		mov	r0, r3
 10505 04e4 9949     		ldr	r1, .L503+4
 10506 04e6 0346     		mov	r3, r0
 10507 04e8 5B00     		lsls	r3, r3, #1
 10508 04ea 0344     		add	r3, r3, r0
 10509 04ec 0B44     		add	r3, r3, r1
 10510 04ee 0233     		adds	r3, r3, #2
 10511 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10512 04f2 07F58A73 		add	r3, r7, #276
 10513 04f6 9954     		strb	r1, [r3, r2]
1599:..\src/command_processing.c ****                 
1600:..\src/command_processing.c ****                 // check if there is a second value
1601:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 10514              		.loc 1 1601 0
 10515 04f8 954B     		ldr	r3, .L503+8
 10516 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10517 04fc 1A46     		mov	r2, r3
 10518 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 10519 0502 0133     		adds	r3, r3, #1
 10520 0504 5B00     		lsls	r3, r3, #1
 10521 0506 9A42     		cmp	r2, r3
 10522 0508 28DA     		bge	.L470
1602:..\src/command_processing.c ****                     // there is only one value
1603:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10523              		.loc 1 1603 0
 10524 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10525 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10526 0512 1EE0     		b	.L471
 10527              	.L472:
1604:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10528              		.loc 1 1604 0 discriminator 3
 10529 0514 B7F89436 		ldrh	r3, [r7, #1684]
 10530 0518 DA1D     		adds	r2, r3, #7
 10531 051a B7F8A036 		ldrh	r3, [r7, #1696]
 10532 051e 3221     		movs	r1, #50
 10533 0520 01FB03F3 		mul	r3, r1, r3
 10534 0524 1A44     		add	r2, r2, r3
 10535 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10536 052a 1A44     		add	r2, r2, r3
 10537 052c B7F8A236 		ldrh	r3, [r7, #1698]
 10538 0530 D31A     		subs	r3, r2, r3
 10539 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10540 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 10541 053a 8A1A     		subs	r2, r1, r2
 10542 053c 07F1D801 		add	r1, r7, #216
 10543 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10544 0542 07F58A72 		add	r2, r7, #276
 10545 0546 D154     		strb	r1, [r2, r3]
1603:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10546              		.loc 1 1603 0 discriminator 3
 10547 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 10548 054c 013B     		subs	r3, r3, #1
 10549 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10550              	.L471:
1603:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10551              		.loc 1 1603 0 is_stmt 0 discriminator 1
 10552 0552 B7F8A236 		ldrh	r3, [r7, #1698]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 244


 10553 0556 002B     		cmp	r3, #0
 10554 0558 DCD1     		bne	.L472
 10555 055a 84E0     		b	.L473
 10556              	.L470:
1605:..\src/command_processing.c ****                 }
1606:..\src/command_processing.c ****                 else {
1607:..\src/command_processing.c ****                     // fill the second value
1608:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 10557              		.loc 1 1608 0 is_stmt 1
 10558 055c B7F89436 		ldrh	r3, [r7, #1684]
 10559 0560 DA1C     		adds	r2, r3, #3
 10560 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 10561 0566 3221     		movs	r1, #50
 10562 0568 01FB03F3 		mul	r3, r1, r3
 10563 056c 1344     		add	r3, r3, r2
 10564 056e 07F58A72 		add	r2, r7, #276
 10565 0572 0621     		movs	r1, #6
 10566 0574 D154     		strb	r1, [r2, r3]
1609:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10567              		.loc 1 1609 0
 10568 0576 B7F89436 		ldrh	r3, [r7, #1684]
 10569 057a DA1D     		adds	r2, r3, #7
 10570 057c B7F8A036 		ldrh	r3, [r7, #1696]
 10571 0580 3221     		movs	r1, #50
 10572 0582 01FB03F3 		mul	r3, r1, r3
 10573 0586 1A44     		add	r2, r2, r3
 10574 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 10575 058c 5B00     		lsls	r3, r3, #1
 10576 058e 0133     		adds	r3, r3, #1
 10577 0590 6D49     		ldr	r1, .L503
 10578 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10579 0594 1846     		mov	r0, r3
 10580 0596 6D49     		ldr	r1, .L503+4
 10581 0598 0346     		mov	r3, r0
 10582 059a 5B00     		lsls	r3, r3, #1
 10583 059c 0344     		add	r3, r3, r0
 10584 059e 0B44     		add	r3, r3, r1
 10585 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10586 05a2 07F58A73 		add	r3, r7, #276
 10587 05a6 9954     		strb	r1, [r3, r2]
1610:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10588              		.loc 1 1610 0
 10589 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 10590 05ac 03F10802 		add	r2, r3, #8
 10591 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 10592 05b4 3221     		movs	r1, #50
 10593 05b6 01FB03F3 		mul	r3, r1, r3
 10594 05ba 1A44     		add	r2, r2, r3
 10595 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 10596 05c0 5B00     		lsls	r3, r3, #1
 10597 05c2 0133     		adds	r3, r3, #1
 10598 05c4 6049     		ldr	r1, .L503
 10599 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10600 05c8 1846     		mov	r0, r3
 10601 05ca 6049     		ldr	r1, .L503+4
 10602 05cc 0346     		mov	r3, r0
 10603 05ce 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 245


 10604 05d0 0344     		add	r3, r3, r0
 10605 05d2 0B44     		add	r3, r3, r1
 10606 05d4 0133     		adds	r3, r3, #1
 10607 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10608 05d8 07F58A73 		add	r3, r7, #276
 10609 05dc 9954     		strb	r1, [r3, r2]
1611:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10610              		.loc 1 1611 0
 10611 05de B7F89436 		ldrh	r3, [r7, #1684]
 10612 05e2 03F10902 		add	r2, r3, #9
 10613 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 10614 05ea 3221     		movs	r1, #50
 10615 05ec 01FB03F3 		mul	r3, r1, r3
 10616 05f0 1A44     		add	r2, r2, r3
 10617 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 10618 05f6 5B00     		lsls	r3, r3, #1
 10619 05f8 0133     		adds	r3, r3, #1
 10620 05fa 5349     		ldr	r1, .L503
 10621 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10622 05fe 1846     		mov	r0, r3
 10623 0600 5249     		ldr	r1, .L503+4
 10624 0602 0346     		mov	r3, r0
 10625 0604 5B00     		lsls	r3, r3, #1
 10626 0606 0344     		add	r3, r3, r0
 10627 0608 0B44     		add	r3, r3, r1
 10628 060a 0233     		adds	r3, r3, #2
 10629 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10630 060e 07F58A73 		add	r3, r7, #276
 10631 0612 9954     		strb	r1, [r3, r2]
1612:..\src/command_processing.c ****                 
1613:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10632              		.loc 1 1613 0
 10633 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10634 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10635 061c 1FE0     		b	.L474
 10636              	.L475:
1614:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10637              		.loc 1 1614 0 discriminator 3
 10638 061e B7F89436 		ldrh	r3, [r7, #1684]
 10639 0622 03F10A02 		add	r2, r3, #10
 10640 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 10641 062a 3221     		movs	r1, #50
 10642 062c 01FB03F3 		mul	r3, r1, r3
 10643 0630 1A44     		add	r2, r2, r3
 10644 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10645 0636 1A44     		add	r2, r2, r3
 10646 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 10647 063c D31A     		subs	r3, r2, r3
 10648 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10649 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 10650 0646 8A1A     		subs	r2, r1, r2
 10651 0648 07F1D801 		add	r1, r7, #216
 10652 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10653 064e 07F58A72 		add	r2, r7, #276
 10654 0652 D154     		strb	r1, [r2, r3]
1613:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10655              		.loc 1 1613 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 246


 10656 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 10657 0658 013B     		subs	r3, r3, #1
 10658 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10659              	.L474:
1613:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10660              		.loc 1 1613 0 is_stmt 0 discriminator 1
 10661 065e B7F8A236 		ldrh	r3, [r7, #1698]
 10662 0662 002B     		cmp	r3, #0
 10663 0664 DBD1     		bne	.L475
 10664              	.L473:
1592:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10665              		.loc 1 1592 0 is_stmt 1 discriminator 2
 10666 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 10667 066a 0133     		adds	r3, r3, #1
 10668 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10669              	.L469:
1592:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10670              		.loc 1 1592 0 is_stmt 0 discriminator 1
 10671 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 10672 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 10673 0678 9A42     		cmp	r2, r3
 10674 067a FFF4D9AE 		bcc	.L476
1615:..\src/command_processing.c ****                 }
1616:..\src/command_processing.c ****             }
1617:..\src/command_processing.c ****             
1618:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1619:..\src/command_processing.c ****             
1620:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 10675              		.loc 1 1620 0 is_stmt 1
 10676 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10677 0682 1A46     		mov	r2, r3	@ movhi
 10678 0684 9200     		lsls	r2, r2, #2
 10679 0686 1344     		add	r3, r3, r2
 10680 0688 1A46     		mov	r2, r3	@ movhi
 10681 068a 9100     		lsls	r1, r2, #2
 10682 068c 1A46     		mov	r2, r3	@ movhi
 10683 068e 0B46     		mov	r3, r1	@ movhi
 10684 0690 1344     		add	r3, r3, r2
 10685 0692 5B00     		lsls	r3, r3, #1
 10686 0694 9AB2     		uxth	r2, r3
 10687 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10688 069a 1344     		add	r3, r3, r2
 10689 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1621:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 10690              		.loc 1 1621 0
 10691 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 10692 06a4 5A1E     		subs	r2, r3, #1
 10693 06a6 07F1C803 		add	r3, r7, #200
 10694 06aa 2A49     		ldr	r1, .L503+12
 10695 06ac 1846     		mov	r0, r3
 10696 06ae FFF7FEFF 		bl	sprintf
1622:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 10697              		.loc 1 1622 0
 10698 06b2 07F1C803 		add	r3, r7, #200
 10699 06b6 1846     		mov	r0, r3
 10700 06b8 FFF7FEFF 		bl	strlen
 10701 06bc 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 247


 10702 06be 87F89336 		strb	r3, [r7, #1683]
1623:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 10703              		.loc 1 1623 0
 10704 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 10705 06c6 0233     		adds	r3, r3, #2
 10706 06c8 07F58A72 		add	r2, r7, #276
 10707 06cc 0221     		movs	r1, #2
 10708 06ce D154     		strb	r1, [r2, r3]
1624:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 10709              		.loc 1 1624 0
 10710 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 10711 06d4 0333     		adds	r3, r3, #3
 10712 06d6 07F58A72 		add	r2, r7, #276
 10713 06da 0121     		movs	r1, #1
 10714 06dc D154     		strb	r1, [r2, r3]
1625:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 10715              		.loc 1 1625 0
 10716 06de B7F89436 		ldrh	r3, [r7, #1684]
 10717 06e2 0433     		adds	r3, r3, #4
 10718 06e4 1C4A     		ldr	r2, .L503+16
 10719 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 10720 06ea 07F58A72 		add	r2, r7, #276
 10721 06ee D154     		strb	r1, [r2, r3]
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10722              		.loc 1 1626 0
 10723 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10724 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10725 06f8 18E0     		b	.L477
 10726              	.L478:
1627:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 10727              		.loc 1 1627 0 discriminator 3
 10728 06fa B7F89436 		ldrh	r3, [r7, #1684]
 10729 06fe 5A1D     		adds	r2, r3, #5
 10730 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10731 0704 1A44     		add	r2, r2, r3
 10732 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 10733 070a D31A     		subs	r3, r2, r3
 10734 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 10735 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 10736 0714 8A1A     		subs	r2, r1, r2
 10737 0716 07F1C801 		add	r1, r7, #200
 10738 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10739 071c 07F58A72 		add	r2, r7, #276
 10740 0720 D154     		strb	r1, [r2, r3]
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10741              		.loc 1 1626 0 discriminator 3
 10742 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 10743 0726 013B     		subs	r3, r3, #1
 10744 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10745              	.L477:
1626:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10746              		.loc 1 1626 0 is_stmt 0 discriminator 1
 10747 072c B7F8A436 		ldrh	r3, [r7, #1700]
 10748 0730 002B     		cmp	r3, #0
 10749 0732 E2D1     		bne	.L478
1628:..\src/command_processing.c ****                 
1629:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 248


1630:..\src/command_processing.c ****             
1631:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10750              		.loc 1 1631 0 is_stmt 1
 10751 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10752 0738 3233     		adds	r3, r3, #50
 10753 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1632:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 10754              		.loc 1 1632 0
 10755 073e 0023     		movs	r3, #0
 10756 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10757 0744 38E1     		b	.L479
 10758              	.L504:
 10759 0746 00BF     		.align	2
 10760              	.L503:
 10761 0748 00000000 		.word	IMU_connected
 10762 074c 00000000 		.word	MagCal
 10763 0750 00000000 		.word	N_IMU_Connected
 10764 0754 F80C0000 		.word	.LC119
 10765 0758 00000000 		.word	c_mem
 10766              	.L482:
1633:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 10767              		.loc 1 1633 0
 10768 075c B7F89826 		ldrh	r2, [r7, #1688]
 10769 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 10770 0764 D118     		adds	r1, r2, r3
 10771 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 10772 076a D54A     		ldr	r2, .L505
 10773 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10774 076e 07F19C00 		add	r0, r7, #156
 10775 0772 0A46     		mov	r2, r1
 10776 0774 D349     		ldr	r1, .L505+4
 10777 0776 FFF7FEFF 		bl	sprintf
1634:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 10778              		.loc 1 1634 0
 10779 077a 07F19C03 		add	r3, r7, #156
 10780 077e 1846     		mov	r0, r3
 10781 0780 FFF7FEFF 		bl	strlen
 10782 0784 0346     		mov	r3, r0
 10783 0786 87F88F36 		strb	r3, [r7, #1679]
1635:..\src/command_processing.c ****             
1636:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 10784              		.loc 1 1636 0
 10785 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10786 078e 1A46     		mov	r2, r3	@ movhi
 10787 0790 9200     		lsls	r2, r2, #2
 10788 0792 1344     		add	r3, r3, r2
 10789 0794 1A46     		mov	r2, r3	@ movhi
 10790 0796 9100     		lsls	r1, r2, #2
 10791 0798 1A46     		mov	r2, r3	@ movhi
 10792 079a 0B46     		mov	r3, r1	@ movhi
 10793 079c 1344     		add	r3, r3, r2
 10794 079e 5B00     		lsls	r3, r3, #1
 10795 07a0 9AB2     		uxth	r2, r3
 10796 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10797 07a6 1344     		add	r3, r3, r2
 10798 07a8 9BB2     		uxth	r3, r3
 10799 07aa 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 249


 10800 07ac 9BB2     		uxth	r3, r3
 10801 07ae 1A46     		mov	r2, r3
 10802 07b0 07F58A73 		add	r3, r7, #276
 10803 07b4 0221     		movs	r1, #2
 10804 07b6 9954     		strb	r1, [r3, r2]
1637:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 10805              		.loc 1 1637 0
 10806 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10807 07bc 1A46     		mov	r2, r3	@ movhi
 10808 07be 9200     		lsls	r2, r2, #2
 10809 07c0 1344     		add	r3, r3, r2
 10810 07c2 1A46     		mov	r2, r3	@ movhi
 10811 07c4 9100     		lsls	r1, r2, #2
 10812 07c6 1A46     		mov	r2, r3	@ movhi
 10813 07c8 0B46     		mov	r3, r1	@ movhi
 10814 07ca 1344     		add	r3, r3, r2
 10815 07cc 5B00     		lsls	r3, r3, #1
 10816 07ce 9AB2     		uxth	r2, r3
 10817 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10818 07d4 1344     		add	r3, r3, r2
 10819 07d6 9BB2     		uxth	r3, r3
 10820 07d8 0333     		adds	r3, r3, #3
 10821 07da 9BB2     		uxth	r3, r3
 10822 07dc 1A46     		mov	r2, r3
 10823 07de 07F58A73 		add	r3, r7, #276
 10824 07e2 0521     		movs	r1, #5
 10825 07e4 9954     		strb	r1, [r3, r2]
1638:..\src/command_processing.c ****                 
1639:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10826              		.loc 1 1639 0
 10827 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10828 07ea 1A46     		mov	r2, r3	@ movhi
 10829 07ec 9200     		lsls	r2, r2, #2
 10830 07ee 1344     		add	r3, r3, r2
 10831 07f0 1A46     		mov	r2, r3	@ movhi
 10832 07f2 9100     		lsls	r1, r2, #2
 10833 07f4 1A46     		mov	r2, r3	@ movhi
 10834 07f6 0B46     		mov	r3, r1	@ movhi
 10835 07f8 1344     		add	r3, r3, r2
 10836 07fa 5B00     		lsls	r3, r3, #1
 10837 07fc 9AB2     		uxth	r2, r3
 10838 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10839 0802 1344     		add	r3, r3, r2
 10840 0804 9BB2     		uxth	r3, r3
 10841 0806 0433     		adds	r3, r3, #4
 10842 0808 9BB2     		uxth	r3, r3
 10843 080a 1846     		mov	r0, r3
 10844 080c B7F8A436 		ldrh	r3, [r7, #1700]
 10845 0810 AB4A     		ldr	r2, .L505
 10846 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10847 0814 1946     		mov	r1, r3
 10848 0816 AC4A     		ldr	r2, .L505+8
 10849 0818 0B46     		mov	r3, r1
 10850 081a 9B00     		lsls	r3, r3, #2
 10851 081c 0B44     		add	r3, r3, r1
 10852 081e 1344     		add	r3, r3, r2
 10853 0820 03F20223 		addw	r3, r3, #514
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 250


 10854 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10855 0826 07F58A73 		add	r3, r7, #276
 10856 082a 1A54     		strb	r2, [r3, r0]
1640:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10857              		.loc 1 1640 0
 10858 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10859 0830 1A46     		mov	r2, r3	@ movhi
 10860 0832 9200     		lsls	r2, r2, #2
 10861 0834 1344     		add	r3, r3, r2
 10862 0836 1A46     		mov	r2, r3	@ movhi
 10863 0838 9100     		lsls	r1, r2, #2
 10864 083a 1A46     		mov	r2, r3	@ movhi
 10865 083c 0B46     		mov	r3, r1	@ movhi
 10866 083e 1344     		add	r3, r3, r2
 10867 0840 5B00     		lsls	r3, r3, #1
 10868 0842 9AB2     		uxth	r2, r3
 10869 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10870 0848 1344     		add	r3, r3, r2
 10871 084a 9BB2     		uxth	r3, r3
 10872 084c 0533     		adds	r3, r3, #5
 10873 084e 9BB2     		uxth	r3, r3
 10874 0850 1846     		mov	r0, r3
 10875 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 10876 0856 9A4A     		ldr	r2, .L505
 10877 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10878 085a 1946     		mov	r1, r3
 10879 085c 9A4A     		ldr	r2, .L505+8
 10880 085e 0B46     		mov	r3, r1
 10881 0860 9B00     		lsls	r3, r3, #2
 10882 0862 0B44     		add	r3, r3, r1
 10883 0864 1344     		add	r3, r3, r2
 10884 0866 03F20323 		addw	r3, r3, #515
 10885 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10886 086c 07F58A73 		add	r3, r7, #276
 10887 0870 1A54     		strb	r2, [r3, r0]
1641:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10888              		.loc 1 1641 0
 10889 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10890 0876 1A46     		mov	r2, r3	@ movhi
 10891 0878 9200     		lsls	r2, r2, #2
 10892 087a 1344     		add	r3, r3, r2
 10893 087c 1A46     		mov	r2, r3	@ movhi
 10894 087e 9100     		lsls	r1, r2, #2
 10895 0880 1A46     		mov	r2, r3	@ movhi
 10896 0882 0B46     		mov	r3, r1	@ movhi
 10897 0884 1344     		add	r3, r3, r2
 10898 0886 5B00     		lsls	r3, r3, #1
 10899 0888 9AB2     		uxth	r2, r3
 10900 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10901 088e 1344     		add	r3, r3, r2
 10902 0890 9BB2     		uxth	r3, r3
 10903 0892 0633     		adds	r3, r3, #6
 10904 0894 9BB2     		uxth	r3, r3
 10905 0896 1846     		mov	r0, r3
 10906 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 10907 089c 884A     		ldr	r2, .L505
 10908 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 251


 10909 08a0 1946     		mov	r1, r3
 10910 08a2 894A     		ldr	r2, .L505+8
 10911 08a4 0B46     		mov	r3, r1
 10912 08a6 9B00     		lsls	r3, r3, #2
 10913 08a8 0B44     		add	r3, r3, r1
 10914 08aa 1344     		add	r3, r3, r2
 10915 08ac 03F50173 		add	r3, r3, #516
 10916 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10917 08b2 07F58A73 		add	r3, r7, #276
 10918 08b6 1A54     		strb	r2, [r3, r0]
1642:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10919              		.loc 1 1642 0
 10920 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10921 08bc 1A46     		mov	r2, r3	@ movhi
 10922 08be 9200     		lsls	r2, r2, #2
 10923 08c0 1344     		add	r3, r3, r2
 10924 08c2 1A46     		mov	r2, r3	@ movhi
 10925 08c4 9100     		lsls	r1, r2, #2
 10926 08c6 1A46     		mov	r2, r3	@ movhi
 10927 08c8 0B46     		mov	r3, r1	@ movhi
 10928 08ca 1344     		add	r3, r3, r2
 10929 08cc 5B00     		lsls	r3, r3, #1
 10930 08ce 9AB2     		uxth	r2, r3
 10931 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10932 08d4 1344     		add	r3, r3, r2
 10933 08d6 9BB2     		uxth	r3, r3
 10934 08d8 0733     		adds	r3, r3, #7
 10935 08da 9BB2     		uxth	r3, r3
 10936 08dc 1846     		mov	r0, r3
 10937 08de B7F8A436 		ldrh	r3, [r7, #1700]
 10938 08e2 774A     		ldr	r2, .L505
 10939 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10940 08e6 1946     		mov	r1, r3
 10941 08e8 774A     		ldr	r2, .L505+8
 10942 08ea 0B46     		mov	r3, r1
 10943 08ec 9B00     		lsls	r3, r3, #2
 10944 08ee 0B44     		add	r3, r3, r1
 10945 08f0 1344     		add	r3, r3, r2
 10946 08f2 03F20523 		addw	r3, r3, #517
 10947 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10948 08f8 07F58A73 		add	r3, r7, #276
 10949 08fc 1A54     		strb	r2, [r3, r0]
1643:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10950              		.loc 1 1643 0
 10951 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10952 0902 1A46     		mov	r2, r3	@ movhi
 10953 0904 9200     		lsls	r2, r2, #2
 10954 0906 1344     		add	r3, r3, r2
 10955 0908 1A46     		mov	r2, r3	@ movhi
 10956 090a 9100     		lsls	r1, r2, #2
 10957 090c 1A46     		mov	r2, r3	@ movhi
 10958 090e 0B46     		mov	r3, r1	@ movhi
 10959 0910 1344     		add	r3, r3, r2
 10960 0912 5B00     		lsls	r3, r3, #1
 10961 0914 9AB2     		uxth	r2, r3
 10962 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10963 091a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 252


 10964 091c 9BB2     		uxth	r3, r3
 10965 091e 0833     		adds	r3, r3, #8
 10966 0920 9BB2     		uxth	r3, r3
 10967 0922 1846     		mov	r0, r3
 10968 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 10969 0928 654A     		ldr	r2, .L505
 10970 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10971 092c 1946     		mov	r1, r3
 10972 092e 664A     		ldr	r2, .L505+8
 10973 0930 0B46     		mov	r3, r1
 10974 0932 9B00     		lsls	r3, r3, #2
 10975 0934 0B44     		add	r3, r3, r1
 10976 0936 1344     		add	r3, r3, r2
 10977 0938 03F20623 		addw	r3, r3, #518
 10978 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10979 093e 07F58A73 		add	r3, r7, #276
 10980 0942 1A54     		strb	r2, [r3, r0]
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 10981              		.loc 1 1645 0
 10982 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 10983 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10984 094c 2BE0     		b	.L480
 10985              	.L481:
1646:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 10986              		.loc 1 1646 0 discriminator 3
 10987 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10988 0952 1A46     		mov	r2, r3	@ movhi
 10989 0954 9200     		lsls	r2, r2, #2
 10990 0956 1344     		add	r3, r3, r2
 10991 0958 1A46     		mov	r2, r3	@ movhi
 10992 095a 9100     		lsls	r1, r2, #2
 10993 095c 1A46     		mov	r2, r3	@ movhi
 10994 095e 0B46     		mov	r3, r1	@ movhi
 10995 0960 1344     		add	r3, r3, r2
 10996 0962 5B00     		lsls	r3, r3, #1
 10997 0964 9AB2     		uxth	r2, r3
 10998 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10999 096a 1344     		add	r3, r3, r2
 11000 096c 9AB2     		uxth	r2, r3
 11001 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11002 0972 9BB2     		uxth	r3, r3
 11003 0974 1344     		add	r3, r3, r2
 11004 0976 9AB2     		uxth	r2, r3
 11005 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 11006 097c D31A     		subs	r3, r2, r3
 11007 097e 9BB2     		uxth	r3, r3
 11008 0980 0933     		adds	r3, r3, #9
 11009 0982 9BB2     		uxth	r3, r3
 11010 0984 1946     		mov	r1, r3
 11011 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 11012 098a B7F8A236 		ldrh	r3, [r7, #1698]
 11013 098e D31A     		subs	r3, r2, r3
 11014 0990 07F19C02 		add	r2, r7, #156
 11015 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11016 0996 07F58A73 		add	r3, r7, #276
 11017 099a 5A54     		strb	r2, [r3, r1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 253


1645:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11018              		.loc 1 1645 0 discriminator 3
 11019 099c B7F8A236 		ldrh	r3, [r7, #1698]
 11020 09a0 013B     		subs	r3, r3, #1
 11021 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11022              	.L480:
1645:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11023              		.loc 1 1645 0 is_stmt 0 discriminator 1
 11024 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 11025 09aa 002B     		cmp	r3, #0
 11026 09ac CFD1     		bne	.L481
1632:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11027              		.loc 1 1632 0 is_stmt 1 discriminator 2
 11028 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 11029 09b2 0133     		adds	r3, r3, #1
 11030 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11031              	.L479:
1632:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11032              		.loc 1 1632 0 is_stmt 0 discriminator 1
 11033 09b8 444B     		ldr	r3, .L505+12
 11034 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11035 09bc 9BB2     		uxth	r3, r3
 11036 09be B7F8A426 		ldrh	r2, [r7, #1700]
 11037 09c2 9A42     		cmp	r2, r3
 11038 09c4 FFF4CAAE 		bcc	.L482
1647:..\src/command_processing.c ****             }  
1648:..\src/command_processing.c ****           
1649:..\src/command_processing.c **** 
1650:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1651:..\src/command_processing.c ****             
1652:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 11039              		.loc 1 1652 0 is_stmt 1
 11040 09c8 404B     		ldr	r3, .L505+12
 11041 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11042 09cc 9BB2     		uxth	r3, r3
 11043 09ce 1A46     		mov	r2, r3	@ movhi
 11044 09d0 9200     		lsls	r2, r2, #2
 11045 09d2 1344     		add	r3, r3, r2
 11046 09d4 1A46     		mov	r2, r3	@ movhi
 11047 09d6 9100     		lsls	r1, r2, #2
 11048 09d8 1A46     		mov	r2, r3	@ movhi
 11049 09da 0B46     		mov	r3, r1	@ movhi
 11050 09dc 1344     		add	r3, r3, r2
 11051 09de 5B00     		lsls	r3, r3, #1
 11052 09e0 9AB2     		uxth	r2, r3
 11053 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11054 09e6 1344     		add	r3, r3, r2
 11055 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1653:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 11056              		.loc 1 1653 0
 11057 09ec B7F89836 		ldrh	r3, [r7, #1688]
 11058 09f0 364A     		ldr	r2, .L505+12
 11059 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11060 09f4 1A44     		add	r2, r2, r3
 11061 09f6 07F18003 		add	r3, r7, #128
 11062 09fa 3549     		ldr	r1, .L505+16
 11063 09fc 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 254


 11064 09fe FFF7FEFF 		bl	sprintf
1654:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 11065              		.loc 1 1654 0
 11066 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 11067 0a06 0233     		adds	r3, r3, #2
 11068 0a08 07F58A72 		add	r2, r7, #276
 11069 0a0c 0021     		movs	r1, #0
 11070 0a0e D154     		strb	r1, [r2, r3]
1655:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11071              		.loc 1 1655 0
 11072 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 11073 0a14 0333     		adds	r3, r3, #3
 11074 0a16 07F58A72 		add	r2, r7, #276
 11075 0a1a 0121     		movs	r1, #1
 11076 0a1c D154     		strb	r1, [r2, r3]
1656:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 11077              		.loc 1 1656 0
 11078 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 11079 0a22 0433     		adds	r3, r3, #4
 11080 0a24 284A     		ldr	r2, .L505+8
 11081 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 11082 0a2a 07F58A72 		add	r2, r7, #276
 11083 0a2e D154     		strb	r1, [r2, r3]
1657:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 11084              		.loc 1 1657 0
 11085 0a30 254B     		ldr	r3, .L505+8
 11086 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 11087 0a36 012B     		cmp	r3, #1
 11088 0a38 17D0     		beq	.L484
 11089 0a3a 022B     		cmp	r3, #2
 11090 0a3c 28D0     		beq	.L485
 11091 0a3e 002B     		cmp	r3, #0
 11092 0a40 00D0     		beq	.L486
1658:..\src/command_processing.c ****                 case 0: 
1659:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1660:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1661:..\src/command_processing.c ****                     break;
1662:..\src/command_processing.c ****                 case 1: 
1663:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1664:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1665:..\src/command_processing.c ****                     break;
1666:..\src/command_processing.c ****                 case 2: 
1667:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1668:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1669:..\src/command_processing.c ****                     break;
1670:..\src/command_processing.c ****                 default:
1671:..\src/command_processing.c ****                     break;
 11093              		.loc 1 1671 0
 11094 0a42 38E0     		b	.L487
 11095              	.L486:
1659:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11096              		.loc 1 1659 0
 11097 0a44 07F18003 		add	r3, r7, #128
 11098 0a48 1846     		mov	r0, r3
 11099 0a4a FFF7FEFF 		bl	strlen
 11100 0a4e 0346     		mov	r3, r0
 11101 0a50 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 255


 11102 0a52 07F18003 		add	r3, r7, #128
 11103 0a56 1344     		add	r3, r3, r2
 11104 0a58 1E4A     		ldr	r2, .L505+20
 11105 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 11106 0a5c 1860     		str	r0, [r3]	@ unaligned
 11107 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11108 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1660:..\src/command_processing.c ****                     break;
 11109              		.loc 1 1660 0
 11110 0a62 1A23     		movs	r3, #26
 11111 0a64 87F89D36 		strb	r3, [r7, #1693]
1661:..\src/command_processing.c ****                 case 1: 
 11112              		.loc 1 1661 0
 11113 0a68 25E0     		b	.L487
 11114              	.L484:
1663:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 11115              		.loc 1 1663 0
 11116 0a6a 07F18003 		add	r3, r7, #128
 11117 0a6e 1846     		mov	r0, r3
 11118 0a70 FFF7FEFF 		bl	strlen
 11119 0a74 0346     		mov	r3, r0
 11120 0a76 1A46     		mov	r2, r3
 11121 0a78 07F18003 		add	r3, r7, #128
 11122 0a7c 1344     		add	r3, r3, r2
 11123 0a7e 164A     		ldr	r2, .L505+24
 11124 0a80 1068     		ldr	r0, [r2]	@ unaligned
 11125 0a82 1860     		str	r0, [r3]	@ unaligned
 11126 0a84 1279     		ldrb	r2, [r2, #4]
 11127 0a86 1A71     		strb	r2, [r3, #4]
1664:..\src/command_processing.c ****                     break;
 11128              		.loc 1 1664 0
 11129 0a88 1923     		movs	r3, #25
 11130 0a8a 87F89D36 		strb	r3, [r7, #1693]
1665:..\src/command_processing.c ****                 case 2: 
 11131              		.loc 1 1665 0
 11132 0a8e 12E0     		b	.L487
 11133              	.L485:
1667:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11134              		.loc 1 1667 0
 11135 0a90 07F18003 		add	r3, r7, #128
 11136 0a94 1846     		mov	r0, r3
 11137 0a96 FFF7FEFF 		bl	strlen
 11138 0a9a 0346     		mov	r3, r0
 11139 0a9c 1A46     		mov	r2, r3
 11140 0a9e 07F18003 		add	r3, r7, #128
 11141 0aa2 1344     		add	r3, r3, r2
 11142 0aa4 0D4A     		ldr	r2, .L505+28
 11143 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 11144 0aa8 1860     		str	r0, [r3]	@ unaligned
 11145 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11146 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1668:..\src/command_processing.c ****                     break;
 11147              		.loc 1 1668 0
 11148 0aae 1A23     		movs	r3, #26
 11149 0ab0 87F89D36 		strb	r3, [r7, #1693]
1669:..\src/command_processing.c ****                 default:
 11150              		.loc 1 1669 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 256


 11151 0ab4 00BF     		nop
 11152              	.L487:
1672:..\src/command_processing.c ****             }            
1673:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 11153              		.loc 1 1673 0
 11154 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11155 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11156 0abe 28E0     		b	.L488
 11157              	.L506:
 11158              		.align	2
 11159              	.L505:
 11160 0ac0 00000000 		.word	IMU_connected
 11161 0ac4 080D0000 		.word	.LC120
 11162 0ac8 00000000 		.word	c_mem
 11163 0acc 00000000 		.word	N_IMU_Connected
 11164 0ad0 240D0000 		.word	.LC121
 11165 0ad4 3C0D0000 		.word	.LC122
 11166 0ad8 440D0000 		.word	.LC123
 11167 0adc 4C0D0000 		.word	.LC124
 11168              	.L489:
1674:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11169              		.loc 1 1674 0 discriminator 3
 11170 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 11171 0ae4 5A1D     		adds	r2, r3, #5
 11172 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11173 0aea 1A44     		add	r2, r2, r3
 11174 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 11175 0af0 D31A     		subs	r3, r2, r3
 11176 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 11177 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 11178 0afa 8A1A     		subs	r2, r1, r2
 11179 0afc 07F18001 		add	r1, r7, #128
 11180 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11181 0b02 07F58A72 		add	r2, r7, #276
 11182 0b06 D154     		strb	r1, [r2, r3]
1673:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11183              		.loc 1 1673 0 discriminator 3
 11184 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 11185 0b0c 013B     		subs	r3, r3, #1
 11186 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11187              	.L488:
1673:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11188              		.loc 1 1673 0 is_stmt 0 discriminator 1
 11189 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 11190 0b16 002B     		cmp	r3, #0
 11191 0b18 E2D1     		bne	.L489
1675:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1676:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 11192              		.loc 1 1676 0 is_stmt 1
 11193 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 11194 0b1e 5A1D     		adds	r2, r3, #5
 11195 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11196 0b24 1344     		add	r3, r3, r2
 11197 0b26 07F58A72 		add	r2, r7, #276
 11198 0b2a 0121     		movs	r1, #1
 11199 0b2c D154     		strb	r1, [r2, r3]
1677:..\src/command_processing.c ****                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 257


1678:..\src/command_processing.c ****             
1679:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1680:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11200              		.loc 1 1680 0
 11201 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11202 0b32 3233     		adds	r3, r3, #50
 11203 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11204              		.loc 1 1681 0
 11205 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11206 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11207 0b40 1AE0     		b	.L490
 11208              	.L491:
1682:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 11209              		.loc 1 1682 0 discriminator 3
 11210 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11211 0b46 0233     		adds	r3, r3, #2
 11212 0b48 9BB2     		uxth	r3, r3
 11213 0b4a 1A46     		mov	r2, r3
 11214 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11215 0b50 1A44     		add	r2, r2, r3
 11216 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 11217 0b56 D31A     		subs	r3, r2, r3
 11218 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 11219 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 11220 0b60 8A1A     		subs	r2, r1, r2
 11221 0b62 07F10801 		add	r1, r7, #8
 11222 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11223 0b68 07F58A72 		add	r2, r7, #276
 11224 0b6c D154     		strb	r1, [r2, r3]
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11225              		.loc 1 1681 0 discriminator 3
 11226 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 11227 0b72 013B     		subs	r3, r3, #1
 11228 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11229              	.L490:
1681:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11230              		.loc 1 1681 0 is_stmt 0 discriminator 1
 11231 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 11232 0b7c 002B     		cmp	r3, #0
 11233 0b7e E0D1     		bne	.L491
1683:..\src/command_processing.c **** 
1684:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 11234              		.loc 1 1684 0 is_stmt 1
 11235 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 11236 0b84 5C1E     		subs	r4, r3, #1
 11237 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 11238 0b8a DBB2     		uxtb	r3, r3
 11239 0b8c 013B     		subs	r3, r3, #1
 11240 0b8e DAB2     		uxtb	r2, r3
 11241 0b90 07F58A73 		add	r3, r7, #276
 11242 0b94 1146     		mov	r1, r2
 11243 0b96 1846     		mov	r0, r3
 11244 0b98 FFF7FEFF 		bl	LCRChecksum
 11245 0b9c 0346     		mov	r3, r0
 11246 0b9e 1A46     		mov	r2, r3
 11247 0ba0 07F58A73 		add	r3, r7, #276
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 258


 11248 0ba4 1A55     		strb	r2, [r3, r4]
1685:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 11249              		.loc 1 1685 0
 11250 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 11251 0baa 07F58A73 		add	r3, r7, #276
 11252 0bae 1146     		mov	r1, r2
 11253 0bb0 1846     		mov	r0, r3
 11254 0bb2 FFF7FEFF 		bl	commWrite
1686:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 11255              		.loc 1 1686 0
 11256 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1687:..\src/command_processing.c ****         break;
 11257              		.loc 1 1687 0
 11258 0bba 09E1     		b	.L492
 11259              	.L499:
1688:..\src/command_processing.c **** 
1689:..\src/command_processing.c **** //=========================================================     other_params
1690:..\src/command_processing.c ****         default: 
1691:..\src/command_processing.c ****             
1692:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 11260              		.loc 1 1692 0
 11261 0bbc BB1D     		adds	r3, r7, #6
 11262 0bbe 1A88     		ldrh	r2, [r3]
 11263 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 11264 0bc4 013B     		subs	r3, r3, #1
 11265 0bc6 9A42     		cmp	r2, r3
 11266 0bc8 C0F20181 		blt	.L500
1693:..\src/command_processing.c ****                 break;
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 11267              		.loc 1 1695 0
 11268 0bcc BB1D     		adds	r3, r7, #6
 11269 0bce 1A88     		ldrh	r2, [r3]
 11270 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 11271 0bd4 8149     		ldr	r1, .L507
 11272 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 11273 0bd8 0B44     		add	r3, r3, r1
 11274 0bda 9A42     		cmp	r2, r3
 11275 0bdc 05D1     		bne	.L494
1696:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 11276              		.loc 1 1696 0
 11277 0bde 804B     		ldr	r3, .L507+4
 11278 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11279 0be2 804B     		ldr	r3, .L507+8
 11280 0be4 83F80122 		strb	r2, [r3, #513]
1697:..\src/command_processing.c ****                 break;
 11281              		.loc 1 1697 0
 11282 0be8 F2E0     		b	.L492
 11283              	.L494:
1698:..\src/command_processing.c ****             }
1699:..\src/command_processing.c ****             
1700:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 11284              		.loc 1 1700 0
 11285 0bea BB1D     		adds	r3, r7, #6
 11286 0bec 1A88     		ldrh	r2, [r3]
 11287 0bee B7F89836 		ldrh	r3, [r7, #1688]
 11288 0bf2 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 259


 11289 0bf4 9A42     		cmp	r2, r3
 11290 0bf6 05D1     		bne	.L495
1701:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 11291              		.loc 1 1701 0
 11292 0bf8 794B     		ldr	r3, .L507+4
 11293 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11294 0bfc 794B     		ldr	r3, .L507+8
 11295 0bfe 83F8A020 		strb	r2, [r3, #160]
1702:..\src/command_processing.c ****             }
1703:..\src/command_processing.c ****             else {
1704:..\src/command_processing.c ****             
1705:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1706:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1707:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1708:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1711:..\src/command_processing.c ****                 
1712:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1713:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1714:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1715:..\src/command_processing.c ****                 {
1716:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1717:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1718:..\src/command_processing.c ****                 }
1719:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1720:..\src/command_processing.c ****             
1721:..\src/command_processing.c ****             }
1722:..\src/command_processing.c ****             
1723:..\src/command_processing.c ****         break;
 11296              		.loc 1 1723 0
 11297 0c02 E5E0     		b	.L492
 11298              	.L495:
1706:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 11299              		.loc 1 1706 0
 11300 0c04 BB1D     		adds	r3, r7, #6
 11301 0c06 1A88     		ldrh	r2, [r3]
 11302 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 11303 0c0c D31A     		subs	r3, r2, r3
 11304 0c0e 764A     		ldr	r2, .L507+12
 11305 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11306 0c12 1946     		mov	r1, r3
 11307 0c14 724B     		ldr	r3, .L507+4
 11308 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11309 0c18 724A     		ldr	r2, .L507+8
 11310 0c1a 0B46     		mov	r3, r1
 11311 0c1c 9B00     		lsls	r3, r3, #2
 11312 0c1e 0B44     		add	r3, r3, r1
 11313 0c20 1344     		add	r3, r3, r2
 11314 0c22 03F20223 		addw	r3, r3, #514
 11315 0c26 0246     		mov	r2, r0
 11316 0c28 1A70     		strb	r2, [r3]
1707:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 11317              		.loc 1 1707 0
 11318 0c2a BB1D     		adds	r3, r7, #6
 11319 0c2c 1A88     		ldrh	r2, [r3]
 11320 0c2e B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 260


 11321 0c32 D31A     		subs	r3, r2, r3
 11322 0c34 6C4A     		ldr	r2, .L507+12
 11323 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11324 0c38 1946     		mov	r1, r3
 11325 0c3a 694B     		ldr	r3, .L507+4
 11326 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 11327 0c3e 694A     		ldr	r2, .L507+8
 11328 0c40 0B46     		mov	r3, r1
 11329 0c42 9B00     		lsls	r3, r3, #2
 11330 0c44 0B44     		add	r3, r3, r1
 11331 0c46 1344     		add	r3, r3, r2
 11332 0c48 03F20323 		addw	r3, r3, #515
 11333 0c4c 0246     		mov	r2, r0
 11334 0c4e 1A70     		strb	r2, [r3]
1708:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 11335              		.loc 1 1708 0
 11336 0c50 BB1D     		adds	r3, r7, #6
 11337 0c52 1A88     		ldrh	r2, [r3]
 11338 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 11339 0c58 D31A     		subs	r3, r2, r3
 11340 0c5a 634A     		ldr	r2, .L507+12
 11341 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11342 0c5e 1946     		mov	r1, r3
 11343 0c60 5F4B     		ldr	r3, .L507+4
 11344 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 11345 0c64 5F4A     		ldr	r2, .L507+8
 11346 0c66 0B46     		mov	r3, r1
 11347 0c68 9B00     		lsls	r3, r3, #2
 11348 0c6a 0B44     		add	r3, r3, r1
 11349 0c6c 1344     		add	r3, r3, r2
 11350 0c6e 03F50173 		add	r3, r3, #516
 11351 0c72 0246     		mov	r2, r0
 11352 0c74 1A70     		strb	r2, [r3]
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 11353              		.loc 1 1709 0
 11354 0c76 BB1D     		adds	r3, r7, #6
 11355 0c78 1A88     		ldrh	r2, [r3]
 11356 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 11357 0c7e D31A     		subs	r3, r2, r3
 11358 0c80 594A     		ldr	r2, .L507+12
 11359 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11360 0c84 1946     		mov	r1, r3
 11361 0c86 564B     		ldr	r3, .L507+4
 11362 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 11363 0c8a 564A     		ldr	r2, .L507+8
 11364 0c8c 0B46     		mov	r3, r1
 11365 0c8e 9B00     		lsls	r3, r3, #2
 11366 0c90 0B44     		add	r3, r3, r1
 11367 0c92 1344     		add	r3, r3, r2
 11368 0c94 03F20523 		addw	r3, r3, #517
 11369 0c98 0246     		mov	r2, r0
 11370 0c9a 1A70     		strb	r2, [r3]
1710:..\src/command_processing.c ****                 
 11371              		.loc 1 1710 0
 11372 0c9c BB1D     		adds	r3, r7, #6
 11373 0c9e 1A88     		ldrh	r2, [r3]
 11374 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 261


 11375 0ca4 D31A     		subs	r3, r2, r3
 11376 0ca6 504A     		ldr	r2, .L507+12
 11377 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11378 0caa 1946     		mov	r1, r3
 11379 0cac 4C4B     		ldr	r3, .L507+4
 11380 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 11381 0cb0 4C4A     		ldr	r2, .L507+8
 11382 0cb2 0B46     		mov	r3, r1
 11383 0cb4 9B00     		lsls	r3, r3, #2
 11384 0cb6 0B44     		add	r3, r3, r1
 11385 0cb8 1344     		add	r3, r3, r2
 11386 0cba 03F20623 		addw	r3, r3, #518
 11387 0cbe 0246     		mov	r2, r0
 11388 0cc0 1A70     		strb	r2, [r3]
1713:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 11389              		.loc 1 1713 0
 11390 0cc2 4A4B     		ldr	r3, .L507+16
 11391 0cc4 0122     		movs	r2, #1
 11392 0cc6 1A60     		str	r2, [r3]
1714:..\src/command_processing.c ****                 {
 11393              		.loc 1 1714 0
 11394 0cc8 0023     		movs	r3, #0
 11395 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11396 0cce 71E0     		b	.L497
 11397              	.L498:
1716:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 11398              		.loc 1 1716 0 discriminator 3
 11399 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 11400 0cd4 444A     		ldr	r2, .L507+12
 11401 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11402 0cd8 1C46     		mov	r4, r3
 11403 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 11404 0cde 424A     		ldr	r2, .L507+12
 11405 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11406 0ce2 1946     		mov	r1, r3
 11407 0ce4 3F4A     		ldr	r2, .L507+8
 11408 0ce6 0B46     		mov	r3, r1
 11409 0ce8 9B00     		lsls	r3, r3, #2
 11410 0cea 0B44     		add	r3, r3, r1
 11411 0cec 1344     		add	r3, r3, r2
 11412 0cee 03F20223 		addw	r3, r3, #514
 11413 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11414 0cf4 1A46     		mov	r2, r3
 11415 0cf6 1346     		mov	r3, r2
 11416 0cf8 5B00     		lsls	r3, r3, #1
 11417 0cfa 1344     		add	r3, r3, r2
 11418 0cfc 5B00     		lsls	r3, r3, #1
 11419 0cfe 5A1C     		adds	r2, r3, #1
 11420 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 11421 0d04 3849     		ldr	r1, .L507+12
 11422 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11423 0d08 1846     		mov	r0, r3
 11424 0d0a 3649     		ldr	r1, .L507+8
 11425 0d0c 0346     		mov	r3, r0
 11426 0d0e 9B00     		lsls	r3, r3, #2
 11427 0d10 0344     		add	r3, r3, r0
 11428 0d12 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 262


 11429 0d14 03F20323 		addw	r3, r3, #515
 11430 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11431 0d1a 1946     		mov	r1, r3
 11432 0d1c 0B46     		mov	r3, r1
 11433 0d1e 5B00     		lsls	r3, r3, #1
 11434 0d20 0B44     		add	r3, r3, r1
 11435 0d22 5B00     		lsls	r3, r3, #1
 11436 0d24 1A44     		add	r2, r2, r3
 11437 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 11438 0d2a 2F49     		ldr	r1, .L507+12
 11439 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11440 0d2e 1846     		mov	r0, r3
 11441 0d30 2C49     		ldr	r1, .L507+8
 11442 0d32 0346     		mov	r3, r0
 11443 0d34 9B00     		lsls	r3, r3, #2
 11444 0d36 0344     		add	r3, r3, r0
 11445 0d38 0B44     		add	r3, r3, r1
 11446 0d3a 03F50173 		add	r3, r3, #516
 11447 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11448 0d40 1946     		mov	r1, r3
 11449 0d42 0B46     		mov	r3, r1
 11450 0d44 5B00     		lsls	r3, r3, #1
 11451 0d46 0B44     		add	r3, r3, r1
 11452 0d48 5B00     		lsls	r3, r3, #1
 11453 0d4a 1A44     		add	r2, r2, r3
 11454 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 11455 0d50 2549     		ldr	r1, .L507+12
 11456 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11457 0d54 1846     		mov	r0, r3
 11458 0d56 2349     		ldr	r1, .L507+8
 11459 0d58 0346     		mov	r3, r0
 11460 0d5a 9B00     		lsls	r3, r3, #2
 11461 0d5c 0344     		add	r3, r3, r0
 11462 0d5e 0B44     		add	r3, r3, r1
 11463 0d60 03F20523 		addw	r3, r3, #517
 11464 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11465 0d66 1B01     		lsls	r3, r3, #4
 11466 0d68 1A44     		add	r2, r2, r3
 11467 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 11468 0d6e 1E49     		ldr	r1, .L507+12
 11469 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11470 0d72 1846     		mov	r0, r3
 11471 0d74 1B49     		ldr	r1, .L507+8
 11472 0d76 0346     		mov	r3, r0
 11473 0d78 9B00     		lsls	r3, r3, #2
 11474 0d7a 0344     		add	r3, r3, r0
 11475 0d7c 0B44     		add	r3, r3, r1
 11476 0d7e 03F20623 		addw	r3, r3, #518
 11477 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11478 0d84 5B00     		lsls	r3, r3, #1
 11479 0d86 1344     		add	r3, r3, r2
 11480 0d88 0133     		adds	r3, r3, #1
 11481 0d8a 194A     		ldr	r2, .L507+20
 11482 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1717:..\src/command_processing.c ****                 }
 11483              		.loc 1 1717 0 discriminator 3
 11484 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 263


 11485 0d94 144A     		ldr	r2, .L507+12
 11486 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11487 0d98 1A46     		mov	r2, r3
 11488 0d9a 154B     		ldr	r3, .L507+20
 11489 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 11490 0da0 124B     		ldr	r3, .L507+16
 11491 0da2 1B68     		ldr	r3, [r3]
 11492 0da4 1344     		add	r3, r3, r2
 11493 0da6 114A     		ldr	r2, .L507+16
 11494 0da8 1360     		str	r3, [r2]
1714:..\src/command_processing.c ****                 {
 11495              		.loc 1 1714 0 discriminator 3
 11496 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 11497 0dae 0133     		adds	r3, r3, #1
 11498 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11499              	.L497:
1714:..\src/command_processing.c ****                 {
 11500              		.loc 1 1714 0 is_stmt 0 discriminator 1
 11501 0db4 094B     		ldr	r3, .L507
 11502 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11503 0db8 9BB2     		uxth	r3, r3
 11504 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 11505 0dbe 9A42     		cmp	r2, r3
 11506 0dc0 86D3     		bcc	.L498
1719:..\src/command_processing.c ****             
 11507              		.loc 1 1719 0 is_stmt 1
 11508 0dc2 0A4B     		ldr	r3, .L507+16
 11509 0dc4 1B68     		ldr	r3, [r3]
 11510 0dc6 0133     		adds	r3, r3, #1
 11511 0dc8 084A     		ldr	r2, .L507+16
 11512 0dca 1360     		str	r3, [r2]
 11513              		.loc 1 1723 0
 11514 0dcc 00E0     		b	.L492
 11515              	.L500:
1693:..\src/command_processing.c ****             
 11516              		.loc 1 1693 0
 11517 0dce 00BF     		nop
 11518              	.L492:
1724:..\src/command_processing.c ****     }
1725:..\src/command_processing.c **** }
 11519              		.loc 1 1725 0 discriminator 1
 11520 0dd0 00BF     		nop
 11521 0dd2 07F5D567 		add	r7, r7, #1704
 11522              		.cfi_def_cfa_offset 16
 11523 0dd6 BD46     		mov	sp, r7
 11524              		.cfi_def_cfa_register 13
 11525              		@ sp needed
 11526 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 11527              	.L508:
 11528 0dda 00BF     		.align	2
 11529              	.L507:
 11530 0ddc 00000000 		.word	N_IMU_Connected
 11531 0de0 00000000 		.word	g_rx
 11532 0de4 00000000 		.word	g_mem
 11533 0de8 00000000 		.word	IMU_connected
 11534 0dec 00000000 		.word	imus_data_size
 11535 0df0 00000000 		.word	single_imu_size
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 264


 11536              		.cfi_endproc
 11537              	.LFE70:
 11538              		.size	get_IMU_param_list, .-get_IMU_param_list
 11539              		.section	.text.setZeros,"ax",%progbits
 11540              		.align	2
 11541              		.global	setZeros
 11542              		.thumb
 11543              		.thumb_func
 11544              		.type	setZeros, %function
 11545              	setZeros:
 11546              	.LFB71:
1726:..\src/command_processing.c **** 
1727:..\src/command_processing.c **** //==============================================================================
1728:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1729:..\src/command_processing.c **** //==============================================================================
1730:..\src/command_processing.c **** 
1731:..\src/command_processing.c **** void setZeros()
1732:..\src/command_processing.c **** {
 11547              		.loc 1 1732 0
 11548              		.cfi_startproc
 11549              		@ args = 0, pretend = 0, frame = 8
 11550              		@ frame_needed = 1, uses_anonymous_args = 0
 11551 0000 90B5     		push	{r4, r7, lr}
 11552              		.cfi_def_cfa_offset 12
 11553              		.cfi_offset 4, -12
 11554              		.cfi_offset 7, -8
 11555              		.cfi_offset 14, -4
 11556 0002 83B0     		sub	sp, sp, #12
 11557              		.cfi_def_cfa_offset 24
 11558 0004 00AF     		add	r7, sp, #0
 11559              		.cfi_def_cfa_register 7
1733:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1734:..\src/command_processing.c ****     
1735:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 11560              		.loc 1 1735 0
 11561 0006 0023     		movs	r3, #0
 11562 0008 BB71     		strb	r3, [r7, #6]
 11563 000a 27E0     		b	.L510
 11564              	.L513:
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11565              		.loc 1 1736 0
 11566 000c 0023     		movs	r3, #0
 11567 000e FB71     		strb	r3, [r7, #7]
 11568 0010 1EE0     		b	.L511
 11569              	.L512:
1737:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 11570              		.loc 1 1737 0 discriminator 3
 11571 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11572 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 11573 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11574 0018 1748     		ldr	r0, .L514
 11575 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 11576 001e 1C46     		mov	r4, r3
 11577 0020 1648     		ldr	r0, .L514+4
 11578 0022 1346     		mov	r3, r2
 11579 0024 5B00     		lsls	r3, r3, #1
 11580 0026 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 265


 11581 0028 9B00     		lsls	r3, r3, #2
 11582 002a 0B44     		add	r3, r3, r1
 11583 002c 6633     		adds	r3, r3, #102
 11584 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1738:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 11585              		.loc 1 1738 0 discriminator 3
 11586 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11587 0034 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 11588 0036 1248     		ldr	r0, .L514+8
 11589 0038 1346     		mov	r3, r2
 11590 003a 5B00     		lsls	r3, r3, #1
 11591 003c 1344     		add	r3, r3, r2
 11592 003e 1B01     		lsls	r3, r3, #4
 11593 0040 0344     		add	r3, r3, r0
 11594 0042 0B44     		add	r3, r3, r1
 11595 0044 1433     		adds	r3, r3, #20
 11596 0046 0022     		movs	r2, #0
 11597 0048 1A70     		strb	r2, [r3]
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11598              		.loc 1 1736 0 discriminator 3
 11599 004a FB79     		ldrb	r3, [r7, #7]
 11600 004c 0133     		adds	r3, r3, #1
 11601 004e FB71     		strb	r3, [r7, #7]
 11602              	.L511:
1736:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11603              		.loc 1 1736 0 is_stmt 0 discriminator 1
 11604 0050 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11605 0052 022B     		cmp	r3, #2
 11606 0054 DDD9     		bls	.L512
1735:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11607              		.loc 1 1735 0 is_stmt 1 discriminator 2
 11608 0056 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11609 0058 0133     		adds	r3, r3, #1
 11610 005a BB71     		strb	r3, [r7, #6]
 11611              	.L510:
1735:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11612              		.loc 1 1735 0 is_stmt 0 discriminator 1
 11613 005c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11614 005e 012B     		cmp	r3, #1
 11615 0060 D4D9     		bls	.L513
1739:..\src/command_processing.c ****         }
1740:..\src/command_processing.c ****     }
1741:..\src/command_processing.c ****     reset_last_value_flag = 1;
 11616              		.loc 1 1741 0 is_stmt 1
 11617 0062 084B     		ldr	r3, .L514+12
 11618 0064 0122     		movs	r2, #1
 11619 0066 1A70     		strb	r2, [r3]
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 11620              		.loc 1 1743 0
 11621 0068 0120     		movs	r0, #1
 11622 006a FFF7FEFF 		bl	sendAcknowledgment
1744:..\src/command_processing.c **** }
 11623              		.loc 1 1744 0
 11624 006e 00BF     		nop
 11625 0070 0C37     		adds	r7, r7, #12
 11626              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 266


 11627 0072 BD46     		mov	sp, r7
 11628              		.cfi_def_cfa_register 13
 11629              		@ sp needed
 11630 0074 90BD     		pop	{r4, r7, pc}
 11631              	.L515:
 11632 0076 00BF     		.align	2
 11633              	.L514:
 11634 0078 00000000 		.word	data_encoder_raw
 11635 007c 00000000 		.word	g_mem
 11636 0080 00000000 		.word	g_meas
 11637 0084 00000000 		.word	reset_last_value_flag
 11638              		.cfi_endproc
 11639              	.LFE71:
 11640              		.size	setZeros, .-setZeros
 11641              		.section	.rodata
 11642              		.align	2
 11643              	.LC125:
 11644 0d84 0D0A00   		.ascii	"\015\012\000"
 11645 0d87 00       		.align	2
 11646              	.LC126:
 11647 0d88 4669726D 		.ascii	"Firmware version: \000"
 11647      77617265 
 11647      20766572 
 11647      73696F6E 
 11647      3A2000
 11648 0d9b 00       		.align	2
 11649              	.LC127:
 11650 0d9c 536F6674 		.ascii	"SoftHand PRO firmware v. 1.7 (PSoC5)\000"
 11650      48616E64 
 11650      2050524F 
 11650      20666972 
 11650      6D776172 
 11651 0dc1 000000   		.align	2
 11652              	.LC128:
 11653 0dc4 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 11653      0A00
 11654 0dca 0000     		.align	2
 11655              	.LC129:
 11656 0dcc 44455649 		.ascii	"DEVICE INFO\015\012\000"
 11656      43452049 
 11656      4E464F0D 
 11656      0A00
 11657 0dda 0000     		.align	2
 11658              	.LC130:
 11659 0ddc 49443A20 		.ascii	"ID: %d\015\012\000"
 11659      25640D0A 
 11659      00
 11660 0de5 000000   		.align	2
 11661              	.LC131:
 11662 0de8 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 11662      63653A20 
 11662      534F4654 
 11662      48414E44 
 11662      2050524F 
 11663 0dff 00       		.align	2
 11664              	.LC132:
 11665 0e00 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 267


 11665      63653A20 
 11665      47454E45 
 11665      52494320 
 11665      32204D4F 
 11666 0e1b 00       		.align	2
 11667              	.LC133:
 11668 0e1c 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 11668      20736964 
 11668      653A2052 
 11668      49474854 
 11668      0D0A00
 11669 0e2f 00       		.align	2
 11670              	.LC134:
 11671 0e30 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 11671      20736964 
 11671      653A204C 
 11671      4546540D 
 11671      0A00
 11672 0e42 0000     		.align	2
 11673              	.LC135:
 11674 0e44 55736572 		.ascii	"User: MARIA\015\012\000"
 11674      3A204D41 
 11674      5249410D 
 11674      0A00
 11675 0e52 0000     		.align	2
 11676              	.LC136:
 11677 0e54 55736572 		.ascii	"User: ROZA\015\012\000"
 11677      3A20524F 
 11677      5A410D0A 
 11677      00
 11678 0e61 000000   		.align	2
 11679              	.LC137:
 11680 0e64 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 11680      3A204745 
 11680      4E455249 
 11680      43205553 
 11680      45520D0A 
 11681 0e79 000000   		.align	2
 11682              	.LC138:
 11683 0e7c 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 11683      52202564 
 11683      20494E46 
 11683      4F0D0A00 
 11684              		.align	2
 11685              	.LC139:
 11686 0e8c 4D6F746F 		.ascii	"Motor reference\000"
 11686      72207265 
 11686      66657265 
 11686      6E636500 
 11687              		.align	2
 11688              	.LC140:
 11689 0e9c 202D2043 		.ascii	" - Currents: \000"
 11689      75727265 
 11689      6E74733A 
 11689      2000
 11690 0eaa 0000     		.align	2
 11691              	.LC141:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 268


 11692 0eac 202D2050 		.ascii	" - Pwm: \000"
 11692      776D3A20 
 11692      00
 11693 0eb5 000000   		.align	2
 11694              	.LC142:
 11695 0eb8 202D2050 		.ascii	" - Position: \000"
 11695      6F736974 
 11695      696F6E3A 
 11695      2000
 11696 0ec6 0000     		.align	2
 11697              	.LC143:
 11698 0ec8 25642000 		.ascii	"%d \000"
 11699              		.align	2
 11700              	.LC144:
 11701 0ecc 4D6F746F 		.ascii	"Motor enabled: \000"
 11701      7220656E 
 11701      61626C65 
 11701      643A2000 
 11702              		.align	2
 11703              	.LC145:
 11704 0edc 5945530D 		.ascii	"YES\015\012\000"
 11704      0A00
 11705 0ee2 0000     		.align	2
 11706              	.LC146:
 11707 0ee4 4E4F0D0A 		.ascii	"NO\015\012\000"
 11707      00
 11708 0ee9 000000   		.align	2
 11709              	.LC147:
 11710 0eec 50574D20 		.ascii	"PWM rescaling activation: \000"
 11710      72657363 
 11710      616C696E 
 11710      67206163 
 11710      74697661 
 11711 0f07 00       		.align	2
 11712              	.LC148:
 11713 0f08 5945530A 		.ascii	"YES\012\000"
 11713      00
 11714 0f0d 000000   		.align	2
 11715              	.LC149:
 11716 0f10 4E4F0A00 		.ascii	"NO\012\000"
 11717              		.align	2
 11718              	.LC150:
 11719 0f14 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 11719      4C696D69 
 11719      743A2025 
 11719      640D0A00 
 11720              		.align	2
 11721              	.LC151:
 11722 0f24 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 11722      41535552 
 11722      454D454E 
 11722      54532049 
 11722      4E464F0D 
 11723 0f3a 0000     		.align	2
 11724              	.LC152:
 11725 0f3c 53656E73 		.ascii	"Sensor value: \000"
 11725      6F722076 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 269


 11725      616C7565 
 11725      3A2000
 11726 0f4b 00       		.align	2
 11727              	.LC153:
 11728 0f4c 256400   		.ascii	"%d\000"
 11729 0f4f 00       		.align	2
 11730              	.LC154:
 11731 0f50 2C2000   		.ascii	", \000"
 11732 0f53 00       		.align	2
 11733              	.LC155:
 11734 0f54 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 11734      65727920 
 11734      25642056 
 11734      6F6C7461 
 11734      67652028 
 11735 0f71 000000   		.align	2
 11736              	.LC156:
 11737 0f74 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 11737      20636861 
 11737      72676520 
 11737      706F7765 
 11737      72207465 
 11738 0f9b 00       		.align	2
 11739              	.LC157:
 11740 0f9c 43757272 		.ascii	"Current %d (mA): %ld\000"
 11740      656E7420 
 11740      25642028 
 11740      6D41293A 
 11740      20256C64 
 11741 0fb1 000000   		.align	2
 11742              	.LC158:
 11743 0fb4 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 11743      544F5220 
 11743      25642043 
 11743      4F4E4649 
 11743      47555241 
 11744 0fcf 00       		.align	2
 11745              	.LC159:
 11746 0fd0 50494420 		.ascii	"PID Controller: \000"
 11746      436F6E74 
 11746      726F6C6C 
 11746      65723A20 
 11746      00
 11747              		.global	__aeabi_i2d
 11748              		.global	__aeabi_ddiv
 11749 0fe1 000000   		.align	2
 11750              	.LC160:
 11751 0fe4 50202D3E 		.ascii	"P -> %f  \000"
 11751      20256620 
 11751      2000
 11752 0fee 0000     		.align	2
 11753              	.LC161:
 11754 0ff0 49202D3E 		.ascii	"I -> %f  \000"
 11754      20256620 
 11754      2000
 11755 0ffa 0000     		.align	2
 11756              	.LC162:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 270


 11757 0ffc 44202D3E 		.ascii	"D -> %f\015\012\000"
 11757      2025660D 
 11757      0A00
 11758 1006 0000     		.align	2
 11759              	.LC163:
 11760 1008 43757272 		.ascii	"Current PID Controller: \000"
 11760      656E7420 
 11760      50494420 
 11760      436F6E74 
 11760      726F6C6C 
 11761 1021 000000   		.align	2
 11762              	.LC164:
 11763 1024 53746172 		.ascii	"Startup activation: YES\015\012\000"
 11763      74757020 
 11763      61637469 
 11763      76617469 
 11763      6F6E3A20 
 11764 103e 0000     		.align	2
 11765              	.LC165:
 11766 1040 53746172 		.ascii	"Startup activation: NO\015\012\000"
 11766      74757020 
 11766      61637469 
 11766      76617469 
 11766      6F6E3A20 
 11767 1059 000000   		.align	2
 11768              	.LC166:
 11769 105c 496E7075 		.ascii	"Input mode: USB\015\012\000"
 11769      74206D6F 
 11769      64653A20 
 11769      5553420D 
 11769      0A00
 11770 106e 0000     		.align	2
 11771              	.LC167:
 11772 1070 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 11772      74206D6F 
 11772      64653A20 
 11772      48616E64 
 11772      6C650D0A 
 11773 1085 000000   		.align	2
 11774              	.LC168:
 11775 1088 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 11775      74206D6F 
 11775      64653A20 
 11775      454D4720 
 11775      70726F70 
 11776 10a7 00       		.align	2
 11777              	.LC169:
 11778 10a8 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 11778      74206D6F 
 11778      64653A20 
 11778      454D4720 
 11778      696E7465 
 11779 10c3 00       		.align	2
 11780              	.LC170:
 11781 10c4 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 11781      74206D6F 
 11781      64653A20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 271


 11781      454D4720 
 11781      46434653 
 11782 10db 00       		.align	2
 11783              	.LC171:
 11784 10dc 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 11784      74206D6F 
 11784      64653A20 
 11784      454D4720 
 11784      46434653 
 11785 10f7 00       		.align	2
 11786              	.LC172:
 11787 10f8 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 11787      726F6C20 
 11787      6D6F6465 
 11787      3A20506F 
 11787      73697469 
 11788 1111 000000   		.align	2
 11789              	.LC173:
 11790 1114 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 11790      726F6C20 
 11790      6D6F6465 
 11790      3A205057 
 11790      4D0D0A00 
 11791              		.align	2
 11792              	.LC174:
 11793 1128 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 11793      726F6C20 
 11793      6D6F6465 
 11793      3A204375 
 11793      7272656E 
 11794              		.align	2
 11795              	.LC175:
 11796 1140 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 11796      726F6C20 
 11796      6D6F6465 
 11796      3A20506F 
 11796      73697469 
 11797 1165 000000   		.align	2
 11798              	.LC176:
 11799 1168 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 11799      6C757465 
 11799      20656E63 
 11799      6F646572 
 11799      20706F73 
 11800 1189 000000   		.align	2
 11801              	.LC177:
 11802 118c 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 11802      6C757465 
 11802      20656E63 
 11802      6F646572 
 11802      20706F73 
 11803              		.align	2
 11804              	.LC178:
 11805 11ac 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 11805      722D4861 
 11805      6E646C65 
 11805      20526174 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 272


 11805      696F3A20 
 11806 11c5 000000   		.align	2
 11807              	.LC179:
 11808 11c8 456E636F 		.ascii	"Encoder indices used for motor control: \000"
 11808      64657220 
 11808      696E6469 
 11808      63657320 
 11808      75736564 
 11809 11f1 000000   		.align	2
 11810              	.LC180:
 11811 11f4 46697273 		.ascii	"First Gear: %d teeth\015\012\000"
 11811      74204765 
 11811      61723A20 
 11811      25642074 
 11811      65657468 
 11812 120b 00       		.align	2
 11813              	.LC181:
 11814 120c 5365636F 		.ascii	"Second Gear: %d teeth\015\012\000"
 11814      6E642047 
 11814      6561723A 
 11814      20256420 
 11814      74656574 
 11815              		.align	2
 11816              	.LC182:
 11817 1224 47656172 		.ascii	"Gear invariant: %d\015\012\000"
 11817      20696E76 
 11817      61726961 
 11817      6E743A20 
 11817      25640D0A 
 11818 1239 000000   		.align	2
 11819              	.LC183:
 11820 123c 53656E73 		.ascii	"Sensor resolution: \000"
 11820      6F722072 
 11820      65736F6C 
 11820      7574696F 
 11820      6E3A2000 
 11821              		.align	2
 11822              	.LC184:
 11823 1250 4D656173 		.ascii	"Measurement Offset: \000"
 11823      7572656D 
 11823      656E7420 
 11823      4F666673 
 11823      65743A20 
 11824 1265 000000   		.align	2
 11825              	.LC185:
 11826 1268 256C6400 		.ascii	"%ld\000"
 11827              		.align	2
 11828              	.LC186:
 11829 126c 4D656173 		.ascii	"Measurement Multiplier: \000"
 11829      7572656D 
 11829      656E7420 
 11829      4D756C74 
 11829      69706C69 
 11830              		.global	__aeabi_f2d
 11831 1285 000000   		.align	2
 11832              	.LC187:
 11833 1288 256600   		.ascii	"%f\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 273


 11834 128b 00       		.align	2
 11835              	.LC188:
 11836 128c 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 11836      656E7420 
 11836      6C6F6F6B 
 11836      75702074 
 11836      61626C65 
 11837 12ba 00       		.ascii	"\000"
 11838 12bb 00       		.align	2
 11839              	.LC189:
 11840 12bc 506F7369 		.ascii	"Position limit active: %d\000"
 11840      74696F6E 
 11840      206C696D 
 11840      69742061 
 11840      63746976 
 11841 12d6 0000     		.align	2
 11842              	.LC190:
 11843 12d8 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 11843      74696F6E 
 11843      206C696D 
 11843      6974206D 
 11843      6F746F72 
 11844 12fb 00       		.align	2
 11845              	.LC191:
 11846 12fc 73757020 		.ascii	"sup -> %ld\015\012\000"
 11846      2D3E2025 
 11846      6C640D0A 
 11846      00
 11847 1309 000000   		.align	2
 11848              	.LC192:
 11849 130c 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 11849      73746570 
 11849      20706F73 
 11849      20616E64 
 11849      206E6567 
 11850              		.align	2
 11851              	.LC193:
 11852 1328 43757272 		.ascii	"Current limit: %d\015\012\000"
 11852      656E7420 
 11852      6C696D69 
 11852      743A2025 
 11852      640D0A00 
 11853              		.align	2
 11854              	.LC194:
 11855 133c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 11855      434F4E46 
 11855      49475552 
 11855      4154494F 
 11855      4E0D0A00 
 11856              		.align	2
 11857              	.LC195:
 11858 1350 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 11858      74687265 
 11858      73686F6C 
 11858      6473205B 
 11858      30202D20 
 11859 1372 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 274


 11860              	.LC196:
 11861 1374 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 11861      6D617820 
 11861      76616C75 
 11861      6573205B 
 11861      30202D20 
 11862              		.align	2
 11863              	.LC197:
 11864 1398 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 11864      696E7665 
 11864      7273696F 
 11864      6E3A2059 
 11864      45530D0A 
 11865 13ad 000000   		.align	2
 11866              	.LC198:
 11867 13b0 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 11867      696E7665 
 11867      7273696F 
 11867      6E3A204E 
 11867      4F0D0A00 
 11868              		.align	2
 11869              	.LC199:
 11870 13c4 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 11870      62726174 
 11870      696F6E20 
 11870      656E6162 
 11870      6C65643A 
 11871 13df 00       		.align	2
 11872              	.LC200:
 11873 13e0 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 11873      62726174 
 11873      696F6E20 
 11873      656E6162 
 11873      6C65643A 
 11874 13fa 0000     		.align	2
 11875              	.LC201:
 11876 13fc 454D4720 		.ascii	"EMG max speed: %d\000"
 11876      6D617820 
 11876      73706565 
 11876      643A2025 
 11876      6400
 11877 140e 0000     		.align	2
 11878              	.LC202:
 11879 1410 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 11879      74696F6E 
 11879      616C2041 
 11879      44432073 
 11879      656E736F 
 11880              		.align	2
 11881              	.LC203:
 11882 1430 41444320 		.ascii	"ADC %d -> %d\000"
 11882      2564202D 
 11882      3E202564 
 11882      00
 11883 143d 000000   		.align	2
 11884              	.LC204:
 11885 1440 454D4720 		.ascii	"EMG input %d -> %d\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 275


 11885      696E7075 
 11885      74202564 
 11885      202D3E20 
 11885      256400
 11886 1453 00       		.align	2
 11887              	.LC205:
 11888 1454 52657374 		.ascii	"Rest time delay (ms): %d\000"
 11888      2074696D 
 11888      65206465 
 11888      6C617920 
 11888      286D7329 
 11889 146d 000000   		.align	2
 11890              	.LC206:
 11891 1470 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 11891      2076656C 
 11891      6F636974 
 11891      7920636C 
 11891      6F737572 
 11892 1496 0000     		.align	2
 11893              	.LC207:
 11894 1498 52657374 		.ascii	"Rest position: %d\000"
 11894      20706F73 
 11894      6974696F 
 11894      6E3A2025 
 11894      6400
 11895 14aa 0000     		.align	2
 11896              	.LC208:
 11897 14ac 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 11897      436F6E6E 
 11897      65637465 
 11897      643A2025 
 11897      640D0A00 
 11898              		.align	2
 11899              	.LC209:
 11900 14c0 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 11900      20434F4E 
 11900      46494755 
 11900      52415449 
 11900      4F4E0D0A 
 11901 14d5 000000   		.align	2
 11902              	.LC210:
 11903 14d8 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 11903      2564200D 
 11903      0A094944 
 11903      3A202564 
 11903      0D0A00
 11904 14eb 00       		.align	2
 11905              	.LC211:
 11906 14ec 09416363 		.ascii	"\011Accelerometers: \000"
 11906      656C6572 
 11906      6F6D6574 
 11906      6572733A 
 11906      2000
 11907 14fe 0000     		.align	2
 11908              	.LC212:
 11909 1500 09477972 		.ascii	"\011Gyroscopes: \000"
 11909      6F73636F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 276


 11909      7065733A 
 11909      2000
 11910 150e 0000     		.align	2
 11911              	.LC213:
 11912 1510 094D6167 		.ascii	"\011Magnetometers: \000"
 11912      6E65746F 
 11912      6D657465 
 11912      72733A20 
 11912      00
 11913 1521 000000   		.align	2
 11914              	.LC214:
 11915 1524 09517561 		.ascii	"\011Quaternion: \000"
 11915      7465726E 
 11915      696F6E3A 
 11915      2000
 11916 1532 0000     		.align	2
 11917              	.LC215:
 11918 1534 0954656D 		.ascii	"\011Temperature: \000"
 11918      70657261 
 11918      74757265 
 11918      3A2000
 11919 1543 00       		.align	2
 11920              	.LC216:
 11921 1544 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 11921      20465720 
 11921      6379636C 
 11921      65207469 
 11921      6D653A20 
 11922              		.align	2
 11923              	.LC217:
 11924 1560 0D0A0000 		.ascii	"\015\012\000\000"
 11925              		.section	.text.prepare_generic_info,"ax",%progbits
 11926              		.align	2
 11927              		.global	prepare_generic_info
 11928              		.thumb
 11929              		.thumb_func
 11930              		.type	prepare_generic_info, %function
 11931              	prepare_generic_info:
 11932              	.LFB72:
1745:..\src/command_processing.c **** 
1746:..\src/command_processing.c **** //==============================================================================
1747:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1748:..\src/command_processing.c **** //==============================================================================
1749:..\src/command_processing.c **** 
1750:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1751:..\src/command_processing.c **** {
 11933              		.loc 1 1751 0
 11934              		.cfi_startproc
 11935              		@ args = 0, pretend = 0, frame = 152
 11936              		@ frame_needed = 1, uses_anonymous_args = 0
 11937 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 11938              		.cfi_def_cfa_offset 36
 11939              		.cfi_offset 4, -36
 11940              		.cfi_offset 5, -32
 11941              		.cfi_offset 6, -28
 11942              		.cfi_offset 7, -24
 11943              		.cfi_offset 8, -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 277


 11944              		.cfi_offset 9, -16
 11945              		.cfi_offset 10, -12
 11946              		.cfi_offset 11, -8
 11947              		.cfi_offset 14, -4
 11948 0004 B1B0     		sub	sp, sp, #196
 11949              		.cfi_def_cfa_offset 232
 11950 0006 0AAF     		add	r7, sp, #40
 11951              		.cfi_def_cfa 7, 192
 11952 0008 7861     		str	r0, [r7, #20]
1752:..\src/command_processing.c ****     int i;
1753:..\src/command_processing.c **** 
1754:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 11953              		.loc 1 1754 0
 11954 000a C84B     		ldr	r3, .L609
 11955 000c C7F88C30 		str	r3, [r7, #140]
1755:..\src/command_processing.c ****     
1756:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 11956              		.loc 1 1756 0
 11957 0010 C64B     		ldr	r3, .L609
 11958 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 11959 0016 FA2B     		cmp	r3, #250
 11960 0018 01F07A85 		beq	.L607
 11961              	.LBB16:
1757:..\src/command_processing.c ****         char str[100];
1758:..\src/command_processing.c ****         strcpy(info_string, "");
 11962              		.loc 1 1758 0
 11963 001c 7B69     		ldr	r3, [r7, #20]
 11964 001e 0022     		movs	r2, #0
 11965 0020 1A70     		strb	r2, [r3]
1759:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11966              		.loc 1 1759 0
 11967 0022 7869     		ldr	r0, [r7, #20]
 11968 0024 FFF7FEFF 		bl	strlen
 11969 0028 0346     		mov	r3, r0
 11970 002a 1A46     		mov	r2, r3
 11971 002c 7B69     		ldr	r3, [r7, #20]
 11972 002e 1344     		add	r3, r3, r2
 11973 0030 BF4A     		ldr	r2, .L609+4
 11974 0032 1188     		ldrh	r1, [r2]	@ unaligned
 11975 0034 9278     		ldrb	r2, [r2, #2]
 11976 0036 1980     		strh	r1, [r3]	@ unaligned
 11977 0038 9A70     		strb	r2, [r3, #2]
1760:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 11978              		.loc 1 1760 0
 11979 003a 7869     		ldr	r0, [r7, #20]
 11980 003c FFF7FEFF 		bl	strlen
 11981 0040 0346     		mov	r3, r0
 11982 0042 1A46     		mov	r2, r3
 11983 0044 7B69     		ldr	r3, [r7, #20]
 11984 0046 1344     		add	r3, r3, r2
 11985 0048 BA4A     		ldr	r2, .L609+8
 11986 004a 1D46     		mov	r5, r3
 11987 004c 1446     		mov	r4, r2
 11988 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11989 0050 2860     		str	r0, [r5]	@ unaligned
 11990 0052 6960     		str	r1, [r5, #4]	@ unaligned
 11991 0054 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 278


 11992 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 11993 0058 2388     		ldrh	r3, [r4]	@ unaligned
 11994 005a A278     		ldrb	r2, [r4, #2]
 11995 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 11996 005e 1346     		mov	r3, r2
 11997 0060 AB74     		strb	r3, [r5, #18]
1761:..\src/command_processing.c ****         strcat(info_string, VERSION);
 11998              		.loc 1 1761 0
 11999 0062 7869     		ldr	r0, [r7, #20]
 12000 0064 FFF7FEFF 		bl	strlen
 12001 0068 0346     		mov	r3, r0
 12002 006a 1A46     		mov	r2, r3
 12003 006c 7B69     		ldr	r3, [r7, #20]
 12004 006e 1344     		add	r3, r3, r2
 12005 0070 B14A     		ldr	r2, .L609+12
 12006 0072 1446     		mov	r4, r2
 12007 0074 9E46     		mov	lr, r3
 12008 0076 04F1200C 		add	ip, r4, #32
 12009              	.L518:
 12010 007a 7546     		mov	r5, lr
 12011 007c 2646     		mov	r6, r4
 12012 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12013 0080 2860     		str	r0, [r5]	@ unaligned
 12014 0082 6960     		str	r1, [r5, #4]	@ unaligned
 12015 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 12016 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 12017 0088 1034     		adds	r4, r4, #16
 12018 008a 0EF1100E 		add	lr, lr, #16
 12019 008e 6445     		cmp	r4, ip
 12020 0090 F3D1     		bne	.L518
 12021 0092 7346     		mov	r3, lr
 12022 0094 2246     		mov	r2, r4
 12023 0096 1068     		ldr	r0, [r2]	@ unaligned
 12024 0098 1860     		str	r0, [r3]	@ unaligned
 12025 009a 1279     		ldrb	r2, [r2, #4]
 12026 009c 1A71     		strb	r2, [r3, #4]
1762:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 12027              		.loc 1 1762 0
 12028 009e 7869     		ldr	r0, [r7, #20]
 12029 00a0 FFF7FEFF 		bl	strlen
 12030 00a4 0346     		mov	r3, r0
 12031 00a6 1A46     		mov	r2, r3
 12032 00a8 7B69     		ldr	r3, [r7, #20]
 12033 00aa 1344     		add	r3, r3, r2
 12034 00ac A34A     		ldr	r2, .L609+16
 12035 00ae 1068     		ldr	r0, [r2]	@ unaligned
 12036 00b0 1860     		str	r0, [r3]	@ unaligned
 12037 00b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12038 00b4 9A80     		strh	r2, [r3, #4]	@ unaligned
1763:..\src/command_processing.c **** 
1764:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 12039              		.loc 1 1764 0
 12040 00b6 7869     		ldr	r0, [r7, #20]
 12041 00b8 FFF7FEFF 		bl	strlen
 12042 00bc 0346     		mov	r3, r0
 12043 00be 1A46     		mov	r2, r3
 12044 00c0 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 279


 12045 00c2 1344     		add	r3, r3, r2
 12046 00c4 9E4A     		ldr	r2, .L609+20
 12047 00c6 1C46     		mov	r4, r3
 12048 00c8 1346     		mov	r3, r2
 12049 00ca 07CB     		ldmia	r3!, {r0, r1, r2}
 12050 00cc 2060     		str	r0, [r4]	@ unaligned
 12051 00ce 6160     		str	r1, [r4, #4]	@ unaligned
 12052 00d0 A260     		str	r2, [r4, #8]	@ unaligned
 12053 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 12054 00d4 A381     		strh	r3, [r4, #12]	@ unaligned
1765:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 12055              		.loc 1 1765 0
 12056 00d6 D7F88C30 		ldr	r3, [r7, #140]
 12057 00da 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12058 00de 1A46     		mov	r2, r3
 12059 00e0 07F11C03 		add	r3, r7, #28
 12060 00e4 9749     		ldr	r1, .L609+24
 12061 00e6 1846     		mov	r0, r3
 12062 00e8 FFF7FEFF 		bl	sprintf
1766:..\src/command_processing.c ****         strcat(info_string, str);
 12063              		.loc 1 1766 0
 12064 00ec 07F11C03 		add	r3, r7, #28
 12065 00f0 1946     		mov	r1, r3
 12066 00f2 7869     		ldr	r0, [r7, #20]
 12067 00f4 FFF7FEFF 		bl	strcat
1767:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 12068              		.loc 1 1767 0
 12069 00f8 D7F88C30 		ldr	r3, [r7, #140]
 12070 00fc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12071 0100 002B     		cmp	r3, #0
 12072 0102 02D0     		beq	.L520
 12073 0104 012B     		cmp	r3, #1
 12074 0106 17D0     		beq	.L521
1768:..\src/command_processing.c ****             case SOFTHAND_PRO:
1769:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1770:..\src/command_processing.c ****                 break;
1771:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1772:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1773:..\src/command_processing.c ****                 break;
1774:..\src/command_processing.c ****             default:
1775:..\src/command_processing.c ****                 break;
 12075              		.loc 1 1775 0
 12076 0108 2EE0     		b	.L522
 12077              	.L520:
1769:..\src/command_processing.c ****                 break;
 12078              		.loc 1 1769 0
 12079 010a 7869     		ldr	r0, [r7, #20]
 12080 010c FFF7FEFF 		bl	strlen
 12081 0110 0346     		mov	r3, r0
 12082 0112 1A46     		mov	r2, r3
 12083 0114 7B69     		ldr	r3, [r7, #20]
 12084 0116 1344     		add	r3, r3, r2
 12085 0118 8B4A     		ldr	r2, .L609+28
 12086 011a 1C46     		mov	r4, r3
 12087 011c 1546     		mov	r5, r2
 12088 011e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12089 0120 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 280


 12090 0122 6160     		str	r1, [r4, #4]	@ unaligned
 12091 0124 A260     		str	r2, [r4, #8]	@ unaligned
 12092 0126 E360     		str	r3, [r4, #12]	@ unaligned
 12093 0128 2868     		ldr	r0, [r5]	@ unaligned
 12094 012a 2061     		str	r0, [r4, #16]	@ unaligned
 12095 012c AB88     		ldrh	r3, [r5, #4]	@ unaligned
 12096 012e AA79     		ldrb	r2, [r5, #6]
 12097 0130 A382     		strh	r3, [r4, #20]	@ unaligned
 12098 0132 1346     		mov	r3, r2
 12099 0134 A375     		strb	r3, [r4, #22]
1770:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 12100              		.loc 1 1770 0
 12101 0136 17E0     		b	.L522
 12102              	.L521:
1772:..\src/command_processing.c ****                 break;
 12103              		.loc 1 1772 0
 12104 0138 7869     		ldr	r0, [r7, #20]
 12105 013a FFF7FEFF 		bl	strlen
 12106 013e 0346     		mov	r3, r0
 12107 0140 1A46     		mov	r2, r3
 12108 0142 7B69     		ldr	r3, [r7, #20]
 12109 0144 1344     		add	r3, r3, r2
 12110 0146 814A     		ldr	r2, .L609+32
 12111 0148 1D46     		mov	r5, r3
 12112 014a 1446     		mov	r4, r2
 12113 014c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12114 014e 2860     		str	r0, [r5]	@ unaligned
 12115 0150 6960     		str	r1, [r5, #4]	@ unaligned
 12116 0152 AA60     		str	r2, [r5, #8]	@ unaligned
 12117 0154 EB60     		str	r3, [r5, #12]	@ unaligned
 12118 0156 03CC     		ldmia	r4!, {r0, r1}
 12119 0158 2861     		str	r0, [r5, #16]	@ unaligned
 12120 015a 6961     		str	r1, [r5, #20]	@ unaligned
 12121 015c 2388     		ldrh	r3, [r4]	@ unaligned
 12122 015e A278     		ldrb	r2, [r4, #2]
 12123 0160 2B83     		strh	r3, [r5, #24]	@ unaligned
 12124 0162 1346     		mov	r3, r2
 12125 0164 AB76     		strb	r3, [r5, #26]
1773:..\src/command_processing.c ****             default:
 12126              		.loc 1 1773 0
 12127 0166 00BF     		nop
 12128              	.L522:
1776:..\src/command_processing.c ****         }
1777:..\src/command_processing.c ****         
1778:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 12129              		.loc 1 1778 0
 12130 0168 D7F88C30 		ldr	r3, [r7, #140]
 12131 016c 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 12132 0170 002B     		cmp	r3, #0
 12133 0172 02D0     		beq	.L524
 12134 0174 012B     		cmp	r3, #1
 12135 0176 15D0     		beq	.L525
 12136 0178 26E0     		b	.L523
 12137              	.L524:
1779:..\src/command_processing.c ****             case RIGHT_HAND:
1780:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 12138              		.loc 1 1780 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 281


 12139 017a 7869     		ldr	r0, [r7, #20]
 12140 017c FFF7FEFF 		bl	strlen
 12141 0180 0346     		mov	r3, r0
 12142 0182 1A46     		mov	r2, r3
 12143 0184 7B69     		ldr	r3, [r7, #20]
 12144 0186 1344     		add	r3, r3, r2
 12145 0188 714A     		ldr	r2, .L609+36
 12146 018a 1D46     		mov	r5, r3
 12147 018c 1446     		mov	r4, r2
 12148 018e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12149 0190 2860     		str	r0, [r5]	@ unaligned
 12150 0192 6960     		str	r1, [r5, #4]	@ unaligned
 12151 0194 AA60     		str	r2, [r5, #8]	@ unaligned
 12152 0196 EB60     		str	r3, [r5, #12]	@ unaligned
 12153 0198 2388     		ldrh	r3, [r4]	@ unaligned
 12154 019a A278     		ldrb	r2, [r4, #2]
 12155 019c 2B82     		strh	r3, [r5, #16]	@ unaligned
 12156 019e 1346     		mov	r3, r2
 12157 01a0 AB74     		strb	r3, [r5, #18]
1781:..\src/command_processing.c ****                 break;
 12158              		.loc 1 1781 0
 12159 01a2 11E0     		b	.L523
 12160              	.L525:
1782:..\src/command_processing.c ****             case LEFT_HAND:
1783:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 12161              		.loc 1 1783 0
 12162 01a4 7869     		ldr	r0, [r7, #20]
 12163 01a6 FFF7FEFF 		bl	strlen
 12164 01aa 0346     		mov	r3, r0
 12165 01ac 1A46     		mov	r2, r3
 12166 01ae 7B69     		ldr	r3, [r7, #20]
 12167 01b0 1344     		add	r3, r3, r2
 12168 01b2 684A     		ldr	r2, .L609+40
 12169 01b4 1D46     		mov	r5, r3
 12170 01b6 1446     		mov	r4, r2
 12171 01b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12172 01ba 2860     		str	r0, [r5]	@ unaligned
 12173 01bc 6960     		str	r1, [r5, #4]	@ unaligned
 12174 01be AA60     		str	r2, [r5, #8]	@ unaligned
 12175 01c0 EB60     		str	r3, [r5, #12]	@ unaligned
 12176 01c2 2388     		ldrh	r3, [r4]	@ unaligned
 12177 01c4 2B82     		strh	r3, [r5, #16]	@ unaligned
1784:..\src/command_processing.c ****                 break;
 12178              		.loc 1 1784 0
 12179 01c6 00BF     		nop
 12180              	.L523:
1785:..\src/command_processing.c ****         }
1786:..\src/command_processing.c **** 
1787:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 12181              		.loc 1 1787 0
 12182 01c8 D7F88C30 		ldr	r3, [r7, #140]
 12183 01cc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 12184 01d0 012B     		cmp	r3, #1
 12185 01d2 02D0     		beq	.L527
 12186 01d4 022B     		cmp	r3, #2
 12187 01d6 11D0     		beq	.L528
 12188 01d8 21E0     		b	.L606
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 282


 12189              	.L527:
1788:..\src/command_processing.c ****             case MARIA:
1789:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 12190              		.loc 1 1789 0
 12191 01da 7869     		ldr	r0, [r7, #20]
 12192 01dc FFF7FEFF 		bl	strlen
 12193 01e0 0346     		mov	r3, r0
 12194 01e2 1A46     		mov	r2, r3
 12195 01e4 7B69     		ldr	r3, [r7, #20]
 12196 01e6 1344     		add	r3, r3, r2
 12197 01e8 5B4A     		ldr	r2, .L609+44
 12198 01ea 1C46     		mov	r4, r3
 12199 01ec 1346     		mov	r3, r2
 12200 01ee 07CB     		ldmia	r3!, {r0, r1, r2}
 12201 01f0 2060     		str	r0, [r4]	@ unaligned
 12202 01f2 6160     		str	r1, [r4, #4]	@ unaligned
 12203 01f4 A260     		str	r2, [r4, #8]	@ unaligned
 12204 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 12205 01f8 A381     		strh	r3, [r4, #12]	@ unaligned
1790:..\src/command_processing.c ****                 break;
 12206              		.loc 1 1790 0
 12207 01fa 24E0     		b	.L529
 12208              	.L528:
1791:..\src/command_processing.c ****             case ROZA:
1792:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 12209              		.loc 1 1792 0
 12210 01fc 7869     		ldr	r0, [r7, #20]
 12211 01fe FFF7FEFF 		bl	strlen
 12212 0202 0346     		mov	r3, r0
 12213 0204 1A46     		mov	r2, r3
 12214 0206 7B69     		ldr	r3, [r7, #20]
 12215 0208 1344     		add	r3, r3, r2
 12216 020a 544A     		ldr	r2, .L609+48
 12217 020c 1C46     		mov	r4, r3
 12218 020e 1346     		mov	r3, r2
 12219 0210 07CB     		ldmia	r3!, {r0, r1, r2}
 12220 0212 2060     		str	r0, [r4]	@ unaligned
 12221 0214 6160     		str	r1, [r4, #4]	@ unaligned
 12222 0216 A260     		str	r2, [r4, #8]	@ unaligned
 12223 0218 1B78     		ldrb	r3, [r3]
 12224 021a 2373     		strb	r3, [r4, #12]
1793:..\src/command_processing.c ****                 break;
 12225              		.loc 1 1793 0
 12226 021c 13E0     		b	.L529
 12227              	.L606:
1794:..\src/command_processing.c ****             default:
1795:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 12228              		.loc 1 1795 0
 12229 021e 7869     		ldr	r0, [r7, #20]
 12230 0220 FFF7FEFF 		bl	strlen
 12231 0224 0346     		mov	r3, r0
 12232 0226 1A46     		mov	r2, r3
 12233 0228 7B69     		ldr	r3, [r7, #20]
 12234 022a 1344     		add	r3, r3, r2
 12235 022c 4C4A     		ldr	r2, .L609+52
 12236 022e 1D46     		mov	r5, r3
 12237 0230 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 283


 12238 0232 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12239 0234 2860     		str	r0, [r5]	@ unaligned
 12240 0236 6960     		str	r1, [r5, #4]	@ unaligned
 12241 0238 AA60     		str	r2, [r5, #8]	@ unaligned
 12242 023a EB60     		str	r3, [r5, #12]	@ unaligned
 12243 023c 2068     		ldr	r0, [r4]	@ unaligned
 12244 023e 2861     		str	r0, [r5, #16]	@ unaligned
 12245 0240 2379     		ldrb	r3, [r4, #4]
 12246 0242 2B75     		strb	r3, [r5, #20]
1796:..\src/command_processing.c ****                 break;
 12247              		.loc 1 1796 0
 12248 0244 00BF     		nop
 12249              	.L529:
1797:..\src/command_processing.c ****         }
1798:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 12250              		.loc 1 1798 0
 12251 0246 7869     		ldr	r0, [r7, #20]
 12252 0248 FFF7FEFF 		bl	strlen
 12253 024c 0346     		mov	r3, r0
 12254 024e 1A46     		mov	r2, r3
 12255 0250 7B69     		ldr	r3, [r7, #20]
 12256 0252 1344     		add	r3, r3, r2
 12257 0254 364A     		ldr	r2, .L609+4
 12258 0256 1188     		ldrh	r1, [r2]	@ unaligned
 12259 0258 9278     		ldrb	r2, [r2, #2]
 12260 025a 1980     		strh	r1, [r3]	@ unaligned
 12261 025c 9A70     		strb	r2, [r3, #2]
 12262              	.LBB17:
1799:..\src/command_processing.c ****         
1800:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 12263              		.loc 1 1800 0
 12264 025e 0023     		movs	r3, #0
 12265 0260 87F89330 		strb	r3, [r7, #147]
 12266 0264 01F08BB8 		b	.L530
 12267              	.L582:
 12268              	.LBB18:
1801:..\src/command_processing.c ****             
1802:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 12269              		.loc 1 1802 0
 12270 0268 97F89330 		ldrb	r3, [r7, #147]
 12271 026c 87F88B30 		strb	r3, [r7, #139]
1803:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 12272              		.loc 1 1803 0
 12273 0270 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 12274 0274 1346     		mov	r3, r2
 12275 0276 DB00     		lsls	r3, r3, #3
 12276 0278 9B1A     		subs	r3, r3, r2
 12277 027a 1B01     		lsls	r3, r3, #4
 12278 027c B033     		adds	r3, r3, #176
 12279 027e D7F88C20 		ldr	r2, [r7, #140]
 12280 0282 1344     		add	r3, r3, r2
 12281 0284 C7F88430 		str	r3, [r7, #132]
1804:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 12282              		.loc 1 1804 0
 12283 0288 D7F88430 		ldr	r3, [r7, #132]
 12284 028c 93F86030 		ldrb	r3, [r3, #96]
 12285 0290 87F88330 		strb	r3, [r7, #131]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 284


1805:..\src/command_processing.c ****                   
1806:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 12286              		.loc 1 1806 0
 12287 0294 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12288 0298 5A1C     		adds	r2, r3, #1
 12289 029a 07F11C03 		add	r3, r7, #28
 12290 029e 3149     		ldr	r1, .L609+56
 12291 02a0 1846     		mov	r0, r3
 12292 02a2 FFF7FEFF 		bl	sprintf
1807:..\src/command_processing.c ****             strcat(info_string, str);
 12293              		.loc 1 1807 0
 12294 02a6 07F11C03 		add	r3, r7, #28
 12295 02aa 1946     		mov	r1, r3
 12296 02ac 7869     		ldr	r0, [r7, #20]
 12297 02ae FFF7FEFF 		bl	strcat
1808:..\src/command_processing.c ****                         
1809:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 12298              		.loc 1 1809 0
 12299 02b2 7869     		ldr	r0, [r7, #20]
 12300 02b4 FFF7FEFF 		bl	strlen
 12301 02b8 0346     		mov	r3, r0
 12302 02ba 1A46     		mov	r2, r3
 12303 02bc 7B69     		ldr	r3, [r7, #20]
 12304 02be 1344     		add	r3, r3, r2
 12305 02c0 294A     		ldr	r2, .L609+60
 12306 02c2 1C46     		mov	r4, r3
 12307 02c4 1546     		mov	r5, r2
 12308 02c6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12309 02c8 2060     		str	r0, [r4]	@ unaligned
 12310 02ca 6160     		str	r1, [r4, #4]	@ unaligned
 12311 02cc A260     		str	r2, [r4, #8]	@ unaligned
 12312 02ce E360     		str	r3, [r4, #12]	@ unaligned
1810:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 12313              		.loc 1 1810 0
 12314 02d0 D7F88430 		ldr	r3, [r7, #132]
 12315 02d4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12316 02d8 022B     		cmp	r3, #2
 12317 02da 10D1     		bne	.L531
1811:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 12318              		.loc 1 1811 0
 12319 02dc 7869     		ldr	r0, [r7, #20]
 12320 02de FFF7FEFF 		bl	strlen
 12321 02e2 0346     		mov	r3, r0
 12322 02e4 1A46     		mov	r2, r3
 12323 02e6 7B69     		ldr	r3, [r7, #20]
 12324 02e8 1344     		add	r3, r3, r2
 12325 02ea 204A     		ldr	r2, .L609+64
 12326 02ec 1C46     		mov	r4, r3
 12327 02ee 1346     		mov	r3, r2
 12328 02f0 07CB     		ldmia	r3!, {r0, r1, r2}
 12329 02f2 2060     		str	r0, [r4]	@ unaligned
 12330 02f4 6160     		str	r1, [r4, #4]	@ unaligned
 12331 02f6 A260     		str	r2, [r4, #8]	@ unaligned
 12332 02f8 1B88     		ldrh	r3, [r3]	@ unaligned
 12333 02fa A381     		strh	r3, [r4, #12]	@ unaligned
 12334 02fc 4AE0     		b	.L532
 12335              	.L531:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 285


1812:..\src/command_processing.c ****             else {
1813:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 12336              		.loc 1 1813 0
 12337 02fe D7F88430 		ldr	r3, [r7, #132]
 12338 0302 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12339 0306 012B     		cmp	r3, #1
 12340 0308 34D1     		bne	.L533
1814:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 12341              		.loc 1 1814 0
 12342 030a 7869     		ldr	r0, [r7, #20]
 12343 030c FFF7FEFF 		bl	strlen
 12344 0310 0346     		mov	r3, r0
 12345 0312 1A46     		mov	r2, r3
 12346 0314 7B69     		ldr	r3, [r7, #20]
 12347 0316 1344     		add	r3, r3, r2
 12348 0318 1549     		ldr	r1, .L609+68
 12349 031a 1A46     		mov	r2, r3
 12350 031c 0B46     		mov	r3, r1
 12351 031e 03CB     		ldmia	r3!, {r0, r1}
 12352 0320 1060     		str	r0, [r2]	@ unaligned
 12353 0322 5160     		str	r1, [r2, #4]	@ unaligned
 12354 0324 1B78     		ldrb	r3, [r3]
 12355 0326 1372     		strb	r3, [r2, #8]
 12356 0328 34E0     		b	.L532
 12357              	.L610:
 12358 032a 00BF     		.align	2
 12359              	.L609:
 12360 032c 00000000 		.word	c_mem
 12361 0330 840D0000 		.word	.LC125
 12362 0334 880D0000 		.word	.LC126
 12363 0338 9C0D0000 		.word	.LC127
 12364 033c C40D0000 		.word	.LC128
 12365 0340 CC0D0000 		.word	.LC129
 12366 0344 DC0D0000 		.word	.LC130
 12367 0348 E80D0000 		.word	.LC131
 12368 034c 000E0000 		.word	.LC132
 12369 0350 1C0E0000 		.word	.LC133
 12370 0354 300E0000 		.word	.LC134
 12371 0358 440E0000 		.word	.LC135
 12372 035c 540E0000 		.word	.LC136
 12373 0360 640E0000 		.word	.LC137
 12374 0364 7C0E0000 		.word	.LC138
 12375 0368 8C0E0000 		.word	.LC139
 12376 036c 9C0E0000 		.word	.LC140
 12377 0370 AC0E0000 		.word	.LC141
 12378              	.L533:
1815:..\src/command_processing.c ****                 else
1816:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 12379              		.loc 1 1816 0
 12380 0374 7869     		ldr	r0, [r7, #20]
 12381 0376 FFF7FEFF 		bl	strlen
 12382 037a 0346     		mov	r3, r0
 12383 037c 1A46     		mov	r2, r3
 12384 037e 7B69     		ldr	r3, [r7, #20]
 12385 0380 1344     		add	r3, r3, r2
 12386 0382 874A     		ldr	r2, .L611
 12387 0384 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 286


 12388 0386 1346     		mov	r3, r2
 12389 0388 07CB     		ldmia	r3!, {r0, r1, r2}
 12390 038a 2060     		str	r0, [r4]	@ unaligned
 12391 038c 6160     		str	r1, [r4, #4]	@ unaligned
 12392 038e A260     		str	r2, [r4, #8]	@ unaligned
 12393 0390 1B88     		ldrh	r3, [r3]	@ unaligned
 12394 0392 A381     		strh	r3, [r4, #12]	@ unaligned
 12395              	.L532:
1817:..\src/command_processing.c ****             }
1818:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 12396              		.loc 1 1818 0
 12397 0394 D7F88430 		ldr	r3, [r7, #132]
 12398 0398 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12399 039c 022B     		cmp	r3, #2
 12400 039e 13D1     		bne	.L534
1819:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 12401              		.loc 1 1819 0
 12402 03a0 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12403 03a4 7F4A     		ldr	r2, .L611+4
 12404 03a6 1B01     		lsls	r3, r3, #4
 12405 03a8 1344     		add	r3, r3, r2
 12406 03aa 0433     		adds	r3, r3, #4
 12407 03ac 1A68     		ldr	r2, [r3]
 12408 03ae 07F11C03 		add	r3, r7, #28
 12409 03b2 7D49     		ldr	r1, .L611+8
 12410 03b4 1846     		mov	r0, r3
 12411 03b6 FFF7FEFF 		bl	sprintf
1820:..\src/command_processing.c ****                 strcat(info_string,str);
 12412              		.loc 1 1820 0
 12413 03ba 07F11C03 		add	r3, r7, #28
 12414 03be 1946     		mov	r1, r3
 12415 03c0 7869     		ldr	r0, [r7, #20]
 12416 03c2 FFF7FEFF 		bl	strcat
 12417 03c6 39E0     		b	.L535
 12418              	.L534:
1821:..\src/command_processing.c ****             }
1822:..\src/command_processing.c ****             else {
1823:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 12419              		.loc 1 1823 0
 12420 03c8 D7F88430 		ldr	r3, [r7, #132]
 12421 03cc 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12422 03d0 012B     		cmp	r3, #1
 12423 03d2 13D1     		bne	.L536
1824:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 12424              		.loc 1 1824 0
 12425 03d4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12426 03d8 724A     		ldr	r2, .L611+4
 12427 03da 1B01     		lsls	r3, r3, #4
 12428 03dc 1344     		add	r3, r3, r2
 12429 03de 0833     		adds	r3, r3, #8
 12430 03e0 1A68     		ldr	r2, [r3]
 12431 03e2 07F11C03 		add	r3, r7, #28
 12432 03e6 7049     		ldr	r1, .L611+8
 12433 03e8 1846     		mov	r0, r3
 12434 03ea FFF7FEFF 		bl	sprintf
1825:..\src/command_processing.c ****                     strcat(info_string,str);
 12435              		.loc 1 1825 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 287


 12436 03ee 07F11C03 		add	r3, r7, #28
 12437 03f2 1946     		mov	r1, r3
 12438 03f4 7869     		ldr	r0, [r7, #20]
 12439 03f6 FFF7FEFF 		bl	strcat
 12440 03fa 1FE0     		b	.L535
 12441              	.L536:
1826:..\src/command_processing.c ****                 }
1827:..\src/command_processing.c ****                 else {
1828:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 12442              		.loc 1 1828 0
 12443 03fc 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12444 0400 684A     		ldr	r2, .L611+4
 12445 0402 1B01     		lsls	r3, r3, #4
 12446 0404 1344     		add	r3, r3, r2
 12447 0406 1968     		ldr	r1, [r3]
 12448 0408 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12449 040c D7F88C00 		ldr	r0, [r7, #140]
 12450 0410 1346     		mov	r3, r2
 12451 0412 5B00     		lsls	r3, r3, #1
 12452 0414 1344     		add	r3, r3, r2
 12453 0416 1B01     		lsls	r3, r3, #4
 12454 0418 0344     		add	r3, r3, r0
 12455 041a 03F29513 		addw	r3, r3, #405
 12456 041e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12457 0420 41FA03F2 		asr	r2, r1, r3
 12458 0424 07F11C03 		add	r3, r7, #28
 12459 0428 5F49     		ldr	r1, .L611+8
 12460 042a 1846     		mov	r0, r3
 12461 042c FFF7FEFF 		bl	sprintf
1829:..\src/command_processing.c ****                     strcat(info_string,str);
 12462              		.loc 1 1829 0
 12463 0430 07F11C03 		add	r3, r7, #28
 12464 0434 1946     		mov	r1, r3
 12465 0436 7869     		ldr	r0, [r7, #20]
 12466 0438 FFF7FEFF 		bl	strcat
 12467              	.L535:
1830:..\src/command_processing.c ****                 }
1831:..\src/command_processing.c ****             }
1832:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 12468              		.loc 1 1832 0
 12469 043c 7869     		ldr	r0, [r7, #20]
 12470 043e FFF7FEFF 		bl	strlen
 12471 0442 0346     		mov	r3, r0
 12472 0444 1A46     		mov	r2, r3
 12473 0446 7B69     		ldr	r3, [r7, #20]
 12474 0448 1344     		add	r3, r3, r2
 12475 044a 584A     		ldr	r2, .L611+12
 12476 044c 1188     		ldrh	r1, [r2]	@ unaligned
 12477 044e 9278     		ldrb	r2, [r2, #2]
 12478 0450 1980     		strh	r1, [r3]	@ unaligned
 12479 0452 9A70     		strb	r2, [r3, #2]
1833:..\src/command_processing.c **** 
1834:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 12480              		.loc 1 1834 0
 12481 0454 07F11C03 		add	r3, r7, #28
 12482 0458 554A     		ldr	r2, .L611+16
 12483 045a 1C46     		mov	r4, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 288


 12484 045c 1346     		mov	r3, r2
 12485 045e 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 12486 0460 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1835:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 12487              		.loc 1 1835 0
 12488 0464 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12489 0468 524A     		ldr	r2, .L611+20
 12490 046a 1B01     		lsls	r3, r3, #4
 12491 046c 1344     		add	r3, r3, r2
 12492 046e 0C33     		adds	r3, r3, #12
 12493 0470 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12494 0472 03F00103 		and	r3, r3, #1
 12495 0476 002B     		cmp	r3, #0
 12496 0478 0FD0     		beq	.L537
1836:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 12497              		.loc 1 1836 0
 12498 047a 07F11C03 		add	r3, r7, #28
 12499 047e 1846     		mov	r0, r3
 12500 0480 FFF7FEFF 		bl	strlen
 12501 0484 0346     		mov	r3, r0
 12502 0486 1A46     		mov	r2, r3
 12503 0488 07F11C03 		add	r3, r7, #28
 12504 048c 1344     		add	r3, r3, r2
 12505 048e 4A4A     		ldr	r2, .L611+24
 12506 0490 1068     		ldr	r0, [r2]	@ unaligned
 12507 0492 1860     		str	r0, [r3]	@ unaligned
 12508 0494 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12509 0496 9A80     		strh	r2, [r3, #4]	@ unaligned
 12510 0498 0EE0     		b	.L538
 12511              	.L537:
1837:..\src/command_processing.c ****             } else {
1838:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 12512              		.loc 1 1838 0
 12513 049a 07F11C03 		add	r3, r7, #28
 12514 049e 1846     		mov	r0, r3
 12515 04a0 FFF7FEFF 		bl	strlen
 12516 04a4 0346     		mov	r3, r0
 12517 04a6 1A46     		mov	r2, r3
 12518 04a8 07F11C03 		add	r3, r7, #28
 12519 04ac 1344     		add	r3, r3, r2
 12520 04ae 434A     		ldr	r2, .L611+28
 12521 04b0 1068     		ldr	r0, [r2]	@ unaligned
 12522 04b2 1860     		str	r0, [r3]	@ unaligned
 12523 04b4 1279     		ldrb	r2, [r2, #4]
 12524 04b6 1A71     		strb	r2, [r3, #4]
 12525              	.L538:
1839:..\src/command_processing.c ****             }
1840:..\src/command_processing.c ****             strcat(info_string, str);
 12526              		.loc 1 1840 0
 12527 04b8 07F11C03 		add	r3, r7, #28
 12528 04bc 1946     		mov	r1, r3
 12529 04be 7869     		ldr	r0, [r7, #20]
 12530 04c0 FFF7FEFF 		bl	strcat
1841:..\src/command_processing.c ****                         
1842:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 12531              		.loc 1 1842 0
 12532 04c4 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 289


 12533 04c6 FFF7FEFF 		bl	strlen
 12534 04ca 0346     		mov	r3, r0
 12535 04cc 1A46     		mov	r2, r3
 12536 04ce 7B69     		ldr	r3, [r7, #20]
 12537 04d0 1344     		add	r3, r3, r2
 12538 04d2 3B4A     		ldr	r2, .L611+32
 12539 04d4 1D46     		mov	r5, r3
 12540 04d6 1446     		mov	r4, r2
 12541 04d8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12542 04da 2860     		str	r0, [r5]	@ unaligned
 12543 04dc 6960     		str	r1, [r5, #4]	@ unaligned
 12544 04de AA60     		str	r2, [r5, #8]	@ unaligned
 12545 04e0 EB60     		str	r3, [r5, #12]	@ unaligned
 12546 04e2 03CC     		ldmia	r4!, {r0, r1}
 12547 04e4 2861     		str	r0, [r5, #16]	@ unaligned
 12548 04e6 6961     		str	r1, [r5, #20]	@ unaligned
 12549 04e8 2388     		ldrh	r3, [r4]	@ unaligned
 12550 04ea A278     		ldrb	r2, [r4, #2]
 12551 04ec 2B83     		strh	r3, [r5, #24]	@ unaligned
 12552 04ee 1346     		mov	r3, r2
 12553 04f0 AB76     		strb	r3, [r5, #26]
1843:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 12554              		.loc 1 1843 0
 12555 04f2 D7F88430 		ldr	r3, [r7, #132]
 12556 04f6 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 12557 04fa 012B     		cmp	r3, #1
 12558 04fc 0CD1     		bne	.L539
1844:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 12559              		.loc 1 1844 0
 12560 04fe 7869     		ldr	r0, [r7, #20]
 12561 0500 FFF7FEFF 		bl	strlen
 12562 0504 0346     		mov	r3, r0
 12563 0506 1A46     		mov	r2, r3
 12564 0508 7B69     		ldr	r3, [r7, #20]
 12565 050a 1344     		add	r3, r3, r2
 12566 050c 2D4A     		ldr	r2, .L611+36
 12567 050e 1068     		ldr	r0, [r2]	@ unaligned
 12568 0510 1860     		str	r0, [r3]	@ unaligned
 12569 0512 1279     		ldrb	r2, [r2, #4]
 12570 0514 1A71     		strb	r2, [r3, #4]
 12571 0516 09E0     		b	.L540
 12572              	.L539:
1845:..\src/command_processing.c ****             else
1846:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 12573              		.loc 1 1846 0
 12574 0518 7869     		ldr	r0, [r7, #20]
 12575 051a FFF7FEFF 		bl	strlen
 12576 051e 0346     		mov	r3, r0
 12577 0520 1A46     		mov	r2, r3
 12578 0522 7B69     		ldr	r3, [r7, #20]
 12579 0524 1344     		add	r3, r3, r2
 12580 0526 284A     		ldr	r2, .L611+40
 12581 0528 1068     		ldr	r0, [r2]	@ unaligned
 12582 052a 1860     		str	r0, [r3]	@ unaligned
 12583              	.L540:
1847:..\src/command_processing.c ****             
1848:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 290


 12584              		.loc 1 1848 0
 12585 052c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12586 0530 264A     		ldr	r2, .L611+44
 12587 0532 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12588 0534 1A46     		mov	r2, r3
 12589 0536 07F11C03 		add	r3, r7, #28
 12590 053a 2549     		ldr	r1, .L611+48
 12591 053c 1846     		mov	r0, r3
 12592 053e FFF7FEFF 		bl	sprintf
1849:..\src/command_processing.c ****             strcat(info_string, str);
 12593              		.loc 1 1849 0
 12594 0542 07F11C03 		add	r3, r7, #28
 12595 0546 1946     		mov	r1, r3
 12596 0548 7869     		ldr	r0, [r7, #20]
 12597 054a FFF7FEFF 		bl	strcat
1850:..\src/command_processing.c **** 
1851:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 12598              		.loc 1 1851 0
 12599 054e 7869     		ldr	r0, [r7, #20]
 12600 0550 FFF7FEFF 		bl	strlen
 12601 0554 0346     		mov	r3, r0
 12602 0556 1A46     		mov	r2, r3
 12603 0558 7B69     		ldr	r3, [r7, #20]
 12604 055a 1344     		add	r3, r3, r2
 12605 055c 1D4A     		ldr	r2, .L611+52
 12606 055e 1D46     		mov	r5, r3
 12607 0560 1446     		mov	r4, r2
 12608 0562 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12609 0564 2860     		str	r0, [r5]	@ unaligned
 12610 0566 6960     		str	r1, [r5, #4]	@ unaligned
 12611 0568 AA60     		str	r2, [r5, #8]	@ unaligned
 12612 056a EB60     		str	r3, [r5, #12]	@ unaligned
 12613 056c 2068     		ldr	r0, [r4]	@ unaligned
 12614 056e 2861     		str	r0, [r5, #16]	@ unaligned
 12615 0570 A388     		ldrh	r3, [r4, #4]	@ unaligned
 12616 0572 AB82     		strh	r3, [r5, #20]	@ unaligned
1852:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 12617              		.loc 1 1852 0
 12618 0574 7869     		ldr	r0, [r7, #20]
 12619 0576 FFF7FEFF 		bl	strlen
 12620 057a 0346     		mov	r3, r0
 12621 057c 1A46     		mov	r2, r3
 12622 057e 7B69     		ldr	r3, [r7, #20]
 12623 0580 1344     		add	r3, r3, r2
 12624 0582 154A     		ldr	r2, .L611+56
 12625 0584 1C46     		mov	r4, r3
 12626 0586 1346     		mov	r3, r2
 12627 0588 07CB     		ldmia	r3!, {r0, r1, r2}
 12628 058a 2060     		str	r0, [r4]	@ unaligned
 12629 058c 6160     		str	r1, [r4, #4]	@ unaligned
 12630 058e A260     		str	r2, [r4, #8]	@ unaligned
 12631 0590 1A88     		ldrh	r2, [r3]	@ unaligned
 12632 0592 9B78     		ldrb	r3, [r3, #2]
 12633 0594 A281     		strh	r2, [r4, #12]	@ unaligned
 12634 0596 A373     		strb	r3, [r4, #14]
1853:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 12635              		.loc 1 1853 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 291


 12636 0598 0023     		movs	r3, #0
 12637 059a C7F89430 		str	r3, [r7, #148]
 12638 059e 5BE0     		b	.L541
 12639              	.L612:
 12640              		.align	2
 12641              	.L611:
 12642 05a0 B80E0000 		.word	.LC142
 12643 05a4 00000000 		.word	g_refOld
 12644 05a8 C80E0000 		.word	.LC143
 12645 05ac 840D0000 		.word	.LC125
 12646 05b0 CC0E0000 		.word	.LC144
 12647 05b4 00000000 		.word	g_ref
 12648 05b8 DC0E0000 		.word	.LC145
 12649 05bc E40E0000 		.word	.LC146
 12650 05c0 EC0E0000 		.word	.LC147
 12651 05c4 080F0000 		.word	.LC148
 12652 05c8 100F0000 		.word	.LC149
 12653 05cc 00000000 		.word	dev_pwm_limit
 12654 05d0 140F0000 		.word	.LC150
 12655 05d4 240F0000 		.word	.LC151
 12656 05d8 3C0F0000 		.word	.LC152
 12657              	.L543:
1854:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12658              		.loc 1 1854 0
 12659 05dc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12660 05e0 9249     		ldr	r1, .L613
 12661 05e2 1346     		mov	r3, r2
 12662 05e4 5B00     		lsls	r3, r3, #1
 12663 05e6 1344     		add	r3, r3, r2
 12664 05e8 9B00     		lsls	r3, r3, #2
 12665 05ea D7F89420 		ldr	r2, [r7, #148]
 12666 05ee 1344     		add	r3, r3, r2
 12667 05f0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 12668 05f4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12669 05f8 D7F88C00 		ldr	r0, [r7, #140]
 12670 05fc 1346     		mov	r3, r2
 12671 05fe 5B00     		lsls	r3, r3, #1
 12672 0600 1344     		add	r3, r3, r2
 12673 0602 1B01     		lsls	r3, r3, #4
 12674 0604 C218     		adds	r2, r0, r3
 12675 0606 D7F89430 		ldr	r3, [r7, #148]
 12676 060a 1344     		add	r3, r3, r2
 12677 060c 03F29513 		addw	r3, r3, #405
 12678 0610 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12679 0612 41FA03F2 		asr	r2, r1, r3
 12680 0616 07F11C03 		add	r3, r7, #28
 12681 061a 8549     		ldr	r1, .L613+4
 12682 061c 1846     		mov	r0, r3
 12683 061e FFF7FEFF 		bl	sprintf
1855:..\src/command_processing.c ****                 strcat(info_string, str);
 12684              		.loc 1 1855 0
 12685 0622 07F11C03 		add	r3, r7, #28
 12686 0626 1946     		mov	r1, r3
 12687 0628 7869     		ldr	r0, [r7, #20]
 12688 062a FFF7FEFF 		bl	strcat
1856:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12689              		.loc 1 1856 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 292


 12690 062e D7F89430 		ldr	r3, [r7, #148]
 12691 0632 022B     		cmp	r3, #2
 12692 0634 0BD0     		beq	.L542
1857:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12693              		.loc 1 1857 0
 12694 0636 7869     		ldr	r0, [r7, #20]
 12695 0638 FFF7FEFF 		bl	strlen
 12696 063c 0346     		mov	r3, r0
 12697 063e 1A46     		mov	r2, r3
 12698 0640 7B69     		ldr	r3, [r7, #20]
 12699 0642 1344     		add	r3, r3, r2
 12700 0644 7B4A     		ldr	r2, .L613+8
 12701 0646 1188     		ldrh	r1, [r2]	@ unaligned
 12702 0648 9278     		ldrb	r2, [r2, #2]
 12703 064a 1980     		strh	r1, [r3]	@ unaligned
 12704 064c 9A70     		strb	r2, [r3, #2]
 12705              	.L542:
1853:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12706              		.loc 1 1853 0 discriminator 2
 12707 064e D7F89430 		ldr	r3, [r7, #148]
 12708 0652 0133     		adds	r3, r3, #1
 12709 0654 C7F89430 		str	r3, [r7, #148]
 12710              	.L541:
1853:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12711              		.loc 1 1853 0 is_stmt 0 discriminator 1
 12712 0658 D7F89430 		ldr	r3, [r7, #148]
 12713 065c 022B     		cmp	r3, #2
 12714 065e BDDD     		ble	.L543
1858:..\src/command_processing.c ****                 }                
1859:..\src/command_processing.c ****             }
1860:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12715              		.loc 1 1860 0 is_stmt 1
 12716 0660 7869     		ldr	r0, [r7, #20]
 12717 0662 FFF7FEFF 		bl	strlen
 12718 0666 0346     		mov	r3, r0
 12719 0668 1A46     		mov	r2, r3
 12720 066a 7B69     		ldr	r3, [r7, #20]
 12721 066c 1344     		add	r3, r3, r2
 12722 066e 724A     		ldr	r2, .L613+12
 12723 0670 1188     		ldrh	r1, [r2]	@ unaligned
 12724 0672 9278     		ldrb	r2, [r2, #2]
 12725 0674 1980     		strh	r1, [r3]	@ unaligned
 12726 0676 9A70     		strb	r2, [r3, #2]
1861:..\src/command_processing.c **** 
1862:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 12727              		.loc 1 1862 0
 12728 0678 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12729 067c 591C     		adds	r1, r3, #1
 12730 067e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12731 0682 6E4A     		ldr	r2, .L613+16
 12732 0684 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12733 0688 07F11C00 		add	r0, r7, #28
 12734 068c 0A46     		mov	r2, r1
 12735 068e 6C49     		ldr	r1, .L613+20
 12736 0690 FFF7FEFF 		bl	sprintf
1863:..\src/command_processing.c ****             strcat(info_string, str);
 12737              		.loc 1 1863 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 293


 12738 0694 07F11C03 		add	r3, r7, #28
 12739 0698 1946     		mov	r1, r3
 12740 069a 7869     		ldr	r0, [r7, #20]
 12741 069c FFF7FEFF 		bl	strcat
1864:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12742              		.loc 1 1864 0
 12743 06a0 7869     		ldr	r0, [r7, #20]
 12744 06a2 FFF7FEFF 		bl	strlen
 12745 06a6 0346     		mov	r3, r0
 12746 06a8 1A46     		mov	r2, r3
 12747 06aa 7B69     		ldr	r3, [r7, #20]
 12748 06ac 1344     		add	r3, r3, r2
 12749 06ae 624A     		ldr	r2, .L613+12
 12750 06b0 1188     		ldrh	r1, [r2]	@ unaligned
 12751 06b2 9278     		ldrb	r2, [r2, #2]
 12752 06b4 1980     		strh	r1, [r3]	@ unaligned
 12753 06b6 9A70     		strb	r2, [r3, #2]
1865:..\src/command_processing.c ****             
1866:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 12754              		.loc 1 1866 0
 12755 06b8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12756 06bc 591C     		adds	r1, r3, #1
 12757 06be 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12758 06c2 604A     		ldr	r2, .L613+24
 12759 06c4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12760 06c8 07F11C00 		add	r0, r7, #28
 12761 06cc 0A46     		mov	r2, r1
 12762 06ce 5E49     		ldr	r1, .L613+28
 12763 06d0 FFF7FEFF 		bl	sprintf
1867:..\src/command_processing.c ****             strcat(info_string, str);
 12764              		.loc 1 1867 0
 12765 06d4 07F11C03 		add	r3, r7, #28
 12766 06d8 1946     		mov	r1, r3
 12767 06da 7869     		ldr	r0, [r7, #20]
 12768 06dc FFF7FEFF 		bl	strcat
1868:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12769              		.loc 1 1868 0
 12770 06e0 7869     		ldr	r0, [r7, #20]
 12771 06e2 FFF7FEFF 		bl	strlen
 12772 06e6 0346     		mov	r3, r0
 12773 06e8 1A46     		mov	r2, r3
 12774 06ea 7B69     		ldr	r3, [r7, #20]
 12775 06ec 1344     		add	r3, r3, r2
 12776 06ee 524A     		ldr	r2, .L613+12
 12777 06f0 1188     		ldrh	r1, [r2]	@ unaligned
 12778 06f2 9278     		ldrb	r2, [r2, #2]
 12779 06f4 1980     		strh	r1, [r3]	@ unaligned
 12780 06f6 9A70     		strb	r2, [r3, #2]
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 12781              		.loc 1 1870 0
 12782 06f8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12783 06fc 5C1C     		adds	r4, r3, #1
 12784 06fe 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12785 0702 4A49     		ldr	r1, .L613
 12786 0704 1346     		mov	r3, r2
 12787 0706 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 294


 12788 0708 1344     		add	r3, r3, r2
 12789 070a 1B01     		lsls	r3, r3, #4
 12790 070c 0B44     		add	r3, r3, r1
 12791 070e 0C33     		adds	r3, r3, #12
 12792 0710 1B68     		ldr	r3, [r3]
 12793 0712 07F11C00 		add	r0, r7, #28
 12794 0716 2246     		mov	r2, r4
 12795 0718 4C49     		ldr	r1, .L613+32
 12796 071a FFF7FEFF 		bl	sprintf
1871:..\src/command_processing.c ****             strcat(info_string, str);
 12797              		.loc 1 1871 0
 12798 071e 07F11C03 		add	r3, r7, #28
 12799 0722 1946     		mov	r1, r3
 12800 0724 7869     		ldr	r0, [r7, #20]
 12801 0726 FFF7FEFF 		bl	strcat
1872:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12802              		.loc 1 1872 0
 12803 072a 7869     		ldr	r0, [r7, #20]
 12804 072c FFF7FEFF 		bl	strlen
 12805 0730 0346     		mov	r3, r0
 12806 0732 1A46     		mov	r2, r3
 12807 0734 7B69     		ldr	r3, [r7, #20]
 12808 0736 1344     		add	r3, r3, r2
 12809 0738 3F4A     		ldr	r2, .L613+12
 12810 073a 1188     		ldrh	r1, [r2]	@ unaligned
 12811 073c 9278     		ldrb	r2, [r2, #2]
 12812 073e 1980     		strh	r1, [r3]	@ unaligned
 12813 0740 9A70     		strb	r2, [r3, #2]
1873:..\src/command_processing.c ****             
1874:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 12814              		.loc 1 1874 0
 12815 0742 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12816 0746 5A1C     		adds	r2, r3, #1
 12817 0748 07F11C03 		add	r3, r7, #28
 12818 074c 4049     		ldr	r1, .L613+36
 12819 074e 1846     		mov	r0, r3
 12820 0750 FFF7FEFF 		bl	sprintf
1875:..\src/command_processing.c ****             strcat(info_string, str);
 12821              		.loc 1 1875 0
 12822 0754 07F11C03 		add	r3, r7, #28
 12823 0758 1946     		mov	r1, r3
 12824 075a 7869     		ldr	r0, [r7, #20]
 12825 075c FFF7FEFF 		bl	strcat
1876:..\src/command_processing.c **** 
1877:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 12826              		.loc 1 1877 0
 12827 0760 7869     		ldr	r0, [r7, #20]
 12828 0762 FFF7FEFF 		bl	strlen
 12829 0766 0346     		mov	r3, r0
 12830 0768 1A46     		mov	r2, r3
 12831 076a 7B69     		ldr	r3, [r7, #20]
 12832 076c 1344     		add	r3, r3, r2
 12833 076e 394A     		ldr	r2, .L613+40
 12834 0770 1D46     		mov	r5, r3
 12835 0772 1446     		mov	r4, r2
 12836 0774 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12837 0776 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 295


 12838 0778 6960     		str	r1, [r5, #4]	@ unaligned
 12839 077a AA60     		str	r2, [r5, #8]	@ unaligned
 12840 077c EB60     		str	r3, [r5, #12]	@ unaligned
 12841 077e 2378     		ldrb	r3, [r4]
 12842 0780 2B74     		strb	r3, [r5, #16]
1878:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 12843              		.loc 1 1878 0
 12844 0782 D7F88430 		ldr	r3, [r7, #132]
 12845 0786 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12846 078a 032B     		cmp	r3, #3
 12847 078c 6CD0     		beq	.L544
1879:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 12848              		.loc 1 1879 0
 12849 078e D7F88430 		ldr	r3, [r7, #132]
 12850 0792 1B68     		ldr	r3, [r3]
 12851 0794 1846     		mov	r0, r3
 12852 0796 FFF7FEFF 		bl	__aeabi_i2d
 12853 079a 4FF00002 		mov	r2, #0
 12854 079e 2E4B     		ldr	r3, .L613+44
 12855 07a0 FFF7FEFF 		bl	__aeabi_ddiv
 12856 07a4 0346     		mov	r3, r0
 12857 07a6 0C46     		mov	r4, r1
 12858 07a8 07F11C00 		add	r0, r7, #28
 12859 07ac 1A46     		mov	r2, r3
 12860 07ae 2346     		mov	r3, r4
 12861 07b0 2A49     		ldr	r1, .L613+48
 12862 07b2 FFF7FEFF 		bl	sprintf
1880:..\src/command_processing.c ****                 strcat(info_string, str);
 12863              		.loc 1 1880 0
 12864 07b6 07F11C03 		add	r3, r7, #28
 12865 07ba 1946     		mov	r1, r3
 12866 07bc 7869     		ldr	r0, [r7, #20]
 12867 07be FFF7FEFF 		bl	strcat
1881:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 12868              		.loc 1 1881 0
 12869 07c2 D7F88430 		ldr	r3, [r7, #132]
 12870 07c6 5B68     		ldr	r3, [r3, #4]
 12871 07c8 1846     		mov	r0, r3
 12872 07ca FFF7FEFF 		bl	__aeabi_i2d
 12873 07ce 4FF00002 		mov	r2, #0
 12874 07d2 214B     		ldr	r3, .L613+44
 12875 07d4 FFF7FEFF 		bl	__aeabi_ddiv
 12876 07d8 0346     		mov	r3, r0
 12877 07da 0C46     		mov	r4, r1
 12878 07dc 07F11C00 		add	r0, r7, #28
 12879 07e0 1A46     		mov	r2, r3
 12880 07e2 2346     		mov	r3, r4
 12881 07e4 1E49     		ldr	r1, .L613+52
 12882 07e6 FFF7FEFF 		bl	sprintf
1882:..\src/command_processing.c ****                 strcat(info_string, str);
 12883              		.loc 1 1882 0
 12884 07ea 07F11C03 		add	r3, r7, #28
 12885 07ee 1946     		mov	r1, r3
 12886 07f0 7869     		ldr	r0, [r7, #20]
 12887 07f2 FFF7FEFF 		bl	strcat
1883:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 12888              		.loc 1 1883 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 296


 12889 07f6 D7F88430 		ldr	r3, [r7, #132]
 12890 07fa 9B68     		ldr	r3, [r3, #8]
 12891 07fc 1846     		mov	r0, r3
 12892 07fe FFF7FEFF 		bl	__aeabi_i2d
 12893 0802 4FF00002 		mov	r2, #0
 12894 0806 144B     		ldr	r3, .L613+44
 12895 0808 FFF7FEFF 		bl	__aeabi_ddiv
 12896 080c 0346     		mov	r3, r0
 12897 080e 0C46     		mov	r4, r1
 12898 0810 07F11C00 		add	r0, r7, #28
 12899 0814 1A46     		mov	r2, r3
 12900 0816 2346     		mov	r3, r4
 12901 0818 1249     		ldr	r1, .L613+56
 12902 081a FFF7FEFF 		bl	sprintf
1884:..\src/command_processing.c ****                 strcat(info_string, str);
 12903              		.loc 1 1884 0
 12904 081e 07F11C03 		add	r3, r7, #28
 12905 0822 1946     		mov	r1, r3
 12906 0824 7869     		ldr	r0, [r7, #20]
 12907 0826 FFF7FEFF 		bl	strcat
 12908 082a 6BE0     		b	.L545
 12909              	.L614:
 12910              		.align	2
 12911              	.L613:
 12912 082c 00000000 		.word	g_meas
 12913 0830 4C0F0000 		.word	.LC153
 12914 0834 500F0000 		.word	.LC154
 12915 0838 840D0000 		.word	.LC125
 12916 083c 00000000 		.word	dev_tension
 12917 0840 540F0000 		.word	.LC155
 12918 0844 00000000 		.word	pow_tension
 12919 0848 740F0000 		.word	.LC156
 12920 084c 9C0F0000 		.word	.LC157
 12921 0850 B40F0000 		.word	.LC158
 12922 0854 D00F0000 		.word	.LC159
 12923 0858 0000F040 		.word	1089470464
 12924 085c E40F0000 		.word	.LC160
 12925 0860 F00F0000 		.word	.LC161
 12926 0864 FC0F0000 		.word	.LC162
 12927              	.L544:
1885:..\src/command_processing.c ****             }
1886:..\src/command_processing.c ****             else { 
1887:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 12928              		.loc 1 1887 0
 12929 0868 D7F88430 		ldr	r3, [r7, #132]
 12930 086c 9B69     		ldr	r3, [r3, #24]
 12931 086e 1846     		mov	r0, r3
 12932 0870 FFF7FEFF 		bl	__aeabi_i2d
 12933 0874 4FF00002 		mov	r2, #0
 12934 0878 CC4B     		ldr	r3, .L615
 12935 087a FFF7FEFF 		bl	__aeabi_ddiv
 12936 087e 0346     		mov	r3, r0
 12937 0880 0C46     		mov	r4, r1
 12938 0882 07F11C00 		add	r0, r7, #28
 12939 0886 1A46     		mov	r2, r3
 12940 0888 2346     		mov	r3, r4
 12941 088a C949     		ldr	r1, .L615+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 297


 12942 088c FFF7FEFF 		bl	sprintf
1888:..\src/command_processing.c ****                 strcat(info_string, str);
 12943              		.loc 1 1888 0
 12944 0890 07F11C03 		add	r3, r7, #28
 12945 0894 1946     		mov	r1, r3
 12946 0896 7869     		ldr	r0, [r7, #20]
 12947 0898 FFF7FEFF 		bl	strcat
1889:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 12948              		.loc 1 1889 0
 12949 089c D7F88430 		ldr	r3, [r7, #132]
 12950 08a0 DB69     		ldr	r3, [r3, #28]
 12951 08a2 1846     		mov	r0, r3
 12952 08a4 FFF7FEFF 		bl	__aeabi_i2d
 12953 08a8 4FF00002 		mov	r2, #0
 12954 08ac BF4B     		ldr	r3, .L615
 12955 08ae FFF7FEFF 		bl	__aeabi_ddiv
 12956 08b2 0346     		mov	r3, r0
 12957 08b4 0C46     		mov	r4, r1
 12958 08b6 07F11C00 		add	r0, r7, #28
 12959 08ba 1A46     		mov	r2, r3
 12960 08bc 2346     		mov	r3, r4
 12961 08be BD49     		ldr	r1, .L615+8
 12962 08c0 FFF7FEFF 		bl	sprintf
1890:..\src/command_processing.c ****                 strcat(info_string, str);
 12963              		.loc 1 1890 0
 12964 08c4 07F11C03 		add	r3, r7, #28
 12965 08c8 1946     		mov	r1, r3
 12966 08ca 7869     		ldr	r0, [r7, #20]
 12967 08cc FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 12968              		.loc 1 1891 0
 12969 08d0 D7F88430 		ldr	r3, [r7, #132]
 12970 08d4 1B6A     		ldr	r3, [r3, #32]
 12971 08d6 1846     		mov	r0, r3
 12972 08d8 FFF7FEFF 		bl	__aeabi_i2d
 12973 08dc 4FF00002 		mov	r2, #0
 12974 08e0 B24B     		ldr	r3, .L615
 12975 08e2 FFF7FEFF 		bl	__aeabi_ddiv
 12976 08e6 0346     		mov	r3, r0
 12977 08e8 0C46     		mov	r4, r1
 12978 08ea 07F11C00 		add	r0, r7, #28
 12979 08ee 1A46     		mov	r2, r3
 12980 08f0 2346     		mov	r3, r4
 12981 08f2 B149     		ldr	r1, .L615+12
 12982 08f4 FFF7FEFF 		bl	sprintf
1892:..\src/command_processing.c ****                 strcat(info_string, str);
 12983              		.loc 1 1892 0
 12984 08f8 07F11C03 		add	r3, r7, #28
 12985 08fc 1946     		mov	r1, r3
 12986 08fe 7869     		ldr	r0, [r7, #20]
 12987 0900 FFF7FEFF 		bl	strcat
 12988              	.L545:
1893:..\src/command_processing.c ****             }
1894:..\src/command_processing.c **** 
1895:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 12989              		.loc 1 1895 0
 12990 0904 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 298


 12991 0906 FFF7FEFF 		bl	strlen
 12992 090a 0346     		mov	r3, r0
 12993 090c 1A46     		mov	r2, r3
 12994 090e 7B69     		ldr	r3, [r7, #20]
 12995 0910 1344     		add	r3, r3, r2
 12996 0912 AA4A     		ldr	r2, .L615+16
 12997 0914 1D46     		mov	r5, r3
 12998 0916 1446     		mov	r4, r2
 12999 0918 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13000 091a 2860     		str	r0, [r5]	@ unaligned
 13001 091c 6960     		str	r1, [r5, #4]	@ unaligned
 13002 091e AA60     		str	r2, [r5, #8]	@ unaligned
 13003 0920 EB60     		str	r3, [r5, #12]	@ unaligned
 13004 0922 03CC     		ldmia	r4!, {r0, r1}
 13005 0924 2861     		str	r0, [r5, #16]	@ unaligned
 13006 0926 6961     		str	r1, [r5, #20]	@ unaligned
 13007 0928 2378     		ldrb	r3, [r4]
 13008 092a 2B76     		strb	r3, [r5, #24]
1896:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13009              		.loc 1 1896 0
 13010 092c D7F88430 		ldr	r3, [r7, #132]
 13011 0930 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13012 0934 032B     		cmp	r3, #3
 13013 0936 4ED0     		beq	.L546
1897:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 13014              		.loc 1 1897 0
 13015 0938 D7F88430 		ldr	r3, [r7, #132]
 13016 093c DB68     		ldr	r3, [r3, #12]
 13017 093e 1846     		mov	r0, r3
 13018 0940 FFF7FEFF 		bl	__aeabi_i2d
 13019 0944 4FF00002 		mov	r2, #0
 13020 0948 984B     		ldr	r3, .L615
 13021 094a FFF7FEFF 		bl	__aeabi_ddiv
 13022 094e 0346     		mov	r3, r0
 13023 0950 0C46     		mov	r4, r1
 13024 0952 07F11C00 		add	r0, r7, #28
 13025 0956 1A46     		mov	r2, r3
 13026 0958 2346     		mov	r3, r4
 13027 095a 9549     		ldr	r1, .L615+4
 13028 095c FFF7FEFF 		bl	sprintf
1898:..\src/command_processing.c ****                 strcat(info_string, str);
 13029              		.loc 1 1898 0
 13030 0960 07F11C03 		add	r3, r7, #28
 13031 0964 1946     		mov	r1, r3
 13032 0966 7869     		ldr	r0, [r7, #20]
 13033 0968 FFF7FEFF 		bl	strcat
1899:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 13034              		.loc 1 1899 0
 13035 096c D7F88430 		ldr	r3, [r7, #132]
 13036 0970 1B69     		ldr	r3, [r3, #16]
 13037 0972 1846     		mov	r0, r3
 13038 0974 FFF7FEFF 		bl	__aeabi_i2d
 13039 0978 4FF00002 		mov	r2, #0
 13040 097c 8B4B     		ldr	r3, .L615
 13041 097e FFF7FEFF 		bl	__aeabi_ddiv
 13042 0982 0346     		mov	r3, r0
 13043 0984 0C46     		mov	r4, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 299


 13044 0986 07F11C00 		add	r0, r7, #28
 13045 098a 1A46     		mov	r2, r3
 13046 098c 2346     		mov	r3, r4
 13047 098e 8949     		ldr	r1, .L615+8
 13048 0990 FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****                 strcat(info_string, str);
 13049              		.loc 1 1900 0
 13050 0994 07F11C03 		add	r3, r7, #28
 13051 0998 1946     		mov	r1, r3
 13052 099a 7869     		ldr	r0, [r7, #20]
 13053 099c FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 13054              		.loc 1 1901 0
 13055 09a0 D7F88430 		ldr	r3, [r7, #132]
 13056 09a4 5B69     		ldr	r3, [r3, #20]
 13057 09a6 1846     		mov	r0, r3
 13058 09a8 FFF7FEFF 		bl	__aeabi_i2d
 13059 09ac 4FF00002 		mov	r2, #0
 13060 09b0 7E4B     		ldr	r3, .L615
 13061 09b2 FFF7FEFF 		bl	__aeabi_ddiv
 13062 09b6 0346     		mov	r3, r0
 13063 09b8 0C46     		mov	r4, r1
 13064 09ba 07F11C00 		add	r0, r7, #28
 13065 09be 1A46     		mov	r2, r3
 13066 09c0 2346     		mov	r3, r4
 13067 09c2 7D49     		ldr	r1, .L615+12
 13068 09c4 FFF7FEFF 		bl	sprintf
1902:..\src/command_processing.c ****                 strcat(info_string, str);
 13069              		.loc 1 1902 0
 13070 09c8 07F11C03 		add	r3, r7, #28
 13071 09cc 1946     		mov	r1, r3
 13072 09ce 7869     		ldr	r0, [r7, #20]
 13073 09d0 FFF7FEFF 		bl	strcat
 13074 09d4 4DE0     		b	.L547
 13075              	.L546:
1903:..\src/command_processing.c **** 
1904:..\src/command_processing.c ****             }
1905:..\src/command_processing.c ****             else {
1906:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 13076              		.loc 1 1906 0
 13077 09d6 D7F88430 		ldr	r3, [r7, #132]
 13078 09da 5B6A     		ldr	r3, [r3, #36]
 13079 09dc 1846     		mov	r0, r3
 13080 09de FFF7FEFF 		bl	__aeabi_i2d
 13081 09e2 4FF00002 		mov	r2, #0
 13082 09e6 714B     		ldr	r3, .L615
 13083 09e8 FFF7FEFF 		bl	__aeabi_ddiv
 13084 09ec 0346     		mov	r3, r0
 13085 09ee 0C46     		mov	r4, r1
 13086 09f0 07F11C00 		add	r0, r7, #28
 13087 09f4 1A46     		mov	r2, r3
 13088 09f6 2346     		mov	r3, r4
 13089 09f8 6D49     		ldr	r1, .L615+4
 13090 09fa FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 13091              		.loc 1 1907 0
 13092 09fe 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 300


 13093 0a02 1946     		mov	r1, r3
 13094 0a04 7869     		ldr	r0, [r7, #20]
 13095 0a06 FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 13096              		.loc 1 1908 0
 13097 0a0a D7F88430 		ldr	r3, [r7, #132]
 13098 0a0e 9B6A     		ldr	r3, [r3, #40]
 13099 0a10 1846     		mov	r0, r3
 13100 0a12 FFF7FEFF 		bl	__aeabi_i2d
 13101 0a16 4FF00002 		mov	r2, #0
 13102 0a1a 644B     		ldr	r3, .L615
 13103 0a1c FFF7FEFF 		bl	__aeabi_ddiv
 13104 0a20 0346     		mov	r3, r0
 13105 0a22 0C46     		mov	r4, r1
 13106 0a24 07F11C00 		add	r0, r7, #28
 13107 0a28 1A46     		mov	r2, r3
 13108 0a2a 2346     		mov	r3, r4
 13109 0a2c 6149     		ldr	r1, .L615+8
 13110 0a2e FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 13111              		.loc 1 1909 0
 13112 0a32 07F11C03 		add	r3, r7, #28
 13113 0a36 1946     		mov	r1, r3
 13114 0a38 7869     		ldr	r0, [r7, #20]
 13115 0a3a FFF7FEFF 		bl	strcat
1910:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 13116              		.loc 1 1910 0
 13117 0a3e D7F88430 		ldr	r3, [r7, #132]
 13118 0a42 DB6A     		ldr	r3, [r3, #44]
 13119 0a44 1846     		mov	r0, r3
 13120 0a46 FFF7FEFF 		bl	__aeabi_i2d
 13121 0a4a 4FF00002 		mov	r2, #0
 13122 0a4e 574B     		ldr	r3, .L615
 13123 0a50 FFF7FEFF 		bl	__aeabi_ddiv
 13124 0a54 0346     		mov	r3, r0
 13125 0a56 0C46     		mov	r4, r1
 13126 0a58 07F11C00 		add	r0, r7, #28
 13127 0a5c 1A46     		mov	r2, r3
 13128 0a5e 2346     		mov	r3, r4
 13129 0a60 5549     		ldr	r1, .L615+12
 13130 0a62 FFF7FEFF 		bl	sprintf
1911:..\src/command_processing.c ****                 strcat(info_string, str);
 13131              		.loc 1 1911 0
 13132 0a66 07F11C03 		add	r3, r7, #28
 13133 0a6a 1946     		mov	r1, r3
 13134 0a6c 7869     		ldr	r0, [r7, #20]
 13135 0a6e FFF7FEFF 		bl	strcat
 13136              	.L547:
1912:..\src/command_processing.c ****             }
1913:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 13137              		.loc 1 1913 0
 13138 0a72 D7F88430 		ldr	r3, [r7, #132]
 13139 0a76 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 13140 0a7a 012B     		cmp	r3, #1
 13141 0a7c 14D1     		bne	.L548
1914:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 13142              		.loc 1 1914 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 301


 13143 0a7e 7869     		ldr	r0, [r7, #20]
 13144 0a80 FFF7FEFF 		bl	strlen
 13145 0a84 0346     		mov	r3, r0
 13146 0a86 1A46     		mov	r2, r3
 13147 0a88 7B69     		ldr	r3, [r7, #20]
 13148 0a8a 1344     		add	r3, r3, r2
 13149 0a8c 4C4A     		ldr	r2, .L615+20
 13150 0a8e 1D46     		mov	r5, r3
 13151 0a90 1446     		mov	r4, r2
 13152 0a92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13153 0a94 2860     		str	r0, [r5]	@ unaligned
 13154 0a96 6960     		str	r1, [r5, #4]	@ unaligned
 13155 0a98 AA60     		str	r2, [r5, #8]	@ unaligned
 13156 0a9a EB60     		str	r3, [r5, #12]	@ unaligned
 13157 0a9c 03CC     		ldmia	r4!, {r0, r1}
 13158 0a9e 2861     		str	r0, [r5, #16]	@ unaligned
 13159 0aa0 6961     		str	r1, [r5, #20]	@ unaligned
 13160 0aa2 2388     		ldrh	r3, [r4]	@ unaligned
 13161 0aa4 2B83     		strh	r3, [r5, #24]	@ unaligned
 13162 0aa6 13E0     		b	.L549
 13163              	.L548:
1915:..\src/command_processing.c ****             else
1916:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 13164              		.loc 1 1916 0
 13165 0aa8 7869     		ldr	r0, [r7, #20]
 13166 0aaa FFF7FEFF 		bl	strlen
 13167 0aae 0346     		mov	r3, r0
 13168 0ab0 1A46     		mov	r2, r3
 13169 0ab2 7B69     		ldr	r3, [r7, #20]
 13170 0ab4 1344     		add	r3, r3, r2
 13171 0ab6 434A     		ldr	r2, .L615+24
 13172 0ab8 1D46     		mov	r5, r3
 13173 0aba 1446     		mov	r4, r2
 13174 0abc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13175 0abe 2860     		str	r0, [r5]	@ unaligned
 13176 0ac0 6960     		str	r1, [r5, #4]	@ unaligned
 13177 0ac2 AA60     		str	r2, [r5, #8]	@ unaligned
 13178 0ac4 EB60     		str	r3, [r5, #12]	@ unaligned
 13179 0ac6 03CC     		ldmia	r4!, {r0, r1}
 13180 0ac8 2861     		str	r0, [r5, #16]	@ unaligned
 13181 0aca 6961     		str	r1, [r5, #20]	@ unaligned
 13182 0acc 2378     		ldrb	r3, [r4]
 13183 0ace 2B76     		strb	r3, [r5, #24]
 13184              	.L549:
1917:..\src/command_processing.c **** 
1918:..\src/command_processing.c ****             switch(MOT->input_mode) {
 13185              		.loc 1 1918 0
 13186 0ad0 D7F88430 		ldr	r3, [r7, #132]
 13187 0ad4 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 13188 0ad8 052B     		cmp	r3, #5
 13189 0ada 00F2AC80 		bhi	.L550
 13190 0ade 01A2     		adr	r2, .L552
 13191 0ae0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13192              		.p2align 2
 13193              	.L552:
 13194 0ae4 FD0A0000 		.word	.L551+1
 13195 0ae8 210B0000 		.word	.L553+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 302


 13196 0aec 490B0000 		.word	.L554+1
 13197 0af0 7B0B0000 		.word	.L555+1
 13198 0af4 D90B0000 		.word	.L556+1
 13199 0af8 070C0000 		.word	.L557+1
 13200              		.p2align 1
 13201              	.L551:
1919:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1920:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 13202              		.loc 1 1920 0
 13203 0afc 7869     		ldr	r0, [r7, #20]
 13204 0afe FFF7FEFF 		bl	strlen
 13205 0b02 0346     		mov	r3, r0
 13206 0b04 1A46     		mov	r2, r3
 13207 0b06 7B69     		ldr	r3, [r7, #20]
 13208 0b08 1344     		add	r3, r3, r2
 13209 0b0a 2F4A     		ldr	r2, .L615+28
 13210 0b0c 1D46     		mov	r5, r3
 13211 0b0e 1446     		mov	r4, r2
 13212 0b10 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13213 0b12 2860     		str	r0, [r5]	@ unaligned
 13214 0b14 6960     		str	r1, [r5, #4]	@ unaligned
 13215 0b16 AA60     		str	r2, [r5, #8]	@ unaligned
 13216 0b18 EB60     		str	r3, [r5, #12]	@ unaligned
 13217 0b1a 2388     		ldrh	r3, [r4]	@ unaligned
 13218 0b1c 2B82     		strh	r3, [r5, #16]	@ unaligned
1921:..\src/command_processing.c ****                     break;
 13219              		.loc 1 1921 0
 13220 0b1e 8AE0     		b	.L550
 13221              	.L553:
1922:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1923:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 13222              		.loc 1 1923 0
 13223 0b20 7869     		ldr	r0, [r7, #20]
 13224 0b22 FFF7FEFF 		bl	strlen
 13225 0b26 0346     		mov	r3, r0
 13226 0b28 1A46     		mov	r2, r3
 13227 0b2a 7B69     		ldr	r3, [r7, #20]
 13228 0b2c 1344     		add	r3, r3, r2
 13229 0b2e 274A     		ldr	r2, .L615+32
 13230 0b30 1D46     		mov	r5, r3
 13231 0b32 1446     		mov	r4, r2
 13232 0b34 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13233 0b36 2860     		str	r0, [r5]	@ unaligned
 13234 0b38 6960     		str	r1, [r5, #4]	@ unaligned
 13235 0b3a AA60     		str	r2, [r5, #8]	@ unaligned
 13236 0b3c EB60     		str	r3, [r5, #12]	@ unaligned
 13237 0b3e 2068     		ldr	r0, [r4]	@ unaligned
 13238 0b40 2861     		str	r0, [r5, #16]	@ unaligned
 13239 0b42 2379     		ldrb	r3, [r4, #4]
 13240 0b44 2B75     		strb	r3, [r5, #20]
1924:..\src/command_processing.c ****                     break;
 13241              		.loc 1 1924 0
 13242 0b46 76E0     		b	.L550
 13243              	.L554:
1925:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1926:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 13244              		.loc 1 1926 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 303


 13245 0b48 7869     		ldr	r0, [r7, #20]
 13246 0b4a FFF7FEFF 		bl	strlen
 13247 0b4e 0346     		mov	r3, r0
 13248 0b50 1A46     		mov	r2, r3
 13249 0b52 7B69     		ldr	r3, [r7, #20]
 13250 0b54 1344     		add	r3, r3, r2
 13251 0b56 1E4A     		ldr	r2, .L615+36
 13252 0b58 1D46     		mov	r5, r3
 13253 0b5a 1446     		mov	r4, r2
 13254 0b5c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13255 0b5e 2860     		str	r0, [r5]	@ unaligned
 13256 0b60 6960     		str	r1, [r5, #4]	@ unaligned
 13257 0b62 AA60     		str	r2, [r5, #8]	@ unaligned
 13258 0b64 EB60     		str	r3, [r5, #12]	@ unaligned
 13259 0b66 07CC     		ldmia	r4!, {r0, r1, r2}
 13260 0b68 2861     		str	r0, [r5, #16]	@ unaligned
 13261 0b6a 6961     		str	r1, [r5, #20]	@ unaligned
 13262 0b6c AA61     		str	r2, [r5, #24]	@ unaligned
 13263 0b6e 2388     		ldrh	r3, [r4]	@ unaligned
 13264 0b70 A278     		ldrb	r2, [r4, #2]
 13265 0b72 AB83     		strh	r3, [r5, #28]	@ unaligned
 13266 0b74 1346     		mov	r3, r2
 13267 0b76 AB77     		strb	r3, [r5, #30]
1927:..\src/command_processing.c ****                     break;
 13268              		.loc 1 1927 0
 13269 0b78 5DE0     		b	.L550
 13270              	.L555:
1928:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1929:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 13271              		.loc 1 1929 0
 13272 0b7a 7869     		ldr	r0, [r7, #20]
 13273 0b7c FFF7FEFF 		bl	strlen
 13274 0b80 0346     		mov	r3, r0
 13275 0b82 1A46     		mov	r2, r3
 13276 0b84 7B69     		ldr	r3, [r7, #20]
 13277 0b86 1344     		add	r3, r3, r2
 13278 0b88 124A     		ldr	r2, .L615+40
 13279 0b8a 1D46     		mov	r5, r3
 13280 0b8c 1446     		mov	r4, r2
 13281 0b8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13282 0b90 2860     		str	r0, [r5]	@ unaligned
 13283 0b92 6960     		str	r1, [r5, #4]	@ unaligned
 13284 0b94 AA60     		str	r2, [r5, #8]	@ unaligned
 13285 0b96 EB60     		str	r3, [r5, #12]	@ unaligned
 13286 0b98 03CC     		ldmia	r4!, {r0, r1}
 13287 0b9a 2861     		str	r0, [r5, #16]	@ unaligned
 13288 0b9c 6961     		str	r1, [r5, #20]	@ unaligned
 13289 0b9e 2388     		ldrh	r3, [r4]	@ unaligned
 13290 0ba0 A278     		ldrb	r2, [r4, #2]
 13291 0ba2 2B83     		strh	r3, [r5, #24]	@ unaligned
 13292 0ba4 1346     		mov	r3, r2
 13293 0ba6 AB76     		strb	r3, [r5, #26]
1930:..\src/command_processing.c ****                     break;
 13294              		.loc 1 1930 0
 13295 0ba8 45E0     		b	.L550
 13296              	.L616:
 13297 0baa 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 304


 13298              	.L615:
 13299 0bac 0000F040 		.word	1089470464
 13300 0bb0 E40F0000 		.word	.LC160
 13301 0bb4 F00F0000 		.word	.LC161
 13302 0bb8 FC0F0000 		.word	.LC162
 13303 0bbc 08100000 		.word	.LC163
 13304 0bc0 24100000 		.word	.LC164
 13305 0bc4 40100000 		.word	.LC165
 13306 0bc8 5C100000 		.word	.LC166
 13307 0bcc 70100000 		.word	.LC167
 13308 0bd0 88100000 		.word	.LC168
 13309 0bd4 A8100000 		.word	.LC169
 13310              	.L556:
1931:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1932:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 13311              		.loc 1 1932 0
 13312 0bd8 7869     		ldr	r0, [r7, #20]
 13313 0bda FFF7FEFF 		bl	strlen
 13314 0bde 0346     		mov	r3, r0
 13315 0be0 1A46     		mov	r2, r3
 13316 0be2 7B69     		ldr	r3, [r7, #20]
 13317 0be4 1344     		add	r3, r3, r2
 13318 0be6 874A     		ldr	r2, .L617
 13319 0be8 1C46     		mov	r4, r3
 13320 0bea 1546     		mov	r5, r2
 13321 0bec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13322 0bee 2060     		str	r0, [r4]	@ unaligned
 13323 0bf0 6160     		str	r1, [r4, #4]	@ unaligned
 13324 0bf2 A260     		str	r2, [r4, #8]	@ unaligned
 13325 0bf4 E360     		str	r3, [r4, #12]	@ unaligned
 13326 0bf6 2868     		ldr	r0, [r5]	@ unaligned
 13327 0bf8 2061     		str	r0, [r4, #16]	@ unaligned
 13328 0bfa AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13329 0bfc AA79     		ldrb	r2, [r5, #6]
 13330 0bfe A382     		strh	r3, [r4, #20]	@ unaligned
 13331 0c00 1346     		mov	r3, r2
 13332 0c02 A375     		strb	r3, [r4, #22]
1933:..\src/command_processing.c ****                     break;
 13333              		.loc 1 1933 0
 13334 0c04 17E0     		b	.L550
 13335              	.L557:
1934:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1935:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 13336              		.loc 1 1935 0
 13337 0c06 7869     		ldr	r0, [r7, #20]
 13338 0c08 FFF7FEFF 		bl	strlen
 13339 0c0c 0346     		mov	r3, r0
 13340 0c0e 1A46     		mov	r2, r3
 13341 0c10 7B69     		ldr	r3, [r7, #20]
 13342 0c12 1344     		add	r3, r3, r2
 13343 0c14 7C4A     		ldr	r2, .L617+4
 13344 0c16 1D46     		mov	r5, r3
 13345 0c18 1446     		mov	r4, r2
 13346 0c1a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13347 0c1c 2860     		str	r0, [r5]	@ unaligned
 13348 0c1e 6960     		str	r1, [r5, #4]	@ unaligned
 13349 0c20 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 305


 13350 0c22 EB60     		str	r3, [r5, #12]	@ unaligned
 13351 0c24 03CC     		ldmia	r4!, {r0, r1}
 13352 0c26 2861     		str	r0, [r5, #16]	@ unaligned
 13353 0c28 6961     		str	r1, [r5, #20]	@ unaligned
 13354 0c2a 2388     		ldrh	r3, [r4]	@ unaligned
 13355 0c2c A278     		ldrb	r2, [r4, #2]
 13356 0c2e 2B83     		strh	r3, [r5, #24]	@ unaligned
 13357 0c30 1346     		mov	r3, r2
 13358 0c32 AB76     		strb	r3, [r5, #26]
1936:..\src/command_processing.c ****                     break;
 13359              		.loc 1 1936 0
 13360 0c34 00BF     		nop
 13361              	.L550:
1937:..\src/command_processing.c ****             }
1938:..\src/command_processing.c **** 
1939:..\src/command_processing.c ****             switch(MOT->control_mode) {
 13362              		.loc 1 1939 0
 13363 0c36 D7F88430 		ldr	r3, [r7, #132]
 13364 0c3a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13365 0c3e 032B     		cmp	r3, #3
 13366 0c40 63D8     		bhi	.L608
 13367 0c42 01A2     		adr	r2, .L560
 13368 0c44 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13369              		.p2align 2
 13370              	.L560:
 13371 0c48 590C0000 		.word	.L559+1
 13372 0c4c 830C0000 		.word	.L561+1
 13373 0c50 A70C0000 		.word	.L562+1
 13374 0c54 CD0C0000 		.word	.L563+1
 13375              		.p2align 1
 13376              	.L559:
1940:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1941:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 13377              		.loc 1 1941 0
 13378 0c58 7869     		ldr	r0, [r7, #20]
 13379 0c5a FFF7FEFF 		bl	strlen
 13380 0c5e 0346     		mov	r3, r0
 13381 0c60 1A46     		mov	r2, r3
 13382 0c62 7B69     		ldr	r3, [r7, #20]
 13383 0c64 1344     		add	r3, r3, r2
 13384 0c66 694A     		ldr	r2, .L617+8
 13385 0c68 1D46     		mov	r5, r3
 13386 0c6a 1446     		mov	r4, r2
 13387 0c6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13388 0c6e 2860     		str	r0, [r5]	@ unaligned
 13389 0c70 6960     		str	r1, [r5, #4]	@ unaligned
 13390 0c72 AA60     		str	r2, [r5, #8]	@ unaligned
 13391 0c74 EB60     		str	r3, [r5, #12]	@ unaligned
 13392 0c76 03CC     		ldmia	r4!, {r0, r1}
 13393 0c78 2861     		str	r0, [r5, #16]	@ unaligned
 13394 0c7a 6961     		str	r1, [r5, #20]	@ unaligned
 13395 0c7c 2378     		ldrb	r3, [r4]
 13396 0c7e 2B76     		strb	r3, [r5, #24]
1942:..\src/command_processing.c ****                     break;
 13397              		.loc 1 1942 0
 13398 0c80 44E0     		b	.L564
 13399              	.L561:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 306


1943:..\src/command_processing.c ****                 case CONTROL_PWM:
1944:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 13400              		.loc 1 1944 0
 13401 0c82 7869     		ldr	r0, [r7, #20]
 13402 0c84 FFF7FEFF 		bl	strlen
 13403 0c88 0346     		mov	r3, r0
 13404 0c8a 1A46     		mov	r2, r3
 13405 0c8c 7B69     		ldr	r3, [r7, #20]
 13406 0c8e 1344     		add	r3, r3, r2
 13407 0c90 5F4A     		ldr	r2, .L617+12
 13408 0c92 1D46     		mov	r5, r3
 13409 0c94 1446     		mov	r4, r2
 13410 0c96 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13411 0c98 2860     		str	r0, [r5]	@ unaligned
 13412 0c9a 6960     		str	r1, [r5, #4]	@ unaligned
 13413 0c9c AA60     		str	r2, [r5, #8]	@ unaligned
 13414 0c9e EB60     		str	r3, [r5, #12]	@ unaligned
 13415 0ca0 2068     		ldr	r0, [r4]	@ unaligned
 13416 0ca2 2861     		str	r0, [r5, #16]	@ unaligned
1945:..\src/command_processing.c ****                     break;
 13417              		.loc 1 1945 0
 13418 0ca4 32E0     		b	.L564
 13419              	.L562:
1946:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1947:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 13420              		.loc 1 1947 0
 13421 0ca6 7869     		ldr	r0, [r7, #20]
 13422 0ca8 FFF7FEFF 		bl	strlen
 13423 0cac 0346     		mov	r3, r0
 13424 0cae 1A46     		mov	r2, r3
 13425 0cb0 7B69     		ldr	r3, [r7, #20]
 13426 0cb2 1344     		add	r3, r3, r2
 13427 0cb4 574A     		ldr	r2, .L617+16
 13428 0cb6 1D46     		mov	r5, r3
 13429 0cb8 1446     		mov	r4, r2
 13430 0cba 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13431 0cbc 2860     		str	r0, [r5]	@ unaligned
 13432 0cbe 6960     		str	r1, [r5, #4]	@ unaligned
 13433 0cc0 AA60     		str	r2, [r5, #8]	@ unaligned
 13434 0cc2 EB60     		str	r3, [r5, #12]	@ unaligned
 13435 0cc4 03CC     		ldmia	r4!, {r0, r1}
 13436 0cc6 2861     		str	r0, [r5, #16]	@ unaligned
 13437 0cc8 6961     		str	r1, [r5, #20]	@ unaligned
1948:..\src/command_processing.c ****                     break;
 13438              		.loc 1 1948 0
 13439 0cca 1FE0     		b	.L564
 13440              	.L563:
1949:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1950:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 13441              		.loc 1 1950 0
 13442 0ccc 7869     		ldr	r0, [r7, #20]
 13443 0cce FFF7FEFF 		bl	strlen
 13444 0cd2 0346     		mov	r3, r0
 13445 0cd4 1A46     		mov	r2, r3
 13446 0cd6 7B69     		ldr	r3, [r7, #20]
 13447 0cd8 1344     		add	r3, r3, r2
 13448 0cda 4F4A     		ldr	r2, .L617+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 307


 13449 0cdc 1446     		mov	r4, r2
 13450 0cde 9E46     		mov	lr, r3
 13451 0ce0 04F1200C 		add	ip, r4, #32
 13452              	.L565:
 13453 0ce4 7546     		mov	r5, lr
 13454 0ce6 2646     		mov	r6, r4
 13455 0ce8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13456 0cea 2860     		str	r0, [r5]	@ unaligned
 13457 0cec 6960     		str	r1, [r5, #4]	@ unaligned
 13458 0cee AA60     		str	r2, [r5, #8]	@ unaligned
 13459 0cf0 EB60     		str	r3, [r5, #12]	@ unaligned
 13460 0cf2 1034     		adds	r4, r4, #16
 13461 0cf4 0EF1100E 		add	lr, lr, #16
 13462 0cf8 6445     		cmp	r4, ip
 13463 0cfa F3D1     		bne	.L565
 13464 0cfc 7346     		mov	r3, lr
 13465 0cfe 2246     		mov	r2, r4
 13466 0d00 1068     		ldr	r0, [r2]	@ unaligned
 13467 0d02 1860     		str	r0, [r3]	@ unaligned
 13468 0d04 1279     		ldrb	r2, [r2, #4]
 13469 0d06 1A71     		strb	r2, [r3, #4]
1951:..\src/command_processing.c ****                     break;
 13470              		.loc 1 1951 0
 13471 0d08 00E0     		b	.L564
 13472              	.L608:
1952:..\src/command_processing.c ****                 default:
1953:..\src/command_processing.c ****                     break;
 13473              		.loc 1 1953 0
 13474 0d0a 00BF     		nop
 13475              	.L564:
1954:..\src/command_processing.c ****             }
1955:..\src/command_processing.c **** 
1956:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 13476              		.loc 1 1956 0
 13477 0d0c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13478 0d10 D7F88C10 		ldr	r1, [r7, #140]
 13479 0d14 1346     		mov	r3, r2
 13480 0d16 5B00     		lsls	r3, r3, #1
 13481 0d18 1344     		add	r3, r3, r2
 13482 0d1a 1B01     		lsls	r3, r3, #4
 13483 0d1c 0B44     		add	r3, r3, r1
 13484 0d1e 03F5D873 		add	r3, r3, #432
 13485 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13486 0d24 002B     		cmp	r3, #0
 13487 0d26 1CD0     		beq	.L566
1957:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 13488              		.loc 1 1957 0
 13489 0d28 7869     		ldr	r0, [r7, #20]
 13490 0d2a FFF7FEFF 		bl	strlen
 13491 0d2e 0346     		mov	r3, r0
 13492 0d30 1A46     		mov	r2, r3
 13493 0d32 7B69     		ldr	r3, [r7, #20]
 13494 0d34 1344     		add	r3, r3, r2
 13495 0d36 394A     		ldr	r2, .L617+24
 13496 0d38 1446     		mov	r4, r2
 13497 0d3a 9E46     		mov	lr, r3
 13498 0d3c 04F1200C 		add	ip, r4, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 308


 13499              	.L567:
 13500 0d40 7546     		mov	r5, lr
 13501 0d42 2646     		mov	r6, r4
 13502 0d44 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13503 0d46 2860     		str	r0, [r5]	@ unaligned
 13504 0d48 6960     		str	r1, [r5, #4]	@ unaligned
 13505 0d4a AA60     		str	r2, [r5, #8]	@ unaligned
 13506 0d4c EB60     		str	r3, [r5, #12]	@ unaligned
 13507 0d4e 1034     		adds	r4, r4, #16
 13508 0d50 0EF1100E 		add	lr, lr, #16
 13509 0d54 6445     		cmp	r4, ip
 13510 0d56 F3D1     		bne	.L567
 13511 0d58 7346     		mov	r3, lr
 13512 0d5a 2246     		mov	r2, r4
 13513 0d5c 1278     		ldrb	r2, [r2]
 13514 0d5e 1A70     		strb	r2, [r3]
 13515 0d60 13E0     		b	.L568
 13516              	.L566:
1958:..\src/command_processing.c ****             else
1959:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 13517              		.loc 1 1959 0
 13518 0d62 7869     		ldr	r0, [r7, #20]
 13519 0d64 FFF7FEFF 		bl	strlen
 13520 0d68 0346     		mov	r3, r0
 13521 0d6a 1A46     		mov	r2, r3
 13522 0d6c 7B69     		ldr	r3, [r7, #20]
 13523 0d6e 1344     		add	r3, r3, r2
 13524 0d70 2B4A     		ldr	r2, .L617+28
 13525 0d72 1C46     		mov	r4, r3
 13526 0d74 1546     		mov	r5, r2
 13527 0d76 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13528 0d78 2060     		str	r0, [r4]	@ unaligned
 13529 0d7a 6160     		str	r1, [r4, #4]	@ unaligned
 13530 0d7c A260     		str	r2, [r4, #8]	@ unaligned
 13531 0d7e E360     		str	r3, [r4, #12]	@ unaligned
 13532 0d80 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13533 0d82 2061     		str	r0, [r4, #16]	@ unaligned
 13534 0d84 6161     		str	r1, [r4, #20]	@ unaligned
 13535 0d86 A261     		str	r2, [r4, #24]	@ unaligned
 13536 0d88 E361     		str	r3, [r4, #28]	@ unaligned
 13537              	.L568:
1960:..\src/command_processing.c **** 
1961:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 13538              		.loc 1 1961 0
 13539 0d8a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13540 0d8e D7F88C10 		ldr	r1, [r7, #140]
 13541 0d92 1346     		mov	r3, r2
 13542 0d94 5B00     		lsls	r3, r3, #1
 13543 0d96 1344     		add	r3, r3, r2
 13544 0d98 1B01     		lsls	r3, r3, #4
 13545 0d9a 0B44     		add	r3, r3, r1
 13546 0d9c 03F5DA73 		add	r3, r3, #436
 13547 0da0 93F90030 		ldrsb	r3, [r3]
 13548 0da4 1A46     		mov	r2, r3
 13549 0da6 07F11C03 		add	r3, r7, #28
 13550 0daa 1E49     		ldr	r1, .L617+32
 13551 0dac 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 309


 13552 0dae FFF7FEFF 		bl	sprintf
1962:..\src/command_processing.c ****             strcat(info_string, str);
 13553              		.loc 1 1962 0
 13554 0db2 07F11C03 		add	r3, r7, #28
 13555 0db6 1946     		mov	r1, r3
 13556 0db8 7869     		ldr	r0, [r7, #20]
 13557 0dba FFF7FEFF 		bl	strcat
1963:..\src/command_processing.c **** //#ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since t
1964:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
 13558              		.loc 1 1964 0
 13559 0dbe 7869     		ldr	r0, [r7, #20]
 13560 0dc0 FFF7FEFF 		bl	strlen
 13561 0dc4 0346     		mov	r3, r0
 13562 0dc6 1A46     		mov	r2, r3
 13563 0dc8 7B69     		ldr	r3, [r7, #20]
 13564 0dca 1344     		add	r3, r3, r2
 13565 0dcc 164A     		ldr	r2, .L617+36
 13566 0dce 1446     		mov	r4, r2
 13567 0dd0 9E46     		mov	lr, r3
 13568 0dd2 04F1200C 		add	ip, r4, #32
 13569              	.L569:
 13570 0dd6 7546     		mov	r5, lr
 13571 0dd8 2646     		mov	r6, r4
 13572 0dda 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13573 0ddc 2860     		str	r0, [r5]	@ unaligned
 13574 0dde 6960     		str	r1, [r5, #4]	@ unaligned
 13575 0de0 AA60     		str	r2, [r5, #8]	@ unaligned
 13576 0de2 EB60     		str	r3, [r5, #12]	@ unaligned
 13577 0de4 1034     		adds	r4, r4, #16
 13578 0de6 0EF1100E 		add	lr, lr, #16
 13579 0dea 6445     		cmp	r4, ip
 13580 0dec F3D1     		bne	.L569
 13581 0dee 7246     		mov	r2, lr
 13582 0df0 2346     		mov	r3, r4
 13583 0df2 03CB     		ldmia	r3!, {r0, r1}
 13584 0df4 1060     		str	r0, [r2]	@ unaligned
 13585 0df6 5160     		str	r1, [r2, #4]	@ unaligned
 13586 0df8 1B78     		ldrb	r3, [r3]
 13587 0dfa 1372     		strb	r3, [r2, #8]
1965:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13588              		.loc 1 1965 0
 13589 0dfc 0023     		movs	r3, #0
 13590 0dfe C7F89430 		str	r3, [r7, #148]
 13591 0e02 44E0     		b	.L570
 13592              	.L618:
 13593              		.align	2
 13594              	.L617:
 13595 0e04 C4100000 		.word	.LC170
 13596 0e08 DC100000 		.word	.LC171
 13597 0e0c F8100000 		.word	.LC172
 13598 0e10 14110000 		.word	.LC173
 13599 0e14 28110000 		.word	.LC174
 13600 0e18 40110000 		.word	.LC175
 13601 0e1c 68110000 		.word	.LC176
 13602 0e20 8C110000 		.word	.LC177
 13603 0e24 AC110000 		.word	.LC178
 13604 0e28 C8110000 		.word	.LC179
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 310


 13605              	.L572:
1966:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 13606              		.loc 1 1966 0
 13607 0e2c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13608 0e30 D7F88C10 		ldr	r1, [r7, #140]
 13609 0e34 1346     		mov	r3, r2
 13610 0e36 5B00     		lsls	r3, r3, #1
 13611 0e38 1344     		add	r3, r3, r2
 13612 0e3a 1B01     		lsls	r3, r3, #4
 13613 0e3c CA18     		adds	r2, r1, r3
 13614 0e3e D7F89430 		ldr	r3, [r7, #148]
 13615 0e42 1344     		add	r3, r3, r2
 13616 0e44 03F2B113 		addw	r3, r3, #433
 13617 0e48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13618 0e4a 1A46     		mov	r2, r3
 13619 0e4c 07F11C03 		add	r3, r7, #28
 13620 0e50 AE49     		ldr	r1, .L619
 13621 0e52 1846     		mov	r0, r3
 13622 0e54 FFF7FEFF 		bl	sprintf
1967:..\src/command_processing.c ****                 strcat(info_string, str);
 13623              		.loc 1 1967 0
 13624 0e58 07F11C03 		add	r3, r7, #28
 13625 0e5c 1946     		mov	r1, r3
 13626 0e5e 7869     		ldr	r0, [r7, #20]
 13627 0e60 FFF7FEFF 		bl	strcat
1968:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13628              		.loc 1 1968 0
 13629 0e64 D7F89430 		ldr	r3, [r7, #148]
 13630 0e68 022B     		cmp	r3, #2
 13631 0e6a 0BD0     		beq	.L571
1969:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13632              		.loc 1 1969 0
 13633 0e6c 7869     		ldr	r0, [r7, #20]
 13634 0e6e FFF7FEFF 		bl	strlen
 13635 0e72 0346     		mov	r3, r0
 13636 0e74 1A46     		mov	r2, r3
 13637 0e76 7B69     		ldr	r3, [r7, #20]
 13638 0e78 1344     		add	r3, r3, r2
 13639 0e7a A54A     		ldr	r2, .L619+4
 13640 0e7c 1188     		ldrh	r1, [r2]	@ unaligned
 13641 0e7e 9278     		ldrb	r2, [r2, #2]
 13642 0e80 1980     		strh	r1, [r3]	@ unaligned
 13643 0e82 9A70     		strb	r2, [r3, #2]
 13644              	.L571:
1965:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 13645              		.loc 1 1965 0 discriminator 2
 13646 0e84 D7F89430 		ldr	r3, [r7, #148]
 13647 0e88 0133     		adds	r3, r3, #1
 13648 0e8a C7F89430 		str	r3, [r7, #148]
 13649              	.L570:
1965:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
 13650              		.loc 1 1965 0 is_stmt 0 discriminator 1
 13651 0e8e D7F89430 		ldr	r3, [r7, #148]
 13652 0e92 022B     		cmp	r3, #2
 13653 0e94 CADD     		ble	.L572
1970:..\src/command_processing.c ****                 }                
1971:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 311


1972:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13654              		.loc 1 1972 0 is_stmt 1
 13655 0e96 7869     		ldr	r0, [r7, #20]
 13656 0e98 FFF7FEFF 		bl	strlen
 13657 0e9c 0346     		mov	r3, r0
 13658 0e9e 1A46     		mov	r2, r3
 13659 0ea0 7B69     		ldr	r3, [r7, #20]
 13660 0ea2 1344     		add	r3, r3, r2
 13661 0ea4 9B4A     		ldr	r2, .L619+8
 13662 0ea6 1188     		ldrh	r1, [r2]	@ unaligned
 13663 0ea8 9278     		ldrb	r2, [r2, #2]
 13664 0eaa 1980     		strh	r1, [r3]	@ unaligned
 13665 0eac 9A70     		strb	r2, [r3, #2]
1973:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
 13666              		.loc 1 1973 0
 13667 0eae 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13668 0eb2 D7F88C10 		ldr	r1, [r7, #140]
 13669 0eb6 1346     		mov	r3, r2
 13670 0eb8 5B00     		lsls	r3, r3, #1
 13671 0eba 1344     		add	r3, r3, r2
 13672 0ebc 1B01     		lsls	r3, r3, #4
 13673 0ebe 0B44     		add	r3, r3, r1
 13674 0ec0 03F2B513 		addw	r3, r3, #437
 13675 0ec4 93F90030 		ldrsb	r3, [r3]
 13676 0ec8 1A46     		mov	r2, r3
 13677 0eca 07F11C03 		add	r3, r7, #28
 13678 0ece 9249     		ldr	r1, .L619+12
 13679 0ed0 1846     		mov	r0, r3
 13680 0ed2 FFF7FEFF 		bl	sprintf
1974:..\src/command_processing.c ****             strcat(info_string, str);
 13681              		.loc 1 1974 0
 13682 0ed6 07F11C03 		add	r3, r7, #28
 13683 0eda 1946     		mov	r1, r3
 13684 0edc 7869     		ldr	r0, [r7, #20]
 13685 0ede FFF7FEFF 		bl	strcat
1975:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
 13686              		.loc 1 1975 0
 13687 0ee2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13688 0ee6 D7F88C10 		ldr	r1, [r7, #140]
 13689 0eea 1346     		mov	r3, r2
 13690 0eec 5B00     		lsls	r3, r3, #1
 13691 0eee 1344     		add	r3, r3, r2
 13692 0ef0 1B01     		lsls	r3, r3, #4
 13693 0ef2 0B44     		add	r3, r3, r1
 13694 0ef4 03F5DB73 		add	r3, r3, #438
 13695 0ef8 93F90030 		ldrsb	r3, [r3]
 13696 0efc 1A46     		mov	r2, r3
 13697 0efe 07F11C03 		add	r3, r7, #28
 13698 0f02 8649     		ldr	r1, .L619+16
 13699 0f04 1846     		mov	r0, r3
 13700 0f06 FFF7FEFF 		bl	sprintf
1976:..\src/command_processing.c ****             strcat(info_string, str);
 13701              		.loc 1 1976 0
 13702 0f0a 07F11C03 		add	r3, r7, #28
 13703 0f0e 1946     		mov	r1, r3
 13704 0f10 7869     		ldr	r0, [r7, #20]
 13705 0f12 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 312


1977:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
 13706              		.loc 1 1977 0
 13707 0f16 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13708 0f1a D7F88C10 		ldr	r1, [r7, #140]
 13709 0f1e 1346     		mov	r3, r2
 13710 0f20 5B00     		lsls	r3, r3, #1
 13711 0f22 1344     		add	r3, r3, r2
 13712 0f24 1B01     		lsls	r3, r3, #4
 13713 0f26 0B44     		add	r3, r3, r1
 13714 0f28 03F2B713 		addw	r3, r3, #439
 13715 0f2c 93F90030 		ldrsb	r3, [r3]
 13716 0f30 1A46     		mov	r2, r3
 13717 0f32 07F11C03 		add	r3, r7, #28
 13718 0f36 7A49     		ldr	r1, .L619+20
 13719 0f38 1846     		mov	r0, r3
 13720 0f3a FFF7FEFF 		bl	sprintf
1978:..\src/command_processing.c ****             strcat(info_string, str);
 13721              		.loc 1 1978 0
 13722 0f3e 07F11C03 		add	r3, r7, #28
 13723 0f42 1946     		mov	r1, r3
 13724 0f44 7869     		ldr	r0, [r7, #20]
 13725 0f46 FFF7FEFF 		bl	strcat
1979:..\src/command_processing.c **** //#endif            
1980:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13726              		.loc 1 1980 0
 13727 0f4a 7869     		ldr	r0, [r7, #20]
 13728 0f4c FFF7FEFF 		bl	strlen
 13729 0f50 0346     		mov	r3, r0
 13730 0f52 1A46     		mov	r2, r3
 13731 0f54 7B69     		ldr	r3, [r7, #20]
 13732 0f56 1344     		add	r3, r3, r2
 13733 0f58 6E4A     		ldr	r2, .L619+8
 13734 0f5a 1188     		ldrh	r1, [r2]	@ unaligned
 13735 0f5c 9278     		ldrb	r2, [r2, #2]
 13736 0f5e 1980     		strh	r1, [r3]	@ unaligned
 13737 0f60 9A70     		strb	r2, [r3, #2]
1981:..\src/command_processing.c **** 
1982:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 13738              		.loc 1 1982 0
 13739 0f62 7869     		ldr	r0, [r7, #20]
 13740 0f64 FFF7FEFF 		bl	strlen
 13741 0f68 0346     		mov	r3, r0
 13742 0f6a 1A46     		mov	r2, r3
 13743 0f6c 7B69     		ldr	r3, [r7, #20]
 13744 0f6e 1344     		add	r3, r3, r2
 13745 0f70 6C4A     		ldr	r2, .L619+24
 13746 0f72 1D46     		mov	r5, r3
 13747 0f74 1446     		mov	r4, r2
 13748 0f76 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13749 0f78 2860     		str	r0, [r5]	@ unaligned
 13750 0f7a 6960     		str	r1, [r5, #4]	@ unaligned
 13751 0f7c AA60     		str	r2, [r5, #8]	@ unaligned
 13752 0f7e EB60     		str	r3, [r5, #12]	@ unaligned
 13753 0f80 2068     		ldr	r0, [r4]	@ unaligned
 13754 0f82 2861     		str	r0, [r5, #16]	@ unaligned
1983:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13755              		.loc 1 1983 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 313


 13756 0f84 0023     		movs	r3, #0
 13757 0f86 C7F89430 		str	r3, [r7, #148]
 13758 0f8a 30E0     		b	.L573
 13759              	.L575:
1984:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13760              		.loc 1 1984 0
 13761 0f8c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13762 0f90 D7F88C10 		ldr	r1, [r7, #140]
 13763 0f94 1346     		mov	r3, r2
 13764 0f96 5B00     		lsls	r3, r3, #1
 13765 0f98 1344     		add	r3, r3, r2
 13766 0f9a 1B01     		lsls	r3, r3, #4
 13767 0f9c CA18     		adds	r2, r1, r3
 13768 0f9e D7F89430 		ldr	r3, [r7, #148]
 13769 0fa2 1344     		add	r3, r3, r2
 13770 0fa4 03F29513 		addw	r3, r3, #405
 13771 0fa8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13772 0faa 1A46     		mov	r2, r3
 13773 0fac 07F11C03 		add	r3, r7, #28
 13774 0fb0 5649     		ldr	r1, .L619
 13775 0fb2 1846     		mov	r0, r3
 13776 0fb4 FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****                 strcat(info_string, str);
 13777              		.loc 1 1985 0
 13778 0fb8 07F11C03 		add	r3, r7, #28
 13779 0fbc 1946     		mov	r1, r3
 13780 0fbe 7869     		ldr	r0, [r7, #20]
 13781 0fc0 FFF7FEFF 		bl	strcat
1986:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13782              		.loc 1 1986 0
 13783 0fc4 D7F89430 		ldr	r3, [r7, #148]
 13784 0fc8 022B     		cmp	r3, #2
 13785 0fca 0BD0     		beq	.L574
1987:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13786              		.loc 1 1987 0
 13787 0fcc 7869     		ldr	r0, [r7, #20]
 13788 0fce FFF7FEFF 		bl	strlen
 13789 0fd2 0346     		mov	r3, r0
 13790 0fd4 1A46     		mov	r2, r3
 13791 0fd6 7B69     		ldr	r3, [r7, #20]
 13792 0fd8 1344     		add	r3, r3, r2
 13793 0fda 4D4A     		ldr	r2, .L619+4
 13794 0fdc 1188     		ldrh	r1, [r2]	@ unaligned
 13795 0fde 9278     		ldrb	r2, [r2, #2]
 13796 0fe0 1980     		strh	r1, [r3]	@ unaligned
 13797 0fe2 9A70     		strb	r2, [r3, #2]
 13798              	.L574:
1983:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13799              		.loc 1 1983 0 discriminator 2
 13800 0fe4 D7F89430 		ldr	r3, [r7, #148]
 13801 0fe8 0133     		adds	r3, r3, #1
 13802 0fea C7F89430 		str	r3, [r7, #148]
 13803              	.L573:
1983:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13804              		.loc 1 1983 0 is_stmt 0 discriminator 1
 13805 0fee D7F89430 		ldr	r3, [r7, #148]
 13806 0ff2 022B     		cmp	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 314


 13807 0ff4 CADD     		ble	.L575
1988:..\src/command_processing.c ****                 }                
1989:..\src/command_processing.c ****             }
1990:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13808              		.loc 1 1990 0 is_stmt 1
 13809 0ff6 7869     		ldr	r0, [r7, #20]
 13810 0ff8 FFF7FEFF 		bl	strlen
 13811 0ffc 0346     		mov	r3, r0
 13812 0ffe 1A46     		mov	r2, r3
 13813 1000 7B69     		ldr	r3, [r7, #20]
 13814 1002 1344     		add	r3, r3, r2
 13815 1004 434A     		ldr	r2, .L619+8
 13816 1006 1188     		ldrh	r1, [r2]	@ unaligned
 13817 1008 9278     		ldrb	r2, [r2, #2]
 13818 100a 1980     		strh	r1, [r3]	@ unaligned
 13819 100c 9A70     		strb	r2, [r3, #2]
1991:..\src/command_processing.c **** 
1992:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 13820              		.loc 1 1992 0
 13821 100e 7869     		ldr	r0, [r7, #20]
 13822 1010 FFF7FEFF 		bl	strlen
 13823 1014 0346     		mov	r3, r0
 13824 1016 1A46     		mov	r2, r3
 13825 1018 7B69     		ldr	r3, [r7, #20]
 13826 101a 1344     		add	r3, r3, r2
 13827 101c 424A     		ldr	r2, .L619+28
 13828 101e 1D46     		mov	r5, r3
 13829 1020 1446     		mov	r4, r2
 13830 1022 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13831 1024 2860     		str	r0, [r5]	@ unaligned
 13832 1026 6960     		str	r1, [r5, #4]	@ unaligned
 13833 1028 AA60     		str	r2, [r5, #8]	@ unaligned
 13834 102a EB60     		str	r3, [r5, #12]	@ unaligned
 13835 102c 2068     		ldr	r0, [r4]	@ unaligned
 13836 102e 2861     		str	r0, [r5, #16]	@ unaligned
 13837 1030 2379     		ldrb	r3, [r4, #4]
 13838 1032 2B75     		strb	r3, [r5, #20]
1993:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13839              		.loc 1 1993 0
 13840 1034 0023     		movs	r3, #0
 13841 1036 C7F89430 		str	r3, [r7, #148]
 13842 103a 3FE0     		b	.L576
 13843              	.L578:
1994:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13844              		.loc 1 1994 0
 13845 103c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13846 1040 D7F88C10 		ldr	r1, [r7, #140]
 13847 1044 1346     		mov	r3, r2
 13848 1046 5B00     		lsls	r3, r3, #1
 13849 1048 1344     		add	r3, r3, r2
 13850 104a 9B00     		lsls	r3, r3, #2
 13851 104c D7F89420 		ldr	r2, [r7, #148]
 13852 1050 1344     		add	r3, r3, r2
 13853 1052 6633     		adds	r3, r3, #102
 13854 1054 51F82310 		ldr	r1, [r1, r3, lsl #2]
 13855 1058 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13856 105c D7F88C00 		ldr	r0, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 315


 13857 1060 1346     		mov	r3, r2
 13858 1062 5B00     		lsls	r3, r3, #1
 13859 1064 1344     		add	r3, r3, r2
 13860 1066 1B01     		lsls	r3, r3, #4
 13861 1068 C218     		adds	r2, r0, r3
 13862 106a D7F89430 		ldr	r3, [r7, #148]
 13863 106e 1344     		add	r3, r3, r2
 13864 1070 03F29513 		addw	r3, r3, #405
 13865 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13866 1076 41FA03F2 		asr	r2, r1, r3
 13867 107a 07F11C03 		add	r3, r7, #28
 13868 107e 2B49     		ldr	r1, .L619+32
 13869 1080 1846     		mov	r0, r3
 13870 1082 FFF7FEFF 		bl	sprintf
1995:..\src/command_processing.c ****                 strcat(info_string, str);
 13871              		.loc 1 1995 0
 13872 1086 07F11C03 		add	r3, r7, #28
 13873 108a 1946     		mov	r1, r3
 13874 108c 7869     		ldr	r0, [r7, #20]
 13875 108e FFF7FEFF 		bl	strcat
1996:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13876              		.loc 1 1996 0
 13877 1092 D7F89430 		ldr	r3, [r7, #148]
 13878 1096 022B     		cmp	r3, #2
 13879 1098 0BD0     		beq	.L577
1997:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13880              		.loc 1 1997 0
 13881 109a 7869     		ldr	r0, [r7, #20]
 13882 109c FFF7FEFF 		bl	strlen
 13883 10a0 0346     		mov	r3, r0
 13884 10a2 1A46     		mov	r2, r3
 13885 10a4 7B69     		ldr	r3, [r7, #20]
 13886 10a6 1344     		add	r3, r3, r2
 13887 10a8 194A     		ldr	r2, .L619+4
 13888 10aa 1188     		ldrh	r1, [r2]	@ unaligned
 13889 10ac 9278     		ldrb	r2, [r2, #2]
 13890 10ae 1980     		strh	r1, [r3]	@ unaligned
 13891 10b0 9A70     		strb	r2, [r3, #2]
 13892              	.L577:
1993:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13893              		.loc 1 1993 0 discriminator 2
 13894 10b2 D7F89430 		ldr	r3, [r7, #148]
 13895 10b6 0133     		adds	r3, r3, #1
 13896 10b8 C7F89430 		str	r3, [r7, #148]
 13897              	.L576:
1993:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13898              		.loc 1 1993 0 is_stmt 0 discriminator 1
 13899 10bc D7F89430 		ldr	r3, [r7, #148]
 13900 10c0 022B     		cmp	r3, #2
 13901 10c2 BBDD     		ble	.L578
1998:..\src/command_processing.c ****                 }
1999:..\src/command_processing.c ****             }
2000:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13902              		.loc 1 2000 0 is_stmt 1
 13903 10c4 7869     		ldr	r0, [r7, #20]
 13904 10c6 FFF7FEFF 		bl	strlen
 13905 10ca 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 316


 13906 10cc 1A46     		mov	r2, r3
 13907 10ce 7B69     		ldr	r3, [r7, #20]
 13908 10d0 1344     		add	r3, r3, r2
 13909 10d2 104A     		ldr	r2, .L619+8
 13910 10d4 1188     		ldrh	r1, [r2]	@ unaligned
 13911 10d6 9278     		ldrb	r2, [r2, #2]
 13912 10d8 1980     		strh	r1, [r3]	@ unaligned
 13913 10da 9A70     		strb	r2, [r3, #2]
2001:..\src/command_processing.c ****                 
2002:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 13914              		.loc 1 2002 0
 13915 10dc 7869     		ldr	r0, [r7, #20]
 13916 10de FFF7FEFF 		bl	strlen
 13917 10e2 0346     		mov	r3, r0
 13918 10e4 1A46     		mov	r2, r3
 13919 10e6 7B69     		ldr	r3, [r7, #20]
 13920 10e8 1344     		add	r3, r3, r2
 13921 10ea 114A     		ldr	r2, .L619+36
 13922 10ec 1D46     		mov	r5, r3
 13923 10ee 1446     		mov	r4, r2
 13924 10f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13925 10f2 2860     		str	r0, [r5]	@ unaligned
 13926 10f4 6960     		str	r1, [r5, #4]	@ unaligned
 13927 10f6 AA60     		str	r2, [r5, #8]	@ unaligned
 13928 10f8 EB60     		str	r3, [r5, #12]	@ unaligned
 13929 10fa 03CC     		ldmia	r4!, {r0, r1}
 13930 10fc 2861     		str	r0, [r5, #16]	@ unaligned
 13931 10fe 6961     		str	r1, [r5, #20]	@ unaligned
 13932 1100 2378     		ldrb	r3, [r4]
 13933 1102 2B76     		strb	r3, [r5, #24]
2003:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13934              		.loc 1 2003 0
 13935 1104 0023     		movs	r3, #0
 13936 1106 C7F89430 		str	r3, [r7, #148]
 13937 110a 49E0     		b	.L579
 13938              	.L620:
 13939              		.align	2
 13940              	.L619:
 13941 110c 4C0F0000 		.word	.LC153
 13942 1110 500F0000 		.word	.LC154
 13943 1114 840D0000 		.word	.LC125
 13944 1118 F4110000 		.word	.LC180
 13945 111c 0C120000 		.word	.LC181
 13946 1120 24120000 		.word	.LC182
 13947 1124 3C120000 		.word	.LC183
 13948 1128 50120000 		.word	.LC184
 13949 112c 68120000 		.word	.LC185
 13950 1130 6C120000 		.word	.LC186
 13951              	.L581:
2004:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 13952              		.loc 1 2004 0
 13953 1134 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13954 1138 D7F88C10 		ldr	r1, [r7, #140]
 13955 113c 1346     		mov	r3, r2
 13956 113e 5B00     		lsls	r3, r3, #1
 13957 1140 1344     		add	r3, r3, r2
 13958 1142 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 317


 13959 1144 D7F89420 		ldr	r2, [r7, #148]
 13960 1148 1344     		add	r3, r3, r2
 13961 114a 6833     		adds	r3, r3, #104
 13962 114c 9B00     		lsls	r3, r3, #2
 13963 114e 0B44     		add	r3, r3, r1
 13964 1150 5B68     		ldr	r3, [r3, #4]	@ float
 13965 1152 1846     		mov	r0, r3
 13966 1154 FFF7FEFF 		bl	__aeabi_f2d
 13967 1158 0346     		mov	r3, r0
 13968 115a 0C46     		mov	r4, r1
 13969 115c 07F11C00 		add	r0, r7, #28
 13970 1160 1A46     		mov	r2, r3
 13971 1162 2346     		mov	r3, r4
 13972 1164 BF49     		ldr	r1, .L621
 13973 1166 FFF7FEFF 		bl	sprintf
2005:..\src/command_processing.c ****                 strcat(info_string, str);
 13974              		.loc 1 2005 0
 13975 116a 07F11C03 		add	r3, r7, #28
 13976 116e 1946     		mov	r1, r3
 13977 1170 7869     		ldr	r0, [r7, #20]
 13978 1172 FFF7FEFF 		bl	strcat
2006:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13979              		.loc 1 2006 0
 13980 1176 D7F89430 		ldr	r3, [r7, #148]
 13981 117a 022B     		cmp	r3, #2
 13982 117c 0BD0     		beq	.L580
2007:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13983              		.loc 1 2007 0
 13984 117e 7869     		ldr	r0, [r7, #20]
 13985 1180 FFF7FEFF 		bl	strlen
 13986 1184 0346     		mov	r3, r0
 13987 1186 1A46     		mov	r2, r3
 13988 1188 7B69     		ldr	r3, [r7, #20]
 13989 118a 1344     		add	r3, r3, r2
 13990 118c B64A     		ldr	r2, .L621+4
 13991 118e 1188     		ldrh	r1, [r2]	@ unaligned
 13992 1190 9278     		ldrb	r2, [r2, #2]
 13993 1192 1980     		strh	r1, [r3]	@ unaligned
 13994 1194 9A70     		strb	r2, [r3, #2]
 13995              	.L580:
2003:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 13996              		.loc 1 2003 0 discriminator 2
 13997 1196 D7F89430 		ldr	r3, [r7, #148]
 13998 119a 0133     		adds	r3, r3, #1
 13999 119c C7F89430 		str	r3, [r7, #148]
 14000              	.L579:
2003:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14001              		.loc 1 2003 0 is_stmt 0 discriminator 1
 14002 11a0 D7F89430 		ldr	r3, [r7, #148]
 14003 11a4 022B     		cmp	r3, #2
 14004 11a6 C5DD     		ble	.L581
2008:..\src/command_processing.c ****                 }
2009:..\src/command_processing.c ****             }
2010:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14005              		.loc 1 2010 0 is_stmt 1 discriminator 2
 14006 11a8 7869     		ldr	r0, [r7, #20]
 14007 11aa FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 318


 14008 11ae 0346     		mov	r3, r0
 14009 11b0 1A46     		mov	r2, r3
 14010 11b2 7B69     		ldr	r3, [r7, #20]
 14011 11b4 1344     		add	r3, r3, r2
 14012 11b6 AD4A     		ldr	r2, .L621+8
 14013 11b8 1188     		ldrh	r1, [r2]	@ unaligned
 14014 11ba 9278     		ldrb	r2, [r2, #2]
 14015 11bc 1980     		strh	r1, [r3]	@ unaligned
 14016 11be 9A70     		strb	r2, [r3, #2]
2011:..\src/command_processing.c ****             
2012:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2013:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14017              		.loc 1 2013 0 discriminator 2
 14018 11c0 D7F88430 		ldr	r3, [r7, #132]
 14019 11c4 5B6C     		ldr	r3, [r3, #68]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14020              		.loc 1 2012 0 discriminator 2
 14021 11c6 1846     		mov	r0, r3
 14022 11c8 FFF7FEFF 		bl	__aeabi_f2d
 14023 11cc C7E90201 		strd	r0, [r7, #8]
 14024              		.loc 1 2013 0 discriminator 2
 14025 11d0 D7F88430 		ldr	r3, [r7, #132]
 14026 11d4 9B6C     		ldr	r3, [r3, #72]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14027              		.loc 1 2012 0 discriminator 2
 14028 11d6 1846     		mov	r0, r3
 14029 11d8 FFF7FEFF 		bl	__aeabi_f2d
 14030 11dc 0446     		mov	r4, r0
 14031 11de 0D46     		mov	r5, r1
 14032              		.loc 1 2013 0 discriminator 2
 14033 11e0 D7F88430 		ldr	r3, [r7, #132]
 14034 11e4 DB6C     		ldr	r3, [r3, #76]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14035              		.loc 1 2012 0 discriminator 2
 14036 11e6 1846     		mov	r0, r3
 14037 11e8 FFF7FEFF 		bl	__aeabi_f2d
 14038 11ec 8046     		mov	r8, r0
 14039 11ee 8946     		mov	r9, r1
2014:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 14040              		.loc 1 2014 0 discriminator 2
 14041 11f0 D7F88430 		ldr	r3, [r7, #132]
 14042 11f4 1B6D     		ldr	r3, [r3, #80]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14043              		.loc 1 2012 0 discriminator 2
 14044 11f6 1846     		mov	r0, r3
 14045 11f8 FFF7FEFF 		bl	__aeabi_f2d
 14046 11fc 8246     		mov	r10, r0
 14047 11fe 8B46     		mov	fp, r1
 14048              		.loc 1 2014 0 discriminator 2
 14049 1200 D7F88430 		ldr	r3, [r7, #132]
 14050 1204 5B6D     		ldr	r3, [r3, #84]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14051              		.loc 1 2012 0 discriminator 2
 14052 1206 1846     		mov	r0, r3
 14053 1208 FFF7FEFF 		bl	__aeabi_f2d
 14054 120c C7E90001 		strd	r0, [r7]
 14055              		.loc 1 2014 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 319


 14056 1210 D7F88430 		ldr	r3, [r7, #132]
 14057 1214 9B6D     		ldr	r3, [r3, #88]	@ float
2012:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14058              		.loc 1 2012 0 discriminator 2
 14059 1216 1846     		mov	r0, r3
 14060 1218 FFF7FEFF 		bl	__aeabi_f2d
 14061 121c 0246     		mov	r2, r0
 14062 121e 0B46     		mov	r3, r1
 14063 1220 07F11C00 		add	r0, r7, #28
 14064 1224 CDE90823 		strd	r2, [sp, #32]
 14065 1228 D7E90012 		ldrd	r1, [r7]
 14066 122c CDE90612 		strd	r1, [sp, #24]
 14067 1230 CDE904AB 		strd	r10, [sp, #16]
 14068 1234 CDE90289 		strd	r8, [sp, #8]
 14069 1238 CDE90045 		strd	r4, [sp]
 14070 123c D7E90223 		ldrd	r2, [r7, #8]
 14071 1240 8B49     		ldr	r1, .L621+12
 14072 1242 FFF7FEFF 		bl	sprintf
2015:..\src/command_processing.c **** 		    strcat(info_string, str);       
 14073              		.loc 1 2015 0 discriminator 2
 14074 1246 07F11C03 		add	r3, r7, #28
 14075 124a 1946     		mov	r1, r3
 14076 124c 7869     		ldr	r0, [r7, #20]
 14077 124e FFF7FEFF 		bl	strcat
2016:..\src/command_processing.c **** 
2017:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 14078              		.loc 1 2017 0 discriminator 2
 14079 1252 D7F88430 		ldr	r3, [r7, #132]
 14080 1256 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 14081 125a 1A46     		mov	r2, r3
 14082 125c 07F11C03 		add	r3, r7, #28
 14083 1260 8449     		ldr	r1, .L621+16
 14084 1262 1846     		mov	r0, r3
 14085 1264 FFF7FEFF 		bl	sprintf
2018:..\src/command_processing.c ****             strcat(info_string, str);
 14086              		.loc 1 2018 0 discriminator 2
 14087 1268 07F11C03 		add	r3, r7, #28
 14088 126c 1946     		mov	r1, r3
 14089 126e 7869     		ldr	r0, [r7, #20]
 14090 1270 FFF7FEFF 		bl	strcat
2019:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14091              		.loc 1 2019 0 discriminator 2
 14092 1274 7869     		ldr	r0, [r7, #20]
 14093 1276 FFF7FEFF 		bl	strlen
 14094 127a 0346     		mov	r3, r0
 14095 127c 1A46     		mov	r2, r3
 14096 127e 7B69     		ldr	r3, [r7, #20]
 14097 1280 1344     		add	r3, r3, r2
 14098 1282 7A4A     		ldr	r2, .L621+8
 14099 1284 1188     		ldrh	r1, [r2]	@ unaligned
 14100 1286 9278     		ldrb	r2, [r2, #2]
 14101 1288 1980     		strh	r1, [r3]	@ unaligned
 14102 128a 9A70     		strb	r2, [r3, #2]
2020:..\src/command_processing.c **** 
2021:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 14103              		.loc 1 2021 0 discriminator 2
 14104 128c D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 320


 14105 1290 596B     		ldr	r1, [r3, #52]
 14106 1292 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14107 1296 D7F88C00 		ldr	r0, [r7, #140]
 14108 129a 1346     		mov	r3, r2
 14109 129c 5B00     		lsls	r3, r3, #1
 14110 129e 1344     		add	r3, r3, r2
 14111 12a0 1B01     		lsls	r3, r3, #4
 14112 12a2 0344     		add	r3, r3, r0
 14113 12a4 03F29513 		addw	r3, r3, #405
 14114 12a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14115 12aa 41FA03F2 		asr	r2, r1, r3
 14116 12ae 07F11C03 		add	r3, r7, #28
 14117 12b2 7149     		ldr	r1, .L621+20
 14118 12b4 1846     		mov	r0, r3
 14119 12b6 FFF7FEFF 		bl	sprintf
2022:..\src/command_processing.c ****             strcat(info_string, str);
 14120              		.loc 1 2022 0 discriminator 2
 14121 12ba 07F11C03 		add	r3, r7, #28
 14122 12be 1946     		mov	r1, r3
 14123 12c0 7869     		ldr	r0, [r7, #20]
 14124 12c2 FFF7FEFF 		bl	strcat
2023:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 14125              		.loc 1 2023 0 discriminator 2
 14126 12c6 D7F88430 		ldr	r3, [r7, #132]
 14127 12ca 996B     		ldr	r1, [r3, #56]
 14128 12cc 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14129 12d0 D7F88C00 		ldr	r0, [r7, #140]
 14130 12d4 1346     		mov	r3, r2
 14131 12d6 5B00     		lsls	r3, r3, #1
 14132 12d8 1344     		add	r3, r3, r2
 14133 12da 1B01     		lsls	r3, r3, #4
 14134 12dc 0344     		add	r3, r3, r0
 14135 12de 03F29513 		addw	r3, r3, #405
 14136 12e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14137 12e4 41FA03F2 		asr	r2, r1, r3
 14138 12e8 07F11C03 		add	r3, r7, #28
 14139 12ec 6349     		ldr	r1, .L621+24
 14140 12ee 1846     		mov	r0, r3
 14141 12f0 FFF7FEFF 		bl	sprintf
2024:..\src/command_processing.c ****             strcat(info_string, str);
 14142              		.loc 1 2024 0 discriminator 2
 14143 12f4 07F11C03 		add	r3, r7, #28
 14144 12f8 1946     		mov	r1, r3
 14145 12fa 7869     		ldr	r0, [r7, #20]
 14146 12fc FFF7FEFF 		bl	strcat
2025:..\src/command_processing.c **** 
2026:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 14147              		.loc 1 2026 0 discriminator 2
 14148 1300 D7F88430 		ldr	r3, [r7, #132]
 14149 1304 1A6C     		ldr	r2, [r3, #64]
 14150 1306 D7F88430 		ldr	r3, [r7, #132]
 14151 130a DB6B     		ldr	r3, [r3, #60]
 14152 130c 07F11C00 		add	r0, r7, #28
 14153 1310 5B49     		ldr	r1, .L621+28
 14154 1312 FFF7FEFF 		bl	sprintf
2027:..\src/command_processing.c ****             strcat(info_string, str);
 14155              		.loc 1 2027 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 321


 14156 1316 07F11C03 		add	r3, r7, #28
 14157 131a 1946     		mov	r1, r3
 14158 131c 7869     		ldr	r0, [r7, #20]
 14159 131e FFF7FEFF 		bl	strcat
2028:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14160              		.loc 1 2028 0 discriminator 2
 14161 1322 7869     		ldr	r0, [r7, #20]
 14162 1324 FFF7FEFF 		bl	strlen
 14163 1328 0346     		mov	r3, r0
 14164 132a 1A46     		mov	r2, r3
 14165 132c 7B69     		ldr	r3, [r7, #20]
 14166 132e 1344     		add	r3, r3, r2
 14167 1330 4E4A     		ldr	r2, .L621+8
 14168 1332 1188     		ldrh	r1, [r2]	@ unaligned
 14169 1334 9278     		ldrb	r2, [r2, #2]
 14170 1336 1980     		strh	r1, [r3]	@ unaligned
 14171 1338 9A70     		strb	r2, [r3, #2]
2029:..\src/command_processing.c **** 
2030:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 14172              		.loc 1 2030 0 discriminator 2
 14173 133a D7F88430 		ldr	r3, [r7, #132]
 14174 133e B3F95C30 		ldrsh	r3, [r3, #92]
 14175 1342 1A46     		mov	r2, r3
 14176 1344 07F11C03 		add	r3, r7, #28
 14177 1348 4E49     		ldr	r1, .L621+32
 14178 134a 1846     		mov	r0, r3
 14179 134c FFF7FEFF 		bl	sprintf
2031:..\src/command_processing.c ****             strcat(info_string, str);
 14180              		.loc 1 2031 0 discriminator 2
 14181 1350 07F11C03 		add	r3, r7, #28
 14182 1354 1946     		mov	r1, r3
 14183 1356 7869     		ldr	r0, [r7, #20]
 14184 1358 FFF7FEFF 		bl	strcat
2032:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2033:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2034:..\src/command_processing.c ****             strcat(info_string, str);
2035:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2036:..\src/command_processing.c ****                 case DRIVER_MC33887:
2037:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2038:..\src/command_processing.c ****                     break;
2039:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2040:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2041:..\src/command_processing.c ****                     break;
2042:..\src/command_processing.c ****                 default:
2043:..\src/command_processing.c ****                     break;
2044:..\src/command_processing.c ****             }
2045:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2046:..\src/command_processing.c ****             strcat(info_string, str);
2047:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2048:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2049:..\src/command_processing.c ****             else
2050:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2051:..\src/command_processing.c **** #endif                
2052:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14185              		.loc 1 2052 0 discriminator 2
 14186 135c 7869     		ldr	r0, [r7, #20]
 14187 135e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 322


 14188 1362 0346     		mov	r3, r0
 14189 1364 1A46     		mov	r2, r3
 14190 1366 7B69     		ldr	r3, [r7, #20]
 14191 1368 1344     		add	r3, r3, r2
 14192 136a 404A     		ldr	r2, .L621+8
 14193 136c 1188     		ldrh	r1, [r2]	@ unaligned
 14194 136e 9278     		ldrb	r2, [r2, #2]
 14195 1370 1980     		strh	r1, [r3]	@ unaligned
 14196 1372 9A70     		strb	r2, [r3, #2]
 14197              	.LBE18:
1800:..\src/command_processing.c ****             
 14198              		.loc 1 1800 0 discriminator 2
 14199 1374 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 14200 1378 0133     		adds	r3, r3, #1
 14201 137a 87F89330 		strb	r3, [r7, #147]
 14202              	.L530:
1800:..\src/command_processing.c ****             
 14203              		.loc 1 1800 0 is_stmt 0 discriminator 1
 14204 137e D7F88C30 		ldr	r3, [r7, #140]
 14205 1382 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 14206 1386 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 14207 138a 9A42     		cmp	r2, r3
 14208 138c 7EF66CAF 		bls	.L582
 14209              	.LBE17:
2053:..\src/command_processing.c ****         }
2054:..\src/command_processing.c ****       
2055:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 14210              		.loc 1 2055 0 is_stmt 1
 14211 1390 7869     		ldr	r0, [r7, #20]
 14212 1392 FFF7FEFF 		bl	strlen
 14213 1396 0346     		mov	r3, r0
 14214 1398 1A46     		mov	r2, r3
 14215 139a 7B69     		ldr	r3, [r7, #20]
 14216 139c 1344     		add	r3, r3, r2
 14217 139e 3A4A     		ldr	r2, .L621+36
 14218 13a0 1D46     		mov	r5, r3
 14219 13a2 1446     		mov	r4, r2
 14220 13a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14221 13a6 2860     		str	r0, [r5]	@ unaligned
 14222 13a8 6960     		str	r1, [r5, #4]	@ unaligned
 14223 13aa AA60     		str	r2, [r5, #8]	@ unaligned
 14224 13ac EB60     		str	r3, [r5, #12]	@ unaligned
 14225 13ae 2068     		ldr	r0, [r4]	@ unaligned
 14226 13b0 2861     		str	r0, [r5, #16]	@ unaligned
2056:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 14227              		.loc 1 2056 0
 14228 13b2 D7F88C30 		ldr	r3, [r7, #140]
 14229 13b6 B3F8F031 		ldrh	r3, [r3, #496]
 14230 13ba 1A46     		mov	r2, r3
 14231 13bc D7F88C30 		ldr	r3, [r7, #140]
 14232 13c0 B3F8F231 		ldrh	r3, [r3, #498]
 14233 13c4 07F11C00 		add	r0, r7, #28
 14234 13c8 3049     		ldr	r1, .L621+40
 14235 13ca FFF7FEFF 		bl	sprintf
2057:..\src/command_processing.c ****         strcat(info_string, str);
 14236              		.loc 1 2057 0
 14237 13ce 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 323


 14238 13d2 1946     		mov	r1, r3
 14239 13d4 7869     		ldr	r0, [r7, #20]
 14240 13d6 FFF7FEFF 		bl	strcat
2058:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14241              		.loc 1 2058 0
 14242 13da 7869     		ldr	r0, [r7, #20]
 14243 13dc FFF7FEFF 		bl	strlen
 14244 13e0 0346     		mov	r3, r0
 14245 13e2 1A46     		mov	r2, r3
 14246 13e4 7B69     		ldr	r3, [r7, #20]
 14247 13e6 1344     		add	r3, r3, r2
 14248 13e8 204A     		ldr	r2, .L621+8
 14249 13ea 1188     		ldrh	r1, [r2]	@ unaligned
 14250 13ec 9278     		ldrb	r2, [r2, #2]
 14251 13ee 1980     		strh	r1, [r3]	@ unaligned
 14252 13f0 9A70     		strb	r2, [r3, #2]
2059:..\src/command_processing.c **** 
2060:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 14253              		.loc 1 2060 0
 14254 13f2 D7F88C30 		ldr	r3, [r7, #140]
 14255 13f6 D3F8F421 		ldr	r2, [r3, #500]
 14256 13fa D7F88C30 		ldr	r3, [r7, #140]
 14257 13fe D3F8F831 		ldr	r3, [r3, #504]
 14258 1402 07F11C00 		add	r0, r7, #28
 14259 1406 2249     		ldr	r1, .L621+44
 14260 1408 FFF7FEFF 		bl	sprintf
2061:..\src/command_processing.c ****         strcat(info_string, str);
 14261              		.loc 1 2061 0
 14262 140c 07F11C03 		add	r3, r7, #28
 14263 1410 1946     		mov	r1, r3
 14264 1412 7869     		ldr	r0, [r7, #20]
 14265 1414 FFF7FEFF 		bl	strcat
2062:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14266              		.loc 1 2062 0
 14267 1418 7869     		ldr	r0, [r7, #20]
 14268 141a FFF7FEFF 		bl	strlen
 14269 141e 0346     		mov	r3, r0
 14270 1420 1A46     		mov	r2, r3
 14271 1422 7B69     		ldr	r3, [r7, #20]
 14272 1424 1344     		add	r3, r3, r2
 14273 1426 114A     		ldr	r2, .L621+8
 14274 1428 1188     		ldrh	r1, [r2]	@ unaligned
 14275 142a 9278     		ldrb	r2, [r2, #2]
 14276 142c 1980     		strh	r1, [r3]	@ unaligned
 14277 142e 9A70     		strb	r2, [r3, #2]
2063:..\src/command_processing.c **** 
2064:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 14278              		.loc 1 2064 0
 14279 1430 D7F88C30 		ldr	r3, [r7, #140]
 14280 1434 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 14281 1438 002B     		cmp	r3, #0
 14282 143a 2DD0     		beq	.L583
2065:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 14283              		.loc 1 2065 0
 14284 143c 7869     		ldr	r0, [r7, #20]
 14285 143e FFF7FEFF 		bl	strlen
 14286 1442 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 324


 14287 1444 1A46     		mov	r2, r3
 14288 1446 7B69     		ldr	r3, [r7, #20]
 14289 1448 1344     		add	r3, r3, r2
 14290 144a 124A     		ldr	r2, .L621+48
 14291 144c 1D46     		mov	r5, r3
 14292 144e 1446     		mov	r4, r2
 14293 1450 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14294 1452 2860     		str	r0, [r5]	@ unaligned
 14295 1454 6960     		str	r1, [r5, #4]	@ unaligned
 14296 1456 AA60     		str	r2, [r5, #8]	@ unaligned
 14297 1458 EB60     		str	r3, [r5, #12]	@ unaligned
 14298 145a 2068     		ldr	r0, [r4]	@ unaligned
 14299 145c 2861     		str	r0, [r5, #16]	@ unaligned
 14300 145e 2379     		ldrb	r3, [r4, #4]
 14301 1460 2B75     		strb	r3, [r5, #20]
 14302 1462 2AE0     		b	.L584
 14303              	.L622:
 14304              		.align	2
 14305              	.L621:
 14306 1464 88120000 		.word	.LC187
 14307 1468 500F0000 		.word	.LC154
 14308 146c 840D0000 		.word	.LC125
 14309 1470 8C120000 		.word	.LC188
 14310 1474 BC120000 		.word	.LC189
 14311 1478 D8120000 		.word	.LC190
 14312 147c FC120000 		.word	.LC191
 14313 1480 0C130000 		.word	.LC192
 14314 1484 28130000 		.word	.LC193
 14315 1488 3C130000 		.word	.LC194
 14316 148c 50130000 		.word	.LC195
 14317 1490 74130000 		.word	.LC196
 14318 1494 98130000 		.word	.LC197
 14319              	.L583:
2066:..\src/command_processing.c ****         else
2067:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 14320              		.loc 1 2067 0
 14321 1498 7869     		ldr	r0, [r7, #20]
 14322 149a FFF7FEFF 		bl	strlen
 14323 149e 0346     		mov	r3, r0
 14324 14a0 1A46     		mov	r2, r3
 14325 14a2 7B69     		ldr	r3, [r7, #20]
 14326 14a4 1344     		add	r3, r3, r2
 14327 14a6 B84A     		ldr	r2, .L623
 14328 14a8 1D46     		mov	r5, r3
 14329 14aa 1446     		mov	r4, r2
 14330 14ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14331 14ae 2860     		str	r0, [r5]	@ unaligned
 14332 14b0 6960     		str	r1, [r5, #4]	@ unaligned
 14333 14b2 AA60     		str	r2, [r5, #8]	@ unaligned
 14334 14b4 EB60     		str	r3, [r5, #12]	@ unaligned
 14335 14b6 2068     		ldr	r0, [r4]	@ unaligned
 14336 14b8 2861     		str	r0, [r5, #16]	@ unaligned
 14337              	.L584:
2068:..\src/command_processing.c ****             
2069:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 14338              		.loc 1 2069 0
 14339 14ba D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 325


 14340 14be 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 14341 14c2 002B     		cmp	r3, #0
 14342 14c4 17D0     		beq	.L585
2070:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 14343              		.loc 1 2070 0
 14344 14c6 7869     		ldr	r0, [r7, #20]
 14345 14c8 FFF7FEFF 		bl	strlen
 14346 14cc 0346     		mov	r3, r0
 14347 14ce 1A46     		mov	r2, r3
 14348 14d0 7B69     		ldr	r3, [r7, #20]
 14349 14d2 1344     		add	r3, r3, r2
 14350 14d4 AD4A     		ldr	r2, .L623+4
 14351 14d6 1D46     		mov	r5, r3
 14352 14d8 1446     		mov	r4, r2
 14353 14da 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14354 14dc 2860     		str	r0, [r5]	@ unaligned
 14355 14de 6960     		str	r1, [r5, #4]	@ unaligned
 14356 14e0 AA60     		str	r2, [r5, #8]	@ unaligned
 14357 14e2 EB60     		str	r3, [r5, #12]	@ unaligned
 14358 14e4 03CC     		ldmia	r4!, {r0, r1}
 14359 14e6 2861     		str	r0, [r5, #16]	@ unaligned
 14360 14e8 6961     		str	r1, [r5, #20]	@ unaligned
 14361 14ea 2388     		ldrh	r3, [r4]	@ unaligned
 14362 14ec A278     		ldrb	r2, [r4, #2]
 14363 14ee 2B83     		strh	r3, [r5, #24]	@ unaligned
 14364 14f0 1346     		mov	r3, r2
 14365 14f2 AB76     		strb	r3, [r5, #26]
 14366 14f4 13E0     		b	.L586
 14367              	.L585:
2071:..\src/command_processing.c ****         else
2072:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 14368              		.loc 1 2072 0
 14369 14f6 7869     		ldr	r0, [r7, #20]
 14370 14f8 FFF7FEFF 		bl	strlen
 14371 14fc 0346     		mov	r3, r0
 14372 14fe 1A46     		mov	r2, r3
 14373 1500 7B69     		ldr	r3, [r7, #20]
 14374 1502 1344     		add	r3, r3, r2
 14375 1504 A24A     		ldr	r2, .L623+8
 14376 1506 1D46     		mov	r5, r3
 14377 1508 1446     		mov	r4, r2
 14378 150a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14379 150c 2860     		str	r0, [r5]	@ unaligned
 14380 150e 6960     		str	r1, [r5, #4]	@ unaligned
 14381 1510 AA60     		str	r2, [r5, #8]	@ unaligned
 14382 1512 EB60     		str	r3, [r5, #12]	@ unaligned
 14383 1514 03CC     		ldmia	r4!, {r0, r1}
 14384 1516 2861     		str	r0, [r5, #16]	@ unaligned
 14385 1518 6961     		str	r1, [r5, #20]	@ unaligned
 14386 151a 2388     		ldrh	r3, [r4]	@ unaligned
 14387 151c 2B83     		strh	r3, [r5, #24]	@ unaligned
 14388              	.L586:
2073:..\src/command_processing.c **** 
2074:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 14389              		.loc 1 2074 0
 14390 151e D7F88C30 		ldr	r3, [r7, #140]
 14391 1522 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 326


 14392 1526 1A46     		mov	r2, r3
 14393 1528 07F11C03 		add	r3, r7, #28
 14394 152c 9949     		ldr	r1, .L623+12
 14395 152e 1846     		mov	r0, r3
 14396 1530 FFF7FEFF 		bl	sprintf
2075:..\src/command_processing.c ****         strcat(info_string, str);
 14397              		.loc 1 2075 0
 14398 1534 07F11C03 		add	r3, r7, #28
 14399 1538 1946     		mov	r1, r3
 14400 153a 7869     		ldr	r0, [r7, #20]
 14401 153c FFF7FEFF 		bl	strcat
2076:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14402              		.loc 1 2076 0
 14403 1540 7869     		ldr	r0, [r7, #20]
 14404 1542 FFF7FEFF 		bl	strlen
 14405 1546 0346     		mov	r3, r0
 14406 1548 1A46     		mov	r2, r3
 14407 154a 7B69     		ldr	r3, [r7, #20]
 14408 154c 1344     		add	r3, r3, r2
 14409 154e 924A     		ldr	r2, .L623+16
 14410 1550 1188     		ldrh	r1, [r2]	@ unaligned
 14411 1552 9278     		ldrb	r2, [r2, #2]
 14412 1554 1980     		strh	r1, [r3]	@ unaligned
 14413 1556 9A70     		strb	r2, [r3, #2]
2077:..\src/command_processing.c **** 
2078:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 14414              		.loc 1 2078 0
 14415 1558 D7F88C30 		ldr	r3, [r7, #140]
 14416 155c 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 14417 1560 012B     		cmp	r3, #1
 14418 1562 6ED1     		bne	.L587
2079:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 14419              		.loc 1 2079 0
 14420 1564 7869     		ldr	r0, [r7, #20]
 14421 1566 FFF7FEFF 		bl	strlen
 14422 156a 0346     		mov	r3, r0
 14423 156c 1A46     		mov	r2, r3
 14424 156e 7B69     		ldr	r3, [r7, #20]
 14425 1570 1344     		add	r3, r3, r2
 14426 1572 8A4A     		ldr	r2, .L623+20
 14427 1574 1C46     		mov	r4, r3
 14428 1576 1546     		mov	r5, r2
 14429 1578 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14430 157a 2060     		str	r0, [r4]	@ unaligned
 14431 157c 6160     		str	r1, [r4, #4]	@ unaligned
 14432 157e A260     		str	r2, [r4, #8]	@ unaligned
 14433 1580 E360     		str	r3, [r4, #12]	@ unaligned
 14434 1582 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14435 1584 2061     		str	r0, [r4, #16]	@ unaligned
 14436 1586 6161     		str	r1, [r4, #20]	@ unaligned
 14437 1588 A261     		str	r2, [r4, #24]	@ unaligned
 14438 158a E361     		str	r3, [r4, #28]	@ unaligned
2080:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 14439              		.loc 1 2080 0
 14440 158c 0023     		movs	r3, #0
 14441 158e C7F89430 		str	r3, [r7, #148]
 14442 1592 25E0     		b	.L588
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 327


 14443              	.L589:
2081:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14444              		.loc 1 2081 0 discriminator 3
 14445 1594 D7F89430 		ldr	r3, [r7, #148]
 14446 1598 591C     		adds	r1, r3, #1
 14447 159a 814A     		ldr	r2, .L623+24
 14448 159c D7F89430 		ldr	r3, [r7, #148]
 14449 15a0 0233     		adds	r3, r3, #2
 14450 15a2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14451 15a6 07F11C00 		add	r0, r7, #28
 14452 15aa 0A46     		mov	r2, r1
 14453 15ac 7D49     		ldr	r1, .L623+28
 14454 15ae FFF7FEFF 		bl	sprintf
2082:..\src/command_processing.c ****                 strcat(info_string, str);
 14455              		.loc 1 2082 0 discriminator 3
 14456 15b2 07F11C03 		add	r3, r7, #28
 14457 15b6 1946     		mov	r1, r3
 14458 15b8 7869     		ldr	r0, [r7, #20]
 14459 15ba FFF7FEFF 		bl	strcat
2083:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14460              		.loc 1 2083 0 discriminator 3
 14461 15be 7869     		ldr	r0, [r7, #20]
 14462 15c0 FFF7FEFF 		bl	strlen
 14463 15c4 0346     		mov	r3, r0
 14464 15c6 1A46     		mov	r2, r3
 14465 15c8 7B69     		ldr	r3, [r7, #20]
 14466 15ca 1344     		add	r3, r3, r2
 14467 15cc 724A     		ldr	r2, .L623+16
 14468 15ce 1188     		ldrh	r1, [r2]	@ unaligned
 14469 15d0 9278     		ldrb	r2, [r2, #2]
 14470 15d2 1980     		strh	r1, [r3]	@ unaligned
 14471 15d4 9A70     		strb	r2, [r3, #2]
2080:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14472              		.loc 1 2080 0 discriminator 3
 14473 15d6 D7F89430 		ldr	r3, [r7, #148]
 14474 15da 0133     		adds	r3, r3, #1
 14475 15dc C7F89430 		str	r3, [r7, #148]
 14476              	.L588:
2080:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14477              		.loc 1 2080 0 is_stmt 0 discriminator 1
 14478 15e0 D7F89430 		ldr	r3, [r7, #148]
 14479 15e4 052B     		cmp	r3, #5
 14480 15e6 D5DD     		ble	.L589
2084:..\src/command_processing.c ****             }
2085:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 14481              		.loc 1 2085 0 is_stmt 1
 14482 15e8 0023     		movs	r3, #0
 14483 15ea C7F89430 		str	r3, [r7, #148]
 14484 15ee 24E0     		b	.L590
 14485              	.L591:
2086:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14486              		.loc 1 2086 0 discriminator 3
 14487 15f0 D7F89430 		ldr	r3, [r7, #148]
 14488 15f4 591C     		adds	r1, r3, #1
 14489 15f6 6A4A     		ldr	r2, .L623+24
 14490 15f8 D7F89430 		ldr	r3, [r7, #148]
 14491 15fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 328


 14492 1600 07F11C00 		add	r0, r7, #28
 14493 1604 0A46     		mov	r2, r1
 14494 1606 6849     		ldr	r1, .L623+32
 14495 1608 FFF7FEFF 		bl	sprintf
2087:..\src/command_processing.c ****                 strcat(info_string, str);
 14496              		.loc 1 2087 0 discriminator 3
 14497 160c 07F11C03 		add	r3, r7, #28
 14498 1610 1946     		mov	r1, r3
 14499 1612 7869     		ldr	r0, [r7, #20]
 14500 1614 FFF7FEFF 		bl	strcat
2088:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14501              		.loc 1 2088 0 discriminator 3
 14502 1618 7869     		ldr	r0, [r7, #20]
 14503 161a FFF7FEFF 		bl	strlen
 14504 161e 0346     		mov	r3, r0
 14505 1620 1A46     		mov	r2, r3
 14506 1622 7B69     		ldr	r3, [r7, #20]
 14507 1624 1344     		add	r3, r3, r2
 14508 1626 5C4A     		ldr	r2, .L623+16
 14509 1628 1188     		ldrh	r1, [r2]	@ unaligned
 14510 162a 9278     		ldrb	r2, [r2, #2]
 14511 162c 1980     		strh	r1, [r3]	@ unaligned
 14512 162e 9A70     		strb	r2, [r3, #2]
2085:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14513              		.loc 1 2085 0 discriminator 3
 14514 1630 D7F89430 		ldr	r3, [r7, #148]
 14515 1634 0133     		adds	r3, r3, #1
 14516 1636 C7F89430 		str	r3, [r7, #148]
 14517              	.L590:
2085:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14518              		.loc 1 2085 0 is_stmt 0 discriminator 1
 14519 163a D7F89430 		ldr	r3, [r7, #148]
 14520 163e 012B     		cmp	r3, #1
 14521 1640 D6DD     		ble	.L591
 14522              	.L587:
2089:..\src/command_processing.c ****             }
2090:..\src/command_processing.c ****         }
2091:..\src/command_processing.c ****         
2092:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 14523              		.loc 1 2092 0 is_stmt 1
 14524 1642 D7F88C30 		ldr	r3, [r7, #140]
 14525 1646 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 14526 164a 002B     		cmp	r3, #0
 14527 164c 63D0     		beq	.L592
2093:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 14528              		.loc 1 2093 0
 14529 164e D7F88C30 		ldr	r3, [r7, #140]
 14530 1652 D3F8A422 		ldr	r2, [r3, #676]
 14531 1656 07F11C03 		add	r3, r7, #28
 14532 165a 5449     		ldr	r1, .L623+36
 14533 165c 1846     		mov	r0, r3
 14534 165e FFF7FEFF 		bl	sprintf
2094:..\src/command_processing.c ****             strcat(info_string, str);
 14535              		.loc 1 2094 0
 14536 1662 07F11C03 		add	r3, r7, #28
 14537 1666 1946     		mov	r1, r3
 14538 1668 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 329


 14539 166a FFF7FEFF 		bl	strcat
2095:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14540              		.loc 1 2095 0
 14541 166e 7869     		ldr	r0, [r7, #20]
 14542 1670 FFF7FEFF 		bl	strlen
 14543 1674 0346     		mov	r3, r0
 14544 1676 1A46     		mov	r2, r3
 14545 1678 7B69     		ldr	r3, [r7, #20]
 14546 167a 1344     		add	r3, r3, r2
 14547 167c 464A     		ldr	r2, .L623+16
 14548 167e 1188     		ldrh	r1, [r2]	@ unaligned
 14549 1680 9278     		ldrb	r2, [r2, #2]
 14550 1682 1980     		strh	r1, [r3]	@ unaligned
 14551 1684 9A70     		strb	r2, [r3, #2]
2096:..\src/command_processing.c ****             
2097:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 14552              		.loc 1 2097 0
 14553 1686 D7F88C30 		ldr	r3, [r7, #140]
 14554 168a D3F8A822 		ldr	r2, [r3, #680]
 14555 168e 07F11C03 		add	r3, r7, #28
 14556 1692 4749     		ldr	r1, .L623+40
 14557 1694 1846     		mov	r0, r3
 14558 1696 FFF7FEFF 		bl	sprintf
2098:..\src/command_processing.c ****             strcat(info_string, str);
 14559              		.loc 1 2098 0
 14560 169a 07F11C03 		add	r3, r7, #28
 14561 169e 1946     		mov	r1, r3
 14562 16a0 7869     		ldr	r0, [r7, #20]
 14563 16a2 FFF7FEFF 		bl	strcat
2099:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14564              		.loc 1 2099 0
 14565 16a6 7869     		ldr	r0, [r7, #20]
 14566 16a8 FFF7FEFF 		bl	strlen
 14567 16ac 0346     		mov	r3, r0
 14568 16ae 1A46     		mov	r2, r3
 14569 16b0 7B69     		ldr	r3, [r7, #20]
 14570 16b2 1344     		add	r3, r3, r2
 14571 16b4 384A     		ldr	r2, .L623+16
 14572 16b6 1188     		ldrh	r1, [r2]	@ unaligned
 14573 16b8 9278     		ldrb	r2, [r2, #2]
 14574 16ba 1980     		strh	r1, [r3]	@ unaligned
 14575 16bc 9A70     		strb	r2, [r3, #2]
2100:..\src/command_processing.c ****             
2101:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 14576              		.loc 1 2101 0
 14577 16be D7F88C30 		ldr	r3, [r7, #140]
 14578 16c2 D3F8A022 		ldr	r2, [r3, #672]
 14579 16c6 D7F88C30 		ldr	r3, [r7, #140]
 14580 16ca 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 14581 16ce 1846     		mov	r0, r3
 14582 16d0 D7F88C10 		ldr	r1, [r7, #140]
 14583 16d4 0346     		mov	r3, r0
 14584 16d6 5B00     		lsls	r3, r3, #1
 14585 16d8 0344     		add	r3, r3, r0
 14586 16da 1B01     		lsls	r3, r3, #4
 14587 16dc 0B44     		add	r3, r3, r1
 14588 16de 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 330


 14589 16e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14590 16e4 1A41     		asrs	r2, r2, r3
 14591 16e6 07F11C03 		add	r3, r7, #28
 14592 16ea 3249     		ldr	r1, .L623+44
 14593 16ec 1846     		mov	r0, r3
 14594 16ee FFF7FEFF 		bl	sprintf
2102:..\src/command_processing.c ****             strcat(info_string, str);
 14595              		.loc 1 2102 0
 14596 16f2 07F11C03 		add	r3, r7, #28
 14597 16f6 1946     		mov	r1, r3
 14598 16f8 7869     		ldr	r0, [r7, #20]
 14599 16fa FFF7FEFF 		bl	strcat
2103:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 14600              		.loc 1 2103 0
 14601 16fe 7869     		ldr	r0, [r7, #20]
 14602 1700 FFF7FEFF 		bl	strlen
 14603 1704 0346     		mov	r3, r0
 14604 1706 1A46     		mov	r2, r3
 14605 1708 7B69     		ldr	r3, [r7, #20]
 14606 170a 1344     		add	r3, r3, r2
 14607 170c 224A     		ldr	r2, .L623+16
 14608 170e 1188     		ldrh	r1, [r2]	@ unaligned
 14609 1710 9278     		ldrb	r2, [r2, #2]
 14610 1712 1980     		strh	r1, [r3]	@ unaligned
 14611 1714 9A70     		strb	r2, [r3, #2]
 14612              	.L592:
2104:..\src/command_processing.c ****         }
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 14613              		.loc 1 2106 0
 14614 1716 D7F88C30 		ldr	r3, [r7, #140]
 14615 171a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 14616 171e 002B     		cmp	r3, #0
 14617 1720 00F0CC81 		beq	.L593
2107:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 14618              		.loc 1 2107 0
 14619 1724 244B     		ldr	r3, .L623+48
 14620 1726 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14621 1728 1A46     		mov	r2, r3
 14622 172a 07F11C03 		add	r3, r7, #28
 14623 172e 2349     		ldr	r1, .L623+52
 14624 1730 1846     		mov	r0, r3
 14625 1732 FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****             strcat(info_string, str);
 14626              		.loc 1 2108 0
 14627 1736 07F11C03 		add	r3, r7, #28
 14628 173a 1946     		mov	r1, r3
 14629 173c 7869     		ldr	r0, [r7, #20]
 14630 173e FFF7FEFF 		bl	strcat
2109:..\src/command_processing.c ****             
2110:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14631              		.loc 1 2110 0
 14632 1742 7869     		ldr	r0, [r7, #20]
 14633 1744 FFF7FEFF 		bl	strlen
 14634 1748 0346     		mov	r3, r0
 14635 174a 1A46     		mov	r2, r3
 14636 174c 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 331


 14637 174e 1344     		add	r3, r3, r2
 14638 1750 114A     		ldr	r2, .L623+16
 14639 1752 1188     		ldrh	r1, [r2]	@ unaligned
 14640 1754 9278     		ldrb	r2, [r2, #2]
 14641 1756 1980     		strh	r1, [r3]	@ unaligned
 14642 1758 9A70     		strb	r2, [r3, #2]
2111:..\src/command_processing.c ****             
2112:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 14643              		.loc 1 2112 0
 14644 175a 7869     		ldr	r0, [r7, #20]
 14645 175c FFF7FEFF 		bl	strlen
 14646 1760 0346     		mov	r3, r0
 14647 1762 1A46     		mov	r2, r3
 14648 1764 7B69     		ldr	r3, [r7, #20]
 14649 1766 1344     		add	r3, r3, r2
 14650 1768 154A     		ldr	r2, .L623+56
 14651 176a 1D46     		mov	r5, r3
 14652 176c 1446     		mov	r4, r2
 14653 176e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14654 1770 2860     		str	r0, [r5]	@ unaligned
 14655 1772 6960     		str	r1, [r5, #4]	@ unaligned
 14656 1774 AA60     		str	r2, [r5, #8]	@ unaligned
 14657 1776 EB60     		str	r3, [r5, #12]	@ unaligned
 14658 1778 2068     		ldr	r0, [r4]	@ unaligned
 14659 177a 2861     		str	r0, [r5, #16]	@ unaligned
 14660 177c 2379     		ldrb	r3, [r4, #4]
 14661 177e 2B75     		strb	r3, [r5, #20]
2113:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 14662              		.loc 1 2113 0
 14663 1780 0023     		movs	r3, #0
 14664 1782 C7F89430 		str	r3, [r7, #148]
 14665 1786 82E1     		b	.L594
 14666              	.L624:
 14667              		.align	2
 14668              	.L623:
 14669 1788 B0130000 		.word	.LC198
 14670 178c C4130000 		.word	.LC199
 14671 1790 E0130000 		.word	.LC200
 14672 1794 FC130000 		.word	.LC201
 14673 1798 840D0000 		.word	.LC125
 14674 179c 10140000 		.word	.LC202
 14675 17a0 00000000 		.word	g_emg_meas
 14676 17a4 30140000 		.word	.LC203
 14677 17a8 40140000 		.word	.LC204
 14678 17ac 54140000 		.word	.LC205
 14679 17b0 70140000 		.word	.LC206
 14680 17b4 98140000 		.word	.LC207
 14681 17b8 00000000 		.word	N_IMU_Connected
 14682 17bc AC140000 		.word	.LC208
 14683 17c0 C0140000 		.word	.LC209
 14684              	.L605:
2114:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 14685              		.loc 1 2114 0
 14686 17c4 D54A     		ldr	r2, .L625
 14687 17c6 D7F89430 		ldr	r3, [r7, #148]
 14688 17ca 1344     		add	r3, r3, r2
 14689 17cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 332


 14690 17ce 07F11C00 		add	r0, r7, #28
 14691 17d2 D7F89420 		ldr	r2, [r7, #148]
 14692 17d6 D249     		ldr	r1, .L625+4
 14693 17d8 FFF7FEFF 		bl	sprintf
2115:..\src/command_processing.c ****                 strcat(info_string, str);
 14694              		.loc 1 2115 0
 14695 17dc 07F11C03 		add	r3, r7, #28
 14696 17e0 1946     		mov	r1, r3
 14697 17e2 7869     		ldr	r0, [r7, #20]
 14698 17e4 FFF7FEFF 		bl	strcat
2116:..\src/command_processing.c ****                 
2117:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 14699              		.loc 1 2117 0
 14700 17e8 07F11C03 		add	r3, r7, #28
 14701 17ec CD4A     		ldr	r2, .L625+8
 14702 17ee 1C46     		mov	r4, r3
 14703 17f0 1546     		mov	r5, r2
 14704 17f2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14705 17f4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 14706 17f6 2B68     		ldr	r3, [r5]
 14707 17f8 2380     		strh	r3, [r4]	@ movhi
2118:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 14708              		.loc 1 2118 0
 14709 17fa C84A     		ldr	r2, .L625
 14710 17fc D7F89430 		ldr	r3, [r7, #148]
 14711 1800 1344     		add	r3, r3, r2
 14712 1802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14713 1804 1946     		mov	r1, r3
 14714 1806 D7F88C20 		ldr	r2, [r7, #140]
 14715 180a 0B46     		mov	r3, r1
 14716 180c 9B00     		lsls	r3, r3, #2
 14717 180e 0B44     		add	r3, r3, r1
 14718 1810 1344     		add	r3, r3, r2
 14719 1812 03F20223 		addw	r3, r3, #514
 14720 1816 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14721 1818 002B     		cmp	r3, #0
 14722 181a 0FD0     		beq	.L595
2119:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14723              		.loc 1 2119 0
 14724 181c 07F11C03 		add	r3, r7, #28
 14725 1820 1846     		mov	r0, r3
 14726 1822 FFF7FEFF 		bl	strlen
 14727 1826 0346     		mov	r3, r0
 14728 1828 1A46     		mov	r2, r3
 14729 182a 07F11C03 		add	r3, r7, #28
 14730 182e 1344     		add	r3, r3, r2
 14731 1830 BD4A     		ldr	r2, .L625+12
 14732 1832 1068     		ldr	r0, [r2]	@ unaligned
 14733 1834 1860     		str	r0, [r3]	@ unaligned
 14734 1836 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14735 1838 9A80     		strh	r2, [r3, #4]	@ unaligned
 14736 183a 0EE0     		b	.L596
 14737              	.L595:
2120:..\src/command_processing.c ****                 else
2121:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14738              		.loc 1 2121 0
 14739 183c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 333


 14740 1840 1846     		mov	r0, r3
 14741 1842 FFF7FEFF 		bl	strlen
 14742 1846 0346     		mov	r3, r0
 14743 1848 1A46     		mov	r2, r3
 14744 184a 07F11C03 		add	r3, r7, #28
 14745 184e 1344     		add	r3, r3, r2
 14746 1850 B64A     		ldr	r2, .L625+16
 14747 1852 1068     		ldr	r0, [r2]	@ unaligned
 14748 1854 1860     		str	r0, [r3]	@ unaligned
 14749 1856 1279     		ldrb	r2, [r2, #4]
 14750 1858 1A71     		strb	r2, [r3, #4]
 14751              	.L596:
2122:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 14752              		.loc 1 2122 0
 14753 185a 07F11C03 		add	r3, r7, #28
 14754 185e 1846     		mov	r0, r3
 14755 1860 FFF7FEFF 		bl	strlen
 14756 1864 0346     		mov	r3, r0
 14757 1866 1A46     		mov	r2, r3
 14758 1868 07F11C03 		add	r3, r7, #28
 14759 186c 1344     		add	r3, r3, r2
 14760 186e B04A     		ldr	r2, .L625+20
 14761 1870 1C46     		mov	r4, r3
 14762 1872 1346     		mov	r3, r2
 14763 1874 07CB     		ldmia	r3!, {r0, r1, r2}
 14764 1876 2060     		str	r0, [r4]	@ unaligned
 14765 1878 6160     		str	r1, [r4, #4]	@ unaligned
 14766 187a A260     		str	r2, [r4, #8]	@ unaligned
 14767 187c 1B88     		ldrh	r3, [r3]	@ unaligned
 14768 187e A381     		strh	r3, [r4, #12]	@ unaligned
2123:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 14769              		.loc 1 2123 0
 14770 1880 A64A     		ldr	r2, .L625
 14771 1882 D7F89430 		ldr	r3, [r7, #148]
 14772 1886 1344     		add	r3, r3, r2
 14773 1888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14774 188a 1946     		mov	r1, r3
 14775 188c D7F88C20 		ldr	r2, [r7, #140]
 14776 1890 0B46     		mov	r3, r1
 14777 1892 9B00     		lsls	r3, r3, #2
 14778 1894 0B44     		add	r3, r3, r1
 14779 1896 1344     		add	r3, r3, r2
 14780 1898 03F20323 		addw	r3, r3, #515
 14781 189c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14782 189e 002B     		cmp	r3, #0
 14783 18a0 0FD0     		beq	.L597
2124:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14784              		.loc 1 2124 0
 14785 18a2 07F11C03 		add	r3, r7, #28
 14786 18a6 1846     		mov	r0, r3
 14787 18a8 FFF7FEFF 		bl	strlen
 14788 18ac 0346     		mov	r3, r0
 14789 18ae 1A46     		mov	r2, r3
 14790 18b0 07F11C03 		add	r3, r7, #28
 14791 18b4 1344     		add	r3, r3, r2
 14792 18b6 9C4A     		ldr	r2, .L625+12
 14793 18b8 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 334


 14794 18ba 1860     		str	r0, [r3]	@ unaligned
 14795 18bc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14796 18be 9A80     		strh	r2, [r3, #4]	@ unaligned
 14797 18c0 0EE0     		b	.L598
 14798              	.L597:
2125:..\src/command_processing.c ****                 else
2126:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14799              		.loc 1 2126 0
 14800 18c2 07F11C03 		add	r3, r7, #28
 14801 18c6 1846     		mov	r0, r3
 14802 18c8 FFF7FEFF 		bl	strlen
 14803 18cc 0346     		mov	r3, r0
 14804 18ce 1A46     		mov	r2, r3
 14805 18d0 07F11C03 		add	r3, r7, #28
 14806 18d4 1344     		add	r3, r3, r2
 14807 18d6 954A     		ldr	r2, .L625+16
 14808 18d8 1068     		ldr	r0, [r2]	@ unaligned
 14809 18da 1860     		str	r0, [r3]	@ unaligned
 14810 18dc 1279     		ldrb	r2, [r2, #4]
 14811 18de 1A71     		strb	r2, [r3, #4]
 14812              	.L598:
2127:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 14813              		.loc 1 2127 0
 14814 18e0 07F11C03 		add	r3, r7, #28
 14815 18e4 1846     		mov	r0, r3
 14816 18e6 FFF7FEFF 		bl	strlen
 14817 18ea 0346     		mov	r3, r0
 14818 18ec 1A46     		mov	r2, r3
 14819 18ee 07F11C03 		add	r3, r7, #28
 14820 18f2 1344     		add	r3, r3, r2
 14821 18f4 8F4A     		ldr	r2, .L625+24
 14822 18f6 1D46     		mov	r5, r3
 14823 18f8 1446     		mov	r4, r2
 14824 18fa 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14825 18fc 2860     		str	r0, [r5]	@ unaligned
 14826 18fe 6960     		str	r1, [r5, #4]	@ unaligned
 14827 1900 AA60     		str	r2, [r5, #8]	@ unaligned
 14828 1902 EB60     		str	r3, [r5, #12]	@ unaligned
 14829 1904 2378     		ldrb	r3, [r4]
 14830 1906 2B74     		strb	r3, [r5, #16]
2128:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 14831              		.loc 1 2128 0
 14832 1908 844A     		ldr	r2, .L625
 14833 190a D7F89430 		ldr	r3, [r7, #148]
 14834 190e 1344     		add	r3, r3, r2
 14835 1910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14836 1912 1946     		mov	r1, r3
 14837 1914 D7F88C20 		ldr	r2, [r7, #140]
 14838 1918 0B46     		mov	r3, r1
 14839 191a 9B00     		lsls	r3, r3, #2
 14840 191c 0B44     		add	r3, r3, r1
 14841 191e 1344     		add	r3, r3, r2
 14842 1920 03F50173 		add	r3, r3, #516
 14843 1924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14844 1926 002B     		cmp	r3, #0
 14845 1928 0FD0     		beq	.L599
2129:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 335


 14846              		.loc 1 2129 0
 14847 192a 07F11C03 		add	r3, r7, #28
 14848 192e 1846     		mov	r0, r3
 14849 1930 FFF7FEFF 		bl	strlen
 14850 1934 0346     		mov	r3, r0
 14851 1936 1A46     		mov	r2, r3
 14852 1938 07F11C03 		add	r3, r7, #28
 14853 193c 1344     		add	r3, r3, r2
 14854 193e 7A4A     		ldr	r2, .L625+12
 14855 1940 1068     		ldr	r0, [r2]	@ unaligned
 14856 1942 1860     		str	r0, [r3]	@ unaligned
 14857 1944 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14858 1946 9A80     		strh	r2, [r3, #4]	@ unaligned
 14859 1948 0EE0     		b	.L600
 14860              	.L599:
2130:..\src/command_processing.c ****                 else
2131:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14861              		.loc 1 2131 0
 14862 194a 07F11C03 		add	r3, r7, #28
 14863 194e 1846     		mov	r0, r3
 14864 1950 FFF7FEFF 		bl	strlen
 14865 1954 0346     		mov	r3, r0
 14866 1956 1A46     		mov	r2, r3
 14867 1958 07F11C03 		add	r3, r7, #28
 14868 195c 1344     		add	r3, r3, r2
 14869 195e 734A     		ldr	r2, .L625+16
 14870 1960 1068     		ldr	r0, [r2]	@ unaligned
 14871 1962 1860     		str	r0, [r3]	@ unaligned
 14872 1964 1279     		ldrb	r2, [r2, #4]
 14873 1966 1A71     		strb	r2, [r3, #4]
 14874              	.L600:
2132:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 14875              		.loc 1 2132 0
 14876 1968 07F11C03 		add	r3, r7, #28
 14877 196c 1846     		mov	r0, r3
 14878 196e FFF7FEFF 		bl	strlen
 14879 1972 0346     		mov	r3, r0
 14880 1974 1A46     		mov	r2, r3
 14881 1976 07F11C03 		add	r3, r7, #28
 14882 197a 1344     		add	r3, r3, r2
 14883 197c 6E4A     		ldr	r2, .L625+28
 14884 197e 1C46     		mov	r4, r3
 14885 1980 1346     		mov	r3, r2
 14886 1982 07CB     		ldmia	r3!, {r0, r1, r2}
 14887 1984 2060     		str	r0, [r4]	@ unaligned
 14888 1986 6160     		str	r1, [r4, #4]	@ unaligned
 14889 1988 A260     		str	r2, [r4, #8]	@ unaligned
 14890 198a 1B88     		ldrh	r3, [r3]	@ unaligned
 14891 198c A381     		strh	r3, [r4, #12]	@ unaligned
2133:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 14892              		.loc 1 2133 0
 14893 198e 634A     		ldr	r2, .L625
 14894 1990 D7F89430 		ldr	r3, [r7, #148]
 14895 1994 1344     		add	r3, r3, r2
 14896 1996 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14897 1998 1946     		mov	r1, r3
 14898 199a D7F88C20 		ldr	r2, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 336


 14899 199e 0B46     		mov	r3, r1
 14900 19a0 9B00     		lsls	r3, r3, #2
 14901 19a2 0B44     		add	r3, r3, r1
 14902 19a4 1344     		add	r3, r3, r2
 14903 19a6 03F20523 		addw	r3, r3, #517
 14904 19aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14905 19ac 002B     		cmp	r3, #0
 14906 19ae 0FD0     		beq	.L601
2134:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14907              		.loc 1 2134 0
 14908 19b0 07F11C03 		add	r3, r7, #28
 14909 19b4 1846     		mov	r0, r3
 14910 19b6 FFF7FEFF 		bl	strlen
 14911 19ba 0346     		mov	r3, r0
 14912 19bc 1A46     		mov	r2, r3
 14913 19be 07F11C03 		add	r3, r7, #28
 14914 19c2 1344     		add	r3, r3, r2
 14915 19c4 584A     		ldr	r2, .L625+12
 14916 19c6 1068     		ldr	r0, [r2]	@ unaligned
 14917 19c8 1860     		str	r0, [r3]	@ unaligned
 14918 19ca 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14919 19cc 9A80     		strh	r2, [r3, #4]	@ unaligned
 14920 19ce 0EE0     		b	.L602
 14921              	.L601:
2135:..\src/command_processing.c ****                 else
2136:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14922              		.loc 1 2136 0
 14923 19d0 07F11C03 		add	r3, r7, #28
 14924 19d4 1846     		mov	r0, r3
 14925 19d6 FFF7FEFF 		bl	strlen
 14926 19da 0346     		mov	r3, r0
 14927 19dc 1A46     		mov	r2, r3
 14928 19de 07F11C03 		add	r3, r7, #28
 14929 19e2 1344     		add	r3, r3, r2
 14930 19e4 514A     		ldr	r2, .L625+16
 14931 19e6 1068     		ldr	r0, [r2]	@ unaligned
 14932 19e8 1860     		str	r0, [r3]	@ unaligned
 14933 19ea 1279     		ldrb	r2, [r2, #4]
 14934 19ec 1A71     		strb	r2, [r3, #4]
 14935              	.L602:
2137:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 14936              		.loc 1 2137 0
 14937 19ee 07F11C03 		add	r3, r7, #28
 14938 19f2 1846     		mov	r0, r3
 14939 19f4 FFF7FEFF 		bl	strlen
 14940 19f8 0346     		mov	r3, r0
 14941 19fa 1A46     		mov	r2, r3
 14942 19fc 07F11C03 		add	r3, r7, #28
 14943 1a00 1344     		add	r3, r3, r2
 14944 1a02 4E4A     		ldr	r2, .L625+32
 14945 1a04 1C46     		mov	r4, r3
 14946 1a06 1346     		mov	r3, r2
 14947 1a08 07CB     		ldmia	r3!, {r0, r1, r2}
 14948 1a0a 2060     		str	r0, [r4]	@ unaligned
 14949 1a0c 6160     		str	r1, [r4, #4]	@ unaligned
 14950 1a0e A260     		str	r2, [r4, #8]	@ unaligned
 14951 1a10 1A88     		ldrh	r2, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 337


 14952 1a12 9B78     		ldrb	r3, [r3, #2]
 14953 1a14 A281     		strh	r2, [r4, #12]	@ unaligned
 14954 1a16 A373     		strb	r3, [r4, #14]
2138:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 14955              		.loc 1 2138 0
 14956 1a18 404A     		ldr	r2, .L625
 14957 1a1a D7F89430 		ldr	r3, [r7, #148]
 14958 1a1e 1344     		add	r3, r3, r2
 14959 1a20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14960 1a22 1946     		mov	r1, r3
 14961 1a24 D7F88C20 		ldr	r2, [r7, #140]
 14962 1a28 0B46     		mov	r3, r1
 14963 1a2a 9B00     		lsls	r3, r3, #2
 14964 1a2c 0B44     		add	r3, r3, r1
 14965 1a2e 1344     		add	r3, r3, r2
 14966 1a30 03F20623 		addw	r3, r3, #518
 14967 1a34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14968 1a36 002B     		cmp	r3, #0
 14969 1a38 0FD0     		beq	.L603
2139:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14970              		.loc 1 2139 0
 14971 1a3a 07F11C03 		add	r3, r7, #28
 14972 1a3e 1846     		mov	r0, r3
 14973 1a40 FFF7FEFF 		bl	strlen
 14974 1a44 0346     		mov	r3, r0
 14975 1a46 1A46     		mov	r2, r3
 14976 1a48 07F11C03 		add	r3, r7, #28
 14977 1a4c 1344     		add	r3, r3, r2
 14978 1a4e 364A     		ldr	r2, .L625+12
 14979 1a50 1068     		ldr	r0, [r2]	@ unaligned
 14980 1a52 1860     		str	r0, [r3]	@ unaligned
 14981 1a54 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14982 1a56 9A80     		strh	r2, [r3, #4]	@ unaligned
 14983 1a58 0EE0     		b	.L604
 14984              	.L603:
2140:..\src/command_processing.c ****                 else
2141:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14985              		.loc 1 2141 0
 14986 1a5a 07F11C03 		add	r3, r7, #28
 14987 1a5e 1846     		mov	r0, r3
 14988 1a60 FFF7FEFF 		bl	strlen
 14989 1a64 0346     		mov	r3, r0
 14990 1a66 1A46     		mov	r2, r3
 14991 1a68 07F11C03 		add	r3, r7, #28
 14992 1a6c 1344     		add	r3, r3, r2
 14993 1a6e 2F4A     		ldr	r2, .L625+16
 14994 1a70 1068     		ldr	r0, [r2]	@ unaligned
 14995 1a72 1860     		str	r0, [r3]	@ unaligned
 14996 1a74 1279     		ldrb	r2, [r2, #4]
 14997 1a76 1A71     		strb	r2, [r3, #4]
 14998              	.L604:
2142:..\src/command_processing.c ****                      
2143:..\src/command_processing.c ****                 strcat(info_string, str);
 14999              		.loc 1 2143 0 discriminator 2
 15000 1a78 07F11C03 		add	r3, r7, #28
 15001 1a7c 1946     		mov	r1, r3
 15002 1a7e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 338


 15003 1a80 FFF7FEFF 		bl	strcat
2113:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15004              		.loc 1 2113 0 discriminator 2
 15005 1a84 D7F89430 		ldr	r3, [r7, #148]
 15006 1a88 0133     		adds	r3, r3, #1
 15007 1a8a C7F89430 		str	r3, [r7, #148]
 15008              	.L594:
2113:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15009              		.loc 1 2113 0 is_stmt 0 discriminator 1
 15010 1a8e 2C4B     		ldr	r3, .L625+36
 15011 1a90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15012 1a92 1A46     		mov	r2, r3
 15013 1a94 D7F89430 		ldr	r3, [r7, #148]
 15014 1a98 9A42     		cmp	r2, r3
 15015 1a9a 3FF793AE 		bgt	.L605
2144:..\src/command_processing.c ****             }       
2145:..\src/command_processing.c ****             
2146:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15016              		.loc 1 2146 0 is_stmt 1
 15017 1a9e 7869     		ldr	r0, [r7, #20]
 15018 1aa0 FFF7FEFF 		bl	strlen
 15019 1aa4 0346     		mov	r3, r0
 15020 1aa6 1A46     		mov	r2, r3
 15021 1aa8 7B69     		ldr	r3, [r7, #20]
 15022 1aaa 1344     		add	r3, r3, r2
 15023 1aac 254A     		ldr	r2, .L625+40
 15024 1aae 1188     		ldrh	r1, [r2]	@ unaligned
 15025 1ab0 9278     		ldrb	r2, [r2, #2]
 15026 1ab2 1980     		strh	r1, [r3]	@ unaligned
 15027 1ab4 9A70     		strb	r2, [r3, #2]
2147:..\src/command_processing.c ****           
2148:..\src/command_processing.c ****             IMU_reading_info(info_string);
 15028              		.loc 1 2148 0
 15029 1ab6 7869     		ldr	r0, [r7, #20]
 15030 1ab8 FFF7FEFF 		bl	IMU_reading_info
 15031              	.L593:
2149:..\src/command_processing.c ****         }
2150:..\src/command_processing.c ****         
2151:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15032              		.loc 1 2151 0
 15033 1abc 7869     		ldr	r0, [r7, #20]
 15034 1abe FFF7FEFF 		bl	strlen
 15035 1ac2 0346     		mov	r3, r0
 15036 1ac4 1A46     		mov	r2, r3
 15037 1ac6 7B69     		ldr	r3, [r7, #20]
 15038 1ac8 1344     		add	r3, r3, r2
 15039 1aca 1E4A     		ldr	r2, .L625+40
 15040 1acc 1188     		ldrh	r1, [r2]	@ unaligned
 15041 1ace 9278     		ldrb	r2, [r2, #2]
 15042 1ad0 1980     		strh	r1, [r3]	@ unaligned
 15043 1ad2 9A70     		strb	r2, [r3, #2]
2152:..\src/command_processing.c **** 
2153:..\src/command_processing.c **** #ifdef GENERIC_FW   
2154:..\src/command_processing.c ****         int j;
2155:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2156:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2157:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 339


2158:..\src/command_processing.c ****             strcat(info_string, str);
2159:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2160:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2161:..\src/command_processing.c ****                 strcat(info_string, str);
2162:..\src/command_processing.c ****             }
2163:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2164:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2165:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2166:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2167:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2168:..\src/command_processing.c ****                     strcat(info_string, str);
2169:..\src/command_processing.c ****                 }
2170:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2171:..\src/command_processing.c ****             }
2172:..\src/command_processing.c ****         }
2173:..\src/command_processing.c **** #endif   
2174:..\src/command_processing.c ****         
2175:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 15044              		.loc 1 2175 0
 15045 1ad4 1C4B     		ldr	r3, .L625+44
 15046 1ad6 1B88     		ldrh	r3, [r3]
 15047 1ad8 1A46     		mov	r2, r3
 15048 1ada 1C4B     		ldr	r3, .L625+48
 15049 1adc 1B88     		ldrh	r3, [r3]
 15050 1ade D21A     		subs	r2, r2, r3
 15051 1ae0 07F11C03 		add	r3, r7, #28
 15052 1ae4 1A49     		ldr	r1, .L625+52
 15053 1ae6 1846     		mov	r0, r3
 15054 1ae8 FFF7FEFF 		bl	sprintf
2176:..\src/command_processing.c ****         strcat(info_string, str);
 15055              		.loc 1 2176 0
 15056 1aec 07F11C03 		add	r3, r7, #28
 15057 1af0 1946     		mov	r1, r3
 15058 1af2 7869     		ldr	r0, [r7, #20]
 15059 1af4 FFF7FEFF 		bl	strcat
2177:..\src/command_processing.c ****   
2178:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 15060              		.loc 1 2178 0
 15061 1af8 7869     		ldr	r0, [r7, #20]
 15062 1afa FFF7FEFF 		bl	strlen
 15063 1afe 0346     		mov	r3, r0
 15064 1b00 1A46     		mov	r2, r3
 15065 1b02 7B69     		ldr	r3, [r7, #20]
 15066 1b04 1344     		add	r3, r3, r2
 15067 1b06 134A     		ldr	r2, .L625+56
 15068 1b08 1188     		ldrh	r1, [r2]	@ unaligned
 15069 1b0a 9278     		ldrb	r2, [r2, #2]
 15070 1b0c 1980     		strh	r1, [r3]	@ unaligned
 15071 1b0e 9A70     		strb	r2, [r3, #2]
 15072              	.L607:
 15073              	.LBE16:
2179:..\src/command_processing.c ****     }
2180:..\src/command_processing.c **** }
 15074              		.loc 1 2180 0
 15075 1b10 00BF     		nop
 15076 1b12 9C37     		adds	r7, r7, #156
 15077              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 340


 15078 1b14 BD46     		mov	sp, r7
 15079              		.cfi_def_cfa_register 13
 15080              		@ sp needed
 15081 1b16 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15082              	.L626:
 15083 1b1a 00BF     		.align	2
 15084              	.L625:
 15085 1b1c 00000000 		.word	IMU_connected
 15086 1b20 D8140000 		.word	.LC210
 15087 1b24 EC140000 		.word	.LC211
 15088 1b28 DC0E0000 		.word	.LC145
 15089 1b2c E40E0000 		.word	.LC146
 15090 1b30 00150000 		.word	.LC212
 15091 1b34 10150000 		.word	.LC213
 15092 1b38 24150000 		.word	.LC214
 15093 1b3c 34150000 		.word	.LC215
 15094 1b40 00000000 		.word	N_IMU_Connected
 15095 1b44 840D0000 		.word	.LC125
 15096 1b48 00000000 		.word	timer_value0
 15097 1b4c 00000000 		.word	timer_value
 15098 1b50 44150000 		.word	.LC216
 15099 1b54 60150000 		.word	.LC217
 15100              		.cfi_endproc
 15101              	.LFE72:
 15102              		.size	prepare_generic_info, .-prepare_generic_info
 15103              		.section	.rodata
 15104              		.align	2
 15105              	.LC218:
 15106 1564 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 15106      41474520 
 15106      53544154 
 15106      49535449 
 15106      43530D0A 
 15107 1579 000000   		.align	2
 15108              	.LC219:
 15109 157c 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 15109      206F6620 
 15109      4857206D 
 15109      61696E74 
 15109      656E616E 
 15110 15a7 00       		.align	2
 15111              	.LC220:
 15112 15a8 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 15112      206F6620 
 15112      75736167 
 15112      65207374 
 15112      61747320 
 15113 15db 0A00     		.ascii	"\012\000"
 15114 15dd 000000   		.align	2
 15115              	.LC221:
 15116 15e0 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 15116      20636865 
 15116      636B6564 
 15116      2054696D 
 15116      653A2025 
 15117 1613 0A00     		.ascii	"\012\000"
 15118 1615 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 341


 15119              	.LC222:
 15120 1618 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 15120      74696F6E 
 15120      73206869 
 15120      73746F67 
 15120      72616D20 
 15121 1637 00       		.align	2
 15122              	.LC223:
 15123 1638 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 15123      2564205B 
 15123      25642D25 
 15123      645D3A20 
 15123      256C750D 
 15124 164e 0000     		.align	2
 15125              	.LC224:
 15126 1650 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 15126      656E7420 
 15126      68697374 
 15126      6F677261 
 15126      6D20286D 
 15127 166a 0000     		.align	2
 15128              	.LC225:
 15129 166c 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 15129      73686F6C 
 15129      64202564 
 15129      205B2564 
 15129      2D25645D 
 15130              		.align	2
 15131              	.LC226:
 15132 1688 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 15132      61637469 
 15132      76617469 
 15132      6F6E7320 
 15132      636F756E 
 15133 16aa 0000     		.align	2
 15134              	.LC227:
 15135 16ac 52657374 		.ascii	"Rest position occurrences: %lu\000"
 15135      20706F73 
 15135      6974696F 
 15135      6E206F63 
 15135      63757272 
 15136 16cb 00       		.align	2
 15137              	.LC228:
 15138 16cc 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 15138      6520746F 
 15138      74616C20 
 15138      64697370 
 15138      6C616365 
 15139 16f2 0000     		.align	2
 15140              	.LC229:
 15141 16f4 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 15141      6C20706F 
 15141      77657220 
 15141      6F6E2074 
 15141      696D6520 
 15142 1713 00       		.align	2
 15143              	.LC230:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 342


 15144 1714 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 15144      6C207265 
 15144      73742070 
 15144      6F736974 
 15144      696F6E20 
 15145              		.section	.text.prepare_counter_info,"ax",%progbits
 15146              		.align	2
 15147              		.global	prepare_counter_info
 15148              		.thumb
 15149              		.thumb_func
 15150              		.type	prepare_counter_info, %function
 15151              	prepare_counter_info:
 15152              	.LFB73:
2181:..\src/command_processing.c **** 
2182:..\src/command_processing.c **** //==============================================================================
2183:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2184:..\src/command_processing.c **** //==============================================================================
2185:..\src/command_processing.c **** 
2186:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2187:..\src/command_processing.c **** {
 15153              		.loc 1 2187 0
 15154              		.cfi_startproc
 15155              		@ args = 0, pretend = 0, frame = 128
 15156              		@ frame_needed = 1, uses_anonymous_args = 0
 15157 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 15158              		.cfi_def_cfa_offset 20
 15159              		.cfi_offset 4, -20
 15160              		.cfi_offset 5, -16
 15161              		.cfi_offset 6, -12
 15162              		.cfi_offset 7, -8
 15163              		.cfi_offset 14, -4
 15164 0002 A5B0     		sub	sp, sp, #148
 15165              		.cfi_def_cfa_offset 168
 15166 0004 04AF     		add	r7, sp, #16
 15167              		.cfi_def_cfa 7, 152
 15168 0006 7860     		str	r0, [r7, #4]
2188:..\src/command_processing.c ****     char str[100];  
2189:..\src/command_processing.c ****     int i;
2190:..\src/command_processing.c ****     int step;
2191:..\src/command_processing.c **** 
2192:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15169              		.loc 1 2192 0
 15170 0008 7D4B     		ldr	r3, .L633
 15171 000a BB67     		str	r3, [r7, #120]
2193:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 15172              		.loc 1 2193 0
 15173 000c BB6F     		ldr	r3, [r7, #120]
 15174 000e B033     		adds	r3, r3, #176
 15175 0010 7B67     		str	r3, [r7, #116]
2194:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 15176              		.loc 1 2194 0
 15177 0012 7B6F     		ldr	r3, [r7, #116]
 15178 0014 93F86030 		ldrb	r3, [r3, #96]
 15179 0018 87F87330 		strb	r3, [r7, #115]
2195:..\src/command_processing.c ****     
2196:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 15180              		.loc 1 2196 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 343


 15181 001c 7868     		ldr	r0, [r7, #4]
 15182 001e FFF7FEFF 		bl	strlen
 15183 0022 0346     		mov	r3, r0
 15184 0024 1A46     		mov	r2, r3
 15185 0026 7B68     		ldr	r3, [r7, #4]
 15186 0028 1344     		add	r3, r3, r2
 15187 002a 764A     		ldr	r2, .L633+4
 15188 002c 1D46     		mov	r5, r3
 15189 002e 1446     		mov	r4, r2
 15190 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15191 0032 2860     		str	r0, [r5]	@ unaligned
 15192 0034 6960     		str	r1, [r5, #4]	@ unaligned
 15193 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 15194 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 15195 003a 2068     		ldr	r0, [r4]	@ unaligned
 15196 003c 2861     		str	r0, [r5, #16]	@ unaligned
 15197 003e 2379     		ldrb	r3, [r4, #4]
 15198 0040 2B75     		strb	r3, [r5, #20]
2197:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15199              		.loc 1 2197 0
 15200 0042 7868     		ldr	r0, [r7, #4]
 15201 0044 FFF7FEFF 		bl	strlen
 15202 0048 0346     		mov	r3, r0
 15203 004a 1A46     		mov	r2, r3
 15204 004c 7B68     		ldr	r3, [r7, #4]
 15205 004e 1344     		add	r3, r3, r2
 15206 0050 6D4A     		ldr	r2, .L633+8
 15207 0052 1188     		ldrh	r1, [r2]	@ unaligned
 15208 0054 9278     		ldrb	r2, [r2, #2]
 15209 0056 1980     		strh	r1, [r3]	@ unaligned
 15210 0058 9A70     		strb	r2, [r3, #2]
2198:..\src/command_processing.c ****     
2199:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15211              		.loc 1 2199 0
 15212 005a BB6F     		ldr	r3, [r7, #120]
 15213 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15214 0060 1A46     		mov	r2, r3
 15215 0062 BB6F     		ldr	r3, [r7, #120]
 15216 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15217 0068 1946     		mov	r1, r3
 15218 006a BB6F     		ldr	r3, [r7, #120]
 15219 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15220 0070 07F10800 		add	r0, r7, #8
 15221 0074 0093     		str	r3, [sp]
 15222 0076 0B46     		mov	r3, r1
 15223 0078 6449     		ldr	r1, .L633+12
 15224 007a FFF7FEFF 		bl	sprintf
2200:..\src/command_processing.c ****     strcat(info_string, str);
 15225              		.loc 1 2200 0
 15226 007e 07F10803 		add	r3, r7, #8
 15227 0082 1946     		mov	r1, r3
 15228 0084 7868     		ldr	r0, [r7, #4]
 15229 0086 FFF7FEFF 		bl	strcat
2201:..\src/command_processing.c ****     
2202:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15230              		.loc 1 2202 0
 15231 008a BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 344


 15232 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15233 0090 1A46     		mov	r2, r3
 15234 0092 BB6F     		ldr	r3, [r7, #120]
 15235 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15236 0098 1946     		mov	r1, r3
 15237 009a BB6F     		ldr	r3, [r7, #120]
 15238 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15239 00a0 07F10800 		add	r0, r7, #8
 15240 00a4 0093     		str	r3, [sp]
 15241 00a6 0B46     		mov	r3, r1
 15242 00a8 5949     		ldr	r1, .L633+16
 15243 00aa FFF7FEFF 		bl	sprintf
2203:..\src/command_processing.c ****     strcat(info_string, str);
 15244              		.loc 1 2203 0
 15245 00ae 07F10803 		add	r3, r7, #8
 15246 00b2 1946     		mov	r1, r3
 15247 00b4 7868     		ldr	r0, [r7, #4]
 15248 00b6 FFF7FEFF 		bl	strcat
2204:..\src/command_processing.c ****             
2205:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 15249              		.loc 1 2205 0
 15250 00ba BB6F     		ldr	r3, [r7, #120]
 15251 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 15252 00c0 1D46     		mov	r5, r3
 15253 00c2 BB6F     		ldr	r3, [r7, #120]
 15254 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 15255 00c8 1E46     		mov	r6, r3
 15256 00ca BB6F     		ldr	r3, [r7, #120]
 15257 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 15258 00d0 1A46     		mov	r2, r3
 15259 00d2 BB6F     		ldr	r3, [r7, #120]
 15260 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 15261 00d8 1946     		mov	r1, r3
 15262 00da BB6F     		ldr	r3, [r7, #120]
 15263 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 15264 00e0 1C46     		mov	r4, r3
 15265 00e2 BB6F     		ldr	r3, [r7, #120]
 15266 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 15267 00e8 07F10800 		add	r0, r7, #8
 15268 00ec 0393     		str	r3, [sp, #12]
 15269 00ee 0294     		str	r4, [sp, #8]
 15270 00f0 0191     		str	r1, [sp, #4]
 15271 00f2 0092     		str	r2, [sp]
 15272 00f4 3346     		mov	r3, r6
 15273 00f6 2A46     		mov	r2, r5
 15274 00f8 4649     		ldr	r1, .L633+20
 15275 00fa FFF7FEFF 		bl	sprintf
2206:..\src/command_processing.c ****     strcat(info_string, str);
 15276              		.loc 1 2206 0
 15277 00fe 07F10803 		add	r3, r7, #8
 15278 0102 1946     		mov	r1, r3
 15279 0104 7868     		ldr	r0, [r7, #4]
 15280 0106 FFF7FEFF 		bl	strcat
2207:..\src/command_processing.c ****     
2208:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 15281              		.loc 1 2208 0
 15282 010a 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 345


 15283 010e 424A     		ldr	r2, .L633+24
 15284 0110 1C46     		mov	r4, r3
 15285 0112 1546     		mov	r5, r2
 15286 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15287 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15288 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 15289 011c 07C4     		stmia	r4!, {r0, r1, r2}
 15290 011e 2380     		strh	r3, [r4]	@ movhi
 15291 0120 0234     		adds	r4, r4, #2
 15292 0122 1B0C     		lsrs	r3, r3, #16
 15293 0124 2370     		strb	r3, [r4]
2209:..\src/command_processing.c ****     strcat(info_string, str);
 15294              		.loc 1 2209 0
 15295 0126 07F10803 		add	r3, r7, #8
 15296 012a 1946     		mov	r1, r3
 15297 012c 7868     		ldr	r0, [r7, #4]
 15298 012e FFF7FEFF 		bl	strcat
2210:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 15299              		.loc 1 2210 0
 15300 0132 7B6F     		ldr	r3, [r7, #116]
 15301 0134 996B     		ldr	r1, [r3, #56]
 15302 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 15303 013a B86F     		ldr	r0, [r7, #120]
 15304 013c 1346     		mov	r3, r2
 15305 013e 5B00     		lsls	r3, r3, #1
 15306 0140 1344     		add	r3, r3, r2
 15307 0142 1B01     		lsls	r3, r3, #4
 15308 0144 0344     		add	r3, r3, r0
 15309 0146 03F29513 		addw	r3, r3, #405
 15310 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15311 014c 41FA03F3 		asr	r3, r1, r3
 15312 0150 324A     		ldr	r2, .L633+28
 15313 0152 82FB0312 		smull	r1, r2, r2, r3
 15314 0156 9210     		asrs	r2, r2, #2
 15315 0158 DB17     		asrs	r3, r3, #31
 15316 015a D31A     		subs	r3, r2, r3
 15317 015c FB66     		str	r3, [r7, #108]
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15318              		.loc 1 2211 0
 15319 015e 0123     		movs	r3, #1
 15320 0160 FB67     		str	r3, [r7, #124]
 15321 0162 21E0     		b	.L628
 15322              	.L629:
2212:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 15323              		.loc 1 2212 0 discriminator 3
 15324 0164 FB6F     		ldr	r3, [r7, #124]
 15325 0166 013B     		subs	r3, r3, #1
 15326 0168 FA6E     		ldr	r2, [r7, #108]
 15327 016a 02FB03F3 		mul	r3, r2, r3
 15328 016e 5C1C     		adds	r4, r3, #1
 15329 0170 FB6E     		ldr	r3, [r7, #108]
 15330 0172 FA6F     		ldr	r2, [r7, #124]
 15331 0174 02FB03F3 		mul	r3, r2, r3
 15332 0178 FA6F     		ldr	r2, [r7, #124]
 15333 017a 511E     		subs	r1, r2, #1
 15334 017c BA6F     		ldr	r2, [r7, #120]
 15335 017e 0631     		adds	r1, r1, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 346


 15336 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15337 0184 07F10800 		add	r0, r7, #8
 15338 0188 0192     		str	r2, [sp, #4]
 15339 018a 0093     		str	r3, [sp]
 15340 018c 2346     		mov	r3, r4
 15341 018e FA6F     		ldr	r2, [r7, #124]
 15342 0190 2349     		ldr	r1, .L633+32
 15343 0192 FFF7FEFF 		bl	sprintf
2213:..\src/command_processing.c ****         strcat(info_string, str);
 15344              		.loc 1 2213 0 discriminator 3
 15345 0196 07F10803 		add	r3, r7, #8
 15346 019a 1946     		mov	r1, r3
 15347 019c 7868     		ldr	r0, [r7, #4]
 15348 019e FFF7FEFF 		bl	strcat
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15349              		.loc 1 2211 0 discriminator 3
 15350 01a2 FB6F     		ldr	r3, [r7, #124]
 15351 01a4 0133     		adds	r3, r3, #1
 15352 01a6 FB67     		str	r3, [r7, #124]
 15353              	.L628:
2211:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15354              		.loc 1 2211 0 is_stmt 0 discriminator 1
 15355 01a8 FB6F     		ldr	r3, [r7, #124]
 15356 01aa 0A2B     		cmp	r3, #10
 15357 01ac DADD     		ble	.L629
2214:..\src/command_processing.c ****     }
2215:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15358              		.loc 1 2215 0 is_stmt 1
 15359 01ae 7868     		ldr	r0, [r7, #4]
 15360 01b0 FFF7FEFF 		bl	strlen
 15361 01b4 0346     		mov	r3, r0
 15362 01b6 1A46     		mov	r2, r3
 15363 01b8 7B68     		ldr	r3, [r7, #4]
 15364 01ba 1344     		add	r3, r3, r2
 15365 01bc 124A     		ldr	r2, .L633+8
 15366 01be 1188     		ldrh	r1, [r2]	@ unaligned
 15367 01c0 9278     		ldrb	r2, [r2, #2]
 15368 01c2 1980     		strh	r1, [r3]	@ unaligned
 15369 01c4 9A70     		strb	r2, [r3, #2]
2216:..\src/command_processing.c ****     
2217:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 15370              		.loc 1 2217 0
 15371 01c6 07F10803 		add	r3, r7, #8
 15372 01ca 164A     		ldr	r2, .L633+36
 15373 01cc 1C46     		mov	r4, r3
 15374 01ce 1546     		mov	r5, r2
 15375 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15376 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15377 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 15378 01d8 03C4     		stmia	r4!, {r0, r1}
 15379 01da 2280     		strh	r2, [r4]	@ movhi
2218:..\src/command_processing.c ****     strcat(info_string, str);
 15380              		.loc 1 2218 0
 15381 01dc 07F10803 		add	r3, r7, #8
 15382 01e0 1946     		mov	r1, r3
 15383 01e2 7868     		ldr	r0, [r7, #4]
 15384 01e4 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 347


2219:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 15385              		.loc 1 2219 0
 15386 01e8 7B6F     		ldr	r3, [r7, #116]
 15387 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 15388 01ee 002B     		cmp	r3, #0
 15389 01f0 00DA     		bge	.L630
 15390 01f2 0333     		adds	r3, r3, #3
 15391              	.L630:
 15392 01f4 9B10     		asrs	r3, r3, #2
 15393 01f6 1BB2     		sxth	r3, r3
 15394 01f8 FB66     		str	r3, [r7, #108]
2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15395              		.loc 1 2220 0
 15396 01fa 0123     		movs	r3, #1
 15397 01fc FB67     		str	r3, [r7, #124]
 15398 01fe 34E0     		b	.L631
 15399              	.L634:
 15400              		.align	2
 15401              	.L633:
 15402 0200 00000000 		.word	g_mem
 15403 0204 64150000 		.word	.LC218
 15404 0208 840D0000 		.word	.LC125
 15405 020c 7C150000 		.word	.LC219
 15406 0210 A8150000 		.word	.LC220
 15407 0214 E0150000 		.word	.LC221
 15408 0218 18160000 		.word	.LC222
 15409 021c 67666666 		.word	1717986919
 15410 0220 38160000 		.word	.LC223
 15411 0224 50160000 		.word	.LC224
 15412              	.L632:
2221:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 15413              		.loc 1 2221 0 discriminator 3
 15414 0228 FB6F     		ldr	r3, [r7, #124]
 15415 022a 013B     		subs	r3, r3, #1
 15416 022c FA6E     		ldr	r2, [r7, #108]
 15417 022e 02FB03F4 		mul	r4, r2, r3
 15418 0232 FB6E     		ldr	r3, [r7, #108]
 15419 0234 FA6F     		ldr	r2, [r7, #124]
 15420 0236 02FB03F3 		mul	r3, r2, r3
 15421 023a FA6F     		ldr	r2, [r7, #124]
 15422 023c 511E     		subs	r1, r2, #1
 15423 023e BA6F     		ldr	r2, [r7, #120]
 15424 0240 1031     		adds	r1, r1, #16
 15425 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15426 0246 07F10800 		add	r0, r7, #8
 15427 024a 0192     		str	r2, [sp, #4]
 15428 024c 0093     		str	r3, [sp]
 15429 024e 2346     		mov	r3, r4
 15430 0250 FA6F     		ldr	r2, [r7, #124]
 15431 0252 5149     		ldr	r1, .L635
 15432 0254 FFF7FEFF 		bl	sprintf
2222:..\src/command_processing.c ****         strcat(info_string, str);
 15433              		.loc 1 2222 0 discriminator 3
 15434 0258 07F10803 		add	r3, r7, #8
 15435 025c 1946     		mov	r1, r3
 15436 025e 7868     		ldr	r0, [r7, #4]
 15437 0260 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 348


2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15438              		.loc 1 2220 0 discriminator 3
 15439 0264 FB6F     		ldr	r3, [r7, #124]
 15440 0266 0133     		adds	r3, r3, #1
 15441 0268 FB67     		str	r3, [r7, #124]
 15442              	.L631:
2220:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15443              		.loc 1 2220 0 is_stmt 0 discriminator 1
 15444 026a FB6F     		ldr	r3, [r7, #124]
 15445 026c 042B     		cmp	r3, #4
 15446 026e DBDD     		ble	.L632
2223:..\src/command_processing.c ****     }
2224:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15447              		.loc 1 2224 0 is_stmt 1
 15448 0270 7868     		ldr	r0, [r7, #4]
 15449 0272 FFF7FEFF 		bl	strlen
 15450 0276 0346     		mov	r3, r0
 15451 0278 1A46     		mov	r2, r3
 15452 027a 7B68     		ldr	r3, [r7, #4]
 15453 027c 1344     		add	r3, r3, r2
 15454 027e 474A     		ldr	r2, .L635+4
 15455 0280 1188     		ldrh	r1, [r2]	@ unaligned
 15456 0282 9278     		ldrb	r2, [r2, #2]
 15457 0284 1980     		strh	r1, [r3]	@ unaligned
 15458 0286 9A70     		strb	r2, [r3, #2]
2225:..\src/command_processing.c ****             
2226:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 15459              		.loc 1 2226 0
 15460 0288 BB6F     		ldr	r3, [r7, #120]
 15461 028a 1A69     		ldr	r2, [r3, #16]
 15462 028c BB6F     		ldr	r3, [r7, #120]
 15463 028e 5B69     		ldr	r3, [r3, #20]
 15464 0290 07F10800 		add	r0, r7, #8
 15465 0294 4249     		ldr	r1, .L635+8
 15466 0296 FFF7FEFF 		bl	sprintf
2227:..\src/command_processing.c ****     strcat(info_string, str);
 15467              		.loc 1 2227 0
 15468 029a 07F10803 		add	r3, r7, #8
 15469 029e 1946     		mov	r1, r3
 15470 02a0 7868     		ldr	r0, [r7, #4]
 15471 02a2 FFF7FEFF 		bl	strcat
2228:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15472              		.loc 1 2228 0
 15473 02a6 7868     		ldr	r0, [r7, #4]
 15474 02a8 FFF7FEFF 		bl	strlen
 15475 02ac 0346     		mov	r3, r0
 15476 02ae 1A46     		mov	r2, r3
 15477 02b0 7B68     		ldr	r3, [r7, #4]
 15478 02b2 1344     		add	r3, r3, r2
 15479 02b4 394A     		ldr	r2, .L635+4
 15480 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 15481 02b8 9278     		ldrb	r2, [r2, #2]
 15482 02ba 1980     		strh	r1, [r3]	@ unaligned
 15483 02bc 9A70     		strb	r2, [r3, #2]
2229:..\src/command_processing.c ****     
2230:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 15484              		.loc 1 2230 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 349


 15485 02be BB6F     		ldr	r3, [r7, #120]
 15486 02c0 1A6D     		ldr	r2, [r3, #80]
 15487 02c2 07F10803 		add	r3, r7, #8
 15488 02c6 3749     		ldr	r1, .L635+12
 15489 02c8 1846     		mov	r0, r3
 15490 02ca FFF7FEFF 		bl	sprintf
2231:..\src/command_processing.c ****     strcat(info_string, str);
 15491              		.loc 1 2231 0
 15492 02ce 07F10803 		add	r3, r7, #8
 15493 02d2 1946     		mov	r1, r3
 15494 02d4 7868     		ldr	r0, [r7, #4]
 15495 02d6 FFF7FEFF 		bl	strcat
2232:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15496              		.loc 1 2232 0
 15497 02da 7868     		ldr	r0, [r7, #4]
 15498 02dc FFF7FEFF 		bl	strlen
 15499 02e0 0346     		mov	r3, r0
 15500 02e2 1A46     		mov	r2, r3
 15501 02e4 7B68     		ldr	r3, [r7, #4]
 15502 02e6 1344     		add	r3, r3, r2
 15503 02e8 2C4A     		ldr	r2, .L635+4
 15504 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 15505 02ec 9278     		ldrb	r2, [r2, #2]
 15506 02ee 1980     		strh	r1, [r3]	@ unaligned
 15507 02f0 9A70     		strb	r2, [r3, #2]
2233:..\src/command_processing.c ****     
2234:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 15508              		.loc 1 2234 0
 15509 02f2 BB6F     		ldr	r3, [r7, #120]
 15510 02f4 5A6D     		ldr	r2, [r3, #84]
 15511 02f6 07F10803 		add	r3, r7, #8
 15512 02fa 2B49     		ldr	r1, .L635+16
 15513 02fc 1846     		mov	r0, r3
 15514 02fe FFF7FEFF 		bl	sprintf
2235:..\src/command_processing.c ****     strcat(info_string, str);
 15515              		.loc 1 2235 0
 15516 0302 07F10803 		add	r3, r7, #8
 15517 0306 1946     		mov	r1, r3
 15518 0308 7868     		ldr	r0, [r7, #4]
 15519 030a FFF7FEFF 		bl	strcat
2236:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15520              		.loc 1 2236 0
 15521 030e 7868     		ldr	r0, [r7, #4]
 15522 0310 FFF7FEFF 		bl	strlen
 15523 0314 0346     		mov	r3, r0
 15524 0316 1A46     		mov	r2, r3
 15525 0318 7B68     		ldr	r3, [r7, #4]
 15526 031a 1344     		add	r3, r3, r2
 15527 031c 1F4A     		ldr	r2, .L635+4
 15528 031e 1188     		ldrh	r1, [r2]	@ unaligned
 15529 0320 9278     		ldrb	r2, [r2, #2]
 15530 0322 1980     		strh	r1, [r3]	@ unaligned
 15531 0324 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c ****     
2238:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 15532              		.loc 1 2238 0
 15533 0326 BB6F     		ldr	r3, [r7, #120]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 350


 15534 0328 9A6D     		ldr	r2, [r3, #88]
 15535 032a 07F10803 		add	r3, r7, #8
 15536 032e 1F49     		ldr	r1, .L635+20
 15537 0330 1846     		mov	r0, r3
 15538 0332 FFF7FEFF 		bl	sprintf
2239:..\src/command_processing.c ****     strcat(info_string, str);
 15539              		.loc 1 2239 0
 15540 0336 07F10803 		add	r3, r7, #8
 15541 033a 1946     		mov	r1, r3
 15542 033c 7868     		ldr	r0, [r7, #4]
 15543 033e FFF7FEFF 		bl	strcat
2240:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15544              		.loc 1 2240 0
 15545 0342 7868     		ldr	r0, [r7, #4]
 15546 0344 FFF7FEFF 		bl	strlen
 15547 0348 0346     		mov	r3, r0
 15548 034a 1A46     		mov	r2, r3
 15549 034c 7B68     		ldr	r3, [r7, #4]
 15550 034e 1344     		add	r3, r3, r2
 15551 0350 124A     		ldr	r2, .L635+4
 15552 0352 1188     		ldrh	r1, [r2]	@ unaligned
 15553 0354 9278     		ldrb	r2, [r2, #2]
 15554 0356 1980     		strh	r1, [r3]	@ unaligned
 15555 0358 9A70     		strb	r2, [r3, #2]
2241:..\src/command_processing.c ****     
2242:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 15556              		.loc 1 2242 0
 15557 035a BB6F     		ldr	r3, [r7, #120]
 15558 035c DA6D     		ldr	r2, [r3, #92]
 15559 035e 07F10803 		add	r3, r7, #8
 15560 0362 1349     		ldr	r1, .L635+24
 15561 0364 1846     		mov	r0, r3
 15562 0366 FFF7FEFF 		bl	sprintf
2243:..\src/command_processing.c ****     strcat(info_string, str);
 15563              		.loc 1 2243 0
 15564 036a 07F10803 		add	r3, r7, #8
 15565 036e 1946     		mov	r1, r3
 15566 0370 7868     		ldr	r0, [r7, #4]
 15567 0372 FFF7FEFF 		bl	strcat
2244:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15568              		.loc 1 2244 0
 15569 0376 7868     		ldr	r0, [r7, #4]
 15570 0378 FFF7FEFF 		bl	strlen
 15571 037c 0346     		mov	r3, r0
 15572 037e 1A46     		mov	r2, r3
 15573 0380 7B68     		ldr	r3, [r7, #4]
 15574 0382 1344     		add	r3, r3, r2
 15575 0384 054A     		ldr	r2, .L635+4
 15576 0386 1188     		ldrh	r1, [r2]	@ unaligned
 15577 0388 9278     		ldrb	r2, [r2, #2]
 15578 038a 1980     		strh	r1, [r3]	@ unaligned
 15579 038c 9A70     		strb	r2, [r3, #2]
2245:..\src/command_processing.c **** 
2246:..\src/command_processing.c **** }
 15580              		.loc 1 2246 0
 15581 038e 00BF     		nop
 15582 0390 8437     		adds	r7, r7, #132
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 351


 15583              		.cfi_def_cfa_offset 20
 15584 0392 BD46     		mov	sp, r7
 15585              		.cfi_def_cfa_register 13
 15586              		@ sp needed
 15587 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 15588              	.L636:
 15589 0396 00BF     		.align	2
 15590              	.L635:
 15591 0398 6C160000 		.word	.LC225
 15592 039c 840D0000 		.word	.LC125
 15593 03a0 88160000 		.word	.LC226
 15594 03a4 AC160000 		.word	.LC227
 15595 03a8 CC160000 		.word	.LC228
 15596 03ac F4160000 		.word	.LC229
 15597 03b0 14170000 		.word	.LC230
 15598              		.cfi_endproc
 15599              	.LFE73:
 15600              		.size	prepare_counter_info, .-prepare_counter_info
 15601              		.section	.rodata
 15602              		.align	2
 15603              	.LC231:
 15604 1738 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 15604      77617265 
 15604      20766572 
 15604      73696F6E 
 15604      3A202573 
 15605 174f 00       		.align	2
 15606              	.LC232:
 15607 1750 506F7369 		.ascii	"Position PID: \000"
 15607      74696F6E 
 15607      20504944 
 15607      3A2000
 15608 175f 00       		.align	2
 15609              	.LC233:
 15610 1760 43757272 		.ascii	"Current PID: \000"
 15610      656E7420 
 15610      5049443A 
 15610      2000
 15611 176e 0000     		.align	2
 15612              	.LC234:
 15613 1770 5265736F 		.ascii	"Resolutions: \000"
 15613      6C757469 
 15613      6F6E733A 
 15613      2000
 15614 177e 0000     		.align	2
 15615              	.LC235:
 15616 1780 4F666673 		.ascii	"Offsets: \000"
 15616      6574733A 
 15616      2000
 15617 178a 0000     		.align	2
 15618              	.LC236:
 15619 178c 4D756C74 		.ascii	"Multipliers: \000"
 15619      69706C69 
 15619      6572733A 
 15619      2000
 15620 179a 0000     		.align	2
 15621              	.LC237:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 352


 15622 179c 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 15622      656E7420 
 15622      6C6F6F6B 
 15622      75702074 
 15622      61626C65 
 15623 17cf 662C2025 		.ascii	"f, %f\015\012\000"
 15623      660D0A00 
 15624 17d7 00       		.align	2
 15625              	.LC238:
 15626 17d8 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 15626      74696F6E 
 15626      206C696D 
 15626      69742061 
 15626      63746976 
 15627              		.align	2
 15628              	.LC239:
 15629 17f4 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 15629      74696F6E 
 15629      206C696D 
 15629      6974733A 
 15629      20696E66 
 15630              		.section	.text.prepare_SD_param_info,"ax",%progbits
 15631              		.align	2
 15632              		.global	prepare_SD_param_info
 15633              		.thumb
 15634              		.thumb_func
 15635              		.type	prepare_SD_param_info, %function
 15636              	prepare_SD_param_info:
 15637              	.LFB74:
2247:..\src/command_processing.c **** 
2248:..\src/command_processing.c **** //==============================================================================
2249:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2250:..\src/command_processing.c **** //==============================================================================
2251:..\src/command_processing.c **** 
2252:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2253:..\src/command_processing.c **** {
 15638              		.loc 1 2253 0
 15639              		.cfi_startproc
 15640              		@ args = 0, pretend = 0, frame = 152
 15641              		@ frame_needed = 1, uses_anonymous_args = 0
 15642 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 15643              		.cfi_def_cfa_offset 36
 15644              		.cfi_offset 4, -36
 15645              		.cfi_offset 5, -32
 15646              		.cfi_offset 6, -28
 15647              		.cfi_offset 7, -24
 15648              		.cfi_offset 8, -20
 15649              		.cfi_offset 9, -16
 15650              		.cfi_offset 10, -12
 15651              		.cfi_offset 11, -8
 15652              		.cfi_offset 14, -4
 15653 0004 B1B0     		sub	sp, sp, #196
 15654              		.cfi_def_cfa_offset 232
 15655 0006 0AAF     		add	r7, sp, #40
 15656              		.cfi_def_cfa 7, 192
 15657 0008 7861     		str	r0, [r7, #20]
2254:..\src/command_processing.c ****     char str[100];  
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 353


2255:..\src/command_processing.c ****     int i;
2256:..\src/command_processing.c ****            
2257:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2258:..\src/command_processing.c ****     
2259:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15658              		.loc 1 2259 0
 15659 000a AB4B     		ldr	r3, .L699
 15660 000c C7F88C30 		str	r3, [r7, #140]
2260:..\src/command_processing.c ****         
2261:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 15661              		.loc 1 2261 0
 15662 0010 AA4A     		ldr	r2, .L699+4
 15663 0012 AB49     		ldr	r1, .L699+8
 15664 0014 7869     		ldr	r0, [r7, #20]
 15665 0016 FFF7FEFF 		bl	sprintf
2262:..\src/command_processing.c ****     
2263:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 15666              		.loc 1 2263 0
 15667 001a D7F88C30 		ldr	r3, [r7, #140]
 15668 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 15669 0022 1A46     		mov	r2, r3
 15670 0024 07F11C03 		add	r3, r7, #28
 15671 0028 A649     		ldr	r1, .L699+12
 15672 002a 1846     		mov	r0, r3
 15673 002c FFF7FEFF 		bl	sprintf
2264:..\src/command_processing.c ****     strcat(info_string, str);
 15674              		.loc 1 2264 0
 15675 0030 07F11C03 		add	r3, r7, #28
 15676 0034 1946     		mov	r1, r3
 15677 0036 7869     		ldr	r0, [r7, #20]
 15678 0038 FFF7FEFF 		bl	strcat
2265:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 15679              		.loc 1 2265 0
 15680 003c D7F88C30 		ldr	r3, [r7, #140]
 15681 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 15682 0044 002B     		cmp	r3, #0
 15683 0046 02D0     		beq	.L639
 15684 0048 012B     		cmp	r3, #1
 15685 004a 15D0     		beq	.L640
 15686 004c 26E0     		b	.L638
 15687              	.L639:
2266:..\src/command_processing.c ****         case RIGHT_HAND:
2267:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 15688              		.loc 1 2267 0
 15689 004e 7869     		ldr	r0, [r7, #20]
 15690 0050 FFF7FEFF 		bl	strlen
 15691 0054 0346     		mov	r3, r0
 15692 0056 1A46     		mov	r2, r3
 15693 0058 7B69     		ldr	r3, [r7, #20]
 15694 005a 1344     		add	r3, r3, r2
 15695 005c 9A4A     		ldr	r2, .L699+16
 15696 005e 1D46     		mov	r5, r3
 15697 0060 1446     		mov	r4, r2
 15698 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15699 0064 2860     		str	r0, [r5]	@ unaligned
 15700 0066 6960     		str	r1, [r5, #4]	@ unaligned
 15701 0068 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 354


 15702 006a EB60     		str	r3, [r5, #12]	@ unaligned
 15703 006c 2388     		ldrh	r3, [r4]	@ unaligned
 15704 006e A278     		ldrb	r2, [r4, #2]
 15705 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 15706 0072 1346     		mov	r3, r2
 15707 0074 AB74     		strb	r3, [r5, #18]
2268:..\src/command_processing.c ****             break;
 15708              		.loc 1 2268 0
 15709 0076 11E0     		b	.L638
 15710              	.L640:
2269:..\src/command_processing.c ****         case LEFT_HAND:
2270:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 15711              		.loc 1 2270 0
 15712 0078 7869     		ldr	r0, [r7, #20]
 15713 007a FFF7FEFF 		bl	strlen
 15714 007e 0346     		mov	r3, r0
 15715 0080 1A46     		mov	r2, r3
 15716 0082 7B69     		ldr	r3, [r7, #20]
 15717 0084 1344     		add	r3, r3, r2
 15718 0086 914A     		ldr	r2, .L699+20
 15719 0088 1D46     		mov	r5, r3
 15720 008a 1446     		mov	r4, r2
 15721 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15722 008e 2860     		str	r0, [r5]	@ unaligned
 15723 0090 6960     		str	r1, [r5, #4]	@ unaligned
 15724 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 15725 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 15726 0096 2388     		ldrh	r3, [r4]	@ unaligned
 15727 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2271:..\src/command_processing.c ****             break;
 15728              		.loc 1 2271 0
 15729 009a 00BF     		nop
 15730              	.L638:
2272:..\src/command_processing.c ****     }
2273:..\src/command_processing.c **** 
2274:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15731              		.loc 1 2274 0
 15732 009c D7F88C30 		ldr	r3, [r7, #140]
 15733 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15734 00a4 1A46     		mov	r2, r3
 15735 00a6 D7F88C30 		ldr	r3, [r7, #140]
 15736 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15737 00ae 1946     		mov	r1, r3
 15738 00b0 D7F88C30 		ldr	r3, [r7, #140]
 15739 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15740 00b8 07F11C00 		add	r0, r7, #28
 15741 00bc 0093     		str	r3, [sp]
 15742 00be 0B46     		mov	r3, r1
 15743 00c0 8349     		ldr	r1, .L699+24
 15744 00c2 FFF7FEFF 		bl	sprintf
2275:..\src/command_processing.c ****     strcat(info_string, str);
 15745              		.loc 1 2275 0
 15746 00c6 07F11C03 		add	r3, r7, #28
 15747 00ca 1946     		mov	r1, r3
 15748 00cc 7869     		ldr	r0, [r7, #20]
 15749 00ce FFF7FEFF 		bl	strcat
2276:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 355


2277:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15750              		.loc 1 2277 0
 15751 00d2 D7F88C30 		ldr	r3, [r7, #140]
 15752 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15753 00da 1A46     		mov	r2, r3
 15754 00dc D7F88C30 		ldr	r3, [r7, #140]
 15755 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15756 00e4 1946     		mov	r1, r3
 15757 00e6 D7F88C30 		ldr	r3, [r7, #140]
 15758 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15759 00ee 07F11C00 		add	r0, r7, #28
 15760 00f2 0093     		str	r3, [sp]
 15761 00f4 0B46     		mov	r3, r1
 15762 00f6 7749     		ldr	r1, .L699+28
 15763 00f8 FFF7FEFF 		bl	sprintf
2278:..\src/command_processing.c ****     strcat(info_string, str);
 15764              		.loc 1 2278 0
 15765 00fc 07F11C03 		add	r3, r7, #28
 15766 0100 1946     		mov	r1, r3
 15767 0102 7869     		ldr	r0, [r7, #20]
 15768 0104 FFF7FEFF 		bl	strcat
 15769              	.LBB19:
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 15770              		.loc 1 2280 0
 15771 0108 0023     		movs	r3, #0
 15772 010a 87F89330 		strb	r3, [r7, #147]
 15773 010e 00F011BE 		b	.L641
 15774              	.L682:
 15775              	.LBB20:
2281:..\src/command_processing.c ****             
2282:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 15776              		.loc 1 2282 0
 15777 0112 97F89330 		ldrb	r3, [r7, #147]
 15778 0116 87F88B30 		strb	r3, [r7, #139]
2283:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 15779              		.loc 1 2283 0
 15780 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 15781 011e 1346     		mov	r3, r2
 15782 0120 DB00     		lsls	r3, r3, #3
 15783 0122 9B1A     		subs	r3, r3, r2
 15784 0124 1B01     		lsls	r3, r3, #4
 15785 0126 B033     		adds	r3, r3, #176
 15786 0128 D7F88C20 		ldr	r2, [r7, #140]
 15787 012c 1344     		add	r3, r3, r2
 15788 012e C7F88430 		str	r3, [r7, #132]
2284:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 15789              		.loc 1 2284 0
 15790 0132 D7F88430 		ldr	r3, [r7, #132]
 15791 0136 93F86030 		ldrb	r3, [r3, #96]
 15792 013a 87F88330 		strb	r3, [r7, #131]
2285:..\src/command_processing.c ****               
2286:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 15793              		.loc 1 2286 0
 15794 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15795 0142 5A1C     		adds	r2, r3, #1
 15796 0144 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 356


 15797 0148 6349     		ldr	r1, .L699+32
 15798 014a 1846     		mov	r0, r3
 15799 014c FFF7FEFF 		bl	sprintf
2287:..\src/command_processing.c ****         strcat(info_string, str);
 15800              		.loc 1 2287 0
 15801 0150 07F11C03 		add	r3, r7, #28
 15802 0154 1946     		mov	r1, r3
 15803 0156 7869     		ldr	r0, [r7, #20]
 15804 0158 FFF7FEFF 		bl	strcat
2288:..\src/command_processing.c ****                     
2289:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 15805              		.loc 1 2289 0
 15806 015c 7869     		ldr	r0, [r7, #20]
 15807 015e FFF7FEFF 		bl	strlen
 15808 0162 0346     		mov	r3, r0
 15809 0164 1A46     		mov	r2, r3
 15810 0166 7B69     		ldr	r3, [r7, #20]
 15811 0168 1344     		add	r3, r3, r2
 15812 016a 5C4A     		ldr	r2, .L699+36
 15813 016c 1D46     		mov	r5, r3
 15814 016e 1446     		mov	r4, r2
 15815 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15816 0172 2860     		str	r0, [r5]	@ unaligned
 15817 0174 6960     		str	r1, [r5, #4]	@ unaligned
 15818 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 15819 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 15820 017a 03CC     		ldmia	r4!, {r0, r1}
 15821 017c 2861     		str	r0, [r5, #16]	@ unaligned
 15822 017e 6961     		str	r1, [r5, #20]	@ unaligned
 15823 0180 2388     		ldrh	r3, [r4]	@ unaligned
 15824 0182 A278     		ldrb	r2, [r4, #2]
 15825 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 15826 0186 1346     		mov	r3, r2
 15827 0188 AB76     		strb	r3, [r5, #26]
2290:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 15828              		.loc 1 2290 0
 15829 018a D7F88430 		ldr	r3, [r7, #132]
 15830 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15831 0192 012B     		cmp	r3, #1
 15832 0194 0CD1     		bne	.L642
2291:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 15833              		.loc 1 2291 0
 15834 0196 7869     		ldr	r0, [r7, #20]
 15835 0198 FFF7FEFF 		bl	strlen
 15836 019c 0346     		mov	r3, r0
 15837 019e 1A46     		mov	r2, r3
 15838 01a0 7B69     		ldr	r3, [r7, #20]
 15839 01a2 1344     		add	r3, r3, r2
 15840 01a4 4E4A     		ldr	r2, .L699+40
 15841 01a6 1068     		ldr	r0, [r2]	@ unaligned
 15842 01a8 1860     		str	r0, [r3]	@ unaligned
 15843 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15844 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 15845 01ae 0BE0     		b	.L643
 15846              	.L642:
2292:..\src/command_processing.c ****         else
2293:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 357


 15847              		.loc 1 2293 0
 15848 01b0 7869     		ldr	r0, [r7, #20]
 15849 01b2 FFF7FEFF 		bl	strlen
 15850 01b6 0346     		mov	r3, r0
 15851 01b8 1A46     		mov	r2, r3
 15852 01ba 7B69     		ldr	r3, [r7, #20]
 15853 01bc 1344     		add	r3, r3, r2
 15854 01be 494A     		ldr	r2, .L699+44
 15855 01c0 1068     		ldr	r0, [r2]	@ unaligned
 15856 01c2 1860     		str	r0, [r3]	@ unaligned
 15857 01c4 1279     		ldrb	r2, [r2, #4]
 15858 01c6 1A71     		strb	r2, [r3, #4]
 15859              	.L643:
2294:..\src/command_processing.c ****         
2295:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15860              		.loc 1 2295 0
 15861 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15862 01cc 464A     		ldr	r2, .L699+48
 15863 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15864 01d0 1A46     		mov	r2, r3
 15865 01d2 07F11C03 		add	r3, r7, #28
 15866 01d6 4549     		ldr	r1, .L699+52
 15867 01d8 1846     		mov	r0, r3
 15868 01da FFF7FEFF 		bl	sprintf
2296:..\src/command_processing.c ****         strcat(info_string, str);
 15869              		.loc 1 2296 0
 15870 01de 07F11C03 		add	r3, r7, #28
 15871 01e2 1946     		mov	r1, r3
 15872 01e4 7869     		ldr	r0, [r7, #20]
 15873 01e6 FFF7FEFF 		bl	strcat
2297:..\src/command_processing.c **** 
2298:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 15874              		.loc 1 2298 0
 15875 01ea 7869     		ldr	r0, [r7, #20]
 15876 01ec FFF7FEFF 		bl	strlen
 15877 01f0 0346     		mov	r3, r0
 15878 01f2 1A46     		mov	r2, r3
 15879 01f4 7B69     		ldr	r3, [r7, #20]
 15880 01f6 1344     		add	r3, r3, r2
 15881 01f8 3D4A     		ldr	r2, .L699+56
 15882 01fa 1C46     		mov	r4, r3
 15883 01fc 1346     		mov	r3, r2
 15884 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 15885 0200 2060     		str	r0, [r4]	@ unaligned
 15886 0202 6160     		str	r1, [r4, #4]	@ unaligned
 15887 0204 A260     		str	r2, [r4, #8]	@ unaligned
 15888 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 15889 0208 9B78     		ldrb	r3, [r3, #2]
 15890 020a A281     		strh	r2, [r4, #12]	@ unaligned
 15891 020c A373     		strb	r3, [r4, #14]
2299:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15892              		.loc 1 2299 0
 15893 020e D7F88430 		ldr	r3, [r7, #132]
 15894 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15895 0216 032B     		cmp	r3, #3
 15896 0218 74D0     		beq	.L644
2300:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 358


 15897              		.loc 1 2300 0
 15898 021a D7F88430 		ldr	r3, [r7, #132]
 15899 021e 1B68     		ldr	r3, [r3]
 15900 0220 1846     		mov	r0, r3
 15901 0222 FFF7FEFF 		bl	__aeabi_i2d
 15902 0226 4FF00002 		mov	r2, #0
 15903 022a 324B     		ldr	r3, .L699+60
 15904 022c FFF7FEFF 		bl	__aeabi_ddiv
 15905 0230 0346     		mov	r3, r0
 15906 0232 0C46     		mov	r4, r1
 15907 0234 07F11C00 		add	r0, r7, #28
 15908 0238 1A46     		mov	r2, r3
 15909 023a 2346     		mov	r3, r4
 15910 023c 2E49     		ldr	r1, .L699+64
 15911 023e FFF7FEFF 		bl	sprintf
2301:..\src/command_processing.c ****             strcat(info_string, str);
 15912              		.loc 1 2301 0
 15913 0242 07F11C03 		add	r3, r7, #28
 15914 0246 1946     		mov	r1, r3
 15915 0248 7869     		ldr	r0, [r7, #20]
 15916 024a FFF7FEFF 		bl	strcat
2302:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15917              		.loc 1 2302 0
 15918 024e D7F88430 		ldr	r3, [r7, #132]
 15919 0252 5B68     		ldr	r3, [r3, #4]
 15920 0254 1846     		mov	r0, r3
 15921 0256 FFF7FEFF 		bl	__aeabi_i2d
 15922 025a 4FF00002 		mov	r2, #0
 15923 025e 254B     		ldr	r3, .L699+60
 15924 0260 FFF7FEFF 		bl	__aeabi_ddiv
 15925 0264 0346     		mov	r3, r0
 15926 0266 0C46     		mov	r4, r1
 15927 0268 07F11C00 		add	r0, r7, #28
 15928 026c 1A46     		mov	r2, r3
 15929 026e 2346     		mov	r3, r4
 15930 0270 2249     		ldr	r1, .L699+68
 15931 0272 FFF7FEFF 		bl	sprintf
2303:..\src/command_processing.c ****             strcat(info_string, str);
 15932              		.loc 1 2303 0
 15933 0276 07F11C03 		add	r3, r7, #28
 15934 027a 1946     		mov	r1, r3
 15935 027c 7869     		ldr	r0, [r7, #20]
 15936 027e FFF7FEFF 		bl	strcat
2304:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15937              		.loc 1 2304 0
 15938 0282 D7F88430 		ldr	r3, [r7, #132]
 15939 0286 9B68     		ldr	r3, [r3, #8]
 15940 0288 1846     		mov	r0, r3
 15941 028a FFF7FEFF 		bl	__aeabi_i2d
 15942 028e 4FF00002 		mov	r2, #0
 15943 0292 184B     		ldr	r3, .L699+60
 15944 0294 FFF7FEFF 		bl	__aeabi_ddiv
 15945 0298 0346     		mov	r3, r0
 15946 029a 0C46     		mov	r4, r1
 15947 029c 07F11C00 		add	r0, r7, #28
 15948 02a0 1A46     		mov	r2, r3
 15949 02a2 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 359


 15950 02a4 1649     		ldr	r1, .L699+72
 15951 02a6 FFF7FEFF 		bl	sprintf
2305:..\src/command_processing.c ****             strcat(info_string, str);
 15952              		.loc 1 2305 0
 15953 02aa 07F11C03 		add	r3, r7, #28
 15954 02ae 1946     		mov	r1, r3
 15955 02b0 7869     		ldr	r0, [r7, #20]
 15956 02b2 FFF7FEFF 		bl	strcat
 15957 02b6 73E0     		b	.L645
 15958              	.L700:
 15959              		.align	2
 15960              	.L699:
 15961 02b8 00000000 		.word	g_mem
 15962 02bc 9C0D0000 		.word	.LC127
 15963 02c0 38170000 		.word	.LC231
 15964 02c4 DC0D0000 		.word	.LC130
 15965 02c8 1C0E0000 		.word	.LC133
 15966 02cc 300E0000 		.word	.LC134
 15967 02d0 7C150000 		.word	.LC219
 15968 02d4 A8150000 		.word	.LC220
 15969 02d8 7C0E0000 		.word	.LC138
 15970 02dc EC0E0000 		.word	.LC147
 15971 02e0 DC0E0000 		.word	.LC145
 15972 02e4 E40E0000 		.word	.LC146
 15973 02e8 00000000 		.word	dev_pwm_limit
 15974 02ec 140F0000 		.word	.LC150
 15975 02f0 50170000 		.word	.LC232
 15976 02f4 0000F040 		.word	1089470464
 15977 02f8 E40F0000 		.word	.LC160
 15978 02fc F00F0000 		.word	.LC161
 15979 0300 FC0F0000 		.word	.LC162
 15980              	.L644:
2306:..\src/command_processing.c ****         }
2307:..\src/command_processing.c ****         else { 
2308:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15981              		.loc 1 2308 0
 15982 0304 D7F88430 		ldr	r3, [r7, #132]
 15983 0308 9B69     		ldr	r3, [r3, #24]
 15984 030a 1846     		mov	r0, r3
 15985 030c FFF7FEFF 		bl	__aeabi_i2d
 15986 0310 4FF00002 		mov	r2, #0
 15987 0314 CA4B     		ldr	r3, .L701
 15988 0316 FFF7FEFF 		bl	__aeabi_ddiv
 15989 031a 0346     		mov	r3, r0
 15990 031c 0C46     		mov	r4, r1
 15991 031e 07F11C00 		add	r0, r7, #28
 15992 0322 1A46     		mov	r2, r3
 15993 0324 2346     		mov	r3, r4
 15994 0326 C749     		ldr	r1, .L701+4
 15995 0328 FFF7FEFF 		bl	sprintf
2309:..\src/command_processing.c ****             strcat(info_string, str);
 15996              		.loc 1 2309 0
 15997 032c 07F11C03 		add	r3, r7, #28
 15998 0330 1946     		mov	r1, r3
 15999 0332 7869     		ldr	r0, [r7, #20]
 16000 0334 FFF7FEFF 		bl	strcat
2310:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 360


 16001              		.loc 1 2310 0
 16002 0338 D7F88430 		ldr	r3, [r7, #132]
 16003 033c DB69     		ldr	r3, [r3, #28]
 16004 033e 1846     		mov	r0, r3
 16005 0340 FFF7FEFF 		bl	__aeabi_i2d
 16006 0344 4FF00002 		mov	r2, #0
 16007 0348 BD4B     		ldr	r3, .L701
 16008 034a FFF7FEFF 		bl	__aeabi_ddiv
 16009 034e 0346     		mov	r3, r0
 16010 0350 0C46     		mov	r4, r1
 16011 0352 07F11C00 		add	r0, r7, #28
 16012 0356 1A46     		mov	r2, r3
 16013 0358 2346     		mov	r3, r4
 16014 035a BB49     		ldr	r1, .L701+8
 16015 035c FFF7FEFF 		bl	sprintf
2311:..\src/command_processing.c ****             strcat(info_string, str);
 16016              		.loc 1 2311 0
 16017 0360 07F11C03 		add	r3, r7, #28
 16018 0364 1946     		mov	r1, r3
 16019 0366 7869     		ldr	r0, [r7, #20]
 16020 0368 FFF7FEFF 		bl	strcat
2312:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 16021              		.loc 1 2312 0
 16022 036c D7F88430 		ldr	r3, [r7, #132]
 16023 0370 1B6A     		ldr	r3, [r3, #32]
 16024 0372 1846     		mov	r0, r3
 16025 0374 FFF7FEFF 		bl	__aeabi_i2d
 16026 0378 4FF00002 		mov	r2, #0
 16027 037c B04B     		ldr	r3, .L701
 16028 037e FFF7FEFF 		bl	__aeabi_ddiv
 16029 0382 0346     		mov	r3, r0
 16030 0384 0C46     		mov	r4, r1
 16031 0386 07F11C00 		add	r0, r7, #28
 16032 038a 1A46     		mov	r2, r3
 16033 038c 2346     		mov	r3, r4
 16034 038e AF49     		ldr	r1, .L701+12
 16035 0390 FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****             strcat(info_string, str);
 16036              		.loc 1 2313 0
 16037 0394 07F11C03 		add	r3, r7, #28
 16038 0398 1946     		mov	r1, r3
 16039 039a 7869     		ldr	r0, [r7, #20]
 16040 039c FFF7FEFF 		bl	strcat
 16041              	.L645:
2314:..\src/command_processing.c ****         }
2315:..\src/command_processing.c **** 
2316:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 16042              		.loc 1 2316 0
 16043 03a0 7869     		ldr	r0, [r7, #20]
 16044 03a2 FFF7FEFF 		bl	strlen
 16045 03a6 0346     		mov	r3, r0
 16046 03a8 1A46     		mov	r2, r3
 16047 03aa 7B69     		ldr	r3, [r7, #20]
 16048 03ac 1344     		add	r3, r3, r2
 16049 03ae A84A     		ldr	r2, .L701+16
 16050 03b0 1C46     		mov	r4, r3
 16051 03b2 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 361


 16052 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 16053 03b6 2060     		str	r0, [r4]	@ unaligned
 16054 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 16055 03ba A260     		str	r2, [r4, #8]	@ unaligned
 16056 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16057 03be A381     		strh	r3, [r4, #12]	@ unaligned
2317:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 16058              		.loc 1 2317 0
 16059 03c0 D7F88430 		ldr	r3, [r7, #132]
 16060 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16061 03c8 032B     		cmp	r3, #3
 16062 03ca 4ED0     		beq	.L646
2318:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 16063              		.loc 1 2318 0
 16064 03cc D7F88430 		ldr	r3, [r7, #132]
 16065 03d0 DB68     		ldr	r3, [r3, #12]
 16066 03d2 1846     		mov	r0, r3
 16067 03d4 FFF7FEFF 		bl	__aeabi_i2d
 16068 03d8 4FF00002 		mov	r2, #0
 16069 03dc 984B     		ldr	r3, .L701
 16070 03de FFF7FEFF 		bl	__aeabi_ddiv
 16071 03e2 0346     		mov	r3, r0
 16072 03e4 0C46     		mov	r4, r1
 16073 03e6 07F11C00 		add	r0, r7, #28
 16074 03ea 1A46     		mov	r2, r3
 16075 03ec 2346     		mov	r3, r4
 16076 03ee 9549     		ldr	r1, .L701+4
 16077 03f0 FFF7FEFF 		bl	sprintf
2319:..\src/command_processing.c ****             strcat(info_string, str);
 16078              		.loc 1 2319 0
 16079 03f4 07F11C03 		add	r3, r7, #28
 16080 03f8 1946     		mov	r1, r3
 16081 03fa 7869     		ldr	r0, [r7, #20]
 16082 03fc FFF7FEFF 		bl	strcat
2320:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 16083              		.loc 1 2320 0
 16084 0400 D7F88430 		ldr	r3, [r7, #132]
 16085 0404 1B69     		ldr	r3, [r3, #16]
 16086 0406 1846     		mov	r0, r3
 16087 0408 FFF7FEFF 		bl	__aeabi_i2d
 16088 040c 4FF00002 		mov	r2, #0
 16089 0410 8B4B     		ldr	r3, .L701
 16090 0412 FFF7FEFF 		bl	__aeabi_ddiv
 16091 0416 0346     		mov	r3, r0
 16092 0418 0C46     		mov	r4, r1
 16093 041a 07F11C00 		add	r0, r7, #28
 16094 041e 1A46     		mov	r2, r3
 16095 0420 2346     		mov	r3, r4
 16096 0422 8949     		ldr	r1, .L701+8
 16097 0424 FFF7FEFF 		bl	sprintf
2321:..\src/command_processing.c ****             strcat(info_string, str);
 16098              		.loc 1 2321 0
 16099 0428 07F11C03 		add	r3, r7, #28
 16100 042c 1946     		mov	r1, r3
 16101 042e 7869     		ldr	r0, [r7, #20]
 16102 0430 FFF7FEFF 		bl	strcat
2322:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 362


 16103              		.loc 1 2322 0
 16104 0434 D7F88430 		ldr	r3, [r7, #132]
 16105 0438 5B69     		ldr	r3, [r3, #20]
 16106 043a 1846     		mov	r0, r3
 16107 043c FFF7FEFF 		bl	__aeabi_i2d
 16108 0440 4FF00002 		mov	r2, #0
 16109 0444 7E4B     		ldr	r3, .L701
 16110 0446 FFF7FEFF 		bl	__aeabi_ddiv
 16111 044a 0346     		mov	r3, r0
 16112 044c 0C46     		mov	r4, r1
 16113 044e 07F11C00 		add	r0, r7, #28
 16114 0452 1A46     		mov	r2, r3
 16115 0454 2346     		mov	r3, r4
 16116 0456 7D49     		ldr	r1, .L701+12
 16117 0458 FFF7FEFF 		bl	sprintf
2323:..\src/command_processing.c ****             strcat(info_string, str);
 16118              		.loc 1 2323 0
 16119 045c 07F11C03 		add	r3, r7, #28
 16120 0460 1946     		mov	r1, r3
 16121 0462 7869     		ldr	r0, [r7, #20]
 16122 0464 FFF7FEFF 		bl	strcat
 16123 0468 4DE0     		b	.L647
 16124              	.L646:
2324:..\src/command_processing.c **** 
2325:..\src/command_processing.c ****         }
2326:..\src/command_processing.c ****         else {
2327:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 16125              		.loc 1 2327 0
 16126 046a D7F88430 		ldr	r3, [r7, #132]
 16127 046e 5B6A     		ldr	r3, [r3, #36]
 16128 0470 1846     		mov	r0, r3
 16129 0472 FFF7FEFF 		bl	__aeabi_i2d
 16130 0476 4FF00002 		mov	r2, #0
 16131 047a 714B     		ldr	r3, .L701
 16132 047c FFF7FEFF 		bl	__aeabi_ddiv
 16133 0480 0346     		mov	r3, r0
 16134 0482 0C46     		mov	r4, r1
 16135 0484 07F11C00 		add	r0, r7, #28
 16136 0488 1A46     		mov	r2, r3
 16137 048a 2346     		mov	r3, r4
 16138 048c 6D49     		ldr	r1, .L701+4
 16139 048e FFF7FEFF 		bl	sprintf
2328:..\src/command_processing.c ****             strcat(info_string, str);
 16140              		.loc 1 2328 0
 16141 0492 07F11C03 		add	r3, r7, #28
 16142 0496 1946     		mov	r1, r3
 16143 0498 7869     		ldr	r0, [r7, #20]
 16144 049a FFF7FEFF 		bl	strcat
2329:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 16145              		.loc 1 2329 0
 16146 049e D7F88430 		ldr	r3, [r7, #132]
 16147 04a2 9B6A     		ldr	r3, [r3, #40]
 16148 04a4 1846     		mov	r0, r3
 16149 04a6 FFF7FEFF 		bl	__aeabi_i2d
 16150 04aa 4FF00002 		mov	r2, #0
 16151 04ae 644B     		ldr	r3, .L701
 16152 04b0 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 363


 16153 04b4 0346     		mov	r3, r0
 16154 04b6 0C46     		mov	r4, r1
 16155 04b8 07F11C00 		add	r0, r7, #28
 16156 04bc 1A46     		mov	r2, r3
 16157 04be 2346     		mov	r3, r4
 16158 04c0 6149     		ldr	r1, .L701+8
 16159 04c2 FFF7FEFF 		bl	sprintf
2330:..\src/command_processing.c ****             strcat(info_string, str);
 16160              		.loc 1 2330 0
 16161 04c6 07F11C03 		add	r3, r7, #28
 16162 04ca 1946     		mov	r1, r3
 16163 04cc 7869     		ldr	r0, [r7, #20]
 16164 04ce FFF7FEFF 		bl	strcat
2331:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 16165              		.loc 1 2331 0
 16166 04d2 D7F88430 		ldr	r3, [r7, #132]
 16167 04d6 DB6A     		ldr	r3, [r3, #44]
 16168 04d8 1846     		mov	r0, r3
 16169 04da FFF7FEFF 		bl	__aeabi_i2d
 16170 04de 4FF00002 		mov	r2, #0
 16171 04e2 574B     		ldr	r3, .L701
 16172 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 16173 04e8 0346     		mov	r3, r0
 16174 04ea 0C46     		mov	r4, r1
 16175 04ec 07F11C00 		add	r0, r7, #28
 16176 04f0 1A46     		mov	r2, r3
 16177 04f2 2346     		mov	r3, r4
 16178 04f4 5549     		ldr	r1, .L701+12
 16179 04f6 FFF7FEFF 		bl	sprintf
2332:..\src/command_processing.c ****             strcat(info_string, str);
 16180              		.loc 1 2332 0
 16181 04fa 07F11C03 		add	r3, r7, #28
 16182 04fe 1946     		mov	r1, r3
 16183 0500 7869     		ldr	r0, [r7, #20]
 16184 0502 FFF7FEFF 		bl	strcat
 16185              	.L647:
2333:..\src/command_processing.c ****         }
2334:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 16186              		.loc 1 2334 0
 16187 0506 D7F88430 		ldr	r3, [r7, #132]
 16188 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 16189 050e 012B     		cmp	r3, #1
 16190 0510 14D1     		bne	.L648
2335:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 16191              		.loc 1 2335 0
 16192 0512 7869     		ldr	r0, [r7, #20]
 16193 0514 FFF7FEFF 		bl	strlen
 16194 0518 0346     		mov	r3, r0
 16195 051a 1A46     		mov	r2, r3
 16196 051c 7B69     		ldr	r3, [r7, #20]
 16197 051e 1344     		add	r3, r3, r2
 16198 0520 4C4A     		ldr	r2, .L701+20
 16199 0522 1D46     		mov	r5, r3
 16200 0524 1446     		mov	r4, r2
 16201 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16202 0528 2860     		str	r0, [r5]	@ unaligned
 16203 052a 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 364


 16204 052c AA60     		str	r2, [r5, #8]	@ unaligned
 16205 052e EB60     		str	r3, [r5, #12]	@ unaligned
 16206 0530 03CC     		ldmia	r4!, {r0, r1}
 16207 0532 2861     		str	r0, [r5, #16]	@ unaligned
 16208 0534 6961     		str	r1, [r5, #20]	@ unaligned
 16209 0536 2388     		ldrh	r3, [r4]	@ unaligned
 16210 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 16211 053a 13E0     		b	.L649
 16212              	.L648:
2336:..\src/command_processing.c ****         else
2337:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 16213              		.loc 1 2337 0
 16214 053c 7869     		ldr	r0, [r7, #20]
 16215 053e FFF7FEFF 		bl	strlen
 16216 0542 0346     		mov	r3, r0
 16217 0544 1A46     		mov	r2, r3
 16218 0546 7B69     		ldr	r3, [r7, #20]
 16219 0548 1344     		add	r3, r3, r2
 16220 054a 434A     		ldr	r2, .L701+24
 16221 054c 1D46     		mov	r5, r3
 16222 054e 1446     		mov	r4, r2
 16223 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16224 0552 2860     		str	r0, [r5]	@ unaligned
 16225 0554 6960     		str	r1, [r5, #4]	@ unaligned
 16226 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 16227 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 16228 055a 03CC     		ldmia	r4!, {r0, r1}
 16229 055c 2861     		str	r0, [r5, #16]	@ unaligned
 16230 055e 6961     		str	r1, [r5, #20]	@ unaligned
 16231 0560 2378     		ldrb	r3, [r4]
 16232 0562 2B76     		strb	r3, [r5, #24]
 16233              	.L649:
2338:..\src/command_processing.c **** 
2339:..\src/command_processing.c ****         switch(MOT->input_mode) {
 16234              		.loc 1 2339 0
 16235 0564 D7F88430 		ldr	r3, [r7, #132]
 16236 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16237 056c 052B     		cmp	r3, #5
 16238 056e 00F2AC80 		bhi	.L650
 16239 0572 01A2     		adr	r2, .L652
 16240 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16241              		.p2align 2
 16242              	.L652:
 16243 0578 91050000 		.word	.L651+1
 16244 057c B5050000 		.word	.L653+1
 16245 0580 DD050000 		.word	.L654+1
 16246 0584 0F060000 		.word	.L655+1
 16247 0588 6D060000 		.word	.L656+1
 16248 058c 9B060000 		.word	.L657+1
 16249              		.p2align 1
 16250              	.L651:
2340:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2341:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 16251              		.loc 1 2341 0
 16252 0590 7869     		ldr	r0, [r7, #20]
 16253 0592 FFF7FEFF 		bl	strlen
 16254 0596 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 365


 16255 0598 1A46     		mov	r2, r3
 16256 059a 7B69     		ldr	r3, [r7, #20]
 16257 059c 1344     		add	r3, r3, r2
 16258 059e 2F4A     		ldr	r2, .L701+28
 16259 05a0 1D46     		mov	r5, r3
 16260 05a2 1446     		mov	r4, r2
 16261 05a4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16262 05a6 2860     		str	r0, [r5]	@ unaligned
 16263 05a8 6960     		str	r1, [r5, #4]	@ unaligned
 16264 05aa AA60     		str	r2, [r5, #8]	@ unaligned
 16265 05ac EB60     		str	r3, [r5, #12]	@ unaligned
 16266 05ae 2388     		ldrh	r3, [r4]	@ unaligned
 16267 05b0 2B82     		strh	r3, [r5, #16]	@ unaligned
2342:..\src/command_processing.c ****                 break;
 16268              		.loc 1 2342 0
 16269 05b2 8AE0     		b	.L650
 16270              	.L653:
2343:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2344:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 16271              		.loc 1 2344 0
 16272 05b4 7869     		ldr	r0, [r7, #20]
 16273 05b6 FFF7FEFF 		bl	strlen
 16274 05ba 0346     		mov	r3, r0
 16275 05bc 1A46     		mov	r2, r3
 16276 05be 7B69     		ldr	r3, [r7, #20]
 16277 05c0 1344     		add	r3, r3, r2
 16278 05c2 274A     		ldr	r2, .L701+32
 16279 05c4 1D46     		mov	r5, r3
 16280 05c6 1446     		mov	r4, r2
 16281 05c8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16282 05ca 2860     		str	r0, [r5]	@ unaligned
 16283 05cc 6960     		str	r1, [r5, #4]	@ unaligned
 16284 05ce AA60     		str	r2, [r5, #8]	@ unaligned
 16285 05d0 EB60     		str	r3, [r5, #12]	@ unaligned
 16286 05d2 2068     		ldr	r0, [r4]	@ unaligned
 16287 05d4 2861     		str	r0, [r5, #16]	@ unaligned
 16288 05d6 2379     		ldrb	r3, [r4, #4]
 16289 05d8 2B75     		strb	r3, [r5, #20]
2345:..\src/command_processing.c ****                 break;
 16290              		.loc 1 2345 0
 16291 05da 76E0     		b	.L650
 16292              	.L654:
2346:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2347:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 16293              		.loc 1 2347 0
 16294 05dc 7869     		ldr	r0, [r7, #20]
 16295 05de FFF7FEFF 		bl	strlen
 16296 05e2 0346     		mov	r3, r0
 16297 05e4 1A46     		mov	r2, r3
 16298 05e6 7B69     		ldr	r3, [r7, #20]
 16299 05e8 1344     		add	r3, r3, r2
 16300 05ea 1E4A     		ldr	r2, .L701+36
 16301 05ec 1D46     		mov	r5, r3
 16302 05ee 1446     		mov	r4, r2
 16303 05f0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16304 05f2 2860     		str	r0, [r5]	@ unaligned
 16305 05f4 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 366


 16306 05f6 AA60     		str	r2, [r5, #8]	@ unaligned
 16307 05f8 EB60     		str	r3, [r5, #12]	@ unaligned
 16308 05fa 07CC     		ldmia	r4!, {r0, r1, r2}
 16309 05fc 2861     		str	r0, [r5, #16]	@ unaligned
 16310 05fe 6961     		str	r1, [r5, #20]	@ unaligned
 16311 0600 AA61     		str	r2, [r5, #24]	@ unaligned
 16312 0602 2388     		ldrh	r3, [r4]	@ unaligned
 16313 0604 A278     		ldrb	r2, [r4, #2]
 16314 0606 AB83     		strh	r3, [r5, #28]	@ unaligned
 16315 0608 1346     		mov	r3, r2
 16316 060a AB77     		strb	r3, [r5, #30]
2348:..\src/command_processing.c ****                 break;
 16317              		.loc 1 2348 0
 16318 060c 5DE0     		b	.L650
 16319              	.L655:
2349:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2350:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 16320              		.loc 1 2350 0
 16321 060e 7869     		ldr	r0, [r7, #20]
 16322 0610 FFF7FEFF 		bl	strlen
 16323 0614 0346     		mov	r3, r0
 16324 0616 1A46     		mov	r2, r3
 16325 0618 7B69     		ldr	r3, [r7, #20]
 16326 061a 1344     		add	r3, r3, r2
 16327 061c 124A     		ldr	r2, .L701+40
 16328 061e 1D46     		mov	r5, r3
 16329 0620 1446     		mov	r4, r2
 16330 0622 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16331 0624 2860     		str	r0, [r5]	@ unaligned
 16332 0626 6960     		str	r1, [r5, #4]	@ unaligned
 16333 0628 AA60     		str	r2, [r5, #8]	@ unaligned
 16334 062a EB60     		str	r3, [r5, #12]	@ unaligned
 16335 062c 03CC     		ldmia	r4!, {r0, r1}
 16336 062e 2861     		str	r0, [r5, #16]	@ unaligned
 16337 0630 6961     		str	r1, [r5, #20]	@ unaligned
 16338 0632 2388     		ldrh	r3, [r4]	@ unaligned
 16339 0634 A278     		ldrb	r2, [r4, #2]
 16340 0636 2B83     		strh	r3, [r5, #24]	@ unaligned
 16341 0638 1346     		mov	r3, r2
 16342 063a AB76     		strb	r3, [r5, #26]
2351:..\src/command_processing.c ****                 break;
 16343              		.loc 1 2351 0
 16344 063c 45E0     		b	.L650
 16345              	.L702:
 16346 063e 00BF     		.align	2
 16347              	.L701:
 16348 0640 0000F040 		.word	1089470464
 16349 0644 E40F0000 		.word	.LC160
 16350 0648 F00F0000 		.word	.LC161
 16351 064c FC0F0000 		.word	.LC162
 16352 0650 60170000 		.word	.LC233
 16353 0654 24100000 		.word	.LC164
 16354 0658 40100000 		.word	.LC165
 16355 065c 5C100000 		.word	.LC166
 16356 0660 70100000 		.word	.LC167
 16357 0664 88100000 		.word	.LC168
 16358 0668 A8100000 		.word	.LC169
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 367


 16359              	.L656:
2352:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2353:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 16360              		.loc 1 2353 0
 16361 066c 7869     		ldr	r0, [r7, #20]
 16362 066e FFF7FEFF 		bl	strlen
 16363 0672 0346     		mov	r3, r0
 16364 0674 1A46     		mov	r2, r3
 16365 0676 7B69     		ldr	r3, [r7, #20]
 16366 0678 1344     		add	r3, r3, r2
 16367 067a CF4A     		ldr	r2, .L703
 16368 067c 1C46     		mov	r4, r3
 16369 067e 1546     		mov	r5, r2
 16370 0680 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16371 0682 2060     		str	r0, [r4]	@ unaligned
 16372 0684 6160     		str	r1, [r4, #4]	@ unaligned
 16373 0686 A260     		str	r2, [r4, #8]	@ unaligned
 16374 0688 E360     		str	r3, [r4, #12]	@ unaligned
 16375 068a 2868     		ldr	r0, [r5]	@ unaligned
 16376 068c 2061     		str	r0, [r4, #16]	@ unaligned
 16377 068e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16378 0690 AA79     		ldrb	r2, [r5, #6]
 16379 0692 A382     		strh	r3, [r4, #20]	@ unaligned
 16380 0694 1346     		mov	r3, r2
 16381 0696 A375     		strb	r3, [r4, #22]
2354:..\src/command_processing.c ****                 break;
 16382              		.loc 1 2354 0
 16383 0698 17E0     		b	.L650
 16384              	.L657:
2355:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2356:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 16385              		.loc 1 2356 0
 16386 069a 7869     		ldr	r0, [r7, #20]
 16387 069c FFF7FEFF 		bl	strlen
 16388 06a0 0346     		mov	r3, r0
 16389 06a2 1A46     		mov	r2, r3
 16390 06a4 7B69     		ldr	r3, [r7, #20]
 16391 06a6 1344     		add	r3, r3, r2
 16392 06a8 C44A     		ldr	r2, .L703+4
 16393 06aa 1D46     		mov	r5, r3
 16394 06ac 1446     		mov	r4, r2
 16395 06ae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16396 06b0 2860     		str	r0, [r5]	@ unaligned
 16397 06b2 6960     		str	r1, [r5, #4]	@ unaligned
 16398 06b4 AA60     		str	r2, [r5, #8]	@ unaligned
 16399 06b6 EB60     		str	r3, [r5, #12]	@ unaligned
 16400 06b8 03CC     		ldmia	r4!, {r0, r1}
 16401 06ba 2861     		str	r0, [r5, #16]	@ unaligned
 16402 06bc 6961     		str	r1, [r5, #20]	@ unaligned
 16403 06be 2388     		ldrh	r3, [r4]	@ unaligned
 16404 06c0 A278     		ldrb	r2, [r4, #2]
 16405 06c2 2B83     		strh	r3, [r5, #24]	@ unaligned
 16406 06c4 1346     		mov	r3, r2
 16407 06c6 AB76     		strb	r3, [r5, #26]
2357:..\src/command_processing.c ****                 break;
 16408              		.loc 1 2357 0
 16409 06c8 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 368


 16410              	.L650:
2358:..\src/command_processing.c ****         }
2359:..\src/command_processing.c **** 
2360:..\src/command_processing.c ****         switch(MOT->control_mode) {
 16411              		.loc 1 2360 0
 16412 06ca D7F88430 		ldr	r3, [r7, #132]
 16413 06ce 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16414 06d2 032B     		cmp	r3, #3
 16415 06d4 63D8     		bhi	.L697
 16416 06d6 01A2     		adr	r2, .L660
 16417 06d8 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16418              		.p2align 2
 16419              	.L660:
 16420 06dc ED060000 		.word	.L659+1
 16421 06e0 17070000 		.word	.L661+1
 16422 06e4 3B070000 		.word	.L662+1
 16423 06e8 61070000 		.word	.L663+1
 16424              		.p2align 1
 16425              	.L659:
2361:..\src/command_processing.c ****             case CONTROL_ANGLE:
2362:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 16426              		.loc 1 2362 0
 16427 06ec 7869     		ldr	r0, [r7, #20]
 16428 06ee FFF7FEFF 		bl	strlen
 16429 06f2 0346     		mov	r3, r0
 16430 06f4 1A46     		mov	r2, r3
 16431 06f6 7B69     		ldr	r3, [r7, #20]
 16432 06f8 1344     		add	r3, r3, r2
 16433 06fa B14A     		ldr	r2, .L703+8
 16434 06fc 1D46     		mov	r5, r3
 16435 06fe 1446     		mov	r4, r2
 16436 0700 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16437 0702 2860     		str	r0, [r5]	@ unaligned
 16438 0704 6960     		str	r1, [r5, #4]	@ unaligned
 16439 0706 AA60     		str	r2, [r5, #8]	@ unaligned
 16440 0708 EB60     		str	r3, [r5, #12]	@ unaligned
 16441 070a 03CC     		ldmia	r4!, {r0, r1}
 16442 070c 2861     		str	r0, [r5, #16]	@ unaligned
 16443 070e 6961     		str	r1, [r5, #20]	@ unaligned
 16444 0710 2378     		ldrb	r3, [r4]
 16445 0712 2B76     		strb	r3, [r5, #24]
2363:..\src/command_processing.c ****                 break;
 16446              		.loc 1 2363 0
 16447 0714 44E0     		b	.L664
 16448              	.L661:
2364:..\src/command_processing.c ****             case CONTROL_PWM:
2365:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 16449              		.loc 1 2365 0
 16450 0716 7869     		ldr	r0, [r7, #20]
 16451 0718 FFF7FEFF 		bl	strlen
 16452 071c 0346     		mov	r3, r0
 16453 071e 1A46     		mov	r2, r3
 16454 0720 7B69     		ldr	r3, [r7, #20]
 16455 0722 1344     		add	r3, r3, r2
 16456 0724 A74A     		ldr	r2, .L703+12
 16457 0726 1D46     		mov	r5, r3
 16458 0728 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 369


 16459 072a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16460 072c 2860     		str	r0, [r5]	@ unaligned
 16461 072e 6960     		str	r1, [r5, #4]	@ unaligned
 16462 0730 AA60     		str	r2, [r5, #8]	@ unaligned
 16463 0732 EB60     		str	r3, [r5, #12]	@ unaligned
 16464 0734 2068     		ldr	r0, [r4]	@ unaligned
 16465 0736 2861     		str	r0, [r5, #16]	@ unaligned
2366:..\src/command_processing.c ****                 break;
 16466              		.loc 1 2366 0
 16467 0738 32E0     		b	.L664
 16468              	.L662:
2367:..\src/command_processing.c ****             case CONTROL_CURRENT:
2368:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 16469              		.loc 1 2368 0
 16470 073a 7869     		ldr	r0, [r7, #20]
 16471 073c FFF7FEFF 		bl	strlen
 16472 0740 0346     		mov	r3, r0
 16473 0742 1A46     		mov	r2, r3
 16474 0744 7B69     		ldr	r3, [r7, #20]
 16475 0746 1344     		add	r3, r3, r2
 16476 0748 9F4A     		ldr	r2, .L703+16
 16477 074a 1D46     		mov	r5, r3
 16478 074c 1446     		mov	r4, r2
 16479 074e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16480 0750 2860     		str	r0, [r5]	@ unaligned
 16481 0752 6960     		str	r1, [r5, #4]	@ unaligned
 16482 0754 AA60     		str	r2, [r5, #8]	@ unaligned
 16483 0756 EB60     		str	r3, [r5, #12]	@ unaligned
 16484 0758 03CC     		ldmia	r4!, {r0, r1}
 16485 075a 2861     		str	r0, [r5, #16]	@ unaligned
 16486 075c 6961     		str	r1, [r5, #20]	@ unaligned
2369:..\src/command_processing.c ****                 break;
 16487              		.loc 1 2369 0
 16488 075e 1FE0     		b	.L664
 16489              	.L663:
2370:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2371:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 16490              		.loc 1 2371 0
 16491 0760 7869     		ldr	r0, [r7, #20]
 16492 0762 FFF7FEFF 		bl	strlen
 16493 0766 0346     		mov	r3, r0
 16494 0768 1A46     		mov	r2, r3
 16495 076a 7B69     		ldr	r3, [r7, #20]
 16496 076c 1344     		add	r3, r3, r2
 16497 076e 974A     		ldr	r2, .L703+20
 16498 0770 1446     		mov	r4, r2
 16499 0772 9E46     		mov	lr, r3
 16500 0774 04F1200C 		add	ip, r4, #32
 16501              	.L665:
 16502 0778 7546     		mov	r5, lr
 16503 077a 2646     		mov	r6, r4
 16504 077c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16505 077e 2860     		str	r0, [r5]	@ unaligned
 16506 0780 6960     		str	r1, [r5, #4]	@ unaligned
 16507 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 16508 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 16509 0786 1034     		adds	r4, r4, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 370


 16510 0788 0EF1100E 		add	lr, lr, #16
 16511 078c 6445     		cmp	r4, ip
 16512 078e F3D1     		bne	.L665
 16513 0790 7346     		mov	r3, lr
 16514 0792 2246     		mov	r2, r4
 16515 0794 1068     		ldr	r0, [r2]	@ unaligned
 16516 0796 1860     		str	r0, [r3]	@ unaligned
 16517 0798 1279     		ldrb	r2, [r2, #4]
 16518 079a 1A71     		strb	r2, [r3, #4]
2372:..\src/command_processing.c ****                 break;
 16519              		.loc 1 2372 0
 16520 079c 00E0     		b	.L664
 16521              	.L697:
2373:..\src/command_processing.c ****             default:
2374:..\src/command_processing.c ****                 break;
 16522              		.loc 1 2374 0
 16523 079e 00BF     		nop
 16524              	.L664:
2375:..\src/command_processing.c ****         }
2376:..\src/command_processing.c **** 
2377:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16525              		.loc 1 2377 0
 16526 07a0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16527 07a4 D7F88C10 		ldr	r1, [r7, #140]
 16528 07a8 1346     		mov	r3, r2
 16529 07aa 5B00     		lsls	r3, r3, #1
 16530 07ac 1344     		add	r3, r3, r2
 16531 07ae 1B01     		lsls	r3, r3, #4
 16532 07b0 0B44     		add	r3, r3, r1
 16533 07b2 03F5D873 		add	r3, r3, #432
 16534 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16535 07b8 002B     		cmp	r3, #0
 16536 07ba 1CD0     		beq	.L666
2378:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 16537              		.loc 1 2378 0
 16538 07bc 7869     		ldr	r0, [r7, #20]
 16539 07be FFF7FEFF 		bl	strlen
 16540 07c2 0346     		mov	r3, r0
 16541 07c4 1A46     		mov	r2, r3
 16542 07c6 7B69     		ldr	r3, [r7, #20]
 16543 07c8 1344     		add	r3, r3, r2
 16544 07ca 814A     		ldr	r2, .L703+24
 16545 07cc 1446     		mov	r4, r2
 16546 07ce 9E46     		mov	lr, r3
 16547 07d0 04F1200C 		add	ip, r4, #32
 16548              	.L667:
 16549 07d4 7546     		mov	r5, lr
 16550 07d6 2646     		mov	r6, r4
 16551 07d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16552 07da 2860     		str	r0, [r5]	@ unaligned
 16553 07dc 6960     		str	r1, [r5, #4]	@ unaligned
 16554 07de AA60     		str	r2, [r5, #8]	@ unaligned
 16555 07e0 EB60     		str	r3, [r5, #12]	@ unaligned
 16556 07e2 1034     		adds	r4, r4, #16
 16557 07e4 0EF1100E 		add	lr, lr, #16
 16558 07e8 6445     		cmp	r4, ip
 16559 07ea F3D1     		bne	.L667
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 371


 16560 07ec 7346     		mov	r3, lr
 16561 07ee 2246     		mov	r2, r4
 16562 07f0 1278     		ldrb	r2, [r2]
 16563 07f2 1A70     		strb	r2, [r3]
 16564 07f4 13E0     		b	.L668
 16565              	.L666:
2379:..\src/command_processing.c ****         else
2380:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 16566              		.loc 1 2380 0
 16567 07f6 7869     		ldr	r0, [r7, #20]
 16568 07f8 FFF7FEFF 		bl	strlen
 16569 07fc 0346     		mov	r3, r0
 16570 07fe 1A46     		mov	r2, r3
 16571 0800 7B69     		ldr	r3, [r7, #20]
 16572 0802 1344     		add	r3, r3, r2
 16573 0804 734A     		ldr	r2, .L703+28
 16574 0806 1C46     		mov	r4, r3
 16575 0808 1546     		mov	r5, r2
 16576 080a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16577 080c 2060     		str	r0, [r4]	@ unaligned
 16578 080e 6160     		str	r1, [r4, #4]	@ unaligned
 16579 0810 A260     		str	r2, [r4, #8]	@ unaligned
 16580 0812 E360     		str	r3, [r4, #12]	@ unaligned
 16581 0814 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16582 0816 2061     		str	r0, [r4, #16]	@ unaligned
 16583 0818 6161     		str	r1, [r4, #20]	@ unaligned
 16584 081a A261     		str	r2, [r4, #24]	@ unaligned
 16585 081c E361     		str	r3, [r4, #28]	@ unaligned
 16586              	.L668:
2381:..\src/command_processing.c **** 
2382:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 16587              		.loc 1 2382 0
 16588 081e 7869     		ldr	r0, [r7, #20]
 16589 0820 FFF7FEFF 		bl	strlen
 16590 0824 0346     		mov	r3, r0
 16591 0826 1A46     		mov	r2, r3
 16592 0828 7B69     		ldr	r3, [r7, #20]
 16593 082a 1344     		add	r3, r3, r2
 16594 082c 6A4A     		ldr	r2, .L703+32
 16595 082e 1C46     		mov	r4, r3
 16596 0830 1346     		mov	r3, r2
 16597 0832 07CB     		ldmia	r3!, {r0, r1, r2}
 16598 0834 2060     		str	r0, [r4]	@ unaligned
 16599 0836 6160     		str	r1, [r4, #4]	@ unaligned
 16600 0838 A260     		str	r2, [r4, #8]	@ unaligned
 16601 083a 1B88     		ldrh	r3, [r3]	@ unaligned
 16602 083c A381     		strh	r3, [r4, #12]	@ unaligned
2383:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16603              		.loc 1 2383 0
 16604 083e 0023     		movs	r3, #0
 16605 0840 C7F89430 		str	r3, [r7, #148]
 16606 0844 30E0     		b	.L669
 16607              	.L671:
2384:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16608              		.loc 1 2384 0
 16609 0846 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16610 084a D7F88C10 		ldr	r1, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 372


 16611 084e 1346     		mov	r3, r2
 16612 0850 5B00     		lsls	r3, r3, #1
 16613 0852 1344     		add	r3, r3, r2
 16614 0854 1B01     		lsls	r3, r3, #4
 16615 0856 CA18     		adds	r2, r1, r3
 16616 0858 D7F89430 		ldr	r3, [r7, #148]
 16617 085c 1344     		add	r3, r3, r2
 16618 085e 03F29513 		addw	r3, r3, #405
 16619 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16620 0864 1A46     		mov	r2, r3
 16621 0866 07F11C03 		add	r3, r7, #28
 16622 086a 5C49     		ldr	r1, .L703+36
 16623 086c 1846     		mov	r0, r3
 16624 086e FFF7FEFF 		bl	sprintf
2385:..\src/command_processing.c ****             strcat(info_string, str);
 16625              		.loc 1 2385 0
 16626 0872 07F11C03 		add	r3, r7, #28
 16627 0876 1946     		mov	r1, r3
 16628 0878 7869     		ldr	r0, [r7, #20]
 16629 087a FFF7FEFF 		bl	strcat
2386:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16630              		.loc 1 2386 0
 16631 087e D7F89430 		ldr	r3, [r7, #148]
 16632 0882 022B     		cmp	r3, #2
 16633 0884 0BD0     		beq	.L670
2387:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16634              		.loc 1 2387 0
 16635 0886 7869     		ldr	r0, [r7, #20]
 16636 0888 FFF7FEFF 		bl	strlen
 16637 088c 0346     		mov	r3, r0
 16638 088e 1A46     		mov	r2, r3
 16639 0890 7B69     		ldr	r3, [r7, #20]
 16640 0892 1344     		add	r3, r3, r2
 16641 0894 524A     		ldr	r2, .L703+40
 16642 0896 1188     		ldrh	r1, [r2]	@ unaligned
 16643 0898 9278     		ldrb	r2, [r2, #2]
 16644 089a 1980     		strh	r1, [r3]	@ unaligned
 16645 089c 9A70     		strb	r2, [r3, #2]
 16646              	.L670:
2383:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16647              		.loc 1 2383 0 discriminator 2
 16648 089e D7F89430 		ldr	r3, [r7, #148]
 16649 08a2 0133     		adds	r3, r3, #1
 16650 08a4 C7F89430 		str	r3, [r7, #148]
 16651              	.L669:
2383:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16652              		.loc 1 2383 0 is_stmt 0 discriminator 1
 16653 08a8 D7F89430 		ldr	r3, [r7, #148]
 16654 08ac 022B     		cmp	r3, #2
 16655 08ae CADD     		ble	.L671
2388:..\src/command_processing.c ****             }                
2389:..\src/command_processing.c ****         }
2390:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16656              		.loc 1 2390 0 is_stmt 1
 16657 08b0 7869     		ldr	r0, [r7, #20]
 16658 08b2 FFF7FEFF 		bl	strlen
 16659 08b6 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 373


 16660 08b8 1A46     		mov	r2, r3
 16661 08ba 7B69     		ldr	r3, [r7, #20]
 16662 08bc 1344     		add	r3, r3, r2
 16663 08be 494A     		ldr	r2, .L703+44
 16664 08c0 1188     		ldrh	r1, [r2]	@ unaligned
 16665 08c2 9278     		ldrb	r2, [r2, #2]
 16666 08c4 1980     		strh	r1, [r3]	@ unaligned
 16667 08c6 9A70     		strb	r2, [r3, #2]
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 16668              		.loc 1 2392 0
 16669 08c8 7869     		ldr	r0, [r7, #20]
 16670 08ca FFF7FEFF 		bl	strlen
 16671 08ce 0346     		mov	r3, r0
 16672 08d0 1A46     		mov	r2, r3
 16673 08d2 7B69     		ldr	r3, [r7, #20]
 16674 08d4 1344     		add	r3, r3, r2
 16675 08d6 4449     		ldr	r1, .L703+48
 16676 08d8 1A46     		mov	r2, r3
 16677 08da 0B46     		mov	r3, r1
 16678 08dc 03CB     		ldmia	r3!, {r0, r1}
 16679 08de 1060     		str	r0, [r2]	@ unaligned
 16680 08e0 5160     		str	r1, [r2, #4]	@ unaligned
 16681 08e2 1B88     		ldrh	r3, [r3]	@ unaligned
 16682 08e4 1381     		strh	r3, [r2, #8]	@ unaligned
2393:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16683              		.loc 1 2393 0
 16684 08e6 0023     		movs	r3, #0
 16685 08e8 C7F89430 		str	r3, [r7, #148]
 16686 08ec 3FE0     		b	.L672
 16687              	.L674:
2394:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16688              		.loc 1 2394 0
 16689 08ee 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16690 08f2 D7F88C10 		ldr	r1, [r7, #140]
 16691 08f6 1346     		mov	r3, r2
 16692 08f8 5B00     		lsls	r3, r3, #1
 16693 08fa 1344     		add	r3, r3, r2
 16694 08fc 9B00     		lsls	r3, r3, #2
 16695 08fe D7F89420 		ldr	r2, [r7, #148]
 16696 0902 1344     		add	r3, r3, r2
 16697 0904 6633     		adds	r3, r3, #102
 16698 0906 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16699 090a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16700 090e D7F88C00 		ldr	r0, [r7, #140]
 16701 0912 1346     		mov	r3, r2
 16702 0914 5B00     		lsls	r3, r3, #1
 16703 0916 1344     		add	r3, r3, r2
 16704 0918 1B01     		lsls	r3, r3, #4
 16705 091a C218     		adds	r2, r0, r3
 16706 091c D7F89430 		ldr	r3, [r7, #148]
 16707 0920 1344     		add	r3, r3, r2
 16708 0922 03F29513 		addw	r3, r3, #405
 16709 0926 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16710 0928 41FA03F2 		asr	r2, r1, r3
 16711 092c 07F11C03 		add	r3, r7, #28
 16712 0930 2E49     		ldr	r1, .L703+52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 374


 16713 0932 1846     		mov	r0, r3
 16714 0934 FFF7FEFF 		bl	sprintf
2395:..\src/command_processing.c ****             strcat(info_string, str);
 16715              		.loc 1 2395 0
 16716 0938 07F11C03 		add	r3, r7, #28
 16717 093c 1946     		mov	r1, r3
 16718 093e 7869     		ldr	r0, [r7, #20]
 16719 0940 FFF7FEFF 		bl	strcat
2396:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16720              		.loc 1 2396 0
 16721 0944 D7F89430 		ldr	r3, [r7, #148]
 16722 0948 022B     		cmp	r3, #2
 16723 094a 0BD0     		beq	.L673
2397:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16724              		.loc 1 2397 0
 16725 094c 7869     		ldr	r0, [r7, #20]
 16726 094e FFF7FEFF 		bl	strlen
 16727 0952 0346     		mov	r3, r0
 16728 0954 1A46     		mov	r2, r3
 16729 0956 7B69     		ldr	r3, [r7, #20]
 16730 0958 1344     		add	r3, r3, r2
 16731 095a 214A     		ldr	r2, .L703+40
 16732 095c 1188     		ldrh	r1, [r2]	@ unaligned
 16733 095e 9278     		ldrb	r2, [r2, #2]
 16734 0960 1980     		strh	r1, [r3]	@ unaligned
 16735 0962 9A70     		strb	r2, [r3, #2]
 16736              	.L673:
2393:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16737              		.loc 1 2393 0 discriminator 2
 16738 0964 D7F89430 		ldr	r3, [r7, #148]
 16739 0968 0133     		adds	r3, r3, #1
 16740 096a C7F89430 		str	r3, [r7, #148]
 16741              	.L672:
2393:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16742              		.loc 1 2393 0 is_stmt 0 discriminator 1
 16743 096e D7F89430 		ldr	r3, [r7, #148]
 16744 0972 022B     		cmp	r3, #2
 16745 0974 BBDD     		ble	.L674
2398:..\src/command_processing.c ****             }
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16746              		.loc 1 2400 0 is_stmt 1
 16747 0976 7869     		ldr	r0, [r7, #20]
 16748 0978 FFF7FEFF 		bl	strlen
 16749 097c 0346     		mov	r3, r0
 16750 097e 1A46     		mov	r2, r3
 16751 0980 7B69     		ldr	r3, [r7, #20]
 16752 0982 1344     		add	r3, r3, r2
 16753 0984 174A     		ldr	r2, .L703+44
 16754 0986 1188     		ldrh	r1, [r2]	@ unaligned
 16755 0988 9278     		ldrb	r2, [r2, #2]
 16756 098a 1980     		strh	r1, [r3]	@ unaligned
 16757 098c 9A70     		strb	r2, [r3, #2]
2401:..\src/command_processing.c ****             
2402:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 16758              		.loc 1 2402 0
 16759 098e 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 375


 16760 0990 FFF7FEFF 		bl	strlen
 16761 0994 0346     		mov	r3, r0
 16762 0996 1A46     		mov	r2, r3
 16763 0998 7B69     		ldr	r3, [r7, #20]
 16764 099a 1344     		add	r3, r3, r2
 16765 099c 144A     		ldr	r2, .L703+56
 16766 099e 1C46     		mov	r4, r3
 16767 09a0 1346     		mov	r3, r2
 16768 09a2 07CB     		ldmia	r3!, {r0, r1, r2}
 16769 09a4 2060     		str	r0, [r4]	@ unaligned
 16770 09a6 6160     		str	r1, [r4, #4]	@ unaligned
 16771 09a8 A260     		str	r2, [r4, #8]	@ unaligned
 16772 09aa 1B88     		ldrh	r3, [r3]	@ unaligned
 16773 09ac A381     		strh	r3, [r4, #12]	@ unaligned
2403:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16774              		.loc 1 2403 0
 16775 09ae 0023     		movs	r3, #0
 16776 09b0 C7F89430 		str	r3, [r7, #148]
 16777 09b4 54E0     		b	.L675
 16778              	.L704:
 16779 09b6 00BF     		.align	2
 16780              	.L703:
 16781 09b8 C4100000 		.word	.LC170
 16782 09bc DC100000 		.word	.LC171
 16783 09c0 F8100000 		.word	.LC172
 16784 09c4 14110000 		.word	.LC173
 16785 09c8 28110000 		.word	.LC174
 16786 09cc 40110000 		.word	.LC175
 16787 09d0 68110000 		.word	.LC176
 16788 09d4 8C110000 		.word	.LC177
 16789 09d8 70170000 		.word	.LC234
 16790 09dc 4C0F0000 		.word	.LC153
 16791 09e0 500F0000 		.word	.LC154
 16792 09e4 840D0000 		.word	.LC125
 16793 09e8 80170000 		.word	.LC235
 16794 09ec 68120000 		.word	.LC185
 16795 09f0 8C170000 		.word	.LC236
 16796              	.L677:
2404:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16797              		.loc 1 2404 0
 16798 09f4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16799 09f8 D7F88C10 		ldr	r1, [r7, #140]
 16800 09fc 1346     		mov	r3, r2
 16801 09fe 5B00     		lsls	r3, r3, #1
 16802 0a00 1344     		add	r3, r3, r2
 16803 0a02 9B00     		lsls	r3, r3, #2
 16804 0a04 D7F89420 		ldr	r2, [r7, #148]
 16805 0a08 1344     		add	r3, r3, r2
 16806 0a0a 6833     		adds	r3, r3, #104
 16807 0a0c 9B00     		lsls	r3, r3, #2
 16808 0a0e 0B44     		add	r3, r3, r1
 16809 0a10 5B68     		ldr	r3, [r3, #4]	@ float
 16810 0a12 1846     		mov	r0, r3
 16811 0a14 FFF7FEFF 		bl	__aeabi_f2d
 16812 0a18 0346     		mov	r3, r0
 16813 0a1a 0C46     		mov	r4, r1
 16814 0a1c 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 376


 16815 0a20 1A46     		mov	r2, r3
 16816 0a22 2346     		mov	r3, r4
 16817 0a24 9E49     		ldr	r1, .L705
 16818 0a26 FFF7FEFF 		bl	sprintf
2405:..\src/command_processing.c ****             strcat(info_string, str);
 16819              		.loc 1 2405 0
 16820 0a2a 07F11C03 		add	r3, r7, #28
 16821 0a2e 1946     		mov	r1, r3
 16822 0a30 7869     		ldr	r0, [r7, #20]
 16823 0a32 FFF7FEFF 		bl	strcat
2406:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16824              		.loc 1 2406 0
 16825 0a36 D7F89430 		ldr	r3, [r7, #148]
 16826 0a3a 022B     		cmp	r3, #2
 16827 0a3c 0BD0     		beq	.L676
2407:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16828              		.loc 1 2407 0
 16829 0a3e 7869     		ldr	r0, [r7, #20]
 16830 0a40 FFF7FEFF 		bl	strlen
 16831 0a44 0346     		mov	r3, r0
 16832 0a46 1A46     		mov	r2, r3
 16833 0a48 7B69     		ldr	r3, [r7, #20]
 16834 0a4a 1344     		add	r3, r3, r2
 16835 0a4c 954A     		ldr	r2, .L705+4
 16836 0a4e 1188     		ldrh	r1, [r2]	@ unaligned
 16837 0a50 9278     		ldrb	r2, [r2, #2]
 16838 0a52 1980     		strh	r1, [r3]	@ unaligned
 16839 0a54 9A70     		strb	r2, [r3, #2]
 16840              	.L676:
2403:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16841              		.loc 1 2403 0 discriminator 2
 16842 0a56 D7F89430 		ldr	r3, [r7, #148]
 16843 0a5a 0133     		adds	r3, r3, #1
 16844 0a5c C7F89430 		str	r3, [r7, #148]
 16845              	.L675:
2403:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16846              		.loc 1 2403 0 is_stmt 0 discriminator 1
 16847 0a60 D7F89430 		ldr	r3, [r7, #148]
 16848 0a64 022B     		cmp	r3, #2
 16849 0a66 C5DD     		ble	.L677
2408:..\src/command_processing.c ****             }
2409:..\src/command_processing.c ****         }
2410:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 16850              		.loc 1 2410 0 is_stmt 1
 16851 0a68 7869     		ldr	r0, [r7, #20]
 16852 0a6a FFF7FEFF 		bl	strlen
 16853 0a6e 0346     		mov	r3, r0
 16854 0a70 1A46     		mov	r2, r3
 16855 0a72 7B69     		ldr	r3, [r7, #20]
 16856 0a74 1344     		add	r3, r3, r2
 16857 0a76 8C4A     		ldr	r2, .L705+8
 16858 0a78 1188     		ldrh	r1, [r2]	@ unaligned
 16859 0a7a 9278     		ldrb	r2, [r2, #2]
 16860 0a7c 1980     		strh	r1, [r3]	@ unaligned
 16861 0a7e 9A70     		strb	r2, [r3, #2]
2411:..\src/command_processing.c **** 
2412:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 377


 16862              		.loc 1 2412 0
 16863 0a80 D7F88430 		ldr	r3, [r7, #132]
 16864 0a84 5B6C     		ldr	r3, [r3, #68]	@ float
 16865 0a86 1846     		mov	r0, r3
 16866 0a88 FFF7FEFF 		bl	__aeabi_f2d
 16867 0a8c C7E90201 		strd	r0, [r7, #8]
 16868 0a90 D7F88430 		ldr	r3, [r7, #132]
 16869 0a94 9B6C     		ldr	r3, [r3, #72]	@ float
 16870 0a96 1846     		mov	r0, r3
 16871 0a98 FFF7FEFF 		bl	__aeabi_f2d
 16872 0a9c 0446     		mov	r4, r0
 16873 0a9e 0D46     		mov	r5, r1
 16874 0aa0 D7F88430 		ldr	r3, [r7, #132]
 16875 0aa4 DB6C     		ldr	r3, [r3, #76]	@ float
 16876 0aa6 1846     		mov	r0, r3
 16877 0aa8 FFF7FEFF 		bl	__aeabi_f2d
 16878 0aac 8046     		mov	r8, r0
 16879 0aae 8946     		mov	r9, r1
 16880 0ab0 D7F88430 		ldr	r3, [r7, #132]
 16881 0ab4 1B6D     		ldr	r3, [r3, #80]	@ float
 16882 0ab6 1846     		mov	r0, r3
 16883 0ab8 FFF7FEFF 		bl	__aeabi_f2d
 16884 0abc 8246     		mov	r10, r0
 16885 0abe 8B46     		mov	fp, r1
 16886 0ac0 D7F88430 		ldr	r3, [r7, #132]
 16887 0ac4 5B6D     		ldr	r3, [r3, #84]	@ float
 16888 0ac6 1846     		mov	r0, r3
 16889 0ac8 FFF7FEFF 		bl	__aeabi_f2d
 16890 0acc C7E90001 		strd	r0, [r7]
 16891 0ad0 D7F88430 		ldr	r3, [r7, #132]
 16892 0ad4 9B6D     		ldr	r3, [r3, #88]	@ float
 16893 0ad6 1846     		mov	r0, r3
 16894 0ad8 FFF7FEFF 		bl	__aeabi_f2d
 16895 0adc 0246     		mov	r2, r0
 16896 0ade 0B46     		mov	r3, r1
 16897 0ae0 07F11C00 		add	r0, r7, #28
 16898 0ae4 CDE90823 		strd	r2, [sp, #32]
 16899 0ae8 D7E90012 		ldrd	r1, [r7]
 16900 0aec CDE90612 		strd	r1, [sp, #24]
 16901 0af0 CDE904AB 		strd	r10, [sp, #16]
 16902 0af4 CDE90289 		strd	r8, [sp, #8]
 16903 0af8 CDE90045 		strd	r4, [sp]
 16904 0afc D7E90223 		ldrd	r2, [r7, #8]
 16905 0b00 6A49     		ldr	r1, .L705+12
 16906 0b02 FFF7FEFF 		bl	sprintf
2413:..\src/command_processing.c **** 		strcat(info_string, str);
 16907              		.loc 1 2413 0
 16908 0b06 07F11C03 		add	r3, r7, #28
 16909 0b0a 1946     		mov	r1, r3
 16910 0b0c 7869     		ldr	r0, [r7, #20]
 16911 0b0e FFF7FEFF 		bl	strcat
2414:..\src/command_processing.c **** 
2415:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 16912              		.loc 1 2415 0
 16913 0b12 D7F88430 		ldr	r3, [r7, #132]
 16914 0b16 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16915 0b1a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 378


 16916 0b1c 07F11C03 		add	r3, r7, #28
 16917 0b20 6349     		ldr	r1, .L705+16
 16918 0b22 1846     		mov	r0, r3
 16919 0b24 FFF7FEFF 		bl	sprintf
2416:..\src/command_processing.c **** 		strcat(info_string, str);
 16920              		.loc 1 2416 0
 16921 0b28 07F11C03 		add	r3, r7, #28
 16922 0b2c 1946     		mov	r1, r3
 16923 0b2e 7869     		ldr	r0, [r7, #20]
 16924 0b30 FFF7FEFF 		bl	strcat
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 16925              		.loc 1 2418 0
 16926 0b34 D7F88430 		ldr	r3, [r7, #132]
 16927 0b38 596B     		ldr	r1, [r3, #52]
 16928 0b3a 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16929 0b3e D7F88C00 		ldr	r0, [r7, #140]
 16930 0b42 1346     		mov	r3, r2
 16931 0b44 5B00     		lsls	r3, r3, #1
 16932 0b46 1344     		add	r3, r3, r2
 16933 0b48 1B01     		lsls	r3, r3, #4
 16934 0b4a 0344     		add	r3, r3, r0
 16935 0b4c 03F29513 		addw	r3, r3, #405
 16936 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16937 0b52 41FA03F4 		asr	r4, r1, r3
 16938 0b56 D7F88430 		ldr	r3, [r7, #132]
 16939 0b5a 996B     		ldr	r1, [r3, #56]
 16940 0b5c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16941 0b60 D7F88C00 		ldr	r0, [r7, #140]
 16942 0b64 1346     		mov	r3, r2
 16943 0b66 5B00     		lsls	r3, r3, #1
 16944 0b68 1344     		add	r3, r3, r2
 16945 0b6a 1B01     		lsls	r3, r3, #4
 16946 0b6c 0344     		add	r3, r3, r0
 16947 0b6e 03F29513 		addw	r3, r3, #405
 16948 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16949 0b74 41FA03F3 		asr	r3, r1, r3
 16950 0b78 07F11C00 		add	r0, r7, #28
 16951 0b7c 2246     		mov	r2, r4
 16952 0b7e 4D49     		ldr	r1, .L705+20
 16953 0b80 FFF7FEFF 		bl	sprintf
2419:..\src/command_processing.c **** 		strcat(info_string, str);
 16954              		.loc 1 2419 0
 16955 0b84 07F11C03 		add	r3, r7, #28
 16956 0b88 1946     		mov	r1, r3
 16957 0b8a 7869     		ldr	r0, [r7, #20]
 16958 0b8c FFF7FEFF 		bl	strcat
2420:..\src/command_processing.c **** 
2421:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16959              		.loc 1 2421 0
 16960 0b90 D7F88430 		ldr	r3, [r7, #132]
 16961 0b94 B3F95C30 		ldrsh	r3, [r3, #92]
 16962 0b98 1A46     		mov	r2, r3
 16963 0b9a 07F11C03 		add	r3, r7, #28
 16964 0b9e 4649     		ldr	r1, .L705+24
 16965 0ba0 1846     		mov	r0, r3
 16966 0ba2 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 379


2422:..\src/command_processing.c **** 		strcat(info_string, str);
 16967              		.loc 1 2422 0
 16968 0ba6 07F11C03 		add	r3, r7, #28
 16969 0baa 1946     		mov	r1, r3
 16970 0bac 7869     		ldr	r0, [r7, #20]
 16971 0bae FFF7FEFF 		bl	strcat
2423:..\src/command_processing.c **** 
2424:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 16972              		.loc 1 2424 0
 16973 0bb2 D7F88430 		ldr	r3, [r7, #132]
 16974 0bb6 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16975 0bba 022B     		cmp	r3, #2
 16976 0bbc 12D0     		beq	.L678
2425:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16977              		.loc 1 2425 0 discriminator 1
 16978 0bbe D7F88430 		ldr	r3, [r7, #132]
 16979 0bc2 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2424:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16980              		.loc 1 2424 0 discriminator 1
 16981 0bc6 032B     		cmp	r3, #3
 16982 0bc8 0CD0     		beq	.L678
2426:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 16983              		.loc 1 2426 0
 16984 0bca D7F88430 		ldr	r3, [r7, #132]
 16985 0bce 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2425:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16986              		.loc 1 2425 0
 16987 0bd2 042B     		cmp	r3, #4
 16988 0bd4 06D0     		beq	.L678
2427:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 16989              		.loc 1 2427 0
 16990 0bd6 D7F88430 		ldr	r3, [r7, #132]
 16991 0bda 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2426:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 16992              		.loc 1 2426 0
 16993 0bde 052B     		cmp	r3, #5
 16994 0be0 40F0A380 		bne	.L679
 16995              	.L678:
2428:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 16996              		.loc 1 2428 0
 16997 0be4 D7F88C30 		ldr	r3, [r7, #140]
 16998 0be8 B3F8F031 		ldrh	r3, [r3, #496]
 16999 0bec 1A46     		mov	r2, r3
 17000 0bee D7F88C30 		ldr	r3, [r7, #140]
 17001 0bf2 B3F8F231 		ldrh	r3, [r3, #498]
 17002 0bf6 07F11C00 		add	r0, r7, #28
 17003 0bfa 3049     		ldr	r1, .L705+28
 17004 0bfc FFF7FEFF 		bl	sprintf
2429:..\src/command_processing.c **** 			strcat(info_string, str);
 17005              		.loc 1 2429 0
 17006 0c00 07F11C03 		add	r3, r7, #28
 17007 0c04 1946     		mov	r1, r3
 17008 0c06 7869     		ldr	r0, [r7, #20]
 17009 0c08 FFF7FEFF 		bl	strcat
2430:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17010              		.loc 1 2430 0
 17011 0c0c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 380


 17012 0c0e FFF7FEFF 		bl	strlen
 17013 0c12 0346     		mov	r3, r0
 17014 0c14 1A46     		mov	r2, r3
 17015 0c16 7B69     		ldr	r3, [r7, #20]
 17016 0c18 1344     		add	r3, r3, r2
 17017 0c1a 234A     		ldr	r2, .L705+8
 17018 0c1c 1188     		ldrh	r1, [r2]	@ unaligned
 17019 0c1e 9278     		ldrb	r2, [r2, #2]
 17020 0c20 1980     		strh	r1, [r3]	@ unaligned
 17021 0c22 9A70     		strb	r2, [r3, #2]
2431:..\src/command_processing.c **** 
2432:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 17022              		.loc 1 2432 0
 17023 0c24 D7F88C30 		ldr	r3, [r7, #140]
 17024 0c28 D3F8F421 		ldr	r2, [r3, #500]
 17025 0c2c D7F88C30 		ldr	r3, [r7, #140]
 17026 0c30 D3F8F831 		ldr	r3, [r3, #504]
 17027 0c34 07F11C00 		add	r0, r7, #28
 17028 0c38 2149     		ldr	r1, .L705+32
 17029 0c3a FFF7FEFF 		bl	sprintf
2433:..\src/command_processing.c **** 			strcat(info_string, str);
 17030              		.loc 1 2433 0
 17031 0c3e 07F11C03 		add	r3, r7, #28
 17032 0c42 1946     		mov	r1, r3
 17033 0c44 7869     		ldr	r0, [r7, #20]
 17034 0c46 FFF7FEFF 		bl	strcat
2434:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17035              		.loc 1 2434 0
 17036 0c4a 7869     		ldr	r0, [r7, #20]
 17037 0c4c FFF7FEFF 		bl	strlen
 17038 0c50 0346     		mov	r3, r0
 17039 0c52 1A46     		mov	r2, r3
 17040 0c54 7B69     		ldr	r3, [r7, #20]
 17041 0c56 1344     		add	r3, r3, r2
 17042 0c58 134A     		ldr	r2, .L705+8
 17043 0c5a 1188     		ldrh	r1, [r2]	@ unaligned
 17044 0c5c 9278     		ldrb	r2, [r2, #2]
 17045 0c5e 1980     		strh	r1, [r3]	@ unaligned
 17046 0c60 9A70     		strb	r2, [r3, #2]
2435:..\src/command_processing.c **** 
2436:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 17047              		.loc 1 2436 0
 17048 0c62 D7F88C30 		ldr	r3, [r7, #140]
 17049 0c66 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17050 0c6a 002B     		cmp	r3, #0
 17051 0c6c 2CD0     		beq	.L680
2437:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 17052              		.loc 1 2437 0
 17053 0c6e 7869     		ldr	r0, [r7, #20]
 17054 0c70 FFF7FEFF 		bl	strlen
 17055 0c74 0346     		mov	r3, r0
 17056 0c76 1A46     		mov	r2, r3
 17057 0c78 7B69     		ldr	r3, [r7, #20]
 17058 0c7a 1344     		add	r3, r3, r2
 17059 0c7c 114A     		ldr	r2, .L705+36
 17060 0c7e 1D46     		mov	r5, r3
 17061 0c80 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 381


 17062 0c82 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17063 0c84 2860     		str	r0, [r5]	@ unaligned
 17064 0c86 6960     		str	r1, [r5, #4]	@ unaligned
 17065 0c88 AA60     		str	r2, [r5, #8]	@ unaligned
 17066 0c8a EB60     		str	r3, [r5, #12]	@ unaligned
 17067 0c8c 03CC     		ldmia	r4!, {r0, r1}
 17068 0c8e 2861     		str	r0, [r5, #16]	@ unaligned
 17069 0c90 6961     		str	r1, [r5, #20]	@ unaligned
 17070 0c92 2388     		ldrh	r3, [r4]	@ unaligned
 17071 0c94 A278     		ldrb	r2, [r4, #2]
 17072 0c96 2B83     		strh	r3, [r5, #24]	@ unaligned
 17073 0c98 1346     		mov	r3, r2
 17074 0c9a AB76     		strb	r3, [r5, #26]
 17075 0c9c 28E0     		b	.L681
 17076              	.L706:
 17077 0c9e 00BF     		.align	2
 17078              	.L705:
 17079 0ca0 88120000 		.word	.LC187
 17080 0ca4 500F0000 		.word	.LC154
 17081 0ca8 840D0000 		.word	.LC125
 17082 0cac 9C170000 		.word	.LC237
 17083 0cb0 D8170000 		.word	.LC238
 17084 0cb4 F4170000 		.word	.LC239
 17085 0cb8 28130000 		.word	.LC193
 17086 0cbc 50130000 		.word	.LC195
 17087 0cc0 74130000 		.word	.LC196
 17088 0cc4 C4130000 		.word	.LC199
 17089              	.L680:
2438:..\src/command_processing.c **** 			else
2439:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 17090              		.loc 1 2439 0
 17091 0cc8 7869     		ldr	r0, [r7, #20]
 17092 0cca FFF7FEFF 		bl	strlen
 17093 0cce 0346     		mov	r3, r0
 17094 0cd0 1A46     		mov	r2, r3
 17095 0cd2 7B69     		ldr	r3, [r7, #20]
 17096 0cd4 1344     		add	r3, r3, r2
 17097 0cd6 CF4A     		ldr	r2, .L707
 17098 0cd8 1D46     		mov	r5, r3
 17099 0cda 1446     		mov	r4, r2
 17100 0cdc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17101 0cde 2860     		str	r0, [r5]	@ unaligned
 17102 0ce0 6960     		str	r1, [r5, #4]	@ unaligned
 17103 0ce2 AA60     		str	r2, [r5, #8]	@ unaligned
 17104 0ce4 EB60     		str	r3, [r5, #12]	@ unaligned
 17105 0ce6 03CC     		ldmia	r4!, {r0, r1}
 17106 0ce8 2861     		str	r0, [r5, #16]	@ unaligned
 17107 0cea 6961     		str	r1, [r5, #20]	@ unaligned
 17108 0cec 2388     		ldrh	r3, [r4]	@ unaligned
 17109 0cee 2B83     		strh	r3, [r5, #24]	@ unaligned
 17110              	.L681:
2440:..\src/command_processing.c **** 
2441:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 17111              		.loc 1 2441 0
 17112 0cf0 D7F88C30 		ldr	r3, [r7, #140]
 17113 0cf4 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17114 0cf8 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 382


 17115 0cfa 07F11C03 		add	r3, r7, #28
 17116 0cfe C649     		ldr	r1, .L707+4
 17117 0d00 1846     		mov	r0, r3
 17118 0d02 FFF7FEFF 		bl	sprintf
2442:..\src/command_processing.c **** 			strcat(info_string, str);
 17119              		.loc 1 2442 0
 17120 0d06 07F11C03 		add	r3, r7, #28
 17121 0d0a 1946     		mov	r1, r3
 17122 0d0c 7869     		ldr	r0, [r7, #20]
 17123 0d0e FFF7FEFF 		bl	strcat
2443:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17124              		.loc 1 2443 0
 17125 0d12 7869     		ldr	r0, [r7, #20]
 17126 0d14 FFF7FEFF 		bl	strlen
 17127 0d18 0346     		mov	r3, r0
 17128 0d1a 1A46     		mov	r2, r3
 17129 0d1c 7B69     		ldr	r3, [r7, #20]
 17130 0d1e 1344     		add	r3, r3, r2
 17131 0d20 BE4A     		ldr	r2, .L707+8
 17132 0d22 1188     		ldrh	r1, [r2]	@ unaligned
 17133 0d24 9278     		ldrb	r2, [r2, #2]
 17134 0d26 1980     		strh	r1, [r3]	@ unaligned
 17135 0d28 9A70     		strb	r2, [r3, #2]
 17136              	.L679:
 17137              	.LBE20:
2280:..\src/command_processing.c ****             
 17138              		.loc 1 2280 0 discriminator 2
 17139 0d2a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17140 0d2e 0133     		adds	r3, r3, #1
 17141 0d30 87F89330 		strb	r3, [r7, #147]
 17142              	.L641:
2280:..\src/command_processing.c ****             
 17143              		.loc 1 2280 0 is_stmt 0 discriminator 1
 17144 0d34 D7F88C30 		ldr	r3, [r7, #140]
 17145 0d38 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17146 0d3c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17147 0d40 9A42     		cmp	r2, r3
 17148 0d42 7FF6E6A9 		bls	.L682
 17149              	.LBE19:
2444:..\src/command_processing.c **** 		}
2445:..\src/command_processing.c **** 	}
2446:..\src/command_processing.c **** 	 
2447:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 17150              		.loc 1 2447 0 is_stmt 1
 17151 0d46 D7F88C30 		ldr	r3, [r7, #140]
 17152 0d4a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17153 0d4e 002B     		cmp	r3, #0
 17154 0d50 63D0     		beq	.L683
2448:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17155              		.loc 1 2448 0
 17156 0d52 D7F88C30 		ldr	r3, [r7, #140]
 17157 0d56 D3F8A422 		ldr	r2, [r3, #676]
 17158 0d5a 07F11C03 		add	r3, r7, #28
 17159 0d5e B049     		ldr	r1, .L707+12
 17160 0d60 1846     		mov	r0, r3
 17161 0d62 FFF7FEFF 		bl	sprintf
2449:..\src/command_processing.c ****         strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 383


 17162              		.loc 1 2449 0
 17163 0d66 07F11C03 		add	r3, r7, #28
 17164 0d6a 1946     		mov	r1, r3
 17165 0d6c 7869     		ldr	r0, [r7, #20]
 17166 0d6e FFF7FEFF 		bl	strcat
2450:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17167              		.loc 1 2450 0
 17168 0d72 7869     		ldr	r0, [r7, #20]
 17169 0d74 FFF7FEFF 		bl	strlen
 17170 0d78 0346     		mov	r3, r0
 17171 0d7a 1A46     		mov	r2, r3
 17172 0d7c 7B69     		ldr	r3, [r7, #20]
 17173 0d7e 1344     		add	r3, r3, r2
 17174 0d80 A64A     		ldr	r2, .L707+8
 17175 0d82 1188     		ldrh	r1, [r2]	@ unaligned
 17176 0d84 9278     		ldrb	r2, [r2, #2]
 17177 0d86 1980     		strh	r1, [r3]	@ unaligned
 17178 0d88 9A70     		strb	r2, [r3, #2]
2451:..\src/command_processing.c ****         
2452:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17179              		.loc 1 2452 0
 17180 0d8a D7F88C30 		ldr	r3, [r7, #140]
 17181 0d8e D3F8A822 		ldr	r2, [r3, #680]
 17182 0d92 07F11C03 		add	r3, r7, #28
 17183 0d96 A349     		ldr	r1, .L707+16
 17184 0d98 1846     		mov	r0, r3
 17185 0d9a FFF7FEFF 		bl	sprintf
2453:..\src/command_processing.c ****         strcat(info_string, str);
 17186              		.loc 1 2453 0
 17187 0d9e 07F11C03 		add	r3, r7, #28
 17188 0da2 1946     		mov	r1, r3
 17189 0da4 7869     		ldr	r0, [r7, #20]
 17190 0da6 FFF7FEFF 		bl	strcat
2454:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17191              		.loc 1 2454 0
 17192 0daa 7869     		ldr	r0, [r7, #20]
 17193 0dac FFF7FEFF 		bl	strlen
 17194 0db0 0346     		mov	r3, r0
 17195 0db2 1A46     		mov	r2, r3
 17196 0db4 7B69     		ldr	r3, [r7, #20]
 17197 0db6 1344     		add	r3, r3, r2
 17198 0db8 984A     		ldr	r2, .L707+8
 17199 0dba 1188     		ldrh	r1, [r2]	@ unaligned
 17200 0dbc 9278     		ldrb	r2, [r2, #2]
 17201 0dbe 1980     		strh	r1, [r3]	@ unaligned
 17202 0dc0 9A70     		strb	r2, [r3, #2]
2455:..\src/command_processing.c ****         
2456:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 17203              		.loc 1 2456 0
 17204 0dc2 D7F88C30 		ldr	r3, [r7, #140]
 17205 0dc6 D3F8A022 		ldr	r2, [r3, #672]
 17206 0dca D7F88C30 		ldr	r3, [r7, #140]
 17207 0dce 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17208 0dd2 1846     		mov	r0, r3
 17209 0dd4 D7F88C10 		ldr	r1, [r7, #140]
 17210 0dd8 0346     		mov	r3, r0
 17211 0dda 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 384


 17212 0ddc 0344     		add	r3, r3, r0
 17213 0dde 1B01     		lsls	r3, r3, #4
 17214 0de0 0B44     		add	r3, r3, r1
 17215 0de2 03F29513 		addw	r3, r3, #405
 17216 0de6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17217 0de8 1A41     		asrs	r2, r2, r3
 17218 0dea 07F11C03 		add	r3, r7, #28
 17219 0dee 8E49     		ldr	r1, .L707+20
 17220 0df0 1846     		mov	r0, r3
 17221 0df2 FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c ****         strcat(info_string, str);
 17222              		.loc 1 2457 0
 17223 0df6 07F11C03 		add	r3, r7, #28
 17224 0dfa 1946     		mov	r1, r3
 17225 0dfc 7869     		ldr	r0, [r7, #20]
 17226 0dfe FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 17227              		.loc 1 2458 0
 17228 0e02 7869     		ldr	r0, [r7, #20]
 17229 0e04 FFF7FEFF 		bl	strlen
 17230 0e08 0346     		mov	r3, r0
 17231 0e0a 1A46     		mov	r2, r3
 17232 0e0c 7B69     		ldr	r3, [r7, #20]
 17233 0e0e 1344     		add	r3, r3, r2
 17234 0e10 824A     		ldr	r2, .L707+8
 17235 0e12 1188     		ldrh	r1, [r2]	@ unaligned
 17236 0e14 9278     		ldrb	r2, [r2, #2]
 17237 0e16 1980     		strh	r1, [r3]	@ unaligned
 17238 0e18 9A70     		strb	r2, [r3, #2]
 17239              	.L683:
2459:..\src/command_processing.c ****     }
2460:..\src/command_processing.c **** 	
2461:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 17240              		.loc 1 2461 0
 17241 0e1a D7F88C30 		ldr	r3, [r7, #140]
 17242 0e1e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17243 0e22 002B     		cmp	r3, #0
 17244 0e24 00F0CC81 		beq	.L698
2462:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17245              		.loc 1 2462 0
 17246 0e28 804B     		ldr	r3, .L707+24
 17247 0e2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17248 0e2c 1A46     		mov	r2, r3
 17249 0e2e 07F11C03 		add	r3, r7, #28
 17250 0e32 7F49     		ldr	r1, .L707+28
 17251 0e34 1846     		mov	r0, r3
 17252 0e36 FFF7FEFF 		bl	sprintf
2463:..\src/command_processing.c **** 		strcat(info_string, str);
 17253              		.loc 1 2463 0
 17254 0e3a 07F11C03 		add	r3, r7, #28
 17255 0e3e 1946     		mov	r1, r3
 17256 0e40 7869     		ldr	r0, [r7, #20]
 17257 0e42 FFF7FEFF 		bl	strcat
2464:..\src/command_processing.c **** 		
2465:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17258              		.loc 1 2465 0
 17259 0e46 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 385


 17260 0e48 FFF7FEFF 		bl	strlen
 17261 0e4c 0346     		mov	r3, r0
 17262 0e4e 1A46     		mov	r2, r3
 17263 0e50 7B69     		ldr	r3, [r7, #20]
 17264 0e52 1344     		add	r3, r3, r2
 17265 0e54 714A     		ldr	r2, .L707+8
 17266 0e56 1188     		ldrh	r1, [r2]	@ unaligned
 17267 0e58 9278     		ldrb	r2, [r2, #2]
 17268 0e5a 1980     		strh	r1, [r3]	@ unaligned
 17269 0e5c 9A70     		strb	r2, [r3, #2]
2466:..\src/command_processing.c **** 		
2467:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 17270              		.loc 1 2467 0
 17271 0e5e 7869     		ldr	r0, [r7, #20]
 17272 0e60 FFF7FEFF 		bl	strlen
 17273 0e64 0346     		mov	r3, r0
 17274 0e66 1A46     		mov	r2, r3
 17275 0e68 7B69     		ldr	r3, [r7, #20]
 17276 0e6a 1344     		add	r3, r3, r2
 17277 0e6c 714A     		ldr	r2, .L707+32
 17278 0e6e 1D46     		mov	r5, r3
 17279 0e70 1446     		mov	r4, r2
 17280 0e72 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17281 0e74 2860     		str	r0, [r5]	@ unaligned
 17282 0e76 6960     		str	r1, [r5, #4]	@ unaligned
 17283 0e78 AA60     		str	r2, [r5, #8]	@ unaligned
 17284 0e7a EB60     		str	r3, [r5, #12]	@ unaligned
 17285 0e7c 2068     		ldr	r0, [r4]	@ unaligned
 17286 0e7e 2861     		str	r0, [r5, #16]	@ unaligned
 17287 0e80 2379     		ldrb	r3, [r4, #4]
 17288 0e82 2B75     		strb	r3, [r5, #20]
2468:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 17289              		.loc 1 2468 0
 17290 0e84 0023     		movs	r3, #0
 17291 0e86 C7F89430 		str	r3, [r7, #148]
 17292 0e8a 85E1     		b	.L685
 17293              	.L696:
2469:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17294              		.loc 1 2469 0
 17295 0e8c 6A4A     		ldr	r2, .L707+36
 17296 0e8e D7F89430 		ldr	r3, [r7, #148]
 17297 0e92 1344     		add	r3, r3, r2
 17298 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17299 0e96 07F11C00 		add	r0, r7, #28
 17300 0e9a D7F89420 		ldr	r2, [r7, #148]
 17301 0e9e 6749     		ldr	r1, .L707+40
 17302 0ea0 FFF7FEFF 		bl	sprintf
2470:..\src/command_processing.c **** 			strcat(info_string, str);
 17303              		.loc 1 2470 0
 17304 0ea4 07F11C03 		add	r3, r7, #28
 17305 0ea8 1946     		mov	r1, r3
 17306 0eaa 7869     		ldr	r0, [r7, #20]
 17307 0eac FFF7FEFF 		bl	strcat
2471:..\src/command_processing.c **** 			
2472:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 17308              		.loc 1 2472 0
 17309 0eb0 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 386


 17310 0eb4 624A     		ldr	r2, .L707+44
 17311 0eb6 1C46     		mov	r4, r3
 17312 0eb8 1546     		mov	r5, r2
 17313 0eba 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17314 0ebc 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17315 0ebe 2B68     		ldr	r3, [r5]
 17316 0ec0 2380     		strh	r3, [r4]	@ movhi
2473:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17317              		.loc 1 2473 0
 17318 0ec2 5D4A     		ldr	r2, .L707+36
 17319 0ec4 D7F89430 		ldr	r3, [r7, #148]
 17320 0ec8 1344     		add	r3, r3, r2
 17321 0eca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17322 0ecc 1946     		mov	r1, r3
 17323 0ece D7F88C20 		ldr	r2, [r7, #140]
 17324 0ed2 0B46     		mov	r3, r1
 17325 0ed4 9B00     		lsls	r3, r3, #2
 17326 0ed6 0B44     		add	r3, r3, r1
 17327 0ed8 1344     		add	r3, r3, r2
 17328 0eda 03F20223 		addw	r3, r3, #514
 17329 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17330 0ee0 002B     		cmp	r3, #0
 17331 0ee2 0FD0     		beq	.L686
2474:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17332              		.loc 1 2474 0
 17333 0ee4 07F11C03 		add	r3, r7, #28
 17334 0ee8 1846     		mov	r0, r3
 17335 0eea FFF7FEFF 		bl	strlen
 17336 0eee 0346     		mov	r3, r0
 17337 0ef0 1A46     		mov	r2, r3
 17338 0ef2 07F11C03 		add	r3, r7, #28
 17339 0ef6 1344     		add	r3, r3, r2
 17340 0ef8 524A     		ldr	r2, .L707+48
 17341 0efa 1068     		ldr	r0, [r2]	@ unaligned
 17342 0efc 1860     		str	r0, [r3]	@ unaligned
 17343 0efe 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17344 0f00 9A80     		strh	r2, [r3, #4]	@ unaligned
 17345 0f02 0EE0     		b	.L687
 17346              	.L686:
2475:..\src/command_processing.c **** 			else
2476:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17347              		.loc 1 2476 0
 17348 0f04 07F11C03 		add	r3, r7, #28
 17349 0f08 1846     		mov	r0, r3
 17350 0f0a FFF7FEFF 		bl	strlen
 17351 0f0e 0346     		mov	r3, r0
 17352 0f10 1A46     		mov	r2, r3
 17353 0f12 07F11C03 		add	r3, r7, #28
 17354 0f16 1344     		add	r3, r3, r2
 17355 0f18 4B4A     		ldr	r2, .L707+52
 17356 0f1a 1068     		ldr	r0, [r2]	@ unaligned
 17357 0f1c 1860     		str	r0, [r3]	@ unaligned
 17358 0f1e 1279     		ldrb	r2, [r2, #4]
 17359 0f20 1A71     		strb	r2, [r3, #4]
 17360              	.L687:
2477:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 17361              		.loc 1 2477 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 387


 17362 0f22 07F11C03 		add	r3, r7, #28
 17363 0f26 1846     		mov	r0, r3
 17364 0f28 FFF7FEFF 		bl	strlen
 17365 0f2c 0346     		mov	r3, r0
 17366 0f2e 1A46     		mov	r2, r3
 17367 0f30 07F11C03 		add	r3, r7, #28
 17368 0f34 1344     		add	r3, r3, r2
 17369 0f36 454A     		ldr	r2, .L707+56
 17370 0f38 1C46     		mov	r4, r3
 17371 0f3a 1346     		mov	r3, r2
 17372 0f3c 07CB     		ldmia	r3!, {r0, r1, r2}
 17373 0f3e 2060     		str	r0, [r4]	@ unaligned
 17374 0f40 6160     		str	r1, [r4, #4]	@ unaligned
 17375 0f42 A260     		str	r2, [r4, #8]	@ unaligned
 17376 0f44 1B88     		ldrh	r3, [r3]	@ unaligned
 17377 0f46 A381     		strh	r3, [r4, #12]	@ unaligned
2478:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17378              		.loc 1 2478 0
 17379 0f48 3B4A     		ldr	r2, .L707+36
 17380 0f4a D7F89430 		ldr	r3, [r7, #148]
 17381 0f4e 1344     		add	r3, r3, r2
 17382 0f50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17383 0f52 1946     		mov	r1, r3
 17384 0f54 D7F88C20 		ldr	r2, [r7, #140]
 17385 0f58 0B46     		mov	r3, r1
 17386 0f5a 9B00     		lsls	r3, r3, #2
 17387 0f5c 0B44     		add	r3, r3, r1
 17388 0f5e 1344     		add	r3, r3, r2
 17389 0f60 03F20323 		addw	r3, r3, #515
 17390 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17391 0f66 002B     		cmp	r3, #0
 17392 0f68 0FD0     		beq	.L688
2479:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17393              		.loc 1 2479 0
 17394 0f6a 07F11C03 		add	r3, r7, #28
 17395 0f6e 1846     		mov	r0, r3
 17396 0f70 FFF7FEFF 		bl	strlen
 17397 0f74 0346     		mov	r3, r0
 17398 0f76 1A46     		mov	r2, r3
 17399 0f78 07F11C03 		add	r3, r7, #28
 17400 0f7c 1344     		add	r3, r3, r2
 17401 0f7e 314A     		ldr	r2, .L707+48
 17402 0f80 1068     		ldr	r0, [r2]	@ unaligned
 17403 0f82 1860     		str	r0, [r3]	@ unaligned
 17404 0f84 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17405 0f86 9A80     		strh	r2, [r3, #4]	@ unaligned
 17406 0f88 0EE0     		b	.L689
 17407              	.L688:
2480:..\src/command_processing.c **** 			else
2481:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17408              		.loc 1 2481 0
 17409 0f8a 07F11C03 		add	r3, r7, #28
 17410 0f8e 1846     		mov	r0, r3
 17411 0f90 FFF7FEFF 		bl	strlen
 17412 0f94 0346     		mov	r3, r0
 17413 0f96 1A46     		mov	r2, r3
 17414 0f98 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 388


 17415 0f9c 1344     		add	r3, r3, r2
 17416 0f9e 2A4A     		ldr	r2, .L707+52
 17417 0fa0 1068     		ldr	r0, [r2]	@ unaligned
 17418 0fa2 1860     		str	r0, [r3]	@ unaligned
 17419 0fa4 1279     		ldrb	r2, [r2, #4]
 17420 0fa6 1A71     		strb	r2, [r3, #4]
 17421              	.L689:
2482:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 17422              		.loc 1 2482 0
 17423 0fa8 07F11C03 		add	r3, r7, #28
 17424 0fac 1846     		mov	r0, r3
 17425 0fae FFF7FEFF 		bl	strlen
 17426 0fb2 0346     		mov	r3, r0
 17427 0fb4 1A46     		mov	r2, r3
 17428 0fb6 07F11C03 		add	r3, r7, #28
 17429 0fba 1344     		add	r3, r3, r2
 17430 0fbc 244A     		ldr	r2, .L707+60
 17431 0fbe 1D46     		mov	r5, r3
 17432 0fc0 1446     		mov	r4, r2
 17433 0fc2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17434 0fc4 2860     		str	r0, [r5]	@ unaligned
 17435 0fc6 6960     		str	r1, [r5, #4]	@ unaligned
 17436 0fc8 AA60     		str	r2, [r5, #8]	@ unaligned
 17437 0fca EB60     		str	r3, [r5, #12]	@ unaligned
 17438 0fcc 2378     		ldrb	r3, [r4]
 17439 0fce 2B74     		strb	r3, [r5, #16]
2483:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17440              		.loc 1 2483 0
 17441 0fd0 194A     		ldr	r2, .L707+36
 17442 0fd2 D7F89430 		ldr	r3, [r7, #148]
 17443 0fd6 1344     		add	r3, r3, r2
 17444 0fd8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17445 0fda 1946     		mov	r1, r3
 17446 0fdc D7F88C20 		ldr	r2, [r7, #140]
 17447 0fe0 0B46     		mov	r3, r1
 17448 0fe2 9B00     		lsls	r3, r3, #2
 17449 0fe4 0B44     		add	r3, r3, r1
 17450 0fe6 1344     		add	r3, r3, r2
 17451 0fe8 03F50173 		add	r3, r3, #516
 17452 0fec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17453 0fee 002B     		cmp	r3, #0
 17454 0ff0 30D0     		beq	.L690
2484:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17455              		.loc 1 2484 0
 17456 0ff2 07F11C03 		add	r3, r7, #28
 17457 0ff6 1846     		mov	r0, r3
 17458 0ff8 FFF7FEFF 		bl	strlen
 17459 0ffc 0346     		mov	r3, r0
 17460 0ffe 1A46     		mov	r2, r3
 17461 1000 07F11C03 		add	r3, r7, #28
 17462 1004 1344     		add	r3, r3, r2
 17463 1006 0F4A     		ldr	r2, .L707+48
 17464 1008 1068     		ldr	r0, [r2]	@ unaligned
 17465 100a 1860     		str	r0, [r3]	@ unaligned
 17466 100c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17467 100e 9A80     		strh	r2, [r3, #4]	@ unaligned
 17468 1010 2FE0     		b	.L691
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 389


 17469              	.L708:
 17470 1012 00BF     		.align	2
 17471              	.L707:
 17472 1014 E0130000 		.word	.LC200
 17473 1018 FC130000 		.word	.LC201
 17474 101c 840D0000 		.word	.LC125
 17475 1020 54140000 		.word	.LC205
 17476 1024 70140000 		.word	.LC206
 17477 1028 98140000 		.word	.LC207
 17478 102c 00000000 		.word	N_IMU_Connected
 17479 1030 AC140000 		.word	.LC208
 17480 1034 C0140000 		.word	.LC209
 17481 1038 00000000 		.word	IMU_connected
 17482 103c D8140000 		.word	.LC210
 17483 1040 EC140000 		.word	.LC211
 17484 1044 DC0E0000 		.word	.LC145
 17485 1048 E40E0000 		.word	.LC146
 17486 104c 00150000 		.word	.LC212
 17487 1050 10150000 		.word	.LC213
 17488              	.L690:
2485:..\src/command_processing.c **** 			else
2486:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17489              		.loc 1 2486 0
 17490 1054 07F11C03 		add	r3, r7, #28
 17491 1058 1846     		mov	r0, r3
 17492 105a FFF7FEFF 		bl	strlen
 17493 105e 0346     		mov	r3, r0
 17494 1060 1A46     		mov	r2, r3
 17495 1062 07F11C03 		add	r3, r7, #28
 17496 1066 1344     		add	r3, r3, r2
 17497 1068 584A     		ldr	r2, .L709
 17498 106a 1068     		ldr	r0, [r2]	@ unaligned
 17499 106c 1860     		str	r0, [r3]	@ unaligned
 17500 106e 1279     		ldrb	r2, [r2, #4]
 17501 1070 1A71     		strb	r2, [r3, #4]
 17502              	.L691:
2487:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 17503              		.loc 1 2487 0
 17504 1072 07F11C03 		add	r3, r7, #28
 17505 1076 1846     		mov	r0, r3
 17506 1078 FFF7FEFF 		bl	strlen
 17507 107c 0346     		mov	r3, r0
 17508 107e 1A46     		mov	r2, r3
 17509 1080 07F11C03 		add	r3, r7, #28
 17510 1084 1344     		add	r3, r3, r2
 17511 1086 524A     		ldr	r2, .L709+4
 17512 1088 1C46     		mov	r4, r3
 17513 108a 1346     		mov	r3, r2
 17514 108c 07CB     		ldmia	r3!, {r0, r1, r2}
 17515 108e 2060     		str	r0, [r4]	@ unaligned
 17516 1090 6160     		str	r1, [r4, #4]	@ unaligned
 17517 1092 A260     		str	r2, [r4, #8]	@ unaligned
 17518 1094 1B88     		ldrh	r3, [r3]	@ unaligned
 17519 1096 A381     		strh	r3, [r4, #12]	@ unaligned
2488:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17520              		.loc 1 2488 0
 17521 1098 4E4A     		ldr	r2, .L709+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 390


 17522 109a D7F89430 		ldr	r3, [r7, #148]
 17523 109e 1344     		add	r3, r3, r2
 17524 10a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17525 10a2 1946     		mov	r1, r3
 17526 10a4 D7F88C20 		ldr	r2, [r7, #140]
 17527 10a8 0B46     		mov	r3, r1
 17528 10aa 9B00     		lsls	r3, r3, #2
 17529 10ac 0B44     		add	r3, r3, r1
 17530 10ae 1344     		add	r3, r3, r2
 17531 10b0 03F20523 		addw	r3, r3, #517
 17532 10b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17533 10b6 002B     		cmp	r3, #0
 17534 10b8 0FD0     		beq	.L692
2489:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17535              		.loc 1 2489 0
 17536 10ba 07F11C03 		add	r3, r7, #28
 17537 10be 1846     		mov	r0, r3
 17538 10c0 FFF7FEFF 		bl	strlen
 17539 10c4 0346     		mov	r3, r0
 17540 10c6 1A46     		mov	r2, r3
 17541 10c8 07F11C03 		add	r3, r7, #28
 17542 10cc 1344     		add	r3, r3, r2
 17543 10ce 424A     		ldr	r2, .L709+12
 17544 10d0 1068     		ldr	r0, [r2]	@ unaligned
 17545 10d2 1860     		str	r0, [r3]	@ unaligned
 17546 10d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17547 10d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 17548 10d8 0EE0     		b	.L693
 17549              	.L692:
2490:..\src/command_processing.c **** 			else
2491:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17550              		.loc 1 2491 0
 17551 10da 07F11C03 		add	r3, r7, #28
 17552 10de 1846     		mov	r0, r3
 17553 10e0 FFF7FEFF 		bl	strlen
 17554 10e4 0346     		mov	r3, r0
 17555 10e6 1A46     		mov	r2, r3
 17556 10e8 07F11C03 		add	r3, r7, #28
 17557 10ec 1344     		add	r3, r3, r2
 17558 10ee 374A     		ldr	r2, .L709
 17559 10f0 1068     		ldr	r0, [r2]	@ unaligned
 17560 10f2 1860     		str	r0, [r3]	@ unaligned
 17561 10f4 1279     		ldrb	r2, [r2, #4]
 17562 10f6 1A71     		strb	r2, [r3, #4]
 17563              	.L693:
2492:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 17564              		.loc 1 2492 0
 17565 10f8 07F11C03 		add	r3, r7, #28
 17566 10fc 1846     		mov	r0, r3
 17567 10fe FFF7FEFF 		bl	strlen
 17568 1102 0346     		mov	r3, r0
 17569 1104 1A46     		mov	r2, r3
 17570 1106 07F11C03 		add	r3, r7, #28
 17571 110a 1344     		add	r3, r3, r2
 17572 110c 334A     		ldr	r2, .L709+16
 17573 110e 1C46     		mov	r4, r3
 17574 1110 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 391


 17575 1112 07CB     		ldmia	r3!, {r0, r1, r2}
 17576 1114 2060     		str	r0, [r4]	@ unaligned
 17577 1116 6160     		str	r1, [r4, #4]	@ unaligned
 17578 1118 A260     		str	r2, [r4, #8]	@ unaligned
 17579 111a 1A88     		ldrh	r2, [r3]	@ unaligned
 17580 111c 9B78     		ldrb	r3, [r3, #2]
 17581 111e A281     		strh	r2, [r4, #12]	@ unaligned
 17582 1120 A373     		strb	r3, [r4, #14]
2493:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17583              		.loc 1 2493 0
 17584 1122 2C4A     		ldr	r2, .L709+8
 17585 1124 D7F89430 		ldr	r3, [r7, #148]
 17586 1128 1344     		add	r3, r3, r2
 17587 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17588 112c 1946     		mov	r1, r3
 17589 112e D7F88C20 		ldr	r2, [r7, #140]
 17590 1132 0B46     		mov	r3, r1
 17591 1134 9B00     		lsls	r3, r3, #2
 17592 1136 0B44     		add	r3, r3, r1
 17593 1138 1344     		add	r3, r3, r2
 17594 113a 03F20623 		addw	r3, r3, #518
 17595 113e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17596 1140 002B     		cmp	r3, #0
 17597 1142 0FD0     		beq	.L694
2494:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17598              		.loc 1 2494 0
 17599 1144 07F11C03 		add	r3, r7, #28
 17600 1148 1846     		mov	r0, r3
 17601 114a FFF7FEFF 		bl	strlen
 17602 114e 0346     		mov	r3, r0
 17603 1150 1A46     		mov	r2, r3
 17604 1152 07F11C03 		add	r3, r7, #28
 17605 1156 1344     		add	r3, r3, r2
 17606 1158 1F4A     		ldr	r2, .L709+12
 17607 115a 1068     		ldr	r0, [r2]	@ unaligned
 17608 115c 1860     		str	r0, [r3]	@ unaligned
 17609 115e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17610 1160 9A80     		strh	r2, [r3, #4]	@ unaligned
 17611 1162 0EE0     		b	.L695
 17612              	.L694:
2495:..\src/command_processing.c **** 			else
2496:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17613              		.loc 1 2496 0
 17614 1164 07F11C03 		add	r3, r7, #28
 17615 1168 1846     		mov	r0, r3
 17616 116a FFF7FEFF 		bl	strlen
 17617 116e 0346     		mov	r3, r0
 17618 1170 1A46     		mov	r2, r3
 17619 1172 07F11C03 		add	r3, r7, #28
 17620 1176 1344     		add	r3, r3, r2
 17621 1178 144A     		ldr	r2, .L709
 17622 117a 1068     		ldr	r0, [r2]	@ unaligned
 17623 117c 1860     		str	r0, [r3]	@ unaligned
 17624 117e 1279     		ldrb	r2, [r2, #4]
 17625 1180 1A71     		strb	r2, [r3, #4]
 17626              	.L695:
2497:..\src/command_processing.c **** 				 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 392


2498:..\src/command_processing.c **** 			strcat(info_string, str);
 17627              		.loc 1 2498 0 discriminator 2
 17628 1182 07F11C03 		add	r3, r7, #28
 17629 1186 1946     		mov	r1, r3
 17630 1188 7869     		ldr	r0, [r7, #20]
 17631 118a FFF7FEFF 		bl	strcat
2468:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17632              		.loc 1 2468 0 discriminator 2
 17633 118e D7F89430 		ldr	r3, [r7, #148]
 17634 1192 0133     		adds	r3, r3, #1
 17635 1194 C7F89430 		str	r3, [r7, #148]
 17636              	.L685:
2468:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17637              		.loc 1 2468 0 is_stmt 0 discriminator 1
 17638 1198 114B     		ldr	r3, .L709+20
 17639 119a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17640 119c 1A46     		mov	r2, r3
 17641 119e D7F89430 		ldr	r3, [r7, #148]
 17642 11a2 9A42     		cmp	r2, r3
 17643 11a4 3FF772AE 		bgt	.L696
2499:..\src/command_processing.c **** 		}       
2500:..\src/command_processing.c **** 		
2501:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17644              		.loc 1 2501 0 is_stmt 1
 17645 11a8 7869     		ldr	r0, [r7, #20]
 17646 11aa FFF7FEFF 		bl	strlen
 17647 11ae 0346     		mov	r3, r0
 17648 11b0 1A46     		mov	r2, r3
 17649 11b2 7B69     		ldr	r3, [r7, #20]
 17650 11b4 1344     		add	r3, r3, r2
 17651 11b6 0B4A     		ldr	r2, .L709+24
 17652 11b8 1188     		ldrh	r1, [r2]	@ unaligned
 17653 11ba 9278     		ldrb	r2, [r2, #2]
 17654 11bc 1980     		strh	r1, [r3]	@ unaligned
 17655 11be 9A70     		strb	r2, [r3, #2]
 17656              	.L698:
2502:..\src/command_processing.c **** 	}
2503:..\src/command_processing.c **** }
 17657              		.loc 1 2503 0
 17658 11c0 00BF     		nop
 17659 11c2 9C37     		adds	r7, r7, #156
 17660              		.cfi_def_cfa_offset 36
 17661 11c4 BD46     		mov	sp, r7
 17662              		.cfi_def_cfa_register 13
 17663              		@ sp needed
 17664 11c6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17665              	.L710:
 17666 11ca 00BF     		.align	2
 17667              	.L709:
 17668 11cc E40E0000 		.word	.LC146
 17669 11d0 24150000 		.word	.LC214
 17670 11d4 00000000 		.word	IMU_connected
 17671 11d8 DC0E0000 		.word	.LC145
 17672 11dc 34150000 		.word	.LC215
 17673 11e0 00000000 		.word	N_IMU_Connected
 17674 11e4 840D0000 		.word	.LC125
 17675              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 393


 17676              	.LFE74:
 17677              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 17678              		.section	.rodata
 17679 181e 0000     		.align	2
 17680              	.LC240:
 17681 1820 486F7572 		.ascii	"Hour,Min,Sec,\000"
 17681      2C4D696E 
 17681      2C536563 
 17681      2C00
 17682 182e 0000     		.align	2
 17683              	.LC241:
 17684 1830 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 17684      25645F50 
 17684      6F732C00 
 17685              		.align	2
 17686              	.LC242:
 17687 183c 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 17687      25645F43 
 17687      7572722C 
 17687      00
 17688 1849 000000   		.align	2
 17689              	.LC243:
 17690 184c 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 17690      315F6163 
 17690      742C454D 
 17690      475F325F 
 17690      6163742C 
 17691 187f 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 17691      5F74696D 
 17691      652C546F 
 17691      74616C5F 
 17691      72657374 
 17692              		.section	.text.prepare_SD_legend,"ax",%progbits
 17693              		.align	2
 17694              		.global	prepare_SD_legend
 17695              		.thumb
 17696              		.thumb_func
 17697              		.type	prepare_SD_legend, %function
 17698              	prepare_SD_legend:
 17699              	.LFB75:
2504:..\src/command_processing.c **** 
2505:..\src/command_processing.c **** 
2506:..\src/command_processing.c **** //==============================================================================
2507:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2508:..\src/command_processing.c **** //==============================================================================
2509:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2510:..\src/command_processing.c **** {
 17700              		.loc 1 2510 0
 17701              		.cfi_startproc
 17702              		@ args = 0, pretend = 0, frame = 112
 17703              		@ frame_needed = 1, uses_anonymous_args = 0
 17704 0000 90B5     		push	{r4, r7, lr}
 17705              		.cfi_def_cfa_offset 12
 17706              		.cfi_offset 4, -12
 17707              		.cfi_offset 7, -8
 17708              		.cfi_offset 14, -4
 17709 0002 9DB0     		sub	sp, sp, #116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 394


 17710              		.cfi_def_cfa_offset 128
 17711 0004 00AF     		add	r7, sp, #0
 17712              		.cfi_def_cfa_register 7
 17713 0006 7860     		str	r0, [r7, #4]
2511:..\src/command_processing.c ****     char str[100];  
2512:..\src/command_processing.c ****     int i;
2513:..\src/command_processing.c ****         
2514:..\src/command_processing.c ****     // Legend
2515:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 17714              		.loc 1 2515 0
 17715 0008 7B68     		ldr	r3, [r7, #4]
 17716 000a 2A4A     		ldr	r2, .L716
 17717 000c 1C46     		mov	r4, r3
 17718 000e 1346     		mov	r3, r2
 17719 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 17720 0012 2060     		str	r0, [r4]	@ unaligned
 17721 0014 6160     		str	r1, [r4, #4]	@ unaligned
 17722 0016 A260     		str	r2, [r4, #8]	@ unaligned
 17723 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 17724 001a A381     		strh	r3, [r4, #12]	@ unaligned
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17725              		.loc 1 2516 0
 17726 001c 0123     		movs	r3, #1
 17727 001e FB66     		str	r3, [r7, #108]
 17728 0020 0FE0     		b	.L712
 17729              	.L713:
2517:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 17730              		.loc 1 2517 0 discriminator 3
 17731 0022 07F10803 		add	r3, r7, #8
 17732 0026 FA6E     		ldr	r2, [r7, #108]
 17733 0028 2349     		ldr	r1, .L716+4
 17734 002a 1846     		mov	r0, r3
 17735 002c FFF7FEFF 		bl	sprintf
2518:..\src/command_processing.c ****         strcat(info_string, str);
 17736              		.loc 1 2518 0 discriminator 3
 17737 0030 07F10803 		add	r3, r7, #8
 17738 0034 1946     		mov	r1, r3
 17739 0036 7868     		ldr	r0, [r7, #4]
 17740 0038 FFF7FEFF 		bl	strcat
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17741              		.loc 1 2516 0 discriminator 3
 17742 003c FB6E     		ldr	r3, [r7, #108]
 17743 003e 0133     		adds	r3, r3, #1
 17744 0040 FB66     		str	r3, [r7, #108]
 17745              	.L712:
2516:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17746              		.loc 1 2516 0 is_stmt 0 discriminator 1
 17747 0042 FB6E     		ldr	r3, [r7, #108]
 17748 0044 0A2B     		cmp	r3, #10
 17749 0046 ECDD     		ble	.L713
2519:..\src/command_processing.c ****     }
2520:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 17750              		.loc 1 2520 0 is_stmt 1
 17751 0048 0123     		movs	r3, #1
 17752 004a FB66     		str	r3, [r7, #108]
 17753 004c 0FE0     		b	.L714
 17754              	.L715:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 395


2521:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17755              		.loc 1 2521 0 discriminator 3
 17756 004e 07F10803 		add	r3, r7, #8
 17757 0052 FA6E     		ldr	r2, [r7, #108]
 17758 0054 1949     		ldr	r1, .L716+8
 17759 0056 1846     		mov	r0, r3
 17760 0058 FFF7FEFF 		bl	sprintf
2522:..\src/command_processing.c ****         strcat(info_string, str);
 17761              		.loc 1 2522 0 discriminator 3
 17762 005c 07F10803 		add	r3, r7, #8
 17763 0060 1946     		mov	r1, r3
 17764 0062 7868     		ldr	r0, [r7, #4]
 17765 0064 FFF7FEFF 		bl	strcat
2520:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17766              		.loc 1 2520 0 discriminator 3
 17767 0068 FB6E     		ldr	r3, [r7, #108]
 17768 006a 0133     		adds	r3, r3, #1
 17769 006c FB66     		str	r3, [r7, #108]
 17770              	.L714:
2520:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17771              		.loc 1 2520 0 is_stmt 0 discriminator 1
 17772 006e FB6E     		ldr	r3, [r7, #108]
 17773 0070 042B     		cmp	r3, #4
 17774 0072 ECDD     		ble	.L715
2523:..\src/command_processing.c ****     }
2524:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 17775              		.loc 1 2524 0 is_stmt 1
 17776 0074 07F10803 		add	r3, r7, #8
 17777 0078 114A     		ldr	r2, .L716+12
 17778 007a 1846     		mov	r0, r3
 17779 007c 1146     		mov	r1, r2
 17780 007e 4D23     		movs	r3, #77
 17781 0080 1A46     		mov	r2, r3
 17782 0082 FFF7FEFF 		bl	memcpy
2525:..\src/command_processing.c ****     strcat(info_string, str);
 17783              		.loc 1 2525 0
 17784 0086 07F10803 		add	r3, r7, #8
 17785 008a 1946     		mov	r1, r3
 17786 008c 7868     		ldr	r0, [r7, #4]
 17787 008e FFF7FEFF 		bl	strcat
2526:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17788              		.loc 1 2526 0
 17789 0092 7868     		ldr	r0, [r7, #4]
 17790 0094 FFF7FEFF 		bl	strlen
 17791 0098 0346     		mov	r3, r0
 17792 009a 1A46     		mov	r2, r3
 17793 009c 7B68     		ldr	r3, [r7, #4]
 17794 009e 1344     		add	r3, r3, r2
 17795 00a0 084A     		ldr	r2, .L716+16
 17796 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 17797 00a4 9278     		ldrb	r2, [r2, #2]
 17798 00a6 1980     		strh	r1, [r3]	@ unaligned
 17799 00a8 9A70     		strb	r2, [r3, #2]
2527:..\src/command_processing.c **** }
 17800              		.loc 1 2527 0
 17801 00aa 00BF     		nop
 17802 00ac 7437     		adds	r7, r7, #116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 396


 17803              		.cfi_def_cfa_offset 12
 17804 00ae BD46     		mov	sp, r7
 17805              		.cfi_def_cfa_register 13
 17806              		@ sp needed
 17807 00b0 90BD     		pop	{r4, r7, pc}
 17808              	.L717:
 17809 00b2 00BF     		.align	2
 17810              	.L716:
 17811 00b4 20180000 		.word	.LC240
 17812 00b8 30180000 		.word	.LC241
 17813 00bc 3C180000 		.word	.LC242
 17814 00c0 4C180000 		.word	.LC243
 17815 00c4 840D0000 		.word	.LC125
 17816              		.cfi_endproc
 17817              	.LFE75:
 17818              		.size	prepare_SD_legend, .-prepare_SD_legend
 17819              		.section	.rodata
 17820 1899 000000   		.align	2
 17821              	.LC244:
 17822 189c 25303264 		.ascii	"%02d,%02d,%02d,\000"
 17822      2C253032 
 17822      642C2530 
 17822      32642C00 
 17823              		.align	2
 17824              	.LC245:
 17825 18ac 256C752C 		.ascii	"%lu,\000"
 17825      00
 17826 18b1 000000   		.align	2
 17827              	.LC246:
 17828 18b4 256C752C 		.ascii	"%lu,%lu,\000"
 17828      256C752C 
 17828      00
 17829 18bd 000000   		.align	2
 17830              	.LC247:
 17831 18c0 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 17831      256C752C 
 17831      256C752C 
 17831      256C7500 
 17832              		.section	.text.prepare_SD_info,"ax",%progbits
 17833              		.align	2
 17834              		.global	prepare_SD_info
 17835              		.thumb
 17836              		.thumb_func
 17837              		.type	prepare_SD_info, %function
 17838              	prepare_SD_info:
 17839              	.LFB76:
2528:..\src/command_processing.c **** 
2529:..\src/command_processing.c **** //==============================================================================
2530:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2531:..\src/command_processing.c **** //==============================================================================
2532:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2533:..\src/command_processing.c **** {
 17840              		.loc 1 2533 0
 17841              		.cfi_startproc
 17842              		@ args = 0, pretend = 0, frame = 112
 17843              		@ frame_needed = 1, uses_anonymous_args = 0
 17844 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 397


 17845              		.cfi_def_cfa_offset 12
 17846              		.cfi_offset 4, -12
 17847              		.cfi_offset 7, -8
 17848              		.cfi_offset 14, -4
 17849 0002 9FB0     		sub	sp, sp, #124
 17850              		.cfi_def_cfa_offset 136
 17851 0004 02AF     		add	r7, sp, #8
 17852              		.cfi_def_cfa 7, 128
 17853 0006 7860     		str	r0, [r7, #4]
2534:..\src/command_processing.c ****     char str[100];  
2535:..\src/command_processing.c ****     int i;
2536:..\src/command_processing.c ****             
2537:..\src/command_processing.c ****     strcpy(info_string, "");
 17854              		.loc 1 2537 0
 17855 0008 7B68     		ldr	r3, [r7, #4]
 17856 000a 0022     		movs	r2, #0
 17857 000c 1A70     		strb	r2, [r3]
2538:..\src/command_processing.c ****     
2539:..\src/command_processing.c ****     // Time
2540:..\src/command_processing.c ****     strcat(info_string, "");
2541:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 17858              		.loc 1 2541 0
 17859 000e 424B     		ldr	r3, .L723
 17860 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17861 0014 1A46     		mov	r2, r3
 17862 0016 404B     		ldr	r3, .L723
 17863 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17864 001c 1946     		mov	r1, r3
 17865 001e 3E4B     		ldr	r3, .L723
 17866 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17867 0024 07F10800 		add	r0, r7, #8
 17868 0028 0093     		str	r3, [sp]
 17869 002a 0B46     		mov	r3, r1
 17870 002c 3B49     		ldr	r1, .L723+4
 17871 002e FFF7FEFF 		bl	sprintf
2542:..\src/command_processing.c ****     strcat(info_string, str);
 17872              		.loc 1 2542 0
 17873 0032 07F10803 		add	r3, r7, #8
 17874 0036 1946     		mov	r1, r3
 17875 0038 7868     		ldr	r0, [r7, #4]
 17876 003a FFF7FEFF 		bl	strcat
2543:..\src/command_processing.c **** 
2544:..\src/command_processing.c ****     // Pos_Bin
2545:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17877              		.loc 1 2545 0
 17878 003e 0123     		movs	r3, #1
 17879 0040 FB66     		str	r3, [r7, #108]
 17880 0042 14E0     		b	.L719
 17881              	.L720:
2546:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17882              		.loc 1 2546 0 discriminator 3
 17883 0044 FB6E     		ldr	r3, [r7, #108]
 17884 0046 013B     		subs	r3, r3, #1
 17885 0048 334A     		ldr	r2, .L723
 17886 004a 0633     		adds	r3, r3, #6
 17887 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 17888 0050 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 398


 17889 0054 3249     		ldr	r1, .L723+8
 17890 0056 1846     		mov	r0, r3
 17891 0058 FFF7FEFF 		bl	sprintf
2547:..\src/command_processing.c ****         strcat(info_string, str);
 17892              		.loc 1 2547 0 discriminator 3
 17893 005c 07F10803 		add	r3, r7, #8
 17894 0060 1946     		mov	r1, r3
 17895 0062 7868     		ldr	r0, [r7, #4]
 17896 0064 FFF7FEFF 		bl	strcat
2545:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17897              		.loc 1 2545 0 discriminator 3
 17898 0068 FB6E     		ldr	r3, [r7, #108]
 17899 006a 0133     		adds	r3, r3, #1
 17900 006c FB66     		str	r3, [r7, #108]
 17901              	.L719:
2545:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17902              		.loc 1 2545 0 is_stmt 0 discriminator 1
 17903 006e FB6E     		ldr	r3, [r7, #108]
 17904 0070 0A2B     		cmp	r3, #10
 17905 0072 E7DD     		ble	.L720
2548:..\src/command_processing.c ****     }
2549:..\src/command_processing.c ****     
2550:..\src/command_processing.c ****     // Curr_Bin
2551:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17906              		.loc 1 2551 0 is_stmt 1
 17907 0074 0123     		movs	r3, #1
 17908 0076 FB66     		str	r3, [r7, #108]
 17909 0078 14E0     		b	.L721
 17910              	.L722:
2552:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17911              		.loc 1 2552 0 discriminator 3
 17912 007a FB6E     		ldr	r3, [r7, #108]
 17913 007c 013B     		subs	r3, r3, #1
 17914 007e 264A     		ldr	r2, .L723
 17915 0080 1033     		adds	r3, r3, #16
 17916 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 17917 0086 07F10803 		add	r3, r7, #8
 17918 008a 2549     		ldr	r1, .L723+8
 17919 008c 1846     		mov	r0, r3
 17920 008e FFF7FEFF 		bl	sprintf
2553:..\src/command_processing.c ****         strcat(info_string, str);
 17921              		.loc 1 2553 0 discriminator 3
 17922 0092 07F10803 		add	r3, r7, #8
 17923 0096 1946     		mov	r1, r3
 17924 0098 7868     		ldr	r0, [r7, #4]
 17925 009a FFF7FEFF 		bl	strcat
2551:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17926              		.loc 1 2551 0 discriminator 3
 17927 009e FB6E     		ldr	r3, [r7, #108]
 17928 00a0 0133     		adds	r3, r3, #1
 17929 00a2 FB66     		str	r3, [r7, #108]
 17930              	.L721:
2551:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17931              		.loc 1 2551 0 is_stmt 0 discriminator 1
 17932 00a4 FB6E     		ldr	r3, [r7, #108]
 17933 00a6 042B     		cmp	r3, #4
 17934 00a8 E7DD     		ble	.L722
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 399


2554:..\src/command_processing.c ****     }
2555:..\src/command_processing.c ****        
2556:..\src/command_processing.c ****     // EMG_1, EMG_2
2557:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 17935              		.loc 1 2557 0 is_stmt 1
 17936 00aa 1B4B     		ldr	r3, .L723
 17937 00ac 1A69     		ldr	r2, [r3, #16]
 17938 00ae 1A4B     		ldr	r3, .L723
 17939 00b0 5B69     		ldr	r3, [r3, #20]
 17940 00b2 07F10800 		add	r0, r7, #8
 17941 00b6 1B49     		ldr	r1, .L723+12
 17942 00b8 FFF7FEFF 		bl	sprintf
2558:..\src/command_processing.c ****     strcat(info_string, str);
 17943              		.loc 1 2558 0
 17944 00bc 07F10803 		add	r3, r7, #8
 17945 00c0 1946     		mov	r1, r3
 17946 00c2 7868     		ldr	r0, [r7, #4]
 17947 00c4 FFF7FEFF 		bl	strcat
2559:..\src/command_processing.c ****     
2560:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2561:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 17948              		.loc 1 2561 0
 17949 00c8 134B     		ldr	r3, .L723
 17950 00ca 196D     		ldr	r1, [r3, #80]
 17951 00cc 124B     		ldr	r3, .L723
 17952 00ce 5C6D     		ldr	r4, [r3, #84]
 17953 00d0 114B     		ldr	r3, .L723
 17954 00d2 9B6D     		ldr	r3, [r3, #88]
 17955 00d4 104A     		ldr	r2, .L723
 17956 00d6 D26D     		ldr	r2, [r2, #92]
 17957 00d8 07F10800 		add	r0, r7, #8
 17958 00dc 0192     		str	r2, [sp, #4]
 17959 00de 0093     		str	r3, [sp]
 17960 00e0 2346     		mov	r3, r4
 17961 00e2 0A46     		mov	r2, r1
 17962 00e4 1049     		ldr	r1, .L723+16
 17963 00e6 FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****     strcat(info_string, str);
 17964              		.loc 1 2562 0
 17965 00ea 07F10803 		add	r3, r7, #8
 17966 00ee 1946     		mov	r1, r3
 17967 00f0 7868     		ldr	r0, [r7, #4]
 17968 00f2 FFF7FEFF 		bl	strcat
2563:..\src/command_processing.c ****     
2564:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17969              		.loc 1 2564 0
 17970 00f6 7868     		ldr	r0, [r7, #4]
 17971 00f8 FFF7FEFF 		bl	strlen
 17972 00fc 0346     		mov	r3, r0
 17973 00fe 1A46     		mov	r2, r3
 17974 0100 7B68     		ldr	r3, [r7, #4]
 17975 0102 1344     		add	r3, r3, r2
 17976 0104 094A     		ldr	r2, .L723+20
 17977 0106 1188     		ldrh	r1, [r2]	@ unaligned
 17978 0108 9278     		ldrb	r2, [r2, #2]
 17979 010a 1980     		strh	r1, [r3]	@ unaligned
 17980 010c 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 400


2565:..\src/command_processing.c **** }
 17981              		.loc 1 2565 0
 17982 010e 00BF     		nop
 17983 0110 7437     		adds	r7, r7, #116
 17984              		.cfi_def_cfa_offset 12
 17985 0112 BD46     		mov	sp, r7
 17986              		.cfi_def_cfa_register 13
 17987              		@ sp needed
 17988 0114 90BD     		pop	{r4, r7, pc}
 17989              	.L724:
 17990 0116 00BF     		.align	2
 17991              	.L723:
 17992 0118 00000000 		.word	g_mem
 17993 011c 9C180000 		.word	.LC244
 17994 0120 AC180000 		.word	.LC245
 17995 0124 B4180000 		.word	.LC246
 17996 0128 C0180000 		.word	.LC247
 17997 012c 840D0000 		.word	.LC125
 17998              		.cfi_endproc
 17999              	.LFE76:
 18000              		.size	prepare_SD_info, .-prepare_SD_info
 18001              		.section	.rodata
 18002              		.align	2
 18003              	.LC248:
 18004 18d0 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 18004      4F525320 
 18004      494E464F 
 18004      0D0A00
 18005 18df 00       		.align	2
 18006              	.LC249:
 18007 18e0 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 18007      3A202564 
 18007      09256409 
 18007      25640D0A 
 18007      00
 18008 18f1 000000   		.align	2
 18009              	.LC250:
 18010 18f4 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 18010      6F3A2025 
 18010      64092564 
 18010      0925640D 
 18010      0A00
 18011 1906 0000     		.align	2
 18012              	.LC251:
 18013 1908 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 18013      3A202564 
 18013      09256409 
 18013      25640D0A 
 18013      00
 18014 1919 000000   		.align	2
 18015              	.LC252:
 18016 191c 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 18016      743A2025 
 18016      2E336609 
 18016      252E3366 
 18016      09252E33 
 18017 1939 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 401


 18018              	.LC253:
 18019 193c 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 18019      70657261 
 18019      74757265 
 18019      3A202564 
 18019      0D0A00
 18020              		.section	.text.IMU_reading_info,"ax",%progbits
 18021              		.align	2
 18022              		.global	IMU_reading_info
 18023              		.thumb
 18024              		.thumb_func
 18025              		.type	IMU_reading_info, %function
 18026              	IMU_reading_info:
 18027              	.LFB77:
2566:..\src/command_processing.c **** 
2567:..\src/command_processing.c **** //==============================================================================
2568:..\src/command_processing.c **** //                                                              IMU READING INFO
2569:..\src/command_processing.c **** //==============================================================================
2570:..\src/command_processing.c **** 
2571:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2572:..\src/command_processing.c **** {
 18028              		.loc 1 2572 0
 18029              		.cfi_startproc
 18030              		@ args = 0, pretend = 0, frame = 312
 18031              		@ frame_needed = 1, uses_anonymous_args = 0
 18032 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 18033              		.cfi_def_cfa_offset 32
 18034              		.cfi_offset 4, -32
 18035              		.cfi_offset 5, -28
 18036              		.cfi_offset 7, -24
 18037              		.cfi_offset 8, -20
 18038              		.cfi_offset 9, -16
 18039              		.cfi_offset 10, -12
 18040              		.cfi_offset 11, -8
 18041              		.cfi_offset 14, -4
 18042 0004 D4B0     		sub	sp, sp, #336
 18043              		.cfi_def_cfa_offset 368
 18044 0006 06AF     		add	r7, sp, #24
 18045              		.cfi_def_cfa 7, 344
 18046 0008 3B1D     		adds	r3, r7, #4
 18047 000a 1860     		str	r0, [r3]
2573:..\src/command_processing.c ****     char str[300];  
2574:..\src/command_processing.c ****     int i;
2575:..\src/command_processing.c ****                  
2576:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 18048              		.loc 1 2576 0
 18049 000c 3B1D     		adds	r3, r7, #4
 18050 000e 1868     		ldr	r0, [r3]
 18051 0010 FFF7FEFF 		bl	strlen
 18052 0014 0346     		mov	r3, r0
 18053 0016 1A46     		mov	r2, r3
 18054 0018 3B1D     		adds	r3, r7, #4
 18055 001a 1B68     		ldr	r3, [r3]
 18056 001c 1344     		add	r3, r3, r2
 18057 001e C94A     		ldr	r2, .L733
 18058 0020 1C46     		mov	r4, r3
 18059 0022 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 402


 18060 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 18061 0026 2060     		str	r0, [r4]	@ unaligned
 18062 0028 6160     		str	r1, [r4, #4]	@ unaligned
 18063 002a A260     		str	r2, [r4, #8]	@ unaligned
 18064 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 18065 002e 9B78     		ldrb	r3, [r3, #2]
 18066 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 18067 0032 A373     		strb	r3, [r4, #14]
2577:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 18068              		.loc 1 2577 0
 18069 0034 0023     		movs	r3, #0
 18070 0036 C7F83431 		str	r3, [r7, #308]
 18071 003a 66E1     		b	.L726
 18072              	.L732:
2578:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18073              		.loc 1 2578 0
 18074 003c C24A     		ldr	r2, .L733+4
 18075 003e D7F83431 		ldr	r3, [r7, #308]
 18076 0042 1344     		add	r3, r3, r2
 18077 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18078 0046 07F10800 		add	r0, r7, #8
 18079 004a D7F83421 		ldr	r2, [r7, #308]
 18080 004e BF49     		ldr	r1, .L733+8
 18081 0050 FFF7FEFF 		bl	sprintf
2579:..\src/command_processing.c ****         strcat(info_string, str);
 18082              		.loc 1 2579 0
 18083 0054 07F10802 		add	r2, r7, #8
 18084 0058 3B1D     		adds	r3, r7, #4
 18085 005a 1146     		mov	r1, r2
 18086 005c 1868     		ldr	r0, [r3]
 18087 005e FFF7FEFF 		bl	strcat
2580:..\src/command_processing.c ****         
2581:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 18088              		.loc 1 2581 0
 18089 0062 B94A     		ldr	r2, .L733+4
 18090 0064 D7F83431 		ldr	r3, [r7, #308]
 18091 0068 1344     		add	r3, r3, r2
 18092 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18093 006c 1946     		mov	r1, r3
 18094 006e B84A     		ldr	r2, .L733+12
 18095 0070 0B46     		mov	r3, r1
 18096 0072 9B00     		lsls	r3, r3, #2
 18097 0074 0B44     		add	r3, r3, r1
 18098 0076 1344     		add	r3, r3, r2
 18099 0078 03F20223 		addw	r3, r3, #514
 18100 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18101 007e 002B     		cmp	r3, #0
 18102 0080 31D0     		beq	.L727
2582:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 18103              		.loc 1 2582 0
 18104 0082 B449     		ldr	r1, .L733+16
 18105 0084 D7F83421 		ldr	r2, [r7, #308]
 18106 0088 1346     		mov	r3, r2
 18107 008a 9B00     		lsls	r3, r3, #2
 18108 008c 1344     		add	r3, r3, r2
 18109 008e DB00     		lsls	r3, r3, #3
 18110 0090 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 403


 18111 0092 0233     		adds	r3, r3, #2
 18112 0094 B3F90030 		ldrsh	r3, [r3]
 18113 0098 1C46     		mov	r4, r3
 18114 009a AE49     		ldr	r1, .L733+16
 18115 009c D7F83421 		ldr	r2, [r7, #308]
 18116 00a0 1346     		mov	r3, r2
 18117 00a2 9B00     		lsls	r3, r3, #2
 18118 00a4 1344     		add	r3, r3, r2
 18119 00a6 DB00     		lsls	r3, r3, #3
 18120 00a8 0B44     		add	r3, r3, r1
 18121 00aa 0433     		adds	r3, r3, #4
 18122 00ac B3F90030 		ldrsh	r3, [r3]
 18123 00b0 1D46     		mov	r5, r3
 18124 00b2 A849     		ldr	r1, .L733+16
 18125 00b4 D7F83421 		ldr	r2, [r7, #308]
 18126 00b8 1346     		mov	r3, r2
 18127 00ba 9B00     		lsls	r3, r3, #2
 18128 00bc 1344     		add	r3, r3, r2
 18129 00be DB00     		lsls	r3, r3, #3
 18130 00c0 0B44     		add	r3, r3, r1
 18131 00c2 0633     		adds	r3, r3, #6
 18132 00c4 B3F90030 		ldrsh	r3, [r3]
 18133 00c8 07F10800 		add	r0, r7, #8
 18134 00cc 0093     		str	r3, [sp]
 18135 00ce 2B46     		mov	r3, r5
 18136 00d0 2246     		mov	r2, r4
 18137 00d2 A149     		ldr	r1, .L733+20
 18138 00d4 FFF7FEFF 		bl	sprintf
2583:..\src/command_processing.c ****             strcat(info_string, str);
 18139              		.loc 1 2583 0
 18140 00d8 07F10802 		add	r2, r7, #8
 18141 00dc 3B1D     		adds	r3, r7, #4
 18142 00de 1146     		mov	r1, r2
 18143 00e0 1868     		ldr	r0, [r3]
 18144 00e2 FFF7FEFF 		bl	strcat
 18145              	.L727:
2584:..\src/command_processing.c ****         }
2585:..\src/command_processing.c **** 
2586:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 18146              		.loc 1 2586 0
 18147 00e6 984A     		ldr	r2, .L733+4
 18148 00e8 D7F83431 		ldr	r3, [r7, #308]
 18149 00ec 1344     		add	r3, r3, r2
 18150 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18151 00f0 1946     		mov	r1, r3
 18152 00f2 974A     		ldr	r2, .L733+12
 18153 00f4 0B46     		mov	r3, r1
 18154 00f6 9B00     		lsls	r3, r3, #2
 18155 00f8 0B44     		add	r3, r3, r1
 18156 00fa 1344     		add	r3, r3, r2
 18157 00fc 03F20323 		addw	r3, r3, #515
 18158 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18159 0102 002B     		cmp	r3, #0
 18160 0104 31D0     		beq	.L728
2587:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 18161              		.loc 1 2587 0
 18162 0106 9349     		ldr	r1, .L733+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 404


 18163 0108 D7F83421 		ldr	r2, [r7, #308]
 18164 010c 1346     		mov	r3, r2
 18165 010e 9B00     		lsls	r3, r3, #2
 18166 0110 1344     		add	r3, r3, r2
 18167 0112 DB00     		lsls	r3, r3, #3
 18168 0114 0B44     		add	r3, r3, r1
 18169 0116 0833     		adds	r3, r3, #8
 18170 0118 B3F90030 		ldrsh	r3, [r3]
 18171 011c 1C46     		mov	r4, r3
 18172 011e 8D49     		ldr	r1, .L733+16
 18173 0120 D7F83421 		ldr	r2, [r7, #308]
 18174 0124 1346     		mov	r3, r2
 18175 0126 9B00     		lsls	r3, r3, #2
 18176 0128 1344     		add	r3, r3, r2
 18177 012a DB00     		lsls	r3, r3, #3
 18178 012c 0B44     		add	r3, r3, r1
 18179 012e 0A33     		adds	r3, r3, #10
 18180 0130 B3F90030 		ldrsh	r3, [r3]
 18181 0134 1D46     		mov	r5, r3
 18182 0136 8749     		ldr	r1, .L733+16
 18183 0138 D7F83421 		ldr	r2, [r7, #308]
 18184 013c 1346     		mov	r3, r2
 18185 013e 9B00     		lsls	r3, r3, #2
 18186 0140 1344     		add	r3, r3, r2
 18187 0142 DB00     		lsls	r3, r3, #3
 18188 0144 0B44     		add	r3, r3, r1
 18189 0146 0C33     		adds	r3, r3, #12
 18190 0148 B3F90030 		ldrsh	r3, [r3]
 18191 014c 07F10800 		add	r0, r7, #8
 18192 0150 0093     		str	r3, [sp]
 18193 0152 2B46     		mov	r3, r5
 18194 0154 2246     		mov	r2, r4
 18195 0156 8149     		ldr	r1, .L733+24
 18196 0158 FFF7FEFF 		bl	sprintf
2588:..\src/command_processing.c ****             strcat(info_string, str);
 18197              		.loc 1 2588 0
 18198 015c 07F10802 		add	r2, r7, #8
 18199 0160 3B1D     		adds	r3, r7, #4
 18200 0162 1146     		mov	r1, r2
 18201 0164 1868     		ldr	r0, [r3]
 18202 0166 FFF7FEFF 		bl	strcat
 18203              	.L728:
2589:..\src/command_processing.c ****         }
2590:..\src/command_processing.c **** 
2591:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 18204              		.loc 1 2591 0
 18205 016a 774A     		ldr	r2, .L733+4
 18206 016c D7F83431 		ldr	r3, [r7, #308]
 18207 0170 1344     		add	r3, r3, r2
 18208 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18209 0174 1946     		mov	r1, r3
 18210 0176 764A     		ldr	r2, .L733+12
 18211 0178 0B46     		mov	r3, r1
 18212 017a 9B00     		lsls	r3, r3, #2
 18213 017c 0B44     		add	r3, r3, r1
 18214 017e 1344     		add	r3, r3, r2
 18215 0180 03F50173 		add	r3, r3, #516
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 405


 18216 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18217 0186 002B     		cmp	r3, #0
 18218 0188 31D0     		beq	.L729
2592:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 18219              		.loc 1 2592 0
 18220 018a 7249     		ldr	r1, .L733+16
 18221 018c D7F83421 		ldr	r2, [r7, #308]
 18222 0190 1346     		mov	r3, r2
 18223 0192 9B00     		lsls	r3, r3, #2
 18224 0194 1344     		add	r3, r3, r2
 18225 0196 DB00     		lsls	r3, r3, #3
 18226 0198 0B44     		add	r3, r3, r1
 18227 019a 0E33     		adds	r3, r3, #14
 18228 019c B3F90030 		ldrsh	r3, [r3]
 18229 01a0 1C46     		mov	r4, r3
 18230 01a2 6C49     		ldr	r1, .L733+16
 18231 01a4 D7F83421 		ldr	r2, [r7, #308]
 18232 01a8 1346     		mov	r3, r2
 18233 01aa 9B00     		lsls	r3, r3, #2
 18234 01ac 1344     		add	r3, r3, r2
 18235 01ae DB00     		lsls	r3, r3, #3
 18236 01b0 0B44     		add	r3, r3, r1
 18237 01b2 1033     		adds	r3, r3, #16
 18238 01b4 B3F90030 		ldrsh	r3, [r3]
 18239 01b8 1D46     		mov	r5, r3
 18240 01ba 6649     		ldr	r1, .L733+16
 18241 01bc D7F83421 		ldr	r2, [r7, #308]
 18242 01c0 1346     		mov	r3, r2
 18243 01c2 9B00     		lsls	r3, r3, #2
 18244 01c4 1344     		add	r3, r3, r2
 18245 01c6 DB00     		lsls	r3, r3, #3
 18246 01c8 0B44     		add	r3, r3, r1
 18247 01ca 1233     		adds	r3, r3, #18
 18248 01cc B3F90030 		ldrsh	r3, [r3]
 18249 01d0 07F10800 		add	r0, r7, #8
 18250 01d4 0093     		str	r3, [sp]
 18251 01d6 2B46     		mov	r3, r5
 18252 01d8 2246     		mov	r2, r4
 18253 01da 6149     		ldr	r1, .L733+28
 18254 01dc FFF7FEFF 		bl	sprintf
2593:..\src/command_processing.c ****             strcat(info_string, str);
 18255              		.loc 1 2593 0
 18256 01e0 07F10802 		add	r2, r7, #8
 18257 01e4 3B1D     		adds	r3, r7, #4
 18258 01e6 1146     		mov	r1, r2
 18259 01e8 1868     		ldr	r0, [r3]
 18260 01ea FFF7FEFF 		bl	strcat
 18261              	.L729:
2594:..\src/command_processing.c ****         }
2595:..\src/command_processing.c ****         
2596:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 18262              		.loc 1 2596 0
 18263 01ee 564A     		ldr	r2, .L733+4
 18264 01f0 D7F83431 		ldr	r3, [r7, #308]
 18265 01f4 1344     		add	r3, r3, r2
 18266 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18267 01f8 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 406


 18268 01fa 554A     		ldr	r2, .L733+12
 18269 01fc 0B46     		mov	r3, r1
 18270 01fe 9B00     		lsls	r3, r3, #2
 18271 0200 0B44     		add	r3, r3, r1
 18272 0202 1344     		add	r3, r3, r2
 18273 0204 03F20523 		addw	r3, r3, #517
 18274 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18275 020a 002B     		cmp	r3, #0
 18276 020c 4FD0     		beq	.L730
2597:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 18277              		.loc 1 2597 0
 18278 020e 5149     		ldr	r1, .L733+16
 18279 0210 D7F83421 		ldr	r2, [r7, #308]
 18280 0214 1346     		mov	r3, r2
 18281 0216 9B00     		lsls	r3, r3, #2
 18282 0218 1344     		add	r3, r3, r2
 18283 021a DB00     		lsls	r3, r3, #3
 18284 021c 0B44     		add	r3, r3, r1
 18285 021e 1433     		adds	r3, r3, #20
 18286 0220 1B68     		ldr	r3, [r3]	@ float
 18287 0222 1846     		mov	r0, r3
 18288 0224 FFF7FEFF 		bl	__aeabi_f2d
 18289 0228 8246     		mov	r10, r0
 18290 022a 8B46     		mov	fp, r1
 18291 022c 4949     		ldr	r1, .L733+16
 18292 022e D7F83421 		ldr	r2, [r7, #308]
 18293 0232 1346     		mov	r3, r2
 18294 0234 9B00     		lsls	r3, r3, #2
 18295 0236 1344     		add	r3, r3, r2
 18296 0238 DB00     		lsls	r3, r3, #3
 18297 023a 0B44     		add	r3, r3, r1
 18298 023c 1833     		adds	r3, r3, #24
 18299 023e 1B68     		ldr	r3, [r3]	@ float
 18300 0240 1846     		mov	r0, r3
 18301 0242 FFF7FEFF 		bl	__aeabi_f2d
 18302 0246 0446     		mov	r4, r0
 18303 0248 0D46     		mov	r5, r1
 18304 024a 4249     		ldr	r1, .L733+16
 18305 024c D7F83421 		ldr	r2, [r7, #308]
 18306 0250 1346     		mov	r3, r2
 18307 0252 9B00     		lsls	r3, r3, #2
 18308 0254 1344     		add	r3, r3, r2
 18309 0256 DB00     		lsls	r3, r3, #3
 18310 0258 0B44     		add	r3, r3, r1
 18311 025a 1C33     		adds	r3, r3, #28
 18312 025c 1B68     		ldr	r3, [r3]	@ float
 18313 025e 1846     		mov	r0, r3
 18314 0260 FFF7FEFF 		bl	__aeabi_f2d
 18315 0264 8046     		mov	r8, r0
 18316 0266 8946     		mov	r9, r1
 18317 0268 3A49     		ldr	r1, .L733+16
 18318 026a D7F83421 		ldr	r2, [r7, #308]
 18319 026e 1346     		mov	r3, r2
 18320 0270 9B00     		lsls	r3, r3, #2
 18321 0272 1344     		add	r3, r3, r2
 18322 0274 DB00     		lsls	r3, r3, #3
 18323 0276 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 407


 18324 0278 2033     		adds	r3, r3, #32
 18325 027a 1B68     		ldr	r3, [r3]	@ float
 18326 027c 1846     		mov	r0, r3
 18327 027e FFF7FEFF 		bl	__aeabi_f2d
 18328 0282 0246     		mov	r2, r0
 18329 0284 0B46     		mov	r3, r1
 18330 0286 07F10800 		add	r0, r7, #8
 18331 028a CDE90423 		strd	r2, [sp, #16]
 18332 028e CDE90289 		strd	r8, [sp, #8]
 18333 0292 CDE90045 		strd	r4, [sp]
 18334 0296 5246     		mov	r2, r10
 18335 0298 5B46     		mov	r3, fp
 18336 029a 3249     		ldr	r1, .L733+32
 18337 029c FFF7FEFF 		bl	sprintf
2598:..\src/command_processing.c ****             strcat(info_string, str);
 18338              		.loc 1 2598 0
 18339 02a0 07F10802 		add	r2, r7, #8
 18340 02a4 3B1D     		adds	r3, r7, #4
 18341 02a6 1146     		mov	r1, r2
 18342 02a8 1868     		ldr	r0, [r3]
 18343 02aa FFF7FEFF 		bl	strcat
 18344              	.L730:
2599:..\src/command_processing.c ****         }
2600:..\src/command_processing.c ****         
2601:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 18345              		.loc 1 2601 0
 18346 02ae 264A     		ldr	r2, .L733+4
 18347 02b0 D7F83431 		ldr	r3, [r7, #308]
 18348 02b4 1344     		add	r3, r3, r2
 18349 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18350 02b8 1946     		mov	r1, r3
 18351 02ba 254A     		ldr	r2, .L733+12
 18352 02bc 0B46     		mov	r3, r1
 18353 02be 9B00     		lsls	r3, r3, #2
 18354 02c0 0B44     		add	r3, r3, r1
 18355 02c2 1344     		add	r3, r3, r2
 18356 02c4 03F20623 		addw	r3, r3, #518
 18357 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18358 02ca 002B     		cmp	r3, #0
 18359 02cc 18D0     		beq	.L731
2602:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 18360              		.loc 1 2602 0
 18361 02ce 2149     		ldr	r1, .L733+16
 18362 02d0 D7F83421 		ldr	r2, [r7, #308]
 18363 02d4 1346     		mov	r3, r2
 18364 02d6 9B00     		lsls	r3, r3, #2
 18365 02d8 1344     		add	r3, r3, r2
 18366 02da DB00     		lsls	r3, r3, #3
 18367 02dc 0B44     		add	r3, r3, r1
 18368 02de 2433     		adds	r3, r3, #36
 18369 02e0 B3F90030 		ldrsh	r3, [r3]
 18370 02e4 1A46     		mov	r2, r3
 18371 02e6 07F10803 		add	r3, r7, #8
 18372 02ea 1F49     		ldr	r1, .L733+36
 18373 02ec 1846     		mov	r0, r3
 18374 02ee FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 408


 18375              		.loc 1 2603 0
 18376 02f2 07F10802 		add	r2, r7, #8
 18377 02f6 3B1D     		adds	r3, r7, #4
 18378 02f8 1146     		mov	r1, r2
 18379 02fa 1868     		ldr	r0, [r3]
 18380 02fc FFF7FEFF 		bl	strcat
 18381              	.L731:
2577:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18382              		.loc 1 2577 0 discriminator 2
 18383 0300 D7F83431 		ldr	r3, [r7, #308]
 18384 0304 0133     		adds	r3, r3, #1
 18385 0306 C7F83431 		str	r3, [r7, #308]
 18386              	.L726:
2577:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18387              		.loc 1 2577 0 is_stmt 0 discriminator 1
 18388 030a 184B     		ldr	r3, .L733+40
 18389 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18390 030e 1A46     		mov	r2, r3
 18391 0310 D7F83431 		ldr	r3, [r7, #308]
 18392 0314 9A42     		cmp	r2, r3
 18393 0316 3FF791AE 		bgt	.L732
2604:..\src/command_processing.c ****         }
2605:..\src/command_processing.c ****         
2606:..\src/command_processing.c ****     }
2607:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18394              		.loc 1 2607 0 is_stmt 1
 18395 031a 3B1D     		adds	r3, r7, #4
 18396 031c 1868     		ldr	r0, [r3]
 18397 031e FFF7FEFF 		bl	strlen
 18398 0322 0346     		mov	r3, r0
 18399 0324 1A46     		mov	r2, r3
 18400 0326 3B1D     		adds	r3, r7, #4
 18401 0328 1B68     		ldr	r3, [r3]
 18402 032a 1344     		add	r3, r3, r2
 18403 032c 104A     		ldr	r2, .L733+44
 18404 032e 1188     		ldrh	r1, [r2]	@ unaligned
 18405 0330 9278     		ldrb	r2, [r2, #2]
 18406 0332 1980     		strh	r1, [r3]	@ unaligned
 18407 0334 9A70     		strb	r2, [r3, #2]
2608:..\src/command_processing.c **** }
 18408              		.loc 1 2608 0
 18409 0336 00BF     		nop
 18410 0338 07F59C77 		add	r7, r7, #312
 18411              		.cfi_def_cfa_offset 32
 18412 033c BD46     		mov	sp, r7
 18413              		.cfi_def_cfa_register 13
 18414              		@ sp needed
 18415 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 18416              	.L734:
 18417 0342 00BF     		.align	2
 18418              	.L733:
 18419 0344 D0180000 		.word	.LC248
 18420 0348 00000000 		.word	IMU_connected
 18421 034c D8140000 		.word	.LC210
 18422 0350 00000000 		.word	c_mem
 18423 0354 00000000 		.word	g_imu
 18424 0358 E0180000 		.word	.LC249
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 409


 18425 035c F4180000 		.word	.LC250
 18426 0360 08190000 		.word	.LC251
 18427 0364 1C190000 		.word	.LC252
 18428 0368 3C190000 		.word	.LC253
 18429 036c 00000000 		.word	N_IMU_Connected
 18430 0370 840D0000 		.word	.LC125
 18431              		.cfi_endproc
 18432              	.LFE77:
 18433              		.size	IMU_reading_info, .-IMU_reading_info
 18434              		.section	.text.commWrite_old_id,"ax",%progbits
 18435              		.align	2
 18436              		.global	commWrite_old_id
 18437              		.thumb
 18438              		.thumb_func
 18439              		.type	commWrite_old_id, %function
 18440              	commWrite_old_id:
 18441              	.LFB78:
2609:..\src/command_processing.c **** 
2610:..\src/command_processing.c **** //==============================================================================
2611:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2612:..\src/command_processing.c **** //==============================================================================
2613:..\src/command_processing.c **** 
2614:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2615:..\src/command_processing.c **** {
 18442              		.loc 1 2615 0
 18443              		.cfi_startproc
 18444              		@ args = 0, pretend = 0, frame = 16
 18445              		@ frame_needed = 1, uses_anonymous_args = 0
 18446 0000 80B5     		push	{r7, lr}
 18447              		.cfi_def_cfa_offset 8
 18448              		.cfi_offset 7, -8
 18449              		.cfi_offset 14, -4
 18450 0002 84B0     		sub	sp, sp, #16
 18451              		.cfi_def_cfa_offset 24
 18452 0004 00AF     		add	r7, sp, #0
 18453              		.cfi_def_cfa_register 7
 18454 0006 7860     		str	r0, [r7, #4]
 18455 0008 0B46     		mov	r3, r1
 18456 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 18457 000c 1346     		mov	r3, r2
 18458 000e 7B70     		strb	r3, [r7, #1]
2616:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2617:..\src/command_processing.c **** 
2618:..\src/command_processing.c ****     // frame - start
2619:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18459              		.loc 1 2619 0
 18460 0010 3A20     		movs	r0, #58
 18461 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2620:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18462              		.loc 1 2620 0
 18463 0016 3A20     		movs	r0, #58
 18464 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2621:..\src/command_processing.c ****     // frame - ID
2622:..\src/command_processing.c ****     //if(old_id)
2623:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 18465              		.loc 1 2623 0
 18466 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 410


 18467 001e 1846     		mov	r0, r3
 18468 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2624:..\src/command_processing.c ****     //else
2625:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2626:..\src/command_processing.c ****         
2627:..\src/command_processing.c ****     // frame - length
2628:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18469              		.loc 1 2628 0
 18470 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18471 0026 DBB2     		uxtb	r3, r3
 18472 0028 1846     		mov	r0, r3
 18473 002a FFF7FEFF 		bl	UART_RS485_PutChar
2629:..\src/command_processing.c ****     // frame - packet data
2630:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18474              		.loc 1 2630 0
 18475 002e 0023     		movs	r3, #0
 18476 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18477 0032 09E0     		b	.L736
 18478              	.L737:
2631:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18479              		.loc 1 2631 0 discriminator 3
 18480 0034 FB89     		ldrh	r3, [r7, #14]
 18481 0036 7A68     		ldr	r2, [r7, #4]
 18482 0038 1344     		add	r3, r3, r2
 18483 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18484 003c 1846     		mov	r0, r3
 18485 003e FFF7FEFF 		bl	UART_RS485_PutChar
2630:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18486              		.loc 1 2630 0 discriminator 3
 18487 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18488 0044 0133     		adds	r3, r3, #1
 18489 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18490              	.L736:
2630:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18491              		.loc 1 2630 0 is_stmt 0 discriminator 1
 18492 0048 FA89     		ldrh	r2, [r7, #14]
 18493 004a 7B88     		ldrh	r3, [r7, #2]
 18494 004c 9A42     		cmp	r2, r3
 18495 004e F1D3     		bcc	.L737
2632:..\src/command_processing.c ****     }
2633:..\src/command_processing.c **** 
2634:..\src/command_processing.c ****     index = 0;
 18496              		.loc 1 2634 0 is_stmt 1
 18497 0050 0023     		movs	r3, #0
 18498 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2635:..\src/command_processing.c **** 
2636:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18499              		.loc 1 2636 0
 18500 0054 00BF     		nop
 18501              	.L739:
 18502              		.loc 1 2636 0 is_stmt 0 discriminator 2
 18503 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18504 005a 0346     		mov	r3, r0
 18505 005c 03F00103 		and	r3, r3, #1
 18506 0060 002B     		cmp	r3, #0
 18507 0062 05D1     		bne	.L738
 18508              		.loc 1 2636 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 411


 18509 0064 FB89     		ldrh	r3, [r7, #14]
 18510 0066 5A1C     		adds	r2, r3, #1
 18511 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18512 006a B3F57A7F 		cmp	r3, #1000
 18513 006e F2D9     		bls	.L739
 18514              	.L738:
2637:..\src/command_processing.c **** 
2638:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18515              		.loc 1 2638 0 is_stmt 1
 18516 0070 0120     		movs	r0, #1
 18517 0072 FFF7FEFF 		bl	RS485_CTS_Write
2639:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18518              		.loc 1 2639 0
 18519 0076 0020     		movs	r0, #0
 18520 0078 FFF7FEFF 		bl	RS485_CTS_Write
2640:..\src/command_processing.c **** }
 18521              		.loc 1 2640 0
 18522 007c 00BF     		nop
 18523 007e 1037     		adds	r7, r7, #16
 18524              		.cfi_def_cfa_offset 8
 18525 0080 BD46     		mov	sp, r7
 18526              		.cfi_def_cfa_register 13
 18527              		@ sp needed
 18528 0082 80BD     		pop	{r7, pc}
 18529              		.cfi_endproc
 18530              	.LFE78:
 18531              		.size	commWrite_old_id, .-commWrite_old_id
 18532              		.section	.text.commWrite,"ax",%progbits
 18533              		.align	2
 18534              		.global	commWrite
 18535              		.thumb
 18536              		.thumb_func
 18537              		.type	commWrite, %function
 18538              	commWrite:
 18539              	.LFB79:
2641:..\src/command_processing.c **** 
2642:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2643:..\src/command_processing.c **** {
 18540              		.loc 1 2643 0
 18541              		.cfi_startproc
 18542              		@ args = 0, pretend = 0, frame = 16
 18543              		@ frame_needed = 1, uses_anonymous_args = 0
 18544 0000 80B5     		push	{r7, lr}
 18545              		.cfi_def_cfa_offset 8
 18546              		.cfi_offset 7, -8
 18547              		.cfi_offset 14, -4
 18548 0002 84B0     		sub	sp, sp, #16
 18549              		.cfi_def_cfa_offset 24
 18550 0004 00AF     		add	r7, sp, #0
 18551              		.cfi_def_cfa_register 7
 18552 0006 7860     		str	r0, [r7, #4]
 18553 0008 0B46     		mov	r3, r1
 18554 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2644:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2645:..\src/command_processing.c **** 
2646:..\src/command_processing.c ****     // frame - start
2647:..\src/command_processing.c ****     UART_RS485_PutChar(':');
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 412


 18555              		.loc 1 2647 0
 18556 000c 3A20     		movs	r0, #58
 18557 000e FFF7FEFF 		bl	UART_RS485_PutChar
2648:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18558              		.loc 1 2648 0
 18559 0012 3A20     		movs	r0, #58
 18560 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2649:..\src/command_processing.c ****     // frame - ID
2650:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 18561              		.loc 1 2650 0
 18562 0018 1A4B     		ldr	r3, .L745
 18563 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18564 001e 1846     		mov	r0, r3
 18565 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2651:..\src/command_processing.c ****     // frame - length
2652:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18566              		.loc 1 2652 0
 18567 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18568 0026 DBB2     		uxtb	r3, r3
 18569 0028 1846     		mov	r0, r3
 18570 002a FFF7FEFF 		bl	UART_RS485_PutChar
2653:..\src/command_processing.c ****     // frame - packet data
2654:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18571              		.loc 1 2654 0
 18572 002e 0023     		movs	r3, #0
 18573 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18574 0032 09E0     		b	.L741
 18575              	.L742:
2655:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18576              		.loc 1 2655 0 discriminator 3
 18577 0034 FB89     		ldrh	r3, [r7, #14]
 18578 0036 7A68     		ldr	r2, [r7, #4]
 18579 0038 1344     		add	r3, r3, r2
 18580 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18581 003c 1846     		mov	r0, r3
 18582 003e FFF7FEFF 		bl	UART_RS485_PutChar
2654:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18583              		.loc 1 2654 0 discriminator 3
 18584 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18585 0044 0133     		adds	r3, r3, #1
 18586 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18587              	.L741:
2654:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18588              		.loc 1 2654 0 is_stmt 0 discriminator 1
 18589 0048 FA89     		ldrh	r2, [r7, #14]
 18590 004a 7B88     		ldrh	r3, [r7, #2]
 18591 004c 9A42     		cmp	r2, r3
 18592 004e F1D3     		bcc	.L742
2656:..\src/command_processing.c ****     }
2657:..\src/command_processing.c **** 
2658:..\src/command_processing.c ****     index = 0;
 18593              		.loc 1 2658 0 is_stmt 1
 18594 0050 0023     		movs	r3, #0
 18595 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2659:..\src/command_processing.c **** 
2660:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18596              		.loc 1 2660 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 413


 18597 0054 00BF     		nop
 18598              	.L744:
 18599              		.loc 1 2660 0 is_stmt 0 discriminator 2
 18600 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18601 005a 0346     		mov	r3, r0
 18602 005c 03F00103 		and	r3, r3, #1
 18603 0060 002B     		cmp	r3, #0
 18604 0062 05D1     		bne	.L743
 18605              		.loc 1 2660 0 discriminator 1
 18606 0064 FB89     		ldrh	r3, [r7, #14]
 18607 0066 5A1C     		adds	r2, r3, #1
 18608 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18609 006a B3F57A7F 		cmp	r3, #1000
 18610 006e F2D9     		bls	.L744
 18611              	.L743:
2661:..\src/command_processing.c **** 
2662:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18612              		.loc 1 2662 0 is_stmt 1
 18613 0070 0120     		movs	r0, #1
 18614 0072 FFF7FEFF 		bl	RS485_CTS_Write
2663:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18615              		.loc 1 2663 0
 18616 0076 0020     		movs	r0, #0
 18617 0078 FFF7FEFF 		bl	RS485_CTS_Write
2664:..\src/command_processing.c **** }
 18618              		.loc 1 2664 0
 18619 007c 00BF     		nop
 18620 007e 1037     		adds	r7, r7, #16
 18621              		.cfi_def_cfa_offset 8
 18622 0080 BD46     		mov	sp, r7
 18623              		.cfi_def_cfa_register 13
 18624              		@ sp needed
 18625 0082 80BD     		pop	{r7, pc}
 18626              	.L746:
 18627              		.align	2
 18628              	.L745:
 18629 0084 00000000 		.word	g_mem
 18630              		.cfi_endproc
 18631              	.LFE79:
 18632              		.size	commWrite, .-commWrite
 18633              		.section	.text.commWrite_to_cuff,"ax",%progbits
 18634              		.align	2
 18635              		.global	commWrite_to_cuff
 18636              		.thumb
 18637              		.thumb_func
 18638              		.type	commWrite_to_cuff, %function
 18639              	commWrite_to_cuff:
 18640              	.LFB80:
2665:..\src/command_processing.c **** 
2666:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
2667:..\src/command_processing.c **** {
 18641              		.loc 1 2667 0
 18642              		.cfi_startproc
 18643              		@ args = 0, pretend = 0, frame = 16
 18644              		@ frame_needed = 1, uses_anonymous_args = 0
 18645 0000 80B5     		push	{r7, lr}
 18646              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 414


 18647              		.cfi_offset 7, -8
 18648              		.cfi_offset 14, -4
 18649 0002 84B0     		sub	sp, sp, #16
 18650              		.cfi_def_cfa_offset 24
 18651 0004 00AF     		add	r7, sp, #0
 18652              		.cfi_def_cfa_register 7
 18653 0006 7860     		str	r0, [r7, #4]
 18654 0008 0B46     		mov	r3, r1
 18655 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2668:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2669:..\src/command_processing.c **** 
2670:..\src/command_processing.c ****     // frame - start
2671:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18656              		.loc 1 2671 0
 18657 000c 3A20     		movs	r0, #58
 18658 000e FFF7FEFF 		bl	UART_RS485_PutChar
2672:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18659              		.loc 1 2672 0
 18660 0012 3A20     		movs	r0, #58
 18661 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2673:..\src/command_processing.c ****     // frame - ID
2674:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id - 1);
 18662              		.loc 1 2674 0
 18663 0018 184B     		ldr	r3, .L753
 18664 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18665 001e 013B     		subs	r3, r3, #1
 18666 0020 DBB2     		uxtb	r3, r3
 18667 0022 1846     		mov	r0, r3
 18668 0024 FFF7FEFF 		bl	UART_RS485_PutChar
2675:..\src/command_processing.c ****     // frame - length
2676:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18669              		.loc 1 2676 0
 18670 0028 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18671 002a DBB2     		uxtb	r3, r3
 18672 002c 1846     		mov	r0, r3
 18673 002e FFF7FEFF 		bl	UART_RS485_PutChar
2677:..\src/command_processing.c ****     // frame - packet data
2678:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18674              		.loc 1 2678 0
 18675 0032 0023     		movs	r3, #0
 18676 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 18677 0036 09E0     		b	.L748
 18678              	.L749:
2679:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18679              		.loc 1 2679 0 discriminator 3
 18680 0038 FB89     		ldrh	r3, [r7, #14]
 18681 003a 7A68     		ldr	r2, [r7, #4]
 18682 003c 1344     		add	r3, r3, r2
 18683 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18684 0040 1846     		mov	r0, r3
 18685 0042 FFF7FEFF 		bl	UART_RS485_PutChar
2678:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18686              		.loc 1 2678 0 discriminator 3
 18687 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18688 0048 0133     		adds	r3, r3, #1
 18689 004a FB81     		strh	r3, [r7, #14]	@ movhi
 18690              	.L748:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 415


2678:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18691              		.loc 1 2678 0 is_stmt 0 discriminator 1
 18692 004c FA89     		ldrh	r2, [r7, #14]
 18693 004e 7B88     		ldrh	r3, [r7, #2]
 18694 0050 9A42     		cmp	r2, r3
 18695 0052 F1D3     		bcc	.L749
2680:..\src/command_processing.c ****     }
2681:..\src/command_processing.c **** 
2682:..\src/command_processing.c ****     index = 0;
 18696              		.loc 1 2682 0 is_stmt 1
 18697 0054 0023     		movs	r3, #0
 18698 0056 FB81     		strh	r3, [r7, #14]	@ movhi
2683:..\src/command_processing.c **** 
2684:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18699              		.loc 1 2684 0
 18700 0058 00BF     		nop
 18701              	.L751:
 18702              		.loc 1 2684 0 is_stmt 0 discriminator 2
 18703 005a FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18704 005e 0346     		mov	r3, r0
 18705 0060 03F00103 		and	r3, r3, #1
 18706 0064 002B     		cmp	r3, #0
 18707 0066 05D1     		bne	.L752
 18708              		.loc 1 2684 0 discriminator 1
 18709 0068 FB89     		ldrh	r3, [r7, #14]
 18710 006a 5A1C     		adds	r2, r3, #1
 18711 006c FA81     		strh	r2, [r7, #14]	@ movhi
 18712 006e B3F57A7F 		cmp	r3, #1000
 18713 0072 F2D9     		bls	.L751
 18714              	.L752:
2685:..\src/command_processing.c **** }
 18715              		.loc 1 2685 0 is_stmt 1
 18716 0074 00BF     		nop
 18717 0076 1037     		adds	r7, r7, #16
 18718              		.cfi_def_cfa_offset 8
 18719 0078 BD46     		mov	sp, r7
 18720              		.cfi_def_cfa_register 13
 18721              		@ sp needed
 18722 007a 80BD     		pop	{r7, pc}
 18723              	.L754:
 18724              		.align	2
 18725              	.L753:
 18726 007c 00000000 		.word	g_mem
 18727              		.cfi_endproc
 18728              	.LFE80:
 18729              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 18730              		.section	.text.LCRChecksum,"ax",%progbits
 18731              		.align	2
 18732              		.global	LCRChecksum
 18733              		.thumb
 18734              		.thumb_func
 18735              		.type	LCRChecksum, %function
 18736              	LCRChecksum:
 18737              	.LFB81:
2686:..\src/command_processing.c **** 
2687:..\src/command_processing.c **** //==============================================================================
2688:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 416


2689:..\src/command_processing.c **** //==============================================================================
2690:..\src/command_processing.c **** 
2691:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2692:..\src/command_processing.c **** 
2693:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 18738              		.loc 1 2693 0
 18739              		.cfi_startproc
 18740              		@ args = 0, pretend = 0, frame = 16
 18741              		@ frame_needed = 1, uses_anonymous_args = 0
 18742              		@ link register save eliminated.
 18743 0000 80B4     		push	{r7}
 18744              		.cfi_def_cfa_offset 4
 18745              		.cfi_offset 7, -4
 18746 0002 85B0     		sub	sp, sp, #20
 18747              		.cfi_def_cfa_offset 24
 18748 0004 00AF     		add	r7, sp, #0
 18749              		.cfi_def_cfa_register 7
 18750 0006 7860     		str	r0, [r7, #4]
 18751 0008 0B46     		mov	r3, r1
 18752 000a FB70     		strb	r3, [r7, #3]
2694:..\src/command_processing.c ****     
2695:..\src/command_processing.c ****     uint8 CYDATA i;
2696:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 18753              		.loc 1 2696 0
 18754 000c 0023     		movs	r3, #0
 18755 000e BB73     		strb	r3, [r7, #14]
2697:..\src/command_processing.c ****     
2698:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 18756              		.loc 1 2698 0
 18757 0010 0023     		movs	r3, #0
 18758 0012 FB73     		strb	r3, [r7, #15]
 18759 0014 09E0     		b	.L756
 18760              	.L757:
2699:..\src/command_processing.c ****        checksum ^= data_array[i];
 18761              		.loc 1 2699 0 discriminator 3
 18762 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 18763 0018 7A68     		ldr	r2, [r7, #4]
 18764 001a 1344     		add	r3, r3, r2
 18765 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 18766 001e BB7B     		ldrb	r3, [r7, #14]
 18767 0020 5340     		eors	r3, r3, r2
 18768 0022 BB73     		strb	r3, [r7, #14]
2698:..\src/command_processing.c ****        checksum ^= data_array[i];
 18769              		.loc 1 2698 0 discriminator 3
 18770 0024 FB7B     		ldrb	r3, [r7, #15]
 18771 0026 0133     		adds	r3, r3, #1
 18772 0028 FB73     		strb	r3, [r7, #15]
 18773              	.L756:
2698:..\src/command_processing.c ****        checksum ^= data_array[i];
 18774              		.loc 1 2698 0 is_stmt 0 discriminator 1
 18775 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 18776 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18777 002e 9A42     		cmp	r2, r3
 18778 0030 F1D3     		bcc	.L757
2700:..\src/command_processing.c ****   
2701:..\src/command_processing.c ****     return checksum;
 18779              		.loc 1 2701 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 417


 18780 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2702:..\src/command_processing.c **** }
 18781              		.loc 1 2702 0
 18782 0034 1846     		mov	r0, r3
 18783 0036 1437     		adds	r7, r7, #20
 18784              		.cfi_def_cfa_offset 4
 18785 0038 BD46     		mov	sp, r7
 18786              		.cfi_def_cfa_register 13
 18787              		@ sp needed
 18788 003a 80BC     		pop	{r7}
 18789              		.cfi_restore 7
 18790              		.cfi_def_cfa_offset 0
 18791 003c 7047     		bx	lr
 18792              		.cfi_endproc
 18793              	.LFE81:
 18794              		.size	LCRChecksum, .-LCRChecksum
 18795 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 18796              		.align	2
 18797              		.global	sendAcknowledgment
 18798              		.thumb
 18799              		.thumb_func
 18800              		.type	sendAcknowledgment, %function
 18801              	sendAcknowledgment:
 18802              	.LFB82:
2703:..\src/command_processing.c **** 
2704:..\src/command_processing.c **** 
2705:..\src/command_processing.c **** //==============================================================================
2706:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2707:..\src/command_processing.c **** //==============================================================================
2708:..\src/command_processing.c **** 
2709:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 18803              		.loc 1 2709 0
 18804              		.cfi_startproc
 18805              		@ args = 0, pretend = 0, frame = 16
 18806              		@ frame_needed = 1, uses_anonymous_args = 0
 18807 0000 80B5     		push	{r7, lr}
 18808              		.cfi_def_cfa_offset 8
 18809              		.cfi_offset 7, -8
 18810              		.cfi_offset 14, -4
 18811 0002 84B0     		sub	sp, sp, #16
 18812              		.cfi_def_cfa_offset 24
 18813 0004 00AF     		add	r7, sp, #0
 18814              		.cfi_def_cfa_register 7
 18815 0006 0346     		mov	r3, r0
 18816 0008 FB71     		strb	r3, [r7, #7]
2710:..\src/command_processing.c ****     int packet_lenght = 2;
 18817              		.loc 1 2710 0
 18818 000a 0223     		movs	r3, #2
 18819 000c FB60     		str	r3, [r7, #12]
2711:..\src/command_processing.c ****     uint8 packet_data[2];
2712:..\src/command_processing.c **** 
2713:..\src/command_processing.c ****     packet_data[0] = value;
 18820              		.loc 1 2713 0
 18821 000e FB79     		ldrb	r3, [r7, #7]
 18822 0010 3B72     		strb	r3, [r7, #8]
2714:..\src/command_processing.c ****     packet_data[1] = value;
 18823              		.loc 1 2714 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 418


 18824 0012 FB79     		ldrb	r3, [r7, #7]
 18825 0014 7B72     		strb	r3, [r7, #9]
2715:..\src/command_processing.c **** 
2716:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 18826              		.loc 1 2716 0
 18827 0016 FB68     		ldr	r3, [r7, #12]
 18828 0018 9AB2     		uxth	r2, r3
 18829 001a 07F10803 		add	r3, r7, #8
 18830 001e 1146     		mov	r1, r2
 18831 0020 1846     		mov	r0, r3
 18832 0022 FFF7FEFF 		bl	commWrite
2717:..\src/command_processing.c **** }
 18833              		.loc 1 2717 0
 18834 0026 00BF     		nop
 18835 0028 1037     		adds	r7, r7, #16
 18836              		.cfi_def_cfa_offset 8
 18837 002a BD46     		mov	sp, r7
 18838              		.cfi_def_cfa_register 13
 18839              		@ sp needed
 18840 002c 80BD     		pop	{r7, pc}
 18841              		.cfi_endproc
 18842              	.LFE82:
 18843              		.size	sendAcknowledgment, .-sendAcknowledgment
 18844 002e 00BF     		.section	.text.memStore,"ax",%progbits
 18845              		.align	2
 18846              		.global	memStore
 18847              		.thumb
 18848              		.thumb_func
 18849              		.type	memStore, %function
 18850              	memStore:
 18851              	.LFB83:
2718:..\src/command_processing.c **** 
2719:..\src/command_processing.c **** //==============================================================================
2720:..\src/command_processing.c **** //                                                                  STORE MEMORY
2721:..\src/command_processing.c **** //==============================================================================
2722:..\src/command_processing.c **** 
2723:..\src/command_processing.c **** 
2724:..\src/command_processing.c **** uint8 memStore(int displacement)
2725:..\src/command_processing.c **** {
 18852              		.loc 1 2725 0
 18853              		.cfi_startproc
 18854              		@ args = 0, pretend = 0, frame = 24
 18855              		@ frame_needed = 1, uses_anonymous_args = 0
 18856 0000 80B5     		push	{r7, lr}
 18857              		.cfi_def_cfa_offset 8
 18858              		.cfi_offset 7, -8
 18859              		.cfi_offset 14, -4
 18860 0002 86B0     		sub	sp, sp, #24
 18861              		.cfi_def_cfa_offset 32
 18862 0004 00AF     		add	r7, sp, #0
 18863              		.cfi_def_cfa_register 7
 18864 0006 7860     		str	r0, [r7, #4]
2726:..\src/command_processing.c ****     int i;  // iterator
2727:..\src/command_processing.c ****     uint8 writeStatus;
2728:..\src/command_processing.c ****     int pages;
2729:..\src/command_processing.c ****     uint8 ret_val = 1;
 18865              		.loc 1 2729 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 419


 18866 0008 0123     		movs	r3, #1
 18867 000a FB74     		strb	r3, [r7, #19]
2730:..\src/command_processing.c **** 
2731:..\src/command_processing.c ****     // Disable Interrupt
2732:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 18868              		.loc 1 2732 0
 18869 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2733:..\src/command_processing.c **** 
2734:..\src/command_processing.c ****     // Stop motor
2735:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 18870              		.loc 1 2735 0
 18871 0010 0020     		movs	r0, #0
 18872 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2736:..\src/command_processing.c **** 
2737:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2738:..\src/command_processing.c ****     CySetTemp();
 18873              		.loc 1 2738 0
 18874 0016 FFF7FEFF 		bl	CySetTemp
2739:..\src/command_processing.c **** 
2740:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 18875              		.loc 1 2740 0
 18876 001a 1D4A     		ldr	r2, .L766
 18877 001c 1D4B     		ldr	r3, .L766+4
 18878 001e 1046     		mov	r0, r2
 18879 0020 1946     		mov	r1, r3
 18880 0022 4FF42C73 		mov	r3, #688
 18881 0026 1A46     		mov	r2, r3
 18882 0028 FFF7FEFF 		bl	memcpy
2741:..\src/command_processing.c **** 
2742:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 18883              		.loc 1 2742 0
 18884 002c 2B23     		movs	r3, #43
 18885 002e FB60     		str	r3, [r7, #12]
2743:..\src/command_processing.c **** 
2744:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 18886              		.loc 1 2744 0
 18887 0030 0023     		movs	r3, #0
 18888 0032 7B61     		str	r3, [r7, #20]
 18889 0034 18E0     		b	.L761
 18890              	.L764:
2745:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18891              		.loc 1 2745 0
 18892 0036 7B69     		ldr	r3, [r7, #20]
 18893 0038 1B01     		lsls	r3, r3, #4
 18894 003a 1A46     		mov	r2, r3
 18895 003c 154B     		ldr	r3, .L766+4
 18896 003e D018     		adds	r0, r2, r3
 18897 0040 7B69     		ldr	r3, [r7, #20]
 18898 0042 DAB2     		uxtb	r2, r3
 18899 0044 7B68     		ldr	r3, [r7, #4]
 18900 0046 DBB2     		uxtb	r3, r3
 18901 0048 1344     		add	r3, r3, r2
 18902 004a DBB2     		uxtb	r3, r3
 18903 004c 1946     		mov	r1, r3
 18904 004e FFF7FEFF 		bl	EEPROM_Write
 18905 0052 0346     		mov	r3, r0
 18906 0054 FB72     		strb	r3, [r7, #11]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 420


2746:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 18907              		.loc 1 2746 0
 18908 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 18909 0058 002B     		cmp	r3, #0
 18910 005a 02D0     		beq	.L762
2747:..\src/command_processing.c ****             ret_val = 0;
 18911              		.loc 1 2747 0
 18912 005c 0023     		movs	r3, #0
 18913 005e FB74     		strb	r3, [r7, #19]
2748:..\src/command_processing.c ****             break;
 18914              		.loc 1 2748 0
 18915 0060 06E0     		b	.L763
 18916              	.L762:
2744:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18917              		.loc 1 2744 0 discriminator 2
 18918 0062 7B69     		ldr	r3, [r7, #20]
 18919 0064 0133     		adds	r3, r3, #1
 18920 0066 7B61     		str	r3, [r7, #20]
 18921              	.L761:
2744:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18922              		.loc 1 2744 0 is_stmt 0 discriminator 1
 18923 0068 7A69     		ldr	r2, [r7, #20]
 18924 006a FB68     		ldr	r3, [r7, #12]
 18925 006c 9A42     		cmp	r2, r3
 18926 006e E2DB     		blt	.L764
 18927              	.L763:
2749:..\src/command_processing.c ****         }
2750:..\src/command_processing.c ****     }
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 18928              		.loc 1 2752 0 is_stmt 1
 18929 0070 084A     		ldr	r2, .L766+4
 18930 0072 074B     		ldr	r3, .L766
 18931 0074 1046     		mov	r0, r2
 18932 0076 1946     		mov	r1, r3
 18933 0078 4FF42C73 		mov	r3, #688
 18934 007c 1A46     		mov	r2, r3
 18935 007e FFF7FEFF 		bl	memcpy
2753:..\src/command_processing.c **** 
2754:..\src/command_processing.c ****     // Re-Enable Interrupt
2755:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 18936              		.loc 1 2755 0
 18937 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c ****     return ret_val;
 18938              		.loc 1 2757 0
 18939 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2758:..\src/command_processing.c **** }
 18940              		.loc 1 2758 0
 18941 0088 1846     		mov	r0, r3
 18942 008a 1837     		adds	r7, r7, #24
 18943              		.cfi_def_cfa_offset 8
 18944 008c BD46     		mov	sp, r7
 18945              		.cfi_def_cfa_register 13
 18946              		@ sp needed
 18947 008e 80BD     		pop	{r7, pc}
 18948              	.L767:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 421


 18949              		.align	2
 18950              	.L766:
 18951 0090 00000000 		.word	c_mem
 18952 0094 00000000 		.word	g_mem
 18953              		.cfi_endproc
 18954              	.LFE83:
 18955              		.size	memStore, .-memStore
 18956              		.section	.text.memRecall,"ax",%progbits
 18957              		.align	2
 18958              		.global	memRecall
 18959              		.thumb
 18960              		.thumb_func
 18961              		.type	memRecall, %function
 18962              	memRecall:
 18963              	.LFB84:
2759:..\src/command_processing.c **** 
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c **** //==============================================================================
2762:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2763:..\src/command_processing.c **** //==============================================================================
2764:..\src/command_processing.c **** 
2765:..\src/command_processing.c **** 
2766:..\src/command_processing.c **** void memRecall(void)
2767:..\src/command_processing.c **** {
 18964              		.loc 1 2767 0
 18965              		.cfi_startproc
 18966              		@ args = 0, pretend = 0, frame = 8
 18967              		@ frame_needed = 1, uses_anonymous_args = 0
 18968 0000 80B5     		push	{r7, lr}
 18969              		.cfi_def_cfa_offset 8
 18970              		.cfi_offset 7, -8
 18971              		.cfi_offset 14, -4
 18972 0002 82B0     		sub	sp, sp, #8
 18973              		.cfi_def_cfa_offset 16
 18974 0004 00AF     		add	r7, sp, #0
 18975              		.cfi_def_cfa_register 7
2768:..\src/command_processing.c ****     uint16 i;
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 18976              		.loc 1 2770 0
 18977 0006 0023     		movs	r3, #0
 18978 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 18979 000a 0CE0     		b	.L769
 18980              	.L770:
2771:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 18981              		.loc 1 2771 0 discriminator 3
 18982 000c FB88     		ldrh	r3, [r7, #6]
 18983 000e 184A     		ldr	r2, .L774
 18984 0010 1344     		add	r3, r3, r2
 18985 0012 184A     		ldr	r2, .L774+4
 18986 0014 1168     		ldr	r1, [r2]
 18987 0016 FA88     		ldrh	r2, [r7, #6]
 18988 0018 0A44     		add	r2, r2, r1
 18989 001a 1278     		ldrb	r2, [r2]
 18990 001c D2B2     		uxtb	r2, r2
 18991 001e 1A70     		strb	r2, [r3]
2770:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 422


 18992              		.loc 1 2770 0 discriminator 3
 18993 0020 FB88     		ldrh	r3, [r7, #6]
 18994 0022 0133     		adds	r3, r3, #1
 18995 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 18996              	.L769:
2770:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 18997              		.loc 1 2770 0 is_stmt 0 discriminator 1
 18998 0026 FB88     		ldrh	r3, [r7, #6]
 18999 0028 B3F52C7F 		cmp	r3, #688
 19000 002c EED3     		bcc	.L770
2772:..\src/command_processing.c ****     }
2773:..\src/command_processing.c ****     
2774:..\src/command_processing.c ****     // Recall saved user_emg structure
2775:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 19001              		.loc 1 2775 0 is_stmt 1
 19002 002e 104B     		ldr	r3, .L774
 19003 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19004 0034 5B01     		lsls	r3, r3, #5
 19005 0036 03F51273 		add	r3, r3, #584
 19006 003a 0D4A     		ldr	r2, .L774
 19007 003c 1344     		add	r3, r3, r2
 19008 003e 1022     		movs	r2, #16
 19009 0040 1946     		mov	r1, r3
 19010 0042 0D48     		ldr	r0, .L774+8
 19011 0044 FFF7FEFF 		bl	memcpy
2776:..\src/command_processing.c **** 
2777:..\src/command_processing.c ****     //check for initialization
2778:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19012              		.loc 1 2778 0
 19013 0048 094B     		ldr	r3, .L774
 19014 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19015 004c 002B     		cmp	r3, #0
 19016 004e 02D1     		bne	.L771
2779:..\src/command_processing.c ****         memRestore();
 19017              		.loc 1 2779 0
 19018 0050 FFF7FEFF 		bl	memRestore
2780:..\src/command_processing.c ****     } else {
2781:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2782:..\src/command_processing.c ****     }        
2783:..\src/command_processing.c **** }
 19019              		.loc 1 2783 0
 19020 0054 08E0     		b	.L773
 19021              	.L771:
2781:..\src/command_processing.c ****     }        
 19022              		.loc 1 2781 0
 19023 0056 094A     		ldr	r2, .L774+12
 19024 0058 054B     		ldr	r3, .L774
 19025 005a 1046     		mov	r0, r2
 19026 005c 1946     		mov	r1, r3
 19027 005e 4FF42C73 		mov	r3, #688
 19028 0062 1A46     		mov	r2, r3
 19029 0064 FFF7FEFF 		bl	memcpy
 19030              	.L773:
 19031              		.loc 1 2783 0
 19032 0068 00BF     		nop
 19033 006a 0837     		adds	r7, r7, #8
 19034              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 423


 19035 006c BD46     		mov	sp, r7
 19036              		.cfi_def_cfa_register 13
 19037              		@ sp needed
 19038 006e 80BD     		pop	{r7, pc}
 19039              	.L775:
 19040              		.align	2
 19041              	.L774:
 19042 0070 00000000 		.word	g_mem
 19043 0074 00000000 		.word	EEPROM_ADDR
 19044 0078 F0010000 		.word	g_mem+496
 19045 007c 00000000 		.word	c_mem
 19046              		.cfi_endproc
 19047              	.LFE84:
 19048              		.size	memRecall, .-memRecall
 19049              		.section	.text.memRestore,"ax",%progbits
 19050              		.align	2
 19051              		.global	memRestore
 19052              		.thumb
 19053              		.thumb_func
 19054              		.type	memRestore, %function
 19055              	memRestore:
 19056              	.LFB85:
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c **** //==============================================================================
2787:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2788:..\src/command_processing.c **** //==============================================================================
2789:..\src/command_processing.c **** 
2790:..\src/command_processing.c **** 
2791:..\src/command_processing.c **** uint8 memRestore(void) {
 19057              		.loc 1 2791 0
 19058              		.cfi_startproc
 19059              		@ args = 0, pretend = 0, frame = 8
 19060              		@ frame_needed = 1, uses_anonymous_args = 0
 19061 0000 80B5     		push	{r7, lr}
 19062              		.cfi_def_cfa_offset 8
 19063              		.cfi_offset 7, -8
 19064              		.cfi_offset 14, -4
 19065 0002 82B0     		sub	sp, sp, #8
 19066              		.cfi_def_cfa_offset 16
 19067 0004 00AF     		add	r7, sp, #0
 19068              		.cfi_def_cfa_register 7
2792:..\src/command_processing.c ****     uint16 i;
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19069              		.loc 1 2794 0
 19070 0006 0023     		movs	r3, #0
 19071 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19072 000a 0EE0     		b	.L777
 19073              	.L778:
2795:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19074              		.loc 1 2795 0 discriminator 3
 19075 000c FB88     		ldrh	r3, [r7, #6]
 19076 000e 114A     		ldr	r2, .L781
 19077 0010 1344     		add	r3, r3, r2
 19078 0012 114A     		ldr	r2, .L781+4
 19079 0014 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 424


 19080 0016 FA88     		ldrh	r2, [r7, #6]
 19081 0018 02F54872 		add	r2, r2, #800
 19082 001c 0A44     		add	r2, r2, r1
 19083 001e 1278     		ldrb	r2, [r2]
 19084 0020 D2B2     		uxtb	r2, r2
 19085 0022 1A70     		strb	r2, [r3]
2794:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19086              		.loc 1 2794 0 discriminator 3
 19087 0024 FB88     		ldrh	r3, [r7, #6]
 19088 0026 0133     		adds	r3, r3, #1
 19089 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 19090              	.L777:
2794:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19091              		.loc 1 2794 0 is_stmt 0 discriminator 1
 19092 002a FB88     		ldrh	r3, [r7, #6]
 19093 002c B3F52C7F 		cmp	r3, #688
 19094 0030 ECD3     		bcc	.L778
2796:..\src/command_processing.c ****     }
2797:..\src/command_processing.c **** 
2798:..\src/command_processing.c ****     //check for initialization
2799:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19095              		.loc 1 2799 0 is_stmt 1
 19096 0032 084B     		ldr	r3, .L781
 19097 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19098 0036 002B     		cmp	r3, #0
 19099 0038 03D1     		bne	.L779
2800:..\src/command_processing.c ****         return memInit();
 19100              		.loc 1 2800 0
 19101 003a FFF7FEFF 		bl	memInit
 19102 003e 0346     		mov	r3, r0
 19103 0040 03E0     		b	.L780
 19104              	.L779:
2801:..\src/command_processing.c ****     } else {
2802:..\src/command_processing.c ****         return memStore(0);
 19105              		.loc 1 2802 0
 19106 0042 0020     		movs	r0, #0
 19107 0044 FFF7FEFF 		bl	memStore
 19108 0048 0346     		mov	r3, r0
 19109              	.L780:
2803:..\src/command_processing.c ****     }  
2804:..\src/command_processing.c **** }
 19110              		.loc 1 2804 0
 19111 004a 1846     		mov	r0, r3
 19112 004c 0837     		adds	r7, r7, #8
 19113              		.cfi_def_cfa_offset 8
 19114 004e BD46     		mov	sp, r7
 19115              		.cfi_def_cfa_register 13
 19116              		@ sp needed
 19117 0050 80BD     		pop	{r7, pc}
 19118              	.L782:
 19119 0052 00BF     		.align	2
 19120              	.L781:
 19121 0054 00000000 		.word	g_mem
 19122 0058 00000000 		.word	EEPROM_ADDR
 19123              		.cfi_endproc
 19124              	.LFE85:
 19125              		.size	memRestore, .-memRestore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 425


 19126              		.section	.rodata
 19127 194f 00       		.align	2
 19128              	.LC254:
 19129 1950 47454E30 		.ascii	"GEN001\000"
 19129      303100
 19130              		.section	.text.memInit,"ax",%progbits
 19131              		.align	2
 19132              		.global	memInit
 19133              		.thumb
 19134              		.thumb_func
 19135              		.type	memInit, %function
 19136              	memInit:
 19137              	.LFB86:
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c **** //==============================================================================
2807:..\src/command_processing.c **** //                                                                   MEMORY INIT
2808:..\src/command_processing.c **** //==============================================================================
2809:..\src/command_processing.c **** 
2810:..\src/command_processing.c **** uint8 memInit(void)
2811:..\src/command_processing.c **** {
 19138              		.loc 1 2811 0
 19139              		.cfi_startproc
 19140              		@ args = 0, pretend = 0, frame = 8
 19141              		@ frame_needed = 1, uses_anonymous_args = 0
 19142 0000 80B5     		push	{r7, lr}
 19143              		.cfi_def_cfa_offset 8
 19144              		.cfi_offset 7, -8
 19145              		.cfi_offset 14, -4
 19146 0002 82B0     		sub	sp, sp, #8
 19147              		.cfi_def_cfa_offset 16
 19148 0004 00AF     		add	r7, sp, #0
 19149              		.cfi_def_cfa_register 7
2812:..\src/command_processing.c ****     uint8 i, j;
2813:..\src/command_processing.c **** 
2814:..\src/command_processing.c ****     //initialize memory settings
2815:..\src/command_processing.c ****     for (i=0; i<15; i++){
 19150              		.loc 1 2815 0
 19151 0006 0023     		movs	r3, #0
 19152 0008 FB71     		strb	r3, [r7, #7]
 19153 000a 07E0     		b	.L784
 19154              	.L785:
2816:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19155              		.loc 1 2816 0 discriminator 3
 19156 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19157 000e B44A     		ldr	r2, .L810
 19158 0010 1344     		add	r3, r3, r2
 19159 0012 0022     		movs	r2, #0
 19160 0014 5A70     		strb	r2, [r3, #1]
2815:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19161              		.loc 1 2815 0 discriminator 3
 19162 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19163 0018 0133     		adds	r3, r3, #1
 19164 001a FB71     		strb	r3, [r7, #7]
 19165              	.L784:
2815:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19166              		.loc 1 2815 0 is_stmt 0 discriminator 1
 19167 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 426


 19168 001e 0E2B     		cmp	r3, #14
 19169 0020 F4D9     		bls	.L785
2817:..\src/command_processing.c ****     }
2818:..\src/command_processing.c ****         
2819:..\src/command_processing.c ****     // DEV STRUCT
2820:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 19170              		.loc 1 2820 0 is_stmt 1
 19171 0022 AF4B     		ldr	r3, .L810
 19172 0024 0122     		movs	r2, #1
 19173 0026 83F8A020 		strb	r2, [r3, #160]
2821:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 19174              		.loc 1 2821 0
 19175 002a AD4B     		ldr	r3, .L810
 19176 002c 0022     		movs	r2, #0
 19177 002e 83F8A720 		strb	r2, [r3, #167]
2822:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 19178              		.loc 1 2822 0
 19179 0032 AB4B     		ldr	r3, .L810
 19180 0034 0122     		movs	r2, #1
 19181 0036 83F8AC20 		strb	r2, [r3, #172]
2823:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 19182              		.loc 1 2823 0
 19183 003a A94B     		ldr	r3, .L810
 19184 003c 0022     		movs	r2, #0
 19185 003e 83F8A820 		strb	r2, [r3, #168]
2824:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 19186              		.loc 1 2824 0
 19187 0042 FFF7FEFF 		bl	reset_counters
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19188              		.loc 1 2825 0
 19189 0046 0023     		movs	r3, #0
 19190 0048 FB71     		strb	r3, [r7, #7]
 19191 004a 08E0     		b	.L786
 19192              	.L787:
2826:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 19193              		.loc 1 2826 0 discriminator 3
 19194 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19195 004e A44A     		ldr	r2, .L810
 19196 0050 1344     		add	r3, r3, r2
 19197 0052 0022     		movs	r2, #0
 19198 0054 83F86020 		strb	r2, [r3, #96]
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19199              		.loc 1 2825 0 discriminator 3
 19200 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19201 005a 0133     		adds	r3, r3, #1
 19202 005c FB71     		strb	r3, [r7, #7]
 19203              	.L786:
2825:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19204              		.loc 1 2825 0 is_stmt 0 discriminator 1
 19205 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19206 0060 3F2B     		cmp	r3, #63
 19207 0062 F3D9     		bls	.L787
2827:..\src/command_processing.c ****     }
2828:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 19208              		.loc 1 2828 0 is_stmt 1
 19209 0064 9E4B     		ldr	r3, .L810
 19210 0066 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 427


 19211 0068 83F8A920 		strb	r2, [r3, #169]
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c ****     // MOTOR STRUCT
2831:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19212              		.loc 1 2831 0
 19213 006c 0023     		movs	r3, #0
 19214 006e FB71     		strb	r3, [r7, #7]
 19215 0070 15E1     		b	.L788
 19216              	.L791:
2832:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19217              		.loc 1 2832 0
 19218 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19219 0074 9A49     		ldr	r1, .L810
 19220 0076 1346     		mov	r3, r2
 19221 0078 DB00     		lsls	r3, r3, #3
 19222 007a 9B1A     		subs	r3, r3, r2
 19223 007c 1B01     		lsls	r3, r3, #4
 19224 007e 0B44     		add	r3, r3, r1
 19225 0080 B033     		adds	r3, r3, #176
 19226 0082 40F23942 		movw	r2, #1081
 19227 0086 1A60     		str	r2, [r3]
2833:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 19228              		.loc 1 2833 0
 19229 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19230 008a 9549     		ldr	r1, .L810
 19231 008c 1346     		mov	r3, r2
 19232 008e DB00     		lsls	r3, r3, #3
 19233 0090 9B1A     		subs	r3, r3, r2
 19234 0092 1B01     		lsls	r3, r3, #4
 19235 0094 0B44     		add	r3, r3, r1
 19236 0096 B433     		adds	r3, r3, #180
 19237 0098 0022     		movs	r2, #0
 19238 009a 1A60     		str	r2, [r3]
2834:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 19239              		.loc 1 2834 0
 19240 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19241 009e 9049     		ldr	r1, .L810
 19242 00a0 1346     		mov	r3, r2
 19243 00a2 DB00     		lsls	r3, r3, #3
 19244 00a4 9B1A     		subs	r3, r3, r2
 19245 00a6 1B01     		lsls	r3, r3, #4
 19246 00a8 0B44     		add	r3, r3, r1
 19247 00aa B833     		adds	r3, r3, #184
 19248 00ac 4FF4E572 		mov	r2, #458
 19249 00b0 1A60     		str	r2, [r3]
2835:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 19250              		.loc 1 2835 0
 19251 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19252 00b4 8A49     		ldr	r1, .L810
 19253 00b6 1346     		mov	r3, r2
 19254 00b8 DB00     		lsls	r3, r3, #3
 19255 00ba 9B1A     		subs	r3, r3, r2
 19256 00bc 1B01     		lsls	r3, r3, #4
 19257 00be 0B44     		add	r3, r3, r1
 19258 00c0 BC33     		adds	r3, r3, #188
 19259 00c2 4FF48032 		mov	r2, #65536
 19260 00c6 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 428


2836:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 19261              		.loc 1 2836 0
 19262 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19263 00ca 8549     		ldr	r1, .L810
 19264 00cc 1346     		mov	r3, r2
 19265 00ce DB00     		lsls	r3, r3, #3
 19266 00d0 9B1A     		subs	r3, r3, r2
 19267 00d2 1B01     		lsls	r3, r3, #4
 19268 00d4 0B44     		add	r3, r3, r1
 19269 00d6 C033     		adds	r3, r3, #192
 19270 00d8 4122     		movs	r2, #65
 19271 00da 1A60     		str	r2, [r3]
2837:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 19272              		.loc 1 2837 0
 19273 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19274 00de 8049     		ldr	r1, .L810
 19275 00e0 1346     		mov	r3, r2
 19276 00e2 DB00     		lsls	r3, r3, #3
 19277 00e4 9B1A     		subs	r3, r3, r2
 19278 00e6 1B01     		lsls	r3, r3, #4
 19279 00e8 0B44     		add	r3, r3, r1
 19280 00ea C433     		adds	r3, r3, #196
 19281 00ec 0022     		movs	r2, #0
 19282 00ee 1A60     		str	r2, [r3]
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 19283              		.loc 1 2839 0
 19284 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19285 00f2 7B49     		ldr	r1, .L810
 19286 00f4 1346     		mov	r3, r2
 19287 00f6 DB00     		lsls	r3, r3, #3
 19288 00f8 9B1A     		subs	r3, r3, r2
 19289 00fa 1B01     		lsls	r3, r3, #4
 19290 00fc 0B44     		add	r3, r3, r1
 19291 00fe C833     		adds	r3, r3, #200
 19292 0100 41F69912 		movw	r2, #6553
 19293 0104 1A60     		str	r2, [r3]
2840:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 19294              		.loc 1 2840 0
 19295 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19296 0108 7549     		ldr	r1, .L810
 19297 010a 1346     		mov	r3, r2
 19298 010c DB00     		lsls	r3, r3, #3
 19299 010e 9B1A     		subs	r3, r3, r2
 19300 0110 1B01     		lsls	r3, r3, #4
 19301 0112 0B44     		add	r3, r3, r1
 19302 0114 CC33     		adds	r3, r3, #204
 19303 0116 0022     		movs	r2, #0
 19304 0118 1A60     		str	r2, [r3]
2841:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 19305              		.loc 1 2841 0
 19306 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19307 011c 7049     		ldr	r1, .L810
 19308 011e 1346     		mov	r3, r2
 19309 0120 DB00     		lsls	r3, r3, #3
 19310 0122 9B1A     		subs	r3, r3, r2
 19311 0124 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 429


 19312 0126 0B44     		add	r3, r3, r1
 19313 0128 D033     		adds	r3, r3, #208
 19314 012a 0022     		movs	r2, #0
 19315 012c 1A60     		str	r2, [r3]
2842:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 19316              		.loc 1 2842 0
 19317 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19318 0130 6B49     		ldr	r1, .L810
 19319 0132 1346     		mov	r3, r2
 19320 0134 DB00     		lsls	r3, r3, #3
 19321 0136 9B1A     		subs	r3, r3, r2
 19322 0138 1B01     		lsls	r3, r3, #4
 19323 013a 0B44     		add	r3, r3, r1
 19324 013c D433     		adds	r3, r3, #212
 19325 013e 44F6CC42 		movw	r2, #19660
 19326 0142 1A60     		str	r2, [r3]
2843:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 19327              		.loc 1 2843 0
 19328 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19329 0146 6649     		ldr	r1, .L810
 19330 0148 1346     		mov	r3, r2
 19331 014a DB00     		lsls	r3, r3, #3
 19332 014c 9B1A     		subs	r3, r3, r2
 19333 014e 1B01     		lsls	r3, r3, #4
 19334 0150 0B44     		add	r3, r3, r1
 19335 0152 D833     		adds	r3, r3, #216
 19336 0154 0D22     		movs	r2, #13
 19337 0156 1A60     		str	r2, [r3]
2844:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 19338              		.loc 1 2844 0
 19339 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19340 015a 6149     		ldr	r1, .L810
 19341 015c 1346     		mov	r3, r2
 19342 015e DB00     		lsls	r3, r3, #3
 19343 0160 9B1A     		subs	r3, r3, r2
 19344 0162 1B01     		lsls	r3, r3, #4
 19345 0164 0B44     		add	r3, r3, r1
 19346 0166 DC33     		adds	r3, r3, #220
 19347 0168 0022     		movs	r2, #0
 19348 016a 1A60     		str	r2, [r3]
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 19349              		.loc 1 2846 0
 19350 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19351 016e 5C49     		ldr	r1, .L810
 19352 0170 1346     		mov	r3, r2
 19353 0172 DB00     		lsls	r3, r3, #3
 19354 0174 9B1A     		subs	r3, r3, r2
 19355 0176 1B01     		lsls	r3, r3, #4
 19356 0178 0B44     		add	r3, r3, r1
 19357 017a E033     		adds	r3, r3, #224
 19358 017c 0122     		movs	r2, #1
 19359 017e 1A70     		strb	r2, [r3]
2847:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 19360              		.loc 1 2847 0
 19361 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19362 0182 5749     		ldr	r1, .L810
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 430


 19363 0184 1346     		mov	r3, r2
 19364 0186 DB00     		lsls	r3, r3, #3
 19365 0188 9B1A     		subs	r3, r3, r2
 19366 018a 1B01     		lsls	r3, r3, #4
 19367 018c 0B44     		add	r3, r3, r1
 19368 018e E133     		adds	r3, r3, #225
 19369 0190 0022     		movs	r2, #0
 19370 0192 1A70     		strb	r2, [r3]
2848:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 19371              		.loc 1 2848 0
 19372 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19373 0196 5249     		ldr	r1, .L810
 19374 0198 1346     		mov	r3, r2
 19375 019a DB00     		lsls	r3, r3, #3
 19376 019c 9B1A     		subs	r3, r3, r2
 19377 019e 1B01     		lsls	r3, r3, #4
 19378 01a0 0B44     		add	r3, r3, r1
 19379 01a2 E233     		adds	r3, r3, #226
 19380 01a4 0022     		movs	r2, #0
 19381 01a6 1A70     		strb	r2, [r3]
2849:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 19382              		.loc 1 2849 0
 19383 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19384 01aa 4D49     		ldr	r1, .L810
 19385 01ac 1346     		mov	r3, r2
 19386 01ae DB00     		lsls	r3, r3, #3
 19387 01b0 9B1A     		subs	r3, r3, r2
 19388 01b2 1B01     		lsls	r3, r3, #4
 19389 01b4 0B44     		add	r3, r3, r1
 19390 01b6 03F58773 		add	r3, r3, #270
 19391 01ba 0022     		movs	r2, #0
 19392 01bc 1A70     		strb	r2, [r3]
2850:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 19393              		.loc 1 2850 0
 19394 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19395 01c0 4749     		ldr	r1, .L810
 19396 01c2 1346     		mov	r3, r2
 19397 01c4 DB00     		lsls	r3, r3, #3
 19398 01c6 9B1A     		subs	r3, r3, r2
 19399 01c8 1B01     		lsls	r3, r3, #4
 19400 01ca 0B44     		add	r3, r3, r1
 19401 01cc 03F20F13 		addw	r3, r3, #271
 19402 01d0 0022     		movs	r2, #0
 19403 01d2 1A70     		strb	r2, [r3]
2851:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 19404              		.loc 1 2851 0
 19405 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19406 01d6 4249     		ldr	r1, .L810
 19407 01d8 1346     		mov	r3, r2
 19408 01da DB00     		lsls	r3, r3, #3
 19409 01dc 9B1A     		subs	r3, r3, r2
 19410 01de 1B01     		lsls	r3, r3, #4
 19411 01e0 0B44     		add	r3, r3, r1
 19412 01e2 F033     		adds	r3, r3, #240
 19413 01e4 0022     		movs	r2, #0
 19414 01e6 1A60     		str	r2, [r3]
2852:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 431


 19415              		.loc 1 2852 0
 19416 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19417 01ea 3D49     		ldr	r1, .L810
 19418 01ec 1346     		mov	r3, r2
 19419 01ee DB00     		lsls	r3, r3, #3
 19420 01f0 9B1A     		subs	r3, r3, r2
 19421 01f2 1B01     		lsls	r3, r3, #4
 19422 01f4 0B44     		add	r3, r3, r1
 19423 01f6 EC33     		adds	r3, r3, #236
 19424 01f8 0022     		movs	r2, #0
 19425 01fa 1A60     		str	r2, [r3]
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19426              		.loc 1 2853 0
 19427 01fc 0023     		movs	r3, #0
 19428 01fe BB71     		strb	r3, [r7, #6]
 19429 0200 10E0     		b	.L789
 19430              	.L790:
2854:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 19431              		.loc 1 2854 0 discriminator 3
 19432 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19433 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19434 0206 3648     		ldr	r0, .L810
 19435 0208 1346     		mov	r3, r2
 19436 020a DB00     		lsls	r3, r3, #3
 19437 020c 9B1A     		subs	r3, r3, r2
 19438 020e 9B00     		lsls	r3, r3, #2
 19439 0210 0B44     		add	r3, r3, r1
 19440 0212 3C33     		adds	r3, r3, #60
 19441 0214 9B00     		lsls	r3, r3, #2
 19442 0216 0344     		add	r3, r3, r0
 19443 0218 4FF00002 		mov	r2, #0
 19444 021c 5A60     		str	r2, [r3, #4]	@ float
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19445              		.loc 1 2853 0 discriminator 3
 19446 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19447 0220 0133     		adds	r3, r3, #1
 19448 0222 BB71     		strb	r3, [r7, #6]
 19449              	.L789:
2853:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19450              		.loc 1 2853 0 is_stmt 0 discriminator 1
 19451 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19452 0226 052B     		cmp	r3, #5
 19453 0228 EBD9     		bls	.L790
2855:..\src/command_processing.c ****         }
2856:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 19454              		.loc 1 2856 0 is_stmt 1 discriminator 2
 19455 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19456 022c 2C49     		ldr	r1, .L810
 19457 022e 1346     		mov	r3, r2
 19458 0230 DB00     		lsls	r3, r3, #3
 19459 0232 9B1A     		subs	r3, r3, r2
 19460 0234 1B01     		lsls	r3, r3, #4
 19461 0236 0B44     		add	r3, r3, r1
 19462 0238 03F58673 		add	r3, r3, #268
 19463 023c 40F2DC52 		movw	r2, #1500
 19464 0240 1A80     		strh	r2, [r3]	@ movhi
2857:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 432


 19465              		.loc 1 2857 0 discriminator 2
 19466 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19467 0244 2649     		ldr	r1, .L810
 19468 0246 1346     		mov	r3, r2
 19469 0248 DB00     		lsls	r3, r3, #3
 19470 024a 9B1A     		subs	r3, r3, r2
 19471 024c 1B01     		lsls	r3, r3, #4
 19472 024e 0B44     		add	r3, r3, r1
 19473 0250 03F58873 		add	r3, r3, #272
 19474 0254 FA79     		ldrb	r2, [r7, #7]
 19475 0256 1A70     		strb	r2, [r3]
2858:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 19476              		.loc 1 2858 0 discriminator 2
 19477 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19478 025a 2149     		ldr	r1, .L810
 19479 025c 1346     		mov	r3, r2
 19480 025e DB00     		lsls	r3, r3, #3
 19481 0260 9B1A     		subs	r3, r3, r2
 19482 0262 1B01     		lsls	r3, r3, #4
 19483 0264 0B44     		add	r3, r3, r1
 19484 0266 E333     		adds	r3, r3, #227
 19485 0268 0122     		movs	r2, #1
 19486 026a 1A70     		strb	r2, [r3]
2859:..\src/command_processing.c ****         
2860:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 19487              		.loc 1 2860 0 discriminator 2
 19488 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19489 026e 1C49     		ldr	r1, .L810
 19490 0270 1346     		mov	r3, r2
 19491 0272 DB00     		lsls	r3, r3, #3
 19492 0274 9B1A     		subs	r3, r3, r2
 19493 0276 1B01     		lsls	r3, r3, #4
 19494 0278 0B44     		add	r3, r3, r1
 19495 027a 03F21113 		addw	r3, r3, #273
 19496 027e 0122     		movs	r2, #1
 19497 0280 1A70     		strb	r2, [r3]
2861:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 19498              		.loc 1 2861 0 discriminator 2
 19499 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19500 0284 1649     		ldr	r1, .L810
 19501 0286 1346     		mov	r3, r2
 19502 0288 DB00     		lsls	r3, r3, #3
 19503 028a 9B1A     		subs	r3, r3, r2
 19504 028c 1B01     		lsls	r3, r3, #4
 19505 028e 0B44     		add	r3, r3, r1
 19506 0290 03F58973 		add	r3, r3, #274
 19507 0294 0022     		movs	r2, #0
 19508 0296 1A70     		strb	r2, [r3]
2831:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19509              		.loc 1 2831 0 discriminator 2
 19510 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19511 029a 0133     		adds	r3, r3, #1
 19512 029c FB71     		strb	r3, [r7, #7]
 19513              	.L788:
2831:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19514              		.loc 1 2831 0 is_stmt 0 discriminator 1
 19515 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 433


 19516 02a0 012B     		cmp	r3, #1
 19517 02a2 7FF6E6AE 		bls	.L791
2862:..\src/command_processing.c ****     }
2863:..\src/command_processing.c ****     
2864:..\src/command_processing.c ****     // ENC STRUCT
2865:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 19518              		.loc 1 2865 0 is_stmt 1
 19519 02a6 0023     		movs	r3, #0
 19520 02a8 FB71     		strb	r3, [r7, #7]
 19521 02aa 98E0     		b	.L792
 19522              	.L799:
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19523              		.loc 1 2866 0
 19524 02ac 0023     		movs	r3, #0
 19525 02ae BB71     		strb	r3, [r7, #6]
 19526 02b0 0FE0     		b	.L793
 19527              	.L794:
2867:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 19528              		.loc 1 2867 0 discriminator 3
 19529 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19530 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19531 02b6 0A48     		ldr	r0, .L810
 19532 02b8 1346     		mov	r3, r2
 19533 02ba 5B00     		lsls	r3, r3, #1
 19534 02bc 1344     		add	r3, r3, r2
 19535 02be 1B01     		lsls	r3, r3, #4
 19536 02c0 0344     		add	r3, r3, r0
 19537 02c2 0B44     		add	r3, r3, r1
 19538 02c4 03F5C873 		add	r3, r3, #400
 19539 02c8 0022     		movs	r2, #0
 19540 02ca 1A70     		strb	r2, [r3]
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19541              		.loc 1 2866 0 discriminator 3
 19542 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19543 02ce 0133     		adds	r3, r3, #1
 19544 02d0 BB71     		strb	r3, [r7, #6]
 19545              	.L793:
2866:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19546              		.loc 1 2866 0 is_stmt 0 discriminator 1
 19547 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19548 02d4 042B     		cmp	r3, #4
 19549 02d6 ECD9     		bls	.L794
2868:..\src/command_processing.c ****         }
2869:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19550              		.loc 1 2869 0 is_stmt 1
 19551 02d8 0023     		movs	r3, #0
 19552 02da BB71     		strb	r3, [r7, #6]
 19553 02dc 2CE0     		b	.L795
 19554              	.L811:
 19555 02de 00BF     		.align	2
 19556              	.L810:
 19557 02e0 00000000 		.word	g_mem
 19558              	.L796:
2870:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19559              		.loc 1 2870 0 discriminator 3
 19560 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19561 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 434


 19562 02e8 B748     		ldr	r0, .L812
 19563 02ea 1346     		mov	r3, r2
 19564 02ec 5B00     		lsls	r3, r3, #1
 19565 02ee 1344     		add	r3, r3, r2
 19566 02f0 1B01     		lsls	r3, r3, #4
 19567 02f2 0344     		add	r3, r3, r0
 19568 02f4 0B44     		add	r3, r3, r1
 19569 02f6 03F29513 		addw	r3, r3, #405
 19570 02fa 0322     		movs	r2, #3
 19571 02fc 1A70     		strb	r2, [r3]
2871:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 19572              		.loc 1 2871 0 discriminator 3
 19573 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19574 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19575 0302 B148     		ldr	r0, .L812
 19576 0304 1346     		mov	r3, r2
 19577 0306 5B00     		lsls	r3, r3, #1
 19578 0308 1344     		add	r3, r3, r2
 19579 030a 9B00     		lsls	r3, r3, #2
 19580 030c 0B44     		add	r3, r3, r1
 19581 030e 6833     		adds	r3, r3, #104
 19582 0310 9B00     		lsls	r3, r3, #2
 19583 0312 0344     		add	r3, r3, r0
 19584 0314 4FF07E52 		mov	r2, #1065353216
 19585 0318 5A60     		str	r2, [r3, #4]	@ float
2872:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 19586              		.loc 1 2872 0 discriminator 3
 19587 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19588 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19589 031e AA48     		ldr	r0, .L812
 19590 0320 1346     		mov	r3, r2
 19591 0322 5B00     		lsls	r3, r3, #1
 19592 0324 1344     		add	r3, r3, r2
 19593 0326 9B00     		lsls	r3, r3, #2
 19594 0328 0B44     		add	r3, r3, r1
 19595 032a 6633     		adds	r3, r3, #102
 19596 032c 0022     		movs	r2, #0
 19597 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2869:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19598              		.loc 1 2869 0 discriminator 3
 19599 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19600 0334 0133     		adds	r3, r3, #1
 19601 0336 BB71     		strb	r3, [r7, #6]
 19602              	.L795:
2869:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19603              		.loc 1 2869 0 is_stmt 0 discriminator 1
 19604 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19605 033a 022B     		cmp	r3, #2
 19606 033c D2D9     		bls	.L796
2873:..\src/command_processing.c ****         }
2874:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 19607              		.loc 1 2874 0 is_stmt 1
 19608 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19609 0340 A149     		ldr	r1, .L812
 19610 0342 1346     		mov	r3, r2
 19611 0344 5B00     		lsls	r3, r3, #1
 19612 0346 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 435


 19613 0348 1B01     		lsls	r3, r3, #4
 19614 034a 0B44     		add	r3, r3, r1
 19615 034c 03F5D873 		add	r3, r3, #432
 19616 0350 0022     		movs	r2, #0
 19617 0352 1A70     		strb	r2, [r3]
2875:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 19618              		.loc 1 2875 0
 19619 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19620 0356 9C49     		ldr	r1, .L812
 19621 0358 1346     		mov	r3, r2
 19622 035a 5B00     		lsls	r3, r3, #1
 19623 035c 1344     		add	r3, r3, r2
 19624 035e 1B01     		lsls	r3, r3, #4
 19625 0360 0B44     		add	r3, r3, r1
 19626 0362 03F5DA73 		add	r3, r3, #436
 19627 0366 1622     		movs	r2, #22
 19628 0368 1A70     		strb	r2, [r3]
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19629              		.loc 1 2876 0
 19630 036a 0023     		movs	r3, #0
 19631 036c BB71     		strb	r3, [r7, #6]
 19632 036e 0FE0     		b	.L797
 19633              	.L798:
2877:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 19634              		.loc 1 2877 0 discriminator 3
 19635 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19636 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19637 0374 9448     		ldr	r0, .L812
 19638 0376 1346     		mov	r3, r2
 19639 0378 5B00     		lsls	r3, r3, #1
 19640 037a 1344     		add	r3, r3, r2
 19641 037c 1B01     		lsls	r3, r3, #4
 19642 037e 0344     		add	r3, r3, r0
 19643 0380 0B44     		add	r3, r3, r1
 19644 0382 03F2B113 		addw	r3, r3, #433
 19645 0386 BA79     		ldrb	r2, [r7, #6]
 19646 0388 1A70     		strb	r2, [r3]
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19647              		.loc 1 2876 0 discriminator 3
 19648 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19649 038c 0133     		adds	r3, r3, #1
 19650 038e BB71     		strb	r3, [r7, #6]
 19651              	.L797:
2876:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19652              		.loc 1 2876 0 is_stmt 0 discriminator 1
 19653 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19654 0392 022B     		cmp	r3, #2
 19655 0394 ECD9     		bls	.L798
2878:..\src/command_processing.c ****         }
2879:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 19656              		.loc 1 2879 0 is_stmt 1 discriminator 2
 19657 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19658 0398 8B49     		ldr	r1, .L812
 19659 039a 1346     		mov	r3, r2
 19660 039c 5B00     		lsls	r3, r3, #1
 19661 039e 1344     		add	r3, r3, r2
 19662 03a0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 436


 19663 03a2 0B44     		add	r3, r3, r1
 19664 03a4 03F2B513 		addw	r3, r3, #437
 19665 03a8 0F22     		movs	r2, #15
 19666 03aa 1A70     		strb	r2, [r3]
2880:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 19667              		.loc 1 2880 0 discriminator 2
 19668 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19669 03ae 8649     		ldr	r1, .L812
 19670 03b0 1346     		mov	r3, r2
 19671 03b2 5B00     		lsls	r3, r3, #1
 19672 03b4 1344     		add	r3, r3, r2
 19673 03b6 1B01     		lsls	r3, r3, #4
 19674 03b8 0B44     		add	r3, r3, r1
 19675 03ba 03F5DB73 		add	r3, r3, #438
 19676 03be 0E22     		movs	r2, #14
 19677 03c0 1A70     		strb	r2, [r3]
2881:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 19678              		.loc 1 2881 0 discriminator 2
 19679 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19680 03c4 8049     		ldr	r1, .L812
 19681 03c6 1346     		mov	r3, r2
 19682 03c8 5B00     		lsls	r3, r3, #1
 19683 03ca 1344     		add	r3, r3, r2
 19684 03cc 1B01     		lsls	r3, r3, #4
 19685 03ce 0B44     		add	r3, r3, r1
 19686 03d0 03F2B713 		addw	r3, r3, #439
 19687 03d4 0122     		movs	r2, #1
 19688 03d6 1A70     		strb	r2, [r3]
2865:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19689              		.loc 1 2865 0 discriminator 2
 19690 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19691 03da 0133     		adds	r3, r3, #1
 19692 03dc FB71     		strb	r3, [r7, #7]
 19693              	.L792:
2865:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19694              		.loc 1 2865 0 is_stmt 0 discriminator 1
 19695 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19696 03e0 012B     		cmp	r3, #1
 19697 03e2 7FF663AF 		bls	.L799
2882:..\src/command_processing.c ****     }
2883:..\src/command_processing.c ****     
2884:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19698              		.loc 1 2884 0 is_stmt 1
 19699 03e6 0023     		movs	r3, #0
 19700 03e8 FB71     		strb	r3, [r7, #7]
 19701 03ea 2EE0     		b	.L800
 19702              	.L801:
2885:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19703              		.loc 1 2885 0 discriminator 3
 19704 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19705 03ee 7649     		ldr	r1, .L812
 19706 03f0 1346     		mov	r3, r2
 19707 03f2 DB00     		lsls	r3, r3, #3
 19708 03f4 9B1A     		subs	r3, r3, r2
 19709 03f6 1B01     		lsls	r3, r3, #4
 19710 03f8 0B44     		add	r3, r3, r1
 19711 03fa E433     		adds	r3, r3, #228
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 437


 19712 03fc 0022     		movs	r2, #0
 19713 03fe 1A60     		str	r2, [r3]
2886:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 19714              		.loc 1 2886 0 discriminator 3
 19715 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19716 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 19717 0404 7048     		ldr	r0, .L812
 19718 0406 0B46     		mov	r3, r1
 19719 0408 DB00     		lsls	r3, r3, #3
 19720 040a 5B1A     		subs	r3, r3, r1
 19721 040c 1B01     		lsls	r3, r3, #4
 19722 040e 0344     		add	r3, r3, r0
 19723 0410 03F58873 		add	r3, r3, #272
 19724 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19725 0416 1846     		mov	r0, r3
 19726 0418 6B49     		ldr	r1, .L812
 19727 041a 0346     		mov	r3, r0
 19728 041c 5B00     		lsls	r3, r3, #1
 19729 041e 0344     		add	r3, r3, r0
 19730 0420 1B01     		lsls	r3, r3, #4
 19731 0422 0B44     		add	r3, r3, r1
 19732 0424 03F29513 		addw	r3, r3, #405
 19733 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19734 042a 1946     		mov	r1, r3
 19735 042c 44F63823 		movw	r3, #19000
 19736 0430 03FA01F1 		lsl	r1, r3, r1
 19737 0434 6448     		ldr	r0, .L812
 19738 0436 1346     		mov	r3, r2
 19739 0438 DB00     		lsls	r3, r3, #3
 19740 043a 9B1A     		subs	r3, r3, r2
 19741 043c 1B01     		lsls	r3, r3, #4
 19742 043e 0344     		add	r3, r3, r0
 19743 0440 E833     		adds	r3, r3, #232
 19744 0442 1960     		str	r1, [r3]
2884:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19745              		.loc 1 2884 0 discriminator 3
 19746 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19747 0446 0133     		adds	r3, r3, #1
 19748 0448 FB71     		strb	r3, [r7, #7]
 19749              	.L800:
2884:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19750              		.loc 1 2884 0 is_stmt 0 discriminator 1
 19751 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19752 044c 012B     		cmp	r3, #1
 19753 044e CDD9     		bls	.L801
2887:..\src/command_processing.c ****     }
2888:..\src/command_processing.c ****     
2889:..\src/command_processing.c ****     // EMG STRUCT     
2890:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 19754              		.loc 1 2890 0 is_stmt 1
 19755 0450 5D4B     		ldr	r3, .L812
 19756 0452 C822     		movs	r2, #200
 19757 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2891:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 19758              		.loc 1 2891 0
 19759 0458 5B4B     		ldr	r3, .L812
 19760 045a C822     		movs	r2, #200
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 438


 19761 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2892:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 19762              		.loc 1 2892 0
 19763 0460 594B     		ldr	r3, .L812
 19764 0462 4FF48062 		mov	r2, #1024
 19765 0466 C3F8F421 		str	r2, [r3, #500]
2893:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 19766              		.loc 1 2893 0
 19767 046a 574B     		ldr	r3, .L812
 19768 046c 4FF48062 		mov	r2, #1024
 19769 0470 C3F8F821 		str	r2, [r3, #504]
2894:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 19770              		.loc 1 2894 0
 19771 0474 544B     		ldr	r3, .L812
 19772 0476 6422     		movs	r2, #100
 19773 0478 83F8FC21 		strb	r2, [r3, #508]
2895:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 19774              		.loc 1 2895 0
 19775 047c 524B     		ldr	r3, .L812
 19776 047e 0022     		movs	r2, #0
 19777 0480 83F8FD21 		strb	r2, [r3, #509]
2896:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 19778              		.loc 1 2896 0
 19779 0484 504B     		ldr	r3, .L812
 19780 0486 0022     		movs	r2, #0
 19781 0488 83F8FE21 		strb	r2, [r3, #510]
2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c ****     // IMU STRUCT
2899:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 19782              		.loc 1 2899 0
 19783 048c 4E4B     		ldr	r3, .L812
 19784 048e 0022     		movs	r2, #0
 19785 0490 83F80022 		strb	r2, [r3, #512]
2900:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 19786              		.loc 1 2900 0
 19787 0494 4C4B     		ldr	r3, .L812
 19788 0496 0022     		movs	r2, #0
 19789 0498 83F80122 		strb	r2, [r3, #513]
2901:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 19790              		.loc 1 2901 0
 19791 049c 0023     		movs	r3, #0
 19792 049e FB71     		strb	r3, [r7, #7]
 19793 04a0 34E0     		b	.L802
 19794              	.L803:
2902:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19795              		.loc 1 2902 0 discriminator 3
 19796 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19797 04a4 4849     		ldr	r1, .L812
 19798 04a6 1346     		mov	r3, r2
 19799 04a8 9B00     		lsls	r3, r3, #2
 19800 04aa 1344     		add	r3, r3, r2
 19801 04ac 0B44     		add	r3, r3, r1
 19802 04ae 03F20223 		addw	r3, r3, #514
 19803 04b2 0122     		movs	r2, #1
 19804 04b4 1A70     		strb	r2, [r3]
2903:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 19805              		.loc 1 2903 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 439


 19806 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19807 04b8 4349     		ldr	r1, .L812
 19808 04ba 1346     		mov	r3, r2
 19809 04bc 9B00     		lsls	r3, r3, #2
 19810 04be 1344     		add	r3, r3, r2
 19811 04c0 0B44     		add	r3, r3, r1
 19812 04c2 03F20323 		addw	r3, r3, #515
 19813 04c6 0122     		movs	r2, #1
 19814 04c8 1A70     		strb	r2, [r3]
2904:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 19815              		.loc 1 2904 0 discriminator 3
 19816 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19817 04cc 3E49     		ldr	r1, .L812
 19818 04ce 1346     		mov	r3, r2
 19819 04d0 9B00     		lsls	r3, r3, #2
 19820 04d2 1344     		add	r3, r3, r2
 19821 04d4 0B44     		add	r3, r3, r1
 19822 04d6 03F50173 		add	r3, r3, #516
 19823 04da 0022     		movs	r2, #0
 19824 04dc 1A70     		strb	r2, [r3]
2905:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 19825              		.loc 1 2905 0 discriminator 3
 19826 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19827 04e0 3949     		ldr	r1, .L812
 19828 04e2 1346     		mov	r3, r2
 19829 04e4 9B00     		lsls	r3, r3, #2
 19830 04e6 1344     		add	r3, r3, r2
 19831 04e8 0B44     		add	r3, r3, r1
 19832 04ea 03F20523 		addw	r3, r3, #517
 19833 04ee 0022     		movs	r2, #0
 19834 04f0 1A70     		strb	r2, [r3]
2906:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 19835              		.loc 1 2906 0 discriminator 3
 19836 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19837 04f4 3449     		ldr	r1, .L812
 19838 04f6 1346     		mov	r3, r2
 19839 04f8 9B00     		lsls	r3, r3, #2
 19840 04fa 1344     		add	r3, r3, r2
 19841 04fc 0B44     		add	r3, r3, r1
 19842 04fe 03F20623 		addw	r3, r3, #518
 19843 0502 0022     		movs	r2, #0
 19844 0504 1A70     		strb	r2, [r3]
2901:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19845              		.loc 1 2901 0 discriminator 3
 19846 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19847 0508 0133     		adds	r3, r3, #1
 19848 050a FB71     		strb	r3, [r7, #7]
 19849              	.L802:
2901:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19850              		.loc 1 2901 0 is_stmt 0 discriminator 1
 19851 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19852 050e 042B     		cmp	r3, #4
 19853 0510 C7D9     		bls	.L803
2907:..\src/command_processing.c ****     }
2908:..\src/command_processing.c ****      
2909:..\src/command_processing.c ****     // EXP STRUCT
2910:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 440


 19854              		.loc 1 2910 0 is_stmt 1
 19855 0512 2D4B     		ldr	r3, .L812
 19856 0514 0022     		movs	r2, #0
 19857 0516 83F82622 		strb	r2, [r3, #550]
2911:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 19858              		.loc 1 2911 0
 19859 051a 2B4B     		ldr	r3, .L812
 19860 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19861 0520 1233     		adds	r3, r3, #18
 19862 0522 5B01     		lsls	r3, r3, #5
 19863 0524 284A     		ldr	r2, .L812
 19864 0526 1344     		add	r3, r3, r2
 19865 0528 284A     		ldr	r2, .L812+4
 19866 052a 1068     		ldr	r0, [r2]	@ unaligned
 19867 052c 1860     		str	r0, [r3]	@ unaligned
 19868 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 19869 0530 9279     		ldrb	r2, [r2, #6]
 19870 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 19871 0534 9A71     		strb	r2, [r3, #6]
2912:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 19872              		.loc 1 2912 0
 19873 0536 244B     		ldr	r3, .L812
 19874 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 19875 053c 012B     		cmp	r3, #1
 19876 053e 13D1     		bne	.L804
2913:..\src/command_processing.c ****         // Set date of maintenance from RTC
2914:..\src/command_processing.c ****         store_RTC_current_time();
 19877              		.loc 1 2914 0
 19878 0540 FFF7FEFF 		bl	store_RTC_current_time
2915:..\src/command_processing.c ****         
2916:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 19879              		.loc 1 2916 0
 19880 0544 204B     		ldr	r3, .L812
 19881 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 19882 054a 1F4B     		ldr	r3, .L812
 19883 054c 83F8A420 		strb	r2, [r3, #164]
2917:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 19884              		.loc 1 2917 0
 19885 0550 1D4B     		ldr	r3, .L812
 19886 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 19887 0556 1C4B     		ldr	r3, .L812
 19888 0558 83F8A520 		strb	r2, [r3, #165]
2918:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 19889              		.loc 1 2918 0
 19890 055c 1A4B     		ldr	r3, .L812
 19891 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 19892 0562 194B     		ldr	r3, .L812
 19893 0564 83F8A620 		strb	r2, [r3, #166]
 19894              	.L804:
2919:..\src/command_processing.c ****     }
2920:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 19895              		.loc 1 2920 0
 19896 0568 174B     		ldr	r3, .L812
 19897 056a 0022     		movs	r2, #0
 19898 056c 83F82722 		strb	r2, [r3, #551]
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19899              		.loc 1 2921 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 441


 19900 0570 0023     		movs	r3, #0
 19901 0572 FB71     		strb	r3, [r7, #7]
 19902 0574 08E0     		b	.L805
 19903              	.L806:
2922:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 19904              		.loc 1 2922 0 discriminator 3
 19905 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19906 0578 134A     		ldr	r2, .L812
 19907 057a 1344     		add	r3, r3, r2
 19908 057c 0022     		movs	r2, #0
 19909 057e 83F82822 		strb	r2, [r3, #552]
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19910              		.loc 1 2921 0 discriminator 3
 19911 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19912 0584 0133     		adds	r3, r3, #1
 19913 0586 FB71     		strb	r3, [r7, #7]
 19914              	.L805:
2921:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19915              		.loc 1 2921 0 is_stmt 0 discriminator 1
 19916 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19917 058a 0B2B     		cmp	r3, #11
 19918 058c F3D9     		bls	.L806
2923:..\src/command_processing.c ****     }
2924:..\src/command_processing.c **** 
2925:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2926:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2927:..\src/command_processing.c ****     memInit_SoftHandPro();
 19919              		.loc 1 2927 0 is_stmt 1
 19920 058e FFF7FEFF 		bl	memInit_SoftHandPro
2928:..\src/command_processing.c **** #endif    
2929:..\src/command_processing.c **** 
2930:..\src/command_processing.c ****     // Default generic user_id
2931:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 19921              		.loc 1 2931 0
 19922 0592 0D4B     		ldr	r3, .L812
 19923 0594 0022     		movs	r2, #0
 19924 0596 83F8AB20 		strb	r2, [r3, #171]
2932:..\src/command_processing.c **** 
2933:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2934:..\src/command_processing.c ****     g_mem.flag = TRUE;
 19925              		.loc 1 2934 0
 19926 059a 0B4B     		ldr	r3, .L812
 19927 059c 0122     		movs	r2, #1
 19928 059e 1A70     		strb	r2, [r3]
2935:..\src/command_processing.c ****     
2936:..\src/command_processing.c ****     //write that configuration to EEPROM
2937:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 19929              		.loc 1 2937 0
 19930 05a0 0020     		movs	r0, #0
 19931 05a2 FFF7FEFF 		bl	memStore
 19932 05a6 0346     		mov	r3, r0
 19933 05a8 002B     		cmp	r3, #0
 19934 05aa 07D0     		beq	.L807
 19935              		.loc 1 2937 0 is_stmt 0 discriminator 1
 19936 05ac 3220     		movs	r0, #50
 19937 05ae FFF7FEFF 		bl	memStore
 19938 05b2 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 442


 19939 05b4 002B     		cmp	r3, #0
 19940 05b6 01D0     		beq	.L807
 19941              		.loc 1 2937 0 discriminator 3
 19942 05b8 0123     		movs	r3, #1
 19943 05ba 00E0     		b	.L808
 19944              	.L807:
 19945              		.loc 1 2937 0 discriminator 4
 19946 05bc 0023     		movs	r3, #0
 19947              	.L808:
 19948              		.loc 1 2937 0 discriminator 6
 19949 05be DBB2     		uxtb	r3, r3
2938:..\src/command_processing.c **** }
 19950              		.loc 1 2938 0 is_stmt 1 discriminator 6
 19951 05c0 1846     		mov	r0, r3
 19952 05c2 0837     		adds	r7, r7, #8
 19953              		.cfi_def_cfa_offset 8
 19954 05c4 BD46     		mov	sp, r7
 19955              		.cfi_def_cfa_register 13
 19956              		@ sp needed
 19957 05c6 80BD     		pop	{r7, pc}
 19958              	.L813:
 19959              		.align	2
 19960              	.L812:
 19961 05c8 00000000 		.word	g_mem
 19962 05cc 50190000 		.word	.LC254
 19963              		.cfi_endproc
 19964              	.LFE86:
 19965              		.size	memInit, .-memInit
 19966              		.section	.rodata
 19967 1957 00       		.align	2
 19968              	.LC255:
 19969 1958 55535230 		.ascii	"USR001\000"
 19969      303100
 19970              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 19971              		.align	2
 19972              		.global	memInit_SoftHandPro
 19973              		.thumb
 19974              		.thumb_func
 19975              		.type	memInit_SoftHandPro, %function
 19976              	memInit_SoftHandPro:
 19977              	.LFB87:
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** //==============================================================================
2941:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2942:..\src/command_processing.c **** //==============================================================================
2943:..\src/command_processing.c **** void memInit_SoftHandPro(void)
2944:..\src/command_processing.c **** {
 19978              		.loc 1 2944 0
 19979              		.cfi_startproc
 19980              		@ args = 0, pretend = 0, frame = 8
 19981              		@ frame_needed = 1, uses_anonymous_args = 0
 19982              		@ link register save eliminated.
 19983 0000 80B4     		push	{r7}
 19984              		.cfi_def_cfa_offset 4
 19985              		.cfi_offset 7, -4
 19986 0002 83B0     		sub	sp, sp, #12
 19987              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 443


 19988 0004 00AF     		add	r7, sp, #0
 19989              		.cfi_def_cfa_register 7
2945:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 19990              		.loc 1 2945 0
 19991 0006 0023     		movs	r3, #0
 19992 0008 FB70     		strb	r3, [r7, #3]
2946:..\src/command_processing.c ****     
2947:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2948:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 19993              		.loc 1 2948 0
 19994 000a 874B     		ldr	r3, .L817
 19995 000c 0122     		movs	r2, #1
 19996 000e 83F8A720 		strb	r2, [r3, #167]
2949:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 19997              		.loc 1 2949 0
 19998 0012 854B     		ldr	r3, .L817
 19999 0014 0022     		movs	r2, #0
 20000 0016 83F8AC20 		strb	r2, [r3, #172]
2950:..\src/command_processing.c ****     
2951:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 20001              		.loc 1 2951 0
 20002 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20003 001c 8249     		ldr	r1, .L817
 20004 001e 1346     		mov	r3, r2
 20005 0020 DB00     		lsls	r3, r3, #3
 20006 0022 9B1A     		subs	r3, r3, r2
 20007 0024 1B01     		lsls	r3, r3, #4
 20008 0026 0B44     		add	r3, r3, r1
 20009 0028 E033     		adds	r3, r3, #224
 20010 002a 0122     		movs	r2, #1
 20011 002c 1A70     		strb	r2, [r3]
2952:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 20012              		.loc 1 2952 0
 20013 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20014 0030 7D49     		ldr	r1, .L817
 20015 0032 1346     		mov	r3, r2
 20016 0034 DB00     		lsls	r3, r3, #3
 20017 0036 9B1A     		subs	r3, r3, r2
 20018 0038 1B01     		lsls	r3, r3, #4
 20019 003a 0B44     		add	r3, r3, r1
 20020 003c 03F58773 		add	r3, r3, #270
 20021 0040 0022     		movs	r2, #0
 20022 0042 1A70     		strb	r2, [r3]
2953:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 20023              		.loc 1 2953 0
 20024 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20025 0046 7849     		ldr	r1, .L817
 20026 0048 1346     		mov	r3, r2
 20027 004a DB00     		lsls	r3, r3, #3
 20028 004c 9B1A     		subs	r3, r3, r2
 20029 004e 1B01     		lsls	r3, r3, #4
 20030 0050 0B44     		add	r3, r3, r1
 20031 0052 03F20F13 		addw	r3, r3, #271
 20032 0056 0022     		movs	r2, #0
 20033 0058 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****     
2955:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 444


2956:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 20034              		.loc 1 2956 0
 20035 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20036 005c 724B     		ldr	r3, .L817
 20037 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 20038 0062 7149     		ldr	r1, .L817
 20039 0064 1346     		mov	r3, r2
 20040 0066 DB00     		lsls	r3, r3, #3
 20041 0068 9B1A     		subs	r3, r3, r2
 20042 006a 1B01     		lsls	r3, r3, #4
 20043 006c 0B44     		add	r3, r3, r1
 20044 006e 03F58873 		add	r3, r3, #272
 20045 0072 0246     		mov	r2, r0
 20046 0074 1A70     		strb	r2, [r3]
2957:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 20047              		.loc 1 2957 0
 20048 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20049 0078 6B49     		ldr	r1, .L817
 20050 007a 1346     		mov	r3, r2
 20051 007c DB00     		lsls	r3, r3, #3
 20052 007e 9B1A     		subs	r3, r3, r2
 20053 0080 1B01     		lsls	r3, r3, #4
 20054 0082 0B44     		add	r3, r3, r1
 20055 0084 03F21113 		addw	r3, r3, #273
 20056 0088 0122     		movs	r2, #1
 20057 008a 1A70     		strb	r2, [r3]
2958:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 20058              		.loc 1 2958 0
 20059 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20060 008e 6649     		ldr	r1, .L817
 20061 0090 1346     		mov	r3, r2
 20062 0092 DB00     		lsls	r3, r3, #3
 20063 0094 9B1A     		subs	r3, r3, r2
 20064 0096 1B01     		lsls	r3, r3, #4
 20065 0098 0B44     		add	r3, r3, r1
 20066 009a 03F58973 		add	r3, r3, #274
 20067 009e 0122     		movs	r2, #1
 20068 00a0 1A70     		strb	r2, [r3]
2959:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 20069              		.loc 1 2959 0
 20070 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20071 00a4 6049     		ldr	r1, .L817
 20072 00a6 1346     		mov	r3, r2
 20073 00a8 DB00     		lsls	r3, r3, #3
 20074 00aa 9B1A     		subs	r3, r3, r2
 20075 00ac 1B01     		lsls	r3, r3, #4
 20076 00ae 0B44     		add	r3, r3, r1
 20077 00b0 E433     		adds	r3, r3, #228
 20078 00b2 0022     		movs	r2, #0
 20079 00b4 1A60     		str	r2, [r3]
2960:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 20080              		.loc 1 2960 0
 20081 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20082 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 20083 00ba 5B48     		ldr	r0, .L817
 20084 00bc 0B46     		mov	r3, r1
 20085 00be DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 445


 20086 00c0 5B1A     		subs	r3, r3, r1
 20087 00c2 1B01     		lsls	r3, r3, #4
 20088 00c4 0344     		add	r3, r3, r0
 20089 00c6 03F58873 		add	r3, r3, #272
 20090 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20091 00cc 1846     		mov	r0, r3
 20092 00ce 5649     		ldr	r1, .L817
 20093 00d0 0346     		mov	r3, r0
 20094 00d2 5B00     		lsls	r3, r3, #1
 20095 00d4 0344     		add	r3, r3, r0
 20096 00d6 1B01     		lsls	r3, r3, #4
 20097 00d8 0B44     		add	r3, r3, r1
 20098 00da 03F29513 		addw	r3, r3, #405
 20099 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20100 00e0 1946     		mov	r1, r3
 20101 00e2 4FF47A53 		mov	r3, #16000
 20102 00e6 03FA01F1 		lsl	r1, r3, r1
 20103 00ea 4F48     		ldr	r0, .L817
 20104 00ec 1346     		mov	r3, r2
 20105 00ee DB00     		lsls	r3, r3, #3
 20106 00f0 9B1A     		subs	r3, r3, r2
 20107 00f2 1B01     		lsls	r3, r3, #4
 20108 00f4 0344     		add	r3, r3, r0
 20109 00f6 E833     		adds	r3, r3, #232
 20110 00f8 1960     		str	r1, [r3]
 20111              	.LBB21:
2961:..\src/command_processing.c ****     
2962:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 20112              		.loc 1 2962 0
 20113 00fa 0023     		movs	r3, #0
 20114 00fc 7B60     		str	r3, [r7, #4]
 20115 00fe 2EE0     		b	.L815
 20116              	.L816:
2963:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
2964:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 20117              		.loc 1 2964 0 discriminator 3
 20118 0100 4949     		ldr	r1, .L817
 20119 0102 7A68     		ldr	r2, [r7, #4]
 20120 0104 1346     		mov	r3, r2
 20121 0106 5B00     		lsls	r3, r3, #1
 20122 0108 1344     		add	r3, r3, r2
 20123 010a 1B01     		lsls	r3, r3, #4
 20124 010c 0B44     		add	r3, r3, r1
 20125 010e 03F5D873 		add	r3, r3, #432
 20126 0112 0122     		movs	r2, #1
 20127 0114 1A70     		strb	r2, [r3]
2965:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 20128              		.loc 1 2965 0 discriminator 3
 20129 0116 4449     		ldr	r1, .L817
 20130 0118 7A68     		ldr	r2, [r7, #4]
 20131 011a 1346     		mov	r3, r2
 20132 011c 5B00     		lsls	r3, r3, #1
 20133 011e 1344     		add	r3, r3, r2
 20134 0120 1B01     		lsls	r3, r3, #4
 20135 0122 0B44     		add	r3, r3, r1
 20136 0124 03F2B513 		addw	r3, r3, #437
 20137 0128 2322     		movs	r2, #35
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 446


 20138 012a 1A70     		strb	r2, [r3]
2966:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 20139              		.loc 1 2966 0 discriminator 3
 20140 012c 3E49     		ldr	r1, .L817
 20141 012e 7A68     		ldr	r2, [r7, #4]
 20142 0130 1346     		mov	r3, r2
 20143 0132 5B00     		lsls	r3, r3, #1
 20144 0134 1344     		add	r3, r3, r2
 20145 0136 1B01     		lsls	r3, r3, #4
 20146 0138 0B44     		add	r3, r3, r1
 20147 013a 03F5DB73 		add	r3, r3, #438
 20148 013e 0322     		movs	r2, #3
 20149 0140 1A70     		strb	r2, [r3]
2967:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 20150              		.loc 1 2967 0 discriminator 3
 20151 0142 3949     		ldr	r1, .L817
 20152 0144 7A68     		ldr	r2, [r7, #4]
 20153 0146 1346     		mov	r3, r2
 20154 0148 5B00     		lsls	r3, r3, #1
 20155 014a 1344     		add	r3, r3, r2
 20156 014c 1B01     		lsls	r3, r3, #4
 20157 014e 0B44     		add	r3, r3, r1
 20158 0150 03F2B713 		addw	r3, r3, #439
 20159 0154 FF22     		movs	r2, #255
 20160 0156 1A70     		strb	r2, [r3]
2962:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20161              		.loc 1 2962 0 discriminator 3
 20162 0158 7B68     		ldr	r3, [r7, #4]
 20163 015a 0133     		adds	r3, r3, #1
 20164 015c 7B60     		str	r3, [r7, #4]
 20165              	.L815:
2962:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20166              		.loc 1 2962 0 is_stmt 0 discriminator 1
 20167 015e 7B68     		ldr	r3, [r7, #4]
 20168 0160 012B     		cmp	r3, #1
 20169 0162 CDDD     		ble	.L816
 20170              	.LBE21:
2968:..\src/command_processing.c ****     }
2969:..\src/command_processing.c ****     
2970:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 20171              		.loc 1 2970 0 is_stmt 1
 20172 0164 304B     		ldr	r3, .L817
 20173 0166 0022     		movs	r2, #0
 20174 0168 83F8FD21 		strb	r2, [r3, #509]
2971:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 20175              		.loc 1 2971 0
 20176 016c 2E4B     		ldr	r3, .L817
 20177 016e 4FF48062 		mov	r2, #1024
 20178 0172 C3F8F421 		str	r2, [r3, #500]
2972:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 20179              		.loc 1 2972 0
 20180 0176 2C4B     		ldr	r3, .L817
 20181 0178 4FF48062 		mov	r2, #1024
 20182 017c C3F8F821 		str	r2, [r3, #504]
2973:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 20183              		.loc 1 2973 0
 20184 0180 294B     		ldr	r3, .L817
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 447


 20185 0182 C822     		movs	r2, #200
 20186 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2974:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 20187              		.loc 1 2974 0
 20188 0188 274B     		ldr	r3, .L817
 20189 018a C822     		movs	r2, #200
 20190 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2975:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 20191              		.loc 1 2975 0
 20192 0190 254B     		ldr	r3, .L817
 20193 0192 6422     		movs	r2, #100
 20194 0194 83F8FC21 		strb	r2, [r3, #508]
2976:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 20195              		.loc 1 2976 0
 20196 0198 234B     		ldr	r3, .L817
 20197 019a 0022     		movs	r2, #0
 20198 019c 83F8FE21 		strb	r2, [r3, #510]
2977:..\src/command_processing.c ****     
2978:..\src/command_processing.c ****     //Initialize rest position parameters  
2979:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 20199              		.loc 1 2979 0
 20200 01a0 214B     		ldr	r3, .L817
 20201 01a2 0022     		movs	r2, #0
 20202 01a4 83F8AC22 		strb	r2, [r3, #684]
2980:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 20203              		.loc 1 2980 0
 20204 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20205 01aa 1F49     		ldr	r1, .L817
 20206 01ac 1346     		mov	r3, r2
 20207 01ae DB00     		lsls	r3, r3, #3
 20208 01b0 9B1A     		subs	r3, r3, r2
 20209 01b2 1B01     		lsls	r3, r3, #4
 20210 01b4 0B44     		add	r3, r3, r1
 20211 01b6 03F58873 		add	r3, r3, #272
 20212 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20213 01bc 1946     		mov	r1, r3
 20214 01be 1A4A     		ldr	r2, .L817
 20215 01c0 0B46     		mov	r3, r1
 20216 01c2 5B00     		lsls	r3, r3, #1
 20217 01c4 0B44     		add	r3, r3, r1
 20218 01c6 1B01     		lsls	r3, r3, #4
 20219 01c8 1344     		add	r3, r3, r2
 20220 01ca 03F29513 		addw	r3, r3, #405
 20221 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20222 01d0 1A46     		mov	r2, r3
 20223 01d2 41F65833 		movw	r3, #7000
 20224 01d6 9340     		lsls	r3, r3, r2
 20225 01d8 134A     		ldr	r2, .L817
 20226 01da C2F8A032 		str	r3, [r2, #672]
2981:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 20227              		.loc 1 2981 0
 20228 01de 124B     		ldr	r3, .L817
 20229 01e0 0A22     		movs	r2, #10
 20230 01e2 C3F8A422 		str	r2, [r3, #676]
2982:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 20231              		.loc 1 2982 0
 20232 01e6 104B     		ldr	r3, .L817
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 448


 20233 01e8 42F21072 		movw	r2, #10000
 20234 01ec C3F8A822 		str	r2, [r3, #680]
2983:..\src/command_processing.c **** 	
2984:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 20235              		.loc 1 2984 0
 20236 01f0 0D4B     		ldr	r3, .L817
 20237 01f2 0022     		movs	r2, #0
 20238 01f4 83F80022 		strb	r2, [r3, #512]
2985:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20239              		.loc 1 2985 0
 20240 01f8 0B4B     		ldr	r3, .L817
 20241 01fa 0022     		movs	r2, #0
 20242 01fc 83F82622 		strb	r2, [r3, #550]
2986:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 20243              		.loc 1 2986 0
 20244 0200 094B     		ldr	r3, .L817
 20245 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20246 0206 1233     		adds	r3, r3, #18
 20247 0208 5B01     		lsls	r3, r3, #5
 20248 020a 074A     		ldr	r2, .L817
 20249 020c 1344     		add	r3, r3, r2
 20250 020e 074A     		ldr	r2, .L817+4
 20251 0210 1068     		ldr	r0, [r2]	@ unaligned
 20252 0212 1860     		str	r0, [r3]	@ unaligned
 20253 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20254 0216 9279     		ldrb	r2, [r2, #6]
 20255 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 20256 021a 9A71     		strb	r2, [r3, #6]
2987:..\src/command_processing.c **** }
 20257              		.loc 1 2987 0
 20258 021c 00BF     		nop
 20259 021e 0C37     		adds	r7, r7, #12
 20260              		.cfi_def_cfa_offset 4
 20261 0220 BD46     		mov	sp, r7
 20262              		.cfi_def_cfa_register 13
 20263              		@ sp needed
 20264 0222 80BC     		pop	{r7}
 20265              		.cfi_restore 7
 20266              		.cfi_def_cfa_offset 0
 20267 0224 7047     		bx	lr
 20268              	.L818:
 20269 0226 00BF     		.align	2
 20270              	.L817:
 20271 0228 00000000 		.word	g_mem
 20272 022c 58190000 		.word	.LC255
 20273              		.cfi_endproc
 20274              	.LFE87:
 20275              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 20276              		.section	.text.cmd_get_measurements,"ax",%progbits
 20277              		.align	2
 20278              		.global	cmd_get_measurements
 20279              		.thumb
 20280              		.thumb_func
 20281              		.type	cmd_get_measurements, %function
 20282              	cmd_get_measurements:
 20283              	.LFB88:
2988:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 449


2989:..\src/command_processing.c **** //==============================================================================
2990:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
2991:..\src/command_processing.c **** //==============================================================================
2992:..\src/command_processing.c **** /**
2993:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
2994:..\src/command_processing.c **** **/
2995:..\src/command_processing.c **** 
2996:..\src/command_processing.c **** void cmd_get_measurements(){
 20284              		.loc 1 2996 0
 20285              		.cfi_startproc
 20286              		@ args = 0, pretend = 0, frame = 16
 20287              		@ frame_needed = 1, uses_anonymous_args = 0
 20288 0000 90B5     		push	{r4, r7, lr}
 20289              		.cfi_def_cfa_offset 12
 20290              		.cfi_offset 4, -12
 20291              		.cfi_offset 7, -8
 20292              		.cfi_offset 14, -4
 20293 0002 85B0     		sub	sp, sp, #20
 20294              		.cfi_def_cfa_offset 32
 20295 0004 00AF     		add	r7, sp, #0
 20296              		.cfi_def_cfa_register 7
2997:..\src/command_processing.c ****  
2998:..\src/command_processing.c ****     uint8 CYDATA index;
2999:..\src/command_processing.c ****     int16 aux_int16;
3000:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3001:..\src/command_processing.c ****     
3002:..\src/command_processing.c ****     uint8 packet_data[8]; 
3003:..\src/command_processing.c ****     
3004:..\src/command_processing.c ****     //Header package
3005:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 20297              		.loc 1 3005 0
 20298 0006 8423     		movs	r3, #132
 20299 0008 3B71     		strb	r3, [r7, #4]
3006:..\src/command_processing.c ****     
3007:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20300              		.loc 1 3007 0
 20301 000a 0323     		movs	r3, #3
 20302 000c FB73     		strb	r3, [r7, #15]
 20303 000e 37E0     		b	.L820
 20304              	.L821:
3008:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20305              		.loc 1 3008 0
 20306 0010 264B     		ldr	r3, .L822
 20307 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20308 0016 1846     		mov	r0, r3
 20309 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20310 001a 2549     		ldr	r1, .L822+4
 20311 001c 0346     		mov	r3, r0
 20312 001e 5B00     		lsls	r3, r3, #1
 20313 0020 0344     		add	r3, r3, r0
 20314 0022 9B00     		lsls	r3, r3, #2
 20315 0024 1344     		add	r3, r3, r2
 20316 0026 51F82320 		ldr	r2, [r1, r3, lsl #2]
 20317 002a 204B     		ldr	r3, .L822
 20318 002c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20319 0030 1C46     		mov	r4, r3
 20320 0032 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 450


 20321 0034 1D48     		ldr	r0, .L822
 20322 0036 2346     		mov	r3, r4
 20323 0038 5B00     		lsls	r3, r3, #1
 20324 003a 2344     		add	r3, r3, r4
 20325 003c 1B01     		lsls	r3, r3, #4
 20326 003e 0344     		add	r3, r3, r0
 20327 0040 0B44     		add	r3, r3, r1
 20328 0042 03F29513 		addw	r3, r3, #405
 20329 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20330 0048 42FA03F3 		asr	r3, r2, r3
 20331 004c 1BB2     		sxth	r3, r3
 20332 004e BB81     		strh	r3, [r7, #12]	@ movhi
3009:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20333              		.loc 1 3009 0
 20334 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20335 0052 5B00     		lsls	r3, r3, #1
 20336 0054 0233     		adds	r3, r3, #2
 20337 0056 07F10C02 		add	r2, r7, #12
 20338 005a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20339 005c 07F11001 		add	r1, r7, #16
 20340 0060 0B44     		add	r3, r3, r1
 20341 0062 03F80C2C 		strb	r2, [r3, #-12]
3010:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20342              		.loc 1 3010 0
 20343 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20344 0068 5B00     		lsls	r3, r3, #1
 20345 006a 5A1C     		adds	r2, r3, #1
 20346 006c 07F10C03 		add	r3, r7, #12
 20347 0070 0133     		adds	r3, r3, #1
 20348 0072 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20349 0074 07F11003 		add	r3, r7, #16
 20350 0078 1344     		add	r3, r3, r2
 20351 007a 0A46     		mov	r2, r1
 20352 007c 03F80C2C 		strb	r2, [r3, #-12]
 20353              	.L820:
3007:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20354              		.loc 1 3007 0 discriminator 1
 20355 0080 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20356 0082 5A1E     		subs	r2, r3, #1
 20357 0084 FA73     		strb	r2, [r7, #15]
 20358 0086 002B     		cmp	r3, #0
 20359 0088 C2D1     		bne	.L821
3011:..\src/command_processing.c ****     }
3012:..\src/command_processing.c **** 
3013:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3014:..\src/command_processing.c **** 
3015:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20360              		.loc 1 3015 0
 20361 008a 3B1D     		adds	r3, r7, #4
 20362 008c 0721     		movs	r1, #7
 20363 008e 1846     		mov	r0, r3
 20364 0090 FFF7FEFF 		bl	LCRChecksum
 20365 0094 0346     		mov	r3, r0
 20366 0096 FB72     		strb	r3, [r7, #11]
3016:..\src/command_processing.c **** 
3017:..\src/command_processing.c ****     commWrite(packet_data, 8);
 20367              		.loc 1 3017 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 451


 20368 0098 3B1D     		adds	r3, r7, #4
 20369 009a 0821     		movs	r1, #8
 20370 009c 1846     		mov	r0, r3
 20371 009e FFF7FEFF 		bl	commWrite
3018:..\src/command_processing.c ****    
3019:..\src/command_processing.c **** }
 20372              		.loc 1 3019 0
 20373 00a2 00BF     		nop
 20374 00a4 1437     		adds	r7, r7, #20
 20375              		.cfi_def_cfa_offset 12
 20376 00a6 BD46     		mov	sp, r7
 20377              		.cfi_def_cfa_register 13
 20378              		@ sp needed
 20379 00a8 90BD     		pop	{r4, r7, pc}
 20380              	.L823:
 20381 00aa 00BF     		.align	2
 20382              	.L822:
 20383 00ac 00000000 		.word	g_mem
 20384 00b0 00000000 		.word	g_measOld
 20385              		.cfi_endproc
 20386              	.LFE88:
 20387              		.size	cmd_get_measurements, .-cmd_get_measurements
 20388              		.section	.text.cmd_get_velocities,"ax",%progbits
 20389              		.align	2
 20390              		.global	cmd_get_velocities
 20391              		.thumb
 20392              		.thumb_func
 20393              		.type	cmd_get_velocities, %function
 20394              	cmd_get_velocities:
 20395              	.LFB89:
3020:..\src/command_processing.c **** 
3021:..\src/command_processing.c **** void cmd_get_velocities(){
 20396              		.loc 1 3021 0
 20397              		.cfi_startproc
 20398              		@ args = 0, pretend = 0, frame = 16
 20399              		@ frame_needed = 1, uses_anonymous_args = 0
 20400 0000 90B5     		push	{r4, r7, lr}
 20401              		.cfi_def_cfa_offset 12
 20402              		.cfi_offset 4, -12
 20403              		.cfi_offset 7, -8
 20404              		.cfi_offset 14, -4
 20405 0002 85B0     		sub	sp, sp, #20
 20406              		.cfi_def_cfa_offset 32
 20407 0004 00AF     		add	r7, sp, #0
 20408              		.cfi_def_cfa_register 7
3022:..\src/command_processing.c ****  
3023:..\src/command_processing.c ****     uint8 CYDATA index;
3024:..\src/command_processing.c ****     int16 aux_int16;
3025:..\src/command_processing.c ****    
3026:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3027:..\src/command_processing.c ****     
3028:..\src/command_processing.c ****     uint8 packet_data[8]; 
3029:..\src/command_processing.c ****     
3030:..\src/command_processing.c ****     //Header package
3031:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 20409              		.loc 1 3031 0
 20410 0006 8923     		movs	r3, #137
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 452


 20411 0008 3B71     		strb	r3, [r7, #4]
3032:..\src/command_processing.c ****     
3033:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20412              		.loc 1 3033 0
 20413 000a 0323     		movs	r3, #3
 20414 000c FB73     		strb	r3, [r7, #15]
 20415 000e 38E0     		b	.L825
 20416              	.L826:
3034:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20417              		.loc 1 3034 0
 20418 0010 264B     		ldr	r3, .L827
 20419 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20420 0016 1846     		mov	r0, r3
 20421 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20422 001a 2549     		ldr	r1, .L827+4
 20423 001c 0346     		mov	r3, r0
 20424 001e 5B00     		lsls	r3, r3, #1
 20425 0020 0344     		add	r3, r3, r0
 20426 0022 9B00     		lsls	r3, r3, #2
 20427 0024 1344     		add	r3, r3, r2
 20428 0026 0633     		adds	r3, r3, #6
 20429 0028 51F82320 		ldr	r2, [r1, r3, lsl #2]
 20430 002c 1F4B     		ldr	r3, .L827
 20431 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20432 0032 1C46     		mov	r4, r3
 20433 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20434 0036 1D48     		ldr	r0, .L827
 20435 0038 2346     		mov	r3, r4
 20436 003a 5B00     		lsls	r3, r3, #1
 20437 003c 2344     		add	r3, r3, r4
 20438 003e 1B01     		lsls	r3, r3, #4
 20439 0040 0344     		add	r3, r3, r0
 20440 0042 0B44     		add	r3, r3, r1
 20441 0044 03F29513 		addw	r3, r3, #405
 20442 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20443 004a 42FA03F3 		asr	r3, r2, r3
 20444 004e 1BB2     		sxth	r3, r3
 20445 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3035:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20446              		.loc 1 3035 0
 20447 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20448 0054 5B00     		lsls	r3, r3, #1
 20449 0056 0233     		adds	r3, r3, #2
 20450 0058 07F10C02 		add	r2, r7, #12
 20451 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20452 005e 07F11001 		add	r1, r7, #16
 20453 0062 0B44     		add	r3, r3, r1
 20454 0064 03F80C2C 		strb	r2, [r3, #-12]
3036:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20455              		.loc 1 3036 0
 20456 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20457 006a 5B00     		lsls	r3, r3, #1
 20458 006c 5A1C     		adds	r2, r3, #1
 20459 006e 07F10C03 		add	r3, r7, #12
 20460 0072 0133     		adds	r3, r3, #1
 20461 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20462 0076 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 453


 20463 007a 1344     		add	r3, r3, r2
 20464 007c 0A46     		mov	r2, r1
 20465 007e 03F80C2C 		strb	r2, [r3, #-12]
 20466              	.L825:
3033:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20467              		.loc 1 3033 0 discriminator 1
 20468 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20469 0084 5A1E     		subs	r2, r3, #1
 20470 0086 FA73     		strb	r2, [r7, #15]
 20471 0088 002B     		cmp	r3, #0
 20472 008a C1D1     		bne	.L826
3037:..\src/command_processing.c ****     }
3038:..\src/command_processing.c ****             
3039:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3040:..\src/command_processing.c **** 
3041:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20473              		.loc 1 3041 0
 20474 008c 3B1D     		adds	r3, r7, #4
 20475 008e 0721     		movs	r1, #7
 20476 0090 1846     		mov	r0, r3
 20477 0092 FFF7FEFF 		bl	LCRChecksum
 20478 0096 0346     		mov	r3, r0
 20479 0098 FB72     		strb	r3, [r7, #11]
3042:..\src/command_processing.c **** 
3043:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20480              		.loc 1 3043 0
 20481 009a 3B1D     		adds	r3, r7, #4
 20482 009c 0821     		movs	r1, #8
 20483 009e 1846     		mov	r0, r3
 20484 00a0 FFF7FEFF 		bl	commWrite
3044:..\src/command_processing.c **** }
 20485              		.loc 1 3044 0
 20486 00a4 00BF     		nop
 20487 00a6 1437     		adds	r7, r7, #20
 20488              		.cfi_def_cfa_offset 12
 20489 00a8 BD46     		mov	sp, r7
 20490              		.cfi_def_cfa_register 13
 20491              		@ sp needed
 20492 00aa 90BD     		pop	{r4, r7, pc}
 20493              	.L828:
 20494              		.align	2
 20495              	.L827:
 20496 00ac 00000000 		.word	g_mem
 20497 00b0 00000000 		.word	g_measOld
 20498              		.cfi_endproc
 20499              	.LFE89:
 20500              		.size	cmd_get_velocities, .-cmd_get_velocities
 20501              		.section	.text.cmd_get_accelerations,"ax",%progbits
 20502              		.align	2
 20503              		.global	cmd_get_accelerations
 20504              		.thumb
 20505              		.thumb_func
 20506              		.type	cmd_get_accelerations, %function
 20507              	cmd_get_accelerations:
 20508              	.LFB90:
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** void cmd_get_accelerations(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 454


 20509              		.loc 1 3046 0
 20510              		.cfi_startproc
 20511              		@ args = 0, pretend = 0, frame = 16
 20512              		@ frame_needed = 1, uses_anonymous_args = 0
 20513 0000 90B5     		push	{r4, r7, lr}
 20514              		.cfi_def_cfa_offset 12
 20515              		.cfi_offset 4, -12
 20516              		.cfi_offset 7, -8
 20517              		.cfi_offset 14, -4
 20518 0002 85B0     		sub	sp, sp, #20
 20519              		.cfi_def_cfa_offset 32
 20520 0004 00AF     		add	r7, sp, #0
 20521              		.cfi_def_cfa_register 7
3047:..\src/command_processing.c ****  
3048:..\src/command_processing.c ****     uint8 CYDATA index;
3049:..\src/command_processing.c ****     int16 aux_int16;
3050:..\src/command_processing.c ****     
3051:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3052:..\src/command_processing.c ****     
3053:..\src/command_processing.c ****     uint8 packet_data[8]; 
3054:..\src/command_processing.c ****     
3055:..\src/command_processing.c ****     //Header package
3056:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 20522              		.loc 1 3056 0
 20523 0006 8B23     		movs	r3, #139
 20524 0008 3B71     		strb	r3, [r7, #4]
3057:..\src/command_processing.c ****     
3058:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20525              		.loc 1 3058 0
 20526 000a 0323     		movs	r3, #3
 20527 000c FB73     		strb	r3, [r7, #15]
 20528 000e 39E0     		b	.L830
 20529              	.L831:
3059:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20530              		.loc 1 3059 0
 20531 0010 274B     		ldr	r3, .L832
 20532 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20533 0016 1846     		mov	r0, r3
 20534 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 20535 001a 2649     		ldr	r1, .L832+4
 20536 001c 0346     		mov	r3, r0
 20537 001e 5B00     		lsls	r3, r3, #1
 20538 0020 0344     		add	r3, r3, r0
 20539 0022 9B00     		lsls	r3, r3, #2
 20540 0024 1344     		add	r3, r3, r2
 20541 0026 0833     		adds	r3, r3, #8
 20542 0028 9B00     		lsls	r3, r3, #2
 20543 002a 0B44     		add	r3, r3, r1
 20544 002c 5A68     		ldr	r2, [r3, #4]
 20545 002e 204B     		ldr	r3, .L832
 20546 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20547 0034 1C46     		mov	r4, r3
 20548 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20549 0038 1D48     		ldr	r0, .L832
 20550 003a 2346     		mov	r3, r4
 20551 003c 5B00     		lsls	r3, r3, #1
 20552 003e 2344     		add	r3, r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 455


 20553 0040 1B01     		lsls	r3, r3, #4
 20554 0042 0344     		add	r3, r3, r0
 20555 0044 0B44     		add	r3, r3, r1
 20556 0046 03F29513 		addw	r3, r3, #405
 20557 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20558 004c 42FA03F3 		asr	r3, r2, r3
 20559 0050 1BB2     		sxth	r3, r3
 20560 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3060:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20561              		.loc 1 3060 0
 20562 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20563 0056 5B00     		lsls	r3, r3, #1
 20564 0058 0233     		adds	r3, r3, #2
 20565 005a 07F10C02 		add	r2, r7, #12
 20566 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20567 0060 07F11001 		add	r1, r7, #16
 20568 0064 0B44     		add	r3, r3, r1
 20569 0066 03F80C2C 		strb	r2, [r3, #-12]
3061:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20570              		.loc 1 3061 0
 20571 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20572 006c 5B00     		lsls	r3, r3, #1
 20573 006e 5A1C     		adds	r2, r3, #1
 20574 0070 07F10C03 		add	r3, r7, #12
 20575 0074 0133     		adds	r3, r3, #1
 20576 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20577 0078 07F11003 		add	r3, r7, #16
 20578 007c 1344     		add	r3, r3, r2
 20579 007e 0A46     		mov	r2, r1
 20580 0080 03F80C2C 		strb	r2, [r3, #-12]
 20581              	.L830:
3058:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20582              		.loc 1 3058 0 discriminator 1
 20583 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20584 0086 5A1E     		subs	r2, r3, #1
 20585 0088 FA73     		strb	r2, [r7, #15]
 20586 008a 002B     		cmp	r3, #0
 20587 008c C0D1     		bne	.L831
3062:..\src/command_processing.c ****     }
3063:..\src/command_processing.c ****     
3064:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3065:..\src/command_processing.c **** 
3066:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20588              		.loc 1 3066 0
 20589 008e 3B1D     		adds	r3, r7, #4
 20590 0090 0721     		movs	r1, #7
 20591 0092 1846     		mov	r0, r3
 20592 0094 FFF7FEFF 		bl	LCRChecksum
 20593 0098 0346     		mov	r3, r0
 20594 009a FB72     		strb	r3, [r7, #11]
3067:..\src/command_processing.c **** 
3068:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20595              		.loc 1 3068 0
 20596 009c 3B1D     		adds	r3, r7, #4
 20597 009e 0821     		movs	r1, #8
 20598 00a0 1846     		mov	r0, r3
 20599 00a2 FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 456


3069:..\src/command_processing.c **** }
 20600              		.loc 1 3069 0
 20601 00a6 00BF     		nop
 20602 00a8 1437     		adds	r7, r7, #20
 20603              		.cfi_def_cfa_offset 12
 20604 00aa BD46     		mov	sp, r7
 20605              		.cfi_def_cfa_register 13
 20606              		@ sp needed
 20607 00ac 90BD     		pop	{r4, r7, pc}
 20608              	.L833:
 20609 00ae 00BF     		.align	2
 20610              	.L832:
 20611 00b0 00000000 		.word	g_mem
 20612 00b4 00000000 		.word	g_measOld
 20613              		.cfi_endproc
 20614              	.LFE90:
 20615              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 20616              		.section	.text.cmd_set_inputs,"ax",%progbits
 20617              		.align	2
 20618              		.global	cmd_set_inputs
 20619              		.thumb
 20620              		.thumb_func
 20621              		.type	cmd_set_inputs, %function
 20622              	cmd_set_inputs:
 20623              	.LFB91:
3070:..\src/command_processing.c **** 
3071:..\src/command_processing.c **** void cmd_set_inputs(){
 20624              		.loc 1 3071 0
 20625              		.cfi_startproc
 20626              		@ args = 0, pretend = 0, frame = 8
 20627              		@ frame_needed = 1, uses_anonymous_args = 0
 20628              		@ link register save eliminated.
 20629 0000 90B4     		push	{r4, r7}
 20630              		.cfi_def_cfa_offset 8
 20631              		.cfi_offset 4, -8
 20632              		.cfi_offset 7, -4
 20633 0002 82B0     		sub	sp, sp, #8
 20634              		.cfi_def_cfa_offset 16
 20635 0004 00AF     		add	r7, sp, #0
 20636              		.cfi_def_cfa_register 7
3072:..\src/command_processing.c ****     
3073:..\src/command_processing.c ****     // Store position setted in right variables
3074:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3075:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3076:..\src/command_processing.c ****     
3077:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 20637              		.loc 1 3077 0
 20638 0006 894B     		ldr	r3, .L848
 20639 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20640 000a 1B02     		lsls	r3, r3, #8
 20641 000c 1AB2     		sxth	r2, r3
 20642 000e 874B     		ldr	r3, .L848
 20643 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 20644 0012 1BB2     		sxth	r3, r3
 20645 0014 1343     		orrs	r3, r3, r2
 20646 0016 1BB2     		sxth	r3, r3
 20647 0018 3B80     		strh	r3, [r7]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 457


3078:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 20648              		.loc 1 3078 0
 20649 001a 844B     		ldr	r3, .L848
 20650 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 20651 001e 1B02     		lsls	r3, r3, #8
 20652 0020 1AB2     		sxth	r2, r3
 20653 0022 824B     		ldr	r3, .L848
 20654 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20655 0026 1BB2     		sxth	r3, r3
 20656 0028 1343     		orrs	r3, r3, r2
 20657 002a 1BB2     		sxth	r3, r3
 20658 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 20659              	.LBB22:
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     // Check if last command received was the same as this 
3081:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3082:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 20660              		.loc 1 3082 0
 20661 002e 0023     		movs	r3, #0
 20662 0030 FB71     		strb	r3, [r7, #7]
 20663 0032 1DE0     		b	.L835
 20664              	.L837:
3083:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 20665              		.loc 1 3083 0
 20666 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20667 0036 7E4A     		ldr	r2, .L848+4
 20668 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 20669 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20670 003e 5B00     		lsls	r3, r3, #1
 20671 0040 07F10801 		add	r1, r7, #8
 20672 0044 0B44     		add	r3, r3, r1
 20673 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 20674 004a 9A42     		cmp	r2, r3
 20675 004c 02D0     		beq	.L836
3084:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 20676              		.loc 1 3084 0
 20677 004e 794B     		ldr	r3, .L848+8
 20678 0050 0122     		movs	r2, #1
 20679 0052 1A70     		strb	r2, [r3]
 20680              	.L836:
3085:..\src/command_processing.c ****         }
3086:..\src/command_processing.c ****         // Update last command
3087:..\src/command_processing.c ****         last_aux_int16[i] = aux_int16[i];
 20681              		.loc 1 3087 0 discriminator 2
 20682 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20683 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20684 0058 5B00     		lsls	r3, r3, #1
 20685 005a 07F10801 		add	r1, r7, #8
 20686 005e 0B44     		add	r3, r3, r1
 20687 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 20688 0064 724B     		ldr	r3, .L848+4
 20689 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3082:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 20690              		.loc 1 3082 0 discriminator 2
 20691 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20692 006c 0133     		adds	r3, r3, #1
 20693 006e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 458


 20694              	.L835:
3082:..\src/command_processing.c ****         if(last_aux_int16[i] != aux_int16[i]){
 20695              		.loc 1 3082 0 is_stmt 0 discriminator 1
 20696 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20697 0072 714B     		ldr	r3, .L848+12
 20698 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20699 0078 0133     		adds	r3, r3, #1
 20700 007a 9A42     		cmp	r2, r3
 20701 007c DADB     		blt	.L837
 20702              	.LBE22:
3088:..\src/command_processing.c ****     }
3089:..\src/command_processing.c ****     
3090:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3091:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 20703              		.loc 1 3091 0 is_stmt 1
 20704 007e 6D4B     		ldr	r3, .L848+8
 20705 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20706 0082 002B     		cmp	r3, #0
 20707 0084 00F0CC80 		beq	.L847
 20708              	.LBB23:
3092:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 20709              		.loc 1 3092 0
 20710 0088 0023     		movs	r3, #0
 20711 008a BB71     		strb	r3, [r7, #6]
 20712 008c C4E0     		b	.L839
 20713              	.L846:
3093:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20714              		.loc 1 3093 0
 20715 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20716 0090 6A49     		ldr	r1, .L848+16
 20717 0092 1346     		mov	r3, r2
 20718 0094 DB00     		lsls	r3, r3, #3
 20719 0096 9B1A     		subs	r3, r3, r2
 20720 0098 1B01     		lsls	r3, r3, #4
 20721 009a 0B44     		add	r3, r3, r1
 20722 009c 03F20F13 		addw	r3, r3, #271
 20723 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20724 00a2 022B     		cmp	r3, #2
 20725 00a4 0ED1     		bne	.L840
3094:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 20726              		.loc 1 3094 0
 20727 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20728 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20729 00aa 5B00     		lsls	r3, r3, #1
 20730 00ac 07F10801 		add	r1, r7, #8
 20731 00b0 0B44     		add	r3, r3, r1
 20732 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 20733 00b6 1846     		mov	r0, r3
 20734 00b8 6149     		ldr	r1, .L848+20
 20735 00ba 1301     		lsls	r3, r2, #4
 20736 00bc 0B44     		add	r3, r3, r1
 20737 00be 0433     		adds	r3, r3, #4
 20738 00c0 1860     		str	r0, [r3]
 20739 00c2 47E0     		b	.L841
 20740              	.L840:
3095:..\src/command_processing.c ****             }
3096:..\src/command_processing.c ****             else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 459


3097:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 20741              		.loc 1 3097 0
 20742 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20743 00c6 5D49     		ldr	r1, .L848+16
 20744 00c8 1346     		mov	r3, r2
 20745 00ca DB00     		lsls	r3, r3, #3
 20746 00cc 9B1A     		subs	r3, r3, r2
 20747 00ce 1B01     		lsls	r3, r3, #4
 20748 00d0 0B44     		add	r3, r3, r1
 20749 00d2 03F20F13 		addw	r3, r3, #271
 20750 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20751 00d8 012B     		cmp	r3, #1
 20752 00da 0ED1     		bne	.L842
3098:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 20753              		.loc 1 3098 0
 20754 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20755 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20756 00e0 5B00     		lsls	r3, r3, #1
 20757 00e2 07F10801 		add	r1, r7, #8
 20758 00e6 0B44     		add	r3, r3, r1
 20759 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 20760 00ec 1846     		mov	r0, r3
 20761 00ee 5449     		ldr	r1, .L848+20
 20762 00f0 1301     		lsls	r3, r2, #4
 20763 00f2 0B44     		add	r3, r3, r1
 20764 00f4 0833     		adds	r3, r3, #8
 20765 00f6 1860     		str	r0, [r3]
 20766 00f8 2CE0     		b	.L841
 20767              	.L842:
3099:..\src/command_processing.c ****                 }
3100:..\src/command_processing.c ****                 else {
3101:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 20768              		.loc 1 3101 0
 20769 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20770 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20771 00fe 5B00     		lsls	r3, r3, #1
 20772 0100 07F10801 		add	r1, r7, #8
 20773 0104 0B44     		add	r3, r3, r1
 20774 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 20775 010a 1846     		mov	r0, r3
 20776 010c 4C49     		ldr	r1, .L848+20
 20777 010e 1301     		lsls	r3, r2, #4
 20778 0110 0B44     		add	r3, r3, r1
 20779 0112 1860     		str	r0, [r3]
3102:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 20780              		.loc 1 3102 0
 20781 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20782 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20783 0118 494A     		ldr	r2, .L848+20
 20784 011a 1B01     		lsls	r3, r3, #4
 20785 011c 1344     		add	r3, r3, r2
 20786 011e 1868     		ldr	r0, [r3]
 20787 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20788 0122 454C     		ldr	r4, .L848+12
 20789 0124 1346     		mov	r3, r2
 20790 0126 DB00     		lsls	r3, r3, #3
 20791 0128 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 460


 20792 012a 1B01     		lsls	r3, r3, #4
 20793 012c 2344     		add	r3, r3, r4
 20794 012e 03F58873 		add	r3, r3, #272
 20795 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20796 0134 1C46     		mov	r4, r3
 20797 0136 414A     		ldr	r2, .L848+16
 20798 0138 2346     		mov	r3, r4
 20799 013a 5B00     		lsls	r3, r3, #1
 20800 013c 2344     		add	r3, r3, r4
 20801 013e 1B01     		lsls	r3, r3, #4
 20802 0140 1344     		add	r3, r3, r2
 20803 0142 03F29513 		addw	r3, r3, #405
 20804 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20805 0148 00FA03F2 		lsl	r2, r0, r3
 20806 014c 3C48     		ldr	r0, .L848+20
 20807 014e 0B01     		lsls	r3, r1, #4
 20808 0150 0344     		add	r3, r3, r0
 20809 0152 1A60     		str	r2, [r3]
 20810              	.L841:
3103:..\src/command_processing.c ****                 }
3104:..\src/command_processing.c ****             }  
3105:..\src/command_processing.c ****                
3106:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3107:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 20811              		.loc 1 3107 0
 20812 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20813 0156 3849     		ldr	r1, .L848+12
 20814 0158 1346     		mov	r3, r2
 20815 015a DB00     		lsls	r3, r3, #3
 20816 015c 9B1A     		subs	r3, r3, r2
 20817 015e 1B01     		lsls	r3, r3, #4
 20818 0160 0B44     		add	r3, r3, r1
 20819 0162 E333     		adds	r3, r3, #227
 20820 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20821 0166 002B     		cmp	r3, #0
 20822 0168 53D0     		beq	.L843
 20823              		.loc 1 3107 0 is_stmt 0 discriminator 1
 20824 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20825 016c 3349     		ldr	r1, .L848+16
 20826 016e 1346     		mov	r3, r2
 20827 0170 DB00     		lsls	r3, r3, #3
 20828 0172 9B1A     		subs	r3, r3, r2
 20829 0174 1B01     		lsls	r3, r3, #4
 20830 0176 0B44     		add	r3, r3, r1
 20831 0178 03F20F13 		addw	r3, r3, #271
 20832 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20833 017e 032B     		cmp	r3, #3
 20834 0180 0BD0     		beq	.L844
 20835              		.loc 1 3107 0 discriminator 2
 20836 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20837 0184 2D49     		ldr	r1, .L848+16
 20838 0186 1346     		mov	r3, r2
 20839 0188 DB00     		lsls	r3, r3, #3
 20840 018a 9B1A     		subs	r3, r3, r2
 20841 018c 1B01     		lsls	r3, r3, #4
 20842 018e 0B44     		add	r3, r3, r1
 20843 0190 03F20F13 		addw	r3, r3, #271
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 461


 20844 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20845 0196 002B     		cmp	r3, #0
 20846 0198 3BD1     		bne	.L843
 20847              	.L844:
3108:..\src/command_processing.c ****                 
3109:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 20848              		.loc 1 3109 0 is_stmt 1
 20849 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20850 019c 284A     		ldr	r2, .L848+20
 20851 019e 1B01     		lsls	r3, r3, #4
 20852 01a0 1344     		add	r3, r3, r2
 20853 01a2 1968     		ldr	r1, [r3]
 20854 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20855 01a6 2448     		ldr	r0, .L848+12
 20856 01a8 1346     		mov	r3, r2
 20857 01aa DB00     		lsls	r3, r3, #3
 20858 01ac 9B1A     		subs	r3, r3, r2
 20859 01ae 1B01     		lsls	r3, r3, #4
 20860 01b0 0344     		add	r3, r3, r0
 20861 01b2 E433     		adds	r3, r3, #228
 20862 01b4 1B68     		ldr	r3, [r3]
 20863 01b6 9942     		cmp	r1, r3
 20864 01b8 0DDA     		bge	.L845
3110:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 20865              		.loc 1 3110 0
 20866 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20867 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20868 01be 1E48     		ldr	r0, .L848+12
 20869 01c0 1346     		mov	r3, r2
 20870 01c2 DB00     		lsls	r3, r3, #3
 20871 01c4 9B1A     		subs	r3, r3, r2
 20872 01c6 1B01     		lsls	r3, r3, #4
 20873 01c8 0344     		add	r3, r3, r0
 20874 01ca E433     		adds	r3, r3, #228
 20875 01cc 1A68     		ldr	r2, [r3]
 20876 01ce 1C48     		ldr	r0, .L848+20
 20877 01d0 0B01     		lsls	r3, r1, #4
 20878 01d2 0344     		add	r3, r3, r0
 20879 01d4 1A60     		str	r2, [r3]
 20880              	.L845:
3111:..\src/command_processing.c **** 
3112:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 20881              		.loc 1 3112 0
 20882 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20883 01d8 194A     		ldr	r2, .L848+20
 20884 01da 1B01     		lsls	r3, r3, #4
 20885 01dc 1344     		add	r3, r3, r2
 20886 01de 1968     		ldr	r1, [r3]
 20887 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20888 01e2 1548     		ldr	r0, .L848+12
 20889 01e4 1346     		mov	r3, r2
 20890 01e6 DB00     		lsls	r3, r3, #3
 20891 01e8 9B1A     		subs	r3, r3, r2
 20892 01ea 1B01     		lsls	r3, r3, #4
 20893 01ec 0344     		add	r3, r3, r0
 20894 01ee E833     		adds	r3, r3, #232
 20895 01f0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 462


 20896 01f2 9942     		cmp	r1, r3
 20897 01f4 0DDD     		ble	.L843
3113:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 20898              		.loc 1 3113 0
 20899 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20900 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20901 01fa 0F48     		ldr	r0, .L848+12
 20902 01fc 1346     		mov	r3, r2
 20903 01fe DB00     		lsls	r3, r3, #3
 20904 0200 9B1A     		subs	r3, r3, r2
 20905 0202 1B01     		lsls	r3, r3, #4
 20906 0204 0344     		add	r3, r3, r0
 20907 0206 E833     		adds	r3, r3, #232
 20908 0208 1A68     		ldr	r2, [r3]
 20909 020a 0D48     		ldr	r0, .L848+20
 20910 020c 0B01     		lsls	r3, r1, #4
 20911 020e 0344     		add	r3, r3, r0
 20912 0210 1A60     		str	r2, [r3]
 20913              	.L843:
3092:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20914              		.loc 1 3092 0 discriminator 2
 20915 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20916 0214 0133     		adds	r3, r3, #1
 20917 0216 BB71     		strb	r3, [r7, #6]
 20918              	.L839:
3092:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20919              		.loc 1 3092 0 is_stmt 0 discriminator 1
 20920 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20921 021a 012B     		cmp	r3, #1
 20922 021c 7FF637AF 		bls	.L846
 20923              	.L847:
 20924              	.LBE23:
3114:..\src/command_processing.c ****             }
3115:..\src/command_processing.c ****         }  
3116:..\src/command_processing.c ****     }
3117:..\src/command_processing.c **** }
 20925              		.loc 1 3117 0 is_stmt 1
 20926 0220 00BF     		nop
 20927 0222 0837     		adds	r7, r7, #8
 20928              		.cfi_def_cfa_offset 8
 20929 0224 BD46     		mov	sp, r7
 20930              		.cfi_def_cfa_register 13
 20931              		@ sp needed
 20932 0226 90BC     		pop	{r4, r7}
 20933              		.cfi_restore 7
 20934              		.cfi_restore 4
 20935              		.cfi_def_cfa_offset 0
 20936 0228 7047     		bx	lr
 20937              	.L849:
 20938 022a 00BF     		.align	2
 20939              	.L848:
 20940 022c 00000000 		.word	g_rx
 20941 0230 00000000 		.word	last_aux_int16.11230
 20942 0234 00000000 		.word	change_ext_ref_flag
 20943 0238 00000000 		.word	c_mem
 20944 023c 00000000 		.word	g_mem
 20945 0240 00000000 		.word	g_refNew
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 463


 20946              		.cfi_endproc
 20947              	.LFE91:
 20948              		.size	cmd_set_inputs, .-cmd_set_inputs
 20949              		.section	.text.cmd_activate,"ax",%progbits
 20950              		.align	2
 20951              		.global	cmd_activate
 20952              		.thumb
 20953              		.thumb_func
 20954              		.type	cmd_activate, %function
 20955              	cmd_activate:
 20956              	.LFB92:
3118:..\src/command_processing.c **** 
3119:..\src/command_processing.c **** void cmd_activate(){
 20957              		.loc 1 3119 0
 20958              		.cfi_startproc
 20959              		@ args = 0, pretend = 0, frame = 8
 20960              		@ frame_needed = 1, uses_anonymous_args = 0
 20961 0000 80B5     		push	{r7, lr}
 20962              		.cfi_def_cfa_offset 8
 20963              		.cfi_offset 7, -8
 20964              		.cfi_offset 14, -4
 20965 0002 82B0     		sub	sp, sp, #8
 20966              		.cfi_def_cfa_offset 16
 20967 0004 00AF     		add	r7, sp, #0
 20968              		.cfi_def_cfa_register 7
3120:..\src/command_processing.c ****     
3121:..\src/command_processing.c ****     // Store new value reads
3122:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 20969              		.loc 1 3122 0
 20970 0006 2A4B     		ldr	r3, .L857
 20971 0008 5B78     		ldrb	r3, [r3, #1]
 20972 000a FB71     		strb	r3, [r7, #7]
3123:..\src/command_processing.c ****     
3124:..\src/command_processing.c ****     // Check type of control mode enabled
3125:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 20973              		.loc 1 3125 0
 20974 000c 294B     		ldr	r3, .L857+4
 20975 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 20976 0012 002B     		cmp	r3, #0
 20977 0014 04D0     		beq	.L851
 20978              		.loc 1 3125 0 is_stmt 0 discriminator 1
 20979 0016 274B     		ldr	r3, .L857+4
 20980 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 20981 001c 032B     		cmp	r3, #3
 20982 001e 0CD1     		bne	.L852
 20983              	.L851:
3126:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 20984              		.loc 1 3126 0 is_stmt 1
 20985 0020 244B     		ldr	r3, .L857+4
 20986 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20987 0026 1946     		mov	r1, r3
 20988 0028 234A     		ldr	r2, .L857+8
 20989 002a 0B46     		mov	r3, r1
 20990 002c 5B00     		lsls	r3, r3, #1
 20991 002e 0B44     		add	r3, r3, r1
 20992 0030 1B01     		lsls	r3, r3, #4
 20993 0032 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 464


 20994 0034 1B68     		ldr	r3, [r3]
 20995 0036 214A     		ldr	r2, .L857+12
 20996 0038 1360     		str	r3, [r2]
 20997              	.L852:
3127:..\src/command_processing.c ****     }
3128:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 20998              		.loc 1 3128 0
 20999 003a FB79     		ldrb	r3, [r7, #7]
 21000 003c 03F00103 		and	r3, r3, #1
 21001 0040 DAB2     		uxtb	r2, r3
 21002 0042 1E4B     		ldr	r3, .L857+12
 21003 0044 1A73     		strb	r2, [r3, #12]
3129:..\src/command_processing.c ****     // Activate/Deactivate motor
3130:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 21004              		.loc 1 3130 0
 21005 0046 1D4B     		ldr	r3, .L857+12
 21006 0048 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21007 004a 1946     		mov	r1, r3
 21008 004c 0020     		movs	r0, #0
 21009 004e FFF7FEFF 		bl	enable_motor
3131:..\src/command_processing.c ****     
3132:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21010              		.loc 1 3132 0
 21011 0052 184B     		ldr	r3, .L857+4
 21012 0054 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21013 0058 012B     		cmp	r3, #1
 21014 005a 24D1     		bne	.L856
3133:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 21015              		.loc 1 3133 0
 21016 005c 154B     		ldr	r3, .L857+4
 21017 005e 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21018 0062 002B     		cmp	r3, #0
 21019 0064 04D0     		beq	.L854
 21020              		.loc 1 3133 0 is_stmt 0 discriminator 1
 21021 0066 134B     		ldr	r3, .L857+4
 21022 0068 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21023 006c 032B     		cmp	r3, #3
 21024 006e 0CD1     		bne	.L855
 21025              	.L854:
3134:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 21026              		.loc 1 3134 0 is_stmt 1
 21027 0070 104B     		ldr	r3, .L857+4
 21028 0072 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21029 0076 1946     		mov	r1, r3
 21030 0078 0F4A     		ldr	r2, .L857+8
 21031 007a 0B46     		mov	r3, r1
 21032 007c 5B00     		lsls	r3, r3, #1
 21033 007e 0B44     		add	r3, r3, r1
 21034 0080 1B01     		lsls	r3, r3, #4
 21035 0082 1344     		add	r3, r3, r2
 21036 0084 1B68     		ldr	r3, [r3]
 21037 0086 0D4A     		ldr	r2, .L857+12
 21038 0088 1361     		str	r3, [r2, #16]
 21039              	.L855:
3135:..\src/command_processing.c ****         }
3136:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 21040              		.loc 1 3136 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 465


 21041 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21042 008c 5B08     		lsrs	r3, r3, #1
 21043 008e DBB2     		uxtb	r3, r3
 21044 0090 03F00103 		and	r3, r3, #1
 21045 0094 DAB2     		uxtb	r2, r3
 21046 0096 094B     		ldr	r3, .L857+12
 21047 0098 1A77     		strb	r2, [r3, #28]
3137:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 21048              		.loc 1 3137 0
 21049 009a 084B     		ldr	r3, .L857+12
 21050 009c 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21051 009e 1946     		mov	r1, r3
 21052 00a0 0120     		movs	r0, #1
 21053 00a2 FFF7FEFF 		bl	enable_motor
 21054              	.L856:
3138:..\src/command_processing.c ****     }
3139:..\src/command_processing.c ****     
3140:..\src/command_processing.c **** }
 21055              		.loc 1 3140 0
 21056 00a6 00BF     		nop
 21057 00a8 0837     		adds	r7, r7, #8
 21058              		.cfi_def_cfa_offset 8
 21059 00aa BD46     		mov	sp, r7
 21060              		.cfi_def_cfa_register 13
 21061              		@ sp needed
 21062 00ac 80BD     		pop	{r7, pc}
 21063              	.L858:
 21064 00ae 00BF     		.align	2
 21065              	.L857:
 21066 00b0 00000000 		.word	g_rx
 21067 00b4 00000000 		.word	g_mem
 21068 00b8 00000000 		.word	g_meas
 21069 00bc 00000000 		.word	g_refNew
 21070              		.cfi_endproc
 21071              	.LFE92:
 21072              		.size	cmd_activate, .-cmd_activate
 21073              		.section	.text.cmd_get_activate,"ax",%progbits
 21074              		.align	2
 21075              		.global	cmd_get_activate
 21076              		.thumb
 21077              		.thumb_func
 21078              		.type	cmd_get_activate, %function
 21079              	cmd_get_activate:
 21080              	.LFB93:
3141:..\src/command_processing.c **** 
3142:..\src/command_processing.c **** void cmd_get_activate(){
 21081              		.loc 1 3142 0
 21082              		.cfi_startproc
 21083              		@ args = 0, pretend = 0, frame = 8
 21084              		@ frame_needed = 1, uses_anonymous_args = 0
 21085 0000 80B5     		push	{r7, lr}
 21086              		.cfi_def_cfa_offset 8
 21087              		.cfi_offset 7, -8
 21088              		.cfi_offset 14, -4
 21089 0002 82B0     		sub	sp, sp, #8
 21090              		.cfi_def_cfa_offset 16
 21091 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 466


 21092              		.cfi_def_cfa_register 7
3143:..\src/command_processing.c ****     
3144:..\src/command_processing.c ****     uint8 packet_data[3];
3145:..\src/command_processing.c **** 
3146:..\src/command_processing.c ****     // Header        
3147:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 21093              		.loc 1 3147 0
 21094 0006 8123     		movs	r3, #129
 21095 0008 3B71     		strb	r3, [r7, #4]
3148:..\src/command_processing.c ****     
3149:..\src/command_processing.c ****     // Fill payload
3150:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21096              		.loc 1 3150 0
 21097 000a 124B     		ldr	r3, .L862
 21098 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21099 0010 012B     		cmp	r3, #1
 21100 0012 0BD1     		bne	.L860
3151:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 21101              		.loc 1 3151 0
 21102 0014 104B     		ldr	r3, .L862+4
 21103 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21104 0018 5B00     		lsls	r3, r3, #1
 21105 001a 5AB2     		sxtb	r2, r3
 21106 001c 0E4B     		ldr	r3, .L862+4
 21107 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21108 0020 5BB2     		sxtb	r3, r3
 21109 0022 1343     		orrs	r3, r3, r2
 21110 0024 5BB2     		sxtb	r3, r3
 21111 0026 DBB2     		uxtb	r3, r3
 21112 0028 7B71     		strb	r3, [r7, #5]
 21113 002a 02E0     		b	.L861
 21114              	.L860:
3152:..\src/command_processing.c ****     } 
3153:..\src/command_processing.c ****     else {
3154:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 21115              		.loc 1 3154 0
 21116 002c 0A4B     		ldr	r3, .L862+4
 21117 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21118 0030 7B71     		strb	r3, [r7, #5]
 21119              	.L861:
3155:..\src/command_processing.c ****     }
3156:..\src/command_processing.c ****     
3157:..\src/command_processing.c ****     // Calculate checksum
3158:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 21120              		.loc 1 3158 0
 21121 0032 3B1D     		adds	r3, r7, #4
 21122 0034 0221     		movs	r1, #2
 21123 0036 1846     		mov	r0, r3
 21124 0038 FFF7FEFF 		bl	LCRChecksum
 21125 003c 0346     		mov	r3, r0
 21126 003e BB71     		strb	r3, [r7, #6]
3159:..\src/command_processing.c ****     
3160:..\src/command_processing.c ****     // Send package to UART
3161:..\src/command_processing.c ****     commWrite(packet_data, 3);
 21127              		.loc 1 3161 0
 21128 0040 3B1D     		adds	r3, r7, #4
 21129 0042 0321     		movs	r1, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 467


 21130 0044 1846     		mov	r0, r3
 21131 0046 FFF7FEFF 		bl	commWrite
3162:..\src/command_processing.c **** 
3163:..\src/command_processing.c **** }
 21132              		.loc 1 3163 0
 21133 004a 00BF     		nop
 21134 004c 0837     		adds	r7, r7, #8
 21135              		.cfi_def_cfa_offset 8
 21136 004e BD46     		mov	sp, r7
 21137              		.cfi_def_cfa_register 13
 21138              		@ sp needed
 21139 0050 80BD     		pop	{r7, pc}
 21140              	.L863:
 21141 0052 00BF     		.align	2
 21142              	.L862:
 21143 0054 00000000 		.word	g_mem
 21144 0058 00000000 		.word	g_ref
 21145              		.cfi_endproc
 21146              	.LFE93:
 21147              		.size	cmd_get_activate, .-cmd_get_activate
 21148              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 21149              		.align	2
 21150              		.global	cmd_get_curr_and_meas
 21151              		.thumb
 21152              		.thumb_func
 21153              		.type	cmd_get_curr_and_meas, %function
 21154              	cmd_get_curr_and_meas:
 21155              	.LFB94:
3164:..\src/command_processing.c **** 
3165:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 21156              		.loc 1 3165 0
 21157              		.cfi_startproc
 21158              		@ args = 0, pretend = 0, frame = 16
 21159              		@ frame_needed = 1, uses_anonymous_args = 0
 21160 0000 90B5     		push	{r4, r7, lr}
 21161              		.cfi_def_cfa_offset 12
 21162              		.cfi_offset 4, -12
 21163              		.cfi_offset 7, -8
 21164              		.cfi_offset 14, -4
 21165 0002 85B0     		sub	sp, sp, #20
 21166              		.cfi_def_cfa_offset 32
 21167 0004 00AF     		add	r7, sp, #0
 21168              		.cfi_def_cfa_register 7
3166:..\src/command_processing.c ****     
3167:..\src/command_processing.c ****     uint8 CYDATA index;
3168:..\src/command_processing.c ****     int16 aux_int16;
3169:..\src/command_processing.c ****    
3170:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3171:..\src/command_processing.c ****     
3172:..\src/command_processing.c ****     uint8 packet_data[12]; 
3173:..\src/command_processing.c **** 
3174:..\src/command_processing.c ****     //Header package
3175:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 21169              		.loc 1 3175 0
 21170 0006 8623     		movs	r3, #134
 21171 0008 3B70     		strb	r3, [r7]
3176:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 468


3177:..\src/command_processing.c ****     // Currents
3178:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 21172              		.loc 1 3178 0
 21173 000a 494B     		ldr	r3, .L869
 21174 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21175 0010 1946     		mov	r1, r3
 21176 0012 484A     		ldr	r2, .L869+4
 21177 0014 0B46     		mov	r3, r1
 21178 0016 5B00     		lsls	r3, r3, #1
 21179 0018 0B44     		add	r3, r3, r1
 21180 001a 1B01     		lsls	r3, r3, #4
 21181 001c 1344     		add	r3, r3, r2
 21182 001e 0C33     		adds	r3, r3, #12
 21183 0020 1B68     		ldr	r3, [r3]
 21184 0022 1BB2     		sxth	r3, r3
 21185 0024 BB81     		strh	r3, [r7, #12]	@ movhi
3179:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21186              		.loc 1 3179 0
 21187 0026 07F10C03 		add	r3, r7, #12
 21188 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21189 002c BB70     		strb	r3, [r7, #2]
3180:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21190              		.loc 1 3180 0
 21191 002e 07F10C03 		add	r3, r7, #12
 21192 0032 0133     		adds	r3, r3, #1
 21193 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21194 0036 7B70     		strb	r3, [r7, #1]
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21195              		.loc 1 3182 0
 21196 0038 3F4B     		ldr	r3, .L869+8
 21197 003a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21198 003e 012B     		cmp	r3, #1
 21199 0040 0ED1     		bne	.L865
3183:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21200              		.loc 1 3183 0
 21201 0042 3B4B     		ldr	r3, .L869
 21202 0044 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21203 0048 1946     		mov	r1, r3
 21204 004a 3A4A     		ldr	r2, .L869+4
 21205 004c 0B46     		mov	r3, r1
 21206 004e 5B00     		lsls	r3, r3, #1
 21207 0050 0B44     		add	r3, r3, r1
 21208 0052 1B01     		lsls	r3, r3, #4
 21209 0054 1344     		add	r3, r3, r2
 21210 0056 0C33     		adds	r3, r3, #12
 21211 0058 1B68     		ldr	r3, [r3]
 21212 005a 1BB2     		sxth	r3, r3
 21213 005c BB81     		strh	r3, [r7, #12]	@ movhi
 21214 005e 0DE0     		b	.L866
 21215              	.L865:
3184:..\src/command_processing.c ****     }
3185:..\src/command_processing.c ****     else {
3186:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21216              		.loc 1 3186 0
 21217 0060 334B     		ldr	r3, .L869
 21218 0062 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 469


 21219 0066 1946     		mov	r1, r3
 21220 0068 324A     		ldr	r2, .L869+4
 21221 006a 0B46     		mov	r3, r1
 21222 006c 5B00     		lsls	r3, r3, #1
 21223 006e 0B44     		add	r3, r3, r1
 21224 0070 1B01     		lsls	r3, r3, #4
 21225 0072 1344     		add	r3, r3, r2
 21226 0074 1033     		adds	r3, r3, #16
 21227 0076 1B68     		ldr	r3, [r3]
 21228 0078 1BB2     		sxth	r3, r3
 21229 007a BB81     		strh	r3, [r7, #12]	@ movhi
 21230              	.L866:
3187:..\src/command_processing.c ****     }
3188:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21231              		.loc 1 3188 0
 21232 007c 07F10C03 		add	r3, r7, #12
 21233 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21234 0082 3B71     		strb	r3, [r7, #4]
3189:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21235              		.loc 1 3189 0
 21236 0084 07F10C03 		add	r3, r7, #12
 21237 0088 0133     		adds	r3, r3, #1
 21238 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21239 008c FB70     		strb	r3, [r7, #3]
3190:..\src/command_processing.c **** 
3191:..\src/command_processing.c ****     // Positions
3192:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21240              		.loc 1 3192 0
 21241 008e 0323     		movs	r3, #3
 21242 0090 FB73     		strb	r3, [r7, #15]
 21243 0092 37E0     		b	.L867
 21244              	.L868:
3193:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21245              		.loc 1 3193 0
 21246 0094 264B     		ldr	r3, .L869
 21247 0096 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21248 009a 1846     		mov	r0, r3
 21249 009c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 21250 009e 2549     		ldr	r1, .L869+4
 21251 00a0 0346     		mov	r3, r0
 21252 00a2 5B00     		lsls	r3, r3, #1
 21253 00a4 0344     		add	r3, r3, r0
 21254 00a6 9B00     		lsls	r3, r3, #2
 21255 00a8 1344     		add	r3, r3, r2
 21256 00aa 51F82320 		ldr	r2, [r1, r3, lsl #2]
 21257 00ae 204B     		ldr	r3, .L869
 21258 00b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21259 00b4 1C46     		mov	r4, r3
 21260 00b6 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21261 00b8 1D48     		ldr	r0, .L869
 21262 00ba 2346     		mov	r3, r4
 21263 00bc 5B00     		lsls	r3, r3, #1
 21264 00be 2344     		add	r3, r3, r4
 21265 00c0 1B01     		lsls	r3, r3, #4
 21266 00c2 0344     		add	r3, r3, r0
 21267 00c4 0B44     		add	r3, r3, r1
 21268 00c6 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 470


 21269 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21270 00cc 42FA03F3 		asr	r3, r2, r3
 21271 00d0 1BB2     		sxth	r3, r3
 21272 00d2 BB81     		strh	r3, [r7, #12]	@ movhi
3194:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 21273              		.loc 1 3194 0
 21274 00d4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21275 00d6 5B00     		lsls	r3, r3, #1
 21276 00d8 0633     		adds	r3, r3, #6
 21277 00da 07F10C02 		add	r2, r7, #12
 21278 00de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21279 00e0 07F11001 		add	r1, r7, #16
 21280 00e4 0B44     		add	r3, r3, r1
 21281 00e6 03F8102C 		strb	r2, [r3, #-16]
3195:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 21282              		.loc 1 3195 0
 21283 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21284 00ec 5B00     		lsls	r3, r3, #1
 21285 00ee 5A1D     		adds	r2, r3, #5
 21286 00f0 07F10C03 		add	r3, r7, #12
 21287 00f4 0133     		adds	r3, r3, #1
 21288 00f6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21289 00f8 07F11003 		add	r3, r7, #16
 21290 00fc 1344     		add	r3, r3, r2
 21291 00fe 0A46     		mov	r2, r1
 21292 0100 03F8102C 		strb	r2, [r3, #-16]
 21293              	.L867:
3192:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21294              		.loc 1 3192 0 discriminator 1
 21295 0104 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21296 0106 5A1E     		subs	r2, r3, #1
 21297 0108 FA73     		strb	r2, [r7, #15]
 21298 010a 002B     		cmp	r3, #0
 21299 010c C2D1     		bne	.L868
3196:..\src/command_processing.c ****     }
3197:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3198:..\src/command_processing.c ****         
3199:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 21300              		.loc 1 3199 0
 21301 010e 3B46     		mov	r3, r7
 21302 0110 0B21     		movs	r1, #11
 21303 0112 1846     		mov	r0, r3
 21304 0114 FFF7FEFF 		bl	LCRChecksum
 21305 0118 0346     		mov	r3, r0
 21306 011a FB72     		strb	r3, [r7, #11]
3200:..\src/command_processing.c ****     commWrite(packet_data, 12);
 21307              		.loc 1 3200 0
 21308 011c 3B46     		mov	r3, r7
 21309 011e 0C21     		movs	r1, #12
 21310 0120 1846     		mov	r0, r3
 21311 0122 FFF7FEFF 		bl	commWrite
3201:..\src/command_processing.c ****    
3202:..\src/command_processing.c **** }
 21312              		.loc 1 3202 0
 21313 0126 00BF     		nop
 21314 0128 1437     		adds	r7, r7, #20
 21315              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 471


 21316 012a BD46     		mov	sp, r7
 21317              		.cfi_def_cfa_register 13
 21318              		@ sp needed
 21319 012c 90BD     		pop	{r4, r7, pc}
 21320              	.L870:
 21321 012e 00BF     		.align	2
 21322              	.L869:
 21323 0130 00000000 		.word	g_mem
 21324 0134 00000000 		.word	g_measOld
 21325 0138 00000000 		.word	c_mem
 21326              		.cfi_endproc
 21327              	.LFE94:
 21328              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 21329              		.section	.text.cmd_get_currents,"ax",%progbits
 21330              		.align	2
 21331              		.global	cmd_get_currents
 21332              		.thumb
 21333              		.thumb_func
 21334              		.type	cmd_get_currents, %function
 21335              	cmd_get_currents:
 21336              	.LFB95:
3203:..\src/command_processing.c **** 
3204:..\src/command_processing.c **** void cmd_get_currents(){
 21337              		.loc 1 3204 0
 21338              		.cfi_startproc
 21339              		@ args = 0, pretend = 0, frame = 16
 21340              		@ frame_needed = 1, uses_anonymous_args = 0
 21341 0000 80B5     		push	{r7, lr}
 21342              		.cfi_def_cfa_offset 8
 21343              		.cfi_offset 7, -8
 21344              		.cfi_offset 14, -4
 21345 0002 84B0     		sub	sp, sp, #16
 21346              		.cfi_def_cfa_offset 24
 21347 0004 00AF     		add	r7, sp, #0
 21348              		.cfi_def_cfa_register 7
3205:..\src/command_processing.c ****     
3206:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3207:..\src/command_processing.c ****     
3208:..\src/command_processing.c ****     uint8 packet_data[6]; 
3209:..\src/command_processing.c ****     int16 aux_int16;
3210:..\src/command_processing.c ****     
3211:..\src/command_processing.c ****     //Header package
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 21349              		.loc 1 3213 0
 21350 0006 8523     		movs	r3, #133
 21351 0008 3B72     		strb	r3, [r7, #8]
3214:..\src/command_processing.c **** 
3215:..\src/command_processing.c ****     // Currents
3216:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 21352              		.loc 1 3216 0
 21353 000a 284B     		ldr	r3, .L874
 21354 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21355 0010 1946     		mov	r1, r3
 21356 0012 274A     		ldr	r2, .L874+4
 21357 0014 0B46     		mov	r3, r1
 21358 0016 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 472


 21359 0018 0B44     		add	r3, r3, r1
 21360 001a 1B01     		lsls	r3, r3, #4
 21361 001c 1344     		add	r3, r3, r2
 21362 001e 0C33     		adds	r3, r3, #12
 21363 0020 1B68     		ldr	r3, [r3]
 21364 0022 1BB2     		sxth	r3, r3
 21365 0024 FB80     		strh	r3, [r7, #6]	@ movhi
3217:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21366              		.loc 1 3217 0
 21367 0026 BB1D     		adds	r3, r7, #6
 21368 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21369 002a BB72     		strb	r3, [r7, #10]
3218:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21370              		.loc 1 3218 0
 21371 002c BB1D     		adds	r3, r7, #6
 21372 002e 0133     		adds	r3, r3, #1
 21373 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21374 0032 7B72     		strb	r3, [r7, #9]
3219:..\src/command_processing.c ****     
3220:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21375              		.loc 1 3220 0
 21376 0034 1F4B     		ldr	r3, .L874+8
 21377 0036 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21378 003a 012B     		cmp	r3, #1
 21379 003c 0ED1     		bne	.L872
3221:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21380              		.loc 1 3221 0
 21381 003e 1B4B     		ldr	r3, .L874
 21382 0040 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21383 0044 1946     		mov	r1, r3
 21384 0046 1A4A     		ldr	r2, .L874+4
 21385 0048 0B46     		mov	r3, r1
 21386 004a 5B00     		lsls	r3, r3, #1
 21387 004c 0B44     		add	r3, r3, r1
 21388 004e 1B01     		lsls	r3, r3, #4
 21389 0050 1344     		add	r3, r3, r2
 21390 0052 0C33     		adds	r3, r3, #12
 21391 0054 1B68     		ldr	r3, [r3]
 21392 0056 1BB2     		sxth	r3, r3
 21393 0058 FB80     		strh	r3, [r7, #6]	@ movhi
 21394 005a 0DE0     		b	.L873
 21395              	.L872:
3222:..\src/command_processing.c ****     }
3223:..\src/command_processing.c ****     else {
3224:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21396              		.loc 1 3224 0
 21397 005c 134B     		ldr	r3, .L874
 21398 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21399 0062 1946     		mov	r1, r3
 21400 0064 124A     		ldr	r2, .L874+4
 21401 0066 0B46     		mov	r3, r1
 21402 0068 5B00     		lsls	r3, r3, #1
 21403 006a 0B44     		add	r3, r3, r1
 21404 006c 1B01     		lsls	r3, r3, #4
 21405 006e 1344     		add	r3, r3, r2
 21406 0070 1033     		adds	r3, r3, #16
 21407 0072 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 473


 21408 0074 1BB2     		sxth	r3, r3
 21409 0076 FB80     		strh	r3, [r7, #6]	@ movhi
 21410              	.L873:
3225:..\src/command_processing.c ****     }
3226:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21411              		.loc 1 3226 0
 21412 0078 BB1D     		adds	r3, r7, #6
 21413 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21414 007c 3B73     		strb	r3, [r7, #12]
3227:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21415              		.loc 1 3227 0
 21416 007e BB1D     		adds	r3, r7, #6
 21417 0080 0133     		adds	r3, r3, #1
 21418 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21419 0084 FB72     		strb	r3, [r7, #11]
3228:..\src/command_processing.c **** 
3229:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3230:..\src/command_processing.c **** 
3231:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21420              		.loc 1 3231 0
 21421 0086 07F10803 		add	r3, r7, #8
 21422 008a 0521     		movs	r1, #5
 21423 008c 1846     		mov	r0, r3
 21424 008e FFF7FEFF 		bl	LCRChecksum
 21425 0092 0346     		mov	r3, r0
 21426 0094 7B73     		strb	r3, [r7, #13]
3232:..\src/command_processing.c ****     
3233:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21427              		.loc 1 3233 0
 21428 0096 07F10803 		add	r3, r7, #8
 21429 009a 0621     		movs	r1, #6
 21430 009c 1846     		mov	r0, r3
 21431 009e FFF7FEFF 		bl	commWrite
3234:..\src/command_processing.c **** }
 21432              		.loc 1 3234 0
 21433 00a2 00BF     		nop
 21434 00a4 1037     		adds	r7, r7, #16
 21435              		.cfi_def_cfa_offset 8
 21436 00a6 BD46     		mov	sp, r7
 21437              		.cfi_def_cfa_register 13
 21438              		@ sp needed
 21439 00a8 80BD     		pop	{r7, pc}
 21440              	.L875:
 21441 00aa 00BF     		.align	2
 21442              	.L874:
 21443 00ac 00000000 		.word	g_mem
 21444 00b0 00000000 		.word	g_measOld
 21445 00b4 00000000 		.word	c_mem
 21446              		.cfi_endproc
 21447              	.LFE95:
 21448              		.size	cmd_get_currents, .-cmd_get_currents
 21449              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 21450              		.align	2
 21451              		.global	cmd_get_currents_for_cuff
 21452              		.thumb
 21453              		.thumb_func
 21454              		.type	cmd_get_currents_for_cuff, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 474


 21455              	cmd_get_currents_for_cuff:
 21456              	.LFB96:
3235:..\src/command_processing.c **** 
3236:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 21457              		.loc 1 3236 0
 21458              		.cfi_startproc
 21459              		@ args = 0, pretend = 0, frame = 8
 21460              		@ frame_needed = 1, uses_anonymous_args = 0
 21461 0000 80B5     		push	{r7, lr}
 21462              		.cfi_def_cfa_offset 8
 21463              		.cfi_offset 7, -8
 21464              		.cfi_offset 14, -4
 21465 0002 82B0     		sub	sp, sp, #8
 21466              		.cfi_def_cfa_offset 16
 21467 0004 00AF     		add	r7, sp, #0
 21468              		.cfi_def_cfa_register 7
3237:..\src/command_processing.c ****     
3238:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3239:..\src/command_processing.c ****     
3240:..\src/command_processing.c ****     uint8 packet_data[4]; 
3241:..\src/command_processing.c ****     int16 aux_int16;
3242:..\src/command_processing.c ****     
3243:..\src/command_processing.c ****     //Header package
3244:..\src/command_processing.c **** 
3245:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 21469              		.loc 1 3245 0
 21470 0006 8E23     		movs	r3, #142
 21471 0008 3B71     		strb	r3, [r7, #4]
3246:..\src/command_processing.c **** 
3247:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 21472              		.loc 1 3247 0
 21473 000a 124B     		ldr	r3, .L877
 21474 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21475 0010 1946     		mov	r1, r3
 21476 0012 114A     		ldr	r2, .L877+4
 21477 0014 0B46     		mov	r3, r1
 21478 0016 5B00     		lsls	r3, r3, #1
 21479 0018 0B44     		add	r3, r3, r1
 21480 001a 1B01     		lsls	r3, r3, #4
 21481 001c 1344     		add	r3, r3, r2
 21482 001e 1033     		adds	r3, r3, #16
 21483 0020 1B68     		ldr	r3, [r3]
 21484 0022 1BB2     		sxth	r3, r3
 21485 0024 7B80     		strh	r3, [r7, #2]	@ movhi
3248:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21486              		.loc 1 3248 0
 21487 0026 BB1C     		adds	r3, r7, #2
 21488 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21489 002a BB71     		strb	r3, [r7, #6]
3249:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21490              		.loc 1 3249 0
 21491 002c BB1C     		adds	r3, r7, #2
 21492 002e 0133     		adds	r3, r3, #1
 21493 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21494 0032 7B71     		strb	r3, [r7, #5]
3250:..\src/command_processing.c **** 
3251:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 475


3252:..\src/command_processing.c **** 
3253:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 21495              		.loc 1 3253 0
 21496 0034 3B1D     		adds	r3, r7, #4
 21497 0036 0321     		movs	r1, #3
 21498 0038 1846     		mov	r0, r3
 21499 003a FFF7FEFF 		bl	LCRChecksum
 21500 003e 0346     		mov	r3, r0
 21501 0040 FB71     		strb	r3, [r7, #7]
3254:..\src/command_processing.c ****     
3255:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 21502              		.loc 1 3255 0
 21503 0042 3B1D     		adds	r3, r7, #4
 21504 0044 0421     		movs	r1, #4
 21505 0046 1846     		mov	r0, r3
 21506 0048 FFF7FEFF 		bl	commWrite_to_cuff
3256:..\src/command_processing.c **** }
 21507              		.loc 1 3256 0
 21508 004c 00BF     		nop
 21509 004e 0837     		adds	r7, r7, #8
 21510              		.cfi_def_cfa_offset 8
 21511 0050 BD46     		mov	sp, r7
 21512              		.cfi_def_cfa_register 13
 21513              		@ sp needed
 21514 0052 80BD     		pop	{r7, pc}
 21515              	.L878:
 21516              		.align	2
 21517              	.L877:
 21518 0054 00000000 		.word	g_mem
 21519 0058 00000000 		.word	g_measOld
 21520              		.cfi_endproc
 21521              	.LFE96:
 21522              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 21523              		.section	.text.cmd_set_baudrate,"ax",%progbits
 21524              		.align	2
 21525              		.global	cmd_set_baudrate
 21526              		.thumb
 21527              		.thumb_func
 21528              		.type	cmd_set_baudrate, %function
 21529              	cmd_set_baudrate:
 21530              	.LFB97:
3257:..\src/command_processing.c **** 
3258:..\src/command_processing.c **** void cmd_set_baudrate(){
 21531              		.loc 1 3258 0
 21532              		.cfi_startproc
 21533              		@ args = 0, pretend = 0, frame = 0
 21534              		@ frame_needed = 1, uses_anonymous_args = 0
 21535 0000 80B5     		push	{r7, lr}
 21536              		.cfi_def_cfa_offset 8
 21537              		.cfi_offset 7, -8
 21538              		.cfi_offset 14, -4
 21539 0002 00AF     		add	r7, sp, #0
 21540              		.cfi_def_cfa_register 7
3259:..\src/command_processing.c ****     
3260:..\src/command_processing.c ****     // Set BaudRate
3261:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 21541              		.loc 1 3261 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 476


 21542 0004 094B     		ldr	r3, .L884
 21543 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 21544 0008 094B     		ldr	r3, .L884+4
 21545 000a 83F8AA20 		strb	r2, [r3, #170]
3262:..\src/command_processing.c ****     
3263:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 21546              		.loc 1 3263 0
 21547 000e 074B     		ldr	r3, .L884
 21548 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 21549 0012 0D2B     		cmp	r3, #13
 21550 0014 04D1     		bne	.L883
3264:..\src/command_processing.c ****         case 13:
3265:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 21551              		.loc 1 3265 0
 21552 0016 0121     		movs	r1, #1
 21553 0018 0C20     		movs	r0, #12
 21554 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3266:..\src/command_processing.c ****             break;
 21555              		.loc 1 3266 0
 21556 001e 03E0     		b	.L882
 21557              	.L883:
3267:..\src/command_processing.c ****         default:
3268:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 21558              		.loc 1 3268 0
 21559 0020 0121     		movs	r1, #1
 21560 0022 0220     		movs	r0, #2
 21561 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 21562              	.L882:
3269:..\src/command_processing.c ****     }
3270:..\src/command_processing.c **** }
 21563              		.loc 1 3270 0
 21564 0028 00BF     		nop
 21565 002a 80BD     		pop	{r7, pc}
 21566              	.L885:
 21567              		.align	2
 21568              	.L884:
 21569 002c 00000000 		.word	g_rx
 21570 0030 00000000 		.word	c_mem
 21571              		.cfi_endproc
 21572              	.LFE97:
 21573              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 21574              		.section	.text.cmd_ping,"ax",%progbits
 21575              		.align	2
 21576              		.global	cmd_ping
 21577              		.thumb
 21578              		.thumb_func
 21579              		.type	cmd_ping, %function
 21580              	cmd_ping:
 21581              	.LFB98:
3271:..\src/command_processing.c **** 
3272:..\src/command_processing.c **** void cmd_ping(){
 21582              		.loc 1 3272 0
 21583              		.cfi_startproc
 21584              		@ args = 0, pretend = 0, frame = 8
 21585              		@ frame_needed = 1, uses_anonymous_args = 0
 21586 0000 80B5     		push	{r7, lr}
 21587              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 477


 21588              		.cfi_offset 7, -8
 21589              		.cfi_offset 14, -4
 21590 0002 82B0     		sub	sp, sp, #8
 21591              		.cfi_def_cfa_offset 16
 21592 0004 00AF     		add	r7, sp, #0
 21593              		.cfi_def_cfa_register 7
3273:..\src/command_processing.c **** 
3274:..\src/command_processing.c ****     uint8 packet_data[2];
3275:..\src/command_processing.c **** 
3276:..\src/command_processing.c ****     // Header
3277:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 21594              		.loc 1 3277 0
 21595 0006 0023     		movs	r3, #0
 21596 0008 3B71     		strb	r3, [r7, #4]
3278:..\src/command_processing.c ****     
3279:..\src/command_processing.c ****     // Load Payload
3280:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 21597              		.loc 1 3280 0
 21598 000a 0023     		movs	r3, #0
 21599 000c 7B71     		strb	r3, [r7, #5]
3281:..\src/command_processing.c **** 
3282:..\src/command_processing.c ****     // Send Package to uart
3283:..\src/command_processing.c ****     commWrite(packet_data, 2);
 21600              		.loc 1 3283 0
 21601 000e 3B1D     		adds	r3, r7, #4
 21602 0010 0221     		movs	r1, #2
 21603 0012 1846     		mov	r0, r3
 21604 0014 FFF7FEFF 		bl	commWrite
3284:..\src/command_processing.c **** }
 21605              		.loc 1 3284 0
 21606 0018 00BF     		nop
 21607 001a 0837     		adds	r7, r7, #8
 21608              		.cfi_def_cfa_offset 8
 21609 001c BD46     		mov	sp, r7
 21610              		.cfi_def_cfa_register 13
 21611              		@ sp needed
 21612 001e 80BD     		pop	{r7, pc}
 21613              		.cfi_endproc
 21614              	.LFE98:
 21615              		.size	cmd_ping, .-cmd_ping
 21616              		.section	.text.cmd_get_inputs,"ax",%progbits
 21617              		.align	2
 21618              		.global	cmd_get_inputs
 21619              		.thumb
 21620              		.thumb_func
 21621              		.type	cmd_get_inputs, %function
 21622              	cmd_get_inputs:
 21623              	.LFB99:
3285:..\src/command_processing.c **** 
3286:..\src/command_processing.c **** void cmd_get_inputs(){
 21624              		.loc 1 3286 0
 21625              		.cfi_startproc
 21626              		@ args = 0, pretend = 0, frame = 16
 21627              		@ frame_needed = 1, uses_anonymous_args = 0
 21628 0000 80B5     		push	{r7, lr}
 21629              		.cfi_def_cfa_offset 8
 21630              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 478


 21631              		.cfi_offset 14, -4
 21632 0002 84B0     		sub	sp, sp, #16
 21633              		.cfi_def_cfa_offset 24
 21634 0004 00AF     		add	r7, sp, #0
 21635              		.cfi_def_cfa_register 7
3287:..\src/command_processing.c **** 
3288:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3289:..\src/command_processing.c **** 
3290:..\src/command_processing.c ****     uint8 packet_data[6]; 
3291:..\src/command_processing.c ****     int16 aux_int16;
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     //Header package
3294:..\src/command_processing.c **** 
3295:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 21636              		.loc 1 3295 0
 21637 0006 8323     		movs	r3, #131
 21638 0008 3B72     		strb	r3, [r7, #8]
3296:..\src/command_processing.c ****         
3297:..\src/command_processing.c ****     aux_int16 = (int16) (g_refOld[0].pos  >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 21639              		.loc 1 3297 0
 21640 000a 164B     		ldr	r3, .L888
 21641 000c 1A68     		ldr	r2, [r3]
 21642 000e 164B     		ldr	r3, .L888+4
 21643 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21644 0014 1846     		mov	r0, r3
 21645 0016 1449     		ldr	r1, .L888+4
 21646 0018 0346     		mov	r3, r0
 21647 001a 5B00     		lsls	r3, r3, #1
 21648 001c 0344     		add	r3, r3, r0
 21649 001e 1B01     		lsls	r3, r3, #4
 21650 0020 0B44     		add	r3, r3, r1
 21651 0022 03F29513 		addw	r3, r3, #405
 21652 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21653 0028 42FA03F3 		asr	r3, r2, r3
 21654 002c 1BB2     		sxth	r3, r3
 21655 002e FB80     		strh	r3, [r7, #6]	@ movhi
3298:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21656              		.loc 1 3298 0
 21657 0030 BB1D     		adds	r3, r7, #6
 21658 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21659 0034 BB72     		strb	r3, [r7, #10]
3299:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21660              		.loc 1 3299 0
 21661 0036 BB1D     		adds	r3, r7, #6
 21662 0038 0133     		adds	r3, r3, #1
 21663 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21664 003c 7B72     		strb	r3, [r7, #9]
3300:..\src/command_processing.c ****     
3301:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3302:..\src/command_processing.c **** 
3303:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 21665              		.loc 1 3303 0
 21666 003e 07F10803 		add	r3, r7, #8
 21667 0042 0521     		movs	r1, #5
 21668 0044 1846     		mov	r0, r3
 21669 0046 FFF7FEFF 		bl	LCRChecksum
 21670 004a 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 479


 21671 004c 7B73     		strb	r3, [r7, #13]
3304:..\src/command_processing.c **** 
3305:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21672              		.loc 1 3305 0
 21673 004e 07F10803 		add	r3, r7, #8
 21674 0052 0621     		movs	r1, #6
 21675 0054 1846     		mov	r0, r3
 21676 0056 FFF7FEFF 		bl	commWrite
3306:..\src/command_processing.c **** }
 21677              		.loc 1 3306 0
 21678 005a 00BF     		nop
 21679 005c 1037     		adds	r7, r7, #16
 21680              		.cfi_def_cfa_offset 8
 21681 005e BD46     		mov	sp, r7
 21682              		.cfi_def_cfa_register 13
 21683              		@ sp needed
 21684 0060 80BD     		pop	{r7, pc}
 21685              	.L889:
 21686 0062 00BF     		.align	2
 21687              	.L888:
 21688 0064 00000000 		.word	g_refOld
 21689 0068 00000000 		.word	g_mem
 21690              		.cfi_endproc
 21691              	.LFE99:
 21692              		.size	cmd_get_inputs, .-cmd_get_inputs
 21693              		.section	.text.cmd_store_params,"ax",%progbits
 21694              		.align	2
 21695              		.global	cmd_store_params
 21696              		.thumb
 21697              		.thumb_func
 21698              		.type	cmd_store_params, %function
 21699              	cmd_store_params:
 21700              	.LFB100:
3307:..\src/command_processing.c **** 
3308:..\src/command_processing.c **** void cmd_store_params(){
 21701              		.loc 1 3308 0
 21702              		.cfi_startproc
 21703              		@ args = 0, pretend = 0, frame = 16
 21704              		@ frame_needed = 1, uses_anonymous_args = 0
 21705 0000 80B5     		push	{r7, lr}
 21706              		.cfi_def_cfa_offset 8
 21707              		.cfi_offset 7, -8
 21708              		.cfi_offset 14, -4
 21709 0002 84B0     		sub	sp, sp, #16
 21710              		.cfi_def_cfa_offset 24
 21711 0004 00AF     		add	r7, sp, #0
 21712              		.cfi_def_cfa_register 7
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     // Check input mode enabled
3311:..\src/command_processing.c ****     uint32 off_1;
3312:..\src/command_processing.c ****     float mult_1;
3313:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 21713              		.loc 1 3313 0
 21714 0006 0223     		movs	r3, #2
 21715 0008 FB73     		strb	r3, [r7, #15]
3314:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3315:..\src/command_processing.c ****     uint8 CYDATA old_id;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 480


3316:..\src/command_processing.c ****     
3317:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 21716              		.loc 1 3317 0
 21717 000a 674B     		ldr	r3, .L901
 21718 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 21719 0010 002B     		cmp	r3, #0
 21720 0012 7CD1     		bne	.L891
3318:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 21721              		.loc 1 3318 0
 21722 0014 644B     		ldr	r3, .L901
 21723 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21724 001a 1946     		mov	r1, r3
 21725 001c 624A     		ldr	r2, .L901
 21726 001e 0B46     		mov	r3, r1
 21727 0020 5B00     		lsls	r3, r3, #1
 21728 0022 0B44     		add	r3, r3, r1
 21729 0024 1B01     		lsls	r3, r3, #4
 21730 0026 1344     		add	r3, r3, r2
 21731 0028 03F5CC73 		add	r3, r3, #408
 21732 002c 1B68     		ldr	r3, [r3]
 21733 002e BB60     		str	r3, [r7, #8]
3319:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 21734              		.loc 1 3319 0
 21735 0030 5D4B     		ldr	r3, .L901
 21736 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21737 0036 1946     		mov	r1, r3
 21738 0038 5B4A     		ldr	r2, .L901
 21739 003a 0B46     		mov	r3, r1
 21740 003c 5B00     		lsls	r3, r3, #1
 21741 003e 0B44     		add	r3, r3, r1
 21742 0040 1B01     		lsls	r3, r3, #4
 21743 0042 1344     		add	r3, r3, r2
 21744 0044 03F5D273 		add	r3, r3, #420
 21745 0048 1B68     		ldr	r3, [r3]	@ float
 21746 004a 7B60     		str	r3, [r7, #4]	@ float
3320:..\src/command_processing.c **** 
3321:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 21747              		.loc 1 3321 0
 21748 004c 574B     		ldr	r3, .L901+4
 21749 004e 1B68     		ldr	r3, [r3]
 21750 0050 1846     		mov	r0, r3
 21751 0052 FFF7FEFF 		bl	__aeabi_i2f
 21752 0056 0346     		mov	r3, r0
 21753 0058 7968     		ldr	r1, [r7, #4]	@ float
 21754 005a 1846     		mov	r0, r3
 21755 005c FFF7FEFF 		bl	__aeabi_fdiv
 21756 0060 0346     		mov	r3, r0
 21757 0062 1846     		mov	r0, r3
 21758 0064 FFF7FEFF 		bl	__aeabi_f2iz
 21759 0068 0246     		mov	r2, r0
 21760 006a 504B     		ldr	r3, .L901+4
 21761 006c 1A60     		str	r2, [r3]
3322:..\src/command_processing.c **** 
3323:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 21762              		.loc 1 3323 0
 21763 006e 4F4B     		ldr	r3, .L901+4
 21764 0070 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 481


 21765 0072 1846     		mov	r0, r3
 21766 0074 FFF7FEFF 		bl	__aeabi_i2f
 21767 0078 4B4B     		ldr	r3, .L901
 21768 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21769 007e 1946     		mov	r1, r3
 21770 0080 4B4A     		ldr	r2, .L901+8
 21771 0082 0B46     		mov	r3, r1
 21772 0084 5B00     		lsls	r3, r3, #1
 21773 0086 0B44     		add	r3, r3, r1
 21774 0088 1B01     		lsls	r3, r3, #4
 21775 008a 1344     		add	r3, r3, r2
 21776 008c 03F5D273 		add	r3, r3, #420
 21777 0090 1B68     		ldr	r3, [r3]	@ float
 21778 0092 1946     		mov	r1, r3
 21779 0094 FFF7FEFF 		bl	__aeabi_fmul
 21780 0098 0346     		mov	r3, r0
 21781 009a 1846     		mov	r0, r3
 21782 009c FFF7FEFF 		bl	__aeabi_f2iz
 21783 00a0 0246     		mov	r2, r0
 21784 00a2 424B     		ldr	r3, .L901+4
 21785 00a4 1A60     		str	r2, [r3]
3324:..\src/command_processing.c **** 
3325:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 21786              		.loc 1 3325 0
 21787 00a6 414B     		ldr	r3, .L901+4
 21788 00a8 1B68     		ldr	r3, [r3]
 21789 00aa 1846     		mov	r0, r3
 21790 00ac 3E4B     		ldr	r3, .L901
 21791 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21792 00b2 1946     		mov	r1, r3
 21793 00b4 3E4A     		ldr	r2, .L901+8
 21794 00b6 0B46     		mov	r3, r1
 21795 00b8 5B00     		lsls	r3, r3, #1
 21796 00ba 0B44     		add	r3, r3, r1
 21797 00bc 1B01     		lsls	r3, r3, #4
 21798 00be 1344     		add	r3, r3, r2
 21799 00c0 03F5CC73 		add	r3, r3, #408
 21800 00c4 1B68     		ldr	r3, [r3]
 21801 00c6 1A46     		mov	r2, r3
 21802 00c8 BB68     		ldr	r3, [r7, #8]
 21803 00ca D31A     		subs	r3, r2, r3
 21804 00cc 0344     		add	r3, r3, r0
 21805 00ce 1A46     		mov	r2, r3
 21806 00d0 364B     		ldr	r3, .L901+4
 21807 00d2 1A60     		str	r2, [r3]
3326:..\src/command_processing.c ****         
3327:..\src/command_processing.c ****         // Check position Limits
3328:..\src/command_processing.c **** 
3329:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 21808              		.loc 1 3329 0
 21809 00d4 344B     		ldr	r3, .L901
 21810 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 21811 00da 002B     		cmp	r3, #0
 21812 00dc 17D0     		beq	.L891
3330:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 21813              		.loc 1 3330 0
 21814 00de 334B     		ldr	r3, .L901+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 482


 21815 00e0 1A68     		ldr	r2, [r3]
 21816 00e2 314B     		ldr	r3, .L901
 21817 00e4 D3F8E430 		ldr	r3, [r3, #228]
 21818 00e8 9A42     		cmp	r2, r3
 21819 00ea 04DA     		bge	.L892
3331:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 21820              		.loc 1 3331 0
 21821 00ec 2E4B     		ldr	r3, .L901
 21822 00ee D3F8E430 		ldr	r3, [r3, #228]
 21823 00f2 2E4A     		ldr	r2, .L901+4
 21824 00f4 1360     		str	r3, [r2]
 21825              	.L892:
3332:..\src/command_processing.c **** 
3333:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 21826              		.loc 1 3333 0
 21827 00f6 2D4B     		ldr	r3, .L901+4
 21828 00f8 1A68     		ldr	r2, [r3]
 21829 00fa 2B4B     		ldr	r3, .L901
 21830 00fc D3F8E830 		ldr	r3, [r3, #232]
 21831 0100 9A42     		cmp	r2, r3
 21832 0102 04DD     		ble	.L891
3334:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 21833              		.loc 1 3334 0
 21834 0104 284B     		ldr	r3, .L901
 21835 0106 D3F8E830 		ldr	r3, [r3, #232]
 21836 010a 284A     		ldr	r2, .L901+4
 21837 010c 1360     		str	r3, [r2]
 21838              	.L891:
3335:..\src/command_processing.c ****         }
3336:..\src/command_processing.c ****     }
3337:..\src/command_processing.c ****     
3338:..\src/command_processing.c ****     // If SD is used, create new param and data file
3339:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21839              		.loc 1 3339 0
 21840 010e 264B     		ldr	r3, .L901
 21841 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21842 0114 012B     		cmp	r3, #1
 21843 0116 06D1     		bne	.L893
3340:..\src/command_processing.c ****         FS_FClose(pFile);
 21844              		.loc 1 3340 0
 21845 0118 264B     		ldr	r3, .L901+12
 21846 011a 1B68     		ldr	r3, [r3]
 21847 011c 1846     		mov	r0, r3
 21848 011e FFF7FEFF 		bl	FS_FClose
3341:..\src/command_processing.c ****         
3342:..\src/command_processing.c ****         InitSD_FS();
 21849              		.loc 1 3342 0
 21850 0122 FFF7FEFF 		bl	InitSD_FS
 21851              	.L893:
3343:..\src/command_processing.c ****     }
3344:..\src/command_processing.c ****    
3345:..\src/command_processing.c ****     // Store params 
3346:..\src/command_processing.c **** 
3347:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 21852              		.loc 1 3347 0
 21853 0126 204B     		ldr	r3, .L901
 21854 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 483


 21855 012c 204B     		ldr	r3, .L901+8
 21856 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21857 0132 9A42     		cmp	r2, r3
 21858 0134 21D0     		beq	.L894
3348:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 21859              		.loc 1 3348 0
 21860 0136 1C4B     		ldr	r3, .L901
 21861 0138 93F8A030 		ldrb	r3, [r3, #160]
 21862 013c FB70     		strb	r3, [r7, #3]
3349:..\src/command_processing.c ****         if(memStore(0)) {
 21863              		.loc 1 3349 0
 21864 013e 0020     		movs	r0, #0
 21865 0140 FFF7FEFF 		bl	memStore
 21866 0144 0346     		mov	r3, r0
 21867 0146 002B     		cmp	r3, #0
 21868 0148 0BD0     		beq	.L895
3350:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 21869              		.loc 1 3350 0
 21870 014a 0123     		movs	r3, #1
 21871 014c 3B70     		strb	r3, [r7]
3351:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 21872              		.loc 1 3351 0
 21873 014e 0123     		movs	r3, #1
 21874 0150 7B70     		strb	r3, [r7, #1]
3352:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21875              		.loc 1 3352 0
 21876 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21877 0154 99B2     		uxth	r1, r3
 21878 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21879 0158 3B46     		mov	r3, r7
 21880 015a 1846     		mov	r0, r3
 21881 015c FFF7FEFF 		bl	commWrite_old_id
 21882 0160 18E0     		b	.L897
 21883              	.L895:
3353:..\src/command_processing.c ****         }    
3354:..\src/command_processing.c ****         else{
3355:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 21884              		.loc 1 3355 0
 21885 0162 0023     		movs	r3, #0
 21886 0164 3B70     		strb	r3, [r7]
3356:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 21887              		.loc 1 3356 0
 21888 0166 0023     		movs	r3, #0
 21889 0168 7B70     		strb	r3, [r7, #1]
3357:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21890              		.loc 1 3357 0
 21891 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21892 016c 99B2     		uxth	r1, r3
 21893 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21894 0170 3B46     		mov	r3, r7
 21895 0172 1846     		mov	r0, r3
 21896 0174 FFF7FEFF 		bl	commWrite_old_id
 21897 0178 0CE0     		b	.L897
 21898              	.L894:
3358:..\src/command_processing.c ****         }
3359:..\src/command_processing.c ****     }    
3360:..\src/command_processing.c ****     else {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 484


3361:..\src/command_processing.c ****         if(memStore(0))
 21899              		.loc 1 3361 0
 21900 017a 0020     		movs	r0, #0
 21901 017c FFF7FEFF 		bl	memStore
 21902 0180 0346     		mov	r3, r0
 21903 0182 002B     		cmp	r3, #0
 21904 0184 03D0     		beq	.L898
3362:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 21905              		.loc 1 3362 0
 21906 0186 0120     		movs	r0, #1
 21907 0188 FFF7FEFF 		bl	sendAcknowledgment
 21908 018c 02E0     		b	.L897
 21909              	.L898:
3363:..\src/command_processing.c ****         else
3364:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 21910              		.loc 1 3364 0
 21911 018e 0020     		movs	r0, #0
 21912 0190 FFF7FEFF 		bl	sendAcknowledgment
 21913              	.L897:
3365:..\src/command_processing.c ****     }
3366:..\src/command_processing.c ****     
3367:..\src/command_processing.c ****     // FW reset (if necessary)
3368:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 21914              		.loc 1 3368 0
 21915 0194 084B     		ldr	r3, .L901+16
 21916 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21917 0198 012B     		cmp	r3, #1
 21918 019a 01D1     		bne	.L900
3369:..\src/command_processing.c ****         CySoftwareReset();
 21919              		.loc 1 3369 0
 21920 019c FFF7FEFF 		bl	CySoftwareReset
 21921              	.L900:
3370:..\src/command_processing.c ****     }
3371:..\src/command_processing.c **** }
 21922              		.loc 1 3371 0
 21923 01a0 00BF     		nop
 21924 01a2 1037     		adds	r7, r7, #16
 21925              		.cfi_def_cfa_offset 8
 21926 01a4 BD46     		mov	sp, r7
 21927              		.cfi_def_cfa_register 13
 21928              		@ sp needed
 21929 01a6 80BD     		pop	{r7, pc}
 21930              	.L902:
 21931              		.align	2
 21932              	.L901:
 21933 01a8 00000000 		.word	c_mem
 21934 01ac 00000000 		.word	g_refNew
 21935 01b0 00000000 		.word	g_mem
 21936 01b4 00000000 		.word	pFile
 21937 01b8 00000000 		.word	reset_PSoC_flag
 21938              		.cfi_endproc
 21939              	.LFE100:
 21940              		.size	cmd_store_params, .-cmd_store_params
 21941              		.section	.text.cmd_get_emg,"ax",%progbits
 21942              		.align	2
 21943              		.global	cmd_get_emg
 21944              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 485


 21945              		.thumb_func
 21946              		.type	cmd_get_emg, %function
 21947              	cmd_get_emg:
 21948              	.LFB101:
3372:..\src/command_processing.c **** 
3373:..\src/command_processing.c **** void cmd_get_emg(){
 21949              		.loc 1 3373 0
 21950              		.cfi_startproc
 21951              		@ args = 0, pretend = 0, frame = 16
 21952              		@ frame_needed = 1, uses_anonymous_args = 0
 21953 0000 80B5     		push	{r7, lr}
 21954              		.cfi_def_cfa_offset 8
 21955              		.cfi_offset 7, -8
 21956              		.cfi_offset 14, -4
 21957 0002 84B0     		sub	sp, sp, #16
 21958              		.cfi_def_cfa_offset 24
 21959 0004 00AF     		add	r7, sp, #0
 21960              		.cfi_def_cfa_register 7
3374:..\src/command_processing.c ****     
3375:..\src/command_processing.c ****     uint8 packet_data[6];
3376:..\src/command_processing.c ****     int16 aux_int16;
3377:..\src/command_processing.c ****     
3378:..\src/command_processing.c ****     // Header        
3379:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 21961              		.loc 1 3379 0
 21962 0006 8823     		movs	r3, #136
 21963 0008 3B72     		strb	r3, [r7, #8]
3380:..\src/command_processing.c ****     
3381:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 21964              		.loc 1 3381 0
 21965 000a 144B     		ldr	r3, .L904
 21966 000c 1B68     		ldr	r3, [r3]
 21967 000e 1BB2     		sxth	r3, r3
 21968 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3382:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21969              		.loc 1 3382 0
 21970 0012 BB1D     		adds	r3, r7, #6
 21971 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21972 0016 BB72     		strb	r3, [r7, #10]
3383:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21973              		.loc 1 3383 0
 21974 0018 BB1D     		adds	r3, r7, #6
 21975 001a 0133     		adds	r3, r3, #1
 21976 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21977 001e 7B72     		strb	r3, [r7, #9]
3384:..\src/command_processing.c ****     
3385:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 21978              		.loc 1 3385 0
 21979 0020 0E4B     		ldr	r3, .L904
 21980 0022 5B68     		ldr	r3, [r3, #4]
 21981 0024 1BB2     		sxth	r3, r3
 21982 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3386:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21983              		.loc 1 3386 0
 21984 0028 BB1D     		adds	r3, r7, #6
 21985 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21986 002c 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 486


3387:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21987              		.loc 1 3387 0
 21988 002e BB1D     		adds	r3, r7, #6
 21989 0030 0133     		adds	r3, r3, #1
 21990 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21991 0034 FB72     		strb	r3, [r7, #11]
3388:..\src/command_processing.c **** 
3389:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21992              		.loc 1 3389 0
 21993 0036 07F10803 		add	r3, r7, #8
 21994 003a 0521     		movs	r1, #5
 21995 003c 1846     		mov	r0, r3
 21996 003e FFF7FEFF 		bl	LCRChecksum
 21997 0042 0346     		mov	r3, r0
 21998 0044 7B73     		strb	r3, [r7, #13]
3390:..\src/command_processing.c **** 
3391:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21999              		.loc 1 3391 0
 22000 0046 07F10803 		add	r3, r7, #8
 22001 004a 0621     		movs	r1, #6
 22002 004c 1846     		mov	r0, r3
 22003 004e FFF7FEFF 		bl	commWrite
3392:..\src/command_processing.c **** 
3393:..\src/command_processing.c **** }
 22004              		.loc 1 3393 0
 22005 0052 00BF     		nop
 22006 0054 1037     		adds	r7, r7, #16
 22007              		.cfi_def_cfa_offset 8
 22008 0056 BD46     		mov	sp, r7
 22009              		.cfi_def_cfa_register 13
 22010              		@ sp needed
 22011 0058 80BD     		pop	{r7, pc}
 22012              	.L905:
 22013 005a 00BF     		.align	2
 22014              	.L904:
 22015 005c 00000000 		.word	g_emg_measOld
 22016              		.cfi_endproc
 22017              	.LFE101:
 22018              		.size	cmd_get_emg, .-cmd_get_emg
 22019              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 22020              		.align	2
 22021              		.global	cmd_get_imu_readings
 22022              		.thumb
 22023              		.thumb_func
 22024              		.type	cmd_get_imu_readings, %function
 22025              	cmd_get_imu_readings:
 22026              	.LFB102:
3394:..\src/command_processing.c **** 
3395:..\src/command_processing.c **** void cmd_get_imu_readings(){
 22027              		.loc 1 3395 0
 22028              		.cfi_startproc
 22029              		@ args = 0, pretend = 0, frame = 400
 22030              		@ frame_needed = 1, uses_anonymous_args = 0
 22031 0000 90B5     		push	{r4, r7, lr}
 22032              		.cfi_def_cfa_offset 12
 22033              		.cfi_offset 4, -12
 22034              		.cfi_offset 7, -8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 487


 22035              		.cfi_offset 14, -4
 22036 0002 E5B0     		sub	sp, sp, #404
 22037              		.cfi_def_cfa_offset 416
 22038 0004 00AF     		add	r7, sp, #0
 22039              		.cfi_def_cfa_register 7
3396:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3397:..\src/command_processing.c ****     
3398:..\src/command_processing.c ****     uint8 k_imu;
3399:..\src/command_processing.c ****     uint16 c = 1;
 22040              		.loc 1 3399 0
 22041 0006 0123     		movs	r3, #1
 22042 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3400:..\src/command_processing.c ****     uint8 k = 0;
 22043              		.loc 1 3400 0
 22044 000c 0023     		movs	r3, #0
 22045 000e 87F88B31 		strb	r3, [r7, #395]
3401:..\src/command_processing.c ****     uint16 gl_c = 1;
 22046              		.loc 1 3401 0
 22047 0012 0123     		movs	r3, #1
 22048 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3402:..\src/command_processing.c ****     int16 aux_int16;
3403:..\src/command_processing.c ****     float aux_float;
3404:..\src/command_processing.c ****     
3405:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3406:..\src/command_processing.c ****     uint8 packet_data[350];
3407:..\src/command_processing.c ****     uint8 single_packet[32];
3408:..\src/command_processing.c ****     
3409:..\src/command_processing.c ****     //Header package 
3410:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 22049              		.loc 1 3410 0
 22050 0018 07F12003 		add	r3, r7, #32
 22051 001c A122     		movs	r2, #161
 22052 001e 1A70     		strb	r2, [r3]
3411:..\src/command_processing.c ****  
3412:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 22053              		.loc 1 3412 0
 22054 0020 0023     		movs	r3, #0
 22055 0022 87F88F31 		strb	r3, [r7, #399]
 22056 0026 82E2     		b	.L907
 22057              	.L923:
3413:..\src/command_processing.c ****     {	
3414:..\src/command_processing.c ****             
3415:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 22058              		.loc 1 3415 0
 22059 0028 3B46     		mov	r3, r7
 22060 002a 3A22     		movs	r2, #58
 22061 002c 1A70     		strb	r2, [r3]
3416:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 22062              		.loc 1 3416 0
 22063 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22064 0032 DB4A     		ldr	r2, .L924
 22065 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22066 0036 1946     		mov	r1, r3
 22067 0038 DA4A     		ldr	r2, .L924+4
 22068 003a 0B46     		mov	r3, r1
 22069 003c 9B00     		lsls	r3, r3, #2
 22070 003e 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 488


 22071 0040 1344     		add	r3, r3, r2
 22072 0042 03F20223 		addw	r3, r3, #514
 22073 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22074 0048 002B     		cmp	r3, #0
 22075 004a 5DD0     		beq	.L908
3417:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 22076              		.loc 1 3417 0
 22077 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22078 0050 D549     		ldr	r1, .L924+8
 22079 0052 1346     		mov	r3, r2
 22080 0054 9B00     		lsls	r3, r3, #2
 22081 0056 1344     		add	r3, r3, r2
 22082 0058 DB00     		lsls	r3, r3, #3
 22083 005a 0B44     		add	r3, r3, r1
 22084 005c 0233     		adds	r3, r3, #2
 22085 005e B3F90030 		ldrsh	r3, [r3]
 22086 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3418:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22087              		.loc 1 3418 0
 22088 0066 B7F88C31 		ldrh	r3, [r7, #396]
 22089 006a 0133     		adds	r3, r3, #1
 22090 006c 07F5C372 		add	r2, r7, #390
 22091 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22092 0072 3A46     		mov	r2, r7
 22093 0074 D154     		strb	r1, [r2, r3]
3419:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22094              		.loc 1 3419 0
 22095 0076 B7F88C21 		ldrh	r2, [r7, #396]
 22096 007a 07F5C373 		add	r3, r7, #390
 22097 007e 0133     		adds	r3, r3, #1
 22098 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22099 0082 3B46     		mov	r3, r7
 22100 0084 9954     		strb	r1, [r3, r2]
3420:..\src/command_processing.c **** 
3421:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 22101              		.loc 1 3421 0
 22102 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22103 008a C749     		ldr	r1, .L924+8
 22104 008c 1346     		mov	r3, r2
 22105 008e 9B00     		lsls	r3, r3, #2
 22106 0090 1344     		add	r3, r3, r2
 22107 0092 DB00     		lsls	r3, r3, #3
 22108 0094 0B44     		add	r3, r3, r1
 22109 0096 0433     		adds	r3, r3, #4
 22110 0098 B3F90030 		ldrsh	r3, [r3]
 22111 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3422:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22112              		.loc 1 3422 0
 22113 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 22114 00a4 0333     		adds	r3, r3, #3
 22115 00a6 07F5C372 		add	r2, r7, #390
 22116 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22117 00ac 3A46     		mov	r2, r7
 22118 00ae D154     		strb	r1, [r2, r3]
3423:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22119              		.loc 1 3423 0
 22120 00b0 B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 489


 22121 00b4 9A1C     		adds	r2, r3, #2
 22122 00b6 07F5C373 		add	r3, r7, #390
 22123 00ba 0133     		adds	r3, r3, #1
 22124 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22125 00be 3B46     		mov	r3, r7
 22126 00c0 9954     		strb	r1, [r3, r2]
3424:..\src/command_processing.c **** 
3425:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 22127              		.loc 1 3425 0
 22128 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22129 00c6 B849     		ldr	r1, .L924+8
 22130 00c8 1346     		mov	r3, r2
 22131 00ca 9B00     		lsls	r3, r3, #2
 22132 00cc 1344     		add	r3, r3, r2
 22133 00ce DB00     		lsls	r3, r3, #3
 22134 00d0 0B44     		add	r3, r3, r1
 22135 00d2 0633     		adds	r3, r3, #6
 22136 00d4 B3F90030 		ldrsh	r3, [r3]
 22137 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3426:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22138              		.loc 1 3426 0
 22139 00dc B7F88C31 		ldrh	r3, [r7, #396]
 22140 00e0 0533     		adds	r3, r3, #5
 22141 00e2 07F5C372 		add	r2, r7, #390
 22142 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22143 00e8 3A46     		mov	r2, r7
 22144 00ea D154     		strb	r1, [r2, r3]
3427:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22145              		.loc 1 3427 0
 22146 00ec B7F88C31 		ldrh	r3, [r7, #396]
 22147 00f0 1A1D     		adds	r2, r3, #4
 22148 00f2 07F5C373 		add	r3, r7, #390
 22149 00f6 0133     		adds	r3, r3, #1
 22150 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22151 00fa 3B46     		mov	r3, r7
 22152 00fc 9954     		strb	r1, [r3, r2]
3428:..\src/command_processing.c **** 
3429:..\src/command_processing.c ****             c = c + 6;
 22153              		.loc 1 3429 0
 22154 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22155 0102 0633     		adds	r3, r3, #6
 22156 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22157              	.L908:
3430:..\src/command_processing.c ****         }
3431:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 22158              		.loc 1 3431 0
 22159 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22160 010c A44A     		ldr	r2, .L924
 22161 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22162 0110 1946     		mov	r1, r3
 22163 0112 A44A     		ldr	r2, .L924+4
 22164 0114 0B46     		mov	r3, r1
 22165 0116 9B00     		lsls	r3, r3, #2
 22166 0118 0B44     		add	r3, r3, r1
 22167 011a 1344     		add	r3, r3, r2
 22168 011c 03F20323 		addw	r3, r3, #515
 22169 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 490


 22170 0122 002B     		cmp	r3, #0
 22171 0124 5DD0     		beq	.L909
3432:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 22172              		.loc 1 3432 0
 22173 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22174 012a 9F49     		ldr	r1, .L924+8
 22175 012c 1346     		mov	r3, r2
 22176 012e 9B00     		lsls	r3, r3, #2
 22177 0130 1344     		add	r3, r3, r2
 22178 0132 DB00     		lsls	r3, r3, #3
 22179 0134 0B44     		add	r3, r3, r1
 22180 0136 0833     		adds	r3, r3, #8
 22181 0138 B3F90030 		ldrsh	r3, [r3]
 22182 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3433:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22183              		.loc 1 3433 0
 22184 0140 B7F88C31 		ldrh	r3, [r7, #396]
 22185 0144 0133     		adds	r3, r3, #1
 22186 0146 07F5C372 		add	r2, r7, #390
 22187 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22188 014c 3A46     		mov	r2, r7
 22189 014e D154     		strb	r1, [r2, r3]
3434:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22190              		.loc 1 3434 0
 22191 0150 B7F88C21 		ldrh	r2, [r7, #396]
 22192 0154 07F5C373 		add	r3, r7, #390
 22193 0158 0133     		adds	r3, r3, #1
 22194 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22195 015c 3B46     		mov	r3, r7
 22196 015e 9954     		strb	r1, [r3, r2]
3435:..\src/command_processing.c **** 
3436:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 22197              		.loc 1 3436 0
 22198 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22199 0164 9049     		ldr	r1, .L924+8
 22200 0166 1346     		mov	r3, r2
 22201 0168 9B00     		lsls	r3, r3, #2
 22202 016a 1344     		add	r3, r3, r2
 22203 016c DB00     		lsls	r3, r3, #3
 22204 016e 0B44     		add	r3, r3, r1
 22205 0170 0A33     		adds	r3, r3, #10
 22206 0172 B3F90030 		ldrsh	r3, [r3]
 22207 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3437:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22208              		.loc 1 3437 0
 22209 017a B7F88C31 		ldrh	r3, [r7, #396]
 22210 017e 0333     		adds	r3, r3, #3
 22211 0180 07F5C372 		add	r2, r7, #390
 22212 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22213 0186 3A46     		mov	r2, r7
 22214 0188 D154     		strb	r1, [r2, r3]
3438:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22215              		.loc 1 3438 0
 22216 018a B7F88C31 		ldrh	r3, [r7, #396]
 22217 018e 9A1C     		adds	r2, r3, #2
 22218 0190 07F5C373 		add	r3, r7, #390
 22219 0194 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 491


 22220 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22221 0198 3B46     		mov	r3, r7
 22222 019a 9954     		strb	r1, [r3, r2]
3439:..\src/command_processing.c **** 
3440:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 22223              		.loc 1 3440 0
 22224 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22225 01a0 8149     		ldr	r1, .L924+8
 22226 01a2 1346     		mov	r3, r2
 22227 01a4 9B00     		lsls	r3, r3, #2
 22228 01a6 1344     		add	r3, r3, r2
 22229 01a8 DB00     		lsls	r3, r3, #3
 22230 01aa 0B44     		add	r3, r3, r1
 22231 01ac 0C33     		adds	r3, r3, #12
 22232 01ae B3F90030 		ldrsh	r3, [r3]
 22233 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3441:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22234              		.loc 1 3441 0
 22235 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 22236 01ba 0533     		adds	r3, r3, #5
 22237 01bc 07F5C372 		add	r2, r7, #390
 22238 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22239 01c2 3A46     		mov	r2, r7
 22240 01c4 D154     		strb	r1, [r2, r3]
3442:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22241              		.loc 1 3442 0
 22242 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 22243 01ca 1A1D     		adds	r2, r3, #4
 22244 01cc 07F5C373 		add	r3, r7, #390
 22245 01d0 0133     		adds	r3, r3, #1
 22246 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22247 01d4 3B46     		mov	r3, r7
 22248 01d6 9954     		strb	r1, [r3, r2]
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c ****             c = c + 6;
 22249              		.loc 1 3444 0
 22250 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22251 01dc 0633     		adds	r3, r3, #6
 22252 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22253              	.L909:
3445:..\src/command_processing.c ****         }
3446:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 22254              		.loc 1 3446 0
 22255 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22256 01e6 6E4A     		ldr	r2, .L924
 22257 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22258 01ea 1946     		mov	r1, r3
 22259 01ec 6D4A     		ldr	r2, .L924+4
 22260 01ee 0B46     		mov	r3, r1
 22261 01f0 9B00     		lsls	r3, r3, #2
 22262 01f2 0B44     		add	r3, r3, r1
 22263 01f4 1344     		add	r3, r3, r2
 22264 01f6 03F50173 		add	r3, r3, #516
 22265 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22266 01fc 002B     		cmp	r3, #0
 22267 01fe 5DD0     		beq	.L910
3447:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 492


 22268              		.loc 1 3447 0
 22269 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22270 0204 6849     		ldr	r1, .L924+8
 22271 0206 1346     		mov	r3, r2
 22272 0208 9B00     		lsls	r3, r3, #2
 22273 020a 1344     		add	r3, r3, r2
 22274 020c DB00     		lsls	r3, r3, #3
 22275 020e 0B44     		add	r3, r3, r1
 22276 0210 0E33     		adds	r3, r3, #14
 22277 0212 B3F90030 		ldrsh	r3, [r3]
 22278 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3448:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22279              		.loc 1 3448 0
 22280 021a B7F88C31 		ldrh	r3, [r7, #396]
 22281 021e 0133     		adds	r3, r3, #1
 22282 0220 07F5C372 		add	r2, r7, #390
 22283 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22284 0226 3A46     		mov	r2, r7
 22285 0228 D154     		strb	r1, [r2, r3]
3449:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22286              		.loc 1 3449 0
 22287 022a B7F88C21 		ldrh	r2, [r7, #396]
 22288 022e 07F5C373 		add	r3, r7, #390
 22289 0232 0133     		adds	r3, r3, #1
 22290 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22291 0236 3B46     		mov	r3, r7
 22292 0238 9954     		strb	r1, [r3, r2]
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 22293              		.loc 1 3451 0
 22294 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22295 023e 5A49     		ldr	r1, .L924+8
 22296 0240 1346     		mov	r3, r2
 22297 0242 9B00     		lsls	r3, r3, #2
 22298 0244 1344     		add	r3, r3, r2
 22299 0246 DB00     		lsls	r3, r3, #3
 22300 0248 0B44     		add	r3, r3, r1
 22301 024a 1033     		adds	r3, r3, #16
 22302 024c B3F90030 		ldrsh	r3, [r3]
 22303 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3452:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22304              		.loc 1 3452 0
 22305 0254 B7F88C31 		ldrh	r3, [r7, #396]
 22306 0258 0333     		adds	r3, r3, #3
 22307 025a 07F5C372 		add	r2, r7, #390
 22308 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22309 0260 3A46     		mov	r2, r7
 22310 0262 D154     		strb	r1, [r2, r3]
3453:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22311              		.loc 1 3453 0
 22312 0264 B7F88C31 		ldrh	r3, [r7, #396]
 22313 0268 9A1C     		adds	r2, r3, #2
 22314 026a 07F5C373 		add	r3, r7, #390
 22315 026e 0133     		adds	r3, r3, #1
 22316 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22317 0272 3B46     		mov	r3, r7
 22318 0274 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 493


3454:..\src/command_processing.c **** 
3455:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 22319              		.loc 1 3455 0
 22320 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22321 027a 4B49     		ldr	r1, .L924+8
 22322 027c 1346     		mov	r3, r2
 22323 027e 9B00     		lsls	r3, r3, #2
 22324 0280 1344     		add	r3, r3, r2
 22325 0282 DB00     		lsls	r3, r3, #3
 22326 0284 0B44     		add	r3, r3, r1
 22327 0286 1233     		adds	r3, r3, #18
 22328 0288 B3F90030 		ldrsh	r3, [r3]
 22329 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3456:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22330              		.loc 1 3456 0
 22331 0290 B7F88C31 		ldrh	r3, [r7, #396]
 22332 0294 0533     		adds	r3, r3, #5
 22333 0296 07F5C372 		add	r2, r7, #390
 22334 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22335 029c 3A46     		mov	r2, r7
 22336 029e D154     		strb	r1, [r2, r3]
3457:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22337              		.loc 1 3457 0
 22338 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 22339 02a4 1A1D     		adds	r2, r3, #4
 22340 02a6 07F5C373 		add	r3, r7, #390
 22341 02aa 0133     		adds	r3, r3, #1
 22342 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22343 02ae 3B46     		mov	r3, r7
 22344 02b0 9954     		strb	r1, [r3, r2]
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c ****             c = c + 6;
 22345              		.loc 1 3459 0
 22346 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22347 02b6 0633     		adds	r3, r3, #6
 22348 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22349              	.L910:
3460:..\src/command_processing.c ****         }
3461:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 22350              		.loc 1 3461 0
 22351 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22352 02c0 374A     		ldr	r2, .L924
 22353 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22354 02c4 1946     		mov	r1, r3
 22355 02c6 374A     		ldr	r2, .L924+4
 22356 02c8 0B46     		mov	r3, r1
 22357 02ca 9B00     		lsls	r3, r3, #2
 22358 02cc 0B44     		add	r3, r3, r1
 22359 02ce 1344     		add	r3, r3, r2
 22360 02d0 03F20523 		addw	r3, r3, #517
 22361 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22362 02d6 002B     		cmp	r3, #0
 22363 02d8 00F0AF80 		beq	.L911
3462:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 22364              		.loc 1 3462 0
 22365 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22366 02e0 3149     		ldr	r1, .L924+8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 494


 22367 02e2 1346     		mov	r3, r2
 22368 02e4 9B00     		lsls	r3, r3, #2
 22369 02e6 1344     		add	r3, r3, r2
 22370 02e8 DB00     		lsls	r3, r3, #3
 22371 02ea 0B44     		add	r3, r3, r1
 22372 02ec 1433     		adds	r3, r3, #20
 22373 02ee 1B68     		ldr	r3, [r3]	@ float
 22374 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22375              		.loc 1 3463 0
 22376 02f4 0023     		movs	r3, #0
 22377 02f6 87F88B31 		strb	r3, [r7, #395]
 22378 02fa 13E0     		b	.L912
 22379              	.L913:
3464:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 22380              		.loc 1 3464 0 discriminator 3
 22381 02fc B7F88C31 		ldrh	r3, [r7, #396]
 22382 0300 1A1D     		adds	r2, r3, #4
 22383 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22384 0306 D31A     		subs	r3, r2, r3
 22385 0308 013B     		subs	r3, r3, #1
 22386 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22387 030e 07F5C071 		add	r1, r7, #384
 22388 0312 0A44     		add	r2, r2, r1
 22389 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22390 0316 3A46     		mov	r2, r7
 22391 0318 D154     		strb	r1, [r2, r3]
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22392              		.loc 1 3463 0 discriminator 3
 22393 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22394 031e 0133     		adds	r3, r3, #1
 22395 0320 87F88B31 		strb	r3, [r7, #395]
 22396              	.L912:
3463:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22397              		.loc 1 3463 0 is_stmt 0 discriminator 1
 22398 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22399 0328 032B     		cmp	r3, #3
 22400 032a E7D9     		bls	.L913
3465:..\src/command_processing.c ****             }
3466:..\src/command_processing.c **** 
3467:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 22401              		.loc 1 3467 0 is_stmt 1
 22402 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22403 0330 1D49     		ldr	r1, .L924+8
 22404 0332 1346     		mov	r3, r2
 22405 0334 9B00     		lsls	r3, r3, #2
 22406 0336 1344     		add	r3, r3, r2
 22407 0338 DB00     		lsls	r3, r3, #3
 22408 033a 0B44     		add	r3, r3, r1
 22409 033c 1833     		adds	r3, r3, #24
 22410 033e 1B68     		ldr	r3, [r3]	@ float
 22411 0340 C7F88031 		str	r3, [r7, #384]	@ float
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22412              		.loc 1 3468 0
 22413 0344 0023     		movs	r3, #0
 22414 0346 87F88B31 		strb	r3, [r7, #395]
 22415 034a 14E0     		b	.L914
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 495


 22416              	.L915:
3469:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 22417              		.loc 1 3469 0 discriminator 3
 22418 034c B7F88C31 		ldrh	r3, [r7, #396]
 22419 0350 03F10802 		add	r2, r3, #8
 22420 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22421 0358 D31A     		subs	r3, r2, r3
 22422 035a 013B     		subs	r3, r3, #1
 22423 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22424 0360 07F5C071 		add	r1, r7, #384
 22425 0364 0A44     		add	r2, r2, r1
 22426 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22427 0368 3A46     		mov	r2, r7
 22428 036a D154     		strb	r1, [r2, r3]
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22429              		.loc 1 3468 0 discriminator 3
 22430 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22431 0370 0133     		adds	r3, r3, #1
 22432 0372 87F88B31 		strb	r3, [r7, #395]
 22433              	.L914:
3468:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22434              		.loc 1 3468 0 is_stmt 0 discriminator 1
 22435 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22436 037a 032B     		cmp	r3, #3
 22437 037c E6D9     		bls	.L915
3470:..\src/command_processing.c ****             }
3471:..\src/command_processing.c **** 
3472:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 22438              		.loc 1 3472 0 is_stmt 1
 22439 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22440 0382 0949     		ldr	r1, .L924+8
 22441 0384 1346     		mov	r3, r2
 22442 0386 9B00     		lsls	r3, r3, #2
 22443 0388 1344     		add	r3, r3, r2
 22444 038a DB00     		lsls	r3, r3, #3
 22445 038c 0B44     		add	r3, r3, r1
 22446 038e 1C33     		adds	r3, r3, #28
 22447 0390 1B68     		ldr	r3, [r3]	@ float
 22448 0392 C7F88031 		str	r3, [r7, #384]	@ float
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22449              		.loc 1 3473 0
 22450 0396 0023     		movs	r3, #0
 22451 0398 87F88B31 		strb	r3, [r7, #395]
 22452 039c 1BE0     		b	.L916
 22453              	.L925:
 22454 039e 00BF     		.align	2
 22455              	.L924:
 22456 03a0 00000000 		.word	IMU_connected
 22457 03a4 00000000 		.word	c_mem
 22458 03a8 00000000 		.word	g_imu
 22459              	.L917:
3474:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 22460              		.loc 1 3474 0 discriminator 3
 22461 03ac B7F88C31 		ldrh	r3, [r7, #396]
 22462 03b0 03F10C02 		add	r2, r3, #12
 22463 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22464 03b8 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 496


 22465 03ba 013B     		subs	r3, r3, #1
 22466 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22467 03c0 07F5C071 		add	r1, r7, #384
 22468 03c4 0A44     		add	r2, r2, r1
 22469 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22470 03c8 3A46     		mov	r2, r7
 22471 03ca D154     		strb	r1, [r2, r3]
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22472              		.loc 1 3473 0 discriminator 3
 22473 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22474 03d0 0133     		adds	r3, r3, #1
 22475 03d2 87F88B31 		strb	r3, [r7, #395]
 22476              	.L916:
3473:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22477              		.loc 1 3473 0 is_stmt 0 discriminator 1
 22478 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22479 03da 032B     		cmp	r3, #3
 22480 03dc E6D9     		bls	.L917
3475:..\src/command_processing.c ****             }
3476:..\src/command_processing.c **** 
3477:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 22481              		.loc 1 3477 0 is_stmt 1
 22482 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22483 03e2 6749     		ldr	r1, .L926
 22484 03e4 1346     		mov	r3, r2
 22485 03e6 9B00     		lsls	r3, r3, #2
 22486 03e8 1344     		add	r3, r3, r2
 22487 03ea DB00     		lsls	r3, r3, #3
 22488 03ec 0B44     		add	r3, r3, r1
 22489 03ee 2033     		adds	r3, r3, #32
 22490 03f0 1B68     		ldr	r3, [r3]	@ float
 22491 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22492              		.loc 1 3478 0
 22493 03f6 0023     		movs	r3, #0
 22494 03f8 87F88B31 		strb	r3, [r7, #395]
 22495 03fc 14E0     		b	.L918
 22496              	.L919:
3479:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 22497              		.loc 1 3479 0 discriminator 3
 22498 03fe B7F88C31 		ldrh	r3, [r7, #396]
 22499 0402 03F11002 		add	r2, r3, #16
 22500 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22501 040a D31A     		subs	r3, r2, r3
 22502 040c 013B     		subs	r3, r3, #1
 22503 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22504 0412 07F5C071 		add	r1, r7, #384
 22505 0416 0A44     		add	r2, r2, r1
 22506 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22507 041a 3A46     		mov	r2, r7
 22508 041c D154     		strb	r1, [r2, r3]
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22509              		.loc 1 3478 0 discriminator 3
 22510 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22511 0422 0133     		adds	r3, r3, #1
 22512 0424 87F88B31 		strb	r3, [r7, #395]
 22513              	.L918:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 497


3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22514              		.loc 1 3478 0 is_stmt 0 discriminator 1
 22515 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22516 042c 032B     		cmp	r3, #3
 22517 042e E6D9     		bls	.L919
3480:..\src/command_processing.c ****             }
3481:..\src/command_processing.c ****             c = c + 16;
 22518              		.loc 1 3481 0 is_stmt 1
 22519 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22520 0434 1033     		adds	r3, r3, #16
 22521 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22522              	.L911:
3482:..\src/command_processing.c ****         }
3483:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 22523              		.loc 1 3483 0
 22524 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22525 043e 514A     		ldr	r2, .L926+4
 22526 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22527 0442 1946     		mov	r1, r3
 22528 0444 504A     		ldr	r2, .L926+8
 22529 0446 0B46     		mov	r3, r1
 22530 0448 9B00     		lsls	r3, r3, #2
 22531 044a 0B44     		add	r3, r3, r1
 22532 044c 1344     		add	r3, r3, r2
 22533 044e 03F20623 		addw	r3, r3, #518
 22534 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22535 0454 002B     		cmp	r3, #0
 22536 0456 21D0     		beq	.L920
3484:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 22537              		.loc 1 3484 0
 22538 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22539 045c 4849     		ldr	r1, .L926
 22540 045e 1346     		mov	r3, r2
 22541 0460 9B00     		lsls	r3, r3, #2
 22542 0462 1344     		add	r3, r3, r2
 22543 0464 DB00     		lsls	r3, r3, #3
 22544 0466 0B44     		add	r3, r3, r1
 22545 0468 2433     		adds	r3, r3, #36
 22546 046a B3F90030 		ldrsh	r3, [r3]
 22547 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3485:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22548              		.loc 1 3485 0
 22549 0472 B7F88C31 		ldrh	r3, [r7, #396]
 22550 0476 0133     		adds	r3, r3, #1
 22551 0478 07F5C372 		add	r2, r7, #390
 22552 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22553 047e 3A46     		mov	r2, r7
 22554 0480 D154     		strb	r1, [r2, r3]
3486:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22555              		.loc 1 3486 0
 22556 0482 B7F88C21 		ldrh	r2, [r7, #396]
 22557 0486 07F5C373 		add	r3, r7, #390
 22558 048a 0133     		adds	r3, r3, #1
 22559 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22560 048e 3B46     		mov	r3, r7
 22561 0490 9954     		strb	r1, [r3, r2]
3487:..\src/command_processing.c ****             c = c + 2;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 498


 22562              		.loc 1 3487 0
 22563 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22564 0496 0233     		adds	r3, r3, #2
 22565 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22566              	.L920:
3488:..\src/command_processing.c ****         }
3489:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 22567              		.loc 1 3489 0
 22568 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22569 04a0 384A     		ldr	r2, .L926+4
 22570 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22571 04a4 1A46     		mov	r2, r3
 22572 04a6 394B     		ldr	r3, .L926+12
 22573 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 22574 04ac 013B     		subs	r3, r3, #1
 22575 04ae 3A46     		mov	r2, r7
 22576 04b0 3A21     		movs	r1, #58
 22577 04b2 D154     		strb	r1, [r2, r3]
3490:..\src/command_processing.c ****         c = 1;
 22578              		.loc 1 3490 0
 22579 04b4 0123     		movs	r3, #1
 22580 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3491:..\src/command_processing.c ****                
3492:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 22581              		.loc 1 3492 0
 22582 04ba 0023     		movs	r3, #0
 22583 04bc 87F88B31 		strb	r3, [r7, #395]
 22584 04c0 10E0     		b	.L921
 22585              	.L922:
3493:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22586              		.loc 1 3493 0 discriminator 3
 22587 04c2 B7F88821 		ldrh	r2, [r7, #392]
 22588 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22589 04ca 1344     		add	r3, r3, r2
 22590 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22591 04d0 3946     		mov	r1, r7
 22592 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 22593 04d4 07F12002 		add	r2, r7, #32
 22594 04d8 D154     		strb	r1, [r2, r3]
3492:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22595              		.loc 1 3492 0 discriminator 3
 22596 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22597 04de 0133     		adds	r3, r3, #1
 22598 04e0 87F88B31 		strb	r3, [r7, #395]
 22599              	.L921:
3492:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22600              		.loc 1 3492 0 is_stmt 0 discriminator 1
 22601 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22602 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22603 04ec 2549     		ldr	r1, .L926+4
 22604 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 22605 04f0 1946     		mov	r1, r3
 22606 04f2 264B     		ldr	r3, .L926+12
 22607 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 22608 04f8 9A42     		cmp	r2, r3
 22609 04fa E2DB     		blt	.L922
3494:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 499


3495:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 22610              		.loc 1 3495 0 is_stmt 1 discriminator 2
 22611 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22612 0500 204A     		ldr	r2, .L926+4
 22613 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22614 0504 1A46     		mov	r2, r3
 22615 0506 214B     		ldr	r3, .L926+12
 22616 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 22617 050c 9AB2     		uxth	r2, r3
 22618 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 22619 0512 1344     		add	r3, r3, r2
 22620 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3496:..\src/command_processing.c ****         
3497:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 22621              		.loc 1 3497 0 discriminator 2
 22622 0518 3B46     		mov	r3, r7
 22623 051a 2022     		movs	r2, #32
 22624 051c 0021     		movs	r1, #0
 22625 051e 1846     		mov	r0, r3
 22626 0520 FFF7FEFF 		bl	memset
3412:..\src/command_processing.c ****     {	
 22627              		.loc 1 3412 0 discriminator 2
 22628 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22629 0528 0133     		adds	r3, r3, #1
 22630 052a 87F88F31 		strb	r3, [r7, #399]
 22631              	.L907:
3412:..\src/command_processing.c ****     {	
 22632              		.loc 1 3412 0 is_stmt 0 discriminator 1
 22633 052e 184B     		ldr	r3, .L926+16
 22634 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22635 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22636 0536 9A42     		cmp	r2, r3
 22637 0538 FFF476AD 		bcc	.L923
3498:..\src/command_processing.c ****         
3499:..\src/command_processing.c ****     }
3500:..\src/command_processing.c **** 
3501:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3502:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 22638              		.loc 1 3502 0 is_stmt 1
 22639 053c 154B     		ldr	r3, .L926+20
 22640 053e 1B68     		ldr	r3, [r3]
 22641 0540 5C1E     		subs	r4, r3, #1
 22642 0542 144B     		ldr	r3, .L926+20
 22643 0544 1B68     		ldr	r3, [r3]
 22644 0546 DBB2     		uxtb	r3, r3
 22645 0548 013B     		subs	r3, r3, #1
 22646 054a DAB2     		uxtb	r2, r3
 22647 054c 07F12003 		add	r3, r7, #32
 22648 0550 1146     		mov	r1, r2
 22649 0552 1846     		mov	r0, r3
 22650 0554 FFF7FEFF 		bl	LCRChecksum
 22651 0558 0346     		mov	r3, r0
 22652 055a 1A46     		mov	r2, r3
 22653 055c 07F12003 		add	r3, r7, #32
 22654 0560 1A55     		strb	r2, [r3, r4]
3503:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 22655              		.loc 1 3503 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 500


 22656 0562 0C4B     		ldr	r3, .L926+20
 22657 0564 1B68     		ldr	r3, [r3]
 22658 0566 9AB2     		uxth	r2, r3
 22659 0568 07F12003 		add	r3, r7, #32
 22660 056c 1146     		mov	r1, r2
 22661 056e 1846     		mov	r0, r3
 22662 0570 FFF7FEFF 		bl	commWrite
3504:..\src/command_processing.c **** }
 22663              		.loc 1 3504 0
 22664 0574 00BF     		nop
 22665 0576 07F5CA77 		add	r7, r7, #404
 22666              		.cfi_def_cfa_offset 12
 22667 057a BD46     		mov	sp, r7
 22668              		.cfi_def_cfa_register 13
 22669              		@ sp needed
 22670 057c 90BD     		pop	{r4, r7, pc}
 22671              	.L927:
 22672 057e 00BF     		.align	2
 22673              	.L926:
 22674 0580 00000000 		.word	g_imu
 22675 0584 00000000 		.word	IMU_connected
 22676 0588 00000000 		.word	c_mem
 22677 058c 00000000 		.word	single_imu_size
 22678 0590 00000000 		.word	N_IMU_Connected
 22679 0594 00000000 		.word	imus_data_size
 22680              		.cfi_endproc
 22681              	.LFE102:
 22682              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 22683              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 22684              		.align	2
 22685              		.global	cmd_get_encoder_map
 22686              		.thumb
 22687              		.thumb_func
 22688              		.type	cmd_get_encoder_map, %function
 22689              	cmd_get_encoder_map:
 22690              	.LFB103:
3505:..\src/command_processing.c **** 
3506:..\src/command_processing.c **** void cmd_get_encoder_map(){
 22691              		.loc 1 3506 0
 22692              		.cfi_startproc
 22693              		@ args = 0, pretend = 0, frame = 16
 22694              		@ frame_needed = 1, uses_anonymous_args = 0
 22695 0000 90B5     		push	{r4, r7, lr}
 22696              		.cfi_def_cfa_offset 12
 22697              		.cfi_offset 4, -12
 22698              		.cfi_offset 7, -8
 22699              		.cfi_offset 14, -4
 22700 0002 85B0     		sub	sp, sp, #20
 22701              		.cfi_def_cfa_offset 32
 22702 0004 00AF     		add	r7, sp, #0
 22703              		.cfi_def_cfa_register 7
3507:..\src/command_processing.c ****     //Retrieve Encoder map
3508:..\src/command_processing.c ****     
3509:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3510:..\src/command_processing.c ****     uint8 CYDATA i, j;
3511:..\src/command_processing.c ****     
3512:..\src/command_processing.c ****     // Header        
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 501


3513:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 22704              		.loc 1 3513 0
 22705 0006 A323     		movs	r3, #163
 22706 0008 3B70     		strb	r3, [r7]
3514:..\src/command_processing.c ****     
3515:..\src/command_processing.c ****     // Fill payload
3516:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 22707              		.loc 1 3516 0
 22708 000a 0223     		movs	r3, #2
 22709 000c 7B70     		strb	r3, [r7, #1]
3517:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 22710              		.loc 1 3517 0
 22711 000e 0523     		movs	r3, #5
 22712 0010 BB70     		strb	r3, [r7, #2]
3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22713              		.loc 1 3518 0
 22714 0012 0023     		movs	r3, #0
 22715 0014 FB73     		strb	r3, [r7, #15]
 22716 0016 23E0     		b	.L929
 22717              	.L932:
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 22718              		.loc 1 3519 0
 22719 0018 0023     		movs	r3, #0
 22720 001a BB73     		strb	r3, [r7, #14]
 22721 001c 1AE0     		b	.L930
 22722              	.L931:
3520:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 22723              		.loc 1 3520 0 discriminator 3
 22724 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22725 0020 1346     		mov	r3, r2
 22726 0022 9B00     		lsls	r3, r3, #2
 22727 0024 1344     		add	r3, r3, r2
 22728 0026 DA1C     		adds	r2, r3, #3
 22729 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22730 002a D118     		adds	r1, r2, r3
 22731 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22732 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 22733 0030 154C     		ldr	r4, .L933
 22734 0032 1346     		mov	r3, r2
 22735 0034 5B00     		lsls	r3, r3, #1
 22736 0036 1344     		add	r3, r3, r2
 22737 0038 1B01     		lsls	r3, r3, #4
 22738 003a 2344     		add	r3, r3, r4
 22739 003c 0344     		add	r3, r3, r0
 22740 003e 03F5C873 		add	r3, r3, #400
 22741 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22742 0044 07F11003 		add	r3, r7, #16
 22743 0048 0B44     		add	r3, r3, r1
 22744 004a 03F8102C 		strb	r2, [r3, #-16]
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 22745              		.loc 1 3519 0 discriminator 3
 22746 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22747 0050 0133     		adds	r3, r3, #1
 22748 0052 BB73     		strb	r3, [r7, #14]
 22749              	.L930:
3519:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 22750              		.loc 1 3519 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 502


 22751 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22752 0056 042B     		cmp	r3, #4
 22753 0058 E1D9     		bls	.L931
3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22754              		.loc 1 3518 0 is_stmt 1 discriminator 2
 22755 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22756 005c 0133     		adds	r3, r3, #1
 22757 005e FB73     		strb	r3, [r7, #15]
 22758              	.L929:
3518:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22759              		.loc 1 3518 0 is_stmt 0 discriminator 1
 22760 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22761 0062 012B     		cmp	r3, #1
 22762 0064 D8D9     		bls	.L932
3521:..\src/command_processing.c ****         }
3522:..\src/command_processing.c ****     }
3523:..\src/command_processing.c ****     
3524:..\src/command_processing.c ****     // Calculate checksum
3525:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 22763              		.loc 1 3525 0 is_stmt 1
 22764 0066 3B46     		mov	r3, r7
 22765 0068 0D21     		movs	r1, #13
 22766 006a 1846     		mov	r0, r3
 22767 006c FFF7FEFF 		bl	LCRChecksum
 22768 0070 0346     		mov	r3, r0
 22769 0072 7B73     		strb	r3, [r7, #13]
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c ****     // Send package to UART
3528:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 22770              		.loc 1 3528 0
 22771 0074 3B46     		mov	r3, r7
 22772 0076 0E21     		movs	r1, #14
 22773 0078 1846     		mov	r0, r3
 22774 007a FFF7FEFF 		bl	commWrite
3529:..\src/command_processing.c **** }
 22775              		.loc 1 3529 0
 22776 007e 00BF     		nop
 22777 0080 1437     		adds	r7, r7, #20
 22778              		.cfi_def_cfa_offset 12
 22779 0082 BD46     		mov	sp, r7
 22780              		.cfi_def_cfa_register 13
 22781              		@ sp needed
 22782 0084 90BD     		pop	{r4, r7, pc}
 22783              	.L934:
 22784 0086 00BF     		.align	2
 22785              	.L933:
 22786 0088 00000000 		.word	c_mem
 22787              		.cfi_endproc
 22788              	.LFE103:
 22789              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 22790              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 22791              		.align	2
 22792              		.global	cmd_get_encoder_raw
 22793              		.thumb
 22794              		.thumb_func
 22795              		.type	cmd_get_encoder_raw, %function
 22796              	cmd_get_encoder_raw:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 503


 22797              	.LFB104:
3530:..\src/command_processing.c **** 
3531:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 22798              		.loc 1 3531 0
 22799              		.cfi_startproc
 22800              		@ args = 0, pretend = 0, frame = 32
 22801              		@ frame_needed = 1, uses_anonymous_args = 0
 22802 0000 90B5     		push	{r4, r7, lr}
 22803              		.cfi_def_cfa_offset 12
 22804              		.cfi_offset 4, -12
 22805              		.cfi_offset 7, -8
 22806              		.cfi_offset 14, -4
 22807 0002 89B0     		sub	sp, sp, #36
 22808              		.cfi_def_cfa_offset 48
 22809 0004 00AF     		add	r7, sp, #0
 22810              		.cfi_def_cfa_register 7
3532:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3535:..\src/command_processing.c ****     uint8 i, j, idx;
3536:..\src/command_processing.c ****     uint16 aux_uint16;
3537:..\src/command_processing.c ****     
3538:..\src/command_processing.c ****     //Header package 
3539:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 22811              		.loc 1 3539 0
 22812 0006 A423     		movs	r3, #164
 22813 0008 3B71     		strb	r3, [r7, #4]
3540:..\src/command_processing.c ****  
3541:..\src/command_processing.c ****     // Fill payload
3542:..\src/command_processing.c ****     idx = 0;
 22814              		.loc 1 3542 0
 22815 000a 0023     		movs	r3, #0
 22816 000c 7B77     		strb	r3, [r7, #29]
3543:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22817              		.loc 1 3543 0
 22818 000e 0023     		movs	r3, #0
 22819 0010 FB77     		strb	r3, [r7, #31]
 22820 0012 3FE0     		b	.L936
 22821              	.L940:
3544:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22822              		.loc 1 3544 0
 22823 0014 0023     		movs	r3, #0
 22824 0016 BB77     		strb	r3, [r7, #30]
 22825 0018 33E0     		b	.L937
 22826              	.L939:
3545:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22827              		.loc 1 3545 0
 22828 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22829 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22830 001e 3048     		ldr	r0, .L941
 22831 0020 1346     		mov	r3, r2
 22832 0022 5B00     		lsls	r3, r3, #1
 22833 0024 1344     		add	r3, r3, r2
 22834 0026 1B01     		lsls	r3, r3, #4
 22835 0028 0344     		add	r3, r3, r0
 22836 002a 0B44     		add	r3, r3, r1
 22837 002c 03F5C873 		add	r3, r3, #400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 504


 22838 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22839 0032 012B     		cmp	r3, #1
 22840 0034 22D1     		bne	.L938
3546:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 22841              		.loc 1 3546 0
 22842 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22843 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22844 003a 2A48     		ldr	r0, .L941+4
 22845 003c 1346     		mov	r3, r2
 22846 003e 9B00     		lsls	r3, r3, #2
 22847 0040 1344     		add	r3, r3, r2
 22848 0042 0B44     		add	r3, r3, r1
 22849 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 22850 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3547:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 22851              		.loc 1 3547 0
 22852 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22853 004c 5B00     		lsls	r3, r3, #1
 22854 004e 0233     		adds	r3, r3, #2
 22855 0050 BA1C     		adds	r2, r7, #2
 22856 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22857 0054 07F12001 		add	r1, r7, #32
 22858 0058 0B44     		add	r3, r3, r1
 22859 005a 03F81C2C 		strb	r2, [r3, #-28]
3548:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 22860              		.loc 1 3548 0
 22861 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22862 0060 5B00     		lsls	r3, r3, #1
 22863 0062 5A1C     		adds	r2, r3, #1
 22864 0064 BB1C     		adds	r3, r7, #2
 22865 0066 0133     		adds	r3, r3, #1
 22866 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22867 006a 07F12003 		add	r3, r7, #32
 22868 006e 1344     		add	r3, r3, r2
 22869 0070 0A46     		mov	r2, r1
 22870 0072 03F81C2C 		strb	r2, [r3, #-28]
3549:..\src/command_processing.c ****                 idx++;
 22871              		.loc 1 3549 0
 22872 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22873 0078 0133     		adds	r3, r3, #1
 22874 007a 7B77     		strb	r3, [r7, #29]
 22875              	.L938:
3544:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22876              		.loc 1 3544 0 discriminator 2
 22877 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22878 007e 0133     		adds	r3, r3, #1
 22879 0080 BB77     		strb	r3, [r7, #30]
 22880              	.L937:
3544:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22881              		.loc 1 3544 0 is_stmt 0 discriminator 1
 22882 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22883 0084 184A     		ldr	r2, .L941+8
 22884 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22885 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 22886 008a 9A42     		cmp	r2, r3
 22887 008c C5D3     		bcc	.L939
3543:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 505


 22888              		.loc 1 3543 0 is_stmt 1 discriminator 2
 22889 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22890 0090 0133     		adds	r3, r3, #1
 22891 0092 FB77     		strb	r3, [r7, #31]
 22892              	.L936:
3543:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22893              		.loc 1 3543 0 is_stmt 0 discriminator 1
 22894 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22895 0096 012B     		cmp	r3, #1
 22896 0098 BCD9     		bls	.L940
3550:..\src/command_processing.c ****             }
3551:..\src/command_processing.c ****         }
3552:..\src/command_processing.c ****     }
3553:..\src/command_processing.c **** 
3554:..\src/command_processing.c ****     // Calculate checksum
3555:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 22897              		.loc 1 3555 0 is_stmt 1
 22898 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22899 009c 5B00     		lsls	r3, r3, #1
 22900 009e 5C1C     		adds	r4, r3, #1
 22901 00a0 7B7F     		ldrb	r3, [r7, #29]
 22902 00a2 5B00     		lsls	r3, r3, #1
 22903 00a4 DBB2     		uxtb	r3, r3
 22904 00a6 0133     		adds	r3, r3, #1
 22905 00a8 DAB2     		uxtb	r2, r3
 22906 00aa 3B1D     		adds	r3, r7, #4
 22907 00ac 1146     		mov	r1, r2
 22908 00ae 1846     		mov	r0, r3
 22909 00b0 FFF7FEFF 		bl	LCRChecksum
 22910 00b4 0346     		mov	r3, r0
 22911 00b6 1A46     		mov	r2, r3
 22912 00b8 07F12003 		add	r3, r7, #32
 22913 00bc 2344     		add	r3, r3, r4
 22914 00be 03F81C2C 		strb	r2, [r3, #-28]
3556:..\src/command_processing.c ****     
3557:..\src/command_processing.c ****     // Send package to UART
3558:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 22915              		.loc 1 3558 0
 22916 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22917 00c4 0133     		adds	r3, r3, #1
 22918 00c6 9BB2     		uxth	r3, r3
 22919 00c8 5B00     		lsls	r3, r3, #1
 22920 00ca 9AB2     		uxth	r2, r3
 22921 00cc 3B1D     		adds	r3, r7, #4
 22922 00ce 1146     		mov	r1, r2
 22923 00d0 1846     		mov	r0, r3
 22924 00d2 FFF7FEFF 		bl	commWrite
3559:..\src/command_processing.c **** }
 22925              		.loc 1 3559 0
 22926 00d6 00BF     		nop
 22927 00d8 2437     		adds	r7, r7, #36
 22928              		.cfi_def_cfa_offset 12
 22929 00da BD46     		mov	sp, r7
 22930              		.cfi_def_cfa_register 13
 22931              		@ sp needed
 22932 00dc 90BD     		pop	{r4, r7, pc}
 22933              	.L942:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 506


 22934 00de 00BF     		.align	2
 22935              	.L941:
 22936 00e0 00000000 		.word	c_mem
 22937 00e4 00000000 		.word	Encoder_Value
 22938 00e8 00000000 		.word	N_Encoder_Line_Connected
 22939              		.cfi_endproc
 22940              	.LFE104:
 22941              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 22942              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 22943              		.align	2
 22944              		.global	cmd_get_ADC_map
 22945              		.thumb
 22946              		.thumb_func
 22947              		.type	cmd_get_ADC_map, %function
 22948              	cmd_get_ADC_map:
 22949              	.LFB105:
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c **** void cmd_get_ADC_map(){
 22950              		.loc 1 3561 0
 22951              		.cfi_startproc
 22952              		@ args = 0, pretend = 0, frame = 16
 22953              		@ frame_needed = 1, uses_anonymous_args = 0
 22954 0000 80B5     		push	{r7, lr}
 22955              		.cfi_def_cfa_offset 8
 22956              		.cfi_offset 7, -8
 22957              		.cfi_offset 14, -4
 22958 0002 84B0     		sub	sp, sp, #16
 22959              		.cfi_def_cfa_offset 24
 22960 0004 00AF     		add	r7, sp, #0
 22961              		.cfi_def_cfa_register 7
3562:..\src/command_processing.c ****     //Retrieve Encoder map
3563:..\src/command_processing.c ****     
3564:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3565:..\src/command_processing.c ****     uint8 CYDATA i;
3566:..\src/command_processing.c ****     
3567:..\src/command_processing.c ****     // Header        
3568:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 22962              		.loc 1 3568 0
 22963 0006 A523     		movs	r3, #165
 22964 0008 3B70     		strb	r3, [r7]
3569:..\src/command_processing.c ****     
3570:..\src/command_processing.c ****     // Fill payload
3571:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 22965              		.loc 1 3571 0
 22966 000a 0C23     		movs	r3, #12
 22967 000c 7B70     		strb	r3, [r7, #1]
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22968              		.loc 1 3572 0
 22969 000e 0023     		movs	r3, #0
 22970 0010 FB73     		strb	r3, [r7, #15]
 22971 0012 0EE0     		b	.L944
 22972              	.L945:
3573:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 22973              		.loc 1 3573 0 discriminator 3
 22974 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22975 0016 0233     		adds	r3, r3, #2
 22976 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 507


 22977 001a 0F49     		ldr	r1, .L946
 22978 001c 0A44     		add	r2, r2, r1
 22979 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 22980 0022 07F11001 		add	r1, r7, #16
 22981 0026 0B44     		add	r3, r3, r1
 22982 0028 03F8102C 		strb	r2, [r3, #-16]
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22983              		.loc 1 3572 0 discriminator 3
 22984 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22985 002e 0133     		adds	r3, r3, #1
 22986 0030 FB73     		strb	r3, [r7, #15]
 22987              	.L944:
3572:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22988              		.loc 1 3572 0 is_stmt 0 discriminator 1
 22989 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22990 0034 0B2B     		cmp	r3, #11
 22991 0036 EDD9     		bls	.L945
3574:..\src/command_processing.c ****     }
3575:..\src/command_processing.c ****     
3576:..\src/command_processing.c ****     // Calculate checksum
3577:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 22992              		.loc 1 3577 0 is_stmt 1
 22993 0038 3B46     		mov	r3, r7
 22994 003a 0E21     		movs	r1, #14
 22995 003c 1846     		mov	r0, r3
 22996 003e FFF7FEFF 		bl	LCRChecksum
 22997 0042 0346     		mov	r3, r0
 22998 0044 BB73     		strb	r3, [r7, #14]
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c ****     // Send package to UART
3580:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 22999              		.loc 1 3580 0
 23000 0046 3B46     		mov	r3, r7
 23001 0048 0F21     		movs	r1, #15
 23002 004a 1846     		mov	r0, r3
 23003 004c FFF7FEFF 		bl	commWrite
3581:..\src/command_processing.c ****     
3582:..\src/command_processing.c **** }
 23004              		.loc 1 3582 0
 23005 0050 00BF     		nop
 23006 0052 1037     		adds	r7, r7, #16
 23007              		.cfi_def_cfa_offset 8
 23008 0054 BD46     		mov	sp, r7
 23009              		.cfi_def_cfa_register 13
 23010              		@ sp needed
 23011 0056 80BD     		pop	{r7, pc}
 23012              	.L947:
 23013              		.align	2
 23014              	.L946:
 23015 0058 00000000 		.word	c_mem
 23016              		.cfi_endproc
 23017              	.LFE105:
 23018              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 23019              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 23020              		.align	2
 23021              		.global	cmd_get_ADC_raw
 23022              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 508


 23023              		.thumb_func
 23024              		.type	cmd_get_ADC_raw, %function
 23025              	cmd_get_ADC_raw:
 23026              	.LFB106:
3583:..\src/command_processing.c **** 
3584:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 23027              		.loc 1 3584 0
 23028              		.cfi_startproc
 23029              		@ args = 0, pretend = 0, frame = 32
 23030              		@ frame_needed = 1, uses_anonymous_args = 0
 23031 0000 90B5     		push	{r4, r7, lr}
 23032              		.cfi_def_cfa_offset 12
 23033              		.cfi_offset 4, -12
 23034              		.cfi_offset 7, -8
 23035              		.cfi_offset 14, -4
 23036 0002 89B0     		sub	sp, sp, #36
 23037              		.cfi_def_cfa_offset 48
 23038 0004 00AF     		add	r7, sp, #0
 23039              		.cfi_def_cfa_register 7
3585:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3586:..\src/command_processing.c ****     
3587:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3588:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 23040              		.loc 1 3588 0
 23041 0006 0023     		movs	r3, #0
 23042 0008 BB77     		strb	r3, [r7, #30]
3589:..\src/command_processing.c ****     int16 aux_int16;
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c ****     // Header        
3592:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 23043              		.loc 1 3592 0
 23044 000a A623     		movs	r3, #166
 23045 000c 3B71     		strb	r3, [r7, #4]
3593:..\src/command_processing.c ****     
3594:..\src/command_processing.c ****     // Fill payload
3595:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 23046              		.loc 1 3595 0
 23047 000e 0023     		movs	r3, #0
 23048 0010 FB77     		strb	r3, [r7, #31]
 23049 0012 27E0     		b	.L949
 23050              	.L951:
3596:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23051              		.loc 1 3596 0
 23052 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23053 0016 274A     		ldr	r2, .L952
 23054 0018 1344     		add	r3, r3, r2
 23055 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 23056 001e 012B     		cmp	r3, #1
 23057 0020 1DD1     		bne	.L950
3597:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 23058              		.loc 1 3597 0
 23059 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23060 0024 244A     		ldr	r2, .L952+4
 23061 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 23062 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3598:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 23063              		.loc 1 3598 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 509


 23064 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23065 002e 5B00     		lsls	r3, r3, #1
 23066 0030 0233     		adds	r3, r3, #2
 23067 0032 BA1C     		adds	r2, r7, #2
 23068 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23069 0036 07F12001 		add	r1, r7, #32
 23070 003a 0B44     		add	r3, r3, r1
 23071 003c 03F81C2C 		strb	r2, [r3, #-28]
3599:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 23072              		.loc 1 3599 0
 23073 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23074 0042 5B00     		lsls	r3, r3, #1
 23075 0044 5A1C     		adds	r2, r3, #1
 23076 0046 BB1C     		adds	r3, r7, #2
 23077 0048 0133     		adds	r3, r3, #1
 23078 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23079 004c 07F12003 		add	r3, r7, #32
 23080 0050 1344     		add	r3, r3, r2
 23081 0052 0A46     		mov	r2, r1
 23082 0054 03F81C2C 		strb	r2, [r3, #-28]
3600:..\src/command_processing.c ****             idx++;
 23083              		.loc 1 3600 0
 23084 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23085 005a 0133     		adds	r3, r3, #1
 23086 005c BB77     		strb	r3, [r7, #30]
 23087              	.L950:
3595:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23088              		.loc 1 3595 0 discriminator 2
 23089 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23090 0060 0133     		adds	r3, r3, #1
 23091 0062 FB77     		strb	r3, [r7, #31]
 23092              	.L949:
3595:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23093              		.loc 1 3595 0 is_stmt 0 discriminator 1
 23094 0064 154B     		ldr	r3, .L952+8
 23095 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23096 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23097 006a 9A42     		cmp	r2, r3
 23098 006c D2D3     		bcc	.L951
3601:..\src/command_processing.c ****         }
3602:..\src/command_processing.c ****     }
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c ****     // Calculate checksum
3605:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 23099              		.loc 1 3605 0 is_stmt 1
 23100 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23101 0070 5B00     		lsls	r3, r3, #1
 23102 0072 5C1C     		adds	r4, r3, #1
 23103 0074 BB7F     		ldrb	r3, [r7, #30]
 23104 0076 5B00     		lsls	r3, r3, #1
 23105 0078 DBB2     		uxtb	r3, r3
 23106 007a 0133     		adds	r3, r3, #1
 23107 007c DAB2     		uxtb	r2, r3
 23108 007e 3B1D     		adds	r3, r7, #4
 23109 0080 1146     		mov	r1, r2
 23110 0082 1846     		mov	r0, r3
 23111 0084 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 510


 23112 0088 0346     		mov	r3, r0
 23113 008a 1A46     		mov	r2, r3
 23114 008c 07F12003 		add	r3, r7, #32
 23115 0090 2344     		add	r3, r3, r4
 23116 0092 03F81C2C 		strb	r2, [r3, #-28]
3606:..\src/command_processing.c ****     
3607:..\src/command_processing.c ****     // Send package to UART
3608:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 23117              		.loc 1 3608 0
 23118 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23119 0098 0133     		adds	r3, r3, #1
 23120 009a 9BB2     		uxth	r3, r3
 23121 009c 5B00     		lsls	r3, r3, #1
 23122 009e 9AB2     		uxth	r2, r3
 23123 00a0 3B1D     		adds	r3, r7, #4
 23124 00a2 1146     		mov	r1, r2
 23125 00a4 1846     		mov	r0, r3
 23126 00a6 FFF7FEFF 		bl	commWrite
3609:..\src/command_processing.c **** }
 23127              		.loc 1 3609 0
 23128 00aa 00BF     		nop
 23129 00ac 2437     		adds	r7, r7, #36
 23130              		.cfi_def_cfa_offset 12
 23131 00ae BD46     		mov	sp, r7
 23132              		.cfi_def_cfa_register 13
 23133              		@ sp needed
 23134 00b0 90BD     		pop	{r4, r7, pc}
 23135              	.L953:
 23136 00b2 00BF     		.align	2
 23137              	.L952:
 23138 00b4 00000000 		.word	c_mem
 23139 00b8 00000000 		.word	ADC_buf
 23140 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 23141              		.cfi_endproc
 23142              	.LFE106:
 23143              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 23144              		.bss
 23145              		.align	2
 23146              	last_aux_int16.11230:
 23147 0000 00000000 		.space	4
 23148              		.text
 23149              	.Letext0:
 23150              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23151              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23152              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 23153              		.file 6 "..\\src\\commands.h"
 23154              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 23155              		.file 8 "..\\src\\globals.h"
 23156              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 23157              		.section	.debug_info,"",%progbits
 23158              	.Ldebug_info0:
 23159 0000 83200000 		.4byte	0x2083
 23160 0004 0400     		.2byte	0x4
 23161 0006 00000000 		.4byte	.Ldebug_abbrev0
 23162 000a 04       		.byte	0x4
 23163 000b 01       		.uleb128 0x1
 23164 000c 9E070000 		.4byte	.LASF336
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 511


 23165 0010 0C       		.byte	0xc
 23166 0011 46110000 		.4byte	.LASF337
 23167 0015 65030000 		.4byte	.LASF338
 23168 0019 00000000 		.4byte	.Ldebug_ranges0+0
 23169 001d 00000000 		.4byte	0
 23170 0021 00000000 		.4byte	.Ldebug_line0
 23171 0025 02       		.uleb128 0x2
 23172 0026 01       		.byte	0x1
 23173 0027 06       		.byte	0x6
 23174 0028 0C030000 		.4byte	.LASF0
 23175 002c 02       		.uleb128 0x2
 23176 002d 01       		.byte	0x1
 23177 002e 08       		.byte	0x8
 23178 002f B1030000 		.4byte	.LASF1
 23179 0033 02       		.uleb128 0x2
 23180 0034 02       		.byte	0x2
 23181 0035 05       		.byte	0x5
 23182 0036 180E0000 		.4byte	.LASF2
 23183 003a 02       		.uleb128 0x2
 23184 003b 02       		.byte	0x2
 23185 003c 07       		.byte	0x7
 23186 003d 6D100000 		.4byte	.LASF3
 23187 0041 03       		.uleb128 0x3
 23188 0042 04110000 		.4byte	.LASF5
 23189 0046 03       		.byte	0x3
 23190 0047 3F       		.byte	0x3f
 23191 0048 4C000000 		.4byte	0x4c
 23192 004c 02       		.uleb128 0x2
 23193 004d 04       		.byte	0x4
 23194 004e 05       		.byte	0x5
 23195 004f 22020000 		.4byte	.LASF4
 23196 0053 03       		.uleb128 0x3
 23197 0054 58080000 		.4byte	.LASF6
 23198 0058 03       		.byte	0x3
 23199 0059 41       		.byte	0x41
 23200 005a 5E000000 		.4byte	0x5e
 23201 005e 02       		.uleb128 0x2
 23202 005f 04       		.byte	0x4
 23203 0060 07       		.byte	0x7
 23204 0061 61060000 		.4byte	.LASF7
 23205 0065 02       		.uleb128 0x2
 23206 0066 08       		.byte	0x8
 23207 0067 05       		.byte	0x5
 23208 0068 63080000 		.4byte	.LASF8
 23209 006c 02       		.uleb128 0x2
 23210 006d 08       		.byte	0x8
 23211 006e 07       		.byte	0x7
 23212 006f BA0B0000 		.4byte	.LASF9
 23213 0073 04       		.uleb128 0x4
 23214 0074 04       		.byte	0x4
 23215 0075 05       		.byte	0x5
 23216 0076 696E7400 		.ascii	"int\000"
 23217 007a 02       		.uleb128 0x2
 23218 007b 04       		.byte	0x4
 23219 007c 07       		.byte	0x7
 23220 007d 4E090000 		.4byte	.LASF10
 23221 0081 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 512


 23222 0082 55000000 		.4byte	.LASF11
 23223 0086 04       		.byte	0x4
 23224 0087 2C       		.byte	0x2c
 23225 0088 41000000 		.4byte	0x41
 23226 008c 03       		.uleb128 0x3
 23227 008d E40F0000 		.4byte	.LASF12
 23228 0091 04       		.byte	0x4
 23229 0092 30       		.byte	0x30
 23230 0093 53000000 		.4byte	0x53
 23231 0097 05       		.uleb128 0x5
 23232 0098 060E0000 		.4byte	.LASF13
 23233 009c 05       		.byte	0x5
 23234 009d E401     		.2byte	0x1e4
 23235 009f 2C000000 		.4byte	0x2c
 23236 00a3 05       		.uleb128 0x5
 23237 00a4 99110000 		.4byte	.LASF14
 23238 00a8 05       		.byte	0x5
 23239 00a9 E501     		.2byte	0x1e5
 23240 00ab 3A000000 		.4byte	0x3a
 23241 00af 05       		.uleb128 0x5
 23242 00b0 81000000 		.4byte	.LASF15
 23243 00b4 05       		.byte	0x5
 23244 00b5 E601     		.2byte	0x1e6
 23245 00b7 5E000000 		.4byte	0x5e
 23246 00bb 05       		.uleb128 0x5
 23247 00bc 6A010000 		.4byte	.LASF16
 23248 00c0 05       		.byte	0x5
 23249 00c1 E701     		.2byte	0x1e7
 23250 00c3 25000000 		.4byte	0x25
 23251 00c7 05       		.uleb128 0x5
 23252 00c8 440F0000 		.4byte	.LASF17
 23253 00cc 05       		.byte	0x5
 23254 00cd E801     		.2byte	0x1e8
 23255 00cf 33000000 		.4byte	0x33
 23256 00d3 05       		.uleb128 0x5
 23257 00d4 A7100000 		.4byte	.LASF18
 23258 00d8 05       		.byte	0x5
 23259 00d9 E901     		.2byte	0x1e9
 23260 00db 4C000000 		.4byte	0x4c
 23261 00df 05       		.uleb128 0x5
 23262 00e0 8F020000 		.4byte	.LASF19
 23263 00e4 05       		.byte	0x5
 23264 00e5 EA01     		.2byte	0x1ea
 23265 00e7 EB000000 		.4byte	0xeb
 23266 00eb 02       		.uleb128 0x2
 23267 00ec 04       		.byte	0x4
 23268 00ed 04       		.byte	0x4
 23269 00ee 14090000 		.4byte	.LASF20
 23270 00f2 02       		.uleb128 0x2
 23271 00f3 08       		.byte	0x8
 23272 00f4 04       		.byte	0x4
 23273 00f5 BB080000 		.4byte	.LASF21
 23274 00f9 02       		.uleb128 0x2
 23275 00fa 01       		.byte	0x1
 23276 00fb 08       		.byte	0x8
 23277 00fc 5F040000 		.4byte	.LASF22
 23278 0100 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 513


 23279 0101 9A0C0000 		.4byte	.LASF23
 23280 0105 05       		.byte	0x5
 23281 0106 8E02     		.2byte	0x28e
 23282 0108 0C010000 		.4byte	0x10c
 23283 010c 06       		.uleb128 0x6
 23284 010d 97000000 		.4byte	0x97
 23285 0111 02       		.uleb128 0x2
 23286 0112 08       		.byte	0x8
 23287 0113 04       		.byte	0x4
 23288 0114 B70A0000 		.4byte	.LASF24
 23289 0118 02       		.uleb128 0x2
 23290 0119 04       		.byte	0x4
 23291 011a 07       		.byte	0x7
 23292 011b 10000000 		.4byte	.LASF25
 23293 011f 07       		.uleb128 0x7
 23294 0120 04       		.byte	0x4
 23295 0121 F9000000 		.4byte	0xf9
 23296 0125 07       		.uleb128 0x7
 23297 0126 04       		.byte	0x4
 23298 0127 2B010000 		.4byte	0x12b
 23299 012b 08       		.uleb128 0x8
 23300 012c F9000000 		.4byte	0xf9
 23301 0130 09       		.uleb128 0x9
 23302 0131 F9000000 		.4byte	0xf9
 23303 0135 40010000 		.4byte	0x140
 23304 0139 0A       		.uleb128 0xa
 23305 013a 18010000 		.4byte	0x118
 23306 013e 19       		.byte	0x19
 23307 013f 00       		.byte	0
 23308 0140 09       		.uleb128 0x9
 23309 0141 F9000000 		.4byte	0xf9
 23310 0145 50010000 		.4byte	0x150
 23311 0149 0A       		.uleb128 0xa
 23312 014a 18010000 		.4byte	0x118
 23313 014e 07       		.byte	0x7
 23314 014f 00       		.byte	0
 23315 0150 09       		.uleb128 0x9
 23316 0151 97000000 		.4byte	0x97
 23317 0155 60010000 		.4byte	0x160
 23318 0159 0A       		.uleb128 0xa
 23319 015a 18010000 		.4byte	0x118
 23320 015e 1B       		.byte	0x1b
 23321 015f 00       		.byte	0
 23322 0160 0B       		.uleb128 0xb
 23323 0161 87090000 		.4byte	.LASF55
 23324 0165 01       		.byte	0x1
 23325 0166 2C000000 		.4byte	0x2c
 23326 016a 06       		.byte	0x6
 23327 016b 42       		.byte	0x42
 23328 016c 1F020000 		.4byte	0x21f
 23329 0170 0C       		.uleb128 0xc
 23330 0171 C1110000 		.4byte	.LASF26
 23331 0175 00       		.byte	0
 23332 0176 0C       		.uleb128 0xc
 23333 0177 8A0E0000 		.4byte	.LASF27
 23334 017b 01       		.byte	0x1
 23335 017c 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 514


 23336 017d 3D060000 		.4byte	.LASF28
 23337 0181 03       		.byte	0x3
 23338 0182 0C       		.uleb128 0xc
 23339 0183 E9030000 		.4byte	.LASF29
 23340 0187 04       		.byte	0x4
 23341 0188 0C       		.uleb128 0xc
 23342 0189 C20C0000 		.4byte	.LASF30
 23343 018d 05       		.byte	0x5
 23344 018e 0C       		.uleb128 0xc
 23345 018f 46070000 		.4byte	.LASF31
 23346 0193 06       		.byte	0x6
 23347 0194 0C       		.uleb128 0xc
 23348 0195 81060000 		.4byte	.LASF32
 23349 0199 09       		.byte	0x9
 23350 019a 0C       		.uleb128 0xc
 23351 019b 19000000 		.4byte	.LASF33
 23352 019f 0A       		.byte	0xa
 23353 01a0 0C       		.uleb128 0xc
 23354 01a1 260F0000 		.4byte	.LASF34
 23355 01a5 0C       		.byte	0xc
 23356 01a6 0C       		.uleb128 0xc
 23357 01a7 1C0B0000 		.4byte	.LASF35
 23358 01ab 0D       		.byte	0xd
 23359 01ac 0C       		.uleb128 0xc
 23360 01ad 43000000 		.4byte	.LASF36
 23361 01b1 80       		.byte	0x80
 23362 01b2 0C       		.uleb128 0xc
 23363 01b3 4E040000 		.4byte	.LASF37
 23364 01b7 81       		.byte	0x81
 23365 01b8 0C       		.uleb128 0xc
 23366 01b9 44050000 		.4byte	.LASF38
 23367 01bd 82       		.byte	0x82
 23368 01be 0C       		.uleb128 0xc
 23369 01bf 540E0000 		.4byte	.LASF39
 23370 01c3 83       		.byte	0x83
 23371 01c4 0C       		.uleb128 0xc
 23372 01c5 DD0D0000 		.4byte	.LASF40
 23373 01c9 84       		.byte	0x84
 23374 01ca 0C       		.uleb128 0xc
 23375 01cb A7020000 		.4byte	.LASF41
 23376 01cf 85       		.byte	0x85
 23377 01d0 0C       		.uleb128 0xc
 23378 01d1 88070000 		.4byte	.LASF42
 23379 01d5 86       		.byte	0x86
 23380 01d6 0C       		.uleb128 0xc
 23381 01d7 26070000 		.4byte	.LASF43
 23382 01db 88       		.byte	0x88
 23383 01dc 0C       		.uleb128 0xc
 23384 01dd 070F0000 		.4byte	.LASF44
 23385 01e1 89       		.byte	0x89
 23386 01e2 0C       		.uleb128 0xc
 23387 01e3 180C0000 		.4byte	.LASF45
 23388 01e7 8B       		.byte	0x8b
 23389 01e8 0C       		.uleb128 0xc
 23390 01e9 880A0000 		.4byte	.LASF46
 23391 01ed 8C       		.byte	0x8c
 23392 01ee 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 515


 23393 01ef 33080000 		.4byte	.LASF47
 23394 01f3 8E       		.byte	0x8e
 23395 01f4 0C       		.uleb128 0xc
 23396 01f5 500C0000 		.4byte	.LASF48
 23397 01f9 90       		.byte	0x90
 23398 01fa 0C       		.uleb128 0xc
 23399 01fb 46100000 		.4byte	.LASF49
 23400 01ff A1       		.byte	0xa1
 23401 0200 0C       		.uleb128 0xc
 23402 0201 A00D0000 		.4byte	.LASF50
 23403 0205 A2       		.byte	0xa2
 23404 0206 0C       		.uleb128 0xc
 23405 0207 D9090000 		.4byte	.LASF51
 23406 020b A3       		.byte	0xa3
 23407 020c 0C       		.uleb128 0xc
 23408 020d B20D0000 		.4byte	.LASF52
 23409 0211 A4       		.byte	0xa4
 23410 0212 0C       		.uleb128 0xc
 23411 0213 790E0000 		.4byte	.LASF53
 23412 0217 A5       		.byte	0xa5
 23413 0218 0C       		.uleb128 0xc
 23414 0219 860D0000 		.4byte	.LASF54
 23415 021d A6       		.byte	0xa6
 23416 021e 00       		.byte	0
 23417 021f 0B       		.uleb128 0xb
 23418 0220 70110000 		.4byte	.LASF56
 23419 0224 01       		.byte	0x1
 23420 0225 2C000000 		.4byte	0x2c
 23421 0229 06       		.byte	0x6
 23422 022a 8B       		.byte	0x8b
 23423 022b 54020000 		.4byte	0x254
 23424 022f 0C       		.uleb128 0xc
 23425 0230 C2050000 		.4byte	.LASF57
 23426 0234 00       		.byte	0
 23427 0235 0C       		.uleb128 0xc
 23428 0236 C5090000 		.4byte	.LASF58
 23429 023a 01       		.byte	0x1
 23430 023b 0C       		.uleb128 0xc
 23431 023c D9010000 		.4byte	.LASF59
 23432 0240 02       		.byte	0x2
 23433 0241 0C       		.uleb128 0xc
 23434 0242 4C010000 		.4byte	.LASF60
 23435 0246 03       		.byte	0x3
 23436 0247 0C       		.uleb128 0xc
 23437 0248 FF000000 		.4byte	.LASF61
 23438 024c 04       		.byte	0x4
 23439 024d 0C       		.uleb128 0xc
 23440 024e 2B000000 		.4byte	.LASF62
 23441 0252 05       		.byte	0x5
 23442 0253 00       		.byte	0
 23443 0254 0B       		.uleb128 0xb
 23444 0255 71080000 		.4byte	.LASF63
 23445 0259 01       		.byte	0x1
 23446 025a 2C000000 		.4byte	0x2c
 23447 025e 06       		.byte	0x6
 23448 025f 9D       		.byte	0x9d
 23449 0260 7D020000 		.4byte	0x27d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 516


 23450 0264 0C       		.uleb128 0xc
 23451 0265 E9100000 		.4byte	.LASF64
 23452 0269 00       		.byte	0
 23453 026a 0C       		.uleb128 0xc
 23454 026b 1A070000 		.4byte	.LASF65
 23455 026f 01       		.byte	0x1
 23456 0270 0C       		.uleb128 0xc
 23457 0271 A70A0000 		.4byte	.LASF66
 23458 0275 02       		.byte	0x2
 23459 0276 0C       		.uleb128 0xc
 23460 0277 28060000 		.4byte	.LASF67
 23461 027b 03       		.byte	0x3
 23462 027c 00       		.byte	0
 23463 027d 0B       		.uleb128 0xb
 23464 027e 4B030000 		.4byte	.LASF68
 23465 0282 01       		.byte	0x1
 23466 0283 2C000000 		.4byte	0x2c
 23467 0287 06       		.byte	0x6
 23468 0288 A7       		.byte	0xa7
 23469 0289 9A020000 		.4byte	0x29a
 23470 028d 0C       		.uleb128 0xc
 23471 028e 960D0000 		.4byte	.LASF69
 23472 0292 00       		.byte	0
 23473 0293 0C       		.uleb128 0xc
 23474 0294 9D080000 		.4byte	.LASF70
 23475 0298 01       		.byte	0x1
 23476 0299 00       		.byte	0
 23477 029a 0B       		.uleb128 0xb
 23478 029b 690B0000 		.4byte	.LASF71
 23479 029f 01       		.byte	0x1
 23480 02a0 2C000000 		.4byte	0x2c
 23481 02a4 06       		.byte	0x6
 23482 02a5 AC       		.byte	0xac
 23483 02a6 B7020000 		.4byte	0x2b7
 23484 02aa 0C       		.uleb128 0xc
 23485 02ab A7050000 		.4byte	.LASF72
 23486 02af 00       		.byte	0
 23487 02b0 0C       		.uleb128 0xc
 23488 02b1 D7060000 		.4byte	.LASF73
 23489 02b5 01       		.byte	0x1
 23490 02b6 00       		.byte	0
 23491 02b7 0B       		.uleb128 0xb
 23492 02b8 390F0000 		.4byte	.LASF74
 23493 02bc 01       		.byte	0x1
 23494 02bd 2C000000 		.4byte	0x2c
 23495 02c1 06       		.byte	0x6
 23496 02c2 B4       		.byte	0xb4
 23497 02c3 04030000 		.4byte	0x304
 23498 02c7 0C       		.uleb128 0xc
 23499 02c8 DE060000 		.4byte	.LASF75
 23500 02cc 00       		.byte	0
 23501 02cd 0C       		.uleb128 0xc
 23502 02ce 7E110000 		.4byte	.LASF76
 23503 02d2 01       		.byte	0x1
 23504 02d3 0C       		.uleb128 0xc
 23505 02d4 81080000 		.4byte	.LASF77
 23506 02d8 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 517


 23507 02d9 0C       		.uleb128 0xc
 23508 02da 640A0000 		.4byte	.LASF78
 23509 02de 03       		.byte	0x3
 23510 02df 0C       		.uleb128 0xc
 23511 02e0 92090000 		.4byte	.LASF79
 23512 02e4 04       		.byte	0x4
 23513 02e5 0C       		.uleb128 0xc
 23514 02e6 D10B0000 		.4byte	.LASF80
 23515 02ea 05       		.byte	0x5
 23516 02eb 0C       		.uleb128 0xc
 23517 02ec C30A0000 		.4byte	.LASF81
 23518 02f0 06       		.byte	0x6
 23519 02f1 0C       		.uleb128 0xc
 23520 02f2 260A0000 		.4byte	.LASF82
 23521 02f6 07       		.byte	0x7
 23522 02f7 0C       		.uleb128 0xc
 23523 02f8 85050000 		.4byte	.LASF83
 23524 02fc 08       		.byte	0x8
 23525 02fd 0C       		.uleb128 0xc
 23526 02fe 1C060000 		.4byte	.LASF84
 23527 0302 09       		.byte	0x9
 23528 0303 00       		.byte	0
 23529 0304 03       		.uleb128 0x3
 23530 0305 CA100000 		.4byte	.LASF85
 23531 0309 07       		.byte	0x7
 23532 030a 7E       		.byte	0x7e
 23533 030b 0F030000 		.4byte	0x30f
 23534 030f 0D       		.uleb128 0xd
 23535 0310 CA100000 		.4byte	.LASF85
 23536 0314 07       		.uleb128 0x7
 23537 0315 04       		.byte	0x4
 23538 0316 04030000 		.4byte	0x304
 23539 031a 0E       		.uleb128 0xe
 23540 031b 2C080000 		.4byte	.LASF88
 23541 031f 10       		.byte	0x10
 23542 0320 08       		.byte	0x8
 23543 0321 CE       		.byte	0xce
 23544 0322 57030000 		.4byte	0x357
 23545 0326 0F       		.uleb128 0xf
 23546 0327 706F7300 		.ascii	"pos\000"
 23547 032b 08       		.byte	0x8
 23548 032c CF       		.byte	0xcf
 23549 032d D3000000 		.4byte	0xd3
 23550 0331 00       		.byte	0
 23551 0332 10       		.uleb128 0x10
 23552 0333 0A070000 		.4byte	.LASF86
 23553 0337 08       		.byte	0x8
 23554 0338 D0       		.byte	0xd0
 23555 0339 D3000000 		.4byte	0xd3
 23556 033d 04       		.byte	0x4
 23557 033e 0F       		.uleb128 0xf
 23558 033f 70776D00 		.ascii	"pwm\000"
 23559 0343 08       		.byte	0x8
 23560 0344 D1       		.byte	0xd1
 23561 0345 D3000000 		.4byte	0xd3
 23562 0349 08       		.byte	0x8
 23563 034a 10       		.uleb128 0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 518


 23564 034b 120C0000 		.4byte	.LASF87
 23565 034f 08       		.byte	0x8
 23566 0350 D2       		.byte	0xd2
 23567 0351 97000000 		.4byte	0x97
 23568 0355 0C       		.byte	0xc
 23569 0356 00       		.byte	0
 23570 0357 0E       		.uleb128 0xe
 23571 0358 7E0D0000 		.4byte	.LASF89
 23572 035c 30       		.byte	0x30
 23573 035d 08       		.byte	0x8
 23574 035e D9       		.byte	0xd9
 23575 035f AC030000 		.4byte	0x3ac
 23576 0363 0F       		.uleb128 0xf
 23577 0364 706F7300 		.ascii	"pos\000"
 23578 0368 08       		.byte	0x8
 23579 0369 DA       		.byte	0xda
 23580 036a AC030000 		.4byte	0x3ac
 23581 036e 00       		.byte	0
 23582 036f 10       		.uleb128 0x10
 23583 0370 0A070000 		.4byte	.LASF86
 23584 0374 08       		.byte	0x8
 23585 0375 DB       		.byte	0xdb
 23586 0376 D3000000 		.4byte	0xd3
 23587 037a 0C       		.byte	0xc
 23588 037b 10       		.uleb128 0x10
 23589 037c 860F0000 		.4byte	.LASF90
 23590 0380 08       		.byte	0x8
 23591 0381 DC       		.byte	0xdc
 23592 0382 D3000000 		.4byte	0xd3
 23593 0386 10       		.byte	0x10
 23594 0387 0F       		.uleb128 0xf
 23595 0388 726F7400 		.ascii	"rot\000"
 23596 038c 08       		.byte	0x8
 23597 038d DD       		.byte	0xdd
 23598 038e BC030000 		.4byte	0x3bc
 23599 0392 14       		.byte	0x14
 23600 0393 0F       		.uleb128 0xf
 23601 0394 76656C00 		.ascii	"vel\000"
 23602 0398 08       		.byte	0x8
 23603 0399 DE       		.byte	0xde
 23604 039a AC030000 		.4byte	0x3ac
 23605 039e 18       		.byte	0x18
 23606 039f 0F       		.uleb128 0xf
 23607 03a0 61636300 		.ascii	"acc\000"
 23608 03a4 08       		.byte	0x8
 23609 03a5 DF       		.byte	0xdf
 23610 03a6 AC030000 		.4byte	0x3ac
 23611 03aa 24       		.byte	0x24
 23612 03ab 00       		.byte	0
 23613 03ac 09       		.uleb128 0x9
 23614 03ad D3000000 		.4byte	0xd3
 23615 03b1 BC030000 		.4byte	0x3bc
 23616 03b5 0A       		.uleb128 0xa
 23617 03b6 18010000 		.4byte	0x118
 23618 03ba 02       		.byte	0x2
 23619 03bb 00       		.byte	0
 23620 03bc 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 519


 23621 03bd BB000000 		.4byte	0xbb
 23622 03c1 CC030000 		.4byte	0x3cc
 23623 03c5 0A       		.uleb128 0xa
 23624 03c6 18010000 		.4byte	0x118
 23625 03ca 02       		.byte	0x2
 23626 03cb 00       		.byte	0
 23627 03cc 0E       		.uleb128 0xe
 23628 03cd CF0A0000 		.4byte	.LASF91
 23629 03d1 20       		.byte	0x20
 23630 03d2 08       		.byte	0x8
 23631 03d3 E2       		.byte	0xe2
 23632 03d4 F1030000 		.4byte	0x3f1
 23633 03d8 0F       		.uleb128 0xf
 23634 03d9 656D6700 		.ascii	"emg\000"
 23635 03dd 08       		.byte	0x8
 23636 03de E3       		.byte	0xe3
 23637 03df F1030000 		.4byte	0x3f1
 23638 03e3 00       		.byte	0
 23639 03e4 10       		.uleb128 0x10
 23640 03e5 5C0A0000 		.4byte	.LASF92
 23641 03e9 08       		.byte	0x8
 23642 03ea E4       		.byte	0xe4
 23643 03eb 01040000 		.4byte	0x401
 23644 03ef 08       		.byte	0x8
 23645 03f0 00       		.byte	0
 23646 03f1 09       		.uleb128 0x9
 23647 03f2 D3000000 		.4byte	0xd3
 23648 03f6 01040000 		.4byte	0x401
 23649 03fa 0A       		.uleb128 0xa
 23650 03fb 18010000 		.4byte	0x118
 23651 03ff 01       		.byte	0x1
 23652 0400 00       		.byte	0
 23653 0401 09       		.uleb128 0x9
 23654 0402 D3000000 		.4byte	0xd3
 23655 0406 11040000 		.4byte	0x411
 23656 040a 0A       		.uleb128 0xa
 23657 040b 18010000 		.4byte	0x118
 23658 040f 05       		.byte	0x5
 23659 0410 00       		.byte	0
 23660 0411 0E       		.uleb128 0xe
 23661 0412 62000000 		.4byte	.LASF93
 23662 0416 86       		.byte	0x86
 23663 0417 08       		.byte	0x8
 23664 0418 EB       		.byte	0xeb
 23665 0419 4E040000 		.4byte	0x44e
 23666 041d 10       		.uleb128 0x10
 23667 041e 53050000 		.4byte	.LASF94
 23668 0422 08       		.byte	0x8
 23669 0423 EC       		.byte	0xec
 23670 0424 4E040000 		.4byte	0x44e
 23671 0428 00       		.byte	0
 23672 0429 10       		.uleb128 0x10
 23673 042a E70B0000 		.4byte	.LASF95
 23674 042e 08       		.byte	0x8
 23675 042f ED       		.byte	0xed
 23676 0430 C7000000 		.4byte	0xc7
 23677 0434 80       		.byte	0x80
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 520


 23678 0435 0F       		.uleb128 0xf
 23679 0436 696E6400 		.ascii	"ind\000"
 23680 043a 08       		.byte	0x8
 23681 043b EE       		.byte	0xee
 23682 043c C7000000 		.4byte	0xc7
 23683 0440 82       		.byte	0x82
 23684 0441 10       		.uleb128 0x10
 23685 0442 B1010000 		.4byte	.LASF96
 23686 0446 08       		.byte	0x8
 23687 0447 EF       		.byte	0xef
 23688 0448 97000000 		.4byte	0x97
 23689 044c 84       		.byte	0x84
 23690 044d 00       		.byte	0
 23691 044e 09       		.uleb128 0x9
 23692 044f 97000000 		.4byte	0x97
 23693 0453 5E040000 		.4byte	0x45e
 23694 0457 0A       		.uleb128 0xa
 23695 0458 18010000 		.4byte	0x118
 23696 045c 7F       		.byte	0x7f
 23697 045d 00       		.byte	0
 23698 045e 0E       		.uleb128 0xe
 23699 045f 7D020000 		.4byte	.LASF97
 23700 0463 50       		.byte	0x50
 23701 0464 08       		.byte	0x8
 23702 0465 F7       		.byte	0xf7
 23703 0466 BF040000 		.4byte	0x4bf
 23704 046a 10       		.uleb128 0x10
 23705 046b B8020000 		.4byte	.LASF98
 23706 046f 08       		.byte	0x8
 23707 0470 F8       		.byte	0xf8
 23708 0471 BF040000 		.4byte	0x4bf
 23709 0475 00       		.byte	0
 23710 0476 10       		.uleb128 0x10
 23711 0477 91010000 		.4byte	.LASF99
 23712 047b 08       		.byte	0x8
 23713 047c F9       		.byte	0xf9
 23714 047d CF040000 		.4byte	0x4cf
 23715 0481 08       		.byte	0x8
 23716 0482 10       		.uleb128 0x10
 23717 0483 9A0A0000 		.4byte	.LASF100
 23718 0487 08       		.byte	0x8
 23719 0488 FA       		.byte	0xfa
 23720 0489 DF040000 		.4byte	0x4df
 23721 048d 30       		.byte	0x30
 23722 048e 10       		.uleb128 0x10
 23723 048f 1F010000 		.4byte	.LASF101
 23724 0493 08       		.byte	0x8
 23725 0494 FB       		.byte	0xfb
 23726 0495 AF000000 		.4byte	0xaf
 23727 0499 40       		.byte	0x40
 23728 049a 10       		.uleb128 0x10
 23729 049b 1D110000 		.4byte	.LASF102
 23730 049f 08       		.byte	0x8
 23731 04a0 FC       		.byte	0xfc
 23732 04a1 AF000000 		.4byte	0xaf
 23733 04a5 44       		.byte	0x44
 23734 04a6 10       		.uleb128 0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 521


 23735 04a7 73060000 		.4byte	.LASF103
 23736 04ab 08       		.byte	0x8
 23737 04ac FD       		.byte	0xfd
 23738 04ad AF000000 		.4byte	0xaf
 23739 04b1 48       		.byte	0x48
 23740 04b2 10       		.uleb128 0x10
 23741 04b3 A6060000 		.4byte	.LASF104
 23742 04b7 08       		.byte	0x8
 23743 04b8 FE       		.byte	0xfe
 23744 04b9 AF000000 		.4byte	0xaf
 23745 04bd 4C       		.byte	0x4c
 23746 04be 00       		.byte	0
 23747 04bf 09       		.uleb128 0x9
 23748 04c0 AF000000 		.4byte	0xaf
 23749 04c4 CF040000 		.4byte	0x4cf
 23750 04c8 0A       		.uleb128 0xa
 23751 04c9 18010000 		.4byte	0x118
 23752 04cd 01       		.byte	0x1
 23753 04ce 00       		.byte	0
 23754 04cf 09       		.uleb128 0x9
 23755 04d0 AF000000 		.4byte	0xaf
 23756 04d4 DF040000 		.4byte	0x4df
 23757 04d8 0A       		.uleb128 0xa
 23758 04d9 18010000 		.4byte	0x118
 23759 04dd 09       		.byte	0x9
 23760 04de 00       		.byte	0
 23761 04df 09       		.uleb128 0x9
 23762 04e0 AF000000 		.4byte	0xaf
 23763 04e4 EF040000 		.4byte	0x4ef
 23764 04e8 0A       		.uleb128 0xa
 23765 04e9 18010000 		.4byte	0x118
 23766 04ed 03       		.byte	0x3
 23767 04ee 00       		.byte	0
 23768 04ef 11       		.uleb128 0x11
 23769 04f0 CF010000 		.4byte	.LASF105
 23770 04f4 10       		.byte	0x10
 23771 04f5 08       		.byte	0x8
 23772 04f6 0101     		.2byte	0x101
 23773 04f8 7E050000 		.4byte	0x57e
 23774 04fc 12       		.uleb128 0x12
 23775 04fd 696400   		.ascii	"id\000"
 23776 0500 08       		.byte	0x8
 23777 0501 0201     		.2byte	0x102
 23778 0503 97000000 		.4byte	0x97
 23779 0507 00       		.byte	0
 23780 0508 13       		.uleb128 0x13
 23781 0509 630E0000 		.4byte	.LASF106
 23782 050d 08       		.byte	0x8
 23783 050e 0301     		.2byte	0x103
 23784 0510 7E050000 		.4byte	0x57e
 23785 0514 01       		.byte	0x1
 23786 0515 13       		.uleb128 0x13
 23787 0516 D30E0000 		.4byte	.LASF107
 23788 051a 08       		.byte	0x8
 23789 051b 0401     		.2byte	0x104
 23790 051d 7E050000 		.4byte	0x57e
 23791 0521 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 522


 23792 0522 13       		.uleb128 0x13
 23793 0523 DE030000 		.4byte	.LASF108
 23794 0527 08       		.byte	0x8
 23795 0528 0501     		.2byte	0x105
 23796 052a 97000000 		.4byte	0x97
 23797 052e 07       		.byte	0x7
 23798 052f 13       		.uleb128 0x13
 23799 0530 39020000 		.4byte	.LASF109
 23800 0534 08       		.byte	0x8
 23801 0535 0601     		.2byte	0x106
 23802 0537 97000000 		.4byte	0x97
 23803 053b 08       		.byte	0x8
 23804 053c 13       		.uleb128 0x13
 23805 053d F5010000 		.4byte	.LASF110
 23806 0541 08       		.byte	0x8
 23807 0542 0701     		.2byte	0x107
 23808 0544 97000000 		.4byte	0x97
 23809 0548 09       		.byte	0x9
 23810 0549 13       		.uleb128 0x13
 23811 054a 18100000 		.4byte	.LASF111
 23812 054e 08       		.byte	0x8
 23813 054f 0801     		.2byte	0x108
 23814 0551 97000000 		.4byte	0x97
 23815 0555 0A       		.byte	0xa
 23816 0556 13       		.uleb128 0x13
 23817 0557 DC0F0000 		.4byte	.LASF112
 23818 055b 08       		.byte	0x8
 23819 055c 0901     		.2byte	0x109
 23820 055e 97000000 		.4byte	0x97
 23821 0562 0B       		.byte	0xb
 23822 0563 13       		.uleb128 0x13
 23823 0564 280D0000 		.4byte	.LASF113
 23824 0568 08       		.byte	0x8
 23825 0569 0A01     		.2byte	0x10a
 23826 056b 97000000 		.4byte	0x97
 23827 056f 0C       		.byte	0xc
 23828 0570 13       		.uleb128 0x13
 23829 0571 5A020000 		.4byte	.LASF114
 23830 0575 08       		.byte	0x8
 23831 0576 0B01     		.2byte	0x10b
 23832 0578 7E050000 		.4byte	0x57e
 23833 057c 0D       		.byte	0xd
 23834 057d 00       		.byte	0
 23835 057e 09       		.uleb128 0x9
 23836 057f 97000000 		.4byte	0x97
 23837 0583 8E050000 		.4byte	0x58e
 23838 0587 0A       		.uleb128 0xa
 23839 0588 18010000 		.4byte	0x118
 23840 058c 02       		.byte	0x2
 23841 058d 00       		.byte	0
 23842 058e 11       		.uleb128 0x11
 23843 058f 2D090000 		.4byte	.LASF115
 23844 0593 70       		.byte	0x70
 23845 0594 08       		.byte	0x8
 23846 0595 0E01     		.2byte	0x10e
 23847 0597 08070000 		.4byte	0x708
 23848 059b 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 523


 23849 059c 6B5F7000 		.ascii	"k_p\000"
 23850 05a0 08       		.byte	0x8
 23851 05a1 0F01     		.2byte	0x10f
 23852 05a3 D3000000 		.4byte	0xd3
 23853 05a7 00       		.byte	0
 23854 05a8 12       		.uleb128 0x12
 23855 05a9 6B5F6900 		.ascii	"k_i\000"
 23856 05ad 08       		.byte	0x8
 23857 05ae 1001     		.2byte	0x110
 23858 05b0 D3000000 		.4byte	0xd3
 23859 05b4 04       		.byte	0x4
 23860 05b5 12       		.uleb128 0x12
 23861 05b6 6B5F6400 		.ascii	"k_d\000"
 23862 05ba 08       		.byte	0x8
 23863 05bb 1101     		.2byte	0x111
 23864 05bd D3000000 		.4byte	0xd3
 23865 05c1 08       		.byte	0x8
 23866 05c2 13       		.uleb128 0x13
 23867 05c3 610C0000 		.4byte	.LASF116
 23868 05c7 08       		.byte	0x8
 23869 05c8 1201     		.2byte	0x112
 23870 05ca D3000000 		.4byte	0xd3
 23871 05ce 0C       		.byte	0xc
 23872 05cf 13       		.uleb128 0x13
 23873 05d0 CC040000 		.4byte	.LASF117
 23874 05d4 08       		.byte	0x8
 23875 05d5 1301     		.2byte	0x113
 23876 05d7 D3000000 		.4byte	0xd3
 23877 05db 10       		.byte	0x10
 23878 05dc 13       		.uleb128 0x13
 23879 05dd B1040000 		.4byte	.LASF118
 23880 05e1 08       		.byte	0x8
 23881 05e2 1401     		.2byte	0x114
 23882 05e4 D3000000 		.4byte	0xd3
 23883 05e8 14       		.byte	0x14
 23884 05e9 13       		.uleb128 0x13
 23885 05ea 7F0F0000 		.4byte	.LASF119
 23886 05ee 08       		.byte	0x8
 23887 05ef 1501     		.2byte	0x115
 23888 05f1 D3000000 		.4byte	0xd3
 23889 05f5 18       		.byte	0x18
 23890 05f6 13       		.uleb128 0x13
 23891 05f7 3D050000 		.4byte	.LASF120
 23892 05fb 08       		.byte	0x8
 23893 05fc 1601     		.2byte	0x116
 23894 05fe D3000000 		.4byte	0xd3
 23895 0602 1C       		.byte	0x1c
 23896 0603 13       		.uleb128 0x13
 23897 0604 2E0E0000 		.4byte	.LASF121
 23898 0608 08       		.byte	0x8
 23899 0609 1701     		.2byte	0x117
 23900 060b D3000000 		.4byte	0xd3
 23901 060f 20       		.byte	0x20
 23902 0610 13       		.uleb128 0x13
 23903 0611 5A050000 		.4byte	.LASF122
 23904 0615 08       		.byte	0x8
 23905 0616 1801     		.2byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 524


 23906 0618 D3000000 		.4byte	0xd3
 23907 061c 24       		.byte	0x24
 23908 061d 13       		.uleb128 0x13
 23909 061e F5050000 		.4byte	.LASF123
 23910 0622 08       		.byte	0x8
 23911 0623 1901     		.2byte	0x119
 23912 0625 D3000000 		.4byte	0xd3
 23913 0629 28       		.byte	0x28
 23914 062a 13       		.uleb128 0x13
 23915 062b CA110000 		.4byte	.LASF124
 23916 062f 08       		.byte	0x8
 23917 0630 1A01     		.2byte	0x11a
 23918 0632 D3000000 		.4byte	0xd3
 23919 0636 2C       		.byte	0x2c
 23920 0637 13       		.uleb128 0x13
 23921 0638 C2060000 		.4byte	.LASF125
 23922 063c 08       		.byte	0x8
 23923 063d 1B01     		.2byte	0x11b
 23924 063f 97000000 		.4byte	0x97
 23925 0643 30       		.byte	0x30
 23926 0644 13       		.uleb128 0x13
 23927 0645 680F0000 		.4byte	.LASF126
 23928 0649 08       		.byte	0x8
 23929 064a 1C01     		.2byte	0x11c
 23930 064c 97000000 		.4byte	0x97
 23931 0650 31       		.byte	0x31
 23932 0651 13       		.uleb128 0x13
 23933 0652 810C0000 		.4byte	.LASF127
 23934 0656 08       		.byte	0x8
 23935 0657 1D01     		.2byte	0x11d
 23936 0659 97000000 		.4byte	0x97
 23937 065d 32       		.byte	0x32
 23938 065e 13       		.uleb128 0x13
 23939 065f D2100000 		.4byte	.LASF128
 23940 0663 08       		.byte	0x8
 23941 0664 1E01     		.2byte	0x11e
 23942 0666 97000000 		.4byte	0x97
 23943 066a 33       		.byte	0x33
 23944 066b 13       		.uleb128 0x13
 23945 066c D3000000 		.4byte	.LASF129
 23946 0670 08       		.byte	0x8
 23947 0671 1F01     		.2byte	0x11f
 23948 0673 D3000000 		.4byte	0xd3
 23949 0677 34       		.byte	0x34
 23950 0678 13       		.uleb128 0x13
 23951 0679 EB040000 		.4byte	.LASF130
 23952 067d 08       		.byte	0x8
 23953 067e 2001     		.2byte	0x120
 23954 0680 D3000000 		.4byte	0xd3
 23955 0684 38       		.byte	0x38
 23956 0685 13       		.uleb128 0x13
 23957 0686 E0080000 		.4byte	.LASF131
 23958 068a 08       		.byte	0x8
 23959 068b 2101     		.2byte	0x121
 23960 068d D3000000 		.4byte	0xd3
 23961 0691 3C       		.byte	0x3c
 23962 0692 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 525


 23963 0693 64040000 		.4byte	.LASF132
 23964 0697 08       		.byte	0x8
 23965 0698 2201     		.2byte	0x122
 23966 069a D3000000 		.4byte	0xd3
 23967 069e 40       		.byte	0x40
 23968 069f 13       		.uleb128 0x13
 23969 06a0 13010000 		.4byte	.LASF133
 23970 06a4 08       		.byte	0x8
 23971 06a5 2301     		.2byte	0x123
 23972 06a7 08070000 		.4byte	0x708
 23973 06ab 44       		.byte	0x44
 23974 06ac 13       		.uleb128 0x13
 23975 06ad 62110000 		.4byte	.LASF134
 23976 06b1 08       		.byte	0x8
 23977 06b2 2401     		.2byte	0x124
 23978 06b4 C7000000 		.4byte	0xc7
 23979 06b8 5C       		.byte	0x5c
 23980 06b9 13       		.uleb128 0x13
 23981 06ba 0F070000 		.4byte	.LASF135
 23982 06be 08       		.byte	0x8
 23983 06bf 2501     		.2byte	0x125
 23984 06c1 97000000 		.4byte	0x97
 23985 06c5 5E       		.byte	0x5e
 23986 06c6 13       		.uleb128 0x13
 23987 06c7 B2090000 		.4byte	.LASF136
 23988 06cb 08       		.byte	0x8
 23989 06cc 2601     		.2byte	0x126
 23990 06ce 97000000 		.4byte	0x97
 23991 06d2 5F       		.byte	0x5f
 23992 06d3 13       		.uleb128 0x13
 23993 06d4 02040000 		.4byte	.LASF137
 23994 06d8 08       		.byte	0x8
 23995 06d9 2701     		.2byte	0x127
 23996 06db 97000000 		.4byte	0x97
 23997 06df 60       		.byte	0x60
 23998 06e0 13       		.uleb128 0x13
 23999 06e1 A0040000 		.4byte	.LASF138
 24000 06e5 08       		.byte	0x8
 24001 06e6 2801     		.2byte	0x128
 24002 06e8 97000000 		.4byte	0x97
 24003 06ec 61       		.byte	0x61
 24004 06ed 13       		.uleb128 0x13
 24005 06ee BF030000 		.4byte	.LASF139
 24006 06f2 08       		.byte	0x8
 24007 06f3 2901     		.2byte	0x129
 24008 06f5 97000000 		.4byte	0x97
 24009 06f9 62       		.byte	0x62
 24010 06fa 13       		.uleb128 0x13
 24011 06fb 5A020000 		.4byte	.LASF114
 24012 06ff 08       		.byte	0x8
 24013 0700 2A01     		.2byte	0x12a
 24014 0702 18070000 		.4byte	0x718
 24015 0706 63       		.byte	0x63
 24016 0707 00       		.byte	0
 24017 0708 09       		.uleb128 0x9
 24018 0709 EB000000 		.4byte	0xeb
 24019 070d 18070000 		.4byte	0x718
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 526


 24020 0711 0A       		.uleb128 0xa
 24021 0712 18010000 		.4byte	0x118
 24022 0716 05       		.byte	0x5
 24023 0717 00       		.byte	0
 24024 0718 09       		.uleb128 0x9
 24025 0719 97000000 		.4byte	0x97
 24026 071d 28070000 		.4byte	0x728
 24027 0721 0A       		.uleb128 0xa
 24028 0722 18010000 		.4byte	0x118
 24029 0726 0C       		.byte	0xc
 24030 0727 00       		.byte	0
 24031 0728 11       		.uleb128 0x11
 24032 0729 80100000 		.4byte	.LASF140
 24033 072d 30       		.byte	0x30
 24034 072e 08       		.byte	0x8
 24035 072f 2D01     		.2byte	0x12d
 24036 0731 AB070000 		.4byte	0x7ab
 24037 0735 13       		.uleb128 0x13
 24038 0736 C2080000 		.4byte	.LASF141
 24039 073a 08       		.byte	0x8
 24040 073b 2E01     		.2byte	0x12e
 24041 073d AB070000 		.4byte	0x7ab
 24042 0741 00       		.byte	0
 24043 0742 12       		.uleb128 0x12
 24044 0743 72657300 		.ascii	"res\000"
 24045 0747 08       		.byte	0x8
 24046 0748 2F01     		.2byte	0x12f
 24047 074a 7E050000 		.4byte	0x57e
 24048 074e 05       		.byte	0x5
 24049 074f 13       		.uleb128 0x13
 24050 0750 D1060000 		.4byte	.LASF142
 24051 0754 08       		.byte	0x8
 24052 0755 3001     		.2byte	0x130
 24053 0757 AC030000 		.4byte	0x3ac
 24054 075b 08       		.byte	0x8
 24055 075c 13       		.uleb128 0x13
 24056 075d C5040000 		.4byte	.LASF143
 24057 0761 08       		.byte	0x8
 24058 0762 3101     		.2byte	0x131
 24059 0764 BB070000 		.4byte	0x7bb
 24060 0768 14       		.byte	0x14
 24061 0769 13       		.uleb128 0x13
 24062 076a 440B0000 		.4byte	.LASF144
 24063 076e 08       		.byte	0x8
 24064 076f 3201     		.2byte	0x132
 24065 0771 97000000 		.4byte	0x97
 24066 0775 20       		.byte	0x20
 24067 0776 13       		.uleb128 0x13
 24068 0777 B7010000 		.4byte	.LASF145
 24069 077b 08       		.byte	0x8
 24070 077c 3301     		.2byte	0x133
 24071 077e 7E050000 		.4byte	0x57e
 24072 0782 21       		.byte	0x21
 24073 0783 13       		.uleb128 0x13
 24074 0784 F70A0000 		.4byte	.LASF146
 24075 0788 08       		.byte	0x8
 24076 0789 3401     		.2byte	0x134
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 527


 24077 078b BB000000 		.4byte	0xbb
 24078 078f 24       		.byte	0x24
 24079 0790 13       		.uleb128 0x13
 24080 0791 4F0D0000 		.4byte	.LASF147
 24081 0795 08       		.byte	0x8
 24082 0796 3501     		.2byte	0x135
 24083 0798 BC030000 		.4byte	0x3bc
 24084 079c 25       		.byte	0x25
 24085 079d 13       		.uleb128 0x13
 24086 079e 5A020000 		.4byte	.LASF114
 24087 07a2 08       		.byte	0x8
 24088 07a3 3601     		.2byte	0x136
 24089 07a5 CB070000 		.4byte	0x7cb
 24090 07a9 28       		.byte	0x28
 24091 07aa 00       		.byte	0
 24092 07ab 09       		.uleb128 0x9
 24093 07ac 97000000 		.4byte	0x97
 24094 07b0 BB070000 		.4byte	0x7bb
 24095 07b4 0A       		.uleb128 0xa
 24096 07b5 18010000 		.4byte	0x118
 24097 07b9 04       		.byte	0x4
 24098 07ba 00       		.byte	0
 24099 07bb 09       		.uleb128 0x9
 24100 07bc DF000000 		.4byte	0xdf
 24101 07c0 CB070000 		.4byte	0x7cb
 24102 07c4 0A       		.uleb128 0xa
 24103 07c5 18010000 		.4byte	0x118
 24104 07c9 02       		.byte	0x2
 24105 07ca 00       		.byte	0
 24106 07cb 09       		.uleb128 0x9
 24107 07cc 97000000 		.4byte	0x97
 24108 07d0 DB070000 		.4byte	0x7db
 24109 07d4 0A       		.uleb128 0xa
 24110 07d5 18010000 		.4byte	0x118
 24111 07d9 07       		.byte	0x7
 24112 07da 00       		.byte	0
 24113 07db 11       		.uleb128 0x11
 24114 07dc 8A010000 		.4byte	.LASF148
 24115 07e0 10       		.byte	0x10
 24116 07e1 08       		.byte	0x8
 24117 07e2 3901     		.2byte	0x139
 24118 07e4 37080000 		.4byte	0x837
 24119 07e8 13       		.uleb128 0x13
 24120 07e9 7A0A0000 		.4byte	.LASF149
 24121 07ed 08       		.byte	0x8
 24122 07ee 3A01     		.2byte	0x13a
 24123 07f0 37080000 		.4byte	0x837
 24124 07f4 00       		.byte	0
 24125 07f5 13       		.uleb128 0x13
 24126 07f6 27110000 		.4byte	.LASF150
 24127 07fa 08       		.byte	0x8
 24128 07fb 3B01     		.2byte	0x13b
 24129 07fd BF040000 		.4byte	0x4bf
 24130 0801 04       		.byte	0x4
 24131 0802 13       		.uleb128 0x13
 24132 0803 F7040000 		.4byte	.LASF151
 24133 0807 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 528


 24134 0808 3C01     		.2byte	0x13c
 24135 080a 97000000 		.4byte	0x97
 24136 080e 0C       		.byte	0xc
 24137 080f 13       		.uleb128 0x13
 24138 0810 690D0000 		.4byte	.LASF152
 24139 0814 08       		.byte	0x8
 24140 0815 3D01     		.2byte	0x13d
 24141 0817 97000000 		.4byte	0x97
 24142 081b 0D       		.byte	0xd
 24143 081c 13       		.uleb128 0x13
 24144 081d 5D0F0000 		.4byte	.LASF153
 24145 0821 08       		.byte	0x8
 24146 0822 3E01     		.2byte	0x13e
 24147 0824 97000000 		.4byte	0x97
 24148 0828 0E       		.byte	0xe
 24149 0829 13       		.uleb128 0x13
 24150 082a 5A020000 		.4byte	.LASF114
 24151 082e 08       		.byte	0x8
 24152 082f 3F01     		.2byte	0x13f
 24153 0831 47080000 		.4byte	0x847
 24154 0835 0F       		.byte	0xf
 24155 0836 00       		.byte	0
 24156 0837 09       		.uleb128 0x9
 24157 0838 A3000000 		.4byte	0xa3
 24158 083c 47080000 		.4byte	0x847
 24159 0840 0A       		.uleb128 0xa
 24160 0841 18010000 		.4byte	0x118
 24161 0845 01       		.byte	0x1
 24162 0846 00       		.byte	0
 24163 0847 09       		.uleb128 0x9
 24164 0848 97000000 		.4byte	0x97
 24165 084c 57080000 		.4byte	0x857
 24166 0850 0A       		.uleb128 0xa
 24167 0851 18010000 		.4byte	0x118
 24168 0855 00       		.byte	0
 24169 0856 00       		.byte	0
 24170 0857 11       		.uleb128 0x11
 24171 0858 EE090000 		.4byte	.LASF154
 24172 085c 20       		.byte	0x20
 24173 085d 08       		.byte	0x8
 24174 085e 4201     		.2byte	0x142
 24175 0860 99080000 		.4byte	0x899
 24176 0864 13       		.uleb128 0x13
 24177 0865 08020000 		.4byte	.LASF155
 24178 0869 08       		.byte	0x8
 24179 086a 4301     		.2byte	0x143
 24180 086c 97000000 		.4byte	0x97
 24181 0870 00       		.byte	0
 24182 0871 13       		.uleb128 0x13
 24183 0872 5A0B0000 		.4byte	.LASF156
 24184 0876 08       		.byte	0x8
 24185 0877 4401     		.2byte	0x144
 24186 0879 97000000 		.4byte	0x97
 24187 087d 01       		.byte	0x1
 24188 087e 13       		.uleb128 0x13
 24189 087f 1A090000 		.4byte	.LASF157
 24190 0883 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 529


 24191 0884 4501     		.2byte	0x145
 24192 0886 99080000 		.4byte	0x899
 24193 088a 02       		.byte	0x2
 24194 088b 13       		.uleb128 0x13
 24195 088c 5A020000 		.4byte	.LASF114
 24196 0890 08       		.byte	0x8
 24197 0891 4601     		.2byte	0x146
 24198 0893 AB070000 		.4byte	0x7ab
 24199 0897 1B       		.byte	0x1b
 24200 0898 00       		.byte	0
 24201 0899 09       		.uleb128 0x9
 24202 089a 97000000 		.4byte	0x97
 24203 089e AF080000 		.4byte	0x8af
 24204 08a2 0A       		.uleb128 0xa
 24205 08a3 18010000 		.4byte	0x118
 24206 08a7 04       		.byte	0x4
 24207 08a8 0A       		.uleb128 0xa
 24208 08a9 18010000 		.4byte	0x118
 24209 08ad 04       		.byte	0x4
 24210 08ae 00       		.byte	0
 24211 08af 11       		.uleb128 0x11
 24212 08b0 5C0D0000 		.4byte	.LASF158
 24213 08b4 20       		.byte	0x20
 24214 08b5 08       		.byte	0x8
 24215 08b6 4901     		.2byte	0x149
 24216 08b8 FE080000 		.4byte	0x8fe
 24217 08bc 13       		.uleb128 0x13
 24218 08bd 3A0B0000 		.4byte	.LASF159
 24219 08c1 08       		.byte	0x8
 24220 08c2 4A01     		.2byte	0x14a
 24221 08c4 FE080000 		.4byte	0x8fe
 24222 08c8 00       		.byte	0
 24223 08c9 13       		.uleb128 0x13
 24224 08ca 4A0F0000 		.4byte	.LASF160
 24225 08ce 08       		.byte	0x8
 24226 08cf 4B01     		.2byte	0x14b
 24227 08d1 97000000 		.4byte	0x97
 24228 08d5 06       		.byte	0x6
 24229 08d6 13       		.uleb128 0x13
 24230 08d7 9F0F0000 		.4byte	.LASF161
 24231 08db 08       		.byte	0x8
 24232 08dc 4C01     		.2byte	0x14c
 24233 08de 97000000 		.4byte	0x97
 24234 08e2 07       		.byte	0x7
 24235 08e3 13       		.uleb128 0x13
 24236 08e4 1C050000 		.4byte	.LASF162
 24237 08e8 08       		.byte	0x8
 24238 08e9 4D01     		.2byte	0x14d
 24239 08eb 0E090000 		.4byte	0x90e
 24240 08ef 08       		.byte	0x8
 24241 08f0 13       		.uleb128 0x13
 24242 08f1 5A020000 		.4byte	.LASF114
 24243 08f5 08       		.byte	0x8
 24244 08f6 4E01     		.2byte	0x14e
 24245 08f8 0E090000 		.4byte	0x90e
 24246 08fc 14       		.byte	0x14
 24247 08fd 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 530


 24248 08fe 09       		.uleb128 0x9
 24249 08ff 97000000 		.4byte	0x97
 24250 0903 0E090000 		.4byte	0x90e
 24251 0907 0A       		.uleb128 0xa
 24252 0908 18010000 		.4byte	0x118
 24253 090c 05       		.byte	0x5
 24254 090d 00       		.byte	0
 24255 090e 09       		.uleb128 0x9
 24256 090f 97000000 		.4byte	0x97
 24257 0913 1E090000 		.4byte	0x91e
 24258 0917 0A       		.uleb128 0xa
 24259 0918 18010000 		.4byte	0x118
 24260 091c 0B       		.byte	0xb
 24261 091d 00       		.byte	0
 24262 091e 11       		.uleb128 0x11
 24263 091f 310D0000 		.4byte	.LASF163
 24264 0923 20       		.byte	0x20
 24265 0924 08       		.byte	0x8
 24266 0925 5101     		.2byte	0x151
 24267 0927 53090000 		.4byte	0x953
 24268 092b 13       		.uleb128 0x13
 24269 092c 18030000 		.4byte	.LASF164
 24270 0930 08       		.byte	0x8
 24271 0931 5201     		.2byte	0x152
 24272 0933 40010000 		.4byte	0x140
 24273 0937 00       		.byte	0
 24274 0938 13       		.uleb128 0x13
 24275 0939 48020000 		.4byte	.LASF165
 24276 093d 08       		.byte	0x8
 24277 093e 5301     		.2byte	0x153
 24278 0940 DB070000 		.4byte	0x7db
 24279 0944 08       		.byte	0x8
 24280 0945 13       		.uleb128 0x13
 24281 0946 5A020000 		.4byte	.LASF114
 24282 094a 08       		.byte	0x8
 24283 094b 5401     		.2byte	0x154
 24284 094d CB070000 		.4byte	0x7cb
 24285 0951 18       		.byte	0x18
 24286 0952 00       		.byte	0
 24287 0953 11       		.uleb128 0x11
 24288 0954 47080000 		.4byte	.LASF166
 24289 0958 10       		.byte	0x10
 24290 0959 08       		.byte	0x8
 24291 095a 5701     		.2byte	0x157
 24292 095c A2090000 		.4byte	0x9a2
 24293 0960 13       		.uleb128 0x13
 24294 0961 01070000 		.4byte	.LASF167
 24295 0965 08       		.byte	0x8
 24296 0966 5801     		.2byte	0x158
 24297 0968 D3000000 		.4byte	0xd3
 24298 096c 00       		.byte	0
 24299 096d 13       		.uleb128 0x13
 24300 096e AE110000 		.4byte	.LASF168
 24301 0972 08       		.byte	0x8
 24302 0973 5901     		.2byte	0x159
 24303 0975 D3000000 		.4byte	0xd3
 24304 0979 04       		.byte	0x4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 531


 24305 097a 13       		.uleb128 0x13
 24306 097b 01050000 		.4byte	.LASF169
 24307 097f 08       		.byte	0x8
 24308 0980 5A01     		.2byte	0x15a
 24309 0982 D3000000 		.4byte	0xd3
 24310 0986 08       		.byte	0x8
 24311 0987 13       		.uleb128 0x13
 24312 0988 DC050000 		.4byte	.LASF170
 24313 098c 08       		.byte	0x8
 24314 098d 5B01     		.2byte	0x15b
 24315 098f 97000000 		.4byte	0x97
 24316 0993 0C       		.byte	0xc
 24317 0994 13       		.uleb128 0x13
 24318 0995 5A020000 		.4byte	.LASF114
 24319 0999 08       		.byte	0x8
 24320 099a 5C01     		.2byte	0x15c
 24321 099c 7E050000 		.4byte	0x57e
 24322 09a0 0D       		.byte	0xd
 24323 09a1 00       		.byte	0
 24324 09a2 14       		.uleb128 0x14
 24325 09a3 91100000 		.4byte	.LASF171
 24326 09a7 B002     		.2byte	0x2b0
 24327 09a9 08       		.byte	0x8
 24328 09aa 6101     		.2byte	0x161
 24329 09ac 520A0000 		.4byte	0xa52
 24330 09b0 13       		.uleb128 0x13
 24331 09b1 9E090000 		.4byte	.LASF172
 24332 09b5 08       		.byte	0x8
 24333 09b6 6301     		.2byte	0x163
 24334 09b8 97000000 		.4byte	0x97
 24335 09bc 00       		.byte	0
 24336 09bd 13       		.uleb128 0x13
 24337 09be 5A020000 		.4byte	.LASF114
 24338 09c2 08       		.byte	0x8
 24339 09c3 6401     		.2byte	0x164
 24340 09c5 520A0000 		.4byte	0xa52
 24341 09c9 01       		.byte	0x1
 24342 09ca 12       		.uleb128 0x12
 24343 09cb 636E7400 		.ascii	"cnt\000"
 24344 09cf 08       		.byte	0x8
 24345 09d0 6501     		.2byte	0x165
 24346 09d2 5E040000 		.4byte	0x45e
 24347 09d6 10       		.byte	0x10
 24348 09d7 13       		.uleb128 0x13
 24349 09d8 2B020000 		.4byte	.LASF173
 24350 09dc 08       		.byte	0x8
 24351 09dd 6601     		.2byte	0x166
 24352 09df 620A0000 		.4byte	0xa62
 24353 09e3 60       		.byte	0x60
 24354 09e4 12       		.uleb128 0x12
 24355 09e5 64657600 		.ascii	"dev\000"
 24356 09e9 08       		.byte	0x8
 24357 09ea 6701     		.2byte	0x167
 24358 09ec EF040000 		.4byte	0x4ef
 24359 09f0 A0       		.byte	0xa0
 24360 09f1 13       		.uleb128 0x13
 24361 09f2 3E0E0000 		.4byte	.LASF174
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 532


 24362 09f6 08       		.byte	0x8
 24363 09f7 6801     		.2byte	0x168
 24364 09f9 720A0000 		.4byte	0xa72
 24365 09fd B0       		.byte	0xb0
 24366 09fe 15       		.uleb128 0x15
 24367 09ff 656E6300 		.ascii	"enc\000"
 24368 0a03 08       		.byte	0x8
 24369 0a04 6901     		.2byte	0x169
 24370 0a06 820A0000 		.4byte	0xa82
 24371 0a0a 9001     		.2byte	0x190
 24372 0a0c 15       		.uleb128 0x15
 24373 0a0d 656D6700 		.ascii	"emg\000"
 24374 0a11 08       		.byte	0x8
 24375 0a12 6A01     		.2byte	0x16a
 24376 0a14 DB070000 		.4byte	0x7db
 24377 0a18 F001     		.2byte	0x1f0
 24378 0a1a 15       		.uleb128 0x15
 24379 0a1b 696D7500 		.ascii	"imu\000"
 24380 0a1f 08       		.byte	0x8
 24381 0a20 6B01     		.2byte	0x16b
 24382 0a22 57080000 		.4byte	0x857
 24383 0a26 0002     		.2byte	0x200
 24384 0a28 15       		.uleb128 0x15
 24385 0a29 65787000 		.ascii	"exp\000"
 24386 0a2d 08       		.byte	0x8
 24387 0a2e 6C01     		.2byte	0x16c
 24388 0a30 AF080000 		.4byte	0x8af
 24389 0a34 2002     		.2byte	0x220
 24390 0a36 16       		.uleb128 0x16
 24391 0a37 50000000 		.4byte	.LASF175
 24392 0a3b 08       		.byte	0x8
 24393 0a3c 6D01     		.2byte	0x16d
 24394 0a3e 920A0000 		.4byte	0xa92
 24395 0a42 4002     		.2byte	0x240
 24396 0a44 15       		.uleb128 0x15
 24397 0a45 534800   		.ascii	"SH\000"
 24398 0a48 08       		.byte	0x8
 24399 0a49 6F01     		.2byte	0x16f
 24400 0a4b 53090000 		.4byte	0x953
 24401 0a4f A002     		.2byte	0x2a0
 24402 0a51 00       		.byte	0
 24403 0a52 09       		.uleb128 0x9
 24404 0a53 97000000 		.4byte	0x97
 24405 0a57 620A0000 		.4byte	0xa62
 24406 0a5b 0A       		.uleb128 0xa
 24407 0a5c 18010000 		.4byte	0x118
 24408 0a60 0E       		.byte	0xe
 24409 0a61 00       		.byte	0
 24410 0a62 09       		.uleb128 0x9
 24411 0a63 97000000 		.4byte	0x97
 24412 0a67 720A0000 		.4byte	0xa72
 24413 0a6b 0A       		.uleb128 0xa
 24414 0a6c 18010000 		.4byte	0x118
 24415 0a70 3F       		.byte	0x3f
 24416 0a71 00       		.byte	0
 24417 0a72 09       		.uleb128 0x9
 24418 0a73 8E050000 		.4byte	0x58e
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 533


 24419 0a77 820A0000 		.4byte	0xa82
 24420 0a7b 0A       		.uleb128 0xa
 24421 0a7c 18010000 		.4byte	0x118
 24422 0a80 01       		.byte	0x1
 24423 0a81 00       		.byte	0
 24424 0a82 09       		.uleb128 0x9
 24425 0a83 28070000 		.4byte	0x728
 24426 0a87 920A0000 		.4byte	0xa92
 24427 0a8b 0A       		.uleb128 0xa
 24428 0a8c 18010000 		.4byte	0x118
 24429 0a90 01       		.byte	0x1
 24430 0a91 00       		.byte	0
 24431 0a92 09       		.uleb128 0x9
 24432 0a93 1E090000 		.4byte	0x91e
 24433 0a97 A20A0000 		.4byte	0xaa2
 24434 0a9b 0A       		.uleb128 0xa
 24435 0a9c 18010000 		.4byte	0x118
 24436 0aa0 02       		.byte	0x2
 24437 0aa1 00       		.byte	0
 24438 0aa2 11       		.uleb128 0x11
 24439 0aa3 FC0B0000 		.4byte	.LASF176
 24440 0aa7 28       		.byte	0x28
 24441 0aa8 08       		.byte	0x8
 24442 0aa9 7A01     		.2byte	0x17a
 24443 0aab FE0A0000 		.4byte	0xafe
 24444 0aaf 13       		.uleb128 0x13
 24445 0ab0 35040000 		.4byte	.LASF177
 24446 0ab4 08       		.byte	0x8
 24447 0ab5 7B01     		.2byte	0x17b
 24448 0ab7 97000000 		.4byte	0x97
 24449 0abb 00       		.byte	0
 24450 0abc 13       		.uleb128 0x13
 24451 0abd 67020000 		.4byte	.LASF178
 24452 0ac1 08       		.byte	0x8
 24453 0ac2 7C01     		.2byte	0x17c
 24454 0ac4 FE0A0000 		.4byte	0xafe
 24455 0ac8 02       		.byte	0x2
 24456 0ac9 13       		.uleb128 0x13
 24457 0aca 2F0B0000 		.4byte	.LASF179
 24458 0ace 08       		.byte	0x8
 24459 0acf 7D01     		.2byte	0x17d
 24460 0ad1 FE0A0000 		.4byte	0xafe
 24461 0ad5 08       		.byte	0x8
 24462 0ad6 13       		.uleb128 0x13
 24463 0ad7 080C0000 		.4byte	.LASF180
 24464 0adb 08       		.byte	0x8
 24465 0adc 7E01     		.2byte	0x17e
 24466 0ade FE0A0000 		.4byte	0xafe
 24467 0ae2 0E       		.byte	0xe
 24468 0ae3 13       		.uleb128 0x13
 24469 0ae4 E8060000 		.4byte	.LASF181
 24470 0ae8 08       		.byte	0x8
 24471 0ae9 7F01     		.2byte	0x17f
 24472 0aeb 0E0B0000 		.4byte	0xb0e
 24473 0aef 14       		.byte	0x14
 24474 0af0 13       		.uleb128 0x13
 24475 0af1 9F010000 		.4byte	.LASF182
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 534


 24476 0af5 08       		.byte	0x8
 24477 0af6 8001     		.2byte	0x180
 24478 0af8 C7000000 		.4byte	0xc7
 24479 0afc 24       		.byte	0x24
 24480 0afd 00       		.byte	0
 24481 0afe 09       		.uleb128 0x9
 24482 0aff C7000000 		.4byte	0xc7
 24483 0b03 0E0B0000 		.4byte	0xb0e
 24484 0b07 0A       		.uleb128 0xa
 24485 0b08 18010000 		.4byte	0x118
 24486 0b0c 02       		.byte	0x2
 24487 0b0d 00       		.byte	0
 24488 0b0e 09       		.uleb128 0x9
 24489 0b0f EB000000 		.4byte	0xeb
 24490 0b13 1E0B0000 		.4byte	0xb1e
 24491 0b17 0A       		.uleb128 0xa
 24492 0b18 18010000 		.4byte	0x118
 24493 0b1c 03       		.byte	0x3
 24494 0b1d 00       		.byte	0
 24495 0b1e 11       		.uleb128 0x11
 24496 0b1f 29030000 		.4byte	.LASF183
 24497 0b23 06       		.byte	0x6
 24498 0b24 08       		.byte	0x8
 24499 0b25 9001     		.2byte	0x190
 24500 0b27 600B0000 		.4byte	0xb60
 24501 0b2b 13       		.uleb128 0x13
 24502 0b2c 59060000 		.4byte	.LASF184
 24503 0b30 08       		.byte	0x8
 24504 0b31 9101     		.2byte	0x191
 24505 0b33 97000000 		.4byte	0x97
 24506 0b37 00       		.byte	0
 24507 0b38 13       		.uleb128 0x13
 24508 0b39 D3110000 		.4byte	.LASF185
 24509 0b3d 08       		.byte	0x8
 24510 0b3e 9201     		.2byte	0x192
 24511 0b40 97000000 		.4byte	0x97
 24512 0b44 01       		.byte	0x1
 24513 0b45 13       		.uleb128 0x13
 24514 0b46 78050000 		.4byte	.LASF186
 24515 0b4a 08       		.byte	0x8
 24516 0b4b 9301     		.2byte	0x193
 24517 0b4d C7000000 		.4byte	0xc7
 24518 0b51 02       		.byte	0x2
 24519 0b52 13       		.uleb128 0x13
 24520 0b53 D4080000 		.4byte	.LASF187
 24521 0b57 08       		.byte	0x8
 24522 0b58 9401     		.2byte	0x194
 24523 0b5a C7000000 		.4byte	0xc7
 24524 0b5e 04       		.byte	0x4
 24525 0b5f 00       		.byte	0
 24526 0b60 17       		.uleb128 0x17
 24527 0b61 070D0000 		.4byte	.LASF339
 24528 0b65 02       		.byte	0x2
 24529 0b66 1403     		.2byte	0x314
 24530 0b68 8C000000 		.4byte	0x8c
 24531 0b6c 03       		.byte	0x3
 24532 0b6d 8A0B0000 		.4byte	0xb8a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 535


 24533 0b71 18       		.uleb128 0x18
 24534 0b72 2F040000 		.4byte	.LASF267
 24535 0b76 02       		.byte	0x2
 24536 0b77 1403     		.2byte	0x314
 24537 0b79 8C000000 		.4byte	0x8c
 24538 0b7d 19       		.uleb128 0x19
 24539 0b7e AA010000 		.4byte	.LASF340
 24540 0b82 02       		.byte	0x2
 24541 0b83 1603     		.2byte	0x316
 24542 0b85 8C000000 		.4byte	0x8c
 24543 0b89 00       		.byte	0
 24544 0b8a 1A       		.uleb128 0x1a
 24545 0b8b 0C0E0000 		.4byte	.LASF188
 24546 0b8f 01       		.byte	0x1
 24547 0b90 3D       		.byte	0x3d
 24548 0b91 00000000 		.4byte	.LFB64
 24549 0b95 DC040000 		.4byte	.LFE64-.LFB64
 24550 0b99 01       		.uleb128 0x1
 24551 0b9a 9C       		.byte	0x9c
 24552 0b9b 340C0000 		.4byte	0xc34
 24553 0b9f 1B       		.uleb128 0x1b
 24554 0ba0 7E050000 		.4byte	.LASF190
 24555 0ba4 01       		.byte	0x1
 24556 0ba5 3F       		.byte	0x3f
 24557 0ba6 97000000 		.4byte	0x97
 24558 0baa 02       		.uleb128 0x2
 24559 0bab 91       		.byte	0x91
 24560 0bac 77       		.sleb128 -9
 24561 0bad 1C       		.uleb128 0x1c
 24562 0bae 600B0000 		.4byte	0xb60
 24563 0bb2 36030000 		.4byte	.LBB8
 24564 0bb6 08000000 		.4byte	.LBE8-.LBB8
 24565 0bba 01       		.byte	0x1
 24566 0bbb 96       		.byte	0x96
 24567 0bbc DB0B0000 		.4byte	0xbdb
 24568 0bc0 1D       		.uleb128 0x1d
 24569 0bc1 710B0000 		.4byte	0xb71
 24570 0bc5 02       		.uleb128 0x2
 24571 0bc6 91       		.byte	0x91
 24572 0bc7 68       		.sleb128 -24
 24573 0bc8 1E       		.uleb128 0x1e
 24574 0bc9 36030000 		.4byte	.LBB9
 24575 0bcd 08000000 		.4byte	.LBE9-.LBB9
 24576 0bd1 1F       		.uleb128 0x1f
 24577 0bd2 7D0B0000 		.4byte	0xb7d
 24578 0bd6 02       		.uleb128 0x2
 24579 0bd7 91       		.byte	0x91
 24580 0bd8 64       		.sleb128 -28
 24581 0bd9 00       		.byte	0
 24582 0bda 00       		.byte	0
 24583 0bdb 1C       		.uleb128 0x1c
 24584 0bdc 600B0000 		.4byte	0xb60
 24585 0be0 54030000 		.4byte	.LBB10
 24586 0be4 08000000 		.4byte	.LBE10-.LBB10
 24587 0be8 01       		.byte	0x1
 24588 0be9 A2       		.byte	0xa2
 24589 0bea 090C0000 		.4byte	0xc09
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 536


 24590 0bee 1D       		.uleb128 0x1d
 24591 0bef 710B0000 		.4byte	0xb71
 24592 0bf3 02       		.uleb128 0x2
 24593 0bf4 91       		.byte	0x91
 24594 0bf5 70       		.sleb128 -16
 24595 0bf6 1E       		.uleb128 0x1e
 24596 0bf7 54030000 		.4byte	.LBB11
 24597 0bfb 08000000 		.4byte	.LBE11-.LBB11
 24598 0bff 1F       		.uleb128 0x1f
 24599 0c00 7D0B0000 		.4byte	0xb7d
 24600 0c04 02       		.uleb128 0x2
 24601 0c05 91       		.byte	0x91
 24602 0c06 60       		.sleb128 -32
 24603 0c07 00       		.byte	0
 24604 0c08 00       		.byte	0
 24605 0c09 20       		.uleb128 0x20
 24606 0c0a 600B0000 		.4byte	0xb60
 24607 0c0e 98040000 		.4byte	.LBB12
 24608 0c12 08000000 		.4byte	.LBE12-.LBB12
 24609 0c16 01       		.byte	0x1
 24610 0c17 FE       		.byte	0xfe
 24611 0c18 1D       		.uleb128 0x1d
 24612 0c19 710B0000 		.4byte	0xb71
 24613 0c1d 02       		.uleb128 0x2
 24614 0c1e 91       		.byte	0x91
 24615 0c1f 6C       		.sleb128 -20
 24616 0c20 1E       		.uleb128 0x1e
 24617 0c21 98040000 		.4byte	.LBB13
 24618 0c25 08000000 		.4byte	.LBE13-.LBB13
 24619 0c29 1F       		.uleb128 0x1f
 24620 0c2a 7D0B0000 		.4byte	0xb7d
 24621 0c2e 02       		.uleb128 0x2
 24622 0c2f 91       		.byte	0x91
 24623 0c30 5C       		.sleb128 -36
 24624 0c31 00       		.byte	0
 24625 0c32 00       		.byte	0
 24626 0c33 00       		.byte	0
 24627 0c34 21       		.uleb128 0x21
 24628 0c35 00000000 		.4byte	.LASF189
 24629 0c39 01       		.byte	0x1
 24630 0c3a 2501     		.2byte	0x125
 24631 0c3c 00000000 		.4byte	.LFB65
 24632 0c40 22000000 		.4byte	.LFE65-.LFB65
 24633 0c44 01       		.uleb128 0x1
 24634 0c45 9C       		.byte	0x9c
 24635 0c46 5B0C0000 		.4byte	0xc5b
 24636 0c4a 22       		.uleb128 0x22
 24637 0c4b B7040000 		.4byte	.LASF191
 24638 0c4f 01       		.byte	0x1
 24639 0c50 2601     		.2byte	0x126
 24640 0c52 5B0C0000 		.4byte	0xc5b
 24641 0c56 03       		.uleb128 0x3
 24642 0c57 91       		.byte	0x91
 24643 0c58 9C74     		.sleb128 -1508
 24644 0c5a 00       		.byte	0
 24645 0c5b 09       		.uleb128 0x9
 24646 0c5c F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 537


 24647 0c60 6C0C0000 		.4byte	0xc6c
 24648 0c64 23       		.uleb128 0x23
 24649 0c65 18010000 		.4byte	0x118
 24650 0c69 DB05     		.2byte	0x5db
 24651 0c6b 00       		.byte	0
 24652 0c6c 21       		.uleb128 0x21
 24653 0c6d C2100000 		.4byte	.LASF192
 24654 0c71 01       		.byte	0x1
 24655 0c72 3101     		.2byte	0x131
 24656 0c74 00000000 		.4byte	.LFB66
 24657 0c78 02010000 		.4byte	.LFE66-.LFB66
 24658 0c7c 01       		.uleb128 0x1
 24659 0c7d 9C       		.byte	0x9c
 24660 0c7e B50C0000 		.4byte	0xcb5
 24661 0c82 24       		.uleb128 0x24
 24662 0c83 3C100000 		.4byte	.LASF195
 24663 0c87 01       		.byte	0x1
 24664 0c88 3101     		.2byte	0x131
 24665 0c8a A3000000 		.4byte	0xa3
 24666 0c8e 04       		.uleb128 0x4
 24667 0c8f 91       		.byte	0x91
 24668 0c90 B6C47E   		.sleb128 -24010
 24669 0c93 22       		.uleb128 0x22
 24670 0c94 B7040000 		.4byte	.LASF191
 24671 0c98 01       		.byte	0x1
 24672 0c99 3201     		.2byte	0x132
 24673 0c9b B50C0000 		.4byte	0xcb5
 24674 0c9f 03       		.uleb128 0x3
 24675 0ca0 91       		.byte	0x91
 24676 0ca1 D860     		.sleb128 -4008
 24677 0ca3 22       		.uleb128 0x22
 24678 0ca4 B6060000 		.4byte	.LASF193
 24679 0ca8 01       		.byte	0x1
 24680 0ca9 3301     		.2byte	0x133
 24681 0cab C60C0000 		.4byte	0xcc6
 24682 0caf 04       		.uleb128 0x4
 24683 0cb0 91       		.byte	0x91
 24684 0cb1 B8C47E   		.sleb128 -24008
 24685 0cb4 00       		.byte	0
 24686 0cb5 09       		.uleb128 0x9
 24687 0cb6 F9000000 		.4byte	0xf9
 24688 0cba C60C0000 		.4byte	0xcc6
 24689 0cbe 23       		.uleb128 0x23
 24690 0cbf 18010000 		.4byte	0x118
 24691 0cc3 9F0F     		.2byte	0xf9f
 24692 0cc5 00       		.byte	0
 24693 0cc6 09       		.uleb128 0x9
 24694 0cc7 F9000000 		.4byte	0xf9
 24695 0ccb D70C0000 		.4byte	0xcd7
 24696 0ccf 23       		.uleb128 0x23
 24697 0cd0 18010000 		.4byte	0x118
 24698 0cd4 1F4E     		.2byte	0x4e1f
 24699 0cd6 00       		.byte	0
 24700 0cd7 21       		.uleb128 0x21
 24701 0cd8 6F010000 		.4byte	.LASF194
 24702 0cdc 01       		.byte	0x1
 24703 0cdd 5601     		.2byte	0x156
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 538


 24704 0cdf 00000000 		.4byte	.LFB67
 24705 0ce3 08200000 		.4byte	.LFE67-.LFB67
 24706 0ce7 01       		.uleb128 0x1
 24707 0ce8 9C       		.byte	0x9c
 24708 0ce9 7B0E0000 		.4byte	0xe7b
 24709 0ced 24       		.uleb128 0x24
 24710 0cee DB0A0000 		.4byte	.LASF196
 24711 0cf2 01       		.byte	0x1
 24712 0cf3 5601     		.2byte	0x156
 24713 0cf5 7B0E0000 		.4byte	0xe7b
 24714 0cf9 03       		.uleb128 0x3
 24715 0cfa 91       		.byte	0x91
 24716 0cfb A467     		.sleb128 -3164
 24717 0cfd 24       		.uleb128 0x24
 24718 0cfe 9B100000 		.4byte	.LASF197
 24719 0d02 01       		.byte	0x1
 24720 0d03 5601     		.2byte	0x156
 24721 0d05 810E0000 		.4byte	0xe81
 24722 0d09 03       		.uleb128 0x3
 24723 0d0a 91       		.byte	0x91
 24724 0d0b A067     		.sleb128 -3168
 24725 0d0d 24       		.uleb128 0x24
 24726 0d0e 73020000 		.4byte	.LASF198
 24727 0d12 01       		.byte	0x1
 24728 0d13 5701     		.2byte	0x157
 24729 0d15 810E0000 		.4byte	0xe81
 24730 0d19 03       		.uleb128 0x3
 24731 0d1a 91       		.byte	0x91
 24732 0d1b 9C67     		.sleb128 -3172
 24733 0d1d 24       		.uleb128 0x24
 24734 0d1e 470A0000 		.4byte	.LASF199
 24735 0d22 01       		.byte	0x1
 24736 0d23 5701     		.2byte	0x157
 24737 0d25 810E0000 		.4byte	0xe81
 24738 0d29 03       		.uleb128 0x3
 24739 0d2a 91       		.byte	0x91
 24740 0d2b 9867     		.sleb128 -3176
 24741 0d2d 24       		.uleb128 0x24
 24742 0d2e 05100000 		.4byte	.LASF200
 24743 0d32 01       		.byte	0x1
 24744 0d33 5801     		.2byte	0x158
 24745 0d35 810E0000 		.4byte	0xe81
 24746 0d39 02       		.uleb128 0x2
 24747 0d3a 91       		.byte	0x91
 24748 0d3b 00       		.sleb128 0
 24749 0d3c 24       		.uleb128 0x24
 24750 0d3d 4E060000 		.4byte	.LASF201
 24751 0d41 01       		.byte	0x1
 24752 0d42 5801     		.2byte	0x158
 24753 0d44 870E0000 		.4byte	0xe87
 24754 0d48 02       		.uleb128 0x2
 24755 0d49 91       		.byte	0x91
 24756 0d4a 04       		.sleb128 4
 24757 0d4b 24       		.uleb128 0x24
 24758 0d4c 03090000 		.4byte	.LASF202
 24759 0d50 01       		.byte	0x1
 24760 0d51 5901     		.2byte	0x159
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 539


 24761 0d53 810E0000 		.4byte	0xe81
 24762 0d57 02       		.uleb128 0x2
 24763 0d58 91       		.byte	0x91
 24764 0d59 08       		.sleb128 8
 24765 0d5a 24       		.uleb128 0x24
 24766 0d5b C8060000 		.4byte	.LASF203
 24767 0d5f 01       		.byte	0x1
 24768 0d60 5901     		.2byte	0x159
 24769 0d62 870E0000 		.4byte	0xe87
 24770 0d66 02       		.uleb128 0x2
 24771 0d67 91       		.byte	0x91
 24772 0d68 0C       		.sleb128 12
 24773 0d69 22       		.uleb128 0x22
 24774 0d6a 0A050000 		.4byte	.LASF204
 24775 0d6e 01       		.byte	0x1
 24776 0d6f 5C01     		.2byte	0x15c
 24777 0d71 8D0E0000 		.4byte	0xe8d
 24778 0d75 03       		.uleb128 0x3
 24779 0d76 91       		.byte	0x91
 24780 0d77 F067     		.sleb128 -3088
 24781 0d79 22       		.uleb128 0x22
 24782 0d7a B0000000 		.4byte	.LASF205
 24783 0d7e 01       		.byte	0x1
 24784 0d7f 5D01     		.2byte	0x15d
 24785 0d81 A3000000 		.4byte	0xa3
 24786 0d85 02       		.uleb128 0x2
 24787 0d86 91       		.byte	0x91
 24788 0d87 68       		.sleb128 -24
 24789 0d88 25       		.uleb128 0x25
 24790 0d89 6900     		.ascii	"i\000"
 24791 0d8b 01       		.byte	0x1
 24792 0d8c 6001     		.2byte	0x160
 24793 0d8e 97000000 		.4byte	0x97
 24794 0d92 02       		.uleb128 0x2
 24795 0d93 91       		.byte	0x91
 24796 0d94 6F       		.sleb128 -17
 24797 0d95 25       		.uleb128 0x25
 24798 0d96 6A00     		.ascii	"j\000"
 24799 0d98 01       		.byte	0x1
 24800 0d99 6001     		.2byte	0x160
 24801 0d9b 97000000 		.4byte	0x97
 24802 0d9f 02       		.uleb128 0x2
 24803 0da0 91       		.byte	0x91
 24804 0da1 6E       		.sleb128 -18
 24805 0da2 25       		.uleb128 0x25
 24806 0da3 69647800 		.ascii	"idx\000"
 24807 0da7 01       		.byte	0x1
 24808 0da8 6101     		.2byte	0x161
 24809 0daa 97000000 		.4byte	0x97
 24810 0dae 02       		.uleb128 0x2
 24811 0daf 91       		.byte	0x91
 24812 0db0 6D       		.sleb128 -19
 24813 0db1 22       		.uleb128 0x22
 24814 0db2 350E0000 		.4byte	.LASF206
 24815 0db6 01       		.byte	0x1
 24816 0db7 6201     		.2byte	0x162
 24817 0db9 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 540


 24818 0dbd 02       		.uleb128 0x2
 24819 0dbe 91       		.byte	0x91
 24820 0dbf 6C       		.sleb128 -20
 24821 0dc0 25       		.uleb128 0x25
 24822 0dc1 736F6400 		.ascii	"sod\000"
 24823 0dc5 01       		.byte	0x1
 24824 0dc6 6301     		.2byte	0x163
 24825 0dc8 97000000 		.4byte	0x97
 24826 0dcc 02       		.uleb128 0x2
 24827 0dcd 91       		.byte	0x91
 24828 0dce 6B       		.sleb128 -21
 24829 0dcf 22       		.uleb128 0x22
 24830 0dd0 180A0000 		.4byte	.LASF207
 24831 0dd4 01       		.byte	0x1
 24832 0dd5 6401     		.2byte	0x164
 24833 0dd7 97000000 		.4byte	0x97
 24834 0ddb 02       		.uleb128 0x2
 24835 0ddc 91       		.byte	0x91
 24836 0ddd 6A       		.sleb128 -22
 24837 0dde 22       		.uleb128 0x22
 24838 0ddf B9110000 		.4byte	.LASF208
 24839 0de3 01       		.byte	0x1
 24840 0de4 6501     		.2byte	0x165
 24841 0de6 9E0E0000 		.4byte	0xe9e
 24842 0dea 03       		.uleb128 0x3
 24843 0deb 91       		.byte	0x91
 24844 0dec BC67     		.sleb128 -3140
 24845 0dee 22       		.uleb128 0x22
 24846 0def ED0F0000 		.4byte	.LASF209
 24847 0df3 01       		.byte	0x1
 24848 0df4 6601     		.2byte	0x166
 24849 0df6 EB000000 		.4byte	0xeb
 24850 0dfa 03       		.uleb128 0x3
 24851 0dfb 91       		.byte	0x91
 24852 0dfc B867     		.sleb128 -3144
 24853 0dfe 22       		.uleb128 0x22
 24854 0dff BD0E0000 		.4byte	.LASF210
 24855 0e03 01       		.byte	0x1
 24856 0e04 6701     		.2byte	0x167
 24857 0e06 C7000000 		.4byte	0xc7
 24858 0e0a 03       		.uleb128 0x3
 24859 0e0b 91       		.byte	0x91
 24860 0e0c B667     		.sleb128 -3146
 24861 0e0e 22       		.uleb128 0x22
 24862 0e0f 6F0A0000 		.4byte	.LASF211
 24863 0e13 01       		.byte	0x1
 24864 0e14 6801     		.2byte	0x168
 24865 0e16 A3000000 		.4byte	0xa3
 24866 0e1a 03       		.uleb128 0x3
 24867 0e1b 91       		.byte	0x91
 24868 0e1c B467     		.sleb128 -3148
 24869 0e1e 22       		.uleb128 0x22
 24870 0e1f 0E100000 		.4byte	.LASF212
 24871 0e23 01       		.byte	0x1
 24872 0e24 6901     		.2byte	0x169
 24873 0e26 D3000000 		.4byte	0xd3
 24874 0e2a 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 541


 24875 0e2b 91       		.byte	0x91
 24876 0e2c B067     		.sleb128 -3152
 24877 0e2e 22       		.uleb128 0x22
 24878 0e2f DC0B0000 		.4byte	.LASF213
 24879 0e33 01       		.byte	0x1
 24880 0e34 6A01     		.2byte	0x16a
 24881 0e36 AF000000 		.4byte	0xaf
 24882 0e3a 03       		.uleb128 0x3
 24883 0e3b 91       		.byte	0x91
 24884 0e3c AC67     		.sleb128 -3156
 24885 0e3e 22       		.uleb128 0x22
 24886 0e3f 7F0B0000 		.4byte	.LASF214
 24887 0e43 01       		.byte	0x1
 24888 0e44 6C01     		.2byte	0x16c
 24889 0e46 97000000 		.4byte	0x97
 24890 0e4a 02       		.uleb128 0x2
 24891 0e4b 91       		.byte	0x91
 24892 0e4c 67       		.sleb128 -25
 24893 0e4d 22       		.uleb128 0x22
 24894 0e4e DF000000 		.4byte	.LASF215
 24895 0e52 01       		.byte	0x1
 24896 0e53 6D01     		.2byte	0x16d
 24897 0e55 97000000 		.4byte	0x97
 24898 0e59 02       		.uleb128 0x2
 24899 0e5a 91       		.byte	0x91
 24900 0e5b 66       		.sleb128 -26
 24901 0e5c 22       		.uleb128 0x22
 24902 0e5d 36090000 		.4byte	.LASF216
 24903 0e61 01       		.byte	0x1
 24904 0e62 6F01     		.2byte	0x16f
 24905 0e64 810E0000 		.4byte	0xe81
 24906 0e68 02       		.uleb128 0x2
 24907 0e69 91       		.byte	0x91
 24908 0e6a 60       		.sleb128 -32
 24909 0e6b 22       		.uleb128 0x22
 24910 0e6c 64010000 		.4byte	.LASF217
 24911 0e70 01       		.byte	0x1
 24912 0e71 7001     		.2byte	0x170
 24913 0e73 810E0000 		.4byte	0xe81
 24914 0e77 02       		.uleb128 0x2
 24915 0e78 91       		.byte	0x91
 24916 0e79 5C       		.sleb128 -36
 24917 0e7a 00       		.byte	0
 24918 0e7b 07       		.uleb128 0x7
 24919 0e7c 04       		.byte	0x4
 24920 0e7d 810E0000 		.4byte	0xe81
 24921 0e81 07       		.uleb128 0x7
 24922 0e82 04       		.byte	0x4
 24923 0e83 97000000 		.4byte	0x97
 24924 0e87 07       		.uleb128 0x7
 24925 0e88 04       		.byte	0x4
 24926 0e89 25010000 		.4byte	0x125
 24927 0e8d 09       		.uleb128 0x9
 24928 0e8e 97000000 		.4byte	0x97
 24929 0e92 9E0E0000 		.4byte	0xe9e
 24930 0e96 23       		.uleb128 0x23
 24931 0e97 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 542


 24932 0e9b E90B     		.2byte	0xbe9
 24933 0e9d 00       		.byte	0
 24934 0e9e 09       		.uleb128 0x9
 24935 0e9f F9000000 		.4byte	0xf9
 24936 0ea3 AE0E0000 		.4byte	0xeae
 24937 0ea7 0A       		.uleb128 0xa
 24938 0ea8 18010000 		.4byte	0x118
 24939 0eac 31       		.byte	0x31
 24940 0ead 00       		.byte	0
 24941 0eae 21       		.uleb128 0x21
 24942 0eaf B00C0000 		.4byte	.LASF218
 24943 0eb3 01       		.byte	0x1
 24944 0eb4 2C03     		.2byte	0x32c
 24945 0eb6 00000000 		.4byte	.LFB68
 24946 0eba 08170000 		.4byte	.LFE68-.LFB68
 24947 0ebe 01       		.uleb128 0x1
 24948 0ebf 9C       		.byte	0x9c
 24949 0ec0 7C100000 		.4byte	0x107c
 24950 0ec4 24       		.uleb128 0x24
 24951 0ec5 D6050000 		.4byte	.LASF219
 24952 0ec9 01       		.byte	0x1
 24953 0eca 2C03     		.2byte	0x32c
 24954 0ecc A3000000 		.4byte	0xa3
 24955 0ed0 03       		.uleb128 0x3
 24956 0ed1 91       		.byte	0x91
 24957 0ed2 CE76     		.sleb128 -1202
 24958 0ed4 25       		.uleb128 0x25
 24959 0ed5 6900     		.ascii	"i\000"
 24960 0ed7 01       		.byte	0x1
 24961 0ed8 2D03     		.2byte	0x32d
 24962 0eda 97000000 		.4byte	0x97
 24963 0ede 02       		.uleb128 0x2
 24964 0edf 91       		.byte	0x91
 24965 0ee0 6F       		.sleb128 -17
 24966 0ee1 25       		.uleb128 0x25
 24967 0ee2 6A00     		.ascii	"j\000"
 24968 0ee4 01       		.byte	0x1
 24969 0ee5 2D03     		.2byte	0x32d
 24970 0ee7 97000000 		.4byte	0x97
 24971 0eeb 02       		.uleb128 0x2
 24972 0eec 91       		.byte	0x91
 24973 0eed 6E       		.sleb128 -18
 24974 0eee 25       		.uleb128 0x25
 24975 0eef 736F6400 		.ascii	"sod\000"
 24976 0ef3 01       		.byte	0x1
 24977 0ef4 2E03     		.2byte	0x32e
 24978 0ef6 97000000 		.4byte	0x97
 24979 0efa 02       		.uleb128 0x2
 24980 0efb 91       		.byte	0x91
 24981 0efc 6D       		.sleb128 -19
 24982 0efd 22       		.uleb128 0x22
 24983 0efe 23090000 		.4byte	.LASF220
 24984 0f02 01       		.byte	0x1
 24985 0f03 2F03     		.2byte	0x32f
 24986 0f05 97000000 		.4byte	0x97
 24987 0f09 02       		.uleb128 0x2
 24988 0f0a 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 543


 24989 0f0b 62       		.sleb128 -30
 24990 0f0c 22       		.uleb128 0x22
 24991 0f0d BD0E0000 		.4byte	.LASF210
 24992 0f11 01       		.byte	0x1
 24993 0f12 3003     		.2byte	0x330
 24994 0f14 C7000000 		.4byte	0xc7
 24995 0f18 02       		.uleb128 0x2
 24996 0f19 91       		.byte	0x91
 24997 0f1a 60       		.sleb128 -32
 24998 0f1b 22       		.uleb128 0x22
 24999 0f1c 6F0A0000 		.4byte	.LASF211
 25000 0f20 01       		.byte	0x1
 25001 0f21 3103     		.2byte	0x331
 25002 0f23 A3000000 		.4byte	0xa3
 25003 0f27 02       		.uleb128 0x2
 25004 0f28 91       		.byte	0x91
 25005 0f29 5E       		.sleb128 -34
 25006 0f2a 22       		.uleb128 0x22
 25007 0f2b 0E100000 		.4byte	.LASF212
 25008 0f2f 01       		.byte	0x1
 25009 0f30 3203     		.2byte	0x332
 25010 0f32 D3000000 		.4byte	0xd3
 25011 0f36 02       		.uleb128 0x2
 25012 0f37 91       		.byte	0x91
 25013 0f38 58       		.sleb128 -40
 25014 0f39 22       		.uleb128 0x22
 25015 0f3a DC0B0000 		.4byte	.LASF213
 25016 0f3e 01       		.byte	0x1
 25017 0f3f 3303     		.2byte	0x333
 25018 0f41 AF000000 		.4byte	0xaf
 25019 0f45 02       		.uleb128 0x2
 25020 0f46 91       		.byte	0x91
 25021 0f47 54       		.sleb128 -44
 25022 0f48 22       		.uleb128 0x22
 25023 0f49 ED0F0000 		.4byte	.LASF209
 25024 0f4d 01       		.byte	0x1
 25025 0f4e 3403     		.2byte	0x334
 25026 0f50 EB000000 		.4byte	0xeb
 25027 0f54 02       		.uleb128 0x2
 25028 0f55 91       		.byte	0x91
 25029 0f56 50       		.sleb128 -48
 25030 0f57 22       		.uleb128 0x22
 25031 0f58 7F0B0000 		.4byte	.LASF214
 25032 0f5c 01       		.byte	0x1
 25033 0f5d 3603     		.2byte	0x336
 25034 0f5f 97000000 		.4byte	0x97
 25035 0f63 02       		.uleb128 0x2
 25036 0f64 91       		.byte	0x91
 25037 0f65 65       		.sleb128 -27
 25038 0f66 22       		.uleb128 0x22
 25039 0f67 DF000000 		.4byte	.LASF215
 25040 0f6b 01       		.byte	0x1
 25041 0f6c 3703     		.2byte	0x337
 25042 0f6e 97000000 		.4byte	0x97
 25043 0f72 02       		.uleb128 0x2
 25044 0f73 91       		.byte	0x91
 25045 0f74 64       		.sleb128 -28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 544


 25046 0f75 22       		.uleb128 0x22
 25047 0f76 89020000 		.4byte	.LASF221
 25048 0f7a 01       		.byte	0x1
 25049 0f7b 3A03     		.2byte	0x33a
 25050 0f7d 7C100000 		.4byte	0x107c
 25051 0f81 02       		.uleb128 0x2
 25052 0f82 91       		.byte	0x91
 25053 0f83 68       		.sleb128 -24
 25054 0f84 22       		.uleb128 0x22
 25055 0f85 DB0A0000 		.4byte	.LASF196
 25056 0f89 01       		.byte	0x1
 25057 0f8a 4203     		.2byte	0x342
 25058 0f8c 82100000 		.4byte	0x1082
 25059 0f90 03       		.uleb128 0x3
 25060 0f91 91       		.byte	0x91
 25061 0f92 B47D     		.sleb128 -332
 25062 0f94 22       		.uleb128 0x22
 25063 0f95 9B100000 		.4byte	.LASF197
 25064 0f99 01       		.byte	0x1
 25065 0f9a 8F03     		.2byte	0x38f
 25066 0f9c 92100000 		.4byte	0x1092
 25067 0fa0 03       		.uleb128 0x3
 25068 0fa1 91       		.byte	0x91
 25069 0fa2 EC7C     		.sleb128 -404
 25070 0fa4 22       		.uleb128 0x22
 25071 0fa5 73020000 		.4byte	.LASF198
 25072 0fa9 01       		.byte	0x1
 25073 0faa A603     		.2byte	0x3a6
 25074 0fac 92100000 		.4byte	0x1092
 25075 0fb0 03       		.uleb128 0x3
 25076 0fb1 91       		.byte	0x91
 25077 0fb2 A47C     		.sleb128 -476
 25078 0fb4 22       		.uleb128 0x22
 25079 0fb5 470A0000 		.4byte	.LASF199
 25080 0fb9 01       		.byte	0x1
 25081 0fba BD03     		.2byte	0x3bd
 25082 0fbc 92100000 		.4byte	0x1092
 25083 0fc0 03       		.uleb128 0x3
 25084 0fc1 91       		.byte	0x91
 25085 0fc2 DC7B     		.sleb128 -548
 25086 0fc4 22       		.uleb128 0x22
 25087 0fc5 4E060000 		.4byte	.LASF201
 25088 0fc9 01       		.byte	0x1
 25089 0fca D403     		.2byte	0x3d4
 25090 0fcc A2100000 		.4byte	0x10a2
 25091 0fd0 03       		.uleb128 0x3
 25092 0fd1 91       		.byte	0x91
 25093 0fd2 C079     		.sleb128 -832
 25094 0fd4 22       		.uleb128 0x22
 25095 0fd5 0E110000 		.4byte	.LASF222
 25096 0fd9 01       		.byte	0x1
 25097 0fda EC03     		.2byte	0x3ec
 25098 0fdc B2100000 		.4byte	0x10b2
 25099 0fe0 03       		.uleb128 0x3
 25100 0fe1 91       		.byte	0x91
 25101 0fe2 C878     		.sleb128 -952
 25102 0fe4 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 545


 25103 0fe5 C8060000 		.4byte	.LASF203
 25104 0fe9 01       		.byte	0x1
 25105 0fea EF03     		.2byte	0x3ef
 25106 0fec C2100000 		.4byte	0x10c2
 25107 0ff0 03       		.uleb128 0x3
 25108 0ff1 91       		.byte	0x91
 25109 0ff2 A078     		.sleb128 -992
 25110 0ff4 22       		.uleb128 0x22
 25111 0ff5 05100000 		.4byte	.LASF200
 25112 0ff9 01       		.byte	0x1
 25113 0ffa FC03     		.2byte	0x3fc
 25114 0ffc 50010000 		.4byte	0x150
 25115 1000 03       		.uleb128 0x3
 25116 1001 91       		.byte	0x91
 25117 1002 8478     		.sleb128 -1020
 25118 1004 22       		.uleb128 0x22
 25119 1005 E10A0000 		.4byte	.LASF223
 25120 1009 01       		.byte	0x1
 25121 100a FD03     		.2byte	0x3fd
 25122 100c D2100000 		.4byte	0x10d2
 25123 1010 03       		.uleb128 0x3
 25124 1011 91       		.byte	0x91
 25125 1012 F877     		.sleb128 -1032
 25126 1014 22       		.uleb128 0x22
 25127 1015 310A0000 		.4byte	.LASF224
 25128 1019 01       		.byte	0x1
 25129 101a FE03     		.2byte	0x3fe
 25130 101c E2100000 		.4byte	0x10e2
 25131 1020 03       		.uleb128 0x3
 25132 1021 91       		.byte	0x91
 25133 1022 E477     		.sleb128 -1052
 25134 1024 22       		.uleb128 0x22
 25135 1025 EE0B0000 		.4byte	.LASF225
 25136 1029 01       		.byte	0x1
 25137 102a FF03     		.2byte	0x3ff
 25138 102c 97000000 		.4byte	0x97
 25139 1030 02       		.uleb128 0x2
 25140 1031 91       		.byte	0x91
 25141 1032 63       		.sleb128 -29
 25142 1033 22       		.uleb128 0x22
 25143 1034 03090000 		.4byte	.LASF202
 25144 1038 01       		.byte	0x1
 25145 1039 0804     		.2byte	0x408
 25146 103b 92100000 		.4byte	0x1092
 25147 103f 03       		.uleb128 0x3
 25148 1040 91       		.byte	0x91
 25149 1041 9C77     		.sleb128 -1124
 25150 1043 22       		.uleb128 0x22
 25151 1044 35110000 		.4byte	.LASF226
 25152 1048 01       		.byte	0x1
 25153 1049 1304     		.2byte	0x413
 25154 104b 92100000 		.4byte	0x1092
 25155 104f 03       		.uleb128 0x3
 25156 1050 91       		.byte	0x91
 25157 1051 D476     		.sleb128 -1196
 25158 1053 1E       		.uleb128 0x1e
 25159 1054 72160000 		.4byte	.LBB14
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 546


 25160 1058 86000000 		.4byte	.LBE14-.LBB14
 25161 105c 25       		.uleb128 0x25
 25162 105d 69647800 		.ascii	"idx\000"
 25163 1061 01       		.byte	0x1
 25164 1062 7C04     		.2byte	0x47c
 25165 1064 97000000 		.4byte	0x97
 25166 1068 02       		.uleb128 0x2
 25167 1069 91       		.byte	0x91
 25168 106a 67       		.sleb128 -25
 25169 106b 22       		.uleb128 0x22
 25170 106c 79040000 		.4byte	.LASF227
 25171 1070 01       		.byte	0x1
 25172 1071 7C04     		.2byte	0x47c
 25173 1073 97000000 		.4byte	0x97
 25174 1077 02       		.uleb128 0x2
 25175 1078 91       		.byte	0x91
 25176 1079 66       		.sleb128 -26
 25177 107a 00       		.byte	0
 25178 107b 00       		.byte	0
 25179 107c 07       		.uleb128 0x7
 25180 107d 04       		.byte	0x4
 25181 107e A2090000 		.4byte	0x9a2
 25182 1082 09       		.uleb128 0x9
 25183 1083 810E0000 		.4byte	0xe81
 25184 1087 92100000 		.4byte	0x1092
 25185 108b 0A       		.uleb128 0xa
 25186 108c 18010000 		.4byte	0x118
 25187 1090 46       		.byte	0x46
 25188 1091 00       		.byte	0
 25189 1092 09       		.uleb128 0x9
 25190 1093 97000000 		.4byte	0x97
 25191 1097 A2100000 		.4byte	0x10a2
 25192 109b 0A       		.uleb128 0xa
 25193 109c 18010000 		.4byte	0x118
 25194 10a0 46       		.byte	0x46
 25195 10a1 00       		.byte	0
 25196 10a2 09       		.uleb128 0x9
 25197 10a3 25010000 		.4byte	0x125
 25198 10a7 B2100000 		.4byte	0x10b2
 25199 10ab 0A       		.uleb128 0xa
 25200 10ac 18010000 		.4byte	0x118
 25201 10b0 46       		.byte	0x46
 25202 10b1 00       		.byte	0
 25203 10b2 09       		.uleb128 0x9
 25204 10b3 F9000000 		.4byte	0xf9
 25205 10b7 C2100000 		.4byte	0x10c2
 25206 10bb 0A       		.uleb128 0xa
 25207 10bc 18010000 		.4byte	0x118
 25208 10c0 75       		.byte	0x75
 25209 10c1 00       		.byte	0
 25210 10c2 09       		.uleb128 0x9
 25211 10c3 25010000 		.4byte	0x125
 25212 10c7 D2100000 		.4byte	0x10d2
 25213 10cb 0A       		.uleb128 0xa
 25214 10cc 18010000 		.4byte	0x118
 25215 10d0 09       		.byte	0x9
 25216 10d1 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 547


 25217 10d2 09       		.uleb128 0x9
 25218 10d3 97000000 		.4byte	0x97
 25219 10d7 E2100000 		.4byte	0x10e2
 25220 10db 0A       		.uleb128 0xa
 25221 10dc 18010000 		.4byte	0x118
 25222 10e0 08       		.byte	0x8
 25223 10e1 00       		.byte	0
 25224 10e2 09       		.uleb128 0x9
 25225 10e3 97000000 		.4byte	0x97
 25226 10e7 F2100000 		.4byte	0x10f2
 25227 10eb 0A       		.uleb128 0xa
 25228 10ec 18010000 		.4byte	0x118
 25229 10f0 11       		.byte	0x11
 25230 10f1 00       		.byte	0
 25231 10f2 21       		.uleb128 0x21
 25232 10f3 FB020000 		.4byte	.LASF228
 25233 10f7 01       		.byte	0x1
 25234 10f8 8D04     		.2byte	0x48d
 25235 10fa 00000000 		.4byte	.LFB69
 25236 10fe 18140000 		.4byte	.LFE69-.LFB69
 25237 1102 01       		.uleb128 0x1
 25238 1103 9C       		.byte	0x9c
 25239 1104 94110000 		.4byte	0x1194
 25240 1108 24       		.uleb128 0x24
 25241 1109 D6050000 		.4byte	.LASF219
 25242 110d 01       		.byte	0x1
 25243 110e 8D04     		.2byte	0x48d
 25244 1110 A3000000 		.4byte	0xa3
 25245 1114 02       		.uleb128 0x2
 25246 1115 91       		.byte	0x91
 25247 1116 56       		.sleb128 -42
 25248 1117 25       		.uleb128 0x25
 25249 1118 6900     		.ascii	"i\000"
 25250 111a 01       		.byte	0x1
 25251 111b 8F04     		.2byte	0x48f
 25252 111d 97000000 		.4byte	0x97
 25253 1121 02       		.uleb128 0x2
 25254 1122 91       		.byte	0x91
 25255 1123 67       		.sleb128 -25
 25256 1124 25       		.uleb128 0x25
 25257 1125 6A00     		.ascii	"j\000"
 25258 1127 01       		.byte	0x1
 25259 1128 8F04     		.2byte	0x48f
 25260 112a 97000000 		.4byte	0x97
 25261 112e 02       		.uleb128 0x2
 25262 112f 91       		.byte	0x91
 25263 1130 66       		.sleb128 -26
 25264 1131 22       		.uleb128 0x22
 25265 1132 520A0000 		.4byte	.LASF229
 25266 1136 01       		.byte	0x1
 25267 1137 9004     		.2byte	0x490
 25268 1139 97000000 		.4byte	0x97
 25269 113d 02       		.uleb128 0x2
 25270 113e 91       		.byte	0x91
 25271 113f 62       		.sleb128 -30
 25272 1140 22       		.uleb128 0x22
 25273 1141 ED0F0000 		.4byte	.LASF209
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 548


 25274 1145 01       		.byte	0x1
 25275 1146 9104     		.2byte	0x491
 25276 1148 EB000000 		.4byte	0xeb
 25277 114c 02       		.uleb128 0x2
 25278 114d 91       		.byte	0x91
 25279 114e 5C       		.sleb128 -36
 25280 114f 22       		.uleb128 0x22
 25281 1150 D4020000 		.4byte	.LASF230
 25282 1154 01       		.byte	0x1
 25283 1155 9104     		.2byte	0x491
 25284 1157 EB000000 		.4byte	0xeb
 25285 115b 02       		.uleb128 0x2
 25286 115c 91       		.byte	0x91
 25287 115d 58       		.sleb128 -40
 25288 115e 22       		.uleb128 0x22
 25289 115f 7F0B0000 		.4byte	.LASF214
 25290 1163 01       		.byte	0x1
 25291 1164 9304     		.2byte	0x493
 25292 1166 97000000 		.4byte	0x97
 25293 116a 02       		.uleb128 0x2
 25294 116b 91       		.byte	0x91
 25295 116c 64       		.sleb128 -28
 25296 116d 22       		.uleb128 0x22
 25297 116e DF000000 		.4byte	.LASF215
 25298 1172 01       		.byte	0x1
 25299 1173 9404     		.2byte	0x494
 25300 1175 97000000 		.4byte	0x97
 25301 1179 02       		.uleb128 0x2
 25302 117a 91       		.byte	0x91
 25303 117b 63       		.sleb128 -29
 25304 117c 1E       		.uleb128 0x1e
 25305 117d F80A0000 		.4byte	.LBB15
 25306 1181 26000000 		.4byte	.LBE15-.LBB15
 25307 1185 25       		.uleb128 0x25
 25308 1186 6900     		.ascii	"i\000"
 25309 1188 01       		.byte	0x1
 25310 1189 3B05     		.2byte	0x53b
 25311 118b 97000000 		.4byte	0x97
 25312 118f 02       		.uleb128 0x2
 25313 1190 91       		.byte	0x91
 25314 1191 65       		.sleb128 -27
 25315 1192 00       		.byte	0
 25316 1193 00       		.byte	0
 25317 1194 21       		.uleb128 0x21
 25318 1195 53070000 		.4byte	.LASF231
 25319 1199 01       		.byte	0x1
 25320 119a D405     		.2byte	0x5d4
 25321 119c 00000000 		.4byte	.LFB70
 25322 11a0 F40D0000 		.4byte	.LFE70-.LFB70
 25323 11a4 01       		.uleb128 0x1
 25324 11a5 9C       		.byte	0x9c
 25325 11a6 23130000 		.4byte	0x1323
 25326 11aa 24       		.uleb128 0x24
 25327 11ab D6050000 		.4byte	.LASF219
 25328 11af 01       		.byte	0x1
 25329 11b0 D405     		.2byte	0x5d4
 25330 11b2 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 549


 25331 11b6 03       		.uleb128 0x3
 25332 11b7 91       		.byte	0x91
 25333 11b8 CE72     		.sleb128 -1714
 25334 11ba 22       		.uleb128 0x22
 25335 11bb 0A050000 		.4byte	.LASF204
 25336 11bf 01       		.byte	0x1
 25337 11c0 D705     		.2byte	0x5d7
 25338 11c2 23130000 		.4byte	0x1323
 25339 11c6 03       		.uleb128 0x3
 25340 11c7 91       		.byte	0x91
 25341 11c8 DC74     		.sleb128 -1444
 25342 11ca 22       		.uleb128 0x22
 25343 11cb AA0E0000 		.4byte	.LASF232
 25344 11cf 01       		.byte	0x1
 25345 11d0 DE05     		.2byte	0x5de
 25346 11d2 A3000000 		.4byte	0xa3
 25347 11d6 02       		.uleb128 0x2
 25348 11d7 91       		.byte	0x91
 25349 11d8 62       		.sleb128 -30
 25350 11d9 22       		.uleb128 0x22
 25351 11da 8D040000 		.4byte	.LASF233
 25352 11de 01       		.byte	0x1
 25353 11df DF05     		.2byte	0x5df
 25354 11e1 A3000000 		.4byte	0xa3
 25355 11e5 02       		.uleb128 0x2
 25356 11e6 91       		.byte	0x91
 25357 11e7 6E       		.sleb128 -18
 25358 11e8 22       		.uleb128 0x22
 25359 11e9 74070000 		.4byte	.LASF234
 25360 11ed 01       		.byte	0x1
 25361 11ee E005     		.2byte	0x5e0
 25362 11f0 A3000000 		.4byte	0xa3
 25363 11f4 02       		.uleb128 0x2
 25364 11f5 91       		.byte	0x91
 25365 11f6 60       		.sleb128 -32
 25366 11f7 22       		.uleb128 0x22
 25367 11f8 F3060000 		.4byte	.LASF235
 25368 11fc 01       		.byte	0x1
 25369 11fd E105     		.2byte	0x5e1
 25370 11ff A3000000 		.4byte	0xa3
 25371 1203 02       		.uleb128 0x2
 25372 1204 91       		.byte	0x91
 25373 1205 5E       		.sleb128 -34
 25374 1206 25       		.uleb128 0x25
 25375 1207 6900     		.ascii	"i\000"
 25376 1209 01       		.byte	0x1
 25377 120a E905     		.2byte	0x5e9
 25378 120c A3000000 		.4byte	0xa3
 25379 1210 02       		.uleb128 0x2
 25380 1211 91       		.byte	0x91
 25381 1212 6C       		.sleb128 -20
 25382 1213 25       		.uleb128 0x25
 25383 1214 6A00     		.ascii	"j\000"
 25384 1216 01       		.byte	0x1
 25385 1217 E905     		.2byte	0x5e9
 25386 1219 A3000000 		.4byte	0xa3
 25387 121d 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 550


 25388 121e 91       		.byte	0x91
 25389 121f 6A       		.sleb128 -22
 25390 1220 25       		.uleb128 0x25
 25391 1221 6B00     		.ascii	"k\000"
 25392 1223 01       		.byte	0x1
 25393 1224 E905     		.2byte	0x5e9
 25394 1226 A3000000 		.4byte	0xa3
 25395 122a 02       		.uleb128 0x2
 25396 122b 91       		.byte	0x91
 25397 122c 68       		.sleb128 -24
 25398 122d 25       		.uleb128 0x25
 25399 122e 6800     		.ascii	"h\000"
 25400 1230 01       		.byte	0x1
 25401 1231 E905     		.2byte	0x5e9
 25402 1233 A3000000 		.4byte	0xa3
 25403 1237 02       		.uleb128 0x2
 25404 1238 91       		.byte	0x91
 25405 1239 66       		.sleb128 -26
 25406 123a 22       		.uleb128 0x22
 25407 123b 82040000 		.4byte	.LASF236
 25408 123f 01       		.byte	0x1
 25409 1240 EA05     		.2byte	0x5ea
 25410 1242 A3000000 		.4byte	0xa3
 25411 1246 02       		.uleb128 0x2
 25412 1247 91       		.byte	0x91
 25413 1248 5C       		.sleb128 -36
 25414 1249 22       		.uleb128 0x22
 25415 124a 940B0000 		.4byte	.LASF237
 25416 124e 01       		.byte	0x1
 25417 124f ED05     		.2byte	0x5ed
 25418 1251 30010000 		.4byte	0x130
 25419 1255 03       		.uleb128 0x3
 25420 1256 91       		.byte	0x91
 25421 1257 C074     		.sleb128 -1472
 25422 1259 22       		.uleb128 0x22
 25423 125a 710E0000 		.4byte	.LASF238
 25424 125e 01       		.byte	0x1
 25425 125f EE05     		.2byte	0x5ee
 25426 1261 34130000 		.4byte	0x1334
 25427 1265 03       		.uleb128 0x3
 25428 1266 91       		.byte	0x91
 25429 1267 B474     		.sleb128 -1484
 25430 1269 22       		.uleb128 0x22
 25431 126a FE050000 		.4byte	.LASF239
 25432 126e 01       		.byte	0x1
 25433 126f EF05     		.2byte	0x5ef
 25434 1271 44130000 		.4byte	0x1344
 25435 1275 03       		.uleb128 0x3
 25436 1276 91       		.byte	0x91
 25437 1277 A074     		.sleb128 -1504
 25438 1279 22       		.uleb128 0x22
 25439 127a 09000000 		.4byte	.LASF240
 25440 127e 01       		.byte	0x1
 25441 127f F005     		.2byte	0x5f0
 25442 1281 54130000 		.4byte	0x1354
 25443 1285 03       		.uleb128 0x3
 25444 1286 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 551


 25445 1287 9074     		.sleb128 -1520
 25446 1289 22       		.uleb128 0x22
 25447 128a 670C0000 		.4byte	.LASF241
 25448 128e 01       		.byte	0x1
 25449 128f F105     		.2byte	0x5f1
 25450 1291 64130000 		.4byte	0x1364
 25451 1295 03       		.uleb128 0x3
 25452 1296 91       		.byte	0x91
 25453 1297 E473     		.sleb128 -1564
 25454 1299 22       		.uleb128 0x22
 25455 129a 3B040000 		.4byte	.LASF242
 25456 129e 01       		.byte	0x1
 25457 129f F205     		.2byte	0x5f2
 25458 12a1 30010000 		.4byte	0x130
 25459 12a5 03       		.uleb128 0x3
 25460 12a6 91       		.byte	0x91
 25461 12a7 C873     		.sleb128 -1592
 25462 12a9 22       		.uleb128 0x22
 25463 12aa 41010000 		.4byte	.LASF243
 25464 12ae 01       		.byte	0x1
 25465 12af F505     		.2byte	0x5f5
 25466 12b1 97000000 		.4byte	0x97
 25467 12b5 02       		.uleb128 0x2
 25468 12b6 91       		.byte	0x91
 25469 12b7 5B       		.sleb128 -37
 25470 12b8 22       		.uleb128 0x22
 25471 12b9 0F040000 		.4byte	.LASF244
 25472 12bd 01       		.byte	0x1
 25473 12be F605     		.2byte	0x5f6
 25474 12c0 97000000 		.4byte	0x97
 25475 12c4 02       		.uleb128 0x2
 25476 12c5 91       		.byte	0x91
 25477 12c6 5A       		.sleb128 -38
 25478 12c7 22       		.uleb128 0x22
 25479 12c8 220E0000 		.4byte	.LASF245
 25480 12cc 01       		.byte	0x1
 25481 12cd F705     		.2byte	0x5f7
 25482 12cf 97000000 		.4byte	0x97
 25483 12d3 02       		.uleb128 0x2
 25484 12d4 91       		.byte	0x91
 25485 12d5 59       		.sleb128 -39
 25486 12d6 22       		.uleb128 0x22
 25487 12d7 980E0000 		.4byte	.LASF246
 25488 12db 01       		.byte	0x1
 25489 12dc F805     		.2byte	0x5f8
 25490 12de 97000000 		.4byte	0x97
 25491 12e2 02       		.uleb128 0x2
 25492 12e3 91       		.byte	0x91
 25493 12e4 58       		.sleb128 -40
 25494 12e5 22       		.uleb128 0x22
 25495 12e6 1D040000 		.4byte	.LASF247
 25496 12ea 01       		.byte	0x1
 25497 12eb F905     		.2byte	0x5f9
 25498 12ed 97000000 		.4byte	0x97
 25499 12f1 02       		.uleb128 0x2
 25500 12f2 91       		.byte	0x91
 25501 12f3 57       		.sleb128 -41
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 552


 25502 12f4 22       		.uleb128 0x22
 25503 12f5 99000000 		.4byte	.LASF248
 25504 12f9 01       		.byte	0x1
 25505 12fa FA05     		.2byte	0x5fa
 25506 12fc 97000000 		.4byte	0x97
 25507 1300 02       		.uleb128 0x2
 25508 1301 91       		.byte	0x91
 25509 1302 65       		.sleb128 -27
 25510 1303 22       		.uleb128 0x22
 25511 1304 0E110000 		.4byte	.LASF222
 25512 1308 01       		.byte	0x1
 25513 1309 FC05     		.2byte	0x5fc
 25514 130b B2100000 		.4byte	0x10b2
 25515 130f 03       		.uleb128 0x3
 25516 1310 91       		.byte	0x91
 25517 1311 D072     		.sleb128 -1712
 25518 1313 22       		.uleb128 0x22
 25519 1314 E8020000 		.4byte	.LASF249
 25520 1318 01       		.byte	0x1
 25521 1319 FD05     		.2byte	0x5fd
 25522 131b 97000000 		.4byte	0x97
 25523 131f 02       		.uleb128 0x2
 25524 1320 91       		.byte	0x91
 25525 1321 56       		.sleb128 -42
 25526 1322 00       		.byte	0
 25527 1323 09       		.uleb128 0x9
 25528 1324 97000000 		.4byte	0x97
 25529 1328 34130000 		.4byte	0x1334
 25530 132c 23       		.uleb128 0x23
 25531 132d 18010000 		.4byte	0x118
 25532 1331 7805     		.2byte	0x578
 25533 1333 00       		.byte	0
 25534 1334 09       		.uleb128 0x9
 25535 1335 F9000000 		.4byte	0xf9
 25536 1339 44130000 		.4byte	0x1344
 25537 133d 0A       		.uleb128 0xa
 25538 133e 18010000 		.4byte	0x118
 25539 1342 0A       		.byte	0xa
 25540 1343 00       		.byte	0
 25541 1344 09       		.uleb128 0x9
 25542 1345 F9000000 		.4byte	0xf9
 25543 1349 54130000 		.4byte	0x1354
 25544 134d 0A       		.uleb128 0xa
 25545 134e 18010000 		.4byte	0x118
 25546 1352 13       		.byte	0x13
 25547 1353 00       		.byte	0
 25548 1354 09       		.uleb128 0x9
 25549 1355 F9000000 		.4byte	0xf9
 25550 1359 64130000 		.4byte	0x1364
 25551 135d 0A       		.uleb128 0xa
 25552 135e 18010000 		.4byte	0x118
 25553 1362 0F       		.byte	0xf
 25554 1363 00       		.byte	0
 25555 1364 09       		.uleb128 0x9
 25556 1365 F9000000 		.4byte	0xf9
 25557 1369 74130000 		.4byte	0x1374
 25558 136d 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 553


 25559 136e 18010000 		.4byte	0x118
 25560 1372 29       		.byte	0x29
 25561 1373 00       		.byte	0
 25562 1374 26       		.uleb128 0x26
 25563 1375 51020000 		.4byte	.LASF278
 25564 1379 01       		.byte	0x1
 25565 137a C306     		.2byte	0x6c3
 25566 137c 00000000 		.4byte	.LFB71
 25567 1380 88000000 		.4byte	.LFE71-.LFB71
 25568 1384 01       		.uleb128 0x1
 25569 1385 9C       		.byte	0x9c
 25570 1386 A5130000 		.4byte	0x13a5
 25571 138a 25       		.uleb128 0x25
 25572 138b 6900     		.ascii	"i\000"
 25573 138d 01       		.byte	0x1
 25574 138e C506     		.2byte	0x6c5
 25575 1390 97000000 		.4byte	0x97
 25576 1394 02       		.uleb128 0x2
 25577 1395 91       		.byte	0x91
 25578 1396 6F       		.sleb128 -17
 25579 1397 25       		.uleb128 0x25
 25580 1398 6A00     		.ascii	"j\000"
 25581 139a 01       		.byte	0x1
 25582 139b C506     		.2byte	0x6c5
 25583 139d 97000000 		.4byte	0x97
 25584 13a1 02       		.uleb128 0x2
 25585 13a2 91       		.byte	0x91
 25586 13a3 6E       		.sleb128 -18
 25587 13a4 00       		.byte	0
 25588 13a5 21       		.uleb128 0x21
 25589 13a6 BE000000 		.4byte	.LASF250
 25590 13aa 01       		.byte	0x1
 25591 13ab D606     		.2byte	0x6d6
 25592 13ad 00000000 		.4byte	.LFB72
 25593 13b1 581B0000 		.4byte	.LFE72-.LFB72
 25594 13b5 01       		.uleb128 0x1
 25595 13b6 9C       		.byte	0x9c
 25596 13b7 50140000 		.4byte	0x1450
 25597 13bb 24       		.uleb128 0x24
 25598 13bc 9E0B0000 		.4byte	.LASF251
 25599 13c0 01       		.byte	0x1
 25600 13c1 D606     		.2byte	0x6d6
 25601 13c3 1F010000 		.4byte	0x11f
 25602 13c7 03       		.uleb128 0x3
 25603 13c8 91       		.byte	0x91
 25604 13c9 D47E     		.sleb128 -172
 25605 13cb 25       		.uleb128 0x25
 25606 13cc 6900     		.ascii	"i\000"
 25607 13ce 01       		.byte	0x1
 25608 13cf D806     		.2byte	0x6d8
 25609 13d1 73000000 		.4byte	0x73
 25610 13d5 02       		.uleb128 0x2
 25611 13d6 91       		.byte	0x91
 25612 13d7 54       		.sleb128 -44
 25613 13d8 22       		.uleb128 0x22
 25614 13d9 89020000 		.4byte	.LASF221
 25615 13dd 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 554


 25616 13de DA06     		.2byte	0x6da
 25617 13e0 7C100000 		.4byte	0x107c
 25618 13e4 02       		.uleb128 0x2
 25619 13e5 91       		.byte	0x91
 25620 13e6 4C       		.sleb128 -52
 25621 13e7 1E       		.uleb128 0x1e
 25622 13e8 1C000000 		.4byte	.LBB16
 25623 13ec F41A0000 		.4byte	.LBE16-.LBB16
 25624 13f0 25       		.uleb128 0x25
 25625 13f1 73747200 		.ascii	"str\000"
 25626 13f5 01       		.byte	0x1
 25627 13f6 DD06     		.2byte	0x6dd
 25628 13f8 50140000 		.4byte	0x1450
 25629 13fc 03       		.uleb128 0x3
 25630 13fd 91       		.byte	0x91
 25631 13fe DC7E     		.sleb128 -164
 25632 1400 1E       		.uleb128 0x1e
 25633 1401 5E020000 		.4byte	.LBB17
 25634 1405 32110000 		.4byte	.LBE17-.LBB17
 25635 1409 25       		.uleb128 0x25
 25636 140a 6B00     		.ascii	"k\000"
 25637 140c 01       		.byte	0x1
 25638 140d 0807     		.2byte	0x708
 25639 140f 97000000 		.4byte	0x97
 25640 1413 02       		.uleb128 0x2
 25641 1414 91       		.byte	0x91
 25642 1415 53       		.sleb128 -45
 25643 1416 1E       		.uleb128 0x1e
 25644 1417 68020000 		.4byte	.LBB18
 25645 141b 0C110000 		.4byte	.LBE18-.LBB18
 25646 141f 22       		.uleb128 0x22
 25647 1420 7F0B0000 		.4byte	.LASF214
 25648 1424 01       		.byte	0x1
 25649 1425 0A07     		.2byte	0x70a
 25650 1427 97000000 		.4byte	0x97
 25651 142b 02       		.uleb128 0x2
 25652 142c 91       		.byte	0x91
 25653 142d 4B       		.sleb128 -53
 25654 142e 25       		.uleb128 0x25
 25655 142f 4D4F5400 		.ascii	"MOT\000"
 25656 1433 01       		.byte	0x1
 25657 1434 0B07     		.2byte	0x70b
 25658 1436 60140000 		.4byte	0x1460
 25659 143a 02       		.uleb128 0x2
 25660 143b 91       		.byte	0x91
 25661 143c 44       		.sleb128 -60
 25662 143d 22       		.uleb128 0x22
 25663 143e 8B100000 		.4byte	.LASF252
 25664 1442 01       		.byte	0x1
 25665 1443 0C07     		.2byte	0x70c
 25666 1445 97000000 		.4byte	0x97
 25667 1449 02       		.uleb128 0x2
 25668 144a 91       		.byte	0x91
 25669 144b 43       		.sleb128 -61
 25670 144c 00       		.byte	0
 25671 144d 00       		.byte	0
 25672 144e 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 555


 25673 144f 00       		.byte	0
 25674 1450 09       		.uleb128 0x9
 25675 1451 F9000000 		.4byte	0xf9
 25676 1455 60140000 		.4byte	0x1460
 25677 1459 0A       		.uleb128 0xa
 25678 145a 18010000 		.4byte	0x118
 25679 145e 63       		.byte	0x63
 25680 145f 00       		.byte	0
 25681 1460 07       		.uleb128 0x7
 25682 1461 04       		.byte	0x4
 25683 1462 8E050000 		.4byte	0x58e
 25684 1466 21       		.uleb128 0x21
 25685 1467 EB0C0000 		.4byte	.LASF253
 25686 146b 01       		.byte	0x1
 25687 146c 8A08     		.2byte	0x88a
 25688 146e 00000000 		.4byte	.LFB73
 25689 1472 B4030000 		.4byte	.LFE73-.LFB73
 25690 1476 01       		.uleb128 0x1
 25691 1477 9C       		.byte	0x9c
 25692 1478 E6140000 		.4byte	0x14e6
 25693 147c 24       		.uleb128 0x24
 25694 147d 9E0B0000 		.4byte	.LASF251
 25695 1481 01       		.byte	0x1
 25696 1482 8A08     		.2byte	0x88a
 25697 1484 1F010000 		.4byte	0x11f
 25698 1488 03       		.uleb128 0x3
 25699 1489 91       		.byte	0x91
 25700 148a EC7E     		.sleb128 -148
 25701 148c 25       		.uleb128 0x25
 25702 148d 73747200 		.ascii	"str\000"
 25703 1491 01       		.byte	0x1
 25704 1492 8C08     		.2byte	0x88c
 25705 1494 50140000 		.4byte	0x1450
 25706 1498 03       		.uleb128 0x3
 25707 1499 91       		.byte	0x91
 25708 149a F07E     		.sleb128 -144
 25709 149c 25       		.uleb128 0x25
 25710 149d 6900     		.ascii	"i\000"
 25711 149f 01       		.byte	0x1
 25712 14a0 8D08     		.2byte	0x88d
 25713 14a2 73000000 		.4byte	0x73
 25714 14a6 02       		.uleb128 0x2
 25715 14a7 91       		.byte	0x91
 25716 14a8 64       		.sleb128 -28
 25717 14a9 22       		.uleb128 0x22
 25718 14aa AC030000 		.4byte	.LASF254
 25719 14ae 01       		.byte	0x1
 25720 14af 8E08     		.2byte	0x88e
 25721 14b1 73000000 		.4byte	0x73
 25722 14b5 02       		.uleb128 0x2
 25723 14b6 91       		.byte	0x91
 25724 14b7 54       		.sleb128 -44
 25725 14b8 22       		.uleb128 0x22
 25726 14b9 89020000 		.4byte	.LASF221
 25727 14bd 01       		.byte	0x1
 25728 14be 9008     		.2byte	0x890
 25729 14c0 7C100000 		.4byte	0x107c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 556


 25730 14c4 02       		.uleb128 0x2
 25731 14c5 91       		.byte	0x91
 25732 14c6 60       		.sleb128 -32
 25733 14c7 25       		.uleb128 0x25
 25734 14c8 4D4F5400 		.ascii	"MOT\000"
 25735 14cc 01       		.byte	0x1
 25736 14cd 9108     		.2byte	0x891
 25737 14cf 60140000 		.4byte	0x1460
 25738 14d3 02       		.uleb128 0x2
 25739 14d4 91       		.byte	0x91
 25740 14d5 5C       		.sleb128 -36
 25741 14d6 22       		.uleb128 0x22
 25742 14d7 8B100000 		.4byte	.LASF252
 25743 14db 01       		.byte	0x1
 25744 14dc 9208     		.2byte	0x892
 25745 14de 97000000 		.4byte	0x97
 25746 14e2 02       		.uleb128 0x2
 25747 14e3 91       		.byte	0x91
 25748 14e4 5B       		.sleb128 -37
 25749 14e5 00       		.byte	0
 25750 14e6 21       		.uleb128 0x21
 25751 14e7 D50C0000 		.4byte	.LASF255
 25752 14eb 01       		.byte	0x1
 25753 14ec CC08     		.2byte	0x8cc
 25754 14ee 00000000 		.4byte	.LFB74
 25755 14f2 E8110000 		.4byte	.LFE74-.LFB74
 25756 14f6 01       		.uleb128 0x1
 25757 14f7 9C       		.byte	0x9c
 25758 14f8 87150000 		.4byte	0x1587
 25759 14fc 24       		.uleb128 0x24
 25760 14fd 9E0B0000 		.4byte	.LASF251
 25761 1501 01       		.byte	0x1
 25762 1502 CC08     		.2byte	0x8cc
 25763 1504 1F010000 		.4byte	0x11f
 25764 1508 03       		.uleb128 0x3
 25765 1509 91       		.byte	0x91
 25766 150a D47E     		.sleb128 -172
 25767 150c 25       		.uleb128 0x25
 25768 150d 73747200 		.ascii	"str\000"
 25769 1511 01       		.byte	0x1
 25770 1512 CE08     		.2byte	0x8ce
 25771 1514 50140000 		.4byte	0x1450
 25772 1518 03       		.uleb128 0x3
 25773 1519 91       		.byte	0x91
 25774 151a DC7E     		.sleb128 -164
 25775 151c 25       		.uleb128 0x25
 25776 151d 6900     		.ascii	"i\000"
 25777 151f 01       		.byte	0x1
 25778 1520 CF08     		.2byte	0x8cf
 25779 1522 73000000 		.4byte	0x73
 25780 1526 02       		.uleb128 0x2
 25781 1527 91       		.byte	0x91
 25782 1528 54       		.sleb128 -44
 25783 1529 22       		.uleb128 0x22
 25784 152a 89020000 		.4byte	.LASF221
 25785 152e 01       		.byte	0x1
 25786 152f D308     		.2byte	0x8d3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 557


 25787 1531 7C100000 		.4byte	0x107c
 25788 1535 02       		.uleb128 0x2
 25789 1536 91       		.byte	0x91
 25790 1537 4C       		.sleb128 -52
 25791 1538 1E       		.uleb128 0x1e
 25792 1539 08010000 		.4byte	.LBB19
 25793 153d 3E0C0000 		.4byte	.LBE19-.LBB19
 25794 1541 25       		.uleb128 0x25
 25795 1542 6B00     		.ascii	"k\000"
 25796 1544 01       		.byte	0x1
 25797 1545 E808     		.2byte	0x8e8
 25798 1547 97000000 		.4byte	0x97
 25799 154b 02       		.uleb128 0x2
 25800 154c 91       		.byte	0x91
 25801 154d 53       		.sleb128 -45
 25802 154e 1E       		.uleb128 0x1e
 25803 154f 12010000 		.4byte	.LBB20
 25804 1553 180C0000 		.4byte	.LBE20-.LBB20
 25805 1557 22       		.uleb128 0x22
 25806 1558 7F0B0000 		.4byte	.LASF214
 25807 155c 01       		.byte	0x1
 25808 155d EA08     		.2byte	0x8ea
 25809 155f 97000000 		.4byte	0x97
 25810 1563 02       		.uleb128 0x2
 25811 1564 91       		.byte	0x91
 25812 1565 4B       		.sleb128 -53
 25813 1566 25       		.uleb128 0x25
 25814 1567 4D4F5400 		.ascii	"MOT\000"
 25815 156b 01       		.byte	0x1
 25816 156c EB08     		.2byte	0x8eb
 25817 156e 60140000 		.4byte	0x1460
 25818 1572 02       		.uleb128 0x2
 25819 1573 91       		.byte	0x91
 25820 1574 44       		.sleb128 -60
 25821 1575 22       		.uleb128 0x22
 25822 1576 8B100000 		.4byte	.LASF252
 25823 157a 01       		.byte	0x1
 25824 157b EC08     		.2byte	0x8ec
 25825 157d 97000000 		.4byte	0x97
 25826 1581 02       		.uleb128 0x2
 25827 1582 91       		.byte	0x91
 25828 1583 43       		.sleb128 -61
 25829 1584 00       		.byte	0
 25830 1585 00       		.byte	0
 25831 1586 00       		.byte	0
 25832 1587 21       		.uleb128 0x21
 25833 1588 6E090000 		.4byte	.LASF256
 25834 158c 01       		.byte	0x1
 25835 158d CD09     		.2byte	0x9cd
 25836 158f 00000000 		.4byte	.LFB75
 25837 1593 C8000000 		.4byte	.LFE75-.LFB75
 25838 1597 01       		.uleb128 0x1
 25839 1598 9C       		.byte	0x9c
 25840 1599 CB150000 		.4byte	0x15cb
 25841 159d 24       		.uleb128 0x24
 25842 159e 9E0B0000 		.4byte	.LASF251
 25843 15a2 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 558


 25844 15a3 CD09     		.2byte	0x9cd
 25845 15a5 1F010000 		.4byte	0x11f
 25846 15a9 03       		.uleb128 0x3
 25847 15aa 91       		.byte	0x91
 25848 15ab 847F     		.sleb128 -124
 25849 15ad 25       		.uleb128 0x25
 25850 15ae 73747200 		.ascii	"str\000"
 25851 15b2 01       		.byte	0x1
 25852 15b3 CF09     		.2byte	0x9cf
 25853 15b5 50140000 		.4byte	0x1450
 25854 15b9 03       		.uleb128 0x3
 25855 15ba 91       		.byte	0x91
 25856 15bb 887F     		.sleb128 -120
 25857 15bd 25       		.uleb128 0x25
 25858 15be 6900     		.ascii	"i\000"
 25859 15c0 01       		.byte	0x1
 25860 15c1 D009     		.2byte	0x9d0
 25861 15c3 73000000 		.4byte	0x73
 25862 15c7 02       		.uleb128 0x2
 25863 15c8 91       		.byte	0x91
 25864 15c9 6C       		.sleb128 -20
 25865 15ca 00       		.byte	0
 25866 15cb 21       		.uleb128 0x21
 25867 15cc AA0B0000 		.4byte	.LASF257
 25868 15d0 01       		.byte	0x1
 25869 15d1 E409     		.2byte	0x9e4
 25870 15d3 00000000 		.4byte	.LFB76
 25871 15d7 30010000 		.4byte	.LFE76-.LFB76
 25872 15db 01       		.uleb128 0x1
 25873 15dc 9C       		.byte	0x9c
 25874 15dd 0F160000 		.4byte	0x160f
 25875 15e1 24       		.uleb128 0x24
 25876 15e2 9E0B0000 		.4byte	.LASF251
 25877 15e6 01       		.byte	0x1
 25878 15e7 E409     		.2byte	0x9e4
 25879 15e9 1F010000 		.4byte	0x11f
 25880 15ed 03       		.uleb128 0x3
 25881 15ee 91       		.byte	0x91
 25882 15ef 847F     		.sleb128 -124
 25883 15f1 25       		.uleb128 0x25
 25884 15f2 73747200 		.ascii	"str\000"
 25885 15f6 01       		.byte	0x1
 25886 15f7 E609     		.2byte	0x9e6
 25887 15f9 50140000 		.4byte	0x1450
 25888 15fd 03       		.uleb128 0x3
 25889 15fe 91       		.byte	0x91
 25890 15ff 887F     		.sleb128 -120
 25891 1601 25       		.uleb128 0x25
 25892 1602 6900     		.ascii	"i\000"
 25893 1604 01       		.byte	0x1
 25894 1605 E709     		.2byte	0x9e7
 25895 1607 73000000 		.4byte	0x73
 25896 160b 02       		.uleb128 0x2
 25897 160c 91       		.byte	0x91
 25898 160d 6C       		.sleb128 -20
 25899 160e 00       		.byte	0
 25900 160f 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 559


 25901 1610 88110000 		.4byte	.LASF258
 25902 1614 01       		.byte	0x1
 25903 1615 0B0A     		.2byte	0xa0b
 25904 1617 00000000 		.4byte	.LFB77
 25905 161b 74030000 		.4byte	.LFE77-.LFB77
 25906 161f 01       		.uleb128 0x1
 25907 1620 9C       		.byte	0x9c
 25908 1621 53160000 		.4byte	0x1653
 25909 1625 24       		.uleb128 0x24
 25910 1626 9E0B0000 		.4byte	.LASF251
 25911 162a 01       		.byte	0x1
 25912 162b 0B0A     		.2byte	0xa0b
 25913 162d 1F010000 		.4byte	0x11f
 25914 1631 03       		.uleb128 0x3
 25915 1632 91       		.byte	0x91
 25916 1633 AC7D     		.sleb128 -340
 25917 1635 25       		.uleb128 0x25
 25918 1636 73747200 		.ascii	"str\000"
 25919 163a 01       		.byte	0x1
 25920 163b 0D0A     		.2byte	0xa0d
 25921 163d 53160000 		.4byte	0x1653
 25922 1641 03       		.uleb128 0x3
 25923 1642 91       		.byte	0x91
 25924 1643 B07D     		.sleb128 -336
 25925 1645 25       		.uleb128 0x25
 25926 1646 6900     		.ascii	"i\000"
 25927 1648 01       		.byte	0x1
 25928 1649 0E0A     		.2byte	0xa0e
 25929 164b 73000000 		.4byte	0x73
 25930 164f 02       		.uleb128 0x2
 25931 1650 91       		.byte	0x91
 25932 1651 5C       		.sleb128 -36
 25933 1652 00       		.byte	0
 25934 1653 09       		.uleb128 0x9
 25935 1654 F9000000 		.4byte	0xf9
 25936 1658 64160000 		.4byte	0x1664
 25937 165c 23       		.uleb128 0x23
 25938 165d 18010000 		.4byte	0x118
 25939 1661 2B01     		.2byte	0x12b
 25940 1663 00       		.byte	0
 25941 1664 21       		.uleb128 0x21
 25942 1665 9F0C0000 		.4byte	.LASF259
 25943 1669 01       		.byte	0x1
 25944 166a 360A     		.2byte	0xa36
 25945 166c 00000000 		.4byte	.LFB78
 25946 1670 84000000 		.4byte	.LFE78-.LFB78
 25947 1674 01       		.uleb128 0x1
 25948 1675 9C       		.byte	0x9c
 25949 1676 B7160000 		.4byte	0x16b7
 25950 167a 24       		.uleb128 0x24
 25951 167b 0A050000 		.4byte	.LASF204
 25952 167f 01       		.byte	0x1
 25953 1680 360A     		.2byte	0xa36
 25954 1682 810E0000 		.4byte	0xe81
 25955 1686 02       		.uleb128 0x2
 25956 1687 91       		.byte	0x91
 25957 1688 6C       		.sleb128 -20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 560


 25958 1689 24       		.uleb128 0x24
 25959 168a B0000000 		.4byte	.LASF205
 25960 168e 01       		.byte	0x1
 25961 168f 360A     		.2byte	0xa36
 25962 1691 A3000000 		.4byte	0xa3
 25963 1695 02       		.uleb128 0x2
 25964 1696 91       		.byte	0x91
 25965 1697 6A       		.sleb128 -22
 25966 1698 24       		.uleb128 0x24
 25967 1699 000D0000 		.4byte	.LASF260
 25968 169d 01       		.byte	0x1
 25969 169e 360A     		.2byte	0xa36
 25970 16a0 97000000 		.4byte	0x97
 25971 16a4 02       		.uleb128 0x2
 25972 16a5 91       		.byte	0x91
 25973 16a6 69       		.sleb128 -23
 25974 16a7 22       		.uleb128 0x22
 25975 16a8 D6050000 		.4byte	.LASF219
 25976 16ac 01       		.byte	0x1
 25977 16ad 380A     		.2byte	0xa38
 25978 16af A3000000 		.4byte	0xa3
 25979 16b3 02       		.uleb128 0x2
 25980 16b4 91       		.byte	0x91
 25981 16b5 76       		.sleb128 -10
 25982 16b6 00       		.byte	0
 25983 16b7 21       		.uleb128 0x21
 25984 16b8 25050000 		.4byte	.LASF261
 25985 16bc 01       		.byte	0x1
 25986 16bd 520A     		.2byte	0xa52
 25987 16bf 00000000 		.4byte	.LFB79
 25988 16c3 88000000 		.4byte	.LFE79-.LFB79
 25989 16c7 01       		.uleb128 0x1
 25990 16c8 9C       		.byte	0x9c
 25991 16c9 FB160000 		.4byte	0x16fb
 25992 16cd 24       		.uleb128 0x24
 25993 16ce 0A050000 		.4byte	.LASF204
 25994 16d2 01       		.byte	0x1
 25995 16d3 520A     		.2byte	0xa52
 25996 16d5 810E0000 		.4byte	0xe81
 25997 16d9 02       		.uleb128 0x2
 25998 16da 91       		.byte	0x91
 25999 16db 6C       		.sleb128 -20
 26000 16dc 24       		.uleb128 0x24
 26001 16dd B0000000 		.4byte	.LASF205
 26002 16e1 01       		.byte	0x1
 26003 16e2 520A     		.2byte	0xa52
 26004 16e4 A3000000 		.4byte	0xa3
 26005 16e8 02       		.uleb128 0x2
 26006 16e9 91       		.byte	0x91
 26007 16ea 6A       		.sleb128 -22
 26008 16eb 22       		.uleb128 0x22
 26009 16ec D6050000 		.4byte	.LASF219
 26010 16f0 01       		.byte	0x1
 26011 16f1 540A     		.2byte	0xa54
 26012 16f3 A3000000 		.4byte	0xa3
 26013 16f7 02       		.uleb128 0x2
 26014 16f8 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 561


 26015 16f9 76       		.sleb128 -10
 26016 16fa 00       		.byte	0
 26017 16fb 21       		.uleb128 0x21
 26018 16fc 060A0000 		.4byte	.LASF262
 26019 1700 01       		.byte	0x1
 26020 1701 6A0A     		.2byte	0xa6a
 26021 1703 00000000 		.4byte	.LFB80
 26022 1707 80000000 		.4byte	.LFE80-.LFB80
 26023 170b 01       		.uleb128 0x1
 26024 170c 9C       		.byte	0x9c
 26025 170d 3F170000 		.4byte	0x173f
 26026 1711 24       		.uleb128 0x24
 26027 1712 0A050000 		.4byte	.LASF204
 26028 1716 01       		.byte	0x1
 26029 1717 6A0A     		.2byte	0xa6a
 26030 1719 810E0000 		.4byte	0xe81
 26031 171d 02       		.uleb128 0x2
 26032 171e 91       		.byte	0x91
 26033 171f 6C       		.sleb128 -20
 26034 1720 24       		.uleb128 0x24
 26035 1721 B0000000 		.4byte	.LASF205
 26036 1725 01       		.byte	0x1
 26037 1726 6A0A     		.2byte	0xa6a
 26038 1728 A3000000 		.4byte	0xa3
 26039 172c 02       		.uleb128 0x2
 26040 172d 91       		.byte	0x91
 26041 172e 6A       		.sleb128 -22
 26042 172f 22       		.uleb128 0x22
 26043 1730 D6050000 		.4byte	.LASF219
 26044 1734 01       		.byte	0x1
 26045 1735 6C0A     		.2byte	0xa6c
 26046 1737 A3000000 		.4byte	0xa3
 26047 173b 02       		.uleb128 0x2
 26048 173c 91       		.byte	0x91
 26049 173d 76       		.sleb128 -10
 26050 173e 00       		.byte	0
 26051 173f 27       		.uleb128 0x27
 26052 1740 5B100000 		.4byte	.LASF268
 26053 1744 01       		.byte	0x1
 26054 1745 850A     		.2byte	0xa85
 26055 1747 97000000 		.4byte	0x97
 26056 174b 00000000 		.4byte	.LFB81
 26057 174f 3E000000 		.4byte	.LFE81-.LFB81
 26058 1753 01       		.uleb128 0x1
 26059 1754 9C       		.byte	0x9c
 26060 1755 94170000 		.4byte	0x1794
 26061 1759 24       		.uleb128 0x24
 26062 175a 43090000 		.4byte	.LASF263
 26063 175e 01       		.byte	0x1
 26064 175f 850A     		.2byte	0xa85
 26065 1761 810E0000 		.4byte	0xe81
 26066 1765 02       		.uleb128 0x2
 26067 1766 91       		.byte	0x91
 26068 1767 6C       		.sleb128 -20
 26069 1768 24       		.uleb128 0x24
 26070 1769 DF040000 		.4byte	.LASF264
 26071 176d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 562


 26072 176e 850A     		.2byte	0xa85
 26073 1770 97000000 		.4byte	0x97
 26074 1774 02       		.uleb128 0x2
 26075 1775 91       		.byte	0x91
 26076 1776 6B       		.sleb128 -21
 26077 1777 25       		.uleb128 0x25
 26078 1778 6900     		.ascii	"i\000"
 26079 177a 01       		.byte	0x1
 26080 177b 870A     		.2byte	0xa87
 26081 177d 97000000 		.4byte	0x97
 26082 1781 02       		.uleb128 0x2
 26083 1782 91       		.byte	0x91
 26084 1783 77       		.sleb128 -9
 26085 1784 22       		.uleb128 0x22
 26086 1785 0A0B0000 		.4byte	.LASF265
 26087 1789 01       		.byte	0x1
 26088 178a 880A     		.2byte	0xa88
 26089 178c 97000000 		.4byte	0x97
 26090 1790 02       		.uleb128 0x2
 26091 1791 91       		.byte	0x91
 26092 1792 76       		.sleb128 -10
 26093 1793 00       		.byte	0
 26094 1794 21       		.uleb128 0x21
 26095 1795 5B090000 		.4byte	.LASF266
 26096 1799 01       		.byte	0x1
 26097 179a 950A     		.2byte	0xa95
 26098 179c 00000000 		.4byte	.LFB82
 26099 17a0 2E000000 		.4byte	.LFE82-.LFB82
 26100 17a4 01       		.uleb128 0x1
 26101 17a5 9C       		.byte	0x9c
 26102 17a6 D8170000 		.4byte	0x17d8
 26103 17aa 24       		.uleb128 0x24
 26104 17ab 2F040000 		.4byte	.LASF267
 26105 17af 01       		.byte	0x1
 26106 17b0 950A     		.2byte	0xa95
 26107 17b2 97000000 		.4byte	0x97
 26108 17b6 02       		.uleb128 0x2
 26109 17b7 91       		.byte	0x91
 26110 17b8 6F       		.sleb128 -17
 26111 17b9 22       		.uleb128 0x22
 26112 17ba B0000000 		.4byte	.LASF205
 26113 17be 01       		.byte	0x1
 26114 17bf 960A     		.2byte	0xa96
 26115 17c1 73000000 		.4byte	0x73
 26116 17c5 02       		.uleb128 0x2
 26117 17c6 91       		.byte	0x91
 26118 17c7 74       		.sleb128 -12
 26119 17c8 22       		.uleb128 0x22
 26120 17c9 0A050000 		.4byte	.LASF204
 26121 17cd 01       		.byte	0x1
 26122 17ce 970A     		.2byte	0xa97
 26123 17d0 D8170000 		.4byte	0x17d8
 26124 17d4 02       		.uleb128 0x2
 26125 17d5 91       		.byte	0x91
 26126 17d6 70       		.sleb128 -16
 26127 17d7 00       		.byte	0
 26128 17d8 09       		.uleb128 0x9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 563


 26129 17d9 97000000 		.4byte	0x97
 26130 17dd E8170000 		.4byte	0x17e8
 26131 17e1 0A       		.uleb128 0xa
 26132 17e2 18010000 		.4byte	0x118
 26133 17e6 01       		.byte	0x1
 26134 17e7 00       		.byte	0
 26135 17e8 28       		.uleb128 0x28
 26136 17e9 32030000 		.4byte	.LASF269
 26137 17ed 01       		.byte	0x1
 26138 17ee A40A     		.2byte	0xaa4
 26139 17f0 97000000 		.4byte	0x97
 26140 17f4 00000000 		.4byte	.LFB83
 26141 17f8 98000000 		.4byte	.LFE83-.LFB83
 26142 17fc 01       		.uleb128 0x1
 26143 17fd 9C       		.byte	0x9c
 26144 17fe 4C180000 		.4byte	0x184c
 26145 1802 24       		.uleb128 0x24
 26146 1803 D2040000 		.4byte	.LASF270
 26147 1807 01       		.byte	0x1
 26148 1808 A40A     		.2byte	0xaa4
 26149 180a 73000000 		.4byte	0x73
 26150 180e 02       		.uleb128 0x2
 26151 180f 91       		.byte	0x91
 26152 1810 64       		.sleb128 -28
 26153 1811 25       		.uleb128 0x25
 26154 1812 6900     		.ascii	"i\000"
 26155 1814 01       		.byte	0x1
 26156 1815 A60A     		.2byte	0xaa6
 26157 1817 73000000 		.4byte	0x73
 26158 181b 02       		.uleb128 0x2
 26159 181c 91       		.byte	0x91
 26160 181d 74       		.sleb128 -12
 26161 181e 22       		.uleb128 0x22
 26162 181f 75000000 		.4byte	.LASF271
 26163 1823 01       		.byte	0x1
 26164 1824 A70A     		.2byte	0xaa7
 26165 1826 97000000 		.4byte	0x97
 26166 182a 02       		.uleb128 0x2
 26167 182b 91       		.byte	0x91
 26168 182c 6B       		.sleb128 -21
 26169 182d 22       		.uleb128 0x22
 26170 182e 2F050000 		.4byte	.LASF272
 26171 1832 01       		.byte	0x1
 26172 1833 A80A     		.2byte	0xaa8
 26173 1835 73000000 		.4byte	0x73
 26174 1839 02       		.uleb128 0x2
 26175 183a 91       		.byte	0x91
 26176 183b 6C       		.sleb128 -20
 26177 183c 22       		.uleb128 0x22
 26178 183d 71040000 		.4byte	.LASF273
 26179 1841 01       		.byte	0x1
 26180 1842 A90A     		.2byte	0xaa9
 26181 1844 97000000 		.4byte	0x97
 26182 1848 02       		.uleb128 0x2
 26183 1849 91       		.byte	0x91
 26184 184a 73       		.sleb128 -13
 26185 184b 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 564


 26186 184c 21       		.uleb128 0x21
 26187 184d 390C0000 		.4byte	.LASF274
 26188 1851 01       		.byte	0x1
 26189 1852 CE0A     		.2byte	0xace
 26190 1854 00000000 		.4byte	.LFB84
 26191 1858 80000000 		.4byte	.LFE84-.LFB84
 26192 185c 01       		.uleb128 0x1
 26193 185d 9C       		.byte	0x9c
 26194 185e 70180000 		.4byte	0x1870
 26195 1862 25       		.uleb128 0x25
 26196 1863 6900     		.ascii	"i\000"
 26197 1865 01       		.byte	0x1
 26198 1866 D00A     		.2byte	0xad0
 26199 1868 A3000000 		.4byte	0xa3
 26200 186c 02       		.uleb128 0x2
 26201 186d 91       		.byte	0x91
 26202 186e 76       		.sleb128 -10
 26203 186f 00       		.byte	0
 26204 1870 28       		.uleb128 0x28
 26205 1871 890B0000 		.4byte	.LASF275
 26206 1875 01       		.byte	0x1
 26207 1876 E70A     		.2byte	0xae7
 26208 1878 97000000 		.4byte	0x97
 26209 187c 00000000 		.4byte	.LFB85
 26210 1880 5C000000 		.4byte	.LFE85-.LFB85
 26211 1884 01       		.uleb128 0x1
 26212 1885 9C       		.byte	0x9c
 26213 1886 98180000 		.4byte	0x1898
 26214 188a 25       		.uleb128 0x25
 26215 188b 6900     		.ascii	"i\000"
 26216 188d 01       		.byte	0x1
 26217 188e E80A     		.2byte	0xae8
 26218 1890 A3000000 		.4byte	0xa3
 26219 1894 02       		.uleb128 0x2
 26220 1895 91       		.byte	0x91
 26221 1896 76       		.sleb128 -10
 26222 1897 00       		.byte	0
 26223 1898 28       		.uleb128 0x28
 26224 1899 35050000 		.4byte	.LASF276
 26225 189d 01       		.byte	0x1
 26226 189e FA0A     		.2byte	0xafa
 26227 18a0 97000000 		.4byte	0x97
 26228 18a4 00000000 		.4byte	.LFB86
 26229 18a8 D0050000 		.4byte	.LFE86-.LFB86
 26230 18ac 01       		.uleb128 0x1
 26231 18ad 9C       		.byte	0x9c
 26232 18ae CD180000 		.4byte	0x18cd
 26233 18b2 25       		.uleb128 0x25
 26234 18b3 6900     		.ascii	"i\000"
 26235 18b5 01       		.byte	0x1
 26236 18b6 FC0A     		.2byte	0xafc
 26237 18b8 97000000 		.4byte	0x97
 26238 18bc 02       		.uleb128 0x2
 26239 18bd 91       		.byte	0x91
 26240 18be 77       		.sleb128 -9
 26241 18bf 25       		.uleb128 0x25
 26242 18c0 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 565


 26243 18c2 01       		.byte	0x1
 26244 18c3 FC0A     		.2byte	0xafc
 26245 18c5 97000000 		.4byte	0x97
 26246 18c9 02       		.uleb128 0x2
 26247 18ca 91       		.byte	0x91
 26248 18cb 76       		.sleb128 -10
 26249 18cc 00       		.byte	0
 26250 18cd 29       		.uleb128 0x29
 26251 18ce 32070000 		.4byte	.LASF277
 26252 18d2 01       		.byte	0x1
 26253 18d3 7F0B     		.2byte	0xb7f
 26254 18d5 00000000 		.4byte	.LFB87
 26255 18d9 30020000 		.4byte	.LFE87-.LFB87
 26256 18dd 01       		.uleb128 0x1
 26257 18de 9C       		.byte	0x9c
 26258 18df 0A190000 		.4byte	0x190a
 26259 18e3 22       		.uleb128 0x22
 26260 18e4 7F0B0000 		.4byte	.LASF214
 26261 18e8 01       		.byte	0x1
 26262 18e9 810B     		.2byte	0xb81
 26263 18eb 97000000 		.4byte	0x97
 26264 18ef 02       		.uleb128 0x2
 26265 18f0 91       		.byte	0x91
 26266 18f1 73       		.sleb128 -13
 26267 18f2 1E       		.uleb128 0x1e
 26268 18f3 FA000000 		.4byte	.LBB21
 26269 18f7 6A000000 		.4byte	.LBE21-.LBB21
 26270 18fb 25       		.uleb128 0x25
 26271 18fc 6900     		.ascii	"i\000"
 26272 18fe 01       		.byte	0x1
 26273 18ff 920B     		.2byte	0xb92
 26274 1901 73000000 		.4byte	0x73
 26275 1905 02       		.uleb128 0x2
 26276 1906 91       		.byte	0x91
 26277 1907 74       		.sleb128 -12
 26278 1908 00       		.byte	0
 26279 1909 00       		.byte	0
 26280 190a 26       		.uleb128 0x26
 26281 190b 63050000 		.4byte	.LASF279
 26282 190f 01       		.byte	0x1
 26283 1910 B40B     		.2byte	0xbb4
 26284 1912 00000000 		.4byte	.LFB88
 26285 1916 B4000000 		.4byte	.LFE88-.LFB88
 26286 191a 01       		.uleb128 0x1
 26287 191b 9C       		.byte	0x9c
 26288 191c 4E190000 		.4byte	0x194e
 26289 1920 22       		.uleb128 0x22
 26290 1921 D6050000 		.4byte	.LASF219
 26291 1925 01       		.byte	0x1
 26292 1926 B60B     		.2byte	0xbb6
 26293 1928 97000000 		.4byte	0x97
 26294 192c 02       		.uleb128 0x2
 26295 192d 91       		.byte	0x91
 26296 192e 6F       		.sleb128 -17
 26297 192f 22       		.uleb128 0x22
 26298 1930 BD0E0000 		.4byte	.LASF210
 26299 1934 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 566


 26300 1935 B70B     		.2byte	0xbb7
 26301 1937 C7000000 		.4byte	0xc7
 26302 193b 02       		.uleb128 0x2
 26303 193c 91       		.byte	0x91
 26304 193d 6C       		.sleb128 -20
 26305 193e 22       		.uleb128 0x22
 26306 193f 0A050000 		.4byte	.LASF204
 26307 1943 01       		.byte	0x1
 26308 1944 BA0B     		.2byte	0xbba
 26309 1946 CB070000 		.4byte	0x7cb
 26310 194a 02       		.uleb128 0x2
 26311 194b 91       		.byte	0x91
 26312 194c 64       		.sleb128 -28
 26313 194d 00       		.byte	0
 26314 194e 26       		.uleb128 0x26
 26315 194f 260C0000 		.4byte	.LASF280
 26316 1953 01       		.byte	0x1
 26317 1954 CD0B     		.2byte	0xbcd
 26318 1956 00000000 		.4byte	.LFB89
 26319 195a B4000000 		.4byte	.LFE89-.LFB89
 26320 195e 01       		.uleb128 0x1
 26321 195f 9C       		.byte	0x9c
 26322 1960 92190000 		.4byte	0x1992
 26323 1964 22       		.uleb128 0x22
 26324 1965 D6050000 		.4byte	.LASF219
 26325 1969 01       		.byte	0x1
 26326 196a CF0B     		.2byte	0xbcf
 26327 196c 97000000 		.4byte	0x97
 26328 1970 02       		.uleb128 0x2
 26329 1971 91       		.byte	0x91
 26330 1972 6F       		.sleb128 -17
 26331 1973 22       		.uleb128 0x22
 26332 1974 BD0E0000 		.4byte	.LASF210
 26333 1978 01       		.byte	0x1
 26334 1979 D00B     		.2byte	0xbd0
 26335 197b C7000000 		.4byte	0xc7
 26336 197f 02       		.uleb128 0x2
 26337 1980 91       		.byte	0x91
 26338 1981 6C       		.sleb128 -20
 26339 1982 22       		.uleb128 0x22
 26340 1983 0A050000 		.4byte	.LASF204
 26341 1987 01       		.byte	0x1
 26342 1988 D40B     		.2byte	0xbd4
 26343 198a CB070000 		.4byte	0x7cb
 26344 198e 02       		.uleb128 0x2
 26345 198f 91       		.byte	0x91
 26346 1990 64       		.sleb128 -28
 26347 1991 00       		.byte	0
 26348 1992 26       		.uleb128 0x26
 26349 1993 90060000 		.4byte	.LASF281
 26350 1997 01       		.byte	0x1
 26351 1998 E60B     		.2byte	0xbe6
 26352 199a 00000000 		.4byte	.LFB90
 26353 199e B8000000 		.4byte	.LFE90-.LFB90
 26354 19a2 01       		.uleb128 0x1
 26355 19a3 9C       		.byte	0x9c
 26356 19a4 D6190000 		.4byte	0x19d6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 567


 26357 19a8 22       		.uleb128 0x22
 26358 19a9 D6050000 		.4byte	.LASF219
 26359 19ad 01       		.byte	0x1
 26360 19ae E80B     		.2byte	0xbe8
 26361 19b0 97000000 		.4byte	0x97
 26362 19b4 02       		.uleb128 0x2
 26363 19b5 91       		.byte	0x91
 26364 19b6 6F       		.sleb128 -17
 26365 19b7 22       		.uleb128 0x22
 26366 19b8 BD0E0000 		.4byte	.LASF210
 26367 19bc 01       		.byte	0x1
 26368 19bd E90B     		.2byte	0xbe9
 26369 19bf C7000000 		.4byte	0xc7
 26370 19c3 02       		.uleb128 0x2
 26371 19c4 91       		.byte	0x91
 26372 19c5 6C       		.sleb128 -20
 26373 19c6 22       		.uleb128 0x22
 26374 19c7 0A050000 		.4byte	.LASF204
 26375 19cb 01       		.byte	0x1
 26376 19cc ED0B     		.2byte	0xbed
 26377 19ce CB070000 		.4byte	0x7cb
 26378 19d2 02       		.uleb128 0x2
 26379 19d3 91       		.byte	0x91
 26380 19d4 64       		.sleb128 -28
 26381 19d5 00       		.byte	0
 26382 19d6 2A       		.uleb128 0x2a
 26383 19d7 A3090000 		.4byte	.LASF282
 26384 19db 01       		.byte	0x1
 26385 19dc FF0B     		.2byte	0xbff
 26386 19de 00000000 		.4byte	.LFB91
 26387 19e2 44020000 		.4byte	.LFE91-.LFB91
 26388 19e6 01       		.uleb128 0x1
 26389 19e7 9C       		.byte	0x9c
 26390 19e8 401A0000 		.4byte	0x1a40
 26391 19ec 22       		.uleb128 0x22
 26392 19ed BD0E0000 		.4byte	.LASF210
 26393 19f1 01       		.byte	0x1
 26394 19f2 020C     		.2byte	0xc02
 26395 19f4 401A0000 		.4byte	0x1a40
 26396 19f8 02       		.uleb128 0x2
 26397 19f9 91       		.byte	0x91
 26398 19fa 70       		.sleb128 -16
 26399 19fb 22       		.uleb128 0x22
 26400 19fc 98050000 		.4byte	.LASF283
 26401 1a00 01       		.byte	0x1
 26402 1a01 030C     		.2byte	0xc03
 26403 1a03 401A0000 		.4byte	0x1a40
 26404 1a07 05       		.uleb128 0x5
 26405 1a08 03       		.byte	0x3
 26406 1a09 00000000 		.4byte	last_aux_int16.11230
 26407 1a0d 2B       		.uleb128 0x2b
 26408 1a0e 2E000000 		.4byte	.LBB22
 26409 1a12 50000000 		.4byte	.LBE22-.LBB22
 26410 1a16 281A0000 		.4byte	0x1a28
 26411 1a1a 25       		.uleb128 0x25
 26412 1a1b 6900     		.ascii	"i\000"
 26413 1a1d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 568


 26414 1a1e 0A0C     		.2byte	0xc0a
 26415 1a20 97000000 		.4byte	0x97
 26416 1a24 02       		.uleb128 0x2
 26417 1a25 91       		.byte	0x91
 26418 1a26 77       		.sleb128 -9
 26419 1a27 00       		.byte	0
 26420 1a28 1E       		.uleb128 0x1e
 26421 1a29 88000000 		.4byte	.LBB23
 26422 1a2d 98010000 		.4byte	.LBE23-.LBB23
 26423 1a31 25       		.uleb128 0x25
 26424 1a32 6900     		.ascii	"i\000"
 26425 1a34 01       		.byte	0x1
 26426 1a35 140C     		.2byte	0xc14
 26427 1a37 97000000 		.4byte	0x97
 26428 1a3b 02       		.uleb128 0x2
 26429 1a3c 91       		.byte	0x91
 26430 1a3d 76       		.sleb128 -10
 26431 1a3e 00       		.byte	0
 26432 1a3f 00       		.byte	0
 26433 1a40 09       		.uleb128 0x9
 26434 1a41 C7000000 		.4byte	0xc7
 26435 1a45 501A0000 		.4byte	0x1a50
 26436 1a49 0A       		.uleb128 0xa
 26437 1a4a 18010000 		.4byte	0x118
 26438 1a4e 01       		.byte	0x1
 26439 1a4f 00       		.byte	0
 26440 1a50 26       		.uleb128 0x26
 26441 1a51 F7100000 		.4byte	.LASF284
 26442 1a55 01       		.byte	0x1
 26443 1a56 2F0C     		.2byte	0xc2f
 26444 1a58 00000000 		.4byte	.LFB92
 26445 1a5c C0000000 		.4byte	.LFE92-.LFB92
 26446 1a60 01       		.uleb128 0x1
 26447 1a61 9C       		.byte	0x9c
 26448 1a62 761A0000 		.4byte	0x1a76
 26449 1a66 25       		.uleb128 0x25
 26450 1a67 61757800 		.ascii	"aux\000"
 26451 1a6b 01       		.byte	0x1
 26452 1a6c 320C     		.2byte	0xc32
 26453 1a6e 97000000 		.4byte	0x97
 26454 1a72 02       		.uleb128 0x2
 26455 1a73 91       		.byte	0x91
 26456 1a74 77       		.sleb128 -9
 26457 1a75 00       		.byte	0
 26458 1a76 26       		.uleb128 0x26
 26459 1a77 F5090000 		.4byte	.LASF285
 26460 1a7b 01       		.byte	0x1
 26461 1a7c 460C     		.2byte	0xc46
 26462 1a7e 00000000 		.4byte	.LFB93
 26463 1a82 5C000000 		.4byte	.LFE93-.LFB93
 26464 1a86 01       		.uleb128 0x1
 26465 1a87 9C       		.byte	0x9c
 26466 1a88 9C1A0000 		.4byte	0x1a9c
 26467 1a8c 22       		.uleb128 0x22
 26468 1a8d 0A050000 		.4byte	.LASF204
 26469 1a91 01       		.byte	0x1
 26470 1a92 480C     		.2byte	0xc48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 569


 26471 1a94 7E050000 		.4byte	0x57e
 26472 1a98 02       		.uleb128 0x2
 26473 1a99 91       		.byte	0x91
 26474 1a9a 74       		.sleb128 -12
 26475 1a9b 00       		.byte	0
 26476 1a9c 26       		.uleb128 0x26
 26477 1a9d 390D0000 		.4byte	.LASF286
 26478 1aa1 01       		.byte	0x1
 26479 1aa2 5D0C     		.2byte	0xc5d
 26480 1aa4 00000000 		.4byte	.LFB94
 26481 1aa8 3C010000 		.4byte	.LFE94-.LFB94
 26482 1aac 01       		.uleb128 0x1
 26483 1aad 9C       		.byte	0x9c
 26484 1aae E01A0000 		.4byte	0x1ae0
 26485 1ab2 22       		.uleb128 0x22
 26486 1ab3 D6050000 		.4byte	.LASF219
 26487 1ab7 01       		.byte	0x1
 26488 1ab8 5F0C     		.2byte	0xc5f
 26489 1aba 97000000 		.4byte	0x97
 26490 1abe 02       		.uleb128 0x2
 26491 1abf 91       		.byte	0x91
 26492 1ac0 6F       		.sleb128 -17
 26493 1ac1 22       		.uleb128 0x22
 26494 1ac2 BD0E0000 		.4byte	.LASF210
 26495 1ac6 01       		.byte	0x1
 26496 1ac7 600C     		.2byte	0xc60
 26497 1ac9 C7000000 		.4byte	0xc7
 26498 1acd 02       		.uleb128 0x2
 26499 1ace 91       		.byte	0x91
 26500 1acf 6C       		.sleb128 -20
 26501 1ad0 22       		.uleb128 0x22
 26502 1ad1 0A050000 		.4byte	.LASF204
 26503 1ad5 01       		.byte	0x1
 26504 1ad6 640C     		.2byte	0xc64
 26505 1ad8 0E090000 		.4byte	0x90e
 26506 1adc 02       		.uleb128 0x2
 26507 1add 91       		.byte	0x91
 26508 1ade 60       		.sleb128 -32
 26509 1adf 00       		.byte	0
 26510 1ae0 26       		.uleb128 0x26
 26511 1ae1 8C080000 		.4byte	.LASF287
 26512 1ae5 01       		.byte	0x1
 26513 1ae6 840C     		.2byte	0xc84
 26514 1ae8 00000000 		.4byte	.LFB95
 26515 1aec B8000000 		.4byte	.LFE95-.LFB95
 26516 1af0 01       		.uleb128 0x1
 26517 1af1 9C       		.byte	0x9c
 26518 1af2 151B0000 		.4byte	0x1b15
 26519 1af6 22       		.uleb128 0x22
 26520 1af7 0A050000 		.4byte	.LASF204
 26521 1afb 01       		.byte	0x1
 26522 1afc 880C     		.2byte	0xc88
 26523 1afe FE080000 		.4byte	0x8fe
 26524 1b02 02       		.uleb128 0x2
 26525 1b03 91       		.byte	0x91
 26526 1b04 70       		.sleb128 -16
 26527 1b05 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 570


 26528 1b06 BD0E0000 		.4byte	.LASF210
 26529 1b0a 01       		.byte	0x1
 26530 1b0b 890C     		.2byte	0xc89
 26531 1b0d C7000000 		.4byte	0xc7
 26532 1b11 02       		.uleb128 0x2
 26533 1b12 91       		.byte	0x91
 26534 1b13 6E       		.sleb128 -18
 26535 1b14 00       		.byte	0
 26536 1b15 26       		.uleb128 0x26
 26537 1b16 22100000 		.4byte	.LASF288
 26538 1b1a 01       		.byte	0x1
 26539 1b1b A40C     		.2byte	0xca4
 26540 1b1d 00000000 		.4byte	.LFB96
 26541 1b21 5C000000 		.4byte	.LFE96-.LFB96
 26542 1b25 01       		.uleb128 0x1
 26543 1b26 9C       		.byte	0x9c
 26544 1b27 4A1B0000 		.4byte	0x1b4a
 26545 1b2b 22       		.uleb128 0x22
 26546 1b2c 0A050000 		.4byte	.LASF204
 26547 1b30 01       		.byte	0x1
 26548 1b31 A80C     		.2byte	0xca8
 26549 1b33 4A1B0000 		.4byte	0x1b4a
 26550 1b37 02       		.uleb128 0x2
 26551 1b38 91       		.byte	0x91
 26552 1b39 74       		.sleb128 -12
 26553 1b3a 22       		.uleb128 0x22
 26554 1b3b BD0E0000 		.4byte	.LASF210
 26555 1b3f 01       		.byte	0x1
 26556 1b40 A90C     		.2byte	0xca9
 26557 1b42 C7000000 		.4byte	0xc7
 26558 1b46 02       		.uleb128 0x2
 26559 1b47 91       		.byte	0x91
 26560 1b48 72       		.sleb128 -14
 26561 1b49 00       		.byte	0
 26562 1b4a 09       		.uleb128 0x9
 26563 1b4b 97000000 		.4byte	0x97
 26564 1b4f 5A1B0000 		.4byte	0x1b5a
 26565 1b53 0A       		.uleb128 0xa
 26566 1b54 18010000 		.4byte	0x118
 26567 1b58 03       		.byte	0x3
 26568 1b59 00       		.byte	0
 26569 1b5a 2C       		.uleb128 0x2c
 26570 1b5b 88000000 		.4byte	.LASF341
 26571 1b5f 01       		.byte	0x1
 26572 1b60 BA0C     		.2byte	0xcba
 26573 1b62 00000000 		.4byte	.LFB97
 26574 1b66 34000000 		.4byte	.LFE97-.LFB97
 26575 1b6a 01       		.uleb128 0x1
 26576 1b6b 9C       		.byte	0x9c
 26577 1b6c 26       		.uleb128 0x26
 26578 1b6d DF020000 		.4byte	.LASF289
 26579 1b71 01       		.byte	0x1
 26580 1b72 C80C     		.2byte	0xcc8
 26581 1b74 00000000 		.4byte	.LFB98
 26582 1b78 20000000 		.4byte	.LFE98-.LFB98
 26583 1b7c 01       		.uleb128 0x1
 26584 1b7d 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 571


 26585 1b7e 921B0000 		.4byte	0x1b92
 26586 1b82 22       		.uleb128 0x22
 26587 1b83 0A050000 		.4byte	.LASF204
 26588 1b87 01       		.byte	0x1
 26589 1b88 CA0C     		.2byte	0xcca
 26590 1b8a D8170000 		.4byte	0x17d8
 26591 1b8e 02       		.uleb128 0x2
 26592 1b8f 91       		.byte	0x91
 26593 1b90 74       		.sleb128 -12
 26594 1b91 00       		.byte	0
 26595 1b92 26       		.uleb128 0x26
 26596 1b93 F0000000 		.4byte	.LASF290
 26597 1b97 01       		.byte	0x1
 26598 1b98 D60C     		.2byte	0xcd6
 26599 1b9a 00000000 		.4byte	.LFB99
 26600 1b9e 6C000000 		.4byte	.LFE99-.LFB99
 26601 1ba2 01       		.uleb128 0x1
 26602 1ba3 9C       		.byte	0x9c
 26603 1ba4 C71B0000 		.4byte	0x1bc7
 26604 1ba8 22       		.uleb128 0x22
 26605 1ba9 0A050000 		.4byte	.LASF204
 26606 1bad 01       		.byte	0x1
 26607 1bae DA0C     		.2byte	0xcda
 26608 1bb0 FE080000 		.4byte	0x8fe
 26609 1bb4 02       		.uleb128 0x2
 26610 1bb5 91       		.byte	0x91
 26611 1bb6 70       		.sleb128 -16
 26612 1bb7 22       		.uleb128 0x22
 26613 1bb8 BD0E0000 		.4byte	.LASF210
 26614 1bbc 01       		.byte	0x1
 26615 1bbd DB0C     		.2byte	0xcdb
 26616 1bbf C7000000 		.4byte	0xc7
 26617 1bc3 02       		.uleb128 0x2
 26618 1bc4 91       		.byte	0x91
 26619 1bc5 6E       		.sleb128 -18
 26620 1bc6 00       		.byte	0
 26621 1bc7 26       		.uleb128 0x26
 26622 1bc8 C60D0000 		.4byte	.LASF291
 26623 1bcc 01       		.byte	0x1
 26624 1bcd EC0C     		.2byte	0xcec
 26625 1bcf 00000000 		.4byte	.LFB100
 26626 1bd3 BC010000 		.4byte	.LFE100-.LFB100
 26627 1bd7 01       		.uleb128 0x1
 26628 1bd8 9C       		.byte	0x9c
 26629 1bd9 291C0000 		.4byte	0x1c29
 26630 1bdd 22       		.uleb128 0x22
 26631 1bde BF090000 		.4byte	.LASF292
 26632 1be2 01       		.byte	0x1
 26633 1be3 EF0C     		.2byte	0xcef
 26634 1be5 AF000000 		.4byte	0xaf
 26635 1be9 02       		.uleb128 0x2
 26636 1bea 91       		.byte	0x91
 26637 1beb 70       		.sleb128 -16
 26638 1bec 22       		.uleb128 0x22
 26639 1bed 930C0000 		.4byte	.LASF293
 26640 1bf1 01       		.byte	0x1
 26641 1bf2 F00C     		.2byte	0xcf0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 572


 26642 1bf4 EB000000 		.4byte	0xeb
 26643 1bf8 02       		.uleb128 0x2
 26644 1bf9 91       		.byte	0x91
 26645 1bfa 6C       		.sleb128 -20
 26646 1bfb 22       		.uleb128 0x22
 26647 1bfc B0000000 		.4byte	.LASF205
 26648 1c00 01       		.byte	0x1
 26649 1c01 F10C     		.2byte	0xcf1
 26650 1c03 97000000 		.4byte	0x97
 26651 1c07 02       		.uleb128 0x2
 26652 1c08 91       		.byte	0x91
 26653 1c09 77       		.sleb128 -9
 26654 1c0a 22       		.uleb128 0x22
 26655 1c0b 0A050000 		.4byte	.LASF204
 26656 1c0f 01       		.byte	0x1
 26657 1c10 F20C     		.2byte	0xcf2
 26658 1c12 D8170000 		.4byte	0x17d8
 26659 1c16 02       		.uleb128 0x2
 26660 1c17 91       		.byte	0x91
 26661 1c18 68       		.sleb128 -24
 26662 1c19 22       		.uleb128 0x22
 26663 1c1a 000D0000 		.4byte	.LASF260
 26664 1c1e 01       		.byte	0x1
 26665 1c1f F30C     		.2byte	0xcf3
 26666 1c21 97000000 		.4byte	0x97
 26667 1c25 02       		.uleb128 0x2
 26668 1c26 91       		.byte	0x91
 26669 1c27 6B       		.sleb128 -21
 26670 1c28 00       		.byte	0
 26671 1c29 26       		.uleb128 0x26
 26672 1c2a 7E010000 		.4byte	.LASF294
 26673 1c2e 01       		.byte	0x1
 26674 1c2f 2D0D     		.2byte	0xd2d
 26675 1c31 00000000 		.4byte	.LFB101
 26676 1c35 60000000 		.4byte	.LFE101-.LFB101
 26677 1c39 01       		.uleb128 0x1
 26678 1c3a 9C       		.byte	0x9c
 26679 1c3b 5E1C0000 		.4byte	0x1c5e
 26680 1c3f 22       		.uleb128 0x22
 26681 1c40 0A050000 		.4byte	.LASF204
 26682 1c44 01       		.byte	0x1
 26683 1c45 2F0D     		.2byte	0xd2f
 26684 1c47 FE080000 		.4byte	0x8fe
 26685 1c4b 02       		.uleb128 0x2
 26686 1c4c 91       		.byte	0x91
 26687 1c4d 70       		.sleb128 -16
 26688 1c4e 22       		.uleb128 0x22
 26689 1c4f BD0E0000 		.4byte	.LASF210
 26690 1c53 01       		.byte	0x1
 26691 1c54 300D     		.2byte	0xd30
 26692 1c56 C7000000 		.4byte	0xc7
 26693 1c5a 02       		.uleb128 0x2
 26694 1c5b 91       		.byte	0x91
 26695 1c5c 6E       		.sleb128 -18
 26696 1c5d 00       		.byte	0
 26697 1c5e 26       		.uleb128 0x26
 26698 1c5f 2C010000 		.4byte	.LASF295
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 573


 26699 1c63 01       		.byte	0x1
 26700 1c64 430D     		.2byte	0xd43
 26701 1c66 00000000 		.4byte	.LFB102
 26702 1c6a 98050000 		.4byte	.LFE102-.LFB102
 26703 1c6e 01       		.uleb128 0x1
 26704 1c6f 9C       		.byte	0x9c
 26705 1c70 EB1C0000 		.4byte	0x1ceb
 26706 1c74 22       		.uleb128 0x22
 26707 1c75 67100000 		.4byte	.LASF296
 26708 1c79 01       		.byte	0x1
 26709 1c7a 460D     		.2byte	0xd46
 26710 1c7c 97000000 		.4byte	0x97
 26711 1c80 02       		.uleb128 0x2
 26712 1c81 91       		.byte	0x91
 26713 1c82 6F       		.sleb128 -17
 26714 1c83 25       		.uleb128 0x25
 26715 1c84 6300     		.ascii	"c\000"
 26716 1c86 01       		.byte	0x1
 26717 1c87 470D     		.2byte	0xd47
 26718 1c89 A3000000 		.4byte	0xa3
 26719 1c8d 02       		.uleb128 0x2
 26720 1c8e 91       		.byte	0x91
 26721 1c8f 6C       		.sleb128 -20
 26722 1c90 25       		.uleb128 0x25
 26723 1c91 6B00     		.ascii	"k\000"
 26724 1c93 01       		.byte	0x1
 26725 1c94 480D     		.2byte	0xd48
 26726 1c96 97000000 		.4byte	0x97
 26727 1c9a 02       		.uleb128 0x2
 26728 1c9b 91       		.byte	0x91
 26729 1c9c 6B       		.sleb128 -21
 26730 1c9d 22       		.uleb128 0x22
 26731 1c9e 26000000 		.4byte	.LASF297
 26732 1ca2 01       		.byte	0x1
 26733 1ca3 490D     		.2byte	0xd49
 26734 1ca5 A3000000 		.4byte	0xa3
 26735 1ca9 02       		.uleb128 0x2
 26736 1caa 91       		.byte	0x91
 26737 1cab 68       		.sleb128 -24
 26738 1cac 22       		.uleb128 0x22
 26739 1cad BD0E0000 		.4byte	.LASF210
 26740 1cb1 01       		.byte	0x1
 26741 1cb2 4A0D     		.2byte	0xd4a
 26742 1cb4 C7000000 		.4byte	0xc7
 26743 1cb8 02       		.uleb128 0x2
 26744 1cb9 91       		.byte	0x91
 26745 1cba 66       		.sleb128 -26
 26746 1cbb 22       		.uleb128 0x22
 26747 1cbc ED0F0000 		.4byte	.LASF209
 26748 1cc0 01       		.byte	0x1
 26749 1cc1 4B0D     		.2byte	0xd4b
 26750 1cc3 EB000000 		.4byte	0xeb
 26751 1cc7 02       		.uleb128 0x2
 26752 1cc8 91       		.byte	0x91
 26753 1cc9 60       		.sleb128 -32
 26754 1cca 22       		.uleb128 0x22
 26755 1ccb 0A050000 		.4byte	.LASF204
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 574


 26756 1ccf 01       		.byte	0x1
 26757 1cd0 4E0D     		.2byte	0xd4e
 26758 1cd2 EB1C0000 		.4byte	0x1ceb
 26759 1cd6 03       		.uleb128 0x3
 26760 1cd7 91       		.byte	0x91
 26761 1cd8 807D     		.sleb128 -384
 26762 1cda 22       		.uleb128 0x22
 26763 1cdb 66070000 		.4byte	.LASF298
 26764 1cdf 01       		.byte	0x1
 26765 1ce0 4F0D     		.2byte	0xd4f
 26766 1ce2 FC1C0000 		.4byte	0x1cfc
 26767 1ce6 03       		.uleb128 0x3
 26768 1ce7 91       		.byte	0x91
 26769 1ce8 E07C     		.sleb128 -416
 26770 1cea 00       		.byte	0
 26771 1ceb 09       		.uleb128 0x9
 26772 1cec 97000000 		.4byte	0x97
 26773 1cf0 FC1C0000 		.4byte	0x1cfc
 26774 1cf4 23       		.uleb128 0x23
 26775 1cf5 18010000 		.4byte	0x118
 26776 1cf9 5D01     		.2byte	0x15d
 26777 1cfb 00       		.byte	0
 26778 1cfc 09       		.uleb128 0x9
 26779 1cfd 97000000 		.4byte	0x97
 26780 1d01 0C1D0000 		.4byte	0x1d0c
 26781 1d05 0A       		.uleb128 0xa
 26782 1d06 18010000 		.4byte	0x118
 26783 1d0a 1F       		.byte	0x1f
 26784 1d0b 00       		.byte	0
 26785 1d0c 26       		.uleb128 0x26
 26786 1d0d C80F0000 		.4byte	.LASF299
 26787 1d11 01       		.byte	0x1
 26788 1d12 B20D     		.2byte	0xdb2
 26789 1d14 00000000 		.4byte	.LFB103
 26790 1d18 8C000000 		.4byte	.LFE103-.LFB103
 26791 1d1c 01       		.uleb128 0x1
 26792 1d1d 9C       		.byte	0x9c
 26793 1d1e 4C1D0000 		.4byte	0x1d4c
 26794 1d22 22       		.uleb128 0x22
 26795 1d23 0A050000 		.4byte	.LASF204
 26796 1d27 01       		.byte	0x1
 26797 1d28 B50D     		.2byte	0xdb5
 26798 1d2a 4C1D0000 		.4byte	0x1d4c
 26799 1d2e 02       		.uleb128 0x2
 26800 1d2f 91       		.byte	0x91
 26801 1d30 60       		.sleb128 -32
 26802 1d31 25       		.uleb128 0x25
 26803 1d32 6900     		.ascii	"i\000"
 26804 1d34 01       		.byte	0x1
 26805 1d35 B60D     		.2byte	0xdb6
 26806 1d37 97000000 		.4byte	0x97
 26807 1d3b 02       		.uleb128 0x2
 26808 1d3c 91       		.byte	0x91
 26809 1d3d 6F       		.sleb128 -17
 26810 1d3e 25       		.uleb128 0x25
 26811 1d3f 6A00     		.ascii	"j\000"
 26812 1d41 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 575


 26813 1d42 B60D     		.2byte	0xdb6
 26814 1d44 97000000 		.4byte	0x97
 26815 1d48 02       		.uleb128 0x2
 26816 1d49 91       		.byte	0x91
 26817 1d4a 6E       		.sleb128 -18
 26818 1d4b 00       		.byte	0
 26819 1d4c 09       		.uleb128 0x9
 26820 1d4d 97000000 		.4byte	0x97
 26821 1d51 5C1D0000 		.4byte	0x1d5c
 26822 1d55 0A       		.uleb128 0xa
 26823 1d56 18010000 		.4byte	0x118
 26824 1d5a 0D       		.byte	0xd
 26825 1d5b 00       		.byte	0
 26826 1d5c 26       		.uleb128 0x26
 26827 1d5d F20D0000 		.4byte	.LASF300
 26828 1d61 01       		.byte	0x1
 26829 1d62 CB0D     		.2byte	0xdcb
 26830 1d64 00000000 		.4byte	.LFB104
 26831 1d68 EC000000 		.4byte	.LFE104-.LFB104
 26832 1d6c 01       		.uleb128 0x1
 26833 1d6d 9C       		.byte	0x9c
 26834 1d6e BA1D0000 		.4byte	0x1dba
 26835 1d72 22       		.uleb128 0x22
 26836 1d73 0A050000 		.4byte	.LASF204
 26837 1d77 01       		.byte	0x1
 26838 1d78 CE0D     		.2byte	0xdce
 26839 1d7a BA1D0000 		.4byte	0x1dba
 26840 1d7e 02       		.uleb128 0x2
 26841 1d7f 91       		.byte	0x91
 26842 1d80 54       		.sleb128 -44
 26843 1d81 25       		.uleb128 0x25
 26844 1d82 6900     		.ascii	"i\000"
 26845 1d84 01       		.byte	0x1
 26846 1d85 CF0D     		.2byte	0xdcf
 26847 1d87 97000000 		.4byte	0x97
 26848 1d8b 02       		.uleb128 0x2
 26849 1d8c 91       		.byte	0x91
 26850 1d8d 6F       		.sleb128 -17
 26851 1d8e 25       		.uleb128 0x25
 26852 1d8f 6A00     		.ascii	"j\000"
 26853 1d91 01       		.byte	0x1
 26854 1d92 CF0D     		.2byte	0xdcf
 26855 1d94 97000000 		.4byte	0x97
 26856 1d98 02       		.uleb128 0x2
 26857 1d99 91       		.byte	0x91
 26858 1d9a 6E       		.sleb128 -18
 26859 1d9b 25       		.uleb128 0x25
 26860 1d9c 69647800 		.ascii	"idx\000"
 26861 1da0 01       		.byte	0x1
 26862 1da1 CF0D     		.2byte	0xdcf
 26863 1da3 97000000 		.4byte	0x97
 26864 1da7 02       		.uleb128 0x2
 26865 1da8 91       		.byte	0x91
 26866 1da9 6D       		.sleb128 -19
 26867 1daa 22       		.uleb128 0x22
 26868 1dab 6F0A0000 		.4byte	.LASF211
 26869 1daf 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 576


 26870 1db0 D00D     		.2byte	0xdd0
 26871 1db2 A3000000 		.4byte	0xa3
 26872 1db6 02       		.uleb128 0x2
 26873 1db7 91       		.byte	0x91
 26874 1db8 52       		.sleb128 -46
 26875 1db9 00       		.byte	0
 26876 1dba 09       		.uleb128 0x9
 26877 1dbb 97000000 		.4byte	0x97
 26878 1dbf CA1D0000 		.4byte	0x1dca
 26879 1dc3 0A       		.uleb128 0xa
 26880 1dc4 18010000 		.4byte	0x118
 26881 1dc8 15       		.byte	0x15
 26882 1dc9 00       		.byte	0
 26883 1dca 26       		.uleb128 0x26
 26884 1dcb 97020000 		.4byte	.LASF301
 26885 1dcf 01       		.byte	0x1
 26886 1dd0 E90D     		.2byte	0xde9
 26887 1dd2 00000000 		.4byte	.LFB105
 26888 1dd6 5C000000 		.4byte	.LFE105-.LFB105
 26889 1dda 01       		.uleb128 0x1
 26890 1ddb 9C       		.byte	0x9c
 26891 1ddc FD1D0000 		.4byte	0x1dfd
 26892 1de0 22       		.uleb128 0x22
 26893 1de1 0A050000 		.4byte	.LASF204
 26894 1de5 01       		.byte	0x1
 26895 1de6 EC0D     		.2byte	0xdec
 26896 1de8 520A0000 		.4byte	0xa52
 26897 1dec 02       		.uleb128 0x2
 26898 1ded 91       		.byte	0x91
 26899 1dee 68       		.sleb128 -24
 26900 1def 25       		.uleb128 0x25
 26901 1df0 6900     		.ascii	"i\000"
 26902 1df2 01       		.byte	0x1
 26903 1df3 ED0D     		.2byte	0xded
 26904 1df5 97000000 		.4byte	0x97
 26905 1df9 02       		.uleb128 0x2
 26906 1dfa 91       		.byte	0x91
 26907 1dfb 77       		.sleb128 -9
 26908 1dfc 00       		.byte	0
 26909 1dfd 26       		.uleb128 0x26
 26910 1dfe C4020000 		.4byte	.LASF302
 26911 1e02 01       		.byte	0x1
 26912 1e03 000E     		.2byte	0xe00
 26913 1e05 00000000 		.4byte	.LFB106
 26914 1e09 C0000000 		.4byte	.LFE106-.LFB106
 26915 1e0d 01       		.uleb128 0x1
 26916 1e0e 9C       		.byte	0x9c
 26917 1e0f 4E1E0000 		.4byte	0x1e4e
 26918 1e13 22       		.uleb128 0x22
 26919 1e14 0A050000 		.4byte	.LASF204
 26920 1e18 01       		.byte	0x1
 26921 1e19 030E     		.2byte	0xe03
 26922 1e1b 4E1E0000 		.4byte	0x1e4e
 26923 1e1f 02       		.uleb128 0x2
 26924 1e20 91       		.byte	0x91
 26925 1e21 54       		.sleb128 -44
 26926 1e22 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 577


 26927 1e23 6900     		.ascii	"i\000"
 26928 1e25 01       		.byte	0x1
 26929 1e26 040E     		.2byte	0xe04
 26930 1e28 97000000 		.4byte	0x97
 26931 1e2c 02       		.uleb128 0x2
 26932 1e2d 91       		.byte	0x91
 26933 1e2e 6F       		.sleb128 -17
 26934 1e2f 25       		.uleb128 0x25
 26935 1e30 69647800 		.ascii	"idx\000"
 26936 1e34 01       		.byte	0x1
 26937 1e35 040E     		.2byte	0xe04
 26938 1e37 97000000 		.4byte	0x97
 26939 1e3b 02       		.uleb128 0x2
 26940 1e3c 91       		.byte	0x91
 26941 1e3d 6E       		.sleb128 -18
 26942 1e3e 22       		.uleb128 0x22
 26943 1e3f BD0E0000 		.4byte	.LASF210
 26944 1e43 01       		.byte	0x1
 26945 1e44 050E     		.2byte	0xe05
 26946 1e46 C7000000 		.4byte	0xc7
 26947 1e4a 02       		.uleb128 0x2
 26948 1e4b 91       		.byte	0x91
 26949 1e4c 52       		.sleb128 -46
 26950 1e4d 00       		.byte	0
 26951 1e4e 09       		.uleb128 0x9
 26952 1e4f 97000000 		.4byte	0x97
 26953 1e53 5E1E0000 		.4byte	0x1e5e
 26954 1e57 0A       		.uleb128 0xa
 26955 1e58 18010000 		.4byte	0x118
 26956 1e5c 19       		.byte	0x19
 26957 1e5d 00       		.byte	0
 26958 1e5e 2D       		.uleb128 0x2d
 26959 1e5f FA0E0000 		.4byte	.LASF303
 26960 1e63 09       		.byte	0x9
 26961 1e64 1207     		.2byte	0x712
 26962 1e66 6A1E0000 		.4byte	0x1e6a
 26963 1e6a 06       		.uleb128 0x6
 26964 1e6b 81000000 		.4byte	0x81
 26965 1e6f 09       		.uleb128 0x9
 26966 1e70 1A030000 		.4byte	0x31a
 26967 1e74 7F1E0000 		.4byte	0x1e7f
 26968 1e78 0A       		.uleb128 0xa
 26969 1e79 18010000 		.4byte	0x118
 26970 1e7d 01       		.byte	0x1
 26971 1e7e 00       		.byte	0
 26972 1e7f 2D       		.uleb128 0x2d
 26973 1e80 A1100000 		.4byte	.LASF304
 26974 1e84 08       		.byte	0x8
 26975 1e85 AD01     		.2byte	0x1ad
 26976 1e87 6F1E0000 		.4byte	0x1e6f
 26977 1e8b 2D       		.uleb128 0x2d
 26978 1e8c D5030000 		.4byte	.LASF305
 26979 1e90 08       		.byte	0x8
 26980 1e91 AD01     		.2byte	0x1ad
 26981 1e93 6F1E0000 		.4byte	0x1e6f
 26982 1e97 2D       		.uleb128 0x2d
 26983 1e98 130B0000 		.4byte	.LASF306
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 578


 26984 1e9c 08       		.byte	0x8
 26985 1e9d AD01     		.2byte	0x1ad
 26986 1e9f 6F1E0000 		.4byte	0x1e6f
 26987 1ea3 09       		.uleb128 0x9
 26988 1ea4 57030000 		.4byte	0x357
 26989 1ea8 B31E0000 		.4byte	0x1eb3
 26990 1eac 0A       		.uleb128 0xa
 26991 1ead 18010000 		.4byte	0x118
 26992 1eb1 01       		.byte	0x1
 26993 1eb2 00       		.byte	0
 26994 1eb3 2D       		.uleb128 0x2d
 26995 1eb4 91050000 		.4byte	.LASF307
 26996 1eb8 08       		.byte	0x8
 26997 1eb9 AE01     		.2byte	0x1ae
 26998 1ebb A31E0000 		.4byte	0x1ea3
 26999 1ebf 2D       		.uleb128 0x2d
 27000 1ec0 DF100000 		.4byte	.LASF308
 27001 1ec4 08       		.byte	0x8
 27002 1ec5 AE01     		.2byte	0x1ae
 27003 1ec7 A31E0000 		.4byte	0x1ea3
 27004 1ecb 2D       		.uleb128 0x2d
 27005 1ecc 6A000000 		.4byte	.LASF309
 27006 1ed0 08       		.byte	0x8
 27007 1ed1 AF01     		.2byte	0x1af
 27008 1ed3 CC030000 		.4byte	0x3cc
 27009 1ed7 2D       		.uleb128 0x2d
 27010 1ed8 A0110000 		.4byte	.LASF310
 27011 1edc 08       		.byte	0x8
 27012 1edd AF01     		.2byte	0x1af
 27013 1edf CC030000 		.4byte	0x3cc
 27014 1ee3 2D       		.uleb128 0x2d
 27015 1ee4 5D000000 		.4byte	.LASF311
 27016 1ee8 08       		.byte	0x8
 27017 1ee9 B001     		.2byte	0x1b0
 27018 1eeb 11040000 		.4byte	0x411
 27019 1eef 2D       		.uleb128 0x2d
 27020 1ef0 D70D0000 		.4byte	.LASF312
 27021 1ef4 08       		.byte	0x8
 27022 1ef5 B101     		.2byte	0x1b1
 27023 1ef7 A2090000 		.4byte	0x9a2
 27024 1efb 2D       		.uleb128 0x2d
 27025 1efc 3D090000 		.4byte	.LASF313
 27026 1f00 08       		.byte	0x8
 27027 1f01 B101     		.2byte	0x1b1
 27028 1f03 A2090000 		.4byte	0x9a2
 27029 1f07 2D       		.uleb128 0x2d
 27030 1f08 52080000 		.4byte	.LASF314
 27031 1f0c 08       		.byte	0x8
 27032 1f0d B201     		.2byte	0x1b2
 27033 1f0f 1E0B0000 		.4byte	0xb1e
 27034 1f13 2D       		.uleb128 0x2d
 27035 1f14 16020000 		.4byte	.LASF315
 27036 1f18 08       		.byte	0x8
 27037 1f19 B701     		.2byte	0x1b7
 27038 1f1b A3000000 		.4byte	0xa3
 27039 1f1f 2D       		.uleb128 0x2d
 27040 1f20 430C0000 		.4byte	.LASF316
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 579


 27041 1f24 08       		.byte	0x8
 27042 1f25 B801     		.2byte	0x1b8
 27043 1f27 A3000000 		.4byte	0xa3
 27044 1f2b 2D       		.uleb128 0x2d
 27045 1f2c 750C0000 		.4byte	.LASF317
 27046 1f30 08       		.byte	0x8
 27047 1f31 BB01     		.2byte	0x1bb
 27048 1f33 F1030000 		.4byte	0x3f1
 27049 1f37 2D       		.uleb128 0x2d
 27050 1f38 910F0000 		.4byte	.LASF318
 27051 1f3c 08       		.byte	0x8
 27052 1f3d BC01     		.2byte	0x1bc
 27053 1f3f D8170000 		.4byte	0x17d8
 27054 1f43 2D       		.uleb128 0x2d
 27055 1f44 1A0F0000 		.4byte	.LASF319
 27056 1f48 08       		.byte	0x8
 27057 1f49 BF01     		.2byte	0x1bf
 27058 1f4b F1030000 		.4byte	0x3f1
 27059 1f4f 2D       		.uleb128 0x2d
 27060 1f50 ED080000 		.4byte	.LASF320
 27061 1f54 08       		.byte	0x8
 27062 1f55 C601     		.2byte	0x1c6
 27063 1f57 97000000 		.4byte	0x97
 27064 1f5b 2D       		.uleb128 0x2d
 27065 1f5c A7080000 		.4byte	.LASF321
 27066 1f60 08       		.byte	0x8
 27067 1f61 CF01     		.2byte	0x1cf
 27068 1f63 97000000 		.4byte	0x97
 27069 1f67 2D       		.uleb128 0x2d
 27070 1f68 0C060000 		.4byte	.LASF322
 27071 1f6c 08       		.byte	0x8
 27072 1f6d D001     		.2byte	0x1d0
 27073 1f6f 97000000 		.4byte	0x97
 27074 1f73 09       		.uleb128 0x9
 27075 1f74 C7000000 		.4byte	0xc7
 27076 1f78 831F0000 		.4byte	0x1f83
 27077 1f7c 0A       		.uleb128 0xa
 27078 1f7d 18010000 		.4byte	0x118
 27079 1f81 0B       		.byte	0xb
 27080 1f82 00       		.byte	0
 27081 1f83 2D       		.uleb128 0x2d
 27082 1f84 5D030000 		.4byte	.LASF323
 27083 1f88 08       		.byte	0x8
 27084 1f89 D301     		.2byte	0x1d3
 27085 1f8b 731F0000 		.4byte	0x1f73
 27086 1f8f 2D       		.uleb128 0x2d
 27087 1f90 AD100000 		.4byte	.LASF324
 27088 1f94 08       		.byte	0x8
 27089 1f95 D401     		.2byte	0x1d4
 27090 1f97 97000000 		.4byte	0x97
 27091 1f9b 09       		.uleb128 0x9
 27092 1f9c AF000000 		.4byte	0xaf
 27093 1fa0 AB1F0000 		.4byte	0x1fab
 27094 1fa4 0A       		.uleb128 0xa
 27095 1fa5 18010000 		.4byte	0x118
 27096 1fa9 04       		.byte	0x4
 27097 1faa 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 580


 27098 1fab 2D       		.uleb128 0x2d
 27099 1fac B1050000 		.4byte	.LASF325
 27100 1fb0 08       		.byte	0x8
 27101 1fb1 DA01     		.2byte	0x1da
 27102 1fb3 9B1F0000 		.4byte	0x1f9b
 27103 1fb7 2D       		.uleb128 0x2d
 27104 1fb8 0F0D0000 		.4byte	.LASF326
 27105 1fbc 08       		.byte	0x8
 27106 1fbd DB01     		.2byte	0x1db
 27107 1fbf D8170000 		.4byte	0x17d8
 27108 1fc3 09       		.uleb128 0x9
 27109 1fc4 A3000000 		.4byte	0xa3
 27110 1fc8 D91F0000 		.4byte	0x1fd9
 27111 1fcc 0A       		.uleb128 0xa
 27112 1fcd 18010000 		.4byte	0x118
 27113 1fd1 01       		.byte	0x1
 27114 1fd2 0A       		.uleb128 0xa
 27115 1fd3 18010000 		.4byte	0x118
 27116 1fd7 04       		.byte	0x4
 27117 1fd8 00       		.byte	0
 27118 1fd9 2D       		.uleb128 0x2d
 27119 1fda BA0F0000 		.4byte	.LASF327
 27120 1fde 08       		.byte	0x8
 27121 1fdf DC01     		.2byte	0x1dc
 27122 1fe1 C31F0000 		.4byte	0x1fc3
 27123 1fe5 2D       		.uleb128 0x2d
 27124 1fe6 16050000 		.4byte	.LASF328
 27125 1fea 08       		.byte	0x8
 27126 1feb E301     		.2byte	0x1e3
 27127 1fed 14030000 		.4byte	0x314
 27128 1ff1 2D       		.uleb128 0x2d
 27129 1ff2 440E0000 		.4byte	.LASF329
 27130 1ff6 08       		.byte	0x8
 27131 1ff7 E801     		.2byte	0x1e8
 27132 1ff9 97000000 		.4byte	0x97
 27133 1ffd 2D       		.uleb128 0x2d
 27134 1ffe F70F0000 		.4byte	.LASF330
 27135 2002 08       		.byte	0x8
 27136 2003 E901     		.2byte	0x1e9
 27137 2005 AB070000 		.4byte	0x7ab
 27138 2009 2D       		.uleb128 0x2d
 27139 200a EB0E0000 		.4byte	.LASF331
 27140 200e 08       		.byte	0x8
 27141 200f EA01     		.2byte	0x1ea
 27142 2011 73000000 		.4byte	0x73
 27143 2015 09       		.uleb128 0x9
 27144 2016 73000000 		.4byte	0x73
 27145 201a 25200000 		.4byte	0x2025
 27146 201e 0A       		.uleb128 0xa
 27147 201f 18010000 		.4byte	0x118
 27148 2023 04       		.byte	0x4
 27149 2024 00       		.byte	0
 27150 2025 2D       		.uleb128 0x2d
 27151 2026 3B030000 		.4byte	.LASF332
 27152 202a 08       		.byte	0x8
 27153 202b EB01     		.2byte	0x1eb
 27154 202d 15200000 		.4byte	0x2015
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 581


 27155 2031 09       		.uleb128 0x9
 27156 2032 A20A0000 		.4byte	0xaa2
 27157 2036 41200000 		.4byte	0x2041
 27158 203a 0A       		.uleb128 0xa
 27159 203b 18010000 		.4byte	0x118
 27160 203f 04       		.byte	0x4
 27161 2040 00       		.byte	0
 27162 2041 2D       		.uleb128 0x2d
 27163 2042 EF050000 		.4byte	.LASF333
 27164 2046 08       		.byte	0x8
 27165 2047 EC01     		.2byte	0x1ec
 27166 2049 31200000 		.4byte	0x2031
 27167 204d 09       		.uleb128 0x9
 27168 204e 97000000 		.4byte	0x97
 27169 2052 63200000 		.4byte	0x2063
 27170 2056 0A       		.uleb128 0xa
 27171 2057 18010000 		.4byte	0x118
 27172 205b 04       		.byte	0x4
 27173 205c 0A       		.uleb128 0xa
 27174 205d 18010000 		.4byte	0x118
 27175 2061 02       		.byte	0x2
 27176 2062 00       		.byte	0
 27177 2063 2D       		.uleb128 0x2d
 27178 2064 80090000 		.4byte	.LASF334
 27179 2068 08       		.byte	0x8
 27180 2069 F001     		.2byte	0x1f0
 27181 206b 4D200000 		.4byte	0x204d
 27182 206f 2E       		.uleb128 0x2e
 27183 2070 C70E0000 		.4byte	.LASF335
 27184 2074 01       		.byte	0x1
 27185 2075 33       		.byte	0x33
 27186 2076 80200000 		.4byte	0x2080
 27187 207a 05       		.uleb128 0x5
 27188 207b 03       		.byte	0x3
 27189 207c 00000000 		.4byte	EEPROM_ADDR
 27190 2080 07       		.uleb128 0x7
 27191 2081 04       		.byte	0x4
 27192 2082 00010000 		.4byte	0x100
 27193 2086 00       		.byte	0
 27194              		.section	.debug_abbrev,"",%progbits
 27195              	.Ldebug_abbrev0:
 27196 0000 01       		.uleb128 0x1
 27197 0001 11       		.uleb128 0x11
 27198 0002 01       		.byte	0x1
 27199 0003 25       		.uleb128 0x25
 27200 0004 0E       		.uleb128 0xe
 27201 0005 13       		.uleb128 0x13
 27202 0006 0B       		.uleb128 0xb
 27203 0007 03       		.uleb128 0x3
 27204 0008 0E       		.uleb128 0xe
 27205 0009 1B       		.uleb128 0x1b
 27206 000a 0E       		.uleb128 0xe
 27207 000b 55       		.uleb128 0x55
 27208 000c 17       		.uleb128 0x17
 27209 000d 11       		.uleb128 0x11
 27210 000e 01       		.uleb128 0x1
 27211 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 582


 27212 0010 17       		.uleb128 0x17
 27213 0011 00       		.byte	0
 27214 0012 00       		.byte	0
 27215 0013 02       		.uleb128 0x2
 27216 0014 24       		.uleb128 0x24
 27217 0015 00       		.byte	0
 27218 0016 0B       		.uleb128 0xb
 27219 0017 0B       		.uleb128 0xb
 27220 0018 3E       		.uleb128 0x3e
 27221 0019 0B       		.uleb128 0xb
 27222 001a 03       		.uleb128 0x3
 27223 001b 0E       		.uleb128 0xe
 27224 001c 00       		.byte	0
 27225 001d 00       		.byte	0
 27226 001e 03       		.uleb128 0x3
 27227 001f 16       		.uleb128 0x16
 27228 0020 00       		.byte	0
 27229 0021 03       		.uleb128 0x3
 27230 0022 0E       		.uleb128 0xe
 27231 0023 3A       		.uleb128 0x3a
 27232 0024 0B       		.uleb128 0xb
 27233 0025 3B       		.uleb128 0x3b
 27234 0026 0B       		.uleb128 0xb
 27235 0027 49       		.uleb128 0x49
 27236 0028 13       		.uleb128 0x13
 27237 0029 00       		.byte	0
 27238 002a 00       		.byte	0
 27239 002b 04       		.uleb128 0x4
 27240 002c 24       		.uleb128 0x24
 27241 002d 00       		.byte	0
 27242 002e 0B       		.uleb128 0xb
 27243 002f 0B       		.uleb128 0xb
 27244 0030 3E       		.uleb128 0x3e
 27245 0031 0B       		.uleb128 0xb
 27246 0032 03       		.uleb128 0x3
 27247 0033 08       		.uleb128 0x8
 27248 0034 00       		.byte	0
 27249 0035 00       		.byte	0
 27250 0036 05       		.uleb128 0x5
 27251 0037 16       		.uleb128 0x16
 27252 0038 00       		.byte	0
 27253 0039 03       		.uleb128 0x3
 27254 003a 0E       		.uleb128 0xe
 27255 003b 3A       		.uleb128 0x3a
 27256 003c 0B       		.uleb128 0xb
 27257 003d 3B       		.uleb128 0x3b
 27258 003e 05       		.uleb128 0x5
 27259 003f 49       		.uleb128 0x49
 27260 0040 13       		.uleb128 0x13
 27261 0041 00       		.byte	0
 27262 0042 00       		.byte	0
 27263 0043 06       		.uleb128 0x6
 27264 0044 35       		.uleb128 0x35
 27265 0045 00       		.byte	0
 27266 0046 49       		.uleb128 0x49
 27267 0047 13       		.uleb128 0x13
 27268 0048 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 583


 27269 0049 00       		.byte	0
 27270 004a 07       		.uleb128 0x7
 27271 004b 0F       		.uleb128 0xf
 27272 004c 00       		.byte	0
 27273 004d 0B       		.uleb128 0xb
 27274 004e 0B       		.uleb128 0xb
 27275 004f 49       		.uleb128 0x49
 27276 0050 13       		.uleb128 0x13
 27277 0051 00       		.byte	0
 27278 0052 00       		.byte	0
 27279 0053 08       		.uleb128 0x8
 27280 0054 26       		.uleb128 0x26
 27281 0055 00       		.byte	0
 27282 0056 49       		.uleb128 0x49
 27283 0057 13       		.uleb128 0x13
 27284 0058 00       		.byte	0
 27285 0059 00       		.byte	0
 27286 005a 09       		.uleb128 0x9
 27287 005b 01       		.uleb128 0x1
 27288 005c 01       		.byte	0x1
 27289 005d 49       		.uleb128 0x49
 27290 005e 13       		.uleb128 0x13
 27291 005f 01       		.uleb128 0x1
 27292 0060 13       		.uleb128 0x13
 27293 0061 00       		.byte	0
 27294 0062 00       		.byte	0
 27295 0063 0A       		.uleb128 0xa
 27296 0064 21       		.uleb128 0x21
 27297 0065 00       		.byte	0
 27298 0066 49       		.uleb128 0x49
 27299 0067 13       		.uleb128 0x13
 27300 0068 2F       		.uleb128 0x2f
 27301 0069 0B       		.uleb128 0xb
 27302 006a 00       		.byte	0
 27303 006b 00       		.byte	0
 27304 006c 0B       		.uleb128 0xb
 27305 006d 04       		.uleb128 0x4
 27306 006e 01       		.byte	0x1
 27307 006f 03       		.uleb128 0x3
 27308 0070 0E       		.uleb128 0xe
 27309 0071 0B       		.uleb128 0xb
 27310 0072 0B       		.uleb128 0xb
 27311 0073 49       		.uleb128 0x49
 27312 0074 13       		.uleb128 0x13
 27313 0075 3A       		.uleb128 0x3a
 27314 0076 0B       		.uleb128 0xb
 27315 0077 3B       		.uleb128 0x3b
 27316 0078 0B       		.uleb128 0xb
 27317 0079 01       		.uleb128 0x1
 27318 007a 13       		.uleb128 0x13
 27319 007b 00       		.byte	0
 27320 007c 00       		.byte	0
 27321 007d 0C       		.uleb128 0xc
 27322 007e 28       		.uleb128 0x28
 27323 007f 00       		.byte	0
 27324 0080 03       		.uleb128 0x3
 27325 0081 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 584


 27326 0082 1C       		.uleb128 0x1c
 27327 0083 0B       		.uleb128 0xb
 27328 0084 00       		.byte	0
 27329 0085 00       		.byte	0
 27330 0086 0D       		.uleb128 0xd
 27331 0087 13       		.uleb128 0x13
 27332 0088 00       		.byte	0
 27333 0089 03       		.uleb128 0x3
 27334 008a 0E       		.uleb128 0xe
 27335 008b 3C       		.uleb128 0x3c
 27336 008c 19       		.uleb128 0x19
 27337 008d 00       		.byte	0
 27338 008e 00       		.byte	0
 27339 008f 0E       		.uleb128 0xe
 27340 0090 13       		.uleb128 0x13
 27341 0091 01       		.byte	0x1
 27342 0092 03       		.uleb128 0x3
 27343 0093 0E       		.uleb128 0xe
 27344 0094 0B       		.uleb128 0xb
 27345 0095 0B       		.uleb128 0xb
 27346 0096 3A       		.uleb128 0x3a
 27347 0097 0B       		.uleb128 0xb
 27348 0098 3B       		.uleb128 0x3b
 27349 0099 0B       		.uleb128 0xb
 27350 009a 01       		.uleb128 0x1
 27351 009b 13       		.uleb128 0x13
 27352 009c 00       		.byte	0
 27353 009d 00       		.byte	0
 27354 009e 0F       		.uleb128 0xf
 27355 009f 0D       		.uleb128 0xd
 27356 00a0 00       		.byte	0
 27357 00a1 03       		.uleb128 0x3
 27358 00a2 08       		.uleb128 0x8
 27359 00a3 3A       		.uleb128 0x3a
 27360 00a4 0B       		.uleb128 0xb
 27361 00a5 3B       		.uleb128 0x3b
 27362 00a6 0B       		.uleb128 0xb
 27363 00a7 49       		.uleb128 0x49
 27364 00a8 13       		.uleb128 0x13
 27365 00a9 38       		.uleb128 0x38
 27366 00aa 0B       		.uleb128 0xb
 27367 00ab 00       		.byte	0
 27368 00ac 00       		.byte	0
 27369 00ad 10       		.uleb128 0x10
 27370 00ae 0D       		.uleb128 0xd
 27371 00af 00       		.byte	0
 27372 00b0 03       		.uleb128 0x3
 27373 00b1 0E       		.uleb128 0xe
 27374 00b2 3A       		.uleb128 0x3a
 27375 00b3 0B       		.uleb128 0xb
 27376 00b4 3B       		.uleb128 0x3b
 27377 00b5 0B       		.uleb128 0xb
 27378 00b6 49       		.uleb128 0x49
 27379 00b7 13       		.uleb128 0x13
 27380 00b8 38       		.uleb128 0x38
 27381 00b9 0B       		.uleb128 0xb
 27382 00ba 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 585


 27383 00bb 00       		.byte	0
 27384 00bc 11       		.uleb128 0x11
 27385 00bd 13       		.uleb128 0x13
 27386 00be 01       		.byte	0x1
 27387 00bf 03       		.uleb128 0x3
 27388 00c0 0E       		.uleb128 0xe
 27389 00c1 0B       		.uleb128 0xb
 27390 00c2 0B       		.uleb128 0xb
 27391 00c3 3A       		.uleb128 0x3a
 27392 00c4 0B       		.uleb128 0xb
 27393 00c5 3B       		.uleb128 0x3b
 27394 00c6 05       		.uleb128 0x5
 27395 00c7 01       		.uleb128 0x1
 27396 00c8 13       		.uleb128 0x13
 27397 00c9 00       		.byte	0
 27398 00ca 00       		.byte	0
 27399 00cb 12       		.uleb128 0x12
 27400 00cc 0D       		.uleb128 0xd
 27401 00cd 00       		.byte	0
 27402 00ce 03       		.uleb128 0x3
 27403 00cf 08       		.uleb128 0x8
 27404 00d0 3A       		.uleb128 0x3a
 27405 00d1 0B       		.uleb128 0xb
 27406 00d2 3B       		.uleb128 0x3b
 27407 00d3 05       		.uleb128 0x5
 27408 00d4 49       		.uleb128 0x49
 27409 00d5 13       		.uleb128 0x13
 27410 00d6 38       		.uleb128 0x38
 27411 00d7 0B       		.uleb128 0xb
 27412 00d8 00       		.byte	0
 27413 00d9 00       		.byte	0
 27414 00da 13       		.uleb128 0x13
 27415 00db 0D       		.uleb128 0xd
 27416 00dc 00       		.byte	0
 27417 00dd 03       		.uleb128 0x3
 27418 00de 0E       		.uleb128 0xe
 27419 00df 3A       		.uleb128 0x3a
 27420 00e0 0B       		.uleb128 0xb
 27421 00e1 3B       		.uleb128 0x3b
 27422 00e2 05       		.uleb128 0x5
 27423 00e3 49       		.uleb128 0x49
 27424 00e4 13       		.uleb128 0x13
 27425 00e5 38       		.uleb128 0x38
 27426 00e6 0B       		.uleb128 0xb
 27427 00e7 00       		.byte	0
 27428 00e8 00       		.byte	0
 27429 00e9 14       		.uleb128 0x14
 27430 00ea 13       		.uleb128 0x13
 27431 00eb 01       		.byte	0x1
 27432 00ec 03       		.uleb128 0x3
 27433 00ed 0E       		.uleb128 0xe
 27434 00ee 0B       		.uleb128 0xb
 27435 00ef 05       		.uleb128 0x5
 27436 00f0 3A       		.uleb128 0x3a
 27437 00f1 0B       		.uleb128 0xb
 27438 00f2 3B       		.uleb128 0x3b
 27439 00f3 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 586


 27440 00f4 01       		.uleb128 0x1
 27441 00f5 13       		.uleb128 0x13
 27442 00f6 00       		.byte	0
 27443 00f7 00       		.byte	0
 27444 00f8 15       		.uleb128 0x15
 27445 00f9 0D       		.uleb128 0xd
 27446 00fa 00       		.byte	0
 27447 00fb 03       		.uleb128 0x3
 27448 00fc 08       		.uleb128 0x8
 27449 00fd 3A       		.uleb128 0x3a
 27450 00fe 0B       		.uleb128 0xb
 27451 00ff 3B       		.uleb128 0x3b
 27452 0100 05       		.uleb128 0x5
 27453 0101 49       		.uleb128 0x49
 27454 0102 13       		.uleb128 0x13
 27455 0103 38       		.uleb128 0x38
 27456 0104 05       		.uleb128 0x5
 27457 0105 00       		.byte	0
 27458 0106 00       		.byte	0
 27459 0107 16       		.uleb128 0x16
 27460 0108 0D       		.uleb128 0xd
 27461 0109 00       		.byte	0
 27462 010a 03       		.uleb128 0x3
 27463 010b 0E       		.uleb128 0xe
 27464 010c 3A       		.uleb128 0x3a
 27465 010d 0B       		.uleb128 0xb
 27466 010e 3B       		.uleb128 0x3b
 27467 010f 05       		.uleb128 0x5
 27468 0110 49       		.uleb128 0x49
 27469 0111 13       		.uleb128 0x13
 27470 0112 38       		.uleb128 0x38
 27471 0113 05       		.uleb128 0x5
 27472 0114 00       		.byte	0
 27473 0115 00       		.byte	0
 27474 0116 17       		.uleb128 0x17
 27475 0117 2E       		.uleb128 0x2e
 27476 0118 01       		.byte	0x1
 27477 0119 03       		.uleb128 0x3
 27478 011a 0E       		.uleb128 0xe
 27479 011b 3A       		.uleb128 0x3a
 27480 011c 0B       		.uleb128 0xb
 27481 011d 3B       		.uleb128 0x3b
 27482 011e 05       		.uleb128 0x5
 27483 011f 27       		.uleb128 0x27
 27484 0120 19       		.uleb128 0x19
 27485 0121 49       		.uleb128 0x49
 27486 0122 13       		.uleb128 0x13
 27487 0123 20       		.uleb128 0x20
 27488 0124 0B       		.uleb128 0xb
 27489 0125 01       		.uleb128 0x1
 27490 0126 13       		.uleb128 0x13
 27491 0127 00       		.byte	0
 27492 0128 00       		.byte	0
 27493 0129 18       		.uleb128 0x18
 27494 012a 05       		.uleb128 0x5
 27495 012b 00       		.byte	0
 27496 012c 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 587


 27497 012d 0E       		.uleb128 0xe
 27498 012e 3A       		.uleb128 0x3a
 27499 012f 0B       		.uleb128 0xb
 27500 0130 3B       		.uleb128 0x3b
 27501 0131 05       		.uleb128 0x5
 27502 0132 49       		.uleb128 0x49
 27503 0133 13       		.uleb128 0x13
 27504 0134 00       		.byte	0
 27505 0135 00       		.byte	0
 27506 0136 19       		.uleb128 0x19
 27507 0137 34       		.uleb128 0x34
 27508 0138 00       		.byte	0
 27509 0139 03       		.uleb128 0x3
 27510 013a 0E       		.uleb128 0xe
 27511 013b 3A       		.uleb128 0x3a
 27512 013c 0B       		.uleb128 0xb
 27513 013d 3B       		.uleb128 0x3b
 27514 013e 05       		.uleb128 0x5
 27515 013f 49       		.uleb128 0x49
 27516 0140 13       		.uleb128 0x13
 27517 0141 00       		.byte	0
 27518 0142 00       		.byte	0
 27519 0143 1A       		.uleb128 0x1a
 27520 0144 2E       		.uleb128 0x2e
 27521 0145 01       		.byte	0x1
 27522 0146 3F       		.uleb128 0x3f
 27523 0147 19       		.uleb128 0x19
 27524 0148 03       		.uleb128 0x3
 27525 0149 0E       		.uleb128 0xe
 27526 014a 3A       		.uleb128 0x3a
 27527 014b 0B       		.uleb128 0xb
 27528 014c 3B       		.uleb128 0x3b
 27529 014d 0B       		.uleb128 0xb
 27530 014e 27       		.uleb128 0x27
 27531 014f 19       		.uleb128 0x19
 27532 0150 11       		.uleb128 0x11
 27533 0151 01       		.uleb128 0x1
 27534 0152 12       		.uleb128 0x12
 27535 0153 06       		.uleb128 0x6
 27536 0154 40       		.uleb128 0x40
 27537 0155 18       		.uleb128 0x18
 27538 0156 9642     		.uleb128 0x2116
 27539 0158 19       		.uleb128 0x19
 27540 0159 01       		.uleb128 0x1
 27541 015a 13       		.uleb128 0x13
 27542 015b 00       		.byte	0
 27543 015c 00       		.byte	0
 27544 015d 1B       		.uleb128 0x1b
 27545 015e 34       		.uleb128 0x34
 27546 015f 00       		.byte	0
 27547 0160 03       		.uleb128 0x3
 27548 0161 0E       		.uleb128 0xe
 27549 0162 3A       		.uleb128 0x3a
 27550 0163 0B       		.uleb128 0xb
 27551 0164 3B       		.uleb128 0x3b
 27552 0165 0B       		.uleb128 0xb
 27553 0166 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 588


 27554 0167 13       		.uleb128 0x13
 27555 0168 02       		.uleb128 0x2
 27556 0169 18       		.uleb128 0x18
 27557 016a 00       		.byte	0
 27558 016b 00       		.byte	0
 27559 016c 1C       		.uleb128 0x1c
 27560 016d 1D       		.uleb128 0x1d
 27561 016e 01       		.byte	0x1
 27562 016f 31       		.uleb128 0x31
 27563 0170 13       		.uleb128 0x13
 27564 0171 11       		.uleb128 0x11
 27565 0172 01       		.uleb128 0x1
 27566 0173 12       		.uleb128 0x12
 27567 0174 06       		.uleb128 0x6
 27568 0175 58       		.uleb128 0x58
 27569 0176 0B       		.uleb128 0xb
 27570 0177 59       		.uleb128 0x59
 27571 0178 0B       		.uleb128 0xb
 27572 0179 01       		.uleb128 0x1
 27573 017a 13       		.uleb128 0x13
 27574 017b 00       		.byte	0
 27575 017c 00       		.byte	0
 27576 017d 1D       		.uleb128 0x1d
 27577 017e 05       		.uleb128 0x5
 27578 017f 00       		.byte	0
 27579 0180 31       		.uleb128 0x31
 27580 0181 13       		.uleb128 0x13
 27581 0182 02       		.uleb128 0x2
 27582 0183 18       		.uleb128 0x18
 27583 0184 00       		.byte	0
 27584 0185 00       		.byte	0
 27585 0186 1E       		.uleb128 0x1e
 27586 0187 0B       		.uleb128 0xb
 27587 0188 01       		.byte	0x1
 27588 0189 11       		.uleb128 0x11
 27589 018a 01       		.uleb128 0x1
 27590 018b 12       		.uleb128 0x12
 27591 018c 06       		.uleb128 0x6
 27592 018d 00       		.byte	0
 27593 018e 00       		.byte	0
 27594 018f 1F       		.uleb128 0x1f
 27595 0190 34       		.uleb128 0x34
 27596 0191 00       		.byte	0
 27597 0192 31       		.uleb128 0x31
 27598 0193 13       		.uleb128 0x13
 27599 0194 02       		.uleb128 0x2
 27600 0195 18       		.uleb128 0x18
 27601 0196 00       		.byte	0
 27602 0197 00       		.byte	0
 27603 0198 20       		.uleb128 0x20
 27604 0199 1D       		.uleb128 0x1d
 27605 019a 01       		.byte	0x1
 27606 019b 31       		.uleb128 0x31
 27607 019c 13       		.uleb128 0x13
 27608 019d 11       		.uleb128 0x11
 27609 019e 01       		.uleb128 0x1
 27610 019f 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 589


 27611 01a0 06       		.uleb128 0x6
 27612 01a1 58       		.uleb128 0x58
 27613 01a2 0B       		.uleb128 0xb
 27614 01a3 59       		.uleb128 0x59
 27615 01a4 0B       		.uleb128 0xb
 27616 01a5 00       		.byte	0
 27617 01a6 00       		.byte	0
 27618 01a7 21       		.uleb128 0x21
 27619 01a8 2E       		.uleb128 0x2e
 27620 01a9 01       		.byte	0x1
 27621 01aa 3F       		.uleb128 0x3f
 27622 01ab 19       		.uleb128 0x19
 27623 01ac 03       		.uleb128 0x3
 27624 01ad 0E       		.uleb128 0xe
 27625 01ae 3A       		.uleb128 0x3a
 27626 01af 0B       		.uleb128 0xb
 27627 01b0 3B       		.uleb128 0x3b
 27628 01b1 05       		.uleb128 0x5
 27629 01b2 27       		.uleb128 0x27
 27630 01b3 19       		.uleb128 0x19
 27631 01b4 11       		.uleb128 0x11
 27632 01b5 01       		.uleb128 0x1
 27633 01b6 12       		.uleb128 0x12
 27634 01b7 06       		.uleb128 0x6
 27635 01b8 40       		.uleb128 0x40
 27636 01b9 18       		.uleb128 0x18
 27637 01ba 9642     		.uleb128 0x2116
 27638 01bc 19       		.uleb128 0x19
 27639 01bd 01       		.uleb128 0x1
 27640 01be 13       		.uleb128 0x13
 27641 01bf 00       		.byte	0
 27642 01c0 00       		.byte	0
 27643 01c1 22       		.uleb128 0x22
 27644 01c2 34       		.uleb128 0x34
 27645 01c3 00       		.byte	0
 27646 01c4 03       		.uleb128 0x3
 27647 01c5 0E       		.uleb128 0xe
 27648 01c6 3A       		.uleb128 0x3a
 27649 01c7 0B       		.uleb128 0xb
 27650 01c8 3B       		.uleb128 0x3b
 27651 01c9 05       		.uleb128 0x5
 27652 01ca 49       		.uleb128 0x49
 27653 01cb 13       		.uleb128 0x13
 27654 01cc 02       		.uleb128 0x2
 27655 01cd 18       		.uleb128 0x18
 27656 01ce 00       		.byte	0
 27657 01cf 00       		.byte	0
 27658 01d0 23       		.uleb128 0x23
 27659 01d1 21       		.uleb128 0x21
 27660 01d2 00       		.byte	0
 27661 01d3 49       		.uleb128 0x49
 27662 01d4 13       		.uleb128 0x13
 27663 01d5 2F       		.uleb128 0x2f
 27664 01d6 05       		.uleb128 0x5
 27665 01d7 00       		.byte	0
 27666 01d8 00       		.byte	0
 27667 01d9 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 590


 27668 01da 05       		.uleb128 0x5
 27669 01db 00       		.byte	0
 27670 01dc 03       		.uleb128 0x3
 27671 01dd 0E       		.uleb128 0xe
 27672 01de 3A       		.uleb128 0x3a
 27673 01df 0B       		.uleb128 0xb
 27674 01e0 3B       		.uleb128 0x3b
 27675 01e1 05       		.uleb128 0x5
 27676 01e2 49       		.uleb128 0x49
 27677 01e3 13       		.uleb128 0x13
 27678 01e4 02       		.uleb128 0x2
 27679 01e5 18       		.uleb128 0x18
 27680 01e6 00       		.byte	0
 27681 01e7 00       		.byte	0
 27682 01e8 25       		.uleb128 0x25
 27683 01e9 34       		.uleb128 0x34
 27684 01ea 00       		.byte	0
 27685 01eb 03       		.uleb128 0x3
 27686 01ec 08       		.uleb128 0x8
 27687 01ed 3A       		.uleb128 0x3a
 27688 01ee 0B       		.uleb128 0xb
 27689 01ef 3B       		.uleb128 0x3b
 27690 01f0 05       		.uleb128 0x5
 27691 01f1 49       		.uleb128 0x49
 27692 01f2 13       		.uleb128 0x13
 27693 01f3 02       		.uleb128 0x2
 27694 01f4 18       		.uleb128 0x18
 27695 01f5 00       		.byte	0
 27696 01f6 00       		.byte	0
 27697 01f7 26       		.uleb128 0x26
 27698 01f8 2E       		.uleb128 0x2e
 27699 01f9 01       		.byte	0x1
 27700 01fa 3F       		.uleb128 0x3f
 27701 01fb 19       		.uleb128 0x19
 27702 01fc 03       		.uleb128 0x3
 27703 01fd 0E       		.uleb128 0xe
 27704 01fe 3A       		.uleb128 0x3a
 27705 01ff 0B       		.uleb128 0xb
 27706 0200 3B       		.uleb128 0x3b
 27707 0201 05       		.uleb128 0x5
 27708 0202 11       		.uleb128 0x11
 27709 0203 01       		.uleb128 0x1
 27710 0204 12       		.uleb128 0x12
 27711 0205 06       		.uleb128 0x6
 27712 0206 40       		.uleb128 0x40
 27713 0207 18       		.uleb128 0x18
 27714 0208 9642     		.uleb128 0x2116
 27715 020a 19       		.uleb128 0x19
 27716 020b 01       		.uleb128 0x1
 27717 020c 13       		.uleb128 0x13
 27718 020d 00       		.byte	0
 27719 020e 00       		.byte	0
 27720 020f 27       		.uleb128 0x27
 27721 0210 2E       		.uleb128 0x2e
 27722 0211 01       		.byte	0x1
 27723 0212 3F       		.uleb128 0x3f
 27724 0213 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 591


 27725 0214 03       		.uleb128 0x3
 27726 0215 0E       		.uleb128 0xe
 27727 0216 3A       		.uleb128 0x3a
 27728 0217 0B       		.uleb128 0xb
 27729 0218 3B       		.uleb128 0x3b
 27730 0219 05       		.uleb128 0x5
 27731 021a 27       		.uleb128 0x27
 27732 021b 19       		.uleb128 0x19
 27733 021c 49       		.uleb128 0x49
 27734 021d 13       		.uleb128 0x13
 27735 021e 11       		.uleb128 0x11
 27736 021f 01       		.uleb128 0x1
 27737 0220 12       		.uleb128 0x12
 27738 0221 06       		.uleb128 0x6
 27739 0222 40       		.uleb128 0x40
 27740 0223 18       		.uleb128 0x18
 27741 0224 9742     		.uleb128 0x2117
 27742 0226 19       		.uleb128 0x19
 27743 0227 01       		.uleb128 0x1
 27744 0228 13       		.uleb128 0x13
 27745 0229 00       		.byte	0
 27746 022a 00       		.byte	0
 27747 022b 28       		.uleb128 0x28
 27748 022c 2E       		.uleb128 0x2e
 27749 022d 01       		.byte	0x1
 27750 022e 3F       		.uleb128 0x3f
 27751 022f 19       		.uleb128 0x19
 27752 0230 03       		.uleb128 0x3
 27753 0231 0E       		.uleb128 0xe
 27754 0232 3A       		.uleb128 0x3a
 27755 0233 0B       		.uleb128 0xb
 27756 0234 3B       		.uleb128 0x3b
 27757 0235 05       		.uleb128 0x5
 27758 0236 27       		.uleb128 0x27
 27759 0237 19       		.uleb128 0x19
 27760 0238 49       		.uleb128 0x49
 27761 0239 13       		.uleb128 0x13
 27762 023a 11       		.uleb128 0x11
 27763 023b 01       		.uleb128 0x1
 27764 023c 12       		.uleb128 0x12
 27765 023d 06       		.uleb128 0x6
 27766 023e 40       		.uleb128 0x40
 27767 023f 18       		.uleb128 0x18
 27768 0240 9642     		.uleb128 0x2116
 27769 0242 19       		.uleb128 0x19
 27770 0243 01       		.uleb128 0x1
 27771 0244 13       		.uleb128 0x13
 27772 0245 00       		.byte	0
 27773 0246 00       		.byte	0
 27774 0247 29       		.uleb128 0x29
 27775 0248 2E       		.uleb128 0x2e
 27776 0249 01       		.byte	0x1
 27777 024a 3F       		.uleb128 0x3f
 27778 024b 19       		.uleb128 0x19
 27779 024c 03       		.uleb128 0x3
 27780 024d 0E       		.uleb128 0xe
 27781 024e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 592


 27782 024f 0B       		.uleb128 0xb
 27783 0250 3B       		.uleb128 0x3b
 27784 0251 05       		.uleb128 0x5
 27785 0252 27       		.uleb128 0x27
 27786 0253 19       		.uleb128 0x19
 27787 0254 11       		.uleb128 0x11
 27788 0255 01       		.uleb128 0x1
 27789 0256 12       		.uleb128 0x12
 27790 0257 06       		.uleb128 0x6
 27791 0258 40       		.uleb128 0x40
 27792 0259 18       		.uleb128 0x18
 27793 025a 9742     		.uleb128 0x2117
 27794 025c 19       		.uleb128 0x19
 27795 025d 01       		.uleb128 0x1
 27796 025e 13       		.uleb128 0x13
 27797 025f 00       		.byte	0
 27798 0260 00       		.byte	0
 27799 0261 2A       		.uleb128 0x2a
 27800 0262 2E       		.uleb128 0x2e
 27801 0263 01       		.byte	0x1
 27802 0264 3F       		.uleb128 0x3f
 27803 0265 19       		.uleb128 0x19
 27804 0266 03       		.uleb128 0x3
 27805 0267 0E       		.uleb128 0xe
 27806 0268 3A       		.uleb128 0x3a
 27807 0269 0B       		.uleb128 0xb
 27808 026a 3B       		.uleb128 0x3b
 27809 026b 05       		.uleb128 0x5
 27810 026c 11       		.uleb128 0x11
 27811 026d 01       		.uleb128 0x1
 27812 026e 12       		.uleb128 0x12
 27813 026f 06       		.uleb128 0x6
 27814 0270 40       		.uleb128 0x40
 27815 0271 18       		.uleb128 0x18
 27816 0272 9742     		.uleb128 0x2117
 27817 0274 19       		.uleb128 0x19
 27818 0275 01       		.uleb128 0x1
 27819 0276 13       		.uleb128 0x13
 27820 0277 00       		.byte	0
 27821 0278 00       		.byte	0
 27822 0279 2B       		.uleb128 0x2b
 27823 027a 0B       		.uleb128 0xb
 27824 027b 01       		.byte	0x1
 27825 027c 11       		.uleb128 0x11
 27826 027d 01       		.uleb128 0x1
 27827 027e 12       		.uleb128 0x12
 27828 027f 06       		.uleb128 0x6
 27829 0280 01       		.uleb128 0x1
 27830 0281 13       		.uleb128 0x13
 27831 0282 00       		.byte	0
 27832 0283 00       		.byte	0
 27833 0284 2C       		.uleb128 0x2c
 27834 0285 2E       		.uleb128 0x2e
 27835 0286 00       		.byte	0
 27836 0287 3F       		.uleb128 0x3f
 27837 0288 19       		.uleb128 0x19
 27838 0289 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 593


 27839 028a 0E       		.uleb128 0xe
 27840 028b 3A       		.uleb128 0x3a
 27841 028c 0B       		.uleb128 0xb
 27842 028d 3B       		.uleb128 0x3b
 27843 028e 05       		.uleb128 0x5
 27844 028f 11       		.uleb128 0x11
 27845 0290 01       		.uleb128 0x1
 27846 0291 12       		.uleb128 0x12
 27847 0292 06       		.uleb128 0x6
 27848 0293 40       		.uleb128 0x40
 27849 0294 18       		.uleb128 0x18
 27850 0295 9642     		.uleb128 0x2116
 27851 0297 19       		.uleb128 0x19
 27852 0298 00       		.byte	0
 27853 0299 00       		.byte	0
 27854 029a 2D       		.uleb128 0x2d
 27855 029b 34       		.uleb128 0x34
 27856 029c 00       		.byte	0
 27857 029d 03       		.uleb128 0x3
 27858 029e 0E       		.uleb128 0xe
 27859 029f 3A       		.uleb128 0x3a
 27860 02a0 0B       		.uleb128 0xb
 27861 02a1 3B       		.uleb128 0x3b
 27862 02a2 05       		.uleb128 0x5
 27863 02a3 49       		.uleb128 0x49
 27864 02a4 13       		.uleb128 0x13
 27865 02a5 3F       		.uleb128 0x3f
 27866 02a6 19       		.uleb128 0x19
 27867 02a7 3C       		.uleb128 0x3c
 27868 02a8 19       		.uleb128 0x19
 27869 02a9 00       		.byte	0
 27870 02aa 00       		.byte	0
 27871 02ab 2E       		.uleb128 0x2e
 27872 02ac 34       		.uleb128 0x34
 27873 02ad 00       		.byte	0
 27874 02ae 03       		.uleb128 0x3
 27875 02af 0E       		.uleb128 0xe
 27876 02b0 3A       		.uleb128 0x3a
 27877 02b1 0B       		.uleb128 0xb
 27878 02b2 3B       		.uleb128 0x3b
 27879 02b3 0B       		.uleb128 0xb
 27880 02b4 49       		.uleb128 0x49
 27881 02b5 13       		.uleb128 0x13
 27882 02b6 3F       		.uleb128 0x3f
 27883 02b7 19       		.uleb128 0x19
 27884 02b8 02       		.uleb128 0x2
 27885 02b9 18       		.uleb128 0x18
 27886 02ba 00       		.byte	0
 27887 02bb 00       		.byte	0
 27888 02bc 00       		.byte	0
 27889              		.section	.debug_aranges,"",%progbits
 27890 0000 6C010000 		.4byte	0x16c
 27891 0004 0200     		.2byte	0x2
 27892 0006 00000000 		.4byte	.Ldebug_info0
 27893 000a 04       		.byte	0x4
 27894 000b 00       		.byte	0
 27895 000c 0000     		.2byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 594


 27896 000e 0000     		.2byte	0
 27897 0010 00000000 		.4byte	.LFB64
 27898 0014 DC040000 		.4byte	.LFE64-.LFB64
 27899 0018 00000000 		.4byte	.LFB65
 27900 001c 22000000 		.4byte	.LFE65-.LFB65
 27901 0020 00000000 		.4byte	.LFB66
 27902 0024 02010000 		.4byte	.LFE66-.LFB66
 27903 0028 00000000 		.4byte	.LFB67
 27904 002c 08200000 		.4byte	.LFE67-.LFB67
 27905 0030 00000000 		.4byte	.LFB68
 27906 0034 08170000 		.4byte	.LFE68-.LFB68
 27907 0038 00000000 		.4byte	.LFB69
 27908 003c 18140000 		.4byte	.LFE69-.LFB69
 27909 0040 00000000 		.4byte	.LFB70
 27910 0044 F40D0000 		.4byte	.LFE70-.LFB70
 27911 0048 00000000 		.4byte	.LFB71
 27912 004c 88000000 		.4byte	.LFE71-.LFB71
 27913 0050 00000000 		.4byte	.LFB72
 27914 0054 581B0000 		.4byte	.LFE72-.LFB72
 27915 0058 00000000 		.4byte	.LFB73
 27916 005c B4030000 		.4byte	.LFE73-.LFB73
 27917 0060 00000000 		.4byte	.LFB74
 27918 0064 E8110000 		.4byte	.LFE74-.LFB74
 27919 0068 00000000 		.4byte	.LFB75
 27920 006c C8000000 		.4byte	.LFE75-.LFB75
 27921 0070 00000000 		.4byte	.LFB76
 27922 0074 30010000 		.4byte	.LFE76-.LFB76
 27923 0078 00000000 		.4byte	.LFB77
 27924 007c 74030000 		.4byte	.LFE77-.LFB77
 27925 0080 00000000 		.4byte	.LFB78
 27926 0084 84000000 		.4byte	.LFE78-.LFB78
 27927 0088 00000000 		.4byte	.LFB79
 27928 008c 88000000 		.4byte	.LFE79-.LFB79
 27929 0090 00000000 		.4byte	.LFB80
 27930 0094 80000000 		.4byte	.LFE80-.LFB80
 27931 0098 00000000 		.4byte	.LFB81
 27932 009c 3E000000 		.4byte	.LFE81-.LFB81
 27933 00a0 00000000 		.4byte	.LFB82
 27934 00a4 2E000000 		.4byte	.LFE82-.LFB82
 27935 00a8 00000000 		.4byte	.LFB83
 27936 00ac 98000000 		.4byte	.LFE83-.LFB83
 27937 00b0 00000000 		.4byte	.LFB84
 27938 00b4 80000000 		.4byte	.LFE84-.LFB84
 27939 00b8 00000000 		.4byte	.LFB85
 27940 00bc 5C000000 		.4byte	.LFE85-.LFB85
 27941 00c0 00000000 		.4byte	.LFB86
 27942 00c4 D0050000 		.4byte	.LFE86-.LFB86
 27943 00c8 00000000 		.4byte	.LFB87
 27944 00cc 30020000 		.4byte	.LFE87-.LFB87
 27945 00d0 00000000 		.4byte	.LFB88
 27946 00d4 B4000000 		.4byte	.LFE88-.LFB88
 27947 00d8 00000000 		.4byte	.LFB89
 27948 00dc B4000000 		.4byte	.LFE89-.LFB89
 27949 00e0 00000000 		.4byte	.LFB90
 27950 00e4 B8000000 		.4byte	.LFE90-.LFB90
 27951 00e8 00000000 		.4byte	.LFB91
 27952 00ec 44020000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 595


 27953 00f0 00000000 		.4byte	.LFB92
 27954 00f4 C0000000 		.4byte	.LFE92-.LFB92
 27955 00f8 00000000 		.4byte	.LFB93
 27956 00fc 5C000000 		.4byte	.LFE93-.LFB93
 27957 0100 00000000 		.4byte	.LFB94
 27958 0104 3C010000 		.4byte	.LFE94-.LFB94
 27959 0108 00000000 		.4byte	.LFB95
 27960 010c B8000000 		.4byte	.LFE95-.LFB95
 27961 0110 00000000 		.4byte	.LFB96
 27962 0114 5C000000 		.4byte	.LFE96-.LFB96
 27963 0118 00000000 		.4byte	.LFB97
 27964 011c 34000000 		.4byte	.LFE97-.LFB97
 27965 0120 00000000 		.4byte	.LFB98
 27966 0124 20000000 		.4byte	.LFE98-.LFB98
 27967 0128 00000000 		.4byte	.LFB99
 27968 012c 6C000000 		.4byte	.LFE99-.LFB99
 27969 0130 00000000 		.4byte	.LFB100
 27970 0134 BC010000 		.4byte	.LFE100-.LFB100
 27971 0138 00000000 		.4byte	.LFB101
 27972 013c 60000000 		.4byte	.LFE101-.LFB101
 27973 0140 00000000 		.4byte	.LFB102
 27974 0144 98050000 		.4byte	.LFE102-.LFB102
 27975 0148 00000000 		.4byte	.LFB103
 27976 014c 8C000000 		.4byte	.LFE103-.LFB103
 27977 0150 00000000 		.4byte	.LFB104
 27978 0154 EC000000 		.4byte	.LFE104-.LFB104
 27979 0158 00000000 		.4byte	.LFB105
 27980 015c 5C000000 		.4byte	.LFE105-.LFB105
 27981 0160 00000000 		.4byte	.LFB106
 27982 0164 C0000000 		.4byte	.LFE106-.LFB106
 27983 0168 00000000 		.4byte	0
 27984 016c 00000000 		.4byte	0
 27985              		.section	.debug_ranges,"",%progbits
 27986              	.Ldebug_ranges0:
 27987 0000 00000000 		.4byte	.LFB64
 27988 0004 DC040000 		.4byte	.LFE64
 27989 0008 00000000 		.4byte	.LFB65
 27990 000c 22000000 		.4byte	.LFE65
 27991 0010 00000000 		.4byte	.LFB66
 27992 0014 02010000 		.4byte	.LFE66
 27993 0018 00000000 		.4byte	.LFB67
 27994 001c 08200000 		.4byte	.LFE67
 27995 0020 00000000 		.4byte	.LFB68
 27996 0024 08170000 		.4byte	.LFE68
 27997 0028 00000000 		.4byte	.LFB69
 27998 002c 18140000 		.4byte	.LFE69
 27999 0030 00000000 		.4byte	.LFB70
 28000 0034 F40D0000 		.4byte	.LFE70
 28001 0038 00000000 		.4byte	.LFB71
 28002 003c 88000000 		.4byte	.LFE71
 28003 0040 00000000 		.4byte	.LFB72
 28004 0044 581B0000 		.4byte	.LFE72
 28005 0048 00000000 		.4byte	.LFB73
 28006 004c B4030000 		.4byte	.LFE73
 28007 0050 00000000 		.4byte	.LFB74
 28008 0054 E8110000 		.4byte	.LFE74
 28009 0058 00000000 		.4byte	.LFB75
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 596


 28010 005c C8000000 		.4byte	.LFE75
 28011 0060 00000000 		.4byte	.LFB76
 28012 0064 30010000 		.4byte	.LFE76
 28013 0068 00000000 		.4byte	.LFB77
 28014 006c 74030000 		.4byte	.LFE77
 28015 0070 00000000 		.4byte	.LFB78
 28016 0074 84000000 		.4byte	.LFE78
 28017 0078 00000000 		.4byte	.LFB79
 28018 007c 88000000 		.4byte	.LFE79
 28019 0080 00000000 		.4byte	.LFB80
 28020 0084 80000000 		.4byte	.LFE80
 28021 0088 00000000 		.4byte	.LFB81
 28022 008c 3E000000 		.4byte	.LFE81
 28023 0090 00000000 		.4byte	.LFB82
 28024 0094 2E000000 		.4byte	.LFE82
 28025 0098 00000000 		.4byte	.LFB83
 28026 009c 98000000 		.4byte	.LFE83
 28027 00a0 00000000 		.4byte	.LFB84
 28028 00a4 80000000 		.4byte	.LFE84
 28029 00a8 00000000 		.4byte	.LFB85
 28030 00ac 5C000000 		.4byte	.LFE85
 28031 00b0 00000000 		.4byte	.LFB86
 28032 00b4 D0050000 		.4byte	.LFE86
 28033 00b8 00000000 		.4byte	.LFB87
 28034 00bc 30020000 		.4byte	.LFE87
 28035 00c0 00000000 		.4byte	.LFB88
 28036 00c4 B4000000 		.4byte	.LFE88
 28037 00c8 00000000 		.4byte	.LFB89
 28038 00cc B4000000 		.4byte	.LFE89
 28039 00d0 00000000 		.4byte	.LFB90
 28040 00d4 B8000000 		.4byte	.LFE90
 28041 00d8 00000000 		.4byte	.LFB91
 28042 00dc 44020000 		.4byte	.LFE91
 28043 00e0 00000000 		.4byte	.LFB92
 28044 00e4 C0000000 		.4byte	.LFE92
 28045 00e8 00000000 		.4byte	.LFB93
 28046 00ec 5C000000 		.4byte	.LFE93
 28047 00f0 00000000 		.4byte	.LFB94
 28048 00f4 3C010000 		.4byte	.LFE94
 28049 00f8 00000000 		.4byte	.LFB95
 28050 00fc B8000000 		.4byte	.LFE95
 28051 0100 00000000 		.4byte	.LFB96
 28052 0104 5C000000 		.4byte	.LFE96
 28053 0108 00000000 		.4byte	.LFB97
 28054 010c 34000000 		.4byte	.LFE97
 28055 0110 00000000 		.4byte	.LFB98
 28056 0114 20000000 		.4byte	.LFE98
 28057 0118 00000000 		.4byte	.LFB99
 28058 011c 6C000000 		.4byte	.LFE99
 28059 0120 00000000 		.4byte	.LFB100
 28060 0124 BC010000 		.4byte	.LFE100
 28061 0128 00000000 		.4byte	.LFB101
 28062 012c 60000000 		.4byte	.LFE101
 28063 0130 00000000 		.4byte	.LFB102
 28064 0134 98050000 		.4byte	.LFE102
 28065 0138 00000000 		.4byte	.LFB103
 28066 013c 8C000000 		.4byte	.LFE103
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 597


 28067 0140 00000000 		.4byte	.LFB104
 28068 0144 EC000000 		.4byte	.LFE104
 28069 0148 00000000 		.4byte	.LFB105
 28070 014c 5C000000 		.4byte	.LFE105
 28071 0150 00000000 		.4byte	.LFB106
 28072 0154 C0000000 		.4byte	.LFE106
 28073 0158 00000000 		.4byte	0
 28074 015c 00000000 		.4byte	0
 28075              		.section	.debug_line,"",%progbits
 28076              	.Ldebug_line0:
 28077 0000 4E1B0000 		.section	.debug_str,"MS",%progbits,1
 28077      0200C001 
 28077      00000201 
 28077      FB0E0D00 
 28077      01010101 
 28078              	.LASF189:
 28079 0000 696E666F 		.ascii	"infoSend\000"
 28079      53656E64 
 28079      00
 28080              	.LASF240:
 28081 0009 69645F73 		.ascii	"id_str\000"
 28081      747200
 28082              	.LASF25:
 28083 0010 73697A65 		.ascii	"sizetype\000"
 28083      74797065 
 28083      00
 28084              	.LASF33:
 28085 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 28085      494E4954 
 28085      5F4D454D 
 28085      00
 28086              	.LASF297:
 28087 0026 676C5F63 		.ascii	"gl_c\000"
 28087      00
 28088              	.LASF62:
 28089 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 28089      545F4D4F 
 28089      44455F45 
 28089      4D475F46 
 28089      4346535F 
 28090              	.LASF36:
 28091 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 28091      41435449 
 28091      56415445 
 28091      00
 28092              	.LASF175:
 28093 0050 75736572 		.ascii	"user\000"
 28093      00
 28094              	.LASF11:
 28095 0055 696E7433 		.ascii	"int32_t\000"
 28095      325F7400 
 28096              	.LASF311:
 28097 005d 675F7278 		.ascii	"g_rx\000"
 28097      00
 28098              	.LASF93:
 28099 0062 73745F64 		.ascii	"st_data\000"
 28099      61746100 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 598


 28100              	.LASF309:
 28101 006a 675F656D 		.ascii	"g_emg_meas\000"
 28101      675F6D65 
 28101      617300
 28102              	.LASF271:
 28103 0075 77726974 		.ascii	"writeStatus\000"
 28103      65537461 
 28103      74757300 
 28104              	.LASF15:
 28105 0081 75696E74 		.ascii	"uint32\000"
 28105      333200
 28106              	.LASF341:
 28107 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 28107      7365745F 
 28107      62617564 
 28107      72617465 
 28107      00
 28108              	.LASF248:
 28109 0099 7370695F 		.ascii	"spi_read_delay_str_len\000"
 28109      72656164 
 28109      5F64656C 
 28109      61795F73 
 28109      74725F6C 
 28110              	.LASF205:
 28111 00b0 7061636B 		.ascii	"packet_lenght\000"
 28111      65745F6C 
 28111      656E6768 
 28111      7400
 28112              	.LASF250:
 28113 00be 70726570 		.ascii	"prepare_generic_info\000"
 28113      6172655F 
 28113      67656E65 
 28113      7269635F 
 28113      696E666F 
 28114              	.LASF129:
 28115 00d3 706F735F 		.ascii	"pos_lim_inf\000"
 28115      6C696D5F 
 28115      696E6600 
 28116              	.LASF215:
 28117 00df 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 28117      4E445F4D 
 28117      4F544F52 
 28117      5F494458 
 28117      00
 28118              	.LASF290:
 28119 00f0 636D645F 		.ascii	"cmd_get_inputs\000"
 28119      6765745F 
 28119      696E7075 
 28119      747300
 28120              	.LASF61:
 28121 00ff 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 28121      545F4D4F 
 28121      44455F45 
 28121      4D475F46 
 28121      43465300 
 28122              	.LASF133:
 28123 0113 63757272 		.ascii	"curr_lookup\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 599


 28123      5F6C6F6F 
 28123      6B757000 
 28124              	.LASF101:
 28125 011f 72657374 		.ascii	"rest_counter\000"
 28125      5F636F75 
 28125      6E746572 
 28125      00
 28126              	.LASF295:
 28127 012c 636D645F 		.ascii	"cmd_get_imu_readings\000"
 28127      6765745F 
 28127      696D755F 
 28127      72656164 
 28127      696E6773 
 28128              	.LASF243:
 28129 0141 69645F73 		.ascii	"id_str_len\000"
 28129      74725F6C 
 28129      656E00
 28130              	.LASF60:
 28131 014c 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 28131      545F4D4F 
 28131      44455F45 
 28131      4D475F49 
 28131      4E544547 
 28132              	.LASF217:
 28133 0164 6D5F746D 		.ascii	"m_tmp\000"
 28133      7000
 28134              	.LASF16:
 28135 016a 696E7438 		.ascii	"int8\000"
 28135      00
 28136              	.LASF194:
 28137 016f 6765745F 		.ascii	"get_param_list\000"
 28137      70617261 
 28137      6D5F6C69 
 28137      737400
 28138              	.LASF294:
 28139 017e 636D645F 		.ascii	"cmd_get_emg\000"
 28139      6765745F 
 28139      656D6700 
 28140              	.LASF148:
 28141 018a 73745F65 		.ascii	"st_emg\000"
 28141      6D6700
 28142              	.LASF99:
 28143 0191 706F7369 		.ascii	"position_hist\000"
 28143      74696F6E 
 28143      5F686973 
 28143      7400
 28144              	.LASF182:
 28145 019f 74656D70 		.ascii	"temp_value\000"
 28145      5F76616C 
 28145      756500
 28146              	.LASF340:
 28147 01aa 72657375 		.ascii	"result\000"
 28147      6C7400
 28148              	.LASF96:
 28149 01b1 72656164 		.ascii	"ready\000"
 28149      7900
 28150              	.LASF145:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 600


 28151 01b7 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 28151      6964785F 
 28151      7573655F 
 28151      666F725F 
 28151      636F6E74 
 28152              	.LASF105:
 28153 01cf 73745F64 		.ascii	"st_device\000"
 28153      65766963 
 28153      6500
 28154              	.LASF59:
 28155 01d9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 28155      545F4D4F 
 28155      44455F45 
 28155      4D475F50 
 28155      524F504F 
 28156              	.LASF110:
 28157 01f5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 28157      326E645F 
 28157      6D6F746F 
 28157      725F666C 
 28157      616700
 28158              	.LASF155:
 28159 0208 72656164 		.ascii	"read_imu_flag\000"
 28159      5F696D75 
 28159      5F666C61 
 28159      6700
 28160              	.LASF315:
 28161 0216 74696D65 		.ascii	"timer_value\000"
 28161      725F7661 
 28161      6C756500 
 28162              	.LASF4:
 28163 0222 6C6F6E67 		.ascii	"long int\000"
 28163      20696E74 
 28163      00
 28164              	.LASF173:
 28165 022b 756E7573 		.ascii	"unused_bytes1\000"
 28165      65645F62 
 28165      79746573 
 28165      3100
 28166              	.LASF109:
 28167 0239 72657365 		.ascii	"reset_counters\000"
 28167      745F636F 
 28167      756E7465 
 28167      727300
 28168              	.LASF165:
 28169 0248 75736572 		.ascii	"user_emg\000"
 28169      5F656D67 
 28169      00
 28170              	.LASF278:
 28171 0251 7365745A 		.ascii	"setZeros\000"
 28171      65726F73 
 28171      00
 28172              	.LASF114:
 28173 025a 756E7573 		.ascii	"unused_bytes\000"
 28173      65645F62 
 28173      79746573 
 28173      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 601


 28174              	.LASF178:
 28175 0267 61636365 		.ascii	"accel_value\000"
 28175      6C5F7661 
 28175      6C756500 
 28176              	.LASF198:
 28177 0273 4E554D5F 		.ascii	"NUM_ITEMS\000"
 28177      4954454D 
 28177      5300
 28178              	.LASF97:
 28179 027d 73745F63 		.ascii	"st_counters\000"
 28179      6F756E74 
 28179      65727300 
 28180              	.LASF221:
 28181 0289 4D454D5F 		.ascii	"MEM_P\000"
 28181      5000
 28182              	.LASF19:
 28183 028f 666C6F61 		.ascii	"float32\000"
 28183      74333200 
 28184              	.LASF301:
 28185 0297 636D645F 		.ascii	"cmd_get_ADC_map\000"
 28185      6765745F 
 28185      4144435F 
 28185      6D617000 
 28186              	.LASF41:
 28187 02a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 28187      4745545F 
 28187      43555252 
 28187      454E5453 
 28187      00
 28188              	.LASF98:
 28189 02b8 656D675F 		.ascii	"emg_counter\000"
 28189      636F756E 
 28189      74657200 
 28190              	.LASF302:
 28191 02c4 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 28191      6765745F 
 28191      4144435F 
 28191      72617700 
 28192              	.LASF230:
 28193 02d4 6175785F 		.ascii	"aux_float2\000"
 28193      666C6F61 
 28193      743200
 28194              	.LASF289:
 28195 02df 636D645F 		.ascii	"cmd_ping\000"
 28195      70696E67 
 28195      00
 28196              	.LASF249:
 28197 02e8 7370695F 		.ascii	"spi_delay_menu_len\000"
 28197      64656C61 
 28197      795F6D65 
 28197      6E755F6C 
 28197      656E00
 28198              	.LASF228:
 28199 02fb 7365745F 		.ascii	"set_custom_param\000"
 28199      63757374 
 28199      6F6D5F70 
 28199      6172616D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 602


 28199      00
 28200              	.LASF0:
 28201 030c 7369676E 		.ascii	"signed char\000"
 28201      65642063 
 28201      68617200 
 28202              	.LASF164:
 28203 0318 75736572 		.ascii	"user_code_string\000"
 28203      5F636F64 
 28203      655F7374 
 28203      72696E67 
 28203      00
 28204              	.LASF183:
 28205 0329 73745F63 		.ascii	"st_calib\000"
 28205      616C6962 
 28205      00
 28206              	.LASF269:
 28207 0332 6D656D53 		.ascii	"memStore\000"
 28207      746F7265 
 28207      00
 28208              	.LASF332:
 28209 033b 73696E67 		.ascii	"single_imu_size\000"
 28209      6C655F69 
 28209      6D755F73 
 28209      697A6500 
 28210              	.LASF68:
 28211 034b 6D6F746F 		.ascii	"motor_supply_type\000"
 28211      725F7375 
 28211      70706C79 
 28211      5F747970 
 28211      6500
 28212              	.LASF323:
 28213 035d 4144435F 		.ascii	"ADC_buf\000"
 28213      62756600 
 28214              	.LASF338:
 28215 0365 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHand-PRO-"
 28215      73657273 
 28215      5C4D6174 
 28215      7469615C 
 28215      446F6375 
 28216 0393 50536F43 		.ascii	"PSoC5\\SoftHand_Pro.cydsn\000"
 28216      355C536F 
 28216      66744861 
 28216      6E645F50 
 28216      726F2E63 
 28217              	.LASF254:
 28218 03ac 73746570 		.ascii	"step\000"
 28218      00
 28219              	.LASF1:
 28220 03b1 756E7369 		.ascii	"unsigned char\000"
 28220      676E6564 
 28220      20636861 
 28220      7200
 28221              	.LASF139:
 28222 03bf 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 28222      72657665 
 28222      72735F6D 
 28222      6F746F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 603


 28222      5F666C61 
 28223              	.LASF305:
 28224 03d5 675F7265 		.ascii	"g_refNew\000"
 28224      664E6577 
 28224      00
 28225              	.LASF108:
 28226 03de 72696768 		.ascii	"right_left\000"
 28226      745F6C65 
 28226      667400
 28227              	.LASF29:
 28228 03e9 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 28228      53544F52 
 28228      455F4445 
 28228      4641554C 
 28228      545F5041 
 28229              	.LASF137:
 28230 0402 656E636F 		.ascii	"encoder_line\000"
 28230      6465725F 
 28230      6C696E65 
 28230      00
 28231              	.LASF244:
 28232 040f 6E5F696D 		.ascii	"n_imu_str_len\000"
 28232      755F7374 
 28232      725F6C65 
 28232      6E00
 28233              	.LASF247:
 28234 041d 696D755F 		.ascii	"imu_table_str_len\000"
 28234      7461626C 
 28234      655F7374 
 28234      725F6C65 
 28234      6E00
 28235              	.LASF267:
 28236 042f 76616C75 		.ascii	"value\000"
 28236      6500
 28237              	.LASF177:
 28238 0435 666C6167 		.ascii	"flags\000"
 28238      7300
 28239              	.LASF242:
 28240 043b 7370695F 		.ascii	"spi_read_delay_str\000"
 28240      72656164 
 28240      5F64656C 
 28240      61795F73 
 28240      747200
 28241              	.LASF37:
 28242 044e 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 28242      4745545F 
 28242      41435449 
 28242      56415445 
 28242      00
 28243              	.LASF22:
 28244 045f 63686172 		.ascii	"char\000"
 28244      00
 28245              	.LASF132:
 28246 0464 6D61785F 		.ascii	"max_step_pos\000"
 28246      73746570 
 28246      5F706F73 
 28246      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 604


 28247              	.LASF273:
 28248 0471 7265745F 		.ascii	"ret_val\000"
 28248      76616C00 
 28249              	.LASF227:
 28250 0479 6D656E75 		.ascii	"menu_idx\000"
 28250      5F696478 
 28250      00
 28251              	.LASF236:
 28252 0482 73746172 		.ascii	"start_byte\000"
 28252      745F6279 
 28252      746500
 28253              	.LASF233:
 28254 048d 6E756D5F 		.ascii	"num_mag_cal_params\000"
 28254      6D61675F 
 28254      63616C5F 
 28254      70617261 
 28254      6D7300
 28255              	.LASF138:
 28256 04a0 70776D5F 		.ascii	"pwm_rate_limiter\000"
 28256      72617465 
 28256      5F6C696D 
 28256      69746572 
 28256      00
 28257              	.LASF118:
 28258 04b1 6B5F645F 		.ascii	"k_d_c\000"
 28258      6300
 28259              	.LASF191:
 28260 04b7 7061636B 		.ascii	"packet_string\000"
 28260      65745F73 
 28260      7472696E 
 28260      6700
 28261              	.LASF143:
 28262 04c5 6D5F6D75 		.ascii	"m_mult\000"
 28262      6C7400
 28263              	.LASF117:
 28264 04cc 6B5F695F 		.ascii	"k_i_c\000"
 28264      6300
 28265              	.LASF270:
 28266 04d2 64697370 		.ascii	"displacement\000"
 28266      6C616365 
 28266      6D656E74 
 28266      00
 28267              	.LASF264:
 28268 04df 64617461 		.ascii	"data_length\000"
 28268      5F6C656E 
 28268      67746800 
 28269              	.LASF130:
 28270 04eb 706F735F 		.ascii	"pos_lim_sup\000"
 28270      6C696D5F 
 28270      73757000 
 28271              	.LASF151:
 28272 04f7 656D675F 		.ascii	"emg_speed\000"
 28272      73706565 
 28272      6400
 28273              	.LASF169:
 28274 0501 72657374 		.ascii	"rest_vel\000"
 28274      5F76656C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 605


 28274      00
 28275              	.LASF204:
 28276 050a 7061636B 		.ascii	"packet_data\000"
 28276      65745F64 
 28276      61746100 
 28277              	.LASF328:
 28278 0516 7046696C 		.ascii	"pFile\000"
 28278      6500
 28279              	.LASF162:
 28280 051c 4144435F 		.ascii	"ADC_conf\000"
 28280      636F6E66 
 28280      00
 28281              	.LASF261:
 28282 0525 636F6D6D 		.ascii	"commWrite\000"
 28282      57726974 
 28282      6500
 28283              	.LASF272:
 28284 052f 70616765 		.ascii	"pages\000"
 28284      7300
 28285              	.LASF276:
 28286 0535 6D656D49 		.ascii	"memInit\000"
 28286      6E697400 
 28287              	.LASF120:
 28288 053d 6B5F695F 		.ascii	"k_i_dl\000"
 28288      646C00
 28289              	.LASF38:
 28290 0544 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 28290      5345545F 
 28290      494E5055 
 28290      545300
 28291              	.LASF94:
 28292 0553 62756666 		.ascii	"buffer\000"
 28292      657200
 28293              	.LASF122:
 28294 055a 6B5F705F 		.ascii	"k_p_c_dl\000"
 28294      635F646C 
 28294      00
 28295              	.LASF279:
 28296 0563 636D645F 		.ascii	"cmd_get_measurements\000"
 28296      6765745F 
 28296      6D656173 
 28296      7572656D 
 28296      656E7473 
 28297              	.LASF186:
 28298 0578 73706565 		.ascii	"speed\000"
 28298      6400
 28299              	.LASF190:
 28300 057e 72785F63 		.ascii	"rx_cmd\000"
 28300      6D6400
 28301              	.LASF83:
 28302 0585 54595045 		.ascii	"TYPE_DOUBLE\000"
 28302      5F444F55 
 28302      424C4500 
 28303              	.LASF307:
 28304 0591 675F6D65 		.ascii	"g_meas\000"
 28304      617300
 28305              	.LASF283:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 606


 28306 0598 6C617374 		.ascii	"last_aux_int16\000"
 28306      5F617578 
 28306      5F696E74 
 28306      313600
 28307              	.LASF72:
 28308 05a7 41434B5F 		.ascii	"ACK_ERROR\000"
 28308      4552524F 
 28308      5200
 28309              	.LASF325:
 28310 05b1 64617461 		.ascii	"data_encoder_raw\000"
 28310      5F656E63 
 28310      6F646572 
 28310      5F726177 
 28310      00
 28311              	.LASF57:
 28312 05c2 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 28312      545F4D4F 
 28312      44455F45 
 28312      58544552 
 28312      4E414C00 
 28313              	.LASF219:
 28314 05d6 696E6465 		.ascii	"index\000"
 28314      7800
 28315              	.LASF170:
 28316 05dc 72657374 		.ascii	"rest_position_flag\000"
 28316      5F706F73 
 28316      6974696F 
 28316      6E5F666C 
 28316      616700
 28317              	.LASF333:
 28318 05ef 675F696D 		.ascii	"g_imu\000"
 28318      7500
 28319              	.LASF123:
 28320 05f5 6B5F695F 		.ascii	"k_i_c_dl\000"
 28320      635F646C 
 28320      00
 28321              	.LASF239:
 28322 05fe 6D61675F 		.ascii	"mag_param_str\000"
 28322      70617261 
 28322      6D5F7374 
 28322      7200
 28323              	.LASF322:
 28324 060c 72657365 		.ascii	"reset_PSoC_flag\000"
 28324      745F5053 
 28324      6F435F66 
 28324      6C616700 
 28325              	.LASF84:
 28326 061c 54595045 		.ascii	"TYPE_STRING\000"
 28326      5F535452 
 28326      494E4700 
 28327              	.LASF67:
 28328 0628 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 28328      5F414E44 
 28328      5F504F53 
 28328      5F434F4E 
 28328      54524F4C 
 28329              	.LASF28:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 607


 28330 063d 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 28330      53544F52 
 28330      455F5041 
 28330      52414D53 
 28330      00
 28331              	.LASF201:
 28332 064e 50415241 		.ascii	"PARAMS_STR\000"
 28332      4D535F53 
 28332      545200
 28333              	.LASF184:
 28334 0659 656E6162 		.ascii	"enabled\000"
 28334      6C656400 
 28335              	.LASF7:
 28336 0661 6C6F6E67 		.ascii	"long unsigned int\000"
 28336      20756E73 
 28336      69676E65 
 28336      6420696E 
 28336      7400
 28337              	.LASF103:
 28338 0673 746F7461 		.ascii	"total_time_on\000"
 28338      6C5F7469 
 28338      6D655F6F 
 28338      6E00
 28339              	.LASF32:
 28340 0681 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 28340      424F4F54 
 28340      4C4F4144 
 28340      455200
 28341              	.LASF281:
 28342 0690 636D645F 		.ascii	"cmd_get_accelerations\000"
 28342      6765745F 
 28342      61636365 
 28342      6C657261 
 28342      74696F6E 
 28343              	.LASF104:
 28344 06a6 746F7461 		.ascii	"total_time_rest\000"
 28344      6C5F7469 
 28344      6D655F72 
 28344      65737400 
 28345              	.LASF193:
 28346 06b6 7374725F 		.ascii	"str_sd_data\000"
 28346      73645F64 
 28346      61746100 
 28347              	.LASF125:
 28348 06c2 61637469 		.ascii	"activ\000"
 28348      7600
 28349              	.LASF203:
 28350 06c8 4D454E55 		.ascii	"MENU_STR\000"
 28350      5F535452 
 28350      00
 28351              	.LASF142:
 28352 06d1 6D5F6F66 		.ascii	"m_off\000"
 28352      6600
 28353              	.LASF73:
 28354 06d7 41434B5F 		.ascii	"ACK_OK\000"
 28354      4F4B00
 28355              	.LASF75:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 608


 28356 06de 54595045 		.ascii	"TYPE_FLAG\000"
 28356      5F464C41 
 28356      4700
 28357              	.LASF181:
 28358 06e8 71756174 		.ascii	"quat_value\000"
 28358      5F76616C 
 28358      756500
 28359              	.LASF235:
 28360 06f3 7061636B 		.ascii	"packet_length\000"
 28360      65745F6C 
 28360      656E6774 
 28360      6800
 28361              	.LASF167:
 28362 0701 72657374 		.ascii	"rest_pos\000"
 28362      5F706F73 
 28362      00
 28363              	.LASF86:
 28364 070a 63757272 		.ascii	"curr\000"
 28364      00
 28365              	.LASF135:
 28366 070f 696E7075 		.ascii	"input_mode\000"
 28366      745F6D6F 
 28366      646500
 28367              	.LASF65:
 28368 071a 434F4E54 		.ascii	"CONTROL_PWM\000"
 28368      524F4C5F 
 28368      50574D00 
 28369              	.LASF43:
 28370 0726 434D445F 		.ascii	"CMD_GET_EMG\000"
 28370      4745545F 
 28370      454D4700 
 28371              	.LASF277:
 28372 0732 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 28372      6E69745F 
 28372      536F6674 
 28372      48616E64 
 28372      50726F00 
 28373              	.LASF31:
 28374 0746 434D445F 		.ascii	"CMD_GET_INFO\000"
 28374      4745545F 
 28374      494E464F 
 28374      00
 28375              	.LASF231:
 28376 0753 6765745F 		.ascii	"get_IMU_param_list\000"
 28376      494D555F 
 28376      70617261 
 28376      6D5F6C69 
 28376      737400
 28377              	.LASF298:
 28378 0766 73696E67 		.ascii	"single_packet\000"
 28378      6C655F70 
 28378      61636B65 
 28378      7400
 28379              	.LASF234:
 28380 0774 66697273 		.ascii	"first_imu_parameter\000"
 28380      745F696D 
 28380      755F7061 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 609


 28380      72616D65 
 28380      74657200 
 28381              	.LASF42:
 28382 0788 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 28382      4745545F 
 28382      43555252 
 28382      5F414E44 
 28382      5F4D4541 
 28383              	.LASF336:
 28384 079e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 28384      43313120 
 28384      352E342E 
 28384      31203230 
 28384      31363036 
 28385 07d1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 28385      20726576 
 28385      6973696F 
 28385      6E203233 
 28385      37373135 
 28386 0804 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 28386      66756E63 
 28386      74696F6E 
 28386      2D736563 
 28386      74696F6E 
 28387              	.LASF88:
 28388 082c 73745F72 		.ascii	"st_ref\000"
 28388      656600
 28389              	.LASF47:
 28390 0833 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 28390      5345545F 
 28390      43554646 
 28390      5F494E50 
 28390      55545300 
 28391              	.LASF166:
 28392 0847 73745F53 		.ascii	"st_SH_spec\000"
 28392      485F7370 
 28392      656300
 28393              	.LASF314:
 28394 0852 63616C69 		.ascii	"calib\000"
 28394      6200
 28395              	.LASF6:
 28396 0858 5F5F7569 		.ascii	"__uint32_t\000"
 28396      6E743332 
 28396      5F7400
 28397              	.LASF8:
 28398 0863 6C6F6E67 		.ascii	"long long int\000"
 28398      206C6F6E 
 28398      6720696E 
 28398      7400
 28399              	.LASF63:
 28400 0871 53485F63 		.ascii	"SH_control_mode\000"
 28400      6F6E7472 
 28400      6F6C5F6D 
 28400      6F646500 
 28401              	.LASF77:
 28402 0881 54595045 		.ascii	"TYPE_UINT8\000"
 28402      5F55494E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 610


 28402      543800
 28403              	.LASF287:
 28404 088c 636D645F 		.ascii	"cmd_get_currents\000"
 28404      6765745F 
 28404      63757272 
 28404      656E7473 
 28404      00
 28405              	.LASF70:
 28406 089d 4D41584F 		.ascii	"MAXON_12V\000"
 28406      4E5F3132 
 28406      5600
 28407              	.LASF321:
 28408 08a7 6368616E 		.ascii	"change_ext_ref_flag\000"
 28408      67655F65 
 28408      78745F72 
 28408      65665F66 
 28408      6C616700 
 28409              	.LASF21:
 28410 08bb 646F7562 		.ascii	"double\000"
 28410      6C6500
 28411              	.LASF141:
 28412 08c2 456E635F 		.ascii	"Enc_raw_read_conf\000"
 28412      7261775F 
 28412      72656164 
 28412      5F636F6E 
 28412      6600
 28413              	.LASF187:
 28414 08d4 72657065 		.ascii	"repetitions\000"
 28414      74697469 
 28414      6F6E7300 
 28415              	.LASF131:
 28416 08e0 6D61785F 		.ascii	"max_step_neg\000"
 28416      73746570 
 28416      5F6E6567 
 28416      00
 28417              	.LASF320:
 28418 08ed 72657365 		.ascii	"reset_last_value_flag\000"
 28418      745F6C61 
 28418      73745F76 
 28418      616C7565 
 28418      5F666C61 
 28419              	.LASF202:
 28420 0903 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 28420      4F4D5F50 
 28420      4152414D 
 28420      5F474554 
 28420      00
 28421              	.LASF20:
 28422 0914 666C6F61 		.ascii	"float\000"
 28422      7400
 28423              	.LASF157:
 28424 091a 494D555F 		.ascii	"IMU_conf\000"
 28424      636F6E66 
 28424      00
 28425              	.LASF220:
 28426 0923 50415241 		.ascii	"PARAM_IDX\000"
 28426      4D5F4944 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 611


 28426      5800
 28427              	.LASF115:
 28428 092d 73745F6D 		.ascii	"st_motor\000"
 28428      6F746F72 
 28428      00
 28429              	.LASF216:
 28430 0936 6D5F6164 		.ascii	"m_addr\000"
 28430      647200
 28431              	.LASF313:
 28432 093d 635F6D65 		.ascii	"c_mem\000"
 28432      6D00
 28433              	.LASF263:
 28434 0943 64617461 		.ascii	"data_array\000"
 28434      5F617272 
 28434      617900
 28435              	.LASF10:
 28436 094e 756E7369 		.ascii	"unsigned int\000"
 28436      676E6564 
 28436      20696E74 
 28436      00
 28437              	.LASF266:
 28438 095b 73656E64 		.ascii	"sendAcknowledgment\000"
 28438      41636B6E 
 28438      6F776C65 
 28438      64676D65 
 28438      6E7400
 28439              	.LASF256:
 28440 096e 70726570 		.ascii	"prepare_SD_legend\000"
 28440      6172655F 
 28440      53445F6C 
 28440      6567656E 
 28440      6400
 28441              	.LASF334:
 28442 0980 4D616743 		.ascii	"MagCal\000"
 28442      616C00
 28443              	.LASF55:
 28444 0987 53485F63 		.ascii	"SH_command\000"
 28444      6F6D6D61 
 28444      6E6400
 28445              	.LASF79:
 28446 0992 54595045 		.ascii	"TYPE_UINT16\000"
 28446      5F55494E 
 28446      54313600 
 28447              	.LASF172:
 28448 099e 666C6167 		.ascii	"flag\000"
 28448      00
 28449              	.LASF282:
 28450 09a3 636D645F 		.ascii	"cmd_set_inputs\000"
 28450      7365745F 
 28450      696E7075 
 28450      747300
 28451              	.LASF136:
 28452 09b2 636F6E74 		.ascii	"control_mode\000"
 28452      726F6C5F 
 28452      6D6F6465 
 28452      00
 28453              	.LASF292:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 612


 28454 09bf 6F66665F 		.ascii	"off_1\000"
 28454      3100
 28455              	.LASF58:
 28456 09c5 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 28456      545F4D4F 
 28456      44455F45 
 28456      4E434F44 
 28456      45523300 
 28457              	.LASF51:
 28458 09d9 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 28458      4745545F 
 28458      454E434F 
 28458      4445525F 
 28458      434F4E46 
 28459              	.LASF154:
 28460 09ee 73745F69 		.ascii	"st_imu\000"
 28460      6D7500
 28461              	.LASF285:
 28462 09f5 636D645F 		.ascii	"cmd_get_activate\000"
 28462      6765745F 
 28462      61637469 
 28462      76617465 
 28462      00
 28463              	.LASF262:
 28464 0a06 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 28464      57726974 
 28464      655F746F 
 28464      5F637566 
 28464      6600
 28465              	.LASF207:
 28466 0a18 73747269 		.ascii	"string_lenght\000"
 28466      6E675F6C 
 28466      656E6768 
 28466      7400
 28467              	.LASF82:
 28468 0a26 54595045 		.ascii	"TYPE_FLOAT\000"
 28468      5F464C4F 
 28468      415400
 28469              	.LASF224:
 28470 0a31 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 28470      4F4D5F50 
 28470      4152414D 
 28470      5F534554 
 28470      5F4C4953 
 28471              	.LASF199:
 28472 0a47 4E554D5F 		.ascii	"NUM_STRUCT\000"
 28472      53545255 
 28472      435400
 28473              	.LASF229:
 28474 0a52 6175785F 		.ascii	"aux_uchar\000"
 28474      75636861 
 28474      7200
 28475              	.LASF92:
 28476 0a5c 6164645F 		.ascii	"add_emg\000"
 28476      656D6700 
 28477              	.LASF78:
 28478 0a64 54595045 		.ascii	"TYPE_INT16\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 613


 28478      5F494E54 
 28478      313600
 28479              	.LASF211:
 28480 0a6f 6175785F 		.ascii	"aux_uint16\000"
 28480      75696E74 
 28480      313600
 28481              	.LASF149:
 28482 0a7a 656D675F 		.ascii	"emg_threshold\000"
 28482      74687265 
 28482      73686F6C 
 28482      6400
 28483              	.LASF46:
 28484 0a88 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 28484      4745545F 
 28484      43555252 
 28484      5F444946 
 28484      4600
 28485              	.LASF100:
 28486 0a9a 63757272 		.ascii	"current_hist\000"
 28486      656E745F 
 28486      68697374 
 28486      00
 28487              	.LASF66:
 28488 0aa7 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 28488      524F4C5F 
 28488      43555252 
 28488      454E5400 
 28489              	.LASF24:
 28490 0ab7 6C6F6E67 		.ascii	"long double\000"
 28490      20646F75 
 28490      626C6500 
 28491              	.LASF81:
 28492 0ac3 54595045 		.ascii	"TYPE_UINT32\000"
 28492      5F55494E 
 28492      54333200 
 28493              	.LASF91:
 28494 0acf 73745F65 		.ascii	"st_emg_meas\000"
 28494      6D675F6D 
 28494      65617300 
 28495              	.LASF196:
 28496 0adb 5641525F 		.ascii	"VAR_P\000"
 28496      5000
 28497              	.LASF223:
 28498 0ae1 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 28498      4F4D5F50 
 28498      4152414D 
 28498      5F474554 
 28498      5F4C4953 
 28499              	.LASF146:
 28500 0af7 6D6F746F 		.ascii	"motor_handle_ratio\000"
 28500      725F6861 
 28500      6E646C65 
 28500      5F726174 
 28500      696F00
 28501              	.LASF265:
 28502 0b0a 63686563 		.ascii	"checksum\000"
 28502      6B73756D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 614


 28502      00
 28503              	.LASF306:
 28504 0b13 675F7265 		.ascii	"g_refOld\000"
 28504      664F6C64 
 28504      00
 28505              	.LASF35:
 28506 0b1c 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 28506      48414E44 
 28506      5F43414C 
 28506      49425241 
 28506      544500
 28507              	.LASF179:
 28508 0b2f 6779726F 		.ascii	"gyro_value\000"
 28508      5F76616C 
 28508      756500
 28509              	.LASF159:
 28510 0b3a 63757272 		.ascii	"curr_time\000"
 28510      5F74696D 
 28510      6500
 28511              	.LASF144:
 28512 0b44 646F7562 		.ascii	"double_encoder_on_off\000"
 28512      6C655F65 
 28512      6E636F64 
 28512      65725F6F 
 28512      6E5F6F66 
 28513              	.LASF156:
 28514 0b5a 5350495F 		.ascii	"SPI_read_delay\000"
 28514      72656164 
 28514      5F64656C 
 28514      617900
 28515              	.LASF71:
 28516 0b69 61636B6E 		.ascii	"acknowledgment_values\000"
 28516      6F776C65 
 28516      64676D65 
 28516      6E745F76 
 28516      616C7565 
 28517              	.LASF214:
 28518 0b7f 4D4F544F 		.ascii	"MOTOR_IDX\000"
 28518      525F4944 
 28518      5800
 28519              	.LASF275:
 28520 0b89 6D656D52 		.ascii	"memRestore\000"
 28520      6573746F 
 28520      726500
 28521              	.LASF237:
 28522 0b94 6E5F696D 		.ascii	"n_imu_str\000"
 28522      755F7374 
 28522      7200
 28523              	.LASF251:
 28524 0b9e 696E666F 		.ascii	"info_string\000"
 28524      5F737472 
 28524      696E6700 
 28525              	.LASF257:
 28526 0baa 70726570 		.ascii	"prepare_SD_info\000"
 28526      6172655F 
 28526      53445F69 
 28526      6E666F00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 615


 28527              	.LASF9:
 28528 0bba 6C6F6E67 		.ascii	"long long unsigned int\000"
 28528      206C6F6E 
 28528      6720756E 
 28528      7369676E 
 28528      65642069 
 28529              	.LASF80:
 28530 0bd1 54595045 		.ascii	"TYPE_INT32\000"
 28530      5F494E54 
 28530      333200
 28531              	.LASF213:
 28532 0bdc 6175785F 		.ascii	"aux_uint32\000"
 28532      75696E74 
 28532      333200
 28533              	.LASF95:
 28534 0be7 6C656E67 		.ascii	"length\000"
 28534      746800
 28535              	.LASF225:
 28536 0bee 55534552 		.ascii	"USER_ID_PARAM\000"
 28536      5F49445F 
 28536      50415241 
 28536      4D00
 28537              	.LASF176:
 28538 0bfc 73745F69 		.ascii	"st_imu_data\000"
 28538      6D755F64 
 28538      61746100 
 28539              	.LASF180:
 28540 0c08 6D61675F 		.ascii	"mag_value\000"
 28540      76616C75 
 28540      6500
 28541              	.LASF87:
 28542 0c12 6F6E6F66 		.ascii	"onoff\000"
 28542      6600
 28543              	.LASF45:
 28544 0c18 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 28544      4745545F 
 28544      41434345 
 28544      4C00
 28545              	.LASF280:
 28546 0c26 636D645F 		.ascii	"cmd_get_velocities\000"
 28546      6765745F 
 28546      76656C6F 
 28546      63697469 
 28546      657300
 28547              	.LASF274:
 28548 0c39 6D656D52 		.ascii	"memRecall\000"
 28548      6563616C 
 28548      6C00
 28549              	.LASF316:
 28550 0c43 74696D65 		.ascii	"timer_value0\000"
 28550      725F7661 
 28550      6C756530 
 28550      00
 28551              	.LASF48:
 28552 0c50 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 28552      5345545F 
 28552      42415544 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 616


 28552      52415445 
 28552      00
 28553              	.LASF116:
 28554 0c61 6B5F705F 		.ascii	"k_p_c\000"
 28554      6300
 28555              	.LASF241:
 28556 0c67 696D755F 		.ascii	"imu_table_str\000"
 28556      7461626C 
 28556      655F7374 
 28556      7200
 28557              	.LASF317:
 28558 0c75 6465765F 		.ascii	"dev_tension\000"
 28558      74656E73 
 28558      696F6E00 
 28559              	.LASF127:
 28560 0c81 6D6F746F 		.ascii	"motor_driver_type\000"
 28560      725F6472 
 28560      69766572 
 28560      5F747970 
 28560      6500
 28561              	.LASF293:
 28562 0c93 6D756C74 		.ascii	"mult_1\000"
 28562      5F3100
 28563              	.LASF23:
 28564 0c9a 72656738 		.ascii	"reg8\000"
 28564      00
 28565              	.LASF259:
 28566 0c9f 636F6D6D 		.ascii	"commWrite_old_id\000"
 28566      57726974 
 28566      655F6F6C 
 28566      645F6964 
 28566      00
 28567              	.LASF218:
 28568 0cb0 6D616E61 		.ascii	"manage_param_list\000"
 28568      67655F70 
 28568      6172616D 
 28568      5F6C6973 
 28568      7400
 28569              	.LASF30:
 28570 0cc2 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 28570      52455354 
 28570      4F52455F 
 28570      50415241 
 28570      4D5300
 28571              	.LASF255:
 28572 0cd5 70726570 		.ascii	"prepare_SD_param_info\000"
 28572      6172655F 
 28572      53445F70 
 28572      6172616D 
 28572      5F696E66 
 28573              	.LASF253:
 28574 0ceb 70726570 		.ascii	"prepare_counter_info\000"
 28574      6172655F 
 28574      636F756E 
 28574      7465725F 
 28574      696E666F 
 28575              	.LASF260:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 617


 28576 0d00 6F6C645F 		.ascii	"old_id\000"
 28576      696400
 28577              	.LASF339:
 28578 0d07 5F5F5245 		.ascii	"__REV16\000"
 28578      56313600 
 28579              	.LASF326:
 28580 0d0f 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 28580      636F6465 
 28580      725F4C69 
 28580      6E655F43 
 28580      6F6E6E65 
 28581              	.LASF113:
 28582 0d28 6465765F 		.ascii	"dev_type\000"
 28582      74797065 
 28582      00
 28583              	.LASF163:
 28584 0d31 73745F75 		.ascii	"st_user\000"
 28584      73657200 
 28585              	.LASF286:
 28586 0d39 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 28586      6765745F 
 28586      63757272 
 28586      5F616E64 
 28586      5F6D6561 
 28587              	.LASF147:
 28588 0d4f 67656172 		.ascii	"gears_params\000"
 28588      735F7061 
 28588      72616D73 
 28588      00
 28589              	.LASF158:
 28590 0d5c 73745F65 		.ascii	"st_expansion\000"
 28590      7870616E 
 28590      73696F6E 
 28590      00
 28591              	.LASF152:
 28592 0d69 656D675F 		.ascii	"emg_calibration_flag\000"
 28592      63616C69 
 28592      62726174 
 28592      696F6E5F 
 28592      666C6167 
 28593              	.LASF89:
 28594 0d7e 73745F6D 		.ascii	"st_meas\000"
 28594      65617300 
 28595              	.LASF54:
 28596 0d86 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 28596      4745545F 
 28596      4144435F 
 28596      52415700 
 28597              	.LASF69:
 28598 0d96 4D41584F 		.ascii	"MAXON_24V\000"
 28598      4E5F3234 
 28598      5600
 28599              	.LASF50:
 28600 0da0 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 28600      4745545F 
 28600      494D555F 
 28600      50415241 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 618


 28600      4D00
 28601              	.LASF52:
 28602 0db2 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 28602      4745545F 
 28602      454E434F 
 28602      4445525F 
 28602      52415700 
 28603              	.LASF291:
 28604 0dc6 636D645F 		.ascii	"cmd_store_params\000"
 28604      73746F72 
 28604      655F7061 
 28604      72616D73 
 28604      00
 28605              	.LASF312:
 28606 0dd7 675F6D65 		.ascii	"g_mem\000"
 28606      6D00
 28607              	.LASF40:
 28608 0ddd 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 28608      4745545F 
 28608      4D454153 
 28608      5552454D 
 28608      454E5453 
 28609              	.LASF300:
 28610 0df2 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 28610      6765745F 
 28610      656E636F 
 28610      6465725F 
 28610      72617700 
 28611              	.LASF13:
 28612 0e06 75696E74 		.ascii	"uint8\000"
 28612      3800
 28613              	.LASF188:
 28614 0e0c 636F6D6D 		.ascii	"commProcess\000"
 28614      50726F63 
 28614      65737300 
 28615              	.LASF2:
 28616 0e18 73686F72 		.ascii	"short int\000"
 28616      7420696E 
 28616      7400
 28617              	.LASF245:
 28618 0e22 6964735F 		.ascii	"ids_str_len\000"
 28618      7374725F 
 28618      6C656E00 
 28619              	.LASF121:
 28620 0e2e 6B5F645F 		.ascii	"k_d_dl\000"
 28620      646C00
 28621              	.LASF206:
 28622 0e35 6964785F 		.ascii	"idx_menu\000"
 28622      6D656E75 
 28622      00
 28623              	.LASF174:
 28624 0e3e 6D6F746F 		.ascii	"motor\000"
 28624      7200
 28625              	.LASF329:
 28626 0e44 4E5F494D 		.ascii	"N_IMU_Connected\000"
 28626      555F436F 
 28626      6E6E6563 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 619


 28626      74656400 
 28627              	.LASF39:
 28628 0e54 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 28628      4745545F 
 28628      494E5055 
 28628      545300
 28629              	.LASF106:
 28630 0e63 68775F6D 		.ascii	"hw_maint_date\000"
 28630      61696E74 
 28630      5F646174 
 28630      6500
 28631              	.LASF238:
 28632 0e71 6964735F 		.ascii	"ids_str\000"
 28632      73747200 
 28633              	.LASF53:
 28634 0e79 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 28634      4745545F 
 28634      4144435F 
 28634      434F4E46 
 28634      00
 28635              	.LASF27:
 28636 0e8a 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 28636      5345545F 
 28636      5A45524F 
 28636      5300
 28637              	.LASF246:
 28638 0e98 6D61675F 		.ascii	"mag_param_str_len\000"
 28638      70617261 
 28638      6D5F7374 
 28638      725F6C65 
 28638      6E00
 28639              	.LASF232:
 28640 0eaa 6E756D5F 		.ascii	"num_imus_id_params\000"
 28640      696D7573 
 28640      5F69645F 
 28640      70617261 
 28640      6D7300
 28641              	.LASF210:
 28642 0ebd 6175785F 		.ascii	"aux_int16\000"
 28642      696E7431 
 28642      3600
 28643              	.LASF335:
 28644 0ec7 45455052 		.ascii	"EEPROM_ADDR\000"
 28644      4F4D5F41 
 28644      44445200 
 28645              	.LASF107:
 28646 0ed3 73746174 		.ascii	"stats_period_begin_date\000"
 28646      735F7065 
 28646      72696F64 
 28646      5F626567 
 28646      696E5F64 
 28647              	.LASF331:
 28648 0eeb 696D7573 		.ascii	"imus_data_size\000"
 28648      5F646174 
 28648      615F7369 
 28648      7A6500
 28649              	.LASF303:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 620


 28650 0efa 49544D5F 		.ascii	"ITM_RxBuffer\000"
 28650      52784275 
 28650      66666572 
 28650      00
 28651              	.LASF44:
 28652 0f07 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 28652      4745545F 
 28652      56454C4F 
 28652      43495449 
 28652      455300
 28653              	.LASF319:
 28654 0f1a 706F775F 		.ascii	"pow_tension\000"
 28654      74656E73 
 28654      696F6E00 
 28655              	.LASF34:
 28656 0f26 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 28656      4745545F 
 28656      50415241 
 28656      4D5F4C49 
 28656      535400
 28657              	.LASF74:
 28658 0f39 64617461 		.ascii	"data_types\000"
 28658      5F747970 
 28658      657300
 28659              	.LASF17:
 28660 0f44 696E7431 		.ascii	"int16\000"
 28660      3600
 28661              	.LASF160:
 28662 0f4a 72656164 		.ascii	"read_exp_port_flag\000"
 28662      5F657870 
 28662      5F706F72 
 28662      745F666C 
 28662      616700
 28663              	.LASF153:
 28664 0f5d 73776974 		.ascii	"switch_emg\000"
 28664      63685F65 
 28664      6D6700
 28665              	.LASF126:
 28666 0f68 61637469 		.ascii	"activate_pwm_rescaling\000"
 28666      76617465 
 28666      5F70776D 
 28666      5F726573 
 28666      63616C69 
 28667              	.LASF119:
 28668 0f7f 6B5F705F 		.ascii	"k_p_dl\000"
 28668      646C00
 28669              	.LASF90:
 28670 0f86 65737469 		.ascii	"estim_curr\000"
 28670      6D5F6375 
 28670      727200
 28671              	.LASF318:
 28672 0f91 6465765F 		.ascii	"dev_pwm_limit\000"
 28672      70776D5F 
 28672      6C696D69 
 28672      7400
 28673              	.LASF161:
 28674 0f9f 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 621


 28674      5F414443 
 28674      5F73656E 
 28674      736F7273 
 28674      5F706F72 
 28675              	.LASF327:
 28676 0fba 456E636F 		.ascii	"Encoder_Value\000"
 28676      6465725F 
 28676      56616C75 
 28676      6500
 28677              	.LASF299:
 28678 0fc8 636D645F 		.ascii	"cmd_get_encoder_map\000"
 28678      6765745F 
 28678      656E636F 
 28678      6465725F 
 28678      6D617000 
 28679              	.LASF112:
 28680 0fdc 75736572 		.ascii	"user_id\000"
 28680      5F696400 
 28681              	.LASF12:
 28682 0fe4 75696E74 		.ascii	"uint32_t\000"
 28682      33325F74 
 28682      00
 28683              	.LASF209:
 28684 0fed 6175785F 		.ascii	"aux_float\000"
 28684      666C6F61 
 28684      7400
 28685              	.LASF330:
 28686 0ff7 494D555F 		.ascii	"IMU_connected\000"
 28686      636F6E6E 
 28686      65637465 
 28686      6400
 28687              	.LASF200:
 28688 1005 4E554D5F 		.ascii	"NUM_MENU\000"
 28688      4D454E55 
 28688      00
 28689              	.LASF212:
 28690 100e 6175785F 		.ascii	"aux_int32\000"
 28690      696E7433 
 28690      3200
 28691              	.LASF111:
 28692 1018 62617564 		.ascii	"baud_rate\000"
 28692      5F726174 
 28692      6500
 28693              	.LASF288:
 28694 1022 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 28694      6765745F 
 28694      63757272 
 28694      656E7473 
 28694      5F666F72 
 28695              	.LASF195:
 28696 103c 696E666F 		.ascii	"info_type\000"
 28696      5F747970 
 28696      6500
 28697              	.LASF49:
 28698 1046 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 28698      4745545F 
 28698      494D555F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 622


 28698      52454144 
 28698      494E4753 
 28699              	.LASF268:
 28700 105b 4C435243 		.ascii	"LCRChecksum\000"
 28700      6865636B 
 28700      73756D00 
 28701              	.LASF296:
 28702 1067 6B5F696D 		.ascii	"k_imu\000"
 28702      7500
 28703              	.LASF3:
 28704 106d 73686F72 		.ascii	"short unsigned int\000"
 28704      7420756E 
 28704      7369676E 
 28704      65642069 
 28704      6E7400
 28705              	.LASF140:
 28706 1080 73745F65 		.ascii	"st_encoder\000"
 28706      6E636F64 
 28706      657200
 28707              	.LASF252:
 28708 108b 454E435F 		.ascii	"ENC_L\000"
 28708      4C00
 28709              	.LASF171:
 28710 1091 73745F65 		.ascii	"st_eeprom\000"
 28710      6570726F 
 28710      6D00
 28711              	.LASF197:
 28712 109b 54595045 		.ascii	"TYPES\000"
 28712      5300
 28713              	.LASF304:
 28714 10a1 675F7265 		.ascii	"g_ref\000"
 28714      6600
 28715              	.LASF18:
 28716 10a7 696E7433 		.ascii	"int32\000"
 28716      3200
 28717              	.LASF324:
 28718 10ad 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 28718      4F465F41 
 28718      4E414C4F 
 28718      475F494E 
 28718      50555453 
 28719              	.LASF192:
 28720 10c2 696E666F 		.ascii	"infoGet\000"
 28720      47657400 
 28721              	.LASF85:
 28722 10ca 46535F46 		.ascii	"FS_FILE\000"
 28722      494C4500 
 28723              	.LASF128:
 28724 10d2 706F735F 		.ascii	"pos_lim_flag\000"
 28724      6C696D5F 
 28724      666C6167 
 28724      00
 28725              	.LASF308:
 28726 10df 675F6D65 		.ascii	"g_measOld\000"
 28726      61734F6C 
 28726      6400
 28727              	.LASF64:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 623


 28728 10e9 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 28728      524F4C5F 
 28728      414E474C 
 28728      4500
 28729              	.LASF284:
 28730 10f7 636D645F 		.ascii	"cmd_activate\000"
 28730      61637469 
 28730      76617465 
 28730      00
 28731              	.LASF5:
 28732 1104 5F5F696E 		.ascii	"__int32_t\000"
 28732      7433325F 
 28732      7400
 28733              	.LASF222:
 28734 110e 7370695F 		.ascii	"spi_delay_menu\000"
 28734      64656C61 
 28734      795F6D65 
 28734      6E7500
 28735              	.LASF102:
 28736 111d 77697265 		.ascii	"wire_disp\000"
 28736      5F646973 
 28736      7000
 28737              	.LASF150:
 28738 1127 656D675F 		.ascii	"emg_max_value\000"
 28738      6D61785F 
 28738      76616C75 
 28738      6500
 28739              	.LASF226:
 28740 1135 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 28740      4F4D5F50 
 28740      4152414D 
 28740      5F534554 
 28740      00
 28741              	.LASF337:
 28742 1146 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 28742      72635C63 
 28742      6F6D6D61 
 28742      6E645F70 
 28742      726F6365 
 28743              	.LASF134:
 28744 1162 63757272 		.ascii	"current_limit\000"
 28744      656E745F 
 28744      6C696D69 
 28744      7400
 28745              	.LASF56:
 28746 1170 53485F69 		.ascii	"SH_input_mode\000"
 28746      6E707574 
 28746      5F6D6F64 
 28746      6500
 28747              	.LASF76:
 28748 117e 54595045 		.ascii	"TYPE_INT8\000"
 28748      5F494E54 
 28748      3800
 28749              	.LASF258:
 28750 1188 494D555F 		.ascii	"IMU_reading_info\000"
 28750      72656164 
 28750      696E675F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccUG2CBJ.s 			page 624


 28750      696E666F 
 28750      00
 28751              	.LASF14:
 28752 1199 75696E74 		.ascii	"uint16\000"
 28752      313600
 28753              	.LASF310:
 28754 11a0 675F656D 		.ascii	"g_emg_measOld\000"
 28754      675F6D65 
 28754      61734F6C 
 28754      6400
 28755              	.LASF168:
 28756 11ae 72657374 		.ascii	"rest_delay\000"
 28756      5F64656C 
 28756      617900
 28757              	.LASF208:
 28758 11b9 6175785F 		.ascii	"aux_str\000"
 28758      73747200 
 28759              	.LASF26:
 28760 11c1 434D445F 		.ascii	"CMD_PING\000"
 28760      50494E47 
 28760      00
 28761              	.LASF124:
 28762 11ca 6B5F645F 		.ascii	"k_d_c_dl\000"
 28762      635F646C 
 28762      00
 28763              	.LASF185:
 28764 11d3 64697265 		.ascii	"direction\000"
 28764      6374696F 
 28764      6E00
 28765              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
