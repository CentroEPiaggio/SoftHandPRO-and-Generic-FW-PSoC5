ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             
 221:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 221 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 221 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 222:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 222 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 223:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 223 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 224:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 224 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 225:..\src/command_processing.c ****                 break;
 501              		.loc 1 225 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 226:..\src/command_processing.c ****             }
 227:..\src/command_processing.c ****             // Speed & repetitions saturations
 228:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 228 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 229:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 229 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 28


 514              	.L43:
 230:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 230 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 231:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 231 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 233 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 234:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 234 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 235:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 236:..\src/command_processing.c ****                 calib.repetitions = 32767;
 237:..\src/command_processing.c ****             }
 238:..\src/command_processing.c ****             
 239:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 535              		.loc 1 239 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 240:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 240 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 241:..\src/command_processing.c ****          
 242:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 242 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 243:..\src/command_processing.c ****             break;
 546              		.loc 1 243 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 246:..\src/command_processing.c **** 
 247:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 248:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 248 0
 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 249:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 29


 551              		.loc 1 249 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 254:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 254 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 254 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 255:..\src/command_processing.c ****             break;             
 577              		.loc 1 255 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 260:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 260 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 261:..\src/command_processing.c ****             break; 
 582              		.loc 1 261 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 266:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 266 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b4 06E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 272:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 272 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c ****             
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 278:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 278 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c ****             
 282:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 283:..\src/command_processing.c ****         default:
 284:..\src/command_processing.c ****             break;
 600              		.loc 1 284 0
 601 04c2 00BF     		nop
 602              	.L1:
 285:..\src/command_processing.c **** 
 286:..\src/command_processing.c ****     }
 287:..\src/command_processing.c **** }  
 603              		.loc 1 287 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
 625              		.type	infoSend, %function
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 31


 626              	infoSend:
 627              	.LFB65:
 288:..\src/command_processing.c **** 
 289:..\src/command_processing.c **** //==============================================================================
 290:..\src/command_processing.c **** //                                                                     INFO SEND
 291:..\src/command_processing.c **** //==============================================================================
 292:..\src/command_processing.c **** 
 293:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 293 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 294:..\src/command_processing.c ****     char packet_string[1500];
 295:..\src/command_processing.c ****     
 296:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 296 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 297:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 297 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c **** }
 648              		.loc 1 298 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 299:..\src/command_processing.c **** 
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** //==============================================================================
 302:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 303:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 32


 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 305 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 24008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF5BB4D 		sub	sp, sp, #23936
 676              		.cfi_def_cfa_offset 23944
 677 0006 92B0     		sub	sp, sp, #72
 678              		.cfi_def_cfa_offset 24016
 679 0008 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 000a 0246     		mov	r2, r0
 682 000c 07F14803 		add	r3, r7, #72
 683 0010 423B     		subs	r3, r3, #66
 684 0012 1A80     		strh	r2, [r3]	@ movhi
 306:..\src/command_processing.c ****     char packet_string[4000] = "";
 685              		.loc 1 306 0
 686 0014 07F59C43 		add	r3, r7, #19968
 687 0018 03F12803 		add	r3, r3, #40
 688 001c 0022     		movs	r2, #0
 689 001e 1A60     		str	r2, [r3]
 690 0020 0433     		adds	r3, r3, #4
 691 0022 40F69C72 		movw	r2, #3996
 692 0026 0021     		movs	r1, #0
 693 0028 1846     		mov	r0, r3
 694 002a FFF7FEFF 		bl	memset
 307:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 695              		.loc 1 307 0
 696 002e 07F14803 		add	r3, r7, #72
 697 0032 403B     		subs	r3, r3, #64
 698 0034 0022     		movs	r2, #0
 699 0036 1A60     		str	r2, [r3]
 700 0038 0433     		adds	r3, r3, #4
 701 003a 44F61C62 		movw	r2, #19996
 702 003e 0021     		movs	r1, #0
 703 0040 1846     		mov	r0, r3
 704 0042 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 309:..\src/command_processing.c **** 
 310:..\src/command_processing.c ****     switch (info_type) {
 705              		.loc 1 310 0
 706 0046 07F14803 		add	r3, r7, #72
 707 004a 423B     		subs	r3, r3, #66
 708 004c 1B88     		ldrh	r3, [r3]
 709 004e 032B     		cmp	r3, #3
 710 0050 50D8     		bhi	.L61
 711 0052 01A2     		adr	r2, .L56
 712 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 713              		.p2align 2
 714              	.L56:
 715 0058 69000000 		.word	.L55+1
 716 005c 8B000000 		.word	.L57+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 33


 717 0060 AD000000 		.word	.L58+1
 718 0064 D3000000 		.word	.L59+1
 719              		.p2align 1
 720              	.L55:
 311:..\src/command_processing.c ****         case INFO_ALL:
 312:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 721              		.loc 1 312 0
 722 0068 07F59C43 		add	r3, r7, #19968
 723 006c 03F12803 		add	r3, r3, #40
 724 0070 1846     		mov	r0, r3
 725 0072 FFF7FEFF 		bl	prepare_generic_info
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 726              		.loc 1 313 0
 727 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 728              		.loc 1 314 0
 729 007a 07F59C43 		add	r3, r7, #19968
 730 007e 03F12803 		add	r3, r3, #40
 731 0082 1846     		mov	r0, r3
 732 0084 FFF7FEFF 		bl	UART_RS485_PutString
 315:..\src/command_processing.c ****             break;
 733              		.loc 1 315 0
 734 0088 35E0     		b	.L60
 735              	.L57:
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 317:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 736              		.loc 1 317 0
 737 008a 07F59C43 		add	r3, r7, #19968
 738 008e 03F12803 		add	r3, r3, #40
 739 0092 1846     		mov	r0, r3
 740 0094 FFF7FEFF 		bl	prepare_counter_info
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 741              		.loc 1 318 0
 742 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 743              		.loc 1 319 0
 744 009c 07F59C43 		add	r3, r7, #19968
 745 00a0 03F12803 		add	r3, r3, #40
 746 00a4 1846     		mov	r0, r3
 747 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 320:..\src/command_processing.c ****             break;
 748              		.loc 1 320 0
 749 00aa 24E0     		b	.L60
 750              	.L58:
 321:..\src/command_processing.c ****         case GET_SD_PARAM:
 322:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
 751              		.loc 1 322 0
 752 00ac 07F59C43 		add	r3, r7, #19968
 753 00b0 03F12803 		add	r3, r3, #40
 754 00b4 4FF47A61 		mov	r1, #4000
 755 00b8 1846     		mov	r0, r3
 756 00ba FFF7FEFF 		bl	Read_SD_Param
 323:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 757              		.loc 1 323 0
 758 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 324:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 759              		.loc 1 324 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 34


 760 00c2 07F59C43 		add	r3, r7, #19968
 761 00c6 03F12803 		add	r3, r3, #40
 762 00ca 1846     		mov	r0, r3
 763 00cc FFF7FEFF 		bl	UART_RS485_PutString
 325:..\src/command_processing.c ****             break;
 764              		.loc 1 325 0
 765 00d0 11E0     		b	.L60
 766              	.L59:
 326:..\src/command_processing.c ****         case GET_SD_DATA:
 327:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 767              		.loc 1 327 0
 768 00d2 07F14803 		add	r3, r7, #72
 769 00d6 403B     		subs	r3, r3, #64
 770 00d8 44F62061 		movw	r1, #20000
 771 00dc 1846     		mov	r0, r3
 772 00de FFF7FEFF 		bl	Read_SD_Data
 328:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 773              		.loc 1 328 0
 774 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 329:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 775              		.loc 1 329 0
 776 00e6 07F14803 		add	r3, r7, #72
 777 00ea 403B     		subs	r3, r3, #64
 778 00ec 1846     		mov	r0, r3
 779 00ee FFF7FEFF 		bl	UART_RS485_PutString
 330:..\src/command_processing.c **** 
 331:..\src/command_processing.c ****             break;
 780              		.loc 1 331 0
 781 00f2 00E0     		b	.L60
 782              	.L61:
 332:..\src/command_processing.c ****         default:
 333:..\src/command_processing.c ****             break;
 783              		.loc 1 333 0
 784 00f4 00BF     		nop
 785              	.L60:
 334:..\src/command_processing.c ****     }
 335:..\src/command_processing.c **** }
 786              		.loc 1 335 0 discriminator 1
 787 00f6 00BF     		nop
 788 00f8 07F5BB47 		add	r7, r7, #23936
 789 00fc 4837     		adds	r7, r7, #72
 790              		.cfi_def_cfa_offset 8
 791 00fe BD46     		mov	sp, r7
 792              		.cfi_def_cfa_register 13
 793              		@ sp needed
 794 0100 80BD     		pop	{r7, pc}
 795              		.cfi_endproc
 796              	.LFE66:
 797              		.size	infoGet, .-infoGet
 798              		.global	__aeabi_i2f
 799              		.global	__aeabi_fdiv
 800 0102 00BF     		.section	.rodata
 801              		.align	2
 802              	.LC76:
 803 0000 20557362 		.ascii	" Usb\000"
 803      00
 804 0005 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 35


 805              	.LC77:
 806 0008 2048616E 		.ascii	" Handle\000"
 806      646C6500 
 807              		.align	2
 808              	.LC78:
 809 0010 20454D47 		.ascii	" EMG proportional\000"
 809      2070726F 
 809      706F7274 
 809      696F6E61 
 809      6C00
 810 0022 0000     		.align	2
 811              	.LC79:
 812 0024 20454D47 		.ascii	" EMG integral\000"
 812      20696E74 
 812      65677261 
 812      6C00
 813 0032 0000     		.align	2
 814              	.LC80:
 815 0034 20454D47 		.ascii	" EMG FCFS\000"
 815      20464346 
 815      5300
 816 003e 0000     		.align	2
 817              	.LC81:
 818 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 818      20464346 
 818      53204164 
 818      76616E63 
 818      656400
 819 0053 00       		.align	2
 820              	.LC82:
 821 0054 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 821      2070726F 
 821      706F7274 
 821      696F6E61 
 821      6C204E6F 
 822 0076 0000     		.align	2
 823              	.LC83:
 824 0078 20506F73 		.ascii	" Position\000"
 824      6974696F 
 824      6E00
 825 0082 0000     		.align	2
 826              	.LC84:
 827 0084 2050574D 		.ascii	" PWM\000"
 827      00
 828 0089 000000   		.align	2
 829              	.LC85:
 830 008c 20437572 		.ascii	" Current\000"
 830      72656E74 
 830      00
 831 0095 000000   		.align	2
 832              	.LC86:
 833 0098 20506F73 		.ascii	" Position and Current\000"
 833      6974696F 
 833      6E20616E 
 833      64204375 
 833      7272656E 
 834 00ae 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 36


 835              	.LC87:
 836 00b0 20594553 		.ascii	" YES\000\000"
 836      0000
 837 00b6 0000     		.align	2
 838              	.LC88:
 839 00b8 204E4F00 		.ascii	" NO\000\000"
 839      00
 840 00bd 000000   		.align	2
 841              	.LC89:
 842 00c0 20526967 		.ascii	" Right\000\000"
 842      68740000 
 843              		.align	2
 844              	.LC90:
 845 00c8 204C6566 		.ascii	" Left\000\000"
 845      740000
 846 00cf 00       		.align	2
 847              	.LC91:
 848 00d0 204F4646 		.ascii	" OFF\000\000"
 848      0000
 849 00d6 0000     		.align	2
 850              	.LC92:
 851 00d8 204F4E00 		.ascii	" ON\000\000"
 851      00
 852 00dd 000000   		.align	2
 853              	.LC93:
 854 00e0 204E6F6E 		.ascii	" None\000\000"
 854      650000
 855 00e7 00       		.align	2
 856              	.LC94:
 857 00e8 2053442F 		.ascii	" SD/RTC board\000\000"
 857      52544320 
 857      626F6172 
 857      640000
 858 00f7 00       		.align	2
 859              	.LC95:
 860 00f8 20576946 		.ascii	" WiFi board [N/A]\000\000"
 860      6920626F 
 860      61726420 
 860      5B4E2F41 
 860      5D0000
 861 010b 00       		.align	2
 862              	.LC96:
 863 010c 204F7468 		.ascii	" Other [N/A]\000\000"
 863      6572205B 
 863      4E2F415D 
 863      0000
 864 011a 0000     		.align	2
 865              	.LC97:
 866 011c 204C6F77 		.ascii	" Low\000\000"
 866      0000
 867 0122 0000     		.align	2
 868              	.LC98:
 869 0124 20486967 		.ascii	" High\000\000"
 869      680000
 870 012b 00       		.align	2
 871              	.LC99:
 872 012c 2047454E 		.ascii	" GENERIC USER\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 37


 872      45524943 
 872      20555345 
 872      520000
 873 013b 00       		.align	2
 874              	.LC100:
 875 013c 204D4152 		.ascii	" MARIA\000\000"
 875      49410000 
 876              		.align	2
 877              	.LC101:
 878 0144 20524F5A 		.ascii	" ROZA\000\000"
 878      410000
 879 014b 00       		.align	2
 880              	.LC102:
 881 014c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 881      33383837 
 881      20285374 
 881      616E6461 
 881      72642900 
 882 0161 000000   		.align	2
 883              	.LC103:
 884 0164 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 884      35303139 
 884      20284869 
 884      67682070 
 884      6F776572 
 885 017b 00       		.align	2
 886              	.LC104:
 887 017c 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 887      5448414E 
 887      44205052 
 887      4F0000
 888 018b 00       		.align	2
 889              	.LC105:
 890 018c 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 890      45524943 
 890      2032204D 
 890      4F544F52 
 890      530000
 891              		.section	.text.get_param_list,"ax",%progbits
 892              		.align	2
 893              		.global	get_param_list
 894              		.thumb
 895              		.thumb_func
 896              		.type	get_param_list, %function
 897              	get_param_list:
 898              	.LFB67:
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c **** //==============================================================================
 339:..\src/command_processing.c **** //                                                                GET PARAM LIST
 340:..\src/command_processing.c **** //==============================================================================
 341:..\src/command_processing.c **** 
 342:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 343:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 344:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 345:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 899              		.loc 1 345 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 38


 900              		.cfi_startproc
 901              		@ args = 16, pretend = 0, frame = 3160
 902              		@ frame_needed = 1, uses_anonymous_args = 0
 903 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 904              		.cfi_def_cfa_offset 20
 905              		.cfi_offset 4, -20
 906              		.cfi_offset 5, -16
 907              		.cfi_offset 6, -12
 908              		.cfi_offset 7, -8
 909              		.cfi_offset 14, -4
 910 0002 ADF65C4D 		subw	sp, sp, #3164
 911              		.cfi_def_cfa_offset 3184
 912 0006 00AF     		add	r7, sp, #0
 913              		.cfi_def_cfa_register 7
 914 0008 07F10C04 		add	r4, r7, #12
 915 000c 2060     		str	r0, [r4]
 916 000e 07F10800 		add	r0, r7, #8
 917 0012 0160     		str	r1, [r0]
 918 0014 391D     		adds	r1, r7, #4
 919 0016 0A60     		str	r2, [r1]
 920 0018 3A46     		mov	r2, r7
 921 001a 1360     		str	r3, [r2]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     //Package to be sent variables
 348:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 922              		.loc 1 348 0
 923 001c 07F15803 		add	r3, r7, #88
 924 0020 0022     		movs	r2, #0
 925 0022 1A60     		str	r2, [r3]
 926 0024 0433     		adds	r3, r3, #4
 927 0026 40F6E632 		movw	r2, #3046
 928 002a 0021     		movs	r1, #0
 929 002c 1846     		mov	r0, r3
 930 002e FFF7FEFF 		bl	memset
 349:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 931              		.loc 1 349 0
 932 0032 40F6EA33 		movw	r3, #3050
 933 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 350:..\src/command_processing.c **** 
 351:..\src/command_processing.c ****     //Auxiliary variables
 352:..\src/command_processing.c ****     uint8 CYDATA i, j;
 353:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 934              		.loc 1 353 0
 935 003a 0023     		movs	r3, #0
 936 003c 87F8553C 		strb	r3, [r7, #3157]
 354:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 937              		.loc 1 354 0
 938 0040 0023     		movs	r3, #0
 939 0042 87F8543C 		strb	r3, [r7, #3156]
 355:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 940              		.loc 1 355 0
 941 0046 0023     		movs	r3, #0
 942 0048 87F8533C 		strb	r3, [r7, #3155]
 356:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 357:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 943              		.loc 1 357 0
 944 004c 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 39


 945 0050 0022     		movs	r2, #0
 946 0052 1A60     		str	r2, [r3]
 947 0054 0433     		adds	r3, r3, #4
 948 0056 2E22     		movs	r2, #46
 949 0058 0021     		movs	r1, #0
 950 005a 1846     		mov	r0, r3
 951 005c FFF7FEFF 		bl	memset
 358:..\src/command_processing.c ****     float aux_float;
 359:..\src/command_processing.c ****     int16 aux_int16;
 360:..\src/command_processing.c ****     uint16 aux_uint16;
 361:..\src/command_processing.c ****     int32 aux_int32;
 362:..\src/command_processing.c ****     uint32 aux_uint32;
 363:..\src/command_processing.c **** 
 364:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 952              		.loc 1 364 0
 953 0060 0023     		movs	r3, #0
 954 0062 87F84F3C 		strb	r3, [r7, #3151]
 365:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 955              		.loc 1 365 0
 956 0066 0123     		movs	r3, #1
 957 0068 87F84E3C 		strb	r3, [r7, #3150]
 366:..\src/command_processing.c ****   
 367:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 958              		.loc 1 367 0
 959 006c 07F10C03 		add	r3, r7, #12
 960 0070 1B68     		ldr	r3, [r3]
 961 0072 1B68     		ldr	r3, [r3]
 962 0074 C7F8483C 		str	r3, [r7, #3144]
 368:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 963              		.loc 1 368 0
 964 0078 D7F8483C 		ldr	r3, [r7, #3144]
 965 007c C7F8443C 		str	r3, [r7, #3140]
 369:..\src/command_processing.c ****         
 370:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 966              		.loc 1 370 0
 967 0080 07F15803 		add	r3, r7, #88
 968 0084 0C22     		movs	r2, #12
 969 0086 1A70     		strb	r2, [r3]
 371:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 970              		.loc 1 371 0
 971 0088 07F15803 		add	r3, r7, #88
 972 008c 2422     		movs	r2, #36
 973 008e 5A70     		strb	r2, [r3, #1]
 372:..\src/command_processing.c ****     
 373:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 974              		.loc 1 373 0
 975 0090 0023     		movs	r3, #0
 976 0092 87F8553C 		strb	r3, [r7, #3157]
 977 0096 01F05ABF 		b	.L63
 978              	.L248:
 374:..\src/command_processing.c ****         
 375:..\src/command_processing.c ****         // Assign m_addr memory address
 376:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 979              		.loc 1 376 0
 980 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 981 009e 9B00     		lsls	r3, r3, #2
 982 00a0 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 40


 983 00a4 1268     		ldr	r2, [r2]
 984 00a6 1344     		add	r3, r3, r2
 985 00a8 1B68     		ldr	r3, [r3]
 986 00aa C7F8483C 		str	r3, [r7, #3144]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Add parameter type and size to packet
 379:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 987              		.loc 1 379 0
 988 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 989 00b2 3222     		movs	r2, #50
 990 00b4 02FB03F3 		mul	r3, r2, r3
 991 00b8 0233     		adds	r3, r3, #2
 992 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 993 00be 07F10801 		add	r1, r7, #8
 994 00c2 0968     		ldr	r1, [r1]
 995 00c4 0A44     		add	r2, r2, r1
 996 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 997 00c8 07F15802 		add	r2, r7, #88
 998 00cc D154     		strb	r1, [r2, r3]
 380:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 999              		.loc 1 380 0
 1000 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1001 00d2 3222     		movs	r2, #50
 1002 00d4 02FB03F3 		mul	r3, r2, r3
 1003 00d8 0333     		adds	r3, r3, #3
 1004 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1005 00de 391D     		adds	r1, r7, #4
 1006 00e0 0968     		ldr	r1, [r1]
 1007 00e2 0A44     		add	r2, r2, r1
 1008 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1009 00e6 07F15802 		add	r2, r7, #88
 1010 00ea D154     		strb	r1, [r2, r3]
 381:..\src/command_processing.c ****         
 382:..\src/command_processing.c ****         // Find size of data
 383:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1011              		.loc 1 383 0
 1012 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1013 00f0 07F10802 		add	r2, r7, #8
 1014 00f4 1268     		ldr	r2, [r2]
 1015 00f6 1344     		add	r3, r3, r2
 1016 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1017 00fa 092B     		cmp	r3, #9
 1018 00fc 22D8     		bhi	.L64
 1019 00fe 01A2     		adr	r2, .L66
 1020 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1021              		.p2align 2
 1022              	.L66:
 1023 0104 2D010000 		.word	.L65+1
 1024 0108 2D010000 		.word	.L65+1
 1025 010c 2D010000 		.word	.L65+1
 1026 0110 35010000 		.word	.L67+1
 1027 0114 35010000 		.word	.L67+1
 1028 0118 3D010000 		.word	.L68+1
 1029 011c 3D010000 		.word	.L68+1
 1030 0120 3D010000 		.word	.L68+1
 1031 0124 45010000 		.word	.L64+1
 1032 0128 2D010000 		.word	.L65+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 41


 1033              		.p2align 1
 1034              	.L65:
 384:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 385:..\src/command_processing.c ****                 sod = 1; break;
 1035              		.loc 1 385 0
 1036 012c 0123     		movs	r3, #1
 1037 012e 87F8533C 		strb	r3, [r7, #3155]
 1038 0132 07E0     		b	.L64
 1039              	.L67:
 386:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 387:..\src/command_processing.c ****                 sod = 2; break;
 1040              		.loc 1 387 0
 1041 0134 0223     		movs	r3, #2
 1042 0136 87F8533C 		strb	r3, [r7, #3155]
 1043 013a 03E0     		b	.L64
 1044              	.L68:
 388:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 389:..\src/command_processing.c ****                 sod = 4; break;
 1045              		.loc 1 389 0
 1046 013c 0423     		movs	r3, #4
 1047 013e 87F8533C 		strb	r3, [r7, #3155]
 1048 0142 00BF     		nop
 1049              	.L64:
 390:..\src/command_processing.c ****         }
 391:..\src/command_processing.c ****             
 392:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1050              		.loc 1 392 0
 1051 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1052 0148 D7F8782C 		ldr	r2, [r7, #3192]
 1053 014c 1344     		add	r3, r3, r2
 1054 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1055 0150 002B     		cmp	r3, #0
 1056 0152 40F02A82 		bne	.L69
 393:..\src/command_processing.c ****             
 394:..\src/command_processing.c ****             // Add parameter data to packet
 395:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1057              		.loc 1 395 0
 1058 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1059 015a 07F10802 		add	r2, r7, #8
 1060 015e 1268     		ldr	r2, [r2]
 1061 0160 1344     		add	r3, r3, r2
 1062 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1063 0164 092B     		cmp	r3, #9
 1064 0166 01F20E83 		bhi	.L103
 1065 016a 01A2     		adr	r2, .L72
 1066 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1067              		.p2align 2
 1068              	.L72:
 1069 0170 99010000 		.word	.L71+1
 1070 0174 01020000 		.word	.L73+1
 1071 0178 99010000 		.word	.L71+1
 1072 017c 69020000 		.word	.L74+1
 1073 0180 11030000 		.word	.L75+1
 1074 0184 B7030000 		.word	.L76+1
 1075 0188 5D040000 		.word	.L77+1
 1076 018c 03050000 		.word	.L78+1
 1077 0190 87170000 		.word	.L103+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 42


 1078 0194 99010000 		.word	.L71+1
 1079              		.p2align 1
 1080              	.L71:
 396:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 397:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1081              		.loc 1 397 0
 1082 0198 0023     		movs	r3, #0
 1083 019a 87F8573C 		strb	r3, [r7, #3159]
 1084 019e 23E0     		b	.L79
 1085              	.L80:
 398:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1086              		.loc 1 398 0 discriminator 3
 1087 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1088 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1089 01a8 02FB03F3 		mul	r3, r2, r3
 1090 01ac 1A46     		mov	r2, r3
 1091 01ae D7F8483C 		ldr	r3, [r7, #3144]
 1092 01b2 1344     		add	r3, r3, r2
 1093 01b4 C7F8443C 		str	r3, [r7, #3140]
 399:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1094              		.loc 1 399 0 discriminator 3
 1095 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1096 01bc 3222     		movs	r2, #50
 1097 01be 02FB03F3 		mul	r3, r2, r3
 1098 01c2 1A1D     		adds	r2, r3, #4
 1099 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1100 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1101 01cc 01FB03F3 		mul	r3, r1, r3
 1102 01d0 1344     		add	r3, r3, r2
 1103 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1104 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1105 01d8 07F15802 		add	r2, r7, #88
 1106 01dc D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1107              		.loc 1 397 0 discriminator 3
 1108 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1109 01e2 0133     		adds	r3, r3, #1
 1110 01e4 87F8573C 		strb	r3, [r7, #3159]
 1111              	.L79:
 397:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1112              		.loc 1 397 0 is_stmt 0 discriminator 1
 1113 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1114 01ec 3A1D     		adds	r2, r7, #4
 1115 01ee 1268     		ldr	r2, [r2]
 1116 01f0 1344     		add	r3, r3, r2
 1117 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1118 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1119 01f8 9A42     		cmp	r2, r3
 1120 01fa D1D3     		bcc	.L80
 400:..\src/command_processing.c ****                     }
 401:..\src/command_processing.c ****                     break;                
 1121              		.loc 1 401 0 is_stmt 1
 1122 01fc 01F0C3BA 		b	.L103
 1123              	.L73:
 402:..\src/command_processing.c ****                 case TYPE_INT8:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1124              		.loc 1 403 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 43


 1125 0200 0023     		movs	r3, #0
 1126 0202 87F8573C 		strb	r3, [r7, #3159]
 1127 0206 23E0     		b	.L81
 1128              	.L82:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1129              		.loc 1 404 0 discriminator 3
 1130 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1131 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1132 0210 02FB03F3 		mul	r3, r2, r3
 1133 0214 1A46     		mov	r2, r3
 1134 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1135 021a 1344     		add	r3, r3, r2
 1136 021c C7F8443C 		str	r3, [r7, #3140]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1137              		.loc 1 405 0 discriminator 3
 1138 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1139 0224 3222     		movs	r2, #50
 1140 0226 02FB03F3 		mul	r3, r2, r3
 1141 022a 1A1D     		adds	r2, r3, #4
 1142 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1143 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1144 0234 01FB03F3 		mul	r3, r1, r3
 1145 0238 1344     		add	r3, r3, r2
 1146 023a D7F8442C 		ldr	r2, [r7, #3140]
 1147 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1148 0240 07F15802 		add	r2, r7, #88
 1149 0244 D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1150              		.loc 1 403 0 discriminator 3
 1151 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1152 024a 0133     		adds	r3, r3, #1
 1153 024c 87F8573C 		strb	r3, [r7, #3159]
 1154              	.L81:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1155              		.loc 1 403 0 is_stmt 0 discriminator 1
 1156 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1157 0254 3A1D     		adds	r2, r7, #4
 1158 0256 1268     		ldr	r2, [r2]
 1159 0258 1344     		add	r3, r3, r2
 1160 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1161 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1162 0260 9A42     		cmp	r2, r3
 1163 0262 D1D3     		bcc	.L82
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;
 1164              		.loc 1 407 0 is_stmt 1
 1165 0264 01F08FBA 		b	.L103
 1166              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT16:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1167              		.loc 1 409 0
 1168 0268 0023     		movs	r3, #0
 1169 026a 87F8573C 		strb	r3, [r7, #3159]
 1170 026e 43E0     		b	.L83
 1171              	.L86:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1172              		.loc 1 410 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 44


 1173 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1174 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1175 0278 02FB03F3 		mul	r3, r2, r3
 1176 027c 1A46     		mov	r2, r3
 1177 027e D7F8483C 		ldr	r3, [r7, #3144]
 1178 0282 1344     		add	r3, r3, r2
 1179 0284 C7F8443C 		str	r3, [r7, #3140]
 411:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1180              		.loc 1 411 0
 1181 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1182 028c B3F90020 		ldrsh	r2, [r3]
 1183 0290 07F11E03 		add	r3, r7, #30
 1184 0294 1A80     		strh	r2, [r3]	@ movhi
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1185              		.loc 1 412 0
 1186 0296 0023     		movs	r3, #0
 1187 0298 87F8563C 		strb	r3, [r7, #3158]
 1188 029c 21E0     		b	.L84
 1189              	.L85:
 413:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1190              		.loc 1 413 0 discriminator 3
 1191 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1192 02a2 3222     		movs	r2, #50
 1193 02a4 02FB03F3 		mul	r3, r2, r3
 1194 02a8 1A1D     		adds	r2, r3, #4
 1195 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1196 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1197 02b2 01FB03F3 		mul	r3, r1, r3
 1198 02b6 1A44     		add	r2, r2, r3
 1199 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1200 02bc 1A44     		add	r2, r2, r3
 1201 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1202 02c2 D31A     		subs	r3, r2, r3
 1203 02c4 013B     		subs	r3, r3, #1
 1204 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1205 02ca 07F11E01 		add	r1, r7, #30
 1206 02ce 0A44     		add	r2, r2, r1
 1207 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1208 02d2 07F15802 		add	r2, r7, #88
 1209 02d6 D154     		strb	r1, [r2, r3]
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1210              		.loc 1 412 0 discriminator 3
 1211 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1212 02dc 0133     		adds	r3, r3, #1
 1213 02de 87F8563C 		strb	r3, [r7, #3158]
 1214              	.L84:
 412:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1215              		.loc 1 412 0 is_stmt 0 discriminator 1
 1216 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1217 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1218 02ea 9A42     		cmp	r2, r3
 1219 02ec D7D3     		bcc	.L85
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1220              		.loc 1 409 0 is_stmt 1 discriminator 2
 1221 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1222 02f2 0133     		adds	r3, r3, #1
 1223 02f4 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 45


 1224              	.L83:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1225              		.loc 1 409 0 is_stmt 0 discriminator 1
 1226 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1227 02fc 3A1D     		adds	r2, r7, #4
 1228 02fe 1268     		ldr	r2, [r2]
 1229 0300 1344     		add	r3, r3, r2
 1230 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1231 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1232 0308 9A42     		cmp	r2, r3
 1233 030a B1D3     		bcc	.L86
 414:..\src/command_processing.c ****                         }
 415:..\src/command_processing.c ****                     }
 416:..\src/command_processing.c ****                     break;
 1234              		.loc 1 416 0 is_stmt 1
 1235 030c 01F03BBA 		b	.L103
 1236              	.L75:
 417:..\src/command_processing.c ****                 case TYPE_UINT16:
 418:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1237              		.loc 1 418 0
 1238 0310 0023     		movs	r3, #0
 1239 0312 87F8573C 		strb	r3, [r7, #3159]
 1240 0316 42E0     		b	.L87
 1241              	.L90:
 419:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1242              		.loc 1 419 0
 1243 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1244 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1245 0320 02FB03F3 		mul	r3, r2, r3
 1246 0324 1A46     		mov	r2, r3
 1247 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1248 032a 1344     		add	r3, r3, r2
 1249 032c C7F8443C 		str	r3, [r7, #3140]
 420:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1250              		.loc 1 420 0
 1251 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1252 0334 1A88     		ldrh	r2, [r3]
 1253 0336 07F11C03 		add	r3, r7, #28
 1254 033a 1A80     		strh	r2, [r3]	@ movhi
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1255              		.loc 1 421 0
 1256 033c 0023     		movs	r3, #0
 1257 033e 87F8563C 		strb	r3, [r7, #3158]
 1258 0342 21E0     		b	.L88
 1259              	.L89:
 422:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1260              		.loc 1 422 0 discriminator 3
 1261 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1262 0348 3222     		movs	r2, #50
 1263 034a 02FB03F3 		mul	r3, r2, r3
 1264 034e 1A1D     		adds	r2, r3, #4
 1265 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1266 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1267 0358 01FB03F3 		mul	r3, r1, r3
 1268 035c 1A44     		add	r2, r2, r3
 1269 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1270 0362 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 46


 1271 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1272 0368 D31A     		subs	r3, r2, r3
 1273 036a 013B     		subs	r3, r3, #1
 1274 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1275 0370 07F11C01 		add	r1, r7, #28
 1276 0374 0A44     		add	r2, r2, r1
 1277 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1278 0378 07F15802 		add	r2, r7, #88
 1279 037c D154     		strb	r1, [r2, r3]
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1280              		.loc 1 421 0 discriminator 3
 1281 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1282 0382 0133     		adds	r3, r3, #1
 1283 0384 87F8563C 		strb	r3, [r7, #3158]
 1284              	.L88:
 421:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1285              		.loc 1 421 0 is_stmt 0 discriminator 1
 1286 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1287 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1288 0390 9A42     		cmp	r2, r3
 1289 0392 D7D3     		bcc	.L89
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1290              		.loc 1 418 0 is_stmt 1 discriminator 2
 1291 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1292 0398 0133     		adds	r3, r3, #1
 1293 039a 87F8573C 		strb	r3, [r7, #3159]
 1294              	.L87:
 418:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1295              		.loc 1 418 0 is_stmt 0 discriminator 1
 1296 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1297 03a2 3A1D     		adds	r2, r7, #4
 1298 03a4 1268     		ldr	r2, [r2]
 1299 03a6 1344     		add	r3, r3, r2
 1300 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1301 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1302 03ae 9A42     		cmp	r2, r3
 1303 03b0 B2D3     		bcc	.L90
 423:..\src/command_processing.c ****                         }
 424:..\src/command_processing.c ****                     }
 425:..\src/command_processing.c ****                     break;
 1304              		.loc 1 425 0 is_stmt 1
 1305 03b2 01F0E8B9 		b	.L103
 1306              	.L76:
 426:..\src/command_processing.c ****                 case TYPE_INT32: 
 427:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1307              		.loc 1 427 0
 1308 03b6 0023     		movs	r3, #0
 1309 03b8 87F8573C 		strb	r3, [r7, #3159]
 1310 03bc 42E0     		b	.L91
 1311              	.L94:
 428:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1312              		.loc 1 428 0
 1313 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1314 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1315 03c6 02FB03F3 		mul	r3, r2, r3
 1316 03ca 1A46     		mov	r2, r3
 1317 03cc D7F8483C 		ldr	r3, [r7, #3144]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 47


 1318 03d0 1344     		add	r3, r3, r2
 1319 03d2 C7F8443C 		str	r3, [r7, #3140]
 429:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1320              		.loc 1 429 0
 1321 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1322 03da 1A68     		ldr	r2, [r3]
 1323 03dc 07F11803 		add	r3, r7, #24
 1324 03e0 1A60     		str	r2, [r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1325              		.loc 1 430 0
 1326 03e2 0023     		movs	r3, #0
 1327 03e4 87F8563C 		strb	r3, [r7, #3158]
 1328 03e8 21E0     		b	.L92
 1329              	.L93:
 431:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1330              		.loc 1 431 0 discriminator 3
 1331 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1332 03ee 3222     		movs	r2, #50
 1333 03f0 02FB03F3 		mul	r3, r2, r3
 1334 03f4 1A1D     		adds	r2, r3, #4
 1335 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1336 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1337 03fe 01FB03F3 		mul	r3, r1, r3
 1338 0402 1A44     		add	r2, r2, r3
 1339 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1340 0408 1A44     		add	r2, r2, r3
 1341 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1342 040e D31A     		subs	r3, r2, r3
 1343 0410 013B     		subs	r3, r3, #1
 1344 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1345 0416 07F11801 		add	r1, r7, #24
 1346 041a 0A44     		add	r2, r2, r1
 1347 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1348 041e 07F15802 		add	r2, r7, #88
 1349 0422 D154     		strb	r1, [r2, r3]
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1350              		.loc 1 430 0 discriminator 3
 1351 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1352 0428 0133     		adds	r3, r3, #1
 1353 042a 87F8563C 		strb	r3, [r7, #3158]
 1354              	.L92:
 430:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1355              		.loc 1 430 0 is_stmt 0 discriminator 1
 1356 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1357 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1358 0436 9A42     		cmp	r2, r3
 1359 0438 D7D3     		bcc	.L93
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1360              		.loc 1 427 0 is_stmt 1 discriminator 2
 1361 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1362 043e 0133     		adds	r3, r3, #1
 1363 0440 87F8573C 		strb	r3, [r7, #3159]
 1364              	.L91:
 427:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1365              		.loc 1 427 0 is_stmt 0 discriminator 1
 1366 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1367 0448 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 48


 1368 044a 1268     		ldr	r2, [r2]
 1369 044c 1344     		add	r3, r3, r2
 1370 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1371 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1372 0454 9A42     		cmp	r2, r3
 1373 0456 B2D3     		bcc	.L94
 432:..\src/command_processing.c ****                         }
 433:..\src/command_processing.c ****                     }
 434:..\src/command_processing.c ****                     break;
 1374              		.loc 1 434 0 is_stmt 1
 1375 0458 01F095B9 		b	.L103
 1376              	.L77:
 435:..\src/command_processing.c ****                 case TYPE_UINT32: 
 436:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1377              		.loc 1 436 0
 1378 045c 0023     		movs	r3, #0
 1379 045e 87F8573C 		strb	r3, [r7, #3159]
 1380 0462 42E0     		b	.L95
 1381              	.L98:
 437:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1382              		.loc 1 437 0
 1383 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1384 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1385 046c 02FB03F3 		mul	r3, r2, r3
 1386 0470 1A46     		mov	r2, r3
 1387 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1388 0476 1344     		add	r3, r3, r2
 1389 0478 C7F8443C 		str	r3, [r7, #3140]
 438:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1390              		.loc 1 438 0
 1391 047c D7F8443C 		ldr	r3, [r7, #3140]
 1392 0480 1A68     		ldr	r2, [r3]
 1393 0482 07F11403 		add	r3, r7, #20
 1394 0486 1A60     		str	r2, [r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1395              		.loc 1 439 0
 1396 0488 0023     		movs	r3, #0
 1397 048a 87F8563C 		strb	r3, [r7, #3158]
 1398 048e 21E0     		b	.L96
 1399              	.L97:
 440:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1400              		.loc 1 440 0 discriminator 3
 1401 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1402 0494 3222     		movs	r2, #50
 1403 0496 02FB03F3 		mul	r3, r2, r3
 1404 049a 1A1D     		adds	r2, r3, #4
 1405 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1406 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1407 04a4 01FB03F3 		mul	r3, r1, r3
 1408 04a8 1A44     		add	r2, r2, r3
 1409 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1410 04ae 1A44     		add	r2, r2, r3
 1411 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1412 04b4 D31A     		subs	r3, r2, r3
 1413 04b6 013B     		subs	r3, r3, #1
 1414 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1415 04bc 07F11401 		add	r1, r7, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 49


 1416 04c0 0A44     		add	r2, r2, r1
 1417 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1418 04c4 07F15802 		add	r2, r7, #88
 1419 04c8 D154     		strb	r1, [r2, r3]
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1420              		.loc 1 439 0 discriminator 3
 1421 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1422 04ce 0133     		adds	r3, r3, #1
 1423 04d0 87F8563C 		strb	r3, [r7, #3158]
 1424              	.L96:
 439:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1425              		.loc 1 439 0 is_stmt 0 discriminator 1
 1426 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1427 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1428 04dc 9A42     		cmp	r2, r3
 1429 04de D7D3     		bcc	.L97
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1430              		.loc 1 436 0 is_stmt 1 discriminator 2
 1431 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1432 04e4 0133     		adds	r3, r3, #1
 1433 04e6 87F8573C 		strb	r3, [r7, #3159]
 1434              	.L95:
 436:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1435              		.loc 1 436 0 is_stmt 0 discriminator 1
 1436 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1437 04ee 3A1D     		adds	r2, r7, #4
 1438 04f0 1268     		ldr	r2, [r2]
 1439 04f2 1344     		add	r3, r3, r2
 1440 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1441 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1442 04fa 9A42     		cmp	r2, r3
 1443 04fc B2D3     		bcc	.L98
 441:..\src/command_processing.c ****                         }
 442:..\src/command_processing.c ****                     }
 443:..\src/command_processing.c ****                     break;
 1444              		.loc 1 443 0 is_stmt 1
 1445 04fe 01F042B9 		b	.L103
 1446              	.L78:
 444:..\src/command_processing.c ****                     
 445:..\src/command_processing.c ****                 case TYPE_FLOAT:
 446:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1447              		.loc 1 446 0
 1448 0502 0023     		movs	r3, #0
 1449 0504 87F8573C 		strb	r3, [r7, #3159]
 1450 0508 42E0     		b	.L99
 1451              	.L102:
 447:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1452              		.loc 1 447 0
 1453 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1454 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1455 0512 02FB03F3 		mul	r3, r2, r3
 1456 0516 1A46     		mov	r2, r3
 1457 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1458 051c 1344     		add	r3, r3, r2
 1459 051e C7F8443C 		str	r3, [r7, #3140]
 448:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1460              		.loc 1 448 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 50


 1461 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1462 0526 1A68     		ldr	r2, [r3]	@ float
 1463 0528 07F12003 		add	r3, r7, #32
 1464 052c 1A60     		str	r2, [r3]	@ float
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1465              		.loc 1 449 0
 1466 052e 0023     		movs	r3, #0
 1467 0530 87F8563C 		strb	r3, [r7, #3158]
 1468 0534 21E0     		b	.L100
 1469              	.L101:
 450:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1470              		.loc 1 450 0 discriminator 3
 1471 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1472 053a 3222     		movs	r2, #50
 1473 053c 02FB03F3 		mul	r3, r2, r3
 1474 0540 1A1D     		adds	r2, r3, #4
 1475 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1476 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1477 054a 01FB03F3 		mul	r3, r1, r3
 1478 054e 1A44     		add	r2, r2, r3
 1479 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1480 0554 1A44     		add	r2, r2, r3
 1481 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1482 055a D31A     		subs	r3, r2, r3
 1483 055c 013B     		subs	r3, r3, #1
 1484 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1485 0562 07F12001 		add	r1, r7, #32
 1486 0566 0A44     		add	r2, r2, r1
 1487 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1488 056a 07F15802 		add	r2, r7, #88
 1489 056e D154     		strb	r1, [r2, r3]
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1490              		.loc 1 449 0 discriminator 3
 1491 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1492 0574 0133     		adds	r3, r3, #1
 1493 0576 87F8563C 		strb	r3, [r7, #3158]
 1494              	.L100:
 449:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1495              		.loc 1 449 0 is_stmt 0 discriminator 1
 1496 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1497 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1498 0582 9A42     		cmp	r2, r3
 1499 0584 D7D3     		bcc	.L101
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1500              		.loc 1 446 0 is_stmt 1 discriminator 2
 1501 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1502 058a 0133     		adds	r3, r3, #1
 1503 058c 87F8573C 		strb	r3, [r7, #3159]
 1504              	.L99:
 446:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1505              		.loc 1 446 0 is_stmt 0 discriminator 1
 1506 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1507 0594 3A1D     		adds	r2, r7, #4
 1508 0596 1268     		ldr	r2, [r2]
 1509 0598 1344     		add	r3, r3, r2
 1510 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1511 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 51


 1512 05a0 9A42     		cmp	r2, r3
 1513 05a2 B2D3     		bcc	.L102
 451:..\src/command_processing.c ****                         }
 452:..\src/command_processing.c ****                     }
 453:..\src/command_processing.c ****                     break;   
 1514              		.loc 1 453 0 is_stmt 1 discriminator 7
 1515 05a4 00BF     		nop
 1516 05a6 01F0EEB8 		b	.L103
 1517              	.L69:
 454:..\src/command_processing.c ****             }
 455:..\src/command_processing.c ****         }
 456:..\src/command_processing.c ****         else {
 457:..\src/command_processing.c ****             
 458:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 459:..\src/command_processing.c ****             
 460:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 461:..\src/command_processing.c ****                 switch(idx+1){
 1518              		.loc 1 461 0
 1519 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1520 05ae 0133     		adds	r3, r3, #1
 1521 05b0 023B     		subs	r3, r3, #2
 1522 05b2 332B     		cmp	r3, #51
 1523 05b4 01F2E680 		bhi	.L253
 1524 05b8 01A2     		adr	r2, .L106
 1525 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1526 05be 00BF     		.p2align 2
 1527              	.L106:
 1528 05c0 91060000 		.word	.L105+1
 1529 05c4 B1090000 		.word	.L107+1
 1530 05c8 85170000 		.word	.L253+1
 1531 05cc 85170000 		.word	.L253+1
 1532 05d0 85170000 		.word	.L253+1
 1533 05d4 85170000 		.word	.L253+1
 1534 05d8 D10C0000 		.word	.L108+1
 1535 05dc 85170000 		.word	.L253+1
 1536 05e0 85170000 		.word	.L253+1
 1537 05e4 970D0000 		.word	.L109+1
 1538 05e8 85170000 		.word	.L253+1
 1539 05ec 85170000 		.word	.L253+1
 1540 05f0 85170000 		.word	.L253+1
 1541 05f4 85170000 		.word	.L253+1
 1542 05f8 85170000 		.word	.L253+1
 1543 05fc 85170000 		.word	.L253+1
 1544 0600 85170000 		.word	.L253+1
 1545 0604 85170000 		.word	.L253+1
 1546 0608 85170000 		.word	.L253+1
 1547 060c 85170000 		.word	.L253+1
 1548 0610 85170000 		.word	.L253+1
 1549 0614 C50E0000 		.word	.L110+1
 1550 0618 85170000 		.word	.L253+1
 1551 061c 85170000 		.word	.L253+1
 1552 0620 85170000 		.word	.L253+1
 1553 0624 85170000 		.word	.L253+1
 1554 0628 85170000 		.word	.L253+1
 1555 062c 85170000 		.word	.L253+1
 1556 0630 85170000 		.word	.L253+1
 1557 0634 85170000 		.word	.L253+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 52


 1558 0638 85170000 		.word	.L253+1
 1559 063c 85170000 		.word	.L253+1
 1560 0640 85170000 		.word	.L253+1
 1561 0644 85170000 		.word	.L253+1
 1562 0648 85170000 		.word	.L253+1
 1563 064c 85170000 		.word	.L253+1
 1564 0650 85170000 		.word	.L253+1
 1565 0654 85170000 		.word	.L253+1
 1566 0658 85170000 		.word	.L253+1
 1567 065c 85170000 		.word	.L253+1
 1568 0660 85170000 		.word	.L253+1
 1569 0664 85170000 		.word	.L253+1
 1570 0668 4D0F0000 		.word	.L111+1
 1571 066c 6F120000 		.word	.L112+1
 1572 0670 85170000 		.word	.L253+1
 1573 0674 85170000 		.word	.L253+1
 1574 0678 85170000 		.word	.L253+1
 1575 067c 85170000 		.word	.L253+1
 1576 0680 8B150000 		.word	.L113+1
 1577 0684 85170000 		.word	.L253+1
 1578 0688 85170000 		.word	.L253+1
 1579 068c 4F160000 		.word	.L114+1
 1580              		.p2align 1
 1581              	.L105:
 462:..\src/command_processing.c ****                     case 2:         // Position PID
 463:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1582              		.loc 1 463 0
 1583 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1584 0694 C549     		ldr	r1, .L257
 1585 0696 1346     		mov	r3, r2
 1586 0698 DB00     		lsls	r3, r3, #3
 1587 069a 9B1A     		subs	r3, r3, r2
 1588 069c 1B01     		lsls	r3, r3, #4
 1589 069e 0B44     		add	r3, r3, r1
 1590 06a0 03F20F13 		addw	r3, r3, #271
 1591 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1592 06a6 032B     		cmp	r3, #3
 1593 06a8 00F0C080 		beq	.L115
 464:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1594              		.loc 1 464 0
 1595 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1596 06b0 BE49     		ldr	r1, .L257
 1597 06b2 1346     		mov	r3, r2
 1598 06b4 DB00     		lsls	r3, r3, #3
 1599 06b6 9B1A     		subs	r3, r3, r2
 1600 06b8 1B01     		lsls	r3, r3, #4
 1601 06ba 0B44     		add	r3, r3, r1
 1602 06bc B033     		adds	r3, r3, #176
 1603 06be 1B68     		ldr	r3, [r3]
 1604 06c0 1846     		mov	r0, r3
 1605 06c2 FFF7FEFF 		bl	__aeabi_i2f
 1606 06c6 0346     		mov	r3, r0
 1607 06c8 4FF08F41 		mov	r1, #1199570944
 1608 06cc 1846     		mov	r0, r3
 1609 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1610 06d2 0346     		mov	r3, r0
 1611 06d4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 53


 1612 06d6 07F12003 		add	r3, r7, #32
 1613 06da 1A60     		str	r2, [r3]	@ float
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1614              		.loc 1 465 0
 1615 06dc 0023     		movs	r3, #0
 1616 06de 87F8573C 		strb	r3, [r7, #3159]
 1617 06e2 1AE0     		b	.L116
 1618              	.L117:
 466:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1619              		.loc 1 466 0 discriminator 3
 1620 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1621 06e8 3222     		movs	r2, #50
 1622 06ea 02FB03F3 		mul	r3, r2, r3
 1623 06ee 1A1D     		adds	r2, r3, #4
 1624 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1625 06f4 1A44     		add	r2, r2, r3
 1626 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1627 06fa D31A     		subs	r3, r2, r3
 1628 06fc 013B     		subs	r3, r3, #1
 1629 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1630 0702 07F12001 		add	r1, r7, #32
 1631 0706 0A44     		add	r2, r2, r1
 1632 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1633 070a 07F15802 		add	r2, r7, #88
 1634 070e D154     		strb	r1, [r2, r3]
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1635              		.loc 1 465 0 discriminator 3
 1636 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1637 0714 0133     		adds	r3, r3, #1
 1638 0716 87F8573C 		strb	r3, [r7, #3159]
 1639              	.L116:
 465:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1640              		.loc 1 465 0 is_stmt 0 discriminator 1
 1641 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1642 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1643 0722 9A42     		cmp	r2, r3
 1644 0724 DED3     		bcc	.L117
 467:..\src/command_processing.c ****                             }
 468:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1645              		.loc 1 468 0 is_stmt 1
 1646 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1647 072a A049     		ldr	r1, .L257
 1648 072c 1346     		mov	r3, r2
 1649 072e DB00     		lsls	r3, r3, #3
 1650 0730 9B1A     		subs	r3, r3, r2
 1651 0732 1B01     		lsls	r3, r3, #4
 1652 0734 0B44     		add	r3, r3, r1
 1653 0736 B433     		adds	r3, r3, #180
 1654 0738 1B68     		ldr	r3, [r3]
 1655 073a 1846     		mov	r0, r3
 1656 073c FFF7FEFF 		bl	__aeabi_i2f
 1657 0740 0346     		mov	r3, r0
 1658 0742 4FF08F41 		mov	r1, #1199570944
 1659 0746 1846     		mov	r0, r3
 1660 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1661 074c 0346     		mov	r3, r0
 1662 074e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 54


 1663 0750 07F12003 		add	r3, r7, #32
 1664 0754 1A60     		str	r2, [r3]	@ float
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1665              		.loc 1 469 0
 1666 0756 0023     		movs	r3, #0
 1667 0758 87F8573C 		strb	r3, [r7, #3159]
 1668 075c 1DE0     		b	.L118
 1669              	.L119:
 470:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1670              		.loc 1 470 0 discriminator 3
 1671 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1672 0762 3222     		movs	r2, #50
 1673 0764 02FB03F3 		mul	r3, r2, r3
 1674 0768 1A1D     		adds	r2, r3, #4
 1675 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1676 076e 1A44     		add	r2, r2, r3
 1677 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1678 0774 1A44     		add	r2, r2, r3
 1679 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1680 077a D31A     		subs	r3, r2, r3
 1681 077c 013B     		subs	r3, r3, #1
 1682 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1683 0782 07F12001 		add	r1, r7, #32
 1684 0786 0A44     		add	r2, r2, r1
 1685 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1686 078a 07F15802 		add	r2, r7, #88
 1687 078e D154     		strb	r1, [r2, r3]
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1688              		.loc 1 469 0 discriminator 3
 1689 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1690 0794 0133     		adds	r3, r3, #1
 1691 0796 87F8573C 		strb	r3, [r7, #3159]
 1692              	.L118:
 469:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1693              		.loc 1 469 0 is_stmt 0 discriminator 1
 1694 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1695 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1696 07a2 9A42     		cmp	r2, r3
 1697 07a4 DBD3     		bcc	.L119
 471:..\src/command_processing.c ****                             }
 472:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1698              		.loc 1 472 0 is_stmt 1
 1699 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1700 07aa 8049     		ldr	r1, .L257
 1701 07ac 1346     		mov	r3, r2
 1702 07ae DB00     		lsls	r3, r3, #3
 1703 07b0 9B1A     		subs	r3, r3, r2
 1704 07b2 1B01     		lsls	r3, r3, #4
 1705 07b4 0B44     		add	r3, r3, r1
 1706 07b6 B833     		adds	r3, r3, #184
 1707 07b8 1B68     		ldr	r3, [r3]
 1708 07ba 1846     		mov	r0, r3
 1709 07bc FFF7FEFF 		bl	__aeabi_i2f
 1710 07c0 0346     		mov	r3, r0
 1711 07c2 4FF08F41 		mov	r1, #1199570944
 1712 07c6 1846     		mov	r0, r3
 1713 07c8 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 55


 1714 07cc 0346     		mov	r3, r0
 1715 07ce 1A46     		mov	r2, r3
 1716 07d0 07F12003 		add	r3, r7, #32
 1717 07d4 1A60     		str	r2, [r3]	@ float
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1718              		.loc 1 473 0
 1719 07d6 0023     		movs	r3, #0
 1720 07d8 87F8573C 		strb	r3, [r7, #3159]
 1721 07dc 1EE0     		b	.L120
 1722              	.L121:
 474:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1723              		.loc 1 474 0 discriminator 3
 1724 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1725 07e2 3222     		movs	r2, #50
 1726 07e4 02FB03F3 		mul	r3, r2, r3
 1727 07e8 1A1D     		adds	r2, r3, #4
 1728 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1729 07ee 5B00     		lsls	r3, r3, #1
 1730 07f0 1A44     		add	r2, r2, r3
 1731 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1732 07f6 1A44     		add	r2, r2, r3
 1733 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1734 07fc D31A     		subs	r3, r2, r3
 1735 07fe 013B     		subs	r3, r3, #1
 1736 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1737 0804 07F12001 		add	r1, r7, #32
 1738 0808 0A44     		add	r2, r2, r1
 1739 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1740 080c 07F15802 		add	r2, r7, #88
 1741 0810 D154     		strb	r1, [r2, r3]
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1742              		.loc 1 473 0 discriminator 3
 1743 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1744 0816 0133     		adds	r3, r3, #1
 1745 0818 87F8573C 		strb	r3, [r7, #3159]
 1746              	.L120:
 473:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1747              		.loc 1 473 0 is_stmt 0 discriminator 1
 1748 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1749 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1750 0824 9A42     		cmp	r2, r3
 1751 0826 DAD3     		bcc	.L121
 475:..\src/command_processing.c ****                             } 
 476:..\src/command_processing.c ****                         }
 477:..\src/command_processing.c ****                         else {
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 481:..\src/command_processing.c ****                             }
 482:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 483:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 484:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 485:..\src/command_processing.c ****                             }
 486:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 487:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 488:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 489:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 56


 490:..\src/command_processing.c ****                         }
 491:..\src/command_processing.c ****                         break;
 1752              		.loc 1 491 0 is_stmt 1
 1753 0828 00F0ADBF 		b	.L103
 1754              	.L115:
 478:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1755              		.loc 1 478 0
 1756 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1757 0830 5E49     		ldr	r1, .L257
 1758 0832 1346     		mov	r3, r2
 1759 0834 DB00     		lsls	r3, r3, #3
 1760 0836 9B1A     		subs	r3, r3, r2
 1761 0838 1B01     		lsls	r3, r3, #4
 1762 083a 0B44     		add	r3, r3, r1
 1763 083c C833     		adds	r3, r3, #200
 1764 083e 1B68     		ldr	r3, [r3]
 1765 0840 1846     		mov	r0, r3
 1766 0842 FFF7FEFF 		bl	__aeabi_i2f
 1767 0846 0346     		mov	r3, r0
 1768 0848 4FF08F41 		mov	r1, #1199570944
 1769 084c 1846     		mov	r0, r3
 1770 084e FFF7FEFF 		bl	__aeabi_fdiv
 1771 0852 0346     		mov	r3, r0
 1772 0854 1A46     		mov	r2, r3
 1773 0856 07F12003 		add	r3, r7, #32
 1774 085a 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1775              		.loc 1 479 0
 1776 085c 0023     		movs	r3, #0
 1777 085e 87F8573C 		strb	r3, [r7, #3159]
 1778 0862 1AE0     		b	.L123
 1779              	.L124:
 480:..\src/command_processing.c ****                             }
 1780              		.loc 1 480 0 discriminator 3
 1781 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1782 0868 3222     		movs	r2, #50
 1783 086a 02FB03F3 		mul	r3, r2, r3
 1784 086e 1A1D     		adds	r2, r3, #4
 1785 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1786 0874 1A44     		add	r2, r2, r3
 1787 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1788 087a D31A     		subs	r3, r2, r3
 1789 087c 013B     		subs	r3, r3, #1
 1790 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1791 0882 07F12001 		add	r1, r7, #32
 1792 0886 0A44     		add	r2, r2, r1
 1793 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1794 088a 07F15802 		add	r2, r7, #88
 1795 088e D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1796              		.loc 1 479 0 discriminator 3
 1797 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1798 0894 0133     		adds	r3, r3, #1
 1799 0896 87F8573C 		strb	r3, [r7, #3159]
 1800              	.L123:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1801              		.loc 1 479 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 57


 1802 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1803 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1804 08a2 9A42     		cmp	r2, r3
 1805 08a4 DED3     		bcc	.L124
 482:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1806              		.loc 1 482 0 is_stmt 1
 1807 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1808 08aa 4049     		ldr	r1, .L257
 1809 08ac 1346     		mov	r3, r2
 1810 08ae DB00     		lsls	r3, r3, #3
 1811 08b0 9B1A     		subs	r3, r3, r2
 1812 08b2 1B01     		lsls	r3, r3, #4
 1813 08b4 0B44     		add	r3, r3, r1
 1814 08b6 CC33     		adds	r3, r3, #204
 1815 08b8 1B68     		ldr	r3, [r3]
 1816 08ba 1846     		mov	r0, r3
 1817 08bc FFF7FEFF 		bl	__aeabi_i2f
 1818 08c0 0346     		mov	r3, r0
 1819 08c2 4FF08F41 		mov	r1, #1199570944
 1820 08c6 1846     		mov	r0, r3
 1821 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1822 08cc 0346     		mov	r3, r0
 1823 08ce 1A46     		mov	r2, r3
 1824 08d0 07F12003 		add	r3, r7, #32
 1825 08d4 1A60     		str	r2, [r3]	@ float
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1826              		.loc 1 483 0
 1827 08d6 0023     		movs	r3, #0
 1828 08d8 87F8573C 		strb	r3, [r7, #3159]
 1829 08dc 1DE0     		b	.L125
 1830              	.L126:
 484:..\src/command_processing.c ****                             }
 1831              		.loc 1 484 0 discriminator 3
 1832 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1833 08e2 3222     		movs	r2, #50
 1834 08e4 02FB03F3 		mul	r3, r2, r3
 1835 08e8 1A1D     		adds	r2, r3, #4
 1836 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1837 08ee 1A44     		add	r2, r2, r3
 1838 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1839 08f4 1A44     		add	r2, r2, r3
 1840 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1841 08fa D31A     		subs	r3, r2, r3
 1842 08fc 013B     		subs	r3, r3, #1
 1843 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1844 0902 07F12001 		add	r1, r7, #32
 1845 0906 0A44     		add	r2, r2, r1
 1846 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1847 090a 07F15802 		add	r2, r7, #88
 1848 090e D154     		strb	r1, [r2, r3]
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1849              		.loc 1 483 0 discriminator 3
 1850 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1851 0914 0133     		adds	r3, r3, #1
 1852 0916 87F8573C 		strb	r3, [r7, #3159]
 1853              	.L125:
 483:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 58


 1854              		.loc 1 483 0 is_stmt 0 discriminator 1
 1855 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1856 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1857 0922 9A42     		cmp	r2, r3
 1858 0924 DBD3     		bcc	.L126
 486:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1859              		.loc 1 486 0 is_stmt 1
 1860 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1861 092a 2049     		ldr	r1, .L257
 1862 092c 1346     		mov	r3, r2
 1863 092e DB00     		lsls	r3, r3, #3
 1864 0930 9B1A     		subs	r3, r3, r2
 1865 0932 1B01     		lsls	r3, r3, #4
 1866 0934 0B44     		add	r3, r3, r1
 1867 0936 D033     		adds	r3, r3, #208
 1868 0938 1B68     		ldr	r3, [r3]
 1869 093a 1846     		mov	r0, r3
 1870 093c FFF7FEFF 		bl	__aeabi_i2f
 1871 0940 0346     		mov	r3, r0
 1872 0942 4FF08F41 		mov	r1, #1199570944
 1873 0946 1846     		mov	r0, r3
 1874 0948 FFF7FEFF 		bl	__aeabi_fdiv
 1875 094c 0346     		mov	r3, r0
 1876 094e 1A46     		mov	r2, r3
 1877 0950 07F12003 		add	r3, r7, #32
 1878 0954 1A60     		str	r2, [r3]	@ float
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1879              		.loc 1 487 0
 1880 0956 0023     		movs	r3, #0
 1881 0958 87F8573C 		strb	r3, [r7, #3159]
 1882 095c 1EE0     		b	.L127
 1883              	.L128:
 488:..\src/command_processing.c ****                             }
 1884              		.loc 1 488 0 discriminator 3
 1885 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1886 0962 3222     		movs	r2, #50
 1887 0964 02FB03F3 		mul	r3, r2, r3
 1888 0968 1A1D     		adds	r2, r3, #4
 1889 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1890 096e 5B00     		lsls	r3, r3, #1
 1891 0970 1A44     		add	r2, r2, r3
 1892 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1893 0976 1A44     		add	r2, r2, r3
 1894 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1895 097c D31A     		subs	r3, r2, r3
 1896 097e 013B     		subs	r3, r3, #1
 1897 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1898 0984 07F12001 		add	r1, r7, #32
 1899 0988 0A44     		add	r2, r2, r1
 1900 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1901 098c 07F15802 		add	r2, r7, #88
 1902 0990 D154     		strb	r1, [r2, r3]
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1903              		.loc 1 487 0 discriminator 3
 1904 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1905 0996 0133     		adds	r3, r3, #1
 1906 0998 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 59


 1907              	.L127:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1908              		.loc 1 487 0 is_stmt 0 discriminator 1
 1909 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1910 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1911 09a4 9A42     		cmp	r2, r3
 1912 09a6 DAD3     		bcc	.L128
 1913              		.loc 1 491 0 is_stmt 1
 1914 09a8 00F0EDBE 		b	.L103
 1915              	.L258:
 1916              		.align	2
 1917              	.L257:
 1918 09ac 00000000 		.word	c_mem
 1919              	.L107:
 492:..\src/command_processing.c ****                         
 493:..\src/command_processing.c ****                     case 3:         //Current PID
 494:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1920              		.loc 1 494 0
 1921 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1922 09b4 C549     		ldr	r1, .L259
 1923 09b6 1346     		mov	r3, r2
 1924 09b8 DB00     		lsls	r3, r3, #3
 1925 09ba 9B1A     		subs	r3, r3, r2
 1926 09bc 1B01     		lsls	r3, r3, #4
 1927 09be 0B44     		add	r3, r3, r1
 1928 09c0 03F20F13 		addw	r3, r3, #271
 1929 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1930 09c6 032B     		cmp	r3, #3
 1931 09c8 00F0C080 		beq	.L129
 495:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 1932              		.loc 1 495 0
 1933 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1934 09d0 BE49     		ldr	r1, .L259
 1935 09d2 1346     		mov	r3, r2
 1936 09d4 DB00     		lsls	r3, r3, #3
 1937 09d6 9B1A     		subs	r3, r3, r2
 1938 09d8 1B01     		lsls	r3, r3, #4
 1939 09da 0B44     		add	r3, r3, r1
 1940 09dc BC33     		adds	r3, r3, #188
 1941 09de 1B68     		ldr	r3, [r3]
 1942 09e0 1846     		mov	r0, r3
 1943 09e2 FFF7FEFF 		bl	__aeabi_i2f
 1944 09e6 0346     		mov	r3, r0
 1945 09e8 4FF08F41 		mov	r1, #1199570944
 1946 09ec 1846     		mov	r0, r3
 1947 09ee FFF7FEFF 		bl	__aeabi_fdiv
 1948 09f2 0346     		mov	r3, r0
 1949 09f4 1A46     		mov	r2, r3
 1950 09f6 07F12003 		add	r3, r7, #32
 1951 09fa 1A60     		str	r2, [r3]	@ float
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1952              		.loc 1 496 0
 1953 09fc 0023     		movs	r3, #0
 1954 09fe 87F8573C 		strb	r3, [r7, #3159]
 1955 0a02 1AE0     		b	.L130
 1956              	.L131:
 497:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 60


 1957              		.loc 1 497 0 discriminator 3
 1958 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1959 0a08 3222     		movs	r2, #50
 1960 0a0a 02FB03F3 		mul	r3, r2, r3
 1961 0a0e 1A1D     		adds	r2, r3, #4
 1962 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1963 0a14 1A44     		add	r2, r2, r3
 1964 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1965 0a1a D31A     		subs	r3, r2, r3
 1966 0a1c 013B     		subs	r3, r3, #1
 1967 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1968 0a22 07F12001 		add	r1, r7, #32
 1969 0a26 0A44     		add	r2, r2, r1
 1970 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1971 0a2a 07F15802 		add	r2, r7, #88
 1972 0a2e D154     		strb	r1, [r2, r3]
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1973              		.loc 1 496 0 discriminator 3
 1974 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1975 0a34 0133     		adds	r3, r3, #1
 1976 0a36 87F8573C 		strb	r3, [r7, #3159]
 1977              	.L130:
 496:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1978              		.loc 1 496 0 is_stmt 0 discriminator 1
 1979 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1980 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1981 0a42 9A42     		cmp	r2, r3
 1982 0a44 DED3     		bcc	.L131
 498:..\src/command_processing.c ****                             }
 499:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 1983              		.loc 1 499 0 is_stmt 1
 1984 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1985 0a4a A049     		ldr	r1, .L259
 1986 0a4c 1346     		mov	r3, r2
 1987 0a4e DB00     		lsls	r3, r3, #3
 1988 0a50 9B1A     		subs	r3, r3, r2
 1989 0a52 1B01     		lsls	r3, r3, #4
 1990 0a54 0B44     		add	r3, r3, r1
 1991 0a56 C033     		adds	r3, r3, #192
 1992 0a58 1B68     		ldr	r3, [r3]
 1993 0a5a 1846     		mov	r0, r3
 1994 0a5c FFF7FEFF 		bl	__aeabi_i2f
 1995 0a60 0346     		mov	r3, r0
 1996 0a62 4FF08F41 		mov	r1, #1199570944
 1997 0a66 1846     		mov	r0, r3
 1998 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 1999 0a6c 0346     		mov	r3, r0
 2000 0a6e 1A46     		mov	r2, r3
 2001 0a70 07F12003 		add	r3, r7, #32
 2002 0a74 1A60     		str	r2, [r3]	@ float
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2003              		.loc 1 500 0
 2004 0a76 0023     		movs	r3, #0
 2005 0a78 87F8573C 		strb	r3, [r7, #3159]
 2006 0a7c 1DE0     		b	.L132
 2007              	.L133:
 501:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 61


 2008              		.loc 1 501 0 discriminator 3
 2009 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2010 0a82 3222     		movs	r2, #50
 2011 0a84 02FB03F3 		mul	r3, r2, r3
 2012 0a88 1A1D     		adds	r2, r3, #4
 2013 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2014 0a8e 1A44     		add	r2, r2, r3
 2015 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2016 0a94 1A44     		add	r2, r2, r3
 2017 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2018 0a9a D31A     		subs	r3, r2, r3
 2019 0a9c 013B     		subs	r3, r3, #1
 2020 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2021 0aa2 07F12001 		add	r1, r7, #32
 2022 0aa6 0A44     		add	r2, r2, r1
 2023 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2024 0aaa 07F15802 		add	r2, r7, #88
 2025 0aae D154     		strb	r1, [r2, r3]
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2026              		.loc 1 500 0 discriminator 3
 2027 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2028 0ab4 0133     		adds	r3, r3, #1
 2029 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2030              	.L132:
 500:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2031              		.loc 1 500 0 is_stmt 0 discriminator 1
 2032 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2033 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2034 0ac2 9A42     		cmp	r2, r3
 2035 0ac4 DBD3     		bcc	.L133
 502:..\src/command_processing.c ****                             }
 503:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2036              		.loc 1 503 0 is_stmt 1
 2037 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2038 0aca 8049     		ldr	r1, .L259
 2039 0acc 1346     		mov	r3, r2
 2040 0ace DB00     		lsls	r3, r3, #3
 2041 0ad0 9B1A     		subs	r3, r3, r2
 2042 0ad2 1B01     		lsls	r3, r3, #4
 2043 0ad4 0B44     		add	r3, r3, r1
 2044 0ad6 C433     		adds	r3, r3, #196
 2045 0ad8 1B68     		ldr	r3, [r3]
 2046 0ada 1846     		mov	r0, r3
 2047 0adc FFF7FEFF 		bl	__aeabi_i2f
 2048 0ae0 0346     		mov	r3, r0
 2049 0ae2 4FF08F41 		mov	r1, #1199570944
 2050 0ae6 1846     		mov	r0, r3
 2051 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2052 0aec 0346     		mov	r3, r0
 2053 0aee 1A46     		mov	r2, r3
 2054 0af0 07F12003 		add	r3, r7, #32
 2055 0af4 1A60     		str	r2, [r3]	@ float
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2056              		.loc 1 504 0
 2057 0af6 0023     		movs	r3, #0
 2058 0af8 87F8573C 		strb	r3, [r7, #3159]
 2059 0afc 1EE0     		b	.L134
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 62


 2060              	.L135:
 505:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2061              		.loc 1 505 0 discriminator 3
 2062 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2063 0b02 3222     		movs	r2, #50
 2064 0b04 02FB03F3 		mul	r3, r2, r3
 2065 0b08 1A1D     		adds	r2, r3, #4
 2066 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2067 0b0e 5B00     		lsls	r3, r3, #1
 2068 0b10 1A44     		add	r2, r2, r3
 2069 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2070 0b16 1A44     		add	r2, r2, r3
 2071 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2072 0b1c D31A     		subs	r3, r2, r3
 2073 0b1e 013B     		subs	r3, r3, #1
 2074 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2075 0b24 07F12001 		add	r1, r7, #32
 2076 0b28 0A44     		add	r2, r2, r1
 2077 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2078 0b2c 07F15802 		add	r2, r7, #88
 2079 0b30 D154     		strb	r1, [r2, r3]
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2080              		.loc 1 504 0 discriminator 3
 2081 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2082 0b36 0133     		adds	r3, r3, #1
 2083 0b38 87F8573C 		strb	r3, [r7, #3159]
 2084              	.L134:
 504:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2085              		.loc 1 504 0 is_stmt 0 discriminator 1
 2086 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2087 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2088 0b44 9A42     		cmp	r2, r3
 2089 0b46 DAD3     		bcc	.L135
 506:..\src/command_processing.c ****                             }
 507:..\src/command_processing.c ****                         }
 508:..\src/command_processing.c ****                         else {
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 514:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 515:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 516:..\src/command_processing.c ****                             }
 517:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 518:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 519:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 520:..\src/command_processing.c ****                             }
 521:..\src/command_processing.c ****                         }            
 522:..\src/command_processing.c ****                         break;  
 2090              		.loc 1 522 0 is_stmt 1
 2091 0b48 00F01DBE 		b	.L103
 2092              	.L129:
 509:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2093              		.loc 1 509 0
 2094 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2095 0b50 5E49     		ldr	r1, .L259
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 63


 2096 0b52 1346     		mov	r3, r2
 2097 0b54 DB00     		lsls	r3, r3, #3
 2098 0b56 9B1A     		subs	r3, r3, r2
 2099 0b58 1B01     		lsls	r3, r3, #4
 2100 0b5a 0B44     		add	r3, r3, r1
 2101 0b5c D433     		adds	r3, r3, #212
 2102 0b5e 1B68     		ldr	r3, [r3]
 2103 0b60 1846     		mov	r0, r3
 2104 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2105 0b66 0346     		mov	r3, r0
 2106 0b68 4FF08F41 		mov	r1, #1199570944
 2107 0b6c 1846     		mov	r0, r3
 2108 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2109 0b72 0346     		mov	r3, r0
 2110 0b74 1A46     		mov	r2, r3
 2111 0b76 07F12003 		add	r3, r7, #32
 2112 0b7a 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2113              		.loc 1 510 0
 2114 0b7c 0023     		movs	r3, #0
 2115 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2116 0b82 1AE0     		b	.L137
 2117              	.L138:
 511:..\src/command_processing.c ****                             }
 2118              		.loc 1 511 0 discriminator 3
 2119 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2120 0b88 3222     		movs	r2, #50
 2121 0b8a 02FB03F3 		mul	r3, r2, r3
 2122 0b8e 1A1D     		adds	r2, r3, #4
 2123 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2124 0b94 1A44     		add	r2, r2, r3
 2125 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2126 0b9a D31A     		subs	r3, r2, r3
 2127 0b9c 013B     		subs	r3, r3, #1
 2128 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2129 0ba2 07F12001 		add	r1, r7, #32
 2130 0ba6 0A44     		add	r2, r2, r1
 2131 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2132 0baa 07F15802 		add	r2, r7, #88
 2133 0bae D154     		strb	r1, [r2, r3]
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2134              		.loc 1 510 0 discriminator 3
 2135 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2136 0bb4 0133     		adds	r3, r3, #1
 2137 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2138              	.L137:
 510:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2139              		.loc 1 510 0 is_stmt 0 discriminator 1
 2140 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2141 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2142 0bc2 9A42     		cmp	r2, r3
 2143 0bc4 DED3     		bcc	.L138
 513:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2144              		.loc 1 513 0 is_stmt 1
 2145 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2146 0bca 4049     		ldr	r1, .L259
 2147 0bcc 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 64


 2148 0bce DB00     		lsls	r3, r3, #3
 2149 0bd0 9B1A     		subs	r3, r3, r2
 2150 0bd2 1B01     		lsls	r3, r3, #4
 2151 0bd4 0B44     		add	r3, r3, r1
 2152 0bd6 D833     		adds	r3, r3, #216
 2153 0bd8 1B68     		ldr	r3, [r3]
 2154 0bda 1846     		mov	r0, r3
 2155 0bdc FFF7FEFF 		bl	__aeabi_i2f
 2156 0be0 0346     		mov	r3, r0
 2157 0be2 4FF08F41 		mov	r1, #1199570944
 2158 0be6 1846     		mov	r0, r3
 2159 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2160 0bec 0346     		mov	r3, r0
 2161 0bee 1A46     		mov	r2, r3
 2162 0bf0 07F12003 		add	r3, r7, #32
 2163 0bf4 1A60     		str	r2, [r3]	@ float
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2164              		.loc 1 514 0
 2165 0bf6 0023     		movs	r3, #0
 2166 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2167 0bfc 1DE0     		b	.L139
 2168              	.L140:
 515:..\src/command_processing.c ****                             }
 2169              		.loc 1 515 0 discriminator 3
 2170 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2171 0c02 3222     		movs	r2, #50
 2172 0c04 02FB03F3 		mul	r3, r2, r3
 2173 0c08 1A1D     		adds	r2, r3, #4
 2174 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2175 0c0e 1A44     		add	r2, r2, r3
 2176 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2177 0c14 1A44     		add	r2, r2, r3
 2178 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2179 0c1a D31A     		subs	r3, r2, r3
 2180 0c1c 013B     		subs	r3, r3, #1
 2181 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2182 0c22 07F12001 		add	r1, r7, #32
 2183 0c26 0A44     		add	r2, r2, r1
 2184 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2185 0c2a 07F15802 		add	r2, r7, #88
 2186 0c2e D154     		strb	r1, [r2, r3]
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2187              		.loc 1 514 0 discriminator 3
 2188 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2189 0c34 0133     		adds	r3, r3, #1
 2190 0c36 87F8573C 		strb	r3, [r7, #3159]
 2191              	.L139:
 514:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2192              		.loc 1 514 0 is_stmt 0 discriminator 1
 2193 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2194 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2195 0c42 9A42     		cmp	r2, r3
 2196 0c44 DBD3     		bcc	.L140
 517:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2197              		.loc 1 517 0 is_stmt 1
 2198 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2199 0c4a 2049     		ldr	r1, .L259
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 65


 2200 0c4c 1346     		mov	r3, r2
 2201 0c4e DB00     		lsls	r3, r3, #3
 2202 0c50 9B1A     		subs	r3, r3, r2
 2203 0c52 1B01     		lsls	r3, r3, #4
 2204 0c54 0B44     		add	r3, r3, r1
 2205 0c56 DC33     		adds	r3, r3, #220
 2206 0c58 1B68     		ldr	r3, [r3]
 2207 0c5a 1846     		mov	r0, r3
 2208 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2209 0c60 0346     		mov	r3, r0
 2210 0c62 4FF08F41 		mov	r1, #1199570944
 2211 0c66 1846     		mov	r0, r3
 2212 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2213 0c6c 0346     		mov	r3, r0
 2214 0c6e 1A46     		mov	r2, r3
 2215 0c70 07F12003 		add	r3, r7, #32
 2216 0c74 1A60     		str	r2, [r3]	@ float
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2217              		.loc 1 518 0
 2218 0c76 0023     		movs	r3, #0
 2219 0c78 87F8573C 		strb	r3, [r7, #3159]
 2220 0c7c 1EE0     		b	.L141
 2221              	.L142:
 519:..\src/command_processing.c ****                             }
 2222              		.loc 1 519 0 discriminator 3
 2223 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2224 0c82 3222     		movs	r2, #50
 2225 0c84 02FB03F3 		mul	r3, r2, r3
 2226 0c88 1A1D     		adds	r2, r3, #4
 2227 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2228 0c8e 5B00     		lsls	r3, r3, #1
 2229 0c90 1A44     		add	r2, r2, r3
 2230 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2231 0c96 1A44     		add	r2, r2, r3
 2232 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2233 0c9c D31A     		subs	r3, r2, r3
 2234 0c9e 013B     		subs	r3, r3, #1
 2235 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2236 0ca4 07F12001 		add	r1, r7, #32
 2237 0ca8 0A44     		add	r2, r2, r1
 2238 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2239 0cac 07F15802 		add	r2, r7, #88
 2240 0cb0 D154     		strb	r1, [r2, r3]
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2241              		.loc 1 518 0 discriminator 3
 2242 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2243 0cb6 0133     		adds	r3, r3, #1
 2244 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2245              	.L141:
 518:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2246              		.loc 1 518 0 is_stmt 0 discriminator 1
 2247 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2248 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2249 0cc4 9A42     		cmp	r2, r3
 2250 0cc6 DAD3     		bcc	.L142
 2251              		.loc 1 522 0 is_stmt 1
 2252 0cc8 00F05DBD 		b	.L103
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 66


 2253              	.L260:
 2254              		.align	2
 2255              	.L259:
 2256 0ccc 00000000 		.word	c_mem
 2257              	.L108:
 523:..\src/command_processing.c **** 
 524:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 525:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2258              		.loc 1 525 0
 2259 0cd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2260 0cd4 D149     		ldr	r1, .L261
 2261 0cd6 1346     		mov	r3, r2
 2262 0cd8 DB00     		lsls	r3, r3, #3
 2263 0cda 9B1A     		subs	r3, r3, r2
 2264 0cdc 1B01     		lsls	r3, r3, #4
 2265 0cde 0B44     		add	r3, r3, r1
 2266 0ce0 03F58873 		add	r3, r3, #272
 2267 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2268 0ce6 1846     		mov	r0, r3
 2269 0ce8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2270 0cec CC49     		ldr	r1, .L261+4
 2271 0cee 0346     		mov	r3, r0
 2272 0cf0 5B00     		lsls	r3, r3, #1
 2273 0cf2 0344     		add	r3, r3, r0
 2274 0cf4 9B00     		lsls	r3, r3, #2
 2275 0cf6 1344     		add	r3, r3, r2
 2276 0cf8 6633     		adds	r3, r3, #102
 2277 0cfa 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2278 0cfe 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2279 0d02 C648     		ldr	r0, .L261
 2280 0d04 1346     		mov	r3, r2
 2281 0d06 DB00     		lsls	r3, r3, #3
 2282 0d08 9B1A     		subs	r3, r3, r2
 2283 0d0a 1B01     		lsls	r3, r3, #4
 2284 0d0c 0344     		add	r3, r3, r0
 2285 0d0e 03F58873 		add	r3, r3, #272
 2286 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2287 0d14 1C46     		mov	r4, r3
 2288 0d16 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2289 0d1a C148     		ldr	r0, .L261+4
 2290 0d1c 2346     		mov	r3, r4
 2291 0d1e 5B00     		lsls	r3, r3, #1
 2292 0d20 2344     		add	r3, r3, r4
 2293 0d22 1B01     		lsls	r3, r3, #4
 2294 0d24 0344     		add	r3, r3, r0
 2295 0d26 1344     		add	r3, r3, r2
 2296 0d28 03F29513 		addw	r3, r3, #405
 2297 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2298 0d2e 41FA03F3 		asr	r3, r1, r3
 2299 0d32 1AB2     		sxth	r2, r3
 2300 0d34 07F11E03 		add	r3, r7, #30
 2301 0d38 1A80     		strh	r2, [r3]	@ movhi
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2302              		.loc 1 526 0
 2303 0d3a 0023     		movs	r3, #0
 2304 0d3c 87F8563C 		strb	r3, [r7, #3158]
 2305 0d40 21E0     		b	.L143
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 67


 2306              	.L144:
 527:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2307              		.loc 1 527 0 discriminator 3
 2308 0d42 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2309 0d46 3222     		movs	r2, #50
 2310 0d48 02FB03F3 		mul	r3, r2, r3
 2311 0d4c 1A1D     		adds	r2, r3, #4
 2312 0d4e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2313 0d52 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2314 0d56 01FB03F3 		mul	r3, r1, r3
 2315 0d5a 1A44     		add	r2, r2, r3
 2316 0d5c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2317 0d60 1A44     		add	r2, r2, r3
 2318 0d62 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2319 0d66 D31A     		subs	r3, r2, r3
 2320 0d68 013B     		subs	r3, r3, #1
 2321 0d6a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2322 0d6e 07F11E01 		add	r1, r7, #30
 2323 0d72 0A44     		add	r2, r2, r1
 2324 0d74 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2325 0d76 07F15802 		add	r2, r7, #88
 2326 0d7a D154     		strb	r1, [r2, r3]
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2327              		.loc 1 526 0 discriminator 3
 2328 0d7c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2329 0d80 0133     		adds	r3, r3, #1
 2330 0d82 87F8563C 		strb	r3, [r7, #3158]
 2331              	.L143:
 526:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2332              		.loc 1 526 0 is_stmt 0 discriminator 1
 2333 0d86 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2334 0d8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2335 0d8e 9A42     		cmp	r2, r3
 2336 0d90 D7D3     		bcc	.L144
 528:..\src/command_processing.c ****                         }
 529:..\src/command_processing.c ****                         break;
 2337              		.loc 1 529 0 is_stmt 1
 2338 0d92 00F0F8BC 		b	.L103
 2339              	.L109:
 530:..\src/command_processing.c ****                 
 531:..\src/command_processing.c ****                     case 11:        //Position limits
 532:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2340              		.loc 1 532 0
 2341 0d96 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2342 0d9a A149     		ldr	r1, .L261+4
 2343 0d9c 1346     		mov	r3, r2
 2344 0d9e DB00     		lsls	r3, r3, #3
 2345 0da0 9B1A     		subs	r3, r3, r2
 2346 0da2 1B01     		lsls	r3, r3, #4
 2347 0da4 0B44     		add	r3, r3, r1
 2348 0da6 E433     		adds	r3, r3, #228
 2349 0da8 1968     		ldr	r1, [r3]
 2350 0daa 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2351 0dae 9B48     		ldr	r0, .L261
 2352 0db0 1346     		mov	r3, r2
 2353 0db2 DB00     		lsls	r3, r3, #3
 2354 0db4 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 68


 2355 0db6 1B01     		lsls	r3, r3, #4
 2356 0db8 0344     		add	r3, r3, r0
 2357 0dba 03F58873 		add	r3, r3, #272
 2358 0dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2359 0dc0 1846     		mov	r0, r3
 2360 0dc2 974A     		ldr	r2, .L261+4
 2361 0dc4 0346     		mov	r3, r0
 2362 0dc6 5B00     		lsls	r3, r3, #1
 2363 0dc8 0344     		add	r3, r3, r0
 2364 0dca 1B01     		lsls	r3, r3, #4
 2365 0dcc 1344     		add	r3, r3, r2
 2366 0dce 03F29513 		addw	r3, r3, #405
 2367 0dd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2368 0dd4 41FA03F2 		asr	r2, r1, r3
 2369 0dd8 07F11803 		add	r3, r7, #24
 2370 0ddc 1A60     		str	r2, [r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2371              		.loc 1 533 0
 2372 0dde 0023     		movs	r3, #0
 2373 0de0 87F8563C 		strb	r3, [r7, #3158]
 2374 0de4 1AE0     		b	.L145
 2375              	.L146:
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2376              		.loc 1 534 0 discriminator 3
 2377 0de6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2378 0dea 3222     		movs	r2, #50
 2379 0dec 02FB03F3 		mul	r3, r2, r3
 2380 0df0 1A1D     		adds	r2, r3, #4
 2381 0df2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2382 0df6 1A44     		add	r2, r2, r3
 2383 0df8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2384 0dfc D31A     		subs	r3, r2, r3
 2385 0dfe 013B     		subs	r3, r3, #1
 2386 0e00 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2387 0e04 07F11801 		add	r1, r7, #24
 2388 0e08 0A44     		add	r2, r2, r1
 2389 0e0a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2390 0e0c 07F15802 		add	r2, r7, #88
 2391 0e10 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2392              		.loc 1 533 0 discriminator 3
 2393 0e12 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2394 0e16 0133     		adds	r3, r3, #1
 2395 0e18 87F8563C 		strb	r3, [r7, #3158]
 2396              	.L145:
 533:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2397              		.loc 1 533 0 is_stmt 0 discriminator 1
 2398 0e1c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2399 0e20 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2400 0e24 9A42     		cmp	r2, r3
 2401 0e26 DED3     		bcc	.L146
 535:..\src/command_processing.c ****                         }
 536:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2402              		.loc 1 536 0 is_stmt 1
 2403 0e28 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2404 0e2c 7C49     		ldr	r1, .L261+4
 2405 0e2e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 69


 2406 0e30 DB00     		lsls	r3, r3, #3
 2407 0e32 9B1A     		subs	r3, r3, r2
 2408 0e34 1B01     		lsls	r3, r3, #4
 2409 0e36 0B44     		add	r3, r3, r1
 2410 0e38 E833     		adds	r3, r3, #232
 2411 0e3a 1968     		ldr	r1, [r3]
 2412 0e3c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2413 0e40 7648     		ldr	r0, .L261
 2414 0e42 1346     		mov	r3, r2
 2415 0e44 DB00     		lsls	r3, r3, #3
 2416 0e46 9B1A     		subs	r3, r3, r2
 2417 0e48 1B01     		lsls	r3, r3, #4
 2418 0e4a 0344     		add	r3, r3, r0
 2419 0e4c 03F58873 		add	r3, r3, #272
 2420 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2421 0e52 1846     		mov	r0, r3
 2422 0e54 724A     		ldr	r2, .L261+4
 2423 0e56 0346     		mov	r3, r0
 2424 0e58 5B00     		lsls	r3, r3, #1
 2425 0e5a 0344     		add	r3, r3, r0
 2426 0e5c 1B01     		lsls	r3, r3, #4
 2427 0e5e 1344     		add	r3, r3, r2
 2428 0e60 03F29513 		addw	r3, r3, #405
 2429 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2430 0e66 41FA03F2 		asr	r2, r1, r3
 2431 0e6a 07F11803 		add	r3, r7, #24
 2432 0e6e 1A60     		str	r2, [r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2433              		.loc 1 537 0
 2434 0e70 0023     		movs	r3, #0
 2435 0e72 87F8563C 		strb	r3, [r7, #3158]
 2436 0e76 1DE0     		b	.L147
 2437              	.L148:
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2438              		.loc 1 538 0 discriminator 3
 2439 0e78 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2440 0e7c 3222     		movs	r2, #50
 2441 0e7e 02FB03F3 		mul	r3, r2, r3
 2442 0e82 1A1D     		adds	r2, r3, #4
 2443 0e84 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2444 0e88 1A44     		add	r2, r2, r3
 2445 0e8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2446 0e8e 1A44     		add	r2, r2, r3
 2447 0e90 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2448 0e94 D31A     		subs	r3, r2, r3
 2449 0e96 013B     		subs	r3, r3, #1
 2450 0e98 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2451 0e9c 07F11801 		add	r1, r7, #24
 2452 0ea0 0A44     		add	r2, r2, r1
 2453 0ea2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2454 0ea4 07F15802 		add	r2, r7, #88
 2455 0ea8 D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2456              		.loc 1 537 0 discriminator 3
 2457 0eaa 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2458 0eae 0133     		adds	r3, r3, #1
 2459 0eb0 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 70


 2460              	.L147:
 537:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2461              		.loc 1 537 0 is_stmt 0 discriminator 1
 2462 0eb4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2463 0eb8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2464 0ebc 9A42     		cmp	r2, r3
 2465 0ebe DBD3     		bcc	.L148
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         break;            
 2466              		.loc 1 540 0 is_stmt 1
 2467 0ec0 00F061BC 		b	.L103
 2468              	.L110:
 541:..\src/command_processing.c **** 
 542:..\src/command_processing.c ****                     case 23:        //Rest Position
 543:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2469              		.loc 1 543 0
 2470 0ec4 564B     		ldr	r3, .L261+4
 2471 0ec6 D3F8A012 		ldr	r1, [r3, #672]
 2472 0eca 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2473 0ece 5348     		ldr	r0, .L261
 2474 0ed0 1346     		mov	r3, r2
 2475 0ed2 DB00     		lsls	r3, r3, #3
 2476 0ed4 9B1A     		subs	r3, r3, r2
 2477 0ed6 1B01     		lsls	r3, r3, #4
 2478 0ed8 0344     		add	r3, r3, r0
 2479 0eda 03F58873 		add	r3, r3, #272
 2480 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2481 0ee0 1846     		mov	r0, r3
 2482 0ee2 4F4A     		ldr	r2, .L261+4
 2483 0ee4 0346     		mov	r3, r0
 2484 0ee6 5B00     		lsls	r3, r3, #1
 2485 0ee8 0344     		add	r3, r3, r0
 2486 0eea 1B01     		lsls	r3, r3, #4
 2487 0eec 1344     		add	r3, r3, r2
 2488 0eee 03F29513 		addw	r3, r3, #405
 2489 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2490 0ef4 41FA03F2 		asr	r2, r1, r3
 2491 0ef8 07F11803 		add	r3, r7, #24
 2492 0efc 1A60     		str	r2, [r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2493              		.loc 1 544 0
 2494 0efe 0023     		movs	r3, #0
 2495 0f00 87F8563C 		strb	r3, [r7, #3158]
 2496 0f04 1AE0     		b	.L149
 2497              	.L150:
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2498              		.loc 1 545 0 discriminator 3
 2499 0f06 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2500 0f0a 3222     		movs	r2, #50
 2501 0f0c 02FB03F3 		mul	r3, r2, r3
 2502 0f10 1A1D     		adds	r2, r3, #4
 2503 0f12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2504 0f16 1A44     		add	r2, r2, r3
 2505 0f18 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2506 0f1c D31A     		subs	r3, r2, r3
 2507 0f1e 013B     		subs	r3, r3, #1
 2508 0f20 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 71


 2509 0f24 07F11801 		add	r1, r7, #24
 2510 0f28 0A44     		add	r2, r2, r1
 2511 0f2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2512 0f2c 07F15802 		add	r2, r7, #88
 2513 0f30 D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2514              		.loc 1 544 0 discriminator 3
 2515 0f32 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2516 0f36 0133     		adds	r3, r3, #1
 2517 0f38 87F8563C 		strb	r3, [r7, #3158]
 2518              	.L149:
 544:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2519              		.loc 1 544 0 is_stmt 0 discriminator 1
 2520 0f3c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2521 0f40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2522 0f44 9A42     		cmp	r2, r3
 2523 0f46 DED3     		bcc	.L150
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         break; 
 2524              		.loc 1 547 0 is_stmt 1
 2525 0f48 00F01DBC 		b	.L103
 2526              	.L111:
 548:..\src/command_processing.c ****                         
 549:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 550:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2527              		.loc 1 550 0
 2528 0f4c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2529 0f50 3349     		ldr	r1, .L261+4
 2530 0f52 1346     		mov	r3, r2
 2531 0f54 DB00     		lsls	r3, r3, #3
 2532 0f56 9B1A     		subs	r3, r3, r2
 2533 0f58 1B01     		lsls	r3, r3, #4
 2534 0f5a 0B44     		add	r3, r3, r1
 2535 0f5c 03F20F13 		addw	r3, r3, #271
 2536 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2537 0f62 032B     		cmp	r3, #3
 2538 0f64 00F0C480 		beq	.L151
 551:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2539              		.loc 1 551 0
 2540 0f68 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2541 0f6c 2C49     		ldr	r1, .L261+4
 2542 0f6e 1346     		mov	r3, r2
 2543 0f70 DB00     		lsls	r3, r3, #3
 2544 0f72 9B1A     		subs	r3, r3, r2
 2545 0f74 1B01     		lsls	r3, r3, #4
 2546 0f76 0B44     		add	r3, r3, r1
 2547 0f78 B033     		adds	r3, r3, #176
 2548 0f7a 1B68     		ldr	r3, [r3]
 2549 0f7c 1846     		mov	r0, r3
 2550 0f7e FFF7FEFF 		bl	__aeabi_i2f
 2551 0f82 0346     		mov	r3, r0
 2552 0f84 4FF08F41 		mov	r1, #1199570944
 2553 0f88 1846     		mov	r0, r3
 2554 0f8a FFF7FEFF 		bl	__aeabi_fdiv
 2555 0f8e 0346     		mov	r3, r0
 2556 0f90 1A46     		mov	r2, r3
 2557 0f92 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 72


 2558 0f96 1A60     		str	r2, [r3]	@ float
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2559              		.loc 1 552 0
 2560 0f98 0023     		movs	r3, #0
 2561 0f9a 87F8573C 		strb	r3, [r7, #3159]
 2562 0f9e 1AE0     		b	.L152
 2563              	.L153:
 553:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2564              		.loc 1 553 0 discriminator 3
 2565 0fa0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2566 0fa4 3222     		movs	r2, #50
 2567 0fa6 02FB03F3 		mul	r3, r2, r3
 2568 0faa 1A1D     		adds	r2, r3, #4
 2569 0fac 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2570 0fb0 1A44     		add	r2, r2, r3
 2571 0fb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2572 0fb6 D31A     		subs	r3, r2, r3
 2573 0fb8 013B     		subs	r3, r3, #1
 2574 0fba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2575 0fbe 07F12001 		add	r1, r7, #32
 2576 0fc2 0A44     		add	r2, r2, r1
 2577 0fc4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2578 0fc6 07F15802 		add	r2, r7, #88
 2579 0fca D154     		strb	r1, [r2, r3]
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2580              		.loc 1 552 0 discriminator 3
 2581 0fcc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2582 0fd0 0133     		adds	r3, r3, #1
 2583 0fd2 87F8573C 		strb	r3, [r7, #3159]
 2584              	.L152:
 552:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2585              		.loc 1 552 0 is_stmt 0 discriminator 1
 2586 0fd6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2587 0fda 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2588 0fde 9A42     		cmp	r2, r3
 2589 0fe0 DED3     		bcc	.L153
 554:..\src/command_processing.c ****                             }
 555:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2590              		.loc 1 555 0 is_stmt 1
 2591 0fe2 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2592 0fe6 0E49     		ldr	r1, .L261+4
 2593 0fe8 1346     		mov	r3, r2
 2594 0fea DB00     		lsls	r3, r3, #3
 2595 0fec 9B1A     		subs	r3, r3, r2
 2596 0fee 1B01     		lsls	r3, r3, #4
 2597 0ff0 0B44     		add	r3, r3, r1
 2598 0ff2 B433     		adds	r3, r3, #180
 2599 0ff4 1B68     		ldr	r3, [r3]
 2600 0ff6 1846     		mov	r0, r3
 2601 0ff8 FFF7FEFF 		bl	__aeabi_i2f
 2602 0ffc 0346     		mov	r3, r0
 2603 0ffe 4FF08F41 		mov	r1, #1199570944
 2604 1002 1846     		mov	r0, r3
 2605 1004 FFF7FEFF 		bl	__aeabi_fdiv
 2606 1008 0346     		mov	r3, r0
 2607 100a 1A46     		mov	r2, r3
 2608 100c 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 73


 2609 1010 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2610              		.loc 1 556 0
 2611 1012 0023     		movs	r3, #0
 2612 1014 87F8573C 		strb	r3, [r7, #3159]
 2613 1018 22E0     		b	.L154
 2614              	.L262:
 2615 101a 00BF     		.align	2
 2616              	.L261:
 2617 101c 00000000 		.word	g_mem
 2618 1020 00000000 		.word	c_mem
 2619              	.L155:
 557:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2620              		.loc 1 557 0 discriminator 3
 2621 1024 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2622 1028 3222     		movs	r2, #50
 2623 102a 02FB03F3 		mul	r3, r2, r3
 2624 102e 1A1D     		adds	r2, r3, #4
 2625 1030 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2626 1034 1A44     		add	r2, r2, r3
 2627 1036 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2628 103a 1A44     		add	r2, r2, r3
 2629 103c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2630 1040 D31A     		subs	r3, r2, r3
 2631 1042 013B     		subs	r3, r3, #1
 2632 1044 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2633 1048 07F12001 		add	r1, r7, #32
 2634 104c 0A44     		add	r2, r2, r1
 2635 104e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2636 1050 07F15802 		add	r2, r7, #88
 2637 1054 D154     		strb	r1, [r2, r3]
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2638              		.loc 1 556 0 discriminator 3
 2639 1056 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2640 105a 0133     		adds	r3, r3, #1
 2641 105c 87F8573C 		strb	r3, [r7, #3159]
 2642              	.L154:
 556:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2643              		.loc 1 556 0 is_stmt 0 discriminator 1
 2644 1060 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2645 1064 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2646 1068 9A42     		cmp	r2, r3
 2647 106a DBD3     		bcc	.L155
 558:..\src/command_processing.c ****                             }
 559:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2648              		.loc 1 559 0 is_stmt 1
 2649 106c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2650 1070 D249     		ldr	r1, .L263
 2651 1072 1346     		mov	r3, r2
 2652 1074 DB00     		lsls	r3, r3, #3
 2653 1076 9B1A     		subs	r3, r3, r2
 2654 1078 1B01     		lsls	r3, r3, #4
 2655 107a 0B44     		add	r3, r3, r1
 2656 107c B833     		adds	r3, r3, #184
 2657 107e 1B68     		ldr	r3, [r3]
 2658 1080 1846     		mov	r0, r3
 2659 1082 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 74


 2660 1086 0346     		mov	r3, r0
 2661 1088 4FF08F41 		mov	r1, #1199570944
 2662 108c 1846     		mov	r0, r3
 2663 108e FFF7FEFF 		bl	__aeabi_fdiv
 2664 1092 0346     		mov	r3, r0
 2665 1094 1A46     		mov	r2, r3
 2666 1096 07F12003 		add	r3, r7, #32
 2667 109a 1A60     		str	r2, [r3]	@ float
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2668              		.loc 1 560 0
 2669 109c 0023     		movs	r3, #0
 2670 109e 87F8573C 		strb	r3, [r7, #3159]
 2671 10a2 1EE0     		b	.L156
 2672              	.L157:
 561:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2673              		.loc 1 561 0 discriminator 3
 2674 10a4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2675 10a8 3222     		movs	r2, #50
 2676 10aa 02FB03F3 		mul	r3, r2, r3
 2677 10ae 1A1D     		adds	r2, r3, #4
 2678 10b0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2679 10b4 5B00     		lsls	r3, r3, #1
 2680 10b6 1A44     		add	r2, r2, r3
 2681 10b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2682 10bc 1A44     		add	r2, r2, r3
 2683 10be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2684 10c2 D31A     		subs	r3, r2, r3
 2685 10c4 013B     		subs	r3, r3, #1
 2686 10c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2687 10ca 07F12001 		add	r1, r7, #32
 2688 10ce 0A44     		add	r2, r2, r1
 2689 10d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2690 10d2 07F15802 		add	r2, r7, #88
 2691 10d6 D154     		strb	r1, [r2, r3]
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2692              		.loc 1 560 0 discriminator 3
 2693 10d8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2694 10dc 0133     		adds	r3, r3, #1
 2695 10de 87F8573C 		strb	r3, [r7, #3159]
 2696              	.L156:
 560:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2697              		.loc 1 560 0 is_stmt 0 discriminator 1
 2698 10e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2699 10e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2700 10ea 9A42     		cmp	r2, r3
 2701 10ec DAD3     		bcc	.L157
 562:..\src/command_processing.c ****                             } 
 563:..\src/command_processing.c ****                         }
 564:..\src/command_processing.c ****                         else {
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 568:..\src/command_processing.c ****                             }
 569:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 570:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 572:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 75


 573:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 574:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 576:..\src/command_processing.c ****                             }
 577:..\src/command_processing.c ****                         }
 578:..\src/command_processing.c ****                         break;
 2702              		.loc 1 578 0 is_stmt 1
 2703 10ee 4AE3     		b	.L103
 2704              	.L151:
 565:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2705              		.loc 1 565 0
 2706 10f0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2707 10f4 B149     		ldr	r1, .L263
 2708 10f6 1346     		mov	r3, r2
 2709 10f8 DB00     		lsls	r3, r3, #3
 2710 10fa 9B1A     		subs	r3, r3, r2
 2711 10fc 1B01     		lsls	r3, r3, #4
 2712 10fe 0B44     		add	r3, r3, r1
 2713 1100 C833     		adds	r3, r3, #200
 2714 1102 1B68     		ldr	r3, [r3]
 2715 1104 1846     		mov	r0, r3
 2716 1106 FFF7FEFF 		bl	__aeabi_i2f
 2717 110a 0346     		mov	r3, r0
 2718 110c 4FF08F41 		mov	r1, #1199570944
 2719 1110 1846     		mov	r0, r3
 2720 1112 FFF7FEFF 		bl	__aeabi_fdiv
 2721 1116 0346     		mov	r3, r0
 2722 1118 1A46     		mov	r2, r3
 2723 111a 07F12003 		add	r3, r7, #32
 2724 111e 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2725              		.loc 1 566 0
 2726 1120 0023     		movs	r3, #0
 2727 1122 87F8573C 		strb	r3, [r7, #3159]
 2728 1126 1AE0     		b	.L159
 2729              	.L160:
 567:..\src/command_processing.c ****                             }
 2730              		.loc 1 567 0 discriminator 3
 2731 1128 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2732 112c 3222     		movs	r2, #50
 2733 112e 02FB03F3 		mul	r3, r2, r3
 2734 1132 1A1D     		adds	r2, r3, #4
 2735 1134 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2736 1138 1A44     		add	r2, r2, r3
 2737 113a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2738 113e D31A     		subs	r3, r2, r3
 2739 1140 013B     		subs	r3, r3, #1
 2740 1142 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2741 1146 07F12001 		add	r1, r7, #32
 2742 114a 0A44     		add	r2, r2, r1
 2743 114c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2744 114e 07F15802 		add	r2, r7, #88
 2745 1152 D154     		strb	r1, [r2, r3]
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2746              		.loc 1 566 0 discriminator 3
 2747 1154 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2748 1158 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 76


 2749 115a 87F8573C 		strb	r3, [r7, #3159]
 2750              	.L159:
 566:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2751              		.loc 1 566 0 is_stmt 0 discriminator 1
 2752 115e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2753 1162 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2754 1166 9A42     		cmp	r2, r3
 2755 1168 DED3     		bcc	.L160
 569:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2756              		.loc 1 569 0 is_stmt 1
 2757 116a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2758 116e 9349     		ldr	r1, .L263
 2759 1170 1346     		mov	r3, r2
 2760 1172 DB00     		lsls	r3, r3, #3
 2761 1174 9B1A     		subs	r3, r3, r2
 2762 1176 1B01     		lsls	r3, r3, #4
 2763 1178 0B44     		add	r3, r3, r1
 2764 117a CC33     		adds	r3, r3, #204
 2765 117c 1B68     		ldr	r3, [r3]
 2766 117e 1846     		mov	r0, r3
 2767 1180 FFF7FEFF 		bl	__aeabi_i2f
 2768 1184 0346     		mov	r3, r0
 2769 1186 4FF08F41 		mov	r1, #1199570944
 2770 118a 1846     		mov	r0, r3
 2771 118c FFF7FEFF 		bl	__aeabi_fdiv
 2772 1190 0346     		mov	r3, r0
 2773 1192 1A46     		mov	r2, r3
 2774 1194 07F12003 		add	r3, r7, #32
 2775 1198 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2776              		.loc 1 570 0
 2777 119a 0023     		movs	r3, #0
 2778 119c 87F8573C 		strb	r3, [r7, #3159]
 2779 11a0 1DE0     		b	.L161
 2780              	.L162:
 571:..\src/command_processing.c ****                             }
 2781              		.loc 1 571 0 discriminator 3
 2782 11a2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2783 11a6 3222     		movs	r2, #50
 2784 11a8 02FB03F3 		mul	r3, r2, r3
 2785 11ac 1A1D     		adds	r2, r3, #4
 2786 11ae 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2787 11b2 1A44     		add	r2, r2, r3
 2788 11b4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2789 11b8 1A44     		add	r2, r2, r3
 2790 11ba 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2791 11be D31A     		subs	r3, r2, r3
 2792 11c0 013B     		subs	r3, r3, #1
 2793 11c2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2794 11c6 07F12001 		add	r1, r7, #32
 2795 11ca 0A44     		add	r2, r2, r1
 2796 11cc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2797 11ce 07F15802 		add	r2, r7, #88
 2798 11d2 D154     		strb	r1, [r2, r3]
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2799              		.loc 1 570 0 discriminator 3
 2800 11d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 77


 2801 11d8 0133     		adds	r3, r3, #1
 2802 11da 87F8573C 		strb	r3, [r7, #3159]
 2803              	.L161:
 570:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2804              		.loc 1 570 0 is_stmt 0 discriminator 1
 2805 11de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2806 11e2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2807 11e6 9A42     		cmp	r2, r3
 2808 11e8 DBD3     		bcc	.L162
 573:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2809              		.loc 1 573 0 is_stmt 1
 2810 11ea 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2811 11ee 7349     		ldr	r1, .L263
 2812 11f0 1346     		mov	r3, r2
 2813 11f2 DB00     		lsls	r3, r3, #3
 2814 11f4 9B1A     		subs	r3, r3, r2
 2815 11f6 1B01     		lsls	r3, r3, #4
 2816 11f8 0B44     		add	r3, r3, r1
 2817 11fa D033     		adds	r3, r3, #208
 2818 11fc 1B68     		ldr	r3, [r3]
 2819 11fe 1846     		mov	r0, r3
 2820 1200 FFF7FEFF 		bl	__aeabi_i2f
 2821 1204 0346     		mov	r3, r0
 2822 1206 4FF08F41 		mov	r1, #1199570944
 2823 120a 1846     		mov	r0, r3
 2824 120c FFF7FEFF 		bl	__aeabi_fdiv
 2825 1210 0346     		mov	r3, r0
 2826 1212 1A46     		mov	r2, r3
 2827 1214 07F12003 		add	r3, r7, #32
 2828 1218 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2829              		.loc 1 574 0
 2830 121a 0023     		movs	r3, #0
 2831 121c 87F8573C 		strb	r3, [r7, #3159]
 2832 1220 1EE0     		b	.L163
 2833              	.L164:
 575:..\src/command_processing.c ****                             }
 2834              		.loc 1 575 0 discriminator 3
 2835 1222 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2836 1226 3222     		movs	r2, #50
 2837 1228 02FB03F3 		mul	r3, r2, r3
 2838 122c 1A1D     		adds	r2, r3, #4
 2839 122e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2840 1232 5B00     		lsls	r3, r3, #1
 2841 1234 1A44     		add	r2, r2, r3
 2842 1236 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2843 123a 1A44     		add	r2, r2, r3
 2844 123c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2845 1240 D31A     		subs	r3, r2, r3
 2846 1242 013B     		subs	r3, r3, #1
 2847 1244 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2848 1248 07F12001 		add	r1, r7, #32
 2849 124c 0A44     		add	r2, r2, r1
 2850 124e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2851 1250 07F15802 		add	r2, r7, #88
 2852 1254 D154     		strb	r1, [r2, r3]
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 78


 2853              		.loc 1 574 0 discriminator 3
 2854 1256 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2855 125a 0133     		adds	r3, r3, #1
 2856 125c 87F8573C 		strb	r3, [r7, #3159]
 2857              	.L163:
 574:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2858              		.loc 1 574 0 is_stmt 0 discriminator 1
 2859 1260 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2860 1264 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2861 1268 9A42     		cmp	r2, r3
 2862 126a DAD3     		bcc	.L164
 2863              		.loc 1 578 0 is_stmt 1
 2864 126c 8BE2     		b	.L103
 2865              	.L112:
 579:..\src/command_processing.c ****                         
 580:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 581:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2866              		.loc 1 581 0
 2867 126e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2868 1272 5249     		ldr	r1, .L263
 2869 1274 1346     		mov	r3, r2
 2870 1276 DB00     		lsls	r3, r3, #3
 2871 1278 9B1A     		subs	r3, r3, r2
 2872 127a 1B01     		lsls	r3, r3, #4
 2873 127c 0B44     		add	r3, r3, r1
 2874 127e 03F20F13 		addw	r3, r3, #271
 2875 1282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2876 1284 032B     		cmp	r3, #3
 2877 1286 00F0C180 		beq	.L165
 582:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 2878              		.loc 1 582 0
 2879 128a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2880 128e 4B49     		ldr	r1, .L263
 2881 1290 1346     		mov	r3, r2
 2882 1292 DB00     		lsls	r3, r3, #3
 2883 1294 9B1A     		subs	r3, r3, r2
 2884 1296 1B01     		lsls	r3, r3, #4
 2885 1298 0B44     		add	r3, r3, r1
 2886 129a BC33     		adds	r3, r3, #188
 2887 129c 1B68     		ldr	r3, [r3]
 2888 129e 1846     		mov	r0, r3
 2889 12a0 FFF7FEFF 		bl	__aeabi_i2f
 2890 12a4 0346     		mov	r3, r0
 2891 12a6 4FF08F41 		mov	r1, #1199570944
 2892 12aa 1846     		mov	r0, r3
 2893 12ac FFF7FEFF 		bl	__aeabi_fdiv
 2894 12b0 0346     		mov	r3, r0
 2895 12b2 1A46     		mov	r2, r3
 2896 12b4 07F12003 		add	r3, r7, #32
 2897 12b8 1A60     		str	r2, [r3]	@ float
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2898              		.loc 1 583 0
 2899 12ba 0023     		movs	r3, #0
 2900 12bc 87F8573C 		strb	r3, [r7, #3159]
 2901 12c0 1AE0     		b	.L166
 2902              	.L167:
 584:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 79


 2903              		.loc 1 584 0 discriminator 3
 2904 12c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2905 12c6 3222     		movs	r2, #50
 2906 12c8 02FB03F3 		mul	r3, r2, r3
 2907 12cc 1A1D     		adds	r2, r3, #4
 2908 12ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2909 12d2 1A44     		add	r2, r2, r3
 2910 12d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2911 12d8 D31A     		subs	r3, r2, r3
 2912 12da 013B     		subs	r3, r3, #1
 2913 12dc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2914 12e0 07F12001 		add	r1, r7, #32
 2915 12e4 0A44     		add	r2, r2, r1
 2916 12e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2917 12e8 07F15802 		add	r2, r7, #88
 2918 12ec D154     		strb	r1, [r2, r3]
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2919              		.loc 1 583 0 discriminator 3
 2920 12ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2921 12f2 0133     		adds	r3, r3, #1
 2922 12f4 87F8573C 		strb	r3, [r7, #3159]
 2923              	.L166:
 583:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2924              		.loc 1 583 0 is_stmt 0 discriminator 1
 2925 12f8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2926 12fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2927 1300 9A42     		cmp	r2, r3
 2928 1302 DED3     		bcc	.L167
 585:..\src/command_processing.c ****                             }
 586:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 2929              		.loc 1 586 0 is_stmt 1
 2930 1304 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2931 1308 2C49     		ldr	r1, .L263
 2932 130a 1346     		mov	r3, r2
 2933 130c DB00     		lsls	r3, r3, #3
 2934 130e 9B1A     		subs	r3, r3, r2
 2935 1310 1B01     		lsls	r3, r3, #4
 2936 1312 0B44     		add	r3, r3, r1
 2937 1314 C033     		adds	r3, r3, #192
 2938 1316 1B68     		ldr	r3, [r3]
 2939 1318 1846     		mov	r0, r3
 2940 131a FFF7FEFF 		bl	__aeabi_i2f
 2941 131e 0346     		mov	r3, r0
 2942 1320 4FF08F41 		mov	r1, #1199570944
 2943 1324 1846     		mov	r0, r3
 2944 1326 FFF7FEFF 		bl	__aeabi_fdiv
 2945 132a 0346     		mov	r3, r0
 2946 132c 1A46     		mov	r2, r3
 2947 132e 07F12003 		add	r3, r7, #32
 2948 1332 1A60     		str	r2, [r3]	@ float
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2949              		.loc 1 587 0
 2950 1334 0023     		movs	r3, #0
 2951 1336 87F8573C 		strb	r3, [r7, #3159]
 2952 133a 1DE0     		b	.L168
 2953              	.L169:
 588:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 80


 2954              		.loc 1 588 0 discriminator 3
 2955 133c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2956 1340 3222     		movs	r2, #50
 2957 1342 02FB03F3 		mul	r3, r2, r3
 2958 1346 1A1D     		adds	r2, r3, #4
 2959 1348 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2960 134c 1A44     		add	r2, r2, r3
 2961 134e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2962 1352 1A44     		add	r2, r2, r3
 2963 1354 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2964 1358 D31A     		subs	r3, r2, r3
 2965 135a 013B     		subs	r3, r3, #1
 2966 135c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2967 1360 07F12001 		add	r1, r7, #32
 2968 1364 0A44     		add	r2, r2, r1
 2969 1366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2970 1368 07F15802 		add	r2, r7, #88
 2971 136c D154     		strb	r1, [r2, r3]
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2972              		.loc 1 587 0 discriminator 3
 2973 136e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2974 1372 0133     		adds	r3, r3, #1
 2975 1374 87F8573C 		strb	r3, [r7, #3159]
 2976              	.L168:
 587:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2977              		.loc 1 587 0 is_stmt 0 discriminator 1
 2978 1378 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2979 137c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2980 1380 9A42     		cmp	r2, r3
 2981 1382 DBD3     		bcc	.L169
 589:..\src/command_processing.c ****                             }
 590:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 2982              		.loc 1 590 0 is_stmt 1
 2983 1384 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2984 1388 0C49     		ldr	r1, .L263
 2985 138a 1346     		mov	r3, r2
 2986 138c DB00     		lsls	r3, r3, #3
 2987 138e 9B1A     		subs	r3, r3, r2
 2988 1390 1B01     		lsls	r3, r3, #4
 2989 1392 0B44     		add	r3, r3, r1
 2990 1394 C433     		adds	r3, r3, #196
 2991 1396 1B68     		ldr	r3, [r3]
 2992 1398 1846     		mov	r0, r3
 2993 139a FFF7FEFF 		bl	__aeabi_i2f
 2994 139e 0346     		mov	r3, r0
 2995 13a0 4FF08F41 		mov	r1, #1199570944
 2996 13a4 1846     		mov	r0, r3
 2997 13a6 FFF7FEFF 		bl	__aeabi_fdiv
 2998 13aa 0346     		mov	r3, r0
 2999 13ac 1A46     		mov	r2, r3
 3000 13ae 07F12003 		add	r3, r7, #32
 3001 13b2 1A60     		str	r2, [r3]	@ float
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3002              		.loc 1 591 0
 3003 13b4 0023     		movs	r3, #0
 3004 13b6 87F8573C 		strb	r3, [r7, #3159]
 3005 13ba 20E0     		b	.L170
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 81


 3006              	.L264:
 3007              		.align	2
 3008              	.L263:
 3009 13bc 00000000 		.word	c_mem
 3010              	.L171:
 592:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3011              		.loc 1 592 0 discriminator 3
 3012 13c0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3013 13c4 3222     		movs	r2, #50
 3014 13c6 02FB03F3 		mul	r3, r2, r3
 3015 13ca 1A1D     		adds	r2, r3, #4
 3016 13cc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3017 13d0 5B00     		lsls	r3, r3, #1
 3018 13d2 1A44     		add	r2, r2, r3
 3019 13d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3020 13d8 1A44     		add	r2, r2, r3
 3021 13da 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3022 13de D31A     		subs	r3, r2, r3
 3023 13e0 013B     		subs	r3, r3, #1
 3024 13e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3025 13e6 07F12001 		add	r1, r7, #32
 3026 13ea 0A44     		add	r2, r2, r1
 3027 13ec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3028 13ee 07F15802 		add	r2, r7, #88
 3029 13f2 D154     		strb	r1, [r2, r3]
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3030              		.loc 1 591 0 discriminator 3
 3031 13f4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3032 13f8 0133     		adds	r3, r3, #1
 3033 13fa 87F8573C 		strb	r3, [r7, #3159]
 3034              	.L170:
 591:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3035              		.loc 1 591 0 is_stmt 0 discriminator 1
 3036 13fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3037 1402 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3038 1406 9A42     		cmp	r2, r3
 3039 1408 DAD3     		bcc	.L171
 593:..\src/command_processing.c ****                             }
 594:..\src/command_processing.c ****                         }
 595:..\src/command_processing.c ****                         else {
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 601:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 602:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 603:..\src/command_processing.c ****                             }
 604:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 605:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 606:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 607:..\src/command_processing.c ****                             }
 608:..\src/command_processing.c ****                         }            
 609:..\src/command_processing.c ****                         break;  
 3040              		.loc 1 609 0 is_stmt 1
 3041 140a BCE1     		b	.L103
 3042              	.L165:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 82


 596:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3043              		.loc 1 596 0
 3044 140c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3045 1410 DA49     		ldr	r1, .L265
 3046 1412 1346     		mov	r3, r2
 3047 1414 DB00     		lsls	r3, r3, #3
 3048 1416 9B1A     		subs	r3, r3, r2
 3049 1418 1B01     		lsls	r3, r3, #4
 3050 141a 0B44     		add	r3, r3, r1
 3051 141c D433     		adds	r3, r3, #212
 3052 141e 1B68     		ldr	r3, [r3]
 3053 1420 1846     		mov	r0, r3
 3054 1422 FFF7FEFF 		bl	__aeabi_i2f
 3055 1426 0346     		mov	r3, r0
 3056 1428 4FF08F41 		mov	r1, #1199570944
 3057 142c 1846     		mov	r0, r3
 3058 142e FFF7FEFF 		bl	__aeabi_fdiv
 3059 1432 0346     		mov	r3, r0
 3060 1434 1A46     		mov	r2, r3
 3061 1436 07F12003 		add	r3, r7, #32
 3062 143a 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3063              		.loc 1 597 0
 3064 143c 0023     		movs	r3, #0
 3065 143e 87F8573C 		strb	r3, [r7, #3159]
 3066 1442 1AE0     		b	.L173
 3067              	.L174:
 598:..\src/command_processing.c ****                             }
 3068              		.loc 1 598 0 discriminator 3
 3069 1444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3070 1448 3222     		movs	r2, #50
 3071 144a 02FB03F3 		mul	r3, r2, r3
 3072 144e 1A1D     		adds	r2, r3, #4
 3073 1450 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3074 1454 1A44     		add	r2, r2, r3
 3075 1456 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3076 145a D31A     		subs	r3, r2, r3
 3077 145c 013B     		subs	r3, r3, #1
 3078 145e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3079 1462 07F12001 		add	r1, r7, #32
 3080 1466 0A44     		add	r2, r2, r1
 3081 1468 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3082 146a 07F15802 		add	r2, r7, #88
 3083 146e D154     		strb	r1, [r2, r3]
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3084              		.loc 1 597 0 discriminator 3
 3085 1470 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3086 1474 0133     		adds	r3, r3, #1
 3087 1476 87F8573C 		strb	r3, [r7, #3159]
 3088              	.L173:
 597:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3089              		.loc 1 597 0 is_stmt 0 discriminator 1
 3090 147a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3091 147e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3092 1482 9A42     		cmp	r2, r3
 3093 1484 DED3     		bcc	.L174
 600:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 83


 3094              		.loc 1 600 0 is_stmt 1
 3095 1486 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3096 148a BC49     		ldr	r1, .L265
 3097 148c 1346     		mov	r3, r2
 3098 148e DB00     		lsls	r3, r3, #3
 3099 1490 9B1A     		subs	r3, r3, r2
 3100 1492 1B01     		lsls	r3, r3, #4
 3101 1494 0B44     		add	r3, r3, r1
 3102 1496 D833     		adds	r3, r3, #216
 3103 1498 1B68     		ldr	r3, [r3]
 3104 149a 1846     		mov	r0, r3
 3105 149c FFF7FEFF 		bl	__aeabi_i2f
 3106 14a0 0346     		mov	r3, r0
 3107 14a2 4FF08F41 		mov	r1, #1199570944
 3108 14a6 1846     		mov	r0, r3
 3109 14a8 FFF7FEFF 		bl	__aeabi_fdiv
 3110 14ac 0346     		mov	r3, r0
 3111 14ae 1A46     		mov	r2, r3
 3112 14b0 07F12003 		add	r3, r7, #32
 3113 14b4 1A60     		str	r2, [r3]	@ float
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3114              		.loc 1 601 0
 3115 14b6 0023     		movs	r3, #0
 3116 14b8 87F8573C 		strb	r3, [r7, #3159]
 3117 14bc 1DE0     		b	.L175
 3118              	.L176:
 602:..\src/command_processing.c ****                             }
 3119              		.loc 1 602 0 discriminator 3
 3120 14be 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3121 14c2 3222     		movs	r2, #50
 3122 14c4 02FB03F3 		mul	r3, r2, r3
 3123 14c8 1A1D     		adds	r2, r3, #4
 3124 14ca 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3125 14ce 1A44     		add	r2, r2, r3
 3126 14d0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3127 14d4 1A44     		add	r2, r2, r3
 3128 14d6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3129 14da D31A     		subs	r3, r2, r3
 3130 14dc 013B     		subs	r3, r3, #1
 3131 14de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3132 14e2 07F12001 		add	r1, r7, #32
 3133 14e6 0A44     		add	r2, r2, r1
 3134 14e8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3135 14ea 07F15802 		add	r2, r7, #88
 3136 14ee D154     		strb	r1, [r2, r3]
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3137              		.loc 1 601 0 discriminator 3
 3138 14f0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3139 14f4 0133     		adds	r3, r3, #1
 3140 14f6 87F8573C 		strb	r3, [r7, #3159]
 3141              	.L175:
 601:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3142              		.loc 1 601 0 is_stmt 0 discriminator 1
 3143 14fa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3144 14fe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3145 1502 9A42     		cmp	r2, r3
 3146 1504 DBD3     		bcc	.L176
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 84


 604:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3147              		.loc 1 604 0 is_stmt 1
 3148 1506 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3149 150a 9C49     		ldr	r1, .L265
 3150 150c 1346     		mov	r3, r2
 3151 150e DB00     		lsls	r3, r3, #3
 3152 1510 9B1A     		subs	r3, r3, r2
 3153 1512 1B01     		lsls	r3, r3, #4
 3154 1514 0B44     		add	r3, r3, r1
 3155 1516 DC33     		adds	r3, r3, #220
 3156 1518 1B68     		ldr	r3, [r3]
 3157 151a 1846     		mov	r0, r3
 3158 151c FFF7FEFF 		bl	__aeabi_i2f
 3159 1520 0346     		mov	r3, r0
 3160 1522 4FF08F41 		mov	r1, #1199570944
 3161 1526 1846     		mov	r0, r3
 3162 1528 FFF7FEFF 		bl	__aeabi_fdiv
 3163 152c 0346     		mov	r3, r0
 3164 152e 1A46     		mov	r2, r3
 3165 1530 07F12003 		add	r3, r7, #32
 3166 1534 1A60     		str	r2, [r3]	@ float
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3167              		.loc 1 605 0
 3168 1536 0023     		movs	r3, #0
 3169 1538 87F8573C 		strb	r3, [r7, #3159]
 3170 153c 1EE0     		b	.L177
 3171              	.L178:
 606:..\src/command_processing.c ****                             }
 3172              		.loc 1 606 0 discriminator 3
 3173 153e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3174 1542 3222     		movs	r2, #50
 3175 1544 02FB03F3 		mul	r3, r2, r3
 3176 1548 1A1D     		adds	r2, r3, #4
 3177 154a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3178 154e 5B00     		lsls	r3, r3, #1
 3179 1550 1A44     		add	r2, r2, r3
 3180 1552 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3181 1556 1A44     		add	r2, r2, r3
 3182 1558 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3183 155c D31A     		subs	r3, r2, r3
 3184 155e 013B     		subs	r3, r3, #1
 3185 1560 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3186 1564 07F12001 		add	r1, r7, #32
 3187 1568 0A44     		add	r2, r2, r1
 3188 156a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3189 156c 07F15802 		add	r2, r7, #88
 3190 1570 D154     		strb	r1, [r2, r3]
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3191              		.loc 1 605 0 discriminator 3
 3192 1572 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3193 1576 0133     		adds	r3, r3, #1
 3194 1578 87F8573C 		strb	r3, [r7, #3159]
 3195              	.L177:
 605:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3196              		.loc 1 605 0 is_stmt 0 discriminator 1
 3197 157c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3198 1580 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 85


 3199 1584 9A42     		cmp	r2, r3
 3200 1586 DAD3     		bcc	.L178
 3201              		.loc 1 609 0 is_stmt 1
 3202 1588 FDE0     		b	.L103
 3203              	.L113:
 610:..\src/command_processing.c **** 
 611:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 612:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 3204              		.loc 1 612 0
 3205 158a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3206 158e 7C49     		ldr	r1, .L265+4
 3207 1590 1346     		mov	r3, r2
 3208 1592 DB00     		lsls	r3, r3, #3
 3209 1594 9B1A     		subs	r3, r3, r2
 3210 1596 1B01     		lsls	r3, r3, #4
 3211 1598 0B44     		add	r3, r3, r1
 3212 159a 03F58873 		add	r3, r3, #272
 3213 159e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3214 15a0 1846     		mov	r0, r3
 3215 15a2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3216 15a6 7549     		ldr	r1, .L265
 3217 15a8 0346     		mov	r3, r0
 3218 15aa 5B00     		lsls	r3, r3, #1
 3219 15ac 0344     		add	r3, r3, r0
 3220 15ae 9B00     		lsls	r3, r3, #2
 3221 15b0 1344     		add	r3, r3, r2
 3222 15b2 6633     		adds	r3, r3, #102
 3223 15b4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3224 15b8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3225 15bc 7048     		ldr	r0, .L265+4
 3226 15be 1346     		mov	r3, r2
 3227 15c0 DB00     		lsls	r3, r3, #3
 3228 15c2 9B1A     		subs	r3, r3, r2
 3229 15c4 1B01     		lsls	r3, r3, #4
 3230 15c6 0344     		add	r3, r3, r0
 3231 15c8 03F58873 		add	r3, r3, #272
 3232 15cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3233 15ce 1C46     		mov	r4, r3
 3234 15d0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3235 15d4 6948     		ldr	r0, .L265
 3236 15d6 2346     		mov	r3, r4
 3237 15d8 5B00     		lsls	r3, r3, #1
 3238 15da 2344     		add	r3, r3, r4
 3239 15dc 1B01     		lsls	r3, r3, #4
 3240 15de 0344     		add	r3, r3, r0
 3241 15e0 1344     		add	r3, r3, r2
 3242 15e2 03F29513 		addw	r3, r3, #405
 3243 15e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 15e8 41FA03F3 		asr	r3, r1, r3
 3245 15ec 1AB2     		sxth	r2, r3
 3246 15ee 07F11E03 		add	r3, r7, #30
 3247 15f2 1A80     		strh	r2, [r3]	@ movhi
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3248              		.loc 1 613 0
 3249 15f4 0023     		movs	r3, #0
 3250 15f6 87F8563C 		strb	r3, [r7, #3158]
 3251 15fa 21E0     		b	.L179
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 86


 3252              	.L180:
 614:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3253              		.loc 1 614 0 discriminator 3
 3254 15fc 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3255 1600 3222     		movs	r2, #50
 3256 1602 02FB03F3 		mul	r3, r2, r3
 3257 1606 1A1D     		adds	r2, r3, #4
 3258 1608 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3259 160c 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3260 1610 01FB03F3 		mul	r3, r1, r3
 3261 1614 1A44     		add	r2, r2, r3
 3262 1616 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3263 161a 1A44     		add	r2, r2, r3
 3264 161c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3265 1620 D31A     		subs	r3, r2, r3
 3266 1622 013B     		subs	r3, r3, #1
 3267 1624 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3268 1628 07F11E01 		add	r1, r7, #30
 3269 162c 0A44     		add	r2, r2, r1
 3270 162e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3271 1630 07F15802 		add	r2, r7, #88
 3272 1634 D154     		strb	r1, [r2, r3]
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3273              		.loc 1 613 0 discriminator 3
 3274 1636 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3275 163a 0133     		adds	r3, r3, #1
 3276 163c 87F8563C 		strb	r3, [r7, #3158]
 3277              	.L179:
 613:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3278              		.loc 1 613 0 is_stmt 0 discriminator 1
 3279 1640 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3280 1644 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3281 1648 9A42     		cmp	r2, r3
 3282 164a D7D3     		bcc	.L180
 615:..\src/command_processing.c ****                         }
 616:..\src/command_processing.c ****                         break;
 3283              		.loc 1 616 0 is_stmt 1
 3284 164c 9BE0     		b	.L103
 3285              	.L114:
 617:..\src/command_processing.c ****                 
 618:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 619:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3286              		.loc 1 619 0
 3287 164e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3288 1652 4A49     		ldr	r1, .L265
 3289 1654 1346     		mov	r3, r2
 3290 1656 DB00     		lsls	r3, r3, #3
 3291 1658 9B1A     		subs	r3, r3, r2
 3292 165a 1B01     		lsls	r3, r3, #4
 3293 165c 0B44     		add	r3, r3, r1
 3294 165e E433     		adds	r3, r3, #228
 3295 1660 1968     		ldr	r1, [r3]
 3296 1662 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3297 1666 4648     		ldr	r0, .L265+4
 3298 1668 1346     		mov	r3, r2
 3299 166a DB00     		lsls	r3, r3, #3
 3300 166c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 87


 3301 166e 1B01     		lsls	r3, r3, #4
 3302 1670 0344     		add	r3, r3, r0
 3303 1672 03F58873 		add	r3, r3, #272
 3304 1676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3305 1678 1846     		mov	r0, r3
 3306 167a 404A     		ldr	r2, .L265
 3307 167c 0346     		mov	r3, r0
 3308 167e 5B00     		lsls	r3, r3, #1
 3309 1680 0344     		add	r3, r3, r0
 3310 1682 1B01     		lsls	r3, r3, #4
 3311 1684 1344     		add	r3, r3, r2
 3312 1686 03F29513 		addw	r3, r3, #405
 3313 168a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3314 168c 41FA03F2 		asr	r2, r1, r3
 3315 1690 07F11803 		add	r3, r7, #24
 3316 1694 1A60     		str	r2, [r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3317              		.loc 1 620 0
 3318 1696 0023     		movs	r3, #0
 3319 1698 87F8563C 		strb	r3, [r7, #3158]
 3320 169c 1AE0     		b	.L181
 3321              	.L182:
 621:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3322              		.loc 1 621 0 discriminator 3
 3323 169e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3324 16a2 3222     		movs	r2, #50
 3325 16a4 02FB03F3 		mul	r3, r2, r3
 3326 16a8 1A1D     		adds	r2, r3, #4
 3327 16aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3328 16ae 1A44     		add	r2, r2, r3
 3329 16b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3330 16b4 D31A     		subs	r3, r2, r3
 3331 16b6 013B     		subs	r3, r3, #1
 3332 16b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3333 16bc 07F11801 		add	r1, r7, #24
 3334 16c0 0A44     		add	r2, r2, r1
 3335 16c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3336 16c4 07F15802 		add	r2, r7, #88
 3337 16c8 D154     		strb	r1, [r2, r3]
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3338              		.loc 1 620 0 discriminator 3
 3339 16ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3340 16ce 0133     		adds	r3, r3, #1
 3341 16d0 87F8563C 		strb	r3, [r7, #3158]
 3342              	.L181:
 620:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3343              		.loc 1 620 0 is_stmt 0 discriminator 1
 3344 16d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3345 16d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3346 16dc 9A42     		cmp	r2, r3
 3347 16de DED3     		bcc	.L182
 622:..\src/command_processing.c ****                         }
 623:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3348              		.loc 1 623 0 is_stmt 1
 3349 16e0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3350 16e4 2549     		ldr	r1, .L265
 3351 16e6 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 88


 3352 16e8 DB00     		lsls	r3, r3, #3
 3353 16ea 9B1A     		subs	r3, r3, r2
 3354 16ec 1B01     		lsls	r3, r3, #4
 3355 16ee 0B44     		add	r3, r3, r1
 3356 16f0 E833     		adds	r3, r3, #232
 3357 16f2 1968     		ldr	r1, [r3]
 3358 16f4 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3359 16f8 2148     		ldr	r0, .L265+4
 3360 16fa 1346     		mov	r3, r2
 3361 16fc DB00     		lsls	r3, r3, #3
 3362 16fe 9B1A     		subs	r3, r3, r2
 3363 1700 1B01     		lsls	r3, r3, #4
 3364 1702 0344     		add	r3, r3, r0
 3365 1704 03F58873 		add	r3, r3, #272
 3366 1708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3367 170a 1846     		mov	r0, r3
 3368 170c 1B4A     		ldr	r2, .L265
 3369 170e 0346     		mov	r3, r0
 3370 1710 5B00     		lsls	r3, r3, #1
 3371 1712 0344     		add	r3, r3, r0
 3372 1714 1B01     		lsls	r3, r3, #4
 3373 1716 1344     		add	r3, r3, r2
 3374 1718 03F29513 		addw	r3, r3, #405
 3375 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3376 171e 41FA03F2 		asr	r2, r1, r3
 3377 1722 07F11803 		add	r3, r7, #24
 3378 1726 1A60     		str	r2, [r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3379              		.loc 1 624 0
 3380 1728 0023     		movs	r3, #0
 3381 172a 87F8563C 		strb	r3, [r7, #3158]
 3382 172e 1DE0     		b	.L183
 3383              	.L184:
 625:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3384              		.loc 1 625 0 discriminator 3
 3385 1730 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3386 1734 3222     		movs	r2, #50
 3387 1736 02FB03F3 		mul	r3, r2, r3
 3388 173a 1A1D     		adds	r2, r3, #4
 3389 173c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3390 1740 1A44     		add	r2, r2, r3
 3391 1742 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3392 1746 1A44     		add	r2, r2, r3
 3393 1748 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3394 174c D31A     		subs	r3, r2, r3
 3395 174e 013B     		subs	r3, r3, #1
 3396 1750 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3397 1754 07F11801 		add	r1, r7, #24
 3398 1758 0A44     		add	r2, r2, r1
 3399 175a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3400 175c 07F15802 		add	r2, r7, #88
 3401 1760 D154     		strb	r1, [r2, r3]
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3402              		.loc 1 624 0 discriminator 3
 3403 1762 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3404 1766 0133     		adds	r3, r3, #1
 3405 1768 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 89


 3406              	.L183:
 624:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3407              		.loc 1 624 0 is_stmt 0 discriminator 1
 3408 176c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3409 1770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3410 1774 9A42     		cmp	r2, r3
 3411 1776 DBD3     		bcc	.L184
 626:..\src/command_processing.c ****                         }
 627:..\src/command_processing.c ****                         break;
 3412              		.loc 1 627 0 is_stmt 1
 3413 1778 05E0     		b	.L103
 3414              	.L266:
 3415 177a 00BF     		.align	2
 3416              	.L265:
 3417 177c 00000000 		.word	c_mem
 3418 1780 00000000 		.word	g_mem
 3419              	.L253:
 628:..\src/command_processing.c ****                         
 629:..\src/command_processing.c ****                     default:
 630:..\src/command_processing.c ****                         break;
 3420              		.loc 1 630 0
 3421 1784 00BF     		nop
 3422              	.L103:
 631:..\src/command_processing.c ****                 }
 632:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 633:..\src/command_processing.c ****                         
 634:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 635:..\src/command_processing.c ****         }
 636:..\src/command_processing.c ****         
 637:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3423              		.loc 1 637 0
 3424 1786 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3425 178a 9B00     		lsls	r3, r3, #2
 3426 178c D7F8742C 		ldr	r2, [r7, #3188]
 3427 1790 1344     		add	r3, r3, r2
 3428 1792 1A68     		ldr	r2, [r3]
 3429 1794 07F12403 		add	r3, r7, #36
 3430 1798 1146     		mov	r1, r2
 3431 179a 1846     		mov	r0, r3
 3432 179c FFF7FEFF 		bl	sprintf
 638:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3433              		.loc 1 638 0
 3434 17a0 07F12403 		add	r3, r7, #36
 3435 17a4 1846     		mov	r0, r3
 3436 17a6 FFF7FEFF 		bl	strlen
 3437 17aa 0346     		mov	r3, r0
 3438 17ac 87F8523C 		strb	r3, [r7, #3154]
 639:..\src/command_processing.c ****         
 640:..\src/command_processing.c ****         // Parameters with a menu
 641:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3439              		.loc 1 641 0
 3440 17b0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3441 17b4 07F10802 		add	r2, r7, #8
 3442 17b8 1268     		ldr	r2, [r2]
 3443 17ba 1344     		add	r3, r3, r2
 3444 17bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3445 17be 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 90


 3446 17c0 40F01F83 		bne	.L185
 642:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3447              		.loc 1 642 0
 3448 17c4 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3449 17c8 D7F8702C 		ldr	r2, [r7, #3184]
 3450 17cc 1344     		add	r3, r3, r2
 3451 17ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3452 17d0 013B     		subs	r3, r3, #1
 3453 17d2 092B     		cmp	r3, #9
 3454 17d4 00F20B83 		bhi	.L186
 3455 17d8 01A2     		adr	r2, .L188
 3456 17da 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3457 17de 00BF     		.p2align 2
 3458              	.L188:
 3459 17e0 09180000 		.word	.L187+1
 3460 17e4 65190000 		.word	.L189+1
 3461 17e8 251A0000 		.word	.L190+1
 3462 17ec 6B1A0000 		.word	.L191+1
 3463 17f0 C11A0000 		.word	.L192+1
 3464 17f4 0F1B0000 		.word	.L193+1
 3465 17f8 1F1C0000 		.word	.L194+1
 3466 17fc 951C0000 		.word	.L195+1
 3467 1800 171D0000 		.word	.L196+1
 3468 1804 811D0000 		.word	.L197+1
 3469              		.p2align 1
 3470              	.L187:
 643:..\src/command_processing.c ****                 case 1:     // input mode menu
 644:..\src/command_processing.c ****                     switch(*m_addr) {
 3471              		.loc 1 644 0
 3472 1808 D7F8483C 		ldr	r3, [r7, #3144]
 3473 180c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3474 180e 062B     		cmp	r3, #6
 3475 1810 00F2E882 		bhi	.L254
 3476 1814 01A2     		adr	r2, .L200
 3477 1816 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3478 181a 00BF     		.p2align 2
 3479              	.L200:
 3480 181c 39180000 		.word	.L199+1
 3481 1820 59180000 		.word	.L201+1
 3482 1824 7B180000 		.word	.L202+1
 3483 1828 A5180000 		.word	.L203+1
 3484 182c CD180000 		.word	.L204+1
 3485 1830 F3180000 		.word	.L205+1
 3486 1834 23190000 		.word	.L206+1
 3487              		.p2align 1
 3488              	.L199:
 645:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 646:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 3489              		.loc 1 646 0
 3490 1838 07F12403 		add	r3, r7, #36
 3491 183c 1846     		mov	r0, r3
 3492 183e FFF7FEFF 		bl	strlen
 3493 1842 0346     		mov	r3, r0
 3494 1844 1A46     		mov	r2, r3
 3495 1846 07F12403 		add	r3, r7, #36
 3496 184a 1344     		add	r3, r3, r2
 3497 184c D54A     		ldr	r2, .L267
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 91


 3498 184e 1068     		ldr	r0, [r2]	@ unaligned
 3499 1850 1860     		str	r0, [r3]	@ unaligned
 3500 1852 1279     		ldrb	r2, [r2, #4]
 3501 1854 1A71     		strb	r2, [r3, #4]
 647:..\src/command_processing.c ****                         break;
 3502              		.loc 1 647 0
 3503 1856 84E0     		b	.L198
 3504              	.L201:
 648:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 649:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3505              		.loc 1 649 0
 3506 1858 07F12403 		add	r3, r7, #36
 3507 185c 1846     		mov	r0, r3
 3508 185e FFF7FEFF 		bl	strlen
 3509 1862 0346     		mov	r3, r0
 3510 1864 1A46     		mov	r2, r3
 3511 1866 07F12403 		add	r3, r7, #36
 3512 186a 1344     		add	r3, r3, r2
 3513 186c CE49     		ldr	r1, .L267+4
 3514 186e 1A46     		mov	r2, r3
 3515 1870 0B46     		mov	r3, r1
 3516 1872 03CB     		ldmia	r3!, {r0, r1}
 3517 1874 1060     		str	r0, [r2]	@ unaligned
 3518 1876 5160     		str	r1, [r2, #4]	@ unaligned
 650:..\src/command_processing.c ****                         break;
 3519              		.loc 1 650 0
 3520 1878 73E0     		b	.L198
 3521              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3522              		.loc 1 652 0
 3523 187a 07F12403 		add	r3, r7, #36
 3524 187e 1846     		mov	r0, r3
 3525 1880 FFF7FEFF 		bl	strlen
 3526 1884 0346     		mov	r3, r0
 3527 1886 1A46     		mov	r2, r3
 3528 1888 07F12403 		add	r3, r7, #36
 3529 188c 1344     		add	r3, r3, r2
 3530 188e C74A     		ldr	r2, .L267+8
 3531 1890 1D46     		mov	r5, r3
 3532 1892 1446     		mov	r4, r2
 3533 1894 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3534 1896 2860     		str	r0, [r5]	@ unaligned
 3535 1898 6960     		str	r1, [r5, #4]	@ unaligned
 3536 189a AA60     		str	r2, [r5, #8]	@ unaligned
 3537 189c EB60     		str	r3, [r5, #12]	@ unaligned
 3538 189e 2388     		ldrh	r3, [r4]	@ unaligned
 3539 18a0 2B82     		strh	r3, [r5, #16]	@ unaligned
 653:..\src/command_processing.c ****                         break;
 3540              		.loc 1 653 0
 3541 18a2 5EE0     		b	.L198
 3542              	.L203:
 654:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 655:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 3543              		.loc 1 655 0
 3544 18a4 07F12403 		add	r3, r7, #36
 3545 18a8 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 92


 3546 18aa FFF7FEFF 		bl	strlen
 3547 18ae 0346     		mov	r3, r0
 3548 18b0 1A46     		mov	r2, r3
 3549 18b2 07F12403 		add	r3, r7, #36
 3550 18b6 1344     		add	r3, r3, r2
 3551 18b8 BD4A     		ldr	r2, .L267+12
 3552 18ba 1C46     		mov	r4, r3
 3553 18bc 1346     		mov	r3, r2
 3554 18be 07CB     		ldmia	r3!, {r0, r1, r2}
 3555 18c0 2060     		str	r0, [r4]	@ unaligned
 3556 18c2 6160     		str	r1, [r4, #4]	@ unaligned
 3557 18c4 A260     		str	r2, [r4, #8]	@ unaligned
 3558 18c6 1B88     		ldrh	r3, [r3]	@ unaligned
 3559 18c8 A381     		strh	r3, [r4, #12]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 3560              		.loc 1 656 0
 3561 18ca 4AE0     		b	.L198
 3562              	.L204:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3563              		.loc 1 658 0
 3564 18cc 07F12403 		add	r3, r7, #36
 3565 18d0 1846     		mov	r0, r3
 3566 18d2 FFF7FEFF 		bl	strlen
 3567 18d6 0346     		mov	r3, r0
 3568 18d8 1A46     		mov	r2, r3
 3569 18da 07F12403 		add	r3, r7, #36
 3570 18de 1344     		add	r3, r3, r2
 3571 18e0 B449     		ldr	r1, .L267+16
 3572 18e2 1A46     		mov	r2, r3
 3573 18e4 0B46     		mov	r3, r1
 3574 18e6 03CB     		ldmia	r3!, {r0, r1}
 3575 18e8 1060     		str	r0, [r2]	@ unaligned
 3576 18ea 5160     		str	r1, [r2, #4]	@ unaligned
 3577 18ec 1B88     		ldrh	r3, [r3]	@ unaligned
 3578 18ee 1381     		strh	r3, [r2, #8]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 3579              		.loc 1 659 0
 3580 18f0 37E0     		b	.L198
 3581              	.L205:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3582              		.loc 1 661 0
 3583 18f2 07F12403 		add	r3, r7, #36
 3584 18f6 1846     		mov	r0, r3
 3585 18f8 FFF7FEFF 		bl	strlen
 3586 18fc 0346     		mov	r3, r0
 3587 18fe 1A46     		mov	r2, r3
 3588 1900 07F12403 		add	r3, r7, #36
 3589 1904 1344     		add	r3, r3, r2
 3590 1906 AC4A     		ldr	r2, .L267+20
 3591 1908 1D46     		mov	r5, r3
 3592 190a 1446     		mov	r4, r2
 3593 190c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3594 190e 2860     		str	r0, [r5]	@ unaligned
 3595 1910 6960     		str	r1, [r5, #4]	@ unaligned
 3596 1912 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 93


 3597 1914 EB60     		str	r3, [r5, #12]	@ unaligned
 3598 1916 2388     		ldrh	r3, [r4]	@ unaligned
 3599 1918 A278     		ldrb	r2, [r4, #2]
 3600 191a 2B82     		strh	r3, [r5, #16]	@ unaligned
 3601 191c 1346     		mov	r3, r2
 3602 191e AB74     		strb	r3, [r5, #18]
 662:..\src/command_processing.c ****                         break;
 3603              		.loc 1 662 0
 3604 1920 1FE0     		b	.L198
 3605              	.L206:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 3606              		.loc 1 664 0
 3607 1922 07F12403 		add	r3, r7, #36
 3608 1926 1846     		mov	r0, r3
 3609 1928 FFF7FEFF 		bl	strlen
 3610 192c 0346     		mov	r3, r0
 3611 192e 1A46     		mov	r2, r3
 3612 1930 07F12403 		add	r3, r7, #36
 3613 1934 1344     		add	r3, r3, r2
 3614 1936 A14A     		ldr	r2, .L267+24
 3615 1938 1446     		mov	r4, r2
 3616 193a 9E46     		mov	lr, r3
 3617 193c 04F1200C 		add	ip, r4, #32
 3618              	.L207:
 3619 1940 7546     		mov	r5, lr
 3620 1942 2646     		mov	r6, r4
 3621 1944 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3622 1946 2860     		str	r0, [r5]	@ unaligned
 3623 1948 6960     		str	r1, [r5, #4]	@ unaligned
 3624 194a AA60     		str	r2, [r5, #8]	@ unaligned
 3625 194c EB60     		str	r3, [r5, #12]	@ unaligned
 3626 194e 1034     		adds	r4, r4, #16
 3627 1950 0EF1100E 		add	lr, lr, #16
 3628 1954 6445     		cmp	r4, ip
 3629 1956 F3D1     		bne	.L207
 3630 1958 7246     		mov	r2, lr
 3631 195a 2346     		mov	r3, r4
 3632 195c 1B88     		ldrh	r3, [r3]	@ unaligned
 3633 195e 1380     		strh	r3, [r2]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 3634              		.loc 1 665 0
 3635 1960 00BF     		nop
 3636              	.L198:
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 3637              		.loc 1 667 0
 3638 1962 3FE2     		b	.L254
 3639              	.L189:
 668:..\src/command_processing.c ****                 case 2:     // control mode menu
 669:..\src/command_processing.c ****                     switch(*m_addr){
 3640              		.loc 1 669 0
 3641 1964 D7F8483C 		ldr	r3, [r7, #3144]
 3642 1968 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3643 196a 032B     		cmp	r3, #3
 3644 196c 00F23C82 		bhi	.L255
 3645 1970 01A2     		adr	r2, .L210
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 94


 3646 1972 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3647 1976 00BF     		.p2align 2
 3648              	.L210:
 3649 1978 89190000 		.word	.L209+1
 3650 197c AF190000 		.word	.L211+1
 3651 1980 CF190000 		.word	.L212+1
 3652 1984 F5190000 		.word	.L213+1
 3653              		.p2align 1
 3654              	.L209:
 670:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3655              		.loc 1 671 0
 3656 1988 07F12403 		add	r3, r7, #36
 3657 198c 1846     		mov	r0, r3
 3658 198e FFF7FEFF 		bl	strlen
 3659 1992 0346     		mov	r3, r0
 3660 1994 1A46     		mov	r2, r3
 3661 1996 07F12403 		add	r3, r7, #36
 3662 199a 1344     		add	r3, r3, r2
 3663 199c 8849     		ldr	r1, .L267+28
 3664 199e 1A46     		mov	r2, r3
 3665 19a0 0B46     		mov	r3, r1
 3666 19a2 03CB     		ldmia	r3!, {r0, r1}
 3667 19a4 1060     		str	r0, [r2]	@ unaligned
 3668 19a6 5160     		str	r1, [r2, #4]	@ unaligned
 3669 19a8 1B88     		ldrh	r3, [r3]	@ unaligned
 3670 19aa 1381     		strh	r3, [r2, #8]	@ unaligned
 672:..\src/command_processing.c ****                         break;
 3671              		.loc 1 672 0
 3672 19ac 39E0     		b	.L208
 3673              	.L211:
 673:..\src/command_processing.c ****                         case CONTROL_PWM:
 674:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3674              		.loc 1 674 0
 3675 19ae 07F12403 		add	r3, r7, #36
 3676 19b2 1846     		mov	r0, r3
 3677 19b4 FFF7FEFF 		bl	strlen
 3678 19b8 0346     		mov	r3, r0
 3679 19ba 1A46     		mov	r2, r3
 3680 19bc 07F12403 		add	r3, r7, #36
 3681 19c0 1344     		add	r3, r3, r2
 3682 19c2 804A     		ldr	r2, .L267+32
 3683 19c4 1068     		ldr	r0, [r2]	@ unaligned
 3684 19c6 1860     		str	r0, [r3]	@ unaligned
 3685 19c8 1279     		ldrb	r2, [r2, #4]
 3686 19ca 1A71     		strb	r2, [r3, #4]
 675:..\src/command_processing.c ****                         break;
 3687              		.loc 1 675 0
 3688 19cc 29E0     		b	.L208
 3689              	.L212:
 676:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 677:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3690              		.loc 1 677 0
 3691 19ce 07F12403 		add	r3, r7, #36
 3692 19d2 1846     		mov	r0, r3
 3693 19d4 FFF7FEFF 		bl	strlen
 3694 19d8 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 95


 3695 19da 1A46     		mov	r2, r3
 3696 19dc 07F12403 		add	r3, r7, #36
 3697 19e0 1344     		add	r3, r3, r2
 3698 19e2 7949     		ldr	r1, .L267+36
 3699 19e4 1A46     		mov	r2, r3
 3700 19e6 0B46     		mov	r3, r1
 3701 19e8 03CB     		ldmia	r3!, {r0, r1}
 3702 19ea 1060     		str	r0, [r2]	@ unaligned
 3703 19ec 5160     		str	r1, [r2, #4]	@ unaligned
 3704 19ee 1B78     		ldrb	r3, [r3]
 3705 19f0 1372     		strb	r3, [r2, #8]
 678:..\src/command_processing.c ****                         break;
 3706              		.loc 1 678 0
 3707 19f2 16E0     		b	.L208
 3708              	.L213:
 679:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3709              		.loc 1 680 0
 3710 19f4 07F12403 		add	r3, r7, #36
 3711 19f8 1846     		mov	r0, r3
 3712 19fa FFF7FEFF 		bl	strlen
 3713 19fe 0346     		mov	r3, r0
 3714 1a00 1A46     		mov	r2, r3
 3715 1a02 07F12403 		add	r3, r7, #36
 3716 1a06 1344     		add	r3, r3, r2
 3717 1a08 704A     		ldr	r2, .L267+40
 3718 1a0a 1D46     		mov	r5, r3
 3719 1a0c 1446     		mov	r4, r2
 3720 1a0e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3721 1a10 2860     		str	r0, [r5]	@ unaligned
 3722 1a12 6960     		str	r1, [r5, #4]	@ unaligned
 3723 1a14 AA60     		str	r2, [r5, #8]	@ unaligned
 3724 1a16 EB60     		str	r3, [r5, #12]	@ unaligned
 3725 1a18 2068     		ldr	r0, [r4]	@ unaligned
 3726 1a1a 2861     		str	r0, [r5, #16]	@ unaligned
 3727 1a1c A388     		ldrh	r3, [r4, #4]	@ unaligned
 3728 1a1e AB82     		strh	r3, [r5, #20]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 3729              		.loc 1 681 0
 3730 1a20 00BF     		nop
 3731              	.L208:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
 3732              		.loc 1 683 0
 3733 1a22 E1E1     		b	.L255
 3734              	.L190:
 684:..\src/command_processing.c ****                 case 3:     // yes/no menu
 685:..\src/command_processing.c ****                     if(*m_addr){
 3735              		.loc 1 685 0
 3736 1a24 D7F8483C 		ldr	r3, [r7, #3144]
 3737 1a28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3738 1a2a 002B     		cmp	r3, #0
 3739 1a2c 0FD0     		beq	.L214
 686:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3740              		.loc 1 686 0
 3741 1a2e 07F12403 		add	r3, r7, #36
 3742 1a32 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 96


 3743 1a34 FFF7FEFF 		bl	strlen
 3744 1a38 0346     		mov	r3, r0
 3745 1a3a 1A46     		mov	r2, r3
 3746 1a3c 07F12403 		add	r3, r7, #36
 3747 1a40 1344     		add	r3, r3, r2
 3748 1a42 634A     		ldr	r2, .L267+44
 3749 1a44 1068     		ldr	r0, [r2]	@ unaligned
 3750 1a46 1860     		str	r0, [r3]	@ unaligned
 3751 1a48 1279     		ldrb	r2, [r2, #4]
 3752 1a4a 1A71     		strb	r2, [r3, #4]
 687:..\src/command_processing.c ****                     }
 688:..\src/command_processing.c ****                     else {
 689:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 690:..\src/command_processing.c ****                     }
 691:..\src/command_processing.c ****                     break;    
 3753              		.loc 1 691 0
 3754 1a4c CFE1     		b	.L186
 3755              	.L214:
 689:..\src/command_processing.c ****                     }
 3756              		.loc 1 689 0
 3757 1a4e 07F12403 		add	r3, r7, #36
 3758 1a52 1846     		mov	r0, r3
 3759 1a54 FFF7FEFF 		bl	strlen
 3760 1a58 0346     		mov	r3, r0
 3761 1a5a 1A46     		mov	r2, r3
 3762 1a5c 07F12403 		add	r3, r7, #36
 3763 1a60 1344     		add	r3, r3, r2
 3764 1a62 5C4A     		ldr	r2, .L267+48
 3765 1a64 1068     		ldr	r0, [r2]	@ unaligned
 3766 1a66 1860     		str	r0, [r3]	@ unaligned
 3767              		.loc 1 691 0
 3768 1a68 C1E1     		b	.L186
 3769              	.L191:
 692:..\src/command_processing.c ****                 case 4:     // right/lef menu
 693:..\src/command_processing.c ****                     switch(*m_addr){
 3770              		.loc 1 693 0
 3771 1a6a D7F8483C 		ldr	r3, [r7, #3144]
 3772 1a6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3773 1a70 002B     		cmp	r3, #0
 3774 1a72 02D0     		beq	.L217
 3775 1a74 012B     		cmp	r3, #1
 3776 1a76 12D0     		beq	.L218
 694:..\src/command_processing.c ****                         case RIGHT_HAND:
 695:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 696:..\src/command_processing.c ****                         break;
 697:..\src/command_processing.c ****                         case LEFT_HAND:
 698:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 699:..\src/command_processing.c ****                         break;
 700:..\src/command_processing.c ****                     }
 701:..\src/command_processing.c ****                     break;
 3777              		.loc 1 701 0
 3778 1a78 B9E1     		b	.L186
 3779              	.L217:
 695:..\src/command_processing.c ****                         break;
 3780              		.loc 1 695 0
 3781 1a7a 07F12403 		add	r3, r7, #36
 3782 1a7e 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 97


 3783 1a80 FFF7FEFF 		bl	strlen
 3784 1a84 0346     		mov	r3, r0
 3785 1a86 1A46     		mov	r2, r3
 3786 1a88 07F12403 		add	r3, r7, #36
 3787 1a8c 1344     		add	r3, r3, r2
 3788 1a8e 524A     		ldr	r2, .L267+52
 3789 1a90 1068     		ldr	r0, [r2]	@ unaligned
 3790 1a92 1860     		str	r0, [r3]	@ unaligned
 3791 1a94 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3792 1a96 9279     		ldrb	r2, [r2, #6]
 3793 1a98 9980     		strh	r1, [r3, #4]	@ unaligned
 3794 1a9a 9A71     		strb	r2, [r3, #6]
 696:..\src/command_processing.c ****                         case LEFT_HAND:
 3795              		.loc 1 696 0
 3796 1a9c 0FE0     		b	.L216
 3797              	.L218:
 698:..\src/command_processing.c ****                         break;
 3798              		.loc 1 698 0
 3799 1a9e 07F12403 		add	r3, r7, #36
 3800 1aa2 1846     		mov	r0, r3
 3801 1aa4 FFF7FEFF 		bl	strlen
 3802 1aa8 0346     		mov	r3, r0
 3803 1aaa 1A46     		mov	r2, r3
 3804 1aac 07F12403 		add	r3, r7, #36
 3805 1ab0 1344     		add	r3, r3, r2
 3806 1ab2 4A4A     		ldr	r2, .L267+56
 3807 1ab4 1068     		ldr	r0, [r2]	@ unaligned
 3808 1ab6 1860     		str	r0, [r3]	@ unaligned
 3809 1ab8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3810 1aba 9A80     		strh	r2, [r3, #4]	@ unaligned
 699:..\src/command_processing.c ****                     }
 3811              		.loc 1 699 0
 3812 1abc 00BF     		nop
 3813              	.L216:
 3814              		.loc 1 701 0
 3815 1abe 96E1     		b	.L186
 3816              	.L192:
 702:..\src/command_processing.c ****                 case 5:     // on/off menu
 703:..\src/command_processing.c ****                     switch(*m_addr){
 3817              		.loc 1 703 0
 3818 1ac0 D7F8483C 		ldr	r3, [r7, #3144]
 3819 1ac4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3820 1ac6 002B     		cmp	r3, #0
 3821 1ac8 02D0     		beq	.L220
 3822 1aca 012B     		cmp	r3, #1
 3823 1acc 10D0     		beq	.L221
 704:..\src/command_processing.c ****                         case 0:
 705:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                         case 1:
 708:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 709:..\src/command_processing.c ****                         break;
 710:..\src/command_processing.c ****                     }
 711:..\src/command_processing.c ****                     break;
 3824              		.loc 1 711 0
 3825 1ace 8EE1     		b	.L186
 3826              	.L220:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 98


 705:..\src/command_processing.c ****                         break;
 3827              		.loc 1 705 0
 3828 1ad0 07F12403 		add	r3, r7, #36
 3829 1ad4 1846     		mov	r0, r3
 3830 1ad6 FFF7FEFF 		bl	strlen
 3831 1ada 0346     		mov	r3, r0
 3832 1adc 1A46     		mov	r2, r3
 3833 1ade 07F12403 		add	r3, r7, #36
 3834 1ae2 1344     		add	r3, r3, r2
 3835 1ae4 3E4A     		ldr	r2, .L267+60
 3836 1ae6 1068     		ldr	r0, [r2]	@ unaligned
 3837 1ae8 1860     		str	r0, [r3]	@ unaligned
 3838 1aea 1279     		ldrb	r2, [r2, #4]
 3839 1aec 1A71     		strb	r2, [r3, #4]
 706:..\src/command_processing.c ****                         case 1:
 3840              		.loc 1 706 0
 3841 1aee 0DE0     		b	.L219
 3842              	.L221:
 708:..\src/command_processing.c ****                         break;
 3843              		.loc 1 708 0
 3844 1af0 07F12403 		add	r3, r7, #36
 3845 1af4 1846     		mov	r0, r3
 3846 1af6 FFF7FEFF 		bl	strlen
 3847 1afa 0346     		mov	r3, r0
 3848 1afc 1A46     		mov	r2, r3
 3849 1afe 07F12403 		add	r3, r7, #36
 3850 1b02 1344     		add	r3, r3, r2
 3851 1b04 374A     		ldr	r2, .L267+64
 3852 1b06 1068     		ldr	r0, [r2]	@ unaligned
 3853 1b08 1860     		str	r0, [r3]	@ unaligned
 709:..\src/command_processing.c ****                     }
 3854              		.loc 1 709 0
 3855 1b0a 00BF     		nop
 3856              	.L219:
 3857              		.loc 1 711 0
 3858 1b0c 6FE1     		b	.L186
 3859              	.L193:
 712:..\src/command_processing.c ****                 case 6:     // expansion port menu
 713:..\src/command_processing.c ****                     switch(*m_addr){
 3860              		.loc 1 713 0
 3861 1b0e D7F8483C 		ldr	r3, [r7, #3144]
 3862 1b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3863 1b14 032B     		cmp	r3, #3
 3864 1b16 00F26981 		bhi	.L256
 3865 1b1a 01A2     		adr	r2, .L224
 3866 1b1c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3867              		.p2align 2
 3868              	.L224:
 3869 1b20 311B0000 		.word	.L223+1
 3870 1b24 511B0000 		.word	.L225+1
 3871 1b28 791B0000 		.word	.L226+1
 3872 1b2c F51B0000 		.word	.L227+1
 3873              		.p2align 1
 3874              	.L223:
 714:..\src/command_processing.c ****                         case EXP_NONE:
 715:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 3875              		.loc 1 715 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 99


 3876 1b30 07F12403 		add	r3, r7, #36
 3877 1b34 1846     		mov	r0, r3
 3878 1b36 FFF7FEFF 		bl	strlen
 3879 1b3a 0346     		mov	r3, r0
 3880 1b3c 1A46     		mov	r2, r3
 3881 1b3e 07F12403 		add	r3, r7, #36
 3882 1b42 1344     		add	r3, r3, r2
 3883 1b44 284A     		ldr	r2, .L267+68
 3884 1b46 1068     		ldr	r0, [r2]	@ unaligned
 3885 1b48 1860     		str	r0, [r3]	@ unaligned
 3886 1b4a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3887 1b4c 9A80     		strh	r2, [r3, #4]	@ unaligned
 716:..\src/command_processing.c ****                             break;
 3888              		.loc 1 716 0
 3889 1b4e 65E0     		b	.L222
 3890              	.L225:
 717:..\src/command_processing.c ****                         case EXP_SD_RTC:
 718:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 3891              		.loc 1 718 0
 3892 1b50 07F12403 		add	r3, r7, #36
 3893 1b54 1846     		mov	r0, r3
 3894 1b56 FFF7FEFF 		bl	strlen
 3895 1b5a 0346     		mov	r3, r0
 3896 1b5c 1A46     		mov	r2, r3
 3897 1b5e 07F12403 		add	r3, r7, #36
 3898 1b62 1344     		add	r3, r3, r2
 3899 1b64 214A     		ldr	r2, .L267+72
 3900 1b66 1C46     		mov	r4, r3
 3901 1b68 1346     		mov	r3, r2
 3902 1b6a 07CB     		ldmia	r3!, {r0, r1, r2}
 3903 1b6c 2060     		str	r0, [r4]	@ unaligned
 3904 1b6e 6160     		str	r1, [r4, #4]	@ unaligned
 3905 1b70 A260     		str	r2, [r4, #8]	@ unaligned
 3906 1b72 1B88     		ldrh	r3, [r3]	@ unaligned
 3907 1b74 A381     		strh	r3, [r4, #12]	@ unaligned
 719:..\src/command_processing.c ****                             break;
 3908              		.loc 1 719 0
 3909 1b76 51E0     		b	.L222
 3910              	.L226:
 720:..\src/command_processing.c ****                         case EXP_WIFI:
 721:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 3911              		.loc 1 721 0
 3912 1b78 07F12403 		add	r3, r7, #36
 3913 1b7c 1846     		mov	r0, r3
 3914 1b7e FFF7FEFF 		bl	strlen
 3915 1b82 0346     		mov	r3, r0
 3916 1b84 1A46     		mov	r2, r3
 3917 1b86 07F12403 		add	r3, r7, #36
 3918 1b8a 1344     		add	r3, r3, r2
 3919 1b8c 184A     		ldr	r2, .L267+76
 3920 1b8e 1D46     		mov	r5, r3
 3921 1b90 1446     		mov	r4, r2
 3922 1b92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3923 1b94 2860     		str	r0, [r5]	@ unaligned
 3924 1b96 6960     		str	r1, [r5, #4]	@ unaligned
 3925 1b98 AA60     		str	r2, [r5, #8]	@ unaligned
 3926 1b9a EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 100


 3927 1b9c 2388     		ldrh	r3, [r4]	@ unaligned
 3928 1b9e 2B82     		strh	r3, [r5, #16]	@ unaligned
 722:..\src/command_processing.c ****         					break;
 3929              		.loc 1 722 0
 3930 1ba0 3CE0     		b	.L222
 3931              	.L268:
 3932 1ba2 00BF     		.align	2
 3933              	.L267:
 3934 1ba4 00000000 		.word	.LC76
 3935 1ba8 08000000 		.word	.LC77
 3936 1bac 10000000 		.word	.LC78
 3937 1bb0 24000000 		.word	.LC79
 3938 1bb4 34000000 		.word	.LC80
 3939 1bb8 40000000 		.word	.LC81
 3940 1bbc 54000000 		.word	.LC82
 3941 1bc0 78000000 		.word	.LC83
 3942 1bc4 84000000 		.word	.LC84
 3943 1bc8 8C000000 		.word	.LC85
 3944 1bcc 98000000 		.word	.LC86
 3945 1bd0 B0000000 		.word	.LC87
 3946 1bd4 B8000000 		.word	.LC88
 3947 1bd8 C0000000 		.word	.LC89
 3948 1bdc C8000000 		.word	.LC90
 3949 1be0 D0000000 		.word	.LC91
 3950 1be4 D8000000 		.word	.LC92
 3951 1be8 E0000000 		.word	.LC93
 3952 1bec E8000000 		.word	.LC94
 3953 1bf0 F8000000 		.word	.LC95
 3954              	.L227:
 723:..\src/command_processing.c ****                         case EXP_OTHER:
 724:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 3955              		.loc 1 724 0
 3956 1bf4 07F12403 		add	r3, r7, #36
 3957 1bf8 1846     		mov	r0, r3
 3958 1bfa FFF7FEFF 		bl	strlen
 3959 1bfe 0346     		mov	r3, r0
 3960 1c00 1A46     		mov	r2, r3
 3961 1c02 07F12403 		add	r3, r7, #36
 3962 1c06 1344     		add	r3, r3, r2
 3963 1c08 D54A     		ldr	r2, .L269
 3964 1c0a 1C46     		mov	r4, r3
 3965 1c0c 1346     		mov	r3, r2
 3966 1c0e 07CB     		ldmia	r3!, {r0, r1, r2}
 3967 1c10 2060     		str	r0, [r4]	@ unaligned
 3968 1c12 6160     		str	r1, [r4, #4]	@ unaligned
 3969 1c14 A260     		str	r2, [r4, #8]	@ unaligned
 3970 1c16 1B78     		ldrb	r3, [r3]
 3971 1c18 2373     		strb	r3, [r4, #12]
 725:..\src/command_processing.c ****         					break;
 3972              		.loc 1 725 0
 3973 1c1a 00BF     		nop
 3974              	.L222:
 726:..\src/command_processing.c ****                     }
 727:..\src/command_processing.c ****                     break;
 3975              		.loc 1 727 0
 3976 1c1c E6E0     		b	.L256
 3977              	.L194:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 101


 728:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 729:..\src/command_processing.c ****                     switch(*m_addr){
 3978              		.loc 1 729 0
 3979 1c1e D7F8483C 		ldr	r3, [r7, #3144]
 3980 1c22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3981 1c24 012B     		cmp	r3, #1
 3982 1c26 14D0     		beq	.L229
 3983 1c28 022B     		cmp	r3, #2
 3984 1c2a 22D0     		beq	.L230
 3985 1c2c 002B     		cmp	r3, #0
 3986 1c2e 00D0     		beq	.L231
 730:..\src/command_processing.c ****                         case 0: 
 731:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 732:..\src/command_processing.c ****                             break;
 733:..\src/command_processing.c ****                         case 1: 
 734:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 735:..\src/command_processing.c ****                             break;
 736:..\src/command_processing.c ****                         case 2: 
 737:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 738:..\src/command_processing.c ****                             break;
 739:..\src/command_processing.c ****                         default:
 740:..\src/command_processing.c ****                             break;
 3987              		.loc 1 740 0
 3988 1c30 2FE0     		b	.L232
 3989              	.L231:
 731:..\src/command_processing.c ****                             break;
 3990              		.loc 1 731 0
 3991 1c32 07F12403 		add	r3, r7, #36
 3992 1c36 1846     		mov	r0, r3
 3993 1c38 FFF7FEFF 		bl	strlen
 3994 1c3c 0346     		mov	r3, r0
 3995 1c3e 1A46     		mov	r2, r3
 3996 1c40 07F12403 		add	r3, r7, #36
 3997 1c44 1344     		add	r3, r3, r2
 3998 1c46 C74A     		ldr	r2, .L269+4
 3999 1c48 1068     		ldr	r0, [r2]	@ unaligned
 4000 1c4a 1860     		str	r0, [r3]	@ unaligned
 4001 1c4c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4002 1c4e 9A80     		strh	r2, [r3, #4]	@ unaligned
 732:..\src/command_processing.c ****                         case 1: 
 4003              		.loc 1 732 0
 4004 1c50 1FE0     		b	.L232
 4005              	.L229:
 734:..\src/command_processing.c ****                             break;
 4006              		.loc 1 734 0
 4007 1c52 07F12403 		add	r3, r7, #36
 4008 1c56 1846     		mov	r0, r3
 4009 1c58 FFF7FEFF 		bl	strlen
 4010 1c5c 0346     		mov	r3, r0
 4011 1c5e 1A46     		mov	r2, r3
 4012 1c60 07F12403 		add	r3, r7, #36
 4013 1c64 1344     		add	r3, r3, r2
 4014 1c66 C04A     		ldr	r2, .L269+8
 4015 1c68 1068     		ldr	r0, [r2]	@ unaligned
 4016 1c6a 1860     		str	r0, [r3]	@ unaligned
 4017 1c6c 1279     		ldrb	r2, [r2, #4]
 4018 1c6e 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 102


 735:..\src/command_processing.c ****                         case 2: 
 4019              		.loc 1 735 0
 4020 1c70 0FE0     		b	.L232
 4021              	.L230:
 737:..\src/command_processing.c ****                             break;
 4022              		.loc 1 737 0
 4023 1c72 07F12403 		add	r3, r7, #36
 4024 1c76 1846     		mov	r0, r3
 4025 1c78 FFF7FEFF 		bl	strlen
 4026 1c7c 0346     		mov	r3, r0
 4027 1c7e 1A46     		mov	r2, r3
 4028 1c80 07F12403 		add	r3, r7, #36
 4029 1c84 1344     		add	r3, r3, r2
 4030 1c86 B94A     		ldr	r2, .L269+12
 4031 1c88 1068     		ldr	r0, [r2]	@ unaligned
 4032 1c8a 1860     		str	r0, [r3]	@ unaligned
 4033 1c8c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4034 1c8e 9A80     		strh	r2, [r3, #4]	@ unaligned
 738:..\src/command_processing.c ****                         default:
 4035              		.loc 1 738 0
 4036 1c90 00BF     		nop
 4037              	.L232:
 741:..\src/command_processing.c ****                     } 
 742:..\src/command_processing.c ****                     break;
 4038              		.loc 1 742 0 discriminator 12
 4039 1c92 ACE0     		b	.L186
 4040              	.L195:
 743:..\src/command_processing.c ****                 case 8:     // user menu          
 744:..\src/command_processing.c ****                     switch(*m_addr){
 4041              		.loc 1 744 0
 4042 1c94 D7F8483C 		ldr	r3, [r7, #3144]
 4043 1c98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4044 1c9a 012B     		cmp	r3, #1
 4045 1c9c 18D0     		beq	.L234
 4046 1c9e 022B     		cmp	r3, #2
 4047 1ca0 28D0     		beq	.L235
 4048 1ca2 002B     		cmp	r3, #0
 4049 1ca4 00D0     		beq	.L236
 745:..\src/command_processing.c ****                         case GENERIC_USER:
 746:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 747:..\src/command_processing.c ****                         break;
 748:..\src/command_processing.c ****                         case MARIA:
 749:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 750:..\src/command_processing.c ****                         break;
 751:..\src/command_processing.c ****                         case ROZA:
 752:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 753:..\src/command_processing.c ****                         break;
 754:..\src/command_processing.c ****                     }   
 755:..\src/command_processing.c ****                     break;                    
 4050              		.loc 1 755 0
 4051 1ca6 A2E0     		b	.L186
 4052              	.L236:
 746:..\src/command_processing.c ****                         break;
 4053              		.loc 1 746 0
 4054 1ca8 07F12403 		add	r3, r7, #36
 4055 1cac 1846     		mov	r0, r3
 4056 1cae FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 103


 4057 1cb2 0346     		mov	r3, r0
 4058 1cb4 1A46     		mov	r2, r3
 4059 1cb6 07F12403 		add	r3, r7, #36
 4060 1cba 1344     		add	r3, r3, r2
 4061 1cbc AC4A     		ldr	r2, .L269+16
 4062 1cbe 1C46     		mov	r4, r3
 4063 1cc0 1346     		mov	r3, r2
 4064 1cc2 07CB     		ldmia	r3!, {r0, r1, r2}
 4065 1cc4 2060     		str	r0, [r4]	@ unaligned
 4066 1cc6 6160     		str	r1, [r4, #4]	@ unaligned
 4067 1cc8 A260     		str	r2, [r4, #8]	@ unaligned
 4068 1cca 1B88     		ldrh	r3, [r3]	@ unaligned
 4069 1ccc A381     		strh	r3, [r4, #12]	@ unaligned
 747:..\src/command_processing.c ****                         case MARIA:
 4070              		.loc 1 747 0
 4071 1cce 21E0     		b	.L233
 4072              	.L234:
 749:..\src/command_processing.c ****                         break;
 4073              		.loc 1 749 0
 4074 1cd0 07F12403 		add	r3, r7, #36
 4075 1cd4 1846     		mov	r0, r3
 4076 1cd6 FFF7FEFF 		bl	strlen
 4077 1cda 0346     		mov	r3, r0
 4078 1cdc 1A46     		mov	r2, r3
 4079 1cde 07F12403 		add	r3, r7, #36
 4080 1ce2 1344     		add	r3, r3, r2
 4081 1ce4 A34A     		ldr	r2, .L269+20
 4082 1ce6 1068     		ldr	r0, [r2]	@ unaligned
 4083 1ce8 1860     		str	r0, [r3]	@ unaligned
 4084 1cea 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4085 1cec 9279     		ldrb	r2, [r2, #6]
 4086 1cee 9980     		strh	r1, [r3, #4]	@ unaligned
 4087 1cf0 9A71     		strb	r2, [r3, #6]
 750:..\src/command_processing.c ****                         case ROZA:
 4088              		.loc 1 750 0
 4089 1cf2 0FE0     		b	.L233
 4090              	.L235:
 752:..\src/command_processing.c ****                         break;
 4091              		.loc 1 752 0
 4092 1cf4 07F12403 		add	r3, r7, #36
 4093 1cf8 1846     		mov	r0, r3
 4094 1cfa FFF7FEFF 		bl	strlen
 4095 1cfe 0346     		mov	r3, r0
 4096 1d00 1A46     		mov	r2, r3
 4097 1d02 07F12403 		add	r3, r7, #36
 4098 1d06 1344     		add	r3, r3, r2
 4099 1d08 9B4A     		ldr	r2, .L269+24
 4100 1d0a 1068     		ldr	r0, [r2]	@ unaligned
 4101 1d0c 1860     		str	r0, [r3]	@ unaligned
 4102 1d0e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4103 1d10 9A80     		strh	r2, [r3, #4]	@ unaligned
 753:..\src/command_processing.c ****                     }   
 4104              		.loc 1 753 0
 4105 1d12 00BF     		nop
 4106              	.L233:
 4107              		.loc 1 755 0
 4108 1d14 6BE0     		b	.L186
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 104


 4109              	.L196:
 756:..\src/command_processing.c ****                 case 9:     // driver type menu
 757:..\src/command_processing.c ****                     switch(*m_addr){
 4110              		.loc 1 757 0
 4111 1d16 D7F8483C 		ldr	r3, [r7, #3144]
 4112 1d1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 1d1c 002B     		cmp	r3, #0
 4114 1d1e 02D0     		beq	.L238
 4115 1d20 012B     		cmp	r3, #1
 4116 1d22 15D0     		beq	.L239
 758:..\src/command_processing.c ****                         case 0:
 759:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 760:..\src/command_processing.c ****                         break;
 761:..\src/command_processing.c ****                         case 1:
 762:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 763:..\src/command_processing.c ****                         break;
 764:..\src/command_processing.c ****                     }
 765:..\src/command_processing.c ****                     break;
 4117              		.loc 1 765 0
 4118 1d24 63E0     		b	.L186
 4119              	.L238:
 759:..\src/command_processing.c ****                         break;
 4120              		.loc 1 759 0
 4121 1d26 07F12403 		add	r3, r7, #36
 4122 1d2a 1846     		mov	r0, r3
 4123 1d2c FFF7FEFF 		bl	strlen
 4124 1d30 0346     		mov	r3, r0
 4125 1d32 1A46     		mov	r2, r3
 4126 1d34 07F12403 		add	r3, r7, #36
 4127 1d38 1344     		add	r3, r3, r2
 4128 1d3a 904A     		ldr	r2, .L269+28
 4129 1d3c 1D46     		mov	r5, r3
 4130 1d3e 1446     		mov	r4, r2
 4131 1d40 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4132 1d42 2860     		str	r0, [r5]	@ unaligned
 4133 1d44 6960     		str	r1, [r5, #4]	@ unaligned
 4134 1d46 AA60     		str	r2, [r5, #8]	@ unaligned
 4135 1d48 EB60     		str	r3, [r5, #12]	@ unaligned
 4136 1d4a 2068     		ldr	r0, [r4]	@ unaligned
 4137 1d4c 2861     		str	r0, [r5, #16]	@ unaligned
 760:..\src/command_processing.c ****                         case 1:
 4138              		.loc 1 760 0
 4139 1d4e 16E0     		b	.L237
 4140              	.L239:
 762:..\src/command_processing.c ****                         break;
 4141              		.loc 1 762 0
 4142 1d50 07F12403 		add	r3, r7, #36
 4143 1d54 1846     		mov	r0, r3
 4144 1d56 FFF7FEFF 		bl	strlen
 4145 1d5a 0346     		mov	r3, r0
 4146 1d5c 1A46     		mov	r2, r3
 4147 1d5e 07F12403 		add	r3, r7, #36
 4148 1d62 1344     		add	r3, r3, r2
 4149 1d64 864A     		ldr	r2, .L269+32
 4150 1d66 1D46     		mov	r5, r3
 4151 1d68 1446     		mov	r4, r2
 4152 1d6a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 105


 4153 1d6c 2860     		str	r0, [r5]	@ unaligned
 4154 1d6e 6960     		str	r1, [r5, #4]	@ unaligned
 4155 1d70 AA60     		str	r2, [r5, #8]	@ unaligned
 4156 1d72 EB60     		str	r3, [r5, #12]	@ unaligned
 4157 1d74 2068     		ldr	r0, [r4]	@ unaligned
 4158 1d76 2861     		str	r0, [r5, #16]	@ unaligned
 4159 1d78 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4160 1d7a AB82     		strh	r3, [r5, #20]	@ unaligned
 763:..\src/command_processing.c ****                     }
 4161              		.loc 1 763 0
 4162 1d7c 00BF     		nop
 4163              	.L237:
 4164              		.loc 1 765 0
 4165 1d7e 36E0     		b	.L186
 4166              	.L197:
 766:..\src/command_processing.c ****                 case 10:    // device type menu
 767:..\src/command_processing.c ****                     switch(*m_addr){
 4167              		.loc 1 767 0
 4168 1d80 D7F8483C 		ldr	r3, [r7, #3144]
 4169 1d84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4170 1d86 002B     		cmp	r3, #0
 4171 1d88 02D0     		beq	.L241
 4172 1d8a 012B     		cmp	r3, #1
 4173 1d8c 14D0     		beq	.L242
 768:..\src/command_processing.c ****                         case 0:
 769:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 770:..\src/command_processing.c ****                         break;
 771:..\src/command_processing.c ****                         case 1:
 772:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 773:..\src/command_processing.c ****                         break;
 774:..\src/command_processing.c ****                     }
 775:..\src/command_processing.c ****                     break;
 4174              		.loc 1 775 0
 4175 1d8e 2EE0     		b	.L186
 4176              	.L241:
 769:..\src/command_processing.c ****                         break;
 4177              		.loc 1 769 0
 4178 1d90 07F12403 		add	r3, r7, #36
 4179 1d94 1846     		mov	r0, r3
 4180 1d96 FFF7FEFF 		bl	strlen
 4181 1d9a 0346     		mov	r3, r0
 4182 1d9c 1A46     		mov	r2, r3
 4183 1d9e 07F12403 		add	r3, r7, #36
 4184 1da2 1344     		add	r3, r3, r2
 4185 1da4 774A     		ldr	r2, .L269+36
 4186 1da6 1C46     		mov	r4, r3
 4187 1da8 1346     		mov	r3, r2
 4188 1daa 07CB     		ldmia	r3!, {r0, r1, r2}
 4189 1dac 2060     		str	r0, [r4]	@ unaligned
 4190 1dae 6160     		str	r1, [r4, #4]	@ unaligned
 4191 1db0 A260     		str	r2, [r4, #8]	@ unaligned
 4192 1db2 1B88     		ldrh	r3, [r3]	@ unaligned
 4193 1db4 A381     		strh	r3, [r4, #12]	@ unaligned
 770:..\src/command_processing.c ****                         case 1:
 4194              		.loc 1 770 0
 4195 1db6 14E0     		b	.L240
 4196              	.L242:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 106


 772:..\src/command_processing.c ****                         break;
 4197              		.loc 1 772 0
 4198 1db8 07F12403 		add	r3, r7, #36
 4199 1dbc 1846     		mov	r0, r3
 4200 1dbe FFF7FEFF 		bl	strlen
 4201 1dc2 0346     		mov	r3, r0
 4202 1dc4 1A46     		mov	r2, r3
 4203 1dc6 07F12403 		add	r3, r7, #36
 4204 1dca 1344     		add	r3, r3, r2
 4205 1dcc 6E4A     		ldr	r2, .L269+40
 4206 1dce 1D46     		mov	r5, r3
 4207 1dd0 1446     		mov	r4, r2
 4208 1dd2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4209 1dd4 2860     		str	r0, [r5]	@ unaligned
 4210 1dd6 6960     		str	r1, [r5, #4]	@ unaligned
 4211 1dd8 AA60     		str	r2, [r5, #8]	@ unaligned
 4212 1dda EB60     		str	r3, [r5, #12]	@ unaligned
 4213 1ddc 2388     		ldrh	r3, [r4]	@ unaligned
 4214 1dde 2B82     		strh	r3, [r5, #16]	@ unaligned
 773:..\src/command_processing.c ****                     }
 4215              		.loc 1 773 0
 4216 1de0 00BF     		nop
 4217              	.L240:
 4218              		.loc 1 775 0
 4219 1de2 04E0     		b	.L186
 4220              	.L254:
 667:..\src/command_processing.c ****                 case 2:     // control mode menu
 4221              		.loc 1 667 0
 4222 1de4 00BF     		nop
 4223 1de6 02E0     		b	.L186
 4224              	.L255:
 683:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4225              		.loc 1 683 0
 4226 1de8 00BF     		nop
 4227 1dea 00E0     		b	.L186
 4228              	.L256:
 727:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4229              		.loc 1 727 0
 4230 1dec 00BF     		nop
 4231              	.L186:
 776:..\src/command_processing.c ****             }
 777:..\src/command_processing.c ****             //Recomputes string lenght
 778:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 4232              		.loc 1 778 0
 4233 1dee 07F12403 		add	r3, r7, #36
 4234 1df2 1846     		mov	r0, r3
 4235 1df4 FFF7FEFF 		bl	strlen
 4236 1df8 0346     		mov	r3, r0
 4237 1dfa DBB2     		uxtb	r3, r3
 4238 1dfc 0133     		adds	r3, r3, #1
 4239 1dfe 87F8523C 		strb	r3, [r7, #3154]
 4240              	.L185:
 779:..\src/command_processing.c ****         }
 780:..\src/command_processing.c **** 
 781:..\src/command_processing.c ****         // Add parameter string to packet
 782:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4241              		.loc 1 782 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 107


 4242 1e02 97F8523C 		ldrb	r3, [r7, #3154]
 4243 1e06 87F8573C 		strb	r3, [r7, #3159]
 4244 1e0a 26E0     		b	.L243
 4245              	.L244:
 783:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4246              		.loc 1 783 0 discriminator 3
 4247 1e0c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4248 1e10 3222     		movs	r2, #50
 4249 1e12 02FB03F3 		mul	r3, r2, r3
 4250 1e16 1A1D     		adds	r2, r3, #4
 4251 1e18 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4252 1e1c 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4253 1e20 381D     		adds	r0, r7, #4
 4254 1e22 0068     		ldr	r0, [r0]
 4255 1e24 0144     		add	r1, r1, r0
 4256 1e26 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4257 1e28 01FB03F3 		mul	r3, r1, r3
 4258 1e2c 1A44     		add	r2, r2, r3
 4259 1e2e 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4260 1e32 1A44     		add	r2, r2, r3
 4261 1e34 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4262 1e38 D31A     		subs	r3, r2, r3
 4263 1e3a 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4264 1e3e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 4265 1e42 8A1A     		subs	r2, r1, r2
 4266 1e44 07F12401 		add	r1, r7, #36
 4267 1e48 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4268 1e4a 07F15802 		add	r2, r7, #88
 4269 1e4e D154     		strb	r1, [r2, r3]
 782:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4270              		.loc 1 782 0 discriminator 3
 4271 1e50 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4272 1e54 013B     		subs	r3, r3, #1
 4273 1e56 87F8573C 		strb	r3, [r7, #3159]
 4274              	.L243:
 782:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4275              		.loc 1 782 0 is_stmt 0 discriminator 1
 4276 1e5a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4277 1e5e 002B     		cmp	r3, #0
 4278 1e60 D4D1     		bne	.L244
 784:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 785:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4279              		.loc 1 785 0 is_stmt 1
 4280 1e62 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4281 1e66 07F10802 		add	r2, r7, #8
 4282 1e6a 1268     		ldr	r2, [r2]
 4283 1e6c 1344     		add	r3, r3, r2
 4284 1e6e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4285 1e70 002B     		cmp	r3, #0
 4286 1e72 21D1     		bne	.L245
 786:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4287              		.loc 1 786 0
 4288 1e74 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4289 1e78 3222     		movs	r2, #50
 4290 1e7a 02FB03F3 		mul	r3, r2, r3
 4291 1e7e 1A1D     		adds	r2, r3, #4
 4292 1e80 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 108


 4293 1e84 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4294 1e88 381D     		adds	r0, r7, #4
 4295 1e8a 0068     		ldr	r0, [r0]
 4296 1e8c 0144     		add	r1, r1, r0
 4297 1e8e 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4298 1e90 01FB03F3 		mul	r3, r1, r3
 4299 1e94 1A44     		add	r2, r2, r3
 4300 1e96 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4301 1e9a 1344     		add	r3, r3, r2
 4302 1e9c 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4303 1ea0 D7F8701C 		ldr	r1, [r7, #3184]
 4304 1ea4 0A44     		add	r2, r2, r1
 4305 1ea6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4306 1ea8 07F15802 		add	r2, r7, #88
 4307 1eac D154     		strb	r1, [r2, r3]
 787:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4308              		.loc 1 787 0
 4309 1eae 97F8543C 		ldrb	r3, [r7, #3156]
 4310 1eb2 0133     		adds	r3, r3, #1
 4311 1eb4 87F8543C 		strb	r3, [r7, #3156]
 4312              	.L245:
 788:..\src/command_processing.c ****         }      
 789:..\src/command_processing.c ****         
 790:..\src/command_processing.c ****         // Add struct index after an empty bit
 791:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 792:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4313              		.loc 1 792 0
 4314 1eb8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4315 1ebc 07F10802 		add	r2, r7, #8
 4316 1ec0 1268     		ldr	r2, [r2]
 4317 1ec2 1344     		add	r3, r3, r2
 4318 1ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4319 1ec6 002B     		cmp	r3, #0
 4320 1ec8 1ED1     		bne	.L246
 793:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4321              		.loc 1 793 0
 4322 1eca 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4323 1ece 3222     		movs	r2, #50
 4324 1ed0 02FB03F3 		mul	r3, r2, r3
 4325 1ed4 1A1D     		adds	r2, r3, #4
 4326 1ed6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4327 1eda 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4328 1ede 381D     		adds	r0, r7, #4
 4329 1ee0 0068     		ldr	r0, [r0]
 4330 1ee2 0144     		add	r1, r1, r0
 4331 1ee4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4332 1ee6 01FB03F3 		mul	r3, r1, r3
 4333 1eea 1A44     		add	r2, r2, r3
 4334 1eec 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4335 1ef0 1344     		add	r3, r3, r2
 4336 1ef2 0233     		adds	r3, r3, #2
 4337 1ef4 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4338 1ef8 3946     		mov	r1, r7
 4339 1efa 0968     		ldr	r1, [r1]
 4340 1efc 0A44     		add	r2, r2, r1
 4341 1efe 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4342 1f00 07F15802 		add	r2, r7, #88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 109


 4343 1f04 D154     		strb	r1, [r2, r3]
 4344 1f06 1DE0     		b	.L247
 4345              	.L246:
 794:..\src/command_processing.c ****         }
 795:..\src/command_processing.c ****         else {
 796:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4346              		.loc 1 796 0
 4347 1f08 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4348 1f0c 3222     		movs	r2, #50
 4349 1f0e 02FB03F3 		mul	r3, r2, r3
 4350 1f12 1A1D     		adds	r2, r3, #4
 4351 1f14 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4352 1f18 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4353 1f1c 381D     		adds	r0, r7, #4
 4354 1f1e 0068     		ldr	r0, [r0]
 4355 1f20 0144     		add	r1, r1, r0
 4356 1f22 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4357 1f24 01FB03F3 		mul	r3, r1, r3
 4358 1f28 1A44     		add	r2, r2, r3
 4359 1f2a 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4360 1f2e 1344     		add	r3, r3, r2
 4361 1f30 0133     		adds	r3, r3, #1
 4362 1f32 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4363 1f36 3946     		mov	r1, r7
 4364 1f38 0968     		ldr	r1, [r1]
 4365 1f3a 0A44     		add	r2, r2, r1
 4366 1f3c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4367 1f3e 07F15802 		add	r2, r7, #88
 4368 1f42 D154     		strb	r1, [r2, r3]
 4369              	.L247:
 373:..\src/command_processing.c ****         
 4370              		.loc 1 373 0 discriminator 2
 4371 1f44 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4372 1f48 0133     		adds	r3, r3, #1
 4373 1f4a 87F8553C 		strb	r3, [r7, #3157]
 4374              	.L63:
 373:..\src/command_processing.c ****         
 4375              		.loc 1 373 0 is_stmt 0 discriminator 1
 4376 1f4e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4377 1f52 232B     		cmp	r3, #35
 4378 1f54 7EF6A1A8 		bls	.L248
 797:..\src/command_processing.c ****         }
 798:..\src/command_processing.c ****     }
 799:..\src/command_processing.c **** 
 800:..\src/command_processing.c ****     // Add menu
 801:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4379              		.loc 1 801 0 is_stmt 1
 4380 1f58 0023     		movs	r3, #0
 4381 1f5a 87F8563C 		strb	r3, [r7, #3158]
 4382 1f5e 53E0     		b	.L249
 4383              	.L270:
 4384              		.align	2
 4385              	.L269:
 4386 1f60 0C010000 		.word	.LC96
 4387 1f64 E0000000 		.word	.LC93
 4388 1f68 1C010000 		.word	.LC97
 4389 1f6c 24010000 		.word	.LC98
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 110


 4390 1f70 2C010000 		.word	.LC99
 4391 1f74 3C010000 		.word	.LC100
 4392 1f78 44010000 		.word	.LC101
 4393 1f7c 4C010000 		.word	.LC102
 4394 1f80 64010000 		.word	.LC103
 4395 1f84 7C010000 		.word	.LC104
 4396 1f88 8C010000 		.word	.LC105
 4397              	.L252:
 802:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4398              		.loc 1 802 0
 4399 1f8c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4400 1f90 9B00     		lsls	r3, r3, #2
 4401 1f92 D7F87C2C 		ldr	r2, [r7, #3196]
 4402 1f96 1344     		add	r3, r3, r2
 4403 1f98 1B68     		ldr	r3, [r3]
 4404 1f9a 1846     		mov	r0, r3
 4405 1f9c FFF7FEFF 		bl	strlen
 4406 1fa0 0346     		mov	r3, r0
 4407 1fa2 87F8523C 		strb	r3, [r7, #3154]
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4408              		.loc 1 803 0
 4409 1fa6 97F8523C 		ldrb	r3, [r7, #3154]
 4410 1faa 87F8573C 		strb	r3, [r7, #3159]
 4411 1fae 22E0     		b	.L250
 4412              	.L251:
 804:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4413              		.loc 1 804 0 discriminator 3
 4414 1fb0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4415 1fb4 9622     		movs	r2, #150
 4416 1fb6 02FB03F3 		mul	r3, r2, r3
 4417 1fba 03F20A72 		addw	r2, r3, #1802
 4418 1fbe 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4419 1fc2 1A44     		add	r2, r2, r3
 4420 1fc4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4421 1fc8 D31A     		subs	r3, r2, r3
 4422 1fca 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4423 1fce 9200     		lsls	r2, r2, #2
 4424 1fd0 D7F87C1C 		ldr	r1, [r7, #3196]
 4425 1fd4 0A44     		add	r2, r2, r1
 4426 1fd6 1268     		ldr	r2, [r2]
 4427 1fd8 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4428 1fdc 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4429 1fe0 411A     		subs	r1, r0, r1
 4430 1fe2 0A44     		add	r2, r2, r1
 4431 1fe4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4432 1fe6 07F15802 		add	r2, r7, #88
 4433 1fea D154     		strb	r1, [r2, r3]
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4434              		.loc 1 803 0 discriminator 3
 4435 1fec 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4436 1ff0 013B     		subs	r3, r3, #1
 4437 1ff2 87F8573C 		strb	r3, [r7, #3159]
 4438              	.L250:
 803:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4439              		.loc 1 803 0 is_stmt 0 discriminator 1
 4440 1ff6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4441 1ffa 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 111


 4442 1ffc D8D1     		bne	.L251
 801:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4443              		.loc 1 801 0 is_stmt 1 discriminator 2
 4444 1ffe 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4445 2002 0133     		adds	r3, r3, #1
 4446 2004 87F8563C 		strb	r3, [r7, #3158]
 4447              	.L249:
 801:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4448              		.loc 1 801 0 is_stmt 0 discriminator 1
 4449 2008 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4450 200c 072B     		cmp	r3, #7
 4451 200e BDD9     		bls	.L252
 805:..\src/command_processing.c ****     }
 806:..\src/command_processing.c ****     
 807:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4452              		.loc 1 807 0 is_stmt 1
 4453 2010 B7F8503C 		ldrh	r3, [r7, #3152]
 4454 2014 5C1E     		subs	r4, r3, #1
 4455 2016 B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4456 201a DBB2     		uxtb	r3, r3
 4457 201c 013B     		subs	r3, r3, #1
 4458 201e DAB2     		uxtb	r2, r3
 4459 2020 07F15803 		add	r3, r7, #88
 4460 2024 1146     		mov	r1, r2
 4461 2026 1846     		mov	r0, r3
 4462 2028 FFF7FEFF 		bl	LCRChecksum
 4463 202c 0346     		mov	r3, r0
 4464 202e 1A46     		mov	r2, r3
 4465 2030 07F15803 		add	r3, r7, #88
 4466 2034 1A55     		strb	r2, [r3, r4]
 808:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4467              		.loc 1 808 0
 4468 2036 B7F8502C 		ldrh	r2, [r7, #3152]
 4469 203a 07F15803 		add	r3, r7, #88
 4470 203e 1146     		mov	r1, r2
 4471 2040 1846     		mov	r0, r3
 4472 2042 FFF7FEFF 		bl	commWrite
 809:..\src/command_processing.c **** }
 4473              		.loc 1 809 0
 4474 2046 00BF     		nop
 4475 2048 07F65C47 		addw	r7, r7, #3164
 4476              		.cfi_def_cfa_offset 20
 4477 204c BD46     		mov	sp, r7
 4478              		.cfi_def_cfa_register 13
 4479              		@ sp needed
 4480 204e F0BD     		pop	{r4, r5, r6, r7, pc}
 4481              		.cfi_endproc
 4482              	.LFE67:
 4483              		.size	get_param_list, .-get_param_list
 4484              		.section	.rodata
 4485 019f 00       		.align	2
 4486              	.LC107:
 4487 01a0 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4487      204E6F6E 
 4487      650A3120 
 4487      2D3E204C 
 4487      6F772028 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 112


 4488 01d0 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4488      74657220 
 4488      72656164 
 4488      290A3220 
 4488      2D3E2048 
 4489 0200 62697420 		.ascii	"bit register read)\012\000"
 4489      72656769 
 4489      73746572 
 4489      20726561 
 4489      64290A00 
 4490              		.align	2
 4491              	.LC108:
 4492 0214 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4492      20557362 
 4492      0A31202D 
 4492      3E204861 
 4492      6E646C65 
 4493 023f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4493      20454D47 
 4493      20496E74 
 4493      65677261 
 4493      6C0A3420 
 4494 026c 20416476 		.ascii	" Advanced\0126 -> EMG proportional NC\012\000"
 4494      616E6365 
 4494      640A3620 
 4494      2D3E2045 
 4494      4D472070 
 4495              		.align	2
 4496              	.LC109:
 4497 0290 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4497      20506F73 
 4497      6974696F 
 4497      6E0A3120 
 4497      2D3E2050 
 4498 02ba 6F736974 		.ascii	"osition and Current\012\000"
 4498      696F6E20 
 4498      616E6420 
 4498      43757272 
 4498      656E740A 
 4499 02cf 00       		.align	2
 4500              	.LC110:
 4501 02d0 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4501      20446561 
 4501      63746976 
 4501      61746520 
 4501      5B4E4F5D 
 4502 02fa 0000     		.align	2
 4503              	.LC111:
 4504 02fc 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4504      20526967 
 4504      68740A31 
 4504      202D3E20 
 4504      4C656674 
 4505 0312 0000     		.align	2
 4506              	.LC112:
 4507 0314 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4507      204F4646 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 113


 4507      0A31202D 
 4507      3E204F4E 
 4507      0A546865 
 4508 033b 00       		.align	2
 4509              	.LC113:
 4510 033c 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4510      204E6F6E 
 4510      650A3120 
 4510      2D3E2053 
 4510      442F5254 
 4511 0369 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4511      0A33202D 
 4511      3E204F74 
 4511      68657220 
 4511      5B4E2F41 
 4512 0394 00       		.ascii	"\000"
 4513 0395 000000   		.align	2
 4514              	.LC114:
 4515 0398 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 4515      2047656E 
 4515      65726963 
 4515      20757365 
 4515      720A3120 
 4516 03c2 20626F61 		.ascii	" board will reset\012\000"
 4516      72642077 
 4516      696C6C20 
 4516      72657365 
 4516      740A00
 4517 03d5 000000   		.align	2
 4518              	.LC115:
 4519 03d8 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4519      204D4333 
 4519      33383837 
 4519      20285374 
 4519      616E6461 
 4520 0408 290A5468 		.ascii	")\012The board will reset\012\000"
 4520      6520626F 
 4520      61726420 
 4520      77696C6C 
 4520      20726573 
 4521              		.align	2
 4522              	.LC116:
 4523 0420 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\012The b"
 4523      20534F46 
 4523      5448414E 
 4523      44205052 
 4523      4F0A3120 
 4524 044d 6F617264 		.ascii	"oard will reset\012\000"
 4524      2077696C 
 4524      6C207265 
 4524      7365740A 
 4524      00
 4525 045e 0000     		.align	2
 4526              	.LC0:
 4527 0460 02       		.byte	2
 4528 0461 07       		.byte	7
 4529 0462 07       		.byte	7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 114


 4530 0463 00       		.byte	0
 4531 0464 00       		.byte	0
 4532 0465 00       		.byte	0
 4533 0466 02       		.byte	2
 4534 0467 03       		.byte	3
 4535 0468 07       		.byte	7
 4536 0469 00       		.byte	0
 4537 046a 05       		.byte	5
 4538 046b 05       		.byte	5
 4539 046c 03       		.byte	3
 4540 046d 04       		.byte	4
 4541 046e 00       		.byte	0
 4542 046f 06       		.byte	6
 4543 0470 02       		.byte	2
 4544 0471 00       		.byte	0
 4545 0472 01       		.byte	1
 4546 0473 00       		.byte	0
 4547 0474 07       		.byte	7
 4548 0475 02       		.byte	2
 4549 0476 05       		.byte	5
 4550 0477 05       		.byte	5
 4551 0478 05       		.byte	5
 4552 0479 00       		.byte	0
 4553 047a 00       		.byte	0
 4554 047b 00       		.byte	0
 4555 047c 00       		.byte	0
 4556 047d 00       		.byte	0
 4557 047e 00       		.byte	0
 4558 047f 02       		.byte	2
 4559 0480 00       		.byte	0
 4560 0481 02       		.byte	2
 4561 0482 00       		.byte	0
 4562 0483 09       		.byte	9
 4563 0484 02       		.byte	2
 4564 0485 00       		.byte	0
 4565 0486 02       		.byte	2
 4566 0487 00       		.byte	0
 4567 0488 02       		.byte	2
 4568 0489 01       		.byte	1
 4569 048a 00       		.byte	0
 4570 048b 07       		.byte	7
 4571 048c 07       		.byte	7
 4572 048d 00       		.byte	0
 4573 048e 00       		.byte	0
 4574 048f 00       		.byte	0
 4575 0490 02       		.byte	2
 4576 0491 03       		.byte	3
 4577 0492 07       		.byte	7
 4578 0493 00       		.byte	0
 4579 0494 05       		.byte	5
 4580 0495 05       		.byte	5
 4581 0496 03       		.byte	3
 4582 0497 00       		.byte	0
 4583 0498 01       		.byte	1
 4584 0499 00       		.byte	0
 4585 049a 07       		.byte	7
 4586 049b 02       		.byte	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 115


 4587 049c 00       		.byte	0
 4588 049d 02       		.byte	2
 4589 049e 00       		.byte	0
 4590 049f 02       		.byte	2
 4591 04a0 01       		.byte	1
 4592 04a1 02       		.byte	2
 4593 04a2 02       		.byte	2
 4594 04a3 00       		.byte	0
 4595 04a4 02       		.byte	2
 4596 04a5 02       		.byte	2
 4597 04a6 00       		.byte	0
 4598 04a7 00       		.align	2
 4599              	.LC1:
 4600 04a8 31202D20 		.ascii	"1 - Device ID:\000"
 4600      44657669 
 4600      63652049 
 4600      443A00
 4601 04b7 00       		.align	2
 4602              	.LC2:
 4603 04b8 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 4603      506F7369 
 4603      74696F6E 
 4603      20504944 
 4603      205B502C 
 4604              		.align	2
 4605              	.LC3:
 4606 04d4 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 4606      43757272 
 4606      656E7420 
 4606      50494420 
 4606      5B502C20 
 4607 04ef 00       		.align	2
 4608              	.LC4:
 4609 04f0 34202D20 		.ascii	"4 - Startup Activation:\000"
 4609      53746172 
 4609      74757020 
 4609      41637469 
 4609      76617469 
 4610              		.align	2
 4611              	.LC5:
 4612 0508 35202D20 		.ascii	"5 - Input mode:\000"
 4612      496E7075 
 4612      74206D6F 
 4612      64653A00 
 4613              		.align	2
 4614              	.LC6:
 4615 0518 36202D20 		.ascii	"6 - Control mode:\000"
 4615      436F6E74 
 4615      726F6C20 
 4615      6D6F6465 
 4615      3A00
 4616 052a 0000     		.align	2
 4617              	.LC7:
 4618 052c 37202D20 		.ascii	"7 - Resolutions:\000"
 4618      5265736F 
 4618      6C757469 
 4618      6F6E733A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 116


 4618      00
 4619 053d 000000   		.align	2
 4620              	.LC8:
 4621 0540 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 4621      4D656173 
 4621      7572656D 
 4621      656E7420 
 4621      4F666673 
 4622 0559 000000   		.align	2
 4623              	.LC9:
 4624 055c 39202D20 		.ascii	"9 - Multipliers:\000"
 4624      4D756C74 
 4624      69706C69 
 4624      6572733A 
 4624      00
 4625 056d 000000   		.align	2
 4626              	.LC10:
 4627 0570 3130202D 		.ascii	"10 - Pos. limit active:\000"
 4627      20506F73 
 4627      2E206C69 
 4627      6D697420 
 4627      61637469 
 4628              		.align	2
 4629              	.LC11:
 4630 0588 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 4630      20506F73 
 4630      2E206C69 
 4630      6D697473 
 4630      205B696E 
 4631 05a5 000000   		.align	2
 4632              	.LC12:
 4633 05a8 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 4633      204D6178 
 4633      20737465 
 4633      7073205B 
 4633      6E65672C 
 4634 05c3 00       		.align	2
 4635              	.LC13:
 4636 05c4 3133202D 		.ascii	"13 - Current limit:\000"
 4636      20437572 
 4636      72656E74 
 4636      206C696D 
 4636      69743A00 
 4637              		.align	2
 4638              	.LC14:
 4639 05d8 3134202D 		.ascii	"14 - EMG thresholds:\000"
 4639      20454D47 
 4639      20746872 
 4639      6573686F 
 4639      6C64733A 
 4640 05ed 000000   		.align	2
 4641              	.LC15:
 4642 05f0 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 4642      20454D47 
 4642      2063616C 
 4642      69627261 
 4642      74696F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 117


 4643 0611 000000   		.align	2
 4644              	.LC16:
 4645 0614 3136202D 		.ascii	"16 - EMG max values:\000"
 4645      20454D47 
 4645      206D6178 
 4645      2076616C 
 4645      7565733A 
 4646 0629 000000   		.align	2
 4647              	.LC17:
 4648 062c 3137202D 		.ascii	"17 - EMG max speed:\000"
 4648      20454D47 
 4648      206D6178 
 4648      20737065 
 4648      65643A00 
 4649              		.align	2
 4650              	.LC18:
 4651 0640 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 4651      20416273 
 4651      6F6C7574 
 4651      6520656E 
 4651      636F6465 
 4652              		.align	2
 4653              	.LC19:
 4654 0660 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 4654      204D6F74 
 4654      6F722068 
 4654      616E646C 
 4654      65207261 
 4655 0679 000000   		.align	2
 4656              	.LC20:
 4657 067c 3230202D 		.ascii	"20 - PWM rescaling:\000"
 4657      2050574D 
 4657      20726573 
 4657      63616C69 
 4657      6E673A00 
 4658              		.align	2
 4659              	.LC21:
 4660 0690 3231202D 		.ascii	"21 - Current lookup:\000"
 4660      20437572 
 4660      72656E74 
 4660      206C6F6F 
 4660      6B75703A 
 4661 06a5 000000   		.align	2
 4662              	.LC22:
 4663 06a8 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 4663      20446174 
 4663      65206F66 
 4663      206D6169 
 4663      6E74656E 
 4664 06ca 0000     		.align	2
 4665              	.LC23:
 4666 06cc 3233202D 		.ascii	"23 - Rest position:\000"
 4666      20526573 
 4666      7420706F 
 4666      73697469 
 4666      6F6E3A00 
 4667              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 118


 4668              	.LC24:
 4669 06e0 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 4669      20526573 
 4669      7420706F 
 4669      73697469 
 4669      6F6E2074 
 4670              		.align	2
 4671              	.LC25:
 4672 0704 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 4672      20526573 
 4672      74207665 
 4672      6C20636C 
 4672      6F737572 
 4673 0727 00       		.align	2
 4674              	.LC26:
 4675 0728 3236202D 		.ascii	"26 - Rest position enabled:\000"
 4675      20526573 
 4675      7420706F 
 4675      73697469 
 4675      6F6E2065 
 4676              		.align	2
 4677              	.LC27:
 4678 0744 3237202D 		.ascii	"27 - EMG inversion:\000"
 4678      20454D47 
 4678      20696E76 
 4678      65727369 
 4678      6F6E3A00 
 4679              		.align	2
 4680              	.LC28:
 4681 0758 3238202D 		.ascii	"28 - Hand side:\000"
 4681      2048616E 
 4681      64207369 
 4681      64653A00 
 4682              		.align	2
 4683              	.LC29:
 4684 0768 3239202D 		.ascii	"29 - Enable IMUs:\000"
 4684      20456E61 
 4684      626C6520 
 4684      494D5573 
 4684      3A00
 4685 077a 0000     		.align	2
 4686              	.LC30:
 4687 077c 3330202D 		.ascii	"30 - Read Expansion port:\000"
 4687      20526561 
 4687      64204578 
 4687      70616E73 
 4687      696F6E20 
 4688 0796 0000     		.align	2
 4689              	.LC31:
 4690 0798 3331202D 		.ascii	"31 - Reset counters:\000"
 4690      20526573 
 4690      65742063 
 4690      6F756E74 
 4690      6572733A 
 4691 07ad 000000   		.align	2
 4692              	.LC32:
 4693 07b0 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 119


 4693      204C6173 
 4693      74206368 
 4693      65636B65 
 4693      64205469 
 4694 07d6 0000     		.align	2
 4695              	.LC33:
 4696 07d8 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 4696      20535049 
 4696      20726561 
 4696      64206465 
 4696      6C617920 
 4697 07f3 00       		.align	2
 4698              	.LC34:
 4699 07f4 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 4699      204F6E20 
 4699      626F6172 
 4699      6420494D 
 4699      5520636F 
 4700 0819 000000   		.align	2
 4701              	.LC35:
 4702 081c 3335202D 		.ascii	"35 - User ID:\000"
 4702      20557365 
 4702      72204944 
 4702      3A00
 4703 082a 0000     		.align	2
 4704              	.LC36:
 4705 082c 3336202D 		.ascii	"36 - User code:\000"
 4705      20557365 
 4705      7220636F 
 4705      64653A00 
 4706              		.align	2
 4707              	.LC37:
 4708 083c 3337202D 		.ascii	"37 - Associated encoder line:\000"
 4708      20417373 
 4708      6F636961 
 4708      74656420 
 4708      656E636F 
 4709 085a 0000     		.align	2
 4710              	.LC38:
 4711 085c 3338202D 		.ascii	"38 - Driver type:\000"
 4711      20447269 
 4711      76657220 
 4711      74797065 
 4711      3A00
 4712 086e 0000     		.align	2
 4713              	.LC39:
 4714 0870 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 4714      2050574D 
 4714      20726174 
 4714      65206C69 
 4714      6D697465 
 4715 0887 00       		.align	2
 4716              	.LC40:
 4717 0888 3430202D 		.ascii	"40 - Not reversible:\000"
 4717      204E6F74 
 4717      20726576 
 4717      65727369 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 120


 4717      626C653A 
 4718 089d 000000   		.align	2
 4719              	.LC41:
 4720 08a0 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 4720      20456E63 
 4720      20696478 
 4720      20757365 
 4720      6420666F 
 4721 08bf 00       		.align	2
 4722              	.LC42:
 4723 08c0 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 4723      20476561 
 4723      72207061 
 4723      72616D73 
 4723      5B4E312C 
 4724 08de 0000     		.align	2
 4725              	.LC43:
 4726 08e0 3433202D 		.ascii	"43 - Use second motor:\000"
 4726      20557365 
 4726      20736563 
 4726      6F6E6420 
 4726      6D6F746F 
 4727 08f7 00       		.align	2
 4728              	.LC44:
 4729 08f8 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 4729      20506F73 
 4729      6974696F 
 4729      6E205049 
 4729      44205B50 
 4730 0915 000000   		.align	2
 4731              	.LC45:
 4732 0918 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 4732      20437572 
 4732      72656E74 
 4732      20504944 
 4732      205B502C 
 4733              		.align	2
 4734              	.LC46:
 4735 0934 3436202D 		.ascii	"46 - Startup Activation:\000"
 4735      20537461 
 4735      72747570 
 4735      20416374 
 4735      69766174 
 4736 094d 000000   		.align	2
 4737              	.LC47:
 4738 0950 3437202D 		.ascii	"47 - Input mode:\000"
 4738      20496E70 
 4738      7574206D 
 4738      6F64653A 
 4738      00
 4739 0961 000000   		.align	2
 4740              	.LC48:
 4741 0964 3438202D 		.ascii	"48 - Control mode:\000"
 4741      20436F6E 
 4741      74726F6C 
 4741      206D6F64 
 4741      653A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 121


 4742 0977 00       		.align	2
 4743              	.LC49:
 4744 0978 3439202D 		.ascii	"49 - Resolutions:\000"
 4744      20526573 
 4744      6F6C7574 
 4744      696F6E73 
 4744      3A00
 4745 098a 0000     		.align	2
 4746              	.LC50:
 4747 098c 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 4747      204D6561 
 4747      73757265 
 4747      6D656E74 
 4747      204F6666 
 4748 09a6 0000     		.align	2
 4749              	.LC51:
 4750 09a8 3531202D 		.ascii	"51 - Multipliers:\000"
 4750      204D756C 
 4750      7469706C 
 4750      69657273 
 4750      3A00
 4751 09ba 0000     		.align	2
 4752              	.LC52:
 4753 09bc 3532202D 		.ascii	"52 - Pos. limit active:\000"
 4753      20506F73 
 4753      2E206C69 
 4753      6D697420 
 4753      61637469 
 4754              		.align	2
 4755              	.LC53:
 4756 09d4 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 4756      20506F73 
 4756      2E206C69 
 4756      6D697473 
 4756      205B696E 
 4757 09f1 000000   		.align	2
 4758              	.LC54:
 4759 09f4 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 4759      204D6178 
 4759      20737465 
 4759      7073205B 
 4759      6E65672C 
 4760 0a0f 00       		.align	2
 4761              	.LC55:
 4762 0a10 3535202D 		.ascii	"55 - Current limit:\000"
 4762      20437572 
 4762      72656E74 
 4762      206C696D 
 4762      69743A00 
 4763              		.align	2
 4764              	.LC56:
 4765 0a24 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 4765      20416273 
 4765      6F6C7574 
 4765      6520656E 
 4765      636F6465 
 4766              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 122


 4767              	.LC57:
 4768 0a44 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 4768      204D6F74 
 4768      6F722068 
 4768      616E646C 
 4768      65207261 
 4769 0a5d 000000   		.align	2
 4770              	.LC58:
 4771 0a60 3538202D 		.ascii	"58 - PWM rescaling:\000"
 4771      2050574D 
 4771      20726573 
 4771      63616C69 
 4771      6E673A00 
 4772              		.align	2
 4773              	.LC59:
 4774 0a74 3539202D 		.ascii	"59 - Current lookup:\000"
 4774      20437572 
 4774      72656E74 
 4774      206C6F6F 
 4774      6B75703A 
 4775 0a89 000000   		.align	2
 4776              	.LC60:
 4777 0a8c 3630202D 		.ascii	"60 - Associated encoder line:\000"
 4777      20417373 
 4777      6F636961 
 4777      74656420 
 4777      656E636F 
 4778 0aaa 0000     		.align	2
 4779              	.LC61:
 4780 0aac 3631202D 		.ascii	"61 - Driver type:\000"
 4780      20447269 
 4780      76657220 
 4780      74797065 
 4780      3A00
 4781 0abe 0000     		.align	2
 4782              	.LC62:
 4783 0ac0 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 4783      2050574D 
 4783      20726174 
 4783      65206C69 
 4783      6D697465 
 4784 0ad7 00       		.align	2
 4785              	.LC63:
 4786 0ad8 3633202D 		.ascii	"63 - Not reversible:\000"
 4786      204E6F74 
 4786      20726576 
 4786      65727369 
 4786      626C653A 
 4787 0aed 000000   		.align	2
 4788              	.LC64:
 4789 0af0 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 4789      20456E63 
 4789      20696478 
 4789      20757365 
 4789      6420666F 
 4790 0b0f 00       		.align	2
 4791              	.LC65:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 123


 4792 0b10 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 4792      20476561 
 4792      72207061 
 4792      72616D73 
 4792      5B4E312C 
 4793 0b2e 0000     		.align	2
 4794              	.LC66:
 4795 0b30 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 4795      20526561 
 4795      6420656E 
 4795      63207261 
 4795      77206C69 
 4796 0b4a 0000     		.align	2
 4797              	.LC67:
 4798 0b4c 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 4798      20526561 
 4798      6420656E 
 4798      63207261 
 4798      77206C69 
 4799 0b66 0000     		.align	2
 4800              	.LC68:
 4801 0b68 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 4801      20526561 
 4801      64206164 
 4801      64697469 
 4801      6F6E616C 
 4802 0b87 00       		.align	2
 4803              	.LC69:
 4804 0b88 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 4804      20414443 
 4804      20636861 
 4804      6E6E656C 
 4804      205B312D 
 4805              		.align	2
 4806              	.LC70:
 4807 0ba0 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 4807      20414443 
 4807      20636861 
 4807      6E6E656C 
 4807      205B372D 
 4808 0bb9 000000   		.align	2
 4809              	.LC71:
 4810 0bbc 3731202D 		.ascii	"71 - Device type:\000"
 4810      20446576 
 4810      69636520 
 4810      74797065 
 4810      3A00
 4811 0bce 0000     		.align	2
 4812              	.LC106:
 4813 0bd0 A8040000 		.word	.LC1
 4814 0bd4 B8040000 		.word	.LC2
 4815 0bd8 D4040000 		.word	.LC3
 4816 0bdc F0040000 		.word	.LC4
 4817 0be0 08050000 		.word	.LC5
 4818 0be4 18050000 		.word	.LC6
 4819 0be8 2C050000 		.word	.LC7
 4820 0bec 40050000 		.word	.LC8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 124


 4821 0bf0 5C050000 		.word	.LC9
 4822 0bf4 70050000 		.word	.LC10
 4823 0bf8 88050000 		.word	.LC11
 4824 0bfc A8050000 		.word	.LC12
 4825 0c00 C4050000 		.word	.LC13
 4826 0c04 D8050000 		.word	.LC14
 4827 0c08 F0050000 		.word	.LC15
 4828 0c0c 14060000 		.word	.LC16
 4829 0c10 2C060000 		.word	.LC17
 4830 0c14 40060000 		.word	.LC18
 4831 0c18 60060000 		.word	.LC19
 4832 0c1c 7C060000 		.word	.LC20
 4833 0c20 90060000 		.word	.LC21
 4834 0c24 A8060000 		.word	.LC22
 4835 0c28 CC060000 		.word	.LC23
 4836 0c2c E0060000 		.word	.LC24
 4837 0c30 04070000 		.word	.LC25
 4838 0c34 28070000 		.word	.LC26
 4839 0c38 44070000 		.word	.LC27
 4840 0c3c 58070000 		.word	.LC28
 4841 0c40 68070000 		.word	.LC29
 4842 0c44 7C070000 		.word	.LC30
 4843 0c48 98070000 		.word	.LC31
 4844 0c4c B0070000 		.word	.LC32
 4845 0c50 D8070000 		.word	.LC33
 4846 0c54 F4070000 		.word	.LC34
 4847 0c58 1C080000 		.word	.LC35
 4848 0c5c 2C080000 		.word	.LC36
 4849 0c60 3C080000 		.word	.LC37
 4850 0c64 5C080000 		.word	.LC38
 4851 0c68 70080000 		.word	.LC39
 4852 0c6c 88080000 		.word	.LC40
 4853 0c70 A0080000 		.word	.LC41
 4854 0c74 C0080000 		.word	.LC42
 4855 0c78 E0080000 		.word	.LC43
 4856 0c7c F8080000 		.word	.LC44
 4857 0c80 18090000 		.word	.LC45
 4858 0c84 34090000 		.word	.LC46
 4859 0c88 50090000 		.word	.LC47
 4860 0c8c 64090000 		.word	.LC48
 4861 0c90 78090000 		.word	.LC49
 4862 0c94 8C090000 		.word	.LC50
 4863 0c98 A8090000 		.word	.LC51
 4864 0c9c BC090000 		.word	.LC52
 4865 0ca0 D4090000 		.word	.LC53
 4866 0ca4 F4090000 		.word	.LC54
 4867 0ca8 100A0000 		.word	.LC55
 4868 0cac 240A0000 		.word	.LC56
 4869 0cb0 440A0000 		.word	.LC57
 4870 0cb4 600A0000 		.word	.LC58
 4871 0cb8 740A0000 		.word	.LC59
 4872 0cbc 8C0A0000 		.word	.LC60
 4873 0cc0 AC0A0000 		.word	.LC61
 4874 0cc4 C00A0000 		.word	.LC62
 4875 0cc8 D80A0000 		.word	.LC63
 4876 0ccc F00A0000 		.word	.LC64
 4877 0cd0 100B0000 		.word	.LC65
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 125


 4878 0cd4 300B0000 		.word	.LC66
 4879 0cd8 4C0B0000 		.word	.LC67
 4880 0cdc 680B0000 		.word	.LC68
 4881 0ce0 880B0000 		.word	.LC69
 4882 0ce4 A00B0000 		.word	.LC70
 4883 0ce8 BC0B0000 		.word	.LC71
 4884              		.align	2
 4885              	.LC73:
 4886 0cec 03       		.byte	3
 4887 0ced 01       		.byte	1
 4888 0cee 02       		.byte	2
 4889 0cef 03       		.byte	3
 4890 0cf0 03       		.byte	3
 4891 0cf1 03       		.byte	3
 4892 0cf2 03       		.byte	3
 4893 0cf3 03       		.byte	3
 4894 0cf4 03       		.byte	3
 4895 0cf5 04       		.byte	4
 4896 0cf6 05       		.byte	5
 4897 0cf7 06       		.byte	6
 4898 0cf8 03       		.byte	3
 4899 0cf9 07       		.byte	7
 4900 0cfa 08       		.byte	8
 4901 0cfb 09       		.byte	9
 4902 0cfc 03       		.byte	3
 4903 0cfd 05       		.byte	5
 4904 0cfe 03       		.byte	3
 4905 0cff 01       		.byte	1
 4906 0d00 02       		.byte	2
 4907 0d01 03       		.byte	3
 4908 0d02 03       		.byte	3
 4909 0d03 03       		.byte	3
 4910 0d04 09       		.byte	9
 4911 0d05 03       		.byte	3
 4912 0d06 05       		.byte	5
 4913 0d07 0A       		.byte	10
 4914              		.align	2
 4915              	.LC74:
 4916 0d08 02       		.byte	2
 4917 0d09 03       		.byte	3
 4918 0d0a 08       		.byte	8
 4919 0d0b 0B       		.byte	11
 4920 0d0c 17       		.byte	23
 4921 0d0d 2C       		.byte	44
 4922 0d0e 2D       		.byte	45
 4923 0d0f 32       		.byte	50
 4924 0d10 35       		.byte	53
 4925 0d11 000000   		.align	2
 4926              	.LC75:
 4927 0d14 02       		.byte	2
 4928 0d15 03       		.byte	3
 4929 0d16 05       		.byte	5
 4930 0d17 08       		.byte	8
 4931 0d18 0B       		.byte	11
 4932 0d19 17       		.byte	23
 4933 0d1a 18       		.byte	24
 4934 0d1b 1C       		.byte	28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 126


 4935 0d1c 1F       		.byte	31
 4936 0d1d 20       		.byte	32
 4937 0d1e 26       		.byte	38
 4938 0d1f 2C       		.byte	44
 4939 0d20 2D       		.byte	45
 4940 0d21 2F       		.byte	47
 4941 0d22 32       		.byte	50
 4942 0d23 35       		.byte	53
 4943 0d24 3D       		.byte	61
 4944 0d25 47       		.byte	71
 4945              		.section	.text.manage_param_list,"ax",%progbits
 4946              		.align	2
 4947              		.global	manage_param_list
 4948              		.thumb
 4949              		.thumb_func
 4950              		.type	manage_param_list, %function
 4951              	manage_param_list:
 4952              	.LFB68:
 810:..\src/command_processing.c **** 
 811:..\src/command_processing.c **** //==============================================================================
 812:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 813:..\src/command_processing.c **** //==============================================================================
 814:..\src/command_processing.c **** 
 815:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 4953              		.loc 1 815 0
 4954              		.cfi_startproc
 4955              		@ args = 0, pretend = 0, frame = 1192
 4956              		@ frame_needed = 1, uses_anonymous_args = 0
 4957 0000 B0B5     		push	{r4, r5, r7, lr}
 4958              		.cfi_def_cfa_offset 16
 4959              		.cfi_offset 4, -16
 4960              		.cfi_offset 5, -12
 4961              		.cfi_offset 7, -8
 4962              		.cfi_offset 14, -4
 4963 0002 ADF5976D 		sub	sp, sp, #1208
 4964              		.cfi_def_cfa_offset 1224
 4965 0006 04AF     		add	r7, sp, #16
 4966              		.cfi_def_cfa 7, 1208
 4967 0008 0246     		mov	r2, r0
 4968 000a BB1D     		adds	r3, r7, #6
 4969 000c 1A80     		strh	r2, [r3]	@ movhi
 816:..\src/command_processing.c ****     uint8 CYDATA i, j;
 817:..\src/command_processing.c ****     uint8 CYDATA sod;
 818:..\src/command_processing.c ****     uint8 PARAM_IDX;
 819:..\src/command_processing.c ****     int16 aux_int16;
 820:..\src/command_processing.c ****     uint16 aux_uint16;
 821:..\src/command_processing.c ****     int32 aux_int32;
 822:..\src/command_processing.c ****     uint32 aux_uint32;
 823:..\src/command_processing.c ****     float aux_float;
 824:..\src/command_processing.c ****  
 825:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 4970              		.loc 1 825 0
 4971 000e 0023     		movs	r3, #0
 4972 0010 87F89D34 		strb	r3, [r7, #1181]
 826:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 4973              		.loc 1 826 0
 4974 0014 0123     		movs	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 127


 4975 0016 87F89C34 		strb	r3, [r7, #1180]
 827:..\src/command_processing.c ****     
 828:..\src/command_processing.c ****     // Arrays
 829:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 4976              		.loc 1 829 0
 4977 001a 054B     		ldr	r3, .L333
 4978 001c C7F8A034 		str	r3, [r7, #1184]
 830:..\src/command_processing.c ****     
 831:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 4979              		.loc 1 831 0
 4980 0020 BB1D     		adds	r3, r7, #6
 4981 0022 1B88     		ldrh	r3, [r3]
 4982 0024 002B     		cmp	r3, #0
 4983 0026 07D0     		beq	.L272
 832:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
 4984              		.loc 1 832 0
 4985 0028 024B     		ldr	r3, .L333+4
 4986 002a C7F8A034 		str	r3, [r7, #1184]
 4987 002e 03E0     		b	.L334
 4988              	.L335:
 4989              		.align	2
 4990              	.L333:
 4991 0030 00000000 		.word	c_mem
 4992 0034 00000000 		.word	g_mem
 4993              	.L334:
 4994              	.L272:
 833:..\src/command_processing.c ****     }
 834:..\src/command_processing.c ****  
 835:..\src/command_processing.c ****     
 836:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 837:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 838:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4995              		.loc 1 838 0
 4996 0038 D7F8A034 		ldr	r3, [r7, #1184]
 4997 003c 03F1A002 		add	r2, r3, #160
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 4998              		.loc 1 837 0
 4999 0040 07F55B73 		add	r3, r7, #876
 5000 0044 1A60     		str	r2, [r3]
 839:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 5001              		.loc 1 839 0
 5002 0046 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5003 004a 1346     		mov	r3, r2
 5004 004c DB00     		lsls	r3, r3, #3
 5005 004e 9B1A     		subs	r3, r3, r2
 5006 0050 1B01     		lsls	r3, r3, #4
 5007 0052 B033     		adds	r3, r3, #176
 5008 0054 D7F8A024 		ldr	r2, [r7, #1184]
 5009 0058 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5010              		.loc 1 837 0
 5011 005a 07F55B73 		add	r3, r7, #876
 5012 005e 5A60     		str	r2, [r3, #4]
 840:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 5013              		.loc 1 840 0
 5014 0060 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5015 0064 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 128


 5016 0066 DB00     		lsls	r3, r3, #3
 5017 0068 9B1A     		subs	r3, r3, r2
 5018 006a 1B01     		lsls	r3, r3, #4
 5019 006c B833     		adds	r3, r3, #184
 5020 006e D7F8A024 		ldr	r2, [r7, #1184]
 5021 0072 1344     		add	r3, r3, r2
 5022 0074 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5023              		.loc 1 837 0
 5024 0076 07F55B73 		add	r3, r7, #876
 5025 007a 9A60     		str	r2, [r3, #8]
 841:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 5026              		.loc 1 841 0
 5027 007c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5028 0080 1346     		mov	r3, r2
 5029 0082 DB00     		lsls	r3, r3, #3
 5030 0084 9B1A     		subs	r3, r3, r2
 5031 0086 1B01     		lsls	r3, r3, #4
 5032 0088 E033     		adds	r3, r3, #224
 5033 008a D7F8A024 		ldr	r2, [r7, #1184]
 5034 008e 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5035              		.loc 1 837 0
 5036 0090 07F55B73 		add	r3, r7, #876
 5037 0094 DA60     		str	r2, [r3, #12]
 842:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5038              		.loc 1 842 0
 5039 0096 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5040 009a 1346     		mov	r3, r2
 5041 009c DB00     		lsls	r3, r3, #3
 5042 009e 9B1A     		subs	r3, r3, r2
 5043 00a0 1B01     		lsls	r3, r3, #4
 5044 00a2 03F58473 		add	r3, r3, #264
 5045 00a6 D7F8A024 		ldr	r2, [r7, #1184]
 5046 00aa 1344     		add	r3, r3, r2
 5047 00ac 9A1D     		adds	r2, r3, #6
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5048              		.loc 1 837 0
 5049 00ae 07F55B73 		add	r3, r7, #876
 5050 00b2 1A61     		str	r2, [r3, #16]
 843:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5051              		.loc 1 843 0
 5052 00b4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5053 00b8 1346     		mov	r3, r2
 5054 00ba DB00     		lsls	r3, r3, #3
 5055 00bc 9B1A     		subs	r3, r3, r2
 5056 00be 1B01     		lsls	r3, r3, #4
 5057 00c0 03F58473 		add	r3, r3, #264
 5058 00c4 D7F8A024 		ldr	r2, [r7, #1184]
 5059 00c8 1344     		add	r3, r3, r2
 5060 00ca DA1D     		adds	r2, r3, #7
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5061              		.loc 1 837 0
 5062 00cc 07F55B73 		add	r3, r7, #876
 5063 00d0 5A61     		str	r2, [r3, #20]
 844:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 5064              		.loc 1 844 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 129


 5065 00d2 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5066 00d6 D7F8A014 		ldr	r1, [r7, #1184]
 5067 00da 1346     		mov	r3, r2
 5068 00dc DB00     		lsls	r3, r3, #3
 5069 00de 9B1A     		subs	r3, r3, r2
 5070 00e0 1B01     		lsls	r3, r3, #4
 5071 00e2 0B44     		add	r3, r3, r1
 5072 00e4 03F58873 		add	r3, r3, #272
 5073 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5074 00ea 1A46     		mov	r2, r3
 5075 00ec 1346     		mov	r3, r2
 5076 00ee 5B00     		lsls	r3, r3, #1
 5077 00f0 1344     		add	r3, r3, r2
 5078 00f2 1B01     		lsls	r3, r3, #4
 5079 00f4 03F5C873 		add	r3, r3, #400
 5080 00f8 D7F8A024 		ldr	r2, [r7, #1184]
 5081 00fc 1344     		add	r3, r3, r2
 5082 00fe 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5083              		.loc 1 837 0
 5084 0100 07F55B73 		add	r3, r7, #876
 5085 0104 9A61     		str	r2, [r3, #24]
 845:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5086              		.loc 1 845 0
 5087 0106 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5088 010a D7F8A014 		ldr	r1, [r7, #1184]
 5089 010e 1346     		mov	r3, r2
 5090 0110 DB00     		lsls	r3, r3, #3
 5091 0112 9B1A     		subs	r3, r3, r2
 5092 0114 1B01     		lsls	r3, r3, #4
 5093 0116 0B44     		add	r3, r3, r1
 5094 0118 03F58873 		add	r3, r3, #272
 5095 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5096 011e 1A46     		mov	r2, r3
 5097 0120 1346     		mov	r3, r2
 5098 0122 5B00     		lsls	r3, r3, #1
 5099 0124 1344     		add	r3, r3, r2
 5100 0126 1B01     		lsls	r3, r3, #4
 5101 0128 03F5CC73 		add	r3, r3, #408
 5102 012c D7F8A024 		ldr	r2, [r7, #1184]
 5103 0130 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5104              		.loc 1 837 0
 5105 0132 07F55B73 		add	r3, r7, #876
 5106 0136 DA61     		str	r2, [r3, #28]
 846:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 5107              		.loc 1 846 0
 5108 0138 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5109 013c D7F8A014 		ldr	r1, [r7, #1184]
 5110 0140 1346     		mov	r3, r2
 5111 0142 DB00     		lsls	r3, r3, #3
 5112 0144 9B1A     		subs	r3, r3, r2
 5113 0146 1B01     		lsls	r3, r3, #4
 5114 0148 0B44     		add	r3, r3, r1
 5115 014a 03F58873 		add	r3, r3, #272
 5116 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5117 0150 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 130


 5118 0152 1346     		mov	r3, r2
 5119 0154 5B00     		lsls	r3, r3, #1
 5120 0156 1344     		add	r3, r3, r2
 5121 0158 1B01     		lsls	r3, r3, #4
 5122 015a 03F5D073 		add	r3, r3, #416
 5123 015e D7F8A024 		ldr	r2, [r7, #1184]
 5124 0162 1344     		add	r3, r3, r2
 5125 0164 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5126              		.loc 1 837 0
 5127 0166 07F55B73 		add	r3, r7, #876
 5128 016a 1A62     		str	r2, [r3, #32]
 847:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5129              		.loc 1 847 0
 5130 016c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5131 0170 1346     		mov	r3, r2
 5132 0172 DB00     		lsls	r3, r3, #3
 5133 0174 9B1A     		subs	r3, r3, r2
 5134 0176 1B01     		lsls	r3, r3, #4
 5135 0178 E033     		adds	r3, r3, #224
 5136 017a D7F8A024 		ldr	r2, [r7, #1184]
 5137 017e 1344     		add	r3, r3, r2
 5138 0180 DA1C     		adds	r2, r3, #3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5139              		.loc 1 837 0
 5140 0182 07F55B73 		add	r3, r7, #876
 5141 0186 5A62     		str	r2, [r3, #36]
 848:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5142              		.loc 1 848 0
 5143 0188 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5144 018c 1346     		mov	r3, r2
 5145 018e DB00     		lsls	r3, r3, #3
 5146 0190 9B1A     		subs	r3, r3, r2
 5147 0192 1B01     		lsls	r3, r3, #4
 5148 0194 E033     		adds	r3, r3, #224
 5149 0196 D7F8A024 		ldr	r2, [r7, #1184]
 5150 019a 1344     		add	r3, r3, r2
 5151 019c 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5152              		.loc 1 837 0
 5153 019e 07F55B73 		add	r3, r7, #876
 5154 01a2 9A62     		str	r2, [r3, #40]
 849:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5155              		.loc 1 849 0
 5156 01a4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5157 01a8 1346     		mov	r3, r2
 5158 01aa DB00     		lsls	r3, r3, #3
 5159 01ac 9B1A     		subs	r3, r3, r2
 5160 01ae 1B01     		lsls	r3, r3, #4
 5161 01b0 E833     		adds	r3, r3, #232
 5162 01b2 D7F8A024 		ldr	r2, [r7, #1184]
 5163 01b6 1344     		add	r3, r3, r2
 5164 01b8 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5165              		.loc 1 837 0
 5166 01ba 07F55B73 		add	r3, r7, #876
 5167 01be DA62     		str	r2, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 131


 850:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5168              		.loc 1 850 0
 5169 01c0 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5170 01c4 1346     		mov	r3, r2
 5171 01c6 DB00     		lsls	r3, r3, #3
 5172 01c8 9B1A     		subs	r3, r3, r2
 5173 01ca 1B01     		lsls	r3, r3, #4
 5174 01cc 03F58473 		add	r3, r3, #264
 5175 01d0 D7F8A024 		ldr	r2, [r7, #1184]
 5176 01d4 1344     		add	r3, r3, r2
 5177 01d6 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5178              		.loc 1 837 0
 5179 01d8 07F55B73 		add	r3, r7, #876
 5180 01dc 1A63     		str	r2, [r3, #48]
 851:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5181              		.loc 1 851 0
 5182 01de D7F8A034 		ldr	r3, [r7, #1184]
 5183 01e2 03F5F872 		add	r2, r3, #496
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5184              		.loc 1 837 0
 5185 01e6 07F55B73 		add	r3, r7, #876
 5186 01ea 5A63     		str	r2, [r3, #52]
 852:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5187              		.loc 1 852 0
 5188 01ec D7F8A034 		ldr	r3, [r7, #1184]
 5189 01f0 03F2FD12 		addw	r2, r3, #509
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5190              		.loc 1 837 0
 5191 01f4 07F55B73 		add	r3, r7, #876
 5192 01f8 9A63     		str	r2, [r3, #56]
 853:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5193              		.loc 1 853 0
 5194 01fa D7F8A034 		ldr	r3, [r7, #1184]
 5195 01fe 03F5FA72 		add	r2, r3, #500
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5196              		.loc 1 837 0
 5197 0202 07F55B73 		add	r3, r7, #876
 5198 0206 DA63     		str	r2, [r3, #60]
 854:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed), 
 5199              		.loc 1 854 0
 5200 0208 D7F8A034 		ldr	r3, [r7, #1184]
 5201 020c 03F5FE72 		add	r2, r3, #508
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5202              		.loc 1 837 0
 5203 0210 07F55B73 		add	r3, r7, #876
 5204 0214 1A64     		str	r2, [r3, #64]
 855:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5205              		.loc 1 855 0
 5206 0216 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5207 021a D7F8A014 		ldr	r1, [r7, #1184]
 5208 021e 1346     		mov	r3, r2
 5209 0220 DB00     		lsls	r3, r3, #3
 5210 0222 9B1A     		subs	r3, r3, r2
 5211 0224 1B01     		lsls	r3, r3, #4
 5212 0226 0B44     		add	r3, r3, r1
 5213 0228 03F58873 		add	r3, r3, #272
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 132


 5214 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5215 022e 1A46     		mov	r2, r3
 5216 0230 1346     		mov	r3, r2
 5217 0232 5B00     		lsls	r3, r3, #1
 5218 0234 1344     		add	r3, r3, r2
 5219 0236 1B01     		lsls	r3, r3, #4
 5220 0238 03F5D873 		add	r3, r3, #432
 5221 023c D7F8A024 		ldr	r2, [r7, #1184]
 5222 0240 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5223              		.loc 1 837 0
 5224 0242 07F55B73 		add	r3, r7, #876
 5225 0246 5A64     		str	r2, [r3, #68]
 856:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5226              		.loc 1 856 0
 5227 0248 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5228 024c D7F8A014 		ldr	r1, [r7, #1184]
 5229 0250 1346     		mov	r3, r2
 5230 0252 DB00     		lsls	r3, r3, #3
 5231 0254 9B1A     		subs	r3, r3, r2
 5232 0256 1B01     		lsls	r3, r3, #4
 5233 0258 0B44     		add	r3, r3, r1
 5234 025a 03F58873 		add	r3, r3, #272
 5235 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5236 0260 1A46     		mov	r2, r3
 5237 0262 1346     		mov	r3, r2
 5238 0264 5B00     		lsls	r3, r3, #1
 5239 0266 1344     		add	r3, r3, r2
 5240 0268 1B01     		lsls	r3, r3, #4
 5241 026a 03F5D873 		add	r3, r3, #432
 5242 026e D7F8A024 		ldr	r2, [r7, #1184]
 5243 0272 1344     		add	r3, r3, r2
 5244 0274 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5245              		.loc 1 837 0
 5246 0276 07F55B73 		add	r3, r7, #876
 5247 027a 9A64     		str	r2, [r3, #72]
 857:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5248              		.loc 1 857 0
 5249 027c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5250 0280 1346     		mov	r3, r2
 5251 0282 DB00     		lsls	r3, r3, #3
 5252 0284 9B1A     		subs	r3, r3, r2
 5253 0286 1B01     		lsls	r3, r3, #4
 5254 0288 E033     		adds	r3, r3, #224
 5255 028a D7F8A024 		ldr	r2, [r7, #1184]
 5256 028e 1344     		add	r3, r3, r2
 5257 0290 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5258              		.loc 1 837 0
 5259 0292 07F55B73 		add	r3, r7, #876
 5260 0296 DA64     		str	r2, [r3, #76]
 858:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5261              		.loc 1 858 0
 5262 0298 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5263 029c 1346     		mov	r3, r2
 5264 029e DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 133


 5265 02a0 9B1A     		subs	r3, r3, r2
 5266 02a2 1B01     		lsls	r3, r3, #4
 5267 02a4 F033     		adds	r3, r3, #240
 5268 02a6 D7F8A024 		ldr	r2, [r7, #1184]
 5269 02aa 1344     		add	r3, r3, r2
 5270 02ac 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5271              		.loc 1 837 0
 5272 02ae 07F55B73 		add	r3, r7, #876
 5273 02b2 1A65     		str	r2, [r3, #80]
 859:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5274              		.loc 1 859 0
 5275 02b4 D7F8A034 		ldr	r3, [r7, #1184]
 5276 02b8 03F1A102 		add	r2, r3, #161
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5277              		.loc 1 837 0
 5278 02bc 07F55B73 		add	r3, r7, #876
 5279 02c0 5A65     		str	r2, [r3, #84]
 860:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5280              		.loc 1 860 0
 5281 02c2 D7F8A034 		ldr	r3, [r7, #1184]
 5282 02c6 03F52872 		add	r2, r3, #672
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5283              		.loc 1 837 0
 5284 02ca 07F55B73 		add	r3, r7, #876
 5285 02ce 9A65     		str	r2, [r3, #88]
 861:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5286              		.loc 1 861 0
 5287 02d0 D7F8A034 		ldr	r3, [r7, #1184]
 5288 02d4 03F52972 		add	r2, r3, #676
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5289              		.loc 1 837 0
 5290 02d8 07F55B73 		add	r3, r7, #876
 5291 02dc DA65     		str	r2, [r3, #92]
 862:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5292              		.loc 1 862 0
 5293 02de D7F8A034 		ldr	r3, [r7, #1184]
 5294 02e2 03F52A72 		add	r2, r3, #680
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5295              		.loc 1 837 0
 5296 02e6 07F55B73 		add	r3, r7, #876
 5297 02ea 1A66     		str	r2, [r3, #96]
 863:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5298              		.loc 1 863 0
 5299 02ec D7F8A034 		ldr	r3, [r7, #1184]
 5300 02f0 03F52B72 		add	r2, r3, #684
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5301              		.loc 1 837 0
 5302 02f4 07F55B73 		add	r3, r7, #876
 5303 02f8 5A66     		str	r2, [r3, #100]
 864:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5304              		.loc 1 864 0
 5305 02fa D7F8A034 		ldr	r3, [r7, #1184]
 5306 02fe 03F5FF72 		add	r2, r3, #510
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5307              		.loc 1 837 0
 5308 0302 07F55B73 		add	r3, r7, #876
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 134


 5309 0306 9A66     		str	r2, [r3, #104]
 865:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5310              		.loc 1 865 0
 5311 0308 D7F8A034 		ldr	r3, [r7, #1184]
 5312 030c 03F1A702 		add	r2, r3, #167
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5313              		.loc 1 837 0
 5314 0310 07F55B73 		add	r3, r7, #876
 5315 0314 DA66     		str	r2, [r3, #108]
 866:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5316              		.loc 1 866 0
 5317 0316 D7F8A034 		ldr	r3, [r7, #1184]
 5318 031a 03F50072 		add	r2, r3, #512
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5319              		.loc 1 837 0
 5320 031e 07F55B73 		add	r3, r7, #876
 5321 0322 1A67     		str	r2, [r3, #112]
 867:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5322              		.loc 1 867 0
 5323 0324 D7F8A034 		ldr	r3, [r7, #1184]
 5324 0328 03F22622 		addw	r2, r3, #550
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5325              		.loc 1 837 0
 5326 032c 07F55B73 		add	r3, r7, #876
 5327 0330 5A67     		str	r2, [r3, #116]
 868:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5328              		.loc 1 868 0
 5329 0332 D7F8A034 		ldr	r3, [r7, #1184]
 5330 0336 03F1A802 		add	r2, r3, #168
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5331              		.loc 1 837 0
 5332 033a 07F55B73 		add	r3, r7, #876
 5333 033e 9A67     		str	r2, [r3, #120]
 869:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5334              		.loc 1 869 0
 5335 0340 D7F8A034 		ldr	r3, [r7, #1184]
 5336 0344 03F50872 		add	r2, r3, #544
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5337              		.loc 1 837 0
 5338 0348 07F55B73 		add	r3, r7, #876
 5339 034c DA67     		str	r2, [r3, #124]
 870:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5340              		.loc 1 870 0
 5341 034e D7F8A034 		ldr	r3, [r7, #1184]
 5342 0352 03F20122 		addw	r2, r3, #513
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5343              		.loc 1 837 0
 5344 0356 07F55B73 		add	r3, r7, #876
 5345 035a C3F88020 		str	r2, [r3, #128]
 871:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5346              		.loc 1 871 0
 5347 035e D7F8A034 		ldr	r3, [r7, #1184]
 5348 0362 03F20222 		addw	r2, r3, #514
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5349              		.loc 1 837 0
 5350 0366 07F55B73 		add	r3, r7, #876
 5351 036a C3F88420 		str	r2, [r3, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 135


 872:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5352              		.loc 1 872 0
 5353 036e D7F8A034 		ldr	r3, [r7, #1184]
 5354 0372 03F1AB02 		add	r2, r3, #171
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5355              		.loc 1 837 0
 5356 0376 07F55B73 		add	r3, r7, #876
 5357 037a C3F88820 		str	r2, [r3, #136]
 873:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5358              		.loc 1 873 0
 5359 037e D7F8A034 		ldr	r3, [r7, #1184]
 5360 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5361 0386 1233     		adds	r3, r3, #18
 5362 0388 5B01     		lsls	r3, r3, #5
 5363 038a D7F8A024 		ldr	r2, [r7, #1184]
 5364 038e 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5365              		.loc 1 837 0
 5366 0390 07F55B73 		add	r3, r7, #876
 5367 0394 C3F88C20 		str	r2, [r3, #140]
 874:..\src/command_processing.c ****         
 875:..\src/command_processing.c ****         // GENERIC PARAMS
 876:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5368              		.loc 1 876 0
 5369 0398 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5370 039c 1346     		mov	r3, r2
 5371 039e DB00     		lsls	r3, r3, #3
 5372 03a0 9B1A     		subs	r3, r3, r2
 5373 03a2 1B01     		lsls	r3, r3, #4
 5374 03a4 03F58873 		add	r3, r3, #272
 5375 03a8 D7F8A024 		ldr	r2, [r7, #1184]
 5376 03ac 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5377              		.loc 1 837 0
 5378 03ae 07F55B73 		add	r3, r7, #876
 5379 03b2 C3F89020 		str	r2, [r3, #144]
 877:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5380              		.loc 1 877 0
 5381 03b6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5382 03ba 1346     		mov	r3, r2
 5383 03bc DB00     		lsls	r3, r3, #3
 5384 03be 9B1A     		subs	r3, r3, r2
 5385 03c0 1B01     		lsls	r3, r3, #4
 5386 03c2 E033     		adds	r3, r3, #224
 5387 03c4 D7F8A024 		ldr	r2, [r7, #1184]
 5388 03c8 1344     		add	r3, r3, r2
 5389 03ca 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5390              		.loc 1 837 0
 5391 03cc 07F55B73 		add	r3, r7, #876
 5392 03d0 C3F89420 		str	r2, [r3, #148]
 878:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5393              		.loc 1 878 0
 5394 03d4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5395 03d8 1346     		mov	r3, r2
 5396 03da DB00     		lsls	r3, r3, #3
 5397 03dc 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 136


 5398 03de 1B01     		lsls	r3, r3, #4
 5399 03e0 03F58873 		add	r3, r3, #272
 5400 03e4 D7F8A024 		ldr	r2, [r7, #1184]
 5401 03e8 1344     		add	r3, r3, r2
 5402 03ea 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5403              		.loc 1 837 0
 5404 03ec 07F55B73 		add	r3, r7, #876
 5405 03f0 C3F89820 		str	r2, [r3, #152]
 879:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5406              		.loc 1 879 0
 5407 03f4 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5408 03f8 1346     		mov	r3, r2
 5409 03fa DB00     		lsls	r3, r3, #3
 5410 03fc 9B1A     		subs	r3, r3, r2
 5411 03fe 1B01     		lsls	r3, r3, #4
 5412 0400 03F58873 		add	r3, r3, #272
 5413 0404 D7F8A024 		ldr	r2, [r7, #1184]
 5414 0408 1344     		add	r3, r3, r2
 5415 040a 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5416              		.loc 1 837 0
 5417 040c 07F55B73 		add	r3, r7, #876
 5418 0410 C3F89C20 		str	r2, [r3, #156]
 880:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5419              		.loc 1 880 0
 5420 0414 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5421 0418 D7F8A014 		ldr	r1, [r7, #1184]
 5422 041c 1346     		mov	r3, r2
 5423 041e DB00     		lsls	r3, r3, #3
 5424 0420 9B1A     		subs	r3, r3, r2
 5425 0422 1B01     		lsls	r3, r3, #4
 5426 0424 0B44     		add	r3, r3, r1
 5427 0426 03F58873 		add	r3, r3, #272
 5428 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5429 042c 1A46     		mov	r2, r3
 5430 042e 1346     		mov	r3, r2
 5431 0430 5B00     		lsls	r3, r3, #1
 5432 0432 1344     		add	r3, r3, r2
 5433 0434 1B01     		lsls	r3, r3, #4
 5434 0436 03F5D873 		add	r3, r3, #432
 5435 043a D7F8A024 		ldr	r2, [r7, #1184]
 5436 043e 1344     		add	r3, r3, r2
 5437 0440 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5438              		.loc 1 837 0
 5439 0442 07F55B73 		add	r3, r7, #876
 5440 0446 C3F8A020 		str	r2, [r3, #160]
 881:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5441              		.loc 1 881 0
 5442 044a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 5443 044e D7F8A014 		ldr	r1, [r7, #1184]
 5444 0452 1346     		mov	r3, r2
 5445 0454 DB00     		lsls	r3, r3, #3
 5446 0456 9B1A     		subs	r3, r3, r2
 5447 0458 1B01     		lsls	r3, r3, #4
 5448 045a 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 137


 5449 045c 03F58873 		add	r3, r3, #272
 5450 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5451 0462 1A46     		mov	r2, r3
 5452 0464 1346     		mov	r3, r2
 5453 0466 5B00     		lsls	r3, r3, #1
 5454 0468 1344     		add	r3, r3, r2
 5455 046a 1B01     		lsls	r3, r3, #4
 5456 046c 03F5D873 		add	r3, r3, #432
 5457 0470 D7F8A024 		ldr	r2, [r7, #1184]
 5458 0474 1344     		add	r3, r3, r2
 5459 0476 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5460              		.loc 1 837 0
 5461 0478 07F55B73 		add	r3, r7, #876
 5462 047c C3F8A420 		str	r2, [r3, #164]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 5463              		.loc 1 882 0
 5464 0480 D7F8A034 		ldr	r3, [r7, #1184]
 5465 0484 03F1A902 		add	r2, r3, #169
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5466              		.loc 1 837 0
 5467 0488 07F55B73 		add	r3, r7, #876
 5468 048c C3F8A820 		str	r2, [r3, #168]
 883:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 5469              		.loc 1 883 0
 5470 0490 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5471 0494 1346     		mov	r3, r2
 5472 0496 DB00     		lsls	r3, r3, #3
 5473 0498 9B1A     		subs	r3, r3, r2
 5474 049a 1B01     		lsls	r3, r3, #4
 5475 049c B033     		adds	r3, r3, #176
 5476 049e D7F8A024 		ldr	r2, [r7, #1184]
 5477 04a2 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5478              		.loc 1 837 0
 5479 04a4 07F55B73 		add	r3, r7, #876
 5480 04a8 C3F8AC20 		str	r2, [r3, #172]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 5481              		.loc 1 884 0
 5482 04ac 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5483 04b0 1346     		mov	r3, r2
 5484 04b2 DB00     		lsls	r3, r3, #3
 5485 04b4 9B1A     		subs	r3, r3, r2
 5486 04b6 1B01     		lsls	r3, r3, #4
 5487 04b8 B833     		adds	r3, r3, #184
 5488 04ba D7F8A024 		ldr	r2, [r7, #1184]
 5489 04be 1344     		add	r3, r3, r2
 5490 04c0 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5491              		.loc 1 837 0
 5492 04c2 07F55B73 		add	r3, r7, #876
 5493 04c6 C3F8B020 		str	r2, [r3, #176]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 5494              		.loc 1 885 0
 5495 04ca 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5496 04ce 1346     		mov	r3, r2
 5497 04d0 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 138


 5498 04d2 9B1A     		subs	r3, r3, r2
 5499 04d4 1B01     		lsls	r3, r3, #4
 5500 04d6 E033     		adds	r3, r3, #224
 5501 04d8 D7F8A024 		ldr	r2, [r7, #1184]
 5502 04dc 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5503              		.loc 1 837 0
 5504 04de 07F55B73 		add	r3, r7, #876
 5505 04e2 C3F8B420 		str	r2, [r3, #180]
 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 5506              		.loc 1 886 0
 5507 04e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5508 04ea 1346     		mov	r3, r2
 5509 04ec DB00     		lsls	r3, r3, #3
 5510 04ee 9B1A     		subs	r3, r3, r2
 5511 04f0 1B01     		lsls	r3, r3, #4
 5512 04f2 03F58473 		add	r3, r3, #264
 5513 04f6 D7F8A024 		ldr	r2, [r7, #1184]
 5514 04fa 1344     		add	r3, r3, r2
 5515 04fc 9A1D     		adds	r2, r3, #6
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5516              		.loc 1 837 0
 5517 04fe 07F55B73 		add	r3, r7, #876
 5518 0502 C3F8B820 		str	r2, [r3, #184]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 5519              		.loc 1 887 0
 5520 0506 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5521 050a 1346     		mov	r3, r2
 5522 050c DB00     		lsls	r3, r3, #3
 5523 050e 9B1A     		subs	r3, r3, r2
 5524 0510 1B01     		lsls	r3, r3, #4
 5525 0512 03F58473 		add	r3, r3, #264
 5526 0516 D7F8A024 		ldr	r2, [r7, #1184]
 5527 051a 1344     		add	r3, r3, r2
 5528 051c DA1D     		adds	r2, r3, #7
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5529              		.loc 1 837 0
 5530 051e 07F55B73 		add	r3, r7, #876
 5531 0522 C3F8BC20 		str	r2, [r3, #188]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 5532              		.loc 1 888 0
 5533 0526 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5534 052a D7F8A014 		ldr	r1, [r7, #1184]
 5535 052e 1346     		mov	r3, r2
 5536 0530 DB00     		lsls	r3, r3, #3
 5537 0532 9B1A     		subs	r3, r3, r2
 5538 0534 1B01     		lsls	r3, r3, #4
 5539 0536 0B44     		add	r3, r3, r1
 5540 0538 03F58873 		add	r3, r3, #272
 5541 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5542 053e 1A46     		mov	r2, r3
 5543 0540 1346     		mov	r3, r2
 5544 0542 5B00     		lsls	r3, r3, #1
 5545 0544 1344     		add	r3, r3, r2
 5546 0546 1B01     		lsls	r3, r3, #4
 5547 0548 03F5C873 		add	r3, r3, #400
 5548 054c D7F8A024 		ldr	r2, [r7, #1184]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 139


 5549 0550 1344     		add	r3, r3, r2
 5550 0552 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5551              		.loc 1 837 0
 5552 0554 07F55B73 		add	r3, r7, #876
 5553 0558 C3F8C020 		str	r2, [r3, #192]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 5554              		.loc 1 889 0
 5555 055c 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5556 0560 D7F8A014 		ldr	r1, [r7, #1184]
 5557 0564 1346     		mov	r3, r2
 5558 0566 DB00     		lsls	r3, r3, #3
 5559 0568 9B1A     		subs	r3, r3, r2
 5560 056a 1B01     		lsls	r3, r3, #4
 5561 056c 0B44     		add	r3, r3, r1
 5562 056e 03F58873 		add	r3, r3, #272
 5563 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5564 0574 1A46     		mov	r2, r3
 5565 0576 1346     		mov	r3, r2
 5566 0578 5B00     		lsls	r3, r3, #1
 5567 057a 1344     		add	r3, r3, r2
 5568 057c 1B01     		lsls	r3, r3, #4
 5569 057e 03F5CC73 		add	r3, r3, #408
 5570 0582 D7F8A024 		ldr	r2, [r7, #1184]
 5571 0586 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5572              		.loc 1 837 0
 5573 0588 07F55B73 		add	r3, r7, #876
 5574 058c C3F8C420 		str	r2, [r3, #196]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 5575              		.loc 1 890 0
 5576 0590 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5577 0594 D7F8A014 		ldr	r1, [r7, #1184]
 5578 0598 1346     		mov	r3, r2
 5579 059a DB00     		lsls	r3, r3, #3
 5580 059c 9B1A     		subs	r3, r3, r2
 5581 059e 1B01     		lsls	r3, r3, #4
 5582 05a0 0B44     		add	r3, r3, r1
 5583 05a2 03F58873 		add	r3, r3, #272
 5584 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5585 05a8 1A46     		mov	r2, r3
 5586 05aa 1346     		mov	r3, r2
 5587 05ac 5B00     		lsls	r3, r3, #1
 5588 05ae 1344     		add	r3, r3, r2
 5589 05b0 1B01     		lsls	r3, r3, #4
 5590 05b2 03F5D073 		add	r3, r3, #416
 5591 05b6 D7F8A024 		ldr	r2, [r7, #1184]
 5592 05ba 1344     		add	r3, r3, r2
 5593 05bc 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5594              		.loc 1 837 0
 5595 05be 07F55B73 		add	r3, r7, #876
 5596 05c2 C3F8C820 		str	r2, [r3, #200]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 5597              		.loc 1 891 0
 5598 05c6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5599 05ca 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 140


 5600 05cc DB00     		lsls	r3, r3, #3
 5601 05ce 9B1A     		subs	r3, r3, r2
 5602 05d0 1B01     		lsls	r3, r3, #4
 5603 05d2 E033     		adds	r3, r3, #224
 5604 05d4 D7F8A024 		ldr	r2, [r7, #1184]
 5605 05d8 1344     		add	r3, r3, r2
 5606 05da DA1C     		adds	r2, r3, #3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5607              		.loc 1 837 0
 5608 05dc 07F55B73 		add	r3, r7, #876
 5609 05e0 C3F8CC20 		str	r2, [r3, #204]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 5610              		.loc 1 892 0
 5611 05e4 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5612 05e8 1346     		mov	r3, r2
 5613 05ea DB00     		lsls	r3, r3, #3
 5614 05ec 9B1A     		subs	r3, r3, r2
 5615 05ee 1B01     		lsls	r3, r3, #4
 5616 05f0 E033     		adds	r3, r3, #224
 5617 05f2 D7F8A024 		ldr	r2, [r7, #1184]
 5618 05f6 1344     		add	r3, r3, r2
 5619 05f8 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5620              		.loc 1 837 0
 5621 05fa 07F55B73 		add	r3, r7, #876
 5622 05fe C3F8D020 		str	r2, [r3, #208]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 5623              		.loc 1 893 0
 5624 0602 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5625 0606 1346     		mov	r3, r2
 5626 0608 DB00     		lsls	r3, r3, #3
 5627 060a 9B1A     		subs	r3, r3, r2
 5628 060c 1B01     		lsls	r3, r3, #4
 5629 060e E833     		adds	r3, r3, #232
 5630 0610 D7F8A024 		ldr	r2, [r7, #1184]
 5631 0614 1344     		add	r3, r3, r2
 5632 0616 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5633              		.loc 1 837 0
 5634 0618 07F55B73 		add	r3, r7, #876
 5635 061c C3F8D420 		str	r2, [r3, #212]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 5636              		.loc 1 894 0
 5637 0620 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5638 0624 1346     		mov	r3, r2
 5639 0626 DB00     		lsls	r3, r3, #3
 5640 0628 9B1A     		subs	r3, r3, r2
 5641 062a 1B01     		lsls	r3, r3, #4
 5642 062c 03F58473 		add	r3, r3, #264
 5643 0630 D7F8A024 		ldr	r2, [r7, #1184]
 5644 0634 1344     		add	r3, r3, r2
 5645 0636 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5646              		.loc 1 837 0
 5647 0638 07F55B73 		add	r3, r7, #876
 5648 063c C3F8D820 		str	r2, [r3, #216]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 141


 5649              		.loc 1 895 0
 5650 0640 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5651 0644 D7F8A014 		ldr	r1, [r7, #1184]
 5652 0648 1346     		mov	r3, r2
 5653 064a DB00     		lsls	r3, r3, #3
 5654 064c 9B1A     		subs	r3, r3, r2
 5655 064e 1B01     		lsls	r3, r3, #4
 5656 0650 0B44     		add	r3, r3, r1
 5657 0652 03F58873 		add	r3, r3, #272
 5658 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5659 0658 1A46     		mov	r2, r3
 5660 065a 1346     		mov	r3, r2
 5661 065c 5B00     		lsls	r3, r3, #1
 5662 065e 1344     		add	r3, r3, r2
 5663 0660 1B01     		lsls	r3, r3, #4
 5664 0662 03F5D873 		add	r3, r3, #432
 5665 0666 D7F8A024 		ldr	r2, [r7, #1184]
 5666 066a 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5667              		.loc 1 837 0
 5668 066c 07F55B73 		add	r3, r7, #876
 5669 0670 C3F8DC20 		str	r2, [r3, #220]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 5670              		.loc 1 896 0
 5671 0674 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5672 0678 D7F8A014 		ldr	r1, [r7, #1184]
 5673 067c 1346     		mov	r3, r2
 5674 067e DB00     		lsls	r3, r3, #3
 5675 0680 9B1A     		subs	r3, r3, r2
 5676 0682 1B01     		lsls	r3, r3, #4
 5677 0684 0B44     		add	r3, r3, r1
 5678 0686 03F58873 		add	r3, r3, #272
 5679 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5680 068c 1A46     		mov	r2, r3
 5681 068e 1346     		mov	r3, r2
 5682 0690 5B00     		lsls	r3, r3, #1
 5683 0692 1344     		add	r3, r3, r2
 5684 0694 1B01     		lsls	r3, r3, #4
 5685 0696 03F5D873 		add	r3, r3, #432
 5686 069a D7F8A024 		ldr	r2, [r7, #1184]
 5687 069e 1344     		add	r3, r3, r2
 5688 06a0 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5689              		.loc 1 837 0
 5690 06a2 07F55B73 		add	r3, r7, #876
 5691 06a6 C3F8E020 		str	r2, [r3, #224]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 5692              		.loc 1 897 0
 5693 06aa 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5694 06ae 1346     		mov	r3, r2
 5695 06b0 DB00     		lsls	r3, r3, #3
 5696 06b2 9B1A     		subs	r3, r3, r2
 5697 06b4 1B01     		lsls	r3, r3, #4
 5698 06b6 E033     		adds	r3, r3, #224
 5699 06b8 D7F8A024 		ldr	r2, [r7, #1184]
 5700 06bc 1344     		add	r3, r3, r2
 5701 06be 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 142


 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5702              		.loc 1 837 0
 5703 06c0 07F55B73 		add	r3, r7, #876
 5704 06c4 C3F8E420 		str	r2, [r3, #228]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 5705              		.loc 1 898 0
 5706 06c8 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5707 06cc 1346     		mov	r3, r2
 5708 06ce DB00     		lsls	r3, r3, #3
 5709 06d0 9B1A     		subs	r3, r3, r2
 5710 06d2 1B01     		lsls	r3, r3, #4
 5711 06d4 F033     		adds	r3, r3, #240
 5712 06d6 D7F8A024 		ldr	r2, [r7, #1184]
 5713 06da 1344     		add	r3, r3, r2
 5714 06dc 1A1D     		adds	r2, r3, #4
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5715              		.loc 1 837 0
 5716 06de 07F55B73 		add	r3, r7, #876
 5717 06e2 C3F8E820 		str	r2, [r3, #232]
 899:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 5718              		.loc 1 899 0
 5719 06e6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5720 06ea 1346     		mov	r3, r2
 5721 06ec DB00     		lsls	r3, r3, #3
 5722 06ee 9B1A     		subs	r3, r3, r2
 5723 06f0 1B01     		lsls	r3, r3, #4
 5724 06f2 03F58873 		add	r3, r3, #272
 5725 06f6 D7F8A024 		ldr	r2, [r7, #1184]
 5726 06fa 1A44     		add	r2, r2, r3
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5727              		.loc 1 837 0
 5728 06fc 07F55B73 		add	r3, r7, #876
 5729 0700 C3F8EC20 		str	r2, [r3, #236]
 900:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 5730              		.loc 1 900 0
 5731 0704 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5732 0708 1346     		mov	r3, r2
 5733 070a DB00     		lsls	r3, r3, #3
 5734 070c 9B1A     		subs	r3, r3, r2
 5735 070e 1B01     		lsls	r3, r3, #4
 5736 0710 E033     		adds	r3, r3, #224
 5737 0712 D7F8A024 		ldr	r2, [r7, #1184]
 5738 0716 1344     		add	r3, r3, r2
 5739 0718 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5740              		.loc 1 837 0
 5741 071a 07F55B73 		add	r3, r7, #876
 5742 071e C3F8F020 		str	r2, [r3, #240]
 901:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 5743              		.loc 1 901 0
 5744 0722 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5745 0726 1346     		mov	r3, r2
 5746 0728 DB00     		lsls	r3, r3, #3
 5747 072a 9B1A     		subs	r3, r3, r2
 5748 072c 1B01     		lsls	r3, r3, #4
 5749 072e 03F58873 		add	r3, r3, #272
 5750 0732 D7F8A024 		ldr	r2, [r7, #1184]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 143


 5751 0736 1344     		add	r3, r3, r2
 5752 0738 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5753              		.loc 1 837 0
 5754 073a 07F55B73 		add	r3, r7, #876
 5755 073e C3F8F420 		str	r2, [r3, #244]
 902:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 5756              		.loc 1 902 0
 5757 0742 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5758 0746 1346     		mov	r3, r2
 5759 0748 DB00     		lsls	r3, r3, #3
 5760 074a 9B1A     		subs	r3, r3, r2
 5761 074c 1B01     		lsls	r3, r3, #4
 5762 074e 03F58873 		add	r3, r3, #272
 5763 0752 D7F8A024 		ldr	r2, [r7, #1184]
 5764 0756 1344     		add	r3, r3, r2
 5765 0758 9A1C     		adds	r2, r3, #2
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5766              		.loc 1 837 0
 5767 075a 07F55B73 		add	r3, r7, #876
 5768 075e C3F8F820 		str	r2, [r3, #248]
 903:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5769              		.loc 1 903 0
 5770 0762 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5771 0766 D7F8A014 		ldr	r1, [r7, #1184]
 5772 076a 1346     		mov	r3, r2
 5773 076c DB00     		lsls	r3, r3, #3
 5774 076e 9B1A     		subs	r3, r3, r2
 5775 0770 1B01     		lsls	r3, r3, #4
 5776 0772 0B44     		add	r3, r3, r1
 5777 0774 03F58873 		add	r3, r3, #272
 5778 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5779 077a 1A46     		mov	r2, r3
 5780 077c 1346     		mov	r3, r2
 5781 077e 5B00     		lsls	r3, r3, #1
 5782 0780 1344     		add	r3, r3, r2
 5783 0782 1B01     		lsls	r3, r3, #4
 5784 0784 03F5D873 		add	r3, r3, #432
 5785 0788 D7F8A024 		ldr	r2, [r7, #1184]
 5786 078c 1344     		add	r3, r3, r2
 5787 078e 5A1C     		adds	r2, r3, #1
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5788              		.loc 1 837 0
 5789 0790 07F55B73 		add	r3, r7, #876
 5790 0794 C3F8FC20 		str	r2, [r3, #252]
 904:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 5791              		.loc 1 904 0
 5792 0798 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 5793 079c D7F8A014 		ldr	r1, [r7, #1184]
 5794 07a0 1346     		mov	r3, r2
 5795 07a2 DB00     		lsls	r3, r3, #3
 5796 07a4 9B1A     		subs	r3, r3, r2
 5797 07a6 1B01     		lsls	r3, r3, #4
 5798 07a8 0B44     		add	r3, r3, r1
 5799 07aa 03F58873 		add	r3, r3, #272
 5800 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5801 07b0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 144


 5802 07b2 1346     		mov	r3, r2
 5803 07b4 5B00     		lsls	r3, r3, #1
 5804 07b6 1344     		add	r3, r3, r2
 5805 07b8 1B01     		lsls	r3, r3, #4
 5806 07ba 03F5D873 		add	r3, r3, #432
 5807 07be D7F8A024 		ldr	r2, [r7, #1184]
 5808 07c2 1344     		add	r3, r3, r2
 5809 07c4 5A1D     		adds	r2, r3, #5
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5810              		.loc 1 837 0
 5811 07c6 07F55B73 		add	r3, r7, #876
 5812 07ca C3F80021 		str	r2, [r3, #256]
 905:..\src/command_processing.c ****         
 906:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 5813              		.loc 1 906 0
 5814 07ce D7F8A034 		ldr	r3, [r7, #1184]
 5815 07d2 03F5C872 		add	r2, r3, #400
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5816              		.loc 1 837 0
 5817 07d6 07F55B73 		add	r3, r7, #876
 5818 07da C3F80421 		str	r2, [r3, #260]
 907:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 5819              		.loc 1 907 0
 5820 07de D7F8A034 		ldr	r3, [r7, #1184]
 5821 07e2 03F5E072 		add	r2, r3, #448
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5822              		.loc 1 837 0
 5823 07e6 07F55B73 		add	r3, r7, #876
 5824 07ea C3F80821 		str	r2, [r3, #264]
 908:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 5825              		.loc 1 908 0
 5826 07ee D7F8A034 		ldr	r3, [r7, #1184]
 5827 07f2 03F22722 		addw	r2, r3, #551
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5828              		.loc 1 837 0
 5829 07f6 07F55B73 		add	r3, r7, #876
 5830 07fa C3F80C21 		str	r2, [r3, #268]
 909:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 5831              		.loc 1 909 0
 5832 07fe D7F8A034 		ldr	r3, [r7, #1184]
 5833 0802 03F50A72 		add	r2, r3, #552
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5834              		.loc 1 837 0
 5835 0806 07F55B73 		add	r3, r7, #876
 5836 080a C3F81021 		str	r2, [r3, #272]
 910:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 5837              		.loc 1 910 0
 5838 080e D7F8A034 		ldr	r3, [r7, #1184]
 5839 0812 03F22E22 		addw	r2, r3, #558
 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5840              		.loc 1 837 0
 5841 0816 07F55B73 		add	r3, r7, #876
 5842 081a C3F81421 		str	r2, [r3, #276]
 911:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type)
 5843              		.loc 1 911 0
 5844 081e D7F8A034 		ldr	r3, [r7, #1184]
 5845 0822 03F1AC02 		add	r2, r3, #172
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 145


 837:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5846              		.loc 1 837 0
 5847 0826 07F55B73 		add	r3, r7, #876
 5848 082a C3F81821 		str	r2, [r3, #280]
 912:..\src/command_processing.c ****     };
 913:..\src/command_processing.c ****     
 914:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 5849              		.loc 1 914 0
 5850 082e 07F54973 		add	r3, r7, #804
 5851 0832 F34A     		ldr	r2, .L336
 5852 0834 1846     		mov	r0, r3
 5853 0836 1146     		mov	r1, r2
 5854 0838 4723     		movs	r3, #71
 5855 083a 1A46     		mov	r2, r3
 5856 083c FFF7FEFF 		bl	memcpy
 915:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 916:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 917:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 918:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 919:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 920:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 921:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 922:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 923:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 924:..\src/command_processing.c ****         
 925:..\src/command_processing.c ****         // GENERIC PARAMS
 926:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 927:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 928:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 929:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 930:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 931:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 932:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 933:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 934:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG      
 935:..\src/command_processing.c ****     };
 936:..\src/command_processing.c **** 
 937:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 5857              		.loc 1 937 0
 5858 0840 07F53773 		add	r3, r7, #732
 5859 0844 0122     		movs	r2, #1
 5860 0846 1A70     		strb	r2, [r3]
 5861 0848 07F53773 		add	r3, r7, #732
 5862 084c 0322     		movs	r2, #3
 5863 084e 5A70     		strb	r2, [r3, #1]
 5864 0850 07F53773 		add	r3, r7, #732
 5865 0854 0322     		movs	r2, #3
 5866 0856 9A70     		strb	r2, [r3, #2]
 5867 0858 07F53773 		add	r3, r7, #732
 5868 085c 0122     		movs	r2, #1
 5869 085e DA70     		strb	r2, [r3, #3]
 5870 0860 07F53773 		add	r3, r7, #732
 5871 0864 0122     		movs	r2, #1
 5872 0866 1A71     		strb	r2, [r3, #4]
 5873 0868 07F53773 		add	r3, r7, #732
 5874 086c 0122     		movs	r2, #1
 5875 086e 5A71     		strb	r2, [r3, #5]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 146


 5876 0870 07F53773 		add	r3, r7, #732
 5877 0874 0322     		movs	r2, #3
 5878 0876 9A71     		strb	r2, [r3, #6]
 5879 0878 07F53773 		add	r3, r7, #732
 5880 087c 0322     		movs	r2, #3
 5881 087e DA71     		strb	r2, [r3, #7]
 5882 0880 07F53773 		add	r3, r7, #732
 5883 0884 0322     		movs	r2, #3
 5884 0886 1A72     		strb	r2, [r3, #8]
 5885 0888 07F53773 		add	r3, r7, #732
 5886 088c 0122     		movs	r2, #1
 5887 088e 5A72     		strb	r2, [r3, #9]
 5888 0890 07F53773 		add	r3, r7, #732
 5889 0894 0222     		movs	r2, #2
 5890 0896 9A72     		strb	r2, [r3, #10]
 5891 0898 07F53773 		add	r3, r7, #732
 5892 089c 0222     		movs	r2, #2
 5893 089e DA72     		strb	r2, [r3, #11]
 5894 08a0 07F53773 		add	r3, r7, #732
 5895 08a4 0122     		movs	r2, #1
 5896 08a6 1A73     		strb	r2, [r3, #12]
 5897 08a8 07F53773 		add	r3, r7, #732
 5898 08ac 0222     		movs	r2, #2
 5899 08ae 5A73     		strb	r2, [r3, #13]
 5900 08b0 07F53773 		add	r3, r7, #732
 5901 08b4 0122     		movs	r2, #1
 5902 08b6 9A73     		strb	r2, [r3, #14]
 5903 08b8 07F53773 		add	r3, r7, #732
 5904 08bc 0222     		movs	r2, #2
 5905 08be DA73     		strb	r2, [r3, #15]
 5906 08c0 07F53773 		add	r3, r7, #732
 5907 08c4 0122     		movs	r2, #1
 5908 08c6 1A74     		strb	r2, [r3, #16]
 5909 08c8 07F53773 		add	r3, r7, #732
 5910 08cc 0122     		movs	r2, #1
 5911 08ce 5A74     		strb	r2, [r3, #17]
 5912 08d0 07F53773 		add	r3, r7, #732
 5913 08d4 0122     		movs	r2, #1
 5914 08d6 9A74     		strb	r2, [r3, #18]
 5915 08d8 07F53773 		add	r3, r7, #732
 5916 08dc 0122     		movs	r2, #1
 5917 08de DA74     		strb	r2, [r3, #19]
 5918 08e0 07F53773 		add	r3, r7, #732
 5919 08e4 0622     		movs	r2, #6
 5920 08e6 1A75     		strb	r2, [r3, #20]
 5921 08e8 07F53773 		add	r3, r7, #732
 5922 08ec 0322     		movs	r2, #3
 5923 08ee 5A75     		strb	r2, [r3, #21]
 5924 08f0 07F53773 		add	r3, r7, #732
 5925 08f4 0122     		movs	r2, #1
 5926 08f6 9A75     		strb	r2, [r3, #22]
 5927 08f8 07F53773 		add	r3, r7, #732
 5928 08fc 0122     		movs	r2, #1
 5929 08fe DA75     		strb	r2, [r3, #23]
 5930 0900 07F53773 		add	r3, r7, #732
 5931 0904 0122     		movs	r2, #1
 5932 0906 1A76     		strb	r2, [r3, #24]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 147


 5933 0908 07F53773 		add	r3, r7, #732
 5934 090c 0122     		movs	r2, #1
 5935 090e 5A76     		strb	r2, [r3, #25]
 5936 0910 07F53773 		add	r3, r7, #732
 5937 0914 0122     		movs	r2, #1
 5938 0916 9A76     		strb	r2, [r3, #26]
 5939 0918 07F53773 		add	r3, r7, #732
 5940 091c 0122     		movs	r2, #1
 5941 091e DA76     		strb	r2, [r3, #27]
 5942 0920 07F53773 		add	r3, r7, #732
 5943 0924 0122     		movs	r2, #1
 5944 0926 1A77     		strb	r2, [r3, #28]
 5945 0928 07F53773 		add	r3, r7, #732
 5946 092c 0122     		movs	r2, #1
 5947 092e 5A77     		strb	r2, [r3, #29]
 5948 0930 07F53773 		add	r3, r7, #732
 5949 0934 0122     		movs	r2, #1
 5950 0936 9A77     		strb	r2, [r3, #30]
 5951 0938 07F53773 		add	r3, r7, #732
 5952 093c 0622     		movs	r2, #6
 5953 093e DA77     		strb	r2, [r3, #31]
 5954 0940 07F53773 		add	r3, r7, #732
 5955 0944 0122     		movs	r2, #1
 5956 0946 83F82020 		strb	r2, [r3, #32]
 5957 094a 07F53773 		add	r3, r7, #732
 5958 094e 0522     		movs	r2, #5
 5959 0950 83F82120 		strb	r2, [r3, #33]
 5960 0954 07F53773 		add	r3, r7, #732
 5961 0958 0122     		movs	r2, #1
 5962 095a 83F82220 		strb	r2, [r3, #34]
 5963 095e 07F53773 		add	r3, r7, #732
 5964 0962 0622     		movs	r2, #6
 5965 0964 83F82320 		strb	r2, [r3, #35]
 5966 0968 07F53773 		add	r3, r7, #732
 5967 096c 0122     		movs	r2, #1
 5968 096e 83F82420 		strb	r2, [r3, #36]
 5969 0972 07F53773 		add	r3, r7, #732
 5970 0976 0122     		movs	r2, #1
 5971 0978 83F82520 		strb	r2, [r3, #37]
 5972 097c 07F53773 		add	r3, r7, #732
 5973 0980 0122     		movs	r2, #1
 5974 0982 83F82620 		strb	r2, [r3, #38]
 5975 0986 07F53773 		add	r3, r7, #732
 5976 098a 0122     		movs	r2, #1
 5977 098c 83F82720 		strb	r2, [r3, #39]
 5978 0990 07F53773 		add	r3, r7, #732
 5979 0994 0322     		movs	r2, #3
 5980 0996 83F82820 		strb	r2, [r3, #40]
 5981 099a 07F53773 		add	r3, r7, #732
 5982 099e 0322     		movs	r2, #3
 5983 09a0 83F82920 		strb	r2, [r3, #41]
 5984 09a4 07F53773 		add	r3, r7, #732
 5985 09a8 0122     		movs	r2, #1
 5986 09aa 83F82A20 		strb	r2, [r3, #42]
 5987 09ae 07F53773 		add	r3, r7, #732
 5988 09b2 0322     		movs	r2, #3
 5989 09b4 83F82B20 		strb	r2, [r3, #43]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 148


 5990 09b8 07F53773 		add	r3, r7, #732
 5991 09bc 0322     		movs	r2, #3
 5992 09be 83F82C20 		strb	r2, [r3, #44]
 5993 09c2 07F53773 		add	r3, r7, #732
 5994 09c6 0122     		movs	r2, #1
 5995 09c8 83F82D20 		strb	r2, [r3, #45]
 5996 09cc 07F53773 		add	r3, r7, #732
 5997 09d0 0122     		movs	r2, #1
 5998 09d2 83F82E20 		strb	r2, [r3, #46]
 5999 09d6 07F53773 		add	r3, r7, #732
 6000 09da 0122     		movs	r2, #1
 6001 09dc 83F82F20 		strb	r2, [r3, #47]
 6002 09e0 07F53773 		add	r3, r7, #732
 6003 09e4 0322     		movs	r2, #3
 6004 09e6 83F83020 		strb	r2, [r3, #48]
 6005 09ea 07F53773 		add	r3, r7, #732
 6006 09ee 0322     		movs	r2, #3
 6007 09f0 83F83120 		strb	r2, [r3, #49]
 6008 09f4 07F53773 		add	r3, r7, #732
 6009 09f8 0322     		movs	r2, #3
 6010 09fa 83F83220 		strb	r2, [r3, #50]
 6011 09fe 07F53773 		add	r3, r7, #732
 6012 0a02 0122     		movs	r2, #1
 6013 0a04 83F83320 		strb	r2, [r3, #51]
 6014 0a08 07F53773 		add	r3, r7, #732
 6015 0a0c 0222     		movs	r2, #2
 6016 0a0e 83F83420 		strb	r2, [r3, #52]
 6017 0a12 07F53773 		add	r3, r7, #732
 6018 0a16 0222     		movs	r2, #2
 6019 0a18 83F83520 		strb	r2, [r3, #53]
 6020 0a1c 07F53773 		add	r3, r7, #732
 6021 0a20 0122     		movs	r2, #1
 6022 0a22 83F83620 		strb	r2, [r3, #54]
 6023 0a26 07F53773 		add	r3, r7, #732
 6024 0a2a 0122     		movs	r2, #1
 6025 0a2c 83F83720 		strb	r2, [r3, #55]
 6026 0a30 07F53773 		add	r3, r7, #732
 6027 0a34 0122     		movs	r2, #1
 6028 0a36 83F83820 		strb	r2, [r3, #56]
 6029 0a3a 07F53773 		add	r3, r7, #732
 6030 0a3e 0122     		movs	r2, #1
 6031 0a40 83F83920 		strb	r2, [r3, #57]
 6032 0a44 07F53773 		add	r3, r7, #732
 6033 0a48 0622     		movs	r2, #6
 6034 0a4a 83F83A20 		strb	r2, [r3, #58]
 6035 0a4e 07F53773 		add	r3, r7, #732
 6036 0a52 0122     		movs	r2, #1
 6037 0a54 83F83B20 		strb	r2, [r3, #59]
 6038 0a58 07F53773 		add	r3, r7, #732
 6039 0a5c 0122     		movs	r2, #1
 6040 0a5e 83F83C20 		strb	r2, [r3, #60]
 6041 0a62 07F53773 		add	r3, r7, #732
 6042 0a66 0122     		movs	r2, #1
 6043 0a68 83F83D20 		strb	r2, [r3, #61]
 6044 0a6c 07F53773 		add	r3, r7, #732
 6045 0a70 0122     		movs	r2, #1
 6046 0a72 83F83E20 		strb	r2, [r3, #62]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 149


 6047 0a76 07F53773 		add	r3, r7, #732
 6048 0a7a 0322     		movs	r2, #3
 6049 0a7c 83F83F20 		strb	r2, [r3, #63]
 6050 0a80 07F53773 		add	r3, r7, #732
 6051 0a84 0322     		movs	r2, #3
 6052 0a86 83F84020 		strb	r2, [r3, #64]
 938:..\src/command_processing.c ****         1, 3, 3, 1, 
 939:..\src/command_processing.c ****         1, 1, 3, 3,
 940:..\src/command_processing.c ****         3, 1, 2, 2, 
 941:..\src/command_processing.c ****         1, 2, 1, 2,
 942:..\src/command_processing.c ****         1, 1, 1, 1, 
 943:..\src/command_processing.c ****         6, 3, 1, 1,
 944:..\src/command_processing.c ****         1, 1, 1, 1, 
 945:..\src/command_processing.c ****         1, 1, 1, 6,
 946:..\src/command_processing.c ****         1, 5, 1, 6,
 947:..\src/command_processing.c ****         
 948:..\src/command_processing.c ****         // GENERIC PARAMS
 949:..\src/command_processing.c ****         1, 1, 1, 1,
 950:..\src/command_processing.c ****         3, 3, 1, 3,
 951:..\src/command_processing.c ****         3, 1, 1, 1,
 952:..\src/command_processing.c ****         3, 3, 3, 1,
 953:..\src/command_processing.c ****         2, 2, 1, 1,
 954:..\src/command_processing.c ****         1, 1, 6, 1,
 955:..\src/command_processing.c ****         1, 1, 1, 3, 
 956:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6053              		.loc 1 956 0
 6054 0a8a 5E4B     		ldr	r3, .L336+4
 6055 0a8c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 937:..\src/command_processing.c ****         1, 3, 3, 1, 
 6056              		.loc 1 937 0
 6057 0a8e 07F53773 		add	r3, r7, #732
 6058 0a92 83F84120 		strb	r2, [r3, #65]
 6059              		.loc 1 956 0
 6060 0a96 5B4B     		ldr	r3, .L336+4
 6061 0a98 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 937:..\src/command_processing.c ****         1, 3, 3, 1, 
 6062              		.loc 1 937 0
 6063 0a9a 07F53773 		add	r3, r7, #732
 6064 0a9e 83F84220 		strb	r2, [r3, #66]
 6065 0aa2 07F53773 		add	r3, r7, #732
 6066 0aa6 0122     		movs	r2, #1
 6067 0aa8 83F84320 		strb	r2, [r3, #67]
 6068 0aac 07F53773 		add	r3, r7, #732
 6069 0ab0 0622     		movs	r2, #6
 6070 0ab2 83F84420 		strb	r2, [r3, #68]
 6071 0ab6 07F53773 		add	r3, r7, #732
 6072 0aba 0622     		movs	r2, #6
 6073 0abc 83F84520 		strb	r2, [r3, #69]
 6074 0ac0 07F53773 		add	r3, r7, #732
 6075 0ac4 0122     		movs	r2, #1
 6076 0ac6 83F84620 		strb	r2, [r3, #70]
 957:..\src/command_processing.c ****         6, 6, 1
 958:..\src/command_processing.c ****     };
 959:..\src/command_processing.c ****     
 960:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6077              		.loc 1 960 0
 6078 0aca 07F52573 		add	r3, r7, #660
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 150


 6079 0ace 0022     		movs	r2, #0
 6080 0ad0 1A70     		strb	r2, [r3]
 6081 0ad2 97F89D34 		ldrb	r3, [r7, #1181]
 6082 0ad6 0A33     		adds	r3, r3, #10
 6083 0ad8 DAB2     		uxtb	r2, r3
 6084 0ada 07F52573 		add	r3, r7, #660
 6085 0ade 5A70     		strb	r2, [r3, #1]
 6086 0ae0 97F89D34 		ldrb	r3, [r7, #1181]
 6087 0ae4 0A33     		adds	r3, r3, #10
 6088 0ae6 DAB2     		uxtb	r2, r3
 6089 0ae8 07F52573 		add	r3, r7, #660
 6090 0aec 9A70     		strb	r2, [r3, #2]
 6091 0aee 97F89D34 		ldrb	r3, [r7, #1181]
 6092 0af2 0A33     		adds	r3, r3, #10
 6093 0af4 DAB2     		uxtb	r2, r3
 6094 0af6 07F52573 		add	r3, r7, #660
 6095 0afa DA70     		strb	r2, [r3, #3]
 6096 0afc 97F89D34 		ldrb	r3, [r7, #1181]
 6097 0b00 0A33     		adds	r3, r3, #10
 6098 0b02 DAB2     		uxtb	r2, r3
 6099 0b04 07F52573 		add	r3, r7, #660
 6100 0b08 1A71     		strb	r2, [r3, #4]
 6101 0b0a 97F89D34 		ldrb	r3, [r7, #1181]
 6102 0b0e 0A33     		adds	r3, r3, #10
 6103 0b10 DAB2     		uxtb	r2, r3
 6104 0b12 07F52573 		add	r3, r7, #660
 6105 0b16 5A71     		strb	r2, [r3, #5]
 961:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 962:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6106              		.loc 1 962 0
 6107 0b18 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6108 0b1c D7F8A014 		ldr	r1, [r7, #1184]
 6109 0b20 1346     		mov	r3, r2
 6110 0b22 DB00     		lsls	r3, r3, #3
 6111 0b24 9B1A     		subs	r3, r3, r2
 6112 0b26 1B01     		lsls	r3, r3, #4
 6113 0b28 0B44     		add	r3, r3, r1
 6114 0b2a 03F58873 		add	r3, r3, #272
 6115 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6116              		.loc 1 960 0
 6117 0b30 1433     		adds	r3, r3, #20
 6118 0b32 DAB2     		uxtb	r2, r3
 6119 0b34 07F52573 		add	r3, r7, #660
 6120 0b38 9A71     		strb	r2, [r3, #6]
 6121              		.loc 1 962 0
 6122 0b3a 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6123 0b3e D7F8A014 		ldr	r1, [r7, #1184]
 6124 0b42 1346     		mov	r3, r2
 6125 0b44 DB00     		lsls	r3, r3, #3
 6126 0b46 9B1A     		subs	r3, r3, r2
 6127 0b48 1B01     		lsls	r3, r3, #4
 6128 0b4a 0B44     		add	r3, r3, r1
 6129 0b4c 03F58873 		add	r3, r3, #272
 6130 0b50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6131              		.loc 1 960 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 151


 6132 0b52 1433     		adds	r3, r3, #20
 6133 0b54 DAB2     		uxtb	r2, r3
 6134 0b56 07F52573 		add	r3, r7, #660
 6135 0b5a DA71     		strb	r2, [r3, #7]
 963:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6136              		.loc 1 963 0
 6137 0b5c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6138 0b60 D7F8A014 		ldr	r1, [r7, #1184]
 6139 0b64 1346     		mov	r3, r2
 6140 0b66 DB00     		lsls	r3, r3, #3
 6141 0b68 9B1A     		subs	r3, r3, r2
 6142 0b6a 1B01     		lsls	r3, r3, #4
 6143 0b6c 0B44     		add	r3, r3, r1
 6144 0b6e 03F58873 		add	r3, r3, #272
 6145 0b72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6146              		.loc 1 960 0
 6147 0b74 1433     		adds	r3, r3, #20
 6148 0b76 DAB2     		uxtb	r2, r3
 6149 0b78 07F52573 		add	r3, r7, #660
 6150 0b7c 1A72     		strb	r2, [r3, #8]
 6151 0b7e 97F89D34 		ldrb	r3, [r7, #1181]
 6152 0b82 0A33     		adds	r3, r3, #10
 6153 0b84 DAB2     		uxtb	r2, r3
 6154 0b86 07F52573 		add	r3, r7, #660
 6155 0b8a 5A72     		strb	r2, [r3, #9]
 6156 0b8c 97F89D34 		ldrb	r3, [r7, #1181]
 6157 0b90 0A33     		adds	r3, r3, #10
 6158 0b92 DAB2     		uxtb	r2, r3
 6159 0b94 07F52573 		add	r3, r7, #660
 6160 0b98 9A72     		strb	r2, [r3, #10]
 6161 0b9a 97F89D34 		ldrb	r3, [r7, #1181]
 6162 0b9e 0A33     		adds	r3, r3, #10
 6163 0ba0 DAB2     		uxtb	r2, r3
 6164 0ba2 07F52573 		add	r3, r7, #660
 6165 0ba6 DA72     		strb	r2, [r3, #11]
 6166 0ba8 97F89D34 		ldrb	r3, [r7, #1181]
 6167 0bac 0A33     		adds	r3, r3, #10
 6168 0bae DAB2     		uxtb	r2, r3
 6169 0bb0 07F52573 		add	r3, r7, #660
 6170 0bb4 1A73     		strb	r2, [r3, #12]
 6171 0bb6 07F52573 		add	r3, r7, #660
 6172 0bba 1E22     		movs	r2, #30
 6173 0bbc 5A73     		strb	r2, [r3, #13]
 6174 0bbe 07F52573 		add	r3, r7, #660
 6175 0bc2 1E22     		movs	r2, #30
 6176 0bc4 9A73     		strb	r2, [r3, #14]
 6177 0bc6 07F52573 		add	r3, r7, #660
 6178 0bca 1E22     		movs	r2, #30
 6179 0bcc DA73     		strb	r2, [r3, #15]
 6180 0bce 07F52573 		add	r3, r7, #660
 6181 0bd2 1E22     		movs	r2, #30
 6182 0bd4 1A74     		strb	r2, [r3, #16]
 964:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
 965:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6183              		.loc 1 965 0
 6184 0bd6 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 152


 6185 0bda D7F8A014 		ldr	r1, [r7, #1184]
 6186 0bde 1346     		mov	r3, r2
 6187 0be0 DB00     		lsls	r3, r3, #3
 6188 0be2 9B1A     		subs	r3, r3, r2
 6189 0be4 1B01     		lsls	r3, r3, #4
 6190 0be6 0B44     		add	r3, r3, r1
 6191 0be8 03F58873 		add	r3, r3, #272
 6192 0bec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6193              		.loc 1 960 0
 6194 0bee 1433     		adds	r3, r3, #20
 6195 0bf0 DAB2     		uxtb	r2, r3
 6196 0bf2 07F52573 		add	r3, r7, #660
 6197 0bf6 5A74     		strb	r2, [r3, #17]
 6198              		.loc 1 965 0
 6199 0bf8 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6200 0bfc 04E0     		b	.L337
 6201              	.L338:
 6202 0bfe 00BF     		.align	2
 6203              	.L336:
 6204 0c00 60040000 		.word	.LC0
 6205 0c04 00000000 		.word	N_Encoder_Line_Connected
 6206              	.L337:
 6207 0c08 D7F8A014 		ldr	r1, [r7, #1184]
 6208 0c0c 1346     		mov	r3, r2
 6209 0c0e DB00     		lsls	r3, r3, #3
 6210 0c10 9B1A     		subs	r3, r3, r2
 6211 0c12 1B01     		lsls	r3, r3, #4
 6212 0c14 0B44     		add	r3, r3, r1
 6213 0c16 03F58873 		add	r3, r3, #272
 6214 0c1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6215              		.loc 1 960 0
 6216 0c1c 1433     		adds	r3, r3, #20
 6217 0c1e DAB2     		uxtb	r2, r3
 6218 0c20 07F52573 		add	r3, r7, #660
 6219 0c24 9A74     		strb	r2, [r3, #18]
 6220 0c26 97F89D34 		ldrb	r3, [r7, #1181]
 6221 0c2a 0A33     		adds	r3, r3, #10
 6222 0c2c DAB2     		uxtb	r2, r3
 6223 0c2e 07F52573 		add	r3, r7, #660
 6224 0c32 DA74     		strb	r2, [r3, #19]
 6225 0c34 97F89D34 		ldrb	r3, [r7, #1181]
 6226 0c38 0A33     		adds	r3, r3, #10
 6227 0c3a DAB2     		uxtb	r2, r3
 6228 0c3c 07F52573 		add	r3, r7, #660
 6229 0c40 1A75     		strb	r2, [r3, #20]
 6230 0c42 07F52573 		add	r3, r7, #660
 6231 0c46 0022     		movs	r2, #0
 6232 0c48 5A75     		strb	r2, [r3, #21]
 6233 0c4a 07F52573 		add	r3, r7, #660
 6234 0c4e 4622     		movs	r2, #70
 6235 0c50 9A75     		strb	r2, [r3, #22]
 6236 0c52 07F52573 		add	r3, r7, #660
 6237 0c56 4622     		movs	r2, #70
 6238 0c58 DA75     		strb	r2, [r3, #23]
 6239 0c5a 07F52573 		add	r3, r7, #660
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 153


 6240 0c5e 4622     		movs	r2, #70
 6241 0c60 1A76     		strb	r2, [r3, #24]
 6242 0c62 07F52573 		add	r3, r7, #660
 6243 0c66 4622     		movs	r2, #70
 6244 0c68 5A76     		strb	r2, [r3, #25]
 6245 0c6a 07F52573 		add	r3, r7, #660
 6246 0c6e 1E22     		movs	r2, #30
 6247 0c70 9A76     		strb	r2, [r3, #26]
 6248 0c72 07F52573 		add	r3, r7, #660
 6249 0c76 0022     		movs	r2, #0
 6250 0c78 DA76     		strb	r2, [r3, #27]
 6251 0c7a 07F52573 		add	r3, r7, #660
 6252 0c7e 2822     		movs	r2, #40
 6253 0c80 1A77     		strb	r2, [r3, #28]
 6254 0c82 07F52573 		add	r3, r7, #660
 6255 0c86 3222     		movs	r2, #50
 6256 0c88 5A77     		strb	r2, [r3, #29]
 6257 0c8a 07F52573 		add	r3, r7, #660
 6258 0c8e 0022     		movs	r2, #0
 6259 0c90 9A77     		strb	r2, [r3, #30]
 6260 0c92 07F52573 		add	r3, r7, #660
 6261 0c96 3222     		movs	r2, #50
 6262 0c98 DA77     		strb	r2, [r3, #31]
 6263 0c9a 07F52573 		add	r3, r7, #660
 6264 0c9e 2822     		movs	r2, #40
 6265 0ca0 83F82020 		strb	r2, [r3, #32]
 6266 0ca4 07F52573 		add	r3, r7, #660
 6267 0ca8 2822     		movs	r2, #40
 6268 0caa 83F82120 		strb	r2, [r3, #33]
 6269 0cae 07F52573 		add	r3, r7, #660
 6270 0cb2 0022     		movs	r2, #0
 6271 0cb4 83F82220 		strb	r2, [r3, #34]
 966:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
 967:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
 968:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
 969:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6272              		.loc 1 969 0
 6273 0cb8 D7F8A034 		ldr	r3, [r7, #1184]
 6274 0cbc 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6275              		.loc 1 960 0
 6276 0cc0 3C33     		adds	r3, r3, #60
 6277 0cc2 DAB2     		uxtb	r2, r3
 6278 0cc4 07F52573 		add	r3, r7, #660
 6279 0cc8 83F82320 		strb	r2, [r3, #35]
 6280 0ccc 97F89D34 		ldrb	r3, [r7, #1181]
 6281 0cd0 0A33     		adds	r3, r3, #10
 6282 0cd2 DAB2     		uxtb	r2, r3
 6283 0cd4 07F52573 		add	r3, r7, #660
 6284 0cd8 83F82420 		strb	r2, [r3, #36]
 6285 0cdc 97F89D34 		ldrb	r3, [r7, #1181]
 6286 0ce0 0A33     		adds	r3, r3, #10
 6287 0ce2 DAB2     		uxtb	r2, r3
 6288 0ce4 07F52573 		add	r3, r7, #660
 6289 0ce8 83F82520 		strb	r2, [r3, #37]
 6290 0cec 97F89D34 		ldrb	r3, [r7, #1181]
 6291 0cf0 0A33     		adds	r3, r3, #10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 154


 6292 0cf2 DAB2     		uxtb	r2, r3
 6293 0cf4 07F52573 		add	r3, r7, #660
 6294 0cf8 83F82620 		strb	r2, [r3, #38]
 6295 0cfc 97F89D34 		ldrb	r3, [r7, #1181]
 6296 0d00 0A33     		adds	r3, r3, #10
 6297 0d02 DAB2     		uxtb	r2, r3
 6298 0d04 07F52573 		add	r3, r7, #660
 6299 0d08 83F82720 		strb	r2, [r3, #39]
 970:..\src/command_processing.c ****         
 971:..\src/command_processing.c ****         // GENERIC PARAMS
 972:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
 973:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6300              		.loc 1 973 0
 6301 0d0c 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6302 0d10 D7F8A014 		ldr	r1, [r7, #1184]
 6303 0d14 1346     		mov	r3, r2
 6304 0d16 DB00     		lsls	r3, r3, #3
 6305 0d18 9B1A     		subs	r3, r3, r2
 6306 0d1a 1B01     		lsls	r3, r3, #4
 6307 0d1c 0B44     		add	r3, r3, r1
 6308 0d1e 03F58873 		add	r3, r3, #272
 6309 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6310              		.loc 1 960 0
 6311 0d24 1433     		adds	r3, r3, #20
 6312 0d26 DAB2     		uxtb	r2, r3
 6313 0d28 07F52573 		add	r3, r7, #660
 6314 0d2c 83F82820 		strb	r2, [r3, #40]
 6315              		.loc 1 973 0
 6316 0d30 97F89D24 		ldrb	r2, [r7, #1181]	@ zero_extendqisi2
 6317 0d34 D7F8A014 		ldr	r1, [r7, #1184]
 6318 0d38 1346     		mov	r3, r2
 6319 0d3a DB00     		lsls	r3, r3, #3
 6320 0d3c 9B1A     		subs	r3, r3, r2
 6321 0d3e 1B01     		lsls	r3, r3, #4
 6322 0d40 0B44     		add	r3, r3, r1
 6323 0d42 03F58873 		add	r3, r3, #272
 6324 0d46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6325              		.loc 1 960 0
 6326 0d48 1433     		adds	r3, r3, #20
 6327 0d4a DAB2     		uxtb	r2, r3
 6328 0d4c 07F52573 		add	r3, r7, #660
 6329 0d50 83F82920 		strb	r2, [r3, #41]
 6330 0d54 07F52573 		add	r3, r7, #660
 6331 0d58 0022     		movs	r2, #0
 6332 0d5a 83F82A20 		strb	r2, [r3, #42]
 6333 0d5e 97F89C34 		ldrb	r3, [r7, #1180]
 6334 0d62 0A33     		adds	r3, r3, #10
 6335 0d64 DAB2     		uxtb	r2, r3
 6336 0d66 07F52573 		add	r3, r7, #660
 6337 0d6a 83F82B20 		strb	r2, [r3, #43]
 6338 0d6e 97F89C34 		ldrb	r3, [r7, #1180]
 6339 0d72 0A33     		adds	r3, r3, #10
 6340 0d74 DAB2     		uxtb	r2, r3
 6341 0d76 07F52573 		add	r3, r7, #660
 6342 0d7a 83F82C20 		strb	r2, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 155


 6343 0d7e 97F89C34 		ldrb	r3, [r7, #1180]
 6344 0d82 0A33     		adds	r3, r3, #10
 6345 0d84 DAB2     		uxtb	r2, r3
 6346 0d86 07F52573 		add	r3, r7, #660
 6347 0d8a 83F82D20 		strb	r2, [r3, #45]
 6348 0d8e 97F89C34 		ldrb	r3, [r7, #1180]
 6349 0d92 0A33     		adds	r3, r3, #10
 6350 0d94 DAB2     		uxtb	r2, r3
 6351 0d96 07F52573 		add	r3, r7, #660
 6352 0d9a 83F82E20 		strb	r2, [r3, #46]
 6353 0d9e 97F89C34 		ldrb	r3, [r7, #1180]
 6354 0da2 0A33     		adds	r3, r3, #10
 6355 0da4 DAB2     		uxtb	r2, r3
 6356 0da6 07F52573 		add	r3, r7, #660
 6357 0daa 83F82F20 		strb	r2, [r3, #47]
 974:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
 975:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 6358              		.loc 1 975 0
 6359 0dae 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6360 0db2 D7F8A014 		ldr	r1, [r7, #1184]
 6361 0db6 1346     		mov	r3, r2
 6362 0db8 DB00     		lsls	r3, r3, #3
 6363 0dba 9B1A     		subs	r3, r3, r2
 6364 0dbc 1B01     		lsls	r3, r3, #4
 6365 0dbe 0B44     		add	r3, r3, r1
 6366 0dc0 03F58873 		add	r3, r3, #272
 6367 0dc4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6368              		.loc 1 960 0
 6369 0dc6 1433     		adds	r3, r3, #20
 6370 0dc8 DAB2     		uxtb	r2, r3
 6371 0dca 07F52573 		add	r3, r7, #660
 6372 0dce 83F83020 		strb	r2, [r3, #48]
 6373              		.loc 1 975 0
 6374 0dd2 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6375 0dd6 D7F8A014 		ldr	r1, [r7, #1184]
 6376 0dda 1346     		mov	r3, r2
 6377 0ddc DB00     		lsls	r3, r3, #3
 6378 0dde 9B1A     		subs	r3, r3, r2
 6379 0de0 1B01     		lsls	r3, r3, #4
 6380 0de2 0B44     		add	r3, r3, r1
 6381 0de4 03F58873 		add	r3, r3, #272
 6382 0de8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6383              		.loc 1 960 0
 6384 0dea 1433     		adds	r3, r3, #20
 6385 0dec DAB2     		uxtb	r2, r3
 6386 0dee 07F52573 		add	r3, r7, #660
 6387 0df2 83F83120 		strb	r2, [r3, #49]
 6388              		.loc 1 975 0
 6389 0df6 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6390 0dfa D7F8A014 		ldr	r1, [r7, #1184]
 6391 0dfe 1346     		mov	r3, r2
 6392 0e00 DB00     		lsls	r3, r3, #3
 6393 0e02 9B1A     		subs	r3, r3, r2
 6394 0e04 1B01     		lsls	r3, r3, #4
 6395 0e06 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 156


 6396 0e08 03F58873 		add	r3, r3, #272
 6397 0e0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6398              		.loc 1 960 0
 6399 0e0e 1433     		adds	r3, r3, #20
 6400 0e10 DAB2     		uxtb	r2, r3
 6401 0e12 07F52573 		add	r3, r7, #660
 6402 0e16 83F83220 		strb	r2, [r3, #50]
 6403 0e1a 97F89C34 		ldrb	r3, [r7, #1180]
 6404 0e1e 0A33     		adds	r3, r3, #10
 6405 0e20 DAB2     		uxtb	r2, r3
 6406 0e22 07F52573 		add	r3, r7, #660
 6407 0e26 83F83320 		strb	r2, [r3, #51]
 6408 0e2a 97F89C34 		ldrb	r3, [r7, #1180]
 6409 0e2e 0A33     		adds	r3, r3, #10
 6410 0e30 DAB2     		uxtb	r2, r3
 6411 0e32 07F52573 		add	r3, r7, #660
 6412 0e36 83F83420 		strb	r2, [r3, #52]
 6413 0e3a 97F89C34 		ldrb	r3, [r7, #1180]
 6414 0e3e 0A33     		adds	r3, r3, #10
 6415 0e40 DAB2     		uxtb	r2, r3
 6416 0e42 07F52573 		add	r3, r7, #660
 6417 0e46 83F83520 		strb	r2, [r3, #53]
 6418 0e4a 97F89C34 		ldrb	r3, [r7, #1180]
 6419 0e4e 0A33     		adds	r3, r3, #10
 6420 0e50 DAB2     		uxtb	r2, r3
 6421 0e52 07F52573 		add	r3, r7, #660
 6422 0e56 83F83620 		strb	r2, [r3, #54]
 976:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6423              		.loc 1 976 0
 6424 0e5a 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6425 0e5e D7F8A014 		ldr	r1, [r7, #1184]
 6426 0e62 1346     		mov	r3, r2
 6427 0e64 DB00     		lsls	r3, r3, #3
 6428 0e66 9B1A     		subs	r3, r3, r2
 6429 0e68 1B01     		lsls	r3, r3, #4
 6430 0e6a 0B44     		add	r3, r3, r1
 6431 0e6c 03F58873 		add	r3, r3, #272
 6432 0e70 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6433              		.loc 1 960 0
 6434 0e72 1433     		adds	r3, r3, #20
 6435 0e74 DAB2     		uxtb	r2, r3
 6436 0e76 07F52573 		add	r3, r7, #660
 6437 0e7a 83F83720 		strb	r2, [r3, #55]
 977:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 6438              		.loc 1 977 0
 6439 0e7e 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6440 0e82 D7F8A014 		ldr	r1, [r7, #1184]
 6441 0e86 1346     		mov	r3, r2
 6442 0e88 DB00     		lsls	r3, r3, #3
 6443 0e8a 9B1A     		subs	r3, r3, r2
 6444 0e8c 1B01     		lsls	r3, r3, #4
 6445 0e8e 0B44     		add	r3, r3, r1
 6446 0e90 03F58873 		add	r3, r3, #272
 6447 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 157


 6448              		.loc 1 960 0
 6449 0e96 1433     		adds	r3, r3, #20
 6450 0e98 DAB2     		uxtb	r2, r3
 6451 0e9a 07F52573 		add	r3, r7, #660
 6452 0e9e 83F83820 		strb	r2, [r3, #56]
 6453 0ea2 97F89C34 		ldrb	r3, [r7, #1180]
 6454 0ea6 0A33     		adds	r3, r3, #10
 6455 0ea8 DAB2     		uxtb	r2, r3
 6456 0eaa 07F52573 		add	r3, r7, #660
 6457 0eae 83F83920 		strb	r2, [r3, #57]
 6458 0eb2 97F89C34 		ldrb	r3, [r7, #1180]
 6459 0eb6 0A33     		adds	r3, r3, #10
 6460 0eb8 DAB2     		uxtb	r2, r3
 6461 0eba 07F52573 		add	r3, r7, #660
 6462 0ebe 83F83A20 		strb	r2, [r3, #58]
 6463 0ec2 97F89C34 		ldrb	r3, [r7, #1180]
 6464 0ec6 0A33     		adds	r3, r3, #10
 6465 0ec8 DAB2     		uxtb	r2, r3
 6466 0eca 07F52573 		add	r3, r7, #660
 6467 0ece 83F83B20 		strb	r2, [r3, #59]
 6468 0ed2 97F89C34 		ldrb	r3, [r7, #1180]
 6469 0ed6 0A33     		adds	r3, r3, #10
 6470 0ed8 DAB2     		uxtb	r2, r3
 6471 0eda 07F52573 		add	r3, r7, #660
 6472 0ede 83F83C20 		strb	r2, [r3, #60]
 6473 0ee2 97F89C34 		ldrb	r3, [r7, #1180]
 6474 0ee6 0A33     		adds	r3, r3, #10
 6475 0ee8 DAB2     		uxtb	r2, r3
 6476 0eea 07F52573 		add	r3, r7, #660
 6477 0eee 83F83D20 		strb	r2, [r3, #61]
 6478 0ef2 97F89C34 		ldrb	r3, [r7, #1180]
 6479 0ef6 0A33     		adds	r3, r3, #10
 6480 0ef8 DAB2     		uxtb	r2, r3
 6481 0efa 07F52573 		add	r3, r7, #660
 6482 0efe 83F83E20 		strb	r2, [r3, #62]
 978:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6483              		.loc 1 978 0
 6484 0f02 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6485 0f06 D7F8A014 		ldr	r1, [r7, #1184]
 6486 0f0a 1346     		mov	r3, r2
 6487 0f0c DB00     		lsls	r3, r3, #3
 6488 0f0e 9B1A     		subs	r3, r3, r2
 6489 0f10 1B01     		lsls	r3, r3, #4
 6490 0f12 0B44     		add	r3, r3, r1
 6491 0f14 03F58873 		add	r3, r3, #272
 6492 0f18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6493              		.loc 1 960 0
 6494 0f1a 1433     		adds	r3, r3, #20
 6495 0f1c DAB2     		uxtb	r2, r3
 6496 0f1e 07F52573 		add	r3, r7, #660
 6497 0f22 83F83F20 		strb	r2, [r3, #63]
 979:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 6498              		.loc 1 979 0
 6499 0f26 97F89C24 		ldrb	r2, [r7, #1180]	@ zero_extendqisi2
 6500 0f2a D7F8A014 		ldr	r1, [r7, #1184]
 6501 0f2e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 158


 6502 0f30 DB00     		lsls	r3, r3, #3
 6503 0f32 9B1A     		subs	r3, r3, r2
 6504 0f34 1B01     		lsls	r3, r3, #4
 6505 0f36 0B44     		add	r3, r3, r1
 6506 0f38 03F58873 		add	r3, r3, #272
 6507 0f3c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 960:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6508              		.loc 1 960 0
 6509 0f3e 1433     		adds	r3, r3, #20
 6510 0f40 DAB2     		uxtb	r2, r3
 6511 0f42 07F52573 		add	r3, r7, #660
 6512 0f46 83F84020 		strb	r2, [r3, #64]
 6513 0f4a 07F52573 		add	r3, r7, #660
 6514 0f4e 1422     		movs	r2, #20
 6515 0f50 83F84120 		strb	r2, [r3, #65]
 6516 0f54 07F52573 		add	r3, r7, #660
 6517 0f58 1522     		movs	r2, #21
 6518 0f5a 83F84220 		strb	r2, [r3, #66]
 6519 0f5e 07F52573 		add	r3, r7, #660
 6520 0f62 3222     		movs	r2, #50
 6521 0f64 83F84320 		strb	r2, [r3, #67]
 6522 0f68 07F52573 		add	r3, r7, #660
 6523 0f6c 3222     		movs	r2, #50
 6524 0f6e 83F84420 		strb	r2, [r3, #68]
 6525 0f72 07F52573 		add	r3, r7, #660
 6526 0f76 3222     		movs	r2, #50
 6527 0f78 83F84520 		strb	r2, [r3, #69]
 6528 0f7c 07F52573 		add	r3, r7, #660
 6529 0f80 0022     		movs	r2, #0
 6530 0f82 83F84620 		strb	r2, [r3, #70]
 980:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE
 981:..\src/command_processing.c ****     };
 982:..\src/command_processing.c ****     
 983:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 6531              		.loc 1 983 0
 6532 0f86 07F5BC73 		add	r3, r7, #376
 6533 0f8a CA4A     		ldr	r2, .L339
 6534 0f8c 1846     		mov	r0, r3
 6535 0f8e 1146     		mov	r1, r2
 6536 0f90 4FF48E73 		mov	r3, #284
 6537 0f94 1A46     		mov	r2, r3
 6538 0f96 FFF7FEFF 		bl	memcpy
 984:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 985:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 986:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 987:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 988:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 989:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
 990:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
 991:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
 992:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
 993:..\src/command_processing.c ****         
 994:..\src/command_processing.c ****         // GENERIC PARAMS
 995:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
 996:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
 997:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
 998:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 159


 999:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1000:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1001:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1002:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1003:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:"
1004:..\src/command_processing.c ****     };
1005:..\src/command_processing.c **** 
1006:..\src/command_processing.c ****     //Parameters menu
1007:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 6539              		.loc 1 1007 0
 6540 0f9a 07F58073 		add	r3, r7, #256
 6541 0f9e 0022     		movs	r2, #0
 6542 0fa0 1A60     		str	r2, [r3]
 6543 0fa2 0433     		adds	r3, r3, #4
 6544 0fa4 7222     		movs	r2, #114
 6545 0fa6 0021     		movs	r1, #0
 6546 0fa8 1846     		mov	r0, r3
 6547 0faa FFF7FEFF 		bl	memset
1008:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 6548              		.loc 1 1008 0
 6549 0fae 07F58070 		add	r0, r7, #256
 6550 0fb2 6423     		movs	r3, #100
 6551 0fb4 0A22     		movs	r2, #10
 6552 0fb6 C049     		ldr	r1, .L339+4
 6553 0fb8 FFF7FEFF 		bl	sprintf
1009:..\src/command_processing.c **** 
1010:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 6554              		.loc 1 1010 0
 6555 0fbc 07F1D803 		add	r3, r7, #216
 6556 0fc0 BE4A     		ldr	r2, .L339+8
 6557 0fc2 1A60     		str	r2, [r3]
 6558 0fc4 07F1D803 		add	r3, r7, #216
 6559 0fc8 BD4A     		ldr	r2, .L339+12
 6560 0fca 5A60     		str	r2, [r3, #4]
 6561 0fcc 07F1D803 		add	r3, r7, #216
 6562 0fd0 BC4A     		ldr	r2, .L339+16
 6563 0fd2 9A60     		str	r2, [r3, #8]
 6564 0fd4 07F1D803 		add	r3, r7, #216
 6565 0fd8 BB4A     		ldr	r2, .L339+20
 6566 0fda DA60     		str	r2, [r3, #12]
 6567 0fdc 07F1D803 		add	r3, r7, #216
 6568 0fe0 BA4A     		ldr	r2, .L339+24
 6569 0fe2 1A61     		str	r2, [r3, #16]
 6570 0fe4 07F1D803 		add	r3, r7, #216
 6571 0fe8 B94A     		ldr	r2, .L339+28
 6572 0fea 5A61     		str	r2, [r3, #20]
 6573 0fec 07F1D803 		add	r3, r7, #216
 6574 0ff0 07F58072 		add	r2, r7, #256
 6575 0ff4 9A61     		str	r2, [r3, #24]
 6576 0ff6 07F1D803 		add	r3, r7, #216
 6577 0ffa B64A     		ldr	r2, .L339+32
 6578 0ffc DA61     		str	r2, [r3, #28]
 6579 0ffe 07F1D803 		add	r3, r7, #216
 6580 1002 B54A     		ldr	r2, .L339+36
 6581 1004 1A62     		str	r2, [r3, #32]
 6582 1006 07F1D803 		add	r3, r7, #216
 6583 100a B44A     		ldr	r2, .L339+40
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 160


 6584 100c 5A62     		str	r2, [r3, #36]
1011:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1012:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1013:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1014:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1015:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1016:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1017:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1018:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1019:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1020:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\nThe board will reset\n"                         
1021:..\src/command_processing.c ****     };   
1022:..\src/command_processing.c ****     
1023:..\src/command_processing.c ****     uint8 NUM_MENU[28] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 6585              		.loc 1 1023 0
 6586 100e 07F1BC03 		add	r3, r7, #188
 6587 1012 B34A     		ldr	r2, .L339+44
 6588 1014 1C46     		mov	r4, r3
 6589 1016 1546     		mov	r5, r2
 6590 1018 2868     		ldr	r0, [r5]	@ unaligned
 6591 101a 6968     		ldr	r1, [r5, #4]	@ unaligned
 6592 101c AA68     		ldr	r2, [r5, #8]	@ unaligned
 6593 101e EB68     		ldr	r3, [r5, #12]	@ unaligned
 6594 1020 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6595 1022 2869     		ldr	r0, [r5, #16]	@ unaligned
 6596 1024 6969     		ldr	r1, [r5, #20]	@ unaligned
 6597 1026 AA69     		ldr	r2, [r5, #24]	@ unaligned
 6598 1028 07C4     		stmia	r4!, {r0, r1, r2}
1024:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 6599              		.loc 1 1024 0
 6600 102a 07F1B003 		add	r3, r7, #176
 6601 102e AD4A     		ldr	r2, .L339+48
 6602 1030 1068     		ldr	r0, [r2]	@ unaligned
 6603 1032 5168     		ldr	r1, [r2, #4]	@ unaligned
 6604 1034 03C3     		stmia	r3!, {r0, r1}
 6605 1036 127A     		ldrb	r2, [r2, #8]
 6606 1038 1A70     		strb	r2, [r3]
1025:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 6607              		.loc 1 1025 0
 6608 103a 07F19C03 		add	r3, r7, #156
 6609 103e AA4A     		ldr	r2, .L339+52
 6610 1040 1C46     		mov	r4, r3
 6611 1042 1546     		mov	r5, r2
 6612 1044 2868     		ldr	r0, [r5]	@ unaligned
 6613 1046 6968     		ldr	r1, [r5, #4]	@ unaligned
 6614 1048 AA68     		ldr	r2, [r5, #8]	@ unaligned
 6615 104a EB68     		ldr	r3, [r5, #12]	@ unaligned
 6616 104c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6617 104e 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 6618 1050 2380     		strh	r3, [r4]	@ unaligned
1026:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 6619              		.loc 1 1026 0
 6620 1052 2323     		movs	r3, #35
 6621 1054 87F89B34 		strb	r3, [r7, #1179]
1027:..\src/command_processing.c **** 
1028:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1029:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 161


1030:..\src/command_processing.c ****     
1031:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1032:..\src/command_processing.c **** 
1033:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1034:..\src/command_processing.c ****     
1035:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1036:..\src/command_processing.c ****     j = 0;
 6622              		.loc 1 1036 0
 6623 1058 0023     		movs	r3, #0
 6624 105a 87F8A634 		strb	r3, [r7, #1190]
1037:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6625              		.loc 1 1037 0
 6626 105e 0023     		movs	r3, #0
 6627 1060 87F8A734 		strb	r3, [r7, #1191]
 6628 1064 21E0     		b	.L273
 6629              	.L276:
1038:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6630              		.loc 1 1038 0
 6631 1066 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6632 106a 07F1B002 		add	r2, r7, #176
 6633 106e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6634 1070 1A46     		mov	r2, r3
 6635 1072 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6636 1076 0133     		adds	r3, r3, #1
 6637 1078 9A42     		cmp	r2, r3
 6638 107a 0BD1     		bne	.L274
1039:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 6639              		.loc 1 1039 0
 6640 107c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6641 1080 07F15402 		add	r2, r7, #84
 6642 1084 0121     		movs	r1, #1
 6643 1086 D154     		strb	r1, [r2, r3]
1040:..\src/command_processing.c ****             j++;
 6644              		.loc 1 1040 0
 6645 1088 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6646 108c 0133     		adds	r3, r3, #1
 6647 108e 87F8A634 		strb	r3, [r7, #1190]
 6648 1092 05E0     		b	.L275
 6649              	.L274:
1041:..\src/command_processing.c ****         }
1042:..\src/command_processing.c ****         else {
1043:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 6650              		.loc 1 1043 0
 6651 1094 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6652 1098 07F15402 		add	r2, r7, #84
 6653 109c 0021     		movs	r1, #0
 6654 109e D154     		strb	r1, [r2, r3]
 6655              	.L275:
1037:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6656              		.loc 1 1037 0 discriminator 2
 6657 10a0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6658 10a4 0133     		adds	r3, r3, #1
 6659 10a6 87F8A734 		strb	r3, [r7, #1191]
 6660              	.L273:
1037:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 6661              		.loc 1 1037 0 is_stmt 0 discriminator 1
 6662 10aa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 162


 6663 10ae 462B     		cmp	r3, #70
 6664 10b0 D9D9     		bls	.L276
1044:..\src/command_processing.c ****         }
1045:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1046:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1047:..\src/command_processing.c ****     j = 0;
 6665              		.loc 1 1047 0 is_stmt 1
 6666 10b2 0023     		movs	r3, #0
 6667 10b4 87F8A634 		strb	r3, [r7, #1190]
1048:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 6668              		.loc 1 1048 0
 6669 10b8 0023     		movs	r3, #0
 6670 10ba 87F8A734 		strb	r3, [r7, #1191]
 6671 10be 21E0     		b	.L277
 6672              	.L280:
1049:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6673              		.loc 1 1049 0
 6674 10c0 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6675 10c4 07F19C02 		add	r2, r7, #156
 6676 10c8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6677 10ca 1A46     		mov	r2, r3
 6678 10cc 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6679 10d0 0133     		adds	r3, r3, #1
 6680 10d2 9A42     		cmp	r2, r3
 6681 10d4 0BD1     		bne	.L278
1050:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 6682              		.loc 1 1050 0
 6683 10d6 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6684 10da 07F10C02 		add	r2, r7, #12
 6685 10de 0121     		movs	r1, #1
 6686 10e0 D154     		strb	r1, [r2, r3]
1051:..\src/command_processing.c ****             j++;
 6687              		.loc 1 1051 0
 6688 10e2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6689 10e6 0133     		adds	r3, r3, #1
 6690 10e8 87F8A634 		strb	r3, [r7, #1190]
 6691 10ec 05E0     		b	.L279
 6692              	.L278:
1052:..\src/command_processing.c ****         }
1053:..\src/command_processing.c ****         else {
1054:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 6693              		.loc 1 1054 0
 6694 10ee 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6695 10f2 07F10C02 		add	r2, r7, #12
 6696 10f6 0021     		movs	r1, #0
 6697 10f8 D154     		strb	r1, [r2, r3]
 6698              	.L279:
1048:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6699              		.loc 1 1048 0 discriminator 2
 6700 10fa 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6701 10fe 0133     		adds	r3, r3, #1
 6702 1100 87F8A734 		strb	r3, [r7, #1191]
 6703              	.L277:
1048:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 6704              		.loc 1 1048 0 is_stmt 0 discriminator 1
 6705 1104 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6706 1108 462B     		cmp	r3, #70
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 163


 6707 110a D9D9     		bls	.L280
1055:..\src/command_processing.c ****         }
1056:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1057:..\src/command_processing.c ****         
1058:..\src/command_processing.c ****     if (!index) {
 6708              		.loc 1 1058 0 is_stmt 1
 6709 110c BB1D     		adds	r3, r7, #6
 6710 110e 1B88     		ldrh	r3, [r3]
 6711 1110 002B     		cmp	r3, #0
 6712 1112 17D1     		bne	.L281
1059:..\src/command_processing.c ****         // Get parameters list with relative types
1060:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 6713              		.loc 1 1060 0
 6714 1114 07F52574 		add	r4, r7, #660
 6715 1118 07F53772 		add	r2, r7, #732
 6716 111c 07F54971 		add	r1, r7, #804
 6717 1120 07F55B70 		add	r0, r7, #876
 6718 1124 07F1D803 		add	r3, r7, #216
 6719 1128 0393     		str	r3, [sp, #12]
 6720 112a 07F15403 		add	r3, r7, #84
 6721 112e 0293     		str	r3, [sp, #8]
 6722 1130 07F5BC73 		add	r3, r7, #376
 6723 1134 0193     		str	r3, [sp, #4]
 6724 1136 07F1BC03 		add	r3, r7, #188
 6725 113a 0093     		str	r3, [sp]
 6726 113c 2346     		mov	r3, r4
 6727 113e FFF7FEFF 		bl	get_param_list
1061:..\src/command_processing.c ****     }
1062:..\src/command_processing.c ****     else {
1063:..\src/command_processing.c ****         // Set specific parameter        
1064:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1065:..\src/command_processing.c ****         
1066:..\src/command_processing.c ****         // Find size of data
1067:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1068:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1069:..\src/command_processing.c ****                 sod = 1; break;
1070:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1071:..\src/command_processing.c ****                 sod = 2; break;
1072:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1073:..\src/command_processing.c ****                 sod = 4; break;
1074:..\src/command_processing.c ****         }   
1075:..\src/command_processing.c ****             
1076:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1077:..\src/command_processing.c ****             // Use default specifications for param setting
1078:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1079:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1080:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1081:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1082:..\src/command_processing.c ****                     }
1083:..\src/command_processing.c ****                     break;                
1084:..\src/command_processing.c ****                 case TYPE_STRING:
1085:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1086:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1087:..\src/command_processing.c ****                     }
1088:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1089:..\src/command_processing.c ****                 break; 
1090:..\src/command_processing.c ****                 case TYPE_INT8:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 164


1091:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1092:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1093:..\src/command_processing.c ****                     }
1094:..\src/command_processing.c ****                     break;                    
1095:..\src/command_processing.c ****                 case TYPE_INT16:
1096:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1097:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1098:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1099:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1100:..\src/command_processing.c ****                         }
1101:..\src/command_processing.c ****                     }                   
1102:..\src/command_processing.c ****                     break;
1103:..\src/command_processing.c ****                 case TYPE_UINT16:
1104:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1105:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1106:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1107:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1108:..\src/command_processing.c ****                         }
1109:..\src/command_processing.c ****                     }
1110:..\src/command_processing.c ****                     break;
1111:..\src/command_processing.c ****                 case TYPE_INT32:
1112:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1113:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1114:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1115:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1116:..\src/command_processing.c ****                         }
1117:..\src/command_processing.c ****                     }
1118:..\src/command_processing.c ****                     break;
1119:..\src/command_processing.c ****                 case TYPE_UINT32:
1120:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1121:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1122:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1123:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1124:..\src/command_processing.c ****                         }
1125:..\src/command_processing.c ****                     }
1126:..\src/command_processing.c ****                     break;
1127:..\src/command_processing.c ****                 case TYPE_FLOAT:
1128:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1129:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1130:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1131:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1132:..\src/command_processing.c ****                         }
1133:..\src/command_processing.c ****                     }
1134:..\src/command_processing.c ****                     break;
1135:..\src/command_processing.c ****                 default:
1136:..\src/command_processing.c ****                     break;
1137:..\src/command_processing.c ****             }
1138:..\src/command_processing.c ****         }
1139:..\src/command_processing.c ****         else {  
1140:..\src/command_processing.c ****             // Use custom specifications for param setting
1141:..\src/command_processing.c ****             set_custom_param(index);
1142:..\src/command_processing.c ****         }
1143:..\src/command_processing.c ****         
1144:..\src/command_processing.c ****         // Store param also in user_emg structure
1145:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1146:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1147:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 165


1148:..\src/command_processing.c ****         
1149:..\src/command_processing.c ****         // Perform chip reset if needed
1150:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1151:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1152:..\src/command_processing.c ****             do {
1153:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1154:..\src/command_processing.c ****                 idx++;
1155:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1156:..\src/command_processing.c ****             
1157:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1158:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1159:..\src/command_processing.c ****             }   
1160:..\src/command_processing.c ****         }
1161:..\src/command_processing.c ****     }
1162:..\src/command_processing.c **** } 
 6728              		.loc 1 1162 0
 6729 1142 D9E2     		b	.L332
 6730              	.L281:
1064:..\src/command_processing.c ****         
 6731              		.loc 1 1064 0
 6732 1144 BB1D     		adds	r3, r7, #6
 6733 1146 1B88     		ldrh	r3, [r3]	@ movhi
 6734 1148 DBB2     		uxtb	r3, r3
 6735 114a 013B     		subs	r3, r3, #1
 6736 114c 87F89A34 		strb	r3, [r7, #1178]
1067:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 6737              		.loc 1 1067 0
 6738 1150 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6739 1154 07F54972 		add	r2, r7, #804
 6740 1158 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6741 115a 092B     		cmp	r3, #9
 6742 115c 22D8     		bhi	.L283
 6743 115e 01A2     		adr	r2, .L285
 6744 1160 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6745              		.p2align 2
 6746              	.L285:
 6747 1164 8D110000 		.word	.L284+1
 6748 1168 8D110000 		.word	.L284+1
 6749 116c 8D110000 		.word	.L284+1
 6750 1170 95110000 		.word	.L286+1
 6751 1174 95110000 		.word	.L286+1
 6752 1178 9D110000 		.word	.L287+1
 6753 117c 9D110000 		.word	.L287+1
 6754 1180 9D110000 		.word	.L287+1
 6755 1184 A5110000 		.word	.L283+1
 6756 1188 8D110000 		.word	.L284+1
 6757              		.p2align 1
 6758              	.L284:
1069:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 6759              		.loc 1 1069 0
 6760 118c 0123     		movs	r3, #1
 6761 118e 87F8A534 		strb	r3, [r7, #1189]
 6762 1192 07E0     		b	.L283
 6763              	.L286:
1071:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 6764              		.loc 1 1071 0
 6765 1194 0223     		movs	r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 166


 6766 1196 87F8A534 		strb	r3, [r7, #1189]
 6767 119a 03E0     		b	.L283
 6768              	.L287:
1073:..\src/command_processing.c ****         }   
 6769              		.loc 1 1073 0
 6770 119c 0423     		movs	r3, #4
 6771 119e 87F8A534 		strb	r3, [r7, #1189]
 6772 11a2 00BF     		nop
 6773              	.L283:
1076:..\src/command_processing.c ****             // Use default specifications for param setting
 6774              		.loc 1 1076 0
 6775 11a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6776 11a8 07F10C02 		add	r2, r7, #12
 6777 11ac D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6778 11ae 002B     		cmp	r3, #0
 6779 11b0 40F03682 		bne	.L288
1078:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 6780              		.loc 1 1078 0
 6781 11b4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6782 11b8 07F54972 		add	r2, r7, #804
 6783 11bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6784 11be 092B     		cmp	r3, #9
 6785 11c0 00F23682 		bhi	.L331
 6786 11c4 01A2     		adr	r2, .L291
 6787 11c6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6788 11ca 00BF     		.p2align 2
 6789              	.L291:
 6790 11cc F5110000 		.word	.L290+1
 6791 11d0 AB120000 		.word	.L292+1
 6792 11d4 F5110000 		.word	.L290+1
 6793 11d8 3B130000 		.word	.L293+1
 6794 11dc D1130000 		.word	.L294+1
 6795 11e0 65140000 		.word	.L295+1
 6796 11e4 F9140000 		.word	.L296+1
 6797 11e8 8D150000 		.word	.L297+1
 6798 11ec 31160000 		.word	.L331+1
 6799 11f0 41120000 		.word	.L298+1
 6800              		.p2align 1
 6801              	.L290:
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6802              		.loc 1 1080 0
 6803 11f4 0023     		movs	r3, #0
 6804 11f6 87F8A734 		strb	r3, [r7, #1191]
 6805 11fa 17E0     		b	.L299
 6806              	.L300:
1081:..\src/command_processing.c ****                     }
 6807              		.loc 1 1081 0 discriminator 3
 6808 11fc 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6809 1200 07F55B73 		add	r3, r7, #876
 6810 1204 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6811 1208 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6812 120c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6813 1210 01FB02F2 		mul	r2, r1, r2
 6814 1214 1344     		add	r3, r3, r2
 6815 1216 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6816 121a 0332     		adds	r2, r2, #3
 6817 121c 3349     		ldr	r1, .L339+56
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 167


 6818 121e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6819 1220 1A70     		strb	r2, [r3]
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6820              		.loc 1 1080 0 discriminator 3
 6821 1222 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6822 1226 0133     		adds	r3, r3, #1
 6823 1228 87F8A734 		strb	r3, [r7, #1191]
 6824              	.L299:
1080:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6825              		.loc 1 1080 0 is_stmt 0 discriminator 1
 6826 122c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6827 1230 07F53772 		add	r2, r7, #732
 6828 1234 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6829 1236 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6830 123a 9A42     		cmp	r2, r3
 6831 123c DED3     		bcc	.L300
1083:..\src/command_processing.c ****                 case TYPE_STRING:
 6832              		.loc 1 1083 0 is_stmt 1
 6833 123e F8E1     		b	.L326
 6834              	.L298:
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6835              		.loc 1 1085 0
 6836 1240 0023     		movs	r3, #0
 6837 1242 87F8A734 		strb	r3, [r7, #1191]
 6838 1246 17E0     		b	.L302
 6839              	.L303:
1086:..\src/command_processing.c ****                     }
 6840              		.loc 1 1086 0 discriminator 3
 6841 1248 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6842 124c 07F55B73 		add	r3, r7, #876
 6843 1250 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6844 1254 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6845 1258 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6846 125c 01FB02F2 		mul	r2, r1, r2
 6847 1260 1344     		add	r3, r3, r2
 6848 1262 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6849 1266 0332     		adds	r2, r2, #3
 6850 1268 2049     		ldr	r1, .L339+56
 6851 126a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6852 126c 1A70     		strb	r2, [r3]
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6853              		.loc 1 1085 0 discriminator 3
 6854 126e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6855 1272 0133     		adds	r3, r3, #1
 6856 1274 87F8A734 		strb	r3, [r7, #1191]
 6857              	.L302:
1085:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 6858              		.loc 1 1085 0 is_stmt 0 discriminator 1
 6859 1278 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6860 127c 07F53772 		add	r2, r7, #732
 6861 1280 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6862 1282 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6863 1286 9A42     		cmp	r2, r3
 6864 1288 DED3     		bcc	.L303
1088:..\src/command_processing.c ****                 break; 
 6865              		.loc 1 1088 0 is_stmt 1
 6866 128a 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 168


 6867 128e 07F55B73 		add	r3, r7, #876
 6868 1292 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6869 1296 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6870 129a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6871 129e 01FB02F2 		mul	r2, r1, r2
 6872 12a2 1344     		add	r3, r3, r2
 6873 12a4 0022     		movs	r2, #0
 6874 12a6 1A70     		strb	r2, [r3]
1089:..\src/command_processing.c ****                 case TYPE_INT8:
 6875              		.loc 1 1089 0
 6876 12a8 C3E1     		b	.L326
 6877              	.L292:
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6878              		.loc 1 1091 0
 6879 12aa 0023     		movs	r3, #0
 6880 12ac 87F8A734 		strb	r3, [r7, #1191]
 6881 12b0 39E0     		b	.L304
 6882              	.L340:
 6883 12b2 00BF     		.align	2
 6884              	.L339:
 6885 12b4 D00B0000 		.word	.LC106
 6886 12b8 A0010000 		.word	.LC107
 6887 12bc 14020000 		.word	.LC108
 6888 12c0 90020000 		.word	.LC109
 6889 12c4 D0020000 		.word	.LC110
 6890 12c8 FC020000 		.word	.LC111
 6891 12cc 14030000 		.word	.LC112
 6892 12d0 3C030000 		.word	.LC113
 6893 12d4 98030000 		.word	.LC114
 6894 12d8 D8030000 		.word	.LC115
 6895 12dc 20040000 		.word	.LC116
 6896 12e0 EC0C0000 		.word	.LC73
 6897 12e4 080D0000 		.word	.LC74
 6898 12e8 140D0000 		.word	.LC75
 6899 12ec 00000000 		.word	g_rx
 6900              	.L305:
1092:..\src/command_processing.c ****                     }
 6901              		.loc 1 1092 0 discriminator 3
 6902 12f0 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6903 12f4 07F55B73 		add	r3, r7, #876
 6904 12f8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 6905 12fc 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6906 1300 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6907 1304 01FB02F2 		mul	r2, r1, r2
 6908 1308 1344     		add	r3, r3, r2
 6909 130a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6910 130e 0332     		adds	r2, r2, #3
 6911 1310 C649     		ldr	r1, .L341
 6912 1312 0A44     		add	r2, r2, r1
 6913 1314 92F90020 		ldrsb	r2, [r2]
 6914 1318 D2B2     		uxtb	r2, r2
 6915 131a 1A70     		strb	r2, [r3]
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6916              		.loc 1 1091 0 discriminator 3
 6917 131c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6918 1320 0133     		adds	r3, r3, #1
 6919 1322 87F8A734 		strb	r3, [r7, #1191]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 169


 6920              	.L304:
1091:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 6921              		.loc 1 1091 0 is_stmt 0 discriminator 1
 6922 1326 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6923 132a 07F53772 		add	r2, r7, #732
 6924 132e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6925 1330 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6926 1334 9A42     		cmp	r2, r3
 6927 1336 DBD3     		bcc	.L305
1094:..\src/command_processing.c ****                 case TYPE_INT16:
 6928              		.loc 1 1094 0 is_stmt 1
 6929 1338 7BE1     		b	.L326
 6930              	.L293:
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6931              		.loc 1 1096 0
 6932 133a 0023     		movs	r3, #0
 6933 133c 87F8A734 		strb	r3, [r7, #1191]
 6934 1340 3CE0     		b	.L306
 6935              	.L309:
1097:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 6936              		.loc 1 1097 0
 6937 1342 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6938 1346 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 6939 134a 02FB03F3 		mul	r3, r2, r3
 6940 134e 0333     		adds	r3, r3, #3
 6941 1350 B64A     		ldr	r2, .L341
 6942 1352 1344     		add	r3, r3, r2
 6943 1354 B3F90030 		ldrsh	r3, [r3]
 6944 1358 A7F89834 		strh	r3, [r7, #1176]	@ movhi
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6945              		.loc 1 1098 0
 6946 135c 0023     		movs	r3, #0
 6947 135e 87F8A634 		strb	r3, [r7, #1190]
 6948 1362 20E0     		b	.L307
 6949              	.L308:
1099:..\src/command_processing.c ****                         }
 6950              		.loc 1 1099 0 discriminator 3
 6951 1364 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 6952 1368 07F55B73 		add	r3, r7, #876
 6953 136c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6954 1370 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6955 1374 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6956 1378 01FB03F3 		mul	r3, r1, r3
 6957 137c 1846     		mov	r0, r3
 6958 137e 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 6959 1382 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6960 1386 CB1A     		subs	r3, r1, r3
 6961 1388 0344     		add	r3, r3, r0
 6962 138a 013B     		subs	r3, r3, #1
 6963 138c 1344     		add	r3, r3, r2
 6964 138e 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 6965 1392 07F59361 		add	r1, r7, #1176
 6966 1396 0A44     		add	r2, r2, r1
 6967 1398 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6968 139a 1A70     		strb	r2, [r3]
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6969              		.loc 1 1098 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 170


 6970 139c 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 6971 13a0 0133     		adds	r3, r3, #1
 6972 13a2 87F8A634 		strb	r3, [r7, #1190]
 6973              	.L307:
1098:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 6974              		.loc 1 1098 0 is_stmt 0 discriminator 1
 6975 13a6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 6976 13aa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 6977 13ae 9A42     		cmp	r2, r3
 6978 13b0 D8D3     		bcc	.L308
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6979              		.loc 1 1096 0 is_stmt 1 discriminator 2
 6980 13b2 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 6981 13b6 0133     		adds	r3, r3, #1
 6982 13b8 87F8A734 		strb	r3, [r7, #1191]
 6983              	.L306:
1096:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 6984              		.loc 1 1096 0 is_stmt 0 discriminator 1
 6985 13bc 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 6986 13c0 07F53772 		add	r2, r7, #732
 6987 13c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6988 13c6 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 6989 13ca 9A42     		cmp	r2, r3
 6990 13cc B9D3     		bcc	.L309
1102:..\src/command_processing.c ****                 case TYPE_UINT16:
 6991              		.loc 1 1102 0 is_stmt 1
 6992 13ce 30E1     		b	.L326
 6993              	.L294:
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 6994              		.loc 1 1104 0
 6995 13d0 0023     		movs	r3, #0
 6996 13d2 87F8A734 		strb	r3, [r7, #1191]
 6997 13d6 3BE0     		b	.L310
 6998              	.L313:
1105:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 6999              		.loc 1 1105 0
 7000 13d8 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7001 13dc 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7002 13e0 02FB03F3 		mul	r3, r2, r3
 7003 13e4 0333     		adds	r3, r3, #3
 7004 13e6 914A     		ldr	r2, .L341
 7005 13e8 1344     		add	r3, r3, r2
 7006 13ea 1B88     		ldrh	r3, [r3]
 7007 13ec A7F89634 		strh	r3, [r7, #1174]	@ movhi
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7008              		.loc 1 1106 0
 7009 13f0 0023     		movs	r3, #0
 7010 13f2 87F8A634 		strb	r3, [r7, #1190]
 7011 13f6 20E0     		b	.L311
 7012              	.L312:
1107:..\src/command_processing.c ****                         }
 7013              		.loc 1 1107 0 discriminator 3
 7014 13f8 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7015 13fc 07F55B73 		add	r3, r7, #876
 7016 1400 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7017 1404 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7018 1408 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 171


 7019 140c 01FB03F3 		mul	r3, r1, r3
 7020 1410 1846     		mov	r0, r3
 7021 1412 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7022 1416 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7023 141a CB1A     		subs	r3, r1, r3
 7024 141c 0344     		add	r3, r3, r0
 7025 141e 013B     		subs	r3, r3, #1
 7026 1420 1344     		add	r3, r3, r2
 7027 1422 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7028 1426 07F29641 		addw	r1, r7, #1174
 7029 142a 0A44     		add	r2, r2, r1
 7030 142c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7031 142e 1A70     		strb	r2, [r3]
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7032              		.loc 1 1106 0 discriminator 3
 7033 1430 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7034 1434 0133     		adds	r3, r3, #1
 7035 1436 87F8A634 		strb	r3, [r7, #1190]
 7036              	.L311:
1106:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7037              		.loc 1 1106 0 is_stmt 0 discriminator 1
 7038 143a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7039 143e 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7040 1442 9A42     		cmp	r2, r3
 7041 1444 D8D3     		bcc	.L312
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7042              		.loc 1 1104 0 is_stmt 1 discriminator 2
 7043 1446 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7044 144a 0133     		adds	r3, r3, #1
 7045 144c 87F8A734 		strb	r3, [r7, #1191]
 7046              	.L310:
1104:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7047              		.loc 1 1104 0 is_stmt 0 discriminator 1
 7048 1450 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7049 1454 07F53772 		add	r2, r7, #732
 7050 1458 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7051 145a 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7052 145e 9A42     		cmp	r2, r3
 7053 1460 BAD3     		bcc	.L313
1110:..\src/command_processing.c ****                 case TYPE_INT32:
 7054              		.loc 1 1110 0 is_stmt 1
 7055 1462 E6E0     		b	.L326
 7056              	.L295:
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7057              		.loc 1 1112 0
 7058 1464 0023     		movs	r3, #0
 7059 1466 87F8A734 		strb	r3, [r7, #1191]
 7060 146a 3BE0     		b	.L314
 7061              	.L317:
1113:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7062              		.loc 1 1113 0
 7063 146c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7064 1470 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7065 1474 02FB03F3 		mul	r3, r2, r3
 7066 1478 0333     		adds	r3, r3, #3
 7067 147a 6C4A     		ldr	r2, .L341
 7068 147c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 172


 7069 147e 1B68     		ldr	r3, [r3]
 7070 1480 C7F89034 		str	r3, [r7, #1168]
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7071              		.loc 1 1114 0
 7072 1484 0023     		movs	r3, #0
 7073 1486 87F8A634 		strb	r3, [r7, #1190]
 7074 148a 20E0     		b	.L315
 7075              	.L316:
1115:..\src/command_processing.c ****                         }
 7076              		.loc 1 1115 0 discriminator 3
 7077 148c 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7078 1490 07F55B73 		add	r3, r7, #876
 7079 1494 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7080 1498 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7081 149c 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7082 14a0 01FB03F3 		mul	r3, r1, r3
 7083 14a4 1846     		mov	r0, r3
 7084 14a6 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7085 14aa 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7086 14ae CB1A     		subs	r3, r1, r3
 7087 14b0 0344     		add	r3, r3, r0
 7088 14b2 013B     		subs	r3, r3, #1
 7089 14b4 1344     		add	r3, r3, r2
 7090 14b6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7091 14ba 07F59261 		add	r1, r7, #1168
 7092 14be 0A44     		add	r2, r2, r1
 7093 14c0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7094 14c2 1A70     		strb	r2, [r3]
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7095              		.loc 1 1114 0 discriminator 3
 7096 14c4 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7097 14c8 0133     		adds	r3, r3, #1
 7098 14ca 87F8A634 		strb	r3, [r7, #1190]
 7099              	.L315:
1114:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7100              		.loc 1 1114 0 is_stmt 0 discriminator 1
 7101 14ce 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7102 14d2 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7103 14d6 9A42     		cmp	r2, r3
 7104 14d8 D8D3     		bcc	.L316
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7105              		.loc 1 1112 0 is_stmt 1 discriminator 2
 7106 14da 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7107 14de 0133     		adds	r3, r3, #1
 7108 14e0 87F8A734 		strb	r3, [r7, #1191]
 7109              	.L314:
1112:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7110              		.loc 1 1112 0 is_stmt 0 discriminator 1
 7111 14e4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7112 14e8 07F53772 		add	r2, r7, #732
 7113 14ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7114 14ee 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7115 14f2 9A42     		cmp	r2, r3
 7116 14f4 BAD3     		bcc	.L317
1118:..\src/command_processing.c ****                 case TYPE_UINT32:
 7117              		.loc 1 1118 0 is_stmt 1
 7118 14f6 9CE0     		b	.L326
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 173


 7119              	.L296:
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7120              		.loc 1 1120 0
 7121 14f8 0023     		movs	r3, #0
 7122 14fa 87F8A734 		strb	r3, [r7, #1191]
 7123 14fe 3BE0     		b	.L318
 7124              	.L321:
1121:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7125              		.loc 1 1121 0
 7126 1500 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7127 1504 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7128 1508 02FB03F3 		mul	r3, r2, r3
 7129 150c 0333     		adds	r3, r3, #3
 7130 150e 474A     		ldr	r2, .L341
 7131 1510 1344     		add	r3, r3, r2
 7132 1512 1B68     		ldr	r3, [r3]
 7133 1514 C7F88C34 		str	r3, [r7, #1164]
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7134              		.loc 1 1122 0
 7135 1518 0023     		movs	r3, #0
 7136 151a 87F8A634 		strb	r3, [r7, #1190]
 7137 151e 20E0     		b	.L319
 7138              	.L320:
1123:..\src/command_processing.c ****                         }
 7139              		.loc 1 1123 0 discriminator 3
 7140 1520 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7141 1524 07F55B73 		add	r3, r7, #876
 7142 1528 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7143 152c 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7144 1530 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7145 1534 01FB03F3 		mul	r3, r1, r3
 7146 1538 1846     		mov	r0, r3
 7147 153a 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7148 153e 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7149 1542 CB1A     		subs	r3, r1, r3
 7150 1544 0344     		add	r3, r3, r0
 7151 1546 013B     		subs	r3, r3, #1
 7152 1548 1344     		add	r3, r3, r2
 7153 154a 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7154 154e 07F28C41 		addw	r1, r7, #1164
 7155 1552 0A44     		add	r2, r2, r1
 7156 1554 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7157 1556 1A70     		strb	r2, [r3]
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7158              		.loc 1 1122 0 discriminator 3
 7159 1558 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7160 155c 0133     		adds	r3, r3, #1
 7161 155e 87F8A634 		strb	r3, [r7, #1190]
 7162              	.L319:
1122:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7163              		.loc 1 1122 0 is_stmt 0 discriminator 1
 7164 1562 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7165 1566 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7166 156a 9A42     		cmp	r2, r3
 7167 156c D8D3     		bcc	.L320
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7168              		.loc 1 1120 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 174


 7169 156e 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7170 1572 0133     		adds	r3, r3, #1
 7171 1574 87F8A734 		strb	r3, [r7, #1191]
 7172              	.L318:
1120:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7173              		.loc 1 1120 0 is_stmt 0 discriminator 1
 7174 1578 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7175 157c 07F53772 		add	r2, r7, #732
 7176 1580 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7177 1582 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7178 1586 9A42     		cmp	r2, r3
 7179 1588 BAD3     		bcc	.L321
1126:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7180              		.loc 1 1126 0 is_stmt 1
 7181 158a 52E0     		b	.L326
 7182              	.L297:
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7183              		.loc 1 1128 0
 7184 158c 0023     		movs	r3, #0
 7185 158e 87F8A734 		strb	r3, [r7, #1191]
 7186 1592 3BE0     		b	.L322
 7187              	.L325:
1129:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7188              		.loc 1 1129 0
 7189 1594 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7190 1598 97F8A524 		ldrb	r2, [r7, #1189]	@ zero_extendqisi2
 7191 159c 02FB03F3 		mul	r3, r2, r3
 7192 15a0 0333     		adds	r3, r3, #3
 7193 15a2 224A     		ldr	r2, .L341
 7194 15a4 1344     		add	r3, r3, r2
 7195 15a6 1B68     		ldr	r3, [r3]	@ float
 7196 15a8 C7F88834 		str	r3, [r7, #1160]	@ float
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7197              		.loc 1 1130 0
 7198 15ac 0023     		movs	r3, #0
 7199 15ae 87F8A634 		strb	r3, [r7, #1190]
 7200 15b2 20E0     		b	.L323
 7201              	.L324:
1131:..\src/command_processing.c ****                         }
 7202              		.loc 1 1131 0 discriminator 3
 7203 15b4 97F89A24 		ldrb	r2, [r7, #1178]	@ zero_extendqisi2
 7204 15b8 07F55B73 		add	r3, r7, #876
 7205 15bc 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7206 15c0 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7207 15c4 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7208 15c8 01FB03F3 		mul	r3, r1, r3
 7209 15cc 1846     		mov	r0, r3
 7210 15ce 97F8A514 		ldrb	r1, [r7, #1189]	@ zero_extendqisi2
 7211 15d2 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7212 15d6 CB1A     		subs	r3, r1, r3
 7213 15d8 0344     		add	r3, r3, r0
 7214 15da 013B     		subs	r3, r3, #1
 7215 15dc 1344     		add	r3, r3, r2
 7216 15de 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7217 15e2 07F59161 		add	r1, r7, #1160
 7218 15e6 0A44     		add	r2, r2, r1
 7219 15e8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 175


 7220 15ea 1A70     		strb	r2, [r3]
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7221              		.loc 1 1130 0 discriminator 3
 7222 15ec 97F8A634 		ldrb	r3, [r7, #1190]	@ zero_extendqisi2
 7223 15f0 0133     		adds	r3, r3, #1
 7224 15f2 87F8A634 		strb	r3, [r7, #1190]
 7225              	.L323:
1130:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7226              		.loc 1 1130 0 is_stmt 0 discriminator 1
 7227 15f6 97F8A624 		ldrb	r2, [r7, #1190]	@ zero_extendqisi2
 7228 15fa 97F8A534 		ldrb	r3, [r7, #1189]	@ zero_extendqisi2
 7229 15fe 9A42     		cmp	r2, r3
 7230 1600 D8D3     		bcc	.L324
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7231              		.loc 1 1128 0 is_stmt 1 discriminator 2
 7232 1602 97F8A734 		ldrb	r3, [r7, #1191]	@ zero_extendqisi2
 7233 1606 0133     		adds	r3, r3, #1
 7234 1608 87F8A734 		strb	r3, [r7, #1191]
 7235              	.L322:
1128:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7236              		.loc 1 1128 0 is_stmt 0 discriminator 1
 7237 160c 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7238 1610 07F53772 		add	r2, r7, #732
 7239 1614 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7240 1616 97F8A724 		ldrb	r2, [r7, #1191]	@ zero_extendqisi2
 7241 161a 9A42     		cmp	r2, r3
 7242 161c BAD3     		bcc	.L325
1134:..\src/command_processing.c ****                 default:
 7243              		.loc 1 1134 0 is_stmt 1
 7244 161e 08E0     		b	.L326
 7245              	.L288:
1141:..\src/command_processing.c ****         }
 7246              		.loc 1 1141 0
 7247 1620 BB1D     		adds	r3, r7, #6
 7248 1622 1B88     		ldrh	r3, [r3]
 7249 1624 1846     		mov	r0, r3
 7250 1626 FFF7FEFF 		bl	set_custom_param
 7251 162a 02E0     		b	.L326
 7252              	.L342:
 7253              		.align	2
 7254              	.L341:
 7255 162c 00000000 		.word	g_rx
 7256              	.L331:
1136:..\src/command_processing.c ****             }
 7257              		.loc 1 1136 0
 7258 1630 00BF     		nop
 7259              	.L326:
1145:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
 7260              		.loc 1 1145 0
 7261 1632 97F89B34 		ldrb	r3, [r7, #1179]	@ zero_extendqisi2
 7262 1636 9BB2     		uxth	r3, r3
 7263 1638 BA1D     		adds	r2, r7, #6
 7264 163a 1288     		ldrh	r2, [r2]
 7265 163c 9A42     		cmp	r2, r3
 7266 163e 11D0     		beq	.L327
1146:..\src/command_processing.c ****         }
 7267              		.loc 1 1146 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 176


 7268 1640 D7F8A034 		ldr	r3, [r7, #1184]
 7269 1644 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7270 1648 5B01     		lsls	r3, r3, #5
 7271 164a 03F51273 		add	r3, r3, #584
 7272 164e D7F8A024 		ldr	r2, [r7, #1184]
 7273 1652 D018     		adds	r0, r2, r3
 7274 1654 D7F8A034 		ldr	r3, [r7, #1184]
 7275 1658 03F5F873 		add	r3, r3, #496
 7276 165c 1022     		movs	r2, #16
 7277 165e 1946     		mov	r1, r3
 7278 1660 FFF7FEFF 		bl	memcpy
 7279              	.L327:
1150:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 7280              		.loc 1 1150 0
 7281 1664 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7282 1668 07F54972 		add	r2, r7, #804
 7283 166c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7284 166e 002B     		cmp	r3, #0
 7285 1670 42D1     		bne	.L332
 7286              	.LBB14:
1151:..\src/command_processing.c ****             do {
 7287              		.loc 1 1151 0
 7288 1672 0023     		movs	r3, #0
 7289 1674 87F89F34 		strb	r3, [r7, #1183]
 7290 1678 FF23     		movs	r3, #255
 7291 167a 87F89E34 		strb	r3, [r7, #1182]
 7292              	.L329:
1153:..\src/command_processing.c ****                 idx++;
 7293              		.loc 1 1153 0
 7294 167e 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 7295 1682 07F54972 		add	r2, r7, #804
 7296 1686 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7297 1688 002B     		cmp	r3, #0
 7298 168a 04D1     		bne	.L328
1153:..\src/command_processing.c ****                 idx++;
 7299              		.loc 1 1153 0 is_stmt 0 discriminator 1
 7300 168c 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7301 1690 0133     		adds	r3, r3, #1
 7302 1692 87F89E34 		strb	r3, [r7, #1182]
 7303              	.L328:
1154:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 7304              		.loc 1 1154 0 is_stmt 1
 7305 1696 97F89F34 		ldrb	r3, [r7, #1183]	@ zero_extendqisi2
 7306 169a 0133     		adds	r3, r3, #1
 7307 169c 87F89F34 		strb	r3, [r7, #1183]
1155:..\src/command_processing.c ****             
 7308              		.loc 1 1155 0
 7309 16a0 97F89F24 		ldrb	r2, [r7, #1183]	@ zero_extendqisi2
 7310 16a4 97F89A34 		ldrb	r3, [r7, #1178]	@ zero_extendqisi2
 7311 16a8 9A42     		cmp	r2, r3
 7312 16aa E8D9     		bls	.L329
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7313              		.loc 1 1157 0
 7314 16ac 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7315 16b0 07F1BC02 		add	r2, r7, #188
 7316 16b4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7317 16b6 052B     		cmp	r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 177


 7318 16b8 1BD0     		beq	.L330
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7319              		.loc 1 1157 0 is_stmt 0 discriminator 1
 7320 16ba 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7321 16be 07F1BC02 		add	r2, r7, #188
 7322 16c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7323 16c4 062B     		cmp	r3, #6
 7324 16c6 14D0     		beq	.L330
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7325              		.loc 1 1157 0 discriminator 2
 7326 16c8 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7327 16cc 07F1BC02 		add	r2, r7, #188
 7328 16d0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7329 16d2 082B     		cmp	r3, #8
 7330 16d4 0DD0     		beq	.L330
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7331              		.loc 1 1157 0 discriminator 3
 7332 16d6 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7333 16da 07F1BC02 		add	r2, r7, #188
 7334 16de D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7335 16e0 092B     		cmp	r3, #9
 7336 16e2 06D0     		beq	.L330
1157:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7337              		.loc 1 1157 0 discriminator 4
 7338 16e4 97F89E34 		ldrb	r3, [r7, #1182]	@ zero_extendqisi2
 7339 16e8 07F1BC02 		add	r2, r7, #188
 7340 16ec D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7341 16ee 0A2B     		cmp	r3, #10
 7342 16f0 02D1     		bne	.L332
 7343              	.L330:
1158:..\src/command_processing.c ****             }   
 7344              		.loc 1 1158 0 is_stmt 1
 7345 16f2 044B     		ldr	r3, .L343
 7346 16f4 0122     		movs	r2, #1
 7347 16f6 1A70     		strb	r2, [r3]
 7348              	.L332:
 7349              	.LBE14:
 7350              		.loc 1 1162 0
 7351 16f8 00BF     		nop
 7352 16fa 07F59567 		add	r7, r7, #1192
 7353              		.cfi_def_cfa_offset 16
 7354 16fe BD46     		mov	sp, r7
 7355              		.cfi_def_cfa_register 13
 7356              		@ sp needed
 7357 1700 B0BD     		pop	{r4, r5, r7, pc}
 7358              	.L344:
 7359 1702 00BF     		.align	2
 7360              	.L343:
 7361 1704 00000000 		.word	reset_PSoC_flag
 7362              		.cfi_endproc
 7363              	.LFE68:
 7364              		.size	manage_param_list, .-manage_param_list
 7365              		.global	__aeabi_fmul
 7366              		.global	__aeabi_f2iz
 7367              		.section	.text.set_custom_param,"ax",%progbits
 7368              		.align	2
 7369              		.global	set_custom_param
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 178


 7370              		.thumb
 7371              		.thumb_func
 7372              		.type	set_custom_param, %function
 7373              	set_custom_param:
 7374              	.LFB69:
1163:..\src/command_processing.c **** 
1164:..\src/command_processing.c **** //==============================================================================
1165:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1166:..\src/command_processing.c **** //==============================================================================
1167:..\src/command_processing.c **** 
1168:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 7375              		.loc 1 1168 0
 7376              		.cfi_startproc
 7377              		@ args = 0, pretend = 0, frame = 24
 7378              		@ frame_needed = 1, uses_anonymous_args = 0
 7379 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7380              		.cfi_def_cfa_offset 20
 7381              		.cfi_offset 4, -20
 7382              		.cfi_offset 5, -16
 7383              		.cfi_offset 6, -12
 7384              		.cfi_offset 7, -8
 7385              		.cfi_offset 14, -4
 7386 0002 87B0     		sub	sp, sp, #28
 7387              		.cfi_def_cfa_offset 48
 7388 0004 00AF     		add	r7, sp, #0
 7389              		.cfi_def_cfa_register 7
 7390 0006 0346     		mov	r3, r0
 7391 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1169:..\src/command_processing.c **** 
1170:..\src/command_processing.c ****     uint8 CYDATA i, j;
1171:..\src/command_processing.c ****     uint8 aux_uchar;
1172:..\src/command_processing.c ****     float aux_float, aux_float2;
1173:..\src/command_processing.c **** 
1174:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7392              		.loc 1 1174 0
 7393 000a 0023     		movs	r3, #0
 7394 000c 3B75     		strb	r3, [r7, #20]
1175:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7395              		.loc 1 1175 0
 7396 000e 0123     		movs	r3, #1
 7397 0010 FB74     		strb	r3, [r7, #19]
1176:..\src/command_processing.c ****     
1177:..\src/command_processing.c ****     switch(index){
 7398              		.loc 1 1177 0
 7399 0012 FB88     		ldrh	r3, [r7, #6]
 7400 0014 023B     		subs	r3, r3, #2
 7401 0016 452B     		cmp	r3, #69
 7402 0018 01F2EB81 		bhi	.L437
 7403 001c 01A2     		adr	r2, .L348
 7404 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7405 0022 00BF     		.p2align 2
 7406              	.L348:
 7407 0024 3D010000 		.word	.L347+1
 7408 0028 6F030000 		.word	.L349+1
 7409 002c F3130000 		.word	.L437+1
 7410 0030 B5050000 		.word	.L350+1
 7411 0034 F3130000 		.word	.L437+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 179


 7412 0038 F3130000 		.word	.L437+1
 7413 003c FF050000 		.word	.L351+1
 7414 0040 F3130000 		.word	.L437+1
 7415 0044 F3130000 		.word	.L437+1
 7416 0048 35070000 		.word	.L352+1
 7417 004c F3130000 		.word	.L437+1
 7418 0050 F3130000 		.word	.L437+1
 7419 0054 F3130000 		.word	.L437+1
 7420 0058 F3130000 		.word	.L437+1
 7421 005c F3130000 		.word	.L437+1
 7422 0060 F3130000 		.word	.L437+1
 7423 0064 F3130000 		.word	.L437+1
 7424 0068 F3130000 		.word	.L437+1
 7425 006c F3130000 		.word	.L437+1
 7426 0070 F3130000 		.word	.L437+1
 7427 0074 F3130000 		.word	.L437+1
 7428 0078 35080000 		.word	.L353+1
 7429 007c 93080000 		.word	.L354+1
 7430 0080 F3130000 		.word	.L437+1
 7431 0084 F3130000 		.word	.L437+1
 7432 0088 F3130000 		.word	.L437+1
 7433 008c CD080000 		.word	.L355+1
 7434 0090 F3130000 		.word	.L437+1
 7435 0094 F3130000 		.word	.L437+1
 7436 0098 490A0000 		.word	.L356+1
 7437 009c F50A0000 		.word	.L357+1
 7438 00a0 F3130000 		.word	.L437+1
 7439 00a4 F3130000 		.word	.L437+1
 7440 00a8 F3130000 		.word	.L437+1
 7441 00ac F3130000 		.word	.L437+1
 7442 00b0 F3130000 		.word	.L437+1
 7443 00b4 2F0B0000 		.word	.L358+1
 7444 00b8 F3130000 		.word	.L437+1
 7445 00bc F3130000 		.word	.L437+1
 7446 00c0 F3130000 		.word	.L437+1
 7447 00c4 F3130000 		.word	.L437+1
 7448 00c8 F3130000 		.word	.L437+1
 7449 00cc 690B0000 		.word	.L359+1
 7450 00d0 AF0D0000 		.word	.L360+1
 7451 00d4 F3130000 		.word	.L437+1
 7452 00d8 DD0F0000 		.word	.L361+1
 7453 00dc F3130000 		.word	.L437+1
 7454 00e0 F3130000 		.word	.L437+1
 7455 00e4 45100000 		.word	.L362+1
 7456 00e8 F3130000 		.word	.L437+1
 7457 00ec F3130000 		.word	.L437+1
 7458 00f0 59110000 		.word	.L363+1
 7459 00f4 F3130000 		.word	.L437+1
 7460 00f8 F3130000 		.word	.L437+1
 7461 00fc F3130000 		.word	.L437+1
 7462 0100 F3130000 		.word	.L437+1
 7463 0104 F3130000 		.word	.L437+1
 7464 0108 F3130000 		.word	.L437+1
 7465 010c F3130000 		.word	.L437+1
 7466 0110 57120000 		.word	.L364+1
 7467 0114 F3130000 		.word	.L437+1
 7468 0118 F3130000 		.word	.L437+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 180


 7469 011c F3130000 		.word	.L437+1
 7470 0120 F3130000 		.word	.L437+1
 7471 0124 F3130000 		.word	.L437+1
 7472 0128 F3130000 		.word	.L437+1
 7473 012c F3130000 		.word	.L437+1
 7474 0130 F3130000 		.word	.L437+1
 7475 0134 F3130000 		.word	.L437+1
 7476 0138 A1120000 		.word	.L365+1
 7477              		.p2align 1
 7478              	.L347:
1178:..\src/command_processing.c ****         case 2:         // Position PID
1179:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7479              		.loc 1 1179 0
 7480 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7481 013e AB49     		ldr	r1, .L443
 7482 0140 1346     		mov	r3, r2
 7483 0142 DB00     		lsls	r3, r3, #3
 7484 0144 9B1A     		subs	r3, r3, r2
 7485 0146 1B01     		lsls	r3, r3, #4
 7486 0148 0B44     		add	r3, r3, r1
 7487 014a 03F20F13 		addw	r3, r3, #271
 7488 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7489 0150 032B     		cmp	r3, #3
 7490 0152 00F08680 		beq	.L366
1180:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7491              		.loc 1 1180 0
 7492 0156 A64B     		ldr	r3, .L443+4
 7493 0158 1B68     		ldr	r3, [r3]	@ float
 7494 015a FB60     		str	r3, [r7, #12]	@ float
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7495              		.loc 1 1181 0
 7496 015c 0023     		movs	r3, #0
 7497 015e BB75     		strb	r3, [r7, #22]
 7498 0160 0EE0     		b	.L367
 7499              	.L368:
1182:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7500              		.loc 1 1182 0 discriminator 3
 7501 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7502 0164 C3F10303 		rsb	r3, r3, #3
 7503 0168 07F10802 		add	r2, r7, #8
 7504 016c 1344     		add	r3, r3, r2
 7505 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7506 0170 07F10C01 		add	r1, r7, #12
 7507 0174 0A44     		add	r2, r2, r1
 7508 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7509 0178 1A70     		strb	r2, [r3]
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7510              		.loc 1 1181 0 discriminator 3
 7511 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7512 017c 0133     		adds	r3, r3, #1
 7513 017e BB75     		strb	r3, [r7, #22]
 7514              	.L367:
1181:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7515              		.loc 1 1181 0 is_stmt 0 discriminator 1
 7516 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7517 0182 032B     		cmp	r3, #3
 7518 0184 EDD9     		bls	.L368
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 181


1183:..\src/command_processing.c ****                 }
1184:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 7519              		.loc 1 1184 0 is_stmt 1
 7520 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7521 0188 BB68     		ldr	r3, [r7, #8]	@ float
 7522 018a 4FF08F41 		mov	r1, #1199570944
 7523 018e 1846     		mov	r0, r3
 7524 0190 FFF7FEFF 		bl	__aeabi_fmul
 7525 0194 0346     		mov	r3, r0
 7526 0196 1846     		mov	r0, r3
 7527 0198 FFF7FEFF 		bl	__aeabi_f2iz
 7528 019c 0146     		mov	r1, r0
 7529 019e 954A     		ldr	r2, .L443+8
 7530 01a0 2346     		mov	r3, r4
 7531 01a2 DB00     		lsls	r3, r3, #3
 7532 01a4 1B1B     		subs	r3, r3, r4
 7533 01a6 1B01     		lsls	r3, r3, #4
 7534 01a8 1344     		add	r3, r3, r2
 7535 01aa B033     		adds	r3, r3, #176
 7536 01ac 1960     		str	r1, [r3]
1185:..\src/command_processing.c ****                 
1186:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7537              		.loc 1 1186 0
 7538 01ae 924B     		ldr	r3, .L443+12
 7539 01b0 1B68     		ldr	r3, [r3]	@ float
 7540 01b2 FB60     		str	r3, [r7, #12]	@ float
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7541              		.loc 1 1187 0
 7542 01b4 0023     		movs	r3, #0
 7543 01b6 BB75     		strb	r3, [r7, #22]
 7544 01b8 0EE0     		b	.L369
 7545              	.L370:
1188:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7546              		.loc 1 1188 0 discriminator 3
 7547 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7548 01bc C3F10303 		rsb	r3, r3, #3
 7549 01c0 07F10802 		add	r2, r7, #8
 7550 01c4 1344     		add	r3, r3, r2
 7551 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7552 01c8 07F10C01 		add	r1, r7, #12
 7553 01cc 0A44     		add	r2, r2, r1
 7554 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7555 01d0 1A70     		strb	r2, [r3]
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7556              		.loc 1 1187 0 discriminator 3
 7557 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7558 01d4 0133     		adds	r3, r3, #1
 7559 01d6 BB75     		strb	r3, [r7, #22]
 7560              	.L369:
1187:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7561              		.loc 1 1187 0 is_stmt 0 discriminator 1
 7562 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7563 01da 032B     		cmp	r3, #3
 7564 01dc EDD9     		bls	.L370
1189:..\src/command_processing.c ****                 }
1190:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 7565              		.loc 1 1190 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 182


 7566 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7567 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 7568 01e2 4FF08F41 		mov	r1, #1199570944
 7569 01e6 1846     		mov	r0, r3
 7570 01e8 FFF7FEFF 		bl	__aeabi_fmul
 7571 01ec 0346     		mov	r3, r0
 7572 01ee 1846     		mov	r0, r3
 7573 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 7574 01f4 0146     		mov	r1, r0
 7575 01f6 7F4A     		ldr	r2, .L443+8
 7576 01f8 2346     		mov	r3, r4
 7577 01fa DB00     		lsls	r3, r3, #3
 7578 01fc 1B1B     		subs	r3, r3, r4
 7579 01fe 1B01     		lsls	r3, r3, #4
 7580 0200 1344     		add	r3, r3, r2
 7581 0202 B433     		adds	r3, r3, #180
 7582 0204 1960     		str	r1, [r3]
1191:..\src/command_processing.c ****                 
1192:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7583              		.loc 1 1192 0
 7584 0206 7D4B     		ldr	r3, .L443+16
 7585 0208 1B68     		ldr	r3, [r3]	@ float
 7586 020a FB60     		str	r3, [r7, #12]	@ float
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7587              		.loc 1 1193 0
 7588 020c 0023     		movs	r3, #0
 7589 020e BB75     		strb	r3, [r7, #22]
 7590 0210 0EE0     		b	.L371
 7591              	.L372:
1194:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7592              		.loc 1 1194 0 discriminator 3
 7593 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7594 0214 C3F10303 		rsb	r3, r3, #3
 7595 0218 07F10802 		add	r2, r7, #8
 7596 021c 1344     		add	r3, r3, r2
 7597 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7598 0220 07F10C01 		add	r1, r7, #12
 7599 0224 0A44     		add	r2, r2, r1
 7600 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7601 0228 1A70     		strb	r2, [r3]
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7602              		.loc 1 1193 0 discriminator 3
 7603 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7604 022c 0133     		adds	r3, r3, #1
 7605 022e BB75     		strb	r3, [r7, #22]
 7606              	.L371:
1193:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7607              		.loc 1 1193 0 is_stmt 0 discriminator 1
 7608 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7609 0232 032B     		cmp	r3, #3
 7610 0234 EDD9     		bls	.L372
1195:..\src/command_processing.c ****                 }
1196:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 7611              		.loc 1 1196 0 is_stmt 1
 7612 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7613 0238 BB68     		ldr	r3, [r7, #8]	@ float
 7614 023a 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 183


 7615 023e 1846     		mov	r0, r3
 7616 0240 FFF7FEFF 		bl	__aeabi_fmul
 7617 0244 0346     		mov	r3, r0
 7618 0246 1846     		mov	r0, r3
 7619 0248 FFF7FEFF 		bl	__aeabi_f2iz
 7620 024c 0146     		mov	r1, r0
 7621 024e 694A     		ldr	r2, .L443+8
 7622 0250 2346     		mov	r3, r4
 7623 0252 DB00     		lsls	r3, r3, #3
 7624 0254 1B1B     		subs	r3, r3, r4
 7625 0256 1B01     		lsls	r3, r3, #4
 7626 0258 1344     		add	r3, r3, r2
 7627 025a B833     		adds	r3, r3, #184
 7628 025c 1960     		str	r1, [r3]
1197:..\src/command_processing.c ****             }
1198:..\src/command_processing.c ****             else {
1199:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1200:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1201:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1202:..\src/command_processing.c ****                 }
1203:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1204:..\src/command_processing.c ****                 
1205:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1206:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1207:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1208:..\src/command_processing.c ****                 }
1209:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1210:..\src/command_processing.c ****                 
1211:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1212:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1213:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1214:..\src/command_processing.c ****                 }
1215:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1216:..\src/command_processing.c ****             }
1217:..\src/command_processing.c ****             break;
 7629              		.loc 1 1217 0
 7630 025e 01F0D3B8 		b	.L380
 7631              	.L366:
1199:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7632              		.loc 1 1199 0
 7633 0262 634B     		ldr	r3, .L443+4
 7634 0264 1B68     		ldr	r3, [r3]	@ float
 7635 0266 FB60     		str	r3, [r7, #12]	@ float
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7636              		.loc 1 1200 0
 7637 0268 0023     		movs	r3, #0
 7638 026a BB75     		strb	r3, [r7, #22]
 7639 026c 0EE0     		b	.L374
 7640              	.L375:
1201:..\src/command_processing.c ****                 }
 7641              		.loc 1 1201 0 discriminator 3
 7642 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7643 0270 C3F10303 		rsb	r3, r3, #3
 7644 0274 07F10802 		add	r2, r7, #8
 7645 0278 1344     		add	r3, r3, r2
 7646 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7647 027c 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 184


 7648 0280 0A44     		add	r2, r2, r1
 7649 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7650 0284 1A70     		strb	r2, [r3]
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7651              		.loc 1 1200 0 discriminator 3
 7652 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7653 0288 0133     		adds	r3, r3, #1
 7654 028a BB75     		strb	r3, [r7, #22]
 7655              	.L374:
1200:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7656              		.loc 1 1200 0 is_stmt 0 discriminator 1
 7657 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7658 028e 032B     		cmp	r3, #3
 7659 0290 EDD9     		bls	.L375
1203:..\src/command_processing.c ****                 
 7660              		.loc 1 1203 0 is_stmt 1
 7661 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7662 0294 BB68     		ldr	r3, [r7, #8]	@ float
 7663 0296 4FF08F41 		mov	r1, #1199570944
 7664 029a 1846     		mov	r0, r3
 7665 029c FFF7FEFF 		bl	__aeabi_fmul
 7666 02a0 0346     		mov	r3, r0
 7667 02a2 1846     		mov	r0, r3
 7668 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 7669 02a8 0146     		mov	r1, r0
 7670 02aa 524A     		ldr	r2, .L443+8
 7671 02ac 2346     		mov	r3, r4
 7672 02ae DB00     		lsls	r3, r3, #3
 7673 02b0 1B1B     		subs	r3, r3, r4
 7674 02b2 1B01     		lsls	r3, r3, #4
 7675 02b4 1344     		add	r3, r3, r2
 7676 02b6 C833     		adds	r3, r3, #200
 7677 02b8 1960     		str	r1, [r3]
1205:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7678              		.loc 1 1205 0
 7679 02ba 4F4B     		ldr	r3, .L443+12
 7680 02bc 1B68     		ldr	r3, [r3]	@ float
 7681 02be FB60     		str	r3, [r7, #12]	@ float
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7682              		.loc 1 1206 0
 7683 02c0 0023     		movs	r3, #0
 7684 02c2 BB75     		strb	r3, [r7, #22]
 7685 02c4 0EE0     		b	.L376
 7686              	.L377:
1207:..\src/command_processing.c ****                 }
 7687              		.loc 1 1207 0 discriminator 3
 7688 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7689 02c8 C3F10303 		rsb	r3, r3, #3
 7690 02cc 07F10802 		add	r2, r7, #8
 7691 02d0 1344     		add	r3, r3, r2
 7692 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7693 02d4 07F10C01 		add	r1, r7, #12
 7694 02d8 0A44     		add	r2, r2, r1
 7695 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7696 02dc 1A70     		strb	r2, [r3]
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7697              		.loc 1 1206 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 185


 7698 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7699 02e0 0133     		adds	r3, r3, #1
 7700 02e2 BB75     		strb	r3, [r7, #22]
 7701              	.L376:
1206:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7702              		.loc 1 1206 0 is_stmt 0 discriminator 1
 7703 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7704 02e6 032B     		cmp	r3, #3
 7705 02e8 EDD9     		bls	.L377
1209:..\src/command_processing.c ****                 
 7706              		.loc 1 1209 0 is_stmt 1
 7707 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7708 02ec BB68     		ldr	r3, [r7, #8]	@ float
 7709 02ee 4FF08F41 		mov	r1, #1199570944
 7710 02f2 1846     		mov	r0, r3
 7711 02f4 FFF7FEFF 		bl	__aeabi_fmul
 7712 02f8 0346     		mov	r3, r0
 7713 02fa 1846     		mov	r0, r3
 7714 02fc FFF7FEFF 		bl	__aeabi_f2iz
 7715 0300 0146     		mov	r1, r0
 7716 0302 3C4A     		ldr	r2, .L443+8
 7717 0304 2346     		mov	r3, r4
 7718 0306 DB00     		lsls	r3, r3, #3
 7719 0308 1B1B     		subs	r3, r3, r4
 7720 030a 1B01     		lsls	r3, r3, #4
 7721 030c 1344     		add	r3, r3, r2
 7722 030e CC33     		adds	r3, r3, #204
 7723 0310 1960     		str	r1, [r3]
1211:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7724              		.loc 1 1211 0
 7725 0312 3A4B     		ldr	r3, .L443+16
 7726 0314 1B68     		ldr	r3, [r3]	@ float
 7727 0316 FB60     		str	r3, [r7, #12]	@ float
1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7728              		.loc 1 1212 0
 7729 0318 0023     		movs	r3, #0
 7730 031a BB75     		strb	r3, [r7, #22]
 7731 031c 0EE0     		b	.L378
 7732              	.L379:
1213:..\src/command_processing.c ****                 }
 7733              		.loc 1 1213 0 discriminator 3
 7734 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7735 0320 C3F10303 		rsb	r3, r3, #3
 7736 0324 07F10802 		add	r2, r7, #8
 7737 0328 1344     		add	r3, r3, r2
 7738 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7739 032c 07F10C01 		add	r1, r7, #12
 7740 0330 0A44     		add	r2, r2, r1
 7741 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7742 0334 1A70     		strb	r2, [r3]
1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7743              		.loc 1 1212 0 discriminator 3
 7744 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7745 0338 0133     		adds	r3, r3, #1
 7746 033a BB75     		strb	r3, [r7, #22]
 7747              	.L378:
1212:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 186


 7748              		.loc 1 1212 0 is_stmt 0 discriminator 1
 7749 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7750 033e 032B     		cmp	r3, #3
 7751 0340 EDD9     		bls	.L379
1215:..\src/command_processing.c ****             }
 7752              		.loc 1 1215 0 is_stmt 1
 7753 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7754 0344 BB68     		ldr	r3, [r7, #8]	@ float
 7755 0346 4FF08F41 		mov	r1, #1199570944
 7756 034a 1846     		mov	r0, r3
 7757 034c FFF7FEFF 		bl	__aeabi_fmul
 7758 0350 0346     		mov	r3, r0
 7759 0352 1846     		mov	r0, r3
 7760 0354 FFF7FEFF 		bl	__aeabi_f2iz
 7761 0358 0146     		mov	r1, r0
 7762 035a 264A     		ldr	r2, .L443+8
 7763 035c 2346     		mov	r3, r4
 7764 035e DB00     		lsls	r3, r3, #3
 7765 0360 1B1B     		subs	r3, r3, r4
 7766 0362 1B01     		lsls	r3, r3, #4
 7767 0364 1344     		add	r3, r3, r2
 7768 0366 D033     		adds	r3, r3, #208
 7769 0368 1960     		str	r1, [r3]
 7770              		.loc 1 1217 0
 7771 036a 01F04DB8 		b	.L380
 7772              	.L349:
1218:..\src/command_processing.c ****             
1219:..\src/command_processing.c ****         case 3:         //Current PID
1220:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7773              		.loc 1 1220 0
 7774 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7775 0370 1E49     		ldr	r1, .L443
 7776 0372 1346     		mov	r3, r2
 7777 0374 DB00     		lsls	r3, r3, #3
 7778 0376 9B1A     		subs	r3, r3, r2
 7779 0378 1B01     		lsls	r3, r3, #4
 7780 037a 0B44     		add	r3, r3, r1
 7781 037c 03F20F13 		addw	r3, r3, #271
 7782 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7783 0382 032B     		cmp	r3, #3
 7784 0384 00F09080 		beq	.L381
1221:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7785              		.loc 1 1221 0
 7786 0388 194B     		ldr	r3, .L443+4
 7787 038a 1B68     		ldr	r3, [r3]	@ float
 7788 038c FB60     		str	r3, [r7, #12]	@ float
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7789              		.loc 1 1222 0
 7790 038e 0023     		movs	r3, #0
 7791 0390 BB75     		strb	r3, [r7, #22]
 7792 0392 0EE0     		b	.L382
 7793              	.L383:
1223:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7794              		.loc 1 1223 0 discriminator 3
 7795 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7796 0396 C3F10303 		rsb	r3, r3, #3
 7797 039a 07F10802 		add	r2, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 187


 7798 039e 1344     		add	r3, r3, r2
 7799 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7800 03a2 07F10C01 		add	r1, r7, #12
 7801 03a6 0A44     		add	r2, r2, r1
 7802 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7803 03aa 1A70     		strb	r2, [r3]
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7804              		.loc 1 1222 0 discriminator 3
 7805 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7806 03ae 0133     		adds	r3, r3, #1
 7807 03b0 BB75     		strb	r3, [r7, #22]
 7808              	.L382:
1222:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7809              		.loc 1 1222 0 is_stmt 0 discriminator 1
 7810 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7811 03b4 032B     		cmp	r3, #3
 7812 03b6 EDD9     		bls	.L383
1224:..\src/command_processing.c ****                 }
1225:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 7813              		.loc 1 1225 0 is_stmt 1
 7814 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7815 03ba BB68     		ldr	r3, [r7, #8]	@ float
 7816 03bc 4FF08F41 		mov	r1, #1199570944
 7817 03c0 1846     		mov	r0, r3
 7818 03c2 FFF7FEFF 		bl	__aeabi_fmul
 7819 03c6 0346     		mov	r3, r0
 7820 03c8 1846     		mov	r0, r3
 7821 03ca FFF7FEFF 		bl	__aeabi_f2iz
 7822 03ce 0146     		mov	r1, r0
 7823 03d0 084A     		ldr	r2, .L443+8
 7824 03d2 2346     		mov	r3, r4
 7825 03d4 DB00     		lsls	r3, r3, #3
 7826 03d6 1B1B     		subs	r3, r3, r4
 7827 03d8 1B01     		lsls	r3, r3, #4
 7828 03da 1344     		add	r3, r3, r2
 7829 03dc BC33     		adds	r3, r3, #188
 7830 03de 1960     		str	r1, [r3]
1226:..\src/command_processing.c ****                 
1227:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7831              		.loc 1 1227 0
 7832 03e0 054B     		ldr	r3, .L443+12
 7833 03e2 1B68     		ldr	r3, [r3]	@ float
 7834 03e4 FB60     		str	r3, [r7, #12]	@ float
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7835              		.loc 1 1228 0
 7836 03e6 0023     		movs	r3, #0
 7837 03e8 BB75     		strb	r3, [r7, #22]
 7838 03ea 18E0     		b	.L384
 7839              	.L444:
 7840              		.align	2
 7841              	.L443:
 7842 03ec 00000000 		.word	c_mem
 7843 03f0 03000000 		.word	g_rx+3
 7844 03f4 00000000 		.word	g_mem
 7845 03f8 07000000 		.word	g_rx+7
 7846 03fc 0B000000 		.word	g_rx+11
 7847              	.L385:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 188


1229:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7848              		.loc 1 1229 0 discriminator 3
 7849 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7850 0402 C3F10303 		rsb	r3, r3, #3
 7851 0406 07F10802 		add	r2, r7, #8
 7852 040a 1344     		add	r3, r3, r2
 7853 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7854 040e 07F10C01 		add	r1, r7, #12
 7855 0412 0A44     		add	r2, r2, r1
 7856 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7857 0416 1A70     		strb	r2, [r3]
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7858              		.loc 1 1228 0 discriminator 3
 7859 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7860 041a 0133     		adds	r3, r3, #1
 7861 041c BB75     		strb	r3, [r7, #22]
 7862              	.L384:
1228:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7863              		.loc 1 1228 0 is_stmt 0 discriminator 1
 7864 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7865 0420 032B     		cmp	r3, #3
 7866 0422 EDD9     		bls	.L385
1230:..\src/command_processing.c ****                 }
1231:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 7867              		.loc 1 1231 0 is_stmt 1
 7868 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7869 0426 BB68     		ldr	r3, [r7, #8]	@ float
 7870 0428 4FF08F41 		mov	r1, #1199570944
 7871 042c 1846     		mov	r0, r3
 7872 042e FFF7FEFF 		bl	__aeabi_fmul
 7873 0432 0346     		mov	r3, r0
 7874 0434 1846     		mov	r0, r3
 7875 0436 FFF7FEFF 		bl	__aeabi_f2iz
 7876 043a 0146     		mov	r1, r0
 7877 043c B54A     		ldr	r2, .L445
 7878 043e 2346     		mov	r3, r4
 7879 0440 DB00     		lsls	r3, r3, #3
 7880 0442 1B1B     		subs	r3, r3, r4
 7881 0444 1B01     		lsls	r3, r3, #4
 7882 0446 1344     		add	r3, r3, r2
 7883 0448 C033     		adds	r3, r3, #192
 7884 044a 1960     		str	r1, [r3]
1232:..\src/command_processing.c ****                 
1233:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7885              		.loc 1 1233 0
 7886 044c B24B     		ldr	r3, .L445+4
 7887 044e 1B68     		ldr	r3, [r3]	@ float
 7888 0450 FB60     		str	r3, [r7, #12]	@ float
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7889              		.loc 1 1234 0
 7890 0452 0023     		movs	r3, #0
 7891 0454 BB75     		strb	r3, [r7, #22]
 7892 0456 0EE0     		b	.L386
 7893              	.L387:
1235:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7894              		.loc 1 1235 0 discriminator 3
 7895 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 189


 7896 045a C3F10303 		rsb	r3, r3, #3
 7897 045e 07F10802 		add	r2, r7, #8
 7898 0462 1344     		add	r3, r3, r2
 7899 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7900 0466 07F10C01 		add	r1, r7, #12
 7901 046a 0A44     		add	r2, r2, r1
 7902 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7903 046e 1A70     		strb	r2, [r3]
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7904              		.loc 1 1234 0 discriminator 3
 7905 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7906 0472 0133     		adds	r3, r3, #1
 7907 0474 BB75     		strb	r3, [r7, #22]
 7908              	.L386:
1234:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7909              		.loc 1 1234 0 is_stmt 0 discriminator 1
 7910 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7911 0478 032B     		cmp	r3, #3
 7912 047a EDD9     		bls	.L387
1236:..\src/command_processing.c ****                 }
1237:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 7913              		.loc 1 1237 0 is_stmt 1
 7914 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7915 047e BB68     		ldr	r3, [r7, #8]	@ float
 7916 0480 4FF08F41 		mov	r1, #1199570944
 7917 0484 1846     		mov	r0, r3
 7918 0486 FFF7FEFF 		bl	__aeabi_fmul
 7919 048a 0346     		mov	r3, r0
 7920 048c 1846     		mov	r0, r3
 7921 048e FFF7FEFF 		bl	__aeabi_f2iz
 7922 0492 0146     		mov	r1, r0
 7923 0494 9F4A     		ldr	r2, .L445
 7924 0496 2346     		mov	r3, r4
 7925 0498 DB00     		lsls	r3, r3, #3
 7926 049a 1B1B     		subs	r3, r3, r4
 7927 049c 1B01     		lsls	r3, r3, #4
 7928 049e 1344     		add	r3, r3, r2
 7929 04a0 C433     		adds	r3, r3, #196
 7930 04a2 1960     		str	r1, [r3]
1238:..\src/command_processing.c ****             }
1239:..\src/command_processing.c ****             else {
1240:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1241:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1242:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1243:..\src/command_processing.c ****                 }
1244:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1245:..\src/command_processing.c ****                 
1246:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1247:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1248:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1249:..\src/command_processing.c ****                 }
1250:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1251:..\src/command_processing.c ****                 
1252:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1253:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1254:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1255:..\src/command_processing.c ****                 }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 190


1256:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1257:..\src/command_processing.c ****             }            
1258:..\src/command_processing.c ****             break;  
 7931              		.loc 1 1258 0
 7932 04a4 00F0B0BF 		b	.L380
 7933              	.L381:
1240:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7934              		.loc 1 1240 0
 7935 04a8 9C4B     		ldr	r3, .L445+8
 7936 04aa 1B68     		ldr	r3, [r3]	@ float
 7937 04ac FB60     		str	r3, [r7, #12]	@ float
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7938              		.loc 1 1241 0
 7939 04ae 0023     		movs	r3, #0
 7940 04b0 BB75     		strb	r3, [r7, #22]
 7941 04b2 0EE0     		b	.L389
 7942              	.L390:
1242:..\src/command_processing.c ****                 }
 7943              		.loc 1 1242 0 discriminator 3
 7944 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7945 04b6 C3F10303 		rsb	r3, r3, #3
 7946 04ba 07F10802 		add	r2, r7, #8
 7947 04be 1344     		add	r3, r3, r2
 7948 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7949 04c2 07F10C01 		add	r1, r7, #12
 7950 04c6 0A44     		add	r2, r2, r1
 7951 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7952 04ca 1A70     		strb	r2, [r3]
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7953              		.loc 1 1241 0 discriminator 3
 7954 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7955 04ce 0133     		adds	r3, r3, #1
 7956 04d0 BB75     		strb	r3, [r7, #22]
 7957              	.L389:
1241:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7958              		.loc 1 1241 0 is_stmt 0 discriminator 1
 7959 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7960 04d4 032B     		cmp	r3, #3
 7961 04d6 EDD9     		bls	.L390
1244:..\src/command_processing.c ****                 
 7962              		.loc 1 1244 0 is_stmt 1
 7963 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7964 04da BB68     		ldr	r3, [r7, #8]	@ float
 7965 04dc 4FF08F41 		mov	r1, #1199570944
 7966 04e0 1846     		mov	r0, r3
 7967 04e2 FFF7FEFF 		bl	__aeabi_fmul
 7968 04e6 0346     		mov	r3, r0
 7969 04e8 1846     		mov	r0, r3
 7970 04ea FFF7FEFF 		bl	__aeabi_f2iz
 7971 04ee 0146     		mov	r1, r0
 7972 04f0 884A     		ldr	r2, .L445
 7973 04f2 2346     		mov	r3, r4
 7974 04f4 DB00     		lsls	r3, r3, #3
 7975 04f6 1B1B     		subs	r3, r3, r4
 7976 04f8 1B01     		lsls	r3, r3, #4
 7977 04fa 1344     		add	r3, r3, r2
 7978 04fc D433     		adds	r3, r3, #212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 191


 7979 04fe 1960     		str	r1, [r3]
1246:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7980              		.loc 1 1246 0
 7981 0500 874B     		ldr	r3, .L445+12
 7982 0502 1B68     		ldr	r3, [r3]	@ float
 7983 0504 FB60     		str	r3, [r7, #12]	@ float
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7984              		.loc 1 1247 0
 7985 0506 0023     		movs	r3, #0
 7986 0508 BB75     		strb	r3, [r7, #22]
 7987 050a 0EE0     		b	.L391
 7988              	.L392:
1248:..\src/command_processing.c ****                 }
 7989              		.loc 1 1248 0 discriminator 3
 7990 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7991 050e C3F10303 		rsb	r3, r3, #3
 7992 0512 07F10802 		add	r2, r7, #8
 7993 0516 1344     		add	r3, r3, r2
 7994 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7995 051a 07F10C01 		add	r1, r7, #12
 7996 051e 0A44     		add	r2, r2, r1
 7997 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7998 0522 1A70     		strb	r2, [r3]
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7999              		.loc 1 1247 0 discriminator 3
 8000 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8001 0526 0133     		adds	r3, r3, #1
 8002 0528 BB75     		strb	r3, [r7, #22]
 8003              	.L391:
1247:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8004              		.loc 1 1247 0 is_stmt 0 discriminator 1
 8005 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8006 052c 032B     		cmp	r3, #3
 8007 052e EDD9     		bls	.L392
1250:..\src/command_processing.c ****                 
 8008              		.loc 1 1250 0 is_stmt 1
 8009 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8010 0532 BB68     		ldr	r3, [r7, #8]	@ float
 8011 0534 4FF08F41 		mov	r1, #1199570944
 8012 0538 1846     		mov	r0, r3
 8013 053a FFF7FEFF 		bl	__aeabi_fmul
 8014 053e 0346     		mov	r3, r0
 8015 0540 1846     		mov	r0, r3
 8016 0542 FFF7FEFF 		bl	__aeabi_f2iz
 8017 0546 0146     		mov	r1, r0
 8018 0548 724A     		ldr	r2, .L445
 8019 054a 2346     		mov	r3, r4
 8020 054c DB00     		lsls	r3, r3, #3
 8021 054e 1B1B     		subs	r3, r3, r4
 8022 0550 1B01     		lsls	r3, r3, #4
 8023 0552 1344     		add	r3, r3, r2
 8024 0554 D833     		adds	r3, r3, #216
 8025 0556 1960     		str	r1, [r3]
1252:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8026              		.loc 1 1252 0
 8027 0558 6F4B     		ldr	r3, .L445+4
 8028 055a 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 192


 8029 055c FB60     		str	r3, [r7, #12]	@ float
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8030              		.loc 1 1253 0
 8031 055e 0023     		movs	r3, #0
 8032 0560 BB75     		strb	r3, [r7, #22]
 8033 0562 0EE0     		b	.L393
 8034              	.L394:
1254:..\src/command_processing.c ****                 }
 8035              		.loc 1 1254 0 discriminator 3
 8036 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8037 0566 C3F10303 		rsb	r3, r3, #3
 8038 056a 07F10802 		add	r2, r7, #8
 8039 056e 1344     		add	r3, r3, r2
 8040 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8041 0572 07F10C01 		add	r1, r7, #12
 8042 0576 0A44     		add	r2, r2, r1
 8043 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8044 057a 1A70     		strb	r2, [r3]
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8045              		.loc 1 1253 0 discriminator 3
 8046 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8047 057e 0133     		adds	r3, r3, #1
 8048 0580 BB75     		strb	r3, [r7, #22]
 8049              	.L393:
1253:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8050              		.loc 1 1253 0 is_stmt 0 discriminator 1
 8051 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8052 0584 032B     		cmp	r3, #3
 8053 0586 EDD9     		bls	.L394
1256:..\src/command_processing.c ****             }            
 8054              		.loc 1 1256 0 is_stmt 1
 8055 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8056 058a BB68     		ldr	r3, [r7, #8]	@ float
 8057 058c 4FF08F41 		mov	r1, #1199570944
 8058 0590 1846     		mov	r0, r3
 8059 0592 FFF7FEFF 		bl	__aeabi_fmul
 8060 0596 0346     		mov	r3, r0
 8061 0598 1846     		mov	r0, r3
 8062 059a FFF7FEFF 		bl	__aeabi_f2iz
 8063 059e 0146     		mov	r1, r0
 8064 05a0 5C4A     		ldr	r2, .L445
 8065 05a2 2346     		mov	r3, r4
 8066 05a4 DB00     		lsls	r3, r3, #3
 8067 05a6 1B1B     		subs	r3, r3, r4
 8068 05a8 1B01     		lsls	r3, r3, #4
 8069 05aa 1344     		add	r3, r3, r2
 8070 05ac DC33     		adds	r3, r3, #220
 8071 05ae 1960     		str	r1, [r3]
 8072              		.loc 1 1258 0
 8073 05b0 00F02ABF 		b	.L380
 8074              	.L350:
1259:..\src/command_processing.c ****             
1260:..\src/command_processing.c ****         case 5:         //Input mode
1261:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 8075              		.loc 1 1261 0
 8076 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8077 05b6 5B4B     		ldr	r3, .L445+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 193


 8078 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8079 05ba 5649     		ldr	r1, .L445
 8080 05bc 1346     		mov	r3, r2
 8081 05be DB00     		lsls	r3, r3, #3
 8082 05c0 9B1A     		subs	r3, r3, r2
 8083 05c2 1B01     		lsls	r3, r3, #4
 8084 05c4 0B44     		add	r3, r3, r1
 8085 05c6 03F58773 		add	r3, r3, #270
 8086 05ca 0246     		mov	r2, r0
 8087 05cc 1A70     		strb	r2, [r3]
1262:..\src/command_processing.c ****             
1263:..\src/command_processing.c ****             // Hold the actual position
1264:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 8088              		.loc 1 1264 0
 8089 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8090 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8091 05d2 5048     		ldr	r0, .L445
 8092 05d4 1346     		mov	r3, r2
 8093 05d6 DB00     		lsls	r3, r3, #3
 8094 05d8 9B1A     		subs	r3, r3, r2
 8095 05da 1B01     		lsls	r3, r3, #4
 8096 05dc 0344     		add	r3, r3, r0
 8097 05de 03F58873 		add	r3, r3, #272
 8098 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8099 05e4 1846     		mov	r0, r3
 8100 05e6 504A     		ldr	r2, .L445+20
 8101 05e8 3423     		movs	r3, #52
 8102 05ea 03FB00F3 		mul	r3, r3, r0
 8103 05ee 1344     		add	r3, r3, r2
 8104 05f0 1A68     		ldr	r2, [r3]
 8105 05f2 4E48     		ldr	r0, .L445+24
 8106 05f4 0B01     		lsls	r3, r1, #4
 8107 05f6 0344     		add	r3, r3, r0
 8108 05f8 1A60     		str	r2, [r3]
1265:..\src/command_processing.c ****             break;   
 8109              		.loc 1 1265 0
 8110 05fa 00F005BF 		b	.L380
 8111              	.L351:
1266:..\src/command_processing.c **** 
1267:..\src/command_processing.c ****         case 8:         //Measurement Offset
1268:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 8112              		.loc 1 1268 0
 8113 05fe 0023     		movs	r3, #0
 8114 0600 FB75     		strb	r3, [r7, #23]
 8115 0602 7EE0     		b	.L395
 8116              	.L396:
1269:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8117              		.loc 1 1269 0 discriminator 3
 8118 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8119 0606 4349     		ldr	r1, .L445
 8120 0608 1346     		mov	r3, r2
 8121 060a DB00     		lsls	r3, r3, #3
 8122 060c 9B1A     		subs	r3, r3, r2
 8123 060e 1B01     		lsls	r3, r3, #4
 8124 0610 0B44     		add	r3, r3, r1
 8125 0612 03F58873 		add	r3, r3, #272
 8126 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 194


 8127 0618 1C46     		mov	r4, r3
 8128 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8129 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8130 061e 5B00     		lsls	r3, r3, #1
 8131 0620 0333     		adds	r3, r3, #3
 8132 0622 4049     		ldr	r1, .L445+16
 8133 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8134 0626 1B02     		lsls	r3, r3, #8
 8135 0628 19B2     		sxth	r1, r3
 8136 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8137 062c 0233     		adds	r3, r3, #2
 8138 062e 5B00     		lsls	r3, r3, #1
 8139 0630 3C48     		ldr	r0, .L445+16
 8140 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 8141 0634 1BB2     		sxth	r3, r3
 8142 0636 0B43     		orrs	r3, r3, r1
 8143 0638 1BB2     		sxth	r3, r3
 8144 063a 1846     		mov	r0, r3
 8145 063c 3549     		ldr	r1, .L445
 8146 063e 2346     		mov	r3, r4
 8147 0640 5B00     		lsls	r3, r3, #1
 8148 0642 2344     		add	r3, r3, r4
 8149 0644 9B00     		lsls	r3, r3, #2
 8150 0646 1344     		add	r3, r3, r2
 8151 0648 6633     		adds	r3, r3, #102
 8152 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1270:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 8153              		.loc 1 1270 0 discriminator 3
 8154 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8155 0650 3049     		ldr	r1, .L445
 8156 0652 1346     		mov	r3, r2
 8157 0654 DB00     		lsls	r3, r3, #3
 8158 0656 9B1A     		subs	r3, r3, r2
 8159 0658 1B01     		lsls	r3, r3, #4
 8160 065a 0B44     		add	r3, r3, r1
 8161 065c 03F58873 		add	r3, r3, #272
 8162 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8163 0662 1D46     		mov	r5, r3
 8164 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 8165 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8166 0668 2A48     		ldr	r0, .L445
 8167 066a 1346     		mov	r3, r2
 8168 066c DB00     		lsls	r3, r3, #3
 8169 066e 9B1A     		subs	r3, r3, r2
 8170 0670 1B01     		lsls	r3, r3, #4
 8171 0672 0344     		add	r3, r3, r0
 8172 0674 03F58873 		add	r3, r3, #272
 8173 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8174 067a 1C46     		mov	r4, r3
 8175 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8176 067e 2548     		ldr	r0, .L445
 8177 0680 2346     		mov	r3, r4
 8178 0682 5B00     		lsls	r3, r3, #1
 8179 0684 2344     		add	r3, r3, r4
 8180 0686 9B00     		lsls	r3, r3, #2
 8181 0688 1344     		add	r3, r3, r2
 8182 068a 6633     		adds	r3, r3, #102
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 195


 8183 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 8184 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8185 0692 204C     		ldr	r4, .L445
 8186 0694 1346     		mov	r3, r2
 8187 0696 DB00     		lsls	r3, r3, #3
 8188 0698 9B1A     		subs	r3, r3, r2
 8189 069a 1B01     		lsls	r3, r3, #4
 8190 069c 2344     		add	r3, r3, r4
 8191 069e 03F58873 		add	r3, r3, #272
 8192 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8193 06a4 1E46     		mov	r6, r3
 8194 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8195 06a8 1A4C     		ldr	r4, .L445
 8196 06aa 3346     		mov	r3, r6
 8197 06ac 5B00     		lsls	r3, r3, #1
 8198 06ae 3344     		add	r3, r3, r6
 8199 06b0 1B01     		lsls	r3, r3, #4
 8200 06b2 2344     		add	r3, r3, r4
 8201 06b4 1344     		add	r3, r3, r2
 8202 06b6 03F29513 		addw	r3, r3, #405
 8203 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8204 06bc 00FA03F2 		lsl	r2, r0, r3
 8205 06c0 1448     		ldr	r0, .L445
 8206 06c2 2B46     		mov	r3, r5
 8207 06c4 5B00     		lsls	r3, r3, #1
 8208 06c6 2B44     		add	r3, r3, r5
 8209 06c8 9B00     		lsls	r3, r3, #2
 8210 06ca 0B44     		add	r3, r3, r1
 8211 06cc 6633     		adds	r3, r3, #102
 8212 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1271:..\src/command_processing.c **** 
1272:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 8213              		.loc 1 1272 0 discriminator 3
 8214 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8215 06d4 0F49     		ldr	r1, .L445
 8216 06d6 1346     		mov	r3, r2
 8217 06d8 DB00     		lsls	r3, r3, #3
 8218 06da 9B1A     		subs	r3, r3, r2
 8219 06dc 1B01     		lsls	r3, r3, #4
 8220 06de 0B44     		add	r3, r3, r1
 8221 06e0 03F58873 		add	r3, r3, #272
 8222 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8223 06e6 1846     		mov	r0, r3
 8224 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8225 06ea 0F49     		ldr	r1, .L445+20
 8226 06ec 3422     		movs	r2, #52
 8227 06ee 02FB00F2 		mul	r2, r2, r0
 8228 06f2 0A44     		add	r2, r2, r1
 8229 06f4 1344     		add	r3, r3, r2
 8230 06f6 1833     		adds	r3, r3, #24
 8231 06f8 0022     		movs	r2, #0
 8232 06fa 1A70     		strb	r2, [r3]
1268:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8233              		.loc 1 1268 0 discriminator 3
 8234 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8235 06fe 0133     		adds	r3, r3, #1
 8236 0700 FB75     		strb	r3, [r7, #23]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 196


 8237              	.L395:
1268:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8238              		.loc 1 1268 0 is_stmt 0 discriminator 1
 8239 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8240 0704 022B     		cmp	r3, #2
 8241 0706 7FF67DAF 		bls	.L396
1273:..\src/command_processing.c ****             }
1274:..\src/command_processing.c ****             reset_last_value_flag = 1;
 8242              		.loc 1 1274 0 is_stmt 1
 8243 070a 094B     		ldr	r3, .L445+28
 8244 070c 0122     		movs	r2, #1
 8245 070e 1A70     		strb	r2, [r3]
1275:..\src/command_processing.c ****             break;
 8246              		.loc 1 1275 0
 8247 0710 00F07ABE 		b	.L380
 8248              	.L446:
 8249              		.align	2
 8250              	.L445:
 8251 0714 00000000 		.word	g_mem
 8252 0718 0B000000 		.word	g_rx+11
 8253 071c 03000000 		.word	g_rx+3
 8254 0720 07000000 		.word	g_rx+7
 8255 0724 00000000 		.word	g_rx
 8256 0728 00000000 		.word	g_meas
 8257 072c 00000000 		.word	g_refNew
 8258 0730 00000000 		.word	reset_last_value_flag
 8259              	.L352:
1276:..\src/command_processing.c ****     
1277:..\src/command_processing.c ****         case 11:        //Position limits
1278:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 8260              		.loc 1 1278 0
 8261 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8262 0736 C14B     		ldr	r3, .L447
 8263 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8264 073a 1906     		lsls	r1, r3, #24
 8265 073c BF4B     		ldr	r3, .L447
 8266 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8267 0740 1B04     		lsls	r3, r3, #16
 8268 0742 1943     		orrs	r1, r1, r3
 8269 0744 BD4B     		ldr	r3, .L447
 8270 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8271 0748 1B02     		lsls	r3, r3, #8
 8272 074a 0B43     		orrs	r3, r3, r1
 8273 074c BB49     		ldr	r1, .L447
 8274 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 8275 0750 1943     		orrs	r1, r1, r3
 8276 0752 BB48     		ldr	r0, .L447+4
 8277 0754 1346     		mov	r3, r2
 8278 0756 DB00     		lsls	r3, r3, #3
 8279 0758 9B1A     		subs	r3, r3, r2
 8280 075a 1B01     		lsls	r3, r3, #4
 8281 075c 0344     		add	r3, r3, r0
 8282 075e E433     		adds	r3, r3, #228
 8283 0760 1960     		str	r1, [r3]
1279:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 8284              		.loc 1 1279 0
 8285 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 197


 8286 0764 B54B     		ldr	r3, .L447
 8287 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 8288 0768 1906     		lsls	r1, r3, #24
 8289 076a B44B     		ldr	r3, .L447
 8290 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 8291 076e 1B04     		lsls	r3, r3, #16
 8292 0770 1943     		orrs	r1, r1, r3
 8293 0772 B24B     		ldr	r3, .L447
 8294 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 8295 0776 1B02     		lsls	r3, r3, #8
 8296 0778 0B43     		orrs	r3, r3, r1
 8297 077a B049     		ldr	r1, .L447
 8298 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 8299 077e 1943     		orrs	r1, r1, r3
 8300 0780 AF48     		ldr	r0, .L447+4
 8301 0782 1346     		mov	r3, r2
 8302 0784 DB00     		lsls	r3, r3, #3
 8303 0786 9B1A     		subs	r3, r3, r2
 8304 0788 1B01     		lsls	r3, r3, #4
 8305 078a 0344     		add	r3, r3, r0
 8306 078c E833     		adds	r3, r3, #232
 8307 078e 1960     		str	r1, [r3]
1280:..\src/command_processing.c **** 
1281:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 8308              		.loc 1 1281 0
 8309 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8310 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8311 0794 AA48     		ldr	r0, .L447+4
 8312 0796 0B46     		mov	r3, r1
 8313 0798 DB00     		lsls	r3, r3, #3
 8314 079a 5B1A     		subs	r3, r3, r1
 8315 079c 1B01     		lsls	r3, r3, #4
 8316 079e 0344     		add	r3, r3, r0
 8317 07a0 E433     		adds	r3, r3, #228
 8318 07a2 1868     		ldr	r0, [r3]
 8319 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8320 07a6 A64C     		ldr	r4, .L447+4
 8321 07a8 0B46     		mov	r3, r1
 8322 07aa DB00     		lsls	r3, r3, #3
 8323 07ac 5B1A     		subs	r3, r3, r1
 8324 07ae 1B01     		lsls	r3, r3, #4
 8325 07b0 2344     		add	r3, r3, r4
 8326 07b2 03F58873 		add	r3, r3, #272
 8327 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8328 07b8 1C46     		mov	r4, r3
 8329 07ba A149     		ldr	r1, .L447+4
 8330 07bc 2346     		mov	r3, r4
 8331 07be 5B00     		lsls	r3, r3, #1
 8332 07c0 2344     		add	r3, r3, r4
 8333 07c2 1B01     		lsls	r3, r3, #4
 8334 07c4 0B44     		add	r3, r3, r1
 8335 07c6 03F29513 		addw	r3, r3, #405
 8336 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8337 07cc 00FA03F1 		lsl	r1, r0, r3
 8338 07d0 9B48     		ldr	r0, .L447+4
 8339 07d2 1346     		mov	r3, r2
 8340 07d4 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 198


 8341 07d6 9B1A     		subs	r3, r3, r2
 8342 07d8 1B01     		lsls	r3, r3, #4
 8343 07da 0344     		add	r3, r3, r0
 8344 07dc E433     		adds	r3, r3, #228
 8345 07de 1960     		str	r1, [r3]
1282:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 8346              		.loc 1 1282 0
 8347 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8348 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8349 07e4 9648     		ldr	r0, .L447+4
 8350 07e6 0B46     		mov	r3, r1
 8351 07e8 DB00     		lsls	r3, r3, #3
 8352 07ea 5B1A     		subs	r3, r3, r1
 8353 07ec 1B01     		lsls	r3, r3, #4
 8354 07ee 0344     		add	r3, r3, r0
 8355 07f0 E833     		adds	r3, r3, #232
 8356 07f2 1868     		ldr	r0, [r3]
 8357 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8358 07f6 924C     		ldr	r4, .L447+4
 8359 07f8 0B46     		mov	r3, r1
 8360 07fa DB00     		lsls	r3, r3, #3
 8361 07fc 5B1A     		subs	r3, r3, r1
 8362 07fe 1B01     		lsls	r3, r3, #4
 8363 0800 2344     		add	r3, r3, r4
 8364 0802 03F58873 		add	r3, r3, #272
 8365 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8366 0808 1C46     		mov	r4, r3
 8367 080a 8D49     		ldr	r1, .L447+4
 8368 080c 2346     		mov	r3, r4
 8369 080e 5B00     		lsls	r3, r3, #1
 8370 0810 2344     		add	r3, r3, r4
 8371 0812 1B01     		lsls	r3, r3, #4
 8372 0814 0B44     		add	r3, r3, r1
 8373 0816 03F29513 		addw	r3, r3, #405
 8374 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8375 081c 00FA03F1 		lsl	r1, r0, r3
 8376 0820 8748     		ldr	r0, .L447+4
 8377 0822 1346     		mov	r3, r2
 8378 0824 DB00     		lsls	r3, r3, #3
 8379 0826 9B1A     		subs	r3, r3, r2
 8380 0828 1B01     		lsls	r3, r3, #4
 8381 082a 0344     		add	r3, r3, r0
 8382 082c E833     		adds	r3, r3, #232
 8383 082e 1960     		str	r1, [r3]
1283:..\src/command_processing.c ****             break;            
 8384              		.loc 1 1283 0
 8385 0830 00F0EABD 		b	.L380
 8386              	.L353:
1284:..\src/command_processing.c **** 
1285:..\src/command_processing.c ****         case 23:        //Rest Position
1286:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 8387              		.loc 1 1286 0
 8388 0834 814B     		ldr	r3, .L447
 8389 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8390 0838 1A06     		lsls	r2, r3, #24
 8391 083a 804B     		ldr	r3, .L447
 8392 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 199


 8393 083e 1B04     		lsls	r3, r3, #16
 8394 0840 1A43     		orrs	r2, r2, r3
 8395 0842 7E4B     		ldr	r3, .L447
 8396 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8397 0846 1B02     		lsls	r3, r3, #8
 8398 0848 1343     		orrs	r3, r3, r2
 8399 084a 7C4A     		ldr	r2, .L447
 8400 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8401 084e 1343     		orrs	r3, r3, r2
 8402 0850 7B4A     		ldr	r2, .L447+4
 8403 0852 C2F8A032 		str	r3, [r2, #672]
1287:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 8404              		.loc 1 1287 0
 8405 0856 7A4B     		ldr	r3, .L447+4
 8406 0858 D3F8A012 		ldr	r1, [r3, #672]
 8407 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8408 085e 7848     		ldr	r0, .L447+4
 8409 0860 1346     		mov	r3, r2
 8410 0862 DB00     		lsls	r3, r3, #3
 8411 0864 9B1A     		subs	r3, r3, r2
 8412 0866 1B01     		lsls	r3, r3, #4
 8413 0868 0344     		add	r3, r3, r0
 8414 086a 03F58873 		add	r3, r3, #272
 8415 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8416 0870 1846     		mov	r0, r3
 8417 0872 734A     		ldr	r2, .L447+4
 8418 0874 0346     		mov	r3, r0
 8419 0876 5B00     		lsls	r3, r3, #1
 8420 0878 0344     		add	r3, r3, r0
 8421 087a 1B01     		lsls	r3, r3, #4
 8422 087c 1344     		add	r3, r3, r2
 8423 087e 03F29513 		addw	r3, r3, #405
 8424 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8425 0884 01FA03F3 		lsl	r3, r1, r3
 8426 0888 6D4A     		ldr	r2, .L447+4
 8427 088a C2F8A032 		str	r3, [r2, #672]
1288:..\src/command_processing.c ****             break; 
 8428              		.loc 1 1288 0
 8429 088e 00F0BBBD 		b	.L380
 8430              	.L354:
1289:..\src/command_processing.c ****             
1290:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1291:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 8431              		.loc 1 1291 0
 8432 0892 6A4B     		ldr	r3, .L447
 8433 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8434 0896 1A06     		lsls	r2, r3, #24
 8435 0898 684B     		ldr	r3, .L447
 8436 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8437 089c 1B04     		lsls	r3, r3, #16
 8438 089e 1A43     		orrs	r2, r2, r3
 8439 08a0 664B     		ldr	r3, .L447
 8440 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8441 08a4 1B02     		lsls	r3, r3, #8
 8442 08a6 1343     		orrs	r3, r3, r2
 8443 08a8 644A     		ldr	r2, .L447
 8444 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 200


 8445 08ac 1343     		orrs	r3, r3, r2
 8446 08ae 644A     		ldr	r2, .L447+4
 8447 08b0 C2F8A432 		str	r3, [r2, #676]
1292:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 8448              		.loc 1 1292 0
 8449 08b4 624B     		ldr	r3, .L447+4
 8450 08b6 D3F8A432 		ldr	r3, [r3, #676]
 8451 08ba 092B     		cmp	r3, #9
 8452 08bc 00F39B85 		bgt	.L438
 8453              		.loc 1 1292 0 is_stmt 0 discriminator 1
 8454 08c0 5F4B     		ldr	r3, .L447+4
 8455 08c2 0A22     		movs	r2, #10
 8456 08c4 C3F8A422 		str	r2, [r3, #676]
1293:..\src/command_processing.c ****            break; 
 8457              		.loc 1 1293 0 is_stmt 1 discriminator 1
 8458 08c8 00F095BD 		b	.L438
 8459              	.L355:
1294:..\src/command_processing.c ****             
1295:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1296:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8460              		.loc 1 1296 0
 8461 08cc 5B4B     		ldr	r3, .L447
 8462 08ce DB78     		ldrb	r3, [r3, #3]
 8463 08d0 BB74     		strb	r3, [r7, #18]
1297:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 8464              		.loc 1 1297 0
 8465 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8466 08d4 002B     		cmp	r3, #0
 8467 08d6 04D0     		beq	.L398
1298:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 8468              		.loc 1 1298 0
 8469 08d8 594B     		ldr	r3, .L447+4
 8470 08da 0122     		movs	r2, #1
 8471 08dc 83F8A720 		strb	r2, [r3, #167]
 8472 08e0 03E0     		b	.L399
 8473              	.L398:
1299:..\src/command_processing.c ****             } else {            // 0
1300:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 8474              		.loc 1 1300 0
 8475 08e2 574B     		ldr	r3, .L447+4
 8476 08e4 0022     		movs	r2, #0
 8477 08e6 83F8A720 		strb	r2, [r3, #167]
 8478              	.L399:
1301:..\src/command_processing.c ****             }
1302:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 8479              		.loc 1 1302 0
 8480 08ea 564B     		ldr	r3, .L447+8
 8481 08ec 0122     		movs	r2, #1
 8482 08ee 1A70     		strb	r2, [r3]
1303:..\src/command_processing.c **** 
1304:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 8483              		.loc 1 1304 0
 8484 08f0 534B     		ldr	r3, .L447+4
 8485 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8486 08f6 002B     		cmp	r3, #0
 8487 08f8 40F07F85 		bne	.L439
1305:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 201


1306:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 8488              		.loc 1 1306 0
 8489 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8490 08fe 504B     		ldr	r3, .L447+4
 8491 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 8492 0904 4E49     		ldr	r1, .L447+4
 8493 0906 1346     		mov	r3, r2
 8494 0908 DB00     		lsls	r3, r3, #3
 8495 090a 9B1A     		subs	r3, r3, r2
 8496 090c 1B01     		lsls	r3, r3, #4
 8497 090e 0B44     		add	r3, r3, r1
 8498 0910 03F58873 		add	r3, r3, #272
 8499 0914 0246     		mov	r2, r0
 8500 0916 1A70     		strb	r2, [r3]
1307:..\src/command_processing.c ****                 
1308:..\src/command_processing.c ****                 // Change also gears parameters
1309:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 8501              		.loc 1 1309 0
 8502 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8503 091a 4949     		ldr	r1, .L447+4
 8504 091c 1346     		mov	r3, r2
 8505 091e DB00     		lsls	r3, r3, #3
 8506 0920 9B1A     		subs	r3, r3, r2
 8507 0922 1B01     		lsls	r3, r3, #4
 8508 0924 0B44     		add	r3, r3, r1
 8509 0926 03F58873 		add	r3, r3, #272
 8510 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8511 092c 1946     		mov	r1, r3
 8512 092e 444A     		ldr	r2, .L447+4
 8513 0930 0B46     		mov	r3, r1
 8514 0932 5B00     		lsls	r3, r3, #1
 8515 0934 0B44     		add	r3, r3, r1
 8516 0936 1B01     		lsls	r3, r3, #4
 8517 0938 1344     		add	r3, r3, r2
 8518 093a 03F5D873 		add	r3, r3, #432
 8519 093e 0122     		movs	r2, #1
 8520 0940 1A70     		strb	r2, [r3]
1310:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 8521              		.loc 1 1310 0
 8522 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8523 0944 3E49     		ldr	r1, .L447+4
 8524 0946 1346     		mov	r3, r2
 8525 0948 DB00     		lsls	r3, r3, #3
 8526 094a 9B1A     		subs	r3, r3, r2
 8527 094c 1B01     		lsls	r3, r3, #4
 8528 094e 0B44     		add	r3, r3, r1
 8529 0950 03F58873 		add	r3, r3, #272
 8530 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8531 0956 1946     		mov	r1, r3
 8532 0958 394A     		ldr	r2, .L447+4
 8533 095a 0B46     		mov	r3, r1
 8534 095c 5B00     		lsls	r3, r3, #1
 8535 095e 0B44     		add	r3, r3, r1
 8536 0960 1B01     		lsls	r3, r3, #4
 8537 0962 1344     		add	r3, r3, r2
 8538 0964 03F2B513 		addw	r3, r3, #437
 8539 0968 2322     		movs	r2, #35
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 202


 8540 096a 1A70     		strb	r2, [r3]
1311:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 8541              		.loc 1 1311 0
 8542 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8543 096e 3449     		ldr	r1, .L447+4
 8544 0970 1346     		mov	r3, r2
 8545 0972 DB00     		lsls	r3, r3, #3
 8546 0974 9B1A     		subs	r3, r3, r2
 8547 0976 1B01     		lsls	r3, r3, #4
 8548 0978 0B44     		add	r3, r3, r1
 8549 097a 03F58873 		add	r3, r3, #272
 8550 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8551 0980 1946     		mov	r1, r3
 8552 0982 2F4A     		ldr	r2, .L447+4
 8553 0984 0B46     		mov	r3, r1
 8554 0986 5B00     		lsls	r3, r3, #1
 8555 0988 0B44     		add	r3, r3, r1
 8556 098a 1B01     		lsls	r3, r3, #4
 8557 098c 1344     		add	r3, r3, r2
 8558 098e 03F5DB73 		add	r3, r3, #438
 8559 0992 0322     		movs	r2, #3
 8560 0994 1A70     		strb	r2, [r3]
1312:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 8561              		.loc 1 1312 0
 8562 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8563 0998 2949     		ldr	r1, .L447+4
 8564 099a 1346     		mov	r3, r2
 8565 099c DB00     		lsls	r3, r3, #3
 8566 099e 9B1A     		subs	r3, r3, r2
 8567 09a0 1B01     		lsls	r3, r3, #4
 8568 09a2 0B44     		add	r3, r3, r1
 8569 09a4 03F58873 		add	r3, r3, #272
 8570 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8571 09aa 1946     		mov	r1, r3
 8572 09ac 244A     		ldr	r2, .L447+4
 8573 09ae 0B46     		mov	r3, r1
 8574 09b0 5B00     		lsls	r3, r3, #1
 8575 09b2 0B44     		add	r3, r3, r1
 8576 09b4 1B01     		lsls	r3, r3, #4
 8577 09b6 1344     		add	r3, r3, r2
 8578 09b8 03F2B713 		addw	r3, r3, #439
 8579 09bc FF22     		movs	r2, #255
 8580 09be 1A70     		strb	r2, [r3]
1313:..\src/command_processing.c ****                 
1314:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1315:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 8581              		.loc 1 1315 0
 8582 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8583 09c2 1F49     		ldr	r1, .L447+4
 8584 09c4 1346     		mov	r3, r2
 8585 09c6 DB00     		lsls	r3, r3, #3
 8586 09c8 9B1A     		subs	r3, r3, r2
 8587 09ca 1B01     		lsls	r3, r3, #4
 8588 09cc 0B44     		add	r3, r3, r1
 8589 09ce 03F21113 		addw	r3, r3, #273
 8590 09d2 0122     		movs	r2, #1
 8591 09d4 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 203


1316:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 8592              		.loc 1 1316 0
 8593 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8594 09d8 1949     		ldr	r1, .L447+4
 8595 09da 1346     		mov	r3, r2
 8596 09dc DB00     		lsls	r3, r3, #3
 8597 09de 9B1A     		subs	r3, r3, r2
 8598 09e0 1B01     		lsls	r3, r3, #4
 8599 09e2 0B44     		add	r3, r3, r1
 8600 09e4 03F58973 		add	r3, r3, #274
 8601 09e8 0122     		movs	r2, #1
 8602 09ea 1A70     		strb	r2, [r3]
1317:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 8603              		.loc 1 1317 0
 8604 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8605 09ee 1449     		ldr	r1, .L447+4
 8606 09f0 1346     		mov	r3, r2
 8607 09f2 DB00     		lsls	r3, r3, #3
 8608 09f4 9B1A     		subs	r3, r3, r2
 8609 09f6 1B01     		lsls	r3, r3, #4
 8610 09f8 0B44     		add	r3, r3, r1
 8611 09fa E433     		adds	r3, r3, #228
 8612 09fc 0022     		movs	r2, #0
 8613 09fe 1A60     		str	r2, [r3]
1318:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 8614              		.loc 1 1318 0
 8615 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8616 0a02 0F4B     		ldr	r3, .L447+4
 8617 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 8618 0a08 1846     		mov	r0, r3
 8619 0a0a 0D49     		ldr	r1, .L447+4
 8620 0a0c 0346     		mov	r3, r0
 8621 0a0e 5B00     		lsls	r3, r3, #1
 8622 0a10 0344     		add	r3, r3, r0
 8623 0a12 1B01     		lsls	r3, r3, #4
 8624 0a14 0B44     		add	r3, r3, r1
 8625 0a16 03F29513 		addw	r3, r3, #405
 8626 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8627 0a1c 1946     		mov	r1, r3
 8628 0a1e 4FF47A53 		mov	r3, #16000
 8629 0a22 03FA01F1 		lsl	r1, r3, r1
 8630 0a26 0648     		ldr	r0, .L447+4
 8631 0a28 1346     		mov	r3, r2
 8632 0a2a DB00     		lsls	r3, r3, #3
 8633 0a2c 9B1A     		subs	r3, r3, r2
 8634 0a2e 1B01     		lsls	r3, r3, #4
 8635 0a30 0344     		add	r3, r3, r0
 8636 0a32 E833     		adds	r3, r3, #232
 8637 0a34 1960     		str	r1, [r3]
1319:..\src/command_processing.c ****             }    
1320:..\src/command_processing.c **** 
1321:..\src/command_processing.c ****             break; 
 8638              		.loc 1 1321 0
 8639 0a36 00F0E0BC 		b	.L439
 8640              	.L448:
 8641 0a3a 00BF     		.align	2
 8642              	.L447:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 204


 8643 0a3c 00000000 		.word	g_rx
 8644 0a40 00000000 		.word	g_mem
 8645 0a44 00000000 		.word	reset_last_value_flag
 8646              	.L356:
1322:..\src/command_processing.c **** 
1323:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1324:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8647              		.loc 1 1324 0
 8648 0a48 A94B     		ldr	r3, .L449
 8649 0a4a DB78     		ldrb	r3, [r3, #3]
 8650 0a4c BB74     		strb	r3, [r7, #18]
1325:..\src/command_processing.c ****             if (aux_uchar) {
 8651              		.loc 1 1325 0
 8652 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8653 0a50 002B     		cmp	r3, #0
 8654 0a52 05D0     		beq	.L401
1326:..\src/command_processing.c ****                 reset_counters();
 8655              		.loc 1 1326 0
 8656 0a54 FFF7FEFF 		bl	reset_counters
1327:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 8657              		.loc 1 1327 0
 8658 0a58 A64B     		ldr	r3, .L449+4
 8659 0a5a 0022     		movs	r2, #0
 8660 0a5c 83F8A820 		strb	r2, [r3, #168]
 8661              	.L401:
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             
1330:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8662              		.loc 1 1330 0
 8663 0a60 A54B     		ldr	r3, .L449+8
 8664 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8665 0a66 012B     		cmp	r3, #1
 8666 0a68 40F0C984 		bne	.L440
1331:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1332:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 8667              		.loc 1 1332 0
 8668 0a6c 8720     		movs	r0, #135
 8669 0a6e FFF7FEFF 		bl	DS1302_read
 8670 0a72 0346     		mov	r3, r0
 8671 0a74 BB74     		strb	r3, [r7, #18]
1333:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 8672              		.loc 1 1333 0
 8673 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8674 0a78 1B09     		lsrs	r3, r3, #4
 8675 0a7a DBB2     		uxtb	r3, r3
 8676 0a7c 1A46     		mov	r2, r3
 8677 0a7e 9200     		lsls	r2, r2, #2
 8678 0a80 1344     		add	r3, r3, r2
 8679 0a82 5B00     		lsls	r3, r3, #1
 8680 0a84 DAB2     		uxtb	r2, r3
 8681 0a86 BB7C     		ldrb	r3, [r7, #18]
 8682 0a88 03F00F03 		and	r3, r3, #15
 8683 0a8c DBB2     		uxtb	r3, r3
 8684 0a8e 1344     		add	r3, r3, r2
 8685 0a90 DAB2     		uxtb	r2, r3
 8686 0a92 984B     		ldr	r3, .L449+4
 8687 0a94 83F8A420 		strb	r2, [r3, #164]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 205


1334:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 8688              		.loc 1 1334 0
 8689 0a98 8920     		movs	r0, #137
 8690 0a9a FFF7FEFF 		bl	DS1302_read
 8691 0a9e 0346     		mov	r3, r0
 8692 0aa0 BB74     		strb	r3, [r7, #18]
1335:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 8693              		.loc 1 1335 0
 8694 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8695 0aa4 1B09     		lsrs	r3, r3, #4
 8696 0aa6 DBB2     		uxtb	r3, r3
 8697 0aa8 1A46     		mov	r2, r3
 8698 0aaa 9200     		lsls	r2, r2, #2
 8699 0aac 1344     		add	r3, r3, r2
 8700 0aae 5B00     		lsls	r3, r3, #1
 8701 0ab0 DAB2     		uxtb	r2, r3
 8702 0ab2 BB7C     		ldrb	r3, [r7, #18]
 8703 0ab4 03F00F03 		and	r3, r3, #15
 8704 0ab8 DBB2     		uxtb	r3, r3
 8705 0aba 1344     		add	r3, r3, r2
 8706 0abc DAB2     		uxtb	r2, r3
 8707 0abe 8D4B     		ldr	r3, .L449+4
 8708 0ac0 83F8A520 		strb	r2, [r3, #165]
1336:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 8709              		.loc 1 1336 0
 8710 0ac4 8D20     		movs	r0, #141
 8711 0ac6 FFF7FEFF 		bl	DS1302_read
 8712 0aca 0346     		mov	r3, r0
 8713 0acc BB74     		strb	r3, [r7, #18]
1337:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 8714              		.loc 1 1337 0
 8715 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8716 0ad0 1B09     		lsrs	r3, r3, #4
 8717 0ad2 DBB2     		uxtb	r3, r3
 8718 0ad4 1A46     		mov	r2, r3
 8719 0ad6 9200     		lsls	r2, r2, #2
 8720 0ad8 1344     		add	r3, r3, r2
 8721 0ada 5B00     		lsls	r3, r3, #1
 8722 0adc DAB2     		uxtb	r2, r3
 8723 0ade BB7C     		ldrb	r3, [r7, #18]
 8724 0ae0 03F00F03 		and	r3, r3, #15
 8725 0ae4 DBB2     		uxtb	r3, r3
 8726 0ae6 1344     		add	r3, r3, r2
 8727 0ae8 DAB2     		uxtb	r2, r3
 8728 0aea 824B     		ldr	r3, .L449+4
 8729 0aec 83F8A620 		strb	r2, [r3, #166]
1338:..\src/command_processing.c ****             }
1339:..\src/command_processing.c ****             break;             
 8730              		.loc 1 1339 0
 8731 0af0 00F085BC 		b	.L440
 8732              	.L357:
 8733              	.LBB15:
1340:..\src/command_processing.c ****             
1341:..\src/command_processing.c ****         case 32:         //Current Time
1342:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 8734              		.loc 1 1342 0
 8735 0af4 0023     		movs	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 206


 8736 0af6 7B75     		strb	r3, [r7, #21]
 8737 0af8 0CE0     		b	.L403
 8738              	.L404:
1343:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8739              		.loc 1 1343 0 discriminator 3
 8740 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8741 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 8742 0afe 0332     		adds	r2, r2, #3
 8743 0b00 7B49     		ldr	r1, .L449
 8744 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 8745 0b04 7B4A     		ldr	r2, .L449+4
 8746 0b06 1344     		add	r3, r3, r2
 8747 0b08 0A46     		mov	r2, r1
 8748 0b0a 83F82022 		strb	r2, [r3, #544]
1342:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8749              		.loc 1 1342 0 discriminator 3
 8750 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8751 0b10 0133     		adds	r3, r3, #1
 8752 0b12 7B75     		strb	r3, [r7, #21]
 8753              	.L403:
1342:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 8754              		.loc 1 1342 0 is_stmt 0 discriminator 1
 8755 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 8756 0b16 052B     		cmp	r3, #5
 8757 0b18 EFD9     		bls	.L404
 8758              	.LBE15:
1344:..\src/command_processing.c ****             }
1345:..\src/command_processing.c ****             
1346:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 8759              		.loc 1 1346 0 is_stmt 1
 8760 0b1a 764B     		ldr	r3, .L449+4
 8761 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 8762 0b20 012B     		cmp	r3, #1
 8763 0b22 40F06E84 		bne	.L441
1347:..\src/command_processing.c ****                 set_RTC_time();
 8764              		.loc 1 1347 0
 8765 0b26 FFF7FEFF 		bl	set_RTC_time
1348:..\src/command_processing.c ****             }
1349:..\src/command_processing.c ****             break;
 8766              		.loc 1 1349 0
 8767 0b2a 00F06ABC 		b	.L441
 8768              	.L358:
1350:..\src/command_processing.c ****            
1351:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1352:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 8769              		.loc 1 1352 0
 8770 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8771 0b30 6F4B     		ldr	r3, .L449
 8772 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8773 0b34 6F49     		ldr	r1, .L449+4
 8774 0b36 1346     		mov	r3, r2
 8775 0b38 DB00     		lsls	r3, r3, #3
 8776 0b3a 9B1A     		subs	r3, r3, r2
 8777 0b3c 1B01     		lsls	r3, r3, #4
 8778 0b3e 0B44     		add	r3, r3, r1
 8779 0b40 E233     		adds	r3, r3, #226
 8780 0b42 0246     		mov	r2, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 207


 8781 0b44 1A70     		strb	r2, [r3]
1353:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 8782              		.loc 1 1353 0
 8783 0b46 6B4B     		ldr	r3, .L449+4
 8784 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 8785 0b4c 5B00     		lsls	r3, r3, #1
 8786 0b4e 5AB2     		sxtb	r2, r3
 8787 0b50 684B     		ldr	r3, .L449+4
 8788 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 8789 0b56 5BB2     		sxtb	r3, r3
 8790 0b58 1343     		orrs	r3, r3, r2
 8791 0b5a 5BB2     		sxtb	r3, r3
 8792 0b5c DBB2     		uxtb	r3, r3
 8793 0b5e 1846     		mov	r0, r3
 8794 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1354:..\src/command_processing.c ****             break;
 8795              		.loc 1 1354 0
 8796 0b64 00F050BC 		b	.L380
 8797              	.L359:
1355:..\src/command_processing.c ****             
1356:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1357:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8798              		.loc 1 1357 0
 8799 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 8800 0b6a 6349     		ldr	r1, .L449+8
 8801 0b6c 1346     		mov	r3, r2
 8802 0b6e DB00     		lsls	r3, r3, #3
 8803 0b70 9B1A     		subs	r3, r3, r2
 8804 0b72 1B01     		lsls	r3, r3, #4
 8805 0b74 0B44     		add	r3, r3, r1
 8806 0b76 03F20F13 		addw	r3, r3, #271
 8807 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8808 0b7c 032B     		cmp	r3, #3
 8809 0b7e 00F08580 		beq	.L406
1358:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8810              		.loc 1 1358 0
 8811 0b82 5E4B     		ldr	r3, .L449+12
 8812 0b84 1B68     		ldr	r3, [r3]	@ float
 8813 0b86 FB60     		str	r3, [r7, #12]	@ float
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8814              		.loc 1 1359 0
 8815 0b88 0023     		movs	r3, #0
 8816 0b8a BB75     		strb	r3, [r7, #22]
 8817 0b8c 0EE0     		b	.L407
 8818              	.L408:
1360:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8819              		.loc 1 1360 0 discriminator 3
 8820 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8821 0b90 C3F10303 		rsb	r3, r3, #3
 8822 0b94 07F10802 		add	r2, r7, #8
 8823 0b98 1344     		add	r3, r3, r2
 8824 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8825 0b9c 07F10C01 		add	r1, r7, #12
 8826 0ba0 0A44     		add	r2, r2, r1
 8827 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8828 0ba4 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 208


 8829              		.loc 1 1359 0 discriminator 3
 8830 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8831 0ba8 0133     		adds	r3, r3, #1
 8832 0baa BB75     		strb	r3, [r7, #22]
 8833              	.L407:
1359:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8834              		.loc 1 1359 0 is_stmt 0 discriminator 1
 8835 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8836 0bae 032B     		cmp	r3, #3
 8837 0bb0 EDD9     		bls	.L408
1361:..\src/command_processing.c ****                 }
1362:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 8838              		.loc 1 1362 0 is_stmt 1
 8839 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8840 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 8841 0bb6 4FF08F41 		mov	r1, #1199570944
 8842 0bba 1846     		mov	r0, r3
 8843 0bbc FFF7FEFF 		bl	__aeabi_fmul
 8844 0bc0 0346     		mov	r3, r0
 8845 0bc2 1846     		mov	r0, r3
 8846 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 8847 0bc8 0146     		mov	r1, r0
 8848 0bca 4A4A     		ldr	r2, .L449+4
 8849 0bcc 2346     		mov	r3, r4
 8850 0bce DB00     		lsls	r3, r3, #3
 8851 0bd0 1B1B     		subs	r3, r3, r4
 8852 0bd2 1B01     		lsls	r3, r3, #4
 8853 0bd4 1344     		add	r3, r3, r2
 8854 0bd6 B033     		adds	r3, r3, #176
 8855 0bd8 1960     		str	r1, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8856              		.loc 1 1364 0
 8857 0bda 494B     		ldr	r3, .L449+16
 8858 0bdc 1B68     		ldr	r3, [r3]	@ float
 8859 0bde FB60     		str	r3, [r7, #12]	@ float
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8860              		.loc 1 1365 0
 8861 0be0 0023     		movs	r3, #0
 8862 0be2 BB75     		strb	r3, [r7, #22]
 8863 0be4 0EE0     		b	.L409
 8864              	.L410:
1366:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8865              		.loc 1 1366 0 discriminator 3
 8866 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8867 0be8 C3F10303 		rsb	r3, r3, #3
 8868 0bec 07F10802 		add	r2, r7, #8
 8869 0bf0 1344     		add	r3, r3, r2
 8870 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8871 0bf4 07F10C01 		add	r1, r7, #12
 8872 0bf8 0A44     		add	r2, r2, r1
 8873 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8874 0bfc 1A70     		strb	r2, [r3]
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8875              		.loc 1 1365 0 discriminator 3
 8876 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8877 0c00 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 209


 8878 0c02 BB75     		strb	r3, [r7, #22]
 8879              	.L409:
1365:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8880              		.loc 1 1365 0 is_stmt 0 discriminator 1
 8881 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8882 0c06 032B     		cmp	r3, #3
 8883 0c08 EDD9     		bls	.L410
1367:..\src/command_processing.c ****                 }
1368:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 8884              		.loc 1 1368 0 is_stmt 1
 8885 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8886 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 8887 0c0e 4FF08F41 		mov	r1, #1199570944
 8888 0c12 1846     		mov	r0, r3
 8889 0c14 FFF7FEFF 		bl	__aeabi_fmul
 8890 0c18 0346     		mov	r3, r0
 8891 0c1a 1846     		mov	r0, r3
 8892 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 8893 0c20 0146     		mov	r1, r0
 8894 0c22 344A     		ldr	r2, .L449+4
 8895 0c24 2346     		mov	r3, r4
 8896 0c26 DB00     		lsls	r3, r3, #3
 8897 0c28 1B1B     		subs	r3, r3, r4
 8898 0c2a 1B01     		lsls	r3, r3, #4
 8899 0c2c 1344     		add	r3, r3, r2
 8900 0c2e B433     		adds	r3, r3, #180
 8901 0c30 1960     		str	r1, [r3]
1369:..\src/command_processing.c ****                 
1370:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8902              		.loc 1 1370 0
 8903 0c32 344B     		ldr	r3, .L449+20
 8904 0c34 1B68     		ldr	r3, [r3]	@ float
 8905 0c36 FB60     		str	r3, [r7, #12]	@ float
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8906              		.loc 1 1371 0
 8907 0c38 0023     		movs	r3, #0
 8908 0c3a BB75     		strb	r3, [r7, #22]
 8909 0c3c 0EE0     		b	.L411
 8910              	.L412:
1372:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8911              		.loc 1 1372 0 discriminator 3
 8912 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8913 0c40 C3F10303 		rsb	r3, r3, #3
 8914 0c44 07F10802 		add	r2, r7, #8
 8915 0c48 1344     		add	r3, r3, r2
 8916 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8917 0c4c 07F10C01 		add	r1, r7, #12
 8918 0c50 0A44     		add	r2, r2, r1
 8919 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8920 0c54 1A70     		strb	r2, [r3]
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8921              		.loc 1 1371 0 discriminator 3
 8922 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8923 0c58 0133     		adds	r3, r3, #1
 8924 0c5a BB75     		strb	r3, [r7, #22]
 8925              	.L411:
1371:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 210


 8926              		.loc 1 1371 0 is_stmt 0 discriminator 1
 8927 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8928 0c5e 032B     		cmp	r3, #3
 8929 0c60 EDD9     		bls	.L412
1373:..\src/command_processing.c ****                 }
1374:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 8930              		.loc 1 1374 0 is_stmt 1
 8931 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8932 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 8933 0c66 4FF08F41 		mov	r1, #1199570944
 8934 0c6a 1846     		mov	r0, r3
 8935 0c6c FFF7FEFF 		bl	__aeabi_fmul
 8936 0c70 0346     		mov	r3, r0
 8937 0c72 1846     		mov	r0, r3
 8938 0c74 FFF7FEFF 		bl	__aeabi_f2iz
 8939 0c78 0146     		mov	r1, r0
 8940 0c7a 1E4A     		ldr	r2, .L449+4
 8941 0c7c 2346     		mov	r3, r4
 8942 0c7e DB00     		lsls	r3, r3, #3
 8943 0c80 1B1B     		subs	r3, r3, r4
 8944 0c82 1B01     		lsls	r3, r3, #4
 8945 0c84 1344     		add	r3, r3, r2
 8946 0c86 B833     		adds	r3, r3, #184
 8947 0c88 1960     		str	r1, [r3]
1375:..\src/command_processing.c ****             }
1376:..\src/command_processing.c ****             else {
1377:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1378:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1379:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1380:..\src/command_processing.c ****                 }
1381:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1382:..\src/command_processing.c ****                 
1383:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1384:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1385:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1386:..\src/command_processing.c ****                 }
1387:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1388:..\src/command_processing.c ****                 
1389:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1390:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1391:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1392:..\src/command_processing.c ****                 }
1393:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1394:..\src/command_processing.c ****             }
1395:..\src/command_processing.c ****             break;
 8948              		.loc 1 1395 0
 8949 0c8a BDE3     		b	.L380
 8950              	.L406:
1377:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8951              		.loc 1 1377 0
 8952 0c8c 1B4B     		ldr	r3, .L449+12
 8953 0c8e 1B68     		ldr	r3, [r3]	@ float
 8954 0c90 FB60     		str	r3, [r7, #12]	@ float
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8955              		.loc 1 1378 0
 8956 0c92 0023     		movs	r3, #0
 8957 0c94 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 211


 8958 0c96 0EE0     		b	.L414
 8959              	.L415:
1379:..\src/command_processing.c ****                 }
 8960              		.loc 1 1379 0 discriminator 3
 8961 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8962 0c9a C3F10303 		rsb	r3, r3, #3
 8963 0c9e 07F10802 		add	r2, r7, #8
 8964 0ca2 1344     		add	r3, r3, r2
 8965 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8966 0ca6 07F10C01 		add	r1, r7, #12
 8967 0caa 0A44     		add	r2, r2, r1
 8968 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8969 0cae 1A70     		strb	r2, [r3]
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8970              		.loc 1 1378 0 discriminator 3
 8971 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8972 0cb2 0133     		adds	r3, r3, #1
 8973 0cb4 BB75     		strb	r3, [r7, #22]
 8974              	.L414:
1378:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8975              		.loc 1 1378 0 is_stmt 0 discriminator 1
 8976 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8977 0cb8 032B     		cmp	r3, #3
 8978 0cba EDD9     		bls	.L415
1381:..\src/command_processing.c ****                 
 8979              		.loc 1 1381 0 is_stmt 1
 8980 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 8981 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 8982 0cc0 4FF08F41 		mov	r1, #1199570944
 8983 0cc4 1846     		mov	r0, r3
 8984 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 8985 0cca 0346     		mov	r3, r0
 8986 0ccc 1846     		mov	r0, r3
 8987 0cce FFF7FEFF 		bl	__aeabi_f2iz
 8988 0cd2 0146     		mov	r1, r0
 8989 0cd4 074A     		ldr	r2, .L449+4
 8990 0cd6 2346     		mov	r3, r4
 8991 0cd8 DB00     		lsls	r3, r3, #3
 8992 0cda 1B1B     		subs	r3, r3, r4
 8993 0cdc 1B01     		lsls	r3, r3, #4
 8994 0cde 1344     		add	r3, r3, r2
 8995 0ce0 C833     		adds	r3, r3, #200
 8996 0ce2 1960     		str	r1, [r3]
1383:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8997              		.loc 1 1383 0
 8998 0ce4 064B     		ldr	r3, .L449+16
 8999 0ce6 1B68     		ldr	r3, [r3]	@ float
 9000 0ce8 FB60     		str	r3, [r7, #12]	@ float
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9001              		.loc 1 1384 0
 9002 0cea 0023     		movs	r3, #0
 9003 0cec BB75     		strb	r3, [r7, #22]
 9004 0cee 1AE0     		b	.L416
 9005              	.L450:
 9006              		.align	2
 9007              	.L449:
 9008 0cf0 00000000 		.word	g_rx
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 212


 9009 0cf4 00000000 		.word	g_mem
 9010 0cf8 00000000 		.word	c_mem
 9011 0cfc 03000000 		.word	g_rx+3
 9012 0d00 07000000 		.word	g_rx+7
 9013 0d04 0B000000 		.word	g_rx+11
 9014              	.L417:
1385:..\src/command_processing.c ****                 }
 9015              		.loc 1 1385 0 discriminator 3
 9016 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9017 0d0a C3F10303 		rsb	r3, r3, #3
 9018 0d0e 07F10802 		add	r2, r7, #8
 9019 0d12 1344     		add	r3, r3, r2
 9020 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9021 0d16 07F10C01 		add	r1, r7, #12
 9022 0d1a 0A44     		add	r2, r2, r1
 9023 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9024 0d1e 1A70     		strb	r2, [r3]
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9025              		.loc 1 1384 0 discriminator 3
 9026 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9027 0d22 0133     		adds	r3, r3, #1
 9028 0d24 BB75     		strb	r3, [r7, #22]
 9029              	.L416:
1384:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9030              		.loc 1 1384 0 is_stmt 0 discriminator 1
 9031 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9032 0d28 032B     		cmp	r3, #3
 9033 0d2a EDD9     		bls	.L417
1387:..\src/command_processing.c ****                 
 9034              		.loc 1 1387 0 is_stmt 1
 9035 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9036 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 9037 0d30 4FF08F41 		mov	r1, #1199570944
 9038 0d34 1846     		mov	r0, r3
 9039 0d36 FFF7FEFF 		bl	__aeabi_fmul
 9040 0d3a 0346     		mov	r3, r0
 9041 0d3c 1846     		mov	r0, r3
 9042 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 9043 0d42 0146     		mov	r1, r0
 9044 0d44 B74A     		ldr	r2, .L451
 9045 0d46 2346     		mov	r3, r4
 9046 0d48 DB00     		lsls	r3, r3, #3
 9047 0d4a 1B1B     		subs	r3, r3, r4
 9048 0d4c 1B01     		lsls	r3, r3, #4
 9049 0d4e 1344     		add	r3, r3, r2
 9050 0d50 CC33     		adds	r3, r3, #204
 9051 0d52 1960     		str	r1, [r3]
1389:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9052              		.loc 1 1389 0
 9053 0d54 B44B     		ldr	r3, .L451+4
 9054 0d56 1B68     		ldr	r3, [r3]	@ float
 9055 0d58 FB60     		str	r3, [r7, #12]	@ float
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9056              		.loc 1 1390 0
 9057 0d5a 0023     		movs	r3, #0
 9058 0d5c BB75     		strb	r3, [r7, #22]
 9059 0d5e 0EE0     		b	.L418
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 213


 9060              	.L419:
1391:..\src/command_processing.c ****                 }
 9061              		.loc 1 1391 0 discriminator 3
 9062 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9063 0d62 C3F10303 		rsb	r3, r3, #3
 9064 0d66 07F10802 		add	r2, r7, #8
 9065 0d6a 1344     		add	r3, r3, r2
 9066 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9067 0d6e 07F10C01 		add	r1, r7, #12
 9068 0d72 0A44     		add	r2, r2, r1
 9069 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9070 0d76 1A70     		strb	r2, [r3]
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9071              		.loc 1 1390 0 discriminator 3
 9072 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9073 0d7a 0133     		adds	r3, r3, #1
 9074 0d7c BB75     		strb	r3, [r7, #22]
 9075              	.L418:
1390:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9076              		.loc 1 1390 0 is_stmt 0 discriminator 1
 9077 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9078 0d80 032B     		cmp	r3, #3
 9079 0d82 EDD9     		bls	.L419
1393:..\src/command_processing.c ****             }
 9080              		.loc 1 1393 0 is_stmt 1
 9081 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9082 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 9083 0d88 4FF08F41 		mov	r1, #1199570944
 9084 0d8c 1846     		mov	r0, r3
 9085 0d8e FFF7FEFF 		bl	__aeabi_fmul
 9086 0d92 0346     		mov	r3, r0
 9087 0d94 1846     		mov	r0, r3
 9088 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 9089 0d9a 0146     		mov	r1, r0
 9090 0d9c A14A     		ldr	r2, .L451
 9091 0d9e 2346     		mov	r3, r4
 9092 0da0 DB00     		lsls	r3, r3, #3
 9093 0da2 1B1B     		subs	r3, r3, r4
 9094 0da4 1B01     		lsls	r3, r3, #4
 9095 0da6 1344     		add	r3, r3, r2
 9096 0da8 D033     		adds	r3, r3, #208
 9097 0daa 1960     		str	r1, [r3]
 9098              		.loc 1 1395 0
 9099 0dac 2CE3     		b	.L380
 9100              	.L360:
1396:..\src/command_processing.c ****             
1397:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1398:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9101              		.loc 1 1398 0
 9102 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9103 0db0 9E49     		ldr	r1, .L451+8
 9104 0db2 1346     		mov	r3, r2
 9105 0db4 DB00     		lsls	r3, r3, #3
 9106 0db6 9B1A     		subs	r3, r3, r2
 9107 0db8 1B01     		lsls	r3, r3, #4
 9108 0dba 0B44     		add	r3, r3, r1
 9109 0dbc 03F20F13 		addw	r3, r3, #271
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 214


 9110 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9111 0dc2 032B     		cmp	r3, #3
 9112 0dc4 00F08580 		beq	.L420
1399:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9113              		.loc 1 1399 0
 9114 0dc8 994B     		ldr	r3, .L451+12
 9115 0dca 1B68     		ldr	r3, [r3]	@ float
 9116 0dcc FB60     		str	r3, [r7, #12]	@ float
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9117              		.loc 1 1400 0
 9118 0dce 0023     		movs	r3, #0
 9119 0dd0 BB75     		strb	r3, [r7, #22]
 9120 0dd2 0EE0     		b	.L421
 9121              	.L422:
1401:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9122              		.loc 1 1401 0 discriminator 3
 9123 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9124 0dd6 C3F10303 		rsb	r3, r3, #3
 9125 0dda 07F10802 		add	r2, r7, #8
 9126 0dde 1344     		add	r3, r3, r2
 9127 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9128 0de2 07F10C01 		add	r1, r7, #12
 9129 0de6 0A44     		add	r2, r2, r1
 9130 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9131 0dea 1A70     		strb	r2, [r3]
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9132              		.loc 1 1400 0 discriminator 3
 9133 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9134 0dee 0133     		adds	r3, r3, #1
 9135 0df0 BB75     		strb	r3, [r7, #22]
 9136              	.L421:
1400:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9137              		.loc 1 1400 0 is_stmt 0 discriminator 1
 9138 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9139 0df4 032B     		cmp	r3, #3
 9140 0df6 EDD9     		bls	.L422
1402:..\src/command_processing.c ****                 }
1403:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9141              		.loc 1 1403 0 is_stmt 1
 9142 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9143 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 9144 0dfc 4FF08F41 		mov	r1, #1199570944
 9145 0e00 1846     		mov	r0, r3
 9146 0e02 FFF7FEFF 		bl	__aeabi_fmul
 9147 0e06 0346     		mov	r3, r0
 9148 0e08 1846     		mov	r0, r3
 9149 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 9150 0e0e 0146     		mov	r1, r0
 9151 0e10 844A     		ldr	r2, .L451
 9152 0e12 2346     		mov	r3, r4
 9153 0e14 DB00     		lsls	r3, r3, #3
 9154 0e16 1B1B     		subs	r3, r3, r4
 9155 0e18 1B01     		lsls	r3, r3, #4
 9156 0e1a 1344     		add	r3, r3, r2
 9157 0e1c BC33     		adds	r3, r3, #188
 9158 0e1e 1960     		str	r1, [r3]
1404:..\src/command_processing.c ****                 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 215


1405:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9159              		.loc 1 1405 0
 9160 0e20 844B     		ldr	r3, .L451+16
 9161 0e22 1B68     		ldr	r3, [r3]	@ float
 9162 0e24 FB60     		str	r3, [r7, #12]	@ float
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9163              		.loc 1 1406 0
 9164 0e26 0023     		movs	r3, #0
 9165 0e28 BB75     		strb	r3, [r7, #22]
 9166 0e2a 0EE0     		b	.L423
 9167              	.L424:
1407:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9168              		.loc 1 1407 0 discriminator 3
 9169 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9170 0e2e C3F10303 		rsb	r3, r3, #3
 9171 0e32 07F10802 		add	r2, r7, #8
 9172 0e36 1344     		add	r3, r3, r2
 9173 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9174 0e3a 07F10C01 		add	r1, r7, #12
 9175 0e3e 0A44     		add	r2, r2, r1
 9176 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9177 0e42 1A70     		strb	r2, [r3]
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9178              		.loc 1 1406 0 discriminator 3
 9179 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9180 0e46 0133     		adds	r3, r3, #1
 9181 0e48 BB75     		strb	r3, [r7, #22]
 9182              	.L423:
1406:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9183              		.loc 1 1406 0 is_stmt 0 discriminator 1
 9184 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9185 0e4c 032B     		cmp	r3, #3
 9186 0e4e EDD9     		bls	.L424
1408:..\src/command_processing.c ****                 }
1409:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9187              		.loc 1 1409 0 is_stmt 1
 9188 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9189 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 9190 0e54 4FF08F41 		mov	r1, #1199570944
 9191 0e58 1846     		mov	r0, r3
 9192 0e5a FFF7FEFF 		bl	__aeabi_fmul
 9193 0e5e 0346     		mov	r3, r0
 9194 0e60 1846     		mov	r0, r3
 9195 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 9196 0e66 0146     		mov	r1, r0
 9197 0e68 6E4A     		ldr	r2, .L451
 9198 0e6a 2346     		mov	r3, r4
 9199 0e6c DB00     		lsls	r3, r3, #3
 9200 0e6e 1B1B     		subs	r3, r3, r4
 9201 0e70 1B01     		lsls	r3, r3, #4
 9202 0e72 1344     		add	r3, r3, r2
 9203 0e74 C033     		adds	r3, r3, #192
 9204 0e76 1960     		str	r1, [r3]
1410:..\src/command_processing.c ****                 
1411:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9205              		.loc 1 1411 0
 9206 0e78 6B4B     		ldr	r3, .L451+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 216


 9207 0e7a 1B68     		ldr	r3, [r3]	@ float
 9208 0e7c FB60     		str	r3, [r7, #12]	@ float
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9209              		.loc 1 1412 0
 9210 0e7e 0023     		movs	r3, #0
 9211 0e80 BB75     		strb	r3, [r7, #22]
 9212 0e82 0EE0     		b	.L425
 9213              	.L426:
1413:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9214              		.loc 1 1413 0 discriminator 3
 9215 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9216 0e86 C3F10303 		rsb	r3, r3, #3
 9217 0e8a 07F10802 		add	r2, r7, #8
 9218 0e8e 1344     		add	r3, r3, r2
 9219 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9220 0e92 07F10C01 		add	r1, r7, #12
 9221 0e96 0A44     		add	r2, r2, r1
 9222 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9223 0e9a 1A70     		strb	r2, [r3]
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9224              		.loc 1 1412 0 discriminator 3
 9225 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9226 0e9e 0133     		adds	r3, r3, #1
 9227 0ea0 BB75     		strb	r3, [r7, #22]
 9228              	.L425:
1412:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9229              		.loc 1 1412 0 is_stmt 0 discriminator 1
 9230 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9231 0ea4 032B     		cmp	r3, #3
 9232 0ea6 EDD9     		bls	.L426
1414:..\src/command_processing.c ****                 }
1415:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9233              		.loc 1 1415 0 is_stmt 1
 9234 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9235 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 9236 0eac 4FF08F41 		mov	r1, #1199570944
 9237 0eb0 1846     		mov	r0, r3
 9238 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 9239 0eb6 0346     		mov	r3, r0
 9240 0eb8 1846     		mov	r0, r3
 9241 0eba FFF7FEFF 		bl	__aeabi_f2iz
 9242 0ebe 0146     		mov	r1, r0
 9243 0ec0 584A     		ldr	r2, .L451
 9244 0ec2 2346     		mov	r3, r4
 9245 0ec4 DB00     		lsls	r3, r3, #3
 9246 0ec6 1B1B     		subs	r3, r3, r4
 9247 0ec8 1B01     		lsls	r3, r3, #4
 9248 0eca 1344     		add	r3, r3, r2
 9249 0ecc C433     		adds	r3, r3, #196
 9250 0ece 1960     		str	r1, [r3]
1416:..\src/command_processing.c ****             }
1417:..\src/command_processing.c ****             else {
1418:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1419:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1420:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1421:..\src/command_processing.c ****                 }
1422:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 217


1423:..\src/command_processing.c ****                 
1424:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1425:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1426:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1427:..\src/command_processing.c ****                 }
1428:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1429:..\src/command_processing.c ****                 
1430:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1431:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1432:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1433:..\src/command_processing.c ****                 }
1434:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1435:..\src/command_processing.c ****             }            
1436:..\src/command_processing.c ****             break;  
 9251              		.loc 1 1436 0
 9252 0ed0 9AE2     		b	.L380
 9253              	.L420:
1418:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9254              		.loc 1 1418 0
 9255 0ed2 574B     		ldr	r3, .L451+12
 9256 0ed4 1B68     		ldr	r3, [r3]	@ float
 9257 0ed6 FB60     		str	r3, [r7, #12]	@ float
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9258              		.loc 1 1419 0
 9259 0ed8 0023     		movs	r3, #0
 9260 0eda BB75     		strb	r3, [r7, #22]
 9261 0edc 0EE0     		b	.L428
 9262              	.L429:
1420:..\src/command_processing.c ****                 }
 9263              		.loc 1 1420 0 discriminator 3
 9264 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9265 0ee0 C3F10303 		rsb	r3, r3, #3
 9266 0ee4 07F10802 		add	r2, r7, #8
 9267 0ee8 1344     		add	r3, r3, r2
 9268 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9269 0eec 07F10C01 		add	r1, r7, #12
 9270 0ef0 0A44     		add	r2, r2, r1
 9271 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9272 0ef4 1A70     		strb	r2, [r3]
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9273              		.loc 1 1419 0 discriminator 3
 9274 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9275 0ef8 0133     		adds	r3, r3, #1
 9276 0efa BB75     		strb	r3, [r7, #22]
 9277              	.L428:
1419:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9278              		.loc 1 1419 0 is_stmt 0 discriminator 1
 9279 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9280 0efe 032B     		cmp	r3, #3
 9281 0f00 EDD9     		bls	.L429
1422:..\src/command_processing.c ****                 
 9282              		.loc 1 1422 0 is_stmt 1
 9283 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9284 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 9285 0f06 4FF08F41 		mov	r1, #1199570944
 9286 0f0a 1846     		mov	r0, r3
 9287 0f0c FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 218


 9288 0f10 0346     		mov	r3, r0
 9289 0f12 1846     		mov	r0, r3
 9290 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 9291 0f18 0146     		mov	r1, r0
 9292 0f1a 424A     		ldr	r2, .L451
 9293 0f1c 2346     		mov	r3, r4
 9294 0f1e DB00     		lsls	r3, r3, #3
 9295 0f20 1B1B     		subs	r3, r3, r4
 9296 0f22 1B01     		lsls	r3, r3, #4
 9297 0f24 1344     		add	r3, r3, r2
 9298 0f26 D433     		adds	r3, r3, #212
 9299 0f28 1960     		str	r1, [r3]
1424:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9300              		.loc 1 1424 0
 9301 0f2a 424B     		ldr	r3, .L451+16
 9302 0f2c 1B68     		ldr	r3, [r3]	@ float
 9303 0f2e FB60     		str	r3, [r7, #12]	@ float
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9304              		.loc 1 1425 0
 9305 0f30 0023     		movs	r3, #0
 9306 0f32 BB75     		strb	r3, [r7, #22]
 9307 0f34 0EE0     		b	.L430
 9308              	.L431:
1426:..\src/command_processing.c ****                 }
 9309              		.loc 1 1426 0 discriminator 3
 9310 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9311 0f38 C3F10303 		rsb	r3, r3, #3
 9312 0f3c 07F10802 		add	r2, r7, #8
 9313 0f40 1344     		add	r3, r3, r2
 9314 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9315 0f44 07F10C01 		add	r1, r7, #12
 9316 0f48 0A44     		add	r2, r2, r1
 9317 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9318 0f4c 1A70     		strb	r2, [r3]
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9319              		.loc 1 1425 0 discriminator 3
 9320 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9321 0f50 0133     		adds	r3, r3, #1
 9322 0f52 BB75     		strb	r3, [r7, #22]
 9323              	.L430:
1425:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9324              		.loc 1 1425 0 is_stmt 0 discriminator 1
 9325 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9326 0f56 032B     		cmp	r3, #3
 9327 0f58 EDD9     		bls	.L431
1428:..\src/command_processing.c ****                 
 9328              		.loc 1 1428 0 is_stmt 1
 9329 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9330 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 9331 0f5e 4FF08F41 		mov	r1, #1199570944
 9332 0f62 1846     		mov	r0, r3
 9333 0f64 FFF7FEFF 		bl	__aeabi_fmul
 9334 0f68 0346     		mov	r3, r0
 9335 0f6a 1846     		mov	r0, r3
 9336 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 9337 0f70 0146     		mov	r1, r0
 9338 0f72 2C4A     		ldr	r2, .L451
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 219


 9339 0f74 2346     		mov	r3, r4
 9340 0f76 DB00     		lsls	r3, r3, #3
 9341 0f78 1B1B     		subs	r3, r3, r4
 9342 0f7a 1B01     		lsls	r3, r3, #4
 9343 0f7c 1344     		add	r3, r3, r2
 9344 0f7e D833     		adds	r3, r3, #216
 9345 0f80 1960     		str	r1, [r3]
1430:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9346              		.loc 1 1430 0
 9347 0f82 294B     		ldr	r3, .L451+4
 9348 0f84 1B68     		ldr	r3, [r3]	@ float
 9349 0f86 FB60     		str	r3, [r7, #12]	@ float
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9350              		.loc 1 1431 0
 9351 0f88 0023     		movs	r3, #0
 9352 0f8a BB75     		strb	r3, [r7, #22]
 9353 0f8c 0EE0     		b	.L432
 9354              	.L433:
1432:..\src/command_processing.c ****                 }
 9355              		.loc 1 1432 0 discriminator 3
 9356 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9357 0f90 C3F10303 		rsb	r3, r3, #3
 9358 0f94 07F10802 		add	r2, r7, #8
 9359 0f98 1344     		add	r3, r3, r2
 9360 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9361 0f9c 07F10C01 		add	r1, r7, #12
 9362 0fa0 0A44     		add	r2, r2, r1
 9363 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9364 0fa4 1A70     		strb	r2, [r3]
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9365              		.loc 1 1431 0 discriminator 3
 9366 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9367 0fa8 0133     		adds	r3, r3, #1
 9368 0faa BB75     		strb	r3, [r7, #22]
 9369              	.L432:
1431:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9370              		.loc 1 1431 0 is_stmt 0 discriminator 1
 9371 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9372 0fae 032B     		cmp	r3, #3
 9373 0fb0 EDD9     		bls	.L433
1434:..\src/command_processing.c ****             }            
 9374              		.loc 1 1434 0 is_stmt 1
 9375 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9376 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 9377 0fb6 4FF08F41 		mov	r1, #1199570944
 9378 0fba 1846     		mov	r0, r3
 9379 0fbc FFF7FEFF 		bl	__aeabi_fmul
 9380 0fc0 0346     		mov	r3, r0
 9381 0fc2 1846     		mov	r0, r3
 9382 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 9383 0fc8 0146     		mov	r1, r0
 9384 0fca 164A     		ldr	r2, .L451
 9385 0fcc 2346     		mov	r3, r4
 9386 0fce DB00     		lsls	r3, r3, #3
 9387 0fd0 1B1B     		subs	r3, r3, r4
 9388 0fd2 1B01     		lsls	r3, r3, #4
 9389 0fd4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 220


 9390 0fd6 DC33     		adds	r3, r3, #220
 9391 0fd8 1960     		str	r1, [r3]
 9392              		.loc 1 1436 0
 9393 0fda 15E2     		b	.L380
 9394              	.L361:
1437:..\src/command_processing.c ****             
1438:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1439:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 9395              		.loc 1 1439 0
 9396 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9397 0fde 164B     		ldr	r3, .L451+20
 9398 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9399 0fe2 1049     		ldr	r1, .L451
 9400 0fe4 1346     		mov	r3, r2
 9401 0fe6 DB00     		lsls	r3, r3, #3
 9402 0fe8 9B1A     		subs	r3, r3, r2
 9403 0fea 1B01     		lsls	r3, r3, #4
 9404 0fec 0B44     		add	r3, r3, r1
 9405 0fee 03F58773 		add	r3, r3, #270
 9406 0ff2 0246     		mov	r2, r0
 9407 0ff4 1A70     		strb	r2, [r3]
1440:..\src/command_processing.c ****             
1441:..\src/command_processing.c ****             // Hold the actual position
1442:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 9408              		.loc 1 1442 0
 9409 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9410 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9411 0ffa 0A48     		ldr	r0, .L451
 9412 0ffc 1346     		mov	r3, r2
 9413 0ffe DB00     		lsls	r3, r3, #3
 9414 1000 9B1A     		subs	r3, r3, r2
 9415 1002 1B01     		lsls	r3, r3, #4
 9416 1004 0344     		add	r3, r3, r0
 9417 1006 03F58873 		add	r3, r3, #272
 9418 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9419 100c 1846     		mov	r0, r3
 9420 100e 0B4A     		ldr	r2, .L451+24
 9421 1010 3423     		movs	r3, #52
 9422 1012 03FB00F3 		mul	r3, r3, r0
 9423 1016 1344     		add	r3, r3, r2
 9424 1018 1A68     		ldr	r2, [r3]
 9425 101a 0948     		ldr	r0, .L451+28
 9426 101c 0B01     		lsls	r3, r1, #4
 9427 101e 0344     		add	r3, r3, r0
 9428 1020 1A60     		str	r2, [r3]
1443:..\src/command_processing.c ****             break;   
 9429              		.loc 1 1443 0
 9430 1022 F1E1     		b	.L380
 9431              	.L452:
 9432              		.align	2
 9433              	.L451:
 9434 1024 00000000 		.word	g_mem
 9435 1028 0B000000 		.word	g_rx+11
 9436 102c 00000000 		.word	c_mem
 9437 1030 03000000 		.word	g_rx+3
 9438 1034 07000000 		.word	g_rx+7
 9439 1038 00000000 		.word	g_rx
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 221


 9440 103c 00000000 		.word	g_meas
 9441 1040 00000000 		.word	g_refNew
 9442              	.L362:
1444:..\src/command_processing.c **** 
1445:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1446:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9443              		.loc 1 1446 0
 9444 1044 0023     		movs	r3, #0
 9445 1046 FB75     		strb	r3, [r7, #23]
 9446 1048 7EE0     		b	.L434
 9447              	.L435:
1447:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9448              		.loc 1 1447 0 discriminator 3
 9449 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9450 104c 9049     		ldr	r1, .L453
 9451 104e 1346     		mov	r3, r2
 9452 1050 DB00     		lsls	r3, r3, #3
 9453 1052 9B1A     		subs	r3, r3, r2
 9454 1054 1B01     		lsls	r3, r3, #4
 9455 1056 0B44     		add	r3, r3, r1
 9456 1058 03F58873 		add	r3, r3, #272
 9457 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9458 105e 1C46     		mov	r4, r3
 9459 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9460 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9461 1064 5B00     		lsls	r3, r3, #1
 9462 1066 0333     		adds	r3, r3, #3
 9463 1068 8A49     		ldr	r1, .L453+4
 9464 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9465 106c 1B02     		lsls	r3, r3, #8
 9466 106e 19B2     		sxth	r1, r3
 9467 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9468 1072 0233     		adds	r3, r3, #2
 9469 1074 5B00     		lsls	r3, r3, #1
 9470 1076 8748     		ldr	r0, .L453+4
 9471 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9472 107a 1BB2     		sxth	r3, r3
 9473 107c 0B43     		orrs	r3, r3, r1
 9474 107e 1BB2     		sxth	r3, r3
 9475 1080 1846     		mov	r0, r3
 9476 1082 8349     		ldr	r1, .L453
 9477 1084 2346     		mov	r3, r4
 9478 1086 5B00     		lsls	r3, r3, #1
 9479 1088 2344     		add	r3, r3, r4
 9480 108a 9B00     		lsls	r3, r3, #2
 9481 108c 1344     		add	r3, r3, r2
 9482 108e 6633     		adds	r3, r3, #102
 9483 1090 41F82300 		str	r0, [r1, r3, lsl #2]
1448:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 9484              		.loc 1 1448 0 discriminator 3
 9485 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9486 1096 7E49     		ldr	r1, .L453
 9487 1098 1346     		mov	r3, r2
 9488 109a DB00     		lsls	r3, r3, #3
 9489 109c 9B1A     		subs	r3, r3, r2
 9490 109e 1B01     		lsls	r3, r3, #4
 9491 10a0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 222


 9492 10a2 03F58873 		add	r3, r3, #272
 9493 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9494 10a8 1D46     		mov	r5, r3
 9495 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9496 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9497 10ae 7848     		ldr	r0, .L453
 9498 10b0 1346     		mov	r3, r2
 9499 10b2 DB00     		lsls	r3, r3, #3
 9500 10b4 9B1A     		subs	r3, r3, r2
 9501 10b6 1B01     		lsls	r3, r3, #4
 9502 10b8 0344     		add	r3, r3, r0
 9503 10ba 03F58873 		add	r3, r3, #272
 9504 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9505 10c0 1C46     		mov	r4, r3
 9506 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9507 10c4 7248     		ldr	r0, .L453
 9508 10c6 2346     		mov	r3, r4
 9509 10c8 5B00     		lsls	r3, r3, #1
 9510 10ca 2344     		add	r3, r3, r4
 9511 10cc 9B00     		lsls	r3, r3, #2
 9512 10ce 1344     		add	r3, r3, r2
 9513 10d0 6633     		adds	r3, r3, #102
 9514 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9515 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9516 10d8 6D4C     		ldr	r4, .L453
 9517 10da 1346     		mov	r3, r2
 9518 10dc DB00     		lsls	r3, r3, #3
 9519 10de 9B1A     		subs	r3, r3, r2
 9520 10e0 1B01     		lsls	r3, r3, #4
 9521 10e2 2344     		add	r3, r3, r4
 9522 10e4 03F58873 		add	r3, r3, #272
 9523 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9524 10ea 1E46     		mov	r6, r3
 9525 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9526 10ee 684C     		ldr	r4, .L453
 9527 10f0 3346     		mov	r3, r6
 9528 10f2 5B00     		lsls	r3, r3, #1
 9529 10f4 3344     		add	r3, r3, r6
 9530 10f6 1B01     		lsls	r3, r3, #4
 9531 10f8 2344     		add	r3, r3, r4
 9532 10fa 1344     		add	r3, r3, r2
 9533 10fc 03F29513 		addw	r3, r3, #405
 9534 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9535 1102 00FA03F2 		lsl	r2, r0, r3
 9536 1106 6248     		ldr	r0, .L453
 9537 1108 2B46     		mov	r3, r5
 9538 110a 5B00     		lsls	r3, r3, #1
 9539 110c 2B44     		add	r3, r3, r5
 9540 110e 9B00     		lsls	r3, r3, #2
 9541 1110 0B44     		add	r3, r3, r1
 9542 1112 6633     		adds	r3, r3, #102
 9543 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1449:..\src/command_processing.c **** 
1450:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 9544              		.loc 1 1450 0 discriminator 3
 9545 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9546 111a 5D49     		ldr	r1, .L453
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 223


 9547 111c 1346     		mov	r3, r2
 9548 111e DB00     		lsls	r3, r3, #3
 9549 1120 9B1A     		subs	r3, r3, r2
 9550 1122 1B01     		lsls	r3, r3, #4
 9551 1124 0B44     		add	r3, r3, r1
 9552 1126 03F58873 		add	r3, r3, #272
 9553 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9554 112c 1846     		mov	r0, r3
 9555 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9556 1130 5949     		ldr	r1, .L453+8
 9557 1132 3422     		movs	r2, #52
 9558 1134 02FB00F2 		mul	r2, r2, r0
 9559 1138 0A44     		add	r2, r2, r1
 9560 113a 1344     		add	r3, r3, r2
 9561 113c 1833     		adds	r3, r3, #24
 9562 113e 0022     		movs	r2, #0
 9563 1140 1A70     		strb	r2, [r3]
1446:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9564              		.loc 1 1446 0 discriminator 3
 9565 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9566 1144 0133     		adds	r3, r3, #1
 9567 1146 FB75     		strb	r3, [r7, #23]
 9568              	.L434:
1446:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9569              		.loc 1 1446 0 is_stmt 0 discriminator 1
 9570 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9571 114a 022B     		cmp	r3, #2
 9572 114c 7FF67DAF 		bls	.L435
1451:..\src/command_processing.c ****             }
1452:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9573              		.loc 1 1452 0 is_stmt 1
 9574 1150 524B     		ldr	r3, .L453+12
 9575 1152 0122     		movs	r2, #1
 9576 1154 1A70     		strb	r2, [r3]
1453:..\src/command_processing.c ****             break;
 9577              		.loc 1 1453 0
 9578 1156 57E1     		b	.L380
 9579              	.L363:
1454:..\src/command_processing.c ****     
1455:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1456:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 9580              		.loc 1 1456 0
 9581 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9582 115a 4E4B     		ldr	r3, .L453+4
 9583 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9584 115e 1906     		lsls	r1, r3, #24
 9585 1160 4C4B     		ldr	r3, .L453+4
 9586 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 9587 1164 1B04     		lsls	r3, r3, #16
 9588 1166 1943     		orrs	r1, r1, r3
 9589 1168 4A4B     		ldr	r3, .L453+4
 9590 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9591 116c 1B02     		lsls	r3, r3, #8
 9592 116e 0B43     		orrs	r3, r3, r1
 9593 1170 4849     		ldr	r1, .L453+4
 9594 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9595 1174 1943     		orrs	r1, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 224


 9596 1176 4648     		ldr	r0, .L453
 9597 1178 1346     		mov	r3, r2
 9598 117a DB00     		lsls	r3, r3, #3
 9599 117c 9B1A     		subs	r3, r3, r2
 9600 117e 1B01     		lsls	r3, r3, #4
 9601 1180 0344     		add	r3, r3, r0
 9602 1182 E433     		adds	r3, r3, #228
 9603 1184 1960     		str	r1, [r3]
1457:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 9604              		.loc 1 1457 0
 9605 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9606 1188 424B     		ldr	r3, .L453+4
 9607 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9608 118c 1906     		lsls	r1, r3, #24
 9609 118e 414B     		ldr	r3, .L453+4
 9610 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9611 1192 1B04     		lsls	r3, r3, #16
 9612 1194 1943     		orrs	r1, r1, r3
 9613 1196 3F4B     		ldr	r3, .L453+4
 9614 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 9615 119a 1B02     		lsls	r3, r3, #8
 9616 119c 0B43     		orrs	r3, r3, r1
 9617 119e 3D49     		ldr	r1, .L453+4
 9618 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 9619 11a2 1943     		orrs	r1, r1, r3
 9620 11a4 3A48     		ldr	r0, .L453
 9621 11a6 1346     		mov	r3, r2
 9622 11a8 DB00     		lsls	r3, r3, #3
 9623 11aa 9B1A     		subs	r3, r3, r2
 9624 11ac 1B01     		lsls	r3, r3, #4
 9625 11ae 0344     		add	r3, r3, r0
 9626 11b0 E833     		adds	r3, r3, #232
 9627 11b2 1960     		str	r1, [r3]
1458:..\src/command_processing.c **** 
1459:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 9628              		.loc 1 1459 0
 9629 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9630 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9631 11b8 3548     		ldr	r0, .L453
 9632 11ba 0B46     		mov	r3, r1
 9633 11bc DB00     		lsls	r3, r3, #3
 9634 11be 5B1A     		subs	r3, r3, r1
 9635 11c0 1B01     		lsls	r3, r3, #4
 9636 11c2 0344     		add	r3, r3, r0
 9637 11c4 E433     		adds	r3, r3, #228
 9638 11c6 1868     		ldr	r0, [r3]
 9639 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9640 11ca 314C     		ldr	r4, .L453
 9641 11cc 0B46     		mov	r3, r1
 9642 11ce DB00     		lsls	r3, r3, #3
 9643 11d0 5B1A     		subs	r3, r3, r1
 9644 11d2 1B01     		lsls	r3, r3, #4
 9645 11d4 2344     		add	r3, r3, r4
 9646 11d6 03F58873 		add	r3, r3, #272
 9647 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9648 11dc 1C46     		mov	r4, r3
 9649 11de 2C49     		ldr	r1, .L453
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 225


 9650 11e0 2346     		mov	r3, r4
 9651 11e2 5B00     		lsls	r3, r3, #1
 9652 11e4 2344     		add	r3, r3, r4
 9653 11e6 1B01     		lsls	r3, r3, #4
 9654 11e8 0B44     		add	r3, r3, r1
 9655 11ea 03F29513 		addw	r3, r3, #405
 9656 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9657 11f0 00FA03F1 		lsl	r1, r0, r3
 9658 11f4 2648     		ldr	r0, .L453
 9659 11f6 1346     		mov	r3, r2
 9660 11f8 DB00     		lsls	r3, r3, #3
 9661 11fa 9B1A     		subs	r3, r3, r2
 9662 11fc 1B01     		lsls	r3, r3, #4
 9663 11fe 0344     		add	r3, r3, r0
 9664 1200 E433     		adds	r3, r3, #228
 9665 1202 1960     		str	r1, [r3]
1460:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 9666              		.loc 1 1460 0
 9667 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9668 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9669 1208 2148     		ldr	r0, .L453
 9670 120a 0B46     		mov	r3, r1
 9671 120c DB00     		lsls	r3, r3, #3
 9672 120e 5B1A     		subs	r3, r3, r1
 9673 1210 1B01     		lsls	r3, r3, #4
 9674 1212 0344     		add	r3, r3, r0
 9675 1214 E833     		adds	r3, r3, #232
 9676 1216 1868     		ldr	r0, [r3]
 9677 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9678 121a 1D4C     		ldr	r4, .L453
 9679 121c 0B46     		mov	r3, r1
 9680 121e DB00     		lsls	r3, r3, #3
 9681 1220 5B1A     		subs	r3, r3, r1
 9682 1222 1B01     		lsls	r3, r3, #4
 9683 1224 2344     		add	r3, r3, r4
 9684 1226 03F58873 		add	r3, r3, #272
 9685 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9686 122c 1C46     		mov	r4, r3
 9687 122e 1849     		ldr	r1, .L453
 9688 1230 2346     		mov	r3, r4
 9689 1232 5B00     		lsls	r3, r3, #1
 9690 1234 2344     		add	r3, r3, r4
 9691 1236 1B01     		lsls	r3, r3, #4
 9692 1238 0B44     		add	r3, r3, r1
 9693 123a 03F29513 		addw	r3, r3, #405
 9694 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9695 1240 00FA03F1 		lsl	r1, r0, r3
 9696 1244 1248     		ldr	r0, .L453
 9697 1246 1346     		mov	r3, r2
 9698 1248 DB00     		lsls	r3, r3, #3
 9699 124a 9B1A     		subs	r3, r3, r2
 9700 124c 1B01     		lsls	r3, r3, #4
 9701 124e 0344     		add	r3, r3, r0
 9702 1250 E833     		adds	r3, r3, #232
 9703 1252 1960     		str	r1, [r3]
1461:..\src/command_processing.c ****             break;
 9704              		.loc 1 1461 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 226


 9705 1254 D8E0     		b	.L380
 9706              	.L364:
1462:..\src/command_processing.c ****             
1463:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1464:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 9707              		.loc 1 1464 0
 9708 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9709 1258 0E4B     		ldr	r3, .L453+4
 9710 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9711 125c 0C49     		ldr	r1, .L453
 9712 125e 1346     		mov	r3, r2
 9713 1260 DB00     		lsls	r3, r3, #3
 9714 1262 9B1A     		subs	r3, r3, r2
 9715 1264 1B01     		lsls	r3, r3, #4
 9716 1266 0B44     		add	r3, r3, r1
 9717 1268 E233     		adds	r3, r3, #226
 9718 126a 0246     		mov	r2, r0
 9719 126c 1A70     		strb	r2, [r3]
1465:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 9720              		.loc 1 1465 0
 9721 126e 084B     		ldr	r3, .L453
 9722 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 9723 1274 5B00     		lsls	r3, r3, #1
 9724 1276 5AB2     		sxtb	r2, r3
 9725 1278 054B     		ldr	r3, .L453
 9726 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 9727 127e 5BB2     		sxtb	r3, r3
 9728 1280 1343     		orrs	r3, r3, r2
 9729 1282 5BB2     		sxtb	r3, r3
 9730 1284 DBB2     		uxtb	r3, r3
 9731 1286 1846     		mov	r0, r3
 9732 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1466:..\src/command_processing.c ****             break;
 9733              		.loc 1 1466 0
 9734 128c BCE0     		b	.L380
 9735              	.L454:
 9736 128e 00BF     		.align	2
 9737              	.L453:
 9738 1290 00000000 		.word	g_mem
 9739 1294 00000000 		.word	g_rx
 9740 1298 00000000 		.word	g_meas
 9741 129c 00000000 		.word	reset_last_value_flag
 9742              	.L365:
1467:..\src/command_processing.c **** 
1468:..\src/command_processing.c ****         case 71:        // Device type
1469:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 9743              		.loc 1 1469 0
 9744 12a0 5B4B     		ldr	r3, .L455
 9745 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9746 12a4 5B4B     		ldr	r3, .L455+4
 9747 12a6 83F8AC20 		strb	r2, [r3, #172]
1470:..\src/command_processing.c ****             
1471:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 9748              		.loc 1 1471 0
 9749 12aa 5A4B     		ldr	r3, .L455+4
 9750 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 9751 12b0 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 227


 9752 12b2 40F0A880 		bne	.L442
1472:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 9753              		.loc 1 1472 0
 9754 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9755 12b8 5649     		ldr	r1, .L455+4
 9756 12ba 1346     		mov	r3, r2
 9757 12bc DB00     		lsls	r3, r3, #3
 9758 12be 9B1A     		subs	r3, r3, r2
 9759 12c0 1B01     		lsls	r3, r3, #4
 9760 12c2 0B44     		add	r3, r3, r1
 9761 12c4 03F58873 		add	r3, r3, #272
 9762 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9763 12ca 1946     		mov	r1, r3
 9764 12cc 514A     		ldr	r2, .L455+4
 9765 12ce 0B46     		mov	r3, r1
 9766 12d0 5B00     		lsls	r3, r3, #1
 9767 12d2 0B44     		add	r3, r3, r1
 9768 12d4 1B01     		lsls	r3, r3, #4
 9769 12d6 1344     		add	r3, r3, r2
 9770 12d8 03F5D873 		add	r3, r3, #432
 9771 12dc 0122     		movs	r2, #1
 9772 12de 1A70     		strb	r2, [r3]
1473:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 9773              		.loc 1 1473 0
 9774 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9775 12e2 4C49     		ldr	r1, .L455+4
 9776 12e4 1346     		mov	r3, r2
 9777 12e6 DB00     		lsls	r3, r3, #3
 9778 12e8 9B1A     		subs	r3, r3, r2
 9779 12ea 1B01     		lsls	r3, r3, #4
 9780 12ec 0B44     		add	r3, r3, r1
 9781 12ee 03F58873 		add	r3, r3, #272
 9782 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9783 12f4 1946     		mov	r1, r3
 9784 12f6 474A     		ldr	r2, .L455+4
 9785 12f8 0B46     		mov	r3, r1
 9786 12fa 5B00     		lsls	r3, r3, #1
 9787 12fc 0B44     		add	r3, r3, r1
 9788 12fe 1B01     		lsls	r3, r3, #4
 9789 1300 1344     		add	r3, r3, r2
 9790 1302 03F2B513 		addw	r3, r3, #437
 9791 1306 2322     		movs	r2, #35
 9792 1308 1A70     		strb	r2, [r3]
1474:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 9793              		.loc 1 1474 0
 9794 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9795 130c 4149     		ldr	r1, .L455+4
 9796 130e 1346     		mov	r3, r2
 9797 1310 DB00     		lsls	r3, r3, #3
 9798 1312 9B1A     		subs	r3, r3, r2
 9799 1314 1B01     		lsls	r3, r3, #4
 9800 1316 0B44     		add	r3, r3, r1
 9801 1318 03F58873 		add	r3, r3, #272
 9802 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9803 131e 1946     		mov	r1, r3
 9804 1320 3C4A     		ldr	r2, .L455+4
 9805 1322 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 228


 9806 1324 5B00     		lsls	r3, r3, #1
 9807 1326 0B44     		add	r3, r3, r1
 9808 1328 1B01     		lsls	r3, r3, #4
 9809 132a 1344     		add	r3, r3, r2
 9810 132c 03F5DB73 		add	r3, r3, #438
 9811 1330 0322     		movs	r2, #3
 9812 1332 1A70     		strb	r2, [r3]
1475:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 9813              		.loc 1 1475 0
 9814 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9815 1336 3749     		ldr	r1, .L455+4
 9816 1338 1346     		mov	r3, r2
 9817 133a DB00     		lsls	r3, r3, #3
 9818 133c 9B1A     		subs	r3, r3, r2
 9819 133e 1B01     		lsls	r3, r3, #4
 9820 1340 0B44     		add	r3, r3, r1
 9821 1342 03F58873 		add	r3, r3, #272
 9822 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9823 1348 1946     		mov	r1, r3
 9824 134a 324A     		ldr	r2, .L455+4
 9825 134c 0B46     		mov	r3, r1
 9826 134e 5B00     		lsls	r3, r3, #1
 9827 1350 0B44     		add	r3, r3, r1
 9828 1352 1B01     		lsls	r3, r3, #4
 9829 1354 1344     		add	r3, r3, r2
 9830 1356 03F2B713 		addw	r3, r3, #439
 9831 135a FF22     		movs	r2, #255
 9832 135c 1A70     		strb	r2, [r3]
1476:..\src/command_processing.c ****                 
1477:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1478:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 9833              		.loc 1 1478 0
 9834 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9835 1360 2C4B     		ldr	r3, .L455+4
 9836 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 9837 1366 2B49     		ldr	r1, .L455+4
 9838 1368 1346     		mov	r3, r2
 9839 136a DB00     		lsls	r3, r3, #3
 9840 136c 9B1A     		subs	r3, r3, r2
 9841 136e 1B01     		lsls	r3, r3, #4
 9842 1370 0B44     		add	r3, r3, r1
 9843 1372 03F58873 		add	r3, r3, #272
 9844 1376 0246     		mov	r2, r0
 9845 1378 1A70     		strb	r2, [r3]
1479:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 9846              		.loc 1 1479 0
 9847 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9848 137c 2549     		ldr	r1, .L455+4
 9849 137e 1346     		mov	r3, r2
 9850 1380 DB00     		lsls	r3, r3, #3
 9851 1382 9B1A     		subs	r3, r3, r2
 9852 1384 1B01     		lsls	r3, r3, #4
 9853 1386 0B44     		add	r3, r3, r1
 9854 1388 03F21113 		addw	r3, r3, #273
 9855 138c 0122     		movs	r2, #1
 9856 138e 1A70     		strb	r2, [r3]
1480:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 229


 9857              		.loc 1 1480 0
 9858 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9859 1392 2049     		ldr	r1, .L455+4
 9860 1394 1346     		mov	r3, r2
 9861 1396 DB00     		lsls	r3, r3, #3
 9862 1398 9B1A     		subs	r3, r3, r2
 9863 139a 1B01     		lsls	r3, r3, #4
 9864 139c 0B44     		add	r3, r3, r1
 9865 139e 03F58973 		add	r3, r3, #274
 9866 13a2 0122     		movs	r2, #1
 9867 13a4 1A70     		strb	r2, [r3]
1481:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 9868              		.loc 1 1481 0
 9869 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9870 13a8 1A49     		ldr	r1, .L455+4
 9871 13aa 1346     		mov	r3, r2
 9872 13ac DB00     		lsls	r3, r3, #3
 9873 13ae 9B1A     		subs	r3, r3, r2
 9874 13b0 1B01     		lsls	r3, r3, #4
 9875 13b2 0B44     		add	r3, r3, r1
 9876 13b4 E433     		adds	r3, r3, #228
 9877 13b6 0022     		movs	r2, #0
 9878 13b8 1A60     		str	r2, [r3]
1482:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 9879              		.loc 1 1482 0
 9880 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9881 13bc 154B     		ldr	r3, .L455+4
 9882 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9883 13c2 1846     		mov	r0, r3
 9884 13c4 1349     		ldr	r1, .L455+4
 9885 13c6 0346     		mov	r3, r0
 9886 13c8 5B00     		lsls	r3, r3, #1
 9887 13ca 0344     		add	r3, r3, r0
 9888 13cc 1B01     		lsls	r3, r3, #4
 9889 13ce 0B44     		add	r3, r3, r1
 9890 13d0 03F29513 		addw	r3, r3, #405
 9891 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9892 13d6 1946     		mov	r1, r3
 9893 13d8 4FF47A53 		mov	r3, #16000
 9894 13dc 03FA01F1 		lsl	r1, r3, r1
 9895 13e0 0C48     		ldr	r0, .L455+4
 9896 13e2 1346     		mov	r3, r2
 9897 13e4 DB00     		lsls	r3, r3, #3
 9898 13e6 9B1A     		subs	r3, r3, r2
 9899 13e8 1B01     		lsls	r3, r3, #4
 9900 13ea 0344     		add	r3, r3, r0
 9901 13ec E833     		adds	r3, r3, #232
 9902 13ee 1960     		str	r1, [r3]
1483:..\src/command_processing.c ****             }        
1484:..\src/command_processing.c ****             break;
 9903              		.loc 1 1484 0
 9904 13f0 09E0     		b	.L442
 9905              	.L437:
1485:..\src/command_processing.c ****             
1486:..\src/command_processing.c ****         default:
1487:..\src/command_processing.c ****             break;
 9906              		.loc 1 1487 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 230


 9907 13f2 00BF     		nop
 9908 13f4 08E0     		b	.L380
 9909              	.L438:
1293:..\src/command_processing.c ****             
 9910              		.loc 1 1293 0
 9911 13f6 00BF     		nop
 9912 13f8 06E0     		b	.L380
 9913              	.L439:
1321:..\src/command_processing.c **** 
 9914              		.loc 1 1321 0
 9915 13fa 00BF     		nop
 9916 13fc 04E0     		b	.L380
 9917              	.L440:
1339:..\src/command_processing.c ****             
 9918              		.loc 1 1339 0
 9919 13fe 00BF     		nop
 9920 1400 02E0     		b	.L380
 9921              	.L441:
1349:..\src/command_processing.c ****            
 9922              		.loc 1 1349 0
 9923 1402 00BF     		nop
 9924 1404 00E0     		b	.L380
 9925              	.L442:
1484:..\src/command_processing.c ****             
 9926              		.loc 1 1484 0
 9927 1406 00BF     		nop
 9928              	.L380:
1488:..\src/command_processing.c ****     }
1489:..\src/command_processing.c **** }
 9929              		.loc 1 1489 0 discriminator 1
 9930 1408 00BF     		nop
 9931 140a 1C37     		adds	r7, r7, #28
 9932              		.cfi_def_cfa_offset 20
 9933 140c BD46     		mov	sp, r7
 9934              		.cfi_def_cfa_register 13
 9935              		@ sp needed
 9936 140e F0BD     		pop	{r4, r5, r6, r7, pc}
 9937              	.L456:
 9938              		.align	2
 9939              	.L455:
 9940 1410 00000000 		.word	g_rx
 9941 1414 00000000 		.word	g_mem
 9942              		.cfi_endproc
 9943              	.LFE69:
 9944              		.size	set_custom_param, .-set_custom_param
 9945              		.section	.rodata
 9946 0d26 0000     		.align	2
 9947              	.LC119:
 9948 0d28 506F7274 		.ascii	"Port %u ID:\000"
 9948      20257520 
 9948      49443A00 
 9949              		.align	2
 9950              	.LC120:
 9951 0d34 2575202D 		.ascii	"%u - Device ID:\000"
 9951      20446576 
 9951      69636520 
 9951      49443A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 231


 9952              		.align	2
 9953              	.LC121:
 9954 0d44 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 9954      20494D55 
 9954      20256420 
 9954      636F6E66 
 9954      69677572 
 9955 0d5f 00       		.align	2
 9956              	.LC122:
 9957 0d60 2575202D 		.ascii	"%u - SPI read delay:\000"
 9957      20535049 
 9957      20726561 
 9957      64206465 
 9957      6C61793A 
 9958 0d75 000000   		.align	2
 9959              	.LC123:
 9960 0d78 204E6F6E 		.ascii	" None\000"
 9960      6500
 9961 0d7e 0000     		.align	2
 9962              	.LC124:
 9963 0d80 204C6F77 		.ascii	" Low\000"
 9963      00
 9964 0d85 000000   		.align	2
 9965              	.LC125:
 9966 0d88 20486967 		.ascii	" High\000"
 9966      6800
 9967 0d8e 0000     		.align	2
 9968              	.LC117:
 9969 0d90 4E756D62 		.ascii	"Number of connected IMUs:\000"
 9969      6572206F 
 9969      6620636F 
 9969      6E6E6563 
 9969      74656420 
 9970 0daa 0000     		.align	2
 9971              	.LC118:
 9972 0dac 4D616720 		.ascii	"Mag cal parameters:\000"
 9972      63616C20 
 9972      70617261 
 9972      6D657465 
 9972      72733A00 
 9973              		.section	.text.get_IMU_param_list,"ax",%progbits
 9974              		.align	2
 9975              		.global	get_IMU_param_list
 9976              		.thumb
 9977              		.thumb_func
 9978              		.type	get_IMU_param_list, %function
 9979              	get_IMU_param_list:
 9980              	.LFB70:
1490:..\src/command_processing.c **** 
1491:..\src/command_processing.c **** //==============================================================================
1492:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1493:..\src/command_processing.c **** //==============================================================================
1494:..\src/command_processing.c **** 
1495:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1496:..\src/command_processing.c **** {
 9981              		.loc 1 1496 0
 9982              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 232


 9983              		@ args = 0, pretend = 0, frame = 1704
 9984              		@ frame_needed = 1, uses_anonymous_args = 0
 9985 0000 B0B5     		push	{r4, r5, r7, lr}
 9986              		.cfi_def_cfa_offset 16
 9987              		.cfi_offset 4, -16
 9988              		.cfi_offset 5, -12
 9989              		.cfi_offset 7, -8
 9990              		.cfi_offset 14, -4
 9991 0002 ADF5D56D 		sub	sp, sp, #1704
 9992              		.cfi_def_cfa_offset 1720
 9993 0006 00AF     		add	r7, sp, #0
 9994              		.cfi_def_cfa_register 7
 9995 0008 0246     		mov	r2, r0
 9996 000a BB1D     		adds	r3, r7, #6
 9997 000c 1A80     		strh	r2, [r3]	@ movhi
1497:..\src/command_processing.c ****     //Package to be sent variables
1498:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 9998              		.loc 1 1498 0
 9999 000e 07F58A73 		add	r3, r7, #276
 10000 0012 0022     		movs	r2, #0
 10001 0014 1A60     		str	r2, [r3]
 10002 0016 0433     		adds	r3, r3, #4
 10003 0018 40F27552 		movw	r2, #1397
 10004 001c 0021     		movs	r1, #0
 10005 001e 1846     		mov	r0, r3
 10006 0020 FFF7FEFF 		bl	memset
1499:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1500:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1501:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1502:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1503:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1504:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1505:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 10007              		.loc 1 1505 0
 10008 0024 0723     		movs	r3, #7
 10009 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1506:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 10010              		.loc 1 1506 0
 10011 002a 0023     		movs	r3, #0
 10012 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1507:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 10013              		.loc 1 1507 0
 10014 0030 0223     		movs	r3, #2
 10015 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1508:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10016              		.loc 1 1508 0
 10017 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 10018 003a 5A1C     		adds	r2, r3, #1
1509:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 10019              		.loc 1 1509 0
 10020 003c B7F8A636 		ldrh	r3, [r7, #1702]
 10021 0040 1344     		add	r3, r3, r2
1510:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 10022              		.loc 1 1510 0
 10023 0042 0133     		adds	r3, r3, #1
1508:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10024              		.loc 1 1508 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 233


 10025 0044 9AB2     		uxth	r2, r3
 10026 0046 D24B     		ldr	r3, .L503
 10027 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10028 004a 9BB2     		uxth	r3, r3
 10029 004c 1344     		add	r3, r3, r2
 10030 004e 9BB2     		uxth	r3, r3
 10031 0050 1A46     		mov	r2, r3	@ movhi
 10032 0052 9200     		lsls	r2, r2, #2
 10033 0054 1344     		add	r3, r3, r2
 10034 0056 1A46     		mov	r2, r3	@ movhi
 10035 0058 9100     		lsls	r1, r2, #2
 10036 005a 1A46     		mov	r2, r3	@ movhi
 10037 005c 0B46     		mov	r3, r1	@ movhi
 10038 005e 1344     		add	r3, r3, r2
 10039 0060 5B00     		lsls	r3, r3, #1
 10040 0062 9BB2     		uxth	r3, r3
 10041 0064 FB33     		adds	r3, r3, #251
 10042 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1511:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1512:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1513:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1514:..\src/command_processing.c **** 
1515:..\src/command_processing.c ****     //Auxiliary variables
1516:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1517:..\src/command_processing.c ****     uint16 start_byte = 0;
 10043              		.loc 1 1517 0
 10044 006a 0023     		movs	r3, #0
 10045 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1518:..\src/command_processing.c **** 
1519:..\src/command_processing.c ****     //Parameters menu string definitions
1520:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 10046              		.loc 1 1520 0
 10047 0070 07F1F803 		add	r3, r7, #248
 10048 0074 C74A     		ldr	r2, .L503+4
 10049 0076 1C46     		mov	r4, r3
 10050 0078 1546     		mov	r5, r2
 10051 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10052 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10053 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 10054 0082 03C4     		stmia	r4!, {r0, r1}
 10055 0084 2280     		strh	r2, [r4]	@ movhi
1521:..\src/command_processing.c ****     char ids_str[11]            = "";
 10056              		.loc 1 1521 0
 10057 0086 07F1EC03 		add	r3, r7, #236
 10058 008a 0022     		movs	r2, #0
 10059 008c 1A60     		str	r2, [r3]
 10060 008e 0433     		adds	r3, r3, #4
 10061 0090 0022     		movs	r2, #0
 10062 0092 1A60     		str	r2, [r3]
 10063 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1522:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 10064              		.loc 1 1522 0
 10065 0098 07F1D803 		add	r3, r7, #216
 10066 009c BE4A     		ldr	r2, .L503+8
 10067 009e 1C46     		mov	r4, r3
 10068 00a0 1546     		mov	r5, r2
 10069 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 234


 10070 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10071 00a6 2B68     		ldr	r3, [r5]
 10072 00a8 2360     		str	r3, [r4]
1523:..\src/command_processing.c ****     char id_str[16]             = "";
 10073              		.loc 1 1523 0
 10074 00aa 07F1C803 		add	r3, r7, #200
 10075 00ae 0022     		movs	r2, #0
 10076 00b0 1A60     		str	r2, [r3]
 10077 00b2 0433     		adds	r3, r3, #4
 10078 00b4 0022     		movs	r2, #0
 10079 00b6 1A60     		str	r2, [r3]
 10080 00b8 5A60     		str	r2, [r3, #4]
 10081 00ba 9A60     		str	r2, [r3, #8]
1524:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 10082              		.loc 1 1524 0
 10083 00bc 07F19C03 		add	r3, r7, #156
 10084 00c0 0022     		movs	r2, #0
 10085 00c2 1A60     		str	r2, [r3]
 10086 00c4 0433     		adds	r3, r3, #4
 10087 00c6 2622     		movs	r2, #38
 10088 00c8 0021     		movs	r1, #0
 10089 00ca 1846     		mov	r0, r3
 10090 00cc FFF7FEFF 		bl	memset
1525:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 10091              		.loc 1 1525 0
 10092 00d0 07F18003 		add	r3, r7, #128
 10093 00d4 0022     		movs	r2, #0
 10094 00d6 1A60     		str	r2, [r3]
 10095 00d8 0433     		adds	r3, r3, #4
 10096 00da 0022     		movs	r2, #0
 10097 00dc 1A60     		str	r2, [r3]
 10098 00de 5A60     		str	r2, [r3, #4]
 10099 00e0 9A60     		str	r2, [r3, #8]
 10100 00e2 DA60     		str	r2, [r3, #12]
 10101 00e4 1A61     		str	r2, [r3, #16]
 10102 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1526:..\src/command_processing.c ****     
1527:..\src/command_processing.c ****     //Strings lenghts
1528:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 10103              		.loc 1 1528 0
 10104 00e8 07F1C803 		add	r3, r7, #200
 10105 00ec 1846     		mov	r0, r3
 10106 00ee FFF7FEFF 		bl	strlen
 10107 00f2 0346     		mov	r3, r0
 10108 00f4 87F89336 		strb	r3, [r7, #1683]
1529:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 10109              		.loc 1 1529 0
 10110 00f8 07F1F803 		add	r3, r7, #248
 10111 00fc 1846     		mov	r0, r3
 10112 00fe FFF7FEFF 		bl	strlen
 10113 0102 0346     		mov	r3, r0
 10114 0104 87F89236 		strb	r3, [r7, #1682]
1530:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 10115              		.loc 1 1530 0
 10116 0108 07F1EC03 		add	r3, r7, #236
 10117 010c 1846     		mov	r0, r3
 10118 010e FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 235


 10119 0112 0346     		mov	r3, r0
 10120 0114 87F89136 		strb	r3, [r7, #1681]
1531:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 10121              		.loc 1 1531 0
 10122 0118 07F1D803 		add	r3, r7, #216
 10123 011c 1846     		mov	r0, r3
 10124 011e FFF7FEFF 		bl	strlen
 10125 0122 0346     		mov	r3, r0
 10126 0124 87F89036 		strb	r3, [r7, #1680]
1532:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 10127              		.loc 1 1532 0
 10128 0128 07F19C03 		add	r3, r7, #156
 10129 012c 1846     		mov	r0, r3
 10130 012e FFF7FEFF 		bl	strlen
 10131 0132 0346     		mov	r3, r0
 10132 0134 87F88F36 		strb	r3, [r7, #1679]
1533:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 10133              		.loc 1 1533 0
 10134 0138 07F18003 		add	r3, r7, #128
 10135 013c 1846     		mov	r0, r3
 10136 013e FFF7FEFF 		bl	strlen
 10137 0142 0346     		mov	r3, r0
 10138 0144 87F89D36 		strb	r3, [r7, #1693]
1534:..\src/command_processing.c ****     
1535:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 10139              		.loc 1 1535 0
 10140 0148 07F10803 		add	r3, r7, #8
 10141 014c 0022     		movs	r2, #0
 10142 014e 1A60     		str	r2, [r3]
 10143 0150 0433     		adds	r3, r3, #4
 10144 0152 7222     		movs	r2, #114
 10145 0154 0021     		movs	r1, #0
 10146 0156 1846     		mov	r0, r3
 10147 0158 FFF7FEFF 		bl	memset
1536:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1537:..\src/command_processing.c ****  
1538:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 10148              		.loc 1 1538 0
 10149 015c 07F10800 		add	r0, r7, #8
 10150 0160 6423     		movs	r3, #100
 10151 0162 0A22     		movs	r2, #10
 10152 0164 8D49     		ldr	r1, .L503+12
 10153 0166 FFF7FEFF 		bl	sprintf
1539:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 10154              		.loc 1 1539 0
 10155 016a 07F10803 		add	r3, r7, #8
 10156 016e 1846     		mov	r0, r3
 10157 0170 FFF7FEFF 		bl	strlen
 10158 0174 0346     		mov	r3, r0
 10159 0176 87F88E36 		strb	r3, [r7, #1678]
1540:..\src/command_processing.c **** 
1541:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1542:..\src/command_processing.c ****     // update packet_length
1543:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 10160              		.loc 1 1543 0
 10161 017a 854B     		ldr	r3, .L503
 10162 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 236


 10163 017e 5B08     		lsrs	r3, r3, #1
 10164 0180 DBB2     		uxtb	r3, r3
 10165 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1544:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 10166              		.loc 1 1544 0
 10167 0186 824B     		ldr	r3, .L503
 10168 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10169 018a 1A46     		mov	r2, r3
 10170 018c B7F8A636 		ldrh	r3, [r7, #1702]
 10171 0190 5B00     		lsls	r3, r3, #1
 10172 0192 D31A     		subs	r3, r2, r3
 10173 0194 002B     		cmp	r3, #0
 10174 0196 04DD     		ble	.L458
 10175              		.loc 1 1544 0 is_stmt 0 discriminator 1
 10176 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 10177 019c 0133     		adds	r3, r3, #1
 10178 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 10179              	.L458:
1545:..\src/command_processing.c ****     
1546:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 10180              		.loc 1 1546 0 is_stmt 1
 10181 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 10182 01a6 5A1C     		adds	r2, r3, #1
1547:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10183              		.loc 1 1547 0
 10184 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 10185 01ac 1344     		add	r3, r3, r2
1548:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 10186              		.loc 1 1548 0
 10187 01ae 0133     		adds	r3, r3, #1
1546:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10188              		.loc 1 1546 0
 10189 01b0 9AB2     		uxth	r2, r3
 10190 01b2 774B     		ldr	r3, .L503
 10191 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10192 01b6 9BB2     		uxth	r3, r3
 10193 01b8 1344     		add	r3, r3, r2
 10194 01ba 9BB2     		uxth	r3, r3
 10195 01bc 1A46     		mov	r2, r3	@ movhi
 10196 01be 9200     		lsls	r2, r2, #2
 10197 01c0 1344     		add	r3, r3, r2
 10198 01c2 1A46     		mov	r2, r3	@ movhi
 10199 01c4 9100     		lsls	r1, r2, #2
 10200 01c6 1A46     		mov	r2, r3	@ movhi
 10201 01c8 0B46     		mov	r3, r1	@ movhi
 10202 01ca 1344     		add	r3, r3, r2
 10203 01cc 5B00     		lsls	r3, r3, #1
 10204 01ce 9BB2     		uxth	r3, r3
 10205 01d0 C933     		adds	r3, r3, #201
 10206 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1549:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1550:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1551:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1552:..\src/command_processing.c **** 
1553:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 10207              		.loc 1 1553 0
 10208 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 237


 10209 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10210 01de 1344     		add	r3, r3, r2
 10211 01e0 9BB2     		uxth	r3, r3
 10212 01e2 0333     		adds	r3, r3, #3
 10213 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1554:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 10214              		.loc 1 1554 0
 10215 01e8 07F58A73 		add	r3, r7, #276
 10216 01ec A222     		movs	r2, #162
 10217 01ee 1A70     		strb	r2, [r3]
1555:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 10218              		.loc 1 1555 0
 10219 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10220 01f4 DAB2     		uxtb	r2, r3
 10221 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10222 01fa DBB2     		uxtb	r3, r3
 10223 01fc 1344     		add	r3, r3, r2
 10224 01fe DAB2     		uxtb	r2, r3
 10225 0200 634B     		ldr	r3, .L503
 10226 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10227 0204 1344     		add	r3, r3, r2
 10228 0206 DBB2     		uxtb	r3, r3
 10229 0208 0333     		adds	r3, r3, #3
 10230 020a DAB2     		uxtb	r2, r3
 10231 020c 07F58A73 		add	r3, r7, #276
 10232 0210 5A70     		strb	r2, [r3, #1]
1556:..\src/command_processing.c **** 
1557:..\src/command_processing.c ****     switch(index) {
 10233              		.loc 1 1557 0
 10234 0212 BB1D     		adds	r3, r7, #6
 10235 0214 1B88     		ldrh	r3, [r3]
 10236 0216 002B     		cmp	r3, #0
 10237 0218 40F0D084 		bne	.L501
1558:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1559:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1560:..\src/command_processing.c ****             start_byte = 0;
 10238              		.loc 1 1560 0
 10239 021c 0023     		movs	r3, #0
 10240 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1561:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 10241              		.loc 1 1561 0
 10242 0222 07F58A73 		add	r3, r7, #276
 10243 0226 0222     		movs	r2, #2
 10244 0228 9A70     		strb	r2, [r3, #2]
1562:..\src/command_processing.c ****             packet_data[3] = 1;
 10245              		.loc 1 1562 0
 10246 022a 07F58A73 		add	r3, r7, #276
 10247 022e 0122     		movs	r2, #1
 10248 0230 DA70     		strb	r2, [r3, #3]
1563:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 10249              		.loc 1 1563 0
 10250 0232 574B     		ldr	r3, .L503
 10251 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10252 0236 07F58A73 		add	r3, r7, #276
 10253 023a 1A71     		strb	r2, [r3, #4]
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10254              		.loc 1 1564 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 238


 10255 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10256 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10257 0244 15E0     		b	.L461
 10258              	.L462:
1565:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 10259              		.loc 1 1565 0 discriminator 3
 10260 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10261 024a 5A1D     		adds	r2, r3, #5
 10262 024c B7F8A436 		ldrh	r3, [r7, #1700]
 10263 0250 D31A     		subs	r3, r2, r3
 10264 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 10265 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 10266 025a 8A1A     		subs	r2, r1, r2
 10267 025c 07F1F801 		add	r1, r7, #248
 10268 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10269 0262 07F58A72 		add	r2, r7, #276
 10270 0266 D154     		strb	r1, [r2, r3]
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10271              		.loc 1 1564 0 discriminator 3
 10272 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 10273 026c 013B     		subs	r3, r3, #1
 10274 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10275              	.L461:
1564:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10276              		.loc 1 1564 0 is_stmt 0 discriminator 1
 10277 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 10278 0276 002B     		cmp	r3, #0
 10279 0278 E5D1     		bne	.L462
1566:..\src/command_processing.c ****                 
1567:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1568:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10280              		.loc 1 1568 0 is_stmt 1
 10281 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10282 027e 3233     		adds	r3, r3, #50
 10283 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1569:..\src/command_processing.c ****             i = 0;
 10284              		.loc 1 1569 0
 10285 0284 0023     		movs	r3, #0
 10286 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1570:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 10287              		.loc 1 1570 0
 10288 028a 0023     		movs	r3, #0
 10289 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10290 0290 B2E0     		b	.L463
 10291              	.L470:
1571:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10292              		.loc 1 1571 0
 10293 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 10294 0296 07F1EC03 		add	r3, r7, #236
 10295 029a 4149     		ldr	r1, .L503+16
 10296 029c 1846     		mov	r0, r3
 10297 029e FFF7FEFF 		bl	sprintf
1572:..\src/command_processing.c ****                 h = 4;
 10298              		.loc 1 1572 0
 10299 02a2 0423     		movs	r3, #4
 10300 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1573:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 239


 10301              		.loc 1 1573 0
 10302 02a8 07F1EC03 		add	r3, r7, #236
 10303 02ac 1846     		mov	r0, r3
 10304 02ae FFF7FEFF 		bl	strlen
 10305 02b2 0346     		mov	r3, r0
 10306 02b4 87F89136 		strb	r3, [r7, #1681]
1574:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10307              		.loc 1 1574 0
 10308 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 10309 02bc 9A1C     		adds	r2, r3, #2
 10310 02be B7F8A036 		ldrh	r3, [r7, #1696]
 10311 02c2 3221     		movs	r1, #50
 10312 02c4 01FB03F3 		mul	r3, r1, r3
 10313 02c8 1344     		add	r3, r3, r2
 10314 02ca 07F58A72 		add	r2, r7, #276
 10315 02ce 0221     		movs	r1, #2
 10316 02d0 D154     		strb	r1, [r2, r3]
1575:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10317              		.loc 1 1575 0
 10318 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 10319 02d6 DA1C     		adds	r2, r3, #3
 10320 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10321 02dc 3221     		movs	r1, #50
 10322 02de 01FB03F3 		mul	r3, r1, r3
 10323 02e2 1344     		add	r3, r3, r2
 10324 02e4 07F58A72 		add	r2, r7, #276
 10325 02e8 0321     		movs	r1, #3
 10326 02ea D154     		strb	r1, [r2, r3]
1576:..\src/command_processing.c ****                 
1577:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 10327              		.loc 1 1577 0
 10328 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 10329 02f0 1A46     		mov	r2, r3	@ movhi
 10330 02f2 5200     		lsls	r2, r2, #1
 10331 02f4 1344     		add	r3, r3, r2
 10332 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10333 02fa 39E0     		b	.L464
 10334              	.L467:
1578:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10335              		.loc 1 1578 0
 10336 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 10337 0300 284A     		ldr	r2, .L503+20
 10338 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10339 0304 9BB2     		uxth	r3, r3
 10340 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 10341 030a 9A42     		cmp	r2, r3
 10342 030c 17D1     		bne	.L465
1579:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 10343              		.loc 1 1579 0
 10344 030e B7F89E26 		ldrh	r2, [r7, #1694]
 10345 0312 B7F89436 		ldrh	r3, [r7, #1684]
 10346 0316 1A44     		add	r2, r2, r3
 10347 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 10348 031c 3221     		movs	r1, #50
 10349 031e 01FB03F3 		mul	r3, r1, r3
 10350 0322 1344     		add	r3, r3, r2
 10351 0324 B7F8A426 		ldrh	r2, [r7, #1700]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 240


 10352 0328 1E49     		ldr	r1, .L503+20
 10353 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10354 032c 07F58A72 		add	r2, r7, #276
 10355 0330 D154     		strb	r1, [r2, r3]
1580:..\src/command_processing.c ****                         i++;
 10356              		.loc 1 1580 0
 10357 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 10358 0336 0133     		adds	r3, r3, #1
 10359 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10360 033c 0EE0     		b	.L466
 10361              	.L465:
1581:..\src/command_processing.c ****                     } 
1582:..\src/command_processing.c ****                     else {
1583:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 10362              		.loc 1 1583 0
 10363 033e B7F89E26 		ldrh	r2, [r7, #1694]
 10364 0342 B7F89436 		ldrh	r3, [r7, #1684]
 10365 0346 1A44     		add	r2, r2, r3
 10366 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 10367 034c 3221     		movs	r1, #50
 10368 034e 01FB03F3 		mul	r3, r1, r3
 10369 0352 1344     		add	r3, r3, r2
 10370 0354 07F58A72 		add	r2, r7, #276
 10371 0358 FF21     		movs	r1, #255
 10372 035a D154     		strb	r1, [r2, r3]
 10373              	.L466:
1584:..\src/command_processing.c ****                     }
1585:..\src/command_processing.c ****                     h++;
 10374              		.loc 1 1585 0 discriminator 2
 10375 035c B7F89E36 		ldrh	r3, [r7, #1694]
 10376 0360 0133     		adds	r3, r3, #1
 10377 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1577:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10378              		.loc 1 1577 0 discriminator 2
 10379 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 10380 036a 0133     		adds	r3, r3, #1
 10381 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10382              	.L464:
1577:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10383              		.loc 1 1577 0 is_stmt 0 discriminator 1
 10384 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 10385 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 10386 0378 1346     		mov	r3, r2
 10387 037a 5B00     		lsls	r3, r3, #1
 10388 037c 1344     		add	r3, r3, r2
 10389 037e 0233     		adds	r3, r3, #2
 10390 0380 9942     		cmp	r1, r3
 10391 0382 BBDD     		ble	.L467
1586:..\src/command_processing.c ****                 }
1587:..\src/command_processing.c **** 
1588:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1589:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 10392              		.loc 1 1589 0 is_stmt 1
 10393 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10394 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10395 038c 2BE0     		b	.L468
 10396              	.L504:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 241


 10397 038e 00BF     		.align	2
 10398              	.L503:
 10399 0390 00000000 		.word	N_IMU_Connected
 10400 0394 900D0000 		.word	.LC117
 10401 0398 AC0D0000 		.word	.LC118
 10402 039c A0010000 		.word	.LC107
 10403 03a0 280D0000 		.word	.LC119
 10404 03a4 00000000 		.word	IMU_connected
 10405              	.L469:
1590:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10406              		.loc 1 1590 0 discriminator 3
 10407 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 10408 03ac DA1D     		adds	r2, r3, #7
 10409 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 10410 03b2 3221     		movs	r1, #50
 10411 03b4 01FB03F3 		mul	r3, r1, r3
 10412 03b8 1A44     		add	r2, r2, r3
 10413 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10414 03be 1A44     		add	r2, r2, r3
 10415 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 10416 03c4 D31A     		subs	r3, r2, r3
 10417 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 10418 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 10419 03ce 8A1A     		subs	r2, r1, r2
 10420 03d0 07F1EC01 		add	r1, r7, #236
 10421 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10422 03d6 07F58A72 		add	r2, r7, #276
 10423 03da D154     		strb	r1, [r2, r3]
1589:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10424              		.loc 1 1589 0 discriminator 3
 10425 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 10426 03e0 013B     		subs	r3, r3, #1
 10427 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10428              	.L468:
1589:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10429              		.loc 1 1589 0 is_stmt 0 discriminator 1
 10430 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 10431 03ea 002B     		cmp	r3, #0
 10432 03ec DCD1     		bne	.L469
1570:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10433              		.loc 1 1570 0 is_stmt 1 discriminator 2
 10434 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 10435 03f2 0133     		adds	r3, r3, #1
 10436 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10437              	.L463:
1570:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10438              		.loc 1 1570 0 is_stmt 0 discriminator 1
 10439 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 10440 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 10441 0400 9A42     		cmp	r2, r3
 10442 0402 FFF446AF 		bcc	.L470
1591:..\src/command_processing.c ****             }
1592:..\src/command_processing.c ****             
1593:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1594:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 10443              		.loc 1 1594 0 is_stmt 1
 10444 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 242


 10445 040a 1A46     		mov	r2, r3	@ movhi
 10446 040c 9200     		lsls	r2, r2, #2
 10447 040e 1344     		add	r3, r3, r2
 10448 0410 1A46     		mov	r2, r3	@ movhi
 10449 0412 9100     		lsls	r1, r2, #2
 10450 0414 1A46     		mov	r2, r3	@ movhi
 10451 0416 0B46     		mov	r3, r1	@ movhi
 10452 0418 1344     		add	r3, r3, r2
 10453 041a 5B00     		lsls	r3, r3, #1
 10454 041c 9AB2     		uxth	r2, r3
 10455 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10456 0422 1344     		add	r3, r3, r2
 10457 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1595:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 10458              		.loc 1 1595 0
 10459 0428 0023     		movs	r3, #0
 10460 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10461 042e 1FE1     		b	.L471
 10462              	.L478:
1596:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10463              		.loc 1 1596 0
 10464 0430 B7F89436 		ldrh	r3, [r7, #1684]
 10465 0434 9A1C     		adds	r2, r3, #2
 10466 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 10467 043a 3221     		movs	r1, #50
 10468 043c 01FB03F3 		mul	r3, r1, r3
 10469 0440 1344     		add	r3, r3, r2
 10470 0442 07F58A72 		add	r2, r7, #276
 10471 0446 0221     		movs	r1, #2
 10472 0448 D154     		strb	r1, [r2, r3]
1597:..\src/command_processing.c ****                 
1598:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10473              		.loc 1 1598 0
 10474 044a B7F89436 		ldrh	r3, [r7, #1684]
 10475 044e DA1C     		adds	r2, r3, #3
 10476 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 10477 0454 3221     		movs	r1, #50
 10478 0456 01FB03F3 		mul	r3, r1, r3
 10479 045a 1344     		add	r3, r3, r2
 10480 045c 07F58A72 		add	r2, r7, #276
 10481 0460 0321     		movs	r1, #3
 10482 0462 D154     		strb	r1, [r2, r3]
1599:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10483              		.loc 1 1599 0
 10484 0464 B7F89436 		ldrh	r3, [r7, #1684]
 10485 0468 1A1D     		adds	r2, r3, #4
 10486 046a B7F8A036 		ldrh	r3, [r7, #1696]
 10487 046e 3221     		movs	r1, #50
 10488 0470 01FB03F3 		mul	r3, r1, r3
 10489 0474 1A44     		add	r2, r2, r3
 10490 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 10491 047a 5B00     		lsls	r3, r3, #1
 10492 047c B249     		ldr	r1, .L505
 10493 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10494 0480 1846     		mov	r0, r3
 10495 0482 B249     		ldr	r1, .L505+4
 10496 0484 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 243


 10497 0486 5B00     		lsls	r3, r3, #1
 10498 0488 0344     		add	r3, r3, r0
 10499 048a 0B44     		add	r3, r3, r1
 10500 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10501 048e 07F58A73 		add	r3, r7, #276
 10502 0492 9954     		strb	r1, [r3, r2]
1600:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10503              		.loc 1 1600 0
 10504 0494 B7F89436 		ldrh	r3, [r7, #1684]
 10505 0498 5A1D     		adds	r2, r3, #5
 10506 049a B7F8A036 		ldrh	r3, [r7, #1696]
 10507 049e 3221     		movs	r1, #50
 10508 04a0 01FB03F3 		mul	r3, r1, r3
 10509 04a4 1A44     		add	r2, r2, r3
 10510 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 10511 04aa 5B00     		lsls	r3, r3, #1
 10512 04ac A649     		ldr	r1, .L505
 10513 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10514 04b0 1846     		mov	r0, r3
 10515 04b2 A649     		ldr	r1, .L505+4
 10516 04b4 0346     		mov	r3, r0
 10517 04b6 5B00     		lsls	r3, r3, #1
 10518 04b8 0344     		add	r3, r3, r0
 10519 04ba 0B44     		add	r3, r3, r1
 10520 04bc 0133     		adds	r3, r3, #1
 10521 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10522 04c0 07F58A73 		add	r3, r7, #276
 10523 04c4 9954     		strb	r1, [r3, r2]
1601:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10524              		.loc 1 1601 0
 10525 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 10526 04ca 9A1D     		adds	r2, r3, #6
 10527 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 10528 04d0 3221     		movs	r1, #50
 10529 04d2 01FB03F3 		mul	r3, r1, r3
 10530 04d6 1A44     		add	r2, r2, r3
 10531 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10532 04dc 5B00     		lsls	r3, r3, #1
 10533 04de 9A49     		ldr	r1, .L505
 10534 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10535 04e2 1846     		mov	r0, r3
 10536 04e4 9949     		ldr	r1, .L505+4
 10537 04e6 0346     		mov	r3, r0
 10538 04e8 5B00     		lsls	r3, r3, #1
 10539 04ea 0344     		add	r3, r3, r0
 10540 04ec 0B44     		add	r3, r3, r1
 10541 04ee 0233     		adds	r3, r3, #2
 10542 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10543 04f2 07F58A73 		add	r3, r7, #276
 10544 04f6 9954     		strb	r1, [r3, r2]
1602:..\src/command_processing.c ****                 
1603:..\src/command_processing.c ****                 // check if there is a second value
1604:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 10545              		.loc 1 1604 0
 10546 04f8 954B     		ldr	r3, .L505+8
 10547 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10548 04fc 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 244


 10549 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 10550 0502 0133     		adds	r3, r3, #1
 10551 0504 5B00     		lsls	r3, r3, #1
 10552 0506 9A42     		cmp	r2, r3
 10553 0508 28DA     		bge	.L472
1605:..\src/command_processing.c ****                     // there is only one value
1606:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10554              		.loc 1 1606 0
 10555 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10556 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10557 0512 1EE0     		b	.L473
 10558              	.L474:
1607:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10559              		.loc 1 1607 0 discriminator 3
 10560 0514 B7F89436 		ldrh	r3, [r7, #1684]
 10561 0518 DA1D     		adds	r2, r3, #7
 10562 051a B7F8A036 		ldrh	r3, [r7, #1696]
 10563 051e 3221     		movs	r1, #50
 10564 0520 01FB03F3 		mul	r3, r1, r3
 10565 0524 1A44     		add	r2, r2, r3
 10566 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10567 052a 1A44     		add	r2, r2, r3
 10568 052c B7F8A236 		ldrh	r3, [r7, #1698]
 10569 0530 D31A     		subs	r3, r2, r3
 10570 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10571 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 10572 053a 8A1A     		subs	r2, r1, r2
 10573 053c 07F1D801 		add	r1, r7, #216
 10574 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10575 0542 07F58A72 		add	r2, r7, #276
 10576 0546 D154     		strb	r1, [r2, r3]
1606:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10577              		.loc 1 1606 0 discriminator 3
 10578 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 10579 054c 013B     		subs	r3, r3, #1
 10580 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10581              	.L473:
1606:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10582              		.loc 1 1606 0 is_stmt 0 discriminator 1
 10583 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 10584 0556 002B     		cmp	r3, #0
 10585 0558 DCD1     		bne	.L474
 10586 055a 84E0     		b	.L475
 10587              	.L472:
1608:..\src/command_processing.c ****                 }
1609:..\src/command_processing.c ****                 else {
1610:..\src/command_processing.c ****                     // fill the second value
1611:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 10588              		.loc 1 1611 0 is_stmt 1
 10589 055c B7F89436 		ldrh	r3, [r7, #1684]
 10590 0560 DA1C     		adds	r2, r3, #3
 10591 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 10592 0566 3221     		movs	r1, #50
 10593 0568 01FB03F3 		mul	r3, r1, r3
 10594 056c 1344     		add	r3, r3, r2
 10595 056e 07F58A72 		add	r2, r7, #276
 10596 0572 0621     		movs	r1, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 245


 10597 0574 D154     		strb	r1, [r2, r3]
1612:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10598              		.loc 1 1612 0
 10599 0576 B7F89436 		ldrh	r3, [r7, #1684]
 10600 057a DA1D     		adds	r2, r3, #7
 10601 057c B7F8A036 		ldrh	r3, [r7, #1696]
 10602 0580 3221     		movs	r1, #50
 10603 0582 01FB03F3 		mul	r3, r1, r3
 10604 0586 1A44     		add	r2, r2, r3
 10605 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 10606 058c 5B00     		lsls	r3, r3, #1
 10607 058e 0133     		adds	r3, r3, #1
 10608 0590 6D49     		ldr	r1, .L505
 10609 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10610 0594 1846     		mov	r0, r3
 10611 0596 6D49     		ldr	r1, .L505+4
 10612 0598 0346     		mov	r3, r0
 10613 059a 5B00     		lsls	r3, r3, #1
 10614 059c 0344     		add	r3, r3, r0
 10615 059e 0B44     		add	r3, r3, r1
 10616 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10617 05a2 07F58A73 		add	r3, r7, #276
 10618 05a6 9954     		strb	r1, [r3, r2]
1613:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10619              		.loc 1 1613 0
 10620 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 10621 05ac 03F10802 		add	r2, r3, #8
 10622 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 10623 05b4 3221     		movs	r1, #50
 10624 05b6 01FB03F3 		mul	r3, r1, r3
 10625 05ba 1A44     		add	r2, r2, r3
 10626 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 10627 05c0 5B00     		lsls	r3, r3, #1
 10628 05c2 0133     		adds	r3, r3, #1
 10629 05c4 6049     		ldr	r1, .L505
 10630 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10631 05c8 1846     		mov	r0, r3
 10632 05ca 6049     		ldr	r1, .L505+4
 10633 05cc 0346     		mov	r3, r0
 10634 05ce 5B00     		lsls	r3, r3, #1
 10635 05d0 0344     		add	r3, r3, r0
 10636 05d2 0B44     		add	r3, r3, r1
 10637 05d4 0133     		adds	r3, r3, #1
 10638 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10639 05d8 07F58A73 		add	r3, r7, #276
 10640 05dc 9954     		strb	r1, [r3, r2]
1614:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 10641              		.loc 1 1614 0
 10642 05de B7F89436 		ldrh	r3, [r7, #1684]
 10643 05e2 03F10902 		add	r2, r3, #9
 10644 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 10645 05ea 3221     		movs	r1, #50
 10646 05ec 01FB03F3 		mul	r3, r1, r3
 10647 05f0 1A44     		add	r2, r2, r3
 10648 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 10649 05f6 5B00     		lsls	r3, r3, #1
 10650 05f8 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 246


 10651 05fa 5349     		ldr	r1, .L505
 10652 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10653 05fe 1846     		mov	r0, r3
 10654 0600 5249     		ldr	r1, .L505+4
 10655 0602 0346     		mov	r3, r0
 10656 0604 5B00     		lsls	r3, r3, #1
 10657 0606 0344     		add	r3, r3, r0
 10658 0608 0B44     		add	r3, r3, r1
 10659 060a 0233     		adds	r3, r3, #2
 10660 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10661 060e 07F58A73 		add	r3, r7, #276
 10662 0612 9954     		strb	r1, [r3, r2]
1615:..\src/command_processing.c ****                 
1616:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10663              		.loc 1 1616 0
 10664 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10665 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10666 061c 1FE0     		b	.L476
 10667              	.L477:
1617:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10668              		.loc 1 1617 0 discriminator 3
 10669 061e B7F89436 		ldrh	r3, [r7, #1684]
 10670 0622 03F10A02 		add	r2, r3, #10
 10671 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 10672 062a 3221     		movs	r1, #50
 10673 062c 01FB03F3 		mul	r3, r1, r3
 10674 0630 1A44     		add	r2, r2, r3
 10675 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10676 0636 1A44     		add	r2, r2, r3
 10677 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 10678 063c D31A     		subs	r3, r2, r3
 10679 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 10680 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 10681 0646 8A1A     		subs	r2, r1, r2
 10682 0648 07F1D801 		add	r1, r7, #216
 10683 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10684 064e 07F58A72 		add	r2, r7, #276
 10685 0652 D154     		strb	r1, [r2, r3]
1616:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10686              		.loc 1 1616 0 discriminator 3
 10687 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 10688 0658 013B     		subs	r3, r3, #1
 10689 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10690              	.L476:
1616:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 10691              		.loc 1 1616 0 is_stmt 0 discriminator 1
 10692 065e B7F8A236 		ldrh	r3, [r7, #1698]
 10693 0662 002B     		cmp	r3, #0
 10694 0664 DBD1     		bne	.L477
 10695              	.L475:
1595:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10696              		.loc 1 1595 0 is_stmt 1 discriminator 2
 10697 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 10698 066a 0133     		adds	r3, r3, #1
 10699 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10700              	.L471:
1595:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 247


 10701              		.loc 1 1595 0 is_stmt 0 discriminator 1
 10702 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 10703 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 10704 0678 9A42     		cmp	r2, r3
 10705 067a FFF4D9AE 		bcc	.L478
1618:..\src/command_processing.c ****                 }
1619:..\src/command_processing.c ****             }
1620:..\src/command_processing.c ****             
1621:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1622:..\src/command_processing.c ****             
1623:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 10706              		.loc 1 1623 0 is_stmt 1
 10707 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10708 0682 1A46     		mov	r2, r3	@ movhi
 10709 0684 9200     		lsls	r2, r2, #2
 10710 0686 1344     		add	r3, r3, r2
 10711 0688 1A46     		mov	r2, r3	@ movhi
 10712 068a 9100     		lsls	r1, r2, #2
 10713 068c 1A46     		mov	r2, r3	@ movhi
 10714 068e 0B46     		mov	r3, r1	@ movhi
 10715 0690 1344     		add	r3, r3, r2
 10716 0692 5B00     		lsls	r3, r3, #1
 10717 0694 9AB2     		uxth	r2, r3
 10718 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10719 069a 1344     		add	r3, r3, r2
 10720 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1624:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 10721              		.loc 1 1624 0
 10722 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 10723 06a4 5A1E     		subs	r2, r3, #1
 10724 06a6 07F1C803 		add	r3, r7, #200
 10725 06aa 2A49     		ldr	r1, .L505+12
 10726 06ac 1846     		mov	r0, r3
 10727 06ae FFF7FEFF 		bl	sprintf
1625:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 10728              		.loc 1 1625 0
 10729 06b2 07F1C803 		add	r3, r7, #200
 10730 06b6 1846     		mov	r0, r3
 10731 06b8 FFF7FEFF 		bl	strlen
 10732 06bc 0346     		mov	r3, r0
 10733 06be 87F89336 		strb	r3, [r7, #1683]
1626:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 10734              		.loc 1 1626 0
 10735 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 10736 06c6 0233     		adds	r3, r3, #2
 10737 06c8 07F58A72 		add	r2, r7, #276
 10738 06cc 0221     		movs	r1, #2
 10739 06ce D154     		strb	r1, [r2, r3]
1627:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 10740              		.loc 1 1627 0
 10741 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 10742 06d4 0333     		adds	r3, r3, #3
 10743 06d6 07F58A72 		add	r2, r7, #276
 10744 06da 0121     		movs	r1, #1
 10745 06dc D154     		strb	r1, [r2, r3]
1628:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 10746              		.loc 1 1628 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 248


 10747 06de B7F89436 		ldrh	r3, [r7, #1684]
 10748 06e2 0433     		adds	r3, r3, #4
 10749 06e4 1C4A     		ldr	r2, .L505+16
 10750 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 10751 06ea 07F58A72 		add	r2, r7, #276
 10752 06ee D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10753              		.loc 1 1629 0
 10754 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10755 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10756 06f8 18E0     		b	.L479
 10757              	.L480:
1630:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 10758              		.loc 1 1630 0 discriminator 3
 10759 06fa B7F89436 		ldrh	r3, [r7, #1684]
 10760 06fe 5A1D     		adds	r2, r3, #5
 10761 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 10762 0704 1A44     		add	r2, r2, r3
 10763 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 10764 070a D31A     		subs	r3, r2, r3
 10765 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 10766 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 10767 0714 8A1A     		subs	r2, r1, r2
 10768 0716 07F1C801 		add	r1, r7, #200
 10769 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10770 071c 07F58A72 		add	r2, r7, #276
 10771 0720 D154     		strb	r1, [r2, r3]
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10772              		.loc 1 1629 0 discriminator 3
 10773 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 10774 0726 013B     		subs	r3, r3, #1
 10775 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10776              	.L479:
1629:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 10777              		.loc 1 1629 0 is_stmt 0 discriminator 1
 10778 072c B7F8A436 		ldrh	r3, [r7, #1700]
 10779 0730 002B     		cmp	r3, #0
 10780 0732 E2D1     		bne	.L480
1631:..\src/command_processing.c ****                 
1632:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1633:..\src/command_processing.c ****             
1634:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10781              		.loc 1 1634 0 is_stmt 1
 10782 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10783 0738 3233     		adds	r3, r3, #50
 10784 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1635:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 10785              		.loc 1 1635 0
 10786 073e 0023     		movs	r3, #0
 10787 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10788 0744 38E1     		b	.L481
 10789              	.L506:
 10790 0746 00BF     		.align	2
 10791              	.L505:
 10792 0748 00000000 		.word	IMU_connected
 10793 074c 00000000 		.word	MagCal
 10794 0750 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 249


 10795 0754 340D0000 		.word	.LC120
 10796 0758 00000000 		.word	c_mem
 10797              	.L484:
1636:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 10798              		.loc 1 1636 0
 10799 075c B7F89826 		ldrh	r2, [r7, #1688]
 10800 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 10801 0764 D118     		adds	r1, r2, r3
 10802 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 10803 076a D54A     		ldr	r2, .L507
 10804 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10805 076e 07F19C00 		add	r0, r7, #156
 10806 0772 0A46     		mov	r2, r1
 10807 0774 D349     		ldr	r1, .L507+4
 10808 0776 FFF7FEFF 		bl	sprintf
1637:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 10809              		.loc 1 1637 0
 10810 077a 07F19C03 		add	r3, r7, #156
 10811 077e 1846     		mov	r0, r3
 10812 0780 FFF7FEFF 		bl	strlen
 10813 0784 0346     		mov	r3, r0
 10814 0786 87F88F36 		strb	r3, [r7, #1679]
1638:..\src/command_processing.c ****             
1639:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 10815              		.loc 1 1639 0
 10816 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10817 078e 1A46     		mov	r2, r3	@ movhi
 10818 0790 9200     		lsls	r2, r2, #2
 10819 0792 1344     		add	r3, r3, r2
 10820 0794 1A46     		mov	r2, r3	@ movhi
 10821 0796 9100     		lsls	r1, r2, #2
 10822 0798 1A46     		mov	r2, r3	@ movhi
 10823 079a 0B46     		mov	r3, r1	@ movhi
 10824 079c 1344     		add	r3, r3, r2
 10825 079e 5B00     		lsls	r3, r3, #1
 10826 07a0 9AB2     		uxth	r2, r3
 10827 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10828 07a6 1344     		add	r3, r3, r2
 10829 07a8 9BB2     		uxth	r3, r3
 10830 07aa 0233     		adds	r3, r3, #2
 10831 07ac 9BB2     		uxth	r3, r3
 10832 07ae 1A46     		mov	r2, r3
 10833 07b0 07F58A73 		add	r3, r7, #276
 10834 07b4 0221     		movs	r1, #2
 10835 07b6 9954     		strb	r1, [r3, r2]
1640:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 10836              		.loc 1 1640 0
 10837 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10838 07bc 1A46     		mov	r2, r3	@ movhi
 10839 07be 9200     		lsls	r2, r2, #2
 10840 07c0 1344     		add	r3, r3, r2
 10841 07c2 1A46     		mov	r2, r3	@ movhi
 10842 07c4 9100     		lsls	r1, r2, #2
 10843 07c6 1A46     		mov	r2, r3	@ movhi
 10844 07c8 0B46     		mov	r3, r1	@ movhi
 10845 07ca 1344     		add	r3, r3, r2
 10846 07cc 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 250


 10847 07ce 9AB2     		uxth	r2, r3
 10848 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10849 07d4 1344     		add	r3, r3, r2
 10850 07d6 9BB2     		uxth	r3, r3
 10851 07d8 0333     		adds	r3, r3, #3
 10852 07da 9BB2     		uxth	r3, r3
 10853 07dc 1A46     		mov	r2, r3
 10854 07de 07F58A73 		add	r3, r7, #276
 10855 07e2 0521     		movs	r1, #5
 10856 07e4 9954     		strb	r1, [r3, r2]
1641:..\src/command_processing.c ****                 
1642:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10857              		.loc 1 1642 0
 10858 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10859 07ea 1A46     		mov	r2, r3	@ movhi
 10860 07ec 9200     		lsls	r2, r2, #2
 10861 07ee 1344     		add	r3, r3, r2
 10862 07f0 1A46     		mov	r2, r3	@ movhi
 10863 07f2 9100     		lsls	r1, r2, #2
 10864 07f4 1A46     		mov	r2, r3	@ movhi
 10865 07f6 0B46     		mov	r3, r1	@ movhi
 10866 07f8 1344     		add	r3, r3, r2
 10867 07fa 5B00     		lsls	r3, r3, #1
 10868 07fc 9AB2     		uxth	r2, r3
 10869 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10870 0802 1344     		add	r3, r3, r2
 10871 0804 9BB2     		uxth	r3, r3
 10872 0806 0433     		adds	r3, r3, #4
 10873 0808 9BB2     		uxth	r3, r3
 10874 080a 1846     		mov	r0, r3
 10875 080c B7F8A436 		ldrh	r3, [r7, #1700]
 10876 0810 AB4A     		ldr	r2, .L507
 10877 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10878 0814 1946     		mov	r1, r3
 10879 0816 AC4A     		ldr	r2, .L507+8
 10880 0818 0B46     		mov	r3, r1
 10881 081a 9B00     		lsls	r3, r3, #2
 10882 081c 0B44     		add	r3, r3, r1
 10883 081e 1344     		add	r3, r3, r2
 10884 0820 03F20223 		addw	r3, r3, #514
 10885 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10886 0826 07F58A73 		add	r3, r7, #276
 10887 082a 1A54     		strb	r2, [r3, r0]
1643:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10888              		.loc 1 1643 0
 10889 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10890 0830 1A46     		mov	r2, r3	@ movhi
 10891 0832 9200     		lsls	r2, r2, #2
 10892 0834 1344     		add	r3, r3, r2
 10893 0836 1A46     		mov	r2, r3	@ movhi
 10894 0838 9100     		lsls	r1, r2, #2
 10895 083a 1A46     		mov	r2, r3	@ movhi
 10896 083c 0B46     		mov	r3, r1	@ movhi
 10897 083e 1344     		add	r3, r3, r2
 10898 0840 5B00     		lsls	r3, r3, #1
 10899 0842 9AB2     		uxth	r2, r3
 10900 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 251


 10901 0848 1344     		add	r3, r3, r2
 10902 084a 9BB2     		uxth	r3, r3
 10903 084c 0533     		adds	r3, r3, #5
 10904 084e 9BB2     		uxth	r3, r3
 10905 0850 1846     		mov	r0, r3
 10906 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 10907 0856 9A4A     		ldr	r2, .L507
 10908 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10909 085a 1946     		mov	r1, r3
 10910 085c 9A4A     		ldr	r2, .L507+8
 10911 085e 0B46     		mov	r3, r1
 10912 0860 9B00     		lsls	r3, r3, #2
 10913 0862 0B44     		add	r3, r3, r1
 10914 0864 1344     		add	r3, r3, r2
 10915 0866 03F20323 		addw	r3, r3, #515
 10916 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10917 086c 07F58A73 		add	r3, r7, #276
 10918 0870 1A54     		strb	r2, [r3, r0]
1644:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10919              		.loc 1 1644 0
 10920 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10921 0876 1A46     		mov	r2, r3	@ movhi
 10922 0878 9200     		lsls	r2, r2, #2
 10923 087a 1344     		add	r3, r3, r2
 10924 087c 1A46     		mov	r2, r3	@ movhi
 10925 087e 9100     		lsls	r1, r2, #2
 10926 0880 1A46     		mov	r2, r3	@ movhi
 10927 0882 0B46     		mov	r3, r1	@ movhi
 10928 0884 1344     		add	r3, r3, r2
 10929 0886 5B00     		lsls	r3, r3, #1
 10930 0888 9AB2     		uxth	r2, r3
 10931 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10932 088e 1344     		add	r3, r3, r2
 10933 0890 9BB2     		uxth	r3, r3
 10934 0892 0633     		adds	r3, r3, #6
 10935 0894 9BB2     		uxth	r3, r3
 10936 0896 1846     		mov	r0, r3
 10937 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 10938 089c 884A     		ldr	r2, .L507
 10939 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10940 08a0 1946     		mov	r1, r3
 10941 08a2 894A     		ldr	r2, .L507+8
 10942 08a4 0B46     		mov	r3, r1
 10943 08a6 9B00     		lsls	r3, r3, #2
 10944 08a8 0B44     		add	r3, r3, r1
 10945 08aa 1344     		add	r3, r3, r2
 10946 08ac 03F50173 		add	r3, r3, #516
 10947 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10948 08b2 07F58A73 		add	r3, r7, #276
 10949 08b6 1A54     		strb	r2, [r3, r0]
1645:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10950              		.loc 1 1645 0
 10951 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10952 08bc 1A46     		mov	r2, r3	@ movhi
 10953 08be 9200     		lsls	r2, r2, #2
 10954 08c0 1344     		add	r3, r3, r2
 10955 08c2 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 252


 10956 08c4 9100     		lsls	r1, r2, #2
 10957 08c6 1A46     		mov	r2, r3	@ movhi
 10958 08c8 0B46     		mov	r3, r1	@ movhi
 10959 08ca 1344     		add	r3, r3, r2
 10960 08cc 5B00     		lsls	r3, r3, #1
 10961 08ce 9AB2     		uxth	r2, r3
 10962 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10963 08d4 1344     		add	r3, r3, r2
 10964 08d6 9BB2     		uxth	r3, r3
 10965 08d8 0733     		adds	r3, r3, #7
 10966 08da 9BB2     		uxth	r3, r3
 10967 08dc 1846     		mov	r0, r3
 10968 08de B7F8A436 		ldrh	r3, [r7, #1700]
 10969 08e2 774A     		ldr	r2, .L507
 10970 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10971 08e6 1946     		mov	r1, r3
 10972 08e8 774A     		ldr	r2, .L507+8
 10973 08ea 0B46     		mov	r3, r1
 10974 08ec 9B00     		lsls	r3, r3, #2
 10975 08ee 0B44     		add	r3, r3, r1
 10976 08f0 1344     		add	r3, r3, r2
 10977 08f2 03F20523 		addw	r3, r3, #517
 10978 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10979 08f8 07F58A73 		add	r3, r7, #276
 10980 08fc 1A54     		strb	r2, [r3, r0]
1646:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 10981              		.loc 1 1646 0
 10982 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 10983 0902 1A46     		mov	r2, r3	@ movhi
 10984 0904 9200     		lsls	r2, r2, #2
 10985 0906 1344     		add	r3, r3, r2
 10986 0908 1A46     		mov	r2, r3	@ movhi
 10987 090a 9100     		lsls	r1, r2, #2
 10988 090c 1A46     		mov	r2, r3	@ movhi
 10989 090e 0B46     		mov	r3, r1	@ movhi
 10990 0910 1344     		add	r3, r3, r2
 10991 0912 5B00     		lsls	r3, r3, #1
 10992 0914 9AB2     		uxth	r2, r3
 10993 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10994 091a 1344     		add	r3, r3, r2
 10995 091c 9BB2     		uxth	r3, r3
 10996 091e 0833     		adds	r3, r3, #8
 10997 0920 9BB2     		uxth	r3, r3
 10998 0922 1846     		mov	r0, r3
 10999 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 11000 0928 654A     		ldr	r2, .L507
 11001 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11002 092c 1946     		mov	r1, r3
 11003 092e 664A     		ldr	r2, .L507+8
 11004 0930 0B46     		mov	r3, r1
 11005 0932 9B00     		lsls	r3, r3, #2
 11006 0934 0B44     		add	r3, r3, r1
 11007 0936 1344     		add	r3, r3, r2
 11008 0938 03F20623 		addw	r3, r3, #518
 11009 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11010 093e 07F58A73 		add	r3, r7, #276
 11011 0942 1A54     		strb	r2, [r3, r0]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 253


1647:..\src/command_processing.c **** 
1648:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 11012              		.loc 1 1648 0
 11013 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11014 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11015 094c 2BE0     		b	.L482
 11016              	.L483:
1649:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11017              		.loc 1 1649 0 discriminator 3
 11018 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11019 0952 1A46     		mov	r2, r3	@ movhi
 11020 0954 9200     		lsls	r2, r2, #2
 11021 0956 1344     		add	r3, r3, r2
 11022 0958 1A46     		mov	r2, r3	@ movhi
 11023 095a 9100     		lsls	r1, r2, #2
 11024 095c 1A46     		mov	r2, r3	@ movhi
 11025 095e 0B46     		mov	r3, r1	@ movhi
 11026 0960 1344     		add	r3, r3, r2
 11027 0962 5B00     		lsls	r3, r3, #1
 11028 0964 9AB2     		uxth	r2, r3
 11029 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11030 096a 1344     		add	r3, r3, r2
 11031 096c 9AB2     		uxth	r2, r3
 11032 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11033 0972 9BB2     		uxth	r3, r3
 11034 0974 1344     		add	r3, r3, r2
 11035 0976 9AB2     		uxth	r2, r3
 11036 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 11037 097c D31A     		subs	r3, r2, r3
 11038 097e 9BB2     		uxth	r3, r3
 11039 0980 0933     		adds	r3, r3, #9
 11040 0982 9BB2     		uxth	r3, r3
 11041 0984 1946     		mov	r1, r3
 11042 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 11043 098a B7F8A236 		ldrh	r3, [r7, #1698]
 11044 098e D31A     		subs	r3, r2, r3
 11045 0990 07F19C02 		add	r2, r7, #156
 11046 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11047 0996 07F58A73 		add	r3, r7, #276
 11048 099a 5A54     		strb	r2, [r3, r1]
1648:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11049              		.loc 1 1648 0 discriminator 3
 11050 099c B7F8A236 		ldrh	r3, [r7, #1698]
 11051 09a0 013B     		subs	r3, r3, #1
 11052 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11053              	.L482:
1648:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11054              		.loc 1 1648 0 is_stmt 0 discriminator 1
 11055 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 11056 09aa 002B     		cmp	r3, #0
 11057 09ac CFD1     		bne	.L483
1635:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11058              		.loc 1 1635 0 is_stmt 1 discriminator 2
 11059 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 11060 09b2 0133     		adds	r3, r3, #1
 11061 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11062              	.L481:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 254


1635:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11063              		.loc 1 1635 0 is_stmt 0 discriminator 1
 11064 09b8 444B     		ldr	r3, .L507+12
 11065 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11066 09bc 9BB2     		uxth	r3, r3
 11067 09be B7F8A426 		ldrh	r2, [r7, #1700]
 11068 09c2 9A42     		cmp	r2, r3
 11069 09c4 FFF4CAAE 		bcc	.L484
1650:..\src/command_processing.c ****             }  
1651:..\src/command_processing.c ****           
1652:..\src/command_processing.c **** 
1653:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1654:..\src/command_processing.c ****             
1655:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 11070              		.loc 1 1655 0 is_stmt 1
 11071 09c8 404B     		ldr	r3, .L507+12
 11072 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11073 09cc 9BB2     		uxth	r3, r3
 11074 09ce 1A46     		mov	r2, r3	@ movhi
 11075 09d0 9200     		lsls	r2, r2, #2
 11076 09d2 1344     		add	r3, r3, r2
 11077 09d4 1A46     		mov	r2, r3	@ movhi
 11078 09d6 9100     		lsls	r1, r2, #2
 11079 09d8 1A46     		mov	r2, r3	@ movhi
 11080 09da 0B46     		mov	r3, r1	@ movhi
 11081 09dc 1344     		add	r3, r3, r2
 11082 09de 5B00     		lsls	r3, r3, #1
 11083 09e0 9AB2     		uxth	r2, r3
 11084 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11085 09e6 1344     		add	r3, r3, r2
 11086 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1656:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 11087              		.loc 1 1656 0
 11088 09ec B7F89836 		ldrh	r3, [r7, #1688]
 11089 09f0 364A     		ldr	r2, .L507+12
 11090 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11091 09f4 1A44     		add	r2, r2, r3
 11092 09f6 07F18003 		add	r3, r7, #128
 11093 09fa 3549     		ldr	r1, .L507+16
 11094 09fc 1846     		mov	r0, r3
 11095 09fe FFF7FEFF 		bl	sprintf
1657:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 11096              		.loc 1 1657 0
 11097 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 11098 0a06 0233     		adds	r3, r3, #2
 11099 0a08 07F58A72 		add	r2, r7, #276
 11100 0a0c 0021     		movs	r1, #0
 11101 0a0e D154     		strb	r1, [r2, r3]
1658:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11102              		.loc 1 1658 0
 11103 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 11104 0a14 0333     		adds	r3, r3, #3
 11105 0a16 07F58A72 		add	r2, r7, #276
 11106 0a1a 0121     		movs	r1, #1
 11107 0a1c D154     		strb	r1, [r2, r3]
1659:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 11108              		.loc 1 1659 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 255


 11109 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 11110 0a22 0433     		adds	r3, r3, #4
 11111 0a24 284A     		ldr	r2, .L507+8
 11112 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 11113 0a2a 07F58A72 		add	r2, r7, #276
 11114 0a2e D154     		strb	r1, [r2, r3]
1660:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 11115              		.loc 1 1660 0
 11116 0a30 254B     		ldr	r3, .L507+8
 11117 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 11118 0a36 012B     		cmp	r3, #1
 11119 0a38 17D0     		beq	.L486
 11120 0a3a 022B     		cmp	r3, #2
 11121 0a3c 28D0     		beq	.L487
 11122 0a3e 002B     		cmp	r3, #0
 11123 0a40 00D0     		beq	.L488
1661:..\src/command_processing.c ****                 case 0: 
1662:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1663:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1664:..\src/command_processing.c ****                     break;
1665:..\src/command_processing.c ****                 case 1: 
1666:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1667:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1668:..\src/command_processing.c ****                     break;
1669:..\src/command_processing.c ****                 case 2: 
1670:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1671:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1672:..\src/command_processing.c ****                     break;
1673:..\src/command_processing.c ****                 default:
1674:..\src/command_processing.c ****                     break;
 11124              		.loc 1 1674 0
 11125 0a42 38E0     		b	.L489
 11126              	.L488:
1662:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11127              		.loc 1 1662 0
 11128 0a44 07F18003 		add	r3, r7, #128
 11129 0a48 1846     		mov	r0, r3
 11130 0a4a FFF7FEFF 		bl	strlen
 11131 0a4e 0346     		mov	r3, r0
 11132 0a50 1A46     		mov	r2, r3
 11133 0a52 07F18003 		add	r3, r7, #128
 11134 0a56 1344     		add	r3, r3, r2
 11135 0a58 1E4A     		ldr	r2, .L507+20
 11136 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 11137 0a5c 1860     		str	r0, [r3]	@ unaligned
 11138 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11139 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1663:..\src/command_processing.c ****                     break;
 11140              		.loc 1 1663 0
 11141 0a62 1A23     		movs	r3, #26
 11142 0a64 87F89D36 		strb	r3, [r7, #1693]
1664:..\src/command_processing.c ****                 case 1: 
 11143              		.loc 1 1664 0
 11144 0a68 25E0     		b	.L489
 11145              	.L486:
1666:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 11146              		.loc 1 1666 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 256


 11147 0a6a 07F18003 		add	r3, r7, #128
 11148 0a6e 1846     		mov	r0, r3
 11149 0a70 FFF7FEFF 		bl	strlen
 11150 0a74 0346     		mov	r3, r0
 11151 0a76 1A46     		mov	r2, r3
 11152 0a78 07F18003 		add	r3, r7, #128
 11153 0a7c 1344     		add	r3, r3, r2
 11154 0a7e 164A     		ldr	r2, .L507+24
 11155 0a80 1068     		ldr	r0, [r2]	@ unaligned
 11156 0a82 1860     		str	r0, [r3]	@ unaligned
 11157 0a84 1279     		ldrb	r2, [r2, #4]
 11158 0a86 1A71     		strb	r2, [r3, #4]
1667:..\src/command_processing.c ****                     break;
 11159              		.loc 1 1667 0
 11160 0a88 1923     		movs	r3, #25
 11161 0a8a 87F89D36 		strb	r3, [r7, #1693]
1668:..\src/command_processing.c ****                 case 2: 
 11162              		.loc 1 1668 0
 11163 0a8e 12E0     		b	.L489
 11164              	.L487:
1670:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11165              		.loc 1 1670 0
 11166 0a90 07F18003 		add	r3, r7, #128
 11167 0a94 1846     		mov	r0, r3
 11168 0a96 FFF7FEFF 		bl	strlen
 11169 0a9a 0346     		mov	r3, r0
 11170 0a9c 1A46     		mov	r2, r3
 11171 0a9e 07F18003 		add	r3, r7, #128
 11172 0aa2 1344     		add	r3, r3, r2
 11173 0aa4 0D4A     		ldr	r2, .L507+28
 11174 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 11175 0aa8 1860     		str	r0, [r3]	@ unaligned
 11176 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11177 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1671:..\src/command_processing.c ****                     break;
 11178              		.loc 1 1671 0
 11179 0aae 1A23     		movs	r3, #26
 11180 0ab0 87F89D36 		strb	r3, [r7, #1693]
1672:..\src/command_processing.c ****                 default:
 11181              		.loc 1 1672 0
 11182 0ab4 00BF     		nop
 11183              	.L489:
1675:..\src/command_processing.c ****             }            
1676:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 11184              		.loc 1 1676 0
 11185 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11186 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11187 0abe 28E0     		b	.L490
 11188              	.L508:
 11189              		.align	2
 11190              	.L507:
 11191 0ac0 00000000 		.word	IMU_connected
 11192 0ac4 440D0000 		.word	.LC121
 11193 0ac8 00000000 		.word	c_mem
 11194 0acc 00000000 		.word	N_IMU_Connected
 11195 0ad0 600D0000 		.word	.LC122
 11196 0ad4 780D0000 		.word	.LC123
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 257


 11197 0ad8 800D0000 		.word	.LC124
 11198 0adc 880D0000 		.word	.LC125
 11199              	.L491:
1677:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11200              		.loc 1 1677 0 discriminator 3
 11201 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 11202 0ae4 5A1D     		adds	r2, r3, #5
 11203 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11204 0aea 1A44     		add	r2, r2, r3
 11205 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 11206 0af0 D31A     		subs	r3, r2, r3
 11207 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 11208 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 11209 0afa 8A1A     		subs	r2, r1, r2
 11210 0afc 07F18001 		add	r1, r7, #128
 11211 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11212 0b02 07F58A72 		add	r2, r7, #276
 11213 0b06 D154     		strb	r1, [r2, r3]
1676:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11214              		.loc 1 1676 0 discriminator 3
 11215 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 11216 0b0c 013B     		subs	r3, r3, #1
 11217 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11218              	.L490:
1676:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11219              		.loc 1 1676 0 is_stmt 0 discriminator 1
 11220 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 11221 0b16 002B     		cmp	r3, #0
 11222 0b18 E2D1     		bne	.L491
1678:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1679:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 11223              		.loc 1 1679 0 is_stmt 1
 11224 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 11225 0b1e 5A1D     		adds	r2, r3, #5
 11226 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11227 0b24 1344     		add	r3, r3, r2
 11228 0b26 07F58A72 		add	r2, r7, #276
 11229 0b2a 0121     		movs	r1, #1
 11230 0b2c D154     		strb	r1, [r2, r3]
1680:..\src/command_processing.c ****                   
1681:..\src/command_processing.c ****             
1682:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1683:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11231              		.loc 1 1683 0
 11232 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11233 0b32 3233     		adds	r3, r3, #50
 11234 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11235              		.loc 1 1684 0
 11236 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11237 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11238 0b40 1AE0     		b	.L492
 11239              	.L493:
1685:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 11240              		.loc 1 1685 0 discriminator 3
 11241 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11242 0b46 0233     		adds	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 258


 11243 0b48 9BB2     		uxth	r3, r3
 11244 0b4a 1A46     		mov	r2, r3
 11245 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11246 0b50 1A44     		add	r2, r2, r3
 11247 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 11248 0b56 D31A     		subs	r3, r2, r3
 11249 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 11250 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 11251 0b60 8A1A     		subs	r2, r1, r2
 11252 0b62 07F10801 		add	r1, r7, #8
 11253 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11254 0b68 07F58A72 		add	r2, r7, #276
 11255 0b6c D154     		strb	r1, [r2, r3]
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11256              		.loc 1 1684 0 discriminator 3
 11257 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 11258 0b72 013B     		subs	r3, r3, #1
 11259 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11260              	.L492:
1684:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11261              		.loc 1 1684 0 is_stmt 0 discriminator 1
 11262 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 11263 0b7c 002B     		cmp	r3, #0
 11264 0b7e E0D1     		bne	.L493
1686:..\src/command_processing.c **** 
1687:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 11265              		.loc 1 1687 0 is_stmt 1
 11266 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 11267 0b84 5C1E     		subs	r4, r3, #1
 11268 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 11269 0b8a DBB2     		uxtb	r3, r3
 11270 0b8c 013B     		subs	r3, r3, #1
 11271 0b8e DAB2     		uxtb	r2, r3
 11272 0b90 07F58A73 		add	r3, r7, #276
 11273 0b94 1146     		mov	r1, r2
 11274 0b96 1846     		mov	r0, r3
 11275 0b98 FFF7FEFF 		bl	LCRChecksum
 11276 0b9c 0346     		mov	r3, r0
 11277 0b9e 1A46     		mov	r2, r3
 11278 0ba0 07F58A73 		add	r3, r7, #276
 11279 0ba4 1A55     		strb	r2, [r3, r4]
1688:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 11280              		.loc 1 1688 0
 11281 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 11282 0baa 07F58A73 		add	r3, r7, #276
 11283 0bae 1146     		mov	r1, r2
 11284 0bb0 1846     		mov	r0, r3
 11285 0bb2 FFF7FEFF 		bl	commWrite
1689:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 11286              		.loc 1 1689 0
 11287 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1690:..\src/command_processing.c ****         break;
 11288              		.loc 1 1690 0
 11289 0bba 09E1     		b	.L494
 11290              	.L501:
1691:..\src/command_processing.c **** 
1692:..\src/command_processing.c **** //=========================================================     other_params
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 259


1693:..\src/command_processing.c ****         default: 
1694:..\src/command_processing.c ****             
1695:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 11291              		.loc 1 1695 0
 11292 0bbc BB1D     		adds	r3, r7, #6
 11293 0bbe 1A88     		ldrh	r2, [r3]
 11294 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 11295 0bc4 013B     		subs	r3, r3, #1
 11296 0bc6 9A42     		cmp	r2, r3
 11297 0bc8 C0F20181 		blt	.L502
1696:..\src/command_processing.c ****                 break;
1697:..\src/command_processing.c ****             
1698:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 11298              		.loc 1 1698 0
 11299 0bcc BB1D     		adds	r3, r7, #6
 11300 0bce 1A88     		ldrh	r2, [r3]
 11301 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 11302 0bd4 8149     		ldr	r1, .L509
 11303 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 11304 0bd8 0B44     		add	r3, r3, r1
 11305 0bda 9A42     		cmp	r2, r3
 11306 0bdc 05D1     		bne	.L496
1699:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 11307              		.loc 1 1699 0
 11308 0bde 804B     		ldr	r3, .L509+4
 11309 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11310 0be2 804B     		ldr	r3, .L509+8
 11311 0be4 83F80122 		strb	r2, [r3, #513]
1700:..\src/command_processing.c ****                 break;
 11312              		.loc 1 1700 0
 11313 0be8 F2E0     		b	.L494
 11314              	.L496:
1701:..\src/command_processing.c ****             }
1702:..\src/command_processing.c ****             
1703:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 11315              		.loc 1 1703 0
 11316 0bea BB1D     		adds	r3, r7, #6
 11317 0bec 1A88     		ldrh	r2, [r3]
 11318 0bee B7F89836 		ldrh	r3, [r7, #1688]
 11319 0bf2 013B     		subs	r3, r3, #1
 11320 0bf4 9A42     		cmp	r2, r3
 11321 0bf6 05D1     		bne	.L497
1704:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 11322              		.loc 1 1704 0
 11323 0bf8 794B     		ldr	r3, .L509+4
 11324 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11325 0bfc 794B     		ldr	r3, .L509+8
 11326 0bfe 83F8A020 		strb	r2, [r3, #160]
1705:..\src/command_processing.c ****             }
1706:..\src/command_processing.c ****             else {
1707:..\src/command_processing.c ****             
1708:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1711:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1712:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1713:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 260


1714:..\src/command_processing.c ****                 
1715:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1716:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1717:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1718:..\src/command_processing.c ****                 {
1719:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1720:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1721:..\src/command_processing.c ****                 }
1722:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1723:..\src/command_processing.c ****             
1724:..\src/command_processing.c ****             }
1725:..\src/command_processing.c ****             
1726:..\src/command_processing.c ****         break;
 11327              		.loc 1 1726 0
 11328 0c02 E5E0     		b	.L494
 11329              	.L497:
1709:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 11330              		.loc 1 1709 0
 11331 0c04 BB1D     		adds	r3, r7, #6
 11332 0c06 1A88     		ldrh	r2, [r3]
 11333 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 11334 0c0c D31A     		subs	r3, r2, r3
 11335 0c0e 764A     		ldr	r2, .L509+12
 11336 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11337 0c12 1946     		mov	r1, r3
 11338 0c14 724B     		ldr	r3, .L509+4
 11339 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11340 0c18 724A     		ldr	r2, .L509+8
 11341 0c1a 0B46     		mov	r3, r1
 11342 0c1c 9B00     		lsls	r3, r3, #2
 11343 0c1e 0B44     		add	r3, r3, r1
 11344 0c20 1344     		add	r3, r3, r2
 11345 0c22 03F20223 		addw	r3, r3, #514
 11346 0c26 0246     		mov	r2, r0
 11347 0c28 1A70     		strb	r2, [r3]
1710:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 11348              		.loc 1 1710 0
 11349 0c2a BB1D     		adds	r3, r7, #6
 11350 0c2c 1A88     		ldrh	r2, [r3]
 11351 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 11352 0c32 D31A     		subs	r3, r2, r3
 11353 0c34 6C4A     		ldr	r2, .L509+12
 11354 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11355 0c38 1946     		mov	r1, r3
 11356 0c3a 694B     		ldr	r3, .L509+4
 11357 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 11358 0c3e 694A     		ldr	r2, .L509+8
 11359 0c40 0B46     		mov	r3, r1
 11360 0c42 9B00     		lsls	r3, r3, #2
 11361 0c44 0B44     		add	r3, r3, r1
 11362 0c46 1344     		add	r3, r3, r2
 11363 0c48 03F20323 		addw	r3, r3, #515
 11364 0c4c 0246     		mov	r2, r0
 11365 0c4e 1A70     		strb	r2, [r3]
1711:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 11366              		.loc 1 1711 0
 11367 0c50 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 261


 11368 0c52 1A88     		ldrh	r2, [r3]
 11369 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 11370 0c58 D31A     		subs	r3, r2, r3
 11371 0c5a 634A     		ldr	r2, .L509+12
 11372 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11373 0c5e 1946     		mov	r1, r3
 11374 0c60 5F4B     		ldr	r3, .L509+4
 11375 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 11376 0c64 5F4A     		ldr	r2, .L509+8
 11377 0c66 0B46     		mov	r3, r1
 11378 0c68 9B00     		lsls	r3, r3, #2
 11379 0c6a 0B44     		add	r3, r3, r1
 11380 0c6c 1344     		add	r3, r3, r2
 11381 0c6e 03F50173 		add	r3, r3, #516
 11382 0c72 0246     		mov	r2, r0
 11383 0c74 1A70     		strb	r2, [r3]
1712:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 11384              		.loc 1 1712 0
 11385 0c76 BB1D     		adds	r3, r7, #6
 11386 0c78 1A88     		ldrh	r2, [r3]
 11387 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 11388 0c7e D31A     		subs	r3, r2, r3
 11389 0c80 594A     		ldr	r2, .L509+12
 11390 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11391 0c84 1946     		mov	r1, r3
 11392 0c86 564B     		ldr	r3, .L509+4
 11393 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 11394 0c8a 564A     		ldr	r2, .L509+8
 11395 0c8c 0B46     		mov	r3, r1
 11396 0c8e 9B00     		lsls	r3, r3, #2
 11397 0c90 0B44     		add	r3, r3, r1
 11398 0c92 1344     		add	r3, r3, r2
 11399 0c94 03F20523 		addw	r3, r3, #517
 11400 0c98 0246     		mov	r2, r0
 11401 0c9a 1A70     		strb	r2, [r3]
1713:..\src/command_processing.c ****                 
 11402              		.loc 1 1713 0
 11403 0c9c BB1D     		adds	r3, r7, #6
 11404 0c9e 1A88     		ldrh	r2, [r3]
 11405 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 11406 0ca4 D31A     		subs	r3, r2, r3
 11407 0ca6 504A     		ldr	r2, .L509+12
 11408 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11409 0caa 1946     		mov	r1, r3
 11410 0cac 4C4B     		ldr	r3, .L509+4
 11411 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 11412 0cb0 4C4A     		ldr	r2, .L509+8
 11413 0cb2 0B46     		mov	r3, r1
 11414 0cb4 9B00     		lsls	r3, r3, #2
 11415 0cb6 0B44     		add	r3, r3, r1
 11416 0cb8 1344     		add	r3, r3, r2
 11417 0cba 03F20623 		addw	r3, r3, #518
 11418 0cbe 0246     		mov	r2, r0
 11419 0cc0 1A70     		strb	r2, [r3]
1716:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 11420              		.loc 1 1716 0
 11421 0cc2 4A4B     		ldr	r3, .L509+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 262


 11422 0cc4 0122     		movs	r2, #1
 11423 0cc6 1A60     		str	r2, [r3]
1717:..\src/command_processing.c ****                 {
 11424              		.loc 1 1717 0
 11425 0cc8 0023     		movs	r3, #0
 11426 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11427 0cce 71E0     		b	.L499
 11428              	.L500:
1719:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 11429              		.loc 1 1719 0 discriminator 3
 11430 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 11431 0cd4 444A     		ldr	r2, .L509+12
 11432 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11433 0cd8 1C46     		mov	r4, r3
 11434 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 11435 0cde 424A     		ldr	r2, .L509+12
 11436 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11437 0ce2 1946     		mov	r1, r3
 11438 0ce4 3F4A     		ldr	r2, .L509+8
 11439 0ce6 0B46     		mov	r3, r1
 11440 0ce8 9B00     		lsls	r3, r3, #2
 11441 0cea 0B44     		add	r3, r3, r1
 11442 0cec 1344     		add	r3, r3, r2
 11443 0cee 03F20223 		addw	r3, r3, #514
 11444 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11445 0cf4 1A46     		mov	r2, r3
 11446 0cf6 1346     		mov	r3, r2
 11447 0cf8 5B00     		lsls	r3, r3, #1
 11448 0cfa 1344     		add	r3, r3, r2
 11449 0cfc 5B00     		lsls	r3, r3, #1
 11450 0cfe 5A1C     		adds	r2, r3, #1
 11451 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 11452 0d04 3849     		ldr	r1, .L509+12
 11453 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11454 0d08 1846     		mov	r0, r3
 11455 0d0a 3649     		ldr	r1, .L509+8
 11456 0d0c 0346     		mov	r3, r0
 11457 0d0e 9B00     		lsls	r3, r3, #2
 11458 0d10 0344     		add	r3, r3, r0
 11459 0d12 0B44     		add	r3, r3, r1
 11460 0d14 03F20323 		addw	r3, r3, #515
 11461 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11462 0d1a 1946     		mov	r1, r3
 11463 0d1c 0B46     		mov	r3, r1
 11464 0d1e 5B00     		lsls	r3, r3, #1
 11465 0d20 0B44     		add	r3, r3, r1
 11466 0d22 5B00     		lsls	r3, r3, #1
 11467 0d24 1A44     		add	r2, r2, r3
 11468 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 11469 0d2a 2F49     		ldr	r1, .L509+12
 11470 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11471 0d2e 1846     		mov	r0, r3
 11472 0d30 2C49     		ldr	r1, .L509+8
 11473 0d32 0346     		mov	r3, r0
 11474 0d34 9B00     		lsls	r3, r3, #2
 11475 0d36 0344     		add	r3, r3, r0
 11476 0d38 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 263


 11477 0d3a 03F50173 		add	r3, r3, #516
 11478 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11479 0d40 1946     		mov	r1, r3
 11480 0d42 0B46     		mov	r3, r1
 11481 0d44 5B00     		lsls	r3, r3, #1
 11482 0d46 0B44     		add	r3, r3, r1
 11483 0d48 5B00     		lsls	r3, r3, #1
 11484 0d4a 1A44     		add	r2, r2, r3
 11485 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 11486 0d50 2549     		ldr	r1, .L509+12
 11487 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11488 0d54 1846     		mov	r0, r3
 11489 0d56 2349     		ldr	r1, .L509+8
 11490 0d58 0346     		mov	r3, r0
 11491 0d5a 9B00     		lsls	r3, r3, #2
 11492 0d5c 0344     		add	r3, r3, r0
 11493 0d5e 0B44     		add	r3, r3, r1
 11494 0d60 03F20523 		addw	r3, r3, #517
 11495 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11496 0d66 1B01     		lsls	r3, r3, #4
 11497 0d68 1A44     		add	r2, r2, r3
 11498 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 11499 0d6e 1E49     		ldr	r1, .L509+12
 11500 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11501 0d72 1846     		mov	r0, r3
 11502 0d74 1B49     		ldr	r1, .L509+8
 11503 0d76 0346     		mov	r3, r0
 11504 0d78 9B00     		lsls	r3, r3, #2
 11505 0d7a 0344     		add	r3, r3, r0
 11506 0d7c 0B44     		add	r3, r3, r1
 11507 0d7e 03F20623 		addw	r3, r3, #518
 11508 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11509 0d84 5B00     		lsls	r3, r3, #1
 11510 0d86 1344     		add	r3, r3, r2
 11511 0d88 0133     		adds	r3, r3, #1
 11512 0d8a 194A     		ldr	r2, .L509+20
 11513 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1720:..\src/command_processing.c ****                 }
 11514              		.loc 1 1720 0 discriminator 3
 11515 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 11516 0d94 144A     		ldr	r2, .L509+12
 11517 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11518 0d98 1A46     		mov	r2, r3
 11519 0d9a 154B     		ldr	r3, .L509+20
 11520 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 11521 0da0 124B     		ldr	r3, .L509+16
 11522 0da2 1B68     		ldr	r3, [r3]
 11523 0da4 1344     		add	r3, r3, r2
 11524 0da6 114A     		ldr	r2, .L509+16
 11525 0da8 1360     		str	r3, [r2]
1717:..\src/command_processing.c ****                 {
 11526              		.loc 1 1717 0 discriminator 3
 11527 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 11528 0dae 0133     		adds	r3, r3, #1
 11529 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11530              	.L499:
1717:..\src/command_processing.c ****                 {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 264


 11531              		.loc 1 1717 0 is_stmt 0 discriminator 1
 11532 0db4 094B     		ldr	r3, .L509
 11533 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11534 0db8 9BB2     		uxth	r3, r3
 11535 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 11536 0dbe 9A42     		cmp	r2, r3
 11537 0dc0 86D3     		bcc	.L500
1722:..\src/command_processing.c ****             
 11538              		.loc 1 1722 0 is_stmt 1
 11539 0dc2 0A4B     		ldr	r3, .L509+16
 11540 0dc4 1B68     		ldr	r3, [r3]
 11541 0dc6 0133     		adds	r3, r3, #1
 11542 0dc8 084A     		ldr	r2, .L509+16
 11543 0dca 1360     		str	r3, [r2]
 11544              		.loc 1 1726 0
 11545 0dcc 00E0     		b	.L494
 11546              	.L502:
1696:..\src/command_processing.c ****             
 11547              		.loc 1 1696 0
 11548 0dce 00BF     		nop
 11549              	.L494:
1727:..\src/command_processing.c ****     }
1728:..\src/command_processing.c **** }
 11550              		.loc 1 1728 0 discriminator 1
 11551 0dd0 00BF     		nop
 11552 0dd2 07F5D567 		add	r7, r7, #1704
 11553              		.cfi_def_cfa_offset 16
 11554 0dd6 BD46     		mov	sp, r7
 11555              		.cfi_def_cfa_register 13
 11556              		@ sp needed
 11557 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 11558              	.L510:
 11559 0dda 00BF     		.align	2
 11560              	.L509:
 11561 0ddc 00000000 		.word	N_IMU_Connected
 11562 0de0 00000000 		.word	g_rx
 11563 0de4 00000000 		.word	g_mem
 11564 0de8 00000000 		.word	IMU_connected
 11565 0dec 00000000 		.word	imus_data_size
 11566 0df0 00000000 		.word	single_imu_size
 11567              		.cfi_endproc
 11568              	.LFE70:
 11569              		.size	get_IMU_param_list, .-get_IMU_param_list
 11570              		.section	.text.setZeros,"ax",%progbits
 11571              		.align	2
 11572              		.global	setZeros
 11573              		.thumb
 11574              		.thumb_func
 11575              		.type	setZeros, %function
 11576              	setZeros:
 11577              	.LFB71:
1729:..\src/command_processing.c **** 
1730:..\src/command_processing.c **** //==============================================================================
1731:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1732:..\src/command_processing.c **** //==============================================================================
1733:..\src/command_processing.c **** 
1734:..\src/command_processing.c **** void setZeros()
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 265


1735:..\src/command_processing.c **** {
 11578              		.loc 1 1735 0
 11579              		.cfi_startproc
 11580              		@ args = 0, pretend = 0, frame = 8
 11581              		@ frame_needed = 1, uses_anonymous_args = 0
 11582 0000 90B5     		push	{r4, r7, lr}
 11583              		.cfi_def_cfa_offset 12
 11584              		.cfi_offset 4, -12
 11585              		.cfi_offset 7, -8
 11586              		.cfi_offset 14, -4
 11587 0002 83B0     		sub	sp, sp, #12
 11588              		.cfi_def_cfa_offset 24
 11589 0004 00AF     		add	r7, sp, #0
 11590              		.cfi_def_cfa_register 7
1736:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1737:..\src/command_processing.c ****     
1738:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 11591              		.loc 1 1738 0
 11592 0006 0023     		movs	r3, #0
 11593 0008 BB71     		strb	r3, [r7, #6]
 11594 000a 26E0     		b	.L512
 11595              	.L515:
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11596              		.loc 1 1739 0
 11597 000c 0023     		movs	r3, #0
 11598 000e FB71     		strb	r3, [r7, #7]
 11599 0010 1DE0     		b	.L513
 11600              	.L514:
1740:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 11601              		.loc 1 1740 0 discriminator 3
 11602 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11603 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 11604 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11605 0018 1648     		ldr	r0, .L516
 11606 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 11607 001e 1C46     		mov	r4, r3
 11608 0020 1548     		ldr	r0, .L516+4
 11609 0022 1346     		mov	r3, r2
 11610 0024 5B00     		lsls	r3, r3, #1
 11611 0026 1344     		add	r3, r3, r2
 11612 0028 9B00     		lsls	r3, r3, #2
 11613 002a 0B44     		add	r3, r3, r1
 11614 002c 6633     		adds	r3, r3, #102
 11615 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1741:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 11616              		.loc 1 1741 0 discriminator 3
 11617 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 11618 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11619 0036 1149     		ldr	r1, .L516+8
 11620 0038 3420     		movs	r0, #52
 11621 003a 00FB02F2 		mul	r2, r0, r2
 11622 003e 0A44     		add	r2, r2, r1
 11623 0040 1344     		add	r3, r3, r2
 11624 0042 1833     		adds	r3, r3, #24
 11625 0044 0022     		movs	r2, #0
 11626 0046 1A70     		strb	r2, [r3]
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 266


 11627              		.loc 1 1739 0 discriminator 3
 11628 0048 FB79     		ldrb	r3, [r7, #7]
 11629 004a 0133     		adds	r3, r3, #1
 11630 004c FB71     		strb	r3, [r7, #7]
 11631              	.L513:
1739:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11632              		.loc 1 1739 0 is_stmt 0 discriminator 1
 11633 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11634 0050 022B     		cmp	r3, #2
 11635 0052 DED9     		bls	.L514
1738:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11636              		.loc 1 1738 0 is_stmt 1 discriminator 2
 11637 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11638 0056 0133     		adds	r3, r3, #1
 11639 0058 BB71     		strb	r3, [r7, #6]
 11640              	.L512:
1738:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 11641              		.loc 1 1738 0 is_stmt 0 discriminator 1
 11642 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 11643 005c 012B     		cmp	r3, #1
 11644 005e D5D9     		bls	.L515
1742:..\src/command_processing.c ****         }
1743:..\src/command_processing.c ****     }
1744:..\src/command_processing.c ****     reset_last_value_flag = 1;
 11645              		.loc 1 1744 0 is_stmt 1
 11646 0060 074B     		ldr	r3, .L516+12
 11647 0062 0122     		movs	r2, #1
 11648 0064 1A70     		strb	r2, [r3]
1745:..\src/command_processing.c **** 
1746:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 11649              		.loc 1 1746 0
 11650 0066 0120     		movs	r0, #1
 11651 0068 FFF7FEFF 		bl	sendAcknowledgment
1747:..\src/command_processing.c **** }
 11652              		.loc 1 1747 0
 11653 006c 00BF     		nop
 11654 006e 0C37     		adds	r7, r7, #12
 11655              		.cfi_def_cfa_offset 12
 11656 0070 BD46     		mov	sp, r7
 11657              		.cfi_def_cfa_register 13
 11658              		@ sp needed
 11659 0072 90BD     		pop	{r4, r7, pc}
 11660              	.L517:
 11661              		.align	2
 11662              	.L516:
 11663 0074 00000000 		.word	data_encoder_raw
 11664 0078 00000000 		.word	g_mem
 11665 007c 00000000 		.word	g_meas
 11666 0080 00000000 		.word	reset_last_value_flag
 11667              		.cfi_endproc
 11668              	.LFE71:
 11669              		.size	setZeros, .-setZeros
 11670              		.section	.rodata
 11671              		.align	2
 11672              	.LC126:
 11673 0dc0 0D0A00   		.ascii	"\015\012\000"
 11674 0dc3 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 267


 11675              	.LC127:
 11676 0dc4 4669726D 		.ascii	"Firmware version: \000"
 11676      77617265 
 11676      20766572 
 11676      73696F6E 
 11676      3A2000
 11677 0dd7 00       		.align	2
 11678              	.LC128:
 11679 0dd8 536F6674 		.ascii	"SoftHand PRO firmware v. 1.7.2 (PSoC5)\000"
 11679      48616E64 
 11679      2050524F 
 11679      20666972 
 11679      6D776172 
 11680 0dff 00       		.align	2
 11681              	.LC129:
 11682 0e00 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 11682      0A00
 11683 0e06 0000     		.align	2
 11684              	.LC130:
 11685 0e08 44455649 		.ascii	"DEVICE INFO\015\012\000"
 11685      43452049 
 11685      4E464F0D 
 11685      0A00
 11686 0e16 0000     		.align	2
 11687              	.LC131:
 11688 0e18 49443A20 		.ascii	"ID: %d\015\012\000"
 11688      25640D0A 
 11688      00
 11689 0e21 000000   		.align	2
 11690              	.LC132:
 11691 0e24 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 11691      63653A20 
 11691      534F4654 
 11691      48414E44 
 11691      2050524F 
 11692 0e3b 00       		.align	2
 11693              	.LC133:
 11694 0e3c 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 11694      63653A20 
 11694      47454E45 
 11694      52494320 
 11694      32204D4F 
 11695 0e57 00       		.align	2
 11696              	.LC134:
 11697 0e58 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 11697      20736964 
 11697      653A2052 
 11697      49474854 
 11697      0D0A00
 11698 0e6b 00       		.align	2
 11699              	.LC135:
 11700 0e6c 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 11700      20736964 
 11700      653A204C 
 11700      4546540D 
 11700      0A00
 11701 0e7e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 268


 11702              	.LC136:
 11703 0e80 55736572 		.ascii	"User: MARIA\015\012\000"
 11703      3A204D41 
 11703      5249410D 
 11703      0A00
 11704 0e8e 0000     		.align	2
 11705              	.LC137:
 11706 0e90 55736572 		.ascii	"User: ROZA\015\012\000"
 11706      3A20524F 
 11706      5A410D0A 
 11706      00
 11707 0e9d 000000   		.align	2
 11708              	.LC138:
 11709 0ea0 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 11709      3A204745 
 11709      4E455249 
 11709      43205553 
 11709      45520D0A 
 11710 0eb5 000000   		.align	2
 11711              	.LC139:
 11712 0eb8 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 11712      52202564 
 11712      20494E46 
 11712      4F0D0A00 
 11713              		.align	2
 11714              	.LC140:
 11715 0ec8 4D6F746F 		.ascii	"Motor reference\000"
 11715      72207265 
 11715      66657265 
 11715      6E636500 
 11716              		.align	2
 11717              	.LC141:
 11718 0ed8 202D2043 		.ascii	" - Currents: \000"
 11718      75727265 
 11718      6E74733A 
 11718      2000
 11719 0ee6 0000     		.align	2
 11720              	.LC142:
 11721 0ee8 202D2050 		.ascii	" - Pwm: \000"
 11721      776D3A20 
 11721      00
 11722 0ef1 000000   		.align	2
 11723              	.LC143:
 11724 0ef4 202D2050 		.ascii	" - Position: \000"
 11724      6F736974 
 11724      696F6E3A 
 11724      2000
 11725 0f02 0000     		.align	2
 11726              	.LC144:
 11727 0f04 25642000 		.ascii	"%d \000"
 11728              		.align	2
 11729              	.LC145:
 11730 0f08 4D6F746F 		.ascii	"Motor enabled: \000"
 11730      7220656E 
 11730      61626C65 
 11730      643A2000 
 11731              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 269


 11732              	.LC146:
 11733 0f18 5945530D 		.ascii	"YES\015\012\000"
 11733      0A00
 11734 0f1e 0000     		.align	2
 11735              	.LC147:
 11736 0f20 4E4F0D0A 		.ascii	"NO\015\012\000"
 11736      00
 11737 0f25 000000   		.align	2
 11738              	.LC148:
 11739 0f28 50574D20 		.ascii	"PWM rescaling activation: \000"
 11739      72657363 
 11739      616C696E 
 11739      67206163 
 11739      74697661 
 11740 0f43 00       		.align	2
 11741              	.LC149:
 11742 0f44 5945530A 		.ascii	"YES\012\000"
 11742      00
 11743 0f49 000000   		.align	2
 11744              	.LC150:
 11745 0f4c 4E4F0A00 		.ascii	"NO\012\000"
 11746              		.align	2
 11747              	.LC151:
 11748 0f50 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 11748      4C696D69 
 11748      743A2025 
 11748      640D0A00 
 11749              		.align	2
 11750              	.LC152:
 11751 0f60 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 11751      41535552 
 11751      454D454E 
 11751      54532049 
 11751      4E464F0D 
 11752 0f76 0000     		.align	2
 11753              	.LC153:
 11754 0f78 53656E73 		.ascii	"Sensor value: \000"
 11754      6F722076 
 11754      616C7565 
 11754      3A2000
 11755 0f87 00       		.align	2
 11756              	.LC154:
 11757 0f88 256400   		.ascii	"%d\000"
 11758 0f8b 00       		.align	2
 11759              	.LC155:
 11760 0f8c 2C2000   		.ascii	", \000"
 11761 0f8f 00       		.align	2
 11762              	.LC156:
 11763 0f90 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 11763      65727920 
 11763      25642056 
 11763      6F6C7461 
 11763      67652028 
 11764 0fad 000000   		.align	2
 11765              	.LC157:
 11766 0fb0 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 11766      20636861 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 270


 11766      72676520 
 11766      706F7765 
 11766      72207465 
 11767 0fd7 00       		.align	2
 11768              	.LC158:
 11769 0fd8 43757272 		.ascii	"Current %d (mA): %ld\000"
 11769      656E7420 
 11769      25642028 
 11769      6D41293A 
 11769      20256C64 
 11770 0fed 000000   		.align	2
 11771              	.LC159:
 11772 0ff0 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 11772      20477261 
 11772      73702048 
 11772      6F6C6420 
 11772      43757272 
 11773 1015 000000   		.align	2
 11774              	.LC160:
 11775 1018 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 11775      544F5220 
 11775      25642043 
 11775      4F4E4649 
 11775      47555241 
 11776 1033 00       		.align	2
 11777              	.LC161:
 11778 1034 50494420 		.ascii	"PID Controller: \000"
 11778      436F6E74 
 11778      726F6C6C 
 11778      65723A20 
 11778      00
 11779              		.global	__aeabi_i2d
 11780              		.global	__aeabi_ddiv
 11781 1045 000000   		.align	2
 11782              	.LC162:
 11783 1048 50202D3E 		.ascii	"P -> %f  \000"
 11783      20256620 
 11783      2000
 11784 1052 0000     		.align	2
 11785              	.LC163:
 11786 1054 49202D3E 		.ascii	"I -> %f  \000"
 11786      20256620 
 11786      2000
 11787 105e 0000     		.align	2
 11788              	.LC164:
 11789 1060 44202D3E 		.ascii	"D -> %f\015\012\000"
 11789      2025660D 
 11789      0A00
 11790 106a 0000     		.align	2
 11791              	.LC165:
 11792 106c 43757272 		.ascii	"Current PID Controller: \000"
 11792      656E7420 
 11792      50494420 
 11792      436F6E74 
 11792      726F6C6C 
 11793 1085 000000   		.align	2
 11794              	.LC166:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 271


 11795 1088 53746172 		.ascii	"Startup activation: YES\015\012\000"
 11795      74757020 
 11795      61637469 
 11795      76617469 
 11795      6F6E3A20 
 11796 10a2 0000     		.align	2
 11797              	.LC167:
 11798 10a4 53746172 		.ascii	"Startup activation: NO\015\012\000"
 11798      74757020 
 11798      61637469 
 11798      76617469 
 11798      6F6E3A20 
 11799 10bd 000000   		.align	2
 11800              	.LC168:
 11801 10c0 496E7075 		.ascii	"Input mode: USB\015\012\000"
 11801      74206D6F 
 11801      64653A20 
 11801      5553420D 
 11801      0A00
 11802 10d2 0000     		.align	2
 11803              	.LC169:
 11804 10d4 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 11804      74206D6F 
 11804      64653A20 
 11804      48616E64 
 11804      6C650D0A 
 11805 10e9 000000   		.align	2
 11806              	.LC170:
 11807 10ec 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 11807      74206D6F 
 11807      64653A20 
 11807      454D4720 
 11807      70726F70 
 11808 110b 00       		.align	2
 11809              	.LC171:
 11810 110c 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 11810      74206D6F 
 11810      64653A20 
 11810      454D4720 
 11810      696E7465 
 11811 1127 00       		.align	2
 11812              	.LC172:
 11813 1128 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 11813      74206D6F 
 11813      64653A20 
 11813      454D4720 
 11813      46434653 
 11814 113f 00       		.align	2
 11815              	.LC173:
 11816 1140 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 11816      74206D6F 
 11816      64653A20 
 11816      454D4720 
 11816      46434653 
 11817 115b 00       		.align	2
 11818              	.LC174:
 11819 115c 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 272


 11819      74206D6F 
 11819      64653A20 
 11819      454D4720 
 11819      70726F70 
 11820 118a 00       		.ascii	"\000"
 11821 118b 00       		.align	2
 11822              	.LC175:
 11823 118c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 11823      726F6C20 
 11823      6D6F6465 
 11823      3A20506F 
 11823      73697469 
 11824 11a5 000000   		.align	2
 11825              	.LC176:
 11826 11a8 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 11826      726F6C20 
 11826      6D6F6465 
 11826      3A205057 
 11826      4D0D0A00 
 11827              		.align	2
 11828              	.LC177:
 11829 11bc 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 11829      726F6C20 
 11829      6D6F6465 
 11829      3A204375 
 11829      7272656E 
 11830              		.align	2
 11831              	.LC178:
 11832 11d4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 11832      726F6C20 
 11832      6D6F6465 
 11832      3A20506F 
 11832      73697469 
 11833 11f9 000000   		.align	2
 11834              	.LC179:
 11835 11fc 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 11835      6C757465 
 11835      20656E63 
 11835      6F646572 
 11835      20706F73 
 11836 121d 000000   		.align	2
 11837              	.LC180:
 11838 1220 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 11838      6C757465 
 11838      20656E63 
 11838      6F646572 
 11838      20706F73 
 11839              		.align	2
 11840              	.LC181:
 11841 1240 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 11841      722D4861 
 11841      6E646C65 
 11841      20526174 
 11841      696F3A20 
 11842 1259 000000   		.align	2
 11843              	.LC182:
 11844 125c 53656E73 		.ascii	"Sensor resolution: \000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 273


 11844      6F722072 
 11844      65736F6C 
 11844      7574696F 
 11844      6E3A2000 
 11845              		.align	2
 11846              	.LC183:
 11847 1270 4D656173 		.ascii	"Measurement Offset: \000"
 11847      7572656D 
 11847      656E7420 
 11847      4F666673 
 11847      65743A20 
 11848 1285 000000   		.align	2
 11849              	.LC184:
 11850 1288 256C6400 		.ascii	"%ld\000"
 11851              		.align	2
 11852              	.LC185:
 11853 128c 4D656173 		.ascii	"Measurement Multiplier: \000"
 11853      7572656D 
 11853      656E7420 
 11853      4D756C74 
 11853      69706C69 
 11854              		.global	__aeabi_f2d
 11855 12a5 000000   		.align	2
 11856              	.LC186:
 11857 12a8 256600   		.ascii	"%f\000"
 11858 12ab 00       		.align	2
 11859              	.LC187:
 11860 12ac 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 11860      656E7420 
 11860      6C6F6F6B 
 11860      75702074 
 11860      61626C65 
 11861 12da 00       		.ascii	"\000"
 11862 12db 00       		.align	2
 11863              	.LC188:
 11864 12dc 506F7369 		.ascii	"Position limit active: %d\000"
 11864      74696F6E 
 11864      206C696D 
 11864      69742061 
 11864      63746976 
 11865 12f6 0000     		.align	2
 11866              	.LC189:
 11867 12f8 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 11867      74696F6E 
 11867      206C696D 
 11867      6974206D 
 11867      6F746F72 
 11868 131b 00       		.align	2
 11869              	.LC190:
 11870 131c 73757020 		.ascii	"sup -> %ld\015\012\000"
 11870      2D3E2025 
 11870      6C640D0A 
 11870      00
 11871 1329 000000   		.align	2
 11872              	.LC191:
 11873 132c 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 11873      73746570 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 274


 11873      20706F73 
 11873      20616E64 
 11873      206E6567 
 11874              		.align	2
 11875              	.LC192:
 11876 1348 43757272 		.ascii	"Current limit: %d\015\012\000"
 11876      656E7420 
 11876      6C696D69 
 11876      743A2025 
 11876      640D0A00 
 11877              		.align	2
 11878              	.LC193:
 11879 135c 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 11879      434F4E46 
 11879      49475552 
 11879      4154494F 
 11879      4E0D0A00 
 11880              		.align	2
 11881              	.LC194:
 11882 1370 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 11882      74687265 
 11882      73686F6C 
 11882      6473205B 
 11882      30202D20 
 11883 1392 0000     		.align	2
 11884              	.LC195:
 11885 1394 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 11885      6D617820 
 11885      76616C75 
 11885      6573205B 
 11885      30202D20 
 11886              		.align	2
 11887              	.LC196:
 11888 13b8 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 11888      696E7665 
 11888      7273696F 
 11888      6E3A2059 
 11888      45530D0A 
 11889 13cd 000000   		.align	2
 11890              	.LC197:
 11891 13d0 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 11891      696E7665 
 11891      7273696F 
 11891      6E3A204E 
 11891      4F0D0A00 
 11892              		.align	2
 11893              	.LC198:
 11894 13e4 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 11894      62726174 
 11894      696F6E20 
 11894      656E6162 
 11894      6C65643A 
 11895 13ff 00       		.align	2
 11896              	.LC199:
 11897 1400 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 11897      62726174 
 11897      696F6E20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 275


 11897      656E6162 
 11897      6C65643A 
 11898 141a 0000     		.align	2
 11899              	.LC200:
 11900 141c 454D4720 		.ascii	"EMG max speed: %d\000"
 11900      6D617820 
 11900      73706565 
 11900      643A2025 
 11900      6400
 11901 142e 0000     		.align	2
 11902              	.LC201:
 11903 1430 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 11903      74696F6E 
 11903      616C2041 
 11903      44432073 
 11903      656E736F 
 11904              		.align	2
 11905              	.LC202:
 11906 1450 41444320 		.ascii	"ADC %d -> %d\000"
 11906      2564202D 
 11906      3E202564 
 11906      00
 11907 145d 000000   		.align	2
 11908              	.LC203:
 11909 1460 454D4720 		.ascii	"EMG input %d -> %d\000"
 11909      696E7075 
 11909      74202564 
 11909      202D3E20 
 11909      256400
 11910 1473 00       		.align	2
 11911              	.LC204:
 11912 1474 52657374 		.ascii	"Rest time delay (ms): %d\000"
 11912      2074696D 
 11912      65206465 
 11912      6C617920 
 11912      286D7329 
 11913 148d 000000   		.align	2
 11914              	.LC205:
 11915 1490 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 11915      2076656C 
 11915      6F636974 
 11915      7920636C 
 11915      6F737572 
 11916 14b6 0000     		.align	2
 11917              	.LC206:
 11918 14b8 52657374 		.ascii	"Rest position: %d\000"
 11918      20706F73 
 11918      6974696F 
 11918      6E3A2025 
 11918      6400
 11919 14ca 0000     		.align	2
 11920              	.LC207:
 11921 14cc 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 11921      436F6E6E 
 11921      65637465 
 11921      643A2025 
 11921      640D0A00 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 276


 11922              		.align	2
 11923              	.LC208:
 11924 14e0 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 11924      20434F4E 
 11924      46494755 
 11924      52415449 
 11924      4F4E0D0A 
 11925 14f5 000000   		.align	2
 11926              	.LC209:
 11927 14f8 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 11927      2564200D 
 11927      0A094944 
 11927      3A202564 
 11927      0D0A00
 11928 150b 00       		.align	2
 11929              	.LC210:
 11930 150c 09416363 		.ascii	"\011Accelerometers: \000"
 11930      656C6572 
 11930      6F6D6574 
 11930      6572733A 
 11930      2000
 11931 151e 0000     		.align	2
 11932              	.LC211:
 11933 1520 09477972 		.ascii	"\011Gyroscopes: \000"
 11933      6F73636F 
 11933      7065733A 
 11933      2000
 11934 152e 0000     		.align	2
 11935              	.LC212:
 11936 1530 094D6167 		.ascii	"\011Magnetometers: \000"
 11936      6E65746F 
 11936      6D657465 
 11936      72733A20 
 11936      00
 11937 1541 000000   		.align	2
 11938              	.LC213:
 11939 1544 09517561 		.ascii	"\011Quaternion: \000"
 11939      7465726E 
 11939      696F6E3A 
 11939      2000
 11940 1552 0000     		.align	2
 11941              	.LC214:
 11942 1554 0954656D 		.ascii	"\011Temperature: \000"
 11942      70657261 
 11942      74757265 
 11942      3A2000
 11943 1563 00       		.align	2
 11944              	.LC215:
 11945 1564 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 11945      20465720 
 11945      6379636C 
 11945      65207469 
 11945      6D653A20 
 11946              		.align	2
 11947              	.LC216:
 11948 1580 0D0A0000 		.ascii	"\015\012\000\000"
 11949              		.section	.text.prepare_generic_info,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 277


 11950              		.align	2
 11951              		.global	prepare_generic_info
 11952              		.thumb
 11953              		.thumb_func
 11954              		.type	prepare_generic_info, %function
 11955              	prepare_generic_info:
 11956              	.LFB72:
1748:..\src/command_processing.c **** 
1749:..\src/command_processing.c **** //==============================================================================
1750:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1751:..\src/command_processing.c **** //==============================================================================
1752:..\src/command_processing.c **** 
1753:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1754:..\src/command_processing.c **** {
 11957              		.loc 1 1754 0
 11958              		.cfi_startproc
 11959              		@ args = 0, pretend = 0, frame = 152
 11960              		@ frame_needed = 1, uses_anonymous_args = 0
 11961 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 11962              		.cfi_def_cfa_offset 36
 11963              		.cfi_offset 4, -36
 11964              		.cfi_offset 5, -32
 11965              		.cfi_offset 6, -28
 11966              		.cfi_offset 7, -24
 11967              		.cfi_offset 8, -20
 11968              		.cfi_offset 9, -16
 11969              		.cfi_offset 10, -12
 11970              		.cfi_offset 11, -8
 11971              		.cfi_offset 14, -4
 11972 0004 B1B0     		sub	sp, sp, #196
 11973              		.cfi_def_cfa_offset 232
 11974 0006 0AAF     		add	r7, sp, #40
 11975              		.cfi_def_cfa 7, 192
 11976 0008 7861     		str	r0, [r7, #20]
1755:..\src/command_processing.c ****     int i;
1756:..\src/command_processing.c **** 
1757:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 11977              		.loc 1 1757 0
 11978 000a C94B     		ldr	r3, .L610
 11979 000c C7F88C30 		str	r3, [r7, #140]
1758:..\src/command_processing.c ****     
1759:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 11980              		.loc 1 1759 0
 11981 0010 C74B     		ldr	r3, .L610
 11982 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 11983 0016 FA2B     		cmp	r3, #250
 11984 0018 01F01A85 		beq	.L608
 11985              	.LBB16:
1760:..\src/command_processing.c ****         char str[100];
1761:..\src/command_processing.c ****         strcpy(info_string, "");
 11986              		.loc 1 1761 0
 11987 001c 7B69     		ldr	r3, [r7, #20]
 11988 001e 0022     		movs	r2, #0
 11989 0020 1A70     		strb	r2, [r3]
1762:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11990              		.loc 1 1762 0
 11991 0022 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 278


 11992 0024 FFF7FEFF 		bl	strlen
 11993 0028 0346     		mov	r3, r0
 11994 002a 1A46     		mov	r2, r3
 11995 002c 7B69     		ldr	r3, [r7, #20]
 11996 002e 1344     		add	r3, r3, r2
 11997 0030 C04A     		ldr	r2, .L610+4
 11998 0032 1188     		ldrh	r1, [r2]	@ unaligned
 11999 0034 9278     		ldrb	r2, [r2, #2]
 12000 0036 1980     		strh	r1, [r3]	@ unaligned
 12001 0038 9A70     		strb	r2, [r3, #2]
1763:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 12002              		.loc 1 1763 0
 12003 003a 7869     		ldr	r0, [r7, #20]
 12004 003c FFF7FEFF 		bl	strlen
 12005 0040 0346     		mov	r3, r0
 12006 0042 1A46     		mov	r2, r3
 12007 0044 7B69     		ldr	r3, [r7, #20]
 12008 0046 1344     		add	r3, r3, r2
 12009 0048 BB4A     		ldr	r2, .L610+8
 12010 004a 1D46     		mov	r5, r3
 12011 004c 1446     		mov	r4, r2
 12012 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12013 0050 2860     		str	r0, [r5]	@ unaligned
 12014 0052 6960     		str	r1, [r5, #4]	@ unaligned
 12015 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 12016 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 12017 0058 2388     		ldrh	r3, [r4]	@ unaligned
 12018 005a A278     		ldrb	r2, [r4, #2]
 12019 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 12020 005e 1346     		mov	r3, r2
 12021 0060 AB74     		strb	r3, [r5, #18]
1764:..\src/command_processing.c ****         strcat(info_string, VERSION);
 12022              		.loc 1 1764 0
 12023 0062 7869     		ldr	r0, [r7, #20]
 12024 0064 FFF7FEFF 		bl	strlen
 12025 0068 0346     		mov	r3, r0
 12026 006a 1A46     		mov	r2, r3
 12027 006c 7B69     		ldr	r3, [r7, #20]
 12028 006e 1344     		add	r3, r3, r2
 12029 0070 B24A     		ldr	r2, .L610+12
 12030 0072 1446     		mov	r4, r2
 12031 0074 9E46     		mov	lr, r3
 12032 0076 04F1200C 		add	ip, r4, #32
 12033              	.L520:
 12034 007a 7546     		mov	r5, lr
 12035 007c 2646     		mov	r6, r4
 12036 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12037 0080 2860     		str	r0, [r5]	@ unaligned
 12038 0082 6960     		str	r1, [r5, #4]	@ unaligned
 12039 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 12040 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 12041 0088 1034     		adds	r4, r4, #16
 12042 008a 0EF1100E 		add	lr, lr, #16
 12043 008e 6445     		cmp	r4, ip
 12044 0090 F3D1     		bne	.L520
 12045 0092 7346     		mov	r3, lr
 12046 0094 2246     		mov	r2, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 279


 12047 0096 1068     		ldr	r0, [r2]	@ unaligned
 12048 0098 1860     		str	r0, [r3]	@ unaligned
 12049 009a 9188     		ldrh	r1, [r2, #4]	@ unaligned
 12050 009c 9279     		ldrb	r2, [r2, #6]
 12051 009e 9980     		strh	r1, [r3, #4]	@ unaligned
 12052 00a0 9A71     		strb	r2, [r3, #6]
1765:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 12053              		.loc 1 1765 0
 12054 00a2 7869     		ldr	r0, [r7, #20]
 12055 00a4 FFF7FEFF 		bl	strlen
 12056 00a8 0346     		mov	r3, r0
 12057 00aa 1A46     		mov	r2, r3
 12058 00ac 7B69     		ldr	r3, [r7, #20]
 12059 00ae 1344     		add	r3, r3, r2
 12060 00b0 A34A     		ldr	r2, .L610+16
 12061 00b2 1068     		ldr	r0, [r2]	@ unaligned
 12062 00b4 1860     		str	r0, [r3]	@ unaligned
 12063 00b6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12064 00b8 9A80     		strh	r2, [r3, #4]	@ unaligned
1766:..\src/command_processing.c **** 
1767:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 12065              		.loc 1 1767 0
 12066 00ba 7869     		ldr	r0, [r7, #20]
 12067 00bc FFF7FEFF 		bl	strlen
 12068 00c0 0346     		mov	r3, r0
 12069 00c2 1A46     		mov	r2, r3
 12070 00c4 7B69     		ldr	r3, [r7, #20]
 12071 00c6 1344     		add	r3, r3, r2
 12072 00c8 9E4A     		ldr	r2, .L610+20
 12073 00ca 1C46     		mov	r4, r3
 12074 00cc 1346     		mov	r3, r2
 12075 00ce 07CB     		ldmia	r3!, {r0, r1, r2}
 12076 00d0 2060     		str	r0, [r4]	@ unaligned
 12077 00d2 6160     		str	r1, [r4, #4]	@ unaligned
 12078 00d4 A260     		str	r2, [r4, #8]	@ unaligned
 12079 00d6 1B88     		ldrh	r3, [r3]	@ unaligned
 12080 00d8 A381     		strh	r3, [r4, #12]	@ unaligned
1768:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 12081              		.loc 1 1768 0
 12082 00da D7F88C30 		ldr	r3, [r7, #140]
 12083 00de 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12084 00e2 1A46     		mov	r2, r3
 12085 00e4 07F11C03 		add	r3, r7, #28
 12086 00e8 9749     		ldr	r1, .L610+24
 12087 00ea 1846     		mov	r0, r3
 12088 00ec FFF7FEFF 		bl	sprintf
1769:..\src/command_processing.c ****         strcat(info_string, str);
 12089              		.loc 1 1769 0
 12090 00f0 07F11C03 		add	r3, r7, #28
 12091 00f4 1946     		mov	r1, r3
 12092 00f6 7869     		ldr	r0, [r7, #20]
 12093 00f8 FFF7FEFF 		bl	strcat
1770:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 12094              		.loc 1 1770 0
 12095 00fc D7F88C30 		ldr	r3, [r7, #140]
 12096 0100 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12097 0104 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 280


 12098 0106 02D0     		beq	.L522
 12099 0108 012B     		cmp	r3, #1
 12100 010a 17D0     		beq	.L523
1771:..\src/command_processing.c ****             case SOFTHAND_PRO:
1772:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
1773:..\src/command_processing.c ****                 break;
1774:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1775:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
1776:..\src/command_processing.c ****                 break;
1777:..\src/command_processing.c ****             default:
1778:..\src/command_processing.c ****                 break;
 12101              		.loc 1 1778 0
 12102 010c 2EE0     		b	.L524
 12103              	.L522:
1772:..\src/command_processing.c ****                 break;
 12104              		.loc 1 1772 0
 12105 010e 7869     		ldr	r0, [r7, #20]
 12106 0110 FFF7FEFF 		bl	strlen
 12107 0114 0346     		mov	r3, r0
 12108 0116 1A46     		mov	r2, r3
 12109 0118 7B69     		ldr	r3, [r7, #20]
 12110 011a 1344     		add	r3, r3, r2
 12111 011c 8B4A     		ldr	r2, .L610+28
 12112 011e 1C46     		mov	r4, r3
 12113 0120 1546     		mov	r5, r2
 12114 0122 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12115 0124 2060     		str	r0, [r4]	@ unaligned
 12116 0126 6160     		str	r1, [r4, #4]	@ unaligned
 12117 0128 A260     		str	r2, [r4, #8]	@ unaligned
 12118 012a E360     		str	r3, [r4, #12]	@ unaligned
 12119 012c 2868     		ldr	r0, [r5]	@ unaligned
 12120 012e 2061     		str	r0, [r4, #16]	@ unaligned
 12121 0130 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 12122 0132 AA79     		ldrb	r2, [r5, #6]
 12123 0134 A382     		strh	r3, [r4, #20]	@ unaligned
 12124 0136 1346     		mov	r3, r2
 12125 0138 A375     		strb	r3, [r4, #22]
1773:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
 12126              		.loc 1 1773 0
 12127 013a 17E0     		b	.L524
 12128              	.L523:
1775:..\src/command_processing.c ****                 break;
 12129              		.loc 1 1775 0
 12130 013c 7869     		ldr	r0, [r7, #20]
 12131 013e FFF7FEFF 		bl	strlen
 12132 0142 0346     		mov	r3, r0
 12133 0144 1A46     		mov	r2, r3
 12134 0146 7B69     		ldr	r3, [r7, #20]
 12135 0148 1344     		add	r3, r3, r2
 12136 014a 814A     		ldr	r2, .L610+32
 12137 014c 1D46     		mov	r5, r3
 12138 014e 1446     		mov	r4, r2
 12139 0150 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12140 0152 2860     		str	r0, [r5]	@ unaligned
 12141 0154 6960     		str	r1, [r5, #4]	@ unaligned
 12142 0156 AA60     		str	r2, [r5, #8]	@ unaligned
 12143 0158 EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 281


 12144 015a 03CC     		ldmia	r4!, {r0, r1}
 12145 015c 2861     		str	r0, [r5, #16]	@ unaligned
 12146 015e 6961     		str	r1, [r5, #20]	@ unaligned
 12147 0160 2388     		ldrh	r3, [r4]	@ unaligned
 12148 0162 A278     		ldrb	r2, [r4, #2]
 12149 0164 2B83     		strh	r3, [r5, #24]	@ unaligned
 12150 0166 1346     		mov	r3, r2
 12151 0168 AB76     		strb	r3, [r5, #26]
1776:..\src/command_processing.c ****             default:
 12152              		.loc 1 1776 0
 12153 016a 00BF     		nop
 12154              	.L524:
1779:..\src/command_processing.c ****         }
1780:..\src/command_processing.c ****         
1781:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 12155              		.loc 1 1781 0
 12156 016c D7F88C30 		ldr	r3, [r7, #140]
 12157 0170 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 12158 0174 002B     		cmp	r3, #0
 12159 0176 02D0     		beq	.L526
 12160 0178 012B     		cmp	r3, #1
 12161 017a 15D0     		beq	.L527
 12162 017c 26E0     		b	.L525
 12163              	.L526:
1782:..\src/command_processing.c ****             case RIGHT_HAND:
1783:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 12164              		.loc 1 1783 0
 12165 017e 7869     		ldr	r0, [r7, #20]
 12166 0180 FFF7FEFF 		bl	strlen
 12167 0184 0346     		mov	r3, r0
 12168 0186 1A46     		mov	r2, r3
 12169 0188 7B69     		ldr	r3, [r7, #20]
 12170 018a 1344     		add	r3, r3, r2
 12171 018c 714A     		ldr	r2, .L610+36
 12172 018e 1D46     		mov	r5, r3
 12173 0190 1446     		mov	r4, r2
 12174 0192 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12175 0194 2860     		str	r0, [r5]	@ unaligned
 12176 0196 6960     		str	r1, [r5, #4]	@ unaligned
 12177 0198 AA60     		str	r2, [r5, #8]	@ unaligned
 12178 019a EB60     		str	r3, [r5, #12]	@ unaligned
 12179 019c 2388     		ldrh	r3, [r4]	@ unaligned
 12180 019e A278     		ldrb	r2, [r4, #2]
 12181 01a0 2B82     		strh	r3, [r5, #16]	@ unaligned
 12182 01a2 1346     		mov	r3, r2
 12183 01a4 AB74     		strb	r3, [r5, #18]
1784:..\src/command_processing.c ****                 break;
 12184              		.loc 1 1784 0
 12185 01a6 11E0     		b	.L525
 12186              	.L527:
1785:..\src/command_processing.c ****             case LEFT_HAND:
1786:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 12187              		.loc 1 1786 0
 12188 01a8 7869     		ldr	r0, [r7, #20]
 12189 01aa FFF7FEFF 		bl	strlen
 12190 01ae 0346     		mov	r3, r0
 12191 01b0 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 282


 12192 01b2 7B69     		ldr	r3, [r7, #20]
 12193 01b4 1344     		add	r3, r3, r2
 12194 01b6 684A     		ldr	r2, .L610+40
 12195 01b8 1D46     		mov	r5, r3
 12196 01ba 1446     		mov	r4, r2
 12197 01bc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12198 01be 2860     		str	r0, [r5]	@ unaligned
 12199 01c0 6960     		str	r1, [r5, #4]	@ unaligned
 12200 01c2 AA60     		str	r2, [r5, #8]	@ unaligned
 12201 01c4 EB60     		str	r3, [r5, #12]	@ unaligned
 12202 01c6 2388     		ldrh	r3, [r4]	@ unaligned
 12203 01c8 2B82     		strh	r3, [r5, #16]	@ unaligned
1787:..\src/command_processing.c ****                 break;
 12204              		.loc 1 1787 0
 12205 01ca 00BF     		nop
 12206              	.L525:
1788:..\src/command_processing.c ****         }
1789:..\src/command_processing.c **** 
1790:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 12207              		.loc 1 1790 0
 12208 01cc D7F88C30 		ldr	r3, [r7, #140]
 12209 01d0 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 12210 01d4 012B     		cmp	r3, #1
 12211 01d6 02D0     		beq	.L529
 12212 01d8 022B     		cmp	r3, #2
 12213 01da 11D0     		beq	.L530
 12214 01dc 21E0     		b	.L607
 12215              	.L529:
1791:..\src/command_processing.c ****             case MARIA:
1792:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 12216              		.loc 1 1792 0
 12217 01de 7869     		ldr	r0, [r7, #20]
 12218 01e0 FFF7FEFF 		bl	strlen
 12219 01e4 0346     		mov	r3, r0
 12220 01e6 1A46     		mov	r2, r3
 12221 01e8 7B69     		ldr	r3, [r7, #20]
 12222 01ea 1344     		add	r3, r3, r2
 12223 01ec 5B4A     		ldr	r2, .L610+44
 12224 01ee 1C46     		mov	r4, r3
 12225 01f0 1346     		mov	r3, r2
 12226 01f2 07CB     		ldmia	r3!, {r0, r1, r2}
 12227 01f4 2060     		str	r0, [r4]	@ unaligned
 12228 01f6 6160     		str	r1, [r4, #4]	@ unaligned
 12229 01f8 A260     		str	r2, [r4, #8]	@ unaligned
 12230 01fa 1B88     		ldrh	r3, [r3]	@ unaligned
 12231 01fc A381     		strh	r3, [r4, #12]	@ unaligned
1793:..\src/command_processing.c ****                 break;
 12232              		.loc 1 1793 0
 12233 01fe 24E0     		b	.L531
 12234              	.L530:
1794:..\src/command_processing.c ****             case ROZA:
1795:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 12235              		.loc 1 1795 0
 12236 0200 7869     		ldr	r0, [r7, #20]
 12237 0202 FFF7FEFF 		bl	strlen
 12238 0206 0346     		mov	r3, r0
 12239 0208 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 283


 12240 020a 7B69     		ldr	r3, [r7, #20]
 12241 020c 1344     		add	r3, r3, r2
 12242 020e 544A     		ldr	r2, .L610+48
 12243 0210 1C46     		mov	r4, r3
 12244 0212 1346     		mov	r3, r2
 12245 0214 07CB     		ldmia	r3!, {r0, r1, r2}
 12246 0216 2060     		str	r0, [r4]	@ unaligned
 12247 0218 6160     		str	r1, [r4, #4]	@ unaligned
 12248 021a A260     		str	r2, [r4, #8]	@ unaligned
 12249 021c 1B78     		ldrb	r3, [r3]
 12250 021e 2373     		strb	r3, [r4, #12]
1796:..\src/command_processing.c ****                 break;
 12251              		.loc 1 1796 0
 12252 0220 13E0     		b	.L531
 12253              	.L607:
1797:..\src/command_processing.c ****             default:
1798:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 12254              		.loc 1 1798 0
 12255 0222 7869     		ldr	r0, [r7, #20]
 12256 0224 FFF7FEFF 		bl	strlen
 12257 0228 0346     		mov	r3, r0
 12258 022a 1A46     		mov	r2, r3
 12259 022c 7B69     		ldr	r3, [r7, #20]
 12260 022e 1344     		add	r3, r3, r2
 12261 0230 4C4A     		ldr	r2, .L610+52
 12262 0232 1D46     		mov	r5, r3
 12263 0234 1446     		mov	r4, r2
 12264 0236 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12265 0238 2860     		str	r0, [r5]	@ unaligned
 12266 023a 6960     		str	r1, [r5, #4]	@ unaligned
 12267 023c AA60     		str	r2, [r5, #8]	@ unaligned
 12268 023e EB60     		str	r3, [r5, #12]	@ unaligned
 12269 0240 2068     		ldr	r0, [r4]	@ unaligned
 12270 0242 2861     		str	r0, [r5, #16]	@ unaligned
 12271 0244 2379     		ldrb	r3, [r4, #4]
 12272 0246 2B75     		strb	r3, [r5, #20]
1799:..\src/command_processing.c ****                 break;
 12273              		.loc 1 1799 0
 12274 0248 00BF     		nop
 12275              	.L531:
1800:..\src/command_processing.c ****         }
1801:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 12276              		.loc 1 1801 0
 12277 024a 7869     		ldr	r0, [r7, #20]
 12278 024c FFF7FEFF 		bl	strlen
 12279 0250 0346     		mov	r3, r0
 12280 0252 1A46     		mov	r2, r3
 12281 0254 7B69     		ldr	r3, [r7, #20]
 12282 0256 1344     		add	r3, r3, r2
 12283 0258 364A     		ldr	r2, .L610+4
 12284 025a 1188     		ldrh	r1, [r2]	@ unaligned
 12285 025c 9278     		ldrb	r2, [r2, #2]
 12286 025e 1980     		strh	r1, [r3]	@ unaligned
 12287 0260 9A70     		strb	r2, [r3, #2]
 12288              	.LBB17:
1802:..\src/command_processing.c ****         
1803:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 284


 12289              		.loc 1 1803 0
 12290 0262 0023     		movs	r3, #0
 12291 0264 87F89330 		strb	r3, [r7, #147]
 12292 0268 01F029B8 		b	.L532
 12293              	.L583:
 12294              	.LBB18:
1804:..\src/command_processing.c ****             
1805:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 12295              		.loc 1 1805 0
 12296 026c 97F89330 		ldrb	r3, [r7, #147]
 12297 0270 87F88B30 		strb	r3, [r7, #139]
1806:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 12298              		.loc 1 1806 0
 12299 0274 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 12300 0278 1346     		mov	r3, r2
 12301 027a DB00     		lsls	r3, r3, #3
 12302 027c 9B1A     		subs	r3, r3, r2
 12303 027e 1B01     		lsls	r3, r3, #4
 12304 0280 B033     		adds	r3, r3, #176
 12305 0282 D7F88C20 		ldr	r2, [r7, #140]
 12306 0286 1344     		add	r3, r3, r2
 12307 0288 C7F88430 		str	r3, [r7, #132]
1807:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 12308              		.loc 1 1807 0
 12309 028c D7F88430 		ldr	r3, [r7, #132]
 12310 0290 93F86030 		ldrb	r3, [r3, #96]
 12311 0294 87F88330 		strb	r3, [r7, #131]
1808:..\src/command_processing.c ****                   
1809:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 12312              		.loc 1 1809 0
 12313 0298 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12314 029c 5A1C     		adds	r2, r3, #1
 12315 029e 07F11C03 		add	r3, r7, #28
 12316 02a2 3149     		ldr	r1, .L610+56
 12317 02a4 1846     		mov	r0, r3
 12318 02a6 FFF7FEFF 		bl	sprintf
1810:..\src/command_processing.c ****             strcat(info_string, str);
 12319              		.loc 1 1810 0
 12320 02aa 07F11C03 		add	r3, r7, #28
 12321 02ae 1946     		mov	r1, r3
 12322 02b0 7869     		ldr	r0, [r7, #20]
 12323 02b2 FFF7FEFF 		bl	strcat
1811:..\src/command_processing.c ****                         
1812:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 12324              		.loc 1 1812 0
 12325 02b6 7869     		ldr	r0, [r7, #20]
 12326 02b8 FFF7FEFF 		bl	strlen
 12327 02bc 0346     		mov	r3, r0
 12328 02be 1A46     		mov	r2, r3
 12329 02c0 7B69     		ldr	r3, [r7, #20]
 12330 02c2 1344     		add	r3, r3, r2
 12331 02c4 294A     		ldr	r2, .L610+60
 12332 02c6 1C46     		mov	r4, r3
 12333 02c8 1546     		mov	r5, r2
 12334 02ca 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12335 02cc 2060     		str	r0, [r4]	@ unaligned
 12336 02ce 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 285


 12337 02d0 A260     		str	r2, [r4, #8]	@ unaligned
 12338 02d2 E360     		str	r3, [r4, #12]	@ unaligned
1813:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 12339              		.loc 1 1813 0
 12340 02d4 D7F88430 		ldr	r3, [r7, #132]
 12341 02d8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12342 02dc 022B     		cmp	r3, #2
 12343 02de 10D1     		bne	.L533
1814:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 12344              		.loc 1 1814 0
 12345 02e0 7869     		ldr	r0, [r7, #20]
 12346 02e2 FFF7FEFF 		bl	strlen
 12347 02e6 0346     		mov	r3, r0
 12348 02e8 1A46     		mov	r2, r3
 12349 02ea 7B69     		ldr	r3, [r7, #20]
 12350 02ec 1344     		add	r3, r3, r2
 12351 02ee 204A     		ldr	r2, .L610+64
 12352 02f0 1C46     		mov	r4, r3
 12353 02f2 1346     		mov	r3, r2
 12354 02f4 07CB     		ldmia	r3!, {r0, r1, r2}
 12355 02f6 2060     		str	r0, [r4]	@ unaligned
 12356 02f8 6160     		str	r1, [r4, #4]	@ unaligned
 12357 02fa A260     		str	r2, [r4, #8]	@ unaligned
 12358 02fc 1B88     		ldrh	r3, [r3]	@ unaligned
 12359 02fe A381     		strh	r3, [r4, #12]	@ unaligned
 12360 0300 4AE0     		b	.L534
 12361              	.L533:
1815:..\src/command_processing.c ****             else {
1816:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 12362              		.loc 1 1816 0
 12363 0302 D7F88430 		ldr	r3, [r7, #132]
 12364 0306 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12365 030a 012B     		cmp	r3, #1
 12366 030c 34D1     		bne	.L535
1817:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 12367              		.loc 1 1817 0
 12368 030e 7869     		ldr	r0, [r7, #20]
 12369 0310 FFF7FEFF 		bl	strlen
 12370 0314 0346     		mov	r3, r0
 12371 0316 1A46     		mov	r2, r3
 12372 0318 7B69     		ldr	r3, [r7, #20]
 12373 031a 1344     		add	r3, r3, r2
 12374 031c 1549     		ldr	r1, .L610+68
 12375 031e 1A46     		mov	r2, r3
 12376 0320 0B46     		mov	r3, r1
 12377 0322 03CB     		ldmia	r3!, {r0, r1}
 12378 0324 1060     		str	r0, [r2]	@ unaligned
 12379 0326 5160     		str	r1, [r2, #4]	@ unaligned
 12380 0328 1B78     		ldrb	r3, [r3]
 12381 032a 1372     		strb	r3, [r2, #8]
 12382 032c 34E0     		b	.L534
 12383              	.L611:
 12384 032e 00BF     		.align	2
 12385              	.L610:
 12386 0330 00000000 		.word	c_mem
 12387 0334 C00D0000 		.word	.LC126
 12388 0338 C40D0000 		.word	.LC127
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 286


 12389 033c D80D0000 		.word	.LC128
 12390 0340 000E0000 		.word	.LC129
 12391 0344 080E0000 		.word	.LC130
 12392 0348 180E0000 		.word	.LC131
 12393 034c 240E0000 		.word	.LC132
 12394 0350 3C0E0000 		.word	.LC133
 12395 0354 580E0000 		.word	.LC134
 12396 0358 6C0E0000 		.word	.LC135
 12397 035c 800E0000 		.word	.LC136
 12398 0360 900E0000 		.word	.LC137
 12399 0364 A00E0000 		.word	.LC138
 12400 0368 B80E0000 		.word	.LC139
 12401 036c C80E0000 		.word	.LC140
 12402 0370 D80E0000 		.word	.LC141
 12403 0374 E80E0000 		.word	.LC142
 12404              	.L535:
1818:..\src/command_processing.c ****                 else
1819:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 12405              		.loc 1 1819 0
 12406 0378 7869     		ldr	r0, [r7, #20]
 12407 037a FFF7FEFF 		bl	strlen
 12408 037e 0346     		mov	r3, r0
 12409 0380 1A46     		mov	r2, r3
 12410 0382 7B69     		ldr	r3, [r7, #20]
 12411 0384 1344     		add	r3, r3, r2
 12412 0386 874A     		ldr	r2, .L612
 12413 0388 1C46     		mov	r4, r3
 12414 038a 1346     		mov	r3, r2
 12415 038c 07CB     		ldmia	r3!, {r0, r1, r2}
 12416 038e 2060     		str	r0, [r4]	@ unaligned
 12417 0390 6160     		str	r1, [r4, #4]	@ unaligned
 12418 0392 A260     		str	r2, [r4, #8]	@ unaligned
 12419 0394 1B88     		ldrh	r3, [r3]	@ unaligned
 12420 0396 A381     		strh	r3, [r4, #12]	@ unaligned
 12421              	.L534:
1820:..\src/command_processing.c ****             }
1821:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 12422              		.loc 1 1821 0
 12423 0398 D7F88430 		ldr	r3, [r7, #132]
 12424 039c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12425 03a0 022B     		cmp	r3, #2
 12426 03a2 13D1     		bne	.L536
1822:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 12427              		.loc 1 1822 0
 12428 03a4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12429 03a8 7F4A     		ldr	r2, .L612+4
 12430 03aa 1B01     		lsls	r3, r3, #4
 12431 03ac 1344     		add	r3, r3, r2
 12432 03ae 0433     		adds	r3, r3, #4
 12433 03b0 1A68     		ldr	r2, [r3]
 12434 03b2 07F11C03 		add	r3, r7, #28
 12435 03b6 7D49     		ldr	r1, .L612+8
 12436 03b8 1846     		mov	r0, r3
 12437 03ba FFF7FEFF 		bl	sprintf
1823:..\src/command_processing.c ****                 strcat(info_string,str);
 12438              		.loc 1 1823 0
 12439 03be 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 287


 12440 03c2 1946     		mov	r1, r3
 12441 03c4 7869     		ldr	r0, [r7, #20]
 12442 03c6 FFF7FEFF 		bl	strcat
 12443 03ca 39E0     		b	.L537
 12444              	.L536:
1824:..\src/command_processing.c ****             }
1825:..\src/command_processing.c ****             else {
1826:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 12445              		.loc 1 1826 0
 12446 03cc D7F88430 		ldr	r3, [r7, #132]
 12447 03d0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12448 03d4 012B     		cmp	r3, #1
 12449 03d6 13D1     		bne	.L538
1827:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
 12450              		.loc 1 1827 0
 12451 03d8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12452 03dc 724A     		ldr	r2, .L612+4
 12453 03de 1B01     		lsls	r3, r3, #4
 12454 03e0 1344     		add	r3, r3, r2
 12455 03e2 0833     		adds	r3, r3, #8
 12456 03e4 1A68     		ldr	r2, [r3]
 12457 03e6 07F11C03 		add	r3, r7, #28
 12458 03ea 7049     		ldr	r1, .L612+8
 12459 03ec 1846     		mov	r0, r3
 12460 03ee FFF7FEFF 		bl	sprintf
1828:..\src/command_processing.c ****                     strcat(info_string,str);
 12461              		.loc 1 1828 0
 12462 03f2 07F11C03 		add	r3, r7, #28
 12463 03f6 1946     		mov	r1, r3
 12464 03f8 7869     		ldr	r0, [r7, #20]
 12465 03fa FFF7FEFF 		bl	strcat
 12466 03fe 1FE0     		b	.L537
 12467              	.L538:
1829:..\src/command_processing.c ****                 }
1830:..\src/command_processing.c ****                 else {
1831:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 12468              		.loc 1 1831 0
 12469 0400 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12470 0404 684A     		ldr	r2, .L612+4
 12471 0406 1B01     		lsls	r3, r3, #4
 12472 0408 1344     		add	r3, r3, r2
 12473 040a 1968     		ldr	r1, [r3]
 12474 040c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12475 0410 D7F88C00 		ldr	r0, [r7, #140]
 12476 0414 1346     		mov	r3, r2
 12477 0416 5B00     		lsls	r3, r3, #1
 12478 0418 1344     		add	r3, r3, r2
 12479 041a 1B01     		lsls	r3, r3, #4
 12480 041c 0344     		add	r3, r3, r0
 12481 041e 03F29513 		addw	r3, r3, #405
 12482 0422 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12483 0424 41FA03F2 		asr	r2, r1, r3
 12484 0428 07F11C03 		add	r3, r7, #28
 12485 042c 5F49     		ldr	r1, .L612+8
 12486 042e 1846     		mov	r0, r3
 12487 0430 FFF7FEFF 		bl	sprintf
1832:..\src/command_processing.c ****                     strcat(info_string,str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 288


 12488              		.loc 1 1832 0
 12489 0434 07F11C03 		add	r3, r7, #28
 12490 0438 1946     		mov	r1, r3
 12491 043a 7869     		ldr	r0, [r7, #20]
 12492 043c FFF7FEFF 		bl	strcat
 12493              	.L537:
1833:..\src/command_processing.c ****                 }
1834:..\src/command_processing.c ****             }
1835:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 12494              		.loc 1 1835 0
 12495 0440 7869     		ldr	r0, [r7, #20]
 12496 0442 FFF7FEFF 		bl	strlen
 12497 0446 0346     		mov	r3, r0
 12498 0448 1A46     		mov	r2, r3
 12499 044a 7B69     		ldr	r3, [r7, #20]
 12500 044c 1344     		add	r3, r3, r2
 12501 044e 584A     		ldr	r2, .L612+12
 12502 0450 1188     		ldrh	r1, [r2]	@ unaligned
 12503 0452 9278     		ldrb	r2, [r2, #2]
 12504 0454 1980     		strh	r1, [r3]	@ unaligned
 12505 0456 9A70     		strb	r2, [r3, #2]
1836:..\src/command_processing.c **** 
1837:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 12506              		.loc 1 1837 0
 12507 0458 07F11C03 		add	r3, r7, #28
 12508 045c 554A     		ldr	r2, .L612+16
 12509 045e 1C46     		mov	r4, r3
 12510 0460 1346     		mov	r3, r2
 12511 0462 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 12512 0464 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1838:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 12513              		.loc 1 1838 0
 12514 0468 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12515 046c 524A     		ldr	r2, .L612+20
 12516 046e 1B01     		lsls	r3, r3, #4
 12517 0470 1344     		add	r3, r3, r2
 12518 0472 0C33     		adds	r3, r3, #12
 12519 0474 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12520 0476 03F00103 		and	r3, r3, #1
 12521 047a 002B     		cmp	r3, #0
 12522 047c 0FD0     		beq	.L539
1839:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 12523              		.loc 1 1839 0
 12524 047e 07F11C03 		add	r3, r7, #28
 12525 0482 1846     		mov	r0, r3
 12526 0484 FFF7FEFF 		bl	strlen
 12527 0488 0346     		mov	r3, r0
 12528 048a 1A46     		mov	r2, r3
 12529 048c 07F11C03 		add	r3, r7, #28
 12530 0490 1344     		add	r3, r3, r2
 12531 0492 4A4A     		ldr	r2, .L612+24
 12532 0494 1068     		ldr	r0, [r2]	@ unaligned
 12533 0496 1860     		str	r0, [r3]	@ unaligned
 12534 0498 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12535 049a 9A80     		strh	r2, [r3, #4]	@ unaligned
 12536 049c 0EE0     		b	.L540
 12537              	.L539:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 289


1840:..\src/command_processing.c ****             } else {
1841:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 12538              		.loc 1 1841 0
 12539 049e 07F11C03 		add	r3, r7, #28
 12540 04a2 1846     		mov	r0, r3
 12541 04a4 FFF7FEFF 		bl	strlen
 12542 04a8 0346     		mov	r3, r0
 12543 04aa 1A46     		mov	r2, r3
 12544 04ac 07F11C03 		add	r3, r7, #28
 12545 04b0 1344     		add	r3, r3, r2
 12546 04b2 434A     		ldr	r2, .L612+28
 12547 04b4 1068     		ldr	r0, [r2]	@ unaligned
 12548 04b6 1860     		str	r0, [r3]	@ unaligned
 12549 04b8 1279     		ldrb	r2, [r2, #4]
 12550 04ba 1A71     		strb	r2, [r3, #4]
 12551              	.L540:
1842:..\src/command_processing.c ****             }
1843:..\src/command_processing.c ****             strcat(info_string, str);
 12552              		.loc 1 1843 0
 12553 04bc 07F11C03 		add	r3, r7, #28
 12554 04c0 1946     		mov	r1, r3
 12555 04c2 7869     		ldr	r0, [r7, #20]
 12556 04c4 FFF7FEFF 		bl	strcat
1844:..\src/command_processing.c ****                         
1845:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 12557              		.loc 1 1845 0
 12558 04c8 7869     		ldr	r0, [r7, #20]
 12559 04ca FFF7FEFF 		bl	strlen
 12560 04ce 0346     		mov	r3, r0
 12561 04d0 1A46     		mov	r2, r3
 12562 04d2 7B69     		ldr	r3, [r7, #20]
 12563 04d4 1344     		add	r3, r3, r2
 12564 04d6 3B4A     		ldr	r2, .L612+32
 12565 04d8 1D46     		mov	r5, r3
 12566 04da 1446     		mov	r4, r2
 12567 04dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12568 04de 2860     		str	r0, [r5]	@ unaligned
 12569 04e0 6960     		str	r1, [r5, #4]	@ unaligned
 12570 04e2 AA60     		str	r2, [r5, #8]	@ unaligned
 12571 04e4 EB60     		str	r3, [r5, #12]	@ unaligned
 12572 04e6 03CC     		ldmia	r4!, {r0, r1}
 12573 04e8 2861     		str	r0, [r5, #16]	@ unaligned
 12574 04ea 6961     		str	r1, [r5, #20]	@ unaligned
 12575 04ec 2388     		ldrh	r3, [r4]	@ unaligned
 12576 04ee A278     		ldrb	r2, [r4, #2]
 12577 04f0 2B83     		strh	r3, [r5, #24]	@ unaligned
 12578 04f2 1346     		mov	r3, r2
 12579 04f4 AB76     		strb	r3, [r5, #26]
1846:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 12580              		.loc 1 1846 0
 12581 04f6 D7F88430 		ldr	r3, [r7, #132]
 12582 04fa 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 12583 04fe 012B     		cmp	r3, #1
 12584 0500 0CD1     		bne	.L541
1847:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 12585              		.loc 1 1847 0
 12586 0502 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 290


 12587 0504 FFF7FEFF 		bl	strlen
 12588 0508 0346     		mov	r3, r0
 12589 050a 1A46     		mov	r2, r3
 12590 050c 7B69     		ldr	r3, [r7, #20]
 12591 050e 1344     		add	r3, r3, r2
 12592 0510 2D4A     		ldr	r2, .L612+36
 12593 0512 1068     		ldr	r0, [r2]	@ unaligned
 12594 0514 1860     		str	r0, [r3]	@ unaligned
 12595 0516 1279     		ldrb	r2, [r2, #4]
 12596 0518 1A71     		strb	r2, [r3, #4]
 12597 051a 09E0     		b	.L542
 12598              	.L541:
1848:..\src/command_processing.c ****             else
1849:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
 12599              		.loc 1 1849 0
 12600 051c 7869     		ldr	r0, [r7, #20]
 12601 051e FFF7FEFF 		bl	strlen
 12602 0522 0346     		mov	r3, r0
 12603 0524 1A46     		mov	r2, r3
 12604 0526 7B69     		ldr	r3, [r7, #20]
 12605 0528 1344     		add	r3, r3, r2
 12606 052a 284A     		ldr	r2, .L612+40
 12607 052c 1068     		ldr	r0, [r2]	@ unaligned
 12608 052e 1860     		str	r0, [r3]	@ unaligned
 12609              	.L542:
1850:..\src/command_processing.c ****             
1851:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 12610              		.loc 1 1851 0
 12611 0530 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12612 0534 264A     		ldr	r2, .L612+44
 12613 0536 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12614 0538 1A46     		mov	r2, r3
 12615 053a 07F11C03 		add	r3, r7, #28
 12616 053e 2549     		ldr	r1, .L612+48
 12617 0540 1846     		mov	r0, r3
 12618 0542 FFF7FEFF 		bl	sprintf
1852:..\src/command_processing.c ****             strcat(info_string, str);
 12619              		.loc 1 1852 0
 12620 0546 07F11C03 		add	r3, r7, #28
 12621 054a 1946     		mov	r1, r3
 12622 054c 7869     		ldr	r0, [r7, #20]
 12623 054e FFF7FEFF 		bl	strcat
1853:..\src/command_processing.c **** 
1854:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 12624              		.loc 1 1854 0
 12625 0552 7869     		ldr	r0, [r7, #20]
 12626 0554 FFF7FEFF 		bl	strlen
 12627 0558 0346     		mov	r3, r0
 12628 055a 1A46     		mov	r2, r3
 12629 055c 7B69     		ldr	r3, [r7, #20]
 12630 055e 1344     		add	r3, r3, r2
 12631 0560 1D4A     		ldr	r2, .L612+52
 12632 0562 1D46     		mov	r5, r3
 12633 0564 1446     		mov	r4, r2
 12634 0566 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12635 0568 2860     		str	r0, [r5]	@ unaligned
 12636 056a 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 291


 12637 056c AA60     		str	r2, [r5, #8]	@ unaligned
 12638 056e EB60     		str	r3, [r5, #12]	@ unaligned
 12639 0570 2068     		ldr	r0, [r4]	@ unaligned
 12640 0572 2861     		str	r0, [r5, #16]	@ unaligned
 12641 0574 A388     		ldrh	r3, [r4, #4]	@ unaligned
 12642 0576 AB82     		strh	r3, [r5, #20]	@ unaligned
1855:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 12643              		.loc 1 1855 0
 12644 0578 7869     		ldr	r0, [r7, #20]
 12645 057a FFF7FEFF 		bl	strlen
 12646 057e 0346     		mov	r3, r0
 12647 0580 1A46     		mov	r2, r3
 12648 0582 7B69     		ldr	r3, [r7, #20]
 12649 0584 1344     		add	r3, r3, r2
 12650 0586 154A     		ldr	r2, .L612+56
 12651 0588 1C46     		mov	r4, r3
 12652 058a 1346     		mov	r3, r2
 12653 058c 07CB     		ldmia	r3!, {r0, r1, r2}
 12654 058e 2060     		str	r0, [r4]	@ unaligned
 12655 0590 6160     		str	r1, [r4, #4]	@ unaligned
 12656 0592 A260     		str	r2, [r4, #8]	@ unaligned
 12657 0594 1A88     		ldrh	r2, [r3]	@ unaligned
 12658 0596 9B78     		ldrb	r3, [r3, #2]
 12659 0598 A281     		strh	r2, [r4, #12]	@ unaligned
 12660 059a A373     		strb	r3, [r4, #14]
1856:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 12661              		.loc 1 1856 0
 12662 059c 0023     		movs	r3, #0
 12663 059e C7F89430 		str	r3, [r7, #148]
 12664 05a2 5CE0     		b	.L543
 12665              	.L613:
 12666              		.align	2
 12667              	.L612:
 12668 05a4 F40E0000 		.word	.LC143
 12669 05a8 00000000 		.word	g_refOld
 12670 05ac 040F0000 		.word	.LC144
 12671 05b0 C00D0000 		.word	.LC126
 12672 05b4 080F0000 		.word	.LC145
 12673 05b8 00000000 		.word	g_ref
 12674 05bc 180F0000 		.word	.LC146
 12675 05c0 200F0000 		.word	.LC147
 12676 05c4 280F0000 		.word	.LC148
 12677 05c8 440F0000 		.word	.LC149
 12678 05cc 4C0F0000 		.word	.LC150
 12679 05d0 00000000 		.word	dev_pwm_limit
 12680 05d4 500F0000 		.word	.LC151
 12681 05d8 600F0000 		.word	.LC152
 12682 05dc 780F0000 		.word	.LC153
 12683              	.L545:
1857:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12684              		.loc 1 1857 0
 12685 05e0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12686 05e4 A749     		ldr	r1, .L614
 12687 05e6 1346     		mov	r3, r2
 12688 05e8 5B00     		lsls	r3, r3, #1
 12689 05ea 1344     		add	r3, r3, r2
 12690 05ec 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 292


 12691 05ee 1344     		add	r3, r3, r2
 12692 05f0 D7F89420 		ldr	r2, [r7, #148]
 12693 05f4 1344     		add	r3, r3, r2
 12694 05f6 51F82310 		ldr	r1, [r1, r3, lsl #2]
 12695 05fa 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12696 05fe D7F88C00 		ldr	r0, [r7, #140]
 12697 0602 1346     		mov	r3, r2
 12698 0604 5B00     		lsls	r3, r3, #1
 12699 0606 1344     		add	r3, r3, r2
 12700 0608 1B01     		lsls	r3, r3, #4
 12701 060a C218     		adds	r2, r0, r3
 12702 060c D7F89430 		ldr	r3, [r7, #148]
 12703 0610 1344     		add	r3, r3, r2
 12704 0612 03F29513 		addw	r3, r3, #405
 12705 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12706 0618 41FA03F2 		asr	r2, r1, r3
 12707 061c 07F11C03 		add	r3, r7, #28
 12708 0620 9949     		ldr	r1, .L614+4
 12709 0622 1846     		mov	r0, r3
 12710 0624 FFF7FEFF 		bl	sprintf
1858:..\src/command_processing.c ****                 strcat(info_string, str);
 12711              		.loc 1 1858 0
 12712 0628 07F11C03 		add	r3, r7, #28
 12713 062c 1946     		mov	r1, r3
 12714 062e 7869     		ldr	r0, [r7, #20]
 12715 0630 FFF7FEFF 		bl	strcat
1859:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 12716              		.loc 1 1859 0
 12717 0634 D7F89430 		ldr	r3, [r7, #148]
 12718 0638 022B     		cmp	r3, #2
 12719 063a 0BD0     		beq	.L544
1860:..\src/command_processing.c ****                     strcat(info_string, ", ");
 12720              		.loc 1 1860 0
 12721 063c 7869     		ldr	r0, [r7, #20]
 12722 063e FFF7FEFF 		bl	strlen
 12723 0642 0346     		mov	r3, r0
 12724 0644 1A46     		mov	r2, r3
 12725 0646 7B69     		ldr	r3, [r7, #20]
 12726 0648 1344     		add	r3, r3, r2
 12727 064a 904A     		ldr	r2, .L614+8
 12728 064c 1188     		ldrh	r1, [r2]	@ unaligned
 12729 064e 9278     		ldrb	r2, [r2, #2]
 12730 0650 1980     		strh	r1, [r3]	@ unaligned
 12731 0652 9A70     		strb	r2, [r3, #2]
 12732              	.L544:
1856:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12733              		.loc 1 1856 0 discriminator 2
 12734 0654 D7F89430 		ldr	r3, [r7, #148]
 12735 0658 0133     		adds	r3, r3, #1
 12736 065a C7F89430 		str	r3, [r7, #148]
 12737              	.L543:
1856:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 12738              		.loc 1 1856 0 is_stmt 0 discriminator 1
 12739 065e D7F89430 		ldr	r3, [r7, #148]
 12740 0662 022B     		cmp	r3, #2
 12741 0664 BCDD     		ble	.L545
1861:..\src/command_processing.c ****                 }                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 293


1862:..\src/command_processing.c ****             }
1863:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12742              		.loc 1 1863 0 is_stmt 1
 12743 0666 7869     		ldr	r0, [r7, #20]
 12744 0668 FFF7FEFF 		bl	strlen
 12745 066c 0346     		mov	r3, r0
 12746 066e 1A46     		mov	r2, r3
 12747 0670 7B69     		ldr	r3, [r7, #20]
 12748 0672 1344     		add	r3, r3, r2
 12749 0674 864A     		ldr	r2, .L614+12
 12750 0676 1188     		ldrh	r1, [r2]	@ unaligned
 12751 0678 9278     		ldrb	r2, [r2, #2]
 12752 067a 1980     		strh	r1, [r3]	@ unaligned
 12753 067c 9A70     		strb	r2, [r3, #2]
1864:..\src/command_processing.c **** 
1865:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 12754              		.loc 1 1865 0
 12755 067e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12756 0682 591C     		adds	r1, r3, #1
 12757 0684 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12758 0688 824A     		ldr	r2, .L614+16
 12759 068a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12760 068e 07F11C00 		add	r0, r7, #28
 12761 0692 0A46     		mov	r2, r1
 12762 0694 8049     		ldr	r1, .L614+20
 12763 0696 FFF7FEFF 		bl	sprintf
1866:..\src/command_processing.c ****             strcat(info_string, str);
 12764              		.loc 1 1866 0
 12765 069a 07F11C03 		add	r3, r7, #28
 12766 069e 1946     		mov	r1, r3
 12767 06a0 7869     		ldr	r0, [r7, #20]
 12768 06a2 FFF7FEFF 		bl	strcat
1867:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12769              		.loc 1 1867 0
 12770 06a6 7869     		ldr	r0, [r7, #20]
 12771 06a8 FFF7FEFF 		bl	strlen
 12772 06ac 0346     		mov	r3, r0
 12773 06ae 1A46     		mov	r2, r3
 12774 06b0 7B69     		ldr	r3, [r7, #20]
 12775 06b2 1344     		add	r3, r3, r2
 12776 06b4 764A     		ldr	r2, .L614+12
 12777 06b6 1188     		ldrh	r1, [r2]	@ unaligned
 12778 06b8 9278     		ldrb	r2, [r2, #2]
 12779 06ba 1980     		strh	r1, [r3]	@ unaligned
 12780 06bc 9A70     		strb	r2, [r3, #2]
1868:..\src/command_processing.c ****             
1869:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 12781              		.loc 1 1869 0
 12782 06be 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12783 06c2 591C     		adds	r1, r3, #1
 12784 06c4 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12785 06c8 744A     		ldr	r2, .L614+24
 12786 06ca 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12787 06ce 07F11C00 		add	r0, r7, #28
 12788 06d2 0A46     		mov	r2, r1
 12789 06d4 7249     		ldr	r1, .L614+28
 12790 06d6 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 294


1870:..\src/command_processing.c ****             strcat(info_string, str);
 12791              		.loc 1 1870 0
 12792 06da 07F11C03 		add	r3, r7, #28
 12793 06de 1946     		mov	r1, r3
 12794 06e0 7869     		ldr	r0, [r7, #20]
 12795 06e2 FFF7FEFF 		bl	strcat
1871:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12796              		.loc 1 1871 0
 12797 06e6 7869     		ldr	r0, [r7, #20]
 12798 06e8 FFF7FEFF 		bl	strlen
 12799 06ec 0346     		mov	r3, r0
 12800 06ee 1A46     		mov	r2, r3
 12801 06f0 7B69     		ldr	r3, [r7, #20]
 12802 06f2 1344     		add	r3, r3, r2
 12803 06f4 664A     		ldr	r2, .L614+12
 12804 06f6 1188     		ldrh	r1, [r2]	@ unaligned
 12805 06f8 9278     		ldrb	r2, [r2, #2]
 12806 06fa 1980     		strh	r1, [r3]	@ unaligned
 12807 06fc 9A70     		strb	r2, [r3, #2]
1872:..\src/command_processing.c **** 
1873:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 12808              		.loc 1 1873 0
 12809 06fe 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12810 0702 5C1C     		adds	r4, r3, #1
 12811 0704 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 12812 0708 5E4A     		ldr	r2, .L614
 12813 070a 3421     		movs	r1, #52
 12814 070c 01FB03F3 		mul	r3, r1, r3
 12815 0710 1344     		add	r3, r3, r2
 12816 0712 0C33     		adds	r3, r3, #12
 12817 0714 1B68     		ldr	r3, [r3]
 12818 0716 07F11C00 		add	r0, r7, #28
 12819 071a 2246     		mov	r2, r4
 12820 071c 6149     		ldr	r1, .L614+32
 12821 071e FFF7FEFF 		bl	sprintf
1874:..\src/command_processing.c ****             strcat(info_string, str);
 12822              		.loc 1 1874 0
 12823 0722 07F11C03 		add	r3, r7, #28
 12824 0726 1946     		mov	r1, r3
 12825 0728 7869     		ldr	r0, [r7, #20]
 12826 072a FFF7FEFF 		bl	strcat
1875:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 12827              		.loc 1 1875 0
 12828 072e 7869     		ldr	r0, [r7, #20]
 12829 0730 FFF7FEFF 		bl	strlen
 12830 0734 0346     		mov	r3, r0
 12831 0736 1A46     		mov	r2, r3
 12832 0738 7B69     		ldr	r3, [r7, #20]
 12833 073a 1344     		add	r3, r3, r2
 12834 073c 544A     		ldr	r2, .L614+12
 12835 073e 1188     		ldrh	r1, [r2]	@ unaligned
 12836 0740 9278     		ldrb	r2, [r2, #2]
 12837 0742 1980     		strh	r1, [r3]	@ unaligned
 12838 0744 9A70     		strb	r2, [r3, #2]
1876:..\src/command_processing.c ****             
1877:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 12839              		.loc 1 1877 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 295


 12840 0746 D7F88430 		ldr	r3, [r7, #132]
 12841 074a 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 12842 074e 012B     		cmp	r3, #1
 12843 0750 23D1     		bne	.L546
1878:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 12844              		.loc 1 1878 0
 12845 0752 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12846 0756 5C1C     		adds	r4, r3, #1
 12847 0758 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 12848 075c 494A     		ldr	r2, .L614
 12849 075e 3421     		movs	r1, #52
 12850 0760 01FB03F3 		mul	r3, r1, r3
 12851 0764 1344     		add	r3, r3, r2
 12852 0766 1433     		adds	r3, r3, #20
 12853 0768 1B68     		ldr	r3, [r3]
 12854 076a 07F11C00 		add	r0, r7, #28
 12855 076e 2246     		mov	r2, r4
 12856 0770 4D49     		ldr	r1, .L614+36
 12857 0772 FFF7FEFF 		bl	sprintf
1879:..\src/command_processing.c ****                 strcat(info_string, str);
 12858              		.loc 1 1879 0
 12859 0776 07F11C03 		add	r3, r7, #28
 12860 077a 1946     		mov	r1, r3
 12861 077c 7869     		ldr	r0, [r7, #20]
 12862 077e FFF7FEFF 		bl	strcat
1880:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 12863              		.loc 1 1880 0
 12864 0782 7869     		ldr	r0, [r7, #20]
 12865 0784 FFF7FEFF 		bl	strlen
 12866 0788 0346     		mov	r3, r0
 12867 078a 1A46     		mov	r2, r3
 12868 078c 7B69     		ldr	r3, [r7, #20]
 12869 078e 1344     		add	r3, r3, r2
 12870 0790 3F4A     		ldr	r2, .L614+12
 12871 0792 1188     		ldrh	r1, [r2]	@ unaligned
 12872 0794 9278     		ldrb	r2, [r2, #2]
 12873 0796 1980     		strh	r1, [r3]	@ unaligned
 12874 0798 9A70     		strb	r2, [r3, #2]
 12875              	.L546:
1881:..\src/command_processing.c ****             }
1882:..\src/command_processing.c ****             
1883:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 12876              		.loc 1 1883 0
 12877 079a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12878 079e 5A1C     		adds	r2, r3, #1
 12879 07a0 07F11C03 		add	r3, r7, #28
 12880 07a4 4149     		ldr	r1, .L614+40
 12881 07a6 1846     		mov	r0, r3
 12882 07a8 FFF7FEFF 		bl	sprintf
1884:..\src/command_processing.c ****             strcat(info_string, str);
 12883              		.loc 1 1884 0
 12884 07ac 07F11C03 		add	r3, r7, #28
 12885 07b0 1946     		mov	r1, r3
 12886 07b2 7869     		ldr	r0, [r7, #20]
 12887 07b4 FFF7FEFF 		bl	strcat
1885:..\src/command_processing.c **** 
1886:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 296


 12888              		.loc 1 1886 0
 12889 07b8 7869     		ldr	r0, [r7, #20]
 12890 07ba FFF7FEFF 		bl	strlen
 12891 07be 0346     		mov	r3, r0
 12892 07c0 1A46     		mov	r2, r3
 12893 07c2 7B69     		ldr	r3, [r7, #20]
 12894 07c4 1344     		add	r3, r3, r2
 12895 07c6 3A4A     		ldr	r2, .L614+44
 12896 07c8 1D46     		mov	r5, r3
 12897 07ca 1446     		mov	r4, r2
 12898 07cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12899 07ce 2860     		str	r0, [r5]	@ unaligned
 12900 07d0 6960     		str	r1, [r5, #4]	@ unaligned
 12901 07d2 AA60     		str	r2, [r5, #8]	@ unaligned
 12902 07d4 EB60     		str	r3, [r5, #12]	@ unaligned
 12903 07d6 2378     		ldrb	r3, [r4]
 12904 07d8 2B74     		strb	r3, [r5, #16]
1887:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 12905              		.loc 1 1887 0
 12906 07da D7F88430 		ldr	r3, [r7, #132]
 12907 07de 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12908 07e2 032B     		cmp	r3, #3
 12909 07e4 6ED0     		beq	.L547
1888:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 12910              		.loc 1 1888 0
 12911 07e6 D7F88430 		ldr	r3, [r7, #132]
 12912 07ea 1B68     		ldr	r3, [r3]
 12913 07ec 1846     		mov	r0, r3
 12914 07ee FFF7FEFF 		bl	__aeabi_i2d
 12915 07f2 4FF00002 		mov	r2, #0
 12916 07f6 2F4B     		ldr	r3, .L614+48
 12917 07f8 FFF7FEFF 		bl	__aeabi_ddiv
 12918 07fc 0346     		mov	r3, r0
 12919 07fe 0C46     		mov	r4, r1
 12920 0800 07F11C00 		add	r0, r7, #28
 12921 0804 1A46     		mov	r2, r3
 12922 0806 2346     		mov	r3, r4
 12923 0808 2B49     		ldr	r1, .L614+52
 12924 080a FFF7FEFF 		bl	sprintf
1889:..\src/command_processing.c ****                 strcat(info_string, str);
 12925              		.loc 1 1889 0
 12926 080e 07F11C03 		add	r3, r7, #28
 12927 0812 1946     		mov	r1, r3
 12928 0814 7869     		ldr	r0, [r7, #20]
 12929 0816 FFF7FEFF 		bl	strcat
1890:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 12930              		.loc 1 1890 0
 12931 081a D7F88430 		ldr	r3, [r7, #132]
 12932 081e 5B68     		ldr	r3, [r3, #4]
 12933 0820 1846     		mov	r0, r3
 12934 0822 FFF7FEFF 		bl	__aeabi_i2d
 12935 0826 4FF00002 		mov	r2, #0
 12936 082a 224B     		ldr	r3, .L614+48
 12937 082c FFF7FEFF 		bl	__aeabi_ddiv
 12938 0830 0346     		mov	r3, r0
 12939 0832 0C46     		mov	r4, r1
 12940 0834 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 297


 12941 0838 1A46     		mov	r2, r3
 12942 083a 2346     		mov	r3, r4
 12943 083c 1F49     		ldr	r1, .L614+56
 12944 083e FFF7FEFF 		bl	sprintf
1891:..\src/command_processing.c ****                 strcat(info_string, str);
 12945              		.loc 1 1891 0
 12946 0842 07F11C03 		add	r3, r7, #28
 12947 0846 1946     		mov	r1, r3
 12948 0848 7869     		ldr	r0, [r7, #20]
 12949 084a FFF7FEFF 		bl	strcat
1892:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 12950              		.loc 1 1892 0
 12951 084e D7F88430 		ldr	r3, [r7, #132]
 12952 0852 9B68     		ldr	r3, [r3, #8]
 12953 0854 1846     		mov	r0, r3
 12954 0856 FFF7FEFF 		bl	__aeabi_i2d
 12955 085a 4FF00002 		mov	r2, #0
 12956 085e 154B     		ldr	r3, .L614+48
 12957 0860 FFF7FEFF 		bl	__aeabi_ddiv
 12958 0864 0346     		mov	r3, r0
 12959 0866 0C46     		mov	r4, r1
 12960 0868 07F11C00 		add	r0, r7, #28
 12961 086c 1A46     		mov	r2, r3
 12962 086e 2346     		mov	r3, r4
 12963 0870 1349     		ldr	r1, .L614+60
 12964 0872 FFF7FEFF 		bl	sprintf
1893:..\src/command_processing.c ****                 strcat(info_string, str);
 12965              		.loc 1 1893 0
 12966 0876 07F11C03 		add	r3, r7, #28
 12967 087a 1946     		mov	r1, r3
 12968 087c 7869     		ldr	r0, [r7, #20]
 12969 087e FFF7FEFF 		bl	strcat
 12970 0882 6DE0     		b	.L548
 12971              	.L615:
 12972              		.align	2
 12973              	.L614:
 12974 0884 00000000 		.word	g_meas
 12975 0888 880F0000 		.word	.LC154
 12976 088c 8C0F0000 		.word	.LC155
 12977 0890 C00D0000 		.word	.LC126
 12978 0894 00000000 		.word	dev_tension
 12979 0898 900F0000 		.word	.LC156
 12980 089c 00000000 		.word	pow_tension
 12981 08a0 B00F0000 		.word	.LC157
 12982 08a4 D80F0000 		.word	.LC158
 12983 08a8 F00F0000 		.word	.LC159
 12984 08ac 18100000 		.word	.LC160
 12985 08b0 34100000 		.word	.LC161
 12986 08b4 0000F040 		.word	1089470464
 12987 08b8 48100000 		.word	.LC162
 12988 08bc 54100000 		.word	.LC163
 12989 08c0 60100000 		.word	.LC164
 12990              	.L547:
1894:..\src/command_processing.c ****             }
1895:..\src/command_processing.c ****             else { 
1896:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 12991              		.loc 1 1896 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 298


 12992 08c4 D7F88430 		ldr	r3, [r7, #132]
 12993 08c8 9B69     		ldr	r3, [r3, #24]
 12994 08ca 1846     		mov	r0, r3
 12995 08cc FFF7FEFF 		bl	__aeabi_i2d
 12996 08d0 4FF00002 		mov	r2, #0
 12997 08d4 CD4B     		ldr	r3, .L616
 12998 08d6 FFF7FEFF 		bl	__aeabi_ddiv
 12999 08da 0346     		mov	r3, r0
 13000 08dc 0C46     		mov	r4, r1
 13001 08de 07F11C00 		add	r0, r7, #28
 13002 08e2 1A46     		mov	r2, r3
 13003 08e4 2346     		mov	r3, r4
 13004 08e6 CA49     		ldr	r1, .L616+4
 13005 08e8 FFF7FEFF 		bl	sprintf
1897:..\src/command_processing.c ****                 strcat(info_string, str);
 13006              		.loc 1 1897 0
 13007 08ec 07F11C03 		add	r3, r7, #28
 13008 08f0 1946     		mov	r1, r3
 13009 08f2 7869     		ldr	r0, [r7, #20]
 13010 08f4 FFF7FEFF 		bl	strcat
1898:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 13011              		.loc 1 1898 0
 13012 08f8 D7F88430 		ldr	r3, [r7, #132]
 13013 08fc DB69     		ldr	r3, [r3, #28]
 13014 08fe 1846     		mov	r0, r3
 13015 0900 FFF7FEFF 		bl	__aeabi_i2d
 13016 0904 4FF00002 		mov	r2, #0
 13017 0908 C04B     		ldr	r3, .L616
 13018 090a FFF7FEFF 		bl	__aeabi_ddiv
 13019 090e 0346     		mov	r3, r0
 13020 0910 0C46     		mov	r4, r1
 13021 0912 07F11C00 		add	r0, r7, #28
 13022 0916 1A46     		mov	r2, r3
 13023 0918 2346     		mov	r3, r4
 13024 091a BE49     		ldr	r1, .L616+8
 13025 091c FFF7FEFF 		bl	sprintf
1899:..\src/command_processing.c ****                 strcat(info_string, str);
 13026              		.loc 1 1899 0
 13027 0920 07F11C03 		add	r3, r7, #28
 13028 0924 1946     		mov	r1, r3
 13029 0926 7869     		ldr	r0, [r7, #20]
 13030 0928 FFF7FEFF 		bl	strcat
1900:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 13031              		.loc 1 1900 0
 13032 092c D7F88430 		ldr	r3, [r7, #132]
 13033 0930 1B6A     		ldr	r3, [r3, #32]
 13034 0932 1846     		mov	r0, r3
 13035 0934 FFF7FEFF 		bl	__aeabi_i2d
 13036 0938 4FF00002 		mov	r2, #0
 13037 093c B34B     		ldr	r3, .L616
 13038 093e FFF7FEFF 		bl	__aeabi_ddiv
 13039 0942 0346     		mov	r3, r0
 13040 0944 0C46     		mov	r4, r1
 13041 0946 07F11C00 		add	r0, r7, #28
 13042 094a 1A46     		mov	r2, r3
 13043 094c 2346     		mov	r3, r4
 13044 094e B249     		ldr	r1, .L616+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 299


 13045 0950 FFF7FEFF 		bl	sprintf
1901:..\src/command_processing.c ****                 strcat(info_string, str);
 13046              		.loc 1 1901 0
 13047 0954 07F11C03 		add	r3, r7, #28
 13048 0958 1946     		mov	r1, r3
 13049 095a 7869     		ldr	r0, [r7, #20]
 13050 095c FFF7FEFF 		bl	strcat
 13051              	.L548:
1902:..\src/command_processing.c ****             }
1903:..\src/command_processing.c **** 
1904:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 13052              		.loc 1 1904 0
 13053 0960 7869     		ldr	r0, [r7, #20]
 13054 0962 FFF7FEFF 		bl	strlen
 13055 0966 0346     		mov	r3, r0
 13056 0968 1A46     		mov	r2, r3
 13057 096a 7B69     		ldr	r3, [r7, #20]
 13058 096c 1344     		add	r3, r3, r2
 13059 096e AB4A     		ldr	r2, .L616+16
 13060 0970 1D46     		mov	r5, r3
 13061 0972 1446     		mov	r4, r2
 13062 0974 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13063 0976 2860     		str	r0, [r5]	@ unaligned
 13064 0978 6960     		str	r1, [r5, #4]	@ unaligned
 13065 097a AA60     		str	r2, [r5, #8]	@ unaligned
 13066 097c EB60     		str	r3, [r5, #12]	@ unaligned
 13067 097e 03CC     		ldmia	r4!, {r0, r1}
 13068 0980 2861     		str	r0, [r5, #16]	@ unaligned
 13069 0982 6961     		str	r1, [r5, #20]	@ unaligned
 13070 0984 2378     		ldrb	r3, [r4]
 13071 0986 2B76     		strb	r3, [r5, #24]
1905:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13072              		.loc 1 1905 0
 13073 0988 D7F88430 		ldr	r3, [r7, #132]
 13074 098c 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13075 0990 032B     		cmp	r3, #3
 13076 0992 4ED0     		beq	.L549
1906:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 13077              		.loc 1 1906 0
 13078 0994 D7F88430 		ldr	r3, [r7, #132]
 13079 0998 DB68     		ldr	r3, [r3, #12]
 13080 099a 1846     		mov	r0, r3
 13081 099c FFF7FEFF 		bl	__aeabi_i2d
 13082 09a0 4FF00002 		mov	r2, #0
 13083 09a4 994B     		ldr	r3, .L616
 13084 09a6 FFF7FEFF 		bl	__aeabi_ddiv
 13085 09aa 0346     		mov	r3, r0
 13086 09ac 0C46     		mov	r4, r1
 13087 09ae 07F11C00 		add	r0, r7, #28
 13088 09b2 1A46     		mov	r2, r3
 13089 09b4 2346     		mov	r3, r4
 13090 09b6 9649     		ldr	r1, .L616+4
 13091 09b8 FFF7FEFF 		bl	sprintf
1907:..\src/command_processing.c ****                 strcat(info_string, str);
 13092              		.loc 1 1907 0
 13093 09bc 07F11C03 		add	r3, r7, #28
 13094 09c0 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 300


 13095 09c2 7869     		ldr	r0, [r7, #20]
 13096 09c4 FFF7FEFF 		bl	strcat
1908:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 13097              		.loc 1 1908 0
 13098 09c8 D7F88430 		ldr	r3, [r7, #132]
 13099 09cc 1B69     		ldr	r3, [r3, #16]
 13100 09ce 1846     		mov	r0, r3
 13101 09d0 FFF7FEFF 		bl	__aeabi_i2d
 13102 09d4 4FF00002 		mov	r2, #0
 13103 09d8 8C4B     		ldr	r3, .L616
 13104 09da FFF7FEFF 		bl	__aeabi_ddiv
 13105 09de 0346     		mov	r3, r0
 13106 09e0 0C46     		mov	r4, r1
 13107 09e2 07F11C00 		add	r0, r7, #28
 13108 09e6 1A46     		mov	r2, r3
 13109 09e8 2346     		mov	r3, r4
 13110 09ea 8A49     		ldr	r1, .L616+8
 13111 09ec FFF7FEFF 		bl	sprintf
1909:..\src/command_processing.c ****                 strcat(info_string, str);
 13112              		.loc 1 1909 0
 13113 09f0 07F11C03 		add	r3, r7, #28
 13114 09f4 1946     		mov	r1, r3
 13115 09f6 7869     		ldr	r0, [r7, #20]
 13116 09f8 FFF7FEFF 		bl	strcat
1910:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 13117              		.loc 1 1910 0
 13118 09fc D7F88430 		ldr	r3, [r7, #132]
 13119 0a00 5B69     		ldr	r3, [r3, #20]
 13120 0a02 1846     		mov	r0, r3
 13121 0a04 FFF7FEFF 		bl	__aeabi_i2d
 13122 0a08 4FF00002 		mov	r2, #0
 13123 0a0c 7F4B     		ldr	r3, .L616
 13124 0a0e FFF7FEFF 		bl	__aeabi_ddiv
 13125 0a12 0346     		mov	r3, r0
 13126 0a14 0C46     		mov	r4, r1
 13127 0a16 07F11C00 		add	r0, r7, #28
 13128 0a1a 1A46     		mov	r2, r3
 13129 0a1c 2346     		mov	r3, r4
 13130 0a1e 7E49     		ldr	r1, .L616+12
 13131 0a20 FFF7FEFF 		bl	sprintf
1911:..\src/command_processing.c ****                 strcat(info_string, str);
 13132              		.loc 1 1911 0
 13133 0a24 07F11C03 		add	r3, r7, #28
 13134 0a28 1946     		mov	r1, r3
 13135 0a2a 7869     		ldr	r0, [r7, #20]
 13136 0a2c FFF7FEFF 		bl	strcat
 13137 0a30 4DE0     		b	.L550
 13138              	.L549:
1912:..\src/command_processing.c **** 
1913:..\src/command_processing.c ****             }
1914:..\src/command_processing.c ****             else {
1915:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 13139              		.loc 1 1915 0
 13140 0a32 D7F88430 		ldr	r3, [r7, #132]
 13141 0a36 5B6A     		ldr	r3, [r3, #36]
 13142 0a38 1846     		mov	r0, r3
 13143 0a3a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 301


 13144 0a3e 4FF00002 		mov	r2, #0
 13145 0a42 724B     		ldr	r3, .L616
 13146 0a44 FFF7FEFF 		bl	__aeabi_ddiv
 13147 0a48 0346     		mov	r3, r0
 13148 0a4a 0C46     		mov	r4, r1
 13149 0a4c 07F11C00 		add	r0, r7, #28
 13150 0a50 1A46     		mov	r2, r3
 13151 0a52 2346     		mov	r3, r4
 13152 0a54 6E49     		ldr	r1, .L616+4
 13153 0a56 FFF7FEFF 		bl	sprintf
1916:..\src/command_processing.c ****                 strcat(info_string, str);
 13154              		.loc 1 1916 0
 13155 0a5a 07F11C03 		add	r3, r7, #28
 13156 0a5e 1946     		mov	r1, r3
 13157 0a60 7869     		ldr	r0, [r7, #20]
 13158 0a62 FFF7FEFF 		bl	strcat
1917:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 13159              		.loc 1 1917 0
 13160 0a66 D7F88430 		ldr	r3, [r7, #132]
 13161 0a6a 9B6A     		ldr	r3, [r3, #40]
 13162 0a6c 1846     		mov	r0, r3
 13163 0a6e FFF7FEFF 		bl	__aeabi_i2d
 13164 0a72 4FF00002 		mov	r2, #0
 13165 0a76 654B     		ldr	r3, .L616
 13166 0a78 FFF7FEFF 		bl	__aeabi_ddiv
 13167 0a7c 0346     		mov	r3, r0
 13168 0a7e 0C46     		mov	r4, r1
 13169 0a80 07F11C00 		add	r0, r7, #28
 13170 0a84 1A46     		mov	r2, r3
 13171 0a86 2346     		mov	r3, r4
 13172 0a88 6249     		ldr	r1, .L616+8
 13173 0a8a FFF7FEFF 		bl	sprintf
1918:..\src/command_processing.c ****                 strcat(info_string, str);
 13174              		.loc 1 1918 0
 13175 0a8e 07F11C03 		add	r3, r7, #28
 13176 0a92 1946     		mov	r1, r3
 13177 0a94 7869     		ldr	r0, [r7, #20]
 13178 0a96 FFF7FEFF 		bl	strcat
1919:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 13179              		.loc 1 1919 0
 13180 0a9a D7F88430 		ldr	r3, [r7, #132]
 13181 0a9e DB6A     		ldr	r3, [r3, #44]
 13182 0aa0 1846     		mov	r0, r3
 13183 0aa2 FFF7FEFF 		bl	__aeabi_i2d
 13184 0aa6 4FF00002 		mov	r2, #0
 13185 0aaa 584B     		ldr	r3, .L616
 13186 0aac FFF7FEFF 		bl	__aeabi_ddiv
 13187 0ab0 0346     		mov	r3, r0
 13188 0ab2 0C46     		mov	r4, r1
 13189 0ab4 07F11C00 		add	r0, r7, #28
 13190 0ab8 1A46     		mov	r2, r3
 13191 0aba 2346     		mov	r3, r4
 13192 0abc 5649     		ldr	r1, .L616+12
 13193 0abe FFF7FEFF 		bl	sprintf
1920:..\src/command_processing.c ****                 strcat(info_string, str);
 13194              		.loc 1 1920 0
 13195 0ac2 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 302


 13196 0ac6 1946     		mov	r1, r3
 13197 0ac8 7869     		ldr	r0, [r7, #20]
 13198 0aca FFF7FEFF 		bl	strcat
 13199              	.L550:
1921:..\src/command_processing.c ****             }
1922:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 13200              		.loc 1 1922 0
 13201 0ace D7F88430 		ldr	r3, [r7, #132]
 13202 0ad2 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 13203 0ad6 012B     		cmp	r3, #1
 13204 0ad8 14D1     		bne	.L551
1923:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 13205              		.loc 1 1923 0
 13206 0ada 7869     		ldr	r0, [r7, #20]
 13207 0adc FFF7FEFF 		bl	strlen
 13208 0ae0 0346     		mov	r3, r0
 13209 0ae2 1A46     		mov	r2, r3
 13210 0ae4 7B69     		ldr	r3, [r7, #20]
 13211 0ae6 1344     		add	r3, r3, r2
 13212 0ae8 4D4A     		ldr	r2, .L616+20
 13213 0aea 1D46     		mov	r5, r3
 13214 0aec 1446     		mov	r4, r2
 13215 0aee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13216 0af0 2860     		str	r0, [r5]	@ unaligned
 13217 0af2 6960     		str	r1, [r5, #4]	@ unaligned
 13218 0af4 AA60     		str	r2, [r5, #8]	@ unaligned
 13219 0af6 EB60     		str	r3, [r5, #12]	@ unaligned
 13220 0af8 03CC     		ldmia	r4!, {r0, r1}
 13221 0afa 2861     		str	r0, [r5, #16]	@ unaligned
 13222 0afc 6961     		str	r1, [r5, #20]	@ unaligned
 13223 0afe 2388     		ldrh	r3, [r4]	@ unaligned
 13224 0b00 2B83     		strh	r3, [r5, #24]	@ unaligned
 13225 0b02 13E0     		b	.L552
 13226              	.L551:
1924:..\src/command_processing.c ****             else
1925:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 13227              		.loc 1 1925 0
 13228 0b04 7869     		ldr	r0, [r7, #20]
 13229 0b06 FFF7FEFF 		bl	strlen
 13230 0b0a 0346     		mov	r3, r0
 13231 0b0c 1A46     		mov	r2, r3
 13232 0b0e 7B69     		ldr	r3, [r7, #20]
 13233 0b10 1344     		add	r3, r3, r2
 13234 0b12 444A     		ldr	r2, .L616+24
 13235 0b14 1D46     		mov	r5, r3
 13236 0b16 1446     		mov	r4, r2
 13237 0b18 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13238 0b1a 2860     		str	r0, [r5]	@ unaligned
 13239 0b1c 6960     		str	r1, [r5, #4]	@ unaligned
 13240 0b1e AA60     		str	r2, [r5, #8]	@ unaligned
 13241 0b20 EB60     		str	r3, [r5, #12]	@ unaligned
 13242 0b22 03CC     		ldmia	r4!, {r0, r1}
 13243 0b24 2861     		str	r0, [r5, #16]	@ unaligned
 13244 0b26 6961     		str	r1, [r5, #20]	@ unaligned
 13245 0b28 2378     		ldrb	r3, [r4]
 13246 0b2a 2B76     		strb	r3, [r5, #24]
 13247              	.L552:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 303


1926:..\src/command_processing.c **** 
1927:..\src/command_processing.c ****             switch(MOT->input_mode) {
 13248              		.loc 1 1927 0
 13249 0b2c D7F88430 		ldr	r3, [r7, #132]
 13250 0b30 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 13251 0b34 062B     		cmp	r3, #6
 13252 0b36 00F2D180 		bhi	.L553
 13253 0b3a 01A2     		adr	r2, .L555
 13254 0b3c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13255              		.p2align 2
 13256              	.L555:
 13257 0b40 5D0B0000 		.word	.L554+1
 13258 0b44 810B0000 		.word	.L556+1
 13259 0b48 A90B0000 		.word	.L557+1
 13260 0b4c DB0B0000 		.word	.L558+1
 13261 0b50 390C0000 		.word	.L559+1
 13262 0b54 670C0000 		.word	.L560+1
 13263 0b58 970C0000 		.word	.L561+1
 13264              		.p2align 1
 13265              	.L554:
1928:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1929:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 13266              		.loc 1 1929 0
 13267 0b5c 7869     		ldr	r0, [r7, #20]
 13268 0b5e FFF7FEFF 		bl	strlen
 13269 0b62 0346     		mov	r3, r0
 13270 0b64 1A46     		mov	r2, r3
 13271 0b66 7B69     		ldr	r3, [r7, #20]
 13272 0b68 1344     		add	r3, r3, r2
 13273 0b6a 2F4A     		ldr	r2, .L616+28
 13274 0b6c 1D46     		mov	r5, r3
 13275 0b6e 1446     		mov	r4, r2
 13276 0b70 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13277 0b72 2860     		str	r0, [r5]	@ unaligned
 13278 0b74 6960     		str	r1, [r5, #4]	@ unaligned
 13279 0b76 AA60     		str	r2, [r5, #8]	@ unaligned
 13280 0b78 EB60     		str	r3, [r5, #12]	@ unaligned
 13281 0b7a 2388     		ldrh	r3, [r4]	@ unaligned
 13282 0b7c 2B82     		strh	r3, [r5, #16]	@ unaligned
1930:..\src/command_processing.c ****                     break;
 13283              		.loc 1 1930 0
 13284 0b7e ADE0     		b	.L553
 13285              	.L556:
1931:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
1932:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 13286              		.loc 1 1932 0
 13287 0b80 7869     		ldr	r0, [r7, #20]
 13288 0b82 FFF7FEFF 		bl	strlen
 13289 0b86 0346     		mov	r3, r0
 13290 0b88 1A46     		mov	r2, r3
 13291 0b8a 7B69     		ldr	r3, [r7, #20]
 13292 0b8c 1344     		add	r3, r3, r2
 13293 0b8e 274A     		ldr	r2, .L616+32
 13294 0b90 1D46     		mov	r5, r3
 13295 0b92 1446     		mov	r4, r2
 13296 0b94 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13297 0b96 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 304


 13298 0b98 6960     		str	r1, [r5, #4]	@ unaligned
 13299 0b9a AA60     		str	r2, [r5, #8]	@ unaligned
 13300 0b9c EB60     		str	r3, [r5, #12]	@ unaligned
 13301 0b9e 2068     		ldr	r0, [r4]	@ unaligned
 13302 0ba0 2861     		str	r0, [r5, #16]	@ unaligned
 13303 0ba2 2379     		ldrb	r3, [r4, #4]
 13304 0ba4 2B75     		strb	r3, [r5, #20]
1933:..\src/command_processing.c ****                     break;
 13305              		.loc 1 1933 0
 13306 0ba6 99E0     		b	.L553
 13307              	.L557:
1934:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
1935:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 13308              		.loc 1 1935 0
 13309 0ba8 7869     		ldr	r0, [r7, #20]
 13310 0baa FFF7FEFF 		bl	strlen
 13311 0bae 0346     		mov	r3, r0
 13312 0bb0 1A46     		mov	r2, r3
 13313 0bb2 7B69     		ldr	r3, [r7, #20]
 13314 0bb4 1344     		add	r3, r3, r2
 13315 0bb6 1E4A     		ldr	r2, .L616+36
 13316 0bb8 1D46     		mov	r5, r3
 13317 0bba 1446     		mov	r4, r2
 13318 0bbc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13319 0bbe 2860     		str	r0, [r5]	@ unaligned
 13320 0bc0 6960     		str	r1, [r5, #4]	@ unaligned
 13321 0bc2 AA60     		str	r2, [r5, #8]	@ unaligned
 13322 0bc4 EB60     		str	r3, [r5, #12]	@ unaligned
 13323 0bc6 07CC     		ldmia	r4!, {r0, r1, r2}
 13324 0bc8 2861     		str	r0, [r5, #16]	@ unaligned
 13325 0bca 6961     		str	r1, [r5, #20]	@ unaligned
 13326 0bcc AA61     		str	r2, [r5, #24]	@ unaligned
 13327 0bce 2388     		ldrh	r3, [r4]	@ unaligned
 13328 0bd0 A278     		ldrb	r2, [r4, #2]
 13329 0bd2 AB83     		strh	r3, [r5, #28]	@ unaligned
 13330 0bd4 1346     		mov	r3, r2
 13331 0bd6 AB77     		strb	r3, [r5, #30]
1936:..\src/command_processing.c ****                     break;
 13332              		.loc 1 1936 0
 13333 0bd8 80E0     		b	.L553
 13334              	.L558:
1937:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
1938:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 13335              		.loc 1 1938 0
 13336 0bda 7869     		ldr	r0, [r7, #20]
 13337 0bdc FFF7FEFF 		bl	strlen
 13338 0be0 0346     		mov	r3, r0
 13339 0be2 1A46     		mov	r2, r3
 13340 0be4 7B69     		ldr	r3, [r7, #20]
 13341 0be6 1344     		add	r3, r3, r2
 13342 0be8 124A     		ldr	r2, .L616+40
 13343 0bea 1D46     		mov	r5, r3
 13344 0bec 1446     		mov	r4, r2
 13345 0bee 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13346 0bf0 2860     		str	r0, [r5]	@ unaligned
 13347 0bf2 6960     		str	r1, [r5, #4]	@ unaligned
 13348 0bf4 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 305


 13349 0bf6 EB60     		str	r3, [r5, #12]	@ unaligned
 13350 0bf8 03CC     		ldmia	r4!, {r0, r1}
 13351 0bfa 2861     		str	r0, [r5, #16]	@ unaligned
 13352 0bfc 6961     		str	r1, [r5, #20]	@ unaligned
 13353 0bfe 2388     		ldrh	r3, [r4]	@ unaligned
 13354 0c00 A278     		ldrb	r2, [r4, #2]
 13355 0c02 2B83     		strh	r3, [r5, #24]	@ unaligned
 13356 0c04 1346     		mov	r3, r2
 13357 0c06 AB76     		strb	r3, [r5, #26]
1939:..\src/command_processing.c ****                     break;
 13358              		.loc 1 1939 0
 13359 0c08 68E0     		b	.L553
 13360              	.L617:
 13361 0c0a 00BF     		.align	2
 13362              	.L616:
 13363 0c0c 0000F040 		.word	1089470464
 13364 0c10 48100000 		.word	.LC162
 13365 0c14 54100000 		.word	.LC163
 13366 0c18 60100000 		.word	.LC164
 13367 0c1c 6C100000 		.word	.LC165
 13368 0c20 88100000 		.word	.LC166
 13369 0c24 A4100000 		.word	.LC167
 13370 0c28 C0100000 		.word	.LC168
 13371 0c2c D4100000 		.word	.LC169
 13372 0c30 EC100000 		.word	.LC170
 13373 0c34 0C110000 		.word	.LC171
 13374              	.L559:
1940:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
1941:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 13375              		.loc 1 1941 0
 13376 0c38 7869     		ldr	r0, [r7, #20]
 13377 0c3a FFF7FEFF 		bl	strlen
 13378 0c3e 0346     		mov	r3, r0
 13379 0c40 1A46     		mov	r2, r3
 13380 0c42 7B69     		ldr	r3, [r7, #20]
 13381 0c44 1344     		add	r3, r3, r2
 13382 0c46 C44A     		ldr	r2, .L618
 13383 0c48 1C46     		mov	r4, r3
 13384 0c4a 1546     		mov	r5, r2
 13385 0c4c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13386 0c4e 2060     		str	r0, [r4]	@ unaligned
 13387 0c50 6160     		str	r1, [r4, #4]	@ unaligned
 13388 0c52 A260     		str	r2, [r4, #8]	@ unaligned
 13389 0c54 E360     		str	r3, [r4, #12]	@ unaligned
 13390 0c56 2868     		ldr	r0, [r5]	@ unaligned
 13391 0c58 2061     		str	r0, [r4, #16]	@ unaligned
 13392 0c5a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13393 0c5c AA79     		ldrb	r2, [r5, #6]
 13394 0c5e A382     		strh	r3, [r4, #20]	@ unaligned
 13395 0c60 1346     		mov	r3, r2
 13396 0c62 A375     		strb	r3, [r4, #22]
1942:..\src/command_processing.c ****                     break;
 13397              		.loc 1 1942 0
 13398 0c64 3AE0     		b	.L553
 13399              	.L560:
1943:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
1944:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 306


 13400              		.loc 1 1944 0
 13401 0c66 7869     		ldr	r0, [r7, #20]
 13402 0c68 FFF7FEFF 		bl	strlen
 13403 0c6c 0346     		mov	r3, r0
 13404 0c6e 1A46     		mov	r2, r3
 13405 0c70 7B69     		ldr	r3, [r7, #20]
 13406 0c72 1344     		add	r3, r3, r2
 13407 0c74 B94A     		ldr	r2, .L618+4
 13408 0c76 1D46     		mov	r5, r3
 13409 0c78 1446     		mov	r4, r2
 13410 0c7a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13411 0c7c 2860     		str	r0, [r5]	@ unaligned
 13412 0c7e 6960     		str	r1, [r5, #4]	@ unaligned
 13413 0c80 AA60     		str	r2, [r5, #8]	@ unaligned
 13414 0c82 EB60     		str	r3, [r5, #12]	@ unaligned
 13415 0c84 03CC     		ldmia	r4!, {r0, r1}
 13416 0c86 2861     		str	r0, [r5, #16]	@ unaligned
 13417 0c88 6961     		str	r1, [r5, #20]	@ unaligned
 13418 0c8a 2388     		ldrh	r3, [r4]	@ unaligned
 13419 0c8c A278     		ldrb	r2, [r4, #2]
 13420 0c8e 2B83     		strh	r3, [r5, #24]	@ unaligned
 13421 0c90 1346     		mov	r3, r2
 13422 0c92 AB76     		strb	r3, [r5, #26]
1945:..\src/command_processing.c ****                     break;
 13423              		.loc 1 1945 0
 13424 0c94 22E0     		b	.L553
 13425              	.L561:
1946:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
1947:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 13426              		.loc 1 1947 0
 13427 0c96 7869     		ldr	r0, [r7, #20]
 13428 0c98 FFF7FEFF 		bl	strlen
 13429 0c9c 0346     		mov	r3, r0
 13430 0c9e 1A46     		mov	r2, r3
 13431 0ca0 7B69     		ldr	r3, [r7, #20]
 13432 0ca2 1344     		add	r3, r3, r2
 13433 0ca4 AE4A     		ldr	r2, .L618+8
 13434 0ca6 1546     		mov	r5, r2
 13435 0ca8 9E46     		mov	lr, r3
 13436 0caa 05F1200C 		add	ip, r5, #32
 13437              	.L562:
 13438 0cae 7446     		mov	r4, lr
 13439 0cb0 2E46     		mov	r6, r5
 13440 0cb2 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13441 0cb4 2060     		str	r0, [r4]	@ unaligned
 13442 0cb6 6160     		str	r1, [r4, #4]	@ unaligned
 13443 0cb8 A260     		str	r2, [r4, #8]	@ unaligned
 13444 0cba E360     		str	r3, [r4, #12]	@ unaligned
 13445 0cbc 1035     		adds	r5, r5, #16
 13446 0cbe 0EF1100E 		add	lr, lr, #16
 13447 0cc2 6545     		cmp	r5, ip
 13448 0cc4 F3D1     		bne	.L562
 13449 0cc6 7446     		mov	r4, lr
 13450 0cc8 2B46     		mov	r3, r5
 13451 0cca 07CB     		ldmia	r3!, {r0, r1, r2}
 13452 0ccc 2060     		str	r0, [r4]	@ unaligned
 13453 0cce 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 307


 13454 0cd0 A260     		str	r2, [r4, #8]	@ unaligned
 13455 0cd2 1A88     		ldrh	r2, [r3]	@ unaligned
 13456 0cd4 9B78     		ldrb	r3, [r3, #2]
 13457 0cd6 A281     		strh	r2, [r4, #12]	@ unaligned
 13458 0cd8 A373     		strb	r3, [r4, #14]
1948:..\src/command_processing.c ****                     break;
 13459              		.loc 1 1948 0
 13460 0cda 00BF     		nop
 13461              	.L553:
1949:..\src/command_processing.c ****             }
1950:..\src/command_processing.c **** 
1951:..\src/command_processing.c ****             switch(MOT->control_mode) {
 13462              		.loc 1 1951 0
 13463 0cdc D7F88430 		ldr	r3, [r7, #132]
 13464 0ce0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13465 0ce4 032B     		cmp	r3, #3
 13466 0ce6 64D8     		bhi	.L609
 13467 0ce8 01A2     		adr	r2, .L565
 13468 0cea 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13469 0cee 00BF     		.p2align 2
 13470              	.L565:
 13471 0cf0 010D0000 		.word	.L564+1
 13472 0cf4 2B0D0000 		.word	.L566+1
 13473 0cf8 4F0D0000 		.word	.L567+1
 13474 0cfc 750D0000 		.word	.L568+1
 13475              		.p2align 1
 13476              	.L564:
1952:..\src/command_processing.c ****                 case CONTROL_ANGLE:
1953:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 13477              		.loc 1 1953 0
 13478 0d00 7869     		ldr	r0, [r7, #20]
 13479 0d02 FFF7FEFF 		bl	strlen
 13480 0d06 0346     		mov	r3, r0
 13481 0d08 1A46     		mov	r2, r3
 13482 0d0a 7B69     		ldr	r3, [r7, #20]
 13483 0d0c 1344     		add	r3, r3, r2
 13484 0d0e 954A     		ldr	r2, .L618+12
 13485 0d10 1D46     		mov	r5, r3
 13486 0d12 1446     		mov	r4, r2
 13487 0d14 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13488 0d16 2860     		str	r0, [r5]	@ unaligned
 13489 0d18 6960     		str	r1, [r5, #4]	@ unaligned
 13490 0d1a AA60     		str	r2, [r5, #8]	@ unaligned
 13491 0d1c EB60     		str	r3, [r5, #12]	@ unaligned
 13492 0d1e 03CC     		ldmia	r4!, {r0, r1}
 13493 0d20 2861     		str	r0, [r5, #16]	@ unaligned
 13494 0d22 6961     		str	r1, [r5, #20]	@ unaligned
 13495 0d24 2378     		ldrb	r3, [r4]
 13496 0d26 2B76     		strb	r3, [r5, #24]
1954:..\src/command_processing.c ****                     break;
 13497              		.loc 1 1954 0
 13498 0d28 44E0     		b	.L569
 13499              	.L566:
1955:..\src/command_processing.c ****                 case CONTROL_PWM:
1956:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 13500              		.loc 1 1956 0
 13501 0d2a 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 308


 13502 0d2c FFF7FEFF 		bl	strlen
 13503 0d30 0346     		mov	r3, r0
 13504 0d32 1A46     		mov	r2, r3
 13505 0d34 7B69     		ldr	r3, [r7, #20]
 13506 0d36 1344     		add	r3, r3, r2
 13507 0d38 8B4A     		ldr	r2, .L618+16
 13508 0d3a 1D46     		mov	r5, r3
 13509 0d3c 1446     		mov	r4, r2
 13510 0d3e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13511 0d40 2860     		str	r0, [r5]	@ unaligned
 13512 0d42 6960     		str	r1, [r5, #4]	@ unaligned
 13513 0d44 AA60     		str	r2, [r5, #8]	@ unaligned
 13514 0d46 EB60     		str	r3, [r5, #12]	@ unaligned
 13515 0d48 2068     		ldr	r0, [r4]	@ unaligned
 13516 0d4a 2861     		str	r0, [r5, #16]	@ unaligned
1957:..\src/command_processing.c ****                     break;
 13517              		.loc 1 1957 0
 13518 0d4c 32E0     		b	.L569
 13519              	.L567:
1958:..\src/command_processing.c ****                 case CONTROL_CURRENT:
1959:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 13520              		.loc 1 1959 0
 13521 0d4e 7869     		ldr	r0, [r7, #20]
 13522 0d50 FFF7FEFF 		bl	strlen
 13523 0d54 0346     		mov	r3, r0
 13524 0d56 1A46     		mov	r2, r3
 13525 0d58 7B69     		ldr	r3, [r7, #20]
 13526 0d5a 1344     		add	r3, r3, r2
 13527 0d5c 834A     		ldr	r2, .L618+20
 13528 0d5e 1D46     		mov	r5, r3
 13529 0d60 1446     		mov	r4, r2
 13530 0d62 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13531 0d64 2860     		str	r0, [r5]	@ unaligned
 13532 0d66 6960     		str	r1, [r5, #4]	@ unaligned
 13533 0d68 AA60     		str	r2, [r5, #8]	@ unaligned
 13534 0d6a EB60     		str	r3, [r5, #12]	@ unaligned
 13535 0d6c 03CC     		ldmia	r4!, {r0, r1}
 13536 0d6e 2861     		str	r0, [r5, #16]	@ unaligned
 13537 0d70 6961     		str	r1, [r5, #20]	@ unaligned
1960:..\src/command_processing.c ****                     break;
 13538              		.loc 1 1960 0
 13539 0d72 1FE0     		b	.L569
 13540              	.L568:
1961:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
1962:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 13541              		.loc 1 1962 0
 13542 0d74 7869     		ldr	r0, [r7, #20]
 13543 0d76 FFF7FEFF 		bl	strlen
 13544 0d7a 0346     		mov	r3, r0
 13545 0d7c 1A46     		mov	r2, r3
 13546 0d7e 7B69     		ldr	r3, [r7, #20]
 13547 0d80 1344     		add	r3, r3, r2
 13548 0d82 7B4A     		ldr	r2, .L618+24
 13549 0d84 1446     		mov	r4, r2
 13550 0d86 9E46     		mov	lr, r3
 13551 0d88 04F1200C 		add	ip, r4, #32
 13552              	.L570:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 309


 13553 0d8c 7546     		mov	r5, lr
 13554 0d8e 2646     		mov	r6, r4
 13555 0d90 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13556 0d92 2860     		str	r0, [r5]	@ unaligned
 13557 0d94 6960     		str	r1, [r5, #4]	@ unaligned
 13558 0d96 AA60     		str	r2, [r5, #8]	@ unaligned
 13559 0d98 EB60     		str	r3, [r5, #12]	@ unaligned
 13560 0d9a 1034     		adds	r4, r4, #16
 13561 0d9c 0EF1100E 		add	lr, lr, #16
 13562 0da0 6445     		cmp	r4, ip
 13563 0da2 F3D1     		bne	.L570
 13564 0da4 7346     		mov	r3, lr
 13565 0da6 2246     		mov	r2, r4
 13566 0da8 1068     		ldr	r0, [r2]	@ unaligned
 13567 0daa 1860     		str	r0, [r3]	@ unaligned
 13568 0dac 1279     		ldrb	r2, [r2, #4]
 13569 0dae 1A71     		strb	r2, [r3, #4]
1963:..\src/command_processing.c ****                     break;
 13570              		.loc 1 1963 0
 13571 0db0 00E0     		b	.L569
 13572              	.L609:
1964:..\src/command_processing.c ****                 default:
1965:..\src/command_processing.c ****                     break;
 13573              		.loc 1 1965 0
 13574 0db2 00BF     		nop
 13575              	.L569:
1966:..\src/command_processing.c ****             }
1967:..\src/command_processing.c **** 
1968:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 13576              		.loc 1 1968 0
 13577 0db4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13578 0db8 D7F88C10 		ldr	r1, [r7, #140]
 13579 0dbc 1346     		mov	r3, r2
 13580 0dbe 5B00     		lsls	r3, r3, #1
 13581 0dc0 1344     		add	r3, r3, r2
 13582 0dc2 1B01     		lsls	r3, r3, #4
 13583 0dc4 0B44     		add	r3, r3, r1
 13584 0dc6 03F5D873 		add	r3, r3, #432
 13585 0dca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13586 0dcc 002B     		cmp	r3, #0
 13587 0dce 1CD0     		beq	.L571
1969:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 13588              		.loc 1 1969 0
 13589 0dd0 7869     		ldr	r0, [r7, #20]
 13590 0dd2 FFF7FEFF 		bl	strlen
 13591 0dd6 0346     		mov	r3, r0
 13592 0dd8 1A46     		mov	r2, r3
 13593 0dda 7B69     		ldr	r3, [r7, #20]
 13594 0ddc 1344     		add	r3, r3, r2
 13595 0dde 654A     		ldr	r2, .L618+28
 13596 0de0 1446     		mov	r4, r2
 13597 0de2 9E46     		mov	lr, r3
 13598 0de4 04F1200C 		add	ip, r4, #32
 13599              	.L572:
 13600 0de8 7546     		mov	r5, lr
 13601 0dea 2646     		mov	r6, r4
 13602 0dec 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 310


 13603 0dee 2860     		str	r0, [r5]	@ unaligned
 13604 0df0 6960     		str	r1, [r5, #4]	@ unaligned
 13605 0df2 AA60     		str	r2, [r5, #8]	@ unaligned
 13606 0df4 EB60     		str	r3, [r5, #12]	@ unaligned
 13607 0df6 1034     		adds	r4, r4, #16
 13608 0df8 0EF1100E 		add	lr, lr, #16
 13609 0dfc 6445     		cmp	r4, ip
 13610 0dfe F3D1     		bne	.L572
 13611 0e00 7346     		mov	r3, lr
 13612 0e02 2246     		mov	r2, r4
 13613 0e04 1278     		ldrb	r2, [r2]
 13614 0e06 1A70     		strb	r2, [r3]
 13615 0e08 13E0     		b	.L573
 13616              	.L571:
1970:..\src/command_processing.c ****             else
1971:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 13617              		.loc 1 1971 0
 13618 0e0a 7869     		ldr	r0, [r7, #20]
 13619 0e0c FFF7FEFF 		bl	strlen
 13620 0e10 0346     		mov	r3, r0
 13621 0e12 1A46     		mov	r2, r3
 13622 0e14 7B69     		ldr	r3, [r7, #20]
 13623 0e16 1344     		add	r3, r3, r2
 13624 0e18 574A     		ldr	r2, .L618+32
 13625 0e1a 1C46     		mov	r4, r3
 13626 0e1c 1546     		mov	r5, r2
 13627 0e1e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13628 0e20 2060     		str	r0, [r4]	@ unaligned
 13629 0e22 6160     		str	r1, [r4, #4]	@ unaligned
 13630 0e24 A260     		str	r2, [r4, #8]	@ unaligned
 13631 0e26 E360     		str	r3, [r4, #12]	@ unaligned
 13632 0e28 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13633 0e2a 2061     		str	r0, [r4, #16]	@ unaligned
 13634 0e2c 6161     		str	r1, [r4, #20]	@ unaligned
 13635 0e2e A261     		str	r2, [r4, #24]	@ unaligned
 13636 0e30 E361     		str	r3, [r4, #28]	@ unaligned
 13637              	.L573:
1972:..\src/command_processing.c **** 
1973:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 13638              		.loc 1 1973 0
 13639 0e32 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13640 0e36 D7F88C10 		ldr	r1, [r7, #140]
 13641 0e3a 1346     		mov	r3, r2
 13642 0e3c 5B00     		lsls	r3, r3, #1
 13643 0e3e 1344     		add	r3, r3, r2
 13644 0e40 1B01     		lsls	r3, r3, #4
 13645 0e42 0B44     		add	r3, r3, r1
 13646 0e44 03F5DA73 		add	r3, r3, #436
 13647 0e48 93F90030 		ldrsb	r3, [r3]
 13648 0e4c 1A46     		mov	r2, r3
 13649 0e4e 07F11C03 		add	r3, r7, #28
 13650 0e52 4A49     		ldr	r1, .L618+36
 13651 0e54 1846     		mov	r0, r3
 13652 0e56 FFF7FEFF 		bl	sprintf
1974:..\src/command_processing.c ****             strcat(info_string, str);
 13653              		.loc 1 1974 0
 13654 0e5a 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 311


 13655 0e5e 1946     		mov	r1, r3
 13656 0e60 7869     		ldr	r0, [r7, #20]
 13657 0e62 FFF7FEFF 		bl	strcat
1975:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
1976:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
1977:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
1978:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
1979:..\src/command_processing.c ****                 strcat(info_string, str);
1980:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
1981:..\src/command_processing.c ****                     strcat(info_string, ", ");
1982:..\src/command_processing.c ****                 }                
1983:..\src/command_processing.c ****             }
1984:..\src/command_processing.c ****             strcat(info_string, "\r\n");
1985:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
1986:..\src/command_processing.c ****             strcat(info_string, str);
1987:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
1988:..\src/command_processing.c ****             strcat(info_string, str);
1989:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
1990:..\src/command_processing.c ****             strcat(info_string, str);
1991:..\src/command_processing.c **** #endif            
1992:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13658              		.loc 1 1992 0
 13659 0e66 7869     		ldr	r0, [r7, #20]
 13660 0e68 FFF7FEFF 		bl	strlen
 13661 0e6c 0346     		mov	r3, r0
 13662 0e6e 1A46     		mov	r2, r3
 13663 0e70 7B69     		ldr	r3, [r7, #20]
 13664 0e72 1344     		add	r3, r3, r2
 13665 0e74 424A     		ldr	r2, .L618+40
 13666 0e76 1188     		ldrh	r1, [r2]	@ unaligned
 13667 0e78 9278     		ldrb	r2, [r2, #2]
 13668 0e7a 1980     		strh	r1, [r3]	@ unaligned
 13669 0e7c 9A70     		strb	r2, [r3, #2]
1993:..\src/command_processing.c **** 
1994:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 13670              		.loc 1 1994 0
 13671 0e7e 7869     		ldr	r0, [r7, #20]
 13672 0e80 FFF7FEFF 		bl	strlen
 13673 0e84 0346     		mov	r3, r0
 13674 0e86 1A46     		mov	r2, r3
 13675 0e88 7B69     		ldr	r3, [r7, #20]
 13676 0e8a 1344     		add	r3, r3, r2
 13677 0e8c 3D4A     		ldr	r2, .L618+44
 13678 0e8e 1D46     		mov	r5, r3
 13679 0e90 1446     		mov	r4, r2
 13680 0e92 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13681 0e94 2860     		str	r0, [r5]	@ unaligned
 13682 0e96 6960     		str	r1, [r5, #4]	@ unaligned
 13683 0e98 AA60     		str	r2, [r5, #8]	@ unaligned
 13684 0e9a EB60     		str	r3, [r5, #12]	@ unaligned
 13685 0e9c 2068     		ldr	r0, [r4]	@ unaligned
 13686 0e9e 2861     		str	r0, [r5, #16]	@ unaligned
1995:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13687              		.loc 1 1995 0
 13688 0ea0 0023     		movs	r3, #0
 13689 0ea2 C7F89430 		str	r3, [r7, #148]
 13690 0ea6 30E0     		b	.L574
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 312


 13691              	.L576:
1996:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13692              		.loc 1 1996 0
 13693 0ea8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13694 0eac D7F88C10 		ldr	r1, [r7, #140]
 13695 0eb0 1346     		mov	r3, r2
 13696 0eb2 5B00     		lsls	r3, r3, #1
 13697 0eb4 1344     		add	r3, r3, r2
 13698 0eb6 1B01     		lsls	r3, r3, #4
 13699 0eb8 CA18     		adds	r2, r1, r3
 13700 0eba D7F89430 		ldr	r3, [r7, #148]
 13701 0ebe 1344     		add	r3, r3, r2
 13702 0ec0 03F29513 		addw	r3, r3, #405
 13703 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13704 0ec6 1A46     		mov	r2, r3
 13705 0ec8 07F11C03 		add	r3, r7, #28
 13706 0ecc 2E49     		ldr	r1, .L618+48
 13707 0ece 1846     		mov	r0, r3
 13708 0ed0 FFF7FEFF 		bl	sprintf
1997:..\src/command_processing.c ****                 strcat(info_string, str);
 13709              		.loc 1 1997 0
 13710 0ed4 07F11C03 		add	r3, r7, #28
 13711 0ed8 1946     		mov	r1, r3
 13712 0eda 7869     		ldr	r0, [r7, #20]
 13713 0edc FFF7FEFF 		bl	strcat
1998:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13714              		.loc 1 1998 0
 13715 0ee0 D7F89430 		ldr	r3, [r7, #148]
 13716 0ee4 022B     		cmp	r3, #2
 13717 0ee6 0BD0     		beq	.L575
1999:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13718              		.loc 1 1999 0
 13719 0ee8 7869     		ldr	r0, [r7, #20]
 13720 0eea FFF7FEFF 		bl	strlen
 13721 0eee 0346     		mov	r3, r0
 13722 0ef0 1A46     		mov	r2, r3
 13723 0ef2 7B69     		ldr	r3, [r7, #20]
 13724 0ef4 1344     		add	r3, r3, r2
 13725 0ef6 254A     		ldr	r2, .L618+52
 13726 0ef8 1188     		ldrh	r1, [r2]	@ unaligned
 13727 0efa 9278     		ldrb	r2, [r2, #2]
 13728 0efc 1980     		strh	r1, [r3]	@ unaligned
 13729 0efe 9A70     		strb	r2, [r3, #2]
 13730              	.L575:
1995:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13731              		.loc 1 1995 0 discriminator 2
 13732 0f00 D7F89430 		ldr	r3, [r7, #148]
 13733 0f04 0133     		adds	r3, r3, #1
 13734 0f06 C7F89430 		str	r3, [r7, #148]
 13735              	.L574:
1995:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 13736              		.loc 1 1995 0 is_stmt 0 discriminator 1
 13737 0f0a D7F89430 		ldr	r3, [r7, #148]
 13738 0f0e 022B     		cmp	r3, #2
 13739 0f10 CADD     		ble	.L576
2000:..\src/command_processing.c ****                 }                
2001:..\src/command_processing.c ****             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 313


2002:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13740              		.loc 1 2002 0 is_stmt 1
 13741 0f12 7869     		ldr	r0, [r7, #20]
 13742 0f14 FFF7FEFF 		bl	strlen
 13743 0f18 0346     		mov	r3, r0
 13744 0f1a 1A46     		mov	r2, r3
 13745 0f1c 7B69     		ldr	r3, [r7, #20]
 13746 0f1e 1344     		add	r3, r3, r2
 13747 0f20 174A     		ldr	r2, .L618+40
 13748 0f22 1188     		ldrh	r1, [r2]	@ unaligned
 13749 0f24 9278     		ldrb	r2, [r2, #2]
 13750 0f26 1980     		strh	r1, [r3]	@ unaligned
 13751 0f28 9A70     		strb	r2, [r3, #2]
2003:..\src/command_processing.c **** 
2004:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 13752              		.loc 1 2004 0
 13753 0f2a 7869     		ldr	r0, [r7, #20]
 13754 0f2c FFF7FEFF 		bl	strlen
 13755 0f30 0346     		mov	r3, r0
 13756 0f32 1A46     		mov	r2, r3
 13757 0f34 7B69     		ldr	r3, [r7, #20]
 13758 0f36 1344     		add	r3, r3, r2
 13759 0f38 154A     		ldr	r2, .L618+56
 13760 0f3a 1D46     		mov	r5, r3
 13761 0f3c 1446     		mov	r4, r2
 13762 0f3e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13763 0f40 2860     		str	r0, [r5]	@ unaligned
 13764 0f42 6960     		str	r1, [r5, #4]	@ unaligned
 13765 0f44 AA60     		str	r2, [r5, #8]	@ unaligned
 13766 0f46 EB60     		str	r3, [r5, #12]	@ unaligned
 13767 0f48 2068     		ldr	r0, [r4]	@ unaligned
 13768 0f4a 2861     		str	r0, [r5, #16]	@ unaligned
 13769 0f4c 2379     		ldrb	r3, [r4, #4]
 13770 0f4e 2B75     		strb	r3, [r5, #20]
2005:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13771              		.loc 1 2005 0
 13772 0f50 0023     		movs	r3, #0
 13773 0f52 C7F89430 		str	r3, [r7, #148]
 13774 0f56 5DE0     		b	.L577
 13775              	.L619:
 13776              		.align	2
 13777              	.L618:
 13778 0f58 28110000 		.word	.LC172
 13779 0f5c 40110000 		.word	.LC173
 13780 0f60 5C110000 		.word	.LC174
 13781 0f64 8C110000 		.word	.LC175
 13782 0f68 A8110000 		.word	.LC176
 13783 0f6c BC110000 		.word	.LC177
 13784 0f70 D4110000 		.word	.LC178
 13785 0f74 FC110000 		.word	.LC179
 13786 0f78 20120000 		.word	.LC180
 13787 0f7c 40120000 		.word	.LC181
 13788 0f80 C00D0000 		.word	.LC126
 13789 0f84 5C120000 		.word	.LC182
 13790 0f88 880F0000 		.word	.LC154
 13791 0f8c 8C0F0000 		.word	.LC155
 13792 0f90 70120000 		.word	.LC183
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 314


 13793              	.L579:
2006:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13794              		.loc 1 2006 0
 13795 0f94 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13796 0f98 D7F88C10 		ldr	r1, [r7, #140]
 13797 0f9c 1346     		mov	r3, r2
 13798 0f9e 5B00     		lsls	r3, r3, #1
 13799 0fa0 1344     		add	r3, r3, r2
 13800 0fa2 9B00     		lsls	r3, r3, #2
 13801 0fa4 D7F89420 		ldr	r2, [r7, #148]
 13802 0fa8 1344     		add	r3, r3, r2
 13803 0faa 6633     		adds	r3, r3, #102
 13804 0fac 51F82310 		ldr	r1, [r1, r3, lsl #2]
 13805 0fb0 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13806 0fb4 D7F88C00 		ldr	r0, [r7, #140]
 13807 0fb8 1346     		mov	r3, r2
 13808 0fba 5B00     		lsls	r3, r3, #1
 13809 0fbc 1344     		add	r3, r3, r2
 13810 0fbe 1B01     		lsls	r3, r3, #4
 13811 0fc0 C218     		adds	r2, r0, r3
 13812 0fc2 D7F89430 		ldr	r3, [r7, #148]
 13813 0fc6 1344     		add	r3, r3, r2
 13814 0fc8 03F29513 		addw	r3, r3, #405
 13815 0fcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13816 0fce 41FA03F2 		asr	r2, r1, r3
 13817 0fd2 07F11C03 		add	r3, r7, #28
 13818 0fd6 2349     		ldr	r1, .L620
 13819 0fd8 1846     		mov	r0, r3
 13820 0fda FFF7FEFF 		bl	sprintf
2007:..\src/command_processing.c ****                 strcat(info_string, str);
 13821              		.loc 1 2007 0
 13822 0fde 07F11C03 		add	r3, r7, #28
 13823 0fe2 1946     		mov	r1, r3
 13824 0fe4 7869     		ldr	r0, [r7, #20]
 13825 0fe6 FFF7FEFF 		bl	strcat
2008:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13826              		.loc 1 2008 0
 13827 0fea D7F89430 		ldr	r3, [r7, #148]
 13828 0fee 022B     		cmp	r3, #2
 13829 0ff0 0BD0     		beq	.L578
2009:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13830              		.loc 1 2009 0
 13831 0ff2 7869     		ldr	r0, [r7, #20]
 13832 0ff4 FFF7FEFF 		bl	strlen
 13833 0ff8 0346     		mov	r3, r0
 13834 0ffa 1A46     		mov	r2, r3
 13835 0ffc 7B69     		ldr	r3, [r7, #20]
 13836 0ffe 1344     		add	r3, r3, r2
 13837 1000 194A     		ldr	r2, .L620+4
 13838 1002 1188     		ldrh	r1, [r2]	@ unaligned
 13839 1004 9278     		ldrb	r2, [r2, #2]
 13840 1006 1980     		strh	r1, [r3]	@ unaligned
 13841 1008 9A70     		strb	r2, [r3, #2]
 13842              	.L578:
2005:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13843              		.loc 1 2005 0 discriminator 2
 13844 100a D7F89430 		ldr	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 315


 13845 100e 0133     		adds	r3, r3, #1
 13846 1010 C7F89430 		str	r3, [r7, #148]
 13847              	.L577:
2005:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 13848              		.loc 1 2005 0 is_stmt 0 discriminator 1
 13849 1014 D7F89430 		ldr	r3, [r7, #148]
 13850 1018 022B     		cmp	r3, #2
 13851 101a BBDD     		ble	.L579
2010:..\src/command_processing.c ****                 }
2011:..\src/command_processing.c ****             }
2012:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13852              		.loc 1 2012 0 is_stmt 1
 13853 101c 7869     		ldr	r0, [r7, #20]
 13854 101e FFF7FEFF 		bl	strlen
 13855 1022 0346     		mov	r3, r0
 13856 1024 1A46     		mov	r2, r3
 13857 1026 7B69     		ldr	r3, [r7, #20]
 13858 1028 1344     		add	r3, r3, r2
 13859 102a 104A     		ldr	r2, .L620+8
 13860 102c 1188     		ldrh	r1, [r2]	@ unaligned
 13861 102e 9278     		ldrb	r2, [r2, #2]
 13862 1030 1980     		strh	r1, [r3]	@ unaligned
 13863 1032 9A70     		strb	r2, [r3, #2]
2013:..\src/command_processing.c ****                 
2014:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 13864              		.loc 1 2014 0
 13865 1034 7869     		ldr	r0, [r7, #20]
 13866 1036 FFF7FEFF 		bl	strlen
 13867 103a 0346     		mov	r3, r0
 13868 103c 1A46     		mov	r2, r3
 13869 103e 7B69     		ldr	r3, [r7, #20]
 13870 1040 1344     		add	r3, r3, r2
 13871 1042 0B4A     		ldr	r2, .L620+12
 13872 1044 1D46     		mov	r5, r3
 13873 1046 1446     		mov	r4, r2
 13874 1048 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13875 104a 2860     		str	r0, [r5]	@ unaligned
 13876 104c 6960     		str	r1, [r5, #4]	@ unaligned
 13877 104e AA60     		str	r2, [r5, #8]	@ unaligned
 13878 1050 EB60     		str	r3, [r5, #12]	@ unaligned
 13879 1052 03CC     		ldmia	r4!, {r0, r1}
 13880 1054 2861     		str	r0, [r5, #16]	@ unaligned
 13881 1056 6961     		str	r1, [r5, #20]	@ unaligned
 13882 1058 2378     		ldrb	r3, [r4]
 13883 105a 2B76     		strb	r3, [r5, #24]
2015:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 13884              		.loc 1 2015 0
 13885 105c 0023     		movs	r3, #0
 13886 105e C7F89430 		str	r3, [r7, #148]
 13887 1062 3DE0     		b	.L580
 13888              	.L621:
 13889              		.align	2
 13890              	.L620:
 13891 1064 88120000 		.word	.LC184
 13892 1068 8C0F0000 		.word	.LC155
 13893 106c C00D0000 		.word	.LC126
 13894 1070 8C120000 		.word	.LC185
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 316


 13895              	.L582:
2016:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 13896              		.loc 1 2016 0
 13897 1074 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13898 1078 D7F88C10 		ldr	r1, [r7, #140]
 13899 107c 1346     		mov	r3, r2
 13900 107e 5B00     		lsls	r3, r3, #1
 13901 1080 1344     		add	r3, r3, r2
 13902 1082 9B00     		lsls	r3, r3, #2
 13903 1084 D7F89420 		ldr	r2, [r7, #148]
 13904 1088 1344     		add	r3, r3, r2
 13905 108a 6833     		adds	r3, r3, #104
 13906 108c 9B00     		lsls	r3, r3, #2
 13907 108e 0B44     		add	r3, r3, r1
 13908 1090 5B68     		ldr	r3, [r3, #4]	@ float
 13909 1092 1846     		mov	r0, r3
 13910 1094 FFF7FEFF 		bl	__aeabi_f2d
 13911 1098 0346     		mov	r3, r0
 13912 109a 0C46     		mov	r4, r1
 13913 109c 07F11C00 		add	r0, r7, #28
 13914 10a0 1A46     		mov	r2, r3
 13915 10a2 2346     		mov	r3, r4
 13916 10a4 BF49     		ldr	r1, .L622
 13917 10a6 FFF7FEFF 		bl	sprintf
2017:..\src/command_processing.c ****                 strcat(info_string, str);
 13918              		.loc 1 2017 0
 13919 10aa 07F11C03 		add	r3, r7, #28
 13920 10ae 1946     		mov	r1, r3
 13921 10b0 7869     		ldr	r0, [r7, #20]
 13922 10b2 FFF7FEFF 		bl	strcat
2018:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13923              		.loc 1 2018 0
 13924 10b6 D7F89430 		ldr	r3, [r7, #148]
 13925 10ba 022B     		cmp	r3, #2
 13926 10bc 0BD0     		beq	.L581
2019:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13927              		.loc 1 2019 0
 13928 10be 7869     		ldr	r0, [r7, #20]
 13929 10c0 FFF7FEFF 		bl	strlen
 13930 10c4 0346     		mov	r3, r0
 13931 10c6 1A46     		mov	r2, r3
 13932 10c8 7B69     		ldr	r3, [r7, #20]
 13933 10ca 1344     		add	r3, r3, r2
 13934 10cc B64A     		ldr	r2, .L622+4
 13935 10ce 1188     		ldrh	r1, [r2]	@ unaligned
 13936 10d0 9278     		ldrb	r2, [r2, #2]
 13937 10d2 1980     		strh	r1, [r3]	@ unaligned
 13938 10d4 9A70     		strb	r2, [r3, #2]
 13939              	.L581:
2015:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 13940              		.loc 1 2015 0 discriminator 2
 13941 10d6 D7F89430 		ldr	r3, [r7, #148]
 13942 10da 0133     		adds	r3, r3, #1
 13943 10dc C7F89430 		str	r3, [r7, #148]
 13944              	.L580:
2015:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 13945              		.loc 1 2015 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 317


 13946 10e0 D7F89430 		ldr	r3, [r7, #148]
 13947 10e4 022B     		cmp	r3, #2
 13948 10e6 C5DD     		ble	.L582
2020:..\src/command_processing.c ****                 }
2021:..\src/command_processing.c ****             }
2022:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13949              		.loc 1 2022 0 is_stmt 1 discriminator 2
 13950 10e8 7869     		ldr	r0, [r7, #20]
 13951 10ea FFF7FEFF 		bl	strlen
 13952 10ee 0346     		mov	r3, r0
 13953 10f0 1A46     		mov	r2, r3
 13954 10f2 7B69     		ldr	r3, [r7, #20]
 13955 10f4 1344     		add	r3, r3, r2
 13956 10f6 AD4A     		ldr	r2, .L622+8
 13957 10f8 1188     		ldrh	r1, [r2]	@ unaligned
 13958 10fa 9278     		ldrb	r2, [r2, #2]
 13959 10fc 1980     		strh	r1, [r3]	@ unaligned
 13960 10fe 9A70     		strb	r2, [r3, #2]
2023:..\src/command_processing.c ****             
2024:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2025:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13961              		.loc 1 2025 0 discriminator 2
 13962 1100 D7F88430 		ldr	r3, [r7, #132]
 13963 1104 5B6C     		ldr	r3, [r3, #68]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13964              		.loc 1 2024 0 discriminator 2
 13965 1106 1846     		mov	r0, r3
 13966 1108 FFF7FEFF 		bl	__aeabi_f2d
 13967 110c C7E90201 		strd	r0, [r7, #8]
 13968              		.loc 1 2025 0 discriminator 2
 13969 1110 D7F88430 		ldr	r3, [r7, #132]
 13970 1114 9B6C     		ldr	r3, [r3, #72]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13971              		.loc 1 2024 0 discriminator 2
 13972 1116 1846     		mov	r0, r3
 13973 1118 FFF7FEFF 		bl	__aeabi_f2d
 13974 111c 0446     		mov	r4, r0
 13975 111e 0D46     		mov	r5, r1
 13976              		.loc 1 2025 0 discriminator 2
 13977 1120 D7F88430 		ldr	r3, [r7, #132]
 13978 1124 DB6C     		ldr	r3, [r3, #76]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13979              		.loc 1 2024 0 discriminator 2
 13980 1126 1846     		mov	r0, r3
 13981 1128 FFF7FEFF 		bl	__aeabi_f2d
 13982 112c 8046     		mov	r8, r0
 13983 112e 8946     		mov	r9, r1
2026:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 13984              		.loc 1 2026 0 discriminator 2
 13985 1130 D7F88430 		ldr	r3, [r7, #132]
 13986 1134 1B6D     		ldr	r3, [r3, #80]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13987              		.loc 1 2024 0 discriminator 2
 13988 1136 1846     		mov	r0, r3
 13989 1138 FFF7FEFF 		bl	__aeabi_f2d
 13990 113c 8246     		mov	r10, r0
 13991 113e 8B46     		mov	fp, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 318


 13992              		.loc 1 2026 0 discriminator 2
 13993 1140 D7F88430 		ldr	r3, [r7, #132]
 13994 1144 5B6D     		ldr	r3, [r3, #84]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 13995              		.loc 1 2024 0 discriminator 2
 13996 1146 1846     		mov	r0, r3
 13997 1148 FFF7FEFF 		bl	__aeabi_f2d
 13998 114c C7E90001 		strd	r0, [r7]
 13999              		.loc 1 2026 0 discriminator 2
 14000 1150 D7F88430 		ldr	r3, [r7, #132]
 14001 1154 9B6D     		ldr	r3, [r3, #88]	@ float
2024:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14002              		.loc 1 2024 0 discriminator 2
 14003 1156 1846     		mov	r0, r3
 14004 1158 FFF7FEFF 		bl	__aeabi_f2d
 14005 115c 0246     		mov	r2, r0
 14006 115e 0B46     		mov	r3, r1
 14007 1160 07F11C00 		add	r0, r7, #28
 14008 1164 CDE90823 		strd	r2, [sp, #32]
 14009 1168 D7E90012 		ldrd	r1, [r7]
 14010 116c CDE90612 		strd	r1, [sp, #24]
 14011 1170 CDE904AB 		strd	r10, [sp, #16]
 14012 1174 CDE90289 		strd	r8, [sp, #8]
 14013 1178 CDE90045 		strd	r4, [sp]
 14014 117c D7E90223 		ldrd	r2, [r7, #8]
 14015 1180 8B49     		ldr	r1, .L622+12
 14016 1182 FFF7FEFF 		bl	sprintf
2027:..\src/command_processing.c **** 		    strcat(info_string, str);       
 14017              		.loc 1 2027 0 discriminator 2
 14018 1186 07F11C03 		add	r3, r7, #28
 14019 118a 1946     		mov	r1, r3
 14020 118c 7869     		ldr	r0, [r7, #20]
 14021 118e FFF7FEFF 		bl	strcat
2028:..\src/command_processing.c **** 
2029:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 14022              		.loc 1 2029 0 discriminator 2
 14023 1192 D7F88430 		ldr	r3, [r7, #132]
 14024 1196 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 14025 119a 1A46     		mov	r2, r3
 14026 119c 07F11C03 		add	r3, r7, #28
 14027 11a0 8449     		ldr	r1, .L622+16
 14028 11a2 1846     		mov	r0, r3
 14029 11a4 FFF7FEFF 		bl	sprintf
2030:..\src/command_processing.c ****             strcat(info_string, str);
 14030              		.loc 1 2030 0 discriminator 2
 14031 11a8 07F11C03 		add	r3, r7, #28
 14032 11ac 1946     		mov	r1, r3
 14033 11ae 7869     		ldr	r0, [r7, #20]
 14034 11b0 FFF7FEFF 		bl	strcat
2031:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14035              		.loc 1 2031 0 discriminator 2
 14036 11b4 7869     		ldr	r0, [r7, #20]
 14037 11b6 FFF7FEFF 		bl	strlen
 14038 11ba 0346     		mov	r3, r0
 14039 11bc 1A46     		mov	r2, r3
 14040 11be 7B69     		ldr	r3, [r7, #20]
 14041 11c0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 319


 14042 11c2 7A4A     		ldr	r2, .L622+8
 14043 11c4 1188     		ldrh	r1, [r2]	@ unaligned
 14044 11c6 9278     		ldrb	r2, [r2, #2]
 14045 11c8 1980     		strh	r1, [r3]	@ unaligned
 14046 11ca 9A70     		strb	r2, [r3, #2]
2032:..\src/command_processing.c **** 
2033:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 14047              		.loc 1 2033 0 discriminator 2
 14048 11cc D7F88430 		ldr	r3, [r7, #132]
 14049 11d0 596B     		ldr	r1, [r3, #52]
 14050 11d2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14051 11d6 D7F88C00 		ldr	r0, [r7, #140]
 14052 11da 1346     		mov	r3, r2
 14053 11dc 5B00     		lsls	r3, r3, #1
 14054 11de 1344     		add	r3, r3, r2
 14055 11e0 1B01     		lsls	r3, r3, #4
 14056 11e2 0344     		add	r3, r3, r0
 14057 11e4 03F29513 		addw	r3, r3, #405
 14058 11e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14059 11ea 41FA03F2 		asr	r2, r1, r3
 14060 11ee 07F11C03 		add	r3, r7, #28
 14061 11f2 7149     		ldr	r1, .L622+20
 14062 11f4 1846     		mov	r0, r3
 14063 11f6 FFF7FEFF 		bl	sprintf
2034:..\src/command_processing.c ****             strcat(info_string, str);
 14064              		.loc 1 2034 0 discriminator 2
 14065 11fa 07F11C03 		add	r3, r7, #28
 14066 11fe 1946     		mov	r1, r3
 14067 1200 7869     		ldr	r0, [r7, #20]
 14068 1202 FFF7FEFF 		bl	strcat
2035:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 14069              		.loc 1 2035 0 discriminator 2
 14070 1206 D7F88430 		ldr	r3, [r7, #132]
 14071 120a 996B     		ldr	r1, [r3, #56]
 14072 120c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14073 1210 D7F88C00 		ldr	r0, [r7, #140]
 14074 1214 1346     		mov	r3, r2
 14075 1216 5B00     		lsls	r3, r3, #1
 14076 1218 1344     		add	r3, r3, r2
 14077 121a 1B01     		lsls	r3, r3, #4
 14078 121c 0344     		add	r3, r3, r0
 14079 121e 03F29513 		addw	r3, r3, #405
 14080 1222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14081 1224 41FA03F2 		asr	r2, r1, r3
 14082 1228 07F11C03 		add	r3, r7, #28
 14083 122c 6349     		ldr	r1, .L622+24
 14084 122e 1846     		mov	r0, r3
 14085 1230 FFF7FEFF 		bl	sprintf
2036:..\src/command_processing.c ****             strcat(info_string, str);
 14086              		.loc 1 2036 0 discriminator 2
 14087 1234 07F11C03 		add	r3, r7, #28
 14088 1238 1946     		mov	r1, r3
 14089 123a 7869     		ldr	r0, [r7, #20]
 14090 123c FFF7FEFF 		bl	strcat
2037:..\src/command_processing.c **** 
2038:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 14091              		.loc 1 2038 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 320


 14092 1240 D7F88430 		ldr	r3, [r7, #132]
 14093 1244 1A6C     		ldr	r2, [r3, #64]
 14094 1246 D7F88430 		ldr	r3, [r7, #132]
 14095 124a DB6B     		ldr	r3, [r3, #60]
 14096 124c 07F11C00 		add	r0, r7, #28
 14097 1250 5B49     		ldr	r1, .L622+28
 14098 1252 FFF7FEFF 		bl	sprintf
2039:..\src/command_processing.c ****             strcat(info_string, str);
 14099              		.loc 1 2039 0 discriminator 2
 14100 1256 07F11C03 		add	r3, r7, #28
 14101 125a 1946     		mov	r1, r3
 14102 125c 7869     		ldr	r0, [r7, #20]
 14103 125e FFF7FEFF 		bl	strcat
2040:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14104              		.loc 1 2040 0 discriminator 2
 14105 1262 7869     		ldr	r0, [r7, #20]
 14106 1264 FFF7FEFF 		bl	strlen
 14107 1268 0346     		mov	r3, r0
 14108 126a 1A46     		mov	r2, r3
 14109 126c 7B69     		ldr	r3, [r7, #20]
 14110 126e 1344     		add	r3, r3, r2
 14111 1270 4E4A     		ldr	r2, .L622+8
 14112 1272 1188     		ldrh	r1, [r2]	@ unaligned
 14113 1274 9278     		ldrb	r2, [r2, #2]
 14114 1276 1980     		strh	r1, [r3]	@ unaligned
 14115 1278 9A70     		strb	r2, [r3, #2]
2041:..\src/command_processing.c **** 
2042:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 14116              		.loc 1 2042 0 discriminator 2
 14117 127a D7F88430 		ldr	r3, [r7, #132]
 14118 127e B3F95C30 		ldrsh	r3, [r3, #92]
 14119 1282 1A46     		mov	r2, r3
 14120 1284 07F11C03 		add	r3, r7, #28
 14121 1288 4E49     		ldr	r1, .L622+32
 14122 128a 1846     		mov	r0, r3
 14123 128c FFF7FEFF 		bl	sprintf
2043:..\src/command_processing.c ****             strcat(info_string, str);
 14124              		.loc 1 2043 0 discriminator 2
 14125 1290 07F11C03 		add	r3, r7, #28
 14126 1294 1946     		mov	r1, r3
 14127 1296 7869     		ldr	r0, [r7, #20]
 14128 1298 FFF7FEFF 		bl	strcat
2044:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2045:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2046:..\src/command_processing.c ****             strcat(info_string, str);
2047:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2048:..\src/command_processing.c ****                 case DRIVER_MC33887:
2049:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2050:..\src/command_processing.c ****                     break;
2051:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2052:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2053:..\src/command_processing.c ****                     break;
2054:..\src/command_processing.c ****                 default:
2055:..\src/command_processing.c ****                     break;
2056:..\src/command_processing.c ****             }
2057:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2058:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 321


2059:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2060:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2061:..\src/command_processing.c ****             else
2062:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2063:..\src/command_processing.c **** #endif                
2064:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14129              		.loc 1 2064 0 discriminator 2
 14130 129c 7869     		ldr	r0, [r7, #20]
 14131 129e FFF7FEFF 		bl	strlen
 14132 12a2 0346     		mov	r3, r0
 14133 12a4 1A46     		mov	r2, r3
 14134 12a6 7B69     		ldr	r3, [r7, #20]
 14135 12a8 1344     		add	r3, r3, r2
 14136 12aa 404A     		ldr	r2, .L622+8
 14137 12ac 1188     		ldrh	r1, [r2]	@ unaligned
 14138 12ae 9278     		ldrb	r2, [r2, #2]
 14139 12b0 1980     		strh	r1, [r3]	@ unaligned
 14140 12b2 9A70     		strb	r2, [r3, #2]
 14141              	.LBE18:
1803:..\src/command_processing.c ****             
 14142              		.loc 1 1803 0 discriminator 2
 14143 12b4 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 14144 12b8 0133     		adds	r3, r3, #1
 14145 12ba 87F89330 		strb	r3, [r7, #147]
 14146              	.L532:
1803:..\src/command_processing.c ****             
 14147              		.loc 1 1803 0 is_stmt 0 discriminator 1
 14148 12be D7F88C30 		ldr	r3, [r7, #140]
 14149 12c2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 14150 12c6 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 14151 12ca 9A42     		cmp	r2, r3
 14152 12cc 7EF6CEAF 		bls	.L583
 14153              	.LBE17:
2065:..\src/command_processing.c ****         }
2066:..\src/command_processing.c ****       
2067:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 14154              		.loc 1 2067 0 is_stmt 1
 14155 12d0 7869     		ldr	r0, [r7, #20]
 14156 12d2 FFF7FEFF 		bl	strlen
 14157 12d6 0346     		mov	r3, r0
 14158 12d8 1A46     		mov	r2, r3
 14159 12da 7B69     		ldr	r3, [r7, #20]
 14160 12dc 1344     		add	r3, r3, r2
 14161 12de 3A4A     		ldr	r2, .L622+36
 14162 12e0 1D46     		mov	r5, r3
 14163 12e2 1446     		mov	r4, r2
 14164 12e4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14165 12e6 2860     		str	r0, [r5]	@ unaligned
 14166 12e8 6960     		str	r1, [r5, #4]	@ unaligned
 14167 12ea AA60     		str	r2, [r5, #8]	@ unaligned
 14168 12ec EB60     		str	r3, [r5, #12]	@ unaligned
 14169 12ee 2068     		ldr	r0, [r4]	@ unaligned
 14170 12f0 2861     		str	r0, [r5, #16]	@ unaligned
2068:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 14171              		.loc 1 2068 0
 14172 12f2 D7F88C30 		ldr	r3, [r7, #140]
 14173 12f6 B3F8F031 		ldrh	r3, [r3, #496]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 322


 14174 12fa 1A46     		mov	r2, r3
 14175 12fc D7F88C30 		ldr	r3, [r7, #140]
 14176 1300 B3F8F231 		ldrh	r3, [r3, #498]
 14177 1304 07F11C00 		add	r0, r7, #28
 14178 1308 3049     		ldr	r1, .L622+40
 14179 130a FFF7FEFF 		bl	sprintf
2069:..\src/command_processing.c ****         strcat(info_string, str);
 14180              		.loc 1 2069 0
 14181 130e 07F11C03 		add	r3, r7, #28
 14182 1312 1946     		mov	r1, r3
 14183 1314 7869     		ldr	r0, [r7, #20]
 14184 1316 FFF7FEFF 		bl	strcat
2070:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14185              		.loc 1 2070 0
 14186 131a 7869     		ldr	r0, [r7, #20]
 14187 131c FFF7FEFF 		bl	strlen
 14188 1320 0346     		mov	r3, r0
 14189 1322 1A46     		mov	r2, r3
 14190 1324 7B69     		ldr	r3, [r7, #20]
 14191 1326 1344     		add	r3, r3, r2
 14192 1328 204A     		ldr	r2, .L622+8
 14193 132a 1188     		ldrh	r1, [r2]	@ unaligned
 14194 132c 9278     		ldrb	r2, [r2, #2]
 14195 132e 1980     		strh	r1, [r3]	@ unaligned
 14196 1330 9A70     		strb	r2, [r3, #2]
2071:..\src/command_processing.c **** 
2072:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 14197              		.loc 1 2072 0
 14198 1332 D7F88C30 		ldr	r3, [r7, #140]
 14199 1336 D3F8F421 		ldr	r2, [r3, #500]
 14200 133a D7F88C30 		ldr	r3, [r7, #140]
 14201 133e D3F8F831 		ldr	r3, [r3, #504]
 14202 1342 07F11C00 		add	r0, r7, #28
 14203 1346 2249     		ldr	r1, .L622+44
 14204 1348 FFF7FEFF 		bl	sprintf
2073:..\src/command_processing.c ****         strcat(info_string, str);
 14205              		.loc 1 2073 0
 14206 134c 07F11C03 		add	r3, r7, #28
 14207 1350 1946     		mov	r1, r3
 14208 1352 7869     		ldr	r0, [r7, #20]
 14209 1354 FFF7FEFF 		bl	strcat
2074:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14210              		.loc 1 2074 0
 14211 1358 7869     		ldr	r0, [r7, #20]
 14212 135a FFF7FEFF 		bl	strlen
 14213 135e 0346     		mov	r3, r0
 14214 1360 1A46     		mov	r2, r3
 14215 1362 7B69     		ldr	r3, [r7, #20]
 14216 1364 1344     		add	r3, r3, r2
 14217 1366 114A     		ldr	r2, .L622+8
 14218 1368 1188     		ldrh	r1, [r2]	@ unaligned
 14219 136a 9278     		ldrb	r2, [r2, #2]
 14220 136c 1980     		strh	r1, [r3]	@ unaligned
 14221 136e 9A70     		strb	r2, [r3, #2]
2075:..\src/command_processing.c **** 
2076:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 14222              		.loc 1 2076 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 323


 14223 1370 D7F88C30 		ldr	r3, [r7, #140]
 14224 1374 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 14225 1378 002B     		cmp	r3, #0
 14226 137a 2DD0     		beq	.L584
2077:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 14227              		.loc 1 2077 0
 14228 137c 7869     		ldr	r0, [r7, #20]
 14229 137e FFF7FEFF 		bl	strlen
 14230 1382 0346     		mov	r3, r0
 14231 1384 1A46     		mov	r2, r3
 14232 1386 7B69     		ldr	r3, [r7, #20]
 14233 1388 1344     		add	r3, r3, r2
 14234 138a 124A     		ldr	r2, .L622+48
 14235 138c 1D46     		mov	r5, r3
 14236 138e 1446     		mov	r4, r2
 14237 1390 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14238 1392 2860     		str	r0, [r5]	@ unaligned
 14239 1394 6960     		str	r1, [r5, #4]	@ unaligned
 14240 1396 AA60     		str	r2, [r5, #8]	@ unaligned
 14241 1398 EB60     		str	r3, [r5, #12]	@ unaligned
 14242 139a 2068     		ldr	r0, [r4]	@ unaligned
 14243 139c 2861     		str	r0, [r5, #16]	@ unaligned
 14244 139e 2379     		ldrb	r3, [r4, #4]
 14245 13a0 2B75     		strb	r3, [r5, #20]
 14246 13a2 2AE0     		b	.L585
 14247              	.L623:
 14248              		.align	2
 14249              	.L622:
 14250 13a4 A8120000 		.word	.LC186
 14251 13a8 8C0F0000 		.word	.LC155
 14252 13ac C00D0000 		.word	.LC126
 14253 13b0 AC120000 		.word	.LC187
 14254 13b4 DC120000 		.word	.LC188
 14255 13b8 F8120000 		.word	.LC189
 14256 13bc 1C130000 		.word	.LC190
 14257 13c0 2C130000 		.word	.LC191
 14258 13c4 48130000 		.word	.LC192
 14259 13c8 5C130000 		.word	.LC193
 14260 13cc 70130000 		.word	.LC194
 14261 13d0 94130000 		.word	.LC195
 14262 13d4 B8130000 		.word	.LC196
 14263              	.L584:
2078:..\src/command_processing.c ****         else
2079:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 14264              		.loc 1 2079 0
 14265 13d8 7869     		ldr	r0, [r7, #20]
 14266 13da FFF7FEFF 		bl	strlen
 14267 13de 0346     		mov	r3, r0
 14268 13e0 1A46     		mov	r2, r3
 14269 13e2 7B69     		ldr	r3, [r7, #20]
 14270 13e4 1344     		add	r3, r3, r2
 14271 13e6 B84A     		ldr	r2, .L624
 14272 13e8 1D46     		mov	r5, r3
 14273 13ea 1446     		mov	r4, r2
 14274 13ec 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14275 13ee 2860     		str	r0, [r5]	@ unaligned
 14276 13f0 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 324


 14277 13f2 AA60     		str	r2, [r5, #8]	@ unaligned
 14278 13f4 EB60     		str	r3, [r5, #12]	@ unaligned
 14279 13f6 2068     		ldr	r0, [r4]	@ unaligned
 14280 13f8 2861     		str	r0, [r5, #16]	@ unaligned
 14281              	.L585:
2080:..\src/command_processing.c ****             
2081:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 14282              		.loc 1 2081 0
 14283 13fa D7F88C30 		ldr	r3, [r7, #140]
 14284 13fe 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 14285 1402 002B     		cmp	r3, #0
 14286 1404 17D0     		beq	.L586
2082:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 14287              		.loc 1 2082 0
 14288 1406 7869     		ldr	r0, [r7, #20]
 14289 1408 FFF7FEFF 		bl	strlen
 14290 140c 0346     		mov	r3, r0
 14291 140e 1A46     		mov	r2, r3
 14292 1410 7B69     		ldr	r3, [r7, #20]
 14293 1412 1344     		add	r3, r3, r2
 14294 1414 AD4A     		ldr	r2, .L624+4
 14295 1416 1D46     		mov	r5, r3
 14296 1418 1446     		mov	r4, r2
 14297 141a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14298 141c 2860     		str	r0, [r5]	@ unaligned
 14299 141e 6960     		str	r1, [r5, #4]	@ unaligned
 14300 1420 AA60     		str	r2, [r5, #8]	@ unaligned
 14301 1422 EB60     		str	r3, [r5, #12]	@ unaligned
 14302 1424 03CC     		ldmia	r4!, {r0, r1}
 14303 1426 2861     		str	r0, [r5, #16]	@ unaligned
 14304 1428 6961     		str	r1, [r5, #20]	@ unaligned
 14305 142a 2388     		ldrh	r3, [r4]	@ unaligned
 14306 142c A278     		ldrb	r2, [r4, #2]
 14307 142e 2B83     		strh	r3, [r5, #24]	@ unaligned
 14308 1430 1346     		mov	r3, r2
 14309 1432 AB76     		strb	r3, [r5, #26]
 14310 1434 13E0     		b	.L587
 14311              	.L586:
2083:..\src/command_processing.c ****         else
2084:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 14312              		.loc 1 2084 0
 14313 1436 7869     		ldr	r0, [r7, #20]
 14314 1438 FFF7FEFF 		bl	strlen
 14315 143c 0346     		mov	r3, r0
 14316 143e 1A46     		mov	r2, r3
 14317 1440 7B69     		ldr	r3, [r7, #20]
 14318 1442 1344     		add	r3, r3, r2
 14319 1444 A24A     		ldr	r2, .L624+8
 14320 1446 1D46     		mov	r5, r3
 14321 1448 1446     		mov	r4, r2
 14322 144a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14323 144c 2860     		str	r0, [r5]	@ unaligned
 14324 144e 6960     		str	r1, [r5, #4]	@ unaligned
 14325 1450 AA60     		str	r2, [r5, #8]	@ unaligned
 14326 1452 EB60     		str	r3, [r5, #12]	@ unaligned
 14327 1454 03CC     		ldmia	r4!, {r0, r1}
 14328 1456 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 325


 14329 1458 6961     		str	r1, [r5, #20]	@ unaligned
 14330 145a 2388     		ldrh	r3, [r4]	@ unaligned
 14331 145c 2B83     		strh	r3, [r5, #24]	@ unaligned
 14332              	.L587:
2085:..\src/command_processing.c **** 
2086:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 14333              		.loc 1 2086 0
 14334 145e D7F88C30 		ldr	r3, [r7, #140]
 14335 1462 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 14336 1466 1A46     		mov	r2, r3
 14337 1468 07F11C03 		add	r3, r7, #28
 14338 146c 9949     		ldr	r1, .L624+12
 14339 146e 1846     		mov	r0, r3
 14340 1470 FFF7FEFF 		bl	sprintf
2087:..\src/command_processing.c ****         strcat(info_string, str);
 14341              		.loc 1 2087 0
 14342 1474 07F11C03 		add	r3, r7, #28
 14343 1478 1946     		mov	r1, r3
 14344 147a 7869     		ldr	r0, [r7, #20]
 14345 147c FFF7FEFF 		bl	strcat
2088:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14346              		.loc 1 2088 0
 14347 1480 7869     		ldr	r0, [r7, #20]
 14348 1482 FFF7FEFF 		bl	strlen
 14349 1486 0346     		mov	r3, r0
 14350 1488 1A46     		mov	r2, r3
 14351 148a 7B69     		ldr	r3, [r7, #20]
 14352 148c 1344     		add	r3, r3, r2
 14353 148e 924A     		ldr	r2, .L624+16
 14354 1490 1188     		ldrh	r1, [r2]	@ unaligned
 14355 1492 9278     		ldrb	r2, [r2, #2]
 14356 1494 1980     		strh	r1, [r3]	@ unaligned
 14357 1496 9A70     		strb	r2, [r3, #2]
2089:..\src/command_processing.c **** 
2090:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 14358              		.loc 1 2090 0
 14359 1498 D7F88C30 		ldr	r3, [r7, #140]
 14360 149c 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 14361 14a0 012B     		cmp	r3, #1
 14362 14a2 6ED1     		bne	.L588
2091:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 14363              		.loc 1 2091 0
 14364 14a4 7869     		ldr	r0, [r7, #20]
 14365 14a6 FFF7FEFF 		bl	strlen
 14366 14aa 0346     		mov	r3, r0
 14367 14ac 1A46     		mov	r2, r3
 14368 14ae 7B69     		ldr	r3, [r7, #20]
 14369 14b0 1344     		add	r3, r3, r2
 14370 14b2 8A4A     		ldr	r2, .L624+20
 14371 14b4 1C46     		mov	r4, r3
 14372 14b6 1546     		mov	r5, r2
 14373 14b8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14374 14ba 2060     		str	r0, [r4]	@ unaligned
 14375 14bc 6160     		str	r1, [r4, #4]	@ unaligned
 14376 14be A260     		str	r2, [r4, #8]	@ unaligned
 14377 14c0 E360     		str	r3, [r4, #12]	@ unaligned
 14378 14c2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 326


 14379 14c4 2061     		str	r0, [r4, #16]	@ unaligned
 14380 14c6 6161     		str	r1, [r4, #20]	@ unaligned
 14381 14c8 A261     		str	r2, [r4, #24]	@ unaligned
 14382 14ca E361     		str	r3, [r4, #28]	@ unaligned
2092:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 14383              		.loc 1 2092 0
 14384 14cc 0023     		movs	r3, #0
 14385 14ce C7F89430 		str	r3, [r7, #148]
 14386 14d2 25E0     		b	.L589
 14387              	.L590:
2093:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14388              		.loc 1 2093 0 discriminator 3
 14389 14d4 D7F89430 		ldr	r3, [r7, #148]
 14390 14d8 591C     		adds	r1, r3, #1
 14391 14da 814A     		ldr	r2, .L624+24
 14392 14dc D7F89430 		ldr	r3, [r7, #148]
 14393 14e0 0233     		adds	r3, r3, #2
 14394 14e2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14395 14e6 07F11C00 		add	r0, r7, #28
 14396 14ea 0A46     		mov	r2, r1
 14397 14ec 7D49     		ldr	r1, .L624+28
 14398 14ee FFF7FEFF 		bl	sprintf
2094:..\src/command_processing.c ****                 strcat(info_string, str);
 14399              		.loc 1 2094 0 discriminator 3
 14400 14f2 07F11C03 		add	r3, r7, #28
 14401 14f6 1946     		mov	r1, r3
 14402 14f8 7869     		ldr	r0, [r7, #20]
 14403 14fa FFF7FEFF 		bl	strcat
2095:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14404              		.loc 1 2095 0 discriminator 3
 14405 14fe 7869     		ldr	r0, [r7, #20]
 14406 1500 FFF7FEFF 		bl	strlen
 14407 1504 0346     		mov	r3, r0
 14408 1506 1A46     		mov	r2, r3
 14409 1508 7B69     		ldr	r3, [r7, #20]
 14410 150a 1344     		add	r3, r3, r2
 14411 150c 724A     		ldr	r2, .L624+16
 14412 150e 1188     		ldrh	r1, [r2]	@ unaligned
 14413 1510 9278     		ldrb	r2, [r2, #2]
 14414 1512 1980     		strh	r1, [r3]	@ unaligned
 14415 1514 9A70     		strb	r2, [r3, #2]
2092:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14416              		.loc 1 2092 0 discriminator 3
 14417 1516 D7F89430 		ldr	r3, [r7, #148]
 14418 151a 0133     		adds	r3, r3, #1
 14419 151c C7F89430 		str	r3, [r7, #148]
 14420              	.L589:
2092:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_emg_meas.add_emg[i]);
 14421              		.loc 1 2092 0 is_stmt 0 discriminator 1
 14422 1520 D7F89430 		ldr	r3, [r7, #148]
 14423 1524 052B     		cmp	r3, #5
 14424 1526 D5DD     		ble	.L590
2096:..\src/command_processing.c ****             }
2097:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 14425              		.loc 1 2097 0 is_stmt 1
 14426 1528 0023     		movs	r3, #0
 14427 152a C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 327


 14428 152e 24E0     		b	.L591
 14429              	.L592:
2098:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14430              		.loc 1 2098 0 discriminator 3
 14431 1530 D7F89430 		ldr	r3, [r7, #148]
 14432 1534 591C     		adds	r1, r3, #1
 14433 1536 6A4A     		ldr	r2, .L624+24
 14434 1538 D7F89430 		ldr	r3, [r7, #148]
 14435 153c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14436 1540 07F11C00 		add	r0, r7, #28
 14437 1544 0A46     		mov	r2, r1
 14438 1546 6849     		ldr	r1, .L624+32
 14439 1548 FFF7FEFF 		bl	sprintf
2099:..\src/command_processing.c ****                 strcat(info_string, str);
 14440              		.loc 1 2099 0 discriminator 3
 14441 154c 07F11C03 		add	r3, r7, #28
 14442 1550 1946     		mov	r1, r3
 14443 1552 7869     		ldr	r0, [r7, #20]
 14444 1554 FFF7FEFF 		bl	strcat
2100:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14445              		.loc 1 2100 0 discriminator 3
 14446 1558 7869     		ldr	r0, [r7, #20]
 14447 155a FFF7FEFF 		bl	strlen
 14448 155e 0346     		mov	r3, r0
 14449 1560 1A46     		mov	r2, r3
 14450 1562 7B69     		ldr	r3, [r7, #20]
 14451 1564 1344     		add	r3, r3, r2
 14452 1566 5C4A     		ldr	r2, .L624+16
 14453 1568 1188     		ldrh	r1, [r2]	@ unaligned
 14454 156a 9278     		ldrb	r2, [r2, #2]
 14455 156c 1980     		strh	r1, [r3]	@ unaligned
 14456 156e 9A70     		strb	r2, [r3, #2]
2097:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14457              		.loc 1 2097 0 discriminator 3
 14458 1570 D7F89430 		ldr	r3, [r7, #148]
 14459 1574 0133     		adds	r3, r3, #1
 14460 1576 C7F89430 		str	r3, [r7, #148]
 14461              	.L591:
2097:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_emg_meas.emg[i]);
 14462              		.loc 1 2097 0 is_stmt 0 discriminator 1
 14463 157a D7F89430 		ldr	r3, [r7, #148]
 14464 157e 012B     		cmp	r3, #1
 14465 1580 D6DD     		ble	.L592
 14466              	.L588:
2101:..\src/command_processing.c ****             }
2102:..\src/command_processing.c ****         }
2103:..\src/command_processing.c ****         
2104:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 14467              		.loc 1 2104 0 is_stmt 1
 14468 1582 D7F88C30 		ldr	r3, [r7, #140]
 14469 1586 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 14470 158a 002B     		cmp	r3, #0
 14471 158c 63D0     		beq	.L593
2105:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 14472              		.loc 1 2105 0
 14473 158e D7F88C30 		ldr	r3, [r7, #140]
 14474 1592 D3F8A422 		ldr	r2, [r3, #676]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 328


 14475 1596 07F11C03 		add	r3, r7, #28
 14476 159a 5449     		ldr	r1, .L624+36
 14477 159c 1846     		mov	r0, r3
 14478 159e FFF7FEFF 		bl	sprintf
2106:..\src/command_processing.c ****             strcat(info_string, str);
 14479              		.loc 1 2106 0
 14480 15a2 07F11C03 		add	r3, r7, #28
 14481 15a6 1946     		mov	r1, r3
 14482 15a8 7869     		ldr	r0, [r7, #20]
 14483 15aa FFF7FEFF 		bl	strcat
2107:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14484              		.loc 1 2107 0
 14485 15ae 7869     		ldr	r0, [r7, #20]
 14486 15b0 FFF7FEFF 		bl	strlen
 14487 15b4 0346     		mov	r3, r0
 14488 15b6 1A46     		mov	r2, r3
 14489 15b8 7B69     		ldr	r3, [r7, #20]
 14490 15ba 1344     		add	r3, r3, r2
 14491 15bc 464A     		ldr	r2, .L624+16
 14492 15be 1188     		ldrh	r1, [r2]	@ unaligned
 14493 15c0 9278     		ldrb	r2, [r2, #2]
 14494 15c2 1980     		strh	r1, [r3]	@ unaligned
 14495 15c4 9A70     		strb	r2, [r3, #2]
2108:..\src/command_processing.c ****             
2109:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 14496              		.loc 1 2109 0
 14497 15c6 D7F88C30 		ldr	r3, [r7, #140]
 14498 15ca D3F8A822 		ldr	r2, [r3, #680]
 14499 15ce 07F11C03 		add	r3, r7, #28
 14500 15d2 4749     		ldr	r1, .L624+40
 14501 15d4 1846     		mov	r0, r3
 14502 15d6 FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****             strcat(info_string, str);
 14503              		.loc 1 2110 0
 14504 15da 07F11C03 		add	r3, r7, #28
 14505 15de 1946     		mov	r1, r3
 14506 15e0 7869     		ldr	r0, [r7, #20]
 14507 15e2 FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14508              		.loc 1 2111 0
 14509 15e6 7869     		ldr	r0, [r7, #20]
 14510 15e8 FFF7FEFF 		bl	strlen
 14511 15ec 0346     		mov	r3, r0
 14512 15ee 1A46     		mov	r2, r3
 14513 15f0 7B69     		ldr	r3, [r7, #20]
 14514 15f2 1344     		add	r3, r3, r2
 14515 15f4 384A     		ldr	r2, .L624+16
 14516 15f6 1188     		ldrh	r1, [r2]	@ unaligned
 14517 15f8 9278     		ldrb	r2, [r2, #2]
 14518 15fa 1980     		strh	r1, [r3]	@ unaligned
 14519 15fc 9A70     		strb	r2, [r3, #2]
2112:..\src/command_processing.c ****             
2113:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 14520              		.loc 1 2113 0
 14521 15fe D7F88C30 		ldr	r3, [r7, #140]
 14522 1602 D3F8A022 		ldr	r2, [r3, #672]
 14523 1606 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 329


 14524 160a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 14525 160e 1846     		mov	r0, r3
 14526 1610 D7F88C10 		ldr	r1, [r7, #140]
 14527 1614 0346     		mov	r3, r0
 14528 1616 5B00     		lsls	r3, r3, #1
 14529 1618 0344     		add	r3, r3, r0
 14530 161a 1B01     		lsls	r3, r3, #4
 14531 161c 0B44     		add	r3, r3, r1
 14532 161e 03F29513 		addw	r3, r3, #405
 14533 1622 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14534 1624 1A41     		asrs	r2, r2, r3
 14535 1626 07F11C03 		add	r3, r7, #28
 14536 162a 3249     		ldr	r1, .L624+44
 14537 162c 1846     		mov	r0, r3
 14538 162e FFF7FEFF 		bl	sprintf
2114:..\src/command_processing.c ****             strcat(info_string, str);
 14539              		.loc 1 2114 0
 14540 1632 07F11C03 		add	r3, r7, #28
 14541 1636 1946     		mov	r1, r3
 14542 1638 7869     		ldr	r0, [r7, #20]
 14543 163a FFF7FEFF 		bl	strcat
2115:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 14544              		.loc 1 2115 0
 14545 163e 7869     		ldr	r0, [r7, #20]
 14546 1640 FFF7FEFF 		bl	strlen
 14547 1644 0346     		mov	r3, r0
 14548 1646 1A46     		mov	r2, r3
 14549 1648 7B69     		ldr	r3, [r7, #20]
 14550 164a 1344     		add	r3, r3, r2
 14551 164c 224A     		ldr	r2, .L624+16
 14552 164e 1188     		ldrh	r1, [r2]	@ unaligned
 14553 1650 9278     		ldrb	r2, [r2, #2]
 14554 1652 1980     		strh	r1, [r3]	@ unaligned
 14555 1654 9A70     		strb	r2, [r3, #2]
 14556              	.L593:
2116:..\src/command_processing.c ****         }
2117:..\src/command_processing.c **** 
2118:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 14557              		.loc 1 2118 0
 14558 1656 D7F88C30 		ldr	r3, [r7, #140]
 14559 165a 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 14560 165e 002B     		cmp	r3, #0
 14561 1660 00F0CC81 		beq	.L594
2119:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 14562              		.loc 1 2119 0
 14563 1664 244B     		ldr	r3, .L624+48
 14564 1666 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14565 1668 1A46     		mov	r2, r3
 14566 166a 07F11C03 		add	r3, r7, #28
 14567 166e 2349     		ldr	r1, .L624+52
 14568 1670 1846     		mov	r0, r3
 14569 1672 FFF7FEFF 		bl	sprintf
2120:..\src/command_processing.c ****             strcat(info_string, str);
 14570              		.loc 1 2120 0
 14571 1676 07F11C03 		add	r3, r7, #28
 14572 167a 1946     		mov	r1, r3
 14573 167c 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 330


 14574 167e FFF7FEFF 		bl	strcat
2121:..\src/command_processing.c ****             
2122:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14575              		.loc 1 2122 0
 14576 1682 7869     		ldr	r0, [r7, #20]
 14577 1684 FFF7FEFF 		bl	strlen
 14578 1688 0346     		mov	r3, r0
 14579 168a 1A46     		mov	r2, r3
 14580 168c 7B69     		ldr	r3, [r7, #20]
 14581 168e 1344     		add	r3, r3, r2
 14582 1690 114A     		ldr	r2, .L624+16
 14583 1692 1188     		ldrh	r1, [r2]	@ unaligned
 14584 1694 9278     		ldrb	r2, [r2, #2]
 14585 1696 1980     		strh	r1, [r3]	@ unaligned
 14586 1698 9A70     		strb	r2, [r3, #2]
2123:..\src/command_processing.c ****             
2124:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 14587              		.loc 1 2124 0
 14588 169a 7869     		ldr	r0, [r7, #20]
 14589 169c FFF7FEFF 		bl	strlen
 14590 16a0 0346     		mov	r3, r0
 14591 16a2 1A46     		mov	r2, r3
 14592 16a4 7B69     		ldr	r3, [r7, #20]
 14593 16a6 1344     		add	r3, r3, r2
 14594 16a8 154A     		ldr	r2, .L624+56
 14595 16aa 1D46     		mov	r5, r3
 14596 16ac 1446     		mov	r4, r2
 14597 16ae 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14598 16b0 2860     		str	r0, [r5]	@ unaligned
 14599 16b2 6960     		str	r1, [r5, #4]	@ unaligned
 14600 16b4 AA60     		str	r2, [r5, #8]	@ unaligned
 14601 16b6 EB60     		str	r3, [r5, #12]	@ unaligned
 14602 16b8 2068     		ldr	r0, [r4]	@ unaligned
 14603 16ba 2861     		str	r0, [r5, #16]	@ unaligned
 14604 16bc 2379     		ldrb	r3, [r4, #4]
 14605 16be 2B75     		strb	r3, [r5, #20]
2125:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 14606              		.loc 1 2125 0
 14607 16c0 0023     		movs	r3, #0
 14608 16c2 C7F89430 		str	r3, [r7, #148]
 14609 16c6 82E1     		b	.L595
 14610              	.L625:
 14611              		.align	2
 14612              	.L624:
 14613 16c8 D0130000 		.word	.LC197
 14614 16cc E4130000 		.word	.LC198
 14615 16d0 00140000 		.word	.LC199
 14616 16d4 1C140000 		.word	.LC200
 14617 16d8 C00D0000 		.word	.LC126
 14618 16dc 30140000 		.word	.LC201
 14619 16e0 00000000 		.word	g_emg_meas
 14620 16e4 50140000 		.word	.LC202
 14621 16e8 60140000 		.word	.LC203
 14622 16ec 74140000 		.word	.LC204
 14623 16f0 90140000 		.word	.LC205
 14624 16f4 B8140000 		.word	.LC206
 14625 16f8 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 331


 14626 16fc CC140000 		.word	.LC207
 14627 1700 E0140000 		.word	.LC208
 14628              	.L606:
2126:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 14629              		.loc 1 2126 0
 14630 1704 D54A     		ldr	r2, .L626
 14631 1706 D7F89430 		ldr	r3, [r7, #148]
 14632 170a 1344     		add	r3, r3, r2
 14633 170c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14634 170e 07F11C00 		add	r0, r7, #28
 14635 1712 D7F89420 		ldr	r2, [r7, #148]
 14636 1716 D249     		ldr	r1, .L626+4
 14637 1718 FFF7FEFF 		bl	sprintf
2127:..\src/command_processing.c ****                 strcat(info_string, str);
 14638              		.loc 1 2127 0
 14639 171c 07F11C03 		add	r3, r7, #28
 14640 1720 1946     		mov	r1, r3
 14641 1722 7869     		ldr	r0, [r7, #20]
 14642 1724 FFF7FEFF 		bl	strcat
2128:..\src/command_processing.c ****                 
2129:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 14643              		.loc 1 2129 0
 14644 1728 07F11C03 		add	r3, r7, #28
 14645 172c CD4A     		ldr	r2, .L626+8
 14646 172e 1C46     		mov	r4, r3
 14647 1730 1546     		mov	r5, r2
 14648 1732 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14649 1734 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 14650 1736 2B68     		ldr	r3, [r5]
 14651 1738 2380     		strh	r3, [r4]	@ movhi
2130:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 14652              		.loc 1 2130 0
 14653 173a C84A     		ldr	r2, .L626
 14654 173c D7F89430 		ldr	r3, [r7, #148]
 14655 1740 1344     		add	r3, r3, r2
 14656 1742 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14657 1744 1946     		mov	r1, r3
 14658 1746 D7F88C20 		ldr	r2, [r7, #140]
 14659 174a 0B46     		mov	r3, r1
 14660 174c 9B00     		lsls	r3, r3, #2
 14661 174e 0B44     		add	r3, r3, r1
 14662 1750 1344     		add	r3, r3, r2
 14663 1752 03F20223 		addw	r3, r3, #514
 14664 1756 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14665 1758 002B     		cmp	r3, #0
 14666 175a 0FD0     		beq	.L596
2131:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14667              		.loc 1 2131 0
 14668 175c 07F11C03 		add	r3, r7, #28
 14669 1760 1846     		mov	r0, r3
 14670 1762 FFF7FEFF 		bl	strlen
 14671 1766 0346     		mov	r3, r0
 14672 1768 1A46     		mov	r2, r3
 14673 176a 07F11C03 		add	r3, r7, #28
 14674 176e 1344     		add	r3, r3, r2
 14675 1770 BD4A     		ldr	r2, .L626+12
 14676 1772 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 332


 14677 1774 1860     		str	r0, [r3]	@ unaligned
 14678 1776 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14679 1778 9A80     		strh	r2, [r3, #4]	@ unaligned
 14680 177a 0EE0     		b	.L597
 14681              	.L596:
2132:..\src/command_processing.c ****                 else
2133:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14682              		.loc 1 2133 0
 14683 177c 07F11C03 		add	r3, r7, #28
 14684 1780 1846     		mov	r0, r3
 14685 1782 FFF7FEFF 		bl	strlen
 14686 1786 0346     		mov	r3, r0
 14687 1788 1A46     		mov	r2, r3
 14688 178a 07F11C03 		add	r3, r7, #28
 14689 178e 1344     		add	r3, r3, r2
 14690 1790 B64A     		ldr	r2, .L626+16
 14691 1792 1068     		ldr	r0, [r2]	@ unaligned
 14692 1794 1860     		str	r0, [r3]	@ unaligned
 14693 1796 1279     		ldrb	r2, [r2, #4]
 14694 1798 1A71     		strb	r2, [r3, #4]
 14695              	.L597:
2134:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 14696              		.loc 1 2134 0
 14697 179a 07F11C03 		add	r3, r7, #28
 14698 179e 1846     		mov	r0, r3
 14699 17a0 FFF7FEFF 		bl	strlen
 14700 17a4 0346     		mov	r3, r0
 14701 17a6 1A46     		mov	r2, r3
 14702 17a8 07F11C03 		add	r3, r7, #28
 14703 17ac 1344     		add	r3, r3, r2
 14704 17ae B04A     		ldr	r2, .L626+20
 14705 17b0 1C46     		mov	r4, r3
 14706 17b2 1346     		mov	r3, r2
 14707 17b4 07CB     		ldmia	r3!, {r0, r1, r2}
 14708 17b6 2060     		str	r0, [r4]	@ unaligned
 14709 17b8 6160     		str	r1, [r4, #4]	@ unaligned
 14710 17ba A260     		str	r2, [r4, #8]	@ unaligned
 14711 17bc 1B88     		ldrh	r3, [r3]	@ unaligned
 14712 17be A381     		strh	r3, [r4, #12]	@ unaligned
2135:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 14713              		.loc 1 2135 0
 14714 17c0 A64A     		ldr	r2, .L626
 14715 17c2 D7F89430 		ldr	r3, [r7, #148]
 14716 17c6 1344     		add	r3, r3, r2
 14717 17c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14718 17ca 1946     		mov	r1, r3
 14719 17cc D7F88C20 		ldr	r2, [r7, #140]
 14720 17d0 0B46     		mov	r3, r1
 14721 17d2 9B00     		lsls	r3, r3, #2
 14722 17d4 0B44     		add	r3, r3, r1
 14723 17d6 1344     		add	r3, r3, r2
 14724 17d8 03F20323 		addw	r3, r3, #515
 14725 17dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14726 17de 002B     		cmp	r3, #0
 14727 17e0 0FD0     		beq	.L598
2136:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14728              		.loc 1 2136 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 333


 14729 17e2 07F11C03 		add	r3, r7, #28
 14730 17e6 1846     		mov	r0, r3
 14731 17e8 FFF7FEFF 		bl	strlen
 14732 17ec 0346     		mov	r3, r0
 14733 17ee 1A46     		mov	r2, r3
 14734 17f0 07F11C03 		add	r3, r7, #28
 14735 17f4 1344     		add	r3, r3, r2
 14736 17f6 9C4A     		ldr	r2, .L626+12
 14737 17f8 1068     		ldr	r0, [r2]	@ unaligned
 14738 17fa 1860     		str	r0, [r3]	@ unaligned
 14739 17fc 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14740 17fe 9A80     		strh	r2, [r3, #4]	@ unaligned
 14741 1800 0EE0     		b	.L599
 14742              	.L598:
2137:..\src/command_processing.c ****                 else
2138:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 14743              		.loc 1 2138 0
 14744 1802 07F11C03 		add	r3, r7, #28
 14745 1806 1846     		mov	r0, r3
 14746 1808 FFF7FEFF 		bl	strlen
 14747 180c 0346     		mov	r3, r0
 14748 180e 1A46     		mov	r2, r3
 14749 1810 07F11C03 		add	r3, r7, #28
 14750 1814 1344     		add	r3, r3, r2
 14751 1816 954A     		ldr	r2, .L626+16
 14752 1818 1068     		ldr	r0, [r2]	@ unaligned
 14753 181a 1860     		str	r0, [r3]	@ unaligned
 14754 181c 1279     		ldrb	r2, [r2, #4]
 14755 181e 1A71     		strb	r2, [r3, #4]
 14756              	.L599:
2139:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 14757              		.loc 1 2139 0
 14758 1820 07F11C03 		add	r3, r7, #28
 14759 1824 1846     		mov	r0, r3
 14760 1826 FFF7FEFF 		bl	strlen
 14761 182a 0346     		mov	r3, r0
 14762 182c 1A46     		mov	r2, r3
 14763 182e 07F11C03 		add	r3, r7, #28
 14764 1832 1344     		add	r3, r3, r2
 14765 1834 8F4A     		ldr	r2, .L626+24
 14766 1836 1D46     		mov	r5, r3
 14767 1838 1446     		mov	r4, r2
 14768 183a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14769 183c 2860     		str	r0, [r5]	@ unaligned
 14770 183e 6960     		str	r1, [r5, #4]	@ unaligned
 14771 1840 AA60     		str	r2, [r5, #8]	@ unaligned
 14772 1842 EB60     		str	r3, [r5, #12]	@ unaligned
 14773 1844 2378     		ldrb	r3, [r4]
 14774 1846 2B74     		strb	r3, [r5, #16]
2140:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 14775              		.loc 1 2140 0
 14776 1848 844A     		ldr	r2, .L626
 14777 184a D7F89430 		ldr	r3, [r7, #148]
 14778 184e 1344     		add	r3, r3, r2
 14779 1850 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14780 1852 1946     		mov	r1, r3
 14781 1854 D7F88C20 		ldr	r2, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 334


 14782 1858 0B46     		mov	r3, r1
 14783 185a 9B00     		lsls	r3, r3, #2
 14784 185c 0B44     		add	r3, r3, r1
 14785 185e 1344     		add	r3, r3, r2
 14786 1860 03F50173 		add	r3, r3, #516
 14787 1864 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14788 1866 002B     		cmp	r3, #0
 14789 1868 0FD0     		beq	.L600
2141:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14790              		.loc 1 2141 0
 14791 186a 07F11C03 		add	r3, r7, #28
 14792 186e 1846     		mov	r0, r3
 14793 1870 FFF7FEFF 		bl	strlen
 14794 1874 0346     		mov	r3, r0
 14795 1876 1A46     		mov	r2, r3
 14796 1878 07F11C03 		add	r3, r7, #28
 14797 187c 1344     		add	r3, r3, r2
 14798 187e 7A4A     		ldr	r2, .L626+12
 14799 1880 1068     		ldr	r0, [r2]	@ unaligned
 14800 1882 1860     		str	r0, [r3]	@ unaligned
 14801 1884 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14802 1886 9A80     		strh	r2, [r3, #4]	@ unaligned
 14803 1888 0EE0     		b	.L601
 14804              	.L600:
2142:..\src/command_processing.c ****                 else
2143:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14805              		.loc 1 2143 0
 14806 188a 07F11C03 		add	r3, r7, #28
 14807 188e 1846     		mov	r0, r3
 14808 1890 FFF7FEFF 		bl	strlen
 14809 1894 0346     		mov	r3, r0
 14810 1896 1A46     		mov	r2, r3
 14811 1898 07F11C03 		add	r3, r7, #28
 14812 189c 1344     		add	r3, r3, r2
 14813 189e 734A     		ldr	r2, .L626+16
 14814 18a0 1068     		ldr	r0, [r2]	@ unaligned
 14815 18a2 1860     		str	r0, [r3]	@ unaligned
 14816 18a4 1279     		ldrb	r2, [r2, #4]
 14817 18a6 1A71     		strb	r2, [r3, #4]
 14818              	.L601:
2144:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 14819              		.loc 1 2144 0
 14820 18a8 07F11C03 		add	r3, r7, #28
 14821 18ac 1846     		mov	r0, r3
 14822 18ae FFF7FEFF 		bl	strlen
 14823 18b2 0346     		mov	r3, r0
 14824 18b4 1A46     		mov	r2, r3
 14825 18b6 07F11C03 		add	r3, r7, #28
 14826 18ba 1344     		add	r3, r3, r2
 14827 18bc 6E4A     		ldr	r2, .L626+28
 14828 18be 1C46     		mov	r4, r3
 14829 18c0 1346     		mov	r3, r2
 14830 18c2 07CB     		ldmia	r3!, {r0, r1, r2}
 14831 18c4 2060     		str	r0, [r4]	@ unaligned
 14832 18c6 6160     		str	r1, [r4, #4]	@ unaligned
 14833 18c8 A260     		str	r2, [r4, #8]	@ unaligned
 14834 18ca 1B88     		ldrh	r3, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 335


 14835 18cc A381     		strh	r3, [r4, #12]	@ unaligned
2145:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 14836              		.loc 1 2145 0
 14837 18ce 634A     		ldr	r2, .L626
 14838 18d0 D7F89430 		ldr	r3, [r7, #148]
 14839 18d4 1344     		add	r3, r3, r2
 14840 18d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14841 18d8 1946     		mov	r1, r3
 14842 18da D7F88C20 		ldr	r2, [r7, #140]
 14843 18de 0B46     		mov	r3, r1
 14844 18e0 9B00     		lsls	r3, r3, #2
 14845 18e2 0B44     		add	r3, r3, r1
 14846 18e4 1344     		add	r3, r3, r2
 14847 18e6 03F20523 		addw	r3, r3, #517
 14848 18ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14849 18ec 002B     		cmp	r3, #0
 14850 18ee 0FD0     		beq	.L602
2146:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14851              		.loc 1 2146 0
 14852 18f0 07F11C03 		add	r3, r7, #28
 14853 18f4 1846     		mov	r0, r3
 14854 18f6 FFF7FEFF 		bl	strlen
 14855 18fa 0346     		mov	r3, r0
 14856 18fc 1A46     		mov	r2, r3
 14857 18fe 07F11C03 		add	r3, r7, #28
 14858 1902 1344     		add	r3, r3, r2
 14859 1904 584A     		ldr	r2, .L626+12
 14860 1906 1068     		ldr	r0, [r2]	@ unaligned
 14861 1908 1860     		str	r0, [r3]	@ unaligned
 14862 190a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14863 190c 9A80     		strh	r2, [r3, #4]	@ unaligned
 14864 190e 0EE0     		b	.L603
 14865              	.L602:
2147:..\src/command_processing.c ****                 else
2148:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14866              		.loc 1 2148 0
 14867 1910 07F11C03 		add	r3, r7, #28
 14868 1914 1846     		mov	r0, r3
 14869 1916 FFF7FEFF 		bl	strlen
 14870 191a 0346     		mov	r3, r0
 14871 191c 1A46     		mov	r2, r3
 14872 191e 07F11C03 		add	r3, r7, #28
 14873 1922 1344     		add	r3, r3, r2
 14874 1924 514A     		ldr	r2, .L626+16
 14875 1926 1068     		ldr	r0, [r2]	@ unaligned
 14876 1928 1860     		str	r0, [r3]	@ unaligned
 14877 192a 1279     		ldrb	r2, [r2, #4]
 14878 192c 1A71     		strb	r2, [r3, #4]
 14879              	.L603:
2149:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 14880              		.loc 1 2149 0
 14881 192e 07F11C03 		add	r3, r7, #28
 14882 1932 1846     		mov	r0, r3
 14883 1934 FFF7FEFF 		bl	strlen
 14884 1938 0346     		mov	r3, r0
 14885 193a 1A46     		mov	r2, r3
 14886 193c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 336


 14887 1940 1344     		add	r3, r3, r2
 14888 1942 4E4A     		ldr	r2, .L626+32
 14889 1944 1C46     		mov	r4, r3
 14890 1946 1346     		mov	r3, r2
 14891 1948 07CB     		ldmia	r3!, {r0, r1, r2}
 14892 194a 2060     		str	r0, [r4]	@ unaligned
 14893 194c 6160     		str	r1, [r4, #4]	@ unaligned
 14894 194e A260     		str	r2, [r4, #8]	@ unaligned
 14895 1950 1A88     		ldrh	r2, [r3]	@ unaligned
 14896 1952 9B78     		ldrb	r3, [r3, #2]
 14897 1954 A281     		strh	r2, [r4, #12]	@ unaligned
 14898 1956 A373     		strb	r3, [r4, #14]
2150:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 14899              		.loc 1 2150 0
 14900 1958 404A     		ldr	r2, .L626
 14901 195a D7F89430 		ldr	r3, [r7, #148]
 14902 195e 1344     		add	r3, r3, r2
 14903 1960 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14904 1962 1946     		mov	r1, r3
 14905 1964 D7F88C20 		ldr	r2, [r7, #140]
 14906 1968 0B46     		mov	r3, r1
 14907 196a 9B00     		lsls	r3, r3, #2
 14908 196c 0B44     		add	r3, r3, r1
 14909 196e 1344     		add	r3, r3, r2
 14910 1970 03F20623 		addw	r3, r3, #518
 14911 1974 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14912 1976 002B     		cmp	r3, #0
 14913 1978 0FD0     		beq	.L604
2151:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 14914              		.loc 1 2151 0
 14915 197a 07F11C03 		add	r3, r7, #28
 14916 197e 1846     		mov	r0, r3
 14917 1980 FFF7FEFF 		bl	strlen
 14918 1984 0346     		mov	r3, r0
 14919 1986 1A46     		mov	r2, r3
 14920 1988 07F11C03 		add	r3, r7, #28
 14921 198c 1344     		add	r3, r3, r2
 14922 198e 364A     		ldr	r2, .L626+12
 14923 1990 1068     		ldr	r0, [r2]	@ unaligned
 14924 1992 1860     		str	r0, [r3]	@ unaligned
 14925 1994 9288     		ldrh	r2, [r2, #4]	@ unaligned
 14926 1996 9A80     		strh	r2, [r3, #4]	@ unaligned
 14927 1998 0EE0     		b	.L605
 14928              	.L604:
2152:..\src/command_processing.c ****                 else
2153:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 14929              		.loc 1 2153 0
 14930 199a 07F11C03 		add	r3, r7, #28
 14931 199e 1846     		mov	r0, r3
 14932 19a0 FFF7FEFF 		bl	strlen
 14933 19a4 0346     		mov	r3, r0
 14934 19a6 1A46     		mov	r2, r3
 14935 19a8 07F11C03 		add	r3, r7, #28
 14936 19ac 1344     		add	r3, r3, r2
 14937 19ae 2F4A     		ldr	r2, .L626+16
 14938 19b0 1068     		ldr	r0, [r2]	@ unaligned
 14939 19b2 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 337


 14940 19b4 1279     		ldrb	r2, [r2, #4]
 14941 19b6 1A71     		strb	r2, [r3, #4]
 14942              	.L605:
2154:..\src/command_processing.c ****                      
2155:..\src/command_processing.c ****                 strcat(info_string, str);
 14943              		.loc 1 2155 0 discriminator 2
 14944 19b8 07F11C03 		add	r3, r7, #28
 14945 19bc 1946     		mov	r1, r3
 14946 19be 7869     		ldr	r0, [r7, #20]
 14947 19c0 FFF7FEFF 		bl	strcat
2125:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 14948              		.loc 1 2125 0 discriminator 2
 14949 19c4 D7F89430 		ldr	r3, [r7, #148]
 14950 19c8 0133     		adds	r3, r3, #1
 14951 19ca C7F89430 		str	r3, [r7, #148]
 14952              	.L595:
2125:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 14953              		.loc 1 2125 0 is_stmt 0 discriminator 1
 14954 19ce 2C4B     		ldr	r3, .L626+36
 14955 19d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14956 19d2 1A46     		mov	r2, r3
 14957 19d4 D7F89430 		ldr	r3, [r7, #148]
 14958 19d8 9A42     		cmp	r2, r3
 14959 19da 3FF793AE 		bgt	.L606
2156:..\src/command_processing.c ****             }       
2157:..\src/command_processing.c ****             
2158:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14960              		.loc 1 2158 0 is_stmt 1
 14961 19de 7869     		ldr	r0, [r7, #20]
 14962 19e0 FFF7FEFF 		bl	strlen
 14963 19e4 0346     		mov	r3, r0
 14964 19e6 1A46     		mov	r2, r3
 14965 19e8 7B69     		ldr	r3, [r7, #20]
 14966 19ea 1344     		add	r3, r3, r2
 14967 19ec 254A     		ldr	r2, .L626+40
 14968 19ee 1188     		ldrh	r1, [r2]	@ unaligned
 14969 19f0 9278     		ldrb	r2, [r2, #2]
 14970 19f2 1980     		strh	r1, [r3]	@ unaligned
 14971 19f4 9A70     		strb	r2, [r3, #2]
2159:..\src/command_processing.c ****           
2160:..\src/command_processing.c ****             IMU_reading_info(info_string);
 14972              		.loc 1 2160 0
 14973 19f6 7869     		ldr	r0, [r7, #20]
 14974 19f8 FFF7FEFF 		bl	IMU_reading_info
 14975              	.L594:
2161:..\src/command_processing.c ****         }
2162:..\src/command_processing.c ****         
2163:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14976              		.loc 1 2163 0
 14977 19fc 7869     		ldr	r0, [r7, #20]
 14978 19fe FFF7FEFF 		bl	strlen
 14979 1a02 0346     		mov	r3, r0
 14980 1a04 1A46     		mov	r2, r3
 14981 1a06 7B69     		ldr	r3, [r7, #20]
 14982 1a08 1344     		add	r3, r3, r2
 14983 1a0a 1E4A     		ldr	r2, .L626+40
 14984 1a0c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 338


 14985 1a0e 9278     		ldrb	r2, [r2, #2]
 14986 1a10 1980     		strh	r1, [r3]	@ unaligned
 14987 1a12 9A70     		strb	r2, [r3, #2]
2164:..\src/command_processing.c **** 
2165:..\src/command_processing.c **** #ifdef GENERIC_FW   
2166:..\src/command_processing.c ****         int j;
2167:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2168:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2169:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2170:..\src/command_processing.c ****             strcat(info_string, str);
2171:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2172:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2173:..\src/command_processing.c ****                 strcat(info_string, str);
2174:..\src/command_processing.c ****             }
2175:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2176:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2177:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2178:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2179:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2180:..\src/command_processing.c ****                     strcat(info_string, str);
2181:..\src/command_processing.c ****                 }
2182:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2183:..\src/command_processing.c ****             }
2184:..\src/command_processing.c ****         }
2185:..\src/command_processing.c **** #endif   
2186:..\src/command_processing.c ****         
2187:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 14988              		.loc 1 2187 0
 14989 1a14 1C4B     		ldr	r3, .L626+44
 14990 1a16 1B88     		ldrh	r3, [r3]
 14991 1a18 1A46     		mov	r2, r3
 14992 1a1a 1C4B     		ldr	r3, .L626+48
 14993 1a1c 1B88     		ldrh	r3, [r3]
 14994 1a1e D21A     		subs	r2, r2, r3
 14995 1a20 07F11C03 		add	r3, r7, #28
 14996 1a24 1A49     		ldr	r1, .L626+52
 14997 1a26 1846     		mov	r0, r3
 14998 1a28 FFF7FEFF 		bl	sprintf
2188:..\src/command_processing.c ****         strcat(info_string, str);
 14999              		.loc 1 2188 0
 15000 1a2c 07F11C03 		add	r3, r7, #28
 15001 1a30 1946     		mov	r1, r3
 15002 1a32 7869     		ldr	r0, [r7, #20]
 15003 1a34 FFF7FEFF 		bl	strcat
2189:..\src/command_processing.c ****   
2190:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 15004              		.loc 1 2190 0
 15005 1a38 7869     		ldr	r0, [r7, #20]
 15006 1a3a FFF7FEFF 		bl	strlen
 15007 1a3e 0346     		mov	r3, r0
 15008 1a40 1A46     		mov	r2, r3
 15009 1a42 7B69     		ldr	r3, [r7, #20]
 15010 1a44 1344     		add	r3, r3, r2
 15011 1a46 134A     		ldr	r2, .L626+56
 15012 1a48 1188     		ldrh	r1, [r2]	@ unaligned
 15013 1a4a 9278     		ldrb	r2, [r2, #2]
 15014 1a4c 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 339


 15015 1a4e 9A70     		strb	r2, [r3, #2]
 15016              	.L608:
 15017              	.LBE16:
2191:..\src/command_processing.c ****     }
2192:..\src/command_processing.c **** }
 15018              		.loc 1 2192 0
 15019 1a50 00BF     		nop
 15020 1a52 9C37     		adds	r7, r7, #156
 15021              		.cfi_def_cfa_offset 36
 15022 1a54 BD46     		mov	sp, r7
 15023              		.cfi_def_cfa_register 13
 15024              		@ sp needed
 15025 1a56 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15026              	.L627:
 15027 1a5a 00BF     		.align	2
 15028              	.L626:
 15029 1a5c 00000000 		.word	IMU_connected
 15030 1a60 F8140000 		.word	.LC209
 15031 1a64 0C150000 		.word	.LC210
 15032 1a68 180F0000 		.word	.LC146
 15033 1a6c 200F0000 		.word	.LC147
 15034 1a70 20150000 		.word	.LC211
 15035 1a74 30150000 		.word	.LC212
 15036 1a78 44150000 		.word	.LC213
 15037 1a7c 54150000 		.word	.LC214
 15038 1a80 00000000 		.word	N_IMU_Connected
 15039 1a84 C00D0000 		.word	.LC126
 15040 1a88 00000000 		.word	timer_value0
 15041 1a8c 00000000 		.word	timer_value
 15042 1a90 64150000 		.word	.LC215
 15043 1a94 80150000 		.word	.LC216
 15044              		.cfi_endproc
 15045              	.LFE72:
 15046              		.size	prepare_generic_info, .-prepare_generic_info
 15047              		.section	.rodata
 15048              		.align	2
 15049              	.LC217:
 15050 1584 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 15050      41474520 
 15050      53544154 
 15050      49535449 
 15050      43530D0A 
 15051 1599 000000   		.align	2
 15052              	.LC218:
 15053 159c 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 15053      206F6620 
 15053      4857206D 
 15053      61696E74 
 15053      656E616E 
 15054 15c7 00       		.align	2
 15055              	.LC219:
 15056 15c8 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 15056      206F6620 
 15056      75736167 
 15056      65207374 
 15056      61747320 
 15057 15fb 0A00     		.ascii	"\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 340


 15058 15fd 000000   		.align	2
 15059              	.LC220:
 15060 1600 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 15060      20636865 
 15060      636B6564 
 15060      2054696D 
 15060      653A2025 
 15061 1633 0A00     		.ascii	"\012\000"
 15062 1635 000000   		.align	2
 15063              	.LC221:
 15064 1638 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 15064      74696F6E 
 15064      73206869 
 15064      73746F67 
 15064      72616D20 
 15065 1657 00       		.align	2
 15066              	.LC222:
 15067 1658 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 15067      2564205B 
 15067      25642D25 
 15067      645D3A20 
 15067      256C750D 
 15068 166e 0000     		.align	2
 15069              	.LC223:
 15070 1670 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 15070      656E7420 
 15070      68697374 
 15070      6F677261 
 15070      6D20286D 
 15071 168a 0000     		.align	2
 15072              	.LC224:
 15073 168c 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 15073      73686F6C 
 15073      64202564 
 15073      205B2564 
 15073      2D25645D 
 15074              		.align	2
 15075              	.LC225:
 15076 16a8 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 15076      61637469 
 15076      76617469 
 15076      6F6E7320 
 15076      636F756E 
 15077 16ca 0000     		.align	2
 15078              	.LC226:
 15079 16cc 52657374 		.ascii	"Rest position occurrences: %lu\000"
 15079      20706F73 
 15079      6974696F 
 15079      6E206F63 
 15079      63757272 
 15080 16eb 00       		.align	2
 15081              	.LC227:
 15082 16ec 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 15082      6520746F 
 15082      74616C20 
 15082      64697370 
 15082      6C616365 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 341


 15083 1712 0000     		.align	2
 15084              	.LC228:
 15085 1714 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 15085      6C20706F 
 15085      77657220 
 15085      6F6E2074 
 15085      696D6520 
 15086 1733 00       		.align	2
 15087              	.LC229:
 15088 1734 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 15088      6C207265 
 15088      73742070 
 15088      6F736974 
 15088      696F6E20 
 15089              		.section	.text.prepare_counter_info,"ax",%progbits
 15090              		.align	2
 15091              		.global	prepare_counter_info
 15092              		.thumb
 15093              		.thumb_func
 15094              		.type	prepare_counter_info, %function
 15095              	prepare_counter_info:
 15096              	.LFB73:
2193:..\src/command_processing.c **** 
2194:..\src/command_processing.c **** //==============================================================================
2195:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2196:..\src/command_processing.c **** //==============================================================================
2197:..\src/command_processing.c **** 
2198:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2199:..\src/command_processing.c **** {
 15097              		.loc 1 2199 0
 15098              		.cfi_startproc
 15099              		@ args = 0, pretend = 0, frame = 128
 15100              		@ frame_needed = 1, uses_anonymous_args = 0
 15101 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 15102              		.cfi_def_cfa_offset 20
 15103              		.cfi_offset 4, -20
 15104              		.cfi_offset 5, -16
 15105              		.cfi_offset 6, -12
 15106              		.cfi_offset 7, -8
 15107              		.cfi_offset 14, -4
 15108 0002 A5B0     		sub	sp, sp, #148
 15109              		.cfi_def_cfa_offset 168
 15110 0004 04AF     		add	r7, sp, #16
 15111              		.cfi_def_cfa 7, 152
 15112 0006 7860     		str	r0, [r7, #4]
2200:..\src/command_processing.c ****     char str[100];  
2201:..\src/command_processing.c ****     int i;
2202:..\src/command_processing.c ****     int step;
2203:..\src/command_processing.c **** 
2204:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15113              		.loc 1 2204 0
 15114 0008 7D4B     		ldr	r3, .L634
 15115 000a BB67     		str	r3, [r7, #120]
2205:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 15116              		.loc 1 2205 0
 15117 000c BB6F     		ldr	r3, [r7, #120]
 15118 000e B033     		adds	r3, r3, #176
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 342


 15119 0010 7B67     		str	r3, [r7, #116]
2206:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 15120              		.loc 1 2206 0
 15121 0012 7B6F     		ldr	r3, [r7, #116]
 15122 0014 93F86030 		ldrb	r3, [r3, #96]
 15123 0018 87F87330 		strb	r3, [r7, #115]
2207:..\src/command_processing.c ****     
2208:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 15124              		.loc 1 2208 0
 15125 001c 7868     		ldr	r0, [r7, #4]
 15126 001e FFF7FEFF 		bl	strlen
 15127 0022 0346     		mov	r3, r0
 15128 0024 1A46     		mov	r2, r3
 15129 0026 7B68     		ldr	r3, [r7, #4]
 15130 0028 1344     		add	r3, r3, r2
 15131 002a 764A     		ldr	r2, .L634+4
 15132 002c 1D46     		mov	r5, r3
 15133 002e 1446     		mov	r4, r2
 15134 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15135 0032 2860     		str	r0, [r5]	@ unaligned
 15136 0034 6960     		str	r1, [r5, #4]	@ unaligned
 15137 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 15138 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 15139 003a 2068     		ldr	r0, [r4]	@ unaligned
 15140 003c 2861     		str	r0, [r5, #16]	@ unaligned
 15141 003e 2379     		ldrb	r3, [r4, #4]
 15142 0040 2B75     		strb	r3, [r5, #20]
2209:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15143              		.loc 1 2209 0
 15144 0042 7868     		ldr	r0, [r7, #4]
 15145 0044 FFF7FEFF 		bl	strlen
 15146 0048 0346     		mov	r3, r0
 15147 004a 1A46     		mov	r2, r3
 15148 004c 7B68     		ldr	r3, [r7, #4]
 15149 004e 1344     		add	r3, r3, r2
 15150 0050 6D4A     		ldr	r2, .L634+8
 15151 0052 1188     		ldrh	r1, [r2]	@ unaligned
 15152 0054 9278     		ldrb	r2, [r2, #2]
 15153 0056 1980     		strh	r1, [r3]	@ unaligned
 15154 0058 9A70     		strb	r2, [r3, #2]
2210:..\src/command_processing.c ****     
2211:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15155              		.loc 1 2211 0
 15156 005a BB6F     		ldr	r3, [r7, #120]
 15157 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15158 0060 1A46     		mov	r2, r3
 15159 0062 BB6F     		ldr	r3, [r7, #120]
 15160 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15161 0068 1946     		mov	r1, r3
 15162 006a BB6F     		ldr	r3, [r7, #120]
 15163 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15164 0070 07F10800 		add	r0, r7, #8
 15165 0074 0093     		str	r3, [sp]
 15166 0076 0B46     		mov	r3, r1
 15167 0078 6449     		ldr	r1, .L634+12
 15168 007a FFF7FEFF 		bl	sprintf
2212:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 343


 15169              		.loc 1 2212 0
 15170 007e 07F10803 		add	r3, r7, #8
 15171 0082 1946     		mov	r1, r3
 15172 0084 7868     		ldr	r0, [r7, #4]
 15173 0086 FFF7FEFF 		bl	strcat
2213:..\src/command_processing.c ****     
2214:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15174              		.loc 1 2214 0
 15175 008a BB6F     		ldr	r3, [r7, #120]
 15176 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15177 0090 1A46     		mov	r2, r3
 15178 0092 BB6F     		ldr	r3, [r7, #120]
 15179 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15180 0098 1946     		mov	r1, r3
 15181 009a BB6F     		ldr	r3, [r7, #120]
 15182 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15183 00a0 07F10800 		add	r0, r7, #8
 15184 00a4 0093     		str	r3, [sp]
 15185 00a6 0B46     		mov	r3, r1
 15186 00a8 5949     		ldr	r1, .L634+16
 15187 00aa FFF7FEFF 		bl	sprintf
2215:..\src/command_processing.c ****     strcat(info_string, str);
 15188              		.loc 1 2215 0
 15189 00ae 07F10803 		add	r3, r7, #8
 15190 00b2 1946     		mov	r1, r3
 15191 00b4 7868     		ldr	r0, [r7, #4]
 15192 00b6 FFF7FEFF 		bl	strcat
2216:..\src/command_processing.c ****             
2217:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 15193              		.loc 1 2217 0
 15194 00ba BB6F     		ldr	r3, [r7, #120]
 15195 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 15196 00c0 1D46     		mov	r5, r3
 15197 00c2 BB6F     		ldr	r3, [r7, #120]
 15198 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 15199 00c8 1E46     		mov	r6, r3
 15200 00ca BB6F     		ldr	r3, [r7, #120]
 15201 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 15202 00d0 1A46     		mov	r2, r3
 15203 00d2 BB6F     		ldr	r3, [r7, #120]
 15204 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 15205 00d8 1946     		mov	r1, r3
 15206 00da BB6F     		ldr	r3, [r7, #120]
 15207 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 15208 00e0 1C46     		mov	r4, r3
 15209 00e2 BB6F     		ldr	r3, [r7, #120]
 15210 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 15211 00e8 07F10800 		add	r0, r7, #8
 15212 00ec 0393     		str	r3, [sp, #12]
 15213 00ee 0294     		str	r4, [sp, #8]
 15214 00f0 0191     		str	r1, [sp, #4]
 15215 00f2 0092     		str	r2, [sp]
 15216 00f4 3346     		mov	r3, r6
 15217 00f6 2A46     		mov	r2, r5
 15218 00f8 4649     		ldr	r1, .L634+20
 15219 00fa FFF7FEFF 		bl	sprintf
2218:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 344


 15220              		.loc 1 2218 0
 15221 00fe 07F10803 		add	r3, r7, #8
 15222 0102 1946     		mov	r1, r3
 15223 0104 7868     		ldr	r0, [r7, #4]
 15224 0106 FFF7FEFF 		bl	strcat
2219:..\src/command_processing.c ****     
2220:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 15225              		.loc 1 2220 0
 15226 010a 07F10803 		add	r3, r7, #8
 15227 010e 424A     		ldr	r2, .L634+24
 15228 0110 1C46     		mov	r4, r3
 15229 0112 1546     		mov	r5, r2
 15230 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15231 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15232 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 15233 011c 07C4     		stmia	r4!, {r0, r1, r2}
 15234 011e 2380     		strh	r3, [r4]	@ movhi
 15235 0120 0234     		adds	r4, r4, #2
 15236 0122 1B0C     		lsrs	r3, r3, #16
 15237 0124 2370     		strb	r3, [r4]
2221:..\src/command_processing.c ****     strcat(info_string, str);
 15238              		.loc 1 2221 0
 15239 0126 07F10803 		add	r3, r7, #8
 15240 012a 1946     		mov	r1, r3
 15241 012c 7868     		ldr	r0, [r7, #4]
 15242 012e FFF7FEFF 		bl	strcat
2222:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 15243              		.loc 1 2222 0
 15244 0132 7B6F     		ldr	r3, [r7, #116]
 15245 0134 996B     		ldr	r1, [r3, #56]
 15246 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 15247 013a B86F     		ldr	r0, [r7, #120]
 15248 013c 1346     		mov	r3, r2
 15249 013e 5B00     		lsls	r3, r3, #1
 15250 0140 1344     		add	r3, r3, r2
 15251 0142 1B01     		lsls	r3, r3, #4
 15252 0144 0344     		add	r3, r3, r0
 15253 0146 03F29513 		addw	r3, r3, #405
 15254 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15255 014c 41FA03F3 		asr	r3, r1, r3
 15256 0150 324A     		ldr	r2, .L634+28
 15257 0152 82FB0312 		smull	r1, r2, r2, r3
 15258 0156 9210     		asrs	r2, r2, #2
 15259 0158 DB17     		asrs	r3, r3, #31
 15260 015a D31A     		subs	r3, r2, r3
 15261 015c FB66     		str	r3, [r7, #108]
2223:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15262              		.loc 1 2223 0
 15263 015e 0123     		movs	r3, #1
 15264 0160 FB67     		str	r3, [r7, #124]
 15265 0162 21E0     		b	.L629
 15266              	.L630:
2224:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 15267              		.loc 1 2224 0 discriminator 3
 15268 0164 FB6F     		ldr	r3, [r7, #124]
 15269 0166 013B     		subs	r3, r3, #1
 15270 0168 FA6E     		ldr	r2, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 345


 15271 016a 02FB03F3 		mul	r3, r2, r3
 15272 016e 5C1C     		adds	r4, r3, #1
 15273 0170 FB6E     		ldr	r3, [r7, #108]
 15274 0172 FA6F     		ldr	r2, [r7, #124]
 15275 0174 02FB03F3 		mul	r3, r2, r3
 15276 0178 FA6F     		ldr	r2, [r7, #124]
 15277 017a 511E     		subs	r1, r2, #1
 15278 017c BA6F     		ldr	r2, [r7, #120]
 15279 017e 0631     		adds	r1, r1, #6
 15280 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15281 0184 07F10800 		add	r0, r7, #8
 15282 0188 0192     		str	r2, [sp, #4]
 15283 018a 0093     		str	r3, [sp]
 15284 018c 2346     		mov	r3, r4
 15285 018e FA6F     		ldr	r2, [r7, #124]
 15286 0190 2349     		ldr	r1, .L634+32
 15287 0192 FFF7FEFF 		bl	sprintf
2225:..\src/command_processing.c ****         strcat(info_string, str);
 15288              		.loc 1 2225 0 discriminator 3
 15289 0196 07F10803 		add	r3, r7, #8
 15290 019a 1946     		mov	r1, r3
 15291 019c 7868     		ldr	r0, [r7, #4]
 15292 019e FFF7FEFF 		bl	strcat
2223:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15293              		.loc 1 2223 0 discriminator 3
 15294 01a2 FB6F     		ldr	r3, [r7, #124]
 15295 01a4 0133     		adds	r3, r3, #1
 15296 01a6 FB67     		str	r3, [r7, #124]
 15297              	.L629:
2223:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15298              		.loc 1 2223 0 is_stmt 0 discriminator 1
 15299 01a8 FB6F     		ldr	r3, [r7, #124]
 15300 01aa 0A2B     		cmp	r3, #10
 15301 01ac DADD     		ble	.L630
2226:..\src/command_processing.c ****     }
2227:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15302              		.loc 1 2227 0 is_stmt 1
 15303 01ae 7868     		ldr	r0, [r7, #4]
 15304 01b0 FFF7FEFF 		bl	strlen
 15305 01b4 0346     		mov	r3, r0
 15306 01b6 1A46     		mov	r2, r3
 15307 01b8 7B68     		ldr	r3, [r7, #4]
 15308 01ba 1344     		add	r3, r3, r2
 15309 01bc 124A     		ldr	r2, .L634+8
 15310 01be 1188     		ldrh	r1, [r2]	@ unaligned
 15311 01c0 9278     		ldrb	r2, [r2, #2]
 15312 01c2 1980     		strh	r1, [r3]	@ unaligned
 15313 01c4 9A70     		strb	r2, [r3, #2]
2228:..\src/command_processing.c ****     
2229:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 15314              		.loc 1 2229 0
 15315 01c6 07F10803 		add	r3, r7, #8
 15316 01ca 164A     		ldr	r2, .L634+36
 15317 01cc 1C46     		mov	r4, r3
 15318 01ce 1546     		mov	r5, r2
 15319 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15320 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 346


 15321 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 15322 01d8 03C4     		stmia	r4!, {r0, r1}
 15323 01da 2280     		strh	r2, [r4]	@ movhi
2230:..\src/command_processing.c ****     strcat(info_string, str);
 15324              		.loc 1 2230 0
 15325 01dc 07F10803 		add	r3, r7, #8
 15326 01e0 1946     		mov	r1, r3
 15327 01e2 7868     		ldr	r0, [r7, #4]
 15328 01e4 FFF7FEFF 		bl	strcat
2231:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 15329              		.loc 1 2231 0
 15330 01e8 7B6F     		ldr	r3, [r7, #116]
 15331 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 15332 01ee 002B     		cmp	r3, #0
 15333 01f0 00DA     		bge	.L631
 15334 01f2 0333     		adds	r3, r3, #3
 15335              	.L631:
 15336 01f4 9B10     		asrs	r3, r3, #2
 15337 01f6 1BB2     		sxth	r3, r3
 15338 01f8 FB66     		str	r3, [r7, #108]
2232:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15339              		.loc 1 2232 0
 15340 01fa 0123     		movs	r3, #1
 15341 01fc FB67     		str	r3, [r7, #124]
 15342 01fe 34E0     		b	.L632
 15343              	.L635:
 15344              		.align	2
 15345              	.L634:
 15346 0200 00000000 		.word	g_mem
 15347 0204 84150000 		.word	.LC217
 15348 0208 C00D0000 		.word	.LC126
 15349 020c 9C150000 		.word	.LC218
 15350 0210 C8150000 		.word	.LC219
 15351 0214 00160000 		.word	.LC220
 15352 0218 38160000 		.word	.LC221
 15353 021c 67666666 		.word	1717986919
 15354 0220 58160000 		.word	.LC222
 15355 0224 70160000 		.word	.LC223
 15356              	.L633:
2233:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 15357              		.loc 1 2233 0 discriminator 3
 15358 0228 FB6F     		ldr	r3, [r7, #124]
 15359 022a 013B     		subs	r3, r3, #1
 15360 022c FA6E     		ldr	r2, [r7, #108]
 15361 022e 02FB03F4 		mul	r4, r2, r3
 15362 0232 FB6E     		ldr	r3, [r7, #108]
 15363 0234 FA6F     		ldr	r2, [r7, #124]
 15364 0236 02FB03F3 		mul	r3, r2, r3
 15365 023a FA6F     		ldr	r2, [r7, #124]
 15366 023c 511E     		subs	r1, r2, #1
 15367 023e BA6F     		ldr	r2, [r7, #120]
 15368 0240 1031     		adds	r1, r1, #16
 15369 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15370 0246 07F10800 		add	r0, r7, #8
 15371 024a 0192     		str	r2, [sp, #4]
 15372 024c 0093     		str	r3, [sp]
 15373 024e 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 347


 15374 0250 FA6F     		ldr	r2, [r7, #124]
 15375 0252 5149     		ldr	r1, .L636
 15376 0254 FFF7FEFF 		bl	sprintf
2234:..\src/command_processing.c ****         strcat(info_string, str);
 15377              		.loc 1 2234 0 discriminator 3
 15378 0258 07F10803 		add	r3, r7, #8
 15379 025c 1946     		mov	r1, r3
 15380 025e 7868     		ldr	r0, [r7, #4]
 15381 0260 FFF7FEFF 		bl	strcat
2232:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15382              		.loc 1 2232 0 discriminator 3
 15383 0264 FB6F     		ldr	r3, [r7, #124]
 15384 0266 0133     		adds	r3, r3, #1
 15385 0268 FB67     		str	r3, [r7, #124]
 15386              	.L632:
2232:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15387              		.loc 1 2232 0 is_stmt 0 discriminator 1
 15388 026a FB6F     		ldr	r3, [r7, #124]
 15389 026c 042B     		cmp	r3, #4
 15390 026e DBDD     		ble	.L633
2235:..\src/command_processing.c ****     }
2236:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15391              		.loc 1 2236 0 is_stmt 1
 15392 0270 7868     		ldr	r0, [r7, #4]
 15393 0272 FFF7FEFF 		bl	strlen
 15394 0276 0346     		mov	r3, r0
 15395 0278 1A46     		mov	r2, r3
 15396 027a 7B68     		ldr	r3, [r7, #4]
 15397 027c 1344     		add	r3, r3, r2
 15398 027e 474A     		ldr	r2, .L636+4
 15399 0280 1188     		ldrh	r1, [r2]	@ unaligned
 15400 0282 9278     		ldrb	r2, [r2, #2]
 15401 0284 1980     		strh	r1, [r3]	@ unaligned
 15402 0286 9A70     		strb	r2, [r3, #2]
2237:..\src/command_processing.c ****             
2238:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 15403              		.loc 1 2238 0
 15404 0288 BB6F     		ldr	r3, [r7, #120]
 15405 028a 1A69     		ldr	r2, [r3, #16]
 15406 028c BB6F     		ldr	r3, [r7, #120]
 15407 028e 5B69     		ldr	r3, [r3, #20]
 15408 0290 07F10800 		add	r0, r7, #8
 15409 0294 4249     		ldr	r1, .L636+8
 15410 0296 FFF7FEFF 		bl	sprintf
2239:..\src/command_processing.c ****     strcat(info_string, str);
 15411              		.loc 1 2239 0
 15412 029a 07F10803 		add	r3, r7, #8
 15413 029e 1946     		mov	r1, r3
 15414 02a0 7868     		ldr	r0, [r7, #4]
 15415 02a2 FFF7FEFF 		bl	strcat
2240:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15416              		.loc 1 2240 0
 15417 02a6 7868     		ldr	r0, [r7, #4]
 15418 02a8 FFF7FEFF 		bl	strlen
 15419 02ac 0346     		mov	r3, r0
 15420 02ae 1A46     		mov	r2, r3
 15421 02b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 348


 15422 02b2 1344     		add	r3, r3, r2
 15423 02b4 394A     		ldr	r2, .L636+4
 15424 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 15425 02b8 9278     		ldrb	r2, [r2, #2]
 15426 02ba 1980     		strh	r1, [r3]	@ unaligned
 15427 02bc 9A70     		strb	r2, [r3, #2]
2241:..\src/command_processing.c ****     
2242:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 15428              		.loc 1 2242 0
 15429 02be BB6F     		ldr	r3, [r7, #120]
 15430 02c0 1A6D     		ldr	r2, [r3, #80]
 15431 02c2 07F10803 		add	r3, r7, #8
 15432 02c6 3749     		ldr	r1, .L636+12
 15433 02c8 1846     		mov	r0, r3
 15434 02ca FFF7FEFF 		bl	sprintf
2243:..\src/command_processing.c ****     strcat(info_string, str);
 15435              		.loc 1 2243 0
 15436 02ce 07F10803 		add	r3, r7, #8
 15437 02d2 1946     		mov	r1, r3
 15438 02d4 7868     		ldr	r0, [r7, #4]
 15439 02d6 FFF7FEFF 		bl	strcat
2244:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15440              		.loc 1 2244 0
 15441 02da 7868     		ldr	r0, [r7, #4]
 15442 02dc FFF7FEFF 		bl	strlen
 15443 02e0 0346     		mov	r3, r0
 15444 02e2 1A46     		mov	r2, r3
 15445 02e4 7B68     		ldr	r3, [r7, #4]
 15446 02e6 1344     		add	r3, r3, r2
 15447 02e8 2C4A     		ldr	r2, .L636+4
 15448 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 15449 02ec 9278     		ldrb	r2, [r2, #2]
 15450 02ee 1980     		strh	r1, [r3]	@ unaligned
 15451 02f0 9A70     		strb	r2, [r3, #2]
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 15452              		.loc 1 2246 0
 15453 02f2 BB6F     		ldr	r3, [r7, #120]
 15454 02f4 5A6D     		ldr	r2, [r3, #84]
 15455 02f6 07F10803 		add	r3, r7, #8
 15456 02fa 2B49     		ldr	r1, .L636+16
 15457 02fc 1846     		mov	r0, r3
 15458 02fe FFF7FEFF 		bl	sprintf
2247:..\src/command_processing.c ****     strcat(info_string, str);
 15459              		.loc 1 2247 0
 15460 0302 07F10803 		add	r3, r7, #8
 15461 0306 1946     		mov	r1, r3
 15462 0308 7868     		ldr	r0, [r7, #4]
 15463 030a FFF7FEFF 		bl	strcat
2248:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15464              		.loc 1 2248 0
 15465 030e 7868     		ldr	r0, [r7, #4]
 15466 0310 FFF7FEFF 		bl	strlen
 15467 0314 0346     		mov	r3, r0
 15468 0316 1A46     		mov	r2, r3
 15469 0318 7B68     		ldr	r3, [r7, #4]
 15470 031a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 349


 15471 031c 1F4A     		ldr	r2, .L636+4
 15472 031e 1188     		ldrh	r1, [r2]	@ unaligned
 15473 0320 9278     		ldrb	r2, [r2, #2]
 15474 0322 1980     		strh	r1, [r3]	@ unaligned
 15475 0324 9A70     		strb	r2, [r3, #2]
2249:..\src/command_processing.c ****     
2250:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 15476              		.loc 1 2250 0
 15477 0326 BB6F     		ldr	r3, [r7, #120]
 15478 0328 9A6D     		ldr	r2, [r3, #88]
 15479 032a 07F10803 		add	r3, r7, #8
 15480 032e 1F49     		ldr	r1, .L636+20
 15481 0330 1846     		mov	r0, r3
 15482 0332 FFF7FEFF 		bl	sprintf
2251:..\src/command_processing.c ****     strcat(info_string, str);
 15483              		.loc 1 2251 0
 15484 0336 07F10803 		add	r3, r7, #8
 15485 033a 1946     		mov	r1, r3
 15486 033c 7868     		ldr	r0, [r7, #4]
 15487 033e FFF7FEFF 		bl	strcat
2252:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15488              		.loc 1 2252 0
 15489 0342 7868     		ldr	r0, [r7, #4]
 15490 0344 FFF7FEFF 		bl	strlen
 15491 0348 0346     		mov	r3, r0
 15492 034a 1A46     		mov	r2, r3
 15493 034c 7B68     		ldr	r3, [r7, #4]
 15494 034e 1344     		add	r3, r3, r2
 15495 0350 124A     		ldr	r2, .L636+4
 15496 0352 1188     		ldrh	r1, [r2]	@ unaligned
 15497 0354 9278     		ldrb	r2, [r2, #2]
 15498 0356 1980     		strh	r1, [r3]	@ unaligned
 15499 0358 9A70     		strb	r2, [r3, #2]
2253:..\src/command_processing.c ****     
2254:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 15500              		.loc 1 2254 0
 15501 035a BB6F     		ldr	r3, [r7, #120]
 15502 035c DA6D     		ldr	r2, [r3, #92]
 15503 035e 07F10803 		add	r3, r7, #8
 15504 0362 1349     		ldr	r1, .L636+24
 15505 0364 1846     		mov	r0, r3
 15506 0366 FFF7FEFF 		bl	sprintf
2255:..\src/command_processing.c ****     strcat(info_string, str);
 15507              		.loc 1 2255 0
 15508 036a 07F10803 		add	r3, r7, #8
 15509 036e 1946     		mov	r1, r3
 15510 0370 7868     		ldr	r0, [r7, #4]
 15511 0372 FFF7FEFF 		bl	strcat
2256:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15512              		.loc 1 2256 0
 15513 0376 7868     		ldr	r0, [r7, #4]
 15514 0378 FFF7FEFF 		bl	strlen
 15515 037c 0346     		mov	r3, r0
 15516 037e 1A46     		mov	r2, r3
 15517 0380 7B68     		ldr	r3, [r7, #4]
 15518 0382 1344     		add	r3, r3, r2
 15519 0384 054A     		ldr	r2, .L636+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 350


 15520 0386 1188     		ldrh	r1, [r2]	@ unaligned
 15521 0388 9278     		ldrb	r2, [r2, #2]
 15522 038a 1980     		strh	r1, [r3]	@ unaligned
 15523 038c 9A70     		strb	r2, [r3, #2]
2257:..\src/command_processing.c **** 
2258:..\src/command_processing.c **** }
 15524              		.loc 1 2258 0
 15525 038e 00BF     		nop
 15526 0390 8437     		adds	r7, r7, #132
 15527              		.cfi_def_cfa_offset 20
 15528 0392 BD46     		mov	sp, r7
 15529              		.cfi_def_cfa_register 13
 15530              		@ sp needed
 15531 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 15532              	.L637:
 15533 0396 00BF     		.align	2
 15534              	.L636:
 15535 0398 8C160000 		.word	.LC224
 15536 039c C00D0000 		.word	.LC126
 15537 03a0 A8160000 		.word	.LC225
 15538 03a4 CC160000 		.word	.LC226
 15539 03a8 EC160000 		.word	.LC227
 15540 03ac 14170000 		.word	.LC228
 15541 03b0 34170000 		.word	.LC229
 15542              		.cfi_endproc
 15543              	.LFE73:
 15544              		.size	prepare_counter_info, .-prepare_counter_info
 15545              		.section	.rodata
 15546              		.align	2
 15547              	.LC230:
 15548 1758 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 15548      77617265 
 15548      20766572 
 15548      73696F6E 
 15548      3A202573 
 15549 176f 00       		.align	2
 15550              	.LC231:
 15551 1770 506F7369 		.ascii	"Position PID: \000"
 15551      74696F6E 
 15551      20504944 
 15551      3A2000
 15552 177f 00       		.align	2
 15553              	.LC232:
 15554 1780 43757272 		.ascii	"Current PID: \000"
 15554      656E7420 
 15554      5049443A 
 15554      2000
 15555 178e 0000     		.align	2
 15556              	.LC233:
 15557 1790 5265736F 		.ascii	"Resolutions: \000"
 15557      6C757469 
 15557      6F6E733A 
 15557      2000
 15558 179e 0000     		.align	2
 15559              	.LC234:
 15560 17a0 4F666673 		.ascii	"Offsets: \000"
 15560      6574733A 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 351


 15560      2000
 15561 17aa 0000     		.align	2
 15562              	.LC235:
 15563 17ac 4D756C74 		.ascii	"Multipliers: \000"
 15563      69706C69 
 15563      6572733A 
 15563      2000
 15564 17ba 0000     		.align	2
 15565              	.LC236:
 15566 17bc 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 15566      656E7420 
 15566      6C6F6F6B 
 15566      75702074 
 15566      61626C65 
 15567 17ef 662C2025 		.ascii	"f, %f\015\012\000"
 15567      660D0A00 
 15568 17f7 00       		.align	2
 15569              	.LC237:
 15570 17f8 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 15570      74696F6E 
 15570      206C696D 
 15570      69742061 
 15570      63746976 
 15571              		.align	2
 15572              	.LC238:
 15573 1814 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 15573      74696F6E 
 15573      206C696D 
 15573      6974733A 
 15573      20696E66 
 15574              		.section	.text.prepare_SD_param_info,"ax",%progbits
 15575              		.align	2
 15576              		.global	prepare_SD_param_info
 15577              		.thumb
 15578              		.thumb_func
 15579              		.type	prepare_SD_param_info, %function
 15580              	prepare_SD_param_info:
 15581              	.LFB74:
2259:..\src/command_processing.c **** 
2260:..\src/command_processing.c **** //==============================================================================
2261:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2262:..\src/command_processing.c **** //==============================================================================
2263:..\src/command_processing.c **** 
2264:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2265:..\src/command_processing.c **** {
 15582              		.loc 1 2265 0
 15583              		.cfi_startproc
 15584              		@ args = 0, pretend = 0, frame = 152
 15585              		@ frame_needed = 1, uses_anonymous_args = 0
 15586 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 15587              		.cfi_def_cfa_offset 36
 15588              		.cfi_offset 4, -36
 15589              		.cfi_offset 5, -32
 15590              		.cfi_offset 6, -28
 15591              		.cfi_offset 7, -24
 15592              		.cfi_offset 8, -20
 15593              		.cfi_offset 9, -16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 352


 15594              		.cfi_offset 10, -12
 15595              		.cfi_offset 11, -8
 15596              		.cfi_offset 14, -4
 15597 0004 B1B0     		sub	sp, sp, #196
 15598              		.cfi_def_cfa_offset 232
 15599 0006 0AAF     		add	r7, sp, #40
 15600              		.cfi_def_cfa 7, 192
 15601 0008 7861     		str	r0, [r7, #20]
2266:..\src/command_processing.c ****     char str[100];  
2267:..\src/command_processing.c ****     int i;
2268:..\src/command_processing.c ****            
2269:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2270:..\src/command_processing.c ****     
2271:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15602              		.loc 1 2271 0
 15603 000a AB4B     		ldr	r3, .L702
 15604 000c C7F88C30 		str	r3, [r7, #140]
2272:..\src/command_processing.c ****         
2273:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 15605              		.loc 1 2273 0
 15606 0010 AA4A     		ldr	r2, .L702+4
 15607 0012 AB49     		ldr	r1, .L702+8
 15608 0014 7869     		ldr	r0, [r7, #20]
 15609 0016 FFF7FEFF 		bl	sprintf
2274:..\src/command_processing.c ****     
2275:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 15610              		.loc 1 2275 0
 15611 001a D7F88C30 		ldr	r3, [r7, #140]
 15612 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 15613 0022 1A46     		mov	r2, r3
 15614 0024 07F11C03 		add	r3, r7, #28
 15615 0028 A649     		ldr	r1, .L702+12
 15616 002a 1846     		mov	r0, r3
 15617 002c FFF7FEFF 		bl	sprintf
2276:..\src/command_processing.c ****     strcat(info_string, str);
 15618              		.loc 1 2276 0
 15619 0030 07F11C03 		add	r3, r7, #28
 15620 0034 1946     		mov	r1, r3
 15621 0036 7869     		ldr	r0, [r7, #20]
 15622 0038 FFF7FEFF 		bl	strcat
2277:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 15623              		.loc 1 2277 0
 15624 003c D7F88C30 		ldr	r3, [r7, #140]
 15625 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 15626 0044 002B     		cmp	r3, #0
 15627 0046 02D0     		beq	.L640
 15628 0048 012B     		cmp	r3, #1
 15629 004a 15D0     		beq	.L641
 15630 004c 26E0     		b	.L639
 15631              	.L640:
2278:..\src/command_processing.c ****         case RIGHT_HAND:
2279:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 15632              		.loc 1 2279 0
 15633 004e 7869     		ldr	r0, [r7, #20]
 15634 0050 FFF7FEFF 		bl	strlen
 15635 0054 0346     		mov	r3, r0
 15636 0056 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 353


 15637 0058 7B69     		ldr	r3, [r7, #20]
 15638 005a 1344     		add	r3, r3, r2
 15639 005c 9A4A     		ldr	r2, .L702+16
 15640 005e 1D46     		mov	r5, r3
 15641 0060 1446     		mov	r4, r2
 15642 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15643 0064 2860     		str	r0, [r5]	@ unaligned
 15644 0066 6960     		str	r1, [r5, #4]	@ unaligned
 15645 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 15646 006a EB60     		str	r3, [r5, #12]	@ unaligned
 15647 006c 2388     		ldrh	r3, [r4]	@ unaligned
 15648 006e A278     		ldrb	r2, [r4, #2]
 15649 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 15650 0072 1346     		mov	r3, r2
 15651 0074 AB74     		strb	r3, [r5, #18]
2280:..\src/command_processing.c ****             break;
 15652              		.loc 1 2280 0
 15653 0076 11E0     		b	.L639
 15654              	.L641:
2281:..\src/command_processing.c ****         case LEFT_HAND:
2282:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 15655              		.loc 1 2282 0
 15656 0078 7869     		ldr	r0, [r7, #20]
 15657 007a FFF7FEFF 		bl	strlen
 15658 007e 0346     		mov	r3, r0
 15659 0080 1A46     		mov	r2, r3
 15660 0082 7B69     		ldr	r3, [r7, #20]
 15661 0084 1344     		add	r3, r3, r2
 15662 0086 914A     		ldr	r2, .L702+20
 15663 0088 1D46     		mov	r5, r3
 15664 008a 1446     		mov	r4, r2
 15665 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15666 008e 2860     		str	r0, [r5]	@ unaligned
 15667 0090 6960     		str	r1, [r5, #4]	@ unaligned
 15668 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 15669 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 15670 0096 2388     		ldrh	r3, [r4]	@ unaligned
 15671 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2283:..\src/command_processing.c ****             break;
 15672              		.loc 1 2283 0
 15673 009a 00BF     		nop
 15674              	.L639:
2284:..\src/command_processing.c ****     }
2285:..\src/command_processing.c **** 
2286:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15675              		.loc 1 2286 0
 15676 009c D7F88C30 		ldr	r3, [r7, #140]
 15677 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15678 00a4 1A46     		mov	r2, r3
 15679 00a6 D7F88C30 		ldr	r3, [r7, #140]
 15680 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15681 00ae 1946     		mov	r1, r3
 15682 00b0 D7F88C30 		ldr	r3, [r7, #140]
 15683 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15684 00b8 07F11C00 		add	r0, r7, #28
 15685 00bc 0093     		str	r3, [sp]
 15686 00be 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 354


 15687 00c0 8349     		ldr	r1, .L702+24
 15688 00c2 FFF7FEFF 		bl	sprintf
2287:..\src/command_processing.c ****     strcat(info_string, str);
 15689              		.loc 1 2287 0
 15690 00c6 07F11C03 		add	r3, r7, #28
 15691 00ca 1946     		mov	r1, r3
 15692 00cc 7869     		ldr	r0, [r7, #20]
 15693 00ce FFF7FEFF 		bl	strcat
2288:..\src/command_processing.c ****     
2289:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15694              		.loc 1 2289 0
 15695 00d2 D7F88C30 		ldr	r3, [r7, #140]
 15696 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15697 00da 1A46     		mov	r2, r3
 15698 00dc D7F88C30 		ldr	r3, [r7, #140]
 15699 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15700 00e4 1946     		mov	r1, r3
 15701 00e6 D7F88C30 		ldr	r3, [r7, #140]
 15702 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15703 00ee 07F11C00 		add	r0, r7, #28
 15704 00f2 0093     		str	r3, [sp]
 15705 00f4 0B46     		mov	r3, r1
 15706 00f6 7749     		ldr	r1, .L702+28
 15707 00f8 FFF7FEFF 		bl	sprintf
2290:..\src/command_processing.c ****     strcat(info_string, str);
 15708              		.loc 1 2290 0
 15709 00fc 07F11C03 		add	r3, r7, #28
 15710 0100 1946     		mov	r1, r3
 15711 0102 7869     		ldr	r0, [r7, #20]
 15712 0104 FFF7FEFF 		bl	strcat
 15713              	.LBB19:
2291:..\src/command_processing.c ****     
2292:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 15714              		.loc 1 2292 0
 15715 0108 0023     		movs	r3, #0
 15716 010a 87F89330 		strb	r3, [r7, #147]
 15717 010e 00F039BE 		b	.L642
 15718              	.L685:
 15719              	.LBB20:
2293:..\src/command_processing.c ****             
2294:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 15720              		.loc 1 2294 0
 15721 0112 97F89330 		ldrb	r3, [r7, #147]
 15722 0116 87F88B30 		strb	r3, [r7, #139]
2295:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 15723              		.loc 1 2295 0
 15724 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 15725 011e 1346     		mov	r3, r2
 15726 0120 DB00     		lsls	r3, r3, #3
 15727 0122 9B1A     		subs	r3, r3, r2
 15728 0124 1B01     		lsls	r3, r3, #4
 15729 0126 B033     		adds	r3, r3, #176
 15730 0128 D7F88C20 		ldr	r2, [r7, #140]
 15731 012c 1344     		add	r3, r3, r2
 15732 012e C7F88430 		str	r3, [r7, #132]
2296:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 15733              		.loc 1 2296 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 355


 15734 0132 D7F88430 		ldr	r3, [r7, #132]
 15735 0136 93F86030 		ldrb	r3, [r3, #96]
 15736 013a 87F88330 		strb	r3, [r7, #131]
2297:..\src/command_processing.c ****               
2298:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 15737              		.loc 1 2298 0
 15738 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15739 0142 5A1C     		adds	r2, r3, #1
 15740 0144 07F11C03 		add	r3, r7, #28
 15741 0148 6349     		ldr	r1, .L702+32
 15742 014a 1846     		mov	r0, r3
 15743 014c FFF7FEFF 		bl	sprintf
2299:..\src/command_processing.c ****         strcat(info_string, str);
 15744              		.loc 1 2299 0
 15745 0150 07F11C03 		add	r3, r7, #28
 15746 0154 1946     		mov	r1, r3
 15747 0156 7869     		ldr	r0, [r7, #20]
 15748 0158 FFF7FEFF 		bl	strcat
2300:..\src/command_processing.c ****                     
2301:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 15749              		.loc 1 2301 0
 15750 015c 7869     		ldr	r0, [r7, #20]
 15751 015e FFF7FEFF 		bl	strlen
 15752 0162 0346     		mov	r3, r0
 15753 0164 1A46     		mov	r2, r3
 15754 0166 7B69     		ldr	r3, [r7, #20]
 15755 0168 1344     		add	r3, r3, r2
 15756 016a 5C4A     		ldr	r2, .L702+36
 15757 016c 1D46     		mov	r5, r3
 15758 016e 1446     		mov	r4, r2
 15759 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15760 0172 2860     		str	r0, [r5]	@ unaligned
 15761 0174 6960     		str	r1, [r5, #4]	@ unaligned
 15762 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 15763 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 15764 017a 03CC     		ldmia	r4!, {r0, r1}
 15765 017c 2861     		str	r0, [r5, #16]	@ unaligned
 15766 017e 6961     		str	r1, [r5, #20]	@ unaligned
 15767 0180 2388     		ldrh	r3, [r4]	@ unaligned
 15768 0182 A278     		ldrb	r2, [r4, #2]
 15769 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 15770 0186 1346     		mov	r3, r2
 15771 0188 AB76     		strb	r3, [r5, #26]
2302:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 15772              		.loc 1 2302 0
 15773 018a D7F88430 		ldr	r3, [r7, #132]
 15774 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 15775 0192 012B     		cmp	r3, #1
 15776 0194 0CD1     		bne	.L643
2303:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 15777              		.loc 1 2303 0
 15778 0196 7869     		ldr	r0, [r7, #20]
 15779 0198 FFF7FEFF 		bl	strlen
 15780 019c 0346     		mov	r3, r0
 15781 019e 1A46     		mov	r2, r3
 15782 01a0 7B69     		ldr	r3, [r7, #20]
 15783 01a2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 356


 15784 01a4 4E4A     		ldr	r2, .L702+40
 15785 01a6 1068     		ldr	r0, [r2]	@ unaligned
 15786 01a8 1860     		str	r0, [r3]	@ unaligned
 15787 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15788 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 15789 01ae 0BE0     		b	.L644
 15790              	.L643:
2304:..\src/command_processing.c ****         else
2305:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 15791              		.loc 1 2305 0
 15792 01b0 7869     		ldr	r0, [r7, #20]
 15793 01b2 FFF7FEFF 		bl	strlen
 15794 01b6 0346     		mov	r3, r0
 15795 01b8 1A46     		mov	r2, r3
 15796 01ba 7B69     		ldr	r3, [r7, #20]
 15797 01bc 1344     		add	r3, r3, r2
 15798 01be 494A     		ldr	r2, .L702+44
 15799 01c0 1068     		ldr	r0, [r2]	@ unaligned
 15800 01c2 1860     		str	r0, [r3]	@ unaligned
 15801 01c4 1279     		ldrb	r2, [r2, #4]
 15802 01c6 1A71     		strb	r2, [r3, #4]
 15803              	.L644:
2306:..\src/command_processing.c ****         
2307:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 15804              		.loc 1 2307 0
 15805 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 15806 01cc 464A     		ldr	r2, .L702+48
 15807 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15808 01d0 1A46     		mov	r2, r3
 15809 01d2 07F11C03 		add	r3, r7, #28
 15810 01d6 4549     		ldr	r1, .L702+52
 15811 01d8 1846     		mov	r0, r3
 15812 01da FFF7FEFF 		bl	sprintf
2308:..\src/command_processing.c ****         strcat(info_string, str);
 15813              		.loc 1 2308 0
 15814 01de 07F11C03 		add	r3, r7, #28
 15815 01e2 1946     		mov	r1, r3
 15816 01e4 7869     		ldr	r0, [r7, #20]
 15817 01e6 FFF7FEFF 		bl	strcat
2309:..\src/command_processing.c **** 
2310:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 15818              		.loc 1 2310 0
 15819 01ea 7869     		ldr	r0, [r7, #20]
 15820 01ec FFF7FEFF 		bl	strlen
 15821 01f0 0346     		mov	r3, r0
 15822 01f2 1A46     		mov	r2, r3
 15823 01f4 7B69     		ldr	r3, [r7, #20]
 15824 01f6 1344     		add	r3, r3, r2
 15825 01f8 3D4A     		ldr	r2, .L702+56
 15826 01fa 1C46     		mov	r4, r3
 15827 01fc 1346     		mov	r3, r2
 15828 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 15829 0200 2060     		str	r0, [r4]	@ unaligned
 15830 0202 6160     		str	r1, [r4, #4]	@ unaligned
 15831 0204 A260     		str	r2, [r4, #8]	@ unaligned
 15832 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 15833 0208 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 357


 15834 020a A281     		strh	r2, [r4, #12]	@ unaligned
 15835 020c A373     		strb	r3, [r4, #14]
2311:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 15836              		.loc 1 2311 0
 15837 020e D7F88430 		ldr	r3, [r7, #132]
 15838 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 15839 0216 032B     		cmp	r3, #3
 15840 0218 74D0     		beq	.L645
2312:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 15841              		.loc 1 2312 0
 15842 021a D7F88430 		ldr	r3, [r7, #132]
 15843 021e 1B68     		ldr	r3, [r3]
 15844 0220 1846     		mov	r0, r3
 15845 0222 FFF7FEFF 		bl	__aeabi_i2d
 15846 0226 4FF00002 		mov	r2, #0
 15847 022a 324B     		ldr	r3, .L702+60
 15848 022c FFF7FEFF 		bl	__aeabi_ddiv
 15849 0230 0346     		mov	r3, r0
 15850 0232 0C46     		mov	r4, r1
 15851 0234 07F11C00 		add	r0, r7, #28
 15852 0238 1A46     		mov	r2, r3
 15853 023a 2346     		mov	r3, r4
 15854 023c 2E49     		ldr	r1, .L702+64
 15855 023e FFF7FEFF 		bl	sprintf
2313:..\src/command_processing.c ****             strcat(info_string, str);
 15856              		.loc 1 2313 0
 15857 0242 07F11C03 		add	r3, r7, #28
 15858 0246 1946     		mov	r1, r3
 15859 0248 7869     		ldr	r0, [r7, #20]
 15860 024a FFF7FEFF 		bl	strcat
2314:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 15861              		.loc 1 2314 0
 15862 024e D7F88430 		ldr	r3, [r7, #132]
 15863 0252 5B68     		ldr	r3, [r3, #4]
 15864 0254 1846     		mov	r0, r3
 15865 0256 FFF7FEFF 		bl	__aeabi_i2d
 15866 025a 4FF00002 		mov	r2, #0
 15867 025e 254B     		ldr	r3, .L702+60
 15868 0260 FFF7FEFF 		bl	__aeabi_ddiv
 15869 0264 0346     		mov	r3, r0
 15870 0266 0C46     		mov	r4, r1
 15871 0268 07F11C00 		add	r0, r7, #28
 15872 026c 1A46     		mov	r2, r3
 15873 026e 2346     		mov	r3, r4
 15874 0270 2249     		ldr	r1, .L702+68
 15875 0272 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****             strcat(info_string, str);
 15876              		.loc 1 2315 0
 15877 0276 07F11C03 		add	r3, r7, #28
 15878 027a 1946     		mov	r1, r3
 15879 027c 7869     		ldr	r0, [r7, #20]
 15880 027e FFF7FEFF 		bl	strcat
2316:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 15881              		.loc 1 2316 0
 15882 0282 D7F88430 		ldr	r3, [r7, #132]
 15883 0286 9B68     		ldr	r3, [r3, #8]
 15884 0288 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 358


 15885 028a FFF7FEFF 		bl	__aeabi_i2d
 15886 028e 4FF00002 		mov	r2, #0
 15887 0292 184B     		ldr	r3, .L702+60
 15888 0294 FFF7FEFF 		bl	__aeabi_ddiv
 15889 0298 0346     		mov	r3, r0
 15890 029a 0C46     		mov	r4, r1
 15891 029c 07F11C00 		add	r0, r7, #28
 15892 02a0 1A46     		mov	r2, r3
 15893 02a2 2346     		mov	r3, r4
 15894 02a4 1649     		ldr	r1, .L702+72
 15895 02a6 FFF7FEFF 		bl	sprintf
2317:..\src/command_processing.c ****             strcat(info_string, str);
 15896              		.loc 1 2317 0
 15897 02aa 07F11C03 		add	r3, r7, #28
 15898 02ae 1946     		mov	r1, r3
 15899 02b0 7869     		ldr	r0, [r7, #20]
 15900 02b2 FFF7FEFF 		bl	strcat
 15901 02b6 73E0     		b	.L646
 15902              	.L703:
 15903              		.align	2
 15904              	.L702:
 15905 02b8 00000000 		.word	g_mem
 15906 02bc D80D0000 		.word	.LC128
 15907 02c0 58170000 		.word	.LC230
 15908 02c4 180E0000 		.word	.LC131
 15909 02c8 580E0000 		.word	.LC134
 15910 02cc 6C0E0000 		.word	.LC135
 15911 02d0 9C150000 		.word	.LC218
 15912 02d4 C8150000 		.word	.LC219
 15913 02d8 B80E0000 		.word	.LC139
 15914 02dc 280F0000 		.word	.LC148
 15915 02e0 180F0000 		.word	.LC146
 15916 02e4 200F0000 		.word	.LC147
 15917 02e8 00000000 		.word	dev_pwm_limit
 15918 02ec 500F0000 		.word	.LC151
 15919 02f0 70170000 		.word	.LC231
 15920 02f4 0000F040 		.word	1089470464
 15921 02f8 48100000 		.word	.LC162
 15922 02fc 54100000 		.word	.LC163
 15923 0300 60100000 		.word	.LC164
 15924              	.L645:
2318:..\src/command_processing.c ****         }
2319:..\src/command_processing.c ****         else { 
2320:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 15925              		.loc 1 2320 0
 15926 0304 D7F88430 		ldr	r3, [r7, #132]
 15927 0308 9B69     		ldr	r3, [r3, #24]
 15928 030a 1846     		mov	r0, r3
 15929 030c FFF7FEFF 		bl	__aeabi_i2d
 15930 0310 4FF00002 		mov	r2, #0
 15931 0314 CB4B     		ldr	r3, .L704
 15932 0316 FFF7FEFF 		bl	__aeabi_ddiv
 15933 031a 0346     		mov	r3, r0
 15934 031c 0C46     		mov	r4, r1
 15935 031e 07F11C00 		add	r0, r7, #28
 15936 0322 1A46     		mov	r2, r3
 15937 0324 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 359


 15938 0326 C849     		ldr	r1, .L704+4
 15939 0328 FFF7FEFF 		bl	sprintf
2321:..\src/command_processing.c ****             strcat(info_string, str);
 15940              		.loc 1 2321 0
 15941 032c 07F11C03 		add	r3, r7, #28
 15942 0330 1946     		mov	r1, r3
 15943 0332 7869     		ldr	r0, [r7, #20]
 15944 0334 FFF7FEFF 		bl	strcat
2322:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 15945              		.loc 1 2322 0
 15946 0338 D7F88430 		ldr	r3, [r7, #132]
 15947 033c DB69     		ldr	r3, [r3, #28]
 15948 033e 1846     		mov	r0, r3
 15949 0340 FFF7FEFF 		bl	__aeabi_i2d
 15950 0344 4FF00002 		mov	r2, #0
 15951 0348 BE4B     		ldr	r3, .L704
 15952 034a FFF7FEFF 		bl	__aeabi_ddiv
 15953 034e 0346     		mov	r3, r0
 15954 0350 0C46     		mov	r4, r1
 15955 0352 07F11C00 		add	r0, r7, #28
 15956 0356 1A46     		mov	r2, r3
 15957 0358 2346     		mov	r3, r4
 15958 035a BC49     		ldr	r1, .L704+8
 15959 035c FFF7FEFF 		bl	sprintf
2323:..\src/command_processing.c ****             strcat(info_string, str);
 15960              		.loc 1 2323 0
 15961 0360 07F11C03 		add	r3, r7, #28
 15962 0364 1946     		mov	r1, r3
 15963 0366 7869     		ldr	r0, [r7, #20]
 15964 0368 FFF7FEFF 		bl	strcat
2324:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 15965              		.loc 1 2324 0
 15966 036c D7F88430 		ldr	r3, [r7, #132]
 15967 0370 1B6A     		ldr	r3, [r3, #32]
 15968 0372 1846     		mov	r0, r3
 15969 0374 FFF7FEFF 		bl	__aeabi_i2d
 15970 0378 4FF00002 		mov	r2, #0
 15971 037c B14B     		ldr	r3, .L704
 15972 037e FFF7FEFF 		bl	__aeabi_ddiv
 15973 0382 0346     		mov	r3, r0
 15974 0384 0C46     		mov	r4, r1
 15975 0386 07F11C00 		add	r0, r7, #28
 15976 038a 1A46     		mov	r2, r3
 15977 038c 2346     		mov	r3, r4
 15978 038e B049     		ldr	r1, .L704+12
 15979 0390 FFF7FEFF 		bl	sprintf
2325:..\src/command_processing.c ****             strcat(info_string, str);
 15980              		.loc 1 2325 0
 15981 0394 07F11C03 		add	r3, r7, #28
 15982 0398 1946     		mov	r1, r3
 15983 039a 7869     		ldr	r0, [r7, #20]
 15984 039c FFF7FEFF 		bl	strcat
 15985              	.L646:
2326:..\src/command_processing.c ****         }
2327:..\src/command_processing.c **** 
2328:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 15986              		.loc 1 2328 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 360


 15987 03a0 7869     		ldr	r0, [r7, #20]
 15988 03a2 FFF7FEFF 		bl	strlen
 15989 03a6 0346     		mov	r3, r0
 15990 03a8 1A46     		mov	r2, r3
 15991 03aa 7B69     		ldr	r3, [r7, #20]
 15992 03ac 1344     		add	r3, r3, r2
 15993 03ae A94A     		ldr	r2, .L704+16
 15994 03b0 1C46     		mov	r4, r3
 15995 03b2 1346     		mov	r3, r2
 15996 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 15997 03b6 2060     		str	r0, [r4]	@ unaligned
 15998 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 15999 03ba A260     		str	r2, [r4, #8]	@ unaligned
 16000 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16001 03be A381     		strh	r3, [r4, #12]	@ unaligned
2329:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 16002              		.loc 1 2329 0
 16003 03c0 D7F88430 		ldr	r3, [r7, #132]
 16004 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16005 03c8 032B     		cmp	r3, #3
 16006 03ca 4ED0     		beq	.L647
2330:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 16007              		.loc 1 2330 0
 16008 03cc D7F88430 		ldr	r3, [r7, #132]
 16009 03d0 DB68     		ldr	r3, [r3, #12]
 16010 03d2 1846     		mov	r0, r3
 16011 03d4 FFF7FEFF 		bl	__aeabi_i2d
 16012 03d8 4FF00002 		mov	r2, #0
 16013 03dc 994B     		ldr	r3, .L704
 16014 03de FFF7FEFF 		bl	__aeabi_ddiv
 16015 03e2 0346     		mov	r3, r0
 16016 03e4 0C46     		mov	r4, r1
 16017 03e6 07F11C00 		add	r0, r7, #28
 16018 03ea 1A46     		mov	r2, r3
 16019 03ec 2346     		mov	r3, r4
 16020 03ee 9649     		ldr	r1, .L704+4
 16021 03f0 FFF7FEFF 		bl	sprintf
2331:..\src/command_processing.c ****             strcat(info_string, str);
 16022              		.loc 1 2331 0
 16023 03f4 07F11C03 		add	r3, r7, #28
 16024 03f8 1946     		mov	r1, r3
 16025 03fa 7869     		ldr	r0, [r7, #20]
 16026 03fc FFF7FEFF 		bl	strcat
2332:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 16027              		.loc 1 2332 0
 16028 0400 D7F88430 		ldr	r3, [r7, #132]
 16029 0404 1B69     		ldr	r3, [r3, #16]
 16030 0406 1846     		mov	r0, r3
 16031 0408 FFF7FEFF 		bl	__aeabi_i2d
 16032 040c 4FF00002 		mov	r2, #0
 16033 0410 8C4B     		ldr	r3, .L704
 16034 0412 FFF7FEFF 		bl	__aeabi_ddiv
 16035 0416 0346     		mov	r3, r0
 16036 0418 0C46     		mov	r4, r1
 16037 041a 07F11C00 		add	r0, r7, #28
 16038 041e 1A46     		mov	r2, r3
 16039 0420 2346     		mov	r3, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 361


 16040 0422 8A49     		ldr	r1, .L704+8
 16041 0424 FFF7FEFF 		bl	sprintf
2333:..\src/command_processing.c ****             strcat(info_string, str);
 16042              		.loc 1 2333 0
 16043 0428 07F11C03 		add	r3, r7, #28
 16044 042c 1946     		mov	r1, r3
 16045 042e 7869     		ldr	r0, [r7, #20]
 16046 0430 FFF7FEFF 		bl	strcat
2334:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 16047              		.loc 1 2334 0
 16048 0434 D7F88430 		ldr	r3, [r7, #132]
 16049 0438 5B69     		ldr	r3, [r3, #20]
 16050 043a 1846     		mov	r0, r3
 16051 043c FFF7FEFF 		bl	__aeabi_i2d
 16052 0440 4FF00002 		mov	r2, #0
 16053 0444 7F4B     		ldr	r3, .L704
 16054 0446 FFF7FEFF 		bl	__aeabi_ddiv
 16055 044a 0346     		mov	r3, r0
 16056 044c 0C46     		mov	r4, r1
 16057 044e 07F11C00 		add	r0, r7, #28
 16058 0452 1A46     		mov	r2, r3
 16059 0454 2346     		mov	r3, r4
 16060 0456 7E49     		ldr	r1, .L704+12
 16061 0458 FFF7FEFF 		bl	sprintf
2335:..\src/command_processing.c ****             strcat(info_string, str);
 16062              		.loc 1 2335 0
 16063 045c 07F11C03 		add	r3, r7, #28
 16064 0460 1946     		mov	r1, r3
 16065 0462 7869     		ldr	r0, [r7, #20]
 16066 0464 FFF7FEFF 		bl	strcat
 16067 0468 4DE0     		b	.L648
 16068              	.L647:
2336:..\src/command_processing.c **** 
2337:..\src/command_processing.c ****         }
2338:..\src/command_processing.c ****         else {
2339:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 16069              		.loc 1 2339 0
 16070 046a D7F88430 		ldr	r3, [r7, #132]
 16071 046e 5B6A     		ldr	r3, [r3, #36]
 16072 0470 1846     		mov	r0, r3
 16073 0472 FFF7FEFF 		bl	__aeabi_i2d
 16074 0476 4FF00002 		mov	r2, #0
 16075 047a 724B     		ldr	r3, .L704
 16076 047c FFF7FEFF 		bl	__aeabi_ddiv
 16077 0480 0346     		mov	r3, r0
 16078 0482 0C46     		mov	r4, r1
 16079 0484 07F11C00 		add	r0, r7, #28
 16080 0488 1A46     		mov	r2, r3
 16081 048a 2346     		mov	r3, r4
 16082 048c 6E49     		ldr	r1, .L704+4
 16083 048e FFF7FEFF 		bl	sprintf
2340:..\src/command_processing.c ****             strcat(info_string, str);
 16084              		.loc 1 2340 0
 16085 0492 07F11C03 		add	r3, r7, #28
 16086 0496 1946     		mov	r1, r3
 16087 0498 7869     		ldr	r0, [r7, #20]
 16088 049a FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 362


2341:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 16089              		.loc 1 2341 0
 16090 049e D7F88430 		ldr	r3, [r7, #132]
 16091 04a2 9B6A     		ldr	r3, [r3, #40]
 16092 04a4 1846     		mov	r0, r3
 16093 04a6 FFF7FEFF 		bl	__aeabi_i2d
 16094 04aa 4FF00002 		mov	r2, #0
 16095 04ae 654B     		ldr	r3, .L704
 16096 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 16097 04b4 0346     		mov	r3, r0
 16098 04b6 0C46     		mov	r4, r1
 16099 04b8 07F11C00 		add	r0, r7, #28
 16100 04bc 1A46     		mov	r2, r3
 16101 04be 2346     		mov	r3, r4
 16102 04c0 6249     		ldr	r1, .L704+8
 16103 04c2 FFF7FEFF 		bl	sprintf
2342:..\src/command_processing.c ****             strcat(info_string, str);
 16104              		.loc 1 2342 0
 16105 04c6 07F11C03 		add	r3, r7, #28
 16106 04ca 1946     		mov	r1, r3
 16107 04cc 7869     		ldr	r0, [r7, #20]
 16108 04ce FFF7FEFF 		bl	strcat
2343:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 16109              		.loc 1 2343 0
 16110 04d2 D7F88430 		ldr	r3, [r7, #132]
 16111 04d6 DB6A     		ldr	r3, [r3, #44]
 16112 04d8 1846     		mov	r0, r3
 16113 04da FFF7FEFF 		bl	__aeabi_i2d
 16114 04de 4FF00002 		mov	r2, #0
 16115 04e2 584B     		ldr	r3, .L704
 16116 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 16117 04e8 0346     		mov	r3, r0
 16118 04ea 0C46     		mov	r4, r1
 16119 04ec 07F11C00 		add	r0, r7, #28
 16120 04f0 1A46     		mov	r2, r3
 16121 04f2 2346     		mov	r3, r4
 16122 04f4 5649     		ldr	r1, .L704+12
 16123 04f6 FFF7FEFF 		bl	sprintf
2344:..\src/command_processing.c ****             strcat(info_string, str);
 16124              		.loc 1 2344 0
 16125 04fa 07F11C03 		add	r3, r7, #28
 16126 04fe 1946     		mov	r1, r3
 16127 0500 7869     		ldr	r0, [r7, #20]
 16128 0502 FFF7FEFF 		bl	strcat
 16129              	.L648:
2345:..\src/command_processing.c ****         }
2346:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 16130              		.loc 1 2346 0
 16131 0506 D7F88430 		ldr	r3, [r7, #132]
 16132 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 16133 050e 012B     		cmp	r3, #1
 16134 0510 14D1     		bne	.L649
2347:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 16135              		.loc 1 2347 0
 16136 0512 7869     		ldr	r0, [r7, #20]
 16137 0514 FFF7FEFF 		bl	strlen
 16138 0518 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 363


 16139 051a 1A46     		mov	r2, r3
 16140 051c 7B69     		ldr	r3, [r7, #20]
 16141 051e 1344     		add	r3, r3, r2
 16142 0520 4D4A     		ldr	r2, .L704+20
 16143 0522 1D46     		mov	r5, r3
 16144 0524 1446     		mov	r4, r2
 16145 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16146 0528 2860     		str	r0, [r5]	@ unaligned
 16147 052a 6960     		str	r1, [r5, #4]	@ unaligned
 16148 052c AA60     		str	r2, [r5, #8]	@ unaligned
 16149 052e EB60     		str	r3, [r5, #12]	@ unaligned
 16150 0530 03CC     		ldmia	r4!, {r0, r1}
 16151 0532 2861     		str	r0, [r5, #16]	@ unaligned
 16152 0534 6961     		str	r1, [r5, #20]	@ unaligned
 16153 0536 2388     		ldrh	r3, [r4]	@ unaligned
 16154 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 16155 053a 13E0     		b	.L650
 16156              	.L649:
2348:..\src/command_processing.c ****         else
2349:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 16157              		.loc 1 2349 0
 16158 053c 7869     		ldr	r0, [r7, #20]
 16159 053e FFF7FEFF 		bl	strlen
 16160 0542 0346     		mov	r3, r0
 16161 0544 1A46     		mov	r2, r3
 16162 0546 7B69     		ldr	r3, [r7, #20]
 16163 0548 1344     		add	r3, r3, r2
 16164 054a 444A     		ldr	r2, .L704+24
 16165 054c 1D46     		mov	r5, r3
 16166 054e 1446     		mov	r4, r2
 16167 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16168 0552 2860     		str	r0, [r5]	@ unaligned
 16169 0554 6960     		str	r1, [r5, #4]	@ unaligned
 16170 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 16171 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 16172 055a 03CC     		ldmia	r4!, {r0, r1}
 16173 055c 2861     		str	r0, [r5, #16]	@ unaligned
 16174 055e 6961     		str	r1, [r5, #20]	@ unaligned
 16175 0560 2378     		ldrb	r3, [r4]
 16176 0562 2B76     		strb	r3, [r5, #24]
 16177              	.L650:
2350:..\src/command_processing.c **** 
2351:..\src/command_processing.c ****         switch(MOT->input_mode) {
 16178              		.loc 1 2351 0
 16179 0564 D7F88430 		ldr	r3, [r7, #132]
 16180 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16181 056c 062B     		cmp	r3, #6
 16182 056e 00F2D180 		bhi	.L651
 16183 0572 01A2     		adr	r2, .L653
 16184 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16185              		.p2align 2
 16186              	.L653:
 16187 0578 95050000 		.word	.L652+1
 16188 057c B9050000 		.word	.L654+1
 16189 0580 E1050000 		.word	.L655+1
 16190 0584 13060000 		.word	.L656+1
 16191 0588 71060000 		.word	.L657+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 364


 16192 058c 9F060000 		.word	.L658+1
 16193 0590 CF060000 		.word	.L659+1
 16194              		.p2align 1
 16195              	.L652:
2352:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2353:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 16196              		.loc 1 2353 0
 16197 0594 7869     		ldr	r0, [r7, #20]
 16198 0596 FFF7FEFF 		bl	strlen
 16199 059a 0346     		mov	r3, r0
 16200 059c 1A46     		mov	r2, r3
 16201 059e 7B69     		ldr	r3, [r7, #20]
 16202 05a0 1344     		add	r3, r3, r2
 16203 05a2 2F4A     		ldr	r2, .L704+28
 16204 05a4 1D46     		mov	r5, r3
 16205 05a6 1446     		mov	r4, r2
 16206 05a8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16207 05aa 2860     		str	r0, [r5]	@ unaligned
 16208 05ac 6960     		str	r1, [r5, #4]	@ unaligned
 16209 05ae AA60     		str	r2, [r5, #8]	@ unaligned
 16210 05b0 EB60     		str	r3, [r5, #12]	@ unaligned
 16211 05b2 2388     		ldrh	r3, [r4]	@ unaligned
 16212 05b4 2B82     		strh	r3, [r5, #16]	@ unaligned
2354:..\src/command_processing.c ****                 break;
 16213              		.loc 1 2354 0
 16214 05b6 ADE0     		b	.L651
 16215              	.L654:
2355:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2356:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 16216              		.loc 1 2356 0
 16217 05b8 7869     		ldr	r0, [r7, #20]
 16218 05ba FFF7FEFF 		bl	strlen
 16219 05be 0346     		mov	r3, r0
 16220 05c0 1A46     		mov	r2, r3
 16221 05c2 7B69     		ldr	r3, [r7, #20]
 16222 05c4 1344     		add	r3, r3, r2
 16223 05c6 274A     		ldr	r2, .L704+32
 16224 05c8 1D46     		mov	r5, r3
 16225 05ca 1446     		mov	r4, r2
 16226 05cc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16227 05ce 2860     		str	r0, [r5]	@ unaligned
 16228 05d0 6960     		str	r1, [r5, #4]	@ unaligned
 16229 05d2 AA60     		str	r2, [r5, #8]	@ unaligned
 16230 05d4 EB60     		str	r3, [r5, #12]	@ unaligned
 16231 05d6 2068     		ldr	r0, [r4]	@ unaligned
 16232 05d8 2861     		str	r0, [r5, #16]	@ unaligned
 16233 05da 2379     		ldrb	r3, [r4, #4]
 16234 05dc 2B75     		strb	r3, [r5, #20]
2357:..\src/command_processing.c ****                 break;
 16235              		.loc 1 2357 0
 16236 05de 99E0     		b	.L651
 16237              	.L655:
2358:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2359:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 16238              		.loc 1 2359 0
 16239 05e0 7869     		ldr	r0, [r7, #20]
 16240 05e2 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 365


 16241 05e6 0346     		mov	r3, r0
 16242 05e8 1A46     		mov	r2, r3
 16243 05ea 7B69     		ldr	r3, [r7, #20]
 16244 05ec 1344     		add	r3, r3, r2
 16245 05ee 1E4A     		ldr	r2, .L704+36
 16246 05f0 1D46     		mov	r5, r3
 16247 05f2 1446     		mov	r4, r2
 16248 05f4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16249 05f6 2860     		str	r0, [r5]	@ unaligned
 16250 05f8 6960     		str	r1, [r5, #4]	@ unaligned
 16251 05fa AA60     		str	r2, [r5, #8]	@ unaligned
 16252 05fc EB60     		str	r3, [r5, #12]	@ unaligned
 16253 05fe 07CC     		ldmia	r4!, {r0, r1, r2}
 16254 0600 2861     		str	r0, [r5, #16]	@ unaligned
 16255 0602 6961     		str	r1, [r5, #20]	@ unaligned
 16256 0604 AA61     		str	r2, [r5, #24]	@ unaligned
 16257 0606 2388     		ldrh	r3, [r4]	@ unaligned
 16258 0608 A278     		ldrb	r2, [r4, #2]
 16259 060a AB83     		strh	r3, [r5, #28]	@ unaligned
 16260 060c 1346     		mov	r3, r2
 16261 060e AB77     		strb	r3, [r5, #30]
2360:..\src/command_processing.c ****                 break;
 16262              		.loc 1 2360 0
 16263 0610 80E0     		b	.L651
 16264              	.L656:
2361:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2362:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 16265              		.loc 1 2362 0
 16266 0612 7869     		ldr	r0, [r7, #20]
 16267 0614 FFF7FEFF 		bl	strlen
 16268 0618 0346     		mov	r3, r0
 16269 061a 1A46     		mov	r2, r3
 16270 061c 7B69     		ldr	r3, [r7, #20]
 16271 061e 1344     		add	r3, r3, r2
 16272 0620 124A     		ldr	r2, .L704+40
 16273 0622 1D46     		mov	r5, r3
 16274 0624 1446     		mov	r4, r2
 16275 0626 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16276 0628 2860     		str	r0, [r5]	@ unaligned
 16277 062a 6960     		str	r1, [r5, #4]	@ unaligned
 16278 062c AA60     		str	r2, [r5, #8]	@ unaligned
 16279 062e EB60     		str	r3, [r5, #12]	@ unaligned
 16280 0630 03CC     		ldmia	r4!, {r0, r1}
 16281 0632 2861     		str	r0, [r5, #16]	@ unaligned
 16282 0634 6961     		str	r1, [r5, #20]	@ unaligned
 16283 0636 2388     		ldrh	r3, [r4]	@ unaligned
 16284 0638 A278     		ldrb	r2, [r4, #2]
 16285 063a 2B83     		strh	r3, [r5, #24]	@ unaligned
 16286 063c 1346     		mov	r3, r2
 16287 063e AB76     		strb	r3, [r5, #26]
2363:..\src/command_processing.c ****                 break;
 16288              		.loc 1 2363 0
 16289 0640 68E0     		b	.L651
 16290              	.L705:
 16291 0642 00BF     		.align	2
 16292              	.L704:
 16293 0644 0000F040 		.word	1089470464
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 366


 16294 0648 48100000 		.word	.LC162
 16295 064c 54100000 		.word	.LC163
 16296 0650 60100000 		.word	.LC164
 16297 0654 80170000 		.word	.LC232
 16298 0658 88100000 		.word	.LC166
 16299 065c A4100000 		.word	.LC167
 16300 0660 C0100000 		.word	.LC168
 16301 0664 D4100000 		.word	.LC169
 16302 0668 EC100000 		.word	.LC170
 16303 066c 0C110000 		.word	.LC171
 16304              	.L657:
2364:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2365:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 16305              		.loc 1 2365 0
 16306 0670 7869     		ldr	r0, [r7, #20]
 16307 0672 FFF7FEFF 		bl	strlen
 16308 0676 0346     		mov	r3, r0
 16309 0678 1A46     		mov	r2, r3
 16310 067a 7B69     		ldr	r3, [r7, #20]
 16311 067c 1344     		add	r3, r3, r2
 16312 067e AF4A     		ldr	r2, .L706
 16313 0680 1C46     		mov	r4, r3
 16314 0682 1546     		mov	r5, r2
 16315 0684 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16316 0686 2060     		str	r0, [r4]	@ unaligned
 16317 0688 6160     		str	r1, [r4, #4]	@ unaligned
 16318 068a A260     		str	r2, [r4, #8]	@ unaligned
 16319 068c E360     		str	r3, [r4, #12]	@ unaligned
 16320 068e 2868     		ldr	r0, [r5]	@ unaligned
 16321 0690 2061     		str	r0, [r4, #16]	@ unaligned
 16322 0692 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16323 0694 AA79     		ldrb	r2, [r5, #6]
 16324 0696 A382     		strh	r3, [r4, #20]	@ unaligned
 16325 0698 1346     		mov	r3, r2
 16326 069a A375     		strb	r3, [r4, #22]
2366:..\src/command_processing.c ****                 break;
 16327              		.loc 1 2366 0
 16328 069c 3AE0     		b	.L651
 16329              	.L658:
2367:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2368:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 16330              		.loc 1 2368 0
 16331 069e 7869     		ldr	r0, [r7, #20]
 16332 06a0 FFF7FEFF 		bl	strlen
 16333 06a4 0346     		mov	r3, r0
 16334 06a6 1A46     		mov	r2, r3
 16335 06a8 7B69     		ldr	r3, [r7, #20]
 16336 06aa 1344     		add	r3, r3, r2
 16337 06ac A44A     		ldr	r2, .L706+4
 16338 06ae 1D46     		mov	r5, r3
 16339 06b0 1446     		mov	r4, r2
 16340 06b2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16341 06b4 2860     		str	r0, [r5]	@ unaligned
 16342 06b6 6960     		str	r1, [r5, #4]	@ unaligned
 16343 06b8 AA60     		str	r2, [r5, #8]	@ unaligned
 16344 06ba EB60     		str	r3, [r5, #12]	@ unaligned
 16345 06bc 03CC     		ldmia	r4!, {r0, r1}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 367


 16346 06be 2861     		str	r0, [r5, #16]	@ unaligned
 16347 06c0 6961     		str	r1, [r5, #20]	@ unaligned
 16348 06c2 2388     		ldrh	r3, [r4]	@ unaligned
 16349 06c4 A278     		ldrb	r2, [r4, #2]
 16350 06c6 2B83     		strh	r3, [r5, #24]	@ unaligned
 16351 06c8 1346     		mov	r3, r2
 16352 06ca AB76     		strb	r3, [r5, #26]
2369:..\src/command_processing.c ****                 break;
 16353              		.loc 1 2369 0
 16354 06cc 22E0     		b	.L651
 16355              	.L659:
2370:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2371:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 16356              		.loc 1 2371 0
 16357 06ce 7869     		ldr	r0, [r7, #20]
 16358 06d0 FFF7FEFF 		bl	strlen
 16359 06d4 0346     		mov	r3, r0
 16360 06d6 1A46     		mov	r2, r3
 16361 06d8 7B69     		ldr	r3, [r7, #20]
 16362 06da 1344     		add	r3, r3, r2
 16363 06dc 994A     		ldr	r2, .L706+8
 16364 06de 1546     		mov	r5, r2
 16365 06e0 9E46     		mov	lr, r3
 16366 06e2 05F1200C 		add	ip, r5, #32
 16367              	.L660:
 16368 06e6 7446     		mov	r4, lr
 16369 06e8 2E46     		mov	r6, r5
 16370 06ea 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16371 06ec 2060     		str	r0, [r4]	@ unaligned
 16372 06ee 6160     		str	r1, [r4, #4]	@ unaligned
 16373 06f0 A260     		str	r2, [r4, #8]	@ unaligned
 16374 06f2 E360     		str	r3, [r4, #12]	@ unaligned
 16375 06f4 1035     		adds	r5, r5, #16
 16376 06f6 0EF1100E 		add	lr, lr, #16
 16377 06fa 6545     		cmp	r5, ip
 16378 06fc F3D1     		bne	.L660
 16379 06fe 7446     		mov	r4, lr
 16380 0700 2B46     		mov	r3, r5
 16381 0702 07CB     		ldmia	r3!, {r0, r1, r2}
 16382 0704 2060     		str	r0, [r4]	@ unaligned
 16383 0706 6160     		str	r1, [r4, #4]	@ unaligned
 16384 0708 A260     		str	r2, [r4, #8]	@ unaligned
 16385 070a 1A88     		ldrh	r2, [r3]	@ unaligned
 16386 070c 9B78     		ldrb	r3, [r3, #2]
 16387 070e A281     		strh	r2, [r4, #12]	@ unaligned
 16388 0710 A373     		strb	r3, [r4, #14]
2372:..\src/command_processing.c ****                     break;
 16389              		.loc 1 2372 0
 16390 0712 00BF     		nop
 16391              	.L651:
2373:..\src/command_processing.c ****         }
2374:..\src/command_processing.c **** 
2375:..\src/command_processing.c ****         switch(MOT->control_mode) {
 16392              		.loc 1 2375 0
 16393 0714 D7F88430 		ldr	r3, [r7, #132]
 16394 0718 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16395 071c 032B     		cmp	r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 368


 16396 071e 64D8     		bhi	.L700
 16397 0720 01A2     		adr	r2, .L663
 16398 0722 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16399 0726 00BF     		.p2align 2
 16400              	.L663:
 16401 0728 39070000 		.word	.L662+1
 16402 072c 63070000 		.word	.L664+1
 16403 0730 87070000 		.word	.L665+1
 16404 0734 AD070000 		.word	.L666+1
 16405              		.p2align 1
 16406              	.L662:
2376:..\src/command_processing.c ****             case CONTROL_ANGLE:
2377:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 16407              		.loc 1 2377 0
 16408 0738 7869     		ldr	r0, [r7, #20]
 16409 073a FFF7FEFF 		bl	strlen
 16410 073e 0346     		mov	r3, r0
 16411 0740 1A46     		mov	r2, r3
 16412 0742 7B69     		ldr	r3, [r7, #20]
 16413 0744 1344     		add	r3, r3, r2
 16414 0746 804A     		ldr	r2, .L706+12
 16415 0748 1D46     		mov	r5, r3
 16416 074a 1446     		mov	r4, r2
 16417 074c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16418 074e 2860     		str	r0, [r5]	@ unaligned
 16419 0750 6960     		str	r1, [r5, #4]	@ unaligned
 16420 0752 AA60     		str	r2, [r5, #8]	@ unaligned
 16421 0754 EB60     		str	r3, [r5, #12]	@ unaligned
 16422 0756 03CC     		ldmia	r4!, {r0, r1}
 16423 0758 2861     		str	r0, [r5, #16]	@ unaligned
 16424 075a 6961     		str	r1, [r5, #20]	@ unaligned
 16425 075c 2378     		ldrb	r3, [r4]
 16426 075e 2B76     		strb	r3, [r5, #24]
2378:..\src/command_processing.c ****                 break;
 16427              		.loc 1 2378 0
 16428 0760 44E0     		b	.L667
 16429              	.L664:
2379:..\src/command_processing.c ****             case CONTROL_PWM:
2380:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 16430              		.loc 1 2380 0
 16431 0762 7869     		ldr	r0, [r7, #20]
 16432 0764 FFF7FEFF 		bl	strlen
 16433 0768 0346     		mov	r3, r0
 16434 076a 1A46     		mov	r2, r3
 16435 076c 7B69     		ldr	r3, [r7, #20]
 16436 076e 1344     		add	r3, r3, r2
 16437 0770 764A     		ldr	r2, .L706+16
 16438 0772 1D46     		mov	r5, r3
 16439 0774 1446     		mov	r4, r2
 16440 0776 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16441 0778 2860     		str	r0, [r5]	@ unaligned
 16442 077a 6960     		str	r1, [r5, #4]	@ unaligned
 16443 077c AA60     		str	r2, [r5, #8]	@ unaligned
 16444 077e EB60     		str	r3, [r5, #12]	@ unaligned
 16445 0780 2068     		ldr	r0, [r4]	@ unaligned
 16446 0782 2861     		str	r0, [r5, #16]	@ unaligned
2381:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 369


 16447              		.loc 1 2381 0
 16448 0784 32E0     		b	.L667
 16449              	.L665:
2382:..\src/command_processing.c ****             case CONTROL_CURRENT:
2383:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 16450              		.loc 1 2383 0
 16451 0786 7869     		ldr	r0, [r7, #20]
 16452 0788 FFF7FEFF 		bl	strlen
 16453 078c 0346     		mov	r3, r0
 16454 078e 1A46     		mov	r2, r3
 16455 0790 7B69     		ldr	r3, [r7, #20]
 16456 0792 1344     		add	r3, r3, r2
 16457 0794 6E4A     		ldr	r2, .L706+20
 16458 0796 1D46     		mov	r5, r3
 16459 0798 1446     		mov	r4, r2
 16460 079a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16461 079c 2860     		str	r0, [r5]	@ unaligned
 16462 079e 6960     		str	r1, [r5, #4]	@ unaligned
 16463 07a0 AA60     		str	r2, [r5, #8]	@ unaligned
 16464 07a2 EB60     		str	r3, [r5, #12]	@ unaligned
 16465 07a4 03CC     		ldmia	r4!, {r0, r1}
 16466 07a6 2861     		str	r0, [r5, #16]	@ unaligned
 16467 07a8 6961     		str	r1, [r5, #20]	@ unaligned
2384:..\src/command_processing.c ****                 break;
 16468              		.loc 1 2384 0
 16469 07aa 1FE0     		b	.L667
 16470              	.L666:
2385:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2386:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 16471              		.loc 1 2386 0
 16472 07ac 7869     		ldr	r0, [r7, #20]
 16473 07ae FFF7FEFF 		bl	strlen
 16474 07b2 0346     		mov	r3, r0
 16475 07b4 1A46     		mov	r2, r3
 16476 07b6 7B69     		ldr	r3, [r7, #20]
 16477 07b8 1344     		add	r3, r3, r2
 16478 07ba 664A     		ldr	r2, .L706+24
 16479 07bc 1446     		mov	r4, r2
 16480 07be 9E46     		mov	lr, r3
 16481 07c0 04F1200C 		add	ip, r4, #32
 16482              	.L668:
 16483 07c4 7546     		mov	r5, lr
 16484 07c6 2646     		mov	r6, r4
 16485 07c8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16486 07ca 2860     		str	r0, [r5]	@ unaligned
 16487 07cc 6960     		str	r1, [r5, #4]	@ unaligned
 16488 07ce AA60     		str	r2, [r5, #8]	@ unaligned
 16489 07d0 EB60     		str	r3, [r5, #12]	@ unaligned
 16490 07d2 1034     		adds	r4, r4, #16
 16491 07d4 0EF1100E 		add	lr, lr, #16
 16492 07d8 6445     		cmp	r4, ip
 16493 07da F3D1     		bne	.L668
 16494 07dc 7346     		mov	r3, lr
 16495 07de 2246     		mov	r2, r4
 16496 07e0 1068     		ldr	r0, [r2]	@ unaligned
 16497 07e2 1860     		str	r0, [r3]	@ unaligned
 16498 07e4 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 370


 16499 07e6 1A71     		strb	r2, [r3, #4]
2387:..\src/command_processing.c ****                 break;
 16500              		.loc 1 2387 0
 16501 07e8 00E0     		b	.L667
 16502              	.L700:
2388:..\src/command_processing.c ****             default:
2389:..\src/command_processing.c ****                 break;
 16503              		.loc 1 2389 0
 16504 07ea 00BF     		nop
 16505              	.L667:
2390:..\src/command_processing.c ****         }
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 16506              		.loc 1 2392 0
 16507 07ec 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16508 07f0 D7F88C10 		ldr	r1, [r7, #140]
 16509 07f4 1346     		mov	r3, r2
 16510 07f6 5B00     		lsls	r3, r3, #1
 16511 07f8 1344     		add	r3, r3, r2
 16512 07fa 1B01     		lsls	r3, r3, #4
 16513 07fc 0B44     		add	r3, r3, r1
 16514 07fe 03F5D873 		add	r3, r3, #432
 16515 0802 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16516 0804 002B     		cmp	r3, #0
 16517 0806 1CD0     		beq	.L669
2393:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 16518              		.loc 1 2393 0
 16519 0808 7869     		ldr	r0, [r7, #20]
 16520 080a FFF7FEFF 		bl	strlen
 16521 080e 0346     		mov	r3, r0
 16522 0810 1A46     		mov	r2, r3
 16523 0812 7B69     		ldr	r3, [r7, #20]
 16524 0814 1344     		add	r3, r3, r2
 16525 0816 504A     		ldr	r2, .L706+28
 16526 0818 1446     		mov	r4, r2
 16527 081a 9E46     		mov	lr, r3
 16528 081c 04F1200C 		add	ip, r4, #32
 16529              	.L670:
 16530 0820 7546     		mov	r5, lr
 16531 0822 2646     		mov	r6, r4
 16532 0824 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16533 0826 2860     		str	r0, [r5]	@ unaligned
 16534 0828 6960     		str	r1, [r5, #4]	@ unaligned
 16535 082a AA60     		str	r2, [r5, #8]	@ unaligned
 16536 082c EB60     		str	r3, [r5, #12]	@ unaligned
 16537 082e 1034     		adds	r4, r4, #16
 16538 0830 0EF1100E 		add	lr, lr, #16
 16539 0834 6445     		cmp	r4, ip
 16540 0836 F3D1     		bne	.L670
 16541 0838 7346     		mov	r3, lr
 16542 083a 2246     		mov	r2, r4
 16543 083c 1278     		ldrb	r2, [r2]
 16544 083e 1A70     		strb	r2, [r3]
 16545 0840 13E0     		b	.L671
 16546              	.L669:
2394:..\src/command_processing.c ****         else
2395:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 371


 16547              		.loc 1 2395 0
 16548 0842 7869     		ldr	r0, [r7, #20]
 16549 0844 FFF7FEFF 		bl	strlen
 16550 0848 0346     		mov	r3, r0
 16551 084a 1A46     		mov	r2, r3
 16552 084c 7B69     		ldr	r3, [r7, #20]
 16553 084e 1344     		add	r3, r3, r2
 16554 0850 424A     		ldr	r2, .L706+32
 16555 0852 1C46     		mov	r4, r3
 16556 0854 1546     		mov	r5, r2
 16557 0856 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16558 0858 2060     		str	r0, [r4]	@ unaligned
 16559 085a 6160     		str	r1, [r4, #4]	@ unaligned
 16560 085c A260     		str	r2, [r4, #8]	@ unaligned
 16561 085e E360     		str	r3, [r4, #12]	@ unaligned
 16562 0860 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16563 0862 2061     		str	r0, [r4, #16]	@ unaligned
 16564 0864 6161     		str	r1, [r4, #20]	@ unaligned
 16565 0866 A261     		str	r2, [r4, #24]	@ unaligned
 16566 0868 E361     		str	r3, [r4, #28]	@ unaligned
 16567              	.L671:
2396:..\src/command_processing.c **** 
2397:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 16568              		.loc 1 2397 0
 16569 086a 7869     		ldr	r0, [r7, #20]
 16570 086c FFF7FEFF 		bl	strlen
 16571 0870 0346     		mov	r3, r0
 16572 0872 1A46     		mov	r2, r3
 16573 0874 7B69     		ldr	r3, [r7, #20]
 16574 0876 1344     		add	r3, r3, r2
 16575 0878 394A     		ldr	r2, .L706+36
 16576 087a 1C46     		mov	r4, r3
 16577 087c 1346     		mov	r3, r2
 16578 087e 07CB     		ldmia	r3!, {r0, r1, r2}
 16579 0880 2060     		str	r0, [r4]	@ unaligned
 16580 0882 6160     		str	r1, [r4, #4]	@ unaligned
 16581 0884 A260     		str	r2, [r4, #8]	@ unaligned
 16582 0886 1B88     		ldrh	r3, [r3]	@ unaligned
 16583 0888 A381     		strh	r3, [r4, #12]	@ unaligned
2398:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16584              		.loc 1 2398 0
 16585 088a 0023     		movs	r3, #0
 16586 088c C7F89430 		str	r3, [r7, #148]
 16587 0890 30E0     		b	.L672
 16588              	.L674:
2399:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16589              		.loc 1 2399 0
 16590 0892 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16591 0896 D7F88C10 		ldr	r1, [r7, #140]
 16592 089a 1346     		mov	r3, r2
 16593 089c 5B00     		lsls	r3, r3, #1
 16594 089e 1344     		add	r3, r3, r2
 16595 08a0 1B01     		lsls	r3, r3, #4
 16596 08a2 CA18     		adds	r2, r1, r3
 16597 08a4 D7F89430 		ldr	r3, [r7, #148]
 16598 08a8 1344     		add	r3, r3, r2
 16599 08aa 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 372


 16600 08ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16601 08b0 1A46     		mov	r2, r3
 16602 08b2 07F11C03 		add	r3, r7, #28
 16603 08b6 2B49     		ldr	r1, .L706+40
 16604 08b8 1846     		mov	r0, r3
 16605 08ba FFF7FEFF 		bl	sprintf
2400:..\src/command_processing.c ****             strcat(info_string, str);
 16606              		.loc 1 2400 0
 16607 08be 07F11C03 		add	r3, r7, #28
 16608 08c2 1946     		mov	r1, r3
 16609 08c4 7869     		ldr	r0, [r7, #20]
 16610 08c6 FFF7FEFF 		bl	strcat
2401:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16611              		.loc 1 2401 0
 16612 08ca D7F89430 		ldr	r3, [r7, #148]
 16613 08ce 022B     		cmp	r3, #2
 16614 08d0 0BD0     		beq	.L673
2402:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16615              		.loc 1 2402 0
 16616 08d2 7869     		ldr	r0, [r7, #20]
 16617 08d4 FFF7FEFF 		bl	strlen
 16618 08d8 0346     		mov	r3, r0
 16619 08da 1A46     		mov	r2, r3
 16620 08dc 7B69     		ldr	r3, [r7, #20]
 16621 08de 1344     		add	r3, r3, r2
 16622 08e0 214A     		ldr	r2, .L706+44
 16623 08e2 1188     		ldrh	r1, [r2]	@ unaligned
 16624 08e4 9278     		ldrb	r2, [r2, #2]
 16625 08e6 1980     		strh	r1, [r3]	@ unaligned
 16626 08e8 9A70     		strb	r2, [r3, #2]
 16627              	.L673:
2398:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16628              		.loc 1 2398 0 discriminator 2
 16629 08ea D7F89430 		ldr	r3, [r7, #148]
 16630 08ee 0133     		adds	r3, r3, #1
 16631 08f0 C7F89430 		str	r3, [r7, #148]
 16632              	.L672:
2398:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 16633              		.loc 1 2398 0 is_stmt 0 discriminator 1
 16634 08f4 D7F89430 		ldr	r3, [r7, #148]
 16635 08f8 022B     		cmp	r3, #2
 16636 08fa CADD     		ble	.L674
2403:..\src/command_processing.c ****             }                
2404:..\src/command_processing.c ****         }
2405:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16637              		.loc 1 2405 0 is_stmt 1
 16638 08fc 7869     		ldr	r0, [r7, #20]
 16639 08fe FFF7FEFF 		bl	strlen
 16640 0902 0346     		mov	r3, r0
 16641 0904 1A46     		mov	r2, r3
 16642 0906 7B69     		ldr	r3, [r7, #20]
 16643 0908 1344     		add	r3, r3, r2
 16644 090a 184A     		ldr	r2, .L706+48
 16645 090c 1188     		ldrh	r1, [r2]	@ unaligned
 16646 090e 9278     		ldrb	r2, [r2, #2]
 16647 0910 1980     		strh	r1, [r3]	@ unaligned
 16648 0912 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 373


2406:..\src/command_processing.c **** 
2407:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 16649              		.loc 1 2407 0
 16650 0914 7869     		ldr	r0, [r7, #20]
 16651 0916 FFF7FEFF 		bl	strlen
 16652 091a 0346     		mov	r3, r0
 16653 091c 1A46     		mov	r2, r3
 16654 091e 7B69     		ldr	r3, [r7, #20]
 16655 0920 1344     		add	r3, r3, r2
 16656 0922 1349     		ldr	r1, .L706+52
 16657 0924 1A46     		mov	r2, r3
 16658 0926 0B46     		mov	r3, r1
 16659 0928 03CB     		ldmia	r3!, {r0, r1}
 16660 092a 1060     		str	r0, [r2]	@ unaligned
 16661 092c 5160     		str	r1, [r2, #4]	@ unaligned
 16662 092e 1B88     		ldrh	r3, [r3]	@ unaligned
 16663 0930 1381     		strh	r3, [r2, #8]	@ unaligned
2408:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16664              		.loc 1 2408 0
 16665 0932 0023     		movs	r3, #0
 16666 0934 C7F89430 		str	r3, [r7, #148]
 16667 0938 5CE0     		b	.L675
 16668              	.L707:
 16669 093a 00BF     		.align	2
 16670              	.L706:
 16671 093c 28110000 		.word	.LC172
 16672 0940 40110000 		.word	.LC173
 16673 0944 5C110000 		.word	.LC174
 16674 0948 8C110000 		.word	.LC175
 16675 094c A8110000 		.word	.LC176
 16676 0950 BC110000 		.word	.LC177
 16677 0954 D4110000 		.word	.LC178
 16678 0958 FC110000 		.word	.LC179
 16679 095c 20120000 		.word	.LC180
 16680 0960 90170000 		.word	.LC233
 16681 0964 880F0000 		.word	.LC154
 16682 0968 8C0F0000 		.word	.LC155
 16683 096c C00D0000 		.word	.LC126
 16684 0970 A0170000 		.word	.LC234
 16685              	.L677:
2409:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16686              		.loc 1 2409 0
 16687 0974 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16688 0978 D7F88C10 		ldr	r1, [r7, #140]
 16689 097c 1346     		mov	r3, r2
 16690 097e 5B00     		lsls	r3, r3, #1
 16691 0980 1344     		add	r3, r3, r2
 16692 0982 9B00     		lsls	r3, r3, #2
 16693 0984 D7F89420 		ldr	r2, [r7, #148]
 16694 0988 1344     		add	r3, r3, r2
 16695 098a 6633     		adds	r3, r3, #102
 16696 098c 51F82310 		ldr	r1, [r1, r3, lsl #2]
 16697 0990 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16698 0994 D7F88C00 		ldr	r0, [r7, #140]
 16699 0998 1346     		mov	r3, r2
 16700 099a 5B00     		lsls	r3, r3, #1
 16701 099c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 374


 16702 099e 1B01     		lsls	r3, r3, #4
 16703 09a0 C218     		adds	r2, r0, r3
 16704 09a2 D7F89430 		ldr	r3, [r7, #148]
 16705 09a6 1344     		add	r3, r3, r2
 16706 09a8 03F29513 		addw	r3, r3, #405
 16707 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16708 09ae 41FA03F2 		asr	r2, r1, r3
 16709 09b2 07F11C03 		add	r3, r7, #28
 16710 09b6 CC49     		ldr	r1, .L708
 16711 09b8 1846     		mov	r0, r3
 16712 09ba FFF7FEFF 		bl	sprintf
2410:..\src/command_processing.c ****             strcat(info_string, str);
 16713              		.loc 1 2410 0
 16714 09be 07F11C03 		add	r3, r7, #28
 16715 09c2 1946     		mov	r1, r3
 16716 09c4 7869     		ldr	r0, [r7, #20]
 16717 09c6 FFF7FEFF 		bl	strcat
2411:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16718              		.loc 1 2411 0
 16719 09ca D7F89430 		ldr	r3, [r7, #148]
 16720 09ce 022B     		cmp	r3, #2
 16721 09d0 0BD0     		beq	.L676
2412:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16722              		.loc 1 2412 0
 16723 09d2 7869     		ldr	r0, [r7, #20]
 16724 09d4 FFF7FEFF 		bl	strlen
 16725 09d8 0346     		mov	r3, r0
 16726 09da 1A46     		mov	r2, r3
 16727 09dc 7B69     		ldr	r3, [r7, #20]
 16728 09de 1344     		add	r3, r3, r2
 16729 09e0 C24A     		ldr	r2, .L708+4
 16730 09e2 1188     		ldrh	r1, [r2]	@ unaligned
 16731 09e4 9278     		ldrb	r2, [r2, #2]
 16732 09e6 1980     		strh	r1, [r3]	@ unaligned
 16733 09e8 9A70     		strb	r2, [r3, #2]
 16734              	.L676:
2408:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16735              		.loc 1 2408 0 discriminator 2
 16736 09ea D7F89430 		ldr	r3, [r7, #148]
 16737 09ee 0133     		adds	r3, r3, #1
 16738 09f0 C7F89430 		str	r3, [r7, #148]
 16739              	.L675:
2408:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 16740              		.loc 1 2408 0 is_stmt 0 discriminator 1
 16741 09f4 D7F89430 		ldr	r3, [r7, #148]
 16742 09f8 022B     		cmp	r3, #2
 16743 09fa BBDD     		ble	.L677
2413:..\src/command_processing.c ****             }
2414:..\src/command_processing.c ****         }
2415:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 16744              		.loc 1 2415 0 is_stmt 1
 16745 09fc 7869     		ldr	r0, [r7, #20]
 16746 09fe FFF7FEFF 		bl	strlen
 16747 0a02 0346     		mov	r3, r0
 16748 0a04 1A46     		mov	r2, r3
 16749 0a06 7B69     		ldr	r3, [r7, #20]
 16750 0a08 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 375


 16751 0a0a B94A     		ldr	r2, .L708+8
 16752 0a0c 1188     		ldrh	r1, [r2]	@ unaligned
 16753 0a0e 9278     		ldrb	r2, [r2, #2]
 16754 0a10 1980     		strh	r1, [r3]	@ unaligned
 16755 0a12 9A70     		strb	r2, [r3, #2]
2416:..\src/command_processing.c ****             
2417:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 16756              		.loc 1 2417 0
 16757 0a14 7869     		ldr	r0, [r7, #20]
 16758 0a16 FFF7FEFF 		bl	strlen
 16759 0a1a 0346     		mov	r3, r0
 16760 0a1c 1A46     		mov	r2, r3
 16761 0a1e 7B69     		ldr	r3, [r7, #20]
 16762 0a20 1344     		add	r3, r3, r2
 16763 0a22 B44A     		ldr	r2, .L708+12
 16764 0a24 1C46     		mov	r4, r3
 16765 0a26 1346     		mov	r3, r2
 16766 0a28 07CB     		ldmia	r3!, {r0, r1, r2}
 16767 0a2a 2060     		str	r0, [r4]	@ unaligned
 16768 0a2c 6160     		str	r1, [r4, #4]	@ unaligned
 16769 0a2e A260     		str	r2, [r4, #8]	@ unaligned
 16770 0a30 1B88     		ldrh	r3, [r3]	@ unaligned
 16771 0a32 A381     		strh	r3, [r4, #12]	@ unaligned
2418:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 16772              		.loc 1 2418 0
 16773 0a34 0023     		movs	r3, #0
 16774 0a36 C7F89430 		str	r3, [r7, #148]
 16775 0a3a 35E0     		b	.L678
 16776              	.L680:
2419:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16777              		.loc 1 2419 0
 16778 0a3c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16779 0a40 D7F88C10 		ldr	r1, [r7, #140]
 16780 0a44 1346     		mov	r3, r2
 16781 0a46 5B00     		lsls	r3, r3, #1
 16782 0a48 1344     		add	r3, r3, r2
 16783 0a4a 9B00     		lsls	r3, r3, #2
 16784 0a4c D7F89420 		ldr	r2, [r7, #148]
 16785 0a50 1344     		add	r3, r3, r2
 16786 0a52 6833     		adds	r3, r3, #104
 16787 0a54 9B00     		lsls	r3, r3, #2
 16788 0a56 0B44     		add	r3, r3, r1
 16789 0a58 5B68     		ldr	r3, [r3, #4]	@ float
 16790 0a5a 1846     		mov	r0, r3
 16791 0a5c FFF7FEFF 		bl	__aeabi_f2d
 16792 0a60 0346     		mov	r3, r0
 16793 0a62 0C46     		mov	r4, r1
 16794 0a64 07F11C00 		add	r0, r7, #28
 16795 0a68 1A46     		mov	r2, r3
 16796 0a6a 2346     		mov	r3, r4
 16797 0a6c A249     		ldr	r1, .L708+16
 16798 0a6e FFF7FEFF 		bl	sprintf
2420:..\src/command_processing.c ****             strcat(info_string, str);
 16799              		.loc 1 2420 0
 16800 0a72 07F11C03 		add	r3, r7, #28
 16801 0a76 1946     		mov	r1, r3
 16802 0a78 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 376


 16803 0a7a FFF7FEFF 		bl	strcat
2421:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 16804              		.loc 1 2421 0
 16805 0a7e D7F89430 		ldr	r3, [r7, #148]
 16806 0a82 022B     		cmp	r3, #2
 16807 0a84 0BD0     		beq	.L679
2422:..\src/command_processing.c ****                 strcat(info_string, ", ");
 16808              		.loc 1 2422 0
 16809 0a86 7869     		ldr	r0, [r7, #20]
 16810 0a88 FFF7FEFF 		bl	strlen
 16811 0a8c 0346     		mov	r3, r0
 16812 0a8e 1A46     		mov	r2, r3
 16813 0a90 7B69     		ldr	r3, [r7, #20]
 16814 0a92 1344     		add	r3, r3, r2
 16815 0a94 954A     		ldr	r2, .L708+4
 16816 0a96 1188     		ldrh	r1, [r2]	@ unaligned
 16817 0a98 9278     		ldrb	r2, [r2, #2]
 16818 0a9a 1980     		strh	r1, [r3]	@ unaligned
 16819 0a9c 9A70     		strb	r2, [r3, #2]
 16820              	.L679:
2418:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16821              		.loc 1 2418 0 discriminator 2
 16822 0a9e D7F89430 		ldr	r3, [r7, #148]
 16823 0aa2 0133     		adds	r3, r3, #1
 16824 0aa4 C7F89430 		str	r3, [r7, #148]
 16825              	.L678:
2418:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 16826              		.loc 1 2418 0 is_stmt 0 discriminator 1
 16827 0aa8 D7F89430 		ldr	r3, [r7, #148]
 16828 0aac 022B     		cmp	r3, #2
 16829 0aae C5DD     		ble	.L680
2423:..\src/command_processing.c ****             }
2424:..\src/command_processing.c ****         }
2425:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 16830              		.loc 1 2425 0 is_stmt 1
 16831 0ab0 7869     		ldr	r0, [r7, #20]
 16832 0ab2 FFF7FEFF 		bl	strlen
 16833 0ab6 0346     		mov	r3, r0
 16834 0ab8 1A46     		mov	r2, r3
 16835 0aba 7B69     		ldr	r3, [r7, #20]
 16836 0abc 1344     		add	r3, r3, r2
 16837 0abe 8C4A     		ldr	r2, .L708+8
 16838 0ac0 1188     		ldrh	r1, [r2]	@ unaligned
 16839 0ac2 9278     		ldrb	r2, [r2, #2]
 16840 0ac4 1980     		strh	r1, [r3]	@ unaligned
 16841 0ac6 9A70     		strb	r2, [r3, #2]
2426:..\src/command_processing.c **** 
2427:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 16842              		.loc 1 2427 0
 16843 0ac8 D7F88430 		ldr	r3, [r7, #132]
 16844 0acc 5B6C     		ldr	r3, [r3, #68]	@ float
 16845 0ace 1846     		mov	r0, r3
 16846 0ad0 FFF7FEFF 		bl	__aeabi_f2d
 16847 0ad4 C7E90201 		strd	r0, [r7, #8]
 16848 0ad8 D7F88430 		ldr	r3, [r7, #132]
 16849 0adc 9B6C     		ldr	r3, [r3, #72]	@ float
 16850 0ade 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 377


 16851 0ae0 FFF7FEFF 		bl	__aeabi_f2d
 16852 0ae4 0446     		mov	r4, r0
 16853 0ae6 0D46     		mov	r5, r1
 16854 0ae8 D7F88430 		ldr	r3, [r7, #132]
 16855 0aec DB6C     		ldr	r3, [r3, #76]	@ float
 16856 0aee 1846     		mov	r0, r3
 16857 0af0 FFF7FEFF 		bl	__aeabi_f2d
 16858 0af4 8046     		mov	r8, r0
 16859 0af6 8946     		mov	r9, r1
 16860 0af8 D7F88430 		ldr	r3, [r7, #132]
 16861 0afc 1B6D     		ldr	r3, [r3, #80]	@ float
 16862 0afe 1846     		mov	r0, r3
 16863 0b00 FFF7FEFF 		bl	__aeabi_f2d
 16864 0b04 8246     		mov	r10, r0
 16865 0b06 8B46     		mov	fp, r1
 16866 0b08 D7F88430 		ldr	r3, [r7, #132]
 16867 0b0c 5B6D     		ldr	r3, [r3, #84]	@ float
 16868 0b0e 1846     		mov	r0, r3
 16869 0b10 FFF7FEFF 		bl	__aeabi_f2d
 16870 0b14 C7E90001 		strd	r0, [r7]
 16871 0b18 D7F88430 		ldr	r3, [r7, #132]
 16872 0b1c 9B6D     		ldr	r3, [r3, #88]	@ float
 16873 0b1e 1846     		mov	r0, r3
 16874 0b20 FFF7FEFF 		bl	__aeabi_f2d
 16875 0b24 0246     		mov	r2, r0
 16876 0b26 0B46     		mov	r3, r1
 16877 0b28 07F11C00 		add	r0, r7, #28
 16878 0b2c CDE90823 		strd	r2, [sp, #32]
 16879 0b30 D7E90012 		ldrd	r1, [r7]
 16880 0b34 CDE90612 		strd	r1, [sp, #24]
 16881 0b38 CDE904AB 		strd	r10, [sp, #16]
 16882 0b3c CDE90289 		strd	r8, [sp, #8]
 16883 0b40 CDE90045 		strd	r4, [sp]
 16884 0b44 D7E90223 		ldrd	r2, [r7, #8]
 16885 0b48 6C49     		ldr	r1, .L708+20
 16886 0b4a FFF7FEFF 		bl	sprintf
2428:..\src/command_processing.c **** 		strcat(info_string, str);
 16887              		.loc 1 2428 0
 16888 0b4e 07F11C03 		add	r3, r7, #28
 16889 0b52 1946     		mov	r1, r3
 16890 0b54 7869     		ldr	r0, [r7, #20]
 16891 0b56 FFF7FEFF 		bl	strcat
2429:..\src/command_processing.c **** 
2430:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 16892              		.loc 1 2430 0
 16893 0b5a D7F88430 		ldr	r3, [r7, #132]
 16894 0b5e 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 16895 0b62 1A46     		mov	r2, r3
 16896 0b64 07F11C03 		add	r3, r7, #28
 16897 0b68 6549     		ldr	r1, .L708+24
 16898 0b6a 1846     		mov	r0, r3
 16899 0b6c FFF7FEFF 		bl	sprintf
2431:..\src/command_processing.c **** 		strcat(info_string, str);
 16900              		.loc 1 2431 0
 16901 0b70 07F11C03 		add	r3, r7, #28
 16902 0b74 1946     		mov	r1, r3
 16903 0b76 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 378


 16904 0b78 FFF7FEFF 		bl	strcat
2432:..\src/command_processing.c **** 
2433:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 16905              		.loc 1 2433 0
 16906 0b7c D7F88430 		ldr	r3, [r7, #132]
 16907 0b80 596B     		ldr	r1, [r3, #52]
 16908 0b82 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16909 0b86 D7F88C00 		ldr	r0, [r7, #140]
 16910 0b8a 1346     		mov	r3, r2
 16911 0b8c 5B00     		lsls	r3, r3, #1
 16912 0b8e 1344     		add	r3, r3, r2
 16913 0b90 1B01     		lsls	r3, r3, #4
 16914 0b92 0344     		add	r3, r3, r0
 16915 0b94 03F29513 		addw	r3, r3, #405
 16916 0b98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16917 0b9a 41FA03F4 		asr	r4, r1, r3
 16918 0b9e D7F88430 		ldr	r3, [r7, #132]
 16919 0ba2 996B     		ldr	r1, [r3, #56]
 16920 0ba4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 16921 0ba8 D7F88C00 		ldr	r0, [r7, #140]
 16922 0bac 1346     		mov	r3, r2
 16923 0bae 5B00     		lsls	r3, r3, #1
 16924 0bb0 1344     		add	r3, r3, r2
 16925 0bb2 1B01     		lsls	r3, r3, #4
 16926 0bb4 0344     		add	r3, r3, r0
 16927 0bb6 03F29513 		addw	r3, r3, #405
 16928 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16929 0bbc 41FA03F3 		asr	r3, r1, r3
 16930 0bc0 07F11C00 		add	r0, r7, #28
 16931 0bc4 2246     		mov	r2, r4
 16932 0bc6 4F49     		ldr	r1, .L708+28
 16933 0bc8 FFF7FEFF 		bl	sprintf
2434:..\src/command_processing.c **** 		strcat(info_string, str);
 16934              		.loc 1 2434 0
 16935 0bcc 07F11C03 		add	r3, r7, #28
 16936 0bd0 1946     		mov	r1, r3
 16937 0bd2 7869     		ldr	r0, [r7, #20]
 16938 0bd4 FFF7FEFF 		bl	strcat
2435:..\src/command_processing.c **** 
2436:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 16939              		.loc 1 2436 0
 16940 0bd8 D7F88430 		ldr	r3, [r7, #132]
 16941 0bdc B3F95C30 		ldrsh	r3, [r3, #92]
 16942 0be0 1A46     		mov	r2, r3
 16943 0be2 07F11C03 		add	r3, r7, #28
 16944 0be6 4849     		ldr	r1, .L708+32
 16945 0be8 1846     		mov	r0, r3
 16946 0bea FFF7FEFF 		bl	sprintf
2437:..\src/command_processing.c **** 		strcat(info_string, str);
 16947              		.loc 1 2437 0
 16948 0bee 07F11C03 		add	r3, r7, #28
 16949 0bf2 1946     		mov	r1, r3
 16950 0bf4 7869     		ldr	r0, [r7, #20]
 16951 0bf6 FFF7FEFF 		bl	strcat
2438:..\src/command_processing.c **** 
2439:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 16952              		.loc 1 2439 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 379


 16953 0bfa D7F88430 		ldr	r3, [r7, #132]
 16954 0bfe 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16955 0c02 022B     		cmp	r3, #2
 16956 0c04 12D0     		beq	.L681
2440:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16957              		.loc 1 2440 0 discriminator 1
 16958 0c06 D7F88430 		ldr	r3, [r7, #132]
 16959 0c0a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2439:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16960              		.loc 1 2439 0 discriminator 1
 16961 0c0e 032B     		cmp	r3, #3
 16962 0c10 0CD0     		beq	.L681
2441:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 16963              		.loc 1 2441 0
 16964 0c12 D7F88430 		ldr	r3, [r7, #132]
 16965 0c16 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2440:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 16966              		.loc 1 2440 0
 16967 0c1a 042B     		cmp	r3, #4
 16968 0c1c 06D0     		beq	.L681
2442:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 16969              		.loc 1 2442 0
 16970 0c1e D7F88430 		ldr	r3, [r7, #132]
 16971 0c22 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2441:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 16972              		.loc 1 2441 0
 16973 0c26 052B     		cmp	r3, #5
 16974 0c28 40F0A780 		bne	.L682
 16975              	.L681:
2443:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 16976              		.loc 1 2443 0
 16977 0c2c D7F88C30 		ldr	r3, [r7, #140]
 16978 0c30 B3F8F031 		ldrh	r3, [r3, #496]
 16979 0c34 1A46     		mov	r2, r3
 16980 0c36 D7F88C30 		ldr	r3, [r7, #140]
 16981 0c3a B3F8F231 		ldrh	r3, [r3, #498]
 16982 0c3e 07F11C00 		add	r0, r7, #28
 16983 0c42 3249     		ldr	r1, .L708+36
 16984 0c44 FFF7FEFF 		bl	sprintf
2444:..\src/command_processing.c **** 			strcat(info_string, str);
 16985              		.loc 1 2444 0
 16986 0c48 07F11C03 		add	r3, r7, #28
 16987 0c4c 1946     		mov	r1, r3
 16988 0c4e 7869     		ldr	r0, [r7, #20]
 16989 0c50 FFF7FEFF 		bl	strcat
2445:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 16990              		.loc 1 2445 0
 16991 0c54 7869     		ldr	r0, [r7, #20]
 16992 0c56 FFF7FEFF 		bl	strlen
 16993 0c5a 0346     		mov	r3, r0
 16994 0c5c 1A46     		mov	r2, r3
 16995 0c5e 7B69     		ldr	r3, [r7, #20]
 16996 0c60 1344     		add	r3, r3, r2
 16997 0c62 234A     		ldr	r2, .L708+8
 16998 0c64 1188     		ldrh	r1, [r2]	@ unaligned
 16999 0c66 9278     		ldrb	r2, [r2, #2]
 17000 0c68 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 380


 17001 0c6a 9A70     		strb	r2, [r3, #2]
2446:..\src/command_processing.c **** 
2447:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 17002              		.loc 1 2447 0
 17003 0c6c D7F88C30 		ldr	r3, [r7, #140]
 17004 0c70 D3F8F421 		ldr	r2, [r3, #500]
 17005 0c74 D7F88C30 		ldr	r3, [r7, #140]
 17006 0c78 D3F8F831 		ldr	r3, [r3, #504]
 17007 0c7c 07F11C00 		add	r0, r7, #28
 17008 0c80 2349     		ldr	r1, .L708+40
 17009 0c82 FFF7FEFF 		bl	sprintf
2448:..\src/command_processing.c **** 			strcat(info_string, str);
 17010              		.loc 1 2448 0
 17011 0c86 07F11C03 		add	r3, r7, #28
 17012 0c8a 1946     		mov	r1, r3
 17013 0c8c 7869     		ldr	r0, [r7, #20]
 17014 0c8e FFF7FEFF 		bl	strcat
2449:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17015              		.loc 1 2449 0
 17016 0c92 7869     		ldr	r0, [r7, #20]
 17017 0c94 FFF7FEFF 		bl	strlen
 17018 0c98 0346     		mov	r3, r0
 17019 0c9a 1A46     		mov	r2, r3
 17020 0c9c 7B69     		ldr	r3, [r7, #20]
 17021 0c9e 1344     		add	r3, r3, r2
 17022 0ca0 134A     		ldr	r2, .L708+8
 17023 0ca2 1188     		ldrh	r1, [r2]	@ unaligned
 17024 0ca4 9278     		ldrb	r2, [r2, #2]
 17025 0ca6 1980     		strh	r1, [r3]	@ unaligned
 17026 0ca8 9A70     		strb	r2, [r3, #2]
2450:..\src/command_processing.c **** 
2451:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 17027              		.loc 1 2451 0
 17028 0caa D7F88C30 		ldr	r3, [r7, #140]
 17029 0cae 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17030 0cb2 002B     		cmp	r3, #0
 17031 0cb4 30D0     		beq	.L683
2452:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 17032              		.loc 1 2452 0
 17033 0cb6 7869     		ldr	r0, [r7, #20]
 17034 0cb8 FFF7FEFF 		bl	strlen
 17035 0cbc 0346     		mov	r3, r0
 17036 0cbe 1A46     		mov	r2, r3
 17037 0cc0 7B69     		ldr	r3, [r7, #20]
 17038 0cc2 1344     		add	r3, r3, r2
 17039 0cc4 134A     		ldr	r2, .L708+44
 17040 0cc6 1D46     		mov	r5, r3
 17041 0cc8 1446     		mov	r4, r2
 17042 0cca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17043 0ccc 2860     		str	r0, [r5]	@ unaligned
 17044 0cce 6960     		str	r1, [r5, #4]	@ unaligned
 17045 0cd0 AA60     		str	r2, [r5, #8]	@ unaligned
 17046 0cd2 EB60     		str	r3, [r5, #12]	@ unaligned
 17047 0cd4 03CC     		ldmia	r4!, {r0, r1}
 17048 0cd6 2861     		str	r0, [r5, #16]	@ unaligned
 17049 0cd8 6961     		str	r1, [r5, #20]	@ unaligned
 17050 0cda 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 381


 17051 0cdc A278     		ldrb	r2, [r4, #2]
 17052 0cde 2B83     		strh	r3, [r5, #24]	@ unaligned
 17053 0ce0 1346     		mov	r3, r2
 17054 0ce2 AB76     		strb	r3, [r5, #26]
 17055 0ce4 2CE0     		b	.L684
 17056              	.L709:
 17057 0ce6 00BF     		.align	2
 17058              	.L708:
 17059 0ce8 88120000 		.word	.LC184
 17060 0cec 8C0F0000 		.word	.LC155
 17061 0cf0 C00D0000 		.word	.LC126
 17062 0cf4 AC170000 		.word	.LC235
 17063 0cf8 A8120000 		.word	.LC186
 17064 0cfc BC170000 		.word	.LC236
 17065 0d00 F8170000 		.word	.LC237
 17066 0d04 14180000 		.word	.LC238
 17067 0d08 48130000 		.word	.LC192
 17068 0d0c 70130000 		.word	.LC194
 17069 0d10 94130000 		.word	.LC195
 17070 0d14 E4130000 		.word	.LC198
 17071              	.L683:
2453:..\src/command_processing.c **** 			else
2454:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 17072              		.loc 1 2454 0
 17073 0d18 7869     		ldr	r0, [r7, #20]
 17074 0d1a FFF7FEFF 		bl	strlen
 17075 0d1e 0346     		mov	r3, r0
 17076 0d20 1A46     		mov	r2, r3
 17077 0d22 7B69     		ldr	r3, [r7, #20]
 17078 0d24 1344     		add	r3, r3, r2
 17079 0d26 CF4A     		ldr	r2, .L710
 17080 0d28 1D46     		mov	r5, r3
 17081 0d2a 1446     		mov	r4, r2
 17082 0d2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17083 0d2e 2860     		str	r0, [r5]	@ unaligned
 17084 0d30 6960     		str	r1, [r5, #4]	@ unaligned
 17085 0d32 AA60     		str	r2, [r5, #8]	@ unaligned
 17086 0d34 EB60     		str	r3, [r5, #12]	@ unaligned
 17087 0d36 03CC     		ldmia	r4!, {r0, r1}
 17088 0d38 2861     		str	r0, [r5, #16]	@ unaligned
 17089 0d3a 6961     		str	r1, [r5, #20]	@ unaligned
 17090 0d3c 2388     		ldrh	r3, [r4]	@ unaligned
 17091 0d3e 2B83     		strh	r3, [r5, #24]	@ unaligned
 17092              	.L684:
2455:..\src/command_processing.c **** 
2456:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d", (int)MEM_P->emg.emg_speed);
 17093              		.loc 1 2456 0
 17094 0d40 D7F88C30 		ldr	r3, [r7, #140]
 17095 0d44 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17096 0d48 1A46     		mov	r2, r3
 17097 0d4a 07F11C03 		add	r3, r7, #28
 17098 0d4e C649     		ldr	r1, .L710+4
 17099 0d50 1846     		mov	r0, r3
 17100 0d52 FFF7FEFF 		bl	sprintf
2457:..\src/command_processing.c **** 			strcat(info_string, str);
 17101              		.loc 1 2457 0
 17102 0d56 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 382


 17103 0d5a 1946     		mov	r1, r3
 17104 0d5c 7869     		ldr	r0, [r7, #20]
 17105 0d5e FFF7FEFF 		bl	strcat
2458:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17106              		.loc 1 2458 0
 17107 0d62 7869     		ldr	r0, [r7, #20]
 17108 0d64 FFF7FEFF 		bl	strlen
 17109 0d68 0346     		mov	r3, r0
 17110 0d6a 1A46     		mov	r2, r3
 17111 0d6c 7B69     		ldr	r3, [r7, #20]
 17112 0d6e 1344     		add	r3, r3, r2
 17113 0d70 BE4A     		ldr	r2, .L710+8
 17114 0d72 1188     		ldrh	r1, [r2]	@ unaligned
 17115 0d74 9278     		ldrb	r2, [r2, #2]
 17116 0d76 1980     		strh	r1, [r3]	@ unaligned
 17117 0d78 9A70     		strb	r2, [r3, #2]
 17118              	.L682:
 17119              	.LBE20:
2292:..\src/command_processing.c ****             
 17120              		.loc 1 2292 0 discriminator 2
 17121 0d7a 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17122 0d7e 0133     		adds	r3, r3, #1
 17123 0d80 87F89330 		strb	r3, [r7, #147]
 17124              	.L642:
2292:..\src/command_processing.c ****             
 17125              		.loc 1 2292 0 is_stmt 0 discriminator 1
 17126 0d84 D7F88C30 		ldr	r3, [r7, #140]
 17127 0d88 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17128 0d8c 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17129 0d90 9A42     		cmp	r2, r3
 17130 0d92 7FF6BEA9 		bls	.L685
 17131              	.LBE19:
2459:..\src/command_processing.c **** 		}
2460:..\src/command_processing.c **** 	}
2461:..\src/command_processing.c **** 	 
2462:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 17132              		.loc 1 2462 0 is_stmt 1
 17133 0d96 D7F88C30 		ldr	r3, [r7, #140]
 17134 0d9a 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17135 0d9e 002B     		cmp	r3, #0
 17136 0da0 63D0     		beq	.L686
2463:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17137              		.loc 1 2463 0
 17138 0da2 D7F88C30 		ldr	r3, [r7, #140]
 17139 0da6 D3F8A422 		ldr	r2, [r3, #676]
 17140 0daa 07F11C03 		add	r3, r7, #28
 17141 0dae B049     		ldr	r1, .L710+12
 17142 0db0 1846     		mov	r0, r3
 17143 0db2 FFF7FEFF 		bl	sprintf
2464:..\src/command_processing.c ****         strcat(info_string, str);
 17144              		.loc 1 2464 0
 17145 0db6 07F11C03 		add	r3, r7, #28
 17146 0dba 1946     		mov	r1, r3
 17147 0dbc 7869     		ldr	r0, [r7, #20]
 17148 0dbe FFF7FEFF 		bl	strcat
2465:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17149              		.loc 1 2465 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 383


 17150 0dc2 7869     		ldr	r0, [r7, #20]
 17151 0dc4 FFF7FEFF 		bl	strlen
 17152 0dc8 0346     		mov	r3, r0
 17153 0dca 1A46     		mov	r2, r3
 17154 0dcc 7B69     		ldr	r3, [r7, #20]
 17155 0dce 1344     		add	r3, r3, r2
 17156 0dd0 A64A     		ldr	r2, .L710+8
 17157 0dd2 1188     		ldrh	r1, [r2]	@ unaligned
 17158 0dd4 9278     		ldrb	r2, [r2, #2]
 17159 0dd6 1980     		strh	r1, [r3]	@ unaligned
 17160 0dd8 9A70     		strb	r2, [r3, #2]
2466:..\src/command_processing.c ****         
2467:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17161              		.loc 1 2467 0
 17162 0dda D7F88C30 		ldr	r3, [r7, #140]
 17163 0dde D3F8A822 		ldr	r2, [r3, #680]
 17164 0de2 07F11C03 		add	r3, r7, #28
 17165 0de6 A349     		ldr	r1, .L710+16
 17166 0de8 1846     		mov	r0, r3
 17167 0dea FFF7FEFF 		bl	sprintf
2468:..\src/command_processing.c ****         strcat(info_string, str);
 17168              		.loc 1 2468 0
 17169 0dee 07F11C03 		add	r3, r7, #28
 17170 0df2 1946     		mov	r1, r3
 17171 0df4 7869     		ldr	r0, [r7, #20]
 17172 0df6 FFF7FEFF 		bl	strcat
2469:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17173              		.loc 1 2469 0
 17174 0dfa 7869     		ldr	r0, [r7, #20]
 17175 0dfc FFF7FEFF 		bl	strlen
 17176 0e00 0346     		mov	r3, r0
 17177 0e02 1A46     		mov	r2, r3
 17178 0e04 7B69     		ldr	r3, [r7, #20]
 17179 0e06 1344     		add	r3, r3, r2
 17180 0e08 984A     		ldr	r2, .L710+8
 17181 0e0a 1188     		ldrh	r1, [r2]	@ unaligned
 17182 0e0c 9278     		ldrb	r2, [r2, #2]
 17183 0e0e 1980     		strh	r1, [r3]	@ unaligned
 17184 0e10 9A70     		strb	r2, [r3, #2]
2470:..\src/command_processing.c ****         
2471:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 17185              		.loc 1 2471 0
 17186 0e12 D7F88C30 		ldr	r3, [r7, #140]
 17187 0e16 D3F8A022 		ldr	r2, [r3, #672]
 17188 0e1a D7F88C30 		ldr	r3, [r7, #140]
 17189 0e1e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17190 0e22 1846     		mov	r0, r3
 17191 0e24 D7F88C10 		ldr	r1, [r7, #140]
 17192 0e28 0346     		mov	r3, r0
 17193 0e2a 5B00     		lsls	r3, r3, #1
 17194 0e2c 0344     		add	r3, r3, r0
 17195 0e2e 1B01     		lsls	r3, r3, #4
 17196 0e30 0B44     		add	r3, r3, r1
 17197 0e32 03F29513 		addw	r3, r3, #405
 17198 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17199 0e38 1A41     		asrs	r2, r2, r3
 17200 0e3a 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 384


 17201 0e3e 8E49     		ldr	r1, .L710+20
 17202 0e40 1846     		mov	r0, r3
 17203 0e42 FFF7FEFF 		bl	sprintf
2472:..\src/command_processing.c ****         strcat(info_string, str);
 17204              		.loc 1 2472 0
 17205 0e46 07F11C03 		add	r3, r7, #28
 17206 0e4a 1946     		mov	r1, r3
 17207 0e4c 7869     		ldr	r0, [r7, #20]
 17208 0e4e FFF7FEFF 		bl	strcat
2473:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 17209              		.loc 1 2473 0
 17210 0e52 7869     		ldr	r0, [r7, #20]
 17211 0e54 FFF7FEFF 		bl	strlen
 17212 0e58 0346     		mov	r3, r0
 17213 0e5a 1A46     		mov	r2, r3
 17214 0e5c 7B69     		ldr	r3, [r7, #20]
 17215 0e5e 1344     		add	r3, r3, r2
 17216 0e60 824A     		ldr	r2, .L710+8
 17217 0e62 1188     		ldrh	r1, [r2]	@ unaligned
 17218 0e64 9278     		ldrb	r2, [r2, #2]
 17219 0e66 1980     		strh	r1, [r3]	@ unaligned
 17220 0e68 9A70     		strb	r2, [r3, #2]
 17221              	.L686:
2474:..\src/command_processing.c ****     }
2475:..\src/command_processing.c **** 	
2476:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 17222              		.loc 1 2476 0
 17223 0e6a D7F88C30 		ldr	r3, [r7, #140]
 17224 0e6e 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17225 0e72 002B     		cmp	r3, #0
 17226 0e74 00F0CC81 		beq	.L701
2477:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17227              		.loc 1 2477 0
 17228 0e78 804B     		ldr	r3, .L710+24
 17229 0e7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17230 0e7c 1A46     		mov	r2, r3
 17231 0e7e 07F11C03 		add	r3, r7, #28
 17232 0e82 7F49     		ldr	r1, .L710+28
 17233 0e84 1846     		mov	r0, r3
 17234 0e86 FFF7FEFF 		bl	sprintf
2478:..\src/command_processing.c **** 		strcat(info_string, str);
 17235              		.loc 1 2478 0
 17236 0e8a 07F11C03 		add	r3, r7, #28
 17237 0e8e 1946     		mov	r1, r3
 17238 0e90 7869     		ldr	r0, [r7, #20]
 17239 0e92 FFF7FEFF 		bl	strcat
2479:..\src/command_processing.c **** 		
2480:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17240              		.loc 1 2480 0
 17241 0e96 7869     		ldr	r0, [r7, #20]
 17242 0e98 FFF7FEFF 		bl	strlen
 17243 0e9c 0346     		mov	r3, r0
 17244 0e9e 1A46     		mov	r2, r3
 17245 0ea0 7B69     		ldr	r3, [r7, #20]
 17246 0ea2 1344     		add	r3, r3, r2
 17247 0ea4 714A     		ldr	r2, .L710+8
 17248 0ea6 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 385


 17249 0ea8 9278     		ldrb	r2, [r2, #2]
 17250 0eaa 1980     		strh	r1, [r3]	@ unaligned
 17251 0eac 9A70     		strb	r2, [r3, #2]
2481:..\src/command_processing.c **** 		
2482:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 17252              		.loc 1 2482 0
 17253 0eae 7869     		ldr	r0, [r7, #20]
 17254 0eb0 FFF7FEFF 		bl	strlen
 17255 0eb4 0346     		mov	r3, r0
 17256 0eb6 1A46     		mov	r2, r3
 17257 0eb8 7B69     		ldr	r3, [r7, #20]
 17258 0eba 1344     		add	r3, r3, r2
 17259 0ebc 714A     		ldr	r2, .L710+32
 17260 0ebe 1D46     		mov	r5, r3
 17261 0ec0 1446     		mov	r4, r2
 17262 0ec2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17263 0ec4 2860     		str	r0, [r5]	@ unaligned
 17264 0ec6 6960     		str	r1, [r5, #4]	@ unaligned
 17265 0ec8 AA60     		str	r2, [r5, #8]	@ unaligned
 17266 0eca EB60     		str	r3, [r5, #12]	@ unaligned
 17267 0ecc 2068     		ldr	r0, [r4]	@ unaligned
 17268 0ece 2861     		str	r0, [r5, #16]	@ unaligned
 17269 0ed0 2379     		ldrb	r3, [r4, #4]
 17270 0ed2 2B75     		strb	r3, [r5, #20]
2483:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 17271              		.loc 1 2483 0
 17272 0ed4 0023     		movs	r3, #0
 17273 0ed6 C7F89430 		str	r3, [r7, #148]
 17274 0eda 85E1     		b	.L688
 17275              	.L699:
2484:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17276              		.loc 1 2484 0
 17277 0edc 6A4A     		ldr	r2, .L710+36
 17278 0ede D7F89430 		ldr	r3, [r7, #148]
 17279 0ee2 1344     		add	r3, r3, r2
 17280 0ee4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17281 0ee6 07F11C00 		add	r0, r7, #28
 17282 0eea D7F89420 		ldr	r2, [r7, #148]
 17283 0eee 6749     		ldr	r1, .L710+40
 17284 0ef0 FFF7FEFF 		bl	sprintf
2485:..\src/command_processing.c **** 			strcat(info_string, str);
 17285              		.loc 1 2485 0
 17286 0ef4 07F11C03 		add	r3, r7, #28
 17287 0ef8 1946     		mov	r1, r3
 17288 0efa 7869     		ldr	r0, [r7, #20]
 17289 0efc FFF7FEFF 		bl	strcat
2486:..\src/command_processing.c **** 			
2487:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 17290              		.loc 1 2487 0
 17291 0f00 07F11C03 		add	r3, r7, #28
 17292 0f04 624A     		ldr	r2, .L710+44
 17293 0f06 1C46     		mov	r4, r3
 17294 0f08 1546     		mov	r5, r2
 17295 0f0a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17296 0f0c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17297 0f0e 2B68     		ldr	r3, [r5]
 17298 0f10 2380     		strh	r3, [r4]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 386


2488:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17299              		.loc 1 2488 0
 17300 0f12 5D4A     		ldr	r2, .L710+36
 17301 0f14 D7F89430 		ldr	r3, [r7, #148]
 17302 0f18 1344     		add	r3, r3, r2
 17303 0f1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17304 0f1c 1946     		mov	r1, r3
 17305 0f1e D7F88C20 		ldr	r2, [r7, #140]
 17306 0f22 0B46     		mov	r3, r1
 17307 0f24 9B00     		lsls	r3, r3, #2
 17308 0f26 0B44     		add	r3, r3, r1
 17309 0f28 1344     		add	r3, r3, r2
 17310 0f2a 03F20223 		addw	r3, r3, #514
 17311 0f2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17312 0f30 002B     		cmp	r3, #0
 17313 0f32 0FD0     		beq	.L689
2489:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17314              		.loc 1 2489 0
 17315 0f34 07F11C03 		add	r3, r7, #28
 17316 0f38 1846     		mov	r0, r3
 17317 0f3a FFF7FEFF 		bl	strlen
 17318 0f3e 0346     		mov	r3, r0
 17319 0f40 1A46     		mov	r2, r3
 17320 0f42 07F11C03 		add	r3, r7, #28
 17321 0f46 1344     		add	r3, r3, r2
 17322 0f48 524A     		ldr	r2, .L710+48
 17323 0f4a 1068     		ldr	r0, [r2]	@ unaligned
 17324 0f4c 1860     		str	r0, [r3]	@ unaligned
 17325 0f4e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17326 0f50 9A80     		strh	r2, [r3, #4]	@ unaligned
 17327 0f52 0EE0     		b	.L690
 17328              	.L689:
2490:..\src/command_processing.c **** 			else
2491:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17329              		.loc 1 2491 0
 17330 0f54 07F11C03 		add	r3, r7, #28
 17331 0f58 1846     		mov	r0, r3
 17332 0f5a FFF7FEFF 		bl	strlen
 17333 0f5e 0346     		mov	r3, r0
 17334 0f60 1A46     		mov	r2, r3
 17335 0f62 07F11C03 		add	r3, r7, #28
 17336 0f66 1344     		add	r3, r3, r2
 17337 0f68 4B4A     		ldr	r2, .L710+52
 17338 0f6a 1068     		ldr	r0, [r2]	@ unaligned
 17339 0f6c 1860     		str	r0, [r3]	@ unaligned
 17340 0f6e 1279     		ldrb	r2, [r2, #4]
 17341 0f70 1A71     		strb	r2, [r3, #4]
 17342              	.L690:
2492:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 17343              		.loc 1 2492 0
 17344 0f72 07F11C03 		add	r3, r7, #28
 17345 0f76 1846     		mov	r0, r3
 17346 0f78 FFF7FEFF 		bl	strlen
 17347 0f7c 0346     		mov	r3, r0
 17348 0f7e 1A46     		mov	r2, r3
 17349 0f80 07F11C03 		add	r3, r7, #28
 17350 0f84 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 387


 17351 0f86 454A     		ldr	r2, .L710+56
 17352 0f88 1C46     		mov	r4, r3
 17353 0f8a 1346     		mov	r3, r2
 17354 0f8c 07CB     		ldmia	r3!, {r0, r1, r2}
 17355 0f8e 2060     		str	r0, [r4]	@ unaligned
 17356 0f90 6160     		str	r1, [r4, #4]	@ unaligned
 17357 0f92 A260     		str	r2, [r4, #8]	@ unaligned
 17358 0f94 1B88     		ldrh	r3, [r3]	@ unaligned
 17359 0f96 A381     		strh	r3, [r4, #12]	@ unaligned
2493:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17360              		.loc 1 2493 0
 17361 0f98 3B4A     		ldr	r2, .L710+36
 17362 0f9a D7F89430 		ldr	r3, [r7, #148]
 17363 0f9e 1344     		add	r3, r3, r2
 17364 0fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17365 0fa2 1946     		mov	r1, r3
 17366 0fa4 D7F88C20 		ldr	r2, [r7, #140]
 17367 0fa8 0B46     		mov	r3, r1
 17368 0faa 9B00     		lsls	r3, r3, #2
 17369 0fac 0B44     		add	r3, r3, r1
 17370 0fae 1344     		add	r3, r3, r2
 17371 0fb0 03F20323 		addw	r3, r3, #515
 17372 0fb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17373 0fb6 002B     		cmp	r3, #0
 17374 0fb8 0FD0     		beq	.L691
2494:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17375              		.loc 1 2494 0
 17376 0fba 07F11C03 		add	r3, r7, #28
 17377 0fbe 1846     		mov	r0, r3
 17378 0fc0 FFF7FEFF 		bl	strlen
 17379 0fc4 0346     		mov	r3, r0
 17380 0fc6 1A46     		mov	r2, r3
 17381 0fc8 07F11C03 		add	r3, r7, #28
 17382 0fcc 1344     		add	r3, r3, r2
 17383 0fce 314A     		ldr	r2, .L710+48
 17384 0fd0 1068     		ldr	r0, [r2]	@ unaligned
 17385 0fd2 1860     		str	r0, [r3]	@ unaligned
 17386 0fd4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17387 0fd6 9A80     		strh	r2, [r3, #4]	@ unaligned
 17388 0fd8 0EE0     		b	.L692
 17389              	.L691:
2495:..\src/command_processing.c **** 			else
2496:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17390              		.loc 1 2496 0
 17391 0fda 07F11C03 		add	r3, r7, #28
 17392 0fde 1846     		mov	r0, r3
 17393 0fe0 FFF7FEFF 		bl	strlen
 17394 0fe4 0346     		mov	r3, r0
 17395 0fe6 1A46     		mov	r2, r3
 17396 0fe8 07F11C03 		add	r3, r7, #28
 17397 0fec 1344     		add	r3, r3, r2
 17398 0fee 2A4A     		ldr	r2, .L710+52
 17399 0ff0 1068     		ldr	r0, [r2]	@ unaligned
 17400 0ff2 1860     		str	r0, [r3]	@ unaligned
 17401 0ff4 1279     		ldrb	r2, [r2, #4]
 17402 0ff6 1A71     		strb	r2, [r3, #4]
 17403              	.L692:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 388


2497:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 17404              		.loc 1 2497 0
 17405 0ff8 07F11C03 		add	r3, r7, #28
 17406 0ffc 1846     		mov	r0, r3
 17407 0ffe FFF7FEFF 		bl	strlen
 17408 1002 0346     		mov	r3, r0
 17409 1004 1A46     		mov	r2, r3
 17410 1006 07F11C03 		add	r3, r7, #28
 17411 100a 1344     		add	r3, r3, r2
 17412 100c 244A     		ldr	r2, .L710+60
 17413 100e 1D46     		mov	r5, r3
 17414 1010 1446     		mov	r4, r2
 17415 1012 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17416 1014 2860     		str	r0, [r5]	@ unaligned
 17417 1016 6960     		str	r1, [r5, #4]	@ unaligned
 17418 1018 AA60     		str	r2, [r5, #8]	@ unaligned
 17419 101a EB60     		str	r3, [r5, #12]	@ unaligned
 17420 101c 2378     		ldrb	r3, [r4]
 17421 101e 2B74     		strb	r3, [r5, #16]
2498:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 17422              		.loc 1 2498 0
 17423 1020 194A     		ldr	r2, .L710+36
 17424 1022 D7F89430 		ldr	r3, [r7, #148]
 17425 1026 1344     		add	r3, r3, r2
 17426 1028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17427 102a 1946     		mov	r1, r3
 17428 102c D7F88C20 		ldr	r2, [r7, #140]
 17429 1030 0B46     		mov	r3, r1
 17430 1032 9B00     		lsls	r3, r3, #2
 17431 1034 0B44     		add	r3, r3, r1
 17432 1036 1344     		add	r3, r3, r2
 17433 1038 03F50173 		add	r3, r3, #516
 17434 103c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17435 103e 002B     		cmp	r3, #0
 17436 1040 30D0     		beq	.L693
2499:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17437              		.loc 1 2499 0
 17438 1042 07F11C03 		add	r3, r7, #28
 17439 1046 1846     		mov	r0, r3
 17440 1048 FFF7FEFF 		bl	strlen
 17441 104c 0346     		mov	r3, r0
 17442 104e 1A46     		mov	r2, r3
 17443 1050 07F11C03 		add	r3, r7, #28
 17444 1054 1344     		add	r3, r3, r2
 17445 1056 0F4A     		ldr	r2, .L710+48
 17446 1058 1068     		ldr	r0, [r2]	@ unaligned
 17447 105a 1860     		str	r0, [r3]	@ unaligned
 17448 105c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17449 105e 9A80     		strh	r2, [r3, #4]	@ unaligned
 17450 1060 2FE0     		b	.L694
 17451              	.L711:
 17452 1062 00BF     		.align	2
 17453              	.L710:
 17454 1064 00140000 		.word	.LC199
 17455 1068 1C140000 		.word	.LC200
 17456 106c C00D0000 		.word	.LC126
 17457 1070 74140000 		.word	.LC204
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 389


 17458 1074 90140000 		.word	.LC205
 17459 1078 B8140000 		.word	.LC206
 17460 107c 00000000 		.word	N_IMU_Connected
 17461 1080 CC140000 		.word	.LC207
 17462 1084 E0140000 		.word	.LC208
 17463 1088 00000000 		.word	IMU_connected
 17464 108c F8140000 		.word	.LC209
 17465 1090 0C150000 		.word	.LC210
 17466 1094 180F0000 		.word	.LC146
 17467 1098 200F0000 		.word	.LC147
 17468 109c 20150000 		.word	.LC211
 17469 10a0 30150000 		.word	.LC212
 17470              	.L693:
2500:..\src/command_processing.c **** 			else
2501:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17471              		.loc 1 2501 0
 17472 10a4 07F11C03 		add	r3, r7, #28
 17473 10a8 1846     		mov	r0, r3
 17474 10aa FFF7FEFF 		bl	strlen
 17475 10ae 0346     		mov	r3, r0
 17476 10b0 1A46     		mov	r2, r3
 17477 10b2 07F11C03 		add	r3, r7, #28
 17478 10b6 1344     		add	r3, r3, r2
 17479 10b8 584A     		ldr	r2, .L712
 17480 10ba 1068     		ldr	r0, [r2]	@ unaligned
 17481 10bc 1860     		str	r0, [r3]	@ unaligned
 17482 10be 1279     		ldrb	r2, [r2, #4]
 17483 10c0 1A71     		strb	r2, [r3, #4]
 17484              	.L694:
2502:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 17485              		.loc 1 2502 0
 17486 10c2 07F11C03 		add	r3, r7, #28
 17487 10c6 1846     		mov	r0, r3
 17488 10c8 FFF7FEFF 		bl	strlen
 17489 10cc 0346     		mov	r3, r0
 17490 10ce 1A46     		mov	r2, r3
 17491 10d0 07F11C03 		add	r3, r7, #28
 17492 10d4 1344     		add	r3, r3, r2
 17493 10d6 524A     		ldr	r2, .L712+4
 17494 10d8 1C46     		mov	r4, r3
 17495 10da 1346     		mov	r3, r2
 17496 10dc 07CB     		ldmia	r3!, {r0, r1, r2}
 17497 10de 2060     		str	r0, [r4]	@ unaligned
 17498 10e0 6160     		str	r1, [r4, #4]	@ unaligned
 17499 10e2 A260     		str	r2, [r4, #8]	@ unaligned
 17500 10e4 1B88     		ldrh	r3, [r3]	@ unaligned
 17501 10e6 A381     		strh	r3, [r4, #12]	@ unaligned
2503:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 17502              		.loc 1 2503 0
 17503 10e8 4E4A     		ldr	r2, .L712+8
 17504 10ea D7F89430 		ldr	r3, [r7, #148]
 17505 10ee 1344     		add	r3, r3, r2
 17506 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17507 10f2 1946     		mov	r1, r3
 17508 10f4 D7F88C20 		ldr	r2, [r7, #140]
 17509 10f8 0B46     		mov	r3, r1
 17510 10fa 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 390


 17511 10fc 0B44     		add	r3, r3, r1
 17512 10fe 1344     		add	r3, r3, r2
 17513 1100 03F20523 		addw	r3, r3, #517
 17514 1104 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17515 1106 002B     		cmp	r3, #0
 17516 1108 0FD0     		beq	.L695
2504:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17517              		.loc 1 2504 0
 17518 110a 07F11C03 		add	r3, r7, #28
 17519 110e 1846     		mov	r0, r3
 17520 1110 FFF7FEFF 		bl	strlen
 17521 1114 0346     		mov	r3, r0
 17522 1116 1A46     		mov	r2, r3
 17523 1118 07F11C03 		add	r3, r7, #28
 17524 111c 1344     		add	r3, r3, r2
 17525 111e 424A     		ldr	r2, .L712+12
 17526 1120 1068     		ldr	r0, [r2]	@ unaligned
 17527 1122 1860     		str	r0, [r3]	@ unaligned
 17528 1124 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17529 1126 9A80     		strh	r2, [r3, #4]	@ unaligned
 17530 1128 0EE0     		b	.L696
 17531              	.L695:
2505:..\src/command_processing.c **** 			else
2506:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17532              		.loc 1 2506 0
 17533 112a 07F11C03 		add	r3, r7, #28
 17534 112e 1846     		mov	r0, r3
 17535 1130 FFF7FEFF 		bl	strlen
 17536 1134 0346     		mov	r3, r0
 17537 1136 1A46     		mov	r2, r3
 17538 1138 07F11C03 		add	r3, r7, #28
 17539 113c 1344     		add	r3, r3, r2
 17540 113e 374A     		ldr	r2, .L712
 17541 1140 1068     		ldr	r0, [r2]	@ unaligned
 17542 1142 1860     		str	r0, [r3]	@ unaligned
 17543 1144 1279     		ldrb	r2, [r2, #4]
 17544 1146 1A71     		strb	r2, [r3, #4]
 17545              	.L696:
2507:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 17546              		.loc 1 2507 0
 17547 1148 07F11C03 		add	r3, r7, #28
 17548 114c 1846     		mov	r0, r3
 17549 114e FFF7FEFF 		bl	strlen
 17550 1152 0346     		mov	r3, r0
 17551 1154 1A46     		mov	r2, r3
 17552 1156 07F11C03 		add	r3, r7, #28
 17553 115a 1344     		add	r3, r3, r2
 17554 115c 334A     		ldr	r2, .L712+16
 17555 115e 1C46     		mov	r4, r3
 17556 1160 1346     		mov	r3, r2
 17557 1162 07CB     		ldmia	r3!, {r0, r1, r2}
 17558 1164 2060     		str	r0, [r4]	@ unaligned
 17559 1166 6160     		str	r1, [r4, #4]	@ unaligned
 17560 1168 A260     		str	r2, [r4, #8]	@ unaligned
 17561 116a 1A88     		ldrh	r2, [r3]	@ unaligned
 17562 116c 9B78     		ldrb	r3, [r3, #2]
 17563 116e A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 391


 17564 1170 A373     		strb	r3, [r4, #14]
2508:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 17565              		.loc 1 2508 0
 17566 1172 2C4A     		ldr	r2, .L712+8
 17567 1174 D7F89430 		ldr	r3, [r7, #148]
 17568 1178 1344     		add	r3, r3, r2
 17569 117a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17570 117c 1946     		mov	r1, r3
 17571 117e D7F88C20 		ldr	r2, [r7, #140]
 17572 1182 0B46     		mov	r3, r1
 17573 1184 9B00     		lsls	r3, r3, #2
 17574 1186 0B44     		add	r3, r3, r1
 17575 1188 1344     		add	r3, r3, r2
 17576 118a 03F20623 		addw	r3, r3, #518
 17577 118e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17578 1190 002B     		cmp	r3, #0
 17579 1192 0FD0     		beq	.L697
2509:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17580              		.loc 1 2509 0
 17581 1194 07F11C03 		add	r3, r7, #28
 17582 1198 1846     		mov	r0, r3
 17583 119a FFF7FEFF 		bl	strlen
 17584 119e 0346     		mov	r3, r0
 17585 11a0 1A46     		mov	r2, r3
 17586 11a2 07F11C03 		add	r3, r7, #28
 17587 11a6 1344     		add	r3, r3, r2
 17588 11a8 1F4A     		ldr	r2, .L712+12
 17589 11aa 1068     		ldr	r0, [r2]	@ unaligned
 17590 11ac 1860     		str	r0, [r3]	@ unaligned
 17591 11ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17592 11b0 9A80     		strh	r2, [r3, #4]	@ unaligned
 17593 11b2 0EE0     		b	.L698
 17594              	.L697:
2510:..\src/command_processing.c **** 			else
2511:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 17595              		.loc 1 2511 0
 17596 11b4 07F11C03 		add	r3, r7, #28
 17597 11b8 1846     		mov	r0, r3
 17598 11ba FFF7FEFF 		bl	strlen
 17599 11be 0346     		mov	r3, r0
 17600 11c0 1A46     		mov	r2, r3
 17601 11c2 07F11C03 		add	r3, r7, #28
 17602 11c6 1344     		add	r3, r3, r2
 17603 11c8 144A     		ldr	r2, .L712
 17604 11ca 1068     		ldr	r0, [r2]	@ unaligned
 17605 11cc 1860     		str	r0, [r3]	@ unaligned
 17606 11ce 1279     		ldrb	r2, [r2, #4]
 17607 11d0 1A71     		strb	r2, [r3, #4]
 17608              	.L698:
2512:..\src/command_processing.c **** 				 
2513:..\src/command_processing.c **** 			strcat(info_string, str);
 17609              		.loc 1 2513 0 discriminator 2
 17610 11d2 07F11C03 		add	r3, r7, #28
 17611 11d6 1946     		mov	r1, r3
 17612 11d8 7869     		ldr	r0, [r7, #20]
 17613 11da FFF7FEFF 		bl	strcat
2483:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 392


 17614              		.loc 1 2483 0 discriminator 2
 17615 11de D7F89430 		ldr	r3, [r7, #148]
 17616 11e2 0133     		adds	r3, r3, #1
 17617 11e4 C7F89430 		str	r3, [r7, #148]
 17618              	.L688:
2483:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17619              		.loc 1 2483 0 is_stmt 0 discriminator 1
 17620 11e8 114B     		ldr	r3, .L712+20
 17621 11ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17622 11ec 1A46     		mov	r2, r3
 17623 11ee D7F89430 		ldr	r3, [r7, #148]
 17624 11f2 9A42     		cmp	r2, r3
 17625 11f4 3FF772AE 		bgt	.L699
2514:..\src/command_processing.c **** 		}       
2515:..\src/command_processing.c **** 		
2516:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17626              		.loc 1 2516 0 is_stmt 1
 17627 11f8 7869     		ldr	r0, [r7, #20]
 17628 11fa FFF7FEFF 		bl	strlen
 17629 11fe 0346     		mov	r3, r0
 17630 1200 1A46     		mov	r2, r3
 17631 1202 7B69     		ldr	r3, [r7, #20]
 17632 1204 1344     		add	r3, r3, r2
 17633 1206 0B4A     		ldr	r2, .L712+24
 17634 1208 1188     		ldrh	r1, [r2]	@ unaligned
 17635 120a 9278     		ldrb	r2, [r2, #2]
 17636 120c 1980     		strh	r1, [r3]	@ unaligned
 17637 120e 9A70     		strb	r2, [r3, #2]
 17638              	.L701:
2517:..\src/command_processing.c **** 	}
2518:..\src/command_processing.c **** }
 17639              		.loc 1 2518 0
 17640 1210 00BF     		nop
 17641 1212 9C37     		adds	r7, r7, #156
 17642              		.cfi_def_cfa_offset 36
 17643 1214 BD46     		mov	sp, r7
 17644              		.cfi_def_cfa_register 13
 17645              		@ sp needed
 17646 1216 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 17647              	.L713:
 17648 121a 00BF     		.align	2
 17649              	.L712:
 17650 121c 200F0000 		.word	.LC147
 17651 1220 44150000 		.word	.LC213
 17652 1224 00000000 		.word	IMU_connected
 17653 1228 180F0000 		.word	.LC146
 17654 122c 54150000 		.word	.LC214
 17655 1230 00000000 		.word	N_IMU_Connected
 17656 1234 C00D0000 		.word	.LC126
 17657              		.cfi_endproc
 17658              	.LFE74:
 17659              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 17660              		.section	.rodata
 17661 183e 0000     		.align	2
 17662              	.LC239:
 17663 1840 486F7572 		.ascii	"Hour,Min,Sec,\000"
 17663      2C4D696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 393


 17663      2C536563 
 17663      2C00
 17664 184e 0000     		.align	2
 17665              	.LC240:
 17666 1850 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 17666      25645F50 
 17666      6F732C00 
 17667              		.align	2
 17668              	.LC241:
 17669 185c 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 17669      25645F43 
 17669      7572722C 
 17669      00
 17670 1869 000000   		.align	2
 17671              	.LC242:
 17672 186c 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 17672      315F6163 
 17672      742C454D 
 17672      475F325F 
 17672      6163742C 
 17673 189f 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 17673      5F74696D 
 17673      652C546F 
 17673      74616C5F 
 17673      72657374 
 17674              		.section	.text.prepare_SD_legend,"ax",%progbits
 17675              		.align	2
 17676              		.global	prepare_SD_legend
 17677              		.thumb
 17678              		.thumb_func
 17679              		.type	prepare_SD_legend, %function
 17680              	prepare_SD_legend:
 17681              	.LFB75:
2519:..\src/command_processing.c **** 
2520:..\src/command_processing.c **** 
2521:..\src/command_processing.c **** //==============================================================================
2522:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2523:..\src/command_processing.c **** //==============================================================================
2524:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2525:..\src/command_processing.c **** {
 17682              		.loc 1 2525 0
 17683              		.cfi_startproc
 17684              		@ args = 0, pretend = 0, frame = 112
 17685              		@ frame_needed = 1, uses_anonymous_args = 0
 17686 0000 90B5     		push	{r4, r7, lr}
 17687              		.cfi_def_cfa_offset 12
 17688              		.cfi_offset 4, -12
 17689              		.cfi_offset 7, -8
 17690              		.cfi_offset 14, -4
 17691 0002 9DB0     		sub	sp, sp, #116
 17692              		.cfi_def_cfa_offset 128
 17693 0004 00AF     		add	r7, sp, #0
 17694              		.cfi_def_cfa_register 7
 17695 0006 7860     		str	r0, [r7, #4]
2526:..\src/command_processing.c ****     char str[100];  
2527:..\src/command_processing.c ****     int i;
2528:..\src/command_processing.c ****         
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 394


2529:..\src/command_processing.c ****     // Legend
2530:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 17696              		.loc 1 2530 0
 17697 0008 7B68     		ldr	r3, [r7, #4]
 17698 000a 2A4A     		ldr	r2, .L719
 17699 000c 1C46     		mov	r4, r3
 17700 000e 1346     		mov	r3, r2
 17701 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 17702 0012 2060     		str	r0, [r4]	@ unaligned
 17703 0014 6160     		str	r1, [r4, #4]	@ unaligned
 17704 0016 A260     		str	r2, [r4, #8]	@ unaligned
 17705 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 17706 001a A381     		strh	r3, [r4, #12]	@ unaligned
2531:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17707              		.loc 1 2531 0
 17708 001c 0123     		movs	r3, #1
 17709 001e FB66     		str	r3, [r7, #108]
 17710 0020 0FE0     		b	.L715
 17711              	.L716:
2532:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 17712              		.loc 1 2532 0 discriminator 3
 17713 0022 07F10803 		add	r3, r7, #8
 17714 0026 FA6E     		ldr	r2, [r7, #108]
 17715 0028 2349     		ldr	r1, .L719+4
 17716 002a 1846     		mov	r0, r3
 17717 002c FFF7FEFF 		bl	sprintf
2533:..\src/command_processing.c ****         strcat(info_string, str);
 17718              		.loc 1 2533 0 discriminator 3
 17719 0030 07F10803 		add	r3, r7, #8
 17720 0034 1946     		mov	r1, r3
 17721 0036 7868     		ldr	r0, [r7, #4]
 17722 0038 FFF7FEFF 		bl	strcat
2531:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17723              		.loc 1 2531 0 discriminator 3
 17724 003c FB6E     		ldr	r3, [r7, #108]
 17725 003e 0133     		adds	r3, r3, #1
 17726 0040 FB66     		str	r3, [r7, #108]
 17727              	.L715:
2531:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 17728              		.loc 1 2531 0 is_stmt 0 discriminator 1
 17729 0042 FB6E     		ldr	r3, [r7, #108]
 17730 0044 0A2B     		cmp	r3, #10
 17731 0046 ECDD     		ble	.L716
2534:..\src/command_processing.c ****     }
2535:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 17732              		.loc 1 2535 0 is_stmt 1
 17733 0048 0123     		movs	r3, #1
 17734 004a FB66     		str	r3, [r7, #108]
 17735 004c 0FE0     		b	.L717
 17736              	.L718:
2536:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17737              		.loc 1 2536 0 discriminator 3
 17738 004e 07F10803 		add	r3, r7, #8
 17739 0052 FA6E     		ldr	r2, [r7, #108]
 17740 0054 1949     		ldr	r1, .L719+8
 17741 0056 1846     		mov	r0, r3
 17742 0058 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 395


2537:..\src/command_processing.c ****         strcat(info_string, str);
 17743              		.loc 1 2537 0 discriminator 3
 17744 005c 07F10803 		add	r3, r7, #8
 17745 0060 1946     		mov	r1, r3
 17746 0062 7868     		ldr	r0, [r7, #4]
 17747 0064 FFF7FEFF 		bl	strcat
2535:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17748              		.loc 1 2535 0 discriminator 3
 17749 0068 FB6E     		ldr	r3, [r7, #108]
 17750 006a 0133     		adds	r3, r3, #1
 17751 006c FB66     		str	r3, [r7, #108]
 17752              	.L717:
2535:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 17753              		.loc 1 2535 0 is_stmt 0 discriminator 1
 17754 006e FB6E     		ldr	r3, [r7, #108]
 17755 0070 042B     		cmp	r3, #4
 17756 0072 ECDD     		ble	.L718
2538:..\src/command_processing.c ****     }
2539:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 17757              		.loc 1 2539 0 is_stmt 1
 17758 0074 07F10803 		add	r3, r7, #8
 17759 0078 114A     		ldr	r2, .L719+12
 17760 007a 1846     		mov	r0, r3
 17761 007c 1146     		mov	r1, r2
 17762 007e 4D23     		movs	r3, #77
 17763 0080 1A46     		mov	r2, r3
 17764 0082 FFF7FEFF 		bl	memcpy
2540:..\src/command_processing.c ****     strcat(info_string, str);
 17765              		.loc 1 2540 0
 17766 0086 07F10803 		add	r3, r7, #8
 17767 008a 1946     		mov	r1, r3
 17768 008c 7868     		ldr	r0, [r7, #4]
 17769 008e FFF7FEFF 		bl	strcat
2541:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17770              		.loc 1 2541 0
 17771 0092 7868     		ldr	r0, [r7, #4]
 17772 0094 FFF7FEFF 		bl	strlen
 17773 0098 0346     		mov	r3, r0
 17774 009a 1A46     		mov	r2, r3
 17775 009c 7B68     		ldr	r3, [r7, #4]
 17776 009e 1344     		add	r3, r3, r2
 17777 00a0 084A     		ldr	r2, .L719+16
 17778 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 17779 00a4 9278     		ldrb	r2, [r2, #2]
 17780 00a6 1980     		strh	r1, [r3]	@ unaligned
 17781 00a8 9A70     		strb	r2, [r3, #2]
2542:..\src/command_processing.c **** }
 17782              		.loc 1 2542 0
 17783 00aa 00BF     		nop
 17784 00ac 7437     		adds	r7, r7, #116
 17785              		.cfi_def_cfa_offset 12
 17786 00ae BD46     		mov	sp, r7
 17787              		.cfi_def_cfa_register 13
 17788              		@ sp needed
 17789 00b0 90BD     		pop	{r4, r7, pc}
 17790              	.L720:
 17791 00b2 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 396


 17792              	.L719:
 17793 00b4 40180000 		.word	.LC239
 17794 00b8 50180000 		.word	.LC240
 17795 00bc 5C180000 		.word	.LC241
 17796 00c0 6C180000 		.word	.LC242
 17797 00c4 C00D0000 		.word	.LC126
 17798              		.cfi_endproc
 17799              	.LFE75:
 17800              		.size	prepare_SD_legend, .-prepare_SD_legend
 17801              		.section	.rodata
 17802 18b9 000000   		.align	2
 17803              	.LC243:
 17804 18bc 25303264 		.ascii	"%02d,%02d,%02d,\000"
 17804      2C253032 
 17804      642C2530 
 17804      32642C00 
 17805              		.align	2
 17806              	.LC244:
 17807 18cc 256C752C 		.ascii	"%lu,\000"
 17807      00
 17808 18d1 000000   		.align	2
 17809              	.LC245:
 17810 18d4 256C752C 		.ascii	"%lu,%lu,\000"
 17810      256C752C 
 17810      00
 17811 18dd 000000   		.align	2
 17812              	.LC246:
 17813 18e0 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 17813      256C752C 
 17813      256C752C 
 17813      256C7500 
 17814              		.section	.text.prepare_SD_info,"ax",%progbits
 17815              		.align	2
 17816              		.global	prepare_SD_info
 17817              		.thumb
 17818              		.thumb_func
 17819              		.type	prepare_SD_info, %function
 17820              	prepare_SD_info:
 17821              	.LFB76:
2543:..\src/command_processing.c **** 
2544:..\src/command_processing.c **** //==============================================================================
2545:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2546:..\src/command_processing.c **** //==============================================================================
2547:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2548:..\src/command_processing.c **** {
 17822              		.loc 1 2548 0
 17823              		.cfi_startproc
 17824              		@ args = 0, pretend = 0, frame = 112
 17825              		@ frame_needed = 1, uses_anonymous_args = 0
 17826 0000 90B5     		push	{r4, r7, lr}
 17827              		.cfi_def_cfa_offset 12
 17828              		.cfi_offset 4, -12
 17829              		.cfi_offset 7, -8
 17830              		.cfi_offset 14, -4
 17831 0002 9FB0     		sub	sp, sp, #124
 17832              		.cfi_def_cfa_offset 136
 17833 0004 02AF     		add	r7, sp, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 397


 17834              		.cfi_def_cfa 7, 128
 17835 0006 7860     		str	r0, [r7, #4]
2549:..\src/command_processing.c ****     char str[100];  
2550:..\src/command_processing.c ****     int i;
2551:..\src/command_processing.c ****             
2552:..\src/command_processing.c ****     strcpy(info_string, "");
 17836              		.loc 1 2552 0
 17837 0008 7B68     		ldr	r3, [r7, #4]
 17838 000a 0022     		movs	r2, #0
 17839 000c 1A70     		strb	r2, [r3]
2553:..\src/command_processing.c ****     
2554:..\src/command_processing.c ****     // Time
2555:..\src/command_processing.c ****     strcat(info_string, "");
2556:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 17840              		.loc 1 2556 0
 17841 000e 424B     		ldr	r3, .L726
 17842 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 17843 0014 1A46     		mov	r2, r3
 17844 0016 404B     		ldr	r3, .L726
 17845 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 17846 001c 1946     		mov	r1, r3
 17847 001e 3E4B     		ldr	r3, .L726
 17848 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 17849 0024 07F10800 		add	r0, r7, #8
 17850 0028 0093     		str	r3, [sp]
 17851 002a 0B46     		mov	r3, r1
 17852 002c 3B49     		ldr	r1, .L726+4
 17853 002e FFF7FEFF 		bl	sprintf
2557:..\src/command_processing.c ****     strcat(info_string, str);
 17854              		.loc 1 2557 0
 17855 0032 07F10803 		add	r3, r7, #8
 17856 0036 1946     		mov	r1, r3
 17857 0038 7868     		ldr	r0, [r7, #4]
 17858 003a FFF7FEFF 		bl	strcat
2558:..\src/command_processing.c **** 
2559:..\src/command_processing.c ****     // Pos_Bin
2560:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 17859              		.loc 1 2560 0
 17860 003e 0123     		movs	r3, #1
 17861 0040 FB66     		str	r3, [r7, #108]
 17862 0042 14E0     		b	.L722
 17863              	.L723:
2561:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17864              		.loc 1 2561 0 discriminator 3
 17865 0044 FB6E     		ldr	r3, [r7, #108]
 17866 0046 013B     		subs	r3, r3, #1
 17867 0048 334A     		ldr	r2, .L726
 17868 004a 0633     		adds	r3, r3, #6
 17869 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 17870 0050 07F10803 		add	r3, r7, #8
 17871 0054 3249     		ldr	r1, .L726+8
 17872 0056 1846     		mov	r0, r3
 17873 0058 FFF7FEFF 		bl	sprintf
2562:..\src/command_processing.c ****         strcat(info_string, str);
 17874              		.loc 1 2562 0 discriminator 3
 17875 005c 07F10803 		add	r3, r7, #8
 17876 0060 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 398


 17877 0062 7868     		ldr	r0, [r7, #4]
 17878 0064 FFF7FEFF 		bl	strcat
2560:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17879              		.loc 1 2560 0 discriminator 3
 17880 0068 FB6E     		ldr	r3, [r7, #108]
 17881 006a 0133     		adds	r3, r3, #1
 17882 006c FB66     		str	r3, [r7, #108]
 17883              	.L722:
2560:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 17884              		.loc 1 2560 0 is_stmt 0 discriminator 1
 17885 006e FB6E     		ldr	r3, [r7, #108]
 17886 0070 0A2B     		cmp	r3, #10
 17887 0072 E7DD     		ble	.L723
2563:..\src/command_processing.c ****     }
2564:..\src/command_processing.c ****     
2565:..\src/command_processing.c ****     // Curr_Bin
2566:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 17888              		.loc 1 2566 0 is_stmt 1
 17889 0074 0123     		movs	r3, #1
 17890 0076 FB66     		str	r3, [r7, #108]
 17891 0078 14E0     		b	.L724
 17892              	.L725:
2567:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17893              		.loc 1 2567 0 discriminator 3
 17894 007a FB6E     		ldr	r3, [r7, #108]
 17895 007c 013B     		subs	r3, r3, #1
 17896 007e 264A     		ldr	r2, .L726
 17897 0080 1033     		adds	r3, r3, #16
 17898 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 17899 0086 07F10803 		add	r3, r7, #8
 17900 008a 2549     		ldr	r1, .L726+8
 17901 008c 1846     		mov	r0, r3
 17902 008e FFF7FEFF 		bl	sprintf
2568:..\src/command_processing.c ****         strcat(info_string, str);
 17903              		.loc 1 2568 0 discriminator 3
 17904 0092 07F10803 		add	r3, r7, #8
 17905 0096 1946     		mov	r1, r3
 17906 0098 7868     		ldr	r0, [r7, #4]
 17907 009a FFF7FEFF 		bl	strcat
2566:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17908              		.loc 1 2566 0 discriminator 3
 17909 009e FB6E     		ldr	r3, [r7, #108]
 17910 00a0 0133     		adds	r3, r3, #1
 17911 00a2 FB66     		str	r3, [r7, #108]
 17912              	.L724:
2566:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 17913              		.loc 1 2566 0 is_stmt 0 discriminator 1
 17914 00a4 FB6E     		ldr	r3, [r7, #108]
 17915 00a6 042B     		cmp	r3, #4
 17916 00a8 E7DD     		ble	.L725
2569:..\src/command_processing.c ****     }
2570:..\src/command_processing.c ****        
2571:..\src/command_processing.c ****     // EMG_1, EMG_2
2572:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 17917              		.loc 1 2572 0 is_stmt 1
 17918 00aa 1B4B     		ldr	r3, .L726
 17919 00ac 1A69     		ldr	r2, [r3, #16]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 399


 17920 00ae 1A4B     		ldr	r3, .L726
 17921 00b0 5B69     		ldr	r3, [r3, #20]
 17922 00b2 07F10800 		add	r0, r7, #8
 17923 00b6 1B49     		ldr	r1, .L726+12
 17924 00b8 FFF7FEFF 		bl	sprintf
2573:..\src/command_processing.c ****     strcat(info_string, str);
 17925              		.loc 1 2573 0
 17926 00bc 07F10803 		add	r3, r7, #8
 17927 00c0 1946     		mov	r1, r3
 17928 00c2 7868     		ldr	r0, [r7, #4]
 17929 00c4 FFF7FEFF 		bl	strcat
2574:..\src/command_processing.c ****     
2575:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2576:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 17930              		.loc 1 2576 0
 17931 00c8 134B     		ldr	r3, .L726
 17932 00ca 196D     		ldr	r1, [r3, #80]
 17933 00cc 124B     		ldr	r3, .L726
 17934 00ce 5C6D     		ldr	r4, [r3, #84]
 17935 00d0 114B     		ldr	r3, .L726
 17936 00d2 9B6D     		ldr	r3, [r3, #88]
 17937 00d4 104A     		ldr	r2, .L726
 17938 00d6 D26D     		ldr	r2, [r2, #92]
 17939 00d8 07F10800 		add	r0, r7, #8
 17940 00dc 0192     		str	r2, [sp, #4]
 17941 00de 0093     		str	r3, [sp]
 17942 00e0 2346     		mov	r3, r4
 17943 00e2 0A46     		mov	r2, r1
 17944 00e4 1049     		ldr	r1, .L726+16
 17945 00e6 FFF7FEFF 		bl	sprintf
2577:..\src/command_processing.c ****     strcat(info_string, str);
 17946              		.loc 1 2577 0
 17947 00ea 07F10803 		add	r3, r7, #8
 17948 00ee 1946     		mov	r1, r3
 17949 00f0 7868     		ldr	r0, [r7, #4]
 17950 00f2 FFF7FEFF 		bl	strcat
2578:..\src/command_processing.c ****     
2579:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 17951              		.loc 1 2579 0
 17952 00f6 7868     		ldr	r0, [r7, #4]
 17953 00f8 FFF7FEFF 		bl	strlen
 17954 00fc 0346     		mov	r3, r0
 17955 00fe 1A46     		mov	r2, r3
 17956 0100 7B68     		ldr	r3, [r7, #4]
 17957 0102 1344     		add	r3, r3, r2
 17958 0104 094A     		ldr	r2, .L726+20
 17959 0106 1188     		ldrh	r1, [r2]	@ unaligned
 17960 0108 9278     		ldrb	r2, [r2, #2]
 17961 010a 1980     		strh	r1, [r3]	@ unaligned
 17962 010c 9A70     		strb	r2, [r3, #2]
2580:..\src/command_processing.c **** }
 17963              		.loc 1 2580 0
 17964 010e 00BF     		nop
 17965 0110 7437     		adds	r7, r7, #116
 17966              		.cfi_def_cfa_offset 12
 17967 0112 BD46     		mov	sp, r7
 17968              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 400


 17969              		@ sp needed
 17970 0114 90BD     		pop	{r4, r7, pc}
 17971              	.L727:
 17972 0116 00BF     		.align	2
 17973              	.L726:
 17974 0118 00000000 		.word	g_mem
 17975 011c BC180000 		.word	.LC243
 17976 0120 CC180000 		.word	.LC244
 17977 0124 D4180000 		.word	.LC245
 17978 0128 E0180000 		.word	.LC246
 17979 012c C00D0000 		.word	.LC126
 17980              		.cfi_endproc
 17981              	.LFE76:
 17982              		.size	prepare_SD_info, .-prepare_SD_info
 17983              		.section	.rodata
 17984              		.align	2
 17985              	.LC247:
 17986 18f0 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 17986      4F525320 
 17986      494E464F 
 17986      0D0A00
 17987 18ff 00       		.align	2
 17988              	.LC248:
 17989 1900 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 17989      3A202564 
 17989      09256409 
 17989      25640D0A 
 17989      00
 17990 1911 000000   		.align	2
 17991              	.LC249:
 17992 1914 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 17992      6F3A2025 
 17992      64092564 
 17992      0925640D 
 17992      0A00
 17993 1926 0000     		.align	2
 17994              	.LC250:
 17995 1928 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 17995      3A202564 
 17995      09256409 
 17995      25640D0A 
 17995      00
 17996 1939 000000   		.align	2
 17997              	.LC251:
 17998 193c 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 17998      743A2025 
 17998      2E336609 
 17998      252E3366 
 17998      09252E33 
 17999 1959 000000   		.align	2
 18000              	.LC252:
 18001 195c 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 18001      70657261 
 18001      74757265 
 18001      3A202564 
 18001      0D0A00
 18002              		.section	.text.IMU_reading_info,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 401


 18003              		.align	2
 18004              		.global	IMU_reading_info
 18005              		.thumb
 18006              		.thumb_func
 18007              		.type	IMU_reading_info, %function
 18008              	IMU_reading_info:
 18009              	.LFB77:
2581:..\src/command_processing.c **** 
2582:..\src/command_processing.c **** //==============================================================================
2583:..\src/command_processing.c **** //                                                              IMU READING INFO
2584:..\src/command_processing.c **** //==============================================================================
2585:..\src/command_processing.c **** 
2586:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2587:..\src/command_processing.c **** {
 18010              		.loc 1 2587 0
 18011              		.cfi_startproc
 18012              		@ args = 0, pretend = 0, frame = 312
 18013              		@ frame_needed = 1, uses_anonymous_args = 0
 18014 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 18015              		.cfi_def_cfa_offset 32
 18016              		.cfi_offset 4, -32
 18017              		.cfi_offset 5, -28
 18018              		.cfi_offset 7, -24
 18019              		.cfi_offset 8, -20
 18020              		.cfi_offset 9, -16
 18021              		.cfi_offset 10, -12
 18022              		.cfi_offset 11, -8
 18023              		.cfi_offset 14, -4
 18024 0004 D4B0     		sub	sp, sp, #336
 18025              		.cfi_def_cfa_offset 368
 18026 0006 06AF     		add	r7, sp, #24
 18027              		.cfi_def_cfa 7, 344
 18028 0008 3B1D     		adds	r3, r7, #4
 18029 000a 1860     		str	r0, [r3]
2588:..\src/command_processing.c ****     char str[300];  
2589:..\src/command_processing.c ****     int i;
2590:..\src/command_processing.c ****                  
2591:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 18030              		.loc 1 2591 0
 18031 000c 3B1D     		adds	r3, r7, #4
 18032 000e 1868     		ldr	r0, [r3]
 18033 0010 FFF7FEFF 		bl	strlen
 18034 0014 0346     		mov	r3, r0
 18035 0016 1A46     		mov	r2, r3
 18036 0018 3B1D     		adds	r3, r7, #4
 18037 001a 1B68     		ldr	r3, [r3]
 18038 001c 1344     		add	r3, r3, r2
 18039 001e C94A     		ldr	r2, .L736
 18040 0020 1C46     		mov	r4, r3
 18041 0022 1346     		mov	r3, r2
 18042 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 18043 0026 2060     		str	r0, [r4]	@ unaligned
 18044 0028 6160     		str	r1, [r4, #4]	@ unaligned
 18045 002a A260     		str	r2, [r4, #8]	@ unaligned
 18046 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 18047 002e 9B78     		ldrb	r3, [r3, #2]
 18048 0030 A281     		strh	r2, [r4, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 402


 18049 0032 A373     		strb	r3, [r4, #14]
2592:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 18050              		.loc 1 2592 0
 18051 0034 0023     		movs	r3, #0
 18052 0036 C7F83431 		str	r3, [r7, #308]
 18053 003a 66E1     		b	.L729
 18054              	.L735:
2593:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18055              		.loc 1 2593 0
 18056 003c C24A     		ldr	r2, .L736+4
 18057 003e D7F83431 		ldr	r3, [r7, #308]
 18058 0042 1344     		add	r3, r3, r2
 18059 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18060 0046 07F10800 		add	r0, r7, #8
 18061 004a D7F83421 		ldr	r2, [r7, #308]
 18062 004e BF49     		ldr	r1, .L736+8
 18063 0050 FFF7FEFF 		bl	sprintf
2594:..\src/command_processing.c ****         strcat(info_string, str);
 18064              		.loc 1 2594 0
 18065 0054 07F10802 		add	r2, r7, #8
 18066 0058 3B1D     		adds	r3, r7, #4
 18067 005a 1146     		mov	r1, r2
 18068 005c 1868     		ldr	r0, [r3]
 18069 005e FFF7FEFF 		bl	strcat
2595:..\src/command_processing.c ****         
2596:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 18070              		.loc 1 2596 0
 18071 0062 B94A     		ldr	r2, .L736+4
 18072 0064 D7F83431 		ldr	r3, [r7, #308]
 18073 0068 1344     		add	r3, r3, r2
 18074 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18075 006c 1946     		mov	r1, r3
 18076 006e B84A     		ldr	r2, .L736+12
 18077 0070 0B46     		mov	r3, r1
 18078 0072 9B00     		lsls	r3, r3, #2
 18079 0074 0B44     		add	r3, r3, r1
 18080 0076 1344     		add	r3, r3, r2
 18081 0078 03F20223 		addw	r3, r3, #514
 18082 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18083 007e 002B     		cmp	r3, #0
 18084 0080 31D0     		beq	.L730
2597:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 18085              		.loc 1 2597 0
 18086 0082 B449     		ldr	r1, .L736+16
 18087 0084 D7F83421 		ldr	r2, [r7, #308]
 18088 0088 1346     		mov	r3, r2
 18089 008a 9B00     		lsls	r3, r3, #2
 18090 008c 1344     		add	r3, r3, r2
 18091 008e DB00     		lsls	r3, r3, #3
 18092 0090 0B44     		add	r3, r3, r1
 18093 0092 0233     		adds	r3, r3, #2
 18094 0094 B3F90030 		ldrsh	r3, [r3]
 18095 0098 1C46     		mov	r4, r3
 18096 009a AE49     		ldr	r1, .L736+16
 18097 009c D7F83421 		ldr	r2, [r7, #308]
 18098 00a0 1346     		mov	r3, r2
 18099 00a2 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 403


 18100 00a4 1344     		add	r3, r3, r2
 18101 00a6 DB00     		lsls	r3, r3, #3
 18102 00a8 0B44     		add	r3, r3, r1
 18103 00aa 0433     		adds	r3, r3, #4
 18104 00ac B3F90030 		ldrsh	r3, [r3]
 18105 00b0 1D46     		mov	r5, r3
 18106 00b2 A849     		ldr	r1, .L736+16
 18107 00b4 D7F83421 		ldr	r2, [r7, #308]
 18108 00b8 1346     		mov	r3, r2
 18109 00ba 9B00     		lsls	r3, r3, #2
 18110 00bc 1344     		add	r3, r3, r2
 18111 00be DB00     		lsls	r3, r3, #3
 18112 00c0 0B44     		add	r3, r3, r1
 18113 00c2 0633     		adds	r3, r3, #6
 18114 00c4 B3F90030 		ldrsh	r3, [r3]
 18115 00c8 07F10800 		add	r0, r7, #8
 18116 00cc 0093     		str	r3, [sp]
 18117 00ce 2B46     		mov	r3, r5
 18118 00d0 2246     		mov	r2, r4
 18119 00d2 A149     		ldr	r1, .L736+20
 18120 00d4 FFF7FEFF 		bl	sprintf
2598:..\src/command_processing.c ****             strcat(info_string, str);
 18121              		.loc 1 2598 0
 18122 00d8 07F10802 		add	r2, r7, #8
 18123 00dc 3B1D     		adds	r3, r7, #4
 18124 00de 1146     		mov	r1, r2
 18125 00e0 1868     		ldr	r0, [r3]
 18126 00e2 FFF7FEFF 		bl	strcat
 18127              	.L730:
2599:..\src/command_processing.c ****         }
2600:..\src/command_processing.c **** 
2601:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 18128              		.loc 1 2601 0
 18129 00e6 984A     		ldr	r2, .L736+4
 18130 00e8 D7F83431 		ldr	r3, [r7, #308]
 18131 00ec 1344     		add	r3, r3, r2
 18132 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18133 00f0 1946     		mov	r1, r3
 18134 00f2 974A     		ldr	r2, .L736+12
 18135 00f4 0B46     		mov	r3, r1
 18136 00f6 9B00     		lsls	r3, r3, #2
 18137 00f8 0B44     		add	r3, r3, r1
 18138 00fa 1344     		add	r3, r3, r2
 18139 00fc 03F20323 		addw	r3, r3, #515
 18140 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18141 0102 002B     		cmp	r3, #0
 18142 0104 31D0     		beq	.L731
2602:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 18143              		.loc 1 2602 0
 18144 0106 9349     		ldr	r1, .L736+16
 18145 0108 D7F83421 		ldr	r2, [r7, #308]
 18146 010c 1346     		mov	r3, r2
 18147 010e 9B00     		lsls	r3, r3, #2
 18148 0110 1344     		add	r3, r3, r2
 18149 0112 DB00     		lsls	r3, r3, #3
 18150 0114 0B44     		add	r3, r3, r1
 18151 0116 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 404


 18152 0118 B3F90030 		ldrsh	r3, [r3]
 18153 011c 1C46     		mov	r4, r3
 18154 011e 8D49     		ldr	r1, .L736+16
 18155 0120 D7F83421 		ldr	r2, [r7, #308]
 18156 0124 1346     		mov	r3, r2
 18157 0126 9B00     		lsls	r3, r3, #2
 18158 0128 1344     		add	r3, r3, r2
 18159 012a DB00     		lsls	r3, r3, #3
 18160 012c 0B44     		add	r3, r3, r1
 18161 012e 0A33     		adds	r3, r3, #10
 18162 0130 B3F90030 		ldrsh	r3, [r3]
 18163 0134 1D46     		mov	r5, r3
 18164 0136 8749     		ldr	r1, .L736+16
 18165 0138 D7F83421 		ldr	r2, [r7, #308]
 18166 013c 1346     		mov	r3, r2
 18167 013e 9B00     		lsls	r3, r3, #2
 18168 0140 1344     		add	r3, r3, r2
 18169 0142 DB00     		lsls	r3, r3, #3
 18170 0144 0B44     		add	r3, r3, r1
 18171 0146 0C33     		adds	r3, r3, #12
 18172 0148 B3F90030 		ldrsh	r3, [r3]
 18173 014c 07F10800 		add	r0, r7, #8
 18174 0150 0093     		str	r3, [sp]
 18175 0152 2B46     		mov	r3, r5
 18176 0154 2246     		mov	r2, r4
 18177 0156 8149     		ldr	r1, .L736+24
 18178 0158 FFF7FEFF 		bl	sprintf
2603:..\src/command_processing.c ****             strcat(info_string, str);
 18179              		.loc 1 2603 0
 18180 015c 07F10802 		add	r2, r7, #8
 18181 0160 3B1D     		adds	r3, r7, #4
 18182 0162 1146     		mov	r1, r2
 18183 0164 1868     		ldr	r0, [r3]
 18184 0166 FFF7FEFF 		bl	strcat
 18185              	.L731:
2604:..\src/command_processing.c ****         }
2605:..\src/command_processing.c **** 
2606:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 18186              		.loc 1 2606 0
 18187 016a 774A     		ldr	r2, .L736+4
 18188 016c D7F83431 		ldr	r3, [r7, #308]
 18189 0170 1344     		add	r3, r3, r2
 18190 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18191 0174 1946     		mov	r1, r3
 18192 0176 764A     		ldr	r2, .L736+12
 18193 0178 0B46     		mov	r3, r1
 18194 017a 9B00     		lsls	r3, r3, #2
 18195 017c 0B44     		add	r3, r3, r1
 18196 017e 1344     		add	r3, r3, r2
 18197 0180 03F50173 		add	r3, r3, #516
 18198 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18199 0186 002B     		cmp	r3, #0
 18200 0188 31D0     		beq	.L732
2607:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 18201              		.loc 1 2607 0
 18202 018a 7249     		ldr	r1, .L736+16
 18203 018c D7F83421 		ldr	r2, [r7, #308]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 405


 18204 0190 1346     		mov	r3, r2
 18205 0192 9B00     		lsls	r3, r3, #2
 18206 0194 1344     		add	r3, r3, r2
 18207 0196 DB00     		lsls	r3, r3, #3
 18208 0198 0B44     		add	r3, r3, r1
 18209 019a 0E33     		adds	r3, r3, #14
 18210 019c B3F90030 		ldrsh	r3, [r3]
 18211 01a0 1C46     		mov	r4, r3
 18212 01a2 6C49     		ldr	r1, .L736+16
 18213 01a4 D7F83421 		ldr	r2, [r7, #308]
 18214 01a8 1346     		mov	r3, r2
 18215 01aa 9B00     		lsls	r3, r3, #2
 18216 01ac 1344     		add	r3, r3, r2
 18217 01ae DB00     		lsls	r3, r3, #3
 18218 01b0 0B44     		add	r3, r3, r1
 18219 01b2 1033     		adds	r3, r3, #16
 18220 01b4 B3F90030 		ldrsh	r3, [r3]
 18221 01b8 1D46     		mov	r5, r3
 18222 01ba 6649     		ldr	r1, .L736+16
 18223 01bc D7F83421 		ldr	r2, [r7, #308]
 18224 01c0 1346     		mov	r3, r2
 18225 01c2 9B00     		lsls	r3, r3, #2
 18226 01c4 1344     		add	r3, r3, r2
 18227 01c6 DB00     		lsls	r3, r3, #3
 18228 01c8 0B44     		add	r3, r3, r1
 18229 01ca 1233     		adds	r3, r3, #18
 18230 01cc B3F90030 		ldrsh	r3, [r3]
 18231 01d0 07F10800 		add	r0, r7, #8
 18232 01d4 0093     		str	r3, [sp]
 18233 01d6 2B46     		mov	r3, r5
 18234 01d8 2246     		mov	r2, r4
 18235 01da 6149     		ldr	r1, .L736+28
 18236 01dc FFF7FEFF 		bl	sprintf
2608:..\src/command_processing.c ****             strcat(info_string, str);
 18237              		.loc 1 2608 0
 18238 01e0 07F10802 		add	r2, r7, #8
 18239 01e4 3B1D     		adds	r3, r7, #4
 18240 01e6 1146     		mov	r1, r2
 18241 01e8 1868     		ldr	r0, [r3]
 18242 01ea FFF7FEFF 		bl	strcat
 18243              	.L732:
2609:..\src/command_processing.c ****         }
2610:..\src/command_processing.c ****         
2611:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
 18244              		.loc 1 2611 0
 18245 01ee 564A     		ldr	r2, .L736+4
 18246 01f0 D7F83431 		ldr	r3, [r7, #308]
 18247 01f4 1344     		add	r3, r3, r2
 18248 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18249 01f8 1946     		mov	r1, r3
 18250 01fa 554A     		ldr	r2, .L736+12
 18251 01fc 0B46     		mov	r3, r1
 18252 01fe 9B00     		lsls	r3, r3, #2
 18253 0200 0B44     		add	r3, r3, r1
 18254 0202 1344     		add	r3, r3, r2
 18255 0204 03F20523 		addw	r3, r3, #517
 18256 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 406


 18257 020a 002B     		cmp	r3, #0
 18258 020c 4FD0     		beq	.L733
2612:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 18259              		.loc 1 2612 0
 18260 020e 5149     		ldr	r1, .L736+16
 18261 0210 D7F83421 		ldr	r2, [r7, #308]
 18262 0214 1346     		mov	r3, r2
 18263 0216 9B00     		lsls	r3, r3, #2
 18264 0218 1344     		add	r3, r3, r2
 18265 021a DB00     		lsls	r3, r3, #3
 18266 021c 0B44     		add	r3, r3, r1
 18267 021e 1433     		adds	r3, r3, #20
 18268 0220 1B68     		ldr	r3, [r3]	@ float
 18269 0222 1846     		mov	r0, r3
 18270 0224 FFF7FEFF 		bl	__aeabi_f2d
 18271 0228 8246     		mov	r10, r0
 18272 022a 8B46     		mov	fp, r1
 18273 022c 4949     		ldr	r1, .L736+16
 18274 022e D7F83421 		ldr	r2, [r7, #308]
 18275 0232 1346     		mov	r3, r2
 18276 0234 9B00     		lsls	r3, r3, #2
 18277 0236 1344     		add	r3, r3, r2
 18278 0238 DB00     		lsls	r3, r3, #3
 18279 023a 0B44     		add	r3, r3, r1
 18280 023c 1833     		adds	r3, r3, #24
 18281 023e 1B68     		ldr	r3, [r3]	@ float
 18282 0240 1846     		mov	r0, r3
 18283 0242 FFF7FEFF 		bl	__aeabi_f2d
 18284 0246 0446     		mov	r4, r0
 18285 0248 0D46     		mov	r5, r1
 18286 024a 4249     		ldr	r1, .L736+16
 18287 024c D7F83421 		ldr	r2, [r7, #308]
 18288 0250 1346     		mov	r3, r2
 18289 0252 9B00     		lsls	r3, r3, #2
 18290 0254 1344     		add	r3, r3, r2
 18291 0256 DB00     		lsls	r3, r3, #3
 18292 0258 0B44     		add	r3, r3, r1
 18293 025a 1C33     		adds	r3, r3, #28
 18294 025c 1B68     		ldr	r3, [r3]	@ float
 18295 025e 1846     		mov	r0, r3
 18296 0260 FFF7FEFF 		bl	__aeabi_f2d
 18297 0264 8046     		mov	r8, r0
 18298 0266 8946     		mov	r9, r1
 18299 0268 3A49     		ldr	r1, .L736+16
 18300 026a D7F83421 		ldr	r2, [r7, #308]
 18301 026e 1346     		mov	r3, r2
 18302 0270 9B00     		lsls	r3, r3, #2
 18303 0272 1344     		add	r3, r3, r2
 18304 0274 DB00     		lsls	r3, r3, #3
 18305 0276 0B44     		add	r3, r3, r1
 18306 0278 2033     		adds	r3, r3, #32
 18307 027a 1B68     		ldr	r3, [r3]	@ float
 18308 027c 1846     		mov	r0, r3
 18309 027e FFF7FEFF 		bl	__aeabi_f2d
 18310 0282 0246     		mov	r2, r0
 18311 0284 0B46     		mov	r3, r1
 18312 0286 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 407


 18313 028a CDE90423 		strd	r2, [sp, #16]
 18314 028e CDE90289 		strd	r8, [sp, #8]
 18315 0292 CDE90045 		strd	r4, [sp]
 18316 0296 5246     		mov	r2, r10
 18317 0298 5B46     		mov	r3, fp
 18318 029a 3249     		ldr	r1, .L736+32
 18319 029c FFF7FEFF 		bl	sprintf
2613:..\src/command_processing.c ****             strcat(info_string, str);
 18320              		.loc 1 2613 0
 18321 02a0 07F10802 		add	r2, r7, #8
 18322 02a4 3B1D     		adds	r3, r7, #4
 18323 02a6 1146     		mov	r1, r2
 18324 02a8 1868     		ldr	r0, [r3]
 18325 02aa FFF7FEFF 		bl	strcat
 18326              	.L733:
2614:..\src/command_processing.c ****         }
2615:..\src/command_processing.c ****         
2616:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 18327              		.loc 1 2616 0
 18328 02ae 264A     		ldr	r2, .L736+4
 18329 02b0 D7F83431 		ldr	r3, [r7, #308]
 18330 02b4 1344     		add	r3, r3, r2
 18331 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18332 02b8 1946     		mov	r1, r3
 18333 02ba 254A     		ldr	r2, .L736+12
 18334 02bc 0B46     		mov	r3, r1
 18335 02be 9B00     		lsls	r3, r3, #2
 18336 02c0 0B44     		add	r3, r3, r1
 18337 02c2 1344     		add	r3, r3, r2
 18338 02c4 03F20623 		addw	r3, r3, #518
 18339 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18340 02ca 002B     		cmp	r3, #0
 18341 02cc 18D0     		beq	.L734
2617:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 18342              		.loc 1 2617 0
 18343 02ce 2149     		ldr	r1, .L736+16
 18344 02d0 D7F83421 		ldr	r2, [r7, #308]
 18345 02d4 1346     		mov	r3, r2
 18346 02d6 9B00     		lsls	r3, r3, #2
 18347 02d8 1344     		add	r3, r3, r2
 18348 02da DB00     		lsls	r3, r3, #3
 18349 02dc 0B44     		add	r3, r3, r1
 18350 02de 2433     		adds	r3, r3, #36
 18351 02e0 B3F90030 		ldrsh	r3, [r3]
 18352 02e4 1A46     		mov	r2, r3
 18353 02e6 07F10803 		add	r3, r7, #8
 18354 02ea 1F49     		ldr	r1, .L736+36
 18355 02ec 1846     		mov	r0, r3
 18356 02ee FFF7FEFF 		bl	sprintf
2618:..\src/command_processing.c ****             strcat(info_string, str);
 18357              		.loc 1 2618 0
 18358 02f2 07F10802 		add	r2, r7, #8
 18359 02f6 3B1D     		adds	r3, r7, #4
 18360 02f8 1146     		mov	r1, r2
 18361 02fa 1868     		ldr	r0, [r3]
 18362 02fc FFF7FEFF 		bl	strcat
 18363              	.L734:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 408


2592:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18364              		.loc 1 2592 0 discriminator 2
 18365 0300 D7F83431 		ldr	r3, [r7, #308]
 18366 0304 0133     		adds	r3, r3, #1
 18367 0306 C7F83431 		str	r3, [r7, #308]
 18368              	.L729:
2592:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18369              		.loc 1 2592 0 is_stmt 0 discriminator 1
 18370 030a 184B     		ldr	r3, .L736+40
 18371 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18372 030e 1A46     		mov	r2, r3
 18373 0310 D7F83431 		ldr	r3, [r7, #308]
 18374 0314 9A42     		cmp	r2, r3
 18375 0316 3FF791AE 		bgt	.L735
2619:..\src/command_processing.c ****         }
2620:..\src/command_processing.c ****         
2621:..\src/command_processing.c ****     }
2622:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18376              		.loc 1 2622 0 is_stmt 1
 18377 031a 3B1D     		adds	r3, r7, #4
 18378 031c 1868     		ldr	r0, [r3]
 18379 031e FFF7FEFF 		bl	strlen
 18380 0322 0346     		mov	r3, r0
 18381 0324 1A46     		mov	r2, r3
 18382 0326 3B1D     		adds	r3, r7, #4
 18383 0328 1B68     		ldr	r3, [r3]
 18384 032a 1344     		add	r3, r3, r2
 18385 032c 104A     		ldr	r2, .L736+44
 18386 032e 1188     		ldrh	r1, [r2]	@ unaligned
 18387 0330 9278     		ldrb	r2, [r2, #2]
 18388 0332 1980     		strh	r1, [r3]	@ unaligned
 18389 0334 9A70     		strb	r2, [r3, #2]
2623:..\src/command_processing.c **** }
 18390              		.loc 1 2623 0
 18391 0336 00BF     		nop
 18392 0338 07F59C77 		add	r7, r7, #312
 18393              		.cfi_def_cfa_offset 32
 18394 033c BD46     		mov	sp, r7
 18395              		.cfi_def_cfa_register 13
 18396              		@ sp needed
 18397 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 18398              	.L737:
 18399 0342 00BF     		.align	2
 18400              	.L736:
 18401 0344 F0180000 		.word	.LC247
 18402 0348 00000000 		.word	IMU_connected
 18403 034c F8140000 		.word	.LC209
 18404 0350 00000000 		.word	c_mem
 18405 0354 00000000 		.word	g_imu
 18406 0358 00190000 		.word	.LC248
 18407 035c 14190000 		.word	.LC249
 18408 0360 28190000 		.word	.LC250
 18409 0364 3C190000 		.word	.LC251
 18410 0368 5C190000 		.word	.LC252
 18411 036c 00000000 		.word	N_IMU_Connected
 18412 0370 C00D0000 		.word	.LC126
 18413              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 409


 18414              	.LFE77:
 18415              		.size	IMU_reading_info, .-IMU_reading_info
 18416              		.section	.text.commWrite_old_id,"ax",%progbits
 18417              		.align	2
 18418              		.global	commWrite_old_id
 18419              		.thumb
 18420              		.thumb_func
 18421              		.type	commWrite_old_id, %function
 18422              	commWrite_old_id:
 18423              	.LFB78:
2624:..\src/command_processing.c **** 
2625:..\src/command_processing.c **** //==============================================================================
2626:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2627:..\src/command_processing.c **** //==============================================================================
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2630:..\src/command_processing.c **** {
 18424              		.loc 1 2630 0
 18425              		.cfi_startproc
 18426              		@ args = 0, pretend = 0, frame = 16
 18427              		@ frame_needed = 1, uses_anonymous_args = 0
 18428 0000 80B5     		push	{r7, lr}
 18429              		.cfi_def_cfa_offset 8
 18430              		.cfi_offset 7, -8
 18431              		.cfi_offset 14, -4
 18432 0002 84B0     		sub	sp, sp, #16
 18433              		.cfi_def_cfa_offset 24
 18434 0004 00AF     		add	r7, sp, #0
 18435              		.cfi_def_cfa_register 7
 18436 0006 7860     		str	r0, [r7, #4]
 18437 0008 0B46     		mov	r3, r1
 18438 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 18439 000c 1346     		mov	r3, r2
 18440 000e 7B70     		strb	r3, [r7, #1]
2631:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2632:..\src/command_processing.c **** 
2633:..\src/command_processing.c ****     // frame - start
2634:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18441              		.loc 1 2634 0
 18442 0010 3A20     		movs	r0, #58
 18443 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2635:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18444              		.loc 1 2635 0
 18445 0016 3A20     		movs	r0, #58
 18446 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2636:..\src/command_processing.c ****     // frame - ID
2637:..\src/command_processing.c ****     //if(old_id)
2638:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 18447              		.loc 1 2638 0
 18448 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 18449 001e 1846     		mov	r0, r3
 18450 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2639:..\src/command_processing.c ****     //else
2640:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2641:..\src/command_processing.c ****         
2642:..\src/command_processing.c ****     // frame - length
2643:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 410


 18451              		.loc 1 2643 0
 18452 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18453 0026 DBB2     		uxtb	r3, r3
 18454 0028 1846     		mov	r0, r3
 18455 002a FFF7FEFF 		bl	UART_RS485_PutChar
2644:..\src/command_processing.c ****     // frame - packet data
2645:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18456              		.loc 1 2645 0
 18457 002e 0023     		movs	r3, #0
 18458 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18459 0032 09E0     		b	.L739
 18460              	.L740:
2646:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18461              		.loc 1 2646 0 discriminator 3
 18462 0034 FB89     		ldrh	r3, [r7, #14]
 18463 0036 7A68     		ldr	r2, [r7, #4]
 18464 0038 1344     		add	r3, r3, r2
 18465 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18466 003c 1846     		mov	r0, r3
 18467 003e FFF7FEFF 		bl	UART_RS485_PutChar
2645:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18468              		.loc 1 2645 0 discriminator 3
 18469 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18470 0044 0133     		adds	r3, r3, #1
 18471 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18472              	.L739:
2645:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18473              		.loc 1 2645 0 is_stmt 0 discriminator 1
 18474 0048 FA89     		ldrh	r2, [r7, #14]
 18475 004a 7B88     		ldrh	r3, [r7, #2]
 18476 004c 9A42     		cmp	r2, r3
 18477 004e F1D3     		bcc	.L740
2647:..\src/command_processing.c ****     }
2648:..\src/command_processing.c **** 
2649:..\src/command_processing.c ****     index = 0;
 18478              		.loc 1 2649 0 is_stmt 1
 18479 0050 0023     		movs	r3, #0
 18480 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2650:..\src/command_processing.c **** 
2651:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18481              		.loc 1 2651 0
 18482 0054 00BF     		nop
 18483              	.L742:
 18484              		.loc 1 2651 0 is_stmt 0 discriminator 2
 18485 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18486 005a 0346     		mov	r3, r0
 18487 005c 03F00103 		and	r3, r3, #1
 18488 0060 002B     		cmp	r3, #0
 18489 0062 05D1     		bne	.L741
 18490              		.loc 1 2651 0 discriminator 1
 18491 0064 FB89     		ldrh	r3, [r7, #14]
 18492 0066 5A1C     		adds	r2, r3, #1
 18493 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18494 006a B3F57A7F 		cmp	r3, #1000
 18495 006e F2D9     		bls	.L742
 18496              	.L741:
2652:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 411


2653:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18497              		.loc 1 2653 0 is_stmt 1
 18498 0070 0120     		movs	r0, #1
 18499 0072 FFF7FEFF 		bl	RS485_CTS_Write
2654:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18500              		.loc 1 2654 0
 18501 0076 0020     		movs	r0, #0
 18502 0078 FFF7FEFF 		bl	RS485_CTS_Write
2655:..\src/command_processing.c **** }
 18503              		.loc 1 2655 0
 18504 007c 00BF     		nop
 18505 007e 1037     		adds	r7, r7, #16
 18506              		.cfi_def_cfa_offset 8
 18507 0080 BD46     		mov	sp, r7
 18508              		.cfi_def_cfa_register 13
 18509              		@ sp needed
 18510 0082 80BD     		pop	{r7, pc}
 18511              		.cfi_endproc
 18512              	.LFE78:
 18513              		.size	commWrite_old_id, .-commWrite_old_id
 18514              		.section	.text.commWrite,"ax",%progbits
 18515              		.align	2
 18516              		.global	commWrite
 18517              		.thumb
 18518              		.thumb_func
 18519              		.type	commWrite, %function
 18520              	commWrite:
 18521              	.LFB79:
2656:..\src/command_processing.c **** 
2657:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2658:..\src/command_processing.c **** {
 18522              		.loc 1 2658 0
 18523              		.cfi_startproc
 18524              		@ args = 0, pretend = 0, frame = 16
 18525              		@ frame_needed = 1, uses_anonymous_args = 0
 18526 0000 80B5     		push	{r7, lr}
 18527              		.cfi_def_cfa_offset 8
 18528              		.cfi_offset 7, -8
 18529              		.cfi_offset 14, -4
 18530 0002 84B0     		sub	sp, sp, #16
 18531              		.cfi_def_cfa_offset 24
 18532 0004 00AF     		add	r7, sp, #0
 18533              		.cfi_def_cfa_register 7
 18534 0006 7860     		str	r0, [r7, #4]
 18535 0008 0B46     		mov	r3, r1
 18536 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2659:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2660:..\src/command_processing.c **** 
2661:..\src/command_processing.c ****     // frame - start
2662:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18537              		.loc 1 2662 0
 18538 000c 3A20     		movs	r0, #58
 18539 000e FFF7FEFF 		bl	UART_RS485_PutChar
2663:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18540              		.loc 1 2663 0
 18541 0012 3A20     		movs	r0, #58
 18542 0014 FFF7FEFF 		bl	UART_RS485_PutChar
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 412


2664:..\src/command_processing.c ****     // frame - ID
2665:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 18543              		.loc 1 2665 0
 18544 0018 1A4B     		ldr	r3, .L748
 18545 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18546 001e 1846     		mov	r0, r3
 18547 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2666:..\src/command_processing.c ****     // frame - length
2667:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18548              		.loc 1 2667 0
 18549 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18550 0026 DBB2     		uxtb	r3, r3
 18551 0028 1846     		mov	r0, r3
 18552 002a FFF7FEFF 		bl	UART_RS485_PutChar
2668:..\src/command_processing.c ****     // frame - packet data
2669:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18553              		.loc 1 2669 0
 18554 002e 0023     		movs	r3, #0
 18555 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 18556 0032 09E0     		b	.L744
 18557              	.L745:
2670:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18558              		.loc 1 2670 0 discriminator 3
 18559 0034 FB89     		ldrh	r3, [r7, #14]
 18560 0036 7A68     		ldr	r2, [r7, #4]
 18561 0038 1344     		add	r3, r3, r2
 18562 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18563 003c 1846     		mov	r0, r3
 18564 003e FFF7FEFF 		bl	UART_RS485_PutChar
2669:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18565              		.loc 1 2669 0 discriminator 3
 18566 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18567 0044 0133     		adds	r3, r3, #1
 18568 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 18569              	.L744:
2669:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18570              		.loc 1 2669 0 is_stmt 0 discriminator 1
 18571 0048 FA89     		ldrh	r2, [r7, #14]
 18572 004a 7B88     		ldrh	r3, [r7, #2]
 18573 004c 9A42     		cmp	r2, r3
 18574 004e F1D3     		bcc	.L745
2671:..\src/command_processing.c ****     }
2672:..\src/command_processing.c **** 
2673:..\src/command_processing.c ****     index = 0;
 18575              		.loc 1 2673 0 is_stmt 1
 18576 0050 0023     		movs	r3, #0
 18577 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2674:..\src/command_processing.c **** 
2675:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18578              		.loc 1 2675 0
 18579 0054 00BF     		nop
 18580              	.L747:
 18581              		.loc 1 2675 0 is_stmt 0 discriminator 2
 18582 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18583 005a 0346     		mov	r3, r0
 18584 005c 03F00103 		and	r3, r3, #1
 18585 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 413


 18586 0062 05D1     		bne	.L746
 18587              		.loc 1 2675 0 discriminator 1
 18588 0064 FB89     		ldrh	r3, [r7, #14]
 18589 0066 5A1C     		adds	r2, r3, #1
 18590 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 18591 006a B3F57A7F 		cmp	r3, #1000
 18592 006e F2D9     		bls	.L747
 18593              	.L746:
2676:..\src/command_processing.c **** 
2677:..\src/command_processing.c ****     RS485_CTS_Write(1);
 18594              		.loc 1 2677 0 is_stmt 1
 18595 0070 0120     		movs	r0, #1
 18596 0072 FFF7FEFF 		bl	RS485_CTS_Write
2678:..\src/command_processing.c ****     RS485_CTS_Write(0);
 18597              		.loc 1 2678 0
 18598 0076 0020     		movs	r0, #0
 18599 0078 FFF7FEFF 		bl	RS485_CTS_Write
2679:..\src/command_processing.c **** }
 18600              		.loc 1 2679 0
 18601 007c 00BF     		nop
 18602 007e 1037     		adds	r7, r7, #16
 18603              		.cfi_def_cfa_offset 8
 18604 0080 BD46     		mov	sp, r7
 18605              		.cfi_def_cfa_register 13
 18606              		@ sp needed
 18607 0082 80BD     		pop	{r7, pc}
 18608              	.L749:
 18609              		.align	2
 18610              	.L748:
 18611 0084 00000000 		.word	g_mem
 18612              		.cfi_endproc
 18613              	.LFE79:
 18614              		.size	commWrite, .-commWrite
 18615              		.section	.text.commWrite_to_cuff,"ax",%progbits
 18616              		.align	2
 18617              		.global	commWrite_to_cuff
 18618              		.thumb
 18619              		.thumb_func
 18620              		.type	commWrite_to_cuff, %function
 18621              	commWrite_to_cuff:
 18622              	.LFB80:
2680:..\src/command_processing.c **** 
2681:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
2682:..\src/command_processing.c **** {
 18623              		.loc 1 2682 0
 18624              		.cfi_startproc
 18625              		@ args = 0, pretend = 0, frame = 16
 18626              		@ frame_needed = 1, uses_anonymous_args = 0
 18627 0000 80B5     		push	{r7, lr}
 18628              		.cfi_def_cfa_offset 8
 18629              		.cfi_offset 7, -8
 18630              		.cfi_offset 14, -4
 18631 0002 84B0     		sub	sp, sp, #16
 18632              		.cfi_def_cfa_offset 24
 18633 0004 00AF     		add	r7, sp, #0
 18634              		.cfi_def_cfa_register 7
 18635 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 414


 18636 0008 0B46     		mov	r3, r1
 18637 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2683:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2684:..\src/command_processing.c **** 
2685:..\src/command_processing.c ****     // frame - start
2686:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18638              		.loc 1 2686 0
 18639 000c 3A20     		movs	r0, #58
 18640 000e FFF7FEFF 		bl	UART_RS485_PutChar
2687:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 18641              		.loc 1 2687 0
 18642 0012 3A20     		movs	r0, #58
 18643 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2688:..\src/command_processing.c ****     // frame - ID
2689:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id - 1);
 18644              		.loc 1 2689 0
 18645 0018 184B     		ldr	r3, .L756
 18646 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 18647 001e 013B     		subs	r3, r3, #1
 18648 0020 DBB2     		uxtb	r3, r3
 18649 0022 1846     		mov	r0, r3
 18650 0024 FFF7FEFF 		bl	UART_RS485_PutChar
2690:..\src/command_processing.c ****     // frame - length
2691:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 18651              		.loc 1 2691 0
 18652 0028 7B88     		ldrh	r3, [r7, #2]	@ movhi
 18653 002a DBB2     		uxtb	r3, r3
 18654 002c 1846     		mov	r0, r3
 18655 002e FFF7FEFF 		bl	UART_RS485_PutChar
2692:..\src/command_processing.c ****     // frame - packet data
2693:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 18656              		.loc 1 2693 0
 18657 0032 0023     		movs	r3, #0
 18658 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 18659 0036 09E0     		b	.L751
 18660              	.L752:
2694:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18661              		.loc 1 2694 0 discriminator 3
 18662 0038 FB89     		ldrh	r3, [r7, #14]
 18663 003a 7A68     		ldr	r2, [r7, #4]
 18664 003c 1344     		add	r3, r3, r2
 18665 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18666 0040 1846     		mov	r0, r3
 18667 0042 FFF7FEFF 		bl	UART_RS485_PutChar
2693:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18668              		.loc 1 2693 0 discriminator 3
 18669 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 18670 0048 0133     		adds	r3, r3, #1
 18671 004a FB81     		strh	r3, [r7, #14]	@ movhi
 18672              	.L751:
2693:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 18673              		.loc 1 2693 0 is_stmt 0 discriminator 1
 18674 004c FA89     		ldrh	r2, [r7, #14]
 18675 004e 7B88     		ldrh	r3, [r7, #2]
 18676 0050 9A42     		cmp	r2, r3
 18677 0052 F1D3     		bcc	.L752
2695:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 415


2696:..\src/command_processing.c **** 
2697:..\src/command_processing.c ****     index = 0;
 18678              		.loc 1 2697 0 is_stmt 1
 18679 0054 0023     		movs	r3, #0
 18680 0056 FB81     		strh	r3, [r7, #14]	@ movhi
2698:..\src/command_processing.c **** 
2699:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 18681              		.loc 1 2699 0
 18682 0058 00BF     		nop
 18683              	.L754:
 18684              		.loc 1 2699 0 is_stmt 0 discriminator 2
 18685 005a FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 18686 005e 0346     		mov	r3, r0
 18687 0060 03F00103 		and	r3, r3, #1
 18688 0064 002B     		cmp	r3, #0
 18689 0066 05D1     		bne	.L755
 18690              		.loc 1 2699 0 discriminator 1
 18691 0068 FB89     		ldrh	r3, [r7, #14]
 18692 006a 5A1C     		adds	r2, r3, #1
 18693 006c FA81     		strh	r2, [r7, #14]	@ movhi
 18694 006e B3F57A7F 		cmp	r3, #1000
 18695 0072 F2D9     		bls	.L754
 18696              	.L755:
2700:..\src/command_processing.c **** }
 18697              		.loc 1 2700 0 is_stmt 1
 18698 0074 00BF     		nop
 18699 0076 1037     		adds	r7, r7, #16
 18700              		.cfi_def_cfa_offset 8
 18701 0078 BD46     		mov	sp, r7
 18702              		.cfi_def_cfa_register 13
 18703              		@ sp needed
 18704 007a 80BD     		pop	{r7, pc}
 18705              	.L757:
 18706              		.align	2
 18707              	.L756:
 18708 007c 00000000 		.word	g_mem
 18709              		.cfi_endproc
 18710              	.LFE80:
 18711              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 18712              		.section	.text.LCRChecksum,"ax",%progbits
 18713              		.align	2
 18714              		.global	LCRChecksum
 18715              		.thumb
 18716              		.thumb_func
 18717              		.type	LCRChecksum, %function
 18718              	LCRChecksum:
 18719              	.LFB81:
2701:..\src/command_processing.c **** 
2702:..\src/command_processing.c **** //==============================================================================
2703:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2704:..\src/command_processing.c **** //==============================================================================
2705:..\src/command_processing.c **** 
2706:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2707:..\src/command_processing.c **** 
2708:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 18720              		.loc 1 2708 0
 18721              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 416


 18722              		@ args = 0, pretend = 0, frame = 16
 18723              		@ frame_needed = 1, uses_anonymous_args = 0
 18724              		@ link register save eliminated.
 18725 0000 80B4     		push	{r7}
 18726              		.cfi_def_cfa_offset 4
 18727              		.cfi_offset 7, -4
 18728 0002 85B0     		sub	sp, sp, #20
 18729              		.cfi_def_cfa_offset 24
 18730 0004 00AF     		add	r7, sp, #0
 18731              		.cfi_def_cfa_register 7
 18732 0006 7860     		str	r0, [r7, #4]
 18733 0008 0B46     		mov	r3, r1
 18734 000a FB70     		strb	r3, [r7, #3]
2709:..\src/command_processing.c ****     
2710:..\src/command_processing.c ****     uint8 CYDATA i;
2711:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 18735              		.loc 1 2711 0
 18736 000c 0023     		movs	r3, #0
 18737 000e BB73     		strb	r3, [r7, #14]
2712:..\src/command_processing.c ****     
2713:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 18738              		.loc 1 2713 0
 18739 0010 0023     		movs	r3, #0
 18740 0012 FB73     		strb	r3, [r7, #15]
 18741 0014 09E0     		b	.L759
 18742              	.L760:
2714:..\src/command_processing.c ****        checksum ^= data_array[i];
 18743              		.loc 1 2714 0 discriminator 3
 18744 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 18745 0018 7A68     		ldr	r2, [r7, #4]
 18746 001a 1344     		add	r3, r3, r2
 18747 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 18748 001e BB7B     		ldrb	r3, [r7, #14]
 18749 0020 5340     		eors	r3, r3, r2
 18750 0022 BB73     		strb	r3, [r7, #14]
2713:..\src/command_processing.c ****        checksum ^= data_array[i];
 18751              		.loc 1 2713 0 discriminator 3
 18752 0024 FB7B     		ldrb	r3, [r7, #15]
 18753 0026 0133     		adds	r3, r3, #1
 18754 0028 FB73     		strb	r3, [r7, #15]
 18755              	.L759:
2713:..\src/command_processing.c ****        checksum ^= data_array[i];
 18756              		.loc 1 2713 0 is_stmt 0 discriminator 1
 18757 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 18758 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 18759 002e 9A42     		cmp	r2, r3
 18760 0030 F1D3     		bcc	.L760
2715:..\src/command_processing.c ****   
2716:..\src/command_processing.c ****     return checksum;
 18761              		.loc 1 2716 0 is_stmt 1
 18762 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2717:..\src/command_processing.c **** }
 18763              		.loc 1 2717 0
 18764 0034 1846     		mov	r0, r3
 18765 0036 1437     		adds	r7, r7, #20
 18766              		.cfi_def_cfa_offset 4
 18767 0038 BD46     		mov	sp, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 417


 18768              		.cfi_def_cfa_register 13
 18769              		@ sp needed
 18770 003a 80BC     		pop	{r7}
 18771              		.cfi_restore 7
 18772              		.cfi_def_cfa_offset 0
 18773 003c 7047     		bx	lr
 18774              		.cfi_endproc
 18775              	.LFE81:
 18776              		.size	LCRChecksum, .-LCRChecksum
 18777 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 18778              		.align	2
 18779              		.global	sendAcknowledgment
 18780              		.thumb
 18781              		.thumb_func
 18782              		.type	sendAcknowledgment, %function
 18783              	sendAcknowledgment:
 18784              	.LFB82:
2718:..\src/command_processing.c **** 
2719:..\src/command_processing.c **** 
2720:..\src/command_processing.c **** //==============================================================================
2721:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2722:..\src/command_processing.c **** //==============================================================================
2723:..\src/command_processing.c **** 
2724:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 18785              		.loc 1 2724 0
 18786              		.cfi_startproc
 18787              		@ args = 0, pretend = 0, frame = 16
 18788              		@ frame_needed = 1, uses_anonymous_args = 0
 18789 0000 80B5     		push	{r7, lr}
 18790              		.cfi_def_cfa_offset 8
 18791              		.cfi_offset 7, -8
 18792              		.cfi_offset 14, -4
 18793 0002 84B0     		sub	sp, sp, #16
 18794              		.cfi_def_cfa_offset 24
 18795 0004 00AF     		add	r7, sp, #0
 18796              		.cfi_def_cfa_register 7
 18797 0006 0346     		mov	r3, r0
 18798 0008 FB71     		strb	r3, [r7, #7]
2725:..\src/command_processing.c ****     int packet_lenght = 2;
 18799              		.loc 1 2725 0
 18800 000a 0223     		movs	r3, #2
 18801 000c FB60     		str	r3, [r7, #12]
2726:..\src/command_processing.c ****     uint8 packet_data[2];
2727:..\src/command_processing.c **** 
2728:..\src/command_processing.c ****     packet_data[0] = value;
 18802              		.loc 1 2728 0
 18803 000e FB79     		ldrb	r3, [r7, #7]
 18804 0010 3B72     		strb	r3, [r7, #8]
2729:..\src/command_processing.c ****     packet_data[1] = value;
 18805              		.loc 1 2729 0
 18806 0012 FB79     		ldrb	r3, [r7, #7]
 18807 0014 7B72     		strb	r3, [r7, #9]
2730:..\src/command_processing.c **** 
2731:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 18808              		.loc 1 2731 0
 18809 0016 FB68     		ldr	r3, [r7, #12]
 18810 0018 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 418


 18811 001a 07F10803 		add	r3, r7, #8
 18812 001e 1146     		mov	r1, r2
 18813 0020 1846     		mov	r0, r3
 18814 0022 FFF7FEFF 		bl	commWrite
2732:..\src/command_processing.c **** }
 18815              		.loc 1 2732 0
 18816 0026 00BF     		nop
 18817 0028 1037     		adds	r7, r7, #16
 18818              		.cfi_def_cfa_offset 8
 18819 002a BD46     		mov	sp, r7
 18820              		.cfi_def_cfa_register 13
 18821              		@ sp needed
 18822 002c 80BD     		pop	{r7, pc}
 18823              		.cfi_endproc
 18824              	.LFE82:
 18825              		.size	sendAcknowledgment, .-sendAcknowledgment
 18826 002e 00BF     		.section	.text.memStore,"ax",%progbits
 18827              		.align	2
 18828              		.global	memStore
 18829              		.thumb
 18830              		.thumb_func
 18831              		.type	memStore, %function
 18832              	memStore:
 18833              	.LFB83:
2733:..\src/command_processing.c **** 
2734:..\src/command_processing.c **** //==============================================================================
2735:..\src/command_processing.c **** //                                                                  STORE MEMORY
2736:..\src/command_processing.c **** //==============================================================================
2737:..\src/command_processing.c **** 
2738:..\src/command_processing.c **** 
2739:..\src/command_processing.c **** uint8 memStore(int displacement)
2740:..\src/command_processing.c **** {
 18834              		.loc 1 2740 0
 18835              		.cfi_startproc
 18836              		@ args = 0, pretend = 0, frame = 24
 18837              		@ frame_needed = 1, uses_anonymous_args = 0
 18838 0000 80B5     		push	{r7, lr}
 18839              		.cfi_def_cfa_offset 8
 18840              		.cfi_offset 7, -8
 18841              		.cfi_offset 14, -4
 18842 0002 86B0     		sub	sp, sp, #24
 18843              		.cfi_def_cfa_offset 32
 18844 0004 00AF     		add	r7, sp, #0
 18845              		.cfi_def_cfa_register 7
 18846 0006 7860     		str	r0, [r7, #4]
2741:..\src/command_processing.c ****     int i;  // iterator
2742:..\src/command_processing.c ****     uint8 writeStatus;
2743:..\src/command_processing.c ****     int pages;
2744:..\src/command_processing.c ****     uint8 ret_val = 1;
 18847              		.loc 1 2744 0
 18848 0008 0123     		movs	r3, #1
 18849 000a FB74     		strb	r3, [r7, #19]
2745:..\src/command_processing.c **** 
2746:..\src/command_processing.c ****     // Disable Interrupt
2747:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 18850              		.loc 1 2747 0
 18851 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 419


2748:..\src/command_processing.c **** 
2749:..\src/command_processing.c ****     // Stop motor
2750:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 18852              		.loc 1 2750 0
 18853 0010 0020     		movs	r0, #0
 18854 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2753:..\src/command_processing.c ****     CySetTemp();
 18855              		.loc 1 2753 0
 18856 0016 FFF7FEFF 		bl	CySetTemp
2754:..\src/command_processing.c **** 
2755:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 18857              		.loc 1 2755 0
 18858 001a 1D4A     		ldr	r2, .L769
 18859 001c 1D4B     		ldr	r3, .L769+4
 18860 001e 1046     		mov	r0, r2
 18861 0020 1946     		mov	r1, r3
 18862 0022 4FF42C73 		mov	r3, #688
 18863 0026 1A46     		mov	r2, r3
 18864 0028 FFF7FEFF 		bl	memcpy
2756:..\src/command_processing.c **** 
2757:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 18865              		.loc 1 2757 0
 18866 002c 2B23     		movs	r3, #43
 18867 002e FB60     		str	r3, [r7, #12]
2758:..\src/command_processing.c **** 
2759:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 18868              		.loc 1 2759 0
 18869 0030 0023     		movs	r3, #0
 18870 0032 7B61     		str	r3, [r7, #20]
 18871 0034 18E0     		b	.L764
 18872              	.L767:
2760:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18873              		.loc 1 2760 0
 18874 0036 7B69     		ldr	r3, [r7, #20]
 18875 0038 1B01     		lsls	r3, r3, #4
 18876 003a 1A46     		mov	r2, r3
 18877 003c 154B     		ldr	r3, .L769+4
 18878 003e D018     		adds	r0, r2, r3
 18879 0040 7B69     		ldr	r3, [r7, #20]
 18880 0042 DAB2     		uxtb	r2, r3
 18881 0044 7B68     		ldr	r3, [r7, #4]
 18882 0046 DBB2     		uxtb	r3, r3
 18883 0048 1344     		add	r3, r3, r2
 18884 004a DBB2     		uxtb	r3, r3
 18885 004c 1946     		mov	r1, r3
 18886 004e FFF7FEFF 		bl	EEPROM_Write
 18887 0052 0346     		mov	r3, r0
 18888 0054 FB72     		strb	r3, [r7, #11]
2761:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 18889              		.loc 1 2761 0
 18890 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 18891 0058 002B     		cmp	r3, #0
 18892 005a 02D0     		beq	.L765
2762:..\src/command_processing.c ****             ret_val = 0;
 18893              		.loc 1 2762 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 420


 18894 005c 0023     		movs	r3, #0
 18895 005e FB74     		strb	r3, [r7, #19]
2763:..\src/command_processing.c ****             break;
 18896              		.loc 1 2763 0
 18897 0060 06E0     		b	.L766
 18898              	.L765:
2759:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18899              		.loc 1 2759 0 discriminator 2
 18900 0062 7B69     		ldr	r3, [r7, #20]
 18901 0064 0133     		adds	r3, r3, #1
 18902 0066 7B61     		str	r3, [r7, #20]
 18903              	.L764:
2759:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 18904              		.loc 1 2759 0 is_stmt 0 discriminator 1
 18905 0068 7A69     		ldr	r2, [r7, #20]
 18906 006a FB68     		ldr	r3, [r7, #12]
 18907 006c 9A42     		cmp	r2, r3
 18908 006e E2DB     		blt	.L767
 18909              	.L766:
2764:..\src/command_processing.c ****         }
2765:..\src/command_processing.c ****     }
2766:..\src/command_processing.c **** 
2767:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 18910              		.loc 1 2767 0 is_stmt 1
 18911 0070 084A     		ldr	r2, .L769+4
 18912 0072 074B     		ldr	r3, .L769
 18913 0074 1046     		mov	r0, r2
 18914 0076 1946     		mov	r1, r3
 18915 0078 4FF42C73 		mov	r3, #688
 18916 007c 1A46     		mov	r2, r3
 18917 007e FFF7FEFF 		bl	memcpy
2768:..\src/command_processing.c **** 
2769:..\src/command_processing.c ****     // Re-Enable Interrupt
2770:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 18918              		.loc 1 2770 0
 18919 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2771:..\src/command_processing.c **** 
2772:..\src/command_processing.c ****     return ret_val;
 18920              		.loc 1 2772 0
 18921 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2773:..\src/command_processing.c **** }
 18922              		.loc 1 2773 0
 18923 0088 1846     		mov	r0, r3
 18924 008a 1837     		adds	r7, r7, #24
 18925              		.cfi_def_cfa_offset 8
 18926 008c BD46     		mov	sp, r7
 18927              		.cfi_def_cfa_register 13
 18928              		@ sp needed
 18929 008e 80BD     		pop	{r7, pc}
 18930              	.L770:
 18931              		.align	2
 18932              	.L769:
 18933 0090 00000000 		.word	c_mem
 18934 0094 00000000 		.word	g_mem
 18935              		.cfi_endproc
 18936              	.LFE83:
 18937              		.size	memStore, .-memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 421


 18938              		.section	.text.memRecall,"ax",%progbits
 18939              		.align	2
 18940              		.global	memRecall
 18941              		.thumb
 18942              		.thumb_func
 18943              		.type	memRecall, %function
 18944              	memRecall:
 18945              	.LFB84:
2774:..\src/command_processing.c **** 
2775:..\src/command_processing.c **** 
2776:..\src/command_processing.c **** //==============================================================================
2777:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2778:..\src/command_processing.c **** //==============================================================================
2779:..\src/command_processing.c **** 
2780:..\src/command_processing.c **** 
2781:..\src/command_processing.c **** void memRecall(void)
2782:..\src/command_processing.c **** {
 18946              		.loc 1 2782 0
 18947              		.cfi_startproc
 18948              		@ args = 0, pretend = 0, frame = 8
 18949              		@ frame_needed = 1, uses_anonymous_args = 0
 18950 0000 80B5     		push	{r7, lr}
 18951              		.cfi_def_cfa_offset 8
 18952              		.cfi_offset 7, -8
 18953              		.cfi_offset 14, -4
 18954 0002 82B0     		sub	sp, sp, #8
 18955              		.cfi_def_cfa_offset 16
 18956 0004 00AF     		add	r7, sp, #0
 18957              		.cfi_def_cfa_register 7
2783:..\src/command_processing.c ****     uint16 i;
2784:..\src/command_processing.c **** 
2785:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 18958              		.loc 1 2785 0
 18959 0006 0023     		movs	r3, #0
 18960 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 18961 000a 0CE0     		b	.L772
 18962              	.L773:
2786:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 18963              		.loc 1 2786 0 discriminator 3
 18964 000c FB88     		ldrh	r3, [r7, #6]
 18965 000e 184A     		ldr	r2, .L777
 18966 0010 1344     		add	r3, r3, r2
 18967 0012 184A     		ldr	r2, .L777+4
 18968 0014 1168     		ldr	r1, [r2]
 18969 0016 FA88     		ldrh	r2, [r7, #6]
 18970 0018 0A44     		add	r2, r2, r1
 18971 001a 1278     		ldrb	r2, [r2]
 18972 001c D2B2     		uxtb	r2, r2
 18973 001e 1A70     		strb	r2, [r3]
2785:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 18974              		.loc 1 2785 0 discriminator 3
 18975 0020 FB88     		ldrh	r3, [r7, #6]
 18976 0022 0133     		adds	r3, r3, #1
 18977 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 18978              	.L772:
2785:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 18979              		.loc 1 2785 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 422


 18980 0026 FB88     		ldrh	r3, [r7, #6]
 18981 0028 B3F52C7F 		cmp	r3, #688
 18982 002c EED3     		bcc	.L773
2787:..\src/command_processing.c ****     }
2788:..\src/command_processing.c ****     
2789:..\src/command_processing.c ****     // Recall saved user_emg structure
2790:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 18983              		.loc 1 2790 0 is_stmt 1
 18984 002e 104B     		ldr	r3, .L777
 18985 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 18986 0034 5B01     		lsls	r3, r3, #5
 18987 0036 03F51273 		add	r3, r3, #584
 18988 003a 0D4A     		ldr	r2, .L777
 18989 003c 1344     		add	r3, r3, r2
 18990 003e 1022     		movs	r2, #16
 18991 0040 1946     		mov	r1, r3
 18992 0042 0D48     		ldr	r0, .L777+8
 18993 0044 FFF7FEFF 		bl	memcpy
2791:..\src/command_processing.c **** 
2792:..\src/command_processing.c ****     //check for initialization
2793:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 18994              		.loc 1 2793 0
 18995 0048 094B     		ldr	r3, .L777
 18996 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18997 004c 002B     		cmp	r3, #0
 18998 004e 02D1     		bne	.L774
2794:..\src/command_processing.c ****         memRestore();
 18999              		.loc 1 2794 0
 19000 0050 FFF7FEFF 		bl	memRestore
2795:..\src/command_processing.c ****     } else {
2796:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2797:..\src/command_processing.c ****     }        
2798:..\src/command_processing.c **** }
 19001              		.loc 1 2798 0
 19002 0054 08E0     		b	.L776
 19003              	.L774:
2796:..\src/command_processing.c ****     }        
 19004              		.loc 1 2796 0
 19005 0056 094A     		ldr	r2, .L777+12
 19006 0058 054B     		ldr	r3, .L777
 19007 005a 1046     		mov	r0, r2
 19008 005c 1946     		mov	r1, r3
 19009 005e 4FF42C73 		mov	r3, #688
 19010 0062 1A46     		mov	r2, r3
 19011 0064 FFF7FEFF 		bl	memcpy
 19012              	.L776:
 19013              		.loc 1 2798 0
 19014 0068 00BF     		nop
 19015 006a 0837     		adds	r7, r7, #8
 19016              		.cfi_def_cfa_offset 8
 19017 006c BD46     		mov	sp, r7
 19018              		.cfi_def_cfa_register 13
 19019              		@ sp needed
 19020 006e 80BD     		pop	{r7, pc}
 19021              	.L778:
 19022              		.align	2
 19023              	.L777:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 423


 19024 0070 00000000 		.word	g_mem
 19025 0074 00000000 		.word	EEPROM_ADDR
 19026 0078 F0010000 		.word	g_mem+496
 19027 007c 00000000 		.word	c_mem
 19028              		.cfi_endproc
 19029              	.LFE84:
 19030              		.size	memRecall, .-memRecall
 19031              		.section	.text.memRestore,"ax",%progbits
 19032              		.align	2
 19033              		.global	memRestore
 19034              		.thumb
 19035              		.thumb_func
 19036              		.type	memRestore, %function
 19037              	memRestore:
 19038              	.LFB85:
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** 
2801:..\src/command_processing.c **** //==============================================================================
2802:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2803:..\src/command_processing.c **** //==============================================================================
2804:..\src/command_processing.c **** 
2805:..\src/command_processing.c **** 
2806:..\src/command_processing.c **** uint8 memRestore(void) {
 19039              		.loc 1 2806 0
 19040              		.cfi_startproc
 19041              		@ args = 0, pretend = 0, frame = 8
 19042              		@ frame_needed = 1, uses_anonymous_args = 0
 19043 0000 80B5     		push	{r7, lr}
 19044              		.cfi_def_cfa_offset 8
 19045              		.cfi_offset 7, -8
 19046              		.cfi_offset 14, -4
 19047 0002 82B0     		sub	sp, sp, #8
 19048              		.cfi_def_cfa_offset 16
 19049 0004 00AF     		add	r7, sp, #0
 19050              		.cfi_def_cfa_register 7
2807:..\src/command_processing.c ****     uint16 i;
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19051              		.loc 1 2809 0
 19052 0006 0023     		movs	r3, #0
 19053 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19054 000a 0EE0     		b	.L780
 19055              	.L781:
2810:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19056              		.loc 1 2810 0 discriminator 3
 19057 000c FB88     		ldrh	r3, [r7, #6]
 19058 000e 114A     		ldr	r2, .L784
 19059 0010 1344     		add	r3, r3, r2
 19060 0012 114A     		ldr	r2, .L784+4
 19061 0014 1168     		ldr	r1, [r2]
 19062 0016 FA88     		ldrh	r2, [r7, #6]
 19063 0018 02F54872 		add	r2, r2, #800
 19064 001c 0A44     		add	r2, r2, r1
 19065 001e 1278     		ldrb	r2, [r2]
 19066 0020 D2B2     		uxtb	r2, r2
 19067 0022 1A70     		strb	r2, [r3]
2809:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 424


 19068              		.loc 1 2809 0 discriminator 3
 19069 0024 FB88     		ldrh	r3, [r7, #6]
 19070 0026 0133     		adds	r3, r3, #1
 19071 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 19072              	.L780:
2809:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19073              		.loc 1 2809 0 is_stmt 0 discriminator 1
 19074 002a FB88     		ldrh	r3, [r7, #6]
 19075 002c B3F52C7F 		cmp	r3, #688
 19076 0030 ECD3     		bcc	.L781
2811:..\src/command_processing.c ****     }
2812:..\src/command_processing.c **** 
2813:..\src/command_processing.c ****     //check for initialization
2814:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19077              		.loc 1 2814 0 is_stmt 1
 19078 0032 084B     		ldr	r3, .L784
 19079 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19080 0036 002B     		cmp	r3, #0
 19081 0038 03D1     		bne	.L782
2815:..\src/command_processing.c ****         return memInit();
 19082              		.loc 1 2815 0
 19083 003a FFF7FEFF 		bl	memInit
 19084 003e 0346     		mov	r3, r0
 19085 0040 03E0     		b	.L783
 19086              	.L782:
2816:..\src/command_processing.c ****     } else {
2817:..\src/command_processing.c ****         return memStore(0);
 19087              		.loc 1 2817 0
 19088 0042 0020     		movs	r0, #0
 19089 0044 FFF7FEFF 		bl	memStore
 19090 0048 0346     		mov	r3, r0
 19091              	.L783:
2818:..\src/command_processing.c ****     }  
2819:..\src/command_processing.c **** }
 19092              		.loc 1 2819 0
 19093 004a 1846     		mov	r0, r3
 19094 004c 0837     		adds	r7, r7, #8
 19095              		.cfi_def_cfa_offset 8
 19096 004e BD46     		mov	sp, r7
 19097              		.cfi_def_cfa_register 13
 19098              		@ sp needed
 19099 0050 80BD     		pop	{r7, pc}
 19100              	.L785:
 19101 0052 00BF     		.align	2
 19102              	.L784:
 19103 0054 00000000 		.word	g_mem
 19104 0058 00000000 		.word	EEPROM_ADDR
 19105              		.cfi_endproc
 19106              	.LFE85:
 19107              		.size	memRestore, .-memRestore
 19108              		.section	.rodata
 19109 196f 00       		.align	2
 19110              	.LC253:
 19111 1970 47454E30 		.ascii	"GEN001\000"
 19111      303100
 19112              		.section	.text.memInit,"ax",%progbits
 19113              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 425


 19114              		.global	memInit
 19115              		.thumb
 19116              		.thumb_func
 19117              		.type	memInit, %function
 19118              	memInit:
 19119              	.LFB86:
2820:..\src/command_processing.c **** 
2821:..\src/command_processing.c **** //==============================================================================
2822:..\src/command_processing.c **** //                                                                   MEMORY INIT
2823:..\src/command_processing.c **** //==============================================================================
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c **** uint8 memInit(void)
2826:..\src/command_processing.c **** {
 19120              		.loc 1 2826 0
 19121              		.cfi_startproc
 19122              		@ args = 0, pretend = 0, frame = 8
 19123              		@ frame_needed = 1, uses_anonymous_args = 0
 19124 0000 80B5     		push	{r7, lr}
 19125              		.cfi_def_cfa_offset 8
 19126              		.cfi_offset 7, -8
 19127              		.cfi_offset 14, -4
 19128 0002 82B0     		sub	sp, sp, #8
 19129              		.cfi_def_cfa_offset 16
 19130 0004 00AF     		add	r7, sp, #0
 19131              		.cfi_def_cfa_register 7
2827:..\src/command_processing.c ****     uint8 i, j;
2828:..\src/command_processing.c **** 
2829:..\src/command_processing.c ****     //initialize memory settings
2830:..\src/command_processing.c ****     for (i=0; i<15; i++){
 19132              		.loc 1 2830 0
 19133 0006 0023     		movs	r3, #0
 19134 0008 FB71     		strb	r3, [r7, #7]
 19135 000a 07E0     		b	.L787
 19136              	.L788:
2831:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19137              		.loc 1 2831 0 discriminator 3
 19138 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19139 000e B44A     		ldr	r2, .L813
 19140 0010 1344     		add	r3, r3, r2
 19141 0012 0022     		movs	r2, #0
 19142 0014 5A70     		strb	r2, [r3, #1]
2830:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19143              		.loc 1 2830 0 discriminator 3
 19144 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19145 0018 0133     		adds	r3, r3, #1
 19146 001a FB71     		strb	r3, [r7, #7]
 19147              	.L787:
2830:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19148              		.loc 1 2830 0 is_stmt 0 discriminator 1
 19149 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19150 001e 0E2B     		cmp	r3, #14
 19151 0020 F4D9     		bls	.L788
2832:..\src/command_processing.c ****     }
2833:..\src/command_processing.c ****         
2834:..\src/command_processing.c ****     // DEV STRUCT
2835:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 19152              		.loc 1 2835 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 426


 19153 0022 AF4B     		ldr	r3, .L813
 19154 0024 0122     		movs	r2, #1
 19155 0026 83F8A020 		strb	r2, [r3, #160]
2836:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 19156              		.loc 1 2836 0
 19157 002a AD4B     		ldr	r3, .L813
 19158 002c 0022     		movs	r2, #0
 19159 002e 83F8A720 		strb	r2, [r3, #167]
2837:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 19160              		.loc 1 2837 0
 19161 0032 AB4B     		ldr	r3, .L813
 19162 0034 0122     		movs	r2, #1
 19163 0036 83F8AC20 		strb	r2, [r3, #172]
2838:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 19164              		.loc 1 2838 0
 19165 003a A94B     		ldr	r3, .L813
 19166 003c 0022     		movs	r2, #0
 19167 003e 83F8A820 		strb	r2, [r3, #168]
2839:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 19168              		.loc 1 2839 0
 19169 0042 FFF7FEFF 		bl	reset_counters
2840:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19170              		.loc 1 2840 0
 19171 0046 0023     		movs	r3, #0
 19172 0048 FB71     		strb	r3, [r7, #7]
 19173 004a 08E0     		b	.L789
 19174              	.L790:
2841:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 19175              		.loc 1 2841 0 discriminator 3
 19176 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19177 004e A44A     		ldr	r2, .L813
 19178 0050 1344     		add	r3, r3, r2
 19179 0052 0022     		movs	r2, #0
 19180 0054 83F86020 		strb	r2, [r3, #96]
2840:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19181              		.loc 1 2840 0 discriminator 3
 19182 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19183 005a 0133     		adds	r3, r3, #1
 19184 005c FB71     		strb	r3, [r7, #7]
 19185              	.L789:
2840:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19186              		.loc 1 2840 0 is_stmt 0 discriminator 1
 19187 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19188 0060 3F2B     		cmp	r3, #63
 19189 0062 F3D9     		bls	.L790
2842:..\src/command_processing.c ****     }
2843:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 19190              		.loc 1 2843 0 is_stmt 1
 19191 0064 9E4B     		ldr	r3, .L813
 19192 0066 0022     		movs	r2, #0
 19193 0068 83F8A920 		strb	r2, [r3, #169]
2844:..\src/command_processing.c **** 
2845:..\src/command_processing.c ****     // MOTOR STRUCT
2846:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19194              		.loc 1 2846 0
 19195 006c 0023     		movs	r3, #0
 19196 006e FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 427


 19197 0070 15E1     		b	.L791
 19198              	.L794:
2847:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19199              		.loc 1 2847 0
 19200 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19201 0074 9A49     		ldr	r1, .L813
 19202 0076 1346     		mov	r3, r2
 19203 0078 DB00     		lsls	r3, r3, #3
 19204 007a 9B1A     		subs	r3, r3, r2
 19205 007c 1B01     		lsls	r3, r3, #4
 19206 007e 0B44     		add	r3, r3, r1
 19207 0080 B033     		adds	r3, r3, #176
 19208 0082 40F23942 		movw	r2, #1081
 19209 0086 1A60     		str	r2, [r3]
2848:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 19210              		.loc 1 2848 0
 19211 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19212 008a 9549     		ldr	r1, .L813
 19213 008c 1346     		mov	r3, r2
 19214 008e DB00     		lsls	r3, r3, #3
 19215 0090 9B1A     		subs	r3, r3, r2
 19216 0092 1B01     		lsls	r3, r3, #4
 19217 0094 0B44     		add	r3, r3, r1
 19218 0096 B433     		adds	r3, r3, #180
 19219 0098 0022     		movs	r2, #0
 19220 009a 1A60     		str	r2, [r3]
2849:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 19221              		.loc 1 2849 0
 19222 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19223 009e 9049     		ldr	r1, .L813
 19224 00a0 1346     		mov	r3, r2
 19225 00a2 DB00     		lsls	r3, r3, #3
 19226 00a4 9B1A     		subs	r3, r3, r2
 19227 00a6 1B01     		lsls	r3, r3, #4
 19228 00a8 0B44     		add	r3, r3, r1
 19229 00aa B833     		adds	r3, r3, #184
 19230 00ac 4FF4E572 		mov	r2, #458
 19231 00b0 1A60     		str	r2, [r3]
2850:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 19232              		.loc 1 2850 0
 19233 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19234 00b4 8A49     		ldr	r1, .L813
 19235 00b6 1346     		mov	r3, r2
 19236 00b8 DB00     		lsls	r3, r3, #3
 19237 00ba 9B1A     		subs	r3, r3, r2
 19238 00bc 1B01     		lsls	r3, r3, #4
 19239 00be 0B44     		add	r3, r3, r1
 19240 00c0 BC33     		adds	r3, r3, #188
 19241 00c2 4FF48032 		mov	r2, #65536
 19242 00c6 1A60     		str	r2, [r3]
2851:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 19243              		.loc 1 2851 0
 19244 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19245 00ca 8549     		ldr	r1, .L813
 19246 00cc 1346     		mov	r3, r2
 19247 00ce DB00     		lsls	r3, r3, #3
 19248 00d0 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 428


 19249 00d2 1B01     		lsls	r3, r3, #4
 19250 00d4 0B44     		add	r3, r3, r1
 19251 00d6 C033     		adds	r3, r3, #192
 19252 00d8 4122     		movs	r2, #65
 19253 00da 1A60     		str	r2, [r3]
2852:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 19254              		.loc 1 2852 0
 19255 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19256 00de 8049     		ldr	r1, .L813
 19257 00e0 1346     		mov	r3, r2
 19258 00e2 DB00     		lsls	r3, r3, #3
 19259 00e4 9B1A     		subs	r3, r3, r2
 19260 00e6 1B01     		lsls	r3, r3, #4
 19261 00e8 0B44     		add	r3, r3, r1
 19262 00ea C433     		adds	r3, r3, #196
 19263 00ec 0022     		movs	r2, #0
 19264 00ee 1A60     		str	r2, [r3]
2853:..\src/command_processing.c **** 
2854:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 19265              		.loc 1 2854 0
 19266 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19267 00f2 7B49     		ldr	r1, .L813
 19268 00f4 1346     		mov	r3, r2
 19269 00f6 DB00     		lsls	r3, r3, #3
 19270 00f8 9B1A     		subs	r3, r3, r2
 19271 00fa 1B01     		lsls	r3, r3, #4
 19272 00fc 0B44     		add	r3, r3, r1
 19273 00fe C833     		adds	r3, r3, #200
 19274 0100 41F69912 		movw	r2, #6553
 19275 0104 1A60     		str	r2, [r3]
2855:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 19276              		.loc 1 2855 0
 19277 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19278 0108 7549     		ldr	r1, .L813
 19279 010a 1346     		mov	r3, r2
 19280 010c DB00     		lsls	r3, r3, #3
 19281 010e 9B1A     		subs	r3, r3, r2
 19282 0110 1B01     		lsls	r3, r3, #4
 19283 0112 0B44     		add	r3, r3, r1
 19284 0114 CC33     		adds	r3, r3, #204
 19285 0116 0022     		movs	r2, #0
 19286 0118 1A60     		str	r2, [r3]
2856:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 19287              		.loc 1 2856 0
 19288 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19289 011c 7049     		ldr	r1, .L813
 19290 011e 1346     		mov	r3, r2
 19291 0120 DB00     		lsls	r3, r3, #3
 19292 0122 9B1A     		subs	r3, r3, r2
 19293 0124 1B01     		lsls	r3, r3, #4
 19294 0126 0B44     		add	r3, r3, r1
 19295 0128 D033     		adds	r3, r3, #208
 19296 012a 0022     		movs	r2, #0
 19297 012c 1A60     		str	r2, [r3]
2857:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 19298              		.loc 1 2857 0
 19299 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 429


 19300 0130 6B49     		ldr	r1, .L813
 19301 0132 1346     		mov	r3, r2
 19302 0134 DB00     		lsls	r3, r3, #3
 19303 0136 9B1A     		subs	r3, r3, r2
 19304 0138 1B01     		lsls	r3, r3, #4
 19305 013a 0B44     		add	r3, r3, r1
 19306 013c D433     		adds	r3, r3, #212
 19307 013e 44F6CC42 		movw	r2, #19660
 19308 0142 1A60     		str	r2, [r3]
2858:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 19309              		.loc 1 2858 0
 19310 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19311 0146 6649     		ldr	r1, .L813
 19312 0148 1346     		mov	r3, r2
 19313 014a DB00     		lsls	r3, r3, #3
 19314 014c 9B1A     		subs	r3, r3, r2
 19315 014e 1B01     		lsls	r3, r3, #4
 19316 0150 0B44     		add	r3, r3, r1
 19317 0152 D833     		adds	r3, r3, #216
 19318 0154 0D22     		movs	r2, #13
 19319 0156 1A60     		str	r2, [r3]
2859:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 19320              		.loc 1 2859 0
 19321 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19322 015a 6149     		ldr	r1, .L813
 19323 015c 1346     		mov	r3, r2
 19324 015e DB00     		lsls	r3, r3, #3
 19325 0160 9B1A     		subs	r3, r3, r2
 19326 0162 1B01     		lsls	r3, r3, #4
 19327 0164 0B44     		add	r3, r3, r1
 19328 0166 DC33     		adds	r3, r3, #220
 19329 0168 0022     		movs	r2, #0
 19330 016a 1A60     		str	r2, [r3]
2860:..\src/command_processing.c **** 
2861:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 19331              		.loc 1 2861 0
 19332 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19333 016e 5C49     		ldr	r1, .L813
 19334 0170 1346     		mov	r3, r2
 19335 0172 DB00     		lsls	r3, r3, #3
 19336 0174 9B1A     		subs	r3, r3, r2
 19337 0176 1B01     		lsls	r3, r3, #4
 19338 0178 0B44     		add	r3, r3, r1
 19339 017a E033     		adds	r3, r3, #224
 19340 017c 0122     		movs	r2, #1
 19341 017e 1A70     		strb	r2, [r3]
2862:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 19342              		.loc 1 2862 0
 19343 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19344 0182 5749     		ldr	r1, .L813
 19345 0184 1346     		mov	r3, r2
 19346 0186 DB00     		lsls	r3, r3, #3
 19347 0188 9B1A     		subs	r3, r3, r2
 19348 018a 1B01     		lsls	r3, r3, #4
 19349 018c 0B44     		add	r3, r3, r1
 19350 018e E133     		adds	r3, r3, #225
 19351 0190 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 430


 19352 0192 1A70     		strb	r2, [r3]
2863:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 19353              		.loc 1 2863 0
 19354 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19355 0196 5249     		ldr	r1, .L813
 19356 0198 1346     		mov	r3, r2
 19357 019a DB00     		lsls	r3, r3, #3
 19358 019c 9B1A     		subs	r3, r3, r2
 19359 019e 1B01     		lsls	r3, r3, #4
 19360 01a0 0B44     		add	r3, r3, r1
 19361 01a2 E233     		adds	r3, r3, #226
 19362 01a4 0022     		movs	r2, #0
 19363 01a6 1A70     		strb	r2, [r3]
2864:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 19364              		.loc 1 2864 0
 19365 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19366 01aa 4D49     		ldr	r1, .L813
 19367 01ac 1346     		mov	r3, r2
 19368 01ae DB00     		lsls	r3, r3, #3
 19369 01b0 9B1A     		subs	r3, r3, r2
 19370 01b2 1B01     		lsls	r3, r3, #4
 19371 01b4 0B44     		add	r3, r3, r1
 19372 01b6 03F58773 		add	r3, r3, #270
 19373 01ba 0022     		movs	r2, #0
 19374 01bc 1A70     		strb	r2, [r3]
2865:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 19375              		.loc 1 2865 0
 19376 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19377 01c0 4749     		ldr	r1, .L813
 19378 01c2 1346     		mov	r3, r2
 19379 01c4 DB00     		lsls	r3, r3, #3
 19380 01c6 9B1A     		subs	r3, r3, r2
 19381 01c8 1B01     		lsls	r3, r3, #4
 19382 01ca 0B44     		add	r3, r3, r1
 19383 01cc 03F20F13 		addw	r3, r3, #271
 19384 01d0 0022     		movs	r2, #0
 19385 01d2 1A70     		strb	r2, [r3]
2866:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 19386              		.loc 1 2866 0
 19387 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19388 01d6 4249     		ldr	r1, .L813
 19389 01d8 1346     		mov	r3, r2
 19390 01da DB00     		lsls	r3, r3, #3
 19391 01dc 9B1A     		subs	r3, r3, r2
 19392 01de 1B01     		lsls	r3, r3, #4
 19393 01e0 0B44     		add	r3, r3, r1
 19394 01e2 F033     		adds	r3, r3, #240
 19395 01e4 0022     		movs	r2, #0
 19396 01e6 1A60     		str	r2, [r3]
2867:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 19397              		.loc 1 2867 0
 19398 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19399 01ea 3D49     		ldr	r1, .L813
 19400 01ec 1346     		mov	r3, r2
 19401 01ee DB00     		lsls	r3, r3, #3
 19402 01f0 9B1A     		subs	r3, r3, r2
 19403 01f2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 431


 19404 01f4 0B44     		add	r3, r3, r1
 19405 01f6 EC33     		adds	r3, r3, #236
 19406 01f8 0022     		movs	r2, #0
 19407 01fa 1A60     		str	r2, [r3]
2868:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19408              		.loc 1 2868 0
 19409 01fc 0023     		movs	r3, #0
 19410 01fe BB71     		strb	r3, [r7, #6]
 19411 0200 10E0     		b	.L792
 19412              	.L793:
2869:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 19413              		.loc 1 2869 0 discriminator 3
 19414 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19415 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19416 0206 3648     		ldr	r0, .L813
 19417 0208 1346     		mov	r3, r2
 19418 020a DB00     		lsls	r3, r3, #3
 19419 020c 9B1A     		subs	r3, r3, r2
 19420 020e 9B00     		lsls	r3, r3, #2
 19421 0210 0B44     		add	r3, r3, r1
 19422 0212 3C33     		adds	r3, r3, #60
 19423 0214 9B00     		lsls	r3, r3, #2
 19424 0216 0344     		add	r3, r3, r0
 19425 0218 4FF00002 		mov	r2, #0
 19426 021c 5A60     		str	r2, [r3, #4]	@ float
2868:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19427              		.loc 1 2868 0 discriminator 3
 19428 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19429 0220 0133     		adds	r3, r3, #1
 19430 0222 BB71     		strb	r3, [r7, #6]
 19431              	.L792:
2868:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 19432              		.loc 1 2868 0 is_stmt 0 discriminator 1
 19433 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19434 0226 052B     		cmp	r3, #5
 19435 0228 EBD9     		bls	.L793
2870:..\src/command_processing.c ****         }
2871:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 19436              		.loc 1 2871 0 is_stmt 1 discriminator 2
 19437 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19438 022c 2C49     		ldr	r1, .L813
 19439 022e 1346     		mov	r3, r2
 19440 0230 DB00     		lsls	r3, r3, #3
 19441 0232 9B1A     		subs	r3, r3, r2
 19442 0234 1B01     		lsls	r3, r3, #4
 19443 0236 0B44     		add	r3, r3, r1
 19444 0238 03F58673 		add	r3, r3, #268
 19445 023c 40F2DC52 		movw	r2, #1500
 19446 0240 1A80     		strh	r2, [r3]	@ movhi
2872:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 19447              		.loc 1 2872 0 discriminator 2
 19448 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19449 0244 2649     		ldr	r1, .L813
 19450 0246 1346     		mov	r3, r2
 19451 0248 DB00     		lsls	r3, r3, #3
 19452 024a 9B1A     		subs	r3, r3, r2
 19453 024c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 432


 19454 024e 0B44     		add	r3, r3, r1
 19455 0250 03F58873 		add	r3, r3, #272
 19456 0254 FA79     		ldrb	r2, [r7, #7]
 19457 0256 1A70     		strb	r2, [r3]
2873:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 19458              		.loc 1 2873 0 discriminator 2
 19459 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19460 025a 2149     		ldr	r1, .L813
 19461 025c 1346     		mov	r3, r2
 19462 025e DB00     		lsls	r3, r3, #3
 19463 0260 9B1A     		subs	r3, r3, r2
 19464 0262 1B01     		lsls	r3, r3, #4
 19465 0264 0B44     		add	r3, r3, r1
 19466 0266 E333     		adds	r3, r3, #227
 19467 0268 0122     		movs	r2, #1
 19468 026a 1A70     		strb	r2, [r3]
2874:..\src/command_processing.c ****         
2875:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 19469              		.loc 1 2875 0 discriminator 2
 19470 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19471 026e 1C49     		ldr	r1, .L813
 19472 0270 1346     		mov	r3, r2
 19473 0272 DB00     		lsls	r3, r3, #3
 19474 0274 9B1A     		subs	r3, r3, r2
 19475 0276 1B01     		lsls	r3, r3, #4
 19476 0278 0B44     		add	r3, r3, r1
 19477 027a 03F21113 		addw	r3, r3, #273
 19478 027e 0122     		movs	r2, #1
 19479 0280 1A70     		strb	r2, [r3]
2876:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 19480              		.loc 1 2876 0 discriminator 2
 19481 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19482 0284 1649     		ldr	r1, .L813
 19483 0286 1346     		mov	r3, r2
 19484 0288 DB00     		lsls	r3, r3, #3
 19485 028a 9B1A     		subs	r3, r3, r2
 19486 028c 1B01     		lsls	r3, r3, #4
 19487 028e 0B44     		add	r3, r3, r1
 19488 0290 03F58973 		add	r3, r3, #274
 19489 0294 0022     		movs	r2, #0
 19490 0296 1A70     		strb	r2, [r3]
2846:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19491              		.loc 1 2846 0 discriminator 2
 19492 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19493 029a 0133     		adds	r3, r3, #1
 19494 029c FB71     		strb	r3, [r7, #7]
 19495              	.L791:
2846:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19496              		.loc 1 2846 0 is_stmt 0 discriminator 1
 19497 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19498 02a0 012B     		cmp	r3, #1
 19499 02a2 7FF6E6AE 		bls	.L794
2877:..\src/command_processing.c ****     }
2878:..\src/command_processing.c ****     
2879:..\src/command_processing.c ****     // ENC STRUCT
2880:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 19500              		.loc 1 2880 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 433


 19501 02a6 0023     		movs	r3, #0
 19502 02a8 FB71     		strb	r3, [r7, #7]
 19503 02aa 98E0     		b	.L795
 19504              	.L802:
2881:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19505              		.loc 1 2881 0
 19506 02ac 0023     		movs	r3, #0
 19507 02ae BB71     		strb	r3, [r7, #6]
 19508 02b0 0FE0     		b	.L796
 19509              	.L797:
2882:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 19510              		.loc 1 2882 0 discriminator 3
 19511 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19512 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19513 02b6 0A48     		ldr	r0, .L813
 19514 02b8 1346     		mov	r3, r2
 19515 02ba 5B00     		lsls	r3, r3, #1
 19516 02bc 1344     		add	r3, r3, r2
 19517 02be 1B01     		lsls	r3, r3, #4
 19518 02c0 0344     		add	r3, r3, r0
 19519 02c2 0B44     		add	r3, r3, r1
 19520 02c4 03F5C873 		add	r3, r3, #400
 19521 02c8 0022     		movs	r2, #0
 19522 02ca 1A70     		strb	r2, [r3]
2881:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19523              		.loc 1 2881 0 discriminator 3
 19524 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19525 02ce 0133     		adds	r3, r3, #1
 19526 02d0 BB71     		strb	r3, [r7, #6]
 19527              	.L796:
2881:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19528              		.loc 1 2881 0 is_stmt 0 discriminator 1
 19529 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19530 02d4 042B     		cmp	r3, #4
 19531 02d6 ECD9     		bls	.L797
2883:..\src/command_processing.c ****         }
2884:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19532              		.loc 1 2884 0 is_stmt 1
 19533 02d8 0023     		movs	r3, #0
 19534 02da BB71     		strb	r3, [r7, #6]
 19535 02dc 2CE0     		b	.L798
 19536              	.L814:
 19537 02de 00BF     		.align	2
 19538              	.L813:
 19539 02e0 00000000 		.word	g_mem
 19540              	.L799:
2885:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19541              		.loc 1 2885 0 discriminator 3
 19542 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19543 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19544 02e8 B748     		ldr	r0, .L815
 19545 02ea 1346     		mov	r3, r2
 19546 02ec 5B00     		lsls	r3, r3, #1
 19547 02ee 1344     		add	r3, r3, r2
 19548 02f0 1B01     		lsls	r3, r3, #4
 19549 02f2 0344     		add	r3, r3, r0
 19550 02f4 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 434


 19551 02f6 03F29513 		addw	r3, r3, #405
 19552 02fa 0322     		movs	r2, #3
 19553 02fc 1A70     		strb	r2, [r3]
2886:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 19554              		.loc 1 2886 0 discriminator 3
 19555 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19556 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19557 0302 B148     		ldr	r0, .L815
 19558 0304 1346     		mov	r3, r2
 19559 0306 5B00     		lsls	r3, r3, #1
 19560 0308 1344     		add	r3, r3, r2
 19561 030a 9B00     		lsls	r3, r3, #2
 19562 030c 0B44     		add	r3, r3, r1
 19563 030e 6833     		adds	r3, r3, #104
 19564 0310 9B00     		lsls	r3, r3, #2
 19565 0312 0344     		add	r3, r3, r0
 19566 0314 4FF07E52 		mov	r2, #1065353216
 19567 0318 5A60     		str	r2, [r3, #4]	@ float
2887:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 19568              		.loc 1 2887 0 discriminator 3
 19569 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19570 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19571 031e AA48     		ldr	r0, .L815
 19572 0320 1346     		mov	r3, r2
 19573 0322 5B00     		lsls	r3, r3, #1
 19574 0324 1344     		add	r3, r3, r2
 19575 0326 9B00     		lsls	r3, r3, #2
 19576 0328 0B44     		add	r3, r3, r1
 19577 032a 6633     		adds	r3, r3, #102
 19578 032c 0022     		movs	r2, #0
 19579 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2884:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19580              		.loc 1 2884 0 discriminator 3
 19581 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19582 0334 0133     		adds	r3, r3, #1
 19583 0336 BB71     		strb	r3, [r7, #6]
 19584              	.L798:
2884:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 19585              		.loc 1 2884 0 is_stmt 0 discriminator 1
 19586 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19587 033a 022B     		cmp	r3, #2
 19588 033c D2D9     		bls	.L799
2888:..\src/command_processing.c ****         }
2889:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 19589              		.loc 1 2889 0 is_stmt 1
 19590 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19591 0340 A149     		ldr	r1, .L815
 19592 0342 1346     		mov	r3, r2
 19593 0344 5B00     		lsls	r3, r3, #1
 19594 0346 1344     		add	r3, r3, r2
 19595 0348 1B01     		lsls	r3, r3, #4
 19596 034a 0B44     		add	r3, r3, r1
 19597 034c 03F5D873 		add	r3, r3, #432
 19598 0350 0022     		movs	r2, #0
 19599 0352 1A70     		strb	r2, [r3]
2890:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 19600              		.loc 1 2890 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 435


 19601 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19602 0356 9C49     		ldr	r1, .L815
 19603 0358 1346     		mov	r3, r2
 19604 035a 5B00     		lsls	r3, r3, #1
 19605 035c 1344     		add	r3, r3, r2
 19606 035e 1B01     		lsls	r3, r3, #4
 19607 0360 0B44     		add	r3, r3, r1
 19608 0362 03F5DA73 		add	r3, r3, #436
 19609 0366 1622     		movs	r2, #22
 19610 0368 1A70     		strb	r2, [r3]
2891:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19611              		.loc 1 2891 0
 19612 036a 0023     		movs	r3, #0
 19613 036c BB71     		strb	r3, [r7, #6]
 19614 036e 0FE0     		b	.L800
 19615              	.L801:
2892:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 19616              		.loc 1 2892 0 discriminator 3
 19617 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19618 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 19619 0374 9448     		ldr	r0, .L815
 19620 0376 1346     		mov	r3, r2
 19621 0378 5B00     		lsls	r3, r3, #1
 19622 037a 1344     		add	r3, r3, r2
 19623 037c 1B01     		lsls	r3, r3, #4
 19624 037e 0344     		add	r3, r3, r0
 19625 0380 0B44     		add	r3, r3, r1
 19626 0382 03F2B113 		addw	r3, r3, #433
 19627 0386 BA79     		ldrb	r2, [r7, #6]
 19628 0388 1A70     		strb	r2, [r3]
2891:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19629              		.loc 1 2891 0 discriminator 3
 19630 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19631 038c 0133     		adds	r3, r3, #1
 19632 038e BB71     		strb	r3, [r7, #6]
 19633              	.L800:
2891:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 19634              		.loc 1 2891 0 is_stmt 0 discriminator 1
 19635 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 19636 0392 022B     		cmp	r3, #2
 19637 0394 ECD9     		bls	.L801
2893:..\src/command_processing.c ****         }
2894:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 19638              		.loc 1 2894 0 is_stmt 1 discriminator 2
 19639 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19640 0398 8B49     		ldr	r1, .L815
 19641 039a 1346     		mov	r3, r2
 19642 039c 5B00     		lsls	r3, r3, #1
 19643 039e 1344     		add	r3, r3, r2
 19644 03a0 1B01     		lsls	r3, r3, #4
 19645 03a2 0B44     		add	r3, r3, r1
 19646 03a4 03F2B513 		addw	r3, r3, #437
 19647 03a8 0F22     		movs	r2, #15
 19648 03aa 1A70     		strb	r2, [r3]
2895:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 19649              		.loc 1 2895 0 discriminator 2
 19650 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 436


 19651 03ae 8649     		ldr	r1, .L815
 19652 03b0 1346     		mov	r3, r2
 19653 03b2 5B00     		lsls	r3, r3, #1
 19654 03b4 1344     		add	r3, r3, r2
 19655 03b6 1B01     		lsls	r3, r3, #4
 19656 03b8 0B44     		add	r3, r3, r1
 19657 03ba 03F5DB73 		add	r3, r3, #438
 19658 03be 0E22     		movs	r2, #14
 19659 03c0 1A70     		strb	r2, [r3]
2896:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 19660              		.loc 1 2896 0 discriminator 2
 19661 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19662 03c4 8049     		ldr	r1, .L815
 19663 03c6 1346     		mov	r3, r2
 19664 03c8 5B00     		lsls	r3, r3, #1
 19665 03ca 1344     		add	r3, r3, r2
 19666 03cc 1B01     		lsls	r3, r3, #4
 19667 03ce 0B44     		add	r3, r3, r1
 19668 03d0 03F2B713 		addw	r3, r3, #439
 19669 03d4 0122     		movs	r2, #1
 19670 03d6 1A70     		strb	r2, [r3]
2880:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19671              		.loc 1 2880 0 discriminator 2
 19672 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19673 03da 0133     		adds	r3, r3, #1
 19674 03dc FB71     		strb	r3, [r7, #7]
 19675              	.L795:
2880:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 19676              		.loc 1 2880 0 is_stmt 0 discriminator 1
 19677 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19678 03e0 012B     		cmp	r3, #1
 19679 03e2 7FF663AF 		bls	.L802
2897:..\src/command_processing.c ****     }
2898:..\src/command_processing.c ****     
2899:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19680              		.loc 1 2899 0 is_stmt 1
 19681 03e6 0023     		movs	r3, #0
 19682 03e8 FB71     		strb	r3, [r7, #7]
 19683 03ea 2EE0     		b	.L803
 19684              	.L804:
2900:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19685              		.loc 1 2900 0 discriminator 3
 19686 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19687 03ee 7649     		ldr	r1, .L815
 19688 03f0 1346     		mov	r3, r2
 19689 03f2 DB00     		lsls	r3, r3, #3
 19690 03f4 9B1A     		subs	r3, r3, r2
 19691 03f6 1B01     		lsls	r3, r3, #4
 19692 03f8 0B44     		add	r3, r3, r1
 19693 03fa E433     		adds	r3, r3, #228
 19694 03fc 0022     		movs	r2, #0
 19695 03fe 1A60     		str	r2, [r3]
2901:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 19696              		.loc 1 2901 0 discriminator 3
 19697 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19698 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 19699 0404 7048     		ldr	r0, .L815
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 437


 19700 0406 0B46     		mov	r3, r1
 19701 0408 DB00     		lsls	r3, r3, #3
 19702 040a 5B1A     		subs	r3, r3, r1
 19703 040c 1B01     		lsls	r3, r3, #4
 19704 040e 0344     		add	r3, r3, r0
 19705 0410 03F58873 		add	r3, r3, #272
 19706 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19707 0416 1846     		mov	r0, r3
 19708 0418 6B49     		ldr	r1, .L815
 19709 041a 0346     		mov	r3, r0
 19710 041c 5B00     		lsls	r3, r3, #1
 19711 041e 0344     		add	r3, r3, r0
 19712 0420 1B01     		lsls	r3, r3, #4
 19713 0422 0B44     		add	r3, r3, r1
 19714 0424 03F29513 		addw	r3, r3, #405
 19715 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19716 042a 1946     		mov	r1, r3
 19717 042c 44F63823 		movw	r3, #19000
 19718 0430 03FA01F1 		lsl	r1, r3, r1
 19719 0434 6448     		ldr	r0, .L815
 19720 0436 1346     		mov	r3, r2
 19721 0438 DB00     		lsls	r3, r3, #3
 19722 043a 9B1A     		subs	r3, r3, r2
 19723 043c 1B01     		lsls	r3, r3, #4
 19724 043e 0344     		add	r3, r3, r0
 19725 0440 E833     		adds	r3, r3, #232
 19726 0442 1960     		str	r1, [r3]
2899:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19727              		.loc 1 2899 0 discriminator 3
 19728 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19729 0446 0133     		adds	r3, r3, #1
 19730 0448 FB71     		strb	r3, [r7, #7]
 19731              	.L803:
2899:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 19732              		.loc 1 2899 0 is_stmt 0 discriminator 1
 19733 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19734 044c 012B     		cmp	r3, #1
 19735 044e CDD9     		bls	.L804
2902:..\src/command_processing.c ****     }
2903:..\src/command_processing.c ****     
2904:..\src/command_processing.c ****     // EMG STRUCT     
2905:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 19736              		.loc 1 2905 0 is_stmt 1
 19737 0450 5D4B     		ldr	r3, .L815
 19738 0452 C822     		movs	r2, #200
 19739 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2906:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 19740              		.loc 1 2906 0
 19741 0458 5B4B     		ldr	r3, .L815
 19742 045a C822     		movs	r2, #200
 19743 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2907:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 19744              		.loc 1 2907 0
 19745 0460 594B     		ldr	r3, .L815
 19746 0462 4FF48062 		mov	r2, #1024
 19747 0466 C3F8F421 		str	r2, [r3, #500]
2908:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 438


 19748              		.loc 1 2908 0
 19749 046a 574B     		ldr	r3, .L815
 19750 046c 4FF48062 		mov	r2, #1024
 19751 0470 C3F8F821 		str	r2, [r3, #504]
2909:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;   
 19752              		.loc 1 2909 0
 19753 0474 544B     		ldr	r3, .L815
 19754 0476 6422     		movs	r2, #100
 19755 0478 83F8FC21 		strb	r2, [r3, #508]
2910:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 19756              		.loc 1 2910 0
 19757 047c 524B     		ldr	r3, .L815
 19758 047e 0022     		movs	r2, #0
 19759 0480 83F8FD21 		strb	r2, [r3, #509]
2911:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 19760              		.loc 1 2911 0
 19761 0484 504B     		ldr	r3, .L815
 19762 0486 0022     		movs	r2, #0
 19763 0488 83F8FE21 		strb	r2, [r3, #510]
2912:..\src/command_processing.c **** 
2913:..\src/command_processing.c ****     // IMU STRUCT
2914:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 19764              		.loc 1 2914 0
 19765 048c 4E4B     		ldr	r3, .L815
 19766 048e 0022     		movs	r2, #0
 19767 0490 83F80022 		strb	r2, [r3, #512]
2915:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 19768              		.loc 1 2915 0
 19769 0494 4C4B     		ldr	r3, .L815
 19770 0496 0022     		movs	r2, #0
 19771 0498 83F80122 		strb	r2, [r3, #513]
2916:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 19772              		.loc 1 2916 0
 19773 049c 0023     		movs	r3, #0
 19774 049e FB71     		strb	r3, [r7, #7]
 19775 04a0 34E0     		b	.L805
 19776              	.L806:
2917:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19777              		.loc 1 2917 0 discriminator 3
 19778 04a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19779 04a4 4849     		ldr	r1, .L815
 19780 04a6 1346     		mov	r3, r2
 19781 04a8 9B00     		lsls	r3, r3, #2
 19782 04aa 1344     		add	r3, r3, r2
 19783 04ac 0B44     		add	r3, r3, r1
 19784 04ae 03F20223 		addw	r3, r3, #514
 19785 04b2 0122     		movs	r2, #1
 19786 04b4 1A70     		strb	r2, [r3]
2918:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 19787              		.loc 1 2918 0 discriminator 3
 19788 04b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19789 04b8 4349     		ldr	r1, .L815
 19790 04ba 1346     		mov	r3, r2
 19791 04bc 9B00     		lsls	r3, r3, #2
 19792 04be 1344     		add	r3, r3, r2
 19793 04c0 0B44     		add	r3, r3, r1
 19794 04c2 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 439


 19795 04c6 0122     		movs	r2, #1
 19796 04c8 1A70     		strb	r2, [r3]
2919:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 19797              		.loc 1 2919 0 discriminator 3
 19798 04ca FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19799 04cc 3E49     		ldr	r1, .L815
 19800 04ce 1346     		mov	r3, r2
 19801 04d0 9B00     		lsls	r3, r3, #2
 19802 04d2 1344     		add	r3, r3, r2
 19803 04d4 0B44     		add	r3, r3, r1
 19804 04d6 03F50173 		add	r3, r3, #516
 19805 04da 0022     		movs	r2, #0
 19806 04dc 1A70     		strb	r2, [r3]
2920:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 19807              		.loc 1 2920 0 discriminator 3
 19808 04de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19809 04e0 3949     		ldr	r1, .L815
 19810 04e2 1346     		mov	r3, r2
 19811 04e4 9B00     		lsls	r3, r3, #2
 19812 04e6 1344     		add	r3, r3, r2
 19813 04e8 0B44     		add	r3, r3, r1
 19814 04ea 03F20523 		addw	r3, r3, #517
 19815 04ee 0022     		movs	r2, #0
 19816 04f0 1A70     		strb	r2, [r3]
2921:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 19817              		.loc 1 2921 0 discriminator 3
 19818 04f2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19819 04f4 3449     		ldr	r1, .L815
 19820 04f6 1346     		mov	r3, r2
 19821 04f8 9B00     		lsls	r3, r3, #2
 19822 04fa 1344     		add	r3, r3, r2
 19823 04fc 0B44     		add	r3, r3, r1
 19824 04fe 03F20623 		addw	r3, r3, #518
 19825 0502 0022     		movs	r2, #0
 19826 0504 1A70     		strb	r2, [r3]
2916:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19827              		.loc 1 2916 0 discriminator 3
 19828 0506 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19829 0508 0133     		adds	r3, r3, #1
 19830 050a FB71     		strb	r3, [r7, #7]
 19831              	.L805:
2916:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 19832              		.loc 1 2916 0 is_stmt 0 discriminator 1
 19833 050c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19834 050e 042B     		cmp	r3, #4
 19835 0510 C7D9     		bls	.L806
2922:..\src/command_processing.c ****     }
2923:..\src/command_processing.c ****      
2924:..\src/command_processing.c ****     // EXP STRUCT
2925:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 19836              		.loc 1 2925 0 is_stmt 1
 19837 0512 2D4B     		ldr	r3, .L815
 19838 0514 0022     		movs	r2, #0
 19839 0516 83F82622 		strb	r2, [r3, #550]
2926:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 19840              		.loc 1 2926 0
 19841 051a 2B4B     		ldr	r3, .L815
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 440


 19842 051c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19843 0520 1233     		adds	r3, r3, #18
 19844 0522 5B01     		lsls	r3, r3, #5
 19845 0524 284A     		ldr	r2, .L815
 19846 0526 1344     		add	r3, r3, r2
 19847 0528 284A     		ldr	r2, .L815+4
 19848 052a 1068     		ldr	r0, [r2]	@ unaligned
 19849 052c 1860     		str	r0, [r3]	@ unaligned
 19850 052e 9188     		ldrh	r1, [r2, #4]	@ unaligned
 19851 0530 9279     		ldrb	r2, [r2, #6]
 19852 0532 9980     		strh	r1, [r3, #4]	@ unaligned
 19853 0534 9A71     		strb	r2, [r3, #6]
2927:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 19854              		.loc 1 2927 0
 19855 0536 244B     		ldr	r3, .L815
 19856 0538 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 19857 053c 012B     		cmp	r3, #1
 19858 053e 13D1     		bne	.L807
2928:..\src/command_processing.c ****         // Set date of maintenance from RTC
2929:..\src/command_processing.c ****         store_RTC_current_time();
 19859              		.loc 1 2929 0
 19860 0540 FFF7FEFF 		bl	store_RTC_current_time
2930:..\src/command_processing.c ****         
2931:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 19861              		.loc 1 2931 0
 19862 0544 204B     		ldr	r3, .L815
 19863 0546 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 19864 054a 1F4B     		ldr	r3, .L815
 19865 054c 83F8A420 		strb	r2, [r3, #164]
2932:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 19866              		.loc 1 2932 0
 19867 0550 1D4B     		ldr	r3, .L815
 19868 0552 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 19869 0556 1C4B     		ldr	r3, .L815
 19870 0558 83F8A520 		strb	r2, [r3, #165]
2933:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 19871              		.loc 1 2933 0
 19872 055c 1A4B     		ldr	r3, .L815
 19873 055e 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 19874 0562 194B     		ldr	r3, .L815
 19875 0564 83F8A620 		strb	r2, [r3, #166]
 19876              	.L807:
2934:..\src/command_processing.c ****     }
2935:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 19877              		.loc 1 2935 0
 19878 0568 174B     		ldr	r3, .L815
 19879 056a 0022     		movs	r2, #0
 19880 056c 83F82722 		strb	r2, [r3, #551]
2936:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19881              		.loc 1 2936 0
 19882 0570 0023     		movs	r3, #0
 19883 0572 FB71     		strb	r3, [r7, #7]
 19884 0574 08E0     		b	.L808
 19885              	.L809:
2937:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 19886              		.loc 1 2937 0 discriminator 3
 19887 0576 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 441


 19888 0578 134A     		ldr	r2, .L815
 19889 057a 1344     		add	r3, r3, r2
 19890 057c 0022     		movs	r2, #0
 19891 057e 83F82822 		strb	r2, [r3, #552]
2936:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19892              		.loc 1 2936 0 discriminator 3
 19893 0582 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19894 0584 0133     		adds	r3, r3, #1
 19895 0586 FB71     		strb	r3, [r7, #7]
 19896              	.L808:
2936:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 19897              		.loc 1 2936 0 is_stmt 0 discriminator 1
 19898 0588 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19899 058a 0B2B     		cmp	r3, #11
 19900 058c F3D9     		bls	.L809
2938:..\src/command_processing.c ****     }
2939:..\src/command_processing.c **** 
2940:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2941:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2942:..\src/command_processing.c ****     memInit_SoftHandPro();
 19901              		.loc 1 2942 0 is_stmt 1
 19902 058e FFF7FEFF 		bl	memInit_SoftHandPro
2943:..\src/command_processing.c **** #endif    
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c ****     // Default generic user_id
2946:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 19903              		.loc 1 2946 0
 19904 0592 0D4B     		ldr	r3, .L815
 19905 0594 0022     		movs	r2, #0
 19906 0596 83F8AB20 		strb	r2, [r3, #171]
2947:..\src/command_processing.c **** 
2948:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2949:..\src/command_processing.c ****     g_mem.flag = TRUE;
 19907              		.loc 1 2949 0
 19908 059a 0B4B     		ldr	r3, .L815
 19909 059c 0122     		movs	r2, #1
 19910 059e 1A70     		strb	r2, [r3]
2950:..\src/command_processing.c ****     
2951:..\src/command_processing.c ****     //write that configuration to EEPROM
2952:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 19911              		.loc 1 2952 0
 19912 05a0 0020     		movs	r0, #0
 19913 05a2 FFF7FEFF 		bl	memStore
 19914 05a6 0346     		mov	r3, r0
 19915 05a8 002B     		cmp	r3, #0
 19916 05aa 07D0     		beq	.L810
 19917              		.loc 1 2952 0 is_stmt 0 discriminator 1
 19918 05ac 3220     		movs	r0, #50
 19919 05ae FFF7FEFF 		bl	memStore
 19920 05b2 0346     		mov	r3, r0
 19921 05b4 002B     		cmp	r3, #0
 19922 05b6 01D0     		beq	.L810
 19923              		.loc 1 2952 0 discriminator 3
 19924 05b8 0123     		movs	r3, #1
 19925 05ba 00E0     		b	.L811
 19926              	.L810:
 19927              		.loc 1 2952 0 discriminator 4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 442


 19928 05bc 0023     		movs	r3, #0
 19929              	.L811:
 19930              		.loc 1 2952 0 discriminator 6
 19931 05be DBB2     		uxtb	r3, r3
2953:..\src/command_processing.c **** }
 19932              		.loc 1 2953 0 is_stmt 1 discriminator 6
 19933 05c0 1846     		mov	r0, r3
 19934 05c2 0837     		adds	r7, r7, #8
 19935              		.cfi_def_cfa_offset 8
 19936 05c4 BD46     		mov	sp, r7
 19937              		.cfi_def_cfa_register 13
 19938              		@ sp needed
 19939 05c6 80BD     		pop	{r7, pc}
 19940              	.L816:
 19941              		.align	2
 19942              	.L815:
 19943 05c8 00000000 		.word	g_mem
 19944 05cc 70190000 		.word	.LC253
 19945              		.cfi_endproc
 19946              	.LFE86:
 19947              		.size	memInit, .-memInit
 19948              		.section	.rodata
 19949 1977 00       		.align	2
 19950              	.LC254:
 19951 1978 55535230 		.ascii	"USR001\000"
 19951      303100
 19952              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 19953              		.align	2
 19954              		.global	memInit_SoftHandPro
 19955              		.thumb
 19956              		.thumb_func
 19957              		.type	memInit_SoftHandPro, %function
 19958              	memInit_SoftHandPro:
 19959              	.LFB87:
2954:..\src/command_processing.c **** 
2955:..\src/command_processing.c **** //==============================================================================
2956:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2957:..\src/command_processing.c **** //==============================================================================
2958:..\src/command_processing.c **** void memInit_SoftHandPro(void)
2959:..\src/command_processing.c **** {
 19960              		.loc 1 2959 0
 19961              		.cfi_startproc
 19962              		@ args = 0, pretend = 0, frame = 8
 19963              		@ frame_needed = 1, uses_anonymous_args = 0
 19964              		@ link register save eliminated.
 19965 0000 80B4     		push	{r7}
 19966              		.cfi_def_cfa_offset 4
 19967              		.cfi_offset 7, -4
 19968 0002 83B0     		sub	sp, sp, #12
 19969              		.cfi_def_cfa_offset 16
 19970 0004 00AF     		add	r7, sp, #0
 19971              		.cfi_def_cfa_register 7
2960:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 19972              		.loc 1 2960 0
 19973 0006 0023     		movs	r3, #0
 19974 0008 FB70     		strb	r3, [r7, #3]
2961:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 443


2962:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2963:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 19975              		.loc 1 2963 0
 19976 000a 874B     		ldr	r3, .L820
 19977 000c 0122     		movs	r2, #1
 19978 000e 83F8A720 		strb	r2, [r3, #167]
2964:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 19979              		.loc 1 2964 0
 19980 0012 854B     		ldr	r3, .L820
 19981 0014 0022     		movs	r2, #0
 19982 0016 83F8AC20 		strb	r2, [r3, #172]
2965:..\src/command_processing.c ****     
2966:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 19983              		.loc 1 2966 0
 19984 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19985 001c 8249     		ldr	r1, .L820
 19986 001e 1346     		mov	r3, r2
 19987 0020 DB00     		lsls	r3, r3, #3
 19988 0022 9B1A     		subs	r3, r3, r2
 19989 0024 1B01     		lsls	r3, r3, #4
 19990 0026 0B44     		add	r3, r3, r1
 19991 0028 E033     		adds	r3, r3, #224
 19992 002a 0122     		movs	r2, #1
 19993 002c 1A70     		strb	r2, [r3]
2967:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
 19994              		.loc 1 2967 0
 19995 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 19996 0030 7D49     		ldr	r1, .L820
 19997 0032 1346     		mov	r3, r2
 19998 0034 DB00     		lsls	r3, r3, #3
 19999 0036 9B1A     		subs	r3, r3, r2
 20000 0038 1B01     		lsls	r3, r3, #4
 20001 003a 0B44     		add	r3, r3, r1
 20002 003c 03F58773 		add	r3, r3, #270
 20003 0040 0022     		movs	r2, #0
 20004 0042 1A70     		strb	r2, [r3]
2968:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 20005              		.loc 1 2968 0
 20006 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20007 0046 7849     		ldr	r1, .L820
 20008 0048 1346     		mov	r3, r2
 20009 004a DB00     		lsls	r3, r3, #3
 20010 004c 9B1A     		subs	r3, r3, r2
 20011 004e 1B01     		lsls	r3, r3, #4
 20012 0050 0B44     		add	r3, r3, r1
 20013 0052 03F20F13 		addw	r3, r3, #271
 20014 0056 0022     		movs	r2, #0
 20015 0058 1A70     		strb	r2, [r3]
2969:..\src/command_processing.c ****     
2970:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
2971:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 20016              		.loc 1 2971 0
 20017 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20018 005c 724B     		ldr	r3, .L820
 20019 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 20020 0062 7149     		ldr	r1, .L820
 20021 0064 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 444


 20022 0066 DB00     		lsls	r3, r3, #3
 20023 0068 9B1A     		subs	r3, r3, r2
 20024 006a 1B01     		lsls	r3, r3, #4
 20025 006c 0B44     		add	r3, r3, r1
 20026 006e 03F58873 		add	r3, r3, #272
 20027 0072 0246     		mov	r2, r0
 20028 0074 1A70     		strb	r2, [r3]
2972:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 20029              		.loc 1 2972 0
 20030 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20031 0078 6B49     		ldr	r1, .L820
 20032 007a 1346     		mov	r3, r2
 20033 007c DB00     		lsls	r3, r3, #3
 20034 007e 9B1A     		subs	r3, r3, r2
 20035 0080 1B01     		lsls	r3, r3, #4
 20036 0082 0B44     		add	r3, r3, r1
 20037 0084 03F21113 		addw	r3, r3, #273
 20038 0088 0122     		movs	r2, #1
 20039 008a 1A70     		strb	r2, [r3]
2973:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 20040              		.loc 1 2973 0
 20041 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20042 008e 6649     		ldr	r1, .L820
 20043 0090 1346     		mov	r3, r2
 20044 0092 DB00     		lsls	r3, r3, #3
 20045 0094 9B1A     		subs	r3, r3, r2
 20046 0096 1B01     		lsls	r3, r3, #4
 20047 0098 0B44     		add	r3, r3, r1
 20048 009a 03F58973 		add	r3, r3, #274
 20049 009e 0122     		movs	r2, #1
 20050 00a0 1A70     		strb	r2, [r3]
2974:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 20051              		.loc 1 2974 0
 20052 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20053 00a4 6049     		ldr	r1, .L820
 20054 00a6 1346     		mov	r3, r2
 20055 00a8 DB00     		lsls	r3, r3, #3
 20056 00aa 9B1A     		subs	r3, r3, r2
 20057 00ac 1B01     		lsls	r3, r3, #4
 20058 00ae 0B44     		add	r3, r3, r1
 20059 00b0 E433     		adds	r3, r3, #228
 20060 00b2 0022     		movs	r2, #0
 20061 00b4 1A60     		str	r2, [r3]
2975:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 20062              		.loc 1 2975 0
 20063 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20064 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 20065 00ba 5B48     		ldr	r0, .L820
 20066 00bc 0B46     		mov	r3, r1
 20067 00be DB00     		lsls	r3, r3, #3
 20068 00c0 5B1A     		subs	r3, r3, r1
 20069 00c2 1B01     		lsls	r3, r3, #4
 20070 00c4 0344     		add	r3, r3, r0
 20071 00c6 03F58873 		add	r3, r3, #272
 20072 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20073 00cc 1846     		mov	r0, r3
 20074 00ce 5649     		ldr	r1, .L820
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 445


 20075 00d0 0346     		mov	r3, r0
 20076 00d2 5B00     		lsls	r3, r3, #1
 20077 00d4 0344     		add	r3, r3, r0
 20078 00d6 1B01     		lsls	r3, r3, #4
 20079 00d8 0B44     		add	r3, r3, r1
 20080 00da 03F29513 		addw	r3, r3, #405
 20081 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20082 00e0 1946     		mov	r1, r3
 20083 00e2 4FF47A53 		mov	r3, #16000
 20084 00e6 03FA01F1 		lsl	r1, r3, r1
 20085 00ea 4F48     		ldr	r0, .L820
 20086 00ec 1346     		mov	r3, r2
 20087 00ee DB00     		lsls	r3, r3, #3
 20088 00f0 9B1A     		subs	r3, r3, r2
 20089 00f2 1B01     		lsls	r3, r3, #4
 20090 00f4 0344     		add	r3, r3, r0
 20091 00f6 E833     		adds	r3, r3, #232
 20092 00f8 1960     		str	r1, [r3]
 20093              	.LBB21:
2976:..\src/command_processing.c ****     
2977:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 20094              		.loc 1 2977 0
 20095 00fa 0023     		movs	r3, #0
 20096 00fc 7B60     		str	r3, [r7, #4]
 20097 00fe 2EE0     		b	.L818
 20098              	.L819:
2978:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
2979:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 20099              		.loc 1 2979 0 discriminator 3
 20100 0100 4949     		ldr	r1, .L820
 20101 0102 7A68     		ldr	r2, [r7, #4]
 20102 0104 1346     		mov	r3, r2
 20103 0106 5B00     		lsls	r3, r3, #1
 20104 0108 1344     		add	r3, r3, r2
 20105 010a 1B01     		lsls	r3, r3, #4
 20106 010c 0B44     		add	r3, r3, r1
 20107 010e 03F5D873 		add	r3, r3, #432
 20108 0112 0122     		movs	r2, #1
 20109 0114 1A70     		strb	r2, [r3]
2980:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 20110              		.loc 1 2980 0 discriminator 3
 20111 0116 4449     		ldr	r1, .L820
 20112 0118 7A68     		ldr	r2, [r7, #4]
 20113 011a 1346     		mov	r3, r2
 20114 011c 5B00     		lsls	r3, r3, #1
 20115 011e 1344     		add	r3, r3, r2
 20116 0120 1B01     		lsls	r3, r3, #4
 20117 0122 0B44     		add	r3, r3, r1
 20118 0124 03F2B513 		addw	r3, r3, #437
 20119 0128 2322     		movs	r2, #35
 20120 012a 1A70     		strb	r2, [r3]
2981:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 20121              		.loc 1 2981 0 discriminator 3
 20122 012c 3E49     		ldr	r1, .L820
 20123 012e 7A68     		ldr	r2, [r7, #4]
 20124 0130 1346     		mov	r3, r2
 20125 0132 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 446


 20126 0134 1344     		add	r3, r3, r2
 20127 0136 1B01     		lsls	r3, r3, #4
 20128 0138 0B44     		add	r3, r3, r1
 20129 013a 03F5DB73 		add	r3, r3, #438
 20130 013e 0322     		movs	r2, #3
 20131 0140 1A70     		strb	r2, [r3]
2982:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 20132              		.loc 1 2982 0 discriminator 3
 20133 0142 3949     		ldr	r1, .L820
 20134 0144 7A68     		ldr	r2, [r7, #4]
 20135 0146 1346     		mov	r3, r2
 20136 0148 5B00     		lsls	r3, r3, #1
 20137 014a 1344     		add	r3, r3, r2
 20138 014c 1B01     		lsls	r3, r3, #4
 20139 014e 0B44     		add	r3, r3, r1
 20140 0150 03F2B713 		addw	r3, r3, #439
 20141 0154 FF22     		movs	r2, #255
 20142 0156 1A70     		strb	r2, [r3]
2977:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20143              		.loc 1 2977 0 discriminator 3
 20144 0158 7B68     		ldr	r3, [r7, #4]
 20145 015a 0133     		adds	r3, r3, #1
 20146 015c 7B60     		str	r3, [r7, #4]
 20147              	.L818:
2977:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20148              		.loc 1 2977 0 is_stmt 0 discriminator 1
 20149 015e 7B68     		ldr	r3, [r7, #4]
 20150 0160 012B     		cmp	r3, #1
 20151 0162 CDDD     		ble	.L819
 20152              	.LBE21:
2983:..\src/command_processing.c ****     }
2984:..\src/command_processing.c ****     
2985:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;
 20153              		.loc 1 2985 0 is_stmt 1
 20154 0164 304B     		ldr	r3, .L820
 20155 0166 0022     		movs	r2, #0
 20156 0168 83F8FD21 		strb	r2, [r3, #509]
2986:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 20157              		.loc 1 2986 0
 20158 016c 2E4B     		ldr	r3, .L820
 20159 016e 4FF48062 		mov	r2, #1024
 20160 0172 C3F8F421 		str	r2, [r3, #500]
2987:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 20161              		.loc 1 2987 0
 20162 0176 2C4B     		ldr	r3, .L820
 20163 0178 4FF48062 		mov	r2, #1024
 20164 017c C3F8F821 		str	r2, [r3, #504]
2988:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 20165              		.loc 1 2988 0
 20166 0180 294B     		ldr	r3, .L820
 20167 0182 C822     		movs	r2, #200
 20168 0184 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2989:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 20169              		.loc 1 2989 0
 20170 0188 274B     		ldr	r3, .L820
 20171 018a C822     		movs	r2, #200
 20172 018c A3F8F221 		strh	r2, [r3, #498]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 447


2990:..\src/command_processing.c ****     g_mem.emg.emg_speed = 100;
 20173              		.loc 1 2990 0
 20174 0190 254B     		ldr	r3, .L820
 20175 0192 6422     		movs	r2, #100
 20176 0194 83F8FC21 		strb	r2, [r3, #508]
2991:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 20177              		.loc 1 2991 0
 20178 0198 234B     		ldr	r3, .L820
 20179 019a 0022     		movs	r2, #0
 20180 019c 83F8FE21 		strb	r2, [r3, #510]
2992:..\src/command_processing.c ****     
2993:..\src/command_processing.c ****     //Initialize rest position parameters  
2994:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 20181              		.loc 1 2994 0
 20182 01a0 214B     		ldr	r3, .L820
 20183 01a2 0022     		movs	r2, #0
 20184 01a4 83F8AC22 		strb	r2, [r3, #684]
2995:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 20185              		.loc 1 2995 0
 20186 01a8 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20187 01aa 1F49     		ldr	r1, .L820
 20188 01ac 1346     		mov	r3, r2
 20189 01ae DB00     		lsls	r3, r3, #3
 20190 01b0 9B1A     		subs	r3, r3, r2
 20191 01b2 1B01     		lsls	r3, r3, #4
 20192 01b4 0B44     		add	r3, r3, r1
 20193 01b6 03F58873 		add	r3, r3, #272
 20194 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20195 01bc 1946     		mov	r1, r3
 20196 01be 1A4A     		ldr	r2, .L820
 20197 01c0 0B46     		mov	r3, r1
 20198 01c2 5B00     		lsls	r3, r3, #1
 20199 01c4 0B44     		add	r3, r3, r1
 20200 01c6 1B01     		lsls	r3, r3, #4
 20201 01c8 1344     		add	r3, r3, r2
 20202 01ca 03F29513 		addw	r3, r3, #405
 20203 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20204 01d0 1A46     		mov	r2, r3
 20205 01d2 41F65833 		movw	r3, #7000
 20206 01d6 9340     		lsls	r3, r3, r2
 20207 01d8 134A     		ldr	r2, .L820
 20208 01da C2F8A032 		str	r3, [r2, #672]
2996:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 20209              		.loc 1 2996 0
 20210 01de 124B     		ldr	r3, .L820
 20211 01e0 0A22     		movs	r2, #10
 20212 01e2 C3F8A422 		str	r2, [r3, #676]
2997:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 20213              		.loc 1 2997 0
 20214 01e6 104B     		ldr	r3, .L820
 20215 01e8 42F21072 		movw	r2, #10000
 20216 01ec C3F8A822 		str	r2, [r3, #680]
2998:..\src/command_processing.c **** 	
2999:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 20217              		.loc 1 2999 0
 20218 01f0 0D4B     		ldr	r3, .L820
 20219 01f2 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 448


 20220 01f4 83F80022 		strb	r2, [r3, #512]
3000:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20221              		.loc 1 3000 0
 20222 01f8 0B4B     		ldr	r3, .L820
 20223 01fa 0022     		movs	r2, #0
 20224 01fc 83F82622 		strb	r2, [r3, #550]
3001:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 20225              		.loc 1 3001 0
 20226 0200 094B     		ldr	r3, .L820
 20227 0202 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20228 0206 1233     		adds	r3, r3, #18
 20229 0208 5B01     		lsls	r3, r3, #5
 20230 020a 074A     		ldr	r2, .L820
 20231 020c 1344     		add	r3, r3, r2
 20232 020e 074A     		ldr	r2, .L820+4
 20233 0210 1068     		ldr	r0, [r2]	@ unaligned
 20234 0212 1860     		str	r0, [r3]	@ unaligned
 20235 0214 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20236 0216 9279     		ldrb	r2, [r2, #6]
 20237 0218 9980     		strh	r1, [r3, #4]	@ unaligned
 20238 021a 9A71     		strb	r2, [r3, #6]
3002:..\src/command_processing.c **** }
 20239              		.loc 1 3002 0
 20240 021c 00BF     		nop
 20241 021e 0C37     		adds	r7, r7, #12
 20242              		.cfi_def_cfa_offset 4
 20243 0220 BD46     		mov	sp, r7
 20244              		.cfi_def_cfa_register 13
 20245              		@ sp needed
 20246 0222 80BC     		pop	{r7}
 20247              		.cfi_restore 7
 20248              		.cfi_def_cfa_offset 0
 20249 0224 7047     		bx	lr
 20250              	.L821:
 20251 0226 00BF     		.align	2
 20252              	.L820:
 20253 0228 00000000 		.word	g_mem
 20254 022c 78190000 		.word	.LC254
 20255              		.cfi_endproc
 20256              	.LFE87:
 20257              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 20258              		.section	.text.cmd_get_measurements,"ax",%progbits
 20259              		.align	2
 20260              		.global	cmd_get_measurements
 20261              		.thumb
 20262              		.thumb_func
 20263              		.type	cmd_get_measurements, %function
 20264              	cmd_get_measurements:
 20265              	.LFB88:
3003:..\src/command_processing.c **** 
3004:..\src/command_processing.c **** //==============================================================================
3005:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3006:..\src/command_processing.c **** //==============================================================================
3007:..\src/command_processing.c **** /**
3008:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3009:..\src/command_processing.c **** **/
3010:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 449


3011:..\src/command_processing.c **** void cmd_get_measurements(){
 20266              		.loc 1 3011 0
 20267              		.cfi_startproc
 20268              		@ args = 0, pretend = 0, frame = 16
 20269              		@ frame_needed = 1, uses_anonymous_args = 0
 20270 0000 90B5     		push	{r4, r7, lr}
 20271              		.cfi_def_cfa_offset 12
 20272              		.cfi_offset 4, -12
 20273              		.cfi_offset 7, -8
 20274              		.cfi_offset 14, -4
 20275 0002 85B0     		sub	sp, sp, #20
 20276              		.cfi_def_cfa_offset 32
 20277 0004 00AF     		add	r7, sp, #0
 20278              		.cfi_def_cfa_register 7
3012:..\src/command_processing.c ****  
3013:..\src/command_processing.c ****     uint8 CYDATA index;
3014:..\src/command_processing.c ****     int16 aux_int16;
3015:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3016:..\src/command_processing.c ****     
3017:..\src/command_processing.c ****     uint8 packet_data[8]; 
3018:..\src/command_processing.c ****     
3019:..\src/command_processing.c ****     //Header package
3020:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 20279              		.loc 1 3020 0
 20280 0006 8423     		movs	r3, #132
 20281 0008 3B71     		strb	r3, [r7, #4]
3021:..\src/command_processing.c ****     
3022:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20282              		.loc 1 3022 0
 20283 000a 0323     		movs	r3, #3
 20284 000c FB73     		strb	r3, [r7, #15]
 20285 000e 38E0     		b	.L823
 20286              	.L824:
3023:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20287              		.loc 1 3023 0
 20288 0010 264B     		ldr	r3, .L825
 20289 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20290 0016 1A46     		mov	r2, r3
 20291 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20292 001a 2548     		ldr	r0, .L825+4
 20293 001c 1346     		mov	r3, r2
 20294 001e 5B00     		lsls	r3, r3, #1
 20295 0020 1344     		add	r3, r3, r2
 20296 0022 9B00     		lsls	r3, r3, #2
 20297 0024 1344     		add	r3, r3, r2
 20298 0026 0B44     		add	r3, r3, r1
 20299 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 20300 002c 1F4B     		ldr	r3, .L825
 20301 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20302 0032 1C46     		mov	r4, r3
 20303 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20304 0036 1D48     		ldr	r0, .L825
 20305 0038 2346     		mov	r3, r4
 20306 003a 5B00     		lsls	r3, r3, #1
 20307 003c 2344     		add	r3, r3, r4
 20308 003e 1B01     		lsls	r3, r3, #4
 20309 0040 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 450


 20310 0042 0B44     		add	r3, r3, r1
 20311 0044 03F29513 		addw	r3, r3, #405
 20312 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20313 004a 42FA03F3 		asr	r3, r2, r3
 20314 004e 1BB2     		sxth	r3, r3
 20315 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3024:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20316              		.loc 1 3024 0
 20317 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20318 0054 5B00     		lsls	r3, r3, #1
 20319 0056 0233     		adds	r3, r3, #2
 20320 0058 07F10C02 		add	r2, r7, #12
 20321 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20322 005e 07F11001 		add	r1, r7, #16
 20323 0062 0B44     		add	r3, r3, r1
 20324 0064 03F80C2C 		strb	r2, [r3, #-12]
3025:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20325              		.loc 1 3025 0
 20326 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20327 006a 5B00     		lsls	r3, r3, #1
 20328 006c 5A1C     		adds	r2, r3, #1
 20329 006e 07F10C03 		add	r3, r7, #12
 20330 0072 0133     		adds	r3, r3, #1
 20331 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20332 0076 07F11003 		add	r3, r7, #16
 20333 007a 1344     		add	r3, r3, r2
 20334 007c 0A46     		mov	r2, r1
 20335 007e 03F80C2C 		strb	r2, [r3, #-12]
 20336              	.L823:
3022:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 20337              		.loc 1 3022 0 discriminator 1
 20338 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20339 0084 5A1E     		subs	r2, r3, #1
 20340 0086 FA73     		strb	r2, [r7, #15]
 20341 0088 002B     		cmp	r3, #0
 20342 008a C1D1     		bne	.L824
3026:..\src/command_processing.c ****     }
3027:..\src/command_processing.c **** 
3028:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3029:..\src/command_processing.c **** 
3030:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20343              		.loc 1 3030 0
 20344 008c 3B1D     		adds	r3, r7, #4
 20345 008e 0721     		movs	r1, #7
 20346 0090 1846     		mov	r0, r3
 20347 0092 FFF7FEFF 		bl	LCRChecksum
 20348 0096 0346     		mov	r3, r0
 20349 0098 FB72     		strb	r3, [r7, #11]
3031:..\src/command_processing.c **** 
3032:..\src/command_processing.c ****     commWrite(packet_data, 8);
 20350              		.loc 1 3032 0
 20351 009a 3B1D     		adds	r3, r7, #4
 20352 009c 0821     		movs	r1, #8
 20353 009e 1846     		mov	r0, r3
 20354 00a0 FFF7FEFF 		bl	commWrite
3033:..\src/command_processing.c ****    
3034:..\src/command_processing.c **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 451


 20355              		.loc 1 3034 0
 20356 00a4 00BF     		nop
 20357 00a6 1437     		adds	r7, r7, #20
 20358              		.cfi_def_cfa_offset 12
 20359 00a8 BD46     		mov	sp, r7
 20360              		.cfi_def_cfa_register 13
 20361              		@ sp needed
 20362 00aa 90BD     		pop	{r4, r7, pc}
 20363              	.L826:
 20364              		.align	2
 20365              	.L825:
 20366 00ac 00000000 		.word	g_mem
 20367 00b0 00000000 		.word	g_measOld
 20368              		.cfi_endproc
 20369              	.LFE88:
 20370              		.size	cmd_get_measurements, .-cmd_get_measurements
 20371              		.section	.text.cmd_get_velocities,"ax",%progbits
 20372              		.align	2
 20373              		.global	cmd_get_velocities
 20374              		.thumb
 20375              		.thumb_func
 20376              		.type	cmd_get_velocities, %function
 20377              	cmd_get_velocities:
 20378              	.LFB89:
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** void cmd_get_velocities(){
 20379              		.loc 1 3036 0
 20380              		.cfi_startproc
 20381              		@ args = 0, pretend = 0, frame = 16
 20382              		@ frame_needed = 1, uses_anonymous_args = 0
 20383 0000 90B5     		push	{r4, r7, lr}
 20384              		.cfi_def_cfa_offset 12
 20385              		.cfi_offset 4, -12
 20386              		.cfi_offset 7, -8
 20387              		.cfi_offset 14, -4
 20388 0002 85B0     		sub	sp, sp, #20
 20389              		.cfi_def_cfa_offset 32
 20390 0004 00AF     		add	r7, sp, #0
 20391              		.cfi_def_cfa_register 7
3037:..\src/command_processing.c ****  
3038:..\src/command_processing.c ****     uint8 CYDATA index;
3039:..\src/command_processing.c ****     int16 aux_int16;
3040:..\src/command_processing.c ****    
3041:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3042:..\src/command_processing.c ****     
3043:..\src/command_processing.c ****     uint8 packet_data[8]; 
3044:..\src/command_processing.c ****     
3045:..\src/command_processing.c ****     //Header package
3046:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 20392              		.loc 1 3046 0
 20393 0006 8923     		movs	r3, #137
 20394 0008 3B71     		strb	r3, [r7, #4]
3047:..\src/command_processing.c ****     
3048:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20395              		.loc 1 3048 0
 20396 000a 0323     		movs	r3, #3
 20397 000c FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 452


 20398 000e 3AE0     		b	.L828
 20399              	.L829:
3049:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20400              		.loc 1 3049 0
 20401 0010 274B     		ldr	r3, .L830
 20402 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20403 0016 1A46     		mov	r2, r3
 20404 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20405 001a 2648     		ldr	r0, .L830+4
 20406 001c 1346     		mov	r3, r2
 20407 001e 5B00     		lsls	r3, r3, #1
 20408 0020 1344     		add	r3, r3, r2
 20409 0022 9B00     		lsls	r3, r3, #2
 20410 0024 1344     		add	r3, r3, r2
 20411 0026 0B44     		add	r3, r3, r1
 20412 0028 0633     		adds	r3, r3, #6
 20413 002a 9B00     		lsls	r3, r3, #2
 20414 002c 0344     		add	r3, r3, r0
 20415 002e 5A68     		ldr	r2, [r3, #4]
 20416 0030 1F4B     		ldr	r3, .L830
 20417 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20418 0036 1C46     		mov	r4, r3
 20419 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20420 003a 1D48     		ldr	r0, .L830
 20421 003c 2346     		mov	r3, r4
 20422 003e 5B00     		lsls	r3, r3, #1
 20423 0040 2344     		add	r3, r3, r4
 20424 0042 1B01     		lsls	r3, r3, #4
 20425 0044 0344     		add	r3, r3, r0
 20426 0046 0B44     		add	r3, r3, r1
 20427 0048 03F29513 		addw	r3, r3, #405
 20428 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20429 004e 42FA03F3 		asr	r3, r2, r3
 20430 0052 1BB2     		sxth	r3, r3
 20431 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3050:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20432              		.loc 1 3050 0
 20433 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20434 0058 5B00     		lsls	r3, r3, #1
 20435 005a 0233     		adds	r3, r3, #2
 20436 005c 07F10C02 		add	r2, r7, #12
 20437 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20438 0062 07F11001 		add	r1, r7, #16
 20439 0066 0B44     		add	r3, r3, r1
 20440 0068 03F80C2C 		strb	r2, [r3, #-12]
3051:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20441              		.loc 1 3051 0
 20442 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20443 006e 5B00     		lsls	r3, r3, #1
 20444 0070 5A1C     		adds	r2, r3, #1
 20445 0072 07F10C03 		add	r3, r7, #12
 20446 0076 0133     		adds	r3, r3, #1
 20447 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20448 007a 07F11003 		add	r3, r7, #16
 20449 007e 1344     		add	r3, r3, r2
 20450 0080 0A46     		mov	r2, r1
 20451 0082 03F80C2C 		strb	r2, [r3, #-12]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 453


 20452              	.L828:
3048:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 20453              		.loc 1 3048 0 discriminator 1
 20454 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20455 0088 5A1E     		subs	r2, r3, #1
 20456 008a FA73     		strb	r2, [r7, #15]
 20457 008c 002B     		cmp	r3, #0
 20458 008e BFD1     		bne	.L829
3052:..\src/command_processing.c ****     }
3053:..\src/command_processing.c ****             
3054:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3055:..\src/command_processing.c **** 
3056:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20459              		.loc 1 3056 0
 20460 0090 3B1D     		adds	r3, r7, #4
 20461 0092 0721     		movs	r1, #7
 20462 0094 1846     		mov	r0, r3
 20463 0096 FFF7FEFF 		bl	LCRChecksum
 20464 009a 0346     		mov	r3, r0
 20465 009c FB72     		strb	r3, [r7, #11]
3057:..\src/command_processing.c **** 
3058:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20466              		.loc 1 3058 0
 20467 009e 3B1D     		adds	r3, r7, #4
 20468 00a0 0821     		movs	r1, #8
 20469 00a2 1846     		mov	r0, r3
 20470 00a4 FFF7FEFF 		bl	commWrite
3059:..\src/command_processing.c **** }
 20471              		.loc 1 3059 0
 20472 00a8 00BF     		nop
 20473 00aa 1437     		adds	r7, r7, #20
 20474              		.cfi_def_cfa_offset 12
 20475 00ac BD46     		mov	sp, r7
 20476              		.cfi_def_cfa_register 13
 20477              		@ sp needed
 20478 00ae 90BD     		pop	{r4, r7, pc}
 20479              	.L831:
 20480              		.align	2
 20481              	.L830:
 20482 00b0 00000000 		.word	g_mem
 20483 00b4 00000000 		.word	g_measOld
 20484              		.cfi_endproc
 20485              	.LFE89:
 20486              		.size	cmd_get_velocities, .-cmd_get_velocities
 20487              		.section	.text.cmd_get_accelerations,"ax",%progbits
 20488              		.align	2
 20489              		.global	cmd_get_accelerations
 20490              		.thumb
 20491              		.thumb_func
 20492              		.type	cmd_get_accelerations, %function
 20493              	cmd_get_accelerations:
 20494              	.LFB90:
3060:..\src/command_processing.c **** 
3061:..\src/command_processing.c **** void cmd_get_accelerations(){
 20495              		.loc 1 3061 0
 20496              		.cfi_startproc
 20497              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 454


 20498              		@ frame_needed = 1, uses_anonymous_args = 0
 20499 0000 90B5     		push	{r4, r7, lr}
 20500              		.cfi_def_cfa_offset 12
 20501              		.cfi_offset 4, -12
 20502              		.cfi_offset 7, -8
 20503              		.cfi_offset 14, -4
 20504 0002 85B0     		sub	sp, sp, #20
 20505              		.cfi_def_cfa_offset 32
 20506 0004 00AF     		add	r7, sp, #0
 20507              		.cfi_def_cfa_register 7
3062:..\src/command_processing.c ****  
3063:..\src/command_processing.c ****     uint8 CYDATA index;
3064:..\src/command_processing.c ****     int16 aux_int16;
3065:..\src/command_processing.c ****     
3066:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3067:..\src/command_processing.c ****     
3068:..\src/command_processing.c ****     uint8 packet_data[8]; 
3069:..\src/command_processing.c ****     
3070:..\src/command_processing.c ****     //Header package
3071:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 20508              		.loc 1 3071 0
 20509 0006 8B23     		movs	r3, #139
 20510 0008 3B71     		strb	r3, [r7, #4]
3072:..\src/command_processing.c ****     
3073:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 20511              		.loc 1 3073 0
 20512 000a 0323     		movs	r3, #3
 20513 000c FB73     		strb	r3, [r7, #15]
 20514 000e 39E0     		b	.L833
 20515              	.L834:
3074:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20516              		.loc 1 3074 0
 20517 0010 274B     		ldr	r3, .L835
 20518 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20519 0016 1A46     		mov	r2, r3
 20520 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20521 001a 2648     		ldr	r0, .L835+4
 20522 001c 1346     		mov	r3, r2
 20523 001e 5B00     		lsls	r3, r3, #1
 20524 0020 1344     		add	r3, r3, r2
 20525 0022 9B00     		lsls	r3, r3, #2
 20526 0024 1344     		add	r3, r3, r2
 20527 0026 0B44     		add	r3, r3, r1
 20528 0028 0A33     		adds	r3, r3, #10
 20529 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 20530 002e 204B     		ldr	r3, .L835
 20531 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20532 0034 1C46     		mov	r4, r3
 20533 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 20534 0038 1D48     		ldr	r0, .L835
 20535 003a 2346     		mov	r3, r4
 20536 003c 5B00     		lsls	r3, r3, #1
 20537 003e 2344     		add	r3, r3, r4
 20538 0040 1B01     		lsls	r3, r3, #4
 20539 0042 0344     		add	r3, r3, r0
 20540 0044 0B44     		add	r3, r3, r1
 20541 0046 03F29513 		addw	r3, r3, #405
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 455


 20542 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20543 004c 42FA03F3 		asr	r3, r2, r3
 20544 0050 1BB2     		sxth	r3, r3
 20545 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3075:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 20546              		.loc 1 3075 0
 20547 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20548 0056 5B00     		lsls	r3, r3, #1
 20549 0058 0233     		adds	r3, r3, #2
 20550 005a 07F10C02 		add	r2, r7, #12
 20551 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 20552 0060 07F11001 		add	r1, r7, #16
 20553 0064 0B44     		add	r3, r3, r1
 20554 0066 03F80C2C 		strb	r2, [r3, #-12]
3076:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 20555              		.loc 1 3076 0
 20556 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20557 006c 5B00     		lsls	r3, r3, #1
 20558 006e 5A1C     		adds	r2, r3, #1
 20559 0070 07F10C03 		add	r3, r7, #12
 20560 0074 0133     		adds	r3, r3, #1
 20561 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 20562 0078 07F11003 		add	r3, r7, #16
 20563 007c 1344     		add	r3, r3, r2
 20564 007e 0A46     		mov	r2, r1
 20565 0080 03F80C2C 		strb	r2, [r3, #-12]
 20566              	.L833:
3073:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 20567              		.loc 1 3073 0 discriminator 1
 20568 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 20569 0086 5A1E     		subs	r2, r3, #1
 20570 0088 FA73     		strb	r2, [r7, #15]
 20571 008a 002B     		cmp	r3, #0
 20572 008c C0D1     		bne	.L834
3077:..\src/command_processing.c ****     }
3078:..\src/command_processing.c ****     
3079:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3080:..\src/command_processing.c **** 
3081:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 20573              		.loc 1 3081 0
 20574 008e 3B1D     		adds	r3, r7, #4
 20575 0090 0721     		movs	r1, #7
 20576 0092 1846     		mov	r0, r3
 20577 0094 FFF7FEFF 		bl	LCRChecksum
 20578 0098 0346     		mov	r3, r0
 20579 009a FB72     		strb	r3, [r7, #11]
3082:..\src/command_processing.c **** 
3083:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 20580              		.loc 1 3083 0
 20581 009c 3B1D     		adds	r3, r7, #4
 20582 009e 0821     		movs	r1, #8
 20583 00a0 1846     		mov	r0, r3
 20584 00a2 FFF7FEFF 		bl	commWrite
3084:..\src/command_processing.c **** }
 20585              		.loc 1 3084 0
 20586 00a6 00BF     		nop
 20587 00a8 1437     		adds	r7, r7, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 456


 20588              		.cfi_def_cfa_offset 12
 20589 00aa BD46     		mov	sp, r7
 20590              		.cfi_def_cfa_register 13
 20591              		@ sp needed
 20592 00ac 90BD     		pop	{r4, r7, pc}
 20593              	.L836:
 20594 00ae 00BF     		.align	2
 20595              	.L835:
 20596 00b0 00000000 		.word	g_mem
 20597 00b4 00000000 		.word	g_measOld
 20598              		.cfi_endproc
 20599              	.LFE90:
 20600              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 20601              		.section	.text.cmd_set_inputs,"ax",%progbits
 20602              		.align	2
 20603              		.global	cmd_set_inputs
 20604              		.thumb
 20605              		.thumb_func
 20606              		.type	cmd_set_inputs, %function
 20607              	cmd_set_inputs:
 20608              	.LFB91:
3085:..\src/command_processing.c **** 
3086:..\src/command_processing.c **** void cmd_set_inputs(){
 20609              		.loc 1 3086 0
 20610              		.cfi_startproc
 20611              		@ args = 0, pretend = 0, frame = 8
 20612              		@ frame_needed = 1, uses_anonymous_args = 0
 20613              		@ link register save eliminated.
 20614 0000 90B4     		push	{r4, r7}
 20615              		.cfi_def_cfa_offset 8
 20616              		.cfi_offset 4, -8
 20617              		.cfi_offset 7, -4
 20618 0002 82B0     		sub	sp, sp, #8
 20619              		.cfi_def_cfa_offset 16
 20620 0004 00AF     		add	r7, sp, #0
 20621              		.cfi_def_cfa_register 7
3087:..\src/command_processing.c ****     
3088:..\src/command_processing.c ****     // Store position setted in right variables
3089:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3090:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3091:..\src/command_processing.c ****     
3092:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 20622              		.loc 1 3092 0
 20623 0006 894B     		ldr	r3, .L851
 20624 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 20625 000a 1B02     		lsls	r3, r3, #8
 20626 000c 1AB2     		sxth	r2, r3
 20627 000e 874B     		ldr	r3, .L851
 20628 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 20629 0012 1BB2     		sxth	r3, r3
 20630 0014 1343     		orrs	r3, r3, r2
 20631 0016 1BB2     		sxth	r3, r3
 20632 0018 3B80     		strh	r3, [r7]	@ movhi
3093:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 20633              		.loc 1 3093 0
 20634 001a 844B     		ldr	r3, .L851
 20635 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 457


 20636 001e 1B02     		lsls	r3, r3, #8
 20637 0020 1AB2     		sxth	r2, r3
 20638 0022 824B     		ldr	r3, .L851
 20639 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 20640 0026 1BB2     		sxth	r3, r3
 20641 0028 1343     		orrs	r3, r3, r2
 20642 002a 1BB2     		sxth	r3, r3
 20643 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 20644              	.LBB22:
3094:..\src/command_processing.c ****     
3095:..\src/command_processing.c ****     // Check if last command received was the same as this 
3096:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3097:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 20645              		.loc 1 3097 0
 20646 002e 0023     		movs	r3, #0
 20647 0030 FB71     		strb	r3, [r7, #7]
 20648 0032 1DE0     		b	.L838
 20649              	.L840:
3098:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20650              		.loc 1 3098 0
 20651 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20652 0036 7E4A     		ldr	r2, .L851+4
 20653 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 20654 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20655 003e 5B00     		lsls	r3, r3, #1
 20656 0040 07F10801 		add	r1, r7, #8
 20657 0044 0B44     		add	r3, r3, r1
 20658 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 20659 004a 9A42     		cmp	r2, r3
 20660 004c 02D0     		beq	.L839
3099:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 20661              		.loc 1 3099 0
 20662 004e 794B     		ldr	r3, .L851+8
 20663 0050 0122     		movs	r2, #1
 20664 0052 1A70     		strb	r2, [r3]
 20665              	.L839:
3100:..\src/command_processing.c ****        }
3101:..\src/command_processing.c ****         // Update last command
3102:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 20666              		.loc 1 3102 0 discriminator 2
 20667 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20668 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20669 0058 5B00     		lsls	r3, r3, #1
 20670 005a 07F10801 		add	r1, r7, #8
 20671 005e 0B44     		add	r3, r3, r1
 20672 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 20673 0064 724B     		ldr	r3, .L851+4
 20674 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3097:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20675              		.loc 1 3097 0 discriminator 2
 20676 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20677 006c 0133     		adds	r3, r3, #1
 20678 006e FB71     		strb	r3, [r7, #7]
 20679              	.L838:
3097:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 20680              		.loc 1 3097 0 is_stmt 0 discriminator 1
 20681 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 458


 20682 0072 714B     		ldr	r3, .L851+12
 20683 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20684 0078 0133     		adds	r3, r3, #1
 20685 007a 9A42     		cmp	r2, r3
 20686 007c DADB     		blt	.L840
 20687              	.LBE22:
3103:..\src/command_processing.c ****     }
3104:..\src/command_processing.c ****     
3105:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3106:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 20688              		.loc 1 3106 0 is_stmt 1
 20689 007e 6D4B     		ldr	r3, .L851+8
 20690 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20691 0082 002B     		cmp	r3, #0
 20692 0084 00F0CC80 		beq	.L850
 20693              	.LBB23:
3107:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 20694              		.loc 1 3107 0
 20695 0088 0023     		movs	r3, #0
 20696 008a BB71     		strb	r3, [r7, #6]
 20697 008c C4E0     		b	.L842
 20698              	.L849:
3108:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20699              		.loc 1 3108 0
 20700 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20701 0090 6A49     		ldr	r1, .L851+16
 20702 0092 1346     		mov	r3, r2
 20703 0094 DB00     		lsls	r3, r3, #3
 20704 0096 9B1A     		subs	r3, r3, r2
 20705 0098 1B01     		lsls	r3, r3, #4
 20706 009a 0B44     		add	r3, r3, r1
 20707 009c 03F20F13 		addw	r3, r3, #271
 20708 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20709 00a2 022B     		cmp	r3, #2
 20710 00a4 0ED1     		bne	.L843
3109:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 20711              		.loc 1 3109 0
 20712 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20713 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20714 00aa 5B00     		lsls	r3, r3, #1
 20715 00ac 07F10801 		add	r1, r7, #8
 20716 00b0 0B44     		add	r3, r3, r1
 20717 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 20718 00b6 1846     		mov	r0, r3
 20719 00b8 6149     		ldr	r1, .L851+20
 20720 00ba 1301     		lsls	r3, r2, #4
 20721 00bc 0B44     		add	r3, r3, r1
 20722 00be 0433     		adds	r3, r3, #4
 20723 00c0 1860     		str	r0, [r3]
 20724 00c2 47E0     		b	.L844
 20725              	.L843:
3110:..\src/command_processing.c ****             }
3111:..\src/command_processing.c ****             else {
3112:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 20726              		.loc 1 3112 0
 20727 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20728 00c6 5D49     		ldr	r1, .L851+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 459


 20729 00c8 1346     		mov	r3, r2
 20730 00ca DB00     		lsls	r3, r3, #3
 20731 00cc 9B1A     		subs	r3, r3, r2
 20732 00ce 1B01     		lsls	r3, r3, #4
 20733 00d0 0B44     		add	r3, r3, r1
 20734 00d2 03F20F13 		addw	r3, r3, #271
 20735 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20736 00d8 012B     		cmp	r3, #1
 20737 00da 0ED1     		bne	.L845
3113:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 20738              		.loc 1 3113 0
 20739 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20740 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20741 00e0 5B00     		lsls	r3, r3, #1
 20742 00e2 07F10801 		add	r1, r7, #8
 20743 00e6 0B44     		add	r3, r3, r1
 20744 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 20745 00ec 1846     		mov	r0, r3
 20746 00ee 5449     		ldr	r1, .L851+20
 20747 00f0 1301     		lsls	r3, r2, #4
 20748 00f2 0B44     		add	r3, r3, r1
 20749 00f4 0833     		adds	r3, r3, #8
 20750 00f6 1860     		str	r0, [r3]
 20751 00f8 2CE0     		b	.L844
 20752              	.L845:
3114:..\src/command_processing.c ****                 }
3115:..\src/command_processing.c ****                 else {
3116:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 20753              		.loc 1 3116 0
 20754 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20755 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20756 00fe 5B00     		lsls	r3, r3, #1
 20757 0100 07F10801 		add	r1, r7, #8
 20758 0104 0B44     		add	r3, r3, r1
 20759 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 20760 010a 1846     		mov	r0, r3
 20761 010c 4C49     		ldr	r1, .L851+20
 20762 010e 1301     		lsls	r3, r2, #4
 20763 0110 0B44     		add	r3, r3, r1
 20764 0112 1860     		str	r0, [r3]
3117:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 20765              		.loc 1 3117 0
 20766 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20767 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20768 0118 494A     		ldr	r2, .L851+20
 20769 011a 1B01     		lsls	r3, r3, #4
 20770 011c 1344     		add	r3, r3, r2
 20771 011e 1868     		ldr	r0, [r3]
 20772 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20773 0122 454C     		ldr	r4, .L851+12
 20774 0124 1346     		mov	r3, r2
 20775 0126 DB00     		lsls	r3, r3, #3
 20776 0128 9B1A     		subs	r3, r3, r2
 20777 012a 1B01     		lsls	r3, r3, #4
 20778 012c 2344     		add	r3, r3, r4
 20779 012e 03F58873 		add	r3, r3, #272
 20780 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 460


 20781 0134 1C46     		mov	r4, r3
 20782 0136 414A     		ldr	r2, .L851+16
 20783 0138 2346     		mov	r3, r4
 20784 013a 5B00     		lsls	r3, r3, #1
 20785 013c 2344     		add	r3, r3, r4
 20786 013e 1B01     		lsls	r3, r3, #4
 20787 0140 1344     		add	r3, r3, r2
 20788 0142 03F29513 		addw	r3, r3, #405
 20789 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20790 0148 00FA03F2 		lsl	r2, r0, r3
 20791 014c 3C48     		ldr	r0, .L851+20
 20792 014e 0B01     		lsls	r3, r1, #4
 20793 0150 0344     		add	r3, r3, r0
 20794 0152 1A60     		str	r2, [r3]
 20795              	.L844:
3118:..\src/command_processing.c ****                 }
3119:..\src/command_processing.c ****             }  
3120:..\src/command_processing.c ****                
3121:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3122:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
 20796              		.loc 1 3122 0
 20797 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20798 0156 3849     		ldr	r1, .L851+12
 20799 0158 1346     		mov	r3, r2
 20800 015a DB00     		lsls	r3, r3, #3
 20801 015c 9B1A     		subs	r3, r3, r2
 20802 015e 1B01     		lsls	r3, r3, #4
 20803 0160 0B44     		add	r3, r3, r1
 20804 0162 E333     		adds	r3, r3, #227
 20805 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20806 0166 002B     		cmp	r3, #0
 20807 0168 53D0     		beq	.L846
 20808              		.loc 1 3122 0 is_stmt 0 discriminator 1
 20809 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20810 016c 3349     		ldr	r1, .L851+16
 20811 016e 1346     		mov	r3, r2
 20812 0170 DB00     		lsls	r3, r3, #3
 20813 0172 9B1A     		subs	r3, r3, r2
 20814 0174 1B01     		lsls	r3, r3, #4
 20815 0176 0B44     		add	r3, r3, r1
 20816 0178 03F20F13 		addw	r3, r3, #271
 20817 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20818 017e 032B     		cmp	r3, #3
 20819 0180 0BD0     		beq	.L847
 20820              		.loc 1 3122 0 discriminator 2
 20821 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20822 0184 2D49     		ldr	r1, .L851+16
 20823 0186 1346     		mov	r3, r2
 20824 0188 DB00     		lsls	r3, r3, #3
 20825 018a 9B1A     		subs	r3, r3, r2
 20826 018c 1B01     		lsls	r3, r3, #4
 20827 018e 0B44     		add	r3, r3, r1
 20828 0190 03F20F13 		addw	r3, r3, #271
 20829 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20830 0196 002B     		cmp	r3, #0
 20831 0198 3BD1     		bne	.L846
 20832              	.L847:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 461


3123:..\src/command_processing.c ****                 
3124:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 20833              		.loc 1 3124 0 is_stmt 1
 20834 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20835 019c 284A     		ldr	r2, .L851+20
 20836 019e 1B01     		lsls	r3, r3, #4
 20837 01a0 1344     		add	r3, r3, r2
 20838 01a2 1968     		ldr	r1, [r3]
 20839 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20840 01a6 2448     		ldr	r0, .L851+12
 20841 01a8 1346     		mov	r3, r2
 20842 01aa DB00     		lsls	r3, r3, #3
 20843 01ac 9B1A     		subs	r3, r3, r2
 20844 01ae 1B01     		lsls	r3, r3, #4
 20845 01b0 0344     		add	r3, r3, r0
 20846 01b2 E433     		adds	r3, r3, #228
 20847 01b4 1B68     		ldr	r3, [r3]
 20848 01b6 9942     		cmp	r1, r3
 20849 01b8 0DDA     		bge	.L848
3125:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
 20850              		.loc 1 3125 0
 20851 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20852 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20853 01be 1E48     		ldr	r0, .L851+12
 20854 01c0 1346     		mov	r3, r2
 20855 01c2 DB00     		lsls	r3, r3, #3
 20856 01c4 9B1A     		subs	r3, r3, r2
 20857 01c6 1B01     		lsls	r3, r3, #4
 20858 01c8 0344     		add	r3, r3, r0
 20859 01ca E433     		adds	r3, r3, #228
 20860 01cc 1A68     		ldr	r2, [r3]
 20861 01ce 1C48     		ldr	r0, .L851+20
 20862 01d0 0B01     		lsls	r3, r1, #4
 20863 01d2 0344     		add	r3, r3, r0
 20864 01d4 1A60     		str	r2, [r3]
 20865              	.L848:
3126:..\src/command_processing.c **** 
3127:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 20866              		.loc 1 3127 0
 20867 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20868 01d8 194A     		ldr	r2, .L851+20
 20869 01da 1B01     		lsls	r3, r3, #4
 20870 01dc 1344     		add	r3, r3, r2
 20871 01de 1968     		ldr	r1, [r3]
 20872 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20873 01e2 1548     		ldr	r0, .L851+12
 20874 01e4 1346     		mov	r3, r2
 20875 01e6 DB00     		lsls	r3, r3, #3
 20876 01e8 9B1A     		subs	r3, r3, r2
 20877 01ea 1B01     		lsls	r3, r3, #4
 20878 01ec 0344     		add	r3, r3, r0
 20879 01ee E833     		adds	r3, r3, #232
 20880 01f0 1B68     		ldr	r3, [r3]
 20881 01f2 9942     		cmp	r1, r3
 20882 01f4 0DDD     		ble	.L846
3128:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 20883              		.loc 1 3128 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 462


 20884 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20885 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 20886 01fa 0F48     		ldr	r0, .L851+12
 20887 01fc 1346     		mov	r3, r2
 20888 01fe DB00     		lsls	r3, r3, #3
 20889 0200 9B1A     		subs	r3, r3, r2
 20890 0202 1B01     		lsls	r3, r3, #4
 20891 0204 0344     		add	r3, r3, r0
 20892 0206 E833     		adds	r3, r3, #232
 20893 0208 1A68     		ldr	r2, [r3]
 20894 020a 0D48     		ldr	r0, .L851+20
 20895 020c 0B01     		lsls	r3, r1, #4
 20896 020e 0344     		add	r3, r3, r0
 20897 0210 1A60     		str	r2, [r3]
 20898              	.L846:
3107:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20899              		.loc 1 3107 0 discriminator 2
 20900 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20901 0214 0133     		adds	r3, r3, #1
 20902 0216 BB71     		strb	r3, [r7, #6]
 20903              	.L842:
3107:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 20904              		.loc 1 3107 0 is_stmt 0 discriminator 1
 20905 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20906 021a 012B     		cmp	r3, #1
 20907 021c 7FF637AF 		bls	.L849
 20908              	.L850:
 20909              	.LBE23:
3129:..\src/command_processing.c ****             }
3130:..\src/command_processing.c ****         }  
3131:..\src/command_processing.c ****     }
3132:..\src/command_processing.c **** }
 20910              		.loc 1 3132 0 is_stmt 1
 20911 0220 00BF     		nop
 20912 0222 0837     		adds	r7, r7, #8
 20913              		.cfi_def_cfa_offset 8
 20914 0224 BD46     		mov	sp, r7
 20915              		.cfi_def_cfa_register 13
 20916              		@ sp needed
 20917 0226 90BC     		pop	{r4, r7}
 20918              		.cfi_restore 7
 20919              		.cfi_restore 4
 20920              		.cfi_def_cfa_offset 0
 20921 0228 7047     		bx	lr
 20922              	.L852:
 20923 022a 00BF     		.align	2
 20924              	.L851:
 20925 022c 00000000 		.word	g_rx
 20926 0230 00000000 		.word	last_aux_int16.11232
 20927 0234 00000000 		.word	change_ext_ref_flag
 20928 0238 00000000 		.word	c_mem
 20929 023c 00000000 		.word	g_mem
 20930 0240 00000000 		.word	g_refNew
 20931              		.cfi_endproc
 20932              	.LFE91:
 20933              		.size	cmd_set_inputs, .-cmd_set_inputs
 20934              		.section	.text.cmd_activate,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 463


 20935              		.align	2
 20936              		.global	cmd_activate
 20937              		.thumb
 20938              		.thumb_func
 20939              		.type	cmd_activate, %function
 20940              	cmd_activate:
 20941              	.LFB92:
3133:..\src/command_processing.c **** 
3134:..\src/command_processing.c **** void cmd_activate(){
 20942              		.loc 1 3134 0
 20943              		.cfi_startproc
 20944              		@ args = 0, pretend = 0, frame = 8
 20945              		@ frame_needed = 1, uses_anonymous_args = 0
 20946 0000 80B5     		push	{r7, lr}
 20947              		.cfi_def_cfa_offset 8
 20948              		.cfi_offset 7, -8
 20949              		.cfi_offset 14, -4
 20950 0002 82B0     		sub	sp, sp, #8
 20951              		.cfi_def_cfa_offset 16
 20952 0004 00AF     		add	r7, sp, #0
 20953              		.cfi_def_cfa_register 7
3135:..\src/command_processing.c ****     
3136:..\src/command_processing.c ****     // Store new value reads
3137:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 20954              		.loc 1 3137 0
 20955 0006 294B     		ldr	r3, .L860
 20956 0008 5B78     		ldrb	r3, [r3, #1]
 20957 000a FB71     		strb	r3, [r7, #7]
3138:..\src/command_processing.c ****     
3139:..\src/command_processing.c ****     // Check type of control mode enabled
3140:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 20958              		.loc 1 3140 0
 20959 000c 284B     		ldr	r3, .L860+4
 20960 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 20961 0012 002B     		cmp	r3, #0
 20962 0014 04D0     		beq	.L854
 20963              		.loc 1 3140 0 is_stmt 0 discriminator 1
 20964 0016 264B     		ldr	r3, .L860+4
 20965 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 20966 001c 032B     		cmp	r3, #3
 20967 001e 0BD1     		bne	.L855
 20968              	.L854:
3141:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 20969              		.loc 1 3141 0 is_stmt 1
 20970 0020 234B     		ldr	r3, .L860+4
 20971 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 20972 0026 1946     		mov	r1, r3
 20973 0028 224A     		ldr	r2, .L860+8
 20974 002a 3423     		movs	r3, #52
 20975 002c 03FB01F3 		mul	r3, r3, r1
 20976 0030 1344     		add	r3, r3, r2
 20977 0032 1B68     		ldr	r3, [r3]
 20978 0034 204A     		ldr	r2, .L860+12
 20979 0036 1360     		str	r3, [r2]
 20980              	.L855:
3142:..\src/command_processing.c ****     }
3143:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 464


 20981              		.loc 1 3143 0
 20982 0038 FB79     		ldrb	r3, [r7, #7]
 20983 003a 03F00103 		and	r3, r3, #1
 20984 003e DAB2     		uxtb	r2, r3
 20985 0040 1D4B     		ldr	r3, .L860+12
 20986 0042 1A73     		strb	r2, [r3, #12]
3144:..\src/command_processing.c ****     // Activate/Deactivate motor
3145:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 20987              		.loc 1 3145 0
 20988 0044 1C4B     		ldr	r3, .L860+12
 20989 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 20990 0048 1946     		mov	r1, r3
 20991 004a 0020     		movs	r0, #0
 20992 004c FFF7FEFF 		bl	enable_motor
3146:..\src/command_processing.c ****     
3147:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 20993              		.loc 1 3147 0
 20994 0050 174B     		ldr	r3, .L860+4
 20995 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 20996 0056 012B     		cmp	r3, #1
 20997 0058 23D1     		bne	.L859
3148:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 20998              		.loc 1 3148 0
 20999 005a 154B     		ldr	r3, .L860+4
 21000 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21001 0060 002B     		cmp	r3, #0
 21002 0062 04D0     		beq	.L857
 21003              		.loc 1 3148 0 is_stmt 0 discriminator 1
 21004 0064 124B     		ldr	r3, .L860+4
 21005 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21006 006a 032B     		cmp	r3, #3
 21007 006c 0BD1     		bne	.L858
 21008              	.L857:
3149:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 21009              		.loc 1 3149 0 is_stmt 1
 21010 006e 104B     		ldr	r3, .L860+4
 21011 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21012 0074 1946     		mov	r1, r3
 21013 0076 0F4A     		ldr	r2, .L860+8
 21014 0078 3423     		movs	r3, #52
 21015 007a 03FB01F3 		mul	r3, r3, r1
 21016 007e 1344     		add	r3, r3, r2
 21017 0080 1B68     		ldr	r3, [r3]
 21018 0082 0D4A     		ldr	r2, .L860+12
 21019 0084 1361     		str	r3, [r2, #16]
 21020              	.L858:
3150:..\src/command_processing.c ****         }
3151:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 21021              		.loc 1 3151 0
 21022 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21023 0088 5B08     		lsrs	r3, r3, #1
 21024 008a DBB2     		uxtb	r3, r3
 21025 008c 03F00103 		and	r3, r3, #1
 21026 0090 DAB2     		uxtb	r2, r3
 21027 0092 094B     		ldr	r3, .L860+12
 21028 0094 1A77     		strb	r2, [r3, #28]
3152:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 465


 21029              		.loc 1 3152 0
 21030 0096 084B     		ldr	r3, .L860+12
 21031 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21032 009a 1946     		mov	r1, r3
 21033 009c 0120     		movs	r0, #1
 21034 009e FFF7FEFF 		bl	enable_motor
 21035              	.L859:
3153:..\src/command_processing.c ****     }
3154:..\src/command_processing.c ****     
3155:..\src/command_processing.c **** }
 21036              		.loc 1 3155 0
 21037 00a2 00BF     		nop
 21038 00a4 0837     		adds	r7, r7, #8
 21039              		.cfi_def_cfa_offset 8
 21040 00a6 BD46     		mov	sp, r7
 21041              		.cfi_def_cfa_register 13
 21042              		@ sp needed
 21043 00a8 80BD     		pop	{r7, pc}
 21044              	.L861:
 21045 00aa 00BF     		.align	2
 21046              	.L860:
 21047 00ac 00000000 		.word	g_rx
 21048 00b0 00000000 		.word	g_mem
 21049 00b4 00000000 		.word	g_meas
 21050 00b8 00000000 		.word	g_refNew
 21051              		.cfi_endproc
 21052              	.LFE92:
 21053              		.size	cmd_activate, .-cmd_activate
 21054              		.section	.text.cmd_get_activate,"ax",%progbits
 21055              		.align	2
 21056              		.global	cmd_get_activate
 21057              		.thumb
 21058              		.thumb_func
 21059              		.type	cmd_get_activate, %function
 21060              	cmd_get_activate:
 21061              	.LFB93:
3156:..\src/command_processing.c **** 
3157:..\src/command_processing.c **** void cmd_get_activate(){
 21062              		.loc 1 3157 0
 21063              		.cfi_startproc
 21064              		@ args = 0, pretend = 0, frame = 8
 21065              		@ frame_needed = 1, uses_anonymous_args = 0
 21066 0000 80B5     		push	{r7, lr}
 21067              		.cfi_def_cfa_offset 8
 21068              		.cfi_offset 7, -8
 21069              		.cfi_offset 14, -4
 21070 0002 82B0     		sub	sp, sp, #8
 21071              		.cfi_def_cfa_offset 16
 21072 0004 00AF     		add	r7, sp, #0
 21073              		.cfi_def_cfa_register 7
3158:..\src/command_processing.c ****     
3159:..\src/command_processing.c ****     uint8 packet_data[3];
3160:..\src/command_processing.c **** 
3161:..\src/command_processing.c ****     // Header        
3162:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 21074              		.loc 1 3162 0
 21075 0006 8123     		movs	r3, #129
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 466


 21076 0008 3B71     		strb	r3, [r7, #4]
3163:..\src/command_processing.c ****     
3164:..\src/command_processing.c ****     // Fill payload
3165:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21077              		.loc 1 3165 0
 21078 000a 124B     		ldr	r3, .L865
 21079 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21080 0010 012B     		cmp	r3, #1
 21081 0012 0BD1     		bne	.L863
3166:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 21082              		.loc 1 3166 0
 21083 0014 104B     		ldr	r3, .L865+4
 21084 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21085 0018 5B00     		lsls	r3, r3, #1
 21086 001a 5AB2     		sxtb	r2, r3
 21087 001c 0E4B     		ldr	r3, .L865+4
 21088 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21089 0020 5BB2     		sxtb	r3, r3
 21090 0022 1343     		orrs	r3, r3, r2
 21091 0024 5BB2     		sxtb	r3, r3
 21092 0026 DBB2     		uxtb	r3, r3
 21093 0028 7B71     		strb	r3, [r7, #5]
 21094 002a 02E0     		b	.L864
 21095              	.L863:
3167:..\src/command_processing.c ****     } 
3168:..\src/command_processing.c ****     else {
3169:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 21096              		.loc 1 3169 0
 21097 002c 0A4B     		ldr	r3, .L865+4
 21098 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21099 0030 7B71     		strb	r3, [r7, #5]
 21100              	.L864:
3170:..\src/command_processing.c ****     }
3171:..\src/command_processing.c ****     
3172:..\src/command_processing.c ****     // Calculate checksum
3173:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 21101              		.loc 1 3173 0
 21102 0032 3B1D     		adds	r3, r7, #4
 21103 0034 0221     		movs	r1, #2
 21104 0036 1846     		mov	r0, r3
 21105 0038 FFF7FEFF 		bl	LCRChecksum
 21106 003c 0346     		mov	r3, r0
 21107 003e BB71     		strb	r3, [r7, #6]
3174:..\src/command_processing.c ****     
3175:..\src/command_processing.c ****     // Send package to UART
3176:..\src/command_processing.c ****     commWrite(packet_data, 3);
 21108              		.loc 1 3176 0
 21109 0040 3B1D     		adds	r3, r7, #4
 21110 0042 0321     		movs	r1, #3
 21111 0044 1846     		mov	r0, r3
 21112 0046 FFF7FEFF 		bl	commWrite
3177:..\src/command_processing.c **** 
3178:..\src/command_processing.c **** }
 21113              		.loc 1 3178 0
 21114 004a 00BF     		nop
 21115 004c 0837     		adds	r7, r7, #8
 21116              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 467


 21117 004e BD46     		mov	sp, r7
 21118              		.cfi_def_cfa_register 13
 21119              		@ sp needed
 21120 0050 80BD     		pop	{r7, pc}
 21121              	.L866:
 21122 0052 00BF     		.align	2
 21123              	.L865:
 21124 0054 00000000 		.word	g_mem
 21125 0058 00000000 		.word	g_ref
 21126              		.cfi_endproc
 21127              	.LFE93:
 21128              		.size	cmd_get_activate, .-cmd_get_activate
 21129              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 21130              		.align	2
 21131              		.global	cmd_get_curr_and_meas
 21132              		.thumb
 21133              		.thumb_func
 21134              		.type	cmd_get_curr_and_meas, %function
 21135              	cmd_get_curr_and_meas:
 21136              	.LFB94:
3179:..\src/command_processing.c **** 
3180:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 21137              		.loc 1 3180 0
 21138              		.cfi_startproc
 21139              		@ args = 0, pretend = 0, frame = 16
 21140              		@ frame_needed = 1, uses_anonymous_args = 0
 21141 0000 90B5     		push	{r4, r7, lr}
 21142              		.cfi_def_cfa_offset 12
 21143              		.cfi_offset 4, -12
 21144              		.cfi_offset 7, -8
 21145              		.cfi_offset 14, -4
 21146 0002 85B0     		sub	sp, sp, #20
 21147              		.cfi_def_cfa_offset 32
 21148 0004 00AF     		add	r7, sp, #0
 21149              		.cfi_def_cfa_register 7
3181:..\src/command_processing.c ****     
3182:..\src/command_processing.c ****     uint8 CYDATA index;
3183:..\src/command_processing.c ****     int16 aux_int16;
3184:..\src/command_processing.c ****    
3185:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3186:..\src/command_processing.c ****     
3187:..\src/command_processing.c ****     uint8 packet_data[12]; 
3188:..\src/command_processing.c **** 
3189:..\src/command_processing.c ****     //Header package
3190:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 21150              		.loc 1 3190 0
 21151 0006 8623     		movs	r3, #134
 21152 0008 3B70     		strb	r3, [r7]
3191:..\src/command_processing.c **** 
3192:..\src/command_processing.c ****     // Currents
3193:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 21153              		.loc 1 3193 0
 21154 000a 484B     		ldr	r3, .L872
 21155 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21156 0010 1946     		mov	r1, r3
 21157 0012 474A     		ldr	r2, .L872+4
 21158 0014 3423     		movs	r3, #52
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 468


 21159 0016 03FB01F3 		mul	r3, r3, r1
 21160 001a 1344     		add	r3, r3, r2
 21161 001c 0C33     		adds	r3, r3, #12
 21162 001e 1B68     		ldr	r3, [r3]
 21163 0020 1BB2     		sxth	r3, r3
 21164 0022 BB81     		strh	r3, [r7, #12]	@ movhi
3194:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21165              		.loc 1 3194 0
 21166 0024 07F10C03 		add	r3, r7, #12
 21167 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21168 002a BB70     		strb	r3, [r7, #2]
3195:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21169              		.loc 1 3195 0
 21170 002c 07F10C03 		add	r3, r7, #12
 21171 0030 0133     		adds	r3, r3, #1
 21172 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21173 0034 7B70     		strb	r3, [r7, #1]
3196:..\src/command_processing.c ****     
3197:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21174              		.loc 1 3197 0
 21175 0036 3F4B     		ldr	r3, .L872+8
 21176 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21177 003c 012B     		cmp	r3, #1
 21178 003e 0DD1     		bne	.L868
3198:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21179              		.loc 1 3198 0
 21180 0040 3A4B     		ldr	r3, .L872
 21181 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21182 0046 1946     		mov	r1, r3
 21183 0048 394A     		ldr	r2, .L872+4
 21184 004a 3423     		movs	r3, #52
 21185 004c 03FB01F3 		mul	r3, r3, r1
 21186 0050 1344     		add	r3, r3, r2
 21187 0052 0C33     		adds	r3, r3, #12
 21188 0054 1B68     		ldr	r3, [r3]
 21189 0056 1BB2     		sxth	r3, r3
 21190 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 21191 005a 0CE0     		b	.L869
 21192              	.L868:
3199:..\src/command_processing.c ****     }
3200:..\src/command_processing.c ****     else {
3201:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21193              		.loc 1 3201 0
 21194 005c 334B     		ldr	r3, .L872
 21195 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21196 0062 1946     		mov	r1, r3
 21197 0064 324A     		ldr	r2, .L872+4
 21198 0066 3423     		movs	r3, #52
 21199 0068 03FB01F3 		mul	r3, r3, r1
 21200 006c 1344     		add	r3, r3, r2
 21201 006e 1033     		adds	r3, r3, #16
 21202 0070 1B68     		ldr	r3, [r3]
 21203 0072 1BB2     		sxth	r3, r3
 21204 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 21205              	.L869:
3202:..\src/command_processing.c ****     }
3203:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 469


 21206              		.loc 1 3203 0
 21207 0076 07F10C03 		add	r3, r7, #12
 21208 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21209 007c 3B71     		strb	r3, [r7, #4]
3204:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21210              		.loc 1 3204 0
 21211 007e 07F10C03 		add	r3, r7, #12
 21212 0082 0133     		adds	r3, r3, #1
 21213 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21214 0086 FB70     		strb	r3, [r7, #3]
3205:..\src/command_processing.c **** 
3206:..\src/command_processing.c ****     // Positions
3207:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21215              		.loc 1 3207 0
 21216 0088 0323     		movs	r3, #3
 21217 008a FB73     		strb	r3, [r7, #15]
 21218 008c 38E0     		b	.L870
 21219              	.L871:
3208:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21220              		.loc 1 3208 0
 21221 008e 274B     		ldr	r3, .L872
 21222 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21223 0094 1A46     		mov	r2, r3
 21224 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21225 0098 2548     		ldr	r0, .L872+4
 21226 009a 1346     		mov	r3, r2
 21227 009c 5B00     		lsls	r3, r3, #1
 21228 009e 1344     		add	r3, r3, r2
 21229 00a0 9B00     		lsls	r3, r3, #2
 21230 00a2 1344     		add	r3, r3, r2
 21231 00a4 0B44     		add	r3, r3, r1
 21232 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 21233 00aa 204B     		ldr	r3, .L872
 21234 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21235 00b0 1C46     		mov	r4, r3
 21236 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21237 00b4 1D48     		ldr	r0, .L872
 21238 00b6 2346     		mov	r3, r4
 21239 00b8 5B00     		lsls	r3, r3, #1
 21240 00ba 2344     		add	r3, r3, r4
 21241 00bc 1B01     		lsls	r3, r3, #4
 21242 00be 0344     		add	r3, r3, r0
 21243 00c0 0B44     		add	r3, r3, r1
 21244 00c2 03F29513 		addw	r3, r3, #405
 21245 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21246 00c8 42FA03F3 		asr	r3, r2, r3
 21247 00cc 1BB2     		sxth	r3, r3
 21248 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3209:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 21249              		.loc 1 3209 0
 21250 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21251 00d2 5B00     		lsls	r3, r3, #1
 21252 00d4 0633     		adds	r3, r3, #6
 21253 00d6 07F10C02 		add	r2, r7, #12
 21254 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21255 00dc 07F11001 		add	r1, r7, #16
 21256 00e0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 470


 21257 00e2 03F8102C 		strb	r2, [r3, #-16]
3210:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 21258              		.loc 1 3210 0
 21259 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21260 00e8 5B00     		lsls	r3, r3, #1
 21261 00ea 5A1D     		adds	r2, r3, #5
 21262 00ec 07F10C03 		add	r3, r7, #12
 21263 00f0 0133     		adds	r3, r3, #1
 21264 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21265 00f4 07F11003 		add	r3, r7, #16
 21266 00f8 1344     		add	r3, r3, r2
 21267 00fa 0A46     		mov	r2, r1
 21268 00fc 03F8102C 		strb	r2, [r3, #-16]
 21269              	.L870:
3207:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21270              		.loc 1 3207 0 discriminator 1
 21271 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21272 0102 5A1E     		subs	r2, r3, #1
 21273 0104 FA73     		strb	r2, [r7, #15]
 21274 0106 002B     		cmp	r3, #0
 21275 0108 C1D1     		bne	.L871
3211:..\src/command_processing.c ****     }
3212:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3213:..\src/command_processing.c ****         
3214:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 21276              		.loc 1 3214 0
 21277 010a 3B46     		mov	r3, r7
 21278 010c 0B21     		movs	r1, #11
 21279 010e 1846     		mov	r0, r3
 21280 0110 FFF7FEFF 		bl	LCRChecksum
 21281 0114 0346     		mov	r3, r0
 21282 0116 FB72     		strb	r3, [r7, #11]
3215:..\src/command_processing.c ****     commWrite(packet_data, 12);
 21283              		.loc 1 3215 0
 21284 0118 3B46     		mov	r3, r7
 21285 011a 0C21     		movs	r1, #12
 21286 011c 1846     		mov	r0, r3
 21287 011e FFF7FEFF 		bl	commWrite
3216:..\src/command_processing.c ****    
3217:..\src/command_processing.c **** }
 21288              		.loc 1 3217 0
 21289 0122 00BF     		nop
 21290 0124 1437     		adds	r7, r7, #20
 21291              		.cfi_def_cfa_offset 12
 21292 0126 BD46     		mov	sp, r7
 21293              		.cfi_def_cfa_register 13
 21294              		@ sp needed
 21295 0128 90BD     		pop	{r4, r7, pc}
 21296              	.L873:
 21297 012a 00BF     		.align	2
 21298              	.L872:
 21299 012c 00000000 		.word	g_mem
 21300 0130 00000000 		.word	g_measOld
 21301 0134 00000000 		.word	c_mem
 21302              		.cfi_endproc
 21303              	.LFE94:
 21304              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 471


 21305              		.section	.text.cmd_get_currents,"ax",%progbits
 21306              		.align	2
 21307              		.global	cmd_get_currents
 21308              		.thumb
 21309              		.thumb_func
 21310              		.type	cmd_get_currents, %function
 21311              	cmd_get_currents:
 21312              	.LFB95:
3218:..\src/command_processing.c **** 
3219:..\src/command_processing.c **** void cmd_get_currents(){
 21313              		.loc 1 3219 0
 21314              		.cfi_startproc
 21315              		@ args = 0, pretend = 0, frame = 16
 21316              		@ frame_needed = 1, uses_anonymous_args = 0
 21317 0000 80B5     		push	{r7, lr}
 21318              		.cfi_def_cfa_offset 8
 21319              		.cfi_offset 7, -8
 21320              		.cfi_offset 14, -4
 21321 0002 84B0     		sub	sp, sp, #16
 21322              		.cfi_def_cfa_offset 24
 21323 0004 00AF     		add	r7, sp, #0
 21324              		.cfi_def_cfa_register 7
3220:..\src/command_processing.c ****     
3221:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3222:..\src/command_processing.c ****     
3223:..\src/command_processing.c ****     uint8 packet_data[6]; 
3224:..\src/command_processing.c ****     int16 aux_int16;
3225:..\src/command_processing.c ****     
3226:..\src/command_processing.c ****     //Header package
3227:..\src/command_processing.c **** 
3228:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 21325              		.loc 1 3228 0
 21326 0006 8523     		movs	r3, #133
 21327 0008 3B72     		strb	r3, [r7, #8]
3229:..\src/command_processing.c **** 
3230:..\src/command_processing.c ****     // Currents
3231:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 21328              		.loc 1 3231 0
 21329 000a 264B     		ldr	r3, .L877
 21330 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21331 0010 1946     		mov	r1, r3
 21332 0012 254A     		ldr	r2, .L877+4
 21333 0014 3423     		movs	r3, #52
 21334 0016 03FB01F3 		mul	r3, r3, r1
 21335 001a 1344     		add	r3, r3, r2
 21336 001c 0C33     		adds	r3, r3, #12
 21337 001e 1B68     		ldr	r3, [r3]
 21338 0020 1BB2     		sxth	r3, r3
 21339 0022 FB80     		strh	r3, [r7, #6]	@ movhi
3232:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21340              		.loc 1 3232 0
 21341 0024 BB1D     		adds	r3, r7, #6
 21342 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21343 0028 BB72     		strb	r3, [r7, #10]
3233:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21344              		.loc 1 3233 0
 21345 002a BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 472


 21346 002c 0133     		adds	r3, r3, #1
 21347 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21348 0030 7B72     		strb	r3, [r7, #9]
3234:..\src/command_processing.c ****     
3235:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 21349              		.loc 1 3235 0
 21350 0032 1E4B     		ldr	r3, .L877+8
 21351 0034 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21352 0038 012B     		cmp	r3, #1
 21353 003a 0DD1     		bne	.L875
3236:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 21354              		.loc 1 3236 0
 21355 003c 194B     		ldr	r3, .L877
 21356 003e 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21357 0042 1946     		mov	r1, r3
 21358 0044 184A     		ldr	r2, .L877+4
 21359 0046 3423     		movs	r3, #52
 21360 0048 03FB01F3 		mul	r3, r3, r1
 21361 004c 1344     		add	r3, r3, r2
 21362 004e 0C33     		adds	r3, r3, #12
 21363 0050 1B68     		ldr	r3, [r3]
 21364 0052 1BB2     		sxth	r3, r3
 21365 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 21366 0056 0CE0     		b	.L876
 21367              	.L875:
3237:..\src/command_processing.c ****     }
3238:..\src/command_processing.c ****     else {
3239:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 21368              		.loc 1 3239 0
 21369 0058 124B     		ldr	r3, .L877
 21370 005a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21371 005e 1946     		mov	r1, r3
 21372 0060 114A     		ldr	r2, .L877+4
 21373 0062 3423     		movs	r3, #52
 21374 0064 03FB01F3 		mul	r3, r3, r1
 21375 0068 1344     		add	r3, r3, r2
 21376 006a 1033     		adds	r3, r3, #16
 21377 006c 1B68     		ldr	r3, [r3]
 21378 006e 1BB2     		sxth	r3, r3
 21379 0070 FB80     		strh	r3, [r7, #6]	@ movhi
 21380              	.L876:
3240:..\src/command_processing.c ****     }
3241:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21381              		.loc 1 3241 0
 21382 0072 BB1D     		adds	r3, r7, #6
 21383 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21384 0076 3B73     		strb	r3, [r7, #12]
3242:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21385              		.loc 1 3242 0
 21386 0078 BB1D     		adds	r3, r7, #6
 21387 007a 0133     		adds	r3, r3, #1
 21388 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21389 007e FB72     		strb	r3, [r7, #11]
3243:..\src/command_processing.c **** 
3244:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3245:..\src/command_processing.c **** 
3246:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 473


 21390              		.loc 1 3246 0
 21391 0080 07F10803 		add	r3, r7, #8
 21392 0084 0521     		movs	r1, #5
 21393 0086 1846     		mov	r0, r3
 21394 0088 FFF7FEFF 		bl	LCRChecksum
 21395 008c 0346     		mov	r3, r0
 21396 008e 7B73     		strb	r3, [r7, #13]
3247:..\src/command_processing.c ****     
3248:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21397              		.loc 1 3248 0
 21398 0090 07F10803 		add	r3, r7, #8
 21399 0094 0621     		movs	r1, #6
 21400 0096 1846     		mov	r0, r3
 21401 0098 FFF7FEFF 		bl	commWrite
3249:..\src/command_processing.c **** }
 21402              		.loc 1 3249 0
 21403 009c 00BF     		nop
 21404 009e 1037     		adds	r7, r7, #16
 21405              		.cfi_def_cfa_offset 8
 21406 00a0 BD46     		mov	sp, r7
 21407              		.cfi_def_cfa_register 13
 21408              		@ sp needed
 21409 00a2 80BD     		pop	{r7, pc}
 21410              	.L878:
 21411              		.align	2
 21412              	.L877:
 21413 00a4 00000000 		.word	g_mem
 21414 00a8 00000000 		.word	g_measOld
 21415 00ac 00000000 		.word	c_mem
 21416              		.cfi_endproc
 21417              	.LFE95:
 21418              		.size	cmd_get_currents, .-cmd_get_currents
 21419              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 21420              		.align	2
 21421              		.global	cmd_get_currents_for_cuff
 21422              		.thumb
 21423              		.thumb_func
 21424              		.type	cmd_get_currents_for_cuff, %function
 21425              	cmd_get_currents_for_cuff:
 21426              	.LFB96:
3250:..\src/command_processing.c **** 
3251:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 21427              		.loc 1 3251 0
 21428              		.cfi_startproc
 21429              		@ args = 0, pretend = 0, frame = 8
 21430              		@ frame_needed = 1, uses_anonymous_args = 0
 21431 0000 80B5     		push	{r7, lr}
 21432              		.cfi_def_cfa_offset 8
 21433              		.cfi_offset 7, -8
 21434              		.cfi_offset 14, -4
 21435 0002 82B0     		sub	sp, sp, #8
 21436              		.cfi_def_cfa_offset 16
 21437 0004 00AF     		add	r7, sp, #0
 21438              		.cfi_def_cfa_register 7
3252:..\src/command_processing.c ****     
3253:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3254:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 474


3255:..\src/command_processing.c ****     uint8 packet_data[4]; 
3256:..\src/command_processing.c ****     int16 aux_int16;
3257:..\src/command_processing.c ****     
3258:..\src/command_processing.c ****     //Header package
3259:..\src/command_processing.c **** 
3260:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 21439              		.loc 1 3260 0
 21440 0006 8E23     		movs	r3, #142
 21441 0008 3B71     		strb	r3, [r7, #4]
3261:..\src/command_processing.c **** 
3262:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 21442              		.loc 1 3262 0
 21443 000a 124B     		ldr	r3, .L880
 21444 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21445 0010 1946     		mov	r1, r3
 21446 0012 114A     		ldr	r2, .L880+4
 21447 0014 3423     		movs	r3, #52
 21448 0016 03FB01F3 		mul	r3, r3, r1
 21449 001a 1344     		add	r3, r3, r2
 21450 001c 1033     		adds	r3, r3, #16
 21451 001e 1B68     		ldr	r3, [r3]
 21452 0020 1BB2     		sxth	r3, r3
 21453 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3263:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21454              		.loc 1 3263 0
 21455 0024 BB1C     		adds	r3, r7, #2
 21456 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21457 0028 BB71     		strb	r3, [r7, #6]
3264:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21458              		.loc 1 3264 0
 21459 002a BB1C     		adds	r3, r7, #2
 21460 002c 0133     		adds	r3, r3, #1
 21461 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21462 0030 7B71     		strb	r3, [r7, #5]
3265:..\src/command_processing.c **** 
3266:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3267:..\src/command_processing.c **** 
3268:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 21463              		.loc 1 3268 0
 21464 0032 3B1D     		adds	r3, r7, #4
 21465 0034 0321     		movs	r1, #3
 21466 0036 1846     		mov	r0, r3
 21467 0038 FFF7FEFF 		bl	LCRChecksum
 21468 003c 0346     		mov	r3, r0
 21469 003e FB71     		strb	r3, [r7, #7]
3269:..\src/command_processing.c ****     
3270:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 21470              		.loc 1 3270 0
 21471 0040 3B1D     		adds	r3, r7, #4
 21472 0042 0421     		movs	r1, #4
 21473 0044 1846     		mov	r0, r3
 21474 0046 FFF7FEFF 		bl	commWrite_to_cuff
3271:..\src/command_processing.c **** }
 21475              		.loc 1 3271 0
 21476 004a 00BF     		nop
 21477 004c 0837     		adds	r7, r7, #8
 21478              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 475


 21479 004e BD46     		mov	sp, r7
 21480              		.cfi_def_cfa_register 13
 21481              		@ sp needed
 21482 0050 80BD     		pop	{r7, pc}
 21483              	.L881:
 21484 0052 00BF     		.align	2
 21485              	.L880:
 21486 0054 00000000 		.word	g_mem
 21487 0058 00000000 		.word	g_measOld
 21488              		.cfi_endproc
 21489              	.LFE96:
 21490              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 21491              		.section	.text.cmd_set_baudrate,"ax",%progbits
 21492              		.align	2
 21493              		.global	cmd_set_baudrate
 21494              		.thumb
 21495              		.thumb_func
 21496              		.type	cmd_set_baudrate, %function
 21497              	cmd_set_baudrate:
 21498              	.LFB97:
3272:..\src/command_processing.c **** 
3273:..\src/command_processing.c **** void cmd_set_baudrate(){
 21499              		.loc 1 3273 0
 21500              		.cfi_startproc
 21501              		@ args = 0, pretend = 0, frame = 0
 21502              		@ frame_needed = 1, uses_anonymous_args = 0
 21503 0000 80B5     		push	{r7, lr}
 21504              		.cfi_def_cfa_offset 8
 21505              		.cfi_offset 7, -8
 21506              		.cfi_offset 14, -4
 21507 0002 00AF     		add	r7, sp, #0
 21508              		.cfi_def_cfa_register 7
3274:..\src/command_processing.c ****     
3275:..\src/command_processing.c ****     // Set BaudRate
3276:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 21509              		.loc 1 3276 0
 21510 0004 094B     		ldr	r3, .L887
 21511 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 21512 0008 094B     		ldr	r3, .L887+4
 21513 000a 83F8AA20 		strb	r2, [r3, #170]
3277:..\src/command_processing.c ****     
3278:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 21514              		.loc 1 3278 0
 21515 000e 074B     		ldr	r3, .L887
 21516 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 21517 0012 0D2B     		cmp	r3, #13
 21518 0014 04D1     		bne	.L886
3279:..\src/command_processing.c ****         case 13:
3280:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 21519              		.loc 1 3280 0
 21520 0016 0121     		movs	r1, #1
 21521 0018 0C20     		movs	r0, #12
 21522 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3281:..\src/command_processing.c ****             break;
 21523              		.loc 1 3281 0
 21524 001e 03E0     		b	.L885
 21525              	.L886:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 476


3282:..\src/command_processing.c ****         default:
3283:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 21526              		.loc 1 3283 0
 21527 0020 0121     		movs	r1, #1
 21528 0022 0220     		movs	r0, #2
 21529 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 21530              	.L885:
3284:..\src/command_processing.c ****     }
3285:..\src/command_processing.c **** }
 21531              		.loc 1 3285 0
 21532 0028 00BF     		nop
 21533 002a 80BD     		pop	{r7, pc}
 21534              	.L888:
 21535              		.align	2
 21536              	.L887:
 21537 002c 00000000 		.word	g_rx
 21538 0030 00000000 		.word	c_mem
 21539              		.cfi_endproc
 21540              	.LFE97:
 21541              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 21542              		.section	.text.cmd_ping,"ax",%progbits
 21543              		.align	2
 21544              		.global	cmd_ping
 21545              		.thumb
 21546              		.thumb_func
 21547              		.type	cmd_ping, %function
 21548              	cmd_ping:
 21549              	.LFB98:
3286:..\src/command_processing.c **** 
3287:..\src/command_processing.c **** void cmd_ping(){
 21550              		.loc 1 3287 0
 21551              		.cfi_startproc
 21552              		@ args = 0, pretend = 0, frame = 8
 21553              		@ frame_needed = 1, uses_anonymous_args = 0
 21554 0000 80B5     		push	{r7, lr}
 21555              		.cfi_def_cfa_offset 8
 21556              		.cfi_offset 7, -8
 21557              		.cfi_offset 14, -4
 21558 0002 82B0     		sub	sp, sp, #8
 21559              		.cfi_def_cfa_offset 16
 21560 0004 00AF     		add	r7, sp, #0
 21561              		.cfi_def_cfa_register 7
3288:..\src/command_processing.c **** 
3289:..\src/command_processing.c ****     uint8 packet_data[2];
3290:..\src/command_processing.c **** 
3291:..\src/command_processing.c ****     // Header
3292:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 21562              		.loc 1 3292 0
 21563 0006 0023     		movs	r3, #0
 21564 0008 3B71     		strb	r3, [r7, #4]
3293:..\src/command_processing.c ****     
3294:..\src/command_processing.c ****     // Load Payload
3295:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 21565              		.loc 1 3295 0
 21566 000a 0023     		movs	r3, #0
 21567 000c 7B71     		strb	r3, [r7, #5]
3296:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 477


3297:..\src/command_processing.c ****     // Send Package to uart
3298:..\src/command_processing.c ****     commWrite(packet_data, 2);
 21568              		.loc 1 3298 0
 21569 000e 3B1D     		adds	r3, r7, #4
 21570 0010 0221     		movs	r1, #2
 21571 0012 1846     		mov	r0, r3
 21572 0014 FFF7FEFF 		bl	commWrite
3299:..\src/command_processing.c **** }
 21573              		.loc 1 3299 0
 21574 0018 00BF     		nop
 21575 001a 0837     		adds	r7, r7, #8
 21576              		.cfi_def_cfa_offset 8
 21577 001c BD46     		mov	sp, r7
 21578              		.cfi_def_cfa_register 13
 21579              		@ sp needed
 21580 001e 80BD     		pop	{r7, pc}
 21581              		.cfi_endproc
 21582              	.LFE98:
 21583              		.size	cmd_ping, .-cmd_ping
 21584              		.section	.text.cmd_get_inputs,"ax",%progbits
 21585              		.align	2
 21586              		.global	cmd_get_inputs
 21587              		.thumb
 21588              		.thumb_func
 21589              		.type	cmd_get_inputs, %function
 21590              	cmd_get_inputs:
 21591              	.LFB99:
3300:..\src/command_processing.c **** 
3301:..\src/command_processing.c **** void cmd_get_inputs(){
 21592              		.loc 1 3301 0
 21593              		.cfi_startproc
 21594              		@ args = 0, pretend = 0, frame = 16
 21595              		@ frame_needed = 1, uses_anonymous_args = 0
 21596 0000 80B5     		push	{r7, lr}
 21597              		.cfi_def_cfa_offset 8
 21598              		.cfi_offset 7, -8
 21599              		.cfi_offset 14, -4
 21600 0002 84B0     		sub	sp, sp, #16
 21601              		.cfi_def_cfa_offset 24
 21602 0004 00AF     		add	r7, sp, #0
 21603              		.cfi_def_cfa_register 7
3302:..\src/command_processing.c **** 
3303:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3304:..\src/command_processing.c **** 
3305:..\src/command_processing.c ****     uint8 packet_data[6]; 
3306:..\src/command_processing.c ****     int16 aux_int16;
3307:..\src/command_processing.c ****     
3308:..\src/command_processing.c ****     //Header package
3309:..\src/command_processing.c **** 
3310:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 21604              		.loc 1 3310 0
 21605 0006 8323     		movs	r3, #131
 21606 0008 3B72     		strb	r3, [r7, #8]
3311:..\src/command_processing.c ****         
3312:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos  >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 21607              		.loc 1 3312 0
 21608 000a 164B     		ldr	r3, .L891
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 478


 21609 000c 1A68     		ldr	r2, [r3]
 21610 000e 164B     		ldr	r3, .L891+4
 21611 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21612 0014 1846     		mov	r0, r3
 21613 0016 1449     		ldr	r1, .L891+4
 21614 0018 0346     		mov	r3, r0
 21615 001a 5B00     		lsls	r3, r3, #1
 21616 001c 0344     		add	r3, r3, r0
 21617 001e 1B01     		lsls	r3, r3, #4
 21618 0020 0B44     		add	r3, r3, r1
 21619 0022 03F29513 		addw	r3, r3, #405
 21620 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21621 0028 42FA03F3 		asr	r3, r2, r3
 21622 002c 1BB2     		sxth	r3, r3
 21623 002e FB80     		strh	r3, [r7, #6]	@ movhi
3313:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21624              		.loc 1 3313 0
 21625 0030 BB1D     		adds	r3, r7, #6
 21626 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21627 0034 BB72     		strb	r3, [r7, #10]
3314:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21628              		.loc 1 3314 0
 21629 0036 BB1D     		adds	r3, r7, #6
 21630 0038 0133     		adds	r3, r3, #1
 21631 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21632 003c 7B72     		strb	r3, [r7, #9]
3315:..\src/command_processing.c ****     
3316:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3317:..\src/command_processing.c **** 
3318:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 21633              		.loc 1 3318 0
 21634 003e 07F10803 		add	r3, r7, #8
 21635 0042 0521     		movs	r1, #5
 21636 0044 1846     		mov	r0, r3
 21637 0046 FFF7FEFF 		bl	LCRChecksum
 21638 004a 0346     		mov	r3, r0
 21639 004c 7B73     		strb	r3, [r7, #13]
3319:..\src/command_processing.c **** 
3320:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21640              		.loc 1 3320 0
 21641 004e 07F10803 		add	r3, r7, #8
 21642 0052 0621     		movs	r1, #6
 21643 0054 1846     		mov	r0, r3
 21644 0056 FFF7FEFF 		bl	commWrite
3321:..\src/command_processing.c **** }
 21645              		.loc 1 3321 0
 21646 005a 00BF     		nop
 21647 005c 1037     		adds	r7, r7, #16
 21648              		.cfi_def_cfa_offset 8
 21649 005e BD46     		mov	sp, r7
 21650              		.cfi_def_cfa_register 13
 21651              		@ sp needed
 21652 0060 80BD     		pop	{r7, pc}
 21653              	.L892:
 21654 0062 00BF     		.align	2
 21655              	.L891:
 21656 0064 00000000 		.word	g_refOld
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 479


 21657 0068 00000000 		.word	g_mem
 21658              		.cfi_endproc
 21659              	.LFE99:
 21660              		.size	cmd_get_inputs, .-cmd_get_inputs
 21661              		.section	.text.cmd_store_params,"ax",%progbits
 21662              		.align	2
 21663              		.global	cmd_store_params
 21664              		.thumb
 21665              		.thumb_func
 21666              		.type	cmd_store_params, %function
 21667              	cmd_store_params:
 21668              	.LFB100:
3322:..\src/command_processing.c **** 
3323:..\src/command_processing.c **** void cmd_store_params(){
 21669              		.loc 1 3323 0
 21670              		.cfi_startproc
 21671              		@ args = 0, pretend = 0, frame = 16
 21672              		@ frame_needed = 1, uses_anonymous_args = 0
 21673 0000 80B5     		push	{r7, lr}
 21674              		.cfi_def_cfa_offset 8
 21675              		.cfi_offset 7, -8
 21676              		.cfi_offset 14, -4
 21677 0002 84B0     		sub	sp, sp, #16
 21678              		.cfi_def_cfa_offset 24
 21679 0004 00AF     		add	r7, sp, #0
 21680              		.cfi_def_cfa_register 7
3324:..\src/command_processing.c ****     
3325:..\src/command_processing.c ****     // Check input mode enabled
3326:..\src/command_processing.c ****     uint32 off_1;
3327:..\src/command_processing.c ****     float mult_1;
3328:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 21681              		.loc 1 3328 0
 21682 0006 0223     		movs	r3, #2
 21683 0008 FB73     		strb	r3, [r7, #15]
3329:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3330:..\src/command_processing.c ****     uint8 CYDATA old_id;
3331:..\src/command_processing.c ****     
3332:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 21684              		.loc 1 3332 0
 21685 000a 674B     		ldr	r3, .L904
 21686 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 21687 0010 002B     		cmp	r3, #0
 21688 0012 7CD1     		bne	.L894
3333:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 21689              		.loc 1 3333 0
 21690 0014 644B     		ldr	r3, .L904
 21691 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21692 001a 1946     		mov	r1, r3
 21693 001c 624A     		ldr	r2, .L904
 21694 001e 0B46     		mov	r3, r1
 21695 0020 5B00     		lsls	r3, r3, #1
 21696 0022 0B44     		add	r3, r3, r1
 21697 0024 1B01     		lsls	r3, r3, #4
 21698 0026 1344     		add	r3, r3, r2
 21699 0028 03F5CC73 		add	r3, r3, #408
 21700 002c 1B68     		ldr	r3, [r3]
 21701 002e BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 480


3334:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 21702              		.loc 1 3334 0
 21703 0030 5D4B     		ldr	r3, .L904
 21704 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21705 0036 1946     		mov	r1, r3
 21706 0038 5B4A     		ldr	r2, .L904
 21707 003a 0B46     		mov	r3, r1
 21708 003c 5B00     		lsls	r3, r3, #1
 21709 003e 0B44     		add	r3, r3, r1
 21710 0040 1B01     		lsls	r3, r3, #4
 21711 0042 1344     		add	r3, r3, r2
 21712 0044 03F5D273 		add	r3, r3, #420
 21713 0048 1B68     		ldr	r3, [r3]	@ float
 21714 004a 7B60     		str	r3, [r7, #4]	@ float
3335:..\src/command_processing.c **** 
3336:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 21715              		.loc 1 3336 0
 21716 004c 574B     		ldr	r3, .L904+4
 21717 004e 1B68     		ldr	r3, [r3]
 21718 0050 1846     		mov	r0, r3
 21719 0052 FFF7FEFF 		bl	__aeabi_i2f
 21720 0056 0346     		mov	r3, r0
 21721 0058 7968     		ldr	r1, [r7, #4]	@ float
 21722 005a 1846     		mov	r0, r3
 21723 005c FFF7FEFF 		bl	__aeabi_fdiv
 21724 0060 0346     		mov	r3, r0
 21725 0062 1846     		mov	r0, r3
 21726 0064 FFF7FEFF 		bl	__aeabi_f2iz
 21727 0068 0246     		mov	r2, r0
 21728 006a 504B     		ldr	r3, .L904+4
 21729 006c 1A60     		str	r2, [r3]
3337:..\src/command_processing.c **** 
3338:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 21730              		.loc 1 3338 0
 21731 006e 4F4B     		ldr	r3, .L904+4
 21732 0070 1B68     		ldr	r3, [r3]
 21733 0072 1846     		mov	r0, r3
 21734 0074 FFF7FEFF 		bl	__aeabi_i2f
 21735 0078 4B4B     		ldr	r3, .L904
 21736 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21737 007e 1946     		mov	r1, r3
 21738 0080 4B4A     		ldr	r2, .L904+8
 21739 0082 0B46     		mov	r3, r1
 21740 0084 5B00     		lsls	r3, r3, #1
 21741 0086 0B44     		add	r3, r3, r1
 21742 0088 1B01     		lsls	r3, r3, #4
 21743 008a 1344     		add	r3, r3, r2
 21744 008c 03F5D273 		add	r3, r3, #420
 21745 0090 1B68     		ldr	r3, [r3]	@ float
 21746 0092 1946     		mov	r1, r3
 21747 0094 FFF7FEFF 		bl	__aeabi_fmul
 21748 0098 0346     		mov	r3, r0
 21749 009a 1846     		mov	r0, r3
 21750 009c FFF7FEFF 		bl	__aeabi_f2iz
 21751 00a0 0246     		mov	r2, r0
 21752 00a2 424B     		ldr	r3, .L904+4
 21753 00a4 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 481


3339:..\src/command_processing.c **** 
3340:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 21754              		.loc 1 3340 0
 21755 00a6 414B     		ldr	r3, .L904+4
 21756 00a8 1B68     		ldr	r3, [r3]
 21757 00aa 1846     		mov	r0, r3
 21758 00ac 3E4B     		ldr	r3, .L904
 21759 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21760 00b2 1946     		mov	r1, r3
 21761 00b4 3E4A     		ldr	r2, .L904+8
 21762 00b6 0B46     		mov	r3, r1
 21763 00b8 5B00     		lsls	r3, r3, #1
 21764 00ba 0B44     		add	r3, r3, r1
 21765 00bc 1B01     		lsls	r3, r3, #4
 21766 00be 1344     		add	r3, r3, r2
 21767 00c0 03F5CC73 		add	r3, r3, #408
 21768 00c4 1B68     		ldr	r3, [r3]
 21769 00c6 1A46     		mov	r2, r3
 21770 00c8 BB68     		ldr	r3, [r7, #8]
 21771 00ca D31A     		subs	r3, r2, r3
 21772 00cc 0344     		add	r3, r3, r0
 21773 00ce 1A46     		mov	r2, r3
 21774 00d0 364B     		ldr	r3, .L904+4
 21775 00d2 1A60     		str	r2, [r3]
3341:..\src/command_processing.c ****         
3342:..\src/command_processing.c ****         // Check position Limits
3343:..\src/command_processing.c **** 
3344:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 21776              		.loc 1 3344 0
 21777 00d4 344B     		ldr	r3, .L904
 21778 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 21779 00da 002B     		cmp	r3, #0
 21780 00dc 17D0     		beq	.L894
3345:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 21781              		.loc 1 3345 0
 21782 00de 334B     		ldr	r3, .L904+4
 21783 00e0 1A68     		ldr	r2, [r3]
 21784 00e2 314B     		ldr	r3, .L904
 21785 00e4 D3F8E430 		ldr	r3, [r3, #228]
 21786 00e8 9A42     		cmp	r2, r3
 21787 00ea 04DA     		bge	.L895
3346:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 21788              		.loc 1 3346 0
 21789 00ec 2E4B     		ldr	r3, .L904
 21790 00ee D3F8E430 		ldr	r3, [r3, #228]
 21791 00f2 2E4A     		ldr	r2, .L904+4
 21792 00f4 1360     		str	r3, [r2]
 21793              	.L895:
3347:..\src/command_processing.c **** 
3348:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 21794              		.loc 1 3348 0
 21795 00f6 2D4B     		ldr	r3, .L904+4
 21796 00f8 1A68     		ldr	r2, [r3]
 21797 00fa 2B4B     		ldr	r3, .L904
 21798 00fc D3F8E830 		ldr	r3, [r3, #232]
 21799 0100 9A42     		cmp	r2, r3
 21800 0102 04DD     		ble	.L894
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 482


3349:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 21801              		.loc 1 3349 0
 21802 0104 284B     		ldr	r3, .L904
 21803 0106 D3F8E830 		ldr	r3, [r3, #232]
 21804 010a 284A     		ldr	r2, .L904+4
 21805 010c 1360     		str	r3, [r2]
 21806              	.L894:
3350:..\src/command_processing.c ****         }
3351:..\src/command_processing.c ****     }
3352:..\src/command_processing.c ****     
3353:..\src/command_processing.c ****     // If SD is used, create new param and data file
3354:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 21807              		.loc 1 3354 0
 21808 010e 264B     		ldr	r3, .L904
 21809 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 21810 0114 012B     		cmp	r3, #1
 21811 0116 06D1     		bne	.L896
3355:..\src/command_processing.c ****         FS_FClose(pFile);
 21812              		.loc 1 3355 0
 21813 0118 264B     		ldr	r3, .L904+12
 21814 011a 1B68     		ldr	r3, [r3]
 21815 011c 1846     		mov	r0, r3
 21816 011e FFF7FEFF 		bl	FS_FClose
3356:..\src/command_processing.c ****         
3357:..\src/command_processing.c ****         InitSD_FS();
 21817              		.loc 1 3357 0
 21818 0122 FFF7FEFF 		bl	InitSD_FS
 21819              	.L896:
3358:..\src/command_processing.c ****     }
3359:..\src/command_processing.c ****    
3360:..\src/command_processing.c ****     // Store params 
3361:..\src/command_processing.c **** 
3362:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 21820              		.loc 1 3362 0
 21821 0126 204B     		ldr	r3, .L904
 21822 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 21823 012c 204B     		ldr	r3, .L904+8
 21824 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 21825 0132 9A42     		cmp	r2, r3
 21826 0134 21D0     		beq	.L897
3363:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 21827              		.loc 1 3363 0
 21828 0136 1C4B     		ldr	r3, .L904
 21829 0138 93F8A030 		ldrb	r3, [r3, #160]
 21830 013c FB70     		strb	r3, [r7, #3]
3364:..\src/command_processing.c ****         if(memStore(0)) {
 21831              		.loc 1 3364 0
 21832 013e 0020     		movs	r0, #0
 21833 0140 FFF7FEFF 		bl	memStore
 21834 0144 0346     		mov	r3, r0
 21835 0146 002B     		cmp	r3, #0
 21836 0148 0BD0     		beq	.L898
3365:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 21837              		.loc 1 3365 0
 21838 014a 0123     		movs	r3, #1
 21839 014c 3B70     		strb	r3, [r7]
3366:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 483


 21840              		.loc 1 3366 0
 21841 014e 0123     		movs	r3, #1
 21842 0150 7B70     		strb	r3, [r7, #1]
3367:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21843              		.loc 1 3367 0
 21844 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21845 0154 99B2     		uxth	r1, r3
 21846 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21847 0158 3B46     		mov	r3, r7
 21848 015a 1846     		mov	r0, r3
 21849 015c FFF7FEFF 		bl	commWrite_old_id
 21850 0160 18E0     		b	.L900
 21851              	.L898:
3368:..\src/command_processing.c ****         }    
3369:..\src/command_processing.c ****         else{
3370:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 21852              		.loc 1 3370 0
 21853 0162 0023     		movs	r3, #0
 21854 0164 3B70     		strb	r3, [r7]
3371:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 21855              		.loc 1 3371 0
 21856 0166 0023     		movs	r3, #0
 21857 0168 7B70     		strb	r3, [r7, #1]
3372:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 21858              		.loc 1 3372 0
 21859 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21860 016c 99B2     		uxth	r1, r3
 21861 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 21862 0170 3B46     		mov	r3, r7
 21863 0172 1846     		mov	r0, r3
 21864 0174 FFF7FEFF 		bl	commWrite_old_id
 21865 0178 0CE0     		b	.L900
 21866              	.L897:
3373:..\src/command_processing.c ****         }
3374:..\src/command_processing.c ****     }    
3375:..\src/command_processing.c ****     else {
3376:..\src/command_processing.c ****         if(memStore(0))
 21867              		.loc 1 3376 0
 21868 017a 0020     		movs	r0, #0
 21869 017c FFF7FEFF 		bl	memStore
 21870 0180 0346     		mov	r3, r0
 21871 0182 002B     		cmp	r3, #0
 21872 0184 03D0     		beq	.L901
3377:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 21873              		.loc 1 3377 0
 21874 0186 0120     		movs	r0, #1
 21875 0188 FFF7FEFF 		bl	sendAcknowledgment
 21876 018c 02E0     		b	.L900
 21877              	.L901:
3378:..\src/command_processing.c ****         else
3379:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 21878              		.loc 1 3379 0
 21879 018e 0020     		movs	r0, #0
 21880 0190 FFF7FEFF 		bl	sendAcknowledgment
 21881              	.L900:
3380:..\src/command_processing.c ****     }
3381:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 484


3382:..\src/command_processing.c ****     // FW reset (if necessary)
3383:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 21882              		.loc 1 3383 0
 21883 0194 084B     		ldr	r3, .L904+16
 21884 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21885 0198 012B     		cmp	r3, #1
 21886 019a 01D1     		bne	.L903
3384:..\src/command_processing.c ****         CySoftwareReset();
 21887              		.loc 1 3384 0
 21888 019c FFF7FEFF 		bl	CySoftwareReset
 21889              	.L903:
3385:..\src/command_processing.c ****     }
3386:..\src/command_processing.c **** }
 21890              		.loc 1 3386 0
 21891 01a0 00BF     		nop
 21892 01a2 1037     		adds	r7, r7, #16
 21893              		.cfi_def_cfa_offset 8
 21894 01a4 BD46     		mov	sp, r7
 21895              		.cfi_def_cfa_register 13
 21896              		@ sp needed
 21897 01a6 80BD     		pop	{r7, pc}
 21898              	.L905:
 21899              		.align	2
 21900              	.L904:
 21901 01a8 00000000 		.word	c_mem
 21902 01ac 00000000 		.word	g_refNew
 21903 01b0 00000000 		.word	g_mem
 21904 01b4 00000000 		.word	pFile
 21905 01b8 00000000 		.word	reset_PSoC_flag
 21906              		.cfi_endproc
 21907              	.LFE100:
 21908              		.size	cmd_store_params, .-cmd_store_params
 21909              		.section	.text.cmd_get_emg,"ax",%progbits
 21910              		.align	2
 21911              		.global	cmd_get_emg
 21912              		.thumb
 21913              		.thumb_func
 21914              		.type	cmd_get_emg, %function
 21915              	cmd_get_emg:
 21916              	.LFB101:
3387:..\src/command_processing.c **** 
3388:..\src/command_processing.c **** void cmd_get_emg(){
 21917              		.loc 1 3388 0
 21918              		.cfi_startproc
 21919              		@ args = 0, pretend = 0, frame = 16
 21920              		@ frame_needed = 1, uses_anonymous_args = 0
 21921 0000 80B5     		push	{r7, lr}
 21922              		.cfi_def_cfa_offset 8
 21923              		.cfi_offset 7, -8
 21924              		.cfi_offset 14, -4
 21925 0002 84B0     		sub	sp, sp, #16
 21926              		.cfi_def_cfa_offset 24
 21927 0004 00AF     		add	r7, sp, #0
 21928              		.cfi_def_cfa_register 7
3389:..\src/command_processing.c ****     
3390:..\src/command_processing.c ****     uint8 packet_data[6];
3391:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 485


3392:..\src/command_processing.c ****     
3393:..\src/command_processing.c ****     // Header        
3394:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 21929              		.loc 1 3394 0
 21930 0006 8823     		movs	r3, #136
 21931 0008 3B72     		strb	r3, [r7, #8]
3395:..\src/command_processing.c ****     
3396:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[0];
 21932              		.loc 1 3396 0
 21933 000a 144B     		ldr	r3, .L907
 21934 000c 1B68     		ldr	r3, [r3]
 21935 000e 1BB2     		sxth	r3, r3
 21936 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3397:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21937              		.loc 1 3397 0
 21938 0012 BB1D     		adds	r3, r7, #6
 21939 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21940 0016 BB72     		strb	r3, [r7, #10]
3398:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21941              		.loc 1 3398 0
 21942 0018 BB1D     		adds	r3, r7, #6
 21943 001a 0133     		adds	r3, r3, #1
 21944 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21945 001e 7B72     		strb	r3, [r7, #9]
3399:..\src/command_processing.c ****     
3400:..\src/command_processing.c ****     aux_int16 = (int16) g_emg_measOld.emg[1];
 21946              		.loc 1 3400 0
 21947 0020 0E4B     		ldr	r3, .L907
 21948 0022 5B68     		ldr	r3, [r3, #4]
 21949 0024 1BB2     		sxth	r3, r3
 21950 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3401:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21951              		.loc 1 3401 0
 21952 0028 BB1D     		adds	r3, r7, #6
 21953 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21954 002c 3B73     		strb	r3, [r7, #12]
3402:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21955              		.loc 1 3402 0
 21956 002e BB1D     		adds	r3, r7, #6
 21957 0030 0133     		adds	r3, r3, #1
 21958 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21959 0034 FB72     		strb	r3, [r7, #11]
3403:..\src/command_processing.c **** 
3404:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21960              		.loc 1 3404 0
 21961 0036 07F10803 		add	r3, r7, #8
 21962 003a 0521     		movs	r1, #5
 21963 003c 1846     		mov	r0, r3
 21964 003e FFF7FEFF 		bl	LCRChecksum
 21965 0042 0346     		mov	r3, r0
 21966 0044 7B73     		strb	r3, [r7, #13]
3405:..\src/command_processing.c **** 
3406:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21967              		.loc 1 3406 0
 21968 0046 07F10803 		add	r3, r7, #8
 21969 004a 0621     		movs	r1, #6
 21970 004c 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 486


 21971 004e FFF7FEFF 		bl	commWrite
3407:..\src/command_processing.c **** 
3408:..\src/command_processing.c **** }
 21972              		.loc 1 3408 0
 21973 0052 00BF     		nop
 21974 0054 1037     		adds	r7, r7, #16
 21975              		.cfi_def_cfa_offset 8
 21976 0056 BD46     		mov	sp, r7
 21977              		.cfi_def_cfa_register 13
 21978              		@ sp needed
 21979 0058 80BD     		pop	{r7, pc}
 21980              	.L908:
 21981 005a 00BF     		.align	2
 21982              	.L907:
 21983 005c 00000000 		.word	g_emg_measOld
 21984              		.cfi_endproc
 21985              	.LFE101:
 21986              		.size	cmd_get_emg, .-cmd_get_emg
 21987              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 21988              		.align	2
 21989              		.global	cmd_get_imu_readings
 21990              		.thumb
 21991              		.thumb_func
 21992              		.type	cmd_get_imu_readings, %function
 21993              	cmd_get_imu_readings:
 21994              	.LFB102:
3409:..\src/command_processing.c **** 
3410:..\src/command_processing.c **** void cmd_get_imu_readings(){
 21995              		.loc 1 3410 0
 21996              		.cfi_startproc
 21997              		@ args = 0, pretend = 0, frame = 400
 21998              		@ frame_needed = 1, uses_anonymous_args = 0
 21999 0000 90B5     		push	{r4, r7, lr}
 22000              		.cfi_def_cfa_offset 12
 22001              		.cfi_offset 4, -12
 22002              		.cfi_offset 7, -8
 22003              		.cfi_offset 14, -4
 22004 0002 E5B0     		sub	sp, sp, #404
 22005              		.cfi_def_cfa_offset 416
 22006 0004 00AF     		add	r7, sp, #0
 22007              		.cfi_def_cfa_register 7
3411:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3412:..\src/command_processing.c ****     
3413:..\src/command_processing.c ****     uint8 k_imu;
3414:..\src/command_processing.c ****     uint16 c = 1;
 22008              		.loc 1 3414 0
 22009 0006 0123     		movs	r3, #1
 22010 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3415:..\src/command_processing.c ****     uint8 k = 0;
 22011              		.loc 1 3415 0
 22012 000c 0023     		movs	r3, #0
 22013 000e 87F88B31 		strb	r3, [r7, #395]
3416:..\src/command_processing.c ****     uint16 gl_c = 1;
 22014              		.loc 1 3416 0
 22015 0012 0123     		movs	r3, #1
 22016 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3417:..\src/command_processing.c ****     int16 aux_int16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 487


3418:..\src/command_processing.c ****     float aux_float;
3419:..\src/command_processing.c ****     
3420:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3421:..\src/command_processing.c ****     uint8 packet_data[350];
3422:..\src/command_processing.c ****     uint8 single_packet[32];
3423:..\src/command_processing.c ****     
3424:..\src/command_processing.c ****     //Header package 
3425:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 22017              		.loc 1 3425 0
 22018 0018 07F12003 		add	r3, r7, #32
 22019 001c A122     		movs	r2, #161
 22020 001e 1A70     		strb	r2, [r3]
3426:..\src/command_processing.c ****  
3427:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 22021              		.loc 1 3427 0
 22022 0020 0023     		movs	r3, #0
 22023 0022 87F88F31 		strb	r3, [r7, #399]
 22024 0026 82E2     		b	.L910
 22025              	.L926:
3428:..\src/command_processing.c ****     {	
3429:..\src/command_processing.c ****             
3430:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 22026              		.loc 1 3430 0
 22027 0028 3B46     		mov	r3, r7
 22028 002a 3A22     		movs	r2, #58
 22029 002c 1A70     		strb	r2, [r3]
3431:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 22030              		.loc 1 3431 0
 22031 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22032 0032 DB4A     		ldr	r2, .L927
 22033 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22034 0036 1946     		mov	r1, r3
 22035 0038 DA4A     		ldr	r2, .L927+4
 22036 003a 0B46     		mov	r3, r1
 22037 003c 9B00     		lsls	r3, r3, #2
 22038 003e 0B44     		add	r3, r3, r1
 22039 0040 1344     		add	r3, r3, r2
 22040 0042 03F20223 		addw	r3, r3, #514
 22041 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22042 0048 002B     		cmp	r3, #0
 22043 004a 5DD0     		beq	.L911
3432:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 22044              		.loc 1 3432 0
 22045 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22046 0050 D549     		ldr	r1, .L927+8
 22047 0052 1346     		mov	r3, r2
 22048 0054 9B00     		lsls	r3, r3, #2
 22049 0056 1344     		add	r3, r3, r2
 22050 0058 DB00     		lsls	r3, r3, #3
 22051 005a 0B44     		add	r3, r3, r1
 22052 005c 0233     		adds	r3, r3, #2
 22053 005e B3F90030 		ldrsh	r3, [r3]
 22054 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3433:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22055              		.loc 1 3433 0
 22056 0066 B7F88C31 		ldrh	r3, [r7, #396]
 22057 006a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 488


 22058 006c 07F5C372 		add	r2, r7, #390
 22059 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22060 0072 3A46     		mov	r2, r7
 22061 0074 D154     		strb	r1, [r2, r3]
3434:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22062              		.loc 1 3434 0
 22063 0076 B7F88C21 		ldrh	r2, [r7, #396]
 22064 007a 07F5C373 		add	r3, r7, #390
 22065 007e 0133     		adds	r3, r3, #1
 22066 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22067 0082 3B46     		mov	r3, r7
 22068 0084 9954     		strb	r1, [r3, r2]
3435:..\src/command_processing.c **** 
3436:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 22069              		.loc 1 3436 0
 22070 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22071 008a C749     		ldr	r1, .L927+8
 22072 008c 1346     		mov	r3, r2
 22073 008e 9B00     		lsls	r3, r3, #2
 22074 0090 1344     		add	r3, r3, r2
 22075 0092 DB00     		lsls	r3, r3, #3
 22076 0094 0B44     		add	r3, r3, r1
 22077 0096 0433     		adds	r3, r3, #4
 22078 0098 B3F90030 		ldrsh	r3, [r3]
 22079 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3437:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22080              		.loc 1 3437 0
 22081 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 22082 00a4 0333     		adds	r3, r3, #3
 22083 00a6 07F5C372 		add	r2, r7, #390
 22084 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22085 00ac 3A46     		mov	r2, r7
 22086 00ae D154     		strb	r1, [r2, r3]
3438:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22087              		.loc 1 3438 0
 22088 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 22089 00b4 9A1C     		adds	r2, r3, #2
 22090 00b6 07F5C373 		add	r3, r7, #390
 22091 00ba 0133     		adds	r3, r3, #1
 22092 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22093 00be 3B46     		mov	r3, r7
 22094 00c0 9954     		strb	r1, [r3, r2]
3439:..\src/command_processing.c **** 
3440:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 22095              		.loc 1 3440 0
 22096 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22097 00c6 B849     		ldr	r1, .L927+8
 22098 00c8 1346     		mov	r3, r2
 22099 00ca 9B00     		lsls	r3, r3, #2
 22100 00cc 1344     		add	r3, r3, r2
 22101 00ce DB00     		lsls	r3, r3, #3
 22102 00d0 0B44     		add	r3, r3, r1
 22103 00d2 0633     		adds	r3, r3, #6
 22104 00d4 B3F90030 		ldrsh	r3, [r3]
 22105 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3441:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22106              		.loc 1 3441 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 489


 22107 00dc B7F88C31 		ldrh	r3, [r7, #396]
 22108 00e0 0533     		adds	r3, r3, #5
 22109 00e2 07F5C372 		add	r2, r7, #390
 22110 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22111 00e8 3A46     		mov	r2, r7
 22112 00ea D154     		strb	r1, [r2, r3]
3442:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22113              		.loc 1 3442 0
 22114 00ec B7F88C31 		ldrh	r3, [r7, #396]
 22115 00f0 1A1D     		adds	r2, r3, #4
 22116 00f2 07F5C373 		add	r3, r7, #390
 22117 00f6 0133     		adds	r3, r3, #1
 22118 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22119 00fa 3B46     		mov	r3, r7
 22120 00fc 9954     		strb	r1, [r3, r2]
3443:..\src/command_processing.c **** 
3444:..\src/command_processing.c ****             c = c + 6;
 22121              		.loc 1 3444 0
 22122 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22123 0102 0633     		adds	r3, r3, #6
 22124 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22125              	.L911:
3445:..\src/command_processing.c ****         }
3446:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 22126              		.loc 1 3446 0
 22127 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22128 010c A44A     		ldr	r2, .L927
 22129 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22130 0110 1946     		mov	r1, r3
 22131 0112 A44A     		ldr	r2, .L927+4
 22132 0114 0B46     		mov	r3, r1
 22133 0116 9B00     		lsls	r3, r3, #2
 22134 0118 0B44     		add	r3, r3, r1
 22135 011a 1344     		add	r3, r3, r2
 22136 011c 03F20323 		addw	r3, r3, #515
 22137 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22138 0122 002B     		cmp	r3, #0
 22139 0124 5DD0     		beq	.L912
3447:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 22140              		.loc 1 3447 0
 22141 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22142 012a 9F49     		ldr	r1, .L927+8
 22143 012c 1346     		mov	r3, r2
 22144 012e 9B00     		lsls	r3, r3, #2
 22145 0130 1344     		add	r3, r3, r2
 22146 0132 DB00     		lsls	r3, r3, #3
 22147 0134 0B44     		add	r3, r3, r1
 22148 0136 0833     		adds	r3, r3, #8
 22149 0138 B3F90030 		ldrsh	r3, [r3]
 22150 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3448:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22151              		.loc 1 3448 0
 22152 0140 B7F88C31 		ldrh	r3, [r7, #396]
 22153 0144 0133     		adds	r3, r3, #1
 22154 0146 07F5C372 		add	r2, r7, #390
 22155 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22156 014c 3A46     		mov	r2, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 490


 22157 014e D154     		strb	r1, [r2, r3]
3449:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22158              		.loc 1 3449 0
 22159 0150 B7F88C21 		ldrh	r2, [r7, #396]
 22160 0154 07F5C373 		add	r3, r7, #390
 22161 0158 0133     		adds	r3, r3, #1
 22162 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22163 015c 3B46     		mov	r3, r7
 22164 015e 9954     		strb	r1, [r3, r2]
3450:..\src/command_processing.c **** 
3451:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 22165              		.loc 1 3451 0
 22166 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22167 0164 9049     		ldr	r1, .L927+8
 22168 0166 1346     		mov	r3, r2
 22169 0168 9B00     		lsls	r3, r3, #2
 22170 016a 1344     		add	r3, r3, r2
 22171 016c DB00     		lsls	r3, r3, #3
 22172 016e 0B44     		add	r3, r3, r1
 22173 0170 0A33     		adds	r3, r3, #10
 22174 0172 B3F90030 		ldrsh	r3, [r3]
 22175 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3452:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22176              		.loc 1 3452 0
 22177 017a B7F88C31 		ldrh	r3, [r7, #396]
 22178 017e 0333     		adds	r3, r3, #3
 22179 0180 07F5C372 		add	r2, r7, #390
 22180 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22181 0186 3A46     		mov	r2, r7
 22182 0188 D154     		strb	r1, [r2, r3]
3453:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22183              		.loc 1 3453 0
 22184 018a B7F88C31 		ldrh	r3, [r7, #396]
 22185 018e 9A1C     		adds	r2, r3, #2
 22186 0190 07F5C373 		add	r3, r7, #390
 22187 0194 0133     		adds	r3, r3, #1
 22188 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22189 0198 3B46     		mov	r3, r7
 22190 019a 9954     		strb	r1, [r3, r2]
3454:..\src/command_processing.c **** 
3455:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 22191              		.loc 1 3455 0
 22192 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22193 01a0 8149     		ldr	r1, .L927+8
 22194 01a2 1346     		mov	r3, r2
 22195 01a4 9B00     		lsls	r3, r3, #2
 22196 01a6 1344     		add	r3, r3, r2
 22197 01a8 DB00     		lsls	r3, r3, #3
 22198 01aa 0B44     		add	r3, r3, r1
 22199 01ac 0C33     		adds	r3, r3, #12
 22200 01ae B3F90030 		ldrsh	r3, [r3]
 22201 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3456:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22202              		.loc 1 3456 0
 22203 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 22204 01ba 0533     		adds	r3, r3, #5
 22205 01bc 07F5C372 		add	r2, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 491


 22206 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22207 01c2 3A46     		mov	r2, r7
 22208 01c4 D154     		strb	r1, [r2, r3]
3457:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22209              		.loc 1 3457 0
 22210 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 22211 01ca 1A1D     		adds	r2, r3, #4
 22212 01cc 07F5C373 		add	r3, r7, #390
 22213 01d0 0133     		adds	r3, r3, #1
 22214 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22215 01d4 3B46     		mov	r3, r7
 22216 01d6 9954     		strb	r1, [r3, r2]
3458:..\src/command_processing.c **** 
3459:..\src/command_processing.c ****             c = c + 6;
 22217              		.loc 1 3459 0
 22218 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22219 01dc 0633     		adds	r3, r3, #6
 22220 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22221              	.L912:
3460:..\src/command_processing.c ****         }
3461:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 22222              		.loc 1 3461 0
 22223 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22224 01e6 6E4A     		ldr	r2, .L927
 22225 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22226 01ea 1946     		mov	r1, r3
 22227 01ec 6D4A     		ldr	r2, .L927+4
 22228 01ee 0B46     		mov	r3, r1
 22229 01f0 9B00     		lsls	r3, r3, #2
 22230 01f2 0B44     		add	r3, r3, r1
 22231 01f4 1344     		add	r3, r3, r2
 22232 01f6 03F50173 		add	r3, r3, #516
 22233 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22234 01fc 002B     		cmp	r3, #0
 22235 01fe 5DD0     		beq	.L913
3462:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 22236              		.loc 1 3462 0
 22237 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22238 0204 6849     		ldr	r1, .L927+8
 22239 0206 1346     		mov	r3, r2
 22240 0208 9B00     		lsls	r3, r3, #2
 22241 020a 1344     		add	r3, r3, r2
 22242 020c DB00     		lsls	r3, r3, #3
 22243 020e 0B44     		add	r3, r3, r1
 22244 0210 0E33     		adds	r3, r3, #14
 22245 0212 B3F90030 		ldrsh	r3, [r3]
 22246 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3463:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22247              		.loc 1 3463 0
 22248 021a B7F88C31 		ldrh	r3, [r7, #396]
 22249 021e 0133     		adds	r3, r3, #1
 22250 0220 07F5C372 		add	r2, r7, #390
 22251 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22252 0226 3A46     		mov	r2, r7
 22253 0228 D154     		strb	r1, [r2, r3]
3464:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22254              		.loc 1 3464 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 492


 22255 022a B7F88C21 		ldrh	r2, [r7, #396]
 22256 022e 07F5C373 		add	r3, r7, #390
 22257 0232 0133     		adds	r3, r3, #1
 22258 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22259 0236 3B46     		mov	r3, r7
 22260 0238 9954     		strb	r1, [r3, r2]
3465:..\src/command_processing.c **** 
3466:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 22261              		.loc 1 3466 0
 22262 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22263 023e 5A49     		ldr	r1, .L927+8
 22264 0240 1346     		mov	r3, r2
 22265 0242 9B00     		lsls	r3, r3, #2
 22266 0244 1344     		add	r3, r3, r2
 22267 0246 DB00     		lsls	r3, r3, #3
 22268 0248 0B44     		add	r3, r3, r1
 22269 024a 1033     		adds	r3, r3, #16
 22270 024c B3F90030 		ldrsh	r3, [r3]
 22271 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3467:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 22272              		.loc 1 3467 0
 22273 0254 B7F88C31 		ldrh	r3, [r7, #396]
 22274 0258 0333     		adds	r3, r3, #3
 22275 025a 07F5C372 		add	r2, r7, #390
 22276 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22277 0260 3A46     		mov	r2, r7
 22278 0262 D154     		strb	r1, [r2, r3]
3468:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 22279              		.loc 1 3468 0
 22280 0264 B7F88C31 		ldrh	r3, [r7, #396]
 22281 0268 9A1C     		adds	r2, r3, #2
 22282 026a 07F5C373 		add	r3, r7, #390
 22283 026e 0133     		adds	r3, r3, #1
 22284 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22285 0272 3B46     		mov	r3, r7
 22286 0274 9954     		strb	r1, [r3, r2]
3469:..\src/command_processing.c **** 
3470:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 22287              		.loc 1 3470 0
 22288 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22289 027a 4B49     		ldr	r1, .L927+8
 22290 027c 1346     		mov	r3, r2
 22291 027e 9B00     		lsls	r3, r3, #2
 22292 0280 1344     		add	r3, r3, r2
 22293 0282 DB00     		lsls	r3, r3, #3
 22294 0284 0B44     		add	r3, r3, r1
 22295 0286 1233     		adds	r3, r3, #18
 22296 0288 B3F90030 		ldrsh	r3, [r3]
 22297 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3471:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 22298              		.loc 1 3471 0
 22299 0290 B7F88C31 		ldrh	r3, [r7, #396]
 22300 0294 0533     		adds	r3, r3, #5
 22301 0296 07F5C372 		add	r2, r7, #390
 22302 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22303 029c 3A46     		mov	r2, r7
 22304 029e D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 493


3472:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 22305              		.loc 1 3472 0
 22306 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 22307 02a4 1A1D     		adds	r2, r3, #4
 22308 02a6 07F5C373 		add	r3, r7, #390
 22309 02aa 0133     		adds	r3, r3, #1
 22310 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22311 02ae 3B46     		mov	r3, r7
 22312 02b0 9954     		strb	r1, [r3, r2]
3473:..\src/command_processing.c **** 
3474:..\src/command_processing.c ****             c = c + 6;
 22313              		.loc 1 3474 0
 22314 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22315 02b6 0633     		adds	r3, r3, #6
 22316 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22317              	.L913:
3475:..\src/command_processing.c ****         }
3476:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 22318              		.loc 1 3476 0
 22319 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22320 02c0 374A     		ldr	r2, .L927
 22321 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22322 02c4 1946     		mov	r1, r3
 22323 02c6 374A     		ldr	r2, .L927+4
 22324 02c8 0B46     		mov	r3, r1
 22325 02ca 9B00     		lsls	r3, r3, #2
 22326 02cc 0B44     		add	r3, r3, r1
 22327 02ce 1344     		add	r3, r3, r2
 22328 02d0 03F20523 		addw	r3, r3, #517
 22329 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22330 02d6 002B     		cmp	r3, #0
 22331 02d8 00F0AF80 		beq	.L914
3477:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 22332              		.loc 1 3477 0
 22333 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22334 02e0 3149     		ldr	r1, .L927+8
 22335 02e2 1346     		mov	r3, r2
 22336 02e4 9B00     		lsls	r3, r3, #2
 22337 02e6 1344     		add	r3, r3, r2
 22338 02e8 DB00     		lsls	r3, r3, #3
 22339 02ea 0B44     		add	r3, r3, r1
 22340 02ec 1433     		adds	r3, r3, #20
 22341 02ee 1B68     		ldr	r3, [r3]	@ float
 22342 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22343              		.loc 1 3478 0
 22344 02f4 0023     		movs	r3, #0
 22345 02f6 87F88B31 		strb	r3, [r7, #395]
 22346 02fa 13E0     		b	.L915
 22347              	.L916:
3479:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 22348              		.loc 1 3479 0 discriminator 3
 22349 02fc B7F88C31 		ldrh	r3, [r7, #396]
 22350 0300 1A1D     		adds	r2, r3, #4
 22351 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22352 0306 D31A     		subs	r3, r2, r3
 22353 0308 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 494


 22354 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22355 030e 07F5C071 		add	r1, r7, #384
 22356 0312 0A44     		add	r2, r2, r1
 22357 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22358 0316 3A46     		mov	r2, r7
 22359 0318 D154     		strb	r1, [r2, r3]
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22360              		.loc 1 3478 0 discriminator 3
 22361 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22362 031e 0133     		adds	r3, r3, #1
 22363 0320 87F88B31 		strb	r3, [r7, #395]
 22364              	.L915:
3478:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22365              		.loc 1 3478 0 is_stmt 0 discriminator 1
 22366 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22367 0328 032B     		cmp	r3, #3
 22368 032a E7D9     		bls	.L916
3480:..\src/command_processing.c ****             }
3481:..\src/command_processing.c **** 
3482:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 22369              		.loc 1 3482 0 is_stmt 1
 22370 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22371 0330 1D49     		ldr	r1, .L927+8
 22372 0332 1346     		mov	r3, r2
 22373 0334 9B00     		lsls	r3, r3, #2
 22374 0336 1344     		add	r3, r3, r2
 22375 0338 DB00     		lsls	r3, r3, #3
 22376 033a 0B44     		add	r3, r3, r1
 22377 033c 1833     		adds	r3, r3, #24
 22378 033e 1B68     		ldr	r3, [r3]	@ float
 22379 0340 C7F88031 		str	r3, [r7, #384]	@ float
3483:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22380              		.loc 1 3483 0
 22381 0344 0023     		movs	r3, #0
 22382 0346 87F88B31 		strb	r3, [r7, #395]
 22383 034a 14E0     		b	.L917
 22384              	.L918:
3484:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 22385              		.loc 1 3484 0 discriminator 3
 22386 034c B7F88C31 		ldrh	r3, [r7, #396]
 22387 0350 03F10802 		add	r2, r3, #8
 22388 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22389 0358 D31A     		subs	r3, r2, r3
 22390 035a 013B     		subs	r3, r3, #1
 22391 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22392 0360 07F5C071 		add	r1, r7, #384
 22393 0364 0A44     		add	r2, r2, r1
 22394 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22395 0368 3A46     		mov	r2, r7
 22396 036a D154     		strb	r1, [r2, r3]
3483:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22397              		.loc 1 3483 0 discriminator 3
 22398 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22399 0370 0133     		adds	r3, r3, #1
 22400 0372 87F88B31 		strb	r3, [r7, #395]
 22401              	.L917:
3483:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 495


 22402              		.loc 1 3483 0 is_stmt 0 discriminator 1
 22403 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22404 037a 032B     		cmp	r3, #3
 22405 037c E6D9     		bls	.L918
3485:..\src/command_processing.c ****             }
3486:..\src/command_processing.c **** 
3487:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 22406              		.loc 1 3487 0 is_stmt 1
 22407 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22408 0382 0949     		ldr	r1, .L927+8
 22409 0384 1346     		mov	r3, r2
 22410 0386 9B00     		lsls	r3, r3, #2
 22411 0388 1344     		add	r3, r3, r2
 22412 038a DB00     		lsls	r3, r3, #3
 22413 038c 0B44     		add	r3, r3, r1
 22414 038e 1C33     		adds	r3, r3, #28
 22415 0390 1B68     		ldr	r3, [r3]	@ float
 22416 0392 C7F88031 		str	r3, [r7, #384]	@ float
3488:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22417              		.loc 1 3488 0
 22418 0396 0023     		movs	r3, #0
 22419 0398 87F88B31 		strb	r3, [r7, #395]
 22420 039c 1BE0     		b	.L919
 22421              	.L928:
 22422 039e 00BF     		.align	2
 22423              	.L927:
 22424 03a0 00000000 		.word	IMU_connected
 22425 03a4 00000000 		.word	c_mem
 22426 03a8 00000000 		.word	g_imu
 22427              	.L920:
3489:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 22428              		.loc 1 3489 0 discriminator 3
 22429 03ac B7F88C31 		ldrh	r3, [r7, #396]
 22430 03b0 03F10C02 		add	r2, r3, #12
 22431 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22432 03b8 D31A     		subs	r3, r2, r3
 22433 03ba 013B     		subs	r3, r3, #1
 22434 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22435 03c0 07F5C071 		add	r1, r7, #384
 22436 03c4 0A44     		add	r2, r2, r1
 22437 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22438 03c8 3A46     		mov	r2, r7
 22439 03ca D154     		strb	r1, [r2, r3]
3488:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22440              		.loc 1 3488 0 discriminator 3
 22441 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22442 03d0 0133     		adds	r3, r3, #1
 22443 03d2 87F88B31 		strb	r3, [r7, #395]
 22444              	.L919:
3488:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22445              		.loc 1 3488 0 is_stmt 0 discriminator 1
 22446 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22447 03da 032B     		cmp	r3, #3
 22448 03dc E6D9     		bls	.L920
3490:..\src/command_processing.c ****             }
3491:..\src/command_processing.c **** 
3492:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 496


 22449              		.loc 1 3492 0 is_stmt 1
 22450 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22451 03e2 6749     		ldr	r1, .L929
 22452 03e4 1346     		mov	r3, r2
 22453 03e6 9B00     		lsls	r3, r3, #2
 22454 03e8 1344     		add	r3, r3, r2
 22455 03ea DB00     		lsls	r3, r3, #3
 22456 03ec 0B44     		add	r3, r3, r1
 22457 03ee 2033     		adds	r3, r3, #32
 22458 03f0 1B68     		ldr	r3, [r3]	@ float
 22459 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3493:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22460              		.loc 1 3493 0
 22461 03f6 0023     		movs	r3, #0
 22462 03f8 87F88B31 		strb	r3, [r7, #395]
 22463 03fc 14E0     		b	.L921
 22464              	.L922:
3494:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 22465              		.loc 1 3494 0 discriminator 3
 22466 03fe B7F88C31 		ldrh	r3, [r7, #396]
 22467 0402 03F11002 		add	r2, r3, #16
 22468 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22469 040a D31A     		subs	r3, r2, r3
 22470 040c 013B     		subs	r3, r3, #1
 22471 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22472 0412 07F5C071 		add	r1, r7, #384
 22473 0416 0A44     		add	r2, r2, r1
 22474 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22475 041a 3A46     		mov	r2, r7
 22476 041c D154     		strb	r1, [r2, r3]
3493:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22477              		.loc 1 3493 0 discriminator 3
 22478 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22479 0422 0133     		adds	r3, r3, #1
 22480 0424 87F88B31 		strb	r3, [r7, #395]
 22481              	.L921:
3493:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 22482              		.loc 1 3493 0 is_stmt 0 discriminator 1
 22483 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22484 042c 032B     		cmp	r3, #3
 22485 042e E6D9     		bls	.L922
3495:..\src/command_processing.c ****             }
3496:..\src/command_processing.c ****             c = c + 16;
 22486              		.loc 1 3496 0 is_stmt 1
 22487 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22488 0434 1033     		adds	r3, r3, #16
 22489 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22490              	.L914:
3497:..\src/command_processing.c ****         }
3498:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 22491              		.loc 1 3498 0
 22492 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22493 043e 514A     		ldr	r2, .L929+4
 22494 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22495 0442 1946     		mov	r1, r3
 22496 0444 504A     		ldr	r2, .L929+8
 22497 0446 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 497


 22498 0448 9B00     		lsls	r3, r3, #2
 22499 044a 0B44     		add	r3, r3, r1
 22500 044c 1344     		add	r3, r3, r2
 22501 044e 03F20623 		addw	r3, r3, #518
 22502 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22503 0454 002B     		cmp	r3, #0
 22504 0456 21D0     		beq	.L923
3499:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 22505              		.loc 1 3499 0
 22506 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22507 045c 4849     		ldr	r1, .L929
 22508 045e 1346     		mov	r3, r2
 22509 0460 9B00     		lsls	r3, r3, #2
 22510 0462 1344     		add	r3, r3, r2
 22511 0464 DB00     		lsls	r3, r3, #3
 22512 0466 0B44     		add	r3, r3, r1
 22513 0468 2433     		adds	r3, r3, #36
 22514 046a B3F90030 		ldrsh	r3, [r3]
 22515 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3500:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 22516              		.loc 1 3500 0
 22517 0472 B7F88C31 		ldrh	r3, [r7, #396]
 22518 0476 0133     		adds	r3, r3, #1
 22519 0478 07F5C372 		add	r2, r7, #390
 22520 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 22521 047e 3A46     		mov	r2, r7
 22522 0480 D154     		strb	r1, [r2, r3]
3501:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 22523              		.loc 1 3501 0
 22524 0482 B7F88C21 		ldrh	r2, [r7, #396]
 22525 0486 07F5C373 		add	r3, r7, #390
 22526 048a 0133     		adds	r3, r3, #1
 22527 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22528 048e 3B46     		mov	r3, r7
 22529 0490 9954     		strb	r1, [r3, r2]
3502:..\src/command_processing.c ****             c = c + 2;
 22530              		.loc 1 3502 0
 22531 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 22532 0496 0233     		adds	r3, r3, #2
 22533 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 22534              	.L923:
3503:..\src/command_processing.c ****         }
3504:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 22535              		.loc 1 3504 0
 22536 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22537 04a0 384A     		ldr	r2, .L929+4
 22538 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22539 04a4 1A46     		mov	r2, r3
 22540 04a6 394B     		ldr	r3, .L929+12
 22541 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 22542 04ac 013B     		subs	r3, r3, #1
 22543 04ae 3A46     		mov	r2, r7
 22544 04b0 3A21     		movs	r1, #58
 22545 04b2 D154     		strb	r1, [r2, r3]
3505:..\src/command_processing.c ****         c = 1;
 22546              		.loc 1 3505 0
 22547 04b4 0123     		movs	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 498


 22548 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3506:..\src/command_processing.c ****                
3507:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 22549              		.loc 1 3507 0
 22550 04ba 0023     		movs	r3, #0
 22551 04bc 87F88B31 		strb	r3, [r7, #395]
 22552 04c0 10E0     		b	.L924
 22553              	.L925:
3508:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22554              		.loc 1 3508 0 discriminator 3
 22555 04c2 B7F88821 		ldrh	r2, [r7, #392]
 22556 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22557 04ca 1344     		add	r3, r3, r2
 22558 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22559 04d0 3946     		mov	r1, r7
 22560 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 22561 04d4 07F12002 		add	r2, r7, #32
 22562 04d8 D154     		strb	r1, [r2, r3]
3507:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22563              		.loc 1 3507 0 discriminator 3
 22564 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 22565 04de 0133     		adds	r3, r3, #1
 22566 04e0 87F88B31 		strb	r3, [r7, #395]
 22567              	.L924:
3507:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 22568              		.loc 1 3507 0 is_stmt 0 discriminator 1
 22569 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 22570 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22571 04ec 2549     		ldr	r1, .L929+4
 22572 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 22573 04f0 1946     		mov	r1, r3
 22574 04f2 264B     		ldr	r3, .L929+12
 22575 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 22576 04f8 9A42     		cmp	r2, r3
 22577 04fa E2DB     		blt	.L925
3509:..\src/command_processing.c ****         }
3510:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 22578              		.loc 1 3510 0 is_stmt 1 discriminator 2
 22579 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22580 0500 204A     		ldr	r2, .L929+4
 22581 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22582 0504 1A46     		mov	r2, r3
 22583 0506 214B     		ldr	r3, .L929+12
 22584 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 22585 050c 9AB2     		uxth	r2, r3
 22586 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 22587 0512 1344     		add	r3, r3, r2
 22588 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3511:..\src/command_processing.c ****         
3512:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 22589              		.loc 1 3512 0 discriminator 2
 22590 0518 3B46     		mov	r3, r7
 22591 051a 2022     		movs	r2, #32
 22592 051c 0021     		movs	r1, #0
 22593 051e 1846     		mov	r0, r3
 22594 0520 FFF7FEFF 		bl	memset
3427:..\src/command_processing.c ****     {	
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 499


 22595              		.loc 1 3427 0 discriminator 2
 22596 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 22597 0528 0133     		adds	r3, r3, #1
 22598 052a 87F88F31 		strb	r3, [r7, #399]
 22599              	.L910:
3427:..\src/command_processing.c ****     {	
 22600              		.loc 1 3427 0 is_stmt 0 discriminator 1
 22601 052e 184B     		ldr	r3, .L929+16
 22602 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22603 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 22604 0536 9A42     		cmp	r2, r3
 22605 0538 FFF476AD 		bcc	.L926
3513:..\src/command_processing.c ****         
3514:..\src/command_processing.c ****     }
3515:..\src/command_processing.c **** 
3516:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3517:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 22606              		.loc 1 3517 0 is_stmt 1
 22607 053c 154B     		ldr	r3, .L929+20
 22608 053e 1B68     		ldr	r3, [r3]
 22609 0540 5C1E     		subs	r4, r3, #1
 22610 0542 144B     		ldr	r3, .L929+20
 22611 0544 1B68     		ldr	r3, [r3]
 22612 0546 DBB2     		uxtb	r3, r3
 22613 0548 013B     		subs	r3, r3, #1
 22614 054a DAB2     		uxtb	r2, r3
 22615 054c 07F12003 		add	r3, r7, #32
 22616 0550 1146     		mov	r1, r2
 22617 0552 1846     		mov	r0, r3
 22618 0554 FFF7FEFF 		bl	LCRChecksum
 22619 0558 0346     		mov	r3, r0
 22620 055a 1A46     		mov	r2, r3
 22621 055c 07F12003 		add	r3, r7, #32
 22622 0560 1A55     		strb	r2, [r3, r4]
3518:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 22623              		.loc 1 3518 0
 22624 0562 0C4B     		ldr	r3, .L929+20
 22625 0564 1B68     		ldr	r3, [r3]
 22626 0566 9AB2     		uxth	r2, r3
 22627 0568 07F12003 		add	r3, r7, #32
 22628 056c 1146     		mov	r1, r2
 22629 056e 1846     		mov	r0, r3
 22630 0570 FFF7FEFF 		bl	commWrite
3519:..\src/command_processing.c **** }
 22631              		.loc 1 3519 0
 22632 0574 00BF     		nop
 22633 0576 07F5CA77 		add	r7, r7, #404
 22634              		.cfi_def_cfa_offset 12
 22635 057a BD46     		mov	sp, r7
 22636              		.cfi_def_cfa_register 13
 22637              		@ sp needed
 22638 057c 90BD     		pop	{r4, r7, pc}
 22639              	.L930:
 22640 057e 00BF     		.align	2
 22641              	.L929:
 22642 0580 00000000 		.word	g_imu
 22643 0584 00000000 		.word	IMU_connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 500


 22644 0588 00000000 		.word	c_mem
 22645 058c 00000000 		.word	single_imu_size
 22646 0590 00000000 		.word	N_IMU_Connected
 22647 0594 00000000 		.word	imus_data_size
 22648              		.cfi_endproc
 22649              	.LFE102:
 22650              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 22651              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 22652              		.align	2
 22653              		.global	cmd_get_encoder_map
 22654              		.thumb
 22655              		.thumb_func
 22656              		.type	cmd_get_encoder_map, %function
 22657              	cmd_get_encoder_map:
 22658              	.LFB103:
3520:..\src/command_processing.c **** 
3521:..\src/command_processing.c **** void cmd_get_encoder_map(){
 22659              		.loc 1 3521 0
 22660              		.cfi_startproc
 22661              		@ args = 0, pretend = 0, frame = 16
 22662              		@ frame_needed = 1, uses_anonymous_args = 0
 22663 0000 90B5     		push	{r4, r7, lr}
 22664              		.cfi_def_cfa_offset 12
 22665              		.cfi_offset 4, -12
 22666              		.cfi_offset 7, -8
 22667              		.cfi_offset 14, -4
 22668 0002 85B0     		sub	sp, sp, #20
 22669              		.cfi_def_cfa_offset 32
 22670 0004 00AF     		add	r7, sp, #0
 22671              		.cfi_def_cfa_register 7
3522:..\src/command_processing.c ****     //Retrieve Encoder map
3523:..\src/command_processing.c ****     
3524:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3525:..\src/command_processing.c ****     uint8 CYDATA i, j;
3526:..\src/command_processing.c ****     
3527:..\src/command_processing.c ****     // Header        
3528:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 22672              		.loc 1 3528 0
 22673 0006 A323     		movs	r3, #163
 22674 0008 3B70     		strb	r3, [r7]
3529:..\src/command_processing.c ****     
3530:..\src/command_processing.c ****     // Fill payload
3531:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 22675              		.loc 1 3531 0
 22676 000a 0223     		movs	r3, #2
 22677 000c 7B70     		strb	r3, [r7, #1]
3532:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 22678              		.loc 1 3532 0
 22679 000e 0523     		movs	r3, #5
 22680 0010 BB70     		strb	r3, [r7, #2]
3533:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22681              		.loc 1 3533 0
 22682 0012 0023     		movs	r3, #0
 22683 0014 FB73     		strb	r3, [r7, #15]
 22684 0016 23E0     		b	.L932
 22685              	.L935:
3534:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 501


 22686              		.loc 1 3534 0
 22687 0018 0023     		movs	r3, #0
 22688 001a BB73     		strb	r3, [r7, #14]
 22689 001c 1AE0     		b	.L933
 22690              	.L934:
3535:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 22691              		.loc 1 3535 0 discriminator 3
 22692 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22693 0020 1346     		mov	r3, r2
 22694 0022 9B00     		lsls	r3, r3, #2
 22695 0024 1344     		add	r3, r3, r2
 22696 0026 DA1C     		adds	r2, r3, #3
 22697 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22698 002a D118     		adds	r1, r2, r3
 22699 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22700 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 22701 0030 154C     		ldr	r4, .L936
 22702 0032 1346     		mov	r3, r2
 22703 0034 5B00     		lsls	r3, r3, #1
 22704 0036 1344     		add	r3, r3, r2
 22705 0038 1B01     		lsls	r3, r3, #4
 22706 003a 2344     		add	r3, r3, r4
 22707 003c 0344     		add	r3, r3, r0
 22708 003e 03F5C873 		add	r3, r3, #400
 22709 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 22710 0044 07F11003 		add	r3, r7, #16
 22711 0048 0B44     		add	r3, r3, r1
 22712 004a 03F8102C 		strb	r2, [r3, #-16]
3534:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 22713              		.loc 1 3534 0 discriminator 3
 22714 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22715 0050 0133     		adds	r3, r3, #1
 22716 0052 BB73     		strb	r3, [r7, #14]
 22717              	.L933:
3534:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 22718              		.loc 1 3534 0 is_stmt 0 discriminator 1
 22719 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 22720 0056 042B     		cmp	r3, #4
 22721 0058 E1D9     		bls	.L934
3533:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22722              		.loc 1 3533 0 is_stmt 1 discriminator 2
 22723 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22724 005c 0133     		adds	r3, r3, #1
 22725 005e FB73     		strb	r3, [r7, #15]
 22726              	.L932:
3533:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22727              		.loc 1 3533 0 is_stmt 0 discriminator 1
 22728 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22729 0062 012B     		cmp	r3, #1
 22730 0064 D8D9     		bls	.L935
3536:..\src/command_processing.c ****         }
3537:..\src/command_processing.c ****     }
3538:..\src/command_processing.c ****     
3539:..\src/command_processing.c ****     // Calculate checksum
3540:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 22731              		.loc 1 3540 0 is_stmt 1
 22732 0066 3B46     		mov	r3, r7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 502


 22733 0068 0D21     		movs	r1, #13
 22734 006a 1846     		mov	r0, r3
 22735 006c FFF7FEFF 		bl	LCRChecksum
 22736 0070 0346     		mov	r3, r0
 22737 0072 7B73     		strb	r3, [r7, #13]
3541:..\src/command_processing.c ****     
3542:..\src/command_processing.c ****     // Send package to UART
3543:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 22738              		.loc 1 3543 0
 22739 0074 3B46     		mov	r3, r7
 22740 0076 0E21     		movs	r1, #14
 22741 0078 1846     		mov	r0, r3
 22742 007a FFF7FEFF 		bl	commWrite
3544:..\src/command_processing.c **** }
 22743              		.loc 1 3544 0
 22744 007e 00BF     		nop
 22745 0080 1437     		adds	r7, r7, #20
 22746              		.cfi_def_cfa_offset 12
 22747 0082 BD46     		mov	sp, r7
 22748              		.cfi_def_cfa_register 13
 22749              		@ sp needed
 22750 0084 90BD     		pop	{r4, r7, pc}
 22751              	.L937:
 22752 0086 00BF     		.align	2
 22753              	.L936:
 22754 0088 00000000 		.word	c_mem
 22755              		.cfi_endproc
 22756              	.LFE103:
 22757              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 22758              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 22759              		.align	2
 22760              		.global	cmd_get_encoder_raw
 22761              		.thumb
 22762              		.thumb_func
 22763              		.type	cmd_get_encoder_raw, %function
 22764              	cmd_get_encoder_raw:
 22765              	.LFB104:
3545:..\src/command_processing.c **** 
3546:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 22766              		.loc 1 3546 0
 22767              		.cfi_startproc
 22768              		@ args = 0, pretend = 0, frame = 32
 22769              		@ frame_needed = 1, uses_anonymous_args = 0
 22770 0000 90B5     		push	{r4, r7, lr}
 22771              		.cfi_def_cfa_offset 12
 22772              		.cfi_offset 4, -12
 22773              		.cfi_offset 7, -8
 22774              		.cfi_offset 14, -4
 22775 0002 89B0     		sub	sp, sp, #36
 22776              		.cfi_def_cfa_offset 48
 22777 0004 00AF     		add	r7, sp, #0
 22778              		.cfi_def_cfa_register 7
3547:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3548:..\src/command_processing.c ****     
3549:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3550:..\src/command_processing.c ****     uint8 i, j, idx;
3551:..\src/command_processing.c ****     uint16 aux_uint16;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 503


3552:..\src/command_processing.c ****     
3553:..\src/command_processing.c ****     //Header package 
3554:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 22779              		.loc 1 3554 0
 22780 0006 A423     		movs	r3, #164
 22781 0008 3B71     		strb	r3, [r7, #4]
3555:..\src/command_processing.c ****  
3556:..\src/command_processing.c ****     // Fill payload
3557:..\src/command_processing.c ****     idx = 0;
 22782              		.loc 1 3557 0
 22783 000a 0023     		movs	r3, #0
 22784 000c 7B77     		strb	r3, [r7, #29]
3558:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 22785              		.loc 1 3558 0
 22786 000e 0023     		movs	r3, #0
 22787 0010 FB77     		strb	r3, [r7, #31]
 22788 0012 3FE0     		b	.L939
 22789              	.L943:
3559:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22790              		.loc 1 3559 0
 22791 0014 0023     		movs	r3, #0
 22792 0016 BB77     		strb	r3, [r7, #30]
 22793 0018 33E0     		b	.L940
 22794              	.L942:
3560:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22795              		.loc 1 3560 0
 22796 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22797 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22798 001e 3048     		ldr	r0, .L944
 22799 0020 1346     		mov	r3, r2
 22800 0022 5B00     		lsls	r3, r3, #1
 22801 0024 1344     		add	r3, r3, r2
 22802 0026 1B01     		lsls	r3, r3, #4
 22803 0028 0344     		add	r3, r3, r0
 22804 002a 0B44     		add	r3, r3, r1
 22805 002c 03F5C873 		add	r3, r3, #400
 22806 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22807 0032 012B     		cmp	r3, #1
 22808 0034 22D1     		bne	.L941
3561:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 22809              		.loc 1 3561 0
 22810 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 22811 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 22812 003a 2A48     		ldr	r0, .L944+4
 22813 003c 1346     		mov	r3, r2
 22814 003e 9B00     		lsls	r3, r3, #2
 22815 0040 1344     		add	r3, r3, r2
 22816 0042 0B44     		add	r3, r3, r1
 22817 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 22818 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3562:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 22819              		.loc 1 3562 0
 22820 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22821 004c 5B00     		lsls	r3, r3, #1
 22822 004e 0233     		adds	r3, r3, #2
 22823 0050 BA1C     		adds	r2, r7, #2
 22824 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 504


 22825 0054 07F12001 		add	r1, r7, #32
 22826 0058 0B44     		add	r3, r3, r1
 22827 005a 03F81C2C 		strb	r2, [r3, #-28]
3563:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 22828              		.loc 1 3563 0
 22829 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22830 0060 5B00     		lsls	r3, r3, #1
 22831 0062 5A1C     		adds	r2, r3, #1
 22832 0064 BB1C     		adds	r3, r7, #2
 22833 0066 0133     		adds	r3, r3, #1
 22834 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22835 006a 07F12003 		add	r3, r7, #32
 22836 006e 1344     		add	r3, r3, r2
 22837 0070 0A46     		mov	r2, r1
 22838 0072 03F81C2C 		strb	r2, [r3, #-28]
3564:..\src/command_processing.c ****                 idx++;
 22839              		.loc 1 3564 0
 22840 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22841 0078 0133     		adds	r3, r3, #1
 22842 007a 7B77     		strb	r3, [r7, #29]
 22843              	.L941:
3559:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22844              		.loc 1 3559 0 discriminator 2
 22845 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 22846 007e 0133     		adds	r3, r3, #1
 22847 0080 BB77     		strb	r3, [r7, #30]
 22848              	.L940:
3559:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 22849              		.loc 1 3559 0 is_stmt 0 discriminator 1
 22850 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22851 0084 184A     		ldr	r2, .L944+8
 22852 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 22853 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 22854 008a 9A42     		cmp	r2, r3
 22855 008c C5D3     		bcc	.L942
3558:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22856              		.loc 1 3558 0 is_stmt 1 discriminator 2
 22857 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22858 0090 0133     		adds	r3, r3, #1
 22859 0092 FB77     		strb	r3, [r7, #31]
 22860              	.L939:
3558:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 22861              		.loc 1 3558 0 is_stmt 0 discriminator 1
 22862 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 22863 0096 012B     		cmp	r3, #1
 22864 0098 BCD9     		bls	.L943
3565:..\src/command_processing.c ****             }
3566:..\src/command_processing.c ****         }
3567:..\src/command_processing.c ****     }
3568:..\src/command_processing.c **** 
3569:..\src/command_processing.c ****     // Calculate checksum
3570:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 22865              		.loc 1 3570 0 is_stmt 1
 22866 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22867 009c 5B00     		lsls	r3, r3, #1
 22868 009e 5C1C     		adds	r4, r3, #1
 22869 00a0 7B7F     		ldrb	r3, [r7, #29]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 505


 22870 00a2 5B00     		lsls	r3, r3, #1
 22871 00a4 DBB2     		uxtb	r3, r3
 22872 00a6 0133     		adds	r3, r3, #1
 22873 00a8 DAB2     		uxtb	r2, r3
 22874 00aa 3B1D     		adds	r3, r7, #4
 22875 00ac 1146     		mov	r1, r2
 22876 00ae 1846     		mov	r0, r3
 22877 00b0 FFF7FEFF 		bl	LCRChecksum
 22878 00b4 0346     		mov	r3, r0
 22879 00b6 1A46     		mov	r2, r3
 22880 00b8 07F12003 		add	r3, r7, #32
 22881 00bc 2344     		add	r3, r3, r4
 22882 00be 03F81C2C 		strb	r2, [r3, #-28]
3571:..\src/command_processing.c ****     
3572:..\src/command_processing.c ****     // Send package to UART
3573:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 22883              		.loc 1 3573 0
 22884 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 22885 00c4 0133     		adds	r3, r3, #1
 22886 00c6 9BB2     		uxth	r3, r3
 22887 00c8 5B00     		lsls	r3, r3, #1
 22888 00ca 9AB2     		uxth	r2, r3
 22889 00cc 3B1D     		adds	r3, r7, #4
 22890 00ce 1146     		mov	r1, r2
 22891 00d0 1846     		mov	r0, r3
 22892 00d2 FFF7FEFF 		bl	commWrite
3574:..\src/command_processing.c **** }
 22893              		.loc 1 3574 0
 22894 00d6 00BF     		nop
 22895 00d8 2437     		adds	r7, r7, #36
 22896              		.cfi_def_cfa_offset 12
 22897 00da BD46     		mov	sp, r7
 22898              		.cfi_def_cfa_register 13
 22899              		@ sp needed
 22900 00dc 90BD     		pop	{r4, r7, pc}
 22901              	.L945:
 22902 00de 00BF     		.align	2
 22903              	.L944:
 22904 00e0 00000000 		.word	c_mem
 22905 00e4 00000000 		.word	Encoder_Value
 22906 00e8 00000000 		.word	N_Encoder_Line_Connected
 22907              		.cfi_endproc
 22908              	.LFE104:
 22909              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 22910              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 22911              		.align	2
 22912              		.global	cmd_get_ADC_map
 22913              		.thumb
 22914              		.thumb_func
 22915              		.type	cmd_get_ADC_map, %function
 22916              	cmd_get_ADC_map:
 22917              	.LFB105:
3575:..\src/command_processing.c **** 
3576:..\src/command_processing.c **** void cmd_get_ADC_map(){
 22918              		.loc 1 3576 0
 22919              		.cfi_startproc
 22920              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 506


 22921              		@ frame_needed = 1, uses_anonymous_args = 0
 22922 0000 80B5     		push	{r7, lr}
 22923              		.cfi_def_cfa_offset 8
 22924              		.cfi_offset 7, -8
 22925              		.cfi_offset 14, -4
 22926 0002 84B0     		sub	sp, sp, #16
 22927              		.cfi_def_cfa_offset 24
 22928 0004 00AF     		add	r7, sp, #0
 22929              		.cfi_def_cfa_register 7
3577:..\src/command_processing.c ****     //Retrieve Encoder map
3578:..\src/command_processing.c ****     
3579:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3580:..\src/command_processing.c ****     uint8 CYDATA i;
3581:..\src/command_processing.c ****     
3582:..\src/command_processing.c ****     // Header        
3583:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 22930              		.loc 1 3583 0
 22931 0006 A523     		movs	r3, #165
 22932 0008 3B70     		strb	r3, [r7]
3584:..\src/command_processing.c ****     
3585:..\src/command_processing.c ****     // Fill payload
3586:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 22933              		.loc 1 3586 0
 22934 000a 0C23     		movs	r3, #12
 22935 000c 7B70     		strb	r3, [r7, #1]
3587:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22936              		.loc 1 3587 0
 22937 000e 0023     		movs	r3, #0
 22938 0010 FB73     		strb	r3, [r7, #15]
 22939 0012 0EE0     		b	.L947
 22940              	.L948:
3588:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 22941              		.loc 1 3588 0 discriminator 3
 22942 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22943 0016 0233     		adds	r3, r3, #2
 22944 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 22945 001a 0F49     		ldr	r1, .L949
 22946 001c 0A44     		add	r2, r2, r1
 22947 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 22948 0022 07F11001 		add	r1, r7, #16
 22949 0026 0B44     		add	r3, r3, r1
 22950 0028 03F8102C 		strb	r2, [r3, #-16]
3587:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22951              		.loc 1 3587 0 discriminator 3
 22952 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22953 002e 0133     		adds	r3, r3, #1
 22954 0030 FB73     		strb	r3, [r7, #15]
 22955              	.L947:
3587:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 22956              		.loc 1 3587 0 is_stmt 0 discriminator 1
 22957 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22958 0034 0B2B     		cmp	r3, #11
 22959 0036 EDD9     		bls	.L948
3589:..\src/command_processing.c ****     }
3590:..\src/command_processing.c ****     
3591:..\src/command_processing.c ****     // Calculate checksum
3592:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 507


 22960              		.loc 1 3592 0 is_stmt 1
 22961 0038 3B46     		mov	r3, r7
 22962 003a 0E21     		movs	r1, #14
 22963 003c 1846     		mov	r0, r3
 22964 003e FFF7FEFF 		bl	LCRChecksum
 22965 0042 0346     		mov	r3, r0
 22966 0044 BB73     		strb	r3, [r7, #14]
3593:..\src/command_processing.c ****     
3594:..\src/command_processing.c ****     // Send package to UART
3595:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 22967              		.loc 1 3595 0
 22968 0046 3B46     		mov	r3, r7
 22969 0048 0F21     		movs	r1, #15
 22970 004a 1846     		mov	r0, r3
 22971 004c FFF7FEFF 		bl	commWrite
3596:..\src/command_processing.c ****     
3597:..\src/command_processing.c **** }
 22972              		.loc 1 3597 0
 22973 0050 00BF     		nop
 22974 0052 1037     		adds	r7, r7, #16
 22975              		.cfi_def_cfa_offset 8
 22976 0054 BD46     		mov	sp, r7
 22977              		.cfi_def_cfa_register 13
 22978              		@ sp needed
 22979 0056 80BD     		pop	{r7, pc}
 22980              	.L950:
 22981              		.align	2
 22982              	.L949:
 22983 0058 00000000 		.word	c_mem
 22984              		.cfi_endproc
 22985              	.LFE105:
 22986              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 22987              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 22988              		.align	2
 22989              		.global	cmd_get_ADC_raw
 22990              		.thumb
 22991              		.thumb_func
 22992              		.type	cmd_get_ADC_raw, %function
 22993              	cmd_get_ADC_raw:
 22994              	.LFB106:
3598:..\src/command_processing.c **** 
3599:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 22995              		.loc 1 3599 0
 22996              		.cfi_startproc
 22997              		@ args = 0, pretend = 0, frame = 32
 22998              		@ frame_needed = 1, uses_anonymous_args = 0
 22999 0000 90B5     		push	{r4, r7, lr}
 23000              		.cfi_def_cfa_offset 12
 23001              		.cfi_offset 4, -12
 23002              		.cfi_offset 7, -8
 23003              		.cfi_offset 14, -4
 23004 0002 89B0     		sub	sp, sp, #36
 23005              		.cfi_def_cfa_offset 48
 23006 0004 00AF     		add	r7, sp, #0
 23007              		.cfi_def_cfa_register 7
3600:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3601:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 508


3602:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3603:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 23008              		.loc 1 3603 0
 23009 0006 0023     		movs	r3, #0
 23010 0008 BB77     		strb	r3, [r7, #30]
3604:..\src/command_processing.c ****     int16 aux_int16;
3605:..\src/command_processing.c ****     
3606:..\src/command_processing.c ****     // Header        
3607:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 23011              		.loc 1 3607 0
 23012 000a A623     		movs	r3, #166
 23013 000c 3B71     		strb	r3, [r7, #4]
3608:..\src/command_processing.c ****     
3609:..\src/command_processing.c ****     // Fill payload
3610:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 23014              		.loc 1 3610 0
 23015 000e 0023     		movs	r3, #0
 23016 0010 FB77     		strb	r3, [r7, #31]
 23017 0012 27E0     		b	.L952
 23018              	.L954:
3611:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23019              		.loc 1 3611 0
 23020 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23021 0016 274A     		ldr	r2, .L955
 23022 0018 1344     		add	r3, r3, r2
 23023 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 23024 001e 012B     		cmp	r3, #1
 23025 0020 1DD1     		bne	.L953
3612:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 23026              		.loc 1 3612 0
 23027 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23028 0024 244A     		ldr	r2, .L955+4
 23029 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 23030 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3613:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 23031              		.loc 1 3613 0
 23032 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23033 002e 5B00     		lsls	r3, r3, #1
 23034 0030 0233     		adds	r3, r3, #2
 23035 0032 BA1C     		adds	r2, r7, #2
 23036 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23037 0036 07F12001 		add	r1, r7, #32
 23038 003a 0B44     		add	r3, r3, r1
 23039 003c 03F81C2C 		strb	r2, [r3, #-28]
3614:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 23040              		.loc 1 3614 0
 23041 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23042 0042 5B00     		lsls	r3, r3, #1
 23043 0044 5A1C     		adds	r2, r3, #1
 23044 0046 BB1C     		adds	r3, r7, #2
 23045 0048 0133     		adds	r3, r3, #1
 23046 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23047 004c 07F12003 		add	r3, r7, #32
 23048 0050 1344     		add	r3, r3, r2
 23049 0052 0A46     		mov	r2, r1
 23050 0054 03F81C2C 		strb	r2, [r3, #-28]
3615:..\src/command_processing.c ****             idx++;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 509


 23051              		.loc 1 3615 0
 23052 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23053 005a 0133     		adds	r3, r3, #1
 23054 005c BB77     		strb	r3, [r7, #30]
 23055              	.L953:
3610:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23056              		.loc 1 3610 0 discriminator 2
 23057 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23058 0060 0133     		adds	r3, r3, #1
 23059 0062 FB77     		strb	r3, [r7, #31]
 23060              	.L952:
3610:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 23061              		.loc 1 3610 0 is_stmt 0 discriminator 1
 23062 0064 154B     		ldr	r3, .L955+8
 23063 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23064 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23065 006a 9A42     		cmp	r2, r3
 23066 006c D2D3     		bcc	.L954
3616:..\src/command_processing.c ****         }
3617:..\src/command_processing.c ****     }
3618:..\src/command_processing.c **** 
3619:..\src/command_processing.c ****     // Calculate checksum
3620:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 23067              		.loc 1 3620 0 is_stmt 1
 23068 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23069 0070 5B00     		lsls	r3, r3, #1
 23070 0072 5C1C     		adds	r4, r3, #1
 23071 0074 BB7F     		ldrb	r3, [r7, #30]
 23072 0076 5B00     		lsls	r3, r3, #1
 23073 0078 DBB2     		uxtb	r3, r3
 23074 007a 0133     		adds	r3, r3, #1
 23075 007c DAB2     		uxtb	r2, r3
 23076 007e 3B1D     		adds	r3, r7, #4
 23077 0080 1146     		mov	r1, r2
 23078 0082 1846     		mov	r0, r3
 23079 0084 FFF7FEFF 		bl	LCRChecksum
 23080 0088 0346     		mov	r3, r0
 23081 008a 1A46     		mov	r2, r3
 23082 008c 07F12003 		add	r3, r7, #32
 23083 0090 2344     		add	r3, r3, r4
 23084 0092 03F81C2C 		strb	r2, [r3, #-28]
3621:..\src/command_processing.c ****     
3622:..\src/command_processing.c ****     // Send package to UART
3623:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 23085              		.loc 1 3623 0
 23086 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23087 0098 0133     		adds	r3, r3, #1
 23088 009a 9BB2     		uxth	r3, r3
 23089 009c 5B00     		lsls	r3, r3, #1
 23090 009e 9AB2     		uxth	r2, r3
 23091 00a0 3B1D     		adds	r3, r7, #4
 23092 00a2 1146     		mov	r1, r2
 23093 00a4 1846     		mov	r0, r3
 23094 00a6 FFF7FEFF 		bl	commWrite
3624:..\src/command_processing.c **** }
 23095              		.loc 1 3624 0
 23096 00aa 00BF     		nop
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 510


 23097 00ac 2437     		adds	r7, r7, #36
 23098              		.cfi_def_cfa_offset 12
 23099 00ae BD46     		mov	sp, r7
 23100              		.cfi_def_cfa_register 13
 23101              		@ sp needed
 23102 00b0 90BD     		pop	{r4, r7, pc}
 23103              	.L956:
 23104 00b2 00BF     		.align	2
 23105              	.L955:
 23106 00b4 00000000 		.word	c_mem
 23107 00b8 00000000 		.word	ADC_buf
 23108 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 23109              		.cfi_endproc
 23110              	.LFE106:
 23111              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 23112              		.bss
 23113              		.align	2
 23114              	last_aux_int16.11232:
 23115 0000 00000000 		.space	4
 23116              		.text
 23117              	.Letext0:
 23118              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23119              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 23120              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 23121              		.file 6 "..\\src\\commands.h"
 23122              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 23123              		.file 8 "..\\src\\globals.h"
 23124              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 23125              		.section	.debug_info,"",%progbits
 23126              	.Ldebug_info0:
 23127 0000 96200000 		.4byte	0x2096
 23128 0004 0400     		.2byte	0x4
 23129 0006 00000000 		.4byte	.Ldebug_abbrev0
 23130 000a 04       		.byte	0x4
 23131 000b 01       		.uleb128 0x1
 23132 000c 74070000 		.4byte	.LASF338
 23133 0010 0C       		.byte	0xc
 23134 0011 7D110000 		.4byte	.LASF339
 23135 0015 1B0F0000 		.4byte	.LASF340
 23136 0019 00000000 		.4byte	.Ldebug_ranges0+0
 23137 001d 00000000 		.4byte	0
 23138 0021 00000000 		.4byte	.Ldebug_line0
 23139 0025 02       		.uleb128 0x2
 23140 0026 01       		.byte	0x1
 23141 0027 06       		.byte	0x6
 23142 0028 0C030000 		.4byte	.LASF0
 23143 002c 02       		.uleb128 0x2
 23144 002d 01       		.byte	0x1
 23145 002e 08       		.byte	0x8
 23146 002f 6A030000 		.4byte	.LASF1
 23147 0033 02       		.uleb128 0x2
 23148 0034 02       		.byte	0x2
 23149 0035 05       		.byte	0x5
 23150 0036 0D0E0000 		.4byte	.LASF2
 23151 003a 02       		.uleb128 0x2
 23152 003b 02       		.byte	0x2
 23153 003c 07       		.byte	0x7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 511


 23154 003d A4100000 		.4byte	.LASF3
 23155 0041 03       		.uleb128 0x3
 23156 0042 3B110000 		.4byte	.LASF5
 23157 0046 03       		.byte	0x3
 23158 0047 3F       		.byte	0x3f
 23159 0048 4C000000 		.4byte	0x4c
 23160 004c 02       		.uleb128 0x2
 23161 004d 04       		.byte	0x4
 23162 004e 05       		.byte	0x5
 23163 004f 22020000 		.4byte	.LASF4
 23164 0053 03       		.uleb128 0x3
 23165 0054 2E080000 		.4byte	.LASF6
 23166 0058 03       		.byte	0x3
 23167 0059 41       		.byte	0x41
 23168 005a 5E000000 		.4byte	0x5e
 23169 005e 02       		.uleb128 0x2
 23170 005f 04       		.byte	0x4
 23171 0060 07       		.byte	0x7
 23172 0061 2D060000 		.4byte	.LASF7
 23173 0065 02       		.uleb128 0x2
 23174 0066 08       		.byte	0x8
 23175 0067 05       		.byte	0x5
 23176 0068 39080000 		.4byte	.LASF8
 23177 006c 02       		.uleb128 0x2
 23178 006d 08       		.byte	0x8
 23179 006e 07       		.byte	0x7
 23180 006f 900B0000 		.4byte	.LASF9
 23181 0073 04       		.uleb128 0x4
 23182 0074 04       		.byte	0x4
 23183 0075 05       		.byte	0x5
 23184 0076 696E7400 		.ascii	"int\000"
 23185 007a 02       		.uleb128 0x2
 23186 007b 04       		.byte	0x4
 23187 007c 07       		.byte	0x7
 23188 007d 24090000 		.4byte	.LASF10
 23189 0081 03       		.uleb128 0x3
 23190 0082 55000000 		.4byte	.LASF11
 23191 0086 04       		.byte	0x4
 23192 0087 2C       		.byte	0x2c
 23193 0088 41000000 		.4byte	0x41
 23194 008c 03       		.uleb128 0x3
 23195 008d 1B100000 		.4byte	.LASF12
 23196 0091 04       		.byte	0x4
 23197 0092 30       		.byte	0x30
 23198 0093 53000000 		.4byte	0x53
 23199 0097 05       		.uleb128 0x5
 23200 0098 FB0D0000 		.4byte	.LASF13
 23201 009c 05       		.byte	0x5
 23202 009d E401     		.2byte	0x1e4
 23203 009f 2C000000 		.4byte	0x2c
 23204 00a3 05       		.uleb128 0x5
 23205 00a4 D0110000 		.4byte	.LASF14
 23206 00a8 05       		.byte	0x5
 23207 00a9 E501     		.2byte	0x1e5
 23208 00ab 3A000000 		.4byte	0x3a
 23209 00af 05       		.uleb128 0x5
 23210 00b0 81000000 		.4byte	.LASF15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 512


 23211 00b4 05       		.byte	0x5
 23212 00b5 E601     		.2byte	0x1e6
 23213 00b7 5E000000 		.4byte	0x5e
 23214 00bb 05       		.uleb128 0x5
 23215 00bc 6A010000 		.4byte	.LASF16
 23216 00c0 05       		.byte	0x5
 23217 00c1 E701     		.2byte	0x1e7
 23218 00c3 25000000 		.4byte	0x25
 23219 00c7 05       		.uleb128 0x5
 23220 00c8 7B0F0000 		.4byte	.LASF17
 23221 00cc 05       		.byte	0x5
 23222 00cd E801     		.2byte	0x1e8
 23223 00cf 33000000 		.4byte	0x33
 23224 00d3 05       		.uleb128 0x5
 23225 00d4 DE100000 		.4byte	.LASF18
 23226 00d8 05       		.byte	0x5
 23227 00d9 E901     		.2byte	0x1e9
 23228 00db 4C000000 		.4byte	0x4c
 23229 00df 05       		.uleb128 0x5
 23230 00e0 8F020000 		.4byte	.LASF19
 23231 00e4 05       		.byte	0x5
 23232 00e5 EA01     		.2byte	0x1ea
 23233 00e7 EB000000 		.4byte	0xeb
 23234 00eb 02       		.uleb128 0x2
 23235 00ec 04       		.byte	0x4
 23236 00ed 04       		.byte	0x4
 23237 00ee EA080000 		.4byte	.LASF20
 23238 00f2 02       		.uleb128 0x2
 23239 00f3 08       		.byte	0x8
 23240 00f4 04       		.byte	0x4
 23241 00f5 91080000 		.4byte	.LASF21
 23242 00f9 02       		.uleb128 0x2
 23243 00fa 01       		.byte	0x1
 23244 00fb 08       		.byte	0x8
 23245 00fc 18040000 		.4byte	.LASF22
 23246 0100 05       		.uleb128 0x5
 23247 0101 700C0000 		.4byte	.LASF23
 23248 0105 05       		.byte	0x5
 23249 0106 8E02     		.2byte	0x28e
 23250 0108 0C010000 		.4byte	0x10c
 23251 010c 06       		.uleb128 0x6
 23252 010d 97000000 		.4byte	0x97
 23253 0111 02       		.uleb128 0x2
 23254 0112 08       		.byte	0x8
 23255 0113 04       		.byte	0x4
 23256 0114 8D0A0000 		.4byte	.LASF24
 23257 0118 02       		.uleb128 0x2
 23258 0119 04       		.byte	0x4
 23259 011a 07       		.byte	0x7
 23260 011b 10000000 		.4byte	.LASF25
 23261 011f 07       		.uleb128 0x7
 23262 0120 04       		.byte	0x4
 23263 0121 F9000000 		.4byte	0xf9
 23264 0125 07       		.uleb128 0x7
 23265 0126 04       		.byte	0x4
 23266 0127 2B010000 		.4byte	0x12b
 23267 012b 08       		.uleb128 0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 513


 23268 012c F9000000 		.4byte	0xf9
 23269 0130 09       		.uleb128 0x9
 23270 0131 F9000000 		.4byte	0xf9
 23271 0135 40010000 		.4byte	0x140
 23272 0139 0A       		.uleb128 0xa
 23273 013a 18010000 		.4byte	0x118
 23274 013e 19       		.byte	0x19
 23275 013f 00       		.byte	0
 23276 0140 09       		.uleb128 0x9
 23277 0141 F9000000 		.4byte	0xf9
 23278 0145 50010000 		.4byte	0x150
 23279 0149 0A       		.uleb128 0xa
 23280 014a 18010000 		.4byte	0x118
 23281 014e 07       		.byte	0x7
 23282 014f 00       		.byte	0
 23283 0150 09       		.uleb128 0x9
 23284 0151 97000000 		.4byte	0x97
 23285 0155 60010000 		.4byte	0x160
 23286 0159 0A       		.uleb128 0xa
 23287 015a 18010000 		.4byte	0x118
 23288 015e 1B       		.byte	0x1b
 23289 015f 00       		.byte	0
 23290 0160 0B       		.uleb128 0xb
 23291 0161 5D090000 		.4byte	.LASF55
 23292 0165 01       		.byte	0x1
 23293 0166 2C000000 		.4byte	0x2c
 23294 016a 06       		.byte	0x6
 23295 016b 42       		.byte	0x42
 23296 016c 1F020000 		.4byte	0x21f
 23297 0170 0C       		.uleb128 0xc
 23298 0171 F8110000 		.4byte	.LASF26
 23299 0175 00       		.byte	0
 23300 0176 0C       		.uleb128 0xc
 23301 0177 7F0E0000 		.4byte	.LASF27
 23302 017b 01       		.byte	0x1
 23303 017c 0C       		.uleb128 0xc
 23304 017d 09060000 		.4byte	.LASF28
 23305 0181 03       		.byte	0x3
 23306 0182 0C       		.uleb128 0xc
 23307 0183 A2030000 		.4byte	.LASF29
 23308 0187 04       		.byte	0x4
 23309 0188 0C       		.uleb128 0xc
 23310 0189 980C0000 		.4byte	.LASF30
 23311 018d 05       		.byte	0x5
 23312 018e 0C       		.uleb128 0xc
 23313 018f 1C070000 		.4byte	.LASF31
 23314 0193 06       		.byte	0x6
 23315 0194 0C       		.uleb128 0xc
 23316 0195 4D060000 		.4byte	.LASF32
 23317 0199 09       		.byte	0x9
 23318 019a 0C       		.uleb128 0xc
 23319 019b 19000000 		.4byte	.LASF33
 23320 019f 0A       		.byte	0xa
 23321 01a0 0C       		.uleb128 0xc
 23322 01a1 0C050000 		.4byte	.LASF34
 23323 01a5 0C       		.byte	0xc
 23324 01a6 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 514


 23325 01a7 F20A0000 		.4byte	.LASF35
 23326 01ab 0D       		.byte	0xd
 23327 01ac 0C       		.uleb128 0xc
 23328 01ad 43000000 		.4byte	.LASF36
 23329 01b1 80       		.byte	0x80
 23330 01b2 0C       		.uleb128 0xc
 23331 01b3 07040000 		.4byte	.LASF37
 23332 01b7 81       		.byte	0x81
 23333 01b8 0C       		.uleb128 0xc
 23334 01b9 FD040000 		.4byte	.LASF38
 23335 01bd 82       		.byte	0x82
 23336 01be 0C       		.uleb128 0xc
 23337 01bf 490E0000 		.4byte	.LASF39
 23338 01c3 83       		.byte	0x83
 23339 01c4 0C       		.uleb128 0xc
 23340 01c5 D20D0000 		.4byte	.LASF40
 23341 01c9 84       		.byte	0x84
 23342 01ca 0C       		.uleb128 0xc
 23343 01cb A7020000 		.4byte	.LASF41
 23344 01cf 85       		.byte	0x85
 23345 01d0 0C       		.uleb128 0xc
 23346 01d1 5E070000 		.4byte	.LASF42
 23347 01d5 86       		.byte	0x86
 23348 01d6 0C       		.uleb128 0xc
 23349 01d7 FC060000 		.4byte	.LASF43
 23350 01db 88       		.byte	0x88
 23351 01dc 0C       		.uleb128 0xc
 23352 01dd FC0E0000 		.4byte	.LASF44
 23353 01e1 89       		.byte	0x89
 23354 01e2 0C       		.uleb128 0xc
 23355 01e3 EE0B0000 		.4byte	.LASF45
 23356 01e7 8B       		.byte	0x8b
 23357 01e8 0C       		.uleb128 0xc
 23358 01e9 5E0A0000 		.4byte	.LASF46
 23359 01ed 8C       		.byte	0x8c
 23360 01ee 0C       		.uleb128 0xc
 23361 01ef 09080000 		.4byte	.LASF47
 23362 01f3 8E       		.byte	0x8e
 23363 01f4 0C       		.uleb128 0xc
 23364 01f5 260C0000 		.4byte	.LASF48
 23365 01f9 90       		.byte	0x90
 23366 01fa 0C       		.uleb128 0xc
 23367 01fb 7D100000 		.4byte	.LASF49
 23368 01ff A1       		.byte	0xa1
 23369 0200 0C       		.uleb128 0xc
 23370 0201 950D0000 		.4byte	.LASF50
 23371 0205 A2       		.byte	0xa2
 23372 0206 0C       		.uleb128 0xc
 23373 0207 AF090000 		.4byte	.LASF51
 23374 020b A3       		.byte	0xa3
 23375 020c 0C       		.uleb128 0xc
 23376 020d A70D0000 		.4byte	.LASF52
 23377 0211 A4       		.byte	0xa4
 23378 0212 0C       		.uleb128 0xc
 23379 0213 6E0E0000 		.4byte	.LASF53
 23380 0217 A5       		.byte	0xa5
 23381 0218 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 515


 23382 0219 5C0D0000 		.4byte	.LASF54
 23383 021d A6       		.byte	0xa6
 23384 021e 00       		.byte	0
 23385 021f 0B       		.uleb128 0xb
 23386 0220 A7110000 		.4byte	.LASF56
 23387 0224 01       		.byte	0x1
 23388 0225 2C000000 		.4byte	0x2c
 23389 0229 06       		.byte	0x6
 23390 022a 8B       		.byte	0x8b
 23391 022b 5A020000 		.4byte	0x25a
 23392 022f 0C       		.uleb128 0xc
 23393 0230 8E050000 		.4byte	.LASF57
 23394 0234 00       		.byte	0
 23395 0235 0C       		.uleb128 0xc
 23396 0236 9B090000 		.4byte	.LASF58
 23397 023a 01       		.byte	0x1
 23398 023b 0C       		.uleb128 0xc
 23399 023c D9010000 		.4byte	.LASF59
 23400 0240 02       		.byte	0x2
 23401 0241 0C       		.uleb128 0xc
 23402 0242 4C010000 		.4byte	.LASF60
 23403 0246 03       		.byte	0x3
 23404 0247 0C       		.uleb128 0xc
 23405 0248 FF000000 		.4byte	.LASF61
 23406 024c 04       		.byte	0x4
 23407 024d 0C       		.uleb128 0xc
 23408 024e 2B000000 		.4byte	.LASF62
 23409 0252 05       		.byte	0x5
 23410 0253 0C       		.uleb128 0xc
 23411 0254 760D0000 		.4byte	.LASF63
 23412 0258 06       		.byte	0x6
 23413 0259 00       		.byte	0
 23414 025a 0B       		.uleb128 0xb
 23415 025b 47080000 		.4byte	.LASF64
 23416 025f 01       		.byte	0x1
 23417 0260 2C000000 		.4byte	0x2c
 23418 0264 06       		.byte	0x6
 23419 0265 9E       		.byte	0x9e
 23420 0266 83020000 		.4byte	0x283
 23421 026a 0C       		.uleb128 0xc
 23422 026b 20110000 		.4byte	.LASF65
 23423 026f 00       		.byte	0
 23424 0270 0C       		.uleb128 0xc
 23425 0271 F0060000 		.4byte	.LASF66
 23426 0275 01       		.byte	0x1
 23427 0276 0C       		.uleb128 0xc
 23428 0277 7D0A0000 		.4byte	.LASF67
 23429 027b 02       		.byte	0x2
 23430 027c 0C       		.uleb128 0xc
 23431 027d F4050000 		.4byte	.LASF68
 23432 0281 03       		.byte	0x3
 23433 0282 00       		.byte	0
 23434 0283 0B       		.uleb128 0xb
 23435 0284 4B030000 		.4byte	.LASF69
 23436 0288 01       		.byte	0x1
 23437 0289 2C000000 		.4byte	0x2c
 23438 028d 06       		.byte	0x6
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 516


 23439 028e A8       		.byte	0xa8
 23440 028f A0020000 		.4byte	0x2a0
 23441 0293 0C       		.uleb128 0xc
 23442 0294 6C0D0000 		.4byte	.LASF70
 23443 0298 00       		.byte	0
 23444 0299 0C       		.uleb128 0xc
 23445 029a 73080000 		.4byte	.LASF71
 23446 029e 01       		.byte	0x1
 23447 029f 00       		.byte	0
 23448 02a0 0B       		.uleb128 0xb
 23449 02a1 3F0B0000 		.4byte	.LASF72
 23450 02a5 01       		.byte	0x1
 23451 02a6 2C000000 		.4byte	0x2c
 23452 02aa 06       		.byte	0x6
 23453 02ab AD       		.byte	0xad
 23454 02ac BD020000 		.4byte	0x2bd
 23455 02b0 0C       		.uleb128 0xc
 23456 02b1 73050000 		.4byte	.LASF73
 23457 02b5 00       		.byte	0
 23458 02b6 0C       		.uleb128 0xc
 23459 02b7 AD060000 		.4byte	.LASF74
 23460 02bb 01       		.byte	0x1
 23461 02bc 00       		.byte	0
 23462 02bd 0B       		.uleb128 0xb
 23463 02be 700F0000 		.4byte	.LASF75
 23464 02c2 01       		.byte	0x1
 23465 02c3 2C000000 		.4byte	0x2c
 23466 02c7 06       		.byte	0x6
 23467 02c8 B5       		.byte	0xb5
 23468 02c9 0A030000 		.4byte	0x30a
 23469 02cd 0C       		.uleb128 0xc
 23470 02ce B4060000 		.4byte	.LASF76
 23471 02d2 00       		.byte	0
 23472 02d3 0C       		.uleb128 0xc
 23473 02d4 B5110000 		.4byte	.LASF77
 23474 02d8 01       		.byte	0x1
 23475 02d9 0C       		.uleb128 0xc
 23476 02da 57080000 		.4byte	.LASF78
 23477 02de 02       		.byte	0x2
 23478 02df 0C       		.uleb128 0xc
 23479 02e0 3A0A0000 		.4byte	.LASF79
 23480 02e4 03       		.byte	0x3
 23481 02e5 0C       		.uleb128 0xc
 23482 02e6 68090000 		.4byte	.LASF80
 23483 02ea 04       		.byte	0x4
 23484 02eb 0C       		.uleb128 0xc
 23485 02ec A70B0000 		.4byte	.LASF81
 23486 02f0 05       		.byte	0x5
 23487 02f1 0C       		.uleb128 0xc
 23488 02f2 990A0000 		.4byte	.LASF82
 23489 02f6 06       		.byte	0x6
 23490 02f7 0C       		.uleb128 0xc
 23491 02f8 FC090000 		.4byte	.LASF83
 23492 02fc 07       		.byte	0x7
 23493 02fd 0C       		.uleb128 0xc
 23494 02fe 51050000 		.4byte	.LASF84
 23495 0302 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 517


 23496 0303 0C       		.uleb128 0xc
 23497 0304 E8050000 		.4byte	.LASF85
 23498 0308 09       		.byte	0x9
 23499 0309 00       		.byte	0
 23500 030a 03       		.uleb128 0x3
 23501 030b 01110000 		.4byte	.LASF86
 23502 030f 07       		.byte	0x7
 23503 0310 7E       		.byte	0x7e
 23504 0311 15030000 		.4byte	0x315
 23505 0315 0D       		.uleb128 0xd
 23506 0316 01110000 		.4byte	.LASF86
 23507 031a 07       		.uleb128 0x7
 23508 031b 04       		.byte	0x4
 23509 031c 0A030000 		.4byte	0x30a
 23510 0320 0E       		.uleb128 0xe
 23511 0321 02080000 		.4byte	.LASF89
 23512 0325 10       		.byte	0x10
 23513 0326 08       		.byte	0x8
 23514 0327 CE       		.byte	0xce
 23515 0328 5D030000 		.4byte	0x35d
 23516 032c 0F       		.uleb128 0xf
 23517 032d 706F7300 		.ascii	"pos\000"
 23518 0331 08       		.byte	0x8
 23519 0332 CF       		.byte	0xcf
 23520 0333 D3000000 		.4byte	0xd3
 23521 0337 00       		.byte	0
 23522 0338 10       		.uleb128 0x10
 23523 0339 E0060000 		.4byte	.LASF87
 23524 033d 08       		.byte	0x8
 23525 033e D0       		.byte	0xd0
 23526 033f D3000000 		.4byte	0xd3
 23527 0343 04       		.byte	0x4
 23528 0344 0F       		.uleb128 0xf
 23529 0345 70776D00 		.ascii	"pwm\000"
 23530 0349 08       		.byte	0x8
 23531 034a D1       		.byte	0xd1
 23532 034b D3000000 		.4byte	0xd3
 23533 034f 08       		.byte	0x8
 23534 0350 10       		.uleb128 0x10
 23535 0351 E80B0000 		.4byte	.LASF88
 23536 0355 08       		.byte	0x8
 23537 0356 D2       		.byte	0xd2
 23538 0357 97000000 		.4byte	0x97
 23539 035b 0C       		.byte	0xc
 23540 035c 00       		.byte	0
 23541 035d 0E       		.uleb128 0xe
 23542 035e 540D0000 		.4byte	.LASF90
 23543 0362 34       		.byte	0x34
 23544 0363 08       		.byte	0x8
 23545 0364 D9       		.byte	0xd9
 23546 0365 BE030000 		.4byte	0x3be
 23547 0369 0F       		.uleb128 0xf
 23548 036a 706F7300 		.ascii	"pos\000"
 23549 036e 08       		.byte	0x8
 23550 036f DA       		.byte	0xda
 23551 0370 BE030000 		.4byte	0x3be
 23552 0374 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 518


 23553 0375 10       		.uleb128 0x10
 23554 0376 E0060000 		.4byte	.LASF87
 23555 037a 08       		.byte	0x8
 23556 037b DB       		.byte	0xdb
 23557 037c D3000000 		.4byte	0xd3
 23558 0380 0C       		.byte	0xc
 23559 0381 10       		.uleb128 0x10
 23560 0382 BD0F0000 		.4byte	.LASF91
 23561 0386 08       		.byte	0x8
 23562 0387 DC       		.byte	0xdc
 23563 0388 D3000000 		.4byte	0xd3
 23564 038c 10       		.byte	0x10
 23565 038d 10       		.uleb128 0x10
 23566 038e 5C060000 		.4byte	.LASF92
 23567 0392 08       		.byte	0x8
 23568 0393 DD       		.byte	0xdd
 23569 0394 D3000000 		.4byte	0xd3
 23570 0398 14       		.byte	0x14
 23571 0399 0F       		.uleb128 0xf
 23572 039a 726F7400 		.ascii	"rot\000"
 23573 039e 08       		.byte	0x8
 23574 039f DE       		.byte	0xde
 23575 03a0 CE030000 		.4byte	0x3ce
 23576 03a4 18       		.byte	0x18
 23577 03a5 0F       		.uleb128 0xf
 23578 03a6 76656C00 		.ascii	"vel\000"
 23579 03aa 08       		.byte	0x8
 23580 03ab DF       		.byte	0xdf
 23581 03ac BE030000 		.4byte	0x3be
 23582 03b0 1C       		.byte	0x1c
 23583 03b1 0F       		.uleb128 0xf
 23584 03b2 61636300 		.ascii	"acc\000"
 23585 03b6 08       		.byte	0x8
 23586 03b7 E0       		.byte	0xe0
 23587 03b8 BE030000 		.4byte	0x3be
 23588 03bc 28       		.byte	0x28
 23589 03bd 00       		.byte	0
 23590 03be 09       		.uleb128 0x9
 23591 03bf D3000000 		.4byte	0xd3
 23592 03c3 CE030000 		.4byte	0x3ce
 23593 03c7 0A       		.uleb128 0xa
 23594 03c8 18010000 		.4byte	0x118
 23595 03cc 02       		.byte	0x2
 23596 03cd 00       		.byte	0
 23597 03ce 09       		.uleb128 0x9
 23598 03cf BB000000 		.4byte	0xbb
 23599 03d3 DE030000 		.4byte	0x3de
 23600 03d7 0A       		.uleb128 0xa
 23601 03d8 18010000 		.4byte	0x118
 23602 03dc 02       		.byte	0x2
 23603 03dd 00       		.byte	0
 23604 03de 0E       		.uleb128 0xe
 23605 03df A50A0000 		.4byte	.LASF93
 23606 03e3 20       		.byte	0x20
 23607 03e4 08       		.byte	0x8
 23608 03e5 E3       		.byte	0xe3
 23609 03e6 03040000 		.4byte	0x403
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 519


 23610 03ea 0F       		.uleb128 0xf
 23611 03eb 656D6700 		.ascii	"emg\000"
 23612 03ef 08       		.byte	0x8
 23613 03f0 E4       		.byte	0xe4
 23614 03f1 03040000 		.4byte	0x403
 23615 03f5 00       		.byte	0
 23616 03f6 10       		.uleb128 0x10
 23617 03f7 320A0000 		.4byte	.LASF94
 23618 03fb 08       		.byte	0x8
 23619 03fc E5       		.byte	0xe5
 23620 03fd 13040000 		.4byte	0x413
 23621 0401 08       		.byte	0x8
 23622 0402 00       		.byte	0
 23623 0403 09       		.uleb128 0x9
 23624 0404 D3000000 		.4byte	0xd3
 23625 0408 13040000 		.4byte	0x413
 23626 040c 0A       		.uleb128 0xa
 23627 040d 18010000 		.4byte	0x118
 23628 0411 01       		.byte	0x1
 23629 0412 00       		.byte	0
 23630 0413 09       		.uleb128 0x9
 23631 0414 D3000000 		.4byte	0xd3
 23632 0418 23040000 		.4byte	0x423
 23633 041c 0A       		.uleb128 0xa
 23634 041d 18010000 		.4byte	0x118
 23635 0421 05       		.byte	0x5
 23636 0422 00       		.byte	0
 23637 0423 0E       		.uleb128 0xe
 23638 0424 62000000 		.4byte	.LASF95
 23639 0428 86       		.byte	0x86
 23640 0429 08       		.byte	0x8
 23641 042a EC       		.byte	0xec
 23642 042b 60040000 		.4byte	0x460
 23643 042f 10       		.uleb128 0x10
 23644 0430 1F050000 		.4byte	.LASF96
 23645 0434 08       		.byte	0x8
 23646 0435 ED       		.byte	0xed
 23647 0436 60040000 		.4byte	0x460
 23648 043a 00       		.byte	0
 23649 043b 10       		.uleb128 0x10
 23650 043c BD0B0000 		.4byte	.LASF97
 23651 0440 08       		.byte	0x8
 23652 0441 EE       		.byte	0xee
 23653 0442 C7000000 		.4byte	0xc7
 23654 0446 80       		.byte	0x80
 23655 0447 0F       		.uleb128 0xf
 23656 0448 696E6400 		.ascii	"ind\000"
 23657 044c 08       		.byte	0x8
 23658 044d EF       		.byte	0xef
 23659 044e C7000000 		.4byte	0xc7
 23660 0452 82       		.byte	0x82
 23661 0453 10       		.uleb128 0x10
 23662 0454 B1010000 		.4byte	.LASF98
 23663 0458 08       		.byte	0x8
 23664 0459 F0       		.byte	0xf0
 23665 045a 97000000 		.4byte	0x97
 23666 045e 84       		.byte	0x84
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 520


 23667 045f 00       		.byte	0
 23668 0460 09       		.uleb128 0x9
 23669 0461 97000000 		.4byte	0x97
 23670 0465 70040000 		.4byte	0x470
 23671 0469 0A       		.uleb128 0xa
 23672 046a 18010000 		.4byte	0x118
 23673 046e 7F       		.byte	0x7f
 23674 046f 00       		.byte	0
 23675 0470 0E       		.uleb128 0xe
 23676 0471 7D020000 		.4byte	.LASF99
 23677 0475 50       		.byte	0x50
 23678 0476 08       		.byte	0x8
 23679 0477 F9       		.byte	0xf9
 23680 0478 D2040000 		.4byte	0x4d2
 23681 047c 10       		.uleb128 0x10
 23682 047d B8020000 		.4byte	.LASF100
 23683 0481 08       		.byte	0x8
 23684 0482 FA       		.byte	0xfa
 23685 0483 D2040000 		.4byte	0x4d2
 23686 0487 00       		.byte	0
 23687 0488 10       		.uleb128 0x10
 23688 0489 91010000 		.4byte	.LASF101
 23689 048d 08       		.byte	0x8
 23690 048e FB       		.byte	0xfb
 23691 048f E2040000 		.4byte	0x4e2
 23692 0493 08       		.byte	0x8
 23693 0494 10       		.uleb128 0x10
 23694 0495 700A0000 		.4byte	.LASF102
 23695 0499 08       		.byte	0x8
 23696 049a FC       		.byte	0xfc
 23697 049b F2040000 		.4byte	0x4f2
 23698 049f 30       		.byte	0x30
 23699 04a0 10       		.uleb128 0x10
 23700 04a1 1F010000 		.4byte	.LASF103
 23701 04a5 08       		.byte	0x8
 23702 04a6 FD       		.byte	0xfd
 23703 04a7 AF000000 		.4byte	0xaf
 23704 04ab 40       		.byte	0x40
 23705 04ac 10       		.uleb128 0x10
 23706 04ad 54110000 		.4byte	.LASF104
 23707 04b1 08       		.byte	0x8
 23708 04b2 FE       		.byte	0xfe
 23709 04b3 AF000000 		.4byte	0xaf
 23710 04b7 44       		.byte	0x44
 23711 04b8 10       		.uleb128 0x10
 23712 04b9 3F060000 		.4byte	.LASF105
 23713 04bd 08       		.byte	0x8
 23714 04be FF       		.byte	0xff
 23715 04bf AF000000 		.4byte	0xaf
 23716 04c3 48       		.byte	0x48
 23717 04c4 11       		.uleb128 0x11
 23718 04c5 7C060000 		.4byte	.LASF106
 23719 04c9 08       		.byte	0x8
 23720 04ca 0001     		.2byte	0x100
 23721 04cc AF000000 		.4byte	0xaf
 23722 04d0 4C       		.byte	0x4c
 23723 04d1 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 521


 23724 04d2 09       		.uleb128 0x9
 23725 04d3 AF000000 		.4byte	0xaf
 23726 04d7 E2040000 		.4byte	0x4e2
 23727 04db 0A       		.uleb128 0xa
 23728 04dc 18010000 		.4byte	0x118
 23729 04e0 01       		.byte	0x1
 23730 04e1 00       		.byte	0
 23731 04e2 09       		.uleb128 0x9
 23732 04e3 AF000000 		.4byte	0xaf
 23733 04e7 F2040000 		.4byte	0x4f2
 23734 04eb 0A       		.uleb128 0xa
 23735 04ec 18010000 		.4byte	0x118
 23736 04f0 09       		.byte	0x9
 23737 04f1 00       		.byte	0
 23738 04f2 09       		.uleb128 0x9
 23739 04f3 AF000000 		.4byte	0xaf
 23740 04f7 02050000 		.4byte	0x502
 23741 04fb 0A       		.uleb128 0xa
 23742 04fc 18010000 		.4byte	0x118
 23743 0500 03       		.byte	0x3
 23744 0501 00       		.byte	0
 23745 0502 12       		.uleb128 0x12
 23746 0503 CF010000 		.4byte	.LASF107
 23747 0507 10       		.byte	0x10
 23748 0508 08       		.byte	0x8
 23749 0509 0701     		.2byte	0x107
 23750 050b 91050000 		.4byte	0x591
 23751 050f 13       		.uleb128 0x13
 23752 0510 696400   		.ascii	"id\000"
 23753 0513 08       		.byte	0x8
 23754 0514 0801     		.2byte	0x108
 23755 0516 97000000 		.4byte	0x97
 23756 051a 00       		.byte	0
 23757 051b 11       		.uleb128 0x11
 23758 051c 580E0000 		.4byte	.LASF108
 23759 0520 08       		.byte	0x8
 23760 0521 0901     		.2byte	0x109
 23761 0523 91050000 		.4byte	0x591
 23762 0527 01       		.byte	0x1
 23763 0528 11       		.uleb128 0x11
 23764 0529 C80E0000 		.4byte	.LASF109
 23765 052d 08       		.byte	0x8
 23766 052e 0A01     		.2byte	0x10a
 23767 0530 91050000 		.4byte	0x591
 23768 0534 04       		.byte	0x4
 23769 0535 11       		.uleb128 0x11
 23770 0536 97030000 		.4byte	.LASF110
 23771 053a 08       		.byte	0x8
 23772 053b 0B01     		.2byte	0x10b
 23773 053d 97000000 		.4byte	0x97
 23774 0541 07       		.byte	0x7
 23775 0542 11       		.uleb128 0x11
 23776 0543 39020000 		.4byte	.LASF111
 23777 0547 08       		.byte	0x8
 23778 0548 0C01     		.2byte	0x10c
 23779 054a 97000000 		.4byte	0x97
 23780 054e 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 522


 23781 054f 11       		.uleb128 0x11
 23782 0550 F5010000 		.4byte	.LASF112
 23783 0554 08       		.byte	0x8
 23784 0555 0D01     		.2byte	0x10d
 23785 0557 97000000 		.4byte	0x97
 23786 055b 09       		.byte	0x9
 23787 055c 11       		.uleb128 0x11
 23788 055d 4F100000 		.4byte	.LASF113
 23789 0561 08       		.byte	0x8
 23790 0562 0E01     		.2byte	0x10e
 23791 0564 97000000 		.4byte	0x97
 23792 0568 0A       		.byte	0xa
 23793 0569 11       		.uleb128 0x11
 23794 056a 13100000 		.4byte	.LASF114
 23795 056e 08       		.byte	0x8
 23796 056f 0F01     		.2byte	0x10f
 23797 0571 97000000 		.4byte	0x97
 23798 0575 0B       		.byte	0xb
 23799 0576 11       		.uleb128 0x11
 23800 0577 FE0C0000 		.4byte	.LASF115
 23801 057b 08       		.byte	0x8
 23802 057c 1001     		.2byte	0x110
 23803 057e 97000000 		.4byte	0x97
 23804 0582 0C       		.byte	0xc
 23805 0583 11       		.uleb128 0x11
 23806 0584 5A020000 		.4byte	.LASF116
 23807 0588 08       		.byte	0x8
 23808 0589 1101     		.2byte	0x111
 23809 058b 91050000 		.4byte	0x591
 23810 058f 0D       		.byte	0xd
 23811 0590 00       		.byte	0
 23812 0591 09       		.uleb128 0x9
 23813 0592 97000000 		.4byte	0x97
 23814 0596 A1050000 		.4byte	0x5a1
 23815 059a 0A       		.uleb128 0xa
 23816 059b 18010000 		.4byte	0x118
 23817 059f 02       		.byte	0x2
 23818 05a0 00       		.byte	0
 23819 05a1 12       		.uleb128 0x12
 23820 05a2 03090000 		.4byte	.LASF117
 23821 05a6 70       		.byte	0x70
 23822 05a7 08       		.byte	0x8
 23823 05a8 1801     		.2byte	0x118
 23824 05aa 1B070000 		.4byte	0x71b
 23825 05ae 13       		.uleb128 0x13
 23826 05af 6B5F7000 		.ascii	"k_p\000"
 23827 05b3 08       		.byte	0x8
 23828 05b4 1901     		.2byte	0x119
 23829 05b6 D3000000 		.4byte	0xd3
 23830 05ba 00       		.byte	0
 23831 05bb 13       		.uleb128 0x13
 23832 05bc 6B5F6900 		.ascii	"k_i\000"
 23833 05c0 08       		.byte	0x8
 23834 05c1 1A01     		.2byte	0x11a
 23835 05c3 D3000000 		.4byte	0xd3
 23836 05c7 04       		.byte	0x4
 23837 05c8 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 523


 23838 05c9 6B5F6400 		.ascii	"k_d\000"
 23839 05cd 08       		.byte	0x8
 23840 05ce 1B01     		.2byte	0x11b
 23841 05d0 D3000000 		.4byte	0xd3
 23842 05d4 08       		.byte	0x8
 23843 05d5 11       		.uleb128 0x11
 23844 05d6 370C0000 		.4byte	.LASF118
 23845 05da 08       		.byte	0x8
 23846 05db 1C01     		.2byte	0x11c
 23847 05dd D3000000 		.4byte	0xd3
 23848 05e1 0C       		.byte	0xc
 23849 05e2 11       		.uleb128 0x11
 23850 05e3 85040000 		.4byte	.LASF119
 23851 05e7 08       		.byte	0x8
 23852 05e8 1D01     		.2byte	0x11d
 23853 05ea D3000000 		.4byte	0xd3
 23854 05ee 10       		.byte	0x10
 23855 05ef 11       		.uleb128 0x11
 23856 05f0 6A040000 		.4byte	.LASF120
 23857 05f4 08       		.byte	0x8
 23858 05f5 1E01     		.2byte	0x11e
 23859 05f7 D3000000 		.4byte	0xd3
 23860 05fb 14       		.byte	0x14
 23861 05fc 11       		.uleb128 0x11
 23862 05fd B60F0000 		.4byte	.LASF121
 23863 0601 08       		.byte	0x8
 23864 0602 1F01     		.2byte	0x11f
 23865 0604 D3000000 		.4byte	0xd3
 23866 0608 18       		.byte	0x18
 23867 0609 11       		.uleb128 0x11
 23868 060a F6040000 		.4byte	.LASF122
 23869 060e 08       		.byte	0x8
 23870 060f 2001     		.2byte	0x120
 23871 0611 D3000000 		.4byte	0xd3
 23872 0615 1C       		.byte	0x1c
 23873 0616 11       		.uleb128 0x11
 23874 0617 230E0000 		.4byte	.LASF123
 23875 061b 08       		.byte	0x8
 23876 061c 2101     		.2byte	0x121
 23877 061e D3000000 		.4byte	0xd3
 23878 0622 20       		.byte	0x20
 23879 0623 11       		.uleb128 0x11
 23880 0624 26050000 		.4byte	.LASF124
 23881 0628 08       		.byte	0x8
 23882 0629 2201     		.2byte	0x122
 23883 062b D3000000 		.4byte	0xd3
 23884 062f 24       		.byte	0x24
 23885 0630 11       		.uleb128 0x11
 23886 0631 C1050000 		.4byte	.LASF125
 23887 0635 08       		.byte	0x8
 23888 0636 2301     		.2byte	0x123
 23889 0638 D3000000 		.4byte	0xd3
 23890 063c 28       		.byte	0x28
 23891 063d 11       		.uleb128 0x11
 23892 063e 01120000 		.4byte	.LASF126
 23893 0642 08       		.byte	0x8
 23894 0643 2401     		.2byte	0x124
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 524


 23895 0645 D3000000 		.4byte	0xd3
 23896 0649 2C       		.byte	0x2c
 23897 064a 11       		.uleb128 0x11
 23898 064b 98060000 		.4byte	.LASF127
 23899 064f 08       		.byte	0x8
 23900 0650 2501     		.2byte	0x125
 23901 0652 97000000 		.4byte	0x97
 23902 0656 30       		.byte	0x30
 23903 0657 11       		.uleb128 0x11
 23904 0658 9F0F0000 		.4byte	.LASF128
 23905 065c 08       		.byte	0x8
 23906 065d 2601     		.2byte	0x126
 23907 065f 97000000 		.4byte	0x97
 23908 0663 31       		.byte	0x31
 23909 0664 11       		.uleb128 0x11
 23910 0665 570C0000 		.4byte	.LASF129
 23911 0669 08       		.byte	0x8
 23912 066a 2701     		.2byte	0x127
 23913 066c 97000000 		.4byte	0x97
 23914 0670 32       		.byte	0x32
 23915 0671 11       		.uleb128 0x11
 23916 0672 09110000 		.4byte	.LASF130
 23917 0676 08       		.byte	0x8
 23918 0677 2801     		.2byte	0x128
 23919 0679 97000000 		.4byte	0x97
 23920 067d 33       		.byte	0x33
 23921 067e 11       		.uleb128 0x11
 23922 067f D3000000 		.4byte	.LASF131
 23923 0683 08       		.byte	0x8
 23924 0684 2901     		.2byte	0x129
 23925 0686 D3000000 		.4byte	0xd3
 23926 068a 34       		.byte	0x34
 23927 068b 11       		.uleb128 0x11
 23928 068c A4040000 		.4byte	.LASF132
 23929 0690 08       		.byte	0x8
 23930 0691 2A01     		.2byte	0x12a
 23931 0693 D3000000 		.4byte	0xd3
 23932 0697 38       		.byte	0x38
 23933 0698 11       		.uleb128 0x11
 23934 0699 B6080000 		.4byte	.LASF133
 23935 069d 08       		.byte	0x8
 23936 069e 2B01     		.2byte	0x12b
 23937 06a0 D3000000 		.4byte	0xd3
 23938 06a4 3C       		.byte	0x3c
 23939 06a5 11       		.uleb128 0x11
 23940 06a6 1D040000 		.4byte	.LASF134
 23941 06aa 08       		.byte	0x8
 23942 06ab 2C01     		.2byte	0x12c
 23943 06ad D3000000 		.4byte	0xd3
 23944 06b1 40       		.byte	0x40
 23945 06b2 11       		.uleb128 0x11
 23946 06b3 13010000 		.4byte	.LASF135
 23947 06b7 08       		.byte	0x8
 23948 06b8 2D01     		.2byte	0x12d
 23949 06ba 1B070000 		.4byte	0x71b
 23950 06be 44       		.byte	0x44
 23951 06bf 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 525


 23952 06c0 99110000 		.4byte	.LASF136
 23953 06c4 08       		.byte	0x8
 23954 06c5 2E01     		.2byte	0x12e
 23955 06c7 C7000000 		.4byte	0xc7
 23956 06cb 5C       		.byte	0x5c
 23957 06cc 11       		.uleb128 0x11
 23958 06cd E5060000 		.4byte	.LASF137
 23959 06d1 08       		.byte	0x8
 23960 06d2 2F01     		.2byte	0x12f
 23961 06d4 97000000 		.4byte	0x97
 23962 06d8 5E       		.byte	0x5e
 23963 06d9 11       		.uleb128 0x11
 23964 06da 88090000 		.4byte	.LASF138
 23965 06de 08       		.byte	0x8
 23966 06df 3001     		.2byte	0x130
 23967 06e1 97000000 		.4byte	0x97
 23968 06e5 5F       		.byte	0x5f
 23969 06e6 11       		.uleb128 0x11
 23970 06e7 BB030000 		.4byte	.LASF139
 23971 06eb 08       		.byte	0x8
 23972 06ec 3101     		.2byte	0x131
 23973 06ee 97000000 		.4byte	0x97
 23974 06f2 60       		.byte	0x60
 23975 06f3 11       		.uleb128 0x11
 23976 06f4 59040000 		.4byte	.LASF140
 23977 06f8 08       		.byte	0x8
 23978 06f9 3201     		.2byte	0x132
 23979 06fb 97000000 		.4byte	0x97
 23980 06ff 61       		.byte	0x61
 23981 0700 11       		.uleb128 0x11
 23982 0701 78030000 		.4byte	.LASF141
 23983 0705 08       		.byte	0x8
 23984 0706 3301     		.2byte	0x133
 23985 0708 97000000 		.4byte	0x97
 23986 070c 62       		.byte	0x62
 23987 070d 11       		.uleb128 0x11
 23988 070e 5A020000 		.4byte	.LASF116
 23989 0712 08       		.byte	0x8
 23990 0713 3401     		.2byte	0x134
 23991 0715 2B070000 		.4byte	0x72b
 23992 0719 63       		.byte	0x63
 23993 071a 00       		.byte	0
 23994 071b 09       		.uleb128 0x9
 23995 071c EB000000 		.4byte	0xeb
 23996 0720 2B070000 		.4byte	0x72b
 23997 0724 0A       		.uleb128 0xa
 23998 0725 18010000 		.4byte	0x118
 23999 0729 05       		.byte	0x5
 24000 072a 00       		.byte	0
 24001 072b 09       		.uleb128 0x9
 24002 072c 97000000 		.4byte	0x97
 24003 0730 3B070000 		.4byte	0x73b
 24004 0734 0A       		.uleb128 0xa
 24005 0735 18010000 		.4byte	0x118
 24006 0739 0C       		.byte	0xc
 24007 073a 00       		.byte	0
 24008 073b 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 526


 24009 073c B7100000 		.4byte	.LASF142
 24010 0740 30       		.byte	0x30
 24011 0741 08       		.byte	0x8
 24012 0742 3B01     		.2byte	0x13b
 24013 0744 BE070000 		.4byte	0x7be
 24014 0748 11       		.uleb128 0x11
 24015 0749 98080000 		.4byte	.LASF143
 24016 074d 08       		.byte	0x8
 24017 074e 3C01     		.2byte	0x13c
 24018 0750 BE070000 		.4byte	0x7be
 24019 0754 00       		.byte	0
 24020 0755 13       		.uleb128 0x13
 24021 0756 72657300 		.ascii	"res\000"
 24022 075a 08       		.byte	0x8
 24023 075b 3D01     		.2byte	0x13d
 24024 075d 91050000 		.4byte	0x591
 24025 0761 05       		.byte	0x5
 24026 0762 11       		.uleb128 0x11
 24027 0763 A7060000 		.4byte	.LASF144
 24028 0767 08       		.byte	0x8
 24029 0768 3E01     		.2byte	0x13e
 24030 076a BE030000 		.4byte	0x3be
 24031 076e 08       		.byte	0x8
 24032 076f 11       		.uleb128 0x11
 24033 0770 7E040000 		.4byte	.LASF145
 24034 0774 08       		.byte	0x8
 24035 0775 3F01     		.2byte	0x13f
 24036 0777 CE070000 		.4byte	0x7ce
 24037 077b 14       		.byte	0x14
 24038 077c 11       		.uleb128 0x11
 24039 077d 1A0B0000 		.4byte	.LASF146
 24040 0781 08       		.byte	0x8
 24041 0782 4001     		.2byte	0x140
 24042 0784 97000000 		.4byte	0x97
 24043 0788 20       		.byte	0x20
 24044 0789 11       		.uleb128 0x11
 24045 078a B7010000 		.4byte	.LASF147
 24046 078e 08       		.byte	0x8
 24047 078f 4101     		.2byte	0x141
 24048 0791 91050000 		.4byte	0x591
 24049 0795 21       		.byte	0x21
 24050 0796 11       		.uleb128 0x11
 24051 0797 CD0A0000 		.4byte	.LASF148
 24052 079b 08       		.byte	0x8
 24053 079c 4201     		.2byte	0x142
 24054 079e BB000000 		.4byte	0xbb
 24055 07a2 24       		.byte	0x24
 24056 07a3 11       		.uleb128 0x11
 24057 07a4 250D0000 		.4byte	.LASF149
 24058 07a8 08       		.byte	0x8
 24059 07a9 4301     		.2byte	0x143
 24060 07ab CE030000 		.4byte	0x3ce
 24061 07af 25       		.byte	0x25
 24062 07b0 11       		.uleb128 0x11
 24063 07b1 5A020000 		.4byte	.LASF116
 24064 07b5 08       		.byte	0x8
 24065 07b6 4401     		.2byte	0x144
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 527


 24066 07b8 DE070000 		.4byte	0x7de
 24067 07bc 28       		.byte	0x28
 24068 07bd 00       		.byte	0
 24069 07be 09       		.uleb128 0x9
 24070 07bf 97000000 		.4byte	0x97
 24071 07c3 CE070000 		.4byte	0x7ce
 24072 07c7 0A       		.uleb128 0xa
 24073 07c8 18010000 		.4byte	0x118
 24074 07cc 04       		.byte	0x4
 24075 07cd 00       		.byte	0
 24076 07ce 09       		.uleb128 0x9
 24077 07cf DF000000 		.4byte	0xdf
 24078 07d3 DE070000 		.4byte	0x7de
 24079 07d7 0A       		.uleb128 0xa
 24080 07d8 18010000 		.4byte	0x118
 24081 07dc 02       		.byte	0x2
 24082 07dd 00       		.byte	0
 24083 07de 09       		.uleb128 0x9
 24084 07df 97000000 		.4byte	0x97
 24085 07e3 EE070000 		.4byte	0x7ee
 24086 07e7 0A       		.uleb128 0xa
 24087 07e8 18010000 		.4byte	0x118
 24088 07ec 07       		.byte	0x7
 24089 07ed 00       		.byte	0
 24090 07ee 12       		.uleb128 0x12
 24091 07ef 8A010000 		.4byte	.LASF150
 24092 07f3 10       		.byte	0x10
 24093 07f4 08       		.byte	0x8
 24094 07f5 4B01     		.2byte	0x14b
 24095 07f7 4A080000 		.4byte	0x84a
 24096 07fb 11       		.uleb128 0x11
 24097 07fc 500A0000 		.4byte	.LASF151
 24098 0800 08       		.byte	0x8
 24099 0801 4C01     		.2byte	0x14c
 24100 0803 4A080000 		.4byte	0x84a
 24101 0807 00       		.byte	0
 24102 0808 11       		.uleb128 0x11
 24103 0809 5E110000 		.4byte	.LASF152
 24104 080d 08       		.byte	0x8
 24105 080e 4D01     		.2byte	0x14d
 24106 0810 D2040000 		.4byte	0x4d2
 24107 0814 04       		.byte	0x4
 24108 0815 11       		.uleb128 0x11
 24109 0816 B0040000 		.4byte	.LASF153
 24110 081a 08       		.byte	0x8
 24111 081b 4E01     		.2byte	0x14e
 24112 081d 97000000 		.4byte	0x97
 24113 0821 0C       		.byte	0xc
 24114 0822 11       		.uleb128 0x11
 24115 0823 3F0D0000 		.4byte	.LASF154
 24116 0827 08       		.byte	0x8
 24117 0828 4F01     		.2byte	0x14f
 24118 082a 97000000 		.4byte	0x97
 24119 082e 0D       		.byte	0xd
 24120 082f 11       		.uleb128 0x11
 24121 0830 940F0000 		.4byte	.LASF155
 24122 0834 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 528


 24123 0835 5001     		.2byte	0x150
 24124 0837 97000000 		.4byte	0x97
 24125 083b 0E       		.byte	0xe
 24126 083c 11       		.uleb128 0x11
 24127 083d 5A020000 		.4byte	.LASF116
 24128 0841 08       		.byte	0x8
 24129 0842 5101     		.2byte	0x151
 24130 0844 5A080000 		.4byte	0x85a
 24131 0848 0F       		.byte	0xf
 24132 0849 00       		.byte	0
 24133 084a 09       		.uleb128 0x9
 24134 084b A3000000 		.4byte	0xa3
 24135 084f 5A080000 		.4byte	0x85a
 24136 0853 0A       		.uleb128 0xa
 24137 0854 18010000 		.4byte	0x118
 24138 0858 01       		.byte	0x1
 24139 0859 00       		.byte	0
 24140 085a 09       		.uleb128 0x9
 24141 085b 97000000 		.4byte	0x97
 24142 085f 6A080000 		.4byte	0x86a
 24143 0863 0A       		.uleb128 0xa
 24144 0864 18010000 		.4byte	0x118
 24145 0868 00       		.byte	0
 24146 0869 00       		.byte	0
 24147 086a 12       		.uleb128 0x12
 24148 086b C4090000 		.4byte	.LASF156
 24149 086f 20       		.byte	0x20
 24150 0870 08       		.byte	0x8
 24151 0871 5801     		.2byte	0x158
 24152 0873 AC080000 		.4byte	0x8ac
 24153 0877 11       		.uleb128 0x11
 24154 0878 08020000 		.4byte	.LASF157
 24155 087c 08       		.byte	0x8
 24156 087d 5901     		.2byte	0x159
 24157 087f 97000000 		.4byte	0x97
 24158 0883 00       		.byte	0
 24159 0884 11       		.uleb128 0x11
 24160 0885 300B0000 		.4byte	.LASF158
 24161 0889 08       		.byte	0x8
 24162 088a 5A01     		.2byte	0x15a
 24163 088c 97000000 		.4byte	0x97
 24164 0890 01       		.byte	0x1
 24165 0891 11       		.uleb128 0x11
 24166 0892 F0080000 		.4byte	.LASF159
 24167 0896 08       		.byte	0x8
 24168 0897 5B01     		.2byte	0x15b
 24169 0899 AC080000 		.4byte	0x8ac
 24170 089d 02       		.byte	0x2
 24171 089e 11       		.uleb128 0x11
 24172 089f 5A020000 		.4byte	.LASF116
 24173 08a3 08       		.byte	0x8
 24174 08a4 5C01     		.2byte	0x15c
 24175 08a6 BE070000 		.4byte	0x7be
 24176 08aa 1B       		.byte	0x1b
 24177 08ab 00       		.byte	0
 24178 08ac 09       		.uleb128 0x9
 24179 08ad 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 529


 24180 08b1 C2080000 		.4byte	0x8c2
 24181 08b5 0A       		.uleb128 0xa
 24182 08b6 18010000 		.4byte	0x118
 24183 08ba 04       		.byte	0x4
 24184 08bb 0A       		.uleb128 0xa
 24185 08bc 18010000 		.4byte	0x118
 24186 08c0 04       		.byte	0x4
 24187 08c1 00       		.byte	0
 24188 08c2 12       		.uleb128 0x12
 24189 08c3 320D0000 		.4byte	.LASF160
 24190 08c7 20       		.byte	0x20
 24191 08c8 08       		.byte	0x8
 24192 08c9 6301     		.2byte	0x163
 24193 08cb 11090000 		.4byte	0x911
 24194 08cf 11       		.uleb128 0x11
 24195 08d0 100B0000 		.4byte	.LASF161
 24196 08d4 08       		.byte	0x8
 24197 08d5 6401     		.2byte	0x164
 24198 08d7 11090000 		.4byte	0x911
 24199 08db 00       		.byte	0
 24200 08dc 11       		.uleb128 0x11
 24201 08dd 810F0000 		.4byte	.LASF162
 24202 08e1 08       		.byte	0x8
 24203 08e2 6501     		.2byte	0x165
 24204 08e4 97000000 		.4byte	0x97
 24205 08e8 06       		.byte	0x6
 24206 08e9 11       		.uleb128 0x11
 24207 08ea D60F0000 		.4byte	.LASF163
 24208 08ee 08       		.byte	0x8
 24209 08ef 6601     		.2byte	0x166
 24210 08f1 97000000 		.4byte	0x97
 24211 08f5 07       		.byte	0x7
 24212 08f6 11       		.uleb128 0x11
 24213 08f7 D5040000 		.4byte	.LASF164
 24214 08fb 08       		.byte	0x8
 24215 08fc 6701     		.2byte	0x167
 24216 08fe 21090000 		.4byte	0x921
 24217 0902 08       		.byte	0x8
 24218 0903 11       		.uleb128 0x11
 24219 0904 5A020000 		.4byte	.LASF116
 24220 0908 08       		.byte	0x8
 24221 0909 6801     		.2byte	0x168
 24222 090b 21090000 		.4byte	0x921
 24223 090f 14       		.byte	0x14
 24224 0910 00       		.byte	0
 24225 0911 09       		.uleb128 0x9
 24226 0912 97000000 		.4byte	0x97
 24227 0916 21090000 		.4byte	0x921
 24228 091a 0A       		.uleb128 0xa
 24229 091b 18010000 		.4byte	0x118
 24230 091f 05       		.byte	0x5
 24231 0920 00       		.byte	0
 24232 0921 09       		.uleb128 0x9
 24233 0922 97000000 		.4byte	0x97
 24234 0926 31090000 		.4byte	0x931
 24235 092a 0A       		.uleb128 0xa
 24236 092b 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 530


 24237 092f 0B       		.byte	0xb
 24238 0930 00       		.byte	0
 24239 0931 12       		.uleb128 0x12
 24240 0932 070D0000 		.4byte	.LASF165
 24241 0936 20       		.byte	0x20
 24242 0937 08       		.byte	0x8
 24243 0938 6F01     		.2byte	0x16f
 24244 093a 66090000 		.4byte	0x966
 24245 093e 11       		.uleb128 0x11
 24246 093f 18030000 		.4byte	.LASF166
 24247 0943 08       		.byte	0x8
 24248 0944 7001     		.2byte	0x170
 24249 0946 40010000 		.4byte	0x140
 24250 094a 00       		.byte	0
 24251 094b 11       		.uleb128 0x11
 24252 094c 48020000 		.4byte	.LASF167
 24253 0950 08       		.byte	0x8
 24254 0951 7101     		.2byte	0x171
 24255 0953 EE070000 		.4byte	0x7ee
 24256 0957 08       		.byte	0x8
 24257 0958 11       		.uleb128 0x11
 24258 0959 5A020000 		.4byte	.LASF116
 24259 095d 08       		.byte	0x8
 24260 095e 7201     		.2byte	0x172
 24261 0960 DE070000 		.4byte	0x7de
 24262 0964 18       		.byte	0x18
 24263 0965 00       		.byte	0
 24264 0966 12       		.uleb128 0x12
 24265 0967 1D080000 		.4byte	.LASF168
 24266 096b 10       		.byte	0x10
 24267 096c 08       		.byte	0x8
 24268 096d 7901     		.2byte	0x179
 24269 096f B5090000 		.4byte	0x9b5
 24270 0973 11       		.uleb128 0x11
 24271 0974 D7060000 		.4byte	.LASF169
 24272 0978 08       		.byte	0x8
 24273 0979 7A01     		.2byte	0x17a
 24274 097b D3000000 		.4byte	0xd3
 24275 097f 00       		.byte	0
 24276 0980 11       		.uleb128 0x11
 24277 0981 E5110000 		.4byte	.LASF170
 24278 0985 08       		.byte	0x8
 24279 0986 7B01     		.2byte	0x17b
 24280 0988 D3000000 		.4byte	0xd3
 24281 098c 04       		.byte	0x4
 24282 098d 11       		.uleb128 0x11
 24283 098e BA040000 		.4byte	.LASF171
 24284 0992 08       		.byte	0x8
 24285 0993 7C01     		.2byte	0x17c
 24286 0995 D3000000 		.4byte	0xd3
 24287 0999 08       		.byte	0x8
 24288 099a 11       		.uleb128 0x11
 24289 099b A8050000 		.4byte	.LASF172
 24290 099f 08       		.byte	0x8
 24291 09a0 7D01     		.2byte	0x17d
 24292 09a2 97000000 		.4byte	0x97
 24293 09a6 0C       		.byte	0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 531


 24294 09a7 11       		.uleb128 0x11
 24295 09a8 5A020000 		.4byte	.LASF116
 24296 09ac 08       		.byte	0x8
 24297 09ad 7E01     		.2byte	0x17e
 24298 09af 91050000 		.4byte	0x591
 24299 09b3 0D       		.byte	0xd
 24300 09b4 00       		.byte	0
 24301 09b5 14       		.uleb128 0x14
 24302 09b6 C8100000 		.4byte	.LASF173
 24303 09ba B002     		.2byte	0x2b0
 24304 09bc 08       		.byte	0x8
 24305 09bd 8601     		.2byte	0x186
 24306 09bf 650A0000 		.4byte	0xa65
 24307 09c3 11       		.uleb128 0x11
 24308 09c4 74090000 		.4byte	.LASF174
 24309 09c8 08       		.byte	0x8
 24310 09c9 8801     		.2byte	0x188
 24311 09cb 97000000 		.4byte	0x97
 24312 09cf 00       		.byte	0
 24313 09d0 11       		.uleb128 0x11
 24314 09d1 5A020000 		.4byte	.LASF116
 24315 09d5 08       		.byte	0x8
 24316 09d6 8901     		.2byte	0x189
 24317 09d8 650A0000 		.4byte	0xa65
 24318 09dc 01       		.byte	0x1
 24319 09dd 13       		.uleb128 0x13
 24320 09de 636E7400 		.ascii	"cnt\000"
 24321 09e2 08       		.byte	0x8
 24322 09e3 8A01     		.2byte	0x18a
 24323 09e5 70040000 		.4byte	0x470
 24324 09e9 10       		.byte	0x10
 24325 09ea 11       		.uleb128 0x11
 24326 09eb 2B020000 		.4byte	.LASF175
 24327 09ef 08       		.byte	0x8
 24328 09f0 8B01     		.2byte	0x18b
 24329 09f2 750A0000 		.4byte	0xa75
 24330 09f6 60       		.byte	0x60
 24331 09f7 13       		.uleb128 0x13
 24332 09f8 64657600 		.ascii	"dev\000"
 24333 09fc 08       		.byte	0x8
 24334 09fd 8C01     		.2byte	0x18c
 24335 09ff 02050000 		.4byte	0x502
 24336 0a03 A0       		.byte	0xa0
 24337 0a04 11       		.uleb128 0x11
 24338 0a05 330E0000 		.4byte	.LASF176
 24339 0a09 08       		.byte	0x8
 24340 0a0a 8D01     		.2byte	0x18d
 24341 0a0c 850A0000 		.4byte	0xa85
 24342 0a10 B0       		.byte	0xb0
 24343 0a11 15       		.uleb128 0x15
 24344 0a12 656E6300 		.ascii	"enc\000"
 24345 0a16 08       		.byte	0x8
 24346 0a17 8E01     		.2byte	0x18e
 24347 0a19 950A0000 		.4byte	0xa95
 24348 0a1d 9001     		.2byte	0x190
 24349 0a1f 15       		.uleb128 0x15
 24350 0a20 656D6700 		.ascii	"emg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 532


 24351 0a24 08       		.byte	0x8
 24352 0a25 8F01     		.2byte	0x18f
 24353 0a27 EE070000 		.4byte	0x7ee
 24354 0a2b F001     		.2byte	0x1f0
 24355 0a2d 15       		.uleb128 0x15
 24356 0a2e 696D7500 		.ascii	"imu\000"
 24357 0a32 08       		.byte	0x8
 24358 0a33 9001     		.2byte	0x190
 24359 0a35 6A080000 		.4byte	0x86a
 24360 0a39 0002     		.2byte	0x200
 24361 0a3b 15       		.uleb128 0x15
 24362 0a3c 65787000 		.ascii	"exp\000"
 24363 0a40 08       		.byte	0x8
 24364 0a41 9101     		.2byte	0x191
 24365 0a43 C2080000 		.4byte	0x8c2
 24366 0a47 2002     		.2byte	0x220
 24367 0a49 16       		.uleb128 0x16
 24368 0a4a 50000000 		.4byte	.LASF177
 24369 0a4e 08       		.byte	0x8
 24370 0a4f 9201     		.2byte	0x192
 24371 0a51 A50A0000 		.4byte	0xaa5
 24372 0a55 4002     		.2byte	0x240
 24373 0a57 15       		.uleb128 0x15
 24374 0a58 534800   		.ascii	"SH\000"
 24375 0a5b 08       		.byte	0x8
 24376 0a5c 9401     		.2byte	0x194
 24377 0a5e 66090000 		.4byte	0x966
 24378 0a62 A002     		.2byte	0x2a0
 24379 0a64 00       		.byte	0
 24380 0a65 09       		.uleb128 0x9
 24381 0a66 97000000 		.4byte	0x97
 24382 0a6a 750A0000 		.4byte	0xa75
 24383 0a6e 0A       		.uleb128 0xa
 24384 0a6f 18010000 		.4byte	0x118
 24385 0a73 0E       		.byte	0xe
 24386 0a74 00       		.byte	0
 24387 0a75 09       		.uleb128 0x9
 24388 0a76 97000000 		.4byte	0x97
 24389 0a7a 850A0000 		.4byte	0xa85
 24390 0a7e 0A       		.uleb128 0xa
 24391 0a7f 18010000 		.4byte	0x118
 24392 0a83 3F       		.byte	0x3f
 24393 0a84 00       		.byte	0
 24394 0a85 09       		.uleb128 0x9
 24395 0a86 A1050000 		.4byte	0x5a1
 24396 0a8a 950A0000 		.4byte	0xa95
 24397 0a8e 0A       		.uleb128 0xa
 24398 0a8f 18010000 		.4byte	0x118
 24399 0a93 01       		.byte	0x1
 24400 0a94 00       		.byte	0
 24401 0a95 09       		.uleb128 0x9
 24402 0a96 3B070000 		.4byte	0x73b
 24403 0a9a A50A0000 		.4byte	0xaa5
 24404 0a9e 0A       		.uleb128 0xa
 24405 0a9f 18010000 		.4byte	0x118
 24406 0aa3 01       		.byte	0x1
 24407 0aa4 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 533


 24408 0aa5 09       		.uleb128 0x9
 24409 0aa6 31090000 		.4byte	0x931
 24410 0aaa B50A0000 		.4byte	0xab5
 24411 0aae 0A       		.uleb128 0xa
 24412 0aaf 18010000 		.4byte	0x118
 24413 0ab3 02       		.byte	0x2
 24414 0ab4 00       		.byte	0
 24415 0ab5 12       		.uleb128 0x12
 24416 0ab6 D20B0000 		.4byte	.LASF178
 24417 0aba 28       		.byte	0x28
 24418 0abb 08       		.byte	0x8
 24419 0abc A201     		.2byte	0x1a2
 24420 0abe 110B0000 		.4byte	0xb11
 24421 0ac2 11       		.uleb128 0x11
 24422 0ac3 EE030000 		.4byte	.LASF179
 24423 0ac7 08       		.byte	0x8
 24424 0ac8 A301     		.2byte	0x1a3
 24425 0aca 97000000 		.4byte	0x97
 24426 0ace 00       		.byte	0
 24427 0acf 11       		.uleb128 0x11
 24428 0ad0 67020000 		.4byte	.LASF180
 24429 0ad4 08       		.byte	0x8
 24430 0ad5 A401     		.2byte	0x1a4
 24431 0ad7 110B0000 		.4byte	0xb11
 24432 0adb 02       		.byte	0x2
 24433 0adc 11       		.uleb128 0x11
 24434 0add 050B0000 		.4byte	.LASF181
 24435 0ae1 08       		.byte	0x8
 24436 0ae2 A501     		.2byte	0x1a5
 24437 0ae4 110B0000 		.4byte	0xb11
 24438 0ae8 08       		.byte	0x8
 24439 0ae9 11       		.uleb128 0x11
 24440 0aea DE0B0000 		.4byte	.LASF182
 24441 0aee 08       		.byte	0x8
 24442 0aef A601     		.2byte	0x1a6
 24443 0af1 110B0000 		.4byte	0xb11
 24444 0af5 0E       		.byte	0xe
 24445 0af6 11       		.uleb128 0x11
 24446 0af7 BE060000 		.4byte	.LASF183
 24447 0afb 08       		.byte	0x8
 24448 0afc A701     		.2byte	0x1a7
 24449 0afe 210B0000 		.4byte	0xb21
 24450 0b02 14       		.byte	0x14
 24451 0b03 11       		.uleb128 0x11
 24452 0b04 9F010000 		.4byte	.LASF184
 24453 0b08 08       		.byte	0x8
 24454 0b09 A801     		.2byte	0x1a8
 24455 0b0b C7000000 		.4byte	0xc7
 24456 0b0f 24       		.byte	0x24
 24457 0b10 00       		.byte	0
 24458 0b11 09       		.uleb128 0x9
 24459 0b12 C7000000 		.4byte	0xc7
 24460 0b16 210B0000 		.4byte	0xb21
 24461 0b1a 0A       		.uleb128 0xa
 24462 0b1b 18010000 		.4byte	0x118
 24463 0b1f 02       		.byte	0x2
 24464 0b20 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 534


 24465 0b21 09       		.uleb128 0x9
 24466 0b22 EB000000 		.4byte	0xeb
 24467 0b26 310B0000 		.4byte	0xb31
 24468 0b2a 0A       		.uleb128 0xa
 24469 0b2b 18010000 		.4byte	0x118
 24470 0b2f 03       		.byte	0x3
 24471 0b30 00       		.byte	0
 24472 0b31 12       		.uleb128 0x12
 24473 0b32 29030000 		.4byte	.LASF185
 24474 0b36 06       		.byte	0x6
 24475 0b37 08       		.byte	0x8
 24476 0b38 B801     		.2byte	0x1b8
 24477 0b3a 730B0000 		.4byte	0xb73
 24478 0b3e 11       		.uleb128 0x11
 24479 0b3f 25060000 		.4byte	.LASF186
 24480 0b43 08       		.byte	0x8
 24481 0b44 B901     		.2byte	0x1b9
 24482 0b46 97000000 		.4byte	0x97
 24483 0b4a 00       		.byte	0
 24484 0b4b 11       		.uleb128 0x11
 24485 0b4c 0A120000 		.4byte	.LASF187
 24486 0b50 08       		.byte	0x8
 24487 0b51 BA01     		.2byte	0x1ba
 24488 0b53 97000000 		.4byte	0x97
 24489 0b57 01       		.byte	0x1
 24490 0b58 11       		.uleb128 0x11
 24491 0b59 44050000 		.4byte	.LASF188
 24492 0b5d 08       		.byte	0x8
 24493 0b5e BB01     		.2byte	0x1bb
 24494 0b60 C7000000 		.4byte	0xc7
 24495 0b64 02       		.byte	0x2
 24496 0b65 11       		.uleb128 0x11
 24497 0b66 AA080000 		.4byte	.LASF189
 24498 0b6a 08       		.byte	0x8
 24499 0b6b BC01     		.2byte	0x1bc
 24500 0b6d C7000000 		.4byte	0xc7
 24501 0b71 04       		.byte	0x4
 24502 0b72 00       		.byte	0
 24503 0b73 17       		.uleb128 0x17
 24504 0b74 DD0C0000 		.4byte	.LASF341
 24505 0b78 02       		.byte	0x2
 24506 0b79 1403     		.2byte	0x314
 24507 0b7b 8C000000 		.4byte	0x8c
 24508 0b7f 03       		.byte	0x3
 24509 0b80 9D0B0000 		.4byte	0xb9d
 24510 0b84 18       		.uleb128 0x18
 24511 0b85 E8030000 		.4byte	.LASF269
 24512 0b89 02       		.byte	0x2
 24513 0b8a 1403     		.2byte	0x314
 24514 0b8c 8C000000 		.4byte	0x8c
 24515 0b90 19       		.uleb128 0x19
 24516 0b91 AA010000 		.4byte	.LASF342
 24517 0b95 02       		.byte	0x2
 24518 0b96 1603     		.2byte	0x316
 24519 0b98 8C000000 		.4byte	0x8c
 24520 0b9c 00       		.byte	0
 24521 0b9d 1A       		.uleb128 0x1a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 535


 24522 0b9e 010E0000 		.4byte	.LASF190
 24523 0ba2 01       		.byte	0x1
 24524 0ba3 3D       		.byte	0x3d
 24525 0ba4 00000000 		.4byte	.LFB64
 24526 0ba8 DC040000 		.4byte	.LFE64-.LFB64
 24527 0bac 01       		.uleb128 0x1
 24528 0bad 9C       		.byte	0x9c
 24529 0bae 470C0000 		.4byte	0xc47
 24530 0bb2 1B       		.uleb128 0x1b
 24531 0bb3 4A050000 		.4byte	.LASF192
 24532 0bb7 01       		.byte	0x1
 24533 0bb8 3F       		.byte	0x3f
 24534 0bb9 97000000 		.4byte	0x97
 24535 0bbd 02       		.uleb128 0x2
 24536 0bbe 91       		.byte	0x91
 24537 0bbf 77       		.sleb128 -9
 24538 0bc0 1C       		.uleb128 0x1c
 24539 0bc1 730B0000 		.4byte	0xb73
 24540 0bc5 36030000 		.4byte	.LBB8
 24541 0bc9 08000000 		.4byte	.LBE8-.LBB8
 24542 0bcd 01       		.byte	0x1
 24543 0bce 96       		.byte	0x96
 24544 0bcf EE0B0000 		.4byte	0xbee
 24545 0bd3 1D       		.uleb128 0x1d
 24546 0bd4 840B0000 		.4byte	0xb84
 24547 0bd8 02       		.uleb128 0x2
 24548 0bd9 91       		.byte	0x91
 24549 0bda 68       		.sleb128 -24
 24550 0bdb 1E       		.uleb128 0x1e
 24551 0bdc 36030000 		.4byte	.LBB9
 24552 0be0 08000000 		.4byte	.LBE9-.LBB9
 24553 0be4 1F       		.uleb128 0x1f
 24554 0be5 900B0000 		.4byte	0xb90
 24555 0be9 02       		.uleb128 0x2
 24556 0bea 91       		.byte	0x91
 24557 0beb 64       		.sleb128 -28
 24558 0bec 00       		.byte	0
 24559 0bed 00       		.byte	0
 24560 0bee 1C       		.uleb128 0x1c
 24561 0bef 730B0000 		.4byte	0xb73
 24562 0bf3 54030000 		.4byte	.LBB10
 24563 0bf7 08000000 		.4byte	.LBE10-.LBB10
 24564 0bfb 01       		.byte	0x1
 24565 0bfc A2       		.byte	0xa2
 24566 0bfd 1C0C0000 		.4byte	0xc1c
 24567 0c01 1D       		.uleb128 0x1d
 24568 0c02 840B0000 		.4byte	0xb84
 24569 0c06 02       		.uleb128 0x2
 24570 0c07 91       		.byte	0x91
 24571 0c08 70       		.sleb128 -16
 24572 0c09 1E       		.uleb128 0x1e
 24573 0c0a 54030000 		.4byte	.LBB11
 24574 0c0e 08000000 		.4byte	.LBE11-.LBB11
 24575 0c12 1F       		.uleb128 0x1f
 24576 0c13 900B0000 		.4byte	0xb90
 24577 0c17 02       		.uleb128 0x2
 24578 0c18 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 536


 24579 0c19 60       		.sleb128 -32
 24580 0c1a 00       		.byte	0
 24581 0c1b 00       		.byte	0
 24582 0c1c 20       		.uleb128 0x20
 24583 0c1d 730B0000 		.4byte	0xb73
 24584 0c21 98040000 		.4byte	.LBB12
 24585 0c25 08000000 		.4byte	.LBE12-.LBB12
 24586 0c29 01       		.byte	0x1
 24587 0c2a FE       		.byte	0xfe
 24588 0c2b 1D       		.uleb128 0x1d
 24589 0c2c 840B0000 		.4byte	0xb84
 24590 0c30 02       		.uleb128 0x2
 24591 0c31 91       		.byte	0x91
 24592 0c32 6C       		.sleb128 -20
 24593 0c33 1E       		.uleb128 0x1e
 24594 0c34 98040000 		.4byte	.LBB13
 24595 0c38 08000000 		.4byte	.LBE13-.LBB13
 24596 0c3c 1F       		.uleb128 0x1f
 24597 0c3d 900B0000 		.4byte	0xb90
 24598 0c41 02       		.uleb128 0x2
 24599 0c42 91       		.byte	0x91
 24600 0c43 5C       		.sleb128 -36
 24601 0c44 00       		.byte	0
 24602 0c45 00       		.byte	0
 24603 0c46 00       		.byte	0
 24604 0c47 21       		.uleb128 0x21
 24605 0c48 00000000 		.4byte	.LASF191
 24606 0c4c 01       		.byte	0x1
 24607 0c4d 2501     		.2byte	0x125
 24608 0c4f 00000000 		.4byte	.LFB65
 24609 0c53 22000000 		.4byte	.LFE65-.LFB65
 24610 0c57 01       		.uleb128 0x1
 24611 0c58 9C       		.byte	0x9c
 24612 0c59 6E0C0000 		.4byte	0xc6e
 24613 0c5d 22       		.uleb128 0x22
 24614 0c5e 70040000 		.4byte	.LASF193
 24615 0c62 01       		.byte	0x1
 24616 0c63 2601     		.2byte	0x126
 24617 0c65 6E0C0000 		.4byte	0xc6e
 24618 0c69 03       		.uleb128 0x3
 24619 0c6a 91       		.byte	0x91
 24620 0c6b 9C74     		.sleb128 -1508
 24621 0c6d 00       		.byte	0
 24622 0c6e 09       		.uleb128 0x9
 24623 0c6f F9000000 		.4byte	0xf9
 24624 0c73 7F0C0000 		.4byte	0xc7f
 24625 0c77 23       		.uleb128 0x23
 24626 0c78 18010000 		.4byte	0x118
 24627 0c7c DB05     		.2byte	0x5db
 24628 0c7e 00       		.byte	0
 24629 0c7f 21       		.uleb128 0x21
 24630 0c80 F9100000 		.4byte	.LASF194
 24631 0c84 01       		.byte	0x1
 24632 0c85 3101     		.2byte	0x131
 24633 0c87 00000000 		.4byte	.LFB66
 24634 0c8b 02010000 		.4byte	.LFE66-.LFB66
 24635 0c8f 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 537


 24636 0c90 9C       		.byte	0x9c
 24637 0c91 C80C0000 		.4byte	0xcc8
 24638 0c95 24       		.uleb128 0x24
 24639 0c96 73100000 		.4byte	.LASF197
 24640 0c9a 01       		.byte	0x1
 24641 0c9b 3101     		.2byte	0x131
 24642 0c9d A3000000 		.4byte	0xa3
 24643 0ca1 04       		.uleb128 0x4
 24644 0ca2 91       		.byte	0x91
 24645 0ca3 B6C47E   		.sleb128 -24010
 24646 0ca6 22       		.uleb128 0x22
 24647 0ca7 70040000 		.4byte	.LASF193
 24648 0cab 01       		.byte	0x1
 24649 0cac 3201     		.2byte	0x132
 24650 0cae C80C0000 		.4byte	0xcc8
 24651 0cb2 03       		.uleb128 0x3
 24652 0cb3 91       		.byte	0x91
 24653 0cb4 D860     		.sleb128 -4008
 24654 0cb6 22       		.uleb128 0x22
 24655 0cb7 8C060000 		.4byte	.LASF195
 24656 0cbb 01       		.byte	0x1
 24657 0cbc 3301     		.2byte	0x133
 24658 0cbe D90C0000 		.4byte	0xcd9
 24659 0cc2 04       		.uleb128 0x4
 24660 0cc3 91       		.byte	0x91
 24661 0cc4 B8C47E   		.sleb128 -24008
 24662 0cc7 00       		.byte	0
 24663 0cc8 09       		.uleb128 0x9
 24664 0cc9 F9000000 		.4byte	0xf9
 24665 0ccd D90C0000 		.4byte	0xcd9
 24666 0cd1 23       		.uleb128 0x23
 24667 0cd2 18010000 		.4byte	0x118
 24668 0cd6 9F0F     		.2byte	0xf9f
 24669 0cd8 00       		.byte	0
 24670 0cd9 09       		.uleb128 0x9
 24671 0cda F9000000 		.4byte	0xf9
 24672 0cde EA0C0000 		.4byte	0xcea
 24673 0ce2 23       		.uleb128 0x23
 24674 0ce3 18010000 		.4byte	0x118
 24675 0ce7 1F4E     		.2byte	0x4e1f
 24676 0ce9 00       		.byte	0
 24677 0cea 21       		.uleb128 0x21
 24678 0ceb 6F010000 		.4byte	.LASF196
 24679 0cef 01       		.byte	0x1
 24680 0cf0 5601     		.2byte	0x156
 24681 0cf2 00000000 		.4byte	.LFB67
 24682 0cf6 50200000 		.4byte	.LFE67-.LFB67
 24683 0cfa 01       		.uleb128 0x1
 24684 0cfb 9C       		.byte	0x9c
 24685 0cfc 8E0E0000 		.4byte	0xe8e
 24686 0d00 24       		.uleb128 0x24
 24687 0d01 B10A0000 		.4byte	.LASF198
 24688 0d05 01       		.byte	0x1
 24689 0d06 5601     		.2byte	0x156
 24690 0d08 8E0E0000 		.4byte	0xe8e
 24691 0d0c 03       		.uleb128 0x3
 24692 0d0d 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 538


 24693 0d0e 9C67     		.sleb128 -3172
 24694 0d10 24       		.uleb128 0x24
 24695 0d11 D2100000 		.4byte	.LASF199
 24696 0d15 01       		.byte	0x1
 24697 0d16 5601     		.2byte	0x156
 24698 0d18 940E0000 		.4byte	0xe94
 24699 0d1c 03       		.uleb128 0x3
 24700 0d1d 91       		.byte	0x91
 24701 0d1e 9867     		.sleb128 -3176
 24702 0d20 24       		.uleb128 0x24
 24703 0d21 73020000 		.4byte	.LASF200
 24704 0d25 01       		.byte	0x1
 24705 0d26 5701     		.2byte	0x157
 24706 0d28 940E0000 		.4byte	0xe94
 24707 0d2c 03       		.uleb128 0x3
 24708 0d2d 91       		.byte	0x91
 24709 0d2e 9467     		.sleb128 -3180
 24710 0d30 24       		.uleb128 0x24
 24711 0d31 1D0A0000 		.4byte	.LASF201
 24712 0d35 01       		.byte	0x1
 24713 0d36 5701     		.2byte	0x157
 24714 0d38 940E0000 		.4byte	0xe94
 24715 0d3c 03       		.uleb128 0x3
 24716 0d3d 91       		.byte	0x91
 24717 0d3e 9067     		.sleb128 -3184
 24718 0d40 24       		.uleb128 0x24
 24719 0d41 3C100000 		.4byte	.LASF202
 24720 0d45 01       		.byte	0x1
 24721 0d46 5801     		.2byte	0x158
 24722 0d48 940E0000 		.4byte	0xe94
 24723 0d4c 02       		.uleb128 0x2
 24724 0d4d 91       		.byte	0x91
 24725 0d4e 00       		.sleb128 0
 24726 0d4f 24       		.uleb128 0x24
 24727 0d50 1A060000 		.4byte	.LASF203
 24728 0d54 01       		.byte	0x1
 24729 0d55 5801     		.2byte	0x158
 24730 0d57 9A0E0000 		.4byte	0xe9a
 24731 0d5b 02       		.uleb128 0x2
 24732 0d5c 91       		.byte	0x91
 24733 0d5d 04       		.sleb128 4
 24734 0d5e 24       		.uleb128 0x24
 24735 0d5f D9080000 		.4byte	.LASF204
 24736 0d63 01       		.byte	0x1
 24737 0d64 5901     		.2byte	0x159
 24738 0d66 940E0000 		.4byte	0xe94
 24739 0d6a 02       		.uleb128 0x2
 24740 0d6b 91       		.byte	0x91
 24741 0d6c 08       		.sleb128 8
 24742 0d6d 24       		.uleb128 0x24
 24743 0d6e 9E060000 		.4byte	.LASF205
 24744 0d72 01       		.byte	0x1
 24745 0d73 5901     		.2byte	0x159
 24746 0d75 9A0E0000 		.4byte	0xe9a
 24747 0d79 02       		.uleb128 0x2
 24748 0d7a 91       		.byte	0x91
 24749 0d7b 0C       		.sleb128 12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 539


 24750 0d7c 22       		.uleb128 0x22
 24751 0d7d C3040000 		.4byte	.LASF206
 24752 0d81 01       		.byte	0x1
 24753 0d82 5C01     		.2byte	0x15c
 24754 0d84 A00E0000 		.4byte	0xea0
 24755 0d88 03       		.uleb128 0x3
 24756 0d89 91       		.byte	0x91
 24757 0d8a E867     		.sleb128 -3096
 24758 0d8c 22       		.uleb128 0x22
 24759 0d8d B0000000 		.4byte	.LASF207
 24760 0d91 01       		.byte	0x1
 24761 0d92 5D01     		.2byte	0x15d
 24762 0d94 A3000000 		.4byte	0xa3
 24763 0d98 02       		.uleb128 0x2
 24764 0d99 91       		.byte	0x91
 24765 0d9a 60       		.sleb128 -32
 24766 0d9b 25       		.uleb128 0x25
 24767 0d9c 6900     		.ascii	"i\000"
 24768 0d9e 01       		.byte	0x1
 24769 0d9f 6001     		.2byte	0x160
 24770 0da1 97000000 		.4byte	0x97
 24771 0da5 02       		.uleb128 0x2
 24772 0da6 91       		.byte	0x91
 24773 0da7 67       		.sleb128 -25
 24774 0da8 25       		.uleb128 0x25
 24775 0da9 6A00     		.ascii	"j\000"
 24776 0dab 01       		.byte	0x1
 24777 0dac 6001     		.2byte	0x160
 24778 0dae 97000000 		.4byte	0x97
 24779 0db2 02       		.uleb128 0x2
 24780 0db3 91       		.byte	0x91
 24781 0db4 66       		.sleb128 -26
 24782 0db5 25       		.uleb128 0x25
 24783 0db6 69647800 		.ascii	"idx\000"
 24784 0dba 01       		.byte	0x1
 24785 0dbb 6101     		.2byte	0x161
 24786 0dbd 97000000 		.4byte	0x97
 24787 0dc1 02       		.uleb128 0x2
 24788 0dc2 91       		.byte	0x91
 24789 0dc3 65       		.sleb128 -27
 24790 0dc4 22       		.uleb128 0x22
 24791 0dc5 2A0E0000 		.4byte	.LASF208
 24792 0dc9 01       		.byte	0x1
 24793 0dca 6201     		.2byte	0x162
 24794 0dcc 97000000 		.4byte	0x97
 24795 0dd0 02       		.uleb128 0x2
 24796 0dd1 91       		.byte	0x91
 24797 0dd2 64       		.sleb128 -28
 24798 0dd3 25       		.uleb128 0x25
 24799 0dd4 736F6400 		.ascii	"sod\000"
 24800 0dd8 01       		.byte	0x1
 24801 0dd9 6301     		.2byte	0x163
 24802 0ddb 97000000 		.4byte	0x97
 24803 0ddf 02       		.uleb128 0x2
 24804 0de0 91       		.byte	0x91
 24805 0de1 63       		.sleb128 -29
 24806 0de2 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 540


 24807 0de3 EE090000 		.4byte	.LASF209
 24808 0de7 01       		.byte	0x1
 24809 0de8 6401     		.2byte	0x164
 24810 0dea 97000000 		.4byte	0x97
 24811 0dee 02       		.uleb128 0x2
 24812 0def 91       		.byte	0x91
 24813 0df0 62       		.sleb128 -30
 24814 0df1 22       		.uleb128 0x22
 24815 0df2 F0110000 		.4byte	.LASF210
 24816 0df6 01       		.byte	0x1
 24817 0df7 6501     		.2byte	0x165
 24818 0df9 B10E0000 		.4byte	0xeb1
 24819 0dfd 03       		.uleb128 0x3
 24820 0dfe 91       		.byte	0x91
 24821 0dff B467     		.sleb128 -3148
 24822 0e01 22       		.uleb128 0x22
 24823 0e02 24100000 		.4byte	.LASF211
 24824 0e06 01       		.byte	0x1
 24825 0e07 6601     		.2byte	0x166
 24826 0e09 EB000000 		.4byte	0xeb
 24827 0e0d 03       		.uleb128 0x3
 24828 0e0e 91       		.byte	0x91
 24829 0e0f B067     		.sleb128 -3152
 24830 0e11 22       		.uleb128 0x22
 24831 0e12 B20E0000 		.4byte	.LASF212
 24832 0e16 01       		.byte	0x1
 24833 0e17 6701     		.2byte	0x167
 24834 0e19 C7000000 		.4byte	0xc7
 24835 0e1d 03       		.uleb128 0x3
 24836 0e1e 91       		.byte	0x91
 24837 0e1f AE67     		.sleb128 -3154
 24838 0e21 22       		.uleb128 0x22
 24839 0e22 450A0000 		.4byte	.LASF213
 24840 0e26 01       		.byte	0x1
 24841 0e27 6801     		.2byte	0x168
 24842 0e29 A3000000 		.4byte	0xa3
 24843 0e2d 03       		.uleb128 0x3
 24844 0e2e 91       		.byte	0x91
 24845 0e2f AC67     		.sleb128 -3156
 24846 0e31 22       		.uleb128 0x22
 24847 0e32 45100000 		.4byte	.LASF214
 24848 0e36 01       		.byte	0x1
 24849 0e37 6901     		.2byte	0x169
 24850 0e39 D3000000 		.4byte	0xd3
 24851 0e3d 03       		.uleb128 0x3
 24852 0e3e 91       		.byte	0x91
 24853 0e3f A867     		.sleb128 -3160
 24854 0e41 22       		.uleb128 0x22
 24855 0e42 B20B0000 		.4byte	.LASF215
 24856 0e46 01       		.byte	0x1
 24857 0e47 6A01     		.2byte	0x16a
 24858 0e49 AF000000 		.4byte	0xaf
 24859 0e4d 03       		.uleb128 0x3
 24860 0e4e 91       		.byte	0x91
 24861 0e4f A467     		.sleb128 -3164
 24862 0e51 22       		.uleb128 0x22
 24863 0e52 550B0000 		.4byte	.LASF216
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 541


 24864 0e56 01       		.byte	0x1
 24865 0e57 6C01     		.2byte	0x16c
 24866 0e59 97000000 		.4byte	0x97
 24867 0e5d 02       		.uleb128 0x2
 24868 0e5e 91       		.byte	0x91
 24869 0e5f 5F       		.sleb128 -33
 24870 0e60 22       		.uleb128 0x22
 24871 0e61 DF000000 		.4byte	.LASF217
 24872 0e65 01       		.byte	0x1
 24873 0e66 6D01     		.2byte	0x16d
 24874 0e68 97000000 		.4byte	0x97
 24875 0e6c 02       		.uleb128 0x2
 24876 0e6d 91       		.byte	0x91
 24877 0e6e 5E       		.sleb128 -34
 24878 0e6f 22       		.uleb128 0x22
 24879 0e70 0C090000 		.4byte	.LASF218
 24880 0e74 01       		.byte	0x1
 24881 0e75 6F01     		.2byte	0x16f
 24882 0e77 940E0000 		.4byte	0xe94
 24883 0e7b 02       		.uleb128 0x2
 24884 0e7c 91       		.byte	0x91
 24885 0e7d 58       		.sleb128 -40
 24886 0e7e 22       		.uleb128 0x22
 24887 0e7f 64010000 		.4byte	.LASF219
 24888 0e83 01       		.byte	0x1
 24889 0e84 7001     		.2byte	0x170
 24890 0e86 940E0000 		.4byte	0xe94
 24891 0e8a 02       		.uleb128 0x2
 24892 0e8b 91       		.byte	0x91
 24893 0e8c 54       		.sleb128 -44
 24894 0e8d 00       		.byte	0
 24895 0e8e 07       		.uleb128 0x7
 24896 0e8f 04       		.byte	0x4
 24897 0e90 940E0000 		.4byte	0xe94
 24898 0e94 07       		.uleb128 0x7
 24899 0e95 04       		.byte	0x4
 24900 0e96 97000000 		.4byte	0x97
 24901 0e9a 07       		.uleb128 0x7
 24902 0e9b 04       		.byte	0x4
 24903 0e9c 25010000 		.4byte	0x125
 24904 0ea0 09       		.uleb128 0x9
 24905 0ea1 97000000 		.4byte	0x97
 24906 0ea5 B10E0000 		.4byte	0xeb1
 24907 0ea9 23       		.uleb128 0x23
 24908 0eaa 18010000 		.4byte	0x118
 24909 0eae E90B     		.2byte	0xbe9
 24910 0eb0 00       		.byte	0
 24911 0eb1 09       		.uleb128 0x9
 24912 0eb2 F9000000 		.4byte	0xf9
 24913 0eb6 C10E0000 		.4byte	0xec1
 24914 0eba 0A       		.uleb128 0xa
 24915 0ebb 18010000 		.4byte	0x118
 24916 0ebf 31       		.byte	0x31
 24917 0ec0 00       		.byte	0
 24918 0ec1 21       		.uleb128 0x21
 24919 0ec2 860C0000 		.4byte	.LASF220
 24920 0ec6 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 542


 24921 0ec7 2F03     		.2byte	0x32f
 24922 0ec9 00000000 		.4byte	.LFB68
 24923 0ecd 08170000 		.4byte	.LFE68-.LFB68
 24924 0ed1 01       		.uleb128 0x1
 24925 0ed2 9C       		.byte	0x9c
 24926 0ed3 8F100000 		.4byte	0x108f
 24927 0ed7 24       		.uleb128 0x24
 24928 0ed8 A2050000 		.4byte	.LASF221
 24929 0edc 01       		.byte	0x1
 24930 0edd 2F03     		.2byte	0x32f
 24931 0edf A3000000 		.4byte	0xa3
 24932 0ee3 03       		.uleb128 0x3
 24933 0ee4 91       		.byte	0x91
 24934 0ee5 CE76     		.sleb128 -1202
 24935 0ee7 25       		.uleb128 0x25
 24936 0ee8 6900     		.ascii	"i\000"
 24937 0eea 01       		.byte	0x1
 24938 0eeb 3003     		.2byte	0x330
 24939 0eed 97000000 		.4byte	0x97
 24940 0ef1 02       		.uleb128 0x2
 24941 0ef2 91       		.byte	0x91
 24942 0ef3 6F       		.sleb128 -17
 24943 0ef4 25       		.uleb128 0x25
 24944 0ef5 6A00     		.ascii	"j\000"
 24945 0ef7 01       		.byte	0x1
 24946 0ef8 3003     		.2byte	0x330
 24947 0efa 97000000 		.4byte	0x97
 24948 0efe 02       		.uleb128 0x2
 24949 0eff 91       		.byte	0x91
 24950 0f00 6E       		.sleb128 -18
 24951 0f01 25       		.uleb128 0x25
 24952 0f02 736F6400 		.ascii	"sod\000"
 24953 0f06 01       		.byte	0x1
 24954 0f07 3103     		.2byte	0x331
 24955 0f09 97000000 		.4byte	0x97
 24956 0f0d 02       		.uleb128 0x2
 24957 0f0e 91       		.byte	0x91
 24958 0f0f 6D       		.sleb128 -19
 24959 0f10 22       		.uleb128 0x22
 24960 0f11 F9080000 		.4byte	.LASF222
 24961 0f15 01       		.byte	0x1
 24962 0f16 3203     		.2byte	0x332
 24963 0f18 97000000 		.4byte	0x97
 24964 0f1c 02       		.uleb128 0x2
 24965 0f1d 91       		.byte	0x91
 24966 0f1e 62       		.sleb128 -30
 24967 0f1f 22       		.uleb128 0x22
 24968 0f20 B20E0000 		.4byte	.LASF212
 24969 0f24 01       		.byte	0x1
 24970 0f25 3303     		.2byte	0x333
 24971 0f27 C7000000 		.4byte	0xc7
 24972 0f2b 02       		.uleb128 0x2
 24973 0f2c 91       		.byte	0x91
 24974 0f2d 60       		.sleb128 -32
 24975 0f2e 22       		.uleb128 0x22
 24976 0f2f 450A0000 		.4byte	.LASF213
 24977 0f33 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 543


 24978 0f34 3403     		.2byte	0x334
 24979 0f36 A3000000 		.4byte	0xa3
 24980 0f3a 02       		.uleb128 0x2
 24981 0f3b 91       		.byte	0x91
 24982 0f3c 5E       		.sleb128 -34
 24983 0f3d 22       		.uleb128 0x22
 24984 0f3e 45100000 		.4byte	.LASF214
 24985 0f42 01       		.byte	0x1
 24986 0f43 3503     		.2byte	0x335
 24987 0f45 D3000000 		.4byte	0xd3
 24988 0f49 02       		.uleb128 0x2
 24989 0f4a 91       		.byte	0x91
 24990 0f4b 58       		.sleb128 -40
 24991 0f4c 22       		.uleb128 0x22
 24992 0f4d B20B0000 		.4byte	.LASF215
 24993 0f51 01       		.byte	0x1
 24994 0f52 3603     		.2byte	0x336
 24995 0f54 AF000000 		.4byte	0xaf
 24996 0f58 02       		.uleb128 0x2
 24997 0f59 91       		.byte	0x91
 24998 0f5a 54       		.sleb128 -44
 24999 0f5b 22       		.uleb128 0x22
 25000 0f5c 24100000 		.4byte	.LASF211
 25001 0f60 01       		.byte	0x1
 25002 0f61 3703     		.2byte	0x337
 25003 0f63 EB000000 		.4byte	0xeb
 25004 0f67 02       		.uleb128 0x2
 25005 0f68 91       		.byte	0x91
 25006 0f69 50       		.sleb128 -48
 25007 0f6a 22       		.uleb128 0x22
 25008 0f6b 550B0000 		.4byte	.LASF216
 25009 0f6f 01       		.byte	0x1
 25010 0f70 3903     		.2byte	0x339
 25011 0f72 97000000 		.4byte	0x97
 25012 0f76 02       		.uleb128 0x2
 25013 0f77 91       		.byte	0x91
 25014 0f78 65       		.sleb128 -27
 25015 0f79 22       		.uleb128 0x22
 25016 0f7a DF000000 		.4byte	.LASF217
 25017 0f7e 01       		.byte	0x1
 25018 0f7f 3A03     		.2byte	0x33a
 25019 0f81 97000000 		.4byte	0x97
 25020 0f85 02       		.uleb128 0x2
 25021 0f86 91       		.byte	0x91
 25022 0f87 64       		.sleb128 -28
 25023 0f88 22       		.uleb128 0x22
 25024 0f89 89020000 		.4byte	.LASF223
 25025 0f8d 01       		.byte	0x1
 25026 0f8e 3D03     		.2byte	0x33d
 25027 0f90 8F100000 		.4byte	0x108f
 25028 0f94 02       		.uleb128 0x2
 25029 0f95 91       		.byte	0x91
 25030 0f96 68       		.sleb128 -24
 25031 0f97 22       		.uleb128 0x22
 25032 0f98 B10A0000 		.4byte	.LASF198
 25033 0f9c 01       		.byte	0x1
 25034 0f9d 4503     		.2byte	0x345
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 544


 25035 0f9f 95100000 		.4byte	0x1095
 25036 0fa3 03       		.uleb128 0x3
 25037 0fa4 91       		.byte	0x91
 25038 0fa5 B47D     		.sleb128 -332
 25039 0fa7 22       		.uleb128 0x22
 25040 0fa8 D2100000 		.4byte	.LASF199
 25041 0fac 01       		.byte	0x1
 25042 0fad 9203     		.2byte	0x392
 25043 0faf A5100000 		.4byte	0x10a5
 25044 0fb3 03       		.uleb128 0x3
 25045 0fb4 91       		.byte	0x91
 25046 0fb5 EC7C     		.sleb128 -404
 25047 0fb7 22       		.uleb128 0x22
 25048 0fb8 73020000 		.4byte	.LASF200
 25049 0fbc 01       		.byte	0x1
 25050 0fbd A903     		.2byte	0x3a9
 25051 0fbf A5100000 		.4byte	0x10a5
 25052 0fc3 03       		.uleb128 0x3
 25053 0fc4 91       		.byte	0x91
 25054 0fc5 A47C     		.sleb128 -476
 25055 0fc7 22       		.uleb128 0x22
 25056 0fc8 1D0A0000 		.4byte	.LASF201
 25057 0fcc 01       		.byte	0x1
 25058 0fcd C003     		.2byte	0x3c0
 25059 0fcf A5100000 		.4byte	0x10a5
 25060 0fd3 03       		.uleb128 0x3
 25061 0fd4 91       		.byte	0x91
 25062 0fd5 DC7B     		.sleb128 -548
 25063 0fd7 22       		.uleb128 0x22
 25064 0fd8 1A060000 		.4byte	.LASF203
 25065 0fdc 01       		.byte	0x1
 25066 0fdd D703     		.2byte	0x3d7
 25067 0fdf B5100000 		.4byte	0x10b5
 25068 0fe3 03       		.uleb128 0x3
 25069 0fe4 91       		.byte	0x91
 25070 0fe5 C079     		.sleb128 -832
 25071 0fe7 22       		.uleb128 0x22
 25072 0fe8 45110000 		.4byte	.LASF224
 25073 0fec 01       		.byte	0x1
 25074 0fed EF03     		.2byte	0x3ef
 25075 0fef C5100000 		.4byte	0x10c5
 25076 0ff3 03       		.uleb128 0x3
 25077 0ff4 91       		.byte	0x91
 25078 0ff5 C878     		.sleb128 -952
 25079 0ff7 22       		.uleb128 0x22
 25080 0ff8 9E060000 		.4byte	.LASF205
 25081 0ffc 01       		.byte	0x1
 25082 0ffd F203     		.2byte	0x3f2
 25083 0fff D5100000 		.4byte	0x10d5
 25084 1003 03       		.uleb128 0x3
 25085 1004 91       		.byte	0x91
 25086 1005 A078     		.sleb128 -992
 25087 1007 22       		.uleb128 0x22
 25088 1008 3C100000 		.4byte	.LASF202
 25089 100c 01       		.byte	0x1
 25090 100d FF03     		.2byte	0x3ff
 25091 100f 50010000 		.4byte	0x150
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 545


 25092 1013 03       		.uleb128 0x3
 25093 1014 91       		.byte	0x91
 25094 1015 8478     		.sleb128 -1020
 25095 1017 22       		.uleb128 0x22
 25096 1018 B70A0000 		.4byte	.LASF225
 25097 101c 01       		.byte	0x1
 25098 101d 0004     		.2byte	0x400
 25099 101f E5100000 		.4byte	0x10e5
 25100 1023 03       		.uleb128 0x3
 25101 1024 91       		.byte	0x91
 25102 1025 F877     		.sleb128 -1032
 25103 1027 22       		.uleb128 0x22
 25104 1028 070A0000 		.4byte	.LASF226
 25105 102c 01       		.byte	0x1
 25106 102d 0104     		.2byte	0x401
 25107 102f F5100000 		.4byte	0x10f5
 25108 1033 03       		.uleb128 0x3
 25109 1034 91       		.byte	0x91
 25110 1035 E477     		.sleb128 -1052
 25111 1037 22       		.uleb128 0x22
 25112 1038 C40B0000 		.4byte	.LASF227
 25113 103c 01       		.byte	0x1
 25114 103d 0204     		.2byte	0x402
 25115 103f 97000000 		.4byte	0x97
 25116 1043 02       		.uleb128 0x2
 25117 1044 91       		.byte	0x91
 25118 1045 63       		.sleb128 -29
 25119 1046 22       		.uleb128 0x22
 25120 1047 D9080000 		.4byte	.LASF204
 25121 104b 01       		.byte	0x1
 25122 104c 0B04     		.2byte	0x40b
 25123 104e A5100000 		.4byte	0x10a5
 25124 1052 03       		.uleb128 0x3
 25125 1053 91       		.byte	0x91
 25126 1054 9C77     		.sleb128 -1124
 25127 1056 22       		.uleb128 0x22
 25128 1057 6C110000 		.4byte	.LASF228
 25129 105b 01       		.byte	0x1
 25130 105c 1604     		.2byte	0x416
 25131 105e A5100000 		.4byte	0x10a5
 25132 1062 03       		.uleb128 0x3
 25133 1063 91       		.byte	0x91
 25134 1064 D476     		.sleb128 -1196
 25135 1066 1E       		.uleb128 0x1e
 25136 1067 72160000 		.4byte	.LBB14
 25137 106b 86000000 		.4byte	.LBE14-.LBB14
 25138 106f 25       		.uleb128 0x25
 25139 1070 69647800 		.ascii	"idx\000"
 25140 1074 01       		.byte	0x1
 25141 1075 7F04     		.2byte	0x47f
 25142 1077 97000000 		.4byte	0x97
 25143 107b 02       		.uleb128 0x2
 25144 107c 91       		.byte	0x91
 25145 107d 67       		.sleb128 -25
 25146 107e 22       		.uleb128 0x22
 25147 107f 32040000 		.4byte	.LASF229
 25148 1083 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 546


 25149 1084 7F04     		.2byte	0x47f
 25150 1086 97000000 		.4byte	0x97
 25151 108a 02       		.uleb128 0x2
 25152 108b 91       		.byte	0x91
 25153 108c 66       		.sleb128 -26
 25154 108d 00       		.byte	0
 25155 108e 00       		.byte	0
 25156 108f 07       		.uleb128 0x7
 25157 1090 04       		.byte	0x4
 25158 1091 B5090000 		.4byte	0x9b5
 25159 1095 09       		.uleb128 0x9
 25160 1096 940E0000 		.4byte	0xe94
 25161 109a A5100000 		.4byte	0x10a5
 25162 109e 0A       		.uleb128 0xa
 25163 109f 18010000 		.4byte	0x118
 25164 10a3 46       		.byte	0x46
 25165 10a4 00       		.byte	0
 25166 10a5 09       		.uleb128 0x9
 25167 10a6 97000000 		.4byte	0x97
 25168 10aa B5100000 		.4byte	0x10b5
 25169 10ae 0A       		.uleb128 0xa
 25170 10af 18010000 		.4byte	0x118
 25171 10b3 46       		.byte	0x46
 25172 10b4 00       		.byte	0
 25173 10b5 09       		.uleb128 0x9
 25174 10b6 25010000 		.4byte	0x125
 25175 10ba C5100000 		.4byte	0x10c5
 25176 10be 0A       		.uleb128 0xa
 25177 10bf 18010000 		.4byte	0x118
 25178 10c3 46       		.byte	0x46
 25179 10c4 00       		.byte	0
 25180 10c5 09       		.uleb128 0x9
 25181 10c6 F9000000 		.4byte	0xf9
 25182 10ca D5100000 		.4byte	0x10d5
 25183 10ce 0A       		.uleb128 0xa
 25184 10cf 18010000 		.4byte	0x118
 25185 10d3 75       		.byte	0x75
 25186 10d4 00       		.byte	0
 25187 10d5 09       		.uleb128 0x9
 25188 10d6 25010000 		.4byte	0x125
 25189 10da E5100000 		.4byte	0x10e5
 25190 10de 0A       		.uleb128 0xa
 25191 10df 18010000 		.4byte	0x118
 25192 10e3 09       		.byte	0x9
 25193 10e4 00       		.byte	0
 25194 10e5 09       		.uleb128 0x9
 25195 10e6 97000000 		.4byte	0x97
 25196 10ea F5100000 		.4byte	0x10f5
 25197 10ee 0A       		.uleb128 0xa
 25198 10ef 18010000 		.4byte	0x118
 25199 10f3 08       		.byte	0x8
 25200 10f4 00       		.byte	0
 25201 10f5 09       		.uleb128 0x9
 25202 10f6 97000000 		.4byte	0x97
 25203 10fa 05110000 		.4byte	0x1105
 25204 10fe 0A       		.uleb128 0xa
 25205 10ff 18010000 		.4byte	0x118
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 547


 25206 1103 11       		.byte	0x11
 25207 1104 00       		.byte	0
 25208 1105 21       		.uleb128 0x21
 25209 1106 FB020000 		.4byte	.LASF230
 25210 110a 01       		.byte	0x1
 25211 110b 9004     		.2byte	0x490
 25212 110d 00000000 		.4byte	.LFB69
 25213 1111 18140000 		.4byte	.LFE69-.LFB69
 25214 1115 01       		.uleb128 0x1
 25215 1116 9C       		.byte	0x9c
 25216 1117 A7110000 		.4byte	0x11a7
 25217 111b 24       		.uleb128 0x24
 25218 111c A2050000 		.4byte	.LASF221
 25219 1120 01       		.byte	0x1
 25220 1121 9004     		.2byte	0x490
 25221 1123 A3000000 		.4byte	0xa3
 25222 1127 02       		.uleb128 0x2
 25223 1128 91       		.byte	0x91
 25224 1129 56       		.sleb128 -42
 25225 112a 25       		.uleb128 0x25
 25226 112b 6900     		.ascii	"i\000"
 25227 112d 01       		.byte	0x1
 25228 112e 9204     		.2byte	0x492
 25229 1130 97000000 		.4byte	0x97
 25230 1134 02       		.uleb128 0x2
 25231 1135 91       		.byte	0x91
 25232 1136 67       		.sleb128 -25
 25233 1137 25       		.uleb128 0x25
 25234 1138 6A00     		.ascii	"j\000"
 25235 113a 01       		.byte	0x1
 25236 113b 9204     		.2byte	0x492
 25237 113d 97000000 		.4byte	0x97
 25238 1141 02       		.uleb128 0x2
 25239 1142 91       		.byte	0x91
 25240 1143 66       		.sleb128 -26
 25241 1144 22       		.uleb128 0x22
 25242 1145 280A0000 		.4byte	.LASF231
 25243 1149 01       		.byte	0x1
 25244 114a 9304     		.2byte	0x493
 25245 114c 97000000 		.4byte	0x97
 25246 1150 02       		.uleb128 0x2
 25247 1151 91       		.byte	0x91
 25248 1152 62       		.sleb128 -30
 25249 1153 22       		.uleb128 0x22
 25250 1154 24100000 		.4byte	.LASF211
 25251 1158 01       		.byte	0x1
 25252 1159 9404     		.2byte	0x494
 25253 115b EB000000 		.4byte	0xeb
 25254 115f 02       		.uleb128 0x2
 25255 1160 91       		.byte	0x91
 25256 1161 5C       		.sleb128 -36
 25257 1162 22       		.uleb128 0x22
 25258 1163 D4020000 		.4byte	.LASF232
 25259 1167 01       		.byte	0x1
 25260 1168 9404     		.2byte	0x494
 25261 116a EB000000 		.4byte	0xeb
 25262 116e 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 548


 25263 116f 91       		.byte	0x91
 25264 1170 58       		.sleb128 -40
 25265 1171 22       		.uleb128 0x22
 25266 1172 550B0000 		.4byte	.LASF216
 25267 1176 01       		.byte	0x1
 25268 1177 9604     		.2byte	0x496
 25269 1179 97000000 		.4byte	0x97
 25270 117d 02       		.uleb128 0x2
 25271 117e 91       		.byte	0x91
 25272 117f 64       		.sleb128 -28
 25273 1180 22       		.uleb128 0x22
 25274 1181 DF000000 		.4byte	.LASF217
 25275 1185 01       		.byte	0x1
 25276 1186 9704     		.2byte	0x497
 25277 1188 97000000 		.4byte	0x97
 25278 118c 02       		.uleb128 0x2
 25279 118d 91       		.byte	0x91
 25280 118e 63       		.sleb128 -29
 25281 118f 1E       		.uleb128 0x1e
 25282 1190 F40A0000 		.4byte	.LBB15
 25283 1194 26000000 		.4byte	.LBE15-.LBB15
 25284 1198 25       		.uleb128 0x25
 25285 1199 6900     		.ascii	"i\000"
 25286 119b 01       		.byte	0x1
 25287 119c 3E05     		.2byte	0x53e
 25288 119e 97000000 		.4byte	0x97
 25289 11a2 02       		.uleb128 0x2
 25290 11a3 91       		.byte	0x91
 25291 11a4 65       		.sleb128 -27
 25292 11a5 00       		.byte	0
 25293 11a6 00       		.byte	0
 25294 11a7 21       		.uleb128 0x21
 25295 11a8 29070000 		.4byte	.LASF233
 25296 11ac 01       		.byte	0x1
 25297 11ad D705     		.2byte	0x5d7
 25298 11af 00000000 		.4byte	.LFB70
 25299 11b3 F40D0000 		.4byte	.LFE70-.LFB70
 25300 11b7 01       		.uleb128 0x1
 25301 11b8 9C       		.byte	0x9c
 25302 11b9 36130000 		.4byte	0x1336
 25303 11bd 24       		.uleb128 0x24
 25304 11be A2050000 		.4byte	.LASF221
 25305 11c2 01       		.byte	0x1
 25306 11c3 D705     		.2byte	0x5d7
 25307 11c5 A3000000 		.4byte	0xa3
 25308 11c9 03       		.uleb128 0x3
 25309 11ca 91       		.byte	0x91
 25310 11cb CE72     		.sleb128 -1714
 25311 11cd 22       		.uleb128 0x22
 25312 11ce C3040000 		.4byte	.LASF206
 25313 11d2 01       		.byte	0x1
 25314 11d3 DA05     		.2byte	0x5da
 25315 11d5 36130000 		.4byte	0x1336
 25316 11d9 03       		.uleb128 0x3
 25317 11da 91       		.byte	0x91
 25318 11db DC74     		.sleb128 -1444
 25319 11dd 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 549


 25320 11de 9F0E0000 		.4byte	.LASF234
 25321 11e2 01       		.byte	0x1
 25322 11e3 E105     		.2byte	0x5e1
 25323 11e5 A3000000 		.4byte	0xa3
 25324 11e9 02       		.uleb128 0x2
 25325 11ea 91       		.byte	0x91
 25326 11eb 62       		.sleb128 -30
 25327 11ec 22       		.uleb128 0x22
 25328 11ed 46040000 		.4byte	.LASF235
 25329 11f1 01       		.byte	0x1
 25330 11f2 E205     		.2byte	0x5e2
 25331 11f4 A3000000 		.4byte	0xa3
 25332 11f8 02       		.uleb128 0x2
 25333 11f9 91       		.byte	0x91
 25334 11fa 6E       		.sleb128 -18
 25335 11fb 22       		.uleb128 0x22
 25336 11fc 4A070000 		.4byte	.LASF236
 25337 1200 01       		.byte	0x1
 25338 1201 E305     		.2byte	0x5e3
 25339 1203 A3000000 		.4byte	0xa3
 25340 1207 02       		.uleb128 0x2
 25341 1208 91       		.byte	0x91
 25342 1209 60       		.sleb128 -32
 25343 120a 22       		.uleb128 0x22
 25344 120b C9060000 		.4byte	.LASF237
 25345 120f 01       		.byte	0x1
 25346 1210 E405     		.2byte	0x5e4
 25347 1212 A3000000 		.4byte	0xa3
 25348 1216 02       		.uleb128 0x2
 25349 1217 91       		.byte	0x91
 25350 1218 5E       		.sleb128 -34
 25351 1219 25       		.uleb128 0x25
 25352 121a 6900     		.ascii	"i\000"
 25353 121c 01       		.byte	0x1
 25354 121d EC05     		.2byte	0x5ec
 25355 121f A3000000 		.4byte	0xa3
 25356 1223 02       		.uleb128 0x2
 25357 1224 91       		.byte	0x91
 25358 1225 6C       		.sleb128 -20
 25359 1226 25       		.uleb128 0x25
 25360 1227 6A00     		.ascii	"j\000"
 25361 1229 01       		.byte	0x1
 25362 122a EC05     		.2byte	0x5ec
 25363 122c A3000000 		.4byte	0xa3
 25364 1230 02       		.uleb128 0x2
 25365 1231 91       		.byte	0x91
 25366 1232 6A       		.sleb128 -22
 25367 1233 25       		.uleb128 0x25
 25368 1234 6B00     		.ascii	"k\000"
 25369 1236 01       		.byte	0x1
 25370 1237 EC05     		.2byte	0x5ec
 25371 1239 A3000000 		.4byte	0xa3
 25372 123d 02       		.uleb128 0x2
 25373 123e 91       		.byte	0x91
 25374 123f 68       		.sleb128 -24
 25375 1240 25       		.uleb128 0x25
 25376 1241 6800     		.ascii	"h\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 550


 25377 1243 01       		.byte	0x1
 25378 1244 EC05     		.2byte	0x5ec
 25379 1246 A3000000 		.4byte	0xa3
 25380 124a 02       		.uleb128 0x2
 25381 124b 91       		.byte	0x91
 25382 124c 66       		.sleb128 -26
 25383 124d 22       		.uleb128 0x22
 25384 124e 3B040000 		.4byte	.LASF238
 25385 1252 01       		.byte	0x1
 25386 1253 ED05     		.2byte	0x5ed
 25387 1255 A3000000 		.4byte	0xa3
 25388 1259 02       		.uleb128 0x2
 25389 125a 91       		.byte	0x91
 25390 125b 5C       		.sleb128 -36
 25391 125c 22       		.uleb128 0x22
 25392 125d 6A0B0000 		.4byte	.LASF239
 25393 1261 01       		.byte	0x1
 25394 1262 F005     		.2byte	0x5f0
 25395 1264 30010000 		.4byte	0x130
 25396 1268 03       		.uleb128 0x3
 25397 1269 91       		.byte	0x91
 25398 126a C074     		.sleb128 -1472
 25399 126c 22       		.uleb128 0x22
 25400 126d 660E0000 		.4byte	.LASF240
 25401 1271 01       		.byte	0x1
 25402 1272 F105     		.2byte	0x5f1
 25403 1274 47130000 		.4byte	0x1347
 25404 1278 03       		.uleb128 0x3
 25405 1279 91       		.byte	0x91
 25406 127a B474     		.sleb128 -1484
 25407 127c 22       		.uleb128 0x22
 25408 127d CA050000 		.4byte	.LASF241
 25409 1281 01       		.byte	0x1
 25410 1282 F205     		.2byte	0x5f2
 25411 1284 57130000 		.4byte	0x1357
 25412 1288 03       		.uleb128 0x3
 25413 1289 91       		.byte	0x91
 25414 128a A074     		.sleb128 -1504
 25415 128c 22       		.uleb128 0x22
 25416 128d 09000000 		.4byte	.LASF242
 25417 1291 01       		.byte	0x1
 25418 1292 F305     		.2byte	0x5f3
 25419 1294 67130000 		.4byte	0x1367
 25420 1298 03       		.uleb128 0x3
 25421 1299 91       		.byte	0x91
 25422 129a 9074     		.sleb128 -1520
 25423 129c 22       		.uleb128 0x22
 25424 129d 3D0C0000 		.4byte	.LASF243
 25425 12a1 01       		.byte	0x1
 25426 12a2 F405     		.2byte	0x5f4
 25427 12a4 77130000 		.4byte	0x1377
 25428 12a8 03       		.uleb128 0x3
 25429 12a9 91       		.byte	0x91
 25430 12aa E473     		.sleb128 -1564
 25431 12ac 22       		.uleb128 0x22
 25432 12ad F4030000 		.4byte	.LASF244
 25433 12b1 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 551


 25434 12b2 F505     		.2byte	0x5f5
 25435 12b4 30010000 		.4byte	0x130
 25436 12b8 03       		.uleb128 0x3
 25437 12b9 91       		.byte	0x91
 25438 12ba C873     		.sleb128 -1592
 25439 12bc 22       		.uleb128 0x22
 25440 12bd 41010000 		.4byte	.LASF245
 25441 12c1 01       		.byte	0x1
 25442 12c2 F805     		.2byte	0x5f8
 25443 12c4 97000000 		.4byte	0x97
 25444 12c8 02       		.uleb128 0x2
 25445 12c9 91       		.byte	0x91
 25446 12ca 5B       		.sleb128 -37
 25447 12cb 22       		.uleb128 0x22
 25448 12cc C8030000 		.4byte	.LASF246
 25449 12d0 01       		.byte	0x1
 25450 12d1 F905     		.2byte	0x5f9
 25451 12d3 97000000 		.4byte	0x97
 25452 12d7 02       		.uleb128 0x2
 25453 12d8 91       		.byte	0x91
 25454 12d9 5A       		.sleb128 -38
 25455 12da 22       		.uleb128 0x22
 25456 12db 170E0000 		.4byte	.LASF247
 25457 12df 01       		.byte	0x1
 25458 12e0 FA05     		.2byte	0x5fa
 25459 12e2 97000000 		.4byte	0x97
 25460 12e6 02       		.uleb128 0x2
 25461 12e7 91       		.byte	0x91
 25462 12e8 59       		.sleb128 -39
 25463 12e9 22       		.uleb128 0x22
 25464 12ea 8D0E0000 		.4byte	.LASF248
 25465 12ee 01       		.byte	0x1
 25466 12ef FB05     		.2byte	0x5fb
 25467 12f1 97000000 		.4byte	0x97
 25468 12f5 02       		.uleb128 0x2
 25469 12f6 91       		.byte	0x91
 25470 12f7 58       		.sleb128 -40
 25471 12f8 22       		.uleb128 0x22
 25472 12f9 D6030000 		.4byte	.LASF249
 25473 12fd 01       		.byte	0x1
 25474 12fe FC05     		.2byte	0x5fc
 25475 1300 97000000 		.4byte	0x97
 25476 1304 02       		.uleb128 0x2
 25477 1305 91       		.byte	0x91
 25478 1306 57       		.sleb128 -41
 25479 1307 22       		.uleb128 0x22
 25480 1308 99000000 		.4byte	.LASF250
 25481 130c 01       		.byte	0x1
 25482 130d FD05     		.2byte	0x5fd
 25483 130f 97000000 		.4byte	0x97
 25484 1313 02       		.uleb128 0x2
 25485 1314 91       		.byte	0x91
 25486 1315 65       		.sleb128 -27
 25487 1316 22       		.uleb128 0x22
 25488 1317 45110000 		.4byte	.LASF224
 25489 131b 01       		.byte	0x1
 25490 131c FF05     		.2byte	0x5ff
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 552


 25491 131e C5100000 		.4byte	0x10c5
 25492 1322 03       		.uleb128 0x3
 25493 1323 91       		.byte	0x91
 25494 1324 D072     		.sleb128 -1712
 25495 1326 22       		.uleb128 0x22
 25496 1327 E8020000 		.4byte	.LASF251
 25497 132b 01       		.byte	0x1
 25498 132c 0006     		.2byte	0x600
 25499 132e 97000000 		.4byte	0x97
 25500 1332 02       		.uleb128 0x2
 25501 1333 91       		.byte	0x91
 25502 1334 56       		.sleb128 -42
 25503 1335 00       		.byte	0
 25504 1336 09       		.uleb128 0x9
 25505 1337 97000000 		.4byte	0x97
 25506 133b 47130000 		.4byte	0x1347
 25507 133f 23       		.uleb128 0x23
 25508 1340 18010000 		.4byte	0x118
 25509 1344 7805     		.2byte	0x578
 25510 1346 00       		.byte	0
 25511 1347 09       		.uleb128 0x9
 25512 1348 F9000000 		.4byte	0xf9
 25513 134c 57130000 		.4byte	0x1357
 25514 1350 0A       		.uleb128 0xa
 25515 1351 18010000 		.4byte	0x118
 25516 1355 0A       		.byte	0xa
 25517 1356 00       		.byte	0
 25518 1357 09       		.uleb128 0x9
 25519 1358 F9000000 		.4byte	0xf9
 25520 135c 67130000 		.4byte	0x1367
 25521 1360 0A       		.uleb128 0xa
 25522 1361 18010000 		.4byte	0x118
 25523 1365 13       		.byte	0x13
 25524 1366 00       		.byte	0
 25525 1367 09       		.uleb128 0x9
 25526 1368 F9000000 		.4byte	0xf9
 25527 136c 77130000 		.4byte	0x1377
 25528 1370 0A       		.uleb128 0xa
 25529 1371 18010000 		.4byte	0x118
 25530 1375 0F       		.byte	0xf
 25531 1376 00       		.byte	0
 25532 1377 09       		.uleb128 0x9
 25533 1378 F9000000 		.4byte	0xf9
 25534 137c 87130000 		.4byte	0x1387
 25535 1380 0A       		.uleb128 0xa
 25536 1381 18010000 		.4byte	0x118
 25537 1385 29       		.byte	0x29
 25538 1386 00       		.byte	0
 25539 1387 26       		.uleb128 0x26
 25540 1388 51020000 		.4byte	.LASF280
 25541 138c 01       		.byte	0x1
 25542 138d C606     		.2byte	0x6c6
 25543 138f 00000000 		.4byte	.LFB71
 25544 1393 84000000 		.4byte	.LFE71-.LFB71
 25545 1397 01       		.uleb128 0x1
 25546 1398 9C       		.byte	0x9c
 25547 1399 B8130000 		.4byte	0x13b8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 553


 25548 139d 25       		.uleb128 0x25
 25549 139e 6900     		.ascii	"i\000"
 25550 13a0 01       		.byte	0x1
 25551 13a1 C806     		.2byte	0x6c8
 25552 13a3 97000000 		.4byte	0x97
 25553 13a7 02       		.uleb128 0x2
 25554 13a8 91       		.byte	0x91
 25555 13a9 6F       		.sleb128 -17
 25556 13aa 25       		.uleb128 0x25
 25557 13ab 6A00     		.ascii	"j\000"
 25558 13ad 01       		.byte	0x1
 25559 13ae C806     		.2byte	0x6c8
 25560 13b0 97000000 		.4byte	0x97
 25561 13b4 02       		.uleb128 0x2
 25562 13b5 91       		.byte	0x91
 25563 13b6 6E       		.sleb128 -18
 25564 13b7 00       		.byte	0
 25565 13b8 21       		.uleb128 0x21
 25566 13b9 BE000000 		.4byte	.LASF252
 25567 13bd 01       		.byte	0x1
 25568 13be D906     		.2byte	0x6d9
 25569 13c0 00000000 		.4byte	.LFB72
 25570 13c4 981A0000 		.4byte	.LFE72-.LFB72
 25571 13c8 01       		.uleb128 0x1
 25572 13c9 9C       		.byte	0x9c
 25573 13ca 63140000 		.4byte	0x1463
 25574 13ce 24       		.uleb128 0x24
 25575 13cf 740B0000 		.4byte	.LASF253
 25576 13d3 01       		.byte	0x1
 25577 13d4 D906     		.2byte	0x6d9
 25578 13d6 1F010000 		.4byte	0x11f
 25579 13da 03       		.uleb128 0x3
 25580 13db 91       		.byte	0x91
 25581 13dc D47E     		.sleb128 -172
 25582 13de 25       		.uleb128 0x25
 25583 13df 6900     		.ascii	"i\000"
 25584 13e1 01       		.byte	0x1
 25585 13e2 DB06     		.2byte	0x6db
 25586 13e4 73000000 		.4byte	0x73
 25587 13e8 02       		.uleb128 0x2
 25588 13e9 91       		.byte	0x91
 25589 13ea 54       		.sleb128 -44
 25590 13eb 22       		.uleb128 0x22
 25591 13ec 89020000 		.4byte	.LASF223
 25592 13f0 01       		.byte	0x1
 25593 13f1 DD06     		.2byte	0x6dd
 25594 13f3 8F100000 		.4byte	0x108f
 25595 13f7 02       		.uleb128 0x2
 25596 13f8 91       		.byte	0x91
 25597 13f9 4C       		.sleb128 -52
 25598 13fa 1E       		.uleb128 0x1e
 25599 13fb 1C000000 		.4byte	.LBB16
 25600 13ff 341A0000 		.4byte	.LBE16-.LBB16
 25601 1403 25       		.uleb128 0x25
 25602 1404 73747200 		.ascii	"str\000"
 25603 1408 01       		.byte	0x1
 25604 1409 E006     		.2byte	0x6e0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 554


 25605 140b 63140000 		.4byte	0x1463
 25606 140f 03       		.uleb128 0x3
 25607 1410 91       		.byte	0x91
 25608 1411 DC7E     		.sleb128 -164
 25609 1413 1E       		.uleb128 0x1e
 25610 1414 62020000 		.4byte	.LBB17
 25611 1418 6E100000 		.4byte	.LBE17-.LBB17
 25612 141c 25       		.uleb128 0x25
 25613 141d 6B00     		.ascii	"k\000"
 25614 141f 01       		.byte	0x1
 25615 1420 0B07     		.2byte	0x70b
 25616 1422 97000000 		.4byte	0x97
 25617 1426 02       		.uleb128 0x2
 25618 1427 91       		.byte	0x91
 25619 1428 53       		.sleb128 -45
 25620 1429 1E       		.uleb128 0x1e
 25621 142a 6C020000 		.4byte	.LBB18
 25622 142e 48100000 		.4byte	.LBE18-.LBB18
 25623 1432 22       		.uleb128 0x22
 25624 1433 550B0000 		.4byte	.LASF216
 25625 1437 01       		.byte	0x1
 25626 1438 0D07     		.2byte	0x70d
 25627 143a 97000000 		.4byte	0x97
 25628 143e 02       		.uleb128 0x2
 25629 143f 91       		.byte	0x91
 25630 1440 4B       		.sleb128 -53
 25631 1441 25       		.uleb128 0x25
 25632 1442 4D4F5400 		.ascii	"MOT\000"
 25633 1446 01       		.byte	0x1
 25634 1447 0E07     		.2byte	0x70e
 25635 1449 73140000 		.4byte	0x1473
 25636 144d 02       		.uleb128 0x2
 25637 144e 91       		.byte	0x91
 25638 144f 44       		.sleb128 -60
 25639 1450 22       		.uleb128 0x22
 25640 1451 C2100000 		.4byte	.LASF254
 25641 1455 01       		.byte	0x1
 25642 1456 0F07     		.2byte	0x70f
 25643 1458 97000000 		.4byte	0x97
 25644 145c 02       		.uleb128 0x2
 25645 145d 91       		.byte	0x91
 25646 145e 43       		.sleb128 -61
 25647 145f 00       		.byte	0
 25648 1460 00       		.byte	0
 25649 1461 00       		.byte	0
 25650 1462 00       		.byte	0
 25651 1463 09       		.uleb128 0x9
 25652 1464 F9000000 		.4byte	0xf9
 25653 1468 73140000 		.4byte	0x1473
 25654 146c 0A       		.uleb128 0xa
 25655 146d 18010000 		.4byte	0x118
 25656 1471 63       		.byte	0x63
 25657 1472 00       		.byte	0
 25658 1473 07       		.uleb128 0x7
 25659 1474 04       		.byte	0x4
 25660 1475 A1050000 		.4byte	0x5a1
 25661 1479 21       		.uleb128 0x21
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 555


 25662 147a C10C0000 		.4byte	.LASF255
 25663 147e 01       		.byte	0x1
 25664 147f 9608     		.2byte	0x896
 25665 1481 00000000 		.4byte	.LFB73
 25666 1485 B4030000 		.4byte	.LFE73-.LFB73
 25667 1489 01       		.uleb128 0x1
 25668 148a 9C       		.byte	0x9c
 25669 148b F9140000 		.4byte	0x14f9
 25670 148f 24       		.uleb128 0x24
 25671 1490 740B0000 		.4byte	.LASF253
 25672 1494 01       		.byte	0x1
 25673 1495 9608     		.2byte	0x896
 25674 1497 1F010000 		.4byte	0x11f
 25675 149b 03       		.uleb128 0x3
 25676 149c 91       		.byte	0x91
 25677 149d EC7E     		.sleb128 -148
 25678 149f 25       		.uleb128 0x25
 25679 14a0 73747200 		.ascii	"str\000"
 25680 14a4 01       		.byte	0x1
 25681 14a5 9808     		.2byte	0x898
 25682 14a7 63140000 		.4byte	0x1463
 25683 14ab 03       		.uleb128 0x3
 25684 14ac 91       		.byte	0x91
 25685 14ad F07E     		.sleb128 -144
 25686 14af 25       		.uleb128 0x25
 25687 14b0 6900     		.ascii	"i\000"
 25688 14b2 01       		.byte	0x1
 25689 14b3 9908     		.2byte	0x899
 25690 14b5 73000000 		.4byte	0x73
 25691 14b9 02       		.uleb128 0x2
 25692 14ba 91       		.byte	0x91
 25693 14bb 64       		.sleb128 -28
 25694 14bc 22       		.uleb128 0x22
 25695 14bd 65030000 		.4byte	.LASF256
 25696 14c1 01       		.byte	0x1
 25697 14c2 9A08     		.2byte	0x89a
 25698 14c4 73000000 		.4byte	0x73
 25699 14c8 02       		.uleb128 0x2
 25700 14c9 91       		.byte	0x91
 25701 14ca 54       		.sleb128 -44
 25702 14cb 22       		.uleb128 0x22
 25703 14cc 89020000 		.4byte	.LASF223
 25704 14d0 01       		.byte	0x1
 25705 14d1 9C08     		.2byte	0x89c
 25706 14d3 8F100000 		.4byte	0x108f
 25707 14d7 02       		.uleb128 0x2
 25708 14d8 91       		.byte	0x91
 25709 14d9 60       		.sleb128 -32
 25710 14da 25       		.uleb128 0x25
 25711 14db 4D4F5400 		.ascii	"MOT\000"
 25712 14df 01       		.byte	0x1
 25713 14e0 9D08     		.2byte	0x89d
 25714 14e2 73140000 		.4byte	0x1473
 25715 14e6 02       		.uleb128 0x2
 25716 14e7 91       		.byte	0x91
 25717 14e8 5C       		.sleb128 -36
 25718 14e9 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 556


 25719 14ea C2100000 		.4byte	.LASF254
 25720 14ee 01       		.byte	0x1
 25721 14ef 9E08     		.2byte	0x89e
 25722 14f1 97000000 		.4byte	0x97
 25723 14f5 02       		.uleb128 0x2
 25724 14f6 91       		.byte	0x91
 25725 14f7 5B       		.sleb128 -37
 25726 14f8 00       		.byte	0
 25727 14f9 21       		.uleb128 0x21
 25728 14fa AB0C0000 		.4byte	.LASF257
 25729 14fe 01       		.byte	0x1
 25730 14ff D808     		.2byte	0x8d8
 25731 1501 00000000 		.4byte	.LFB74
 25732 1505 38120000 		.4byte	.LFE74-.LFB74
 25733 1509 01       		.uleb128 0x1
 25734 150a 9C       		.byte	0x9c
 25735 150b 9A150000 		.4byte	0x159a
 25736 150f 24       		.uleb128 0x24
 25737 1510 740B0000 		.4byte	.LASF253
 25738 1514 01       		.byte	0x1
 25739 1515 D808     		.2byte	0x8d8
 25740 1517 1F010000 		.4byte	0x11f
 25741 151b 03       		.uleb128 0x3
 25742 151c 91       		.byte	0x91
 25743 151d D47E     		.sleb128 -172
 25744 151f 25       		.uleb128 0x25
 25745 1520 73747200 		.ascii	"str\000"
 25746 1524 01       		.byte	0x1
 25747 1525 DA08     		.2byte	0x8da
 25748 1527 63140000 		.4byte	0x1463
 25749 152b 03       		.uleb128 0x3
 25750 152c 91       		.byte	0x91
 25751 152d DC7E     		.sleb128 -164
 25752 152f 25       		.uleb128 0x25
 25753 1530 6900     		.ascii	"i\000"
 25754 1532 01       		.byte	0x1
 25755 1533 DB08     		.2byte	0x8db
 25756 1535 73000000 		.4byte	0x73
 25757 1539 02       		.uleb128 0x2
 25758 153a 91       		.byte	0x91
 25759 153b 54       		.sleb128 -44
 25760 153c 22       		.uleb128 0x22
 25761 153d 89020000 		.4byte	.LASF223
 25762 1541 01       		.byte	0x1
 25763 1542 DF08     		.2byte	0x8df
 25764 1544 8F100000 		.4byte	0x108f
 25765 1548 02       		.uleb128 0x2
 25766 1549 91       		.byte	0x91
 25767 154a 4C       		.sleb128 -52
 25768 154b 1E       		.uleb128 0x1e
 25769 154c 08010000 		.4byte	.LBB19
 25770 1550 8E0C0000 		.4byte	.LBE19-.LBB19
 25771 1554 25       		.uleb128 0x25
 25772 1555 6B00     		.ascii	"k\000"
 25773 1557 01       		.byte	0x1
 25774 1558 F408     		.2byte	0x8f4
 25775 155a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 557


 25776 155e 02       		.uleb128 0x2
 25777 155f 91       		.byte	0x91
 25778 1560 53       		.sleb128 -45
 25779 1561 1E       		.uleb128 0x1e
 25780 1562 12010000 		.4byte	.LBB20
 25781 1566 680C0000 		.4byte	.LBE20-.LBB20
 25782 156a 22       		.uleb128 0x22
 25783 156b 550B0000 		.4byte	.LASF216
 25784 156f 01       		.byte	0x1
 25785 1570 F608     		.2byte	0x8f6
 25786 1572 97000000 		.4byte	0x97
 25787 1576 02       		.uleb128 0x2
 25788 1577 91       		.byte	0x91
 25789 1578 4B       		.sleb128 -53
 25790 1579 25       		.uleb128 0x25
 25791 157a 4D4F5400 		.ascii	"MOT\000"
 25792 157e 01       		.byte	0x1
 25793 157f F708     		.2byte	0x8f7
 25794 1581 73140000 		.4byte	0x1473
 25795 1585 02       		.uleb128 0x2
 25796 1586 91       		.byte	0x91
 25797 1587 44       		.sleb128 -60
 25798 1588 22       		.uleb128 0x22
 25799 1589 C2100000 		.4byte	.LASF254
 25800 158d 01       		.byte	0x1
 25801 158e F808     		.2byte	0x8f8
 25802 1590 97000000 		.4byte	0x97
 25803 1594 02       		.uleb128 0x2
 25804 1595 91       		.byte	0x91
 25805 1596 43       		.sleb128 -61
 25806 1597 00       		.byte	0
 25807 1598 00       		.byte	0
 25808 1599 00       		.byte	0
 25809 159a 21       		.uleb128 0x21
 25810 159b 44090000 		.4byte	.LASF258
 25811 159f 01       		.byte	0x1
 25812 15a0 DC09     		.2byte	0x9dc
 25813 15a2 00000000 		.4byte	.LFB75
 25814 15a6 C8000000 		.4byte	.LFE75-.LFB75
 25815 15aa 01       		.uleb128 0x1
 25816 15ab 9C       		.byte	0x9c
 25817 15ac DE150000 		.4byte	0x15de
 25818 15b0 24       		.uleb128 0x24
 25819 15b1 740B0000 		.4byte	.LASF253
 25820 15b5 01       		.byte	0x1
 25821 15b6 DC09     		.2byte	0x9dc
 25822 15b8 1F010000 		.4byte	0x11f
 25823 15bc 03       		.uleb128 0x3
 25824 15bd 91       		.byte	0x91
 25825 15be 847F     		.sleb128 -124
 25826 15c0 25       		.uleb128 0x25
 25827 15c1 73747200 		.ascii	"str\000"
 25828 15c5 01       		.byte	0x1
 25829 15c6 DE09     		.2byte	0x9de
 25830 15c8 63140000 		.4byte	0x1463
 25831 15cc 03       		.uleb128 0x3
 25832 15cd 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 558


 25833 15ce 887F     		.sleb128 -120
 25834 15d0 25       		.uleb128 0x25
 25835 15d1 6900     		.ascii	"i\000"
 25836 15d3 01       		.byte	0x1
 25837 15d4 DF09     		.2byte	0x9df
 25838 15d6 73000000 		.4byte	0x73
 25839 15da 02       		.uleb128 0x2
 25840 15db 91       		.byte	0x91
 25841 15dc 6C       		.sleb128 -20
 25842 15dd 00       		.byte	0
 25843 15de 21       		.uleb128 0x21
 25844 15df 800B0000 		.4byte	.LASF259
 25845 15e3 01       		.byte	0x1
 25846 15e4 F309     		.2byte	0x9f3
 25847 15e6 00000000 		.4byte	.LFB76
 25848 15ea 30010000 		.4byte	.LFE76-.LFB76
 25849 15ee 01       		.uleb128 0x1
 25850 15ef 9C       		.byte	0x9c
 25851 15f0 22160000 		.4byte	0x1622
 25852 15f4 24       		.uleb128 0x24
 25853 15f5 740B0000 		.4byte	.LASF253
 25854 15f9 01       		.byte	0x1
 25855 15fa F309     		.2byte	0x9f3
 25856 15fc 1F010000 		.4byte	0x11f
 25857 1600 03       		.uleb128 0x3
 25858 1601 91       		.byte	0x91
 25859 1602 847F     		.sleb128 -124
 25860 1604 25       		.uleb128 0x25
 25861 1605 73747200 		.ascii	"str\000"
 25862 1609 01       		.byte	0x1
 25863 160a F509     		.2byte	0x9f5
 25864 160c 63140000 		.4byte	0x1463
 25865 1610 03       		.uleb128 0x3
 25866 1611 91       		.byte	0x91
 25867 1612 887F     		.sleb128 -120
 25868 1614 25       		.uleb128 0x25
 25869 1615 6900     		.ascii	"i\000"
 25870 1617 01       		.byte	0x1
 25871 1618 F609     		.2byte	0x9f6
 25872 161a 73000000 		.4byte	0x73
 25873 161e 02       		.uleb128 0x2
 25874 161f 91       		.byte	0x91
 25875 1620 6C       		.sleb128 -20
 25876 1621 00       		.byte	0
 25877 1622 21       		.uleb128 0x21
 25878 1623 BF110000 		.4byte	.LASF260
 25879 1627 01       		.byte	0x1
 25880 1628 1A0A     		.2byte	0xa1a
 25881 162a 00000000 		.4byte	.LFB77
 25882 162e 74030000 		.4byte	.LFE77-.LFB77
 25883 1632 01       		.uleb128 0x1
 25884 1633 9C       		.byte	0x9c
 25885 1634 66160000 		.4byte	0x1666
 25886 1638 24       		.uleb128 0x24
 25887 1639 740B0000 		.4byte	.LASF253
 25888 163d 01       		.byte	0x1
 25889 163e 1A0A     		.2byte	0xa1a
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 559


 25890 1640 1F010000 		.4byte	0x11f
 25891 1644 03       		.uleb128 0x3
 25892 1645 91       		.byte	0x91
 25893 1646 AC7D     		.sleb128 -340
 25894 1648 25       		.uleb128 0x25
 25895 1649 73747200 		.ascii	"str\000"
 25896 164d 01       		.byte	0x1
 25897 164e 1C0A     		.2byte	0xa1c
 25898 1650 66160000 		.4byte	0x1666
 25899 1654 03       		.uleb128 0x3
 25900 1655 91       		.byte	0x91
 25901 1656 B07D     		.sleb128 -336
 25902 1658 25       		.uleb128 0x25
 25903 1659 6900     		.ascii	"i\000"
 25904 165b 01       		.byte	0x1
 25905 165c 1D0A     		.2byte	0xa1d
 25906 165e 73000000 		.4byte	0x73
 25907 1662 02       		.uleb128 0x2
 25908 1663 91       		.byte	0x91
 25909 1664 5C       		.sleb128 -36
 25910 1665 00       		.byte	0
 25911 1666 09       		.uleb128 0x9
 25912 1667 F9000000 		.4byte	0xf9
 25913 166b 77160000 		.4byte	0x1677
 25914 166f 23       		.uleb128 0x23
 25915 1670 18010000 		.4byte	0x118
 25916 1674 2B01     		.2byte	0x12b
 25917 1676 00       		.byte	0
 25918 1677 21       		.uleb128 0x21
 25919 1678 750C0000 		.4byte	.LASF261
 25920 167c 01       		.byte	0x1
 25921 167d 450A     		.2byte	0xa45
 25922 167f 00000000 		.4byte	.LFB78
 25923 1683 84000000 		.4byte	.LFE78-.LFB78
 25924 1687 01       		.uleb128 0x1
 25925 1688 9C       		.byte	0x9c
 25926 1689 CA160000 		.4byte	0x16ca
 25927 168d 24       		.uleb128 0x24
 25928 168e C3040000 		.4byte	.LASF206
 25929 1692 01       		.byte	0x1
 25930 1693 450A     		.2byte	0xa45
 25931 1695 940E0000 		.4byte	0xe94
 25932 1699 02       		.uleb128 0x2
 25933 169a 91       		.byte	0x91
 25934 169b 6C       		.sleb128 -20
 25935 169c 24       		.uleb128 0x24
 25936 169d B0000000 		.4byte	.LASF207
 25937 16a1 01       		.byte	0x1
 25938 16a2 450A     		.2byte	0xa45
 25939 16a4 A3000000 		.4byte	0xa3
 25940 16a8 02       		.uleb128 0x2
 25941 16a9 91       		.byte	0x91
 25942 16aa 6A       		.sleb128 -22
 25943 16ab 24       		.uleb128 0x24
 25944 16ac D60C0000 		.4byte	.LASF262
 25945 16b0 01       		.byte	0x1
 25946 16b1 450A     		.2byte	0xa45
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 560


 25947 16b3 97000000 		.4byte	0x97
 25948 16b7 02       		.uleb128 0x2
 25949 16b8 91       		.byte	0x91
 25950 16b9 69       		.sleb128 -23
 25951 16ba 22       		.uleb128 0x22
 25952 16bb A2050000 		.4byte	.LASF221
 25953 16bf 01       		.byte	0x1
 25954 16c0 470A     		.2byte	0xa47
 25955 16c2 A3000000 		.4byte	0xa3
 25956 16c6 02       		.uleb128 0x2
 25957 16c7 91       		.byte	0x91
 25958 16c8 76       		.sleb128 -10
 25959 16c9 00       		.byte	0
 25960 16ca 21       		.uleb128 0x21
 25961 16cb DE040000 		.4byte	.LASF263
 25962 16cf 01       		.byte	0x1
 25963 16d0 610A     		.2byte	0xa61
 25964 16d2 00000000 		.4byte	.LFB79
 25965 16d6 88000000 		.4byte	.LFE79-.LFB79
 25966 16da 01       		.uleb128 0x1
 25967 16db 9C       		.byte	0x9c
 25968 16dc 0E170000 		.4byte	0x170e
 25969 16e0 24       		.uleb128 0x24
 25970 16e1 C3040000 		.4byte	.LASF206
 25971 16e5 01       		.byte	0x1
 25972 16e6 610A     		.2byte	0xa61
 25973 16e8 940E0000 		.4byte	0xe94
 25974 16ec 02       		.uleb128 0x2
 25975 16ed 91       		.byte	0x91
 25976 16ee 6C       		.sleb128 -20
 25977 16ef 24       		.uleb128 0x24
 25978 16f0 B0000000 		.4byte	.LASF207
 25979 16f4 01       		.byte	0x1
 25980 16f5 610A     		.2byte	0xa61
 25981 16f7 A3000000 		.4byte	0xa3
 25982 16fb 02       		.uleb128 0x2
 25983 16fc 91       		.byte	0x91
 25984 16fd 6A       		.sleb128 -22
 25985 16fe 22       		.uleb128 0x22
 25986 16ff A2050000 		.4byte	.LASF221
 25987 1703 01       		.byte	0x1
 25988 1704 630A     		.2byte	0xa63
 25989 1706 A3000000 		.4byte	0xa3
 25990 170a 02       		.uleb128 0x2
 25991 170b 91       		.byte	0x91
 25992 170c 76       		.sleb128 -10
 25993 170d 00       		.byte	0
 25994 170e 21       		.uleb128 0x21
 25995 170f DC090000 		.4byte	.LASF264
 25996 1713 01       		.byte	0x1
 25997 1714 790A     		.2byte	0xa79
 25998 1716 00000000 		.4byte	.LFB80
 25999 171a 80000000 		.4byte	.LFE80-.LFB80
 26000 171e 01       		.uleb128 0x1
 26001 171f 9C       		.byte	0x9c
 26002 1720 52170000 		.4byte	0x1752
 26003 1724 24       		.uleb128 0x24
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 561


 26004 1725 C3040000 		.4byte	.LASF206
 26005 1729 01       		.byte	0x1
 26006 172a 790A     		.2byte	0xa79
 26007 172c 940E0000 		.4byte	0xe94
 26008 1730 02       		.uleb128 0x2
 26009 1731 91       		.byte	0x91
 26010 1732 6C       		.sleb128 -20
 26011 1733 24       		.uleb128 0x24
 26012 1734 B0000000 		.4byte	.LASF207
 26013 1738 01       		.byte	0x1
 26014 1739 790A     		.2byte	0xa79
 26015 173b A3000000 		.4byte	0xa3
 26016 173f 02       		.uleb128 0x2
 26017 1740 91       		.byte	0x91
 26018 1741 6A       		.sleb128 -22
 26019 1742 22       		.uleb128 0x22
 26020 1743 A2050000 		.4byte	.LASF221
 26021 1747 01       		.byte	0x1
 26022 1748 7B0A     		.2byte	0xa7b
 26023 174a A3000000 		.4byte	0xa3
 26024 174e 02       		.uleb128 0x2
 26025 174f 91       		.byte	0x91
 26026 1750 76       		.sleb128 -10
 26027 1751 00       		.byte	0
 26028 1752 27       		.uleb128 0x27
 26029 1753 92100000 		.4byte	.LASF270
 26030 1757 01       		.byte	0x1
 26031 1758 940A     		.2byte	0xa94
 26032 175a 97000000 		.4byte	0x97
 26033 175e 00000000 		.4byte	.LFB81
 26034 1762 3E000000 		.4byte	.LFE81-.LFB81
 26035 1766 01       		.uleb128 0x1
 26036 1767 9C       		.byte	0x9c
 26037 1768 A7170000 		.4byte	0x17a7
 26038 176c 24       		.uleb128 0x24
 26039 176d 19090000 		.4byte	.LASF265
 26040 1771 01       		.byte	0x1
 26041 1772 940A     		.2byte	0xa94
 26042 1774 940E0000 		.4byte	0xe94
 26043 1778 02       		.uleb128 0x2
 26044 1779 91       		.byte	0x91
 26045 177a 6C       		.sleb128 -20
 26046 177b 24       		.uleb128 0x24
 26047 177c 98040000 		.4byte	.LASF266
 26048 1780 01       		.byte	0x1
 26049 1781 940A     		.2byte	0xa94
 26050 1783 97000000 		.4byte	0x97
 26051 1787 02       		.uleb128 0x2
 26052 1788 91       		.byte	0x91
 26053 1789 6B       		.sleb128 -21
 26054 178a 25       		.uleb128 0x25
 26055 178b 6900     		.ascii	"i\000"
 26056 178d 01       		.byte	0x1
 26057 178e 960A     		.2byte	0xa96
 26058 1790 97000000 		.4byte	0x97
 26059 1794 02       		.uleb128 0x2
 26060 1795 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 562


 26061 1796 77       		.sleb128 -9
 26062 1797 22       		.uleb128 0x22
 26063 1798 E00A0000 		.4byte	.LASF267
 26064 179c 01       		.byte	0x1
 26065 179d 970A     		.2byte	0xa97
 26066 179f 97000000 		.4byte	0x97
 26067 17a3 02       		.uleb128 0x2
 26068 17a4 91       		.byte	0x91
 26069 17a5 76       		.sleb128 -10
 26070 17a6 00       		.byte	0
 26071 17a7 21       		.uleb128 0x21
 26072 17a8 31090000 		.4byte	.LASF268
 26073 17ac 01       		.byte	0x1
 26074 17ad A40A     		.2byte	0xaa4
 26075 17af 00000000 		.4byte	.LFB82
 26076 17b3 2E000000 		.4byte	.LFE82-.LFB82
 26077 17b7 01       		.uleb128 0x1
 26078 17b8 9C       		.byte	0x9c
 26079 17b9 EB170000 		.4byte	0x17eb
 26080 17bd 24       		.uleb128 0x24
 26081 17be E8030000 		.4byte	.LASF269
 26082 17c2 01       		.byte	0x1
 26083 17c3 A40A     		.2byte	0xaa4
 26084 17c5 97000000 		.4byte	0x97
 26085 17c9 02       		.uleb128 0x2
 26086 17ca 91       		.byte	0x91
 26087 17cb 6F       		.sleb128 -17
 26088 17cc 22       		.uleb128 0x22
 26089 17cd B0000000 		.4byte	.LASF207
 26090 17d1 01       		.byte	0x1
 26091 17d2 A50A     		.2byte	0xaa5
 26092 17d4 73000000 		.4byte	0x73
 26093 17d8 02       		.uleb128 0x2
 26094 17d9 91       		.byte	0x91
 26095 17da 74       		.sleb128 -12
 26096 17db 22       		.uleb128 0x22
 26097 17dc C3040000 		.4byte	.LASF206
 26098 17e0 01       		.byte	0x1
 26099 17e1 A60A     		.2byte	0xaa6
 26100 17e3 EB170000 		.4byte	0x17eb
 26101 17e7 02       		.uleb128 0x2
 26102 17e8 91       		.byte	0x91
 26103 17e9 70       		.sleb128 -16
 26104 17ea 00       		.byte	0
 26105 17eb 09       		.uleb128 0x9
 26106 17ec 97000000 		.4byte	0x97
 26107 17f0 FB170000 		.4byte	0x17fb
 26108 17f4 0A       		.uleb128 0xa
 26109 17f5 18010000 		.4byte	0x118
 26110 17f9 01       		.byte	0x1
 26111 17fa 00       		.byte	0
 26112 17fb 28       		.uleb128 0x28
 26113 17fc 32030000 		.4byte	.LASF271
 26114 1800 01       		.byte	0x1
 26115 1801 B30A     		.2byte	0xab3
 26116 1803 97000000 		.4byte	0x97
 26117 1807 00000000 		.4byte	.LFB83
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 563


 26118 180b 98000000 		.4byte	.LFE83-.LFB83
 26119 180f 01       		.uleb128 0x1
 26120 1810 9C       		.byte	0x9c
 26121 1811 5F180000 		.4byte	0x185f
 26122 1815 24       		.uleb128 0x24
 26123 1816 8B040000 		.4byte	.LASF272
 26124 181a 01       		.byte	0x1
 26125 181b B30A     		.2byte	0xab3
 26126 181d 73000000 		.4byte	0x73
 26127 1821 02       		.uleb128 0x2
 26128 1822 91       		.byte	0x91
 26129 1823 64       		.sleb128 -28
 26130 1824 25       		.uleb128 0x25
 26131 1825 6900     		.ascii	"i\000"
 26132 1827 01       		.byte	0x1
 26133 1828 B50A     		.2byte	0xab5
 26134 182a 73000000 		.4byte	0x73
 26135 182e 02       		.uleb128 0x2
 26136 182f 91       		.byte	0x91
 26137 1830 74       		.sleb128 -12
 26138 1831 22       		.uleb128 0x22
 26139 1832 75000000 		.4byte	.LASF273
 26140 1836 01       		.byte	0x1
 26141 1837 B60A     		.2byte	0xab6
 26142 1839 97000000 		.4byte	0x97
 26143 183d 02       		.uleb128 0x2
 26144 183e 91       		.byte	0x91
 26145 183f 6B       		.sleb128 -21
 26146 1840 22       		.uleb128 0x22
 26147 1841 E8040000 		.4byte	.LASF274
 26148 1845 01       		.byte	0x1
 26149 1846 B70A     		.2byte	0xab7
 26150 1848 73000000 		.4byte	0x73
 26151 184c 02       		.uleb128 0x2
 26152 184d 91       		.byte	0x91
 26153 184e 6C       		.sleb128 -20
 26154 184f 22       		.uleb128 0x22
 26155 1850 2A040000 		.4byte	.LASF275
 26156 1854 01       		.byte	0x1
 26157 1855 B80A     		.2byte	0xab8
 26158 1857 97000000 		.4byte	0x97
 26159 185b 02       		.uleb128 0x2
 26160 185c 91       		.byte	0x91
 26161 185d 73       		.sleb128 -13
 26162 185e 00       		.byte	0
 26163 185f 21       		.uleb128 0x21
 26164 1860 0F0C0000 		.4byte	.LASF276
 26165 1864 01       		.byte	0x1
 26166 1865 DD0A     		.2byte	0xadd
 26167 1867 00000000 		.4byte	.LFB84
 26168 186b 80000000 		.4byte	.LFE84-.LFB84
 26169 186f 01       		.uleb128 0x1
 26170 1870 9C       		.byte	0x9c
 26171 1871 83180000 		.4byte	0x1883
 26172 1875 25       		.uleb128 0x25
 26173 1876 6900     		.ascii	"i\000"
 26174 1878 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 564


 26175 1879 DF0A     		.2byte	0xadf
 26176 187b A3000000 		.4byte	0xa3
 26177 187f 02       		.uleb128 0x2
 26178 1880 91       		.byte	0x91
 26179 1881 76       		.sleb128 -10
 26180 1882 00       		.byte	0
 26181 1883 28       		.uleb128 0x28
 26182 1884 5F0B0000 		.4byte	.LASF277
 26183 1888 01       		.byte	0x1
 26184 1889 F60A     		.2byte	0xaf6
 26185 188b 97000000 		.4byte	0x97
 26186 188f 00000000 		.4byte	.LFB85
 26187 1893 5C000000 		.4byte	.LFE85-.LFB85
 26188 1897 01       		.uleb128 0x1
 26189 1898 9C       		.byte	0x9c
 26190 1899 AB180000 		.4byte	0x18ab
 26191 189d 25       		.uleb128 0x25
 26192 189e 6900     		.ascii	"i\000"
 26193 18a0 01       		.byte	0x1
 26194 18a1 F70A     		.2byte	0xaf7
 26195 18a3 A3000000 		.4byte	0xa3
 26196 18a7 02       		.uleb128 0x2
 26197 18a8 91       		.byte	0x91
 26198 18a9 76       		.sleb128 -10
 26199 18aa 00       		.byte	0
 26200 18ab 28       		.uleb128 0x28
 26201 18ac EE040000 		.4byte	.LASF278
 26202 18b0 01       		.byte	0x1
 26203 18b1 090B     		.2byte	0xb09
 26204 18b3 97000000 		.4byte	0x97
 26205 18b7 00000000 		.4byte	.LFB86
 26206 18bb D0050000 		.4byte	.LFE86-.LFB86
 26207 18bf 01       		.uleb128 0x1
 26208 18c0 9C       		.byte	0x9c
 26209 18c1 E0180000 		.4byte	0x18e0
 26210 18c5 25       		.uleb128 0x25
 26211 18c6 6900     		.ascii	"i\000"
 26212 18c8 01       		.byte	0x1
 26213 18c9 0B0B     		.2byte	0xb0b
 26214 18cb 97000000 		.4byte	0x97
 26215 18cf 02       		.uleb128 0x2
 26216 18d0 91       		.byte	0x91
 26217 18d1 77       		.sleb128 -9
 26218 18d2 25       		.uleb128 0x25
 26219 18d3 6A00     		.ascii	"j\000"
 26220 18d5 01       		.byte	0x1
 26221 18d6 0B0B     		.2byte	0xb0b
 26222 18d8 97000000 		.4byte	0x97
 26223 18dc 02       		.uleb128 0x2
 26224 18dd 91       		.byte	0x91
 26225 18de 76       		.sleb128 -10
 26226 18df 00       		.byte	0
 26227 18e0 29       		.uleb128 0x29
 26228 18e1 08070000 		.4byte	.LASF279
 26229 18e5 01       		.byte	0x1
 26230 18e6 8E0B     		.2byte	0xb8e
 26231 18e8 00000000 		.4byte	.LFB87
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 565


 26232 18ec 30020000 		.4byte	.LFE87-.LFB87
 26233 18f0 01       		.uleb128 0x1
 26234 18f1 9C       		.byte	0x9c
 26235 18f2 1D190000 		.4byte	0x191d
 26236 18f6 22       		.uleb128 0x22
 26237 18f7 550B0000 		.4byte	.LASF216
 26238 18fb 01       		.byte	0x1
 26239 18fc 900B     		.2byte	0xb90
 26240 18fe 97000000 		.4byte	0x97
 26241 1902 02       		.uleb128 0x2
 26242 1903 91       		.byte	0x91
 26243 1904 73       		.sleb128 -13
 26244 1905 1E       		.uleb128 0x1e
 26245 1906 FA000000 		.4byte	.LBB21
 26246 190a 6A000000 		.4byte	.LBE21-.LBB21
 26247 190e 25       		.uleb128 0x25
 26248 190f 6900     		.ascii	"i\000"
 26249 1911 01       		.byte	0x1
 26250 1912 A10B     		.2byte	0xba1
 26251 1914 73000000 		.4byte	0x73
 26252 1918 02       		.uleb128 0x2
 26253 1919 91       		.byte	0x91
 26254 191a 74       		.sleb128 -12
 26255 191b 00       		.byte	0
 26256 191c 00       		.byte	0
 26257 191d 26       		.uleb128 0x26
 26258 191e 2F050000 		.4byte	.LASF281
 26259 1922 01       		.byte	0x1
 26260 1923 C30B     		.2byte	0xbc3
 26261 1925 00000000 		.4byte	.LFB88
 26262 1929 B4000000 		.4byte	.LFE88-.LFB88
 26263 192d 01       		.uleb128 0x1
 26264 192e 9C       		.byte	0x9c
 26265 192f 61190000 		.4byte	0x1961
 26266 1933 22       		.uleb128 0x22
 26267 1934 A2050000 		.4byte	.LASF221
 26268 1938 01       		.byte	0x1
 26269 1939 C50B     		.2byte	0xbc5
 26270 193b 97000000 		.4byte	0x97
 26271 193f 02       		.uleb128 0x2
 26272 1940 91       		.byte	0x91
 26273 1941 6F       		.sleb128 -17
 26274 1942 22       		.uleb128 0x22
 26275 1943 B20E0000 		.4byte	.LASF212
 26276 1947 01       		.byte	0x1
 26277 1948 C60B     		.2byte	0xbc6
 26278 194a C7000000 		.4byte	0xc7
 26279 194e 02       		.uleb128 0x2
 26280 194f 91       		.byte	0x91
 26281 1950 6C       		.sleb128 -20
 26282 1951 22       		.uleb128 0x22
 26283 1952 C3040000 		.4byte	.LASF206
 26284 1956 01       		.byte	0x1
 26285 1957 C90B     		.2byte	0xbc9
 26286 1959 DE070000 		.4byte	0x7de
 26287 195d 02       		.uleb128 0x2
 26288 195e 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 566


 26289 195f 64       		.sleb128 -28
 26290 1960 00       		.byte	0
 26291 1961 26       		.uleb128 0x26
 26292 1962 FC0B0000 		.4byte	.LASF282
 26293 1966 01       		.byte	0x1
 26294 1967 DC0B     		.2byte	0xbdc
 26295 1969 00000000 		.4byte	.LFB89
 26296 196d B8000000 		.4byte	.LFE89-.LFB89
 26297 1971 01       		.uleb128 0x1
 26298 1972 9C       		.byte	0x9c
 26299 1973 A5190000 		.4byte	0x19a5
 26300 1977 22       		.uleb128 0x22
 26301 1978 A2050000 		.4byte	.LASF221
 26302 197c 01       		.byte	0x1
 26303 197d DE0B     		.2byte	0xbde
 26304 197f 97000000 		.4byte	0x97
 26305 1983 02       		.uleb128 0x2
 26306 1984 91       		.byte	0x91
 26307 1985 6F       		.sleb128 -17
 26308 1986 22       		.uleb128 0x22
 26309 1987 B20E0000 		.4byte	.LASF212
 26310 198b 01       		.byte	0x1
 26311 198c DF0B     		.2byte	0xbdf
 26312 198e C7000000 		.4byte	0xc7
 26313 1992 02       		.uleb128 0x2
 26314 1993 91       		.byte	0x91
 26315 1994 6C       		.sleb128 -20
 26316 1995 22       		.uleb128 0x22
 26317 1996 C3040000 		.4byte	.LASF206
 26318 199a 01       		.byte	0x1
 26319 199b E30B     		.2byte	0xbe3
 26320 199d DE070000 		.4byte	0x7de
 26321 19a1 02       		.uleb128 0x2
 26322 19a2 91       		.byte	0x91
 26323 19a3 64       		.sleb128 -28
 26324 19a4 00       		.byte	0
 26325 19a5 26       		.uleb128 0x26
 26326 19a6 66060000 		.4byte	.LASF283
 26327 19aa 01       		.byte	0x1
 26328 19ab F50B     		.2byte	0xbf5
 26329 19ad 00000000 		.4byte	.LFB90
 26330 19b1 B8000000 		.4byte	.LFE90-.LFB90
 26331 19b5 01       		.uleb128 0x1
 26332 19b6 9C       		.byte	0x9c
 26333 19b7 E9190000 		.4byte	0x19e9
 26334 19bb 22       		.uleb128 0x22
 26335 19bc A2050000 		.4byte	.LASF221
 26336 19c0 01       		.byte	0x1
 26337 19c1 F70B     		.2byte	0xbf7
 26338 19c3 97000000 		.4byte	0x97
 26339 19c7 02       		.uleb128 0x2
 26340 19c8 91       		.byte	0x91
 26341 19c9 6F       		.sleb128 -17
 26342 19ca 22       		.uleb128 0x22
 26343 19cb B20E0000 		.4byte	.LASF212
 26344 19cf 01       		.byte	0x1
 26345 19d0 F80B     		.2byte	0xbf8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 567


 26346 19d2 C7000000 		.4byte	0xc7
 26347 19d6 02       		.uleb128 0x2
 26348 19d7 91       		.byte	0x91
 26349 19d8 6C       		.sleb128 -20
 26350 19d9 22       		.uleb128 0x22
 26351 19da C3040000 		.4byte	.LASF206
 26352 19de 01       		.byte	0x1
 26353 19df FC0B     		.2byte	0xbfc
 26354 19e1 DE070000 		.4byte	0x7de
 26355 19e5 02       		.uleb128 0x2
 26356 19e6 91       		.byte	0x91
 26357 19e7 64       		.sleb128 -28
 26358 19e8 00       		.byte	0
 26359 19e9 2A       		.uleb128 0x2a
 26360 19ea 79090000 		.4byte	.LASF284
 26361 19ee 01       		.byte	0x1
 26362 19ef 0E0C     		.2byte	0xc0e
 26363 19f1 00000000 		.4byte	.LFB91
 26364 19f5 44020000 		.4byte	.LFE91-.LFB91
 26365 19f9 01       		.uleb128 0x1
 26366 19fa 9C       		.byte	0x9c
 26367 19fb 531A0000 		.4byte	0x1a53
 26368 19ff 22       		.uleb128 0x22
 26369 1a00 B20E0000 		.4byte	.LASF212
 26370 1a04 01       		.byte	0x1
 26371 1a05 110C     		.2byte	0xc11
 26372 1a07 531A0000 		.4byte	0x1a53
 26373 1a0b 02       		.uleb128 0x2
 26374 1a0c 91       		.byte	0x91
 26375 1a0d 70       		.sleb128 -16
 26376 1a0e 22       		.uleb128 0x22
 26377 1a0f 64050000 		.4byte	.LASF285
 26378 1a13 01       		.byte	0x1
 26379 1a14 120C     		.2byte	0xc12
 26380 1a16 531A0000 		.4byte	0x1a53
 26381 1a1a 05       		.uleb128 0x5
 26382 1a1b 03       		.byte	0x3
 26383 1a1c 00000000 		.4byte	last_aux_int16.11232
 26384 1a20 2B       		.uleb128 0x2b
 26385 1a21 2E000000 		.4byte	.LBB22
 26386 1a25 50000000 		.4byte	.LBE22-.LBB22
 26387 1a29 3B1A0000 		.4byte	0x1a3b
 26388 1a2d 25       		.uleb128 0x25
 26389 1a2e 6900     		.ascii	"i\000"
 26390 1a30 01       		.byte	0x1
 26391 1a31 190C     		.2byte	0xc19
 26392 1a33 97000000 		.4byte	0x97
 26393 1a37 02       		.uleb128 0x2
 26394 1a38 91       		.byte	0x91
 26395 1a39 77       		.sleb128 -9
 26396 1a3a 00       		.byte	0
 26397 1a3b 1E       		.uleb128 0x1e
 26398 1a3c 88000000 		.4byte	.LBB23
 26399 1a40 98010000 		.4byte	.LBE23-.LBB23
 26400 1a44 25       		.uleb128 0x25
 26401 1a45 6900     		.ascii	"i\000"
 26402 1a47 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 568


 26403 1a48 230C     		.2byte	0xc23
 26404 1a4a 97000000 		.4byte	0x97
 26405 1a4e 02       		.uleb128 0x2
 26406 1a4f 91       		.byte	0x91
 26407 1a50 76       		.sleb128 -10
 26408 1a51 00       		.byte	0
 26409 1a52 00       		.byte	0
 26410 1a53 09       		.uleb128 0x9
 26411 1a54 C7000000 		.4byte	0xc7
 26412 1a58 631A0000 		.4byte	0x1a63
 26413 1a5c 0A       		.uleb128 0xa
 26414 1a5d 18010000 		.4byte	0x118
 26415 1a61 01       		.byte	0x1
 26416 1a62 00       		.byte	0
 26417 1a63 26       		.uleb128 0x26
 26418 1a64 2E110000 		.4byte	.LASF286
 26419 1a68 01       		.byte	0x1
 26420 1a69 3E0C     		.2byte	0xc3e
 26421 1a6b 00000000 		.4byte	.LFB92
 26422 1a6f BC000000 		.4byte	.LFE92-.LFB92
 26423 1a73 01       		.uleb128 0x1
 26424 1a74 9C       		.byte	0x9c
 26425 1a75 891A0000 		.4byte	0x1a89
 26426 1a79 25       		.uleb128 0x25
 26427 1a7a 61757800 		.ascii	"aux\000"
 26428 1a7e 01       		.byte	0x1
 26429 1a7f 410C     		.2byte	0xc41
 26430 1a81 97000000 		.4byte	0x97
 26431 1a85 02       		.uleb128 0x2
 26432 1a86 91       		.byte	0x91
 26433 1a87 77       		.sleb128 -9
 26434 1a88 00       		.byte	0
 26435 1a89 26       		.uleb128 0x26
 26436 1a8a CB090000 		.4byte	.LASF287
 26437 1a8e 01       		.byte	0x1
 26438 1a8f 550C     		.2byte	0xc55
 26439 1a91 00000000 		.4byte	.LFB93
 26440 1a95 5C000000 		.4byte	.LFE93-.LFB93
 26441 1a99 01       		.uleb128 0x1
 26442 1a9a 9C       		.byte	0x9c
 26443 1a9b AF1A0000 		.4byte	0x1aaf
 26444 1a9f 22       		.uleb128 0x22
 26445 1aa0 C3040000 		.4byte	.LASF206
 26446 1aa4 01       		.byte	0x1
 26447 1aa5 570C     		.2byte	0xc57
 26448 1aa7 91050000 		.4byte	0x591
 26449 1aab 02       		.uleb128 0x2
 26450 1aac 91       		.byte	0x91
 26451 1aad 74       		.sleb128 -12
 26452 1aae 00       		.byte	0
 26453 1aaf 26       		.uleb128 0x26
 26454 1ab0 0F0D0000 		.4byte	.LASF288
 26455 1ab4 01       		.byte	0x1
 26456 1ab5 6C0C     		.2byte	0xc6c
 26457 1ab7 00000000 		.4byte	.LFB94
 26458 1abb 38010000 		.4byte	.LFE94-.LFB94
 26459 1abf 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 569


 26460 1ac0 9C       		.byte	0x9c
 26461 1ac1 F31A0000 		.4byte	0x1af3
 26462 1ac5 22       		.uleb128 0x22
 26463 1ac6 A2050000 		.4byte	.LASF221
 26464 1aca 01       		.byte	0x1
 26465 1acb 6E0C     		.2byte	0xc6e
 26466 1acd 97000000 		.4byte	0x97
 26467 1ad1 02       		.uleb128 0x2
 26468 1ad2 91       		.byte	0x91
 26469 1ad3 6F       		.sleb128 -17
 26470 1ad4 22       		.uleb128 0x22
 26471 1ad5 B20E0000 		.4byte	.LASF212
 26472 1ad9 01       		.byte	0x1
 26473 1ada 6F0C     		.2byte	0xc6f
 26474 1adc C7000000 		.4byte	0xc7
 26475 1ae0 02       		.uleb128 0x2
 26476 1ae1 91       		.byte	0x91
 26477 1ae2 6C       		.sleb128 -20
 26478 1ae3 22       		.uleb128 0x22
 26479 1ae4 C3040000 		.4byte	.LASF206
 26480 1ae8 01       		.byte	0x1
 26481 1ae9 730C     		.2byte	0xc73
 26482 1aeb 21090000 		.4byte	0x921
 26483 1aef 02       		.uleb128 0x2
 26484 1af0 91       		.byte	0x91
 26485 1af1 60       		.sleb128 -32
 26486 1af2 00       		.byte	0
 26487 1af3 26       		.uleb128 0x26
 26488 1af4 62080000 		.4byte	.LASF289
 26489 1af8 01       		.byte	0x1
 26490 1af9 930C     		.2byte	0xc93
 26491 1afb 00000000 		.4byte	.LFB95
 26492 1aff B0000000 		.4byte	.LFE95-.LFB95
 26493 1b03 01       		.uleb128 0x1
 26494 1b04 9C       		.byte	0x9c
 26495 1b05 281B0000 		.4byte	0x1b28
 26496 1b09 22       		.uleb128 0x22
 26497 1b0a C3040000 		.4byte	.LASF206
 26498 1b0e 01       		.byte	0x1
 26499 1b0f 970C     		.2byte	0xc97
 26500 1b11 11090000 		.4byte	0x911
 26501 1b15 02       		.uleb128 0x2
 26502 1b16 91       		.byte	0x91
 26503 1b17 70       		.sleb128 -16
 26504 1b18 22       		.uleb128 0x22
 26505 1b19 B20E0000 		.4byte	.LASF212
 26506 1b1d 01       		.byte	0x1
 26507 1b1e 980C     		.2byte	0xc98
 26508 1b20 C7000000 		.4byte	0xc7
 26509 1b24 02       		.uleb128 0x2
 26510 1b25 91       		.byte	0x91
 26511 1b26 6E       		.sleb128 -18
 26512 1b27 00       		.byte	0
 26513 1b28 26       		.uleb128 0x26
 26514 1b29 59100000 		.4byte	.LASF290
 26515 1b2d 01       		.byte	0x1
 26516 1b2e B30C     		.2byte	0xcb3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 570


 26517 1b30 00000000 		.4byte	.LFB96
 26518 1b34 5C000000 		.4byte	.LFE96-.LFB96
 26519 1b38 01       		.uleb128 0x1
 26520 1b39 9C       		.byte	0x9c
 26521 1b3a 5D1B0000 		.4byte	0x1b5d
 26522 1b3e 22       		.uleb128 0x22
 26523 1b3f C3040000 		.4byte	.LASF206
 26524 1b43 01       		.byte	0x1
 26525 1b44 B70C     		.2byte	0xcb7
 26526 1b46 5D1B0000 		.4byte	0x1b5d
 26527 1b4a 02       		.uleb128 0x2
 26528 1b4b 91       		.byte	0x91
 26529 1b4c 74       		.sleb128 -12
 26530 1b4d 22       		.uleb128 0x22
 26531 1b4e B20E0000 		.4byte	.LASF212
 26532 1b52 01       		.byte	0x1
 26533 1b53 B80C     		.2byte	0xcb8
 26534 1b55 C7000000 		.4byte	0xc7
 26535 1b59 02       		.uleb128 0x2
 26536 1b5a 91       		.byte	0x91
 26537 1b5b 72       		.sleb128 -14
 26538 1b5c 00       		.byte	0
 26539 1b5d 09       		.uleb128 0x9
 26540 1b5e 97000000 		.4byte	0x97
 26541 1b62 6D1B0000 		.4byte	0x1b6d
 26542 1b66 0A       		.uleb128 0xa
 26543 1b67 18010000 		.4byte	0x118
 26544 1b6b 03       		.byte	0x3
 26545 1b6c 00       		.byte	0
 26546 1b6d 2C       		.uleb128 0x2c
 26547 1b6e 88000000 		.4byte	.LASF343
 26548 1b72 01       		.byte	0x1
 26549 1b73 C90C     		.2byte	0xcc9
 26550 1b75 00000000 		.4byte	.LFB97
 26551 1b79 34000000 		.4byte	.LFE97-.LFB97
 26552 1b7d 01       		.uleb128 0x1
 26553 1b7e 9C       		.byte	0x9c
 26554 1b7f 26       		.uleb128 0x26
 26555 1b80 DF020000 		.4byte	.LASF291
 26556 1b84 01       		.byte	0x1
 26557 1b85 D70C     		.2byte	0xcd7
 26558 1b87 00000000 		.4byte	.LFB98
 26559 1b8b 20000000 		.4byte	.LFE98-.LFB98
 26560 1b8f 01       		.uleb128 0x1
 26561 1b90 9C       		.byte	0x9c
 26562 1b91 A51B0000 		.4byte	0x1ba5
 26563 1b95 22       		.uleb128 0x22
 26564 1b96 C3040000 		.4byte	.LASF206
 26565 1b9a 01       		.byte	0x1
 26566 1b9b D90C     		.2byte	0xcd9
 26567 1b9d EB170000 		.4byte	0x17eb
 26568 1ba1 02       		.uleb128 0x2
 26569 1ba2 91       		.byte	0x91
 26570 1ba3 74       		.sleb128 -12
 26571 1ba4 00       		.byte	0
 26572 1ba5 26       		.uleb128 0x26
 26573 1ba6 F0000000 		.4byte	.LASF292
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 571


 26574 1baa 01       		.byte	0x1
 26575 1bab E50C     		.2byte	0xce5
 26576 1bad 00000000 		.4byte	.LFB99
 26577 1bb1 6C000000 		.4byte	.LFE99-.LFB99
 26578 1bb5 01       		.uleb128 0x1
 26579 1bb6 9C       		.byte	0x9c
 26580 1bb7 DA1B0000 		.4byte	0x1bda
 26581 1bbb 22       		.uleb128 0x22
 26582 1bbc C3040000 		.4byte	.LASF206
 26583 1bc0 01       		.byte	0x1
 26584 1bc1 E90C     		.2byte	0xce9
 26585 1bc3 11090000 		.4byte	0x911
 26586 1bc7 02       		.uleb128 0x2
 26587 1bc8 91       		.byte	0x91
 26588 1bc9 70       		.sleb128 -16
 26589 1bca 22       		.uleb128 0x22
 26590 1bcb B20E0000 		.4byte	.LASF212
 26591 1bcf 01       		.byte	0x1
 26592 1bd0 EA0C     		.2byte	0xcea
 26593 1bd2 C7000000 		.4byte	0xc7
 26594 1bd6 02       		.uleb128 0x2
 26595 1bd7 91       		.byte	0x91
 26596 1bd8 6E       		.sleb128 -18
 26597 1bd9 00       		.byte	0
 26598 1bda 26       		.uleb128 0x26
 26599 1bdb BB0D0000 		.4byte	.LASF293
 26600 1bdf 01       		.byte	0x1
 26601 1be0 FB0C     		.2byte	0xcfb
 26602 1be2 00000000 		.4byte	.LFB100
 26603 1be6 BC010000 		.4byte	.LFE100-.LFB100
 26604 1bea 01       		.uleb128 0x1
 26605 1beb 9C       		.byte	0x9c
 26606 1bec 3C1C0000 		.4byte	0x1c3c
 26607 1bf0 22       		.uleb128 0x22
 26608 1bf1 95090000 		.4byte	.LASF294
 26609 1bf5 01       		.byte	0x1
 26610 1bf6 FE0C     		.2byte	0xcfe
 26611 1bf8 AF000000 		.4byte	0xaf
 26612 1bfc 02       		.uleb128 0x2
 26613 1bfd 91       		.byte	0x91
 26614 1bfe 70       		.sleb128 -16
 26615 1bff 22       		.uleb128 0x22
 26616 1c00 690C0000 		.4byte	.LASF295
 26617 1c04 01       		.byte	0x1
 26618 1c05 FF0C     		.2byte	0xcff
 26619 1c07 EB000000 		.4byte	0xeb
 26620 1c0b 02       		.uleb128 0x2
 26621 1c0c 91       		.byte	0x91
 26622 1c0d 6C       		.sleb128 -20
 26623 1c0e 22       		.uleb128 0x22
 26624 1c0f B0000000 		.4byte	.LASF207
 26625 1c13 01       		.byte	0x1
 26626 1c14 000D     		.2byte	0xd00
 26627 1c16 97000000 		.4byte	0x97
 26628 1c1a 02       		.uleb128 0x2
 26629 1c1b 91       		.byte	0x91
 26630 1c1c 77       		.sleb128 -9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 572


 26631 1c1d 22       		.uleb128 0x22
 26632 1c1e C3040000 		.4byte	.LASF206
 26633 1c22 01       		.byte	0x1
 26634 1c23 010D     		.2byte	0xd01
 26635 1c25 EB170000 		.4byte	0x17eb
 26636 1c29 02       		.uleb128 0x2
 26637 1c2a 91       		.byte	0x91
 26638 1c2b 68       		.sleb128 -24
 26639 1c2c 22       		.uleb128 0x22
 26640 1c2d D60C0000 		.4byte	.LASF262
 26641 1c31 01       		.byte	0x1
 26642 1c32 020D     		.2byte	0xd02
 26643 1c34 97000000 		.4byte	0x97
 26644 1c38 02       		.uleb128 0x2
 26645 1c39 91       		.byte	0x91
 26646 1c3a 6B       		.sleb128 -21
 26647 1c3b 00       		.byte	0
 26648 1c3c 26       		.uleb128 0x26
 26649 1c3d 7E010000 		.4byte	.LASF296
 26650 1c41 01       		.byte	0x1
 26651 1c42 3C0D     		.2byte	0xd3c
 26652 1c44 00000000 		.4byte	.LFB101
 26653 1c48 60000000 		.4byte	.LFE101-.LFB101
 26654 1c4c 01       		.uleb128 0x1
 26655 1c4d 9C       		.byte	0x9c
 26656 1c4e 711C0000 		.4byte	0x1c71
 26657 1c52 22       		.uleb128 0x22
 26658 1c53 C3040000 		.4byte	.LASF206
 26659 1c57 01       		.byte	0x1
 26660 1c58 3E0D     		.2byte	0xd3e
 26661 1c5a 11090000 		.4byte	0x911
 26662 1c5e 02       		.uleb128 0x2
 26663 1c5f 91       		.byte	0x91
 26664 1c60 70       		.sleb128 -16
 26665 1c61 22       		.uleb128 0x22
 26666 1c62 B20E0000 		.4byte	.LASF212
 26667 1c66 01       		.byte	0x1
 26668 1c67 3F0D     		.2byte	0xd3f
 26669 1c69 C7000000 		.4byte	0xc7
 26670 1c6d 02       		.uleb128 0x2
 26671 1c6e 91       		.byte	0x91
 26672 1c6f 6E       		.sleb128 -18
 26673 1c70 00       		.byte	0
 26674 1c71 26       		.uleb128 0x26
 26675 1c72 2C010000 		.4byte	.LASF297
 26676 1c76 01       		.byte	0x1
 26677 1c77 520D     		.2byte	0xd52
 26678 1c79 00000000 		.4byte	.LFB102
 26679 1c7d 98050000 		.4byte	.LFE102-.LFB102
 26680 1c81 01       		.uleb128 0x1
 26681 1c82 9C       		.byte	0x9c
 26682 1c83 FE1C0000 		.4byte	0x1cfe
 26683 1c87 22       		.uleb128 0x22
 26684 1c88 9E100000 		.4byte	.LASF298
 26685 1c8c 01       		.byte	0x1
 26686 1c8d 550D     		.2byte	0xd55
 26687 1c8f 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 573


 26688 1c93 02       		.uleb128 0x2
 26689 1c94 91       		.byte	0x91
 26690 1c95 6F       		.sleb128 -17
 26691 1c96 25       		.uleb128 0x25
 26692 1c97 6300     		.ascii	"c\000"
 26693 1c99 01       		.byte	0x1
 26694 1c9a 560D     		.2byte	0xd56
 26695 1c9c A3000000 		.4byte	0xa3
 26696 1ca0 02       		.uleb128 0x2
 26697 1ca1 91       		.byte	0x91
 26698 1ca2 6C       		.sleb128 -20
 26699 1ca3 25       		.uleb128 0x25
 26700 1ca4 6B00     		.ascii	"k\000"
 26701 1ca6 01       		.byte	0x1
 26702 1ca7 570D     		.2byte	0xd57
 26703 1ca9 97000000 		.4byte	0x97
 26704 1cad 02       		.uleb128 0x2
 26705 1cae 91       		.byte	0x91
 26706 1caf 6B       		.sleb128 -21
 26707 1cb0 22       		.uleb128 0x22
 26708 1cb1 26000000 		.4byte	.LASF299
 26709 1cb5 01       		.byte	0x1
 26710 1cb6 580D     		.2byte	0xd58
 26711 1cb8 A3000000 		.4byte	0xa3
 26712 1cbc 02       		.uleb128 0x2
 26713 1cbd 91       		.byte	0x91
 26714 1cbe 68       		.sleb128 -24
 26715 1cbf 22       		.uleb128 0x22
 26716 1cc0 B20E0000 		.4byte	.LASF212
 26717 1cc4 01       		.byte	0x1
 26718 1cc5 590D     		.2byte	0xd59
 26719 1cc7 C7000000 		.4byte	0xc7
 26720 1ccb 02       		.uleb128 0x2
 26721 1ccc 91       		.byte	0x91
 26722 1ccd 66       		.sleb128 -26
 26723 1cce 22       		.uleb128 0x22
 26724 1ccf 24100000 		.4byte	.LASF211
 26725 1cd3 01       		.byte	0x1
 26726 1cd4 5A0D     		.2byte	0xd5a
 26727 1cd6 EB000000 		.4byte	0xeb
 26728 1cda 02       		.uleb128 0x2
 26729 1cdb 91       		.byte	0x91
 26730 1cdc 60       		.sleb128 -32
 26731 1cdd 22       		.uleb128 0x22
 26732 1cde C3040000 		.4byte	.LASF206
 26733 1ce2 01       		.byte	0x1
 26734 1ce3 5D0D     		.2byte	0xd5d
 26735 1ce5 FE1C0000 		.4byte	0x1cfe
 26736 1ce9 03       		.uleb128 0x3
 26737 1cea 91       		.byte	0x91
 26738 1ceb 807D     		.sleb128 -384
 26739 1ced 22       		.uleb128 0x22
 26740 1cee 3C070000 		.4byte	.LASF300
 26741 1cf2 01       		.byte	0x1
 26742 1cf3 5E0D     		.2byte	0xd5e
 26743 1cf5 0F1D0000 		.4byte	0x1d0f
 26744 1cf9 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 574


 26745 1cfa 91       		.byte	0x91
 26746 1cfb E07C     		.sleb128 -416
 26747 1cfd 00       		.byte	0
 26748 1cfe 09       		.uleb128 0x9
 26749 1cff 97000000 		.4byte	0x97
 26750 1d03 0F1D0000 		.4byte	0x1d0f
 26751 1d07 23       		.uleb128 0x23
 26752 1d08 18010000 		.4byte	0x118
 26753 1d0c 5D01     		.2byte	0x15d
 26754 1d0e 00       		.byte	0
 26755 1d0f 09       		.uleb128 0x9
 26756 1d10 97000000 		.4byte	0x97
 26757 1d14 1F1D0000 		.4byte	0x1d1f
 26758 1d18 0A       		.uleb128 0xa
 26759 1d19 18010000 		.4byte	0x118
 26760 1d1d 1F       		.byte	0x1f
 26761 1d1e 00       		.byte	0
 26762 1d1f 26       		.uleb128 0x26
 26763 1d20 FF0F0000 		.4byte	.LASF301
 26764 1d24 01       		.byte	0x1
 26765 1d25 C10D     		.2byte	0xdc1
 26766 1d27 00000000 		.4byte	.LFB103
 26767 1d2b 8C000000 		.4byte	.LFE103-.LFB103
 26768 1d2f 01       		.uleb128 0x1
 26769 1d30 9C       		.byte	0x9c
 26770 1d31 5F1D0000 		.4byte	0x1d5f
 26771 1d35 22       		.uleb128 0x22
 26772 1d36 C3040000 		.4byte	.LASF206
 26773 1d3a 01       		.byte	0x1
 26774 1d3b C40D     		.2byte	0xdc4
 26775 1d3d 5F1D0000 		.4byte	0x1d5f
 26776 1d41 02       		.uleb128 0x2
 26777 1d42 91       		.byte	0x91
 26778 1d43 60       		.sleb128 -32
 26779 1d44 25       		.uleb128 0x25
 26780 1d45 6900     		.ascii	"i\000"
 26781 1d47 01       		.byte	0x1
 26782 1d48 C50D     		.2byte	0xdc5
 26783 1d4a 97000000 		.4byte	0x97
 26784 1d4e 02       		.uleb128 0x2
 26785 1d4f 91       		.byte	0x91
 26786 1d50 6F       		.sleb128 -17
 26787 1d51 25       		.uleb128 0x25
 26788 1d52 6A00     		.ascii	"j\000"
 26789 1d54 01       		.byte	0x1
 26790 1d55 C50D     		.2byte	0xdc5
 26791 1d57 97000000 		.4byte	0x97
 26792 1d5b 02       		.uleb128 0x2
 26793 1d5c 91       		.byte	0x91
 26794 1d5d 6E       		.sleb128 -18
 26795 1d5e 00       		.byte	0
 26796 1d5f 09       		.uleb128 0x9
 26797 1d60 97000000 		.4byte	0x97
 26798 1d64 6F1D0000 		.4byte	0x1d6f
 26799 1d68 0A       		.uleb128 0xa
 26800 1d69 18010000 		.4byte	0x118
 26801 1d6d 0D       		.byte	0xd
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 575


 26802 1d6e 00       		.byte	0
 26803 1d6f 26       		.uleb128 0x26
 26804 1d70 E70D0000 		.4byte	.LASF302
 26805 1d74 01       		.byte	0x1
 26806 1d75 DA0D     		.2byte	0xdda
 26807 1d77 00000000 		.4byte	.LFB104
 26808 1d7b EC000000 		.4byte	.LFE104-.LFB104
 26809 1d7f 01       		.uleb128 0x1
 26810 1d80 9C       		.byte	0x9c
 26811 1d81 CD1D0000 		.4byte	0x1dcd
 26812 1d85 22       		.uleb128 0x22
 26813 1d86 C3040000 		.4byte	.LASF206
 26814 1d8a 01       		.byte	0x1
 26815 1d8b DD0D     		.2byte	0xddd
 26816 1d8d CD1D0000 		.4byte	0x1dcd
 26817 1d91 02       		.uleb128 0x2
 26818 1d92 91       		.byte	0x91
 26819 1d93 54       		.sleb128 -44
 26820 1d94 25       		.uleb128 0x25
 26821 1d95 6900     		.ascii	"i\000"
 26822 1d97 01       		.byte	0x1
 26823 1d98 DE0D     		.2byte	0xdde
 26824 1d9a 97000000 		.4byte	0x97
 26825 1d9e 02       		.uleb128 0x2
 26826 1d9f 91       		.byte	0x91
 26827 1da0 6F       		.sleb128 -17
 26828 1da1 25       		.uleb128 0x25
 26829 1da2 6A00     		.ascii	"j\000"
 26830 1da4 01       		.byte	0x1
 26831 1da5 DE0D     		.2byte	0xdde
 26832 1da7 97000000 		.4byte	0x97
 26833 1dab 02       		.uleb128 0x2
 26834 1dac 91       		.byte	0x91
 26835 1dad 6E       		.sleb128 -18
 26836 1dae 25       		.uleb128 0x25
 26837 1daf 69647800 		.ascii	"idx\000"
 26838 1db3 01       		.byte	0x1
 26839 1db4 DE0D     		.2byte	0xdde
 26840 1db6 97000000 		.4byte	0x97
 26841 1dba 02       		.uleb128 0x2
 26842 1dbb 91       		.byte	0x91
 26843 1dbc 6D       		.sleb128 -19
 26844 1dbd 22       		.uleb128 0x22
 26845 1dbe 450A0000 		.4byte	.LASF213
 26846 1dc2 01       		.byte	0x1
 26847 1dc3 DF0D     		.2byte	0xddf
 26848 1dc5 A3000000 		.4byte	0xa3
 26849 1dc9 02       		.uleb128 0x2
 26850 1dca 91       		.byte	0x91
 26851 1dcb 52       		.sleb128 -46
 26852 1dcc 00       		.byte	0
 26853 1dcd 09       		.uleb128 0x9
 26854 1dce 97000000 		.4byte	0x97
 26855 1dd2 DD1D0000 		.4byte	0x1ddd
 26856 1dd6 0A       		.uleb128 0xa
 26857 1dd7 18010000 		.4byte	0x118
 26858 1ddb 15       		.byte	0x15
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 576


 26859 1ddc 00       		.byte	0
 26860 1ddd 26       		.uleb128 0x26
 26861 1dde 97020000 		.4byte	.LASF303
 26862 1de2 01       		.byte	0x1
 26863 1de3 F80D     		.2byte	0xdf8
 26864 1de5 00000000 		.4byte	.LFB105
 26865 1de9 5C000000 		.4byte	.LFE105-.LFB105
 26866 1ded 01       		.uleb128 0x1
 26867 1dee 9C       		.byte	0x9c
 26868 1def 101E0000 		.4byte	0x1e10
 26869 1df3 22       		.uleb128 0x22
 26870 1df4 C3040000 		.4byte	.LASF206
 26871 1df8 01       		.byte	0x1
 26872 1df9 FB0D     		.2byte	0xdfb
 26873 1dfb 650A0000 		.4byte	0xa65
 26874 1dff 02       		.uleb128 0x2
 26875 1e00 91       		.byte	0x91
 26876 1e01 68       		.sleb128 -24
 26877 1e02 25       		.uleb128 0x25
 26878 1e03 6900     		.ascii	"i\000"
 26879 1e05 01       		.byte	0x1
 26880 1e06 FC0D     		.2byte	0xdfc
 26881 1e08 97000000 		.4byte	0x97
 26882 1e0c 02       		.uleb128 0x2
 26883 1e0d 91       		.byte	0x91
 26884 1e0e 77       		.sleb128 -9
 26885 1e0f 00       		.byte	0
 26886 1e10 26       		.uleb128 0x26
 26887 1e11 C4020000 		.4byte	.LASF304
 26888 1e15 01       		.byte	0x1
 26889 1e16 0F0E     		.2byte	0xe0f
 26890 1e18 00000000 		.4byte	.LFB106
 26891 1e1c C0000000 		.4byte	.LFE106-.LFB106
 26892 1e20 01       		.uleb128 0x1
 26893 1e21 9C       		.byte	0x9c
 26894 1e22 611E0000 		.4byte	0x1e61
 26895 1e26 22       		.uleb128 0x22
 26896 1e27 C3040000 		.4byte	.LASF206
 26897 1e2b 01       		.byte	0x1
 26898 1e2c 120E     		.2byte	0xe12
 26899 1e2e 611E0000 		.4byte	0x1e61
 26900 1e32 02       		.uleb128 0x2
 26901 1e33 91       		.byte	0x91
 26902 1e34 54       		.sleb128 -44
 26903 1e35 25       		.uleb128 0x25
 26904 1e36 6900     		.ascii	"i\000"
 26905 1e38 01       		.byte	0x1
 26906 1e39 130E     		.2byte	0xe13
 26907 1e3b 97000000 		.4byte	0x97
 26908 1e3f 02       		.uleb128 0x2
 26909 1e40 91       		.byte	0x91
 26910 1e41 6F       		.sleb128 -17
 26911 1e42 25       		.uleb128 0x25
 26912 1e43 69647800 		.ascii	"idx\000"
 26913 1e47 01       		.byte	0x1
 26914 1e48 130E     		.2byte	0xe13
 26915 1e4a 97000000 		.4byte	0x97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 577


 26916 1e4e 02       		.uleb128 0x2
 26917 1e4f 91       		.byte	0x91
 26918 1e50 6E       		.sleb128 -18
 26919 1e51 22       		.uleb128 0x22
 26920 1e52 B20E0000 		.4byte	.LASF212
 26921 1e56 01       		.byte	0x1
 26922 1e57 140E     		.2byte	0xe14
 26923 1e59 C7000000 		.4byte	0xc7
 26924 1e5d 02       		.uleb128 0x2
 26925 1e5e 91       		.byte	0x91
 26926 1e5f 52       		.sleb128 -46
 26927 1e60 00       		.byte	0
 26928 1e61 09       		.uleb128 0x9
 26929 1e62 97000000 		.4byte	0x97
 26930 1e66 711E0000 		.4byte	0x1e71
 26931 1e6a 0A       		.uleb128 0xa
 26932 1e6b 18010000 		.4byte	0x118
 26933 1e6f 19       		.byte	0x19
 26934 1e70 00       		.byte	0
 26935 1e71 2D       		.uleb128 0x2d
 26936 1e72 EF0E0000 		.4byte	.LASF305
 26937 1e76 09       		.byte	0x9
 26938 1e77 1207     		.2byte	0x712
 26939 1e79 7D1E0000 		.4byte	0x1e7d
 26940 1e7d 06       		.uleb128 0x6
 26941 1e7e 81000000 		.4byte	0x81
 26942 1e82 09       		.uleb128 0x9
 26943 1e83 20030000 		.4byte	0x320
 26944 1e87 921E0000 		.4byte	0x1e92
 26945 1e8b 0A       		.uleb128 0xa
 26946 1e8c 18010000 		.4byte	0x118
 26947 1e90 01       		.byte	0x1
 26948 1e91 00       		.byte	0
 26949 1e92 2D       		.uleb128 0x2d
 26950 1e93 D8100000 		.4byte	.LASF306
 26951 1e97 08       		.byte	0x8
 26952 1e98 D501     		.2byte	0x1d5
 26953 1e9a 821E0000 		.4byte	0x1e82
 26954 1e9e 2D       		.uleb128 0x2d
 26955 1e9f 8E030000 		.4byte	.LASF307
 26956 1ea3 08       		.byte	0x8
 26957 1ea4 D501     		.2byte	0x1d5
 26958 1ea6 821E0000 		.4byte	0x1e82
 26959 1eaa 2D       		.uleb128 0x2d
 26960 1eab E90A0000 		.4byte	.LASF308
 26961 1eaf 08       		.byte	0x8
 26962 1eb0 D501     		.2byte	0x1d5
 26963 1eb2 821E0000 		.4byte	0x1e82
 26964 1eb6 09       		.uleb128 0x9
 26965 1eb7 5D030000 		.4byte	0x35d
 26966 1ebb C61E0000 		.4byte	0x1ec6
 26967 1ebf 0A       		.uleb128 0xa
 26968 1ec0 18010000 		.4byte	0x118
 26969 1ec4 01       		.byte	0x1
 26970 1ec5 00       		.byte	0
 26971 1ec6 2D       		.uleb128 0x2d
 26972 1ec7 5D050000 		.4byte	.LASF309
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 578


 26973 1ecb 08       		.byte	0x8
 26974 1ecc D601     		.2byte	0x1d6
 26975 1ece B61E0000 		.4byte	0x1eb6
 26976 1ed2 2D       		.uleb128 0x2d
 26977 1ed3 16110000 		.4byte	.LASF310
 26978 1ed7 08       		.byte	0x8
 26979 1ed8 D601     		.2byte	0x1d6
 26980 1eda B61E0000 		.4byte	0x1eb6
 26981 1ede 2D       		.uleb128 0x2d
 26982 1edf 6A000000 		.4byte	.LASF311
 26983 1ee3 08       		.byte	0x8
 26984 1ee4 D701     		.2byte	0x1d7
 26985 1ee6 DE030000 		.4byte	0x3de
 26986 1eea 2D       		.uleb128 0x2d
 26987 1eeb D7110000 		.4byte	.LASF312
 26988 1eef 08       		.byte	0x8
 26989 1ef0 D701     		.2byte	0x1d7
 26990 1ef2 DE030000 		.4byte	0x3de
 26991 1ef6 2D       		.uleb128 0x2d
 26992 1ef7 5D000000 		.4byte	.LASF313
 26993 1efb 08       		.byte	0x8
 26994 1efc D801     		.2byte	0x1d8
 26995 1efe 23040000 		.4byte	0x423
 26996 1f02 2D       		.uleb128 0x2d
 26997 1f03 CC0D0000 		.4byte	.LASF314
 26998 1f07 08       		.byte	0x8
 26999 1f08 D901     		.2byte	0x1d9
 27000 1f0a B5090000 		.4byte	0x9b5
 27001 1f0e 2D       		.uleb128 0x2d
 27002 1f0f 13090000 		.4byte	.LASF315
 27003 1f13 08       		.byte	0x8
 27004 1f14 D901     		.2byte	0x1d9
 27005 1f16 B5090000 		.4byte	0x9b5
 27006 1f1a 2D       		.uleb128 0x2d
 27007 1f1b 28080000 		.4byte	.LASF316
 27008 1f1f 08       		.byte	0x8
 27009 1f20 DA01     		.2byte	0x1da
 27010 1f22 310B0000 		.4byte	0xb31
 27011 1f26 2D       		.uleb128 0x2d
 27012 1f27 16020000 		.4byte	.LASF317
 27013 1f2b 08       		.byte	0x8
 27014 1f2c DF01     		.2byte	0x1df
 27015 1f2e A3000000 		.4byte	0xa3
 27016 1f32 2D       		.uleb128 0x2d
 27017 1f33 190C0000 		.4byte	.LASF318
 27018 1f37 08       		.byte	0x8
 27019 1f38 E001     		.2byte	0x1e0
 27020 1f3a A3000000 		.4byte	0xa3
 27021 1f3e 2D       		.uleb128 0x2d
 27022 1f3f 4B0C0000 		.4byte	.LASF319
 27023 1f43 08       		.byte	0x8
 27024 1f44 E301     		.2byte	0x1e3
 27025 1f46 03040000 		.4byte	0x403
 27026 1f4a 2D       		.uleb128 0x2d
 27027 1f4b C80F0000 		.4byte	.LASF320
 27028 1f4f 08       		.byte	0x8
 27029 1f50 E401     		.2byte	0x1e4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 579


 27030 1f52 EB170000 		.4byte	0x17eb
 27031 1f56 2D       		.uleb128 0x2d
 27032 1f57 0F0F0000 		.4byte	.LASF321
 27033 1f5b 08       		.byte	0x8
 27034 1f5c E701     		.2byte	0x1e7
 27035 1f5e 03040000 		.4byte	0x403
 27036 1f62 2D       		.uleb128 0x2d
 27037 1f63 C3080000 		.4byte	.LASF322
 27038 1f67 08       		.byte	0x8
 27039 1f68 EE01     		.2byte	0x1ee
 27040 1f6a 97000000 		.4byte	0x97
 27041 1f6e 2D       		.uleb128 0x2d
 27042 1f6f 7D080000 		.4byte	.LASF323
 27043 1f73 08       		.byte	0x8
 27044 1f74 F701     		.2byte	0x1f7
 27045 1f76 97000000 		.4byte	0x97
 27046 1f7a 2D       		.uleb128 0x2d
 27047 1f7b D8050000 		.4byte	.LASF324
 27048 1f7f 08       		.byte	0x8
 27049 1f80 F801     		.2byte	0x1f8
 27050 1f82 97000000 		.4byte	0x97
 27051 1f86 09       		.uleb128 0x9
 27052 1f87 C7000000 		.4byte	0xc7
 27053 1f8b 961F0000 		.4byte	0x1f96
 27054 1f8f 0A       		.uleb128 0xa
 27055 1f90 18010000 		.4byte	0x118
 27056 1f94 0B       		.byte	0xb
 27057 1f95 00       		.byte	0
 27058 1f96 2D       		.uleb128 0x2d
 27059 1f97 5D030000 		.4byte	.LASF325
 27060 1f9b 08       		.byte	0x8
 27061 1f9c FB01     		.2byte	0x1fb
 27062 1f9e 861F0000 		.4byte	0x1f86
 27063 1fa2 2D       		.uleb128 0x2d
 27064 1fa3 E4100000 		.4byte	.LASF326
 27065 1fa7 08       		.byte	0x8
 27066 1fa8 FC01     		.2byte	0x1fc
 27067 1faa 97000000 		.4byte	0x97
 27068 1fae 09       		.uleb128 0x9
 27069 1faf AF000000 		.4byte	0xaf
 27070 1fb3 BE1F0000 		.4byte	0x1fbe
 27071 1fb7 0A       		.uleb128 0xa
 27072 1fb8 18010000 		.4byte	0x118
 27073 1fbc 04       		.byte	0x4
 27074 1fbd 00       		.byte	0
 27075 1fbe 2D       		.uleb128 0x2d
 27076 1fbf 7D050000 		.4byte	.LASF327
 27077 1fc3 08       		.byte	0x8
 27078 1fc4 0202     		.2byte	0x202
 27079 1fc6 AE1F0000 		.4byte	0x1fae
 27080 1fca 2D       		.uleb128 0x2d
 27081 1fcb E50C0000 		.4byte	.LASF328
 27082 1fcf 08       		.byte	0x8
 27083 1fd0 0302     		.2byte	0x203
 27084 1fd2 EB170000 		.4byte	0x17eb
 27085 1fd6 09       		.uleb128 0x9
 27086 1fd7 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 580


 27087 1fdb EC1F0000 		.4byte	0x1fec
 27088 1fdf 0A       		.uleb128 0xa
 27089 1fe0 18010000 		.4byte	0x118
 27090 1fe4 01       		.byte	0x1
 27091 1fe5 0A       		.uleb128 0xa
 27092 1fe6 18010000 		.4byte	0x118
 27093 1fea 04       		.byte	0x4
 27094 1feb 00       		.byte	0
 27095 1fec 2D       		.uleb128 0x2d
 27096 1fed F10F0000 		.4byte	.LASF329
 27097 1ff1 08       		.byte	0x8
 27098 1ff2 0402     		.2byte	0x204
 27099 1ff4 D61F0000 		.4byte	0x1fd6
 27100 1ff8 2D       		.uleb128 0x2d
 27101 1ff9 CF040000 		.4byte	.LASF330
 27102 1ffd 08       		.byte	0x8
 27103 1ffe 0B02     		.2byte	0x20b
 27104 2000 1A030000 		.4byte	0x31a
 27105 2004 2D       		.uleb128 0x2d
 27106 2005 390E0000 		.4byte	.LASF331
 27107 2009 08       		.byte	0x8
 27108 200a 1002     		.2byte	0x210
 27109 200c 97000000 		.4byte	0x97
 27110 2010 2D       		.uleb128 0x2d
 27111 2011 2E100000 		.4byte	.LASF332
 27112 2015 08       		.byte	0x8
 27113 2016 1102     		.2byte	0x211
 27114 2018 BE070000 		.4byte	0x7be
 27115 201c 2D       		.uleb128 0x2d
 27116 201d E00E0000 		.4byte	.LASF333
 27117 2021 08       		.byte	0x8
 27118 2022 1202     		.2byte	0x212
 27119 2024 73000000 		.4byte	0x73
 27120 2028 09       		.uleb128 0x9
 27121 2029 73000000 		.4byte	0x73
 27122 202d 38200000 		.4byte	0x2038
 27123 2031 0A       		.uleb128 0xa
 27124 2032 18010000 		.4byte	0x118
 27125 2036 04       		.byte	0x4
 27126 2037 00       		.byte	0
 27127 2038 2D       		.uleb128 0x2d
 27128 2039 3B030000 		.4byte	.LASF334
 27129 203d 08       		.byte	0x8
 27130 203e 1302     		.2byte	0x213
 27131 2040 28200000 		.4byte	0x2028
 27132 2044 09       		.uleb128 0x9
 27133 2045 B50A0000 		.4byte	0xab5
 27134 2049 54200000 		.4byte	0x2054
 27135 204d 0A       		.uleb128 0xa
 27136 204e 18010000 		.4byte	0x118
 27137 2052 04       		.byte	0x4
 27138 2053 00       		.byte	0
 27139 2054 2D       		.uleb128 0x2d
 27140 2055 BB050000 		.4byte	.LASF335
 27141 2059 08       		.byte	0x8
 27142 205a 1402     		.2byte	0x214
 27143 205c 44200000 		.4byte	0x2044
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 581


 27144 2060 09       		.uleb128 0x9
 27145 2061 97000000 		.4byte	0x97
 27146 2065 76200000 		.4byte	0x2076
 27147 2069 0A       		.uleb128 0xa
 27148 206a 18010000 		.4byte	0x118
 27149 206e 04       		.byte	0x4
 27150 206f 0A       		.uleb128 0xa
 27151 2070 18010000 		.4byte	0x118
 27152 2074 02       		.byte	0x2
 27153 2075 00       		.byte	0
 27154 2076 2D       		.uleb128 0x2d
 27155 2077 56090000 		.4byte	.LASF336
 27156 207b 08       		.byte	0x8
 27157 207c 1802     		.2byte	0x218
 27158 207e 60200000 		.4byte	0x2060
 27159 2082 2E       		.uleb128 0x2e
 27160 2083 BC0E0000 		.4byte	.LASF337
 27161 2087 01       		.byte	0x1
 27162 2088 33       		.byte	0x33
 27163 2089 93200000 		.4byte	0x2093
 27164 208d 05       		.uleb128 0x5
 27165 208e 03       		.byte	0x3
 27166 208f 00000000 		.4byte	EEPROM_ADDR
 27167 2093 07       		.uleb128 0x7
 27168 2094 04       		.byte	0x4
 27169 2095 00010000 		.4byte	0x100
 27170 2099 00       		.byte	0
 27171              		.section	.debug_abbrev,"",%progbits
 27172              	.Ldebug_abbrev0:
 27173 0000 01       		.uleb128 0x1
 27174 0001 11       		.uleb128 0x11
 27175 0002 01       		.byte	0x1
 27176 0003 25       		.uleb128 0x25
 27177 0004 0E       		.uleb128 0xe
 27178 0005 13       		.uleb128 0x13
 27179 0006 0B       		.uleb128 0xb
 27180 0007 03       		.uleb128 0x3
 27181 0008 0E       		.uleb128 0xe
 27182 0009 1B       		.uleb128 0x1b
 27183 000a 0E       		.uleb128 0xe
 27184 000b 55       		.uleb128 0x55
 27185 000c 17       		.uleb128 0x17
 27186 000d 11       		.uleb128 0x11
 27187 000e 01       		.uleb128 0x1
 27188 000f 10       		.uleb128 0x10
 27189 0010 17       		.uleb128 0x17
 27190 0011 00       		.byte	0
 27191 0012 00       		.byte	0
 27192 0013 02       		.uleb128 0x2
 27193 0014 24       		.uleb128 0x24
 27194 0015 00       		.byte	0
 27195 0016 0B       		.uleb128 0xb
 27196 0017 0B       		.uleb128 0xb
 27197 0018 3E       		.uleb128 0x3e
 27198 0019 0B       		.uleb128 0xb
 27199 001a 03       		.uleb128 0x3
 27200 001b 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 582


 27201 001c 00       		.byte	0
 27202 001d 00       		.byte	0
 27203 001e 03       		.uleb128 0x3
 27204 001f 16       		.uleb128 0x16
 27205 0020 00       		.byte	0
 27206 0021 03       		.uleb128 0x3
 27207 0022 0E       		.uleb128 0xe
 27208 0023 3A       		.uleb128 0x3a
 27209 0024 0B       		.uleb128 0xb
 27210 0025 3B       		.uleb128 0x3b
 27211 0026 0B       		.uleb128 0xb
 27212 0027 49       		.uleb128 0x49
 27213 0028 13       		.uleb128 0x13
 27214 0029 00       		.byte	0
 27215 002a 00       		.byte	0
 27216 002b 04       		.uleb128 0x4
 27217 002c 24       		.uleb128 0x24
 27218 002d 00       		.byte	0
 27219 002e 0B       		.uleb128 0xb
 27220 002f 0B       		.uleb128 0xb
 27221 0030 3E       		.uleb128 0x3e
 27222 0031 0B       		.uleb128 0xb
 27223 0032 03       		.uleb128 0x3
 27224 0033 08       		.uleb128 0x8
 27225 0034 00       		.byte	0
 27226 0035 00       		.byte	0
 27227 0036 05       		.uleb128 0x5
 27228 0037 16       		.uleb128 0x16
 27229 0038 00       		.byte	0
 27230 0039 03       		.uleb128 0x3
 27231 003a 0E       		.uleb128 0xe
 27232 003b 3A       		.uleb128 0x3a
 27233 003c 0B       		.uleb128 0xb
 27234 003d 3B       		.uleb128 0x3b
 27235 003e 05       		.uleb128 0x5
 27236 003f 49       		.uleb128 0x49
 27237 0040 13       		.uleb128 0x13
 27238 0041 00       		.byte	0
 27239 0042 00       		.byte	0
 27240 0043 06       		.uleb128 0x6
 27241 0044 35       		.uleb128 0x35
 27242 0045 00       		.byte	0
 27243 0046 49       		.uleb128 0x49
 27244 0047 13       		.uleb128 0x13
 27245 0048 00       		.byte	0
 27246 0049 00       		.byte	0
 27247 004a 07       		.uleb128 0x7
 27248 004b 0F       		.uleb128 0xf
 27249 004c 00       		.byte	0
 27250 004d 0B       		.uleb128 0xb
 27251 004e 0B       		.uleb128 0xb
 27252 004f 49       		.uleb128 0x49
 27253 0050 13       		.uleb128 0x13
 27254 0051 00       		.byte	0
 27255 0052 00       		.byte	0
 27256 0053 08       		.uleb128 0x8
 27257 0054 26       		.uleb128 0x26
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 583


 27258 0055 00       		.byte	0
 27259 0056 49       		.uleb128 0x49
 27260 0057 13       		.uleb128 0x13
 27261 0058 00       		.byte	0
 27262 0059 00       		.byte	0
 27263 005a 09       		.uleb128 0x9
 27264 005b 01       		.uleb128 0x1
 27265 005c 01       		.byte	0x1
 27266 005d 49       		.uleb128 0x49
 27267 005e 13       		.uleb128 0x13
 27268 005f 01       		.uleb128 0x1
 27269 0060 13       		.uleb128 0x13
 27270 0061 00       		.byte	0
 27271 0062 00       		.byte	0
 27272 0063 0A       		.uleb128 0xa
 27273 0064 21       		.uleb128 0x21
 27274 0065 00       		.byte	0
 27275 0066 49       		.uleb128 0x49
 27276 0067 13       		.uleb128 0x13
 27277 0068 2F       		.uleb128 0x2f
 27278 0069 0B       		.uleb128 0xb
 27279 006a 00       		.byte	0
 27280 006b 00       		.byte	0
 27281 006c 0B       		.uleb128 0xb
 27282 006d 04       		.uleb128 0x4
 27283 006e 01       		.byte	0x1
 27284 006f 03       		.uleb128 0x3
 27285 0070 0E       		.uleb128 0xe
 27286 0071 0B       		.uleb128 0xb
 27287 0072 0B       		.uleb128 0xb
 27288 0073 49       		.uleb128 0x49
 27289 0074 13       		.uleb128 0x13
 27290 0075 3A       		.uleb128 0x3a
 27291 0076 0B       		.uleb128 0xb
 27292 0077 3B       		.uleb128 0x3b
 27293 0078 0B       		.uleb128 0xb
 27294 0079 01       		.uleb128 0x1
 27295 007a 13       		.uleb128 0x13
 27296 007b 00       		.byte	0
 27297 007c 00       		.byte	0
 27298 007d 0C       		.uleb128 0xc
 27299 007e 28       		.uleb128 0x28
 27300 007f 00       		.byte	0
 27301 0080 03       		.uleb128 0x3
 27302 0081 0E       		.uleb128 0xe
 27303 0082 1C       		.uleb128 0x1c
 27304 0083 0B       		.uleb128 0xb
 27305 0084 00       		.byte	0
 27306 0085 00       		.byte	0
 27307 0086 0D       		.uleb128 0xd
 27308 0087 13       		.uleb128 0x13
 27309 0088 00       		.byte	0
 27310 0089 03       		.uleb128 0x3
 27311 008a 0E       		.uleb128 0xe
 27312 008b 3C       		.uleb128 0x3c
 27313 008c 19       		.uleb128 0x19
 27314 008d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 584


 27315 008e 00       		.byte	0
 27316 008f 0E       		.uleb128 0xe
 27317 0090 13       		.uleb128 0x13
 27318 0091 01       		.byte	0x1
 27319 0092 03       		.uleb128 0x3
 27320 0093 0E       		.uleb128 0xe
 27321 0094 0B       		.uleb128 0xb
 27322 0095 0B       		.uleb128 0xb
 27323 0096 3A       		.uleb128 0x3a
 27324 0097 0B       		.uleb128 0xb
 27325 0098 3B       		.uleb128 0x3b
 27326 0099 0B       		.uleb128 0xb
 27327 009a 01       		.uleb128 0x1
 27328 009b 13       		.uleb128 0x13
 27329 009c 00       		.byte	0
 27330 009d 00       		.byte	0
 27331 009e 0F       		.uleb128 0xf
 27332 009f 0D       		.uleb128 0xd
 27333 00a0 00       		.byte	0
 27334 00a1 03       		.uleb128 0x3
 27335 00a2 08       		.uleb128 0x8
 27336 00a3 3A       		.uleb128 0x3a
 27337 00a4 0B       		.uleb128 0xb
 27338 00a5 3B       		.uleb128 0x3b
 27339 00a6 0B       		.uleb128 0xb
 27340 00a7 49       		.uleb128 0x49
 27341 00a8 13       		.uleb128 0x13
 27342 00a9 38       		.uleb128 0x38
 27343 00aa 0B       		.uleb128 0xb
 27344 00ab 00       		.byte	0
 27345 00ac 00       		.byte	0
 27346 00ad 10       		.uleb128 0x10
 27347 00ae 0D       		.uleb128 0xd
 27348 00af 00       		.byte	0
 27349 00b0 03       		.uleb128 0x3
 27350 00b1 0E       		.uleb128 0xe
 27351 00b2 3A       		.uleb128 0x3a
 27352 00b3 0B       		.uleb128 0xb
 27353 00b4 3B       		.uleb128 0x3b
 27354 00b5 0B       		.uleb128 0xb
 27355 00b6 49       		.uleb128 0x49
 27356 00b7 13       		.uleb128 0x13
 27357 00b8 38       		.uleb128 0x38
 27358 00b9 0B       		.uleb128 0xb
 27359 00ba 00       		.byte	0
 27360 00bb 00       		.byte	0
 27361 00bc 11       		.uleb128 0x11
 27362 00bd 0D       		.uleb128 0xd
 27363 00be 00       		.byte	0
 27364 00bf 03       		.uleb128 0x3
 27365 00c0 0E       		.uleb128 0xe
 27366 00c1 3A       		.uleb128 0x3a
 27367 00c2 0B       		.uleb128 0xb
 27368 00c3 3B       		.uleb128 0x3b
 27369 00c4 05       		.uleb128 0x5
 27370 00c5 49       		.uleb128 0x49
 27371 00c6 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 585


 27372 00c7 38       		.uleb128 0x38
 27373 00c8 0B       		.uleb128 0xb
 27374 00c9 00       		.byte	0
 27375 00ca 00       		.byte	0
 27376 00cb 12       		.uleb128 0x12
 27377 00cc 13       		.uleb128 0x13
 27378 00cd 01       		.byte	0x1
 27379 00ce 03       		.uleb128 0x3
 27380 00cf 0E       		.uleb128 0xe
 27381 00d0 0B       		.uleb128 0xb
 27382 00d1 0B       		.uleb128 0xb
 27383 00d2 3A       		.uleb128 0x3a
 27384 00d3 0B       		.uleb128 0xb
 27385 00d4 3B       		.uleb128 0x3b
 27386 00d5 05       		.uleb128 0x5
 27387 00d6 01       		.uleb128 0x1
 27388 00d7 13       		.uleb128 0x13
 27389 00d8 00       		.byte	0
 27390 00d9 00       		.byte	0
 27391 00da 13       		.uleb128 0x13
 27392 00db 0D       		.uleb128 0xd
 27393 00dc 00       		.byte	0
 27394 00dd 03       		.uleb128 0x3
 27395 00de 08       		.uleb128 0x8
 27396 00df 3A       		.uleb128 0x3a
 27397 00e0 0B       		.uleb128 0xb
 27398 00e1 3B       		.uleb128 0x3b
 27399 00e2 05       		.uleb128 0x5
 27400 00e3 49       		.uleb128 0x49
 27401 00e4 13       		.uleb128 0x13
 27402 00e5 38       		.uleb128 0x38
 27403 00e6 0B       		.uleb128 0xb
 27404 00e7 00       		.byte	0
 27405 00e8 00       		.byte	0
 27406 00e9 14       		.uleb128 0x14
 27407 00ea 13       		.uleb128 0x13
 27408 00eb 01       		.byte	0x1
 27409 00ec 03       		.uleb128 0x3
 27410 00ed 0E       		.uleb128 0xe
 27411 00ee 0B       		.uleb128 0xb
 27412 00ef 05       		.uleb128 0x5
 27413 00f0 3A       		.uleb128 0x3a
 27414 00f1 0B       		.uleb128 0xb
 27415 00f2 3B       		.uleb128 0x3b
 27416 00f3 05       		.uleb128 0x5
 27417 00f4 01       		.uleb128 0x1
 27418 00f5 13       		.uleb128 0x13
 27419 00f6 00       		.byte	0
 27420 00f7 00       		.byte	0
 27421 00f8 15       		.uleb128 0x15
 27422 00f9 0D       		.uleb128 0xd
 27423 00fa 00       		.byte	0
 27424 00fb 03       		.uleb128 0x3
 27425 00fc 08       		.uleb128 0x8
 27426 00fd 3A       		.uleb128 0x3a
 27427 00fe 0B       		.uleb128 0xb
 27428 00ff 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 586


 27429 0100 05       		.uleb128 0x5
 27430 0101 49       		.uleb128 0x49
 27431 0102 13       		.uleb128 0x13
 27432 0103 38       		.uleb128 0x38
 27433 0104 05       		.uleb128 0x5
 27434 0105 00       		.byte	0
 27435 0106 00       		.byte	0
 27436 0107 16       		.uleb128 0x16
 27437 0108 0D       		.uleb128 0xd
 27438 0109 00       		.byte	0
 27439 010a 03       		.uleb128 0x3
 27440 010b 0E       		.uleb128 0xe
 27441 010c 3A       		.uleb128 0x3a
 27442 010d 0B       		.uleb128 0xb
 27443 010e 3B       		.uleb128 0x3b
 27444 010f 05       		.uleb128 0x5
 27445 0110 49       		.uleb128 0x49
 27446 0111 13       		.uleb128 0x13
 27447 0112 38       		.uleb128 0x38
 27448 0113 05       		.uleb128 0x5
 27449 0114 00       		.byte	0
 27450 0115 00       		.byte	0
 27451 0116 17       		.uleb128 0x17
 27452 0117 2E       		.uleb128 0x2e
 27453 0118 01       		.byte	0x1
 27454 0119 03       		.uleb128 0x3
 27455 011a 0E       		.uleb128 0xe
 27456 011b 3A       		.uleb128 0x3a
 27457 011c 0B       		.uleb128 0xb
 27458 011d 3B       		.uleb128 0x3b
 27459 011e 05       		.uleb128 0x5
 27460 011f 27       		.uleb128 0x27
 27461 0120 19       		.uleb128 0x19
 27462 0121 49       		.uleb128 0x49
 27463 0122 13       		.uleb128 0x13
 27464 0123 20       		.uleb128 0x20
 27465 0124 0B       		.uleb128 0xb
 27466 0125 01       		.uleb128 0x1
 27467 0126 13       		.uleb128 0x13
 27468 0127 00       		.byte	0
 27469 0128 00       		.byte	0
 27470 0129 18       		.uleb128 0x18
 27471 012a 05       		.uleb128 0x5
 27472 012b 00       		.byte	0
 27473 012c 03       		.uleb128 0x3
 27474 012d 0E       		.uleb128 0xe
 27475 012e 3A       		.uleb128 0x3a
 27476 012f 0B       		.uleb128 0xb
 27477 0130 3B       		.uleb128 0x3b
 27478 0131 05       		.uleb128 0x5
 27479 0132 49       		.uleb128 0x49
 27480 0133 13       		.uleb128 0x13
 27481 0134 00       		.byte	0
 27482 0135 00       		.byte	0
 27483 0136 19       		.uleb128 0x19
 27484 0137 34       		.uleb128 0x34
 27485 0138 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 587


 27486 0139 03       		.uleb128 0x3
 27487 013a 0E       		.uleb128 0xe
 27488 013b 3A       		.uleb128 0x3a
 27489 013c 0B       		.uleb128 0xb
 27490 013d 3B       		.uleb128 0x3b
 27491 013e 05       		.uleb128 0x5
 27492 013f 49       		.uleb128 0x49
 27493 0140 13       		.uleb128 0x13
 27494 0141 00       		.byte	0
 27495 0142 00       		.byte	0
 27496 0143 1A       		.uleb128 0x1a
 27497 0144 2E       		.uleb128 0x2e
 27498 0145 01       		.byte	0x1
 27499 0146 3F       		.uleb128 0x3f
 27500 0147 19       		.uleb128 0x19
 27501 0148 03       		.uleb128 0x3
 27502 0149 0E       		.uleb128 0xe
 27503 014a 3A       		.uleb128 0x3a
 27504 014b 0B       		.uleb128 0xb
 27505 014c 3B       		.uleb128 0x3b
 27506 014d 0B       		.uleb128 0xb
 27507 014e 27       		.uleb128 0x27
 27508 014f 19       		.uleb128 0x19
 27509 0150 11       		.uleb128 0x11
 27510 0151 01       		.uleb128 0x1
 27511 0152 12       		.uleb128 0x12
 27512 0153 06       		.uleb128 0x6
 27513 0154 40       		.uleb128 0x40
 27514 0155 18       		.uleb128 0x18
 27515 0156 9642     		.uleb128 0x2116
 27516 0158 19       		.uleb128 0x19
 27517 0159 01       		.uleb128 0x1
 27518 015a 13       		.uleb128 0x13
 27519 015b 00       		.byte	0
 27520 015c 00       		.byte	0
 27521 015d 1B       		.uleb128 0x1b
 27522 015e 34       		.uleb128 0x34
 27523 015f 00       		.byte	0
 27524 0160 03       		.uleb128 0x3
 27525 0161 0E       		.uleb128 0xe
 27526 0162 3A       		.uleb128 0x3a
 27527 0163 0B       		.uleb128 0xb
 27528 0164 3B       		.uleb128 0x3b
 27529 0165 0B       		.uleb128 0xb
 27530 0166 49       		.uleb128 0x49
 27531 0167 13       		.uleb128 0x13
 27532 0168 02       		.uleb128 0x2
 27533 0169 18       		.uleb128 0x18
 27534 016a 00       		.byte	0
 27535 016b 00       		.byte	0
 27536 016c 1C       		.uleb128 0x1c
 27537 016d 1D       		.uleb128 0x1d
 27538 016e 01       		.byte	0x1
 27539 016f 31       		.uleb128 0x31
 27540 0170 13       		.uleb128 0x13
 27541 0171 11       		.uleb128 0x11
 27542 0172 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 588


 27543 0173 12       		.uleb128 0x12
 27544 0174 06       		.uleb128 0x6
 27545 0175 58       		.uleb128 0x58
 27546 0176 0B       		.uleb128 0xb
 27547 0177 59       		.uleb128 0x59
 27548 0178 0B       		.uleb128 0xb
 27549 0179 01       		.uleb128 0x1
 27550 017a 13       		.uleb128 0x13
 27551 017b 00       		.byte	0
 27552 017c 00       		.byte	0
 27553 017d 1D       		.uleb128 0x1d
 27554 017e 05       		.uleb128 0x5
 27555 017f 00       		.byte	0
 27556 0180 31       		.uleb128 0x31
 27557 0181 13       		.uleb128 0x13
 27558 0182 02       		.uleb128 0x2
 27559 0183 18       		.uleb128 0x18
 27560 0184 00       		.byte	0
 27561 0185 00       		.byte	0
 27562 0186 1E       		.uleb128 0x1e
 27563 0187 0B       		.uleb128 0xb
 27564 0188 01       		.byte	0x1
 27565 0189 11       		.uleb128 0x11
 27566 018a 01       		.uleb128 0x1
 27567 018b 12       		.uleb128 0x12
 27568 018c 06       		.uleb128 0x6
 27569 018d 00       		.byte	0
 27570 018e 00       		.byte	0
 27571 018f 1F       		.uleb128 0x1f
 27572 0190 34       		.uleb128 0x34
 27573 0191 00       		.byte	0
 27574 0192 31       		.uleb128 0x31
 27575 0193 13       		.uleb128 0x13
 27576 0194 02       		.uleb128 0x2
 27577 0195 18       		.uleb128 0x18
 27578 0196 00       		.byte	0
 27579 0197 00       		.byte	0
 27580 0198 20       		.uleb128 0x20
 27581 0199 1D       		.uleb128 0x1d
 27582 019a 01       		.byte	0x1
 27583 019b 31       		.uleb128 0x31
 27584 019c 13       		.uleb128 0x13
 27585 019d 11       		.uleb128 0x11
 27586 019e 01       		.uleb128 0x1
 27587 019f 12       		.uleb128 0x12
 27588 01a0 06       		.uleb128 0x6
 27589 01a1 58       		.uleb128 0x58
 27590 01a2 0B       		.uleb128 0xb
 27591 01a3 59       		.uleb128 0x59
 27592 01a4 0B       		.uleb128 0xb
 27593 01a5 00       		.byte	0
 27594 01a6 00       		.byte	0
 27595 01a7 21       		.uleb128 0x21
 27596 01a8 2E       		.uleb128 0x2e
 27597 01a9 01       		.byte	0x1
 27598 01aa 3F       		.uleb128 0x3f
 27599 01ab 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 589


 27600 01ac 03       		.uleb128 0x3
 27601 01ad 0E       		.uleb128 0xe
 27602 01ae 3A       		.uleb128 0x3a
 27603 01af 0B       		.uleb128 0xb
 27604 01b0 3B       		.uleb128 0x3b
 27605 01b1 05       		.uleb128 0x5
 27606 01b2 27       		.uleb128 0x27
 27607 01b3 19       		.uleb128 0x19
 27608 01b4 11       		.uleb128 0x11
 27609 01b5 01       		.uleb128 0x1
 27610 01b6 12       		.uleb128 0x12
 27611 01b7 06       		.uleb128 0x6
 27612 01b8 40       		.uleb128 0x40
 27613 01b9 18       		.uleb128 0x18
 27614 01ba 9642     		.uleb128 0x2116
 27615 01bc 19       		.uleb128 0x19
 27616 01bd 01       		.uleb128 0x1
 27617 01be 13       		.uleb128 0x13
 27618 01bf 00       		.byte	0
 27619 01c0 00       		.byte	0
 27620 01c1 22       		.uleb128 0x22
 27621 01c2 34       		.uleb128 0x34
 27622 01c3 00       		.byte	0
 27623 01c4 03       		.uleb128 0x3
 27624 01c5 0E       		.uleb128 0xe
 27625 01c6 3A       		.uleb128 0x3a
 27626 01c7 0B       		.uleb128 0xb
 27627 01c8 3B       		.uleb128 0x3b
 27628 01c9 05       		.uleb128 0x5
 27629 01ca 49       		.uleb128 0x49
 27630 01cb 13       		.uleb128 0x13
 27631 01cc 02       		.uleb128 0x2
 27632 01cd 18       		.uleb128 0x18
 27633 01ce 00       		.byte	0
 27634 01cf 00       		.byte	0
 27635 01d0 23       		.uleb128 0x23
 27636 01d1 21       		.uleb128 0x21
 27637 01d2 00       		.byte	0
 27638 01d3 49       		.uleb128 0x49
 27639 01d4 13       		.uleb128 0x13
 27640 01d5 2F       		.uleb128 0x2f
 27641 01d6 05       		.uleb128 0x5
 27642 01d7 00       		.byte	0
 27643 01d8 00       		.byte	0
 27644 01d9 24       		.uleb128 0x24
 27645 01da 05       		.uleb128 0x5
 27646 01db 00       		.byte	0
 27647 01dc 03       		.uleb128 0x3
 27648 01dd 0E       		.uleb128 0xe
 27649 01de 3A       		.uleb128 0x3a
 27650 01df 0B       		.uleb128 0xb
 27651 01e0 3B       		.uleb128 0x3b
 27652 01e1 05       		.uleb128 0x5
 27653 01e2 49       		.uleb128 0x49
 27654 01e3 13       		.uleb128 0x13
 27655 01e4 02       		.uleb128 0x2
 27656 01e5 18       		.uleb128 0x18
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 590


 27657 01e6 00       		.byte	0
 27658 01e7 00       		.byte	0
 27659 01e8 25       		.uleb128 0x25
 27660 01e9 34       		.uleb128 0x34
 27661 01ea 00       		.byte	0
 27662 01eb 03       		.uleb128 0x3
 27663 01ec 08       		.uleb128 0x8
 27664 01ed 3A       		.uleb128 0x3a
 27665 01ee 0B       		.uleb128 0xb
 27666 01ef 3B       		.uleb128 0x3b
 27667 01f0 05       		.uleb128 0x5
 27668 01f1 49       		.uleb128 0x49
 27669 01f2 13       		.uleb128 0x13
 27670 01f3 02       		.uleb128 0x2
 27671 01f4 18       		.uleb128 0x18
 27672 01f5 00       		.byte	0
 27673 01f6 00       		.byte	0
 27674 01f7 26       		.uleb128 0x26
 27675 01f8 2E       		.uleb128 0x2e
 27676 01f9 01       		.byte	0x1
 27677 01fa 3F       		.uleb128 0x3f
 27678 01fb 19       		.uleb128 0x19
 27679 01fc 03       		.uleb128 0x3
 27680 01fd 0E       		.uleb128 0xe
 27681 01fe 3A       		.uleb128 0x3a
 27682 01ff 0B       		.uleb128 0xb
 27683 0200 3B       		.uleb128 0x3b
 27684 0201 05       		.uleb128 0x5
 27685 0202 11       		.uleb128 0x11
 27686 0203 01       		.uleb128 0x1
 27687 0204 12       		.uleb128 0x12
 27688 0205 06       		.uleb128 0x6
 27689 0206 40       		.uleb128 0x40
 27690 0207 18       		.uleb128 0x18
 27691 0208 9642     		.uleb128 0x2116
 27692 020a 19       		.uleb128 0x19
 27693 020b 01       		.uleb128 0x1
 27694 020c 13       		.uleb128 0x13
 27695 020d 00       		.byte	0
 27696 020e 00       		.byte	0
 27697 020f 27       		.uleb128 0x27
 27698 0210 2E       		.uleb128 0x2e
 27699 0211 01       		.byte	0x1
 27700 0212 3F       		.uleb128 0x3f
 27701 0213 19       		.uleb128 0x19
 27702 0214 03       		.uleb128 0x3
 27703 0215 0E       		.uleb128 0xe
 27704 0216 3A       		.uleb128 0x3a
 27705 0217 0B       		.uleb128 0xb
 27706 0218 3B       		.uleb128 0x3b
 27707 0219 05       		.uleb128 0x5
 27708 021a 27       		.uleb128 0x27
 27709 021b 19       		.uleb128 0x19
 27710 021c 49       		.uleb128 0x49
 27711 021d 13       		.uleb128 0x13
 27712 021e 11       		.uleb128 0x11
 27713 021f 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 591


 27714 0220 12       		.uleb128 0x12
 27715 0221 06       		.uleb128 0x6
 27716 0222 40       		.uleb128 0x40
 27717 0223 18       		.uleb128 0x18
 27718 0224 9742     		.uleb128 0x2117
 27719 0226 19       		.uleb128 0x19
 27720 0227 01       		.uleb128 0x1
 27721 0228 13       		.uleb128 0x13
 27722 0229 00       		.byte	0
 27723 022a 00       		.byte	0
 27724 022b 28       		.uleb128 0x28
 27725 022c 2E       		.uleb128 0x2e
 27726 022d 01       		.byte	0x1
 27727 022e 3F       		.uleb128 0x3f
 27728 022f 19       		.uleb128 0x19
 27729 0230 03       		.uleb128 0x3
 27730 0231 0E       		.uleb128 0xe
 27731 0232 3A       		.uleb128 0x3a
 27732 0233 0B       		.uleb128 0xb
 27733 0234 3B       		.uleb128 0x3b
 27734 0235 05       		.uleb128 0x5
 27735 0236 27       		.uleb128 0x27
 27736 0237 19       		.uleb128 0x19
 27737 0238 49       		.uleb128 0x49
 27738 0239 13       		.uleb128 0x13
 27739 023a 11       		.uleb128 0x11
 27740 023b 01       		.uleb128 0x1
 27741 023c 12       		.uleb128 0x12
 27742 023d 06       		.uleb128 0x6
 27743 023e 40       		.uleb128 0x40
 27744 023f 18       		.uleb128 0x18
 27745 0240 9642     		.uleb128 0x2116
 27746 0242 19       		.uleb128 0x19
 27747 0243 01       		.uleb128 0x1
 27748 0244 13       		.uleb128 0x13
 27749 0245 00       		.byte	0
 27750 0246 00       		.byte	0
 27751 0247 29       		.uleb128 0x29
 27752 0248 2E       		.uleb128 0x2e
 27753 0249 01       		.byte	0x1
 27754 024a 3F       		.uleb128 0x3f
 27755 024b 19       		.uleb128 0x19
 27756 024c 03       		.uleb128 0x3
 27757 024d 0E       		.uleb128 0xe
 27758 024e 3A       		.uleb128 0x3a
 27759 024f 0B       		.uleb128 0xb
 27760 0250 3B       		.uleb128 0x3b
 27761 0251 05       		.uleb128 0x5
 27762 0252 27       		.uleb128 0x27
 27763 0253 19       		.uleb128 0x19
 27764 0254 11       		.uleb128 0x11
 27765 0255 01       		.uleb128 0x1
 27766 0256 12       		.uleb128 0x12
 27767 0257 06       		.uleb128 0x6
 27768 0258 40       		.uleb128 0x40
 27769 0259 18       		.uleb128 0x18
 27770 025a 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 592


 27771 025c 19       		.uleb128 0x19
 27772 025d 01       		.uleb128 0x1
 27773 025e 13       		.uleb128 0x13
 27774 025f 00       		.byte	0
 27775 0260 00       		.byte	0
 27776 0261 2A       		.uleb128 0x2a
 27777 0262 2E       		.uleb128 0x2e
 27778 0263 01       		.byte	0x1
 27779 0264 3F       		.uleb128 0x3f
 27780 0265 19       		.uleb128 0x19
 27781 0266 03       		.uleb128 0x3
 27782 0267 0E       		.uleb128 0xe
 27783 0268 3A       		.uleb128 0x3a
 27784 0269 0B       		.uleb128 0xb
 27785 026a 3B       		.uleb128 0x3b
 27786 026b 05       		.uleb128 0x5
 27787 026c 11       		.uleb128 0x11
 27788 026d 01       		.uleb128 0x1
 27789 026e 12       		.uleb128 0x12
 27790 026f 06       		.uleb128 0x6
 27791 0270 40       		.uleb128 0x40
 27792 0271 18       		.uleb128 0x18
 27793 0272 9742     		.uleb128 0x2117
 27794 0274 19       		.uleb128 0x19
 27795 0275 01       		.uleb128 0x1
 27796 0276 13       		.uleb128 0x13
 27797 0277 00       		.byte	0
 27798 0278 00       		.byte	0
 27799 0279 2B       		.uleb128 0x2b
 27800 027a 0B       		.uleb128 0xb
 27801 027b 01       		.byte	0x1
 27802 027c 11       		.uleb128 0x11
 27803 027d 01       		.uleb128 0x1
 27804 027e 12       		.uleb128 0x12
 27805 027f 06       		.uleb128 0x6
 27806 0280 01       		.uleb128 0x1
 27807 0281 13       		.uleb128 0x13
 27808 0282 00       		.byte	0
 27809 0283 00       		.byte	0
 27810 0284 2C       		.uleb128 0x2c
 27811 0285 2E       		.uleb128 0x2e
 27812 0286 00       		.byte	0
 27813 0287 3F       		.uleb128 0x3f
 27814 0288 19       		.uleb128 0x19
 27815 0289 03       		.uleb128 0x3
 27816 028a 0E       		.uleb128 0xe
 27817 028b 3A       		.uleb128 0x3a
 27818 028c 0B       		.uleb128 0xb
 27819 028d 3B       		.uleb128 0x3b
 27820 028e 05       		.uleb128 0x5
 27821 028f 11       		.uleb128 0x11
 27822 0290 01       		.uleb128 0x1
 27823 0291 12       		.uleb128 0x12
 27824 0292 06       		.uleb128 0x6
 27825 0293 40       		.uleb128 0x40
 27826 0294 18       		.uleb128 0x18
 27827 0295 9642     		.uleb128 0x2116
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 593


 27828 0297 19       		.uleb128 0x19
 27829 0298 00       		.byte	0
 27830 0299 00       		.byte	0
 27831 029a 2D       		.uleb128 0x2d
 27832 029b 34       		.uleb128 0x34
 27833 029c 00       		.byte	0
 27834 029d 03       		.uleb128 0x3
 27835 029e 0E       		.uleb128 0xe
 27836 029f 3A       		.uleb128 0x3a
 27837 02a0 0B       		.uleb128 0xb
 27838 02a1 3B       		.uleb128 0x3b
 27839 02a2 05       		.uleb128 0x5
 27840 02a3 49       		.uleb128 0x49
 27841 02a4 13       		.uleb128 0x13
 27842 02a5 3F       		.uleb128 0x3f
 27843 02a6 19       		.uleb128 0x19
 27844 02a7 3C       		.uleb128 0x3c
 27845 02a8 19       		.uleb128 0x19
 27846 02a9 00       		.byte	0
 27847 02aa 00       		.byte	0
 27848 02ab 2E       		.uleb128 0x2e
 27849 02ac 34       		.uleb128 0x34
 27850 02ad 00       		.byte	0
 27851 02ae 03       		.uleb128 0x3
 27852 02af 0E       		.uleb128 0xe
 27853 02b0 3A       		.uleb128 0x3a
 27854 02b1 0B       		.uleb128 0xb
 27855 02b2 3B       		.uleb128 0x3b
 27856 02b3 0B       		.uleb128 0xb
 27857 02b4 49       		.uleb128 0x49
 27858 02b5 13       		.uleb128 0x13
 27859 02b6 3F       		.uleb128 0x3f
 27860 02b7 19       		.uleb128 0x19
 27861 02b8 02       		.uleb128 0x2
 27862 02b9 18       		.uleb128 0x18
 27863 02ba 00       		.byte	0
 27864 02bb 00       		.byte	0
 27865 02bc 00       		.byte	0
 27866              		.section	.debug_aranges,"",%progbits
 27867 0000 6C010000 		.4byte	0x16c
 27868 0004 0200     		.2byte	0x2
 27869 0006 00000000 		.4byte	.Ldebug_info0
 27870 000a 04       		.byte	0x4
 27871 000b 00       		.byte	0
 27872 000c 0000     		.2byte	0
 27873 000e 0000     		.2byte	0
 27874 0010 00000000 		.4byte	.LFB64
 27875 0014 DC040000 		.4byte	.LFE64-.LFB64
 27876 0018 00000000 		.4byte	.LFB65
 27877 001c 22000000 		.4byte	.LFE65-.LFB65
 27878 0020 00000000 		.4byte	.LFB66
 27879 0024 02010000 		.4byte	.LFE66-.LFB66
 27880 0028 00000000 		.4byte	.LFB67
 27881 002c 50200000 		.4byte	.LFE67-.LFB67
 27882 0030 00000000 		.4byte	.LFB68
 27883 0034 08170000 		.4byte	.LFE68-.LFB68
 27884 0038 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 594


 27885 003c 18140000 		.4byte	.LFE69-.LFB69
 27886 0040 00000000 		.4byte	.LFB70
 27887 0044 F40D0000 		.4byte	.LFE70-.LFB70
 27888 0048 00000000 		.4byte	.LFB71
 27889 004c 84000000 		.4byte	.LFE71-.LFB71
 27890 0050 00000000 		.4byte	.LFB72
 27891 0054 981A0000 		.4byte	.LFE72-.LFB72
 27892 0058 00000000 		.4byte	.LFB73
 27893 005c B4030000 		.4byte	.LFE73-.LFB73
 27894 0060 00000000 		.4byte	.LFB74
 27895 0064 38120000 		.4byte	.LFE74-.LFB74
 27896 0068 00000000 		.4byte	.LFB75
 27897 006c C8000000 		.4byte	.LFE75-.LFB75
 27898 0070 00000000 		.4byte	.LFB76
 27899 0074 30010000 		.4byte	.LFE76-.LFB76
 27900 0078 00000000 		.4byte	.LFB77
 27901 007c 74030000 		.4byte	.LFE77-.LFB77
 27902 0080 00000000 		.4byte	.LFB78
 27903 0084 84000000 		.4byte	.LFE78-.LFB78
 27904 0088 00000000 		.4byte	.LFB79
 27905 008c 88000000 		.4byte	.LFE79-.LFB79
 27906 0090 00000000 		.4byte	.LFB80
 27907 0094 80000000 		.4byte	.LFE80-.LFB80
 27908 0098 00000000 		.4byte	.LFB81
 27909 009c 3E000000 		.4byte	.LFE81-.LFB81
 27910 00a0 00000000 		.4byte	.LFB82
 27911 00a4 2E000000 		.4byte	.LFE82-.LFB82
 27912 00a8 00000000 		.4byte	.LFB83
 27913 00ac 98000000 		.4byte	.LFE83-.LFB83
 27914 00b0 00000000 		.4byte	.LFB84
 27915 00b4 80000000 		.4byte	.LFE84-.LFB84
 27916 00b8 00000000 		.4byte	.LFB85
 27917 00bc 5C000000 		.4byte	.LFE85-.LFB85
 27918 00c0 00000000 		.4byte	.LFB86
 27919 00c4 D0050000 		.4byte	.LFE86-.LFB86
 27920 00c8 00000000 		.4byte	.LFB87
 27921 00cc 30020000 		.4byte	.LFE87-.LFB87
 27922 00d0 00000000 		.4byte	.LFB88
 27923 00d4 B4000000 		.4byte	.LFE88-.LFB88
 27924 00d8 00000000 		.4byte	.LFB89
 27925 00dc B8000000 		.4byte	.LFE89-.LFB89
 27926 00e0 00000000 		.4byte	.LFB90
 27927 00e4 B8000000 		.4byte	.LFE90-.LFB90
 27928 00e8 00000000 		.4byte	.LFB91
 27929 00ec 44020000 		.4byte	.LFE91-.LFB91
 27930 00f0 00000000 		.4byte	.LFB92
 27931 00f4 BC000000 		.4byte	.LFE92-.LFB92
 27932 00f8 00000000 		.4byte	.LFB93
 27933 00fc 5C000000 		.4byte	.LFE93-.LFB93
 27934 0100 00000000 		.4byte	.LFB94
 27935 0104 38010000 		.4byte	.LFE94-.LFB94
 27936 0108 00000000 		.4byte	.LFB95
 27937 010c B0000000 		.4byte	.LFE95-.LFB95
 27938 0110 00000000 		.4byte	.LFB96
 27939 0114 5C000000 		.4byte	.LFE96-.LFB96
 27940 0118 00000000 		.4byte	.LFB97
 27941 011c 34000000 		.4byte	.LFE97-.LFB97
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 595


 27942 0120 00000000 		.4byte	.LFB98
 27943 0124 20000000 		.4byte	.LFE98-.LFB98
 27944 0128 00000000 		.4byte	.LFB99
 27945 012c 6C000000 		.4byte	.LFE99-.LFB99
 27946 0130 00000000 		.4byte	.LFB100
 27947 0134 BC010000 		.4byte	.LFE100-.LFB100
 27948 0138 00000000 		.4byte	.LFB101
 27949 013c 60000000 		.4byte	.LFE101-.LFB101
 27950 0140 00000000 		.4byte	.LFB102
 27951 0144 98050000 		.4byte	.LFE102-.LFB102
 27952 0148 00000000 		.4byte	.LFB103
 27953 014c 8C000000 		.4byte	.LFE103-.LFB103
 27954 0150 00000000 		.4byte	.LFB104
 27955 0154 EC000000 		.4byte	.LFE104-.LFB104
 27956 0158 00000000 		.4byte	.LFB105
 27957 015c 5C000000 		.4byte	.LFE105-.LFB105
 27958 0160 00000000 		.4byte	.LFB106
 27959 0164 C0000000 		.4byte	.LFE106-.LFB106
 27960 0168 00000000 		.4byte	0
 27961 016c 00000000 		.4byte	0
 27962              		.section	.debug_ranges,"",%progbits
 27963              	.Ldebug_ranges0:
 27964 0000 00000000 		.4byte	.LFB64
 27965 0004 DC040000 		.4byte	.LFE64
 27966 0008 00000000 		.4byte	.LFB65
 27967 000c 22000000 		.4byte	.LFE65
 27968 0010 00000000 		.4byte	.LFB66
 27969 0014 02010000 		.4byte	.LFE66
 27970 0018 00000000 		.4byte	.LFB67
 27971 001c 50200000 		.4byte	.LFE67
 27972 0020 00000000 		.4byte	.LFB68
 27973 0024 08170000 		.4byte	.LFE68
 27974 0028 00000000 		.4byte	.LFB69
 27975 002c 18140000 		.4byte	.LFE69
 27976 0030 00000000 		.4byte	.LFB70
 27977 0034 F40D0000 		.4byte	.LFE70
 27978 0038 00000000 		.4byte	.LFB71
 27979 003c 84000000 		.4byte	.LFE71
 27980 0040 00000000 		.4byte	.LFB72
 27981 0044 981A0000 		.4byte	.LFE72
 27982 0048 00000000 		.4byte	.LFB73
 27983 004c B4030000 		.4byte	.LFE73
 27984 0050 00000000 		.4byte	.LFB74
 27985 0054 38120000 		.4byte	.LFE74
 27986 0058 00000000 		.4byte	.LFB75
 27987 005c C8000000 		.4byte	.LFE75
 27988 0060 00000000 		.4byte	.LFB76
 27989 0064 30010000 		.4byte	.LFE76
 27990 0068 00000000 		.4byte	.LFB77
 27991 006c 74030000 		.4byte	.LFE77
 27992 0070 00000000 		.4byte	.LFB78
 27993 0074 84000000 		.4byte	.LFE78
 27994 0078 00000000 		.4byte	.LFB79
 27995 007c 88000000 		.4byte	.LFE79
 27996 0080 00000000 		.4byte	.LFB80
 27997 0084 80000000 		.4byte	.LFE80
 27998 0088 00000000 		.4byte	.LFB81
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 596


 27999 008c 3E000000 		.4byte	.LFE81
 28000 0090 00000000 		.4byte	.LFB82
 28001 0094 2E000000 		.4byte	.LFE82
 28002 0098 00000000 		.4byte	.LFB83
 28003 009c 98000000 		.4byte	.LFE83
 28004 00a0 00000000 		.4byte	.LFB84
 28005 00a4 80000000 		.4byte	.LFE84
 28006 00a8 00000000 		.4byte	.LFB85
 28007 00ac 5C000000 		.4byte	.LFE85
 28008 00b0 00000000 		.4byte	.LFB86
 28009 00b4 D0050000 		.4byte	.LFE86
 28010 00b8 00000000 		.4byte	.LFB87
 28011 00bc 30020000 		.4byte	.LFE87
 28012 00c0 00000000 		.4byte	.LFB88
 28013 00c4 B4000000 		.4byte	.LFE88
 28014 00c8 00000000 		.4byte	.LFB89
 28015 00cc B8000000 		.4byte	.LFE89
 28016 00d0 00000000 		.4byte	.LFB90
 28017 00d4 B8000000 		.4byte	.LFE90
 28018 00d8 00000000 		.4byte	.LFB91
 28019 00dc 44020000 		.4byte	.LFE91
 28020 00e0 00000000 		.4byte	.LFB92
 28021 00e4 BC000000 		.4byte	.LFE92
 28022 00e8 00000000 		.4byte	.LFB93
 28023 00ec 5C000000 		.4byte	.LFE93
 28024 00f0 00000000 		.4byte	.LFB94
 28025 00f4 38010000 		.4byte	.LFE94
 28026 00f8 00000000 		.4byte	.LFB95
 28027 00fc B0000000 		.4byte	.LFE95
 28028 0100 00000000 		.4byte	.LFB96
 28029 0104 5C000000 		.4byte	.LFE96
 28030 0108 00000000 		.4byte	.LFB97
 28031 010c 34000000 		.4byte	.LFE97
 28032 0110 00000000 		.4byte	.LFB98
 28033 0114 20000000 		.4byte	.LFE98
 28034 0118 00000000 		.4byte	.LFB99
 28035 011c 6C000000 		.4byte	.LFE99
 28036 0120 00000000 		.4byte	.LFB100
 28037 0124 BC010000 		.4byte	.LFE100
 28038 0128 00000000 		.4byte	.LFB101
 28039 012c 60000000 		.4byte	.LFE101
 28040 0130 00000000 		.4byte	.LFB102
 28041 0134 98050000 		.4byte	.LFE102
 28042 0138 00000000 		.4byte	.LFB103
 28043 013c 8C000000 		.4byte	.LFE103
 28044 0140 00000000 		.4byte	.LFB104
 28045 0144 EC000000 		.4byte	.LFE104
 28046 0148 00000000 		.4byte	.LFB105
 28047 014c 5C000000 		.4byte	.LFE105
 28048 0150 00000000 		.4byte	.LFB106
 28049 0154 C0000000 		.4byte	.LFE106
 28050 0158 00000000 		.4byte	0
 28051 015c 00000000 		.4byte	0
 28052              		.section	.debug_line,"",%progbits
 28053              	.Ldebug_line0:
 28054 0000 431B0000 		.section	.debug_str,"MS",%progbits,1
 28054      0200C001 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 597


 28054      00000201 
 28054      FB0E0D00 
 28054      01010101 
 28055              	.LASF191:
 28056 0000 696E666F 		.ascii	"infoSend\000"
 28056      53656E64 
 28056      00
 28057              	.LASF242:
 28058 0009 69645F73 		.ascii	"id_str\000"
 28058      747200
 28059              	.LASF25:
 28060 0010 73697A65 		.ascii	"sizetype\000"
 28060      74797065 
 28060      00
 28061              	.LASF33:
 28062 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 28062      494E4954 
 28062      5F4D454D 
 28062      00
 28063              	.LASF299:
 28064 0026 676C5F63 		.ascii	"gl_c\000"
 28064      00
 28065              	.LASF62:
 28066 002b 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 28066      545F4D4F 
 28066      44455F45 
 28066      4D475F46 
 28066      4346535F 
 28067              	.LASF36:
 28068 0043 434D445F 		.ascii	"CMD_ACTIVATE\000"
 28068      41435449 
 28068      56415445 
 28068      00
 28069              	.LASF177:
 28070 0050 75736572 		.ascii	"user\000"
 28070      00
 28071              	.LASF11:
 28072 0055 696E7433 		.ascii	"int32_t\000"
 28072      325F7400 
 28073              	.LASF313:
 28074 005d 675F7278 		.ascii	"g_rx\000"
 28074      00
 28075              	.LASF95:
 28076 0062 73745F64 		.ascii	"st_data\000"
 28076      61746100 
 28077              	.LASF311:
 28078 006a 675F656D 		.ascii	"g_emg_meas\000"
 28078      675F6D65 
 28078      617300
 28079              	.LASF273:
 28080 0075 77726974 		.ascii	"writeStatus\000"
 28080      65537461 
 28080      74757300 
 28081              	.LASF15:
 28082 0081 75696E74 		.ascii	"uint32\000"
 28082      333200
 28083              	.LASF343:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 598


 28084 0088 636D645F 		.ascii	"cmd_set_baudrate\000"
 28084      7365745F 
 28084      62617564 
 28084      72617465 
 28084      00
 28085              	.LASF250:
 28086 0099 7370695F 		.ascii	"spi_read_delay_str_len\000"
 28086      72656164 
 28086      5F64656C 
 28086      61795F73 
 28086      74725F6C 
 28087              	.LASF207:
 28088 00b0 7061636B 		.ascii	"packet_lenght\000"
 28088      65745F6C 
 28088      656E6768 
 28088      7400
 28089              	.LASF252:
 28090 00be 70726570 		.ascii	"prepare_generic_info\000"
 28090      6172655F 
 28090      67656E65 
 28090      7269635F 
 28090      696E666F 
 28091              	.LASF131:
 28092 00d3 706F735F 		.ascii	"pos_lim_inf\000"
 28092      6C696D5F 
 28092      696E6600 
 28093              	.LASF217:
 28094 00df 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 28094      4E445F4D 
 28094      4F544F52 
 28094      5F494458 
 28094      00
 28095              	.LASF292:
 28096 00f0 636D645F 		.ascii	"cmd_get_inputs\000"
 28096      6765745F 
 28096      696E7075 
 28096      747300
 28097              	.LASF61:
 28098 00ff 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 28098      545F4D4F 
 28098      44455F45 
 28098      4D475F46 
 28098      43465300 
 28099              	.LASF135:
 28100 0113 63757272 		.ascii	"curr_lookup\000"
 28100      5F6C6F6F 
 28100      6B757000 
 28101              	.LASF103:
 28102 011f 72657374 		.ascii	"rest_counter\000"
 28102      5F636F75 
 28102      6E746572 
 28102      00
 28103              	.LASF297:
 28104 012c 636D645F 		.ascii	"cmd_get_imu_readings\000"
 28104      6765745F 
 28104      696D755F 
 28104      72656164 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 599


 28104      696E6773 
 28105              	.LASF245:
 28106 0141 69645F73 		.ascii	"id_str_len\000"
 28106      74725F6C 
 28106      656E00
 28107              	.LASF60:
 28108 014c 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 28108      545F4D4F 
 28108      44455F45 
 28108      4D475F49 
 28108      4E544547 
 28109              	.LASF219:
 28110 0164 6D5F746D 		.ascii	"m_tmp\000"
 28110      7000
 28111              	.LASF16:
 28112 016a 696E7438 		.ascii	"int8\000"
 28112      00
 28113              	.LASF196:
 28114 016f 6765745F 		.ascii	"get_param_list\000"
 28114      70617261 
 28114      6D5F6C69 
 28114      737400
 28115              	.LASF296:
 28116 017e 636D645F 		.ascii	"cmd_get_emg\000"
 28116      6765745F 
 28116      656D6700 
 28117              	.LASF150:
 28118 018a 73745F65 		.ascii	"st_emg\000"
 28118      6D6700
 28119              	.LASF101:
 28120 0191 706F7369 		.ascii	"position_hist\000"
 28120      74696F6E 
 28120      5F686973 
 28120      7400
 28121              	.LASF184:
 28122 019f 74656D70 		.ascii	"temp_value\000"
 28122      5F76616C 
 28122      756500
 28123              	.LASF342:
 28124 01aa 72657375 		.ascii	"result\000"
 28124      6C7400
 28125              	.LASF98:
 28126 01b1 72656164 		.ascii	"ready\000"
 28126      7900
 28127              	.LASF147:
 28128 01b7 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 28128      6964785F 
 28128      7573655F 
 28128      666F725F 
 28128      636F6E74 
 28129              	.LASF107:
 28130 01cf 73745F64 		.ascii	"st_device\000"
 28130      65766963 
 28130      6500
 28131              	.LASF59:
 28132 01d9 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 28132      545F4D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 600


 28132      44455F45 
 28132      4D475F50 
 28132      524F504F 
 28133              	.LASF112:
 28134 01f5 7573655F 		.ascii	"use_2nd_motor_flag\000"
 28134      326E645F 
 28134      6D6F746F 
 28134      725F666C 
 28134      616700
 28135              	.LASF157:
 28136 0208 72656164 		.ascii	"read_imu_flag\000"
 28136      5F696D75 
 28136      5F666C61 
 28136      6700
 28137              	.LASF317:
 28138 0216 74696D65 		.ascii	"timer_value\000"
 28138      725F7661 
 28138      6C756500 
 28139              	.LASF4:
 28140 0222 6C6F6E67 		.ascii	"long int\000"
 28140      20696E74 
 28140      00
 28141              	.LASF175:
 28142 022b 756E7573 		.ascii	"unused_bytes1\000"
 28142      65645F62 
 28142      79746573 
 28142      3100
 28143              	.LASF111:
 28144 0239 72657365 		.ascii	"reset_counters\000"
 28144      745F636F 
 28144      756E7465 
 28144      727300
 28145              	.LASF167:
 28146 0248 75736572 		.ascii	"user_emg\000"
 28146      5F656D67 
 28146      00
 28147              	.LASF280:
 28148 0251 7365745A 		.ascii	"setZeros\000"
 28148      65726F73 
 28148      00
 28149              	.LASF116:
 28150 025a 756E7573 		.ascii	"unused_bytes\000"
 28150      65645F62 
 28150      79746573 
 28150      00
 28151              	.LASF180:
 28152 0267 61636365 		.ascii	"accel_value\000"
 28152      6C5F7661 
 28152      6C756500 
 28153              	.LASF200:
 28154 0273 4E554D5F 		.ascii	"NUM_ITEMS\000"
 28154      4954454D 
 28154      5300
 28155              	.LASF99:
 28156 027d 73745F63 		.ascii	"st_counters\000"
 28156      6F756E74 
 28156      65727300 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 601


 28157              	.LASF223:
 28158 0289 4D454D5F 		.ascii	"MEM_P\000"
 28158      5000
 28159              	.LASF19:
 28160 028f 666C6F61 		.ascii	"float32\000"
 28160      74333200 
 28161              	.LASF303:
 28162 0297 636D645F 		.ascii	"cmd_get_ADC_map\000"
 28162      6765745F 
 28162      4144435F 
 28162      6D617000 
 28163              	.LASF41:
 28164 02a7 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 28164      4745545F 
 28164      43555252 
 28164      454E5453 
 28164      00
 28165              	.LASF100:
 28166 02b8 656D675F 		.ascii	"emg_counter\000"
 28166      636F756E 
 28166      74657200 
 28167              	.LASF304:
 28168 02c4 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 28168      6765745F 
 28168      4144435F 
 28168      72617700 
 28169              	.LASF232:
 28170 02d4 6175785F 		.ascii	"aux_float2\000"
 28170      666C6F61 
 28170      743200
 28171              	.LASF291:
 28172 02df 636D645F 		.ascii	"cmd_ping\000"
 28172      70696E67 
 28172      00
 28173              	.LASF251:
 28174 02e8 7370695F 		.ascii	"spi_delay_menu_len\000"
 28174      64656C61 
 28174      795F6D65 
 28174      6E755F6C 
 28174      656E00
 28175              	.LASF230:
 28176 02fb 7365745F 		.ascii	"set_custom_param\000"
 28176      63757374 
 28176      6F6D5F70 
 28176      6172616D 
 28176      00
 28177              	.LASF0:
 28178 030c 7369676E 		.ascii	"signed char\000"
 28178      65642063 
 28178      68617200 
 28179              	.LASF166:
 28180 0318 75736572 		.ascii	"user_code_string\000"
 28180      5F636F64 
 28180      655F7374 
 28180      72696E67 
 28180      00
 28181              	.LASF185:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 602


 28182 0329 73745F63 		.ascii	"st_calib\000"
 28182      616C6962 
 28182      00
 28183              	.LASF271:
 28184 0332 6D656D53 		.ascii	"memStore\000"
 28184      746F7265 
 28184      00
 28185              	.LASF334:
 28186 033b 73696E67 		.ascii	"single_imu_size\000"
 28186      6C655F69 
 28186      6D755F73 
 28186      697A6500 
 28187              	.LASF69:
 28188 034b 6D6F746F 		.ascii	"motor_supply_type\000"
 28188      725F7375 
 28188      70706C79 
 28188      5F747970 
 28188      6500
 28189              	.LASF325:
 28190 035d 4144435F 		.ascii	"ADC_buf\000"
 28190      62756600 
 28191              	.LASF256:
 28192 0365 73746570 		.ascii	"step\000"
 28192      00
 28193              	.LASF1:
 28194 036a 756E7369 		.ascii	"unsigned char\000"
 28194      676E6564 
 28194      20636861 
 28194      7200
 28195              	.LASF141:
 28196 0378 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 28196      72657665 
 28196      72735F6D 
 28196      6F746F72 
 28196      5F666C61 
 28197              	.LASF307:
 28198 038e 675F7265 		.ascii	"g_refNew\000"
 28198      664E6577 
 28198      00
 28199              	.LASF110:
 28200 0397 72696768 		.ascii	"right_left\000"
 28200      745F6C65 
 28200      667400
 28201              	.LASF29:
 28202 03a2 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 28202      53544F52 
 28202      455F4445 
 28202      4641554C 
 28202      545F5041 
 28203              	.LASF139:
 28204 03bb 656E636F 		.ascii	"encoder_line\000"
 28204      6465725F 
 28204      6C696E65 
 28204      00
 28205              	.LASF246:
 28206 03c8 6E5F696D 		.ascii	"n_imu_str_len\000"
 28206      755F7374 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 603


 28206      725F6C65 
 28206      6E00
 28207              	.LASF249:
 28208 03d6 696D755F 		.ascii	"imu_table_str_len\000"
 28208      7461626C 
 28208      655F7374 
 28208      725F6C65 
 28208      6E00
 28209              	.LASF269:
 28210 03e8 76616C75 		.ascii	"value\000"
 28210      6500
 28211              	.LASF179:
 28212 03ee 666C6167 		.ascii	"flags\000"
 28212      7300
 28213              	.LASF244:
 28214 03f4 7370695F 		.ascii	"spi_read_delay_str\000"
 28214      72656164 
 28214      5F64656C 
 28214      61795F73 
 28214      747200
 28215              	.LASF37:
 28216 0407 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 28216      4745545F 
 28216      41435449 
 28216      56415445 
 28216      00
 28217              	.LASF22:
 28218 0418 63686172 		.ascii	"char\000"
 28218      00
 28219              	.LASF134:
 28220 041d 6D61785F 		.ascii	"max_step_pos\000"
 28220      73746570 
 28220      5F706F73 
 28220      00
 28221              	.LASF275:
 28222 042a 7265745F 		.ascii	"ret_val\000"
 28222      76616C00 
 28223              	.LASF229:
 28224 0432 6D656E75 		.ascii	"menu_idx\000"
 28224      5F696478 
 28224      00
 28225              	.LASF238:
 28226 043b 73746172 		.ascii	"start_byte\000"
 28226      745F6279 
 28226      746500
 28227              	.LASF235:
 28228 0446 6E756D5F 		.ascii	"num_mag_cal_params\000"
 28228      6D61675F 
 28228      63616C5F 
 28228      70617261 
 28228      6D7300
 28229              	.LASF140:
 28230 0459 70776D5F 		.ascii	"pwm_rate_limiter\000"
 28230      72617465 
 28230      5F6C696D 
 28230      69746572 
 28230      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 604


 28231              	.LASF120:
 28232 046a 6B5F645F 		.ascii	"k_d_c\000"
 28232      6300
 28233              	.LASF193:
 28234 0470 7061636B 		.ascii	"packet_string\000"
 28234      65745F73 
 28234      7472696E 
 28234      6700
 28235              	.LASF145:
 28236 047e 6D5F6D75 		.ascii	"m_mult\000"
 28236      6C7400
 28237              	.LASF119:
 28238 0485 6B5F695F 		.ascii	"k_i_c\000"
 28238      6300
 28239              	.LASF272:
 28240 048b 64697370 		.ascii	"displacement\000"
 28240      6C616365 
 28240      6D656E74 
 28240      00
 28241              	.LASF266:
 28242 0498 64617461 		.ascii	"data_length\000"
 28242      5F6C656E 
 28242      67746800 
 28243              	.LASF132:
 28244 04a4 706F735F 		.ascii	"pos_lim_sup\000"
 28244      6C696D5F 
 28244      73757000 
 28245              	.LASF153:
 28246 04b0 656D675F 		.ascii	"emg_speed\000"
 28246      73706565 
 28246      6400
 28247              	.LASF171:
 28248 04ba 72657374 		.ascii	"rest_vel\000"
 28248      5F76656C 
 28248      00
 28249              	.LASF206:
 28250 04c3 7061636B 		.ascii	"packet_data\000"
 28250      65745F64 
 28250      61746100 
 28251              	.LASF330:
 28252 04cf 7046696C 		.ascii	"pFile\000"
 28252      6500
 28253              	.LASF164:
 28254 04d5 4144435F 		.ascii	"ADC_conf\000"
 28254      636F6E66 
 28254      00
 28255              	.LASF263:
 28256 04de 636F6D6D 		.ascii	"commWrite\000"
 28256      57726974 
 28256      6500
 28257              	.LASF274:
 28258 04e8 70616765 		.ascii	"pages\000"
 28258      7300
 28259              	.LASF278:
 28260 04ee 6D656D49 		.ascii	"memInit\000"
 28260      6E697400 
 28261              	.LASF122:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 605


 28262 04f6 6B5F695F 		.ascii	"k_i_dl\000"
 28262      646C00
 28263              	.LASF38:
 28264 04fd 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 28264      5345545F 
 28264      494E5055 
 28264      545300
 28265              	.LASF34:
 28266 050c 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 28266      4745545F 
 28266      50415241 
 28266      4D5F4C49 
 28266      535400
 28267              	.LASF96:
 28268 051f 62756666 		.ascii	"buffer\000"
 28268      657200
 28269              	.LASF124:
 28270 0526 6B5F705F 		.ascii	"k_p_c_dl\000"
 28270      635F646C 
 28270      00
 28271              	.LASF281:
 28272 052f 636D645F 		.ascii	"cmd_get_measurements\000"
 28272      6765745F 
 28272      6D656173 
 28272      7572656D 
 28272      656E7473 
 28273              	.LASF188:
 28274 0544 73706565 		.ascii	"speed\000"
 28274      6400
 28275              	.LASF192:
 28276 054a 72785F63 		.ascii	"rx_cmd\000"
 28276      6D6400
 28277              	.LASF84:
 28278 0551 54595045 		.ascii	"TYPE_DOUBLE\000"
 28278      5F444F55 
 28278      424C4500 
 28279              	.LASF309:
 28280 055d 675F6D65 		.ascii	"g_meas\000"
 28280      617300
 28281              	.LASF285:
 28282 0564 6C617374 		.ascii	"last_aux_int16\000"
 28282      5F617578 
 28282      5F696E74 
 28282      313600
 28283              	.LASF73:
 28284 0573 41434B5F 		.ascii	"ACK_ERROR\000"
 28284      4552524F 
 28284      5200
 28285              	.LASF327:
 28286 057d 64617461 		.ascii	"data_encoder_raw\000"
 28286      5F656E63 
 28286      6F646572 
 28286      5F726177 
 28286      00
 28287              	.LASF57:
 28288 058e 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 28288      545F4D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 606


 28288      44455F45 
 28288      58544552 
 28288      4E414C00 
 28289              	.LASF221:
 28290 05a2 696E6465 		.ascii	"index\000"
 28290      7800
 28291              	.LASF172:
 28292 05a8 72657374 		.ascii	"rest_position_flag\000"
 28292      5F706F73 
 28292      6974696F 
 28292      6E5F666C 
 28292      616700
 28293              	.LASF335:
 28294 05bb 675F696D 		.ascii	"g_imu\000"
 28294      7500
 28295              	.LASF125:
 28296 05c1 6B5F695F 		.ascii	"k_i_c_dl\000"
 28296      635F646C 
 28296      00
 28297              	.LASF241:
 28298 05ca 6D61675F 		.ascii	"mag_param_str\000"
 28298      70617261 
 28298      6D5F7374 
 28298      7200
 28299              	.LASF324:
 28300 05d8 72657365 		.ascii	"reset_PSoC_flag\000"
 28300      745F5053 
 28300      6F435F66 
 28300      6C616700 
 28301              	.LASF85:
 28302 05e8 54595045 		.ascii	"TYPE_STRING\000"
 28302      5F535452 
 28302      494E4700 
 28303              	.LASF68:
 28304 05f4 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 28304      5F414E44 
 28304      5F504F53 
 28304      5F434F4E 
 28304      54524F4C 
 28305              	.LASF28:
 28306 0609 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 28306      53544F52 
 28306      455F5041 
 28306      52414D53 
 28306      00
 28307              	.LASF203:
 28308 061a 50415241 		.ascii	"PARAMS_STR\000"
 28308      4D535F53 
 28308      545200
 28309              	.LASF186:
 28310 0625 656E6162 		.ascii	"enabled\000"
 28310      6C656400 
 28311              	.LASF7:
 28312 062d 6C6F6E67 		.ascii	"long unsigned int\000"
 28312      20756E73 
 28312      69676E65 
 28312      6420696E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 607


 28312      7400
 28313              	.LASF105:
 28314 063f 746F7461 		.ascii	"total_time_on\000"
 28314      6C5F7469 
 28314      6D655F6F 
 28314      6E00
 28315              	.LASF32:
 28316 064d 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 28316      424F4F54 
 28316      4C4F4144 
 28316      455200
 28317              	.LASF92:
 28318 065c 686F6C64 		.ascii	"hold_curr\000"
 28318      5F637572 
 28318      7200
 28319              	.LASF283:
 28320 0666 636D645F 		.ascii	"cmd_get_accelerations\000"
 28320      6765745F 
 28320      61636365 
 28320      6C657261 
 28320      74696F6E 
 28321              	.LASF106:
 28322 067c 746F7461 		.ascii	"total_time_rest\000"
 28322      6C5F7469 
 28322      6D655F72 
 28322      65737400 
 28323              	.LASF195:
 28324 068c 7374725F 		.ascii	"str_sd_data\000"
 28324      73645F64 
 28324      61746100 
 28325              	.LASF127:
 28326 0698 61637469 		.ascii	"activ\000"
 28326      7600
 28327              	.LASF205:
 28328 069e 4D454E55 		.ascii	"MENU_STR\000"
 28328      5F535452 
 28328      00
 28329              	.LASF144:
 28330 06a7 6D5F6F66 		.ascii	"m_off\000"
 28330      6600
 28331              	.LASF74:
 28332 06ad 41434B5F 		.ascii	"ACK_OK\000"
 28332      4F4B00
 28333              	.LASF76:
 28334 06b4 54595045 		.ascii	"TYPE_FLAG\000"
 28334      5F464C41 
 28334      4700
 28335              	.LASF183:
 28336 06be 71756174 		.ascii	"quat_value\000"
 28336      5F76616C 
 28336      756500
 28337              	.LASF237:
 28338 06c9 7061636B 		.ascii	"packet_length\000"
 28338      65745F6C 
 28338      656E6774 
 28338      6800
 28339              	.LASF169:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 608


 28340 06d7 72657374 		.ascii	"rest_pos\000"
 28340      5F706F73 
 28340      00
 28341              	.LASF87:
 28342 06e0 63757272 		.ascii	"curr\000"
 28342      00
 28343              	.LASF137:
 28344 06e5 696E7075 		.ascii	"input_mode\000"
 28344      745F6D6F 
 28344      646500
 28345              	.LASF66:
 28346 06f0 434F4E54 		.ascii	"CONTROL_PWM\000"
 28346      524F4C5F 
 28346      50574D00 
 28347              	.LASF43:
 28348 06fc 434D445F 		.ascii	"CMD_GET_EMG\000"
 28348      4745545F 
 28348      454D4700 
 28349              	.LASF279:
 28350 0708 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 28350      6E69745F 
 28350      536F6674 
 28350      48616E64 
 28350      50726F00 
 28351              	.LASF31:
 28352 071c 434D445F 		.ascii	"CMD_GET_INFO\000"
 28352      4745545F 
 28352      494E464F 
 28352      00
 28353              	.LASF233:
 28354 0729 6765745F 		.ascii	"get_IMU_param_list\000"
 28354      494D555F 
 28354      70617261 
 28354      6D5F6C69 
 28354      737400
 28355              	.LASF300:
 28356 073c 73696E67 		.ascii	"single_packet\000"
 28356      6C655F70 
 28356      61636B65 
 28356      7400
 28357              	.LASF236:
 28358 074a 66697273 		.ascii	"first_imu_parameter\000"
 28358      745F696D 
 28358      755F7061 
 28358      72616D65 
 28358      74657200 
 28359              	.LASF42:
 28360 075e 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 28360      4745545F 
 28360      43555252 
 28360      5F414E44 
 28360      5F4D4541 
 28361              	.LASF338:
 28362 0774 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 28362      43313120 
 28362      352E342E 
 28362      31203230 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 609


 28362      31363036 
 28363 07a7 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 28363      20726576 
 28363      6973696F 
 28363      6E203233 
 28363      37373135 
 28364 07da 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 28364      66756E63 
 28364      74696F6E 
 28364      2D736563 
 28364      74696F6E 
 28365              	.LASF89:
 28366 0802 73745F72 		.ascii	"st_ref\000"
 28366      656600
 28367              	.LASF47:
 28368 0809 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 28368      5345545F 
 28368      43554646 
 28368      5F494E50 
 28368      55545300 
 28369              	.LASF168:
 28370 081d 73745F53 		.ascii	"st_SH_spec\000"
 28370      485F7370 
 28370      656300
 28371              	.LASF316:
 28372 0828 63616C69 		.ascii	"calib\000"
 28372      6200
 28373              	.LASF6:
 28374 082e 5F5F7569 		.ascii	"__uint32_t\000"
 28374      6E743332 
 28374      5F7400
 28375              	.LASF8:
 28376 0839 6C6F6E67 		.ascii	"long long int\000"
 28376      206C6F6E 
 28376      6720696E 
 28376      7400
 28377              	.LASF64:
 28378 0847 53485F63 		.ascii	"SH_control_mode\000"
 28378      6F6E7472 
 28378      6F6C5F6D 
 28378      6F646500 
 28379              	.LASF78:
 28380 0857 54595045 		.ascii	"TYPE_UINT8\000"
 28380      5F55494E 
 28380      543800
 28381              	.LASF289:
 28382 0862 636D645F 		.ascii	"cmd_get_currents\000"
 28382      6765745F 
 28382      63757272 
 28382      656E7473 
 28382      00
 28383              	.LASF71:
 28384 0873 4D41584F 		.ascii	"MAXON_12V\000"
 28384      4E5F3132 
 28384      5600
 28385              	.LASF323:
 28386 087d 6368616E 		.ascii	"change_ext_ref_flag\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 610


 28386      67655F65 
 28386      78745F72 
 28386      65665F66 
 28386      6C616700 
 28387              	.LASF21:
 28388 0891 646F7562 		.ascii	"double\000"
 28388      6C6500
 28389              	.LASF143:
 28390 0898 456E635F 		.ascii	"Enc_raw_read_conf\000"
 28390      7261775F 
 28390      72656164 
 28390      5F636F6E 
 28390      6600
 28391              	.LASF189:
 28392 08aa 72657065 		.ascii	"repetitions\000"
 28392      74697469 
 28392      6F6E7300 
 28393              	.LASF133:
 28394 08b6 6D61785F 		.ascii	"max_step_neg\000"
 28394      73746570 
 28394      5F6E6567 
 28394      00
 28395              	.LASF322:
 28396 08c3 72657365 		.ascii	"reset_last_value_flag\000"
 28396      745F6C61 
 28396      73745F76 
 28396      616C7565 
 28396      5F666C61 
 28397              	.LASF204:
 28398 08d9 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 28398      4F4D5F50 
 28398      4152414D 
 28398      5F474554 
 28398      00
 28399              	.LASF20:
 28400 08ea 666C6F61 		.ascii	"float\000"
 28400      7400
 28401              	.LASF159:
 28402 08f0 494D555F 		.ascii	"IMU_conf\000"
 28402      636F6E66 
 28402      00
 28403              	.LASF222:
 28404 08f9 50415241 		.ascii	"PARAM_IDX\000"
 28404      4D5F4944 
 28404      5800
 28405              	.LASF117:
 28406 0903 73745F6D 		.ascii	"st_motor\000"
 28406      6F746F72 
 28406      00
 28407              	.LASF218:
 28408 090c 6D5F6164 		.ascii	"m_addr\000"
 28408      647200
 28409              	.LASF315:
 28410 0913 635F6D65 		.ascii	"c_mem\000"
 28410      6D00
 28411              	.LASF265:
 28412 0919 64617461 		.ascii	"data_array\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 611


 28412      5F617272 
 28412      617900
 28413              	.LASF10:
 28414 0924 756E7369 		.ascii	"unsigned int\000"
 28414      676E6564 
 28414      20696E74 
 28414      00
 28415              	.LASF268:
 28416 0931 73656E64 		.ascii	"sendAcknowledgment\000"
 28416      41636B6E 
 28416      6F776C65 
 28416      64676D65 
 28416      6E7400
 28417              	.LASF258:
 28418 0944 70726570 		.ascii	"prepare_SD_legend\000"
 28418      6172655F 
 28418      53445F6C 
 28418      6567656E 
 28418      6400
 28419              	.LASF336:
 28420 0956 4D616743 		.ascii	"MagCal\000"
 28420      616C00
 28421              	.LASF55:
 28422 095d 53485F63 		.ascii	"SH_command\000"
 28422      6F6D6D61 
 28422      6E6400
 28423              	.LASF80:
 28424 0968 54595045 		.ascii	"TYPE_UINT16\000"
 28424      5F55494E 
 28424      54313600 
 28425              	.LASF174:
 28426 0974 666C6167 		.ascii	"flag\000"
 28426      00
 28427              	.LASF284:
 28428 0979 636D645F 		.ascii	"cmd_set_inputs\000"
 28428      7365745F 
 28428      696E7075 
 28428      747300
 28429              	.LASF138:
 28430 0988 636F6E74 		.ascii	"control_mode\000"
 28430      726F6C5F 
 28430      6D6F6465 
 28430      00
 28431              	.LASF294:
 28432 0995 6F66665F 		.ascii	"off_1\000"
 28432      3100
 28433              	.LASF58:
 28434 099b 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 28434      545F4D4F 
 28434      44455F45 
 28434      4E434F44 
 28434      45523300 
 28435              	.LASF51:
 28436 09af 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 28436      4745545F 
 28436      454E434F 
 28436      4445525F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 612


 28436      434F4E46 
 28437              	.LASF156:
 28438 09c4 73745F69 		.ascii	"st_imu\000"
 28438      6D7500
 28439              	.LASF287:
 28440 09cb 636D645F 		.ascii	"cmd_get_activate\000"
 28440      6765745F 
 28440      61637469 
 28440      76617465 
 28440      00
 28441              	.LASF264:
 28442 09dc 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 28442      57726974 
 28442      655F746F 
 28442      5F637566 
 28442      6600
 28443              	.LASF209:
 28444 09ee 73747269 		.ascii	"string_lenght\000"
 28444      6E675F6C 
 28444      656E6768 
 28444      7400
 28445              	.LASF83:
 28446 09fc 54595045 		.ascii	"TYPE_FLOAT\000"
 28446      5F464C4F 
 28446      415400
 28447              	.LASF226:
 28448 0a07 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 28448      4F4D5F50 
 28448      4152414D 
 28448      5F534554 
 28448      5F4C4953 
 28449              	.LASF201:
 28450 0a1d 4E554D5F 		.ascii	"NUM_STRUCT\000"
 28450      53545255 
 28450      435400
 28451              	.LASF231:
 28452 0a28 6175785F 		.ascii	"aux_uchar\000"
 28452      75636861 
 28452      7200
 28453              	.LASF94:
 28454 0a32 6164645F 		.ascii	"add_emg\000"
 28454      656D6700 
 28455              	.LASF79:
 28456 0a3a 54595045 		.ascii	"TYPE_INT16\000"
 28456      5F494E54 
 28456      313600
 28457              	.LASF213:
 28458 0a45 6175785F 		.ascii	"aux_uint16\000"
 28458      75696E74 
 28458      313600
 28459              	.LASF151:
 28460 0a50 656D675F 		.ascii	"emg_threshold\000"
 28460      74687265 
 28460      73686F6C 
 28460      6400
 28461              	.LASF46:
 28462 0a5e 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 613


 28462      4745545F 
 28462      43555252 
 28462      5F444946 
 28462      4600
 28463              	.LASF102:
 28464 0a70 63757272 		.ascii	"current_hist\000"
 28464      656E745F 
 28464      68697374 
 28464      00
 28465              	.LASF67:
 28466 0a7d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 28466      524F4C5F 
 28466      43555252 
 28466      454E5400 
 28467              	.LASF24:
 28468 0a8d 6C6F6E67 		.ascii	"long double\000"
 28468      20646F75 
 28468      626C6500 
 28469              	.LASF82:
 28470 0a99 54595045 		.ascii	"TYPE_UINT32\000"
 28470      5F55494E 
 28470      54333200 
 28471              	.LASF93:
 28472 0aa5 73745F65 		.ascii	"st_emg_meas\000"
 28472      6D675F6D 
 28472      65617300 
 28473              	.LASF198:
 28474 0ab1 5641525F 		.ascii	"VAR_P\000"
 28474      5000
 28475              	.LASF225:
 28476 0ab7 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 28476      4F4D5F50 
 28476      4152414D 
 28476      5F474554 
 28476      5F4C4953 
 28477              	.LASF148:
 28478 0acd 6D6F746F 		.ascii	"motor_handle_ratio\000"
 28478      725F6861 
 28478      6E646C65 
 28478      5F726174 
 28478      696F00
 28479              	.LASF267:
 28480 0ae0 63686563 		.ascii	"checksum\000"
 28480      6B73756D 
 28480      00
 28481              	.LASF308:
 28482 0ae9 675F7265 		.ascii	"g_refOld\000"
 28482      664F6C64 
 28482      00
 28483              	.LASF35:
 28484 0af2 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 28484      48414E44 
 28484      5F43414C 
 28484      49425241 
 28484      544500
 28485              	.LASF181:
 28486 0b05 6779726F 		.ascii	"gyro_value\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 614


 28486      5F76616C 
 28486      756500
 28487              	.LASF161:
 28488 0b10 63757272 		.ascii	"curr_time\000"
 28488      5F74696D 
 28488      6500
 28489              	.LASF146:
 28490 0b1a 646F7562 		.ascii	"double_encoder_on_off\000"
 28490      6C655F65 
 28490      6E636F64 
 28490      65725F6F 
 28490      6E5F6F66 
 28491              	.LASF158:
 28492 0b30 5350495F 		.ascii	"SPI_read_delay\000"
 28492      72656164 
 28492      5F64656C 
 28492      617900
 28493              	.LASF72:
 28494 0b3f 61636B6E 		.ascii	"acknowledgment_values\000"
 28494      6F776C65 
 28494      64676D65 
 28494      6E745F76 
 28494      616C7565 
 28495              	.LASF216:
 28496 0b55 4D4F544F 		.ascii	"MOTOR_IDX\000"
 28496      525F4944 
 28496      5800
 28497              	.LASF277:
 28498 0b5f 6D656D52 		.ascii	"memRestore\000"
 28498      6573746F 
 28498      726500
 28499              	.LASF239:
 28500 0b6a 6E5F696D 		.ascii	"n_imu_str\000"
 28500      755F7374 
 28500      7200
 28501              	.LASF253:
 28502 0b74 696E666F 		.ascii	"info_string\000"
 28502      5F737472 
 28502      696E6700 
 28503              	.LASF259:
 28504 0b80 70726570 		.ascii	"prepare_SD_info\000"
 28504      6172655F 
 28504      53445F69 
 28504      6E666F00 
 28505              	.LASF9:
 28506 0b90 6C6F6E67 		.ascii	"long long unsigned int\000"
 28506      206C6F6E 
 28506      6720756E 
 28506      7369676E 
 28506      65642069 
 28507              	.LASF81:
 28508 0ba7 54595045 		.ascii	"TYPE_INT32\000"
 28508      5F494E54 
 28508      333200
 28509              	.LASF215:
 28510 0bb2 6175785F 		.ascii	"aux_uint32\000"
 28510      75696E74 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 615


 28510      333200
 28511              	.LASF97:
 28512 0bbd 6C656E67 		.ascii	"length\000"
 28512      746800
 28513              	.LASF227:
 28514 0bc4 55534552 		.ascii	"USER_ID_PARAM\000"
 28514      5F49445F 
 28514      50415241 
 28514      4D00
 28515              	.LASF178:
 28516 0bd2 73745F69 		.ascii	"st_imu_data\000"
 28516      6D755F64 
 28516      61746100 
 28517              	.LASF182:
 28518 0bde 6D61675F 		.ascii	"mag_value\000"
 28518      76616C75 
 28518      6500
 28519              	.LASF88:
 28520 0be8 6F6E6F66 		.ascii	"onoff\000"
 28520      6600
 28521              	.LASF45:
 28522 0bee 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 28522      4745545F 
 28522      41434345 
 28522      4C00
 28523              	.LASF282:
 28524 0bfc 636D645F 		.ascii	"cmd_get_velocities\000"
 28524      6765745F 
 28524      76656C6F 
 28524      63697469 
 28524      657300
 28525              	.LASF276:
 28526 0c0f 6D656D52 		.ascii	"memRecall\000"
 28526      6563616C 
 28526      6C00
 28527              	.LASF318:
 28528 0c19 74696D65 		.ascii	"timer_value0\000"
 28528      725F7661 
 28528      6C756530 
 28528      00
 28529              	.LASF48:
 28530 0c26 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 28530      5345545F 
 28530      42415544 
 28530      52415445 
 28530      00
 28531              	.LASF118:
 28532 0c37 6B5F705F 		.ascii	"k_p_c\000"
 28532      6300
 28533              	.LASF243:
 28534 0c3d 696D755F 		.ascii	"imu_table_str\000"
 28534      7461626C 
 28534      655F7374 
 28534      7200
 28535              	.LASF319:
 28536 0c4b 6465765F 		.ascii	"dev_tension\000"
 28536      74656E73 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 616


 28536      696F6E00 
 28537              	.LASF129:
 28538 0c57 6D6F746F 		.ascii	"motor_driver_type\000"
 28538      725F6472 
 28538      69766572 
 28538      5F747970 
 28538      6500
 28539              	.LASF295:
 28540 0c69 6D756C74 		.ascii	"mult_1\000"
 28540      5F3100
 28541              	.LASF23:
 28542 0c70 72656738 		.ascii	"reg8\000"
 28542      00
 28543              	.LASF261:
 28544 0c75 636F6D6D 		.ascii	"commWrite_old_id\000"
 28544      57726974 
 28544      655F6F6C 
 28544      645F6964 
 28544      00
 28545              	.LASF220:
 28546 0c86 6D616E61 		.ascii	"manage_param_list\000"
 28546      67655F70 
 28546      6172616D 
 28546      5F6C6973 
 28546      7400
 28547              	.LASF30:
 28548 0c98 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 28548      52455354 
 28548      4F52455F 
 28548      50415241 
 28548      4D5300
 28549              	.LASF257:
 28550 0cab 70726570 		.ascii	"prepare_SD_param_info\000"
 28550      6172655F 
 28550      53445F70 
 28550      6172616D 
 28550      5F696E66 
 28551              	.LASF255:
 28552 0cc1 70726570 		.ascii	"prepare_counter_info\000"
 28552      6172655F 
 28552      636F756E 
 28552      7465725F 
 28552      696E666F 
 28553              	.LASF262:
 28554 0cd6 6F6C645F 		.ascii	"old_id\000"
 28554      696400
 28555              	.LASF341:
 28556 0cdd 5F5F5245 		.ascii	"__REV16\000"
 28556      56313600 
 28557              	.LASF328:
 28558 0ce5 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 28558      636F6465 
 28558      725F4C69 
 28558      6E655F43 
 28558      6F6E6E65 
 28559              	.LASF115:
 28560 0cfe 6465765F 		.ascii	"dev_type\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 617


 28560      74797065 
 28560      00
 28561              	.LASF165:
 28562 0d07 73745F75 		.ascii	"st_user\000"
 28562      73657200 
 28563              	.LASF288:
 28564 0d0f 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 28564      6765745F 
 28564      63757272 
 28564      5F616E64 
 28564      5F6D6561 
 28565              	.LASF149:
 28566 0d25 67656172 		.ascii	"gears_params\000"
 28566      735F7061 
 28566      72616D73 
 28566      00
 28567              	.LASF160:
 28568 0d32 73745F65 		.ascii	"st_expansion\000"
 28568      7870616E 
 28568      73696F6E 
 28568      00
 28569              	.LASF154:
 28570 0d3f 656D675F 		.ascii	"emg_calibration_flag\000"
 28570      63616C69 
 28570      62726174 
 28570      696F6E5F 
 28570      666C6167 
 28571              	.LASF90:
 28572 0d54 73745F6D 		.ascii	"st_meas\000"
 28572      65617300 
 28573              	.LASF54:
 28574 0d5c 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 28574      4745545F 
 28574      4144435F 
 28574      52415700 
 28575              	.LASF70:
 28576 0d6c 4D41584F 		.ascii	"MAXON_24V\000"
 28576      4E5F3234 
 28576      5600
 28577              	.LASF63:
 28578 0d76 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 28578      545F4D4F 
 28578      44455F45 
 28578      4D475F50 
 28578      524F504F 
 28579              	.LASF50:
 28580 0d95 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 28580      4745545F 
 28580      494D555F 
 28580      50415241 
 28580      4D00
 28581              	.LASF52:
 28582 0da7 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 28582      4745545F 
 28582      454E434F 
 28582      4445525F 
 28582      52415700 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 618


 28583              	.LASF293:
 28584 0dbb 636D645F 		.ascii	"cmd_store_params\000"
 28584      73746F72 
 28584      655F7061 
 28584      72616D73 
 28584      00
 28585              	.LASF314:
 28586 0dcc 675F6D65 		.ascii	"g_mem\000"
 28586      6D00
 28587              	.LASF40:
 28588 0dd2 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 28588      4745545F 
 28588      4D454153 
 28588      5552454D 
 28588      454E5453 
 28589              	.LASF302:
 28590 0de7 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 28590      6765745F 
 28590      656E636F 
 28590      6465725F 
 28590      72617700 
 28591              	.LASF13:
 28592 0dfb 75696E74 		.ascii	"uint8\000"
 28592      3800
 28593              	.LASF190:
 28594 0e01 636F6D6D 		.ascii	"commProcess\000"
 28594      50726F63 
 28594      65737300 
 28595              	.LASF2:
 28596 0e0d 73686F72 		.ascii	"short int\000"
 28596      7420696E 
 28596      7400
 28597              	.LASF247:
 28598 0e17 6964735F 		.ascii	"ids_str_len\000"
 28598      7374725F 
 28598      6C656E00 
 28599              	.LASF123:
 28600 0e23 6B5F645F 		.ascii	"k_d_dl\000"
 28600      646C00
 28601              	.LASF208:
 28602 0e2a 6964785F 		.ascii	"idx_menu\000"
 28602      6D656E75 
 28602      00
 28603              	.LASF176:
 28604 0e33 6D6F746F 		.ascii	"motor\000"
 28604      7200
 28605              	.LASF331:
 28606 0e39 4E5F494D 		.ascii	"N_IMU_Connected\000"
 28606      555F436F 
 28606      6E6E6563 
 28606      74656400 
 28607              	.LASF39:
 28608 0e49 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 28608      4745545F 
 28608      494E5055 
 28608      545300
 28609              	.LASF108:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 619


 28610 0e58 68775F6D 		.ascii	"hw_maint_date\000"
 28610      61696E74 
 28610      5F646174 
 28610      6500
 28611              	.LASF240:
 28612 0e66 6964735F 		.ascii	"ids_str\000"
 28612      73747200 
 28613              	.LASF53:
 28614 0e6e 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 28614      4745545F 
 28614      4144435F 
 28614      434F4E46 
 28614      00
 28615              	.LASF27:
 28616 0e7f 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 28616      5345545F 
 28616      5A45524F 
 28616      5300
 28617              	.LASF248:
 28618 0e8d 6D61675F 		.ascii	"mag_param_str_len\000"
 28618      70617261 
 28618      6D5F7374 
 28618      725F6C65 
 28618      6E00
 28619              	.LASF234:
 28620 0e9f 6E756D5F 		.ascii	"num_imus_id_params\000"
 28620      696D7573 
 28620      5F69645F 
 28620      70617261 
 28620      6D7300
 28621              	.LASF212:
 28622 0eb2 6175785F 		.ascii	"aux_int16\000"
 28622      696E7431 
 28622      3600
 28623              	.LASF337:
 28624 0ebc 45455052 		.ascii	"EEPROM_ADDR\000"
 28624      4F4D5F41 
 28624      44445200 
 28625              	.LASF109:
 28626 0ec8 73746174 		.ascii	"stats_period_begin_date\000"
 28626      735F7065 
 28626      72696F64 
 28626      5F626567 
 28626      696E5F64 
 28627              	.LASF333:
 28628 0ee0 696D7573 		.ascii	"imus_data_size\000"
 28628      5F646174 
 28628      615F7369 
 28628      7A6500
 28629              	.LASF305:
 28630 0eef 49544D5F 		.ascii	"ITM_RxBuffer\000"
 28630      52784275 
 28630      66666572 
 28630      00
 28631              	.LASF44:
 28632 0efc 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 28632      4745545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 620


 28632      56454C4F 
 28632      43495449 
 28632      455300
 28633              	.LASF321:
 28634 0f0f 706F775F 		.ascii	"pow_tension\000"
 28634      74656E73 
 28634      696F6E00 
 28635              	.LASF340:
 28636 0f1b 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 28636      73657273 
 28636      5C4D6174 
 28636      7469615C 
 28636      446F6375 
 28637 0f49 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\SoftHand_Pro.cydsn\000"
 28637      656E6572 
 28637      69632D46 
 28637      572D5053 
 28637      6F43355C 
 28638              	.LASF75:
 28639 0f70 64617461 		.ascii	"data_types\000"
 28639      5F747970 
 28639      657300
 28640              	.LASF17:
 28641 0f7b 696E7431 		.ascii	"int16\000"
 28641      3600
 28642              	.LASF162:
 28643 0f81 72656164 		.ascii	"read_exp_port_flag\000"
 28643      5F657870 
 28643      5F706F72 
 28643      745F666C 
 28643      616700
 28644              	.LASF155:
 28645 0f94 73776974 		.ascii	"switch_emg\000"
 28645      63685F65 
 28645      6D6700
 28646              	.LASF128:
 28647 0f9f 61637469 		.ascii	"activate_pwm_rescaling\000"
 28647      76617465 
 28647      5F70776D 
 28647      5F726573 
 28647      63616C69 
 28648              	.LASF121:
 28649 0fb6 6B5F705F 		.ascii	"k_p_dl\000"
 28649      646C00
 28650              	.LASF91:
 28651 0fbd 65737469 		.ascii	"estim_curr\000"
 28651      6D5F6375 
 28651      727200
 28652              	.LASF320:
 28653 0fc8 6465765F 		.ascii	"dev_pwm_limit\000"
 28653      70776D5F 
 28653      6C696D69 
 28653      7400
 28654              	.LASF163:
 28655 0fd6 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 28655      5F414443 
 28655      5F73656E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 621


 28655      736F7273 
 28655      5F706F72 
 28656              	.LASF329:
 28657 0ff1 456E636F 		.ascii	"Encoder_Value\000"
 28657      6465725F 
 28657      56616C75 
 28657      6500
 28658              	.LASF301:
 28659 0fff 636D645F 		.ascii	"cmd_get_encoder_map\000"
 28659      6765745F 
 28659      656E636F 
 28659      6465725F 
 28659      6D617000 
 28660              	.LASF114:
 28661 1013 75736572 		.ascii	"user_id\000"
 28661      5F696400 
 28662              	.LASF12:
 28663 101b 75696E74 		.ascii	"uint32_t\000"
 28663      33325F74 
 28663      00
 28664              	.LASF211:
 28665 1024 6175785F 		.ascii	"aux_float\000"
 28665      666C6F61 
 28665      7400
 28666              	.LASF332:
 28667 102e 494D555F 		.ascii	"IMU_connected\000"
 28667      636F6E6E 
 28667      65637465 
 28667      6400
 28668              	.LASF202:
 28669 103c 4E554D5F 		.ascii	"NUM_MENU\000"
 28669      4D454E55 
 28669      00
 28670              	.LASF214:
 28671 1045 6175785F 		.ascii	"aux_int32\000"
 28671      696E7433 
 28671      3200
 28672              	.LASF113:
 28673 104f 62617564 		.ascii	"baud_rate\000"
 28673      5F726174 
 28673      6500
 28674              	.LASF290:
 28675 1059 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 28675      6765745F 
 28675      63757272 
 28675      656E7473 
 28675      5F666F72 
 28676              	.LASF197:
 28677 1073 696E666F 		.ascii	"info_type\000"
 28677      5F747970 
 28677      6500
 28678              	.LASF49:
 28679 107d 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 28679      4745545F 
 28679      494D555F 
 28679      52454144 
 28679      494E4753 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 622


 28680              	.LASF270:
 28681 1092 4C435243 		.ascii	"LCRChecksum\000"
 28681      6865636B 
 28681      73756D00 
 28682              	.LASF298:
 28683 109e 6B5F696D 		.ascii	"k_imu\000"
 28683      7500
 28684              	.LASF3:
 28685 10a4 73686F72 		.ascii	"short unsigned int\000"
 28685      7420756E 
 28685      7369676E 
 28685      65642069 
 28685      6E7400
 28686              	.LASF142:
 28687 10b7 73745F65 		.ascii	"st_encoder\000"
 28687      6E636F64 
 28687      657200
 28688              	.LASF254:
 28689 10c2 454E435F 		.ascii	"ENC_L\000"
 28689      4C00
 28690              	.LASF173:
 28691 10c8 73745F65 		.ascii	"st_eeprom\000"
 28691      6570726F 
 28691      6D00
 28692              	.LASF199:
 28693 10d2 54595045 		.ascii	"TYPES\000"
 28693      5300
 28694              	.LASF306:
 28695 10d8 675F7265 		.ascii	"g_ref\000"
 28695      6600
 28696              	.LASF18:
 28697 10de 696E7433 		.ascii	"int32\000"
 28697      3200
 28698              	.LASF326:
 28699 10e4 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 28699      4F465F41 
 28699      4E414C4F 
 28699      475F494E 
 28699      50555453 
 28700              	.LASF194:
 28701 10f9 696E666F 		.ascii	"infoGet\000"
 28701      47657400 
 28702              	.LASF86:
 28703 1101 46535F46 		.ascii	"FS_FILE\000"
 28703      494C4500 
 28704              	.LASF130:
 28705 1109 706F735F 		.ascii	"pos_lim_flag\000"
 28705      6C696D5F 
 28705      666C6167 
 28705      00
 28706              	.LASF310:
 28707 1116 675F6D65 		.ascii	"g_measOld\000"
 28707      61734F6C 
 28707      6400
 28708              	.LASF65:
 28709 1120 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 28709      524F4C5F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 623


 28709      414E474C 
 28709      4500
 28710              	.LASF286:
 28711 112e 636D645F 		.ascii	"cmd_activate\000"
 28711      61637469 
 28711      76617465 
 28711      00
 28712              	.LASF5:
 28713 113b 5F5F696E 		.ascii	"__int32_t\000"
 28713      7433325F 
 28713      7400
 28714              	.LASF224:
 28715 1145 7370695F 		.ascii	"spi_delay_menu\000"
 28715      64656C61 
 28715      795F6D65 
 28715      6E7500
 28716              	.LASF104:
 28717 1154 77697265 		.ascii	"wire_disp\000"
 28717      5F646973 
 28717      7000
 28718              	.LASF152:
 28719 115e 656D675F 		.ascii	"emg_max_value\000"
 28719      6D61785F 
 28719      76616C75 
 28719      6500
 28720              	.LASF228:
 28721 116c 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 28721      4F4D5F50 
 28721      4152414D 
 28721      5F534554 
 28721      00
 28722              	.LASF339:
 28723 117d 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 28723      72635C63 
 28723      6F6D6D61 
 28723      6E645F70 
 28723      726F6365 
 28724              	.LASF136:
 28725 1199 63757272 		.ascii	"current_limit\000"
 28725      656E745F 
 28725      6C696D69 
 28725      7400
 28726              	.LASF56:
 28727 11a7 53485F69 		.ascii	"SH_input_mode\000"
 28727      6E707574 
 28727      5F6D6F64 
 28727      6500
 28728              	.LASF77:
 28729 11b5 54595045 		.ascii	"TYPE_INT8\000"
 28729      5F494E54 
 28729      3800
 28730              	.LASF260:
 28731 11bf 494D555F 		.ascii	"IMU_reading_info\000"
 28731      72656164 
 28731      696E675F 
 28731      696E666F 
 28731      00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\cceEHgdd.s 			page 624


 28732              	.LASF14:
 28733 11d0 75696E74 		.ascii	"uint16\000"
 28733      313600
 28734              	.LASF312:
 28735 11d7 675F656D 		.ascii	"g_emg_measOld\000"
 28735      675F6D65 
 28735      61734F6C 
 28735      6400
 28736              	.LASF170:
 28737 11e5 72657374 		.ascii	"rest_delay\000"
 28737      5F64656C 
 28737      617900
 28738              	.LASF210:
 28739 11f0 6175785F 		.ascii	"aux_str\000"
 28739      73747200 
 28740              	.LASF26:
 28741 11f8 434D445F 		.ascii	"CMD_PING\000"
 28741      50494E47 
 28741      00
 28742              	.LASF126:
 28743 1201 6B5F645F 		.ascii	"k_d_c_dl\000"
 28743      635F646C 
 28743      00
 28744              	.LASF187:
 28745 120a 64697265 		.ascii	"direction\000"
 28745      6374696F 
 28745      6E00
 28746              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
