ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2020, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         March 20th, 2020
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2020 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E34B     		ldr	r3, .L49
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E14B     		ldr	r3, .L49
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DE48     		ldr	r0, .L49
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DB4B     		ldr	r3, .L49
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D94A     		ldr	r2, .L49
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D74B     		ldr	r3, .L49
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 44E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F24082 		bhi	.L48
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 6D030000 		.word	.L5+1
  85 0050 4F030000 		.word	.L7+1
  86 0054 C7040000 		.word	.L48+1
  87 0058 73030000 		.word	.L8+1
  88 005c 79030000 		.word	.L9+1
  89 0060 9D030000 		.word	.L10+1
  90 0064 37030000 		.word	.L11+1
  91 0068 C7040000 		.word	.L48+1
  92 006c C7040000 		.word	.L48+1
  93 0070 D1030000 		.word	.L12+1
  94 0074 B7030000 		.word	.L13+1
  95 0078 C7040000 		.word	.L48+1
  96 007c 55030000 		.word	.L14+1
  97 0080 F3030000 		.word	.L15+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 4


  98 0084 C7040000 		.word	.L48+1
  99 0088 C7040000 		.word	.L48+1
 100 008c C7040000 		.word	.L48+1
 101 0090 C7040000 		.word	.L48+1
 102 0094 C7040000 		.word	.L48+1
 103 0098 C7040000 		.word	.L48+1
 104 009c C7040000 		.word	.L48+1
 105 00a0 C7040000 		.word	.L48+1
 106 00a4 C7040000 		.word	.L48+1
 107 00a8 C7040000 		.word	.L48+1
 108 00ac C7040000 		.word	.L48+1
 109 00b0 C7040000 		.word	.L48+1
 110 00b4 C7040000 		.word	.L48+1
 111 00b8 C7040000 		.word	.L48+1
 112 00bc C7040000 		.word	.L48+1
 113 00c0 C7040000 		.word	.L48+1
 114 00c4 C7040000 		.word	.L48+1
 115 00c8 C7040000 		.word	.L48+1
 116 00cc C7040000 		.word	.L48+1
 117 00d0 C7040000 		.word	.L48+1
 118 00d4 C7040000 		.word	.L48+1
 119 00d8 C7040000 		.word	.L48+1
 120 00dc C7040000 		.word	.L48+1
 121 00e0 C7040000 		.word	.L48+1
 122 00e4 C7040000 		.word	.L48+1
 123 00e8 C7040000 		.word	.L48+1
 124 00ec C7040000 		.word	.L48+1
 125 00f0 C7040000 		.word	.L48+1
 126 00f4 C7040000 		.word	.L48+1
 127 00f8 C7040000 		.word	.L48+1
 128 00fc C7040000 		.word	.L48+1
 129 0100 C7040000 		.word	.L48+1
 130 0104 C7040000 		.word	.L48+1
 131 0108 C7040000 		.word	.L48+1
 132 010c C7040000 		.word	.L48+1
 133 0110 C7040000 		.word	.L48+1
 134 0114 C7040000 		.word	.L48+1
 135 0118 C7040000 		.word	.L48+1
 136 011c C7040000 		.word	.L48+1
 137 0120 C7040000 		.word	.L48+1
 138 0124 C7040000 		.word	.L48+1
 139 0128 C7040000 		.word	.L48+1
 140 012c C7040000 		.word	.L48+1
 141 0130 C7040000 		.word	.L48+1
 142 0134 C7040000 		.word	.L48+1
 143 0138 C7040000 		.word	.L48+1
 144 013c C7040000 		.word	.L48+1
 145 0140 C7040000 		.word	.L48+1
 146 0144 C7040000 		.word	.L48+1
 147 0148 C7040000 		.word	.L48+1
 148 014c C7040000 		.word	.L48+1
 149 0150 C7040000 		.word	.L48+1
 150 0154 C7040000 		.word	.L48+1
 151 0158 C7040000 		.word	.L48+1
 152 015c C7040000 		.word	.L48+1
 153 0160 C7040000 		.word	.L48+1
 154 0164 C7040000 		.word	.L48+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 5


 155 0168 C7040000 		.word	.L48+1
 156 016c C7040000 		.word	.L48+1
 157 0170 C7040000 		.word	.L48+1
 158 0174 C7040000 		.word	.L48+1
 159 0178 C7040000 		.word	.L48+1
 160 017c C7040000 		.word	.L48+1
 161 0180 C7040000 		.word	.L48+1
 162 0184 C7040000 		.word	.L48+1
 163 0188 C7040000 		.word	.L48+1
 164 018c C7040000 		.word	.L48+1
 165 0190 C7040000 		.word	.L48+1
 166 0194 C7040000 		.word	.L48+1
 167 0198 C7040000 		.word	.L48+1
 168 019c C7040000 		.word	.L48+1
 169 01a0 C7040000 		.word	.L48+1
 170 01a4 C7040000 		.word	.L48+1
 171 01a8 C7040000 		.word	.L48+1
 172 01ac C7040000 		.word	.L48+1
 173 01b0 C7040000 		.word	.L48+1
 174 01b4 C7040000 		.word	.L48+1
 175 01b8 C7040000 		.word	.L48+1
 176 01bc C7040000 		.word	.L48+1
 177 01c0 C7040000 		.word	.L48+1
 178 01c4 C7040000 		.word	.L48+1
 179 01c8 C7040000 		.word	.L48+1
 180 01cc C7040000 		.word	.L48+1
 181 01d0 C7040000 		.word	.L48+1
 182 01d4 C7040000 		.word	.L48+1
 183 01d8 C7040000 		.word	.L48+1
 184 01dc C7040000 		.word	.L48+1
 185 01e0 C7040000 		.word	.L48+1
 186 01e4 C7040000 		.word	.L48+1
 187 01e8 C7040000 		.word	.L48+1
 188 01ec C7040000 		.word	.L48+1
 189 01f0 C7040000 		.word	.L48+1
 190 01f4 C7040000 		.word	.L48+1
 191 01f8 C7040000 		.word	.L48+1
 192 01fc C7040000 		.word	.L48+1
 193 0200 C7040000 		.word	.L48+1
 194 0204 C7040000 		.word	.L48+1
 195 0208 C7040000 		.word	.L48+1
 196 020c C7040000 		.word	.L48+1
 197 0210 C7040000 		.word	.L48+1
 198 0214 C7040000 		.word	.L48+1
 199 0218 C7040000 		.word	.L48+1
 200 021c C7040000 		.word	.L48+1
 201 0220 C7040000 		.word	.L48+1
 202 0224 C7040000 		.word	.L48+1
 203 0228 C7040000 		.word	.L48+1
 204 022c C7040000 		.word	.L48+1
 205 0230 C7040000 		.word	.L48+1
 206 0234 C7040000 		.word	.L48+1
 207 0238 C7040000 		.word	.L48+1
 208 023c C7040000 		.word	.L48+1
 209 0240 C7040000 		.word	.L48+1
 210 0244 C7040000 		.word	.L48+1
 211 0248 C7040000 		.word	.L48+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 25030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 31030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C7040000 		.word	.L48+1
 220 026c 1F030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C7040000 		.word	.L48+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C7040000 		.word	.L48+1
 226 0284 C7040000 		.word	.L48+1
 227 0288 C7040000 		.word	.L48+1
 228 028c 2B030000 		.word	.L27+1
 229 0290 C7040000 		.word	.L48+1
 230 0294 19030000 		.word	.L28+1
 231 0298 C7040000 		.word	.L48+1
 232 029c C7040000 		.word	.L48+1
 233 02a0 C7040000 		.word	.L48+1
 234 02a4 C7040000 		.word	.L48+1
 235 02a8 C7040000 		.word	.L48+1
 236 02ac C7040000 		.word	.L48+1
 237 02b0 C7040000 		.word	.L48+1
 238 02b4 C7040000 		.word	.L48+1
 239 02b8 C7040000 		.word	.L48+1
 240 02bc C7040000 		.word	.L48+1
 241 02c0 C7040000 		.word	.L48+1
 242 02c4 C7040000 		.word	.L48+1
 243 02c8 C7040000 		.word	.L48+1
 244 02cc C7040000 		.word	.L48+1
 245 02d0 91040000 		.word	.L29+1
 246 02d4 97040000 		.word	.L30+1
 247 02d8 AF040000 		.word	.L31+1
 248 02dc B5040000 		.word	.L32+1
 249 02e0 BB040000 		.word	.L33+1
 250 02e4 C1040000 		.word	.L34+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec ECE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E9E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E6E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E3E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 E0E0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DDE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 8


 285              		.loc 1 115 0
 286 0310 DAE0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D7E0     		b	.L1
 292              	.L28:
 122:..\src/command_processing.c **** 
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_JOYSTICK
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_JOYSTICK:
 126:..\src/command_processing.c ****             cmd_get_joystick();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_joystick
 127:..\src/command_processing.c ****         break;
 295              		.loc 1 127 0
 296 031c D4E0     		b	.L1
 297              	.L23:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 130:..\src/command_processing.c **** 
 131:..\src/command_processing.c ****         case CMD_GET_EMG:
 132:..\src/command_processing.c ****             cmd_get_emg();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_emg
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 D1E0     		b	.L1
 302              	.L17:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 138:..\src/command_processing.c ****             cmd_get_activate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_get_activate
 139:..\src/command_processing.c ****             break;
 305              		.loc 1 139 0
 306 0328 CEE0     		b	.L1
 307              	.L27:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 142:..\src/command_processing.c ****             
 143:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 144:..\src/command_processing.c ****             cmd_set_baudrate();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_set_baudrate
 145:..\src/command_processing.c ****             break;  
 310              		.loc 1 145 0
 311 032e CBE0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 9


 312              	.L19:
 146:..\src/command_processing.c ****             
 147:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 150:..\src/command_processing.c ****             cmd_get_inputs();
 313              		.loc 1 150 0
 314 0330 FFF7FEFF 		bl	cmd_get_inputs
 151:..\src/command_processing.c ****             break;
 315              		.loc 1 151 0
 316 0334 C8E0     		b	.L1
 317              	.L11:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_GET_INFO:
 156:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 318              		.loc 1 156 0
 319 0336 184B     		ldr	r3, .L49+4
 320 0338 1B88     		ldrh	r3, [r3]
 321 033a 3B61     		str	r3, [r7, #16]
 322              	.LBB8:
 323              	.LBB9:
 324              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 10


  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 11


  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 12


 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 13


 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 14


 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 15


 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 16


 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 17


 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 18


 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 19


 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 20


 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 21


 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 22


 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 23


 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 325              		.loc 2 792 0
 326 033c 3B69     		ldr	r3, [r7, #16]
 327              		.syntax unified
 328              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 329 033e 5BBA     		rev16 r3, r3
 330              	@ 0 "" 2
 331              		.thumb
 332              		.syntax unified
 333 0340 FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 334              		.loc 2 793 0
 335 0342 FB68     		ldr	r3, [r7, #12]
 336              	.LBE9:
 337              	.LBE8:
 338              		.loc 1 156 0
 339 0344 9BB2     		uxth	r3, r3
 340 0346 1846     		mov	r0, r3
 341 0348 FFF7FEFF 		bl	infoGet
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BCE0     		b	.L1
 344              	.L7:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 162:..\src/command_processing.c ****             setZeros();
 345              		.loc 1 162 0
 346 034e FFF7FEFF 		bl	setZeros
 163:..\src/command_processing.c ****             break;
 347              		.loc 1 163 0
 348 0352 B9E0     		b	.L1
 349              	.L14:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 166:..\src/command_processing.c **** 
 167:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 168:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 350              		.loc 1 168 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 24


 351 0354 104B     		ldr	r3, .L49+4
 352 0356 1B88     		ldrh	r3, [r3]
 353 0358 BB61     		str	r3, [r7, #24]
 354              	.LBB10:
 355              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 356              		.loc 2 792 0
 357 035a BB69     		ldr	r3, [r7, #24]
 358              		.syntax unified
 359              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 360 035c 5BBA     		rev16 r3, r3
 361              	@ 0 "" 2
 362              		.thumb
 363              		.syntax unified
 364 035e BB60     		str	r3, [r7, #8]
 365              		.loc 2 793 0
 366 0360 BB68     		ldr	r3, [r7, #8]
 367              	.LBE11:
 368              	.LBE10:
 369              		.loc 1 168 0
 370 0362 9BB2     		uxth	r3, r3
 371 0364 1846     		mov	r0, r3
 372 0366 FFF7FEFF 		bl	manage_param_list
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ADE0     		b	.L1
 375              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 AAE0     		b	.L1
 380              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 381              		.loc 1 180 0
 382 0372 FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 383              		.loc 1 181 0
 384 0376 A7E0     		b	.L1
 385              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 386              		.loc 1 186 0
 387 0378 3220     		movs	r0, #50
 388 037a FFF7FEFF 		bl	memStore
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 25


 389 037e 0346     		mov	r3, r0
 390 0380 002B     		cmp	r3, #0
 391 0382 03D0     		beq	.L37
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 392              		.loc 1 187 0
 393 0384 0120     		movs	r0, #1
 394 0386 FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
 395              		.loc 1 190 0
 396 038a 9DE0     		b	.L1
 397              	.L37:
 189:..\src/command_processing.c ****             break;
 398              		.loc 1 189 0
 399 038c 0020     		movs	r0, #0
 400 038e FFF7FEFF 		bl	sendAcknowledgment
 401              		.loc 1 190 0
 402 0392 99E0     		b	.L1
 403              	.L50:
 404              		.align	2
 405              	.L49:
 406 0394 00000000 		.word	g_rx
 407 0398 01000000 		.word	g_rx+1
 408              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 409              		.loc 1 195 0
 410 039c FFF7FEFF 		bl	memRestore
 411 03a0 0346     		mov	r3, r0
 412 03a2 002B     		cmp	r3, #0
 413 03a4 03D0     		beq	.L39
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 414              		.loc 1 196 0
 415 03a6 0120     		movs	r0, #1
 416 03a8 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 417              		.loc 1 199 0
 418 03ac 8CE0     		b	.L1
 419              	.L39:
 198:..\src/command_processing.c ****             break;
 420              		.loc 1 198 0
 421 03ae 0020     		movs	r0, #0
 422 03b0 FFF7FEFF 		bl	sendAcknowledgment
 423              		.loc 1 199 0
 424 03b4 88E0     		b	.L1
 425              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 204:..\src/command_processing.c ****             if(memInit())
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 26


 426              		.loc 1 204 0
 427 03b6 FFF7FEFF 		bl	memInit
 428 03ba 0346     		mov	r3, r0
 429 03bc 002B     		cmp	r3, #0
 430 03be 03D0     		beq	.L41
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 431              		.loc 1 205 0
 432 03c0 0120     		movs	r0, #1
 433 03c2 FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 434              		.loc 1 208 0
 435 03c6 7FE0     		b	.L1
 436              	.L41:
 207:..\src/command_processing.c ****             break;
 437              		.loc 1 207 0
 438 03c8 0020     		movs	r0, #0
 439 03ca FFF7FEFF 		bl	sendAcknowledgment
 440              		.loc 1 208 0
 441 03ce 7BE0     		b	.L1
 442              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 443              		.loc 1 214 0
 444 03d0 0120     		movs	r0, #1
 445 03d2 FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 446              		.loc 1 215 0
 447 03d6 4FF47A70 		mov	r0, #1000
 448 03da FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 449              		.loc 1 216 0
 450 03de 0020     		movs	r0, #0
 451 03e0 FFF7FEFF 		bl	FTDI_ENABLE_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 452              		.loc 1 217 0
 453 03e4 4FF47A70 		mov	r0, #1000
 454 03e8 FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 455              		.loc 1 218 0
 456 03ec FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 457              		.loc 1 219 0
 458 03f0 6AE0     		b	.L1
 459              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 460              		.loc 1 224 0
 461 03f2 374B     		ldr	r3, .L51
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 27


 462 03f4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 463 03f6 1B02     		lsls	r3, r3, #8
 464 03f8 1AB2     		sxth	r2, r3
 465 03fa 354B     		ldr	r3, .L51
 466 03fc 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 467 03fe 1BB2     		sxth	r3, r3
 468 0400 1343     		orrs	r3, r3, r2
 469 0402 1AB2     		sxth	r2, r3
 470 0404 334B     		ldr	r3, .L51+4
 471 0406 5A80     		strh	r2, [r3, #2]	@ movhi
 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 472              		.loc 1 225 0
 473 0408 314B     		ldr	r3, .L51
 474 040a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 475 040c 1B02     		lsls	r3, r3, #8
 476 040e 1AB2     		sxth	r2, r3
 477 0410 2F4B     		ldr	r3, .L51
 478 0412 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 479 0414 1BB2     		sxth	r3, r3
 480 0416 1343     		orrs	r3, r3, r2
 481 0418 1AB2     		sxth	r2, r3
 482 041a 2E4B     		ldr	r3, .L51+4
 483 041c 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             
 227:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 484              		.loc 1 227 0
 485 041e 2D4B     		ldr	r3, .L51+4
 486 0420 B3F90230 		ldrsh	r3, [r3, #2]
 487 0424 B3F1FF3F 		cmp	r3, #-1
 488 0428 0FD1     		bne	.L43
 489              		.loc 1 227 0 is_stmt 0 discriminator 1
 490 042a 2A4B     		ldr	r3, .L51+4
 491 042c B3F90430 		ldrsh	r3, [r3, #4]
 492 0430 B3F1FF3F 		cmp	r3, #-1
 493 0434 09D1     		bne	.L43
 228:..\src/command_processing.c ****                 calib.enabled = FALSE;
 494              		.loc 1 228 0 is_stmt 1
 495 0436 274B     		ldr	r3, .L51+4
 496 0438 0022     		movs	r2, #0
 497 043a 1A70     		strb	r2, [r3]
 229:..\src/command_processing.c ****                 calib.speed = 0;
 498              		.loc 1 229 0
 499 043c 254B     		ldr	r3, .L51+4
 500 043e 0022     		movs	r2, #0
 501 0440 5A80     		strh	r2, [r3, #2]	@ movhi
 230:..\src/command_processing.c ****                 calib.repetitions = 0;
 502              		.loc 1 230 0
 503 0442 244B     		ldr	r3, .L51+4
 504 0444 0022     		movs	r2, #0
 505 0446 9A80     		strh	r2, [r3, #4]	@ movhi
 231:..\src/command_processing.c ****                 break;
 506              		.loc 1 231 0
 507 0448 3EE0     		b	.L1
 508              	.L43:
 232:..\src/command_processing.c ****             }
 233:..\src/command_processing.c ****             // Speed & repetitions saturations
 234:..\src/command_processing.c ****             if (calib.speed < 0) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 28


 509              		.loc 1 234 0
 510 044a 224B     		ldr	r3, .L51+4
 511 044c B3F90230 		ldrsh	r3, [r3, #2]
 512 0450 002B     		cmp	r3, #0
 513 0452 03DA     		bge	.L44
 235:..\src/command_processing.c ****                 calib.speed = 0;
 514              		.loc 1 235 0
 515 0454 1F4B     		ldr	r3, .L51+4
 516 0456 0022     		movs	r2, #0
 517 0458 5A80     		strh	r2, [r3, #2]	@ movhi
 518 045a 07E0     		b	.L45
 519              	.L44:
 236:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 520              		.loc 1 236 0
 521 045c 1D4B     		ldr	r3, .L51+4
 522 045e B3F90230 		ldrsh	r3, [r3, #2]
 523 0462 C82B     		cmp	r3, #200
 524 0464 02DD     		ble	.L45
 237:..\src/command_processing.c ****                 calib.speed = 200;
 525              		.loc 1 237 0
 526 0466 1B4B     		ldr	r3, .L51+4
 527 0468 C822     		movs	r2, #200
 528 046a 5A80     		strh	r2, [r3, #2]	@ movhi
 529              	.L45:
 238:..\src/command_processing.c ****             }
 239:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 530              		.loc 1 239 0
 531 046c 194B     		ldr	r3, .L51+4
 532 046e B3F90430 		ldrsh	r3, [r3, #4]
 533 0472 002B     		cmp	r3, #0
 534 0474 02DA     		bge	.L46
 240:..\src/command_processing.c ****                 calib.repetitions = 0;
 535              		.loc 1 240 0
 536 0476 174B     		ldr	r3, .L51+4
 537 0478 0022     		movs	r2, #0
 538 047a 9A80     		strh	r2, [r3, #4]	@ movhi
 539              	.L46:
 241:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 242:..\src/command_processing.c ****                 calib.repetitions = 32767;
 243:..\src/command_processing.c ****             }
 244:..\src/command_processing.c ****             
 245:..\src/command_processing.c ****             g_refNew[0].pos = 0;                    // SoftHand is on motor 1
 540              		.loc 1 245 0
 541 047c 164B     		ldr	r3, .L51+8
 542 047e 0022     		movs	r2, #0
 543 0480 1A60     		str	r2, [r3]
 246:..\src/command_processing.c ****             calib.enabled = TRUE;
 544              		.loc 1 246 0
 545 0482 144B     		ldr	r3, .L51+4
 546 0484 0122     		movs	r2, #1
 547 0486 1A70     		strb	r2, [r3]
 247:..\src/command_processing.c ****          
 248:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 548              		.loc 1 248 0
 549 0488 0120     		movs	r0, #1
 550 048a FFF7FEFF 		bl	sendAcknowledgment
 249:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 29


 551              		.loc 1 249 0
 552 048e 1BE0     		b	.L1
 553              	.L29:
 250:..\src/command_processing.c ****             
 251:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 252:..\src/command_processing.c **** 
 253:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 254:..\src/command_processing.c ****             cmd_get_imu_readings();
 554              		.loc 1 254 0
 555 0490 FFF7FEFF 		bl	cmd_get_imu_readings
 255:..\src/command_processing.c ****             break; 
 556              		.loc 1 255 0
 557 0494 18E0     		b	.L1
 558              	.L30:
 256:..\src/command_processing.c ****             
 257:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 258:..\src/command_processing.c **** 
 259:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 260:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 559              		.loc 1 260 0
 560 0496 114B     		ldr	r3, .L51+12
 561 0498 1B88     		ldrh	r3, [r3]
 562 049a 7B61     		str	r3, [r7, #20]
 563              	.LBB12:
 564              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 565              		.loc 2 792 0
 566 049c 7B69     		ldr	r3, [r7, #20]
 567              		.syntax unified
 568              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 569 049e 5BBA     		rev16 r3, r3
 570              	@ 0 "" 2
 571              		.thumb
 572              		.syntax unified
 573 04a0 7B60     		str	r3, [r7, #4]
 574              		.loc 2 793 0
 575 04a2 7B68     		ldr	r3, [r7, #4]
 576              	.LBE13:
 577              	.LBE12:
 578              		.loc 1 260 0
 579 04a4 9BB2     		uxth	r3, r3
 580 04a6 1846     		mov	r0, r3
 581 04a8 FFF7FEFF 		bl	get_IMU_param_list
 261:..\src/command_processing.c ****             break;             
 582              		.loc 1 261 0
 583 04ac 0CE0     		b	.L1
 584              	.L31:
 262:..\src/command_processing.c ****             
 263:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 266:..\src/command_processing.c ****             cmd_get_encoder_map();
 585              		.loc 1 266 0
 586 04ae FFF7FEFF 		bl	cmd_get_encoder_map
 267:..\src/command_processing.c ****             break; 
 587              		.loc 1 267 0
 588 04b2 09E0     		b	.L1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 30


 589              	.L32:
 268:..\src/command_processing.c **** 
 269:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 272:..\src/command_processing.c ****             cmd_get_encoder_raw();
 590              		.loc 1 272 0
 591 04b4 FFF7FEFF 		bl	cmd_get_encoder_raw
 273:..\src/command_processing.c ****             break; 
 592              		.loc 1 273 0
 593 04b8 06E0     		b	.L1
 594              	.L33:
 274:..\src/command_processing.c **** 
 275:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 276:..\src/command_processing.c **** 
 277:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 278:..\src/command_processing.c ****             cmd_get_ADC_map();
 595              		.loc 1 278 0
 596 04ba FFF7FEFF 		bl	cmd_get_ADC_map
 279:..\src/command_processing.c ****             break; 
 597              		.loc 1 279 0
 598 04be 03E0     		b	.L1
 599              	.L34:
 280:..\src/command_processing.c ****             
 281:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 284:..\src/command_processing.c ****             cmd_get_ADC_raw();
 600              		.loc 1 284 0
 601 04c0 FFF7FEFF 		bl	cmd_get_ADC_raw
 285:..\src/command_processing.c ****             break; 
 602              		.loc 1 285 0
 603 04c4 00E0     		b	.L1
 604              	.L48:
 286:..\src/command_processing.c ****             
 287:..\src/command_processing.c ****             
 288:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 289:..\src/command_processing.c ****         default:
 290:..\src/command_processing.c ****             break;
 605              		.loc 1 290 0
 606 04c6 00BF     		nop
 607              	.L1:
 291:..\src/command_processing.c **** 
 292:..\src/command_processing.c ****     }
 293:..\src/command_processing.c **** }  
 608              		.loc 1 293 0
 609 04c8 2037     		adds	r7, r7, #32
 610              		.cfi_def_cfa_offset 8
 611 04ca BD46     		mov	sp, r7
 612              		.cfi_def_cfa_register 13
 613              		@ sp needed
 614 04cc 80BD     		pop	{r7, pc}
 615              	.L52:
 616 04ce 00BF     		.align	2
 617              	.L51:
 618 04d0 00000000 		.word	g_rx
 619 04d4 00000000 		.word	calib
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 31


 620 04d8 00000000 		.word	g_refNew
 621 04dc 01000000 		.word	g_rx+1
 622              		.cfi_endproc
 623              	.LFE64:
 624              		.size	commProcess, .-commProcess
 625              		.section	.text.infoSend,"ax",%progbits
 626              		.align	2
 627              		.global	infoSend
 628              		.thumb
 629              		.thumb_func
 630              		.type	infoSend, %function
 631              	infoSend:
 632              	.LFB65:
 294:..\src/command_processing.c **** 
 295:..\src/command_processing.c **** //==============================================================================
 296:..\src/command_processing.c **** //                                                                     INFO SEND
 297:..\src/command_processing.c **** //==============================================================================
 298:..\src/command_processing.c **** 
 299:..\src/command_processing.c **** void infoSend(void){
 633              		.loc 1 299 0
 634              		.cfi_startproc
 635              		@ args = 0, pretend = 0, frame = 1504
 636              		@ frame_needed = 1, uses_anonymous_args = 0
 637 0000 80B5     		push	{r7, lr}
 638              		.cfi_def_cfa_offset 8
 639              		.cfi_offset 7, -8
 640              		.cfi_offset 14, -4
 641 0002 ADF5BC6D 		sub	sp, sp, #1504
 642              		.cfi_def_cfa_offset 1512
 643 0006 00AF     		add	r7, sp, #0
 644              		.cfi_def_cfa_register 7
 300:..\src/command_processing.c ****     char packet_string[1500];
 301:..\src/command_processing.c ****     
 302:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 645              		.loc 1 302 0
 646 0008 3B1D     		adds	r3, r7, #4
 647 000a 1846     		mov	r0, r3
 648 000c FFF7FEFF 		bl	prepare_generic_info
 303:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 649              		.loc 1 303 0
 650 0010 3B1D     		adds	r3, r7, #4
 651 0012 1846     		mov	r0, r3
 652 0014 FFF7FEFF 		bl	UART_RS485_PutString
 304:..\src/command_processing.c **** }
 653              		.loc 1 304 0
 654 0018 00BF     		nop
 655 001a 07F5BC67 		add	r7, r7, #1504
 656              		.cfi_def_cfa_offset 8
 657 001e BD46     		mov	sp, r7
 658              		.cfi_def_cfa_register 13
 659              		@ sp needed
 660 0020 80BD     		pop	{r7, pc}
 661              		.cfi_endproc
 662              	.LFE65:
 663              		.size	infoSend, .-infoSend
 664 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 665              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 32


 666              		.global	infoGet
 667              		.thumb
 668              		.thumb_func
 669              		.type	infoGet, %function
 670              	infoGet:
 671              	.LFB66:
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** 
 307:..\src/command_processing.c **** //==============================================================================
 308:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 309:..\src/command_processing.c **** //==============================================================================
 310:..\src/command_processing.c **** 
 311:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 672              		.loc 1 311 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 24008
 675              		@ frame_needed = 1, uses_anonymous_args = 0
 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 ADF5BB4D 		sub	sp, sp, #23936
 681              		.cfi_def_cfa_offset 23944
 682 0006 92B0     		sub	sp, sp, #72
 683              		.cfi_def_cfa_offset 24016
 684 0008 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 000a 0246     		mov	r2, r0
 687 000c 07F14803 		add	r3, r7, #72
 688 0010 423B     		subs	r3, r3, #66
 689 0012 1A80     		strh	r2, [r3]	@ movhi
 312:..\src/command_processing.c ****     char packet_string[4000] = "";
 690              		.loc 1 312 0
 691 0014 07F59C43 		add	r3, r7, #19968
 692 0018 03F12803 		add	r3, r3, #40
 693 001c 0022     		movs	r2, #0
 694 001e 1A60     		str	r2, [r3]
 695 0020 0433     		adds	r3, r3, #4
 696 0022 40F69C72 		movw	r2, #3996
 697 0026 0021     		movs	r1, #0
 698 0028 1846     		mov	r0, r3
 699 002a FFF7FEFF 		bl	memset
 313:..\src/command_processing.c ****     char str_sd_data[20000] = "";
 700              		.loc 1 313 0
 701 002e 07F14803 		add	r3, r7, #72
 702 0032 403B     		subs	r3, r3, #64
 703 0034 0022     		movs	r2, #0
 704 0036 1A60     		str	r2, [r3]
 705 0038 0433     		adds	r3, r3, #4
 706 003a 44F61C62 		movw	r2, #19996
 707 003e 0021     		movs	r1, #0
 708 0040 1846     		mov	r0, r3
 709 0042 FFF7FEFF 		bl	memset
 314:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 315:..\src/command_processing.c **** 
 316:..\src/command_processing.c ****     switch (info_type) {
 710              		.loc 1 316 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 33


 711 0046 07F14803 		add	r3, r7, #72
 712 004a 423B     		subs	r3, r3, #66
 713 004c 1B88     		ldrh	r3, [r3]
 714 004e 032B     		cmp	r3, #3
 715 0050 50D8     		bhi	.L62
 716 0052 01A2     		adr	r2, .L57
 717 0054 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 718              		.p2align 2
 719              	.L57:
 720 0058 69000000 		.word	.L56+1
 721 005c 8B000000 		.word	.L58+1
 722 0060 AD000000 		.word	.L59+1
 723 0064 D3000000 		.word	.L60+1
 724              		.p2align 1
 725              	.L56:
 317:..\src/command_processing.c ****         case INFO_ALL:
 318:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 726              		.loc 1 318 0
 727 0068 07F59C43 		add	r3, r7, #19968
 728 006c 03F12803 		add	r3, r3, #40
 729 0070 1846     		mov	r0, r3
 730 0072 FFF7FEFF 		bl	prepare_generic_info
 319:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 731              		.loc 1 319 0
 732 0076 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 320:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 733              		.loc 1 320 0
 734 007a 07F59C43 		add	r3, r7, #19968
 735 007e 03F12803 		add	r3, r3, #40
 736 0082 1846     		mov	r0, r3
 737 0084 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c ****             break;
 738              		.loc 1 321 0
 739 0088 35E0     		b	.L61
 740              	.L58:
 322:..\src/command_processing.c ****         case CYCLES_INFO:
 323:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 741              		.loc 1 323 0
 742 008a 07F59C43 		add	r3, r7, #19968
 743 008e 03F12803 		add	r3, r3, #40
 744 0092 1846     		mov	r0, r3
 745 0094 FFF7FEFF 		bl	prepare_counter_info
 324:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 746              		.loc 1 324 0
 747 0098 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 325:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 748              		.loc 1 325 0
 749 009c 07F59C43 		add	r3, r7, #19968
 750 00a0 03F12803 		add	r3, r3, #40
 751 00a4 1846     		mov	r0, r3
 752 00a6 FFF7FEFF 		bl	UART_RS485_PutString
 326:..\src/command_processing.c ****             break;
 753              		.loc 1 326 0
 754 00aa 24E0     		b	.L61
 755              	.L59:
 327:..\src/command_processing.c ****         case GET_SD_PARAM:
 328:..\src/command_processing.c ****             Read_SD_Param(packet_string, sizeof(packet_string));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 34


 756              		.loc 1 328 0
 757 00ac 07F59C43 		add	r3, r7, #19968
 758 00b0 03F12803 		add	r3, r3, #40
 759 00b4 4FF47A61 		mov	r1, #4000
 760 00b8 1846     		mov	r0, r3
 761 00ba FFF7FEFF 		bl	Read_SD_Param
 329:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 762              		.loc 1 329 0
 763 00be FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 330:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 764              		.loc 1 330 0
 765 00c2 07F59C43 		add	r3, r7, #19968
 766 00c6 03F12803 		add	r3, r3, #40
 767 00ca 1846     		mov	r0, r3
 768 00cc FFF7FEFF 		bl	UART_RS485_PutString
 331:..\src/command_processing.c ****             break;
 769              		.loc 1 331 0
 770 00d0 11E0     		b	.L61
 771              	.L60:
 332:..\src/command_processing.c ****         case GET_SD_DATA:
 333:..\src/command_processing.c ****             Read_SD_Data(str_sd_data, sizeof(str_sd_data));
 772              		.loc 1 333 0
 773 00d2 07F14803 		add	r3, r7, #72
 774 00d6 403B     		subs	r3, r3, #64
 775 00d8 44F62061 		movw	r1, #20000
 776 00dc 1846     		mov	r0, r3
 777 00de FFF7FEFF 		bl	Read_SD_Data
 334:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 778              		.loc 1 334 0
 779 00e2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 335:..\src/command_processing.c ****             UART_RS485_PutString(str_sd_data);
 780              		.loc 1 335 0
 781 00e6 07F14803 		add	r3, r7, #72
 782 00ea 403B     		subs	r3, r3, #64
 783 00ec 1846     		mov	r0, r3
 784 00ee FFF7FEFF 		bl	UART_RS485_PutString
 336:..\src/command_processing.c **** 
 337:..\src/command_processing.c ****             break;
 785              		.loc 1 337 0
 786 00f2 00E0     		b	.L61
 787              	.L62:
 338:..\src/command_processing.c ****         default:
 339:..\src/command_processing.c ****             break;
 788              		.loc 1 339 0
 789 00f4 00BF     		nop
 790              	.L61:
 340:..\src/command_processing.c ****     }
 341:..\src/command_processing.c **** }
 791              		.loc 1 341 0 discriminator 1
 792 00f6 00BF     		nop
 793 00f8 07F5BB47 		add	r7, r7, #23936
 794 00fc 4837     		adds	r7, r7, #72
 795              		.cfi_def_cfa_offset 8
 796 00fe BD46     		mov	sp, r7
 797              		.cfi_def_cfa_register 13
 798              		@ sp needed
 799 0100 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 35


 800              		.cfi_endproc
 801              	.LFE66:
 802              		.size	infoGet, .-infoGet
 803              		.global	__aeabi_i2f
 804              		.global	__aeabi_fdiv
 805 0102 00BF     		.section	.rodata
 806              		.align	2
 807              	.LC84:
 808 0000 20557362 		.ascii	" Usb\000"
 808      00
 809 0005 000000   		.align	2
 810              	.LC85:
 811 0008 2048616E 		.ascii	" Handle\000"
 811      646C6500 
 812              		.align	2
 813              	.LC86:
 814 0010 20454D47 		.ascii	" EMG proportional\000"
 814      2070726F 
 814      706F7274 
 814      696F6E61 
 814      6C00
 815 0022 0000     		.align	2
 816              	.LC87:
 817 0024 20454D47 		.ascii	" EMG integral\000"
 817      20696E74 
 817      65677261 
 817      6C00
 818 0032 0000     		.align	2
 819              	.LC88:
 820 0034 20454D47 		.ascii	" EMG FCFS\000"
 820      20464346 
 820      5300
 821 003e 0000     		.align	2
 822              	.LC89:
 823 0040 20454D47 		.ascii	" EMG FCFS Advanced\000"
 823      20464346 
 823      53204164 
 823      76616E63 
 823      656400
 824 0053 00       		.align	2
 825              	.LC90:
 826 0054 204A6F79 		.ascii	" Joystick\000"
 826      73746963 
 826      6B00
 827 005e 0000     		.align	2
 828              	.LC91:
 829 0060 20454D47 		.ascii	" EMG proportional Normally Closed\000"
 829      2070726F 
 829      706F7274 
 829      696F6E61 
 829      6C204E6F 
 830 0082 0000     		.align	2
 831              	.LC92:
 832 0084 20506F73 		.ascii	" Position\000"
 832      6974696F 
 832      6E00
 833 008e 0000     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 36


 834              	.LC93:
 835 0090 2050574D 		.ascii	" PWM\000"
 835      00
 836 0095 000000   		.align	2
 837              	.LC94:
 838 0098 20437572 		.ascii	" Current\000"
 838      72656E74 
 838      00
 839 00a1 000000   		.align	2
 840              	.LC95:
 841 00a4 20506F73 		.ascii	" Position and Current\000"
 841      6974696F 
 841      6E20616E 
 841      64204375 
 841      7272656E 
 842 00ba 0000     		.align	2
 843              	.LC96:
 844 00bc 20594553 		.ascii	" YES\000\000"
 844      0000
 845 00c2 0000     		.align	2
 846              	.LC97:
 847 00c4 204E4F00 		.ascii	" NO\000\000"
 847      00
 848 00c9 000000   		.align	2
 849              	.LC98:
 850 00cc 20526967 		.ascii	" Right\000\000"
 850      68740000 
 851              		.align	2
 852              	.LC99:
 853 00d4 204C6566 		.ascii	" Left\000\000"
 853      740000
 854 00db 00       		.align	2
 855              	.LC100:
 856 00dc 204F4646 		.ascii	" OFF\000\000"
 856      0000
 857 00e2 0000     		.align	2
 858              	.LC101:
 859 00e4 204F4E00 		.ascii	" ON\000\000"
 859      00
 860 00e9 000000   		.align	2
 861              	.LC102:
 862 00ec 204E6F6E 		.ascii	" None\000\000"
 862      650000
 863 00f3 00       		.align	2
 864              	.LC103:
 865 00f4 2053442F 		.ascii	" SD/RTC board\000\000"
 865      52544320 
 865      626F6172 
 865      640000
 866 0103 00       		.align	2
 867              	.LC104:
 868 0104 20576946 		.ascii	" WiFi board [N/A]\000\000"
 868      6920626F 
 868      61726420 
 868      5B4E2F41 
 868      5D0000
 869 0117 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 37


 870              	.LC105:
 871 0118 204F7468 		.ascii	" Other [N/A]\000\000"
 871      6572205B 
 871      4E2F415D 
 871      0000
 872 0126 0000     		.align	2
 873              	.LC106:
 874 0128 204C6F77 		.ascii	" Low\000\000"
 874      0000
 875 012e 0000     		.align	2
 876              	.LC107:
 877 0130 20486967 		.ascii	" High\000\000"
 877      680000
 878 0137 00       		.align	2
 879              	.LC108:
 880 0138 2047454E 		.ascii	" GENERIC USER\000\000"
 880      45524943 
 880      20555345 
 880      520000
 881 0147 00       		.align	2
 882              	.LC109:
 883 0148 204D4152 		.ascii	" MARIA\000\000"
 883      49410000 
 884              		.align	2
 885              	.LC110:
 886 0150 20524F5A 		.ascii	" ROZA\000\000"
 886      410000
 887 0157 00       		.align	2
 888              	.LC111:
 889 0158 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 889      33383837 
 889      20285374 
 889      616E6461 
 889      72642900 
 890 016d 000000   		.align	2
 891              	.LC112:
 892 0170 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 892      35303139 
 892      20284869 
 892      67682070 
 892      6F776572 
 893 0187 00       		.align	2
 894              	.LC113:
 895 0188 20534F46 		.ascii	" SOFTHAND PRO\000\000"
 895      5448414E 
 895      44205052 
 895      4F0000
 896 0197 00       		.align	2
 897              	.LC114:
 898 0198 2047454E 		.ascii	" GENERIC 2 MOTORS\000\000"
 898      45524943 
 898      2032204D 
 898      4F544F52 
 898      530000
 899 01ab 00       		.align	2
 900              	.LC115:
 901 01ac 20414952 		.ascii	" AIR CHAMBERS\000\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 38


 901      20434841 
 901      4D424552 
 901      530000
 902 01bb 00       		.align	2
 903              	.LC116:
 904 01bc 204F5454 		.ascii	" OTTOBOCK WRIST\000\000"
 904      4F424F43 
 904      4B205752 
 904      49535400 
 904      00
 905 01cd 000000   		.align	2
 906              	.LC117:
 907 01d0 20466173 		.ascii	" Fast:wrist, Slow:hand\000\000"
 907      743A7772 
 907      6973742C 
 907      20536C6F 
 907      773A6861 
 908              		.align	2
 909              	.LC118:
 910 01e8 20536C6F 		.ascii	" Slow:wrist, Fast:hand\000\000"
 910      773A7772 
 910      6973742C 
 910      20466173 
 910      743A6861 
 911              		.align	2
 912              	.LC119:
 913 0200 20436C6F 		.ascii	" Close:CW, Open:CCW\000\000"
 913      73653A43 
 913      572C204F 
 913      70656E3A 
 913      43435700 
 914 0215 000000   		.align	2
 915              	.LC120:
 916 0218 20436C6F 		.ascii	" Close:CCW, Open:CW\000\000"
 916      73653A43 
 916      43572C20 
 916      4F70656E 
 916      3A435700 
 917              		.section	.text.get_param_list,"ax",%progbits
 918              		.align	2
 919              		.global	get_param_list
 920              		.thumb
 921              		.thumb_func
 922              		.type	get_param_list, %function
 923              	get_param_list:
 924              	.LFB67:
 342:..\src/command_processing.c **** 
 343:..\src/command_processing.c **** 
 344:..\src/command_processing.c **** //==============================================================================
 345:..\src/command_processing.c **** //                                                                GET PARAM LIST
 346:..\src/command_processing.c **** //==============================================================================
 347:..\src/command_processing.c **** 
 348:..\src/command_processing.c **** void get_param_list (uint8* VAR_P[NUM_OF_PARAMS], uint8 TYPES[NUM_OF_PARAMS], 
 349:..\src/command_processing.c ****                      uint8 NUM_ITEMS[NUM_OF_PARAMS], uint8 NUM_STRUCT[NUM_OF_PARAMS],
 350:..\src/command_processing.c ****                      uint8* NUM_MENU, const char* PARAMS_STR[NUM_OF_PARAMS], 
 351:..\src/command_processing.c ****                      uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS], const char* MENU_STR[NUM_OF_PARAMS_MENU
 925              		.loc 1 351 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 39


 926              		.cfi_startproc
 927              		@ args = 16, pretend = 0, frame = 3160
 928              		@ frame_needed = 1, uses_anonymous_args = 0
 929 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 930              		.cfi_def_cfa_offset 20
 931              		.cfi_offset 4, -20
 932              		.cfi_offset 5, -16
 933              		.cfi_offset 6, -12
 934              		.cfi_offset 7, -8
 935              		.cfi_offset 14, -4
 936 0002 ADF65C4D 		subw	sp, sp, #3164
 937              		.cfi_def_cfa_offset 3184
 938 0006 00AF     		add	r7, sp, #0
 939              		.cfi_def_cfa_register 7
 940 0008 07F10C04 		add	r4, r7, #12
 941 000c 2060     		str	r0, [r4]
 942 000e 07F10800 		add	r0, r7, #8
 943 0012 0160     		str	r1, [r0]
 944 0014 391D     		adds	r1, r7, #4
 945 0016 0A60     		str	r2, [r1]
 946 0018 3A46     		mov	r2, r7
 947 001a 1360     		str	r3, [r2]
 352:..\src/command_processing.c ****     
 353:..\src/command_processing.c ****     //Package to be sent variables
 354:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MENUS + 
 948              		.loc 1 354 0
 949 001c 07F15803 		add	r3, r7, #88
 950 0020 0022     		movs	r2, #0
 951 0022 1A60     		str	r2, [r3]
 952 0024 0433     		adds	r3, r3, #4
 953 0026 40F6E632 		movw	r2, #3046
 954 002a 0021     		movs	r1, #0
 955 002c 1846     		mov	r0, r3
 956 002e FFF7FEFF 		bl	memset
 355:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*NUM_OF_DEV_PARAM_MEN
 957              		.loc 1 355 0
 958 0032 40F6EA33 		movw	r3, #3050
 959 0036 A7F8503C 		strh	r3, [r7, #3152]	@ movhi
 356:..\src/command_processing.c **** 
 357:..\src/command_processing.c ****     //Auxiliary variables
 358:..\src/command_processing.c ****     uint8 CYDATA i, j;
 359:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 960              		.loc 1 359 0
 961 003a 0023     		movs	r3, #0
 962 003c 87F8553C 		strb	r3, [r7, #3157]
 360:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 963              		.loc 1 360 0
 964 0040 0023     		movs	r3, #0
 965 0042 87F8543C 		strb	r3, [r7, #3156]
 361:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 966              		.loc 1 361 0
 967 0046 0023     		movs	r3, #0
 968 0048 87F8533C 		strb	r3, [r7, #3155]
 362:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 363:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 969              		.loc 1 363 0
 970 004c 07F12403 		add	r3, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 40


 971 0050 0022     		movs	r2, #0
 972 0052 1A60     		str	r2, [r3]
 973 0054 0433     		adds	r3, r3, #4
 974 0056 2E22     		movs	r2, #46
 975 0058 0021     		movs	r1, #0
 976 005a 1846     		mov	r0, r3
 977 005c FFF7FEFF 		bl	memset
 364:..\src/command_processing.c ****     float aux_float;
 365:..\src/command_processing.c ****     int16 aux_int16;
 366:..\src/command_processing.c ****     uint16 aux_uint16;
 367:..\src/command_processing.c ****     int32 aux_int32;
 368:..\src/command_processing.c ****     uint32 aux_uint32;
 369:..\src/command_processing.c **** 
 370:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 978              		.loc 1 370 0
 979 0060 0023     		movs	r3, #0
 980 0062 87F84F3C 		strb	r3, [r7, #3151]
 371:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 981              		.loc 1 371 0
 982 0066 0123     		movs	r3, #1
 983 0068 87F84E3C 		strb	r3, [r7, #3150]
 372:..\src/command_processing.c ****   
 373:..\src/command_processing.c ****     uint8* m_addr = (uint8*)VAR_P[0];
 984              		.loc 1 373 0
 985 006c 07F10C03 		add	r3, r7, #12
 986 0070 1B68     		ldr	r3, [r3]
 987 0072 1B68     		ldr	r3, [r3]
 988 0074 C7F8483C 		str	r3, [r7, #3144]
 374:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 989              		.loc 1 374 0
 990 0078 D7F8483C 		ldr	r3, [r7, #3144]
 991 007c C7F8443C 		str	r3, [r7, #3140]
 375:..\src/command_processing.c ****         
 376:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 992              		.loc 1 376 0
 993 0080 07F15803 		add	r3, r7, #88
 994 0084 0C22     		movs	r2, #12
 995 0086 1A70     		strb	r2, [r3]
 377:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 996              		.loc 1 377 0
 997 0088 07F15803 		add	r3, r7, #88
 998 008c 2422     		movs	r2, #36
 999 008e 5A70     		strb	r2, [r3, #1]
 378:..\src/command_processing.c ****     
 379:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1000              		.loc 1 379 0
 1001 0090 0023     		movs	r3, #0
 1002 0092 87F8553C 		strb	r3, [r7, #3157]
 1003 0096 02F038B8 		b	.L64
 1004              	.L261:
 380:..\src/command_processing.c ****         
 381:..\src/command_processing.c ****         // Assign m_addr memory address
 382:..\src/command_processing.c ****         m_addr = (uint8*)VAR_P[idx];
 1005              		.loc 1 382 0
 1006 009a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1007 009e 9B00     		lsls	r3, r3, #2
 1008 00a0 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 41


 1009 00a4 1268     		ldr	r2, [r2]
 1010 00a6 1344     		add	r3, r3, r2
 1011 00a8 1B68     		ldr	r3, [r3]
 1012 00aa C7F8483C 		str	r3, [r7, #3144]
 383:..\src/command_processing.c ****         
 384:..\src/command_processing.c ****         // Add parameter type and size to packet
 385:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1013              		.loc 1 385 0
 1014 00ae 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1015 00b2 3222     		movs	r2, #50
 1016 00b4 02FB03F3 		mul	r3, r2, r3
 1017 00b8 0233     		adds	r3, r3, #2
 1018 00ba 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1019 00be 07F10801 		add	r1, r7, #8
 1020 00c2 0968     		ldr	r1, [r1]
 1021 00c4 0A44     		add	r2, r2, r1
 1022 00c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1023 00c8 07F15802 		add	r2, r7, #88
 1024 00cc D154     		strb	r1, [r2, r3]
 386:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1025              		.loc 1 386 0
 1026 00ce 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1027 00d2 3222     		movs	r2, #50
 1028 00d4 02FB03F3 		mul	r3, r2, r3
 1029 00d8 0333     		adds	r3, r3, #3
 1030 00da 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 1031 00de 391D     		adds	r1, r7, #4
 1032 00e0 0968     		ldr	r1, [r1]
 1033 00e2 0A44     		add	r2, r2, r1
 1034 00e4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1035 00e6 07F15802 		add	r2, r7, #88
 1036 00ea D154     		strb	r1, [r2, r3]
 387:..\src/command_processing.c ****         
 388:..\src/command_processing.c ****         // Find size of data
 389:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1037              		.loc 1 389 0
 1038 00ec 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1039 00f0 07F10802 		add	r2, r7, #8
 1040 00f4 1268     		ldr	r2, [r2]
 1041 00f6 1344     		add	r3, r3, r2
 1042 00f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1043 00fa 092B     		cmp	r3, #9
 1044 00fc 22D8     		bhi	.L65
 1045 00fe 01A2     		adr	r2, .L67
 1046 0100 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1047              		.p2align 2
 1048              	.L67:
 1049 0104 2D010000 		.word	.L66+1
 1050 0108 2D010000 		.word	.L66+1
 1051 010c 2D010000 		.word	.L66+1
 1052 0110 35010000 		.word	.L68+1
 1053 0114 35010000 		.word	.L68+1
 1054 0118 3D010000 		.word	.L69+1
 1055 011c 3D010000 		.word	.L69+1
 1056 0120 3D010000 		.word	.L69+1
 1057 0124 45010000 		.word	.L65+1
 1058 0128 2D010000 		.word	.L66+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 42


 1059              		.p2align 1
 1060              	.L66:
 390:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 391:..\src/command_processing.c ****                 sod = 1; break;
 1061              		.loc 1 391 0
 1062 012c 0123     		movs	r3, #1
 1063 012e 87F8533C 		strb	r3, [r7, #3155]
 1064 0132 07E0     		b	.L65
 1065              	.L68:
 392:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 393:..\src/command_processing.c ****                 sod = 2; break;
 1066              		.loc 1 393 0
 1067 0134 0223     		movs	r3, #2
 1068 0136 87F8533C 		strb	r3, [r7, #3155]
 1069 013a 03E0     		b	.L65
 1070              	.L69:
 394:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 395:..\src/command_processing.c ****                 sod = 4; break;
 1071              		.loc 1 395 0
 1072 013c 0423     		movs	r3, #4
 1073 013e 87F8533C 		strb	r3, [r7, #3155]
 1074 0142 00BF     		nop
 1075              	.L65:
 396:..\src/command_processing.c ****         }
 397:..\src/command_processing.c ****             
 398:..\src/command_processing.c ****         if (!CUSTOM_PARAM_GET[idx]) {       // Default param get
 1076              		.loc 1 398 0
 1077 0144 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1078 0148 D7F8782C 		ldr	r2, [r7, #3192]
 1079 014c 1344     		add	r3, r3, r2
 1080 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1081 0150 002B     		cmp	r3, #0
 1082 0152 40F02A82 		bne	.L70
 399:..\src/command_processing.c ****             
 400:..\src/command_processing.c ****             // Add parameter data to packet
 401:..\src/command_processing.c ****             switch (TYPES[idx]) {
 1083              		.loc 1 401 0
 1084 0156 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1085 015a 07F10802 		add	r2, r7, #8
 1086 015e 1268     		ldr	r2, [r2]
 1087 0160 1344     		add	r3, r3, r2
 1088 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1089 0164 092B     		cmp	r3, #9
 1090 0166 01F20E83 		bhi	.L104
 1091 016a 01A2     		adr	r2, .L73
 1092 016c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1093              		.p2align 2
 1094              	.L73:
 1095 0170 99010000 		.word	.L72+1
 1096 0174 01020000 		.word	.L74+1
 1097 0178 99010000 		.word	.L72+1
 1098 017c 69020000 		.word	.L75+1
 1099 0180 11030000 		.word	.L76+1
 1100 0184 B7030000 		.word	.L77+1
 1101 0188 5D040000 		.word	.L78+1
 1102 018c 03050000 		.word	.L79+1
 1103 0190 87170000 		.word	.L104+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 43


 1104 0194 99010000 		.word	.L72+1
 1105              		.p2align 1
 1106              	.L72:
 402:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8: case TYPE_STRING:
 403:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1107              		.loc 1 403 0
 1108 0198 0023     		movs	r3, #0
 1109 019a 87F8573C 		strb	r3, [r7, #3159]
 1110 019e 23E0     		b	.L80
 1111              	.L81:
 404:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1112              		.loc 1 404 0 discriminator 3
 1113 01a0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1114 01a4 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1115 01a8 02FB03F3 		mul	r3, r2, r3
 1116 01ac 1A46     		mov	r2, r3
 1117 01ae D7F8483C 		ldr	r3, [r7, #3144]
 1118 01b2 1344     		add	r3, r3, r2
 1119 01b4 C7F8443C 		str	r3, [r7, #3140]
 405:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1120              		.loc 1 405 0 discriminator 3
 1121 01b8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1122 01bc 3222     		movs	r2, #50
 1123 01be 02FB03F3 		mul	r3, r2, r3
 1124 01c2 1A1D     		adds	r2, r3, #4
 1125 01c4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1126 01c8 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1127 01cc 01FB03F3 		mul	r3, r1, r3
 1128 01d0 1344     		add	r3, r3, r2
 1129 01d2 D7F8442C 		ldr	r2, [r7, #3140]
 1130 01d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1131 01d8 07F15802 		add	r2, r7, #88
 1132 01dc D154     		strb	r1, [r2, r3]
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1133              		.loc 1 403 0 discriminator 3
 1134 01de 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1135 01e2 0133     		adds	r3, r3, #1
 1136 01e4 87F8573C 		strb	r3, [r7, #3159]
 1137              	.L80:
 403:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1138              		.loc 1 403 0 is_stmt 0 discriminator 1
 1139 01e8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1140 01ec 3A1D     		adds	r2, r7, #4
 1141 01ee 1268     		ldr	r2, [r2]
 1142 01f0 1344     		add	r3, r3, r2
 1143 01f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1144 01f4 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1145 01f8 9A42     		cmp	r2, r3
 1146 01fa D1D3     		bcc	.L81
 406:..\src/command_processing.c ****                     }
 407:..\src/command_processing.c ****                     break;                
 1147              		.loc 1 407 0 is_stmt 1
 1148 01fc 01F0C3BA 		b	.L104
 1149              	.L74:
 408:..\src/command_processing.c ****                 case TYPE_INT8:
 409:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1150              		.loc 1 409 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 44


 1151 0200 0023     		movs	r3, #0
 1152 0202 87F8573C 		strb	r3, [r7, #3159]
 1153 0206 23E0     		b	.L82
 1154              	.L83:
 410:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1155              		.loc 1 410 0 discriminator 3
 1156 0208 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1157 020c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1158 0210 02FB03F3 		mul	r3, r2, r3
 1159 0214 1A46     		mov	r2, r3
 1160 0216 D7F8483C 		ldr	r3, [r7, #3144]
 1161 021a 1344     		add	r3, r3, r2
 1162 021c C7F8443C 		str	r3, [r7, #3140]
 411:..\src/command_processing.c ****                         packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1163              		.loc 1 411 0 discriminator 3
 1164 0220 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1165 0224 3222     		movs	r2, #50
 1166 0226 02FB03F3 		mul	r3, r2, r3
 1167 022a 1A1D     		adds	r2, r3, #4
 1168 022c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1169 0230 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1170 0234 01FB03F3 		mul	r3, r1, r3
 1171 0238 1344     		add	r3, r3, r2
 1172 023a D7F8442C 		ldr	r2, [r7, #3140]
 1173 023e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1174 0240 07F15802 		add	r2, r7, #88
 1175 0244 D154     		strb	r1, [r2, r3]
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1176              		.loc 1 409 0 discriminator 3
 1177 0246 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1178 024a 0133     		adds	r3, r3, #1
 1179 024c 87F8573C 		strb	r3, [r7, #3159]
 1180              	.L82:
 409:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1181              		.loc 1 409 0 is_stmt 0 discriminator 1
 1182 0250 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1183 0254 3A1D     		adds	r2, r7, #4
 1184 0256 1268     		ldr	r2, [r2]
 1185 0258 1344     		add	r3, r3, r2
 1186 025a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1187 025c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1188 0260 9A42     		cmp	r2, r3
 1189 0262 D1D3     		bcc	.L83
 412:..\src/command_processing.c ****                     }
 413:..\src/command_processing.c ****                     break;
 1190              		.loc 1 413 0 is_stmt 1
 1191 0264 01F08FBA 		b	.L104
 1192              	.L75:
 414:..\src/command_processing.c ****                 case TYPE_INT16:
 415:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1193              		.loc 1 415 0
 1194 0268 0023     		movs	r3, #0
 1195 026a 87F8573C 		strb	r3, [r7, #3159]
 1196 026e 43E0     		b	.L84
 1197              	.L87:
 416:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1198              		.loc 1 416 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 45


 1199 0270 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1200 0274 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1201 0278 02FB03F3 		mul	r3, r2, r3
 1202 027c 1A46     		mov	r2, r3
 1203 027e D7F8483C 		ldr	r3, [r7, #3144]
 1204 0282 1344     		add	r3, r3, r2
 1205 0284 C7F8443C 		str	r3, [r7, #3140]
 417:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1206              		.loc 1 417 0
 1207 0288 D7F8443C 		ldr	r3, [r7, #3140]
 1208 028c B3F90020 		ldrsh	r2, [r3]
 1209 0290 07F11E03 		add	r3, r7, #30
 1210 0294 1A80     		strh	r2, [r3]	@ movhi
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1211              		.loc 1 418 0
 1212 0296 0023     		movs	r3, #0
 1213 0298 87F8563C 		strb	r3, [r7, #3158]
 1214 029c 21E0     		b	.L85
 1215              	.L86:
 419:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1216              		.loc 1 419 0 discriminator 3
 1217 029e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1218 02a2 3222     		movs	r2, #50
 1219 02a4 02FB03F3 		mul	r3, r2, r3
 1220 02a8 1A1D     		adds	r2, r3, #4
 1221 02aa 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1222 02ae 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1223 02b2 01FB03F3 		mul	r3, r1, r3
 1224 02b6 1A44     		add	r2, r2, r3
 1225 02b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1226 02bc 1A44     		add	r2, r2, r3
 1227 02be 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1228 02c2 D31A     		subs	r3, r2, r3
 1229 02c4 013B     		subs	r3, r3, #1
 1230 02c6 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1231 02ca 07F11E01 		add	r1, r7, #30
 1232 02ce 0A44     		add	r2, r2, r1
 1233 02d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1234 02d2 07F15802 		add	r2, r7, #88
 1235 02d6 D154     		strb	r1, [r2, r3]
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1236              		.loc 1 418 0 discriminator 3
 1237 02d8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1238 02dc 0133     		adds	r3, r3, #1
 1239 02de 87F8563C 		strb	r3, [r7, #3158]
 1240              	.L85:
 418:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1241              		.loc 1 418 0 is_stmt 0 discriminator 1
 1242 02e2 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1243 02e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1244 02ea 9A42     		cmp	r2, r3
 1245 02ec D7D3     		bcc	.L86
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1246              		.loc 1 415 0 is_stmt 1 discriminator 2
 1247 02ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1248 02f2 0133     		adds	r3, r3, #1
 1249 02f4 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 46


 1250              	.L84:
 415:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1251              		.loc 1 415 0 is_stmt 0 discriminator 1
 1252 02f8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1253 02fc 3A1D     		adds	r2, r7, #4
 1254 02fe 1268     		ldr	r2, [r2]
 1255 0300 1344     		add	r3, r3, r2
 1256 0302 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0304 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1258 0308 9A42     		cmp	r2, r3
 1259 030a B1D3     		bcc	.L87
 420:..\src/command_processing.c ****                         }
 421:..\src/command_processing.c ****                     }
 422:..\src/command_processing.c ****                     break;
 1260              		.loc 1 422 0 is_stmt 1
 1261 030c 01F03BBA 		b	.L104
 1262              	.L76:
 423:..\src/command_processing.c ****                 case TYPE_UINT16:
 424:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1263              		.loc 1 424 0
 1264 0310 0023     		movs	r3, #0
 1265 0312 87F8573C 		strb	r3, [r7, #3159]
 1266 0316 42E0     		b	.L88
 1267              	.L91:
 425:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1268              		.loc 1 425 0
 1269 0318 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1270 031c 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1271 0320 02FB03F3 		mul	r3, r2, r3
 1272 0324 1A46     		mov	r2, r3
 1273 0326 D7F8483C 		ldr	r3, [r7, #3144]
 1274 032a 1344     		add	r3, r3, r2
 1275 032c C7F8443C 		str	r3, [r7, #3140]
 426:..\src/command_processing.c ****                         aux_uint16 = *((uint16*)m_tmp);
 1276              		.loc 1 426 0
 1277 0330 D7F8443C 		ldr	r3, [r7, #3140]
 1278 0334 1A88     		ldrh	r2, [r3]
 1279 0336 07F11C03 		add	r3, r7, #28
 1280 033a 1A80     		strh	r2, [r3]	@ movhi
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1281              		.loc 1 427 0
 1282 033c 0023     		movs	r3, #0
 1283 033e 87F8563C 		strb	r3, [r7, #3158]
 1284 0342 21E0     		b	.L89
 1285              	.L90:
 428:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1286              		.loc 1 428 0 discriminator 3
 1287 0344 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1288 0348 3222     		movs	r2, #50
 1289 034a 02FB03F3 		mul	r3, r2, r3
 1290 034e 1A1D     		adds	r2, r3, #4
 1291 0350 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1292 0354 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1293 0358 01FB03F3 		mul	r3, r1, r3
 1294 035c 1A44     		add	r2, r2, r3
 1295 035e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1296 0362 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 47


 1297 0364 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1298 0368 D31A     		subs	r3, r2, r3
 1299 036a 013B     		subs	r3, r3, #1
 1300 036c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1301 0370 07F11C01 		add	r1, r7, #28
 1302 0374 0A44     		add	r2, r2, r1
 1303 0376 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1304 0378 07F15802 		add	r2, r7, #88
 1305 037c D154     		strb	r1, [r2, r3]
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1306              		.loc 1 427 0 discriminator 3
 1307 037e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1308 0382 0133     		adds	r3, r3, #1
 1309 0384 87F8563C 		strb	r3, [r7, #3158]
 1310              	.L89:
 427:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1311              		.loc 1 427 0 is_stmt 0 discriminator 1
 1312 0388 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1313 038c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1314 0390 9A42     		cmp	r2, r3
 1315 0392 D7D3     		bcc	.L90
 424:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1316              		.loc 1 424 0 is_stmt 1 discriminator 2
 1317 0394 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1318 0398 0133     		adds	r3, r3, #1
 1319 039a 87F8573C 		strb	r3, [r7, #3159]
 1320              	.L88:
 424:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1321              		.loc 1 424 0 is_stmt 0 discriminator 1
 1322 039e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1323 03a2 3A1D     		adds	r2, r7, #4
 1324 03a4 1268     		ldr	r2, [r2]
 1325 03a6 1344     		add	r3, r3, r2
 1326 03a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1327 03aa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1328 03ae 9A42     		cmp	r2, r3
 1329 03b0 B2D3     		bcc	.L91
 429:..\src/command_processing.c ****                         }
 430:..\src/command_processing.c ****                     }
 431:..\src/command_processing.c ****                     break;
 1330              		.loc 1 431 0 is_stmt 1
 1331 03b2 01F0E8B9 		b	.L104
 1332              	.L77:
 432:..\src/command_processing.c ****                 case TYPE_INT32: 
 433:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1333              		.loc 1 433 0
 1334 03b6 0023     		movs	r3, #0
 1335 03b8 87F8573C 		strb	r3, [r7, #3159]
 1336 03bc 42E0     		b	.L92
 1337              	.L95:
 434:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1338              		.loc 1 434 0
 1339 03be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1340 03c2 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1341 03c6 02FB03F3 		mul	r3, r2, r3
 1342 03ca 1A46     		mov	r2, r3
 1343 03cc D7F8483C 		ldr	r3, [r7, #3144]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 48


 1344 03d0 1344     		add	r3, r3, r2
 1345 03d2 C7F8443C 		str	r3, [r7, #3140]
 435:..\src/command_processing.c ****                         aux_int32 = *((int32*)m_tmp);
 1346              		.loc 1 435 0
 1347 03d6 D7F8443C 		ldr	r3, [r7, #3140]
 1348 03da 1A68     		ldr	r2, [r3]
 1349 03dc 07F11803 		add	r3, r7, #24
 1350 03e0 1A60     		str	r2, [r3]
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1351              		.loc 1 436 0
 1352 03e2 0023     		movs	r3, #0
 1353 03e4 87F8563C 		strb	r3, [r7, #3158]
 1354 03e8 21E0     		b	.L93
 1355              	.L94:
 437:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1356              		.loc 1 437 0 discriminator 3
 1357 03ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1358 03ee 3222     		movs	r2, #50
 1359 03f0 02FB03F3 		mul	r3, r2, r3
 1360 03f4 1A1D     		adds	r2, r3, #4
 1361 03f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1362 03fa 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1363 03fe 01FB03F3 		mul	r3, r1, r3
 1364 0402 1A44     		add	r2, r2, r3
 1365 0404 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1366 0408 1A44     		add	r2, r2, r3
 1367 040a 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1368 040e D31A     		subs	r3, r2, r3
 1369 0410 013B     		subs	r3, r3, #1
 1370 0412 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1371 0416 07F11801 		add	r1, r7, #24
 1372 041a 0A44     		add	r2, r2, r1
 1373 041c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1374 041e 07F15802 		add	r2, r7, #88
 1375 0422 D154     		strb	r1, [r2, r3]
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1376              		.loc 1 436 0 discriminator 3
 1377 0424 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1378 0428 0133     		adds	r3, r3, #1
 1379 042a 87F8563C 		strb	r3, [r7, #3158]
 1380              	.L93:
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1381              		.loc 1 436 0 is_stmt 0 discriminator 1
 1382 042e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1383 0432 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1384 0436 9A42     		cmp	r2, r3
 1385 0438 D7D3     		bcc	.L94
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1386              		.loc 1 433 0 is_stmt 1 discriminator 2
 1387 043a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1388 043e 0133     		adds	r3, r3, #1
 1389 0440 87F8573C 		strb	r3, [r7, #3159]
 1390              	.L92:
 433:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1391              		.loc 1 433 0 is_stmt 0 discriminator 1
 1392 0444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1393 0448 3A1D     		adds	r2, r7, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 49


 1394 044a 1268     		ldr	r2, [r2]
 1395 044c 1344     		add	r3, r3, r2
 1396 044e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1397 0450 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1398 0454 9A42     		cmp	r2, r3
 1399 0456 B2D3     		bcc	.L95
 438:..\src/command_processing.c ****                         }
 439:..\src/command_processing.c ****                     }
 440:..\src/command_processing.c ****                     break;
 1400              		.loc 1 440 0 is_stmt 1
 1401 0458 01F095B9 		b	.L104
 1402              	.L78:
 441:..\src/command_processing.c ****                 case TYPE_UINT32: 
 442:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1403              		.loc 1 442 0
 1404 045c 0023     		movs	r3, #0
 1405 045e 87F8573C 		strb	r3, [r7, #3159]
 1406 0462 42E0     		b	.L96
 1407              	.L99:
 443:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1408              		.loc 1 443 0
 1409 0464 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1410 0468 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1411 046c 02FB03F3 		mul	r3, r2, r3
 1412 0470 1A46     		mov	r2, r3
 1413 0472 D7F8483C 		ldr	r3, [r7, #3144]
 1414 0476 1344     		add	r3, r3, r2
 1415 0478 C7F8443C 		str	r3, [r7, #3140]
 444:..\src/command_processing.c ****                         aux_uint32 = *((uint32*)m_tmp);
 1416              		.loc 1 444 0
 1417 047c D7F8443C 		ldr	r3, [r7, #3140]
 1418 0480 1A68     		ldr	r2, [r3]
 1419 0482 07F11403 		add	r3, r7, #20
 1420 0486 1A60     		str	r2, [r3]
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1421              		.loc 1 445 0
 1422 0488 0023     		movs	r3, #0
 1423 048a 87F8563C 		strb	r3, [r7, #3158]
 1424 048e 21E0     		b	.L97
 1425              	.L98:
 446:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1426              		.loc 1 446 0 discriminator 3
 1427 0490 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1428 0494 3222     		movs	r2, #50
 1429 0496 02FB03F3 		mul	r3, r2, r3
 1430 049a 1A1D     		adds	r2, r3, #4
 1431 049c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1432 04a0 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1433 04a4 01FB03F3 		mul	r3, r1, r3
 1434 04a8 1A44     		add	r2, r2, r3
 1435 04aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1436 04ae 1A44     		add	r2, r2, r3
 1437 04b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1438 04b4 D31A     		subs	r3, r2, r3
 1439 04b6 013B     		subs	r3, r3, #1
 1440 04b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1441 04bc 07F11401 		add	r1, r7, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 50


 1442 04c0 0A44     		add	r2, r2, r1
 1443 04c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1444 04c4 07F15802 		add	r2, r7, #88
 1445 04c8 D154     		strb	r1, [r2, r3]
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1446              		.loc 1 445 0 discriminator 3
 1447 04ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1448 04ce 0133     		adds	r3, r3, #1
 1449 04d0 87F8563C 		strb	r3, [r7, #3158]
 1450              	.L97:
 445:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1451              		.loc 1 445 0 is_stmt 0 discriminator 1
 1452 04d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1453 04d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1454 04dc 9A42     		cmp	r2, r3
 1455 04de D7D3     		bcc	.L98
 442:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1456              		.loc 1 442 0 is_stmt 1 discriminator 2
 1457 04e0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1458 04e4 0133     		adds	r3, r3, #1
 1459 04e6 87F8573C 		strb	r3, [r7, #3159]
 1460              	.L96:
 442:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1461              		.loc 1 442 0 is_stmt 0 discriminator 1
 1462 04ea 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1463 04ee 3A1D     		adds	r2, r7, #4
 1464 04f0 1268     		ldr	r2, [r2]
 1465 04f2 1344     		add	r3, r3, r2
 1466 04f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1467 04f6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1468 04fa 9A42     		cmp	r2, r3
 1469 04fc B2D3     		bcc	.L99
 447:..\src/command_processing.c ****                         }
 448:..\src/command_processing.c ****                     }
 449:..\src/command_processing.c ****                     break;
 1470              		.loc 1 449 0 is_stmt 1
 1471 04fe 01F042B9 		b	.L104
 1472              	.L79:
 450:..\src/command_processing.c ****                     
 451:..\src/command_processing.c ****                 case TYPE_FLOAT:
 452:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 1473              		.loc 1 452 0
 1474 0502 0023     		movs	r3, #0
 1475 0504 87F8573C 		strb	r3, [r7, #3159]
 1476 0508 42E0     		b	.L100
 1477              	.L103:
 453:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1478              		.loc 1 453 0
 1479 050a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1480 050e 97F8532C 		ldrb	r2, [r7, #3155]	@ zero_extendqisi2
 1481 0512 02FB03F3 		mul	r3, r2, r3
 1482 0516 1A46     		mov	r2, r3
 1483 0518 D7F8483C 		ldr	r3, [r7, #3144]
 1484 051c 1344     		add	r3, r3, r2
 1485 051e C7F8443C 		str	r3, [r7, #3140]
 454:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 1486              		.loc 1 454 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 51


 1487 0522 D7F8443C 		ldr	r3, [r7, #3140]
 1488 0526 1A68     		ldr	r2, [r3]	@ float
 1489 0528 07F12003 		add	r3, r7, #32
 1490 052c 1A60     		str	r2, [r3]	@ float
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1491              		.loc 1 455 0
 1492 052e 0023     		movs	r3, #0
 1493 0530 87F8563C 		strb	r3, [r7, #3158]
 1494 0534 21E0     		b	.L101
 1495              	.L102:
 456:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1496              		.loc 1 456 0 discriminator 3
 1497 0536 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1498 053a 3222     		movs	r2, #50
 1499 053c 02FB03F3 		mul	r3, r2, r3
 1500 0540 1A1D     		adds	r2, r3, #4
 1501 0542 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1502 0546 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 1503 054a 01FB03F3 		mul	r3, r1, r3
 1504 054e 1A44     		add	r2, r2, r3
 1505 0550 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1506 0554 1A44     		add	r2, r2, r3
 1507 0556 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1508 055a D31A     		subs	r3, r2, r3
 1509 055c 013B     		subs	r3, r3, #1
 1510 055e 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1511 0562 07F12001 		add	r1, r7, #32
 1512 0566 0A44     		add	r2, r2, r1
 1513 0568 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1514 056a 07F15802 		add	r2, r7, #88
 1515 056e D154     		strb	r1, [r2, r3]
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1516              		.loc 1 455 0 discriminator 3
 1517 0570 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 1518 0574 0133     		adds	r3, r3, #1
 1519 0576 87F8563C 		strb	r3, [r7, #3158]
 1520              	.L101:
 455:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1521              		.loc 1 455 0 is_stmt 0 discriminator 1
 1522 057a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 1523 057e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1524 0582 9A42     		cmp	r2, r3
 1525 0584 D7D3     		bcc	.L102
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1526              		.loc 1 452 0 is_stmt 1 discriminator 2
 1527 0586 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1528 058a 0133     		adds	r3, r3, #1
 1529 058c 87F8573C 		strb	r3, [r7, #3159]
 1530              	.L100:
 452:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1531              		.loc 1 452 0 is_stmt 0 discriminator 1
 1532 0590 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1533 0594 3A1D     		adds	r2, r7, #4
 1534 0596 1268     		ldr	r2, [r2]
 1535 0598 1344     		add	r3, r3, r2
 1536 059a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1537 059c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 52


 1538 05a0 9A42     		cmp	r2, r3
 1539 05a2 B2D3     		bcc	.L103
 457:..\src/command_processing.c ****                         }
 458:..\src/command_processing.c ****                     }
 459:..\src/command_processing.c ****                     break;   
 1540              		.loc 1 459 0 is_stmt 1 discriminator 7
 1541 05a4 00BF     		nop
 1542 05a6 01F0EEB8 		b	.L104
 1543              	.L70:
 460:..\src/command_processing.c ****             }
 461:..\src/command_processing.c ****         }
 462:..\src/command_processing.c ****         else {
 463:..\src/command_processing.c ****             
 464:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION BEFORE THIS LINE
 465:..\src/command_processing.c ****             
 466:..\src/command_processing.c **** // MODIFY CUSTOM PARAM            
 467:..\src/command_processing.c ****                 switch(idx+1){
 1544              		.loc 1 467 0
 1545 05aa 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1546 05ae 0133     		adds	r3, r3, #1
 1547 05b0 023B     		subs	r3, r3, #2
 1548 05b2 332B     		cmp	r3, #51
 1549 05b4 01F2E680 		bhi	.L266
 1550 05b8 01A2     		adr	r2, .L107
 1551 05ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1552 05be 00BF     		.p2align 2
 1553              	.L107:
 1554 05c0 91060000 		.word	.L106+1
 1555 05c4 B1090000 		.word	.L108+1
 1556 05c8 85170000 		.word	.L266+1
 1557 05cc 85170000 		.word	.L266+1
 1558 05d0 85170000 		.word	.L266+1
 1559 05d4 85170000 		.word	.L266+1
 1560 05d8 D10C0000 		.word	.L109+1
 1561 05dc 85170000 		.word	.L266+1
 1562 05e0 85170000 		.word	.L266+1
 1563 05e4 970D0000 		.word	.L110+1
 1564 05e8 85170000 		.word	.L266+1
 1565 05ec 85170000 		.word	.L266+1
 1566 05f0 85170000 		.word	.L266+1
 1567 05f4 85170000 		.word	.L266+1
 1568 05f8 85170000 		.word	.L266+1
 1569 05fc 85170000 		.word	.L266+1
 1570 0600 85170000 		.word	.L266+1
 1571 0604 85170000 		.word	.L266+1
 1572 0608 85170000 		.word	.L266+1
 1573 060c 85170000 		.word	.L266+1
 1574 0610 85170000 		.word	.L266+1
 1575 0614 C50E0000 		.word	.L111+1
 1576 0618 85170000 		.word	.L266+1
 1577 061c 85170000 		.word	.L266+1
 1578 0620 85170000 		.word	.L266+1
 1579 0624 85170000 		.word	.L266+1
 1580 0628 85170000 		.word	.L266+1
 1581 062c 85170000 		.word	.L266+1
 1582 0630 85170000 		.word	.L266+1
 1583 0634 85170000 		.word	.L266+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 53


 1584 0638 85170000 		.word	.L266+1
 1585 063c 85170000 		.word	.L266+1
 1586 0640 85170000 		.word	.L266+1
 1587 0644 85170000 		.word	.L266+1
 1588 0648 85170000 		.word	.L266+1
 1589 064c 85170000 		.word	.L266+1
 1590 0650 85170000 		.word	.L266+1
 1591 0654 85170000 		.word	.L266+1
 1592 0658 85170000 		.word	.L266+1
 1593 065c 85170000 		.word	.L266+1
 1594 0660 85170000 		.word	.L266+1
 1595 0664 85170000 		.word	.L266+1
 1596 0668 4D0F0000 		.word	.L112+1
 1597 066c 6F120000 		.word	.L113+1
 1598 0670 85170000 		.word	.L266+1
 1599 0674 85170000 		.word	.L266+1
 1600 0678 85170000 		.word	.L266+1
 1601 067c 85170000 		.word	.L266+1
 1602 0680 8B150000 		.word	.L114+1
 1603 0684 85170000 		.word	.L266+1
 1604 0688 85170000 		.word	.L266+1
 1605 068c 4F160000 		.word	.L115+1
 1606              		.p2align 1
 1607              	.L106:
 468:..\src/command_processing.c ****                     case 2:         // Position PID
 469:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1608              		.loc 1 469 0
 1609 0690 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1610 0694 C549     		ldr	r1, .L271
 1611 0696 1346     		mov	r3, r2
 1612 0698 DB00     		lsls	r3, r3, #3
 1613 069a 9B1A     		subs	r3, r3, r2
 1614 069c 1B01     		lsls	r3, r3, #4
 1615 069e 0B44     		add	r3, r3, r1
 1616 06a0 03F20F13 		addw	r3, r3, #271
 1617 06a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1618 06a6 032B     		cmp	r3, #3
 1619 06a8 00F0C080 		beq	.L116
 470:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p / 65536;
 1620              		.loc 1 470 0
 1621 06ac 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1622 06b0 BE49     		ldr	r1, .L271
 1623 06b2 1346     		mov	r3, r2
 1624 06b4 DB00     		lsls	r3, r3, #3
 1625 06b6 9B1A     		subs	r3, r3, r2
 1626 06b8 1B01     		lsls	r3, r3, #4
 1627 06ba 0B44     		add	r3, r3, r1
 1628 06bc B033     		adds	r3, r3, #176
 1629 06be 1B68     		ldr	r3, [r3]
 1630 06c0 1846     		mov	r0, r3
 1631 06c2 FFF7FEFF 		bl	__aeabi_i2f
 1632 06c6 0346     		mov	r3, r0
 1633 06c8 4FF08F41 		mov	r1, #1199570944
 1634 06cc 1846     		mov	r0, r3
 1635 06ce FFF7FEFF 		bl	__aeabi_fdiv
 1636 06d2 0346     		mov	r3, r0
 1637 06d4 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 54


 1638 06d6 07F12003 		add	r3, r7, #32
 1639 06da 1A60     		str	r2, [r3]	@ float
 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1640              		.loc 1 471 0
 1641 06dc 0023     		movs	r3, #0
 1642 06de 87F8573C 		strb	r3, [r7, #3159]
 1643 06e2 1AE0     		b	.L117
 1644              	.L118:
 472:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1645              		.loc 1 472 0 discriminator 3
 1646 06e4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1647 06e8 3222     		movs	r2, #50
 1648 06ea 02FB03F3 		mul	r3, r2, r3
 1649 06ee 1A1D     		adds	r2, r3, #4
 1650 06f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1651 06f4 1A44     		add	r2, r2, r3
 1652 06f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1653 06fa D31A     		subs	r3, r2, r3
 1654 06fc 013B     		subs	r3, r3, #1
 1655 06fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1656 0702 07F12001 		add	r1, r7, #32
 1657 0706 0A44     		add	r2, r2, r1
 1658 0708 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1659 070a 07F15802 		add	r2, r7, #88
 1660 070e D154     		strb	r1, [r2, r3]
 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1661              		.loc 1 471 0 discriminator 3
 1662 0710 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1663 0714 0133     		adds	r3, r3, #1
 1664 0716 87F8573C 		strb	r3, [r7, #3159]
 1665              	.L117:
 471:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1666              		.loc 1 471 0 is_stmt 0 discriminator 1
 1667 071a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1668 071e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1669 0722 9A42     		cmp	r2, r3
 1670 0724 DED3     		bcc	.L118
 473:..\src/command_processing.c ****                             }
 474:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i / 65536;
 1671              		.loc 1 474 0 is_stmt 1
 1672 0726 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1673 072a A049     		ldr	r1, .L271
 1674 072c 1346     		mov	r3, r2
 1675 072e DB00     		lsls	r3, r3, #3
 1676 0730 9B1A     		subs	r3, r3, r2
 1677 0732 1B01     		lsls	r3, r3, #4
 1678 0734 0B44     		add	r3, r3, r1
 1679 0736 B433     		adds	r3, r3, #180
 1680 0738 1B68     		ldr	r3, [r3]
 1681 073a 1846     		mov	r0, r3
 1682 073c FFF7FEFF 		bl	__aeabi_i2f
 1683 0740 0346     		mov	r3, r0
 1684 0742 4FF08F41 		mov	r1, #1199570944
 1685 0746 1846     		mov	r0, r3
 1686 0748 FFF7FEFF 		bl	__aeabi_fdiv
 1687 074c 0346     		mov	r3, r0
 1688 074e 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 55


 1689 0750 07F12003 		add	r3, r7, #32
 1690 0754 1A60     		str	r2, [r3]	@ float
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1691              		.loc 1 475 0
 1692 0756 0023     		movs	r3, #0
 1693 0758 87F8573C 		strb	r3, [r7, #3159]
 1694 075c 1DE0     		b	.L119
 1695              	.L120:
 476:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1696              		.loc 1 476 0 discriminator 3
 1697 075e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1698 0762 3222     		movs	r2, #50
 1699 0764 02FB03F3 		mul	r3, r2, r3
 1700 0768 1A1D     		adds	r2, r3, #4
 1701 076a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1702 076e 1A44     		add	r2, r2, r3
 1703 0770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1704 0774 1A44     		add	r2, r2, r3
 1705 0776 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1706 077a D31A     		subs	r3, r2, r3
 1707 077c 013B     		subs	r3, r3, #1
 1708 077e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1709 0782 07F12001 		add	r1, r7, #32
 1710 0786 0A44     		add	r2, r2, r1
 1711 0788 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1712 078a 07F15802 		add	r2, r7, #88
 1713 078e D154     		strb	r1, [r2, r3]
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1714              		.loc 1 475 0 discriminator 3
 1715 0790 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1716 0794 0133     		adds	r3, r3, #1
 1717 0796 87F8573C 		strb	r3, [r7, #3159]
 1718              	.L119:
 475:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1719              		.loc 1 475 0 is_stmt 0 discriminator 1
 1720 079a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1721 079e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1722 07a2 9A42     		cmp	r2, r3
 1723 07a4 DBD3     		bcc	.L120
 477:..\src/command_processing.c ****                             }
 478:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d / 65536;
 1724              		.loc 1 478 0 is_stmt 1
 1725 07a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1726 07aa 8049     		ldr	r1, .L271
 1727 07ac 1346     		mov	r3, r2
 1728 07ae DB00     		lsls	r3, r3, #3
 1729 07b0 9B1A     		subs	r3, r3, r2
 1730 07b2 1B01     		lsls	r3, r3, #4
 1731 07b4 0B44     		add	r3, r3, r1
 1732 07b6 B833     		adds	r3, r3, #184
 1733 07b8 1B68     		ldr	r3, [r3]
 1734 07ba 1846     		mov	r0, r3
 1735 07bc FFF7FEFF 		bl	__aeabi_i2f
 1736 07c0 0346     		mov	r3, r0
 1737 07c2 4FF08F41 		mov	r1, #1199570944
 1738 07c6 1846     		mov	r0, r3
 1739 07c8 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 56


 1740 07cc 0346     		mov	r3, r0
 1741 07ce 1A46     		mov	r2, r3
 1742 07d0 07F12003 		add	r3, r7, #32
 1743 07d4 1A60     		str	r2, [r3]	@ float
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1744              		.loc 1 479 0
 1745 07d6 0023     		movs	r3, #0
 1746 07d8 87F8573C 		strb	r3, [r7, #3159]
 1747 07dc 1EE0     		b	.L121
 1748              	.L122:
 480:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1749              		.loc 1 480 0 discriminator 3
 1750 07de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1751 07e2 3222     		movs	r2, #50
 1752 07e4 02FB03F3 		mul	r3, r2, r3
 1753 07e8 1A1D     		adds	r2, r3, #4
 1754 07ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1755 07ee 5B00     		lsls	r3, r3, #1
 1756 07f0 1A44     		add	r2, r2, r3
 1757 07f2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1758 07f6 1A44     		add	r2, r2, r3
 1759 07f8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1760 07fc D31A     		subs	r3, r2, r3
 1761 07fe 013B     		subs	r3, r3, #1
 1762 0800 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1763 0804 07F12001 		add	r1, r7, #32
 1764 0808 0A44     		add	r2, r2, r1
 1765 080a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1766 080c 07F15802 		add	r2, r7, #88
 1767 0810 D154     		strb	r1, [r2, r3]
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1768              		.loc 1 479 0 discriminator 3
 1769 0812 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1770 0816 0133     		adds	r3, r3, #1
 1771 0818 87F8573C 		strb	r3, [r7, #3159]
 1772              	.L121:
 479:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1773              		.loc 1 479 0 is_stmt 0 discriminator 1
 1774 081c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1775 0820 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1776 0824 9A42     		cmp	r2, r3
 1777 0826 DAD3     		bcc	.L122
 481:..\src/command_processing.c ****                             } 
 482:..\src/command_processing.c ****                         }
 483:..\src/command_processing.c ****                         else {
 484:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_dl / 65536;
 485:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 486:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 487:..\src/command_processing.c ****                             }
 488:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_dl / 65536;
 489:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 490:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 491:..\src/command_processing.c ****                             }
 492:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_dl / 65536;
 493:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 494:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 495:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 57


 496:..\src/command_processing.c ****                         }
 497:..\src/command_processing.c ****                         break;
 1778              		.loc 1 497 0 is_stmt 1
 1779 0828 00F0ADBF 		b	.L104
 1780              	.L116:
 484:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1781              		.loc 1 484 0
 1782 082c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1783 0830 5E49     		ldr	r1, .L271
 1784 0832 1346     		mov	r3, r2
 1785 0834 DB00     		lsls	r3, r3, #3
 1786 0836 9B1A     		subs	r3, r3, r2
 1787 0838 1B01     		lsls	r3, r3, #4
 1788 083a 0B44     		add	r3, r3, r1
 1789 083c C833     		adds	r3, r3, #200
 1790 083e 1B68     		ldr	r3, [r3]
 1791 0840 1846     		mov	r0, r3
 1792 0842 FFF7FEFF 		bl	__aeabi_i2f
 1793 0846 0346     		mov	r3, r0
 1794 0848 4FF08F41 		mov	r1, #1199570944
 1795 084c 1846     		mov	r0, r3
 1796 084e FFF7FEFF 		bl	__aeabi_fdiv
 1797 0852 0346     		mov	r3, r0
 1798 0854 1A46     		mov	r2, r3
 1799 0856 07F12003 		add	r3, r7, #32
 1800 085a 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1801              		.loc 1 485 0
 1802 085c 0023     		movs	r3, #0
 1803 085e 87F8573C 		strb	r3, [r7, #3159]
 1804 0862 1AE0     		b	.L124
 1805              	.L125:
 486:..\src/command_processing.c ****                             }
 1806              		.loc 1 486 0 discriminator 3
 1807 0864 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1808 0868 3222     		movs	r2, #50
 1809 086a 02FB03F3 		mul	r3, r2, r3
 1810 086e 1A1D     		adds	r2, r3, #4
 1811 0870 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1812 0874 1A44     		add	r2, r2, r3
 1813 0876 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1814 087a D31A     		subs	r3, r2, r3
 1815 087c 013B     		subs	r3, r3, #1
 1816 087e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1817 0882 07F12001 		add	r1, r7, #32
 1818 0886 0A44     		add	r2, r2, r1
 1819 0888 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1820 088a 07F15802 		add	r2, r7, #88
 1821 088e D154     		strb	r1, [r2, r3]
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1822              		.loc 1 485 0 discriminator 3
 1823 0890 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1824 0894 0133     		adds	r3, r3, #1
 1825 0896 87F8573C 		strb	r3, [r7, #3159]
 1826              	.L124:
 485:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 1827              		.loc 1 485 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 58


 1828 089a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1829 089e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1830 08a2 9A42     		cmp	r2, r3
 1831 08a4 DED3     		bcc	.L125
 488:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1832              		.loc 1 488 0 is_stmt 1
 1833 08a6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1834 08aa 4049     		ldr	r1, .L271
 1835 08ac 1346     		mov	r3, r2
 1836 08ae DB00     		lsls	r3, r3, #3
 1837 08b0 9B1A     		subs	r3, r3, r2
 1838 08b2 1B01     		lsls	r3, r3, #4
 1839 08b4 0B44     		add	r3, r3, r1
 1840 08b6 CC33     		adds	r3, r3, #204
 1841 08b8 1B68     		ldr	r3, [r3]
 1842 08ba 1846     		mov	r0, r3
 1843 08bc FFF7FEFF 		bl	__aeabi_i2f
 1844 08c0 0346     		mov	r3, r0
 1845 08c2 4FF08F41 		mov	r1, #1199570944
 1846 08c6 1846     		mov	r0, r3
 1847 08c8 FFF7FEFF 		bl	__aeabi_fdiv
 1848 08cc 0346     		mov	r3, r0
 1849 08ce 1A46     		mov	r2, r3
 1850 08d0 07F12003 		add	r3, r7, #32
 1851 08d4 1A60     		str	r2, [r3]	@ float
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1852              		.loc 1 489 0
 1853 08d6 0023     		movs	r3, #0
 1854 08d8 87F8573C 		strb	r3, [r7, #3159]
 1855 08dc 1DE0     		b	.L126
 1856              	.L127:
 490:..\src/command_processing.c ****                             }
 1857              		.loc 1 490 0 discriminator 3
 1858 08de 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1859 08e2 3222     		movs	r2, #50
 1860 08e4 02FB03F3 		mul	r3, r2, r3
 1861 08e8 1A1D     		adds	r2, r3, #4
 1862 08ea 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1863 08ee 1A44     		add	r2, r2, r3
 1864 08f0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1865 08f4 1A44     		add	r2, r2, r3
 1866 08f6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1867 08fa D31A     		subs	r3, r2, r3
 1868 08fc 013B     		subs	r3, r3, #1
 1869 08fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1870 0902 07F12001 		add	r1, r7, #32
 1871 0906 0A44     		add	r2, r2, r1
 1872 0908 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1873 090a 07F15802 		add	r2, r7, #88
 1874 090e D154     		strb	r1, [r2, r3]
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 1875              		.loc 1 489 0 discriminator 3
 1876 0910 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1877 0914 0133     		adds	r3, r3, #1
 1878 0916 87F8573C 		strb	r3, [r7, #3159]
 1879              	.L126:
 489:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 59


 1880              		.loc 1 489 0 is_stmt 0 discriminator 1
 1881 091a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1882 091e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1883 0922 9A42     		cmp	r2, r3
 1884 0924 DBD3     		bcc	.L127
 492:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1885              		.loc 1 492 0 is_stmt 1
 1886 0926 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1887 092a 2049     		ldr	r1, .L271
 1888 092c 1346     		mov	r3, r2
 1889 092e DB00     		lsls	r3, r3, #3
 1890 0930 9B1A     		subs	r3, r3, r2
 1891 0932 1B01     		lsls	r3, r3, #4
 1892 0934 0B44     		add	r3, r3, r1
 1893 0936 D033     		adds	r3, r3, #208
 1894 0938 1B68     		ldr	r3, [r3]
 1895 093a 1846     		mov	r0, r3
 1896 093c FFF7FEFF 		bl	__aeabi_i2f
 1897 0940 0346     		mov	r3, r0
 1898 0942 4FF08F41 		mov	r1, #1199570944
 1899 0946 1846     		mov	r0, r3
 1900 0948 FFF7FEFF 		bl	__aeabi_fdiv
 1901 094c 0346     		mov	r3, r0
 1902 094e 1A46     		mov	r2, r3
 1903 0950 07F12003 		add	r3, r7, #32
 1904 0954 1A60     		str	r2, [r3]	@ float
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1905              		.loc 1 493 0
 1906 0956 0023     		movs	r3, #0
 1907 0958 87F8573C 		strb	r3, [r7, #3159]
 1908 095c 1EE0     		b	.L128
 1909              	.L129:
 494:..\src/command_processing.c ****                             }
 1910              		.loc 1 494 0 discriminator 3
 1911 095e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1912 0962 3222     		movs	r2, #50
 1913 0964 02FB03F3 		mul	r3, r2, r3
 1914 0968 1A1D     		adds	r2, r3, #4
 1915 096a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1916 096e 5B00     		lsls	r3, r3, #1
 1917 0970 1A44     		add	r2, r2, r3
 1918 0972 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1919 0976 1A44     		add	r2, r2, r3
 1920 0978 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1921 097c D31A     		subs	r3, r2, r3
 1922 097e 013B     		subs	r3, r3, #1
 1923 0980 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1924 0984 07F12001 		add	r1, r7, #32
 1925 0988 0A44     		add	r2, r2, r1
 1926 098a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1927 098c 07F15802 		add	r2, r7, #88
 1928 0990 D154     		strb	r1, [r2, r3]
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1929              		.loc 1 493 0 discriminator 3
 1930 0992 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1931 0996 0133     		adds	r3, r3, #1
 1932 0998 87F8573C 		strb	r3, [r7, #3159]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 60


 1933              	.L128:
 493:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 1934              		.loc 1 493 0 is_stmt 0 discriminator 1
 1935 099c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1936 09a0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1937 09a4 9A42     		cmp	r2, r3
 1938 09a6 DAD3     		bcc	.L129
 1939              		.loc 1 497 0 is_stmt 1
 1940 09a8 00F0EDBE 		b	.L104
 1941              	.L272:
 1942              		.align	2
 1943              	.L271:
 1944 09ac 00000000 		.word	c_mem
 1945              	.L108:
 498:..\src/command_processing.c ****                         
 499:..\src/command_processing.c ****                     case 3:         //Current PID
 500:..\src/command_processing.c ****                         if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 1946              		.loc 1 500 0
 1947 09b0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1948 09b4 C549     		ldr	r1, .L273
 1949 09b6 1346     		mov	r3, r2
 1950 09b8 DB00     		lsls	r3, r3, #3
 1951 09ba 9B1A     		subs	r3, r3, r2
 1952 09bc 1B01     		lsls	r3, r3, #4
 1953 09be 0B44     		add	r3, r3, r1
 1954 09c0 03F20F13 		addw	r3, r3, #271
 1955 09c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1956 09c6 032B     		cmp	r3, #3
 1957 09c8 00F0C080 		beq	.L130
 501:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c / 65536;
 1958              		.loc 1 501 0
 1959 09cc 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 1960 09d0 BE49     		ldr	r1, .L273
 1961 09d2 1346     		mov	r3, r2
 1962 09d4 DB00     		lsls	r3, r3, #3
 1963 09d6 9B1A     		subs	r3, r3, r2
 1964 09d8 1B01     		lsls	r3, r3, #4
 1965 09da 0B44     		add	r3, r3, r1
 1966 09dc BC33     		adds	r3, r3, #188
 1967 09de 1B68     		ldr	r3, [r3]
 1968 09e0 1846     		mov	r0, r3
 1969 09e2 FFF7FEFF 		bl	__aeabi_i2f
 1970 09e6 0346     		mov	r3, r0
 1971 09e8 4FF08F41 		mov	r1, #1199570944
 1972 09ec 1846     		mov	r0, r3
 1973 09ee FFF7FEFF 		bl	__aeabi_fdiv
 1974 09f2 0346     		mov	r3, r0
 1975 09f4 1A46     		mov	r2, r3
 1976 09f6 07F12003 		add	r3, r7, #32
 1977 09fa 1A60     		str	r2, [r3]	@ float
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1978              		.loc 1 502 0
 1979 09fc 0023     		movs	r3, #0
 1980 09fe 87F8573C 		strb	r3, [r7, #3159]
 1981 0a02 1AE0     		b	.L131
 1982              	.L132:
 503:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 61


 1983              		.loc 1 503 0 discriminator 3
 1984 0a04 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 1985 0a08 3222     		movs	r2, #50
 1986 0a0a 02FB03F3 		mul	r3, r2, r3
 1987 0a0e 1A1D     		adds	r2, r3, #4
 1988 0a10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 1989 0a14 1A44     		add	r2, r2, r3
 1990 0a16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 1991 0a1a D31A     		subs	r3, r2, r3
 1992 0a1c 013B     		subs	r3, r3, #1
 1993 0a1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 1994 0a22 07F12001 		add	r1, r7, #32
 1995 0a26 0A44     		add	r2, r2, r1
 1996 0a28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1997 0a2a 07F15802 		add	r2, r7, #88
 1998 0a2e D154     		strb	r1, [r2, r3]
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 1999              		.loc 1 502 0 discriminator 3
 2000 0a30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2001 0a34 0133     		adds	r3, r3, #1
 2002 0a36 87F8573C 		strb	r3, [r7, #3159]
 2003              	.L131:
 502:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2004              		.loc 1 502 0 is_stmt 0 discriminator 1
 2005 0a3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2006 0a3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2007 0a42 9A42     		cmp	r2, r3
 2008 0a44 DED3     		bcc	.L132
 504:..\src/command_processing.c ****                             }
 505:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c / 65536;
 2009              		.loc 1 505 0 is_stmt 1
 2010 0a46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2011 0a4a A049     		ldr	r1, .L273
 2012 0a4c 1346     		mov	r3, r2
 2013 0a4e DB00     		lsls	r3, r3, #3
 2014 0a50 9B1A     		subs	r3, r3, r2
 2015 0a52 1B01     		lsls	r3, r3, #4
 2016 0a54 0B44     		add	r3, r3, r1
 2017 0a56 C033     		adds	r3, r3, #192
 2018 0a58 1B68     		ldr	r3, [r3]
 2019 0a5a 1846     		mov	r0, r3
 2020 0a5c FFF7FEFF 		bl	__aeabi_i2f
 2021 0a60 0346     		mov	r3, r0
 2022 0a62 4FF08F41 		mov	r1, #1199570944
 2023 0a66 1846     		mov	r0, r3
 2024 0a68 FFF7FEFF 		bl	__aeabi_fdiv
 2025 0a6c 0346     		mov	r3, r0
 2026 0a6e 1A46     		mov	r2, r3
 2027 0a70 07F12003 		add	r3, r7, #32
 2028 0a74 1A60     		str	r2, [r3]	@ float
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2029              		.loc 1 506 0
 2030 0a76 0023     		movs	r3, #0
 2031 0a78 87F8573C 		strb	r3, [r7, #3159]
 2032 0a7c 1DE0     		b	.L133
 2033              	.L134:
 507:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 62


 2034              		.loc 1 507 0 discriminator 3
 2035 0a7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2036 0a82 3222     		movs	r2, #50
 2037 0a84 02FB03F3 		mul	r3, r2, r3
 2038 0a88 1A1D     		adds	r2, r3, #4
 2039 0a8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2040 0a8e 1A44     		add	r2, r2, r3
 2041 0a90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2042 0a94 1A44     		add	r2, r2, r3
 2043 0a96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2044 0a9a D31A     		subs	r3, r2, r3
 2045 0a9c 013B     		subs	r3, r3, #1
 2046 0a9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2047 0aa2 07F12001 		add	r1, r7, #32
 2048 0aa6 0A44     		add	r2, r2, r1
 2049 0aa8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2050 0aaa 07F15802 		add	r2, r7, #88
 2051 0aae D154     		strb	r1, [r2, r3]
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2052              		.loc 1 506 0 discriminator 3
 2053 0ab0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2054 0ab4 0133     		adds	r3, r3, #1
 2055 0ab6 87F8573C 		strb	r3, [r7, #3159]
 2056              	.L133:
 506:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2057              		.loc 1 506 0 is_stmt 0 discriminator 1
 2058 0aba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2059 0abe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2060 0ac2 9A42     		cmp	r2, r3
 2061 0ac4 DBD3     		bcc	.L134
 508:..\src/command_processing.c ****                             }
 509:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c / 65536;
 2062              		.loc 1 509 0 is_stmt 1
 2063 0ac6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2064 0aca 8049     		ldr	r1, .L273
 2065 0acc 1346     		mov	r3, r2
 2066 0ace DB00     		lsls	r3, r3, #3
 2067 0ad0 9B1A     		subs	r3, r3, r2
 2068 0ad2 1B01     		lsls	r3, r3, #4
 2069 0ad4 0B44     		add	r3, r3, r1
 2070 0ad6 C433     		adds	r3, r3, #196
 2071 0ad8 1B68     		ldr	r3, [r3]
 2072 0ada 1846     		mov	r0, r3
 2073 0adc FFF7FEFF 		bl	__aeabi_i2f
 2074 0ae0 0346     		mov	r3, r0
 2075 0ae2 4FF08F41 		mov	r1, #1199570944
 2076 0ae6 1846     		mov	r0, r3
 2077 0ae8 FFF7FEFF 		bl	__aeabi_fdiv
 2078 0aec 0346     		mov	r3, r0
 2079 0aee 1A46     		mov	r2, r3
 2080 0af0 07F12003 		add	r3, r7, #32
 2081 0af4 1A60     		str	r2, [r3]	@ float
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2082              		.loc 1 510 0
 2083 0af6 0023     		movs	r3, #0
 2084 0af8 87F8573C 		strb	r3, [r7, #3159]
 2085 0afc 1EE0     		b	.L135
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 63


 2086              	.L136:
 511:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2087              		.loc 1 511 0 discriminator 3
 2088 0afe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2089 0b02 3222     		movs	r2, #50
 2090 0b04 02FB03F3 		mul	r3, r2, r3
 2091 0b08 1A1D     		adds	r2, r3, #4
 2092 0b0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2093 0b0e 5B00     		lsls	r3, r3, #1
 2094 0b10 1A44     		add	r2, r2, r3
 2095 0b12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2096 0b16 1A44     		add	r2, r2, r3
 2097 0b18 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2098 0b1c D31A     		subs	r3, r2, r3
 2099 0b1e 013B     		subs	r3, r3, #1
 2100 0b20 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2101 0b24 07F12001 		add	r1, r7, #32
 2102 0b28 0A44     		add	r2, r2, r1
 2103 0b2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2104 0b2c 07F15802 		add	r2, r7, #88
 2105 0b30 D154     		strb	r1, [r2, r3]
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2106              		.loc 1 510 0 discriminator 3
 2107 0b32 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2108 0b36 0133     		adds	r3, r3, #1
 2109 0b38 87F8573C 		strb	r3, [r7, #3159]
 2110              	.L135:
 510:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2111              		.loc 1 510 0 is_stmt 0 discriminator 1
 2112 0b3c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2113 0b40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2114 0b44 9A42     		cmp	r2, r3
 2115 0b46 DAD3     		bcc	.L136
 512:..\src/command_processing.c ****                             }
 513:..\src/command_processing.c ****                         }
 514:..\src/command_processing.c ****                         else {
 515:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_p_c_dl / 65536;
 516:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 517:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 518:..\src/command_processing.c ****                             }
 519:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_i_c_dl / 65536;
 520:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 521:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 522:..\src/command_processing.c ****                             }
 523:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[MOTOR_IDX].k_d_c_dl / 65536;
 524:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 525:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 526:..\src/command_processing.c ****                             }
 527:..\src/command_processing.c ****                         }            
 528:..\src/command_processing.c ****                         break;  
 2116              		.loc 1 528 0 is_stmt 1
 2117 0b48 00F01DBE 		b	.L104
 2118              	.L130:
 515:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2119              		.loc 1 515 0
 2120 0b4c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2121 0b50 5E49     		ldr	r1, .L273
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 64


 2122 0b52 1346     		mov	r3, r2
 2123 0b54 DB00     		lsls	r3, r3, #3
 2124 0b56 9B1A     		subs	r3, r3, r2
 2125 0b58 1B01     		lsls	r3, r3, #4
 2126 0b5a 0B44     		add	r3, r3, r1
 2127 0b5c D433     		adds	r3, r3, #212
 2128 0b5e 1B68     		ldr	r3, [r3]
 2129 0b60 1846     		mov	r0, r3
 2130 0b62 FFF7FEFF 		bl	__aeabi_i2f
 2131 0b66 0346     		mov	r3, r0
 2132 0b68 4FF08F41 		mov	r1, #1199570944
 2133 0b6c 1846     		mov	r0, r3
 2134 0b6e FFF7FEFF 		bl	__aeabi_fdiv
 2135 0b72 0346     		mov	r3, r0
 2136 0b74 1A46     		mov	r2, r3
 2137 0b76 07F12003 		add	r3, r7, #32
 2138 0b7a 1A60     		str	r2, [r3]	@ float
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2139              		.loc 1 516 0
 2140 0b7c 0023     		movs	r3, #0
 2141 0b7e 87F8573C 		strb	r3, [r7, #3159]
 2142 0b82 1AE0     		b	.L138
 2143              	.L139:
 517:..\src/command_processing.c ****                             }
 2144              		.loc 1 517 0 discriminator 3
 2145 0b84 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2146 0b88 3222     		movs	r2, #50
 2147 0b8a 02FB03F3 		mul	r3, r2, r3
 2148 0b8e 1A1D     		adds	r2, r3, #4
 2149 0b90 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2150 0b94 1A44     		add	r2, r2, r3
 2151 0b96 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2152 0b9a D31A     		subs	r3, r2, r3
 2153 0b9c 013B     		subs	r3, r3, #1
 2154 0b9e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2155 0ba2 07F12001 		add	r1, r7, #32
 2156 0ba6 0A44     		add	r2, r2, r1
 2157 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2158 0baa 07F15802 		add	r2, r7, #88
 2159 0bae D154     		strb	r1, [r2, r3]
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2160              		.loc 1 516 0 discriminator 3
 2161 0bb0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2162 0bb4 0133     		adds	r3, r3, #1
 2163 0bb6 87F8573C 		strb	r3, [r7, #3159]
 2164              	.L138:
 516:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2165              		.loc 1 516 0 is_stmt 0 discriminator 1
 2166 0bba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2167 0bbe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2168 0bc2 9A42     		cmp	r2, r3
 2169 0bc4 DED3     		bcc	.L139
 519:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2170              		.loc 1 519 0 is_stmt 1
 2171 0bc6 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2172 0bca 4049     		ldr	r1, .L273
 2173 0bcc 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 65


 2174 0bce DB00     		lsls	r3, r3, #3
 2175 0bd0 9B1A     		subs	r3, r3, r2
 2176 0bd2 1B01     		lsls	r3, r3, #4
 2177 0bd4 0B44     		add	r3, r3, r1
 2178 0bd6 D833     		adds	r3, r3, #216
 2179 0bd8 1B68     		ldr	r3, [r3]
 2180 0bda 1846     		mov	r0, r3
 2181 0bdc FFF7FEFF 		bl	__aeabi_i2f
 2182 0be0 0346     		mov	r3, r0
 2183 0be2 4FF08F41 		mov	r1, #1199570944
 2184 0be6 1846     		mov	r0, r3
 2185 0be8 FFF7FEFF 		bl	__aeabi_fdiv
 2186 0bec 0346     		mov	r3, r0
 2187 0bee 1A46     		mov	r2, r3
 2188 0bf0 07F12003 		add	r3, r7, #32
 2189 0bf4 1A60     		str	r2, [r3]	@ float
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2190              		.loc 1 520 0
 2191 0bf6 0023     		movs	r3, #0
 2192 0bf8 87F8573C 		strb	r3, [r7, #3159]
 2193 0bfc 1DE0     		b	.L140
 2194              	.L141:
 521:..\src/command_processing.c ****                             }
 2195              		.loc 1 521 0 discriminator 3
 2196 0bfe 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2197 0c02 3222     		movs	r2, #50
 2198 0c04 02FB03F3 		mul	r3, r2, r3
 2199 0c08 1A1D     		adds	r2, r3, #4
 2200 0c0a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2201 0c0e 1A44     		add	r2, r2, r3
 2202 0c10 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2203 0c14 1A44     		add	r2, r2, r3
 2204 0c16 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2205 0c1a D31A     		subs	r3, r2, r3
 2206 0c1c 013B     		subs	r3, r3, #1
 2207 0c1e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2208 0c22 07F12001 		add	r1, r7, #32
 2209 0c26 0A44     		add	r2, r2, r1
 2210 0c28 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2211 0c2a 07F15802 		add	r2, r7, #88
 2212 0c2e D154     		strb	r1, [r2, r3]
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2213              		.loc 1 520 0 discriminator 3
 2214 0c30 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2215 0c34 0133     		adds	r3, r3, #1
 2216 0c36 87F8573C 		strb	r3, [r7, #3159]
 2217              	.L140:
 520:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2218              		.loc 1 520 0 is_stmt 0 discriminator 1
 2219 0c3a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2220 0c3e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2221 0c42 9A42     		cmp	r2, r3
 2222 0c44 DBD3     		bcc	.L141
 523:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2223              		.loc 1 523 0 is_stmt 1
 2224 0c46 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2225 0c4a 2049     		ldr	r1, .L273
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 66


 2226 0c4c 1346     		mov	r3, r2
 2227 0c4e DB00     		lsls	r3, r3, #3
 2228 0c50 9B1A     		subs	r3, r3, r2
 2229 0c52 1B01     		lsls	r3, r3, #4
 2230 0c54 0B44     		add	r3, r3, r1
 2231 0c56 DC33     		adds	r3, r3, #220
 2232 0c58 1B68     		ldr	r3, [r3]
 2233 0c5a 1846     		mov	r0, r3
 2234 0c5c FFF7FEFF 		bl	__aeabi_i2f
 2235 0c60 0346     		mov	r3, r0
 2236 0c62 4FF08F41 		mov	r1, #1199570944
 2237 0c66 1846     		mov	r0, r3
 2238 0c68 FFF7FEFF 		bl	__aeabi_fdiv
 2239 0c6c 0346     		mov	r3, r0
 2240 0c6e 1A46     		mov	r2, r3
 2241 0c70 07F12003 		add	r3, r7, #32
 2242 0c74 1A60     		str	r2, [r3]	@ float
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2243              		.loc 1 524 0
 2244 0c76 0023     		movs	r3, #0
 2245 0c78 87F8573C 		strb	r3, [r7, #3159]
 2246 0c7c 1EE0     		b	.L142
 2247              	.L143:
 525:..\src/command_processing.c ****                             }
 2248              		.loc 1 525 0 discriminator 3
 2249 0c7e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2250 0c82 3222     		movs	r2, #50
 2251 0c84 02FB03F3 		mul	r3, r2, r3
 2252 0c88 1A1D     		adds	r2, r3, #4
 2253 0c8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2254 0c8e 5B00     		lsls	r3, r3, #1
 2255 0c90 1A44     		add	r2, r2, r3
 2256 0c92 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2257 0c96 1A44     		add	r2, r2, r3
 2258 0c98 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2259 0c9c D31A     		subs	r3, r2, r3
 2260 0c9e 013B     		subs	r3, r3, #1
 2261 0ca0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2262 0ca4 07F12001 		add	r1, r7, #32
 2263 0ca8 0A44     		add	r2, r2, r1
 2264 0caa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2265 0cac 07F15802 		add	r2, r7, #88
 2266 0cb0 D154     		strb	r1, [r2, r3]
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2267              		.loc 1 524 0 discriminator 3
 2268 0cb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2269 0cb6 0133     		adds	r3, r3, #1
 2270 0cb8 87F8573C 		strb	r3, [r7, #3159]
 2271              	.L142:
 524:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2272              		.loc 1 524 0 is_stmt 0 discriminator 1
 2273 0cbc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2274 0cc0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2275 0cc4 9A42     		cmp	r2, r3
 2276 0cc6 DAD3     		bcc	.L143
 2277              		.loc 1 528 0 is_stmt 1
 2278 0cc8 00F05DBD 		b	.L104
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 67


 2279              	.L274:
 2280              		.align	2
 2281              	.L273:
 2282 0ccc 00000000 		.word	c_mem
 2283              	.L109:
 529:..\src/command_processing.c **** 
 530:..\src/command_processing.c ****                     case 8:         //Measurement Offset
 531:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] >> c_m
 2284              		.loc 1 531 0
 2285 0cd0 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2286 0cd4 D149     		ldr	r1, .L275
 2287 0cd6 1346     		mov	r3, r2
 2288 0cd8 DB00     		lsls	r3, r3, #3
 2289 0cda 9B1A     		subs	r3, r3, r2
 2290 0cdc 1B01     		lsls	r3, r3, #4
 2291 0cde 0B44     		add	r3, r3, r1
 2292 0ce0 03F58873 		add	r3, r3, #272
 2293 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2294 0ce6 1846     		mov	r0, r3
 2295 0ce8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2296 0cec CC49     		ldr	r1, .L275+4
 2297 0cee 0346     		mov	r3, r0
 2298 0cf0 5B00     		lsls	r3, r3, #1
 2299 0cf2 0344     		add	r3, r3, r0
 2300 0cf4 9B00     		lsls	r3, r3, #2
 2301 0cf6 1344     		add	r3, r3, r2
 2302 0cf8 6633     		adds	r3, r3, #102
 2303 0cfa 51F82310 		ldr	r1, [r1, r3, lsl #2]
 2304 0cfe 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2305 0d02 C648     		ldr	r0, .L275
 2306 0d04 1346     		mov	r3, r2
 2307 0d06 DB00     		lsls	r3, r3, #3
 2308 0d08 9B1A     		subs	r3, r3, r2
 2309 0d0a 1B01     		lsls	r3, r3, #4
 2310 0d0c 0344     		add	r3, r3, r0
 2311 0d0e 03F58873 		add	r3, r3, #272
 2312 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2313 0d14 1C46     		mov	r4, r3
 2314 0d16 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2315 0d1a C148     		ldr	r0, .L275+4
 2316 0d1c 2346     		mov	r3, r4
 2317 0d1e 5B00     		lsls	r3, r3, #1
 2318 0d20 2344     		add	r3, r3, r4
 2319 0d22 1B01     		lsls	r3, r3, #4
 2320 0d24 0344     		add	r3, r3, r0
 2321 0d26 1344     		add	r3, r3, r2
 2322 0d28 03F29513 		addw	r3, r3, #405
 2323 0d2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2324 0d2e 41FA03F3 		asr	r3, r1, r3
 2325 0d32 1AB2     		sxth	r2, r3
 2326 0d34 07F11E03 		add	r3, r7, #30
 2327 0d38 1A80     		strh	r2, [r3]	@ movhi
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2328              		.loc 1 532 0
 2329 0d3a 0023     		movs	r3, #0
 2330 0d3c 87F8563C 		strb	r3, [r7, #3158]
 2331 0d40 21E0     		b	.L144
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 68


 2332              	.L145:
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2333              		.loc 1 533 0 discriminator 3
 2334 0d42 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2335 0d46 3222     		movs	r2, #50
 2336 0d48 02FB03F3 		mul	r3, r2, r3
 2337 0d4c 1A1D     		adds	r2, r3, #4
 2338 0d4e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2339 0d52 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 2340 0d56 01FB03F3 		mul	r3, r1, r3
 2341 0d5a 1A44     		add	r2, r2, r3
 2342 0d5c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2343 0d60 1A44     		add	r2, r2, r3
 2344 0d62 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2345 0d66 D31A     		subs	r3, r2, r3
 2346 0d68 013B     		subs	r3, r3, #1
 2347 0d6a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2348 0d6e 07F11E01 		add	r1, r7, #30
 2349 0d72 0A44     		add	r2, r2, r1
 2350 0d74 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2351 0d76 07F15802 		add	r2, r7, #88
 2352 0d7a D154     		strb	r1, [r2, r3]
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2353              		.loc 1 532 0 discriminator 3
 2354 0d7c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2355 0d80 0133     		adds	r3, r3, #1
 2356 0d82 87F8563C 		strb	r3, [r7, #3158]
 2357              	.L144:
 532:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2358              		.loc 1 532 0 is_stmt 0 discriminator 1
 2359 0d86 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2360 0d8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2361 0d8e 9A42     		cmp	r2, r3
 2362 0d90 D7D3     		bcc	.L145
 534:..\src/command_processing.c ****                         }
 535:..\src/command_processing.c ****                         break;
 2363              		.loc 1 535 0 is_stmt 1
 2364 0d92 00F0F8BC 		b	.L104
 2365              	.L110:
 536:..\src/command_processing.c ****                 
 537:..\src/command_processing.c ****                     case 11:        //Position limits
 538:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.motor[MO
 2366              		.loc 1 538 0
 2367 0d96 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2368 0d9a A149     		ldr	r1, .L275+4
 2369 0d9c 1346     		mov	r3, r2
 2370 0d9e DB00     		lsls	r3, r3, #3
 2371 0da0 9B1A     		subs	r3, r3, r2
 2372 0da2 1B01     		lsls	r3, r3, #4
 2373 0da4 0B44     		add	r3, r3, r1
 2374 0da6 E433     		adds	r3, r3, #228
 2375 0da8 1968     		ldr	r1, [r3]
 2376 0daa 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2377 0dae 9B48     		ldr	r0, .L275
 2378 0db0 1346     		mov	r3, r2
 2379 0db2 DB00     		lsls	r3, r3, #3
 2380 0db4 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 69


 2381 0db6 1B01     		lsls	r3, r3, #4
 2382 0db8 0344     		add	r3, r3, r0
 2383 0dba 03F58873 		add	r3, r3, #272
 2384 0dbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2385 0dc0 1846     		mov	r0, r3
 2386 0dc2 974A     		ldr	r2, .L275+4
 2387 0dc4 0346     		mov	r3, r0
 2388 0dc6 5B00     		lsls	r3, r3, #1
 2389 0dc8 0344     		add	r3, r3, r0
 2390 0dca 1B01     		lsls	r3, r3, #4
 2391 0dcc 1344     		add	r3, r3, r2
 2392 0dce 03F29513 		addw	r3, r3, #405
 2393 0dd2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2394 0dd4 41FA03F2 		asr	r2, r1, r3
 2395 0dd8 07F11803 		add	r3, r7, #24
 2396 0ddc 1A60     		str	r2, [r3]
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2397              		.loc 1 539 0
 2398 0dde 0023     		movs	r3, #0
 2399 0de0 87F8563C 		strb	r3, [r7, #3158]
 2400 0de4 1AE0     		b	.L146
 2401              	.L147:
 540:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2402              		.loc 1 540 0 discriminator 3
 2403 0de6 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2404 0dea 3222     		movs	r2, #50
 2405 0dec 02FB03F3 		mul	r3, r2, r3
 2406 0df0 1A1D     		adds	r2, r3, #4
 2407 0df2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2408 0df6 1A44     		add	r2, r2, r3
 2409 0df8 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2410 0dfc D31A     		subs	r3, r2, r3
 2411 0dfe 013B     		subs	r3, r3, #1
 2412 0e00 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2413 0e04 07F11801 		add	r1, r7, #24
 2414 0e08 0A44     		add	r2, r2, r1
 2415 0e0a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2416 0e0c 07F15802 		add	r2, r7, #88
 2417 0e10 D154     		strb	r1, [r2, r3]
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2418              		.loc 1 539 0 discriminator 3
 2419 0e12 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2420 0e16 0133     		adds	r3, r3, #1
 2421 0e18 87F8563C 		strb	r3, [r7, #3158]
 2422              	.L146:
 539:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2423              		.loc 1 539 0 is_stmt 0 discriminator 1
 2424 0e1c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2425 0e20 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2426 0e24 9A42     		cmp	r2, r3
 2427 0e26 DED3     		bcc	.L147
 541:..\src/command_processing.c ****                         }
 542:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.motor[MO
 2428              		.loc 1 542 0 is_stmt 1
 2429 0e28 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2430 0e2c 7C49     		ldr	r1, .L275+4
 2431 0e2e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 70


 2432 0e30 DB00     		lsls	r3, r3, #3
 2433 0e32 9B1A     		subs	r3, r3, r2
 2434 0e34 1B01     		lsls	r3, r3, #4
 2435 0e36 0B44     		add	r3, r3, r1
 2436 0e38 E833     		adds	r3, r3, #232
 2437 0e3a 1968     		ldr	r1, [r3]
 2438 0e3c 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2439 0e40 7648     		ldr	r0, .L275
 2440 0e42 1346     		mov	r3, r2
 2441 0e44 DB00     		lsls	r3, r3, #3
 2442 0e46 9B1A     		subs	r3, r3, r2
 2443 0e48 1B01     		lsls	r3, r3, #4
 2444 0e4a 0344     		add	r3, r3, r0
 2445 0e4c 03F58873 		add	r3, r3, #272
 2446 0e50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2447 0e52 1846     		mov	r0, r3
 2448 0e54 724A     		ldr	r2, .L275+4
 2449 0e56 0346     		mov	r3, r0
 2450 0e58 5B00     		lsls	r3, r3, #1
 2451 0e5a 0344     		add	r3, r3, r0
 2452 0e5c 1B01     		lsls	r3, r3, #4
 2453 0e5e 1344     		add	r3, r3, r2
 2454 0e60 03F29513 		addw	r3, r3, #405
 2455 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2456 0e66 41FA03F2 		asr	r2, r1, r3
 2457 0e6a 07F11803 		add	r3, r7, #24
 2458 0e6e 1A60     		str	r2, [r3]
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2459              		.loc 1 543 0
 2460 0e70 0023     		movs	r3, #0
 2461 0e72 87F8563C 		strb	r3, [r7, #3158]
 2462 0e76 1DE0     		b	.L148
 2463              	.L149:
 544:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 2464              		.loc 1 544 0 discriminator 3
 2465 0e78 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2466 0e7c 3222     		movs	r2, #50
 2467 0e7e 02FB03F3 		mul	r3, r2, r3
 2468 0e82 1A1D     		adds	r2, r3, #4
 2469 0e84 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2470 0e88 1A44     		add	r2, r2, r3
 2471 0e8a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2472 0e8e 1A44     		add	r2, r2, r3
 2473 0e90 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2474 0e94 D31A     		subs	r3, r2, r3
 2475 0e96 013B     		subs	r3, r3, #1
 2476 0e98 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2477 0e9c 07F11801 		add	r1, r7, #24
 2478 0ea0 0A44     		add	r2, r2, r1
 2479 0ea2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2480 0ea4 07F15802 		add	r2, r7, #88
 2481 0ea8 D154     		strb	r1, [r2, r3]
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2482              		.loc 1 543 0 discriminator 3
 2483 0eaa 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2484 0eae 0133     		adds	r3, r3, #1
 2485 0eb0 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 71


 2486              	.L148:
 543:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2487              		.loc 1 543 0 is_stmt 0 discriminator 1
 2488 0eb4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2489 0eb8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2490 0ebc 9A42     		cmp	r2, r3
 2491 0ebe DBD3     		bcc	.L149
 545:..\src/command_processing.c ****                         }
 546:..\src/command_processing.c ****                         break;            
 2492              		.loc 1 546 0 is_stmt 1
 2493 0ec0 00F061BC 		b	.L104
 2494              	.L111:
 547:..\src/command_processing.c **** 
 548:..\src/command_processing.c ****                     case 23:        //Rest Position
 549:..\src/command_processing.c ****                         aux_int32 = (c_mem.SH.rest_pos >> c_mem.enc[g_mem.motor[MOTOR_IDX].encoder_
 2495              		.loc 1 549 0
 2496 0ec4 564B     		ldr	r3, .L275+4
 2497 0ec6 D3F8A012 		ldr	r1, [r3, #672]
 2498 0eca 97F84F2C 		ldrb	r2, [r7, #3151]	@ zero_extendqisi2
 2499 0ece 5348     		ldr	r0, .L275
 2500 0ed0 1346     		mov	r3, r2
 2501 0ed2 DB00     		lsls	r3, r3, #3
 2502 0ed4 9B1A     		subs	r3, r3, r2
 2503 0ed6 1B01     		lsls	r3, r3, #4
 2504 0ed8 0344     		add	r3, r3, r0
 2505 0eda 03F58873 		add	r3, r3, #272
 2506 0ede 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2507 0ee0 1846     		mov	r0, r3
 2508 0ee2 4F4A     		ldr	r2, .L275+4
 2509 0ee4 0346     		mov	r3, r0
 2510 0ee6 5B00     		lsls	r3, r3, #1
 2511 0ee8 0344     		add	r3, r3, r0
 2512 0eea 1B01     		lsls	r3, r3, #4
 2513 0eec 1344     		add	r3, r3, r2
 2514 0eee 03F29513 		addw	r3, r3, #405
 2515 0ef2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2516 0ef4 41FA03F2 		asr	r2, r1, r3
 2517 0ef8 07F11803 		add	r3, r7, #24
 2518 0efc 1A60     		str	r2, [r3]
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2519              		.loc 1 550 0
 2520 0efe 0023     		movs	r3, #0
 2521 0f00 87F8563C 		strb	r3, [r7, #3158]
 2522 0f04 1AE0     		b	.L150
 2523              	.L151:
 551:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 2524              		.loc 1 551 0 discriminator 3
 2525 0f06 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2526 0f0a 3222     		movs	r2, #50
 2527 0f0c 02FB03F3 		mul	r3, r2, r3
 2528 0f10 1A1D     		adds	r2, r3, #4
 2529 0f12 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2530 0f16 1A44     		add	r2, r2, r3
 2531 0f18 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2532 0f1c D31A     		subs	r3, r2, r3
 2533 0f1e 013B     		subs	r3, r3, #1
 2534 0f20 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 72


 2535 0f24 07F11801 		add	r1, r7, #24
 2536 0f28 0A44     		add	r2, r2, r1
 2537 0f2a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2538 0f2c 07F15802 		add	r2, r7, #88
 2539 0f30 D154     		strb	r1, [r2, r3]
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2540              		.loc 1 550 0 discriminator 3
 2541 0f32 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 2542 0f36 0133     		adds	r3, r3, #1
 2543 0f38 87F8563C 		strb	r3, [r7, #3158]
 2544              	.L150:
 550:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2545              		.loc 1 550 0 is_stmt 0 discriminator 1
 2546 0f3c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 2547 0f40 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2548 0f44 9A42     		cmp	r2, r3
 2549 0f46 DED3     		bcc	.L151
 552:..\src/command_processing.c ****                         }
 553:..\src/command_processing.c ****                         break; 
 2550              		.loc 1 553 0 is_stmt 1
 2551 0f48 00F01DBC 		b	.L104
 2552              	.L112:
 554:..\src/command_processing.c ****                         
 555:..\src/command_processing.c ****                     case 44:         // Second Motor Position PID
 556:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2553              		.loc 1 556 0
 2554 0f4c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2555 0f50 3349     		ldr	r1, .L275+4
 2556 0f52 1346     		mov	r3, r2
 2557 0f54 DB00     		lsls	r3, r3, #3
 2558 0f56 9B1A     		subs	r3, r3, r2
 2559 0f58 1B01     		lsls	r3, r3, #4
 2560 0f5a 0B44     		add	r3, r3, r1
 2561 0f5c 03F20F13 		addw	r3, r3, #271
 2562 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2563 0f62 032B     		cmp	r3, #3
 2564 0f64 00F0C480 		beq	.L152
 557:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p / 65536;
 2565              		.loc 1 557 0
 2566 0f68 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2567 0f6c 2C49     		ldr	r1, .L275+4
 2568 0f6e 1346     		mov	r3, r2
 2569 0f70 DB00     		lsls	r3, r3, #3
 2570 0f72 9B1A     		subs	r3, r3, r2
 2571 0f74 1B01     		lsls	r3, r3, #4
 2572 0f76 0B44     		add	r3, r3, r1
 2573 0f78 B033     		adds	r3, r3, #176
 2574 0f7a 1B68     		ldr	r3, [r3]
 2575 0f7c 1846     		mov	r0, r3
 2576 0f7e FFF7FEFF 		bl	__aeabi_i2f
 2577 0f82 0346     		mov	r3, r0
 2578 0f84 4FF08F41 		mov	r1, #1199570944
 2579 0f88 1846     		mov	r0, r3
 2580 0f8a FFF7FEFF 		bl	__aeabi_fdiv
 2581 0f8e 0346     		mov	r3, r0
 2582 0f90 1A46     		mov	r2, r3
 2583 0f92 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 73


 2584 0f96 1A60     		str	r2, [r3]	@ float
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2585              		.loc 1 558 0
 2586 0f98 0023     		movs	r3, #0
 2587 0f9a 87F8573C 		strb	r3, [r7, #3159]
 2588 0f9e 1AE0     		b	.L153
 2589              	.L154:
 559:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2590              		.loc 1 559 0 discriminator 3
 2591 0fa0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2592 0fa4 3222     		movs	r2, #50
 2593 0fa6 02FB03F3 		mul	r3, r2, r3
 2594 0faa 1A1D     		adds	r2, r3, #4
 2595 0fac 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2596 0fb0 1A44     		add	r2, r2, r3
 2597 0fb2 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2598 0fb6 D31A     		subs	r3, r2, r3
 2599 0fb8 013B     		subs	r3, r3, #1
 2600 0fba 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2601 0fbe 07F12001 		add	r1, r7, #32
 2602 0fc2 0A44     		add	r2, r2, r1
 2603 0fc4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2604 0fc6 07F15802 		add	r2, r7, #88
 2605 0fca D154     		strb	r1, [r2, r3]
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2606              		.loc 1 558 0 discriminator 3
 2607 0fcc 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2608 0fd0 0133     		adds	r3, r3, #1
 2609 0fd2 87F8573C 		strb	r3, [r7, #3159]
 2610              	.L153:
 558:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2611              		.loc 1 558 0 is_stmt 0 discriminator 1
 2612 0fd6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2613 0fda 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2614 0fde 9A42     		cmp	r2, r3
 2615 0fe0 DED3     		bcc	.L154
 560:..\src/command_processing.c ****                             }
 561:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i / 65536;
 2616              		.loc 1 561 0 is_stmt 1
 2617 0fe2 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2618 0fe6 0E49     		ldr	r1, .L275+4
 2619 0fe8 1346     		mov	r3, r2
 2620 0fea DB00     		lsls	r3, r3, #3
 2621 0fec 9B1A     		subs	r3, r3, r2
 2622 0fee 1B01     		lsls	r3, r3, #4
 2623 0ff0 0B44     		add	r3, r3, r1
 2624 0ff2 B433     		adds	r3, r3, #180
 2625 0ff4 1B68     		ldr	r3, [r3]
 2626 0ff6 1846     		mov	r0, r3
 2627 0ff8 FFF7FEFF 		bl	__aeabi_i2f
 2628 0ffc 0346     		mov	r3, r0
 2629 0ffe 4FF08F41 		mov	r1, #1199570944
 2630 1002 1846     		mov	r0, r3
 2631 1004 FFF7FEFF 		bl	__aeabi_fdiv
 2632 1008 0346     		mov	r3, r0
 2633 100a 1A46     		mov	r2, r3
 2634 100c 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 74


 2635 1010 1A60     		str	r2, [r3]	@ float
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2636              		.loc 1 562 0
 2637 1012 0023     		movs	r3, #0
 2638 1014 87F8573C 		strb	r3, [r7, #3159]
 2639 1018 22E0     		b	.L155
 2640              	.L276:
 2641 101a 00BF     		.align	2
 2642              	.L275:
 2643 101c 00000000 		.word	g_mem
 2644 1020 00000000 		.word	c_mem
 2645              	.L156:
 563:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2646              		.loc 1 563 0 discriminator 3
 2647 1024 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2648 1028 3222     		movs	r2, #50
 2649 102a 02FB03F3 		mul	r3, r2, r3
 2650 102e 1A1D     		adds	r2, r3, #4
 2651 1030 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2652 1034 1A44     		add	r2, r2, r3
 2653 1036 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2654 103a 1A44     		add	r2, r2, r3
 2655 103c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2656 1040 D31A     		subs	r3, r2, r3
 2657 1042 013B     		subs	r3, r3, #1
 2658 1044 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2659 1048 07F12001 		add	r1, r7, #32
 2660 104c 0A44     		add	r2, r2, r1
 2661 104e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2662 1050 07F15802 		add	r2, r7, #88
 2663 1054 D154     		strb	r1, [r2, r3]
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2664              		.loc 1 562 0 discriminator 3
 2665 1056 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2666 105a 0133     		adds	r3, r3, #1
 2667 105c 87F8573C 		strb	r3, [r7, #3159]
 2668              	.L155:
 562:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2669              		.loc 1 562 0 is_stmt 0 discriminator 1
 2670 1060 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2671 1064 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2672 1068 9A42     		cmp	r2, r3
 2673 106a DBD3     		bcc	.L156
 564:..\src/command_processing.c ****                             }
 565:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d / 65536;
 2674              		.loc 1 565 0 is_stmt 1
 2675 106c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2676 1070 D249     		ldr	r1, .L277
 2677 1072 1346     		mov	r3, r2
 2678 1074 DB00     		lsls	r3, r3, #3
 2679 1076 9B1A     		subs	r3, r3, r2
 2680 1078 1B01     		lsls	r3, r3, #4
 2681 107a 0B44     		add	r3, r3, r1
 2682 107c B833     		adds	r3, r3, #184
 2683 107e 1B68     		ldr	r3, [r3]
 2684 1080 1846     		mov	r0, r3
 2685 1082 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 75


 2686 1086 0346     		mov	r3, r0
 2687 1088 4FF08F41 		mov	r1, #1199570944
 2688 108c 1846     		mov	r0, r3
 2689 108e FFF7FEFF 		bl	__aeabi_fdiv
 2690 1092 0346     		mov	r3, r0
 2691 1094 1A46     		mov	r2, r3
 2692 1096 07F12003 		add	r3, r7, #32
 2693 109a 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2694              		.loc 1 566 0
 2695 109c 0023     		movs	r3, #0
 2696 109e 87F8573C 		strb	r3, [r7, #3159]
 2697 10a2 1EE0     		b	.L157
 2698              	.L158:
 567:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2699              		.loc 1 567 0 discriminator 3
 2700 10a4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2701 10a8 3222     		movs	r2, #50
 2702 10aa 02FB03F3 		mul	r3, r2, r3
 2703 10ae 1A1D     		adds	r2, r3, #4
 2704 10b0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2705 10b4 5B00     		lsls	r3, r3, #1
 2706 10b6 1A44     		add	r2, r2, r3
 2707 10b8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2708 10bc 1A44     		add	r2, r2, r3
 2709 10be 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2710 10c2 D31A     		subs	r3, r2, r3
 2711 10c4 013B     		subs	r3, r3, #1
 2712 10c6 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2713 10ca 07F12001 		add	r1, r7, #32
 2714 10ce 0A44     		add	r2, r2, r1
 2715 10d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2716 10d2 07F15802 		add	r2, r7, #88
 2717 10d6 D154     		strb	r1, [r2, r3]
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2718              		.loc 1 566 0 discriminator 3
 2719 10d8 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2720 10dc 0133     		adds	r3, r3, #1
 2721 10de 87F8573C 		strb	r3, [r7, #3159]
 2722              	.L157:
 566:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2723              		.loc 1 566 0 is_stmt 0 discriminator 1
 2724 10e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2725 10e6 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2726 10ea 9A42     		cmp	r2, r3
 2727 10ec DAD3     		bcc	.L158
 568:..\src/command_processing.c ****                             } 
 569:..\src/command_processing.c ****                         }
 570:..\src/command_processing.c ****                         else {
 571:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_dl / 65536;
 572:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 573:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 574:..\src/command_processing.c ****                             }
 575:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_dl / 65536;
 576:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 577:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 578:..\src/command_processing.c ****                             }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 76


 579:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_dl / 65536;
 580:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 581:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 582:..\src/command_processing.c ****                             }
 583:..\src/command_processing.c ****                         }
 584:..\src/command_processing.c ****                         break;
 2728              		.loc 1 584 0 is_stmt 1
 2729 10ee 4AE3     		b	.L104
 2730              	.L152:
 571:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2731              		.loc 1 571 0
 2732 10f0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2733 10f4 B149     		ldr	r1, .L277
 2734 10f6 1346     		mov	r3, r2
 2735 10f8 DB00     		lsls	r3, r3, #3
 2736 10fa 9B1A     		subs	r3, r3, r2
 2737 10fc 1B01     		lsls	r3, r3, #4
 2738 10fe 0B44     		add	r3, r3, r1
 2739 1100 C833     		adds	r3, r3, #200
 2740 1102 1B68     		ldr	r3, [r3]
 2741 1104 1846     		mov	r0, r3
 2742 1106 FFF7FEFF 		bl	__aeabi_i2f
 2743 110a 0346     		mov	r3, r0
 2744 110c 4FF08F41 		mov	r1, #1199570944
 2745 1110 1846     		mov	r0, r3
 2746 1112 FFF7FEFF 		bl	__aeabi_fdiv
 2747 1116 0346     		mov	r3, r0
 2748 1118 1A46     		mov	r2, r3
 2749 111a 07F12003 		add	r3, r7, #32
 2750 111e 1A60     		str	r2, [r3]	@ float
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2751              		.loc 1 572 0
 2752 1120 0023     		movs	r3, #0
 2753 1122 87F8573C 		strb	r3, [r7, #3159]
 2754 1126 1AE0     		b	.L160
 2755              	.L161:
 573:..\src/command_processing.c ****                             }
 2756              		.loc 1 573 0 discriminator 3
 2757 1128 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2758 112c 3222     		movs	r2, #50
 2759 112e 02FB03F3 		mul	r3, r2, r3
 2760 1132 1A1D     		adds	r2, r3, #4
 2761 1134 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2762 1138 1A44     		add	r2, r2, r3
 2763 113a 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2764 113e D31A     		subs	r3, r2, r3
 2765 1140 013B     		subs	r3, r3, #1
 2766 1142 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2767 1146 07F12001 		add	r1, r7, #32
 2768 114a 0A44     		add	r2, r2, r1
 2769 114c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2770 114e 07F15802 		add	r2, r7, #88
 2771 1152 D154     		strb	r1, [r2, r3]
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2772              		.loc 1 572 0 discriminator 3
 2773 1154 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2774 1158 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 77


 2775 115a 87F8573C 		strb	r3, [r7, #3159]
 2776              	.L160:
 572:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 2777              		.loc 1 572 0 is_stmt 0 discriminator 1
 2778 115e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2779 1162 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2780 1166 9A42     		cmp	r2, r3
 2781 1168 DED3     		bcc	.L161
 575:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2782              		.loc 1 575 0 is_stmt 1
 2783 116a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2784 116e 9349     		ldr	r1, .L277
 2785 1170 1346     		mov	r3, r2
 2786 1172 DB00     		lsls	r3, r3, #3
 2787 1174 9B1A     		subs	r3, r3, r2
 2788 1176 1B01     		lsls	r3, r3, #4
 2789 1178 0B44     		add	r3, r3, r1
 2790 117a CC33     		adds	r3, r3, #204
 2791 117c 1B68     		ldr	r3, [r3]
 2792 117e 1846     		mov	r0, r3
 2793 1180 FFF7FEFF 		bl	__aeabi_i2f
 2794 1184 0346     		mov	r3, r0
 2795 1186 4FF08F41 		mov	r1, #1199570944
 2796 118a 1846     		mov	r0, r3
 2797 118c FFF7FEFF 		bl	__aeabi_fdiv
 2798 1190 0346     		mov	r3, r0
 2799 1192 1A46     		mov	r2, r3
 2800 1194 07F12003 		add	r3, r7, #32
 2801 1198 1A60     		str	r2, [r3]	@ float
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2802              		.loc 1 576 0
 2803 119a 0023     		movs	r3, #0
 2804 119c 87F8573C 		strb	r3, [r7, #3159]
 2805 11a0 1DE0     		b	.L162
 2806              	.L163:
 577:..\src/command_processing.c ****                             }
 2807              		.loc 1 577 0 discriminator 3
 2808 11a2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2809 11a6 3222     		movs	r2, #50
 2810 11a8 02FB03F3 		mul	r3, r2, r3
 2811 11ac 1A1D     		adds	r2, r3, #4
 2812 11ae 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2813 11b2 1A44     		add	r2, r2, r3
 2814 11b4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2815 11b8 1A44     		add	r2, r2, r3
 2816 11ba 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2817 11be D31A     		subs	r3, r2, r3
 2818 11c0 013B     		subs	r3, r3, #1
 2819 11c2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2820 11c6 07F12001 		add	r1, r7, #32
 2821 11ca 0A44     		add	r2, r2, r1
 2822 11cc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2823 11ce 07F15802 		add	r2, r7, #88
 2824 11d2 D154     		strb	r1, [r2, r3]
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2825              		.loc 1 576 0 discriminator 3
 2826 11d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 78


 2827 11d8 0133     		adds	r3, r3, #1
 2828 11da 87F8573C 		strb	r3, [r7, #3159]
 2829              	.L162:
 576:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 2830              		.loc 1 576 0 is_stmt 0 discriminator 1
 2831 11de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2832 11e2 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2833 11e6 9A42     		cmp	r2, r3
 2834 11e8 DBD3     		bcc	.L163
 579:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2835              		.loc 1 579 0 is_stmt 1
 2836 11ea 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2837 11ee 7349     		ldr	r1, .L277
 2838 11f0 1346     		mov	r3, r2
 2839 11f2 DB00     		lsls	r3, r3, #3
 2840 11f4 9B1A     		subs	r3, r3, r2
 2841 11f6 1B01     		lsls	r3, r3, #4
 2842 11f8 0B44     		add	r3, r3, r1
 2843 11fa D033     		adds	r3, r3, #208
 2844 11fc 1B68     		ldr	r3, [r3]
 2845 11fe 1846     		mov	r0, r3
 2846 1200 FFF7FEFF 		bl	__aeabi_i2f
 2847 1204 0346     		mov	r3, r0
 2848 1206 4FF08F41 		mov	r1, #1199570944
 2849 120a 1846     		mov	r0, r3
 2850 120c FFF7FEFF 		bl	__aeabi_fdiv
 2851 1210 0346     		mov	r3, r0
 2852 1212 1A46     		mov	r2, r3
 2853 1214 07F12003 		add	r3, r7, #32
 2854 1218 1A60     		str	r2, [r3]	@ float
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2855              		.loc 1 580 0
 2856 121a 0023     		movs	r3, #0
 2857 121c 87F8573C 		strb	r3, [r7, #3159]
 2858 1220 1EE0     		b	.L164
 2859              	.L165:
 581:..\src/command_processing.c ****                             }
 2860              		.loc 1 581 0 discriminator 3
 2861 1222 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2862 1226 3222     		movs	r2, #50
 2863 1228 02FB03F3 		mul	r3, r2, r3
 2864 122c 1A1D     		adds	r2, r3, #4
 2865 122e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2866 1232 5B00     		lsls	r3, r3, #1
 2867 1234 1A44     		add	r2, r2, r3
 2868 1236 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2869 123a 1A44     		add	r2, r2, r3
 2870 123c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2871 1240 D31A     		subs	r3, r2, r3
 2872 1242 013B     		subs	r3, r3, #1
 2873 1244 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2874 1248 07F12001 		add	r1, r7, #32
 2875 124c 0A44     		add	r2, r2, r1
 2876 124e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2877 1250 07F15802 		add	r2, r7, #88
 2878 1254 D154     		strb	r1, [r2, r3]
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 79


 2879              		.loc 1 580 0 discriminator 3
 2880 1256 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2881 125a 0133     		adds	r3, r3, #1
 2882 125c 87F8573C 		strb	r3, [r7, #3159]
 2883              	.L164:
 580:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 2884              		.loc 1 580 0 is_stmt 0 discriminator 1
 2885 1260 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2886 1264 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2887 1268 9A42     		cmp	r2, r3
 2888 126a DAD3     		bcc	.L165
 2889              		.loc 1 584 0 is_stmt 1
 2890 126c 8BE2     		b	.L104
 2891              	.L113:
 585:..\src/command_processing.c ****                         
 586:..\src/command_processing.c ****                     case 45:         // Second Motor Current PID
 587:..\src/command_processing.c ****                         if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 2892              		.loc 1 587 0
 2893 126e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2894 1272 5249     		ldr	r1, .L277
 2895 1274 1346     		mov	r3, r2
 2896 1276 DB00     		lsls	r3, r3, #3
 2897 1278 9B1A     		subs	r3, r3, r2
 2898 127a 1B01     		lsls	r3, r3, #4
 2899 127c 0B44     		add	r3, r3, r1
 2900 127e 03F20F13 		addw	r3, r3, #271
 2901 1282 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2902 1284 032B     		cmp	r3, #3
 2903 1286 00F0C180 		beq	.L166
 588:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c / 65536;
 2904              		.loc 1 588 0
 2905 128a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2906 128e 4B49     		ldr	r1, .L277
 2907 1290 1346     		mov	r3, r2
 2908 1292 DB00     		lsls	r3, r3, #3
 2909 1294 9B1A     		subs	r3, r3, r2
 2910 1296 1B01     		lsls	r3, r3, #4
 2911 1298 0B44     		add	r3, r3, r1
 2912 129a BC33     		adds	r3, r3, #188
 2913 129c 1B68     		ldr	r3, [r3]
 2914 129e 1846     		mov	r0, r3
 2915 12a0 FFF7FEFF 		bl	__aeabi_i2f
 2916 12a4 0346     		mov	r3, r0
 2917 12a6 4FF08F41 		mov	r1, #1199570944
 2918 12aa 1846     		mov	r0, r3
 2919 12ac FFF7FEFF 		bl	__aeabi_fdiv
 2920 12b0 0346     		mov	r3, r0
 2921 12b2 1A46     		mov	r2, r3
 2922 12b4 07F12003 		add	r3, r7, #32
 2923 12b8 1A60     		str	r2, [r3]	@ float
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2924              		.loc 1 589 0
 2925 12ba 0023     		movs	r3, #0
 2926 12bc 87F8573C 		strb	r3, [r7, #3159]
 2927 12c0 1AE0     		b	.L167
 2928              	.L168:
 590:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 80


 2929              		.loc 1 590 0 discriminator 3
 2930 12c2 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2931 12c6 3222     		movs	r2, #50
 2932 12c8 02FB03F3 		mul	r3, r2, r3
 2933 12cc 1A1D     		adds	r2, r3, #4
 2934 12ce 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2935 12d2 1A44     		add	r2, r2, r3
 2936 12d4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2937 12d8 D31A     		subs	r3, r2, r3
 2938 12da 013B     		subs	r3, r3, #1
 2939 12dc 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2940 12e0 07F12001 		add	r1, r7, #32
 2941 12e4 0A44     		add	r2, r2, r1
 2942 12e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2943 12e8 07F15802 		add	r2, r7, #88
 2944 12ec D154     		strb	r1, [r2, r3]
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2945              		.loc 1 589 0 discriminator 3
 2946 12ee 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2947 12f2 0133     		adds	r3, r3, #1
 2948 12f4 87F8573C 		strb	r3, [r7, #3159]
 2949              	.L167:
 589:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2950              		.loc 1 589 0 is_stmt 0 discriminator 1
 2951 12f8 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2952 12fc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2953 1300 9A42     		cmp	r2, r3
 2954 1302 DED3     		bcc	.L168
 591:..\src/command_processing.c ****                             }
 592:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c / 65536;
 2955              		.loc 1 592 0 is_stmt 1
 2956 1304 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 2957 1308 2C49     		ldr	r1, .L277
 2958 130a 1346     		mov	r3, r2
 2959 130c DB00     		lsls	r3, r3, #3
 2960 130e 9B1A     		subs	r3, r3, r2
 2961 1310 1B01     		lsls	r3, r3, #4
 2962 1312 0B44     		add	r3, r3, r1
 2963 1314 C033     		adds	r3, r3, #192
 2964 1316 1B68     		ldr	r3, [r3]
 2965 1318 1846     		mov	r0, r3
 2966 131a FFF7FEFF 		bl	__aeabi_i2f
 2967 131e 0346     		mov	r3, r0
 2968 1320 4FF08F41 		mov	r1, #1199570944
 2969 1324 1846     		mov	r0, r3
 2970 1326 FFF7FEFF 		bl	__aeabi_fdiv
 2971 132a 0346     		mov	r3, r0
 2972 132c 1A46     		mov	r2, r3
 2973 132e 07F12003 		add	r3, r7, #32
 2974 1332 1A60     		str	r2, [r3]	@ float
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2975              		.loc 1 593 0
 2976 1334 0023     		movs	r3, #0
 2977 1336 87F8573C 		strb	r3, [r7, #3159]
 2978 133a 1DE0     		b	.L169
 2979              	.L170:
 594:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 81


 2980              		.loc 1 594 0 discriminator 3
 2981 133c 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 2982 1340 3222     		movs	r2, #50
 2983 1342 02FB03F3 		mul	r3, r2, r3
 2984 1346 1A1D     		adds	r2, r3, #4
 2985 1348 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2986 134c 1A44     		add	r2, r2, r3
 2987 134e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 2988 1352 1A44     		add	r2, r2, r3
 2989 1354 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 2990 1358 D31A     		subs	r3, r2, r3
 2991 135a 013B     		subs	r3, r3, #1
 2992 135c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 2993 1360 07F12001 		add	r1, r7, #32
 2994 1364 0A44     		add	r2, r2, r1
 2995 1366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2996 1368 07F15802 		add	r2, r7, #88
 2997 136c D154     		strb	r1, [r2, r3]
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 2998              		.loc 1 593 0 discriminator 3
 2999 136e 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3000 1372 0133     		adds	r3, r3, #1
 3001 1374 87F8573C 		strb	r3, [r7, #3159]
 3002              	.L169:
 593:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3003              		.loc 1 593 0 is_stmt 0 discriminator 1
 3004 1378 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3005 137c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3006 1380 9A42     		cmp	r2, r3
 3007 1382 DBD3     		bcc	.L170
 595:..\src/command_processing.c ****                             }
 596:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c / 65536;
 3008              		.loc 1 596 0 is_stmt 1
 3009 1384 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3010 1388 0C49     		ldr	r1, .L277
 3011 138a 1346     		mov	r3, r2
 3012 138c DB00     		lsls	r3, r3, #3
 3013 138e 9B1A     		subs	r3, r3, r2
 3014 1390 1B01     		lsls	r3, r3, #4
 3015 1392 0B44     		add	r3, r3, r1
 3016 1394 C433     		adds	r3, r3, #196
 3017 1396 1B68     		ldr	r3, [r3]
 3018 1398 1846     		mov	r0, r3
 3019 139a FFF7FEFF 		bl	__aeabi_i2f
 3020 139e 0346     		mov	r3, r0
 3021 13a0 4FF08F41 		mov	r1, #1199570944
 3022 13a4 1846     		mov	r0, r3
 3023 13a6 FFF7FEFF 		bl	__aeabi_fdiv
 3024 13aa 0346     		mov	r3, r0
 3025 13ac 1A46     		mov	r2, r3
 3026 13ae 07F12003 		add	r3, r7, #32
 3027 13b2 1A60     		str	r2, [r3]	@ float
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3028              		.loc 1 597 0
 3029 13b4 0023     		movs	r3, #0
 3030 13b6 87F8573C 		strb	r3, [r7, #3159]
 3031 13ba 20E0     		b	.L171
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 82


 3032              	.L278:
 3033              		.align	2
 3034              	.L277:
 3035 13bc 00000000 		.word	c_mem
 3036              	.L172:
 598:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3037              		.loc 1 598 0 discriminator 3
 3038 13c0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3039 13c4 3222     		movs	r2, #50
 3040 13c6 02FB03F3 		mul	r3, r2, r3
 3041 13ca 1A1D     		adds	r2, r3, #4
 3042 13cc 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3043 13d0 5B00     		lsls	r3, r3, #1
 3044 13d2 1A44     		add	r2, r2, r3
 3045 13d4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3046 13d8 1A44     		add	r2, r2, r3
 3047 13da 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3048 13de D31A     		subs	r3, r2, r3
 3049 13e0 013B     		subs	r3, r3, #1
 3050 13e2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3051 13e6 07F12001 		add	r1, r7, #32
 3052 13ea 0A44     		add	r2, r2, r1
 3053 13ec 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3054 13ee 07F15802 		add	r2, r7, #88
 3055 13f2 D154     		strb	r1, [r2, r3]
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3056              		.loc 1 597 0 discriminator 3
 3057 13f4 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3058 13f8 0133     		adds	r3, r3, #1
 3059 13fa 87F8573C 		strb	r3, [r7, #3159]
 3060              	.L171:
 597:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3061              		.loc 1 597 0 is_stmt 0 discriminator 1
 3062 13fe 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3063 1402 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3064 1406 9A42     		cmp	r2, r3
 3065 1408 DAD3     		bcc	.L172
 599:..\src/command_processing.c ****                             }
 600:..\src/command_processing.c ****                         }
 601:..\src/command_processing.c ****                         else {
 602:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl / 65536;
 603:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 604:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 605:..\src/command_processing.c ****                             }
 606:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl / 65536;
 607:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 608:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 609:..\src/command_processing.c ****                             }
 610:..\src/command_processing.c ****                             aux_float = (float) c_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl / 65536;
 611:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 612:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 613:..\src/command_processing.c ****                             }
 614:..\src/command_processing.c ****                         }            
 615:..\src/command_processing.c ****                         break;  
 3066              		.loc 1 615 0 is_stmt 1
 3067 140a BCE1     		b	.L104
 3068              	.L166:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 83


 602:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3069              		.loc 1 602 0
 3070 140c 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3071 1410 DA49     		ldr	r1, .L279
 3072 1412 1346     		mov	r3, r2
 3073 1414 DB00     		lsls	r3, r3, #3
 3074 1416 9B1A     		subs	r3, r3, r2
 3075 1418 1B01     		lsls	r3, r3, #4
 3076 141a 0B44     		add	r3, r3, r1
 3077 141c D433     		adds	r3, r3, #212
 3078 141e 1B68     		ldr	r3, [r3]
 3079 1420 1846     		mov	r0, r3
 3080 1422 FFF7FEFF 		bl	__aeabi_i2f
 3081 1426 0346     		mov	r3, r0
 3082 1428 4FF08F41 		mov	r1, #1199570944
 3083 142c 1846     		mov	r0, r3
 3084 142e FFF7FEFF 		bl	__aeabi_fdiv
 3085 1432 0346     		mov	r3, r0
 3086 1434 1A46     		mov	r2, r3
 3087 1436 07F12003 		add	r3, r7, #32
 3088 143a 1A60     		str	r2, [r3]	@ float
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3089              		.loc 1 603 0
 3090 143c 0023     		movs	r3, #0
 3091 143e 87F8573C 		strb	r3, [r7, #3159]
 3092 1442 1AE0     		b	.L174
 3093              	.L175:
 604:..\src/command_processing.c ****                             }
 3094              		.loc 1 604 0 discriminator 3
 3095 1444 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3096 1448 3222     		movs	r2, #50
 3097 144a 02FB03F3 		mul	r3, r2, r3
 3098 144e 1A1D     		adds	r2, r3, #4
 3099 1450 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3100 1454 1A44     		add	r2, r2, r3
 3101 1456 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3102 145a D31A     		subs	r3, r2, r3
 3103 145c 013B     		subs	r3, r3, #1
 3104 145e 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3105 1462 07F12001 		add	r1, r7, #32
 3106 1466 0A44     		add	r2, r2, r1
 3107 1468 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3108 146a 07F15802 		add	r2, r7, #88
 3109 146e D154     		strb	r1, [r2, r3]
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3110              		.loc 1 603 0 discriminator 3
 3111 1470 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3112 1474 0133     		adds	r3, r3, #1
 3113 1476 87F8573C 		strb	r3, [r7, #3159]
 3114              	.L174:
 603:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux
 3115              		.loc 1 603 0 is_stmt 0 discriminator 1
 3116 147a 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3117 147e 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3118 1482 9A42     		cmp	r2, r3
 3119 1484 DED3     		bcc	.L175
 606:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 84


 3120              		.loc 1 606 0 is_stmt 1
 3121 1486 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3122 148a BC49     		ldr	r1, .L279
 3123 148c 1346     		mov	r3, r2
 3124 148e DB00     		lsls	r3, r3, #3
 3125 1490 9B1A     		subs	r3, r3, r2
 3126 1492 1B01     		lsls	r3, r3, #4
 3127 1494 0B44     		add	r3, r3, r1
 3128 1496 D833     		adds	r3, r3, #216
 3129 1498 1B68     		ldr	r3, [r3]
 3130 149a 1846     		mov	r0, r3
 3131 149c FFF7FEFF 		bl	__aeabi_i2f
 3132 14a0 0346     		mov	r3, r0
 3133 14a2 4FF08F41 		mov	r1, #1199570944
 3134 14a6 1846     		mov	r0, r3
 3135 14a8 FFF7FEFF 		bl	__aeabi_fdiv
 3136 14ac 0346     		mov	r3, r0
 3137 14ae 1A46     		mov	r2, r3
 3138 14b0 07F12003 		add	r3, r7, #32
 3139 14b4 1A60     		str	r2, [r3]	@ float
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3140              		.loc 1 607 0
 3141 14b6 0023     		movs	r3, #0
 3142 14b8 87F8573C 		strb	r3, [r7, #3159]
 3143 14bc 1DE0     		b	.L176
 3144              	.L177:
 608:..\src/command_processing.c ****                             }
 3145              		.loc 1 608 0 discriminator 3
 3146 14be 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3147 14c2 3222     		movs	r2, #50
 3148 14c4 02FB03F3 		mul	r3, r2, r3
 3149 14c8 1A1D     		adds	r2, r3, #4
 3150 14ca 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3151 14ce 1A44     		add	r2, r2, r3
 3152 14d0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3153 14d4 1A44     		add	r2, r2, r3
 3154 14d6 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3155 14da D31A     		subs	r3, r2, r3
 3156 14dc 013B     		subs	r3, r3, #1
 3157 14de 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3158 14e2 07F12001 		add	r1, r7, #32
 3159 14e6 0A44     		add	r2, r2, r1
 3160 14e8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3161 14ea 07F15802 		add	r2, r7, #88
 3162 14ee D154     		strb	r1, [r2, r3]
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3163              		.loc 1 607 0 discriminator 3
 3164 14f0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3165 14f4 0133     		adds	r3, r3, #1
 3166 14f6 87F8573C 		strb	r3, [r7, #3159]
 3167              	.L176:
 607:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*
 3168              		.loc 1 607 0 is_stmt 0 discriminator 1
 3169 14fa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3170 14fe 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3171 1502 9A42     		cmp	r2, r3
 3172 1504 DBD3     		bcc	.L177
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 85


 610:..\src/command_processing.c ****                             for(i = 0; i < sod; i++) {
 3173              		.loc 1 610 0 is_stmt 1
 3174 1506 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3175 150a 9C49     		ldr	r1, .L279
 3176 150c 1346     		mov	r3, r2
 3177 150e DB00     		lsls	r3, r3, #3
 3178 1510 9B1A     		subs	r3, r3, r2
 3179 1512 1B01     		lsls	r3, r3, #4
 3180 1514 0B44     		add	r3, r3, r1
 3181 1516 DC33     		adds	r3, r3, #220
 3182 1518 1B68     		ldr	r3, [r3]
 3183 151a 1846     		mov	r0, r3
 3184 151c FFF7FEFF 		bl	__aeabi_i2f
 3185 1520 0346     		mov	r3, r0
 3186 1522 4FF08F41 		mov	r1, #1199570944
 3187 1526 1846     		mov	r0, r3
 3188 1528 FFF7FEFF 		bl	__aeabi_fdiv
 3189 152c 0346     		mov	r3, r0
 3190 152e 1A46     		mov	r2, r3
 3191 1530 07F12003 		add	r3, r7, #32
 3192 1534 1A60     		str	r2, [r3]	@ float
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3193              		.loc 1 611 0
 3194 1536 0023     		movs	r3, #0
 3195 1538 87F8573C 		strb	r3, [r7, #3159]
 3196 153c 1EE0     		b	.L178
 3197              	.L179:
 612:..\src/command_processing.c ****                             }
 3198              		.loc 1 612 0 discriminator 3
 3199 153e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3200 1542 3222     		movs	r2, #50
 3201 1544 02FB03F3 		mul	r3, r2, r3
 3202 1548 1A1D     		adds	r2, r3, #4
 3203 154a 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3204 154e 5B00     		lsls	r3, r3, #1
 3205 1550 1A44     		add	r2, r2, r3
 3206 1552 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3207 1556 1A44     		add	r2, r2, r3
 3208 1558 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3209 155c D31A     		subs	r3, r2, r3
 3210 155e 013B     		subs	r3, r3, #1
 3211 1560 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3212 1564 07F12001 		add	r1, r7, #32
 3213 1568 0A44     		add	r2, r2, r1
 3214 156a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3215 156c 07F15802 		add	r2, r7, #88
 3216 1570 D154     		strb	r1, [r2, r3]
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3217              		.loc 1 611 0 discriminator 3
 3218 1572 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3219 1576 0133     		adds	r3, r3, #1
 3220 1578 87F8573C 		strb	r3, [r7, #3159]
 3221              	.L178:
 611:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((cha
 3222              		.loc 1 611 0 is_stmt 0 discriminator 1
 3223 157c 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3224 1580 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 86


 3225 1584 9A42     		cmp	r2, r3
 3226 1586 DAD3     		bcc	.L179
 3227              		.loc 1 615 0 is_stmt 1
 3228 1588 FDE0     		b	.L104
 3229              	.L114:
 616:..\src/command_processing.c **** 
 617:..\src/command_processing.c ****                     case 50:         // Second Motor Measurement Offset
 618:..\src/command_processing.c ****                         aux_int16 = (c_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i]
 3230              		.loc 1 618 0
 3231 158a 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3232 158e 7C49     		ldr	r1, .L279+4
 3233 1590 1346     		mov	r3, r2
 3234 1592 DB00     		lsls	r3, r3, #3
 3235 1594 9B1A     		subs	r3, r3, r2
 3236 1596 1B01     		lsls	r3, r3, #4
 3237 1598 0B44     		add	r3, r3, r1
 3238 159a 03F58873 		add	r3, r3, #272
 3239 159e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3240 15a0 1846     		mov	r0, r3
 3241 15a2 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3242 15a6 7549     		ldr	r1, .L279
 3243 15a8 0346     		mov	r3, r0
 3244 15aa 5B00     		lsls	r3, r3, #1
 3245 15ac 0344     		add	r3, r3, r0
 3246 15ae 9B00     		lsls	r3, r3, #2
 3247 15b0 1344     		add	r3, r3, r2
 3248 15b2 6633     		adds	r3, r3, #102
 3249 15b4 51F82310 		ldr	r1, [r1, r3, lsl #2]
 3250 15b8 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3251 15bc 7048     		ldr	r0, .L279+4
 3252 15be 1346     		mov	r3, r2
 3253 15c0 DB00     		lsls	r3, r3, #3
 3254 15c2 9B1A     		subs	r3, r3, r2
 3255 15c4 1B01     		lsls	r3, r3, #4
 3256 15c6 0344     		add	r3, r3, r0
 3257 15c8 03F58873 		add	r3, r3, #272
 3258 15cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3259 15ce 1C46     		mov	r4, r3
 3260 15d0 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 3261 15d4 6948     		ldr	r0, .L279
 3262 15d6 2346     		mov	r3, r4
 3263 15d8 5B00     		lsls	r3, r3, #1
 3264 15da 2344     		add	r3, r3, r4
 3265 15dc 1B01     		lsls	r3, r3, #4
 3266 15de 0344     		add	r3, r3, r0
 3267 15e0 1344     		add	r3, r3, r2
 3268 15e2 03F29513 		addw	r3, r3, #405
 3269 15e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3270 15e8 41FA03F3 		asr	r3, r1, r3
 3271 15ec 1AB2     		sxth	r2, r3
 3272 15ee 07F11E03 		add	r3, r7, #30
 3273 15f2 1A80     		strh	r2, [r3]	@ movhi
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3274              		.loc 1 619 0
 3275 15f4 0023     		movs	r3, #0
 3276 15f6 87F8563C 		strb	r3, [r7, #3158]
 3277 15fa 21E0     		b	.L180
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 87


 3278              	.L181:
 620:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 3279              		.loc 1 620 0 discriminator 3
 3280 15fc 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3281 1600 3222     		movs	r2, #50
 3282 1602 02FB03F3 		mul	r3, r2, r3
 3283 1606 1A1D     		adds	r2, r3, #4
 3284 1608 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 3285 160c 97F8531C 		ldrb	r1, [r7, #3155]	@ zero_extendqisi2
 3286 1610 01FB03F3 		mul	r3, r1, r3
 3287 1614 1A44     		add	r2, r2, r3
 3288 1616 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3289 161a 1A44     		add	r2, r2, r3
 3290 161c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3291 1620 D31A     		subs	r3, r2, r3
 3292 1622 013B     		subs	r3, r3, #1
 3293 1624 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3294 1628 07F11E01 		add	r1, r7, #30
 3295 162c 0A44     		add	r2, r2, r1
 3296 162e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3297 1630 07F15802 		add	r2, r7, #88
 3298 1634 D154     		strb	r1, [r2, r3]
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3299              		.loc 1 619 0 discriminator 3
 3300 1636 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3301 163a 0133     		adds	r3, r3, #1
 3302 163c 87F8563C 		strb	r3, [r7, #3158]
 3303              	.L180:
 619:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3304              		.loc 1 619 0 is_stmt 0 discriminator 1
 3305 1640 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3306 1644 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3307 1648 9A42     		cmp	r2, r3
 3308 164a D7D3     		bcc	.L181
 621:..\src/command_processing.c ****                         }
 622:..\src/command_processing.c ****                         break;
 3309              		.loc 1 622 0 is_stmt 1
 3310 164c 9BE0     		b	.L104
 3311              	.L115:
 623:..\src/command_processing.c ****                 
 624:..\src/command_processing.c ****                     case 53:        // Second Motor Position limits
 625:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf >> c_mem.enc[g_mem.m
 3312              		.loc 1 625 0
 3313 164e 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3314 1652 4A49     		ldr	r1, .L279
 3315 1654 1346     		mov	r3, r2
 3316 1656 DB00     		lsls	r3, r3, #3
 3317 1658 9B1A     		subs	r3, r3, r2
 3318 165a 1B01     		lsls	r3, r3, #4
 3319 165c 0B44     		add	r3, r3, r1
 3320 165e E433     		adds	r3, r3, #228
 3321 1660 1968     		ldr	r1, [r3]
 3322 1662 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3323 1666 4648     		ldr	r0, .L279+4
 3324 1668 1346     		mov	r3, r2
 3325 166a DB00     		lsls	r3, r3, #3
 3326 166c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 88


 3327 166e 1B01     		lsls	r3, r3, #4
 3328 1670 0344     		add	r3, r3, r0
 3329 1672 03F58873 		add	r3, r3, #272
 3330 1676 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3331 1678 1846     		mov	r0, r3
 3332 167a 404A     		ldr	r2, .L279
 3333 167c 0346     		mov	r3, r0
 3334 167e 5B00     		lsls	r3, r3, #1
 3335 1680 0344     		add	r3, r3, r0
 3336 1682 1B01     		lsls	r3, r3, #4
 3337 1684 1344     		add	r3, r3, r2
 3338 1686 03F29513 		addw	r3, r3, #405
 3339 168a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3340 168c 41FA03F2 		asr	r2, r1, r3
 3341 1690 07F11803 		add	r3, r7, #24
 3342 1694 1A60     		str	r2, [r3]
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3343              		.loc 1 626 0
 3344 1696 0023     		movs	r3, #0
 3345 1698 87F8563C 		strb	r3, [r7, #3158]
 3346 169c 1AE0     		b	.L182
 3347              	.L183:
 627:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux_int
 3348              		.loc 1 627 0 discriminator 3
 3349 169e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3350 16a2 3222     		movs	r2, #50
 3351 16a4 02FB03F3 		mul	r3, r2, r3
 3352 16a8 1A1D     		adds	r2, r3, #4
 3353 16aa 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3354 16ae 1A44     		add	r2, r2, r3
 3355 16b0 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3356 16b4 D31A     		subs	r3, r2, r3
 3357 16b6 013B     		subs	r3, r3, #1
 3358 16b8 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3359 16bc 07F11801 		add	r1, r7, #24
 3360 16c0 0A44     		add	r2, r2, r1
 3361 16c2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3362 16c4 07F15802 		add	r2, r7, #88
 3363 16c8 D154     		strb	r1, [r2, r3]
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3364              		.loc 1 626 0 discriminator 3
 3365 16ca 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3366 16ce 0133     		adds	r3, r3, #1
 3367 16d0 87F8563C 		strb	r3, [r7, #3158]
 3368              	.L182:
 626:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3369              		.loc 1 626 0 is_stmt 0 discriminator 1
 3370 16d4 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3371 16d8 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3372 16dc 9A42     		cmp	r2, r3
 3373 16de DED3     		bcc	.L183
 628:..\src/command_processing.c ****                         }
 629:..\src/command_processing.c ****                         aux_int32 = (c_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup >> c_mem.enc[g_mem.m
 3374              		.loc 1 629 0 is_stmt 1
 3375 16e0 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3376 16e4 2549     		ldr	r1, .L279
 3377 16e6 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 89


 3378 16e8 DB00     		lsls	r3, r3, #3
 3379 16ea 9B1A     		subs	r3, r3, r2
 3380 16ec 1B01     		lsls	r3, r3, #4
 3381 16ee 0B44     		add	r3, r3, r1
 3382 16f0 E833     		adds	r3, r3, #232
 3383 16f2 1968     		ldr	r1, [r3]
 3384 16f4 97F84E2C 		ldrb	r2, [r7, #3150]	@ zero_extendqisi2
 3385 16f8 2148     		ldr	r0, .L279+4
 3386 16fa 1346     		mov	r3, r2
 3387 16fc DB00     		lsls	r3, r3, #3
 3388 16fe 9B1A     		subs	r3, r3, r2
 3389 1700 1B01     		lsls	r3, r3, #4
 3390 1702 0344     		add	r3, r3, r0
 3391 1704 03F58873 		add	r3, r3, #272
 3392 1708 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3393 170a 1846     		mov	r0, r3
 3394 170c 1B4A     		ldr	r2, .L279
 3395 170e 0346     		mov	r3, r0
 3396 1710 5B00     		lsls	r3, r3, #1
 3397 1712 0344     		add	r3, r3, r0
 3398 1714 1B01     		lsls	r3, r3, #4
 3399 1716 1344     		add	r3, r3, r2
 3400 1718 03F29513 		addw	r3, r3, #405
 3401 171c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3402 171e 41FA03F2 		asr	r2, r1, r3
 3403 1722 07F11803 		add	r3, r7, #24
 3404 1726 1A60     		str	r2, [r3]
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3405              		.loc 1 630 0
 3406 1728 0023     		movs	r3, #0
 3407 172a 87F8563C 		strb	r3, [r7, #3158]
 3408 172e 1DE0     		b	.L184
 3409              	.L185:
 631:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*)(&a
 3410              		.loc 1 631 0 discriminator 3
 3411 1730 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3412 1734 3222     		movs	r2, #50
 3413 1736 02FB03F3 		mul	r3, r2, r3
 3414 173a 1A1D     		adds	r2, r3, #4
 3415 173c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3416 1740 1A44     		add	r2, r2, r3
 3417 1742 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3418 1746 1A44     		add	r2, r2, r3
 3419 1748 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3420 174c D31A     		subs	r3, r2, r3
 3421 174e 013B     		subs	r3, r3, #1
 3422 1750 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3423 1754 07F11801 		add	r1, r7, #24
 3424 1758 0A44     		add	r2, r2, r1
 3425 175a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3426 175c 07F15802 		add	r2, r7, #88
 3427 1760 D154     		strb	r1, [r2, r3]
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3428              		.loc 1 630 0 discriminator 3
 3429 1762 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 3430 1766 0133     		adds	r3, r3, #1
 3431 1768 87F8563C 		strb	r3, [r7, #3158]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 90


 3432              	.L184:
 630:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 3433              		.loc 1 630 0 is_stmt 0 discriminator 1
 3434 176c 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 3435 1770 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 3436 1774 9A42     		cmp	r2, r3
 3437 1776 DBD3     		bcc	.L185
 632:..\src/command_processing.c ****                         }
 633:..\src/command_processing.c ****                         break;
 3438              		.loc 1 633 0 is_stmt 1
 3439 1778 05E0     		b	.L104
 3440              	.L280:
 3441 177a 00BF     		.align	2
 3442              	.L279:
 3443 177c 00000000 		.word	c_mem
 3444 1780 00000000 		.word	g_mem
 3445              	.L266:
 634:..\src/command_processing.c ****                         
 635:..\src/command_processing.c ****                     default:
 636:..\src/command_processing.c ****                         break;
 3446              		.loc 1 636 0
 3447 1784 00BF     		nop
 3448              	.L104:
 637:..\src/command_processing.c ****                 }
 638:..\src/command_processing.c **** // END OF MODIFY CUSTOM PARAM  
 639:..\src/command_processing.c ****                         
 640:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
 641:..\src/command_processing.c ****         }
 642:..\src/command_processing.c ****         
 643:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 3449              		.loc 1 643 0
 3450 1786 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3451 178a 9B00     		lsls	r3, r3, #2
 3452 178c D7F8742C 		ldr	r2, [r7, #3188]
 3453 1790 1344     		add	r3, r3, r2
 3454 1792 1A68     		ldr	r2, [r3]
 3455 1794 07F12403 		add	r3, r7, #36
 3456 1798 1146     		mov	r1, r2
 3457 179a 1846     		mov	r0, r3
 3458 179c FFF7FEFF 		bl	sprintf
 644:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 3459              		.loc 1 644 0
 3460 17a0 07F12403 		add	r3, r7, #36
 3461 17a4 1846     		mov	r0, r3
 3462 17a6 FFF7FEFF 		bl	strlen
 3463 17aa 0346     		mov	r3, r0
 3464 17ac 87F8523C 		strb	r3, [r7, #3154]
 645:..\src/command_processing.c ****         
 646:..\src/command_processing.c ****         // Parameters with a menu
 647:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3465              		.loc 1 647 0
 3466 17b0 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 3467 17b4 07F10802 		add	r2, r7, #8
 3468 17b8 1268     		ldr	r2, [r2]
 3469 17ba 1344     		add	r3, r3, r2
 3470 17bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3471 17be 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 91


 3472 17c0 40F0FD83 		bne	.L186
 648:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 3473              		.loc 1 648 0
 3474 17c4 97F8543C 		ldrb	r3, [r7, #3156]	@ zero_extendqisi2
 3475 17c8 D7F8702C 		ldr	r2, [r7, #3184]
 3476 17cc 1344     		add	r3, r3, r2
 3477 17ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3478 17d0 013B     		subs	r3, r3, #1
 3479 17d2 0B2B     		cmp	r3, #11
 3480 17d4 00F2E983 		bhi	.L187
 3481 17d8 01A2     		adr	r2, .L189
 3482 17da 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3483 17de 00BF     		.p2align 2
 3484              	.L189:
 3485 17e0 11180000 		.word	.L188+1
 3486 17e4 97190000 		.word	.L190+1
 3487 17e8 551A0000 		.word	.L191+1
 3488 17ec 9B1A0000 		.word	.L192+1
 3489 17f0 F11A0000 		.word	.L193+1
 3490 17f4 3F1B0000 		.word	.L194+1
 3491 17f8 4D1C0000 		.word	.L195+1
 3492 17fc C31C0000 		.word	.L196+1
 3493 1800 451D0000 		.word	.L197+1
 3494 1804 AF1D0000 		.word	.L198+1
 3495 1808 731E0000 		.word	.L199+1
 3496 180c ED1E0000 		.word	.L200+1
 3497              		.p2align 1
 3498              	.L188:
 649:..\src/command_processing.c ****                 case 1:     // input mode menu
 650:..\src/command_processing.c ****                     switch(*m_addr) {
 3499              		.loc 1 650 0
 3500 1810 D7F8483C 		ldr	r3, [r7, #3144]
 3501 1814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3502 1816 072B     		cmp	r3, #7
 3503 1818 00F29B83 		bhi	.L267
 3504 181c 01A2     		adr	r2, .L203
 3505 181e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3506 1822 00BF     		.p2align 2
 3507              	.L203:
 3508 1824 45180000 		.word	.L202+1
 3509 1828 65180000 		.word	.L204+1
 3510 182c 87180000 		.word	.L205+1
 3511 1830 B1180000 		.word	.L206+1
 3512 1834 D9180000 		.word	.L207+1
 3513 1838 FF180000 		.word	.L208+1
 3514 183c 2F190000 		.word	.L209+1
 3515 1840 55190000 		.word	.L210+1
 3516              		.p2align 1
 3517              	.L202:
 651:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 652:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 3518              		.loc 1 652 0
 3519 1844 07F12403 		add	r3, r7, #36
 3520 1848 1846     		mov	r0, r3
 3521 184a FFF7FEFF 		bl	strlen
 3522 184e 0346     		mov	r3, r0
 3523 1850 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 92


 3524 1852 07F12403 		add	r3, r7, #36
 3525 1856 1344     		add	r3, r3, r2
 3526 1858 D34A     		ldr	r2, .L281
 3527 185a 1068     		ldr	r0, [r2]	@ unaligned
 3528 185c 1860     		str	r0, [r3]	@ unaligned
 3529 185e 1279     		ldrb	r2, [r2, #4]
 3530 1860 1A71     		strb	r2, [r3, #4]
 653:..\src/command_processing.c ****                         break;
 3531              		.loc 1 653 0
 3532 1862 97E0     		b	.L201
 3533              	.L204:
 654:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 655:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 3534              		.loc 1 655 0
 3535 1864 07F12403 		add	r3, r7, #36
 3536 1868 1846     		mov	r0, r3
 3537 186a FFF7FEFF 		bl	strlen
 3538 186e 0346     		mov	r3, r0
 3539 1870 1A46     		mov	r2, r3
 3540 1872 07F12403 		add	r3, r7, #36
 3541 1876 1344     		add	r3, r3, r2
 3542 1878 CC49     		ldr	r1, .L281+4
 3543 187a 1A46     		mov	r2, r3
 3544 187c 0B46     		mov	r3, r1
 3545 187e 03CB     		ldmia	r3!, {r0, r1}
 3546 1880 1060     		str	r0, [r2]	@ unaligned
 3547 1882 5160     		str	r1, [r2, #4]	@ unaligned
 656:..\src/command_processing.c ****                         break;
 3548              		.loc 1 656 0
 3549 1884 86E0     		b	.L201
 3550              	.L205:
 657:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 658:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 3551              		.loc 1 658 0
 3552 1886 07F12403 		add	r3, r7, #36
 3553 188a 1846     		mov	r0, r3
 3554 188c FFF7FEFF 		bl	strlen
 3555 1890 0346     		mov	r3, r0
 3556 1892 1A46     		mov	r2, r3
 3557 1894 07F12403 		add	r3, r7, #36
 3558 1898 1344     		add	r3, r3, r2
 3559 189a C54A     		ldr	r2, .L281+8
 3560 189c 1D46     		mov	r5, r3
 3561 189e 1446     		mov	r4, r2
 3562 18a0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3563 18a2 2860     		str	r0, [r5]	@ unaligned
 3564 18a4 6960     		str	r1, [r5, #4]	@ unaligned
 3565 18a6 AA60     		str	r2, [r5, #8]	@ unaligned
 3566 18a8 EB60     		str	r3, [r5, #12]	@ unaligned
 3567 18aa 2388     		ldrh	r3, [r4]	@ unaligned
 3568 18ac 2B82     		strh	r3, [r5, #16]	@ unaligned
 659:..\src/command_processing.c ****                         break;
 3569              		.loc 1 659 0
 3570 18ae 71E0     		b	.L201
 3571              	.L206:
 660:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 661:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 93


 3572              		.loc 1 661 0
 3573 18b0 07F12403 		add	r3, r7, #36
 3574 18b4 1846     		mov	r0, r3
 3575 18b6 FFF7FEFF 		bl	strlen
 3576 18ba 0346     		mov	r3, r0
 3577 18bc 1A46     		mov	r2, r3
 3578 18be 07F12403 		add	r3, r7, #36
 3579 18c2 1344     		add	r3, r3, r2
 3580 18c4 BB4A     		ldr	r2, .L281+12
 3581 18c6 1C46     		mov	r4, r3
 3582 18c8 1346     		mov	r3, r2
 3583 18ca 07CB     		ldmia	r3!, {r0, r1, r2}
 3584 18cc 2060     		str	r0, [r4]	@ unaligned
 3585 18ce 6160     		str	r1, [r4, #4]	@ unaligned
 3586 18d0 A260     		str	r2, [r4, #8]	@ unaligned
 3587 18d2 1B88     		ldrh	r3, [r3]	@ unaligned
 3588 18d4 A381     		strh	r3, [r4, #12]	@ unaligned
 662:..\src/command_processing.c ****                         break;
 3589              		.loc 1 662 0
 3590 18d6 5DE0     		b	.L201
 3591              	.L207:
 663:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 664:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 3592              		.loc 1 664 0
 3593 18d8 07F12403 		add	r3, r7, #36
 3594 18dc 1846     		mov	r0, r3
 3595 18de FFF7FEFF 		bl	strlen
 3596 18e2 0346     		mov	r3, r0
 3597 18e4 1A46     		mov	r2, r3
 3598 18e6 07F12403 		add	r3, r7, #36
 3599 18ea 1344     		add	r3, r3, r2
 3600 18ec B249     		ldr	r1, .L281+16
 3601 18ee 1A46     		mov	r2, r3
 3602 18f0 0B46     		mov	r3, r1
 3603 18f2 03CB     		ldmia	r3!, {r0, r1}
 3604 18f4 1060     		str	r0, [r2]	@ unaligned
 3605 18f6 5160     		str	r1, [r2, #4]	@ unaligned
 3606 18f8 1B88     		ldrh	r3, [r3]	@ unaligned
 3607 18fa 1381     		strh	r3, [r2, #8]	@ unaligned
 665:..\src/command_processing.c ****                         break;
 3608              		.loc 1 665 0
 3609 18fc 4AE0     		b	.L201
 3610              	.L208:
 666:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 667:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 3611              		.loc 1 667 0
 3612 18fe 07F12403 		add	r3, r7, #36
 3613 1902 1846     		mov	r0, r3
 3614 1904 FFF7FEFF 		bl	strlen
 3615 1908 0346     		mov	r3, r0
 3616 190a 1A46     		mov	r2, r3
 3617 190c 07F12403 		add	r3, r7, #36
 3618 1910 1344     		add	r3, r3, r2
 3619 1912 AA4A     		ldr	r2, .L281+20
 3620 1914 1D46     		mov	r5, r3
 3621 1916 1446     		mov	r4, r2
 3622 1918 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 94


 3623 191a 2860     		str	r0, [r5]	@ unaligned
 3624 191c 6960     		str	r1, [r5, #4]	@ unaligned
 3625 191e AA60     		str	r2, [r5, #8]	@ unaligned
 3626 1920 EB60     		str	r3, [r5, #12]	@ unaligned
 3627 1922 2388     		ldrh	r3, [r4]	@ unaligned
 3628 1924 A278     		ldrb	r2, [r4, #2]
 3629 1926 2B82     		strh	r3, [r5, #16]	@ unaligned
 3630 1928 1346     		mov	r3, r2
 3631 192a AB74     		strb	r3, [r5, #18]
 668:..\src/command_processing.c ****                         break;
 3632              		.loc 1 668 0
 3633 192c 32E0     		b	.L201
 3634              	.L209:
 669:..\src/command_processing.c ****                         case INPUT_MODE_JOYSTICK:
 670:..\src/command_processing.c ****                             strcat(aux_str, " Joystick");
 3635              		.loc 1 670 0
 3636 192e 07F12403 		add	r3, r7, #36
 3637 1932 1846     		mov	r0, r3
 3638 1934 FFF7FEFF 		bl	strlen
 3639 1938 0346     		mov	r3, r0
 3640 193a 1A46     		mov	r2, r3
 3641 193c 07F12403 		add	r3, r7, #36
 3642 1940 1344     		add	r3, r3, r2
 3643 1942 9F49     		ldr	r1, .L281+24
 3644 1944 1A46     		mov	r2, r3
 3645 1946 0B46     		mov	r3, r1
 3646 1948 03CB     		ldmia	r3!, {r0, r1}
 3647 194a 1060     		str	r0, [r2]	@ unaligned
 3648 194c 5160     		str	r1, [r2, #4]	@ unaligned
 3649 194e 1B88     		ldrh	r3, [r3]	@ unaligned
 3650 1950 1381     		strh	r3, [r2, #8]	@ unaligned
 671:..\src/command_processing.c ****                         break;
 3651              		.loc 1 671 0
 3652 1952 1FE0     		b	.L201
 3653              	.L210:
 672:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL_NC:
 673:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional Normally Closed");
 3654              		.loc 1 673 0
 3655 1954 07F12403 		add	r3, r7, #36
 3656 1958 1846     		mov	r0, r3
 3657 195a FFF7FEFF 		bl	strlen
 3658 195e 0346     		mov	r3, r0
 3659 1960 1A46     		mov	r2, r3
 3660 1962 07F12403 		add	r3, r7, #36
 3661 1966 1344     		add	r3, r3, r2
 3662 1968 964A     		ldr	r2, .L281+28
 3663 196a 1446     		mov	r4, r2
 3664 196c 9E46     		mov	lr, r3
 3665 196e 04F1200C 		add	ip, r4, #32
 3666              	.L211:
 3667 1972 7546     		mov	r5, lr
 3668 1974 2646     		mov	r6, r4
 3669 1976 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 3670 1978 2860     		str	r0, [r5]	@ unaligned
 3671 197a 6960     		str	r1, [r5, #4]	@ unaligned
 3672 197c AA60     		str	r2, [r5, #8]	@ unaligned
 3673 197e EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 95


 3674 1980 1034     		adds	r4, r4, #16
 3675 1982 0EF1100E 		add	lr, lr, #16
 3676 1986 6445     		cmp	r4, ip
 3677 1988 F3D1     		bne	.L211
 3678 198a 7246     		mov	r2, lr
 3679 198c 2346     		mov	r3, r4
 3680 198e 1B88     		ldrh	r3, [r3]	@ unaligned
 3681 1990 1380     		strh	r3, [r2]	@ unaligned
 674:..\src/command_processing.c ****                         break;
 3682              		.loc 1 674 0
 3683 1992 00BF     		nop
 3684              	.L201:
 675:..\src/command_processing.c ****                     }
 676:..\src/command_processing.c ****                     break;
 3685              		.loc 1 676 0
 3686 1994 DDE2     		b	.L267
 3687              	.L190:
 677:..\src/command_processing.c ****                 case 2:     // control mode menu
 678:..\src/command_processing.c ****                     switch(*m_addr){
 3688              		.loc 1 678 0
 3689 1996 D7F8483C 		ldr	r3, [r7, #3144]
 3690 199a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3691 199c 032B     		cmp	r3, #3
 3692 199e 00F2DA82 		bhi	.L268
 3693 19a2 01A2     		adr	r2, .L214
 3694 19a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3695              		.p2align 2
 3696              	.L214:
 3697 19a8 B9190000 		.word	.L213+1
 3698 19ac DF190000 		.word	.L215+1
 3699 19b0 FF190000 		.word	.L216+1
 3700 19b4 251A0000 		.word	.L217+1
 3701              		.p2align 1
 3702              	.L213:
 679:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 680:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 3703              		.loc 1 680 0
 3704 19b8 07F12403 		add	r3, r7, #36
 3705 19bc 1846     		mov	r0, r3
 3706 19be FFF7FEFF 		bl	strlen
 3707 19c2 0346     		mov	r3, r0
 3708 19c4 1A46     		mov	r2, r3
 3709 19c6 07F12403 		add	r3, r7, #36
 3710 19ca 1344     		add	r3, r3, r2
 3711 19cc 7E49     		ldr	r1, .L281+32
 3712 19ce 1A46     		mov	r2, r3
 3713 19d0 0B46     		mov	r3, r1
 3714 19d2 03CB     		ldmia	r3!, {r0, r1}
 3715 19d4 1060     		str	r0, [r2]	@ unaligned
 3716 19d6 5160     		str	r1, [r2, #4]	@ unaligned
 3717 19d8 1B88     		ldrh	r3, [r3]	@ unaligned
 3718 19da 1381     		strh	r3, [r2, #8]	@ unaligned
 681:..\src/command_processing.c ****                         break;
 3719              		.loc 1 681 0
 3720 19dc 39E0     		b	.L212
 3721              	.L215:
 682:..\src/command_processing.c ****                         case CONTROL_PWM:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 96


 683:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 3722              		.loc 1 683 0
 3723 19de 07F12403 		add	r3, r7, #36
 3724 19e2 1846     		mov	r0, r3
 3725 19e4 FFF7FEFF 		bl	strlen
 3726 19e8 0346     		mov	r3, r0
 3727 19ea 1A46     		mov	r2, r3
 3728 19ec 07F12403 		add	r3, r7, #36
 3729 19f0 1344     		add	r3, r3, r2
 3730 19f2 764A     		ldr	r2, .L281+36
 3731 19f4 1068     		ldr	r0, [r2]	@ unaligned
 3732 19f6 1860     		str	r0, [r3]	@ unaligned
 3733 19f8 1279     		ldrb	r2, [r2, #4]
 3734 19fa 1A71     		strb	r2, [r3, #4]
 684:..\src/command_processing.c ****                         break;
 3735              		.loc 1 684 0
 3736 19fc 29E0     		b	.L212
 3737              	.L216:
 685:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 686:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 3738              		.loc 1 686 0
 3739 19fe 07F12403 		add	r3, r7, #36
 3740 1a02 1846     		mov	r0, r3
 3741 1a04 FFF7FEFF 		bl	strlen
 3742 1a08 0346     		mov	r3, r0
 3743 1a0a 1A46     		mov	r2, r3
 3744 1a0c 07F12403 		add	r3, r7, #36
 3745 1a10 1344     		add	r3, r3, r2
 3746 1a12 6F49     		ldr	r1, .L281+40
 3747 1a14 1A46     		mov	r2, r3
 3748 1a16 0B46     		mov	r3, r1
 3749 1a18 03CB     		ldmia	r3!, {r0, r1}
 3750 1a1a 1060     		str	r0, [r2]	@ unaligned
 3751 1a1c 5160     		str	r1, [r2, #4]	@ unaligned
 3752 1a1e 1B78     		ldrb	r3, [r3]
 3753 1a20 1372     		strb	r3, [r2, #8]
 687:..\src/command_processing.c ****                         break;
 3754              		.loc 1 687 0
 3755 1a22 16E0     		b	.L212
 3756              	.L217:
 688:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 689:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 3757              		.loc 1 689 0
 3758 1a24 07F12403 		add	r3, r7, #36
 3759 1a28 1846     		mov	r0, r3
 3760 1a2a FFF7FEFF 		bl	strlen
 3761 1a2e 0346     		mov	r3, r0
 3762 1a30 1A46     		mov	r2, r3
 3763 1a32 07F12403 		add	r3, r7, #36
 3764 1a36 1344     		add	r3, r3, r2
 3765 1a38 664A     		ldr	r2, .L281+44
 3766 1a3a 1D46     		mov	r5, r3
 3767 1a3c 1446     		mov	r4, r2
 3768 1a3e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3769 1a40 2860     		str	r0, [r5]	@ unaligned
 3770 1a42 6960     		str	r1, [r5, #4]	@ unaligned
 3771 1a44 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 97


 3772 1a46 EB60     		str	r3, [r5, #12]	@ unaligned
 3773 1a48 2068     		ldr	r0, [r4]	@ unaligned
 3774 1a4a 2861     		str	r0, [r5, #16]	@ unaligned
 3775 1a4c A388     		ldrh	r3, [r4, #4]	@ unaligned
 3776 1a4e AB82     		strh	r3, [r5, #20]	@ unaligned
 690:..\src/command_processing.c ****                         break;
 3777              		.loc 1 690 0
 3778 1a50 00BF     		nop
 3779              	.L212:
 691:..\src/command_processing.c ****                     }
 692:..\src/command_processing.c ****                     break;
 3780              		.loc 1 692 0
 3781 1a52 80E2     		b	.L268
 3782              	.L191:
 693:..\src/command_processing.c ****                 case 3:     // yes/no menu
 694:..\src/command_processing.c ****                     if(*m_addr){
 3783              		.loc 1 694 0
 3784 1a54 D7F8483C 		ldr	r3, [r7, #3144]
 3785 1a58 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3786 1a5a 002B     		cmp	r3, #0
 3787 1a5c 0FD0     		beq	.L218
 695:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3788              		.loc 1 695 0
 3789 1a5e 07F12403 		add	r3, r7, #36
 3790 1a62 1846     		mov	r0, r3
 3791 1a64 FFF7FEFF 		bl	strlen
 3792 1a68 0346     		mov	r3, r0
 3793 1a6a 1A46     		mov	r2, r3
 3794 1a6c 07F12403 		add	r3, r7, #36
 3795 1a70 1344     		add	r3, r3, r2
 3796 1a72 594A     		ldr	r2, .L281+48
 3797 1a74 1068     		ldr	r0, [r2]	@ unaligned
 3798 1a76 1860     		str	r0, [r3]	@ unaligned
 3799 1a78 1279     		ldrb	r2, [r2, #4]
 3800 1a7a 1A71     		strb	r2, [r3, #4]
 696:..\src/command_processing.c ****                     }
 697:..\src/command_processing.c ****                     else {
 698:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 699:..\src/command_processing.c ****                     }
 700:..\src/command_processing.c ****                     break;    
 3801              		.loc 1 700 0
 3802 1a7c 95E2     		b	.L187
 3803              	.L218:
 698:..\src/command_processing.c ****                     }
 3804              		.loc 1 698 0
 3805 1a7e 07F12403 		add	r3, r7, #36
 3806 1a82 1846     		mov	r0, r3
 3807 1a84 FFF7FEFF 		bl	strlen
 3808 1a88 0346     		mov	r3, r0
 3809 1a8a 1A46     		mov	r2, r3
 3810 1a8c 07F12403 		add	r3, r7, #36
 3811 1a90 1344     		add	r3, r3, r2
 3812 1a92 524A     		ldr	r2, .L281+52
 3813 1a94 1068     		ldr	r0, [r2]	@ unaligned
 3814 1a96 1860     		str	r0, [r3]	@ unaligned
 3815              		.loc 1 700 0
 3816 1a98 87E2     		b	.L187
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 98


 3817              	.L192:
 701:..\src/command_processing.c ****                 case 4:     // right/lef menu
 702:..\src/command_processing.c ****                     switch(*m_addr){
 3818              		.loc 1 702 0
 3819 1a9a D7F8483C 		ldr	r3, [r7, #3144]
 3820 1a9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3821 1aa0 002B     		cmp	r3, #0
 3822 1aa2 02D0     		beq	.L221
 3823 1aa4 012B     		cmp	r3, #1
 3824 1aa6 12D0     		beq	.L222
 703:..\src/command_processing.c ****                         case RIGHT_HAND:
 704:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 705:..\src/command_processing.c ****                         break;
 706:..\src/command_processing.c ****                         case LEFT_HAND:
 707:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 708:..\src/command_processing.c ****                         break;
 709:..\src/command_processing.c ****                     }
 710:..\src/command_processing.c ****                     break;
 3825              		.loc 1 710 0
 3826 1aa8 7FE2     		b	.L187
 3827              	.L221:
 704:..\src/command_processing.c ****                         break;
 3828              		.loc 1 704 0
 3829 1aaa 07F12403 		add	r3, r7, #36
 3830 1aae 1846     		mov	r0, r3
 3831 1ab0 FFF7FEFF 		bl	strlen
 3832 1ab4 0346     		mov	r3, r0
 3833 1ab6 1A46     		mov	r2, r3
 3834 1ab8 07F12403 		add	r3, r7, #36
 3835 1abc 1344     		add	r3, r3, r2
 3836 1abe 484A     		ldr	r2, .L281+56
 3837 1ac0 1068     		ldr	r0, [r2]	@ unaligned
 3838 1ac2 1860     		str	r0, [r3]	@ unaligned
 3839 1ac4 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3840 1ac6 9279     		ldrb	r2, [r2, #6]
 3841 1ac8 9980     		strh	r1, [r3, #4]	@ unaligned
 3842 1aca 9A71     		strb	r2, [r3, #6]
 705:..\src/command_processing.c ****                         case LEFT_HAND:
 3843              		.loc 1 705 0
 3844 1acc 0FE0     		b	.L220
 3845              	.L222:
 707:..\src/command_processing.c ****                         break;
 3846              		.loc 1 707 0
 3847 1ace 07F12403 		add	r3, r7, #36
 3848 1ad2 1846     		mov	r0, r3
 3849 1ad4 FFF7FEFF 		bl	strlen
 3850 1ad8 0346     		mov	r3, r0
 3851 1ada 1A46     		mov	r2, r3
 3852 1adc 07F12403 		add	r3, r7, #36
 3853 1ae0 1344     		add	r3, r3, r2
 3854 1ae2 404A     		ldr	r2, .L281+60
 3855 1ae4 1068     		ldr	r0, [r2]	@ unaligned
 3856 1ae6 1860     		str	r0, [r3]	@ unaligned
 3857 1ae8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3858 1aea 9A80     		strh	r2, [r3, #4]	@ unaligned
 708:..\src/command_processing.c ****                     }
 3859              		.loc 1 708 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 99


 3860 1aec 00BF     		nop
 3861              	.L220:
 3862              		.loc 1 710 0
 3863 1aee 5CE2     		b	.L187
 3864              	.L193:
 711:..\src/command_processing.c ****                 case 5:     // on/off menu
 712:..\src/command_processing.c ****                     switch(*m_addr){
 3865              		.loc 1 712 0
 3866 1af0 D7F8483C 		ldr	r3, [r7, #3144]
 3867 1af4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3868 1af6 002B     		cmp	r3, #0
 3869 1af8 02D0     		beq	.L224
 3870 1afa 012B     		cmp	r3, #1
 3871 1afc 10D0     		beq	.L225
 713:..\src/command_processing.c ****                         case 0:
 714:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 715:..\src/command_processing.c ****                         break;
 716:..\src/command_processing.c ****                         case 1:
 717:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 718:..\src/command_processing.c ****                         break;
 719:..\src/command_processing.c ****                     }
 720:..\src/command_processing.c ****                     break;
 3872              		.loc 1 720 0
 3873 1afe 54E2     		b	.L187
 3874              	.L224:
 714:..\src/command_processing.c ****                         break;
 3875              		.loc 1 714 0
 3876 1b00 07F12403 		add	r3, r7, #36
 3877 1b04 1846     		mov	r0, r3
 3878 1b06 FFF7FEFF 		bl	strlen
 3879 1b0a 0346     		mov	r3, r0
 3880 1b0c 1A46     		mov	r2, r3
 3881 1b0e 07F12403 		add	r3, r7, #36
 3882 1b12 1344     		add	r3, r3, r2
 3883 1b14 344A     		ldr	r2, .L281+64
 3884 1b16 1068     		ldr	r0, [r2]	@ unaligned
 3885 1b18 1860     		str	r0, [r3]	@ unaligned
 3886 1b1a 1279     		ldrb	r2, [r2, #4]
 3887 1b1c 1A71     		strb	r2, [r3, #4]
 715:..\src/command_processing.c ****                         case 1:
 3888              		.loc 1 715 0
 3889 1b1e 0DE0     		b	.L223
 3890              	.L225:
 717:..\src/command_processing.c ****                         break;
 3891              		.loc 1 717 0
 3892 1b20 07F12403 		add	r3, r7, #36
 3893 1b24 1846     		mov	r0, r3
 3894 1b26 FFF7FEFF 		bl	strlen
 3895 1b2a 0346     		mov	r3, r0
 3896 1b2c 1A46     		mov	r2, r3
 3897 1b2e 07F12403 		add	r3, r7, #36
 3898 1b32 1344     		add	r3, r3, r2
 3899 1b34 2D4A     		ldr	r2, .L281+68
 3900 1b36 1068     		ldr	r0, [r2]	@ unaligned
 3901 1b38 1860     		str	r0, [r3]	@ unaligned
 718:..\src/command_processing.c ****                     }
 3902              		.loc 1 718 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 100


 3903 1b3a 00BF     		nop
 3904              	.L223:
 3905              		.loc 1 720 0
 3906 1b3c 35E2     		b	.L187
 3907              	.L194:
 721:..\src/command_processing.c ****                 case 6:     // expansion port menu
 722:..\src/command_processing.c ****                     switch(*m_addr){
 3908              		.loc 1 722 0
 3909 1b3e D7F8483C 		ldr	r3, [r7, #3144]
 3910 1b42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3911 1b44 032B     		cmp	r3, #3
 3912 1b46 00F20882 		bhi	.L269
 3913 1b4a 01A2     		adr	r2, .L228
 3914 1b4c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3915              		.p2align 2
 3916              	.L228:
 3917 1b50 611B0000 		.word	.L227+1
 3918 1b54 811B0000 		.word	.L229+1
 3919 1b58 F91B0000 		.word	.L230+1
 3920 1b5c 231C0000 		.word	.L231+1
 3921              		.p2align 1
 3922              	.L227:
 723:..\src/command_processing.c ****                         case EXP_NONE:
 724:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 3923              		.loc 1 724 0
 3924 1b60 07F12403 		add	r3, r7, #36
 3925 1b64 1846     		mov	r0, r3
 3926 1b66 FFF7FEFF 		bl	strlen
 3927 1b6a 0346     		mov	r3, r0
 3928 1b6c 1A46     		mov	r2, r3
 3929 1b6e 07F12403 		add	r3, r7, #36
 3930 1b72 1344     		add	r3, r3, r2
 3931 1b74 1E4A     		ldr	r2, .L281+72
 3932 1b76 1068     		ldr	r0, [r2]	@ unaligned
 3933 1b78 1860     		str	r0, [r3]	@ unaligned
 3934 1b7a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3935 1b7c 9A80     		strh	r2, [r3, #4]	@ unaligned
 725:..\src/command_processing.c ****                             break;
 3936              		.loc 1 725 0
 3937 1b7e 64E0     		b	.L226
 3938              	.L229:
 726:..\src/command_processing.c ****                         case EXP_SD_RTC:
 727:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 3939              		.loc 1 727 0
 3940 1b80 07F12403 		add	r3, r7, #36
 3941 1b84 1846     		mov	r0, r3
 3942 1b86 FFF7FEFF 		bl	strlen
 3943 1b8a 0346     		mov	r3, r0
 3944 1b8c 1A46     		mov	r2, r3
 3945 1b8e 07F12403 		add	r3, r7, #36
 3946 1b92 1344     		add	r3, r3, r2
 3947 1b94 174A     		ldr	r2, .L281+76
 3948 1b96 1C46     		mov	r4, r3
 3949 1b98 1346     		mov	r3, r2
 3950 1b9a 07CB     		ldmia	r3!, {r0, r1, r2}
 3951 1b9c 2060     		str	r0, [r4]	@ unaligned
 3952 1b9e 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 101


 3953 1ba0 A260     		str	r2, [r4, #8]	@ unaligned
 3954 1ba2 1B88     		ldrh	r3, [r3]	@ unaligned
 3955 1ba4 A381     		strh	r3, [r4, #12]	@ unaligned
 728:..\src/command_processing.c ****                             break;
 3956              		.loc 1 728 0
 3957 1ba6 50E0     		b	.L226
 3958              	.L282:
 3959              		.align	2
 3960              	.L281:
 3961 1ba8 00000000 		.word	.LC84
 3962 1bac 08000000 		.word	.LC85
 3963 1bb0 10000000 		.word	.LC86
 3964 1bb4 24000000 		.word	.LC87
 3965 1bb8 34000000 		.word	.LC88
 3966 1bbc 40000000 		.word	.LC89
 3967 1bc0 54000000 		.word	.LC90
 3968 1bc4 60000000 		.word	.LC91
 3969 1bc8 84000000 		.word	.LC92
 3970 1bcc 90000000 		.word	.LC93
 3971 1bd0 98000000 		.word	.LC94
 3972 1bd4 A4000000 		.word	.LC95
 3973 1bd8 BC000000 		.word	.LC96
 3974 1bdc C4000000 		.word	.LC97
 3975 1be0 CC000000 		.word	.LC98
 3976 1be4 D4000000 		.word	.LC99
 3977 1be8 DC000000 		.word	.LC100
 3978 1bec E4000000 		.word	.LC101
 3979 1bf0 EC000000 		.word	.LC102
 3980 1bf4 F4000000 		.word	.LC103
 3981              	.L230:
 729:..\src/command_processing.c ****                         case EXP_WIFI:
 730:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 3982              		.loc 1 730 0
 3983 1bf8 07F12403 		add	r3, r7, #36
 3984 1bfc 1846     		mov	r0, r3
 3985 1bfe FFF7FEFF 		bl	strlen
 3986 1c02 0346     		mov	r3, r0
 3987 1c04 1A46     		mov	r2, r3
 3988 1c06 07F12403 		add	r3, r7, #36
 3989 1c0a 1344     		add	r3, r3, r2
 3990 1c0c D44A     		ldr	r2, .L283
 3991 1c0e 1D46     		mov	r5, r3
 3992 1c10 1446     		mov	r4, r2
 3993 1c12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3994 1c14 2860     		str	r0, [r5]	@ unaligned
 3995 1c16 6960     		str	r1, [r5, #4]	@ unaligned
 3996 1c18 AA60     		str	r2, [r5, #8]	@ unaligned
 3997 1c1a EB60     		str	r3, [r5, #12]	@ unaligned
 3998 1c1c 2388     		ldrh	r3, [r4]	@ unaligned
 3999 1c1e 2B82     		strh	r3, [r5, #16]	@ unaligned
 731:..\src/command_processing.c ****         					break;
 4000              		.loc 1 731 0
 4001 1c20 13E0     		b	.L226
 4002              	.L231:
 732:..\src/command_processing.c ****                         case EXP_OTHER:
 733:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 4003              		.loc 1 733 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 102


 4004 1c22 07F12403 		add	r3, r7, #36
 4005 1c26 1846     		mov	r0, r3
 4006 1c28 FFF7FEFF 		bl	strlen
 4007 1c2c 0346     		mov	r3, r0
 4008 1c2e 1A46     		mov	r2, r3
 4009 1c30 07F12403 		add	r3, r7, #36
 4010 1c34 1344     		add	r3, r3, r2
 4011 1c36 CB4A     		ldr	r2, .L283+4
 4012 1c38 1C46     		mov	r4, r3
 4013 1c3a 1346     		mov	r3, r2
 4014 1c3c 07CB     		ldmia	r3!, {r0, r1, r2}
 4015 1c3e 2060     		str	r0, [r4]	@ unaligned
 4016 1c40 6160     		str	r1, [r4, #4]	@ unaligned
 4017 1c42 A260     		str	r2, [r4, #8]	@ unaligned
 4018 1c44 1B78     		ldrb	r3, [r3]
 4019 1c46 2373     		strb	r3, [r4, #12]
 734:..\src/command_processing.c ****         					break;
 4020              		.loc 1 734 0
 4021 1c48 00BF     		nop
 4022              	.L226:
 735:..\src/command_processing.c ****                     }
 736:..\src/command_processing.c ****                     break;
 4023              		.loc 1 736 0
 4024 1c4a 86E1     		b	.L269
 4025              	.L195:
 737:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 738:..\src/command_processing.c ****                     switch(*m_addr){
 4026              		.loc 1 738 0
 4027 1c4c D7F8483C 		ldr	r3, [r7, #3144]
 4028 1c50 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4029 1c52 012B     		cmp	r3, #1
 4030 1c54 14D0     		beq	.L233
 4031 1c56 022B     		cmp	r3, #2
 4032 1c58 22D0     		beq	.L234
 4033 1c5a 002B     		cmp	r3, #0
 4034 1c5c 00D0     		beq	.L235
 739:..\src/command_processing.c ****                         case 0: 
 740:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 741:..\src/command_processing.c ****                             break;
 742:..\src/command_processing.c ****                         case 1: 
 743:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 744:..\src/command_processing.c ****                             break;
 745:..\src/command_processing.c ****                         case 2: 
 746:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 747:..\src/command_processing.c ****                             break;
 748:..\src/command_processing.c ****                         default:
 749:..\src/command_processing.c ****                             break;
 4035              		.loc 1 749 0
 4036 1c5e 2FE0     		b	.L236
 4037              	.L235:
 740:..\src/command_processing.c ****                             break;
 4038              		.loc 1 740 0
 4039 1c60 07F12403 		add	r3, r7, #36
 4040 1c64 1846     		mov	r0, r3
 4041 1c66 FFF7FEFF 		bl	strlen
 4042 1c6a 0346     		mov	r3, r0
 4043 1c6c 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 103


 4044 1c6e 07F12403 		add	r3, r7, #36
 4045 1c72 1344     		add	r3, r3, r2
 4046 1c74 BC4A     		ldr	r2, .L283+8
 4047 1c76 1068     		ldr	r0, [r2]	@ unaligned
 4048 1c78 1860     		str	r0, [r3]	@ unaligned
 4049 1c7a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4050 1c7c 9A80     		strh	r2, [r3, #4]	@ unaligned
 741:..\src/command_processing.c ****                         case 1: 
 4051              		.loc 1 741 0
 4052 1c7e 1FE0     		b	.L236
 4053              	.L233:
 743:..\src/command_processing.c ****                             break;
 4054              		.loc 1 743 0
 4055 1c80 07F12403 		add	r3, r7, #36
 4056 1c84 1846     		mov	r0, r3
 4057 1c86 FFF7FEFF 		bl	strlen
 4058 1c8a 0346     		mov	r3, r0
 4059 1c8c 1A46     		mov	r2, r3
 4060 1c8e 07F12403 		add	r3, r7, #36
 4061 1c92 1344     		add	r3, r3, r2
 4062 1c94 B54A     		ldr	r2, .L283+12
 4063 1c96 1068     		ldr	r0, [r2]	@ unaligned
 4064 1c98 1860     		str	r0, [r3]	@ unaligned
 4065 1c9a 1279     		ldrb	r2, [r2, #4]
 4066 1c9c 1A71     		strb	r2, [r3, #4]
 744:..\src/command_processing.c ****                         case 2: 
 4067              		.loc 1 744 0
 4068 1c9e 0FE0     		b	.L236
 4069              	.L234:
 746:..\src/command_processing.c ****                             break;
 4070              		.loc 1 746 0
 4071 1ca0 07F12403 		add	r3, r7, #36
 4072 1ca4 1846     		mov	r0, r3
 4073 1ca6 FFF7FEFF 		bl	strlen
 4074 1caa 0346     		mov	r3, r0
 4075 1cac 1A46     		mov	r2, r3
 4076 1cae 07F12403 		add	r3, r7, #36
 4077 1cb2 1344     		add	r3, r3, r2
 4078 1cb4 AE4A     		ldr	r2, .L283+16
 4079 1cb6 1068     		ldr	r0, [r2]	@ unaligned
 4080 1cb8 1860     		str	r0, [r3]	@ unaligned
 4081 1cba 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4082 1cbc 9A80     		strh	r2, [r3, #4]	@ unaligned
 747:..\src/command_processing.c ****                         default:
 4083              		.loc 1 747 0
 4084 1cbe 00BF     		nop
 4085              	.L236:
 750:..\src/command_processing.c ****                     } 
 751:..\src/command_processing.c ****                     break;
 4086              		.loc 1 751 0 discriminator 12
 4087 1cc0 73E1     		b	.L187
 4088              	.L196:
 752:..\src/command_processing.c ****                 case 8:     // user menu          
 753:..\src/command_processing.c ****                     switch(*m_addr){
 4089              		.loc 1 753 0
 4090 1cc2 D7F8483C 		ldr	r3, [r7, #3144]
 4091 1cc6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 104


 4092 1cc8 012B     		cmp	r3, #1
 4093 1cca 18D0     		beq	.L238
 4094 1ccc 022B     		cmp	r3, #2
 4095 1cce 28D0     		beq	.L239
 4096 1cd0 002B     		cmp	r3, #0
 4097 1cd2 00D0     		beq	.L240
 754:..\src/command_processing.c ****                         case GENERIC_USER:
 755:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC USER\0");
 756:..\src/command_processing.c ****                         break;
 757:..\src/command_processing.c ****                         case MARIA:
 758:..\src/command_processing.c ****                             strcat(aux_str, " MARIA\0");
 759:..\src/command_processing.c ****                         break;
 760:..\src/command_processing.c ****                         case ROZA:
 761:..\src/command_processing.c ****                             strcat(aux_str, " ROZA\0");
 762:..\src/command_processing.c ****                         break;
 763:..\src/command_processing.c ****                     }   
 764:..\src/command_processing.c ****                     break;                    
 4098              		.loc 1 764 0
 4099 1cd4 69E1     		b	.L187
 4100              	.L240:
 755:..\src/command_processing.c ****                         break;
 4101              		.loc 1 755 0
 4102 1cd6 07F12403 		add	r3, r7, #36
 4103 1cda 1846     		mov	r0, r3
 4104 1cdc FFF7FEFF 		bl	strlen
 4105 1ce0 0346     		mov	r3, r0
 4106 1ce2 1A46     		mov	r2, r3
 4107 1ce4 07F12403 		add	r3, r7, #36
 4108 1ce8 1344     		add	r3, r3, r2
 4109 1cea A24A     		ldr	r2, .L283+20
 4110 1cec 1C46     		mov	r4, r3
 4111 1cee 1346     		mov	r3, r2
 4112 1cf0 07CB     		ldmia	r3!, {r0, r1, r2}
 4113 1cf2 2060     		str	r0, [r4]	@ unaligned
 4114 1cf4 6160     		str	r1, [r4, #4]	@ unaligned
 4115 1cf6 A260     		str	r2, [r4, #8]	@ unaligned
 4116 1cf8 1B88     		ldrh	r3, [r3]	@ unaligned
 4117 1cfa A381     		strh	r3, [r4, #12]	@ unaligned
 756:..\src/command_processing.c ****                         case MARIA:
 4118              		.loc 1 756 0
 4119 1cfc 21E0     		b	.L237
 4120              	.L238:
 758:..\src/command_processing.c ****                         break;
 4121              		.loc 1 758 0
 4122 1cfe 07F12403 		add	r3, r7, #36
 4123 1d02 1846     		mov	r0, r3
 4124 1d04 FFF7FEFF 		bl	strlen
 4125 1d08 0346     		mov	r3, r0
 4126 1d0a 1A46     		mov	r2, r3
 4127 1d0c 07F12403 		add	r3, r7, #36
 4128 1d10 1344     		add	r3, r3, r2
 4129 1d12 994A     		ldr	r2, .L283+24
 4130 1d14 1068     		ldr	r0, [r2]	@ unaligned
 4131 1d16 1860     		str	r0, [r3]	@ unaligned
 4132 1d18 9188     		ldrh	r1, [r2, #4]	@ unaligned
 4133 1d1a 9279     		ldrb	r2, [r2, #6]
 4134 1d1c 9980     		strh	r1, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 105


 4135 1d1e 9A71     		strb	r2, [r3, #6]
 759:..\src/command_processing.c ****                         case ROZA:
 4136              		.loc 1 759 0
 4137 1d20 0FE0     		b	.L237
 4138              	.L239:
 761:..\src/command_processing.c ****                         break;
 4139              		.loc 1 761 0
 4140 1d22 07F12403 		add	r3, r7, #36
 4141 1d26 1846     		mov	r0, r3
 4142 1d28 FFF7FEFF 		bl	strlen
 4143 1d2c 0346     		mov	r3, r0
 4144 1d2e 1A46     		mov	r2, r3
 4145 1d30 07F12403 		add	r3, r7, #36
 4146 1d34 1344     		add	r3, r3, r2
 4147 1d36 914A     		ldr	r2, .L283+28
 4148 1d38 1068     		ldr	r0, [r2]	@ unaligned
 4149 1d3a 1860     		str	r0, [r3]	@ unaligned
 4150 1d3c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 4151 1d3e 9A80     		strh	r2, [r3, #4]	@ unaligned
 762:..\src/command_processing.c ****                     }   
 4152              		.loc 1 762 0
 4153 1d40 00BF     		nop
 4154              	.L237:
 4155              		.loc 1 764 0
 4156 1d42 32E1     		b	.L187
 4157              	.L197:
 765:..\src/command_processing.c ****                 case 9:     // driver type menu
 766:..\src/command_processing.c ****                     switch(*m_addr){
 4158              		.loc 1 766 0
 4159 1d44 D7F8483C 		ldr	r3, [r7, #3144]
 4160 1d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4161 1d4a 002B     		cmp	r3, #0
 4162 1d4c 02D0     		beq	.L242
 4163 1d4e 012B     		cmp	r3, #1
 4164 1d50 15D0     		beq	.L243
 767:..\src/command_processing.c ****                         case 0:
 768:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 769:..\src/command_processing.c ****                         break;
 770:..\src/command_processing.c ****                         case 1:
 771:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 772:..\src/command_processing.c ****                         break;
 773:..\src/command_processing.c ****                     }
 774:..\src/command_processing.c ****                     break;
 4165              		.loc 1 774 0
 4166 1d52 2AE1     		b	.L187
 4167              	.L242:
 768:..\src/command_processing.c ****                         break;
 4168              		.loc 1 768 0
 4169 1d54 07F12403 		add	r3, r7, #36
 4170 1d58 1846     		mov	r0, r3
 4171 1d5a FFF7FEFF 		bl	strlen
 4172 1d5e 0346     		mov	r3, r0
 4173 1d60 1A46     		mov	r2, r3
 4174 1d62 07F12403 		add	r3, r7, #36
 4175 1d66 1344     		add	r3, r3, r2
 4176 1d68 854A     		ldr	r2, .L283+32
 4177 1d6a 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 106


 4178 1d6c 1446     		mov	r4, r2
 4179 1d6e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4180 1d70 2860     		str	r0, [r5]	@ unaligned
 4181 1d72 6960     		str	r1, [r5, #4]	@ unaligned
 4182 1d74 AA60     		str	r2, [r5, #8]	@ unaligned
 4183 1d76 EB60     		str	r3, [r5, #12]	@ unaligned
 4184 1d78 2068     		ldr	r0, [r4]	@ unaligned
 4185 1d7a 2861     		str	r0, [r5, #16]	@ unaligned
 769:..\src/command_processing.c ****                         case 1:
 4186              		.loc 1 769 0
 4187 1d7c 16E0     		b	.L241
 4188              	.L243:
 771:..\src/command_processing.c ****                         break;
 4189              		.loc 1 771 0
 4190 1d7e 07F12403 		add	r3, r7, #36
 4191 1d82 1846     		mov	r0, r3
 4192 1d84 FFF7FEFF 		bl	strlen
 4193 1d88 0346     		mov	r3, r0
 4194 1d8a 1A46     		mov	r2, r3
 4195 1d8c 07F12403 		add	r3, r7, #36
 4196 1d90 1344     		add	r3, r3, r2
 4197 1d92 7C4A     		ldr	r2, .L283+36
 4198 1d94 1D46     		mov	r5, r3
 4199 1d96 1446     		mov	r4, r2
 4200 1d98 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4201 1d9a 2860     		str	r0, [r5]	@ unaligned
 4202 1d9c 6960     		str	r1, [r5, #4]	@ unaligned
 4203 1d9e AA60     		str	r2, [r5, #8]	@ unaligned
 4204 1da0 EB60     		str	r3, [r5, #12]	@ unaligned
 4205 1da2 2068     		ldr	r0, [r4]	@ unaligned
 4206 1da4 2861     		str	r0, [r5, #16]	@ unaligned
 4207 1da6 A388     		ldrh	r3, [r4, #4]	@ unaligned
 4208 1da8 AB82     		strh	r3, [r5, #20]	@ unaligned
 772:..\src/command_processing.c ****                     }
 4209              		.loc 1 772 0
 4210 1daa 00BF     		nop
 4211              	.L241:
 4212              		.loc 1 774 0
 4213 1dac FDE0     		b	.L187
 4214              	.L198:
 775:..\src/command_processing.c ****                 case 10:    // device type menu
 776:..\src/command_processing.c ****                     switch(*m_addr){
 4215              		.loc 1 776 0
 4216 1dae D7F8483C 		ldr	r3, [r7, #3144]
 4217 1db2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4218 1db4 032B     		cmp	r3, #3
 4219 1db6 00F2F780 		bhi	.L270
 4220 1dba 01A2     		adr	r2, .L246
 4221 1dbc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4222              		.p2align 2
 4223              	.L246:
 4224 1dc0 D11D0000 		.word	.L245+1
 4225 1dc4 F91D0000 		.word	.L247+1
 4226 1dc8 231E0000 		.word	.L248+1
 4227 1dcc 4B1E0000 		.word	.L249+1
 4228              		.p2align 1
 4229              	.L245:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 107


 777:..\src/command_processing.c ****                         case 0:
 778:..\src/command_processing.c ****                             strcat(aux_str, " SOFTHAND PRO\0");
 4230              		.loc 1 778 0
 4231 1dd0 07F12403 		add	r3, r7, #36
 4232 1dd4 1846     		mov	r0, r3
 4233 1dd6 FFF7FEFF 		bl	strlen
 4234 1dda 0346     		mov	r3, r0
 4235 1ddc 1A46     		mov	r2, r3
 4236 1dde 07F12403 		add	r3, r7, #36
 4237 1de2 1344     		add	r3, r3, r2
 4238 1de4 684A     		ldr	r2, .L283+40
 4239 1de6 1C46     		mov	r4, r3
 4240 1de8 1346     		mov	r3, r2
 4241 1dea 07CB     		ldmia	r3!, {r0, r1, r2}
 4242 1dec 2060     		str	r0, [r4]	@ unaligned
 4243 1dee 6160     		str	r1, [r4, #4]	@ unaligned
 4244 1df0 A260     		str	r2, [r4, #8]	@ unaligned
 4245 1df2 1B88     		ldrh	r3, [r3]	@ unaligned
 4246 1df4 A381     		strh	r3, [r4, #12]	@ unaligned
 779:..\src/command_processing.c ****                         break;
 4247              		.loc 1 779 0
 4248 1df6 3BE0     		b	.L244
 4249              	.L247:
 780:..\src/command_processing.c ****                         case 1:
 781:..\src/command_processing.c ****                             strcat(aux_str, " GENERIC 2 MOTORS\0");
 4250              		.loc 1 781 0
 4251 1df8 07F12403 		add	r3, r7, #36
 4252 1dfc 1846     		mov	r0, r3
 4253 1dfe FFF7FEFF 		bl	strlen
 4254 1e02 0346     		mov	r3, r0
 4255 1e04 1A46     		mov	r2, r3
 4256 1e06 07F12403 		add	r3, r7, #36
 4257 1e0a 1344     		add	r3, r3, r2
 4258 1e0c 5F4A     		ldr	r2, .L283+44
 4259 1e0e 1D46     		mov	r5, r3
 4260 1e10 1446     		mov	r4, r2
 4261 1e12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4262 1e14 2860     		str	r0, [r5]	@ unaligned
 4263 1e16 6960     		str	r1, [r5, #4]	@ unaligned
 4264 1e18 AA60     		str	r2, [r5, #8]	@ unaligned
 4265 1e1a EB60     		str	r3, [r5, #12]	@ unaligned
 4266 1e1c 2388     		ldrh	r3, [r4]	@ unaligned
 4267 1e1e 2B82     		strh	r3, [r5, #16]	@ unaligned
 782:..\src/command_processing.c ****                         break;
 4268              		.loc 1 782 0
 4269 1e20 26E0     		b	.L244
 4270              	.L248:
 783:..\src/command_processing.c ****                         case 2:
 784:..\src/command_processing.c ****                             strcat(aux_str, " AIR CHAMBERS\0");
 4271              		.loc 1 784 0
 4272 1e22 07F12403 		add	r3, r7, #36
 4273 1e26 1846     		mov	r0, r3
 4274 1e28 FFF7FEFF 		bl	strlen
 4275 1e2c 0346     		mov	r3, r0
 4276 1e2e 1A46     		mov	r2, r3
 4277 1e30 07F12403 		add	r3, r7, #36
 4278 1e34 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 108


 4279 1e36 564A     		ldr	r2, .L283+48
 4280 1e38 1C46     		mov	r4, r3
 4281 1e3a 1346     		mov	r3, r2
 4282 1e3c 07CB     		ldmia	r3!, {r0, r1, r2}
 4283 1e3e 2060     		str	r0, [r4]	@ unaligned
 4284 1e40 6160     		str	r1, [r4, #4]	@ unaligned
 4285 1e42 A260     		str	r2, [r4, #8]	@ unaligned
 4286 1e44 1B88     		ldrh	r3, [r3]	@ unaligned
 4287 1e46 A381     		strh	r3, [r4, #12]	@ unaligned
 785:..\src/command_processing.c ****                         break;
 4288              		.loc 1 785 0
 4289 1e48 12E0     		b	.L244
 4290              	.L249:
 786:..\src/command_processing.c ****                         case 3:
 787:..\src/command_processing.c ****                             strcat(aux_str, " OTTOBOCK WRIST\0");
 4291              		.loc 1 787 0
 4292 1e4a 07F12403 		add	r3, r7, #36
 4293 1e4e 1846     		mov	r0, r3
 4294 1e50 FFF7FEFF 		bl	strlen
 4295 1e54 0346     		mov	r3, r0
 4296 1e56 1A46     		mov	r2, r3
 4297 1e58 07F12403 		add	r3, r7, #36
 4298 1e5c 1344     		add	r3, r3, r2
 4299 1e5e 4D4A     		ldr	r2, .L283+52
 4300 1e60 1C46     		mov	r4, r3
 4301 1e62 1546     		mov	r5, r2
 4302 1e64 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4303 1e66 2060     		str	r0, [r4]	@ unaligned
 4304 1e68 6160     		str	r1, [r4, #4]	@ unaligned
 4305 1e6a A260     		str	r2, [r4, #8]	@ unaligned
 4306 1e6c E360     		str	r3, [r4, #12]	@ unaligned
 788:..\src/command_processing.c ****                         break;
 4307              		.loc 1 788 0
 4308 1e6e 00BF     		nop
 4309              	.L244:
 789:..\src/command_processing.c ****                     }
 790:..\src/command_processing.c ****                     break;
 4310              		.loc 1 790 0
 4311 1e70 9AE0     		b	.L270
 4312              	.L199:
 791:..\src/command_processing.c ****                 case 11:    // wrist activation mode menu
 792:..\src/command_processing.c ****                     switch(*m_addr){
 4313              		.loc 1 792 0
 4314 1e72 D7F8483C 		ldr	r3, [r7, #3144]
 4315 1e76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4316 1e78 002B     		cmp	r3, #0
 4317 1e7a 02D0     		beq	.L251
 4318 1e7c 012B     		cmp	r3, #1
 4319 1e7e 1AD0     		beq	.L252
 793:..\src/command_processing.c ****                         case 0:
 794:..\src/command_processing.c ****                             strcat(aux_str, " Fast:wrist, Slow:hand\0");
 795:..\src/command_processing.c ****                         break;
 796:..\src/command_processing.c ****                         case 1:
 797:..\src/command_processing.c ****                             strcat(aux_str, " Slow:wrist, Fast:hand\0");
 798:..\src/command_processing.c ****                         break;
 799:..\src/command_processing.c ****                     }
 800:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 109


 4320              		.loc 1 800 0
 4321 1e80 93E0     		b	.L187
 4322              	.L251:
 794:..\src/command_processing.c ****                         break;
 4323              		.loc 1 794 0
 4324 1e82 07F12403 		add	r3, r7, #36
 4325 1e86 1846     		mov	r0, r3
 4326 1e88 FFF7FEFF 		bl	strlen
 4327 1e8c 0346     		mov	r3, r0
 4328 1e8e 1A46     		mov	r2, r3
 4329 1e90 07F12403 		add	r3, r7, #36
 4330 1e94 1344     		add	r3, r3, r2
 4331 1e96 404A     		ldr	r2, .L283+56
 4332 1e98 1C46     		mov	r4, r3
 4333 1e9a 1546     		mov	r5, r2
 4334 1e9c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4335 1e9e 2060     		str	r0, [r4]	@ unaligned
 4336 1ea0 6160     		str	r1, [r4, #4]	@ unaligned
 4337 1ea2 A260     		str	r2, [r4, #8]	@ unaligned
 4338 1ea4 E360     		str	r3, [r4, #12]	@ unaligned
 4339 1ea6 2868     		ldr	r0, [r5]	@ unaligned
 4340 1ea8 2061     		str	r0, [r4, #16]	@ unaligned
 4341 1eaa AB88     		ldrh	r3, [r5, #4]	@ unaligned
 4342 1eac AA79     		ldrb	r2, [r5, #6]
 4343 1eae A382     		strh	r3, [r4, #20]	@ unaligned
 4344 1eb0 1346     		mov	r3, r2
 4345 1eb2 A375     		strb	r3, [r4, #22]
 795:..\src/command_processing.c ****                         case 1:
 4346              		.loc 1 795 0
 4347 1eb4 19E0     		b	.L250
 4348              	.L252:
 797:..\src/command_processing.c ****                         break;
 4349              		.loc 1 797 0
 4350 1eb6 07F12403 		add	r3, r7, #36
 4351 1eba 1846     		mov	r0, r3
 4352 1ebc FFF7FEFF 		bl	strlen
 4353 1ec0 0346     		mov	r3, r0
 4354 1ec2 1A46     		mov	r2, r3
 4355 1ec4 07F12403 		add	r3, r7, #36
 4356 1ec8 1344     		add	r3, r3, r2
 4357 1eca 344A     		ldr	r2, .L283+60
 4358 1ecc 1C46     		mov	r4, r3
 4359 1ece 1546     		mov	r5, r2
 4360 1ed0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 4361 1ed2 2060     		str	r0, [r4]	@ unaligned
 4362 1ed4 6160     		str	r1, [r4, #4]	@ unaligned
 4363 1ed6 A260     		str	r2, [r4, #8]	@ unaligned
 4364 1ed8 E360     		str	r3, [r4, #12]	@ unaligned
 4365 1eda 2868     		ldr	r0, [r5]	@ unaligned
 4366 1edc 2061     		str	r0, [r4, #16]	@ unaligned
 4367 1ede AB88     		ldrh	r3, [r5, #4]	@ unaligned
 4368 1ee0 AA79     		ldrb	r2, [r5, #6]
 4369 1ee2 A382     		strh	r3, [r4, #20]	@ unaligned
 4370 1ee4 1346     		mov	r3, r2
 4371 1ee6 A375     		strb	r3, [r4, #22]
 798:..\src/command_processing.c ****                     }
 4372              		.loc 1 798 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 110


 4373 1ee8 00BF     		nop
 4374              	.L250:
 4375              		.loc 1 800 0
 4376 1eea 5EE0     		b	.L187
 4377              	.L200:
 801:..\src/command_processing.c ****                 case 12:    // wrist activation mode menu
 802:..\src/command_processing.c ****                     switch(*m_addr){
 4378              		.loc 1 802 0
 4379 1eec D7F8483C 		ldr	r3, [r7, #3144]
 4380 1ef0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4381 1ef2 002B     		cmp	r3, #0
 4382 1ef4 02D0     		beq	.L254
 4383 1ef6 012B     		cmp	r3, #1
 4384 1ef8 15D0     		beq	.L255
 803:..\src/command_processing.c ****                         case 0:
 804:..\src/command_processing.c ****                             strcat(aux_str, " Close:CW, Open:CCW\0");
 805:..\src/command_processing.c ****                         break;
 806:..\src/command_processing.c ****                         case 1:
 807:..\src/command_processing.c ****                             strcat(aux_str, " Close:CCW, Open:CW\0");
 808:..\src/command_processing.c ****                         break;
 809:..\src/command_processing.c ****                     }
 810:..\src/command_processing.c ****                     break;
 4385              		.loc 1 810 0
 4386 1efa 56E0     		b	.L187
 4387              	.L254:
 804:..\src/command_processing.c ****                         break;
 4388              		.loc 1 804 0
 4389 1efc 07F12403 		add	r3, r7, #36
 4390 1f00 1846     		mov	r0, r3
 4391 1f02 FFF7FEFF 		bl	strlen
 4392 1f06 0346     		mov	r3, r0
 4393 1f08 1A46     		mov	r2, r3
 4394 1f0a 07F12403 		add	r3, r7, #36
 4395 1f0e 1344     		add	r3, r3, r2
 4396 1f10 234A     		ldr	r2, .L283+64
 4397 1f12 1D46     		mov	r5, r3
 4398 1f14 1446     		mov	r4, r2
 4399 1f16 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4400 1f18 2860     		str	r0, [r5]	@ unaligned
 4401 1f1a 6960     		str	r1, [r5, #4]	@ unaligned
 4402 1f1c AA60     		str	r2, [r5, #8]	@ unaligned
 4403 1f1e EB60     		str	r3, [r5, #12]	@ unaligned
 4404 1f20 2068     		ldr	r0, [r4]	@ unaligned
 4405 1f22 2861     		str	r0, [r5, #16]	@ unaligned
 805:..\src/command_processing.c ****                         case 1:
 4406              		.loc 1 805 0
 4407 1f24 14E0     		b	.L253
 4408              	.L255:
 807:..\src/command_processing.c ****                         break;
 4409              		.loc 1 807 0
 4410 1f26 07F12403 		add	r3, r7, #36
 4411 1f2a 1846     		mov	r0, r3
 4412 1f2c FFF7FEFF 		bl	strlen
 4413 1f30 0346     		mov	r3, r0
 4414 1f32 1A46     		mov	r2, r3
 4415 1f34 07F12403 		add	r3, r7, #36
 4416 1f38 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 111


 4417 1f3a 1A4A     		ldr	r2, .L283+68
 4418 1f3c 1D46     		mov	r5, r3
 4419 1f3e 1446     		mov	r4, r2
 4420 1f40 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 4421 1f42 2860     		str	r0, [r5]	@ unaligned
 4422 1f44 6960     		str	r1, [r5, #4]	@ unaligned
 4423 1f46 AA60     		str	r2, [r5, #8]	@ unaligned
 4424 1f48 EB60     		str	r3, [r5, #12]	@ unaligned
 4425 1f4a 2068     		ldr	r0, [r4]	@ unaligned
 4426 1f4c 2861     		str	r0, [r5, #16]	@ unaligned
 808:..\src/command_processing.c ****                     }
 4427              		.loc 1 808 0
 4428 1f4e 00BF     		nop
 4429              	.L253:
 4430              		.loc 1 810 0
 4431 1f50 2BE0     		b	.L187
 4432              	.L267:
 676:..\src/command_processing.c ****                 case 2:     // control mode menu
 4433              		.loc 1 676 0
 4434 1f52 00BF     		nop
 4435 1f54 29E0     		b	.L187
 4436              	.L268:
 692:..\src/command_processing.c ****                 case 3:     // yes/no menu
 4437              		.loc 1 692 0
 4438 1f56 00BF     		nop
 4439 1f58 27E0     		b	.L187
 4440              	.L269:
 736:..\src/command_processing.c ****                 case 7:     // spi read delay menu
 4441              		.loc 1 736 0
 4442 1f5a 00BF     		nop
 4443 1f5c 25E0     		b	.L187
 4444              	.L284:
 4445 1f5e 00BF     		.align	2
 4446              	.L283:
 4447 1f60 04010000 		.word	.LC104
 4448 1f64 18010000 		.word	.LC105
 4449 1f68 EC000000 		.word	.LC102
 4450 1f6c 28010000 		.word	.LC106
 4451 1f70 30010000 		.word	.LC107
 4452 1f74 38010000 		.word	.LC108
 4453 1f78 48010000 		.word	.LC109
 4454 1f7c 50010000 		.word	.LC110
 4455 1f80 58010000 		.word	.LC111
 4456 1f84 70010000 		.word	.LC112
 4457 1f88 88010000 		.word	.LC113
 4458 1f8c 98010000 		.word	.LC114
 4459 1f90 AC010000 		.word	.LC115
 4460 1f94 BC010000 		.word	.LC116
 4461 1f98 D0010000 		.word	.LC117
 4462 1f9c E8010000 		.word	.LC118
 4463 1fa0 00020000 		.word	.LC119
 4464 1fa4 18020000 		.word	.LC120
 4465              	.L270:
 790:..\src/command_processing.c ****                 case 11:    // wrist activation mode menu
 4466              		.loc 1 790 0
 4467 1fa8 00BF     		nop
 4468              	.L187:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 112


 811:..\src/command_processing.c ****             }
 812:..\src/command_processing.c ****             //Recomputes string lenght
 813:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 4469              		.loc 1 813 0
 4470 1faa 07F12403 		add	r3, r7, #36
 4471 1fae 1846     		mov	r0, r3
 4472 1fb0 FFF7FEFF 		bl	strlen
 4473 1fb4 0346     		mov	r3, r0
 4474 1fb6 DBB2     		uxtb	r3, r3
 4475 1fb8 0133     		adds	r3, r3, #1
 4476 1fba 87F8523C 		strb	r3, [r7, #3154]
 4477              	.L186:
 814:..\src/command_processing.c ****         }
 815:..\src/command_processing.c **** 
 816:..\src/command_processing.c ****         // Add parameter string to packet
 817:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4478              		.loc 1 817 0
 4479 1fbe 97F8523C 		ldrb	r3, [r7, #3154]
 4480 1fc2 87F8573C 		strb	r3, [r7, #3159]
 4481 1fc6 26E0     		b	.L256
 4482              	.L257:
 818:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4483              		.loc 1 818 0 discriminator 3
 4484 1fc8 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4485 1fcc 3222     		movs	r2, #50
 4486 1fce 02FB03F3 		mul	r3, r2, r3
 4487 1fd2 1A1D     		adds	r2, r3, #4
 4488 1fd4 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4489 1fd8 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4490 1fdc 381D     		adds	r0, r7, #4
 4491 1fde 0068     		ldr	r0, [r0]
 4492 1fe0 0144     		add	r1, r1, r0
 4493 1fe2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4494 1fe4 01FB03F3 		mul	r3, r1, r3
 4495 1fe8 1A44     		add	r2, r2, r3
 4496 1fea 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4497 1fee 1A44     		add	r2, r2, r3
 4498 1ff0 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4499 1ff4 D31A     		subs	r3, r2, r3
 4500 1ff6 97F8521C 		ldrb	r1, [r7, #3154]	@ zero_extendqisi2
 4501 1ffa 97F8572C 		ldrb	r2, [r7, #3159]	@ zero_extendqisi2
 4502 1ffe 8A1A     		subs	r2, r1, r2
 4503 2000 07F12401 		add	r1, r7, #36
 4504 2004 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4505 2006 07F15802 		add	r2, r7, #88
 4506 200a D154     		strb	r1, [r2, r3]
 817:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4507              		.loc 1 817 0 discriminator 3
 4508 200c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4509 2010 013B     		subs	r3, r3, #1
 4510 2012 87F8573C 		strb	r3, [r7, #3159]
 4511              	.L256:
 817:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 4512              		.loc 1 817 0 is_stmt 0 discriminator 1
 4513 2016 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4514 201a 002B     		cmp	r3, #0
 4515 201c D4D1     		bne	.L257
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 113


 819:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 820:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4516              		.loc 1 820 0 is_stmt 1
 4517 201e 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4518 2022 07F10802 		add	r2, r7, #8
 4519 2026 1268     		ldr	r2, [r2]
 4520 2028 1344     		add	r3, r3, r2
 4521 202a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4522 202c 002B     		cmp	r3, #0
 4523 202e 21D1     		bne	.L258
 821:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 4524              		.loc 1 821 0
 4525 2030 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4526 2034 3222     		movs	r2, #50
 4527 2036 02FB03F3 		mul	r3, r2, r3
 4528 203a 1A1D     		adds	r2, r3, #4
 4529 203c 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4530 2040 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4531 2044 381D     		adds	r0, r7, #4
 4532 2046 0068     		ldr	r0, [r0]
 4533 2048 0144     		add	r1, r1, r0
 4534 204a 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4535 204c 01FB03F3 		mul	r3, r1, r3
 4536 2050 1A44     		add	r2, r2, r3
 4537 2052 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4538 2056 1344     		add	r3, r3, r2
 4539 2058 97F8542C 		ldrb	r2, [r7, #3156]	@ zero_extendqisi2
 4540 205c D7F8701C 		ldr	r1, [r7, #3184]
 4541 2060 0A44     		add	r2, r2, r1
 4542 2062 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4543 2064 07F15802 		add	r2, r7, #88
 4544 2068 D154     		strb	r1, [r2, r3]
 822:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 4545              		.loc 1 822 0
 4546 206a 97F8543C 		ldrb	r3, [r7, #3156]
 4547 206e 0133     		adds	r3, r3, #1
 4548 2070 87F8543C 		strb	r3, [r7, #3156]
 4549              	.L258:
 823:..\src/command_processing.c ****         }      
 824:..\src/command_processing.c ****         
 825:..\src/command_processing.c ****         // Add struct index after an empty bit
 826:..\src/command_processing.c ****         // Note: added here at the end of packets is transparent to old parameters retrieving versi
 827:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 4550              		.loc 1 827 0
 4551 2074 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4552 2078 07F10802 		add	r2, r7, #8
 4553 207c 1268     		ldr	r2, [r2]
 4554 207e 1344     		add	r3, r3, r2
 4555 2080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4556 2082 002B     		cmp	r3, #0
 4557 2084 1ED1     		bne	.L259
 828:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 2] = NUM
 4558              		.loc 1 828 0
 4559 2086 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4560 208a 3222     		movs	r2, #50
 4561 208c 02FB03F3 		mul	r3, r2, r3
 4562 2090 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 114


 4563 2092 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4564 2096 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4565 209a 381D     		adds	r0, r7, #4
 4566 209c 0068     		ldr	r0, [r0]
 4567 209e 0144     		add	r1, r1, r0
 4568 20a0 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4569 20a2 01FB03F3 		mul	r3, r1, r3
 4570 20a6 1A44     		add	r2, r2, r3
 4571 20a8 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4572 20ac 1344     		add	r3, r3, r2
 4573 20ae 0233     		adds	r3, r3, #2
 4574 20b0 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4575 20b4 3946     		mov	r1, r7
 4576 20b6 0968     		ldr	r1, [r1]
 4577 20b8 0A44     		add	r2, r2, r1
 4578 20ba 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4579 20bc 07F15802 		add	r2, r7, #88
 4580 20c0 D154     		strb	r1, [r2, r3]
 4581 20c2 1DE0     		b	.L260
 4582              	.L259:
 829:..\src/command_processing.c ****         }
 830:..\src/command_processing.c ****         else {
 831:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght + 1] = NUM
 4583              		.loc 1 831 0
 4584 20c4 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4585 20c8 3222     		movs	r2, #50
 4586 20ca 02FB03F3 		mul	r3, r2, r3
 4587 20ce 1A1D     		adds	r2, r3, #4
 4588 20d0 97F8533C 		ldrb	r3, [r7, #3155]	@ zero_extendqisi2
 4589 20d4 97F8551C 		ldrb	r1, [r7, #3157]	@ zero_extendqisi2
 4590 20d8 381D     		adds	r0, r7, #4
 4591 20da 0068     		ldr	r0, [r0]
 4592 20dc 0144     		add	r1, r1, r0
 4593 20de 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 4594 20e0 01FB03F3 		mul	r3, r1, r3
 4595 20e4 1A44     		add	r2, r2, r3
 4596 20e6 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4597 20ea 1344     		add	r3, r3, r2
 4598 20ec 0133     		adds	r3, r3, #1
 4599 20ee 97F8552C 		ldrb	r2, [r7, #3157]	@ zero_extendqisi2
 4600 20f2 3946     		mov	r1, r7
 4601 20f4 0968     		ldr	r1, [r1]
 4602 20f6 0A44     		add	r2, r2, r1
 4603 20f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4604 20fa 07F15802 		add	r2, r7, #88
 4605 20fe D154     		strb	r1, [r2, r3]
 4606              	.L260:
 379:..\src/command_processing.c ****         
 4607              		.loc 1 379 0 discriminator 2
 4608 2100 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4609 2104 0133     		adds	r3, r3, #1
 4610 2106 87F8553C 		strb	r3, [r7, #3157]
 4611              	.L64:
 379:..\src/command_processing.c ****         
 4612              		.loc 1 379 0 is_stmt 0 discriminator 1
 4613 210a 97F8553C 		ldrb	r3, [r7, #3157]	@ zero_extendqisi2
 4614 210e 232B     		cmp	r3, #35
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 115


 4615 2110 7DF6C3AF 		bls	.L261
 832:..\src/command_processing.c ****         }
 833:..\src/command_processing.c ****     }
 834:..\src/command_processing.c **** 
 835:..\src/command_processing.c ****     // Add menu
 836:..\src/command_processing.c ****     for (j = 0; j < NUM_OF_DEV_PARAM_MENUS; j++) {
 4616              		.loc 1 836 0 is_stmt 1
 4617 2114 0023     		movs	r3, #0
 4618 2116 87F8563C 		strb	r3, [r7, #3158]
 4619 211a 3DE0     		b	.L262
 4620              	.L265:
 837:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4621              		.loc 1 837 0
 4622 211c 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4623 2120 9B00     		lsls	r3, r3, #2
 4624 2122 D7F87C2C 		ldr	r2, [r7, #3196]
 4625 2126 1344     		add	r3, r3, r2
 4626 2128 1B68     		ldr	r3, [r3]
 4627 212a 1846     		mov	r0, r3
 4628 212c FFF7FEFF 		bl	strlen
 4629 2130 0346     		mov	r3, r0
 4630 2132 87F8523C 		strb	r3, [r7, #3154]
 838:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4631              		.loc 1 838 0
 4632 2136 97F8523C 		ldrb	r3, [r7, #3154]
 4633 213a 87F8573C 		strb	r3, [r7, #3159]
 4634 213e 22E0     		b	.L263
 4635              	.L264:
 839:..\src/command_processing.c ****             packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + j*PARAM_MENU_SLOT + string_lenght -
 4636              		.loc 1 839 0 discriminator 3
 4637 2140 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4638 2144 9622     		movs	r2, #150
 4639 2146 02FB03F3 		mul	r3, r2, r3
 4640 214a 03F20A72 		addw	r2, r3, #1802
 4641 214e 97F8523C 		ldrb	r3, [r7, #3154]	@ zero_extendqisi2
 4642 2152 1A44     		add	r2, r2, r3
 4643 2154 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4644 2158 D31A     		subs	r3, r2, r3
 4645 215a 97F8562C 		ldrb	r2, [r7, #3158]	@ zero_extendqisi2
 4646 215e 9200     		lsls	r2, r2, #2
 4647 2160 D7F87C1C 		ldr	r1, [r7, #3196]
 4648 2164 0A44     		add	r2, r2, r1
 4649 2166 1268     		ldr	r2, [r2]
 4650 2168 97F8520C 		ldrb	r0, [r7, #3154]	@ zero_extendqisi2
 4651 216c 97F8571C 		ldrb	r1, [r7, #3159]	@ zero_extendqisi2
 4652 2170 411A     		subs	r1, r0, r1
 4653 2172 0A44     		add	r2, r2, r1
 4654 2174 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4655 2176 07F15802 		add	r2, r7, #88
 4656 217a D154     		strb	r1, [r2, r3]
 838:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 4657              		.loc 1 838 0 discriminator 3
 4658 217c 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4659 2180 013B     		subs	r3, r3, #1
 4660 2182 87F8573C 		strb	r3, [r7, #3159]
 4661              	.L263:
 838:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 116


 4662              		.loc 1 838 0 is_stmt 0 discriminator 1
 4663 2186 97F8573C 		ldrb	r3, [r7, #3159]	@ zero_extendqisi2
 4664 218a 002B     		cmp	r3, #0
 4665 218c D8D1     		bne	.L264
 836:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4666              		.loc 1 836 0 is_stmt 1 discriminator 2
 4667 218e 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4668 2192 0133     		adds	r3, r3, #1
 4669 2194 87F8563C 		strb	r3, [r7, #3158]
 4670              	.L262:
 836:..\src/command_processing.c ****         string_lenght = strlen((char*)MENU_STR[j]);
 4671              		.loc 1 836 0 is_stmt 0 discriminator 1
 4672 2198 97F8563C 		ldrb	r3, [r7, #3158]	@ zero_extendqisi2
 4673 219c 072B     		cmp	r3, #7
 4674 219e BDD9     		bls	.L265
 840:..\src/command_processing.c ****     }
 841:..\src/command_processing.c ****     
 842:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 4675              		.loc 1 842 0 is_stmt 1
 4676 21a0 B7F8503C 		ldrh	r3, [r7, #3152]
 4677 21a4 5C1E     		subs	r4, r3, #1
 4678 21a6 B7F8503C 		ldrh	r3, [r7, #3152]	@ movhi
 4679 21aa DBB2     		uxtb	r3, r3
 4680 21ac 013B     		subs	r3, r3, #1
 4681 21ae DAB2     		uxtb	r2, r3
 4682 21b0 07F15803 		add	r3, r7, #88
 4683 21b4 1146     		mov	r1, r2
 4684 21b6 1846     		mov	r0, r3
 4685 21b8 FFF7FEFF 		bl	LCRChecksum
 4686 21bc 0346     		mov	r3, r0
 4687 21be 1A46     		mov	r2, r3
 4688 21c0 07F15803 		add	r3, r7, #88
 4689 21c4 1A55     		strb	r2, [r3, r4]
 843:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 4690              		.loc 1 843 0
 4691 21c6 B7F8502C 		ldrh	r2, [r7, #3152]
 4692 21ca 07F15803 		add	r3, r7, #88
 4693 21ce 1146     		mov	r1, r2
 4694 21d0 1846     		mov	r0, r3
 4695 21d2 FFF7FEFF 		bl	commWrite
 844:..\src/command_processing.c **** }
 4696              		.loc 1 844 0
 4697 21d6 00BF     		nop
 4698 21d8 07F65C47 		addw	r7, r7, #3164
 4699              		.cfi_def_cfa_offset 20
 4700 21dc BD46     		mov	sp, r7
 4701              		.cfi_def_cfa_register 13
 4702              		@ sp needed
 4703 21de F0BD     		pop	{r4, r5, r6, r7, pc}
 4704              		.cfi_endproc
 4705              	.LFE67:
 4706              		.size	get_param_list, .-get_param_list
 4707              		.section	.rodata
 4708 022d 000000   		.align	2
 4709              	.LC122:
 4710 0230 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 4710      204E6F6E 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 117


 4710      650A3120 
 4710      2D3E204C 
 4710      6F772028 
 4711 0260 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 4711      74657220 
 4711      72656164 
 4711      290A3220 
 4711      2D3E2048 
 4712 0290 62697420 		.ascii	"bit register read)\012\000"
 4712      72656769 
 4712      73746572 
 4712      20726561 
 4712      64290A00 
 4713              		.align	2
 4714              	.LC123:
 4715 02a4 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 4715      20557362 
 4715      0A31202D 
 4715      3E204861 
 4715      6E646C65 
 4716 02cf 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 4716      20454D47 
 4716      20496E74 
 4716      65677261 
 4716      6C0A3420 
 4717 02fc 20416476 		.ascii	" Advanced\0126 -> Joystick\0127 -> EMG proportional"
 4717      616E6365 
 4717      640A3620 
 4717      2D3E204A 
 4717      6F797374 
 4718 0329 204E430A 		.ascii	" NC\012\000"
 4718      00
 4719 032e 0000     		.align	2
 4720              	.LC124:
 4721 0330 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 4721      20506F73 
 4721      6974696F 
 4721      6E0A3120 
 4721      2D3E2050 
 4722 035a 6F736974 		.ascii	"osition and Current\012\000"
 4722      696F6E20 
 4722      616E6420 
 4722      43757272 
 4722      656E740A 
 4723 036f 00       		.align	2
 4724              	.LC125:
 4725 0370 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 4725      20446561 
 4725      63746976 
 4725      61746520 
 4725      5B4E4F5D 
 4726 039a 0000     		.align	2
 4727              	.LC126:
 4728 039c 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 4728      20526967 
 4728      68740A31 
 4728      202D3E20 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 118


 4728      4C656674 
 4729 03b2 0000     		.align	2
 4730              	.LC127:
 4731 03b4 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 4731      204F4646 
 4731      0A31202D 
 4731      3E204F4E 
 4731      0A546865 
 4732 03db 00       		.align	2
 4733              	.LC128:
 4734 03dc 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 4734      204E6F6E 
 4734      650A3120 
 4734      2D3E2053 
 4734      442F5254 
 4735 0409 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 4735      0A33202D 
 4735      3E204F74 
 4735      68657220 
 4735      5B4E2F41 
 4736 0434 00       		.ascii	"\000"
 4737 0435 000000   		.align	2
 4738              	.LC129:
 4739 0438 30202D3E 		.ascii	"0 -> Generic user\0121 -> Maria\0122 -> Roza\012The"
 4739      2047656E 
 4739      65726963 
 4739      20757365 
 4739      720A3120 
 4740 0462 20626F61 		.ascii	" board will reset\012\000"
 4740      72642077 
 4740      696C6C20 
 4740      72657365 
 4740      740A00
 4741 0475 000000   		.align	2
 4742              	.LC130:
 4743 0478 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 4743      204D4333 
 4743      33383837 
 4743      20285374 
 4743      616E6461 
 4744 04a8 290A5468 		.ascii	")\012The board will reset\012\000"
 4744      6520626F 
 4744      61726420 
 4744      77696C6C 
 4744      20726573 
 4745              		.align	2
 4746              	.LC131:
 4747 04c0 30202D3E 		.ascii	"0 -> SOFTHAND PRO\0121 -> GENERIC 2 MOTORS\0122 -> "
 4747      20534F46 
 4747      5448414E 
 4747      44205052 
 4747      4F0A3120 
 4748 04ed 41495220 		.ascii	"AIR CHAMBERS\0123 -> OTTOBOCK WRIST\012The board wi"
 4748      4348414D 
 4748      42455253 
 4748      0A33202D 
 4748      3E204F54 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 119


 4749 051a 6C6C2072 		.ascii	"ll reset\012\000"
 4749      65736574 
 4749      0A00
 4750              		.align	2
 4751              	.LC132:
 4752 0524 30202D3E 		.ascii	"0 -> Fast:wrist, Slow:hand\0121 -> Slow:wrist, Fast"
 4752      20466173 
 4752      743A7772 
 4752      6973742C 
 4752      20536C6F 
 4753 0554 3A68616E 		.ascii	":hand\012\000"
 4753      640A00
 4754 055b 00       		.align	2
 4755              	.LC133:
 4756 055c 30202D3E 		.ascii	"0 -> Close:CW, Open:CCW\0121 -> Close:CCW, Open:CW\012"
 4756      20436C6F 
 4756      73653A43 
 4756      572C204F 
 4756      70656E3A 
 4757 058c 00       		.ascii	"\000"
 4758 058d 000000   		.align	2
 4759              	.LC0:
 4760 0590 02       		.byte	2
 4761 0591 07       		.byte	7
 4762 0592 07       		.byte	7
 4763 0593 00       		.byte	0
 4764 0594 00       		.byte	0
 4765 0595 00       		.byte	0
 4766 0596 02       		.byte	2
 4767 0597 03       		.byte	3
 4768 0598 07       		.byte	7
 4769 0599 00       		.byte	0
 4770 059a 05       		.byte	5
 4771 059b 05       		.byte	5
 4772 059c 03       		.byte	3
 4773 059d 04       		.byte	4
 4774 059e 00       		.byte	0
 4775 059f 06       		.byte	6
 4776 05a0 02       		.byte	2
 4777 05a1 00       		.byte	0
 4778 05a2 01       		.byte	1
 4779 05a3 00       		.byte	0
 4780 05a4 07       		.byte	7
 4781 05a5 02       		.byte	2
 4782 05a6 05       		.byte	5
 4783 05a7 05       		.byte	5
 4784 05a8 05       		.byte	5
 4785 05a9 00       		.byte	0
 4786 05aa 00       		.byte	0
 4787 05ab 00       		.byte	0
 4788 05ac 00       		.byte	0
 4789 05ad 00       		.byte	0
 4790 05ae 00       		.byte	0
 4791 05af 02       		.byte	2
 4792 05b0 00       		.byte	0
 4793 05b1 02       		.byte	2
 4794 05b2 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 120


 4795 05b3 09       		.byte	9
 4796 05b4 02       		.byte	2
 4797 05b5 00       		.byte	0
 4798 05b6 02       		.byte	2
 4799 05b7 00       		.byte	0
 4800 05b8 02       		.byte	2
 4801 05b9 01       		.byte	1
 4802 05ba 00       		.byte	0
 4803 05bb 07       		.byte	7
 4804 05bc 07       		.byte	7
 4805 05bd 00       		.byte	0
 4806 05be 00       		.byte	0
 4807 05bf 00       		.byte	0
 4808 05c0 02       		.byte	2
 4809 05c1 03       		.byte	3
 4810 05c2 07       		.byte	7
 4811 05c3 00       		.byte	0
 4812 05c4 05       		.byte	5
 4813 05c5 05       		.byte	5
 4814 05c6 03       		.byte	3
 4815 05c7 00       		.byte	0
 4816 05c8 01       		.byte	1
 4817 05c9 00       		.byte	0
 4818 05ca 07       		.byte	7
 4819 05cb 02       		.byte	2
 4820 05cc 00       		.byte	0
 4821 05cd 02       		.byte	2
 4822 05ce 00       		.byte	0
 4823 05cf 02       		.byte	2
 4824 05d0 01       		.byte	1
 4825 05d1 02       		.byte	2
 4826 05d2 02       		.byte	2
 4827 05d3 00       		.byte	0
 4828 05d4 02       		.byte	2
 4829 05d5 02       		.byte	2
 4830 05d6 00       		.byte	0
 4831 05d7 00       		.byte	0
 4832 05d8 02       		.byte	2
 4833 05d9 05       		.byte	5
 4834 05da 07       		.byte	7
 4835 05db 07       		.byte	7
 4836 05dc 00       		.byte	0
 4837 05dd 04       		.byte	4
 4838 05de 00       		.byte	0
 4839 05df 00       		.align	2
 4840              	.LC1:
 4841 05e0 31202D20 		.ascii	"1 - Device ID:\000"
 4841      44657669 
 4841      63652049 
 4841      443A00
 4842 05ef 00       		.align	2
 4843              	.LC2:
 4844 05f0 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 4844      506F7369 
 4844      74696F6E 
 4844      20504944 
 4844      205B502C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 121


 4845              		.align	2
 4846              	.LC3:
 4847 060c 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 4847      43757272 
 4847      656E7420 
 4847      50494420 
 4847      5B502C20 
 4848 0627 00       		.align	2
 4849              	.LC4:
 4850 0628 34202D20 		.ascii	"4 - Startup Activation:\000"
 4850      53746172 
 4850      74757020 
 4850      41637469 
 4850      76617469 
 4851              		.align	2
 4852              	.LC5:
 4853 0640 35202D20 		.ascii	"5 - Input mode:\000"
 4853      496E7075 
 4853      74206D6F 
 4853      64653A00 
 4854              		.align	2
 4855              	.LC6:
 4856 0650 36202D20 		.ascii	"6 - Control mode:\000"
 4856      436F6E74 
 4856      726F6C20 
 4856      6D6F6465 
 4856      3A00
 4857 0662 0000     		.align	2
 4858              	.LC7:
 4859 0664 37202D20 		.ascii	"7 - Resolutions:\000"
 4859      5265736F 
 4859      6C757469 
 4859      6F6E733A 
 4859      00
 4860 0675 000000   		.align	2
 4861              	.LC8:
 4862 0678 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 4862      4D656173 
 4862      7572656D 
 4862      656E7420 
 4862      4F666673 
 4863 0691 000000   		.align	2
 4864              	.LC9:
 4865 0694 39202D20 		.ascii	"9 - Multipliers:\000"
 4865      4D756C74 
 4865      69706C69 
 4865      6572733A 
 4865      00
 4866 06a5 000000   		.align	2
 4867              	.LC10:
 4868 06a8 3130202D 		.ascii	"10 - Pos. limit active:\000"
 4868      20506F73 
 4868      2E206C69 
 4868      6D697420 
 4868      61637469 
 4869              		.align	2
 4870              	.LC11:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 122


 4871 06c0 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 4871      20506F73 
 4871      2E206C69 
 4871      6D697473 
 4871      205B696E 
 4872 06dd 000000   		.align	2
 4873              	.LC12:
 4874 06e0 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 4874      204D6178 
 4874      20737465 
 4874      7073205B 
 4874      6E65672C 
 4875 06fb 00       		.align	2
 4876              	.LC13:
 4877 06fc 3133202D 		.ascii	"13 - Current limit:\000"
 4877      20437572 
 4877      72656E74 
 4877      206C696D 
 4877      69743A00 
 4878              		.align	2
 4879              	.LC14:
 4880 0710 3134202D 		.ascii	"14 - EMG thresholds:\000"
 4880      20454D47 
 4880      20746872 
 4880      6573686F 
 4880      6C64733A 
 4881 0725 000000   		.align	2
 4882              	.LC15:
 4883 0728 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 4883      20454D47 
 4883      2063616C 
 4883      69627261 
 4883      74696F6E 
 4884 0749 000000   		.align	2
 4885              	.LC16:
 4886 074c 3136202D 		.ascii	"16 - EMG max values:\000"
 4886      20454D47 
 4886      206D6178 
 4886      2076616C 
 4886      7565733A 
 4887 0761 000000   		.align	2
 4888              	.LC17:
 4889 0764 3137202D 		.ascii	"17 - EMG max speeds:\000"
 4889      20454D47 
 4889      206D6178 
 4889      20737065 
 4889      6564733A 
 4890 0779 000000   		.align	2
 4891              	.LC18:
 4892 077c 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 4892      20416273 
 4892      6F6C7574 
 4892      6520656E 
 4892      636F6465 
 4893              		.align	2
 4894              	.LC19:
 4895 079c 3139202D 		.ascii	"19 - Motor handle ratio:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 123


 4895      204D6F74 
 4895      6F722068 
 4895      616E646C 
 4895      65207261 
 4896 07b5 000000   		.align	2
 4897              	.LC20:
 4898 07b8 3230202D 		.ascii	"20 - PWM rescaling:\000"
 4898      2050574D 
 4898      20726573 
 4898      63616C69 
 4898      6E673A00 
 4899              		.align	2
 4900              	.LC21:
 4901 07cc 3231202D 		.ascii	"21 - Current lookup:\000"
 4901      20437572 
 4901      72656E74 
 4901      206C6F6F 
 4901      6B75703A 
 4902 07e1 000000   		.align	2
 4903              	.LC22:
 4904 07e4 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
 4904      20446174 
 4904      65206F66 
 4904      206D6169 
 4904      6E74656E 
 4905 0806 0000     		.align	2
 4906              	.LC23:
 4907 0808 3233202D 		.ascii	"23 - Rest position:\000"
 4907      20526573 
 4907      7420706F 
 4907      73697469 
 4907      6F6E3A00 
 4908              		.align	2
 4909              	.LC24:
 4910 081c 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 4910      20526573 
 4910      7420706F 
 4910      73697469 
 4910      6F6E2074 
 4911              		.align	2
 4912              	.LC25:
 4913 0840 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 4913      20526573 
 4913      74207665 
 4913      6C20636C 
 4913      6F737572 
 4914 0863 00       		.align	2
 4915              	.LC26:
 4916 0864 3236202D 		.ascii	"26 - Rest position enabled:\000"
 4916      20526573 
 4916      7420706F 
 4916      73697469 
 4916      6F6E2065 
 4917              		.align	2
 4918              	.LC27:
 4919 0880 3237202D 		.ascii	"27 - EMG inversion:\000"
 4919      20454D47 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 124


 4919      20696E76 
 4919      65727369 
 4919      6F6E3A00 
 4920              		.align	2
 4921              	.LC28:
 4922 0894 3238202D 		.ascii	"28 - Hand side:\000"
 4922      2048616E 
 4922      64207369 
 4922      64653A00 
 4923              		.align	2
 4924              	.LC29:
 4925 08a4 3239202D 		.ascii	"29 - Enable IMUs:\000"
 4925      20456E61 
 4925      626C6520 
 4925      494D5573 
 4925      3A00
 4926 08b6 0000     		.align	2
 4927              	.LC30:
 4928 08b8 3330202D 		.ascii	"30 - Read Expansion port:\000"
 4928      20526561 
 4928      64204578 
 4928      70616E73 
 4928      696F6E20 
 4929 08d2 0000     		.align	2
 4930              	.LC31:
 4931 08d4 3331202D 		.ascii	"31 - Reset counters:\000"
 4931      20526573 
 4931      65742063 
 4931      6F756E74 
 4931      6572733A 
 4932 08e9 000000   		.align	2
 4933              	.LC32:
 4934 08ec 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 4934      204C6173 
 4934      74206368 
 4934      65636B65 
 4934      64205469 
 4935 0912 0000     		.align	2
 4936              	.LC33:
 4937 0914 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 4937      20535049 
 4937      20726561 
 4937      64206465 
 4937      6C617920 
 4938 092f 00       		.align	2
 4939              	.LC34:
 4940 0930 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 4940      204F6E20 
 4940      626F6172 
 4940      6420494D 
 4940      5520636F 
 4941 0955 000000   		.align	2
 4942              	.LC35:
 4943 0958 3335202D 		.ascii	"35 - User ID:\000"
 4943      20557365 
 4943      72204944 
 4943      3A00
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 125


 4944 0966 0000     		.align	2
 4945              	.LC36:
 4946 0968 3336202D 		.ascii	"36 - User code:\000"
 4946      20557365 
 4946      7220636F 
 4946      64653A00 
 4947              		.align	2
 4948              	.LC37:
 4949 0978 3337202D 		.ascii	"37 - Associated encoder line:\000"
 4949      20417373 
 4949      6F636961 
 4949      74656420 
 4949      656E636F 
 4950 0996 0000     		.align	2
 4951              	.LC38:
 4952 0998 3338202D 		.ascii	"38 - Driver type:\000"
 4952      20447269 
 4952      76657220 
 4952      74797065 
 4952      3A00
 4953 09aa 0000     		.align	2
 4954              	.LC39:
 4955 09ac 3339202D 		.ascii	"39 - PWM rate limiter:\000"
 4955      2050574D 
 4955      20726174 
 4955      65206C69 
 4955      6D697465 
 4956 09c3 00       		.align	2
 4957              	.LC40:
 4958 09c4 3430202D 		.ascii	"40 - Not reversible:\000"
 4958      204E6F74 
 4958      20726576 
 4958      65727369 
 4958      626C653A 
 4959 09d9 000000   		.align	2
 4960              	.LC41:
 4961 09dc 3431202D 		.ascii	"41 - Enc idx used for control:\000"
 4961      20456E63 
 4961      20696478 
 4961      20757365 
 4961      6420666F 
 4962 09fb 00       		.align	2
 4963              	.LC42:
 4964 09fc 3432202D 		.ascii	"42 - Gear params[N1, N2, I1]:\000"
 4964      20476561 
 4964      72207061 
 4964      72616D73 
 4964      5B4E312C 
 4965 0a1a 0000     		.align	2
 4966              	.LC43:
 4967 0a1c 3433202D 		.ascii	"43 - Use second motor:\000"
 4967      20557365 
 4967      20736563 
 4967      6F6E6420 
 4967      6D6F746F 
 4968 0a33 00       		.align	2
 4969              	.LC44:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 126


 4970 0a34 3434202D 		.ascii	"44 - Position PID [P, I, D]:\000"
 4970      20506F73 
 4970      6974696F 
 4970      6E205049 
 4970      44205B50 
 4971 0a51 000000   		.align	2
 4972              	.LC45:
 4973 0a54 3435202D 		.ascii	"45 - Current PID [P, I, D]:\000"
 4973      20437572 
 4973      72656E74 
 4973      20504944 
 4973      205B502C 
 4974              		.align	2
 4975              	.LC46:
 4976 0a70 3436202D 		.ascii	"46 - Startup Activation:\000"
 4976      20537461 
 4976      72747570 
 4976      20416374 
 4976      69766174 
 4977 0a89 000000   		.align	2
 4978              	.LC47:
 4979 0a8c 3437202D 		.ascii	"47 - Input mode:\000"
 4979      20496E70 
 4979      7574206D 
 4979      6F64653A 
 4979      00
 4980 0a9d 000000   		.align	2
 4981              	.LC48:
 4982 0aa0 3438202D 		.ascii	"48 - Control mode:\000"
 4982      20436F6E 
 4982      74726F6C 
 4982      206D6F64 
 4982      653A00
 4983 0ab3 00       		.align	2
 4984              	.LC49:
 4985 0ab4 3439202D 		.ascii	"49 - Resolutions:\000"
 4985      20526573 
 4985      6F6C7574 
 4985      696F6E73 
 4985      3A00
 4986 0ac6 0000     		.align	2
 4987              	.LC50:
 4988 0ac8 3530202D 		.ascii	"50 - Measurement Offsets:\000"
 4988      204D6561 
 4988      73757265 
 4988      6D656E74 
 4988      204F6666 
 4989 0ae2 0000     		.align	2
 4990              	.LC51:
 4991 0ae4 3531202D 		.ascii	"51 - Multipliers:\000"
 4991      204D756C 
 4991      7469706C 
 4991      69657273 
 4991      3A00
 4992 0af6 0000     		.align	2
 4993              	.LC52:
 4994 0af8 3532202D 		.ascii	"52 - Pos. limit active:\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 127


 4994      20506F73 
 4994      2E206C69 
 4994      6D697420 
 4994      61637469 
 4995              		.align	2
 4996              	.LC53:
 4997 0b10 3533202D 		.ascii	"53 - Pos. limits [inf, sup]:\000"
 4997      20506F73 
 4997      2E206C69 
 4997      6D697473 
 4997      205B696E 
 4998 0b2d 000000   		.align	2
 4999              	.LC54:
 5000 0b30 3534202D 		.ascii	"54 - Max steps [neg, pos]:\000"
 5000      204D6178 
 5000      20737465 
 5000      7073205B 
 5000      6E65672C 
 5001 0b4b 00       		.align	2
 5002              	.LC55:
 5003 0b4c 3535202D 		.ascii	"55 - Current limit:\000"
 5003      20437572 
 5003      72656E74 
 5003      206C696D 
 5003      69743A00 
 5004              		.align	2
 5005              	.LC56:
 5006 0b60 3536202D 		.ascii	"56 - Absolute encoder position:\000"
 5006      20416273 
 5006      6F6C7574 
 5006      6520656E 
 5006      636F6465 
 5007              		.align	2
 5008              	.LC57:
 5009 0b80 3537202D 		.ascii	"57 - Motor handle ratio:\000"
 5009      204D6F74 
 5009      6F722068 
 5009      616E646C 
 5009      65207261 
 5010 0b99 000000   		.align	2
 5011              	.LC58:
 5012 0b9c 3538202D 		.ascii	"58 - PWM rescaling:\000"
 5012      2050574D 
 5012      20726573 
 5012      63616C69 
 5012      6E673A00 
 5013              		.align	2
 5014              	.LC59:
 5015 0bb0 3539202D 		.ascii	"59 - Current lookup:\000"
 5015      20437572 
 5015      72656E74 
 5015      206C6F6F 
 5015      6B75703A 
 5016 0bc5 000000   		.align	2
 5017              	.LC60:
 5018 0bc8 3630202D 		.ascii	"60 - Associated encoder line:\000"
 5018      20417373 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 128


 5018      6F636961 
 5018      74656420 
 5018      656E636F 
 5019 0be6 0000     		.align	2
 5020              	.LC61:
 5021 0be8 3631202D 		.ascii	"61 - Driver type:\000"
 5021      20447269 
 5021      76657220 
 5021      74797065 
 5021      3A00
 5022 0bfa 0000     		.align	2
 5023              	.LC62:
 5024 0bfc 3632202D 		.ascii	"62 - PWM rate limiter:\000"
 5024      2050574D 
 5024      20726174 
 5024      65206C69 
 5024      6D697465 
 5025 0c13 00       		.align	2
 5026              	.LC63:
 5027 0c14 3633202D 		.ascii	"63 - Not reversible:\000"
 5027      204E6F74 
 5027      20726576 
 5027      65727369 
 5027      626C653A 
 5028 0c29 000000   		.align	2
 5029              	.LC64:
 5030 0c2c 3634202D 		.ascii	"64 - Enc idx used for control:\000"
 5030      20456E63 
 5030      20696478 
 5030      20757365 
 5030      6420666F 
 5031 0c4b 00       		.align	2
 5032              	.LC65:
 5033 0c4c 3635202D 		.ascii	"65 - Gear params[N1, N2, I1]:\000"
 5033      20476561 
 5033      72207061 
 5033      72616D73 
 5033      5B4E312C 
 5034 0c6a 0000     		.align	2
 5035              	.LC66:
 5036 0c6c 3636202D 		.ascii	"66 - Read enc raw line 0:\000"
 5036      20526561 
 5036      6420656E 
 5036      63207261 
 5036      77206C69 
 5037 0c86 0000     		.align	2
 5038              	.LC67:
 5039 0c88 3637202D 		.ascii	"67 - Read enc raw line 1:\000"
 5039      20526561 
 5039      6420656E 
 5039      63207261 
 5039      77206C69 
 5040 0ca2 0000     		.align	2
 5041              	.LC68:
 5042 0ca4 3638202D 		.ascii	"68 - Read additional ADC port:\000"
 5042      20526561 
 5042      64206164 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 129


 5042      64697469 
 5042      6F6E616C 
 5043 0cc3 00       		.align	2
 5044              	.LC69:
 5045 0cc4 3639202D 		.ascii	"69 - ADC channel [1-6]:\000"
 5045      20414443 
 5045      20636861 
 5045      6E6E656C 
 5045      205B312D 
 5046              		.align	2
 5047              	.LC70:
 5048 0cdc 3730202D 		.ascii	"70 - ADC channel [7-12]:\000"
 5048      20414443 
 5048      20636861 
 5048      6E6E656C 
 5048      205B372D 
 5049 0cf5 000000   		.align	2
 5050              	.LC71:
 5051 0cf8 3731202D 		.ascii	"71 - Device type:\000"
 5051      20446576 
 5051      69636520 
 5051      74797065 
 5051      3A00
 5052 0d0a 0000     		.align	2
 5053              	.LC72:
 5054 0d0c 3732202D 		.ascii	"72 - Slave communication active:\000"
 5054      20536C61 
 5054      76652063 
 5054      6F6D6D75 
 5054      6E696361 
 5055 0d2d 000000   		.align	2
 5056              	.LC73:
 5057 0d30 3733202D 		.ascii	"73 - Slave ID:\000"
 5057      20536C61 
 5057      76652049 
 5057      443A00
 5058 0d3f 00       		.align	2
 5059              	.LC74:
 5060 0d40 3734202D 		.ascii	"74 - Maximum slave residual current:\000"
 5060      204D6178 
 5060      696D756D 
 5060      20736C61 
 5060      76652072 
 5061 0d65 000000   		.align	2
 5062              	.LC75:
 5063 0d68 3735202D 		.ascii	"75 - Maximum pressure feedback (kPa):\000"
 5063      204D6178 
 5063      696D756D 
 5063      20707265 
 5063      73737572 
 5064 0d8e 0000     		.align	2
 5065              	.LC76:
 5066 0d90 3736202D 		.ascii	"76 - Proportional pressure error gain:\000"
 5066      2050726F 
 5066      706F7274 
 5066      696F6E61 
 5066      6C207072 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 130


 5067 0db7 00       		.align	2
 5068              	.LC77:
 5069 0db8 3737202D 		.ascii	"77 - Wrist act. mode:\000"
 5069      20577269 
 5069      73742061 
 5069      63742E20 
 5069      6D6F6465 
 5070 0dce 0000     		.align	2
 5071              	.LC78:
 5072 0dd0 3738202D 		.ascii	"78 - Fast act. thresholds:\000"
 5072      20466173 
 5072      74206163 
 5072      742E2074 
 5072      68726573 
 5073 0deb 00       		.align	2
 5074              	.LC79:
 5075 0dec 3739202D 		.ascii	"79 - Wrist direction:\000"
 5075      20577269 
 5075      73742064 
 5075      69726563 
 5075      74696F6E 
 5076 0e02 0000     		.align	2
 5077              	.LC121:
 5078 0e04 E0050000 		.word	.LC1
 5079 0e08 F0050000 		.word	.LC2
 5080 0e0c 0C060000 		.word	.LC3
 5081 0e10 28060000 		.word	.LC4
 5082 0e14 40060000 		.word	.LC5
 5083 0e18 50060000 		.word	.LC6
 5084 0e1c 64060000 		.word	.LC7
 5085 0e20 78060000 		.word	.LC8
 5086 0e24 94060000 		.word	.LC9
 5087 0e28 A8060000 		.word	.LC10
 5088 0e2c C0060000 		.word	.LC11
 5089 0e30 E0060000 		.word	.LC12
 5090 0e34 FC060000 		.word	.LC13
 5091 0e38 10070000 		.word	.LC14
 5092 0e3c 28070000 		.word	.LC15
 5093 0e40 4C070000 		.word	.LC16
 5094 0e44 64070000 		.word	.LC17
 5095 0e48 7C070000 		.word	.LC18
 5096 0e4c 9C070000 		.word	.LC19
 5097 0e50 B8070000 		.word	.LC20
 5098 0e54 CC070000 		.word	.LC21
 5099 0e58 E4070000 		.word	.LC22
 5100 0e5c 08080000 		.word	.LC23
 5101 0e60 1C080000 		.word	.LC24
 5102 0e64 40080000 		.word	.LC25
 5103 0e68 64080000 		.word	.LC26
 5104 0e6c 80080000 		.word	.LC27
 5105 0e70 94080000 		.word	.LC28
 5106 0e74 A4080000 		.word	.LC29
 5107 0e78 B8080000 		.word	.LC30
 5108 0e7c D4080000 		.word	.LC31
 5109 0e80 EC080000 		.word	.LC32
 5110 0e84 14090000 		.word	.LC33
 5111 0e88 30090000 		.word	.LC34
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 131


 5112 0e8c 58090000 		.word	.LC35
 5113 0e90 68090000 		.word	.LC36
 5114 0e94 78090000 		.word	.LC37
 5115 0e98 98090000 		.word	.LC38
 5116 0e9c AC090000 		.word	.LC39
 5117 0ea0 C4090000 		.word	.LC40
 5118 0ea4 DC090000 		.word	.LC41
 5119 0ea8 FC090000 		.word	.LC42
 5120 0eac 1C0A0000 		.word	.LC43
 5121 0eb0 340A0000 		.word	.LC44
 5122 0eb4 540A0000 		.word	.LC45
 5123 0eb8 700A0000 		.word	.LC46
 5124 0ebc 8C0A0000 		.word	.LC47
 5125 0ec0 A00A0000 		.word	.LC48
 5126 0ec4 B40A0000 		.word	.LC49
 5127 0ec8 C80A0000 		.word	.LC50
 5128 0ecc E40A0000 		.word	.LC51
 5129 0ed0 F80A0000 		.word	.LC52
 5130 0ed4 100B0000 		.word	.LC53
 5131 0ed8 300B0000 		.word	.LC54
 5132 0edc 4C0B0000 		.word	.LC55
 5133 0ee0 600B0000 		.word	.LC56
 5134 0ee4 800B0000 		.word	.LC57
 5135 0ee8 9C0B0000 		.word	.LC58
 5136 0eec B00B0000 		.word	.LC59
 5137 0ef0 C80B0000 		.word	.LC60
 5138 0ef4 E80B0000 		.word	.LC61
 5139 0ef8 FC0B0000 		.word	.LC62
 5140 0efc 140C0000 		.word	.LC63
 5141 0f00 2C0C0000 		.word	.LC64
 5142 0f04 4C0C0000 		.word	.LC65
 5143 0f08 6C0C0000 		.word	.LC66
 5144 0f0c 880C0000 		.word	.LC67
 5145 0f10 A40C0000 		.word	.LC68
 5146 0f14 C40C0000 		.word	.LC69
 5147 0f18 DC0C0000 		.word	.LC70
 5148 0f1c F80C0000 		.word	.LC71
 5149 0f20 0C0D0000 		.word	.LC72
 5150 0f24 300D0000 		.word	.LC73
 5151 0f28 400D0000 		.word	.LC74
 5152 0f2c 680D0000 		.word	.LC75
 5153 0f30 900D0000 		.word	.LC76
 5154 0f34 B80D0000 		.word	.LC77
 5155 0f38 D00D0000 		.word	.LC78
 5156 0f3c EC0D0000 		.word	.LC79
 5157              		.align	2
 5158              	.LC81:
 5159 0f40 03       		.byte	3
 5160 0f41 01       		.byte	1
 5161 0f42 02       		.byte	2
 5162 0f43 03       		.byte	3
 5163 0f44 03       		.byte	3
 5164 0f45 03       		.byte	3
 5165 0f46 03       		.byte	3
 5166 0f47 03       		.byte	3
 5167 0f48 03       		.byte	3
 5168 0f49 04       		.byte	4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 132


 5169 0f4a 05       		.byte	5
 5170 0f4b 06       		.byte	6
 5171 0f4c 03       		.byte	3
 5172 0f4d 07       		.byte	7
 5173 0f4e 08       		.byte	8
 5174 0f4f 09       		.byte	9
 5175 0f50 03       		.byte	3
 5176 0f51 05       		.byte	5
 5177 0f52 03       		.byte	3
 5178 0f53 01       		.byte	1
 5179 0f54 02       		.byte	2
 5180 0f55 03       		.byte	3
 5181 0f56 03       		.byte	3
 5182 0f57 03       		.byte	3
 5183 0f58 09       		.byte	9
 5184 0f59 03       		.byte	3
 5185 0f5a 05       		.byte	5
 5186 0f5b 0A       		.byte	10
 5187 0f5c 03       		.byte	3
 5188 0f5d 0B       		.byte	11
 5189 0f5e 0C       		.byte	12
 5190 0f5f 00       		.align	2
 5191              	.LC82:
 5192 0f60 02       		.byte	2
 5193 0f61 03       		.byte	3
 5194 0f62 08       		.byte	8
 5195 0f63 0B       		.byte	11
 5196 0f64 17       		.byte	23
 5197 0f65 2C       		.byte	44
 5198 0f66 2D       		.byte	45
 5199 0f67 32       		.byte	50
 5200 0f68 35       		.byte	53
 5201 0f69 000000   		.align	2
 5202              	.LC83:
 5203 0f6c 02       		.byte	2
 5204 0f6d 03       		.byte	3
 5205 0f6e 05       		.byte	5
 5206 0f6f 08       		.byte	8
 5207 0f70 0B       		.byte	11
 5208 0f71 17       		.byte	23
 5209 0f72 18       		.byte	24
 5210 0f73 1C       		.byte	28
 5211 0f74 1F       		.byte	31
 5212 0f75 20       		.byte	32
 5213 0f76 26       		.byte	38
 5214 0f77 2C       		.byte	44
 5215 0f78 2D       		.byte	45
 5216 0f79 2F       		.byte	47
 5217 0f7a 32       		.byte	50
 5218 0f7b 35       		.byte	53
 5219 0f7c 3D       		.byte	61
 5220 0f7d 47       		.byte	71
 5221              		.section	.text.manage_param_list,"ax",%progbits
 5222              		.align	2
 5223              		.global	manage_param_list
 5224              		.thumb
 5225              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 133


 5226              		.type	manage_param_list, %function
 5227              	manage_param_list:
 5228              	.LFB68:
 845:..\src/command_processing.c **** 
 846:..\src/command_processing.c **** //==============================================================================
 847:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 848:..\src/command_processing.c **** //==============================================================================
 849:..\src/command_processing.c **** 
 850:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 5229              		.loc 1 850 0
 5230              		.cfi_startproc
 5231              		@ args = 0, pretend = 0, frame = 1304
 5232              		@ frame_needed = 1, uses_anonymous_args = 0
 5233 0000 B0B5     		push	{r4, r5, r7, lr}
 5234              		.cfi_def_cfa_offset 16
 5235              		.cfi_offset 4, -16
 5236              		.cfi_offset 5, -12
 5237              		.cfi_offset 7, -8
 5238              		.cfi_offset 14, -4
 5239 0002 ADF5A56D 		sub	sp, sp, #1320
 5240              		.cfi_def_cfa_offset 1336
 5241 0006 04AF     		add	r7, sp, #16
 5242              		.cfi_def_cfa 7, 1320
 5243 0008 0246     		mov	r2, r0
 5244 000a BB1D     		adds	r3, r7, #6
 5245 000c 1A80     		strh	r2, [r3]	@ movhi
 851:..\src/command_processing.c ****     uint8 CYDATA i, j;
 852:..\src/command_processing.c ****     uint8 CYDATA sod;
 853:..\src/command_processing.c ****     uint8 PARAM_IDX;
 854:..\src/command_processing.c ****     int16 aux_int16;
 855:..\src/command_processing.c ****     uint16 aux_uint16;
 856:..\src/command_processing.c ****     int32 aux_int32;
 857:..\src/command_processing.c ****     uint32 aux_uint32;
 858:..\src/command_processing.c ****     float aux_float;
 859:..\src/command_processing.c ****  
 860:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 5246              		.loc 1 860 0
 5247 000e 0023     		movs	r3, #0
 5248 0010 87F80D35 		strb	r3, [r7, #1293]
 861:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 5249              		.loc 1 861 0
 5250 0014 0123     		movs	r3, #1
 5251 0016 87F80C35 		strb	r3, [r7, #1292]
 862:..\src/command_processing.c ****     
 863:..\src/command_processing.c ****     // Arrays
 864:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem;   // c_mem is used for param reading
 5252              		.loc 1 864 0
 5253 001a 054B     		ldr	r3, .L347
 5254 001c C7F81035 		str	r3, [r7, #1296]
 865:..\src/command_processing.c ****     
 866:..\src/command_processing.c ****     if (index){                         // Switch from c_mem to g_mem
 5255              		.loc 1 866 0
 5256 0020 BB1D     		adds	r3, r7, #6
 5257 0022 1B88     		ldrh	r3, [r3]
 5258 0024 002B     		cmp	r3, #0
 5259 0026 07D0     		beq	.L286
 867:..\src/command_processing.c ****         MEM_P = &g_mem;                 // g_mem is used for param setting
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 134


 5260              		.loc 1 867 0
 5261 0028 024B     		ldr	r3, .L347+4
 5262 002a C7F81035 		str	r3, [r7, #1296]
 5263 002e 03E0     		b	.L348
 5264              	.L349:
 5265              		.align	2
 5266              	.L347:
 5267 0030 00000000 		.word	c_mem
 5268 0034 00000000 		.word	g_mem
 5269              	.L348:
 5270              	.L286:
 868:..\src/command_processing.c ****     }
 869:..\src/command_processing.c ****  
 870:..\src/command_processing.c ****     
 871:..\src/command_processing.c **** //------------------ BEGIN OF PARAMETERS VARIABLES --------------------//    
 872:..\src/command_processing.c ****     uint8* VAR_P[NUM_OF_PARAMS] = { 
 873:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5271              		.loc 1 873 0
 5272 0038 D7F81035 		ldr	r3, [r7, #1296]
 5273 003c 03F1A002 		add	r2, r3, #160
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5274              		.loc 1 872 0
 5275 0040 07F56F73 		add	r3, r7, #956
 5276 0044 1A60     		str	r2, [r3]
 874:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p),
 5277              		.loc 1 874 0
 5278 0046 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5279 004a 1346     		mov	r3, r2
 5280 004c DB00     		lsls	r3, r3, #3
 5281 004e 9B1A     		subs	r3, r3, r2
 5282 0050 1B01     		lsls	r3, r3, #4
 5283 0052 B033     		adds	r3, r3, #176
 5284 0054 D7F81025 		ldr	r2, [r7, #1296]
 5285 0058 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5286              		.loc 1 872 0
 5287 005a 07F56F73 		add	r3, r7, #956
 5288 005e 5A60     		str	r2, [r3, #4]
 875:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].k_p_c), 
 5289              		.loc 1 875 0
 5290 0060 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5291 0064 1346     		mov	r3, r2
 5292 0066 DB00     		lsls	r3, r3, #3
 5293 0068 9B1A     		subs	r3, r3, r2
 5294 006a 1B01     		lsls	r3, r3, #4
 5295 006c B833     		adds	r3, r3, #184
 5296 006e D7F81025 		ldr	r2, [r7, #1296]
 5297 0072 1344     		add	r3, r3, r2
 5298 0074 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5299              		.loc 1 872 0
 5300 0076 07F56F73 		add	r3, r7, #956
 5301 007a 9A60     		str	r2, [r3, #8]
 876:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activ),
 5302              		.loc 1 876 0
 5303 007c 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5304 0080 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 135


 5305 0082 DB00     		lsls	r3, r3, #3
 5306 0084 9B1A     		subs	r3, r3, r2
 5307 0086 1B01     		lsls	r3, r3, #4
 5308 0088 E033     		adds	r3, r3, #224
 5309 008a D7F81025 		ldr	r2, [r7, #1296]
 5310 008e 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5311              		.loc 1 872 0
 5312 0090 07F56F73 		add	r3, r7, #956
 5313 0094 DA60     		str	r2, [r3, #12]
 877:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].input_mode),
 5314              		.loc 1 877 0
 5315 0096 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5316 009a 1346     		mov	r3, r2
 5317 009c DB00     		lsls	r3, r3, #3
 5318 009e 9B1A     		subs	r3, r3, r2
 5319 00a0 1B01     		lsls	r3, r3, #4
 5320 00a2 03F58473 		add	r3, r3, #264
 5321 00a6 D7F81025 		ldr	r2, [r7, #1296]
 5322 00aa 1344     		add	r3, r3, r2
 5323 00ac 9A1D     		adds	r2, r3, #6
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5324              		.loc 1 872 0
 5325 00ae 07F56F73 		add	r3, r7, #956
 5326 00b2 1A61     		str	r2, [r3, #16]
 878:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].control_mode), 
 5327              		.loc 1 878 0
 5328 00b4 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5329 00b8 1346     		mov	r3, r2
 5330 00ba DB00     		lsls	r3, r3, #3
 5331 00bc 9B1A     		subs	r3, r3, r2
 5332 00be 1B01     		lsls	r3, r3, #4
 5333 00c0 03F58473 		add	r3, r3, #264
 5334 00c4 D7F81025 		ldr	r2, [r7, #1296]
 5335 00c8 1344     		add	r3, r3, r2
 5336 00ca DA1D     		adds	r2, r3, #7
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5337              		.loc 1 872 0
 5338 00cc 07F56F73 		add	r3, r7, #956
 5339 00d0 5A61     		str	r2, [r3, #20]
 879:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].res),
 5340              		.loc 1 879 0
 5341 00d2 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5342 00d6 D7F81015 		ldr	r1, [r7, #1296]
 5343 00da 1346     		mov	r3, r2
 5344 00dc DB00     		lsls	r3, r3, #3
 5345 00de 9B1A     		subs	r3, r3, r2
 5346 00e0 1B01     		lsls	r3, r3, #4
 5347 00e2 0B44     		add	r3, r3, r1
 5348 00e4 03F58873 		add	r3, r3, #272
 5349 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5350 00ea 1A46     		mov	r2, r3
 5351 00ec 1346     		mov	r3, r2
 5352 00ee 5B00     		lsls	r3, r3, #1
 5353 00f0 1344     		add	r3, r3, r2
 5354 00f2 1B01     		lsls	r3, r3, #4
 5355 00f4 03F5C873 		add	r3, r3, #400
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 136


 5356 00f8 D7F81025 		ldr	r2, [r7, #1296]
 5357 00fc 1344     		add	r3, r3, r2
 5358 00fe 5A1D     		adds	r2, r3, #5
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5359              		.loc 1 872 0
 5360 0100 07F56F73 		add	r3, r7, #956
 5361 0104 9A61     		str	r2, [r3, #24]
 880:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_off[0]),
 5362              		.loc 1 880 0
 5363 0106 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5364 010a D7F81015 		ldr	r1, [r7, #1296]
 5365 010e 1346     		mov	r3, r2
 5366 0110 DB00     		lsls	r3, r3, #3
 5367 0112 9B1A     		subs	r3, r3, r2
 5368 0114 1B01     		lsls	r3, r3, #4
 5369 0116 0B44     		add	r3, r3, r1
 5370 0118 03F58873 		add	r3, r3, #272
 5371 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5372 011e 1A46     		mov	r2, r3
 5373 0120 1346     		mov	r3, r2
 5374 0122 5B00     		lsls	r3, r3, #1
 5375 0124 1344     		add	r3, r3, r2
 5376 0126 1B01     		lsls	r3, r3, #4
 5377 0128 03F5CC73 		add	r3, r3, #408
 5378 012c D7F81025 		ldr	r2, [r7, #1296]
 5379 0130 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5380              		.loc 1 872 0
 5381 0132 07F56F73 		add	r3, r7, #956
 5382 0136 DA61     		str	r2, [r3, #28]
 881:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].m_mult[0]),
 5383              		.loc 1 881 0
 5384 0138 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5385 013c D7F81015 		ldr	r1, [r7, #1296]
 5386 0140 1346     		mov	r3, r2
 5387 0142 DB00     		lsls	r3, r3, #3
 5388 0144 9B1A     		subs	r3, r3, r2
 5389 0146 1B01     		lsls	r3, r3, #4
 5390 0148 0B44     		add	r3, r3, r1
 5391 014a 03F58873 		add	r3, r3, #272
 5392 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5393 0150 1A46     		mov	r2, r3
 5394 0152 1346     		mov	r3, r2
 5395 0154 5B00     		lsls	r3, r3, #1
 5396 0156 1344     		add	r3, r3, r2
 5397 0158 1B01     		lsls	r3, r3, #4
 5398 015a 03F5D073 		add	r3, r3, #416
 5399 015e D7F81025 		ldr	r2, [r7, #1296]
 5400 0162 1344     		add	r3, r3, r2
 5401 0164 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5402              		.loc 1 872 0
 5403 0166 07F56F73 		add	r3, r7, #956
 5404 016a 1A62     		str	r2, [r3, #32]
 882:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_flag),                                    //10
 5405              		.loc 1 882 0
 5406 016c 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 137


 5407 0170 1346     		mov	r3, r2
 5408 0172 DB00     		lsls	r3, r3, #3
 5409 0174 9B1A     		subs	r3, r3, r2
 5410 0176 1B01     		lsls	r3, r3, #4
 5411 0178 E033     		adds	r3, r3, #224
 5412 017a D7F81025 		ldr	r2, [r7, #1296]
 5413 017e 1344     		add	r3, r3, r2
 5414 0180 DA1C     		adds	r2, r3, #3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5415              		.loc 1 872 0
 5416 0182 07F56F73 		add	r3, r7, #956
 5417 0186 5A62     		str	r2, [r3, #36]
 883:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].pos_lim_inf), 
 5418              		.loc 1 883 0
 5419 0188 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5420 018c 1346     		mov	r3, r2
 5421 018e DB00     		lsls	r3, r3, #3
 5422 0190 9B1A     		subs	r3, r3, r2
 5423 0192 1B01     		lsls	r3, r3, #4
 5424 0194 E033     		adds	r3, r3, #224
 5425 0196 D7F81025 		ldr	r2, [r7, #1296]
 5426 019a 1344     		add	r3, r3, r2
 5427 019c 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5428              		.loc 1 872 0
 5429 019e 07F56F73 		add	r3, r7, #956
 5430 01a2 9A62     		str	r2, [r3, #40]
 884:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].max_step_neg),
 5431              		.loc 1 884 0
 5432 01a4 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5433 01a8 1346     		mov	r3, r2
 5434 01aa DB00     		lsls	r3, r3, #3
 5435 01ac 9B1A     		subs	r3, r3, r2
 5436 01ae 1B01     		lsls	r3, r3, #4
 5437 01b0 E833     		adds	r3, r3, #232
 5438 01b2 D7F81025 		ldr	r2, [r7, #1296]
 5439 01b6 1344     		add	r3, r3, r2
 5440 01b8 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5441              		.loc 1 872 0
 5442 01ba 07F56F73 		add	r3, r7, #956
 5443 01be DA62     		str	r2, [r3, #44]
 885:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].current_limit),
 5444              		.loc 1 885 0
 5445 01c0 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5446 01c4 1346     		mov	r3, r2
 5447 01c6 DB00     		lsls	r3, r3, #3
 5448 01c8 9B1A     		subs	r3, r3, r2
 5449 01ca 1B01     		lsls	r3, r3, #4
 5450 01cc 03F58473 		add	r3, r3, #264
 5451 01d0 D7F81025 		ldr	r2, [r7, #1296]
 5452 01d4 1344     		add	r3, r3, r2
 5453 01d6 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5454              		.loc 1 872 0
 5455 01d8 07F56F73 		add	r3, r7, #956
 5456 01dc 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 138


 886:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_threshold[0]),
 5457              		.loc 1 886 0
 5458 01de D7F81035 		ldr	r3, [r7, #1296]
 5459 01e2 03F5F872 		add	r2, r3, #496
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5460              		.loc 1 872 0
 5461 01e6 07F56F73 		add	r3, r7, #956
 5462 01ea 5A63     		str	r2, [r3, #52]
 887:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_calibration_flag),
 5463              		.loc 1 887 0
 5464 01ec D7F81035 		ldr	r3, [r7, #1296]
 5465 01f0 03F5FF72 		add	r2, r3, #510
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5466              		.loc 1 872 0
 5467 01f4 07F56F73 		add	r3, r7, #956
 5468 01f8 9A63     		str	r2, [r3, #56]
 888:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_max_value[0]),
 5469              		.loc 1 888 0
 5470 01fa D7F81035 		ldr	r3, [r7, #1296]
 5471 01fe 03F5FA72 		add	r2, r3, #500
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5472              		.loc 1 872 0
 5473 0202 07F56F73 		add	r3, r7, #956
 5474 0206 DA63     		str	r2, [r3, #60]
 889:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.emg_speed[0]), 
 5475              		.loc 1 889 0
 5476 0208 D7F81035 		ldr	r3, [r7, #1296]
 5477 020c 03F5FE72 		add	r2, r3, #508
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5478              		.loc 1 872 0
 5479 0210 07F56F73 		add	r3, r7, #956
 5480 0214 1A64     		str	r2, [r3, #64]
 890:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].double_encoder_on_off),
 5481              		.loc 1 890 0
 5482 0216 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5483 021a D7F81015 		ldr	r1, [r7, #1296]
 5484 021e 1346     		mov	r3, r2
 5485 0220 DB00     		lsls	r3, r3, #3
 5486 0222 9B1A     		subs	r3, r3, r2
 5487 0224 1B01     		lsls	r3, r3, #4
 5488 0226 0B44     		add	r3, r3, r1
 5489 0228 03F58873 		add	r3, r3, #272
 5490 022c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5491 022e 1A46     		mov	r2, r3
 5492 0230 1346     		mov	r3, r2
 5493 0232 5B00     		lsls	r3, r3, #1
 5494 0234 1344     		add	r3, r3, r2
 5495 0236 1B01     		lsls	r3, r3, #4
 5496 0238 03F5D873 		add	r3, r3, #432
 5497 023c D7F81025 		ldr	r2, [r7, #1296]
 5498 0240 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5499              		.loc 1 872 0
 5500 0242 07F56F73 		add	r3, r7, #956
 5501 0246 5A64     		str	r2, [r3, #68]
 891:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].motor_handle_ratio),
 5502              		.loc 1 891 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 139


 5503 0248 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5504 024c D7F81015 		ldr	r1, [r7, #1296]
 5505 0250 1346     		mov	r3, r2
 5506 0252 DB00     		lsls	r3, r3, #3
 5507 0254 9B1A     		subs	r3, r3, r2
 5508 0256 1B01     		lsls	r3, r3, #4
 5509 0258 0B44     		add	r3, r3, r1
 5510 025a 03F58873 		add	r3, r3, #272
 5511 025e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5512 0260 1A46     		mov	r2, r3
 5513 0262 1346     		mov	r3, r2
 5514 0264 5B00     		lsls	r3, r3, #1
 5515 0266 1344     		add	r3, r3, r2
 5516 0268 1B01     		lsls	r3, r3, #4
 5517 026a 03F5D873 		add	r3, r3, #432
 5518 026e D7F81025 		ldr	r2, [r7, #1296]
 5519 0272 1344     		add	r3, r3, r2
 5520 0274 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5521              		.loc 1 872 0
 5522 0276 07F56F73 		add	r3, r7, #956
 5523 027a 9A64     		str	r2, [r3, #72]
 892:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].activate_pwm_rescaling),                          //20
 5524              		.loc 1 892 0
 5525 027c 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5526 0280 1346     		mov	r3, r2
 5527 0282 DB00     		lsls	r3, r3, #3
 5528 0284 9B1A     		subs	r3, r3, r2
 5529 0286 1B01     		lsls	r3, r3, #4
 5530 0288 E033     		adds	r3, r3, #224
 5531 028a D7F81025 		ldr	r2, [r7, #1296]
 5532 028e 1344     		add	r3, r3, r2
 5533 0290 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5534              		.loc 1 872 0
 5535 0292 07F56F73 		add	r3, r7, #956
 5536 0296 DA64     		str	r2, [r3, #76]
 893:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].curr_lookup[0]),
 5537              		.loc 1 893 0
 5538 0298 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5539 029c 1346     		mov	r3, r2
 5540 029e DB00     		lsls	r3, r3, #3
 5541 02a0 9B1A     		subs	r3, r3, r2
 5542 02a2 1B01     		lsls	r3, r3, #4
 5543 02a4 F033     		adds	r3, r3, #240
 5544 02a6 D7F81025 		ldr	r2, [r7, #1296]
 5545 02aa 1344     		add	r3, r3, r2
 5546 02ac 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5547              		.loc 1 872 0
 5548 02ae 07F56F73 		add	r3, r7, #956
 5549 02b2 1A65     		str	r2, [r3, #80]
 894:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.hw_maint_date),
 5550              		.loc 1 894 0
 5551 02b4 D7F81035 		ldr	r3, [r7, #1296]
 5552 02b8 03F1A102 		add	r2, r3, #161
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 140


 5553              		.loc 1 872 0
 5554 02bc 07F56F73 		add	r3, r7, #956
 5555 02c0 5A65     		str	r2, [r3, #84]
 895:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_pos), 
 5556              		.loc 1 895 0
 5557 02c2 D7F81035 		ldr	r3, [r7, #1296]
 5558 02c6 03F52872 		add	r2, r3, #672
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5559              		.loc 1 872 0
 5560 02ca 07F56F73 		add	r3, r7, #956
 5561 02ce 9A65     		str	r2, [r3, #88]
 896:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_delay),
 5562              		.loc 1 896 0
 5563 02d0 D7F81035 		ldr	r3, [r7, #1296]
 5564 02d4 03F52972 		add	r2, r3, #676
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5565              		.loc 1 872 0
 5566 02d8 07F56F73 		add	r3, r7, #956
 5567 02dc DA65     		str	r2, [r3, #92]
 897:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_vel),
 5568              		.loc 1 897 0
 5569 02de D7F81035 		ldr	r3, [r7, #1296]
 5570 02e2 03F52A72 		add	r2, r3, #680
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5571              		.loc 1 872 0
 5572 02e6 07F56F73 		add	r3, r7, #956
 5573 02ea 1A66     		str	r2, [r3, #96]
 898:..\src/command_processing.c ****     	(uint8*)&(MEM_P->SH.rest_position_flag),
 5574              		.loc 1 898 0
 5575 02ec D7F81035 		ldr	r3, [r7, #1296]
 5576 02f0 03F52B72 		add	r2, r3, #684
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5577              		.loc 1 872 0
 5578 02f4 07F56F73 		add	r3, r7, #956
 5579 02f8 5A66     		str	r2, [r3, #100]
 899:..\src/command_processing.c ****     	(uint8*)&(MEM_P->emg.switch_emg), 
 5580              		.loc 1 899 0
 5581 02fa D7F81035 		ldr	r3, [r7, #1296]
 5582 02fe 03F2FF12 		addw	r2, r3, #511
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5583              		.loc 1 872 0
 5584 0302 07F56F73 		add	r3, r7, #956
 5585 0306 9A66     		str	r2, [r3, #104]
 900:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.right_left),
 5586              		.loc 1 900 0
 5587 0308 D7F81035 		ldr	r3, [r7, #1296]
 5588 030c 03F1A702 		add	r2, r3, #167
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5589              		.loc 1 872 0
 5590 0310 07F56F73 		add	r3, r7, #956
 5591 0314 DA66     		str	r2, [r3, #108]
 901:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.read_imu_flag),
 5592              		.loc 1 901 0
 5593 0316 D7F81035 		ldr	r3, [r7, #1296]
 5594 031a 03F50072 		add	r2, r3, #512
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5595              		.loc 1 872 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 141


 5596 031e 07F56F73 		add	r3, r7, #956
 5597 0322 1A67     		str	r2, [r3, #112]
 902:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.read_exp_port_flag),                                   //30
 5598              		.loc 1 902 0
 5599 0324 D7F81035 		ldr	r3, [r7, #1296]
 5600 0328 03F22622 		addw	r2, r3, #550
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5601              		.loc 1 872 0
 5602 032c 07F56F73 		add	r3, r7, #956
 5603 0330 5A67     		str	r2, [r3, #116]
 903:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.reset_counters),
 5604              		.loc 1 903 0
 5605 0332 D7F81035 		ldr	r3, [r7, #1296]
 5606 0336 03F1A802 		add	r2, r3, #168
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5607              		.loc 1 872 0
 5608 033a 07F56F73 		add	r3, r7, #956
 5609 033e 9A67     		str	r2, [r3, #120]
 904:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.curr_time[0]),
 5610              		.loc 1 904 0
 5611 0340 D7F81035 		ldr	r3, [r7, #1296]
 5612 0344 03F50872 		add	r2, r3, #544
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5613              		.loc 1 872 0
 5614 0348 07F56F73 		add	r3, r7, #956
 5615 034c DA67     		str	r2, [r3, #124]
 905:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.SPI_read_delay),
 5616              		.loc 1 905 0
 5617 034e D7F81035 		ldr	r3, [r7, #1296]
 5618 0352 03F20122 		addw	r2, r3, #513
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5619              		.loc 1 872 0
 5620 0356 07F56F73 		add	r3, r7, #956
 5621 035a C3F88020 		str	r2, [r3, #128]
 906:..\src/command_processing.c ****     	(uint8*)&(MEM_P->imu.IMU_conf[0][0]),
 5622              		.loc 1 906 0
 5623 035e D7F81035 		ldr	r3, [r7, #1296]
 5624 0362 03F20222 		addw	r2, r3, #514
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5625              		.loc 1 872 0
 5626 0366 07F56F73 		add	r3, r7, #956
 5627 036a C3F88420 		str	r2, [r3, #132]
 907:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.user_id),
 5628              		.loc 1 907 0
 5629 036e D7F81035 		ldr	r3, [r7, #1296]
 5630 0372 03F1AB02 		add	r2, r3, #171
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5631              		.loc 1 872 0
 5632 0376 07F56F73 		add	r3, r7, #956
 5633 037a C3F88820 		str	r2, [r3, #136]
 908:..\src/command_processing.c ****         (uint8*)&(MEM_P->user[MEM_P->dev.user_id].user_code_string),
 5634              		.loc 1 908 0
 5635 037e D7F81035 		ldr	r3, [r7, #1296]
 5636 0382 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 5637 0386 1233     		adds	r3, r3, #18
 5638 0388 5B01     		lsls	r3, r3, #5
 5639 038a D7F81025 		ldr	r2, [r7, #1296]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 142


 5640 038e 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5641              		.loc 1 872 0
 5642 0390 07F56F73 		add	r3, r7, #956
 5643 0394 C3F88C20 		str	r2, [r3, #140]
 909:..\src/command_processing.c ****         
 910:..\src/command_processing.c ****         // GENERIC PARAMS
 911:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[MOTOR_IDX].encoder_line),			// other params of 1st motor
 5644              		.loc 1 911 0
 5645 0398 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5646 039c 1346     		mov	r3, r2
 5647 039e DB00     		lsls	r3, r3, #3
 5648 03a0 9B1A     		subs	r3, r3, r2
 5649 03a2 1B01     		lsls	r3, r3, #4
 5650 03a4 03F58873 		add	r3, r3, #272
 5651 03a8 D7F81025 		ldr	r2, [r7, #1296]
 5652 03ac 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5653              		.loc 1 872 0
 5654 03ae 07F56F73 		add	r3, r7, #956
 5655 03b2 C3F89020 		str	r2, [r3, #144]
 912:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[MOTOR_IDX].motor_driver_type),
 5656              		.loc 1 912 0
 5657 03b6 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5658 03ba 1346     		mov	r3, r2
 5659 03bc DB00     		lsls	r3, r3, #3
 5660 03be 9B1A     		subs	r3, r3, r2
 5661 03c0 1B01     		lsls	r3, r3, #4
 5662 03c2 E033     		adds	r3, r3, #224
 5663 03c4 D7F81025 		ldr	r2, [r7, #1296]
 5664 03c8 1344     		add	r3, r3, r2
 5665 03ca 9A1C     		adds	r2, r3, #2
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5666              		.loc 1 872 0
 5667 03cc 07F56F73 		add	r3, r7, #956
 5668 03d0 C3F89420 		str	r2, [r3, #148]
 913:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].pwm_rate_limiter),
 5669              		.loc 1 913 0
 5670 03d4 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5671 03d8 1346     		mov	r3, r2
 5672 03da DB00     		lsls	r3, r3, #3
 5673 03dc 9B1A     		subs	r3, r3, r2
 5674 03de 1B01     		lsls	r3, r3, #4
 5675 03e0 03F58873 		add	r3, r3, #272
 5676 03e4 D7F81025 		ldr	r2, [r7, #1296]
 5677 03e8 1344     		add	r3, r3, r2
 5678 03ea 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5679              		.loc 1 872 0
 5680 03ec 07F56F73 		add	r3, r7, #956
 5681 03f0 C3F89820 		str	r2, [r3, #152]
 914:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[MOTOR_IDX].not_revers_motor_flag), 	//40 
 5682              		.loc 1 914 0
 5683 03f4 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5684 03f8 1346     		mov	r3, r2
 5685 03fa DB00     		lsls	r3, r3, #3
 5686 03fc 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 143


 5687 03fe 1B01     		lsls	r3, r3, #4
 5688 0400 03F58873 		add	r3, r3, #272
 5689 0404 D7F81025 		ldr	r2, [r7, #1296]
 5690 0408 1344     		add	r3, r3, r2
 5691 040a 9A1C     		adds	r2, r3, #2
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5692              		.loc 1 872 0
 5693 040c 07F56F73 		add	r3, r7, #956
 5694 0410 C3F89C20 		str	r2, [r3, #156]
 915:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 5695              		.loc 1 915 0
 5696 0414 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5697 0418 D7F81015 		ldr	r1, [r7, #1296]
 5698 041c 1346     		mov	r3, r2
 5699 041e DB00     		lsls	r3, r3, #3
 5700 0420 9B1A     		subs	r3, r3, r2
 5701 0422 1B01     		lsls	r3, r3, #4
 5702 0424 0B44     		add	r3, r3, r1
 5703 0426 03F58873 		add	r3, r3, #272
 5704 042a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5705 042c 1A46     		mov	r2, r3
 5706 042e 1346     		mov	r3, r2
 5707 0430 5B00     		lsls	r3, r3, #1
 5708 0432 1344     		add	r3, r3, r2
 5709 0434 1B01     		lsls	r3, r3, #4
 5710 0436 03F5D873 		add	r3, r3, #432
 5711 043a D7F81025 		ldr	r2, [r7, #1296]
 5712 043e 1344     		add	r3, r3, r2
 5713 0440 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5714              		.loc 1 872 0
 5715 0442 07F56F73 		add	r3, r7, #956
 5716 0446 C3F8A020 		str	r2, [r3, #160]
 916:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[MOTOR_IDX].encoder_line].gears_params),        
 5717              		.loc 1 916 0
 5718 044a 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 5719 044e D7F81015 		ldr	r1, [r7, #1296]
 5720 0452 1346     		mov	r3, r2
 5721 0454 DB00     		lsls	r3, r3, #3
 5722 0456 9B1A     		subs	r3, r3, r2
 5723 0458 1B01     		lsls	r3, r3, #4
 5724 045a 0B44     		add	r3, r3, r1
 5725 045c 03F58873 		add	r3, r3, #272
 5726 0460 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5727 0462 1A46     		mov	r2, r3
 5728 0464 1346     		mov	r3, r2
 5729 0466 5B00     		lsls	r3, r3, #1
 5730 0468 1344     		add	r3, r3, r2
 5731 046a 1B01     		lsls	r3, r3, #4
 5732 046c 03F5D873 		add	r3, r3, #432
 5733 0470 D7F81025 		ldr	r2, [r7, #1296]
 5734 0474 1344     		add	r3, r3, r2
 5735 0476 5A1D     		adds	r2, r3, #5
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5736              		.loc 1 872 0
 5737 0478 07F56F73 		add	r3, r7, #956
 5738 047c C3F8A420 		str	r2, [r3, #164]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 144


 917:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.use_2nd_motor_flag),					// second motor config and params
 5739              		.loc 1 917 0
 5740 0480 D7F81035 		ldr	r3, [r7, #1296]
 5741 0484 03F1A902 		add	r2, r3, #169
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5742              		.loc 1 872 0
 5743 0488 07F56F73 		add	r3, r7, #956
 5744 048c C3F8A820 		str	r2, [r3, #168]
 918:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p),
 5745              		.loc 1 918 0
 5746 0490 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5747 0494 1346     		mov	r3, r2
 5748 0496 DB00     		lsls	r3, r3, #3
 5749 0498 9B1A     		subs	r3, r3, r2
 5750 049a 1B01     		lsls	r3, r3, #4
 5751 049c B033     		adds	r3, r3, #176
 5752 049e D7F81025 		ldr	r2, [r7, #1296]
 5753 04a2 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5754              		.loc 1 872 0
 5755 04a4 07F56F73 		add	r3, r7, #956
 5756 04a8 C3F8AC20 		str	r2, [r3, #172]
 919:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].k_p_c), 
 5757              		.loc 1 919 0
 5758 04ac 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5759 04b0 1346     		mov	r3, r2
 5760 04b2 DB00     		lsls	r3, r3, #3
 5761 04b4 9B1A     		subs	r3, r3, r2
 5762 04b6 1B01     		lsls	r3, r3, #4
 5763 04b8 B833     		adds	r3, r3, #184
 5764 04ba D7F81025 		ldr	r2, [r7, #1296]
 5765 04be 1344     		add	r3, r3, r2
 5766 04c0 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5767              		.loc 1 872 0
 5768 04c2 07F56F73 		add	r3, r7, #956
 5769 04c6 C3F8B020 		str	r2, [r3, #176]
 920:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activ),
 5770              		.loc 1 920 0
 5771 04ca 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5772 04ce 1346     		mov	r3, r2
 5773 04d0 DB00     		lsls	r3, r3, #3
 5774 04d2 9B1A     		subs	r3, r3, r2
 5775 04d4 1B01     		lsls	r3, r3, #4
 5776 04d6 E033     		adds	r3, r3, #224
 5777 04d8 D7F81025 		ldr	r2, [r7, #1296]
 5778 04dc 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5779              		.loc 1 872 0
 5780 04de 07F56F73 		add	r3, r7, #956
 5781 04e2 C3F8B420 		str	r2, [r3, #180]
 921:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].input_mode),
 5782              		.loc 1 921 0
 5783 04e6 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5784 04ea 1346     		mov	r3, r2
 5785 04ec DB00     		lsls	r3, r3, #3
 5786 04ee 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 145


 5787 04f0 1B01     		lsls	r3, r3, #4
 5788 04f2 03F58473 		add	r3, r3, #264
 5789 04f6 D7F81025 		ldr	r2, [r7, #1296]
 5790 04fa 1344     		add	r3, r3, r2
 5791 04fc 9A1D     		adds	r2, r3, #6
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5792              		.loc 1 872 0
 5793 04fe 07F56F73 		add	r3, r7, #956
 5794 0502 C3F8B820 		str	r2, [r3, #184]
 922:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].control_mode), 
 5795              		.loc 1 922 0
 5796 0506 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5797 050a 1346     		mov	r3, r2
 5798 050c DB00     		lsls	r3, r3, #3
 5799 050e 9B1A     		subs	r3, r3, r2
 5800 0510 1B01     		lsls	r3, r3, #4
 5801 0512 03F58473 		add	r3, r3, #264
 5802 0516 D7F81025 		ldr	r2, [r7, #1296]
 5803 051a 1344     		add	r3, r3, r2
 5804 051c DA1D     		adds	r2, r3, #7
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5805              		.loc 1 872 0
 5806 051e 07F56F73 		add	r3, r7, #956
 5807 0522 C3F8BC20 		str	r2, [r3, #188]
 923:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].res),
 5808              		.loc 1 923 0
 5809 0526 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5810 052a D7F81015 		ldr	r1, [r7, #1296]
 5811 052e 1346     		mov	r3, r2
 5812 0530 DB00     		lsls	r3, r3, #3
 5813 0532 9B1A     		subs	r3, r3, r2
 5814 0534 1B01     		lsls	r3, r3, #4
 5815 0536 0B44     		add	r3, r3, r1
 5816 0538 03F58873 		add	r3, r3, #272
 5817 053c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5818 053e 1A46     		mov	r2, r3
 5819 0540 1346     		mov	r3, r2
 5820 0542 5B00     		lsls	r3, r3, #1
 5821 0544 1344     		add	r3, r3, r2
 5822 0546 1B01     		lsls	r3, r3, #4
 5823 0548 03F5C873 		add	r3, r3, #400
 5824 054c D7F81025 		ldr	r2, [r7, #1296]
 5825 0550 1344     		add	r3, r3, r2
 5826 0552 5A1D     		adds	r2, r3, #5
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5827              		.loc 1 872 0
 5828 0554 07F56F73 		add	r3, r7, #956
 5829 0558 C3F8C020 		str	r2, [r3, #192]
 924:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_off[0]),    //50
 5830              		.loc 1 924 0
 5831 055c 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5832 0560 D7F81015 		ldr	r1, [r7, #1296]
 5833 0564 1346     		mov	r3, r2
 5834 0566 DB00     		lsls	r3, r3, #3
 5835 0568 9B1A     		subs	r3, r3, r2
 5836 056a 1B01     		lsls	r3, r3, #4
 5837 056c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 146


 5838 056e 03F58873 		add	r3, r3, #272
 5839 0572 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5840 0574 1A46     		mov	r2, r3
 5841 0576 1346     		mov	r3, r2
 5842 0578 5B00     		lsls	r3, r3, #1
 5843 057a 1344     		add	r3, r3, r2
 5844 057c 1B01     		lsls	r3, r3, #4
 5845 057e 03F5CC73 		add	r3, r3, #408
 5846 0582 D7F81025 		ldr	r2, [r7, #1296]
 5847 0586 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5848              		.loc 1 872 0
 5849 0588 07F56F73 		add	r3, r7, #956
 5850 058c C3F8C420 		str	r2, [r3, #196]
 925:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].m_mult[0]),
 5851              		.loc 1 925 0
 5852 0590 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5853 0594 D7F81015 		ldr	r1, [r7, #1296]
 5854 0598 1346     		mov	r3, r2
 5855 059a DB00     		lsls	r3, r3, #3
 5856 059c 9B1A     		subs	r3, r3, r2
 5857 059e 1B01     		lsls	r3, r3, #4
 5858 05a0 0B44     		add	r3, r3, r1
 5859 05a2 03F58873 		add	r3, r3, #272
 5860 05a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5861 05a8 1A46     		mov	r2, r3
 5862 05aa 1346     		mov	r3, r2
 5863 05ac 5B00     		lsls	r3, r3, #1
 5864 05ae 1344     		add	r3, r3, r2
 5865 05b0 1B01     		lsls	r3, r3, #4
 5866 05b2 03F5D073 		add	r3, r3, #416
 5867 05b6 D7F81025 		ldr	r2, [r7, #1296]
 5868 05ba 1344     		add	r3, r3, r2
 5869 05bc 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5870              		.loc 1 872 0
 5871 05be 07F56F73 		add	r3, r7, #956
 5872 05c2 C3F8C820 		str	r2, [r3, #200]
 926:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_flag),
 5873              		.loc 1 926 0
 5874 05c6 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5875 05ca 1346     		mov	r3, r2
 5876 05cc DB00     		lsls	r3, r3, #3
 5877 05ce 9B1A     		subs	r3, r3, r2
 5878 05d0 1B01     		lsls	r3, r3, #4
 5879 05d2 E033     		adds	r3, r3, #224
 5880 05d4 D7F81025 		ldr	r2, [r7, #1296]
 5881 05d8 1344     		add	r3, r3, r2
 5882 05da DA1C     		adds	r2, r3, #3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5883              		.loc 1 872 0
 5884 05dc 07F56F73 		add	r3, r7, #956
 5885 05e0 C3F8CC20 		str	r2, [r3, #204]
 927:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pos_lim_inf), 
 5886              		.loc 1 927 0
 5887 05e4 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5888 05e8 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 147


 5889 05ea DB00     		lsls	r3, r3, #3
 5890 05ec 9B1A     		subs	r3, r3, r2
 5891 05ee 1B01     		lsls	r3, r3, #4
 5892 05f0 E033     		adds	r3, r3, #224
 5893 05f2 D7F81025 		ldr	r2, [r7, #1296]
 5894 05f6 1344     		add	r3, r3, r2
 5895 05f8 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5896              		.loc 1 872 0
 5897 05fa 07F56F73 		add	r3, r7, #956
 5898 05fe C3F8D020 		str	r2, [r3, #208]
 928:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].max_step_neg),
 5899              		.loc 1 928 0
 5900 0602 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5901 0606 1346     		mov	r3, r2
 5902 0608 DB00     		lsls	r3, r3, #3
 5903 060a 9B1A     		subs	r3, r3, r2
 5904 060c 1B01     		lsls	r3, r3, #4
 5905 060e E833     		adds	r3, r3, #232
 5906 0610 D7F81025 		ldr	r2, [r7, #1296]
 5907 0614 1344     		add	r3, r3, r2
 5908 0616 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5909              		.loc 1 872 0
 5910 0618 07F56F73 		add	r3, r7, #956
 5911 061c C3F8D420 		str	r2, [r3, #212]
 929:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].current_limit),
 5912              		.loc 1 929 0
 5913 0620 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5914 0624 1346     		mov	r3, r2
 5915 0626 DB00     		lsls	r3, r3, #3
 5916 0628 9B1A     		subs	r3, r3, r2
 5917 062a 1B01     		lsls	r3, r3, #4
 5918 062c 03F58473 		add	r3, r3, #264
 5919 0630 D7F81025 		ldr	r2, [r7, #1296]
 5920 0634 1344     		add	r3, r3, r2
 5921 0636 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5922              		.loc 1 872 0
 5923 0638 07F56F73 		add	r3, r7, #956
 5924 063c C3F8D820 		str	r2, [r3, #216]
 930:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off),
 5925              		.loc 1 930 0
 5926 0640 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5927 0644 D7F81015 		ldr	r1, [r7, #1296]
 5928 0648 1346     		mov	r3, r2
 5929 064a DB00     		lsls	r3, r3, #3
 5930 064c 9B1A     		subs	r3, r3, r2
 5931 064e 1B01     		lsls	r3, r3, #4
 5932 0650 0B44     		add	r3, r3, r1
 5933 0652 03F58873 		add	r3, r3, #272
 5934 0656 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5935 0658 1A46     		mov	r2, r3
 5936 065a 1346     		mov	r3, r2
 5937 065c 5B00     		lsls	r3, r3, #1
 5938 065e 1344     		add	r3, r3, r2
 5939 0660 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 148


 5940 0662 03F5D873 		add	r3, r3, #432
 5941 0666 D7F81025 		ldr	r2, [r7, #1296]
 5942 066a 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5943              		.loc 1 872 0
 5944 066c 07F56F73 		add	r3, r7, #956
 5945 0670 C3F8DC20 		str	r2, [r3, #220]
 931:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].motor_handle_ratio),
 5946              		.loc 1 931 0
 5947 0674 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5948 0678 D7F81015 		ldr	r1, [r7, #1296]
 5949 067c 1346     		mov	r3, r2
 5950 067e DB00     		lsls	r3, r3, #3
 5951 0680 9B1A     		subs	r3, r3, r2
 5952 0682 1B01     		lsls	r3, r3, #4
 5953 0684 0B44     		add	r3, r3, r1
 5954 0686 03F58873 		add	r3, r3, #272
 5955 068a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5956 068c 1A46     		mov	r2, r3
 5957 068e 1346     		mov	r3, r2
 5958 0690 5B00     		lsls	r3, r3, #1
 5959 0692 1344     		add	r3, r3, r2
 5960 0694 1B01     		lsls	r3, r3, #4
 5961 0696 03F5D873 		add	r3, r3, #432
 5962 069a D7F81025 		ldr	r2, [r7, #1296]
 5963 069e 1344     		add	r3, r3, r2
 5964 06a0 1A1D     		adds	r2, r3, #4
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5965              		.loc 1 872 0
 5966 06a2 07F56F73 		add	r3, r7, #956
 5967 06a6 C3F8E020 		str	r2, [r3, #224]
 932:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].activate_pwm_rescaling),
 5968              		.loc 1 932 0
 5969 06aa 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5970 06ae 1346     		mov	r3, r2
 5971 06b0 DB00     		lsls	r3, r3, #3
 5972 06b2 9B1A     		subs	r3, r3, r2
 5973 06b4 1B01     		lsls	r3, r3, #4
 5974 06b6 E033     		adds	r3, r3, #224
 5975 06b8 D7F81025 		ldr	r2, [r7, #1296]
 5976 06bc 1344     		add	r3, r3, r2
 5977 06be 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5978              		.loc 1 872 0
 5979 06c0 07F56F73 		add	r3, r7, #956
 5980 06c4 C3F8E420 		str	r2, [r3, #228]
 933:..\src/command_processing.c ****     	(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].curr_lookup[0]),
 5981              		.loc 1 933 0
 5982 06c8 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5983 06cc 1346     		mov	r3, r2
 5984 06ce DB00     		lsls	r3, r3, #3
 5985 06d0 9B1A     		subs	r3, r3, r2
 5986 06d2 1B01     		lsls	r3, r3, #4
 5987 06d4 F033     		adds	r3, r3, #240
 5988 06d6 D7F81025 		ldr	r2, [r7, #1296]
 5989 06da 1344     		add	r3, r3, r2
 5990 06dc 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 149


 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 5991              		.loc 1 872 0
 5992 06de 07F56F73 		add	r3, r7, #956
 5993 06e2 C3F8E820 		str	r2, [r3, #232]
 934:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line),         //60
 5994              		.loc 1 934 0
 5995 06e6 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 5996 06ea 1346     		mov	r3, r2
 5997 06ec DB00     		lsls	r3, r3, #3
 5998 06ee 9B1A     		subs	r3, r3, r2
 5999 06f0 1B01     		lsls	r3, r3, #4
 6000 06f2 03F58873 		add	r3, r3, #272
 6001 06f6 D7F81025 		ldr	r2, [r7, #1296]
 6002 06fa 1A44     		add	r2, r2, r3
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6003              		.loc 1 872 0
 6004 06fc 07F56F73 		add	r3, r7, #956
 6005 0700 C3F8EC20 		str	r2, [r3, #236]
 935:..\src/command_processing.c **** 		(uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].motor_driver_type),
 6006              		.loc 1 935 0
 6007 0704 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6008 0708 1346     		mov	r3, r2
 6009 070a DB00     		lsls	r3, r3, #3
 6010 070c 9B1A     		subs	r3, r3, r2
 6011 070e 1B01     		lsls	r3, r3, #4
 6012 0710 E033     		adds	r3, r3, #224
 6013 0712 D7F81025 		ldr	r2, [r7, #1296]
 6014 0716 1344     		add	r3, r3, r2
 6015 0718 9A1C     		adds	r2, r3, #2
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6016              		.loc 1 872 0
 6017 071a 07F56F73 		add	r3, r7, #956
 6018 071e C3F8F020 		str	r2, [r3, #240]
 936:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].pwm_rate_limiter),
 6019              		.loc 1 936 0
 6020 0722 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6021 0726 1346     		mov	r3, r2
 6022 0728 DB00     		lsls	r3, r3, #3
 6023 072a 9B1A     		subs	r3, r3, r2
 6024 072c 1B01     		lsls	r3, r3, #4
 6025 072e 03F58873 		add	r3, r3, #272
 6026 0732 D7F81025 		ldr	r2, [r7, #1296]
 6027 0736 1344     		add	r3, r3, r2
 6028 0738 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6029              		.loc 1 872 0
 6030 073a 07F56F73 		add	r3, r7, #956
 6031 073e C3F8F420 		str	r2, [r3, #244]
 937:..\src/command_processing.c ****         (uint8*)&(MEM_P->motor[SECOND_MOTOR_IDX].not_revers_motor_flag),
 6032              		.loc 1 937 0
 6033 0742 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6034 0746 1346     		mov	r3, r2
 6035 0748 DB00     		lsls	r3, r3, #3
 6036 074a 9B1A     		subs	r3, r3, r2
 6037 074c 1B01     		lsls	r3, r3, #4
 6038 074e 03F58873 		add	r3, r3, #272
 6039 0752 D7F81025 		ldr	r2, [r7, #1296]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 150


 6040 0756 1344     		add	r3, r3, r2
 6041 0758 9A1C     		adds	r2, r3, #2
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6042              		.loc 1 872 0
 6043 075a 07F56F73 		add	r3, r7, #956
 6044 075e C3F8F820 		str	r2, [r3, #248]
 938:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].Enc_idx_use_for_control),
 6045              		.loc 1 938 0
 6046 0762 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6047 0766 D7F81015 		ldr	r1, [r7, #1296]
 6048 076a 1346     		mov	r3, r2
 6049 076c DB00     		lsls	r3, r3, #3
 6050 076e 9B1A     		subs	r3, r3, r2
 6051 0770 1B01     		lsls	r3, r3, #4
 6052 0772 0B44     		add	r3, r3, r1
 6053 0774 03F58873 		add	r3, r3, #272
 6054 0778 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6055 077a 1A46     		mov	r2, r3
 6056 077c 1346     		mov	r3, r2
 6057 077e 5B00     		lsls	r3, r3, #1
 6058 0780 1344     		add	r3, r3, r2
 6059 0782 1B01     		lsls	r3, r3, #4
 6060 0784 03F5D873 		add	r3, r3, #432
 6061 0788 D7F81025 		ldr	r2, [r7, #1296]
 6062 078c 1344     		add	r3, r3, r2
 6063 078e 5A1C     		adds	r2, r3, #1
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6064              		.loc 1 872 0
 6065 0790 07F56F73 		add	r3, r7, #956
 6066 0794 C3F8FC20 		str	r2, [r3, #252]
 939:..\src/command_processing.c ****         (uint8*)&(MEM_P->enc[MEM_P->motor[SECOND_MOTOR_IDX].encoder_line].gears_params),
 6067              		.loc 1 939 0
 6068 0798 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6069 079c D7F81015 		ldr	r1, [r7, #1296]
 6070 07a0 1346     		mov	r3, r2
 6071 07a2 DB00     		lsls	r3, r3, #3
 6072 07a4 9B1A     		subs	r3, r3, r2
 6073 07a6 1B01     		lsls	r3, r3, #4
 6074 07a8 0B44     		add	r3, r3, r1
 6075 07aa 03F58873 		add	r3, r3, #272
 6076 07ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6077 07b0 1A46     		mov	r2, r3
 6078 07b2 1346     		mov	r3, r2
 6079 07b4 5B00     		lsls	r3, r3, #1
 6080 07b6 1344     		add	r3, r3, r2
 6081 07b8 1B01     		lsls	r3, r3, #4
 6082 07ba 03F5D873 		add	r3, r3, #432
 6083 07be D7F81025 		ldr	r2, [r7, #1296]
 6084 07c2 1344     		add	r3, r3, r2
 6085 07c4 5A1D     		adds	r2, r3, #5
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6086              		.loc 1 872 0
 6087 07c6 07F56F73 		add	r3, r7, #956
 6088 07ca C3F80021 		str	r2, [r3, #256]
 940:..\src/command_processing.c ****         
 941:..\src/command_processing.c **** 		(uint8*)&(MEM_P->enc[0].Enc_raw_read_conf[0]),					// additional generic params
 6089              		.loc 1 941 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 151


 6090 07ce D7F81035 		ldr	r3, [r7, #1296]
 6091 07d2 03F5C872 		add	r2, r3, #400
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6092              		.loc 1 872 0
 6093 07d6 07F56F73 		add	r3, r7, #956
 6094 07da C3F80421 		str	r2, [r3, #260]
 942:..\src/command_processing.c ****     	(uint8*)&(MEM_P->enc[1].Enc_raw_read_conf[0]),
 6095              		.loc 1 942 0
 6096 07de D7F81035 		ldr	r3, [r7, #1296]
 6097 07e2 03F5E072 		add	r2, r3, #448
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6098              		.loc 1 872 0
 6099 07e6 07F56F73 		add	r3, r7, #956
 6100 07ea C3F80821 		str	r2, [r3, #264]
 943:..\src/command_processing.c ****         (uint8*)&(MEM_P->exp.read_ADC_sensors_port_flag),		
 6101              		.loc 1 943 0
 6102 07ee D7F81035 		ldr	r3, [r7, #1296]
 6103 07f2 03F22722 		addw	r2, r3, #551
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6104              		.loc 1 872 0
 6105 07f6 07F56F73 		add	r3, r7, #956
 6106 07fa C3F80C21 		str	r2, [r3, #268]
 944:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[0]),
 6107              		.loc 1 944 0
 6108 07fe D7F81035 		ldr	r3, [r7, #1296]
 6109 0802 03F50A72 		add	r2, r3, #552
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6110              		.loc 1 872 0
 6111 0806 07F56F73 		add	r3, r7, #956
 6112 080a C3F81021 		str	r2, [r3, #272]
 945:..\src/command_processing.c ****     	(uint8*)&(MEM_P->exp.ADC_conf[6]),                          //70         
 6113              		.loc 1 945 0
 6114 080e D7F81035 		ldr	r3, [r7, #1296]
 6115 0812 03F22E22 		addw	r2, r3, #558
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6116              		.loc 1 872 0
 6117 0816 07F56F73 		add	r3, r7, #956
 6118 081a C3F81421 		str	r2, [r3, #276]
 946:..\src/command_processing.c ****         (uint8*)&(MEM_P->dev.dev_type),
 6119              		.loc 1 946 0
 6120 081e D7F81035 		ldr	r3, [r7, #1296]
 6121 0822 03F1AC02 		add	r2, r3, #172
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6122              		.loc 1 872 0
 6123 0826 07F56F73 		add	r3, r7, #956
 6124 082a C3F81821 		str	r2, [r3, #280]
 947:..\src/command_processing.c ****         
 948:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_comm_active),                        // additional master params
 6125              		.loc 1 948 0
 6126 082e D7F81035 		ldr	r3, [r7, #1296]
 6127 0832 03F52C72 		add	r2, r3, #688
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6128              		.loc 1 872 0
 6129 0836 07F56F73 		add	r3, r7, #956
 6130 083a C3F81C21 		str	r2, [r3, #284]
 949:..\src/command_processing.c ****         (uint8*)&(MEM_P->MS.slave_ID),
 6131              		.loc 1 949 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 152


 6132 083e D7F81035 		ldr	r3, [r7, #1296]
 6133 0842 03F2B122 		addw	r2, r3, #689
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6134              		.loc 1 872 0
 6135 0846 07F56F73 		add	r3, r7, #956
 6136 084a C3F82021 		str	r2, [r3, #288]
 950:..\src/command_processing.c ****         
 951:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.max_residual_current),                     // additional feedback param
 6137              		.loc 1 951 0
 6138 084e D7F81035 		ldr	r3, [r7, #1296]
 6139 0852 03F53072 		add	r2, r3, #704
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6140              		.loc 1 872 0
 6141 0856 07F56F73 		add	r3, r7, #956
 6142 085a C3F82421 		str	r2, [r3, #292]
 952:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.maximum_pressure_kPa),
 6143              		.loc 1 952 0
 6144 085e D7F81035 		ldr	r3, [r7, #1296]
 6145 0862 03F53172 		add	r2, r3, #708
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6146              		.loc 1 872 0
 6147 0866 07F56F73 		add	r3, r7, #956
 6148 086a C3F82821 		str	r2, [r3, #296]
 953:..\src/command_processing.c ****         (uint8*)&(MEM_P->FB.prop_err_fb_gain),
 6149              		.loc 1 953 0
 6150 086e D7F81035 		ldr	r3, [r7, #1296]
 6151 0872 03F53272 		add	r2, r3, #712
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6152              		.loc 1 872 0
 6153 0876 07F56F73 		add	r3, r7, #956
 6154 087a C3F82C21 		str	r2, [r3, #300]
 954:..\src/command_processing.c ****         
 955:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_act_mode),                           // additional wrist params
 6155              		.loc 1 955 0
 6156 087e D7F81035 		ldr	r3, [r7, #1296]
 6157 0882 03F53472 		add	r2, r3, #720
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6158              		.loc 1 872 0
 6159 0886 07F56F73 		add	r3, r7, #956
 6160 088a C3F83021 		str	r2, [r3, #304]
 956:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.fast_act_threshold[0]),
 6161              		.loc 1 956 0
 6162 088e D7F81035 		ldr	r3, [r7, #1296]
 6163 0892 03F2D222 		addw	r2, r3, #722
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6164              		.loc 1 872 0
 6165 0896 07F56F73 		add	r3, r7, #956
 6166 089a C3F83421 		str	r2, [r3, #308]
 957:..\src/command_processing.c ****         (uint8*)&(MEM_P->WR.wrist_direction_association)
 6167              		.loc 1 957 0
 6168 089e D7F81035 		ldr	r3, [r7, #1296]
 6169 08a2 03F2D622 		addw	r2, r3, #726
 872:..\src/command_processing.c ****     	(uint8*)&(MEM_P->dev.id),                                                   
 6170              		.loc 1 872 0
 6171 08a6 07F56F73 		add	r3, r7, #956
 6172 08aa C3F83821 		str	r2, [r3, #312]
 958:..\src/command_processing.c ****     };
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 153


 959:..\src/command_processing.c ****     
 960:..\src/command_processing.c ****     uint8 TYPES[NUM_OF_PARAMS] = {
 6173              		.loc 1 960 0
 6174 08ae 07F55B73 		add	r3, r7, #876
 6175 08b2 F44A     		ldr	r2, .L350
 6176 08b4 1846     		mov	r0, r3
 6177 08b6 1146     		mov	r1, r2
 6178 08b8 4F23     		movs	r3, #79
 6179 08ba 1A46     		mov	r2, r3
 6180 08bc FFF7FEFF 		bl	memcpy
 961:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, 
 962:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16, 
 963:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, 
 964:..\src/command_processing.c ****         TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UINT32, 
 965:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, 
 966:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32,
 967:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, 
 968:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 969:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_FLAG, TYPE_STRING,
 970:..\src/command_processing.c ****         
 971:..\src/command_processing.c ****         // GENERIC PARAMS
 972:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_UINT8, TYPE_FLAG,
 973:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, 
 974:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG,
 975:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT16, TYPE_FLOAT, TYPE_FLAG, 
 976:..\src/command_processing.c ****         TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_FLAG,
 977:..\src/command_processing.c ****         TYPE_INT8,  TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8,
 978:..\src/command_processing.c ****         TYPE_FLAG,  TYPE_UINT8, TYPE_FLAG, TYPE_UINT8,
 979:..\src/command_processing.c ****         TYPE_INT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG,
 980:..\src/command_processing.c ****         TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG,
 981:..\src/command_processing.c ****         TYPE_UINT8, TYPE_INT32, TYPE_FLOAT, TYPE_FLOAT,
 982:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT16, TYPE_FLAG
 983:..\src/command_processing.c ****     };
 984:..\src/command_processing.c **** 
 985:..\src/command_processing.c ****     uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 6181              		.loc 1 985 0
 6182 08c0 07F54773 		add	r3, r7, #796
 6183 08c4 0122     		movs	r2, #1
 6184 08c6 1A70     		strb	r2, [r3]
 6185 08c8 07F54773 		add	r3, r7, #796
 6186 08cc 0322     		movs	r2, #3
 6187 08ce 5A70     		strb	r2, [r3, #1]
 6188 08d0 07F54773 		add	r3, r7, #796
 6189 08d4 0322     		movs	r2, #3
 6190 08d6 9A70     		strb	r2, [r3, #2]
 6191 08d8 07F54773 		add	r3, r7, #796
 6192 08dc 0122     		movs	r2, #1
 6193 08de DA70     		strb	r2, [r3, #3]
 6194 08e0 07F54773 		add	r3, r7, #796
 6195 08e4 0122     		movs	r2, #1
 6196 08e6 1A71     		strb	r2, [r3, #4]
 6197 08e8 07F54773 		add	r3, r7, #796
 6198 08ec 0122     		movs	r2, #1
 6199 08ee 5A71     		strb	r2, [r3, #5]
 6200 08f0 07F54773 		add	r3, r7, #796
 6201 08f4 0322     		movs	r2, #3
 6202 08f6 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 154


 6203 08f8 07F54773 		add	r3, r7, #796
 6204 08fc 0322     		movs	r2, #3
 6205 08fe DA71     		strb	r2, [r3, #7]
 6206 0900 07F54773 		add	r3, r7, #796
 6207 0904 0322     		movs	r2, #3
 6208 0906 1A72     		strb	r2, [r3, #8]
 6209 0908 07F54773 		add	r3, r7, #796
 6210 090c 0122     		movs	r2, #1
 6211 090e 5A72     		strb	r2, [r3, #9]
 6212 0910 07F54773 		add	r3, r7, #796
 6213 0914 0222     		movs	r2, #2
 6214 0916 9A72     		strb	r2, [r3, #10]
 6215 0918 07F54773 		add	r3, r7, #796
 6216 091c 0222     		movs	r2, #2
 6217 091e DA72     		strb	r2, [r3, #11]
 6218 0920 07F54773 		add	r3, r7, #796
 6219 0924 0122     		movs	r2, #1
 6220 0926 1A73     		strb	r2, [r3, #12]
 6221 0928 07F54773 		add	r3, r7, #796
 6222 092c 0222     		movs	r2, #2
 6223 092e 5A73     		strb	r2, [r3, #13]
 6224 0930 07F54773 		add	r3, r7, #796
 6225 0934 0122     		movs	r2, #1
 6226 0936 9A73     		strb	r2, [r3, #14]
 6227 0938 07F54773 		add	r3, r7, #796
 6228 093c 0222     		movs	r2, #2
 6229 093e DA73     		strb	r2, [r3, #15]
 6230 0940 07F54773 		add	r3, r7, #796
 6231 0944 0222     		movs	r2, #2
 6232 0946 1A74     		strb	r2, [r3, #16]
 6233 0948 07F54773 		add	r3, r7, #796
 6234 094c 0122     		movs	r2, #1
 6235 094e 5A74     		strb	r2, [r3, #17]
 6236 0950 07F54773 		add	r3, r7, #796
 6237 0954 0122     		movs	r2, #1
 6238 0956 9A74     		strb	r2, [r3, #18]
 6239 0958 07F54773 		add	r3, r7, #796
 6240 095c 0122     		movs	r2, #1
 6241 095e DA74     		strb	r2, [r3, #19]
 6242 0960 07F54773 		add	r3, r7, #796
 6243 0964 0622     		movs	r2, #6
 6244 0966 1A75     		strb	r2, [r3, #20]
 6245 0968 07F54773 		add	r3, r7, #796
 6246 096c 0322     		movs	r2, #3
 6247 096e 5A75     		strb	r2, [r3, #21]
 6248 0970 07F54773 		add	r3, r7, #796
 6249 0974 0122     		movs	r2, #1
 6250 0976 9A75     		strb	r2, [r3, #22]
 6251 0978 07F54773 		add	r3, r7, #796
 6252 097c 0122     		movs	r2, #1
 6253 097e DA75     		strb	r2, [r3, #23]
 6254 0980 07F54773 		add	r3, r7, #796
 6255 0984 0122     		movs	r2, #1
 6256 0986 1A76     		strb	r2, [r3, #24]
 6257 0988 07F54773 		add	r3, r7, #796
 6258 098c 0122     		movs	r2, #1
 6259 098e 5A76     		strb	r2, [r3, #25]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 155


 6260 0990 07F54773 		add	r3, r7, #796
 6261 0994 0122     		movs	r2, #1
 6262 0996 9A76     		strb	r2, [r3, #26]
 6263 0998 07F54773 		add	r3, r7, #796
 6264 099c 0122     		movs	r2, #1
 6265 099e DA76     		strb	r2, [r3, #27]
 6266 09a0 07F54773 		add	r3, r7, #796
 6267 09a4 0122     		movs	r2, #1
 6268 09a6 1A77     		strb	r2, [r3, #28]
 6269 09a8 07F54773 		add	r3, r7, #796
 6270 09ac 0122     		movs	r2, #1
 6271 09ae 5A77     		strb	r2, [r3, #29]
 6272 09b0 07F54773 		add	r3, r7, #796
 6273 09b4 0122     		movs	r2, #1
 6274 09b6 9A77     		strb	r2, [r3, #30]
 6275 09b8 07F54773 		add	r3, r7, #796
 6276 09bc 0622     		movs	r2, #6
 6277 09be DA77     		strb	r2, [r3, #31]
 6278 09c0 07F54773 		add	r3, r7, #796
 6279 09c4 0122     		movs	r2, #1
 6280 09c6 83F82020 		strb	r2, [r3, #32]
 6281 09ca 07F54773 		add	r3, r7, #796
 6282 09ce 0522     		movs	r2, #5
 6283 09d0 83F82120 		strb	r2, [r3, #33]
 6284 09d4 07F54773 		add	r3, r7, #796
 6285 09d8 0122     		movs	r2, #1
 6286 09da 83F82220 		strb	r2, [r3, #34]
 6287 09de 07F54773 		add	r3, r7, #796
 6288 09e2 0622     		movs	r2, #6
 6289 09e4 83F82320 		strb	r2, [r3, #35]
 6290 09e8 07F54773 		add	r3, r7, #796
 6291 09ec 0122     		movs	r2, #1
 6292 09ee 83F82420 		strb	r2, [r3, #36]
 6293 09f2 07F54773 		add	r3, r7, #796
 6294 09f6 0122     		movs	r2, #1
 6295 09f8 83F82520 		strb	r2, [r3, #37]
 6296 09fc 07F54773 		add	r3, r7, #796
 6297 0a00 0122     		movs	r2, #1
 6298 0a02 83F82620 		strb	r2, [r3, #38]
 6299 0a06 07F54773 		add	r3, r7, #796
 6300 0a0a 0122     		movs	r2, #1
 6301 0a0c 83F82720 		strb	r2, [r3, #39]
 6302 0a10 07F54773 		add	r3, r7, #796
 6303 0a14 0322     		movs	r2, #3
 6304 0a16 83F82820 		strb	r2, [r3, #40]
 6305 0a1a 07F54773 		add	r3, r7, #796
 6306 0a1e 0322     		movs	r2, #3
 6307 0a20 83F82920 		strb	r2, [r3, #41]
 6308 0a24 07F54773 		add	r3, r7, #796
 6309 0a28 0122     		movs	r2, #1
 6310 0a2a 83F82A20 		strb	r2, [r3, #42]
 6311 0a2e 07F54773 		add	r3, r7, #796
 6312 0a32 0322     		movs	r2, #3
 6313 0a34 83F82B20 		strb	r2, [r3, #43]
 6314 0a38 07F54773 		add	r3, r7, #796
 6315 0a3c 0322     		movs	r2, #3
 6316 0a3e 83F82C20 		strb	r2, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 156


 6317 0a42 07F54773 		add	r3, r7, #796
 6318 0a46 0122     		movs	r2, #1
 6319 0a48 83F82D20 		strb	r2, [r3, #45]
 6320 0a4c 07F54773 		add	r3, r7, #796
 6321 0a50 0122     		movs	r2, #1
 6322 0a52 83F82E20 		strb	r2, [r3, #46]
 6323 0a56 07F54773 		add	r3, r7, #796
 6324 0a5a 0122     		movs	r2, #1
 6325 0a5c 83F82F20 		strb	r2, [r3, #47]
 6326 0a60 07F54773 		add	r3, r7, #796
 6327 0a64 0322     		movs	r2, #3
 6328 0a66 83F83020 		strb	r2, [r3, #48]
 6329 0a6a 07F54773 		add	r3, r7, #796
 6330 0a6e 0322     		movs	r2, #3
 6331 0a70 83F83120 		strb	r2, [r3, #49]
 6332 0a74 07F54773 		add	r3, r7, #796
 6333 0a78 0322     		movs	r2, #3
 6334 0a7a 83F83220 		strb	r2, [r3, #50]
 6335 0a7e 07F54773 		add	r3, r7, #796
 6336 0a82 0122     		movs	r2, #1
 6337 0a84 83F83320 		strb	r2, [r3, #51]
 6338 0a88 07F54773 		add	r3, r7, #796
 6339 0a8c 0222     		movs	r2, #2
 6340 0a8e 83F83420 		strb	r2, [r3, #52]
 6341 0a92 07F54773 		add	r3, r7, #796
 6342 0a96 0222     		movs	r2, #2
 6343 0a98 83F83520 		strb	r2, [r3, #53]
 6344 0a9c 07F54773 		add	r3, r7, #796
 6345 0aa0 0122     		movs	r2, #1
 6346 0aa2 83F83620 		strb	r2, [r3, #54]
 6347 0aa6 07F54773 		add	r3, r7, #796
 6348 0aaa 0122     		movs	r2, #1
 6349 0aac 83F83720 		strb	r2, [r3, #55]
 6350 0ab0 07F54773 		add	r3, r7, #796
 6351 0ab4 0122     		movs	r2, #1
 6352 0ab6 83F83820 		strb	r2, [r3, #56]
 6353 0aba 07F54773 		add	r3, r7, #796
 6354 0abe 0122     		movs	r2, #1
 6355 0ac0 83F83920 		strb	r2, [r3, #57]
 6356 0ac4 07F54773 		add	r3, r7, #796
 6357 0ac8 0622     		movs	r2, #6
 6358 0aca 83F83A20 		strb	r2, [r3, #58]
 6359 0ace 07F54773 		add	r3, r7, #796
 6360 0ad2 0122     		movs	r2, #1
 6361 0ad4 83F83B20 		strb	r2, [r3, #59]
 6362 0ad8 07F54773 		add	r3, r7, #796
 6363 0adc 0122     		movs	r2, #1
 6364 0ade 83F83C20 		strb	r2, [r3, #60]
 6365 0ae2 07F54773 		add	r3, r7, #796
 6366 0ae6 0122     		movs	r2, #1
 6367 0ae8 83F83D20 		strb	r2, [r3, #61]
 6368 0aec 07F54773 		add	r3, r7, #796
 6369 0af0 0122     		movs	r2, #1
 6370 0af2 83F83E20 		strb	r2, [r3, #62]
 6371 0af6 07F54773 		add	r3, r7, #796
 6372 0afa 0322     		movs	r2, #3
 6373 0afc 83F83F20 		strb	r2, [r3, #63]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 157


 6374 0b00 07F54773 		add	r3, r7, #796
 6375 0b04 0322     		movs	r2, #3
 6376 0b06 83F84020 		strb	r2, [r3, #64]
 986:..\src/command_processing.c ****         1, 3, 3, 1, 
 987:..\src/command_processing.c ****         1, 1, 3, 3,
 988:..\src/command_processing.c ****         3, 1, 2, 2, 
 989:..\src/command_processing.c ****         1, 2, 1, 2,
 990:..\src/command_processing.c ****         2, 1, 1, 1, 
 991:..\src/command_processing.c ****         6, 3, 1, 1,
 992:..\src/command_processing.c ****         1, 1, 1, 1, 
 993:..\src/command_processing.c ****         1, 1, 1, 6,
 994:..\src/command_processing.c ****         1, 5, 1, 6,
 995:..\src/command_processing.c ****         
 996:..\src/command_processing.c ****         // GENERIC PARAMS
 997:..\src/command_processing.c ****         1, 1, 1, 1,
 998:..\src/command_processing.c ****         3, 3, 1, 3,
 999:..\src/command_processing.c ****         3, 1, 1, 1,
1000:..\src/command_processing.c ****         3, 3, 3, 1,
1001:..\src/command_processing.c ****         2, 2, 1, 1,
1002:..\src/command_processing.c ****         1, 1, 6, 1,
1003:..\src/command_processing.c ****         1, 1, 1, 3, 
1004:..\src/command_processing.c ****         3, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 1,
 6377              		.loc 1 1004 0
 6378 0b0a 5F4B     		ldr	r3, .L350+4
 6379 0b0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 985:..\src/command_processing.c ****         1, 3, 3, 1, 
 6380              		.loc 1 985 0
 6381 0b0e 07F54773 		add	r3, r7, #796
 6382 0b12 83F84120 		strb	r2, [r3, #65]
 6383              		.loc 1 1004 0
 6384 0b16 5C4B     		ldr	r3, .L350+4
 6385 0b18 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 985:..\src/command_processing.c ****         1, 3, 3, 1, 
 6386              		.loc 1 985 0
 6387 0b1a 07F54773 		add	r3, r7, #796
 6388 0b1e 83F84220 		strb	r2, [r3, #66]
 6389 0b22 07F54773 		add	r3, r7, #796
 6390 0b26 0122     		movs	r2, #1
 6391 0b28 83F84320 		strb	r2, [r3, #67]
 6392 0b2c 07F54773 		add	r3, r7, #796
 6393 0b30 0622     		movs	r2, #6
 6394 0b32 83F84420 		strb	r2, [r3, #68]
 6395 0b36 07F54773 		add	r3, r7, #796
 6396 0b3a 0622     		movs	r2, #6
 6397 0b3c 83F84520 		strb	r2, [r3, #69]
 6398 0b40 07F54773 		add	r3, r7, #796
 6399 0b44 0122     		movs	r2, #1
 6400 0b46 83F84620 		strb	r2, [r3, #70]
 6401 0b4a 07F54773 		add	r3, r7, #796
 6402 0b4e 0122     		movs	r2, #1
 6403 0b50 83F84720 		strb	r2, [r3, #71]
 6404 0b54 07F54773 		add	r3, r7, #796
 6405 0b58 0122     		movs	r2, #1
 6406 0b5a 83F84820 		strb	r2, [r3, #72]
 6407 0b5e 07F54773 		add	r3, r7, #796
 6408 0b62 0122     		movs	r2, #1
 6409 0b64 83F84920 		strb	r2, [r3, #73]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 158


 6410 0b68 07F54773 		add	r3, r7, #796
 6411 0b6c 0122     		movs	r2, #1
 6412 0b6e 83F84A20 		strb	r2, [r3, #74]
 6413 0b72 07F54773 		add	r3, r7, #796
 6414 0b76 0122     		movs	r2, #1
 6415 0b78 83F84B20 		strb	r2, [r3, #75]
 6416 0b7c 07F54773 		add	r3, r7, #796
 6417 0b80 0122     		movs	r2, #1
 6418 0b82 83F84C20 		strb	r2, [r3, #76]
 6419 0b86 07F54773 		add	r3, r7, #796
 6420 0b8a 0222     		movs	r2, #2
 6421 0b8c 83F84D20 		strb	r2, [r3, #77]
 6422 0b90 07F54773 		add	r3, r7, #796
 6423 0b94 0122     		movs	r2, #1
 6424 0b96 83F84E20 		strb	r2, [r3, #78]
1005:..\src/command_processing.c ****         6, 6, 1, 1,
1006:..\src/command_processing.c ****         1, 1, 1, 1,
1007:..\src/command_processing.c ****         1, 2, 1
1008:..\src/command_processing.c ****     };
1009:..\src/command_processing.c ****     
1010:..\src/command_processing.c ****     uint8 NUM_STRUCT[NUM_OF_PARAMS] = {     // see STRUCTURES INDEX in globals.h
 6425              		.loc 1 1010 0
 6426 0b9a 07F53373 		add	r3, r7, #716
 6427 0b9e 0022     		movs	r2, #0
 6428 0ba0 1A70     		strb	r2, [r3]
 6429 0ba2 97F80D35 		ldrb	r3, [r7, #1293]
 6430 0ba6 0A33     		adds	r3, r3, #10
 6431 0ba8 DAB2     		uxtb	r2, r3
 6432 0baa 07F53373 		add	r3, r7, #716
 6433 0bae 5A70     		strb	r2, [r3, #1]
 6434 0bb0 97F80D35 		ldrb	r3, [r7, #1293]
 6435 0bb4 0A33     		adds	r3, r3, #10
 6436 0bb6 DAB2     		uxtb	r2, r3
 6437 0bb8 07F53373 		add	r3, r7, #716
 6438 0bbc 9A70     		strb	r2, [r3, #2]
 6439 0bbe 97F80D35 		ldrb	r3, [r7, #1293]
 6440 0bc2 0A33     		adds	r3, r3, #10
 6441 0bc4 DAB2     		uxtb	r2, r3
 6442 0bc6 07F53373 		add	r3, r7, #716
 6443 0bca DA70     		strb	r2, [r3, #3]
 6444 0bcc 97F80D35 		ldrb	r3, [r7, #1293]
 6445 0bd0 0A33     		adds	r3, r3, #10
 6446 0bd2 DAB2     		uxtb	r2, r3
 6447 0bd4 07F53373 		add	r3, r7, #716
 6448 0bd8 1A71     		strb	r2, [r3, #4]
 6449 0bda 97F80D35 		ldrb	r3, [r7, #1293]
 6450 0bde 0A33     		adds	r3, r3, #10
 6451 0be0 DAB2     		uxtb	r2, r3
 6452 0be2 07F53373 		add	r3, r7, #716
 6453 0be6 5A71     		strb	r2, [r3, #5]
1011:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
1012:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), 
 6454              		.loc 1 1012 0
 6455 0be8 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6456 0bec D7F81015 		ldr	r1, [r7, #1296]
 6457 0bf0 1346     		mov	r3, r2
 6458 0bf2 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 159


 6459 0bf4 9B1A     		subs	r3, r3, r2
 6460 0bf6 1B01     		lsls	r3, r3, #4
 6461 0bf8 0B44     		add	r3, r3, r1
 6462 0bfa 03F58873 		add	r3, r3, #272
 6463 0bfe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6464              		.loc 1 1010 0
 6465 0c00 1433     		adds	r3, r3, #20
 6466 0c02 DAB2     		uxtb	r2, r3
 6467 0c04 07F53373 		add	r3, r7, #716
 6468 0c08 9A71     		strb	r2, [r3, #6]
 6469              		.loc 1 1012 0
 6470 0c0a 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6471 0c0e D7F81015 		ldr	r1, [r7, #1296]
 6472 0c12 1346     		mov	r3, r2
 6473 0c14 DB00     		lsls	r3, r3, #3
 6474 0c16 9B1A     		subs	r3, r3, r2
 6475 0c18 1B01     		lsls	r3, r3, #4
 6476 0c1a 0B44     		add	r3, r3, r1
 6477 0c1c 03F58873 		add	r3, r3, #272
 6478 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6479              		.loc 1 1010 0
 6480 0c22 1433     		adds	r3, r3, #20
 6481 0c24 DAB2     		uxtb	r2, r3
 6482 0c26 07F53373 		add	r3, r7, #716
 6483 0c2a DA71     		strb	r2, [r3, #7]
1013:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6484              		.loc 1 1013 0
 6485 0c2c 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6486 0c30 D7F81015 		ldr	r1, [r7, #1296]
 6487 0c34 1346     		mov	r3, r2
 6488 0c36 DB00     		lsls	r3, r3, #3
 6489 0c38 9B1A     		subs	r3, r3, r2
 6490 0c3a 1B01     		lsls	r3, r3, #4
 6491 0c3c 0B44     		add	r3, r3, r1
 6492 0c3e 03F58873 		add	r3, r3, #272
 6493 0c42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6494              		.loc 1 1010 0
 6495 0c44 1433     		adds	r3, r3, #20
 6496 0c46 DAB2     		uxtb	r2, r3
 6497 0c48 07F53373 		add	r3, r7, #716
 6498 0c4c 1A72     		strb	r2, [r3, #8]
 6499 0c4e 97F80D35 		ldrb	r3, [r7, #1293]
 6500 0c52 0A33     		adds	r3, r3, #10
 6501 0c54 DAB2     		uxtb	r2, r3
 6502 0c56 07F53373 		add	r3, r7, #716
 6503 0c5a 5A72     		strb	r2, [r3, #9]
 6504 0c5c 97F80D35 		ldrb	r3, [r7, #1293]
 6505 0c60 0A33     		adds	r3, r3, #10
 6506 0c62 DAB2     		uxtb	r2, r3
 6507 0c64 07F53373 		add	r3, r7, #716
 6508 0c68 9A72     		strb	r2, [r3, #10]
 6509 0c6a 97F80D35 		ldrb	r3, [r7, #1293]
 6510 0c6e 0A33     		adds	r3, r3, #10
 6511 0c70 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 160


 6512 0c72 07F53373 		add	r3, r7, #716
 6513 0c76 DA72     		strb	r2, [r3, #11]
 6514 0c78 97F80D35 		ldrb	r3, [r7, #1293]
 6515 0c7c 0A33     		adds	r3, r3, #10
 6516 0c7e DAB2     		uxtb	r2, r3
 6517 0c80 04E0     		b	.L351
 6518              	.L352:
 6519 0c82 00BF     		.align	2
 6520              	.L350:
 6521 0c84 90050000 		.word	.LC0
 6522 0c88 00000000 		.word	N_Encoder_Line_Connected
 6523              	.L351:
 6524 0c8c 07F53373 		add	r3, r7, #716
 6525 0c90 1A73     		strb	r2, [r3, #12]
 6526 0c92 07F53373 		add	r3, r7, #716
 6527 0c96 1E22     		movs	r2, #30
 6528 0c98 5A73     		strb	r2, [r3, #13]
 6529 0c9a 07F53373 		add	r3, r7, #716
 6530 0c9e 1E22     		movs	r2, #30
 6531 0ca0 9A73     		strb	r2, [r3, #14]
 6532 0ca2 07F53373 		add	r3, r7, #716
 6533 0ca6 1E22     		movs	r2, #30
 6534 0ca8 DA73     		strb	r2, [r3, #15]
 6535 0caa 07F53373 		add	r3, r7, #716
 6536 0cae 1E22     		movs	r2, #30
 6537 0cb0 1A74     		strb	r2, [r3, #16]
1014:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_EMG, ST_EMG, ST_EMG, 
1015:..\src/command_processing.c ****         ST_EMG, ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_I
 6538              		.loc 1 1015 0
 6539 0cb2 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6540 0cb6 D7F81015 		ldr	r1, [r7, #1296]
 6541 0cba 1346     		mov	r3, r2
 6542 0cbc DB00     		lsls	r3, r3, #3
 6543 0cbe 9B1A     		subs	r3, r3, r2
 6544 0cc0 1B01     		lsls	r3, r3, #4
 6545 0cc2 0B44     		add	r3, r3, r1
 6546 0cc4 03F58873 		add	r3, r3, #272
 6547 0cc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6548              		.loc 1 1010 0
 6549 0cca 1433     		adds	r3, r3, #20
 6550 0ccc DAB2     		uxtb	r2, r3
 6551 0cce 07F53373 		add	r3, r7, #716
 6552 0cd2 5A74     		strb	r2, [r3, #17]
 6553              		.loc 1 1015 0
 6554 0cd4 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6555 0cd8 D7F81015 		ldr	r1, [r7, #1296]
 6556 0cdc 1346     		mov	r3, r2
 6557 0cde DB00     		lsls	r3, r3, #3
 6558 0ce0 9B1A     		subs	r3, r3, r2
 6559 0ce2 1B01     		lsls	r3, r3, #4
 6560 0ce4 0B44     		add	r3, r3, r1
 6561 0ce6 03F58873 		add	r3, r3, #272
 6562 0cea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6563              		.loc 1 1010 0
 6564 0cec 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 161


 6565 0cee DAB2     		uxtb	r2, r3
 6566 0cf0 07F53373 		add	r3, r7, #716
 6567 0cf4 9A74     		strb	r2, [r3, #18]
 6568 0cf6 97F80D35 		ldrb	r3, [r7, #1293]
 6569 0cfa 0A33     		adds	r3, r3, #10
 6570 0cfc DAB2     		uxtb	r2, r3
 6571 0cfe 07F53373 		add	r3, r7, #716
 6572 0d02 DA74     		strb	r2, [r3, #19]
 6573 0d04 97F80D35 		ldrb	r3, [r7, #1293]
 6574 0d08 0A33     		adds	r3, r3, #10
 6575 0d0a DAB2     		uxtb	r2, r3
 6576 0d0c 07F53373 		add	r3, r7, #716
 6577 0d10 1A75     		strb	r2, [r3, #20]
 6578 0d12 07F53373 		add	r3, r7, #716
 6579 0d16 0022     		movs	r2, #0
 6580 0d18 5A75     		strb	r2, [r3, #21]
 6581 0d1a 07F53373 		add	r3, r7, #716
 6582 0d1e 4622     		movs	r2, #70
 6583 0d20 9A75     		strb	r2, [r3, #22]
 6584 0d22 07F53373 		add	r3, r7, #716
 6585 0d26 4622     		movs	r2, #70
 6586 0d28 DA75     		strb	r2, [r3, #23]
 6587 0d2a 07F53373 		add	r3, r7, #716
 6588 0d2e 4622     		movs	r2, #70
 6589 0d30 1A76     		strb	r2, [r3, #24]
 6590 0d32 07F53373 		add	r3, r7, #716
 6591 0d36 4622     		movs	r2, #70
 6592 0d38 5A76     		strb	r2, [r3, #25]
 6593 0d3a 07F53373 		add	r3, r7, #716
 6594 0d3e 1E22     		movs	r2, #30
 6595 0d40 9A76     		strb	r2, [r3, #26]
 6596 0d42 07F53373 		add	r3, r7, #716
 6597 0d46 0022     		movs	r2, #0
 6598 0d48 DA76     		strb	r2, [r3, #27]
 6599 0d4a 07F53373 		add	r3, r7, #716
 6600 0d4e 2822     		movs	r2, #40
 6601 0d50 1A77     		strb	r2, [r3, #28]
 6602 0d52 07F53373 		add	r3, r7, #716
 6603 0d56 3222     		movs	r2, #50
 6604 0d58 5A77     		strb	r2, [r3, #29]
 6605 0d5a 07F53373 		add	r3, r7, #716
 6606 0d5e 0022     		movs	r2, #0
 6607 0d60 9A77     		strb	r2, [r3, #30]
 6608 0d62 07F53373 		add	r3, r7, #716
 6609 0d66 3222     		movs	r2, #50
 6610 0d68 DA77     		strb	r2, [r3, #31]
 6611 0d6a 07F53373 		add	r3, r7, #716
 6612 0d6e 2822     		movs	r2, #40
 6613 0d70 83F82020 		strb	r2, [r3, #32]
 6614 0d74 07F53373 		add	r3, r7, #716
 6615 0d78 2822     		movs	r2, #40
 6616 0d7a 83F82120 		strb	r2, [r3, #33]
 6617 0d7e 07F53373 		add	r3, r7, #716
 6618 0d82 0022     		movs	r2, #0
 6619 0d84 83F82220 		strb	r2, [r3, #34]
1016:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_DEVICE, ST_SH_SPEC, ST_SH_SPEC,
1017:..\src/command_processing.c ****         ST_SH_SPEC, ST_SH_SPEC, ST_EMG, ST_DEVICE,
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 162


1018:..\src/command_processing.c ****         ST_IMU, ST_EXPANSION, ST_DEVICE, ST_EXPANSION,
1019:..\src/command_processing.c ****         ST_IMU, ST_IMU, ST_DEVICE, ST_USER+(MEM_P->dev.user_id),
 6620              		.loc 1 1019 0
 6621 0d88 D7F81035 		ldr	r3, [r7, #1296]
 6622 0d8c 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6623              		.loc 1 1010 0
 6624 0d90 3C33     		adds	r3, r3, #60
 6625 0d92 DAB2     		uxtb	r2, r3
 6626 0d94 07F53373 		add	r3, r7, #716
 6627 0d98 83F82320 		strb	r2, [r3, #35]
 6628 0d9c 97F80D35 		ldrb	r3, [r7, #1293]
 6629 0da0 0A33     		adds	r3, r3, #10
 6630 0da2 DAB2     		uxtb	r2, r3
 6631 0da4 07F53373 		add	r3, r7, #716
 6632 0da8 83F82420 		strb	r2, [r3, #36]
 6633 0dac 97F80D35 		ldrb	r3, [r7, #1293]
 6634 0db0 0A33     		adds	r3, r3, #10
 6635 0db2 DAB2     		uxtb	r2, r3
 6636 0db4 07F53373 		add	r3, r7, #716
 6637 0db8 83F82520 		strb	r2, [r3, #37]
 6638 0dbc 97F80D35 		ldrb	r3, [r7, #1293]
 6639 0dc0 0A33     		adds	r3, r3, #10
 6640 0dc2 DAB2     		uxtb	r2, r3
 6641 0dc4 07F53373 		add	r3, r7, #716
 6642 0dc8 83F82620 		strb	r2, [r3, #38]
 6643 0dcc 97F80D35 		ldrb	r3, [r7, #1293]
 6644 0dd0 0A33     		adds	r3, r3, #10
 6645 0dd2 DAB2     		uxtb	r2, r3
 6646 0dd4 07F53373 		add	r3, r7, #716
 6647 0dd8 83F82720 		strb	r2, [r3, #39]
1020:..\src/command_processing.c ****         
1021:..\src/command_processing.c ****         // GENERIC PARAMS
1022:..\src/command_processing.c ****         ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX,
1023:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[MOTOR_IDX].enco
 6648              		.loc 1 1023 0
 6649 0ddc 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6650 0de0 D7F81015 		ldr	r1, [r7, #1296]
 6651 0de4 1346     		mov	r3, r2
 6652 0de6 DB00     		lsls	r3, r3, #3
 6653 0de8 9B1A     		subs	r3, r3, r2
 6654 0dea 1B01     		lsls	r3, r3, #4
 6655 0dec 0B44     		add	r3, r3, r1
 6656 0dee 03F58873 		add	r3, r3, #272
 6657 0df2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6658              		.loc 1 1010 0
 6659 0df4 1433     		adds	r3, r3, #20
 6660 0df6 DAB2     		uxtb	r2, r3
 6661 0df8 07F53373 		add	r3, r7, #716
 6662 0dfc 83F82820 		strb	r2, [r3, #40]
 6663              		.loc 1 1023 0
 6664 0e00 97F80D25 		ldrb	r2, [r7, #1293]	@ zero_extendqisi2
 6665 0e04 D7F81015 		ldr	r1, [r7, #1296]
 6666 0e08 1346     		mov	r3, r2
 6667 0e0a DB00     		lsls	r3, r3, #3
 6668 0e0c 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 163


 6669 0e0e 1B01     		lsls	r3, r3, #4
 6670 0e10 0B44     		add	r3, r3, r1
 6671 0e12 03F58873 		add	r3, r3, #272
 6672 0e16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6673              		.loc 1 1010 0
 6674 0e18 1433     		adds	r3, r3, #20
 6675 0e1a DAB2     		uxtb	r2, r3
 6676 0e1c 07F53373 		add	r3, r7, #716
 6677 0e20 83F82920 		strb	r2, [r3, #41]
 6678 0e24 07F53373 		add	r3, r7, #716
 6679 0e28 0022     		movs	r2, #0
 6680 0e2a 83F82A20 		strb	r2, [r3, #42]
 6681 0e2e 97F80C35 		ldrb	r3, [r7, #1292]
 6682 0e32 0A33     		adds	r3, r3, #10
 6683 0e34 DAB2     		uxtb	r2, r3
 6684 0e36 07F53373 		add	r3, r7, #716
 6685 0e3a 83F82B20 		strb	r2, [r3, #43]
 6686 0e3e 97F80C35 		ldrb	r3, [r7, #1292]
 6687 0e42 0A33     		adds	r3, r3, #10
 6688 0e44 DAB2     		uxtb	r2, r3
 6689 0e46 07F53373 		add	r3, r7, #716
 6690 0e4a 83F82C20 		strb	r2, [r3, #44]
 6691 0e4e 97F80C35 		ldrb	r3, [r7, #1292]
 6692 0e52 0A33     		adds	r3, r3, #10
 6693 0e54 DAB2     		uxtb	r2, r3
 6694 0e56 07F53373 		add	r3, r7, #716
 6695 0e5a 83F82D20 		strb	r2, [r3, #45]
 6696 0e5e 97F80C35 		ldrb	r3, [r7, #1292]
 6697 0e62 0A33     		adds	r3, r3, #10
 6698 0e64 DAB2     		uxtb	r2, r3
 6699 0e66 07F53373 		add	r3, r7, #716
 6700 0e6a 83F82E20 		strb	r2, [r3, #46]
 6701 0e6e 97F80C35 		ldrb	r3, [r7, #1292]
 6702 0e72 0A33     		adds	r3, r3, #10
 6703 0e74 DAB2     		uxtb	r2, r3
 6704 0e76 07F53373 		add	r3, r7, #716
 6705 0e7a 83F82F20 		strb	r2, [r3, #47]
1024:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+S
1025:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+(MEM_P->motor[SECOND_M
 6706              		.loc 1 1025 0
 6707 0e7e 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6708 0e82 D7F81015 		ldr	r1, [r7, #1296]
 6709 0e86 1346     		mov	r3, r2
 6710 0e88 DB00     		lsls	r3, r3, #3
 6711 0e8a 9B1A     		subs	r3, r3, r2
 6712 0e8c 1B01     		lsls	r3, r3, #4
 6713 0e8e 0B44     		add	r3, r3, r1
 6714 0e90 03F58873 		add	r3, r3, #272
 6715 0e94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6716              		.loc 1 1010 0
 6717 0e96 1433     		adds	r3, r3, #20
 6718 0e98 DAB2     		uxtb	r2, r3
 6719 0e9a 07F53373 		add	r3, r7, #716
 6720 0e9e 83F83020 		strb	r2, [r3, #48]
 6721              		.loc 1 1025 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 164


 6722 0ea2 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6723 0ea6 D7F81015 		ldr	r1, [r7, #1296]
 6724 0eaa 1346     		mov	r3, r2
 6725 0eac DB00     		lsls	r3, r3, #3
 6726 0eae 9B1A     		subs	r3, r3, r2
 6727 0eb0 1B01     		lsls	r3, r3, #4
 6728 0eb2 0B44     		add	r3, r3, r1
 6729 0eb4 03F58873 		add	r3, r3, #272
 6730 0eb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6731              		.loc 1 1010 0
 6732 0eba 1433     		adds	r3, r3, #20
 6733 0ebc DAB2     		uxtb	r2, r3
 6734 0ebe 07F53373 		add	r3, r7, #716
 6735 0ec2 83F83120 		strb	r2, [r3, #49]
 6736              		.loc 1 1025 0
 6737 0ec6 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6738 0eca D7F81015 		ldr	r1, [r7, #1296]
 6739 0ece 1346     		mov	r3, r2
 6740 0ed0 DB00     		lsls	r3, r3, #3
 6741 0ed2 9B1A     		subs	r3, r3, r2
 6742 0ed4 1B01     		lsls	r3, r3, #4
 6743 0ed6 0B44     		add	r3, r3, r1
 6744 0ed8 03F58873 		add	r3, r3, #272
 6745 0edc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6746              		.loc 1 1010 0
 6747 0ede 1433     		adds	r3, r3, #20
 6748 0ee0 DAB2     		uxtb	r2, r3
 6749 0ee2 07F53373 		add	r3, r7, #716
 6750 0ee6 83F83220 		strb	r2, [r3, #50]
 6751 0eea 97F80C35 		ldrb	r3, [r7, #1292]
 6752 0eee 0A33     		adds	r3, r3, #10
 6753 0ef0 DAB2     		uxtb	r2, r3
 6754 0ef2 07F53373 		add	r3, r7, #716
 6755 0ef6 83F83320 		strb	r2, [r3, #51]
 6756 0efa 97F80C35 		ldrb	r3, [r7, #1292]
 6757 0efe 0A33     		adds	r3, r3, #10
 6758 0f00 DAB2     		uxtb	r2, r3
 6759 0f02 07F53373 		add	r3, r7, #716
 6760 0f06 83F83420 		strb	r2, [r3, #52]
 6761 0f0a 97F80C35 		ldrb	r3, [r7, #1292]
 6762 0f0e 0A33     		adds	r3, r3, #10
 6763 0f10 DAB2     		uxtb	r2, r3
 6764 0f12 07F53373 		add	r3, r7, #716
 6765 0f16 83F83520 		strb	r2, [r3, #53]
 6766 0f1a 97F80C35 		ldrb	r3, [r7, #1292]
 6767 0f1e 0A33     		adds	r3, r3, #10
 6768 0f20 DAB2     		uxtb	r2, r3
 6769 0f22 07F53373 		add	r3, r7, #716
 6770 0f26 83F83620 		strb	r2, [r3, #54]
1026:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6771              		.loc 1 1026 0
 6772 0f2a 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6773 0f2e D7F81015 		ldr	r1, [r7, #1296]
 6774 0f32 1346     		mov	r3, r2
 6775 0f34 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 165


 6776 0f36 9B1A     		subs	r3, r3, r2
 6777 0f38 1B01     		lsls	r3, r3, #4
 6778 0f3a 0B44     		add	r3, r3, r1
 6779 0f3c 03F58873 		add	r3, r3, #272
 6780 0f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6781              		.loc 1 1010 0
 6782 0f42 1433     		adds	r3, r3, #20
 6783 0f44 DAB2     		uxtb	r2, r3
 6784 0f46 07F53373 		add	r3, r7, #716
 6785 0f4a 83F83720 		strb	r2, [r3, #55]
1027:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_MOTOR+SECOND_MOTOR_IDX, ST_MOT
 6786              		.loc 1 1027 0
 6787 0f4e 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6788 0f52 D7F81015 		ldr	r1, [r7, #1296]
 6789 0f56 1346     		mov	r3, r2
 6790 0f58 DB00     		lsls	r3, r3, #3
 6791 0f5a 9B1A     		subs	r3, r3, r2
 6792 0f5c 1B01     		lsls	r3, r3, #4
 6793 0f5e 0B44     		add	r3, r3, r1
 6794 0f60 03F58873 		add	r3, r3, #272
 6795 0f64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6796              		.loc 1 1010 0
 6797 0f66 1433     		adds	r3, r3, #20
 6798 0f68 DAB2     		uxtb	r2, r3
 6799 0f6a 07F53373 		add	r3, r7, #716
 6800 0f6e 83F83820 		strb	r2, [r3, #56]
 6801 0f72 97F80C35 		ldrb	r3, [r7, #1292]
 6802 0f76 0A33     		adds	r3, r3, #10
 6803 0f78 DAB2     		uxtb	r2, r3
 6804 0f7a 07F53373 		add	r3, r7, #716
 6805 0f7e 83F83920 		strb	r2, [r3, #57]
 6806 0f82 97F80C35 		ldrb	r3, [r7, #1292]
 6807 0f86 0A33     		adds	r3, r3, #10
 6808 0f88 DAB2     		uxtb	r2, r3
 6809 0f8a 07F53373 		add	r3, r7, #716
 6810 0f8e 83F83A20 		strb	r2, [r3, #58]
 6811 0f92 97F80C35 		ldrb	r3, [r7, #1292]
 6812 0f96 0A33     		adds	r3, r3, #10
 6813 0f98 DAB2     		uxtb	r2, r3
 6814 0f9a 07F53373 		add	r3, r7, #716
 6815 0f9e 83F83B20 		strb	r2, [r3, #59]
 6816 0fa2 97F80C35 		ldrb	r3, [r7, #1292]
 6817 0fa6 0A33     		adds	r3, r3, #10
 6818 0fa8 DAB2     		uxtb	r2, r3
 6819 0faa 07F53373 		add	r3, r7, #716
 6820 0fae 83F83C20 		strb	r2, [r3, #60]
 6821 0fb2 97F80C35 		ldrb	r3, [r7, #1292]
 6822 0fb6 0A33     		adds	r3, r3, #10
 6823 0fb8 DAB2     		uxtb	r2, r3
 6824 0fba 07F53373 		add	r3, r7, #716
 6825 0fbe 83F83D20 		strb	r2, [r3, #61]
 6826 0fc2 97F80C35 		ldrb	r3, [r7, #1292]
 6827 0fc6 0A33     		adds	r3, r3, #10
 6828 0fc8 DAB2     		uxtb	r2, r3
 6829 0fca 07F53373 		add	r3, r7, #716
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 166


 6830 0fce 83F83E20 		strb	r2, [r3, #62]
1028:..\src/command_processing.c ****         ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_MOTOR+SECOND_MOTOR_IDX, ST_ENCODER
 6831              		.loc 1 1028 0
 6832 0fd2 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6833 0fd6 D7F81015 		ldr	r1, [r7, #1296]
 6834 0fda 1346     		mov	r3, r2
 6835 0fdc DB00     		lsls	r3, r3, #3
 6836 0fde 9B1A     		subs	r3, r3, r2
 6837 0fe0 1B01     		lsls	r3, r3, #4
 6838 0fe2 0B44     		add	r3, r3, r1
 6839 0fe4 03F58873 		add	r3, r3, #272
 6840 0fe8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6841              		.loc 1 1010 0
 6842 0fea 1433     		adds	r3, r3, #20
 6843 0fec DAB2     		uxtb	r2, r3
 6844 0fee 07F53373 		add	r3, r7, #716
 6845 0ff2 83F83F20 		strb	r2, [r3, #63]
1029:..\src/command_processing.c ****         ST_ENCODER+(MEM_P->motor[SECOND_MOTOR_IDX].encoder_line), ST_ENCODER+0, ST_ENCODER+1, ST_EX
 6846              		.loc 1 1029 0
 6847 0ff6 97F80C25 		ldrb	r2, [r7, #1292]	@ zero_extendqisi2
 6848 0ffa D7F81015 		ldr	r1, [r7, #1296]
 6849 0ffe 1346     		mov	r3, r2
 6850 1000 DB00     		lsls	r3, r3, #3
 6851 1002 9B1A     		subs	r3, r3, r2
 6852 1004 1B01     		lsls	r3, r3, #4
 6853 1006 0B44     		add	r3, r3, r1
 6854 1008 03F58873 		add	r3, r3, #272
 6855 100c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1010:..\src/command_processing.c ****         ST_DEVICE, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, ST_MOTOR+MOTOR_IDX, 
 6856              		.loc 1 1010 0
 6857 100e 1433     		adds	r3, r3, #20
 6858 1010 DAB2     		uxtb	r2, r3
 6859 1012 07F53373 		add	r3, r7, #716
 6860 1016 83F84020 		strb	r2, [r3, #64]
 6861 101a 07F53373 		add	r3, r7, #716
 6862 101e 1422     		movs	r2, #20
 6863 1020 83F84120 		strb	r2, [r3, #65]
 6864 1024 07F53373 		add	r3, r7, #716
 6865 1028 1522     		movs	r2, #21
 6866 102a 83F84220 		strb	r2, [r3, #66]
 6867 102e 07F53373 		add	r3, r7, #716
 6868 1032 3222     		movs	r2, #50
 6869 1034 83F84320 		strb	r2, [r3, #67]
 6870 1038 07F53373 		add	r3, r7, #716
 6871 103c 3222     		movs	r2, #50
 6872 103e 83F84420 		strb	r2, [r3, #68]
 6873 1042 07F53373 		add	r3, r7, #716
 6874 1046 3222     		movs	r2, #50
 6875 1048 83F84520 		strb	r2, [r3, #69]
 6876 104c 07F53373 		add	r3, r7, #716
 6877 1050 0022     		movs	r2, #0
 6878 1052 83F84620 		strb	r2, [r3, #70]
 6879 1056 07F53373 		add	r3, r7, #716
 6880 105a 5022     		movs	r2, #80
 6881 105c 83F84720 		strb	r2, [r3, #71]
 6882 1060 07F53373 		add	r3, r7, #716
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 167


 6883 1064 5022     		movs	r2, #80
 6884 1066 83F84820 		strb	r2, [r3, #72]
 6885 106a 07F53373 		add	r3, r7, #716
 6886 106e 5A22     		movs	r2, #90
 6887 1070 83F84920 		strb	r2, [r3, #73]
 6888 1074 07F53373 		add	r3, r7, #716
 6889 1078 5A22     		movs	r2, #90
 6890 107a 83F84A20 		strb	r2, [r3, #74]
 6891 107e 07F53373 		add	r3, r7, #716
 6892 1082 5A22     		movs	r2, #90
 6893 1084 83F84B20 		strb	r2, [r3, #75]
 6894 1088 07F53373 		add	r3, r7, #716
 6895 108c 6422     		movs	r2, #100
 6896 108e 83F84C20 		strb	r2, [r3, #76]
 6897 1092 07F53373 		add	r3, r7, #716
 6898 1096 6422     		movs	r2, #100
 6899 1098 83F84D20 		strb	r2, [r3, #77]
 6900 109c 07F53373 		add	r3, r7, #716
 6901 10a0 6422     		movs	r2, #100
 6902 10a2 83F84E20 		strb	r2, [r3, #78]
1030:..\src/command_processing.c ****         ST_EXPANSION, ST_EXPANSION, ST_DEVICE, ST_MS_SPEC, 
1031:..\src/command_processing.c ****         ST_MS_SPEC, ST_FB_SPEC, ST_FB_SPEC, ST_FB_SPEC,
1032:..\src/command_processing.c ****         ST_WR_SPEC, ST_WR_SPEC, ST_WR_SPEC
1033:..\src/command_processing.c ****     };
1034:..\src/command_processing.c ****     
1035:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 6903              		.loc 1 1035 0
 6904 10a6 07F5C873 		add	r3, r7, #400
 6905 10aa D14A     		ldr	r2, .L353
 6906 10ac 1846     		mov	r0, r3
 6907 10ae 1146     		mov	r1, r2
 6908 10b0 4FF49E73 		mov	r3, #316
 6909 10b4 1A46     		mov	r2, r3
 6910 10b6 FFF7FEFF 		bl	memcpy
1036:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
1037:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
1038:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
1039:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
1040:..\src/command_processing.c ****         "17 - EMG max speeds:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 
1041:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
1042:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
1043:..\src/command_processing.c ****         "29 - Enable IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checke
1044:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - User ID:", "36 
1045:..\src/command_processing.c ****         
1046:..\src/command_processing.c ****         // GENERIC PARAMS
1047:..\src/command_processing.c ****         "37 - Associated encoder line:", "38 - Driver type:", "39 - PWM rate limiter:", "40 - Not r
1048:..\src/command_processing.c ****         "41 - Enc idx used for control:", "42 - Gear params[N1, N2, I1]:", "43 - Use second motor:"
1049:..\src/command_processing.c ****         "45 - Current PID [P, I, D]:", "46 - Startup Activation:", "47 - Input mode:", "48 - Contro
1050:..\src/command_processing.c ****         "49 - Resolutions:", "50 - Measurement Offsets:", "51 - Multipliers:", "52 - Pos. limit act
1051:..\src/command_processing.c ****         "53 - Pos. limits [inf, sup]:", "54 - Max steps [neg, pos]:", "55 - Current limit:", "56 - 
1052:..\src/command_processing.c ****         "57 - Motor handle ratio:", "58 - PWM rescaling:", "59 - Current lookup:", "60 - Associated
1053:..\src/command_processing.c ****         "61 - Driver type:", "62 - PWM rate limiter:", "63 - Not reversible:", "64 - Enc idx used f
1054:..\src/command_processing.c ****         "65 - Gear params[N1, N2, I1]:", "66 - Read enc raw line 0:", "67 - Read enc raw line 1:", 
1055:..\src/command_processing.c ****         "69 - ADC channel [1-6]:", "70 - ADC channel [7-12]:", "71 - Device type:", "72 - Slave com
1056:..\src/command_processing.c ****         "73 - Slave ID:", "74 - Maximum slave residual current:", "75 - Maximum pressure feedback (
1057:..\src/command_processing.c ****         "77 - Wrist act. mode:", "78 - Fast act. thresholds:", "79 - Wrist direction:"
1058:..\src/command_processing.c ****     };
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 168


1059:..\src/command_processing.c **** 
1060:..\src/command_processing.c ****     //Parameters menu
1061:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 6911              		.loc 1 1061 0
 6912 10ba 07F58C73 		add	r3, r7, #280
 6913 10be 0022     		movs	r2, #0
 6914 10c0 1A60     		str	r2, [r3]
 6915 10c2 0433     		adds	r3, r3, #4
 6916 10c4 7222     		movs	r2, #114
 6917 10c6 0021     		movs	r1, #0
 6918 10c8 1846     		mov	r0, r3
 6919 10ca FFF7FEFF 		bl	memset
1062:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 6920              		.loc 1 1062 0
 6921 10ce 07F58C70 		add	r0, r7, #280
 6922 10d2 6423     		movs	r3, #100
 6923 10d4 0A22     		movs	r2, #10
 6924 10d6 C749     		ldr	r1, .L353+4
 6925 10d8 FFF7FEFF 		bl	sprintf
1063:..\src/command_processing.c **** 
1064:..\src/command_processing.c ****     const char* MENU_STR[NUM_OF_PARAMS_MENU] = {
 6926              		.loc 1 1064 0
 6927 10dc 07F1E803 		add	r3, r7, #232
 6928 10e0 C54A     		ldr	r2, .L353+8
 6929 10e2 1A60     		str	r2, [r3]
 6930 10e4 07F1E803 		add	r3, r7, #232
 6931 10e8 C44A     		ldr	r2, .L353+12
 6932 10ea 5A60     		str	r2, [r3, #4]
 6933 10ec 07F1E803 		add	r3, r7, #232
 6934 10f0 C34A     		ldr	r2, .L353+16
 6935 10f2 9A60     		str	r2, [r3, #8]
 6936 10f4 07F1E803 		add	r3, r7, #232
 6937 10f8 C24A     		ldr	r2, .L353+20
 6938 10fa DA60     		str	r2, [r3, #12]
 6939 10fc 07F1E803 		add	r3, r7, #232
 6940 1100 C14A     		ldr	r2, .L353+24
 6941 1102 1A61     		str	r2, [r3, #16]
 6942 1104 07F1E803 		add	r3, r7, #232
 6943 1108 C04A     		ldr	r2, .L353+28
 6944 110a 5A61     		str	r2, [r3, #20]
 6945 110c 07F1E803 		add	r3, r7, #232
 6946 1110 07F58C72 		add	r2, r7, #280
 6947 1114 9A61     		str	r2, [r3, #24]
 6948 1116 07F1E803 		add	r3, r7, #232
 6949 111a BD4A     		ldr	r2, .L353+32
 6950 111c DA61     		str	r2, [r3, #28]
 6951 111e 07F1E803 		add	r3, r7, #232
 6952 1122 BC4A     		ldr	r2, .L353+36
 6953 1124 1A62     		str	r2, [r3, #32]
 6954 1126 07F1E803 		add	r3, r7, #232
 6955 112a BB4A     		ldr	r2, .L353+40
 6956 112c 5A62     		str	r2, [r3, #36]
 6957 112e 07F1E803 		add	r3, r7, #232
 6958 1132 BA4A     		ldr	r2, .L353+44
 6959 1134 9A62     		str	r2, [r3, #40]
 6960 1136 07F1E803 		add	r3, r7, #232
 6961 113a B94A     		ldr	r2, .L353+48
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 169


 6962 113c DA62     		str	r2, [r3, #44]
1065:..\src/command_processing.c ****         "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integral\n4 -> EMG FCFS\n5 -> EMG F
1066:..\src/command_processing.c ****         "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Current\n",                      
1067:..\src/command_processing.c ****         "0 -> Deactivate [NO]\n1 -> Activate [YES]\n",                                             
1068:..\src/command_processing.c ****         "0 -> Right\n1 -> Left\n",                                                                 
1069:..\src/command_processing.c ****         "0 -> OFF\n1 -> ON\nThe board will reset\n",                                               
1070:..\src/command_processing.c ****         "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other [N/A]\nThe board will rese
1071:..\src/command_processing.c ****         spi_delay_menu,                                                                            
1072:..\src/command_processing.c ****         "0 -> Generic user\n1 -> Maria\n2 -> Roza\nThe board will reset\n",                        
1073:..\src/command_processing.c ****         "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nThe board will reset\n",              
1074:..\src/command_processing.c ****         "0 -> SOFTHAND PRO\n1 -> GENERIC 2 MOTORS\n2 -> AIR CHAMBERS\n3 -> OTTOBOCK WRIST\nThe boar
1075:..\src/command_processing.c ****         "0 -> Fast:wrist, Slow:hand\n1 -> Slow:wrist, Fast:hand\n",                                
1076:..\src/command_processing.c ****         "0 -> Close:CW, Open:CCW\n1 -> Close:CCW, Open:CW\n"                                       
1077:..\src/command_processing.c ****     };   
1078:..\src/command_processing.c ****     
1079:..\src/command_processing.c ****     uint8 NUM_MENU[31] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 8, 9, 3, 5, 3, 1, 2, 3, 3, 3, 9
 6963              		.loc 1 1079 0
 6964 113e 07F1C803 		add	r3, r7, #200
 6965 1142 B84A     		ldr	r2, .L353+52
 6966 1144 1C46     		mov	r4, r3
 6967 1146 1546     		mov	r5, r2
 6968 1148 2868     		ldr	r0, [r5]	@ unaligned
 6969 114a 6968     		ldr	r1, [r5, #4]	@ unaligned
 6970 114c AA68     		ldr	r2, [r5, #8]	@ unaligned
 6971 114e EB68     		ldr	r3, [r5, #12]	@ unaligned
 6972 1150 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 6973 1152 2869     		ldr	r0, [r5, #16]	@ unaligned
 6974 1154 6969     		ldr	r1, [r5, #20]	@ unaligned
 6975 1156 AA69     		ldr	r2, [r5, #24]	@ unaligned
 6976 1158 07C4     		stmia	r4!, {r0, r1, r2}
 6977 115a AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 6978 115c AA7F     		ldrb	r2, [r5, #30]
 6979 115e 2380     		strh	r3, [r4]	@ unaligned
 6980 1160 1346     		mov	r3, r2
 6981 1162 A370     		strb	r3, [r4, #2]
1080:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET_LIST[9]  = {2, 3, 8, 11, 23, 44, 45, 50, 53};
 6982              		.loc 1 1080 0
 6983 1164 07F1BC03 		add	r3, r7, #188
 6984 1168 AF4A     		ldr	r2, .L353+56
 6985 116a 1068     		ldr	r0, [r2]	@ unaligned
 6986 116c 5168     		ldr	r1, [r2, #4]	@ unaligned
 6987 116e 03C3     		stmia	r3!, {r0, r1}
 6988 1170 127A     		ldrb	r2, [r2, #8]
 6989 1172 1A70     		strb	r2, [r3]
1081:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET_LIST[18] = {2, 3, 5, 8, 11, 23, 24, 28, 31, 32, 38, 44, 45, 47, 50, 53, 
 6990              		.loc 1 1081 0
 6991 1174 07F1A803 		add	r3, r7, #168
 6992 1178 AC4A     		ldr	r2, .L353+60
 6993 117a 1C46     		mov	r4, r3
 6994 117c 1546     		mov	r5, r2
 6995 117e 2868     		ldr	r0, [r5]	@ unaligned
 6996 1180 6968     		ldr	r1, [r5, #4]	@ unaligned
 6997 1182 AA68     		ldr	r2, [r5, #8]	@ unaligned
 6998 1184 EB68     		ldr	r3, [r5, #12]	@ unaligned
 6999 1186 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 7000 1188 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 7001 118a 2380     		strh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 170


1082:..\src/command_processing.c ****     uint8 USER_ID_PARAM = 35;
 7002              		.loc 1 1082 0
 7003 118c 2323     		movs	r3, #35
 7004 118e 87F80B35 		strb	r3, [r7, #1291]
1083:..\src/command_processing.c **** 
1084:..\src/command_processing.c **** // Note: If a custom parameter change is needed, add to CUSTOM_PARAM_LIST, then change it
1085:..\src/command_processing.c **** // in the dedicated function set_custom_param()    
1086:..\src/command_processing.c ****     
1087:..\src/command_processing.c **** //------------------ END OF PARAMETERS VARIABLES --------------------//        
1088:..\src/command_processing.c **** 
1089:..\src/command_processing.c **** // DO NOT MODIFY THE FUNCTION UNDER THIS LINE
1090:..\src/command_processing.c ****     
1091:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_GET[NUM_OF_PARAMS];
1092:..\src/command_processing.c ****     j = 0;
 7005              		.loc 1 1092 0
 7006 1192 0023     		movs	r3, #0
 7007 1194 87F81635 		strb	r3, [r7, #1302]
1093:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7008              		.loc 1 1093 0
 7009 1198 0023     		movs	r3, #0
 7010 119a 87F81735 		strb	r3, [r7, #1303]
 7011 119e 21E0     		b	.L287
 7012              	.L290:
1094:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7013              		.loc 1 1094 0
 7014 11a0 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7015 11a4 07F1BC02 		add	r2, r7, #188
 7016 11a8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7017 11aa 1A46     		mov	r2, r3
 7018 11ac 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7019 11b0 0133     		adds	r3, r3, #1
 7020 11b2 9A42     		cmp	r2, r3
 7021 11b4 0BD1     		bne	.L288
1095:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = TRUE;
 7022              		.loc 1 1095 0
 7023 11b6 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7024 11ba 07F15802 		add	r2, r7, #88
 7025 11be 0121     		movs	r1, #1
 7026 11c0 D154     		strb	r1, [r2, r3]
1096:..\src/command_processing.c ****             j++;
 7027              		.loc 1 1096 0
 7028 11c2 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7029 11c6 0133     		adds	r3, r3, #1
 7030 11c8 87F81635 		strb	r3, [r7, #1302]
 7031 11cc 05E0     		b	.L289
 7032              	.L288:
1097:..\src/command_processing.c ****         }
1098:..\src/command_processing.c ****         else {
1099:..\src/command_processing.c ****             CUSTOM_PARAM_GET[i] = FALSE;
 7033              		.loc 1 1099 0
 7034 11ce 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7035 11d2 07F15802 		add	r2, r7, #88
 7036 11d6 0021     		movs	r1, #0
 7037 11d8 D154     		strb	r1, [r2, r3]
 7038              	.L289:
1093:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7039              		.loc 1 1093 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 171


 7040 11da 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7041 11de 0133     		adds	r3, r3, #1
 7042 11e0 87F81735 		strb	r3, [r7, #1303]
 7043              	.L287:
1093:..\src/command_processing.c ****         if (CUSTOM_PARAM_GET_LIST[j] == i+1) {
 7044              		.loc 1 1093 0 is_stmt 0 discriminator 1
 7045 11e4 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7046 11e8 4E2B     		cmp	r3, #78
 7047 11ea D9D9     		bls	.L290
1100:..\src/command_processing.c ****         }
1101:..\src/command_processing.c ****     }   // All parameters can be get with default settings, except the following ones
1102:..\src/command_processing.c ****     uint8 CUSTOM_PARAM_SET[NUM_OF_PARAMS];
1103:..\src/command_processing.c ****     j = 0;
 7048              		.loc 1 1103 0 is_stmt 1
 7049 11ec 0023     		movs	r3, #0
 7050 11ee 87F81635 		strb	r3, [r7, #1302]
1104:..\src/command_processing.c ****     for (i=0; i<NUM_OF_PARAMS; i++) {
 7051              		.loc 1 1104 0
 7052 11f2 0023     		movs	r3, #0
 7053 11f4 87F81735 		strb	r3, [r7, #1303]
 7054 11f8 21E0     		b	.L291
 7055              	.L294:
1105:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7056              		.loc 1 1105 0
 7057 11fa 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7058 11fe 07F1A802 		add	r2, r7, #168
 7059 1202 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7060 1204 1A46     		mov	r2, r3
 7061 1206 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7062 120a 0133     		adds	r3, r3, #1
 7063 120c 9A42     		cmp	r2, r3
 7064 120e 0BD1     		bne	.L292
1106:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = TRUE;
 7065              		.loc 1 1106 0
 7066 1210 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7067 1214 07F10802 		add	r2, r7, #8
 7068 1218 0121     		movs	r1, #1
 7069 121a D154     		strb	r1, [r2, r3]
1107:..\src/command_processing.c ****             j++;
 7070              		.loc 1 1107 0
 7071 121c 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7072 1220 0133     		adds	r3, r3, #1
 7073 1222 87F81635 		strb	r3, [r7, #1302]
 7074 1226 05E0     		b	.L293
 7075              	.L292:
1108:..\src/command_processing.c ****         }
1109:..\src/command_processing.c ****         else {
1110:..\src/command_processing.c ****             CUSTOM_PARAM_SET[i] = FALSE;
 7076              		.loc 1 1110 0
 7077 1228 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7078 122c 07F10802 		add	r2, r7, #8
 7079 1230 0021     		movs	r1, #0
 7080 1232 D154     		strb	r1, [r2, r3]
 7081              	.L293:
1104:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7082              		.loc 1 1104 0 discriminator 2
 7083 1234 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 172


 7084 1238 0133     		adds	r3, r3, #1
 7085 123a 87F81735 		strb	r3, [r7, #1303]
 7086              	.L291:
1104:..\src/command_processing.c ****         if (CUSTOM_PARAM_SET_LIST[j] == i+1) {
 7087              		.loc 1 1104 0 is_stmt 0 discriminator 1
 7088 123e 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7089 1242 4E2B     		cmp	r3, #78
 7090 1244 D9D9     		bls	.L294
1111:..\src/command_processing.c ****         }
1112:..\src/command_processing.c ****     }   // All parameters can be setted with default settings, except the following ones
1113:..\src/command_processing.c ****         
1114:..\src/command_processing.c ****     if (!index) {
 7091              		.loc 1 1114 0 is_stmt 1
 7092 1246 BB1D     		adds	r3, r7, #6
 7093 1248 1B88     		ldrh	r3, [r3]
 7094 124a 002B     		cmp	r3, #0
 7095 124c 17D1     		bne	.L295
1115:..\src/command_processing.c ****         // Get parameters list with relative types
1116:..\src/command_processing.c ****         get_param_list(VAR_P, TYPES, NUM_ITEMS, NUM_STRUCT, NUM_MENU, PARAMS_STR, CUSTOM_PARAM_GET,
 7096              		.loc 1 1116 0
 7097 124e 07F53374 		add	r4, r7, #716
 7098 1252 07F54772 		add	r2, r7, #796
 7099 1256 07F55B71 		add	r1, r7, #876
 7100 125a 07F56F70 		add	r0, r7, #956
 7101 125e 07F1E803 		add	r3, r7, #232
 7102 1262 0393     		str	r3, [sp, #12]
 7103 1264 07F15803 		add	r3, r7, #88
 7104 1268 0293     		str	r3, [sp, #8]
 7105 126a 07F5C873 		add	r3, r7, #400
 7106 126e 0193     		str	r3, [sp, #4]
 7107 1270 07F1C803 		add	r3, r7, #200
 7108 1274 0093     		str	r3, [sp]
 7109 1276 2346     		mov	r3, r4
 7110 1278 FFF7FEFF 		bl	get_param_list
1117:..\src/command_processing.c ****     }
1118:..\src/command_processing.c ****     else {
1119:..\src/command_processing.c ****         // Set specific parameter        
1120:..\src/command_processing.c ****         PARAM_IDX = index -1;       // Get right vector param index
1121:..\src/command_processing.c ****         
1122:..\src/command_processing.c ****         // Find size of data
1123:..\src/command_processing.c ****         switch (TYPES[PARAM_IDX]) {
1124:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
1125:..\src/command_processing.c ****                 sod = 1; break;
1126:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
1127:..\src/command_processing.c ****                 sod = 2; break;
1128:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
1129:..\src/command_processing.c ****                 sod = 4; break;
1130:..\src/command_processing.c ****         }   
1131:..\src/command_processing.c ****             
1132:..\src/command_processing.c ****         if (!CUSTOM_PARAM_SET[PARAM_IDX]) {
1133:..\src/command_processing.c ****             // Use default specifications for param setting
1134:..\src/command_processing.c ****             switch(TYPES[PARAM_IDX]) {
1135:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
1136:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1137:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1138:..\src/command_processing.c ****                     }
1139:..\src/command_processing.c ****                     break;                
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 173


1140:..\src/command_processing.c ****                 case TYPE_STRING:
1141:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1142:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
1143:..\src/command_processing.c ****                     }
1144:..\src/command_processing.c ****                     *(VAR_P[PARAM_IDX] + i*sod) = '\0';
1145:..\src/command_processing.c ****                 break; 
1146:..\src/command_processing.c ****                 case TYPE_INT8:
1147:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1148:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
1149:..\src/command_processing.c ****                     }
1150:..\src/command_processing.c ****                     break;                    
1151:..\src/command_processing.c ****                 case TYPE_INT16:
1152:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1153:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
1154:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1155:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
1156:..\src/command_processing.c ****                         }
1157:..\src/command_processing.c ****                     }                   
1158:..\src/command_processing.c ****                     break;
1159:..\src/command_processing.c ****                 case TYPE_UINT16:
1160:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1161:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
1162:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1163:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
1164:..\src/command_processing.c ****                         }
1165:..\src/command_processing.c ****                     }
1166:..\src/command_processing.c ****                     break;
1167:..\src/command_processing.c ****                 case TYPE_INT32:
1168:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1169:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
1170:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1171:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
1172:..\src/command_processing.c ****                         }
1173:..\src/command_processing.c ****                     }
1174:..\src/command_processing.c ****                     break;
1175:..\src/command_processing.c ****                 case TYPE_UINT32:
1176:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1177:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
1178:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1179:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
1180:..\src/command_processing.c ****                         }
1181:..\src/command_processing.c ****                     }
1182:..\src/command_processing.c ****                     break;
1183:..\src/command_processing.c ****                 case TYPE_FLOAT:
1184:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[PARAM_IDX]; i++){
1185:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
1186:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
1187:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
1188:..\src/command_processing.c ****                         }
1189:..\src/command_processing.c ****                     }
1190:..\src/command_processing.c ****                     break;
1191:..\src/command_processing.c ****                 default:
1192:..\src/command_processing.c ****                     break;
1193:..\src/command_processing.c ****             }
1194:..\src/command_processing.c ****         }
1195:..\src/command_processing.c ****         else {  
1196:..\src/command_processing.c ****             // Use custom specifications for param setting
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 174


1197:..\src/command_processing.c ****             set_custom_param(index);
1198:..\src/command_processing.c ****         }
1199:..\src/command_processing.c ****         
1200:..\src/command_processing.c ****         // Store param also in user_emg structure
1201:..\src/command_processing.c ****         if (index != USER_ID_PARAM) {        // Not when changing user id
1202:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
1203:..\src/command_processing.c ****         }
1204:..\src/command_processing.c ****         
1205:..\src/command_processing.c ****         // Perform chip reset if needed
1206:..\src/command_processing.c ****         if (TYPES[PARAM_IDX] == TYPE_FLAG){
1207:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
1208:..\src/command_processing.c ****             do {
1209:..\src/command_processing.c ****                 if (TYPES[idx] == TYPE_FLAG) menu_idx++;    // Increment idx to find the right NUM_
1210:..\src/command_processing.c ****                 idx++;
1211:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
1212:..\src/command_processing.c ****             
1213:..\src/command_processing.c ****             if (NUM_MENU[menu_idx] == 5 || NUM_MENU[menu_idx] == 6 || NUM_MENU[menu_idx] == 8 || NU
1214:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
1215:..\src/command_processing.c ****             }   
1216:..\src/command_processing.c ****         }
1217:..\src/command_processing.c ****     }
1218:..\src/command_processing.c **** } 
 7111              		.loc 1 1218 0
 7112 127c DEE2     		b	.L346
 7113              	.L295:
1120:..\src/command_processing.c ****         
 7114              		.loc 1 1120 0
 7115 127e BB1D     		adds	r3, r7, #6
 7116 1280 1B88     		ldrh	r3, [r3]	@ movhi
 7117 1282 DBB2     		uxtb	r3, r3
 7118 1284 013B     		subs	r3, r3, #1
 7119 1286 87F80A35 		strb	r3, [r7, #1290]
1123:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8: case TYPE_STRING:
 7120              		.loc 1 1123 0
 7121 128a 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7122 128e 07F55B72 		add	r2, r7, #876
 7123 1292 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7124 1294 092B     		cmp	r3, #9
 7125 1296 23D8     		bhi	.L297
 7126 1298 01A2     		adr	r2, .L299
 7127 129a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7128 129e 00BF     		.p2align 2
 7129              	.L299:
 7130 12a0 C9120000 		.word	.L298+1
 7131 12a4 C9120000 		.word	.L298+1
 7132 12a8 C9120000 		.word	.L298+1
 7133 12ac D1120000 		.word	.L300+1
 7134 12b0 D1120000 		.word	.L300+1
 7135 12b4 D9120000 		.word	.L301+1
 7136 12b8 D9120000 		.word	.L301+1
 7137 12bc D9120000 		.word	.L301+1
 7138 12c0 E1120000 		.word	.L297+1
 7139 12c4 C9120000 		.word	.L298+1
 7140              		.p2align 1
 7141              	.L298:
1125:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 7142              		.loc 1 1125 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 175


 7143 12c8 0123     		movs	r3, #1
 7144 12ca 87F81535 		strb	r3, [r7, #1301]
 7145 12ce 07E0     		b	.L297
 7146              	.L300:
1127:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 7147              		.loc 1 1127 0
 7148 12d0 0223     		movs	r3, #2
 7149 12d2 87F81535 		strb	r3, [r7, #1301]
 7150 12d6 03E0     		b	.L297
 7151              	.L301:
1129:..\src/command_processing.c ****         }   
 7152              		.loc 1 1129 0
 7153 12d8 0423     		movs	r3, #4
 7154 12da 87F81535 		strb	r3, [r7, #1301]
 7155 12de 00BF     		nop
 7156              	.L297:
1132:..\src/command_processing.c ****             // Use default specifications for param setting
 7157              		.loc 1 1132 0
 7158 12e0 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7159 12e4 07F10802 		add	r2, r7, #8
 7160 12e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7161 12ea 002B     		cmp	r3, #0
 7162 12ec 40F03A82 		bne	.L302
1134:..\src/command_processing.c ****                 case TYPE_FLAG: case TYPE_UINT8:
 7163              		.loc 1 1134 0
 7164 12f0 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7165 12f4 07F55B72 		add	r2, r7, #876
 7166 12f8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7167 12fa 092B     		cmp	r3, #9
 7168 12fc 00F23A82 		bhi	.L345
 7169 1300 01A2     		adr	r2, .L305
 7170 1302 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7171 1306 00BF     		.p2align 2
 7172              	.L305:
 7173 1308 31130000 		.word	.L304+1
 7174 130c E7130000 		.word	.L306+1
 7175 1310 31130000 		.word	.L304+1
 7176 1314 7F140000 		.word	.L307+1
 7177 1318 15150000 		.word	.L308+1
 7178 131c A9150000 		.word	.L309+1
 7179 1320 3D160000 		.word	.L310+1
 7180 1324 D1160000 		.word	.L311+1
 7181 1328 75170000 		.word	.L345+1
 7182 132c 7D130000 		.word	.L312+1
 7183              		.p2align 1
 7184              	.L304:
1136:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7185              		.loc 1 1136 0
 7186 1330 0023     		movs	r3, #0
 7187 1332 87F81735 		strb	r3, [r7, #1303]
 7188 1336 17E0     		b	.L313
 7189              	.L314:
1137:..\src/command_processing.c ****                     }
 7190              		.loc 1 1137 0 discriminator 3
 7191 1338 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7192 133c 07F56F73 		add	r3, r7, #956
 7193 1340 53F82230 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 176


 7194 1344 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7195 1348 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7196 134c 01FB02F2 		mul	r2, r1, r2
 7197 1350 1344     		add	r3, r3, r2
 7198 1352 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7199 1356 0332     		adds	r2, r2, #3
 7200 1358 3549     		ldr	r1, .L353+64
 7201 135a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7202 135c 1A70     		strb	r2, [r3]
1136:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7203              		.loc 1 1136 0 discriminator 3
 7204 135e 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7205 1362 0133     		adds	r3, r3, #1
 7206 1364 87F81735 		strb	r3, [r7, #1303]
 7207              	.L313:
1136:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7208              		.loc 1 1136 0 is_stmt 0 discriminator 1
 7209 1368 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7210 136c 07F54772 		add	r2, r7, #796
 7211 1370 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7212 1372 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7213 1376 9A42     		cmp	r2, r3
 7214 1378 DED3     		bcc	.L314
1139:..\src/command_processing.c ****                 case TYPE_STRING:
 7215              		.loc 1 1139 0 is_stmt 1
 7216 137a FCE1     		b	.L340
 7217              	.L312:
1141:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7218              		.loc 1 1141 0
 7219 137c 0023     		movs	r3, #0
 7220 137e 87F81735 		strb	r3, [r7, #1303]
 7221 1382 17E0     		b	.L316
 7222              	.L317:
1142:..\src/command_processing.c ****                     }
 7223              		.loc 1 1142 0 discriminator 3
 7224 1384 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7225 1388 07F56F73 		add	r3, r7, #956
 7226 138c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7227 1390 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7228 1394 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7229 1398 01FB02F2 		mul	r2, r1, r2
 7230 139c 1344     		add	r3, r3, r2
 7231 139e 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7232 13a2 0332     		adds	r2, r2, #3
 7233 13a4 2249     		ldr	r1, .L353+64
 7234 13a6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7235 13a8 1A70     		strb	r2, [r3]
1141:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7236              		.loc 1 1141 0 discriminator 3
 7237 13aa 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7238 13ae 0133     		adds	r3, r3, #1
 7239 13b0 87F81735 		strb	r3, [r7, #1303]
 7240              	.L316:
1141:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = g_rx.buffer[3+i];
 7241              		.loc 1 1141 0 is_stmt 0 discriminator 1
 7242 13b4 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7243 13b8 07F54772 		add	r2, r7, #796
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 177


 7244 13bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7245 13be 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7246 13c2 9A42     		cmp	r2, r3
 7247 13c4 DED3     		bcc	.L317
1144:..\src/command_processing.c ****                 break; 
 7248              		.loc 1 1144 0 is_stmt 1
 7249 13c6 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7250 13ca 07F56F73 		add	r3, r7, #956
 7251 13ce 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7252 13d2 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7253 13d6 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7254 13da 01FB02F2 		mul	r2, r1, r2
 7255 13de 1344     		add	r3, r3, r2
 7256 13e0 0022     		movs	r2, #0
 7257 13e2 1A70     		strb	r2, [r3]
1145:..\src/command_processing.c ****                 case TYPE_INT8:
 7258              		.loc 1 1145 0
 7259 13e4 C7E1     		b	.L340
 7260              	.L306:
1147:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7261              		.loc 1 1147 0
 7262 13e6 0023     		movs	r3, #0
 7263 13e8 87F81735 		strb	r3, [r7, #1303]
 7264 13ec 3DE0     		b	.L318
 7265              	.L354:
 7266 13ee 00BF     		.align	2
 7267              	.L353:
 7268 13f0 040E0000 		.word	.LC121
 7269 13f4 30020000 		.word	.LC122
 7270 13f8 A4020000 		.word	.LC123
 7271 13fc 30030000 		.word	.LC124
 7272 1400 70030000 		.word	.LC125
 7273 1404 9C030000 		.word	.LC126
 7274 1408 B4030000 		.word	.LC127
 7275 140c DC030000 		.word	.LC128
 7276 1410 38040000 		.word	.LC129
 7277 1414 78040000 		.word	.LC130
 7278 1418 C0040000 		.word	.LC131
 7279 141c 24050000 		.word	.LC132
 7280 1420 5C050000 		.word	.LC133
 7281 1424 400F0000 		.word	.LC81
 7282 1428 600F0000 		.word	.LC82
 7283 142c 6C0F0000 		.word	.LC83
 7284 1430 00000000 		.word	g_rx
 7285              	.L319:
1148:..\src/command_processing.c ****                     }
 7286              		.loc 1 1148 0 discriminator 3
 7287 1434 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7288 1438 07F56F73 		add	r3, r7, #956
 7289 143c 53F82230 		ldr	r3, [r3, r2, lsl #2]
 7290 1440 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7291 1444 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7292 1448 01FB02F2 		mul	r2, r1, r2
 7293 144c 1344     		add	r3, r3, r2
 7294 144e 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7295 1452 0332     		adds	r2, r2, #3
 7296 1454 C649     		ldr	r1, .L355
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 178


 7297 1456 0A44     		add	r2, r2, r1
 7298 1458 92F90020 		ldrsb	r2, [r2]
 7299 145c D2B2     		uxtb	r2, r2
 7300 145e 1A70     		strb	r2, [r3]
1147:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7301              		.loc 1 1147 0 discriminator 3
 7302 1460 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7303 1464 0133     		adds	r3, r3, #1
 7304 1466 87F81735 		strb	r3, [r7, #1303]
 7305              	.L318:
1147:..\src/command_processing.c ****                         *(VAR_P[PARAM_IDX] + i*sod) = *((int8*) &g_rx.buffer[3 + i]);
 7306              		.loc 1 1147 0 is_stmt 0 discriminator 1
 7307 146a 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7308 146e 07F54772 		add	r2, r7, #796
 7309 1472 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7310 1474 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7311 1478 9A42     		cmp	r2, r3
 7312 147a DBD3     		bcc	.L319
1150:..\src/command_processing.c ****                 case TYPE_INT16:
 7313              		.loc 1 1150 0 is_stmt 1
 7314 147c 7BE1     		b	.L340
 7315              	.L307:
1152:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7316              		.loc 1 1152 0
 7317 147e 0023     		movs	r3, #0
 7318 1480 87F81735 		strb	r3, [r7, #1303]
 7319 1484 3CE0     		b	.L320
 7320              	.L323:
1153:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7321              		.loc 1 1153 0
 7322 1486 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7323 148a 97F81525 		ldrb	r2, [r7, #1301]	@ zero_extendqisi2
 7324 148e 02FB03F3 		mul	r3, r2, r3
 7325 1492 0333     		adds	r3, r3, #3
 7326 1494 B64A     		ldr	r2, .L355
 7327 1496 1344     		add	r3, r3, r2
 7328 1498 B3F90030 		ldrsh	r3, [r3]
 7329 149c A7F80835 		strh	r3, [r7, #1288]	@ movhi
1154:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7330              		.loc 1 1154 0
 7331 14a0 0023     		movs	r3, #0
 7332 14a2 87F81635 		strb	r3, [r7, #1302]
 7333 14a6 20E0     		b	.L321
 7334              	.L322:
1155:..\src/command_processing.c ****                         }
 7335              		.loc 1 1155 0 discriminator 3
 7336 14a8 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7337 14ac 07F56F73 		add	r3, r7, #956
 7338 14b0 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7339 14b4 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7340 14b8 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7341 14bc 01FB03F3 		mul	r3, r1, r3
 7342 14c0 1846     		mov	r0, r3
 7343 14c2 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7344 14c6 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7345 14ca CB1A     		subs	r3, r1, r3
 7346 14cc 0344     		add	r3, r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 179


 7347 14ce 013B     		subs	r3, r3, #1
 7348 14d0 1344     		add	r3, r3, r2
 7349 14d2 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7350 14d6 07F5A161 		add	r1, r7, #1288
 7351 14da 0A44     		add	r2, r2, r1
 7352 14dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7353 14de 1A70     		strb	r2, [r3]
1154:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7354              		.loc 1 1154 0 discriminator 3
 7355 14e0 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7356 14e4 0133     		adds	r3, r3, #1
 7357 14e6 87F81635 		strb	r3, [r7, #1302]
 7358              	.L321:
1154:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int16))
 7359              		.loc 1 1154 0 is_stmt 0 discriminator 1
 7360 14ea 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7361 14ee 97F81535 		ldrb	r3, [r7, #1301]	@ zero_extendqisi2
 7362 14f2 9A42     		cmp	r2, r3
 7363 14f4 D8D3     		bcc	.L322
1152:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7364              		.loc 1 1152 0 is_stmt 1 discriminator 2
 7365 14f6 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7366 14fa 0133     		adds	r3, r3, #1
 7367 14fc 87F81735 		strb	r3, [r7, #1303]
 7368              	.L320:
1152:..\src/command_processing.c ****                         aux_int16 = *((int16 *) &g_rx.buffer[3 + i*sod]);
 7369              		.loc 1 1152 0 is_stmt 0 discriminator 1
 7370 1500 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7371 1504 07F54772 		add	r2, r7, #796
 7372 1508 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7373 150a 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7374 150e 9A42     		cmp	r2, r3
 7375 1510 B9D3     		bcc	.L323
1158:..\src/command_processing.c ****                 case TYPE_UINT16:
 7376              		.loc 1 1158 0 is_stmt 1
 7377 1512 30E1     		b	.L340
 7378              	.L308:
1160:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7379              		.loc 1 1160 0
 7380 1514 0023     		movs	r3, #0
 7381 1516 87F81735 		strb	r3, [r7, #1303]
 7382 151a 3BE0     		b	.L324
 7383              	.L327:
1161:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7384              		.loc 1 1161 0
 7385 151c 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7386 1520 97F81525 		ldrb	r2, [r7, #1301]	@ zero_extendqisi2
 7387 1524 02FB03F3 		mul	r3, r2, r3
 7388 1528 0333     		adds	r3, r3, #3
 7389 152a 914A     		ldr	r2, .L355
 7390 152c 1344     		add	r3, r3, r2
 7391 152e 1B88     		ldrh	r3, [r3]
 7392 1530 A7F80635 		strh	r3, [r7, #1286]	@ movhi
1162:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7393              		.loc 1 1162 0
 7394 1534 0023     		movs	r3, #0
 7395 1536 87F81635 		strb	r3, [r7, #1302]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 180


 7396 153a 20E0     		b	.L325
 7397              	.L326:
1163:..\src/command_processing.c ****                         }
 7398              		.loc 1 1163 0 discriminator 3
 7399 153c 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7400 1540 07F56F73 		add	r3, r7, #956
 7401 1544 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7402 1548 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7403 154c 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7404 1550 01FB03F3 		mul	r3, r1, r3
 7405 1554 1846     		mov	r0, r3
 7406 1556 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7407 155a 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7408 155e CB1A     		subs	r3, r1, r3
 7409 1560 0344     		add	r3, r3, r0
 7410 1562 013B     		subs	r3, r3, #1
 7411 1564 1344     		add	r3, r3, r2
 7412 1566 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7413 156a 07F20651 		addw	r1, r7, #1286
 7414 156e 0A44     		add	r2, r2, r1
 7415 1570 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7416 1572 1A70     		strb	r2, [r3]
1162:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7417              		.loc 1 1162 0 discriminator 3
 7418 1574 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7419 1578 0133     		adds	r3, r3, #1
 7420 157a 87F81635 		strb	r3, [r7, #1302]
 7421              	.L325:
1162:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint16)
 7422              		.loc 1 1162 0 is_stmt 0 discriminator 1
 7423 157e 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7424 1582 97F81535 		ldrb	r3, [r7, #1301]	@ zero_extendqisi2
 7425 1586 9A42     		cmp	r2, r3
 7426 1588 D8D3     		bcc	.L326
1160:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7427              		.loc 1 1160 0 is_stmt 1 discriminator 2
 7428 158a 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7429 158e 0133     		adds	r3, r3, #1
 7430 1590 87F81735 		strb	r3, [r7, #1303]
 7431              	.L324:
1160:..\src/command_processing.c ****                         aux_uint16 = *((uint16 *) &g_rx.buffer[3 + i*sod]);
 7432              		.loc 1 1160 0 is_stmt 0 discriminator 1
 7433 1594 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7434 1598 07F54772 		add	r2, r7, #796
 7435 159c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7436 159e 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7437 15a2 9A42     		cmp	r2, r3
 7438 15a4 BAD3     		bcc	.L327
1166:..\src/command_processing.c ****                 case TYPE_INT32:
 7439              		.loc 1 1166 0 is_stmt 1
 7440 15a6 E6E0     		b	.L340
 7441              	.L309:
1168:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7442              		.loc 1 1168 0
 7443 15a8 0023     		movs	r3, #0
 7444 15aa 87F81735 		strb	r3, [r7, #1303]
 7445 15ae 3BE0     		b	.L328
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 181


 7446              	.L331:
1169:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7447              		.loc 1 1169 0
 7448 15b0 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7449 15b4 97F81525 		ldrb	r2, [r7, #1301]	@ zero_extendqisi2
 7450 15b8 02FB03F3 		mul	r3, r2, r3
 7451 15bc 0333     		adds	r3, r3, #3
 7452 15be 6C4A     		ldr	r2, .L355
 7453 15c0 1344     		add	r3, r3, r2
 7454 15c2 1B68     		ldr	r3, [r3]
 7455 15c4 C7F80035 		str	r3, [r7, #1280]
1170:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7456              		.loc 1 1170 0
 7457 15c8 0023     		movs	r3, #0
 7458 15ca 87F81635 		strb	r3, [r7, #1302]
 7459 15ce 20E0     		b	.L329
 7460              	.L330:
1171:..\src/command_processing.c ****                         }
 7461              		.loc 1 1171 0 discriminator 3
 7462 15d0 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7463 15d4 07F56F73 		add	r3, r7, #956
 7464 15d8 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7465 15dc 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7466 15e0 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7467 15e4 01FB03F3 		mul	r3, r1, r3
 7468 15e8 1846     		mov	r0, r3
 7469 15ea 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7470 15ee 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7471 15f2 CB1A     		subs	r3, r1, r3
 7472 15f4 0344     		add	r3, r3, r0
 7473 15f6 013B     		subs	r3, r3, #1
 7474 15f8 1344     		add	r3, r3, r2
 7475 15fa 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7476 15fe 07F5A061 		add	r1, r7, #1280
 7477 1602 0A44     		add	r2, r2, r1
 7478 1604 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7479 1606 1A70     		strb	r2, [r3]
1170:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7480              		.loc 1 1170 0 discriminator 3
 7481 1608 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7482 160c 0133     		adds	r3, r3, #1
 7483 160e 87F81635 		strb	r3, [r7, #1302]
 7484              	.L329:
1170:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_int32))
 7485              		.loc 1 1170 0 is_stmt 0 discriminator 1
 7486 1612 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7487 1616 97F81535 		ldrb	r3, [r7, #1301]	@ zero_extendqisi2
 7488 161a 9A42     		cmp	r2, r3
 7489 161c D8D3     		bcc	.L330
1168:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7490              		.loc 1 1168 0 is_stmt 1 discriminator 2
 7491 161e 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7492 1622 0133     		adds	r3, r3, #1
 7493 1624 87F81735 		strb	r3, [r7, #1303]
 7494              	.L328:
1168:..\src/command_processing.c ****                         aux_int32 = *((int32 *) &g_rx.buffer[3 + i*sod]);
 7495              		.loc 1 1168 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 182


 7496 1628 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7497 162c 07F54772 		add	r2, r7, #796
 7498 1630 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7499 1632 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7500 1636 9A42     		cmp	r2, r3
 7501 1638 BAD3     		bcc	.L331
1174:..\src/command_processing.c ****                 case TYPE_UINT32:
 7502              		.loc 1 1174 0 is_stmt 1
 7503 163a 9CE0     		b	.L340
 7504              	.L310:
1176:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7505              		.loc 1 1176 0
 7506 163c 0023     		movs	r3, #0
 7507 163e 87F81735 		strb	r3, [r7, #1303]
 7508 1642 3BE0     		b	.L332
 7509              	.L335:
1177:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7510              		.loc 1 1177 0
 7511 1644 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7512 1648 97F81525 		ldrb	r2, [r7, #1301]	@ zero_extendqisi2
 7513 164c 02FB03F3 		mul	r3, r2, r3
 7514 1650 0333     		adds	r3, r3, #3
 7515 1652 474A     		ldr	r2, .L355
 7516 1654 1344     		add	r3, r3, r2
 7517 1656 1B68     		ldr	r3, [r3]
 7518 1658 C7F8FC34 		str	r3, [r7, #1276]
1178:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7519              		.loc 1 1178 0
 7520 165c 0023     		movs	r3, #0
 7521 165e 87F81635 		strb	r3, [r7, #1302]
 7522 1662 20E0     		b	.L333
 7523              	.L334:
1179:..\src/command_processing.c ****                         }
 7524              		.loc 1 1179 0 discriminator 3
 7525 1664 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7526 1668 07F56F73 		add	r3, r7, #956
 7527 166c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7528 1670 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7529 1674 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7530 1678 01FB03F3 		mul	r3, r1, r3
 7531 167c 1846     		mov	r0, r3
 7532 167e 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7533 1682 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7534 1686 CB1A     		subs	r3, r1, r3
 7535 1688 0344     		add	r3, r3, r0
 7536 168a 013B     		subs	r3, r3, #1
 7537 168c 1344     		add	r3, r3, r2
 7538 168e 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7539 1692 07F2FC41 		addw	r1, r7, #1276
 7540 1696 0A44     		add	r2, r2, r1
 7541 1698 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7542 169a 1A70     		strb	r2, [r3]
1178:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7543              		.loc 1 1178 0 discriminator 3
 7544 169c 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7545 16a0 0133     		adds	r3, r3, #1
 7546 16a2 87F81635 		strb	r3, [r7, #1302]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 183


 7547              	.L333:
1178:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_uint32)
 7548              		.loc 1 1178 0 is_stmt 0 discriminator 1
 7549 16a6 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7550 16aa 97F81535 		ldrb	r3, [r7, #1301]	@ zero_extendqisi2
 7551 16ae 9A42     		cmp	r2, r3
 7552 16b0 D8D3     		bcc	.L334
1176:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7553              		.loc 1 1176 0 is_stmt 1 discriminator 2
 7554 16b2 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7555 16b6 0133     		adds	r3, r3, #1
 7556 16b8 87F81735 		strb	r3, [r7, #1303]
 7557              	.L332:
1176:..\src/command_processing.c ****                         aux_uint32 = *((uint32 *) &g_rx.buffer[3 + i*sod]);
 7558              		.loc 1 1176 0 is_stmt 0 discriminator 1
 7559 16bc 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7560 16c0 07F54772 		add	r2, r7, #796
 7561 16c4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7562 16c6 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7563 16ca 9A42     		cmp	r2, r3
 7564 16cc BAD3     		bcc	.L335
1182:..\src/command_processing.c ****                 case TYPE_FLOAT:
 7565              		.loc 1 1182 0 is_stmt 1
 7566 16ce 52E0     		b	.L340
 7567              	.L311:
1184:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7568              		.loc 1 1184 0
 7569 16d0 0023     		movs	r3, #0
 7570 16d2 87F81735 		strb	r3, [r7, #1303]
 7571 16d6 3BE0     		b	.L336
 7572              	.L339:
1185:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 7573              		.loc 1 1185 0
 7574 16d8 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7575 16dc 97F81525 		ldrb	r2, [r7, #1301]	@ zero_extendqisi2
 7576 16e0 02FB03F3 		mul	r3, r2, r3
 7577 16e4 0333     		adds	r3, r3, #3
 7578 16e6 224A     		ldr	r2, .L355
 7579 16e8 1344     		add	r3, r3, r2
 7580 16ea 1B68     		ldr	r3, [r3]	@ float
 7581 16ec C7F8F834 		str	r3, [r7, #1272]	@ float
1186:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7582              		.loc 1 1186 0
 7583 16f0 0023     		movs	r3, #0
 7584 16f2 87F81635 		strb	r3, [r7, #1302]
 7585 16f6 20E0     		b	.L337
 7586              	.L338:
1187:..\src/command_processing.c ****                         }
 7587              		.loc 1 1187 0 discriminator 3
 7588 16f8 97F80A25 		ldrb	r2, [r7, #1290]	@ zero_extendqisi2
 7589 16fc 07F56F73 		add	r3, r7, #956
 7590 1700 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7591 1704 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7592 1708 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
 7593 170c 01FB03F3 		mul	r3, r1, r3
 7594 1710 1846     		mov	r0, r3
 7595 1712 97F81515 		ldrb	r1, [r7, #1301]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 184


 7596 1716 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7597 171a CB1A     		subs	r3, r1, r3
 7598 171c 0344     		add	r3, r3, r0
 7599 171e 013B     		subs	r3, r3, #1
 7600 1720 1344     		add	r3, r3, r2
 7601 1722 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7602 1726 07F59F61 		add	r1, r7, #1272
 7603 172a 0A44     		add	r2, r2, r1
 7604 172c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7605 172e 1A70     		strb	r2, [r3]
1186:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7606              		.loc 1 1186 0 discriminator 3
 7607 1730 97F81635 		ldrb	r3, [r7, #1302]	@ zero_extendqisi2
 7608 1734 0133     		adds	r3, r3, #1
 7609 1736 87F81635 		strb	r3, [r7, #1302]
 7610              	.L337:
1186:..\src/command_processing.c ****                             ((char*)(VAR_P[PARAM_IDX] + i*sod))[sod - j -1] = ((char*)(&aux_float))
 7611              		.loc 1 1186 0 is_stmt 0 discriminator 1
 7612 173a 97F81625 		ldrb	r2, [r7, #1302]	@ zero_extendqisi2
 7613 173e 97F81535 		ldrb	r3, [r7, #1301]	@ zero_extendqisi2
 7614 1742 9A42     		cmp	r2, r3
 7615 1744 D8D3     		bcc	.L338
1184:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7616              		.loc 1 1184 0 is_stmt 1 discriminator 2
 7617 1746 97F81735 		ldrb	r3, [r7, #1303]	@ zero_extendqisi2
 7618 174a 0133     		adds	r3, r3, #1
 7619 174c 87F81735 		strb	r3, [r7, #1303]
 7620              	.L336:
1184:..\src/command_processing.c ****                         aux_float = *((float *) &g_rx.buffer[3 + i*sod]);
 7621              		.loc 1 1184 0 is_stmt 0 discriminator 1
 7622 1750 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7623 1754 07F54772 		add	r2, r7, #796
 7624 1758 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7625 175a 97F81725 		ldrb	r2, [r7, #1303]	@ zero_extendqisi2
 7626 175e 9A42     		cmp	r2, r3
 7627 1760 BAD3     		bcc	.L339
1190:..\src/command_processing.c ****                 default:
 7628              		.loc 1 1190 0 is_stmt 1
 7629 1762 08E0     		b	.L340
 7630              	.L302:
1197:..\src/command_processing.c ****         }
 7631              		.loc 1 1197 0
 7632 1764 BB1D     		adds	r3, r7, #6
 7633 1766 1B88     		ldrh	r3, [r3]
 7634 1768 1846     		mov	r0, r3
 7635 176a FFF7FEFF 		bl	set_custom_param
 7636 176e 02E0     		b	.L340
 7637              	.L356:
 7638              		.align	2
 7639              	.L355:
 7640 1770 00000000 		.word	g_rx
 7641              	.L345:
1192:..\src/command_processing.c ****             }
 7642              		.loc 1 1192 0
 7643 1774 00BF     		nop
 7644              	.L340:
1201:..\src/command_processing.c ****             memcpy( &(MEM_P->user[MEM_P->dev.user_id].user_emg), &(MEM_P->emg), sizeof(MEM_P->emg) 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 185


 7645              		.loc 1 1201 0
 7646 1776 97F80B35 		ldrb	r3, [r7, #1291]	@ zero_extendqisi2
 7647 177a 9BB2     		uxth	r3, r3
 7648 177c BA1D     		adds	r2, r7, #6
 7649 177e 1288     		ldrh	r2, [r2]
 7650 1780 9A42     		cmp	r2, r3
 7651 1782 11D0     		beq	.L341
1202:..\src/command_processing.c ****         }
 7652              		.loc 1 1202 0
 7653 1784 D7F81035 		ldr	r3, [r7, #1296]
 7654 1788 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 7655 178c 5B01     		lsls	r3, r3, #5
 7656 178e 03F51273 		add	r3, r3, #584
 7657 1792 D7F81025 		ldr	r2, [r7, #1296]
 7658 1796 D018     		adds	r0, r2, r3
 7659 1798 D7F81035 		ldr	r3, [r7, #1296]
 7660 179c 03F5F873 		add	r3, r3, #496
 7661 17a0 1022     		movs	r2, #16
 7662 17a2 1946     		mov	r1, r3
 7663 17a4 FFF7FEFF 		bl	memcpy
 7664              	.L341:
1206:..\src/command_processing.c ****             uint8 idx = 0, menu_idx = -1;
 7665              		.loc 1 1206 0
 7666 17a8 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7667 17ac 07F55B72 		add	r2, r7, #876
 7668 17b0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7669 17b2 002B     		cmp	r3, #0
 7670 17b4 42D1     		bne	.L346
 7671              	.LBB14:
1207:..\src/command_processing.c ****             do {
 7672              		.loc 1 1207 0
 7673 17b6 0023     		movs	r3, #0
 7674 17b8 87F80F35 		strb	r3, [r7, #1295]
 7675 17bc FF23     		movs	r3, #255
 7676 17be 87F80E35 		strb	r3, [r7, #1294]
 7677              	.L343:
1209:..\src/command_processing.c ****                 idx++;
 7678              		.loc 1 1209 0
 7679 17c2 97F80F35 		ldrb	r3, [r7, #1295]	@ zero_extendqisi2
 7680 17c6 07F55B72 		add	r2, r7, #876
 7681 17ca D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7682 17cc 002B     		cmp	r3, #0
 7683 17ce 04D1     		bne	.L342
1209:..\src/command_processing.c ****                 idx++;
 7684              		.loc 1 1209 0 is_stmt 0 discriminator 1
 7685 17d0 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7686 17d4 0133     		adds	r3, r3, #1
 7687 17d6 87F80E35 		strb	r3, [r7, #1294]
 7688              	.L342:
1210:..\src/command_processing.c ****             } while (idx <= PARAM_IDX);
 7689              		.loc 1 1210 0 is_stmt 1
 7690 17da 97F80F35 		ldrb	r3, [r7, #1295]	@ zero_extendqisi2
 7691 17de 0133     		adds	r3, r3, #1
 7692 17e0 87F80F35 		strb	r3, [r7, #1295]
1211:..\src/command_processing.c ****             
 7693              		.loc 1 1211 0
 7694 17e4 97F80F25 		ldrb	r2, [r7, #1295]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 186


 7695 17e8 97F80A35 		ldrb	r3, [r7, #1290]	@ zero_extendqisi2
 7696 17ec 9A42     		cmp	r2, r3
 7697 17ee E8D9     		bls	.L343
1213:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7698              		.loc 1 1213 0
 7699 17f0 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7700 17f4 07F1C802 		add	r2, r7, #200
 7701 17f8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7702 17fa 052B     		cmp	r3, #5
 7703 17fc 1BD0     		beq	.L344
1213:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7704              		.loc 1 1213 0 is_stmt 0 discriminator 1
 7705 17fe 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7706 1802 07F1C802 		add	r2, r7, #200
 7707 1806 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7708 1808 062B     		cmp	r3, #6
 7709 180a 14D0     		beq	.L344
1213:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7710              		.loc 1 1213 0 discriminator 2
 7711 180c 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7712 1810 07F1C802 		add	r2, r7, #200
 7713 1814 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7714 1816 082B     		cmp	r3, #8
 7715 1818 0DD0     		beq	.L344
1213:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7716              		.loc 1 1213 0 discriminator 3
 7717 181a 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7718 181e 07F1C802 		add	r2, r7, #200
 7719 1822 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7720 1824 092B     		cmp	r3, #9
 7721 1826 06D0     		beq	.L344
1213:..\src/command_processing.c ****                 reset_PSoC_flag = TRUE;
 7722              		.loc 1 1213 0 discriminator 4
 7723 1828 97F80E35 		ldrb	r3, [r7, #1294]	@ zero_extendqisi2
 7724 182c 07F1C802 		add	r2, r7, #200
 7725 1830 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7726 1832 0A2B     		cmp	r3, #10
 7727 1834 02D1     		bne	.L346
 7728              	.L344:
1214:..\src/command_processing.c ****             }   
 7729              		.loc 1 1214 0 is_stmt 1
 7730 1836 044B     		ldr	r3, .L357
 7731 1838 0122     		movs	r2, #1
 7732 183a 1A70     		strb	r2, [r3]
 7733              	.L346:
 7734              	.LBE14:
 7735              		.loc 1 1218 0
 7736 183c 00BF     		nop
 7737 183e 07F5A367 		add	r7, r7, #1304
 7738              		.cfi_def_cfa_offset 16
 7739 1842 BD46     		mov	sp, r7
 7740              		.cfi_def_cfa_register 13
 7741              		@ sp needed
 7742 1844 B0BD     		pop	{r4, r5, r7, pc}
 7743              	.L358:
 7744 1846 00BF     		.align	2
 7745              	.L357:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 187


 7746 1848 00000000 		.word	reset_PSoC_flag
 7747              		.cfi_endproc
 7748              	.LFE68:
 7749              		.size	manage_param_list, .-manage_param_list
 7750              		.global	__aeabi_fmul
 7751              		.global	__aeabi_f2iz
 7752              		.section	.text.set_custom_param,"ax",%progbits
 7753              		.align	2
 7754              		.global	set_custom_param
 7755              		.thumb
 7756              		.thumb_func
 7757              		.type	set_custom_param, %function
 7758              	set_custom_param:
 7759              	.LFB69:
1219:..\src/command_processing.c **** 
1220:..\src/command_processing.c **** //==============================================================================
1221:..\src/command_processing.c **** //                                                              SET CUSTOM PARAM
1222:..\src/command_processing.c **** //==============================================================================
1223:..\src/command_processing.c **** 
1224:..\src/command_processing.c **** void set_custom_param(uint16 index) {
 7760              		.loc 1 1224 0
 7761              		.cfi_startproc
 7762              		@ args = 0, pretend = 0, frame = 24
 7763              		@ frame_needed = 1, uses_anonymous_args = 0
 7764 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 7765              		.cfi_def_cfa_offset 20
 7766              		.cfi_offset 4, -20
 7767              		.cfi_offset 5, -16
 7768              		.cfi_offset 6, -12
 7769              		.cfi_offset 7, -8
 7770              		.cfi_offset 14, -4
 7771 0002 87B0     		sub	sp, sp, #28
 7772              		.cfi_def_cfa_offset 48
 7773 0004 00AF     		add	r7, sp, #0
 7774              		.cfi_def_cfa_register 7
 7775 0006 0346     		mov	r3, r0
 7776 0008 FB80     		strh	r3, [r7, #6]	@ movhi
1225:..\src/command_processing.c **** 
1226:..\src/command_processing.c ****     uint8 CYDATA i, j;
1227:..\src/command_processing.c ****     uint8 aux_uchar;
1228:..\src/command_processing.c ****     float aux_float, aux_float2;
1229:..\src/command_processing.c **** 
1230:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 7777              		.loc 1 1230 0
 7778 000a 0023     		movs	r3, #0
 7779 000c 3B75     		strb	r3, [r7, #20]
1231:..\src/command_processing.c ****     uint8 SECOND_MOTOR_IDX = 1;
 7780              		.loc 1 1231 0
 7781 000e 0123     		movs	r3, #1
 7782 0010 FB74     		strb	r3, [r7, #19]
1232:..\src/command_processing.c ****     
1233:..\src/command_processing.c ****     switch(index){
 7783              		.loc 1 1233 0
 7784 0012 FB88     		ldrh	r3, [r7, #6]
 7785 0014 023B     		subs	r3, r3, #2
 7786 0016 452B     		cmp	r3, #69
 7787 0018 01F21E82 		bhi	.L452
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 188


 7788 001c 01A2     		adr	r2, .L362
 7789 001e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7790 0022 00BF     		.p2align 2
 7791              	.L362:
 7792 0024 3D010000 		.word	.L361+1
 7793 0028 6F030000 		.word	.L363+1
 7794 002c 59140000 		.word	.L452+1
 7795 0030 B5050000 		.word	.L364+1
 7796 0034 59140000 		.word	.L452+1
 7797 0038 59140000 		.word	.L452+1
 7798 003c FF050000 		.word	.L365+1
 7799 0040 59140000 		.word	.L452+1
 7800 0044 59140000 		.word	.L452+1
 7801 0048 35070000 		.word	.L366+1
 7802 004c 59140000 		.word	.L452+1
 7803 0050 59140000 		.word	.L452+1
 7804 0054 59140000 		.word	.L452+1
 7805 0058 59140000 		.word	.L452+1
 7806 005c 59140000 		.word	.L452+1
 7807 0060 59140000 		.word	.L452+1
 7808 0064 59140000 		.word	.L452+1
 7809 0068 59140000 		.word	.L452+1
 7810 006c 59140000 		.word	.L452+1
 7811 0070 59140000 		.word	.L452+1
 7812 0074 59140000 		.word	.L452+1
 7813 0078 35080000 		.word	.L367+1
 7814 007c 93080000 		.word	.L368+1
 7815 0080 59140000 		.word	.L452+1
 7816 0084 59140000 		.word	.L452+1
 7817 0088 59140000 		.word	.L452+1
 7818 008c CD080000 		.word	.L369+1
 7819 0090 59140000 		.word	.L452+1
 7820 0094 59140000 		.word	.L452+1
 7821 0098 490A0000 		.word	.L370+1
 7822 009c F50A0000 		.word	.L371+1
 7823 00a0 59140000 		.word	.L452+1
 7824 00a4 59140000 		.word	.L452+1
 7825 00a8 59140000 		.word	.L452+1
 7826 00ac 59140000 		.word	.L452+1
 7827 00b0 59140000 		.word	.L452+1
 7828 00b4 2F0B0000 		.word	.L372+1
 7829 00b8 59140000 		.word	.L452+1
 7830 00bc 59140000 		.word	.L452+1
 7831 00c0 59140000 		.word	.L452+1
 7832 00c4 59140000 		.word	.L452+1
 7833 00c8 59140000 		.word	.L452+1
 7834 00cc 690B0000 		.word	.L373+1
 7835 00d0 AF0D0000 		.word	.L374+1
 7836 00d4 59140000 		.word	.L452+1
 7837 00d8 DD0F0000 		.word	.L375+1
 7838 00dc 59140000 		.word	.L452+1
 7839 00e0 59140000 		.word	.L452+1
 7840 00e4 45100000 		.word	.L376+1
 7841 00e8 59140000 		.word	.L452+1
 7842 00ec 59140000 		.word	.L452+1
 7843 00f0 59110000 		.word	.L377+1
 7844 00f4 59140000 		.word	.L452+1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 189


 7845 00f8 59140000 		.word	.L452+1
 7846 00fc 59140000 		.word	.L452+1
 7847 0100 59140000 		.word	.L452+1
 7848 0104 59140000 		.word	.L452+1
 7849 0108 59140000 		.word	.L452+1
 7850 010c 59140000 		.word	.L452+1
 7851 0110 57120000 		.word	.L378+1
 7852 0114 59140000 		.word	.L452+1
 7853 0118 59140000 		.word	.L452+1
 7854 011c 59140000 		.word	.L452+1
 7855 0120 59140000 		.word	.L452+1
 7856 0124 59140000 		.word	.L452+1
 7857 0128 59140000 		.word	.L452+1
 7858 012c 59140000 		.word	.L452+1
 7859 0130 59140000 		.word	.L452+1
 7860 0134 59140000 		.word	.L452+1
 7861 0138 A1120000 		.word	.L379+1
 7862              		.p2align 1
 7863              	.L361:
1234:..\src/command_processing.c ****         case 2:         // Position PID
1235:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 7864              		.loc 1 1235 0
 7865 013c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 7866 013e AB49     		ldr	r1, .L458
 7867 0140 1346     		mov	r3, r2
 7868 0142 DB00     		lsls	r3, r3, #3
 7869 0144 9B1A     		subs	r3, r3, r2
 7870 0146 1B01     		lsls	r3, r3, #4
 7871 0148 0B44     		add	r3, r3, r1
 7872 014a 03F20F13 		addw	r3, r3, #271
 7873 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7874 0150 032B     		cmp	r3, #3
 7875 0152 00F08680 		beq	.L380
1236:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 7876              		.loc 1 1236 0
 7877 0156 A64B     		ldr	r3, .L458+4
 7878 0158 1B68     		ldr	r3, [r3]	@ float
 7879 015a FB60     		str	r3, [r7, #12]	@ float
1237:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7880              		.loc 1 1237 0
 7881 015c 0023     		movs	r3, #0
 7882 015e BB75     		strb	r3, [r7, #22]
 7883 0160 0EE0     		b	.L381
 7884              	.L382:
1238:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7885              		.loc 1 1238 0 discriminator 3
 7886 0162 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7887 0164 C3F10303 		rsb	r3, r3, #3
 7888 0168 07F10802 		add	r2, r7, #8
 7889 016c 1344     		add	r3, r3, r2
 7890 016e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7891 0170 07F10C01 		add	r1, r7, #12
 7892 0174 0A44     		add	r2, r2, r1
 7893 0176 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7894 0178 1A70     		strb	r2, [r3]
1237:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7895              		.loc 1 1237 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 190


 7896 017a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7897 017c 0133     		adds	r3, r3, #1
 7898 017e BB75     		strb	r3, [r7, #22]
 7899              	.L381:
1237:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7900              		.loc 1 1237 0 is_stmt 0 discriminator 1
 7901 0180 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7902 0182 032B     		cmp	r3, #3
 7903 0184 EDD9     		bls	.L382
1239:..\src/command_processing.c ****                 }
1240:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p = aux_float2 * 65536;
 7904              		.loc 1 1240 0 is_stmt 1
 7905 0186 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7906 0188 BB68     		ldr	r3, [r7, #8]	@ float
 7907 018a 4FF08F41 		mov	r1, #1199570944
 7908 018e 1846     		mov	r0, r3
 7909 0190 FFF7FEFF 		bl	__aeabi_fmul
 7910 0194 0346     		mov	r3, r0
 7911 0196 1846     		mov	r0, r3
 7912 0198 FFF7FEFF 		bl	__aeabi_f2iz
 7913 019c 0146     		mov	r1, r0
 7914 019e 954A     		ldr	r2, .L458+8
 7915 01a0 2346     		mov	r3, r4
 7916 01a2 DB00     		lsls	r3, r3, #3
 7917 01a4 1B1B     		subs	r3, r3, r4
 7918 01a6 1B01     		lsls	r3, r3, #4
 7919 01a8 1344     		add	r3, r3, r2
 7920 01aa B033     		adds	r3, r3, #176
 7921 01ac 1960     		str	r1, [r3]
1241:..\src/command_processing.c ****                 
1242:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 7922              		.loc 1 1242 0
 7923 01ae 924B     		ldr	r3, .L458+12
 7924 01b0 1B68     		ldr	r3, [r3]	@ float
 7925 01b2 FB60     		str	r3, [r7, #12]	@ float
1243:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7926              		.loc 1 1243 0
 7927 01b4 0023     		movs	r3, #0
 7928 01b6 BB75     		strb	r3, [r7, #22]
 7929 01b8 0EE0     		b	.L383
 7930              	.L384:
1244:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7931              		.loc 1 1244 0 discriminator 3
 7932 01ba BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7933 01bc C3F10303 		rsb	r3, r3, #3
 7934 01c0 07F10802 		add	r2, r7, #8
 7935 01c4 1344     		add	r3, r3, r2
 7936 01c6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7937 01c8 07F10C01 		add	r1, r7, #12
 7938 01cc 0A44     		add	r2, r2, r1
 7939 01ce 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7940 01d0 1A70     		strb	r2, [r3]
1243:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7941              		.loc 1 1243 0 discriminator 3
 7942 01d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7943 01d4 0133     		adds	r3, r3, #1
 7944 01d6 BB75     		strb	r3, [r7, #22]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 191


 7945              	.L383:
1243:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7946              		.loc 1 1243 0 is_stmt 0 discriminator 1
 7947 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7948 01da 032B     		cmp	r3, #3
 7949 01dc EDD9     		bls	.L384
1245:..\src/command_processing.c ****                 }
1246:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i = aux_float2 * 65536;
 7950              		.loc 1 1246 0 is_stmt 1
 7951 01de 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7952 01e0 BB68     		ldr	r3, [r7, #8]	@ float
 7953 01e2 4FF08F41 		mov	r1, #1199570944
 7954 01e6 1846     		mov	r0, r3
 7955 01e8 FFF7FEFF 		bl	__aeabi_fmul
 7956 01ec 0346     		mov	r3, r0
 7957 01ee 1846     		mov	r0, r3
 7958 01f0 FFF7FEFF 		bl	__aeabi_f2iz
 7959 01f4 0146     		mov	r1, r0
 7960 01f6 7F4A     		ldr	r2, .L458+8
 7961 01f8 2346     		mov	r3, r4
 7962 01fa DB00     		lsls	r3, r3, #3
 7963 01fc 1B1B     		subs	r3, r3, r4
 7964 01fe 1B01     		lsls	r3, r3, #4
 7965 0200 1344     		add	r3, r3, r2
 7966 0202 B433     		adds	r3, r3, #180
 7967 0204 1960     		str	r1, [r3]
1247:..\src/command_processing.c ****                 
1248:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 7968              		.loc 1 1248 0
 7969 0206 7D4B     		ldr	r3, .L458+16
 7970 0208 1B68     		ldr	r3, [r3]	@ float
 7971 020a FB60     		str	r3, [r7, #12]	@ float
1249:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7972              		.loc 1 1249 0
 7973 020c 0023     		movs	r3, #0
 7974 020e BB75     		strb	r3, [r7, #22]
 7975 0210 0EE0     		b	.L385
 7976              	.L386:
1250:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 7977              		.loc 1 1250 0 discriminator 3
 7978 0212 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7979 0214 C3F10303 		rsb	r3, r3, #3
 7980 0218 07F10802 		add	r2, r7, #8
 7981 021c 1344     		add	r3, r3, r2
 7982 021e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 7983 0220 07F10C01 		add	r1, r7, #12
 7984 0224 0A44     		add	r2, r2, r1
 7985 0226 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7986 0228 1A70     		strb	r2, [r3]
1249:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7987              		.loc 1 1249 0 discriminator 3
 7988 022a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7989 022c 0133     		adds	r3, r3, #1
 7990 022e BB75     		strb	r3, [r7, #22]
 7991              	.L385:
1249:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 7992              		.loc 1 1249 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 192


 7993 0230 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7994 0232 032B     		cmp	r3, #3
 7995 0234 EDD9     		bls	.L386
1251:..\src/command_processing.c ****                 }
1252:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d = aux_float2 * 65536;
 7996              		.loc 1 1252 0 is_stmt 1
 7997 0236 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 7998 0238 BB68     		ldr	r3, [r7, #8]	@ float
 7999 023a 4FF08F41 		mov	r1, #1199570944
 8000 023e 1846     		mov	r0, r3
 8001 0240 FFF7FEFF 		bl	__aeabi_fmul
 8002 0244 0346     		mov	r3, r0
 8003 0246 1846     		mov	r0, r3
 8004 0248 FFF7FEFF 		bl	__aeabi_f2iz
 8005 024c 0146     		mov	r1, r0
 8006 024e 694A     		ldr	r2, .L458+8
 8007 0250 2346     		mov	r3, r4
 8008 0252 DB00     		lsls	r3, r3, #3
 8009 0254 1B1B     		subs	r3, r3, r4
 8010 0256 1B01     		lsls	r3, r3, #4
 8011 0258 1344     		add	r3, r3, r2
 8012 025a B833     		adds	r3, r3, #184
 8013 025c 1960     		str	r1, [r3]
1253:..\src/command_processing.c ****             }
1254:..\src/command_processing.c ****             else {
1255:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1256:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1257:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1258:..\src/command_processing.c ****                 }
1259:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1260:..\src/command_processing.c ****                 
1261:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1262:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1263:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1264:..\src/command_processing.c ****                 }
1265:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1266:..\src/command_processing.c ****                 
1267:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1268:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1269:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1270:..\src/command_processing.c ****                 }
1271:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1272:..\src/command_processing.c ****             }
1273:..\src/command_processing.c ****             break;
 8014              		.loc 1 1273 0
 8015 025e 01F006B9 		b	.L394
 8016              	.L380:
1255:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8017              		.loc 1 1255 0
 8018 0262 634B     		ldr	r3, .L458+4
 8019 0264 1B68     		ldr	r3, [r3]	@ float
 8020 0266 FB60     		str	r3, [r7, #12]	@ float
1256:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8021              		.loc 1 1256 0
 8022 0268 0023     		movs	r3, #0
 8023 026a BB75     		strb	r3, [r7, #22]
 8024 026c 0EE0     		b	.L388
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 193


 8025              	.L389:
1257:..\src/command_processing.c ****                 }
 8026              		.loc 1 1257 0 discriminator 3
 8027 026e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8028 0270 C3F10303 		rsb	r3, r3, #3
 8029 0274 07F10802 		add	r2, r7, #8
 8030 0278 1344     		add	r3, r3, r2
 8031 027a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8032 027c 07F10C01 		add	r1, r7, #12
 8033 0280 0A44     		add	r2, r2, r1
 8034 0282 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8035 0284 1A70     		strb	r2, [r3]
1256:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8036              		.loc 1 1256 0 discriminator 3
 8037 0286 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8038 0288 0133     		adds	r3, r3, #1
 8039 028a BB75     		strb	r3, [r7, #22]
 8040              	.L388:
1256:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8041              		.loc 1 1256 0 is_stmt 0 discriminator 1
 8042 028c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8043 028e 032B     		cmp	r3, #3
 8044 0290 EDD9     		bls	.L389
1259:..\src/command_processing.c ****                 
 8045              		.loc 1 1259 0 is_stmt 1
 8046 0292 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8047 0294 BB68     		ldr	r3, [r7, #8]	@ float
 8048 0296 4FF08F41 		mov	r1, #1199570944
 8049 029a 1846     		mov	r0, r3
 8050 029c FFF7FEFF 		bl	__aeabi_fmul
 8051 02a0 0346     		mov	r3, r0
 8052 02a2 1846     		mov	r0, r3
 8053 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 8054 02a8 0146     		mov	r1, r0
 8055 02aa 524A     		ldr	r2, .L458+8
 8056 02ac 2346     		mov	r3, r4
 8057 02ae DB00     		lsls	r3, r3, #3
 8058 02b0 1B1B     		subs	r3, r3, r4
 8059 02b2 1B01     		lsls	r3, r3, #4
 8060 02b4 1344     		add	r3, r3, r2
 8061 02b6 C833     		adds	r3, r3, #200
 8062 02b8 1960     		str	r1, [r3]
1261:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8063              		.loc 1 1261 0
 8064 02ba 4F4B     		ldr	r3, .L458+12
 8065 02bc 1B68     		ldr	r3, [r3]	@ float
 8066 02be FB60     		str	r3, [r7, #12]	@ float
1262:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8067              		.loc 1 1262 0
 8068 02c0 0023     		movs	r3, #0
 8069 02c2 BB75     		strb	r3, [r7, #22]
 8070 02c4 0EE0     		b	.L390
 8071              	.L391:
1263:..\src/command_processing.c ****                 }
 8072              		.loc 1 1263 0 discriminator 3
 8073 02c6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8074 02c8 C3F10303 		rsb	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 194


 8075 02cc 07F10802 		add	r2, r7, #8
 8076 02d0 1344     		add	r3, r3, r2
 8077 02d2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8078 02d4 07F10C01 		add	r1, r7, #12
 8079 02d8 0A44     		add	r2, r2, r1
 8080 02da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8081 02dc 1A70     		strb	r2, [r3]
1262:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8082              		.loc 1 1262 0 discriminator 3
 8083 02de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8084 02e0 0133     		adds	r3, r3, #1
 8085 02e2 BB75     		strb	r3, [r7, #22]
 8086              	.L390:
1262:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8087              		.loc 1 1262 0 is_stmt 0 discriminator 1
 8088 02e4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8089 02e6 032B     		cmp	r3, #3
 8090 02e8 EDD9     		bls	.L391
1265:..\src/command_processing.c ****                 
 8091              		.loc 1 1265 0 is_stmt 1
 8092 02ea 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8093 02ec BB68     		ldr	r3, [r7, #8]	@ float
 8094 02ee 4FF08F41 		mov	r1, #1199570944
 8095 02f2 1846     		mov	r0, r3
 8096 02f4 FFF7FEFF 		bl	__aeabi_fmul
 8097 02f8 0346     		mov	r3, r0
 8098 02fa 1846     		mov	r0, r3
 8099 02fc FFF7FEFF 		bl	__aeabi_f2iz
 8100 0300 0146     		mov	r1, r0
 8101 0302 3C4A     		ldr	r2, .L458+8
 8102 0304 2346     		mov	r3, r4
 8103 0306 DB00     		lsls	r3, r3, #3
 8104 0308 1B1B     		subs	r3, r3, r4
 8105 030a 1B01     		lsls	r3, r3, #4
 8106 030c 1344     		add	r3, r3, r2
 8107 030e CC33     		adds	r3, r3, #204
 8108 0310 1960     		str	r1, [r3]
1267:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8109              		.loc 1 1267 0
 8110 0312 3A4B     		ldr	r3, .L458+16
 8111 0314 1B68     		ldr	r3, [r3]	@ float
 8112 0316 FB60     		str	r3, [r7, #12]	@ float
1268:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8113              		.loc 1 1268 0
 8114 0318 0023     		movs	r3, #0
 8115 031a BB75     		strb	r3, [r7, #22]
 8116 031c 0EE0     		b	.L392
 8117              	.L393:
1269:..\src/command_processing.c ****                 }
 8118              		.loc 1 1269 0 discriminator 3
 8119 031e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8120 0320 C3F10303 		rsb	r3, r3, #3
 8121 0324 07F10802 		add	r2, r7, #8
 8122 0328 1344     		add	r3, r3, r2
 8123 032a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8124 032c 07F10C01 		add	r1, r7, #12
 8125 0330 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 195


 8126 0332 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8127 0334 1A70     		strb	r2, [r3]
1268:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8128              		.loc 1 1268 0 discriminator 3
 8129 0336 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8130 0338 0133     		adds	r3, r3, #1
 8131 033a BB75     		strb	r3, [r7, #22]
 8132              	.L392:
1268:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8133              		.loc 1 1268 0 is_stmt 0 discriminator 1
 8134 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8135 033e 032B     		cmp	r3, #3
 8136 0340 EDD9     		bls	.L393
1271:..\src/command_processing.c ****             }
 8137              		.loc 1 1271 0 is_stmt 1
 8138 0342 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8139 0344 BB68     		ldr	r3, [r7, #8]	@ float
 8140 0346 4FF08F41 		mov	r1, #1199570944
 8141 034a 1846     		mov	r0, r3
 8142 034c FFF7FEFF 		bl	__aeabi_fmul
 8143 0350 0346     		mov	r3, r0
 8144 0352 1846     		mov	r0, r3
 8145 0354 FFF7FEFF 		bl	__aeabi_f2iz
 8146 0358 0146     		mov	r1, r0
 8147 035a 264A     		ldr	r2, .L458+8
 8148 035c 2346     		mov	r3, r4
 8149 035e DB00     		lsls	r3, r3, #3
 8150 0360 1B1B     		subs	r3, r3, r4
 8151 0362 1B01     		lsls	r3, r3, #4
 8152 0364 1344     		add	r3, r3, r2
 8153 0366 D033     		adds	r3, r3, #208
 8154 0368 1960     		str	r1, [r3]
 8155              		.loc 1 1273 0
 8156 036a 01F080B8 		b	.L394
 8157              	.L363:
1274:..\src/command_processing.c ****             
1275:..\src/command_processing.c ****         case 3:         //Current PID
1276:..\src/command_processing.c ****             if(c_mem.motor[MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 8158              		.loc 1 1276 0
 8159 036e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8160 0370 1E49     		ldr	r1, .L458
 8161 0372 1346     		mov	r3, r2
 8162 0374 DB00     		lsls	r3, r3, #3
 8163 0376 9B1A     		subs	r3, r3, r2
 8164 0378 1B01     		lsls	r3, r3, #4
 8165 037a 0B44     		add	r3, r3, r1
 8166 037c 03F20F13 		addw	r3, r3, #271
 8167 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8168 0382 032B     		cmp	r3, #3
 8169 0384 00F09080 		beq	.L395
1277:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 8170              		.loc 1 1277 0
 8171 0388 194B     		ldr	r3, .L458+4
 8172 038a 1B68     		ldr	r3, [r3]	@ float
 8173 038c FB60     		str	r3, [r7, #12]	@ float
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8174              		.loc 1 1278 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 196


 8175 038e 0023     		movs	r3, #0
 8176 0390 BB75     		strb	r3, [r7, #22]
 8177 0392 0EE0     		b	.L396
 8178              	.L397:
1279:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8179              		.loc 1 1279 0 discriminator 3
 8180 0394 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8181 0396 C3F10303 		rsb	r3, r3, #3
 8182 039a 07F10802 		add	r2, r7, #8
 8183 039e 1344     		add	r3, r3, r2
 8184 03a0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8185 03a2 07F10C01 		add	r1, r7, #12
 8186 03a6 0A44     		add	r2, r2, r1
 8187 03a8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8188 03aa 1A70     		strb	r2, [r3]
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8189              		.loc 1 1278 0 discriminator 3
 8190 03ac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8191 03ae 0133     		adds	r3, r3, #1
 8192 03b0 BB75     		strb	r3, [r7, #22]
 8193              	.L396:
1278:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8194              		.loc 1 1278 0 is_stmt 0 discriminator 1
 8195 03b2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8196 03b4 032B     		cmp	r3, #3
 8197 03b6 EDD9     		bls	.L397
1280:..\src/command_processing.c ****                 }
1281:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c = aux_float2 * 65536;
 8198              		.loc 1 1281 0 is_stmt 1
 8199 03b8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8200 03ba BB68     		ldr	r3, [r7, #8]	@ float
 8201 03bc 4FF08F41 		mov	r1, #1199570944
 8202 03c0 1846     		mov	r0, r3
 8203 03c2 FFF7FEFF 		bl	__aeabi_fmul
 8204 03c6 0346     		mov	r3, r0
 8205 03c8 1846     		mov	r0, r3
 8206 03ca FFF7FEFF 		bl	__aeabi_f2iz
 8207 03ce 0146     		mov	r1, r0
 8208 03d0 084A     		ldr	r2, .L458+8
 8209 03d2 2346     		mov	r3, r4
 8210 03d4 DB00     		lsls	r3, r3, #3
 8211 03d6 1B1B     		subs	r3, r3, r4
 8212 03d8 1B01     		lsls	r3, r3, #4
 8213 03da 1344     		add	r3, r3, r2
 8214 03dc BC33     		adds	r3, r3, #188
 8215 03de 1960     		str	r1, [r3]
1282:..\src/command_processing.c ****                 
1283:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 8216              		.loc 1 1283 0
 8217 03e0 054B     		ldr	r3, .L458+12
 8218 03e2 1B68     		ldr	r3, [r3]	@ float
 8219 03e4 FB60     		str	r3, [r7, #12]	@ float
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8220              		.loc 1 1284 0
 8221 03e6 0023     		movs	r3, #0
 8222 03e8 BB75     		strb	r3, [r7, #22]
 8223 03ea 18E0     		b	.L398
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 197


 8224              	.L459:
 8225              		.align	2
 8226              	.L458:
 8227 03ec 00000000 		.word	c_mem
 8228 03f0 03000000 		.word	g_rx+3
 8229 03f4 00000000 		.word	g_mem
 8230 03f8 07000000 		.word	g_rx+7
 8231 03fc 0B000000 		.word	g_rx+11
 8232              	.L399:
1285:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8233              		.loc 1 1285 0 discriminator 3
 8234 0400 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8235 0402 C3F10303 		rsb	r3, r3, #3
 8236 0406 07F10802 		add	r2, r7, #8
 8237 040a 1344     		add	r3, r3, r2
 8238 040c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8239 040e 07F10C01 		add	r1, r7, #12
 8240 0412 0A44     		add	r2, r2, r1
 8241 0414 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8242 0416 1A70     		strb	r2, [r3]
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8243              		.loc 1 1284 0 discriminator 3
 8244 0418 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8245 041a 0133     		adds	r3, r3, #1
 8246 041c BB75     		strb	r3, [r7, #22]
 8247              	.L398:
1284:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8248              		.loc 1 1284 0 is_stmt 0 discriminator 1
 8249 041e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8250 0420 032B     		cmp	r3, #3
 8251 0422 EDD9     		bls	.L399
1286:..\src/command_processing.c ****                 }
1287:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c = aux_float2 * 65536;
 8252              		.loc 1 1287 0 is_stmt 1
 8253 0424 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8254 0426 BB68     		ldr	r3, [r7, #8]	@ float
 8255 0428 4FF08F41 		mov	r1, #1199570944
 8256 042c 1846     		mov	r0, r3
 8257 042e FFF7FEFF 		bl	__aeabi_fmul
 8258 0432 0346     		mov	r3, r0
 8259 0434 1846     		mov	r0, r3
 8260 0436 FFF7FEFF 		bl	__aeabi_f2iz
 8261 043a 0146     		mov	r1, r0
 8262 043c B54A     		ldr	r2, .L460
 8263 043e 2346     		mov	r3, r4
 8264 0440 DB00     		lsls	r3, r3, #3
 8265 0442 1B1B     		subs	r3, r3, r4
 8266 0444 1B01     		lsls	r3, r3, #4
 8267 0446 1344     		add	r3, r3, r2
 8268 0448 C033     		adds	r3, r3, #192
 8269 044a 1960     		str	r1, [r3]
1288:..\src/command_processing.c ****                 
1289:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 8270              		.loc 1 1289 0
 8271 044c B24B     		ldr	r3, .L460+4
 8272 044e 1B68     		ldr	r3, [r3]	@ float
 8273 0450 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 198


1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8274              		.loc 1 1290 0
 8275 0452 0023     		movs	r3, #0
 8276 0454 BB75     		strb	r3, [r7, #22]
 8277 0456 0EE0     		b	.L400
 8278              	.L401:
1291:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8279              		.loc 1 1291 0 discriminator 3
 8280 0458 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8281 045a C3F10303 		rsb	r3, r3, #3
 8282 045e 07F10802 		add	r2, r7, #8
 8283 0462 1344     		add	r3, r3, r2
 8284 0464 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8285 0466 07F10C01 		add	r1, r7, #12
 8286 046a 0A44     		add	r2, r2, r1
 8287 046c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8288 046e 1A70     		strb	r2, [r3]
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8289              		.loc 1 1290 0 discriminator 3
 8290 0470 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8291 0472 0133     		adds	r3, r3, #1
 8292 0474 BB75     		strb	r3, [r7, #22]
 8293              	.L400:
1290:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8294              		.loc 1 1290 0 is_stmt 0 discriminator 1
 8295 0476 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8296 0478 032B     		cmp	r3, #3
 8297 047a EDD9     		bls	.L401
1292:..\src/command_processing.c ****                 }
1293:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c = aux_float2 * 65536;
 8298              		.loc 1 1293 0 is_stmt 1
 8299 047c 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8300 047e BB68     		ldr	r3, [r7, #8]	@ float
 8301 0480 4FF08F41 		mov	r1, #1199570944
 8302 0484 1846     		mov	r0, r3
 8303 0486 FFF7FEFF 		bl	__aeabi_fmul
 8304 048a 0346     		mov	r3, r0
 8305 048c 1846     		mov	r0, r3
 8306 048e FFF7FEFF 		bl	__aeabi_f2iz
 8307 0492 0146     		mov	r1, r0
 8308 0494 9F4A     		ldr	r2, .L460
 8309 0496 2346     		mov	r3, r4
 8310 0498 DB00     		lsls	r3, r3, #3
 8311 049a 1B1B     		subs	r3, r3, r4
 8312 049c 1B01     		lsls	r3, r3, #4
 8313 049e 1344     		add	r3, r3, r2
 8314 04a0 C433     		adds	r3, r3, #196
 8315 04a2 1960     		str	r1, [r3]
1294:..\src/command_processing.c ****             }
1295:..\src/command_processing.c ****             else {
1296:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1297:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1298:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1299:..\src/command_processing.c ****                 }
1300:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1301:..\src/command_processing.c ****                 
1302:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 199


1303:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1304:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1305:..\src/command_processing.c ****                 }
1306:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1307:..\src/command_processing.c ****                 
1308:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1309:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1310:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1311:..\src/command_processing.c ****                 }
1312:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1313:..\src/command_processing.c ****             }            
1314:..\src/command_processing.c ****             break;  
 8316              		.loc 1 1314 0
 8317 04a4 00F0E3BF 		b	.L394
 8318              	.L395:
1296:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8319              		.loc 1 1296 0
 8320 04a8 9C4B     		ldr	r3, .L460+8
 8321 04aa 1B68     		ldr	r3, [r3]	@ float
 8322 04ac FB60     		str	r3, [r7, #12]	@ float
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8323              		.loc 1 1297 0
 8324 04ae 0023     		movs	r3, #0
 8325 04b0 BB75     		strb	r3, [r7, #22]
 8326 04b2 0EE0     		b	.L403
 8327              	.L404:
1298:..\src/command_processing.c ****                 }
 8328              		.loc 1 1298 0 discriminator 3
 8329 04b4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8330 04b6 C3F10303 		rsb	r3, r3, #3
 8331 04ba 07F10802 		add	r2, r7, #8
 8332 04be 1344     		add	r3, r3, r2
 8333 04c0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8334 04c2 07F10C01 		add	r1, r7, #12
 8335 04c6 0A44     		add	r2, r2, r1
 8336 04c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8337 04ca 1A70     		strb	r2, [r3]
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8338              		.loc 1 1297 0 discriminator 3
 8339 04cc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8340 04ce 0133     		adds	r3, r3, #1
 8341 04d0 BB75     		strb	r3, [r7, #22]
 8342              	.L403:
1297:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8343              		.loc 1 1297 0 is_stmt 0 discriminator 1
 8344 04d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8345 04d4 032B     		cmp	r3, #3
 8346 04d6 EDD9     		bls	.L404
1300:..\src/command_processing.c ****                 
 8347              		.loc 1 1300 0 is_stmt 1
 8348 04d8 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8349 04da BB68     		ldr	r3, [r7, #8]	@ float
 8350 04dc 4FF08F41 		mov	r1, #1199570944
 8351 04e0 1846     		mov	r0, r3
 8352 04e2 FFF7FEFF 		bl	__aeabi_fmul
 8353 04e6 0346     		mov	r3, r0
 8354 04e8 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 200


 8355 04ea FFF7FEFF 		bl	__aeabi_f2iz
 8356 04ee 0146     		mov	r1, r0
 8357 04f0 884A     		ldr	r2, .L460
 8358 04f2 2346     		mov	r3, r4
 8359 04f4 DB00     		lsls	r3, r3, #3
 8360 04f6 1B1B     		subs	r3, r3, r4
 8361 04f8 1B01     		lsls	r3, r3, #4
 8362 04fa 1344     		add	r3, r3, r2
 8363 04fc D433     		adds	r3, r3, #212
 8364 04fe 1960     		str	r1, [r3]
1302:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8365              		.loc 1 1302 0
 8366 0500 874B     		ldr	r3, .L460+12
 8367 0502 1B68     		ldr	r3, [r3]	@ float
 8368 0504 FB60     		str	r3, [r7, #12]	@ float
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8369              		.loc 1 1303 0
 8370 0506 0023     		movs	r3, #0
 8371 0508 BB75     		strb	r3, [r7, #22]
 8372 050a 0EE0     		b	.L405
 8373              	.L406:
1304:..\src/command_processing.c ****                 }
 8374              		.loc 1 1304 0 discriminator 3
 8375 050c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8376 050e C3F10303 		rsb	r3, r3, #3
 8377 0512 07F10802 		add	r2, r7, #8
 8378 0516 1344     		add	r3, r3, r2
 8379 0518 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8380 051a 07F10C01 		add	r1, r7, #12
 8381 051e 0A44     		add	r2, r2, r1
 8382 0520 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8383 0522 1A70     		strb	r2, [r3]
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8384              		.loc 1 1303 0 discriminator 3
 8385 0524 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8386 0526 0133     		adds	r3, r3, #1
 8387 0528 BB75     		strb	r3, [r7, #22]
 8388              	.L405:
1303:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8389              		.loc 1 1303 0 is_stmt 0 discriminator 1
 8390 052a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8391 052c 032B     		cmp	r3, #3
 8392 052e EDD9     		bls	.L406
1306:..\src/command_processing.c ****                 
 8393              		.loc 1 1306 0 is_stmt 1
 8394 0530 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8395 0532 BB68     		ldr	r3, [r7, #8]	@ float
 8396 0534 4FF08F41 		mov	r1, #1199570944
 8397 0538 1846     		mov	r0, r3
 8398 053a FFF7FEFF 		bl	__aeabi_fmul
 8399 053e 0346     		mov	r3, r0
 8400 0540 1846     		mov	r0, r3
 8401 0542 FFF7FEFF 		bl	__aeabi_f2iz
 8402 0546 0146     		mov	r1, r0
 8403 0548 724A     		ldr	r2, .L460
 8404 054a 2346     		mov	r3, r4
 8405 054c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 201


 8406 054e 1B1B     		subs	r3, r3, r4
 8407 0550 1B01     		lsls	r3, r3, #4
 8408 0552 1344     		add	r3, r3, r2
 8409 0554 D833     		adds	r3, r3, #216
 8410 0556 1960     		str	r1, [r3]
1308:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 8411              		.loc 1 1308 0
 8412 0558 6F4B     		ldr	r3, .L460+4
 8413 055a 1B68     		ldr	r3, [r3]	@ float
 8414 055c FB60     		str	r3, [r7, #12]	@ float
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8415              		.loc 1 1309 0
 8416 055e 0023     		movs	r3, #0
 8417 0560 BB75     		strb	r3, [r7, #22]
 8418 0562 0EE0     		b	.L407
 8419              	.L408:
1310:..\src/command_processing.c ****                 }
 8420              		.loc 1 1310 0 discriminator 3
 8421 0564 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8422 0566 C3F10303 		rsb	r3, r3, #3
 8423 056a 07F10802 		add	r2, r7, #8
 8424 056e 1344     		add	r3, r3, r2
 8425 0570 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 8426 0572 07F10C01 		add	r1, r7, #12
 8427 0576 0A44     		add	r2, r2, r1
 8428 0578 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8429 057a 1A70     		strb	r2, [r3]
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8430              		.loc 1 1309 0 discriminator 3
 8431 057c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8432 057e 0133     		adds	r3, r3, #1
 8433 0580 BB75     		strb	r3, [r7, #22]
 8434              	.L407:
1309:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 8435              		.loc 1 1309 0 is_stmt 0 discriminator 1
 8436 0582 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 8437 0584 032B     		cmp	r3, #3
 8438 0586 EDD9     		bls	.L408
1312:..\src/command_processing.c ****             }            
 8439              		.loc 1 1312 0 is_stmt 1
 8440 0588 3C7D     		ldrb	r4, [r7, #20]	@ zero_extendqisi2
 8441 058a BB68     		ldr	r3, [r7, #8]	@ float
 8442 058c 4FF08F41 		mov	r1, #1199570944
 8443 0590 1846     		mov	r0, r3
 8444 0592 FFF7FEFF 		bl	__aeabi_fmul
 8445 0596 0346     		mov	r3, r0
 8446 0598 1846     		mov	r0, r3
 8447 059a FFF7FEFF 		bl	__aeabi_f2iz
 8448 059e 0146     		mov	r1, r0
 8449 05a0 5C4A     		ldr	r2, .L460
 8450 05a2 2346     		mov	r3, r4
 8451 05a4 DB00     		lsls	r3, r3, #3
 8452 05a6 1B1B     		subs	r3, r3, r4
 8453 05a8 1B01     		lsls	r3, r3, #4
 8454 05aa 1344     		add	r3, r3, r2
 8455 05ac DC33     		adds	r3, r3, #220
 8456 05ae 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 202


 8457              		.loc 1 1314 0
 8458 05b0 00F05DBF 		b	.L394
 8459              	.L364:
1315:..\src/command_processing.c ****             
1316:..\src/command_processing.c ****         case 5:         //Input mode
1317:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].input_mode = g_rx.buffer[3];
 8460              		.loc 1 1317 0
 8461 05b4 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8462 05b6 5B4B     		ldr	r3, .L460+16
 8463 05b8 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 8464 05ba 5649     		ldr	r1, .L460
 8465 05bc 1346     		mov	r3, r2
 8466 05be DB00     		lsls	r3, r3, #3
 8467 05c0 9B1A     		subs	r3, r3, r2
 8468 05c2 1B01     		lsls	r3, r3, #4
 8469 05c4 0B44     		add	r3, r3, r1
 8470 05c6 03F58773 		add	r3, r3, #270
 8471 05ca 0246     		mov	r2, r0
 8472 05cc 1A70     		strb	r2, [r3]
1318:..\src/command_processing.c ****             
1319:..\src/command_processing.c ****             // Hold the actual position
1320:..\src/command_processing.c ****             g_refNew[MOTOR_IDX].pos = g_meas[g_mem.motor[MOTOR_IDX].encoder_line].pos[0];
 8473              		.loc 1 1320 0
 8474 05ce 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8475 05d0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8476 05d2 5048     		ldr	r0, .L460
 8477 05d4 1346     		mov	r3, r2
 8478 05d6 DB00     		lsls	r3, r3, #3
 8479 05d8 9B1A     		subs	r3, r3, r2
 8480 05da 1B01     		lsls	r3, r3, #4
 8481 05dc 0344     		add	r3, r3, r0
 8482 05de 03F58873 		add	r3, r3, #272
 8483 05e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8484 05e4 1846     		mov	r0, r3
 8485 05e6 504A     		ldr	r2, .L460+20
 8486 05e8 3423     		movs	r3, #52
 8487 05ea 03FB00F3 		mul	r3, r3, r0
 8488 05ee 1344     		add	r3, r3, r2
 8489 05f0 1A68     		ldr	r2, [r3]
 8490 05f2 4E48     		ldr	r0, .L460+24
 8491 05f4 0B01     		lsls	r3, r1, #4
 8492 05f6 0344     		add	r3, r3, r0
 8493 05f8 1A60     		str	r2, [r3]
1321:..\src/command_processing.c ****             break;   
 8494              		.loc 1 1321 0
 8495 05fa 00F038BF 		b	.L394
 8496              	.L365:
1322:..\src/command_processing.c **** 
1323:..\src/command_processing.c ****         case 8:         //Measurement Offset
1324:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 8497              		.loc 1 1324 0
 8498 05fe 0023     		movs	r3, #0
 8499 0600 FB75     		strb	r3, [r7, #23]
 8500 0602 7EE0     		b	.L409
 8501              	.L410:
1325:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8502              		.loc 1 1325 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 203


 8503 0604 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8504 0606 4349     		ldr	r1, .L460
 8505 0608 1346     		mov	r3, r2
 8506 060a DB00     		lsls	r3, r3, #3
 8507 060c 9B1A     		subs	r3, r3, r2
 8508 060e 1B01     		lsls	r3, r3, #4
 8509 0610 0B44     		add	r3, r3, r1
 8510 0612 03F58873 		add	r3, r3, #272
 8511 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8512 0618 1C46     		mov	r4, r3
 8513 061a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8514 061c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8515 061e 5B00     		lsls	r3, r3, #1
 8516 0620 0333     		adds	r3, r3, #3
 8517 0622 4049     		ldr	r1, .L460+16
 8518 0624 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8519 0626 1B02     		lsls	r3, r3, #8
 8520 0628 19B2     		sxth	r1, r3
 8521 062a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8522 062c 0233     		adds	r3, r3, #2
 8523 062e 5B00     		lsls	r3, r3, #1
 8524 0630 3C48     		ldr	r0, .L460+16
 8525 0632 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 8526 0634 1BB2     		sxth	r3, r3
 8527 0636 0B43     		orrs	r3, r3, r1
 8528 0638 1BB2     		sxth	r3, r3
 8529 063a 1846     		mov	r0, r3
 8530 063c 3549     		ldr	r1, .L460
 8531 063e 2346     		mov	r3, r4
 8532 0640 5B00     		lsls	r3, r3, #1
 8533 0642 2344     		add	r3, r3, r4
 8534 0644 9B00     		lsls	r3, r3, #2
 8535 0646 1344     		add	r3, r3, r2
 8536 0648 6633     		adds	r3, r3, #102
 8537 064a 41F82300 		str	r0, [r1, r3, lsl #2]
1326:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.motor[MOT
 8538              		.loc 1 1326 0 discriminator 3
 8539 064e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8540 0650 3049     		ldr	r1, .L460
 8541 0652 1346     		mov	r3, r2
 8542 0654 DB00     		lsls	r3, r3, #3
 8543 0656 9B1A     		subs	r3, r3, r2
 8544 0658 1B01     		lsls	r3, r3, #4
 8545 065a 0B44     		add	r3, r3, r1
 8546 065c 03F58873 		add	r3, r3, #272
 8547 0660 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8548 0662 1D46     		mov	r5, r3
 8549 0664 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 8550 0666 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8551 0668 2A48     		ldr	r0, .L460
 8552 066a 1346     		mov	r3, r2
 8553 066c DB00     		lsls	r3, r3, #3
 8554 066e 9B1A     		subs	r3, r3, r2
 8555 0670 1B01     		lsls	r3, r3, #4
 8556 0672 0344     		add	r3, r3, r0
 8557 0674 03F58873 		add	r3, r3, #272
 8558 0678 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 204


 8559 067a 1C46     		mov	r4, r3
 8560 067c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8561 067e 2548     		ldr	r0, .L460
 8562 0680 2346     		mov	r3, r4
 8563 0682 5B00     		lsls	r3, r3, #1
 8564 0684 2344     		add	r3, r3, r4
 8565 0686 9B00     		lsls	r3, r3, #2
 8566 0688 1344     		add	r3, r3, r2
 8567 068a 6633     		adds	r3, r3, #102
 8568 068c 50F82300 		ldr	r0, [r0, r3, lsl #2]
 8569 0690 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8570 0692 204C     		ldr	r4, .L460
 8571 0694 1346     		mov	r3, r2
 8572 0696 DB00     		lsls	r3, r3, #3
 8573 0698 9B1A     		subs	r3, r3, r2
 8574 069a 1B01     		lsls	r3, r3, #4
 8575 069c 2344     		add	r3, r3, r4
 8576 069e 03F58873 		add	r3, r3, #272
 8577 06a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8578 06a4 1E46     		mov	r6, r3
 8579 06a6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 8580 06a8 1A4C     		ldr	r4, .L460
 8581 06aa 3346     		mov	r3, r6
 8582 06ac 5B00     		lsls	r3, r3, #1
 8583 06ae 3344     		add	r3, r3, r6
 8584 06b0 1B01     		lsls	r3, r3, #4
 8585 06b2 2344     		add	r3, r3, r4
 8586 06b4 1344     		add	r3, r3, r2
 8587 06b6 03F29513 		addw	r3, r3, #405
 8588 06ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8589 06bc 00FA03F2 		lsl	r2, r0, r3
 8590 06c0 1448     		ldr	r0, .L460
 8591 06c2 2B46     		mov	r3, r5
 8592 06c4 5B00     		lsls	r3, r3, #1
 8593 06c6 2B44     		add	r3, r3, r5
 8594 06c8 9B00     		lsls	r3, r3, #2
 8595 06ca 0B44     		add	r3, r3, r1
 8596 06cc 6633     		adds	r3, r3, #102
 8597 06ce 40F82320 		str	r2, [r0, r3, lsl #2]
1327:..\src/command_processing.c **** 
1328:..\src/command_processing.c ****                 g_meas[g_mem.motor[MOTOR_IDX].encoder_line].rot[i] = 0;
 8598              		.loc 1 1328 0 discriminator 3
 8599 06d2 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8600 06d4 0F49     		ldr	r1, .L460
 8601 06d6 1346     		mov	r3, r2
 8602 06d8 DB00     		lsls	r3, r3, #3
 8603 06da 9B1A     		subs	r3, r3, r2
 8604 06dc 1B01     		lsls	r3, r3, #4
 8605 06de 0B44     		add	r3, r3, r1
 8606 06e0 03F58873 		add	r3, r3, #272
 8607 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8608 06e6 1846     		mov	r0, r3
 8609 06e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8610 06ea 0F49     		ldr	r1, .L460+20
 8611 06ec 3422     		movs	r2, #52
 8612 06ee 02FB00F2 		mul	r2, r2, r0
 8613 06f2 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 205


 8614 06f4 1344     		add	r3, r3, r2
 8615 06f6 1833     		adds	r3, r3, #24
 8616 06f8 0022     		movs	r2, #0
 8617 06fa 1A70     		strb	r2, [r3]
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8618              		.loc 1 1324 0 discriminator 3
 8619 06fc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8620 06fe 0133     		adds	r3, r3, #1
 8621 0700 FB75     		strb	r3, [r7, #23]
 8622              	.L409:
1324:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffer[3 + i
 8623              		.loc 1 1324 0 is_stmt 0 discriminator 1
 8624 0702 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 8625 0704 022B     		cmp	r3, #2
 8626 0706 7FF67DAF 		bls	.L410
1329:..\src/command_processing.c ****             }
1330:..\src/command_processing.c ****             reset_last_value_flag = 1;
 8627              		.loc 1 1330 0 is_stmt 1
 8628 070a 094B     		ldr	r3, .L460+28
 8629 070c 0122     		movs	r2, #1
 8630 070e 1A70     		strb	r2, [r3]
1331:..\src/command_processing.c ****             break;
 8631              		.loc 1 1331 0
 8632 0710 00F0ADBE 		b	.L394
 8633              	.L461:
 8634              		.align	2
 8635              	.L460:
 8636 0714 00000000 		.word	g_mem
 8637 0718 0B000000 		.word	g_rx+11
 8638 071c 03000000 		.word	g_rx+3
 8639 0720 07000000 		.word	g_rx+7
 8640 0724 00000000 		.word	g_rx
 8641 0728 00000000 		.word	g_meas
 8642 072c 00000000 		.word	g_refNew
 8643 0730 00000000 		.word	reset_last_value_flag
 8644              	.L366:
1332:..\src/command_processing.c ****     
1333:..\src/command_processing.c ****         case 11:        //Position limits
1334:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | 
 8645              		.loc 1 1334 0
 8646 0734 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8647 0736 C14B     		ldr	r3, .L462
 8648 0738 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8649 073a 1906     		lsls	r1, r3, #24
 8650 073c BF4B     		ldr	r3, .L462
 8651 073e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8652 0740 1B04     		lsls	r3, r3, #16
 8653 0742 1943     		orrs	r1, r1, r3
 8654 0744 BD4B     		ldr	r3, .L462
 8655 0746 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8656 0748 1B02     		lsls	r3, r3, #8
 8657 074a 0B43     		orrs	r3, r3, r1
 8658 074c BB49     		ldr	r1, .L462
 8659 074e 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 8660 0750 1943     		orrs	r1, r1, r3
 8661 0752 BB48     		ldr	r0, .L462+4
 8662 0754 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 206


 8663 0756 DB00     		lsls	r3, r3, #3
 8664 0758 9B1A     		subs	r3, r3, r2
 8665 075a 1B01     		lsls	r3, r3, #4
 8666 075c 0344     		add	r3, r3, r0
 8667 075e E433     		adds	r3, r3, #228
 8668 0760 1960     		str	r1, [r3]
1335:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | 
 8669              		.loc 1 1335 0
 8670 0762 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8671 0764 B54B     		ldr	r3, .L462
 8672 0766 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 8673 0768 1906     		lsls	r1, r3, #24
 8674 076a B44B     		ldr	r3, .L462
 8675 076c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 8676 076e 1B04     		lsls	r3, r3, #16
 8677 0770 1943     		orrs	r1, r1, r3
 8678 0772 B24B     		ldr	r3, .L462
 8679 0774 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 8680 0776 1B02     		lsls	r3, r3, #8
 8681 0778 0B43     		orrs	r3, r3, r1
 8682 077a B049     		ldr	r1, .L462
 8683 077c 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 8684 077e 1943     		orrs	r1, r1, r3
 8685 0780 AF48     		ldr	r0, .L462+4
 8686 0782 1346     		mov	r3, r2
 8687 0784 DB00     		lsls	r3, r3, #3
 8688 0786 9B1A     		subs	r3, r3, r2
 8689 0788 1B01     		lsls	r3, r3, #4
 8690 078a 0344     		add	r3, r3, r0
 8691 078c E833     		adds	r3, r3, #232
 8692 078e 1960     		str	r1, [r3]
1336:..\src/command_processing.c **** 
1337:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_inf = g_mem.motor[MOTOR_IDX].pos_lim_inf << g_mem.enc[g_
 8693              		.loc 1 1337 0
 8694 0790 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8695 0792 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8696 0794 AA48     		ldr	r0, .L462+4
 8697 0796 0B46     		mov	r3, r1
 8698 0798 DB00     		lsls	r3, r3, #3
 8699 079a 5B1A     		subs	r3, r3, r1
 8700 079c 1B01     		lsls	r3, r3, #4
 8701 079e 0344     		add	r3, r3, r0
 8702 07a0 E433     		adds	r3, r3, #228
 8703 07a2 1868     		ldr	r0, [r3]
 8704 07a4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8705 07a6 A64C     		ldr	r4, .L462+4
 8706 07a8 0B46     		mov	r3, r1
 8707 07aa DB00     		lsls	r3, r3, #3
 8708 07ac 5B1A     		subs	r3, r3, r1
 8709 07ae 1B01     		lsls	r3, r3, #4
 8710 07b0 2344     		add	r3, r3, r4
 8711 07b2 03F58873 		add	r3, r3, #272
 8712 07b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8713 07b8 1C46     		mov	r4, r3
 8714 07ba A149     		ldr	r1, .L462+4
 8715 07bc 2346     		mov	r3, r4
 8716 07be 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 207


 8717 07c0 2344     		add	r3, r3, r4
 8718 07c2 1B01     		lsls	r3, r3, #4
 8719 07c4 0B44     		add	r3, r3, r1
 8720 07c6 03F29513 		addw	r3, r3, #405
 8721 07ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8722 07cc 00FA03F1 		lsl	r1, r0, r3
 8723 07d0 9B48     		ldr	r0, .L462+4
 8724 07d2 1346     		mov	r3, r2
 8725 07d4 DB00     		lsls	r3, r3, #3
 8726 07d6 9B1A     		subs	r3, r3, r2
 8727 07d8 1B01     		lsls	r3, r3, #4
 8728 07da 0344     		add	r3, r3, r0
 8729 07dc E433     		adds	r3, r3, #228
 8730 07de 1960     		str	r1, [r3]
1338:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].pos_lim_sup = g_mem.motor[MOTOR_IDX].pos_lim_sup << g_mem.enc[g_
 8731              		.loc 1 1338 0
 8732 07e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8733 07e2 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8734 07e4 9648     		ldr	r0, .L462+4
 8735 07e6 0B46     		mov	r3, r1
 8736 07e8 DB00     		lsls	r3, r3, #3
 8737 07ea 5B1A     		subs	r3, r3, r1
 8738 07ec 1B01     		lsls	r3, r3, #4
 8739 07ee 0344     		add	r3, r3, r0
 8740 07f0 E833     		adds	r3, r3, #232
 8741 07f2 1868     		ldr	r0, [r3]
 8742 07f4 397D     		ldrb	r1, [r7, #20]	@ zero_extendqisi2
 8743 07f6 924C     		ldr	r4, .L462+4
 8744 07f8 0B46     		mov	r3, r1
 8745 07fa DB00     		lsls	r3, r3, #3
 8746 07fc 5B1A     		subs	r3, r3, r1
 8747 07fe 1B01     		lsls	r3, r3, #4
 8748 0800 2344     		add	r3, r3, r4
 8749 0802 03F58873 		add	r3, r3, #272
 8750 0806 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8751 0808 1C46     		mov	r4, r3
 8752 080a 8D49     		ldr	r1, .L462+4
 8753 080c 2346     		mov	r3, r4
 8754 080e 5B00     		lsls	r3, r3, #1
 8755 0810 2344     		add	r3, r3, r4
 8756 0812 1B01     		lsls	r3, r3, #4
 8757 0814 0B44     		add	r3, r3, r1
 8758 0816 03F29513 		addw	r3, r3, #405
 8759 081a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8760 081c 00FA03F1 		lsl	r1, r0, r3
 8761 0820 8748     		ldr	r0, .L462+4
 8762 0822 1346     		mov	r3, r2
 8763 0824 DB00     		lsls	r3, r3, #3
 8764 0826 9B1A     		subs	r3, r3, r2
 8765 0828 1B01     		lsls	r3, r3, #4
 8766 082a 0344     		add	r3, r3, r0
 8767 082c E833     		adds	r3, r3, #232
 8768 082e 1960     		str	r1, [r3]
1339:..\src/command_processing.c ****             break;            
 8769              		.loc 1 1339 0
 8770 0830 00F01DBE 		b	.L394
 8771              	.L367:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 208


1340:..\src/command_processing.c **** 
1341:..\src/command_processing.c ****         case 23:        //Rest Position
1342:..\src/command_processing.c ****             g_mem.SH.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 8772              		.loc 1 1342 0
 8773 0834 814B     		ldr	r3, .L462
 8774 0836 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8775 0838 1A06     		lsls	r2, r3, #24
 8776 083a 804B     		ldr	r3, .L462
 8777 083c 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8778 083e 1B04     		lsls	r3, r3, #16
 8779 0840 1A43     		orrs	r2, r2, r3
 8780 0842 7E4B     		ldr	r3, .L462
 8781 0844 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8782 0846 1B02     		lsls	r3, r3, #8
 8783 0848 1343     		orrs	r3, r3, r2
 8784 084a 7C4A     		ldr	r2, .L462
 8785 084c 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8786 084e 1343     		orrs	r3, r3, r2
 8787 0850 7B4A     		ldr	r2, .L462+4
 8788 0852 C2F8A032 		str	r3, [r2, #672]
1343:..\src/command_processing.c ****             g_mem.SH.rest_pos = g_mem.SH.rest_pos << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line]
 8789              		.loc 1 1343 0
 8790 0856 7A4B     		ldr	r3, .L462+4
 8791 0858 D3F8A012 		ldr	r1, [r3, #672]
 8792 085c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8793 085e 7848     		ldr	r0, .L462+4
 8794 0860 1346     		mov	r3, r2
 8795 0862 DB00     		lsls	r3, r3, #3
 8796 0864 9B1A     		subs	r3, r3, r2
 8797 0866 1B01     		lsls	r3, r3, #4
 8798 0868 0344     		add	r3, r3, r0
 8799 086a 03F58873 		add	r3, r3, #272
 8800 086e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8801 0870 1846     		mov	r0, r3
 8802 0872 734A     		ldr	r2, .L462+4
 8803 0874 0346     		mov	r3, r0
 8804 0876 5B00     		lsls	r3, r3, #1
 8805 0878 0344     		add	r3, r3, r0
 8806 087a 1B01     		lsls	r3, r3, #4
 8807 087c 1344     		add	r3, r3, r2
 8808 087e 03F29513 		addw	r3, r3, #405
 8809 0882 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8810 0884 01FA03F3 		lsl	r3, r1, r3
 8811 0888 6D4A     		ldr	r2, .L462+4
 8812 088a C2F8A032 		str	r3, [r2, #672]
1344:..\src/command_processing.c ****             break; 
 8813              		.loc 1 1344 0
 8814 088e 00F0EEBD 		b	.L394
 8815              	.L368:
1345:..\src/command_processing.c ****             
1346:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay
1347:..\src/command_processing.c ****            g_mem.SH.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 8816              		.loc 1 1347 0
 8817 0892 6A4B     		ldr	r3, .L462
 8818 0894 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 8819 0896 1A06     		lsls	r2, r3, #24
 8820 0898 684B     		ldr	r3, .L462
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 209


 8821 089a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 8822 089c 1B04     		lsls	r3, r3, #16
 8823 089e 1A43     		orrs	r2, r2, r3
 8824 08a0 664B     		ldr	r3, .L462
 8825 08a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 8826 08a4 1B02     		lsls	r3, r3, #8
 8827 08a6 1343     		orrs	r3, r3, r2
 8828 08a8 644A     		ldr	r2, .L462
 8829 08aa 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 8830 08ac 1343     		orrs	r3, r3, r2
 8831 08ae 644A     		ldr	r2, .L462+4
 8832 08b0 C2F8A432 		str	r3, [r2, #676]
1348:..\src/command_processing.c **** 		   if (g_mem.SH.rest_delay < 10) g_mem.SH.rest_delay = 10;
 8833              		.loc 1 1348 0
 8834 08b4 624B     		ldr	r3, .L462+4
 8835 08b6 D3F8A432 		ldr	r3, [r3, #676]
 8836 08ba 092B     		cmp	r3, #9
 8837 08bc 00F3CE85 		bgt	.L453
 8838              		.loc 1 1348 0 is_stmt 0 discriminator 1
 8839 08c0 5F4B     		ldr	r3, .L462+4
 8840 08c2 0A22     		movs	r2, #10
 8841 08c4 C3F8A422 		str	r2, [r3, #676]
1349:..\src/command_processing.c ****            break; 
 8842              		.loc 1 1349 0 is_stmt 1 discriminator 1
 8843 08c8 00F0C8BD 		b	.L453
 8844              	.L369:
1350:..\src/command_processing.c ****             
1351:..\src/command_processing.c ****         case 28:        //Right/Left hand flag
1352:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 8845              		.loc 1 1352 0
 8846 08cc 5B4B     		ldr	r3, .L462
 8847 08ce DB78     		ldrb	r3, [r3, #3]
 8848 08d0 BB74     		strb	r3, [r7, #18]
1353:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 8849              		.loc 1 1353 0
 8850 08d2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 8851 08d4 002B     		cmp	r3, #0
 8852 08d6 04D0     		beq	.L412
1354:..\src/command_processing.c ****                 g_mem.dev.right_left = LEFT_HAND;
 8853              		.loc 1 1354 0
 8854 08d8 594B     		ldr	r3, .L462+4
 8855 08da 0122     		movs	r2, #1
 8856 08dc 83F8A720 		strb	r2, [r3, #167]
 8857 08e0 03E0     		b	.L413
 8858              	.L412:
1355:..\src/command_processing.c ****             } else {            // 0
1356:..\src/command_processing.c ****                 g_mem.dev.right_left = RIGHT_HAND;
 8859              		.loc 1 1356 0
 8860 08e2 574B     		ldr	r3, .L462+4
 8861 08e4 0022     		movs	r2, #0
 8862 08e6 83F8A720 		strb	r2, [r3, #167]
 8863              	.L413:
1357:..\src/command_processing.c ****             }
1358:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 8864              		.loc 1 1358 0
 8865 08ea 564B     		ldr	r3, .L462+8
 8866 08ec 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 210


 8867 08ee 1A70     		strb	r2, [r3]
1359:..\src/command_processing.c **** 
1360:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    
 8868              		.loc 1 1360 0
 8869 08f0 534B     		ldr	r3, .L462+4
 8870 08f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 8871 08f6 002B     		cmp	r3, #0
 8872 08f8 40F0B285 		bne	.L454
1361:..\src/command_processing.c ****                 // Change also default encoder line (only with SoftHand FW)
1362:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line = g_mem.dev.right_left;
 8873              		.loc 1 1362 0
 8874 08fc 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8875 08fe 504B     		ldr	r3, .L462+4
 8876 0900 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 8877 0904 4E49     		ldr	r1, .L462+4
 8878 0906 1346     		mov	r3, r2
 8879 0908 DB00     		lsls	r3, r3, #3
 8880 090a 9B1A     		subs	r3, r3, r2
 8881 090c 1B01     		lsls	r3, r3, #4
 8882 090e 0B44     		add	r3, r3, r1
 8883 0910 03F58873 		add	r3, r3, #272
 8884 0914 0246     		mov	r2, r0
 8885 0916 1A70     		strb	r2, [r3]
1363:..\src/command_processing.c ****                 
1364:..\src/command_processing.c ****                 // Change also gears parameters
1365:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 8886              		.loc 1 1365 0
 8887 0918 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8888 091a 4949     		ldr	r1, .L462+4
 8889 091c 1346     		mov	r3, r2
 8890 091e DB00     		lsls	r3, r3, #3
 8891 0920 9B1A     		subs	r3, r3, r2
 8892 0922 1B01     		lsls	r3, r3, #4
 8893 0924 0B44     		add	r3, r3, r1
 8894 0926 03F58873 		add	r3, r3, #272
 8895 092a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8896 092c 1946     		mov	r1, r3
 8897 092e 444A     		ldr	r2, .L462+4
 8898 0930 0B46     		mov	r3, r1
 8899 0932 5B00     		lsls	r3, r3, #1
 8900 0934 0B44     		add	r3, r3, r1
 8901 0936 1B01     		lsls	r3, r3, #4
 8902 0938 1344     		add	r3, r3, r2
 8903 093a 03F5D873 		add	r3, r3, #432
 8904 093e 0122     		movs	r2, #1
 8905 0940 1A70     		strb	r2, [r3]
1366:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 8906              		.loc 1 1366 0
 8907 0942 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8908 0944 3E49     		ldr	r1, .L462+4
 8909 0946 1346     		mov	r3, r2
 8910 0948 DB00     		lsls	r3, r3, #3
 8911 094a 9B1A     		subs	r3, r3, r2
 8912 094c 1B01     		lsls	r3, r3, #4
 8913 094e 0B44     		add	r3, r3, r1
 8914 0950 03F58873 		add	r3, r3, #272
 8915 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 211


 8916 0956 1946     		mov	r1, r3
 8917 0958 394A     		ldr	r2, .L462+4
 8918 095a 0B46     		mov	r3, r1
 8919 095c 5B00     		lsls	r3, r3, #1
 8920 095e 0B44     		add	r3, r3, r1
 8921 0960 1B01     		lsls	r3, r3, #4
 8922 0962 1344     		add	r3, r3, r2
 8923 0964 03F2B513 		addw	r3, r3, #437
 8924 0968 2322     		movs	r2, #35
 8925 096a 1A70     		strb	r2, [r3]
1367:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 8926              		.loc 1 1367 0
 8927 096c 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8928 096e 3449     		ldr	r1, .L462+4
 8929 0970 1346     		mov	r3, r2
 8930 0972 DB00     		lsls	r3, r3, #3
 8931 0974 9B1A     		subs	r3, r3, r2
 8932 0976 1B01     		lsls	r3, r3, #4
 8933 0978 0B44     		add	r3, r3, r1
 8934 097a 03F58873 		add	r3, r3, #272
 8935 097e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8936 0980 1946     		mov	r1, r3
 8937 0982 2F4A     		ldr	r2, .L462+4
 8938 0984 0B46     		mov	r3, r1
 8939 0986 5B00     		lsls	r3, r3, #1
 8940 0988 0B44     		add	r3, r3, r1
 8941 098a 1B01     		lsls	r3, r3, #4
 8942 098c 1344     		add	r3, r3, r2
 8943 098e 03F5DB73 		add	r3, r3, #438
 8944 0992 0322     		movs	r2, #3
 8945 0994 1A70     		strb	r2, [r3]
1368:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 8946              		.loc 1 1368 0
 8947 0996 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8948 0998 2949     		ldr	r1, .L462+4
 8949 099a 1346     		mov	r3, r2
 8950 099c DB00     		lsls	r3, r3, #3
 8951 099e 9B1A     		subs	r3, r3, r2
 8952 09a0 1B01     		lsls	r3, r3, #4
 8953 09a2 0B44     		add	r3, r3, r1
 8954 09a4 03F58873 		add	r3, r3, #272
 8955 09a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8956 09aa 1946     		mov	r1, r3
 8957 09ac 244A     		ldr	r2, .L462+4
 8958 09ae 0B46     		mov	r3, r1
 8959 09b0 5B00     		lsls	r3, r3, #1
 8960 09b2 0B44     		add	r3, r3, r1
 8961 09b4 1B01     		lsls	r3, r3, #4
 8962 09b6 1344     		add	r3, r3, r2
 8963 09b8 03F2B713 		addw	r3, r3, #439
 8964 09bc FF22     		movs	r2, #255
 8965 09be 1A70     		strb	r2, [r3]
1369:..\src/command_processing.c ****                 
1370:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1371:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 8966              		.loc 1 1371 0
 8967 09c0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 212


 8968 09c2 1F49     		ldr	r1, .L462+4
 8969 09c4 1346     		mov	r3, r2
 8970 09c6 DB00     		lsls	r3, r3, #3
 8971 09c8 9B1A     		subs	r3, r3, r2
 8972 09ca 1B01     		lsls	r3, r3, #4
 8973 09cc 0B44     		add	r3, r3, r1
 8974 09ce 03F21113 		addw	r3, r3, #273
 8975 09d2 0122     		movs	r2, #1
 8976 09d4 1A70     		strb	r2, [r3]
1372:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 8977              		.loc 1 1372 0
 8978 09d6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8979 09d8 1949     		ldr	r1, .L462+4
 8980 09da 1346     		mov	r3, r2
 8981 09dc DB00     		lsls	r3, r3, #3
 8982 09de 9B1A     		subs	r3, r3, r2
 8983 09e0 1B01     		lsls	r3, r3, #4
 8984 09e2 0B44     		add	r3, r3, r1
 8985 09e4 03F58973 		add	r3, r3, #274
 8986 09e8 0122     		movs	r2, #1
 8987 09ea 1A70     		strb	r2, [r3]
1373:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 8988              		.loc 1 1373 0
 8989 09ec 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 8990 09ee 1449     		ldr	r1, .L462+4
 8991 09f0 1346     		mov	r3, r2
 8992 09f2 DB00     		lsls	r3, r3, #3
 8993 09f4 9B1A     		subs	r3, r3, r2
 8994 09f6 1B01     		lsls	r3, r3, #4
 8995 09f8 0B44     		add	r3, r3, r1
 8996 09fa E433     		adds	r3, r3, #228
 8997 09fc 0022     		movs	r2, #0
 8998 09fe 1A60     		str	r2, [r3]
1374:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 8999              		.loc 1 1374 0
 9000 0a00 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9001 0a02 0F4B     		ldr	r3, .L462+4
 9002 0a04 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9003 0a08 1846     		mov	r0, r3
 9004 0a0a 0D49     		ldr	r1, .L462+4
 9005 0a0c 0346     		mov	r3, r0
 9006 0a0e 5B00     		lsls	r3, r3, #1
 9007 0a10 0344     		add	r3, r3, r0
 9008 0a12 1B01     		lsls	r3, r3, #4
 9009 0a14 0B44     		add	r3, r3, r1
 9010 0a16 03F29513 		addw	r3, r3, #405
 9011 0a1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9012 0a1c 1946     		mov	r1, r3
 9013 0a1e 4FF47A53 		mov	r3, #16000
 9014 0a22 03FA01F1 		lsl	r1, r3, r1
 9015 0a26 0648     		ldr	r0, .L462+4
 9016 0a28 1346     		mov	r3, r2
 9017 0a2a DB00     		lsls	r3, r3, #3
 9018 0a2c 9B1A     		subs	r3, r3, r2
 9019 0a2e 1B01     		lsls	r3, r3, #4
 9020 0a30 0344     		add	r3, r3, r0
 9021 0a32 E833     		adds	r3, r3, #232
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 213


 9022 0a34 1960     		str	r1, [r3]
1375:..\src/command_processing.c ****             }    
1376:..\src/command_processing.c **** 
1377:..\src/command_processing.c ****             break; 
 9023              		.loc 1 1377 0
 9024 0a36 00F013BD 		b	.L454
 9025              	.L463:
 9026 0a3a 00BF     		.align	2
 9027              	.L462:
 9028 0a3c 00000000 		.word	g_rx
 9029 0a40 00000000 		.word	g_mem
 9030 0a44 00000000 		.word	reset_last_value_flag
 9031              	.L370:
1378:..\src/command_processing.c **** 
1379:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1380:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 9032              		.loc 1 1380 0
 9033 0a48 A94B     		ldr	r3, .L464
 9034 0a4a DB78     		ldrb	r3, [r3, #3]
 9035 0a4c BB74     		strb	r3, [r7, #18]
1381:..\src/command_processing.c ****             if (aux_uchar) {
 9036              		.loc 1 1381 0
 9037 0a4e BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9038 0a50 002B     		cmp	r3, #0
 9039 0a52 05D0     		beq	.L415
1382:..\src/command_processing.c ****                 reset_counters();
 9040              		.loc 1 1382 0
 9041 0a54 FFF7FEFF 		bl	reset_counters
1383:..\src/command_processing.c ****                 g_mem.dev.reset_counters = FALSE;
 9042              		.loc 1 1383 0
 9043 0a58 A64B     		ldr	r3, .L464+4
 9044 0a5a 0022     		movs	r2, #0
 9045 0a5c 83F8A820 		strb	r2, [r3, #168]
 9046              	.L415:
1384:..\src/command_processing.c ****             }
1385:..\src/command_processing.c ****             
1386:..\src/command_processing.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9047              		.loc 1 1386 0
 9048 0a60 A54B     		ldr	r3, .L464+8
 9049 0a62 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9050 0a66 012B     		cmp	r3, #1
 9051 0a68 40F0FC84 		bne	.L455
1387:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1388:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 9052              		.loc 1 1388 0
 9053 0a6c 8720     		movs	r0, #135
 9054 0a6e FFF7FEFF 		bl	DS1302_read
 9055 0a72 0346     		mov	r3, r0
 9056 0a74 BB74     		strb	r3, [r7, #18]
1389:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[0] = (aux_uchar/16) * 10 + aux_uchar%16;    //day
 9057              		.loc 1 1389 0
 9058 0a76 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9059 0a78 1B09     		lsrs	r3, r3, #4
 9060 0a7a DBB2     		uxtb	r3, r3
 9061 0a7c 1A46     		mov	r2, r3
 9062 0a7e 9200     		lsls	r2, r2, #2
 9063 0a80 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 214


 9064 0a82 5B00     		lsls	r3, r3, #1
 9065 0a84 DAB2     		uxtb	r2, r3
 9066 0a86 BB7C     		ldrb	r3, [r7, #18]
 9067 0a88 03F00F03 		and	r3, r3, #15
 9068 0a8c DBB2     		uxtb	r3, r3
 9069 0a8e 1344     		add	r3, r3, r2
 9070 0a90 DAB2     		uxtb	r2, r3
 9071 0a92 984B     		ldr	r3, .L464+4
 9072 0a94 83F8A420 		strb	r2, [r3, #164]
1390:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 9073              		.loc 1 1390 0
 9074 0a98 8920     		movs	r0, #137
 9075 0a9a FFF7FEFF 		bl	DS1302_read
 9076 0a9e 0346     		mov	r3, r0
 9077 0aa0 BB74     		strb	r3, [r7, #18]
1391:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[1] = (aux_uchar/16) * 10 + aux_uchar%16;    // mo
 9078              		.loc 1 1391 0
 9079 0aa2 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9080 0aa4 1B09     		lsrs	r3, r3, #4
 9081 0aa6 DBB2     		uxtb	r3, r3
 9082 0aa8 1A46     		mov	r2, r3
 9083 0aaa 9200     		lsls	r2, r2, #2
 9084 0aac 1344     		add	r3, r3, r2
 9085 0aae 5B00     		lsls	r3, r3, #1
 9086 0ab0 DAB2     		uxtb	r2, r3
 9087 0ab2 BB7C     		ldrb	r3, [r7, #18]
 9088 0ab4 03F00F03 		and	r3, r3, #15
 9089 0ab8 DBB2     		uxtb	r3, r3
 9090 0aba 1344     		add	r3, r3, r2
 9091 0abc DAB2     		uxtb	r2, r3
 9092 0abe 8D4B     		ldr	r3, .L464+4
 9093 0ac0 83F8A520 		strb	r2, [r3, #165]
1392:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 9094              		.loc 1 1392 0
 9095 0ac4 8D20     		movs	r0, #141
 9096 0ac6 FFF7FEFF 		bl	DS1302_read
 9097 0aca 0346     		mov	r3, r0
 9098 0acc BB74     		strb	r3, [r7, #18]
1393:..\src/command_processing.c ****                 g_mem.dev.stats_period_begin_date[2] = (aux_uchar/16) * 10 + aux_uchar%16;         
 9099              		.loc 1 1393 0
 9100 0ace BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 9101 0ad0 1B09     		lsrs	r3, r3, #4
 9102 0ad2 DBB2     		uxtb	r3, r3
 9103 0ad4 1A46     		mov	r2, r3
 9104 0ad6 9200     		lsls	r2, r2, #2
 9105 0ad8 1344     		add	r3, r3, r2
 9106 0ada 5B00     		lsls	r3, r3, #1
 9107 0adc DAB2     		uxtb	r2, r3
 9108 0ade BB7C     		ldrb	r3, [r7, #18]
 9109 0ae0 03F00F03 		and	r3, r3, #15
 9110 0ae4 DBB2     		uxtb	r3, r3
 9111 0ae6 1344     		add	r3, r3, r2
 9112 0ae8 DAB2     		uxtb	r2, r3
 9113 0aea 824B     		ldr	r3, .L464+4
 9114 0aec 83F8A620 		strb	r2, [r3, #166]
1394:..\src/command_processing.c ****             }
1395:..\src/command_processing.c ****             break;             
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 215


 9115              		.loc 1 1395 0
 9116 0af0 00F0B8BC 		b	.L455
 9117              	.L371:
 9118              	.LBB15:
1396:..\src/command_processing.c ****             
1397:..\src/command_processing.c ****         case 32:         //Current Time
1398:..\src/command_processing.c ****             for (uint8 i=0; i<6; i++){
 9119              		.loc 1 1398 0
 9120 0af4 0023     		movs	r3, #0
 9121 0af6 7B75     		strb	r3, [r7, #21]
 9122 0af8 0CE0     		b	.L417
 9123              	.L418:
1399:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9124              		.loc 1 1399 0 discriminator 3
 9125 0afa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9126 0afc 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 9127 0afe 0332     		adds	r2, r2, #3
 9128 0b00 7B49     		ldr	r1, .L464
 9129 0b02 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 9130 0b04 7B4A     		ldr	r2, .L464+4
 9131 0b06 1344     		add	r3, r3, r2
 9132 0b08 0A46     		mov	r2, r1
 9133 0b0a 83F82022 		strb	r2, [r3, #544]
1398:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9134              		.loc 1 1398 0 discriminator 3
 9135 0b0e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9136 0b10 0133     		adds	r3, r3, #1
 9137 0b12 7B75     		strb	r3, [r7, #21]
 9138              	.L417:
1398:..\src/command_processing.c ****                 g_mem.exp.curr_time[i] = g_rx.buffer[3 + i];
 9139              		.loc 1 1398 0 is_stmt 0 discriminator 1
 9140 0b14 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 9141 0b16 052B     		cmp	r3, #5
 9142 0b18 EFD9     		bls	.L418
 9143              	.LBE15:
1400:..\src/command_processing.c ****             }
1401:..\src/command_processing.c ****             
1402:..\src/command_processing.c ****             if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 9144              		.loc 1 1402 0 is_stmt 1
 9145 0b1a 764B     		ldr	r3, .L464+4
 9146 0b1c 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 9147 0b20 012B     		cmp	r3, #1
 9148 0b22 40F0A184 		bne	.L456
1403:..\src/command_processing.c ****                 set_RTC_time();
 9149              		.loc 1 1403 0
 9150 0b26 FFF7FEFF 		bl	set_RTC_time
1404:..\src/command_processing.c ****             }
1405:..\src/command_processing.c ****             break;
 9151              		.loc 1 1405 0
 9152 0b2a 00F09DBC 		b	.L456
 9153              	.L372:
1406:..\src/command_processing.c ****            
1407:..\src/command_processing.c ****         case 38:        // First Motor Driver Type
1408:..\src/command_processing.c ****             g_mem.motor[MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 9154              		.loc 1 1408 0
 9155 0b2e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 9156 0b30 6F4B     		ldr	r3, .L464
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 216


 9157 0b32 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9158 0b34 6F49     		ldr	r1, .L464+4
 9159 0b36 1346     		mov	r3, r2
 9160 0b38 DB00     		lsls	r3, r3, #3
 9161 0b3a 9B1A     		subs	r3, r3, r2
 9162 0b3c 1B01     		lsls	r3, r3, #4
 9163 0b3e 0B44     		add	r3, r3, r1
 9164 0b40 E233     		adds	r3, r3, #226
 9165 0b42 0246     		mov	r2, r0
 9166 0b44 1A70     		strb	r2, [r3]
1409:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 9167              		.loc 1 1409 0
 9168 0b46 6B4B     		ldr	r3, .L464+4
 9169 0b48 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 9170 0b4c 5B00     		lsls	r3, r3, #1
 9171 0b4e 5AB2     		sxtb	r2, r3
 9172 0b50 684B     		ldr	r3, .L464+4
 9173 0b52 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 9174 0b56 5BB2     		sxtb	r3, r3
 9175 0b58 1343     		orrs	r3, r3, r2
 9176 0b5a 5BB2     		sxtb	r3, r3
 9177 0b5c DBB2     		uxtb	r3, r3
 9178 0b5e 1846     		mov	r0, r3
 9179 0b60 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1410:..\src/command_processing.c ****             break;
 9180              		.loc 1 1410 0
 9181 0b64 00F083BC 		b	.L394
 9182              	.L373:
1411:..\src/command_processing.c ****             
1412:..\src/command_processing.c ****         case 44:         // Second Motor Position PID
1413:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
 9183              		.loc 1 1413 0
 9184 0b68 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9185 0b6a 6349     		ldr	r1, .L464+8
 9186 0b6c 1346     		mov	r3, r2
 9187 0b6e DB00     		lsls	r3, r3, #3
 9188 0b70 9B1A     		subs	r3, r3, r2
 9189 0b72 1B01     		lsls	r3, r3, #4
 9190 0b74 0B44     		add	r3, r3, r1
 9191 0b76 03F20F13 		addw	r3, r3, #271
 9192 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9193 0b7c 032B     		cmp	r3, #3
 9194 0b7e 00F08580 		beq	.L420
1414:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9195              		.loc 1 1414 0
 9196 0b82 5E4B     		ldr	r3, .L464+12
 9197 0b84 1B68     		ldr	r3, [r3]	@ float
 9198 0b86 FB60     		str	r3, [r7, #12]	@ float
1415:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9199              		.loc 1 1415 0
 9200 0b88 0023     		movs	r3, #0
 9201 0b8a BB75     		strb	r3, [r7, #22]
 9202 0b8c 0EE0     		b	.L421
 9203              	.L422:
1416:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9204              		.loc 1 1416 0 discriminator 3
 9205 0b8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 217


 9206 0b90 C3F10303 		rsb	r3, r3, #3
 9207 0b94 07F10802 		add	r2, r7, #8
 9208 0b98 1344     		add	r3, r3, r2
 9209 0b9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9210 0b9c 07F10C01 		add	r1, r7, #12
 9211 0ba0 0A44     		add	r2, r2, r1
 9212 0ba2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9213 0ba4 1A70     		strb	r2, [r3]
1415:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9214              		.loc 1 1415 0 discriminator 3
 9215 0ba6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9216 0ba8 0133     		adds	r3, r3, #1
 9217 0baa BB75     		strb	r3, [r7, #22]
 9218              	.L421:
1415:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9219              		.loc 1 1415 0 is_stmt 0 discriminator 1
 9220 0bac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9221 0bae 032B     		cmp	r3, #3
 9222 0bb0 EDD9     		bls	.L422
1417:..\src/command_processing.c ****                 }
1418:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p = aux_float2 * 65536;
 9223              		.loc 1 1418 0 is_stmt 1
 9224 0bb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9225 0bb4 BB68     		ldr	r3, [r7, #8]	@ float
 9226 0bb6 4FF08F41 		mov	r1, #1199570944
 9227 0bba 1846     		mov	r0, r3
 9228 0bbc FFF7FEFF 		bl	__aeabi_fmul
 9229 0bc0 0346     		mov	r3, r0
 9230 0bc2 1846     		mov	r0, r3
 9231 0bc4 FFF7FEFF 		bl	__aeabi_f2iz
 9232 0bc8 0146     		mov	r1, r0
 9233 0bca 4A4A     		ldr	r2, .L464+4
 9234 0bcc 2346     		mov	r3, r4
 9235 0bce DB00     		lsls	r3, r3, #3
 9236 0bd0 1B1B     		subs	r3, r3, r4
 9237 0bd2 1B01     		lsls	r3, r3, #4
 9238 0bd4 1344     		add	r3, r3, r2
 9239 0bd6 B033     		adds	r3, r3, #176
 9240 0bd8 1960     		str	r1, [r3]
1419:..\src/command_processing.c ****                 
1420:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9241              		.loc 1 1420 0
 9242 0bda 494B     		ldr	r3, .L464+16
 9243 0bdc 1B68     		ldr	r3, [r3]	@ float
 9244 0bde FB60     		str	r3, [r7, #12]	@ float
1421:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9245              		.loc 1 1421 0
 9246 0be0 0023     		movs	r3, #0
 9247 0be2 BB75     		strb	r3, [r7, #22]
 9248 0be4 0EE0     		b	.L423
 9249              	.L424:
1422:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9250              		.loc 1 1422 0 discriminator 3
 9251 0be6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9252 0be8 C3F10303 		rsb	r3, r3, #3
 9253 0bec 07F10802 		add	r2, r7, #8
 9254 0bf0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 218


 9255 0bf2 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9256 0bf4 07F10C01 		add	r1, r7, #12
 9257 0bf8 0A44     		add	r2, r2, r1
 9258 0bfa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9259 0bfc 1A70     		strb	r2, [r3]
1421:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9260              		.loc 1 1421 0 discriminator 3
 9261 0bfe BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9262 0c00 0133     		adds	r3, r3, #1
 9263 0c02 BB75     		strb	r3, [r7, #22]
 9264              	.L423:
1421:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9265              		.loc 1 1421 0 is_stmt 0 discriminator 1
 9266 0c04 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9267 0c06 032B     		cmp	r3, #3
 9268 0c08 EDD9     		bls	.L424
1423:..\src/command_processing.c ****                 }
1424:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i = aux_float2 * 65536;
 9269              		.loc 1 1424 0 is_stmt 1
 9270 0c0a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9271 0c0c BB68     		ldr	r3, [r7, #8]	@ float
 9272 0c0e 4FF08F41 		mov	r1, #1199570944
 9273 0c12 1846     		mov	r0, r3
 9274 0c14 FFF7FEFF 		bl	__aeabi_fmul
 9275 0c18 0346     		mov	r3, r0
 9276 0c1a 1846     		mov	r0, r3
 9277 0c1c FFF7FEFF 		bl	__aeabi_f2iz
 9278 0c20 0146     		mov	r1, r0
 9279 0c22 344A     		ldr	r2, .L464+4
 9280 0c24 2346     		mov	r3, r4
 9281 0c26 DB00     		lsls	r3, r3, #3
 9282 0c28 1B1B     		subs	r3, r3, r4
 9283 0c2a 1B01     		lsls	r3, r3, #4
 9284 0c2c 1344     		add	r3, r3, r2
 9285 0c2e B433     		adds	r3, r3, #180
 9286 0c30 1960     		str	r1, [r3]
1425:..\src/command_processing.c ****                 
1426:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9287              		.loc 1 1426 0
 9288 0c32 344B     		ldr	r3, .L464+20
 9289 0c34 1B68     		ldr	r3, [r3]	@ float
 9290 0c36 FB60     		str	r3, [r7, #12]	@ float
1427:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9291              		.loc 1 1427 0
 9292 0c38 0023     		movs	r3, #0
 9293 0c3a BB75     		strb	r3, [r7, #22]
 9294 0c3c 0EE0     		b	.L425
 9295              	.L426:
1428:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9296              		.loc 1 1428 0 discriminator 3
 9297 0c3e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9298 0c40 C3F10303 		rsb	r3, r3, #3
 9299 0c44 07F10802 		add	r2, r7, #8
 9300 0c48 1344     		add	r3, r3, r2
 9301 0c4a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9302 0c4c 07F10C01 		add	r1, r7, #12
 9303 0c50 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 219


 9304 0c52 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9305 0c54 1A70     		strb	r2, [r3]
1427:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9306              		.loc 1 1427 0 discriminator 3
 9307 0c56 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9308 0c58 0133     		adds	r3, r3, #1
 9309 0c5a BB75     		strb	r3, [r7, #22]
 9310              	.L425:
1427:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9311              		.loc 1 1427 0 is_stmt 0 discriminator 1
 9312 0c5c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9313 0c5e 032B     		cmp	r3, #3
 9314 0c60 EDD9     		bls	.L426
1429:..\src/command_processing.c ****                 }
1430:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d = aux_float2 * 65536;
 9315              		.loc 1 1430 0 is_stmt 1
 9316 0c62 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9317 0c64 BB68     		ldr	r3, [r7, #8]	@ float
 9318 0c66 4FF08F41 		mov	r1, #1199570944
 9319 0c6a 1846     		mov	r0, r3
 9320 0c6c FFF7FEFF 		bl	__aeabi_fmul
 9321 0c70 0346     		mov	r3, r0
 9322 0c72 1846     		mov	r0, r3
 9323 0c74 FFF7FEFF 		bl	__aeabi_f2iz
 9324 0c78 0146     		mov	r1, r0
 9325 0c7a 1E4A     		ldr	r2, .L464+4
 9326 0c7c 2346     		mov	r3, r4
 9327 0c7e DB00     		lsls	r3, r3, #3
 9328 0c80 1B1B     		subs	r3, r3, r4
 9329 0c82 1B01     		lsls	r3, r3, #4
 9330 0c84 1344     		add	r3, r3, r2
 9331 0c86 B833     		adds	r3, r3, #184
 9332 0c88 1960     		str	r1, [r3]
1431:..\src/command_processing.c ****             }
1432:..\src/command_processing.c ****             else {
1433:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1434:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1435:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1436:..\src/command_processing.c ****                 }
1437:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_dl = aux_float2 * 65536;
1438:..\src/command_processing.c ****                 
1439:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1440:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1441:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1442:..\src/command_processing.c ****                 }
1443:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_dl = aux_float2 * 65536;
1444:..\src/command_processing.c ****                 
1445:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1446:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1447:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1448:..\src/command_processing.c ****                 }
1449:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_dl = aux_float2 * 65536;
1450:..\src/command_processing.c ****             }
1451:..\src/command_processing.c ****             break;
 9333              		.loc 1 1451 0
 9334 0c8a F0E3     		b	.L394
 9335              	.L420:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 220


1433:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9336              		.loc 1 1433 0
 9337 0c8c 1B4B     		ldr	r3, .L464+12
 9338 0c8e 1B68     		ldr	r3, [r3]	@ float
 9339 0c90 FB60     		str	r3, [r7, #12]	@ float
1434:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9340              		.loc 1 1434 0
 9341 0c92 0023     		movs	r3, #0
 9342 0c94 BB75     		strb	r3, [r7, #22]
 9343 0c96 0EE0     		b	.L428
 9344              	.L429:
1435:..\src/command_processing.c ****                 }
 9345              		.loc 1 1435 0 discriminator 3
 9346 0c98 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9347 0c9a C3F10303 		rsb	r3, r3, #3
 9348 0c9e 07F10802 		add	r2, r7, #8
 9349 0ca2 1344     		add	r3, r3, r2
 9350 0ca4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9351 0ca6 07F10C01 		add	r1, r7, #12
 9352 0caa 0A44     		add	r2, r2, r1
 9353 0cac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9354 0cae 1A70     		strb	r2, [r3]
1434:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9355              		.loc 1 1434 0 discriminator 3
 9356 0cb0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9357 0cb2 0133     		adds	r3, r3, #1
 9358 0cb4 BB75     		strb	r3, [r7, #22]
 9359              	.L428:
1434:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9360              		.loc 1 1434 0 is_stmt 0 discriminator 1
 9361 0cb6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9362 0cb8 032B     		cmp	r3, #3
 9363 0cba EDD9     		bls	.L429
1437:..\src/command_processing.c ****                 
 9364              		.loc 1 1437 0 is_stmt 1
 9365 0cbc FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9366 0cbe BB68     		ldr	r3, [r7, #8]	@ float
 9367 0cc0 4FF08F41 		mov	r1, #1199570944
 9368 0cc4 1846     		mov	r0, r3
 9369 0cc6 FFF7FEFF 		bl	__aeabi_fmul
 9370 0cca 0346     		mov	r3, r0
 9371 0ccc 1846     		mov	r0, r3
 9372 0cce FFF7FEFF 		bl	__aeabi_f2iz
 9373 0cd2 0146     		mov	r1, r0
 9374 0cd4 074A     		ldr	r2, .L464+4
 9375 0cd6 2346     		mov	r3, r4
 9376 0cd8 DB00     		lsls	r3, r3, #3
 9377 0cda 1B1B     		subs	r3, r3, r4
 9378 0cdc 1B01     		lsls	r3, r3, #4
 9379 0cde 1344     		add	r3, r3, r2
 9380 0ce0 C833     		adds	r3, r3, #200
 9381 0ce2 1960     		str	r1, [r3]
1439:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9382              		.loc 1 1439 0
 9383 0ce4 064B     		ldr	r3, .L464+16
 9384 0ce6 1B68     		ldr	r3, [r3]	@ float
 9385 0ce8 FB60     		str	r3, [r7, #12]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 221


1440:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9386              		.loc 1 1440 0
 9387 0cea 0023     		movs	r3, #0
 9388 0cec BB75     		strb	r3, [r7, #22]
 9389 0cee 1AE0     		b	.L430
 9390              	.L465:
 9391              		.align	2
 9392              	.L464:
 9393 0cf0 00000000 		.word	g_rx
 9394 0cf4 00000000 		.word	g_mem
 9395 0cf8 00000000 		.word	c_mem
 9396 0cfc 03000000 		.word	g_rx+3
 9397 0d00 07000000 		.word	g_rx+7
 9398 0d04 0B000000 		.word	g_rx+11
 9399              	.L431:
1441:..\src/command_processing.c ****                 }
 9400              		.loc 1 1441 0 discriminator 3
 9401 0d08 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9402 0d0a C3F10303 		rsb	r3, r3, #3
 9403 0d0e 07F10802 		add	r2, r7, #8
 9404 0d12 1344     		add	r3, r3, r2
 9405 0d14 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9406 0d16 07F10C01 		add	r1, r7, #12
 9407 0d1a 0A44     		add	r2, r2, r1
 9408 0d1c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9409 0d1e 1A70     		strb	r2, [r3]
1440:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9410              		.loc 1 1440 0 discriminator 3
 9411 0d20 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9412 0d22 0133     		adds	r3, r3, #1
 9413 0d24 BB75     		strb	r3, [r7, #22]
 9414              	.L430:
1440:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9415              		.loc 1 1440 0 is_stmt 0 discriminator 1
 9416 0d26 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9417 0d28 032B     		cmp	r3, #3
 9418 0d2a EDD9     		bls	.L431
1443:..\src/command_processing.c ****                 
 9419              		.loc 1 1443 0 is_stmt 1
 9420 0d2c FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9421 0d2e BB68     		ldr	r3, [r7, #8]	@ float
 9422 0d30 4FF08F41 		mov	r1, #1199570944
 9423 0d34 1846     		mov	r0, r3
 9424 0d36 FFF7FEFF 		bl	__aeabi_fmul
 9425 0d3a 0346     		mov	r3, r0
 9426 0d3c 1846     		mov	r0, r3
 9427 0d3e FFF7FEFF 		bl	__aeabi_f2iz
 9428 0d42 0146     		mov	r1, r0
 9429 0d44 B74A     		ldr	r2, .L466
 9430 0d46 2346     		mov	r3, r4
 9431 0d48 DB00     		lsls	r3, r3, #3
 9432 0d4a 1B1B     		subs	r3, r3, r4
 9433 0d4c 1B01     		lsls	r3, r3, #4
 9434 0d4e 1344     		add	r3, r3, r2
 9435 0d50 CC33     		adds	r3, r3, #204
 9436 0d52 1960     		str	r1, [r3]
1445:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 222


 9437              		.loc 1 1445 0
 9438 0d54 B44B     		ldr	r3, .L466+4
 9439 0d56 1B68     		ldr	r3, [r3]	@ float
 9440 0d58 FB60     		str	r3, [r7, #12]	@ float
1446:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9441              		.loc 1 1446 0
 9442 0d5a 0023     		movs	r3, #0
 9443 0d5c BB75     		strb	r3, [r7, #22]
 9444 0d5e 0EE0     		b	.L432
 9445              	.L433:
1447:..\src/command_processing.c ****                 }
 9446              		.loc 1 1447 0 discriminator 3
 9447 0d60 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9448 0d62 C3F10303 		rsb	r3, r3, #3
 9449 0d66 07F10802 		add	r2, r7, #8
 9450 0d6a 1344     		add	r3, r3, r2
 9451 0d6c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9452 0d6e 07F10C01 		add	r1, r7, #12
 9453 0d72 0A44     		add	r2, r2, r1
 9454 0d74 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9455 0d76 1A70     		strb	r2, [r3]
1446:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9456              		.loc 1 1446 0 discriminator 3
 9457 0d78 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9458 0d7a 0133     		adds	r3, r3, #1
 9459 0d7c BB75     		strb	r3, [r7, #22]
 9460              	.L432:
1446:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9461              		.loc 1 1446 0 is_stmt 0 discriminator 1
 9462 0d7e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9463 0d80 032B     		cmp	r3, #3
 9464 0d82 EDD9     		bls	.L433
1449:..\src/command_processing.c ****             }
 9465              		.loc 1 1449 0 is_stmt 1
 9466 0d84 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9467 0d86 BB68     		ldr	r3, [r7, #8]	@ float
 9468 0d88 4FF08F41 		mov	r1, #1199570944
 9469 0d8c 1846     		mov	r0, r3
 9470 0d8e FFF7FEFF 		bl	__aeabi_fmul
 9471 0d92 0346     		mov	r3, r0
 9472 0d94 1846     		mov	r0, r3
 9473 0d96 FFF7FEFF 		bl	__aeabi_f2iz
 9474 0d9a 0146     		mov	r1, r0
 9475 0d9c A14A     		ldr	r2, .L466
 9476 0d9e 2346     		mov	r3, r4
 9477 0da0 DB00     		lsls	r3, r3, #3
 9478 0da2 1B1B     		subs	r3, r3, r4
 9479 0da4 1B01     		lsls	r3, r3, #4
 9480 0da6 1344     		add	r3, r3, r2
 9481 0da8 D033     		adds	r3, r3, #208
 9482 0daa 1960     		str	r1, [r3]
 9483              		.loc 1 1451 0
 9484 0dac 5FE3     		b	.L394
 9485              	.L374:
1452:..\src/command_processing.c ****             
1453:..\src/command_processing.c ****         case 45:         // Second Motor Current PID
1454:..\src/command_processing.c ****             if(c_mem.motor[SECOND_MOTOR_IDX].control_mode != CURR_AND_POS_CONTROL) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 223


 9486              		.loc 1 1454 0
 9487 0dae FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9488 0db0 9E49     		ldr	r1, .L466+8
 9489 0db2 1346     		mov	r3, r2
 9490 0db4 DB00     		lsls	r3, r3, #3
 9491 0db6 9B1A     		subs	r3, r3, r2
 9492 0db8 1B01     		lsls	r3, r3, #4
 9493 0dba 0B44     		add	r3, r3, r1
 9494 0dbc 03F20F13 		addw	r3, r3, #271
 9495 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9496 0dc2 032B     		cmp	r3, #3
 9497 0dc4 00F08580 		beq	.L434
1455:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 9498              		.loc 1 1455 0
 9499 0dc8 994B     		ldr	r3, .L466+12
 9500 0dca 1B68     		ldr	r3, [r3]	@ float
 9501 0dcc FB60     		str	r3, [r7, #12]	@ float
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9502              		.loc 1 1456 0
 9503 0dce 0023     		movs	r3, #0
 9504 0dd0 BB75     		strb	r3, [r7, #22]
 9505 0dd2 0EE0     		b	.L435
 9506              	.L436:
1457:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9507              		.loc 1 1457 0 discriminator 3
 9508 0dd4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9509 0dd6 C3F10303 		rsb	r3, r3, #3
 9510 0dda 07F10802 		add	r2, r7, #8
 9511 0dde 1344     		add	r3, r3, r2
 9512 0de0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9513 0de2 07F10C01 		add	r1, r7, #12
 9514 0de6 0A44     		add	r2, r2, r1
 9515 0de8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9516 0dea 1A70     		strb	r2, [r3]
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9517              		.loc 1 1456 0 discriminator 3
 9518 0dec BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9519 0dee 0133     		adds	r3, r3, #1
 9520 0df0 BB75     		strb	r3, [r7, #22]
 9521              	.L435:
1456:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9522              		.loc 1 1456 0 is_stmt 0 discriminator 1
 9523 0df2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9524 0df4 032B     		cmp	r3, #3
 9525 0df6 EDD9     		bls	.L436
1458:..\src/command_processing.c ****                 }
1459:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c = aux_float2 * 65536;
 9526              		.loc 1 1459 0 is_stmt 1
 9527 0df8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9528 0dfa BB68     		ldr	r3, [r7, #8]	@ float
 9529 0dfc 4FF08F41 		mov	r1, #1199570944
 9530 0e00 1846     		mov	r0, r3
 9531 0e02 FFF7FEFF 		bl	__aeabi_fmul
 9532 0e06 0346     		mov	r3, r0
 9533 0e08 1846     		mov	r0, r3
 9534 0e0a FFF7FEFF 		bl	__aeabi_f2iz
 9535 0e0e 0146     		mov	r1, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 224


 9536 0e10 844A     		ldr	r2, .L466
 9537 0e12 2346     		mov	r3, r4
 9538 0e14 DB00     		lsls	r3, r3, #3
 9539 0e16 1B1B     		subs	r3, r3, r4
 9540 0e18 1B01     		lsls	r3, r3, #4
 9541 0e1a 1344     		add	r3, r3, r2
 9542 0e1c BC33     		adds	r3, r3, #188
 9543 0e1e 1960     		str	r1, [r3]
1460:..\src/command_processing.c ****                 
1461:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 9544              		.loc 1 1461 0
 9545 0e20 844B     		ldr	r3, .L466+16
 9546 0e22 1B68     		ldr	r3, [r3]	@ float
 9547 0e24 FB60     		str	r3, [r7, #12]	@ float
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9548              		.loc 1 1462 0
 9549 0e26 0023     		movs	r3, #0
 9550 0e28 BB75     		strb	r3, [r7, #22]
 9551 0e2a 0EE0     		b	.L437
 9552              	.L438:
1463:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9553              		.loc 1 1463 0 discriminator 3
 9554 0e2c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9555 0e2e C3F10303 		rsb	r3, r3, #3
 9556 0e32 07F10802 		add	r2, r7, #8
 9557 0e36 1344     		add	r3, r3, r2
 9558 0e38 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9559 0e3a 07F10C01 		add	r1, r7, #12
 9560 0e3e 0A44     		add	r2, r2, r1
 9561 0e40 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9562 0e42 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9563              		.loc 1 1462 0 discriminator 3
 9564 0e44 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9565 0e46 0133     		adds	r3, r3, #1
 9566 0e48 BB75     		strb	r3, [r7, #22]
 9567              	.L437:
1462:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9568              		.loc 1 1462 0 is_stmt 0 discriminator 1
 9569 0e4a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9570 0e4c 032B     		cmp	r3, #3
 9571 0e4e EDD9     		bls	.L438
1464:..\src/command_processing.c ****                 }
1465:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c = aux_float2 * 65536;
 9572              		.loc 1 1465 0 is_stmt 1
 9573 0e50 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9574 0e52 BB68     		ldr	r3, [r7, #8]	@ float
 9575 0e54 4FF08F41 		mov	r1, #1199570944
 9576 0e58 1846     		mov	r0, r3
 9577 0e5a FFF7FEFF 		bl	__aeabi_fmul
 9578 0e5e 0346     		mov	r3, r0
 9579 0e60 1846     		mov	r0, r3
 9580 0e62 FFF7FEFF 		bl	__aeabi_f2iz
 9581 0e66 0146     		mov	r1, r0
 9582 0e68 6E4A     		ldr	r2, .L466
 9583 0e6a 2346     		mov	r3, r4
 9584 0e6c DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 225


 9585 0e6e 1B1B     		subs	r3, r3, r4
 9586 0e70 1B01     		lsls	r3, r3, #4
 9587 0e72 1344     		add	r3, r3, r2
 9588 0e74 C033     		adds	r3, r3, #192
 9589 0e76 1960     		str	r1, [r3]
1466:..\src/command_processing.c ****                 
1467:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 9590              		.loc 1 1467 0
 9591 0e78 6B4B     		ldr	r3, .L466+4
 9592 0e7a 1B68     		ldr	r3, [r3]	@ float
 9593 0e7c FB60     		str	r3, [r7, #12]	@ float
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9594              		.loc 1 1468 0
 9595 0e7e 0023     		movs	r3, #0
 9596 0e80 BB75     		strb	r3, [r7, #22]
 9597 0e82 0EE0     		b	.L439
 9598              	.L440:
1469:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9599              		.loc 1 1469 0 discriminator 3
 9600 0e84 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9601 0e86 C3F10303 		rsb	r3, r3, #3
 9602 0e8a 07F10802 		add	r2, r7, #8
 9603 0e8e 1344     		add	r3, r3, r2
 9604 0e90 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9605 0e92 07F10C01 		add	r1, r7, #12
 9606 0e96 0A44     		add	r2, r2, r1
 9607 0e98 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9608 0e9a 1A70     		strb	r2, [r3]
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9609              		.loc 1 1468 0 discriminator 3
 9610 0e9c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9611 0e9e 0133     		adds	r3, r3, #1
 9612 0ea0 BB75     		strb	r3, [r7, #22]
 9613              	.L439:
1468:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9614              		.loc 1 1468 0 is_stmt 0 discriminator 1
 9615 0ea2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9616 0ea4 032B     		cmp	r3, #3
 9617 0ea6 EDD9     		bls	.L440
1470:..\src/command_processing.c ****                 }
1471:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c = aux_float2 * 65536;
 9618              		.loc 1 1471 0 is_stmt 1
 9619 0ea8 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9620 0eaa BB68     		ldr	r3, [r7, #8]	@ float
 9621 0eac 4FF08F41 		mov	r1, #1199570944
 9622 0eb0 1846     		mov	r0, r3
 9623 0eb2 FFF7FEFF 		bl	__aeabi_fmul
 9624 0eb6 0346     		mov	r3, r0
 9625 0eb8 1846     		mov	r0, r3
 9626 0eba FFF7FEFF 		bl	__aeabi_f2iz
 9627 0ebe 0146     		mov	r1, r0
 9628 0ec0 584A     		ldr	r2, .L466
 9629 0ec2 2346     		mov	r3, r4
 9630 0ec4 DB00     		lsls	r3, r3, #3
 9631 0ec6 1B1B     		subs	r3, r3, r4
 9632 0ec8 1B01     		lsls	r3, r3, #4
 9633 0eca 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 226


 9634 0ecc C433     		adds	r3, r3, #196
 9635 0ece 1960     		str	r1, [r3]
1472:..\src/command_processing.c ****             }
1473:..\src/command_processing.c ****             else {
1474:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
1475:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1476:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1477:..\src/command_processing.c ****                 }
1478:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_p_c_dl = aux_float2 * 65536;
1479:..\src/command_processing.c ****                 
1480:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
1481:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1482:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1483:..\src/command_processing.c ****                 }
1484:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_i_c_dl = aux_float2 * 65536;
1485:..\src/command_processing.c ****                 
1486:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
1487:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
1488:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
1489:..\src/command_processing.c ****                 }
1490:..\src/command_processing.c ****                 g_mem.motor[SECOND_MOTOR_IDX].k_d_c_dl = aux_float2 * 65536;
1491:..\src/command_processing.c ****             }            
1492:..\src/command_processing.c ****             break;  
 9636              		.loc 1 1492 0
 9637 0ed0 CDE2     		b	.L394
 9638              	.L434:
1474:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9639              		.loc 1 1474 0
 9640 0ed2 574B     		ldr	r3, .L466+12
 9641 0ed4 1B68     		ldr	r3, [r3]	@ float
 9642 0ed6 FB60     		str	r3, [r7, #12]	@ float
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9643              		.loc 1 1475 0
 9644 0ed8 0023     		movs	r3, #0
 9645 0eda BB75     		strb	r3, [r7, #22]
 9646 0edc 0EE0     		b	.L442
 9647              	.L443:
1476:..\src/command_processing.c ****                 }
 9648              		.loc 1 1476 0 discriminator 3
 9649 0ede BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9650 0ee0 C3F10303 		rsb	r3, r3, #3
 9651 0ee4 07F10802 		add	r2, r7, #8
 9652 0ee8 1344     		add	r3, r3, r2
 9653 0eea BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9654 0eec 07F10C01 		add	r1, r7, #12
 9655 0ef0 0A44     		add	r2, r2, r1
 9656 0ef2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9657 0ef4 1A70     		strb	r2, [r3]
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9658              		.loc 1 1475 0 discriminator 3
 9659 0ef6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9660 0ef8 0133     		adds	r3, r3, #1
 9661 0efa BB75     		strb	r3, [r7, #22]
 9662              	.L442:
1475:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9663              		.loc 1 1475 0 is_stmt 0 discriminator 1
 9664 0efc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 227


 9665 0efe 032B     		cmp	r3, #3
 9666 0f00 EDD9     		bls	.L443
1478:..\src/command_processing.c ****                 
 9667              		.loc 1 1478 0 is_stmt 1
 9668 0f02 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9669 0f04 BB68     		ldr	r3, [r7, #8]	@ float
 9670 0f06 4FF08F41 		mov	r1, #1199570944
 9671 0f0a 1846     		mov	r0, r3
 9672 0f0c FFF7FEFF 		bl	__aeabi_fmul
 9673 0f10 0346     		mov	r3, r0
 9674 0f12 1846     		mov	r0, r3
 9675 0f14 FFF7FEFF 		bl	__aeabi_f2iz
 9676 0f18 0146     		mov	r1, r0
 9677 0f1a 424A     		ldr	r2, .L466
 9678 0f1c 2346     		mov	r3, r4
 9679 0f1e DB00     		lsls	r3, r3, #3
 9680 0f20 1B1B     		subs	r3, r3, r4
 9681 0f22 1B01     		lsls	r3, r3, #4
 9682 0f24 1344     		add	r3, r3, r2
 9683 0f26 D433     		adds	r3, r3, #212
 9684 0f28 1960     		str	r1, [r3]
1480:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9685              		.loc 1 1480 0
 9686 0f2a 424B     		ldr	r3, .L466+16
 9687 0f2c 1B68     		ldr	r3, [r3]	@ float
 9688 0f2e FB60     		str	r3, [r7, #12]	@ float
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9689              		.loc 1 1481 0
 9690 0f30 0023     		movs	r3, #0
 9691 0f32 BB75     		strb	r3, [r7, #22]
 9692 0f34 0EE0     		b	.L444
 9693              	.L445:
1482:..\src/command_processing.c ****                 }
 9694              		.loc 1 1482 0 discriminator 3
 9695 0f36 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9696 0f38 C3F10303 		rsb	r3, r3, #3
 9697 0f3c 07F10802 		add	r2, r7, #8
 9698 0f40 1344     		add	r3, r3, r2
 9699 0f42 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9700 0f44 07F10C01 		add	r1, r7, #12
 9701 0f48 0A44     		add	r2, r2, r1
 9702 0f4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9703 0f4c 1A70     		strb	r2, [r3]
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9704              		.loc 1 1481 0 discriminator 3
 9705 0f4e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9706 0f50 0133     		adds	r3, r3, #1
 9707 0f52 BB75     		strb	r3, [r7, #22]
 9708              	.L444:
1481:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9709              		.loc 1 1481 0 is_stmt 0 discriminator 1
 9710 0f54 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9711 0f56 032B     		cmp	r3, #3
 9712 0f58 EDD9     		bls	.L445
1484:..\src/command_processing.c ****                 
 9713              		.loc 1 1484 0 is_stmt 1
 9714 0f5a FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 228


 9715 0f5c BB68     		ldr	r3, [r7, #8]	@ float
 9716 0f5e 4FF08F41 		mov	r1, #1199570944
 9717 0f62 1846     		mov	r0, r3
 9718 0f64 FFF7FEFF 		bl	__aeabi_fmul
 9719 0f68 0346     		mov	r3, r0
 9720 0f6a 1846     		mov	r0, r3
 9721 0f6c FFF7FEFF 		bl	__aeabi_f2iz
 9722 0f70 0146     		mov	r1, r0
 9723 0f72 2C4A     		ldr	r2, .L466
 9724 0f74 2346     		mov	r3, r4
 9725 0f76 DB00     		lsls	r3, r3, #3
 9726 0f78 1B1B     		subs	r3, r3, r4
 9727 0f7a 1B01     		lsls	r3, r3, #4
 9728 0f7c 1344     		add	r3, r3, r2
 9729 0f7e D833     		adds	r3, r3, #216
 9730 0f80 1960     		str	r1, [r3]
1486:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 9731              		.loc 1 1486 0
 9732 0f82 294B     		ldr	r3, .L466+4
 9733 0f84 1B68     		ldr	r3, [r3]	@ float
 9734 0f86 FB60     		str	r3, [r7, #12]	@ float
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9735              		.loc 1 1487 0
 9736 0f88 0023     		movs	r3, #0
 9737 0f8a BB75     		strb	r3, [r7, #22]
 9738 0f8c 0EE0     		b	.L446
 9739              	.L447:
1488:..\src/command_processing.c ****                 }
 9740              		.loc 1 1488 0 discriminator 3
 9741 0f8e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9742 0f90 C3F10303 		rsb	r3, r3, #3
 9743 0f94 07F10802 		add	r2, r7, #8
 9744 0f98 1344     		add	r3, r3, r2
 9745 0f9a BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 9746 0f9c 07F10C01 		add	r1, r7, #12
 9747 0fa0 0A44     		add	r2, r2, r1
 9748 0fa2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9749 0fa4 1A70     		strb	r2, [r3]
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9750              		.loc 1 1487 0 discriminator 3
 9751 0fa6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9752 0fa8 0133     		adds	r3, r3, #1
 9753 0faa BB75     		strb	r3, [r7, #22]
 9754              	.L446:
1487:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 9755              		.loc 1 1487 0 is_stmt 0 discriminator 1
 9756 0fac BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 9757 0fae 032B     		cmp	r3, #3
 9758 0fb0 EDD9     		bls	.L447
1490:..\src/command_processing.c ****             }            
 9759              		.loc 1 1490 0 is_stmt 1
 9760 0fb2 FC7C     		ldrb	r4, [r7, #19]	@ zero_extendqisi2
 9761 0fb4 BB68     		ldr	r3, [r7, #8]	@ float
 9762 0fb6 4FF08F41 		mov	r1, #1199570944
 9763 0fba 1846     		mov	r0, r3
 9764 0fbc FFF7FEFF 		bl	__aeabi_fmul
 9765 0fc0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 229


 9766 0fc2 1846     		mov	r0, r3
 9767 0fc4 FFF7FEFF 		bl	__aeabi_f2iz
 9768 0fc8 0146     		mov	r1, r0
 9769 0fca 164A     		ldr	r2, .L466
 9770 0fcc 2346     		mov	r3, r4
 9771 0fce DB00     		lsls	r3, r3, #3
 9772 0fd0 1B1B     		subs	r3, r3, r4
 9773 0fd2 1B01     		lsls	r3, r3, #4
 9774 0fd4 1344     		add	r3, r3, r2
 9775 0fd6 DC33     		adds	r3, r3, #220
 9776 0fd8 1960     		str	r1, [r3]
 9777              		.loc 1 1492 0
 9778 0fda 48E2     		b	.L394
 9779              	.L375:
1493:..\src/command_processing.c ****             
1494:..\src/command_processing.c ****         case 47:         // Second Motor Input mode
1495:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].input_mode = g_rx.buffer[3];
 9780              		.loc 1 1495 0
 9781 0fdc FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9782 0fde 164B     		ldr	r3, .L466+20
 9783 0fe0 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 9784 0fe2 1049     		ldr	r1, .L466
 9785 0fe4 1346     		mov	r3, r2
 9786 0fe6 DB00     		lsls	r3, r3, #3
 9787 0fe8 9B1A     		subs	r3, r3, r2
 9788 0fea 1B01     		lsls	r3, r3, #4
 9789 0fec 0B44     		add	r3, r3, r1
 9790 0fee 03F58773 		add	r3, r3, #270
 9791 0ff2 0246     		mov	r2, r0
 9792 0ff4 1A70     		strb	r2, [r3]
1496:..\src/command_processing.c ****             
1497:..\src/command_processing.c ****             // Hold the actual position
1498:..\src/command_processing.c ****             g_refNew[SECOND_MOTOR_IDX].pos = g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].pos
 9793              		.loc 1 1498 0
 9794 0ff6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 9795 0ff8 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9796 0ffa 0A48     		ldr	r0, .L466
 9797 0ffc 1346     		mov	r3, r2
 9798 0ffe DB00     		lsls	r3, r3, #3
 9799 1000 9B1A     		subs	r3, r3, r2
 9800 1002 1B01     		lsls	r3, r3, #4
 9801 1004 0344     		add	r3, r3, r0
 9802 1006 03F58873 		add	r3, r3, #272
 9803 100a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9804 100c 1846     		mov	r0, r3
 9805 100e 0B4A     		ldr	r2, .L466+24
 9806 1010 3423     		movs	r3, #52
 9807 1012 03FB00F3 		mul	r3, r3, r0
 9808 1016 1344     		add	r3, r3, r2
 9809 1018 1A68     		ldr	r2, [r3]
 9810 101a 0948     		ldr	r0, .L466+28
 9811 101c 0B01     		lsls	r3, r1, #4
 9812 101e 0344     		add	r3, r3, r0
 9813 1020 1A60     		str	r2, [r3]
1499:..\src/command_processing.c ****             break;   
 9814              		.loc 1 1499 0
 9815 1022 24E2     		b	.L394
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 230


 9816              	.L467:
 9817              		.align	2
 9818              	.L466:
 9819 1024 00000000 		.word	g_mem
 9820 1028 0B000000 		.word	g_rx+11
 9821 102c 00000000 		.word	c_mem
 9822 1030 03000000 		.word	g_rx+3
 9823 1034 07000000 		.word	g_rx+7
 9824 1038 00000000 		.word	g_rx
 9825 103c 00000000 		.word	g_meas
 9826 1040 00000000 		.word	g_refNew
 9827              	.L376:
1500:..\src/command_processing.c **** 
1501:..\src/command_processing.c ****         case 50:         // Second Motor Measurement Offset
1502:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; i++) {
 9828              		.loc 1 1502 0
 9829 1044 0023     		movs	r3, #0
 9830 1046 FB75     		strb	r3, [r7, #23]
 9831 1048 7EE0     		b	.L448
 9832              	.L449:
1503:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9833              		.loc 1 1503 0 discriminator 3
 9834 104a FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9835 104c 9049     		ldr	r1, .L468
 9836 104e 1346     		mov	r3, r2
 9837 1050 DB00     		lsls	r3, r3, #3
 9838 1052 9B1A     		subs	r3, r3, r2
 9839 1054 1B01     		lsls	r3, r3, #4
 9840 1056 0B44     		add	r3, r3, r1
 9841 1058 03F58873 		add	r3, r3, #272
 9842 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9843 105e 1C46     		mov	r4, r3
 9844 1060 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9845 1062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9846 1064 5B00     		lsls	r3, r3, #1
 9847 1066 0333     		adds	r3, r3, #3
 9848 1068 8A49     		ldr	r1, .L468+4
 9849 106a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9850 106c 1B02     		lsls	r3, r3, #8
 9851 106e 19B2     		sxth	r1, r3
 9852 1070 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9853 1072 0233     		adds	r3, r3, #2
 9854 1074 5B00     		lsls	r3, r3, #1
 9855 1076 8748     		ldr	r0, .L468+4
 9856 1078 C35C     		ldrb	r3, [r0, r3]	@ zero_extendqisi2
 9857 107a 1BB2     		sxth	r3, r3
 9858 107c 0B43     		orrs	r3, r3, r1
 9859 107e 1BB2     		sxth	r3, r3
 9860 1080 1846     		mov	r0, r3
 9861 1082 8349     		ldr	r1, .L468
 9862 1084 2346     		mov	r3, r4
 9863 1086 5B00     		lsls	r3, r3, #1
 9864 1088 2344     		add	r3, r3, r4
 9865 108a 9B00     		lsls	r3, r3, #2
 9866 108c 1344     		add	r3, r3, r2
 9867 108e 6633     		adds	r3, r3, #102
 9868 1090 41F82300 		str	r0, [r1, r3, lsl #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 231


1504:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = g_mem.enc[g_mem.mo
 9869              		.loc 1 1504 0 discriminator 3
 9870 1094 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9871 1096 7E49     		ldr	r1, .L468
 9872 1098 1346     		mov	r3, r2
 9873 109a DB00     		lsls	r3, r3, #3
 9874 109c 9B1A     		subs	r3, r3, r2
 9875 109e 1B01     		lsls	r3, r3, #4
 9876 10a0 0B44     		add	r3, r3, r1
 9877 10a2 03F58873 		add	r3, r3, #272
 9878 10a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9879 10a8 1D46     		mov	r5, r3
 9880 10aa F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 9881 10ac FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9882 10ae 7848     		ldr	r0, .L468
 9883 10b0 1346     		mov	r3, r2
 9884 10b2 DB00     		lsls	r3, r3, #3
 9885 10b4 9B1A     		subs	r3, r3, r2
 9886 10b6 1B01     		lsls	r3, r3, #4
 9887 10b8 0344     		add	r3, r3, r0
 9888 10ba 03F58873 		add	r3, r3, #272
 9889 10be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9890 10c0 1C46     		mov	r4, r3
 9891 10c2 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9892 10c4 7248     		ldr	r0, .L468
 9893 10c6 2346     		mov	r3, r4
 9894 10c8 5B00     		lsls	r3, r3, #1
 9895 10ca 2344     		add	r3, r3, r4
 9896 10cc 9B00     		lsls	r3, r3, #2
 9897 10ce 1344     		add	r3, r3, r2
 9898 10d0 6633     		adds	r3, r3, #102
 9899 10d2 50F82300 		ldr	r0, [r0, r3, lsl #2]
 9900 10d6 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9901 10d8 6D4C     		ldr	r4, .L468
 9902 10da 1346     		mov	r3, r2
 9903 10dc DB00     		lsls	r3, r3, #3
 9904 10de 9B1A     		subs	r3, r3, r2
 9905 10e0 1B01     		lsls	r3, r3, #4
 9906 10e2 2344     		add	r3, r3, r4
 9907 10e4 03F58873 		add	r3, r3, #272
 9908 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9909 10ea 1E46     		mov	r6, r3
 9910 10ec FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 9911 10ee 684C     		ldr	r4, .L468
 9912 10f0 3346     		mov	r3, r6
 9913 10f2 5B00     		lsls	r3, r3, #1
 9914 10f4 3344     		add	r3, r3, r6
 9915 10f6 1B01     		lsls	r3, r3, #4
 9916 10f8 2344     		add	r3, r3, r4
 9917 10fa 1344     		add	r3, r3, r2
 9918 10fc 03F29513 		addw	r3, r3, #405
 9919 1100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9920 1102 00FA03F2 		lsl	r2, r0, r3
 9921 1106 6248     		ldr	r0, .L468
 9922 1108 2B46     		mov	r3, r5
 9923 110a 5B00     		lsls	r3, r3, #1
 9924 110c 2B44     		add	r3, r3, r5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 232


 9925 110e 9B00     		lsls	r3, r3, #2
 9926 1110 0B44     		add	r3, r3, r1
 9927 1112 6633     		adds	r3, r3, #102
 9928 1114 40F82320 		str	r2, [r0, r3, lsl #2]
1505:..\src/command_processing.c **** 
1506:..\src/command_processing.c ****                 g_meas[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].rot[i] = 0;
 9929              		.loc 1 1506 0 discriminator 3
 9930 1118 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9931 111a 5D49     		ldr	r1, .L468
 9932 111c 1346     		mov	r3, r2
 9933 111e DB00     		lsls	r3, r3, #3
 9934 1120 9B1A     		subs	r3, r3, r2
 9935 1122 1B01     		lsls	r3, r3, #4
 9936 1124 0B44     		add	r3, r3, r1
 9937 1126 03F58873 		add	r3, r3, #272
 9938 112a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9939 112c 1846     		mov	r0, r3
 9940 112e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9941 1130 5949     		ldr	r1, .L468+8
 9942 1132 3422     		movs	r2, #52
 9943 1134 02FB00F2 		mul	r2, r2, r0
 9944 1138 0A44     		add	r2, r2, r1
 9945 113a 1344     		add	r3, r3, r2
 9946 113c 1833     		adds	r3, r3, #24
 9947 113e 0022     		movs	r2, #0
 9948 1140 1A70     		strb	r2, [r3]
1502:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9949              		.loc 1 1502 0 discriminator 3
 9950 1142 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9951 1144 0133     		adds	r3, r3, #1
 9952 1146 FB75     		strb	r3, [r7, #23]
 9953              	.L448:
1502:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].m_off[i] = (int16)(g_rx.buffe
 9954              		.loc 1 1502 0 is_stmt 0 discriminator 1
 9955 1148 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 9956 114a 022B     		cmp	r3, #2
 9957 114c 7FF67DAF 		bls	.L449
1507:..\src/command_processing.c ****             }
1508:..\src/command_processing.c ****             reset_last_value_flag = 1;
 9958              		.loc 1 1508 0 is_stmt 1
 9959 1150 524B     		ldr	r3, .L468+12
 9960 1152 0122     		movs	r2, #1
 9961 1154 1A70     		strb	r2, [r3]
1509:..\src/command_processing.c ****             break;
 9962              		.loc 1 1509 0
 9963 1156 8AE1     		b	.L394
 9964              	.L377:
1510:..\src/command_processing.c ****     
1511:..\src/command_processing.c ****         case 53:        // Second Motor Position limits
1512:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]
 9965              		.loc 1 1512 0
 9966 1158 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9967 115a 4E4B     		ldr	r3, .L468+4
 9968 115c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9969 115e 1906     		lsls	r1, r3, #24
 9970 1160 4C4B     		ldr	r3, .L468+4
 9971 1162 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 233


 9972 1164 1B04     		lsls	r3, r3, #16
 9973 1166 1943     		orrs	r1, r1, r3
 9974 1168 4A4B     		ldr	r3, .L468+4
 9975 116a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 9976 116c 1B02     		lsls	r3, r3, #8
 9977 116e 0B43     		orrs	r3, r3, r1
 9978 1170 4849     		ldr	r1, .L468+4
 9979 1172 8979     		ldrb	r1, [r1, #6]	@ zero_extendqisi2
 9980 1174 1943     		orrs	r1, r1, r3
 9981 1176 4648     		ldr	r0, .L468
 9982 1178 1346     		mov	r3, r2
 9983 117a DB00     		lsls	r3, r3, #3
 9984 117c 9B1A     		subs	r3, r3, r2
 9985 117e 1B01     		lsls	r3, r3, #4
 9986 1180 0344     		add	r3, r3, r0
 9987 1182 E433     		adds	r3, r3, #228
 9988 1184 1960     		str	r1, [r3]
1513:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]
 9989              		.loc 1 1513 0
 9990 1186 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 9991 1188 424B     		ldr	r3, .L468+4
 9992 118a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 9993 118c 1906     		lsls	r1, r3, #24
 9994 118e 414B     		ldr	r3, .L468+4
 9995 1190 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 9996 1192 1B04     		lsls	r3, r3, #16
 9997 1194 1943     		orrs	r1, r1, r3
 9998 1196 3F4B     		ldr	r3, .L468+4
 9999 1198 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 10000 119a 1B02     		lsls	r3, r3, #8
 10001 119c 0B43     		orrs	r3, r3, r1
 10002 119e 3D49     		ldr	r1, .L468+4
 10003 11a0 897A     		ldrb	r1, [r1, #10]	@ zero_extendqisi2
 10004 11a2 1943     		orrs	r1, r1, r3
 10005 11a4 3A48     		ldr	r0, .L468
 10006 11a6 1346     		mov	r3, r2
 10007 11a8 DB00     		lsls	r3, r3, #3
 10008 11aa 9B1A     		subs	r3, r3, r2
 10009 11ac 1B01     		lsls	r3, r3, #4
 10010 11ae 0344     		add	r3, r3, r0
 10011 11b0 E833     		adds	r3, r3, #232
 10012 11b2 1960     		str	r1, [r3]
1514:..\src/command_processing.c **** 
1515:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_inf <
 10013              		.loc 1 1515 0
 10014 11b4 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10015 11b6 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10016 11b8 3548     		ldr	r0, .L468
 10017 11ba 0B46     		mov	r3, r1
 10018 11bc DB00     		lsls	r3, r3, #3
 10019 11be 5B1A     		subs	r3, r3, r1
 10020 11c0 1B01     		lsls	r3, r3, #4
 10021 11c2 0344     		add	r3, r3, r0
 10022 11c4 E433     		adds	r3, r3, #228
 10023 11c6 1868     		ldr	r0, [r3]
 10024 11c8 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10025 11ca 314C     		ldr	r4, .L468
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 234


 10026 11cc 0B46     		mov	r3, r1
 10027 11ce DB00     		lsls	r3, r3, #3
 10028 11d0 5B1A     		subs	r3, r3, r1
 10029 11d2 1B01     		lsls	r3, r3, #4
 10030 11d4 2344     		add	r3, r3, r4
 10031 11d6 03F58873 		add	r3, r3, #272
 10032 11da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10033 11dc 1C46     		mov	r4, r3
 10034 11de 2C49     		ldr	r1, .L468
 10035 11e0 2346     		mov	r3, r4
 10036 11e2 5B00     		lsls	r3, r3, #1
 10037 11e4 2344     		add	r3, r3, r4
 10038 11e6 1B01     		lsls	r3, r3, #4
 10039 11e8 0B44     		add	r3, r3, r1
 10040 11ea 03F29513 		addw	r3, r3, #405
 10041 11ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10042 11f0 00FA03F1 		lsl	r1, r0, r3
 10043 11f4 2648     		ldr	r0, .L468
 10044 11f6 1346     		mov	r3, r2
 10045 11f8 DB00     		lsls	r3, r3, #3
 10046 11fa 9B1A     		subs	r3, r3, r2
 10047 11fc 1B01     		lsls	r3, r3, #4
 10048 11fe 0344     		add	r3, r3, r0
 10049 1200 E433     		adds	r3, r3, #228
 10050 1202 1960     		str	r1, [r3]
1516:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup = g_mem.motor[SECOND_MOTOR_IDX].pos_lim_sup <
 10051              		.loc 1 1516 0
 10052 1204 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10053 1206 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10054 1208 2148     		ldr	r0, .L468
 10055 120a 0B46     		mov	r3, r1
 10056 120c DB00     		lsls	r3, r3, #3
 10057 120e 5B1A     		subs	r3, r3, r1
 10058 1210 1B01     		lsls	r3, r3, #4
 10059 1212 0344     		add	r3, r3, r0
 10060 1214 E833     		adds	r3, r3, #232
 10061 1216 1868     		ldr	r0, [r3]
 10062 1218 F97C     		ldrb	r1, [r7, #19]	@ zero_extendqisi2
 10063 121a 1D4C     		ldr	r4, .L468
 10064 121c 0B46     		mov	r3, r1
 10065 121e DB00     		lsls	r3, r3, #3
 10066 1220 5B1A     		subs	r3, r3, r1
 10067 1222 1B01     		lsls	r3, r3, #4
 10068 1224 2344     		add	r3, r3, r4
 10069 1226 03F58873 		add	r3, r3, #272
 10070 122a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10071 122c 1C46     		mov	r4, r3
 10072 122e 1849     		ldr	r1, .L468
 10073 1230 2346     		mov	r3, r4
 10074 1232 5B00     		lsls	r3, r3, #1
 10075 1234 2344     		add	r3, r3, r4
 10076 1236 1B01     		lsls	r3, r3, #4
 10077 1238 0B44     		add	r3, r3, r1
 10078 123a 03F29513 		addw	r3, r3, #405
 10079 123e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10080 1240 00FA03F1 		lsl	r1, r0, r3
 10081 1244 1248     		ldr	r0, .L468
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 235


 10082 1246 1346     		mov	r3, r2
 10083 1248 DB00     		lsls	r3, r3, #3
 10084 124a 9B1A     		subs	r3, r3, r2
 10085 124c 1B01     		lsls	r3, r3, #4
 10086 124e 0344     		add	r3, r3, r0
 10087 1250 E833     		adds	r3, r3, #232
 10088 1252 1960     		str	r1, [r3]
1517:..\src/command_processing.c ****             break;
 10089              		.loc 1 1517 0
 10090 1254 0BE1     		b	.L394
 10091              	.L378:
1518:..\src/command_processing.c ****             
1519:..\src/command_processing.c ****         case 61:        // Second Motor Driver Type
1520:..\src/command_processing.c ****             g_mem.motor[SECOND_MOTOR_IDX].motor_driver_type = g_rx.buffer[3];
 10092              		.loc 1 1520 0
 10093 1256 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10094 1258 0E4B     		ldr	r3, .L468+4
 10095 125a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 10096 125c 0C49     		ldr	r1, .L468
 10097 125e 1346     		mov	r3, r2
 10098 1260 DB00     		lsls	r3, r3, #3
 10099 1262 9B1A     		subs	r3, r3, r2
 10100 1264 1B01     		lsls	r3, r3, #4
 10101 1266 0B44     		add	r3, r3, r1
 10102 1268 E233     		adds	r3, r3, #226
 10103 126a 0246     		mov	r2, r0
 10104 126c 1A70     		strb	r2, [r3]
1521:..\src/command_processing.c ****             MOTOR_DRIVER_TYPE_Write((g_mem.motor[1].motor_driver_type << 1) | g_mem.motor[0].motor_
 10105              		.loc 1 1521 0
 10106 126e 084B     		ldr	r3, .L468
 10107 1270 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 10108 1274 5B00     		lsls	r3, r3, #1
 10109 1276 5AB2     		sxtb	r2, r3
 10110 1278 054B     		ldr	r3, .L468
 10111 127a 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 10112 127e 5BB2     		sxtb	r3, r3
 10113 1280 1343     		orrs	r3, r3, r2
 10114 1282 5BB2     		sxtb	r3, r3
 10115 1284 DBB2     		uxtb	r3, r3
 10116 1286 1846     		mov	r0, r3
 10117 1288 FFF7FEFF 		bl	MOTOR_DRIVER_TYPE_Write
1522:..\src/command_processing.c ****             break;
 10118              		.loc 1 1522 0
 10119 128c EFE0     		b	.L394
 10120              	.L469:
 10121 128e 00BF     		.align	2
 10122              	.L468:
 10123 1290 00000000 		.word	g_mem
 10124 1294 00000000 		.word	g_rx
 10125 1298 00000000 		.word	g_meas
 10126 129c 00000000 		.word	reset_last_value_flag
 10127              	.L379:
1523:..\src/command_processing.c **** 
1524:..\src/command_processing.c ****         case 71:        // Device type
1525:..\src/command_processing.c ****             g_mem.dev.dev_type = g_rx.buffer[3];
 10128              		.loc 1 1525 0
 10129 12a0 754B     		ldr	r3, .L470
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 236


 10130 12a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 10131 12a4 754B     		ldr	r3, .L470+4
 10132 12a6 83F8AC20 		strb	r2, [r3, #172]
1526:..\src/command_processing.c ****             
1527:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_PRO){    // change also gears parameters
 10133              		.loc 1 1527 0
 10134 12aa 744B     		ldr	r3, .L470+4
 10135 12ac 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10136 12b0 002B     		cmp	r3, #0
 10137 12b2 40F09D80 		bne	.L450
1528:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10138              		.loc 1 1528 0
 10139 12b6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10140 12b8 7049     		ldr	r1, .L470+4
 10141 12ba 1346     		mov	r3, r2
 10142 12bc DB00     		lsls	r3, r3, #3
 10143 12be 9B1A     		subs	r3, r3, r2
 10144 12c0 1B01     		lsls	r3, r3, #4
 10145 12c2 0B44     		add	r3, r3, r1
 10146 12c4 03F58873 		add	r3, r3, #272
 10147 12c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10148 12ca 1946     		mov	r1, r3
 10149 12cc 6B4A     		ldr	r2, .L470+4
 10150 12ce 0B46     		mov	r3, r1
 10151 12d0 5B00     		lsls	r3, r3, #1
 10152 12d2 0B44     		add	r3, r3, r1
 10153 12d4 1B01     		lsls	r3, r3, #4
 10154 12d6 1344     		add	r3, r3, r2
 10155 12d8 03F5D873 		add	r3, r3, #432
 10156 12dc 0122     		movs	r2, #1
 10157 12de 1A70     		strb	r2, [r3]
1529:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[0] = SH_N1;
 10158              		.loc 1 1529 0
 10159 12e0 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10160 12e2 6649     		ldr	r1, .L470+4
 10161 12e4 1346     		mov	r3, r2
 10162 12e6 DB00     		lsls	r3, r3, #3
 10163 12e8 9B1A     		subs	r3, r3, r2
 10164 12ea 1B01     		lsls	r3, r3, #4
 10165 12ec 0B44     		add	r3, r3, r1
 10166 12ee 03F58873 		add	r3, r3, #272
 10167 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10168 12f4 1946     		mov	r1, r3
 10169 12f6 614A     		ldr	r2, .L470+4
 10170 12f8 0B46     		mov	r3, r1
 10171 12fa 5B00     		lsls	r3, r3, #1
 10172 12fc 0B44     		add	r3, r3, r1
 10173 12fe 1B01     		lsls	r3, r3, #4
 10174 1300 1344     		add	r3, r3, r2
 10175 1302 03F2B513 		addw	r3, r3, #437
 10176 1306 2322     		movs	r2, #35
 10177 1308 1A70     		strb	r2, [r3]
1530:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[1] = SH_N2;
 10178              		.loc 1 1530 0
 10179 130a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10180 130c 5B49     		ldr	r1, .L470+4
 10181 130e 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 237


 10182 1310 DB00     		lsls	r3, r3, #3
 10183 1312 9B1A     		subs	r3, r3, r2
 10184 1314 1B01     		lsls	r3, r3, #4
 10185 1316 0B44     		add	r3, r3, r1
 10186 1318 03F58873 		add	r3, r3, #272
 10187 131c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10188 131e 1946     		mov	r1, r3
 10189 1320 564A     		ldr	r2, .L470+4
 10190 1322 0B46     		mov	r3, r1
 10191 1324 5B00     		lsls	r3, r3, #1
 10192 1326 0B44     		add	r3, r3, r1
 10193 1328 1B01     		lsls	r3, r3, #4
 10194 132a 1344     		add	r3, r3, r2
 10195 132c 03F5DB73 		add	r3, r3, #438
 10196 1330 0322     		movs	r2, #3
 10197 1332 1A70     		strb	r2, [r3]
1531:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].gears_params[2] = SH_I1;
 10198              		.loc 1 1531 0
 10199 1334 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10200 1336 5149     		ldr	r1, .L470+4
 10201 1338 1346     		mov	r3, r2
 10202 133a DB00     		lsls	r3, r3, #3
 10203 133c 9B1A     		subs	r3, r3, r2
 10204 133e 1B01     		lsls	r3, r3, #4
 10205 1340 0B44     		add	r3, r3, r1
 10206 1342 03F58873 		add	r3, r3, #272
 10207 1346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10208 1348 1946     		mov	r1, r3
 10209 134a 4C4A     		ldr	r2, .L470+4
 10210 134c 0B46     		mov	r3, r1
 10211 134e 5B00     		lsls	r3, r3, #1
 10212 1350 0B44     		add	r3, r3, r1
 10213 1352 1B01     		lsls	r3, r3, #4
 10214 1354 1344     		add	r3, r3, r2
 10215 1356 03F2B713 		addw	r3, r3, #439
 10216 135a FF22     		movs	r2, #255
 10217 135c 1A70     		strb	r2, [r3]
1532:..\src/command_processing.c ****                 
1533:..\src/command_processing.c ****                 // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
1534:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 10218              		.loc 1 1534 0
 10219 135e 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10220 1360 464B     		ldr	r3, .L470+4
 10221 1362 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 10222 1366 4549     		ldr	r1, .L470+4
 10223 1368 1346     		mov	r3, r2
 10224 136a DB00     		lsls	r3, r3, #3
 10225 136c 9B1A     		subs	r3, r3, r2
 10226 136e 1B01     		lsls	r3, r3, #4
 10227 1370 0B44     		add	r3, r3, r1
 10228 1372 03F58873 		add	r3, r3, #272
 10229 1376 0246     		mov	r2, r0
 10230 1378 1A70     		strb	r2, [r3]
1535:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 10231              		.loc 1 1535 0
 10232 137a 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10233 137c 3F49     		ldr	r1, .L470+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 238


 10234 137e 1346     		mov	r3, r2
 10235 1380 DB00     		lsls	r3, r3, #3
 10236 1382 9B1A     		subs	r3, r3, r2
 10237 1384 1B01     		lsls	r3, r3, #4
 10238 1386 0B44     		add	r3, r3, r1
 10239 1388 03F21113 		addw	r3, r3, #273
 10240 138c 0122     		movs	r2, #1
 10241 138e 1A70     		strb	r2, [r3]
1536:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversib
 10242              		.loc 1 1536 0
 10243 1390 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10244 1392 3A49     		ldr	r1, .L470+4
 10245 1394 1346     		mov	r3, r2
 10246 1396 DB00     		lsls	r3, r3, #3
 10247 1398 9B1A     		subs	r3, r3, r2
 10248 139a 1B01     		lsls	r3, r3, #4
 10249 139c 0B44     		add	r3, r3, r1
 10250 139e 03F58973 		add	r3, r3, #274
 10251 13a2 0122     		movs	r2, #1
 10252 13a4 1A70     		strb	r2, [r3]
1537:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 10253              		.loc 1 1537 0
 10254 13a6 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10255 13a8 3449     		ldr	r1, .L470+4
 10256 13aa 1346     		mov	r3, r2
 10257 13ac DB00     		lsls	r3, r3, #3
 10258 13ae 9B1A     		subs	r3, r3, r2
 10259 13b0 1B01     		lsls	r3, r3, #4
 10260 13b2 0B44     		add	r3, r3, r1
 10261 13b4 E433     		adds	r3, r3, #228
 10262 13b6 0022     		movs	r2, #0
 10263 13b8 1A60     		str	r2, [r3]
1538:..\src/command_processing.c ****                 g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[0].encod
 10264              		.loc 1 1538 0
 10265 13ba 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10266 13bc 2F4B     		ldr	r3, .L470+4
 10267 13be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 10268 13c2 1846     		mov	r0, r3
 10269 13c4 2D49     		ldr	r1, .L470+4
 10270 13c6 0346     		mov	r3, r0
 10271 13c8 5B00     		lsls	r3, r3, #1
 10272 13ca 0344     		add	r3, r3, r0
 10273 13cc 1B01     		lsls	r3, r3, #4
 10274 13ce 0B44     		add	r3, r3, r1
 10275 13d0 03F29513 		addw	r3, r3, #405
 10276 13d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10277 13d6 1946     		mov	r1, r3
 10278 13d8 4FF47A53 		mov	r3, #16000
 10279 13dc 03FA01F1 		lsl	r1, r3, r1
 10280 13e0 2648     		ldr	r0, .L470+4
 10281 13e2 1346     		mov	r3, r2
 10282 13e4 DB00     		lsls	r3, r3, #3
 10283 13e6 9B1A     		subs	r3, r3, r2
 10284 13e8 1B01     		lsls	r3, r3, #4
 10285 13ea 0344     		add	r3, r3, r0
 10286 13ec E833     		adds	r3, r3, #232
 10287 13ee 1960     		str	r1, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 239


 10288              	.L450:
1539:..\src/command_processing.c ****             }      
1540:..\src/command_processing.c ****             
1541:..\src/command_processing.c ****             if (g_mem.dev.dev_type == SOFTHAND_2_MOTORS){    // activate also 2nd motor and double_
 10289              		.loc 1 1541 0
 10290 13f0 224B     		ldr	r3, .L470+4
 10291 13f2 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 10292 13f6 042B     		cmp	r3, #4
 10293 13f8 38D1     		bne	.L457
1542:..\src/command_processing.c ****                 g_mem.dev.use_2nd_motor_flag = TRUE;
 10294              		.loc 1 1542 0
 10295 13fa 204B     		ldr	r3, .L470+4
 10296 13fc 0122     		movs	r2, #1
 10297 13fe 83F8A920 		strb	r2, [r3, #169]
1543:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10298              		.loc 1 1543 0
 10299 1402 3A7D     		ldrb	r2, [r7, #20]	@ zero_extendqisi2
 10300 1404 1D49     		ldr	r1, .L470+4
 10301 1406 1346     		mov	r3, r2
 10302 1408 DB00     		lsls	r3, r3, #3
 10303 140a 9B1A     		subs	r3, r3, r2
 10304 140c 1B01     		lsls	r3, r3, #4
 10305 140e 0B44     		add	r3, r3, r1
 10306 1410 03F58873 		add	r3, r3, #272
 10307 1414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10308 1416 1946     		mov	r1, r3
 10309 1418 184A     		ldr	r2, .L470+4
 10310 141a 0B46     		mov	r3, r1
 10311 141c 5B00     		lsls	r3, r3, #1
 10312 141e 0B44     		add	r3, r3, r1
 10313 1420 1B01     		lsls	r3, r3, #4
 10314 1422 1344     		add	r3, r3, r2
 10315 1424 03F5D873 		add	r3, r3, #432
 10316 1428 0122     		movs	r2, #1
 10317 142a 1A70     		strb	r2, [r3]
1544:..\src/command_processing.c ****                 g_mem.enc[g_mem.motor[SECOND_MOTOR_IDX].encoder_line].double_encoder_on_off = TRUE;
 10318              		.loc 1 1544 0
 10319 142c FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 10320 142e 1349     		ldr	r1, .L470+4
 10321 1430 1346     		mov	r3, r2
 10322 1432 DB00     		lsls	r3, r3, #3
 10323 1434 9B1A     		subs	r3, r3, r2
 10324 1436 1B01     		lsls	r3, r3, #4
 10325 1438 0B44     		add	r3, r3, r1
 10326 143a 03F58873 		add	r3, r3, #272
 10327 143e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10328 1440 1946     		mov	r1, r3
 10329 1442 0E4A     		ldr	r2, .L470+4
 10330 1444 0B46     		mov	r3, r1
 10331 1446 5B00     		lsls	r3, r3, #1
 10332 1448 0B44     		add	r3, r3, r1
 10333 144a 1B01     		lsls	r3, r3, #4
 10334 144c 1344     		add	r3, r3, r2
 10335 144e 03F5D873 		add	r3, r3, #432
 10336 1452 0122     		movs	r2, #1
 10337 1454 1A70     		strb	r2, [r3]
1545:..\src/command_processing.c ****             }      
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 240


1546:..\src/command_processing.c ****             
1547:..\src/command_processing.c ****             break;
 10338              		.loc 1 1547 0
 10339 1456 09E0     		b	.L457
 10340              	.L452:
1548:..\src/command_processing.c ****             
1549:..\src/command_processing.c ****         default:
1550:..\src/command_processing.c ****             break;
 10341              		.loc 1 1550 0
 10342 1458 00BF     		nop
 10343 145a 08E0     		b	.L394
 10344              	.L453:
1349:..\src/command_processing.c ****             
 10345              		.loc 1 1349 0
 10346 145c 00BF     		nop
 10347 145e 06E0     		b	.L394
 10348              	.L454:
1377:..\src/command_processing.c **** 
 10349              		.loc 1 1377 0
 10350 1460 00BF     		nop
 10351 1462 04E0     		b	.L394
 10352              	.L455:
1395:..\src/command_processing.c ****             
 10353              		.loc 1 1395 0
 10354 1464 00BF     		nop
 10355 1466 02E0     		b	.L394
 10356              	.L456:
1405:..\src/command_processing.c ****            
 10357              		.loc 1 1405 0
 10358 1468 00BF     		nop
 10359 146a 00E0     		b	.L394
 10360              	.L457:
1547:..\src/command_processing.c ****             
 10361              		.loc 1 1547 0
 10362 146c 00BF     		nop
 10363              	.L394:
1551:..\src/command_processing.c ****     }
1552:..\src/command_processing.c **** }
 10364              		.loc 1 1552 0 discriminator 1
 10365 146e 00BF     		nop
 10366 1470 1C37     		adds	r7, r7, #28
 10367              		.cfi_def_cfa_offset 20
 10368 1472 BD46     		mov	sp, r7
 10369              		.cfi_def_cfa_register 13
 10370              		@ sp needed
 10371 1474 F0BD     		pop	{r4, r5, r6, r7, pc}
 10372              	.L471:
 10373 1476 00BF     		.align	2
 10374              	.L470:
 10375 1478 00000000 		.word	g_rx
 10376 147c 00000000 		.word	g_mem
 10377              		.cfi_endproc
 10378              	.LFE69:
 10379              		.size	set_custom_param, .-set_custom_param
 10380              		.section	.rodata
 10381 0f7e 0000     		.align	2
 10382              	.LC136:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 241


 10383 0f80 506F7274 		.ascii	"Port %u ID:\000"
 10383      20257520 
 10383      49443A00 
 10384              		.align	2
 10385              	.LC137:
 10386 0f8c 2575202D 		.ascii	"%u - Device ID:\000"
 10386      20446576 
 10386      69636520 
 10386      49443A00 
 10387              		.align	2
 10388              	.LC138:
 10389 0f9c 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 10389      20494D55 
 10389      20256420 
 10389      636F6E66 
 10389      69677572 
 10390 0fb7 00       		.align	2
 10391              	.LC139:
 10392 0fb8 2575202D 		.ascii	"%u - SPI read delay:\000"
 10392      20535049 
 10392      20726561 
 10392      64206465 
 10392      6C61793A 
 10393 0fcd 000000   		.align	2
 10394              	.LC140:
 10395 0fd0 204E6F6E 		.ascii	" None\000"
 10395      6500
 10396 0fd6 0000     		.align	2
 10397              	.LC141:
 10398 0fd8 204C6F77 		.ascii	" Low\000"
 10398      00
 10399 0fdd 000000   		.align	2
 10400              	.LC142:
 10401 0fe0 20486967 		.ascii	" High\000"
 10401      6800
 10402 0fe6 0000     		.align	2
 10403              	.LC134:
 10404 0fe8 4E756D62 		.ascii	"Number of connected IMUs:\000"
 10404      6572206F 
 10404      6620636F 
 10404      6E6E6563 
 10404      74656420 
 10405 1002 0000     		.align	2
 10406              	.LC135:
 10407 1004 4D616720 		.ascii	"Mag cal parameters:\000"
 10407      63616C20 
 10407      70617261 
 10407      6D657465 
 10407      72733A00 
 10408              		.section	.text.get_IMU_param_list,"ax",%progbits
 10409              		.align	2
 10410              		.global	get_IMU_param_list
 10411              		.thumb
 10412              		.thumb_func
 10413              		.type	get_IMU_param_list, %function
 10414              	get_IMU_param_list:
 10415              	.LFB70:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 242


1553:..\src/command_processing.c **** 
1554:..\src/command_processing.c **** //==============================================================================
1555:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1556:..\src/command_processing.c **** //==============================================================================
1557:..\src/command_processing.c **** 
1558:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1559:..\src/command_processing.c **** {
 10416              		.loc 1 1559 0
 10417              		.cfi_startproc
 10418              		@ args = 0, pretend = 0, frame = 1704
 10419              		@ frame_needed = 1, uses_anonymous_args = 0
 10420 0000 B0B5     		push	{r4, r5, r7, lr}
 10421              		.cfi_def_cfa_offset 16
 10422              		.cfi_offset 4, -16
 10423              		.cfi_offset 5, -12
 10424              		.cfi_offset 7, -8
 10425              		.cfi_offset 14, -4
 10426 0002 ADF5D56D 		sub	sp, sp, #1704
 10427              		.cfi_def_cfa_offset 1720
 10428 0006 00AF     		add	r7, sp, #0
 10429              		.cfi_def_cfa_register 7
 10430 0008 0246     		mov	r2, r0
 10431 000a BB1D     		adds	r3, r7, #6
 10432 000c 1A80     		strh	r2, [r3]	@ movhi
1560:..\src/command_processing.c ****     //Package to be sent variables
1561:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 10433              		.loc 1 1561 0
 10434 000e 07F58A73 		add	r3, r7, #276
 10435 0012 0022     		movs	r2, #0
 10436 0014 1A60     		str	r2, [r3]
 10437 0016 0433     		adds	r3, r3, #4
 10438 0018 40F27552 		movw	r2, #1397
 10439 001c 0021     		movs	r1, #0
 10440 001e 1846     		mov	r0, r3
 10441 0020 FFF7FEFF 		bl	memset
1562:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1563:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1564:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1565:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1566:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1567:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1568:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 10442              		.loc 1 1568 0
 10443 0024 0723     		movs	r3, #7
 10444 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1569:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 10445              		.loc 1 1569 0
 10446 002a 0023     		movs	r3, #0
 10447 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1570:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 10448              		.loc 1 1570 0
 10449 0030 0223     		movs	r3, #2
 10450 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1571:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10451              		.loc 1 1571 0
 10452 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 10453 003a 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 243


1572:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 10454              		.loc 1 1572 0
 10455 003c B7F8A636 		ldrh	r3, [r7, #1702]
 10456 0040 1344     		add	r3, r3, r2
1573:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 10457              		.loc 1 1573 0
 10458 0042 0133     		adds	r3, r3, #1
1571:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 10459              		.loc 1 1571 0
 10460 0044 9AB2     		uxth	r2, r3
 10461 0046 D24B     		ldr	r3, .L518
 10462 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10463 004a 9BB2     		uxth	r3, r3
 10464 004c 1344     		add	r3, r3, r2
 10465 004e 9BB2     		uxth	r3, r3
 10466 0050 1A46     		mov	r2, r3	@ movhi
 10467 0052 9200     		lsls	r2, r2, #2
 10468 0054 1344     		add	r3, r3, r2
 10469 0056 1A46     		mov	r2, r3	@ movhi
 10470 0058 9100     		lsls	r1, r2, #2
 10471 005a 1A46     		mov	r2, r3	@ movhi
 10472 005c 0B46     		mov	r3, r1	@ movhi
 10473 005e 1344     		add	r3, r3, r2
 10474 0060 5B00     		lsls	r3, r3, #1
 10475 0062 9BB2     		uxth	r3, r3
 10476 0064 FB33     		adds	r3, r3, #251
 10477 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1574:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1575:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1576:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1577:..\src/command_processing.c **** 
1578:..\src/command_processing.c ****     //Auxiliary variables
1579:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1580:..\src/command_processing.c ****     uint16 start_byte = 0;
 10478              		.loc 1 1580 0
 10479 006a 0023     		movs	r3, #0
 10480 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1581:..\src/command_processing.c **** 
1582:..\src/command_processing.c ****     //Parameters menu string definitions
1583:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 10481              		.loc 1 1583 0
 10482 0070 07F1F803 		add	r3, r7, #248
 10483 0074 C74A     		ldr	r2, .L518+4
 10484 0076 1C46     		mov	r4, r3
 10485 0078 1546     		mov	r5, r2
 10486 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10487 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10488 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 10489 0082 03C4     		stmia	r4!, {r0, r1}
 10490 0084 2280     		strh	r2, [r4]	@ movhi
1584:..\src/command_processing.c ****     char ids_str[11]            = "";
 10491              		.loc 1 1584 0
 10492 0086 07F1EC03 		add	r3, r7, #236
 10493 008a 0022     		movs	r2, #0
 10494 008c 1A60     		str	r2, [r3]
 10495 008e 0433     		adds	r3, r3, #4
 10496 0090 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 244


 10497 0092 1A60     		str	r2, [r3]
 10498 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1585:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 10499              		.loc 1 1585 0
 10500 0098 07F1D803 		add	r3, r7, #216
 10501 009c BE4A     		ldr	r2, .L518+8
 10502 009e 1C46     		mov	r4, r3
 10503 00a0 1546     		mov	r5, r2
 10504 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10505 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10506 00a6 2B68     		ldr	r3, [r5]
 10507 00a8 2360     		str	r3, [r4]
1586:..\src/command_processing.c ****     char id_str[16]             = "";
 10508              		.loc 1 1586 0
 10509 00aa 07F1C803 		add	r3, r7, #200
 10510 00ae 0022     		movs	r2, #0
 10511 00b0 1A60     		str	r2, [r3]
 10512 00b2 0433     		adds	r3, r3, #4
 10513 00b4 0022     		movs	r2, #0
 10514 00b6 1A60     		str	r2, [r3]
 10515 00b8 5A60     		str	r2, [r3, #4]
 10516 00ba 9A60     		str	r2, [r3, #8]
1587:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 10517              		.loc 1 1587 0
 10518 00bc 07F19C03 		add	r3, r7, #156
 10519 00c0 0022     		movs	r2, #0
 10520 00c2 1A60     		str	r2, [r3]
 10521 00c4 0433     		adds	r3, r3, #4
 10522 00c6 2622     		movs	r2, #38
 10523 00c8 0021     		movs	r1, #0
 10524 00ca 1846     		mov	r0, r3
 10525 00cc FFF7FEFF 		bl	memset
1588:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 10526              		.loc 1 1588 0
 10527 00d0 07F18003 		add	r3, r7, #128
 10528 00d4 0022     		movs	r2, #0
 10529 00d6 1A60     		str	r2, [r3]
 10530 00d8 0433     		adds	r3, r3, #4
 10531 00da 0022     		movs	r2, #0
 10532 00dc 1A60     		str	r2, [r3]
 10533 00de 5A60     		str	r2, [r3, #4]
 10534 00e0 9A60     		str	r2, [r3, #8]
 10535 00e2 DA60     		str	r2, [r3, #12]
 10536 00e4 1A61     		str	r2, [r3, #16]
 10537 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1589:..\src/command_processing.c ****     
1590:..\src/command_processing.c ****     //Strings lenghts
1591:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 10538              		.loc 1 1591 0
 10539 00e8 07F1C803 		add	r3, r7, #200
 10540 00ec 1846     		mov	r0, r3
 10541 00ee FFF7FEFF 		bl	strlen
 10542 00f2 0346     		mov	r3, r0
 10543 00f4 87F89336 		strb	r3, [r7, #1683]
1592:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 10544              		.loc 1 1592 0
 10545 00f8 07F1F803 		add	r3, r7, #248
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 245


 10546 00fc 1846     		mov	r0, r3
 10547 00fe FFF7FEFF 		bl	strlen
 10548 0102 0346     		mov	r3, r0
 10549 0104 87F89236 		strb	r3, [r7, #1682]
1593:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 10550              		.loc 1 1593 0
 10551 0108 07F1EC03 		add	r3, r7, #236
 10552 010c 1846     		mov	r0, r3
 10553 010e FFF7FEFF 		bl	strlen
 10554 0112 0346     		mov	r3, r0
 10555 0114 87F89136 		strb	r3, [r7, #1681]
1594:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 10556              		.loc 1 1594 0
 10557 0118 07F1D803 		add	r3, r7, #216
 10558 011c 1846     		mov	r0, r3
 10559 011e FFF7FEFF 		bl	strlen
 10560 0122 0346     		mov	r3, r0
 10561 0124 87F89036 		strb	r3, [r7, #1680]
1595:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 10562              		.loc 1 1595 0
 10563 0128 07F19C03 		add	r3, r7, #156
 10564 012c 1846     		mov	r0, r3
 10565 012e FFF7FEFF 		bl	strlen
 10566 0132 0346     		mov	r3, r0
 10567 0134 87F88F36 		strb	r3, [r7, #1679]
1596:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 10568              		.loc 1 1596 0
 10569 0138 07F18003 		add	r3, r7, #128
 10570 013c 1846     		mov	r0, r3
 10571 013e FFF7FEFF 		bl	strlen
 10572 0142 0346     		mov	r3, r0
 10573 0144 87F89D36 		strb	r3, [r7, #1693]
1597:..\src/command_processing.c ****     
1598:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 10574              		.loc 1 1598 0
 10575 0148 07F10803 		add	r3, r7, #8
 10576 014c 0022     		movs	r2, #0
 10577 014e 1A60     		str	r2, [r3]
 10578 0150 0433     		adds	r3, r3, #4
 10579 0152 7222     		movs	r2, #114
 10580 0154 0021     		movs	r1, #0
 10581 0156 1846     		mov	r0, r3
 10582 0158 FFF7FEFF 		bl	memset
1599:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1600:..\src/command_processing.c ****  
1601:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 10583              		.loc 1 1601 0
 10584 015c 07F10800 		add	r0, r7, #8
 10585 0160 6423     		movs	r3, #100
 10586 0162 0A22     		movs	r2, #10
 10587 0164 8D49     		ldr	r1, .L518+12
 10588 0166 FFF7FEFF 		bl	sprintf
1602:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 10589              		.loc 1 1602 0
 10590 016a 07F10803 		add	r3, r7, #8
 10591 016e 1846     		mov	r0, r3
 10592 0170 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 246


 10593 0174 0346     		mov	r3, r0
 10594 0176 87F88E36 		strb	r3, [r7, #1678]
1603:..\src/command_processing.c **** 
1604:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1605:..\src/command_processing.c ****     // update packet_length
1606:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 10595              		.loc 1 1606 0
 10596 017a 854B     		ldr	r3, .L518
 10597 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10598 017e 5B08     		lsrs	r3, r3, #1
 10599 0180 DBB2     		uxtb	r3, r3
 10600 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1607:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 10601              		.loc 1 1607 0
 10602 0186 824B     		ldr	r3, .L518
 10603 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10604 018a 1A46     		mov	r2, r3
 10605 018c B7F8A636 		ldrh	r3, [r7, #1702]
 10606 0190 5B00     		lsls	r3, r3, #1
 10607 0192 D31A     		subs	r3, r2, r3
 10608 0194 002B     		cmp	r3, #0
 10609 0196 04DD     		ble	.L473
 10610              		.loc 1 1607 0 is_stmt 0 discriminator 1
 10611 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 10612 019c 0133     		adds	r3, r3, #1
 10613 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 10614              	.L473:
1608:..\src/command_processing.c ****     
1609:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 10615              		.loc 1 1609 0 is_stmt 1
 10616 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 10617 01a6 5A1C     		adds	r2, r3, #1
1610:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10618              		.loc 1 1610 0
 10619 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
 10620 01ac 1344     		add	r3, r3, r2
1611:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 10621              		.loc 1 1611 0
 10622 01ae 0133     		adds	r3, r3, #1
1609:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 10623              		.loc 1 1609 0
 10624 01b0 9AB2     		uxth	r2, r3
 10625 01b2 774B     		ldr	r3, .L518
 10626 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10627 01b6 9BB2     		uxth	r3, r3
 10628 01b8 1344     		add	r3, r3, r2
 10629 01ba 9BB2     		uxth	r3, r3
 10630 01bc 1A46     		mov	r2, r3	@ movhi
 10631 01be 9200     		lsls	r2, r2, #2
 10632 01c0 1344     		add	r3, r3, r2
 10633 01c2 1A46     		mov	r2, r3	@ movhi
 10634 01c4 9100     		lsls	r1, r2, #2
 10635 01c6 1A46     		mov	r2, r3	@ movhi
 10636 01c8 0B46     		mov	r3, r1	@ movhi
 10637 01ca 1344     		add	r3, r3, r2
 10638 01cc 5B00     		lsls	r3, r3, #1
 10639 01ce 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 247


 10640 01d0 C933     		adds	r3, r3, #201
 10641 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1612:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1613:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1614:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1615:..\src/command_processing.c **** 
1616:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 10642              		.loc 1 1616 0
 10643 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 10644 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10645 01de 1344     		add	r3, r3, r2
 10646 01e0 9BB2     		uxth	r3, r3
 10647 01e2 0333     		adds	r3, r3, #3
 10648 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1617:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 10649              		.loc 1 1617 0
 10650 01e8 07F58A73 		add	r3, r7, #276
 10651 01ec A222     		movs	r2, #162
 10652 01ee 1A70     		strb	r2, [r3]
1618:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 10653              		.loc 1 1618 0
 10654 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10655 01f4 DAB2     		uxtb	r2, r3
 10656 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 10657 01fa DBB2     		uxtb	r3, r3
 10658 01fc 1344     		add	r3, r3, r2
 10659 01fe DAB2     		uxtb	r2, r3
 10660 0200 634B     		ldr	r3, .L518
 10661 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10662 0204 1344     		add	r3, r3, r2
 10663 0206 DBB2     		uxtb	r3, r3
 10664 0208 0333     		adds	r3, r3, #3
 10665 020a DAB2     		uxtb	r2, r3
 10666 020c 07F58A73 		add	r3, r7, #276
 10667 0210 5A70     		strb	r2, [r3, #1]
1619:..\src/command_processing.c **** 
1620:..\src/command_processing.c ****     switch(index) {
 10668              		.loc 1 1620 0
 10669 0212 BB1D     		adds	r3, r7, #6
 10670 0214 1B88     		ldrh	r3, [r3]
 10671 0216 002B     		cmp	r3, #0
 10672 0218 40F0D084 		bne	.L516
1621:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1622:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1623:..\src/command_processing.c ****             start_byte = 0;
 10673              		.loc 1 1623 0
 10674 021c 0023     		movs	r3, #0
 10675 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1624:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 10676              		.loc 1 1624 0
 10677 0222 07F58A73 		add	r3, r7, #276
 10678 0226 0222     		movs	r2, #2
 10679 0228 9A70     		strb	r2, [r3, #2]
1625:..\src/command_processing.c ****             packet_data[3] = 1;
 10680              		.loc 1 1625 0
 10681 022a 07F58A73 		add	r3, r7, #276
 10682 022e 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 248


 10683 0230 DA70     		strb	r2, [r3, #3]
1626:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 10684              		.loc 1 1626 0
 10685 0232 574B     		ldr	r3, .L518
 10686 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10687 0236 07F58A73 		add	r3, r7, #276
 10688 023a 1A71     		strb	r2, [r3, #4]
1627:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10689              		.loc 1 1627 0
 10690 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10691 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10692 0244 15E0     		b	.L476
 10693              	.L477:
1628:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 10694              		.loc 1 1628 0 discriminator 3
 10695 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 10696 024a 5A1D     		adds	r2, r3, #5
 10697 024c B7F8A436 		ldrh	r3, [r7, #1700]
 10698 0250 D31A     		subs	r3, r2, r3
 10699 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 10700 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 10701 025a 8A1A     		subs	r2, r1, r2
 10702 025c 07F1F801 		add	r1, r7, #248
 10703 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10704 0262 07F58A72 		add	r2, r7, #276
 10705 0266 D154     		strb	r1, [r2, r3]
1627:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10706              		.loc 1 1627 0 discriminator 3
 10707 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 10708 026c 013B     		subs	r3, r3, #1
 10709 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10710              	.L476:
1627:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 10711              		.loc 1 1627 0 is_stmt 0 discriminator 1
 10712 0272 B7F8A436 		ldrh	r3, [r7, #1700]
 10713 0276 002B     		cmp	r3, #0
 10714 0278 E5D1     		bne	.L477
1629:..\src/command_processing.c ****                 
1630:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1631:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 10715              		.loc 1 1631 0 is_stmt 1
 10716 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10717 027e 3233     		adds	r3, r3, #50
 10718 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1632:..\src/command_processing.c ****             i = 0;
 10719              		.loc 1 1632 0
 10720 0284 0023     		movs	r3, #0
 10721 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1633:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 10722              		.loc 1 1633 0
 10723 028a 0023     		movs	r3, #0
 10724 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10725 0290 B2E0     		b	.L478
 10726              	.L485:
1634:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10727              		.loc 1 1634 0
 10728 0292 B7F8A026 		ldrh	r2, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 249


 10729 0296 07F1EC03 		add	r3, r7, #236
 10730 029a 4149     		ldr	r1, .L518+16
 10731 029c 1846     		mov	r0, r3
 10732 029e FFF7FEFF 		bl	sprintf
1635:..\src/command_processing.c ****                 h = 4;
 10733              		.loc 1 1635 0
 10734 02a2 0423     		movs	r3, #4
 10735 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1636:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 10736              		.loc 1 1636 0
 10737 02a8 07F1EC03 		add	r3, r7, #236
 10738 02ac 1846     		mov	r0, r3
 10739 02ae FFF7FEFF 		bl	strlen
 10740 02b2 0346     		mov	r3, r0
 10741 02b4 87F89136 		strb	r3, [r7, #1681]
1637:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10742              		.loc 1 1637 0
 10743 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 10744 02bc 9A1C     		adds	r2, r3, #2
 10745 02be B7F8A036 		ldrh	r3, [r7, #1696]
 10746 02c2 3221     		movs	r1, #50
 10747 02c4 01FB03F3 		mul	r3, r1, r3
 10748 02c8 1344     		add	r3, r3, r2
 10749 02ca 07F58A72 		add	r2, r7, #276
 10750 02ce 0221     		movs	r1, #2
 10751 02d0 D154     		strb	r1, [r2, r3]
1638:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10752              		.loc 1 1638 0
 10753 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 10754 02d6 DA1C     		adds	r2, r3, #3
 10755 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10756 02dc 3221     		movs	r1, #50
 10757 02de 01FB03F3 		mul	r3, r1, r3
 10758 02e2 1344     		add	r3, r3, r2
 10759 02e4 07F58A72 		add	r2, r7, #276
 10760 02e8 0321     		movs	r1, #3
 10761 02ea D154     		strb	r1, [r2, r3]
1639:..\src/command_processing.c ****                 
1640:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 10762              		.loc 1 1640 0
 10763 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 10764 02f0 1A46     		mov	r2, r3	@ movhi
 10765 02f2 5200     		lsls	r2, r2, #1
 10766 02f4 1344     		add	r3, r3, r2
 10767 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10768 02fa 39E0     		b	.L479
 10769              	.L482:
1641:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10770              		.loc 1 1641 0
 10771 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 10772 0300 284A     		ldr	r2, .L518+20
 10773 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10774 0304 9BB2     		uxth	r3, r3
 10775 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 10776 030a 9A42     		cmp	r2, r3
 10777 030c 17D1     		bne	.L480
1642:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 250


 10778              		.loc 1 1642 0
 10779 030e B7F89E26 		ldrh	r2, [r7, #1694]
 10780 0312 B7F89436 		ldrh	r3, [r7, #1684]
 10781 0316 1A44     		add	r2, r2, r3
 10782 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 10783 031c 3221     		movs	r1, #50
 10784 031e 01FB03F3 		mul	r3, r1, r3
 10785 0322 1344     		add	r3, r3, r2
 10786 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 10787 0328 1E49     		ldr	r1, .L518+20
 10788 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10789 032c 07F58A72 		add	r2, r7, #276
 10790 0330 D154     		strb	r1, [r2, r3]
1643:..\src/command_processing.c ****                         i++;
 10791              		.loc 1 1643 0
 10792 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 10793 0336 0133     		adds	r3, r3, #1
 10794 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 10795 033c 0EE0     		b	.L481
 10796              	.L480:
1644:..\src/command_processing.c ****                     } 
1645:..\src/command_processing.c ****                     else {
1646:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 10797              		.loc 1 1646 0
 10798 033e B7F89E26 		ldrh	r2, [r7, #1694]
 10799 0342 B7F89436 		ldrh	r3, [r7, #1684]
 10800 0346 1A44     		add	r2, r2, r3
 10801 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 10802 034c 3221     		movs	r1, #50
 10803 034e 01FB03F3 		mul	r3, r1, r3
 10804 0352 1344     		add	r3, r3, r2
 10805 0354 07F58A72 		add	r2, r7, #276
 10806 0358 FF21     		movs	r1, #255
 10807 035a D154     		strb	r1, [r2, r3]
 10808              	.L481:
1647:..\src/command_processing.c ****                     }
1648:..\src/command_processing.c ****                     h++;
 10809              		.loc 1 1648 0 discriminator 2
 10810 035c B7F89E36 		ldrh	r3, [r7, #1694]
 10811 0360 0133     		adds	r3, r3, #1
 10812 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1640:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10813              		.loc 1 1640 0 discriminator 2
 10814 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 10815 036a 0133     		adds	r3, r3, #1
 10816 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10817              	.L479:
1640:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 10818              		.loc 1 1640 0 is_stmt 0 discriminator 1
 10819 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 10820 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 10821 0378 1346     		mov	r3, r2
 10822 037a 5B00     		lsls	r3, r3, #1
 10823 037c 1344     		add	r3, r3, r2
 10824 037e 0233     		adds	r3, r3, #2
 10825 0380 9942     		cmp	r1, r3
 10826 0382 BBDD     		ble	.L482
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 251


1649:..\src/command_processing.c ****                 }
1650:..\src/command_processing.c **** 
1651:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1652:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 10827              		.loc 1 1652 0 is_stmt 1
 10828 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10829 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10830 038c 2BE0     		b	.L483
 10831              	.L519:
 10832 038e 00BF     		.align	2
 10833              	.L518:
 10834 0390 00000000 		.word	N_IMU_Connected
 10835 0394 E80F0000 		.word	.LC134
 10836 0398 04100000 		.word	.LC135
 10837 039c 30020000 		.word	.LC122
 10838 03a0 800F0000 		.word	.LC136
 10839 03a4 00000000 		.word	IMU_connected
 10840              	.L484:
1653:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10841              		.loc 1 1653 0 discriminator 3
 10842 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 10843 03ac DA1D     		adds	r2, r3, #7
 10844 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 10845 03b2 3221     		movs	r1, #50
 10846 03b4 01FB03F3 		mul	r3, r1, r3
 10847 03b8 1A44     		add	r2, r2, r3
 10848 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 10849 03be 1A44     		add	r2, r2, r3
 10850 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 10851 03c4 D31A     		subs	r3, r2, r3
 10852 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 10853 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 10854 03ce 8A1A     		subs	r2, r1, r2
 10855 03d0 07F1EC01 		add	r1, r7, #236
 10856 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 10857 03d6 07F58A72 		add	r2, r7, #276
 10858 03da D154     		strb	r1, [r2, r3]
1652:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10859              		.loc 1 1652 0 discriminator 3
 10860 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 10861 03e0 013B     		subs	r3, r3, #1
 10862 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10863              	.L483:
1652:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 10864              		.loc 1 1652 0 is_stmt 0 discriminator 1
 10865 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 10866 03ea 002B     		cmp	r3, #0
 10867 03ec DCD1     		bne	.L484
1633:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10868              		.loc 1 1633 0 is_stmt 1 discriminator 2
 10869 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 10870 03f2 0133     		adds	r3, r3, #1
 10871 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10872              	.L478:
1633:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 10873              		.loc 1 1633 0 is_stmt 0 discriminator 1
 10874 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 252


 10875 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 10876 0400 9A42     		cmp	r2, r3
 10877 0402 FFF446AF 		bcc	.L485
1654:..\src/command_processing.c ****             }
1655:..\src/command_processing.c ****             
1656:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1657:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 10878              		.loc 1 1657 0 is_stmt 1
 10879 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 10880 040a 1A46     		mov	r2, r3	@ movhi
 10881 040c 9200     		lsls	r2, r2, #2
 10882 040e 1344     		add	r3, r3, r2
 10883 0410 1A46     		mov	r2, r3	@ movhi
 10884 0412 9100     		lsls	r1, r2, #2
 10885 0414 1A46     		mov	r2, r3	@ movhi
 10886 0416 0B46     		mov	r3, r1	@ movhi
 10887 0418 1344     		add	r3, r3, r2
 10888 041a 5B00     		lsls	r3, r3, #1
 10889 041c 9AB2     		uxth	r2, r3
 10890 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 10891 0422 1344     		add	r3, r3, r2
 10892 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1658:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 10893              		.loc 1 1658 0
 10894 0428 0023     		movs	r3, #0
 10895 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 10896 042e 1FE1     		b	.L486
 10897              	.L493:
1659:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 10898              		.loc 1 1659 0
 10899 0430 B7F89436 		ldrh	r3, [r7, #1684]
 10900 0434 9A1C     		adds	r2, r3, #2
 10901 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 10902 043a 3221     		movs	r1, #50
 10903 043c 01FB03F3 		mul	r3, r1, r3
 10904 0440 1344     		add	r3, r3, r2
 10905 0442 07F58A72 		add	r2, r7, #276
 10906 0446 0221     		movs	r1, #2
 10907 0448 D154     		strb	r1, [r2, r3]
1660:..\src/command_processing.c ****                 
1661:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 10908              		.loc 1 1661 0
 10909 044a B7F89436 		ldrh	r3, [r7, #1684]
 10910 044e DA1C     		adds	r2, r3, #3
 10911 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 10912 0454 3221     		movs	r1, #50
 10913 0456 01FB03F3 		mul	r3, r1, r3
 10914 045a 1344     		add	r3, r3, r2
 10915 045c 07F58A72 		add	r2, r7, #276
 10916 0460 0321     		movs	r1, #3
 10917 0462 D154     		strb	r1, [r2, r3]
1662:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10918              		.loc 1 1662 0
 10919 0464 B7F89436 		ldrh	r3, [r7, #1684]
 10920 0468 1A1D     		adds	r2, r3, #4
 10921 046a B7F8A036 		ldrh	r3, [r7, #1696]
 10922 046e 3221     		movs	r1, #50
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 253


 10923 0470 01FB03F3 		mul	r3, r1, r3
 10924 0474 1A44     		add	r2, r2, r3
 10925 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 10926 047a 5B00     		lsls	r3, r3, #1
 10927 047c B249     		ldr	r1, .L520
 10928 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10929 0480 1846     		mov	r0, r3
 10930 0482 B249     		ldr	r1, .L520+4
 10931 0484 0346     		mov	r3, r0
 10932 0486 5B00     		lsls	r3, r3, #1
 10933 0488 0344     		add	r3, r3, r0
 10934 048a 0B44     		add	r3, r3, r1
 10935 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10936 048e 07F58A73 		add	r3, r7, #276
 10937 0492 9954     		strb	r1, [r3, r2]
1663:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10938              		.loc 1 1663 0
 10939 0494 B7F89436 		ldrh	r3, [r7, #1684]
 10940 0498 5A1D     		adds	r2, r3, #5
 10941 049a B7F8A036 		ldrh	r3, [r7, #1696]
 10942 049e 3221     		movs	r1, #50
 10943 04a0 01FB03F3 		mul	r3, r1, r3
 10944 04a4 1A44     		add	r2, r2, r3
 10945 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 10946 04aa 5B00     		lsls	r3, r3, #1
 10947 04ac A649     		ldr	r1, .L520
 10948 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10949 04b0 1846     		mov	r0, r3
 10950 04b2 A649     		ldr	r1, .L520+4
 10951 04b4 0346     		mov	r3, r0
 10952 04b6 5B00     		lsls	r3, r3, #1
 10953 04b8 0344     		add	r3, r3, r0
 10954 04ba 0B44     		add	r3, r3, r1
 10955 04bc 0133     		adds	r3, r3, #1
 10956 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 10957 04c0 07F58A73 		add	r3, r7, #276
 10958 04c4 9954     		strb	r1, [r3, r2]
1664:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 10959              		.loc 1 1664 0
 10960 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 10961 04ca 9A1D     		adds	r2, r3, #6
 10962 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 10963 04d0 3221     		movs	r1, #50
 10964 04d2 01FB03F3 		mul	r3, r1, r3
 10965 04d6 1A44     		add	r2, r2, r3
 10966 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 10967 04dc 5B00     		lsls	r3, r3, #1
 10968 04de 9A49     		ldr	r1, .L520
 10969 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10970 04e2 1846     		mov	r0, r3
 10971 04e4 9949     		ldr	r1, .L520+4
 10972 04e6 0346     		mov	r3, r0
 10973 04e8 5B00     		lsls	r3, r3, #1
 10974 04ea 0344     		add	r3, r3, r0
 10975 04ec 0B44     		add	r3, r3, r1
 10976 04ee 0233     		adds	r3, r3, #2
 10977 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 254


 10978 04f2 07F58A73 		add	r3, r7, #276
 10979 04f6 9954     		strb	r1, [r3, r2]
1665:..\src/command_processing.c ****                 
1666:..\src/command_processing.c ****                 // check if there is a second value
1667:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 10980              		.loc 1 1667 0
 10981 04f8 954B     		ldr	r3, .L520+8
 10982 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10983 04fc 1A46     		mov	r2, r3
 10984 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 10985 0502 0133     		adds	r3, r3, #1
 10986 0504 5B00     		lsls	r3, r3, #1
 10987 0506 9A42     		cmp	r2, r3
 10988 0508 28DA     		bge	.L487
1668:..\src/command_processing.c ****                     // there is only one value
1669:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 10989              		.loc 1 1669 0
 10990 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 10991 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 10992 0512 1EE0     		b	.L488
 10993              	.L489:
1670:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 10994              		.loc 1 1670 0 discriminator 3
 10995 0514 B7F89436 		ldrh	r3, [r7, #1684]
 10996 0518 DA1D     		adds	r2, r3, #7
 10997 051a B7F8A036 		ldrh	r3, [r7, #1696]
 10998 051e 3221     		movs	r1, #50
 10999 0520 01FB03F3 		mul	r3, r1, r3
 11000 0524 1A44     		add	r2, r2, r3
 11001 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11002 052a 1A44     		add	r2, r2, r3
 11003 052c B7F8A236 		ldrh	r3, [r7, #1698]
 11004 0530 D31A     		subs	r3, r2, r3
 11005 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11006 0536 B7F8A226 		ldrh	r2, [r7, #1698]
 11007 053a 8A1A     		subs	r2, r1, r2
 11008 053c 07F1D801 		add	r1, r7, #216
 11009 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11010 0542 07F58A72 		add	r2, r7, #276
 11011 0546 D154     		strb	r1, [r2, r3]
1669:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11012              		.loc 1 1669 0 discriminator 3
 11013 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 11014 054c 013B     		subs	r3, r3, #1
 11015 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11016              	.L488:
1669:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 11017              		.loc 1 1669 0 is_stmt 0 discriminator 1
 11018 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 11019 0556 002B     		cmp	r3, #0
 11020 0558 DCD1     		bne	.L489
 11021 055a 84E0     		b	.L490
 11022              	.L487:
1671:..\src/command_processing.c ****                 }
1672:..\src/command_processing.c ****                 else {
1673:..\src/command_processing.c ****                     // fill the second value
1674:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 255


 11023              		.loc 1 1674 0 is_stmt 1
 11024 055c B7F89436 		ldrh	r3, [r7, #1684]
 11025 0560 DA1C     		adds	r2, r3, #3
 11026 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 11027 0566 3221     		movs	r1, #50
 11028 0568 01FB03F3 		mul	r3, r1, r3
 11029 056c 1344     		add	r3, r3, r2
 11030 056e 07F58A72 		add	r2, r7, #276
 11031 0572 0621     		movs	r1, #6
 11032 0574 D154     		strb	r1, [r2, r3]
1675:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11033              		.loc 1 1675 0
 11034 0576 B7F89436 		ldrh	r3, [r7, #1684]
 11035 057a DA1D     		adds	r2, r3, #7
 11036 057c B7F8A036 		ldrh	r3, [r7, #1696]
 11037 0580 3221     		movs	r1, #50
 11038 0582 01FB03F3 		mul	r3, r1, r3
 11039 0586 1A44     		add	r2, r2, r3
 11040 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 11041 058c 5B00     		lsls	r3, r3, #1
 11042 058e 0133     		adds	r3, r3, #1
 11043 0590 6D49     		ldr	r1, .L520
 11044 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11045 0594 1846     		mov	r0, r3
 11046 0596 6D49     		ldr	r1, .L520+4
 11047 0598 0346     		mov	r3, r0
 11048 059a 5B00     		lsls	r3, r3, #1
 11049 059c 0344     		add	r3, r3, r0
 11050 059e 0B44     		add	r3, r3, r1
 11051 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11052 05a2 07F58A73 		add	r3, r7, #276
 11053 05a6 9954     		strb	r1, [r3, r2]
1676:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11054              		.loc 1 1676 0
 11055 05a8 B7F89436 		ldrh	r3, [r7, #1684]
 11056 05ac 03F10802 		add	r2, r3, #8
 11057 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 11058 05b4 3221     		movs	r1, #50
 11059 05b6 01FB03F3 		mul	r3, r1, r3
 11060 05ba 1A44     		add	r2, r2, r3
 11061 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 11062 05c0 5B00     		lsls	r3, r3, #1
 11063 05c2 0133     		adds	r3, r3, #1
 11064 05c4 6049     		ldr	r1, .L520
 11065 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11066 05c8 1846     		mov	r0, r3
 11067 05ca 6049     		ldr	r1, .L520+4
 11068 05cc 0346     		mov	r3, r0
 11069 05ce 5B00     		lsls	r3, r3, #1
 11070 05d0 0344     		add	r3, r3, r0
 11071 05d2 0B44     		add	r3, r3, r1
 11072 05d4 0133     		adds	r3, r3, #1
 11073 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11074 05d8 07F58A73 		add	r3, r7, #276
 11075 05dc 9954     		strb	r1, [r3, r2]
1677:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 11076              		.loc 1 1677 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 256


 11077 05de B7F89436 		ldrh	r3, [r7, #1684]
 11078 05e2 03F10902 		add	r2, r3, #9
 11079 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 11080 05ea 3221     		movs	r1, #50
 11081 05ec 01FB03F3 		mul	r3, r1, r3
 11082 05f0 1A44     		add	r2, r2, r3
 11083 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 11084 05f6 5B00     		lsls	r3, r3, #1
 11085 05f8 0133     		adds	r3, r3, #1
 11086 05fa 5349     		ldr	r1, .L520
 11087 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11088 05fe 1846     		mov	r0, r3
 11089 0600 5249     		ldr	r1, .L520+4
 11090 0602 0346     		mov	r3, r0
 11091 0604 5B00     		lsls	r3, r3, #1
 11092 0606 0344     		add	r3, r3, r0
 11093 0608 0B44     		add	r3, r3, r1
 11094 060a 0233     		adds	r3, r3, #2
 11095 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11096 060e 07F58A73 		add	r3, r7, #276
 11097 0612 9954     		strb	r1, [r3, r2]
1678:..\src/command_processing.c ****                 
1679:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 11098              		.loc 1 1679 0
 11099 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11100 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11101 061c 1FE0     		b	.L491
 11102              	.L492:
1680:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11103              		.loc 1 1680 0 discriminator 3
 11104 061e B7F89436 		ldrh	r3, [r7, #1684]
 11105 0622 03F10A02 		add	r2, r3, #10
 11106 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 11107 062a 3221     		movs	r1, #50
 11108 062c 01FB03F3 		mul	r3, r1, r3
 11109 0630 1A44     		add	r2, r2, r3
 11110 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 11111 0636 1A44     		add	r2, r2, r3
 11112 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 11113 063c D31A     		subs	r3, r2, r3
 11114 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 11115 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 11116 0646 8A1A     		subs	r2, r1, r2
 11117 0648 07F1D801 		add	r1, r7, #216
 11118 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11119 064e 07F58A72 		add	r2, r7, #276
 11120 0652 D154     		strb	r1, [r2, r3]
1679:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11121              		.loc 1 1679 0 discriminator 3
 11122 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 11123 0658 013B     		subs	r3, r3, #1
 11124 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11125              	.L491:
1679:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 11126              		.loc 1 1679 0 is_stmt 0 discriminator 1
 11127 065e B7F8A236 		ldrh	r3, [r7, #1698]
 11128 0662 002B     		cmp	r3, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 257


 11129 0664 DBD1     		bne	.L492
 11130              	.L490:
1658:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11131              		.loc 1 1658 0 is_stmt 1 discriminator 2
 11132 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 11133 066a 0133     		adds	r3, r3, #1
 11134 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 11135              	.L486:
1658:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 11136              		.loc 1 1658 0 is_stmt 0 discriminator 1
 11137 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 11138 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 11139 0678 9A42     		cmp	r2, r3
 11140 067a FFF4D9AE 		bcc	.L493
1681:..\src/command_processing.c ****                 }
1682:..\src/command_processing.c ****             }
1683:..\src/command_processing.c ****             
1684:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1685:..\src/command_processing.c ****             
1686:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 11141              		.loc 1 1686 0 is_stmt 1
 11142 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 11143 0682 1A46     		mov	r2, r3	@ movhi
 11144 0684 9200     		lsls	r2, r2, #2
 11145 0686 1344     		add	r3, r3, r2
 11146 0688 1A46     		mov	r2, r3	@ movhi
 11147 068a 9100     		lsls	r1, r2, #2
 11148 068c 1A46     		mov	r2, r3	@ movhi
 11149 068e 0B46     		mov	r3, r1	@ movhi
 11150 0690 1344     		add	r3, r3, r2
 11151 0692 5B00     		lsls	r3, r3, #1
 11152 0694 9AB2     		uxth	r2, r3
 11153 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11154 069a 1344     		add	r3, r3, r2
 11155 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1687:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 11156              		.loc 1 1687 0
 11157 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 11158 06a4 5A1E     		subs	r2, r3, #1
 11159 06a6 07F1C803 		add	r3, r7, #200
 11160 06aa 2A49     		ldr	r1, .L520+12
 11161 06ac 1846     		mov	r0, r3
 11162 06ae FFF7FEFF 		bl	sprintf
1688:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 11163              		.loc 1 1688 0
 11164 06b2 07F1C803 		add	r3, r7, #200
 11165 06b6 1846     		mov	r0, r3
 11166 06b8 FFF7FEFF 		bl	strlen
 11167 06bc 0346     		mov	r3, r0
 11168 06be 87F89336 		strb	r3, [r7, #1683]
1689:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 11169              		.loc 1 1689 0
 11170 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 11171 06c6 0233     		adds	r3, r3, #2
 11172 06c8 07F58A72 		add	r2, r7, #276
 11173 06cc 0221     		movs	r1, #2
 11174 06ce D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 258


1690:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11175              		.loc 1 1690 0
 11176 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 11177 06d4 0333     		adds	r3, r3, #3
 11178 06d6 07F58A72 		add	r2, r7, #276
 11179 06da 0121     		movs	r1, #1
 11180 06dc D154     		strb	r1, [r2, r3]
1691:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.dev.id;
 11181              		.loc 1 1691 0
 11182 06de B7F89436 		ldrh	r3, [r7, #1684]
 11183 06e2 0433     		adds	r3, r3, #4
 11184 06e4 1C4A     		ldr	r2, .L520+16
 11185 06e6 92F8A010 		ldrb	r1, [r2, #160]	@ zero_extendqisi2
 11186 06ea 07F58A72 		add	r2, r7, #276
 11187 06ee D154     		strb	r1, [r2, r3]
1692:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11188              		.loc 1 1692 0
 11189 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 11190 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11191 06f8 18E0     		b	.L494
 11192              	.L495:
1693:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 11193              		.loc 1 1693 0 discriminator 3
 11194 06fa B7F89436 		ldrh	r3, [r7, #1684]
 11195 06fe 5A1D     		adds	r2, r3, #5
 11196 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 11197 0704 1A44     		add	r2, r2, r3
 11198 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 11199 070a D31A     		subs	r3, r2, r3
 11200 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 11201 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 11202 0714 8A1A     		subs	r2, r1, r2
 11203 0716 07F1C801 		add	r1, r7, #200
 11204 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11205 071c 07F58A72 		add	r2, r7, #276
 11206 0720 D154     		strb	r1, [r2, r3]
1692:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11207              		.loc 1 1692 0 discriminator 3
 11208 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 11209 0726 013B     		subs	r3, r3, #1
 11210 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11211              	.L494:
1692:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 11212              		.loc 1 1692 0 is_stmt 0 discriminator 1
 11213 072c B7F8A436 		ldrh	r3, [r7, #1700]
 11214 0730 002B     		cmp	r3, #0
 11215 0732 E2D1     		bne	.L495
1694:..\src/command_processing.c ****                 
1695:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1696:..\src/command_processing.c ****             
1697:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11216              		.loc 1 1697 0 is_stmt 1
 11217 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11218 0738 3233     		adds	r3, r3, #50
 11219 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1698:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 11220              		.loc 1 1698 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 259


 11221 073e 0023     		movs	r3, #0
 11222 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11223 0744 38E1     		b	.L496
 11224              	.L521:
 11225 0746 00BF     		.align	2
 11226              	.L520:
 11227 0748 00000000 		.word	IMU_connected
 11228 074c 00000000 		.word	MagCal
 11229 0750 00000000 		.word	N_IMU_Connected
 11230 0754 8C0F0000 		.word	.LC137
 11231 0758 00000000 		.word	c_mem
 11232              	.L499:
1699:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11233              		.loc 1 1699 0
 11234 075c B7F89826 		ldrh	r2, [r7, #1688]
 11235 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 11236 0764 D118     		adds	r1, r2, r3
 11237 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 11238 076a D54A     		ldr	r2, .L522
 11239 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11240 076e 07F19C00 		add	r0, r7, #156
 11241 0772 0A46     		mov	r2, r1
 11242 0774 D349     		ldr	r1, .L522+4
 11243 0776 FFF7FEFF 		bl	sprintf
1700:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 11244              		.loc 1 1700 0
 11245 077a 07F19C03 		add	r3, r7, #156
 11246 077e 1846     		mov	r0, r3
 11247 0780 FFF7FEFF 		bl	strlen
 11248 0784 0346     		mov	r3, r0
 11249 0786 87F88F36 		strb	r3, [r7, #1679]
1701:..\src/command_processing.c ****             
1702:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 11250              		.loc 1 1702 0
 11251 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11252 078e 1A46     		mov	r2, r3	@ movhi
 11253 0790 9200     		lsls	r2, r2, #2
 11254 0792 1344     		add	r3, r3, r2
 11255 0794 1A46     		mov	r2, r3	@ movhi
 11256 0796 9100     		lsls	r1, r2, #2
 11257 0798 1A46     		mov	r2, r3	@ movhi
 11258 079a 0B46     		mov	r3, r1	@ movhi
 11259 079c 1344     		add	r3, r3, r2
 11260 079e 5B00     		lsls	r3, r3, #1
 11261 07a0 9AB2     		uxth	r2, r3
 11262 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11263 07a6 1344     		add	r3, r3, r2
 11264 07a8 9BB2     		uxth	r3, r3
 11265 07aa 0233     		adds	r3, r3, #2
 11266 07ac 9BB2     		uxth	r3, r3
 11267 07ae 1A46     		mov	r2, r3
 11268 07b0 07F58A73 		add	r3, r7, #276
 11269 07b4 0221     		movs	r1, #2
 11270 07b6 9954     		strb	r1, [r3, r2]
1703:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 11271              		.loc 1 1703 0
 11272 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 260


 11273 07bc 1A46     		mov	r2, r3	@ movhi
 11274 07be 9200     		lsls	r2, r2, #2
 11275 07c0 1344     		add	r3, r3, r2
 11276 07c2 1A46     		mov	r2, r3	@ movhi
 11277 07c4 9100     		lsls	r1, r2, #2
 11278 07c6 1A46     		mov	r2, r3	@ movhi
 11279 07c8 0B46     		mov	r3, r1	@ movhi
 11280 07ca 1344     		add	r3, r3, r2
 11281 07cc 5B00     		lsls	r3, r3, #1
 11282 07ce 9AB2     		uxth	r2, r3
 11283 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11284 07d4 1344     		add	r3, r3, r2
 11285 07d6 9BB2     		uxth	r3, r3
 11286 07d8 0333     		adds	r3, r3, #3
 11287 07da 9BB2     		uxth	r3, r3
 11288 07dc 1A46     		mov	r2, r3
 11289 07de 07F58A73 		add	r3, r7, #276
 11290 07e2 0521     		movs	r1, #5
 11291 07e4 9954     		strb	r1, [r3, r2]
1704:..\src/command_processing.c ****                 
1705:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11292              		.loc 1 1705 0
 11293 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11294 07ea 1A46     		mov	r2, r3	@ movhi
 11295 07ec 9200     		lsls	r2, r2, #2
 11296 07ee 1344     		add	r3, r3, r2
 11297 07f0 1A46     		mov	r2, r3	@ movhi
 11298 07f2 9100     		lsls	r1, r2, #2
 11299 07f4 1A46     		mov	r2, r3	@ movhi
 11300 07f6 0B46     		mov	r3, r1	@ movhi
 11301 07f8 1344     		add	r3, r3, r2
 11302 07fa 5B00     		lsls	r3, r3, #1
 11303 07fc 9AB2     		uxth	r2, r3
 11304 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11305 0802 1344     		add	r3, r3, r2
 11306 0804 9BB2     		uxth	r3, r3
 11307 0806 0433     		adds	r3, r3, #4
 11308 0808 9BB2     		uxth	r3, r3
 11309 080a 1846     		mov	r0, r3
 11310 080c B7F8A436 		ldrh	r3, [r7, #1700]
 11311 0810 AB4A     		ldr	r2, .L522
 11312 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11313 0814 1946     		mov	r1, r3
 11314 0816 AC4A     		ldr	r2, .L522+8
 11315 0818 0B46     		mov	r3, r1
 11316 081a 9B00     		lsls	r3, r3, #2
 11317 081c 0B44     		add	r3, r3, r1
 11318 081e 1344     		add	r3, r3, r2
 11319 0820 03F20223 		addw	r3, r3, #514
 11320 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11321 0826 07F58A73 		add	r3, r7, #276
 11322 082a 1A54     		strb	r2, [r3, r0]
1706:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11323              		.loc 1 1706 0
 11324 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11325 0830 1A46     		mov	r2, r3	@ movhi
 11326 0832 9200     		lsls	r2, r2, #2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 261


 11327 0834 1344     		add	r3, r3, r2
 11328 0836 1A46     		mov	r2, r3	@ movhi
 11329 0838 9100     		lsls	r1, r2, #2
 11330 083a 1A46     		mov	r2, r3	@ movhi
 11331 083c 0B46     		mov	r3, r1	@ movhi
 11332 083e 1344     		add	r3, r3, r2
 11333 0840 5B00     		lsls	r3, r3, #1
 11334 0842 9AB2     		uxth	r2, r3
 11335 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11336 0848 1344     		add	r3, r3, r2
 11337 084a 9BB2     		uxth	r3, r3
 11338 084c 0533     		adds	r3, r3, #5
 11339 084e 9BB2     		uxth	r3, r3
 11340 0850 1846     		mov	r0, r3
 11341 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 11342 0856 9A4A     		ldr	r2, .L522
 11343 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11344 085a 1946     		mov	r1, r3
 11345 085c 9A4A     		ldr	r2, .L522+8
 11346 085e 0B46     		mov	r3, r1
 11347 0860 9B00     		lsls	r3, r3, #2
 11348 0862 0B44     		add	r3, r3, r1
 11349 0864 1344     		add	r3, r3, r2
 11350 0866 03F20323 		addw	r3, r3, #515
 11351 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11352 086c 07F58A73 		add	r3, r7, #276
 11353 0870 1A54     		strb	r2, [r3, r0]
1707:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11354              		.loc 1 1707 0
 11355 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11356 0876 1A46     		mov	r2, r3	@ movhi
 11357 0878 9200     		lsls	r2, r2, #2
 11358 087a 1344     		add	r3, r3, r2
 11359 087c 1A46     		mov	r2, r3	@ movhi
 11360 087e 9100     		lsls	r1, r2, #2
 11361 0880 1A46     		mov	r2, r3	@ movhi
 11362 0882 0B46     		mov	r3, r1	@ movhi
 11363 0884 1344     		add	r3, r3, r2
 11364 0886 5B00     		lsls	r3, r3, #1
 11365 0888 9AB2     		uxth	r2, r3
 11366 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11367 088e 1344     		add	r3, r3, r2
 11368 0890 9BB2     		uxth	r3, r3
 11369 0892 0633     		adds	r3, r3, #6
 11370 0894 9BB2     		uxth	r3, r3
 11371 0896 1846     		mov	r0, r3
 11372 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 11373 089c 884A     		ldr	r2, .L522
 11374 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11375 08a0 1946     		mov	r1, r3
 11376 08a2 894A     		ldr	r2, .L522+8
 11377 08a4 0B46     		mov	r3, r1
 11378 08a6 9B00     		lsls	r3, r3, #2
 11379 08a8 0B44     		add	r3, r3, r1
 11380 08aa 1344     		add	r3, r3, r2
 11381 08ac 03F50173 		add	r3, r3, #516
 11382 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 262


 11383 08b2 07F58A73 		add	r3, r7, #276
 11384 08b6 1A54     		strb	r2, [r3, r0]
1708:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11385              		.loc 1 1708 0
 11386 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11387 08bc 1A46     		mov	r2, r3	@ movhi
 11388 08be 9200     		lsls	r2, r2, #2
 11389 08c0 1344     		add	r3, r3, r2
 11390 08c2 1A46     		mov	r2, r3	@ movhi
 11391 08c4 9100     		lsls	r1, r2, #2
 11392 08c6 1A46     		mov	r2, r3	@ movhi
 11393 08c8 0B46     		mov	r3, r1	@ movhi
 11394 08ca 1344     		add	r3, r3, r2
 11395 08cc 5B00     		lsls	r3, r3, #1
 11396 08ce 9AB2     		uxth	r2, r3
 11397 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11398 08d4 1344     		add	r3, r3, r2
 11399 08d6 9BB2     		uxth	r3, r3
 11400 08d8 0733     		adds	r3, r3, #7
 11401 08da 9BB2     		uxth	r3, r3
 11402 08dc 1846     		mov	r0, r3
 11403 08de B7F8A436 		ldrh	r3, [r7, #1700]
 11404 08e2 774A     		ldr	r2, .L522
 11405 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11406 08e6 1946     		mov	r1, r3
 11407 08e8 774A     		ldr	r2, .L522+8
 11408 08ea 0B46     		mov	r3, r1
 11409 08ec 9B00     		lsls	r3, r3, #2
 11410 08ee 0B44     		add	r3, r3, r1
 11411 08f0 1344     		add	r3, r3, r2
 11412 08f2 03F20523 		addw	r3, r3, #517
 11413 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11414 08f8 07F58A73 		add	r3, r7, #276
 11415 08fc 1A54     		strb	r2, [r3, r0]
1709:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.imu.IMU_c
 11416              		.loc 1 1709 0
 11417 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11418 0902 1A46     		mov	r2, r3	@ movhi
 11419 0904 9200     		lsls	r2, r2, #2
 11420 0906 1344     		add	r3, r3, r2
 11421 0908 1A46     		mov	r2, r3	@ movhi
 11422 090a 9100     		lsls	r1, r2, #2
 11423 090c 1A46     		mov	r2, r3	@ movhi
 11424 090e 0B46     		mov	r3, r1	@ movhi
 11425 0910 1344     		add	r3, r3, r2
 11426 0912 5B00     		lsls	r3, r3, #1
 11427 0914 9AB2     		uxth	r2, r3
 11428 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11429 091a 1344     		add	r3, r3, r2
 11430 091c 9BB2     		uxth	r3, r3
 11431 091e 0833     		adds	r3, r3, #8
 11432 0920 9BB2     		uxth	r3, r3
 11433 0922 1846     		mov	r0, r3
 11434 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 11435 0928 654A     		ldr	r2, .L522
 11436 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11437 092c 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 263


 11438 092e 664A     		ldr	r2, .L522+8
 11439 0930 0B46     		mov	r3, r1
 11440 0932 9B00     		lsls	r3, r3, #2
 11441 0934 0B44     		add	r3, r3, r1
 11442 0936 1344     		add	r3, r3, r2
 11443 0938 03F20623 		addw	r3, r3, #518
 11444 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 11445 093e 07F58A73 		add	r3, r7, #276
 11446 0942 1A54     		strb	r2, [r3, r0]
1710:..\src/command_processing.c **** 
1711:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 11447              		.loc 1 1711 0
 11448 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11449 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11450 094c 2BE0     		b	.L497
 11451              	.L498:
1712:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11452              		.loc 1 1712 0 discriminator 3
 11453 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 11454 0952 1A46     		mov	r2, r3	@ movhi
 11455 0954 9200     		lsls	r2, r2, #2
 11456 0956 1344     		add	r3, r3, r2
 11457 0958 1A46     		mov	r2, r3	@ movhi
 11458 095a 9100     		lsls	r1, r2, #2
 11459 095c 1A46     		mov	r2, r3	@ movhi
 11460 095e 0B46     		mov	r3, r1	@ movhi
 11461 0960 1344     		add	r3, r3, r2
 11462 0962 5B00     		lsls	r3, r3, #1
 11463 0964 9AB2     		uxth	r2, r3
 11464 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11465 096a 1344     		add	r3, r3, r2
 11466 096c 9AB2     		uxth	r2, r3
 11467 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 11468 0972 9BB2     		uxth	r3, r3
 11469 0974 1344     		add	r3, r3, r2
 11470 0976 9AB2     		uxth	r2, r3
 11471 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 11472 097c D31A     		subs	r3, r2, r3
 11473 097e 9BB2     		uxth	r3, r3
 11474 0980 0933     		adds	r3, r3, #9
 11475 0982 9BB2     		uxth	r3, r3
 11476 0984 1946     		mov	r1, r3
 11477 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 11478 098a B7F8A236 		ldrh	r3, [r7, #1698]
 11479 098e D31A     		subs	r3, r2, r3
 11480 0990 07F19C02 		add	r2, r7, #156
 11481 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 11482 0996 07F58A73 		add	r3, r7, #276
 11483 099a 5A54     		strb	r2, [r3, r1]
1711:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11484              		.loc 1 1711 0 discriminator 3
 11485 099c B7F8A236 		ldrh	r3, [r7, #1698]
 11486 09a0 013B     		subs	r3, r3, #1
 11487 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 11488              	.L497:
1711:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 11489              		.loc 1 1711 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 264


 11490 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 11491 09aa 002B     		cmp	r3, #0
 11492 09ac CFD1     		bne	.L498
1698:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11493              		.loc 1 1698 0 is_stmt 1 discriminator 2
 11494 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 11495 09b2 0133     		adds	r3, r3, #1
 11496 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11497              	.L496:
1698:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 11498              		.loc 1 1698 0 is_stmt 0 discriminator 1
 11499 09b8 444B     		ldr	r3, .L522+12
 11500 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11501 09bc 9BB2     		uxth	r3, r3
 11502 09be B7F8A426 		ldrh	r2, [r7, #1700]
 11503 09c2 9A42     		cmp	r2, r3
 11504 09c4 FFF4CAAE 		bcc	.L499
1713:..\src/command_processing.c ****             }  
1714:..\src/command_processing.c ****           
1715:..\src/command_processing.c **** 
1716:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1717:..\src/command_processing.c ****             
1718:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 11505              		.loc 1 1718 0 is_stmt 1
 11506 09c8 404B     		ldr	r3, .L522+12
 11507 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11508 09cc 9BB2     		uxth	r3, r3
 11509 09ce 1A46     		mov	r2, r3	@ movhi
 11510 09d0 9200     		lsls	r2, r2, #2
 11511 09d2 1344     		add	r3, r3, r2
 11512 09d4 1A46     		mov	r2, r3	@ movhi
 11513 09d6 9100     		lsls	r1, r2, #2
 11514 09d8 1A46     		mov	r2, r3	@ movhi
 11515 09da 0B46     		mov	r3, r1	@ movhi
 11516 09dc 1344     		add	r3, r3, r2
 11517 09de 5B00     		lsls	r3, r3, #1
 11518 09e0 9AB2     		uxth	r2, r3
 11519 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11520 09e6 1344     		add	r3, r3, r2
 11521 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1719:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 11522              		.loc 1 1719 0
 11523 09ec B7F89836 		ldrh	r3, [r7, #1688]
 11524 09f0 364A     		ldr	r2, .L522+12
 11525 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11526 09f4 1A44     		add	r2, r2, r3
 11527 09f6 07F18003 		add	r3, r7, #128
 11528 09fa 3549     		ldr	r1, .L522+16
 11529 09fc 1846     		mov	r0, r3
 11530 09fe FFF7FEFF 		bl	sprintf
1720:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 11531              		.loc 1 1720 0
 11532 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 11533 0a06 0233     		adds	r3, r3, #2
 11534 0a08 07F58A72 		add	r2, r7, #276
 11535 0a0c 0021     		movs	r1, #0
 11536 0a0e D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 265


1721:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 11537              		.loc 1 1721 0
 11538 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 11539 0a14 0333     		adds	r3, r3, #3
 11540 0a16 07F58A72 		add	r2, r7, #276
 11541 0a1a 0121     		movs	r1, #1
 11542 0a1c D154     		strb	r1, [r2, r3]
1722:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.imu.SPI_read_delay;
 11543              		.loc 1 1722 0
 11544 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 11545 0a22 0433     		adds	r3, r3, #4
 11546 0a24 284A     		ldr	r2, .L522+8
 11547 0a26 92F80112 		ldrb	r1, [r2, #513]	@ zero_extendqisi2
 11548 0a2a 07F58A72 		add	r2, r7, #276
 11549 0a2e D154     		strb	r1, [r2, r3]
1723:..\src/command_processing.c ****             switch(c_mem.imu.SPI_read_delay) {
 11550              		.loc 1 1723 0
 11551 0a30 254B     		ldr	r3, .L522+8
 11552 0a32 93F80132 		ldrb	r3, [r3, #513]	@ zero_extendqisi2
 11553 0a36 012B     		cmp	r3, #1
 11554 0a38 17D0     		beq	.L501
 11555 0a3a 022B     		cmp	r3, #2
 11556 0a3c 28D0     		beq	.L502
 11557 0a3e 002B     		cmp	r3, #0
 11558 0a40 00D0     		beq	.L503
1724:..\src/command_processing.c ****                 case 0: 
1725:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1726:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1727:..\src/command_processing.c ****                     break;
1728:..\src/command_processing.c ****                 case 1: 
1729:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1730:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1731:..\src/command_processing.c ****                     break;
1732:..\src/command_processing.c ****                 case 2: 
1733:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1734:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1735:..\src/command_processing.c ****                     break;
1736:..\src/command_processing.c ****                 default:
1737:..\src/command_processing.c ****                     break;
 11559              		.loc 1 1737 0
 11560 0a42 38E0     		b	.L504
 11561              	.L503:
1725:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11562              		.loc 1 1725 0
 11563 0a44 07F18003 		add	r3, r7, #128
 11564 0a48 1846     		mov	r0, r3
 11565 0a4a FFF7FEFF 		bl	strlen
 11566 0a4e 0346     		mov	r3, r0
 11567 0a50 1A46     		mov	r2, r3
 11568 0a52 07F18003 		add	r3, r7, #128
 11569 0a56 1344     		add	r3, r3, r2
 11570 0a58 1E4A     		ldr	r2, .L522+20
 11571 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 11572 0a5c 1860     		str	r0, [r3]	@ unaligned
 11573 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11574 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1726:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 266


 11575              		.loc 1 1726 0
 11576 0a62 1A23     		movs	r3, #26
 11577 0a64 87F89D36 		strb	r3, [r7, #1693]
1727:..\src/command_processing.c ****                 case 1: 
 11578              		.loc 1 1727 0
 11579 0a68 25E0     		b	.L504
 11580              	.L501:
1729:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 11581              		.loc 1 1729 0
 11582 0a6a 07F18003 		add	r3, r7, #128
 11583 0a6e 1846     		mov	r0, r3
 11584 0a70 FFF7FEFF 		bl	strlen
 11585 0a74 0346     		mov	r3, r0
 11586 0a76 1A46     		mov	r2, r3
 11587 0a78 07F18003 		add	r3, r7, #128
 11588 0a7c 1344     		add	r3, r3, r2
 11589 0a7e 164A     		ldr	r2, .L522+24
 11590 0a80 1068     		ldr	r0, [r2]	@ unaligned
 11591 0a82 1860     		str	r0, [r3]	@ unaligned
 11592 0a84 1279     		ldrb	r2, [r2, #4]
 11593 0a86 1A71     		strb	r2, [r3, #4]
1730:..\src/command_processing.c ****                     break;
 11594              		.loc 1 1730 0
 11595 0a88 1923     		movs	r3, #25
 11596 0a8a 87F89D36 		strb	r3, [r7, #1693]
1731:..\src/command_processing.c ****                 case 2: 
 11597              		.loc 1 1731 0
 11598 0a8e 12E0     		b	.L504
 11599              	.L502:
1733:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 11600              		.loc 1 1733 0
 11601 0a90 07F18003 		add	r3, r7, #128
 11602 0a94 1846     		mov	r0, r3
 11603 0a96 FFF7FEFF 		bl	strlen
 11604 0a9a 0346     		mov	r3, r0
 11605 0a9c 1A46     		mov	r2, r3
 11606 0a9e 07F18003 		add	r3, r7, #128
 11607 0aa2 1344     		add	r3, r3, r2
 11608 0aa4 0D4A     		ldr	r2, .L522+28
 11609 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 11610 0aa8 1860     		str	r0, [r3]	@ unaligned
 11611 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 11612 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1734:..\src/command_processing.c ****                     break;
 11613              		.loc 1 1734 0
 11614 0aae 1A23     		movs	r3, #26
 11615 0ab0 87F89D36 		strb	r3, [r7, #1693]
1735:..\src/command_processing.c ****                 default:
 11616              		.loc 1 1735 0
 11617 0ab4 00BF     		nop
 11618              	.L504:
1738:..\src/command_processing.c ****             }            
1739:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 11619              		.loc 1 1739 0
 11620 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11621 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11622 0abe 28E0     		b	.L505
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 267


 11623              	.L523:
 11624              		.align	2
 11625              	.L522:
 11626 0ac0 00000000 		.word	IMU_connected
 11627 0ac4 9C0F0000 		.word	.LC138
 11628 0ac8 00000000 		.word	c_mem
 11629 0acc 00000000 		.word	N_IMU_Connected
 11630 0ad0 B80F0000 		.word	.LC139
 11631 0ad4 D00F0000 		.word	.LC140
 11632 0ad8 D80F0000 		.word	.LC141
 11633 0adc E00F0000 		.word	.LC142
 11634              	.L506:
1740:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11635              		.loc 1 1740 0 discriminator 3
 11636 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 11637 0ae4 5A1D     		adds	r2, r3, #5
 11638 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11639 0aea 1A44     		add	r2, r2, r3
 11640 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 11641 0af0 D31A     		subs	r3, r2, r3
 11642 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 11643 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 11644 0afa 8A1A     		subs	r2, r1, r2
 11645 0afc 07F18001 		add	r1, r7, #128
 11646 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11647 0b02 07F58A72 		add	r2, r7, #276
 11648 0b06 D154     		strb	r1, [r2, r3]
1739:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11649              		.loc 1 1739 0 discriminator 3
 11650 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 11651 0b0c 013B     		subs	r3, r3, #1
 11652 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11653              	.L505:
1739:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 11654              		.loc 1 1739 0 is_stmt 0 discriminator 1
 11655 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 11656 0b16 002B     		cmp	r3, #0
 11657 0b18 E2D1     		bne	.L506
1741:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1742:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 11658              		.loc 1 1742 0 is_stmt 1
 11659 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 11660 0b1e 5A1D     		adds	r2, r3, #5
 11661 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 11662 0b24 1344     		add	r3, r3, r2
 11663 0b26 07F58A72 		add	r2, r7, #276
 11664 0b2a 0121     		movs	r1, #1
 11665 0b2c D154     		strb	r1, [r2, r3]
1743:..\src/command_processing.c ****                   
1744:..\src/command_processing.c ****             
1745:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1746:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 11666              		.loc 1 1746 0
 11667 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11668 0b32 3233     		adds	r3, r3, #50
 11669 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1747:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 268


 11670              		.loc 1 1747 0
 11671 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11672 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11673 0b40 1AE0     		b	.L507
 11674              	.L508:
1748:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 11675              		.loc 1 1748 0 discriminator 3
 11676 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 11677 0b46 0233     		adds	r3, r3, #2
 11678 0b48 9BB2     		uxth	r3, r3
 11679 0b4a 1A46     		mov	r2, r3
 11680 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 11681 0b50 1A44     		add	r2, r2, r3
 11682 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 11683 0b56 D31A     		subs	r3, r2, r3
 11684 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 11685 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 11686 0b60 8A1A     		subs	r2, r1, r2
 11687 0b62 07F10801 		add	r1, r7, #8
 11688 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 11689 0b68 07F58A72 		add	r2, r7, #276
 11690 0b6c D154     		strb	r1, [r2, r3]
1747:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11691              		.loc 1 1747 0 discriminator 3
 11692 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 11693 0b72 013B     		subs	r3, r3, #1
 11694 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11695              	.L507:
1747:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 11696              		.loc 1 1747 0 is_stmt 0 discriminator 1
 11697 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 11698 0b7c 002B     		cmp	r3, #0
 11699 0b7e E0D1     		bne	.L508
1749:..\src/command_processing.c **** 
1750:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 11700              		.loc 1 1750 0 is_stmt 1
 11701 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 11702 0b84 5C1E     		subs	r4, r3, #1
 11703 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 11704 0b8a DBB2     		uxtb	r3, r3
 11705 0b8c 013B     		subs	r3, r3, #1
 11706 0b8e DAB2     		uxtb	r2, r3
 11707 0b90 07F58A73 		add	r3, r7, #276
 11708 0b94 1146     		mov	r1, r2
 11709 0b96 1846     		mov	r0, r3
 11710 0b98 FFF7FEFF 		bl	LCRChecksum
 11711 0b9c 0346     		mov	r3, r0
 11712 0b9e 1A46     		mov	r2, r3
 11713 0ba0 07F58A73 		add	r3, r7, #276
 11714 0ba4 1A55     		strb	r2, [r3, r4]
1751:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 11715              		.loc 1 1751 0
 11716 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 11717 0baa 07F58A73 		add	r3, r7, #276
 11718 0bae 1146     		mov	r1, r2
 11719 0bb0 1846     		mov	r0, r3
 11720 0bb2 FFF7FEFF 		bl	commWrite
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 269


1752:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 11721              		.loc 1 1752 0
 11722 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1753:..\src/command_processing.c ****         break;
 11723              		.loc 1 1753 0
 11724 0bba 09E1     		b	.L509
 11725              	.L516:
1754:..\src/command_processing.c **** 
1755:..\src/command_processing.c **** //=========================================================     other_params
1756:..\src/command_processing.c ****         default: 
1757:..\src/command_processing.c ****             
1758:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 11726              		.loc 1 1758 0
 11727 0bbc BB1D     		adds	r3, r7, #6
 11728 0bbe 1A88     		ldrh	r2, [r3]
 11729 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 11730 0bc4 013B     		subs	r3, r3, #1
 11731 0bc6 9A42     		cmp	r2, r3
 11732 0bc8 C0F20181 		blt	.L517
1759:..\src/command_processing.c ****                 break;
1760:..\src/command_processing.c ****             
1761:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 11733              		.loc 1 1761 0
 11734 0bcc BB1D     		adds	r3, r7, #6
 11735 0bce 1A88     		ldrh	r2, [r3]
 11736 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 11737 0bd4 8149     		ldr	r1, .L524
 11738 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 11739 0bd8 0B44     		add	r3, r3, r1
 11740 0bda 9A42     		cmp	r2, r3
 11741 0bdc 05D1     		bne	.L511
1762:..\src/command_processing.c ****                 g_mem.imu.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 11742              		.loc 1 1762 0
 11743 0bde 804B     		ldr	r3, .L524+4
 11744 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11745 0be2 804B     		ldr	r3, .L524+8
 11746 0be4 83F80122 		strb	r2, [r3, #513]
1763:..\src/command_processing.c ****                 break;
 11747              		.loc 1 1763 0
 11748 0be8 F2E0     		b	.L509
 11749              	.L511:
1764:..\src/command_processing.c ****             }
1765:..\src/command_processing.c ****             
1766:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 11750              		.loc 1 1766 0
 11751 0bea BB1D     		adds	r3, r7, #6
 11752 0bec 1A88     		ldrh	r2, [r3]
 11753 0bee B7F89836 		ldrh	r3, [r7, #1688]
 11754 0bf2 013B     		subs	r3, r3, #1
 11755 0bf4 9A42     		cmp	r2, r3
 11756 0bf6 05D1     		bne	.L512
1767:..\src/command_processing.c ****                 g_mem.dev.id = g_rx.buffer[3];          //ID - uint8
 11757              		.loc 1 1767 0
 11758 0bf8 794B     		ldr	r3, .L524+4
 11759 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 11760 0bfc 794B     		ldr	r3, .L524+8
 11761 0bfe 83F8A020 		strb	r2, [r3, #160]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 270


1768:..\src/command_processing.c ****             }
1769:..\src/command_processing.c ****             else {
1770:..\src/command_processing.c ****             
1771:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1772:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1773:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1774:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1775:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1776:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1777:..\src/command_processing.c ****                 
1778:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1779:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1780:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1781:..\src/command_processing.c ****                 {
1782:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.imu.IMU_conf[IMU_connected[i]][
1783:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1784:..\src/command_processing.c ****                 }
1785:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1786:..\src/command_processing.c ****             
1787:..\src/command_processing.c ****             }
1788:..\src/command_processing.c ****             
1789:..\src/command_processing.c ****         break;
 11762              		.loc 1 1789 0
 11763 0c02 E5E0     		b	.L509
 11764              	.L512:
1772:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 11765              		.loc 1 1772 0
 11766 0c04 BB1D     		adds	r3, r7, #6
 11767 0c06 1A88     		ldrh	r2, [r3]
 11768 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 11769 0c0c D31A     		subs	r3, r2, r3
 11770 0c0e 764A     		ldr	r2, .L524+12
 11771 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11772 0c12 1946     		mov	r1, r3
 11773 0c14 724B     		ldr	r3, .L524+4
 11774 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 11775 0c18 724A     		ldr	r2, .L524+8
 11776 0c1a 0B46     		mov	r3, r1
 11777 0c1c 9B00     		lsls	r3, r3, #2
 11778 0c1e 0B44     		add	r3, r3, r1
 11779 0c20 1344     		add	r3, r3, r2
 11780 0c22 03F20223 		addw	r3, r3, #514
 11781 0c26 0246     		mov	r2, r0
 11782 0c28 1A70     		strb	r2, [r3]
1773:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 11783              		.loc 1 1773 0
 11784 0c2a BB1D     		adds	r3, r7, #6
 11785 0c2c 1A88     		ldrh	r2, [r3]
 11786 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 11787 0c32 D31A     		subs	r3, r2, r3
 11788 0c34 6C4A     		ldr	r2, .L524+12
 11789 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11790 0c38 1946     		mov	r1, r3
 11791 0c3a 694B     		ldr	r3, .L524+4
 11792 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 11793 0c3e 694A     		ldr	r2, .L524+8
 11794 0c40 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 271


 11795 0c42 9B00     		lsls	r3, r3, #2
 11796 0c44 0B44     		add	r3, r3, r1
 11797 0c46 1344     		add	r3, r3, r2
 11798 0c48 03F20323 		addw	r3, r3, #515
 11799 0c4c 0246     		mov	r2, r0
 11800 0c4e 1A70     		strb	r2, [r3]
1774:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 11801              		.loc 1 1774 0
 11802 0c50 BB1D     		adds	r3, r7, #6
 11803 0c52 1A88     		ldrh	r2, [r3]
 11804 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 11805 0c58 D31A     		subs	r3, r2, r3
 11806 0c5a 634A     		ldr	r2, .L524+12
 11807 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11808 0c5e 1946     		mov	r1, r3
 11809 0c60 5F4B     		ldr	r3, .L524+4
 11810 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 11811 0c64 5F4A     		ldr	r2, .L524+8
 11812 0c66 0B46     		mov	r3, r1
 11813 0c68 9B00     		lsls	r3, r3, #2
 11814 0c6a 0B44     		add	r3, r3, r1
 11815 0c6c 1344     		add	r3, r3, r2
 11816 0c6e 03F50173 		add	r3, r3, #516
 11817 0c72 0246     		mov	r2, r0
 11818 0c74 1A70     		strb	r2, [r3]
1775:..\src/command_processing.c ****                 g_mem.imu.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 11819              		.loc 1 1775 0
 11820 0c76 BB1D     		adds	r3, r7, #6
 11821 0c78 1A88     		ldrh	r2, [r3]
 11822 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 11823 0c7e D31A     		subs	r3, r2, r3
 11824 0c80 594A     		ldr	r2, .L524+12
 11825 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11826 0c84 1946     		mov	r1, r3
 11827 0c86 564B     		ldr	r3, .L524+4
 11828 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 11829 0c8a 564A     		ldr	r2, .L524+8
 11830 0c8c 0B46     		mov	r3, r1
 11831 0c8e 9B00     		lsls	r3, r3, #2
 11832 0c90 0B44     		add	r3, r3, r1
 11833 0c92 1344     		add	r3, r3, r2
 11834 0c94 03F20523 		addw	r3, r3, #517
 11835 0c98 0246     		mov	r2, r0
 11836 0c9a 1A70     		strb	r2, [r3]
1776:..\src/command_processing.c ****                 
 11837              		.loc 1 1776 0
 11838 0c9c BB1D     		adds	r3, r7, #6
 11839 0c9e 1A88     		ldrh	r2, [r3]
 11840 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 11841 0ca4 D31A     		subs	r3, r2, r3
 11842 0ca6 504A     		ldr	r2, .L524+12
 11843 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11844 0caa 1946     		mov	r1, r3
 11845 0cac 4C4B     		ldr	r3, .L524+4
 11846 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 11847 0cb0 4C4A     		ldr	r2, .L524+8
 11848 0cb2 0B46     		mov	r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 272


 11849 0cb4 9B00     		lsls	r3, r3, #2
 11850 0cb6 0B44     		add	r3, r3, r1
 11851 0cb8 1344     		add	r3, r3, r2
 11852 0cba 03F20623 		addw	r3, r3, #518
 11853 0cbe 0246     		mov	r2, r0
 11854 0cc0 1A70     		strb	r2, [r3]
1779:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 11855              		.loc 1 1779 0
 11856 0cc2 4A4B     		ldr	r3, .L524+16
 11857 0cc4 0122     		movs	r2, #1
 11858 0cc6 1A60     		str	r2, [r3]
1780:..\src/command_processing.c ****                 {
 11859              		.loc 1 1780 0
 11860 0cc8 0023     		movs	r3, #0
 11861 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11862 0cce 71E0     		b	.L514
 11863              	.L515:
1782:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 11864              		.loc 1 1782 0 discriminator 3
 11865 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 11866 0cd4 444A     		ldr	r2, .L524+12
 11867 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11868 0cd8 1C46     		mov	r4, r3
 11869 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 11870 0cde 424A     		ldr	r2, .L524+12
 11871 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11872 0ce2 1946     		mov	r1, r3
 11873 0ce4 3F4A     		ldr	r2, .L524+8
 11874 0ce6 0B46     		mov	r3, r1
 11875 0ce8 9B00     		lsls	r3, r3, #2
 11876 0cea 0B44     		add	r3, r3, r1
 11877 0cec 1344     		add	r3, r3, r2
 11878 0cee 03F20223 		addw	r3, r3, #514
 11879 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11880 0cf4 1A46     		mov	r2, r3
 11881 0cf6 1346     		mov	r3, r2
 11882 0cf8 5B00     		lsls	r3, r3, #1
 11883 0cfa 1344     		add	r3, r3, r2
 11884 0cfc 5B00     		lsls	r3, r3, #1
 11885 0cfe 5A1C     		adds	r2, r3, #1
 11886 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 11887 0d04 3849     		ldr	r1, .L524+12
 11888 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11889 0d08 1846     		mov	r0, r3
 11890 0d0a 3649     		ldr	r1, .L524+8
 11891 0d0c 0346     		mov	r3, r0
 11892 0d0e 9B00     		lsls	r3, r3, #2
 11893 0d10 0344     		add	r3, r3, r0
 11894 0d12 0B44     		add	r3, r3, r1
 11895 0d14 03F20323 		addw	r3, r3, #515
 11896 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11897 0d1a 1946     		mov	r1, r3
 11898 0d1c 0B46     		mov	r3, r1
 11899 0d1e 5B00     		lsls	r3, r3, #1
 11900 0d20 0B44     		add	r3, r3, r1
 11901 0d22 5B00     		lsls	r3, r3, #1
 11902 0d24 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 273


 11903 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 11904 0d2a 2F49     		ldr	r1, .L524+12
 11905 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11906 0d2e 1846     		mov	r0, r3
 11907 0d30 2C49     		ldr	r1, .L524+8
 11908 0d32 0346     		mov	r3, r0
 11909 0d34 9B00     		lsls	r3, r3, #2
 11910 0d36 0344     		add	r3, r3, r0
 11911 0d38 0B44     		add	r3, r3, r1
 11912 0d3a 03F50173 		add	r3, r3, #516
 11913 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11914 0d40 1946     		mov	r1, r3
 11915 0d42 0B46     		mov	r3, r1
 11916 0d44 5B00     		lsls	r3, r3, #1
 11917 0d46 0B44     		add	r3, r3, r1
 11918 0d48 5B00     		lsls	r3, r3, #1
 11919 0d4a 1A44     		add	r2, r2, r3
 11920 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 11921 0d50 2549     		ldr	r1, .L524+12
 11922 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11923 0d54 1846     		mov	r0, r3
 11924 0d56 2349     		ldr	r1, .L524+8
 11925 0d58 0346     		mov	r3, r0
 11926 0d5a 9B00     		lsls	r3, r3, #2
 11927 0d5c 0344     		add	r3, r3, r0
 11928 0d5e 0B44     		add	r3, r3, r1
 11929 0d60 03F20523 		addw	r3, r3, #517
 11930 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11931 0d66 1B01     		lsls	r3, r3, #4
 11932 0d68 1A44     		add	r2, r2, r3
 11933 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 11934 0d6e 1E49     		ldr	r1, .L524+12
 11935 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 11936 0d72 1846     		mov	r0, r3
 11937 0d74 1B49     		ldr	r1, .L524+8
 11938 0d76 0346     		mov	r3, r0
 11939 0d78 9B00     		lsls	r3, r3, #2
 11940 0d7a 0344     		add	r3, r3, r0
 11941 0d7c 0B44     		add	r3, r3, r1
 11942 0d7e 03F20623 		addw	r3, r3, #518
 11943 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11944 0d84 5B00     		lsls	r3, r3, #1
 11945 0d86 1344     		add	r3, r3, r2
 11946 0d88 0133     		adds	r3, r3, #1
 11947 0d8a 194A     		ldr	r2, .L524+20
 11948 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1783:..\src/command_processing.c ****                 }
 11949              		.loc 1 1783 0 discriminator 3
 11950 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 11951 0d94 144A     		ldr	r2, .L524+12
 11952 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 11953 0d98 1A46     		mov	r2, r3
 11954 0d9a 154B     		ldr	r3, .L524+20
 11955 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 11956 0da0 124B     		ldr	r3, .L524+16
 11957 0da2 1B68     		ldr	r3, [r3]
 11958 0da4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 274


 11959 0da6 114A     		ldr	r2, .L524+16
 11960 0da8 1360     		str	r3, [r2]
1780:..\src/command_processing.c ****                 {
 11961              		.loc 1 1780 0 discriminator 3
 11962 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 11963 0dae 0133     		adds	r3, r3, #1
 11964 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 11965              	.L514:
1780:..\src/command_processing.c ****                 {
 11966              		.loc 1 1780 0 is_stmt 0 discriminator 1
 11967 0db4 094B     		ldr	r3, .L524
 11968 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11969 0db8 9BB2     		uxth	r3, r3
 11970 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 11971 0dbe 9A42     		cmp	r2, r3
 11972 0dc0 86D3     		bcc	.L515
1785:..\src/command_processing.c ****             
 11973              		.loc 1 1785 0 is_stmt 1
 11974 0dc2 0A4B     		ldr	r3, .L524+16
 11975 0dc4 1B68     		ldr	r3, [r3]
 11976 0dc6 0133     		adds	r3, r3, #1
 11977 0dc8 084A     		ldr	r2, .L524+16
 11978 0dca 1360     		str	r3, [r2]
 11979              		.loc 1 1789 0
 11980 0dcc 00E0     		b	.L509
 11981              	.L517:
1759:..\src/command_processing.c ****             
 11982              		.loc 1 1759 0
 11983 0dce 00BF     		nop
 11984              	.L509:
1790:..\src/command_processing.c ****     }
1791:..\src/command_processing.c **** }
 11985              		.loc 1 1791 0 discriminator 1
 11986 0dd0 00BF     		nop
 11987 0dd2 07F5D567 		add	r7, r7, #1704
 11988              		.cfi_def_cfa_offset 16
 11989 0dd6 BD46     		mov	sp, r7
 11990              		.cfi_def_cfa_register 13
 11991              		@ sp needed
 11992 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 11993              	.L525:
 11994 0dda 00BF     		.align	2
 11995              	.L524:
 11996 0ddc 00000000 		.word	N_IMU_Connected
 11997 0de0 00000000 		.word	g_rx
 11998 0de4 00000000 		.word	g_mem
 11999 0de8 00000000 		.word	IMU_connected
 12000 0dec 00000000 		.word	imus_data_size
 12001 0df0 00000000 		.word	single_imu_size
 12002              		.cfi_endproc
 12003              	.LFE70:
 12004              		.size	get_IMU_param_list, .-get_IMU_param_list
 12005              		.section	.text.setZeros,"ax",%progbits
 12006              		.align	2
 12007              		.global	setZeros
 12008              		.thumb
 12009              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 275


 12010              		.type	setZeros, %function
 12011              	setZeros:
 12012              	.LFB71:
1792:..\src/command_processing.c **** 
1793:..\src/command_processing.c **** //==============================================================================
1794:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1795:..\src/command_processing.c **** //==============================================================================
1796:..\src/command_processing.c **** 
1797:..\src/command_processing.c **** void setZeros()
1798:..\src/command_processing.c **** {
 12013              		.loc 1 1798 0
 12014              		.cfi_startproc
 12015              		@ args = 0, pretend = 0, frame = 8
 12016              		@ frame_needed = 1, uses_anonymous_args = 0
 12017 0000 90B5     		push	{r4, r7, lr}
 12018              		.cfi_def_cfa_offset 12
 12019              		.cfi_offset 4, -12
 12020              		.cfi_offset 7, -8
 12021              		.cfi_offset 14, -4
 12022 0002 83B0     		sub	sp, sp, #12
 12023              		.cfi_def_cfa_offset 24
 12024 0004 00AF     		add	r7, sp, #0
 12025              		.cfi_def_cfa_register 7
1799:..\src/command_processing.c ****     uint8 CYDATA i, j;        // iterator
1800:..\src/command_processing.c ****     
1801:..\src/command_processing.c ****     for (j = 0; j < N_ENCODER_LINE_MAX; j++) {
 12026              		.loc 1 1801 0
 12027 0006 0023     		movs	r3, #0
 12028 0008 BB71     		strb	r3, [r7, #6]
 12029 000a 26E0     		b	.L527
 12030              	.L530:
1802:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12031              		.loc 1 1802 0
 12032 000c 0023     		movs	r3, #0
 12033 000e FB71     		strb	r3, [r7, #7]
 12034 0010 1DE0     		b	.L528
 12035              	.L529:
1803:..\src/command_processing.c ****             g_mem.enc[j].m_off[i] = data_encoder_raw[i];
 12036              		.loc 1 1803 0 discriminator 3
 12037 0012 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12038 0014 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 12039 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12040 0018 1648     		ldr	r0, .L531
 12041 001a 50F82330 		ldr	r3, [r0, r3, lsl #2]
 12042 001e 1C46     		mov	r4, r3
 12043 0020 1548     		ldr	r0, .L531+4
 12044 0022 1346     		mov	r3, r2
 12045 0024 5B00     		lsls	r3, r3, #1
 12046 0026 1344     		add	r3, r3, r2
 12047 0028 9B00     		lsls	r3, r3, #2
 12048 002a 0B44     		add	r3, r3, r1
 12049 002c 6633     		adds	r3, r3, #102
 12050 002e 40F82340 		str	r4, [r0, r3, lsl #2]
1804:..\src/command_processing.c ****             g_meas[j].rot[i] = 0;
 12051              		.loc 1 1804 0 discriminator 3
 12052 0032 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 12053 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 276


 12054 0036 1149     		ldr	r1, .L531+8
 12055 0038 3420     		movs	r0, #52
 12056 003a 00FB02F2 		mul	r2, r0, r2
 12057 003e 0A44     		add	r2, r2, r1
 12058 0040 1344     		add	r3, r3, r2
 12059 0042 1833     		adds	r3, r3, #24
 12060 0044 0022     		movs	r2, #0
 12061 0046 1A70     		strb	r2, [r3]
1802:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12062              		.loc 1 1802 0 discriminator 3
 12063 0048 FB79     		ldrb	r3, [r7, #7]
 12064 004a 0133     		adds	r3, r3, #1
 12065 004c FB71     		strb	r3, [r7, #7]
 12066              	.L528:
1802:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12067              		.loc 1 1802 0 is_stmt 0 discriminator 1
 12068 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 12069 0050 022B     		cmp	r3, #2
 12070 0052 DED9     		bls	.L529
1801:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12071              		.loc 1 1801 0 is_stmt 1 discriminator 2
 12072 0054 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12073 0056 0133     		adds	r3, r3, #1
 12074 0058 BB71     		strb	r3, [r7, #6]
 12075              	.L527:
1801:..\src/command_processing.c ****         for(i = 0; i < NUM_OF_SENSORS; ++i) {
 12076              		.loc 1 1801 0 is_stmt 0 discriminator 1
 12077 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 12078 005c 012B     		cmp	r3, #1
 12079 005e D5D9     		bls	.L530
1805:..\src/command_processing.c ****         }
1806:..\src/command_processing.c ****     }
1807:..\src/command_processing.c ****     reset_last_value_flag = 1;
 12080              		.loc 1 1807 0 is_stmt 1
 12081 0060 074B     		ldr	r3, .L531+12
 12082 0062 0122     		movs	r2, #1
 12083 0064 1A70     		strb	r2, [r3]
1808:..\src/command_processing.c **** 
1809:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 12084              		.loc 1 1809 0
 12085 0066 0120     		movs	r0, #1
 12086 0068 FFF7FEFF 		bl	sendAcknowledgment
1810:..\src/command_processing.c **** }
 12087              		.loc 1 1810 0
 12088 006c 00BF     		nop
 12089 006e 0C37     		adds	r7, r7, #12
 12090              		.cfi_def_cfa_offset 12
 12091 0070 BD46     		mov	sp, r7
 12092              		.cfi_def_cfa_register 13
 12093              		@ sp needed
 12094 0072 90BD     		pop	{r4, r7, pc}
 12095              	.L532:
 12096              		.align	2
 12097              	.L531:
 12098 0074 00000000 		.word	data_encoder_raw
 12099 0078 00000000 		.word	g_mem
 12100 007c 00000000 		.word	g_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 277


 12101 0080 00000000 		.word	reset_last_value_flag
 12102              		.cfi_endproc
 12103              	.LFE71:
 12104              		.size	setZeros, .-setZeros
 12105              		.section	.rodata
 12106              		.align	2
 12107              	.LC143:
 12108 1018 0D0A00   		.ascii	"\015\012\000"
 12109 101b 00       		.align	2
 12110              	.LC144:
 12111 101c 4669726D 		.ascii	"Firmware version: \000"
 12111      77617265 
 12111      20766572 
 12111      73696F6E 
 12111      3A2000
 12112 102f 00       		.align	2
 12113              	.LC145:
 12114 1030 536F6674 		.ascii	"SoftHand PRO firmware v. 1.9 (PSoC5)\000"
 12114      48616E64 
 12114      2050524F 
 12114      20666972 
 12114      6D776172 
 12115 1055 000000   		.align	2
 12116              	.LC146:
 12117 1058 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 12117      0A00
 12118 105e 0000     		.align	2
 12119              	.LC147:
 12120 1060 44455649 		.ascii	"DEVICE INFO\015\012\000"
 12120      43452049 
 12120      4E464F0D 
 12120      0A00
 12121 106e 0000     		.align	2
 12122              	.LC148:
 12123 1070 49443A20 		.ascii	"ID: %d\015\012\000"
 12123      25640D0A 
 12123      00
 12124 1079 000000   		.align	2
 12125              	.LC149:
 12126 107c 44657669 		.ascii	"Device: SOFTHAND PRO\015\012\000"
 12126      63653A20 
 12126      534F4654 
 12126      48414E44 
 12126      2050524F 
 12127 1093 00       		.align	2
 12128              	.LC150:
 12129 1094 44657669 		.ascii	"Device: GENERIC 2 MOTORS\015\012\000"
 12129      63653A20 
 12129      47454E45 
 12129      52494320 
 12129      32204D4F 
 12130 10af 00       		.align	2
 12131              	.LC151:
 12132 10b0 44657669 		.ascii	"Device: AIR CHAMBERS HAPTIC FEEDBACK\015\012\000"
 12132      63653A20 
 12132      41495220 
 12132      4348414D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 278


 12132      42455253 
 12133 10d7 00       		.align	2
 12134              	.LC152:
 12135 10d8 44657669 		.ascii	"Device: OTTOBOCK 6v ACTIVE WRIST MASTER\015\012\000"
 12135      63653A20 
 12135      4F54544F 
 12135      424F434B 
 12135      20367620 
 12136 1102 0000     		.align	2
 12137              	.LC153:
 12138 1104 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 12138      20736964 
 12138      653A2052 
 12138      49474854 
 12138      0D0A00
 12139 1117 00       		.align	2
 12140              	.LC154:
 12141 1118 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 12141      20736964 
 12141      653A204C 
 12141      4546540D 
 12141      0A00
 12142 112a 0000     		.align	2
 12143              	.LC155:
 12144 112c 55736572 		.ascii	"User: MARIA\015\012\000"
 12144      3A204D41 
 12144      5249410D 
 12144      0A00
 12145 113a 0000     		.align	2
 12146              	.LC156:
 12147 113c 55736572 		.ascii	"User: ROZA\015\012\000"
 12147      3A20524F 
 12147      5A410D0A 
 12147      00
 12148 1149 000000   		.align	2
 12149              	.LC157:
 12150 114c 55736572 		.ascii	"User: GENERIC USER\015\012\000"
 12150      3A204745 
 12150      4E455249 
 12150      43205553 
 12150      45520D0A 
 12151 1161 000000   		.align	2
 12152              	.LC158:
 12153 1164 4D4F544F 		.ascii	"MOTOR %d INFO\015\012\000"
 12153      52202564 
 12153      20494E46 
 12153      4F0D0A00 
 12154              		.align	2
 12155              	.LC159:
 12156 1174 4D6F746F 		.ascii	"Motor reference\000"
 12156      72207265 
 12156      66657265 
 12156      6E636500 
 12157              		.align	2
 12158              	.LC160:
 12159 1184 202D2043 		.ascii	" - Currents: \000"
 12159      75727265 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 279


 12159      6E74733A 
 12159      2000
 12160 1192 0000     		.align	2
 12161              	.LC161:
 12162 1194 202D2050 		.ascii	" - Pwm: \000"
 12162      776D3A20 
 12162      00
 12163 119d 000000   		.align	2
 12164              	.LC162:
 12165 11a0 202D2050 		.ascii	" - Position: \000"
 12165      6F736974 
 12165      696F6E3A 
 12165      2000
 12166 11ae 0000     		.align	2
 12167              	.LC163:
 12168 11b0 25642000 		.ascii	"%d \000"
 12169              		.align	2
 12170              	.LC164:
 12171 11b4 4D6F746F 		.ascii	"Motor enabled: \000"
 12171      7220656E 
 12171      61626C65 
 12171      643A2000 
 12172              		.align	2
 12173              	.LC165:
 12174 11c4 5945530D 		.ascii	"YES\015\012\000"
 12174      0A00
 12175 11ca 0000     		.align	2
 12176              	.LC166:
 12177 11cc 4E4F0D0A 		.ascii	"NO\015\012\000"
 12177      00
 12178 11d1 000000   		.align	2
 12179              	.LC167:
 12180 11d4 50574D20 		.ascii	"PWM rescaling activation: \000"
 12180      72657363 
 12180      616C696E 
 12180      67206163 
 12180      74697661 
 12181 11ef 00       		.align	2
 12182              	.LC168:
 12183 11f0 5945530A 		.ascii	"YES\012\000"
 12183      00
 12184 11f5 000000   		.align	2
 12185              	.LC169:
 12186 11f8 4E4F0A00 		.ascii	"NO\012\000"
 12187              		.align	2
 12188              	.LC170:
 12189 11fc 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 12189      4C696D69 
 12189      743A2025 
 12189      640D0A00 
 12190              		.align	2
 12191              	.LC171:
 12192 120c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 12192      41535552 
 12192      454D454E 
 12192      54532049 
 12192      4E464F0D 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 280


 12193 1222 0000     		.align	2
 12194              	.LC172:
 12195 1224 53656E73 		.ascii	"Sensor value: \000"
 12195      6F722076 
 12195      616C7565 
 12195      3A2000
 12196 1233 00       		.align	2
 12197              	.LC173:
 12198 1234 256400   		.ascii	"%d\000"
 12199 1237 00       		.align	2
 12200              	.LC174:
 12201 1238 2C2000   		.ascii	", \000"
 12202 123b 00       		.align	2
 12203              	.LC175:
 12204 123c 42617474 		.ascii	"Battery %d Voltage (mV): %ld\000"
 12204      65727920 
 12204      25642056 
 12204      6F6C7461 
 12204      67652028 
 12205 1259 000000   		.align	2
 12206              	.LC176:
 12207 125c 46756C6C 		.ascii	"Full charge power tension %d (mV): %ld\000"
 12207      20636861 
 12207      72676520 
 12207      706F7765 
 12207      72207465 
 12208 1283 00       		.align	2
 12209              	.LC177:
 12210 1284 43757272 		.ascii	"Current %d (mA): %ld\000"
 12210      656E7420 
 12210      25642028 
 12210      6D41293A 
 12210      20256C64 
 12211 1299 000000   		.align	2
 12212              	.LC178:
 12213 129c 4C617374 		.ascii	"Last Grasp Hold Current %d (mA): %ld\000"
 12213      20477261 
 12213      73702048 
 12213      6F6C6420 
 12213      43757272 
 12214 12c1 000000   		.align	2
 12215              	.LC179:
 12216 12c4 0D0A4D4F 		.ascii	"\015\012MOTOR %d CONFIGURATION\015\012\000"
 12216      544F5220 
 12216      25642043 
 12216      4F4E4649 
 12216      47555241 
 12217 12df 00       		.align	2
 12218              	.LC180:
 12219 12e0 50494420 		.ascii	"PID Controller: \000"
 12219      436F6E74 
 12219      726F6C6C 
 12219      65723A20 
 12219      00
 12220              		.global	__aeabi_i2d
 12221              		.global	__aeabi_ddiv
 12222 12f1 000000   		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 281


 12223              	.LC181:
 12224 12f4 50202D3E 		.ascii	"P -> %f  \000"
 12224      20256620 
 12224      2000
 12225 12fe 0000     		.align	2
 12226              	.LC182:
 12227 1300 49202D3E 		.ascii	"I -> %f  \000"
 12227      20256620 
 12227      2000
 12228 130a 0000     		.align	2
 12229              	.LC183:
 12230 130c 44202D3E 		.ascii	"D -> %f\015\012\000"
 12230      2025660D 
 12230      0A00
 12231 1316 0000     		.align	2
 12232              	.LC184:
 12233 1318 43757272 		.ascii	"Current PID Controller: \000"
 12233      656E7420 
 12233      50494420 
 12233      436F6E74 
 12233      726F6C6C 
 12234 1331 000000   		.align	2
 12235              	.LC185:
 12236 1334 53746172 		.ascii	"Startup activation: YES\015\012\000"
 12236      74757020 
 12236      61637469 
 12236      76617469 
 12236      6F6E3A20 
 12237 134e 0000     		.align	2
 12238              	.LC186:
 12239 1350 53746172 		.ascii	"Startup activation: NO\015\012\000"
 12239      74757020 
 12239      61637469 
 12239      76617469 
 12239      6F6E3A20 
 12240 1369 000000   		.align	2
 12241              	.LC187:
 12242 136c 496E7075 		.ascii	"Input mode: USB\015\012\000"
 12242      74206D6F 
 12242      64653A20 
 12242      5553420D 
 12242      0A00
 12243 137e 0000     		.align	2
 12244              	.LC188:
 12245 1380 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 12245      74206D6F 
 12245      64653A20 
 12245      48616E64 
 12245      6C650D0A 
 12246 1395 000000   		.align	2
 12247              	.LC189:
 12248 1398 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 12248      74206D6F 
 12248      64653A20 
 12248      454D4720 
 12248      70726F70 
 12249 13b7 00       		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 282


 12250              	.LC190:
 12251 13b8 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 12251      74206D6F 
 12251      64653A20 
 12251      454D4720 
 12251      696E7465 
 12252 13d3 00       		.align	2
 12253              	.LC191:
 12254 13d4 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 12254      74206D6F 
 12254      64653A20 
 12254      454D4720 
 12254      46434653 
 12255 13eb 00       		.align	2
 12256              	.LC192:
 12257 13ec 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 12257      74206D6F 
 12257      64653A20 
 12257      454D4720 
 12257      46434653 
 12258 1407 00       		.align	2
 12259              	.LC193:
 12260 1408 496E7075 		.ascii	"Input mode: Joystick\015\012\000"
 12260      74206D6F 
 12260      64653A20 
 12260      4A6F7973 
 12260      7469636B 
 12261 141f 00       		.align	2
 12262              	.LC194:
 12263 1420 496E7075 		.ascii	"Input mode: EMG proportional Normally Closed\015\012"
 12263      74206D6F 
 12263      64653A20 
 12263      454D4720 
 12263      70726F70 
 12264 144e 00       		.ascii	"\000"
 12265 144f 00       		.align	2
 12266              	.LC195:
 12267 1450 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 12267      726F6C20 
 12267      6D6F6465 
 12267      3A20506F 
 12267      73697469 
 12268 1469 000000   		.align	2
 12269              	.LC196:
 12270 146c 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 12270      726F6C20 
 12270      6D6F6465 
 12270      3A205057 
 12270      4D0D0A00 
 12271              		.align	2
 12272              	.LC197:
 12273 1480 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 12273      726F6C20 
 12273      6D6F6465 
 12273      3A204375 
 12273      7272656E 
 12274              		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 283


 12275              	.LC198:
 12276 1498 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 12276      726F6C20 
 12276      6D6F6465 
 12276      3A20506F 
 12276      73697469 
 12277 14bd 000000   		.align	2
 12278              	.LC199:
 12279 14c0 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 12279      6C757465 
 12279      20656E63 
 12279      6F646572 
 12279      20706F73 
 12280 14e1 000000   		.align	2
 12281              	.LC200:
 12282 14e4 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 12282      6C757465 
 12282      20656E63 
 12282      6F646572 
 12282      20706F73 
 12283              		.align	2
 12284              	.LC201:
 12285 1504 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 12285      722D4861 
 12285      6E646C65 
 12285      20526174 
 12285      696F3A20 
 12286 151d 000000   		.align	2
 12287              	.LC202:
 12288 1520 53656E73 		.ascii	"Sensor resolution: \000"
 12288      6F722072 
 12288      65736F6C 
 12288      7574696F 
 12288      6E3A2000 
 12289              		.align	2
 12290              	.LC203:
 12291 1534 4D656173 		.ascii	"Measurement Offset: \000"
 12291      7572656D 
 12291      656E7420 
 12291      4F666673 
 12291      65743A20 
 12292 1549 000000   		.align	2
 12293              	.LC204:
 12294 154c 256C6400 		.ascii	"%ld\000"
 12295              		.align	2
 12296              	.LC205:
 12297 1550 4D656173 		.ascii	"Measurement Multiplier: \000"
 12297      7572656D 
 12297      656E7420 
 12297      4D756C74 
 12297      69706C69 
 12298              		.global	__aeabi_f2d
 12299 1569 000000   		.align	2
 12300              	.LC206:
 12301 156c 256600   		.ascii	"%f\000"
 12302 156f 00       		.align	2
 12303              	.LC207:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 284


 12304 1570 43757272 		.ascii	"Current lookup table: %f, %f, %f, %f, %f, %f\015\012"
 12304      656E7420 
 12304      6C6F6F6B 
 12304      75702074 
 12304      61626C65 
 12305 159e 00       		.ascii	"\000"
 12306 159f 00       		.align	2
 12307              	.LC208:
 12308 15a0 506F7369 		.ascii	"Position limit active: %d\000"
 12308      74696F6E 
 12308      206C696D 
 12308      69742061 
 12308      63746976 
 12309 15ba 0000     		.align	2
 12310              	.LC209:
 12311 15bc 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 12311      74696F6E 
 12311      206C696D 
 12311      6974206D 
 12311      6F746F72 
 12312 15df 00       		.align	2
 12313              	.LC210:
 12314 15e0 73757020 		.ascii	"sup -> %ld\015\012\000"
 12314      2D3E2025 
 12314      6C640D0A 
 12314      00
 12315 15ed 000000   		.align	2
 12316              	.LC211:
 12317 15f0 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 12317      73746570 
 12317      20706F73 
 12317      20616E64 
 12317      206E6567 
 12318              		.align	2
 12319              	.LC212:
 12320 160c 43757272 		.ascii	"Current limit: %d\015\012\000"
 12320      656E7420 
 12320      6C696D69 
 12320      743A2025 
 12320      640D0A00 
 12321              		.align	2
 12322              	.LC213:
 12323 1620 454D4720 		.ascii	"EMG CONFIGURATION\015\012\000"
 12323      434F4E46 
 12323      49475552 
 12323      4154494F 
 12323      4E0D0A00 
 12324              		.align	2
 12325              	.LC214:
 12326 1634 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 12326      74687265 
 12326      73686F6C 
 12326      6473205B 
 12326      30202D20 
 12327 1656 0000     		.align	2
 12328              	.LC215:
 12329 1658 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 285


 12329      6D617820 
 12329      76616C75 
 12329      6573205B 
 12329      30202D20 
 12330              		.align	2
 12331              	.LC216:
 12332 167c 454D4720 		.ascii	"EMG inversion: YES\015\012\000"
 12332      696E7665 
 12332      7273696F 
 12332      6E3A2059 
 12332      45530D0A 
 12333 1691 000000   		.align	2
 12334              	.LC217:
 12335 1694 454D4720 		.ascii	"EMG inversion: NO\015\012\000"
 12335      696E7665 
 12335      7273696F 
 12335      6E3A204E 
 12335      4F0D0A00 
 12336              		.align	2
 12337              	.LC218:
 12338 16a8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 12338      62726174 
 12338      696F6E20 
 12338      656E6162 
 12338      6C65643A 
 12339 16c3 00       		.align	2
 12340              	.LC219:
 12341 16c4 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 12341      62726174 
 12341      696F6E20 
 12341      656E6162 
 12341      6C65643A 
 12342 16de 0000     		.align	2
 12343              	.LC220:
 12344 16e0 454D4720 		.ascii	"EMG max speed: %d %d\000"
 12344      6D617820 
 12344      73706565 
 12344      643A2025 
 12344      64202564 
 12345 16f5 000000   		.align	2
 12346              	.LC221:
 12347 16f8 41646469 		.ascii	"Additional ADC sensors value:\015\012\000"
 12347      74696F6E 
 12347      616C2041 
 12347      44432073 
 12347      656E736F 
 12348              		.align	2
 12349              	.LC222:
 12350 1718 41444320 		.ascii	"ADC %d -> %d\000"
 12350      2564202D 
 12350      3E202564 
 12350      00
 12351 1725 000000   		.align	2
 12352              	.LC223:
 12353 1728 454D4720 		.ascii	"EMG input %d -> %d\000"
 12353      696E7075 
 12353      74202564 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 286


 12353      202D3E20 
 12353      256400
 12354 173b 00       		.align	2
 12355              	.LC224:
 12356 173c 52657374 		.ascii	"Rest time delay (ms): %d\000"
 12356      2074696D 
 12356      65206465 
 12356      6C617920 
 12356      286D7329 
 12357 1755 000000   		.align	2
 12358              	.LC225:
 12359 1758 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 12359      2076656C 
 12359      6F636974 
 12359      7920636C 
 12359      6F737572 
 12360 177e 0000     		.align	2
 12361              	.LC226:
 12362 1780 52657374 		.ascii	"Rest position: %d\000"
 12362      20706F73 
 12362      6974696F 
 12362      6E3A2025 
 12362      6400
 12363 1792 0000     		.align	2
 12364              	.LC227:
 12365 1794 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 12365      436F6E6E 
 12365      65637465 
 12365      643A2025 
 12365      640D0A00 
 12366              		.align	2
 12367              	.LC228:
 12368 17a8 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 12368      20434F4E 
 12368      46494755 
 12368      52415449 
 12368      4F4E0D0A 
 12369 17bd 000000   		.align	2
 12370              	.LC229:
 12371 17c0 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 12371      2564200D 
 12371      0A094944 
 12371      3A202564 
 12371      0D0A00
 12372 17d3 00       		.align	2
 12373              	.LC230:
 12374 17d4 09416363 		.ascii	"\011Accelerometers: \000"
 12374      656C6572 
 12374      6F6D6574 
 12374      6572733A 
 12374      2000
 12375 17e6 0000     		.align	2
 12376              	.LC231:
 12377 17e8 09477972 		.ascii	"\011Gyroscopes: \000"
 12377      6F73636F 
 12377      7065733A 
 12377      2000
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 287


 12378 17f6 0000     		.align	2
 12379              	.LC232:
 12380 17f8 094D6167 		.ascii	"\011Magnetometers: \000"
 12380      6E65746F 
 12380      6D657465 
 12380      72733A20 
 12380      00
 12381 1809 000000   		.align	2
 12382              	.LC233:
 12383 180c 09517561 		.ascii	"\011Quaternion: \000"
 12383      7465726E 
 12383      696F6E3A 
 12383      2000
 12384 181a 0000     		.align	2
 12385              	.LC234:
 12386 181c 0954656D 		.ascii	"\011Temperature: \000"
 12386      70657261 
 12386      74757265 
 12386      3A2000
 12387 182b 00       		.align	2
 12388              	.LC235:
 12389 182c 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 12389      20465720 
 12389      6379636C 
 12389      65207469 
 12389      6D653A20 
 12390              		.align	2
 12391              	.LC236:
 12392 1848 0D0A0000 		.ascii	"\015\012\000\000"
 12393              		.section	.text.prepare_generic_info,"ax",%progbits
 12394              		.align	2
 12395              		.global	prepare_generic_info
 12396              		.thumb
 12397              		.thumb_func
 12398              		.type	prepare_generic_info, %function
 12399              	prepare_generic_info:
 12400              	.LFB72:
1811:..\src/command_processing.c **** 
1812:..\src/command_processing.c **** //==============================================================================
1813:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1814:..\src/command_processing.c **** //==============================================================================
1815:..\src/command_processing.c **** 
1816:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1817:..\src/command_processing.c **** {
 12401              		.loc 1 1817 0
 12402              		.cfi_startproc
 12403              		@ args = 0, pretend = 0, frame = 152
 12404              		@ frame_needed = 1, uses_anonymous_args = 0
 12405 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 12406              		.cfi_def_cfa_offset 36
 12407              		.cfi_offset 4, -36
 12408              		.cfi_offset 5, -32
 12409              		.cfi_offset 6, -28
 12410              		.cfi_offset 7, -24
 12411              		.cfi_offset 8, -20
 12412              		.cfi_offset 9, -16
 12413              		.cfi_offset 10, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 288


 12414              		.cfi_offset 11, -8
 12415              		.cfi_offset 14, -4
 12416 0004 B1B0     		sub	sp, sp, #196
 12417              		.cfi_def_cfa_offset 232
 12418 0006 0AAF     		add	r7, sp, #40
 12419              		.cfi_def_cfa 7, 192
 12420 0008 7861     		str	r0, [r7, #20]
1818:..\src/command_processing.c ****     int i;
1819:..\src/command_processing.c **** 
1820:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &c_mem; 
 12421              		.loc 1 1820 0
 12422 000a BC4B     		ldr	r3, .L632
 12423 000c C7F88C30 		str	r3, [r7, #140]
1821:..\src/command_processing.c ****     
1822:..\src/command_processing.c ****     if(c_mem.dev.id != 250){                //To avoid dummy board ping
 12424              		.loc 1 1822 0
 12425 0010 BA4B     		ldr	r3, .L632
 12426 0012 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12427 0016 FA2B     		cmp	r3, #250
 12428 0018 01F08485 		beq	.L629
 12429              	.LBB16:
1823:..\src/command_processing.c ****         char str[100];
1824:..\src/command_processing.c ****         strcpy(info_string, "");
 12430              		.loc 1 1824 0
 12431 001c 7B69     		ldr	r3, [r7, #20]
 12432 001e 0022     		movs	r2, #0
 12433 0020 1A70     		strb	r2, [r3]
1825:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 12434              		.loc 1 1825 0
 12435 0022 7869     		ldr	r0, [r7, #20]
 12436 0024 FFF7FEFF 		bl	strlen
 12437 0028 0346     		mov	r3, r0
 12438 002a 1A46     		mov	r2, r3
 12439 002c 7B69     		ldr	r3, [r7, #20]
 12440 002e 1344     		add	r3, r3, r2
 12441 0030 B34A     		ldr	r2, .L632+4
 12442 0032 1188     		ldrh	r1, [r2]	@ unaligned
 12443 0034 9278     		ldrb	r2, [r2, #2]
 12444 0036 1980     		strh	r1, [r3]	@ unaligned
 12445 0038 9A70     		strb	r2, [r3, #2]
1826:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 12446              		.loc 1 1826 0
 12447 003a 7869     		ldr	r0, [r7, #20]
 12448 003c FFF7FEFF 		bl	strlen
 12449 0040 0346     		mov	r3, r0
 12450 0042 1A46     		mov	r2, r3
 12451 0044 7B69     		ldr	r3, [r7, #20]
 12452 0046 1344     		add	r3, r3, r2
 12453 0048 AE4A     		ldr	r2, .L632+8
 12454 004a 1D46     		mov	r5, r3
 12455 004c 1446     		mov	r4, r2
 12456 004e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12457 0050 2860     		str	r0, [r5]	@ unaligned
 12458 0052 6960     		str	r1, [r5, #4]	@ unaligned
 12459 0054 AA60     		str	r2, [r5, #8]	@ unaligned
 12460 0056 EB60     		str	r3, [r5, #12]	@ unaligned
 12461 0058 2388     		ldrh	r3, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 289


 12462 005a A278     		ldrb	r2, [r4, #2]
 12463 005c 2B82     		strh	r3, [r5, #16]	@ unaligned
 12464 005e 1346     		mov	r3, r2
 12465 0060 AB74     		strb	r3, [r5, #18]
1827:..\src/command_processing.c ****         strcat(info_string, VERSION);
 12466              		.loc 1 1827 0
 12467 0062 7869     		ldr	r0, [r7, #20]
 12468 0064 FFF7FEFF 		bl	strlen
 12469 0068 0346     		mov	r3, r0
 12470 006a 1A46     		mov	r2, r3
 12471 006c 7B69     		ldr	r3, [r7, #20]
 12472 006e 1344     		add	r3, r3, r2
 12473 0070 A54A     		ldr	r2, .L632+12
 12474 0072 1446     		mov	r4, r2
 12475 0074 9E46     		mov	lr, r3
 12476 0076 04F1200C 		add	ip, r4, #32
 12477              	.L535:
 12478 007a 7546     		mov	r5, lr
 12479 007c 2646     		mov	r6, r4
 12480 007e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12481 0080 2860     		str	r0, [r5]	@ unaligned
 12482 0082 6960     		str	r1, [r5, #4]	@ unaligned
 12483 0084 AA60     		str	r2, [r5, #8]	@ unaligned
 12484 0086 EB60     		str	r3, [r5, #12]	@ unaligned
 12485 0088 1034     		adds	r4, r4, #16
 12486 008a 0EF1100E 		add	lr, lr, #16
 12487 008e 6445     		cmp	r4, ip
 12488 0090 F3D1     		bne	.L535
 12489 0092 7346     		mov	r3, lr
 12490 0094 2246     		mov	r2, r4
 12491 0096 1068     		ldr	r0, [r2]	@ unaligned
 12492 0098 1860     		str	r0, [r3]	@ unaligned
 12493 009a 1279     		ldrb	r2, [r2, #4]
 12494 009c 1A71     		strb	r2, [r3, #4]
1828:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");      
 12495              		.loc 1 1828 0
 12496 009e 7869     		ldr	r0, [r7, #20]
 12497 00a0 FFF7FEFF 		bl	strlen
 12498 00a4 0346     		mov	r3, r0
 12499 00a6 1A46     		mov	r2, r3
 12500 00a8 7B69     		ldr	r3, [r7, #20]
 12501 00aa 1344     		add	r3, r3, r2
 12502 00ac 974A     		ldr	r2, .L632+16
 12503 00ae 1068     		ldr	r0, [r2]	@ unaligned
 12504 00b0 1860     		str	r0, [r3]	@ unaligned
 12505 00b2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 12506 00b4 9A80     		strh	r2, [r3, #4]	@ unaligned
1829:..\src/command_processing.c **** 
1830:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 12507              		.loc 1 1830 0
 12508 00b6 7869     		ldr	r0, [r7, #20]
 12509 00b8 FFF7FEFF 		bl	strlen
 12510 00bc 0346     		mov	r3, r0
 12511 00be 1A46     		mov	r2, r3
 12512 00c0 7B69     		ldr	r3, [r7, #20]
 12513 00c2 1344     		add	r3, r3, r2
 12514 00c4 924A     		ldr	r2, .L632+20
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 290


 12515 00c6 1C46     		mov	r4, r3
 12516 00c8 1346     		mov	r3, r2
 12517 00ca 07CB     		ldmia	r3!, {r0, r1, r2}
 12518 00cc 2060     		str	r0, [r4]	@ unaligned
 12519 00ce 6160     		str	r1, [r4, #4]	@ unaligned
 12520 00d0 A260     		str	r2, [r4, #8]	@ unaligned
 12521 00d2 1B88     		ldrh	r3, [r3]	@ unaligned
 12522 00d4 A381     		strh	r3, [r4, #12]	@ unaligned
1831:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
 12523              		.loc 1 1831 0
 12524 00d6 D7F88C30 		ldr	r3, [r7, #140]
 12525 00da 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 12526 00de 1A46     		mov	r2, r3
 12527 00e0 07F11C03 		add	r3, r7, #28
 12528 00e4 8B49     		ldr	r1, .L632+24
 12529 00e6 1846     		mov	r0, r3
 12530 00e8 FFF7FEFF 		bl	sprintf
1832:..\src/command_processing.c ****         strcat(info_string, str);
 12531              		.loc 1 1832 0
 12532 00ec 07F11C03 		add	r3, r7, #28
 12533 00f0 1946     		mov	r1, r3
 12534 00f2 7869     		ldr	r0, [r7, #20]
 12535 00f4 FFF7FEFF 		bl	strcat
1833:..\src/command_processing.c ****         switch(MEM_P->dev.dev_type){
 12536              		.loc 1 1833 0
 12537 00f8 D7F88C30 		ldr	r3, [r7, #140]
 12538 00fc 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 12539 0100 032B     		cmp	r3, #3
 12540 0102 7AD8     		bhi	.L630
 12541 0104 01A2     		adr	r2, .L538
 12542 0106 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 12543 010a 00BF     		.p2align 2
 12544              	.L538:
 12545 010c 1D010000 		.word	.L537+1
 12546 0110 4B010000 		.word	.L539+1
 12547 0114 7B010000 		.word	.L540+1
 12548 0118 BD010000 		.word	.L541+1
 12549              		.p2align 1
 12550              	.L537:
1834:..\src/command_processing.c ****             case SOFTHAND_PRO:
1835:..\src/command_processing.c ****                 strcat(info_string, "Device: SOFTHAND PRO\r\n");
 12551              		.loc 1 1835 0
 12552 011c 7869     		ldr	r0, [r7, #20]
 12553 011e FFF7FEFF 		bl	strlen
 12554 0122 0346     		mov	r3, r0
 12555 0124 1A46     		mov	r2, r3
 12556 0126 7B69     		ldr	r3, [r7, #20]
 12557 0128 1344     		add	r3, r3, r2
 12558 012a 7B4A     		ldr	r2, .L632+28
 12559 012c 1C46     		mov	r4, r3
 12560 012e 1546     		mov	r5, r2
 12561 0130 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12562 0132 2060     		str	r0, [r4]	@ unaligned
 12563 0134 6160     		str	r1, [r4, #4]	@ unaligned
 12564 0136 A260     		str	r2, [r4, #8]	@ unaligned
 12565 0138 E360     		str	r3, [r4, #12]	@ unaligned
 12566 013a 2868     		ldr	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 291


 12567 013c 2061     		str	r0, [r4, #16]	@ unaligned
 12568 013e AB88     		ldrh	r3, [r5, #4]	@ unaligned
 12569 0140 AA79     		ldrb	r2, [r5, #6]
 12570 0142 A382     		strh	r3, [r4, #20]	@ unaligned
 12571 0144 1346     		mov	r3, r2
 12572 0146 A375     		strb	r3, [r4, #22]
1836:..\src/command_processing.c ****                 break;
 12573              		.loc 1 1836 0
 12574 0148 58E0     		b	.L542
 12575              	.L539:
1837:..\src/command_processing.c ****             case GENERIC_2_MOTORS:
1838:..\src/command_processing.c ****                 strcat(info_string, "Device: GENERIC 2 MOTORS\r\n");
 12576              		.loc 1 1838 0
 12577 014a 7869     		ldr	r0, [r7, #20]
 12578 014c FFF7FEFF 		bl	strlen
 12579 0150 0346     		mov	r3, r0
 12580 0152 1A46     		mov	r2, r3
 12581 0154 7B69     		ldr	r3, [r7, #20]
 12582 0156 1344     		add	r3, r3, r2
 12583 0158 704A     		ldr	r2, .L632+32
 12584 015a 1D46     		mov	r5, r3
 12585 015c 1446     		mov	r4, r2
 12586 015e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12587 0160 2860     		str	r0, [r5]	@ unaligned
 12588 0162 6960     		str	r1, [r5, #4]	@ unaligned
 12589 0164 AA60     		str	r2, [r5, #8]	@ unaligned
 12590 0166 EB60     		str	r3, [r5, #12]	@ unaligned
 12591 0168 03CC     		ldmia	r4!, {r0, r1}
 12592 016a 2861     		str	r0, [r5, #16]	@ unaligned
 12593 016c 6961     		str	r1, [r5, #20]	@ unaligned
 12594 016e 2388     		ldrh	r3, [r4]	@ unaligned
 12595 0170 A278     		ldrb	r2, [r4, #2]
 12596 0172 2B83     		strh	r3, [r5, #24]	@ unaligned
 12597 0174 1346     		mov	r3, r2
 12598 0176 AB76     		strb	r3, [r5, #26]
1839:..\src/command_processing.c ****                 break;
 12599              		.loc 1 1839 0
 12600 0178 40E0     		b	.L542
 12601              	.L540:
1840:..\src/command_processing.c ****             case AIR_CHAMBERS_FB:
1841:..\src/command_processing.c ****                 strcat(info_string, "Device: AIR CHAMBERS HAPTIC FEEDBACK\r\n");
 12602              		.loc 1 1841 0
 12603 017a 7869     		ldr	r0, [r7, #20]
 12604 017c FFF7FEFF 		bl	strlen
 12605 0180 0346     		mov	r3, r0
 12606 0182 1A46     		mov	r2, r3
 12607 0184 7B69     		ldr	r3, [r7, #20]
 12608 0186 1344     		add	r3, r3, r2
 12609 0188 654A     		ldr	r2, .L632+36
 12610 018a 1446     		mov	r4, r2
 12611 018c 9E46     		mov	lr, r3
 12612 018e 04F1200C 		add	ip, r4, #32
 12613              	.L543:
 12614 0192 7546     		mov	r5, lr
 12615 0194 2646     		mov	r6, r4
 12616 0196 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12617 0198 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 292


 12618 019a 6960     		str	r1, [r5, #4]	@ unaligned
 12619 019c AA60     		str	r2, [r5, #8]	@ unaligned
 12620 019e EB60     		str	r3, [r5, #12]	@ unaligned
 12621 01a0 1034     		adds	r4, r4, #16
 12622 01a2 0EF1100E 		add	lr, lr, #16
 12623 01a6 6445     		cmp	r4, ip
 12624 01a8 F3D1     		bne	.L543
 12625 01aa 7346     		mov	r3, lr
 12626 01ac 2246     		mov	r2, r4
 12627 01ae 1068     		ldr	r0, [r2]	@ unaligned
 12628 01b0 1860     		str	r0, [r3]	@ unaligned
 12629 01b2 9188     		ldrh	r1, [r2, #4]	@ unaligned
 12630 01b4 9279     		ldrb	r2, [r2, #6]
 12631 01b6 9980     		strh	r1, [r3, #4]	@ unaligned
 12632 01b8 9A71     		strb	r2, [r3, #6]
1842:..\src/command_processing.c ****                 break;
 12633              		.loc 1 1842 0
 12634 01ba 1FE0     		b	.L542
 12635              	.L541:
1843:..\src/command_processing.c ****             case OTBK_ACT_WRIST_MS:
1844:..\src/command_processing.c ****                 strcat(info_string, "Device: OTTOBOCK 6v ACTIVE WRIST MASTER\r\n");
 12636              		.loc 1 1844 0
 12637 01bc 7869     		ldr	r0, [r7, #20]
 12638 01be FFF7FEFF 		bl	strlen
 12639 01c2 0346     		mov	r3, r0
 12640 01c4 1A46     		mov	r2, r3
 12641 01c6 7B69     		ldr	r3, [r7, #20]
 12642 01c8 1344     		add	r3, r3, r2
 12643 01ca 564A     		ldr	r2, .L632+40
 12644 01cc 1446     		mov	r4, r2
 12645 01ce 9E46     		mov	lr, r3
 12646 01d0 04F1200C 		add	ip, r4, #32
 12647              	.L544:
 12648 01d4 7546     		mov	r5, lr
 12649 01d6 2646     		mov	r6, r4
 12650 01d8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 12651 01da 2860     		str	r0, [r5]	@ unaligned
 12652 01dc 6960     		str	r1, [r5, #4]	@ unaligned
 12653 01de AA60     		str	r2, [r5, #8]	@ unaligned
 12654 01e0 EB60     		str	r3, [r5, #12]	@ unaligned
 12655 01e2 1034     		adds	r4, r4, #16
 12656 01e4 0EF1100E 		add	lr, lr, #16
 12657 01e8 6445     		cmp	r4, ip
 12658 01ea F3D1     		bne	.L544
 12659 01ec 7246     		mov	r2, lr
 12660 01ee 2346     		mov	r3, r4
 12661 01f0 03CB     		ldmia	r3!, {r0, r1}
 12662 01f2 1060     		str	r0, [r2]	@ unaligned
 12663 01f4 5160     		str	r1, [r2, #4]	@ unaligned
 12664 01f6 1B88     		ldrh	r3, [r3]	@ unaligned
 12665 01f8 1381     		strh	r3, [r2, #8]	@ unaligned
 12666              	.L630:
1845:..\src/command_processing.c ****             default:
1846:..\src/command_processing.c ****                 break;
 12667              		.loc 1 1846 0
 12668 01fa 00BF     		nop
 12669              	.L542:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 293


1847:..\src/command_processing.c ****         }
1848:..\src/command_processing.c ****         
1849:..\src/command_processing.c ****         switch(MEM_P->dev.right_left){
 12670              		.loc 1 1849 0
 12671 01fc D7F88C30 		ldr	r3, [r7, #140]
 12672 0200 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 12673 0204 002B     		cmp	r3, #0
 12674 0206 02D0     		beq	.L546
 12675 0208 012B     		cmp	r3, #1
 12676 020a 15D0     		beq	.L547
 12677 020c 26E0     		b	.L545
 12678              	.L546:
1850:..\src/command_processing.c ****             case RIGHT_HAND:
1851:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 12679              		.loc 1 1851 0
 12680 020e 7869     		ldr	r0, [r7, #20]
 12681 0210 FFF7FEFF 		bl	strlen
 12682 0214 0346     		mov	r3, r0
 12683 0216 1A46     		mov	r2, r3
 12684 0218 7B69     		ldr	r3, [r7, #20]
 12685 021a 1344     		add	r3, r3, r2
 12686 021c 424A     		ldr	r2, .L632+44
 12687 021e 1D46     		mov	r5, r3
 12688 0220 1446     		mov	r4, r2
 12689 0222 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12690 0224 2860     		str	r0, [r5]	@ unaligned
 12691 0226 6960     		str	r1, [r5, #4]	@ unaligned
 12692 0228 AA60     		str	r2, [r5, #8]	@ unaligned
 12693 022a EB60     		str	r3, [r5, #12]	@ unaligned
 12694 022c 2388     		ldrh	r3, [r4]	@ unaligned
 12695 022e A278     		ldrb	r2, [r4, #2]
 12696 0230 2B82     		strh	r3, [r5, #16]	@ unaligned
 12697 0232 1346     		mov	r3, r2
 12698 0234 AB74     		strb	r3, [r5, #18]
1852:..\src/command_processing.c ****                 break;
 12699              		.loc 1 1852 0
 12700 0236 11E0     		b	.L545
 12701              	.L547:
1853:..\src/command_processing.c ****             case LEFT_HAND:
1854:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 12702              		.loc 1 1854 0
 12703 0238 7869     		ldr	r0, [r7, #20]
 12704 023a FFF7FEFF 		bl	strlen
 12705 023e 0346     		mov	r3, r0
 12706 0240 1A46     		mov	r2, r3
 12707 0242 7B69     		ldr	r3, [r7, #20]
 12708 0244 1344     		add	r3, r3, r2
 12709 0246 394A     		ldr	r2, .L632+48
 12710 0248 1D46     		mov	r5, r3
 12711 024a 1446     		mov	r4, r2
 12712 024c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12713 024e 2860     		str	r0, [r5]	@ unaligned
 12714 0250 6960     		str	r1, [r5, #4]	@ unaligned
 12715 0252 AA60     		str	r2, [r5, #8]	@ unaligned
 12716 0254 EB60     		str	r3, [r5, #12]	@ unaligned
 12717 0256 2388     		ldrh	r3, [r4]	@ unaligned
 12718 0258 2B82     		strh	r3, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 294


1855:..\src/command_processing.c ****                 break;
 12719              		.loc 1 1855 0
 12720 025a 00BF     		nop
 12721              	.L545:
1856:..\src/command_processing.c ****         }
1857:..\src/command_processing.c **** 
1858:..\src/command_processing.c ****         switch(MEM_P->dev.user_id) {
 12722              		.loc 1 1858 0
 12723 025c D7F88C30 		ldr	r3, [r7, #140]
 12724 0260 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 12725 0264 012B     		cmp	r3, #1
 12726 0266 02D0     		beq	.L549
 12727 0268 022B     		cmp	r3, #2
 12728 026a 11D0     		beq	.L550
 12729 026c 21E0     		b	.L628
 12730              	.L549:
1859:..\src/command_processing.c ****             case MARIA:
1860:..\src/command_processing.c ****                 strcat(info_string, "User: MARIA\r\n");
 12731              		.loc 1 1860 0
 12732 026e 7869     		ldr	r0, [r7, #20]
 12733 0270 FFF7FEFF 		bl	strlen
 12734 0274 0346     		mov	r3, r0
 12735 0276 1A46     		mov	r2, r3
 12736 0278 7B69     		ldr	r3, [r7, #20]
 12737 027a 1344     		add	r3, r3, r2
 12738 027c 2C4A     		ldr	r2, .L632+52
 12739 027e 1C46     		mov	r4, r3
 12740 0280 1346     		mov	r3, r2
 12741 0282 07CB     		ldmia	r3!, {r0, r1, r2}
 12742 0284 2060     		str	r0, [r4]	@ unaligned
 12743 0286 6160     		str	r1, [r4, #4]	@ unaligned
 12744 0288 A260     		str	r2, [r4, #8]	@ unaligned
 12745 028a 1B88     		ldrh	r3, [r3]	@ unaligned
 12746 028c A381     		strh	r3, [r4, #12]	@ unaligned
1861:..\src/command_processing.c ****                 break;
 12747              		.loc 1 1861 0
 12748 028e 24E0     		b	.L551
 12749              	.L550:
1862:..\src/command_processing.c ****             case ROZA:
1863:..\src/command_processing.c ****                 strcat(info_string, "User: ROZA\r\n");
 12750              		.loc 1 1863 0
 12751 0290 7869     		ldr	r0, [r7, #20]
 12752 0292 FFF7FEFF 		bl	strlen
 12753 0296 0346     		mov	r3, r0
 12754 0298 1A46     		mov	r2, r3
 12755 029a 7B69     		ldr	r3, [r7, #20]
 12756 029c 1344     		add	r3, r3, r2
 12757 029e 254A     		ldr	r2, .L632+56
 12758 02a0 1C46     		mov	r4, r3
 12759 02a2 1346     		mov	r3, r2
 12760 02a4 07CB     		ldmia	r3!, {r0, r1, r2}
 12761 02a6 2060     		str	r0, [r4]	@ unaligned
 12762 02a8 6160     		str	r1, [r4, #4]	@ unaligned
 12763 02aa A260     		str	r2, [r4, #8]	@ unaligned
 12764 02ac 1B78     		ldrb	r3, [r3]
 12765 02ae 2373     		strb	r3, [r4, #12]
1864:..\src/command_processing.c ****                 break;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 295


 12766              		.loc 1 1864 0
 12767 02b0 13E0     		b	.L551
 12768              	.L628:
1865:..\src/command_processing.c ****             default:
1866:..\src/command_processing.c ****                 strcat(info_string, "User: GENERIC USER\r\n");
 12769              		.loc 1 1866 0
 12770 02b2 7869     		ldr	r0, [r7, #20]
 12771 02b4 FFF7FEFF 		bl	strlen
 12772 02b8 0346     		mov	r3, r0
 12773 02ba 1A46     		mov	r2, r3
 12774 02bc 7B69     		ldr	r3, [r7, #20]
 12775 02be 1344     		add	r3, r3, r2
 12776 02c0 1D4A     		ldr	r2, .L632+60
 12777 02c2 1D46     		mov	r5, r3
 12778 02c4 1446     		mov	r4, r2
 12779 02c6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 12780 02c8 2860     		str	r0, [r5]	@ unaligned
 12781 02ca 6960     		str	r1, [r5, #4]	@ unaligned
 12782 02cc AA60     		str	r2, [r5, #8]	@ unaligned
 12783 02ce EB60     		str	r3, [r5, #12]	@ unaligned
 12784 02d0 2068     		ldr	r0, [r4]	@ unaligned
 12785 02d2 2861     		str	r0, [r5, #16]	@ unaligned
 12786 02d4 2379     		ldrb	r3, [r4, #4]
 12787 02d6 2B75     		strb	r3, [r5, #20]
1867:..\src/command_processing.c ****                 break;
 12788              		.loc 1 1867 0
 12789 02d8 00BF     		nop
 12790              	.L551:
1868:..\src/command_processing.c ****         }
1869:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 12791              		.loc 1 1869 0
 12792 02da 7869     		ldr	r0, [r7, #20]
 12793 02dc FFF7FEFF 		bl	strlen
 12794 02e0 0346     		mov	r3, r0
 12795 02e2 1A46     		mov	r2, r3
 12796 02e4 7B69     		ldr	r3, [r7, #20]
 12797 02e6 1344     		add	r3, r3, r2
 12798 02e8 054A     		ldr	r2, .L632+4
 12799 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 12800 02ec 9278     		ldrb	r2, [r2, #2]
 12801 02ee 1980     		strh	r1, [r3]	@ unaligned
 12802 02f0 9A70     		strb	r2, [r3, #2]
 12803              	.LBB17:
1870:..\src/command_processing.c ****         
1871:..\src/command_processing.c ****         for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 12804              		.loc 1 1871 0
 12805 02f2 0023     		movs	r3, #0
 12806 02f4 87F89330 		strb	r3, [r7, #147]
 12807 02f8 01F047B8 		b	.L552
 12808              	.L633:
 12809              		.align	2
 12810              	.L632:
 12811 02fc 00000000 		.word	c_mem
 12812 0300 18100000 		.word	.LC143
 12813 0304 1C100000 		.word	.LC144
 12814 0308 30100000 		.word	.LC145
 12815 030c 58100000 		.word	.LC146
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 296


 12816 0310 60100000 		.word	.LC147
 12817 0314 70100000 		.word	.LC148
 12818 0318 7C100000 		.word	.LC149
 12819 031c 94100000 		.word	.LC150
 12820 0320 B0100000 		.word	.LC151
 12821 0324 D8100000 		.word	.LC152
 12822 0328 04110000 		.word	.LC153
 12823 032c 18110000 		.word	.LC154
 12824 0330 2C110000 		.word	.LC155
 12825 0334 3C110000 		.word	.LC156
 12826 0338 4C110000 		.word	.LC157
 12827              	.L604:
 12828              	.LBB18:
1872:..\src/command_processing.c ****             
1873:..\src/command_processing.c ****             uint8 MOTOR_IDX = k;
 12829              		.loc 1 1873 0
 12830 033c 97F89330 		ldrb	r3, [r7, #147]
 12831 0340 87F88B30 		strb	r3, [r7, #139]
1874:..\src/command_processing.c ****             struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 12832              		.loc 1 1874 0
 12833 0344 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 12834 0348 1346     		mov	r3, r2
 12835 034a DB00     		lsls	r3, r3, #3
 12836 034c 9B1A     		subs	r3, r3, r2
 12837 034e 1B01     		lsls	r3, r3, #4
 12838 0350 B033     		adds	r3, r3, #176
 12839 0352 D7F88C20 		ldr	r2, [r7, #140]
 12840 0356 1344     		add	r3, r3, r2
 12841 0358 C7F88430 		str	r3, [r7, #132]
1875:..\src/command_processing.c ****             uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 12842              		.loc 1 1875 0
 12843 035c D7F88430 		ldr	r3, [r7, #132]
 12844 0360 93F86030 		ldrb	r3, [r3, #96]
 12845 0364 87F88330 		strb	r3, [r7, #131]
1876:..\src/command_processing.c ****                   
1877:..\src/command_processing.c ****             sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 12846              		.loc 1 1877 0
 12847 0368 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12848 036c 5A1C     		adds	r2, r3, #1
 12849 036e 07F11C03 		add	r3, r7, #28
 12850 0372 AE49     		ldr	r1, .L634
 12851 0374 1846     		mov	r0, r3
 12852 0376 FFF7FEFF 		bl	sprintf
1878:..\src/command_processing.c ****             strcat(info_string, str);
 12853              		.loc 1 1878 0
 12854 037a 07F11C03 		add	r3, r7, #28
 12855 037e 1946     		mov	r1, r3
 12856 0380 7869     		ldr	r0, [r7, #20]
 12857 0382 FFF7FEFF 		bl	strcat
1879:..\src/command_processing.c ****                         
1880:..\src/command_processing.c ****             strcat(info_string, "Motor reference");
 12858              		.loc 1 1880 0
 12859 0386 7869     		ldr	r0, [r7, #20]
 12860 0388 FFF7FEFF 		bl	strlen
 12861 038c 0346     		mov	r3, r0
 12862 038e 1A46     		mov	r2, r3
 12863 0390 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 297


 12864 0392 1344     		add	r3, r3, r2
 12865 0394 A64A     		ldr	r2, .L634+4
 12866 0396 1C46     		mov	r4, r3
 12867 0398 1546     		mov	r5, r2
 12868 039a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 12869 039c 2060     		str	r0, [r4]	@ unaligned
 12870 039e 6160     		str	r1, [r4, #4]	@ unaligned
 12871 03a0 A260     		str	r2, [r4, #8]	@ unaligned
 12872 03a2 E360     		str	r3, [r4, #12]	@ unaligned
1881:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT)
 12873              		.loc 1 1881 0
 12874 03a4 D7F88430 		ldr	r3, [r7, #132]
 12875 03a8 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12876 03ac 022B     		cmp	r3, #2
 12877 03ae 10D1     		bne	.L553
1882:..\src/command_processing.c ****                 strcat(info_string," - Currents: ");
 12878              		.loc 1 1882 0
 12879 03b0 7869     		ldr	r0, [r7, #20]
 12880 03b2 FFF7FEFF 		bl	strlen
 12881 03b6 0346     		mov	r3, r0
 12882 03b8 1A46     		mov	r2, r3
 12883 03ba 7B69     		ldr	r3, [r7, #20]
 12884 03bc 1344     		add	r3, r3, r2
 12885 03be 9D4A     		ldr	r2, .L634+8
 12886 03c0 1C46     		mov	r4, r3
 12887 03c2 1346     		mov	r3, r2
 12888 03c4 07CB     		ldmia	r3!, {r0, r1, r2}
 12889 03c6 2060     		str	r0, [r4]	@ unaligned
 12890 03c8 6160     		str	r1, [r4, #4]	@ unaligned
 12891 03ca A260     		str	r2, [r4, #8]	@ unaligned
 12892 03cc 1B88     		ldrh	r3, [r3]	@ unaligned
 12893 03ce A381     		strh	r3, [r4, #12]	@ unaligned
 12894 03d0 25E0     		b	.L554
 12895              	.L553:
1883:..\src/command_processing.c ****             else {
1884:..\src/command_processing.c ****                 if (MOT->control_mode == CONTROL_PWM)
 12896              		.loc 1 1884 0
 12897 03d2 D7F88430 		ldr	r3, [r7, #132]
 12898 03d6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12899 03da 012B     		cmp	r3, #1
 12900 03dc 0FD1     		bne	.L555
1885:..\src/command_processing.c ****                     strcat(info_string," - Pwm: ");
 12901              		.loc 1 1885 0
 12902 03de 7869     		ldr	r0, [r7, #20]
 12903 03e0 FFF7FEFF 		bl	strlen
 12904 03e4 0346     		mov	r3, r0
 12905 03e6 1A46     		mov	r2, r3
 12906 03e8 7B69     		ldr	r3, [r7, #20]
 12907 03ea 1344     		add	r3, r3, r2
 12908 03ec 9249     		ldr	r1, .L634+12
 12909 03ee 1A46     		mov	r2, r3
 12910 03f0 0B46     		mov	r3, r1
 12911 03f2 03CB     		ldmia	r3!, {r0, r1}
 12912 03f4 1060     		str	r0, [r2]	@ unaligned
 12913 03f6 5160     		str	r1, [r2, #4]	@ unaligned
 12914 03f8 1B78     		ldrb	r3, [r3]
 12915 03fa 1372     		strb	r3, [r2, #8]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 298


 12916 03fc 0FE0     		b	.L554
 12917              	.L555:
1886:..\src/command_processing.c ****                 else
1887:..\src/command_processing.c ****                     strcat(info_string," - Position: ");
 12918              		.loc 1 1887 0
 12919 03fe 7869     		ldr	r0, [r7, #20]
 12920 0400 FFF7FEFF 		bl	strlen
 12921 0404 0346     		mov	r3, r0
 12922 0406 1A46     		mov	r2, r3
 12923 0408 7B69     		ldr	r3, [r7, #20]
 12924 040a 1344     		add	r3, r3, r2
 12925 040c 8B4A     		ldr	r2, .L634+16
 12926 040e 1C46     		mov	r4, r3
 12927 0410 1346     		mov	r3, r2
 12928 0412 07CB     		ldmia	r3!, {r0, r1, r2}
 12929 0414 2060     		str	r0, [r4]	@ unaligned
 12930 0416 6160     		str	r1, [r4, #4]	@ unaligned
 12931 0418 A260     		str	r2, [r4, #8]	@ unaligned
 12932 041a 1B88     		ldrh	r3, [r3]	@ unaligned
 12933 041c A381     		strh	r3, [r4, #12]	@ unaligned
 12934              	.L554:
1888:..\src/command_processing.c ****             }
1889:..\src/command_processing.c ****             if(MOT->control_mode == CONTROL_CURRENT) {
 12935              		.loc 1 1889 0
 12936 041e D7F88430 		ldr	r3, [r7, #132]
 12937 0422 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12938 0426 022B     		cmp	r3, #2
 12939 0428 13D1     		bne	.L556
1890:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].curr));
 12940              		.loc 1 1890 0
 12941 042a 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12942 042e 844A     		ldr	r2, .L634+20
 12943 0430 1B01     		lsls	r3, r3, #4
 12944 0432 1344     		add	r3, r3, r2
 12945 0434 0433     		adds	r3, r3, #4
 12946 0436 1A68     		ldr	r2, [r3]
 12947 0438 07F11C03 		add	r3, r7, #28
 12948 043c 8149     		ldr	r1, .L634+24
 12949 043e 1846     		mov	r0, r3
 12950 0440 FFF7FEFF 		bl	sprintf
1891:..\src/command_processing.c ****                 strcat(info_string,str);
 12951              		.loc 1 1891 0
 12952 0444 07F11C03 		add	r3, r7, #28
 12953 0448 1946     		mov	r1, r3
 12954 044a 7869     		ldr	r0, [r7, #20]
 12955 044c FFF7FEFF 		bl	strcat
 12956 0450 39E0     		b	.L557
 12957              	.L556:
1892:..\src/command_processing.c ****             }
1893:..\src/command_processing.c ****             else {
1894:..\src/command_processing.c ****                 if(MOT->control_mode == CONTROL_PWM) {
 12958              		.loc 1 1894 0
 12959 0452 D7F88430 		ldr	r3, [r7, #132]
 12960 0456 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 12961 045a 012B     		cmp	r3, #1
 12962 045c 13D1     		bne	.L558
1895:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pwm));
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 299


 12963              		.loc 1 1895 0
 12964 045e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12965 0462 774A     		ldr	r2, .L634+20
 12966 0464 1B01     		lsls	r3, r3, #4
 12967 0466 1344     		add	r3, r3, r2
 12968 0468 0833     		adds	r3, r3, #8
 12969 046a 1A68     		ldr	r2, [r3]
 12970 046c 07F11C03 		add	r3, r7, #28
 12971 0470 7449     		ldr	r1, .L634+24
 12972 0472 1846     		mov	r0, r3
 12973 0474 FFF7FEFF 		bl	sprintf
1896:..\src/command_processing.c ****                     strcat(info_string,str);
 12974              		.loc 1 1896 0
 12975 0478 07F11C03 		add	r3, r7, #28
 12976 047c 1946     		mov	r1, r3
 12977 047e 7869     		ldr	r0, [r7, #20]
 12978 0480 FFF7FEFF 		bl	strcat
 12979 0484 1FE0     		b	.L557
 12980              	.L558:
1897:..\src/command_processing.c ****                 }
1898:..\src/command_processing.c ****                 else {
1899:..\src/command_processing.c ****                     sprintf(str, "%d ", (int)(g_refOld[MOTOR_IDX].pos >> MEM_P->enc[ENC_L].res[0]))
 12981              		.loc 1 1899 0
 12982 0486 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 12983 048a 6D4A     		ldr	r2, .L634+20
 12984 048c 1B01     		lsls	r3, r3, #4
 12985 048e 1344     		add	r3, r3, r2
 12986 0490 1968     		ldr	r1, [r3]
 12987 0492 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 12988 0496 D7F88C00 		ldr	r0, [r7, #140]
 12989 049a 1346     		mov	r3, r2
 12990 049c 5B00     		lsls	r3, r3, #1
 12991 049e 1344     		add	r3, r3, r2
 12992 04a0 1B01     		lsls	r3, r3, #4
 12993 04a2 0344     		add	r3, r3, r0
 12994 04a4 03F29513 		addw	r3, r3, #405
 12995 04a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12996 04aa 41FA03F2 		asr	r2, r1, r3
 12997 04ae 07F11C03 		add	r3, r7, #28
 12998 04b2 6449     		ldr	r1, .L634+24
 12999 04b4 1846     		mov	r0, r3
 13000 04b6 FFF7FEFF 		bl	sprintf
1900:..\src/command_processing.c ****                     strcat(info_string,str);
 13001              		.loc 1 1900 0
 13002 04ba 07F11C03 		add	r3, r7, #28
 13003 04be 1946     		mov	r1, r3
 13004 04c0 7869     		ldr	r0, [r7, #20]
 13005 04c2 FFF7FEFF 		bl	strcat
 13006              	.L557:
1901:..\src/command_processing.c ****                 }
1902:..\src/command_processing.c ****             }
1903:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 13007              		.loc 1 1903 0
 13008 04c6 7869     		ldr	r0, [r7, #20]
 13009 04c8 FFF7FEFF 		bl	strlen
 13010 04cc 0346     		mov	r3, r0
 13011 04ce 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 300


 13012 04d0 7B69     		ldr	r3, [r7, #20]
 13013 04d2 1344     		add	r3, r3, r2
 13014 04d4 5C4A     		ldr	r2, .L634+28
 13015 04d6 1188     		ldrh	r1, [r2]	@ unaligned
 13016 04d8 9278     		ldrb	r2, [r2, #2]
 13017 04da 1980     		strh	r1, [r3]	@ unaligned
 13018 04dc 9A70     		strb	r2, [r3, #2]
1904:..\src/command_processing.c **** 
1905:..\src/command_processing.c ****             sprintf(str, "Motor enabled: ");
 13019              		.loc 1 1905 0
 13020 04de 07F11C03 		add	r3, r7, #28
 13021 04e2 5A4A     		ldr	r2, .L634+32
 13022 04e4 1C46     		mov	r4, r3
 13023 04e6 1346     		mov	r3, r2
 13024 04e8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 13025 04ea 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1906:..\src/command_processing.c ****             if (g_ref[MOTOR_IDX].onoff & 0x01) {
 13026              		.loc 1 1906 0
 13027 04ee 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13028 04f2 574A     		ldr	r2, .L634+36
 13029 04f4 1B01     		lsls	r3, r3, #4
 13030 04f6 1344     		add	r3, r3, r2
 13031 04f8 0C33     		adds	r3, r3, #12
 13032 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13033 04fc 03F00103 		and	r3, r3, #1
 13034 0500 002B     		cmp	r3, #0
 13035 0502 0FD0     		beq	.L559
1907:..\src/command_processing.c ****                 strcat(str, "YES\r\n");
 13036              		.loc 1 1907 0
 13037 0504 07F11C03 		add	r3, r7, #28
 13038 0508 1846     		mov	r0, r3
 13039 050a FFF7FEFF 		bl	strlen
 13040 050e 0346     		mov	r3, r0
 13041 0510 1A46     		mov	r2, r3
 13042 0512 07F11C03 		add	r3, r7, #28
 13043 0516 1344     		add	r3, r3, r2
 13044 0518 4E4A     		ldr	r2, .L634+40
 13045 051a 1068     		ldr	r0, [r2]	@ unaligned
 13046 051c 1860     		str	r0, [r3]	@ unaligned
 13047 051e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 13048 0520 9A80     		strh	r2, [r3, #4]	@ unaligned
 13049 0522 0EE0     		b	.L560
 13050              	.L559:
1908:..\src/command_processing.c ****             } else {
1909:..\src/command_processing.c ****                 strcat(str, "NO\r\n");
 13051              		.loc 1 1909 0
 13052 0524 07F11C03 		add	r3, r7, #28
 13053 0528 1846     		mov	r0, r3
 13054 052a FFF7FEFF 		bl	strlen
 13055 052e 0346     		mov	r3, r0
 13056 0530 1A46     		mov	r2, r3
 13057 0532 07F11C03 		add	r3, r7, #28
 13058 0536 1344     		add	r3, r3, r2
 13059 0538 474A     		ldr	r2, .L634+44
 13060 053a 1068     		ldr	r0, [r2]	@ unaligned
 13061 053c 1860     		str	r0, [r3]	@ unaligned
 13062 053e 1279     		ldrb	r2, [r2, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 301


 13063 0540 1A71     		strb	r2, [r3, #4]
 13064              	.L560:
1910:..\src/command_processing.c ****             }
1911:..\src/command_processing.c ****             strcat(info_string, str);
 13065              		.loc 1 1911 0
 13066 0542 07F11C03 		add	r3, r7, #28
 13067 0546 1946     		mov	r1, r3
 13068 0548 7869     		ldr	r0, [r7, #20]
 13069 054a FFF7FEFF 		bl	strcat
1912:..\src/command_processing.c ****                         
1913:..\src/command_processing.c ****             strcat(info_string, "PWM rescaling activation: ");
 13070              		.loc 1 1913 0
 13071 054e 7869     		ldr	r0, [r7, #20]
 13072 0550 FFF7FEFF 		bl	strlen
 13073 0554 0346     		mov	r3, r0
 13074 0556 1A46     		mov	r2, r3
 13075 0558 7B69     		ldr	r3, [r7, #20]
 13076 055a 1344     		add	r3, r3, r2
 13077 055c 3F4A     		ldr	r2, .L634+48
 13078 055e 1D46     		mov	r5, r3
 13079 0560 1446     		mov	r4, r2
 13080 0562 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13081 0564 2860     		str	r0, [r5]	@ unaligned
 13082 0566 6960     		str	r1, [r5, #4]	@ unaligned
 13083 0568 AA60     		str	r2, [r5, #8]	@ unaligned
 13084 056a EB60     		str	r3, [r5, #12]	@ unaligned
 13085 056c 03CC     		ldmia	r4!, {r0, r1}
 13086 056e 2861     		str	r0, [r5, #16]	@ unaligned
 13087 0570 6961     		str	r1, [r5, #20]	@ unaligned
 13088 0572 2388     		ldrh	r3, [r4]	@ unaligned
 13089 0574 A278     		ldrb	r2, [r4, #2]
 13090 0576 2B83     		strh	r3, [r5, #24]	@ unaligned
 13091 0578 1346     		mov	r3, r2
 13092 057a AB76     		strb	r3, [r5, #26]
1914:..\src/command_processing.c ****             if(MOT->activate_pwm_rescaling == MAXON_12V)
 13093              		.loc 1 1914 0
 13094 057c D7F88430 		ldr	r3, [r7, #132]
 13095 0580 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 13096 0584 012B     		cmp	r3, #1
 13097 0586 0CD1     		bne	.L561
1915:..\src/command_processing.c ****                 strcat(info_string, "YES\n");
 13098              		.loc 1 1915 0
 13099 0588 7869     		ldr	r0, [r7, #20]
 13100 058a FFF7FEFF 		bl	strlen
 13101 058e 0346     		mov	r3, r0
 13102 0590 1A46     		mov	r2, r3
 13103 0592 7B69     		ldr	r3, [r7, #20]
 13104 0594 1344     		add	r3, r3, r2
 13105 0596 324A     		ldr	r2, .L634+52
 13106 0598 1068     		ldr	r0, [r2]	@ unaligned
 13107 059a 1860     		str	r0, [r3]	@ unaligned
 13108 059c 1279     		ldrb	r2, [r2, #4]
 13109 059e 1A71     		strb	r2, [r3, #4]
 13110 05a0 09E0     		b	.L562
 13111              	.L561:
1916:..\src/command_processing.c ****             else
1917:..\src/command_processing.c ****                 strcat(info_string, "NO\n");
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 302


 13112              		.loc 1 1917 0
 13113 05a2 7869     		ldr	r0, [r7, #20]
 13114 05a4 FFF7FEFF 		bl	strlen
 13115 05a8 0346     		mov	r3, r0
 13116 05aa 1A46     		mov	r2, r3
 13117 05ac 7B69     		ldr	r3, [r7, #20]
 13118 05ae 1344     		add	r3, r3, r2
 13119 05b0 2C4A     		ldr	r2, .L634+56
 13120 05b2 1068     		ldr	r0, [r2]	@ unaligned
 13121 05b4 1860     		str	r0, [r3]	@ unaligned
 13122              	.L562:
1918:..\src/command_processing.c ****             
1919:..\src/command_processing.c ****             sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 13123              		.loc 1 1919 0
 13124 05b6 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13125 05ba 2B4A     		ldr	r2, .L634+60
 13126 05bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13127 05be 1A46     		mov	r2, r3
 13128 05c0 07F11C03 		add	r3, r7, #28
 13129 05c4 2949     		ldr	r1, .L634+64
 13130 05c6 1846     		mov	r0, r3
 13131 05c8 FFF7FEFF 		bl	sprintf
1920:..\src/command_processing.c ****             strcat(info_string, str);
 13132              		.loc 1 1920 0
 13133 05cc 07F11C03 		add	r3, r7, #28
 13134 05d0 1946     		mov	r1, r3
 13135 05d2 7869     		ldr	r0, [r7, #20]
 13136 05d4 FFF7FEFF 		bl	strcat
1921:..\src/command_processing.c **** 
1922:..\src/command_processing.c ****             strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 13137              		.loc 1 1922 0
 13138 05d8 7869     		ldr	r0, [r7, #20]
 13139 05da FFF7FEFF 		bl	strlen
 13140 05de 0346     		mov	r3, r0
 13141 05e0 1A46     		mov	r2, r3
 13142 05e2 7B69     		ldr	r3, [r7, #20]
 13143 05e4 1344     		add	r3, r3, r2
 13144 05e6 224A     		ldr	r2, .L634+68
 13145 05e8 1D46     		mov	r5, r3
 13146 05ea 1446     		mov	r4, r2
 13147 05ec 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13148 05ee 2860     		str	r0, [r5]	@ unaligned
 13149 05f0 6960     		str	r1, [r5, #4]	@ unaligned
 13150 05f2 AA60     		str	r2, [r5, #8]	@ unaligned
 13151 05f4 EB60     		str	r3, [r5, #12]	@ unaligned
 13152 05f6 2068     		ldr	r0, [r4]	@ unaligned
 13153 05f8 2861     		str	r0, [r5, #16]	@ unaligned
 13154 05fa A388     		ldrh	r3, [r4, #4]	@ unaligned
 13155 05fc AB82     		strh	r3, [r5, #20]	@ unaligned
1923:..\src/command_processing.c ****             strcat(info_string, "Sensor value: ");
 13156              		.loc 1 1923 0
 13157 05fe 7869     		ldr	r0, [r7, #20]
 13158 0600 FFF7FEFF 		bl	strlen
 13159 0604 0346     		mov	r3, r0
 13160 0606 1A46     		mov	r2, r3
 13161 0608 7B69     		ldr	r3, [r7, #20]
 13162 060a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 303


 13163 060c 194A     		ldr	r2, .L634+72
 13164 060e 1C46     		mov	r4, r3
 13165 0610 1346     		mov	r3, r2
 13166 0612 07CB     		ldmia	r3!, {r0, r1, r2}
 13167 0614 2060     		str	r0, [r4]	@ unaligned
 13168 0616 6160     		str	r1, [r4, #4]	@ unaligned
 13169 0618 A260     		str	r2, [r4, #8]	@ unaligned
 13170 061a 1A88     		ldrh	r2, [r3]	@ unaligned
 13171 061c 9B78     		ldrb	r3, [r3, #2]
 13172 061e A281     		strh	r2, [r4, #12]	@ unaligned
 13173 0620 A373     		strb	r3, [r4, #14]
1924:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; i++) {
 13174              		.loc 1 1924 0
 13175 0622 0023     		movs	r3, #0
 13176 0624 C7F89430 		str	r3, [r7, #148]
 13177 0628 65E0     		b	.L563
 13178              	.L635:
 13179 062a 00BF     		.align	2
 13180              	.L634:
 13181 062c 64110000 		.word	.LC158
 13182 0630 74110000 		.word	.LC159
 13183 0634 84110000 		.word	.LC160
 13184 0638 94110000 		.word	.LC161
 13185 063c A0110000 		.word	.LC162
 13186 0640 00000000 		.word	g_refOld
 13187 0644 B0110000 		.word	.LC163
 13188 0648 18100000 		.word	.LC143
 13189 064c B4110000 		.word	.LC164
 13190 0650 00000000 		.word	g_ref
 13191 0654 C4110000 		.word	.LC165
 13192 0658 CC110000 		.word	.LC166
 13193 065c D4110000 		.word	.LC167
 13194 0660 F0110000 		.word	.LC168
 13195 0664 F8110000 		.word	.LC169
 13196 0668 00000000 		.word	dev_pwm_limit
 13197 066c FC110000 		.word	.LC170
 13198 0670 0C120000 		.word	.LC171
 13199 0674 24120000 		.word	.LC172
 13200              	.L565:
1925:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13201              		.loc 1 1925 0
 13202 0678 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13203 067c A749     		ldr	r1, .L636
 13204 067e 1346     		mov	r3, r2
 13205 0680 5B00     		lsls	r3, r3, #1
 13206 0682 1344     		add	r3, r3, r2
 13207 0684 9B00     		lsls	r3, r3, #2
 13208 0686 1344     		add	r3, r3, r2
 13209 0688 D7F89420 		ldr	r2, [r7, #148]
 13210 068c 1344     		add	r3, r3, r2
 13211 068e 51F82310 		ldr	r1, [r1, r3, lsl #2]
 13212 0692 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 13213 0696 D7F88C00 		ldr	r0, [r7, #140]
 13214 069a 1346     		mov	r3, r2
 13215 069c 5B00     		lsls	r3, r3, #1
 13216 069e 1344     		add	r3, r3, r2
 13217 06a0 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 304


 13218 06a2 C218     		adds	r2, r0, r3
 13219 06a4 D7F89430 		ldr	r3, [r7, #148]
 13220 06a8 1344     		add	r3, r3, r2
 13221 06aa 03F29513 		addw	r3, r3, #405
 13222 06ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13223 06b0 41FA03F2 		asr	r2, r1, r3
 13224 06b4 07F11C03 		add	r3, r7, #28
 13225 06b8 9949     		ldr	r1, .L636+4
 13226 06ba 1846     		mov	r0, r3
 13227 06bc FFF7FEFF 		bl	sprintf
1926:..\src/command_processing.c ****                 strcat(info_string, str);
 13228              		.loc 1 1926 0
 13229 06c0 07F11C03 		add	r3, r7, #28
 13230 06c4 1946     		mov	r1, r3
 13231 06c6 7869     		ldr	r0, [r7, #20]
 13232 06c8 FFF7FEFF 		bl	strcat
1927:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 13233              		.loc 1 1927 0
 13234 06cc D7F89430 		ldr	r3, [r7, #148]
 13235 06d0 022B     		cmp	r3, #2
 13236 06d2 0BD0     		beq	.L564
1928:..\src/command_processing.c ****                     strcat(info_string, ", ");
 13237              		.loc 1 1928 0
 13238 06d4 7869     		ldr	r0, [r7, #20]
 13239 06d6 FFF7FEFF 		bl	strlen
 13240 06da 0346     		mov	r3, r0
 13241 06dc 1A46     		mov	r2, r3
 13242 06de 7B69     		ldr	r3, [r7, #20]
 13243 06e0 1344     		add	r3, r3, r2
 13244 06e2 904A     		ldr	r2, .L636+8
 13245 06e4 1188     		ldrh	r1, [r2]	@ unaligned
 13246 06e6 9278     		ldrb	r2, [r2, #2]
 13247 06e8 1980     		strh	r1, [r3]	@ unaligned
 13248 06ea 9A70     		strb	r2, [r3, #2]
 13249              	.L564:
1924:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13250              		.loc 1 1924 0 discriminator 2
 13251 06ec D7F89430 		ldr	r3, [r7, #148]
 13252 06f0 0133     		adds	r3, r3, #1
 13253 06f2 C7F89430 		str	r3, [r7, #148]
 13254              	.L563:
1924:..\src/command_processing.c ****                 sprintf(str, "%d", (int)(g_meas[ENC_L].pos[i] >> MEM_P->enc[ENC_L].res[i]));
 13255              		.loc 1 1924 0 is_stmt 0 discriminator 1
 13256 06f6 D7F89430 		ldr	r3, [r7, #148]
 13257 06fa 022B     		cmp	r3, #2
 13258 06fc BCDD     		ble	.L565
1929:..\src/command_processing.c ****                 }                
1930:..\src/command_processing.c ****             }
1931:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13259              		.loc 1 1931 0 is_stmt 1
 13260 06fe 7869     		ldr	r0, [r7, #20]
 13261 0700 FFF7FEFF 		bl	strlen
 13262 0704 0346     		mov	r3, r0
 13263 0706 1A46     		mov	r2, r3
 13264 0708 7B69     		ldr	r3, [r7, #20]
 13265 070a 1344     		add	r3, r3, r2
 13266 070c 864A     		ldr	r2, .L636+12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 305


 13267 070e 1188     		ldrh	r1, [r2]	@ unaligned
 13268 0710 9278     		ldrb	r2, [r2, #2]
 13269 0712 1980     		strh	r1, [r3]	@ unaligned
 13270 0714 9A70     		strb	r2, [r3, #2]
1932:..\src/command_processing.c **** 
1933:..\src/command_processing.c ****             sprintf(str, "Battery %d Voltage (mV): %ld", MOTOR_IDX+1, (int32) dev_tension[MOTOR_IDX
 13271              		.loc 1 1933 0
 13272 0716 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13273 071a 591C     		adds	r1, r3, #1
 13274 071c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13275 0720 824A     		ldr	r2, .L636+16
 13276 0722 52F82330 		ldr	r3, [r2, r3, lsl #2]
 13277 0726 07F11C00 		add	r0, r7, #28
 13278 072a 0A46     		mov	r2, r1
 13279 072c 8049     		ldr	r1, .L636+20
 13280 072e FFF7FEFF 		bl	sprintf
1934:..\src/command_processing.c ****             strcat(info_string, str);
 13281              		.loc 1 1934 0
 13282 0732 07F11C03 		add	r3, r7, #28
 13283 0736 1946     		mov	r1, r3
 13284 0738 7869     		ldr	r0, [r7, #20]
 13285 073a FFF7FEFF 		bl	strcat
1935:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13286              		.loc 1 1935 0
 13287 073e 7869     		ldr	r0, [r7, #20]
 13288 0740 FFF7FEFF 		bl	strlen
 13289 0744 0346     		mov	r3, r0
 13290 0746 1A46     		mov	r2, r3
 13291 0748 7B69     		ldr	r3, [r7, #20]
 13292 074a 1344     		add	r3, r3, r2
 13293 074c 764A     		ldr	r2, .L636+12
 13294 074e 1188     		ldrh	r1, [r2]	@ unaligned
 13295 0750 9278     		ldrb	r2, [r2, #2]
 13296 0752 1980     		strh	r1, [r3]	@ unaligned
 13297 0754 9A70     		strb	r2, [r3, #2]
1936:..\src/command_processing.c ****             
1937:..\src/command_processing.c ****             sprintf(str, "Full charge power tension %d (mV): %ld", MOTOR_IDX+1, (int32) pow_tension
 13298              		.loc 1 1937 0
 13299 0756 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13300 075a 591C     		adds	r1, r3, #1
 13301 075c 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13302 0760 744A     		ldr	r2, .L636+24
 13303 0762 52F82330 		ldr	r3, [r2, r3, lsl #2]
 13304 0766 07F11C00 		add	r0, r7, #28
 13305 076a 0A46     		mov	r2, r1
 13306 076c 7249     		ldr	r1, .L636+28
 13307 076e FFF7FEFF 		bl	sprintf
1938:..\src/command_processing.c ****             strcat(info_string, str);
 13308              		.loc 1 1938 0
 13309 0772 07F11C03 		add	r3, r7, #28
 13310 0776 1946     		mov	r1, r3
 13311 0778 7869     		ldr	r0, [r7, #20]
 13312 077a FFF7FEFF 		bl	strcat
1939:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13313              		.loc 1 1939 0
 13314 077e 7869     		ldr	r0, [r7, #20]
 13315 0780 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 306


 13316 0784 0346     		mov	r3, r0
 13317 0786 1A46     		mov	r2, r3
 13318 0788 7B69     		ldr	r3, [r7, #20]
 13319 078a 1344     		add	r3, r3, r2
 13320 078c 664A     		ldr	r2, .L636+12
 13321 078e 1188     		ldrh	r1, [r2]	@ unaligned
 13322 0790 9278     		ldrb	r2, [r2, #2]
 13323 0792 1980     		strh	r1, [r3]	@ unaligned
 13324 0794 9A70     		strb	r2, [r3, #2]
1940:..\src/command_processing.c **** 
1941:..\src/command_processing.c ****             sprintf(str, "Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[ENC_L].curr );
 13325              		.loc 1 1941 0
 13326 0796 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13327 079a 5C1C     		adds	r4, r3, #1
 13328 079c 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 13329 07a0 5E4A     		ldr	r2, .L636
 13330 07a2 3421     		movs	r1, #52
 13331 07a4 01FB03F3 		mul	r3, r1, r3
 13332 07a8 1344     		add	r3, r3, r2
 13333 07aa 0C33     		adds	r3, r3, #12
 13334 07ac 1B68     		ldr	r3, [r3]
 13335 07ae 07F11C00 		add	r0, r7, #28
 13336 07b2 2246     		mov	r2, r4
 13337 07b4 6149     		ldr	r1, .L636+32
 13338 07b6 FFF7FEFF 		bl	sprintf
1942:..\src/command_processing.c ****             strcat(info_string, str);
 13339              		.loc 1 1942 0
 13340 07ba 07F11C03 		add	r3, r7, #28
 13341 07be 1946     		mov	r1, r3
 13342 07c0 7869     		ldr	r0, [r7, #20]
 13343 07c2 FFF7FEFF 		bl	strcat
1943:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 13344              		.loc 1 1943 0
 13345 07c6 7869     		ldr	r0, [r7, #20]
 13346 07c8 FFF7FEFF 		bl	strlen
 13347 07cc 0346     		mov	r3, r0
 13348 07ce 1A46     		mov	r2, r3
 13349 07d0 7B69     		ldr	r3, [r7, #20]
 13350 07d2 1344     		add	r3, r3, r2
 13351 07d4 544A     		ldr	r2, .L636+12
 13352 07d6 1188     		ldrh	r1, [r2]	@ unaligned
 13353 07d8 9278     		ldrb	r2, [r2, #2]
 13354 07da 1980     		strh	r1, [r3]	@ unaligned
 13355 07dc 9A70     		strb	r2, [r3, #2]
1944:..\src/command_processing.c ****             
1945:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag == TRUE){
 13356              		.loc 1 1945 0
 13357 07de D7F88430 		ldr	r3, [r7, #132]
 13358 07e2 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 13359 07e6 012B     		cmp	r3, #1
 13360 07e8 23D1     		bne	.L566
1946:..\src/command_processing.c ****                 sprintf(str, "Last Grasp Hold Current %d (mA): %ld", MOTOR_IDX+1, (int32) g_meas[EN
 13361              		.loc 1 1946 0
 13362 07ea 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13363 07ee 5C1C     		adds	r4, r3, #1
 13364 07f0 97F88330 		ldrb	r3, [r7, #131]	@ zero_extendqisi2
 13365 07f4 494A     		ldr	r2, .L636
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 307


 13366 07f6 3421     		movs	r1, #52
 13367 07f8 01FB03F3 		mul	r3, r1, r3
 13368 07fc 1344     		add	r3, r3, r2
 13369 07fe 1433     		adds	r3, r3, #20
 13370 0800 1B68     		ldr	r3, [r3]
 13371 0802 07F11C00 		add	r0, r7, #28
 13372 0806 2246     		mov	r2, r4
 13373 0808 4D49     		ldr	r1, .L636+36
 13374 080a FFF7FEFF 		bl	sprintf
1947:..\src/command_processing.c ****                 strcat(info_string, str);
 13375              		.loc 1 1947 0
 13376 080e 07F11C03 		add	r3, r7, #28
 13377 0812 1946     		mov	r1, r3
 13378 0814 7869     		ldr	r0, [r7, #20]
 13379 0816 FFF7FEFF 		bl	strcat
1948:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
 13380              		.loc 1 1948 0
 13381 081a 7869     		ldr	r0, [r7, #20]
 13382 081c FFF7FEFF 		bl	strlen
 13383 0820 0346     		mov	r3, r0
 13384 0822 1A46     		mov	r2, r3
 13385 0824 7B69     		ldr	r3, [r7, #20]
 13386 0826 1344     		add	r3, r3, r2
 13387 0828 3F4A     		ldr	r2, .L636+12
 13388 082a 1188     		ldrh	r1, [r2]	@ unaligned
 13389 082c 9278     		ldrb	r2, [r2, #2]
 13390 082e 1980     		strh	r1, [r3]	@ unaligned
 13391 0830 9A70     		strb	r2, [r3, #2]
 13392              	.L566:
1949:..\src/command_processing.c ****             }
1950:..\src/command_processing.c ****             
1951:..\src/command_processing.c ****             sprintf(str, "\r\nMOTOR %d CONFIGURATION\r\n", MOTOR_IDX+1);
 13393              		.loc 1 1951 0
 13394 0832 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 13395 0836 5A1C     		adds	r2, r3, #1
 13396 0838 07F11C03 		add	r3, r7, #28
 13397 083c 4149     		ldr	r1, .L636+40
 13398 083e 1846     		mov	r0, r3
 13399 0840 FFF7FEFF 		bl	sprintf
1952:..\src/command_processing.c ****             strcat(info_string, str);
 13400              		.loc 1 1952 0
 13401 0844 07F11C03 		add	r3, r7, #28
 13402 0848 1946     		mov	r1, r3
 13403 084a 7869     		ldr	r0, [r7, #20]
 13404 084c FFF7FEFF 		bl	strcat
1953:..\src/command_processing.c **** 
1954:..\src/command_processing.c ****             strcat(info_string, "PID Controller: ");
 13405              		.loc 1 1954 0
 13406 0850 7869     		ldr	r0, [r7, #20]
 13407 0852 FFF7FEFF 		bl	strlen
 13408 0856 0346     		mov	r3, r0
 13409 0858 1A46     		mov	r2, r3
 13410 085a 7B69     		ldr	r3, [r7, #20]
 13411 085c 1344     		add	r3, r3, r2
 13412 085e 3A4A     		ldr	r2, .L636+44
 13413 0860 1D46     		mov	r5, r3
 13414 0862 1446     		mov	r4, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 308


 13415 0864 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13416 0866 2860     		str	r0, [r5]	@ unaligned
 13417 0868 6960     		str	r1, [r5, #4]	@ unaligned
 13418 086a AA60     		str	r2, [r5, #8]	@ unaligned
 13419 086c EB60     		str	r3, [r5, #12]	@ unaligned
 13420 086e 2378     		ldrb	r3, [r4]
 13421 0870 2B74     		strb	r3, [r5, #16]
1955:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13422              		.loc 1 1955 0
 13423 0872 D7F88430 		ldr	r3, [r7, #132]
 13424 0876 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13425 087a 032B     		cmp	r3, #3
 13426 087c 6ED0     		beq	.L567
1956:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 13427              		.loc 1 1956 0
 13428 087e D7F88430 		ldr	r3, [r7, #132]
 13429 0882 1B68     		ldr	r3, [r3]
 13430 0884 1846     		mov	r0, r3
 13431 0886 FFF7FEFF 		bl	__aeabi_i2d
 13432 088a 4FF00002 		mov	r2, #0
 13433 088e 2F4B     		ldr	r3, .L636+48
 13434 0890 FFF7FEFF 		bl	__aeabi_ddiv
 13435 0894 0346     		mov	r3, r0
 13436 0896 0C46     		mov	r4, r1
 13437 0898 07F11C00 		add	r0, r7, #28
 13438 089c 1A46     		mov	r2, r3
 13439 089e 2346     		mov	r3, r4
 13440 08a0 2B49     		ldr	r1, .L636+52
 13441 08a2 FFF7FEFF 		bl	sprintf
1957:..\src/command_processing.c ****                 strcat(info_string, str);
 13442              		.loc 1 1957 0
 13443 08a6 07F11C03 		add	r3, r7, #28
 13444 08aa 1946     		mov	r1, r3
 13445 08ac 7869     		ldr	r0, [r7, #20]
 13446 08ae FFF7FEFF 		bl	strcat
1958:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 13447              		.loc 1 1958 0
 13448 08b2 D7F88430 		ldr	r3, [r7, #132]
 13449 08b6 5B68     		ldr	r3, [r3, #4]
 13450 08b8 1846     		mov	r0, r3
 13451 08ba FFF7FEFF 		bl	__aeabi_i2d
 13452 08be 4FF00002 		mov	r2, #0
 13453 08c2 224B     		ldr	r3, .L636+48
 13454 08c4 FFF7FEFF 		bl	__aeabi_ddiv
 13455 08c8 0346     		mov	r3, r0
 13456 08ca 0C46     		mov	r4, r1
 13457 08cc 07F11C00 		add	r0, r7, #28
 13458 08d0 1A46     		mov	r2, r3
 13459 08d2 2346     		mov	r3, r4
 13460 08d4 1F49     		ldr	r1, .L636+56
 13461 08d6 FFF7FEFF 		bl	sprintf
1959:..\src/command_processing.c ****                 strcat(info_string, str);
 13462              		.loc 1 1959 0
 13463 08da 07F11C03 		add	r3, r7, #28
 13464 08de 1946     		mov	r1, r3
 13465 08e0 7869     		ldr	r0, [r7, #20]
 13466 08e2 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 309


1960:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 13467              		.loc 1 1960 0
 13468 08e6 D7F88430 		ldr	r3, [r7, #132]
 13469 08ea 9B68     		ldr	r3, [r3, #8]
 13470 08ec 1846     		mov	r0, r3
 13471 08ee FFF7FEFF 		bl	__aeabi_i2d
 13472 08f2 4FF00002 		mov	r2, #0
 13473 08f6 154B     		ldr	r3, .L636+48
 13474 08f8 FFF7FEFF 		bl	__aeabi_ddiv
 13475 08fc 0346     		mov	r3, r0
 13476 08fe 0C46     		mov	r4, r1
 13477 0900 07F11C00 		add	r0, r7, #28
 13478 0904 1A46     		mov	r2, r3
 13479 0906 2346     		mov	r3, r4
 13480 0908 1349     		ldr	r1, .L636+60
 13481 090a FFF7FEFF 		bl	sprintf
1961:..\src/command_processing.c ****                 strcat(info_string, str);
 13482              		.loc 1 1961 0
 13483 090e 07F11C03 		add	r3, r7, #28
 13484 0912 1946     		mov	r1, r3
 13485 0914 7869     		ldr	r0, [r7, #20]
 13486 0916 FFF7FEFF 		bl	strcat
 13487 091a 6DE0     		b	.L568
 13488              	.L637:
 13489              		.align	2
 13490              	.L636:
 13491 091c 00000000 		.word	g_meas
 13492 0920 34120000 		.word	.LC173
 13493 0924 38120000 		.word	.LC174
 13494 0928 18100000 		.word	.LC143
 13495 092c 00000000 		.word	dev_tension
 13496 0930 3C120000 		.word	.LC175
 13497 0934 00000000 		.word	pow_tension
 13498 0938 5C120000 		.word	.LC176
 13499 093c 84120000 		.word	.LC177
 13500 0940 9C120000 		.word	.LC178
 13501 0944 C4120000 		.word	.LC179
 13502 0948 E0120000 		.word	.LC180
 13503 094c 0000F040 		.word	1089470464
 13504 0950 F4120000 		.word	.LC181
 13505 0954 00130000 		.word	.LC182
 13506 0958 0C130000 		.word	.LC183
 13507              	.L567:
1962:..\src/command_processing.c ****             }
1963:..\src/command_processing.c ****             else { 
1964:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 13508              		.loc 1 1964 0
 13509 095c D7F88430 		ldr	r3, [r7, #132]
 13510 0960 9B69     		ldr	r3, [r3, #24]
 13511 0962 1846     		mov	r0, r3
 13512 0964 FFF7FEFF 		bl	__aeabi_i2d
 13513 0968 4FF00002 		mov	r2, #0
 13514 096c CE4B     		ldr	r3, .L638
 13515 096e FFF7FEFF 		bl	__aeabi_ddiv
 13516 0972 0346     		mov	r3, r0
 13517 0974 0C46     		mov	r4, r1
 13518 0976 07F11C00 		add	r0, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 310


 13519 097a 1A46     		mov	r2, r3
 13520 097c 2346     		mov	r3, r4
 13521 097e CB49     		ldr	r1, .L638+4
 13522 0980 FFF7FEFF 		bl	sprintf
1965:..\src/command_processing.c ****                 strcat(info_string, str);
 13523              		.loc 1 1965 0
 13524 0984 07F11C03 		add	r3, r7, #28
 13525 0988 1946     		mov	r1, r3
 13526 098a 7869     		ldr	r0, [r7, #20]
 13527 098c FFF7FEFF 		bl	strcat
1966:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 13528              		.loc 1 1966 0
 13529 0990 D7F88430 		ldr	r3, [r7, #132]
 13530 0994 DB69     		ldr	r3, [r3, #28]
 13531 0996 1846     		mov	r0, r3
 13532 0998 FFF7FEFF 		bl	__aeabi_i2d
 13533 099c 4FF00002 		mov	r2, #0
 13534 09a0 C14B     		ldr	r3, .L638
 13535 09a2 FFF7FEFF 		bl	__aeabi_ddiv
 13536 09a6 0346     		mov	r3, r0
 13537 09a8 0C46     		mov	r4, r1
 13538 09aa 07F11C00 		add	r0, r7, #28
 13539 09ae 1A46     		mov	r2, r3
 13540 09b0 2346     		mov	r3, r4
 13541 09b2 BF49     		ldr	r1, .L638+8
 13542 09b4 FFF7FEFF 		bl	sprintf
1967:..\src/command_processing.c ****                 strcat(info_string, str);
 13543              		.loc 1 1967 0
 13544 09b8 07F11C03 		add	r3, r7, #28
 13545 09bc 1946     		mov	r1, r3
 13546 09be 7869     		ldr	r0, [r7, #20]
 13547 09c0 FFF7FEFF 		bl	strcat
1968:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 13548              		.loc 1 1968 0
 13549 09c4 D7F88430 		ldr	r3, [r7, #132]
 13550 09c8 1B6A     		ldr	r3, [r3, #32]
 13551 09ca 1846     		mov	r0, r3
 13552 09cc FFF7FEFF 		bl	__aeabi_i2d
 13553 09d0 4FF00002 		mov	r2, #0
 13554 09d4 B44B     		ldr	r3, .L638
 13555 09d6 FFF7FEFF 		bl	__aeabi_ddiv
 13556 09da 0346     		mov	r3, r0
 13557 09dc 0C46     		mov	r4, r1
 13558 09de 07F11C00 		add	r0, r7, #28
 13559 09e2 1A46     		mov	r2, r3
 13560 09e4 2346     		mov	r3, r4
 13561 09e6 B349     		ldr	r1, .L638+12
 13562 09e8 FFF7FEFF 		bl	sprintf
1969:..\src/command_processing.c ****                 strcat(info_string, str);
 13563              		.loc 1 1969 0
 13564 09ec 07F11C03 		add	r3, r7, #28
 13565 09f0 1946     		mov	r1, r3
 13566 09f2 7869     		ldr	r0, [r7, #20]
 13567 09f4 FFF7FEFF 		bl	strcat
 13568              	.L568:
1970:..\src/command_processing.c ****             }
1971:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 311


1972:..\src/command_processing.c ****             strcat(info_string, "Current PID Controller: ");
 13569              		.loc 1 1972 0
 13570 09f8 7869     		ldr	r0, [r7, #20]
 13571 09fa FFF7FEFF 		bl	strlen
 13572 09fe 0346     		mov	r3, r0
 13573 0a00 1A46     		mov	r2, r3
 13574 0a02 7B69     		ldr	r3, [r7, #20]
 13575 0a04 1344     		add	r3, r3, r2
 13576 0a06 AC4A     		ldr	r2, .L638+16
 13577 0a08 1D46     		mov	r5, r3
 13578 0a0a 1446     		mov	r4, r2
 13579 0a0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13580 0a0e 2860     		str	r0, [r5]	@ unaligned
 13581 0a10 6960     		str	r1, [r5, #4]	@ unaligned
 13582 0a12 AA60     		str	r2, [r5, #8]	@ unaligned
 13583 0a14 EB60     		str	r3, [r5, #12]	@ unaligned
 13584 0a16 03CC     		ldmia	r4!, {r0, r1}
 13585 0a18 2861     		str	r0, [r5, #16]	@ unaligned
 13586 0a1a 6961     		str	r1, [r5, #20]	@ unaligned
 13587 0a1c 2378     		ldrb	r3, [r4]
 13588 0a1e 2B76     		strb	r3, [r5, #24]
1973:..\src/command_processing.c ****             if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 13589              		.loc 1 1973 0
 13590 0a20 D7F88430 		ldr	r3, [r7, #132]
 13591 0a24 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 13592 0a28 032B     		cmp	r3, #3
 13593 0a2a 4ED0     		beq	.L569
1974:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 13594              		.loc 1 1974 0
 13595 0a2c D7F88430 		ldr	r3, [r7, #132]
 13596 0a30 DB68     		ldr	r3, [r3, #12]
 13597 0a32 1846     		mov	r0, r3
 13598 0a34 FFF7FEFF 		bl	__aeabi_i2d
 13599 0a38 4FF00002 		mov	r2, #0
 13600 0a3c 9A4B     		ldr	r3, .L638
 13601 0a3e FFF7FEFF 		bl	__aeabi_ddiv
 13602 0a42 0346     		mov	r3, r0
 13603 0a44 0C46     		mov	r4, r1
 13604 0a46 07F11C00 		add	r0, r7, #28
 13605 0a4a 1A46     		mov	r2, r3
 13606 0a4c 2346     		mov	r3, r4
 13607 0a4e 9749     		ldr	r1, .L638+4
 13608 0a50 FFF7FEFF 		bl	sprintf
1975:..\src/command_processing.c ****                 strcat(info_string, str);
 13609              		.loc 1 1975 0
 13610 0a54 07F11C03 		add	r3, r7, #28
 13611 0a58 1946     		mov	r1, r3
 13612 0a5a 7869     		ldr	r0, [r7, #20]
 13613 0a5c FFF7FEFF 		bl	strcat
1976:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 13614              		.loc 1 1976 0
 13615 0a60 D7F88430 		ldr	r3, [r7, #132]
 13616 0a64 1B69     		ldr	r3, [r3, #16]
 13617 0a66 1846     		mov	r0, r3
 13618 0a68 FFF7FEFF 		bl	__aeabi_i2d
 13619 0a6c 4FF00002 		mov	r2, #0
 13620 0a70 8D4B     		ldr	r3, .L638
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 312


 13621 0a72 FFF7FEFF 		bl	__aeabi_ddiv
 13622 0a76 0346     		mov	r3, r0
 13623 0a78 0C46     		mov	r4, r1
 13624 0a7a 07F11C00 		add	r0, r7, #28
 13625 0a7e 1A46     		mov	r2, r3
 13626 0a80 2346     		mov	r3, r4
 13627 0a82 8B49     		ldr	r1, .L638+8
 13628 0a84 FFF7FEFF 		bl	sprintf
1977:..\src/command_processing.c ****                 strcat(info_string, str);
 13629              		.loc 1 1977 0
 13630 0a88 07F11C03 		add	r3, r7, #28
 13631 0a8c 1946     		mov	r1, r3
 13632 0a8e 7869     		ldr	r0, [r7, #20]
 13633 0a90 FFF7FEFF 		bl	strcat
1978:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 13634              		.loc 1 1978 0
 13635 0a94 D7F88430 		ldr	r3, [r7, #132]
 13636 0a98 5B69     		ldr	r3, [r3, #20]
 13637 0a9a 1846     		mov	r0, r3
 13638 0a9c FFF7FEFF 		bl	__aeabi_i2d
 13639 0aa0 4FF00002 		mov	r2, #0
 13640 0aa4 804B     		ldr	r3, .L638
 13641 0aa6 FFF7FEFF 		bl	__aeabi_ddiv
 13642 0aaa 0346     		mov	r3, r0
 13643 0aac 0C46     		mov	r4, r1
 13644 0aae 07F11C00 		add	r0, r7, #28
 13645 0ab2 1A46     		mov	r2, r3
 13646 0ab4 2346     		mov	r3, r4
 13647 0ab6 7F49     		ldr	r1, .L638+12
 13648 0ab8 FFF7FEFF 		bl	sprintf
1979:..\src/command_processing.c ****                 strcat(info_string, str);
 13649              		.loc 1 1979 0
 13650 0abc 07F11C03 		add	r3, r7, #28
 13651 0ac0 1946     		mov	r1, r3
 13652 0ac2 7869     		ldr	r0, [r7, #20]
 13653 0ac4 FFF7FEFF 		bl	strcat
 13654 0ac8 4DE0     		b	.L570
 13655              	.L569:
1980:..\src/command_processing.c **** 
1981:..\src/command_processing.c ****             }
1982:..\src/command_processing.c ****             else {
1983:..\src/command_processing.c ****                 sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 13656              		.loc 1 1983 0
 13657 0aca D7F88430 		ldr	r3, [r7, #132]
 13658 0ace 5B6A     		ldr	r3, [r3, #36]
 13659 0ad0 1846     		mov	r0, r3
 13660 0ad2 FFF7FEFF 		bl	__aeabi_i2d
 13661 0ad6 4FF00002 		mov	r2, #0
 13662 0ada 734B     		ldr	r3, .L638
 13663 0adc FFF7FEFF 		bl	__aeabi_ddiv
 13664 0ae0 0346     		mov	r3, r0
 13665 0ae2 0C46     		mov	r4, r1
 13666 0ae4 07F11C00 		add	r0, r7, #28
 13667 0ae8 1A46     		mov	r2, r3
 13668 0aea 2346     		mov	r3, r4
 13669 0aec 6F49     		ldr	r1, .L638+4
 13670 0aee FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 313


1984:..\src/command_processing.c ****                 strcat(info_string, str);
 13671              		.loc 1 1984 0
 13672 0af2 07F11C03 		add	r3, r7, #28
 13673 0af6 1946     		mov	r1, r3
 13674 0af8 7869     		ldr	r0, [r7, #20]
 13675 0afa FFF7FEFF 		bl	strcat
1985:..\src/command_processing.c ****                 sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 13676              		.loc 1 1985 0
 13677 0afe D7F88430 		ldr	r3, [r7, #132]
 13678 0b02 9B6A     		ldr	r3, [r3, #40]
 13679 0b04 1846     		mov	r0, r3
 13680 0b06 FFF7FEFF 		bl	__aeabi_i2d
 13681 0b0a 4FF00002 		mov	r2, #0
 13682 0b0e 664B     		ldr	r3, .L638
 13683 0b10 FFF7FEFF 		bl	__aeabi_ddiv
 13684 0b14 0346     		mov	r3, r0
 13685 0b16 0C46     		mov	r4, r1
 13686 0b18 07F11C00 		add	r0, r7, #28
 13687 0b1c 1A46     		mov	r2, r3
 13688 0b1e 2346     		mov	r3, r4
 13689 0b20 6349     		ldr	r1, .L638+8
 13690 0b22 FFF7FEFF 		bl	sprintf
1986:..\src/command_processing.c ****                 strcat(info_string, str);
 13691              		.loc 1 1986 0
 13692 0b26 07F11C03 		add	r3, r7, #28
 13693 0b2a 1946     		mov	r1, r3
 13694 0b2c 7869     		ldr	r0, [r7, #20]
 13695 0b2e FFF7FEFF 		bl	strcat
1987:..\src/command_processing.c ****                 sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 13696              		.loc 1 1987 0
 13697 0b32 D7F88430 		ldr	r3, [r7, #132]
 13698 0b36 DB6A     		ldr	r3, [r3, #44]
 13699 0b38 1846     		mov	r0, r3
 13700 0b3a FFF7FEFF 		bl	__aeabi_i2d
 13701 0b3e 4FF00002 		mov	r2, #0
 13702 0b42 594B     		ldr	r3, .L638
 13703 0b44 FFF7FEFF 		bl	__aeabi_ddiv
 13704 0b48 0346     		mov	r3, r0
 13705 0b4a 0C46     		mov	r4, r1
 13706 0b4c 07F11C00 		add	r0, r7, #28
 13707 0b50 1A46     		mov	r2, r3
 13708 0b52 2346     		mov	r3, r4
 13709 0b54 5749     		ldr	r1, .L638+12
 13710 0b56 FFF7FEFF 		bl	sprintf
1988:..\src/command_processing.c ****                 strcat(info_string, str);
 13711              		.loc 1 1988 0
 13712 0b5a 07F11C03 		add	r3, r7, #28
 13713 0b5e 1946     		mov	r1, r3
 13714 0b60 7869     		ldr	r0, [r7, #20]
 13715 0b62 FFF7FEFF 		bl	strcat
 13716              	.L570:
1989:..\src/command_processing.c ****             }
1990:..\src/command_processing.c ****             if (MOT->activ == 0x01)
 13717              		.loc 1 1990 0
 13718 0b66 D7F88430 		ldr	r3, [r7, #132]
 13719 0b6a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 13720 0b6e 012B     		cmp	r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 314


 13721 0b70 14D1     		bne	.L571
1991:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: YES\r\n");
 13722              		.loc 1 1991 0
 13723 0b72 7869     		ldr	r0, [r7, #20]
 13724 0b74 FFF7FEFF 		bl	strlen
 13725 0b78 0346     		mov	r3, r0
 13726 0b7a 1A46     		mov	r2, r3
 13727 0b7c 7B69     		ldr	r3, [r7, #20]
 13728 0b7e 1344     		add	r3, r3, r2
 13729 0b80 4E4A     		ldr	r2, .L638+20
 13730 0b82 1D46     		mov	r5, r3
 13731 0b84 1446     		mov	r4, r2
 13732 0b86 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13733 0b88 2860     		str	r0, [r5]	@ unaligned
 13734 0b8a 6960     		str	r1, [r5, #4]	@ unaligned
 13735 0b8c AA60     		str	r2, [r5, #8]	@ unaligned
 13736 0b8e EB60     		str	r3, [r5, #12]	@ unaligned
 13737 0b90 03CC     		ldmia	r4!, {r0, r1}
 13738 0b92 2861     		str	r0, [r5, #16]	@ unaligned
 13739 0b94 6961     		str	r1, [r5, #20]	@ unaligned
 13740 0b96 2388     		ldrh	r3, [r4]	@ unaligned
 13741 0b98 2B83     		strh	r3, [r5, #24]	@ unaligned
 13742 0b9a 13E0     		b	.L572
 13743              	.L571:
1992:..\src/command_processing.c ****             else
1993:..\src/command_processing.c ****                 strcat(info_string, "Startup activation: NO\r\n");
 13744              		.loc 1 1993 0
 13745 0b9c 7869     		ldr	r0, [r7, #20]
 13746 0b9e FFF7FEFF 		bl	strlen
 13747 0ba2 0346     		mov	r3, r0
 13748 0ba4 1A46     		mov	r2, r3
 13749 0ba6 7B69     		ldr	r3, [r7, #20]
 13750 0ba8 1344     		add	r3, r3, r2
 13751 0baa 454A     		ldr	r2, .L638+24
 13752 0bac 1D46     		mov	r5, r3
 13753 0bae 1446     		mov	r4, r2
 13754 0bb0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13755 0bb2 2860     		str	r0, [r5]	@ unaligned
 13756 0bb4 6960     		str	r1, [r5, #4]	@ unaligned
 13757 0bb6 AA60     		str	r2, [r5, #8]	@ unaligned
 13758 0bb8 EB60     		str	r3, [r5, #12]	@ unaligned
 13759 0bba 03CC     		ldmia	r4!, {r0, r1}
 13760 0bbc 2861     		str	r0, [r5, #16]	@ unaligned
 13761 0bbe 6961     		str	r1, [r5, #20]	@ unaligned
 13762 0bc0 2378     		ldrb	r3, [r4]
 13763 0bc2 2B76     		strb	r3, [r5, #24]
 13764              	.L572:
1994:..\src/command_processing.c **** 
1995:..\src/command_processing.c ****             switch(MOT->input_mode) {
 13765              		.loc 1 1995 0
 13766 0bc4 D7F88430 		ldr	r3, [r7, #132]
 13767 0bc8 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 13768 0bcc 072B     		cmp	r3, #7
 13769 0bce 00F2EA80 		bhi	.L573
 13770 0bd2 01A2     		adr	r2, .L575
 13771 0bd4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 13772              		.p2align 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 315


 13773              	.L575:
 13774 0bd8 F90B0000 		.word	.L574+1
 13775 0bdc 1D0C0000 		.word	.L576+1
 13776 0be0 450C0000 		.word	.L577+1
 13777 0be4 770C0000 		.word	.L578+1
 13778 0be8 D50C0000 		.word	.L579+1
 13779 0bec 030D0000 		.word	.L580+1
 13780 0bf0 330D0000 		.word	.L581+1
 13781 0bf4 610D0000 		.word	.L582+1
 13782              		.p2align 1
 13783              	.L574:
1996:..\src/command_processing.c ****                 case INPUT_MODE_EXTERNAL:
1997:..\src/command_processing.c ****                     strcat(info_string, "Input mode: USB\r\n");
 13784              		.loc 1 1997 0
 13785 0bf8 7869     		ldr	r0, [r7, #20]
 13786 0bfa FFF7FEFF 		bl	strlen
 13787 0bfe 0346     		mov	r3, r0
 13788 0c00 1A46     		mov	r2, r3
 13789 0c02 7B69     		ldr	r3, [r7, #20]
 13790 0c04 1344     		add	r3, r3, r2
 13791 0c06 2F4A     		ldr	r2, .L638+28
 13792 0c08 1D46     		mov	r5, r3
 13793 0c0a 1446     		mov	r4, r2
 13794 0c0c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13795 0c0e 2860     		str	r0, [r5]	@ unaligned
 13796 0c10 6960     		str	r1, [r5, #4]	@ unaligned
 13797 0c12 AA60     		str	r2, [r5, #8]	@ unaligned
 13798 0c14 EB60     		str	r3, [r5, #12]	@ unaligned
 13799 0c16 2388     		ldrh	r3, [r4]	@ unaligned
 13800 0c18 2B82     		strh	r3, [r5, #16]	@ unaligned
1998:..\src/command_processing.c ****                     break;
 13801              		.loc 1 1998 0
 13802 0c1a C4E0     		b	.L573
 13803              	.L576:
1999:..\src/command_processing.c ****                 case INPUT_MODE_ENCODER3:
2000:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Handle\r\n");
 13804              		.loc 1 2000 0
 13805 0c1c 7869     		ldr	r0, [r7, #20]
 13806 0c1e FFF7FEFF 		bl	strlen
 13807 0c22 0346     		mov	r3, r0
 13808 0c24 1A46     		mov	r2, r3
 13809 0c26 7B69     		ldr	r3, [r7, #20]
 13810 0c28 1344     		add	r3, r3, r2
 13811 0c2a 274A     		ldr	r2, .L638+32
 13812 0c2c 1D46     		mov	r5, r3
 13813 0c2e 1446     		mov	r4, r2
 13814 0c30 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13815 0c32 2860     		str	r0, [r5]	@ unaligned
 13816 0c34 6960     		str	r1, [r5, #4]	@ unaligned
 13817 0c36 AA60     		str	r2, [r5, #8]	@ unaligned
 13818 0c38 EB60     		str	r3, [r5, #12]	@ unaligned
 13819 0c3a 2068     		ldr	r0, [r4]	@ unaligned
 13820 0c3c 2861     		str	r0, [r5, #16]	@ unaligned
 13821 0c3e 2379     		ldrb	r3, [r4, #4]
 13822 0c40 2B75     		strb	r3, [r5, #20]
2001:..\src/command_processing.c ****                     break;
 13823              		.loc 1 2001 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 316


 13824 0c42 B0E0     		b	.L573
 13825              	.L577:
2002:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL:
2003:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional\r\n");
 13826              		.loc 1 2003 0
 13827 0c44 7869     		ldr	r0, [r7, #20]
 13828 0c46 FFF7FEFF 		bl	strlen
 13829 0c4a 0346     		mov	r3, r0
 13830 0c4c 1A46     		mov	r2, r3
 13831 0c4e 7B69     		ldr	r3, [r7, #20]
 13832 0c50 1344     		add	r3, r3, r2
 13833 0c52 1E4A     		ldr	r2, .L638+36
 13834 0c54 1D46     		mov	r5, r3
 13835 0c56 1446     		mov	r4, r2
 13836 0c58 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13837 0c5a 2860     		str	r0, [r5]	@ unaligned
 13838 0c5c 6960     		str	r1, [r5, #4]	@ unaligned
 13839 0c5e AA60     		str	r2, [r5, #8]	@ unaligned
 13840 0c60 EB60     		str	r3, [r5, #12]	@ unaligned
 13841 0c62 07CC     		ldmia	r4!, {r0, r1, r2}
 13842 0c64 2861     		str	r0, [r5, #16]	@ unaligned
 13843 0c66 6961     		str	r1, [r5, #20]	@ unaligned
 13844 0c68 AA61     		str	r2, [r5, #24]	@ unaligned
 13845 0c6a 2388     		ldrh	r3, [r4]	@ unaligned
 13846 0c6c A278     		ldrb	r2, [r4, #2]
 13847 0c6e AB83     		strh	r3, [r5, #28]	@ unaligned
 13848 0c70 1346     		mov	r3, r2
 13849 0c72 AB77     		strb	r3, [r5, #30]
2004:..\src/command_processing.c ****                     break;
 13850              		.loc 1 2004 0
 13851 0c74 97E0     		b	.L573
 13852              	.L578:
2005:..\src/command_processing.c ****                 case INPUT_MODE_EMG_INTEGRAL:
2006:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG integral\r\n");
 13853              		.loc 1 2006 0
 13854 0c76 7869     		ldr	r0, [r7, #20]
 13855 0c78 FFF7FEFF 		bl	strlen
 13856 0c7c 0346     		mov	r3, r0
 13857 0c7e 1A46     		mov	r2, r3
 13858 0c80 7B69     		ldr	r3, [r7, #20]
 13859 0c82 1344     		add	r3, r3, r2
 13860 0c84 124A     		ldr	r2, .L638+40
 13861 0c86 1D46     		mov	r5, r3
 13862 0c88 1446     		mov	r4, r2
 13863 0c8a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13864 0c8c 2860     		str	r0, [r5]	@ unaligned
 13865 0c8e 6960     		str	r1, [r5, #4]	@ unaligned
 13866 0c90 AA60     		str	r2, [r5, #8]	@ unaligned
 13867 0c92 EB60     		str	r3, [r5, #12]	@ unaligned
 13868 0c94 03CC     		ldmia	r4!, {r0, r1}
 13869 0c96 2861     		str	r0, [r5, #16]	@ unaligned
 13870 0c98 6961     		str	r1, [r5, #20]	@ unaligned
 13871 0c9a 2388     		ldrh	r3, [r4]	@ unaligned
 13872 0c9c A278     		ldrb	r2, [r4, #2]
 13873 0c9e 2B83     		strh	r3, [r5, #24]	@ unaligned
 13874 0ca0 1346     		mov	r3, r2
 13875 0ca2 AB76     		strb	r3, [r5, #26]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 317


2007:..\src/command_processing.c ****                     break;
 13876              		.loc 1 2007 0
 13877 0ca4 7FE0     		b	.L573
 13878              	.L639:
 13879 0ca6 00BF     		.align	2
 13880              	.L638:
 13881 0ca8 0000F040 		.word	1089470464
 13882 0cac F4120000 		.word	.LC181
 13883 0cb0 00130000 		.word	.LC182
 13884 0cb4 0C130000 		.word	.LC183
 13885 0cb8 18130000 		.word	.LC184
 13886 0cbc 34130000 		.word	.LC185
 13887 0cc0 50130000 		.word	.LC186
 13888 0cc4 6C130000 		.word	.LC187
 13889 0cc8 80130000 		.word	.LC188
 13890 0ccc 98130000 		.word	.LC189
 13891 0cd0 B8130000 		.word	.LC190
 13892              	.L579:
2008:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS:
2009:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS\r\n");
 13893              		.loc 1 2009 0
 13894 0cd4 7869     		ldr	r0, [r7, #20]
 13895 0cd6 FFF7FEFF 		bl	strlen
 13896 0cda 0346     		mov	r3, r0
 13897 0cdc 1A46     		mov	r2, r3
 13898 0cde 7B69     		ldr	r3, [r7, #20]
 13899 0ce0 1344     		add	r3, r3, r2
 13900 0ce2 CF4A     		ldr	r2, .L640
 13901 0ce4 1C46     		mov	r4, r3
 13902 0ce6 1546     		mov	r5, r2
 13903 0ce8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13904 0cea 2060     		str	r0, [r4]	@ unaligned
 13905 0cec 6160     		str	r1, [r4, #4]	@ unaligned
 13906 0cee A260     		str	r2, [r4, #8]	@ unaligned
 13907 0cf0 E360     		str	r3, [r4, #12]	@ unaligned
 13908 0cf2 2868     		ldr	r0, [r5]	@ unaligned
 13909 0cf4 2061     		str	r0, [r4, #16]	@ unaligned
 13910 0cf6 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13911 0cf8 AA79     		ldrb	r2, [r5, #6]
 13912 0cfa A382     		strh	r3, [r4, #20]	@ unaligned
 13913 0cfc 1346     		mov	r3, r2
 13914 0cfe A375     		strb	r3, [r4, #22]
2010:..\src/command_processing.c ****                     break;
 13915              		.loc 1 2010 0
 13916 0d00 51E0     		b	.L573
 13917              	.L580:
2011:..\src/command_processing.c ****                 case INPUT_MODE_EMG_FCFS_ADV:
2012:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 13918              		.loc 1 2012 0
 13919 0d02 7869     		ldr	r0, [r7, #20]
 13920 0d04 FFF7FEFF 		bl	strlen
 13921 0d08 0346     		mov	r3, r0
 13922 0d0a 1A46     		mov	r2, r3
 13923 0d0c 7B69     		ldr	r3, [r7, #20]
 13924 0d0e 1344     		add	r3, r3, r2
 13925 0d10 C44A     		ldr	r2, .L640+4
 13926 0d12 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 318


 13927 0d14 1446     		mov	r4, r2
 13928 0d16 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 13929 0d18 2860     		str	r0, [r5]	@ unaligned
 13930 0d1a 6960     		str	r1, [r5, #4]	@ unaligned
 13931 0d1c AA60     		str	r2, [r5, #8]	@ unaligned
 13932 0d1e EB60     		str	r3, [r5, #12]	@ unaligned
 13933 0d20 03CC     		ldmia	r4!, {r0, r1}
 13934 0d22 2861     		str	r0, [r5, #16]	@ unaligned
 13935 0d24 6961     		str	r1, [r5, #20]	@ unaligned
 13936 0d26 2388     		ldrh	r3, [r4]	@ unaligned
 13937 0d28 A278     		ldrb	r2, [r4, #2]
 13938 0d2a 2B83     		strh	r3, [r5, #24]	@ unaligned
 13939 0d2c 1346     		mov	r3, r2
 13940 0d2e AB76     		strb	r3, [r5, #26]
2013:..\src/command_processing.c ****                     break;
 13941              		.loc 1 2013 0
 13942 0d30 39E0     		b	.L573
 13943              	.L581:
2014:..\src/command_processing.c ****                 case INPUT_MODE_JOYSTICK:
2015:..\src/command_processing.c ****                     strcat(info_string, "Input mode: Joystick\r\n");
 13944              		.loc 1 2015 0
 13945 0d32 7869     		ldr	r0, [r7, #20]
 13946 0d34 FFF7FEFF 		bl	strlen
 13947 0d38 0346     		mov	r3, r0
 13948 0d3a 1A46     		mov	r2, r3
 13949 0d3c 7B69     		ldr	r3, [r7, #20]
 13950 0d3e 1344     		add	r3, r3, r2
 13951 0d40 B94A     		ldr	r2, .L640+8
 13952 0d42 1C46     		mov	r4, r3
 13953 0d44 1546     		mov	r5, r2
 13954 0d46 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 13955 0d48 2060     		str	r0, [r4]	@ unaligned
 13956 0d4a 6160     		str	r1, [r4, #4]	@ unaligned
 13957 0d4c A260     		str	r2, [r4, #8]	@ unaligned
 13958 0d4e E360     		str	r3, [r4, #12]	@ unaligned
 13959 0d50 2868     		ldr	r0, [r5]	@ unaligned
 13960 0d52 2061     		str	r0, [r4, #16]	@ unaligned
 13961 0d54 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 13962 0d56 AA79     		ldrb	r2, [r5, #6]
 13963 0d58 A382     		strh	r3, [r4, #20]	@ unaligned
 13964 0d5a 1346     		mov	r3, r2
 13965 0d5c A375     		strb	r3, [r4, #22]
2016:..\src/command_processing.c ****                     break;
 13966              		.loc 1 2016 0
 13967 0d5e 22E0     		b	.L573
 13968              	.L582:
2017:..\src/command_processing.c ****                 case INPUT_MODE_EMG_PROPORTIONAL_NC:
2018:..\src/command_processing.c ****                     strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 13969              		.loc 1 2018 0
 13970 0d60 7869     		ldr	r0, [r7, #20]
 13971 0d62 FFF7FEFF 		bl	strlen
 13972 0d66 0346     		mov	r3, r0
 13973 0d68 1A46     		mov	r2, r3
 13974 0d6a 7B69     		ldr	r3, [r7, #20]
 13975 0d6c 1344     		add	r3, r3, r2
 13976 0d6e AF4A     		ldr	r2, .L640+12
 13977 0d70 1546     		mov	r5, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 319


 13978 0d72 9E46     		mov	lr, r3
 13979 0d74 05F1200C 		add	ip, r5, #32
 13980              	.L583:
 13981 0d78 7446     		mov	r4, lr
 13982 0d7a 2E46     		mov	r6, r5
 13983 0d7c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 13984 0d7e 2060     		str	r0, [r4]	@ unaligned
 13985 0d80 6160     		str	r1, [r4, #4]	@ unaligned
 13986 0d82 A260     		str	r2, [r4, #8]	@ unaligned
 13987 0d84 E360     		str	r3, [r4, #12]	@ unaligned
 13988 0d86 1035     		adds	r5, r5, #16
 13989 0d88 0EF1100E 		add	lr, lr, #16
 13990 0d8c 6545     		cmp	r5, ip
 13991 0d8e F3D1     		bne	.L583
 13992 0d90 7446     		mov	r4, lr
 13993 0d92 2B46     		mov	r3, r5
 13994 0d94 07CB     		ldmia	r3!, {r0, r1, r2}
 13995 0d96 2060     		str	r0, [r4]	@ unaligned
 13996 0d98 6160     		str	r1, [r4, #4]	@ unaligned
 13997 0d9a A260     		str	r2, [r4, #8]	@ unaligned
 13998 0d9c 1A88     		ldrh	r2, [r3]	@ unaligned
 13999 0d9e 9B78     		ldrb	r3, [r3, #2]
 14000 0da0 A281     		strh	r2, [r4, #12]	@ unaligned
 14001 0da2 A373     		strb	r3, [r4, #14]
2019:..\src/command_processing.c ****                     break;
 14002              		.loc 1 2019 0
 14003 0da4 00BF     		nop
 14004              	.L573:
2020:..\src/command_processing.c ****             }
2021:..\src/command_processing.c **** 
2022:..\src/command_processing.c ****             switch(MOT->control_mode) {
 14005              		.loc 1 2022 0
 14006 0da6 D7F88430 		ldr	r3, [r7, #132]
 14007 0daa 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 14008 0dae 032B     		cmp	r3, #3
 14009 0db0 63D8     		bhi	.L631
 14010 0db2 01A2     		adr	r2, .L586
 14011 0db4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 14012              		.p2align 2
 14013              	.L586:
 14014 0db8 C90D0000 		.word	.L585+1
 14015 0dbc F30D0000 		.word	.L587+1
 14016 0dc0 170E0000 		.word	.L588+1
 14017 0dc4 3D0E0000 		.word	.L589+1
 14018              		.p2align 1
 14019              	.L585:
2023:..\src/command_processing.c ****                 case CONTROL_ANGLE:
2024:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position\r\n");
 14020              		.loc 1 2024 0
 14021 0dc8 7869     		ldr	r0, [r7, #20]
 14022 0dca FFF7FEFF 		bl	strlen
 14023 0dce 0346     		mov	r3, r0
 14024 0dd0 1A46     		mov	r2, r3
 14025 0dd2 7B69     		ldr	r3, [r7, #20]
 14026 0dd4 1344     		add	r3, r3, r2
 14027 0dd6 964A     		ldr	r2, .L640+16
 14028 0dd8 1D46     		mov	r5, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 320


 14029 0dda 1446     		mov	r4, r2
 14030 0ddc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14031 0dde 2860     		str	r0, [r5]	@ unaligned
 14032 0de0 6960     		str	r1, [r5, #4]	@ unaligned
 14033 0de2 AA60     		str	r2, [r5, #8]	@ unaligned
 14034 0de4 EB60     		str	r3, [r5, #12]	@ unaligned
 14035 0de6 03CC     		ldmia	r4!, {r0, r1}
 14036 0de8 2861     		str	r0, [r5, #16]	@ unaligned
 14037 0dea 6961     		str	r1, [r5, #20]	@ unaligned
 14038 0dec 2378     		ldrb	r3, [r4]
 14039 0dee 2B76     		strb	r3, [r5, #24]
2025:..\src/command_processing.c ****                     break;
 14040              		.loc 1 2025 0
 14041 0df0 44E0     		b	.L590
 14042              	.L587:
2026:..\src/command_processing.c ****                 case CONTROL_PWM:
2027:..\src/command_processing.c ****                     strcat(info_string, "Control mode: PWM\r\n");
 14043              		.loc 1 2027 0
 14044 0df2 7869     		ldr	r0, [r7, #20]
 14045 0df4 FFF7FEFF 		bl	strlen
 14046 0df8 0346     		mov	r3, r0
 14047 0dfa 1A46     		mov	r2, r3
 14048 0dfc 7B69     		ldr	r3, [r7, #20]
 14049 0dfe 1344     		add	r3, r3, r2
 14050 0e00 8C4A     		ldr	r2, .L640+20
 14051 0e02 1D46     		mov	r5, r3
 14052 0e04 1446     		mov	r4, r2
 14053 0e06 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14054 0e08 2860     		str	r0, [r5]	@ unaligned
 14055 0e0a 6960     		str	r1, [r5, #4]	@ unaligned
 14056 0e0c AA60     		str	r2, [r5, #8]	@ unaligned
 14057 0e0e EB60     		str	r3, [r5, #12]	@ unaligned
 14058 0e10 2068     		ldr	r0, [r4]	@ unaligned
 14059 0e12 2861     		str	r0, [r5, #16]	@ unaligned
2028:..\src/command_processing.c ****                     break;
 14060              		.loc 1 2028 0
 14061 0e14 32E0     		b	.L590
 14062              	.L588:
2029:..\src/command_processing.c ****                 case CONTROL_CURRENT:
2030:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Current\r\n");
 14063              		.loc 1 2030 0
 14064 0e16 7869     		ldr	r0, [r7, #20]
 14065 0e18 FFF7FEFF 		bl	strlen
 14066 0e1c 0346     		mov	r3, r0
 14067 0e1e 1A46     		mov	r2, r3
 14068 0e20 7B69     		ldr	r3, [r7, #20]
 14069 0e22 1344     		add	r3, r3, r2
 14070 0e24 844A     		ldr	r2, .L640+24
 14071 0e26 1D46     		mov	r5, r3
 14072 0e28 1446     		mov	r4, r2
 14073 0e2a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14074 0e2c 2860     		str	r0, [r5]	@ unaligned
 14075 0e2e 6960     		str	r1, [r5, #4]	@ unaligned
 14076 0e30 AA60     		str	r2, [r5, #8]	@ unaligned
 14077 0e32 EB60     		str	r3, [r5, #12]	@ unaligned
 14078 0e34 03CC     		ldmia	r4!, {r0, r1}
 14079 0e36 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 321


 14080 0e38 6961     		str	r1, [r5, #20]	@ unaligned
2031:..\src/command_processing.c ****                     break;
 14081              		.loc 1 2031 0
 14082 0e3a 1FE0     		b	.L590
 14083              	.L589:
2032:..\src/command_processing.c ****                 case CURR_AND_POS_CONTROL:
2033:..\src/command_processing.c ****                     strcat(info_string, "Control mode: Position and Current\r\n");
 14084              		.loc 1 2033 0
 14085 0e3c 7869     		ldr	r0, [r7, #20]
 14086 0e3e FFF7FEFF 		bl	strlen
 14087 0e42 0346     		mov	r3, r0
 14088 0e44 1A46     		mov	r2, r3
 14089 0e46 7B69     		ldr	r3, [r7, #20]
 14090 0e48 1344     		add	r3, r3, r2
 14091 0e4a 7C4A     		ldr	r2, .L640+28
 14092 0e4c 1446     		mov	r4, r2
 14093 0e4e 9E46     		mov	lr, r3
 14094 0e50 04F1200C 		add	ip, r4, #32
 14095              	.L591:
 14096 0e54 7546     		mov	r5, lr
 14097 0e56 2646     		mov	r6, r4
 14098 0e58 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14099 0e5a 2860     		str	r0, [r5]	@ unaligned
 14100 0e5c 6960     		str	r1, [r5, #4]	@ unaligned
 14101 0e5e AA60     		str	r2, [r5, #8]	@ unaligned
 14102 0e60 EB60     		str	r3, [r5, #12]	@ unaligned
 14103 0e62 1034     		adds	r4, r4, #16
 14104 0e64 0EF1100E 		add	lr, lr, #16
 14105 0e68 6445     		cmp	r4, ip
 14106 0e6a F3D1     		bne	.L591
 14107 0e6c 7346     		mov	r3, lr
 14108 0e6e 2246     		mov	r2, r4
 14109 0e70 1068     		ldr	r0, [r2]	@ unaligned
 14110 0e72 1860     		str	r0, [r3]	@ unaligned
 14111 0e74 1279     		ldrb	r2, [r2, #4]
 14112 0e76 1A71     		strb	r2, [r3, #4]
2034:..\src/command_processing.c ****                     break;
 14113              		.loc 1 2034 0
 14114 0e78 00E0     		b	.L590
 14115              	.L631:
2035:..\src/command_processing.c ****                 default:
2036:..\src/command_processing.c ****                     break;
 14116              		.loc 1 2036 0
 14117 0e7a 00BF     		nop
 14118              	.L590:
2037:..\src/command_processing.c ****             }
2038:..\src/command_processing.c **** 
2039:..\src/command_processing.c ****             if (MEM_P->enc[ENC_L].double_encoder_on_off)
 14119              		.loc 1 2039 0
 14120 0e7c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14121 0e80 D7F88C10 		ldr	r1, [r7, #140]
 14122 0e84 1346     		mov	r3, r2
 14123 0e86 5B00     		lsls	r3, r3, #1
 14124 0e88 1344     		add	r3, r3, r2
 14125 0e8a 1B01     		lsls	r3, r3, #4
 14126 0e8c 0B44     		add	r3, r3, r1
 14127 0e8e 03F5D873 		add	r3, r3, #432
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 322


 14128 0e92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14129 0e94 002B     		cmp	r3, #0
 14130 0e96 1CD0     		beq	.L592
2040:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: YES\r\n");
 14131              		.loc 1 2040 0
 14132 0e98 7869     		ldr	r0, [r7, #20]
 14133 0e9a FFF7FEFF 		bl	strlen
 14134 0e9e 0346     		mov	r3, r0
 14135 0ea0 1A46     		mov	r2, r3
 14136 0ea2 7B69     		ldr	r3, [r7, #20]
 14137 0ea4 1344     		add	r3, r3, r2
 14138 0ea6 664A     		ldr	r2, .L640+32
 14139 0ea8 1446     		mov	r4, r2
 14140 0eaa 9E46     		mov	lr, r3
 14141 0eac 04F1200C 		add	ip, r4, #32
 14142              	.L593:
 14143 0eb0 7546     		mov	r5, lr
 14144 0eb2 2646     		mov	r6, r4
 14145 0eb4 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 14146 0eb6 2860     		str	r0, [r5]	@ unaligned
 14147 0eb8 6960     		str	r1, [r5, #4]	@ unaligned
 14148 0eba AA60     		str	r2, [r5, #8]	@ unaligned
 14149 0ebc EB60     		str	r3, [r5, #12]	@ unaligned
 14150 0ebe 1034     		adds	r4, r4, #16
 14151 0ec0 0EF1100E 		add	lr, lr, #16
 14152 0ec4 6445     		cmp	r4, ip
 14153 0ec6 F3D1     		bne	.L593
 14154 0ec8 7346     		mov	r3, lr
 14155 0eca 2246     		mov	r2, r4
 14156 0ecc 1278     		ldrb	r2, [r2]
 14157 0ece 1A70     		strb	r2, [r3]
 14158 0ed0 13E0     		b	.L594
 14159              	.L592:
2041:..\src/command_processing.c ****             else
2042:..\src/command_processing.c ****                 strcat(info_string, "Absolute encoder position: NO\r\n");
 14160              		.loc 1 2042 0
 14161 0ed2 7869     		ldr	r0, [r7, #20]
 14162 0ed4 FFF7FEFF 		bl	strlen
 14163 0ed8 0346     		mov	r3, r0
 14164 0eda 1A46     		mov	r2, r3
 14165 0edc 7B69     		ldr	r3, [r7, #20]
 14166 0ede 1344     		add	r3, r3, r2
 14167 0ee0 584A     		ldr	r2, .L640+36
 14168 0ee2 1C46     		mov	r4, r3
 14169 0ee4 1546     		mov	r5, r2
 14170 0ee6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14171 0ee8 2060     		str	r0, [r4]	@ unaligned
 14172 0eea 6160     		str	r1, [r4, #4]	@ unaligned
 14173 0eec A260     		str	r2, [r4, #8]	@ unaligned
 14174 0eee E360     		str	r3, [r4, #12]	@ unaligned
 14175 0ef0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14176 0ef2 2061     		str	r0, [r4, #16]	@ unaligned
 14177 0ef4 6161     		str	r1, [r4, #20]	@ unaligned
 14178 0ef6 A261     		str	r2, [r4, #24]	@ unaligned
 14179 0ef8 E361     		str	r3, [r4, #28]	@ unaligned
 14180              	.L594:
2043:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 323


2044:..\src/command_processing.c ****             sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)MEM_P->enc[ENC_L].motor_handle_ratio);
 14181              		.loc 1 2044 0
 14182 0efa 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14183 0efe D7F88C10 		ldr	r1, [r7, #140]
 14184 0f02 1346     		mov	r3, r2
 14185 0f04 5B00     		lsls	r3, r3, #1
 14186 0f06 1344     		add	r3, r3, r2
 14187 0f08 1B01     		lsls	r3, r3, #4
 14188 0f0a 0B44     		add	r3, r3, r1
 14189 0f0c 03F5DA73 		add	r3, r3, #436
 14190 0f10 93F90030 		ldrsb	r3, [r3]
 14191 0f14 1A46     		mov	r2, r3
 14192 0f16 07F11C03 		add	r3, r7, #28
 14193 0f1a 4B49     		ldr	r1, .L640+40
 14194 0f1c 1846     		mov	r0, r3
 14195 0f1e FFF7FEFF 		bl	sprintf
2045:..\src/command_processing.c ****             strcat(info_string, str);
 14196              		.loc 1 2045 0
 14197 0f22 07F11C03 		add	r3, r7, #28
 14198 0f26 1946     		mov	r1, r3
 14199 0f28 7869     		ldr	r0, [r7, #20]
 14200 0f2a FFF7FEFF 		bl	strcat
2046:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2047:..\src/command_processing.c ****             strcat(info_string, "Encoder indices used for motor control: ");
2048:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
2049:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].Enc_idx_use_for_control[i]);
2050:..\src/command_processing.c ****                 strcat(info_string, str);
2051:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
2052:..\src/command_processing.c ****                     strcat(info_string, ", ");
2053:..\src/command_processing.c ****                 }                
2054:..\src/command_processing.c ****             }
2055:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2056:..\src/command_processing.c ****             sprintf(str, "First Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[0]);
2057:..\src/command_processing.c ****             strcat(info_string, str);
2058:..\src/command_processing.c ****             sprintf(str, "Second Gear: %d teeth\r\n", (int)MEM_P->enc[ENC_L].gears_params[1]);
2059:..\src/command_processing.c ****             strcat(info_string, str);
2060:..\src/command_processing.c ****             sprintf(str, "Gear invariant: %d\r\n", (int)MEM_P->enc[ENC_L].gears_params[2]);
2061:..\src/command_processing.c ****             strcat(info_string, str);
2062:..\src/command_processing.c **** #endif            
2063:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14201              		.loc 1 2063 0
 14202 0f2e 7869     		ldr	r0, [r7, #20]
 14203 0f30 FFF7FEFF 		bl	strlen
 14204 0f34 0346     		mov	r3, r0
 14205 0f36 1A46     		mov	r2, r3
 14206 0f38 7B69     		ldr	r3, [r7, #20]
 14207 0f3a 1344     		add	r3, r3, r2
 14208 0f3c 434A     		ldr	r2, .L640+44
 14209 0f3e 1188     		ldrh	r1, [r2]	@ unaligned
 14210 0f40 9278     		ldrb	r2, [r2, #2]
 14211 0f42 1980     		strh	r1, [r3]	@ unaligned
 14212 0f44 9A70     		strb	r2, [r3, #2]
2064:..\src/command_processing.c **** 
2065:..\src/command_processing.c ****             strcat(info_string, "Sensor resolution: ");
 14213              		.loc 1 2065 0
 14214 0f46 7869     		ldr	r0, [r7, #20]
 14215 0f48 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 324


 14216 0f4c 0346     		mov	r3, r0
 14217 0f4e 1A46     		mov	r2, r3
 14218 0f50 7B69     		ldr	r3, [r7, #20]
 14219 0f52 1344     		add	r3, r3, r2
 14220 0f54 3E4A     		ldr	r2, .L640+48
 14221 0f56 1D46     		mov	r5, r3
 14222 0f58 1446     		mov	r4, r2
 14223 0f5a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14224 0f5c 2860     		str	r0, [r5]	@ unaligned
 14225 0f5e 6960     		str	r1, [r5, #4]	@ unaligned
 14226 0f60 AA60     		str	r2, [r5, #8]	@ unaligned
 14227 0f62 EB60     		str	r3, [r5, #12]	@ unaligned
 14228 0f64 2068     		ldr	r0, [r4]	@ unaligned
 14229 0f66 2861     		str	r0, [r5, #16]	@ unaligned
2066:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14230              		.loc 1 2066 0
 14231 0f68 0023     		movs	r3, #0
 14232 0f6a C7F89430 		str	r3, [r7, #148]
 14233 0f6e 30E0     		b	.L595
 14234              	.L597:
2067:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14235              		.loc 1 2067 0
 14236 0f70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14237 0f74 D7F88C10 		ldr	r1, [r7, #140]
 14238 0f78 1346     		mov	r3, r2
 14239 0f7a 5B00     		lsls	r3, r3, #1
 14240 0f7c 1344     		add	r3, r3, r2
 14241 0f7e 1B01     		lsls	r3, r3, #4
 14242 0f80 CA18     		adds	r2, r1, r3
 14243 0f82 D7F89430 		ldr	r3, [r7, #148]
 14244 0f86 1344     		add	r3, r3, r2
 14245 0f88 03F29513 		addw	r3, r3, #405
 14246 0f8c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14247 0f8e 1A46     		mov	r2, r3
 14248 0f90 07F11C03 		add	r3, r7, #28
 14249 0f94 2F49     		ldr	r1, .L640+52
 14250 0f96 1846     		mov	r0, r3
 14251 0f98 FFF7FEFF 		bl	sprintf
2068:..\src/command_processing.c ****                 strcat(info_string, str);
 14252              		.loc 1 2068 0
 14253 0f9c 07F11C03 		add	r3, r7, #28
 14254 0fa0 1946     		mov	r1, r3
 14255 0fa2 7869     		ldr	r0, [r7, #20]
 14256 0fa4 FFF7FEFF 		bl	strcat
2069:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14257              		.loc 1 2069 0
 14258 0fa8 D7F89430 		ldr	r3, [r7, #148]
 14259 0fac 022B     		cmp	r3, #2
 14260 0fae 0BD0     		beq	.L596
2070:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14261              		.loc 1 2070 0
 14262 0fb0 7869     		ldr	r0, [r7, #20]
 14263 0fb2 FFF7FEFF 		bl	strlen
 14264 0fb6 0346     		mov	r3, r0
 14265 0fb8 1A46     		mov	r2, r3
 14266 0fba 7B69     		ldr	r3, [r7, #20]
 14267 0fbc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 325


 14268 0fbe 264A     		ldr	r2, .L640+56
 14269 0fc0 1188     		ldrh	r1, [r2]	@ unaligned
 14270 0fc2 9278     		ldrb	r2, [r2, #2]
 14271 0fc4 1980     		strh	r1, [r3]	@ unaligned
 14272 0fc6 9A70     		strb	r2, [r3, #2]
 14273              	.L596:
2066:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14274              		.loc 1 2066 0 discriminator 2
 14275 0fc8 D7F89430 		ldr	r3, [r7, #148]
 14276 0fcc 0133     		adds	r3, r3, #1
 14277 0fce C7F89430 		str	r3, [r7, #148]
 14278              	.L595:
2066:..\src/command_processing.c ****                 sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 14279              		.loc 1 2066 0 is_stmt 0 discriminator 1
 14280 0fd2 D7F89430 		ldr	r3, [r7, #148]
 14281 0fd6 022B     		cmp	r3, #2
 14282 0fd8 CADD     		ble	.L597
2071:..\src/command_processing.c ****                 }                
2072:..\src/command_processing.c ****             }
2073:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14283              		.loc 1 2073 0 is_stmt 1
 14284 0fda 7869     		ldr	r0, [r7, #20]
 14285 0fdc FFF7FEFF 		bl	strlen
 14286 0fe0 0346     		mov	r3, r0
 14287 0fe2 1A46     		mov	r2, r3
 14288 0fe4 7B69     		ldr	r3, [r7, #20]
 14289 0fe6 1344     		add	r3, r3, r2
 14290 0fe8 184A     		ldr	r2, .L640+44
 14291 0fea 1188     		ldrh	r1, [r2]	@ unaligned
 14292 0fec 9278     		ldrb	r2, [r2, #2]
 14293 0fee 1980     		strh	r1, [r3]	@ unaligned
 14294 0ff0 9A70     		strb	r2, [r3, #2]
2074:..\src/command_processing.c **** 
2075:..\src/command_processing.c ****             strcat(info_string, "Measurement Offset: ");
 14295              		.loc 1 2075 0
 14296 0ff2 7869     		ldr	r0, [r7, #20]
 14297 0ff4 FFF7FEFF 		bl	strlen
 14298 0ff8 0346     		mov	r3, r0
 14299 0ffa 1A46     		mov	r2, r3
 14300 0ffc 7B69     		ldr	r3, [r7, #20]
 14301 0ffe 1344     		add	r3, r3, r2
 14302 1000 164A     		ldr	r2, .L640+60
 14303 1002 1D46     		mov	r5, r3
 14304 1004 1446     		mov	r4, r2
 14305 1006 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14306 1008 2860     		str	r0, [r5]	@ unaligned
 14307 100a 6960     		str	r1, [r5, #4]	@ unaligned
 14308 100c AA60     		str	r2, [r5, #8]	@ unaligned
 14309 100e EB60     		str	r3, [r5, #12]	@ unaligned
 14310 1010 2068     		ldr	r0, [r4]	@ unaligned
 14311 1012 2861     		str	r0, [r5, #16]	@ unaligned
 14312 1014 2379     		ldrb	r3, [r4, #4]
 14313 1016 2B75     		strb	r3, [r5, #20]
2076:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14314              		.loc 1 2076 0
 14315 1018 0023     		movs	r3, #0
 14316 101a C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 326


 14317 101e 5FE0     		b	.L598
 14318              	.L641:
 14319              		.align	2
 14320              	.L640:
 14321 1020 D4130000 		.word	.LC191
 14322 1024 EC130000 		.word	.LC192
 14323 1028 08140000 		.word	.LC193
 14324 102c 20140000 		.word	.LC194
 14325 1030 50140000 		.word	.LC195
 14326 1034 6C140000 		.word	.LC196
 14327 1038 80140000 		.word	.LC197
 14328 103c 98140000 		.word	.LC198
 14329 1040 C0140000 		.word	.LC199
 14330 1044 E4140000 		.word	.LC200
 14331 1048 04150000 		.word	.LC201
 14332 104c 18100000 		.word	.LC143
 14333 1050 20150000 		.word	.LC202
 14334 1054 34120000 		.word	.LC173
 14335 1058 38120000 		.word	.LC174
 14336 105c 34150000 		.word	.LC203
 14337              	.L600:
2077:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14338              		.loc 1 2077 0
 14339 1060 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14340 1064 D7F88C10 		ldr	r1, [r7, #140]
 14341 1068 1346     		mov	r3, r2
 14342 106a 5B00     		lsls	r3, r3, #1
 14343 106c 1344     		add	r3, r3, r2
 14344 106e 9B00     		lsls	r3, r3, #2
 14345 1070 D7F89420 		ldr	r2, [r7, #148]
 14346 1074 1344     		add	r3, r3, r2
 14347 1076 6633     		adds	r3, r3, #102
 14348 1078 51F82310 		ldr	r1, [r1, r3, lsl #2]
 14349 107c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14350 1080 D7F88C00 		ldr	r0, [r7, #140]
 14351 1084 1346     		mov	r3, r2
 14352 1086 5B00     		lsls	r3, r3, #1
 14353 1088 1344     		add	r3, r3, r2
 14354 108a 1B01     		lsls	r3, r3, #4
 14355 108c C218     		adds	r2, r0, r3
 14356 108e D7F89430 		ldr	r3, [r7, #148]
 14357 1092 1344     		add	r3, r3, r2
 14358 1094 03F29513 		addw	r3, r3, #405
 14359 1098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14360 109a 41FA03F2 		asr	r2, r1, r3
 14361 109e 07F11C03 		add	r3, r7, #28
 14362 10a2 2349     		ldr	r1, .L642
 14363 10a4 1846     		mov	r0, r3
 14364 10a6 FFF7FEFF 		bl	sprintf
2078:..\src/command_processing.c ****                 strcat(info_string, str);
 14365              		.loc 1 2078 0
 14366 10aa 07F11C03 		add	r3, r7, #28
 14367 10ae 1946     		mov	r1, r3
 14368 10b0 7869     		ldr	r0, [r7, #20]
 14369 10b2 FFF7FEFF 		bl	strcat
2079:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14370              		.loc 1 2079 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 327


 14371 10b6 D7F89430 		ldr	r3, [r7, #148]
 14372 10ba 022B     		cmp	r3, #2
 14373 10bc 0BD0     		beq	.L599
2080:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14374              		.loc 1 2080 0
 14375 10be 7869     		ldr	r0, [r7, #20]
 14376 10c0 FFF7FEFF 		bl	strlen
 14377 10c4 0346     		mov	r3, r0
 14378 10c6 1A46     		mov	r2, r3
 14379 10c8 7B69     		ldr	r3, [r7, #20]
 14380 10ca 1344     		add	r3, r3, r2
 14381 10cc 194A     		ldr	r2, .L642+4
 14382 10ce 1188     		ldrh	r1, [r2]	@ unaligned
 14383 10d0 9278     		ldrb	r2, [r2, #2]
 14384 10d2 1980     		strh	r1, [r3]	@ unaligned
 14385 10d4 9A70     		strb	r2, [r3, #2]
 14386              	.L599:
2076:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14387              		.loc 1 2076 0 discriminator 2
 14388 10d6 D7F89430 		ldr	r3, [r7, #148]
 14389 10da 0133     		adds	r3, r3, #1
 14390 10dc C7F89430 		str	r3, [r7, #148]
 14391              	.L598:
2076:..\src/command_processing.c ****                 sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i])
 14392              		.loc 1 2076 0 is_stmt 0 discriminator 1
 14393 10e0 D7F89430 		ldr	r3, [r7, #148]
 14394 10e4 022B     		cmp	r3, #2
 14395 10e6 BBDD     		ble	.L600
2081:..\src/command_processing.c ****                 }
2082:..\src/command_processing.c ****             }
2083:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14396              		.loc 1 2083 0 is_stmt 1
 14397 10e8 7869     		ldr	r0, [r7, #20]
 14398 10ea FFF7FEFF 		bl	strlen
 14399 10ee 0346     		mov	r3, r0
 14400 10f0 1A46     		mov	r2, r3
 14401 10f2 7B69     		ldr	r3, [r7, #20]
 14402 10f4 1344     		add	r3, r3, r2
 14403 10f6 104A     		ldr	r2, .L642+8
 14404 10f8 1188     		ldrh	r1, [r2]	@ unaligned
 14405 10fa 9278     		ldrb	r2, [r2, #2]
 14406 10fc 1980     		strh	r1, [r3]	@ unaligned
 14407 10fe 9A70     		strb	r2, [r3, #2]
2084:..\src/command_processing.c ****                 
2085:..\src/command_processing.c ****             strcat(info_string, "Measurement Multiplier: ");
 14408              		.loc 1 2085 0
 14409 1100 7869     		ldr	r0, [r7, #20]
 14410 1102 FFF7FEFF 		bl	strlen
 14411 1106 0346     		mov	r3, r0
 14412 1108 1A46     		mov	r2, r3
 14413 110a 7B69     		ldr	r3, [r7, #20]
 14414 110c 1344     		add	r3, r3, r2
 14415 110e 0B4A     		ldr	r2, .L642+12
 14416 1110 1D46     		mov	r5, r3
 14417 1112 1446     		mov	r4, r2
 14418 1114 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14419 1116 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 328


 14420 1118 6960     		str	r1, [r5, #4]	@ unaligned
 14421 111a AA60     		str	r2, [r5, #8]	@ unaligned
 14422 111c EB60     		str	r3, [r5, #12]	@ unaligned
 14423 111e 03CC     		ldmia	r4!, {r0, r1}
 14424 1120 2861     		str	r0, [r5, #16]	@ unaligned
 14425 1122 6961     		str	r1, [r5, #20]	@ unaligned
 14426 1124 2378     		ldrb	r3, [r4]
 14427 1126 2B76     		strb	r3, [r5, #24]
2086:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_SENSORS; ++i) {
 14428              		.loc 1 2086 0
 14429 1128 0023     		movs	r3, #0
 14430 112a C7F89430 		str	r3, [r7, #148]
 14431 112e 3DE0     		b	.L601
 14432              	.L643:
 14433              		.align	2
 14434              	.L642:
 14435 1130 4C150000 		.word	.LC204
 14436 1134 38120000 		.word	.LC174
 14437 1138 18100000 		.word	.LC143
 14438 113c 50150000 		.word	.LC205
 14439              	.L603:
2087:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14440              		.loc 1 2087 0
 14441 1140 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14442 1144 D7F88C10 		ldr	r1, [r7, #140]
 14443 1148 1346     		mov	r3, r2
 14444 114a 5B00     		lsls	r3, r3, #1
 14445 114c 1344     		add	r3, r3, r2
 14446 114e 9B00     		lsls	r3, r3, #2
 14447 1150 D7F89420 		ldr	r2, [r7, #148]
 14448 1154 1344     		add	r3, r3, r2
 14449 1156 6833     		adds	r3, r3, #104
 14450 1158 9B00     		lsls	r3, r3, #2
 14451 115a 0B44     		add	r3, r3, r1
 14452 115c 5B68     		ldr	r3, [r3, #4]	@ float
 14453 115e 1846     		mov	r0, r3
 14454 1160 FFF7FEFF 		bl	__aeabi_f2d
 14455 1164 0346     		mov	r3, r0
 14456 1166 0C46     		mov	r4, r1
 14457 1168 07F11C00 		add	r0, r7, #28
 14458 116c 1A46     		mov	r2, r3
 14459 116e 2346     		mov	r3, r4
 14460 1170 BF49     		ldr	r1, .L644
 14461 1172 FFF7FEFF 		bl	sprintf
2088:..\src/command_processing.c ****                 strcat(info_string, str);
 14462              		.loc 1 2088 0
 14463 1176 07F11C03 		add	r3, r7, #28
 14464 117a 1946     		mov	r1, r3
 14465 117c 7869     		ldr	r0, [r7, #20]
 14466 117e FFF7FEFF 		bl	strcat
2089:..\src/command_processing.c ****                 if (i != NUM_OF_SENSORS-1){
 14467              		.loc 1 2089 0
 14468 1182 D7F89430 		ldr	r3, [r7, #148]
 14469 1186 022B     		cmp	r3, #2
 14470 1188 0BD0     		beq	.L602
2090:..\src/command_processing.c ****                     strcat(info_string, ", ");
 14471              		.loc 1 2090 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 329


 14472 118a 7869     		ldr	r0, [r7, #20]
 14473 118c FFF7FEFF 		bl	strlen
 14474 1190 0346     		mov	r3, r0
 14475 1192 1A46     		mov	r2, r3
 14476 1194 7B69     		ldr	r3, [r7, #20]
 14477 1196 1344     		add	r3, r3, r2
 14478 1198 B64A     		ldr	r2, .L644+4
 14479 119a 1188     		ldrh	r1, [r2]	@ unaligned
 14480 119c 9278     		ldrb	r2, [r2, #2]
 14481 119e 1980     		strh	r1, [r3]	@ unaligned
 14482 11a0 9A70     		strb	r2, [r3, #2]
 14483              	.L602:
2086:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14484              		.loc 1 2086 0 discriminator 2
 14485 11a2 D7F89430 		ldr	r3, [r7, #148]
 14486 11a6 0133     		adds	r3, r3, #1
 14487 11a8 C7F89430 		str	r3, [r7, #148]
 14488              	.L601:
2086:..\src/command_processing.c ****                 sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 14489              		.loc 1 2086 0 is_stmt 0 discriminator 1
 14490 11ac D7F89430 		ldr	r3, [r7, #148]
 14491 11b0 022B     		cmp	r3, #2
 14492 11b2 C5DD     		ble	.L603
2091:..\src/command_processing.c ****                 }
2092:..\src/command_processing.c ****             }
2093:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14493              		.loc 1 2093 0 is_stmt 1 discriminator 2
 14494 11b4 7869     		ldr	r0, [r7, #20]
 14495 11b6 FFF7FEFF 		bl	strlen
 14496 11ba 0346     		mov	r3, r0
 14497 11bc 1A46     		mov	r2, r3
 14498 11be 7B69     		ldr	r3, [r7, #20]
 14499 11c0 1344     		add	r3, r3, r2
 14500 11c2 AD4A     		ldr	r2, .L644+8
 14501 11c4 1188     		ldrh	r1, [r2]	@ unaligned
 14502 11c6 9278     		ldrb	r2, [r2, #2]
 14503 11c8 1980     		strh	r1, [r3]	@ unaligned
 14504 11ca 9A70     		strb	r2, [r3, #2]
2094:..\src/command_processing.c ****             
2095:..\src/command_processing.c ****     		sprintf(str, "Current lookup table: %f, %f, %f, %f, %f, %f\r\n", 
2096:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14505              		.loc 1 2096 0 discriminator 2
 14506 11cc D7F88430 		ldr	r3, [r7, #132]
 14507 11d0 5B6C     		ldr	r3, [r3, #68]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14508              		.loc 1 2095 0 discriminator 2
 14509 11d2 1846     		mov	r0, r3
 14510 11d4 FFF7FEFF 		bl	__aeabi_f2d
 14511 11d8 C7E90201 		strd	r0, [r7, #8]
 14512              		.loc 1 2096 0 discriminator 2
 14513 11dc D7F88430 		ldr	r3, [r7, #132]
 14514 11e0 9B6C     		ldr	r3, [r3, #72]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14515              		.loc 1 2095 0 discriminator 2
 14516 11e2 1846     		mov	r0, r3
 14517 11e4 FFF7FEFF 		bl	__aeabi_f2d
 14518 11e8 0446     		mov	r4, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 330


 14519 11ea 0D46     		mov	r5, r1
 14520              		.loc 1 2096 0 discriminator 2
 14521 11ec D7F88430 		ldr	r3, [r7, #132]
 14522 11f0 DB6C     		ldr	r3, [r3, #76]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14523              		.loc 1 2095 0 discriminator 2
 14524 11f2 1846     		mov	r0, r3
 14525 11f4 FFF7FEFF 		bl	__aeabi_f2d
 14526 11f8 8046     		mov	r8, r0
 14527 11fa 8946     		mov	r9, r1
2097:..\src/command_processing.c ****                 MOT->curr_lookup[3], MOT->curr_lookup[4], MOT->curr_lookup[5]);
 14528              		.loc 1 2097 0 discriminator 2
 14529 11fc D7F88430 		ldr	r3, [r7, #132]
 14530 1200 1B6D     		ldr	r3, [r3, #80]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14531              		.loc 1 2095 0 discriminator 2
 14532 1202 1846     		mov	r0, r3
 14533 1204 FFF7FEFF 		bl	__aeabi_f2d
 14534 1208 8246     		mov	r10, r0
 14535 120a 8B46     		mov	fp, r1
 14536              		.loc 1 2097 0 discriminator 2
 14537 120c D7F88430 		ldr	r3, [r7, #132]
 14538 1210 5B6D     		ldr	r3, [r3, #84]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14539              		.loc 1 2095 0 discriminator 2
 14540 1212 1846     		mov	r0, r3
 14541 1214 FFF7FEFF 		bl	__aeabi_f2d
 14542 1218 C7E90001 		strd	r0, [r7]
 14543              		.loc 1 2097 0 discriminator 2
 14544 121c D7F88430 		ldr	r3, [r7, #132]
 14545 1220 9B6D     		ldr	r3, [r3, #88]	@ float
2095:..\src/command_processing.c ****                 MOT->curr_lookup[0], MOT->curr_lookup[1], MOT->curr_lookup[2], 
 14546              		.loc 1 2095 0 discriminator 2
 14547 1222 1846     		mov	r0, r3
 14548 1224 FFF7FEFF 		bl	__aeabi_f2d
 14549 1228 0246     		mov	r2, r0
 14550 122a 0B46     		mov	r3, r1
 14551 122c 07F11C00 		add	r0, r7, #28
 14552 1230 CDE90823 		strd	r2, [sp, #32]
 14553 1234 D7E90012 		ldrd	r1, [r7]
 14554 1238 CDE90612 		strd	r1, [sp, #24]
 14555 123c CDE904AB 		strd	r10, [sp, #16]
 14556 1240 CDE90289 		strd	r8, [sp, #8]
 14557 1244 CDE90045 		strd	r4, [sp]
 14558 1248 D7E90223 		ldrd	r2, [r7, #8]
 14559 124c 8B49     		ldr	r1, .L644+12
 14560 124e FFF7FEFF 		bl	sprintf
2098:..\src/command_processing.c **** 		    strcat(info_string, str);       
 14561              		.loc 1 2098 0 discriminator 2
 14562 1252 07F11C03 		add	r3, r7, #28
 14563 1256 1946     		mov	r1, r3
 14564 1258 7869     		ldr	r0, [r7, #20]
 14565 125a FFF7FEFF 		bl	strcat
2099:..\src/command_processing.c **** 
2100:..\src/command_processing.c ****             sprintf(str, "Position limit active: %d", (int)MOT->pos_lim_flag);
 14566              		.loc 1 2100 0 discriminator 2
 14567 125e D7F88430 		ldr	r3, [r7, #132]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 331


 14568 1262 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 14569 1266 1A46     		mov	r2, r3
 14570 1268 07F11C03 		add	r3, r7, #28
 14571 126c 8449     		ldr	r1, .L644+16
 14572 126e 1846     		mov	r0, r3
 14573 1270 FFF7FEFF 		bl	sprintf
2101:..\src/command_processing.c ****             strcat(info_string, str);
 14574              		.loc 1 2101 0 discriminator 2
 14575 1274 07F11C03 		add	r3, r7, #28
 14576 1278 1946     		mov	r1, r3
 14577 127a 7869     		ldr	r0, [r7, #20]
 14578 127c FFF7FEFF 		bl	strcat
2102:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14579              		.loc 1 2102 0 discriminator 2
 14580 1280 7869     		ldr	r0, [r7, #20]
 14581 1282 FFF7FEFF 		bl	strlen
 14582 1286 0346     		mov	r3, r0
 14583 1288 1A46     		mov	r2, r3
 14584 128a 7B69     		ldr	r3, [r7, #20]
 14585 128c 1344     		add	r3, r3, r2
 14586 128e 7A4A     		ldr	r2, .L644+8
 14587 1290 1188     		ldrh	r1, [r2]	@ unaligned
 14588 1292 9278     		ldrb	r2, [r2, #2]
 14589 1294 1980     		strh	r1, [r3]	@ unaligned
 14590 1296 9A70     		strb	r2, [r3, #2]
2103:..\src/command_processing.c **** 
2104:..\src/command_processing.c ****             sprintf(str, "Position limit motor: inf -> %ld  ", (int32)MOT->pos_lim_inf >> MEM_P->en
 14591              		.loc 1 2104 0 discriminator 2
 14592 1298 D7F88430 		ldr	r3, [r7, #132]
 14593 129c 596B     		ldr	r1, [r3, #52]
 14594 129e 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14595 12a2 D7F88C00 		ldr	r0, [r7, #140]
 14596 12a6 1346     		mov	r3, r2
 14597 12a8 5B00     		lsls	r3, r3, #1
 14598 12aa 1344     		add	r3, r3, r2
 14599 12ac 1B01     		lsls	r3, r3, #4
 14600 12ae 0344     		add	r3, r3, r0
 14601 12b0 03F29513 		addw	r3, r3, #405
 14602 12b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14603 12b6 41FA03F2 		asr	r2, r1, r3
 14604 12ba 07F11C03 		add	r3, r7, #28
 14605 12be 7149     		ldr	r1, .L644+20
 14606 12c0 1846     		mov	r0, r3
 14607 12c2 FFF7FEFF 		bl	sprintf
2105:..\src/command_processing.c ****             strcat(info_string, str);
 14608              		.loc 1 2105 0 discriminator 2
 14609 12c6 07F11C03 		add	r3, r7, #28
 14610 12ca 1946     		mov	r1, r3
 14611 12cc 7869     		ldr	r0, [r7, #20]
 14612 12ce FFF7FEFF 		bl	strcat
2106:..\src/command_processing.c ****             sprintf(str, "sup -> %ld\r\n", (int32)MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]);
 14613              		.loc 1 2106 0 discriminator 2
 14614 12d2 D7F88430 		ldr	r3, [r7, #132]
 14615 12d6 996B     		ldr	r1, [r3, #56]
 14616 12d8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 14617 12dc D7F88C00 		ldr	r0, [r7, #140]
 14618 12e0 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 332


 14619 12e2 5B00     		lsls	r3, r3, #1
 14620 12e4 1344     		add	r3, r3, r2
 14621 12e6 1B01     		lsls	r3, r3, #4
 14622 12e8 0344     		add	r3, r3, r0
 14623 12ea 03F29513 		addw	r3, r3, #405
 14624 12ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14625 12f0 41FA03F2 		asr	r2, r1, r3
 14626 12f4 07F11C03 		add	r3, r7, #28
 14627 12f8 6349     		ldr	r1, .L644+24
 14628 12fa 1846     		mov	r0, r3
 14629 12fc FFF7FEFF 		bl	sprintf
2107:..\src/command_processing.c ****             strcat(info_string, str);
 14630              		.loc 1 2107 0 discriminator 2
 14631 1300 07F11C03 		add	r3, r7, #28
 14632 1304 1946     		mov	r1, r3
 14633 1306 7869     		ldr	r0, [r7, #20]
 14634 1308 FFF7FEFF 		bl	strcat
2108:..\src/command_processing.c **** 
2109:..\src/command_processing.c ****             sprintf(str, "Max step pos and neg: %d %d", (int)MOT->max_step_pos, (int)MOT->max_step_
 14635              		.loc 1 2109 0 discriminator 2
 14636 130c D7F88430 		ldr	r3, [r7, #132]
 14637 1310 1A6C     		ldr	r2, [r3, #64]
 14638 1312 D7F88430 		ldr	r3, [r7, #132]
 14639 1316 DB6B     		ldr	r3, [r3, #60]
 14640 1318 07F11C00 		add	r0, r7, #28
 14641 131c 5B49     		ldr	r1, .L644+28
 14642 131e FFF7FEFF 		bl	sprintf
2110:..\src/command_processing.c ****             strcat(info_string, str);
 14643              		.loc 1 2110 0 discriminator 2
 14644 1322 07F11C03 		add	r3, r7, #28
 14645 1326 1946     		mov	r1, r3
 14646 1328 7869     		ldr	r0, [r7, #20]
 14647 132a FFF7FEFF 		bl	strcat
2111:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14648              		.loc 1 2111 0 discriminator 2
 14649 132e 7869     		ldr	r0, [r7, #20]
 14650 1330 FFF7FEFF 		bl	strlen
 14651 1334 0346     		mov	r3, r0
 14652 1336 1A46     		mov	r2, r3
 14653 1338 7B69     		ldr	r3, [r7, #20]
 14654 133a 1344     		add	r3, r3, r2
 14655 133c 4E4A     		ldr	r2, .L644+8
 14656 133e 1188     		ldrh	r1, [r2]	@ unaligned
 14657 1340 9278     		ldrb	r2, [r2, #2]
 14658 1342 1980     		strh	r1, [r3]	@ unaligned
 14659 1344 9A70     		strb	r2, [r3, #2]
2112:..\src/command_processing.c **** 
2113:..\src/command_processing.c ****             sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 14660              		.loc 1 2113 0 discriminator 2
 14661 1346 D7F88430 		ldr	r3, [r7, #132]
 14662 134a B3F95C30 		ldrsh	r3, [r3, #92]
 14663 134e 1A46     		mov	r2, r3
 14664 1350 07F11C03 		add	r3, r7, #28
 14665 1354 4E49     		ldr	r1, .L644+32
 14666 1356 1846     		mov	r0, r3
 14667 1358 FFF7FEFF 		bl	sprintf
2114:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 333


 14668              		.loc 1 2114 0 discriminator 2
 14669 135c 07F11C03 		add	r3, r7, #28
 14670 1360 1946     		mov	r1, r3
 14671 1362 7869     		ldr	r0, [r7, #20]
 14672 1364 FFF7FEFF 		bl	strcat
2115:..\src/command_processing.c **** #ifdef GENERIC_FW       // decided not to show when using SOFTHAND_FW to streamline ping, since the
2116:..\src/command_processing.c ****             sprintf(str, "Motor board associated encoder line: %d\r\n", (int)MOT->encoder_line);
2117:..\src/command_processing.c ****             strcat(info_string, str);
2118:..\src/command_processing.c ****             switch(MOT->motor_driver_type) {
2119:..\src/command_processing.c ****                 case DRIVER_MC33887:
2120:..\src/command_processing.c ****                     strcat(info_string, "Driver type: MC33887 (Standard)\r\n");
2121:..\src/command_processing.c ****                     break;
2122:..\src/command_processing.c ****                 case DRIVER_VNH5019:
2123:..\src/command_processing.c ****                     strcat(info_string, "Driver type: VNH5019 (High power)\r\n");
2124:..\src/command_processing.c ****                     break;
2125:..\src/command_processing.c ****                 default:
2126:..\src/command_processing.c ****                     break;
2127:..\src/command_processing.c ****             }
2128:..\src/command_processing.c ****             sprintf(str, "PWM rate limiter value: %d\r\n", (int)MOT->pwm_rate_limiter);
2129:..\src/command_processing.c ****             strcat(info_string, str);
2130:..\src/command_processing.c ****             if (MOT->not_revers_motor_flag)
2131:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: YES\r\n");
2132:..\src/command_processing.c ****             else
2133:..\src/command_processing.c ****                 strcat(info_string, "Not reversible motor: NO\r\n");
2134:..\src/command_processing.c **** #endif                
2135:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 14673              		.loc 1 2135 0 discriminator 2
 14674 1368 7869     		ldr	r0, [r7, #20]
 14675 136a FFF7FEFF 		bl	strlen
 14676 136e 0346     		mov	r3, r0
 14677 1370 1A46     		mov	r2, r3
 14678 1372 7B69     		ldr	r3, [r7, #20]
 14679 1374 1344     		add	r3, r3, r2
 14680 1376 404A     		ldr	r2, .L644+8
 14681 1378 1188     		ldrh	r1, [r2]	@ unaligned
 14682 137a 9278     		ldrb	r2, [r2, #2]
 14683 137c 1980     		strh	r1, [r3]	@ unaligned
 14684 137e 9A70     		strb	r2, [r3, #2]
 14685              	.LBE18:
1871:..\src/command_processing.c ****             
 14686              		.loc 1 1871 0 discriminator 2
 14687 1380 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 14688 1384 0133     		adds	r3, r3, #1
 14689 1386 87F89330 		strb	r3, [r7, #147]
 14690              	.L552:
1871:..\src/command_processing.c ****             
 14691              		.loc 1 1871 0 is_stmt 0 discriminator 1
 14692 138a D7F88C30 		ldr	r3, [r7, #140]
 14693 138e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 14694 1392 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 14695 1396 9A42     		cmp	r2, r3
 14696 1398 7EF6D0AF 		bls	.L604
 14697              	.LBE17:
2136:..\src/command_processing.c ****         }
2137:..\src/command_processing.c ****       
2138:..\src/command_processing.c ****         strcat(info_string, "EMG CONFIGURATION\r\n");
 14698              		.loc 1 2138 0 is_stmt 1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 334


 14699 139c 7869     		ldr	r0, [r7, #20]
 14700 139e FFF7FEFF 		bl	strlen
 14701 13a2 0346     		mov	r3, r0
 14702 13a4 1A46     		mov	r2, r3
 14703 13a6 7B69     		ldr	r3, [r7, #20]
 14704 13a8 1344     		add	r3, r3, r2
 14705 13aa 3A4A     		ldr	r2, .L644+36
 14706 13ac 1D46     		mov	r5, r3
 14707 13ae 1446     		mov	r4, r2
 14708 13b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14709 13b2 2860     		str	r0, [r5]	@ unaligned
 14710 13b4 6960     		str	r1, [r5, #4]	@ unaligned
 14711 13b6 AA60     		str	r2, [r5, #8]	@ unaligned
 14712 13b8 EB60     		str	r3, [r5, #12]	@ unaligned
 14713 13ba 2068     		ldr	r0, [r4]	@ unaligned
 14714 13bc 2861     		str	r0, [r5, #16]	@ unaligned
2139:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.e
 14715              		.loc 1 2139 0
 14716 13be D7F88C30 		ldr	r3, [r7, #140]
 14717 13c2 B3F8F031 		ldrh	r3, [r3, #496]
 14718 13c6 1A46     		mov	r2, r3
 14719 13c8 D7F88C30 		ldr	r3, [r7, #140]
 14720 13cc B3F8F231 		ldrh	r3, [r3, #498]
 14721 13d0 07F11C00 		add	r0, r7, #28
 14722 13d4 3049     		ldr	r1, .L644+40
 14723 13d6 FFF7FEFF 		bl	sprintf
2140:..\src/command_processing.c ****         strcat(info_string, str);
 14724              		.loc 1 2140 0
 14725 13da 07F11C03 		add	r3, r7, #28
 14726 13de 1946     		mov	r1, r3
 14727 13e0 7869     		ldr	r0, [r7, #20]
 14728 13e2 FFF7FEFF 		bl	strcat
2141:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14729              		.loc 1 2141 0
 14730 13e6 7869     		ldr	r0, [r7, #20]
 14731 13e8 FFF7FEFF 		bl	strlen
 14732 13ec 0346     		mov	r3, r0
 14733 13ee 1A46     		mov	r2, r3
 14734 13f0 7B69     		ldr	r3, [r7, #20]
 14735 13f2 1344     		add	r3, r3, r2
 14736 13f4 204A     		ldr	r2, .L644+8
 14737 13f6 1188     		ldrh	r1, [r2]	@ unaligned
 14738 13f8 9278     		ldrb	r2, [r2, #2]
 14739 13fa 1980     		strh	r1, [r3]	@ unaligned
 14740 13fc 9A70     		strb	r2, [r3, #2]
2142:..\src/command_processing.c **** 
2143:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg
 14741              		.loc 1 2143 0
 14742 13fe D7F88C30 		ldr	r3, [r7, #140]
 14743 1402 D3F8F421 		ldr	r2, [r3, #500]
 14744 1406 D7F88C30 		ldr	r3, [r7, #140]
 14745 140a D3F8F831 		ldr	r3, [r3, #504]
 14746 140e 07F11C00 		add	r0, r7, #28
 14747 1412 2249     		ldr	r1, .L644+44
 14748 1414 FFF7FEFF 		bl	sprintf
2144:..\src/command_processing.c ****         strcat(info_string, str);
 14749              		.loc 1 2144 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 335


 14750 1418 07F11C03 		add	r3, r7, #28
 14751 141c 1946     		mov	r1, r3
 14752 141e 7869     		ldr	r0, [r7, #20]
 14753 1420 FFF7FEFF 		bl	strcat
2145:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14754              		.loc 1 2145 0
 14755 1424 7869     		ldr	r0, [r7, #20]
 14756 1426 FFF7FEFF 		bl	strlen
 14757 142a 0346     		mov	r3, r0
 14758 142c 1A46     		mov	r2, r3
 14759 142e 7B69     		ldr	r3, [r7, #20]
 14760 1430 1344     		add	r3, r3, r2
 14761 1432 114A     		ldr	r2, .L644+8
 14762 1434 1188     		ldrh	r1, [r2]	@ unaligned
 14763 1436 9278     		ldrb	r2, [r2, #2]
 14764 1438 1980     		strh	r1, [r3]	@ unaligned
 14765 143a 9A70     		strb	r2, [r3, #2]
2146:..\src/command_processing.c **** 
2147:..\src/command_processing.c ****         if (MEM_P->emg.switch_emg)
 14766              		.loc 1 2147 0
 14767 143c D7F88C30 		ldr	r3, [r7, #140]
 14768 1440 93F8FF31 		ldrb	r3, [r3, #511]	@ zero_extendqisi2
 14769 1444 002B     		cmp	r3, #0
 14770 1446 2DD0     		beq	.L605
2148:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: YES\r\n");
 14771              		.loc 1 2148 0
 14772 1448 7869     		ldr	r0, [r7, #20]
 14773 144a FFF7FEFF 		bl	strlen
 14774 144e 0346     		mov	r3, r0
 14775 1450 1A46     		mov	r2, r3
 14776 1452 7B69     		ldr	r3, [r7, #20]
 14777 1454 1344     		add	r3, r3, r2
 14778 1456 124A     		ldr	r2, .L644+48
 14779 1458 1D46     		mov	r5, r3
 14780 145a 1446     		mov	r4, r2
 14781 145c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14782 145e 2860     		str	r0, [r5]	@ unaligned
 14783 1460 6960     		str	r1, [r5, #4]	@ unaligned
 14784 1462 AA60     		str	r2, [r5, #8]	@ unaligned
 14785 1464 EB60     		str	r3, [r5, #12]	@ unaligned
 14786 1466 2068     		ldr	r0, [r4]	@ unaligned
 14787 1468 2861     		str	r0, [r5, #16]	@ unaligned
 14788 146a 2379     		ldrb	r3, [r4, #4]
 14789 146c 2B75     		strb	r3, [r5, #20]
 14790 146e 2AE0     		b	.L606
 14791              	.L645:
 14792              		.align	2
 14793              	.L644:
 14794 1470 6C150000 		.word	.LC206
 14795 1474 38120000 		.word	.LC174
 14796 1478 18100000 		.word	.LC143
 14797 147c 70150000 		.word	.LC207
 14798 1480 A0150000 		.word	.LC208
 14799 1484 BC150000 		.word	.LC209
 14800 1488 E0150000 		.word	.LC210
 14801 148c F0150000 		.word	.LC211
 14802 1490 0C160000 		.word	.LC212
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 336


 14803 1494 20160000 		.word	.LC213
 14804 1498 34160000 		.word	.LC214
 14805 149c 58160000 		.word	.LC215
 14806 14a0 7C160000 		.word	.LC216
 14807              	.L605:
2149:..\src/command_processing.c ****         else
2150:..\src/command_processing.c ****             strcat(info_string, "EMG inversion: NO\r\n");
 14808              		.loc 1 2150 0
 14809 14a4 7869     		ldr	r0, [r7, #20]
 14810 14a6 FFF7FEFF 		bl	strlen
 14811 14aa 0346     		mov	r3, r0
 14812 14ac 1A46     		mov	r2, r3
 14813 14ae 7B69     		ldr	r3, [r7, #20]
 14814 14b0 1344     		add	r3, r3, r2
 14815 14b2 BA4A     		ldr	r2, .L646
 14816 14b4 1D46     		mov	r5, r3
 14817 14b6 1446     		mov	r4, r2
 14818 14b8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14819 14ba 2860     		str	r0, [r5]	@ unaligned
 14820 14bc 6960     		str	r1, [r5, #4]	@ unaligned
 14821 14be AA60     		str	r2, [r5, #8]	@ unaligned
 14822 14c0 EB60     		str	r3, [r5, #12]	@ unaligned
 14823 14c2 2068     		ldr	r0, [r4]	@ unaligned
 14824 14c4 2861     		str	r0, [r5, #16]	@ unaligned
 14825              	.L606:
2151:..\src/command_processing.c ****             
2152:..\src/command_processing.c ****         if (MEM_P->emg.emg_calibration_flag)
 14826              		.loc 1 2152 0
 14827 14c6 D7F88C30 		ldr	r3, [r7, #140]
 14828 14ca 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 14829 14ce 002B     		cmp	r3, #0
 14830 14d0 17D0     		beq	.L607
2153:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 14831              		.loc 1 2153 0
 14832 14d2 7869     		ldr	r0, [r7, #20]
 14833 14d4 FFF7FEFF 		bl	strlen
 14834 14d8 0346     		mov	r3, r0
 14835 14da 1A46     		mov	r2, r3
 14836 14dc 7B69     		ldr	r3, [r7, #20]
 14837 14de 1344     		add	r3, r3, r2
 14838 14e0 AF4A     		ldr	r2, .L646+4
 14839 14e2 1D46     		mov	r5, r3
 14840 14e4 1446     		mov	r4, r2
 14841 14e6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14842 14e8 2860     		str	r0, [r5]	@ unaligned
 14843 14ea 6960     		str	r1, [r5, #4]	@ unaligned
 14844 14ec AA60     		str	r2, [r5, #8]	@ unaligned
 14845 14ee EB60     		str	r3, [r5, #12]	@ unaligned
 14846 14f0 03CC     		ldmia	r4!, {r0, r1}
 14847 14f2 2861     		str	r0, [r5, #16]	@ unaligned
 14848 14f4 6961     		str	r1, [r5, #20]	@ unaligned
 14849 14f6 2388     		ldrh	r3, [r4]	@ unaligned
 14850 14f8 A278     		ldrb	r2, [r4, #2]
 14851 14fa 2B83     		strh	r3, [r5, #24]	@ unaligned
 14852 14fc 1346     		mov	r3, r2
 14853 14fe AB76     		strb	r3, [r5, #26]
 14854 1500 13E0     		b	.L608
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 337


 14855              	.L607:
2154:..\src/command_processing.c ****         else
2155:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 14856              		.loc 1 2155 0
 14857 1502 7869     		ldr	r0, [r7, #20]
 14858 1504 FFF7FEFF 		bl	strlen
 14859 1508 0346     		mov	r3, r0
 14860 150a 1A46     		mov	r2, r3
 14861 150c 7B69     		ldr	r3, [r7, #20]
 14862 150e 1344     		add	r3, r3, r2
 14863 1510 A44A     		ldr	r2, .L646+8
 14864 1512 1D46     		mov	r5, r3
 14865 1514 1446     		mov	r4, r2
 14866 1516 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 14867 1518 2860     		str	r0, [r5]	@ unaligned
 14868 151a 6960     		str	r1, [r5, #4]	@ unaligned
 14869 151c AA60     		str	r2, [r5, #8]	@ unaligned
 14870 151e EB60     		str	r3, [r5, #12]	@ unaligned
 14871 1520 03CC     		ldmia	r4!, {r0, r1}
 14872 1522 2861     		str	r0, [r5, #16]	@ unaligned
 14873 1524 6961     		str	r1, [r5, #20]	@ unaligned
 14874 1526 2388     		ldrh	r3, [r4]	@ unaligned
 14875 1528 2B83     		strh	r3, [r5, #24]	@ unaligned
 14876              	.L608:
2156:..\src/command_processing.c **** 
2157:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_spee
 14877              		.loc 1 2157 0
 14878 152a D7F88C30 		ldr	r3, [r7, #140]
 14879 152e 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 14880 1532 1A46     		mov	r2, r3
 14881 1534 D7F88C30 		ldr	r3, [r7, #140]
 14882 1538 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 14883 153c 07F11C00 		add	r0, r7, #28
 14884 1540 9949     		ldr	r1, .L646+12
 14885 1542 FFF7FEFF 		bl	sprintf
2158:..\src/command_processing.c ****         strcat(info_string, str);
 14886              		.loc 1 2158 0
 14887 1546 07F11C03 		add	r3, r7, #28
 14888 154a 1946     		mov	r1, r3
 14889 154c 7869     		ldr	r0, [r7, #20]
 14890 154e FFF7FEFF 		bl	strcat
2159:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 14891              		.loc 1 2159 0
 14892 1552 7869     		ldr	r0, [r7, #20]
 14893 1554 FFF7FEFF 		bl	strlen
 14894 1558 0346     		mov	r3, r0
 14895 155a 1A46     		mov	r2, r3
 14896 155c 7B69     		ldr	r3, [r7, #20]
 14897 155e 1344     		add	r3, r3, r2
 14898 1560 924A     		ldr	r2, .L646+16
 14899 1562 1188     		ldrh	r1, [r2]	@ unaligned
 14900 1564 9278     		ldrb	r2, [r2, #2]
 14901 1566 1980     		strh	r1, [r3]	@ unaligned
 14902 1568 9A70     		strb	r2, [r3, #2]
2160:..\src/command_processing.c **** 
2161:..\src/command_processing.c ****         if (MEM_P->exp.read_ADC_sensors_port_flag == TRUE){
 14903              		.loc 1 2161 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 338


 14904 156a D7F88C30 		ldr	r3, [r7, #140]
 14905 156e 93F82732 		ldrb	r3, [r3, #551]	@ zero_extendqisi2
 14906 1572 012B     		cmp	r3, #1
 14907 1574 6ED1     		bne	.L609
2162:..\src/command_processing.c ****             strcat(info_string, "Additional ADC sensors value:\r\n");
 14908              		.loc 1 2162 0
 14909 1576 7869     		ldr	r0, [r7, #20]
 14910 1578 FFF7FEFF 		bl	strlen
 14911 157c 0346     		mov	r3, r0
 14912 157e 1A46     		mov	r2, r3
 14913 1580 7B69     		ldr	r3, [r7, #20]
 14914 1582 1344     		add	r3, r3, r2
 14915 1584 8A4A     		ldr	r2, .L646+20
 14916 1586 1C46     		mov	r4, r3
 14917 1588 1546     		mov	r5, r2
 14918 158a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14919 158c 2060     		str	r0, [r4]	@ unaligned
 14920 158e 6160     		str	r1, [r4, #4]	@ unaligned
 14921 1590 A260     		str	r2, [r4, #8]	@ unaligned
 14922 1592 E360     		str	r3, [r4, #12]	@ unaligned
 14923 1594 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 14924 1596 2061     		str	r0, [r4, #16]	@ unaligned
 14925 1598 6161     		str	r1, [r4, #20]	@ unaligned
 14926 159a A261     		str	r2, [r4, #24]	@ unaligned
 14927 159c E361     		str	r3, [r4, #28]	@ unaligned
2163:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 14928              		.loc 1 2163 0
 14929 159e 0023     		movs	r3, #0
 14930 15a0 C7F89430 		str	r3, [r7, #148]
 14931 15a4 25E0     		b	.L610
 14932              	.L611:
2164:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 14933              		.loc 1 2164 0 discriminator 3
 14934 15a6 D7F89430 		ldr	r3, [r7, #148]
 14935 15aa 591C     		adds	r1, r3, #1
 14936 15ac 814A     		ldr	r2, .L646+24
 14937 15ae D7F89430 		ldr	r3, [r7, #148]
 14938 15b2 0233     		adds	r3, r3, #2
 14939 15b4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14940 15b8 07F11C00 		add	r0, r7, #28
 14941 15bc 0A46     		mov	r2, r1
 14942 15be 7E49     		ldr	r1, .L646+28
 14943 15c0 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****                 strcat(info_string, str);
 14944              		.loc 1 2165 0 discriminator 3
 14945 15c4 07F11C03 		add	r3, r7, #28
 14946 15c8 1946     		mov	r1, r3
 14947 15ca 7869     		ldr	r0, [r7, #20]
 14948 15cc FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14949              		.loc 1 2166 0 discriminator 3
 14950 15d0 7869     		ldr	r0, [r7, #20]
 14951 15d2 FFF7FEFF 		bl	strlen
 14952 15d6 0346     		mov	r3, r0
 14953 15d8 1A46     		mov	r2, r3
 14954 15da 7B69     		ldr	r3, [r7, #20]
 14955 15dc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 339


 14956 15de 734A     		ldr	r2, .L646+16
 14957 15e0 1188     		ldrh	r1, [r2]	@ unaligned
 14958 15e2 9278     		ldrb	r2, [r2, #2]
 14959 15e4 1980     		strh	r1, [r3]	@ unaligned
 14960 15e6 9A70     		strb	r2, [r3, #2]
2163:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 14961              		.loc 1 2163 0 discriminator 3
 14962 15e8 D7F89430 		ldr	r3, [r7, #148]
 14963 15ec 0133     		adds	r3, r3, #1
 14964 15ee C7F89430 		str	r3, [r7, #148]
 14965              	.L610:
2163:..\src/command_processing.c ****                 sprintf(str,"ADC %d -> %d", (int)(i + 1), (int) g_adc_meas.add_emg[i]);
 14966              		.loc 1 2163 0 is_stmt 0 discriminator 1
 14967 15f2 D7F89430 		ldr	r3, [r7, #148]
 14968 15f6 052B     		cmp	r3, #5
 14969 15f8 D5DD     		ble	.L611
2167:..\src/command_processing.c ****             }
2168:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 14970              		.loc 1 2168 0 is_stmt 1
 14971 15fa 0023     		movs	r3, #0
 14972 15fc C7F89430 		str	r3, [r7, #148]
 14973 1600 24E0     		b	.L612
 14974              	.L613:
2169:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 14975              		.loc 1 2169 0 discriminator 3
 14976 1602 D7F89430 		ldr	r3, [r7, #148]
 14977 1606 591C     		adds	r1, r3, #1
 14978 1608 6A4A     		ldr	r2, .L646+24
 14979 160a D7F89430 		ldr	r3, [r7, #148]
 14980 160e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14981 1612 07F11C00 		add	r0, r7, #28
 14982 1616 0A46     		mov	r2, r1
 14983 1618 6849     		ldr	r1, .L646+32
 14984 161a FFF7FEFF 		bl	sprintf
2170:..\src/command_processing.c ****                 strcat(info_string, str);
 14985              		.loc 1 2170 0 discriminator 3
 14986 161e 07F11C03 		add	r3, r7, #28
 14987 1622 1946     		mov	r1, r3
 14988 1624 7869     		ldr	r0, [r7, #20]
 14989 1626 FFF7FEFF 		bl	strcat
2171:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 14990              		.loc 1 2171 0 discriminator 3
 14991 162a 7869     		ldr	r0, [r7, #20]
 14992 162c FFF7FEFF 		bl	strlen
 14993 1630 0346     		mov	r3, r0
 14994 1632 1A46     		mov	r2, r3
 14995 1634 7B69     		ldr	r3, [r7, #20]
 14996 1636 1344     		add	r3, r3, r2
 14997 1638 5C4A     		ldr	r2, .L646+16
 14998 163a 1188     		ldrh	r1, [r2]	@ unaligned
 14999 163c 9278     		ldrb	r2, [r2, #2]
 15000 163e 1980     		strh	r1, [r3]	@ unaligned
 15001 1640 9A70     		strb	r2, [r3, #2]
2168:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 15002              		.loc 1 2168 0 discriminator 3
 15003 1642 D7F89430 		ldr	r3, [r7, #148]
 15004 1646 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 340


 15005 1648 C7F89430 		str	r3, [r7, #148]
 15006              	.L612:
2168:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_adc_meas.emg[i]);
 15007              		.loc 1 2168 0 is_stmt 0 discriminator 1
 15008 164c D7F89430 		ldr	r3, [r7, #148]
 15009 1650 012B     		cmp	r3, #1
 15010 1652 D6DD     		ble	.L613
 15011              	.L609:
2172:..\src/command_processing.c ****             }
2173:..\src/command_processing.c ****         }
2174:..\src/command_processing.c ****         
2175:..\src/command_processing.c ****         if (MEM_P->SH.rest_position_flag) {
 15012              		.loc 1 2175 0 is_stmt 1
 15013 1654 D7F88C30 		ldr	r3, [r7, #140]
 15014 1658 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 15015 165c 002B     		cmp	r3, #0
 15016 165e 63D0     		beq	.L614
2176:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 15017              		.loc 1 2176 0
 15018 1660 D7F88C30 		ldr	r3, [r7, #140]
 15019 1664 D3F8A422 		ldr	r2, [r3, #676]
 15020 1668 07F11C03 		add	r3, r7, #28
 15021 166c 5449     		ldr	r1, .L646+36
 15022 166e 1846     		mov	r0, r3
 15023 1670 FFF7FEFF 		bl	sprintf
2177:..\src/command_processing.c ****             strcat(info_string, str);
 15024              		.loc 1 2177 0
 15025 1674 07F11C03 		add	r3, r7, #28
 15026 1678 1946     		mov	r1, r3
 15027 167a 7869     		ldr	r0, [r7, #20]
 15028 167c FFF7FEFF 		bl	strcat
2178:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15029              		.loc 1 2178 0
 15030 1680 7869     		ldr	r0, [r7, #20]
 15031 1682 FFF7FEFF 		bl	strlen
 15032 1686 0346     		mov	r3, r0
 15033 1688 1A46     		mov	r2, r3
 15034 168a 7B69     		ldr	r3, [r7, #20]
 15035 168c 1344     		add	r3, r3, r2
 15036 168e 474A     		ldr	r2, .L646+16
 15037 1690 1188     		ldrh	r1, [r2]	@ unaligned
 15038 1692 9278     		ldrb	r2, [r2, #2]
 15039 1694 1980     		strh	r1, [r3]	@ unaligned
 15040 1696 9A70     		strb	r2, [r3, #2]
2179:..\src/command_processing.c ****             
2180:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 15041              		.loc 1 2180 0
 15042 1698 D7F88C30 		ldr	r3, [r7, #140]
 15043 169c D3F8A822 		ldr	r2, [r3, #680]
 15044 16a0 07F11C03 		add	r3, r7, #28
 15045 16a4 4749     		ldr	r1, .L646+40
 15046 16a6 1846     		mov	r0, r3
 15047 16a8 FFF7FEFF 		bl	sprintf
2181:..\src/command_processing.c ****             strcat(info_string, str);
 15048              		.loc 1 2181 0
 15049 16ac 07F11C03 		add	r3, r7, #28
 15050 16b0 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 341


 15051 16b2 7869     		ldr	r0, [r7, #20]
 15052 16b4 FFF7FEFF 		bl	strcat
2182:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15053              		.loc 1 2182 0
 15054 16b8 7869     		ldr	r0, [r7, #20]
 15055 16ba FFF7FEFF 		bl	strlen
 15056 16be 0346     		mov	r3, r0
 15057 16c0 1A46     		mov	r2, r3
 15058 16c2 7B69     		ldr	r3, [r7, #20]
 15059 16c4 1344     		add	r3, r3, r2
 15060 16c6 394A     		ldr	r2, .L646+16
 15061 16c8 1188     		ldrh	r1, [r2]	@ unaligned
 15062 16ca 9278     		ldrb	r2, [r2, #2]
 15063 16cc 1980     		strh	r1, [r3]	@ unaligned
 15064 16ce 9A70     		strb	r2, [r3, #2]
2183:..\src/command_processing.c ****             
2184:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0
 15065              		.loc 1 2184 0
 15066 16d0 D7F88C30 		ldr	r3, [r7, #140]
 15067 16d4 D3F8A022 		ldr	r2, [r3, #672]
 15068 16d8 D7F88C30 		ldr	r3, [r7, #140]
 15069 16dc 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 15070 16e0 1846     		mov	r0, r3
 15071 16e2 D7F88C10 		ldr	r1, [r7, #140]
 15072 16e6 0346     		mov	r3, r0
 15073 16e8 5B00     		lsls	r3, r3, #1
 15074 16ea 0344     		add	r3, r3, r0
 15075 16ec 1B01     		lsls	r3, r3, #4
 15076 16ee 0B44     		add	r3, r3, r1
 15077 16f0 03F29513 		addw	r3, r3, #405
 15078 16f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15079 16f6 1A41     		asrs	r2, r2, r3
 15080 16f8 07F11C03 		add	r3, r7, #28
 15081 16fc 3249     		ldr	r1, .L646+44
 15082 16fe 1846     		mov	r0, r3
 15083 1700 FFF7FEFF 		bl	sprintf
2185:..\src/command_processing.c ****             strcat(info_string, str);
 15084              		.loc 1 2185 0
 15085 1704 07F11C03 		add	r3, r7, #28
 15086 1708 1946     		mov	r1, r3
 15087 170a 7869     		ldr	r0, [r7, #20]
 15088 170c FFF7FEFF 		bl	strcat
2186:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 15089              		.loc 1 2186 0
 15090 1710 7869     		ldr	r0, [r7, #20]
 15091 1712 FFF7FEFF 		bl	strlen
 15092 1716 0346     		mov	r3, r0
 15093 1718 1A46     		mov	r2, r3
 15094 171a 7B69     		ldr	r3, [r7, #20]
 15095 171c 1344     		add	r3, r3, r2
 15096 171e 234A     		ldr	r2, .L646+16
 15097 1720 1188     		ldrh	r1, [r2]	@ unaligned
 15098 1722 9278     		ldrb	r2, [r2, #2]
 15099 1724 1980     		strh	r1, [r3]	@ unaligned
 15100 1726 9A70     		strb	r2, [r3, #2]
 15101              	.L614:
2187:..\src/command_processing.c ****         }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 342


2188:..\src/command_processing.c **** 
2189:..\src/command_processing.c ****         if (MEM_P->imu.read_imu_flag) {
 15102              		.loc 1 2189 0
 15103 1728 D7F88C30 		ldr	r3, [r7, #140]
 15104 172c 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 15105 1730 002B     		cmp	r3, #0
 15106 1732 00F0CD81 		beq	.L615
2190:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 15107              		.loc 1 2190 0
 15108 1736 254B     		ldr	r3, .L646+48
 15109 1738 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15110 173a 1A46     		mov	r2, r3
 15111 173c 07F11C03 		add	r3, r7, #28
 15112 1740 2349     		ldr	r1, .L646+52
 15113 1742 1846     		mov	r0, r3
 15114 1744 FFF7FEFF 		bl	sprintf
2191:..\src/command_processing.c ****             strcat(info_string, str);
 15115              		.loc 1 2191 0
 15116 1748 07F11C03 		add	r3, r7, #28
 15117 174c 1946     		mov	r1, r3
 15118 174e 7869     		ldr	r0, [r7, #20]
 15119 1750 FFF7FEFF 		bl	strcat
2192:..\src/command_processing.c ****             
2193:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15120              		.loc 1 2193 0
 15121 1754 7869     		ldr	r0, [r7, #20]
 15122 1756 FFF7FEFF 		bl	strlen
 15123 175a 0346     		mov	r3, r0
 15124 175c 1A46     		mov	r2, r3
 15125 175e 7B69     		ldr	r3, [r7, #20]
 15126 1760 1344     		add	r3, r3, r2
 15127 1762 124A     		ldr	r2, .L646+16
 15128 1764 1188     		ldrh	r1, [r2]	@ unaligned
 15129 1766 9278     		ldrb	r2, [r2, #2]
 15130 1768 1980     		strh	r1, [r3]	@ unaligned
 15131 176a 9A70     		strb	r2, [r3, #2]
2194:..\src/command_processing.c ****             
2195:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 15132              		.loc 1 2195 0
 15133 176c 7869     		ldr	r0, [r7, #20]
 15134 176e FFF7FEFF 		bl	strlen
 15135 1772 0346     		mov	r3, r0
 15136 1774 1A46     		mov	r2, r3
 15137 1776 7B69     		ldr	r3, [r7, #20]
 15138 1778 1344     		add	r3, r3, r2
 15139 177a 164A     		ldr	r2, .L646+56
 15140 177c 1D46     		mov	r5, r3
 15141 177e 1446     		mov	r4, r2
 15142 1780 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15143 1782 2860     		str	r0, [r5]	@ unaligned
 15144 1784 6960     		str	r1, [r5, #4]	@ unaligned
 15145 1786 AA60     		str	r2, [r5, #8]	@ unaligned
 15146 1788 EB60     		str	r3, [r5, #12]	@ unaligned
 15147 178a 2068     		ldr	r0, [r4]	@ unaligned
 15148 178c 2861     		str	r0, [r5, #16]	@ unaligned
 15149 178e 2379     		ldrb	r3, [r4, #4]
 15150 1790 2B75     		strb	r3, [r5, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 343


2196:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 15151              		.loc 1 2196 0
 15152 1792 0023     		movs	r3, #0
 15153 1794 C7F89430 		str	r3, [r7, #148]
 15154 1798 83E1     		b	.L616
 15155              	.L647:
 15156 179a 00BF     		.align	2
 15157              	.L646:
 15158 179c 94160000 		.word	.LC217
 15159 17a0 A8160000 		.word	.LC218
 15160 17a4 C4160000 		.word	.LC219
 15161 17a8 E0160000 		.word	.LC220
 15162 17ac 18100000 		.word	.LC143
 15163 17b0 F8160000 		.word	.LC221
 15164 17b4 00000000 		.word	g_adc_meas
 15165 17b8 18170000 		.word	.LC222
 15166 17bc 28170000 		.word	.LC223
 15167 17c0 3C170000 		.word	.LC224
 15168 17c4 58170000 		.word	.LC225
 15169 17c8 80170000 		.word	.LC226
 15170 17cc 00000000 		.word	N_IMU_Connected
 15171 17d0 94170000 		.word	.LC227
 15172 17d4 A8170000 		.word	.LC228
 15173              	.L627:
2197:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15174              		.loc 1 2197 0
 15175 17d8 D54A     		ldr	r2, .L648
 15176 17da D7F89430 		ldr	r3, [r7, #148]
 15177 17de 1344     		add	r3, r3, r2
 15178 17e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15179 17e2 07F11C00 		add	r0, r7, #28
 15180 17e6 D7F89420 		ldr	r2, [r7, #148]
 15181 17ea D249     		ldr	r1, .L648+4
 15182 17ec FFF7FEFF 		bl	sprintf
2198:..\src/command_processing.c ****                 strcat(info_string, str);
 15183              		.loc 1 2198 0
 15184 17f0 07F11C03 		add	r3, r7, #28
 15185 17f4 1946     		mov	r1, r3
 15186 17f6 7869     		ldr	r0, [r7, #20]
 15187 17f8 FFF7FEFF 		bl	strcat
2199:..\src/command_processing.c ****                 
2200:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 15188              		.loc 1 2200 0
 15189 17fc 07F11C03 		add	r3, r7, #28
 15190 1800 CD4A     		ldr	r2, .L648+8
 15191 1802 1C46     		mov	r4, r3
 15192 1804 1546     		mov	r5, r2
 15193 1806 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15194 1808 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15195 180a 2B68     		ldr	r3, [r5]
 15196 180c 2380     		strh	r3, [r4]	@ movhi
2201:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 15197              		.loc 1 2201 0
 15198 180e C84A     		ldr	r2, .L648
 15199 1810 D7F89430 		ldr	r3, [r7, #148]
 15200 1814 1344     		add	r3, r3, r2
 15201 1816 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 344


 15202 1818 1946     		mov	r1, r3
 15203 181a D7F88C20 		ldr	r2, [r7, #140]
 15204 181e 0B46     		mov	r3, r1
 15205 1820 9B00     		lsls	r3, r3, #2
 15206 1822 0B44     		add	r3, r3, r1
 15207 1824 1344     		add	r3, r3, r2
 15208 1826 03F20223 		addw	r3, r3, #514
 15209 182a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15210 182c 002B     		cmp	r3, #0
 15211 182e 0FD0     		beq	.L617
2202:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15212              		.loc 1 2202 0
 15213 1830 07F11C03 		add	r3, r7, #28
 15214 1834 1846     		mov	r0, r3
 15215 1836 FFF7FEFF 		bl	strlen
 15216 183a 0346     		mov	r3, r0
 15217 183c 1A46     		mov	r2, r3
 15218 183e 07F11C03 		add	r3, r7, #28
 15219 1842 1344     		add	r3, r3, r2
 15220 1844 BD4A     		ldr	r2, .L648+12
 15221 1846 1068     		ldr	r0, [r2]	@ unaligned
 15222 1848 1860     		str	r0, [r3]	@ unaligned
 15223 184a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15224 184c 9A80     		strh	r2, [r3, #4]	@ unaligned
 15225 184e 0EE0     		b	.L618
 15226              	.L617:
2203:..\src/command_processing.c ****                 else
2204:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 15227              		.loc 1 2204 0
 15228 1850 07F11C03 		add	r3, r7, #28
 15229 1854 1846     		mov	r0, r3
 15230 1856 FFF7FEFF 		bl	strlen
 15231 185a 0346     		mov	r3, r0
 15232 185c 1A46     		mov	r2, r3
 15233 185e 07F11C03 		add	r3, r7, #28
 15234 1862 1344     		add	r3, r3, r2
 15235 1864 B64A     		ldr	r2, .L648+16
 15236 1866 1068     		ldr	r0, [r2]	@ unaligned
 15237 1868 1860     		str	r0, [r3]	@ unaligned
 15238 186a 1279     		ldrb	r2, [r2, #4]
 15239 186c 1A71     		strb	r2, [r3, #4]
 15240              	.L618:
2205:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 15241              		.loc 1 2205 0
 15242 186e 07F11C03 		add	r3, r7, #28
 15243 1872 1846     		mov	r0, r3
 15244 1874 FFF7FEFF 		bl	strlen
 15245 1878 0346     		mov	r3, r0
 15246 187a 1A46     		mov	r2, r3
 15247 187c 07F11C03 		add	r3, r7, #28
 15248 1880 1344     		add	r3, r3, r2
 15249 1882 B04A     		ldr	r2, .L648+20
 15250 1884 1C46     		mov	r4, r3
 15251 1886 1346     		mov	r3, r2
 15252 1888 07CB     		ldmia	r3!, {r0, r1, r2}
 15253 188a 2060     		str	r0, [r4]	@ unaligned
 15254 188c 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 345


 15255 188e A260     		str	r2, [r4, #8]	@ unaligned
 15256 1890 1B88     		ldrh	r3, [r3]	@ unaligned
 15257 1892 A381     		strh	r3, [r4, #12]	@ unaligned
2206:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 15258              		.loc 1 2206 0
 15259 1894 A64A     		ldr	r2, .L648
 15260 1896 D7F89430 		ldr	r3, [r7, #148]
 15261 189a 1344     		add	r3, r3, r2
 15262 189c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15263 189e 1946     		mov	r1, r3
 15264 18a0 D7F88C20 		ldr	r2, [r7, #140]
 15265 18a4 0B46     		mov	r3, r1
 15266 18a6 9B00     		lsls	r3, r3, #2
 15267 18a8 0B44     		add	r3, r3, r1
 15268 18aa 1344     		add	r3, r3, r2
 15269 18ac 03F20323 		addw	r3, r3, #515
 15270 18b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15271 18b2 002B     		cmp	r3, #0
 15272 18b4 0FD0     		beq	.L619
2207:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15273              		.loc 1 2207 0
 15274 18b6 07F11C03 		add	r3, r7, #28
 15275 18ba 1846     		mov	r0, r3
 15276 18bc FFF7FEFF 		bl	strlen
 15277 18c0 0346     		mov	r3, r0
 15278 18c2 1A46     		mov	r2, r3
 15279 18c4 07F11C03 		add	r3, r7, #28
 15280 18c8 1344     		add	r3, r3, r2
 15281 18ca 9C4A     		ldr	r2, .L648+12
 15282 18cc 1068     		ldr	r0, [r2]	@ unaligned
 15283 18ce 1860     		str	r0, [r3]	@ unaligned
 15284 18d0 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15285 18d2 9A80     		strh	r2, [r3, #4]	@ unaligned
 15286 18d4 0EE0     		b	.L620
 15287              	.L619:
2208:..\src/command_processing.c ****                 else
2209:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 15288              		.loc 1 2209 0
 15289 18d6 07F11C03 		add	r3, r7, #28
 15290 18da 1846     		mov	r0, r3
 15291 18dc FFF7FEFF 		bl	strlen
 15292 18e0 0346     		mov	r3, r0
 15293 18e2 1A46     		mov	r2, r3
 15294 18e4 07F11C03 		add	r3, r7, #28
 15295 18e8 1344     		add	r3, r3, r2
 15296 18ea 954A     		ldr	r2, .L648+16
 15297 18ec 1068     		ldr	r0, [r2]	@ unaligned
 15298 18ee 1860     		str	r0, [r3]	@ unaligned
 15299 18f0 1279     		ldrb	r2, [r2, #4]
 15300 18f2 1A71     		strb	r2, [r3, #4]
 15301              	.L620:
2210:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 15302              		.loc 1 2210 0
 15303 18f4 07F11C03 		add	r3, r7, #28
 15304 18f8 1846     		mov	r0, r3
 15305 18fa FFF7FEFF 		bl	strlen
 15306 18fe 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 346


 15307 1900 1A46     		mov	r2, r3
 15308 1902 07F11C03 		add	r3, r7, #28
 15309 1906 1344     		add	r3, r3, r2
 15310 1908 8F4A     		ldr	r2, .L648+24
 15311 190a 1D46     		mov	r5, r3
 15312 190c 1446     		mov	r4, r2
 15313 190e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15314 1910 2860     		str	r0, [r5]	@ unaligned
 15315 1912 6960     		str	r1, [r5, #4]	@ unaligned
 15316 1914 AA60     		str	r2, [r5, #8]	@ unaligned
 15317 1916 EB60     		str	r3, [r5, #12]	@ unaligned
 15318 1918 2378     		ldrb	r3, [r4]
 15319 191a 2B74     		strb	r3, [r5, #16]
2211:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 15320              		.loc 1 2211 0
 15321 191c 844A     		ldr	r2, .L648
 15322 191e D7F89430 		ldr	r3, [r7, #148]
 15323 1922 1344     		add	r3, r3, r2
 15324 1924 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15325 1926 1946     		mov	r1, r3
 15326 1928 D7F88C20 		ldr	r2, [r7, #140]
 15327 192c 0B46     		mov	r3, r1
 15328 192e 9B00     		lsls	r3, r3, #2
 15329 1930 0B44     		add	r3, r3, r1
 15330 1932 1344     		add	r3, r3, r2
 15331 1934 03F50173 		add	r3, r3, #516
 15332 1938 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15333 193a 002B     		cmp	r3, #0
 15334 193c 0FD0     		beq	.L621
2212:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15335              		.loc 1 2212 0
 15336 193e 07F11C03 		add	r3, r7, #28
 15337 1942 1846     		mov	r0, r3
 15338 1944 FFF7FEFF 		bl	strlen
 15339 1948 0346     		mov	r3, r0
 15340 194a 1A46     		mov	r2, r3
 15341 194c 07F11C03 		add	r3, r7, #28
 15342 1950 1344     		add	r3, r3, r2
 15343 1952 7A4A     		ldr	r2, .L648+12
 15344 1954 1068     		ldr	r0, [r2]	@ unaligned
 15345 1956 1860     		str	r0, [r3]	@ unaligned
 15346 1958 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15347 195a 9A80     		strh	r2, [r3, #4]	@ unaligned
 15348 195c 0EE0     		b	.L622
 15349              	.L621:
2213:..\src/command_processing.c ****                 else
2214:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15350              		.loc 1 2214 0
 15351 195e 07F11C03 		add	r3, r7, #28
 15352 1962 1846     		mov	r0, r3
 15353 1964 FFF7FEFF 		bl	strlen
 15354 1968 0346     		mov	r3, r0
 15355 196a 1A46     		mov	r2, r3
 15356 196c 07F11C03 		add	r3, r7, #28
 15357 1970 1344     		add	r3, r3, r2
 15358 1972 734A     		ldr	r2, .L648+16
 15359 1974 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 347


 15360 1976 1860     		str	r0, [r3]	@ unaligned
 15361 1978 1279     		ldrb	r2, [r2, #4]
 15362 197a 1A71     		strb	r2, [r3, #4]
 15363              	.L622:
2215:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 15364              		.loc 1 2215 0
 15365 197c 07F11C03 		add	r3, r7, #28
 15366 1980 1846     		mov	r0, r3
 15367 1982 FFF7FEFF 		bl	strlen
 15368 1986 0346     		mov	r3, r0
 15369 1988 1A46     		mov	r2, r3
 15370 198a 07F11C03 		add	r3, r7, #28
 15371 198e 1344     		add	r3, r3, r2
 15372 1990 6E4A     		ldr	r2, .L648+28
 15373 1992 1C46     		mov	r4, r3
 15374 1994 1346     		mov	r3, r2
 15375 1996 07CB     		ldmia	r3!, {r0, r1, r2}
 15376 1998 2060     		str	r0, [r4]	@ unaligned
 15377 199a 6160     		str	r1, [r4, #4]	@ unaligned
 15378 199c A260     		str	r2, [r4, #8]	@ unaligned
 15379 199e 1B88     		ldrh	r3, [r3]	@ unaligned
 15380 19a0 A381     		strh	r3, [r4, #12]	@ unaligned
2216:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 15381              		.loc 1 2216 0
 15382 19a2 634A     		ldr	r2, .L648
 15383 19a4 D7F89430 		ldr	r3, [r7, #148]
 15384 19a8 1344     		add	r3, r3, r2
 15385 19aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15386 19ac 1946     		mov	r1, r3
 15387 19ae D7F88C20 		ldr	r2, [r7, #140]
 15388 19b2 0B46     		mov	r3, r1
 15389 19b4 9B00     		lsls	r3, r3, #2
 15390 19b6 0B44     		add	r3, r3, r1
 15391 19b8 1344     		add	r3, r3, r2
 15392 19ba 03F20523 		addw	r3, r3, #517
 15393 19be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15394 19c0 002B     		cmp	r3, #0
 15395 19c2 0FD0     		beq	.L623
2217:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15396              		.loc 1 2217 0
 15397 19c4 07F11C03 		add	r3, r7, #28
 15398 19c8 1846     		mov	r0, r3
 15399 19ca FFF7FEFF 		bl	strlen
 15400 19ce 0346     		mov	r3, r0
 15401 19d0 1A46     		mov	r2, r3
 15402 19d2 07F11C03 		add	r3, r7, #28
 15403 19d6 1344     		add	r3, r3, r2
 15404 19d8 584A     		ldr	r2, .L648+12
 15405 19da 1068     		ldr	r0, [r2]	@ unaligned
 15406 19dc 1860     		str	r0, [r3]	@ unaligned
 15407 19de 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15408 19e0 9A80     		strh	r2, [r3, #4]	@ unaligned
 15409 19e2 0EE0     		b	.L624
 15410              	.L623:
2218:..\src/command_processing.c ****                 else
2219:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15411              		.loc 1 2219 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 348


 15412 19e4 07F11C03 		add	r3, r7, #28
 15413 19e8 1846     		mov	r0, r3
 15414 19ea FFF7FEFF 		bl	strlen
 15415 19ee 0346     		mov	r3, r0
 15416 19f0 1A46     		mov	r2, r3
 15417 19f2 07F11C03 		add	r3, r7, #28
 15418 19f6 1344     		add	r3, r3, r2
 15419 19f8 514A     		ldr	r2, .L648+16
 15420 19fa 1068     		ldr	r0, [r2]	@ unaligned
 15421 19fc 1860     		str	r0, [r3]	@ unaligned
 15422 19fe 1279     		ldrb	r2, [r2, #4]
 15423 1a00 1A71     		strb	r2, [r3, #4]
 15424              	.L624:
2220:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 15425              		.loc 1 2220 0
 15426 1a02 07F11C03 		add	r3, r7, #28
 15427 1a06 1846     		mov	r0, r3
 15428 1a08 FFF7FEFF 		bl	strlen
 15429 1a0c 0346     		mov	r3, r0
 15430 1a0e 1A46     		mov	r2, r3
 15431 1a10 07F11C03 		add	r3, r7, #28
 15432 1a14 1344     		add	r3, r3, r2
 15433 1a16 4E4A     		ldr	r2, .L648+32
 15434 1a18 1C46     		mov	r4, r3
 15435 1a1a 1346     		mov	r3, r2
 15436 1a1c 07CB     		ldmia	r3!, {r0, r1, r2}
 15437 1a1e 2060     		str	r0, [r4]	@ unaligned
 15438 1a20 6160     		str	r1, [r4, #4]	@ unaligned
 15439 1a22 A260     		str	r2, [r4, #8]	@ unaligned
 15440 1a24 1A88     		ldrh	r2, [r3]	@ unaligned
 15441 1a26 9B78     		ldrb	r3, [r3, #2]
 15442 1a28 A281     		strh	r2, [r4, #12]	@ unaligned
 15443 1a2a A373     		strb	r3, [r4, #14]
2221:..\src/command_processing.c ****                 if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 15444              		.loc 1 2221 0
 15445 1a2c 404A     		ldr	r2, .L648
 15446 1a2e D7F89430 		ldr	r3, [r7, #148]
 15447 1a32 1344     		add	r3, r3, r2
 15448 1a34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15449 1a36 1946     		mov	r1, r3
 15450 1a38 D7F88C20 		ldr	r2, [r7, #140]
 15451 1a3c 0B46     		mov	r3, r1
 15452 1a3e 9B00     		lsls	r3, r3, #2
 15453 1a40 0B44     		add	r3, r3, r1
 15454 1a42 1344     		add	r3, r3, r2
 15455 1a44 03F20623 		addw	r3, r3, #518
 15456 1a48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15457 1a4a 002B     		cmp	r3, #0
 15458 1a4c 0FD0     		beq	.L625
2222:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 15459              		.loc 1 2222 0
 15460 1a4e 07F11C03 		add	r3, r7, #28
 15461 1a52 1846     		mov	r0, r3
 15462 1a54 FFF7FEFF 		bl	strlen
 15463 1a58 0346     		mov	r3, r0
 15464 1a5a 1A46     		mov	r2, r3
 15465 1a5c 07F11C03 		add	r3, r7, #28
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 349


 15466 1a60 1344     		add	r3, r3, r2
 15467 1a62 364A     		ldr	r2, .L648+12
 15468 1a64 1068     		ldr	r0, [r2]	@ unaligned
 15469 1a66 1860     		str	r0, [r3]	@ unaligned
 15470 1a68 9288     		ldrh	r2, [r2, #4]	@ unaligned
 15471 1a6a 9A80     		strh	r2, [r3, #4]	@ unaligned
 15472 1a6c 0EE0     		b	.L626
 15473              	.L625:
2223:..\src/command_processing.c ****                 else
2224:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 15474              		.loc 1 2224 0
 15475 1a6e 07F11C03 		add	r3, r7, #28
 15476 1a72 1846     		mov	r0, r3
 15477 1a74 FFF7FEFF 		bl	strlen
 15478 1a78 0346     		mov	r3, r0
 15479 1a7a 1A46     		mov	r2, r3
 15480 1a7c 07F11C03 		add	r3, r7, #28
 15481 1a80 1344     		add	r3, r3, r2
 15482 1a82 2F4A     		ldr	r2, .L648+16
 15483 1a84 1068     		ldr	r0, [r2]	@ unaligned
 15484 1a86 1860     		str	r0, [r3]	@ unaligned
 15485 1a88 1279     		ldrb	r2, [r2, #4]
 15486 1a8a 1A71     		strb	r2, [r3, #4]
 15487              	.L626:
2225:..\src/command_processing.c ****                      
2226:..\src/command_processing.c ****                 strcat(info_string, str);
 15488              		.loc 1 2226 0 discriminator 2
 15489 1a8c 07F11C03 		add	r3, r7, #28
 15490 1a90 1946     		mov	r1, r3
 15491 1a92 7869     		ldr	r0, [r7, #20]
 15492 1a94 FFF7FEFF 		bl	strcat
2196:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15493              		.loc 1 2196 0 discriminator 2
 15494 1a98 D7F89430 		ldr	r3, [r7, #148]
 15495 1a9c 0133     		adds	r3, r3, #1
 15496 1a9e C7F89430 		str	r3, [r7, #148]
 15497              	.L616:
2196:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 15498              		.loc 1 2196 0 is_stmt 0 discriminator 1
 15499 1aa2 2C4B     		ldr	r3, .L648+36
 15500 1aa4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15501 1aa6 1A46     		mov	r2, r3
 15502 1aa8 D7F89430 		ldr	r3, [r7, #148]
 15503 1aac 9A42     		cmp	r2, r3
 15504 1aae 3FF793AE 		bgt	.L627
2227:..\src/command_processing.c ****             }       
2228:..\src/command_processing.c ****             
2229:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 15505              		.loc 1 2229 0 is_stmt 1
 15506 1ab2 7869     		ldr	r0, [r7, #20]
 15507 1ab4 FFF7FEFF 		bl	strlen
 15508 1ab8 0346     		mov	r3, r0
 15509 1aba 1A46     		mov	r2, r3
 15510 1abc 7B69     		ldr	r3, [r7, #20]
 15511 1abe 1344     		add	r3, r3, r2
 15512 1ac0 254A     		ldr	r2, .L648+40
 15513 1ac2 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 350


 15514 1ac4 9278     		ldrb	r2, [r2, #2]
 15515 1ac6 1980     		strh	r1, [r3]	@ unaligned
 15516 1ac8 9A70     		strb	r2, [r3, #2]
2230:..\src/command_processing.c ****           
2231:..\src/command_processing.c ****             IMU_reading_info(info_string);
 15517              		.loc 1 2231 0
 15518 1aca 7869     		ldr	r0, [r7, #20]
 15519 1acc FFF7FEFF 		bl	IMU_reading_info
 15520              	.L615:
2232:..\src/command_processing.c ****         }
2233:..\src/command_processing.c ****         
2234:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 15521              		.loc 1 2234 0
 15522 1ad0 7869     		ldr	r0, [r7, #20]
 15523 1ad2 FFF7FEFF 		bl	strlen
 15524 1ad6 0346     		mov	r3, r0
 15525 1ad8 1A46     		mov	r2, r3
 15526 1ada 7B69     		ldr	r3, [r7, #20]
 15527 1adc 1344     		add	r3, r3, r2
 15528 1ade 1E4A     		ldr	r2, .L648+40
 15529 1ae0 1188     		ldrh	r1, [r2]	@ unaligned
 15530 1ae2 9278     		ldrb	r2, [r2, #2]
 15531 1ae4 1980     		strh	r1, [r3]	@ unaligned
 15532 1ae6 9A70     		strb	r2, [r3, #2]
2235:..\src/command_processing.c **** 
2236:..\src/command_processing.c **** #ifdef GENERIC_FW   
2237:..\src/command_processing.c ****         int j;
2238:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
2239:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
2240:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
2241:..\src/command_processing.c ****             strcat(info_string, str);
2242:..\src/command_processing.c ****             if (MEM_P->dev.right_left == i) {
2243:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (MEM_P->dev.right_left?"LEFT":"RIGHT")
2244:..\src/command_processing.c ****                 strcat(info_string, str);
2245:..\src/command_processing.c ****             }
2246:..\src/command_processing.c ****             strcat(info_string, "\r\n");
2247:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
2248:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
2249:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
2250:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
2251:..\src/command_processing.c ****                     strcat(info_string, str);
2252:..\src/command_processing.c ****                 }
2253:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
2254:..\src/command_processing.c ****             }
2255:..\src/command_processing.c ****         }
2256:..\src/command_processing.c **** #endif   
2257:..\src/command_processing.c ****         
2258:..\src/command_processing.c **** #ifdef MASTER_FW
2259:..\src/command_processing.c ****         if (MEM_P->MS.slave_comm_active)
2260:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: YES\r\n");
2261:..\src/command_processing.c ****         else
2262:..\src/command_processing.c ****             strcat(info_string, "Slave communication active: NO\r\n");
2263:..\src/command_processing.c **** 
2264:..\src/command_processing.c ****         sprintf(str, "Slave ID: %d\r\n", (int)MEM_P->MS.slave_ID);
2265:..\src/command_processing.c ****         strcat(info_string, str);
2266:..\src/command_processing.c **** #endif
2267:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 351


2268:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 15533              		.loc 1 2268 0
 15534 1ae8 1C4B     		ldr	r3, .L648+44
 15535 1aea 1B88     		ldrh	r3, [r3]
 15536 1aec 1A46     		mov	r2, r3
 15537 1aee 1C4B     		ldr	r3, .L648+48
 15538 1af0 1B88     		ldrh	r3, [r3]
 15539 1af2 D21A     		subs	r2, r2, r3
 15540 1af4 07F11C03 		add	r3, r7, #28
 15541 1af8 1A49     		ldr	r1, .L648+52
 15542 1afa 1846     		mov	r0, r3
 15543 1afc FFF7FEFF 		bl	sprintf
2269:..\src/command_processing.c ****         strcat(info_string, str);
 15544              		.loc 1 2269 0
 15545 1b00 07F11C03 		add	r3, r7, #28
 15546 1b04 1946     		mov	r1, r3
 15547 1b06 7869     		ldr	r0, [r7, #20]
 15548 1b08 FFF7FEFF 		bl	strcat
2270:..\src/command_processing.c ****   
2271:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 15549              		.loc 1 2271 0
 15550 1b0c 7869     		ldr	r0, [r7, #20]
 15551 1b0e FFF7FEFF 		bl	strlen
 15552 1b12 0346     		mov	r3, r0
 15553 1b14 1A46     		mov	r2, r3
 15554 1b16 7B69     		ldr	r3, [r7, #20]
 15555 1b18 1344     		add	r3, r3, r2
 15556 1b1a 134A     		ldr	r2, .L648+56
 15557 1b1c 1188     		ldrh	r1, [r2]	@ unaligned
 15558 1b1e 9278     		ldrb	r2, [r2, #2]
 15559 1b20 1980     		strh	r1, [r3]	@ unaligned
 15560 1b22 9A70     		strb	r2, [r3, #2]
 15561              	.L629:
 15562              	.LBE16:
2272:..\src/command_processing.c ****     }
2273:..\src/command_processing.c **** }
 15563              		.loc 1 2273 0
 15564 1b24 00BF     		nop
 15565 1b26 9C37     		adds	r7, r7, #156
 15566              		.cfi_def_cfa_offset 36
 15567 1b28 BD46     		mov	sp, r7
 15568              		.cfi_def_cfa_register 13
 15569              		@ sp needed
 15570 1b2a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 15571              	.L649:
 15572 1b2e 00BF     		.align	2
 15573              	.L648:
 15574 1b30 00000000 		.word	IMU_connected
 15575 1b34 C0170000 		.word	.LC229
 15576 1b38 D4170000 		.word	.LC230
 15577 1b3c C4110000 		.word	.LC165
 15578 1b40 CC110000 		.word	.LC166
 15579 1b44 E8170000 		.word	.LC231
 15580 1b48 F8170000 		.word	.LC232
 15581 1b4c 0C180000 		.word	.LC233
 15582 1b50 1C180000 		.word	.LC234
 15583 1b54 00000000 		.word	N_IMU_Connected
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 352


 15584 1b58 18100000 		.word	.LC143
 15585 1b5c 00000000 		.word	timer_value0
 15586 1b60 00000000 		.word	timer_value
 15587 1b64 2C180000 		.word	.LC235
 15588 1b68 48180000 		.word	.LC236
 15589              		.cfi_endproc
 15590              	.LFE72:
 15591              		.size	prepare_generic_info, .-prepare_generic_info
 15592              		.section	.rodata
 15593              		.align	2
 15594              	.LC237:
 15595 184c 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 15595      41474520 
 15595      53544154 
 15595      49535449 
 15595      43530D0A 
 15596 1861 000000   		.align	2
 15597              	.LC238:
 15598 1864 44617465 		.ascii	"Date of HW maintenance: %02d/%02d/20%02d\015\012\000"
 15598      206F6620 
 15598      4857206D 
 15598      61696E74 
 15598      656E616E 
 15599 188f 00       		.align	2
 15600              	.LC239:
 15601 1890 44617465 		.ascii	"Date of usage stats period begin: %02d/%02d/20%02d\015"
 15601      206F6620 
 15601      75736167 
 15601      65207374 
 15601      61747320 
 15602 18c3 0A00     		.ascii	"\012\000"
 15603 18c5 000000   		.align	2
 15604              	.LC240:
 15605 18c8 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 15605      20636865 
 15605      636B6564 
 15605      2054696D 
 15605      653A2025 
 15606 18fb 0A00     		.ascii	"\012\000"
 15607 18fd 000000   		.align	2
 15608              	.LC241:
 15609 1900 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 15609      74696F6E 
 15609      73206869 
 15609      73746F67 
 15609      72616D20 
 15610 191f 00       		.align	2
 15611              	.LC242:
 15612 1920 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 15612      2564205B 
 15612      25642D25 
 15612      645D3A20 
 15612      256C750D 
 15613 1936 0000     		.align	2
 15614              	.LC243:
 15615 1938 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 15615      656E7420 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 353


 15615      68697374 
 15615      6F677261 
 15615      6D20286D 
 15616 1952 0000     		.align	2
 15617              	.LC244:
 15618 1954 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 15618      73686F6C 
 15618      64202564 
 15618      205B2564 
 15618      2D25645D 
 15619              		.align	2
 15620              	.LC245:
 15621 1970 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 15621      61637469 
 15621      76617469 
 15621      6F6E7320 
 15621      636F756E 
 15622 1992 0000     		.align	2
 15623              	.LC246:
 15624 1994 52657374 		.ascii	"Rest position occurrences: %lu\000"
 15624      20706F73 
 15624      6974696F 
 15624      6E206F63 
 15624      63757272 
 15625 19b3 00       		.align	2
 15626              	.LC247:
 15627 19b4 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 15627      6520746F 
 15627      74616C20 
 15627      64697370 
 15627      6C616365 
 15628 19da 0000     		.align	2
 15629              	.LC248:
 15630 19dc 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 15630      6C20706F 
 15630      77657220 
 15630      6F6E2074 
 15630      696D6520 
 15631 19fb 00       		.align	2
 15632              	.LC249:
 15633 19fc 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 15633      6C207265 
 15633      73742070 
 15633      6F736974 
 15633      696F6E20 
 15634              		.section	.text.prepare_counter_info,"ax",%progbits
 15635              		.align	2
 15636              		.global	prepare_counter_info
 15637              		.thumb
 15638              		.thumb_func
 15639              		.type	prepare_counter_info, %function
 15640              	prepare_counter_info:
 15641              	.LFB73:
2274:..\src/command_processing.c **** 
2275:..\src/command_processing.c **** //==============================================================================
2276:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
2277:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 354


2278:..\src/command_processing.c **** 
2279:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
2280:..\src/command_processing.c **** {
 15642              		.loc 1 2280 0
 15643              		.cfi_startproc
 15644              		@ args = 0, pretend = 0, frame = 128
 15645              		@ frame_needed = 1, uses_anonymous_args = 0
 15646 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 15647              		.cfi_def_cfa_offset 20
 15648              		.cfi_offset 4, -20
 15649              		.cfi_offset 5, -16
 15650              		.cfi_offset 6, -12
 15651              		.cfi_offset 7, -8
 15652              		.cfi_offset 14, -4
 15653 0002 A5B0     		sub	sp, sp, #148
 15654              		.cfi_def_cfa_offset 168
 15655 0004 04AF     		add	r7, sp, #16
 15656              		.cfi_def_cfa 7, 152
 15657 0006 7860     		str	r0, [r7, #4]
2281:..\src/command_processing.c ****     char str[100];  
2282:..\src/command_processing.c ****     int i;
2283:..\src/command_processing.c ****     int step;
2284:..\src/command_processing.c **** 
2285:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 15658              		.loc 1 2285 0
 15659 0008 7D4B     		ldr	r3, .L656
 15660 000a BB67     		str	r3, [r7, #120]
2286:..\src/command_processing.c ****     struct st_motor* MOT = &(MEM_P->motor[0]);      // Default motor
 15661              		.loc 1 2286 0
 15662 000c BB6F     		ldr	r3, [r7, #120]
 15663 000e B033     		adds	r3, r3, #176
 15664 0010 7B67     		str	r3, [r7, #116]
2287:..\src/command_processing.c ****     uint8 ENC_L = MOT->encoder_line;                // Associated encoder line
 15665              		.loc 1 2287 0
 15666 0012 7B6F     		ldr	r3, [r7, #116]
 15667 0014 93F86030 		ldrb	r3, [r3, #96]
 15668 0018 87F87330 		strb	r3, [r7, #115]
2288:..\src/command_processing.c ****     
2289:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 15669              		.loc 1 2289 0
 15670 001c 7868     		ldr	r0, [r7, #4]
 15671 001e FFF7FEFF 		bl	strlen
 15672 0022 0346     		mov	r3, r0
 15673 0024 1A46     		mov	r2, r3
 15674 0026 7B68     		ldr	r3, [r7, #4]
 15675 0028 1344     		add	r3, r3, r2
 15676 002a 764A     		ldr	r2, .L656+4
 15677 002c 1D46     		mov	r5, r3
 15678 002e 1446     		mov	r4, r2
 15679 0030 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 15680 0032 2860     		str	r0, [r5]	@ unaligned
 15681 0034 6960     		str	r1, [r5, #4]	@ unaligned
 15682 0036 AA60     		str	r2, [r5, #8]	@ unaligned
 15683 0038 EB60     		str	r3, [r5, #12]	@ unaligned
 15684 003a 2068     		ldr	r0, [r4]	@ unaligned
 15685 003c 2861     		str	r0, [r5, #16]	@ unaligned
 15686 003e 2379     		ldrb	r3, [r4, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 355


 15687 0040 2B75     		strb	r3, [r5, #20]
2290:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15688              		.loc 1 2290 0
 15689 0042 7868     		ldr	r0, [r7, #4]
 15690 0044 FFF7FEFF 		bl	strlen
 15691 0048 0346     		mov	r3, r0
 15692 004a 1A46     		mov	r2, r3
 15693 004c 7B68     		ldr	r3, [r7, #4]
 15694 004e 1344     		add	r3, r3, r2
 15695 0050 6D4A     		ldr	r2, .L656+8
 15696 0052 1188     		ldrh	r1, [r2]	@ unaligned
 15697 0054 9278     		ldrb	r2, [r2, #2]
 15698 0056 1980     		strh	r1, [r3]	@ unaligned
 15699 0058 9A70     		strb	r2, [r3, #2]
2291:..\src/command_processing.c ****     
2292:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 15700              		.loc 1 2292 0
 15701 005a BB6F     		ldr	r3, [r7, #120]
 15702 005c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15703 0060 1A46     		mov	r2, r3
 15704 0062 BB6F     		ldr	r3, [r7, #120]
 15705 0064 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 15706 0068 1946     		mov	r1, r3
 15707 006a BB6F     		ldr	r3, [r7, #120]
 15708 006c 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 15709 0070 07F10800 		add	r0, r7, #8
 15710 0074 0093     		str	r3, [sp]
 15711 0076 0B46     		mov	r3, r1
 15712 0078 6449     		ldr	r1, .L656+12
 15713 007a FFF7FEFF 		bl	sprintf
2293:..\src/command_processing.c ****     strcat(info_string, str);
 15714              		.loc 1 2293 0
 15715 007e 07F10803 		add	r3, r7, #8
 15716 0082 1946     		mov	r1, r3
 15717 0084 7868     		ldr	r0, [r7, #4]
 15718 0086 FFF7FEFF 		bl	strcat
2294:..\src/command_processing.c ****     
2295:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 15719              		.loc 1 2295 0
 15720 008a BB6F     		ldr	r3, [r7, #120]
 15721 008c 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 15722 0090 1A46     		mov	r2, r3
 15723 0092 BB6F     		ldr	r3, [r7, #120]
 15724 0094 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 15725 0098 1946     		mov	r1, r3
 15726 009a BB6F     		ldr	r3, [r7, #120]
 15727 009c 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 15728 00a0 07F10800 		add	r0, r7, #8
 15729 00a4 0093     		str	r3, [sp]
 15730 00a6 0B46     		mov	r3, r1
 15731 00a8 5949     		ldr	r1, .L656+16
 15732 00aa FFF7FEFF 		bl	sprintf
2296:..\src/command_processing.c ****     strcat(info_string, str);
 15733              		.loc 1 2296 0
 15734 00ae 07F10803 		add	r3, r7, #8
 15735 00b2 1946     		mov	r1, r3
 15736 00b4 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 356


 15737 00b6 FFF7FEFF 		bl	strcat
2297:..\src/command_processing.c ****             
2298:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)MEM_P->exp.curr_tim
 15738              		.loc 1 2298 0
 15739 00ba BB6F     		ldr	r3, [r7, #120]
 15740 00bc 93F82032 		ldrb	r3, [r3, #544]	@ zero_extendqisi2
 15741 00c0 1D46     		mov	r5, r3
 15742 00c2 BB6F     		ldr	r3, [r7, #120]
 15743 00c4 93F82132 		ldrb	r3, [r3, #545]	@ zero_extendqisi2
 15744 00c8 1E46     		mov	r6, r3
 15745 00ca BB6F     		ldr	r3, [r7, #120]
 15746 00cc 93F82232 		ldrb	r3, [r3, #546]	@ zero_extendqisi2
 15747 00d0 1A46     		mov	r2, r3
 15748 00d2 BB6F     		ldr	r3, [r7, #120]
 15749 00d4 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 15750 00d8 1946     		mov	r1, r3
 15751 00da BB6F     		ldr	r3, [r7, #120]
 15752 00dc 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 15753 00e0 1C46     		mov	r4, r3
 15754 00e2 BB6F     		ldr	r3, [r7, #120]
 15755 00e4 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 15756 00e8 07F10800 		add	r0, r7, #8
 15757 00ec 0393     		str	r3, [sp, #12]
 15758 00ee 0294     		str	r4, [sp, #8]
 15759 00f0 0191     		str	r1, [sp, #4]
 15760 00f2 0092     		str	r2, [sp]
 15761 00f4 3346     		mov	r3, r6
 15762 00f6 2A46     		mov	r2, r5
 15763 00f8 4649     		ldr	r1, .L656+20
 15764 00fa FFF7FEFF 		bl	sprintf
2299:..\src/command_processing.c ****     strcat(info_string, str);
 15765              		.loc 1 2299 0
 15766 00fe 07F10803 		add	r3, r7, #8
 15767 0102 1946     		mov	r1, r3
 15768 0104 7868     		ldr	r0, [r7, #4]
 15769 0106 FFF7FEFF 		bl	strcat
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 15770              		.loc 1 2301 0
 15771 010a 07F10803 		add	r3, r7, #8
 15772 010e 424A     		ldr	r2, .L656+24
 15773 0110 1C46     		mov	r4, r3
 15774 0112 1546     		mov	r5, r2
 15775 0114 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15776 0116 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15777 0118 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 15778 011c 07C4     		stmia	r4!, {r0, r1, r2}
 15779 011e 2380     		strh	r3, [r4]	@ movhi
 15780 0120 0234     		adds	r4, r4, #2
 15781 0122 1B0C     		lsrs	r3, r3, #16
 15782 0124 2370     		strb	r3, [r4]
2302:..\src/command_processing.c ****     strcat(info_string, str);
 15783              		.loc 1 2302 0
 15784 0126 07F10803 		add	r3, r7, #8
 15785 012a 1946     		mov	r1, r3
 15786 012c 7868     		ldr	r0, [r7, #4]
 15787 012e FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 357


2303:..\src/command_processing.c ****     step = ( (int)(MOT->pos_lim_sup >> MEM_P->enc[ENC_L].res[0]) / 10);
 15788              		.loc 1 2303 0
 15789 0132 7B6F     		ldr	r3, [r7, #116]
 15790 0134 996B     		ldr	r1, [r3, #56]
 15791 0136 97F87320 		ldrb	r2, [r7, #115]	@ zero_extendqisi2
 15792 013a B86F     		ldr	r0, [r7, #120]
 15793 013c 1346     		mov	r3, r2
 15794 013e 5B00     		lsls	r3, r3, #1
 15795 0140 1344     		add	r3, r3, r2
 15796 0142 1B01     		lsls	r3, r3, #4
 15797 0144 0344     		add	r3, r3, r0
 15798 0146 03F29513 		addw	r3, r3, #405
 15799 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15800 014c 41FA03F3 		asr	r3, r1, r3
 15801 0150 324A     		ldr	r2, .L656+28
 15802 0152 82FB0312 		smull	r1, r2, r2, r3
 15803 0156 9210     		asrs	r2, r2, #2
 15804 0158 DB17     		asrs	r3, r3, #31
 15805 015a D31A     		subs	r3, r2, r3
 15806 015c FB66     		str	r3, [r7, #108]
2304:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15807              		.loc 1 2304 0
 15808 015e 0123     		movs	r3, #1
 15809 0160 FB67     		str	r3, [r7, #124]
 15810 0162 21E0     		b	.L651
 15811              	.L652:
2305:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), MEM_P->cnt.position_hist
 15812              		.loc 1 2305 0 discriminator 3
 15813 0164 FB6F     		ldr	r3, [r7, #124]
 15814 0166 013B     		subs	r3, r3, #1
 15815 0168 FA6E     		ldr	r2, [r7, #108]
 15816 016a 02FB03F3 		mul	r3, r2, r3
 15817 016e 5C1C     		adds	r4, r3, #1
 15818 0170 FB6E     		ldr	r3, [r7, #108]
 15819 0172 FA6F     		ldr	r2, [r7, #124]
 15820 0174 02FB03F3 		mul	r3, r2, r3
 15821 0178 FA6F     		ldr	r2, [r7, #124]
 15822 017a 511E     		subs	r1, r2, #1
 15823 017c BA6F     		ldr	r2, [r7, #120]
 15824 017e 0631     		adds	r1, r1, #6
 15825 0180 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15826 0184 07F10800 		add	r0, r7, #8
 15827 0188 0192     		str	r2, [sp, #4]
 15828 018a 0093     		str	r3, [sp]
 15829 018c 2346     		mov	r3, r4
 15830 018e FA6F     		ldr	r2, [r7, #124]
 15831 0190 2349     		ldr	r1, .L656+32
 15832 0192 FFF7FEFF 		bl	sprintf
2306:..\src/command_processing.c ****         strcat(info_string, str);
 15833              		.loc 1 2306 0 discriminator 3
 15834 0196 07F10803 		add	r3, r7, #8
 15835 019a 1946     		mov	r1, r3
 15836 019c 7868     		ldr	r0, [r7, #4]
 15837 019e FFF7FEFF 		bl	strcat
2304:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15838              		.loc 1 2304 0 discriminator 3
 15839 01a2 FB6F     		ldr	r3, [r7, #124]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 358


 15840 01a4 0133     		adds	r3, r3, #1
 15841 01a6 FB67     		str	r3, [r7, #124]
 15842              	.L651:
2304:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 15843              		.loc 1 2304 0 is_stmt 0 discriminator 1
 15844 01a8 FB6F     		ldr	r3, [r7, #124]
 15845 01aa 0A2B     		cmp	r3, #10
 15846 01ac DADD     		ble	.L652
2307:..\src/command_processing.c ****     }
2308:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15847              		.loc 1 2308 0 is_stmt 1
 15848 01ae 7868     		ldr	r0, [r7, #4]
 15849 01b0 FFF7FEFF 		bl	strlen
 15850 01b4 0346     		mov	r3, r0
 15851 01b6 1A46     		mov	r2, r3
 15852 01b8 7B68     		ldr	r3, [r7, #4]
 15853 01ba 1344     		add	r3, r3, r2
 15854 01bc 124A     		ldr	r2, .L656+8
 15855 01be 1188     		ldrh	r1, [r2]	@ unaligned
 15856 01c0 9278     		ldrb	r2, [r2, #2]
 15857 01c2 1980     		strh	r1, [r3]	@ unaligned
 15858 01c4 9A70     		strb	r2, [r3, #2]
2309:..\src/command_processing.c ****     
2310:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 15859              		.loc 1 2310 0
 15860 01c6 07F10803 		add	r3, r7, #8
 15861 01ca 164A     		ldr	r2, .L656+36
 15862 01cc 1C46     		mov	r4, r3
 15863 01ce 1546     		mov	r5, r2
 15864 01d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 15865 01d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 15866 01d4 95E80700 		ldmia	r5, {r0, r1, r2}
 15867 01d8 03C4     		stmia	r4!, {r0, r1}
 15868 01da 2280     		strh	r2, [r4]	@ movhi
2311:..\src/command_processing.c ****     strcat(info_string, str);
 15869              		.loc 1 2311 0
 15870 01dc 07F10803 		add	r3, r7, #8
 15871 01e0 1946     		mov	r1, r3
 15872 01e2 7868     		ldr	r0, [r7, #4]
 15873 01e4 FFF7FEFF 		bl	strcat
2312:..\src/command_processing.c ****     step = ( (int)(MOT->current_limit) / 4);
 15874              		.loc 1 2312 0
 15875 01e8 7B6F     		ldr	r3, [r7, #116]
 15876 01ea B3F95C30 		ldrsh	r3, [r3, #92]
 15877 01ee 002B     		cmp	r3, #0
 15878 01f0 00DA     		bge	.L653
 15879 01f2 0333     		adds	r3, r3, #3
 15880              	.L653:
 15881 01f4 9B10     		asrs	r3, r3, #2
 15882 01f6 1BB2     		sxth	r3, r3
 15883 01f8 FB66     		str	r3, [r7, #108]
2313:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15884              		.loc 1 2313 0
 15885 01fa 0123     		movs	r3, #1
 15886 01fc FB67     		str	r3, [r7, #124]
 15887 01fe 34E0     		b	.L654
 15888              	.L657:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 359


 15889              		.align	2
 15890              	.L656:
 15891 0200 00000000 		.word	g_mem
 15892 0204 4C180000 		.word	.LC237
 15893 0208 18100000 		.word	.LC143
 15894 020c 64180000 		.word	.LC238
 15895 0210 90180000 		.word	.LC239
 15896 0214 C8180000 		.word	.LC240
 15897 0218 00190000 		.word	.LC241
 15898 021c 67666666 		.word	1717986919
 15899 0220 20190000 		.word	.LC242
 15900 0224 38190000 		.word	.LC243
 15901              	.L655:
2314:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), MEM_P->cnt.current_h
 15902              		.loc 1 2314 0 discriminator 3
 15903 0228 FB6F     		ldr	r3, [r7, #124]
 15904 022a 013B     		subs	r3, r3, #1
 15905 022c FA6E     		ldr	r2, [r7, #108]
 15906 022e 02FB03F4 		mul	r4, r2, r3
 15907 0232 FB6E     		ldr	r3, [r7, #108]
 15908 0234 FA6F     		ldr	r2, [r7, #124]
 15909 0236 02FB03F3 		mul	r3, r2, r3
 15910 023a FA6F     		ldr	r2, [r7, #124]
 15911 023c 511E     		subs	r1, r2, #1
 15912 023e BA6F     		ldr	r2, [r7, #120]
 15913 0240 1031     		adds	r1, r1, #16
 15914 0242 52F82120 		ldr	r2, [r2, r1, lsl #2]
 15915 0246 07F10800 		add	r0, r7, #8
 15916 024a 0192     		str	r2, [sp, #4]
 15917 024c 0093     		str	r3, [sp]
 15918 024e 2346     		mov	r3, r4
 15919 0250 FA6F     		ldr	r2, [r7, #124]
 15920 0252 5149     		ldr	r1, .L658
 15921 0254 FFF7FEFF 		bl	sprintf
2315:..\src/command_processing.c ****         strcat(info_string, str);
 15922              		.loc 1 2315 0 discriminator 3
 15923 0258 07F10803 		add	r3, r7, #8
 15924 025c 1946     		mov	r1, r3
 15925 025e 7868     		ldr	r0, [r7, #4]
 15926 0260 FFF7FEFF 		bl	strcat
2313:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15927              		.loc 1 2313 0 discriminator 3
 15928 0264 FB6F     		ldr	r3, [r7, #124]
 15929 0266 0133     		adds	r3, r3, #1
 15930 0268 FB67     		str	r3, [r7, #124]
 15931              	.L654:
2313:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 15932              		.loc 1 2313 0 is_stmt 0 discriminator 1
 15933 026a FB6F     		ldr	r3, [r7, #124]
 15934 026c 042B     		cmp	r3, #4
 15935 026e DBDD     		ble	.L655
2316:..\src/command_processing.c ****     }
2317:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15936              		.loc 1 2317 0 is_stmt 1
 15937 0270 7868     		ldr	r0, [r7, #4]
 15938 0272 FFF7FEFF 		bl	strlen
 15939 0276 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 360


 15940 0278 1A46     		mov	r2, r3
 15941 027a 7B68     		ldr	r3, [r7, #4]
 15942 027c 1344     		add	r3, r3, r2
 15943 027e 474A     		ldr	r2, .L658+4
 15944 0280 1188     		ldrh	r1, [r2]	@ unaligned
 15945 0282 9278     		ldrb	r2, [r2, #2]
 15946 0284 1980     		strh	r1, [r3]	@ unaligned
 15947 0286 9A70     		strb	r2, [r3, #2]
2318:..\src/command_processing.c ****             
2319:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", MEM_P->cnt.emg_counter[0], MEM_P->cnt.emg_cou
 15948              		.loc 1 2319 0
 15949 0288 BB6F     		ldr	r3, [r7, #120]
 15950 028a 1A69     		ldr	r2, [r3, #16]
 15951 028c BB6F     		ldr	r3, [r7, #120]
 15952 028e 5B69     		ldr	r3, [r3, #20]
 15953 0290 07F10800 		add	r0, r7, #8
 15954 0294 4249     		ldr	r1, .L658+8
 15955 0296 FFF7FEFF 		bl	sprintf
2320:..\src/command_processing.c ****     strcat(info_string, str);
 15956              		.loc 1 2320 0
 15957 029a 07F10803 		add	r3, r7, #8
 15958 029e 1946     		mov	r1, r3
 15959 02a0 7868     		ldr	r0, [r7, #4]
 15960 02a2 FFF7FEFF 		bl	strcat
2321:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15961              		.loc 1 2321 0
 15962 02a6 7868     		ldr	r0, [r7, #4]
 15963 02a8 FFF7FEFF 		bl	strlen
 15964 02ac 0346     		mov	r3, r0
 15965 02ae 1A46     		mov	r2, r3
 15966 02b0 7B68     		ldr	r3, [r7, #4]
 15967 02b2 1344     		add	r3, r3, r2
 15968 02b4 394A     		ldr	r2, .L658+4
 15969 02b6 1188     		ldrh	r1, [r2]	@ unaligned
 15970 02b8 9278     		ldrb	r2, [r2, #2]
 15971 02ba 1980     		strh	r1, [r3]	@ unaligned
 15972 02bc 9A70     		strb	r2, [r3, #2]
2322:..\src/command_processing.c ****     
2323:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", MEM_P->cnt.rest_counter);
 15973              		.loc 1 2323 0
 15974 02be BB6F     		ldr	r3, [r7, #120]
 15975 02c0 1A6D     		ldr	r2, [r3, #80]
 15976 02c2 07F10803 		add	r3, r7, #8
 15977 02c6 3749     		ldr	r1, .L658+12
 15978 02c8 1846     		mov	r0, r3
 15979 02ca FFF7FEFF 		bl	sprintf
2324:..\src/command_processing.c ****     strcat(info_string, str);
 15980              		.loc 1 2324 0
 15981 02ce 07F10803 		add	r3, r7, #8
 15982 02d2 1946     		mov	r1, r3
 15983 02d4 7868     		ldr	r0, [r7, #4]
 15984 02d6 FFF7FEFF 		bl	strcat
2325:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 15985              		.loc 1 2325 0
 15986 02da 7868     		ldr	r0, [r7, #4]
 15987 02dc FFF7FEFF 		bl	strlen
 15988 02e0 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 361


 15989 02e2 1A46     		mov	r2, r3
 15990 02e4 7B68     		ldr	r3, [r7, #4]
 15991 02e6 1344     		add	r3, r3, r2
 15992 02e8 2C4A     		ldr	r2, .L658+4
 15993 02ea 1188     		ldrh	r1, [r2]	@ unaligned
 15994 02ec 9278     		ldrb	r2, [r2, #2]
 15995 02ee 1980     		strh	r1, [r3]	@ unaligned
 15996 02f0 9A70     		strb	r2, [r3, #2]
2326:..\src/command_processing.c ****     
2327:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", MEM_P->cnt.wire_disp);
 15997              		.loc 1 2327 0
 15998 02f2 BB6F     		ldr	r3, [r7, #120]
 15999 02f4 5A6D     		ldr	r2, [r3, #84]
 16000 02f6 07F10803 		add	r3, r7, #8
 16001 02fa 2B49     		ldr	r1, .L658+16
 16002 02fc 1846     		mov	r0, r3
 16003 02fe FFF7FEFF 		bl	sprintf
2328:..\src/command_processing.c ****     strcat(info_string, str);
 16004              		.loc 1 2328 0
 16005 0302 07F10803 		add	r3, r7, #8
 16006 0306 1946     		mov	r1, r3
 16007 0308 7868     		ldr	r0, [r7, #4]
 16008 030a FFF7FEFF 		bl	strcat
2329:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16009              		.loc 1 2329 0
 16010 030e 7868     		ldr	r0, [r7, #4]
 16011 0310 FFF7FEFF 		bl	strlen
 16012 0314 0346     		mov	r3, r0
 16013 0316 1A46     		mov	r2, r3
 16014 0318 7B68     		ldr	r3, [r7, #4]
 16015 031a 1344     		add	r3, r3, r2
 16016 031c 1F4A     		ldr	r2, .L658+4
 16017 031e 1188     		ldrh	r1, [r2]	@ unaligned
 16018 0320 9278     		ldrb	r2, [r2, #2]
 16019 0322 1980     		strh	r1, [r3]	@ unaligned
 16020 0324 9A70     		strb	r2, [r3, #2]
2330:..\src/command_processing.c ****     
2331:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", MEM_P->cnt.total_time_on);
 16021              		.loc 1 2331 0
 16022 0326 BB6F     		ldr	r3, [r7, #120]
 16023 0328 9A6D     		ldr	r2, [r3, #88]
 16024 032a 07F10803 		add	r3, r7, #8
 16025 032e 1F49     		ldr	r1, .L658+20
 16026 0330 1846     		mov	r0, r3
 16027 0332 FFF7FEFF 		bl	sprintf
2332:..\src/command_processing.c ****     strcat(info_string, str);
 16028              		.loc 1 2332 0
 16029 0336 07F10803 		add	r3, r7, #8
 16030 033a 1946     		mov	r1, r3
 16031 033c 7868     		ldr	r0, [r7, #4]
 16032 033e FFF7FEFF 		bl	strcat
2333:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16033              		.loc 1 2333 0
 16034 0342 7868     		ldr	r0, [r7, #4]
 16035 0344 FFF7FEFF 		bl	strlen
 16036 0348 0346     		mov	r3, r0
 16037 034a 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 362


 16038 034c 7B68     		ldr	r3, [r7, #4]
 16039 034e 1344     		add	r3, r3, r2
 16040 0350 124A     		ldr	r2, .L658+4
 16041 0352 1188     		ldrh	r1, [r2]	@ unaligned
 16042 0354 9278     		ldrb	r2, [r2, #2]
 16043 0356 1980     		strh	r1, [r3]	@ unaligned
 16044 0358 9A70     		strb	r2, [r3, #2]
2334:..\src/command_processing.c ****     
2335:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", MEM_P->cnt.total_time_rest);
 16045              		.loc 1 2335 0
 16046 035a BB6F     		ldr	r3, [r7, #120]
 16047 035c DA6D     		ldr	r2, [r3, #92]
 16048 035e 07F10803 		add	r3, r7, #8
 16049 0362 1349     		ldr	r1, .L658+24
 16050 0364 1846     		mov	r0, r3
 16051 0366 FFF7FEFF 		bl	sprintf
2336:..\src/command_processing.c ****     strcat(info_string, str);
 16052              		.loc 1 2336 0
 16053 036a 07F10803 		add	r3, r7, #8
 16054 036e 1946     		mov	r1, r3
 16055 0370 7868     		ldr	r0, [r7, #4]
 16056 0372 FFF7FEFF 		bl	strcat
2337:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 16057              		.loc 1 2337 0
 16058 0376 7868     		ldr	r0, [r7, #4]
 16059 0378 FFF7FEFF 		bl	strlen
 16060 037c 0346     		mov	r3, r0
 16061 037e 1A46     		mov	r2, r3
 16062 0380 7B68     		ldr	r3, [r7, #4]
 16063 0382 1344     		add	r3, r3, r2
 16064 0384 054A     		ldr	r2, .L658+4
 16065 0386 1188     		ldrh	r1, [r2]	@ unaligned
 16066 0388 9278     		ldrb	r2, [r2, #2]
 16067 038a 1980     		strh	r1, [r3]	@ unaligned
 16068 038c 9A70     		strb	r2, [r3, #2]
2338:..\src/command_processing.c **** 
2339:..\src/command_processing.c **** }
 16069              		.loc 1 2339 0
 16070 038e 00BF     		nop
 16071 0390 8437     		adds	r7, r7, #132
 16072              		.cfi_def_cfa_offset 20
 16073 0392 BD46     		mov	sp, r7
 16074              		.cfi_def_cfa_register 13
 16075              		@ sp needed
 16076 0394 F0BD     		pop	{r4, r5, r6, r7, pc}
 16077              	.L659:
 16078 0396 00BF     		.align	2
 16079              	.L658:
 16080 0398 54190000 		.word	.LC244
 16081 039c 18100000 		.word	.LC143
 16082 03a0 70190000 		.word	.LC245
 16083 03a4 94190000 		.word	.LC246
 16084 03a8 B4190000 		.word	.LC247
 16085 03ac DC190000 		.word	.LC248
 16086 03b0 FC190000 		.word	.LC249
 16087              		.cfi_endproc
 16088              	.LFE73:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 363


 16089              		.size	prepare_counter_info, .-prepare_counter_info
 16090              		.section	.rodata
 16091              		.align	2
 16092              	.LC250:
 16093 1a20 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 16093      77617265 
 16093      20766572 
 16093      73696F6E 
 16093      3A202573 
 16094 1a37 00       		.align	2
 16095              	.LC251:
 16096 1a38 506F7369 		.ascii	"Position PID: \000"
 16096      74696F6E 
 16096      20504944 
 16096      3A2000
 16097 1a47 00       		.align	2
 16098              	.LC252:
 16099 1a48 43757272 		.ascii	"Current PID: \000"
 16099      656E7420 
 16099      5049443A 
 16099      2000
 16100 1a56 0000     		.align	2
 16101              	.LC253:
 16102 1a58 5265736F 		.ascii	"Resolutions: \000"
 16102      6C757469 
 16102      6F6E733A 
 16102      2000
 16103 1a66 0000     		.align	2
 16104              	.LC254:
 16105 1a68 4F666673 		.ascii	"Offsets: \000"
 16105      6574733A 
 16105      2000
 16106 1a72 0000     		.align	2
 16107              	.LC255:
 16108 1a74 4D756C74 		.ascii	"Multipliers: \000"
 16108      69706C69 
 16108      6572733A 
 16108      2000
 16109 1a82 0000     		.align	2
 16110              	.LC256:
 16111 1a84 43757272 		.ascii	"Current lookup table p[0] - p[5]: %f, %f, %f, %f, %"
 16111      656E7420 
 16111      6C6F6F6B 
 16111      75702074 
 16111      61626C65 
 16112 1ab7 662C2025 		.ascii	"f, %f\015\012\000"
 16112      660D0A00 
 16113 1abf 00       		.align	2
 16114              	.LC257:
 16115 1ac0 506F7369 		.ascii	"Position limit active: %d\015\012\000"
 16115      74696F6E 
 16115      206C696D 
 16115      69742061 
 16115      63746976 
 16116              		.align	2
 16117              	.LC258:
 16118 1adc 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 364


 16118      74696F6E 
 16118      206C696D 
 16118      6974733A 
 16118      20696E66 
 16119              		.section	.text.prepare_SD_param_info,"ax",%progbits
 16120              		.align	2
 16121              		.global	prepare_SD_param_info
 16122              		.thumb
 16123              		.thumb_func
 16124              		.type	prepare_SD_param_info, %function
 16125              	prepare_SD_param_info:
 16126              	.LFB74:
2340:..\src/command_processing.c **** 
2341:..\src/command_processing.c **** //==============================================================================
2342:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
2343:..\src/command_processing.c **** //==============================================================================
2344:..\src/command_processing.c **** 
2345:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
2346:..\src/command_processing.c **** {
 16127              		.loc 1 2346 0
 16128              		.cfi_startproc
 16129              		@ args = 0, pretend = 0, frame = 152
 16130              		@ frame_needed = 1, uses_anonymous_args = 0
 16131 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 16132              		.cfi_def_cfa_offset 36
 16133              		.cfi_offset 4, -36
 16134              		.cfi_offset 5, -32
 16135              		.cfi_offset 6, -28
 16136              		.cfi_offset 7, -24
 16137              		.cfi_offset 8, -20
 16138              		.cfi_offset 9, -16
 16139              		.cfi_offset 10, -12
 16140              		.cfi_offset 11, -8
 16141              		.cfi_offset 14, -4
 16142 0004 B1B0     		sub	sp, sp, #196
 16143              		.cfi_def_cfa_offset 232
 16144 0006 0AAF     		add	r7, sp, #40
 16145              		.cfi_def_cfa 7, 192
 16146 0008 7861     		str	r0, [r7, #20]
2347:..\src/command_processing.c ****     char str[100];  
2348:..\src/command_processing.c ****     int i;
2349:..\src/command_processing.c ****            
2350:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
2351:..\src/command_processing.c ****     
2352:..\src/command_processing.c ****     struct st_eeprom* MEM_P = &g_mem;    
 16147              		.loc 1 2352 0
 16148 000a AB4B     		ldr	r3, .L725
 16149 000c C7F88C30 		str	r3, [r7, #140]
2353:..\src/command_processing.c ****         
2354:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 16150              		.loc 1 2354 0
 16151 0010 AA4A     		ldr	r2, .L725+4
 16152 0012 AB49     		ldr	r1, .L725+8
 16153 0014 7869     		ldr	r0, [r7, #20]
 16154 0016 FFF7FEFF 		bl	sprintf
2355:..\src/command_processing.c ****     
2356:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) MEM_P->dev.id);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 365


 16155              		.loc 1 2356 0
 16156 001a D7F88C30 		ldr	r3, [r7, #140]
 16157 001e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 16158 0022 1A46     		mov	r2, r3
 16159 0024 07F11C03 		add	r3, r7, #28
 16160 0028 A649     		ldr	r1, .L725+12
 16161 002a 1846     		mov	r0, r3
 16162 002c FFF7FEFF 		bl	sprintf
2357:..\src/command_processing.c ****     strcat(info_string, str);
 16163              		.loc 1 2357 0
 16164 0030 07F11C03 		add	r3, r7, #28
 16165 0034 1946     		mov	r1, r3
 16166 0036 7869     		ldr	r0, [r7, #20]
 16167 0038 FFF7FEFF 		bl	strcat
2358:..\src/command_processing.c ****     switch(MEM_P->dev.right_left){
 16168              		.loc 1 2358 0
 16169 003c D7F88C30 		ldr	r3, [r7, #140]
 16170 0040 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 16171 0044 002B     		cmp	r3, #0
 16172 0046 02D0     		beq	.L662
 16173 0048 012B     		cmp	r3, #1
 16174 004a 15D0     		beq	.L663
 16175 004c 26E0     		b	.L661
 16176              	.L662:
2359:..\src/command_processing.c ****         case RIGHT_HAND:
2360:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 16177              		.loc 1 2360 0
 16178 004e 7869     		ldr	r0, [r7, #20]
 16179 0050 FFF7FEFF 		bl	strlen
 16180 0054 0346     		mov	r3, r0
 16181 0056 1A46     		mov	r2, r3
 16182 0058 7B69     		ldr	r3, [r7, #20]
 16183 005a 1344     		add	r3, r3, r2
 16184 005c 9A4A     		ldr	r2, .L725+16
 16185 005e 1D46     		mov	r5, r3
 16186 0060 1446     		mov	r4, r2
 16187 0062 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16188 0064 2860     		str	r0, [r5]	@ unaligned
 16189 0066 6960     		str	r1, [r5, #4]	@ unaligned
 16190 0068 AA60     		str	r2, [r5, #8]	@ unaligned
 16191 006a EB60     		str	r3, [r5, #12]	@ unaligned
 16192 006c 2388     		ldrh	r3, [r4]	@ unaligned
 16193 006e A278     		ldrb	r2, [r4, #2]
 16194 0070 2B82     		strh	r3, [r5, #16]	@ unaligned
 16195 0072 1346     		mov	r3, r2
 16196 0074 AB74     		strb	r3, [r5, #18]
2361:..\src/command_processing.c ****             break;
 16197              		.loc 1 2361 0
 16198 0076 11E0     		b	.L661
 16199              	.L663:
2362:..\src/command_processing.c ****         case LEFT_HAND:
2363:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 16200              		.loc 1 2363 0
 16201 0078 7869     		ldr	r0, [r7, #20]
 16202 007a FFF7FEFF 		bl	strlen
 16203 007e 0346     		mov	r3, r0
 16204 0080 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 366


 16205 0082 7B69     		ldr	r3, [r7, #20]
 16206 0084 1344     		add	r3, r3, r2
 16207 0086 914A     		ldr	r2, .L725+20
 16208 0088 1D46     		mov	r5, r3
 16209 008a 1446     		mov	r4, r2
 16210 008c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16211 008e 2860     		str	r0, [r5]	@ unaligned
 16212 0090 6960     		str	r1, [r5, #4]	@ unaligned
 16213 0092 AA60     		str	r2, [r5, #8]	@ unaligned
 16214 0094 EB60     		str	r3, [r5, #12]	@ unaligned
 16215 0096 2388     		ldrh	r3, [r4]	@ unaligned
 16216 0098 2B82     		strh	r3, [r5, #16]	@ unaligned
2364:..\src/command_processing.c ****             break;
 16217              		.loc 1 2364 0
 16218 009a 00BF     		nop
 16219              	.L661:
2365:..\src/command_processing.c ****     }
2366:..\src/command_processing.c **** 
2367:..\src/command_processing.c ****     sprintf(str, "Date of HW maintenance: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.hw_maint_date[0], 
 16220              		.loc 1 2367 0
 16221 009c D7F88C30 		ldr	r3, [r7, #140]
 16222 00a0 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 16223 00a4 1A46     		mov	r2, r3
 16224 00a6 D7F88C30 		ldr	r3, [r7, #140]
 16225 00aa 93F8A230 		ldrb	r3, [r3, #162]	@ zero_extendqisi2
 16226 00ae 1946     		mov	r1, r3
 16227 00b0 D7F88C30 		ldr	r3, [r7, #140]
 16228 00b4 93F8A330 		ldrb	r3, [r3, #163]	@ zero_extendqisi2
 16229 00b8 07F11C00 		add	r0, r7, #28
 16230 00bc 0093     		str	r3, [sp]
 16231 00be 0B46     		mov	r3, r1
 16232 00c0 8349     		ldr	r1, .L725+24
 16233 00c2 FFF7FEFF 		bl	sprintf
2368:..\src/command_processing.c ****     strcat(info_string, str);
 16234              		.loc 1 2368 0
 16235 00c6 07F11C03 		add	r3, r7, #28
 16236 00ca 1946     		mov	r1, r3
 16237 00cc 7869     		ldr	r0, [r7, #20]
 16238 00ce FFF7FEFF 		bl	strcat
2369:..\src/command_processing.c ****     
2370:..\src/command_processing.c ****     sprintf(str, "Date of usage stats period begin: %02d/%02d/20%02d\r\n", (int)MEM_P->dev.stats_pe
 16239              		.loc 1 2370 0
 16240 00d2 D7F88C30 		ldr	r3, [r7, #140]
 16241 00d6 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
 16242 00da 1A46     		mov	r2, r3
 16243 00dc D7F88C30 		ldr	r3, [r7, #140]
 16244 00e0 93F8A530 		ldrb	r3, [r3, #165]	@ zero_extendqisi2
 16245 00e4 1946     		mov	r1, r3
 16246 00e6 D7F88C30 		ldr	r3, [r7, #140]
 16247 00ea 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 16248 00ee 07F11C00 		add	r0, r7, #28
 16249 00f2 0093     		str	r3, [sp]
 16250 00f4 0B46     		mov	r3, r1
 16251 00f6 7749     		ldr	r1, .L725+28
 16252 00f8 FFF7FEFF 		bl	sprintf
2371:..\src/command_processing.c ****     strcat(info_string, str);
 16253              		.loc 1 2371 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 367


 16254 00fc 07F11C03 		add	r3, r7, #28
 16255 0100 1946     		mov	r1, r3
 16256 0102 7869     		ldr	r0, [r7, #20]
 16257 0104 FFF7FEFF 		bl	strcat
 16258              	.LBB19:
2372:..\src/command_processing.c ****     
2373:..\src/command_processing.c **** 	for (uint8 k = 0; k <= MEM_P->dev.use_2nd_motor_flag; k++) {
 16259              		.loc 1 2373 0
 16260 0108 0023     		movs	r3, #0
 16261 010a 87F89330 		strb	r3, [r7, #147]
 16262 010e 00F05CBE 		b	.L664
 16263              	.L708:
 16264              	.LBB20:
2374:..\src/command_processing.c ****             
2375:..\src/command_processing.c **** 	    uint8 MOTOR_IDX = k;
 16265              		.loc 1 2375 0
 16266 0112 97F89330 		ldrb	r3, [r7, #147]
 16267 0116 87F88B30 		strb	r3, [r7, #139]
2376:..\src/command_processing.c ****         struct st_motor* MOT = &(MEM_P->motor[MOTOR_IDX]);      // Default motor
 16268              		.loc 1 2376 0
 16269 011a 97F88B20 		ldrb	r2, [r7, #139]	@ zero_extendqisi2
 16270 011e 1346     		mov	r3, r2
 16271 0120 DB00     		lsls	r3, r3, #3
 16272 0122 9B1A     		subs	r3, r3, r2
 16273 0124 1B01     		lsls	r3, r3, #4
 16274 0126 B033     		adds	r3, r3, #176
 16275 0128 D7F88C20 		ldr	r2, [r7, #140]
 16276 012c 1344     		add	r3, r3, r2
 16277 012e C7F88430 		str	r3, [r7, #132]
2377:..\src/command_processing.c ****         uint8 ENC_L = MOT->encoder_line;             // Associated encoder line
 16278              		.loc 1 2377 0
 16279 0132 D7F88430 		ldr	r3, [r7, #132]
 16280 0136 93F86030 		ldrb	r3, [r3, #96]
 16281 013a 87F88330 		strb	r3, [r7, #131]
2378:..\src/command_processing.c ****               
2379:..\src/command_processing.c ****         sprintf(str, "MOTOR %d INFO\r\n", MOTOR_IDX+1);
 16282              		.loc 1 2379 0
 16283 013e 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
 16284 0142 5A1C     		adds	r2, r3, #1
 16285 0144 07F11C03 		add	r3, r7, #28
 16286 0148 6349     		ldr	r1, .L725+32
 16287 014a 1846     		mov	r0, r3
 16288 014c FFF7FEFF 		bl	sprintf
2380:..\src/command_processing.c ****         strcat(info_string, str);
 16289              		.loc 1 2380 0
 16290 0150 07F11C03 		add	r3, r7, #28
 16291 0154 1946     		mov	r1, r3
 16292 0156 7869     		ldr	r0, [r7, #20]
 16293 0158 FFF7FEFF 		bl	strcat
2381:..\src/command_processing.c ****                     
2382:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 16294              		.loc 1 2382 0
 16295 015c 7869     		ldr	r0, [r7, #20]
 16296 015e FFF7FEFF 		bl	strlen
 16297 0162 0346     		mov	r3, r0
 16298 0164 1A46     		mov	r2, r3
 16299 0166 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 368


 16300 0168 1344     		add	r3, r3, r2
 16301 016a 5C4A     		ldr	r2, .L725+36
 16302 016c 1D46     		mov	r5, r3
 16303 016e 1446     		mov	r4, r2
 16304 0170 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16305 0172 2860     		str	r0, [r5]	@ unaligned
 16306 0174 6960     		str	r1, [r5, #4]	@ unaligned
 16307 0176 AA60     		str	r2, [r5, #8]	@ unaligned
 16308 0178 EB60     		str	r3, [r5, #12]	@ unaligned
 16309 017a 03CC     		ldmia	r4!, {r0, r1}
 16310 017c 2861     		str	r0, [r5, #16]	@ unaligned
 16311 017e 6961     		str	r1, [r5, #20]	@ unaligned
 16312 0180 2388     		ldrh	r3, [r4]	@ unaligned
 16313 0182 A278     		ldrb	r2, [r4, #2]
 16314 0184 2B83     		strh	r3, [r5, #24]	@ unaligned
 16315 0186 1346     		mov	r3, r2
 16316 0188 AB76     		strb	r3, [r5, #26]
2383:..\src/command_processing.c ****         if(MOT->activate_pwm_rescaling == MAXON_12V)
 16317              		.loc 1 2383 0
 16318 018a D7F88430 		ldr	r3, [r7, #132]
 16319 018e 93F83130 		ldrb	r3, [r3, #49]	@ zero_extendqisi2
 16320 0192 012B     		cmp	r3, #1
 16321 0194 0CD1     		bne	.L665
2384:..\src/command_processing.c ****             strcat(info_string, "YES\r\n");
 16322              		.loc 1 2384 0
 16323 0196 7869     		ldr	r0, [r7, #20]
 16324 0198 FFF7FEFF 		bl	strlen
 16325 019c 0346     		mov	r3, r0
 16326 019e 1A46     		mov	r2, r3
 16327 01a0 7B69     		ldr	r3, [r7, #20]
 16328 01a2 1344     		add	r3, r3, r2
 16329 01a4 4E4A     		ldr	r2, .L725+40
 16330 01a6 1068     		ldr	r0, [r2]	@ unaligned
 16331 01a8 1860     		str	r0, [r3]	@ unaligned
 16332 01aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 16333 01ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 16334 01ae 0BE0     		b	.L666
 16335              	.L665:
2385:..\src/command_processing.c ****         else
2386:..\src/command_processing.c ****             strcat(info_string, "NO\r\n");
 16336              		.loc 1 2386 0
 16337 01b0 7869     		ldr	r0, [r7, #20]
 16338 01b2 FFF7FEFF 		bl	strlen
 16339 01b6 0346     		mov	r3, r0
 16340 01b8 1A46     		mov	r2, r3
 16341 01ba 7B69     		ldr	r3, [r7, #20]
 16342 01bc 1344     		add	r3, r3, r2
 16343 01be 494A     		ldr	r2, .L725+44
 16344 01c0 1068     		ldr	r0, [r2]	@ unaligned
 16345 01c2 1860     		str	r0, [r3]	@ unaligned
 16346 01c4 1279     		ldrb	r2, [r2, #4]
 16347 01c6 1A71     		strb	r2, [r3, #4]
 16348              	.L666:
2387:..\src/command_processing.c ****         
2388:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit[MOTOR_IDX]);
 16349              		.loc 1 2388 0
 16350 01c8 97F88B30 		ldrb	r3, [r7, #139]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 369


 16351 01cc 464A     		ldr	r2, .L725+48
 16352 01ce D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 16353 01d0 1A46     		mov	r2, r3
 16354 01d2 07F11C03 		add	r3, r7, #28
 16355 01d6 4549     		ldr	r1, .L725+52
 16356 01d8 1846     		mov	r0, r3
 16357 01da FFF7FEFF 		bl	sprintf
2389:..\src/command_processing.c ****         strcat(info_string, str);
 16358              		.loc 1 2389 0
 16359 01de 07F11C03 		add	r3, r7, #28
 16360 01e2 1946     		mov	r1, r3
 16361 01e4 7869     		ldr	r0, [r7, #20]
 16362 01e6 FFF7FEFF 		bl	strcat
2390:..\src/command_processing.c **** 
2391:..\src/command_processing.c ****         strcat(info_string, "Position PID: ");
 16363              		.loc 1 2391 0
 16364 01ea 7869     		ldr	r0, [r7, #20]
 16365 01ec FFF7FEFF 		bl	strlen
 16366 01f0 0346     		mov	r3, r0
 16367 01f2 1A46     		mov	r2, r3
 16368 01f4 7B69     		ldr	r3, [r7, #20]
 16369 01f6 1344     		add	r3, r3, r2
 16370 01f8 3D4A     		ldr	r2, .L725+56
 16371 01fa 1C46     		mov	r4, r3
 16372 01fc 1346     		mov	r3, r2
 16373 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 16374 0200 2060     		str	r0, [r4]	@ unaligned
 16375 0202 6160     		str	r1, [r4, #4]	@ unaligned
 16376 0204 A260     		str	r2, [r4, #8]	@ unaligned
 16377 0206 1A88     		ldrh	r2, [r3]	@ unaligned
 16378 0208 9B78     		ldrb	r3, [r3, #2]
 16379 020a A281     		strh	r2, [r4, #12]	@ unaligned
 16380 020c A373     		strb	r3, [r4, #14]
2392:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 16381              		.loc 1 2392 0
 16382 020e D7F88430 		ldr	r3, [r7, #132]
 16383 0212 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16384 0216 032B     		cmp	r3, #3
 16385 0218 74D0     		beq	.L667
2393:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p / 65536));
 16386              		.loc 1 2393 0
 16387 021a D7F88430 		ldr	r3, [r7, #132]
 16388 021e 1B68     		ldr	r3, [r3]
 16389 0220 1846     		mov	r0, r3
 16390 0222 FFF7FEFF 		bl	__aeabi_i2d
 16391 0226 4FF00002 		mov	r2, #0
 16392 022a 324B     		ldr	r3, .L725+60
 16393 022c FFF7FEFF 		bl	__aeabi_ddiv
 16394 0230 0346     		mov	r3, r0
 16395 0232 0C46     		mov	r4, r1
 16396 0234 07F11C00 		add	r0, r7, #28
 16397 0238 1A46     		mov	r2, r3
 16398 023a 2346     		mov	r3, r4
 16399 023c 2E49     		ldr	r1, .L725+64
 16400 023e FFF7FEFF 		bl	sprintf
2394:..\src/command_processing.c ****             strcat(info_string, str);
 16401              		.loc 1 2394 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 370


 16402 0242 07F11C03 		add	r3, r7, #28
 16403 0246 1946     		mov	r1, r3
 16404 0248 7869     		ldr	r0, [r7, #20]
 16405 024a FFF7FEFF 		bl	strcat
2395:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i / 65536));
 16406              		.loc 1 2395 0
 16407 024e D7F88430 		ldr	r3, [r7, #132]
 16408 0252 5B68     		ldr	r3, [r3, #4]
 16409 0254 1846     		mov	r0, r3
 16410 0256 FFF7FEFF 		bl	__aeabi_i2d
 16411 025a 4FF00002 		mov	r2, #0
 16412 025e 254B     		ldr	r3, .L725+60
 16413 0260 FFF7FEFF 		bl	__aeabi_ddiv
 16414 0264 0346     		mov	r3, r0
 16415 0266 0C46     		mov	r4, r1
 16416 0268 07F11C00 		add	r0, r7, #28
 16417 026c 1A46     		mov	r2, r3
 16418 026e 2346     		mov	r3, r4
 16419 0270 2249     		ldr	r1, .L725+68
 16420 0272 FFF7FEFF 		bl	sprintf
2396:..\src/command_processing.c ****             strcat(info_string, str);
 16421              		.loc 1 2396 0
 16422 0276 07F11C03 		add	r3, r7, #28
 16423 027a 1946     		mov	r1, r3
 16424 027c 7869     		ldr	r0, [r7, #20]
 16425 027e FFF7FEFF 		bl	strcat
2397:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d / 65536));
 16426              		.loc 1 2397 0
 16427 0282 D7F88430 		ldr	r3, [r7, #132]
 16428 0286 9B68     		ldr	r3, [r3, #8]
 16429 0288 1846     		mov	r0, r3
 16430 028a FFF7FEFF 		bl	__aeabi_i2d
 16431 028e 4FF00002 		mov	r2, #0
 16432 0292 184B     		ldr	r3, .L725+60
 16433 0294 FFF7FEFF 		bl	__aeabi_ddiv
 16434 0298 0346     		mov	r3, r0
 16435 029a 0C46     		mov	r4, r1
 16436 029c 07F11C00 		add	r0, r7, #28
 16437 02a0 1A46     		mov	r2, r3
 16438 02a2 2346     		mov	r3, r4
 16439 02a4 1649     		ldr	r1, .L725+72
 16440 02a6 FFF7FEFF 		bl	sprintf
2398:..\src/command_processing.c ****             strcat(info_string, str);
 16441              		.loc 1 2398 0
 16442 02aa 07F11C03 		add	r3, r7, #28
 16443 02ae 1946     		mov	r1, r3
 16444 02b0 7869     		ldr	r0, [r7, #20]
 16445 02b2 FFF7FEFF 		bl	strcat
 16446 02b6 73E0     		b	.L668
 16447              	.L726:
 16448              		.align	2
 16449              	.L725:
 16450 02b8 00000000 		.word	g_mem
 16451 02bc 30100000 		.word	.LC145
 16452 02c0 201A0000 		.word	.LC250
 16453 02c4 70100000 		.word	.LC148
 16454 02c8 04110000 		.word	.LC153
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 371


 16455 02cc 18110000 		.word	.LC154
 16456 02d0 64180000 		.word	.LC238
 16457 02d4 90180000 		.word	.LC239
 16458 02d8 64110000 		.word	.LC158
 16459 02dc D4110000 		.word	.LC167
 16460 02e0 C4110000 		.word	.LC165
 16461 02e4 CC110000 		.word	.LC166
 16462 02e8 00000000 		.word	dev_pwm_limit
 16463 02ec FC110000 		.word	.LC170
 16464 02f0 381A0000 		.word	.LC251
 16465 02f4 0000F040 		.word	1089470464
 16466 02f8 F4120000 		.word	.LC181
 16467 02fc 00130000 		.word	.LC182
 16468 0300 0C130000 		.word	.LC183
 16469              	.L667:
2399:..\src/command_processing.c ****         }
2400:..\src/command_processing.c ****         else { 
2401:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_dl / 65536));
 16470              		.loc 1 2401 0
 16471 0304 D7F88430 		ldr	r3, [r7, #132]
 16472 0308 9B69     		ldr	r3, [r3, #24]
 16473 030a 1846     		mov	r0, r3
 16474 030c FFF7FEFF 		bl	__aeabi_i2d
 16475 0310 4FF00002 		mov	r2, #0
 16476 0314 CC4B     		ldr	r3, .L727
 16477 0316 FFF7FEFF 		bl	__aeabi_ddiv
 16478 031a 0346     		mov	r3, r0
 16479 031c 0C46     		mov	r4, r1
 16480 031e 07F11C00 		add	r0, r7, #28
 16481 0322 1A46     		mov	r2, r3
 16482 0324 2346     		mov	r3, r4
 16483 0326 C949     		ldr	r1, .L727+4
 16484 0328 FFF7FEFF 		bl	sprintf
2402:..\src/command_processing.c ****             strcat(info_string, str);
 16485              		.loc 1 2402 0
 16486 032c 07F11C03 		add	r3, r7, #28
 16487 0330 1946     		mov	r1, r3
 16488 0332 7869     		ldr	r0, [r7, #20]
 16489 0334 FFF7FEFF 		bl	strcat
2403:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_dl / 65536));
 16490              		.loc 1 2403 0
 16491 0338 D7F88430 		ldr	r3, [r7, #132]
 16492 033c DB69     		ldr	r3, [r3, #28]
 16493 033e 1846     		mov	r0, r3
 16494 0340 FFF7FEFF 		bl	__aeabi_i2d
 16495 0344 4FF00002 		mov	r2, #0
 16496 0348 BF4B     		ldr	r3, .L727
 16497 034a FFF7FEFF 		bl	__aeabi_ddiv
 16498 034e 0346     		mov	r3, r0
 16499 0350 0C46     		mov	r4, r1
 16500 0352 07F11C00 		add	r0, r7, #28
 16501 0356 1A46     		mov	r2, r3
 16502 0358 2346     		mov	r3, r4
 16503 035a BD49     		ldr	r1, .L727+8
 16504 035c FFF7FEFF 		bl	sprintf
2404:..\src/command_processing.c ****             strcat(info_string, str);
 16505              		.loc 1 2404 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 372


 16506 0360 07F11C03 		add	r3, r7, #28
 16507 0364 1946     		mov	r1, r3
 16508 0366 7869     		ldr	r0, [r7, #20]
 16509 0368 FFF7FEFF 		bl	strcat
2405:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_dl / 65536));
 16510              		.loc 1 2405 0
 16511 036c D7F88430 		ldr	r3, [r7, #132]
 16512 0370 1B6A     		ldr	r3, [r3, #32]
 16513 0372 1846     		mov	r0, r3
 16514 0374 FFF7FEFF 		bl	__aeabi_i2d
 16515 0378 4FF00002 		mov	r2, #0
 16516 037c B24B     		ldr	r3, .L727
 16517 037e FFF7FEFF 		bl	__aeabi_ddiv
 16518 0382 0346     		mov	r3, r0
 16519 0384 0C46     		mov	r4, r1
 16520 0386 07F11C00 		add	r0, r7, #28
 16521 038a 1A46     		mov	r2, r3
 16522 038c 2346     		mov	r3, r4
 16523 038e B149     		ldr	r1, .L727+12
 16524 0390 FFF7FEFF 		bl	sprintf
2406:..\src/command_processing.c ****             strcat(info_string, str);
 16525              		.loc 1 2406 0
 16526 0394 07F11C03 		add	r3, r7, #28
 16527 0398 1946     		mov	r1, r3
 16528 039a 7869     		ldr	r0, [r7, #20]
 16529 039c FFF7FEFF 		bl	strcat
 16530              	.L668:
2407:..\src/command_processing.c ****         }
2408:..\src/command_processing.c **** 
2409:..\src/command_processing.c ****         strcat(info_string, "Current PID: ");
 16531              		.loc 1 2409 0
 16532 03a0 7869     		ldr	r0, [r7, #20]
 16533 03a2 FFF7FEFF 		bl	strlen
 16534 03a6 0346     		mov	r3, r0
 16535 03a8 1A46     		mov	r2, r3
 16536 03aa 7B69     		ldr	r3, [r7, #20]
 16537 03ac 1344     		add	r3, r3, r2
 16538 03ae AA4A     		ldr	r2, .L727+16
 16539 03b0 1C46     		mov	r4, r3
 16540 03b2 1346     		mov	r3, r2
 16541 03b4 07CB     		ldmia	r3!, {r0, r1, r2}
 16542 03b6 2060     		str	r0, [r4]	@ unaligned
 16543 03b8 6160     		str	r1, [r4, #4]	@ unaligned
 16544 03ba A260     		str	r2, [r4, #8]	@ unaligned
 16545 03bc 1B88     		ldrh	r3, [r3]	@ unaligned
 16546 03be A381     		strh	r3, [r4, #12]	@ unaligned
2410:..\src/command_processing.c ****         if(MOT->control_mode != CURR_AND_POS_CONTROL) {
 16547              		.loc 1 2410 0
 16548 03c0 D7F88430 		ldr	r3, [r7, #132]
 16549 03c4 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16550 03c8 032B     		cmp	r3, #3
 16551 03ca 4ED0     		beq	.L669
2411:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c / 65536));
 16552              		.loc 1 2411 0
 16553 03cc D7F88430 		ldr	r3, [r7, #132]
 16554 03d0 DB68     		ldr	r3, [r3, #12]
 16555 03d2 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 373


 16556 03d4 FFF7FEFF 		bl	__aeabi_i2d
 16557 03d8 4FF00002 		mov	r2, #0
 16558 03dc 9A4B     		ldr	r3, .L727
 16559 03de FFF7FEFF 		bl	__aeabi_ddiv
 16560 03e2 0346     		mov	r3, r0
 16561 03e4 0C46     		mov	r4, r1
 16562 03e6 07F11C00 		add	r0, r7, #28
 16563 03ea 1A46     		mov	r2, r3
 16564 03ec 2346     		mov	r3, r4
 16565 03ee 9749     		ldr	r1, .L727+4
 16566 03f0 FFF7FEFF 		bl	sprintf
2412:..\src/command_processing.c ****             strcat(info_string, str);
 16567              		.loc 1 2412 0
 16568 03f4 07F11C03 		add	r3, r7, #28
 16569 03f8 1946     		mov	r1, r3
 16570 03fa 7869     		ldr	r0, [r7, #20]
 16571 03fc FFF7FEFF 		bl	strcat
2413:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c / 65536));
 16572              		.loc 1 2413 0
 16573 0400 D7F88430 		ldr	r3, [r7, #132]
 16574 0404 1B69     		ldr	r3, [r3, #16]
 16575 0406 1846     		mov	r0, r3
 16576 0408 FFF7FEFF 		bl	__aeabi_i2d
 16577 040c 4FF00002 		mov	r2, #0
 16578 0410 8D4B     		ldr	r3, .L727
 16579 0412 FFF7FEFF 		bl	__aeabi_ddiv
 16580 0416 0346     		mov	r3, r0
 16581 0418 0C46     		mov	r4, r1
 16582 041a 07F11C00 		add	r0, r7, #28
 16583 041e 1A46     		mov	r2, r3
 16584 0420 2346     		mov	r3, r4
 16585 0422 8B49     		ldr	r1, .L727+8
 16586 0424 FFF7FEFF 		bl	sprintf
2414:..\src/command_processing.c ****             strcat(info_string, str);
 16587              		.loc 1 2414 0
 16588 0428 07F11C03 		add	r3, r7, #28
 16589 042c 1946     		mov	r1, r3
 16590 042e 7869     		ldr	r0, [r7, #20]
 16591 0430 FFF7FEFF 		bl	strcat
2415:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c / 65536));
 16592              		.loc 1 2415 0
 16593 0434 D7F88430 		ldr	r3, [r7, #132]
 16594 0438 5B69     		ldr	r3, [r3, #20]
 16595 043a 1846     		mov	r0, r3
 16596 043c FFF7FEFF 		bl	__aeabi_i2d
 16597 0440 4FF00002 		mov	r2, #0
 16598 0444 804B     		ldr	r3, .L727
 16599 0446 FFF7FEFF 		bl	__aeabi_ddiv
 16600 044a 0346     		mov	r3, r0
 16601 044c 0C46     		mov	r4, r1
 16602 044e 07F11C00 		add	r0, r7, #28
 16603 0452 1A46     		mov	r2, r3
 16604 0454 2346     		mov	r3, r4
 16605 0456 7F49     		ldr	r1, .L727+12
 16606 0458 FFF7FEFF 		bl	sprintf
2416:..\src/command_processing.c ****             strcat(info_string, str);
 16607              		.loc 1 2416 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 374


 16608 045c 07F11C03 		add	r3, r7, #28
 16609 0460 1946     		mov	r1, r3
 16610 0462 7869     		ldr	r0, [r7, #20]
 16611 0464 FFF7FEFF 		bl	strcat
 16612 0468 4DE0     		b	.L670
 16613              	.L669:
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c ****         }
2419:..\src/command_processing.c ****         else {
2420:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) MOT->k_p_c_dl / 65536));
 16614              		.loc 1 2420 0
 16615 046a D7F88430 		ldr	r3, [r7, #132]
 16616 046e 5B6A     		ldr	r3, [r3, #36]
 16617 0470 1846     		mov	r0, r3
 16618 0472 FFF7FEFF 		bl	__aeabi_i2d
 16619 0476 4FF00002 		mov	r2, #0
 16620 047a 734B     		ldr	r3, .L727
 16621 047c FFF7FEFF 		bl	__aeabi_ddiv
 16622 0480 0346     		mov	r3, r0
 16623 0482 0C46     		mov	r4, r1
 16624 0484 07F11C00 		add	r0, r7, #28
 16625 0488 1A46     		mov	r2, r3
 16626 048a 2346     		mov	r3, r4
 16627 048c 6F49     		ldr	r1, .L727+4
 16628 048e FFF7FEFF 		bl	sprintf
2421:..\src/command_processing.c ****             strcat(info_string, str);
 16629              		.loc 1 2421 0
 16630 0492 07F11C03 		add	r3, r7, #28
 16631 0496 1946     		mov	r1, r3
 16632 0498 7869     		ldr	r0, [r7, #20]
 16633 049a FFF7FEFF 		bl	strcat
2422:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) MOT->k_i_c_dl / 65536));
 16634              		.loc 1 2422 0
 16635 049e D7F88430 		ldr	r3, [r7, #132]
 16636 04a2 9B6A     		ldr	r3, [r3, #40]
 16637 04a4 1846     		mov	r0, r3
 16638 04a6 FFF7FEFF 		bl	__aeabi_i2d
 16639 04aa 4FF00002 		mov	r2, #0
 16640 04ae 664B     		ldr	r3, .L727
 16641 04b0 FFF7FEFF 		bl	__aeabi_ddiv
 16642 04b4 0346     		mov	r3, r0
 16643 04b6 0C46     		mov	r4, r1
 16644 04b8 07F11C00 		add	r0, r7, #28
 16645 04bc 1A46     		mov	r2, r3
 16646 04be 2346     		mov	r3, r4
 16647 04c0 6349     		ldr	r1, .L727+8
 16648 04c2 FFF7FEFF 		bl	sprintf
2423:..\src/command_processing.c ****             strcat(info_string, str);
 16649              		.loc 1 2423 0
 16650 04c6 07F11C03 		add	r3, r7, #28
 16651 04ca 1946     		mov	r1, r3
 16652 04cc 7869     		ldr	r0, [r7, #20]
 16653 04ce FFF7FEFF 		bl	strcat
2424:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) MOT->k_d_c_dl / 65536));
 16654              		.loc 1 2424 0
 16655 04d2 D7F88430 		ldr	r3, [r7, #132]
 16656 04d6 DB6A     		ldr	r3, [r3, #44]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 375


 16657 04d8 1846     		mov	r0, r3
 16658 04da FFF7FEFF 		bl	__aeabi_i2d
 16659 04de 4FF00002 		mov	r2, #0
 16660 04e2 594B     		ldr	r3, .L727
 16661 04e4 FFF7FEFF 		bl	__aeabi_ddiv
 16662 04e8 0346     		mov	r3, r0
 16663 04ea 0C46     		mov	r4, r1
 16664 04ec 07F11C00 		add	r0, r7, #28
 16665 04f0 1A46     		mov	r2, r3
 16666 04f2 2346     		mov	r3, r4
 16667 04f4 5749     		ldr	r1, .L727+12
 16668 04f6 FFF7FEFF 		bl	sprintf
2425:..\src/command_processing.c ****             strcat(info_string, str);
 16669              		.loc 1 2425 0
 16670 04fa 07F11C03 		add	r3, r7, #28
 16671 04fe 1946     		mov	r1, r3
 16672 0500 7869     		ldr	r0, [r7, #20]
 16673 0502 FFF7FEFF 		bl	strcat
 16674              	.L670:
2426:..\src/command_processing.c ****         }
2427:..\src/command_processing.c ****         if (MOT->activ == 0x01)
 16675              		.loc 1 2427 0
 16676 0506 D7F88430 		ldr	r3, [r7, #132]
 16677 050a 93F83030 		ldrb	r3, [r3, #48]	@ zero_extendqisi2
 16678 050e 012B     		cmp	r3, #1
 16679 0510 14D1     		bne	.L671
2428:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 16680              		.loc 1 2428 0
 16681 0512 7869     		ldr	r0, [r7, #20]
 16682 0514 FFF7FEFF 		bl	strlen
 16683 0518 0346     		mov	r3, r0
 16684 051a 1A46     		mov	r2, r3
 16685 051c 7B69     		ldr	r3, [r7, #20]
 16686 051e 1344     		add	r3, r3, r2
 16687 0520 4E4A     		ldr	r2, .L727+20
 16688 0522 1D46     		mov	r5, r3
 16689 0524 1446     		mov	r4, r2
 16690 0526 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16691 0528 2860     		str	r0, [r5]	@ unaligned
 16692 052a 6960     		str	r1, [r5, #4]	@ unaligned
 16693 052c AA60     		str	r2, [r5, #8]	@ unaligned
 16694 052e EB60     		str	r3, [r5, #12]	@ unaligned
 16695 0530 03CC     		ldmia	r4!, {r0, r1}
 16696 0532 2861     		str	r0, [r5, #16]	@ unaligned
 16697 0534 6961     		str	r1, [r5, #20]	@ unaligned
 16698 0536 2388     		ldrh	r3, [r4]	@ unaligned
 16699 0538 2B83     		strh	r3, [r5, #24]	@ unaligned
 16700 053a 13E0     		b	.L672
 16701              	.L671:
2429:..\src/command_processing.c ****         else
2430:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 16702              		.loc 1 2430 0
 16703 053c 7869     		ldr	r0, [r7, #20]
 16704 053e FFF7FEFF 		bl	strlen
 16705 0542 0346     		mov	r3, r0
 16706 0544 1A46     		mov	r2, r3
 16707 0546 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 376


 16708 0548 1344     		add	r3, r3, r2
 16709 054a 454A     		ldr	r2, .L727+24
 16710 054c 1D46     		mov	r5, r3
 16711 054e 1446     		mov	r4, r2
 16712 0550 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16713 0552 2860     		str	r0, [r5]	@ unaligned
 16714 0554 6960     		str	r1, [r5, #4]	@ unaligned
 16715 0556 AA60     		str	r2, [r5, #8]	@ unaligned
 16716 0558 EB60     		str	r3, [r5, #12]	@ unaligned
 16717 055a 03CC     		ldmia	r4!, {r0, r1}
 16718 055c 2861     		str	r0, [r5, #16]	@ unaligned
 16719 055e 6961     		str	r1, [r5, #20]	@ unaligned
 16720 0560 2378     		ldrb	r3, [r4]
 16721 0562 2B76     		strb	r3, [r5, #24]
 16722              	.L672:
2431:..\src/command_processing.c **** 
2432:..\src/command_processing.c ****         switch(MOT->input_mode) {
 16723              		.loc 1 2432 0
 16724 0564 D7F88430 		ldr	r3, [r7, #132]
 16725 0568 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 16726 056c 072B     		cmp	r3, #7
 16727 056e 00F2EA80 		bhi	.L673
 16728 0572 01A2     		adr	r2, .L675
 16729 0574 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16730              		.p2align 2
 16731              	.L675:
 16732 0578 99050000 		.word	.L674+1
 16733 057c BD050000 		.word	.L676+1
 16734 0580 E5050000 		.word	.L677+1
 16735 0584 17060000 		.word	.L678+1
 16736 0588 75060000 		.word	.L679+1
 16737 058c A3060000 		.word	.L680+1
 16738 0590 D3060000 		.word	.L681+1
 16739 0594 01070000 		.word	.L682+1
 16740              		.p2align 1
 16741              	.L674:
2433:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
2434:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 16742              		.loc 1 2434 0
 16743 0598 7869     		ldr	r0, [r7, #20]
 16744 059a FFF7FEFF 		bl	strlen
 16745 059e 0346     		mov	r3, r0
 16746 05a0 1A46     		mov	r2, r3
 16747 05a2 7B69     		ldr	r3, [r7, #20]
 16748 05a4 1344     		add	r3, r3, r2
 16749 05a6 2F4A     		ldr	r2, .L727+28
 16750 05a8 1D46     		mov	r5, r3
 16751 05aa 1446     		mov	r4, r2
 16752 05ac 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16753 05ae 2860     		str	r0, [r5]	@ unaligned
 16754 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 16755 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 16756 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 16757 05b6 2388     		ldrh	r3, [r4]	@ unaligned
 16758 05b8 2B82     		strh	r3, [r5, #16]	@ unaligned
2435:..\src/command_processing.c ****                 break;
 16759              		.loc 1 2435 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 377


 16760 05ba C4E0     		b	.L673
 16761              	.L676:
2436:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
2437:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 16762              		.loc 1 2437 0
 16763 05bc 7869     		ldr	r0, [r7, #20]
 16764 05be FFF7FEFF 		bl	strlen
 16765 05c2 0346     		mov	r3, r0
 16766 05c4 1A46     		mov	r2, r3
 16767 05c6 7B69     		ldr	r3, [r7, #20]
 16768 05c8 1344     		add	r3, r3, r2
 16769 05ca 274A     		ldr	r2, .L727+32
 16770 05cc 1D46     		mov	r5, r3
 16771 05ce 1446     		mov	r4, r2
 16772 05d0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16773 05d2 2860     		str	r0, [r5]	@ unaligned
 16774 05d4 6960     		str	r1, [r5, #4]	@ unaligned
 16775 05d6 AA60     		str	r2, [r5, #8]	@ unaligned
 16776 05d8 EB60     		str	r3, [r5, #12]	@ unaligned
 16777 05da 2068     		ldr	r0, [r4]	@ unaligned
 16778 05dc 2861     		str	r0, [r5, #16]	@ unaligned
 16779 05de 2379     		ldrb	r3, [r4, #4]
 16780 05e0 2B75     		strb	r3, [r5, #20]
2438:..\src/command_processing.c ****                 break;
 16781              		.loc 1 2438 0
 16782 05e2 B0E0     		b	.L673
 16783              	.L677:
2439:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
2440:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 16784              		.loc 1 2440 0
 16785 05e4 7869     		ldr	r0, [r7, #20]
 16786 05e6 FFF7FEFF 		bl	strlen
 16787 05ea 0346     		mov	r3, r0
 16788 05ec 1A46     		mov	r2, r3
 16789 05ee 7B69     		ldr	r3, [r7, #20]
 16790 05f0 1344     		add	r3, r3, r2
 16791 05f2 1E4A     		ldr	r2, .L727+36
 16792 05f4 1D46     		mov	r5, r3
 16793 05f6 1446     		mov	r4, r2
 16794 05f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16795 05fa 2860     		str	r0, [r5]	@ unaligned
 16796 05fc 6960     		str	r1, [r5, #4]	@ unaligned
 16797 05fe AA60     		str	r2, [r5, #8]	@ unaligned
 16798 0600 EB60     		str	r3, [r5, #12]	@ unaligned
 16799 0602 07CC     		ldmia	r4!, {r0, r1, r2}
 16800 0604 2861     		str	r0, [r5, #16]	@ unaligned
 16801 0606 6961     		str	r1, [r5, #20]	@ unaligned
 16802 0608 AA61     		str	r2, [r5, #24]	@ unaligned
 16803 060a 2388     		ldrh	r3, [r4]	@ unaligned
 16804 060c A278     		ldrb	r2, [r4, #2]
 16805 060e AB83     		strh	r3, [r5, #28]	@ unaligned
 16806 0610 1346     		mov	r3, r2
 16807 0612 AB77     		strb	r3, [r5, #30]
2441:..\src/command_processing.c ****                 break;
 16808              		.loc 1 2441 0
 16809 0614 97E0     		b	.L673
 16810              	.L678:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 378


2442:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
2443:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 16811              		.loc 1 2443 0
 16812 0616 7869     		ldr	r0, [r7, #20]
 16813 0618 FFF7FEFF 		bl	strlen
 16814 061c 0346     		mov	r3, r0
 16815 061e 1A46     		mov	r2, r3
 16816 0620 7B69     		ldr	r3, [r7, #20]
 16817 0622 1344     		add	r3, r3, r2
 16818 0624 124A     		ldr	r2, .L727+40
 16819 0626 1D46     		mov	r5, r3
 16820 0628 1446     		mov	r4, r2
 16821 062a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16822 062c 2860     		str	r0, [r5]	@ unaligned
 16823 062e 6960     		str	r1, [r5, #4]	@ unaligned
 16824 0630 AA60     		str	r2, [r5, #8]	@ unaligned
 16825 0632 EB60     		str	r3, [r5, #12]	@ unaligned
 16826 0634 03CC     		ldmia	r4!, {r0, r1}
 16827 0636 2861     		str	r0, [r5, #16]	@ unaligned
 16828 0638 6961     		str	r1, [r5, #20]	@ unaligned
 16829 063a 2388     		ldrh	r3, [r4]	@ unaligned
 16830 063c A278     		ldrb	r2, [r4, #2]
 16831 063e 2B83     		strh	r3, [r5, #24]	@ unaligned
 16832 0640 1346     		mov	r3, r2
 16833 0642 AB76     		strb	r3, [r5, #26]
2444:..\src/command_processing.c ****                 break;
 16834              		.loc 1 2444 0
 16835 0644 7FE0     		b	.L673
 16836              	.L728:
 16837 0646 00BF     		.align	2
 16838              	.L727:
 16839 0648 0000F040 		.word	1089470464
 16840 064c F4120000 		.word	.LC181
 16841 0650 00130000 		.word	.LC182
 16842 0654 0C130000 		.word	.LC183
 16843 0658 481A0000 		.word	.LC252
 16844 065c 34130000 		.word	.LC185
 16845 0660 50130000 		.word	.LC186
 16846 0664 6C130000 		.word	.LC187
 16847 0668 80130000 		.word	.LC188
 16848 066c 98130000 		.word	.LC189
 16849 0670 B8130000 		.word	.LC190
 16850              	.L679:
2445:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
2446:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 16851              		.loc 1 2446 0
 16852 0674 7869     		ldr	r0, [r7, #20]
 16853 0676 FFF7FEFF 		bl	strlen
 16854 067a 0346     		mov	r3, r0
 16855 067c 1A46     		mov	r2, r3
 16856 067e 7B69     		ldr	r3, [r7, #20]
 16857 0680 1344     		add	r3, r3, r2
 16858 0682 BA4A     		ldr	r2, .L729
 16859 0684 1C46     		mov	r4, r3
 16860 0686 1546     		mov	r5, r2
 16861 0688 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16862 068a 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 379


 16863 068c 6160     		str	r1, [r4, #4]	@ unaligned
 16864 068e A260     		str	r2, [r4, #8]	@ unaligned
 16865 0690 E360     		str	r3, [r4, #12]	@ unaligned
 16866 0692 2868     		ldr	r0, [r5]	@ unaligned
 16867 0694 2061     		str	r0, [r4, #16]	@ unaligned
 16868 0696 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16869 0698 AA79     		ldrb	r2, [r5, #6]
 16870 069a A382     		strh	r3, [r4, #20]	@ unaligned
 16871 069c 1346     		mov	r3, r2
 16872 069e A375     		strb	r3, [r4, #22]
2447:..\src/command_processing.c ****                 break;
 16873              		.loc 1 2447 0
 16874 06a0 51E0     		b	.L673
 16875              	.L680:
2448:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
2449:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 16876              		.loc 1 2449 0
 16877 06a2 7869     		ldr	r0, [r7, #20]
 16878 06a4 FFF7FEFF 		bl	strlen
 16879 06a8 0346     		mov	r3, r0
 16880 06aa 1A46     		mov	r2, r3
 16881 06ac 7B69     		ldr	r3, [r7, #20]
 16882 06ae 1344     		add	r3, r3, r2
 16883 06b0 AF4A     		ldr	r2, .L729+4
 16884 06b2 1D46     		mov	r5, r3
 16885 06b4 1446     		mov	r4, r2
 16886 06b6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16887 06b8 2860     		str	r0, [r5]	@ unaligned
 16888 06ba 6960     		str	r1, [r5, #4]	@ unaligned
 16889 06bc AA60     		str	r2, [r5, #8]	@ unaligned
 16890 06be EB60     		str	r3, [r5, #12]	@ unaligned
 16891 06c0 03CC     		ldmia	r4!, {r0, r1}
 16892 06c2 2861     		str	r0, [r5, #16]	@ unaligned
 16893 06c4 6961     		str	r1, [r5, #20]	@ unaligned
 16894 06c6 2388     		ldrh	r3, [r4]	@ unaligned
 16895 06c8 A278     		ldrb	r2, [r4, #2]
 16896 06ca 2B83     		strh	r3, [r5, #24]	@ unaligned
 16897 06cc 1346     		mov	r3, r2
 16898 06ce AB76     		strb	r3, [r5, #26]
2450:..\src/command_processing.c ****                 break;
 16899              		.loc 1 2450 0
 16900 06d0 39E0     		b	.L673
 16901              	.L681:
2451:..\src/command_processing.c ****             case INPUT_MODE_JOYSTICK:
2452:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Joystick\r\n");
 16902              		.loc 1 2452 0
 16903 06d2 7869     		ldr	r0, [r7, #20]
 16904 06d4 FFF7FEFF 		bl	strlen
 16905 06d8 0346     		mov	r3, r0
 16906 06da 1A46     		mov	r2, r3
 16907 06dc 7B69     		ldr	r3, [r7, #20]
 16908 06de 1344     		add	r3, r3, r2
 16909 06e0 A44A     		ldr	r2, .L729+8
 16910 06e2 1C46     		mov	r4, r3
 16911 06e4 1546     		mov	r5, r2
 16912 06e6 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 16913 06e8 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 380


 16914 06ea 6160     		str	r1, [r4, #4]	@ unaligned
 16915 06ec A260     		str	r2, [r4, #8]	@ unaligned
 16916 06ee E360     		str	r3, [r4, #12]	@ unaligned
 16917 06f0 2868     		ldr	r0, [r5]	@ unaligned
 16918 06f2 2061     		str	r0, [r4, #16]	@ unaligned
 16919 06f4 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 16920 06f6 AA79     		ldrb	r2, [r5, #6]
 16921 06f8 A382     		strh	r3, [r4, #20]	@ unaligned
 16922 06fa 1346     		mov	r3, r2
 16923 06fc A375     		strb	r3, [r4, #22]
2453:..\src/command_processing.c ****                 break;
 16924              		.loc 1 2453 0
 16925 06fe 22E0     		b	.L673
 16926              	.L682:
2454:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL_NC:
2455:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional Normally Closed\r\n");
 16927              		.loc 1 2455 0
 16928 0700 7869     		ldr	r0, [r7, #20]
 16929 0702 FFF7FEFF 		bl	strlen
 16930 0706 0346     		mov	r3, r0
 16931 0708 1A46     		mov	r2, r3
 16932 070a 7B69     		ldr	r3, [r7, #20]
 16933 070c 1344     		add	r3, r3, r2
 16934 070e 9A4A     		ldr	r2, .L729+12
 16935 0710 1546     		mov	r5, r2
 16936 0712 9E46     		mov	lr, r3
 16937 0714 05F1200C 		add	ip, r5, #32
 16938              	.L683:
 16939 0718 7446     		mov	r4, lr
 16940 071a 2E46     		mov	r6, r5
 16941 071c 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 16942 071e 2060     		str	r0, [r4]	@ unaligned
 16943 0720 6160     		str	r1, [r4, #4]	@ unaligned
 16944 0722 A260     		str	r2, [r4, #8]	@ unaligned
 16945 0724 E360     		str	r3, [r4, #12]	@ unaligned
 16946 0726 1035     		adds	r5, r5, #16
 16947 0728 0EF1100E 		add	lr, lr, #16
 16948 072c 6545     		cmp	r5, ip
 16949 072e F3D1     		bne	.L683
 16950 0730 7446     		mov	r4, lr
 16951 0732 2B46     		mov	r3, r5
 16952 0734 07CB     		ldmia	r3!, {r0, r1, r2}
 16953 0736 2060     		str	r0, [r4]	@ unaligned
 16954 0738 6160     		str	r1, [r4, #4]	@ unaligned
 16955 073a A260     		str	r2, [r4, #8]	@ unaligned
 16956 073c 1A88     		ldrh	r2, [r3]	@ unaligned
 16957 073e 9B78     		ldrb	r3, [r3, #2]
 16958 0740 A281     		strh	r2, [r4, #12]	@ unaligned
 16959 0742 A373     		strb	r3, [r4, #14]
2456:..\src/command_processing.c ****                 break;
 16960              		.loc 1 2456 0
 16961 0744 00BF     		nop
 16962              	.L673:
2457:..\src/command_processing.c ****         }
2458:..\src/command_processing.c **** 
2459:..\src/command_processing.c ****         switch(MOT->control_mode) {
 16963              		.loc 1 2459 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 381


 16964 0746 D7F88430 		ldr	r3, [r7, #132]
 16965 074a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 16966 074e 032B     		cmp	r3, #3
 16967 0750 63D8     		bhi	.L723
 16968 0752 01A2     		adr	r2, .L686
 16969 0754 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 16970              		.p2align 2
 16971              	.L686:
 16972 0758 69070000 		.word	.L685+1
 16973 075c 93070000 		.word	.L687+1
 16974 0760 B7070000 		.word	.L688+1
 16975 0764 DD070000 		.word	.L689+1
 16976              		.p2align 1
 16977              	.L685:
2460:..\src/command_processing.c ****             case CONTROL_ANGLE:
2461:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 16978              		.loc 1 2461 0
 16979 0768 7869     		ldr	r0, [r7, #20]
 16980 076a FFF7FEFF 		bl	strlen
 16981 076e 0346     		mov	r3, r0
 16982 0770 1A46     		mov	r2, r3
 16983 0772 7B69     		ldr	r3, [r7, #20]
 16984 0774 1344     		add	r3, r3, r2
 16985 0776 814A     		ldr	r2, .L729+16
 16986 0778 1D46     		mov	r5, r3
 16987 077a 1446     		mov	r4, r2
 16988 077c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 16989 077e 2860     		str	r0, [r5]	@ unaligned
 16990 0780 6960     		str	r1, [r5, #4]	@ unaligned
 16991 0782 AA60     		str	r2, [r5, #8]	@ unaligned
 16992 0784 EB60     		str	r3, [r5, #12]	@ unaligned
 16993 0786 03CC     		ldmia	r4!, {r0, r1}
 16994 0788 2861     		str	r0, [r5, #16]	@ unaligned
 16995 078a 6961     		str	r1, [r5, #20]	@ unaligned
 16996 078c 2378     		ldrb	r3, [r4]
 16997 078e 2B76     		strb	r3, [r5, #24]
2462:..\src/command_processing.c ****                 break;
 16998              		.loc 1 2462 0
 16999 0790 44E0     		b	.L690
 17000              	.L687:
2463:..\src/command_processing.c ****             case CONTROL_PWM:
2464:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 17001              		.loc 1 2464 0
 17002 0792 7869     		ldr	r0, [r7, #20]
 17003 0794 FFF7FEFF 		bl	strlen
 17004 0798 0346     		mov	r3, r0
 17005 079a 1A46     		mov	r2, r3
 17006 079c 7B69     		ldr	r3, [r7, #20]
 17007 079e 1344     		add	r3, r3, r2
 17008 07a0 774A     		ldr	r2, .L729+20
 17009 07a2 1D46     		mov	r5, r3
 17010 07a4 1446     		mov	r4, r2
 17011 07a6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17012 07a8 2860     		str	r0, [r5]	@ unaligned
 17013 07aa 6960     		str	r1, [r5, #4]	@ unaligned
 17014 07ac AA60     		str	r2, [r5, #8]	@ unaligned
 17015 07ae EB60     		str	r3, [r5, #12]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 382


 17016 07b0 2068     		ldr	r0, [r4]	@ unaligned
 17017 07b2 2861     		str	r0, [r5, #16]	@ unaligned
2465:..\src/command_processing.c ****                 break;
 17018              		.loc 1 2465 0
 17019 07b4 32E0     		b	.L690
 17020              	.L688:
2466:..\src/command_processing.c ****             case CONTROL_CURRENT:
2467:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 17021              		.loc 1 2467 0
 17022 07b6 7869     		ldr	r0, [r7, #20]
 17023 07b8 FFF7FEFF 		bl	strlen
 17024 07bc 0346     		mov	r3, r0
 17025 07be 1A46     		mov	r2, r3
 17026 07c0 7B69     		ldr	r3, [r7, #20]
 17027 07c2 1344     		add	r3, r3, r2
 17028 07c4 6F4A     		ldr	r2, .L729+24
 17029 07c6 1D46     		mov	r5, r3
 17030 07c8 1446     		mov	r4, r2
 17031 07ca 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17032 07cc 2860     		str	r0, [r5]	@ unaligned
 17033 07ce 6960     		str	r1, [r5, #4]	@ unaligned
 17034 07d0 AA60     		str	r2, [r5, #8]	@ unaligned
 17035 07d2 EB60     		str	r3, [r5, #12]	@ unaligned
 17036 07d4 03CC     		ldmia	r4!, {r0, r1}
 17037 07d6 2861     		str	r0, [r5, #16]	@ unaligned
 17038 07d8 6961     		str	r1, [r5, #20]	@ unaligned
2468:..\src/command_processing.c ****                 break;
 17039              		.loc 1 2468 0
 17040 07da 1FE0     		b	.L690
 17041              	.L689:
2469:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
2470:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 17042              		.loc 1 2470 0
 17043 07dc 7869     		ldr	r0, [r7, #20]
 17044 07de FFF7FEFF 		bl	strlen
 17045 07e2 0346     		mov	r3, r0
 17046 07e4 1A46     		mov	r2, r3
 17047 07e6 7B69     		ldr	r3, [r7, #20]
 17048 07e8 1344     		add	r3, r3, r2
 17049 07ea 674A     		ldr	r2, .L729+28
 17050 07ec 1446     		mov	r4, r2
 17051 07ee 9E46     		mov	lr, r3
 17052 07f0 04F1200C 		add	ip, r4, #32
 17053              	.L691:
 17054 07f4 7546     		mov	r5, lr
 17055 07f6 2646     		mov	r6, r4
 17056 07f8 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17057 07fa 2860     		str	r0, [r5]	@ unaligned
 17058 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 17059 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 17060 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 17061 0802 1034     		adds	r4, r4, #16
 17062 0804 0EF1100E 		add	lr, lr, #16
 17063 0808 6445     		cmp	r4, ip
 17064 080a F3D1     		bne	.L691
 17065 080c 7346     		mov	r3, lr
 17066 080e 2246     		mov	r2, r4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 383


 17067 0810 1068     		ldr	r0, [r2]	@ unaligned
 17068 0812 1860     		str	r0, [r3]	@ unaligned
 17069 0814 1279     		ldrb	r2, [r2, #4]
 17070 0816 1A71     		strb	r2, [r3, #4]
2471:..\src/command_processing.c ****                 break;
 17071              		.loc 1 2471 0
 17072 0818 00E0     		b	.L690
 17073              	.L723:
2472:..\src/command_processing.c ****             default:
2473:..\src/command_processing.c ****                 break;
 17074              		.loc 1 2473 0
 17075 081a 00BF     		nop
 17076              	.L690:
2474:..\src/command_processing.c ****         }
2475:..\src/command_processing.c **** 
2476:..\src/command_processing.c ****         if (MEM_P->enc[ENC_L].double_encoder_on_off)
 17077              		.loc 1 2476 0
 17078 081c 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17079 0820 D7F88C10 		ldr	r1, [r7, #140]
 17080 0824 1346     		mov	r3, r2
 17081 0826 5B00     		lsls	r3, r3, #1
 17082 0828 1344     		add	r3, r3, r2
 17083 082a 1B01     		lsls	r3, r3, #4
 17084 082c 0B44     		add	r3, r3, r1
 17085 082e 03F5D873 		add	r3, r3, #432
 17086 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17087 0834 002B     		cmp	r3, #0
 17088 0836 1CD0     		beq	.L692
2477:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 17089              		.loc 1 2477 0
 17090 0838 7869     		ldr	r0, [r7, #20]
 17091 083a FFF7FEFF 		bl	strlen
 17092 083e 0346     		mov	r3, r0
 17093 0840 1A46     		mov	r2, r3
 17094 0842 7B69     		ldr	r3, [r7, #20]
 17095 0844 1344     		add	r3, r3, r2
 17096 0846 514A     		ldr	r2, .L729+32
 17097 0848 1446     		mov	r4, r2
 17098 084a 9E46     		mov	lr, r3
 17099 084c 04F1200C 		add	ip, r4, #32
 17100              	.L693:
 17101 0850 7546     		mov	r5, lr
 17102 0852 2646     		mov	r6, r4
 17103 0854 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 17104 0856 2860     		str	r0, [r5]	@ unaligned
 17105 0858 6960     		str	r1, [r5, #4]	@ unaligned
 17106 085a AA60     		str	r2, [r5, #8]	@ unaligned
 17107 085c EB60     		str	r3, [r5, #12]	@ unaligned
 17108 085e 1034     		adds	r4, r4, #16
 17109 0860 0EF1100E 		add	lr, lr, #16
 17110 0864 6445     		cmp	r4, ip
 17111 0866 F3D1     		bne	.L693
 17112 0868 7346     		mov	r3, lr
 17113 086a 2246     		mov	r2, r4
 17114 086c 1278     		ldrb	r2, [r2]
 17115 086e 1A70     		strb	r2, [r3]
 17116 0870 13E0     		b	.L694
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 384


 17117              	.L692:
2478:..\src/command_processing.c ****         else
2479:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 17118              		.loc 1 2479 0
 17119 0872 7869     		ldr	r0, [r7, #20]
 17120 0874 FFF7FEFF 		bl	strlen
 17121 0878 0346     		mov	r3, r0
 17122 087a 1A46     		mov	r2, r3
 17123 087c 7B69     		ldr	r3, [r7, #20]
 17124 087e 1344     		add	r3, r3, r2
 17125 0880 434A     		ldr	r2, .L729+36
 17126 0882 1C46     		mov	r4, r3
 17127 0884 1546     		mov	r5, r2
 17128 0886 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17129 0888 2060     		str	r0, [r4]	@ unaligned
 17130 088a 6160     		str	r1, [r4, #4]	@ unaligned
 17131 088c A260     		str	r2, [r4, #8]	@ unaligned
 17132 088e E360     		str	r3, [r4, #12]	@ unaligned
 17133 0890 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17134 0892 2061     		str	r0, [r4, #16]	@ unaligned
 17135 0894 6161     		str	r1, [r4, #20]	@ unaligned
 17136 0896 A261     		str	r2, [r4, #24]	@ unaligned
 17137 0898 E361     		str	r3, [r4, #28]	@ unaligned
 17138              	.L694:
2480:..\src/command_processing.c **** 
2481:..\src/command_processing.c ****         strcat(info_string, "Resolutions: ");
 17139              		.loc 1 2481 0
 17140 089a 7869     		ldr	r0, [r7, #20]
 17141 089c FFF7FEFF 		bl	strlen
 17142 08a0 0346     		mov	r3, r0
 17143 08a2 1A46     		mov	r2, r3
 17144 08a4 7B69     		ldr	r3, [r7, #20]
 17145 08a6 1344     		add	r3, r3, r2
 17146 08a8 3A4A     		ldr	r2, .L729+40
 17147 08aa 1C46     		mov	r4, r3
 17148 08ac 1346     		mov	r3, r2
 17149 08ae 07CB     		ldmia	r3!, {r0, r1, r2}
 17150 08b0 2060     		str	r0, [r4]	@ unaligned
 17151 08b2 6160     		str	r1, [r4, #4]	@ unaligned
 17152 08b4 A260     		str	r2, [r4, #8]	@ unaligned
 17153 08b6 1B88     		ldrh	r3, [r3]	@ unaligned
 17154 08b8 A381     		strh	r3, [r4, #12]	@ unaligned
2482:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 17155              		.loc 1 2482 0
 17156 08ba 0023     		movs	r3, #0
 17157 08bc C7F89430 		str	r3, [r7, #148]
 17158 08c0 30E0     		b	.L695
 17159              	.L697:
2483:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 17160              		.loc 1 2483 0
 17161 08c2 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17162 08c6 D7F88C10 		ldr	r1, [r7, #140]
 17163 08ca 1346     		mov	r3, r2
 17164 08cc 5B00     		lsls	r3, r3, #1
 17165 08ce 1344     		add	r3, r3, r2
 17166 08d0 1B01     		lsls	r3, r3, #4
 17167 08d2 CA18     		adds	r2, r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 385


 17168 08d4 D7F89430 		ldr	r3, [r7, #148]
 17169 08d8 1344     		add	r3, r3, r2
 17170 08da 03F29513 		addw	r3, r3, #405
 17171 08de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17172 08e0 1A46     		mov	r2, r3
 17173 08e2 07F11C03 		add	r3, r7, #28
 17174 08e6 2C49     		ldr	r1, .L729+44
 17175 08e8 1846     		mov	r0, r3
 17176 08ea FFF7FEFF 		bl	sprintf
2484:..\src/command_processing.c ****             strcat(info_string, str);
 17177              		.loc 1 2484 0
 17178 08ee 07F11C03 		add	r3, r7, #28
 17179 08f2 1946     		mov	r1, r3
 17180 08f4 7869     		ldr	r0, [r7, #20]
 17181 08f6 FFF7FEFF 		bl	strcat
2485:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 17182              		.loc 1 2485 0
 17183 08fa D7F89430 		ldr	r3, [r7, #148]
 17184 08fe 022B     		cmp	r3, #2
 17185 0900 0BD0     		beq	.L696
2486:..\src/command_processing.c ****                 strcat(info_string, ", ");
 17186              		.loc 1 2486 0
 17187 0902 7869     		ldr	r0, [r7, #20]
 17188 0904 FFF7FEFF 		bl	strlen
 17189 0908 0346     		mov	r3, r0
 17190 090a 1A46     		mov	r2, r3
 17191 090c 7B69     		ldr	r3, [r7, #20]
 17192 090e 1344     		add	r3, r3, r2
 17193 0910 224A     		ldr	r2, .L729+48
 17194 0912 1188     		ldrh	r1, [r2]	@ unaligned
 17195 0914 9278     		ldrb	r2, [r2, #2]
 17196 0916 1980     		strh	r1, [r3]	@ unaligned
 17197 0918 9A70     		strb	r2, [r3, #2]
 17198              	.L696:
2482:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 17199              		.loc 1 2482 0 discriminator 2
 17200 091a D7F89430 		ldr	r3, [r7, #148]
 17201 091e 0133     		adds	r3, r3, #1
 17202 0920 C7F89430 		str	r3, [r7, #148]
 17203              	.L695:
2482:..\src/command_processing.c ****             sprintf(str, "%d", (int) MEM_P->enc[ENC_L].res[i]);
 17204              		.loc 1 2482 0 is_stmt 0 discriminator 1
 17205 0924 D7F89430 		ldr	r3, [r7, #148]
 17206 0928 022B     		cmp	r3, #2
 17207 092a CADD     		ble	.L697
2487:..\src/command_processing.c ****             }                
2488:..\src/command_processing.c ****         }
2489:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17208              		.loc 1 2489 0 is_stmt 1
 17209 092c 7869     		ldr	r0, [r7, #20]
 17210 092e FFF7FEFF 		bl	strlen
 17211 0932 0346     		mov	r3, r0
 17212 0934 1A46     		mov	r2, r3
 17213 0936 7B69     		ldr	r3, [r7, #20]
 17214 0938 1344     		add	r3, r3, r2
 17215 093a 194A     		ldr	r2, .L729+52
 17216 093c 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 386


 17217 093e 9278     		ldrb	r2, [r2, #2]
 17218 0940 1980     		strh	r1, [r3]	@ unaligned
 17219 0942 9A70     		strb	r2, [r3, #2]
2490:..\src/command_processing.c **** 
2491:..\src/command_processing.c ****         strcat(info_string, "Offsets: ");
 17220              		.loc 1 2491 0
 17221 0944 7869     		ldr	r0, [r7, #20]
 17222 0946 FFF7FEFF 		bl	strlen
 17223 094a 0346     		mov	r3, r0
 17224 094c 1A46     		mov	r2, r3
 17225 094e 7B69     		ldr	r3, [r7, #20]
 17226 0950 1344     		add	r3, r3, r2
 17227 0952 1449     		ldr	r1, .L729+56
 17228 0954 1A46     		mov	r2, r3
 17229 0956 0B46     		mov	r3, r1
 17230 0958 03CB     		ldmia	r3!, {r0, r1}
 17231 095a 1060     		str	r0, [r2]	@ unaligned
 17232 095c 5160     		str	r1, [r2, #4]	@ unaligned
 17233 095e 1B88     		ldrh	r3, [r3]	@ unaligned
 17234 0960 1381     		strh	r3, [r2, #8]	@ unaligned
2492:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 17235              		.loc 1 2492 0
 17236 0962 0023     		movs	r3, #0
 17237 0964 C7F89430 		str	r3, [r7, #148]
 17238 0968 5EE0     		b	.L698
 17239              	.L730:
 17240 096a 00BF     		.align	2
 17241              	.L729:
 17242 096c D4130000 		.word	.LC191
 17243 0970 EC130000 		.word	.LC192
 17244 0974 08140000 		.word	.LC193
 17245 0978 20140000 		.word	.LC194
 17246 097c 50140000 		.word	.LC195
 17247 0980 6C140000 		.word	.LC196
 17248 0984 80140000 		.word	.LC197
 17249 0988 98140000 		.word	.LC198
 17250 098c C0140000 		.word	.LC199
 17251 0990 E4140000 		.word	.LC200
 17252 0994 581A0000 		.word	.LC253
 17253 0998 34120000 		.word	.LC173
 17254 099c 38120000 		.word	.LC174
 17255 09a0 18100000 		.word	.LC143
 17256 09a4 681A0000 		.word	.LC254
 17257              	.L700:
2493:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 17258              		.loc 1 2493 0
 17259 09a8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17260 09ac D7F88C10 		ldr	r1, [r7, #140]
 17261 09b0 1346     		mov	r3, r2
 17262 09b2 5B00     		lsls	r3, r3, #1
 17263 09b4 1344     		add	r3, r3, r2
 17264 09b6 9B00     		lsls	r3, r3, #2
 17265 09b8 D7F89420 		ldr	r2, [r7, #148]
 17266 09bc 1344     		add	r3, r3, r2
 17267 09be 6633     		adds	r3, r3, #102
 17268 09c0 51F82310 		ldr	r1, [r1, r3, lsl #2]
 17269 09c4 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 387


 17270 09c8 D7F88C00 		ldr	r0, [r7, #140]
 17271 09cc 1346     		mov	r3, r2
 17272 09ce 5B00     		lsls	r3, r3, #1
 17273 09d0 1344     		add	r3, r3, r2
 17274 09d2 1B01     		lsls	r3, r3, #4
 17275 09d4 C218     		adds	r2, r0, r3
 17276 09d6 D7F89430 		ldr	r3, [r7, #148]
 17277 09da 1344     		add	r3, r3, r2
 17278 09dc 03F29513 		addw	r3, r3, #405
 17279 09e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17280 09e2 41FA03F2 		asr	r2, r1, r3
 17281 09e6 07F11C03 		add	r3, r7, #28
 17282 09ea CF49     		ldr	r1, .L731
 17283 09ec 1846     		mov	r0, r3
 17284 09ee FFF7FEFF 		bl	sprintf
2494:..\src/command_processing.c ****             strcat(info_string, str);
 17285              		.loc 1 2494 0
 17286 09f2 07F11C03 		add	r3, r7, #28
 17287 09f6 1946     		mov	r1, r3
 17288 09f8 7869     		ldr	r0, [r7, #20]
 17289 09fa FFF7FEFF 		bl	strcat
2495:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 17290              		.loc 1 2495 0
 17291 09fe D7F89430 		ldr	r3, [r7, #148]
 17292 0a02 022B     		cmp	r3, #2
 17293 0a04 0BD0     		beq	.L699
2496:..\src/command_processing.c ****                 strcat(info_string, ", ");
 17294              		.loc 1 2496 0
 17295 0a06 7869     		ldr	r0, [r7, #20]
 17296 0a08 FFF7FEFF 		bl	strlen
 17297 0a0c 0346     		mov	r3, r0
 17298 0a0e 1A46     		mov	r2, r3
 17299 0a10 7B69     		ldr	r3, [r7, #20]
 17300 0a12 1344     		add	r3, r3, r2
 17301 0a14 C54A     		ldr	r2, .L731+4
 17302 0a16 1188     		ldrh	r1, [r2]	@ unaligned
 17303 0a18 9278     		ldrb	r2, [r2, #2]
 17304 0a1a 1980     		strh	r1, [r3]	@ unaligned
 17305 0a1c 9A70     		strb	r2, [r3, #2]
 17306              	.L699:
2492:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 17307              		.loc 1 2492 0 discriminator 2
 17308 0a1e D7F89430 		ldr	r3, [r7, #148]
 17309 0a22 0133     		adds	r3, r3, #1
 17310 0a24 C7F89430 		str	r3, [r7, #148]
 17311              	.L698:
2492:..\src/command_processing.c ****             sprintf(str, "%ld", (int32) MEM_P->enc[ENC_L].m_off[i] >> MEM_P->enc[ENC_L].res[i]);
 17312              		.loc 1 2492 0 is_stmt 0 discriminator 1
 17313 0a28 D7F89430 		ldr	r3, [r7, #148]
 17314 0a2c 022B     		cmp	r3, #2
 17315 0a2e BBDD     		ble	.L700
2497:..\src/command_processing.c ****             }
2498:..\src/command_processing.c ****         }
2499:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17316              		.loc 1 2499 0 is_stmt 1
 17317 0a30 7869     		ldr	r0, [r7, #20]
 17318 0a32 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 388


 17319 0a36 0346     		mov	r3, r0
 17320 0a38 1A46     		mov	r2, r3
 17321 0a3a 7B69     		ldr	r3, [r7, #20]
 17322 0a3c 1344     		add	r3, r3, r2
 17323 0a3e BC4A     		ldr	r2, .L731+8
 17324 0a40 1188     		ldrh	r1, [r2]	@ unaligned
 17325 0a42 9278     		ldrb	r2, [r2, #2]
 17326 0a44 1980     		strh	r1, [r3]	@ unaligned
 17327 0a46 9A70     		strb	r2, [r3, #2]
2500:..\src/command_processing.c ****             
2501:..\src/command_processing.c ****         strcat(info_string, "Multipliers: ");
 17328              		.loc 1 2501 0
 17329 0a48 7869     		ldr	r0, [r7, #20]
 17330 0a4a FFF7FEFF 		bl	strlen
 17331 0a4e 0346     		mov	r3, r0
 17332 0a50 1A46     		mov	r2, r3
 17333 0a52 7B69     		ldr	r3, [r7, #20]
 17334 0a54 1344     		add	r3, r3, r2
 17335 0a56 B74A     		ldr	r2, .L731+12
 17336 0a58 1C46     		mov	r4, r3
 17337 0a5a 1346     		mov	r3, r2
 17338 0a5c 07CB     		ldmia	r3!, {r0, r1, r2}
 17339 0a5e 2060     		str	r0, [r4]	@ unaligned
 17340 0a60 6160     		str	r1, [r4, #4]	@ unaligned
 17341 0a62 A260     		str	r2, [r4, #8]	@ unaligned
 17342 0a64 1B88     		ldrh	r3, [r3]	@ unaligned
 17343 0a66 A381     		strh	r3, [r4, #12]	@ unaligned
2502:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 17344              		.loc 1 2502 0
 17345 0a68 0023     		movs	r3, #0
 17346 0a6a C7F89430 		str	r3, [r7, #148]
 17347 0a6e 35E0     		b	.L701
 17348              	.L703:
2503:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 17349              		.loc 1 2503 0
 17350 0a70 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17351 0a74 D7F88C10 		ldr	r1, [r7, #140]
 17352 0a78 1346     		mov	r3, r2
 17353 0a7a 5B00     		lsls	r3, r3, #1
 17354 0a7c 1344     		add	r3, r3, r2
 17355 0a7e 9B00     		lsls	r3, r3, #2
 17356 0a80 D7F89420 		ldr	r2, [r7, #148]
 17357 0a84 1344     		add	r3, r3, r2
 17358 0a86 6833     		adds	r3, r3, #104
 17359 0a88 9B00     		lsls	r3, r3, #2
 17360 0a8a 0B44     		add	r3, r3, r1
 17361 0a8c 5B68     		ldr	r3, [r3, #4]	@ float
 17362 0a8e 1846     		mov	r0, r3
 17363 0a90 FFF7FEFF 		bl	__aeabi_f2d
 17364 0a94 0346     		mov	r3, r0
 17365 0a96 0C46     		mov	r4, r1
 17366 0a98 07F11C00 		add	r0, r7, #28
 17367 0a9c 1A46     		mov	r2, r3
 17368 0a9e 2346     		mov	r3, r4
 17369 0aa0 A549     		ldr	r1, .L731+16
 17370 0aa2 FFF7FEFF 		bl	sprintf
2504:..\src/command_processing.c ****             strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 389


 17371              		.loc 1 2504 0
 17372 0aa6 07F11C03 		add	r3, r7, #28
 17373 0aaa 1946     		mov	r1, r3
 17374 0aac 7869     		ldr	r0, [r7, #20]
 17375 0aae FFF7FEFF 		bl	strcat
2505:..\src/command_processing.c ****             if (i != NUM_OF_SENSORS-1){
 17376              		.loc 1 2505 0
 17377 0ab2 D7F89430 		ldr	r3, [r7, #148]
 17378 0ab6 022B     		cmp	r3, #2
 17379 0ab8 0BD0     		beq	.L702
2506:..\src/command_processing.c ****                 strcat(info_string, ", ");
 17380              		.loc 1 2506 0
 17381 0aba 7869     		ldr	r0, [r7, #20]
 17382 0abc FFF7FEFF 		bl	strlen
 17383 0ac0 0346     		mov	r3, r0
 17384 0ac2 1A46     		mov	r2, r3
 17385 0ac4 7B69     		ldr	r3, [r7, #20]
 17386 0ac6 1344     		add	r3, r3, r2
 17387 0ac8 984A     		ldr	r2, .L731+4
 17388 0aca 1188     		ldrh	r1, [r2]	@ unaligned
 17389 0acc 9278     		ldrb	r2, [r2, #2]
 17390 0ace 1980     		strh	r1, [r3]	@ unaligned
 17391 0ad0 9A70     		strb	r2, [r3, #2]
 17392              	.L702:
2502:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 17393              		.loc 1 2502 0 discriminator 2
 17394 0ad2 D7F89430 		ldr	r3, [r7, #148]
 17395 0ad6 0133     		adds	r3, r3, #1
 17396 0ad8 C7F89430 		str	r3, [r7, #148]
 17397              	.L701:
2502:..\src/command_processing.c ****             sprintf(str,"%f", (float) MEM_P->enc[ENC_L].m_mult[i]);
 17398              		.loc 1 2502 0 is_stmt 0 discriminator 1
 17399 0adc D7F89430 		ldr	r3, [r7, #148]
 17400 0ae0 022B     		cmp	r3, #2
 17401 0ae2 C5DD     		ble	.L703
2507:..\src/command_processing.c ****             }
2508:..\src/command_processing.c ****         }
2509:..\src/command_processing.c ****         strcat(info_string, "\r\n");       
 17402              		.loc 1 2509 0 is_stmt 1
 17403 0ae4 7869     		ldr	r0, [r7, #20]
 17404 0ae6 FFF7FEFF 		bl	strlen
 17405 0aea 0346     		mov	r3, r0
 17406 0aec 1A46     		mov	r2, r3
 17407 0aee 7B69     		ldr	r3, [r7, #20]
 17408 0af0 1344     		add	r3, r3, r2
 17409 0af2 8F4A     		ldr	r2, .L731+8
 17410 0af4 1188     		ldrh	r1, [r2]	@ unaligned
 17411 0af6 9278     		ldrb	r2, [r2, #2]
 17412 0af8 1980     		strh	r1, [r3]	@ unaligned
 17413 0afa 9A70     		strb	r2, [r3, #2]
2510:..\src/command_processing.c **** 
2511:..\src/command_processing.c **** 		sprintf(str, "Current lookup table p[0] - p[5]: %f, %f, %f, %f, %f, %f\r\n", MOT->curr_lookup[0],
 17414              		.loc 1 2511 0
 17415 0afc D7F88430 		ldr	r3, [r7, #132]
 17416 0b00 5B6C     		ldr	r3, [r3, #68]	@ float
 17417 0b02 1846     		mov	r0, r3
 17418 0b04 FFF7FEFF 		bl	__aeabi_f2d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 390


 17419 0b08 C7E90201 		strd	r0, [r7, #8]
 17420 0b0c D7F88430 		ldr	r3, [r7, #132]
 17421 0b10 9B6C     		ldr	r3, [r3, #72]	@ float
 17422 0b12 1846     		mov	r0, r3
 17423 0b14 FFF7FEFF 		bl	__aeabi_f2d
 17424 0b18 0446     		mov	r4, r0
 17425 0b1a 0D46     		mov	r5, r1
 17426 0b1c D7F88430 		ldr	r3, [r7, #132]
 17427 0b20 DB6C     		ldr	r3, [r3, #76]	@ float
 17428 0b22 1846     		mov	r0, r3
 17429 0b24 FFF7FEFF 		bl	__aeabi_f2d
 17430 0b28 8046     		mov	r8, r0
 17431 0b2a 8946     		mov	r9, r1
 17432 0b2c D7F88430 		ldr	r3, [r7, #132]
 17433 0b30 1B6D     		ldr	r3, [r3, #80]	@ float
 17434 0b32 1846     		mov	r0, r3
 17435 0b34 FFF7FEFF 		bl	__aeabi_f2d
 17436 0b38 8246     		mov	r10, r0
 17437 0b3a 8B46     		mov	fp, r1
 17438 0b3c D7F88430 		ldr	r3, [r7, #132]
 17439 0b40 5B6D     		ldr	r3, [r3, #84]	@ float
 17440 0b42 1846     		mov	r0, r3
 17441 0b44 FFF7FEFF 		bl	__aeabi_f2d
 17442 0b48 C7E90001 		strd	r0, [r7]
 17443 0b4c D7F88430 		ldr	r3, [r7, #132]
 17444 0b50 9B6D     		ldr	r3, [r3, #88]	@ float
 17445 0b52 1846     		mov	r0, r3
 17446 0b54 FFF7FEFF 		bl	__aeabi_f2d
 17447 0b58 0246     		mov	r2, r0
 17448 0b5a 0B46     		mov	r3, r1
 17449 0b5c 07F11C00 		add	r0, r7, #28
 17450 0b60 CDE90823 		strd	r2, [sp, #32]
 17451 0b64 D7E90012 		ldrd	r1, [r7]
 17452 0b68 CDE90612 		strd	r1, [sp, #24]
 17453 0b6c CDE904AB 		strd	r10, [sp, #16]
 17454 0b70 CDE90289 		strd	r8, [sp, #8]
 17455 0b74 CDE90045 		strd	r4, [sp]
 17456 0b78 D7E90223 		ldrd	r2, [r7, #8]
 17457 0b7c 6F49     		ldr	r1, .L731+20
 17458 0b7e FFF7FEFF 		bl	sprintf
2512:..\src/command_processing.c **** 		strcat(info_string, str);
 17459              		.loc 1 2512 0
 17460 0b82 07F11C03 		add	r3, r7, #28
 17461 0b86 1946     		mov	r1, r3
 17462 0b88 7869     		ldr	r0, [r7, #20]
 17463 0b8a FFF7FEFF 		bl	strcat
2513:..\src/command_processing.c **** 
2514:..\src/command_processing.c **** 		sprintf(str, "Position limit active: %d\r\n", (int)MOT->pos_lim_flag);
 17464              		.loc 1 2514 0
 17465 0b8e D7F88430 		ldr	r3, [r7, #132]
 17466 0b92 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 17467 0b96 1A46     		mov	r2, r3
 17468 0b98 07F11C03 		add	r3, r7, #28
 17469 0b9c 6849     		ldr	r1, .L731+24
 17470 0b9e 1846     		mov	r0, r3
 17471 0ba0 FFF7FEFF 		bl	sprintf
2515:..\src/command_processing.c **** 		strcat(info_string, str);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 391


 17472              		.loc 1 2515 0
 17473 0ba4 07F11C03 		add	r3, r7, #28
 17474 0ba8 1946     		mov	r1, r3
 17475 0baa 7869     		ldr	r0, [r7, #20]
 17476 0bac FFF7FEFF 		bl	strcat
2516:..\src/command_processing.c **** 
2517:..\src/command_processing.c **** 		sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)MOT->pos_lim_inf >> MEM_P->enc
 17477              		.loc 1 2517 0
 17478 0bb0 D7F88430 		ldr	r3, [r7, #132]
 17479 0bb4 596B     		ldr	r1, [r3, #52]
 17480 0bb6 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17481 0bba D7F88C00 		ldr	r0, [r7, #140]
 17482 0bbe 1346     		mov	r3, r2
 17483 0bc0 5B00     		lsls	r3, r3, #1
 17484 0bc2 1344     		add	r3, r3, r2
 17485 0bc4 1B01     		lsls	r3, r3, #4
 17486 0bc6 0344     		add	r3, r3, r0
 17487 0bc8 03F29513 		addw	r3, r3, #405
 17488 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17489 0bce 41FA03F4 		asr	r4, r1, r3
 17490 0bd2 D7F88430 		ldr	r3, [r7, #132]
 17491 0bd6 996B     		ldr	r1, [r3, #56]
 17492 0bd8 97F88320 		ldrb	r2, [r7, #131]	@ zero_extendqisi2
 17493 0bdc D7F88C00 		ldr	r0, [r7, #140]
 17494 0be0 1346     		mov	r3, r2
 17495 0be2 5B00     		lsls	r3, r3, #1
 17496 0be4 1344     		add	r3, r3, r2
 17497 0be6 1B01     		lsls	r3, r3, #4
 17498 0be8 0344     		add	r3, r3, r0
 17499 0bea 03F29513 		addw	r3, r3, #405
 17500 0bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17501 0bf0 41FA03F3 		asr	r3, r1, r3
 17502 0bf4 07F11C00 		add	r0, r7, #28
 17503 0bf8 2246     		mov	r2, r4
 17504 0bfa 5249     		ldr	r1, .L731+28
 17505 0bfc FFF7FEFF 		bl	sprintf
2518:..\src/command_processing.c **** 		strcat(info_string, str);
 17506              		.loc 1 2518 0
 17507 0c00 07F11C03 		add	r3, r7, #28
 17508 0c04 1946     		mov	r1, r3
 17509 0c06 7869     		ldr	r0, [r7, #20]
 17510 0c08 FFF7FEFF 		bl	strcat
2519:..\src/command_processing.c **** 
2520:..\src/command_processing.c **** 		sprintf(str, "Current limit: %d\r\n", (int)MOT->current_limit);
 17511              		.loc 1 2520 0
 17512 0c0c D7F88430 		ldr	r3, [r7, #132]
 17513 0c10 B3F95C30 		ldrsh	r3, [r3, #92]
 17514 0c14 1A46     		mov	r2, r3
 17515 0c16 07F11C03 		add	r3, r7, #28
 17516 0c1a 4B49     		ldr	r1, .L731+32
 17517 0c1c 1846     		mov	r0, r3
 17518 0c1e FFF7FEFF 		bl	sprintf
2521:..\src/command_processing.c **** 		strcat(info_string, str);
 17519              		.loc 1 2521 0
 17520 0c22 07F11C03 		add	r3, r7, #28
 17521 0c26 1946     		mov	r1, r3
 17522 0c28 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 392


 17523 0c2a FFF7FEFF 		bl	strcat
2522:..\src/command_processing.c **** 
2523:..\src/command_processing.c **** 		if ((MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 17524              		.loc 1 2523 0
 17525 0c2e D7F88430 		ldr	r3, [r7, #132]
 17526 0c32 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 17527 0c36 022B     		cmp	r3, #2
 17528 0c38 18D0     		beq	.L704
2524:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17529              		.loc 1 2524 0 discriminator 1
 17530 0c3a D7F88430 		ldr	r3, [r7, #132]
 17531 0c3e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2523:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17532              		.loc 1 2523 0 discriminator 1
 17533 0c42 032B     		cmp	r3, #3
 17534 0c44 12D0     		beq	.L704
2525:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 17535              		.loc 1 2525 0
 17536 0c46 D7F88430 		ldr	r3, [r7, #132]
 17537 0c4a 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2524:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 17538              		.loc 1 2524 0
 17539 0c4e 042B     		cmp	r3, #4
 17540 0c50 0CD0     		beq	.L704
2526:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 17541              		.loc 1 2526 0
 17542 0c52 D7F88430 		ldr	r3, [r7, #132]
 17543 0c56 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2525:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_FCFS) ||
 17544              		.loc 1 2525 0
 17545 0c5a 052B     		cmp	r3, #5
 17546 0c5c 06D0     		beq	.L704
2527:..\src/command_processing.c **** 			(MOT->input_mode == INPUT_MODE_EMG_PROPORTIONAL_NC)) {
 17547              		.loc 1 2527 0
 17548 0c5e D7F88430 		ldr	r3, [r7, #132]
 17549 0c62 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
2526:..\src/command_processing.c ****             (MOT->input_mode == INPUT_MODE_EMG_FCFS_ADV) ||
 17550              		.loc 1 2526 0
 17551 0c66 072B     		cmp	r3, #7
 17552 0c68 40F0AA80 		bne	.L705
 17553              	.L704:
2528:..\src/command_processing.c **** 			sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", MEM_P->emg.emg_threshold[0], MEM_P->emg.emg_th
 17554              		.loc 1 2528 0
 17555 0c6c D7F88C30 		ldr	r3, [r7, #140]
 17556 0c70 B3F8F031 		ldrh	r3, [r3, #496]
 17557 0c74 1A46     		mov	r2, r3
 17558 0c76 D7F88C30 		ldr	r3, [r7, #140]
 17559 0c7a B3F8F231 		ldrh	r3, [r3, #498]
 17560 0c7e 07F11C00 		add	r0, r7, #28
 17561 0c82 3249     		ldr	r1, .L731+36
 17562 0c84 FFF7FEFF 		bl	sprintf
2529:..\src/command_processing.c **** 			strcat(info_string, str);
 17563              		.loc 1 2529 0
 17564 0c88 07F11C03 		add	r3, r7, #28
 17565 0c8c 1946     		mov	r1, r3
 17566 0c8e 7869     		ldr	r0, [r7, #20]
 17567 0c90 FFF7FEFF 		bl	strcat
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 393


2530:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17568              		.loc 1 2530 0
 17569 0c94 7869     		ldr	r0, [r7, #20]
 17570 0c96 FFF7FEFF 		bl	strlen
 17571 0c9a 0346     		mov	r3, r0
 17572 0c9c 1A46     		mov	r2, r3
 17573 0c9e 7B69     		ldr	r3, [r7, #20]
 17574 0ca0 1344     		add	r3, r3, r2
 17575 0ca2 234A     		ldr	r2, .L731+8
 17576 0ca4 1188     		ldrh	r1, [r2]	@ unaligned
 17577 0ca6 9278     		ldrb	r2, [r2, #2]
 17578 0ca8 1980     		strh	r1, [r3]	@ unaligned
 17579 0caa 9A70     		strb	r2, [r3, #2]
2531:..\src/command_processing.c **** 
2532:..\src/command_processing.c **** 			sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", MEM_P->emg.emg_max_value[0], MEM_P->emg.emg_
 17580              		.loc 1 2532 0
 17581 0cac D7F88C30 		ldr	r3, [r7, #140]
 17582 0cb0 D3F8F421 		ldr	r2, [r3, #500]
 17583 0cb4 D7F88C30 		ldr	r3, [r7, #140]
 17584 0cb8 D3F8F831 		ldr	r3, [r3, #504]
 17585 0cbc 07F11C00 		add	r0, r7, #28
 17586 0cc0 2349     		ldr	r1, .L731+40
 17587 0cc2 FFF7FEFF 		bl	sprintf
2533:..\src/command_processing.c **** 			strcat(info_string, str);
 17588              		.loc 1 2533 0
 17589 0cc6 07F11C03 		add	r3, r7, #28
 17590 0cca 1946     		mov	r1, r3
 17591 0ccc 7869     		ldr	r0, [r7, #20]
 17592 0cce FFF7FEFF 		bl	strcat
2534:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17593              		.loc 1 2534 0
 17594 0cd2 7869     		ldr	r0, [r7, #20]
 17595 0cd4 FFF7FEFF 		bl	strlen
 17596 0cd8 0346     		mov	r3, r0
 17597 0cda 1A46     		mov	r2, r3
 17598 0cdc 7B69     		ldr	r3, [r7, #20]
 17599 0cde 1344     		add	r3, r3, r2
 17600 0ce0 134A     		ldr	r2, .L731+8
 17601 0ce2 1188     		ldrh	r1, [r2]	@ unaligned
 17602 0ce4 9278     		ldrb	r2, [r2, #2]
 17603 0ce6 1980     		strh	r1, [r3]	@ unaligned
 17604 0ce8 9A70     		strb	r2, [r3, #2]
2535:..\src/command_processing.c **** 
2536:..\src/command_processing.c **** 			if (MEM_P->emg.emg_calibration_flag)
 17605              		.loc 1 2536 0
 17606 0cea D7F88C30 		ldr	r3, [r7, #140]
 17607 0cee 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 17608 0cf2 002B     		cmp	r3, #0
 17609 0cf4 30D0     		beq	.L706
2537:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: YES\r\n");
 17610              		.loc 1 2537 0
 17611 0cf6 7869     		ldr	r0, [r7, #20]
 17612 0cf8 FFF7FEFF 		bl	strlen
 17613 0cfc 0346     		mov	r3, r0
 17614 0cfe 1A46     		mov	r2, r3
 17615 0d00 7B69     		ldr	r3, [r7, #20]
 17616 0d02 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 394


 17617 0d04 134A     		ldr	r2, .L731+44
 17618 0d06 1D46     		mov	r5, r3
 17619 0d08 1446     		mov	r4, r2
 17620 0d0a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17621 0d0c 2860     		str	r0, [r5]	@ unaligned
 17622 0d0e 6960     		str	r1, [r5, #4]	@ unaligned
 17623 0d10 AA60     		str	r2, [r5, #8]	@ unaligned
 17624 0d12 EB60     		str	r3, [r5, #12]	@ unaligned
 17625 0d14 03CC     		ldmia	r4!, {r0, r1}
 17626 0d16 2861     		str	r0, [r5, #16]	@ unaligned
 17627 0d18 6961     		str	r1, [r5, #20]	@ unaligned
 17628 0d1a 2388     		ldrh	r3, [r4]	@ unaligned
 17629 0d1c A278     		ldrb	r2, [r4, #2]
 17630 0d1e 2B83     		strh	r3, [r5, #24]	@ unaligned
 17631 0d20 1346     		mov	r3, r2
 17632 0d22 AB76     		strb	r3, [r5, #26]
 17633 0d24 2CE0     		b	.L707
 17634              	.L732:
 17635 0d26 00BF     		.align	2
 17636              	.L731:
 17637 0d28 4C150000 		.word	.LC204
 17638 0d2c 38120000 		.word	.LC174
 17639 0d30 18100000 		.word	.LC143
 17640 0d34 741A0000 		.word	.LC255
 17641 0d38 6C150000 		.word	.LC206
 17642 0d3c 841A0000 		.word	.LC256
 17643 0d40 C01A0000 		.word	.LC257
 17644 0d44 DC1A0000 		.word	.LC258
 17645 0d48 0C160000 		.word	.LC212
 17646 0d4c 34160000 		.word	.LC214
 17647 0d50 58160000 		.word	.LC215
 17648 0d54 A8160000 		.word	.LC218
 17649              	.L706:
2538:..\src/command_processing.c **** 			else
2539:..\src/command_processing.c **** 				strcat(info_string, "Calibration enabled: NO\r\n");
 17650              		.loc 1 2539 0
 17651 0d58 7869     		ldr	r0, [r7, #20]
 17652 0d5a FFF7FEFF 		bl	strlen
 17653 0d5e 0346     		mov	r3, r0
 17654 0d60 1A46     		mov	r2, r3
 17655 0d62 7B69     		ldr	r3, [r7, #20]
 17656 0d64 1344     		add	r3, r3, r2
 17657 0d66 D04A     		ldr	r2, .L733
 17658 0d68 1D46     		mov	r5, r3
 17659 0d6a 1446     		mov	r4, r2
 17660 0d6c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17661 0d6e 2860     		str	r0, [r5]	@ unaligned
 17662 0d70 6960     		str	r1, [r5, #4]	@ unaligned
 17663 0d72 AA60     		str	r2, [r5, #8]	@ unaligned
 17664 0d74 EB60     		str	r3, [r5, #12]	@ unaligned
 17665 0d76 03CC     		ldmia	r4!, {r0, r1}
 17666 0d78 2861     		str	r0, [r5, #16]	@ unaligned
 17667 0d7a 6961     		str	r1, [r5, #20]	@ unaligned
 17668 0d7c 2388     		ldrh	r3, [r4]	@ unaligned
 17669 0d7e 2B83     		strh	r3, [r5, #24]	@ unaligned
 17670              	.L707:
2540:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 395


2541:..\src/command_processing.c **** 			sprintf(str, "EMG max speed: %d %d", (int)MEM_P->emg.emg_speed[0], (int)MEM_P->emg.emg_speed[1])
 17671              		.loc 1 2541 0
 17672 0d80 D7F88C30 		ldr	r3, [r7, #140]
 17673 0d84 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 17674 0d88 1A46     		mov	r2, r3
 17675 0d8a D7F88C30 		ldr	r3, [r7, #140]
 17676 0d8e 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 17677 0d92 07F11C00 		add	r0, r7, #28
 17678 0d96 C549     		ldr	r1, .L733+4
 17679 0d98 FFF7FEFF 		bl	sprintf
2542:..\src/command_processing.c **** 			strcat(info_string, str);
 17680              		.loc 1 2542 0
 17681 0d9c 07F11C03 		add	r3, r7, #28
 17682 0da0 1946     		mov	r1, r3
 17683 0da2 7869     		ldr	r0, [r7, #20]
 17684 0da4 FFF7FEFF 		bl	strcat
2543:..\src/command_processing.c **** 			strcat(info_string, "\r\n");
 17685              		.loc 1 2543 0
 17686 0da8 7869     		ldr	r0, [r7, #20]
 17687 0daa FFF7FEFF 		bl	strlen
 17688 0dae 0346     		mov	r3, r0
 17689 0db0 1A46     		mov	r2, r3
 17690 0db2 7B69     		ldr	r3, [r7, #20]
 17691 0db4 1344     		add	r3, r3, r2
 17692 0db6 BE4A     		ldr	r2, .L733+8
 17693 0db8 1188     		ldrh	r1, [r2]	@ unaligned
 17694 0dba 9278     		ldrb	r2, [r2, #2]
 17695 0dbc 1980     		strh	r1, [r3]	@ unaligned
 17696 0dbe 9A70     		strb	r2, [r3, #2]
 17697              	.L705:
 17698              	.LBE20:
2373:..\src/command_processing.c ****             
 17699              		.loc 1 2373 0 discriminator 2
 17700 0dc0 97F89330 		ldrb	r3, [r7, #147]	@ zero_extendqisi2
 17701 0dc4 0133     		adds	r3, r3, #1
 17702 0dc6 87F89330 		strb	r3, [r7, #147]
 17703              	.L664:
2373:..\src/command_processing.c ****             
 17704              		.loc 1 2373 0 is_stmt 0 discriminator 1
 17705 0dca D7F88C30 		ldr	r3, [r7, #140]
 17706 0dce 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 17707 0dd2 97F89320 		ldrb	r2, [r7, #147]	@ zero_extendqisi2
 17708 0dd6 9A42     		cmp	r2, r3
 17709 0dd8 7FF69BA9 		bls	.L708
 17710              	.LBE19:
2544:..\src/command_processing.c **** 		}
2545:..\src/command_processing.c **** 	}
2546:..\src/command_processing.c **** 	 
2547:..\src/command_processing.c ****     if (MEM_P->SH.rest_position_flag) {
 17711              		.loc 1 2547 0 is_stmt 1
 17712 0ddc D7F88C30 		ldr	r3, [r7, #140]
 17713 0de0 93F8AC32 		ldrb	r3, [r3, #684]	@ zero_extendqisi2
 17714 0de4 002B     		cmp	r3, #0
 17715 0de6 63D0     		beq	.L709
2548:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)MEM_P->SH.rest_delay);
 17716              		.loc 1 2548 0
 17717 0de8 D7F88C30 		ldr	r3, [r7, #140]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 396


 17718 0dec D3F8A422 		ldr	r2, [r3, #676]
 17719 0df0 07F11C03 		add	r3, r7, #28
 17720 0df4 AF49     		ldr	r1, .L733+12
 17721 0df6 1846     		mov	r0, r3
 17722 0df8 FFF7FEFF 		bl	sprintf
2549:..\src/command_processing.c ****         strcat(info_string, str);
 17723              		.loc 1 2549 0
 17724 0dfc 07F11C03 		add	r3, r7, #28
 17725 0e00 1946     		mov	r1, r3
 17726 0e02 7869     		ldr	r0, [r7, #20]
 17727 0e04 FFF7FEFF 		bl	strcat
2550:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17728              		.loc 1 2550 0
 17729 0e08 7869     		ldr	r0, [r7, #20]
 17730 0e0a FFF7FEFF 		bl	strlen
 17731 0e0e 0346     		mov	r3, r0
 17732 0e10 1A46     		mov	r2, r3
 17733 0e12 7B69     		ldr	r3, [r7, #20]
 17734 0e14 1344     		add	r3, r3, r2
 17735 0e16 A64A     		ldr	r2, .L733+8
 17736 0e18 1188     		ldrh	r1, [r2]	@ unaligned
 17737 0e1a 9278     		ldrb	r2, [r2, #2]
 17738 0e1c 1980     		strh	r1, [r3]	@ unaligned
 17739 0e1e 9A70     		strb	r2, [r3, #2]
2551:..\src/command_processing.c ****         
2552:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)MEM_P->SH.rest_vel);
 17740              		.loc 1 2552 0
 17741 0e20 D7F88C30 		ldr	r3, [r7, #140]
 17742 0e24 D3F8A822 		ldr	r2, [r3, #680]
 17743 0e28 07F11C03 		add	r3, r7, #28
 17744 0e2c A249     		ldr	r1, .L733+16
 17745 0e2e 1846     		mov	r0, r3
 17746 0e30 FFF7FEFF 		bl	sprintf
2553:..\src/command_processing.c ****         strcat(info_string, str);
 17747              		.loc 1 2553 0
 17748 0e34 07F11C03 		add	r3, r7, #28
 17749 0e38 1946     		mov	r1, r3
 17750 0e3a 7869     		ldr	r0, [r7, #20]
 17751 0e3c FFF7FEFF 		bl	strcat
2554:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 17752              		.loc 1 2554 0
 17753 0e40 7869     		ldr	r0, [r7, #20]
 17754 0e42 FFF7FEFF 		bl	strlen
 17755 0e46 0346     		mov	r3, r0
 17756 0e48 1A46     		mov	r2, r3
 17757 0e4a 7B69     		ldr	r3, [r7, #20]
 17758 0e4c 1344     		add	r3, r3, r2
 17759 0e4e 984A     		ldr	r2, .L733+8
 17760 0e50 1188     		ldrh	r1, [r2]	@ unaligned
 17761 0e52 9278     		ldrb	r2, [r2, #2]
 17762 0e54 1980     		strh	r1, [r3]	@ unaligned
 17763 0e56 9A70     		strb	r2, [r3, #2]
2555:..\src/command_processing.c ****         
2556:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(MEM_P->SH.rest_pos >> MEM_P->enc[MEM_P->motor[0].en
 17764              		.loc 1 2556 0
 17765 0e58 D7F88C30 		ldr	r3, [r7, #140]
 17766 0e5c D3F8A022 		ldr	r2, [r3, #672]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 397


 17767 0e60 D7F88C30 		ldr	r3, [r7, #140]
 17768 0e64 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 17769 0e68 1846     		mov	r0, r3
 17770 0e6a D7F88C10 		ldr	r1, [r7, #140]
 17771 0e6e 0346     		mov	r3, r0
 17772 0e70 5B00     		lsls	r3, r3, #1
 17773 0e72 0344     		add	r3, r3, r0
 17774 0e74 1B01     		lsls	r3, r3, #4
 17775 0e76 0B44     		add	r3, r3, r1
 17776 0e78 03F29513 		addw	r3, r3, #405
 17777 0e7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17778 0e7e 1A41     		asrs	r2, r2, r3
 17779 0e80 07F11C03 		add	r3, r7, #28
 17780 0e84 8D49     		ldr	r1, .L733+20
 17781 0e86 1846     		mov	r0, r3
 17782 0e88 FFF7FEFF 		bl	sprintf
2557:..\src/command_processing.c ****         strcat(info_string, str);
 17783              		.loc 1 2557 0
 17784 0e8c 07F11C03 		add	r3, r7, #28
 17785 0e90 1946     		mov	r1, r3
 17786 0e92 7869     		ldr	r0, [r7, #20]
 17787 0e94 FFF7FEFF 		bl	strcat
2558:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 17788              		.loc 1 2558 0
 17789 0e98 7869     		ldr	r0, [r7, #20]
 17790 0e9a FFF7FEFF 		bl	strlen
 17791 0e9e 0346     		mov	r3, r0
 17792 0ea0 1A46     		mov	r2, r3
 17793 0ea2 7B69     		ldr	r3, [r7, #20]
 17794 0ea4 1344     		add	r3, r3, r2
 17795 0ea6 824A     		ldr	r2, .L733+8
 17796 0ea8 1188     		ldrh	r1, [r2]	@ unaligned
 17797 0eaa 9278     		ldrb	r2, [r2, #2]
 17798 0eac 1980     		strh	r1, [r3]	@ unaligned
 17799 0eae 9A70     		strb	r2, [r3, #2]
 17800              	.L709:
2559:..\src/command_processing.c ****     }
2560:..\src/command_processing.c **** 	
2561:..\src/command_processing.c **** 	if (MEM_P->imu.read_imu_flag) {
 17801              		.loc 1 2561 0
 17802 0eb0 D7F88C30 		ldr	r3, [r7, #140]
 17803 0eb4 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 17804 0eb8 002B     		cmp	r3, #0
 17805 0eba 00F0CB81 		beq	.L724
2562:..\src/command_processing.c **** 		sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 17806              		.loc 1 2562 0
 17807 0ebe 804B     		ldr	r3, .L733+24
 17808 0ec0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17809 0ec2 1A46     		mov	r2, r3
 17810 0ec4 07F11C03 		add	r3, r7, #28
 17811 0ec8 7E49     		ldr	r1, .L733+28
 17812 0eca 1846     		mov	r0, r3
 17813 0ecc FFF7FEFF 		bl	sprintf
2563:..\src/command_processing.c **** 		strcat(info_string, str);
 17814              		.loc 1 2563 0
 17815 0ed0 07F11C03 		add	r3, r7, #28
 17816 0ed4 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 398


 17817 0ed6 7869     		ldr	r0, [r7, #20]
 17818 0ed8 FFF7FEFF 		bl	strcat
2564:..\src/command_processing.c **** 		
2565:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 17819              		.loc 1 2565 0
 17820 0edc 7869     		ldr	r0, [r7, #20]
 17821 0ede FFF7FEFF 		bl	strlen
 17822 0ee2 0346     		mov	r3, r0
 17823 0ee4 1A46     		mov	r2, r3
 17824 0ee6 7B69     		ldr	r3, [r7, #20]
 17825 0ee8 1344     		add	r3, r3, r2
 17826 0eea 714A     		ldr	r2, .L733+8
 17827 0eec 1188     		ldrh	r1, [r2]	@ unaligned
 17828 0eee 9278     		ldrb	r2, [r2, #2]
 17829 0ef0 1980     		strh	r1, [r3]	@ unaligned
 17830 0ef2 9A70     		strb	r2, [r3, #2]
2566:..\src/command_processing.c **** 		
2567:..\src/command_processing.c **** 		strcat(info_string, "IMUs CONFIGURATION\r\n");
 17831              		.loc 1 2567 0
 17832 0ef4 7869     		ldr	r0, [r7, #20]
 17833 0ef6 FFF7FEFF 		bl	strlen
 17834 0efa 0346     		mov	r3, r0
 17835 0efc 1A46     		mov	r2, r3
 17836 0efe 7B69     		ldr	r3, [r7, #20]
 17837 0f00 1344     		add	r3, r3, r2
 17838 0f02 714A     		ldr	r2, .L733+32
 17839 0f04 1D46     		mov	r5, r3
 17840 0f06 1446     		mov	r4, r2
 17841 0f08 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17842 0f0a 2860     		str	r0, [r5]	@ unaligned
 17843 0f0c 6960     		str	r1, [r5, #4]	@ unaligned
 17844 0f0e AA60     		str	r2, [r5, #8]	@ unaligned
 17845 0f10 EB60     		str	r3, [r5, #12]	@ unaligned
 17846 0f12 2068     		ldr	r0, [r4]	@ unaligned
 17847 0f14 2861     		str	r0, [r5, #16]	@ unaligned
 17848 0f16 2379     		ldrb	r3, [r4, #4]
 17849 0f18 2B75     		strb	r3, [r5, #20]
2568:..\src/command_processing.c **** 		for (i=0; i<N_IMU_Connected; i++){
 17850              		.loc 1 2568 0
 17851 0f1a 0023     		movs	r3, #0
 17852 0f1c C7F89430 		str	r3, [r7, #148]
 17853 0f20 84E1     		b	.L711
 17854              	.L722:
2569:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 17855              		.loc 1 2569 0
 17856 0f22 6A4A     		ldr	r2, .L733+36
 17857 0f24 D7F89430 		ldr	r3, [r7, #148]
 17858 0f28 1344     		add	r3, r3, r2
 17859 0f2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17860 0f2c 07F11C00 		add	r0, r7, #28
 17861 0f30 D7F89420 		ldr	r2, [r7, #148]
 17862 0f34 6649     		ldr	r1, .L733+40
 17863 0f36 FFF7FEFF 		bl	sprintf
2570:..\src/command_processing.c **** 			strcat(info_string, str);
 17864              		.loc 1 2570 0
 17865 0f3a 07F11C03 		add	r3, r7, #28
 17866 0f3e 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 399


 17867 0f40 7869     		ldr	r0, [r7, #20]
 17868 0f42 FFF7FEFF 		bl	strcat
2571:..\src/command_processing.c **** 			
2572:..\src/command_processing.c **** 			sprintf(str, "\tAccelerometers: ");
 17869              		.loc 1 2572 0
 17870 0f46 07F11C03 		add	r3, r7, #28
 17871 0f4a 624A     		ldr	r2, .L733+44
 17872 0f4c 1C46     		mov	r4, r3
 17873 0f4e 1546     		mov	r5, r2
 17874 0f50 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 17875 0f52 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 17876 0f54 2B68     		ldr	r3, [r5]
 17877 0f56 2380     		strh	r3, [r4]	@ movhi
2573:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][0]))
 17878              		.loc 1 2573 0
 17879 0f58 5C4A     		ldr	r2, .L733+36
 17880 0f5a D7F89430 		ldr	r3, [r7, #148]
 17881 0f5e 1344     		add	r3, r3, r2
 17882 0f60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17883 0f62 1946     		mov	r1, r3
 17884 0f64 D7F88C20 		ldr	r2, [r7, #140]
 17885 0f68 0B46     		mov	r3, r1
 17886 0f6a 9B00     		lsls	r3, r3, #2
 17887 0f6c 0B44     		add	r3, r3, r1
 17888 0f6e 1344     		add	r3, r3, r2
 17889 0f70 03F20223 		addw	r3, r3, #514
 17890 0f74 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17891 0f76 002B     		cmp	r3, #0
 17892 0f78 0FD0     		beq	.L712
2574:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17893              		.loc 1 2574 0
 17894 0f7a 07F11C03 		add	r3, r7, #28
 17895 0f7e 1846     		mov	r0, r3
 17896 0f80 FFF7FEFF 		bl	strlen
 17897 0f84 0346     		mov	r3, r0
 17898 0f86 1A46     		mov	r2, r3
 17899 0f88 07F11C03 		add	r3, r7, #28
 17900 0f8c 1344     		add	r3, r3, r2
 17901 0f8e 524A     		ldr	r2, .L733+48
 17902 0f90 1068     		ldr	r0, [r2]	@ unaligned
 17903 0f92 1860     		str	r0, [r3]	@ unaligned
 17904 0f94 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17905 0f96 9A80     		strh	r2, [r3, #4]	@ unaligned
 17906 0f98 0EE0     		b	.L713
 17907              	.L712:
2575:..\src/command_processing.c **** 			else
2576:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17908              		.loc 1 2576 0
 17909 0f9a 07F11C03 		add	r3, r7, #28
 17910 0f9e 1846     		mov	r0, r3
 17911 0fa0 FFF7FEFF 		bl	strlen
 17912 0fa4 0346     		mov	r3, r0
 17913 0fa6 1A46     		mov	r2, r3
 17914 0fa8 07F11C03 		add	r3, r7, #28
 17915 0fac 1344     		add	r3, r3, r2
 17916 0fae 4B4A     		ldr	r2, .L733+52
 17917 0fb0 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 400


 17918 0fb2 1860     		str	r0, [r3]	@ unaligned
 17919 0fb4 1279     		ldrb	r2, [r2, #4]
 17920 0fb6 1A71     		strb	r2, [r3, #4]
 17921              	.L713:
2577:..\src/command_processing.c **** 			strcat(str, "\tGyroscopes: ");
 17922              		.loc 1 2577 0
 17923 0fb8 07F11C03 		add	r3, r7, #28
 17924 0fbc 1846     		mov	r0, r3
 17925 0fbe FFF7FEFF 		bl	strlen
 17926 0fc2 0346     		mov	r3, r0
 17927 0fc4 1A46     		mov	r2, r3
 17928 0fc6 07F11C03 		add	r3, r7, #28
 17929 0fca 1344     		add	r3, r3, r2
 17930 0fcc 444A     		ldr	r2, .L733+56
 17931 0fce 1C46     		mov	r4, r3
 17932 0fd0 1346     		mov	r3, r2
 17933 0fd2 07CB     		ldmia	r3!, {r0, r1, r2}
 17934 0fd4 2060     		str	r0, [r4]	@ unaligned
 17935 0fd6 6160     		str	r1, [r4, #4]	@ unaligned
 17936 0fd8 A260     		str	r2, [r4, #8]	@ unaligned
 17937 0fda 1B88     		ldrh	r3, [r3]	@ unaligned
 17938 0fdc A381     		strh	r3, [r4, #12]	@ unaligned
2578:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][1]))
 17939              		.loc 1 2578 0
 17940 0fde 3B4A     		ldr	r2, .L733+36
 17941 0fe0 D7F89430 		ldr	r3, [r7, #148]
 17942 0fe4 1344     		add	r3, r3, r2
 17943 0fe6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17944 0fe8 1946     		mov	r1, r3
 17945 0fea D7F88C20 		ldr	r2, [r7, #140]
 17946 0fee 0B46     		mov	r3, r1
 17947 0ff0 9B00     		lsls	r3, r3, #2
 17948 0ff2 0B44     		add	r3, r3, r1
 17949 0ff4 1344     		add	r3, r3, r2
 17950 0ff6 03F20323 		addw	r3, r3, #515
 17951 0ffa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 17952 0ffc 002B     		cmp	r3, #0
 17953 0ffe 0FD0     		beq	.L714
2579:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 17954              		.loc 1 2579 0
 17955 1000 07F11C03 		add	r3, r7, #28
 17956 1004 1846     		mov	r0, r3
 17957 1006 FFF7FEFF 		bl	strlen
 17958 100a 0346     		mov	r3, r0
 17959 100c 1A46     		mov	r2, r3
 17960 100e 07F11C03 		add	r3, r7, #28
 17961 1012 1344     		add	r3, r3, r2
 17962 1014 304A     		ldr	r2, .L733+48
 17963 1016 1068     		ldr	r0, [r2]	@ unaligned
 17964 1018 1860     		str	r0, [r3]	@ unaligned
 17965 101a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 17966 101c 9A80     		strh	r2, [r3, #4]	@ unaligned
 17967 101e 0EE0     		b	.L715
 17968              	.L714:
2580:..\src/command_processing.c **** 			else
2581:..\src/command_processing.c **** 				strcat(str, "NO\r\n"); 
 17969              		.loc 1 2581 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 401


 17970 1020 07F11C03 		add	r3, r7, #28
 17971 1024 1846     		mov	r0, r3
 17972 1026 FFF7FEFF 		bl	strlen
 17973 102a 0346     		mov	r3, r0
 17974 102c 1A46     		mov	r2, r3
 17975 102e 07F11C03 		add	r3, r7, #28
 17976 1032 1344     		add	r3, r3, r2
 17977 1034 294A     		ldr	r2, .L733+52
 17978 1036 1068     		ldr	r0, [r2]	@ unaligned
 17979 1038 1860     		str	r0, [r3]	@ unaligned
 17980 103a 1279     		ldrb	r2, [r2, #4]
 17981 103c 1A71     		strb	r2, [r3, #4]
 17982              	.L715:
2582:..\src/command_processing.c **** 			strcat(str, "\tMagnetometers: ");
 17983              		.loc 1 2582 0
 17984 103e 07F11C03 		add	r3, r7, #28
 17985 1042 1846     		mov	r0, r3
 17986 1044 FFF7FEFF 		bl	strlen
 17987 1048 0346     		mov	r3, r0
 17988 104a 1A46     		mov	r2, r3
 17989 104c 07F11C03 		add	r3, r7, #28
 17990 1050 1344     		add	r3, r3, r2
 17991 1052 244A     		ldr	r2, .L733+60
 17992 1054 1D46     		mov	r5, r3
 17993 1056 1446     		mov	r4, r2
 17994 1058 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 17995 105a 2860     		str	r0, [r5]	@ unaligned
 17996 105c 6960     		str	r1, [r5, #4]	@ unaligned
 17997 105e AA60     		str	r2, [r5, #8]	@ unaligned
 17998 1060 EB60     		str	r3, [r5, #12]	@ unaligned
 17999 1062 2378     		ldrb	r3, [r4]
 18000 1064 2B74     		strb	r3, [r5, #16]
2583:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][2]))
 18001              		.loc 1 2583 0
 18002 1066 194A     		ldr	r2, .L733+36
 18003 1068 D7F89430 		ldr	r3, [r7, #148]
 18004 106c 1344     		add	r3, r3, r2
 18005 106e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18006 1070 1946     		mov	r1, r3
 18007 1072 D7F88C20 		ldr	r2, [r7, #140]
 18008 1076 0B46     		mov	r3, r1
 18009 1078 9B00     		lsls	r3, r3, #2
 18010 107a 0B44     		add	r3, r3, r1
 18011 107c 1344     		add	r3, r3, r2
 18012 107e 03F50173 		add	r3, r3, #516
 18013 1082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18014 1084 002B     		cmp	r3, #0
 18015 1086 2FD0     		beq	.L716
2584:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18016              		.loc 1 2584 0
 18017 1088 07F11C03 		add	r3, r7, #28
 18018 108c 1846     		mov	r0, r3
 18019 108e FFF7FEFF 		bl	strlen
 18020 1092 0346     		mov	r3, r0
 18021 1094 1A46     		mov	r2, r3
 18022 1096 07F11C03 		add	r3, r7, #28
 18023 109a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 402


 18024 109c 0E4A     		ldr	r2, .L733+48
 18025 109e 1068     		ldr	r0, [r2]	@ unaligned
 18026 10a0 1860     		str	r0, [r3]	@ unaligned
 18027 10a2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18028 10a4 9A80     		strh	r2, [r3, #4]	@ unaligned
 18029 10a6 2EE0     		b	.L717
 18030              	.L734:
 18031              		.align	2
 18032              	.L733:
 18033 10a8 C4160000 		.word	.LC219
 18034 10ac E0160000 		.word	.LC220
 18035 10b0 18100000 		.word	.LC143
 18036 10b4 3C170000 		.word	.LC224
 18037 10b8 58170000 		.word	.LC225
 18038 10bc 80170000 		.word	.LC226
 18039 10c0 00000000 		.word	N_IMU_Connected
 18040 10c4 94170000 		.word	.LC227
 18041 10c8 A8170000 		.word	.LC228
 18042 10cc 00000000 		.word	IMU_connected
 18043 10d0 C0170000 		.word	.LC229
 18044 10d4 D4170000 		.word	.LC230
 18045 10d8 C4110000 		.word	.LC165
 18046 10dc CC110000 		.word	.LC166
 18047 10e0 E8170000 		.word	.LC231
 18048 10e4 F8170000 		.word	.LC232
 18049              	.L716:
2585:..\src/command_processing.c **** 			else
2586:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 18050              		.loc 1 2586 0
 18051 10e8 07F11C03 		add	r3, r7, #28
 18052 10ec 1846     		mov	r0, r3
 18053 10ee FFF7FEFF 		bl	strlen
 18054 10f2 0346     		mov	r3, r0
 18055 10f4 1A46     		mov	r2, r3
 18056 10f6 07F11C03 		add	r3, r7, #28
 18057 10fa 1344     		add	r3, r3, r2
 18058 10fc 584A     		ldr	r2, .L735
 18059 10fe 1068     		ldr	r0, [r2]	@ unaligned
 18060 1100 1860     		str	r0, [r3]	@ unaligned
 18061 1102 1279     		ldrb	r2, [r2, #4]
 18062 1104 1A71     		strb	r2, [r3, #4]
 18063              	.L717:
2587:..\src/command_processing.c **** 			strcat(str, "\tQuaternion: ");                
 18064              		.loc 1 2587 0
 18065 1106 07F11C03 		add	r3, r7, #28
 18066 110a 1846     		mov	r0, r3
 18067 110c FFF7FEFF 		bl	strlen
 18068 1110 0346     		mov	r3, r0
 18069 1112 1A46     		mov	r2, r3
 18070 1114 07F11C03 		add	r3, r7, #28
 18071 1118 1344     		add	r3, r3, r2
 18072 111a 524A     		ldr	r2, .L735+4
 18073 111c 1C46     		mov	r4, r3
 18074 111e 1346     		mov	r3, r2
 18075 1120 07CB     		ldmia	r3!, {r0, r1, r2}
 18076 1122 2060     		str	r0, [r4]	@ unaligned
 18077 1124 6160     		str	r1, [r4, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 403


 18078 1126 A260     		str	r2, [r4, #8]	@ unaligned
 18079 1128 1B88     		ldrh	r3, [r3]	@ unaligned
 18080 112a A381     		strh	r3, [r4, #12]	@ unaligned
2588:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][3]))
 18081              		.loc 1 2588 0
 18082 112c 4E4A     		ldr	r2, .L735+8
 18083 112e D7F89430 		ldr	r3, [r7, #148]
 18084 1132 1344     		add	r3, r3, r2
 18085 1134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18086 1136 1946     		mov	r1, r3
 18087 1138 D7F88C20 		ldr	r2, [r7, #140]
 18088 113c 0B46     		mov	r3, r1
 18089 113e 9B00     		lsls	r3, r3, #2
 18090 1140 0B44     		add	r3, r3, r1
 18091 1142 1344     		add	r3, r3, r2
 18092 1144 03F20523 		addw	r3, r3, #517
 18093 1148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18094 114a 002B     		cmp	r3, #0
 18095 114c 0FD0     		beq	.L718
2589:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18096              		.loc 1 2589 0
 18097 114e 07F11C03 		add	r3, r7, #28
 18098 1152 1846     		mov	r0, r3
 18099 1154 FFF7FEFF 		bl	strlen
 18100 1158 0346     		mov	r3, r0
 18101 115a 1A46     		mov	r2, r3
 18102 115c 07F11C03 		add	r3, r7, #28
 18103 1160 1344     		add	r3, r3, r2
 18104 1162 424A     		ldr	r2, .L735+12
 18105 1164 1068     		ldr	r0, [r2]	@ unaligned
 18106 1166 1860     		str	r0, [r3]	@ unaligned
 18107 1168 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18108 116a 9A80     		strh	r2, [r3, #4]	@ unaligned
 18109 116c 0EE0     		b	.L719
 18110              	.L718:
2590:..\src/command_processing.c **** 			else
2591:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 18111              		.loc 1 2591 0
 18112 116e 07F11C03 		add	r3, r7, #28
 18113 1172 1846     		mov	r0, r3
 18114 1174 FFF7FEFF 		bl	strlen
 18115 1178 0346     		mov	r3, r0
 18116 117a 1A46     		mov	r2, r3
 18117 117c 07F11C03 		add	r3, r7, #28
 18118 1180 1344     		add	r3, r3, r2
 18119 1182 374A     		ldr	r2, .L735
 18120 1184 1068     		ldr	r0, [r2]	@ unaligned
 18121 1186 1860     		str	r0, [r3]	@ unaligned
 18122 1188 1279     		ldrb	r2, [r2, #4]
 18123 118a 1A71     		strb	r2, [r3, #4]
 18124              	.L719:
2592:..\src/command_processing.c **** 			strcat(str, "\tTemperature: ");
 18125              		.loc 1 2592 0
 18126 118c 07F11C03 		add	r3, r7, #28
 18127 1190 1846     		mov	r0, r3
 18128 1192 FFF7FEFF 		bl	strlen
 18129 1196 0346     		mov	r3, r0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 404


 18130 1198 1A46     		mov	r2, r3
 18131 119a 07F11C03 		add	r3, r7, #28
 18132 119e 1344     		add	r3, r3, r2
 18133 11a0 334A     		ldr	r2, .L735+16
 18134 11a2 1C46     		mov	r4, r3
 18135 11a4 1346     		mov	r3, r2
 18136 11a6 07CB     		ldmia	r3!, {r0, r1, r2}
 18137 11a8 2060     		str	r0, [r4]	@ unaligned
 18138 11aa 6160     		str	r1, [r4, #4]	@ unaligned
 18139 11ac A260     		str	r2, [r4, #8]	@ unaligned
 18140 11ae 1A88     		ldrh	r2, [r3]	@ unaligned
 18141 11b0 9B78     		ldrb	r3, [r3, #2]
 18142 11b2 A281     		strh	r2, [r4, #12]	@ unaligned
 18143 11b4 A373     		strb	r3, [r4, #14]
2593:..\src/command_processing.c **** 			if ((MEM_P->imu.IMU_conf[IMU_connected[i]][4]))
 18144              		.loc 1 2593 0
 18145 11b6 2C4A     		ldr	r2, .L735+8
 18146 11b8 D7F89430 		ldr	r3, [r7, #148]
 18147 11bc 1344     		add	r3, r3, r2
 18148 11be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18149 11c0 1946     		mov	r1, r3
 18150 11c2 D7F88C20 		ldr	r2, [r7, #140]
 18151 11c6 0B46     		mov	r3, r1
 18152 11c8 9B00     		lsls	r3, r3, #2
 18153 11ca 0B44     		add	r3, r3, r1
 18154 11cc 1344     		add	r3, r3, r2
 18155 11ce 03F20623 		addw	r3, r3, #518
 18156 11d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18157 11d4 002B     		cmp	r3, #0
 18158 11d6 0FD0     		beq	.L720
2594:..\src/command_processing.c **** 				strcat(str, "YES\r\n");
 18159              		.loc 1 2594 0
 18160 11d8 07F11C03 		add	r3, r7, #28
 18161 11dc 1846     		mov	r0, r3
 18162 11de FFF7FEFF 		bl	strlen
 18163 11e2 0346     		mov	r3, r0
 18164 11e4 1A46     		mov	r2, r3
 18165 11e6 07F11C03 		add	r3, r7, #28
 18166 11ea 1344     		add	r3, r3, r2
 18167 11ec 1F4A     		ldr	r2, .L735+12
 18168 11ee 1068     		ldr	r0, [r2]	@ unaligned
 18169 11f0 1860     		str	r0, [r3]	@ unaligned
 18170 11f2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 18171 11f4 9A80     		strh	r2, [r3, #4]	@ unaligned
 18172 11f6 0EE0     		b	.L721
 18173              	.L720:
2595:..\src/command_processing.c **** 			else
2596:..\src/command_processing.c **** 				strcat(str, "NO\r\n");
 18174              		.loc 1 2596 0
 18175 11f8 07F11C03 		add	r3, r7, #28
 18176 11fc 1846     		mov	r0, r3
 18177 11fe FFF7FEFF 		bl	strlen
 18178 1202 0346     		mov	r3, r0
 18179 1204 1A46     		mov	r2, r3
 18180 1206 07F11C03 		add	r3, r7, #28
 18181 120a 1344     		add	r3, r3, r2
 18182 120c 144A     		ldr	r2, .L735
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 405


 18183 120e 1068     		ldr	r0, [r2]	@ unaligned
 18184 1210 1860     		str	r0, [r3]	@ unaligned
 18185 1212 1279     		ldrb	r2, [r2, #4]
 18186 1214 1A71     		strb	r2, [r3, #4]
 18187              	.L721:
2597:..\src/command_processing.c **** 				 
2598:..\src/command_processing.c **** 			strcat(info_string, str);
 18188              		.loc 1 2598 0 discriminator 2
 18189 1216 07F11C03 		add	r3, r7, #28
 18190 121a 1946     		mov	r1, r3
 18191 121c 7869     		ldr	r0, [r7, #20]
 18192 121e FFF7FEFF 		bl	strcat
2568:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18193              		.loc 1 2568 0 discriminator 2
 18194 1222 D7F89430 		ldr	r3, [r7, #148]
 18195 1226 0133     		adds	r3, r3, #1
 18196 1228 C7F89430 		str	r3, [r7, #148]
 18197              	.L711:
2568:..\src/command_processing.c **** 			sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18198              		.loc 1 2568 0 is_stmt 0 discriminator 1
 18199 122c 114B     		ldr	r3, .L735+20
 18200 122e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18201 1230 1A46     		mov	r2, r3
 18202 1232 D7F89430 		ldr	r3, [r7, #148]
 18203 1236 9A42     		cmp	r2, r3
 18204 1238 3FF773AE 		bgt	.L722
2599:..\src/command_processing.c **** 		}       
2600:..\src/command_processing.c **** 		
2601:..\src/command_processing.c **** 		strcat(info_string, "\r\n");
 18205              		.loc 1 2601 0 is_stmt 1
 18206 123c 7869     		ldr	r0, [r7, #20]
 18207 123e FFF7FEFF 		bl	strlen
 18208 1242 0346     		mov	r3, r0
 18209 1244 1A46     		mov	r2, r3
 18210 1246 7B69     		ldr	r3, [r7, #20]
 18211 1248 1344     		add	r3, r3, r2
 18212 124a 0B4A     		ldr	r2, .L735+24
 18213 124c 1188     		ldrh	r1, [r2]	@ unaligned
 18214 124e 9278     		ldrb	r2, [r2, #2]
 18215 1250 1980     		strh	r1, [r3]	@ unaligned
 18216 1252 9A70     		strb	r2, [r3, #2]
 18217              	.L724:
2602:..\src/command_processing.c **** 	}
2603:..\src/command_processing.c **** }
 18218              		.loc 1 2603 0
 18219 1254 00BF     		nop
 18220 1256 9C37     		adds	r7, r7, #156
 18221              		.cfi_def_cfa_offset 36
 18222 1258 BD46     		mov	sp, r7
 18223              		.cfi_def_cfa_register 13
 18224              		@ sp needed
 18225 125a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 18226              	.L736:
 18227 125e 00BF     		.align	2
 18228              	.L735:
 18229 1260 CC110000 		.word	.LC166
 18230 1264 0C180000 		.word	.LC233
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 406


 18231 1268 00000000 		.word	IMU_connected
 18232 126c C4110000 		.word	.LC165
 18233 1270 1C180000 		.word	.LC234
 18234 1274 00000000 		.word	N_IMU_Connected
 18235 1278 18100000 		.word	.LC143
 18236              		.cfi_endproc
 18237              	.LFE74:
 18238              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 18239              		.section	.rodata
 18240 1b06 0000     		.align	2
 18241              	.LC259:
 18242 1b08 486F7572 		.ascii	"Hour,Min,Sec,\000"
 18242      2C4D696E 
 18242      2C536563 
 18242      2C00
 18243 1b16 0000     		.align	2
 18244              	.LC260:
 18245 1b18 42696E5F 		.ascii	"Bin_%d_Pos,\000"
 18245      25645F50 
 18245      6F732C00 
 18246              		.align	2
 18247              	.LC261:
 18248 1b24 42696E5F 		.ascii	"Bin_%d_Curr,\000"
 18248      25645F43 
 18248      7572722C 
 18248      00
 18249 1b31 000000   		.align	2
 18250              	.LC262:
 18251 1b34 454D475F 		.ascii	"EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_powe"
 18251      315F6163 
 18251      742C454D 
 18251      475F325F 
 18251      6163742C 
 18252 1b67 725F6F6E 		.ascii	"r_on_time,Total_rest_time\000"
 18252      5F74696D 
 18252      652C546F 
 18252      74616C5F 
 18252      72657374 
 18253              		.section	.text.prepare_SD_legend,"ax",%progbits
 18254              		.align	2
 18255              		.global	prepare_SD_legend
 18256              		.thumb
 18257              		.thumb_func
 18258              		.type	prepare_SD_legend, %function
 18259              	prepare_SD_legend:
 18260              	.LFB75:
2604:..\src/command_processing.c **** 
2605:..\src/command_processing.c **** 
2606:..\src/command_processing.c **** //==============================================================================
2607:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2608:..\src/command_processing.c **** //==============================================================================
2609:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2610:..\src/command_processing.c **** {
 18261              		.loc 1 2610 0
 18262              		.cfi_startproc
 18263              		@ args = 0, pretend = 0, frame = 112
 18264              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 407


 18265 0000 90B5     		push	{r4, r7, lr}
 18266              		.cfi_def_cfa_offset 12
 18267              		.cfi_offset 4, -12
 18268              		.cfi_offset 7, -8
 18269              		.cfi_offset 14, -4
 18270 0002 9DB0     		sub	sp, sp, #116
 18271              		.cfi_def_cfa_offset 128
 18272 0004 00AF     		add	r7, sp, #0
 18273              		.cfi_def_cfa_register 7
 18274 0006 7860     		str	r0, [r7, #4]
2611:..\src/command_processing.c ****     char str[100];  
2612:..\src/command_processing.c ****     int i;
2613:..\src/command_processing.c ****         
2614:..\src/command_processing.c ****     // Legend
2615:..\src/command_processing.c ****     strcpy(info_string, "Hour,Min,Sec,");
 18275              		.loc 1 2615 0
 18276 0008 7B68     		ldr	r3, [r7, #4]
 18277 000a 2A4A     		ldr	r2, .L742
 18278 000c 1C46     		mov	r4, r3
 18279 000e 1346     		mov	r3, r2
 18280 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 18281 0012 2060     		str	r0, [r4]	@ unaligned
 18282 0014 6160     		str	r1, [r4, #4]	@ unaligned
 18283 0016 A260     		str	r2, [r4, #8]	@ unaligned
 18284 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 18285 001a A381     		strh	r3, [r4, #12]	@ unaligned
2616:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 18286              		.loc 1 2616 0
 18287 001c 0123     		movs	r3, #1
 18288 001e FB66     		str	r3, [r7, #108]
 18289 0020 0FE0     		b	.L738
 18290              	.L739:
2617:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos,", i); 
 18291              		.loc 1 2617 0 discriminator 3
 18292 0022 07F10803 		add	r3, r7, #8
 18293 0026 FA6E     		ldr	r2, [r7, #108]
 18294 0028 2349     		ldr	r1, .L742+4
 18295 002a 1846     		mov	r0, r3
 18296 002c FFF7FEFF 		bl	sprintf
2618:..\src/command_processing.c ****         strcat(info_string, str);
 18297              		.loc 1 2618 0 discriminator 3
 18298 0030 07F10803 		add	r3, r7, #8
 18299 0034 1946     		mov	r1, r3
 18300 0036 7868     		ldr	r0, [r7, #4]
 18301 0038 FFF7FEFF 		bl	strcat
2616:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 18302              		.loc 1 2616 0 discriminator 3
 18303 003c FB6E     		ldr	r3, [r7, #108]
 18304 003e 0133     		adds	r3, r3, #1
 18305 0040 FB66     		str	r3, [r7, #108]
 18306              	.L738:
2616:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 18307              		.loc 1 2616 0 is_stmt 0 discriminator 1
 18308 0042 FB6E     		ldr	r3, [r7, #108]
 18309 0044 0A2B     		cmp	r3, #10
 18310 0046 ECDD     		ble	.L739
2619:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 408


2620:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 18311              		.loc 1 2620 0 is_stmt 1
 18312 0048 0123     		movs	r3, #1
 18313 004a FB66     		str	r3, [r7, #108]
 18314 004c 0FE0     		b	.L740
 18315              	.L741:
2621:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 18316              		.loc 1 2621 0 discriminator 3
 18317 004e 07F10803 		add	r3, r7, #8
 18318 0052 FA6E     		ldr	r2, [r7, #108]
 18319 0054 1949     		ldr	r1, .L742+8
 18320 0056 1846     		mov	r0, r3
 18321 0058 FFF7FEFF 		bl	sprintf
2622:..\src/command_processing.c ****         strcat(info_string, str);
 18322              		.loc 1 2622 0 discriminator 3
 18323 005c 07F10803 		add	r3, r7, #8
 18324 0060 1946     		mov	r1, r3
 18325 0062 7868     		ldr	r0, [r7, #4]
 18326 0064 FFF7FEFF 		bl	strcat
2620:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 18327              		.loc 1 2620 0 discriminator 3
 18328 0068 FB6E     		ldr	r3, [r7, #108]
 18329 006a 0133     		adds	r3, r3, #1
 18330 006c FB66     		str	r3, [r7, #108]
 18331              	.L740:
2620:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr,", i); 
 18332              		.loc 1 2620 0 is_stmt 0 discriminator 1
 18333 006e FB6E     		ldr	r3, [r7, #108]
 18334 0070 042B     		cmp	r3, #4
 18335 0072 ECDD     		ble	.L741
2623:..\src/command_processing.c ****     }
2624:..\src/command_processing.c ****     sprintf(str, "EMG_1_act,EMG_2_act,Rest_times,Wire_disp,Total_power_on_time,Total_rest_time");
 18336              		.loc 1 2624 0 is_stmt 1
 18337 0074 07F10803 		add	r3, r7, #8
 18338 0078 114A     		ldr	r2, .L742+12
 18339 007a 1846     		mov	r0, r3
 18340 007c 1146     		mov	r1, r2
 18341 007e 4D23     		movs	r3, #77
 18342 0080 1A46     		mov	r2, r3
 18343 0082 FFF7FEFF 		bl	memcpy
2625:..\src/command_processing.c ****     strcat(info_string, str);
 18344              		.loc 1 2625 0
 18345 0086 07F10803 		add	r3, r7, #8
 18346 008a 1946     		mov	r1, r3
 18347 008c 7868     		ldr	r0, [r7, #4]
 18348 008e FFF7FEFF 		bl	strcat
2626:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18349              		.loc 1 2626 0
 18350 0092 7868     		ldr	r0, [r7, #4]
 18351 0094 FFF7FEFF 		bl	strlen
 18352 0098 0346     		mov	r3, r0
 18353 009a 1A46     		mov	r2, r3
 18354 009c 7B68     		ldr	r3, [r7, #4]
 18355 009e 1344     		add	r3, r3, r2
 18356 00a0 084A     		ldr	r2, .L742+16
 18357 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 18358 00a4 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 409


 18359 00a6 1980     		strh	r1, [r3]	@ unaligned
 18360 00a8 9A70     		strb	r2, [r3, #2]
2627:..\src/command_processing.c **** }
 18361              		.loc 1 2627 0
 18362 00aa 00BF     		nop
 18363 00ac 7437     		adds	r7, r7, #116
 18364              		.cfi_def_cfa_offset 12
 18365 00ae BD46     		mov	sp, r7
 18366              		.cfi_def_cfa_register 13
 18367              		@ sp needed
 18368 00b0 90BD     		pop	{r4, r7, pc}
 18369              	.L743:
 18370 00b2 00BF     		.align	2
 18371              	.L742:
 18372 00b4 081B0000 		.word	.LC259
 18373 00b8 181B0000 		.word	.LC260
 18374 00bc 241B0000 		.word	.LC261
 18375 00c0 341B0000 		.word	.LC262
 18376 00c4 18100000 		.word	.LC143
 18377              		.cfi_endproc
 18378              	.LFE75:
 18379              		.size	prepare_SD_legend, .-prepare_SD_legend
 18380              		.section	.rodata
 18381 1b81 000000   		.align	2
 18382              	.LC263:
 18383 1b84 25303264 		.ascii	"%02d,%02d,%02d,\000"
 18383      2C253032 
 18383      642C2530 
 18383      32642C00 
 18384              		.align	2
 18385              	.LC264:
 18386 1b94 256C752C 		.ascii	"%lu,\000"
 18386      00
 18387 1b99 000000   		.align	2
 18388              	.LC265:
 18389 1b9c 256C752C 		.ascii	"%lu,%lu,\000"
 18389      256C752C 
 18389      00
 18390 1ba5 000000   		.align	2
 18391              	.LC266:
 18392 1ba8 256C752C 		.ascii	"%lu,%lu,%lu,%lu\000"
 18392      256C752C 
 18392      256C752C 
 18392      256C7500 
 18393              		.section	.text.prepare_SD_info,"ax",%progbits
 18394              		.align	2
 18395              		.global	prepare_SD_info
 18396              		.thumb
 18397              		.thumb_func
 18398              		.type	prepare_SD_info, %function
 18399              	prepare_SD_info:
 18400              	.LFB76:
2628:..\src/command_processing.c **** 
2629:..\src/command_processing.c **** //==============================================================================
2630:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2631:..\src/command_processing.c **** //==============================================================================
2632:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 410


2633:..\src/command_processing.c **** {
 18401              		.loc 1 2633 0
 18402              		.cfi_startproc
 18403              		@ args = 0, pretend = 0, frame = 112
 18404              		@ frame_needed = 1, uses_anonymous_args = 0
 18405 0000 90B5     		push	{r4, r7, lr}
 18406              		.cfi_def_cfa_offset 12
 18407              		.cfi_offset 4, -12
 18408              		.cfi_offset 7, -8
 18409              		.cfi_offset 14, -4
 18410 0002 9FB0     		sub	sp, sp, #124
 18411              		.cfi_def_cfa_offset 136
 18412 0004 02AF     		add	r7, sp, #8
 18413              		.cfi_def_cfa 7, 128
 18414 0006 7860     		str	r0, [r7, #4]
2634:..\src/command_processing.c ****     char str[100];  
2635:..\src/command_processing.c ****     int i;
2636:..\src/command_processing.c ****             
2637:..\src/command_processing.c ****     strcpy(info_string, "");
 18415              		.loc 1 2637 0
 18416 0008 7B68     		ldr	r3, [r7, #4]
 18417 000a 0022     		movs	r2, #0
 18418 000c 1A70     		strb	r2, [r3]
2638:..\src/command_processing.c ****     
2639:..\src/command_processing.c ****     // Time
2640:..\src/command_processing.c ****     strcat(info_string, "");
2641:..\src/command_processing.c ****     sprintf(str, "%02d,%02d,%02d,", (int)g_mem.exp.curr_time[3], (int)g_mem.exp.curr_time[4], (int)
 18419              		.loc 1 2641 0
 18420 000e 424B     		ldr	r3, .L749
 18421 0010 93F82332 		ldrb	r3, [r3, #547]	@ zero_extendqisi2
 18422 0014 1A46     		mov	r2, r3
 18423 0016 404B     		ldr	r3, .L749
 18424 0018 93F82432 		ldrb	r3, [r3, #548]	@ zero_extendqisi2
 18425 001c 1946     		mov	r1, r3
 18426 001e 3E4B     		ldr	r3, .L749
 18427 0020 93F82532 		ldrb	r3, [r3, #549]	@ zero_extendqisi2
 18428 0024 07F10800 		add	r0, r7, #8
 18429 0028 0093     		str	r3, [sp]
 18430 002a 0B46     		mov	r3, r1
 18431 002c 3B49     		ldr	r1, .L749+4
 18432 002e FFF7FEFF 		bl	sprintf
2642:..\src/command_processing.c ****     strcat(info_string, str);
 18433              		.loc 1 2642 0
 18434 0032 07F10803 		add	r3, r7, #8
 18435 0036 1946     		mov	r1, r3
 18436 0038 7868     		ldr	r0, [r7, #4]
 18437 003a FFF7FEFF 		bl	strcat
2643:..\src/command_processing.c **** 
2644:..\src/command_processing.c ****     // Pos_Bin
2645:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 18438              		.loc 1 2645 0
 18439 003e 0123     		movs	r3, #1
 18440 0040 FB66     		str	r3, [r7, #108]
 18441 0042 14E0     		b	.L745
 18442              	.L746:
2646:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18443              		.loc 1 2646 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 411


 18444 0044 FB6E     		ldr	r3, [r7, #108]
 18445 0046 013B     		subs	r3, r3, #1
 18446 0048 334A     		ldr	r2, .L749
 18447 004a 0633     		adds	r3, r3, #6
 18448 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 18449 0050 07F10803 		add	r3, r7, #8
 18450 0054 3249     		ldr	r1, .L749+8
 18451 0056 1846     		mov	r0, r3
 18452 0058 FFF7FEFF 		bl	sprintf
2647:..\src/command_processing.c ****         strcat(info_string, str);
 18453              		.loc 1 2647 0 discriminator 3
 18454 005c 07F10803 		add	r3, r7, #8
 18455 0060 1946     		mov	r1, r3
 18456 0062 7868     		ldr	r0, [r7, #4]
 18457 0064 FFF7FEFF 		bl	strcat
2645:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18458              		.loc 1 2645 0 discriminator 3
 18459 0068 FB6E     		ldr	r3, [r7, #108]
 18460 006a 0133     		adds	r3, r3, #1
 18461 006c FB66     		str	r3, [r7, #108]
 18462              	.L745:
2645:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.position_hist[i-1]); 
 18463              		.loc 1 2645 0 is_stmt 0 discriminator 1
 18464 006e FB6E     		ldr	r3, [r7, #108]
 18465 0070 0A2B     		cmp	r3, #10
 18466 0072 E7DD     		ble	.L746
2648:..\src/command_processing.c ****     }
2649:..\src/command_processing.c ****     
2650:..\src/command_processing.c ****     // Curr_Bin
2651:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 18467              		.loc 1 2651 0 is_stmt 1
 18468 0074 0123     		movs	r3, #1
 18469 0076 FB66     		str	r3, [r7, #108]
 18470 0078 14E0     		b	.L747
 18471              	.L748:
2652:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18472              		.loc 1 2652 0 discriminator 3
 18473 007a FB6E     		ldr	r3, [r7, #108]
 18474 007c 013B     		subs	r3, r3, #1
 18475 007e 264A     		ldr	r2, .L749
 18476 0080 1033     		adds	r3, r3, #16
 18477 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 18478 0086 07F10803 		add	r3, r7, #8
 18479 008a 2549     		ldr	r1, .L749+8
 18480 008c 1846     		mov	r0, r3
 18481 008e FFF7FEFF 		bl	sprintf
2653:..\src/command_processing.c ****         strcat(info_string, str);
 18482              		.loc 1 2653 0 discriminator 3
 18483 0092 07F10803 		add	r3, r7, #8
 18484 0096 1946     		mov	r1, r3
 18485 0098 7868     		ldr	r0, [r7, #4]
 18486 009a FFF7FEFF 		bl	strcat
2651:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18487              		.loc 1 2651 0 discriminator 3
 18488 009e FB6E     		ldr	r3, [r7, #108]
 18489 00a0 0133     		adds	r3, r3, #1
 18490 00a2 FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 412


 18491              	.L747:
2651:..\src/command_processing.c ****         sprintf(str, "%lu,", g_mem.cnt.current_hist[i-1]); 
 18492              		.loc 1 2651 0 is_stmt 0 discriminator 1
 18493 00a4 FB6E     		ldr	r3, [r7, #108]
 18494 00a6 042B     		cmp	r3, #4
 18495 00a8 E7DD     		ble	.L748
2654:..\src/command_processing.c ****     }
2655:..\src/command_processing.c ****        
2656:..\src/command_processing.c ****     // EMG_1, EMG_2
2657:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,", g_mem.cnt.emg_counter[0], g_mem.cnt.emg_counter[1]);
 18496              		.loc 1 2657 0 is_stmt 1
 18497 00aa 1B4B     		ldr	r3, .L749
 18498 00ac 1A69     		ldr	r2, [r3, #16]
 18499 00ae 1A4B     		ldr	r3, .L749
 18500 00b0 5B69     		ldr	r3, [r3, #20]
 18501 00b2 07F10800 		add	r0, r7, #8
 18502 00b6 1B49     		ldr	r1, .L749+12
 18503 00b8 FFF7FEFF 		bl	sprintf
2658:..\src/command_processing.c ****     strcat(info_string, str);
 18504              		.loc 1 2658 0
 18505 00bc 07F10803 		add	r3, r7, #8
 18506 00c0 1946     		mov	r1, r3
 18507 00c2 7868     		ldr	r0, [r7, #4]
 18508 00c4 FFF7FEFF 		bl	strcat
2659:..\src/command_processing.c ****     
2660:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2661:..\src/command_processing.c ****     sprintf(str, "%lu,%lu,%lu,%lu", g_mem.cnt.rest_counter, g_mem.cnt.wire_disp, g_mem.cnt.total_ti
 18509              		.loc 1 2661 0
 18510 00c8 134B     		ldr	r3, .L749
 18511 00ca 196D     		ldr	r1, [r3, #80]
 18512 00cc 124B     		ldr	r3, .L749
 18513 00ce 5C6D     		ldr	r4, [r3, #84]
 18514 00d0 114B     		ldr	r3, .L749
 18515 00d2 9B6D     		ldr	r3, [r3, #88]
 18516 00d4 104A     		ldr	r2, .L749
 18517 00d6 D26D     		ldr	r2, [r2, #92]
 18518 00d8 07F10800 		add	r0, r7, #8
 18519 00dc 0192     		str	r2, [sp, #4]
 18520 00de 0093     		str	r3, [sp]
 18521 00e0 2346     		mov	r3, r4
 18522 00e2 0A46     		mov	r2, r1
 18523 00e4 1049     		ldr	r1, .L749+16
 18524 00e6 FFF7FEFF 		bl	sprintf
2662:..\src/command_processing.c ****     strcat(info_string, str);
 18525              		.loc 1 2662 0
 18526 00ea 07F10803 		add	r3, r7, #8
 18527 00ee 1946     		mov	r1, r3
 18528 00f0 7868     		ldr	r0, [r7, #4]
 18529 00f2 FFF7FEFF 		bl	strcat
2663:..\src/command_processing.c ****     
2664:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18530              		.loc 1 2664 0
 18531 00f6 7868     		ldr	r0, [r7, #4]
 18532 00f8 FFF7FEFF 		bl	strlen
 18533 00fc 0346     		mov	r3, r0
 18534 00fe 1A46     		mov	r2, r3
 18535 0100 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 413


 18536 0102 1344     		add	r3, r3, r2
 18537 0104 094A     		ldr	r2, .L749+20
 18538 0106 1188     		ldrh	r1, [r2]	@ unaligned
 18539 0108 9278     		ldrb	r2, [r2, #2]
 18540 010a 1980     		strh	r1, [r3]	@ unaligned
 18541 010c 9A70     		strb	r2, [r3, #2]
2665:..\src/command_processing.c **** }
 18542              		.loc 1 2665 0
 18543 010e 00BF     		nop
 18544 0110 7437     		adds	r7, r7, #116
 18545              		.cfi_def_cfa_offset 12
 18546 0112 BD46     		mov	sp, r7
 18547              		.cfi_def_cfa_register 13
 18548              		@ sp needed
 18549 0114 90BD     		pop	{r4, r7, pc}
 18550              	.L750:
 18551 0116 00BF     		.align	2
 18552              	.L749:
 18553 0118 00000000 		.word	g_mem
 18554 011c 841B0000 		.word	.LC263
 18555 0120 941B0000 		.word	.LC264
 18556 0124 9C1B0000 		.word	.LC265
 18557 0128 A81B0000 		.word	.LC266
 18558 012c 18100000 		.word	.LC143
 18559              		.cfi_endproc
 18560              	.LFE76:
 18561              		.size	prepare_SD_info, .-prepare_SD_info
 18562              		.section	.rodata
 18563              		.align	2
 18564              	.LC267:
 18565 1bb8 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 18565      4F525320 
 18565      494E464F 
 18565      0D0A00
 18566 1bc7 00       		.align	2
 18567              	.LC268:
 18568 1bc8 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 18568      3A202564 
 18568      09256409 
 18568      25640D0A 
 18568      00
 18569 1bd9 000000   		.align	2
 18570              	.LC269:
 18571 1bdc 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 18571      6F3A2025 
 18571      64092564 
 18571      0925640D 
 18571      0A00
 18572 1bee 0000     		.align	2
 18573              	.LC270:
 18574 1bf0 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 18574      3A202564 
 18574      09256409 
 18574      25640D0A 
 18574      00
 18575 1c01 000000   		.align	2
 18576              	.LC271:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 414


 18577 1c04 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 18577      743A2025 
 18577      2E336609 
 18577      252E3366 
 18577      09252E33 
 18578 1c21 000000   		.align	2
 18579              	.LC272:
 18580 1c24 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 18580      70657261 
 18580      74757265 
 18580      3A202564 
 18580      0D0A00
 18581              		.section	.text.IMU_reading_info,"ax",%progbits
 18582              		.align	2
 18583              		.global	IMU_reading_info
 18584              		.thumb
 18585              		.thumb_func
 18586              		.type	IMU_reading_info, %function
 18587              	IMU_reading_info:
 18588              	.LFB77:
2666:..\src/command_processing.c **** 
2667:..\src/command_processing.c **** //==============================================================================
2668:..\src/command_processing.c **** //                                                              IMU READING INFO
2669:..\src/command_processing.c **** //==============================================================================
2670:..\src/command_processing.c **** 
2671:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2672:..\src/command_processing.c **** {
 18589              		.loc 1 2672 0
 18590              		.cfi_startproc
 18591              		@ args = 0, pretend = 0, frame = 312
 18592              		@ frame_needed = 1, uses_anonymous_args = 0
 18593 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 18594              		.cfi_def_cfa_offset 32
 18595              		.cfi_offset 4, -32
 18596              		.cfi_offset 5, -28
 18597              		.cfi_offset 7, -24
 18598              		.cfi_offset 8, -20
 18599              		.cfi_offset 9, -16
 18600              		.cfi_offset 10, -12
 18601              		.cfi_offset 11, -8
 18602              		.cfi_offset 14, -4
 18603 0004 D4B0     		sub	sp, sp, #336
 18604              		.cfi_def_cfa_offset 368
 18605 0006 06AF     		add	r7, sp, #24
 18606              		.cfi_def_cfa 7, 344
 18607 0008 3B1D     		adds	r3, r7, #4
 18608 000a 1860     		str	r0, [r3]
2673:..\src/command_processing.c ****     char str[300];  
2674:..\src/command_processing.c ****     int i;
2675:..\src/command_processing.c ****                  
2676:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 18609              		.loc 1 2676 0
 18610 000c 3B1D     		adds	r3, r7, #4
 18611 000e 1868     		ldr	r0, [r3]
 18612 0010 FFF7FEFF 		bl	strlen
 18613 0014 0346     		mov	r3, r0
 18614 0016 1A46     		mov	r2, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 415


 18615 0018 3B1D     		adds	r3, r7, #4
 18616 001a 1B68     		ldr	r3, [r3]
 18617 001c 1344     		add	r3, r3, r2
 18618 001e C94A     		ldr	r2, .L759
 18619 0020 1C46     		mov	r4, r3
 18620 0022 1346     		mov	r3, r2
 18621 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 18622 0026 2060     		str	r0, [r4]	@ unaligned
 18623 0028 6160     		str	r1, [r4, #4]	@ unaligned
 18624 002a A260     		str	r2, [r4, #8]	@ unaligned
 18625 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 18626 002e 9B78     		ldrb	r3, [r3, #2]
 18627 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 18628 0032 A373     		strb	r3, [r4, #14]
2677:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 18629              		.loc 1 2677 0
 18630 0034 0023     		movs	r3, #0
 18631 0036 C7F83431 		str	r3, [r7, #308]
 18632 003a 66E1     		b	.L752
 18633              	.L758:
2678:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18634              		.loc 1 2678 0
 18635 003c C24A     		ldr	r2, .L759+4
 18636 003e D7F83431 		ldr	r3, [r7, #308]
 18637 0042 1344     		add	r3, r3, r2
 18638 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18639 0046 07F10800 		add	r0, r7, #8
 18640 004a D7F83421 		ldr	r2, [r7, #308]
 18641 004e BF49     		ldr	r1, .L759+8
 18642 0050 FFF7FEFF 		bl	sprintf
2679:..\src/command_processing.c ****         strcat(info_string, str);
 18643              		.loc 1 2679 0
 18644 0054 07F10802 		add	r2, r7, #8
 18645 0058 3B1D     		adds	r3, r7, #4
 18646 005a 1146     		mov	r1, r2
 18647 005c 1868     		ldr	r0, [r3]
 18648 005e FFF7FEFF 		bl	strcat
2680:..\src/command_processing.c ****         
2681:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][0])){
 18649              		.loc 1 2681 0
 18650 0062 B94A     		ldr	r2, .L759+4
 18651 0064 D7F83431 		ldr	r3, [r7, #308]
 18652 0068 1344     		add	r3, r3, r2
 18653 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18654 006c 1946     		mov	r1, r3
 18655 006e B84A     		ldr	r2, .L759+12
 18656 0070 0B46     		mov	r3, r1
 18657 0072 9B00     		lsls	r3, r3, #2
 18658 0074 0B44     		add	r3, r3, r1
 18659 0076 1344     		add	r3, r3, r2
 18660 0078 03F20223 		addw	r3, r3, #514
 18661 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18662 007e 002B     		cmp	r3, #0
 18663 0080 31D0     		beq	.L753
2682:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 18664              		.loc 1 2682 0
 18665 0082 B449     		ldr	r1, .L759+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 416


 18666 0084 D7F83421 		ldr	r2, [r7, #308]
 18667 0088 1346     		mov	r3, r2
 18668 008a 9B00     		lsls	r3, r3, #2
 18669 008c 1344     		add	r3, r3, r2
 18670 008e DB00     		lsls	r3, r3, #3
 18671 0090 0B44     		add	r3, r3, r1
 18672 0092 0233     		adds	r3, r3, #2
 18673 0094 B3F90030 		ldrsh	r3, [r3]
 18674 0098 1C46     		mov	r4, r3
 18675 009a AE49     		ldr	r1, .L759+16
 18676 009c D7F83421 		ldr	r2, [r7, #308]
 18677 00a0 1346     		mov	r3, r2
 18678 00a2 9B00     		lsls	r3, r3, #2
 18679 00a4 1344     		add	r3, r3, r2
 18680 00a6 DB00     		lsls	r3, r3, #3
 18681 00a8 0B44     		add	r3, r3, r1
 18682 00aa 0433     		adds	r3, r3, #4
 18683 00ac B3F90030 		ldrsh	r3, [r3]
 18684 00b0 1D46     		mov	r5, r3
 18685 00b2 A849     		ldr	r1, .L759+16
 18686 00b4 D7F83421 		ldr	r2, [r7, #308]
 18687 00b8 1346     		mov	r3, r2
 18688 00ba 9B00     		lsls	r3, r3, #2
 18689 00bc 1344     		add	r3, r3, r2
 18690 00be DB00     		lsls	r3, r3, #3
 18691 00c0 0B44     		add	r3, r3, r1
 18692 00c2 0633     		adds	r3, r3, #6
 18693 00c4 B3F90030 		ldrsh	r3, [r3]
 18694 00c8 07F10800 		add	r0, r7, #8
 18695 00cc 0093     		str	r3, [sp]
 18696 00ce 2B46     		mov	r3, r5
 18697 00d0 2246     		mov	r2, r4
 18698 00d2 A149     		ldr	r1, .L759+20
 18699 00d4 FFF7FEFF 		bl	sprintf
2683:..\src/command_processing.c ****             strcat(info_string, str);
 18700              		.loc 1 2683 0
 18701 00d8 07F10802 		add	r2, r7, #8
 18702 00dc 3B1D     		adds	r3, r7, #4
 18703 00de 1146     		mov	r1, r2
 18704 00e0 1868     		ldr	r0, [r3]
 18705 00e2 FFF7FEFF 		bl	strcat
 18706              	.L753:
2684:..\src/command_processing.c ****         }
2685:..\src/command_processing.c **** 
2686:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][1])){
 18707              		.loc 1 2686 0
 18708 00e6 984A     		ldr	r2, .L759+4
 18709 00e8 D7F83431 		ldr	r3, [r7, #308]
 18710 00ec 1344     		add	r3, r3, r2
 18711 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18712 00f0 1946     		mov	r1, r3
 18713 00f2 974A     		ldr	r2, .L759+12
 18714 00f4 0B46     		mov	r3, r1
 18715 00f6 9B00     		lsls	r3, r3, #2
 18716 00f8 0B44     		add	r3, r3, r1
 18717 00fa 1344     		add	r3, r3, r2
 18718 00fc 03F20323 		addw	r3, r3, #515
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 417


 18719 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18720 0102 002B     		cmp	r3, #0
 18721 0104 31D0     		beq	.L754
2687:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 18722              		.loc 1 2687 0
 18723 0106 9349     		ldr	r1, .L759+16
 18724 0108 D7F83421 		ldr	r2, [r7, #308]
 18725 010c 1346     		mov	r3, r2
 18726 010e 9B00     		lsls	r3, r3, #2
 18727 0110 1344     		add	r3, r3, r2
 18728 0112 DB00     		lsls	r3, r3, #3
 18729 0114 0B44     		add	r3, r3, r1
 18730 0116 0833     		adds	r3, r3, #8
 18731 0118 B3F90030 		ldrsh	r3, [r3]
 18732 011c 1C46     		mov	r4, r3
 18733 011e 8D49     		ldr	r1, .L759+16
 18734 0120 D7F83421 		ldr	r2, [r7, #308]
 18735 0124 1346     		mov	r3, r2
 18736 0126 9B00     		lsls	r3, r3, #2
 18737 0128 1344     		add	r3, r3, r2
 18738 012a DB00     		lsls	r3, r3, #3
 18739 012c 0B44     		add	r3, r3, r1
 18740 012e 0A33     		adds	r3, r3, #10
 18741 0130 B3F90030 		ldrsh	r3, [r3]
 18742 0134 1D46     		mov	r5, r3
 18743 0136 8749     		ldr	r1, .L759+16
 18744 0138 D7F83421 		ldr	r2, [r7, #308]
 18745 013c 1346     		mov	r3, r2
 18746 013e 9B00     		lsls	r3, r3, #2
 18747 0140 1344     		add	r3, r3, r2
 18748 0142 DB00     		lsls	r3, r3, #3
 18749 0144 0B44     		add	r3, r3, r1
 18750 0146 0C33     		adds	r3, r3, #12
 18751 0148 B3F90030 		ldrsh	r3, [r3]
 18752 014c 07F10800 		add	r0, r7, #8
 18753 0150 0093     		str	r3, [sp]
 18754 0152 2B46     		mov	r3, r5
 18755 0154 2246     		mov	r2, r4
 18756 0156 8149     		ldr	r1, .L759+24
 18757 0158 FFF7FEFF 		bl	sprintf
2688:..\src/command_processing.c ****             strcat(info_string, str);
 18758              		.loc 1 2688 0
 18759 015c 07F10802 		add	r2, r7, #8
 18760 0160 3B1D     		adds	r3, r7, #4
 18761 0162 1146     		mov	r1, r2
 18762 0164 1868     		ldr	r0, [r3]
 18763 0166 FFF7FEFF 		bl	strcat
 18764              	.L754:
2689:..\src/command_processing.c ****         }
2690:..\src/command_processing.c **** 
2691:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][2])){
 18765              		.loc 1 2691 0
 18766 016a 774A     		ldr	r2, .L759+4
 18767 016c D7F83431 		ldr	r3, [r7, #308]
 18768 0170 1344     		add	r3, r3, r2
 18769 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18770 0174 1946     		mov	r1, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 418


 18771 0176 764A     		ldr	r2, .L759+12
 18772 0178 0B46     		mov	r3, r1
 18773 017a 9B00     		lsls	r3, r3, #2
 18774 017c 0B44     		add	r3, r3, r1
 18775 017e 1344     		add	r3, r3, r2
 18776 0180 03F50173 		add	r3, r3, #516
 18777 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18778 0186 002B     		cmp	r3, #0
 18779 0188 31D0     		beq	.L755
2692:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 18780              		.loc 1 2692 0
 18781 018a 7249     		ldr	r1, .L759+16
 18782 018c D7F83421 		ldr	r2, [r7, #308]
 18783 0190 1346     		mov	r3, r2
 18784 0192 9B00     		lsls	r3, r3, #2
 18785 0194 1344     		add	r3, r3, r2
 18786 0196 DB00     		lsls	r3, r3, #3
 18787 0198 0B44     		add	r3, r3, r1
 18788 019a 0E33     		adds	r3, r3, #14
 18789 019c B3F90030 		ldrsh	r3, [r3]
 18790 01a0 1C46     		mov	r4, r3
 18791 01a2 6C49     		ldr	r1, .L759+16
 18792 01a4 D7F83421 		ldr	r2, [r7, #308]
 18793 01a8 1346     		mov	r3, r2
 18794 01aa 9B00     		lsls	r3, r3, #2
 18795 01ac 1344     		add	r3, r3, r2
 18796 01ae DB00     		lsls	r3, r3, #3
 18797 01b0 0B44     		add	r3, r3, r1
 18798 01b2 1033     		adds	r3, r3, #16
 18799 01b4 B3F90030 		ldrsh	r3, [r3]
 18800 01b8 1D46     		mov	r5, r3
 18801 01ba 6649     		ldr	r1, .L759+16
 18802 01bc D7F83421 		ldr	r2, [r7, #308]
 18803 01c0 1346     		mov	r3, r2
 18804 01c2 9B00     		lsls	r3, r3, #2
 18805 01c4 1344     		add	r3, r3, r2
 18806 01c6 DB00     		lsls	r3, r3, #3
 18807 01c8 0B44     		add	r3, r3, r1
 18808 01ca 1233     		adds	r3, r3, #18
 18809 01cc B3F90030 		ldrsh	r3, [r3]
 18810 01d0 07F10800 		add	r0, r7, #8
 18811 01d4 0093     		str	r3, [sp]
 18812 01d6 2B46     		mov	r3, r5
 18813 01d8 2246     		mov	r2, r4
 18814 01da 6149     		ldr	r1, .L759+28
 18815 01dc FFF7FEFF 		bl	sprintf
2693:..\src/command_processing.c ****             strcat(info_string, str);
 18816              		.loc 1 2693 0
 18817 01e0 07F10802 		add	r2, r7, #8
 18818 01e4 3B1D     		adds	r3, r7, #4
 18819 01e6 1146     		mov	r1, r2
 18820 01e8 1868     		ldr	r0, [r3]
 18821 01ea FFF7FEFF 		bl	strcat
 18822              	.L755:
2694:..\src/command_processing.c ****         }
2695:..\src/command_processing.c ****         
2696:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][3])){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 419


 18823              		.loc 1 2696 0
 18824 01ee 564A     		ldr	r2, .L759+4
 18825 01f0 D7F83431 		ldr	r3, [r7, #308]
 18826 01f4 1344     		add	r3, r3, r2
 18827 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18828 01f8 1946     		mov	r1, r3
 18829 01fa 554A     		ldr	r2, .L759+12
 18830 01fc 0B46     		mov	r3, r1
 18831 01fe 9B00     		lsls	r3, r3, #2
 18832 0200 0B44     		add	r3, r3, r1
 18833 0202 1344     		add	r3, r3, r2
 18834 0204 03F20523 		addw	r3, r3, #517
 18835 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18836 020a 002B     		cmp	r3, #0
 18837 020c 4FD0     		beq	.L756
2697:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 18838              		.loc 1 2697 0
 18839 020e 5149     		ldr	r1, .L759+16
 18840 0210 D7F83421 		ldr	r2, [r7, #308]
 18841 0214 1346     		mov	r3, r2
 18842 0216 9B00     		lsls	r3, r3, #2
 18843 0218 1344     		add	r3, r3, r2
 18844 021a DB00     		lsls	r3, r3, #3
 18845 021c 0B44     		add	r3, r3, r1
 18846 021e 1433     		adds	r3, r3, #20
 18847 0220 1B68     		ldr	r3, [r3]	@ float
 18848 0222 1846     		mov	r0, r3
 18849 0224 FFF7FEFF 		bl	__aeabi_f2d
 18850 0228 8246     		mov	r10, r0
 18851 022a 8B46     		mov	fp, r1
 18852 022c 4949     		ldr	r1, .L759+16
 18853 022e D7F83421 		ldr	r2, [r7, #308]
 18854 0232 1346     		mov	r3, r2
 18855 0234 9B00     		lsls	r3, r3, #2
 18856 0236 1344     		add	r3, r3, r2
 18857 0238 DB00     		lsls	r3, r3, #3
 18858 023a 0B44     		add	r3, r3, r1
 18859 023c 1833     		adds	r3, r3, #24
 18860 023e 1B68     		ldr	r3, [r3]	@ float
 18861 0240 1846     		mov	r0, r3
 18862 0242 FFF7FEFF 		bl	__aeabi_f2d
 18863 0246 0446     		mov	r4, r0
 18864 0248 0D46     		mov	r5, r1
 18865 024a 4249     		ldr	r1, .L759+16
 18866 024c D7F83421 		ldr	r2, [r7, #308]
 18867 0250 1346     		mov	r3, r2
 18868 0252 9B00     		lsls	r3, r3, #2
 18869 0254 1344     		add	r3, r3, r2
 18870 0256 DB00     		lsls	r3, r3, #3
 18871 0258 0B44     		add	r3, r3, r1
 18872 025a 1C33     		adds	r3, r3, #28
 18873 025c 1B68     		ldr	r3, [r3]	@ float
 18874 025e 1846     		mov	r0, r3
 18875 0260 FFF7FEFF 		bl	__aeabi_f2d
 18876 0264 8046     		mov	r8, r0
 18877 0266 8946     		mov	r9, r1
 18878 0268 3A49     		ldr	r1, .L759+16
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 420


 18879 026a D7F83421 		ldr	r2, [r7, #308]
 18880 026e 1346     		mov	r3, r2
 18881 0270 9B00     		lsls	r3, r3, #2
 18882 0272 1344     		add	r3, r3, r2
 18883 0274 DB00     		lsls	r3, r3, #3
 18884 0276 0B44     		add	r3, r3, r1
 18885 0278 2033     		adds	r3, r3, #32
 18886 027a 1B68     		ldr	r3, [r3]	@ float
 18887 027c 1846     		mov	r0, r3
 18888 027e FFF7FEFF 		bl	__aeabi_f2d
 18889 0282 0246     		mov	r2, r0
 18890 0284 0B46     		mov	r3, r1
 18891 0286 07F10800 		add	r0, r7, #8
 18892 028a CDE90423 		strd	r2, [sp, #16]
 18893 028e CDE90289 		strd	r8, [sp, #8]
 18894 0292 CDE90045 		strd	r4, [sp]
 18895 0296 5246     		mov	r2, r10
 18896 0298 5B46     		mov	r3, fp
 18897 029a 3249     		ldr	r1, .L759+32
 18898 029c FFF7FEFF 		bl	sprintf
2698:..\src/command_processing.c ****             strcat(info_string, str);
 18899              		.loc 1 2698 0
 18900 02a0 07F10802 		add	r2, r7, #8
 18901 02a4 3B1D     		adds	r3, r7, #4
 18902 02a6 1146     		mov	r1, r2
 18903 02a8 1868     		ldr	r0, [r3]
 18904 02aa FFF7FEFF 		bl	strcat
 18905              	.L756:
2699:..\src/command_processing.c ****         }
2700:..\src/command_processing.c ****         
2701:..\src/command_processing.c ****         if ((c_mem.imu.IMU_conf[IMU_connected[i]][4])){
 18906              		.loc 1 2701 0
 18907 02ae 264A     		ldr	r2, .L759+4
 18908 02b0 D7F83431 		ldr	r3, [r7, #308]
 18909 02b4 1344     		add	r3, r3, r2
 18910 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18911 02b8 1946     		mov	r1, r3
 18912 02ba 254A     		ldr	r2, .L759+12
 18913 02bc 0B46     		mov	r3, r1
 18914 02be 9B00     		lsls	r3, r3, #2
 18915 02c0 0B44     		add	r3, r3, r1
 18916 02c2 1344     		add	r3, r3, r2
 18917 02c4 03F20623 		addw	r3, r3, #518
 18918 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18919 02ca 002B     		cmp	r3, #0
 18920 02cc 18D0     		beq	.L757
2702:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 18921              		.loc 1 2702 0
 18922 02ce 2149     		ldr	r1, .L759+16
 18923 02d0 D7F83421 		ldr	r2, [r7, #308]
 18924 02d4 1346     		mov	r3, r2
 18925 02d6 9B00     		lsls	r3, r3, #2
 18926 02d8 1344     		add	r3, r3, r2
 18927 02da DB00     		lsls	r3, r3, #3
 18928 02dc 0B44     		add	r3, r3, r1
 18929 02de 2433     		adds	r3, r3, #36
 18930 02e0 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 421


 18931 02e4 1A46     		mov	r2, r3
 18932 02e6 07F10803 		add	r3, r7, #8
 18933 02ea 1F49     		ldr	r1, .L759+36
 18934 02ec 1846     		mov	r0, r3
 18935 02ee FFF7FEFF 		bl	sprintf
2703:..\src/command_processing.c ****             strcat(info_string, str);
 18936              		.loc 1 2703 0
 18937 02f2 07F10802 		add	r2, r7, #8
 18938 02f6 3B1D     		adds	r3, r7, #4
 18939 02f8 1146     		mov	r1, r2
 18940 02fa 1868     		ldr	r0, [r3]
 18941 02fc FFF7FEFF 		bl	strcat
 18942              	.L757:
2677:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18943              		.loc 1 2677 0 discriminator 2
 18944 0300 D7F83431 		ldr	r3, [r7, #308]
 18945 0304 0133     		adds	r3, r3, #1
 18946 0306 C7F83431 		str	r3, [r7, #308]
 18947              	.L752:
2677:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 18948              		.loc 1 2677 0 is_stmt 0 discriminator 1
 18949 030a 184B     		ldr	r3, .L759+40
 18950 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 18951 030e 1A46     		mov	r2, r3
 18952 0310 D7F83431 		ldr	r3, [r7, #308]
 18953 0314 9A42     		cmp	r2, r3
 18954 0316 3FF791AE 		bgt	.L758
2704:..\src/command_processing.c ****         }
2705:..\src/command_processing.c ****         
2706:..\src/command_processing.c ****     }
2707:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 18955              		.loc 1 2707 0 is_stmt 1
 18956 031a 3B1D     		adds	r3, r7, #4
 18957 031c 1868     		ldr	r0, [r3]
 18958 031e FFF7FEFF 		bl	strlen
 18959 0322 0346     		mov	r3, r0
 18960 0324 1A46     		mov	r2, r3
 18961 0326 3B1D     		adds	r3, r7, #4
 18962 0328 1B68     		ldr	r3, [r3]
 18963 032a 1344     		add	r3, r3, r2
 18964 032c 104A     		ldr	r2, .L759+44
 18965 032e 1188     		ldrh	r1, [r2]	@ unaligned
 18966 0330 9278     		ldrb	r2, [r2, #2]
 18967 0332 1980     		strh	r1, [r3]	@ unaligned
 18968 0334 9A70     		strb	r2, [r3, #2]
2708:..\src/command_processing.c **** }
 18969              		.loc 1 2708 0
 18970 0336 00BF     		nop
 18971 0338 07F59C77 		add	r7, r7, #312
 18972              		.cfi_def_cfa_offset 32
 18973 033c BD46     		mov	sp, r7
 18974              		.cfi_def_cfa_register 13
 18975              		@ sp needed
 18976 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 18977              	.L760:
 18978 0342 00BF     		.align	2
 18979              	.L759:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 422


 18980 0344 B81B0000 		.word	.LC267
 18981 0348 00000000 		.word	IMU_connected
 18982 034c C0170000 		.word	.LC229
 18983 0350 00000000 		.word	c_mem
 18984 0354 00000000 		.word	g_imu
 18985 0358 C81B0000 		.word	.LC268
 18986 035c DC1B0000 		.word	.LC269
 18987 0360 F01B0000 		.word	.LC270
 18988 0364 041C0000 		.word	.LC271
 18989 0368 241C0000 		.word	.LC272
 18990 036c 00000000 		.word	N_IMU_Connected
 18991 0370 18100000 		.word	.LC143
 18992              		.cfi_endproc
 18993              	.LFE77:
 18994              		.size	IMU_reading_info, .-IMU_reading_info
 18995              		.section	.text.commWrite_old_id,"ax",%progbits
 18996              		.align	2
 18997              		.global	commWrite_old_id
 18998              		.thumb
 18999              		.thumb_func
 19000              		.type	commWrite_old_id, %function
 19001              	commWrite_old_id:
 19002              	.LFB78:
2709:..\src/command_processing.c **** 
2710:..\src/command_processing.c **** //==============================================================================
2711:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2712:..\src/command_processing.c **** //==============================================================================
2713:..\src/command_processing.c **** 
2714:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2715:..\src/command_processing.c **** {
 19003              		.loc 1 2715 0
 19004              		.cfi_startproc
 19005              		@ args = 0, pretend = 0, frame = 16
 19006              		@ frame_needed = 1, uses_anonymous_args = 0
 19007 0000 80B5     		push	{r7, lr}
 19008              		.cfi_def_cfa_offset 8
 19009              		.cfi_offset 7, -8
 19010              		.cfi_offset 14, -4
 19011 0002 84B0     		sub	sp, sp, #16
 19012              		.cfi_def_cfa_offset 24
 19013 0004 00AF     		add	r7, sp, #0
 19014              		.cfi_def_cfa_register 7
 19015 0006 7860     		str	r0, [r7, #4]
 19016 0008 0B46     		mov	r3, r1
 19017 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 19018 000c 1346     		mov	r3, r2
 19019 000e 7B70     		strb	r3, [r7, #1]
2716:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2717:..\src/command_processing.c **** 
2718:..\src/command_processing.c ****     // frame - start
2719:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19020              		.loc 1 2719 0
 19021 0010 3A20     		movs	r0, #58
 19022 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2720:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19023              		.loc 1 2720 0
 19024 0016 3A20     		movs	r0, #58
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 423


 19025 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2721:..\src/command_processing.c ****     // frame - ID
2722:..\src/command_processing.c ****     //if(old_id)
2723:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 19026              		.loc 1 2723 0
 19027 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 19028 001e 1846     		mov	r0, r3
 19029 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2724:..\src/command_processing.c ****     //else
2725:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2726:..\src/command_processing.c ****         
2727:..\src/command_processing.c ****     // frame - length
2728:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 19030              		.loc 1 2728 0
 19031 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 19032 0026 DBB2     		uxtb	r3, r3
 19033 0028 1846     		mov	r0, r3
 19034 002a FFF7FEFF 		bl	UART_RS485_PutChar
2729:..\src/command_processing.c ****     // frame - packet data
2730:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 19035              		.loc 1 2730 0
 19036 002e 0023     		movs	r3, #0
 19037 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 19038 0032 09E0     		b	.L762
 19039              	.L763:
2731:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19040              		.loc 1 2731 0 discriminator 3
 19041 0034 FB89     		ldrh	r3, [r7, #14]
 19042 0036 7A68     		ldr	r2, [r7, #4]
 19043 0038 1344     		add	r3, r3, r2
 19044 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19045 003c 1846     		mov	r0, r3
 19046 003e FFF7FEFF 		bl	UART_RS485_PutChar
2730:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19047              		.loc 1 2730 0 discriminator 3
 19048 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 19049 0044 0133     		adds	r3, r3, #1
 19050 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 19051              	.L762:
2730:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19052              		.loc 1 2730 0 is_stmt 0 discriminator 1
 19053 0048 FA89     		ldrh	r2, [r7, #14]
 19054 004a 7B88     		ldrh	r3, [r7, #2]
 19055 004c 9A42     		cmp	r2, r3
 19056 004e F1D3     		bcc	.L763
2732:..\src/command_processing.c ****     }
2733:..\src/command_processing.c **** 
2734:..\src/command_processing.c ****     index = 0;
 19057              		.loc 1 2734 0 is_stmt 1
 19058 0050 0023     		movs	r3, #0
 19059 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2735:..\src/command_processing.c **** 
2736:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 19060              		.loc 1 2736 0
 19061 0054 00BF     		nop
 19062              	.L765:
 19063              		.loc 1 2736 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 424


 19064 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 19065 005a 0346     		mov	r3, r0
 19066 005c 03F00103 		and	r3, r3, #1
 19067 0060 002B     		cmp	r3, #0
 19068 0062 05D1     		bne	.L764
 19069              		.loc 1 2736 0 discriminator 1
 19070 0064 FB89     		ldrh	r3, [r7, #14]
 19071 0066 5A1C     		adds	r2, r3, #1
 19072 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 19073 006a B3F57A7F 		cmp	r3, #1000
 19074 006e F2D9     		bls	.L765
 19075              	.L764:
2737:..\src/command_processing.c **** 
2738:..\src/command_processing.c ****     RS485_CTS_Write(1);
 19076              		.loc 1 2738 0 is_stmt 1
 19077 0070 0120     		movs	r0, #1
 19078 0072 FFF7FEFF 		bl	RS485_CTS_Write
2739:..\src/command_processing.c ****     RS485_CTS_Write(0);
 19079              		.loc 1 2739 0
 19080 0076 0020     		movs	r0, #0
 19081 0078 FFF7FEFF 		bl	RS485_CTS_Write
2740:..\src/command_processing.c **** }
 19082              		.loc 1 2740 0
 19083 007c 00BF     		nop
 19084 007e 1037     		adds	r7, r7, #16
 19085              		.cfi_def_cfa_offset 8
 19086 0080 BD46     		mov	sp, r7
 19087              		.cfi_def_cfa_register 13
 19088              		@ sp needed
 19089 0082 80BD     		pop	{r7, pc}
 19090              		.cfi_endproc
 19091              	.LFE78:
 19092              		.size	commWrite_old_id, .-commWrite_old_id
 19093              		.section	.text.commWrite,"ax",%progbits
 19094              		.align	2
 19095              		.global	commWrite
 19096              		.thumb
 19097              		.thumb_func
 19098              		.type	commWrite, %function
 19099              	commWrite:
 19100              	.LFB79:
2741:..\src/command_processing.c **** 
2742:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2743:..\src/command_processing.c **** {
 19101              		.loc 1 2743 0
 19102              		.cfi_startproc
 19103              		@ args = 0, pretend = 0, frame = 16
 19104              		@ frame_needed = 1, uses_anonymous_args = 0
 19105 0000 80B5     		push	{r7, lr}
 19106              		.cfi_def_cfa_offset 8
 19107              		.cfi_offset 7, -8
 19108              		.cfi_offset 14, -4
 19109 0002 84B0     		sub	sp, sp, #16
 19110              		.cfi_def_cfa_offset 24
 19111 0004 00AF     		add	r7, sp, #0
 19112              		.cfi_def_cfa_register 7
 19113 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 425


 19114 0008 0B46     		mov	r3, r1
 19115 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2744:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2745:..\src/command_processing.c **** 
2746:..\src/command_processing.c ****     // frame - start
2747:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19116              		.loc 1 2747 0
 19117 000c 3A20     		movs	r0, #58
 19118 000e FFF7FEFF 		bl	UART_RS485_PutChar
2748:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19119              		.loc 1 2748 0
 19120 0012 3A20     		movs	r0, #58
 19121 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2749:..\src/command_processing.c ****     // frame - ID
2750:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.dev.id);
 19122              		.loc 1 2750 0
 19123 0018 1A4B     		ldr	r3, .L771
 19124 001a 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 19125 001e 1846     		mov	r0, r3
 19126 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2751:..\src/command_processing.c ****     // frame - length
2752:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 19127              		.loc 1 2752 0
 19128 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 19129 0026 DBB2     		uxtb	r3, r3
 19130 0028 1846     		mov	r0, r3
 19131 002a FFF7FEFF 		bl	UART_RS485_PutChar
2753:..\src/command_processing.c ****     // frame - packet data
2754:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 19132              		.loc 1 2754 0
 19133 002e 0023     		movs	r3, #0
 19134 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 19135 0032 09E0     		b	.L767
 19136              	.L768:
2755:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19137              		.loc 1 2755 0 discriminator 3
 19138 0034 FB89     		ldrh	r3, [r7, #14]
 19139 0036 7A68     		ldr	r2, [r7, #4]
 19140 0038 1344     		add	r3, r3, r2
 19141 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19142 003c 1846     		mov	r0, r3
 19143 003e FFF7FEFF 		bl	UART_RS485_PutChar
2754:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19144              		.loc 1 2754 0 discriminator 3
 19145 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 19146 0044 0133     		adds	r3, r3, #1
 19147 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 19148              	.L767:
2754:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 19149              		.loc 1 2754 0 is_stmt 0 discriminator 1
 19150 0048 FA89     		ldrh	r2, [r7, #14]
 19151 004a 7B88     		ldrh	r3, [r7, #2]
 19152 004c 9A42     		cmp	r2, r3
 19153 004e F1D3     		bcc	.L768
2756:..\src/command_processing.c ****     }
2757:..\src/command_processing.c **** 
2758:..\src/command_processing.c ****     index = 0;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 426


 19154              		.loc 1 2758 0 is_stmt 1
 19155 0050 0023     		movs	r3, #0
 19156 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2759:..\src/command_processing.c **** 
2760:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 19157              		.loc 1 2760 0
 19158 0054 00BF     		nop
 19159              	.L770:
 19160              		.loc 1 2760 0 is_stmt 0 discriminator 2
 19161 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 19162 005a 0346     		mov	r3, r0
 19163 005c 03F00103 		and	r3, r3, #1
 19164 0060 002B     		cmp	r3, #0
 19165 0062 05D1     		bne	.L769
 19166              		.loc 1 2760 0 discriminator 1
 19167 0064 FB89     		ldrh	r3, [r7, #14]
 19168 0066 5A1C     		adds	r2, r3, #1
 19169 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 19170 006a B3F57A7F 		cmp	r3, #1000
 19171 006e F2D9     		bls	.L770
 19172              	.L769:
2761:..\src/command_processing.c **** 
2762:..\src/command_processing.c ****     RS485_CTS_Write(1);
 19173              		.loc 1 2762 0 is_stmt 1
 19174 0070 0120     		movs	r0, #1
 19175 0072 FFF7FEFF 		bl	RS485_CTS_Write
2763:..\src/command_processing.c ****     RS485_CTS_Write(0);
 19176              		.loc 1 2763 0
 19177 0076 0020     		movs	r0, #0
 19178 0078 FFF7FEFF 		bl	RS485_CTS_Write
2764:..\src/command_processing.c **** }
 19179              		.loc 1 2764 0
 19180 007c 00BF     		nop
 19181 007e 1037     		adds	r7, r7, #16
 19182              		.cfi_def_cfa_offset 8
 19183 0080 BD46     		mov	sp, r7
 19184              		.cfi_def_cfa_register 13
 19185              		@ sp needed
 19186 0082 80BD     		pop	{r7, pc}
 19187              	.L772:
 19188              		.align	2
 19189              	.L771:
 19190 0084 00000000 		.word	g_mem
 19191              		.cfi_endproc
 19192              	.LFE79:
 19193              		.size	commWrite, .-commWrite
 19194              		.section	.text.commWriteID,"ax",%progbits
 19195              		.align	2
 19196              		.global	commWriteID
 19197              		.thumb
 19198              		.thumb_func
 19199              		.type	commWriteID, %function
 19200              	commWriteID:
 19201              	.LFB80:
2765:..\src/command_processing.c **** 
2766:..\src/command_processing.c **** //==============================================================================
2767:..\src/command_processing.c **** //                                             WRITE FUNCTION FOR ANOTHER DEVICE
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 427


2768:..\src/command_processing.c **** //==============================================================================
2769:..\src/command_processing.c **** 
2770:..\src/command_processing.c **** void commWriteID(uint8 *packet_data, uint16 packet_lenght, uint8 id)
2771:..\src/command_processing.c **** {
 19202              		.loc 1 2771 0
 19203              		.cfi_startproc
 19204              		@ args = 0, pretend = 0, frame = 8
 19205              		@ frame_needed = 1, uses_anonymous_args = 0
 19206 0000 80B5     		push	{r7, lr}
 19207              		.cfi_def_cfa_offset 8
 19208              		.cfi_offset 7, -8
 19209              		.cfi_offset 14, -4
 19210 0002 82B0     		sub	sp, sp, #8
 19211              		.cfi_def_cfa_offset 16
 19212 0004 00AF     		add	r7, sp, #0
 19213              		.cfi_def_cfa_register 7
 19214 0006 7860     		str	r0, [r7, #4]
 19215 0008 0B46     		mov	r3, r1
 19216 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 19217 000c 1346     		mov	r3, r2
 19218 000e 7B70     		strb	r3, [r7, #1]
2772:..\src/command_processing.c ****     static uint16 CYDATA i;    // iterator
2773:..\src/command_processing.c **** 
2774:..\src/command_processing.c ****     // frame - start
2775:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19219              		.loc 1 2775 0
 19220 0010 3A20     		movs	r0, #58
 19221 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2776:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 19222              		.loc 1 2776 0
 19223 0016 3A20     		movs	r0, #58
 19224 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2777:..\src/command_processing.c ****     // frame - ID
2778:..\src/command_processing.c ****     UART_RS485_PutChar(id);
 19225              		.loc 1 2778 0
 19226 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 19227 001e 1846     		mov	r0, r3
 19228 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2779:..\src/command_processing.c ****     // frame - length
2780:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 19229              		.loc 1 2780 0
 19230 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 19231 0026 DBB2     		uxtb	r3, r3
 19232 0028 1846     		mov	r0, r3
 19233 002a FFF7FEFF 		bl	UART_RS485_PutChar
2781:..\src/command_processing.c ****     // frame - packet data
2782:..\src/command_processing.c ****     for(i = 0; i < packet_lenght; ++i) {
 19234              		.loc 1 2782 0
 19235 002e 1B4B     		ldr	r3, .L778
 19236 0030 0022     		movs	r2, #0
 19237 0032 1A80     		strh	r2, [r3]	@ movhi
 19238 0034 0EE0     		b	.L774
 19239              	.L775:
2783:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 19240              		.loc 1 2783 0 discriminator 3
 19241 0036 194B     		ldr	r3, .L778
 19242 0038 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 428


 19243 003a 1A46     		mov	r2, r3
 19244 003c 7B68     		ldr	r3, [r7, #4]
 19245 003e 1344     		add	r3, r3, r2
 19246 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19247 0042 1846     		mov	r0, r3
 19248 0044 FFF7FEFF 		bl	UART_RS485_PutChar
2782:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 19249              		.loc 1 2782 0 discriminator 3
 19250 0048 144B     		ldr	r3, .L778
 19251 004a 1B88     		ldrh	r3, [r3]
 19252 004c 0133     		adds	r3, r3, #1
 19253 004e 9AB2     		uxth	r2, r3
 19254 0050 124B     		ldr	r3, .L778
 19255 0052 1A80     		strh	r2, [r3]	@ movhi
 19256              	.L774:
2782:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[i]);
 19257              		.loc 1 2782 0 is_stmt 0 discriminator 1
 19258 0054 114B     		ldr	r3, .L778
 19259 0056 1B88     		ldrh	r3, [r3]
 19260 0058 7A88     		ldrh	r2, [r7, #2]
 19261 005a 9A42     		cmp	r2, r3
 19262 005c EBD8     		bhi	.L775
2784:..\src/command_processing.c ****     }
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c ****     i = 0;
 19263              		.loc 1 2786 0 is_stmt 1
 19264 005e 0F4B     		ldr	r3, .L778
 19265 0060 0022     		movs	r2, #0
 19266 0062 1A80     		strh	r2, [r3]	@ movhi
2787:..\src/command_processing.c **** 
2788:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && i++ <= 1000){}
 19267              		.loc 1 2788 0
 19268 0064 00BF     		nop
 19269              	.L777:
 19270              		.loc 1 2788 0 is_stmt 0 discriminator 2
 19271 0066 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 19272 006a 0346     		mov	r3, r0
 19273 006c 03F00103 		and	r3, r3, #1
 19274 0070 002B     		cmp	r3, #0
 19275 0072 08D1     		bne	.L776
 19276              		.loc 1 2788 0 discriminator 1
 19277 0074 094B     		ldr	r3, .L778
 19278 0076 1B88     		ldrh	r3, [r3]
 19279 0078 5A1C     		adds	r2, r3, #1
 19280 007a 91B2     		uxth	r1, r2
 19281 007c 074A     		ldr	r2, .L778
 19282 007e 1180     		strh	r1, [r2]	@ movhi
 19283 0080 B3F57A7F 		cmp	r3, #1000
 19284 0084 EFD9     		bls	.L777
 19285              	.L776:
2789:..\src/command_processing.c ****     
2790:..\src/command_processing.c ****     RS485_CTS_Write(1);
 19286              		.loc 1 2790 0 is_stmt 1
 19287 0086 0120     		movs	r0, #1
 19288 0088 FFF7FEFF 		bl	RS485_CTS_Write
2791:..\src/command_processing.c ****     RS485_CTS_Write(0);
 19289              		.loc 1 2791 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 429


 19290 008c 0020     		movs	r0, #0
 19291 008e FFF7FEFF 		bl	RS485_CTS_Write
2792:..\src/command_processing.c **** }
 19292              		.loc 1 2792 0
 19293 0092 00BF     		nop
 19294 0094 0837     		adds	r7, r7, #8
 19295              		.cfi_def_cfa_offset 8
 19296 0096 BD46     		mov	sp, r7
 19297              		.cfi_def_cfa_register 13
 19298              		@ sp needed
 19299 0098 80BD     		pop	{r7, pc}
 19300              	.L779:
 19301 009a 00BF     		.align	2
 19302              	.L778:
 19303 009c 00000000 		.word	i.11185
 19304              		.cfi_endproc
 19305              	.LFE80:
 19306              		.size	commWriteID, .-commWriteID
 19307              		.section	.text.LCRChecksum,"ax",%progbits
 19308              		.align	2
 19309              		.global	LCRChecksum
 19310              		.thumb
 19311              		.thumb_func
 19312              		.type	LCRChecksum, %function
 19313              	LCRChecksum:
 19314              	.LFB81:
2793:..\src/command_processing.c **** 
2794:..\src/command_processing.c **** //==============================================================================
2795:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2796:..\src/command_processing.c **** //==============================================================================
2797:..\src/command_processing.c **** 
2798:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2799:..\src/command_processing.c **** 
2800:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 19315              		.loc 1 2800 0
 19316              		.cfi_startproc
 19317              		@ args = 0, pretend = 0, frame = 16
 19318              		@ frame_needed = 1, uses_anonymous_args = 0
 19319              		@ link register save eliminated.
 19320 0000 80B4     		push	{r7}
 19321              		.cfi_def_cfa_offset 4
 19322              		.cfi_offset 7, -4
 19323 0002 85B0     		sub	sp, sp, #20
 19324              		.cfi_def_cfa_offset 24
 19325 0004 00AF     		add	r7, sp, #0
 19326              		.cfi_def_cfa_register 7
 19327 0006 7860     		str	r0, [r7, #4]
 19328 0008 0B46     		mov	r3, r1
 19329 000a FB70     		strb	r3, [r7, #3]
2801:..\src/command_processing.c ****     
2802:..\src/command_processing.c ****     uint8 CYDATA i;
2803:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 19330              		.loc 1 2803 0
 19331 000c 0023     		movs	r3, #0
 19332 000e BB73     		strb	r3, [r7, #14]
2804:..\src/command_processing.c ****     
2805:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 430


 19333              		.loc 1 2805 0
 19334 0010 0023     		movs	r3, #0
 19335 0012 FB73     		strb	r3, [r7, #15]
 19336 0014 09E0     		b	.L781
 19337              	.L782:
2806:..\src/command_processing.c ****        checksum ^= data_array[i];
 19338              		.loc 1 2806 0 discriminator 3
 19339 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 19340 0018 7A68     		ldr	r2, [r7, #4]
 19341 001a 1344     		add	r3, r3, r2
 19342 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 19343 001e BB7B     		ldrb	r3, [r7, #14]
 19344 0020 5340     		eors	r3, r3, r2
 19345 0022 BB73     		strb	r3, [r7, #14]
2805:..\src/command_processing.c ****        checksum ^= data_array[i];
 19346              		.loc 1 2805 0 discriminator 3
 19347 0024 FB7B     		ldrb	r3, [r7, #15]
 19348 0026 0133     		adds	r3, r3, #1
 19349 0028 FB73     		strb	r3, [r7, #15]
 19350              	.L781:
2805:..\src/command_processing.c ****        checksum ^= data_array[i];
 19351              		.loc 1 2805 0 is_stmt 0 discriminator 1
 19352 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 19353 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 19354 002e 9A42     		cmp	r2, r3
 19355 0030 F1D3     		bcc	.L782
2807:..\src/command_processing.c ****   
2808:..\src/command_processing.c ****     return checksum;
 19356              		.loc 1 2808 0 is_stmt 1
 19357 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2809:..\src/command_processing.c **** }
 19358              		.loc 1 2809 0
 19359 0034 1846     		mov	r0, r3
 19360 0036 1437     		adds	r7, r7, #20
 19361              		.cfi_def_cfa_offset 4
 19362 0038 BD46     		mov	sp, r7
 19363              		.cfi_def_cfa_register 13
 19364              		@ sp needed
 19365 003a 80BC     		pop	{r7}
 19366              		.cfi_restore 7
 19367              		.cfi_def_cfa_offset 0
 19368 003c 7047     		bx	lr
 19369              		.cfi_endproc
 19370              	.LFE81:
 19371              		.size	LCRChecksum, .-LCRChecksum
 19372 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 19373              		.align	2
 19374              		.global	sendAcknowledgment
 19375              		.thumb
 19376              		.thumb_func
 19377              		.type	sendAcknowledgment, %function
 19378              	sendAcknowledgment:
 19379              	.LFB82:
2810:..\src/command_processing.c **** 
2811:..\src/command_processing.c **** 
2812:..\src/command_processing.c **** //==============================================================================
2813:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 431


2814:..\src/command_processing.c **** //==============================================================================
2815:..\src/command_processing.c **** 
2816:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 19380              		.loc 1 2816 0
 19381              		.cfi_startproc
 19382              		@ args = 0, pretend = 0, frame = 16
 19383              		@ frame_needed = 1, uses_anonymous_args = 0
 19384 0000 80B5     		push	{r7, lr}
 19385              		.cfi_def_cfa_offset 8
 19386              		.cfi_offset 7, -8
 19387              		.cfi_offset 14, -4
 19388 0002 84B0     		sub	sp, sp, #16
 19389              		.cfi_def_cfa_offset 24
 19390 0004 00AF     		add	r7, sp, #0
 19391              		.cfi_def_cfa_register 7
 19392 0006 0346     		mov	r3, r0
 19393 0008 FB71     		strb	r3, [r7, #7]
2817:..\src/command_processing.c ****     int packet_lenght = 2;
 19394              		.loc 1 2817 0
 19395 000a 0223     		movs	r3, #2
 19396 000c FB60     		str	r3, [r7, #12]
2818:..\src/command_processing.c ****     uint8 packet_data[2];
2819:..\src/command_processing.c **** 
2820:..\src/command_processing.c ****     packet_data[0] = value;
 19397              		.loc 1 2820 0
 19398 000e FB79     		ldrb	r3, [r7, #7]
 19399 0010 3B72     		strb	r3, [r7, #8]
2821:..\src/command_processing.c ****     packet_data[1] = value;
 19400              		.loc 1 2821 0
 19401 0012 FB79     		ldrb	r3, [r7, #7]
 19402 0014 7B72     		strb	r3, [r7, #9]
2822:..\src/command_processing.c **** 
2823:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 19403              		.loc 1 2823 0
 19404 0016 FB68     		ldr	r3, [r7, #12]
 19405 0018 9AB2     		uxth	r2, r3
 19406 001a 07F10803 		add	r3, r7, #8
 19407 001e 1146     		mov	r1, r2
 19408 0020 1846     		mov	r0, r3
 19409 0022 FFF7FEFF 		bl	commWrite
2824:..\src/command_processing.c **** }
 19410              		.loc 1 2824 0
 19411 0026 00BF     		nop
 19412 0028 1037     		adds	r7, r7, #16
 19413              		.cfi_def_cfa_offset 8
 19414 002a BD46     		mov	sp, r7
 19415              		.cfi_def_cfa_register 13
 19416              		@ sp needed
 19417 002c 80BD     		pop	{r7, pc}
 19418              		.cfi_endproc
 19419              	.LFE82:
 19420              		.size	sendAcknowledgment, .-sendAcknowledgment
 19421 002e 00BF     		.section	.text.memStore,"ax",%progbits
 19422              		.align	2
 19423              		.global	memStore
 19424              		.thumb
 19425              		.thumb_func
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 432


 19426              		.type	memStore, %function
 19427              	memStore:
 19428              	.LFB83:
2825:..\src/command_processing.c **** 
2826:..\src/command_processing.c **** //==============================================================================
2827:..\src/command_processing.c **** //                                                                  STORE MEMORY
2828:..\src/command_processing.c **** //==============================================================================
2829:..\src/command_processing.c **** 
2830:..\src/command_processing.c **** 
2831:..\src/command_processing.c **** uint8 memStore(int displacement)
2832:..\src/command_processing.c **** {
 19429              		.loc 1 2832 0
 19430              		.cfi_startproc
 19431              		@ args = 0, pretend = 0, frame = 24
 19432              		@ frame_needed = 1, uses_anonymous_args = 0
 19433 0000 80B5     		push	{r7, lr}
 19434              		.cfi_def_cfa_offset 8
 19435              		.cfi_offset 7, -8
 19436              		.cfi_offset 14, -4
 19437 0002 86B0     		sub	sp, sp, #24
 19438              		.cfi_def_cfa_offset 32
 19439 0004 00AF     		add	r7, sp, #0
 19440              		.cfi_def_cfa_register 7
 19441 0006 7860     		str	r0, [r7, #4]
2833:..\src/command_processing.c ****     int i;  // iterator
2834:..\src/command_processing.c ****     uint8 writeStatus;
2835:..\src/command_processing.c ****     int pages;
2836:..\src/command_processing.c ****     uint8 ret_val = 1;
 19442              		.loc 1 2836 0
 19443 0008 0123     		movs	r3, #1
 19444 000a FB74     		strb	r3, [r7, #19]
2837:..\src/command_processing.c **** 
2838:..\src/command_processing.c ****     // Disable Interrupt
2839:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 19445              		.loc 1 2839 0
 19446 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2840:..\src/command_processing.c **** 
2841:..\src/command_processing.c ****     // Stop motor
2842:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 19447              		.loc 1 2842 0
 19448 0010 0020     		movs	r0, #0
 19449 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2843:..\src/command_processing.c **** 
2844:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
2845:..\src/command_processing.c ****     CySetTemp();
 19450              		.loc 1 2845 0
 19451 0016 FFF7FEFF 		bl	CySetTemp
2846:..\src/command_processing.c **** 
2847:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 19452              		.loc 1 2847 0
 19453 001a 1D4A     		ldr	r2, .L791
 19454 001c 1D4B     		ldr	r3, .L791+4
 19455 001e 1046     		mov	r0, r2
 19456 0020 1946     		mov	r1, r3
 19457 0022 4FF43D73 		mov	r3, #756
 19458 0026 1A46     		mov	r2, r3
 19459 0028 FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 433


2848:..\src/command_processing.c **** 
2849:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 19460              		.loc 1 2849 0
 19461 002c 3023     		movs	r3, #48
 19462 002e FB60     		str	r3, [r7, #12]
2850:..\src/command_processing.c **** 
2851:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 19463              		.loc 1 2851 0
 19464 0030 0023     		movs	r3, #0
 19465 0032 7B61     		str	r3, [r7, #20]
 19466 0034 18E0     		b	.L786
 19467              	.L789:
2852:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19468              		.loc 1 2852 0
 19469 0036 7B69     		ldr	r3, [r7, #20]
 19470 0038 1B01     		lsls	r3, r3, #4
 19471 003a 1A46     		mov	r2, r3
 19472 003c 154B     		ldr	r3, .L791+4
 19473 003e D018     		adds	r0, r2, r3
 19474 0040 7B69     		ldr	r3, [r7, #20]
 19475 0042 DAB2     		uxtb	r2, r3
 19476 0044 7B68     		ldr	r3, [r7, #4]
 19477 0046 DBB2     		uxtb	r3, r3
 19478 0048 1344     		add	r3, r3, r2
 19479 004a DBB2     		uxtb	r3, r3
 19480 004c 1946     		mov	r1, r3
 19481 004e FFF7FEFF 		bl	EEPROM_Write
 19482 0052 0346     		mov	r3, r0
 19483 0054 FB72     		strb	r3, [r7, #11]
2853:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 19484              		.loc 1 2853 0
 19485 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 19486 0058 002B     		cmp	r3, #0
 19487 005a 02D0     		beq	.L787
2854:..\src/command_processing.c ****             ret_val = 0;
 19488              		.loc 1 2854 0
 19489 005c 0023     		movs	r3, #0
 19490 005e FB74     		strb	r3, [r7, #19]
2855:..\src/command_processing.c ****             break;
 19491              		.loc 1 2855 0
 19492 0060 06E0     		b	.L788
 19493              	.L787:
2851:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19494              		.loc 1 2851 0 discriminator 2
 19495 0062 7B69     		ldr	r3, [r7, #20]
 19496 0064 0133     		adds	r3, r3, #1
 19497 0066 7B61     		str	r3, [r7, #20]
 19498              	.L786:
2851:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.flag + 16 * i, i + displacement);
 19499              		.loc 1 2851 0 is_stmt 0 discriminator 1
 19500 0068 7A69     		ldr	r2, [r7, #20]
 19501 006a FB68     		ldr	r3, [r7, #12]
 19502 006c 9A42     		cmp	r2, r3
 19503 006e E2DB     		blt	.L789
 19504              	.L788:
2856:..\src/command_processing.c ****         }
2857:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 434


2858:..\src/command_processing.c **** 
2859:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 19505              		.loc 1 2859 0 is_stmt 1
 19506 0070 084A     		ldr	r2, .L791+4
 19507 0072 074B     		ldr	r3, .L791
 19508 0074 1046     		mov	r0, r2
 19509 0076 1946     		mov	r1, r3
 19510 0078 4FF43D73 		mov	r3, #756
 19511 007c 1A46     		mov	r2, r3
 19512 007e FFF7FEFF 		bl	memcpy
2860:..\src/command_processing.c **** 
2861:..\src/command_processing.c ****     // Re-Enable Interrupt
2862:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 19513              		.loc 1 2862 0
 19514 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2863:..\src/command_processing.c **** 
2864:..\src/command_processing.c ****     return ret_val;
 19515              		.loc 1 2864 0
 19516 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2865:..\src/command_processing.c **** }
 19517              		.loc 1 2865 0
 19518 0088 1846     		mov	r0, r3
 19519 008a 1837     		adds	r7, r7, #24
 19520              		.cfi_def_cfa_offset 8
 19521 008c BD46     		mov	sp, r7
 19522              		.cfi_def_cfa_register 13
 19523              		@ sp needed
 19524 008e 80BD     		pop	{r7, pc}
 19525              	.L792:
 19526              		.align	2
 19527              	.L791:
 19528 0090 00000000 		.word	c_mem
 19529 0094 00000000 		.word	g_mem
 19530              		.cfi_endproc
 19531              	.LFE83:
 19532              		.size	memStore, .-memStore
 19533              		.section	.text.memRecall,"ax",%progbits
 19534              		.align	2
 19535              		.global	memRecall
 19536              		.thumb
 19537              		.thumb_func
 19538              		.type	memRecall, %function
 19539              	memRecall:
 19540              	.LFB84:
2866:..\src/command_processing.c **** 
2867:..\src/command_processing.c **** 
2868:..\src/command_processing.c **** //==============================================================================
2869:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2870:..\src/command_processing.c **** //==============================================================================
2871:..\src/command_processing.c **** 
2872:..\src/command_processing.c **** 
2873:..\src/command_processing.c **** void memRecall(void)
2874:..\src/command_processing.c **** {
 19541              		.loc 1 2874 0
 19542              		.cfi_startproc
 19543              		@ args = 0, pretend = 0, frame = 8
 19544              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 435


 19545 0000 80B5     		push	{r7, lr}
 19546              		.cfi_def_cfa_offset 8
 19547              		.cfi_offset 7, -8
 19548              		.cfi_offset 14, -4
 19549 0002 82B0     		sub	sp, sp, #8
 19550              		.cfi_def_cfa_offset 16
 19551 0004 00AF     		add	r7, sp, #0
 19552              		.cfi_def_cfa_register 7
2875:..\src/command_processing.c ****     uint16 i;
2876:..\src/command_processing.c **** 
2877:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19553              		.loc 1 2877 0
 19554 0006 0023     		movs	r3, #0
 19555 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19556 000a 0CE0     		b	.L794
 19557              	.L795:
2878:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19558              		.loc 1 2878 0 discriminator 3
 19559 000c FB88     		ldrh	r3, [r7, #6]
 19560 000e 184A     		ldr	r2, .L799
 19561 0010 1344     		add	r3, r3, r2
 19562 0012 184A     		ldr	r2, .L799+4
 19563 0014 1168     		ldr	r1, [r2]
 19564 0016 FA88     		ldrh	r2, [r7, #6]
 19565 0018 0A44     		add	r2, r2, r1
 19566 001a 1278     		ldrb	r2, [r2]
 19567 001c D2B2     		uxtb	r2, r2
 19568 001e 1A70     		strb	r2, [r3]
2877:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19569              		.loc 1 2877 0 discriminator 3
 19570 0020 FB88     		ldrh	r3, [r7, #6]
 19571 0022 0133     		adds	r3, r3, #1
 19572 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 19573              	.L794:
2877:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 19574              		.loc 1 2877 0 is_stmt 0 discriminator 1
 19575 0026 FB88     		ldrh	r3, [r7, #6]
 19576 0028 B3F53D7F 		cmp	r3, #756
 19577 002c EED3     		bcc	.L795
2879:..\src/command_processing.c ****     }
2880:..\src/command_processing.c ****     
2881:..\src/command_processing.c ****     // Recall saved user_emg structure
2882:..\src/command_processing.c ****     memcpy( &(g_mem.emg), &(g_mem.user[g_mem.dev.user_id].user_emg), sizeof(g_mem.emg) );
 19578              		.loc 1 2882 0 is_stmt 1
 19579 002e 104B     		ldr	r3, .L799
 19580 0030 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 19581 0034 5B01     		lsls	r3, r3, #5
 19582 0036 03F51273 		add	r3, r3, #584
 19583 003a 0D4A     		ldr	r2, .L799
 19584 003c 1344     		add	r3, r3, r2
 19585 003e 1022     		movs	r2, #16
 19586 0040 1946     		mov	r1, r3
 19587 0042 0D48     		ldr	r0, .L799+8
 19588 0044 FFF7FEFF 		bl	memcpy
2883:..\src/command_processing.c **** 
2884:..\src/command_processing.c ****     //check for initialization
2885:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 436


 19589              		.loc 1 2885 0
 19590 0048 094B     		ldr	r3, .L799
 19591 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19592 004c 002B     		cmp	r3, #0
 19593 004e 02D1     		bne	.L796
2886:..\src/command_processing.c ****         memRestore();
 19594              		.loc 1 2886 0
 19595 0050 FFF7FEFF 		bl	memRestore
2887:..\src/command_processing.c ****     } else {
2888:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2889:..\src/command_processing.c ****     }        
2890:..\src/command_processing.c **** }
 19596              		.loc 1 2890 0
 19597 0054 08E0     		b	.L798
 19598              	.L796:
2888:..\src/command_processing.c ****     }        
 19599              		.loc 1 2888 0
 19600 0056 094A     		ldr	r2, .L799+12
 19601 0058 054B     		ldr	r3, .L799
 19602 005a 1046     		mov	r0, r2
 19603 005c 1946     		mov	r1, r3
 19604 005e 4FF43D73 		mov	r3, #756
 19605 0062 1A46     		mov	r2, r3
 19606 0064 FFF7FEFF 		bl	memcpy
 19607              	.L798:
 19608              		.loc 1 2890 0
 19609 0068 00BF     		nop
 19610 006a 0837     		adds	r7, r7, #8
 19611              		.cfi_def_cfa_offset 8
 19612 006c BD46     		mov	sp, r7
 19613              		.cfi_def_cfa_register 13
 19614              		@ sp needed
 19615 006e 80BD     		pop	{r7, pc}
 19616              	.L800:
 19617              		.align	2
 19618              	.L799:
 19619 0070 00000000 		.word	g_mem
 19620 0074 00000000 		.word	EEPROM_ADDR
 19621 0078 F0010000 		.word	g_mem+496
 19622 007c 00000000 		.word	c_mem
 19623              		.cfi_endproc
 19624              	.LFE84:
 19625              		.size	memRecall, .-memRecall
 19626              		.section	.text.memRestore,"ax",%progbits
 19627              		.align	2
 19628              		.global	memRestore
 19629              		.thumb
 19630              		.thumb_func
 19631              		.type	memRestore, %function
 19632              	memRestore:
 19633              	.LFB85:
2891:..\src/command_processing.c **** 
2892:..\src/command_processing.c **** 
2893:..\src/command_processing.c **** //==============================================================================
2894:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2895:..\src/command_processing.c **** //==============================================================================
2896:..\src/command_processing.c **** 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 437


2897:..\src/command_processing.c **** 
2898:..\src/command_processing.c **** uint8 memRestore(void) {
 19634              		.loc 1 2898 0
 19635              		.cfi_startproc
 19636              		@ args = 0, pretend = 0, frame = 8
 19637              		@ frame_needed = 1, uses_anonymous_args = 0
 19638 0000 80B5     		push	{r7, lr}
 19639              		.cfi_def_cfa_offset 8
 19640              		.cfi_offset 7, -8
 19641              		.cfi_offset 14, -4
 19642 0002 82B0     		sub	sp, sp, #8
 19643              		.cfi_def_cfa_offset 16
 19644 0004 00AF     		add	r7, sp, #0
 19645              		.cfi_def_cfa_register 7
2899:..\src/command_processing.c ****     uint16 i;
2900:..\src/command_processing.c **** 
2901:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 19646              		.loc 1 2901 0
 19647 0006 0023     		movs	r3, #0
 19648 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 19649 000a 0EE0     		b	.L802
 19650              	.L803:
2902:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19651              		.loc 1 2902 0 discriminator 3
 19652 000c FB88     		ldrh	r3, [r7, #6]
 19653 000e 114A     		ldr	r2, .L806
 19654 0010 1344     		add	r3, r3, r2
 19655 0012 114A     		ldr	r2, .L806+4
 19656 0014 1168     		ldr	r1, [r2]
 19657 0016 FA88     		ldrh	r2, [r7, #6]
 19658 0018 02F54872 		add	r2, r2, #800
 19659 001c 0A44     		add	r2, r2, r1
 19660 001e 1278     		ldrb	r2, [r2]
 19661 0020 D2B2     		uxtb	r2, r2
 19662 0022 1A70     		strb	r2, [r3]
2901:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19663              		.loc 1 2901 0 discriminator 3
 19664 0024 FB88     		ldrh	r3, [r7, #6]
 19665 0026 0133     		adds	r3, r3, #1
 19666 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 19667              	.L802:
2901:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 19668              		.loc 1 2901 0 is_stmt 0 discriminator 1
 19669 002a FB88     		ldrh	r3, [r7, #6]
 19670 002c B3F53D7F 		cmp	r3, #756
 19671 0030 ECD3     		bcc	.L803
2903:..\src/command_processing.c ****     }
2904:..\src/command_processing.c **** 
2905:..\src/command_processing.c ****     //check for initialization
2906:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 19672              		.loc 1 2906 0 is_stmt 1
 19673 0032 084B     		ldr	r3, .L806
 19674 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 19675 0036 002B     		cmp	r3, #0
 19676 0038 03D1     		bne	.L804
2907:..\src/command_processing.c ****         return memInit();
 19677              		.loc 1 2907 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 438


 19678 003a FFF7FEFF 		bl	memInit
 19679 003e 0346     		mov	r3, r0
 19680 0040 03E0     		b	.L805
 19681              	.L804:
2908:..\src/command_processing.c ****     } else {
2909:..\src/command_processing.c ****         return memStore(0);
 19682              		.loc 1 2909 0
 19683 0042 0020     		movs	r0, #0
 19684 0044 FFF7FEFF 		bl	memStore
 19685 0048 0346     		mov	r3, r0
 19686              	.L805:
2910:..\src/command_processing.c ****     }  
2911:..\src/command_processing.c **** }
 19687              		.loc 1 2911 0
 19688 004a 1846     		mov	r0, r3
 19689 004c 0837     		adds	r7, r7, #8
 19690              		.cfi_def_cfa_offset 8
 19691 004e BD46     		mov	sp, r7
 19692              		.cfi_def_cfa_register 13
 19693              		@ sp needed
 19694 0050 80BD     		pop	{r7, pc}
 19695              	.L807:
 19696 0052 00BF     		.align	2
 19697              	.L806:
 19698 0054 00000000 		.word	g_mem
 19699 0058 00000000 		.word	EEPROM_ADDR
 19700              		.cfi_endproc
 19701              	.LFE85:
 19702              		.size	memRestore, .-memRestore
 19703              		.section	.rodata
 19704 1c37 00       		.align	2
 19705              	.LC273:
 19706 1c38 47454E30 		.ascii	"GEN001\000"
 19706      303100
 19707              		.section	.text.memInit,"ax",%progbits
 19708              		.align	2
 19709              		.global	memInit
 19710              		.thumb
 19711              		.thumb_func
 19712              		.type	memInit, %function
 19713              	memInit:
 19714              	.LFB86:
2912:..\src/command_processing.c **** 
2913:..\src/command_processing.c **** //==============================================================================
2914:..\src/command_processing.c **** //                                                                   MEMORY INIT
2915:..\src/command_processing.c **** //==============================================================================
2916:..\src/command_processing.c **** 
2917:..\src/command_processing.c **** uint8 memInit(void)
2918:..\src/command_processing.c **** {
 19715              		.loc 1 2918 0
 19716              		.cfi_startproc
 19717              		@ args = 0, pretend = 0, frame = 8
 19718              		@ frame_needed = 1, uses_anonymous_args = 0
 19719 0000 80B5     		push	{r7, lr}
 19720              		.cfi_def_cfa_offset 8
 19721              		.cfi_offset 7, -8
 19722              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 439


 19723 0002 82B0     		sub	sp, sp, #8
 19724              		.cfi_def_cfa_offset 16
 19725 0004 00AF     		add	r7, sp, #0
 19726              		.cfi_def_cfa_register 7
2919:..\src/command_processing.c ****     uint8 i, j;
2920:..\src/command_processing.c **** 
2921:..\src/command_processing.c ****     //initialize memory settings
2922:..\src/command_processing.c ****     for (i=0; i<15; i++){
 19727              		.loc 1 2922 0
 19728 0006 0023     		movs	r3, #0
 19729 0008 FB71     		strb	r3, [r7, #7]
 19730 000a 07E0     		b	.L809
 19731              	.L810:
2923:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19732              		.loc 1 2923 0 discriminator 3
 19733 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19734 000e B44A     		ldr	r2, .L835
 19735 0010 1344     		add	r3, r3, r2
 19736 0012 0022     		movs	r2, #0
 19737 0014 5A70     		strb	r2, [r3, #1]
2922:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19738              		.loc 1 2922 0 discriminator 3
 19739 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19740 0018 0133     		adds	r3, r3, #1
 19741 001a FB71     		strb	r3, [r7, #7]
 19742              	.L809:
2922:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 19743              		.loc 1 2922 0 is_stmt 0 discriminator 1
 19744 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19745 001e 0E2B     		cmp	r3, #14
 19746 0020 F4D9     		bls	.L810
2924:..\src/command_processing.c ****     }
2925:..\src/command_processing.c ****         
2926:..\src/command_processing.c ****     // DEV STRUCT
2927:..\src/command_processing.c ****     g_mem.dev.id                = 1;
 19747              		.loc 1 2927 0 is_stmt 1
 19748 0022 AF4B     		ldr	r3, .L835
 19749 0024 0122     		movs	r2, #1
 19750 0026 83F8A020 		strb	r2, [r3, #160]
2928:..\src/command_processing.c ****     g_mem.dev.right_left        = RIGHT_HAND;
 19751              		.loc 1 2928 0
 19752 002a AD4B     		ldr	r3, .L835
 19753 002c 0022     		movs	r2, #0
 19754 002e 83F8A720 		strb	r2, [r3, #167]
2929:..\src/command_processing.c ****     g_mem.dev.dev_type          = GENERIC_2_MOTORS;
 19755              		.loc 1 2929 0
 19756 0032 AB4B     		ldr	r3, .L835
 19757 0034 0122     		movs	r2, #1
 19758 0036 83F8AC20 		strb	r2, [r3, #172]
2930:..\src/command_processing.c ****     g_mem.dev.reset_counters    = FALSE;   
 19759              		.loc 1 2930 0
 19760 003a A94B     		ldr	r3, .L835
 19761 003c 0022     		movs	r2, #0
 19762 003e 83F8A820 		strb	r2, [r3, #168]
2931:..\src/command_processing.c ****     reset_counters();                       //Initialize counters
 19763              		.loc 1 2931 0
 19764 0042 FFF7FEFF 		bl	reset_counters
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 440


2932:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19765              		.loc 1 2932 0
 19766 0046 0023     		movs	r3, #0
 19767 0048 FB71     		strb	r3, [r7, #7]
 19768 004a 08E0     		b	.L811
 19769              	.L812:
2933:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 19770              		.loc 1 2933 0 discriminator 3
 19771 004c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19772 004e A44A     		ldr	r2, .L835
 19773 0050 1344     		add	r3, r3, r2
 19774 0052 0022     		movs	r2, #0
 19775 0054 83F86020 		strb	r2, [r3, #96]
2932:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19776              		.loc 1 2932 0 discriminator 3
 19777 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19778 005a 0133     		adds	r3, r3, #1
 19779 005c FB71     		strb	r3, [r7, #7]
 19780              	.L811:
2932:..\src/command_processing.c ****     for (i=0; i<EEPROM_BYTES_ROW*4; i++){
 19781              		.loc 1 2932 0 is_stmt 0 discriminator 1
 19782 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 19783 0060 3F2B     		cmp	r3, #63
 19784 0062 F3D9     		bls	.L812
2934:..\src/command_processing.c ****     }
2935:..\src/command_processing.c ****     g_mem.dev.use_2nd_motor_flag = FALSE;
 19785              		.loc 1 2935 0 is_stmt 1
 19786 0064 9E4B     		ldr	r3, .L835
 19787 0066 0022     		movs	r2, #0
 19788 0068 83F8A920 		strb	r2, [r3, #169]
2936:..\src/command_processing.c **** 
2937:..\src/command_processing.c ****     // MOTOR STRUCT
2938:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 19789              		.loc 1 2938 0
 19790 006c 0023     		movs	r3, #0
 19791 006e FB71     		strb	r3, [r7, #7]
 19792 0070 15E1     		b	.L813
 19793              	.L816:
2939:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 19794              		.loc 1 2939 0
 19795 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19796 0074 9A49     		ldr	r1, .L835
 19797 0076 1346     		mov	r3, r2
 19798 0078 DB00     		lsls	r3, r3, #3
 19799 007a 9B1A     		subs	r3, r3, r2
 19800 007c 1B01     		lsls	r3, r3, #4
 19801 007e 0B44     		add	r3, r3, r1
 19802 0080 B033     		adds	r3, r3, #176
 19803 0082 40F23942 		movw	r2, #1081
 19804 0086 1A60     		str	r2, [r3]
2940:..\src/command_processing.c ****         g_mem.motor[i].k_i           =     0 * 65536;
 19805              		.loc 1 2940 0
 19806 0088 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19807 008a 9549     		ldr	r1, .L835
 19808 008c 1346     		mov	r3, r2
 19809 008e DB00     		lsls	r3, r3, #3
 19810 0090 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 441


 19811 0092 1B01     		lsls	r3, r3, #4
 19812 0094 0B44     		add	r3, r3, r1
 19813 0096 B433     		adds	r3, r3, #180
 19814 0098 0022     		movs	r2, #0
 19815 009a 1A60     		str	r2, [r3]
2941:..\src/command_processing.c ****         g_mem.motor[i].k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatte
 19816              		.loc 1 2941 0
 19817 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19818 009e 9049     		ldr	r1, .L835
 19819 00a0 1346     		mov	r3, r2
 19820 00a2 DB00     		lsls	r3, r3, #3
 19821 00a4 9B1A     		subs	r3, r3, r2
 19822 00a6 1B01     		lsls	r3, r3, #4
 19823 00a8 0B44     		add	r3, r3, r1
 19824 00aa B833     		adds	r3, r3, #184
 19825 00ac 4FF4E572 		mov	r2, #458
 19826 00b0 1A60     		str	r2, [r3]
2942:..\src/command_processing.c ****         g_mem.motor[i].k_p_c         =     1 * 65536;
 19827              		.loc 1 2942 0
 19828 00b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19829 00b4 8A49     		ldr	r1, .L835
 19830 00b6 1346     		mov	r3, r2
 19831 00b8 DB00     		lsls	r3, r3, #3
 19832 00ba 9B1A     		subs	r3, r3, r2
 19833 00bc 1B01     		lsls	r3, r3, #4
 19834 00be 0B44     		add	r3, r3, r1
 19835 00c0 BC33     		adds	r3, r3, #188
 19836 00c2 4FF48032 		mov	r2, #65536
 19837 00c6 1A60     		str	r2, [r3]
2943:..\src/command_processing.c ****         g_mem.motor[i].k_i_c         = 0.001 * 65536;
 19838              		.loc 1 2943 0
 19839 00c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19840 00ca 8549     		ldr	r1, .L835
 19841 00cc 1346     		mov	r3, r2
 19842 00ce DB00     		lsls	r3, r3, #3
 19843 00d0 9B1A     		subs	r3, r3, r2
 19844 00d2 1B01     		lsls	r3, r3, #4
 19845 00d4 0B44     		add	r3, r3, r1
 19846 00d6 C033     		adds	r3, r3, #192
 19847 00d8 4122     		movs	r2, #65
 19848 00da 1A60     		str	r2, [r3]
2944:..\src/command_processing.c ****         g_mem.motor[i].k_d_c         =     0 * 65536;
 19849              		.loc 1 2944 0
 19850 00dc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19851 00de 8049     		ldr	r1, .L835
 19852 00e0 1346     		mov	r3, r2
 19853 00e2 DB00     		lsls	r3, r3, #3
 19854 00e4 9B1A     		subs	r3, r3, r2
 19855 00e6 1B01     		lsls	r3, r3, #4
 19856 00e8 0B44     		add	r3, r3, r1
 19857 00ea C433     		adds	r3, r3, #196
 19858 00ec 0022     		movs	r2, #0
 19859 00ee 1A60     		str	r2, [r3]
2945:..\src/command_processing.c **** 
2946:..\src/command_processing.c ****         g_mem.motor[i].k_p_dl        =   0.1 * 65536;
 19860              		.loc 1 2946 0
 19861 00f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 442


 19862 00f2 7B49     		ldr	r1, .L835
 19863 00f4 1346     		mov	r3, r2
 19864 00f6 DB00     		lsls	r3, r3, #3
 19865 00f8 9B1A     		subs	r3, r3, r2
 19866 00fa 1B01     		lsls	r3, r3, #4
 19867 00fc 0B44     		add	r3, r3, r1
 19868 00fe C833     		adds	r3, r3, #200
 19869 0100 41F69912 		movw	r2, #6553
 19870 0104 1A60     		str	r2, [r3]
2947:..\src/command_processing.c ****         g_mem.motor[i].k_i_dl        =     0 * 65536;
 19871              		.loc 1 2947 0
 19872 0106 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19873 0108 7549     		ldr	r1, .L835
 19874 010a 1346     		mov	r3, r2
 19875 010c DB00     		lsls	r3, r3, #3
 19876 010e 9B1A     		subs	r3, r3, r2
 19877 0110 1B01     		lsls	r3, r3, #4
 19878 0112 0B44     		add	r3, r3, r1
 19879 0114 CC33     		adds	r3, r3, #204
 19880 0116 0022     		movs	r2, #0
 19881 0118 1A60     		str	r2, [r3]
2948:..\src/command_processing.c ****         g_mem.motor[i].k_d_dl        =     0 * 65536;
 19882              		.loc 1 2948 0
 19883 011a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19884 011c 7049     		ldr	r1, .L835
 19885 011e 1346     		mov	r3, r2
 19886 0120 DB00     		lsls	r3, r3, #3
 19887 0122 9B1A     		subs	r3, r3, r2
 19888 0124 1B01     		lsls	r3, r3, #4
 19889 0126 0B44     		add	r3, r3, r1
 19890 0128 D033     		adds	r3, r3, #208
 19891 012a 0022     		movs	r2, #0
 19892 012c 1A60     		str	r2, [r3]
2949:..\src/command_processing.c ****         g_mem.motor[i].k_p_c_dl      =   0.3 * 65536;
 19893              		.loc 1 2949 0
 19894 012e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19895 0130 6B49     		ldr	r1, .L835
 19896 0132 1346     		mov	r3, r2
 19897 0134 DB00     		lsls	r3, r3, #3
 19898 0136 9B1A     		subs	r3, r3, r2
 19899 0138 1B01     		lsls	r3, r3, #4
 19900 013a 0B44     		add	r3, r3, r1
 19901 013c D433     		adds	r3, r3, #212
 19902 013e 44F6CC42 		movw	r2, #19660
 19903 0142 1A60     		str	r2, [r3]
2950:..\src/command_processing.c ****         g_mem.motor[i].k_i_c_dl      =0.0002 * 65536;
 19904              		.loc 1 2950 0
 19905 0144 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19906 0146 6649     		ldr	r1, .L835
 19907 0148 1346     		mov	r3, r2
 19908 014a DB00     		lsls	r3, r3, #3
 19909 014c 9B1A     		subs	r3, r3, r2
 19910 014e 1B01     		lsls	r3, r3, #4
 19911 0150 0B44     		add	r3, r3, r1
 19912 0152 D833     		adds	r3, r3, #216
 19913 0154 0D22     		movs	r2, #13
 19914 0156 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 443


2951:..\src/command_processing.c ****         g_mem.motor[i].k_d_c_dl      =     0 * 65536;
 19915              		.loc 1 2951 0
 19916 0158 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19917 015a 6149     		ldr	r1, .L835
 19918 015c 1346     		mov	r3, r2
 19919 015e DB00     		lsls	r3, r3, #3
 19920 0160 9B1A     		subs	r3, r3, r2
 19921 0162 1B01     		lsls	r3, r3, #4
 19922 0164 0B44     		add	r3, r3, r1
 19923 0166 DC33     		adds	r3, r3, #220
 19924 0168 0022     		movs	r2, #0
 19925 016a 1A60     		str	r2, [r3]
2952:..\src/command_processing.c **** 
2953:..\src/command_processing.c ****         g_mem.motor[i].activ         = 1;
 19926              		.loc 1 2953 0
 19927 016c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19928 016e 5C49     		ldr	r1, .L835
 19929 0170 1346     		mov	r3, r2
 19930 0172 DB00     		lsls	r3, r3, #3
 19931 0174 9B1A     		subs	r3, r3, r2
 19932 0176 1B01     		lsls	r3, r3, #4
 19933 0178 0B44     		add	r3, r3, r1
 19934 017a E033     		adds	r3, r3, #224
 19935 017c 0122     		movs	r2, #1
 19936 017e 1A70     		strb	r2, [r3]
2954:..\src/command_processing.c ****         g_mem.motor[i].activate_pwm_rescaling = MAXON_24V;      //rescaling active for 12V motor
 19937              		.loc 1 2954 0
 19938 0180 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19939 0182 5749     		ldr	r1, .L835
 19940 0184 1346     		mov	r3, r2
 19941 0186 DB00     		lsls	r3, r3, #3
 19942 0188 9B1A     		subs	r3, r3, r2
 19943 018a 1B01     		lsls	r3, r3, #4
 19944 018c 0B44     		add	r3, r3, r1
 19945 018e E133     		adds	r3, r3, #225
 19946 0190 0022     		movs	r2, #0
 19947 0192 1A70     		strb	r2, [r3]
2955:..\src/command_processing.c ****         g_mem.motor[i].motor_driver_type = DRIVER_MC33887;      //SoftHand standard driver
 19948              		.loc 1 2955 0
 19949 0194 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19950 0196 5249     		ldr	r1, .L835
 19951 0198 1346     		mov	r3, r2
 19952 019a DB00     		lsls	r3, r3, #3
 19953 019c 9B1A     		subs	r3, r3, r2
 19954 019e 1B01     		lsls	r3, r3, #4
 19955 01a0 0B44     		add	r3, r3, r1
 19956 01a2 E233     		adds	r3, r3, #226
 19957 01a4 0022     		movs	r2, #0
 19958 01a6 1A70     		strb	r2, [r3]
2956:..\src/command_processing.c ****         g_mem.motor[i].input_mode    = INPUT_MODE_EXTERNAL;
 19959              		.loc 1 2956 0
 19960 01a8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19961 01aa 4D49     		ldr	r1, .L835
 19962 01ac 1346     		mov	r3, r2
 19963 01ae DB00     		lsls	r3, r3, #3
 19964 01b0 9B1A     		subs	r3, r3, r2
 19965 01b2 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 444


 19966 01b4 0B44     		add	r3, r3, r1
 19967 01b6 03F58773 		add	r3, r3, #270
 19968 01ba 0022     		movs	r2, #0
 19969 01bc 1A70     		strb	r2, [r3]
2957:..\src/command_processing.c ****         g_mem.motor[i].control_mode  = CONTROL_ANGLE;
 19970              		.loc 1 2957 0
 19971 01be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19972 01c0 4749     		ldr	r1, .L835
 19973 01c2 1346     		mov	r3, r2
 19974 01c4 DB00     		lsls	r3, r3, #3
 19975 01c6 9B1A     		subs	r3, r3, r2
 19976 01c8 1B01     		lsls	r3, r3, #4
 19977 01ca 0B44     		add	r3, r3, r1
 19978 01cc 03F20F13 		addw	r3, r3, #271
 19979 01d0 0022     		movs	r2, #0
 19980 01d2 1A70     		strb	r2, [r3]
2958:..\src/command_processing.c ****         g_mem.motor[i].max_step_pos = 0;
 19981              		.loc 1 2958 0
 19982 01d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19983 01d6 4249     		ldr	r1, .L835
 19984 01d8 1346     		mov	r3, r2
 19985 01da DB00     		lsls	r3, r3, #3
 19986 01dc 9B1A     		subs	r3, r3, r2
 19987 01de 1B01     		lsls	r3, r3, #4
 19988 01e0 0B44     		add	r3, r3, r1
 19989 01e2 F033     		adds	r3, r3, #240
 19990 01e4 0022     		movs	r2, #0
 19991 01e6 1A60     		str	r2, [r3]
2959:..\src/command_processing.c ****         g_mem.motor[i].max_step_neg = 0;
 19992              		.loc 1 2959 0
 19993 01e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 19994 01ea 3D49     		ldr	r1, .L835
 19995 01ec 1346     		mov	r3, r2
 19996 01ee DB00     		lsls	r3, r3, #3
 19997 01f0 9B1A     		subs	r3, r3, r2
 19998 01f2 1B01     		lsls	r3, r3, #4
 19999 01f4 0B44     		add	r3, r3, r1
 20000 01f6 EC33     		adds	r3, r3, #236
 20001 01f8 0022     		movs	r2, #0
 20002 01fa 1A60     		str	r2, [r3]
2960:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 20003              		.loc 1 2960 0
 20004 01fc 0023     		movs	r3, #0
 20005 01fe BB71     		strb	r3, [r7, #6]
 20006 0200 10E0     		b	.L814
 20007              	.L815:
2961:..\src/command_processing.c ****             g_mem.motor[i].curr_lookup[j] = 0;
 20008              		.loc 1 2961 0 discriminator 3
 20009 0202 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20010 0204 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20011 0206 3648     		ldr	r0, .L835
 20012 0208 1346     		mov	r3, r2
 20013 020a DB00     		lsls	r3, r3, #3
 20014 020c 9B1A     		subs	r3, r3, r2
 20015 020e 9B00     		lsls	r3, r3, #2
 20016 0210 0B44     		add	r3, r3, r1
 20017 0212 3C33     		adds	r3, r3, #60
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 445


 20018 0214 9B00     		lsls	r3, r3, #2
 20019 0216 0344     		add	r3, r3, r0
 20020 0218 4FF00002 		mov	r2, #0
 20021 021c 5A60     		str	r2, [r3, #4]	@ float
2960:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 20022              		.loc 1 2960 0 discriminator 3
 20023 021e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20024 0220 0133     		adds	r3, r3, #1
 20025 0222 BB71     		strb	r3, [r7, #6]
 20026              	.L814:
2960:..\src/command_processing.c ****         for(j = 0; j < LOOKUP_DIM; j++) {
 20027              		.loc 1 2960 0 is_stmt 0 discriminator 1
 20028 0224 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20029 0226 052B     		cmp	r3, #5
 20030 0228 EBD9     		bls	.L815
2962:..\src/command_processing.c ****         }
2963:..\src/command_processing.c ****         g_mem.motor[i].current_limit = DEFAULT_CURRENT_LIMIT;
 20031              		.loc 1 2963 0 is_stmt 1 discriminator 2
 20032 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20033 022c 2C49     		ldr	r1, .L835
 20034 022e 1346     		mov	r3, r2
 20035 0230 DB00     		lsls	r3, r3, #3
 20036 0232 9B1A     		subs	r3, r3, r2
 20037 0234 1B01     		lsls	r3, r3, #4
 20038 0236 0B44     		add	r3, r3, r1
 20039 0238 03F58673 		add	r3, r3, #268
 20040 023c 40F2DC52 		movw	r2, #1500
 20041 0240 1A80     		strh	r2, [r3]	@ movhi
2964:..\src/command_processing.c ****         g_mem.motor[i].encoder_line = i;    
 20042              		.loc 1 2964 0 discriminator 2
 20043 0242 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20044 0244 2649     		ldr	r1, .L835
 20045 0246 1346     		mov	r3, r2
 20046 0248 DB00     		lsls	r3, r3, #3
 20047 024a 9B1A     		subs	r3, r3, r2
 20048 024c 1B01     		lsls	r3, r3, #4
 20049 024e 0B44     		add	r3, r3, r1
 20050 0250 03F58873 		add	r3, r3, #272
 20051 0254 FA79     		ldrb	r2, [r7, #7]
 20052 0256 1A70     		strb	r2, [r3]
2965:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_flag = 1;
 20053              		.loc 1 2965 0 discriminator 2
 20054 0258 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20055 025a 2149     		ldr	r1, .L835
 20056 025c 1346     		mov	r3, r2
 20057 025e DB00     		lsls	r3, r3, #3
 20058 0260 9B1A     		subs	r3, r3, r2
 20059 0262 1B01     		lsls	r3, r3, #4
 20060 0264 0B44     		add	r3, r3, r1
 20061 0266 E333     		adds	r3, r3, #227
 20062 0268 0122     		movs	r2, #1
 20063 026a 1A70     		strb	r2, [r3]
2966:..\src/command_processing.c ****         
2967:..\src/command_processing.c ****         g_mem.motor[i].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 20064              		.loc 1 2967 0 discriminator 2
 20065 026c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20066 026e 1C49     		ldr	r1, .L835
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 446


 20067 0270 1346     		mov	r3, r2
 20068 0272 DB00     		lsls	r3, r3, #3
 20069 0274 9B1A     		subs	r3, r3, r2
 20070 0276 1B01     		lsls	r3, r3, #4
 20071 0278 0B44     		add	r3, r3, r1
 20072 027a 03F21113 		addw	r3, r3, #273
 20073 027e 0122     		movs	r2, #1
 20074 0280 1A70     		strb	r2, [r3]
2968:..\src/command_processing.c ****         g_mem.motor[i].not_revers_motor_flag = FALSE;       // Generic reversible motor  
 20075              		.loc 1 2968 0 discriminator 2
 20076 0282 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20077 0284 1649     		ldr	r1, .L835
 20078 0286 1346     		mov	r3, r2
 20079 0288 DB00     		lsls	r3, r3, #3
 20080 028a 9B1A     		subs	r3, r3, r2
 20081 028c 1B01     		lsls	r3, r3, #4
 20082 028e 0B44     		add	r3, r3, r1
 20083 0290 03F58973 		add	r3, r3, #274
 20084 0294 0022     		movs	r2, #0
 20085 0296 1A70     		strb	r2, [r3]
2938:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 20086              		.loc 1 2938 0 discriminator 2
 20087 0298 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20088 029a 0133     		adds	r3, r3, #1
 20089 029c FB71     		strb	r3, [r7, #7]
 20090              	.L813:
2938:..\src/command_processing.c ****         g_mem.motor[i].k_p           =0.0165 * 65536;
 20091              		.loc 1 2938 0 is_stmt 0 discriminator 1
 20092 029e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20093 02a0 012B     		cmp	r3, #1
 20094 02a2 7FF6E6AE 		bls	.L816
2969:..\src/command_processing.c ****     }
2970:..\src/command_processing.c ****     
2971:..\src/command_processing.c ****     // ENC STRUCT
2972:..\src/command_processing.c ****     for (i = 0; i< N_ENCODER_LINE_MAX; i++){
 20095              		.loc 1 2972 0 is_stmt 1
 20096 02a6 0023     		movs	r3, #0
 20097 02a8 FB71     		strb	r3, [r7, #7]
 20098 02aa 98E0     		b	.L817
 20099              	.L824:
2973:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 20100              		.loc 1 2973 0
 20101 02ac 0023     		movs	r3, #0
 20102 02ae BB71     		strb	r3, [r7, #6]
 20103 02b0 0FE0     		b	.L818
 20104              	.L819:
2974:..\src/command_processing.c ****             g_mem.enc[i].Enc_raw_read_conf[j] = 0;
 20105              		.loc 1 2974 0 discriminator 3
 20106 02b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20107 02b4 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20108 02b6 0A48     		ldr	r0, .L835
 20109 02b8 1346     		mov	r3, r2
 20110 02ba 5B00     		lsls	r3, r3, #1
 20111 02bc 1344     		add	r3, r3, r2
 20112 02be 1B01     		lsls	r3, r3, #4
 20113 02c0 0344     		add	r3, r3, r0
 20114 02c2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 447


 20115 02c4 03F5C873 		add	r3, r3, #400
 20116 02c8 0022     		movs	r2, #0
 20117 02ca 1A70     		strb	r2, [r3]
2973:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 20118              		.loc 1 2973 0 discriminator 3
 20119 02cc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20120 02ce 0133     		adds	r3, r3, #1
 20121 02d0 BB71     		strb	r3, [r7, #6]
 20122              	.L818:
2973:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 20123              		.loc 1 2973 0 is_stmt 0 discriminator 1
 20124 02d2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20125 02d4 042B     		cmp	r3, #4
 20126 02d6 ECD9     		bls	.L819
2975:..\src/command_processing.c ****         }
2976:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 20127              		.loc 1 2976 0 is_stmt 1
 20128 02d8 0023     		movs	r3, #0
 20129 02da BB71     		strb	r3, [r7, #6]
 20130 02dc 2CE0     		b	.L820
 20131              	.L836:
 20132 02de 00BF     		.align	2
 20133              	.L835:
 20134 02e0 00000000 		.word	g_mem
 20135              	.L821:
2977:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 20136              		.loc 1 2977 0 discriminator 3
 20137 02e4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20138 02e6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20139 02e8 C648     		ldr	r0, .L837
 20140 02ea 1346     		mov	r3, r2
 20141 02ec 5B00     		lsls	r3, r3, #1
 20142 02ee 1344     		add	r3, r3, r2
 20143 02f0 1B01     		lsls	r3, r3, #4
 20144 02f2 0344     		add	r3, r3, r0
 20145 02f4 0B44     		add	r3, r3, r1
 20146 02f6 03F29513 		addw	r3, r3, #405
 20147 02fa 0322     		movs	r2, #3
 20148 02fc 1A70     		strb	r2, [r3]
2978:..\src/command_processing.c ****             g_mem.enc[i].m_mult[j] = 1;
 20149              		.loc 1 2978 0 discriminator 3
 20150 02fe FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20151 0300 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20152 0302 C048     		ldr	r0, .L837
 20153 0304 1346     		mov	r3, r2
 20154 0306 5B00     		lsls	r3, r3, #1
 20155 0308 1344     		add	r3, r3, r2
 20156 030a 9B00     		lsls	r3, r3, #2
 20157 030c 0B44     		add	r3, r3, r1
 20158 030e 6833     		adds	r3, r3, #104
 20159 0310 9B00     		lsls	r3, r3, #2
 20160 0312 0344     		add	r3, r3, r0
 20161 0314 4FF07E52 		mov	r2, #1065353216
 20162 0318 5A60     		str	r2, [r3, #4]	@ float
2979:..\src/command_processing.c ****             g_mem.enc[i].m_off[j] = (int32)0 << g_mem.enc[i].res[j];
 20163              		.loc 1 2979 0 discriminator 3
 20164 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 448


 20165 031c B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20166 031e B948     		ldr	r0, .L837
 20167 0320 1346     		mov	r3, r2
 20168 0322 5B00     		lsls	r3, r3, #1
 20169 0324 1344     		add	r3, r3, r2
 20170 0326 9B00     		lsls	r3, r3, #2
 20171 0328 0B44     		add	r3, r3, r1
 20172 032a 6633     		adds	r3, r3, #102
 20173 032c 0022     		movs	r2, #0
 20174 032e 40F82320 		str	r2, [r0, r3, lsl #2]
2976:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 20175              		.loc 1 2976 0 discriminator 3
 20176 0332 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20177 0334 0133     		adds	r3, r3, #1
 20178 0336 BB71     		strb	r3, [r7, #6]
 20179              	.L820:
2976:..\src/command_processing.c ****             g_mem.enc[i].res[j] = 3;
 20180              		.loc 1 2976 0 is_stmt 0 discriminator 1
 20181 0338 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20182 033a 022B     		cmp	r3, #2
 20183 033c D2D9     		bls	.L821
2980:..\src/command_processing.c ****         }
2981:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = FALSE;
 20184              		.loc 1 2981 0 is_stmt 1
 20185 033e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20186 0340 B049     		ldr	r1, .L837
 20187 0342 1346     		mov	r3, r2
 20188 0344 5B00     		lsls	r3, r3, #1
 20189 0346 1344     		add	r3, r3, r2
 20190 0348 1B01     		lsls	r3, r3, #4
 20191 034a 0B44     		add	r3, r3, r1
 20192 034c 03F5D873 		add	r3, r3, #432
 20193 0350 0022     		movs	r2, #0
 20194 0352 1A70     		strb	r2, [r3]
2982:..\src/command_processing.c ****         g_mem.enc[i].motor_handle_ratio = 22;     
 20195              		.loc 1 2982 0
 20196 0354 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20197 0356 AB49     		ldr	r1, .L837
 20198 0358 1346     		mov	r3, r2
 20199 035a 5B00     		lsls	r3, r3, #1
 20200 035c 1344     		add	r3, r3, r2
 20201 035e 1B01     		lsls	r3, r3, #4
 20202 0360 0B44     		add	r3, r3, r1
 20203 0362 03F5DA73 		add	r3, r3, #436
 20204 0366 1622     		movs	r2, #22
 20205 0368 1A70     		strb	r2, [r3]
2983:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 20206              		.loc 1 2983 0
 20207 036a 0023     		movs	r3, #0
 20208 036c BB71     		strb	r3, [r7, #6]
 20209 036e 0FE0     		b	.L822
 20210              	.L823:
2984:..\src/command_processing.c ****             g_mem.enc[i].Enc_idx_use_for_control[j] = j;    // First encoder is that with index 0 a
 20211              		.loc 1 2984 0 discriminator 3
 20212 0370 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20213 0372 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 20214 0374 A348     		ldr	r0, .L837
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 449


 20215 0376 1346     		mov	r3, r2
 20216 0378 5B00     		lsls	r3, r3, #1
 20217 037a 1344     		add	r3, r3, r2
 20218 037c 1B01     		lsls	r3, r3, #4
 20219 037e 0344     		add	r3, r3, r0
 20220 0380 0B44     		add	r3, r3, r1
 20221 0382 03F2B113 		addw	r3, r3, #433
 20222 0386 BA79     		ldrb	r2, [r7, #6]
 20223 0388 1A70     		strb	r2, [r3]
2983:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 20224              		.loc 1 2983 0 discriminator 3
 20225 038a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20226 038c 0133     		adds	r3, r3, #1
 20227 038e BB71     		strb	r3, [r7, #6]
 20228              	.L822:
2983:..\src/command_processing.c ****         for(j = 0; j < NUM_OF_SENSORS; j++){
 20229              		.loc 1 2983 0 is_stmt 0 discriminator 1
 20230 0390 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 20231 0392 022B     		cmp	r3, #2
 20232 0394 ECD9     		bls	.L823
2985:..\src/command_processing.c ****         }
2986:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = 15;     
 20233              		.loc 1 2986 0 is_stmt 1 discriminator 2
 20234 0396 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20235 0398 9A49     		ldr	r1, .L837
 20236 039a 1346     		mov	r3, r2
 20237 039c 5B00     		lsls	r3, r3, #1
 20238 039e 1344     		add	r3, r3, r2
 20239 03a0 1B01     		lsls	r3, r3, #4
 20240 03a2 0B44     		add	r3, r3, r1
 20241 03a4 03F2B513 		addw	r3, r3, #437
 20242 03a8 0F22     		movs	r2, #15
 20243 03aa 1A70     		strb	r2, [r3]
2987:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = 14;     
 20244              		.loc 1 2987 0 discriminator 2
 20245 03ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20246 03ae 9549     		ldr	r1, .L837
 20247 03b0 1346     		mov	r3, r2
 20248 03b2 5B00     		lsls	r3, r3, #1
 20249 03b4 1344     		add	r3, r3, r2
 20250 03b6 1B01     		lsls	r3, r3, #4
 20251 03b8 0B44     		add	r3, r3, r1
 20252 03ba 03F5DB73 		add	r3, r3, #438
 20253 03be 0E22     		movs	r2, #14
 20254 03c0 1A70     		strb	r2, [r3]
2988:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = 1;  
 20255              		.loc 1 2988 0 discriminator 2
 20256 03c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20257 03c4 8F49     		ldr	r1, .L837
 20258 03c6 1346     		mov	r3, r2
 20259 03c8 5B00     		lsls	r3, r3, #1
 20260 03ca 1344     		add	r3, r3, r2
 20261 03cc 1B01     		lsls	r3, r3, #4
 20262 03ce 0B44     		add	r3, r3, r1
 20263 03d0 03F2B713 		addw	r3, r3, #439
 20264 03d4 0122     		movs	r2, #1
 20265 03d6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 450


2972:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 20266              		.loc 1 2972 0 discriminator 2
 20267 03d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20268 03da 0133     		adds	r3, r3, #1
 20269 03dc FB71     		strb	r3, [r7, #7]
 20270              	.L817:
2972:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 20271              		.loc 1 2972 0 is_stmt 0 discriminator 1
 20272 03de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20273 03e0 012B     		cmp	r3, #1
 20274 03e2 7FF663AF 		bls	.L824
2989:..\src/command_processing.c ****     }
2990:..\src/command_processing.c ****     
2991:..\src/command_processing.c ****     for (i=0; i< NUM_OF_MOTORS; i++) {
 20275              		.loc 1 2991 0 is_stmt 1
 20276 03e6 0023     		movs	r3, #0
 20277 03e8 FB71     		strb	r3, [r7, #7]
 20278 03ea 2EE0     		b	.L825
 20279              	.L826:
2992:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 20280              		.loc 1 2992 0 discriminator 3
 20281 03ec FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20282 03ee 8549     		ldr	r1, .L837
 20283 03f0 1346     		mov	r3, r2
 20284 03f2 DB00     		lsls	r3, r3, #3
 20285 03f4 9B1A     		subs	r3, r3, r2
 20286 03f6 1B01     		lsls	r3, r3, #4
 20287 03f8 0B44     		add	r3, r3, r1
 20288 03fa E433     		adds	r3, r3, #228
 20289 03fc 0022     		movs	r2, #0
 20290 03fe 1A60     		str	r2, [r3]
2993:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_sup = (int32)19000 << g_mem.enc[g_mem.motor[i].encoder_line].res[0];
 20291              		.loc 1 2993 0 discriminator 3
 20292 0400 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20293 0402 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 20294 0404 7F48     		ldr	r0, .L837
 20295 0406 0B46     		mov	r3, r1
 20296 0408 DB00     		lsls	r3, r3, #3
 20297 040a 5B1A     		subs	r3, r3, r1
 20298 040c 1B01     		lsls	r3, r3, #4
 20299 040e 0344     		add	r3, r3, r0
 20300 0410 03F58873 		add	r3, r3, #272
 20301 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20302 0416 1846     		mov	r0, r3
 20303 0418 7A49     		ldr	r1, .L837
 20304 041a 0346     		mov	r3, r0
 20305 041c 5B00     		lsls	r3, r3, #1
 20306 041e 0344     		add	r3, r3, r0
 20307 0420 1B01     		lsls	r3, r3, #4
 20308 0422 0B44     		add	r3, r3, r1
 20309 0424 03F29513 		addw	r3, r3, #405
 20310 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20311 042a 1946     		mov	r1, r3
 20312 042c 44F63823 		movw	r3, #19000
 20313 0430 03FA01F1 		lsl	r1, r3, r1
 20314 0434 7348     		ldr	r0, .L837
 20315 0436 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 451


 20316 0438 DB00     		lsls	r3, r3, #3
 20317 043a 9B1A     		subs	r3, r3, r2
 20318 043c 1B01     		lsls	r3, r3, #4
 20319 043e 0344     		add	r3, r3, r0
 20320 0440 E833     		adds	r3, r3, #232
 20321 0442 1960     		str	r1, [r3]
2991:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 20322              		.loc 1 2991 0 discriminator 3
 20323 0444 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20324 0446 0133     		adds	r3, r3, #1
 20325 0448 FB71     		strb	r3, [r7, #7]
 20326              	.L825:
2991:..\src/command_processing.c ****         g_mem.motor[i].pos_lim_inf = 0;
 20327              		.loc 1 2991 0 is_stmt 0 discriminator 1
 20328 044a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20329 044c 012B     		cmp	r3, #1
 20330 044e CDD9     		bls	.L826
2994:..\src/command_processing.c ****     }
2995:..\src/command_processing.c ****     
2996:..\src/command_processing.c ****     // EMG STRUCT     
2997:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 20331              		.loc 1 2997 0 is_stmt 1
 20332 0450 6C4B     		ldr	r3, .L837
 20333 0452 C822     		movs	r2, #200
 20334 0454 A3F8F021 		strh	r2, [r3, #496]	@ movhi
2998:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 20335              		.loc 1 2998 0
 20336 0458 6A4B     		ldr	r3, .L837
 20337 045a C822     		movs	r2, #200
 20338 045c A3F8F221 		strh	r2, [r3, #498]	@ movhi
2999:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 20339              		.loc 1 2999 0
 20340 0460 684B     		ldr	r3, .L837
 20341 0462 4FF48062 		mov	r2, #1024
 20342 0466 C3F8F421 		str	r2, [r3, #500]
3000:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;   
 20343              		.loc 1 3000 0
 20344 046a 664B     		ldr	r3, .L837
 20345 046c 4FF48062 		mov	r2, #1024
 20346 0470 C3F8F821 		str	r2, [r3, #504]
3001:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100; 
 20347              		.loc 1 3001 0
 20348 0474 634B     		ldr	r3, .L837
 20349 0476 6422     		movs	r2, #100
 20350 0478 83F8FC21 		strb	r2, [r3, #508]
3002:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100; 
 20351              		.loc 1 3002 0
 20352 047c 614B     		ldr	r3, .L837
 20353 047e 6422     		movs	r2, #100
 20354 0480 83F8FD21 		strb	r2, [r3, #509]
3003:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 20355              		.loc 1 3003 0
 20356 0484 5F4B     		ldr	r3, .L837
 20357 0486 0022     		movs	r2, #0
 20358 0488 83F8FE21 		strb	r2, [r3, #510]
3004:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;    
 20359              		.loc 1 3004 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 452


 20360 048c 5D4B     		ldr	r3, .L837
 20361 048e 0022     		movs	r2, #0
 20362 0490 83F8FF21 		strb	r2, [r3, #511]
3005:..\src/command_processing.c **** 
3006:..\src/command_processing.c ****     // IMU STRUCT
3007:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 20363              		.loc 1 3007 0
 20364 0494 5B4B     		ldr	r3, .L837
 20365 0496 0022     		movs	r2, #0
 20366 0498 83F80022 		strb	r2, [r3, #512]
3008:..\src/command_processing.c ****     g_mem.imu.SPI_read_delay = 0;       // 0 - No delay
 20367              		.loc 1 3008 0
 20368 049c 594B     		ldr	r3, .L837
 20369 049e 0022     		movs	r2, #0
 20370 04a0 83F80122 		strb	r2, [r3, #513]
3009:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 20371              		.loc 1 3009 0
 20372 04a4 0023     		movs	r3, #0
 20373 04a6 FB71     		strb	r3, [r7, #7]
 20374 04a8 34E0     		b	.L827
 20375              	.L828:
3010:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 20376              		.loc 1 3010 0 discriminator 3
 20377 04aa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20378 04ac 5549     		ldr	r1, .L837
 20379 04ae 1346     		mov	r3, r2
 20380 04b0 9B00     		lsls	r3, r3, #2
 20381 04b2 1344     		add	r3, r3, r2
 20382 04b4 0B44     		add	r3, r3, r1
 20383 04b6 03F20223 		addw	r3, r3, #514
 20384 04ba 0122     		movs	r2, #1
 20385 04bc 1A70     		strb	r2, [r3]
3011:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][1] = 1;   // Gyroscopes
 20386              		.loc 1 3011 0 discriminator 3
 20387 04be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20388 04c0 5049     		ldr	r1, .L837
 20389 04c2 1346     		mov	r3, r2
 20390 04c4 9B00     		lsls	r3, r3, #2
 20391 04c6 1344     		add	r3, r3, r2
 20392 04c8 0B44     		add	r3, r3, r1
 20393 04ca 03F20323 		addw	r3, r3, #515
 20394 04ce 0122     		movs	r2, #1
 20395 04d0 1A70     		strb	r2, [r3]
3012:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][2] = 0;   // Magnetometers
 20396              		.loc 1 3012 0 discriminator 3
 20397 04d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20398 04d4 4B49     		ldr	r1, .L837
 20399 04d6 1346     		mov	r3, r2
 20400 04d8 9B00     		lsls	r3, r3, #2
 20401 04da 1344     		add	r3, r3, r2
 20402 04dc 0B44     		add	r3, r3, r1
 20403 04de 03F50173 		add	r3, r3, #516
 20404 04e2 0022     		movs	r2, #0
 20405 04e4 1A70     		strb	r2, [r3]
3013:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][3] = 0;   // Quaternions
 20406              		.loc 1 3013 0 discriminator 3
 20407 04e6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 453


 20408 04e8 4649     		ldr	r1, .L837
 20409 04ea 1346     		mov	r3, r2
 20410 04ec 9B00     		lsls	r3, r3, #2
 20411 04ee 1344     		add	r3, r3, r2
 20412 04f0 0B44     		add	r3, r3, r1
 20413 04f2 03F20523 		addw	r3, r3, #517
 20414 04f6 0022     		movs	r2, #0
 20415 04f8 1A70     		strb	r2, [r3]
3014:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][4] = 0;   // Temperatures
 20416              		.loc 1 3014 0 discriminator 3
 20417 04fa FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 20418 04fc 4149     		ldr	r1, .L837
 20419 04fe 1346     		mov	r3, r2
 20420 0500 9B00     		lsls	r3, r3, #2
 20421 0502 1344     		add	r3, r3, r2
 20422 0504 0B44     		add	r3, r3, r1
 20423 0506 03F20623 		addw	r3, r3, #518
 20424 050a 0022     		movs	r2, #0
 20425 050c 1A70     		strb	r2, [r3]
3009:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 20426              		.loc 1 3009 0 discriminator 3
 20427 050e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20428 0510 0133     		adds	r3, r3, #1
 20429 0512 FB71     		strb	r3, [r7, #7]
 20430              	.L827:
3009:..\src/command_processing.c ****         g_mem.imu.IMU_conf[i][0] = 1;   // Accelerometers
 20431              		.loc 1 3009 0 is_stmt 0 discriminator 1
 20432 0514 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20433 0516 042B     		cmp	r3, #4
 20434 0518 C7D9     		bls	.L828
3015:..\src/command_processing.c ****     }
3016:..\src/command_processing.c ****      
3017:..\src/command_processing.c ****     // EXP STRUCT
3018:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20435              		.loc 1 3018 0 is_stmt 1
 20436 051a 3A4B     		ldr	r3, .L837
 20437 051c 0022     		movs	r2, #0
 20438 051e 83F82622 		strb	r2, [r3, #550]
3019:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "GEN001");
 20439              		.loc 1 3019 0
 20440 0522 384B     		ldr	r3, .L837
 20441 0524 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20442 0528 1233     		adds	r3, r3, #18
 20443 052a 5B01     		lsls	r3, r3, #5
 20444 052c 354A     		ldr	r2, .L837
 20445 052e 1344     		add	r3, r3, r2
 20446 0530 354A     		ldr	r2, .L837+4
 20447 0532 1068     		ldr	r0, [r2]	@ unaligned
 20448 0534 1860     		str	r0, [r3]	@ unaligned
 20449 0536 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20450 0538 9279     		ldrb	r2, [r2, #6]
 20451 053a 9980     		strh	r1, [r3, #4]	@ unaligned
 20452 053c 9A71     		strb	r2, [r3, #6]
3020:..\src/command_processing.c ****     if (g_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 20453              		.loc 1 3020 0
 20454 053e 314B     		ldr	r3, .L837
 20455 0540 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 454


 20456 0544 012B     		cmp	r3, #1
 20457 0546 13D1     		bne	.L829
3021:..\src/command_processing.c ****         // Set date of maintenance from RTC
3022:..\src/command_processing.c ****         store_RTC_current_time();
 20458              		.loc 1 3022 0
 20459 0548 FFF7FEFF 		bl	store_RTC_current_time
3023:..\src/command_processing.c ****         
3024:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[0] = g_mem.exp.curr_time[0];
 20460              		.loc 1 3024 0
 20461 054c 2D4B     		ldr	r3, .L837
 20462 054e 93F82022 		ldrb	r2, [r3, #544]	@ zero_extendqisi2
 20463 0552 2C4B     		ldr	r3, .L837
 20464 0554 83F8A420 		strb	r2, [r3, #164]
3025:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[1] = g_mem.exp.curr_time[1];
 20465              		.loc 1 3025 0
 20466 0558 2A4B     		ldr	r3, .L837
 20467 055a 93F82122 		ldrb	r2, [r3, #545]	@ zero_extendqisi2
 20468 055e 294B     		ldr	r3, .L837
 20469 0560 83F8A520 		strb	r2, [r3, #165]
3026:..\src/command_processing.c ****         g_mem.dev.stats_period_begin_date[2] = g_mem.exp.curr_time[2];
 20470              		.loc 1 3026 0
 20471 0564 274B     		ldr	r3, .L837
 20472 0566 93F82222 		ldrb	r2, [r3, #546]	@ zero_extendqisi2
 20473 056a 264B     		ldr	r3, .L837
 20474 056c 83F8A620 		strb	r2, [r3, #166]
 20475              	.L829:
3027:..\src/command_processing.c ****     }
3028:..\src/command_processing.c ****     g_mem.exp.read_ADC_sensors_port_flag = FALSE;
 20476              		.loc 1 3028 0
 20477 0570 244B     		ldr	r3, .L837
 20478 0572 0022     		movs	r2, #0
 20479 0574 83F82722 		strb	r2, [r3, #551]
3029:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20480              		.loc 1 3029 0
 20481 0578 0023     		movs	r3, #0
 20482 057a FB71     		strb	r3, [r7, #7]
 20483 057c 08E0     		b	.L830
 20484              	.L831:
3030:..\src/command_processing.c ****         g_mem.exp.ADC_conf[i] = 0;
 20485              		.loc 1 3030 0 discriminator 3
 20486 057e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20487 0580 204A     		ldr	r2, .L837
 20488 0582 1344     		add	r3, r3, r2
 20489 0584 0022     		movs	r2, #0
 20490 0586 83F82822 		strb	r2, [r3, #552]
3029:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20491              		.loc 1 3029 0 discriminator 3
 20492 058a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20493 058c 0133     		adds	r3, r3, #1
 20494 058e FB71     		strb	r3, [r7, #7]
 20495              	.L830:
3029:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 20496              		.loc 1 3029 0 is_stmt 0 discriminator 1
 20497 0590 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 20498 0592 0B2B     		cmp	r3, #11
 20499 0594 F3D9     		bls	.L831
3031:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 455


3032:..\src/command_processing.c ****     //Activate only the two EMG channels by default for every firmware configuration
3033:..\src/command_processing.c ****     g_mem.exp.ADC_conf[2] = 1;
 20500              		.loc 1 3033 0 is_stmt 1
 20501 0596 1B4B     		ldr	r3, .L837
 20502 0598 0122     		movs	r2, #1
 20503 059a 83F82A22 		strb	r2, [r3, #554]
3034:..\src/command_processing.c ****     g_mem.exp.ADC_conf[3] = 1;
 20504              		.loc 1 3034 0
 20505 059e 194B     		ldr	r3, .L837
 20506 05a0 0122     		movs	r2, #1
 20507 05a2 83F82B22 		strb	r2, [r3, #555]
3035:..\src/command_processing.c **** 
3036:..\src/command_processing.c **** #ifdef SOFTHAND_FW
3037:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
3038:..\src/command_processing.c ****     memInit_SoftHandPro();
 20508              		.loc 1 3038 0
 20509 05a6 FFF7FEFF 		bl	memInit_SoftHandPro
3039:..\src/command_processing.c **** #endif 
3040:..\src/command_processing.c **** 
3041:..\src/command_processing.c **** #ifdef MASTER_FW
3042:..\src/command_processing.c ****     // Override memory values with specific ones for Master device
3043:..\src/command_processing.c ****     memInit_Master();
3044:..\src/command_processing.c **** #endif 
3045:..\src/command_processing.c **** 
3046:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3047:..\src/command_processing.c ****     // Override memory values with specific ones for Air Chambers device
3048:..\src/command_processing.c ****     memInit_AirChambersFb();
3049:..\src/command_processing.c **** #endif 
3050:..\src/command_processing.c **** 
3051:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3052:..\src/command_processing.c ****     // Override memory values with specific ones for Ottobock Wrist device
3053:..\src/command_processing.c ****     memInit_OtbkActWristMs();
3054:..\src/command_processing.c **** #endif
3055:..\src/command_processing.c **** 
3056:..\src/command_processing.c ****     // JOYSTICK STRUCT
3057:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_closure_speed = 150;
 20510              		.loc 1 3057 0
 20511 05aa 164B     		ldr	r3, .L837
 20512 05ac 9622     		movs	r2, #150
 20513 05ae A3F8E222 		strh	r2, [r3, #738]	@ movhi
3058:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_threshold = 100;
 20514              		.loc 1 3058 0
 20515 05b2 144B     		ldr	r3, .L837
 20516 05b4 6422     		movs	r2, #100
 20517 05b6 A3F8E422 		strh	r2, [r3, #740]	@ movhi
3059:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[0] = 1024;
 20518              		.loc 1 3059 0
 20519 05ba 124B     		ldr	r3, .L837
 20520 05bc 4FF48062 		mov	r2, #1024
 20521 05c0 A3F8E622 		strh	r2, [r3, #742]	@ movhi
3060:..\src/command_processing.c ****     g_mem.JOY_spec.joystick_gains[1] = 1024;
 20522              		.loc 1 3060 0
 20523 05c4 0F4B     		ldr	r3, .L837
 20524 05c6 4FF48062 		mov	r2, #1024
 20525 05ca A3F8E822 		strh	r2, [r3, #744]	@ movhi
3061:..\src/command_processing.c **** 
3062:..\src/command_processing.c ****     // Default generic user_id
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 456


3063:..\src/command_processing.c ****     g_mem.dev.user_id = GENERIC_USER;    
 20526              		.loc 1 3063 0
 20527 05ce 0D4B     		ldr	r3, .L837
 20528 05d0 0022     		movs	r2, #0
 20529 05d2 83F8AB20 		strb	r2, [r3, #171]
3064:..\src/command_processing.c **** 
3065:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
3066:..\src/command_processing.c ****     g_mem.flag = TRUE;
 20530              		.loc 1 3066 0
 20531 05d6 0B4B     		ldr	r3, .L837
 20532 05d8 0122     		movs	r2, #1
 20533 05da 1A70     		strb	r2, [r3]
3067:..\src/command_processing.c ****     
3068:..\src/command_processing.c ****     //write that configuration to EEPROM
3069:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 20534              		.loc 1 3069 0
 20535 05dc 0020     		movs	r0, #0
 20536 05de FFF7FEFF 		bl	memStore
 20537 05e2 0346     		mov	r3, r0
 20538 05e4 002B     		cmp	r3, #0
 20539 05e6 07D0     		beq	.L832
 20540              		.loc 1 3069 0 is_stmt 0 discriminator 1
 20541 05e8 3220     		movs	r0, #50
 20542 05ea FFF7FEFF 		bl	memStore
 20543 05ee 0346     		mov	r3, r0
 20544 05f0 002B     		cmp	r3, #0
 20545 05f2 01D0     		beq	.L832
 20546              		.loc 1 3069 0 discriminator 3
 20547 05f4 0123     		movs	r3, #1
 20548 05f6 00E0     		b	.L833
 20549              	.L832:
 20550              		.loc 1 3069 0 discriminator 4
 20551 05f8 0023     		movs	r3, #0
 20552              	.L833:
 20553              		.loc 1 3069 0 discriminator 6
 20554 05fa DBB2     		uxtb	r3, r3
3070:..\src/command_processing.c **** }
 20555              		.loc 1 3070 0 is_stmt 1 discriminator 6
 20556 05fc 1846     		mov	r0, r3
 20557 05fe 0837     		adds	r7, r7, #8
 20558              		.cfi_def_cfa_offset 8
 20559 0600 BD46     		mov	sp, r7
 20560              		.cfi_def_cfa_register 13
 20561              		@ sp needed
 20562 0602 80BD     		pop	{r7, pc}
 20563              	.L838:
 20564              		.align	2
 20565              	.L837:
 20566 0604 00000000 		.word	g_mem
 20567 0608 381C0000 		.word	.LC273
 20568              		.cfi_endproc
 20569              	.LFE86:
 20570              		.size	memInit, .-memInit
 20571              		.section	.rodata
 20572 1c3f 00       		.align	2
 20573              	.LC274:
 20574 1c40 55535230 		.ascii	"USR001\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 457


 20574      303100
 20575              		.section	.text.memInit_SoftHandPro,"ax",%progbits
 20576              		.align	2
 20577              		.global	memInit_SoftHandPro
 20578              		.thumb
 20579              		.thumb_func
 20580              		.type	memInit_SoftHandPro, %function
 20581              	memInit_SoftHandPro:
 20582              	.LFB87:
3071:..\src/command_processing.c **** 
3072:..\src/command_processing.c **** //==============================================================================
3073:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
3074:..\src/command_processing.c **** //==============================================================================
3075:..\src/command_processing.c **** void memInit_SoftHandPro(void)
3076:..\src/command_processing.c **** {
 20583              		.loc 1 3076 0
 20584              		.cfi_startproc
 20585              		@ args = 0, pretend = 0, frame = 8
 20586              		@ frame_needed = 1, uses_anonymous_args = 0
 20587              		@ link register save eliminated.
 20588 0000 80B4     		push	{r7}
 20589              		.cfi_def_cfa_offset 4
 20590              		.cfi_offset 7, -4
 20591 0002 83B0     		sub	sp, sp, #12
 20592              		.cfi_def_cfa_offset 16
 20593 0004 00AF     		add	r7, sp, #0
 20594              		.cfi_def_cfa_register 7
3077:..\src/command_processing.c ****     uint8 MOTOR_IDX = 0;
 20595              		.loc 1 3077 0
 20596 0006 0023     		movs	r3, #0
 20597 0008 FB70     		strb	r3, [r7, #3]
3078:..\src/command_processing.c ****     
3079:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
3080:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 20598              		.loc 1 3080 0
 20599 000a 894B     		ldr	r3, .L842
 20600 000c 0122     		movs	r2, #1
 20601 000e 83F8A720 		strb	r2, [r3, #167]
3081:..\src/command_processing.c ****     g_mem.dev.dev_type = SOFTHAND_PRO;
 20602              		.loc 1 3081 0
 20603 0012 874B     		ldr	r3, .L842
 20604 0014 0022     		movs	r2, #0
 20605 0016 83F8AC20 		strb	r2, [r3, #172]
3082:..\src/command_processing.c ****     
3083:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].activ         = 1;
 20606              		.loc 1 3083 0
 20607 001a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20608 001c 8449     		ldr	r1, .L842
 20609 001e 1346     		mov	r3, r2
 20610 0020 DB00     		lsls	r3, r3, #3
 20611 0022 9B1A     		subs	r3, r3, r2
 20612 0024 1B01     		lsls	r3, r3, #4
 20613 0026 0B44     		add	r3, r3, r1
 20614 0028 E033     		adds	r3, r3, #224
 20615 002a 0122     		movs	r2, #1
 20616 002c 1A70     		strb	r2, [r3]
3084:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].input_mode    = INPUT_MODE_EXTERNAL;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 458


 20617              		.loc 1 3084 0
 20618 002e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20619 0030 7F49     		ldr	r1, .L842
 20620 0032 1346     		mov	r3, r2
 20621 0034 DB00     		lsls	r3, r3, #3
 20622 0036 9B1A     		subs	r3, r3, r2
 20623 0038 1B01     		lsls	r3, r3, #4
 20624 003a 0B44     		add	r3, r3, r1
 20625 003c 03F58773 		add	r3, r3, #270
 20626 0040 0022     		movs	r2, #0
 20627 0042 1A70     		strb	r2, [r3]
3085:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].control_mode  = CONTROL_ANGLE;
 20628              		.loc 1 3085 0
 20629 0044 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20630 0046 7A49     		ldr	r1, .L842
 20631 0048 1346     		mov	r3, r2
 20632 004a DB00     		lsls	r3, r3, #3
 20633 004c 9B1A     		subs	r3, r3, r2
 20634 004e 1B01     		lsls	r3, r3, #4
 20635 0050 0B44     		add	r3, r3, r1
 20636 0052 03F20F13 		addw	r3, r3, #271
 20637 0056 0022     		movs	r2, #0
 20638 0058 1A70     		strb	r2, [r3]
3086:..\src/command_processing.c ****     
3087:..\src/command_processing.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND as default
3088:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].encoder_line  = g_mem.dev.right_left;
 20639              		.loc 1 3088 0
 20640 005a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20641 005c 744B     		ldr	r3, .L842
 20642 005e 93F8A700 		ldrb	r0, [r3, #167]	@ zero_extendqisi2
 20643 0062 7349     		ldr	r1, .L842
 20644 0064 1346     		mov	r3, r2
 20645 0066 DB00     		lsls	r3, r3, #3
 20646 0068 9B1A     		subs	r3, r3, r2
 20647 006a 1B01     		lsls	r3, r3, #4
 20648 006c 0B44     		add	r3, r3, r1
 20649 006e 03F58873 		add	r3, r3, #272
 20650 0072 0246     		mov	r2, r0
 20651 0074 1A70     		strb	r2, [r3]
3089:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 20652              		.loc 1 3089 0
 20653 0076 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20654 0078 6D49     		ldr	r1, .L842
 20655 007a 1346     		mov	r3, r2
 20656 007c DB00     		lsls	r3, r3, #3
 20657 007e 9B1A     		subs	r3, r3, r2
 20658 0080 1B01     		lsls	r3, r3, #4
 20659 0082 0B44     		add	r3, r3, r1
 20660 0084 03F21113 		addw	r3, r3, #273
 20661 0088 0122     		movs	r2, #1
 20662 008a 1A70     		strb	r2, [r3]
3090:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].not_revers_motor_flag = TRUE;       // SoftHand not reversible motor
 20663              		.loc 1 3090 0
 20664 008c FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20665 008e 6849     		ldr	r1, .L842
 20666 0090 1346     		mov	r3, r2
 20667 0092 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 459


 20668 0094 9B1A     		subs	r3, r3, r2
 20669 0096 1B01     		lsls	r3, r3, #4
 20670 0098 0B44     		add	r3, r3, r1
 20671 009a 03F58973 		add	r3, r3, #274
 20672 009e 0122     		movs	r2, #1
 20673 00a0 1A70     		strb	r2, [r3]
3091:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_inf = 0;
 20674              		.loc 1 3091 0
 20675 00a2 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20676 00a4 6249     		ldr	r1, .L842
 20677 00a6 1346     		mov	r3, r2
 20678 00a8 DB00     		lsls	r3, r3, #3
 20679 00aa 9B1A     		subs	r3, r3, r2
 20680 00ac 1B01     		lsls	r3, r3, #4
 20681 00ae 0B44     		add	r3, r3, r1
 20682 00b0 E433     		adds	r3, r3, #228
 20683 00b2 0022     		movs	r2, #0
 20684 00b4 1A60     		str	r2, [r3]
3092:..\src/command_processing.c ****     g_mem.motor[MOTOR_IDX].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_l
 20685              		.loc 1 3092 0
 20686 00b6 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 20687 00b8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 20688 00ba 5D48     		ldr	r0, .L842
 20689 00bc 0B46     		mov	r3, r1
 20690 00be DB00     		lsls	r3, r3, #3
 20691 00c0 5B1A     		subs	r3, r3, r1
 20692 00c2 1B01     		lsls	r3, r3, #4
 20693 00c4 0344     		add	r3, r3, r0
 20694 00c6 03F58873 		add	r3, r3, #272
 20695 00ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20696 00cc 1846     		mov	r0, r3
 20697 00ce 5849     		ldr	r1, .L842
 20698 00d0 0346     		mov	r3, r0
 20699 00d2 5B00     		lsls	r3, r3, #1
 20700 00d4 0344     		add	r3, r3, r0
 20701 00d6 1B01     		lsls	r3, r3, #4
 20702 00d8 0B44     		add	r3, r3, r1
 20703 00da 03F29513 		addw	r3, r3, #405
 20704 00de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20705 00e0 1946     		mov	r1, r3
 20706 00e2 4FF47A53 		mov	r3, #16000
 20707 00e6 03FA01F1 		lsl	r1, r3, r1
 20708 00ea 5148     		ldr	r0, .L842
 20709 00ec 1346     		mov	r3, r2
 20710 00ee DB00     		lsls	r3, r3, #3
 20711 00f0 9B1A     		subs	r3, r3, r2
 20712 00f2 1B01     		lsls	r3, r3, #4
 20713 00f4 0344     		add	r3, r3, r0
 20714 00f6 E833     		adds	r3, r3, #232
 20715 00f8 1960     		str	r1, [r3]
 20716              	.LBB21:
3093:..\src/command_processing.c ****     
3094:..\src/command_processing.c ****     for (int i=0; i < N_ENCODER_LINE_MAX; i++) {
 20717              		.loc 1 3094 0
 20718 00fa 0023     		movs	r3, #0
 20719 00fc 7B60     		str	r3, [r7, #4]
 20720 00fe 2EE0     		b	.L840
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 460


 20721              	.L841:
3095:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
3096:..\src/command_processing.c ****         g_mem.enc[i].double_encoder_on_off = TRUE;
 20722              		.loc 1 3096 0 discriminator 3
 20723 0100 4B49     		ldr	r1, .L842
 20724 0102 7A68     		ldr	r2, [r7, #4]
 20725 0104 1346     		mov	r3, r2
 20726 0106 5B00     		lsls	r3, r3, #1
 20727 0108 1344     		add	r3, r3, r2
 20728 010a 1B01     		lsls	r3, r3, #4
 20729 010c 0B44     		add	r3, r3, r1
 20730 010e 03F5D873 		add	r3, r3, #432
 20731 0112 0122     		movs	r2, #1
 20732 0114 1A70     		strb	r2, [r3]
3097:..\src/command_processing.c ****         g_mem.enc[i].gears_params[0] = SH_N1;     
 20733              		.loc 1 3097 0 discriminator 3
 20734 0116 4649     		ldr	r1, .L842
 20735 0118 7A68     		ldr	r2, [r7, #4]
 20736 011a 1346     		mov	r3, r2
 20737 011c 5B00     		lsls	r3, r3, #1
 20738 011e 1344     		add	r3, r3, r2
 20739 0120 1B01     		lsls	r3, r3, #4
 20740 0122 0B44     		add	r3, r3, r1
 20741 0124 03F2B513 		addw	r3, r3, #437
 20742 0128 2322     		movs	r2, #35
 20743 012a 1A70     		strb	r2, [r3]
3098:..\src/command_processing.c ****         g_mem.enc[i].gears_params[1] = SH_N2;     
 20744              		.loc 1 3098 0 discriminator 3
 20745 012c 4049     		ldr	r1, .L842
 20746 012e 7A68     		ldr	r2, [r7, #4]
 20747 0130 1346     		mov	r3, r2
 20748 0132 5B00     		lsls	r3, r3, #1
 20749 0134 1344     		add	r3, r3, r2
 20750 0136 1B01     		lsls	r3, r3, #4
 20751 0138 0B44     		add	r3, r3, r1
 20752 013a 03F5DB73 		add	r3, r3, #438
 20753 013e 0322     		movs	r2, #3
 20754 0140 1A70     		strb	r2, [r3]
3099:..\src/command_processing.c ****         g_mem.enc[i].gears_params[2] = SH_I1;  
 20755              		.loc 1 3099 0 discriminator 3
 20756 0142 3B49     		ldr	r1, .L842
 20757 0144 7A68     		ldr	r2, [r7, #4]
 20758 0146 1346     		mov	r3, r2
 20759 0148 5B00     		lsls	r3, r3, #1
 20760 014a 1344     		add	r3, r3, r2
 20761 014c 1B01     		lsls	r3, r3, #4
 20762 014e 0B44     		add	r3, r3, r1
 20763 0150 03F2B713 		addw	r3, r3, #439
 20764 0154 FF22     		movs	r2, #255
 20765 0156 1A70     		strb	r2, [r3]
3094:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
 20766              		.loc 1 3094 0 discriminator 3
 20767 0158 7B68     		ldr	r3, [r7, #4]
 20768 015a 0133     		adds	r3, r3, #1
 20769 015c 7B60     		str	r3, [r7, #4]
 20770              	.L840:
3094:..\src/command_processing.c ****         // Initialize parameters for each encoder line (either for RIGHT and for LEFT hand)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 461


 20771              		.loc 1 3094 0 is_stmt 0 discriminator 1
 20772 015e 7B68     		ldr	r3, [r7, #4]
 20773 0160 012B     		cmp	r3, #1
 20774 0162 CDDD     		ble	.L841
 20775              	.LBE21:
3100:..\src/command_processing.c ****     }
3101:..\src/command_processing.c ****     
3102:..\src/command_processing.c ****     g_mem.emg.emg_max_value[0] = 1024;
 20776              		.loc 1 3102 0 is_stmt 1
 20777 0164 324B     		ldr	r3, .L842
 20778 0166 4FF48062 		mov	r2, #1024
 20779 016a C3F8F421 		str	r2, [r3, #500]
3103:..\src/command_processing.c ****     g_mem.emg.emg_max_value[1] = 1024;
 20780              		.loc 1 3103 0
 20781 016e 304B     		ldr	r3, .L842
 20782 0170 4FF48062 		mov	r2, #1024
 20783 0174 C3F8F821 		str	r2, [r3, #504]
3104:..\src/command_processing.c ****     g_mem.emg.emg_threshold[0] = 200;
 20784              		.loc 1 3104 0
 20785 0178 2D4B     		ldr	r3, .L842
 20786 017a C822     		movs	r2, #200
 20787 017c A3F8F021 		strh	r2, [r3, #496]	@ movhi
3105:..\src/command_processing.c ****     g_mem.emg.emg_threshold[1] = 200;
 20788              		.loc 1 3105 0
 20789 0180 2B4B     		ldr	r3, .L842
 20790 0182 C822     		movs	r2, #200
 20791 0184 A3F8F221 		strh	r2, [r3, #498]	@ movhi
3106:..\src/command_processing.c ****     g_mem.emg.emg_speed[0] = 100;
 20792              		.loc 1 3106 0
 20793 0188 294B     		ldr	r3, .L842
 20794 018a 6422     		movs	r2, #100
 20795 018c 83F8FC21 		strb	r2, [r3, #508]
3107:..\src/command_processing.c ****     g_mem.emg.emg_speed[1] = 100;
 20796              		.loc 1 3107 0
 20797 0190 274B     		ldr	r3, .L842
 20798 0192 6422     		movs	r2, #100
 20799 0194 83F8FD21 		strb	r2, [r3, #509]
3108:..\src/command_processing.c ****     g_mem.emg.emg_calibration_flag = 0;      // EMG calibration disabled by default
 20800              		.loc 1 3108 0
 20801 0198 254B     		ldr	r3, .L842
 20802 019a 0022     		movs	r2, #0
 20803 019c 83F8FE21 		strb	r2, [r3, #510]
3109:..\src/command_processing.c ****     g_mem.emg.switch_emg = 0;
 20804              		.loc 1 3109 0
 20805 01a0 234B     		ldr	r3, .L842
 20806 01a2 0022     		movs	r2, #0
 20807 01a4 83F8FF21 		strb	r2, [r3, #511]
3110:..\src/command_processing.c ****     
3111:..\src/command_processing.c ****     //Initialize rest position parameters  
3112:..\src/command_processing.c ****     g_mem.SH.rest_position_flag = FALSE;
 20808              		.loc 1 3112 0
 20809 01a8 214B     		ldr	r3, .L842
 20810 01aa 0022     		movs	r2, #0
 20811 01ac 83F8AC22 		strb	r2, [r3, #684]
3113:..\src/command_processing.c ****     g_mem.SH.rest_pos = (int32)7000 << g_mem.enc[g_mem.motor[MOTOR_IDX].encoder_line].res[0]; // 56
 20812              		.loc 1 3113 0
 20813 01b0 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 462


 20814 01b2 1F49     		ldr	r1, .L842
 20815 01b4 1346     		mov	r3, r2
 20816 01b6 DB00     		lsls	r3, r3, #3
 20817 01b8 9B1A     		subs	r3, r3, r2
 20818 01ba 1B01     		lsls	r3, r3, #4
 20819 01bc 0B44     		add	r3, r3, r1
 20820 01be 03F58873 		add	r3, r3, #272
 20821 01c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20822 01c4 1946     		mov	r1, r3
 20823 01c6 1A4A     		ldr	r2, .L842
 20824 01c8 0B46     		mov	r3, r1
 20825 01ca 5B00     		lsls	r3, r3, #1
 20826 01cc 0B44     		add	r3, r3, r1
 20827 01ce 1B01     		lsls	r3, r3, #4
 20828 01d0 1344     		add	r3, r3, r2
 20829 01d2 03F29513 		addw	r3, r3, #405
 20830 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20831 01d8 1A46     		mov	r2, r3
 20832 01da 41F65833 		movw	r3, #7000
 20833 01de 9340     		lsls	r3, r3, r2
 20834 01e0 134A     		ldr	r2, .L842
 20835 01e2 C2F8A032 		str	r3, [r2, #672]
3114:..\src/command_processing.c **** 	g_mem.SH.rest_delay = 10;
 20836              		.loc 1 3114 0
 20837 01e6 124B     		ldr	r3, .L842
 20838 01e8 0A22     		movs	r2, #10
 20839 01ea C3F8A422 		str	r2, [r3, #676]
3115:..\src/command_processing.c ****     g_mem.SH.rest_vel = 10000;
 20840              		.loc 1 3115 0
 20841 01ee 104B     		ldr	r3, .L842
 20842 01f0 42F21072 		movw	r2, #10000
 20843 01f4 C3F8A822 		str	r2, [r3, #680]
3116:..\src/command_processing.c **** 	
3117:..\src/command_processing.c ****     g_mem.imu.read_imu_flag = FALSE;
 20844              		.loc 1 3117 0
 20845 01f8 0D4B     		ldr	r3, .L842
 20846 01fa 0022     		movs	r2, #0
 20847 01fc 83F80022 		strb	r2, [r3, #512]
3118:..\src/command_processing.c ****     g_mem.exp.read_exp_port_flag = EXP_NONE;       // 0 - None
 20848              		.loc 1 3118 0
 20849 0200 0B4B     		ldr	r3, .L842
 20850 0202 0022     		movs	r2, #0
 20851 0204 83F82622 		strb	r2, [r3, #550]
3119:..\src/command_processing.c ****     strcpy(g_mem.user[g_mem.dev.user_id].user_code_string, "USR001");
 20852              		.loc 1 3119 0
 20853 0208 094B     		ldr	r3, .L842
 20854 020a 93F8AB30 		ldrb	r3, [r3, #171]	@ zero_extendqisi2
 20855 020e 1233     		adds	r3, r3, #18
 20856 0210 5B01     		lsls	r3, r3, #5
 20857 0212 074A     		ldr	r2, .L842
 20858 0214 1344     		add	r3, r3, r2
 20859 0216 074A     		ldr	r2, .L842+4
 20860 0218 1068     		ldr	r0, [r2]	@ unaligned
 20861 021a 1860     		str	r0, [r3]	@ unaligned
 20862 021c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 20863 021e 9279     		ldrb	r2, [r2, #6]
 20864 0220 9980     		strh	r1, [r3, #4]	@ unaligned
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 463


 20865 0222 9A71     		strb	r2, [r3, #6]
3120:..\src/command_processing.c **** }
 20866              		.loc 1 3120 0
 20867 0224 00BF     		nop
 20868 0226 0C37     		adds	r7, r7, #12
 20869              		.cfi_def_cfa_offset 4
 20870 0228 BD46     		mov	sp, r7
 20871              		.cfi_def_cfa_register 13
 20872              		@ sp needed
 20873 022a 80BC     		pop	{r7}
 20874              		.cfi_restore 7
 20875              		.cfi_def_cfa_offset 0
 20876 022c 7047     		bx	lr
 20877              	.L843:
 20878 022e 00BF     		.align	2
 20879              	.L842:
 20880 0230 00000000 		.word	g_mem
 20881 0234 401C0000 		.word	.LC274
 20882              		.cfi_endproc
 20883              	.LFE87:
 20884              		.size	memInit_SoftHandPro, .-memInit_SoftHandPro
 20885              		.section	.text.memInit_Master,"ax",%progbits
 20886              		.align	2
 20887              		.global	memInit_Master
 20888              		.thumb
 20889              		.thumb_func
 20890              		.type	memInit_Master, %function
 20891              	memInit_Master:
 20892              	.LFB88:
3121:..\src/command_processing.c **** 
3122:..\src/command_processing.c **** //==============================================================================
3123:..\src/command_processing.c **** //                                                            MEMORY INIT MASTER
3124:..\src/command_processing.c **** //==============================================================================
3125:..\src/command_processing.c **** void memInit_Master(void)
3126:..\src/command_processing.c **** {
 20893              		.loc 1 3126 0
 20894              		.cfi_startproc
 20895              		@ args = 0, pretend = 0, frame = 0
 20896              		@ frame_needed = 1, uses_anonymous_args = 0
 20897              		@ link register save eliminated.
 20898 0000 80B4     		push	{r7}
 20899              		.cfi_def_cfa_offset 4
 20900              		.cfi_offset 7, -4
 20901 0002 00AF     		add	r7, sp, #0
 20902              		.cfi_def_cfa_register 7
3127:..\src/command_processing.c ****     g_mem.dev.id                = 2;
 20903              		.loc 1 3127 0
 20904 0004 074B     		ldr	r3, .L845
 20905 0006 0222     		movs	r2, #2
 20906 0008 83F8A020 		strb	r2, [r3, #160]
3128:..\src/command_processing.c ****     
3129:..\src/command_processing.c ****     // MS STRUCT
3130:..\src/command_processing.c ****     g_mem.MS.slave_ID = 1;
 20907              		.loc 1 3130 0
 20908 000c 054B     		ldr	r3, .L845
 20909 000e 0122     		movs	r2, #1
 20910 0010 83F8B122 		strb	r2, [r3, #689]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 464


3131:..\src/command_processing.c ****     g_mem.MS.slave_comm_active = FALSE;
 20911              		.loc 1 3131 0
 20912 0014 034B     		ldr	r3, .L845
 20913 0016 0022     		movs	r2, #0
 20914 0018 83F8B022 		strb	r2, [r3, #688]
3132:..\src/command_processing.c **** }
 20915              		.loc 1 3132 0
 20916 001c 00BF     		nop
 20917 001e BD46     		mov	sp, r7
 20918              		.cfi_def_cfa_register 13
 20919              		@ sp needed
 20920 0020 80BC     		pop	{r7}
 20921              		.cfi_restore 7
 20922              		.cfi_def_cfa_offset 0
 20923 0022 7047     		bx	lr
 20924              	.L846:
 20925              		.align	2
 20926              	.L845:
 20927 0024 00000000 		.word	g_mem
 20928              		.cfi_endproc
 20929              	.LFE88:
 20930              		.size	memInit_Master, .-memInit_Master
 20931              		.section	.text.memInit_AirChambersFb,"ax",%progbits
 20932              		.align	2
 20933              		.global	memInit_AirChambersFb
 20934              		.thumb
 20935              		.thumb_func
 20936              		.type	memInit_AirChambersFb, %function
 20937              	memInit_AirChambersFb:
 20938              	.LFB89:
3133:..\src/command_processing.c **** 
3134:..\src/command_processing.c **** //==============================================================================
3135:..\src/command_processing.c **** //                                                   MEMORY INIT AIR CHAMBERS FB
3136:..\src/command_processing.c **** //==============================================================================
3137:..\src/command_processing.c **** void memInit_AirChambersFb(void)
3138:..\src/command_processing.c **** {
 20939              		.loc 1 3138 0
 20940              		.cfi_startproc
 20941              		@ args = 0, pretend = 0, frame = 0
 20942              		@ frame_needed = 1, uses_anonymous_args = 0
 20943              		@ link register save eliminated.
 20944 0000 80B4     		push	{r7}
 20945              		.cfi_def_cfa_offset 4
 20946              		.cfi_offset 7, -4
 20947 0002 00AF     		add	r7, sp, #0
 20948              		.cfi_def_cfa_register 7
3139:..\src/command_processing.c ****     // Default configuration with Air Chambers Haptic feedback
3140:..\src/command_processing.c ****     g_mem.dev.dev_type          = AIR_CHAMBERS_FB;
 20949              		.loc 1 3140 0
 20950 0004 1A4B     		ldr	r3, .L848
 20951 0006 0222     		movs	r2, #2
 20952 0008 83F8AC20 		strb	r2, [r3, #172]
3141:..\src/command_processing.c ****     
3142:..\src/command_processing.c ****     g_mem.motor[0].control_mode  = CONTROL_PWM;
 20953              		.loc 1 3142 0
 20954 000c 184B     		ldr	r3, .L848
 20955 000e 0122     		movs	r2, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 465


 20956 0010 83F80F21 		strb	r2, [r3, #271]
3143:..\src/command_processing.c ****     
3144:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3145:..\src/command_processing.c ****     // Default slave configuration for haptic feedback with SoftHand 2.0.3            
3146:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 20957              		.loc 1 3146 0
 20958 0014 164B     		ldr	r3, .L848
 20959 0016 0422     		movs	r2, #4
 20960 0018 83F87E21 		strb	r2, [r3, #382]
3147:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 20961              		.loc 1 3147 0
 20962 001c 144B     		ldr	r3, .L848
 20963 001e 0022     		movs	r2, #0
 20964 0020 C3F85421 		str	r2, [r3, #340]
3148:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)22000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 20965              		.loc 1 3148 0
 20966 0024 124B     		ldr	r3, .L848
 20967 0026 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 20968 002a 1946     		mov	r1, r3
 20969 002c 104A     		ldr	r2, .L848
 20970 002e 0B46     		mov	r3, r1
 20971 0030 5B00     		lsls	r3, r3, #1
 20972 0032 0B44     		add	r3, r3, r1
 20973 0034 1B01     		lsls	r3, r3, #4
 20974 0036 1344     		add	r3, r3, r2
 20975 0038 03F29513 		addw	r3, r3, #405
 20976 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 20977 003e 1A46     		mov	r2, r3
 20978 0040 45F2F053 		movw	r3, #22000
 20979 0044 9340     		lsls	r3, r3, r2
 20980 0046 0A4A     		ldr	r2, .L848
 20981 0048 C2F85831 		str	r3, [r2, #344]
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     // FB STRUCT
3151:..\src/command_processing.c ****     g_mem.FB.max_residual_current = 450;
 20982              		.loc 1 3151 0
 20983 004c 084B     		ldr	r3, .L848
 20984 004e 4FF4E172 		mov	r2, #450
 20985 0052 C3F8C022 		str	r2, [r3, #704]
3152:..\src/command_processing.c ****     g_mem.FB.maximum_pressure_kPa = 25.0;
 20986              		.loc 1 3152 0
 20987 0056 064B     		ldr	r3, .L848
 20988 0058 064A     		ldr	r2, .L848+4
 20989 005a C3F8C422 		str	r2, [r3, #708]	@ float
3153:..\src/command_processing.c ****     g_mem.FB.prop_err_fb_gain = 1.0;
 20990              		.loc 1 3153 0
 20991 005e 044B     		ldr	r3, .L848
 20992 0060 4FF07E52 		mov	r2, #1065353216
 20993 0064 C3F8C822 		str	r2, [r3, #712]	@ float
3154:..\src/command_processing.c **** }
 20994              		.loc 1 3154 0
 20995 0068 00BF     		nop
 20996 006a BD46     		mov	sp, r7
 20997              		.cfi_def_cfa_register 13
 20998              		@ sp needed
 20999 006c 80BC     		pop	{r7}
 21000              		.cfi_restore 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 466


 21001              		.cfi_def_cfa_offset 0
 21002 006e 7047     		bx	lr
 21003              	.L849:
 21004              		.align	2
 21005              	.L848:
 21006 0070 00000000 		.word	g_mem
 21007 0074 0000C841 		.word	1103626240
 21008              		.cfi_endproc
 21009              	.LFE89:
 21010              		.size	memInit_AirChambersFb, .-memInit_AirChambersFb
 21011              		.section	.text.memInit_OtbkActWristMs,"ax",%progbits
 21012              		.align	2
 21013              		.global	memInit_OtbkActWristMs
 21014              		.thumb
 21015              		.thumb_func
 21016              		.type	memInit_OtbkActWristMs, %function
 21017              	memInit_OtbkActWristMs:
 21018              	.LFB90:
3155:..\src/command_processing.c **** 
3156:..\src/command_processing.c **** //==============================================================================
3157:..\src/command_processing.c **** //                                   MEMORY INIT OTTOBOCK ACTIVE WRIST MASTER FB
3158:..\src/command_processing.c **** //==============================================================================
3159:..\src/command_processing.c **** void memInit_OtbkActWristMs(void)
3160:..\src/command_processing.c **** {
 21019              		.loc 1 3160 0
 21020              		.cfi_startproc
 21021              		@ args = 0, pretend = 0, frame = 0
 21022              		@ frame_needed = 1, uses_anonymous_args = 0
 21023              		@ link register save eliminated.
 21024 0000 80B4     		push	{r7}
 21025              		.cfi_def_cfa_offset 4
 21026              		.cfi_offset 7, -4
 21027 0002 00AF     		add	r7, sp, #0
 21028              		.cfi_def_cfa_register 7
3161:..\src/command_processing.c ****     // Default configuration with Ottobock Active Wrist feedback
3162:..\src/command_processing.c ****     g_mem.dev.dev_type  = OTBK_ACT_WRIST_MS;
 21029              		.loc 1 3162 0
 21030 0004 294B     		ldr	r3, .L851
 21031 0006 0322     		movs	r2, #3
 21032 0008 83F8AC20 		strb	r2, [r3, #172]
3163:..\src/command_processing.c ****     g_mem.dev.right_left = LEFT_HAND;
 21033              		.loc 1 3163 0
 21034 000c 274B     		ldr	r3, .L851
 21035 000e 0122     		movs	r2, #1
 21036 0010 83F8A720 		strb	r2, [r3, #167]
3164:..\src/command_processing.c ****     
3165:..\src/command_processing.c ****     g_mem.motor[0].control_mode = CONTROL_PWM;
 21037              		.loc 1 3165 0
 21038 0014 254B     		ldr	r3, .L851
 21039 0016 0122     		movs	r2, #1
 21040 0018 83F80F21 		strb	r2, [r3, #271]
3166:..\src/command_processing.c ****     g_mem.motor[0].pwm_rate_limiter = 100;
 21041              		.loc 1 3166 0
 21042 001c 234B     		ldr	r3, .L851
 21043 001e 6422     		movs	r2, #100
 21044 0020 83F81121 		strb	r2, [r3, #273]
3167:..\src/command_processing.c ****     g_mem.motor[0].not_revers_motor_flag = FALSE;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 467


 21045              		.loc 1 3167 0
 21046 0024 214B     		ldr	r3, .L851
 21047 0026 0022     		movs	r2, #0
 21048 0028 83F81221 		strb	r2, [r3, #274]
3168:..\src/command_processing.c ****     
3169:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3170:..\src/command_processing.c ****     // Default slave configuration for SoftHand 3.0            
3171:..\src/command_processing.c ****     g_mem.motor[1].input_mode = INPUT_MODE_EMG_FCFS;
 21049              		.loc 1 3171 0
 21050 002c 1F4B     		ldr	r3, .L851
 21051 002e 0422     		movs	r2, #4
 21052 0030 83F87E21 		strb	r2, [r3, #382]
3172:..\src/command_processing.c ****     g_mem.motor[1].encoder_line  = g_mem.dev.right_left;
 21053              		.loc 1 3172 0
 21054 0034 1D4B     		ldr	r3, .L851
 21055 0036 93F8A720 		ldrb	r2, [r3, #167]	@ zero_extendqisi2
 21056 003a 1C4B     		ldr	r3, .L851
 21057 003c 83F88021 		strb	r2, [r3, #384]
3173:..\src/command_processing.c ****     g_mem.motor[1].pwm_rate_limiter = PWM_RATE_LIMITER_MAX;
 21058              		.loc 1 3173 0
 21059 0040 1A4B     		ldr	r3, .L851
 21060 0042 0122     		movs	r2, #1
 21061 0044 83F88121 		strb	r2, [r3, #385]
3174:..\src/command_processing.c ****     g_mem.motor[1].not_revers_motor_flag = FALSE;       // False, because it is important only to c
 21062              		.loc 1 3174 0
 21063 0048 184B     		ldr	r3, .L851
 21064 004a 0022     		movs	r2, #0
 21065 004c 83F88221 		strb	r2, [r3, #386]
3175:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_inf = 0;
 21066              		.loc 1 3175 0
 21067 0050 164B     		ldr	r3, .L851
 21068 0052 0022     		movs	r2, #0
 21069 0054 C3F85421 		str	r2, [r3, #340]
3176:..\src/command_processing.c ****     g_mem.motor[1].pos_lim_sup = (int32)16000 << g_mem.enc[g_mem.motor[1].encoder_line].res[0];
 21070              		.loc 1 3176 0
 21071 0058 144B     		ldr	r3, .L851
 21072 005a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21073 005e 1946     		mov	r1, r3
 21074 0060 124A     		ldr	r2, .L851
 21075 0062 0B46     		mov	r3, r1
 21076 0064 5B00     		lsls	r3, r3, #1
 21077 0066 0B44     		add	r3, r3, r1
 21078 0068 1B01     		lsls	r3, r3, #4
 21079 006a 1344     		add	r3, r3, r2
 21080 006c 03F29513 		addw	r3, r3, #405
 21081 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21082 0072 1A46     		mov	r2, r3
 21083 0074 4FF47A53 		mov	r3, #16000
 21084 0078 9340     		lsls	r3, r3, r2
 21085 007a 0C4A     		ldr	r2, .L851
 21086 007c C2F85831 		str	r3, [r2, #344]
3177:..\src/command_processing.c ****     
3178:..\src/command_processing.c ****     // WR STRUCT
3179:..\src/command_processing.c ****     g_mem.WR.wrist_act_mode = 0;                // Default Fast:wrist, Slow:hand
 21087              		.loc 1 3179 0
 21088 0080 0A4B     		ldr	r3, .L851
 21089 0082 0022     		movs	r2, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 468


 21090 0084 83F8D022 		strb	r2, [r3, #720]
3180:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[0] = 800;
 21091              		.loc 1 3180 0
 21092 0088 084B     		ldr	r3, .L851
 21093 008a 4FF44872 		mov	r2, #800
 21094 008e A3F8D222 		strh	r2, [r3, #722]	@ movhi
3181:..\src/command_processing.c ****     g_mem.WR.fast_act_threshold[1] = 800;
 21095              		.loc 1 3181 0
 21096 0092 064B     		ldr	r3, .L851
 21097 0094 4FF44872 		mov	r2, #800
 21098 0098 A3F8D422 		strh	r2, [r3, #724]	@ movhi
3182:..\src/command_processing.c ****     g_mem.WR.wrist_direction_association = 0;   // Default Close:CW, Open:CCW
 21099              		.loc 1 3182 0
 21100 009c 034B     		ldr	r3, .L851
 21101 009e 0022     		movs	r2, #0
 21102 00a0 83F8D622 		strb	r2, [r3, #726]
3183:..\src/command_processing.c **** }
 21103              		.loc 1 3183 0
 21104 00a4 00BF     		nop
 21105 00a6 BD46     		mov	sp, r7
 21106              		.cfi_def_cfa_register 13
 21107              		@ sp needed
 21108 00a8 80BC     		pop	{r7}
 21109              		.cfi_restore 7
 21110              		.cfi_def_cfa_offset 0
 21111 00aa 7047     		bx	lr
 21112              	.L852:
 21113              		.align	2
 21114              	.L851:
 21115 00ac 00000000 		.word	g_mem
 21116              		.cfi_endproc
 21117              	.LFE90:
 21118              		.size	memInit_OtbkActWristMs, .-memInit_OtbkActWristMs
 21119              		.section	.text.cmd_get_measurements,"ax",%progbits
 21120              		.align	2
 21121              		.global	cmd_get_measurements
 21122              		.thumb
 21123              		.thumb_func
 21124              		.type	cmd_get_measurements, %function
 21125              	cmd_get_measurements:
 21126              	.LFB91:
3184:..\src/command_processing.c **** 
3185:..\src/command_processing.c **** //==============================================================================
3186:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
3187:..\src/command_processing.c **** //==============================================================================
3188:..\src/command_processing.c **** /**
3189:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
3190:..\src/command_processing.c **** **/
3191:..\src/command_processing.c **** 
3192:..\src/command_processing.c **** void cmd_get_measurements(){
 21127              		.loc 1 3192 0
 21128              		.cfi_startproc
 21129              		@ args = 0, pretend = 0, frame = 16
 21130              		@ frame_needed = 1, uses_anonymous_args = 0
 21131 0000 90B5     		push	{r4, r7, lr}
 21132              		.cfi_def_cfa_offset 12
 21133              		.cfi_offset 4, -12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 469


 21134              		.cfi_offset 7, -8
 21135              		.cfi_offset 14, -4
 21136 0002 85B0     		sub	sp, sp, #20
 21137              		.cfi_def_cfa_offset 32
 21138 0004 00AF     		add	r7, sp, #0
 21139              		.cfi_def_cfa_register 7
3193:..\src/command_processing.c ****  
3194:..\src/command_processing.c ****     uint8 CYDATA index;
3195:..\src/command_processing.c ****     int16 aux_int16;
3196:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3197:..\src/command_processing.c ****     
3198:..\src/command_processing.c ****     uint8 packet_data[8]; 
3199:..\src/command_processing.c ****     
3200:..\src/command_processing.c ****     //Header package
3201:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 21140              		.loc 1 3201 0
 21141 0006 8423     		movs	r3, #132
 21142 0008 3B71     		strb	r3, [r7, #4]
3202:..\src/command_processing.c ****     
3203:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21143              		.loc 1 3203 0
 21144 000a 0323     		movs	r3, #3
 21145 000c FB73     		strb	r3, [r7, #15]
 21146 000e 38E0     		b	.L854
 21147              	.L855:
3204:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21148              		.loc 1 3204 0
 21149 0010 264B     		ldr	r3, .L856
 21150 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21151 0016 1A46     		mov	r2, r3
 21152 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21153 001a 2548     		ldr	r0, .L856+4
 21154 001c 1346     		mov	r3, r2
 21155 001e 5B00     		lsls	r3, r3, #1
 21156 0020 1344     		add	r3, r3, r2
 21157 0022 9B00     		lsls	r3, r3, #2
 21158 0024 1344     		add	r3, r3, r2
 21159 0026 0B44     		add	r3, r3, r1
 21160 0028 50F82320 		ldr	r2, [r0, r3, lsl #2]
 21161 002c 1F4B     		ldr	r3, .L856
 21162 002e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21163 0032 1C46     		mov	r4, r3
 21164 0034 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21165 0036 1D48     		ldr	r0, .L856
 21166 0038 2346     		mov	r3, r4
 21167 003a 5B00     		lsls	r3, r3, #1
 21168 003c 2344     		add	r3, r3, r4
 21169 003e 1B01     		lsls	r3, r3, #4
 21170 0040 0344     		add	r3, r3, r0
 21171 0042 0B44     		add	r3, r3, r1
 21172 0044 03F29513 		addw	r3, r3, #405
 21173 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21174 004a 42FA03F3 		asr	r3, r2, r3
 21175 004e 1BB2     		sxth	r3, r3
 21176 0050 BB81     		strh	r3, [r7, #12]	@ movhi
3205:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 21177              		.loc 1 3205 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 470


 21178 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21179 0054 5B00     		lsls	r3, r3, #1
 21180 0056 0233     		adds	r3, r3, #2
 21181 0058 07F10C02 		add	r2, r7, #12
 21182 005c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21183 005e 07F11001 		add	r1, r7, #16
 21184 0062 0B44     		add	r3, r3, r1
 21185 0064 03F80C2C 		strb	r2, [r3, #-12]
3206:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 21186              		.loc 1 3206 0
 21187 0068 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21188 006a 5B00     		lsls	r3, r3, #1
 21189 006c 5A1C     		adds	r2, r3, #1
 21190 006e 07F10C03 		add	r3, r7, #12
 21191 0072 0133     		adds	r3, r3, #1
 21192 0074 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21193 0076 07F11003 		add	r3, r7, #16
 21194 007a 1344     		add	r3, r3, r2
 21195 007c 0A46     		mov	r2, r1
 21196 007e 03F80C2C 		strb	r2, [r3, #-12]
 21197              	.L854:
3203:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 21198              		.loc 1 3203 0 discriminator 1
 21199 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21200 0084 5A1E     		subs	r2, r3, #1
 21201 0086 FA73     		strb	r2, [r7, #15]
 21202 0088 002B     		cmp	r3, #0
 21203 008a C1D1     		bne	.L855
3207:..\src/command_processing.c ****     }
3208:..\src/command_processing.c **** 
3209:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3210:..\src/command_processing.c **** 
3211:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 21204              		.loc 1 3211 0
 21205 008c 3B1D     		adds	r3, r7, #4
 21206 008e 0721     		movs	r1, #7
 21207 0090 1846     		mov	r0, r3
 21208 0092 FFF7FEFF 		bl	LCRChecksum
 21209 0096 0346     		mov	r3, r0
 21210 0098 FB72     		strb	r3, [r7, #11]
3212:..\src/command_processing.c **** 
3213:..\src/command_processing.c ****     commWrite(packet_data, 8);
 21211              		.loc 1 3213 0
 21212 009a 3B1D     		adds	r3, r7, #4
 21213 009c 0821     		movs	r1, #8
 21214 009e 1846     		mov	r0, r3
 21215 00a0 FFF7FEFF 		bl	commWrite
3214:..\src/command_processing.c ****    
3215:..\src/command_processing.c **** }
 21216              		.loc 1 3215 0
 21217 00a4 00BF     		nop
 21218 00a6 1437     		adds	r7, r7, #20
 21219              		.cfi_def_cfa_offset 12
 21220 00a8 BD46     		mov	sp, r7
 21221              		.cfi_def_cfa_register 13
 21222              		@ sp needed
 21223 00aa 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 471


 21224              	.L857:
 21225              		.align	2
 21226              	.L856:
 21227 00ac 00000000 		.word	g_mem
 21228 00b0 00000000 		.word	g_measOld
 21229              		.cfi_endproc
 21230              	.LFE91:
 21231              		.size	cmd_get_measurements, .-cmd_get_measurements
 21232              		.section	.text.cmd_get_velocities,"ax",%progbits
 21233              		.align	2
 21234              		.global	cmd_get_velocities
 21235              		.thumb
 21236              		.thumb_func
 21237              		.type	cmd_get_velocities, %function
 21238              	cmd_get_velocities:
 21239              	.LFB92:
3216:..\src/command_processing.c **** 
3217:..\src/command_processing.c **** void cmd_get_velocities(){
 21240              		.loc 1 3217 0
 21241              		.cfi_startproc
 21242              		@ args = 0, pretend = 0, frame = 16
 21243              		@ frame_needed = 1, uses_anonymous_args = 0
 21244 0000 90B5     		push	{r4, r7, lr}
 21245              		.cfi_def_cfa_offset 12
 21246              		.cfi_offset 4, -12
 21247              		.cfi_offset 7, -8
 21248              		.cfi_offset 14, -4
 21249 0002 85B0     		sub	sp, sp, #20
 21250              		.cfi_def_cfa_offset 32
 21251 0004 00AF     		add	r7, sp, #0
 21252              		.cfi_def_cfa_register 7
3218:..\src/command_processing.c ****  
3219:..\src/command_processing.c ****     uint8 CYDATA index;
3220:..\src/command_processing.c ****     int16 aux_int16;
3221:..\src/command_processing.c ****    
3222:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3223:..\src/command_processing.c ****     
3224:..\src/command_processing.c ****     uint8 packet_data[8]; 
3225:..\src/command_processing.c ****     
3226:..\src/command_processing.c ****     //Header package
3227:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 21253              		.loc 1 3227 0
 21254 0006 8923     		movs	r3, #137
 21255 0008 3B71     		strb	r3, [r7, #4]
3228:..\src/command_processing.c ****     
3229:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21256              		.loc 1 3229 0
 21257 000a 0323     		movs	r3, #3
 21258 000c FB73     		strb	r3, [r7, #15]
 21259 000e 3AE0     		b	.L859
 21260              	.L860:
3230:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 21261              		.loc 1 3230 0
 21262 0010 274B     		ldr	r3, .L861
 21263 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21264 0016 1A46     		mov	r2, r3
 21265 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 472


 21266 001a 2648     		ldr	r0, .L861+4
 21267 001c 1346     		mov	r3, r2
 21268 001e 5B00     		lsls	r3, r3, #1
 21269 0020 1344     		add	r3, r3, r2
 21270 0022 9B00     		lsls	r3, r3, #2
 21271 0024 1344     		add	r3, r3, r2
 21272 0026 0B44     		add	r3, r3, r1
 21273 0028 0633     		adds	r3, r3, #6
 21274 002a 9B00     		lsls	r3, r3, #2
 21275 002c 0344     		add	r3, r3, r0
 21276 002e 5A68     		ldr	r2, [r3, #4]
 21277 0030 1F4B     		ldr	r3, .L861
 21278 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21279 0036 1C46     		mov	r4, r3
 21280 0038 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21281 003a 1D48     		ldr	r0, .L861
 21282 003c 2346     		mov	r3, r4
 21283 003e 5B00     		lsls	r3, r3, #1
 21284 0040 2344     		add	r3, r3, r4
 21285 0042 1B01     		lsls	r3, r3, #4
 21286 0044 0344     		add	r3, r3, r0
 21287 0046 0B44     		add	r3, r3, r1
 21288 0048 03F29513 		addw	r3, r3, #405
 21289 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21290 004e 42FA03F3 		asr	r3, r2, r3
 21291 0052 1BB2     		sxth	r3, r3
 21292 0054 BB81     		strh	r3, [r7, #12]	@ movhi
3231:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 21293              		.loc 1 3231 0
 21294 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21295 0058 5B00     		lsls	r3, r3, #1
 21296 005a 0233     		adds	r3, r3, #2
 21297 005c 07F10C02 		add	r2, r7, #12
 21298 0060 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21299 0062 07F11001 		add	r1, r7, #16
 21300 0066 0B44     		add	r3, r3, r1
 21301 0068 03F80C2C 		strb	r2, [r3, #-12]
3232:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 21302              		.loc 1 3232 0
 21303 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21304 006e 5B00     		lsls	r3, r3, #1
 21305 0070 5A1C     		adds	r2, r3, #1
 21306 0072 07F10C03 		add	r3, r7, #12
 21307 0076 0133     		adds	r3, r3, #1
 21308 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21309 007a 07F11003 		add	r3, r7, #16
 21310 007e 1344     		add	r3, r3, r2
 21311 0080 0A46     		mov	r2, r1
 21312 0082 03F80C2C 		strb	r2, [r3, #-12]
 21313              	.L859:
3229:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].vel[index] >> g_mem.enc[g_mem.mo
 21314              		.loc 1 3229 0 discriminator 1
 21315 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21316 0088 5A1E     		subs	r2, r3, #1
 21317 008a FA73     		strb	r2, [r7, #15]
 21318 008c 002B     		cmp	r3, #0
 21319 008e BFD1     		bne	.L860
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 473


3233:..\src/command_processing.c ****     }
3234:..\src/command_processing.c ****             
3235:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3236:..\src/command_processing.c **** 
3237:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 21320              		.loc 1 3237 0
 21321 0090 3B1D     		adds	r3, r7, #4
 21322 0092 0721     		movs	r1, #7
 21323 0094 1846     		mov	r0, r3
 21324 0096 FFF7FEFF 		bl	LCRChecksum
 21325 009a 0346     		mov	r3, r0
 21326 009c FB72     		strb	r3, [r7, #11]
3238:..\src/command_processing.c **** 
3239:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 21327              		.loc 1 3239 0
 21328 009e 3B1D     		adds	r3, r7, #4
 21329 00a0 0821     		movs	r1, #8
 21330 00a2 1846     		mov	r0, r3
 21331 00a4 FFF7FEFF 		bl	commWrite
3240:..\src/command_processing.c **** }
 21332              		.loc 1 3240 0
 21333 00a8 00BF     		nop
 21334 00aa 1437     		adds	r7, r7, #20
 21335              		.cfi_def_cfa_offset 12
 21336 00ac BD46     		mov	sp, r7
 21337              		.cfi_def_cfa_register 13
 21338              		@ sp needed
 21339 00ae 90BD     		pop	{r4, r7, pc}
 21340              	.L862:
 21341              		.align	2
 21342              	.L861:
 21343 00b0 00000000 		.word	g_mem
 21344 00b4 00000000 		.word	g_measOld
 21345              		.cfi_endproc
 21346              	.LFE92:
 21347              		.size	cmd_get_velocities, .-cmd_get_velocities
 21348              		.section	.text.cmd_get_accelerations,"ax",%progbits
 21349              		.align	2
 21350              		.global	cmd_get_accelerations
 21351              		.thumb
 21352              		.thumb_func
 21353              		.type	cmd_get_accelerations, %function
 21354              	cmd_get_accelerations:
 21355              	.LFB93:
3241:..\src/command_processing.c **** 
3242:..\src/command_processing.c **** void cmd_get_accelerations(){
 21356              		.loc 1 3242 0
 21357              		.cfi_startproc
 21358              		@ args = 0, pretend = 0, frame = 16
 21359              		@ frame_needed = 1, uses_anonymous_args = 0
 21360 0000 90B5     		push	{r4, r7, lr}
 21361              		.cfi_def_cfa_offset 12
 21362              		.cfi_offset 4, -12
 21363              		.cfi_offset 7, -8
 21364              		.cfi_offset 14, -4
 21365 0002 85B0     		sub	sp, sp, #20
 21366              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 474


 21367 0004 00AF     		add	r7, sp, #0
 21368              		.cfi_def_cfa_register 7
3243:..\src/command_processing.c ****  
3244:..\src/command_processing.c ****     uint8 CYDATA index;
3245:..\src/command_processing.c ****     int16 aux_int16;
3246:..\src/command_processing.c ****     
3247:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3248:..\src/command_processing.c ****     
3249:..\src/command_processing.c ****     uint8 packet_data[8]; 
3250:..\src/command_processing.c ****     
3251:..\src/command_processing.c ****     //Header package
3252:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 21369              		.loc 1 3252 0
 21370 0006 8B23     		movs	r3, #139
 21371 0008 3B71     		strb	r3, [r7, #4]
3253:..\src/command_processing.c ****     
3254:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 21372              		.loc 1 3254 0
 21373 000a 0323     		movs	r3, #3
 21374 000c FB73     		strb	r3, [r7, #15]
 21375 000e 39E0     		b	.L864
 21376              	.L865:
3255:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 21377              		.loc 1 3255 0
 21378 0010 274B     		ldr	r3, .L866
 21379 0012 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21380 0016 1A46     		mov	r2, r3
 21381 0018 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21382 001a 2648     		ldr	r0, .L866+4
 21383 001c 1346     		mov	r3, r2
 21384 001e 5B00     		lsls	r3, r3, #1
 21385 0020 1344     		add	r3, r3, r2
 21386 0022 9B00     		lsls	r3, r3, #2
 21387 0024 1344     		add	r3, r3, r2
 21388 0026 0B44     		add	r3, r3, r1
 21389 0028 0A33     		adds	r3, r3, #10
 21390 002a 50F82320 		ldr	r2, [r0, r3, lsl #2]
 21391 002e 204B     		ldr	r3, .L866
 21392 0030 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21393 0034 1C46     		mov	r4, r3
 21394 0036 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 21395 0038 1D48     		ldr	r0, .L866
 21396 003a 2346     		mov	r3, r4
 21397 003c 5B00     		lsls	r3, r3, #1
 21398 003e 2344     		add	r3, r3, r4
 21399 0040 1B01     		lsls	r3, r3, #4
 21400 0042 0344     		add	r3, r3, r0
 21401 0044 0B44     		add	r3, r3, r1
 21402 0046 03F29513 		addw	r3, r3, #405
 21403 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21404 004c 42FA03F3 		asr	r3, r2, r3
 21405 0050 1BB2     		sxth	r3, r3
 21406 0052 BB81     		strh	r3, [r7, #12]	@ movhi
3256:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 21407              		.loc 1 3256 0
 21408 0054 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21409 0056 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 475


 21410 0058 0233     		adds	r3, r3, #2
 21411 005a 07F10C02 		add	r2, r7, #12
 21412 005e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 21413 0060 07F11001 		add	r1, r7, #16
 21414 0064 0B44     		add	r3, r3, r1
 21415 0066 03F80C2C 		strb	r2, [r3, #-12]
3257:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 21416              		.loc 1 3257 0
 21417 006a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21418 006c 5B00     		lsls	r3, r3, #1
 21419 006e 5A1C     		adds	r2, r3, #1
 21420 0070 07F10C03 		add	r3, r7, #12
 21421 0074 0133     		adds	r3, r3, #1
 21422 0076 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 21423 0078 07F11003 		add	r3, r7, #16
 21424 007c 1344     		add	r3, r3, r2
 21425 007e 0A46     		mov	r2, r1
 21426 0080 03F80C2C 		strb	r2, [r3, #-12]
 21427              	.L864:
3254:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].acc[index] >> g_mem.enc[g_mem.mo
 21428              		.loc 1 3254 0 discriminator 1
 21429 0084 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 21430 0086 5A1E     		subs	r2, r3, #1
 21431 0088 FA73     		strb	r2, [r7, #15]
 21432 008a 002B     		cmp	r3, #0
 21433 008c C0D1     		bne	.L865
3258:..\src/command_processing.c ****     }
3259:..\src/command_processing.c ****     
3260:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3261:..\src/command_processing.c **** 
3262:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 21434              		.loc 1 3262 0
 21435 008e 3B1D     		adds	r3, r7, #4
 21436 0090 0721     		movs	r1, #7
 21437 0092 1846     		mov	r0, r3
 21438 0094 FFF7FEFF 		bl	LCRChecksum
 21439 0098 0346     		mov	r3, r0
 21440 009a FB72     		strb	r3, [r7, #11]
3263:..\src/command_processing.c **** 
3264:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 21441              		.loc 1 3264 0
 21442 009c 3B1D     		adds	r3, r7, #4
 21443 009e 0821     		movs	r1, #8
 21444 00a0 1846     		mov	r0, r3
 21445 00a2 FFF7FEFF 		bl	commWrite
3265:..\src/command_processing.c **** }
 21446              		.loc 1 3265 0
 21447 00a6 00BF     		nop
 21448 00a8 1437     		adds	r7, r7, #20
 21449              		.cfi_def_cfa_offset 12
 21450 00aa BD46     		mov	sp, r7
 21451              		.cfi_def_cfa_register 13
 21452              		@ sp needed
 21453 00ac 90BD     		pop	{r4, r7, pc}
 21454              	.L867:
 21455 00ae 00BF     		.align	2
 21456              	.L866:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 476


 21457 00b0 00000000 		.word	g_mem
 21458 00b4 00000000 		.word	g_measOld
 21459              		.cfi_endproc
 21460              	.LFE93:
 21461              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 21462              		.section	.text.cmd_get_joystick,"ax",%progbits
 21463              		.align	2
 21464              		.global	cmd_get_joystick
 21465              		.thumb
 21466              		.thumb_func
 21467              		.type	cmd_get_joystick, %function
 21468              	cmd_get_joystick:
 21469              	.LFB94:
3266:..\src/command_processing.c **** 
3267:..\src/command_processing.c **** void cmd_get_joystick() {
 21470              		.loc 1 3267 0
 21471              		.cfi_startproc
 21472              		@ args = 0, pretend = 0, frame = 8
 21473              		@ frame_needed = 1, uses_anonymous_args = 0
 21474 0000 80B5     		push	{r7, lr}
 21475              		.cfi_def_cfa_offset 8
 21476              		.cfi_offset 7, -8
 21477              		.cfi_offset 14, -4
 21478 0002 82B0     		sub	sp, sp, #8
 21479              		.cfi_def_cfa_offset 16
 21480 0004 00AF     		add	r7, sp, #0
 21481              		.cfi_def_cfa_register 7
3268:..\src/command_processing.c ****  
3269:..\src/command_processing.c ****     int16 aux_int16;
3270:..\src/command_processing.c ****     
3271:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
3272:..\src/command_processing.c ****     
3273:..\src/command_processing.c ****     uint8 packet_data[6];
3274:..\src/command_processing.c ****     
3275:..\src/command_processing.c ****     // Header        
3276:..\src/command_processing.c ****     packet_data[0] = CMD_GET_JOYSTICK;
 21482              		.loc 1 3276 0
 21483 0006 9223     		movs	r3, #146
 21484 0008 3B70     		strb	r3, [r7]
3277:..\src/command_processing.c ****     
3278:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[0];
 21485              		.loc 1 3278 0
 21486 000a 134B     		ldr	r3, .L869
 21487 000c 1B6A     		ldr	r3, [r3, #32]
 21488 000e 1BB2     		sxth	r3, r3
 21489 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3279:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 21490              		.loc 1 3279 0
 21491 0012 BB1D     		adds	r3, r7, #6
 21492 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21493 0016 BB70     		strb	r3, [r7, #2]
3280:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 21494              		.loc 1 3280 0
 21495 0018 BB1D     		adds	r3, r7, #6
 21496 001a 0133     		adds	r3, r3, #1
 21497 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21498 001e 7B70     		strb	r3, [r7, #1]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 477


3281:..\src/command_processing.c ****     
3282:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.joystick[1];
 21499              		.loc 1 3282 0
 21500 0020 0D4B     		ldr	r3, .L869
 21501 0022 5B6A     		ldr	r3, [r3, #36]
 21502 0024 1BB2     		sxth	r3, r3
 21503 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3283:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 21504              		.loc 1 3283 0
 21505 0028 BB1D     		adds	r3, r7, #6
 21506 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21507 002c 3B71     		strb	r3, [r7, #4]
3284:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 21508              		.loc 1 3284 0
 21509 002e BB1D     		adds	r3, r7, #6
 21510 0030 0133     		adds	r3, r3, #1
 21511 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21512 0034 FB70     		strb	r3, [r7, #3]
3285:..\src/command_processing.c **** 
3286:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 21513              		.loc 1 3286 0
 21514 0036 3B46     		mov	r3, r7
 21515 0038 0521     		movs	r1, #5
 21516 003a 1846     		mov	r0, r3
 21517 003c FFF7FEFF 		bl	LCRChecksum
 21518 0040 0346     		mov	r3, r0
 21519 0042 7B71     		strb	r3, [r7, #5]
3287:..\src/command_processing.c **** 
3288:..\src/command_processing.c ****     commWrite(packet_data, 6);
 21520              		.loc 1 3288 0
 21521 0044 3B46     		mov	r3, r7
 21522 0046 0621     		movs	r1, #6
 21523 0048 1846     		mov	r0, r3
 21524 004a FFF7FEFF 		bl	commWrite
3289:..\src/command_processing.c **** }
 21525              		.loc 1 3289 0
 21526 004e 00BF     		nop
 21527 0050 0837     		adds	r7, r7, #8
 21528              		.cfi_def_cfa_offset 8
 21529 0052 BD46     		mov	sp, r7
 21530              		.cfi_def_cfa_register 13
 21531              		@ sp needed
 21532 0054 80BD     		pop	{r7, pc}
 21533              	.L870:
 21534 0056 00BF     		.align	2
 21535              	.L869:
 21536 0058 00000000 		.word	g_adc_measOld
 21537              		.cfi_endproc
 21538              	.LFE94:
 21539              		.size	cmd_get_joystick, .-cmd_get_joystick
 21540              		.section	.text.cmd_set_inputs,"ax",%progbits
 21541              		.align	2
 21542              		.global	cmd_set_inputs
 21543              		.thumb
 21544              		.thumb_func
 21545              		.type	cmd_set_inputs, %function
 21546              	cmd_set_inputs:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 478


 21547              	.LFB95:
3290:..\src/command_processing.c **** 
3291:..\src/command_processing.c **** void cmd_set_inputs(){
 21548              		.loc 1 3291 0
 21549              		.cfi_startproc
 21550              		@ args = 0, pretend = 0, frame = 8
 21551              		@ frame_needed = 1, uses_anonymous_args = 0
 21552              		@ link register save eliminated.
 21553 0000 90B4     		push	{r4, r7}
 21554              		.cfi_def_cfa_offset 8
 21555              		.cfi_offset 4, -8
 21556              		.cfi_offset 7, -4
 21557 0002 82B0     		sub	sp, sp, #8
 21558              		.cfi_def_cfa_offset 16
 21559 0004 00AF     		add	r7, sp, #0
 21560              		.cfi_def_cfa_register 7
3292:..\src/command_processing.c ****     
3293:..\src/command_processing.c ****     // Store position setted in right variables
3294:..\src/command_processing.c ****     int16 aux_int16[NUM_OF_MOTORS];
3295:..\src/command_processing.c ****     static int16 last_aux_int16[NUM_OF_MOTORS];
3296:..\src/command_processing.c ****     
3297:..\src/command_processing.c ****     aux_int16[0] = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 21561              		.loc 1 3297 0
 21562 0006 894B     		ldr	r3, .L885
 21563 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 21564 000a 1B02     		lsls	r3, r3, #8
 21565 000c 1AB2     		sxth	r2, r3
 21566 000e 874B     		ldr	r3, .L885
 21567 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 21568 0012 1BB2     		sxth	r3, r3
 21569 0014 1343     		orrs	r3, r3, r2
 21570 0016 1BB2     		sxth	r3, r3
 21571 0018 3B80     		strh	r3, [r7]	@ movhi
3298:..\src/command_processing.c ****     aux_int16[1] = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 21572              		.loc 1 3298 0
 21573 001a 844B     		ldr	r3, .L885
 21574 001c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 21575 001e 1B02     		lsls	r3, r3, #8
 21576 0020 1AB2     		sxth	r2, r3
 21577 0022 824B     		ldr	r3, .L885
 21578 0024 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 21579 0026 1BB2     		sxth	r3, r3
 21580 0028 1343     		orrs	r3, r3, r2
 21581 002a 1BB2     		sxth	r3, r3
 21582 002c 7B80     		strh	r3, [r7, #2]	@ movhi
 21583              	.LBB22:
3299:..\src/command_processing.c ****     
3300:..\src/command_processing.c ****     // Check if last command received was the same as this 
3301:..\src/command_processing.c ****     //(Note: last command not last motor reference in g_ref)
3302:..\src/command_processing.c ****     for (uint8 i = 0; i < (1 + c_mem.dev.use_2nd_motor_flag); i++) {
 21584              		.loc 1 3302 0
 21585 002e 0023     		movs	r3, #0
 21586 0030 FB71     		strb	r3, [r7, #7]
 21587 0032 1DE0     		b	.L872
 21588              	.L874:
3303:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 21589              		.loc 1 3303 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 479


 21590 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21591 0036 7E4A     		ldr	r2, .L885+4
 21592 0038 32F91320 		ldrsh	r2, [r2, r3, lsl #1]
 21593 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21594 003e 5B00     		lsls	r3, r3, #1
 21595 0040 07F10801 		add	r1, r7, #8
 21596 0044 0B44     		add	r3, r3, r1
 21597 0046 33F9083C 		ldrsh	r3, [r3, #-8]
 21598 004a 9A42     		cmp	r2, r3
 21599 004c 02D0     		beq	.L873
3304:..\src/command_processing.c ****             change_ext_ref_flag = TRUE;
 21600              		.loc 1 3304 0
 21601 004e 794B     		ldr	r3, .L885+8
 21602 0050 0122     		movs	r2, #1
 21603 0052 1A70     		strb	r2, [r3]
 21604              	.L873:
3305:..\src/command_processing.c ****        }
3306:..\src/command_processing.c ****         // Update last command
3307:..\src/command_processing.c ****        last_aux_int16[i] = aux_int16[i];
 21605              		.loc 1 3307 0 discriminator 2
 21606 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21607 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21608 0058 5B00     		lsls	r3, r3, #1
 21609 005a 07F10801 		add	r1, r7, #8
 21610 005e 0B44     		add	r3, r3, r1
 21611 0060 33F9081C 		ldrsh	r1, [r3, #-8]
 21612 0064 724B     		ldr	r3, .L885+4
 21613 0066 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
3302:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 21614              		.loc 1 3302 0 discriminator 2
 21615 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21616 006c 0133     		adds	r3, r3, #1
 21617 006e FB71     		strb	r3, [r7, #7]
 21618              	.L872:
3302:..\src/command_processing.c ****        if(last_aux_int16[i] != aux_int16[i]){
 21619              		.loc 1 3302 0 is_stmt 0 discriminator 1
 21620 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 21621 0072 714B     		ldr	r3, .L885+12
 21622 0074 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21623 0078 0133     		adds	r3, r3, #1
 21624 007a 9A42     		cmp	r2, r3
 21625 007c DADB     		blt	.L874
 21626              	.LBE22:
3308:..\src/command_processing.c ****     }
3309:..\src/command_processing.c ****     
3310:..\src/command_processing.c ****     // Update g_refNew in case a new command has been received
3311:..\src/command_processing.c ****     if (change_ext_ref_flag) {
 21627              		.loc 1 3311 0 is_stmt 1
 21628 007e 6D4B     		ldr	r3, .L885+8
 21629 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21630 0082 002B     		cmp	r3, #0
 21631 0084 00F0CC80 		beq	.L884
 21632              	.LBB23:
3312:..\src/command_processing.c ****         for (uint8 i = 0; i< NUM_OF_MOTORS; i++) {
 21633              		.loc 1 3312 0
 21634 0088 0023     		movs	r3, #0
 21635 008a BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 480


 21636 008c C4E0     		b	.L876
 21637              	.L883:
3313:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21638              		.loc 1 3313 0
 21639 008e BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21640 0090 6A49     		ldr	r1, .L885+16
 21641 0092 1346     		mov	r3, r2
 21642 0094 DB00     		lsls	r3, r3, #3
 21643 0096 9B1A     		subs	r3, r3, r2
 21644 0098 1B01     		lsls	r3, r3, #4
 21645 009a 0B44     		add	r3, r3, r1
 21646 009c 03F20F13 		addw	r3, r3, #271
 21647 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21648 00a2 022B     		cmp	r3, #2
 21649 00a4 0ED1     		bne	.L877
3314:..\src/command_processing.c ****                 g_refNew[i].curr = aux_int16[i];
 21650              		.loc 1 3314 0
 21651 00a6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21652 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21653 00aa 5B00     		lsls	r3, r3, #1
 21654 00ac 07F10801 		add	r1, r7, #8
 21655 00b0 0B44     		add	r3, r3, r1
 21656 00b2 33F9083C 		ldrsh	r3, [r3, #-8]
 21657 00b6 1846     		mov	r0, r3
 21658 00b8 6149     		ldr	r1, .L885+20
 21659 00ba 1301     		lsls	r3, r2, #4
 21660 00bc 0B44     		add	r3, r3, r1
 21661 00be 0433     		adds	r3, r3, #4
 21662 00c0 1860     		str	r0, [r3]
 21663 00c2 47E0     		b	.L878
 21664              	.L877:
3315:..\src/command_processing.c ****             }
3316:..\src/command_processing.c ****             else {
3317:..\src/command_processing.c ****                 if(g_mem.motor[i].control_mode == CONTROL_PWM) {
 21665              		.loc 1 3317 0
 21666 00c4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21667 00c6 5D49     		ldr	r1, .L885+16
 21668 00c8 1346     		mov	r3, r2
 21669 00ca DB00     		lsls	r3, r3, #3
 21670 00cc 9B1A     		subs	r3, r3, r2
 21671 00ce 1B01     		lsls	r3, r3, #4
 21672 00d0 0B44     		add	r3, r3, r1
 21673 00d2 03F20F13 		addw	r3, r3, #271
 21674 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21675 00d8 012B     		cmp	r3, #1
 21676 00da 0ED1     		bne	.L879
3318:..\src/command_processing.c ****                     g_refNew[i].pwm = aux_int16[i];
 21677              		.loc 1 3318 0
 21678 00dc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21679 00de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21680 00e0 5B00     		lsls	r3, r3, #1
 21681 00e2 07F10801 		add	r1, r7, #8
 21682 00e6 0B44     		add	r3, r3, r1
 21683 00e8 33F9083C 		ldrsh	r3, [r3, #-8]
 21684 00ec 1846     		mov	r0, r3
 21685 00ee 5449     		ldr	r1, .L885+20
 21686 00f0 1301     		lsls	r3, r2, #4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 481


 21687 00f2 0B44     		add	r3, r3, r1
 21688 00f4 0833     		adds	r3, r3, #8
 21689 00f6 1860     		str	r0, [r3]
 21690 00f8 2CE0     		b	.L878
 21691              	.L879:
3319:..\src/command_processing.c ****                 }
3320:..\src/command_processing.c ****                 else {
3321:..\src/command_processing.c ****                     g_refNew[i].pos = aux_int16[i];   // motor ref
 21692              		.loc 1 3321 0
 21693 00fa BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21694 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21695 00fe 5B00     		lsls	r3, r3, #1
 21696 0100 07F10801 		add	r1, r7, #8
 21697 0104 0B44     		add	r3, r3, r1
 21698 0106 33F9083C 		ldrsh	r3, [r3, #-8]
 21699 010a 1846     		mov	r0, r3
 21700 010c 4C49     		ldr	r1, .L885+20
 21701 010e 1301     		lsls	r3, r2, #4
 21702 0110 0B44     		add	r3, r3, r1
 21703 0112 1860     		str	r0, [r3]
3322:..\src/command_processing.c ****                     g_refNew[i].pos = g_refNew[i].pos << g_mem.enc[c_mem.motor[i].encoder_line].res
 21704              		.loc 1 3322 0
 21705 0114 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21706 0116 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21707 0118 494A     		ldr	r2, .L885+20
 21708 011a 1B01     		lsls	r3, r3, #4
 21709 011c 1344     		add	r3, r3, r2
 21710 011e 1868     		ldr	r0, [r3]
 21711 0120 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21712 0122 454C     		ldr	r4, .L885+12
 21713 0124 1346     		mov	r3, r2
 21714 0126 DB00     		lsls	r3, r3, #3
 21715 0128 9B1A     		subs	r3, r3, r2
 21716 012a 1B01     		lsls	r3, r3, #4
 21717 012c 2344     		add	r3, r3, r4
 21718 012e 03F58873 		add	r3, r3, #272
 21719 0132 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21720 0134 1C46     		mov	r4, r3
 21721 0136 414A     		ldr	r2, .L885+16
 21722 0138 2346     		mov	r3, r4
 21723 013a 5B00     		lsls	r3, r3, #1
 21724 013c 2344     		add	r3, r3, r4
 21725 013e 1B01     		lsls	r3, r3, #4
 21726 0140 1344     		add	r3, r3, r2
 21727 0142 03F29513 		addw	r3, r3, #405
 21728 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21729 0148 00FA03F2 		lsl	r2, r0, r3
 21730 014c 3C48     		ldr	r0, .L885+20
 21731 014e 0B01     		lsls	r3, r1, #4
 21732 0150 0344     		add	r3, r3, r0
 21733 0152 1A60     		str	r2, [r3]
 21734              	.L878:
3323:..\src/command_processing.c ****                 }
3324:..\src/command_processing.c ****             }  
3325:..\src/command_processing.c ****                
3326:..\src/command_processing.c ****             // Check if the reference is nor higher or lower than the position limits
3327:..\src/command_processing.c ****             if (c_mem.motor[i].pos_lim_flag && (g_mem.motor[i].control_mode == CURR_AND_POS_CONTROL
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 482


 21735              		.loc 1 3327 0
 21736 0154 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21737 0156 3849     		ldr	r1, .L885+12
 21738 0158 1346     		mov	r3, r2
 21739 015a DB00     		lsls	r3, r3, #3
 21740 015c 9B1A     		subs	r3, r3, r2
 21741 015e 1B01     		lsls	r3, r3, #4
 21742 0160 0B44     		add	r3, r3, r1
 21743 0162 E333     		adds	r3, r3, #227
 21744 0164 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21745 0166 002B     		cmp	r3, #0
 21746 0168 53D0     		beq	.L880
 21747              		.loc 1 3327 0 is_stmt 0 discriminator 1
 21748 016a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21749 016c 3349     		ldr	r1, .L885+16
 21750 016e 1346     		mov	r3, r2
 21751 0170 DB00     		lsls	r3, r3, #3
 21752 0172 9B1A     		subs	r3, r3, r2
 21753 0174 1B01     		lsls	r3, r3, #4
 21754 0176 0B44     		add	r3, r3, r1
 21755 0178 03F20F13 		addw	r3, r3, #271
 21756 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21757 017e 032B     		cmp	r3, #3
 21758 0180 0BD0     		beq	.L881
 21759              		.loc 1 3327 0 discriminator 2
 21760 0182 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21761 0184 2D49     		ldr	r1, .L885+16
 21762 0186 1346     		mov	r3, r2
 21763 0188 DB00     		lsls	r3, r3, #3
 21764 018a 9B1A     		subs	r3, r3, r2
 21765 018c 1B01     		lsls	r3, r3, #4
 21766 018e 0B44     		add	r3, r3, r1
 21767 0190 03F20F13 		addw	r3, r3, #271
 21768 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 21769 0196 002B     		cmp	r3, #0
 21770 0198 3BD1     		bne	.L880
 21771              	.L881:
3328:..\src/command_processing.c ****                 
3329:..\src/command_processing.c ****                 if (g_refNew[i].pos < c_mem.motor[i].pos_lim_inf) 
 21772              		.loc 1 3329 0 is_stmt 1
 21773 019a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21774 019c 284A     		ldr	r2, .L885+20
 21775 019e 1B01     		lsls	r3, r3, #4
 21776 01a0 1344     		add	r3, r3, r2
 21777 01a2 1968     		ldr	r1, [r3]
 21778 01a4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21779 01a6 2448     		ldr	r0, .L885+12
 21780 01a8 1346     		mov	r3, r2
 21781 01aa DB00     		lsls	r3, r3, #3
 21782 01ac 9B1A     		subs	r3, r3, r2
 21783 01ae 1B01     		lsls	r3, r3, #4
 21784 01b0 0344     		add	r3, r3, r0
 21785 01b2 E433     		adds	r3, r3, #228
 21786 01b4 1B68     		ldr	r3, [r3]
 21787 01b6 9942     		cmp	r1, r3
 21788 01b8 0DDA     		bge	.L882
3330:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_inf;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 483


 21789              		.loc 1 3330 0
 21790 01ba B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21791 01bc BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21792 01be 1E48     		ldr	r0, .L885+12
 21793 01c0 1346     		mov	r3, r2
 21794 01c2 DB00     		lsls	r3, r3, #3
 21795 01c4 9B1A     		subs	r3, r3, r2
 21796 01c6 1B01     		lsls	r3, r3, #4
 21797 01c8 0344     		add	r3, r3, r0
 21798 01ca E433     		adds	r3, r3, #228
 21799 01cc 1A68     		ldr	r2, [r3]
 21800 01ce 1C48     		ldr	r0, .L885+20
 21801 01d0 0B01     		lsls	r3, r1, #4
 21802 01d2 0344     		add	r3, r3, r0
 21803 01d4 1A60     		str	r2, [r3]
 21804              	.L882:
3331:..\src/command_processing.c **** 
3332:..\src/command_processing.c ****                 if (g_refNew[i].pos > c_mem.motor[i].pos_lim_sup) 
 21805              		.loc 1 3332 0
 21806 01d6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21807 01d8 194A     		ldr	r2, .L885+20
 21808 01da 1B01     		lsls	r3, r3, #4
 21809 01dc 1344     		add	r3, r3, r2
 21810 01de 1968     		ldr	r1, [r3]
 21811 01e0 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21812 01e2 1548     		ldr	r0, .L885+12
 21813 01e4 1346     		mov	r3, r2
 21814 01e6 DB00     		lsls	r3, r3, #3
 21815 01e8 9B1A     		subs	r3, r3, r2
 21816 01ea 1B01     		lsls	r3, r3, #4
 21817 01ec 0344     		add	r3, r3, r0
 21818 01ee E833     		adds	r3, r3, #232
 21819 01f0 1B68     		ldr	r3, [r3]
 21820 01f2 9942     		cmp	r1, r3
 21821 01f4 0DDD     		ble	.L880
3333:..\src/command_processing.c ****                     g_refNew[i].pos = c_mem.motor[i].pos_lim_sup;
 21822              		.loc 1 3333 0
 21823 01f6 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 21824 01f8 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 21825 01fa 0F48     		ldr	r0, .L885+12
 21826 01fc 1346     		mov	r3, r2
 21827 01fe DB00     		lsls	r3, r3, #3
 21828 0200 9B1A     		subs	r3, r3, r2
 21829 0202 1B01     		lsls	r3, r3, #4
 21830 0204 0344     		add	r3, r3, r0
 21831 0206 E833     		adds	r3, r3, #232
 21832 0208 1A68     		ldr	r2, [r3]
 21833 020a 0D48     		ldr	r0, .L885+20
 21834 020c 0B01     		lsls	r3, r1, #4
 21835 020e 0344     		add	r3, r3, r0
 21836 0210 1A60     		str	r2, [r3]
 21837              	.L880:
3312:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21838              		.loc 1 3312 0 discriminator 2
 21839 0212 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21840 0214 0133     		adds	r3, r3, #1
 21841 0216 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 484


 21842              	.L876:
3312:..\src/command_processing.c ****             if(g_mem.motor[i].control_mode == CONTROL_CURRENT) {
 21843              		.loc 1 3312 0 is_stmt 0 discriminator 1
 21844 0218 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 21845 021a 012B     		cmp	r3, #1
 21846 021c 7FF637AF 		bls	.L883
 21847              	.L884:
 21848              	.LBE23:
3334:..\src/command_processing.c ****             }
3335:..\src/command_processing.c ****         }  
3336:..\src/command_processing.c ****     }
3337:..\src/command_processing.c **** }
 21849              		.loc 1 3337 0 is_stmt 1
 21850 0220 00BF     		nop
 21851 0222 0837     		adds	r7, r7, #8
 21852              		.cfi_def_cfa_offset 8
 21853 0224 BD46     		mov	sp, r7
 21854              		.cfi_def_cfa_register 13
 21855              		@ sp needed
 21856 0226 90BC     		pop	{r4, r7}
 21857              		.cfi_restore 7
 21858              		.cfi_restore 4
 21859              		.cfi_def_cfa_offset 0
 21860 0228 7047     		bx	lr
 21861              	.L886:
 21862 022a 00BF     		.align	2
 21863              	.L885:
 21864 022c 00000000 		.word	g_rx
 21865 0230 04000000 		.word	last_aux_int16.11316
 21866 0234 00000000 		.word	change_ext_ref_flag
 21867 0238 00000000 		.word	c_mem
 21868 023c 00000000 		.word	g_mem
 21869 0240 00000000 		.word	g_refNew
 21870              		.cfi_endproc
 21871              	.LFE95:
 21872              		.size	cmd_set_inputs, .-cmd_set_inputs
 21873              		.section	.text.cmd_activate,"ax",%progbits
 21874              		.align	2
 21875              		.global	cmd_activate
 21876              		.thumb
 21877              		.thumb_func
 21878              		.type	cmd_activate, %function
 21879              	cmd_activate:
 21880              	.LFB96:
3338:..\src/command_processing.c **** 
3339:..\src/command_processing.c **** void cmd_activate(){
 21881              		.loc 1 3339 0
 21882              		.cfi_startproc
 21883              		@ args = 0, pretend = 0, frame = 8
 21884              		@ frame_needed = 1, uses_anonymous_args = 0
 21885 0000 80B5     		push	{r7, lr}
 21886              		.cfi_def_cfa_offset 8
 21887              		.cfi_offset 7, -8
 21888              		.cfi_offset 14, -4
 21889 0002 82B0     		sub	sp, sp, #8
 21890              		.cfi_def_cfa_offset 16
 21891 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 485


 21892              		.cfi_def_cfa_register 7
3340:..\src/command_processing.c ****     
3341:..\src/command_processing.c ****     // Store new value reads
3342:..\src/command_processing.c ****     uint8 aux = g_rx.buffer[1];
 21893              		.loc 1 3342 0
 21894 0006 294B     		ldr	r3, .L894
 21895 0008 5B78     		ldrb	r3, [r3, #1]
 21896 000a FB71     		strb	r3, [r7, #7]
3343:..\src/command_processing.c ****     
3344:..\src/command_processing.c ****     // Check type of control mode enabled
3345:..\src/command_processing.c ****     if ((g_mem.motor[0].control_mode == CONTROL_ANGLE) || (g_mem.motor[0].control_mode == CURR_AND_
 21897              		.loc 1 3345 0
 21898 000c 284B     		ldr	r3, .L894+4
 21899 000e 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 21900 0012 002B     		cmp	r3, #0
 21901 0014 04D0     		beq	.L888
 21902              		.loc 1 3345 0 is_stmt 0 discriminator 1
 21903 0016 264B     		ldr	r3, .L894+4
 21904 0018 93F80F31 		ldrb	r3, [r3, #271]	@ zero_extendqisi2
 21905 001c 032B     		cmp	r3, #3
 21906 001e 0BD1     		bne	.L889
 21907              	.L888:
3346:..\src/command_processing.c ****         g_refNew[0].pos = g_meas[g_mem.motor[0].encoder_line].pos[0];
 21908              		.loc 1 3346 0 is_stmt 1
 21909 0020 234B     		ldr	r3, .L894+4
 21910 0022 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 21911 0026 1946     		mov	r1, r3
 21912 0028 224A     		ldr	r2, .L894+8
 21913 002a 3423     		movs	r3, #52
 21914 002c 03FB01F3 		mul	r3, r3, r1
 21915 0030 1344     		add	r3, r3, r2
 21916 0032 1B68     		ldr	r3, [r3]
 21917 0034 204A     		ldr	r2, .L894+12
 21918 0036 1360     		str	r3, [r2]
 21919              	.L889:
3347:..\src/command_processing.c ****     }
3348:..\src/command_processing.c ****     g_refNew[0].onoff = (aux & 0x01);
 21920              		.loc 1 3348 0
 21921 0038 FB79     		ldrb	r3, [r7, #7]
 21922 003a 03F00103 		and	r3, r3, #1
 21923 003e DAB2     		uxtb	r2, r3
 21924 0040 1D4B     		ldr	r3, .L894+12
 21925 0042 1A73     		strb	r2, [r3, #12]
3349:..\src/command_processing.c ****     
3350:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3351:..\src/command_processing.c ****     if (g_mem.dev.dev_type == AIR_CHAMBERS_FB){
3352:..\src/command_processing.c ****         // Send PWM 0 to the PUMP in case a deactivation command arrives
3353:..\src/command_processing.c ****         // [There is no driver activation, so g_refNew[i].onoff is useless]
3354:..\src/command_processing.c ****         if (!(g_refNew[0].onoff)) {
3355:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3356:..\src/command_processing.c ****         }
3357:..\src/command_processing.c ****         
3358:..\src/command_processing.c ****         // Activate or deactivate the valve
3359:..\src/command_processing.c ****         VALVE_Write((aux >> 1) & 0x01);
3360:..\src/command_processing.c ****     }
3361:..\src/command_processing.c **** #endif
3362:..\src/command_processing.c ****     
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 486


3363:..\src/command_processing.c ****     // Activate/Deactivate motor
3364:..\src/command_processing.c ****     enable_motor(0, g_refNew[0].onoff); 
 21926              		.loc 1 3364 0
 21927 0044 1C4B     		ldr	r3, .L894+12
 21928 0046 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 21929 0048 1946     		mov	r1, r3
 21930 004a 0020     		movs	r0, #0
 21931 004c FFF7FEFF 		bl	enable_motor
3365:..\src/command_processing.c ****     
3366:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 21932              		.loc 1 3366 0
 21933 0050 174B     		ldr	r3, .L894+4
 21934 0052 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 21935 0056 012B     		cmp	r3, #1
 21936 0058 23D1     		bne	.L893
3367:..\src/command_processing.c ****         if ((g_mem.motor[1].control_mode == CONTROL_ANGLE) || (g_mem.motor[1].control_mode == CURR_
 21937              		.loc 1 3367 0
 21938 005a 154B     		ldr	r3, .L894+4
 21939 005c 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21940 0060 002B     		cmp	r3, #0
 21941 0062 04D0     		beq	.L891
 21942              		.loc 1 3367 0 is_stmt 0 discriminator 1
 21943 0064 124B     		ldr	r3, .L894+4
 21944 0066 93F87F31 		ldrb	r3, [r3, #383]	@ zero_extendqisi2
 21945 006a 032B     		cmp	r3, #3
 21946 006c 0BD1     		bne	.L892
 21947              	.L891:
3368:..\src/command_processing.c ****             g_refNew[1].pos = g_meas[g_mem.motor[1].encoder_line].pos[0];
 21948              		.loc 1 3368 0 is_stmt 1
 21949 006e 104B     		ldr	r3, .L894+4
 21950 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 21951 0074 1946     		mov	r1, r3
 21952 0076 0F4A     		ldr	r2, .L894+8
 21953 0078 3423     		movs	r3, #52
 21954 007a 03FB01F3 		mul	r3, r3, r1
 21955 007e 1344     		add	r3, r3, r2
 21956 0080 1B68     		ldr	r3, [r3]
 21957 0082 0D4A     		ldr	r2, .L894+12
 21958 0084 1361     		str	r3, [r2, #16]
 21959              	.L892:
3369:..\src/command_processing.c ****         }
3370:..\src/command_processing.c ****         g_refNew[1].onoff = ((aux >> 1) & 0x01);
 21960              		.loc 1 3370 0
 21961 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 21962 0088 5B08     		lsrs	r3, r3, #1
 21963 008a DBB2     		uxtb	r3, r3
 21964 008c 03F00103 		and	r3, r3, #1
 21965 0090 DAB2     		uxtb	r2, r3
 21966 0092 094B     		ldr	r3, .L894+12
 21967 0094 1A77     		strb	r2, [r3, #28]
3371:..\src/command_processing.c ****         enable_motor(1, g_refNew[1].onoff); 
 21968              		.loc 1 3371 0
 21969 0096 084B     		ldr	r3, .L894+12
 21970 0098 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 21971 009a 1946     		mov	r1, r3
 21972 009c 0120     		movs	r0, #1
 21973 009e FFF7FEFF 		bl	enable_motor
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 487


 21974              	.L893:
3372:..\src/command_processing.c ****     }
3373:..\src/command_processing.c ****     
3374:..\src/command_processing.c **** }
 21975              		.loc 1 3374 0
 21976 00a2 00BF     		nop
 21977 00a4 0837     		adds	r7, r7, #8
 21978              		.cfi_def_cfa_offset 8
 21979 00a6 BD46     		mov	sp, r7
 21980              		.cfi_def_cfa_register 13
 21981              		@ sp needed
 21982 00a8 80BD     		pop	{r7, pc}
 21983              	.L895:
 21984 00aa 00BF     		.align	2
 21985              	.L894:
 21986 00ac 00000000 		.word	g_rx
 21987 00b0 00000000 		.word	g_mem
 21988 00b4 00000000 		.word	g_meas
 21989 00b8 00000000 		.word	g_refNew
 21990              		.cfi_endproc
 21991              	.LFE96:
 21992              		.size	cmd_activate, .-cmd_activate
 21993              		.section	.text.cmd_get_activate,"ax",%progbits
 21994              		.align	2
 21995              		.global	cmd_get_activate
 21996              		.thumb
 21997              		.thumb_func
 21998              		.type	cmd_get_activate, %function
 21999              	cmd_get_activate:
 22000              	.LFB97:
3375:..\src/command_processing.c **** 
3376:..\src/command_processing.c **** void cmd_get_activate(){
 22001              		.loc 1 3376 0
 22002              		.cfi_startproc
 22003              		@ args = 0, pretend = 0, frame = 8
 22004              		@ frame_needed = 1, uses_anonymous_args = 0
 22005 0000 80B5     		push	{r7, lr}
 22006              		.cfi_def_cfa_offset 8
 22007              		.cfi_offset 7, -8
 22008              		.cfi_offset 14, -4
 22009 0002 82B0     		sub	sp, sp, #8
 22010              		.cfi_def_cfa_offset 16
 22011 0004 00AF     		add	r7, sp, #0
 22012              		.cfi_def_cfa_register 7
3377:..\src/command_processing.c ****     
3378:..\src/command_processing.c ****     uint8 packet_data[3];
3379:..\src/command_processing.c **** 
3380:..\src/command_processing.c ****     // Header        
3381:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 22013              		.loc 1 3381 0
 22014 0006 8123     		movs	r3, #129
 22015 0008 3B71     		strb	r3, [r7, #4]
3382:..\src/command_processing.c ****     
3383:..\src/command_processing.c ****     // Fill payload
3384:..\src/command_processing.c ****     if (g_mem.dev.use_2nd_motor_flag == TRUE) {
 22016              		.loc 1 3384 0
 22017 000a 124B     		ldr	r3, .L899
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 488


 22018 000c 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22019 0010 012B     		cmp	r3, #1
 22020 0012 0BD1     		bne	.L897
3385:..\src/command_processing.c ****         packet_data[1] = ((g_ref[1].onoff << 1) | g_ref[0].onoff);
 22021              		.loc 1 3385 0
 22022 0014 104B     		ldr	r3, .L899+4
 22023 0016 1B7F     		ldrb	r3, [r3, #28]	@ zero_extendqisi2
 22024 0018 5B00     		lsls	r3, r3, #1
 22025 001a 5AB2     		sxtb	r2, r3
 22026 001c 0E4B     		ldr	r3, .L899+4
 22027 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22028 0020 5BB2     		sxtb	r3, r3
 22029 0022 1343     		orrs	r3, r3, r2
 22030 0024 5BB2     		sxtb	r3, r3
 22031 0026 DBB2     		uxtb	r3, r3
 22032 0028 7B71     		strb	r3, [r7, #5]
 22033 002a 02E0     		b	.L898
 22034              	.L897:
3386:..\src/command_processing.c ****     } 
3387:..\src/command_processing.c ****     else {
3388:..\src/command_processing.c ****         packet_data[1] = g_ref[0].onoff;
 22035              		.loc 1 3388 0
 22036 002c 0A4B     		ldr	r3, .L899+4
 22037 002e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 22038 0030 7B71     		strb	r3, [r7, #5]
 22039              	.L898:
3389:..\src/command_processing.c ****     }
3390:..\src/command_processing.c ****     
3391:..\src/command_processing.c ****     // Calculate checksum
3392:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 22040              		.loc 1 3392 0
 22041 0032 3B1D     		adds	r3, r7, #4
 22042 0034 0221     		movs	r1, #2
 22043 0036 1846     		mov	r0, r3
 22044 0038 FFF7FEFF 		bl	LCRChecksum
 22045 003c 0346     		mov	r3, r0
 22046 003e BB71     		strb	r3, [r7, #6]
3393:..\src/command_processing.c ****     
3394:..\src/command_processing.c ****     // Send package to UART
3395:..\src/command_processing.c ****     commWrite(packet_data, 3);
 22047              		.loc 1 3395 0
 22048 0040 3B1D     		adds	r3, r7, #4
 22049 0042 0321     		movs	r1, #3
 22050 0044 1846     		mov	r0, r3
 22051 0046 FFF7FEFF 		bl	commWrite
3396:..\src/command_processing.c **** 
3397:..\src/command_processing.c **** }
 22052              		.loc 1 3397 0
 22053 004a 00BF     		nop
 22054 004c 0837     		adds	r7, r7, #8
 22055              		.cfi_def_cfa_offset 8
 22056 004e BD46     		mov	sp, r7
 22057              		.cfi_def_cfa_register 13
 22058              		@ sp needed
 22059 0050 80BD     		pop	{r7, pc}
 22060              	.L900:
 22061 0052 00BF     		.align	2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 489


 22062              	.L899:
 22063 0054 00000000 		.word	g_mem
 22064 0058 00000000 		.word	g_ref
 22065              		.cfi_endproc
 22066              	.LFE97:
 22067              		.size	cmd_get_activate, .-cmd_get_activate
 22068              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 22069              		.align	2
 22070              		.global	cmd_get_curr_and_meas
 22071              		.thumb
 22072              		.thumb_func
 22073              		.type	cmd_get_curr_and_meas, %function
 22074              	cmd_get_curr_and_meas:
 22075              	.LFB98:
3398:..\src/command_processing.c **** 
3399:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 22076              		.loc 1 3399 0
 22077              		.cfi_startproc
 22078              		@ args = 0, pretend = 0, frame = 16
 22079              		@ frame_needed = 1, uses_anonymous_args = 0
 22080 0000 90B5     		push	{r4, r7, lr}
 22081              		.cfi_def_cfa_offset 12
 22082              		.cfi_offset 4, -12
 22083              		.cfi_offset 7, -8
 22084              		.cfi_offset 14, -4
 22085 0002 85B0     		sub	sp, sp, #20
 22086              		.cfi_def_cfa_offset 32
 22087 0004 00AF     		add	r7, sp, #0
 22088              		.cfi_def_cfa_register 7
3400:..\src/command_processing.c ****     
3401:..\src/command_processing.c ****     uint8 CYDATA index;
3402:..\src/command_processing.c ****     int16 aux_int16;
3403:..\src/command_processing.c ****    
3404:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
3405:..\src/command_processing.c ****     
3406:..\src/command_processing.c ****     uint8 packet_data[12]; 
3407:..\src/command_processing.c **** 
3408:..\src/command_processing.c ****     //Header package
3409:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 22089              		.loc 1 3409 0
 22090 0006 8623     		movs	r3, #134
 22091 0008 3B70     		strb	r3, [r7]
3410:..\src/command_processing.c **** 
3411:..\src/command_processing.c ****     // Currents
3412:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current motor1
 22092              		.loc 1 3412 0
 22093 000a 484B     		ldr	r3, .L906
 22094 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22095 0010 1946     		mov	r1, r3
 22096 0012 474A     		ldr	r2, .L906+4
 22097 0014 3423     		movs	r3, #52
 22098 0016 03FB01F3 		mul	r3, r3, r1
 22099 001a 1344     		add	r3, r3, r2
 22100 001c 0C33     		adds	r3, r3, #12
 22101 001e 1B68     		ldr	r3, [r3]
 22102 0020 1BB2     		sxth	r3, r3
 22103 0022 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 490


3413:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22104              		.loc 1 3413 0
 22105 0024 07F10C03 		add	r3, r7, #12
 22106 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22107 002a BB70     		strb	r3, [r7, #2]
3414:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22108              		.loc 1 3414 0
 22109 002c 07F10C03 		add	r3, r7, #12
 22110 0030 0133     		adds	r3, r3, #1
 22111 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22112 0034 7B70     		strb	r3, [r7, #1]
3415:..\src/command_processing.c ****     
3416:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 22113              		.loc 1 3416 0
 22114 0036 3F4B     		ldr	r3, .L906+8
 22115 0038 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22116 003c 012B     		cmp	r3, #1
 22117 003e 0DD1     		bne	.L902
3417:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 22118              		.loc 1 3417 0
 22119 0040 3A4B     		ldr	r3, .L906
 22120 0042 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22121 0046 1946     		mov	r1, r3
 22122 0048 394A     		ldr	r2, .L906+4
 22123 004a 3423     		movs	r3, #52
 22124 004c 03FB01F3 		mul	r3, r3, r1
 22125 0050 1344     		add	r3, r3, r2
 22126 0052 0C33     		adds	r3, r3, #12
 22127 0054 1B68     		ldr	r3, [r3]
 22128 0056 1BB2     		sxth	r3, r3
 22129 0058 BB81     		strh	r3, [r7, #12]	@ movhi
 22130 005a 0CE0     		b	.L903
 22131              	.L902:
3418:..\src/command_processing.c ****     }
3419:..\src/command_processing.c ****     else {
3420:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 22132              		.loc 1 3420 0
 22133 005c 334B     		ldr	r3, .L906
 22134 005e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22135 0062 1946     		mov	r1, r3
 22136 0064 324A     		ldr	r2, .L906+4
 22137 0066 3423     		movs	r3, #52
 22138 0068 03FB01F3 		mul	r3, r3, r1
 22139 006c 1344     		add	r3, r3, r2
 22140 006e 1033     		adds	r3, r3, #16
 22141 0070 1B68     		ldr	r3, [r3]
 22142 0072 1BB2     		sxth	r3, r3
 22143 0074 BB81     		strh	r3, [r7, #12]	@ movhi
 22144              	.L903:
3421:..\src/command_processing.c ****     }
3422:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22145              		.loc 1 3422 0
 22146 0076 07F10C03 		add	r3, r7, #12
 22147 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22148 007c 3B71     		strb	r3, [r7, #4]
3423:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22149              		.loc 1 3423 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 491


 22150 007e 07F10C03 		add	r3, r7, #12
 22151 0082 0133     		adds	r3, r3, #1
 22152 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22153 0086 FB70     		strb	r3, [r7, #3]
3424:..\src/command_processing.c **** 
3425:..\src/command_processing.c ****     // Positions
3426:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 22154              		.loc 1 3426 0
 22155 0088 0323     		movs	r3, #3
 22156 008a FB73     		strb	r3, [r7, #15]
 22157 008c 38E0     		b	.L904
 22158              	.L905:
3427:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22159              		.loc 1 3427 0
 22160 008e 274B     		ldr	r3, .L906
 22161 0090 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22162 0094 1A46     		mov	r2, r3
 22163 0096 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22164 0098 2548     		ldr	r0, .L906+4
 22165 009a 1346     		mov	r3, r2
 22166 009c 5B00     		lsls	r3, r3, #1
 22167 009e 1344     		add	r3, r3, r2
 22168 00a0 9B00     		lsls	r3, r3, #2
 22169 00a2 1344     		add	r3, r3, r2
 22170 00a4 0B44     		add	r3, r3, r1
 22171 00a6 50F82320 		ldr	r2, [r0, r3, lsl #2]
 22172 00aa 204B     		ldr	r3, .L906
 22173 00ac 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22174 00b0 1C46     		mov	r4, r3
 22175 00b2 F97B     		ldrb	r1, [r7, #15]	@ zero_extendqisi2
 22176 00b4 1D48     		ldr	r0, .L906
 22177 00b6 2346     		mov	r3, r4
 22178 00b8 5B00     		lsls	r3, r3, #1
 22179 00ba 2344     		add	r3, r3, r4
 22180 00bc 1B01     		lsls	r3, r3, #4
 22181 00be 0344     		add	r3, r3, r0
 22182 00c0 0B44     		add	r3, r3, r1
 22183 00c2 03F29513 		addw	r3, r3, #405
 22184 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22185 00c8 42FA03F3 		asr	r3, r2, r3
 22186 00cc 1BB2     		sxth	r3, r3
 22187 00ce BB81     		strh	r3, [r7, #12]	@ movhi
3428:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 22188              		.loc 1 3428 0
 22189 00d0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22190 00d2 5B00     		lsls	r3, r3, #1
 22191 00d4 0633     		adds	r3, r3, #6
 22192 00d6 07F10C02 		add	r2, r7, #12
 22193 00da 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 22194 00dc 07F11001 		add	r1, r7, #16
 22195 00e0 0B44     		add	r3, r3, r1
 22196 00e2 03F8102C 		strb	r2, [r3, #-16]
3429:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 22197              		.loc 1 3429 0
 22198 00e6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22199 00e8 5B00     		lsls	r3, r3, #1
 22200 00ea 5A1D     		adds	r2, r3, #5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 492


 22201 00ec 07F10C03 		add	r3, r7, #12
 22202 00f0 0133     		adds	r3, r3, #1
 22203 00f2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 22204 00f4 07F11003 		add	r3, r7, #16
 22205 00f8 1344     		add	r3, r3, r2
 22206 00fa 0A46     		mov	r2, r1
 22207 00fc 03F8102C 		strb	r2, [r3, #-16]
 22208              	.L904:
3426:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld[g_mem.motor[0].encoder_line].pos[index] >> g_mem.enc[g_mem.mo
 22209              		.loc 1 3426 0 discriminator 1
 22210 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22211 0102 5A1E     		subs	r2, r3, #1
 22212 0104 FA73     		strb	r2, [r7, #15]
 22213 0106 002B     		cmp	r3, #0
 22214 0108 C1D1     		bne	.L905
3430:..\src/command_processing.c ****     }
3431:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3432:..\src/command_processing.c ****         
3433:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 22215              		.loc 1 3433 0
 22216 010a 3B46     		mov	r3, r7
 22217 010c 0B21     		movs	r1, #11
 22218 010e 1846     		mov	r0, r3
 22219 0110 FFF7FEFF 		bl	LCRChecksum
 22220 0114 0346     		mov	r3, r0
 22221 0116 FB72     		strb	r3, [r7, #11]
3434:..\src/command_processing.c ****     commWrite(packet_data, 12);
 22222              		.loc 1 3434 0
 22223 0118 3B46     		mov	r3, r7
 22224 011a 0C21     		movs	r1, #12
 22225 011c 1846     		mov	r0, r3
 22226 011e FFF7FEFF 		bl	commWrite
3435:..\src/command_processing.c ****    
3436:..\src/command_processing.c **** }
 22227              		.loc 1 3436 0
 22228 0122 00BF     		nop
 22229 0124 1437     		adds	r7, r7, #20
 22230              		.cfi_def_cfa_offset 12
 22231 0126 BD46     		mov	sp, r7
 22232              		.cfi_def_cfa_register 13
 22233              		@ sp needed
 22234 0128 90BD     		pop	{r4, r7, pc}
 22235              	.L907:
 22236 012a 00BF     		.align	2
 22237              	.L906:
 22238 012c 00000000 		.word	g_mem
 22239 0130 00000000 		.word	g_measOld
 22240 0134 00000000 		.word	c_mem
 22241              		.cfi_endproc
 22242              	.LFE98:
 22243              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 22244              		.global	__aeabi_dmul
 22245              		.global	__aeabi_d2iz
 22246              		.section	.text.cmd_get_currents,"ax",%progbits
 22247              		.align	2
 22248              		.global	cmd_get_currents
 22249              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 493


 22250              		.thumb_func
 22251              		.type	cmd_get_currents, %function
 22252              	cmd_get_currents:
 22253              	.LFB99:
3437:..\src/command_processing.c **** 
3438:..\src/command_processing.c **** void cmd_get_currents(){
 22254              		.loc 1 3438 0
 22255              		.cfi_startproc
 22256              		@ args = 0, pretend = 0, frame = 16
 22257              		@ frame_needed = 1, uses_anonymous_args = 0
 22258 0000 90B5     		push	{r4, r7, lr}
 22259              		.cfi_def_cfa_offset 12
 22260              		.cfi_offset 4, -12
 22261              		.cfi_offset 7, -8
 22262              		.cfi_offset 14, -4
 22263 0002 85B0     		sub	sp, sp, #20
 22264              		.cfi_def_cfa_offset 32
 22265 0004 00AF     		add	r7, sp, #0
 22266              		.cfi_def_cfa_register 7
3439:..\src/command_processing.c ****     
3440:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3441:..\src/command_processing.c ****     
3442:..\src/command_processing.c ****     uint8 packet_data[6]; 
3443:..\src/command_processing.c ****     int16 aux_int16;
3444:..\src/command_processing.c ****     
3445:..\src/command_processing.c ****     //Header package
3446:..\src/command_processing.c **** 
3447:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 22267              		.loc 1 3447 0
 22268 0006 8523     		movs	r3, #133
 22269 0008 3B72     		strb	r3, [r7, #8]
3448:..\src/command_processing.c **** 
3449:..\src/command_processing.c ****     if (c_mem.dev.dev_type != AIR_CHAMBERS_FB){
 22270              		.loc 1 3449 0
 22271 000a 334B     		ldr	r3, .L913
 22272 000c 93F8AC30 		ldrb	r3, [r3, #172]	@ zero_extendqisi2
 22273 0010 022B     		cmp	r3, #2
 22274 0012 0DD0     		beq	.L909
3450:..\src/command_processing.c ****         // Currents
3451:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].curr; //Real current
 22275              		.loc 1 3451 0
 22276 0014 314B     		ldr	r3, .L913+4
 22277 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22278 001a 1946     		mov	r1, r3
 22279 001c 304A     		ldr	r2, .L913+8
 22280 001e 3423     		movs	r3, #52
 22281 0020 03FB01F3 		mul	r3, r3, r1
 22282 0024 1344     		add	r3, r3, r2
 22283 0026 0C33     		adds	r3, r3, #12
 22284 0028 1B68     		ldr	r3, [r3]
 22285 002a 1BB2     		sxth	r3, r3
 22286 002c FB80     		strh	r3, [r7, #6]	@ movhi
 22287 002e 12E0     		b	.L910
 22288              	.L909:
3452:..\src/command_processing.c ****     }
3453:..\src/command_processing.c ****     else {
3454:..\src/command_processing.c ****         // Send pressure times 100 here instead of current (Simulink use)
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 494


3455:..\src/command_processing.c ****         aux_int16 = (int16)(g_fb_meas.pressure*100.0); //Pressure
 22289              		.loc 1 3455 0
 22290 0030 2C4B     		ldr	r3, .L913+12
 22291 0032 1B68     		ldr	r3, [r3]	@ float
 22292 0034 1846     		mov	r0, r3
 22293 0036 FFF7FEFF 		bl	__aeabi_f2d
 22294 003a 4FF00002 		mov	r2, #0
 22295 003e 2A4B     		ldr	r3, .L913+16
 22296 0040 FFF7FEFF 		bl	__aeabi_dmul
 22297 0044 0346     		mov	r3, r0
 22298 0046 0C46     		mov	r4, r1
 22299 0048 1846     		mov	r0, r3
 22300 004a 2146     		mov	r1, r4
 22301 004c FFF7FEFF 		bl	__aeabi_d2iz
 22302 0050 0346     		mov	r3, r0
 22303 0052 1BB2     		sxth	r3, r3
 22304 0054 FB80     		strh	r3, [r7, #6]	@ movhi
 22305              	.L910:
3456:..\src/command_processing.c ****     }
3457:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22306              		.loc 1 3457 0
 22307 0056 BB1D     		adds	r3, r7, #6
 22308 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22309 005a BB72     		strb	r3, [r7, #10]
3458:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22310              		.loc 1 3458 0
 22311 005c BB1D     		adds	r3, r7, #6
 22312 005e 0133     		adds	r3, r3, #1
 22313 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22314 0062 7B72     		strb	r3, [r7, #9]
3459:..\src/command_processing.c ****     
3460:..\src/command_processing.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE) {
 22315              		.loc 1 3460 0
 22316 0064 1C4B     		ldr	r3, .L913
 22317 0066 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 22318 006a 012B     		cmp	r3, #1
 22319 006c 0DD1     		bne	.L911
3461:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[1].encoder_line].curr; //Real current motor 2
 22320              		.loc 1 3461 0
 22321 006e 1B4B     		ldr	r3, .L913+4
 22322 0070 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 22323 0074 1946     		mov	r1, r3
 22324 0076 1A4A     		ldr	r2, .L913+8
 22325 0078 3423     		movs	r3, #52
 22326 007a 03FB01F3 		mul	r3, r3, r1
 22327 007e 1344     		add	r3, r3, r2
 22328 0080 0C33     		adds	r3, r3, #12
 22329 0082 1B68     		ldr	r3, [r3]
 22330 0084 1BB2     		sxth	r3, r3
 22331 0086 FB80     		strh	r3, [r7, #6]	@ movhi
 22332 0088 0CE0     		b	.L912
 22333              	.L911:
3462:..\src/command_processing.c ****     }
3463:..\src/command_processing.c ****     else {
3464:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated current
 22334              		.loc 1 3464 0
 22335 008a 144B     		ldr	r3, .L913+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 495


 22336 008c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22337 0090 1946     		mov	r1, r3
 22338 0092 134A     		ldr	r2, .L913+8
 22339 0094 3423     		movs	r3, #52
 22340 0096 03FB01F3 		mul	r3, r3, r1
 22341 009a 1344     		add	r3, r3, r2
 22342 009c 1033     		adds	r3, r3, #16
 22343 009e 1B68     		ldr	r3, [r3]
 22344 00a0 1BB2     		sxth	r3, r3
 22345 00a2 FB80     		strh	r3, [r7, #6]	@ movhi
 22346              	.L912:
3465:..\src/command_processing.c ****     }
3466:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 22347              		.loc 1 3466 0
 22348 00a4 BB1D     		adds	r3, r7, #6
 22349 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22350 00a8 3B73     		strb	r3, [r7, #12]
3467:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 22351              		.loc 1 3467 0
 22352 00aa BB1D     		adds	r3, r7, #6
 22353 00ac 0133     		adds	r3, r3, #1
 22354 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22355 00b0 FB72     		strb	r3, [r7, #11]
3468:..\src/command_processing.c **** 
3469:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3470:..\src/command_processing.c **** 
3471:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 22356              		.loc 1 3471 0
 22357 00b2 07F10803 		add	r3, r7, #8
 22358 00b6 0521     		movs	r1, #5
 22359 00b8 1846     		mov	r0, r3
 22360 00ba FFF7FEFF 		bl	LCRChecksum
 22361 00be 0346     		mov	r3, r0
 22362 00c0 7B73     		strb	r3, [r7, #13]
3472:..\src/command_processing.c ****     
3473:..\src/command_processing.c ****     commWrite(packet_data, 6);
 22363              		.loc 1 3473 0
 22364 00c2 07F10803 		add	r3, r7, #8
 22365 00c6 0621     		movs	r1, #6
 22366 00c8 1846     		mov	r0, r3
 22367 00ca FFF7FEFF 		bl	commWrite
3474:..\src/command_processing.c **** }
 22368              		.loc 1 3474 0
 22369 00ce 00BF     		nop
 22370 00d0 1437     		adds	r7, r7, #20
 22371              		.cfi_def_cfa_offset 12
 22372 00d2 BD46     		mov	sp, r7
 22373              		.cfi_def_cfa_register 13
 22374              		@ sp needed
 22375 00d4 90BD     		pop	{r4, r7, pc}
 22376              	.L914:
 22377 00d6 00BF     		.align	2
 22378              	.L913:
 22379 00d8 00000000 		.word	c_mem
 22380 00dc 00000000 		.word	g_mem
 22381 00e0 00000000 		.word	g_measOld
 22382 00e4 00000000 		.word	g_fb_meas
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 496


 22383 00e8 00005940 		.word	1079574528
 22384              		.cfi_endproc
 22385              	.LFE99:
 22386              		.size	cmd_get_currents, .-cmd_get_currents
 22387              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 22388              		.align	2
 22389              		.global	cmd_get_currents_for_cuff
 22390              		.thumb
 22391              		.thumb_func
 22392              		.type	cmd_get_currents_for_cuff, %function
 22393              	cmd_get_currents_for_cuff:
 22394              	.LFB100:
3475:..\src/command_processing.c **** 
3476:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 22395              		.loc 1 3476 0
 22396              		.cfi_startproc
 22397              		@ args = 0, pretend = 0, frame = 8
 22398              		@ frame_needed = 1, uses_anonymous_args = 0
 22399 0000 80B5     		push	{r7, lr}
 22400              		.cfi_def_cfa_offset 8
 22401              		.cfi_offset 7, -8
 22402              		.cfi_offset 14, -4
 22403 0002 82B0     		sub	sp, sp, #8
 22404              		.cfi_def_cfa_offset 16
 22405 0004 00AF     		add	r7, sp, #0
 22406              		.cfi_def_cfa_register 7
3477:..\src/command_processing.c ****     
3478:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3479:..\src/command_processing.c ****     
3480:..\src/command_processing.c ****     uint8 packet_data[4]; 
3481:..\src/command_processing.c ****     int16 aux_int16;
3482:..\src/command_processing.c ****     
3483:..\src/command_processing.c ****     //Header package
3484:..\src/command_processing.c **** 
3485:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 22407              		.loc 1 3485 0
 22408 0006 8E23     		movs	r3, #142
 22409 0008 3B71     		strb	r3, [r7, #4]
3486:..\src/command_processing.c **** 
3487:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld[g_mem.motor[0].encoder_line].estim_curr; //Estimated Current
 22410              		.loc 1 3487 0
 22411 000a 144B     		ldr	r3, .L916
 22412 000c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22413 0010 1946     		mov	r1, r3
 22414 0012 134A     		ldr	r2, .L916+4
 22415 0014 3423     		movs	r3, #52
 22416 0016 03FB01F3 		mul	r3, r3, r1
 22417 001a 1344     		add	r3, r3, r2
 22418 001c 1033     		adds	r3, r3, #16
 22419 001e 1B68     		ldr	r3, [r3]
 22420 0020 1BB2     		sxth	r3, r3
 22421 0022 7B80     		strh	r3, [r7, #2]	@ movhi
3488:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22422              		.loc 1 3488 0
 22423 0024 BB1C     		adds	r3, r7, #2
 22424 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22425 0028 BB71     		strb	r3, [r7, #6]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 497


3489:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22426              		.loc 1 3489 0
 22427 002a BB1C     		adds	r3, r7, #2
 22428 002c 0133     		adds	r3, r3, #1
 22429 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22430 0030 7B71     		strb	r3, [r7, #5]
3490:..\src/command_processing.c **** 
3491:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3492:..\src/command_processing.c **** 
3493:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 22431              		.loc 1 3493 0
 22432 0032 3B1D     		adds	r3, r7, #4
 22433 0034 0321     		movs	r1, #3
 22434 0036 1846     		mov	r0, r3
 22435 0038 FFF7FEFF 		bl	LCRChecksum
 22436 003c 0346     		mov	r3, r0
 22437 003e FB71     		strb	r3, [r7, #7]
3494:..\src/command_processing.c ****     
3495:..\src/command_processing.c ****     commWriteID(packet_data, 4, g_mem.dev.id -1);
 22438              		.loc 1 3495 0
 22439 0040 064B     		ldr	r3, .L916
 22440 0042 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 22441 0046 013B     		subs	r3, r3, #1
 22442 0048 DAB2     		uxtb	r2, r3
 22443 004a 3B1D     		adds	r3, r7, #4
 22444 004c 0421     		movs	r1, #4
 22445 004e 1846     		mov	r0, r3
 22446 0050 FFF7FEFF 		bl	commWriteID
3496:..\src/command_processing.c **** }
 22447              		.loc 1 3496 0
 22448 0054 00BF     		nop
 22449 0056 0837     		adds	r7, r7, #8
 22450              		.cfi_def_cfa_offset 8
 22451 0058 BD46     		mov	sp, r7
 22452              		.cfi_def_cfa_register 13
 22453              		@ sp needed
 22454 005a 80BD     		pop	{r7, pc}
 22455              	.L917:
 22456              		.align	2
 22457              	.L916:
 22458 005c 00000000 		.word	g_mem
 22459 0060 00000000 		.word	g_measOld
 22460              		.cfi_endproc
 22461              	.LFE100:
 22462              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 22463              		.section	.text.commReadResCurrFromSH,"ax",%progbits
 22464              		.align	2
 22465              		.global	commReadResCurrFromSH
 22466              		.thumb
 22467              		.thumb_func
 22468              		.type	commReadResCurrFromSH, %function
 22469              	commReadResCurrFromSH:
 22470              	.LFB101:
3497:..\src/command_processing.c **** 
3498:..\src/command_processing.c **** //==============================================================================
3499:..\src/command_processing.c **** //                                  READ RESIDUAL CURRENT FUNCTION FROM SOFTHAND
3500:..\src/command_processing.c **** //==============================================================================
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 498


3501:..\src/command_processing.c **** 
3502:..\src/command_processing.c **** int16 commReadResCurrFromSH()
3503:..\src/command_processing.c **** {
 22471              		.loc 1 3503 0
 22472              		.cfi_startproc
 22473              		@ args = 0, pretend = 0, frame = 32
 22474              		@ frame_needed = 1, uses_anonymous_args = 0
 22475 0000 80B5     		push	{r7, lr}
 22476              		.cfi_def_cfa_offset 8
 22477              		.cfi_offset 7, -8
 22478              		.cfi_offset 14, -4
 22479 0002 88B0     		sub	sp, sp, #32
 22480              		.cfi_def_cfa_offset 40
 22481 0004 00AF     		add	r7, sp, #0
 22482              		.cfi_def_cfa_register 7
3504:..\src/command_processing.c ****     uint8 packet_data[16];
3505:..\src/command_processing.c ****     uint8 packet_lenght;
3506:..\src/command_processing.c ****     int16 curr_diff = 0;
 22483              		.loc 1 3506 0
 22484 0006 0023     		movs	r3, #0
 22485 0008 FB83     		strh	r3, [r7, #30]	@ movhi
3507:..\src/command_processing.c ****     uint32 t_start, t_end;
3508:..\src/command_processing.c ****     uint8 read_flag = TRUE;
 22486              		.loc 1 3508 0
 22487 000a 0123     		movs	r3, #1
 22488 000c 7B77     		strb	r3, [r7, #29]
3509:..\src/command_processing.c **** 
3510:..\src/command_processing.c ****     packet_lenght = 2;
 22489              		.loc 1 3510 0
 22490 000e 0223     		movs	r3, #2
 22491 0010 3B77     		strb	r3, [r7, #28]
3511:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_DIFF;
 22492              		.loc 1 3511 0
 22493 0012 8C23     		movs	r3, #140
 22494 0014 3B71     		strb	r3, [r7, #4]
3512:..\src/command_processing.c ****     packet_data[1] = CMD_GET_CURR_DIFF;
 22495              		.loc 1 3512 0
 22496 0016 8C23     		movs	r3, #140
 22497 0018 7B71     		strb	r3, [r7, #5]
3513:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, c_mem.MS.slave_ID);
 22498              		.loc 1 3513 0
 22499 001a 3B7F     		ldrb	r3, [r7, #28]	@ zero_extendqisi2
 22500 001c 99B2     		uxth	r1, r3
 22501 001e 1D4B     		ldr	r3, .L925
 22502 0020 93F8B122 		ldrb	r2, [r3, #689]	@ zero_extendqisi2
 22503 0024 3B1D     		adds	r3, r7, #4
 22504 0026 1846     		mov	r0, r3
 22505 0028 FFF7FEFF 		bl	commWriteID
3514:..\src/command_processing.c **** 
3515:..\src/command_processing.c ****     t_start = (uint32) MY_TIMER_ReadCounter();
 22506              		.loc 1 3515 0
 22507 002c FFF7FEFF 		bl	MY_TIMER_ReadCounter
 22508 0030 0346     		mov	r3, r0
 22509 0032 BB61     		str	r3, [r7, #24]
3516:..\src/command_processing.c ****     while(g_rx.buffer[0] != CMD_SET_CUFF_INPUTS) {
 22510              		.loc 1 3516 0
 22511 0034 18E0     		b	.L919
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 499


 22512              	.L922:
3517:..\src/command_processing.c ****         if (interrupt_flag){
 22513              		.loc 1 3517 0
 22514 0036 184B     		ldr	r3, .L925+4
 22515 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22516 003a 002B     		cmp	r3, #0
 22517 003c 04D0     		beq	.L920
3518:..\src/command_processing.c ****             interrupt_flag = FALSE;
 22518              		.loc 1 3518 0
 22519 003e 164B     		ldr	r3, .L925+4
 22520 0040 0022     		movs	r2, #0
 22521 0042 1A70     		strb	r2, [r3]
3519:..\src/command_processing.c ****             interrupt_manager();
 22522              		.loc 1 3519 0
 22523 0044 FFF7FEFF 		bl	interrupt_manager
 22524              	.L920:
3520:..\src/command_processing.c ****         }
3521:..\src/command_processing.c **** 
3522:..\src/command_processing.c ****         t_end = (uint32) MY_TIMER_ReadCounter();
 22525              		.loc 1 3522 0
 22526 0048 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 22527 004c 0346     		mov	r3, r0
 22528 004e 7B61     		str	r3, [r7, #20]
3523:..\src/command_processing.c ****         if((t_start - t_end) > 4500000){            // 4.5 s timeout
 22529              		.loc 1 3523 0
 22530 0050 BA69     		ldr	r2, [r7, #24]
 22531 0052 7B69     		ldr	r3, [r7, #20]
 22532 0054 D31A     		subs	r3, r2, r3
 22533 0056 114A     		ldr	r2, .L925+8
 22534 0058 9342     		cmp	r3, r2
 22535 005a 05D9     		bls	.L919
3524:..\src/command_processing.c ****             read_flag = FALSE;
 22536              		.loc 1 3524 0
 22537 005c 0023     		movs	r3, #0
 22538 005e 7B77     		strb	r3, [r7, #29]
3525:..\src/command_processing.c ****             master_mode = 0;                // Exit from master mode
 22539              		.loc 1 3525 0
 22540 0060 0F4B     		ldr	r3, .L925+12
 22541 0062 0022     		movs	r2, #0
 22542 0064 1A70     		strb	r2, [r3]
3526:..\src/command_processing.c ****             break;
 22543              		.loc 1 3526 0
 22544 0066 03E0     		b	.L921
 22545              	.L919:
3516:..\src/command_processing.c ****         if (interrupt_flag){
 22546              		.loc 1 3516 0
 22547 0068 0E4B     		ldr	r3, .L925+16
 22548 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22549 006c 8E2B     		cmp	r3, #142
 22550 006e E2D1     		bne	.L922
 22551              	.L921:
3527:..\src/command_processing.c ****         }
3528:..\src/command_processing.c ****     }
3529:..\src/command_processing.c **** 
3530:..\src/command_processing.c ****     if (read_flag) {
 22552              		.loc 1 3530 0
 22553 0070 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 500


 22554 0072 002B     		cmp	r3, #0
 22555 0074 08D0     		beq	.L923
3531:..\src/command_processing.c ****         curr_diff = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);                        
 22556              		.loc 1 3531 0
 22557 0076 0B4B     		ldr	r3, .L925+16
 22558 0078 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22559 007a 1B02     		lsls	r3, r3, #8
 22560 007c 1AB2     		sxth	r2, r3
 22561 007e 094B     		ldr	r3, .L925+16
 22562 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 22563 0082 1BB2     		sxth	r3, r3
 22564 0084 1343     		orrs	r3, r3, r2
 22565 0086 FB83     		strh	r3, [r7, #30]	@ movhi
 22566              	.L923:
3532:..\src/command_processing.c ****     }
3533:..\src/command_processing.c ****     
3534:..\src/command_processing.c ****     return curr_diff;
 22567              		.loc 1 3534 0
 22568 0088 B7F91E30 		ldrsh	r3, [r7, #30]
3535:..\src/command_processing.c **** }
 22569              		.loc 1 3535 0
 22570 008c 1846     		mov	r0, r3
 22571 008e 2037     		adds	r7, r7, #32
 22572              		.cfi_def_cfa_offset 8
 22573 0090 BD46     		mov	sp, r7
 22574              		.cfi_def_cfa_register 13
 22575              		@ sp needed
 22576 0092 80BD     		pop	{r7, pc}
 22577              	.L926:
 22578              		.align	2
 22579              	.L925:
 22580 0094 00000000 		.word	c_mem
 22581 0098 00000000 		.word	interrupt_flag
 22582 009c 20AA4400 		.word	4500000
 22583 00a0 00000000 		.word	master_mode
 22584 00a4 00000000 		.word	g_rx
 22585              		.cfi_endproc
 22586              	.LFE101:
 22587              		.size	commReadResCurrFromSH, .-commReadResCurrFromSH
 22588              		.section	.text.cmd_set_baudrate,"ax",%progbits
 22589              		.align	2
 22590              		.global	cmd_set_baudrate
 22591              		.thumb
 22592              		.thumb_func
 22593              		.type	cmd_set_baudrate, %function
 22594              	cmd_set_baudrate:
 22595              	.LFB102:
3536:..\src/command_processing.c **** 
3537:..\src/command_processing.c **** void cmd_set_baudrate(){
 22596              		.loc 1 3537 0
 22597              		.cfi_startproc
 22598              		@ args = 0, pretend = 0, frame = 0
 22599              		@ frame_needed = 1, uses_anonymous_args = 0
 22600 0000 80B5     		push	{r7, lr}
 22601              		.cfi_def_cfa_offset 8
 22602              		.cfi_offset 7, -8
 22603              		.cfi_offset 14, -4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 501


 22604 0002 00AF     		add	r7, sp, #0
 22605              		.cfi_def_cfa_register 7
3538:..\src/command_processing.c ****     
3539:..\src/command_processing.c ****     // Set BaudRate
3540:..\src/command_processing.c ****     c_mem.dev.baud_rate = g_rx.buffer[1];
 22606              		.loc 1 3540 0
 22607 0004 094B     		ldr	r3, .L932
 22608 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 22609 0008 094B     		ldr	r3, .L932+4
 22610 000a 83F8AA20 		strb	r2, [r3, #170]
3541:..\src/command_processing.c ****     
3542:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 22611              		.loc 1 3542 0
 22612 000e 074B     		ldr	r3, .L932
 22613 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 22614 0012 0D2B     		cmp	r3, #13
 22615 0014 04D1     		bne	.L931
3543:..\src/command_processing.c ****         case 13:
3544:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 22616              		.loc 1 3544 0
 22617 0016 0121     		movs	r1, #1
 22618 0018 0C20     		movs	r0, #12
 22619 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
3545:..\src/command_processing.c ****             break;
 22620              		.loc 1 3545 0
 22621 001e 03E0     		b	.L930
 22622              	.L931:
3546:..\src/command_processing.c ****         default:
3547:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 22623              		.loc 1 3547 0
 22624 0020 0121     		movs	r1, #1
 22625 0022 0220     		movs	r0, #2
 22626 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 22627              	.L930:
3548:..\src/command_processing.c ****     }
3549:..\src/command_processing.c **** }
 22628              		.loc 1 3549 0
 22629 0028 00BF     		nop
 22630 002a 80BD     		pop	{r7, pc}
 22631              	.L933:
 22632              		.align	2
 22633              	.L932:
 22634 002c 00000000 		.word	g_rx
 22635 0030 00000000 		.word	c_mem
 22636              		.cfi_endproc
 22637              	.LFE102:
 22638              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 22639              		.section	.text.cmd_ping,"ax",%progbits
 22640              		.align	2
 22641              		.global	cmd_ping
 22642              		.thumb
 22643              		.thumb_func
 22644              		.type	cmd_ping, %function
 22645              	cmd_ping:
 22646              	.LFB103:
3550:..\src/command_processing.c **** 
3551:..\src/command_processing.c **** void cmd_ping(){
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 502


 22647              		.loc 1 3551 0
 22648              		.cfi_startproc
 22649              		@ args = 0, pretend = 0, frame = 8
 22650              		@ frame_needed = 1, uses_anonymous_args = 0
 22651 0000 80B5     		push	{r7, lr}
 22652              		.cfi_def_cfa_offset 8
 22653              		.cfi_offset 7, -8
 22654              		.cfi_offset 14, -4
 22655 0002 82B0     		sub	sp, sp, #8
 22656              		.cfi_def_cfa_offset 16
 22657 0004 00AF     		add	r7, sp, #0
 22658              		.cfi_def_cfa_register 7
3552:..\src/command_processing.c **** 
3553:..\src/command_processing.c ****     uint8 packet_data[2];
3554:..\src/command_processing.c **** 
3555:..\src/command_processing.c ****     // Header
3556:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 22659              		.loc 1 3556 0
 22660 0006 0023     		movs	r3, #0
 22661 0008 3B71     		strb	r3, [r7, #4]
3557:..\src/command_processing.c ****     
3558:..\src/command_processing.c ****     // Load Payload
3559:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 22662              		.loc 1 3559 0
 22663 000a 0023     		movs	r3, #0
 22664 000c 7B71     		strb	r3, [r7, #5]
3560:..\src/command_processing.c **** 
3561:..\src/command_processing.c ****     // Send Package to uart
3562:..\src/command_processing.c ****     commWrite(packet_data, 2);
 22665              		.loc 1 3562 0
 22666 000e 3B1D     		adds	r3, r7, #4
 22667 0010 0221     		movs	r1, #2
 22668 0012 1846     		mov	r0, r3
 22669 0014 FFF7FEFF 		bl	commWrite
3563:..\src/command_processing.c **** }
 22670              		.loc 1 3563 0
 22671 0018 00BF     		nop
 22672 001a 0837     		adds	r7, r7, #8
 22673              		.cfi_def_cfa_offset 8
 22674 001c BD46     		mov	sp, r7
 22675              		.cfi_def_cfa_register 13
 22676              		@ sp needed
 22677 001e 80BD     		pop	{r7, pc}
 22678              		.cfi_endproc
 22679              	.LFE103:
 22680              		.size	cmd_ping, .-cmd_ping
 22681              		.section	.text.cmd_get_inputs,"ax",%progbits
 22682              		.align	2
 22683              		.global	cmd_get_inputs
 22684              		.thumb
 22685              		.thumb_func
 22686              		.type	cmd_get_inputs, %function
 22687              	cmd_get_inputs:
 22688              	.LFB104:
3564:..\src/command_processing.c **** 
3565:..\src/command_processing.c **** void cmd_get_inputs(){
 22689              		.loc 1 3565 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 503


 22690              		.cfi_startproc
 22691              		@ args = 0, pretend = 0, frame = 16
 22692              		@ frame_needed = 1, uses_anonymous_args = 0
 22693 0000 80B5     		push	{r7, lr}
 22694              		.cfi_def_cfa_offset 8
 22695              		.cfi_offset 7, -8
 22696              		.cfi_offset 14, -4
 22697 0002 84B0     		sub	sp, sp, #16
 22698              		.cfi_def_cfa_offset 24
 22699 0004 00AF     		add	r7, sp, #0
 22700              		.cfi_def_cfa_register 7
3566:..\src/command_processing.c **** 
3567:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
3568:..\src/command_processing.c **** 
3569:..\src/command_processing.c ****     uint8 packet_data[6]; 
3570:..\src/command_processing.c ****     int16 aux_int16;
3571:..\src/command_processing.c ****     
3572:..\src/command_processing.c ****     //Header package
3573:..\src/command_processing.c **** 
3574:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 22701              		.loc 1 3574 0
 22702 0006 8323     		movs	r3, #131
 22703 0008 3B72     		strb	r3, [r7, #8]
3575:..\src/command_processing.c ****         
3576:..\src/command_processing.c ****     aux_int16 = (int16)(g_refOld[0].pos >> g_mem.enc[g_mem.motor[0].encoder_line].res[0]);
 22704              		.loc 1 3576 0
 22705 000a 164B     		ldr	r3, .L936
 22706 000c 1A68     		ldr	r2, [r3]
 22707 000e 164B     		ldr	r3, .L936+4
 22708 0010 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22709 0014 1846     		mov	r0, r3
 22710 0016 1449     		ldr	r1, .L936+4
 22711 0018 0346     		mov	r3, r0
 22712 001a 5B00     		lsls	r3, r3, #1
 22713 001c 0344     		add	r3, r3, r0
 22714 001e 1B01     		lsls	r3, r3, #4
 22715 0020 0B44     		add	r3, r3, r1
 22716 0022 03F29513 		addw	r3, r3, #405
 22717 0026 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22718 0028 42FA03F3 		asr	r3, r2, r3
 22719 002c 1BB2     		sxth	r3, r3
 22720 002e FB80     		strh	r3, [r7, #6]	@ movhi
3577:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 22721              		.loc 1 3577 0
 22722 0030 BB1D     		adds	r3, r7, #6
 22723 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22724 0034 BB72     		strb	r3, [r7, #10]
3578:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 22725              		.loc 1 3578 0
 22726 0036 BB1D     		adds	r3, r7, #6
 22727 0038 0133     		adds	r3, r3, #1
 22728 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22729 003c 7B72     		strb	r3, [r7, #9]
3579:..\src/command_processing.c ****     
3580:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3581:..\src/command_processing.c **** 
3582:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 504


 22730              		.loc 1 3582 0
 22731 003e 07F10803 		add	r3, r7, #8
 22732 0042 0521     		movs	r1, #5
 22733 0044 1846     		mov	r0, r3
 22734 0046 FFF7FEFF 		bl	LCRChecksum
 22735 004a 0346     		mov	r3, r0
 22736 004c 7B73     		strb	r3, [r7, #13]
3583:..\src/command_processing.c **** 
3584:..\src/command_processing.c ****     commWrite(packet_data, 6);
 22737              		.loc 1 3584 0
 22738 004e 07F10803 		add	r3, r7, #8
 22739 0052 0621     		movs	r1, #6
 22740 0054 1846     		mov	r0, r3
 22741 0056 FFF7FEFF 		bl	commWrite
3585:..\src/command_processing.c **** }
 22742              		.loc 1 3585 0
 22743 005a 00BF     		nop
 22744 005c 1037     		adds	r7, r7, #16
 22745              		.cfi_def_cfa_offset 8
 22746 005e BD46     		mov	sp, r7
 22747              		.cfi_def_cfa_register 13
 22748              		@ sp needed
 22749 0060 80BD     		pop	{r7, pc}
 22750              	.L937:
 22751 0062 00BF     		.align	2
 22752              	.L936:
 22753 0064 00000000 		.word	g_refOld
 22754 0068 00000000 		.word	g_mem
 22755              		.cfi_endproc
 22756              	.LFE104:
 22757              		.size	cmd_get_inputs, .-cmd_get_inputs
 22758              		.section	.text.cmd_store_params,"ax",%progbits
 22759              		.align	2
 22760              		.global	cmd_store_params
 22761              		.thumb
 22762              		.thumb_func
 22763              		.type	cmd_store_params, %function
 22764              	cmd_store_params:
 22765              	.LFB105:
3586:..\src/command_processing.c **** 
3587:..\src/command_processing.c **** void cmd_store_params(){
 22766              		.loc 1 3587 0
 22767              		.cfi_startproc
 22768              		@ args = 0, pretend = 0, frame = 16
 22769              		@ frame_needed = 1, uses_anonymous_args = 0
 22770 0000 80B5     		push	{r7, lr}
 22771              		.cfi_def_cfa_offset 8
 22772              		.cfi_offset 7, -8
 22773              		.cfi_offset 14, -4
 22774 0002 84B0     		sub	sp, sp, #16
 22775              		.cfi_def_cfa_offset 24
 22776 0004 00AF     		add	r7, sp, #0
 22777              		.cfi_def_cfa_register 7
3588:..\src/command_processing.c ****     
3589:..\src/command_processing.c ****     // Check input mode enabled
3590:..\src/command_processing.c ****     uint32 off_1;
3591:..\src/command_processing.c ****     float mult_1;
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 505


3592:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 22778              		.loc 1 3592 0
 22779 0006 0223     		movs	r3, #2
 22780 0008 FB73     		strb	r3, [r7, #15]
3593:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
3594:..\src/command_processing.c ****     uint8 CYDATA old_id;
3595:..\src/command_processing.c ****     
3596:..\src/command_processing.c ****     if( c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL ) {
 22781              		.loc 1 3596 0
 22782 000a 674B     		ldr	r3, .L949
 22783 000c 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 22784 0010 002B     		cmp	r3, #0
 22785 0012 7CD1     		bne	.L939
3597:..\src/command_processing.c ****         off_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_off[0];
 22786              		.loc 1 3597 0
 22787 0014 644B     		ldr	r3, .L949
 22788 0016 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22789 001a 1946     		mov	r1, r3
 22790 001c 624A     		ldr	r2, .L949
 22791 001e 0B46     		mov	r3, r1
 22792 0020 5B00     		lsls	r3, r3, #1
 22793 0022 0B44     		add	r3, r3, r1
 22794 0024 1B01     		lsls	r3, r3, #4
 22795 0026 1344     		add	r3, r3, r2
 22796 0028 03F5CC73 		add	r3, r3, #408
 22797 002c 1B68     		ldr	r3, [r3]
 22798 002e BB60     		str	r3, [r7, #8]
3598:..\src/command_processing.c ****         mult_1 = c_mem.enc[c_mem.motor[0].encoder_line].m_mult[0];
 22799              		.loc 1 3598 0
 22800 0030 5D4B     		ldr	r3, .L949
 22801 0032 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22802 0036 1946     		mov	r1, r3
 22803 0038 5B4A     		ldr	r2, .L949
 22804 003a 0B46     		mov	r3, r1
 22805 003c 5B00     		lsls	r3, r3, #1
 22806 003e 0B44     		add	r3, r3, r1
 22807 0040 1B01     		lsls	r3, r3, #4
 22808 0042 1344     		add	r3, r3, r2
 22809 0044 03F5D273 		add	r3, r3, #420
 22810 0048 1B68     		ldr	r3, [r3]	@ float
 22811 004a 7B60     		str	r3, [r7, #4]	@ float
3599:..\src/command_processing.c **** 
3600:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos / mult_1);
 22812              		.loc 1 3600 0
 22813 004c 574B     		ldr	r3, .L949+4
 22814 004e 1B68     		ldr	r3, [r3]
 22815 0050 1846     		mov	r0, r3
 22816 0052 FFF7FEFF 		bl	__aeabi_i2f
 22817 0056 0346     		mov	r3, r0
 22818 0058 7968     		ldr	r1, [r7, #4]	@ float
 22819 005a 1846     		mov	r0, r3
 22820 005c FFF7FEFF 		bl	__aeabi_fdiv
 22821 0060 0346     		mov	r3, r0
 22822 0062 1846     		mov	r0, r3
 22823 0064 FFF7FEFF 		bl	__aeabi_f2iz
 22824 0068 0246     		mov	r2, r0
 22825 006a 504B     		ldr	r3, .L949+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 506


 22826 006c 1A60     		str	r2, [r3]
3601:..\src/command_processing.c **** 
3602:..\src/command_processing.c ****         g_refNew[0].pos = (int32)((float)g_refNew[0].pos * g_mem.enc[c_mem.motor[0].encoder_line].m
 22827              		.loc 1 3602 0
 22828 006e 4F4B     		ldr	r3, .L949+4
 22829 0070 1B68     		ldr	r3, [r3]
 22830 0072 1846     		mov	r0, r3
 22831 0074 FFF7FEFF 		bl	__aeabi_i2f
 22832 0078 4B4B     		ldr	r3, .L949
 22833 007a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22834 007e 1946     		mov	r1, r3
 22835 0080 4B4A     		ldr	r2, .L949+8
 22836 0082 0B46     		mov	r3, r1
 22837 0084 5B00     		lsls	r3, r3, #1
 22838 0086 0B44     		add	r3, r3, r1
 22839 0088 1B01     		lsls	r3, r3, #4
 22840 008a 1344     		add	r3, r3, r2
 22841 008c 03F5D273 		add	r3, r3, #420
 22842 0090 1B68     		ldr	r3, [r3]	@ float
 22843 0092 1946     		mov	r1, r3
 22844 0094 FFF7FEFF 		bl	__aeabi_fmul
 22845 0098 0346     		mov	r3, r0
 22846 009a 1846     		mov	r0, r3
 22847 009c FFF7FEFF 		bl	__aeabi_f2iz
 22848 00a0 0246     		mov	r2, r0
 22849 00a2 424B     		ldr	r3, .L949+4
 22850 00a4 1A60     		str	r2, [r3]
3603:..\src/command_processing.c **** 
3604:..\src/command_processing.c ****         g_refNew[0].pos += (g_mem.enc[c_mem.motor[0].encoder_line].m_off[0] - off_1);
 22851              		.loc 1 3604 0
 22852 00a6 414B     		ldr	r3, .L949+4
 22853 00a8 1B68     		ldr	r3, [r3]
 22854 00aa 1846     		mov	r0, r3
 22855 00ac 3E4B     		ldr	r3, .L949
 22856 00ae 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 22857 00b2 1946     		mov	r1, r3
 22858 00b4 3E4A     		ldr	r2, .L949+8
 22859 00b6 0B46     		mov	r3, r1
 22860 00b8 5B00     		lsls	r3, r3, #1
 22861 00ba 0B44     		add	r3, r3, r1
 22862 00bc 1B01     		lsls	r3, r3, #4
 22863 00be 1344     		add	r3, r3, r2
 22864 00c0 03F5CC73 		add	r3, r3, #408
 22865 00c4 1B68     		ldr	r3, [r3]
 22866 00c6 1A46     		mov	r2, r3
 22867 00c8 BB68     		ldr	r3, [r7, #8]
 22868 00ca D31A     		subs	r3, r2, r3
 22869 00cc 0344     		add	r3, r3, r0
 22870 00ce 1A46     		mov	r2, r3
 22871 00d0 364B     		ldr	r3, .L949+4
 22872 00d2 1A60     		str	r2, [r3]
3605:..\src/command_processing.c ****         
3606:..\src/command_processing.c ****         // Check position Limits
3607:..\src/command_processing.c **** 
3608:..\src/command_processing.c ****         if (c_mem.motor[0].pos_lim_flag) {                   // position limiting
 22873              		.loc 1 3608 0
 22874 00d4 344B     		ldr	r3, .L949
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 507


 22875 00d6 93F8E330 		ldrb	r3, [r3, #227]	@ zero_extendqisi2
 22876 00da 002B     		cmp	r3, #0
 22877 00dc 17D0     		beq	.L939
3609:..\src/command_processing.c ****             if (g_refNew[0].pos < c_mem.motor[0].pos_lim_inf) 
 22878              		.loc 1 3609 0
 22879 00de 334B     		ldr	r3, .L949+4
 22880 00e0 1A68     		ldr	r2, [r3]
 22881 00e2 314B     		ldr	r3, .L949
 22882 00e4 D3F8E430 		ldr	r3, [r3, #228]
 22883 00e8 9A42     		cmp	r2, r3
 22884 00ea 04DA     		bge	.L940
3610:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_inf;
 22885              		.loc 1 3610 0
 22886 00ec 2E4B     		ldr	r3, .L949
 22887 00ee D3F8E430 		ldr	r3, [r3, #228]
 22888 00f2 2E4A     		ldr	r2, .L949+4
 22889 00f4 1360     		str	r3, [r2]
 22890              	.L940:
3611:..\src/command_processing.c **** 
3612:..\src/command_processing.c ****             if (g_refNew[0].pos > c_mem.motor[0].pos_lim_sup) 
 22891              		.loc 1 3612 0
 22892 00f6 2D4B     		ldr	r3, .L949+4
 22893 00f8 1A68     		ldr	r2, [r3]
 22894 00fa 2B4B     		ldr	r3, .L949
 22895 00fc D3F8E830 		ldr	r3, [r3, #232]
 22896 0100 9A42     		cmp	r2, r3
 22897 0102 04DD     		ble	.L939
3613:..\src/command_processing.c ****                 g_refNew[0].pos = c_mem.motor[0].pos_lim_sup;
 22898              		.loc 1 3613 0
 22899 0104 284B     		ldr	r3, .L949
 22900 0106 D3F8E830 		ldr	r3, [r3, #232]
 22901 010a 284A     		ldr	r2, .L949+4
 22902 010c 1360     		str	r3, [r2]
 22903              	.L939:
3614:..\src/command_processing.c ****         }
3615:..\src/command_processing.c ****     }
3616:..\src/command_processing.c ****     
3617:..\src/command_processing.c ****     // If SD is used, create new param and data file
3618:..\src/command_processing.c ****     if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 22904              		.loc 1 3618 0
 22905 010e 264B     		ldr	r3, .L949
 22906 0110 93F82632 		ldrb	r3, [r3, #550]	@ zero_extendqisi2
 22907 0114 012B     		cmp	r3, #1
 22908 0116 06D1     		bne	.L941
3619:..\src/command_processing.c ****         FS_FClose(pFile);
 22909              		.loc 1 3619 0
 22910 0118 264B     		ldr	r3, .L949+12
 22911 011a 1B68     		ldr	r3, [r3]
 22912 011c 1846     		mov	r0, r3
 22913 011e FFF7FEFF 		bl	FS_FClose
3620:..\src/command_processing.c ****         
3621:..\src/command_processing.c ****         InitSD_FS();
 22914              		.loc 1 3621 0
 22915 0122 FFF7FEFF 		bl	InitSD_FS
 22916              	.L941:
3622:..\src/command_processing.c ****     }
3623:..\src/command_processing.c ****    
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 508


3624:..\src/command_processing.c ****     // Store params 
3625:..\src/command_processing.c **** 
3626:..\src/command_processing.c ****     if (c_mem.dev.id != g_mem.dev.id) {     //If a new id is going to be set we will lose communica
 22917              		.loc 1 3626 0
 22918 0126 204B     		ldr	r3, .L949
 22919 0128 93F8A020 		ldrb	r2, [r3, #160]	@ zero_extendqisi2
 22920 012c 204B     		ldr	r3, .L949+8
 22921 012e 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 22922 0132 9A42     		cmp	r2, r3
 22923 0134 21D0     		beq	.L942
3627:..\src/command_processing.c ****         old_id = c_mem.dev.id;          //after the memstore(0) and the ACK won't be recognised
 22924              		.loc 1 3627 0
 22925 0136 1C4B     		ldr	r3, .L949
 22926 0138 93F8A030 		ldrb	r3, [r3, #160]
 22927 013c FB70     		strb	r3, [r7, #3]
3628:..\src/command_processing.c ****         if(memStore(0)) {
 22928              		.loc 1 3628 0
 22929 013e 0020     		movs	r0, #0
 22930 0140 FFF7FEFF 		bl	memStore
 22931 0144 0346     		mov	r3, r0
 22932 0146 002B     		cmp	r3, #0
 22933 0148 0BD0     		beq	.L943
3629:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 22934              		.loc 1 3629 0
 22935 014a 0123     		movs	r3, #1
 22936 014c 3B70     		strb	r3, [r7]
3630:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 22937              		.loc 1 3630 0
 22938 014e 0123     		movs	r3, #1
 22939 0150 7B70     		strb	r3, [r7, #1]
3631:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 22940              		.loc 1 3631 0
 22941 0152 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22942 0154 99B2     		uxth	r1, r3
 22943 0156 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22944 0158 3B46     		mov	r3, r7
 22945 015a 1846     		mov	r0, r3
 22946 015c FFF7FEFF 		bl	commWrite_old_id
 22947 0160 18E0     		b	.L945
 22948              	.L943:
3632:..\src/command_processing.c ****         }    
3633:..\src/command_processing.c ****         else{
3634:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 22949              		.loc 1 3634 0
 22950 0162 0023     		movs	r3, #0
 22951 0164 3B70     		strb	r3, [r7]
3635:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 22952              		.loc 1 3635 0
 22953 0166 0023     		movs	r3, #0
 22954 0168 7B70     		strb	r3, [r7, #1]
3636:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 22955              		.loc 1 3636 0
 22956 016a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 22957 016c 99B2     		uxth	r1, r3
 22958 016e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 22959 0170 3B46     		mov	r3, r7
 22960 0172 1846     		mov	r0, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 509


 22961 0174 FFF7FEFF 		bl	commWrite_old_id
 22962 0178 0CE0     		b	.L945
 22963              	.L942:
3637:..\src/command_processing.c ****         }
3638:..\src/command_processing.c ****     }    
3639:..\src/command_processing.c ****     else {
3640:..\src/command_processing.c ****         if(memStore(0))
 22964              		.loc 1 3640 0
 22965 017a 0020     		movs	r0, #0
 22966 017c FFF7FEFF 		bl	memStore
 22967 0180 0346     		mov	r3, r0
 22968 0182 002B     		cmp	r3, #0
 22969 0184 03D0     		beq	.L946
3641:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 22970              		.loc 1 3641 0
 22971 0186 0120     		movs	r0, #1
 22972 0188 FFF7FEFF 		bl	sendAcknowledgment
 22973 018c 02E0     		b	.L945
 22974              	.L946:
3642:..\src/command_processing.c ****         else
3643:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 22975              		.loc 1 3643 0
 22976 018e 0020     		movs	r0, #0
 22977 0190 FFF7FEFF 		bl	sendAcknowledgment
 22978              	.L945:
3644:..\src/command_processing.c ****     }
3645:..\src/command_processing.c ****     
3646:..\src/command_processing.c ****     // FW reset (if necessary)
3647:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 22979              		.loc 1 3647 0
 22980 0194 084B     		ldr	r3, .L949+16
 22981 0196 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 22982 0198 012B     		cmp	r3, #1
 22983 019a 01D1     		bne	.L948
3648:..\src/command_processing.c ****         CySoftwareReset();
 22984              		.loc 1 3648 0
 22985 019c FFF7FEFF 		bl	CySoftwareReset
 22986              	.L948:
3649:..\src/command_processing.c ****     }
3650:..\src/command_processing.c **** }
 22987              		.loc 1 3650 0
 22988 01a0 00BF     		nop
 22989 01a2 1037     		adds	r7, r7, #16
 22990              		.cfi_def_cfa_offset 8
 22991 01a4 BD46     		mov	sp, r7
 22992              		.cfi_def_cfa_register 13
 22993              		@ sp needed
 22994 01a6 80BD     		pop	{r7, pc}
 22995              	.L950:
 22996              		.align	2
 22997              	.L949:
 22998 01a8 00000000 		.word	c_mem
 22999 01ac 00000000 		.word	g_refNew
 23000 01b0 00000000 		.word	g_mem
 23001 01b4 00000000 		.word	pFile
 23002 01b8 00000000 		.word	reset_PSoC_flag
 23003              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 510


 23004              	.LFE105:
 23005              		.size	cmd_store_params, .-cmd_store_params
 23006              		.section	.text.cmd_get_emg,"ax",%progbits
 23007              		.align	2
 23008              		.global	cmd_get_emg
 23009              		.thumb
 23010              		.thumb_func
 23011              		.type	cmd_get_emg, %function
 23012              	cmd_get_emg:
 23013              	.LFB106:
3651:..\src/command_processing.c **** 
3652:..\src/command_processing.c **** void cmd_get_emg(){
 23014              		.loc 1 3652 0
 23015              		.cfi_startproc
 23016              		@ args = 0, pretend = 0, frame = 16
 23017              		@ frame_needed = 1, uses_anonymous_args = 0
 23018 0000 80B5     		push	{r7, lr}
 23019              		.cfi_def_cfa_offset 8
 23020              		.cfi_offset 7, -8
 23021              		.cfi_offset 14, -4
 23022 0002 84B0     		sub	sp, sp, #16
 23023              		.cfi_def_cfa_offset 24
 23024 0004 00AF     		add	r7, sp, #0
 23025              		.cfi_def_cfa_register 7
3653:..\src/command_processing.c ****     
3654:..\src/command_processing.c ****     uint8 packet_data[6];
3655:..\src/command_processing.c ****     int16 aux_int16;
3656:..\src/command_processing.c ****     
3657:..\src/command_processing.c ****     // Header        
3658:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 23026              		.loc 1 3658 0
 23027 0006 8823     		movs	r3, #136
 23028 0008 3B72     		strb	r3, [r7, #8]
3659:..\src/command_processing.c ****     
3660:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[0];
 23029              		.loc 1 3660 0
 23030 000a 144B     		ldr	r3, .L952
 23031 000c 1B68     		ldr	r3, [r3]
 23032 000e 1BB2     		sxth	r3, r3
 23033 0010 FB80     		strh	r3, [r7, #6]	@ movhi
3661:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 23034              		.loc 1 3661 0
 23035 0012 BB1D     		adds	r3, r7, #6
 23036 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23037 0016 BB72     		strb	r3, [r7, #10]
3662:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 23038              		.loc 1 3662 0
 23039 0018 BB1D     		adds	r3, r7, #6
 23040 001a 0133     		adds	r3, r3, #1
 23041 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23042 001e 7B72     		strb	r3, [r7, #9]
3663:..\src/command_processing.c ****     
3664:..\src/command_processing.c ****     aux_int16 = (int16) g_adc_measOld.emg[1];
 23043              		.loc 1 3664 0
 23044 0020 0E4B     		ldr	r3, .L952
 23045 0022 5B68     		ldr	r3, [r3, #4]
 23046 0024 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 511


 23047 0026 FB80     		strh	r3, [r7, #6]	@ movhi
3665:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 23048              		.loc 1 3665 0
 23049 0028 BB1D     		adds	r3, r7, #6
 23050 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23051 002c 3B73     		strb	r3, [r7, #12]
3666:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 23052              		.loc 1 3666 0
 23053 002e BB1D     		adds	r3, r7, #6
 23054 0030 0133     		adds	r3, r3, #1
 23055 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23056 0034 FB72     		strb	r3, [r7, #11]
3667:..\src/command_processing.c **** 
3668:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 23057              		.loc 1 3668 0
 23058 0036 07F10803 		add	r3, r7, #8
 23059 003a 0521     		movs	r1, #5
 23060 003c 1846     		mov	r0, r3
 23061 003e FFF7FEFF 		bl	LCRChecksum
 23062 0042 0346     		mov	r3, r0
 23063 0044 7B73     		strb	r3, [r7, #13]
3669:..\src/command_processing.c **** 
3670:..\src/command_processing.c ****     commWrite(packet_data, 6);
 23064              		.loc 1 3670 0
 23065 0046 07F10803 		add	r3, r7, #8
 23066 004a 0621     		movs	r1, #6
 23067 004c 1846     		mov	r0, r3
 23068 004e FFF7FEFF 		bl	commWrite
3671:..\src/command_processing.c **** 
3672:..\src/command_processing.c **** }
 23069              		.loc 1 3672 0
 23070 0052 00BF     		nop
 23071 0054 1037     		adds	r7, r7, #16
 23072              		.cfi_def_cfa_offset 8
 23073 0056 BD46     		mov	sp, r7
 23074              		.cfi_def_cfa_register 13
 23075              		@ sp needed
 23076 0058 80BD     		pop	{r7, pc}
 23077              	.L953:
 23078 005a 00BF     		.align	2
 23079              	.L952:
 23080 005c 00000000 		.word	g_adc_measOld
 23081              		.cfi_endproc
 23082              	.LFE106:
 23083              		.size	cmd_get_emg, .-cmd_get_emg
 23084              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 23085              		.align	2
 23086              		.global	cmd_get_imu_readings
 23087              		.thumb
 23088              		.thumb_func
 23089              		.type	cmd_get_imu_readings, %function
 23090              	cmd_get_imu_readings:
 23091              	.LFB107:
3673:..\src/command_processing.c **** 
3674:..\src/command_processing.c **** void cmd_get_imu_readings(){
 23092              		.loc 1 3674 0
 23093              		.cfi_startproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 512


 23094              		@ args = 0, pretend = 0, frame = 400
 23095              		@ frame_needed = 1, uses_anonymous_args = 0
 23096 0000 90B5     		push	{r4, r7, lr}
 23097              		.cfi_def_cfa_offset 12
 23098              		.cfi_offset 4, -12
 23099              		.cfi_offset 7, -8
 23100              		.cfi_offset 14, -4
 23101 0002 E5B0     		sub	sp, sp, #404
 23102              		.cfi_def_cfa_offset 416
 23103 0004 00AF     		add	r7, sp, #0
 23104              		.cfi_def_cfa_register 7
3675:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
3676:..\src/command_processing.c ****     
3677:..\src/command_processing.c ****     uint8 k_imu;
3678:..\src/command_processing.c ****     uint16 c = 1;
 23105              		.loc 1 3678 0
 23106 0006 0123     		movs	r3, #1
 23107 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3679:..\src/command_processing.c ****     uint8 k = 0;
 23108              		.loc 1 3679 0
 23109 000c 0023     		movs	r3, #0
 23110 000e 87F88B31 		strb	r3, [r7, #395]
3680:..\src/command_processing.c ****     uint16 gl_c = 1;
 23111              		.loc 1 3680 0
 23112 0012 0123     		movs	r3, #1
 23113 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
3681:..\src/command_processing.c ****     int16 aux_int16;
3682:..\src/command_processing.c ****     float aux_float;
3683:..\src/command_processing.c ****     
3684:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
3685:..\src/command_processing.c ****     uint8 packet_data[350];
3686:..\src/command_processing.c ****     uint8 single_packet[32];
3687:..\src/command_processing.c ****     
3688:..\src/command_processing.c ****     //Header package 
3689:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 23114              		.loc 1 3689 0
 23115 0018 07F12003 		add	r3, r7, #32
 23116 001c A122     		movs	r2, #161
 23117 001e 1A70     		strb	r2, [r3]
3690:..\src/command_processing.c ****  
3691:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 23118              		.loc 1 3691 0
 23119 0020 0023     		movs	r3, #0
 23120 0022 87F88F31 		strb	r3, [r7, #399]
 23121 0026 82E2     		b	.L955
 23122              	.L971:
3692:..\src/command_processing.c ****     {	
3693:..\src/command_processing.c ****             
3694:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 23123              		.loc 1 3694 0
 23124 0028 3B46     		mov	r3, r7
 23125 002a 3A22     		movs	r2, #58
 23126 002c 1A70     		strb	r2, [r3]
3695:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][0]){
 23127              		.loc 1 3695 0
 23128 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23129 0032 DB4A     		ldr	r2, .L972
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 513


 23130 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23131 0036 1946     		mov	r1, r3
 23132 0038 DA4A     		ldr	r2, .L972+4
 23133 003a 0B46     		mov	r3, r1
 23134 003c 9B00     		lsls	r3, r3, #2
 23135 003e 0B44     		add	r3, r3, r1
 23136 0040 1344     		add	r3, r3, r2
 23137 0042 03F20223 		addw	r3, r3, #514
 23138 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23139 0048 002B     		cmp	r3, #0
 23140 004a 5DD0     		beq	.L956
3696:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 23141              		.loc 1 3696 0
 23142 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23143 0050 D549     		ldr	r1, .L972+8
 23144 0052 1346     		mov	r3, r2
 23145 0054 9B00     		lsls	r3, r3, #2
 23146 0056 1344     		add	r3, r3, r2
 23147 0058 DB00     		lsls	r3, r3, #3
 23148 005a 0B44     		add	r3, r3, r1
 23149 005c 0233     		adds	r3, r3, #2
 23150 005e B3F90030 		ldrsh	r3, [r3]
 23151 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
3697:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23152              		.loc 1 3697 0
 23153 0066 B7F88C31 		ldrh	r3, [r7, #396]
 23154 006a 0133     		adds	r3, r3, #1
 23155 006c 07F5C372 		add	r2, r7, #390
 23156 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23157 0072 3A46     		mov	r2, r7
 23158 0074 D154     		strb	r1, [r2, r3]
3698:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23159              		.loc 1 3698 0
 23160 0076 B7F88C21 		ldrh	r2, [r7, #396]
 23161 007a 07F5C373 		add	r3, r7, #390
 23162 007e 0133     		adds	r3, r3, #1
 23163 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23164 0082 3B46     		mov	r3, r7
 23165 0084 9954     		strb	r1, [r3, r2]
3699:..\src/command_processing.c **** 
3700:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 23166              		.loc 1 3700 0
 23167 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23168 008a C749     		ldr	r1, .L972+8
 23169 008c 1346     		mov	r3, r2
 23170 008e 9B00     		lsls	r3, r3, #2
 23171 0090 1344     		add	r3, r3, r2
 23172 0092 DB00     		lsls	r3, r3, #3
 23173 0094 0B44     		add	r3, r3, r1
 23174 0096 0433     		adds	r3, r3, #4
 23175 0098 B3F90030 		ldrsh	r3, [r3]
 23176 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
3701:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23177              		.loc 1 3701 0
 23178 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 23179 00a4 0333     		adds	r3, r3, #3
 23180 00a6 07F5C372 		add	r2, r7, #390
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 514


 23181 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23182 00ac 3A46     		mov	r2, r7
 23183 00ae D154     		strb	r1, [r2, r3]
3702:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23184              		.loc 1 3702 0
 23185 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 23186 00b4 9A1C     		adds	r2, r3, #2
 23187 00b6 07F5C373 		add	r3, r7, #390
 23188 00ba 0133     		adds	r3, r3, #1
 23189 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23190 00be 3B46     		mov	r3, r7
 23191 00c0 9954     		strb	r1, [r3, r2]
3703:..\src/command_processing.c **** 
3704:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 23192              		.loc 1 3704 0
 23193 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23194 00c6 B849     		ldr	r1, .L972+8
 23195 00c8 1346     		mov	r3, r2
 23196 00ca 9B00     		lsls	r3, r3, #2
 23197 00cc 1344     		add	r3, r3, r2
 23198 00ce DB00     		lsls	r3, r3, #3
 23199 00d0 0B44     		add	r3, r3, r1
 23200 00d2 0633     		adds	r3, r3, #6
 23201 00d4 B3F90030 		ldrsh	r3, [r3]
 23202 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
3705:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23203              		.loc 1 3705 0
 23204 00dc B7F88C31 		ldrh	r3, [r7, #396]
 23205 00e0 0533     		adds	r3, r3, #5
 23206 00e2 07F5C372 		add	r2, r7, #390
 23207 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23208 00e8 3A46     		mov	r2, r7
 23209 00ea D154     		strb	r1, [r2, r3]
3706:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23210              		.loc 1 3706 0
 23211 00ec B7F88C31 		ldrh	r3, [r7, #396]
 23212 00f0 1A1D     		adds	r2, r3, #4
 23213 00f2 07F5C373 		add	r3, r7, #390
 23214 00f6 0133     		adds	r3, r3, #1
 23215 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23216 00fa 3B46     		mov	r3, r7
 23217 00fc 9954     		strb	r1, [r3, r2]
3707:..\src/command_processing.c **** 
3708:..\src/command_processing.c ****             c = c + 6;
 23218              		.loc 1 3708 0
 23219 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23220 0102 0633     		adds	r3, r3, #6
 23221 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23222              	.L956:
3709:..\src/command_processing.c ****         }
3710:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][1]){
 23223              		.loc 1 3710 0
 23224 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23225 010c A44A     		ldr	r2, .L972
 23226 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23227 0110 1946     		mov	r1, r3
 23228 0112 A44A     		ldr	r2, .L972+4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 515


 23229 0114 0B46     		mov	r3, r1
 23230 0116 9B00     		lsls	r3, r3, #2
 23231 0118 0B44     		add	r3, r3, r1
 23232 011a 1344     		add	r3, r3, r2
 23233 011c 03F20323 		addw	r3, r3, #515
 23234 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23235 0122 002B     		cmp	r3, #0
 23236 0124 5DD0     		beq	.L957
3711:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 23237              		.loc 1 3711 0
 23238 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23239 012a 9F49     		ldr	r1, .L972+8
 23240 012c 1346     		mov	r3, r2
 23241 012e 9B00     		lsls	r3, r3, #2
 23242 0130 1344     		add	r3, r3, r2
 23243 0132 DB00     		lsls	r3, r3, #3
 23244 0134 0B44     		add	r3, r3, r1
 23245 0136 0833     		adds	r3, r3, #8
 23246 0138 B3F90030 		ldrsh	r3, [r3]
 23247 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
3712:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23248              		.loc 1 3712 0
 23249 0140 B7F88C31 		ldrh	r3, [r7, #396]
 23250 0144 0133     		adds	r3, r3, #1
 23251 0146 07F5C372 		add	r2, r7, #390
 23252 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23253 014c 3A46     		mov	r2, r7
 23254 014e D154     		strb	r1, [r2, r3]
3713:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23255              		.loc 1 3713 0
 23256 0150 B7F88C21 		ldrh	r2, [r7, #396]
 23257 0154 07F5C373 		add	r3, r7, #390
 23258 0158 0133     		adds	r3, r3, #1
 23259 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23260 015c 3B46     		mov	r3, r7
 23261 015e 9954     		strb	r1, [r3, r2]
3714:..\src/command_processing.c **** 
3715:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 23262              		.loc 1 3715 0
 23263 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23264 0164 9049     		ldr	r1, .L972+8
 23265 0166 1346     		mov	r3, r2
 23266 0168 9B00     		lsls	r3, r3, #2
 23267 016a 1344     		add	r3, r3, r2
 23268 016c DB00     		lsls	r3, r3, #3
 23269 016e 0B44     		add	r3, r3, r1
 23270 0170 0A33     		adds	r3, r3, #10
 23271 0172 B3F90030 		ldrsh	r3, [r3]
 23272 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
3716:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23273              		.loc 1 3716 0
 23274 017a B7F88C31 		ldrh	r3, [r7, #396]
 23275 017e 0333     		adds	r3, r3, #3
 23276 0180 07F5C372 		add	r2, r7, #390
 23277 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23278 0186 3A46     		mov	r2, r7
 23279 0188 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 516


3717:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23280              		.loc 1 3717 0
 23281 018a B7F88C31 		ldrh	r3, [r7, #396]
 23282 018e 9A1C     		adds	r2, r3, #2
 23283 0190 07F5C373 		add	r3, r7, #390
 23284 0194 0133     		adds	r3, r3, #1
 23285 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23286 0198 3B46     		mov	r3, r7
 23287 019a 9954     		strb	r1, [r3, r2]
3718:..\src/command_processing.c **** 
3719:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 23288              		.loc 1 3719 0
 23289 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23290 01a0 8149     		ldr	r1, .L972+8
 23291 01a2 1346     		mov	r3, r2
 23292 01a4 9B00     		lsls	r3, r3, #2
 23293 01a6 1344     		add	r3, r3, r2
 23294 01a8 DB00     		lsls	r3, r3, #3
 23295 01aa 0B44     		add	r3, r3, r1
 23296 01ac 0C33     		adds	r3, r3, #12
 23297 01ae B3F90030 		ldrsh	r3, [r3]
 23298 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
3720:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23299              		.loc 1 3720 0
 23300 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 23301 01ba 0533     		adds	r3, r3, #5
 23302 01bc 07F5C372 		add	r2, r7, #390
 23303 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23304 01c2 3A46     		mov	r2, r7
 23305 01c4 D154     		strb	r1, [r2, r3]
3721:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23306              		.loc 1 3721 0
 23307 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 23308 01ca 1A1D     		adds	r2, r3, #4
 23309 01cc 07F5C373 		add	r3, r7, #390
 23310 01d0 0133     		adds	r3, r3, #1
 23311 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23312 01d4 3B46     		mov	r3, r7
 23313 01d6 9954     		strb	r1, [r3, r2]
3722:..\src/command_processing.c **** 
3723:..\src/command_processing.c ****             c = c + 6;
 23314              		.loc 1 3723 0
 23315 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23316 01dc 0633     		adds	r3, r3, #6
 23317 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23318              	.L957:
3724:..\src/command_processing.c ****         }
3725:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][2]){
 23319              		.loc 1 3725 0
 23320 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23321 01e6 6E4A     		ldr	r2, .L972
 23322 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23323 01ea 1946     		mov	r1, r3
 23324 01ec 6D4A     		ldr	r2, .L972+4
 23325 01ee 0B46     		mov	r3, r1
 23326 01f0 9B00     		lsls	r3, r3, #2
 23327 01f2 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 517


 23328 01f4 1344     		add	r3, r3, r2
 23329 01f6 03F50173 		add	r3, r3, #516
 23330 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23331 01fc 002B     		cmp	r3, #0
 23332 01fe 5DD0     		beq	.L958
3726:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 23333              		.loc 1 3726 0
 23334 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23335 0204 6849     		ldr	r1, .L972+8
 23336 0206 1346     		mov	r3, r2
 23337 0208 9B00     		lsls	r3, r3, #2
 23338 020a 1344     		add	r3, r3, r2
 23339 020c DB00     		lsls	r3, r3, #3
 23340 020e 0B44     		add	r3, r3, r1
 23341 0210 0E33     		adds	r3, r3, #14
 23342 0212 B3F90030 		ldrsh	r3, [r3]
 23343 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3727:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23344              		.loc 1 3727 0
 23345 021a B7F88C31 		ldrh	r3, [r7, #396]
 23346 021e 0133     		adds	r3, r3, #1
 23347 0220 07F5C372 		add	r2, r7, #390
 23348 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23349 0226 3A46     		mov	r2, r7
 23350 0228 D154     		strb	r1, [r2, r3]
3728:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23351              		.loc 1 3728 0
 23352 022a B7F88C21 		ldrh	r2, [r7, #396]
 23353 022e 07F5C373 		add	r3, r7, #390
 23354 0232 0133     		adds	r3, r3, #1
 23355 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23356 0236 3B46     		mov	r3, r7
 23357 0238 9954     		strb	r1, [r3, r2]
3729:..\src/command_processing.c **** 
3730:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 23358              		.loc 1 3730 0
 23359 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23360 023e 5A49     		ldr	r1, .L972+8
 23361 0240 1346     		mov	r3, r2
 23362 0242 9B00     		lsls	r3, r3, #2
 23363 0244 1344     		add	r3, r3, r2
 23364 0246 DB00     		lsls	r3, r3, #3
 23365 0248 0B44     		add	r3, r3, r1
 23366 024a 1033     		adds	r3, r3, #16
 23367 024c B3F90030 		ldrsh	r3, [r3]
 23368 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3731:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 23369              		.loc 1 3731 0
 23370 0254 B7F88C31 		ldrh	r3, [r7, #396]
 23371 0258 0333     		adds	r3, r3, #3
 23372 025a 07F5C372 		add	r2, r7, #390
 23373 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23374 0260 3A46     		mov	r2, r7
 23375 0262 D154     		strb	r1, [r2, r3]
3732:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 23376              		.loc 1 3732 0
 23377 0264 B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 518


 23378 0268 9A1C     		adds	r2, r3, #2
 23379 026a 07F5C373 		add	r3, r7, #390
 23380 026e 0133     		adds	r3, r3, #1
 23381 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23382 0272 3B46     		mov	r3, r7
 23383 0274 9954     		strb	r1, [r3, r2]
3733:..\src/command_processing.c **** 
3734:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 23384              		.loc 1 3734 0
 23385 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23386 027a 4B49     		ldr	r1, .L972+8
 23387 027c 1346     		mov	r3, r2
 23388 027e 9B00     		lsls	r3, r3, #2
 23389 0280 1344     		add	r3, r3, r2
 23390 0282 DB00     		lsls	r3, r3, #3
 23391 0284 0B44     		add	r3, r3, r1
 23392 0286 1233     		adds	r3, r3, #18
 23393 0288 B3F90030 		ldrsh	r3, [r3]
 23394 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3735:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 23395              		.loc 1 3735 0
 23396 0290 B7F88C31 		ldrh	r3, [r7, #396]
 23397 0294 0533     		adds	r3, r3, #5
 23398 0296 07F5C372 		add	r2, r7, #390
 23399 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23400 029c 3A46     		mov	r2, r7
 23401 029e D154     		strb	r1, [r2, r3]
3736:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 23402              		.loc 1 3736 0
 23403 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 23404 02a4 1A1D     		adds	r2, r3, #4
 23405 02a6 07F5C373 		add	r3, r7, #390
 23406 02aa 0133     		adds	r3, r3, #1
 23407 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23408 02ae 3B46     		mov	r3, r7
 23409 02b0 9954     		strb	r1, [r3, r2]
3737:..\src/command_processing.c **** 
3738:..\src/command_processing.c ****             c = c + 6;
 23410              		.loc 1 3738 0
 23411 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23412 02b6 0633     		adds	r3, r3, #6
 23413 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23414              	.L958:
3739:..\src/command_processing.c ****         }
3740:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][3]){
 23415              		.loc 1 3740 0
 23416 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23417 02c0 374A     		ldr	r2, .L972
 23418 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23419 02c4 1946     		mov	r1, r3
 23420 02c6 374A     		ldr	r2, .L972+4
 23421 02c8 0B46     		mov	r3, r1
 23422 02ca 9B00     		lsls	r3, r3, #2
 23423 02cc 0B44     		add	r3, r3, r1
 23424 02ce 1344     		add	r3, r3, r2
 23425 02d0 03F20523 		addw	r3, r3, #517
 23426 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 519


 23427 02d6 002B     		cmp	r3, #0
 23428 02d8 00F0AF80 		beq	.L959
3741:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 23429              		.loc 1 3741 0
 23430 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23431 02e0 3149     		ldr	r1, .L972+8
 23432 02e2 1346     		mov	r3, r2
 23433 02e4 9B00     		lsls	r3, r3, #2
 23434 02e6 1344     		add	r3, r3, r2
 23435 02e8 DB00     		lsls	r3, r3, #3
 23436 02ea 0B44     		add	r3, r3, r1
 23437 02ec 1433     		adds	r3, r3, #20
 23438 02ee 1B68     		ldr	r3, [r3]	@ float
 23439 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3742:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23440              		.loc 1 3742 0
 23441 02f4 0023     		movs	r3, #0
 23442 02f6 87F88B31 		strb	r3, [r7, #395]
 23443 02fa 13E0     		b	.L960
 23444              	.L961:
3743:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 23445              		.loc 1 3743 0 discriminator 3
 23446 02fc B7F88C31 		ldrh	r3, [r7, #396]
 23447 0300 1A1D     		adds	r2, r3, #4
 23448 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23449 0306 D31A     		subs	r3, r2, r3
 23450 0308 013B     		subs	r3, r3, #1
 23451 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23452 030e 07F5C071 		add	r1, r7, #384
 23453 0312 0A44     		add	r2, r2, r1
 23454 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23455 0316 3A46     		mov	r2, r7
 23456 0318 D154     		strb	r1, [r2, r3]
3742:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23457              		.loc 1 3742 0 discriminator 3
 23458 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23459 031e 0133     		adds	r3, r3, #1
 23460 0320 87F88B31 		strb	r3, [r7, #395]
 23461              	.L960:
3742:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23462              		.loc 1 3742 0 is_stmt 0 discriminator 1
 23463 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23464 0328 032B     		cmp	r3, #3
 23465 032a E7D9     		bls	.L961
3744:..\src/command_processing.c ****             }
3745:..\src/command_processing.c **** 
3746:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 23466              		.loc 1 3746 0 is_stmt 1
 23467 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23468 0330 1D49     		ldr	r1, .L972+8
 23469 0332 1346     		mov	r3, r2
 23470 0334 9B00     		lsls	r3, r3, #2
 23471 0336 1344     		add	r3, r3, r2
 23472 0338 DB00     		lsls	r3, r3, #3
 23473 033a 0B44     		add	r3, r3, r1
 23474 033c 1833     		adds	r3, r3, #24
 23475 033e 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 520


 23476 0340 C7F88031 		str	r3, [r7, #384]	@ float
3747:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23477              		.loc 1 3747 0
 23478 0344 0023     		movs	r3, #0
 23479 0346 87F88B31 		strb	r3, [r7, #395]
 23480 034a 14E0     		b	.L962
 23481              	.L963:
3748:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 23482              		.loc 1 3748 0 discriminator 3
 23483 034c B7F88C31 		ldrh	r3, [r7, #396]
 23484 0350 03F10802 		add	r2, r3, #8
 23485 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23486 0358 D31A     		subs	r3, r2, r3
 23487 035a 013B     		subs	r3, r3, #1
 23488 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23489 0360 07F5C071 		add	r1, r7, #384
 23490 0364 0A44     		add	r2, r2, r1
 23491 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23492 0368 3A46     		mov	r2, r7
 23493 036a D154     		strb	r1, [r2, r3]
3747:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23494              		.loc 1 3747 0 discriminator 3
 23495 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23496 0370 0133     		adds	r3, r3, #1
 23497 0372 87F88B31 		strb	r3, [r7, #395]
 23498              	.L962:
3747:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23499              		.loc 1 3747 0 is_stmt 0 discriminator 1
 23500 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23501 037a 032B     		cmp	r3, #3
 23502 037c E6D9     		bls	.L963
3749:..\src/command_processing.c ****             }
3750:..\src/command_processing.c **** 
3751:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 23503              		.loc 1 3751 0 is_stmt 1
 23504 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23505 0382 0949     		ldr	r1, .L972+8
 23506 0384 1346     		mov	r3, r2
 23507 0386 9B00     		lsls	r3, r3, #2
 23508 0388 1344     		add	r3, r3, r2
 23509 038a DB00     		lsls	r3, r3, #3
 23510 038c 0B44     		add	r3, r3, r1
 23511 038e 1C33     		adds	r3, r3, #28
 23512 0390 1B68     		ldr	r3, [r3]	@ float
 23513 0392 C7F88031 		str	r3, [r7, #384]	@ float
3752:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23514              		.loc 1 3752 0
 23515 0396 0023     		movs	r3, #0
 23516 0398 87F88B31 		strb	r3, [r7, #395]
 23517 039c 1BE0     		b	.L964
 23518              	.L973:
 23519 039e 00BF     		.align	2
 23520              	.L972:
 23521 03a0 00000000 		.word	IMU_connected
 23522 03a4 00000000 		.word	c_mem
 23523 03a8 00000000 		.word	g_imu
 23524              	.L965:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 521


3753:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 23525              		.loc 1 3753 0 discriminator 3
 23526 03ac B7F88C31 		ldrh	r3, [r7, #396]
 23527 03b0 03F10C02 		add	r2, r3, #12
 23528 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23529 03b8 D31A     		subs	r3, r2, r3
 23530 03ba 013B     		subs	r3, r3, #1
 23531 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23532 03c0 07F5C071 		add	r1, r7, #384
 23533 03c4 0A44     		add	r2, r2, r1
 23534 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23535 03c8 3A46     		mov	r2, r7
 23536 03ca D154     		strb	r1, [r2, r3]
3752:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23537              		.loc 1 3752 0 discriminator 3
 23538 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23539 03d0 0133     		adds	r3, r3, #1
 23540 03d2 87F88B31 		strb	r3, [r7, #395]
 23541              	.L964:
3752:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23542              		.loc 1 3752 0 is_stmt 0 discriminator 1
 23543 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23544 03da 032B     		cmp	r3, #3
 23545 03dc E6D9     		bls	.L965
3754:..\src/command_processing.c ****             }
3755:..\src/command_processing.c **** 
3756:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 23546              		.loc 1 3756 0 is_stmt 1
 23547 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23548 03e2 6749     		ldr	r1, .L974
 23549 03e4 1346     		mov	r3, r2
 23550 03e6 9B00     		lsls	r3, r3, #2
 23551 03e8 1344     		add	r3, r3, r2
 23552 03ea DB00     		lsls	r3, r3, #3
 23553 03ec 0B44     		add	r3, r3, r1
 23554 03ee 2033     		adds	r3, r3, #32
 23555 03f0 1B68     		ldr	r3, [r3]	@ float
 23556 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3757:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23557              		.loc 1 3757 0
 23558 03f6 0023     		movs	r3, #0
 23559 03f8 87F88B31 		strb	r3, [r7, #395]
 23560 03fc 14E0     		b	.L966
 23561              	.L967:
3758:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 23562              		.loc 1 3758 0 discriminator 3
 23563 03fe B7F88C31 		ldrh	r3, [r7, #396]
 23564 0402 03F11002 		add	r2, r3, #16
 23565 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23566 040a D31A     		subs	r3, r2, r3
 23567 040c 013B     		subs	r3, r3, #1
 23568 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23569 0412 07F5C071 		add	r1, r7, #384
 23570 0416 0A44     		add	r2, r2, r1
 23571 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23572 041a 3A46     		mov	r2, r7
 23573 041c D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 522


3757:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23574              		.loc 1 3757 0 discriminator 3
 23575 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23576 0422 0133     		adds	r3, r3, #1
 23577 0424 87F88B31 		strb	r3, [r7, #395]
 23578              	.L966:
3757:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 23579              		.loc 1 3757 0 is_stmt 0 discriminator 1
 23580 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23581 042c 032B     		cmp	r3, #3
 23582 042e E6D9     		bls	.L967
3759:..\src/command_processing.c ****             }
3760:..\src/command_processing.c ****             c = c + 16;
 23583              		.loc 1 3760 0 is_stmt 1
 23584 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23585 0434 1033     		adds	r3, r3, #16
 23586 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23587              	.L959:
3761:..\src/command_processing.c ****         }
3762:..\src/command_processing.c ****         if (c_mem.imu.IMU_conf[IMU_connected[k_imu]][4]){
 23588              		.loc 1 3762 0
 23589 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23590 043e 514A     		ldr	r2, .L974+4
 23591 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23592 0442 1946     		mov	r1, r3
 23593 0444 504A     		ldr	r2, .L974+8
 23594 0446 0B46     		mov	r3, r1
 23595 0448 9B00     		lsls	r3, r3, #2
 23596 044a 0B44     		add	r3, r3, r1
 23597 044c 1344     		add	r3, r3, r2
 23598 044e 03F20623 		addw	r3, r3, #518
 23599 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23600 0454 002B     		cmp	r3, #0
 23601 0456 21D0     		beq	.L968
3763:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 23602              		.loc 1 3763 0
 23603 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23604 045c 4849     		ldr	r1, .L974
 23605 045e 1346     		mov	r3, r2
 23606 0460 9B00     		lsls	r3, r3, #2
 23607 0462 1344     		add	r3, r3, r2
 23608 0464 DB00     		lsls	r3, r3, #3
 23609 0466 0B44     		add	r3, r3, r1
 23610 0468 2433     		adds	r3, r3, #36
 23611 046a B3F90030 		ldrsh	r3, [r3]
 23612 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3764:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 23613              		.loc 1 3764 0
 23614 0472 B7F88C31 		ldrh	r3, [r7, #396]
 23615 0476 0133     		adds	r3, r3, #1
 23616 0478 07F5C372 		add	r2, r7, #390
 23617 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 23618 047e 3A46     		mov	r2, r7
 23619 0480 D154     		strb	r1, [r2, r3]
3765:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 23620              		.loc 1 3765 0
 23621 0482 B7F88C21 		ldrh	r2, [r7, #396]
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 523


 23622 0486 07F5C373 		add	r3, r7, #390
 23623 048a 0133     		adds	r3, r3, #1
 23624 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23625 048e 3B46     		mov	r3, r7
 23626 0490 9954     		strb	r1, [r3, r2]
3766:..\src/command_processing.c ****             c = c + 2;
 23627              		.loc 1 3766 0
 23628 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 23629 0496 0233     		adds	r3, r3, #2
 23630 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 23631              	.L968:
3767:..\src/command_processing.c ****         }
3768:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 23632              		.loc 1 3768 0
 23633 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23634 04a0 384A     		ldr	r2, .L974+4
 23635 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23636 04a4 1A46     		mov	r2, r3
 23637 04a6 394B     		ldr	r3, .L974+12
 23638 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 23639 04ac 013B     		subs	r3, r3, #1
 23640 04ae 3A46     		mov	r2, r7
 23641 04b0 3A21     		movs	r1, #58
 23642 04b2 D154     		strb	r1, [r2, r3]
3769:..\src/command_processing.c ****         c = 1;
 23643              		.loc 1 3769 0
 23644 04b4 0123     		movs	r3, #1
 23645 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3770:..\src/command_processing.c ****                
3771:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 23646              		.loc 1 3771 0
 23647 04ba 0023     		movs	r3, #0
 23648 04bc 87F88B31 		strb	r3, [r7, #395]
 23649 04c0 10E0     		b	.L969
 23650              	.L970:
3772:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23651              		.loc 1 3772 0 discriminator 3
 23652 04c2 B7F88821 		ldrh	r2, [r7, #392]
 23653 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23654 04ca 1344     		add	r3, r3, r2
 23655 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23656 04d0 3946     		mov	r1, r7
 23657 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 23658 04d4 07F12002 		add	r2, r7, #32
 23659 04d8 D154     		strb	r1, [r2, r3]
3771:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23660              		.loc 1 3771 0 discriminator 3
 23661 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 23662 04de 0133     		adds	r3, r3, #1
 23663 04e0 87F88B31 		strb	r3, [r7, #395]
 23664              	.L969:
3771:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 23665              		.loc 1 3771 0 is_stmt 0 discriminator 1
 23666 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 23667 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23668 04ec 2549     		ldr	r1, .L974+4
 23669 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 524


 23670 04f0 1946     		mov	r1, r3
 23671 04f2 264B     		ldr	r3, .L974+12
 23672 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 23673 04f8 9A42     		cmp	r2, r3
 23674 04fa E2DB     		blt	.L970
3773:..\src/command_processing.c ****         }
3774:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 23675              		.loc 1 3774 0 is_stmt 1 discriminator 2
 23676 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23677 0500 204A     		ldr	r2, .L974+4
 23678 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23679 0504 1A46     		mov	r2, r3
 23680 0506 214B     		ldr	r3, .L974+12
 23681 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 23682 050c 9AB2     		uxth	r2, r3
 23683 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 23684 0512 1344     		add	r3, r3, r2
 23685 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3775:..\src/command_processing.c ****         
3776:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 23686              		.loc 1 3776 0 discriminator 2
 23687 0518 3B46     		mov	r3, r7
 23688 051a 2022     		movs	r2, #32
 23689 051c 0021     		movs	r1, #0
 23690 051e 1846     		mov	r0, r3
 23691 0520 FFF7FEFF 		bl	memset
3691:..\src/command_processing.c ****     {	
 23692              		.loc 1 3691 0 discriminator 2
 23693 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 23694 0528 0133     		adds	r3, r3, #1
 23695 052a 87F88F31 		strb	r3, [r7, #399]
 23696              	.L955:
3691:..\src/command_processing.c ****     {	
 23697              		.loc 1 3691 0 is_stmt 0 discriminator 1
 23698 052e 184B     		ldr	r3, .L974+16
 23699 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23700 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 23701 0536 9A42     		cmp	r2, r3
 23702 0538 FFF476AD 		bcc	.L971
3777:..\src/command_processing.c ****         
3778:..\src/command_processing.c ****     }
3779:..\src/command_processing.c **** 
3780:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3781:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 23703              		.loc 1 3781 0 is_stmt 1
 23704 053c 154B     		ldr	r3, .L974+20
 23705 053e 1B68     		ldr	r3, [r3]
 23706 0540 5C1E     		subs	r4, r3, #1
 23707 0542 144B     		ldr	r3, .L974+20
 23708 0544 1B68     		ldr	r3, [r3]
 23709 0546 DBB2     		uxtb	r3, r3
 23710 0548 013B     		subs	r3, r3, #1
 23711 054a DAB2     		uxtb	r2, r3
 23712 054c 07F12003 		add	r3, r7, #32
 23713 0550 1146     		mov	r1, r2
 23714 0552 1846     		mov	r0, r3
 23715 0554 FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 525


 23716 0558 0346     		mov	r3, r0
 23717 055a 1A46     		mov	r2, r3
 23718 055c 07F12003 		add	r3, r7, #32
 23719 0560 1A55     		strb	r2, [r3, r4]
3782:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 23720              		.loc 1 3782 0
 23721 0562 0C4B     		ldr	r3, .L974+20
 23722 0564 1B68     		ldr	r3, [r3]
 23723 0566 9AB2     		uxth	r2, r3
 23724 0568 07F12003 		add	r3, r7, #32
 23725 056c 1146     		mov	r1, r2
 23726 056e 1846     		mov	r0, r3
 23727 0570 FFF7FEFF 		bl	commWrite
3783:..\src/command_processing.c **** }
 23728              		.loc 1 3783 0
 23729 0574 00BF     		nop
 23730 0576 07F5CA77 		add	r7, r7, #404
 23731              		.cfi_def_cfa_offset 12
 23732 057a BD46     		mov	sp, r7
 23733              		.cfi_def_cfa_register 13
 23734              		@ sp needed
 23735 057c 90BD     		pop	{r4, r7, pc}
 23736              	.L975:
 23737 057e 00BF     		.align	2
 23738              	.L974:
 23739 0580 00000000 		.word	g_imu
 23740 0584 00000000 		.word	IMU_connected
 23741 0588 00000000 		.word	c_mem
 23742 058c 00000000 		.word	single_imu_size
 23743 0590 00000000 		.word	N_IMU_Connected
 23744 0594 00000000 		.word	imus_data_size
 23745              		.cfi_endproc
 23746              	.LFE107:
 23747              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 23748              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 23749              		.align	2
 23750              		.global	cmd_get_encoder_map
 23751              		.thumb
 23752              		.thumb_func
 23753              		.type	cmd_get_encoder_map, %function
 23754              	cmd_get_encoder_map:
 23755              	.LFB108:
3784:..\src/command_processing.c **** 
3785:..\src/command_processing.c **** void cmd_get_encoder_map(){
 23756              		.loc 1 3785 0
 23757              		.cfi_startproc
 23758              		@ args = 0, pretend = 0, frame = 16
 23759              		@ frame_needed = 1, uses_anonymous_args = 0
 23760 0000 90B5     		push	{r4, r7, lr}
 23761              		.cfi_def_cfa_offset 12
 23762              		.cfi_offset 4, -12
 23763              		.cfi_offset 7, -8
 23764              		.cfi_offset 14, -4
 23765 0002 85B0     		sub	sp, sp, #20
 23766              		.cfi_def_cfa_offset 32
 23767 0004 00AF     		add	r7, sp, #0
 23768              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 526


3786:..\src/command_processing.c ****     //Retrieve Encoder map
3787:..\src/command_processing.c ****     
3788:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3789:..\src/command_processing.c ****     uint8 CYDATA i, j;
3790:..\src/command_processing.c ****     
3791:..\src/command_processing.c ****     // Header        
3792:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 23769              		.loc 1 3792 0
 23770 0006 A323     		movs	r3, #163
 23771 0008 3B70     		strb	r3, [r7]
3793:..\src/command_processing.c ****     
3794:..\src/command_processing.c ****     // Fill payload
3795:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 23772              		.loc 1 3795 0
 23773 000a 0223     		movs	r3, #2
 23774 000c 7B70     		strb	r3, [r7, #1]
3796:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 23775              		.loc 1 3796 0
 23776 000e 0523     		movs	r3, #5
 23777 0010 BB70     		strb	r3, [r7, #2]
3797:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23778              		.loc 1 3797 0
 23779 0012 0023     		movs	r3, #0
 23780 0014 FB73     		strb	r3, [r7, #15]
 23781 0016 23E0     		b	.L977
 23782              	.L980:
3798:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 23783              		.loc 1 3798 0
 23784 0018 0023     		movs	r3, #0
 23785 001a BB73     		strb	r3, [r7, #14]
 23786 001c 1AE0     		b	.L978
 23787              	.L979:
3799:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.enc[i].Enc_raw_read_conf[j];
 23788              		.loc 1 3799 0 discriminator 3
 23789 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23790 0020 1346     		mov	r3, r2
 23791 0022 9B00     		lsls	r3, r3, #2
 23792 0024 1344     		add	r3, r3, r2
 23793 0026 DA1C     		adds	r2, r3, #3
 23794 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23795 002a D118     		adds	r1, r2, r3
 23796 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 23797 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 23798 0030 154C     		ldr	r4, .L981
 23799 0032 1346     		mov	r3, r2
 23800 0034 5B00     		lsls	r3, r3, #1
 23801 0036 1344     		add	r3, r3, r2
 23802 0038 1B01     		lsls	r3, r3, #4
 23803 003a 2344     		add	r3, r3, r4
 23804 003c 0344     		add	r3, r3, r0
 23805 003e 03F5C873 		add	r3, r3, #400
 23806 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 23807 0044 07F11003 		add	r3, r7, #16
 23808 0048 0B44     		add	r3, r3, r1
 23809 004a 03F8102C 		strb	r2, [r3, #-16]
3798:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 23810              		.loc 1 3798 0 discriminator 3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 527


 23811 004e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23812 0050 0133     		adds	r3, r3, #1
 23813 0052 BB73     		strb	r3, [r7, #14]
 23814              	.L978:
3798:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 23815              		.loc 1 3798 0 is_stmt 0 discriminator 1
 23816 0054 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 23817 0056 042B     		cmp	r3, #4
 23818 0058 E1D9     		bls	.L979
3797:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23819              		.loc 1 3797 0 is_stmt 1 discriminator 2
 23820 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23821 005c 0133     		adds	r3, r3, #1
 23822 005e FB73     		strb	r3, [r7, #15]
 23823              	.L977:
3797:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23824              		.loc 1 3797 0 is_stmt 0 discriminator 1
 23825 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 23826 0062 012B     		cmp	r3, #1
 23827 0064 D8D9     		bls	.L980
3800:..\src/command_processing.c ****         }
3801:..\src/command_processing.c ****     }
3802:..\src/command_processing.c ****     
3803:..\src/command_processing.c ****     // Calculate checksum
3804:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 23828              		.loc 1 3804 0 is_stmt 1
 23829 0066 3B46     		mov	r3, r7
 23830 0068 0D21     		movs	r1, #13
 23831 006a 1846     		mov	r0, r3
 23832 006c FFF7FEFF 		bl	LCRChecksum
 23833 0070 0346     		mov	r3, r0
 23834 0072 7B73     		strb	r3, [r7, #13]
3805:..\src/command_processing.c ****     
3806:..\src/command_processing.c ****     // Send package to UART
3807:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 23835              		.loc 1 3807 0
 23836 0074 3B46     		mov	r3, r7
 23837 0076 0E21     		movs	r1, #14
 23838 0078 1846     		mov	r0, r3
 23839 007a FFF7FEFF 		bl	commWrite
3808:..\src/command_processing.c **** }
 23840              		.loc 1 3808 0
 23841 007e 00BF     		nop
 23842 0080 1437     		adds	r7, r7, #20
 23843              		.cfi_def_cfa_offset 12
 23844 0082 BD46     		mov	sp, r7
 23845              		.cfi_def_cfa_register 13
 23846              		@ sp needed
 23847 0084 90BD     		pop	{r4, r7, pc}
 23848              	.L982:
 23849 0086 00BF     		.align	2
 23850              	.L981:
 23851 0088 00000000 		.word	c_mem
 23852              		.cfi_endproc
 23853              	.LFE108:
 23854              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 23855              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 528


 23856              		.align	2
 23857              		.global	cmd_get_encoder_raw
 23858              		.thumb
 23859              		.thumb_func
 23860              		.type	cmd_get_encoder_raw, %function
 23861              	cmd_get_encoder_raw:
 23862              	.LFB109:
3809:..\src/command_processing.c **** 
3810:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 23863              		.loc 1 3810 0
 23864              		.cfi_startproc
 23865              		@ args = 0, pretend = 0, frame = 32
 23866              		@ frame_needed = 1, uses_anonymous_args = 0
 23867 0000 90B5     		push	{r4, r7, lr}
 23868              		.cfi_def_cfa_offset 12
 23869              		.cfi_offset 4, -12
 23870              		.cfi_offset 7, -8
 23871              		.cfi_offset 14, -4
 23872 0002 89B0     		sub	sp, sp, #36
 23873              		.cfi_def_cfa_offset 48
 23874 0004 00AF     		add	r7, sp, #0
 23875              		.cfi_def_cfa_register 7
3811:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3812:..\src/command_processing.c ****     
3813:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3814:..\src/command_processing.c ****     uint8 i, j, idx;
3815:..\src/command_processing.c ****     uint16 aux_uint16;
3816:..\src/command_processing.c ****     
3817:..\src/command_processing.c ****     //Header package 
3818:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 23876              		.loc 1 3818 0
 23877 0006 A423     		movs	r3, #164
 23878 0008 3B71     		strb	r3, [r7, #4]
3819:..\src/command_processing.c ****  
3820:..\src/command_processing.c ****     // Fill payload
3821:..\src/command_processing.c ****     idx = 0;
 23879              		.loc 1 3821 0
 23880 000a 0023     		movs	r3, #0
 23881 000c 7B77     		strb	r3, [r7, #29]
3822:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 23882              		.loc 1 3822 0
 23883 000e 0023     		movs	r3, #0
 23884 0010 FB77     		strb	r3, [r7, #31]
 23885 0012 3FE0     		b	.L984
 23886              	.L988:
3823:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23887              		.loc 1 3823 0
 23888 0014 0023     		movs	r3, #0
 23889 0016 BB77     		strb	r3, [r7, #30]
 23890 0018 33E0     		b	.L985
 23891              	.L987:
3824:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23892              		.loc 1 3824 0
 23893 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23894 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 23895 001e 3048     		ldr	r0, .L989
 23896 0020 1346     		mov	r3, r2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 529


 23897 0022 5B00     		lsls	r3, r3, #1
 23898 0024 1344     		add	r3, r3, r2
 23899 0026 1B01     		lsls	r3, r3, #4
 23900 0028 0344     		add	r3, r3, r0
 23901 002a 0B44     		add	r3, r3, r1
 23902 002c 03F5C873 		add	r3, r3, #400
 23903 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 23904 0032 012B     		cmp	r3, #1
 23905 0034 22D1     		bne	.L986
3825:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 23906              		.loc 1 3825 0
 23907 0036 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 23908 0038 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 23909 003a 2A48     		ldr	r0, .L989+4
 23910 003c 1346     		mov	r3, r2
 23911 003e 9B00     		lsls	r3, r3, #2
 23912 0040 1344     		add	r3, r3, r2
 23913 0042 0B44     		add	r3, r3, r1
 23914 0044 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 23915 0048 7B80     		strh	r3, [r7, #2]	@ movhi
3826:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 23916              		.loc 1 3826 0
 23917 004a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23918 004c 5B00     		lsls	r3, r3, #1
 23919 004e 0233     		adds	r3, r3, #2
 23920 0050 BA1C     		adds	r2, r7, #2
 23921 0052 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 23922 0054 07F12001 		add	r1, r7, #32
 23923 0058 0B44     		add	r3, r3, r1
 23924 005a 03F81C2C 		strb	r2, [r3, #-28]
3827:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 23925              		.loc 1 3827 0
 23926 005e 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23927 0060 5B00     		lsls	r3, r3, #1
 23928 0062 5A1C     		adds	r2, r3, #1
 23929 0064 BB1C     		adds	r3, r7, #2
 23930 0066 0133     		adds	r3, r3, #1
 23931 0068 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 23932 006a 07F12003 		add	r3, r7, #32
 23933 006e 1344     		add	r3, r3, r2
 23934 0070 0A46     		mov	r2, r1
 23935 0072 03F81C2C 		strb	r2, [r3, #-28]
3828:..\src/command_processing.c ****                 idx++;
 23936              		.loc 1 3828 0
 23937 0076 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23938 0078 0133     		adds	r3, r3, #1
 23939 007a 7B77     		strb	r3, [r7, #29]
 23940              	.L986:
3823:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23941              		.loc 1 3823 0 discriminator 2
 23942 007c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 23943 007e 0133     		adds	r3, r3, #1
 23944 0080 BB77     		strb	r3, [r7, #30]
 23945              	.L985:
3823:..\src/command_processing.c ****             if (c_mem.enc[i].Enc_raw_read_conf[j] == 1) {
 23946              		.loc 1 3823 0 is_stmt 0 discriminator 1
 23947 0082 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 530


 23948 0084 184A     		ldr	r2, .L989+8
 23949 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 23950 0088 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 23951 008a 9A42     		cmp	r2, r3
 23952 008c C5D3     		bcc	.L987
3822:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23953              		.loc 1 3822 0 is_stmt 1 discriminator 2
 23954 008e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23955 0090 0133     		adds	r3, r3, #1
 23956 0092 FB77     		strb	r3, [r7, #31]
 23957              	.L984:
3822:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 23958              		.loc 1 3822 0 is_stmt 0 discriminator 1
 23959 0094 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 23960 0096 012B     		cmp	r3, #1
 23961 0098 BCD9     		bls	.L988
3829:..\src/command_processing.c ****             }
3830:..\src/command_processing.c ****         }
3831:..\src/command_processing.c ****     }
3832:..\src/command_processing.c **** 
3833:..\src/command_processing.c ****     // Calculate checksum
3834:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 23962              		.loc 1 3834 0 is_stmt 1
 23963 009a 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23964 009c 5B00     		lsls	r3, r3, #1
 23965 009e 5C1C     		adds	r4, r3, #1
 23966 00a0 7B7F     		ldrb	r3, [r7, #29]
 23967 00a2 5B00     		lsls	r3, r3, #1
 23968 00a4 DBB2     		uxtb	r3, r3
 23969 00a6 0133     		adds	r3, r3, #1
 23970 00a8 DAB2     		uxtb	r2, r3
 23971 00aa 3B1D     		adds	r3, r7, #4
 23972 00ac 1146     		mov	r1, r2
 23973 00ae 1846     		mov	r0, r3
 23974 00b0 FFF7FEFF 		bl	LCRChecksum
 23975 00b4 0346     		mov	r3, r0
 23976 00b6 1A46     		mov	r2, r3
 23977 00b8 07F12003 		add	r3, r7, #32
 23978 00bc 2344     		add	r3, r3, r4
 23979 00be 03F81C2C 		strb	r2, [r3, #-28]
3835:..\src/command_processing.c ****     
3836:..\src/command_processing.c ****     // Send package to UART
3837:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 23980              		.loc 1 3837 0
 23981 00c2 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 23982 00c4 0133     		adds	r3, r3, #1
 23983 00c6 9BB2     		uxth	r3, r3
 23984 00c8 5B00     		lsls	r3, r3, #1
 23985 00ca 9AB2     		uxth	r2, r3
 23986 00cc 3B1D     		adds	r3, r7, #4
 23987 00ce 1146     		mov	r1, r2
 23988 00d0 1846     		mov	r0, r3
 23989 00d2 FFF7FEFF 		bl	commWrite
3838:..\src/command_processing.c **** }
 23990              		.loc 1 3838 0
 23991 00d6 00BF     		nop
 23992 00d8 2437     		adds	r7, r7, #36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 531


 23993              		.cfi_def_cfa_offset 12
 23994 00da BD46     		mov	sp, r7
 23995              		.cfi_def_cfa_register 13
 23996              		@ sp needed
 23997 00dc 90BD     		pop	{r4, r7, pc}
 23998              	.L990:
 23999 00de 00BF     		.align	2
 24000              	.L989:
 24001 00e0 00000000 		.word	c_mem
 24002 00e4 00000000 		.word	Encoder_Value
 24003 00e8 00000000 		.word	N_Encoder_Line_Connected
 24004              		.cfi_endproc
 24005              	.LFE109:
 24006              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 24007              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 24008              		.align	2
 24009              		.global	cmd_get_ADC_map
 24010              		.thumb
 24011              		.thumb_func
 24012              		.type	cmd_get_ADC_map, %function
 24013              	cmd_get_ADC_map:
 24014              	.LFB110:
3839:..\src/command_processing.c **** 
3840:..\src/command_processing.c **** void cmd_get_ADC_map(){
 24015              		.loc 1 3840 0
 24016              		.cfi_startproc
 24017              		@ args = 0, pretend = 0, frame = 16
 24018              		@ frame_needed = 1, uses_anonymous_args = 0
 24019 0000 80B5     		push	{r7, lr}
 24020              		.cfi_def_cfa_offset 8
 24021              		.cfi_offset 7, -8
 24022              		.cfi_offset 14, -4
 24023 0002 84B0     		sub	sp, sp, #16
 24024              		.cfi_def_cfa_offset 24
 24025 0004 00AF     		add	r7, sp, #0
 24026              		.cfi_def_cfa_register 7
3841:..\src/command_processing.c ****     //Retrieve Encoder map
3842:..\src/command_processing.c ****     
3843:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3844:..\src/command_processing.c ****     uint8 CYDATA i;
3845:..\src/command_processing.c ****     
3846:..\src/command_processing.c ****     // Header        
3847:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 24027              		.loc 1 3847 0
 24028 0006 A523     		movs	r3, #165
 24029 0008 3B70     		strb	r3, [r7]
3848:..\src/command_processing.c ****     
3849:..\src/command_processing.c ****     // Fill payload
3850:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 24030              		.loc 1 3850 0
 24031 000a 0C23     		movs	r3, #12
 24032 000c 7B70     		strb	r3, [r7, #1]
3851:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24033              		.loc 1 3851 0
 24034 000e 0023     		movs	r3, #0
 24035 0010 FB73     		strb	r3, [r7, #15]
 24036 0012 0EE0     		b	.L992
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 532


 24037              	.L993:
3852:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.exp.ADC_conf[i];
 24038              		.loc 1 3852 0 discriminator 3
 24039 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24040 0016 0233     		adds	r3, r3, #2
 24041 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 24042 001a 0F49     		ldr	r1, .L994
 24043 001c 0A44     		add	r2, r2, r1
 24044 001e 92F82822 		ldrb	r2, [r2, #552]	@ zero_extendqisi2
 24045 0022 07F11001 		add	r1, r7, #16
 24046 0026 0B44     		add	r3, r3, r1
 24047 0028 03F8102C 		strb	r2, [r3, #-16]
3851:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24048              		.loc 1 3851 0 discriminator 3
 24049 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24050 002e 0133     		adds	r3, r3, #1
 24051 0030 FB73     		strb	r3, [r7, #15]
 24052              	.L992:
3851:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 24053              		.loc 1 3851 0 is_stmt 0 discriminator 1
 24054 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 24055 0034 0B2B     		cmp	r3, #11
 24056 0036 EDD9     		bls	.L993
3853:..\src/command_processing.c ****     }
3854:..\src/command_processing.c ****     
3855:..\src/command_processing.c ****     // Calculate checksum
3856:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 24057              		.loc 1 3856 0 is_stmt 1
 24058 0038 3B46     		mov	r3, r7
 24059 003a 0E21     		movs	r1, #14
 24060 003c 1846     		mov	r0, r3
 24061 003e FFF7FEFF 		bl	LCRChecksum
 24062 0042 0346     		mov	r3, r0
 24063 0044 BB73     		strb	r3, [r7, #14]
3857:..\src/command_processing.c ****     
3858:..\src/command_processing.c ****     // Send package to UART
3859:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 24064              		.loc 1 3859 0
 24065 0046 3B46     		mov	r3, r7
 24066 0048 0F21     		movs	r1, #15
 24067 004a 1846     		mov	r0, r3
 24068 004c FFF7FEFF 		bl	commWrite
3860:..\src/command_processing.c ****     
3861:..\src/command_processing.c **** }
 24069              		.loc 1 3861 0
 24070 0050 00BF     		nop
 24071 0052 1037     		adds	r7, r7, #16
 24072              		.cfi_def_cfa_offset 8
 24073 0054 BD46     		mov	sp, r7
 24074              		.cfi_def_cfa_register 13
 24075              		@ sp needed
 24076 0056 80BD     		pop	{r7, pc}
 24077              	.L995:
 24078              		.align	2
 24079              	.L994:
 24080 0058 00000000 		.word	c_mem
 24081              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 533


 24082              	.LFE110:
 24083              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 24084              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 24085              		.align	2
 24086              		.global	cmd_get_ADC_raw
 24087              		.thumb
 24088              		.thumb_func
 24089              		.type	cmd_get_ADC_raw, %function
 24090              	cmd_get_ADC_raw:
 24091              	.LFB111:
3862:..\src/command_processing.c **** 
3863:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 24092              		.loc 1 3863 0
 24093              		.cfi_startproc
 24094              		@ args = 0, pretend = 0, frame = 32
 24095              		@ frame_needed = 1, uses_anonymous_args = 0
 24096 0000 90B5     		push	{r4, r7, lr}
 24097              		.cfi_def_cfa_offset 12
 24098              		.cfi_offset 4, -12
 24099              		.cfi_offset 7, -8
 24100              		.cfi_offset 14, -4
 24101 0002 89B0     		sub	sp, sp, #36
 24102              		.cfi_def_cfa_offset 48
 24103 0004 00AF     		add	r7, sp, #0
 24104              		.cfi_def_cfa_register 7
3864:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3865:..\src/command_processing.c ****     
3866:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3867:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 24105              		.loc 1 3867 0
 24106 0006 0023     		movs	r3, #0
 24107 0008 BB77     		strb	r3, [r7, #30]
3868:..\src/command_processing.c ****     int16 aux_int16;
3869:..\src/command_processing.c ****     
3870:..\src/command_processing.c ****     // Header        
3871:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 24108              		.loc 1 3871 0
 24109 000a A623     		movs	r3, #166
 24110 000c 3B71     		strb	r3, [r7, #4]
3872:..\src/command_processing.c ****     
3873:..\src/command_processing.c ****     // Fill payload
3874:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 24111              		.loc 1 3874 0
 24112 000e 0023     		movs	r3, #0
 24113 0010 FB77     		strb	r3, [r7, #31]
 24114 0012 27E0     		b	.L997
 24115              	.L999:
3875:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24116              		.loc 1 3875 0
 24117 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24118 0016 274A     		ldr	r2, .L1000
 24119 0018 1344     		add	r3, r3, r2
 24120 001a 93F82832 		ldrb	r3, [r3, #552]	@ zero_extendqisi2
 24121 001e 012B     		cmp	r3, #1
 24122 0020 1DD1     		bne	.L998
3876:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 24123              		.loc 1 3876 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 534


 24124 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24125 0024 244A     		ldr	r2, .L1000+4
 24126 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 24127 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3877:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 24128              		.loc 1 3877 0
 24129 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24130 002e 5B00     		lsls	r3, r3, #1
 24131 0030 0233     		adds	r3, r3, #2
 24132 0032 BA1C     		adds	r2, r7, #2
 24133 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 24134 0036 07F12001 		add	r1, r7, #32
 24135 003a 0B44     		add	r3, r3, r1
 24136 003c 03F81C2C 		strb	r2, [r3, #-28]
3878:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 24137              		.loc 1 3878 0
 24138 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24139 0042 5B00     		lsls	r3, r3, #1
 24140 0044 5A1C     		adds	r2, r3, #1
 24141 0046 BB1C     		adds	r3, r7, #2
 24142 0048 0133     		adds	r3, r3, #1
 24143 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 24144 004c 07F12003 		add	r3, r7, #32
 24145 0050 1344     		add	r3, r3, r2
 24146 0052 0A46     		mov	r2, r1
 24147 0054 03F81C2C 		strb	r2, [r3, #-28]
3879:..\src/command_processing.c ****             idx++;
 24148              		.loc 1 3879 0
 24149 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24150 005a 0133     		adds	r3, r3, #1
 24151 005c BB77     		strb	r3, [r7, #30]
 24152              	.L998:
3874:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24153              		.loc 1 3874 0 discriminator 2
 24154 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 24155 0060 0133     		adds	r3, r3, #1
 24156 0062 FB77     		strb	r3, [r7, #31]
 24157              	.L997:
3874:..\src/command_processing.c ****         if (c_mem.exp.ADC_conf[i] == 1) {
 24158              		.loc 1 3874 0 is_stmt 0 discriminator 1
 24159 0064 154B     		ldr	r3, .L1000+8
 24160 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 24161 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 24162 006a 9A42     		cmp	r2, r3
 24163 006c D2D3     		bcc	.L999
3880:..\src/command_processing.c ****         }
3881:..\src/command_processing.c ****     }
3882:..\src/command_processing.c **** 
3883:..\src/command_processing.c ****     // Calculate checksum
3884:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 24164              		.loc 1 3884 0 is_stmt 1
 24165 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24166 0070 5B00     		lsls	r3, r3, #1
 24167 0072 5C1C     		adds	r4, r3, #1
 24168 0074 BB7F     		ldrb	r3, [r7, #30]
 24169 0076 5B00     		lsls	r3, r3, #1
 24170 0078 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 535


 24171 007a 0133     		adds	r3, r3, #1
 24172 007c DAB2     		uxtb	r2, r3
 24173 007e 3B1D     		adds	r3, r7, #4
 24174 0080 1146     		mov	r1, r2
 24175 0082 1846     		mov	r0, r3
 24176 0084 FFF7FEFF 		bl	LCRChecksum
 24177 0088 0346     		mov	r3, r0
 24178 008a 1A46     		mov	r2, r3
 24179 008c 07F12003 		add	r3, r7, #32
 24180 0090 2344     		add	r3, r3, r4
 24181 0092 03F81C2C 		strb	r2, [r3, #-28]
3885:..\src/command_processing.c ****     
3886:..\src/command_processing.c ****     // Send package to UART
3887:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 24182              		.loc 1 3887 0
 24183 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 24184 0098 0133     		adds	r3, r3, #1
 24185 009a 9BB2     		uxth	r3, r3
 24186 009c 5B00     		lsls	r3, r3, #1
 24187 009e 9AB2     		uxth	r2, r3
 24188 00a0 3B1D     		adds	r3, r7, #4
 24189 00a2 1146     		mov	r1, r2
 24190 00a4 1846     		mov	r0, r3
 24191 00a6 FFF7FEFF 		bl	commWrite
3888:..\src/command_processing.c **** }
 24192              		.loc 1 3888 0
 24193 00aa 00BF     		nop
 24194 00ac 2437     		adds	r7, r7, #36
 24195              		.cfi_def_cfa_offset 12
 24196 00ae BD46     		mov	sp, r7
 24197              		.cfi_def_cfa_register 13
 24198              		@ sp needed
 24199 00b0 90BD     		pop	{r4, r7, pc}
 24200              	.L1001:
 24201 00b2 00BF     		.align	2
 24202              	.L1000:
 24203 00b4 00000000 		.word	c_mem
 24204 00b8 00000000 		.word	ADC_buf
 24205 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 24206              		.cfi_endproc
 24207              	.LFE111:
 24208              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 24209              		.section	.text.air_chambers_control,"ax",%progbits
 24210              		.align	2
 24211              		.global	air_chambers_control
 24212              		.thumb
 24213              		.thumb_func
 24214              		.type	air_chambers_control, %function
 24215              	air_chambers_control:
 24216              	.LFB112:
3889:..\src/command_processing.c **** 
3890:..\src/command_processing.c **** //==============================================================================
3891:..\src/command_processing.c **** //                                                          AIR CHAMBERS CONTROL
3892:..\src/command_processing.c **** //==============================================================================
3893:..\src/command_processing.c **** /* It asks current difference to the SoftHand and sets force feedback device inputs proportionally 
3894:..\src/command_processing.c **** 
3895:..\src/command_processing.c **** void air_chambers_control(int slave_motor_idx) {
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 536


 24217              		.loc 1 3895 0
 24218              		.cfi_startproc
 24219              		@ args = 0, pretend = 0, frame = 8
 24220              		@ frame_needed = 1, uses_anonymous_args = 0
 24221              		@ link register save eliminated.
 24222 0000 80B4     		push	{r7}
 24223              		.cfi_def_cfa_offset 4
 24224              		.cfi_offset 7, -4
 24225 0002 83B0     		sub	sp, sp, #12
 24226              		.cfi_def_cfa_offset 16
 24227 0004 00AF     		add	r7, sp, #0
 24228              		.cfi_def_cfa_register 7
 24229 0006 7860     		str	r0, [r7, #4]
3896:..\src/command_processing.c ****     
3897:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
3898:..\src/command_processing.c ****     
3899:..\src/command_processing.c ****     int16 curr_diff;
3900:..\src/command_processing.c ****     int32 pressure_reference, err_pressure, pressure_value;
3901:..\src/command_processing.c ****     int32 valve_command;
3902:..\src/command_processing.c ****     int16 x_value;
3903:..\src/command_processing.c **** 
3904:..\src/command_processing.c ****     // Use pressure and residual current read from the SoftHand
3905:..\src/command_processing.c ****     
3906:..\src/command_processing.c ****     curr_diff = (int16)commReadResCurrFromSH();
3907:..\src/command_processing.c ****     
3908:..\src/command_processing.c ****     // Current difference saturation old mapping
3909:..\src/command_processing.c **** //    if(curr_diff > c_mem.FB.max_residual_current) {
3910:..\src/command_processing.c **** //        curr_diff = c_mem.FB.max_residual_current;
3911:..\src/command_processing.c **** //    }
3912:..\src/command_processing.c **** //    if(curr_diff < 0) {
3913:..\src/command_processing.c **** //        curr_diff = 0;
3914:..\src/command_processing.c **** //    }
3915:..\src/command_processing.c **** 
3916:..\src/command_processing.c ****     // Compute pressure reference
3917:..\src/command_processing.c **** 
3918:..\src/command_processing.c ****     x_value = curr_diff - 50.0;
3919:..\src/command_processing.c ****     if (x_value < 0)
3920:..\src/command_processing.c ****         x_value = 0;
3921:..\src/command_processing.c ****     
3922:..\src/command_processing.c ****     // old mapping --- linear mapping
3923:..\src/command_processing.c ****     //pressure_reference = (int32)(curr_diff * (c_mem.FB.maximum_pressure_kPa/c_mem.FB.max_residual
3924:..\src/command_processing.c ****     pressure_reference = (int32)((int32)(-30.0*x_value*x_value + 55.0*c_mem.FB.max_residual_current
3925:..\src/command_processing.c ****     if (pressure_reference < 0)
3926:..\src/command_processing.c ****         pressure_reference = 0;
3927:..\src/command_processing.c ****     if (pressure_reference > c_mem.FB.maximum_pressure_kPa)
3928:..\src/command_processing.c ****         pressure_reference = c_mem.FB.maximum_pressure_kPa;
3929:..\src/command_processing.c ****     
3930:..\src/command_processing.c ****     pressure_value = (int32)g_fb_meas.pressure;
3931:..\src/command_processing.c ****     err_pressure = pressure_reference - pressure_value;       // error in kPa
3932:..\src/command_processing.c **** //    if (err_pressure < 0){
3933:..\src/command_processing.c **** //        err_pressure = 0;
3934:..\src/command_processing.c **** //    }
3935:..\src/command_processing.c ****     
3936:..\src/command_processing.c ****     if (x_value <= 0){
3937:..\src/command_processing.c ****         //i.e the hand is opening
3938:..\src/command_processing.c ****         valve_command = 0;  //valve open: air passes
3939:..\src/command_processing.c ****     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 537


3940:..\src/command_processing.c ****     else {
3941:..\src/command_processing.c ****         //i.e the hand is closing, so valve should stay closed independently from the pressure erro
3942:..\src/command_processing.c ****         //if err_pressure greater than 0, it means pressure should increase, so valve should stay c
3943:..\src/command_processing.c ****         //if err_pressure==0, it means you reached the right pressure, so valve should stay closed
3944:..\src/command_processing.c ****         valve_command = 1;  //3.6V (5V - 2 diodes) - valve close: air doesn't pass
3945:..\src/command_processing.c ****     }
3946:..\src/command_processing.c ****     
3947:..\src/command_processing.c ****     // Pump control
3948:..\src/command_processing.c ****     g_refNew[0].pwm = (int32)(c_mem.FB.prop_err_fb_gain*err_pressure);
3949:..\src/command_processing.c ****     //c_mem.FB.prop_err_fb_gain default 1.0 gain since, max err_pressure is 25 and pwm range is app
3950:..\src/command_processing.c ****     
3951:..\src/command_processing.c ****     // Limit output voltage
3952:..\src/command_processing.c ****     if (g_refNew[0].pwm > 80) // 80 (3.5V) 80% of 4.3V (5V - 1 diode)
3953:..\src/command_processing.c ****         g_refNew[0].pwm = 80; // 80
3954:..\src/command_processing.c ****     if (g_refNew[0].pwm < 20)
3955:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
3956:..\src/command_processing.c ****         
3957:..\src/command_processing.c ****     VALVE_Write(valve_command);
3958:..\src/command_processing.c ****     
3959:..\src/command_processing.c ****     
3960:..\src/command_processing.c ****     // Drive slave with reference generated on second motor index
3961:..\src/command_processing.c ****     // Use second motor structures and parameters, only to generate position reference not for PID 
3962:..\src/command_processing.c ****     // IMPORTANT: configure second motor parameters with proper slave parameters
3963:..\src/command_processing.c ****     motor_control_generic(slave_motor_idx);
3964:..\src/command_processing.c **** #endif
3965:..\src/command_processing.c **** }
 24230              		.loc 1 3965 0
 24231 0008 00BF     		nop
 24232 000a 0C37     		adds	r7, r7, #12
 24233              		.cfi_def_cfa_offset 4
 24234 000c BD46     		mov	sp, r7
 24235              		.cfi_def_cfa_register 13
 24236              		@ sp needed
 24237 000e 80BC     		pop	{r7}
 24238              		.cfi_restore 7
 24239              		.cfi_def_cfa_offset 0
 24240 0010 7047     		bx	lr
 24241              		.cfi_endproc
 24242              	.LFE112:
 24243              		.size	air_chambers_control, .-air_chambers_control
 24244 0012 00BF     		.section	.text.otbk_act_wrist_control,"ax",%progbits
 24245              		.align	2
 24246              		.global	otbk_act_wrist_control
 24247              		.thumb
 24248              		.thumb_func
 24249              		.type	otbk_act_wrist_control, %function
 24250              	otbk_act_wrist_control:
 24251              	.LFB113:
3966:..\src/command_processing.c **** 
3967:..\src/command_processing.c **** 
3968:..\src/command_processing.c **** //==============================================================================
3969:..\src/command_processing.c **** //                                          OTTOBOCK ACTIVE WRIST MASTER CONTROL
3970:..\src/command_processing.c **** //==============================================================================
3971:..\src/command_processing.c **** /* It moves Ottobock active wrist (as master) and connected SoftHand slave according to emg activat
3972:..\src/command_processing.c **** 
3973:..\src/command_processing.c **** void otbk_act_wrist_control(int slave_motor_idx) {
 24252              		.loc 1 3973 0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 538


 24253              		.cfi_startproc
 24254              		@ args = 0, pretend = 0, frame = 8
 24255              		@ frame_needed = 1, uses_anonymous_args = 0
 24256              		@ link register save eliminated.
 24257 0000 80B4     		push	{r7}
 24258              		.cfi_def_cfa_offset 4
 24259              		.cfi_offset 7, -4
 24260 0002 83B0     		sub	sp, sp, #12
 24261              		.cfi_def_cfa_offset 16
 24262 0004 00AF     		add	r7, sp, #0
 24263              		.cfi_def_cfa_register 7
 24264 0006 7860     		str	r0, [r7, #4]
3974:..\src/command_processing.c ****     
3975:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
3976:..\src/command_processing.c ****     
3977:..\src/command_processing.c ****     static uint8 fsm_state = RELAX_STATE;     // Wrist FSM state
3978:..\src/command_processing.c ****     static int32 cnt = 0;
3979:..\src/command_processing.c ****     int32 CYDATA err_emg_1, err_emg_2; 
3980:..\src/command_processing.c ****     int32 CYDATA f_err_emg_1, f_err_emg_2; 
3981:..\src/command_processing.c ****     
3982:..\src/command_processing.c ****     err_emg_1 = g_adc_meas.emg[0] - c_mem.emg.emg_threshold[0];
3983:..\src/command_processing.c ****     err_emg_2 = g_adc_meas.emg[1] - c_mem.emg.emg_threshold[1];
3984:..\src/command_processing.c ****     f_err_emg_1 = g_adc_meas.emg[0] - c_mem.WR.fast_act_threshold[0];
3985:..\src/command_processing.c ****     f_err_emg_2 = g_adc_meas.emg[1] - c_mem.WR.fast_act_threshold[1];
3986:..\src/command_processing.c ****     
3987:..\src/command_processing.c **** 
3988:..\src/command_processing.c ****     // State machine - Evaluate emg activation status
3989:..\src/command_processing.c ****     // Note: in this way, diff_emg_1 and diff_emg_2 are for sure differences between two consecutiv
3990:..\src/command_processing.c ****     switch (fsm_state){
3991:..\src/command_processing.c ****         case RELAX_STATE:
3992:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
3993:..\src/command_processing.c ****                 fsm_state = TIMER_STATE;
3994:..\src/command_processing.c ****             }
3995:..\src/command_processing.c ****             
3996:..\src/command_processing.c ****              // Wrist stop
3997:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
3998:..\src/command_processing.c ****             
3999:..\src/command_processing.c ****             // Softhand stop
4000:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4001:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4002:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4003:..\src/command_processing.c ****             
4004:..\src/command_processing.c ****             break;
4005:..\src/command_processing.c ****         case TIMER_STATE:     // Timer
4006:..\src/command_processing.c ****             if (err_emg_1 > 0 || err_emg_2 > 0){
4007:..\src/command_processing.c ****                 cnt = cnt +1;
4008:..\src/command_processing.c ****             }
4009:..\src/command_processing.c ****             else {
4010:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
4011:..\src/command_processing.c ****             }
4012:..\src/command_processing.c ****             
4013:..\src/command_processing.c ****             if (cnt > 100){
4014:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 > 0) || (err_emg_2 > 0 && f_err_emg_2 > 0)){
4015:..\src/command_processing.c ****                     // Fast activation
4016:..\src/command_processing.c ****                     if (c_mem.WR.wrist_act_mode == 0){
4017:..\src/command_processing.c ****                         fsm_state = MOVE_WRIST;
4018:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 539


4019:..\src/command_processing.c ****                     else{
4020:..\src/command_processing.c ****                         fsm_state = MOVE_SLAVE;
4021:..\src/command_processing.c ****                     }
4022:..\src/command_processing.c ****                 }
4023:..\src/command_processing.c ****                 if ((err_emg_1 > 0 && f_err_emg_1 < 0) || (err_emg_2 > 0 && f_err_emg_2 < 0)){
4024:..\src/command_processing.c ****                     // Slow activation
4025:..\src/command_processing.c ****                     if (c_mem.WR.wrist_act_mode == 0){
4026:..\src/command_processing.c ****                         fsm_state = MOVE_SLAVE;
4027:..\src/command_processing.c ****                     }
4028:..\src/command_processing.c ****                     else{
4029:..\src/command_processing.c ****                         fsm_state = MOVE_WRIST;
4030:..\src/command_processing.c ****                     }
4031:..\src/command_processing.c ****                 }
4032:..\src/command_processing.c ****                 if (err_emg_1 < 0 && err_emg_2 < 0){
4033:..\src/command_processing.c ****                     // Involuntary activation
4034:..\src/command_processing.c ****                     fsm_state = RELAX_STATE;
4035:..\src/command_processing.c ****                 }
4036:..\src/command_processing.c ****                 cnt = 0;
4037:..\src/command_processing.c ****             }
4038:..\src/command_processing.c ****     
4039:..\src/command_processing.c ****             break;
4040:..\src/command_processing.c ****         case MOVE_WRIST: // Wrist movement
4041:..\src/command_processing.c ****             
4042:..\src/command_processing.c ****             // Wrist movement
4043:..\src/command_processing.c ****             if (g_adc_meas.emg[0] > g_adc_meas.emg[1]){
4044:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4045:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4046:..\src/command_processing.c ****                 }
4047:..\src/command_processing.c ****                 else {
4048:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4049:..\src/command_processing.c ****                 }
4050:..\src/command_processing.c ****             }
4051:..\src/command_processing.c ****             else {
4052:..\src/command_processing.c ****                 if (c_mem.WR.wrist_direction_association == 0){
4053:..\src/command_processing.c ****                     g_refNew[0].pwm = -60;   // Rotate CCW
4054:..\src/command_processing.c ****                 }
4055:..\src/command_processing.c ****                 else {
4056:..\src/command_processing.c ****                     g_refNew[0].pwm = 60;       //Rotate CW
4057:..\src/command_processing.c ****                 }
4058:..\src/command_processing.c ****             }
4059:..\src/command_processing.c ****             
4060:..\src/command_processing.c ****             // Softhand stop
4061:..\src/command_processing.c ****             // Do not update the motor reference, so the SoftHand stays still
4062:..\src/command_processing.c ****             g_ref[slave_motor_idx].pos = g_refOld[slave_motor_idx].pos;
4063:..\src/command_processing.c ****             g_refNew[slave_motor_idx].pos = g_ref[slave_motor_idx].pos;
4064:..\src/command_processing.c ****             
4065:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
4066:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
4067:..\src/command_processing.c ****             }
4068:..\src/command_processing.c ****         
4069:..\src/command_processing.c ****             break;
4070:..\src/command_processing.c ****         case MOVE_SLAVE: // Hand movement
4071:..\src/command_processing.c ****             
4072:..\src/command_processing.c ****             // Wrist stop
4073:..\src/command_processing.c ****             g_refNew[0].pwm = 0;
4074:..\src/command_processing.c ****             
4075:..\src/command_processing.c ****             // SoftHand movement
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 540


4076:..\src/command_processing.c ****             // Drive slave with reference generated on second motor index
4077:..\src/command_processing.c ****             // Use second motor structures and parameters, only to generate position reference not 
4078:..\src/command_processing.c ****             // IMPORTANT: configure second motor parameters with proper slave parameters
4079:..\src/command_processing.c ****             motor_control_generic(slave_motor_idx);
4080:..\src/command_processing.c ****             
4081:..\src/command_processing.c ****             if (err_emg_1 < 0 && err_emg_2 < 0){
4082:..\src/command_processing.c ****                 fsm_state = RELAX_STATE;
4083:..\src/command_processing.c ****             }
4084:..\src/command_processing.c ****             
4085:..\src/command_processing.c ****             break;
4086:..\src/command_processing.c ****     }
4087:..\src/command_processing.c ****         
4088:..\src/command_processing.c ****     // Limit output voltage
4089:..\src/command_processing.c ****     if (g_refNew[0].pwm > 67) // 67 (8.4V max of 2S ottobock battery) 66.6% of 12.6V
4090:..\src/command_processing.c ****         g_refNew[0].pwm = 67; // 67
4091:..\src/command_processing.c ****     if (g_refNew[0].pwm < -67)
4092:..\src/command_processing.c ****         g_refNew[0].pwm = -67;
4093:..\src/command_processing.c ****     
4094:..\src/command_processing.c **** #endif
4095:..\src/command_processing.c **** }
 24265              		.loc 1 4095 0
 24266 0008 00BF     		nop
 24267 000a 0C37     		adds	r7, r7, #12
 24268              		.cfi_def_cfa_offset 4
 24269 000c BD46     		mov	sp, r7
 24270              		.cfi_def_cfa_register 13
 24271              		@ sp needed
 24272 000e 80BC     		pop	{r7}
 24273              		.cfi_restore 7
 24274              		.cfi_def_cfa_offset 0
 24275 0010 7047     		bx	lr
 24276              		.cfi_endproc
 24277              	.LFE113:
 24278              		.size	otbk_act_wrist_control, .-otbk_act_wrist_control
 24279 0012 00BF     		.section	.text.drive_slave,"ax",%progbits
 24280              		.align	2
 24281              		.global	drive_slave
 24282              		.thumb
 24283              		.thumb_func
 24284              		.type	drive_slave, %function
 24285              	drive_slave:
 24286              	.LFB114:
4096:..\src/command_processing.c **** 
4097:..\src/command_processing.c **** //==============================================================================
4098:..\src/command_processing.c **** //                                                                   DRIVE SLAVE
4099:..\src/command_processing.c **** //==============================================================================
4100:..\src/command_processing.c ****  
4101:..\src/command_processing.c **** void drive_slave(uint8 motor_idx, uint8 slave_ID) {
 24287              		.loc 1 4101 0
 24288              		.cfi_startproc
 24289              		@ args = 0, pretend = 0, frame = 8
 24290              		@ frame_needed = 1, uses_anonymous_args = 0
 24291              		@ link register save eliminated.
 24292 0000 80B4     		push	{r7}
 24293              		.cfi_def_cfa_offset 4
 24294              		.cfi_offset 7, -4
 24295 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 541


 24296              		.cfi_def_cfa_offset 16
 24297 0004 00AF     		add	r7, sp, #0
 24298              		.cfi_def_cfa_register 7
 24299 0006 0346     		mov	r3, r0
 24300 0008 0A46     		mov	r2, r1
 24301 000a FB71     		strb	r3, [r7, #7]
 24302 000c 1346     		mov	r3, r2
 24303 000e BB71     		strb	r3, [r7, #6]
4102:..\src/command_processing.c **** 
4103:..\src/command_processing.c **** #ifdef MASTER_FW
4104:..\src/command_processing.c ****     uint8 packet_data[6];
4105:..\src/command_processing.c ****     uint8 packet_lenght;
4106:..\src/command_processing.c ****     int16 aux_int16;
4107:..\src/command_processing.c **** 
4108:..\src/command_processing.c ****     // If not the use of handle or an emg input mode is set, exit from master_mode
4109:..\src/command_processing.c ****     if( c_mem.motor[motor_idx].input_mode != INPUT_MODE_ENCODER3          &&
4110:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4111:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_INTEGRAL      &&
4112:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS          &&
4113:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_FCFS_ADV          &&
4114:..\src/command_processing.c ****         c_mem.motor[motor_idx].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4115:..\src/command_processing.c ****         master_mode = 0;
4116:..\src/command_processing.c ****         return;
4117:..\src/command_processing.c ****     }
4118:..\src/command_processing.c ****         
4119:..\src/command_processing.c ****     if (dev_tension[0] >= 5000 && dev_tension[0] < 7000){
4120:..\src/command_processing.c ****         master_mode = 0;
4121:..\src/command_processing.c ****         return;
4122:..\src/command_processing.c ****     }
4123:..\src/command_processing.c ****     
4124:..\src/command_processing.c ****        
4125:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4126:..\src/command_processing.c ****     packet_data[0] = CMD_SET_INPUTS;
4127:..\src/command_processing.c ****     aux_int16 = (int16) (g_ref[motor_idx].pos >> g_mem.enc[g_mem.motor[motor_idx].encoder_line].res
4128:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
4129:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
4130:..\src/command_processing.c ****     *((int16 *) &packet_data[3]) = 0;
4131:..\src/command_processing.c ****     
4132:..\src/command_processing.c ****     packet_lenght = 6;
4133:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4134:..\src/command_processing.c ****     commWriteID(packet_data, packet_lenght, slave_ID);
4135:..\src/command_processing.c **** 
4136:..\src/command_processing.c **** #endif
4137:..\src/command_processing.c **** }
 24304              		.loc 1 4137 0
 24305 0010 00BF     		nop
 24306 0012 0C37     		adds	r7, r7, #12
 24307              		.cfi_def_cfa_offset 4
 24308 0014 BD46     		mov	sp, r7
 24309              		.cfi_def_cfa_register 13
 24310              		@ sp needed
 24311 0016 80BC     		pop	{r7}
 24312              		.cfi_restore 7
 24313              		.cfi_def_cfa_offset 0
 24314 0018 7047     		bx	lr
 24315              		.cfi_endproc
 24316              	.LFE114:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 542


 24317              		.size	drive_slave, .-drive_slave
 24318 001a 00BF     		.section	.text.stop_master_device,"ax",%progbits
 24319              		.align	2
 24320              		.global	stop_master_device
 24321              		.thumb
 24322              		.thumb_func
 24323              		.type	stop_master_device, %function
 24324              	stop_master_device:
 24325              	.LFB115:
4138:..\src/command_processing.c **** 
4139:..\src/command_processing.c **** //==============================================================================
4140:..\src/command_processing.c **** //                                                            STOP MASTER DEVICE
4141:..\src/command_processing.c **** //==============================================================================
4142:..\src/command_processing.c ****  
4143:..\src/command_processing.c **** void stop_master_device() {
 24326              		.loc 1 4143 0
 24327              		.cfi_startproc
 24328              		@ args = 0, pretend = 0, frame = 0
 24329              		@ frame_needed = 1, uses_anonymous_args = 0
 24330              		@ link register save eliminated.
 24331 0000 80B4     		push	{r7}
 24332              		.cfi_def_cfa_offset 4
 24333              		.cfi_offset 7, -4
 24334 0002 00AF     		add	r7, sp, #0
 24335              		.cfi_def_cfa_register 7
4144:..\src/command_processing.c ****     
4145:..\src/command_processing.c **** #ifdef AIR_CHAMBERS_FB_FW
4146:..\src/command_processing.c ****     if (c_mem.dev.dev_type == AIR_CHAMBERS_FB){
4147:..\src/command_processing.c ****         // Stop pump and open valve
4148:..\src/command_processing.c ****         g_refNew[0].pwm = 0;    
4149:..\src/command_processing.c ****         VALVE_Write(0);
4150:..\src/command_processing.c ****     }
4151:..\src/command_processing.c **** #endif
4152:..\src/command_processing.c **** 
4153:..\src/command_processing.c **** #ifdef OTBK_ACT_WRIST_MS_FW
4154:..\src/command_processing.c ****     if (c_mem.dev.dev_type == OTBK_ACT_WRIST_MS){
4155:..\src/command_processing.c ****         //Stop wrist motor
4156:..\src/command_processing.c ****         g_refNew[0].pwm = 0;
4157:..\src/command_processing.c ****     }
4158:..\src/command_processing.c **** #endif    
4159:..\src/command_processing.c **** }
 24336              		.loc 1 4159 0
 24337 0004 00BF     		nop
 24338 0006 BD46     		mov	sp, r7
 24339              		.cfi_def_cfa_register 13
 24340              		@ sp needed
 24341 0008 80BC     		pop	{r7}
 24342              		.cfi_restore 7
 24343              		.cfi_def_cfa_offset 0
 24344 000a 7047     		bx	lr
 24345              		.cfi_endproc
 24346              	.LFE115:
 24347              		.size	stop_master_device, .-stop_master_device
 24348              		.section	.text.deactivate_slaves,"ax",%progbits
 24349              		.align	2
 24350              		.global	deactivate_slaves
 24351              		.thumb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 543


 24352              		.thumb_func
 24353              		.type	deactivate_slaves, %function
 24354              	deactivate_slaves:
 24355              	.LFB116:
4160:..\src/command_processing.c **** 
4161:..\src/command_processing.c **** //==============================================================================
4162:..\src/command_processing.c **** //                                                             DEACTIVATE SLAVES
4163:..\src/command_processing.c **** //==============================================================================
4164:..\src/command_processing.c ****  
4165:..\src/command_processing.c **** void deactivate_slaves() {
 24356              		.loc 1 4165 0
 24357              		.cfi_startproc
 24358              		@ args = 0, pretend = 0, frame = 0
 24359              		@ frame_needed = 1, uses_anonymous_args = 0
 24360              		@ link register save eliminated.
 24361 0000 80B4     		push	{r7}
 24362              		.cfi_def_cfa_offset 4
 24363              		.cfi_offset 7, -4
 24364 0002 00AF     		add	r7, sp, #0
 24365              		.cfi_def_cfa_register 7
4166:..\src/command_processing.c ****     
4167:..\src/command_processing.c **** #ifdef MASTER_FW
4168:..\src/command_processing.c ****     
4169:..\src/command_processing.c ****     uint8 packet_data[10];
4170:..\src/command_processing.c ****     uint8 packet_lenght;
4171:..\src/command_processing.c ****     
4172:..\src/command_processing.c ****     // If not a emg input mode is set, exit from master_mode
4173:..\src/command_processing.c ****     if(c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL  &&
4174:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_INTEGRAL     &&
4175:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS         &&
4176:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_FCFS_ADV     &&
4177:..\src/command_processing.c ****         c_mem.motor[0].input_mode != INPUT_MODE_EMG_PROPORTIONAL_NC     ){
4178:..\src/command_processing.c ****         master_mode = 0;
4179:..\src/command_processing.c ****         return;
4180:..\src/command_processing.c ****     }
4181:..\src/command_processing.c ****    
4182:..\src/command_processing.c ****     //Sends a Set inputs command to a second board
4183:..\src/command_processing.c ****     packet_data[0] = CMD_ACTIVATE;
4184:..\src/command_processing.c **** 
4185:..\src/command_processing.c ****     *((int16 *) &packet_data[1]) = 0;   //3 to activate, 0 to deactivate
4186:..\src/command_processing.c ****     packet_lenght = 3;
4187:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
4188:..\src/command_processing.c ****     
4189:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
4190:..\src/command_processing.c ****     
4191:..\src/command_processing.c **** #endif    
4192:..\src/command_processing.c **** }
 24366              		.loc 1 4192 0
 24367 0004 00BF     		nop
 24368 0006 BD46     		mov	sp, r7
 24369              		.cfi_def_cfa_register 13
 24370              		@ sp needed
 24371 0008 80BC     		pop	{r7}
 24372              		.cfi_restore 7
 24373              		.cfi_def_cfa_offset 0
 24374 000a 7047     		bx	lr
 24375              		.cfi_endproc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 544


 24376              	.LFE116:
 24377              		.size	deactivate_slaves, .-deactivate_slaves
 24378              		.bss
 24379              		.align	1
 24380              	i.11185:
 24381 0000 0000     		.space	2
 24382 0002 0000     		.align	2
 24383              	last_aux_int16.11316:
 24384 0004 00000000 		.space	4
 24385              		.text
 24386              	.Letext0:
 24387              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24388              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 24389              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 24390              		.file 6 "..\\src\\commands.h"
 24391              		.file 7 "..\\src\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 24392              		.file 8 "..\\src\\globals.h"
 24393              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 24394              		.section	.debug_info,"",%progbits
 24395              	.Ldebug_info0:
 24396 0000 BF230000 		.4byte	0x23bf
 24397 0004 0400     		.2byte	0x4
 24398 0006 00000000 		.4byte	.Ldebug_abbrev0
 24399 000a 04       		.byte	0x4
 24400 000b 01       		.uleb128 0x1
 24401 000c E1080000 		.4byte	.LASF379
 24402 0010 0C       		.byte	0xc
 24403 0011 EF130000 		.4byte	.LASF380
 24404 0015 59110000 		.4byte	.LASF381
 24405 0019 00000000 		.4byte	.Ldebug_ranges0+0
 24406 001d 00000000 		.4byte	0
 24407 0021 00000000 		.4byte	.Ldebug_line0
 24408 0025 02       		.uleb128 0x2
 24409 0026 01       		.byte	0x1
 24410 0027 06       		.byte	0x6
 24411 0028 B3030000 		.4byte	.LASF0
 24412 002c 02       		.uleb128 0x2
 24413 002d 01       		.byte	0x1
 24414 002e 08       		.byte	0x8
 24415 002f 2A040000 		.4byte	.LASF1
 24416 0033 02       		.uleb128 0x2
 24417 0034 02       		.byte	0x2
 24418 0035 05       		.byte	0x5
 24419 0036 2C100000 		.4byte	.LASF2
 24420 003a 02       		.uleb128 0x2
 24421 003b 02       		.byte	0x2
 24422 003c 07       		.byte	0x7
 24423 003d E1120000 		.4byte	.LASF3
 24424 0041 03       		.uleb128 0x3
 24425 0042 AD130000 		.4byte	.LASF5
 24426 0046 03       		.byte	0x3
 24427 0047 3F       		.byte	0x3f
 24428 0048 4C000000 		.4byte	0x4c
 24429 004c 02       		.uleb128 0x2
 24430 004d 04       		.byte	0x4
 24431 004e 05       		.byte	0x5
 24432 004f A8020000 		.4byte	.LASF4
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 545


 24433 0053 03       		.uleb128 0x3
 24434 0054 AC090000 		.4byte	.LASF6
 24435 0058 03       		.byte	0x3
 24436 0059 41       		.byte	0x41
 24437 005a 5E000000 		.4byte	0x5e
 24438 005e 02       		.uleb128 0x2
 24439 005f 04       		.byte	0x4
 24440 0060 07       		.byte	0x7
 24441 0061 8D070000 		.4byte	.LASF7
 24442 0065 02       		.uleb128 0x2
 24443 0066 08       		.byte	0x8
 24444 0067 05       		.byte	0x5
 24445 0068 B7090000 		.4byte	.LASF8
 24446 006c 02       		.uleb128 0x2
 24447 006d 08       		.byte	0x8
 24448 006e 07       		.byte	0x7
 24449 006f 4B0D0000 		.4byte	.LASF9
 24450 0073 04       		.uleb128 0x4
 24451 0074 04       		.byte	0x4
 24452 0075 05       		.byte	0x5
 24453 0076 696E7400 		.ascii	"int\000"
 24454 007a 02       		.uleb128 0x2
 24455 007b 04       		.byte	0x4
 24456 007c 07       		.byte	0x7
 24457 007d AE0A0000 		.4byte	.LASF10
 24458 0081 03       		.uleb128 0x3
 24459 0082 84000000 		.4byte	.LASF11
 24460 0086 04       		.byte	0x4
 24461 0087 2C       		.byte	0x2c
 24462 0088 41000000 		.4byte	0x41
 24463 008c 03       		.uleb128 0x3
 24464 008d 59120000 		.4byte	.LASF12
 24465 0091 04       		.byte	0x4
 24466 0092 30       		.byte	0x30
 24467 0093 53000000 		.4byte	0x53
 24468 0097 05       		.uleb128 0x5
 24469 0098 0E100000 		.4byte	.LASF13
 24470 009c 05       		.byte	0x5
 24471 009d E401     		.2byte	0x1e4
 24472 009f 2C000000 		.4byte	0x2c
 24473 00a3 05       		.uleb128 0x5
 24474 00a4 42140000 		.4byte	.LASF14
 24475 00a8 05       		.byte	0x5
 24476 00a9 E501     		.2byte	0x1e5
 24477 00ab 3A000000 		.4byte	0x3a
 24478 00af 05       		.uleb128 0x5
 24479 00b0 A5000000 		.4byte	.LASF15
 24480 00b4 05       		.byte	0x5
 24481 00b5 E601     		.2byte	0x1e6
 24482 00b7 5E000000 		.4byte	0x5e
 24483 00bb 05       		.uleb128 0x5
 24484 00bc AD010000 		.4byte	.LASF16
 24485 00c0 05       		.byte	0x5
 24486 00c1 E701     		.2byte	0x1e7
 24487 00c3 25000000 		.4byte	0x25
 24488 00c7 05       		.uleb128 0x5
 24489 00c8 B9110000 		.4byte	.LASF17
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 546


 24490 00cc 05       		.byte	0x5
 24491 00cd E801     		.2byte	0x1e8
 24492 00cf 33000000 		.4byte	0x33
 24493 00d3 05       		.uleb128 0x5
 24494 00d4 3B130000 		.4byte	.LASF18
 24495 00d8 05       		.byte	0x5
 24496 00d9 E901     		.2byte	0x1e9
 24497 00db 4C000000 		.4byte	0x4c
 24498 00df 05       		.uleb128 0x5
 24499 00e0 1F030000 		.4byte	.LASF19
 24500 00e4 05       		.byte	0x5
 24501 00e5 EA01     		.2byte	0x1ea
 24502 00e7 EB000000 		.4byte	0xeb
 24503 00eb 02       		.uleb128 0x2
 24504 00ec 04       		.byte	0x4
 24505 00ed 04       		.byte	0x4
 24506 00ee 710A0000 		.4byte	.LASF20
 24507 00f2 02       		.uleb128 0x2
 24508 00f3 08       		.byte	0x8
 24509 00f4 04       		.byte	0x4
 24510 00f5 0F0A0000 		.4byte	.LASF21
 24511 00f9 02       		.uleb128 0x2
 24512 00fa 01       		.byte	0x1
 24513 00fb 08       		.byte	0x8
 24514 00fc CE040000 		.4byte	.LASF22
 24515 0100 05       		.uleb128 0x5
 24516 0101 400E0000 		.4byte	.LASF23
 24517 0105 05       		.byte	0x5
 24518 0106 8E02     		.2byte	0x28e
 24519 0108 0C010000 		.4byte	0x10c
 24520 010c 06       		.uleb128 0x6
 24521 010d 97000000 		.4byte	0x97
 24522 0111 02       		.uleb128 0x2
 24523 0112 08       		.byte	0x8
 24524 0113 04       		.byte	0x4
 24525 0114 3D0C0000 		.4byte	.LASF24
 24526 0118 02       		.uleb128 0x2
 24527 0119 04       		.byte	0x4
 24528 011a 07       		.byte	0x7
 24529 011b 10000000 		.4byte	.LASF25
 24530 011f 07       		.uleb128 0x7
 24531 0120 04       		.byte	0x4
 24532 0121 F9000000 		.4byte	0xf9
 24533 0125 07       		.uleb128 0x7
 24534 0126 04       		.byte	0x4
 24535 0127 2B010000 		.4byte	0x12b
 24536 012b 08       		.uleb128 0x8
 24537 012c F9000000 		.4byte	0xf9
 24538 0130 09       		.uleb128 0x9
 24539 0131 F9000000 		.4byte	0xf9
 24540 0135 40010000 		.4byte	0x140
 24541 0139 0A       		.uleb128 0xa
 24542 013a 18010000 		.4byte	0x118
 24543 013e 19       		.byte	0x19
 24544 013f 00       		.byte	0
 24545 0140 09       		.uleb128 0x9
 24546 0141 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 547


 24547 0145 50010000 		.4byte	0x150
 24548 0149 0A       		.uleb128 0xa
 24549 014a 18010000 		.4byte	0x118
 24550 014e 07       		.byte	0x7
 24551 014f 00       		.byte	0
 24552 0150 0B       		.uleb128 0xb
 24553 0151 040B0000 		.4byte	.LASF56
 24554 0155 01       		.byte	0x1
 24555 0156 2C000000 		.4byte	0x2c
 24556 015a 06       		.byte	0x6
 24557 015b 42       		.byte	0x42
 24558 015c 15020000 		.4byte	0x215
 24559 0160 0C       		.uleb128 0xc
 24560 0161 5C140000 		.4byte	.LASF26
 24561 0165 00       		.byte	0
 24562 0166 0C       		.uleb128 0xc
 24563 0167 BD100000 		.4byte	.LASF27
 24564 016b 01       		.byte	0x1
 24565 016c 0C       		.uleb128 0xc
 24566 016d 69070000 		.4byte	.LASF28
 24567 0171 03       		.byte	0x3
 24568 0172 0C       		.uleb128 0xc
 24569 0173 62040000 		.4byte	.LASF29
 24570 0177 04       		.byte	0x4
 24571 0178 0C       		.uleb128 0xc
 24572 0179 790E0000 		.4byte	.LASF30
 24573 017d 05       		.byte	0x5
 24574 017e 0C       		.uleb128 0xc
 24575 017f 89080000 		.4byte	.LASF31
 24576 0183 06       		.byte	0x6
 24577 0184 0C       		.uleb128 0xc
 24578 0185 AD070000 		.4byte	.LASF32
 24579 0189 09       		.byte	0x9
 24580 018a 0C       		.uleb128 0xc
 24581 018b 19000000 		.4byte	.LASF33
 24582 018f 0A       		.byte	0xa
 24583 0190 0C       		.uleb128 0xc
 24584 0191 EF050000 		.4byte	.LASF34
 24585 0195 0C       		.byte	0xc
 24586 0196 0C       		.uleb128 0xc
 24587 0197 A10C0000 		.4byte	.LASF35
 24588 019b 0D       		.byte	0xd
 24589 019c 0C       		.uleb128 0xc
 24590 019d 5F000000 		.4byte	.LASF36
 24591 01a1 80       		.byte	0x80
 24592 01a2 0C       		.uleb128 0xc
 24593 01a3 BD040000 		.4byte	.LASF37
 24594 01a7 81       		.byte	0x81
 24595 01a8 0C       		.uleb128 0xc
 24596 01a9 E0050000 		.4byte	.LASF38
 24597 01ad 82       		.byte	0x82
 24598 01ae 0C       		.uleb128 0xc
 24599 01af 87100000 		.4byte	.LASF39
 24600 01b3 83       		.byte	0x83
 24601 01b4 0C       		.uleb128 0xc
 24602 01b5 D70F0000 		.4byte	.LASF40
 24603 01b9 84       		.byte	0x84
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 548


 24604 01ba 0C       		.uleb128 0xc
 24605 01bb 37030000 		.4byte	.LASF41
 24606 01bf 85       		.byte	0x85
 24607 01c0 0C       		.uleb128 0xc
 24608 01c1 CB080000 		.4byte	.LASF42
 24609 01c5 86       		.byte	0x86
 24610 01c6 0C       		.uleb128 0xc
 24611 01c7 69080000 		.4byte	.LASF43
 24612 01cb 88       		.byte	0x88
 24613 01cc 0C       		.uleb128 0xc
 24614 01cd 3A110000 		.4byte	.LASF44
 24615 01d1 89       		.byte	0x89
 24616 01d2 0C       		.uleb128 0xc
 24617 01d3 A90D0000 		.4byte	.LASF45
 24618 01d7 8B       		.byte	0x8b
 24619 01d8 0C       		.uleb128 0xc
 24620 01d9 0E0C0000 		.4byte	.LASF46
 24621 01dd 8C       		.byte	0x8c
 24622 01de 0C       		.uleb128 0xc
 24623 01df 87090000 		.4byte	.LASF47
 24624 01e3 8E       		.byte	0x8e
 24625 01e4 0C       		.uleb128 0xc
 24626 01e5 E10D0000 		.4byte	.LASF48
 24627 01e9 90       		.byte	0x90
 24628 01ea 0C       		.uleb128 0xc
 24629 01eb 46020000 		.4byte	.LASF49
 24630 01ef 92       		.byte	0x92
 24631 01f0 0C       		.uleb128 0xc
 24632 01f1 BA120000 		.4byte	.LASF50
 24633 01f5 A1       		.byte	0xa1
 24634 01f6 0C       		.uleb128 0xc
 24635 01f7 900F0000 		.4byte	.LASF51
 24636 01fb A2       		.byte	0xa2
 24637 01fc 0C       		.uleb128 0xc
 24638 01fd 620B0000 		.4byte	.LASF52
 24639 0201 A3       		.byte	0xa3
 24640 0202 0C       		.uleb128 0xc
 24641 0203 AC0F0000 		.4byte	.LASF53
 24642 0207 A4       		.byte	0xa4
 24643 0208 0C       		.uleb128 0xc
 24644 0209 AC100000 		.4byte	.LASF54
 24645 020d A5       		.byte	0xa5
 24646 020e 0C       		.uleb128 0xc
 24647 020f 440F0000 		.4byte	.LASF55
 24648 0213 A6       		.byte	0xa6
 24649 0214 00       		.byte	0
 24650 0215 0B       		.uleb128 0xb
 24651 0216 19140000 		.4byte	.LASF57
 24652 021a 01       		.byte	0x1
 24653 021b 2C000000 		.4byte	0x2c
 24654 021f 06       		.byte	0x6
 24655 0220 8D       		.byte	0x8d
 24656 0221 56020000 		.4byte	0x256
 24657 0225 0C       		.uleb128 0xc
 24658 0226 81060000 		.4byte	.LASF58
 24659 022a 00       		.byte	0
 24660 022b 0C       		.uleb128 0xc
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 549


 24661 022c 420B0000 		.4byte	.LASF59
 24662 0230 01       		.byte	0x1
 24663 0231 0C       		.uleb128 0xc
 24664 0232 57020000 		.4byte	.LASF60
 24665 0236 02       		.byte	0x2
 24666 0237 0C       		.uleb128 0xc
 24667 0238 8F010000 		.4byte	.LASF61
 24668 023c 03       		.byte	0x3
 24669 023d 0C       		.uleb128 0xc
 24670 023e 33010000 		.4byte	.LASF62
 24671 0242 04       		.byte	0x4
 24672 0243 0C       		.uleb128 0xc
 24673 0244 47000000 		.4byte	.LASF63
 24674 0248 05       		.byte	0x5
 24675 0249 0C       		.uleb128 0xc
 24676 024a D5070000 		.4byte	.LASF64
 24677 024e 06       		.byte	0x6
 24678 024f 0C       		.uleb128 0xc
 24679 0250 710F0000 		.4byte	.LASF65
 24680 0254 07       		.byte	0x7
 24681 0255 00       		.byte	0
 24682 0256 0B       		.uleb128 0xb
 24683 0257 C5090000 		.4byte	.LASF66
 24684 025b 01       		.byte	0x1
 24685 025c 2C000000 		.4byte	0x2c
 24686 0260 06       		.byte	0x6
 24687 0261 A1       		.byte	0xa1
 24688 0262 7F020000 		.4byte	0x27f
 24689 0266 0C       		.uleb128 0xc
 24690 0267 92130000 		.4byte	.LASF67
 24691 026b 00       		.byte	0
 24692 026c 0C       		.uleb128 0xc
 24693 026d 5D080000 		.4byte	.LASF68
 24694 0271 01       		.byte	0x1
 24695 0272 0C       		.uleb128 0xc
 24696 0273 2D0C0000 		.4byte	.LASF69
 24697 0277 02       		.byte	0x2
 24698 0278 0C       		.uleb128 0xc
 24699 0279 54070000 		.4byte	.LASF70
 24700 027d 03       		.byte	0x3
 24701 027e 00       		.byte	0
 24702 027f 0B       		.uleb128 0xb
 24703 0280 F2030000 		.4byte	.LASF71
 24704 0284 01       		.byte	0x1
 24705 0285 2C000000 		.4byte	0x2c
 24706 0289 06       		.byte	0x6
 24707 028a AB       		.byte	0xab
 24708 028b 9C020000 		.4byte	0x29c
 24709 028f 0C       		.uleb128 0xc
 24710 0290 670F0000 		.4byte	.LASF72
 24711 0294 00       		.byte	0
 24712 0295 0C       		.uleb128 0xc
 24713 0296 F1090000 		.4byte	.LASF73
 24714 029a 01       		.byte	0x1
 24715 029b 00       		.byte	0
 24716 029c 0B       		.uleb128 0xb
 24717 029d FA0C0000 		.4byte	.LASF74
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 550


 24718 02a1 01       		.byte	0x1
 24719 02a2 2C000000 		.4byte	0x2c
 24720 02a6 06       		.byte	0x6
 24721 02a7 B0       		.byte	0xb0
 24722 02a8 B9020000 		.4byte	0x2b9
 24723 02ac 0C       		.uleb128 0xc
 24724 02ad 66060000 		.4byte	.LASF75
 24725 02b1 00       		.byte	0
 24726 02b2 0C       		.uleb128 0xc
 24727 02b3 1A080000 		.4byte	.LASF76
 24728 02b7 01       		.byte	0x1
 24729 02b8 00       		.byte	0
 24730 02b9 0B       		.uleb128 0xb
 24731 02ba AE110000 		.4byte	.LASF77
 24732 02be 01       		.byte	0x1
 24733 02bf 2C000000 		.4byte	0x2c
 24734 02c3 06       		.byte	0x6
 24735 02c4 B8       		.byte	0xb8
 24736 02c5 06030000 		.4byte	0x306
 24737 02c9 0C       		.uleb128 0xc
 24738 02ca 21080000 		.4byte	.LASF78
 24739 02ce 00       		.byte	0
 24740 02cf 0C       		.uleb128 0xc
 24741 02d0 27140000 		.4byte	.LASF79
 24742 02d4 01       		.byte	0x1
 24743 02d5 0C       		.uleb128 0xc
 24744 02d6 D5090000 		.4byte	.LASF80
 24745 02da 02       		.byte	0x2
 24746 02db 0C       		.uleb128 0xc
 24747 02dc EA0B0000 		.4byte	.LASF81
 24748 02e0 03       		.byte	0x3
 24749 02e1 0C       		.uleb128 0xc
 24750 02e2 0F0B0000 		.4byte	.LASF82
 24751 02e6 04       		.byte	0x4
 24752 02e7 0C       		.uleb128 0xc
 24753 02e8 620D0000 		.4byte	.LASF83
 24754 02ec 05       		.byte	0x5
 24755 02ed 0C       		.uleb128 0xc
 24756 02ee 490C0000 		.4byte	.LASF84
 24757 02f2 06       		.byte	0x6
 24758 02f3 0C       		.uleb128 0xc
 24759 02f4 AC0B0000 		.4byte	.LASF85
 24760 02f8 07       		.byte	0x7
 24761 02f9 0C       		.uleb128 0xc
 24762 02fa 34060000 		.4byte	.LASF86
 24763 02fe 08       		.byte	0x8
 24764 02ff 0C       		.uleb128 0xc
 24765 0300 48070000 		.4byte	.LASF87
 24766 0304 09       		.byte	0x9
 24767 0305 00       		.byte	0
 24768 0306 03       		.uleb128 0x3
 24769 0307 73130000 		.4byte	.LASF88
 24770 030b 07       		.byte	0x7
 24771 030c 7E       		.byte	0x7e
 24772 030d 11030000 		.4byte	0x311
 24773 0311 0D       		.uleb128 0xd
 24774 0312 73130000 		.4byte	.LASF88
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 551


 24775 0316 07       		.uleb128 0x7
 24776 0317 04       		.byte	0x4
 24777 0318 06030000 		.4byte	0x306
 24778 031c 0E       		.uleb128 0xe
 24779 031d 6F090000 		.4byte	.LASF91
 24780 0321 10       		.byte	0x10
 24781 0322 08       		.byte	0x8
 24782 0323 E1       		.byte	0xe1
 24783 0324 59030000 		.4byte	0x359
 24784 0328 0F       		.uleb128 0xf
 24785 0329 706F7300 		.ascii	"pos\000"
 24786 032d 08       		.byte	0x8
 24787 032e E2       		.byte	0xe2
 24788 032f D3000000 		.4byte	0xd3
 24789 0333 00       		.byte	0
 24790 0334 10       		.uleb128 0x10
 24791 0335 4D080000 		.4byte	.LASF89
 24792 0339 08       		.byte	0x8
 24793 033a E3       		.byte	0xe3
 24794 033b D3000000 		.4byte	0xd3
 24795 033f 04       		.byte	0x4
 24796 0340 0F       		.uleb128 0xf
 24797 0341 70776D00 		.ascii	"pwm\000"
 24798 0345 08       		.byte	0x8
 24799 0346 E4       		.byte	0xe4
 24800 0347 D3000000 		.4byte	0xd3
 24801 034b 08       		.byte	0x8
 24802 034c 10       		.uleb128 0x10
 24803 034d A30D0000 		.4byte	.LASF90
 24804 0351 08       		.byte	0x8
 24805 0352 E5       		.byte	0xe5
 24806 0353 97000000 		.4byte	0x97
 24807 0357 0C       		.byte	0xc
 24808 0358 00       		.byte	0
 24809 0359 0E       		.uleb128 0xe
 24810 035a 3C0F0000 		.4byte	.LASF92
 24811 035e 34       		.byte	0x34
 24812 035f 08       		.byte	0x8
 24813 0360 EC       		.byte	0xec
 24814 0361 BA030000 		.4byte	0x3ba
 24815 0365 0F       		.uleb128 0xf
 24816 0366 706F7300 		.ascii	"pos\000"
 24817 036a 08       		.byte	0x8
 24818 036b ED       		.byte	0xed
 24819 036c BA030000 		.4byte	0x3ba
 24820 0370 00       		.byte	0
 24821 0371 10       		.uleb128 0x10
 24822 0372 4D080000 		.4byte	.LASF89
 24823 0376 08       		.byte	0x8
 24824 0377 EE       		.byte	0xee
 24825 0378 D3000000 		.4byte	0xd3
 24826 037c 0C       		.byte	0xc
 24827 037d 10       		.uleb128 0x10
 24828 037e FB110000 		.4byte	.LASF93
 24829 0382 08       		.byte	0x8
 24830 0383 EF       		.byte	0xef
 24831 0384 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 552


 24832 0388 10       		.byte	0x10
 24833 0389 10       		.uleb128 0x10
 24834 038a CB070000 		.4byte	.LASF94
 24835 038e 08       		.byte	0x8
 24836 038f F0       		.byte	0xf0
 24837 0390 D3000000 		.4byte	0xd3
 24838 0394 14       		.byte	0x14
 24839 0395 0F       		.uleb128 0xf
 24840 0396 726F7400 		.ascii	"rot\000"
 24841 039a 08       		.byte	0x8
 24842 039b F1       		.byte	0xf1
 24843 039c CA030000 		.4byte	0x3ca
 24844 03a0 18       		.byte	0x18
 24845 03a1 0F       		.uleb128 0xf
 24846 03a2 76656C00 		.ascii	"vel\000"
 24847 03a6 08       		.byte	0x8
 24848 03a7 F2       		.byte	0xf2
 24849 03a8 BA030000 		.4byte	0x3ba
 24850 03ac 1C       		.byte	0x1c
 24851 03ad 0F       		.uleb128 0xf
 24852 03ae 61636300 		.ascii	"acc\000"
 24853 03b2 08       		.byte	0x8
 24854 03b3 F3       		.byte	0xf3
 24855 03b4 BA030000 		.4byte	0x3ba
 24856 03b8 28       		.byte	0x28
 24857 03b9 00       		.byte	0
 24858 03ba 09       		.uleb128 0x9
 24859 03bb D3000000 		.4byte	0xd3
 24860 03bf CA030000 		.4byte	0x3ca
 24861 03c3 0A       		.uleb128 0xa
 24862 03c4 18010000 		.4byte	0x118
 24863 03c8 02       		.byte	0x2
 24864 03c9 00       		.byte	0
 24865 03ca 09       		.uleb128 0x9
 24866 03cb BB000000 		.4byte	0xbb
 24867 03cf DA030000 		.4byte	0x3da
 24868 03d3 0A       		.uleb128 0xa
 24869 03d4 18010000 		.4byte	0x118
 24870 03d8 02       		.byte	0x2
 24871 03d9 00       		.byte	0
 24872 03da 0E       		.uleb128 0xe
 24873 03db 8A0A0000 		.4byte	.LASF95
 24874 03df 28       		.byte	0x28
 24875 03e0 08       		.byte	0x8
 24876 03e1 F6       		.byte	0xf6
 24877 03e2 0B040000 		.4byte	0x40b
 24878 03e6 0F       		.uleb128 0xf
 24879 03e7 656D6700 		.ascii	"emg\000"
 24880 03eb 08       		.byte	0x8
 24881 03ec F7       		.byte	0xf7
 24882 03ed 0B040000 		.4byte	0x40b
 24883 03f1 00       		.byte	0
 24884 03f2 10       		.uleb128 0x10
 24885 03f3 E20B0000 		.4byte	.LASF96
 24886 03f7 08       		.byte	0x8
 24887 03f8 F8       		.byte	0xf8
 24888 03f9 1B040000 		.4byte	0x41b
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 553


 24889 03fd 08       		.byte	0x8
 24890 03fe 10       		.uleb128 0x10
 24891 03ff 68100000 		.4byte	.LASF97
 24892 0403 08       		.byte	0x8
 24893 0404 F9       		.byte	0xf9
 24894 0405 0B040000 		.4byte	0x40b
 24895 0409 20       		.byte	0x20
 24896 040a 00       		.byte	0
 24897 040b 09       		.uleb128 0x9
 24898 040c D3000000 		.4byte	0xd3
 24899 0410 1B040000 		.4byte	0x41b
 24900 0414 0A       		.uleb128 0xa
 24901 0415 18010000 		.4byte	0x118
 24902 0419 01       		.byte	0x1
 24903 041a 00       		.byte	0
 24904 041b 09       		.uleb128 0x9
 24905 041c D3000000 		.4byte	0xd3
 24906 0420 2B040000 		.4byte	0x42b
 24907 0424 0A       		.uleb128 0xa
 24908 0425 18010000 		.4byte	0x118
 24909 0429 05       		.byte	0x5
 24910 042a 00       		.byte	0
 24911 042b 0E       		.uleb128 0xe
 24912 042c 2C050000 		.4byte	.LASF98
 24913 0430 04       		.byte	0x4
 24914 0431 08       		.byte	0x8
 24915 0432 FC       		.byte	0xfc
 24916 0433 44040000 		.4byte	0x444
 24917 0437 10       		.uleb128 0x10
 24918 0438 B4040000 		.4byte	.LASF99
 24919 043c 08       		.byte	0x8
 24920 043d FD       		.byte	0xfd
 24921 043e EB000000 		.4byte	0xeb
 24922 0442 00       		.byte	0
 24923 0443 00       		.byte	0
 24924 0444 11       		.uleb128 0x11
 24925 0445 91000000 		.4byte	.LASF100
 24926 0449 86       		.byte	0x86
 24927 044a 08       		.byte	0x8
 24928 044b 0401     		.2byte	0x104
 24929 044d 86040000 		.4byte	0x486
 24930 0451 12       		.uleb128 0x12
 24931 0452 02060000 		.4byte	.LASF101
 24932 0456 08       		.byte	0x8
 24933 0457 0501     		.2byte	0x105
 24934 0459 86040000 		.4byte	0x486
 24935 045d 00       		.byte	0
 24936 045e 12       		.uleb128 0x12
 24937 045f 780D0000 		.4byte	.LASF102
 24938 0463 08       		.byte	0x8
 24939 0464 0601     		.2byte	0x106
 24940 0466 C7000000 		.4byte	0xc7
 24941 046a 80       		.byte	0x80
 24942 046b 13       		.uleb128 0x13
 24943 046c 696E6400 		.ascii	"ind\000"
 24944 0470 08       		.byte	0x8
 24945 0471 0701     		.2byte	0x107
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 554


 24946 0473 C7000000 		.4byte	0xc7
 24947 0477 82       		.byte	0x82
 24948 0478 12       		.uleb128 0x12
 24949 0479 28020000 		.4byte	.LASF103
 24950 047d 08       		.byte	0x8
 24951 047e 0801     		.2byte	0x108
 24952 0480 97000000 		.4byte	0x97
 24953 0484 84       		.byte	0x84
 24954 0485 00       		.byte	0
 24955 0486 09       		.uleb128 0x9
 24956 0487 97000000 		.4byte	0x97
 24957 048b 96040000 		.4byte	0x496
 24958 048f 0A       		.uleb128 0xa
 24959 0490 18010000 		.4byte	0x118
 24960 0494 7F       		.byte	0x7f
 24961 0495 00       		.byte	0
 24962 0496 11       		.uleb128 0x11
 24963 0497 0D030000 		.4byte	.LASF104
 24964 049b 50       		.byte	0x50
 24965 049c 08       		.byte	0x8
 24966 049d 1101     		.2byte	0x111
 24967 049f FF040000 		.4byte	0x4ff
 24968 04a3 12       		.uleb128 0x12
 24969 04a4 48030000 		.4byte	.LASF105
 24970 04a8 08       		.byte	0x8
 24971 04a9 1201     		.2byte	0x112
 24972 04ab FF040000 		.4byte	0x4ff
 24973 04af 00       		.byte	0
 24974 04b0 12       		.uleb128 0x12
 24975 04b1 EA010000 		.4byte	.LASF106
 24976 04b5 08       		.byte	0x8
 24977 04b6 1301     		.2byte	0x113
 24978 04b8 0F050000 		.4byte	0x50f
 24979 04bc 08       		.byte	0x8
 24980 04bd 12       		.uleb128 0x12
 24981 04be 200C0000 		.4byte	.LASF107
 24982 04c2 08       		.byte	0x8
 24983 04c3 1401     		.2byte	0x114
 24984 04c5 1F050000 		.4byte	0x51f
 24985 04c9 30       		.byte	0x30
 24986 04ca 12       		.uleb128 0x12
 24987 04cb 53010000 		.4byte	.LASF108
 24988 04cf 08       		.byte	0x8
 24989 04d0 1501     		.2byte	0x115
 24990 04d2 AF000000 		.4byte	0xaf
 24991 04d6 40       		.byte	0x40
 24992 04d7 12       		.uleb128 0x12
 24993 04d8 C6130000 		.4byte	.LASF109
 24994 04dc 08       		.byte	0x8
 24995 04dd 1601     		.2byte	0x116
 24996 04df AF000000 		.4byte	0xaf
 24997 04e3 44       		.byte	0x44
 24998 04e4 12       		.uleb128 0x12
 24999 04e5 9F070000 		.4byte	.LASF110
 25000 04e9 08       		.byte	0x8
 25001 04ea 1701     		.2byte	0x117
 25002 04ec AF000000 		.4byte	0xaf
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 555


 25003 04f0 48       		.byte	0x48
 25004 04f1 12       		.uleb128 0x12
 25005 04f2 E9070000 		.4byte	.LASF111
 25006 04f6 08       		.byte	0x8
 25007 04f7 1801     		.2byte	0x118
 25008 04f9 AF000000 		.4byte	0xaf
 25009 04fd 4C       		.byte	0x4c
 25010 04fe 00       		.byte	0
 25011 04ff 09       		.uleb128 0x9
 25012 0500 AF000000 		.4byte	0xaf
 25013 0504 0F050000 		.4byte	0x50f
 25014 0508 0A       		.uleb128 0xa
 25015 0509 18010000 		.4byte	0x118
 25016 050d 01       		.byte	0x1
 25017 050e 00       		.byte	0
 25018 050f 09       		.uleb128 0x9
 25019 0510 AF000000 		.4byte	0xaf
 25020 0514 1F050000 		.4byte	0x51f
 25021 0518 0A       		.uleb128 0xa
 25022 0519 18010000 		.4byte	0x118
 25023 051d 09       		.byte	0x9
 25024 051e 00       		.byte	0
 25025 051f 09       		.uleb128 0x9
 25026 0520 AF000000 		.4byte	0xaf
 25027 0524 2F050000 		.4byte	0x52f
 25028 0528 0A       		.uleb128 0xa
 25029 0529 18010000 		.4byte	0x118
 25030 052d 03       		.byte	0x3
 25031 052e 00       		.byte	0
 25032 052f 11       		.uleb128 0x11
 25033 0530 96050000 		.4byte	.LASF112
 25034 0534 10       		.byte	0x10
 25035 0535 08       		.byte	0x8
 25036 0536 1F01     		.2byte	0x11f
 25037 0538 BE050000 		.4byte	0x5be
 25038 053c 13       		.uleb128 0x13
 25039 053d 696400   		.ascii	"id\000"
 25040 0540 08       		.byte	0x8
 25041 0541 2001     		.2byte	0x120
 25042 0543 97000000 		.4byte	0x97
 25043 0547 00       		.byte	0
 25044 0548 12       		.uleb128 0x12
 25045 0549 96100000 		.4byte	.LASF113
 25046 054d 08       		.byte	0x8
 25047 054e 2101     		.2byte	0x121
 25048 0550 BE050000 		.4byte	0x5be
 25049 0554 01       		.byte	0x1
 25050 0555 12       		.uleb128 0x12
 25051 0556 06110000 		.4byte	.LASF114
 25052 055a 08       		.byte	0x8
 25053 055b 2201     		.2byte	0x122
 25054 055d BE050000 		.4byte	0x5be
 25055 0561 04       		.byte	0x4
 25056 0562 12       		.uleb128 0x12
 25057 0563 57040000 		.4byte	.LASF115
 25058 0567 08       		.byte	0x8
 25059 0568 2301     		.2byte	0x123
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 556


 25060 056a 97000000 		.4byte	0x97
 25061 056e 07       		.byte	0x7
 25062 056f 12       		.uleb128 0x12
 25063 0570 C9020000 		.4byte	.LASF116
 25064 0574 08       		.byte	0x8
 25065 0575 2401     		.2byte	0x124
 25066 0577 97000000 		.4byte	0x97
 25067 057b 08       		.byte	0x8
 25068 057c 12       		.uleb128 0x12
 25069 057d 73020000 		.4byte	.LASF117
 25070 0581 08       		.byte	0x8
 25071 0582 2501     		.2byte	0x125
 25072 0584 97000000 		.4byte	0x97
 25073 0588 09       		.byte	0x9
 25074 0589 12       		.uleb128 0x12
 25075 058a 8D120000 		.4byte	.LASF118
 25076 058e 08       		.byte	0x8
 25077 058f 2601     		.2byte	0x126
 25078 0591 97000000 		.4byte	0x97
 25079 0595 0A       		.byte	0xa
 25080 0596 12       		.uleb128 0x12
 25081 0597 51120000 		.4byte	.LASF119
 25082 059b 08       		.byte	0x8
 25083 059c 2701     		.2byte	0x127
 25084 059e 97000000 		.4byte	0x97
 25085 05a2 0B       		.byte	0xb
 25086 05a3 12       		.uleb128 0x12
 25087 05a4 E60E0000 		.4byte	.LASF120
 25088 05a8 08       		.byte	0x8
 25089 05a9 2801     		.2byte	0x128
 25090 05ab 97000000 		.4byte	0x97
 25091 05af 0C       		.byte	0xc
 25092 05b0 12       		.uleb128 0x12
 25093 05b1 EA020000 		.4byte	.LASF121
 25094 05b5 08       		.byte	0x8
 25095 05b6 2901     		.2byte	0x129
 25096 05b8 BE050000 		.4byte	0x5be
 25097 05bc 0D       		.byte	0xd
 25098 05bd 00       		.byte	0
 25099 05be 09       		.uleb128 0x9
 25100 05bf 97000000 		.4byte	0x97
 25101 05c3 CE050000 		.4byte	0x5ce
 25102 05c7 0A       		.uleb128 0xa
 25103 05c8 18010000 		.4byte	0x118
 25104 05cc 02       		.byte	0x2
 25105 05cd 00       		.byte	0
 25106 05ce 11       		.uleb128 0x11
 25107 05cf 5E130000 		.4byte	.LASF122
 25108 05d3 70       		.byte	0x70
 25109 05d4 08       		.byte	0x8
 25110 05d5 3001     		.2byte	0x130
 25111 05d7 48070000 		.4byte	0x748
 25112 05db 13       		.uleb128 0x13
 25113 05dc 6B5F7000 		.ascii	"k_p\000"
 25114 05e0 08       		.byte	0x8
 25115 05e1 3101     		.2byte	0x131
 25116 05e3 D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 557


 25117 05e7 00       		.byte	0
 25118 05e8 13       		.uleb128 0x13
 25119 05e9 6B5F6900 		.ascii	"k_i\000"
 25120 05ed 08       		.byte	0x8
 25121 05ee 3201     		.2byte	0x132
 25122 05f0 D3000000 		.4byte	0xd3
 25123 05f4 04       		.byte	0x4
 25124 05f5 13       		.uleb128 0x13
 25125 05f6 6B5F6400 		.ascii	"k_d\000"
 25126 05fa 08       		.byte	0x8
 25127 05fb 3301     		.2byte	0x133
 25128 05fd D3000000 		.4byte	0xd3
 25129 0601 08       		.byte	0x8
 25130 0602 12       		.uleb128 0x12
 25131 0603 F20D0000 		.4byte	.LASF123
 25132 0607 08       		.byte	0x8
 25133 0608 3401     		.2byte	0x134
 25134 060a D3000000 		.4byte	0xd3
 25135 060e 0C       		.byte	0xc
 25136 060f 12       		.uleb128 0x12
 25137 0610 4C050000 		.4byte	.LASF124
 25138 0614 08       		.byte	0x8
 25139 0615 3501     		.2byte	0x135
 25140 0617 D3000000 		.4byte	0xd3
 25141 061b 10       		.byte	0x10
 25142 061c 12       		.uleb128 0x12
 25143 061d 26050000 		.4byte	.LASF125
 25144 0621 08       		.byte	0x8
 25145 0622 3601     		.2byte	0x136
 25146 0624 D3000000 		.4byte	0xd3
 25147 0628 14       		.byte	0x14
 25148 0629 12       		.uleb128 0x12
 25149 062a F4110000 		.4byte	.LASF126
 25150 062e 08       		.byte	0x8
 25151 062f 3701     		.2byte	0x137
 25152 0631 D3000000 		.4byte	0xd3
 25153 0635 18       		.byte	0x18
 25154 0636 12       		.uleb128 0x12
 25155 0637 D9050000 		.4byte	.LASF127
 25156 063b 08       		.byte	0x8
 25157 063c 3801     		.2byte	0x138
 25158 063e D3000000 		.4byte	0xd3
 25159 0642 1C       		.byte	0x1c
 25160 0643 12       		.uleb128 0x12
 25161 0644 58100000 		.4byte	.LASF128
 25162 0648 08       		.byte	0x8
 25163 0649 3901     		.2byte	0x139
 25164 064b D3000000 		.4byte	0xd3
 25165 064f 20       		.byte	0x20
 25166 0650 12       		.uleb128 0x12
 25167 0651 09060000 		.4byte	.LASF129
 25168 0655 08       		.byte	0x8
 25169 0656 3A01     		.2byte	0x13a
 25170 0658 D3000000 		.4byte	0xd3
 25171 065c 24       		.byte	0x24
 25172 065d 12       		.uleb128 0x12
 25173 065e DA060000 		.4byte	.LASF130
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 558


 25174 0662 08       		.byte	0x8
 25175 0663 3B01     		.2byte	0x13b
 25176 0665 D3000000 		.4byte	0xd3
 25177 0669 28       		.byte	0x28
 25178 066a 12       		.uleb128 0x12
 25179 066b 65140000 		.4byte	.LASF131
 25180 066f 08       		.byte	0x8
 25181 0670 3C01     		.2byte	0x13c
 25182 0672 D3000000 		.4byte	0xd3
 25183 0676 2C       		.byte	0x2c
 25184 0677 12       		.uleb128 0x12
 25185 0678 05080000 		.4byte	.LASF132
 25186 067c 08       		.byte	0x8
 25187 067d 3D01     		.2byte	0x13d
 25188 067f 97000000 		.4byte	0x97
 25189 0683 30       		.byte	0x30
 25190 0684 12       		.uleb128 0x12
 25191 0685 DD110000 		.4byte	.LASF133
 25192 0689 08       		.byte	0x8
 25193 068a 3E01     		.2byte	0x13e
 25194 068c 97000000 		.4byte	0x97
 25195 0690 31       		.byte	0x31
 25196 0691 12       		.uleb128 0x12
 25197 0692 120E0000 		.4byte	.LASF134
 25198 0696 08       		.byte	0x8
 25199 0697 3F01     		.2byte	0x13f
 25200 0699 97000000 		.4byte	0x97
 25201 069d 32       		.byte	0x32
 25202 069e 12       		.uleb128 0x12
 25203 069f 7B130000 		.4byte	.LASF135
 25204 06a3 08       		.byte	0x8
 25205 06a4 4001     		.2byte	0x140
 25206 06a6 97000000 		.4byte	0x97
 25207 06aa 33       		.byte	0x33
 25208 06ab 12       		.uleb128 0x12
 25209 06ac 07010000 		.4byte	.LASF136
 25210 06b0 08       		.byte	0x8
 25211 06b1 4101     		.2byte	0x141
 25212 06b3 D3000000 		.4byte	0xd3
 25213 06b7 34       		.byte	0x34
 25214 06b8 12       		.uleb128 0x12
 25215 06b9 6B050000 		.4byte	.LASF137
 25216 06bd 08       		.byte	0x8
 25217 06be 4201     		.2byte	0x142
 25218 06c0 D3000000 		.4byte	0xd3
 25219 06c4 38       		.byte	0x38
 25220 06c5 12       		.uleb128 0x12
 25221 06c6 340A0000 		.4byte	.LASF138
 25222 06ca 08       		.byte	0x8
 25223 06cb 4301     		.2byte	0x143
 25224 06cd D3000000 		.4byte	0xd3
 25225 06d1 3C       		.byte	0x3c
 25226 06d2 12       		.uleb128 0x12
 25227 06d3 D3040000 		.4byte	.LASF139
 25228 06d7 08       		.byte	0x8
 25229 06d8 4401     		.2byte	0x144
 25230 06da D3000000 		.4byte	0xd3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 559


 25231 06de 40       		.byte	0x40
 25232 06df 12       		.uleb128 0x12
 25233 06e0 47010000 		.4byte	.LASF140
 25234 06e4 08       		.byte	0x8
 25235 06e5 4501     		.2byte	0x145
 25236 06e7 48070000 		.4byte	0x748
 25237 06eb 44       		.byte	0x44
 25238 06ec 12       		.uleb128 0x12
 25239 06ed 0B140000 		.4byte	.LASF141
 25240 06f1 08       		.byte	0x8
 25241 06f2 4601     		.2byte	0x146
 25242 06f4 C7000000 		.4byte	0xc7
 25243 06f8 5C       		.byte	0x5c
 25244 06f9 12       		.uleb128 0x12
 25245 06fa 52080000 		.4byte	.LASF142
 25246 06fe 08       		.byte	0x8
 25247 06ff 4701     		.2byte	0x147
 25248 0701 97000000 		.4byte	0x97
 25249 0705 5E       		.byte	0x5e
 25250 0706 12       		.uleb128 0x12
 25251 0707 2F0B0000 		.4byte	.LASF143
 25252 070b 08       		.byte	0x8
 25253 070c 4801     		.2byte	0x148
 25254 070e 97000000 		.4byte	0x97
 25255 0712 5F       		.byte	0x5f
 25256 0713 12       		.uleb128 0x12
 25257 0714 7B040000 		.4byte	.LASF144
 25258 0718 08       		.byte	0x8
 25259 0719 4901     		.2byte	0x149
 25260 071b 97000000 		.4byte	0x97
 25261 071f 60       		.byte	0x60
 25262 0720 12       		.uleb128 0x12
 25263 0721 15050000 		.4byte	.LASF145
 25264 0725 08       		.byte	0x8
 25265 0726 4A01     		.2byte	0x14a
 25266 0728 97000000 		.4byte	0x97
 25267 072c 61       		.byte	0x61
 25268 072d 12       		.uleb128 0x12
 25269 072e 38040000 		.4byte	.LASF146
 25270 0732 08       		.byte	0x8
 25271 0733 4B01     		.2byte	0x14b
 25272 0735 97000000 		.4byte	0x97
 25273 0739 62       		.byte	0x62
 25274 073a 12       		.uleb128 0x12
 25275 073b EA020000 		.4byte	.LASF121
 25276 073f 08       		.byte	0x8
 25277 0740 4C01     		.2byte	0x14c
 25278 0742 58070000 		.4byte	0x758
 25279 0746 63       		.byte	0x63
 25280 0747 00       		.byte	0
 25281 0748 09       		.uleb128 0x9
 25282 0749 EB000000 		.4byte	0xeb
 25283 074d 58070000 		.4byte	0x758
 25284 0751 0A       		.uleb128 0xa
 25285 0752 18010000 		.4byte	0x118
 25286 0756 05       		.byte	0x5
 25287 0757 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 560


 25288 0758 09       		.uleb128 0x9
 25289 0759 97000000 		.4byte	0x97
 25290 075d 68070000 		.4byte	0x768
 25291 0761 0A       		.uleb128 0xa
 25292 0762 18010000 		.4byte	0x118
 25293 0766 0C       		.byte	0xc
 25294 0767 00       		.byte	0
 25295 0768 11       		.uleb128 0x11
 25296 0769 F4120000 		.4byte	.LASF147
 25297 076d 30       		.byte	0x30
 25298 076e 08       		.byte	0x8
 25299 076f 5301     		.2byte	0x153
 25300 0771 EB070000 		.4byte	0x7eb
 25301 0775 12       		.uleb128 0x12
 25302 0776 160A0000 		.4byte	.LASF148
 25303 077a 08       		.byte	0x8
 25304 077b 5401     		.2byte	0x154
 25305 077d EB070000 		.4byte	0x7eb
 25306 0781 00       		.byte	0
 25307 0782 13       		.uleb128 0x13
 25308 0783 72657300 		.ascii	"res\000"
 25309 0787 08       		.byte	0x8
 25310 0788 5501     		.2byte	0x155
 25311 078a BE050000 		.4byte	0x5be
 25312 078e 05       		.byte	0x5
 25313 078f 12       		.uleb128 0x12
 25314 0790 14080000 		.4byte	.LASF149
 25315 0794 08       		.byte	0x8
 25316 0795 5601     		.2byte	0x156
 25317 0797 BA030000 		.4byte	0x3ba
 25318 079b 08       		.byte	0x8
 25319 079c 12       		.uleb128 0x12
 25320 079d 45050000 		.4byte	.LASF150
 25321 07a1 08       		.byte	0x8
 25322 07a2 5701     		.2byte	0x157
 25323 07a4 FB070000 		.4byte	0x7fb
 25324 07a8 14       		.byte	0x14
 25325 07a9 12       		.uleb128 0x12
 25326 07aa C90C0000 		.4byte	.LASF151
 25327 07ae 08       		.byte	0x8
 25328 07af 5801     		.2byte	0x158
 25329 07b1 97000000 		.4byte	0x97
 25330 07b5 20       		.byte	0x20
 25331 07b6 12       		.uleb128 0x12
 25332 07b7 2E020000 		.4byte	.LASF152
 25333 07bb 08       		.byte	0x8
 25334 07bc 5901     		.2byte	0x159
 25335 07be BE050000 		.4byte	0x5be
 25336 07c2 21       		.byte	0x21
 25337 07c3 12       		.uleb128 0x12
 25338 07c4 7C0C0000 		.4byte	.LASF153
 25339 07c8 08       		.byte	0x8
 25340 07c9 5A01     		.2byte	0x15a
 25341 07cb BB000000 		.4byte	0xbb
 25342 07cf 24       		.byte	0x24
 25343 07d0 12       		.uleb128 0x12
 25344 07d1 0D0F0000 		.4byte	.LASF154
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 561


 25345 07d5 08       		.byte	0x8
 25346 07d6 5B01     		.2byte	0x15b
 25347 07d8 CA030000 		.4byte	0x3ca
 25348 07dc 25       		.byte	0x25
 25349 07dd 12       		.uleb128 0x12
 25350 07de EA020000 		.4byte	.LASF121
 25351 07e2 08       		.byte	0x8
 25352 07e3 5C01     		.2byte	0x15c
 25353 07e5 0B080000 		.4byte	0x80b
 25354 07e9 28       		.byte	0x28
 25355 07ea 00       		.byte	0
 25356 07eb 09       		.uleb128 0x9
 25357 07ec 97000000 		.4byte	0x97
 25358 07f0 FB070000 		.4byte	0x7fb
 25359 07f4 0A       		.uleb128 0xa
 25360 07f5 18010000 		.4byte	0x118
 25361 07f9 04       		.byte	0x4
 25362 07fa 00       		.byte	0
 25363 07fb 09       		.uleb128 0x9
 25364 07fc DF000000 		.4byte	0xdf
 25365 0800 0B080000 		.4byte	0x80b
 25366 0804 0A       		.uleb128 0xa
 25367 0805 18010000 		.4byte	0x118
 25368 0809 02       		.byte	0x2
 25369 080a 00       		.byte	0
 25370 080b 09       		.uleb128 0x9
 25371 080c 97000000 		.4byte	0x97
 25372 0810 1B080000 		.4byte	0x81b
 25373 0814 0A       		.uleb128 0xa
 25374 0815 18010000 		.4byte	0x118
 25375 0819 07       		.byte	0x7
 25376 081a 00       		.byte	0
 25377 081b 11       		.uleb128 0x11
 25378 081c E3010000 		.4byte	.LASF155
 25379 0820 10       		.byte	0x10
 25380 0821 08       		.byte	0x8
 25381 0822 6301     		.2byte	0x163
 25382 0824 6A080000 		.4byte	0x86a
 25383 0828 12       		.uleb128 0x12
 25384 0829 000C0000 		.4byte	.LASF156
 25385 082d 08       		.byte	0x8
 25386 082e 6401     		.2byte	0x164
 25387 0830 6A080000 		.4byte	0x86a
 25388 0834 00       		.byte	0
 25389 0835 12       		.uleb128 0x12
 25390 0836 D0130000 		.4byte	.LASF157
 25391 083a 08       		.byte	0x8
 25392 083b 6501     		.2byte	0x165
 25393 083d FF040000 		.4byte	0x4ff
 25394 0841 04       		.byte	0x4
 25395 0842 12       		.uleb128 0x12
 25396 0843 77050000 		.4byte	.LASF158
 25397 0847 08       		.byte	0x8
 25398 0848 6601     		.2byte	0x166
 25399 084a 7A080000 		.4byte	0x87a
 25400 084e 0C       		.byte	0xc
 25401 084f 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 562


 25402 0850 270F0000 		.4byte	.LASF159
 25403 0854 08       		.byte	0x8
 25404 0855 6701     		.2byte	0x167
 25405 0857 97000000 		.4byte	0x97
 25406 085b 0E       		.byte	0xe
 25407 085c 12       		.uleb128 0x12
 25408 085d D2110000 		.4byte	.LASF160
 25409 0861 08       		.byte	0x8
 25410 0862 6801     		.2byte	0x168
 25411 0864 97000000 		.4byte	0x97
 25412 0868 0F       		.byte	0xf
 25413 0869 00       		.byte	0
 25414 086a 09       		.uleb128 0x9
 25415 086b A3000000 		.4byte	0xa3
 25416 086f 7A080000 		.4byte	0x87a
 25417 0873 0A       		.uleb128 0xa
 25418 0874 18010000 		.4byte	0x118
 25419 0878 01       		.byte	0x1
 25420 0879 00       		.byte	0
 25421 087a 09       		.uleb128 0x9
 25422 087b 97000000 		.4byte	0x97
 25423 087f 8A080000 		.4byte	0x88a
 25424 0883 0A       		.uleb128 0xa
 25425 0884 18010000 		.4byte	0x118
 25426 0888 01       		.byte	0x1
 25427 0889 00       		.byte	0
 25428 088a 11       		.uleb128 0x11
 25429 088b 770B0000 		.4byte	.LASF161
 25430 088f 20       		.byte	0x20
 25431 0890 08       		.byte	0x8
 25432 0891 6F01     		.2byte	0x16f
 25433 0893 CC080000 		.4byte	0x8cc
 25434 0897 12       		.uleb128 0x12
 25435 0898 8E020000 		.4byte	.LASF162
 25436 089c 08       		.byte	0x8
 25437 089d 7001     		.2byte	0x170
 25438 089f 97000000 		.4byte	0x97
 25439 08a3 00       		.byte	0
 25440 08a4 12       		.uleb128 0x12
 25441 08a5 EB0C0000 		.4byte	.LASF163
 25442 08a9 08       		.byte	0x8
 25443 08aa 7101     		.2byte	0x171
 25444 08ac 97000000 		.4byte	0x97
 25445 08b0 01       		.byte	0x1
 25446 08b1 12       		.uleb128 0x12
 25447 08b2 770A0000 		.4byte	.LASF164
 25448 08b6 08       		.byte	0x8
 25449 08b7 7201     		.2byte	0x172
 25450 08b9 CC080000 		.4byte	0x8cc
 25451 08bd 02       		.byte	0x2
 25452 08be 12       		.uleb128 0x12
 25453 08bf EA020000 		.4byte	.LASF121
 25454 08c3 08       		.byte	0x8
 25455 08c4 7301     		.2byte	0x173
 25456 08c6 EB070000 		.4byte	0x7eb
 25457 08ca 1B       		.byte	0x1b
 25458 08cb 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 563


 25459 08cc 09       		.uleb128 0x9
 25460 08cd 97000000 		.4byte	0x97
 25461 08d1 E2080000 		.4byte	0x8e2
 25462 08d5 0A       		.uleb128 0xa
 25463 08d6 18010000 		.4byte	0x118
 25464 08da 04       		.byte	0x4
 25465 08db 0A       		.uleb128 0xa
 25466 08dc 18010000 		.4byte	0x118
 25467 08e0 04       		.byte	0x4
 25468 08e1 00       		.byte	0
 25469 08e2 11       		.uleb128 0x11
 25470 08e3 1A0F0000 		.4byte	.LASF165
 25471 08e7 20       		.byte	0x20
 25472 08e8 08       		.byte	0x8
 25473 08e9 7A01     		.2byte	0x17a
 25474 08eb 31090000 		.4byte	0x931
 25475 08ef 12       		.uleb128 0x12
 25476 08f0 BF0C0000 		.4byte	.LASF166
 25477 08f4 08       		.byte	0x8
 25478 08f5 7B01     		.2byte	0x17b
 25479 08f7 31090000 		.4byte	0x931
 25480 08fb 00       		.byte	0
 25481 08fc 12       		.uleb128 0x12
 25482 08fd BF110000 		.4byte	.LASF167
 25483 0901 08       		.byte	0x8
 25484 0902 7C01     		.2byte	0x17c
 25485 0904 97000000 		.4byte	0x97
 25486 0908 06       		.byte	0x6
 25487 0909 12       		.uleb128 0x12
 25488 090a 14120000 		.4byte	.LASF168
 25489 090e 08       		.byte	0x8
 25490 090f 7D01     		.2byte	0x17d
 25491 0911 97000000 		.4byte	0x97
 25492 0915 07       		.byte	0x7
 25493 0916 12       		.uleb128 0x12
 25494 0917 A6050000 		.4byte	.LASF169
 25495 091b 08       		.byte	0x8
 25496 091c 7E01     		.2byte	0x17e
 25497 091e 41090000 		.4byte	0x941
 25498 0922 08       		.byte	0x8
 25499 0923 12       		.uleb128 0x12
 25500 0924 EA020000 		.4byte	.LASF121
 25501 0928 08       		.byte	0x8
 25502 0929 7F01     		.2byte	0x17f
 25503 092b 41090000 		.4byte	0x941
 25504 092f 14       		.byte	0x14
 25505 0930 00       		.byte	0
 25506 0931 09       		.uleb128 0x9
 25507 0932 97000000 		.4byte	0x97
 25508 0936 41090000 		.4byte	0x941
 25509 093a 0A       		.uleb128 0xa
 25510 093b 18010000 		.4byte	0x118
 25511 093f 05       		.byte	0x5
 25512 0940 00       		.byte	0
 25513 0941 09       		.uleb128 0x9
 25514 0942 97000000 		.4byte	0x97
 25515 0946 51090000 		.4byte	0x951
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 564


 25516 094a 0A       		.uleb128 0xa
 25517 094b 18010000 		.4byte	0x118
 25518 094f 0B       		.byte	0xb
 25519 0950 00       		.byte	0
 25520 0951 11       		.uleb128 0x11
 25521 0952 EF0E0000 		.4byte	.LASF170
 25522 0956 20       		.byte	0x20
 25523 0957 08       		.byte	0x8
 25524 0958 8601     		.2byte	0x186
 25525 095a 86090000 		.4byte	0x986
 25526 095e 12       		.uleb128 0x12
 25527 095f BF030000 		.4byte	.LASF171
 25528 0963 08       		.byte	0x8
 25529 0964 8701     		.2byte	0x187
 25530 0966 40010000 		.4byte	0x140
 25531 096a 00       		.byte	0
 25532 096b 12       		.uleb128 0x12
 25533 096c D8020000 		.4byte	.LASF172
 25534 0970 08       		.byte	0x8
 25535 0971 8801     		.2byte	0x188
 25536 0973 1B080000 		.4byte	0x81b
 25537 0977 08       		.byte	0x8
 25538 0978 12       		.uleb128 0x12
 25539 0979 EA020000 		.4byte	.LASF121
 25540 097d 08       		.byte	0x8
 25541 097e 8901     		.2byte	0x189
 25542 0980 0B080000 		.4byte	0x80b
 25543 0984 18       		.byte	0x18
 25544 0985 00       		.byte	0
 25545 0986 11       		.uleb128 0x11
 25546 0987 9B090000 		.4byte	.LASF173
 25547 098b 10       		.byte	0x10
 25548 098c 08       		.byte	0x8
 25549 098d 9001     		.2byte	0x190
 25550 098f D5090000 		.4byte	0x9d5
 25551 0993 12       		.uleb128 0x12
 25552 0994 44080000 		.4byte	.LASF174
 25553 0998 08       		.byte	0x8
 25554 0999 9101     		.2byte	0x191
 25555 099b D3000000 		.4byte	0xd3
 25556 099f 00       		.byte	0
 25557 09a0 12       		.uleb128 0x12
 25558 09a1 49140000 		.4byte	.LASF175
 25559 09a5 08       		.byte	0x8
 25560 09a6 9201     		.2byte	0x192
 25561 09a8 D3000000 		.4byte	0xd3
 25562 09ac 04       		.byte	0x4
 25563 09ad 12       		.uleb128 0x12
 25564 09ae 81050000 		.4byte	.LASF176
 25565 09b2 08       		.byte	0x8
 25566 09b3 9301     		.2byte	0x193
 25567 09b5 D3000000 		.4byte	0xd3
 25568 09b9 08       		.byte	0x8
 25569 09ba 12       		.uleb128 0x12
 25570 09bb B0060000 		.4byte	.LASF177
 25571 09bf 08       		.byte	0x8
 25572 09c0 9401     		.2byte	0x194
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 565


 25573 09c2 97000000 		.4byte	0x97
 25574 09c6 0C       		.byte	0xc
 25575 09c7 12       		.uleb128 0x12
 25576 09c8 EA020000 		.4byte	.LASF121
 25577 09cc 08       		.byte	0x8
 25578 09cd 9501     		.2byte	0x195
 25579 09cf BE050000 		.4byte	0x5be
 25580 09d3 0D       		.byte	0xd
 25581 09d4 00       		.byte	0
 25582 09d5 11       		.uleb128 0x11
 25583 09d6 75010000 		.4byte	.LASF178
 25584 09da 10       		.byte	0x10
 25585 09db 08       		.byte	0x8
 25586 09dc 9C01     		.2byte	0x19c
 25587 09de 0A0A0000 		.4byte	0xa0a
 25588 09e2 12       		.uleb128 0x12
 25589 09e3 AC0E0000 		.4byte	.LASF179
 25590 09e7 08       		.byte	0x8
 25591 09e8 9D01     		.2byte	0x19d
 25592 09ea 97000000 		.4byte	0x97
 25593 09ee 00       		.byte	0
 25594 09ef 12       		.uleb128 0x12
 25595 09f0 410A0000 		.4byte	.LASF180
 25596 09f4 08       		.byte	0x8
 25597 09f5 9E01     		.2byte	0x19e
 25598 09f7 97000000 		.4byte	0x97
 25599 09fb 01       		.byte	0x1
 25600 09fc 12       		.uleb128 0x12
 25601 09fd EA020000 		.4byte	.LASF121
 25602 0a01 08       		.byte	0x8
 25603 0a02 9F01     		.2byte	0x19f
 25604 0a04 0A0A0000 		.4byte	0xa0a
 25605 0a08 02       		.byte	0x2
 25606 0a09 00       		.byte	0
 25607 0a0a 09       		.uleb128 0x9
 25608 0a0b 97000000 		.4byte	0x97
 25609 0a0f 1A0A0000 		.4byte	0xa1a
 25610 0a13 0A       		.uleb128 0xa
 25611 0a14 18010000 		.4byte	0x118
 25612 0a18 0D       		.byte	0xd
 25613 0a19 00       		.byte	0
 25614 0a1a 11       		.uleb128 0x11
 25615 0a1b 550C0000 		.4byte	.LASF181
 25616 0a1f 10       		.byte	0x10
 25617 0a20 08       		.byte	0x8
 25618 0a21 A601     		.2byte	0x1a6
 25619 0a23 5C0A0000 		.4byte	0xa5c
 25620 0a27 12       		.uleb128 0x12
 25621 0a28 0A130000 		.4byte	.LASF182
 25622 0a2c 08       		.byte	0x8
 25623 0a2d A701     		.2byte	0x1a7
 25624 0a2f D3000000 		.4byte	0xd3
 25625 0a33 00       		.byte	0
 25626 0a34 12       		.uleb128 0x12
 25627 0a35 9B060000 		.4byte	.LASF183
 25628 0a39 08       		.byte	0x8
 25629 0a3a A801     		.2byte	0x1a8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 566


 25630 0a3c EB000000 		.4byte	0xeb
 25631 0a40 04       		.byte	0x4
 25632 0a41 12       		.uleb128 0x12
 25633 0a42 450E0000 		.4byte	.LASF184
 25634 0a46 08       		.byte	0x8
 25635 0a47 A901     		.2byte	0x1a9
 25636 0a49 EB000000 		.4byte	0xeb
 25637 0a4d 08       		.byte	0x8
 25638 0a4e 12       		.uleb128 0x12
 25639 0a4f EA020000 		.4byte	.LASF121
 25640 0a53 08       		.byte	0x8
 25641 0a54 AA01     		.2byte	0x1aa
 25642 0a56 5C0A0000 		.4byte	0xa5c
 25643 0a5a 0C       		.byte	0xc
 25644 0a5b 00       		.byte	0
 25645 0a5c 09       		.uleb128 0x9
 25646 0a5d 97000000 		.4byte	0x97
 25647 0a61 6C0A0000 		.4byte	0xa6c
 25648 0a65 0A       		.uleb128 0xa
 25649 0a66 18010000 		.4byte	0x118
 25650 0a6a 03       		.byte	0x3
 25651 0a6b 00       		.byte	0
 25652 0a6c 11       		.uleb128 0x11
 25653 0a6d 1D020000 		.4byte	.LASF185
 25654 0a71 12       		.byte	0x12
 25655 0a72 08       		.byte	0x8
 25656 0a73 B101     		.2byte	0x1b1
 25657 0a75 AE0A0000 		.4byte	0xaae
 25658 0a79 12       		.uleb128 0x12
 25659 0a7a 8F0B0000 		.4byte	.LASF186
 25660 0a7e 08       		.byte	0x8
 25661 0a7f B201     		.2byte	0x1b2
 25662 0a81 97000000 		.4byte	0x97
 25663 0a85 00       		.byte	0
 25664 0a86 12       		.uleb128 0x12
 25665 0a87 9D120000 		.4byte	.LASF187
 25666 0a8b 08       		.byte	0x8
 25667 0a8c B301     		.2byte	0x1b3
 25668 0a8e 6A080000 		.4byte	0x86a
 25669 0a92 02       		.byte	0x2
 25670 0a93 12       		.uleb128 0x12
 25671 0a94 2B000000 		.4byte	.LASF188
 25672 0a98 08       		.byte	0x8
 25673 0a99 B401     		.2byte	0x1b4
 25674 0a9b 97000000 		.4byte	0x97
 25675 0a9f 06       		.byte	0x6
 25676 0aa0 12       		.uleb128 0x12
 25677 0aa1 EA020000 		.4byte	.LASF121
 25678 0aa5 08       		.byte	0x8
 25679 0aa6 B501     		.2byte	0x1b5
 25680 0aa8 AE0A0000 		.4byte	0xaae
 25681 0aac 07       		.byte	0x7
 25682 0aad 00       		.byte	0
 25683 0aae 09       		.uleb128 0x9
 25684 0aaf 97000000 		.4byte	0x97
 25685 0ab3 BE0A0000 		.4byte	0xabe
 25686 0ab7 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 567


 25687 0ab8 18010000 		.4byte	0x118
 25688 0abc 09       		.byte	0x9
 25689 0abd 00       		.byte	0
 25690 0abe 11       		.uleb128 0x11
 25691 0abf 20100000 		.4byte	.LASF189
 25692 0ac3 10       		.byte	0x10
 25693 0ac4 08       		.byte	0x8
 25694 0ac5 BC01     		.2byte	0x1bc
 25695 0ac7 000B0000 		.4byte	0xb00
 25696 0acb 12       		.uleb128 0x12
 25697 0acc C3060000 		.4byte	.LASF190
 25698 0ad0 08       		.byte	0x8
 25699 0ad1 BD01     		.2byte	0x1bd
 25700 0ad3 A3000000 		.4byte	0xa3
 25701 0ad7 00       		.byte	0
 25702 0ad8 12       		.uleb128 0x12
 25703 0ad9 540F0000 		.4byte	.LASF191
 25704 0add 08       		.byte	0x8
 25705 0ade BE01     		.2byte	0x1be
 25706 0ae0 C7000000 		.4byte	0xc7
 25707 0ae4 02       		.byte	0x2
 25708 0ae5 12       		.uleb128 0x12
 25709 0ae6 BC070000 		.4byte	.LASF192
 25710 0aea 08       		.byte	0x8
 25711 0aeb BF01     		.2byte	0x1bf
 25712 0aed 6A080000 		.4byte	0x86a
 25713 0af1 04       		.byte	0x4
 25714 0af2 12       		.uleb128 0x12
 25715 0af3 EA020000 		.4byte	.LASF121
 25716 0af7 08       		.byte	0x8
 25717 0af8 C001     		.2byte	0x1c0
 25718 0afa 0B080000 		.4byte	0x80b
 25719 0afe 08       		.byte	0x8
 25720 0aff 00       		.byte	0
 25721 0b00 14       		.uleb128 0x14
 25722 0b01 25130000 		.4byte	.LASF193
 25723 0b05 F402     		.2byte	0x2f4
 25724 0b07 08       		.byte	0x8
 25725 0b08 C801     		.2byte	0x1c8
 25726 0b0a E50B0000 		.4byte	0xbe5
 25727 0b0e 12       		.uleb128 0x12
 25728 0b0f 1B0B0000 		.4byte	.LASF194
 25729 0b13 08       		.byte	0x8
 25730 0b14 CA01     		.2byte	0x1ca
 25731 0b16 97000000 		.4byte	0x97
 25732 0b1a 00       		.byte	0
 25733 0b1b 12       		.uleb128 0x12
 25734 0b1c EA020000 		.4byte	.LASF121
 25735 0b20 08       		.byte	0x8
 25736 0b21 CB01     		.2byte	0x1cb
 25737 0b23 E50B0000 		.4byte	0xbe5
 25738 0b27 01       		.byte	0x1
 25739 0b28 13       		.uleb128 0x13
 25740 0b29 636E7400 		.ascii	"cnt\000"
 25741 0b2d 08       		.byte	0x8
 25742 0b2e CC01     		.2byte	0x1cc
 25743 0b30 96040000 		.4byte	0x496
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 568


 25744 0b34 10       		.byte	0x10
 25745 0b35 12       		.uleb128 0x12
 25746 0b36 B1020000 		.4byte	.LASF195
 25747 0b3a 08       		.byte	0x8
 25748 0b3b CD01     		.2byte	0x1cd
 25749 0b3d F50B0000 		.4byte	0xbf5
 25750 0b41 60       		.byte	0x60
 25751 0b42 13       		.uleb128 0x13
 25752 0b43 64657600 		.ascii	"dev\000"
 25753 0b47 08       		.byte	0x8
 25754 0b48 CE01     		.2byte	0x1ce
 25755 0b4a 2F050000 		.4byte	0x52f
 25756 0b4e A0       		.byte	0xa0
 25757 0b4f 12       		.uleb128 0x12
 25758 0b50 71100000 		.4byte	.LASF196
 25759 0b54 08       		.byte	0x8
 25760 0b55 CF01     		.2byte	0x1cf
 25761 0b57 050C0000 		.4byte	0xc05
 25762 0b5b B0       		.byte	0xb0
 25763 0b5c 15       		.uleb128 0x15
 25764 0b5d 656E6300 		.ascii	"enc\000"
 25765 0b61 08       		.byte	0x8
 25766 0b62 D001     		.2byte	0x1d0
 25767 0b64 150C0000 		.4byte	0xc15
 25768 0b68 9001     		.2byte	0x190
 25769 0b6a 15       		.uleb128 0x15
 25770 0b6b 656D6700 		.ascii	"emg\000"
 25771 0b6f 08       		.byte	0x8
 25772 0b70 D101     		.2byte	0x1d1
 25773 0b72 1B080000 		.4byte	0x81b
 25774 0b76 F001     		.2byte	0x1f0
 25775 0b78 15       		.uleb128 0x15
 25776 0b79 696D7500 		.ascii	"imu\000"
 25777 0b7d 08       		.byte	0x8
 25778 0b7e D201     		.2byte	0x1d2
 25779 0b80 8A080000 		.4byte	0x88a
 25780 0b84 0002     		.2byte	0x200
 25781 0b86 15       		.uleb128 0x15
 25782 0b87 65787000 		.ascii	"exp\000"
 25783 0b8b 08       		.byte	0x8
 25784 0b8c D301     		.2byte	0x1d3
 25785 0b8e E2080000 		.4byte	0x8e2
 25786 0b92 2002     		.2byte	0x220
 25787 0b94 16       		.uleb128 0x16
 25788 0b95 6C000000 		.4byte	.LASF197
 25789 0b99 08       		.byte	0x8
 25790 0b9a D401     		.2byte	0x1d4
 25791 0b9c 250C0000 		.4byte	0xc25
 25792 0ba0 4002     		.2byte	0x240
 25793 0ba2 15       		.uleb128 0x15
 25794 0ba3 534800   		.ascii	"SH\000"
 25795 0ba6 08       		.byte	0x8
 25796 0ba7 D601     		.2byte	0x1d6
 25797 0ba9 86090000 		.4byte	0x986
 25798 0bad A002     		.2byte	0x2a0
 25799 0baf 15       		.uleb128 0x15
 25800 0bb0 4D5300   		.ascii	"MS\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 569


 25801 0bb3 08       		.byte	0x8
 25802 0bb4 D701     		.2byte	0x1d7
 25803 0bb6 D5090000 		.4byte	0x9d5
 25804 0bba B002     		.2byte	0x2b0
 25805 0bbc 15       		.uleb128 0x15
 25806 0bbd 464200   		.ascii	"FB\000"
 25807 0bc0 08       		.byte	0x8
 25808 0bc1 D801     		.2byte	0x1d8
 25809 0bc3 1A0A0000 		.4byte	0xa1a
 25810 0bc7 C002     		.2byte	0x2c0
 25811 0bc9 15       		.uleb128 0x15
 25812 0bca 575200   		.ascii	"WR\000"
 25813 0bcd 08       		.byte	0x8
 25814 0bce D901     		.2byte	0x1d9
 25815 0bd0 6C0A0000 		.4byte	0xa6c
 25816 0bd4 D002     		.2byte	0x2d0
 25817 0bd6 16       		.uleb128 0x16
 25818 0bd7 E9000000 		.4byte	.LASF198
 25819 0bdb 08       		.byte	0x8
 25820 0bdc DA01     		.2byte	0x1da
 25821 0bde BE0A0000 		.4byte	0xabe
 25822 0be2 E202     		.2byte	0x2e2
 25823 0be4 00       		.byte	0
 25824 0be5 09       		.uleb128 0x9
 25825 0be6 97000000 		.4byte	0x97
 25826 0bea F50B0000 		.4byte	0xbf5
 25827 0bee 0A       		.uleb128 0xa
 25828 0bef 18010000 		.4byte	0x118
 25829 0bf3 0E       		.byte	0xe
 25830 0bf4 00       		.byte	0
 25831 0bf5 09       		.uleb128 0x9
 25832 0bf6 97000000 		.4byte	0x97
 25833 0bfa 050C0000 		.4byte	0xc05
 25834 0bfe 0A       		.uleb128 0xa
 25835 0bff 18010000 		.4byte	0x118
 25836 0c03 3F       		.byte	0x3f
 25837 0c04 00       		.byte	0
 25838 0c05 09       		.uleb128 0x9
 25839 0c06 CE050000 		.4byte	0x5ce
 25840 0c0a 150C0000 		.4byte	0xc15
 25841 0c0e 0A       		.uleb128 0xa
 25842 0c0f 18010000 		.4byte	0x118
 25843 0c13 01       		.byte	0x1
 25844 0c14 00       		.byte	0
 25845 0c15 09       		.uleb128 0x9
 25846 0c16 68070000 		.4byte	0x768
 25847 0c1a 250C0000 		.4byte	0xc25
 25848 0c1e 0A       		.uleb128 0xa
 25849 0c1f 18010000 		.4byte	0x118
 25850 0c23 01       		.byte	0x1
 25851 0c24 00       		.byte	0
 25852 0c25 09       		.uleb128 0x9
 25853 0c26 51090000 		.4byte	0x951
 25854 0c2a 350C0000 		.4byte	0xc35
 25855 0c2e 0A       		.uleb128 0xa
 25856 0c2f 18010000 		.4byte	0x118
 25857 0c33 02       		.byte	0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 570


 25858 0c34 00       		.byte	0
 25859 0c35 11       		.uleb128 0x11
 25860 0c36 8D0D0000 		.4byte	.LASF199
 25861 0c3a 28       		.byte	0x28
 25862 0c3b 08       		.byte	0x8
 25863 0c3c E501     		.2byte	0x1e5
 25864 0c3e 910C0000 		.4byte	0xc91
 25865 0c42 12       		.uleb128 0x12
 25866 0c43 AE040000 		.4byte	.LASF200
 25867 0c47 08       		.byte	0x8
 25868 0c48 E601     		.2byte	0x1e6
 25869 0c4a 97000000 		.4byte	0x97
 25870 0c4e 00       		.byte	0
 25871 0c4f 12       		.uleb128 0x12
 25872 0c50 F7020000 		.4byte	.LASF201
 25873 0c54 08       		.byte	0x8
 25874 0c55 E701     		.2byte	0x1e7
 25875 0c57 910C0000 		.4byte	0xc91
 25876 0c5b 02       		.byte	0x2
 25877 0c5c 12       		.uleb128 0x12
 25878 0c5d B40C0000 		.4byte	.LASF202
 25879 0c61 08       		.byte	0x8
 25880 0c62 E801     		.2byte	0x1e8
 25881 0c64 910C0000 		.4byte	0xc91
 25882 0c68 08       		.byte	0x8
 25883 0c69 12       		.uleb128 0x12
 25884 0c6a 990D0000 		.4byte	.LASF203
 25885 0c6e 08       		.byte	0x8
 25886 0c6f E901     		.2byte	0x1e9
 25887 0c71 910C0000 		.4byte	0xc91
 25888 0c75 0E       		.byte	0xe
 25889 0c76 12       		.uleb128 0x12
 25890 0c77 2B080000 		.4byte	.LASF204
 25891 0c7b 08       		.byte	0x8
 25892 0c7c EA01     		.2byte	0x1ea
 25893 0c7e A10C0000 		.4byte	0xca1
 25894 0c82 14       		.byte	0x14
 25895 0c83 12       		.uleb128 0x12
 25896 0c84 F8010000 		.4byte	.LASF205
 25897 0c88 08       		.byte	0x8
 25898 0c89 EB01     		.2byte	0x1eb
 25899 0c8b C7000000 		.4byte	0xc7
 25900 0c8f 24       		.byte	0x24
 25901 0c90 00       		.byte	0
 25902 0c91 09       		.uleb128 0x9
 25903 0c92 C7000000 		.4byte	0xc7
 25904 0c96 A10C0000 		.4byte	0xca1
 25905 0c9a 0A       		.uleb128 0xa
 25906 0c9b 18010000 		.4byte	0x118
 25907 0c9f 02       		.byte	0x2
 25908 0ca0 00       		.byte	0
 25909 0ca1 09       		.uleb128 0x9
 25910 0ca2 EB000000 		.4byte	0xeb
 25911 0ca6 B10C0000 		.4byte	0xcb1
 25912 0caa 0A       		.uleb128 0xa
 25913 0cab 18010000 		.4byte	0x118
 25914 0caf 03       		.byte	0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 571


 25915 0cb0 00       		.byte	0
 25916 0cb1 11       		.uleb128 0x11
 25917 0cb2 D0030000 		.4byte	.LASF206
 25918 0cb6 06       		.byte	0x6
 25919 0cb7 08       		.byte	0x8
 25920 0cb8 FB01     		.2byte	0x1fb
 25921 0cba F30C0000 		.4byte	0xcf3
 25922 0cbe 12       		.uleb128 0x12
 25923 0cbf 85070000 		.4byte	.LASF207
 25924 0cc3 08       		.byte	0x8
 25925 0cc4 FC01     		.2byte	0x1fc
 25926 0cc6 97000000 		.4byte	0x97
 25927 0cca 00       		.byte	0
 25928 0ccb 12       		.uleb128 0x12
 25929 0ccc 6E140000 		.4byte	.LASF208
 25930 0cd0 08       		.byte	0x8
 25931 0cd1 FD01     		.2byte	0x1fd
 25932 0cd3 97000000 		.4byte	0x97
 25933 0cd7 01       		.byte	0x1
 25934 0cd8 12       		.uleb128 0x12
 25935 0cd9 27060000 		.4byte	.LASF209
 25936 0cdd 08       		.byte	0x8
 25937 0cde FE01     		.2byte	0x1fe
 25938 0ce0 C7000000 		.4byte	0xc7
 25939 0ce4 02       		.byte	0x2
 25940 0ce5 12       		.uleb128 0x12
 25941 0ce6 280A0000 		.4byte	.LASF210
 25942 0cea 08       		.byte	0x8
 25943 0ceb FF01     		.2byte	0x1ff
 25944 0ced C7000000 		.4byte	0xc7
 25945 0cf1 04       		.byte	0x4
 25946 0cf2 00       		.byte	0
 25947 0cf3 17       		.uleb128 0x17
 25948 0cf4 C50E0000 		.4byte	.LASF382
 25949 0cf8 02       		.byte	0x2
 25950 0cf9 1403     		.2byte	0x314
 25951 0cfb 8C000000 		.4byte	0x8c
 25952 0cff 03       		.byte	0x3
 25953 0d00 1D0D0000 		.4byte	0xd1d
 25954 0d04 18       		.uleb128 0x18
 25955 0d05 A8040000 		.4byte	.LASF290
 25956 0d09 02       		.byte	0x2
 25957 0d0a 1403     		.2byte	0x314
 25958 0d0c 8C000000 		.4byte	0x8c
 25959 0d10 19       		.uleb128 0x19
 25960 0d11 03020000 		.4byte	.LASF383
 25961 0d15 02       		.byte	0x2
 25962 0d16 1603     		.2byte	0x316
 25963 0d18 8C000000 		.4byte	0x8c
 25964 0d1c 00       		.byte	0
 25965 0d1d 1A       		.uleb128 0x1a
 25966 0d1e 14100000 		.4byte	.LASF211
 25967 0d22 01       		.byte	0x1
 25968 0d23 3D       		.byte	0x3d
 25969 0d24 00000000 		.4byte	.LFB64
 25970 0d28 E0040000 		.4byte	.LFE64-.LFB64
 25971 0d2c 01       		.uleb128 0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 572


 25972 0d2d 9C       		.byte	0x9c
 25973 0d2e C80D0000 		.4byte	0xdc8
 25974 0d32 1B       		.uleb128 0x1b
 25975 0d33 2D060000 		.4byte	.LASF213
 25976 0d37 01       		.byte	0x1
 25977 0d38 3F       		.byte	0x3f
 25978 0d39 97000000 		.4byte	0x97
 25979 0d3d 02       		.uleb128 0x2
 25980 0d3e 91       		.byte	0x91
 25981 0d3f 77       		.sleb128 -9
 25982 0d40 1C       		.uleb128 0x1c
 25983 0d41 F30C0000 		.4byte	0xcf3
 25984 0d45 3C030000 		.4byte	.LBB8
 25985 0d49 08000000 		.4byte	.LBE8-.LBB8
 25986 0d4d 01       		.byte	0x1
 25987 0d4e 9C       		.byte	0x9c
 25988 0d4f 6E0D0000 		.4byte	0xd6e
 25989 0d53 1D       		.uleb128 0x1d
 25990 0d54 040D0000 		.4byte	0xd04
 25991 0d58 02       		.uleb128 0x2
 25992 0d59 91       		.byte	0x91
 25993 0d5a 68       		.sleb128 -24
 25994 0d5b 1E       		.uleb128 0x1e
 25995 0d5c 3C030000 		.4byte	.LBB9
 25996 0d60 08000000 		.4byte	.LBE9-.LBB9
 25997 0d64 1F       		.uleb128 0x1f
 25998 0d65 100D0000 		.4byte	0xd10
 25999 0d69 02       		.uleb128 0x2
 26000 0d6a 91       		.byte	0x91
 26001 0d6b 64       		.sleb128 -28
 26002 0d6c 00       		.byte	0
 26003 0d6d 00       		.byte	0
 26004 0d6e 1C       		.uleb128 0x1c
 26005 0d6f F30C0000 		.4byte	0xcf3
 26006 0d73 5A030000 		.4byte	.LBB10
 26007 0d77 08000000 		.4byte	.LBE10-.LBB10
 26008 0d7b 01       		.byte	0x1
 26009 0d7c A8       		.byte	0xa8
 26010 0d7d 9C0D0000 		.4byte	0xd9c
 26011 0d81 1D       		.uleb128 0x1d
 26012 0d82 040D0000 		.4byte	0xd04
 26013 0d86 02       		.uleb128 0x2
 26014 0d87 91       		.byte	0x91
 26015 0d88 70       		.sleb128 -16
 26016 0d89 1E       		.uleb128 0x1e
 26017 0d8a 5A030000 		.4byte	.LBB11
 26018 0d8e 08000000 		.4byte	.LBE11-.LBB11
 26019 0d92 1F       		.uleb128 0x1f
 26020 0d93 100D0000 		.4byte	0xd10
 26021 0d97 02       		.uleb128 0x2
 26022 0d98 91       		.byte	0x91
 26023 0d99 60       		.sleb128 -32
 26024 0d9a 00       		.byte	0
 26025 0d9b 00       		.byte	0
 26026 0d9c 20       		.uleb128 0x20
 26027 0d9d F30C0000 		.4byte	0xcf3
 26028 0da1 9C040000 		.4byte	.LBB12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 573


 26029 0da5 08000000 		.4byte	.LBE12-.LBB12
 26030 0da9 01       		.byte	0x1
 26031 0daa 0401     		.2byte	0x104
 26032 0dac 1D       		.uleb128 0x1d
 26033 0dad 040D0000 		.4byte	0xd04
 26034 0db1 02       		.uleb128 0x2
 26035 0db2 91       		.byte	0x91
 26036 0db3 6C       		.sleb128 -20
 26037 0db4 1E       		.uleb128 0x1e
 26038 0db5 9C040000 		.4byte	.LBB13
 26039 0db9 08000000 		.4byte	.LBE13-.LBB13
 26040 0dbd 1F       		.uleb128 0x1f
 26041 0dbe 100D0000 		.4byte	0xd10
 26042 0dc2 02       		.uleb128 0x2
 26043 0dc3 91       		.byte	0x91
 26044 0dc4 5C       		.sleb128 -36
 26045 0dc5 00       		.byte	0
 26046 0dc6 00       		.byte	0
 26047 0dc7 00       		.byte	0
 26048 0dc8 21       		.uleb128 0x21
 26049 0dc9 00000000 		.4byte	.LASF212
 26050 0dcd 01       		.byte	0x1
 26051 0dce 2B01     		.2byte	0x12b
 26052 0dd0 00000000 		.4byte	.LFB65
 26053 0dd4 22000000 		.4byte	.LFE65-.LFB65
 26054 0dd8 01       		.uleb128 0x1
 26055 0dd9 9C       		.byte	0x9c
 26056 0dda EF0D0000 		.4byte	0xdef
 26057 0dde 22       		.uleb128 0x22
 26058 0ddf 37050000 		.4byte	.LASF214
 26059 0de3 01       		.byte	0x1
 26060 0de4 2C01     		.2byte	0x12c
 26061 0de6 EF0D0000 		.4byte	0xdef
 26062 0dea 03       		.uleb128 0x3
 26063 0deb 91       		.byte	0x91
 26064 0dec 9C74     		.sleb128 -1508
 26065 0dee 00       		.byte	0
 26066 0def 09       		.uleb128 0x9
 26067 0df0 F9000000 		.4byte	0xf9
 26068 0df4 000E0000 		.4byte	0xe00
 26069 0df8 23       		.uleb128 0x23
 26070 0df9 18010000 		.4byte	0x118
 26071 0dfd DB05     		.2byte	0x5db
 26072 0dff 00       		.byte	0
 26073 0e00 21       		.uleb128 0x21
 26074 0e01 56130000 		.4byte	.LASF215
 26075 0e05 01       		.byte	0x1
 26076 0e06 3701     		.2byte	0x137
 26077 0e08 00000000 		.4byte	.LFB66
 26078 0e0c 02010000 		.4byte	.LFE66-.LFB66
 26079 0e10 01       		.uleb128 0x1
 26080 0e11 9C       		.byte	0x9c
 26081 0e12 490E0000 		.4byte	0xe49
 26082 0e16 24       		.uleb128 0x24
 26083 0e17 B0120000 		.4byte	.LASF218
 26084 0e1b 01       		.byte	0x1
 26085 0e1c 3701     		.2byte	0x137
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 574


 26086 0e1e A3000000 		.4byte	0xa3
 26087 0e22 04       		.uleb128 0x4
 26088 0e23 91       		.byte	0x91
 26089 0e24 B6C47E   		.sleb128 -24010
 26090 0e27 22       		.uleb128 0x22
 26091 0e28 37050000 		.4byte	.LASF214
 26092 0e2c 01       		.byte	0x1
 26093 0e2d 3801     		.2byte	0x138
 26094 0e2f 490E0000 		.4byte	0xe49
 26095 0e33 03       		.uleb128 0x3
 26096 0e34 91       		.byte	0x91
 26097 0e35 D860     		.sleb128 -4008
 26098 0e37 22       		.uleb128 0x22
 26099 0e38 F9070000 		.4byte	.LASF216
 26100 0e3c 01       		.byte	0x1
 26101 0e3d 3901     		.2byte	0x139
 26102 0e3f 5A0E0000 		.4byte	0xe5a
 26103 0e43 04       		.uleb128 0x4
 26104 0e44 91       		.byte	0x91
 26105 0e45 B8C47E   		.sleb128 -24008
 26106 0e48 00       		.byte	0
 26107 0e49 09       		.uleb128 0x9
 26108 0e4a F9000000 		.4byte	0xf9
 26109 0e4e 5A0E0000 		.4byte	0xe5a
 26110 0e52 23       		.uleb128 0x23
 26111 0e53 18010000 		.4byte	0x118
 26112 0e57 9F0F     		.2byte	0xf9f
 26113 0e59 00       		.byte	0
 26114 0e5a 09       		.uleb128 0x9
 26115 0e5b F9000000 		.4byte	0xf9
 26116 0e5f 6B0E0000 		.4byte	0xe6b
 26117 0e63 23       		.uleb128 0x23
 26118 0e64 18010000 		.4byte	0x118
 26119 0e68 1F4E     		.2byte	0x4e1f
 26120 0e6a 00       		.byte	0
 26121 0e6b 21       		.uleb128 0x21
 26122 0e6c B2010000 		.4byte	.LASF217
 26123 0e70 01       		.byte	0x1
 26124 0e71 5C01     		.2byte	0x15c
 26125 0e73 00000000 		.4byte	.LFB67
 26126 0e77 E0210000 		.4byte	.LFE67-.LFB67
 26127 0e7b 01       		.uleb128 0x1
 26128 0e7c 9C       		.byte	0x9c
 26129 0e7d 0F100000 		.4byte	0x100f
 26130 0e81 24       		.uleb128 0x24
 26131 0e82 600C0000 		.4byte	.LASF219
 26132 0e86 01       		.byte	0x1
 26133 0e87 5C01     		.2byte	0x15c
 26134 0e89 0F100000 		.4byte	0x100f
 26135 0e8d 03       		.uleb128 0x3
 26136 0e8e 91       		.byte	0x91
 26137 0e8f 9C67     		.sleb128 -3172
 26138 0e91 24       		.uleb128 0x24
 26139 0e92 2F130000 		.4byte	.LASF220
 26140 0e96 01       		.byte	0x1
 26141 0e97 5C01     		.2byte	0x15c
 26142 0e99 15100000 		.4byte	0x1015
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 575


 26143 0e9d 03       		.uleb128 0x3
 26144 0e9e 91       		.byte	0x91
 26145 0e9f 9867     		.sleb128 -3176
 26146 0ea1 24       		.uleb128 0x24
 26147 0ea2 03030000 		.4byte	.LASF221
 26148 0ea6 01       		.byte	0x1
 26149 0ea7 5D01     		.2byte	0x15d
 26150 0ea9 15100000 		.4byte	0x1015
 26151 0ead 03       		.uleb128 0x3
 26152 0eae 91       		.byte	0x91
 26153 0eaf 9467     		.sleb128 -3180
 26154 0eb1 24       		.uleb128 0x24
 26155 0eb2 CD0B0000 		.4byte	.LASF222
 26156 0eb6 01       		.byte	0x1
 26157 0eb7 5D01     		.2byte	0x15d
 26158 0eb9 15100000 		.4byte	0x1015
 26159 0ebd 03       		.uleb128 0x3
 26160 0ebe 91       		.byte	0x91
 26161 0ebf 9067     		.sleb128 -3184
 26162 0ec1 24       		.uleb128 0x24
 26163 0ec2 7A120000 		.4byte	.LASF223
 26164 0ec6 01       		.byte	0x1
 26165 0ec7 5E01     		.2byte	0x15e
 26166 0ec9 15100000 		.4byte	0x1015
 26167 0ecd 02       		.uleb128 0x2
 26168 0ece 91       		.byte	0x91
 26169 0ecf 00       		.sleb128 0
 26170 0ed0 24       		.uleb128 0x24
 26171 0ed1 7A070000 		.4byte	.LASF224
 26172 0ed5 01       		.byte	0x1
 26173 0ed6 5E01     		.2byte	0x15e
 26174 0ed8 1B100000 		.4byte	0x101b
 26175 0edc 02       		.uleb128 0x2
 26176 0edd 91       		.byte	0x91
 26177 0ede 04       		.sleb128 4
 26178 0edf 24       		.uleb128 0x24
 26179 0ee0 600A0000 		.4byte	.LASF225
 26180 0ee4 01       		.byte	0x1
 26181 0ee5 5F01     		.2byte	0x15f
 26182 0ee7 15100000 		.4byte	0x1015
 26183 0eeb 02       		.uleb128 0x2
 26184 0eec 91       		.byte	0x91
 26185 0eed 08       		.sleb128 8
 26186 0eee 24       		.uleb128 0x24
 26187 0eef 0B080000 		.4byte	.LASF226
 26188 0ef3 01       		.byte	0x1
 26189 0ef4 5F01     		.2byte	0x15f
 26190 0ef6 1B100000 		.4byte	0x101b
 26191 0efa 02       		.uleb128 0x2
 26192 0efb 91       		.byte	0x91
 26193 0efc 0C       		.sleb128 12
 26194 0efd 22       		.uleb128 0x22
 26195 0efe 8A050000 		.4byte	.LASF227
 26196 0f02 01       		.byte	0x1
 26197 0f03 6201     		.2byte	0x162
 26198 0f05 21100000 		.4byte	0x1021
 26199 0f09 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 576


 26200 0f0a 91       		.byte	0x91
 26201 0f0b E867     		.sleb128 -3096
 26202 0f0d 22       		.uleb128 0x22
 26203 0f0e CA0A0000 		.4byte	.LASF228
 26204 0f12 01       		.byte	0x1
 26205 0f13 6301     		.2byte	0x163
 26206 0f15 A3000000 		.4byte	0xa3
 26207 0f19 02       		.uleb128 0x2
 26208 0f1a 91       		.byte	0x91
 26209 0f1b 60       		.sleb128 -32
 26210 0f1c 25       		.uleb128 0x25
 26211 0f1d 6900     		.ascii	"i\000"
 26212 0f1f 01       		.byte	0x1
 26213 0f20 6601     		.2byte	0x166
 26214 0f22 97000000 		.4byte	0x97
 26215 0f26 02       		.uleb128 0x2
 26216 0f27 91       		.byte	0x91
 26217 0f28 67       		.sleb128 -25
 26218 0f29 25       		.uleb128 0x25
 26219 0f2a 6A00     		.ascii	"j\000"
 26220 0f2c 01       		.byte	0x1
 26221 0f2d 6601     		.2byte	0x166
 26222 0f2f 97000000 		.4byte	0x97
 26223 0f33 02       		.uleb128 0x2
 26224 0f34 91       		.byte	0x91
 26225 0f35 66       		.sleb128 -26
 26226 0f36 25       		.uleb128 0x25
 26227 0f37 69647800 		.ascii	"idx\000"
 26228 0f3b 01       		.byte	0x1
 26229 0f3c 6701     		.2byte	0x167
 26230 0f3e 97000000 		.4byte	0x97
 26231 0f42 02       		.uleb128 0x2
 26232 0f43 91       		.byte	0x91
 26233 0f44 65       		.sleb128 -27
 26234 0f45 22       		.uleb128 0x22
 26235 0f46 5F100000 		.4byte	.LASF229
 26236 0f4a 01       		.byte	0x1
 26237 0f4b 6801     		.2byte	0x168
 26238 0f4d 97000000 		.4byte	0x97
 26239 0f51 02       		.uleb128 0x2
 26240 0f52 91       		.byte	0x91
 26241 0f53 64       		.sleb128 -28
 26242 0f54 25       		.uleb128 0x25
 26243 0f55 736F6400 		.ascii	"sod\000"
 26244 0f59 01       		.byte	0x1
 26245 0f5a 6901     		.2byte	0x169
 26246 0f5c 97000000 		.4byte	0x97
 26247 0f60 02       		.uleb128 0x2
 26248 0f61 91       		.byte	0x91
 26249 0f62 63       		.sleb128 -29
 26250 0f63 22       		.uleb128 0x22
 26251 0f64 9E0B0000 		.4byte	.LASF230
 26252 0f68 01       		.byte	0x1
 26253 0f69 6A01     		.2byte	0x16a
 26254 0f6b 97000000 		.4byte	0x97
 26255 0f6f 02       		.uleb128 0x2
 26256 0f70 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 577


 26257 0f71 62       		.sleb128 -30
 26258 0f72 22       		.uleb128 0x22
 26259 0f73 54140000 		.4byte	.LASF231
 26260 0f77 01       		.byte	0x1
 26261 0f78 6B01     		.2byte	0x16b
 26262 0f7a 32100000 		.4byte	0x1032
 26263 0f7e 03       		.uleb128 0x3
 26264 0f7f 91       		.byte	0x91
 26265 0f80 B467     		.sleb128 -3148
 26266 0f82 22       		.uleb128 0x22
 26267 0f83 62120000 		.4byte	.LASF232
 26268 0f87 01       		.byte	0x1
 26269 0f88 6C01     		.2byte	0x16c
 26270 0f8a EB000000 		.4byte	0xeb
 26271 0f8e 03       		.uleb128 0x3
 26272 0f8f 91       		.byte	0x91
 26273 0f90 B067     		.sleb128 -3152
 26274 0f92 22       		.uleb128 0x22
 26275 0f93 F0100000 		.4byte	.LASF233
 26276 0f97 01       		.byte	0x1
 26277 0f98 6D01     		.2byte	0x16d
 26278 0f9a C7000000 		.4byte	0xc7
 26279 0f9e 03       		.uleb128 0x3
 26280 0f9f 91       		.byte	0x91
 26281 0fa0 AE67     		.sleb128 -3154
 26282 0fa2 22       		.uleb128 0x22
 26283 0fa3 F50B0000 		.4byte	.LASF234
 26284 0fa7 01       		.byte	0x1
 26285 0fa8 6E01     		.2byte	0x16e
 26286 0faa A3000000 		.4byte	0xa3
 26287 0fae 03       		.uleb128 0x3
 26288 0faf 91       		.byte	0x91
 26289 0fb0 AC67     		.sleb128 -3156
 26290 0fb2 22       		.uleb128 0x22
 26291 0fb3 83120000 		.4byte	.LASF235
 26292 0fb7 01       		.byte	0x1
 26293 0fb8 6F01     		.2byte	0x16f
 26294 0fba D3000000 		.4byte	0xd3
 26295 0fbe 03       		.uleb128 0x3
 26296 0fbf 91       		.byte	0x91
 26297 0fc0 A867     		.sleb128 -3160
 26298 0fc2 22       		.uleb128 0x22
 26299 0fc3 6D0D0000 		.4byte	.LASF236
 26300 0fc7 01       		.byte	0x1
 26301 0fc8 7001     		.2byte	0x170
 26302 0fca AF000000 		.4byte	0xaf
 26303 0fce 03       		.uleb128 0x3
 26304 0fcf 91       		.byte	0x91
 26305 0fd0 A467     		.sleb128 -3164
 26306 0fd2 22       		.uleb128 0x22
 26307 0fd3 100D0000 		.4byte	.LASF237
 26308 0fd7 01       		.byte	0x1
 26309 0fd8 7201     		.2byte	0x172
 26310 0fda 97000000 		.4byte	0x97
 26311 0fde 02       		.uleb128 0x2
 26312 0fdf 91       		.byte	0x91
 26313 0fe0 5F       		.sleb128 -33
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 578


 26314 0fe1 22       		.uleb128 0x22
 26315 0fe2 13010000 		.4byte	.LASF238
 26316 0fe6 01       		.byte	0x1
 26317 0fe7 7301     		.2byte	0x173
 26318 0fe9 97000000 		.4byte	0x97
 26319 0fed 02       		.uleb128 0x2
 26320 0fee 91       		.byte	0x91
 26321 0fef 5E       		.sleb128 -34
 26322 0ff0 22       		.uleb128 0x22
 26323 0ff1 960A0000 		.4byte	.LASF239
 26324 0ff5 01       		.byte	0x1
 26325 0ff6 7501     		.2byte	0x175
 26326 0ff8 15100000 		.4byte	0x1015
 26327 0ffc 02       		.uleb128 0x2
 26328 0ffd 91       		.byte	0x91
 26329 0ffe 58       		.sleb128 -40
 26330 0fff 22       		.uleb128 0x22
 26331 1000 A7010000 		.4byte	.LASF240
 26332 1004 01       		.byte	0x1
 26333 1005 7601     		.2byte	0x176
 26334 1007 15100000 		.4byte	0x1015
 26335 100b 02       		.uleb128 0x2
 26336 100c 91       		.byte	0x91
 26337 100d 54       		.sleb128 -44
 26338 100e 00       		.byte	0
 26339 100f 07       		.uleb128 0x7
 26340 1010 04       		.byte	0x4
 26341 1011 15100000 		.4byte	0x1015
 26342 1015 07       		.uleb128 0x7
 26343 1016 04       		.byte	0x4
 26344 1017 97000000 		.4byte	0x97
 26345 101b 07       		.uleb128 0x7
 26346 101c 04       		.byte	0x4
 26347 101d 25010000 		.4byte	0x125
 26348 1021 09       		.uleb128 0x9
 26349 1022 97000000 		.4byte	0x97
 26350 1026 32100000 		.4byte	0x1032
 26351 102a 23       		.uleb128 0x23
 26352 102b 18010000 		.4byte	0x118
 26353 102f E90B     		.2byte	0xbe9
 26354 1031 00       		.byte	0
 26355 1032 09       		.uleb128 0x9
 26356 1033 F9000000 		.4byte	0xf9
 26357 1037 42100000 		.4byte	0x1042
 26358 103b 0A       		.uleb128 0xa
 26359 103c 18010000 		.4byte	0x118
 26360 1040 31       		.byte	0x31
 26361 1041 00       		.byte	0
 26362 1042 21       		.uleb128 0x21
 26363 1043 670E0000 		.4byte	.LASF241
 26364 1047 01       		.byte	0x1
 26365 1048 5203     		.2byte	0x352
 26366 104a 00000000 		.4byte	.LFB68
 26367 104e 4C180000 		.4byte	.LFE68-.LFB68
 26368 1052 01       		.uleb128 0x1
 26369 1053 9C       		.byte	0x9c
 26370 1054 10120000 		.4byte	0x1210
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 579


 26371 1058 24       		.uleb128 0x24
 26372 1059 95060000 		.4byte	.LASF242
 26373 105d 01       		.byte	0x1
 26374 105e 5203     		.2byte	0x352
 26375 1060 A3000000 		.4byte	0xa3
 26376 1064 03       		.uleb128 0x3
 26377 1065 91       		.byte	0x91
 26378 1066 DE75     		.sleb128 -1314
 26379 1068 25       		.uleb128 0x25
 26380 1069 6900     		.ascii	"i\000"
 26381 106b 01       		.byte	0x1
 26382 106c 5303     		.2byte	0x353
 26383 106e 97000000 		.4byte	0x97
 26384 1072 02       		.uleb128 0x2
 26385 1073 91       		.byte	0x91
 26386 1074 6F       		.sleb128 -17
 26387 1075 25       		.uleb128 0x25
 26388 1076 6A00     		.ascii	"j\000"
 26389 1078 01       		.byte	0x1
 26390 1079 5303     		.2byte	0x353
 26391 107b 97000000 		.4byte	0x97
 26392 107f 02       		.uleb128 0x2
 26393 1080 91       		.byte	0x91
 26394 1081 6E       		.sleb128 -18
 26395 1082 25       		.uleb128 0x25
 26396 1083 736F6400 		.ascii	"sod\000"
 26397 1087 01       		.byte	0x1
 26398 1088 5403     		.2byte	0x354
 26399 108a 97000000 		.4byte	0x97
 26400 108e 02       		.uleb128 0x2
 26401 108f 91       		.byte	0x91
 26402 1090 6D       		.sleb128 -19
 26403 1091 22       		.uleb128 0x22
 26404 1092 800A0000 		.4byte	.LASF243
 26405 1096 01       		.byte	0x1
 26406 1097 5503     		.2byte	0x355
 26407 1099 97000000 		.4byte	0x97
 26408 109d 02       		.uleb128 0x2
 26409 109e 91       		.byte	0x91
 26410 109f 62       		.sleb128 -30
 26411 10a0 22       		.uleb128 0x22
 26412 10a1 F0100000 		.4byte	.LASF233
 26413 10a5 01       		.byte	0x1
 26414 10a6 5603     		.2byte	0x356
 26415 10a8 C7000000 		.4byte	0xc7
 26416 10ac 02       		.uleb128 0x2
 26417 10ad 91       		.byte	0x91
 26418 10ae 60       		.sleb128 -32
 26419 10af 22       		.uleb128 0x22
 26420 10b0 F50B0000 		.4byte	.LASF234
 26421 10b4 01       		.byte	0x1
 26422 10b5 5703     		.2byte	0x357
 26423 10b7 A3000000 		.4byte	0xa3
 26424 10bb 02       		.uleb128 0x2
 26425 10bc 91       		.byte	0x91
 26426 10bd 5E       		.sleb128 -34
 26427 10be 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 580


 26428 10bf 83120000 		.4byte	.LASF235
 26429 10c3 01       		.byte	0x1
 26430 10c4 5803     		.2byte	0x358
 26431 10c6 D3000000 		.4byte	0xd3
 26432 10ca 02       		.uleb128 0x2
 26433 10cb 91       		.byte	0x91
 26434 10cc 58       		.sleb128 -40
 26435 10cd 22       		.uleb128 0x22
 26436 10ce 6D0D0000 		.4byte	.LASF236
 26437 10d2 01       		.byte	0x1
 26438 10d3 5903     		.2byte	0x359
 26439 10d5 AF000000 		.4byte	0xaf
 26440 10d9 02       		.uleb128 0x2
 26441 10da 91       		.byte	0x91
 26442 10db 54       		.sleb128 -44
 26443 10dc 22       		.uleb128 0x22
 26444 10dd 62120000 		.4byte	.LASF232
 26445 10e1 01       		.byte	0x1
 26446 10e2 5A03     		.2byte	0x35a
 26447 10e4 EB000000 		.4byte	0xeb
 26448 10e8 02       		.uleb128 0x2
 26449 10e9 91       		.byte	0x91
 26450 10ea 50       		.sleb128 -48
 26451 10eb 22       		.uleb128 0x22
 26452 10ec 100D0000 		.4byte	.LASF237
 26453 10f0 01       		.byte	0x1
 26454 10f1 5C03     		.2byte	0x35c
 26455 10f3 97000000 		.4byte	0x97
 26456 10f7 02       		.uleb128 0x2
 26457 10f8 91       		.byte	0x91
 26458 10f9 65       		.sleb128 -27
 26459 10fa 22       		.uleb128 0x22
 26460 10fb 13010000 		.4byte	.LASF238
 26461 10ff 01       		.byte	0x1
 26462 1100 5D03     		.2byte	0x35d
 26463 1102 97000000 		.4byte	0x97
 26464 1106 02       		.uleb128 0x2
 26465 1107 91       		.byte	0x91
 26466 1108 64       		.sleb128 -28
 26467 1109 22       		.uleb128 0x22
 26468 110a 19030000 		.4byte	.LASF244
 26469 110e 01       		.byte	0x1
 26470 110f 6003     		.2byte	0x360
 26471 1111 10120000 		.4byte	0x1210
 26472 1115 02       		.uleb128 0x2
 26473 1116 91       		.byte	0x91
 26474 1117 68       		.sleb128 -24
 26475 1118 22       		.uleb128 0x22
 26476 1119 600C0000 		.4byte	.LASF219
 26477 111d 01       		.byte	0x1
 26478 111e 6803     		.2byte	0x368
 26479 1120 16120000 		.4byte	0x1216
 26480 1124 03       		.uleb128 0x3
 26481 1125 91       		.byte	0x91
 26482 1126 947D     		.sleb128 -364
 26483 1128 22       		.uleb128 0x22
 26484 1129 2F130000 		.4byte	.LASF220
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 581


 26485 112d 01       		.byte	0x1
 26486 112e C003     		.2byte	0x3c0
 26487 1130 26120000 		.4byte	0x1226
 26488 1134 03       		.uleb128 0x3
 26489 1135 91       		.byte	0x91
 26490 1136 C47C     		.sleb128 -444
 26491 1138 22       		.uleb128 0x22
 26492 1139 03030000 		.4byte	.LASF221
 26493 113d 01       		.byte	0x1
 26494 113e D903     		.2byte	0x3d9
 26495 1140 26120000 		.4byte	0x1226
 26496 1144 03       		.uleb128 0x3
 26497 1145 91       		.byte	0x91
 26498 1146 F47B     		.sleb128 -524
 26499 1148 22       		.uleb128 0x22
 26500 1149 CD0B0000 		.4byte	.LASF222
 26501 114d 01       		.byte	0x1
 26502 114e F203     		.2byte	0x3f2
 26503 1150 26120000 		.4byte	0x1226
 26504 1154 03       		.uleb128 0x3
 26505 1155 91       		.byte	0x91
 26506 1156 A47B     		.sleb128 -604
 26507 1158 22       		.uleb128 0x22
 26508 1159 7A070000 		.4byte	.LASF224
 26509 115d 01       		.byte	0x1
 26510 115e 0B04     		.2byte	0x40b
 26511 1160 36120000 		.4byte	0x1236
 26512 1164 03       		.uleb128 0x3
 26513 1165 91       		.byte	0x91
 26514 1166 E878     		.sleb128 -920
 26515 1168 22       		.uleb128 0x22
 26516 1169 B7130000 		.4byte	.LASF245
 26517 116d 01       		.byte	0x1
 26518 116e 2504     		.2byte	0x425
 26519 1170 46120000 		.4byte	0x1246
 26520 1174 03       		.uleb128 0x3
 26521 1175 91       		.byte	0x91
 26522 1176 F077     		.sleb128 -1040
 26523 1178 22       		.uleb128 0x22
 26524 1179 0B080000 		.4byte	.LASF226
 26525 117d 01       		.byte	0x1
 26526 117e 2804     		.2byte	0x428
 26527 1180 56120000 		.4byte	0x1256
 26528 1184 03       		.uleb128 0x3
 26529 1185 91       		.byte	0x91
 26530 1186 C077     		.sleb128 -1088
 26531 1188 22       		.uleb128 0x22
 26532 1189 7A120000 		.4byte	.LASF223
 26533 118d 01       		.byte	0x1
 26534 118e 3704     		.2byte	0x437
 26535 1190 66120000 		.4byte	0x1266
 26536 1194 03       		.uleb128 0x3
 26537 1195 91       		.byte	0x91
 26538 1196 A077     		.sleb128 -1120
 26539 1198 22       		.uleb128 0x22
 26540 1199 660C0000 		.4byte	.LASF246
 26541 119d 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 582


 26542 119e 3804     		.2byte	0x438
 26543 11a0 76120000 		.4byte	0x1276
 26544 11a4 03       		.uleb128 0x3
 26545 11a5 91       		.byte	0x91
 26546 11a6 9477     		.sleb128 -1132
 26547 11a8 22       		.uleb128 0x22
 26548 11a9 B70B0000 		.4byte	.LASF247
 26549 11ad 01       		.byte	0x1
 26550 11ae 3904     		.2byte	0x439
 26551 11b0 86120000 		.4byte	0x1286
 26552 11b4 03       		.uleb128 0x3
 26553 11b5 91       		.byte	0x91
 26554 11b6 8077     		.sleb128 -1152
 26555 11b8 22       		.uleb128 0x22
 26556 11b9 7F0D0000 		.4byte	.LASF248
 26557 11bd 01       		.byte	0x1
 26558 11be 3A04     		.2byte	0x43a
 26559 11c0 97000000 		.4byte	0x97
 26560 11c4 02       		.uleb128 0x2
 26561 11c5 91       		.byte	0x91
 26562 11c6 63       		.sleb128 -29
 26563 11c7 22       		.uleb128 0x22
 26564 11c8 600A0000 		.4byte	.LASF225
 26565 11cc 01       		.byte	0x1
 26566 11cd 4304     		.2byte	0x443
 26567 11cf 26120000 		.4byte	0x1226
 26568 11d3 03       		.uleb128 0x3
 26569 11d4 91       		.byte	0x91
 26570 11d5 B076     		.sleb128 -1232
 26571 11d7 22       		.uleb128 0x22
 26572 11d8 DE130000 		.4byte	.LASF249
 26573 11dc 01       		.byte	0x1
 26574 11dd 4E04     		.2byte	0x44e
 26575 11df 26120000 		.4byte	0x1226
 26576 11e3 03       		.uleb128 0x3
 26577 11e4 91       		.byte	0x91
 26578 11e5 E075     		.sleb128 -1312
 26579 11e7 1E       		.uleb128 0x1e
 26580 11e8 B6170000 		.4byte	.LBB14
 26581 11ec 86000000 		.4byte	.LBE14-.LBB14
 26582 11f0 25       		.uleb128 0x25
 26583 11f1 69647800 		.ascii	"idx\000"
 26584 11f5 01       		.byte	0x1
 26585 11f6 B704     		.2byte	0x4b7
 26586 11f8 97000000 		.4byte	0x97
 26587 11fc 02       		.uleb128 0x2
 26588 11fd 91       		.byte	0x91
 26589 11fe 67       		.sleb128 -25
 26590 11ff 22       		.uleb128 0x22
 26591 1200 EE040000 		.4byte	.LASF250
 26592 1204 01       		.byte	0x1
 26593 1205 B704     		.2byte	0x4b7
 26594 1207 97000000 		.4byte	0x97
 26595 120b 02       		.uleb128 0x2
 26596 120c 91       		.byte	0x91
 26597 120d 66       		.sleb128 -26
 26598 120e 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 583


 26599 120f 00       		.byte	0
 26600 1210 07       		.uleb128 0x7
 26601 1211 04       		.byte	0x4
 26602 1212 000B0000 		.4byte	0xb00
 26603 1216 09       		.uleb128 0x9
 26604 1217 15100000 		.4byte	0x1015
 26605 121b 26120000 		.4byte	0x1226
 26606 121f 0A       		.uleb128 0xa
 26607 1220 18010000 		.4byte	0x118
 26608 1224 4E       		.byte	0x4e
 26609 1225 00       		.byte	0
 26610 1226 09       		.uleb128 0x9
 26611 1227 97000000 		.4byte	0x97
 26612 122b 36120000 		.4byte	0x1236
 26613 122f 0A       		.uleb128 0xa
 26614 1230 18010000 		.4byte	0x118
 26615 1234 4E       		.byte	0x4e
 26616 1235 00       		.byte	0
 26617 1236 09       		.uleb128 0x9
 26618 1237 25010000 		.4byte	0x125
 26619 123b 46120000 		.4byte	0x1246
 26620 123f 0A       		.uleb128 0xa
 26621 1240 18010000 		.4byte	0x118
 26622 1244 4E       		.byte	0x4e
 26623 1245 00       		.byte	0
 26624 1246 09       		.uleb128 0x9
 26625 1247 F9000000 		.4byte	0xf9
 26626 124b 56120000 		.4byte	0x1256
 26627 124f 0A       		.uleb128 0xa
 26628 1250 18010000 		.4byte	0x118
 26629 1254 75       		.byte	0x75
 26630 1255 00       		.byte	0
 26631 1256 09       		.uleb128 0x9
 26632 1257 25010000 		.4byte	0x125
 26633 125b 66120000 		.4byte	0x1266
 26634 125f 0A       		.uleb128 0xa
 26635 1260 18010000 		.4byte	0x118
 26636 1264 0B       		.byte	0xb
 26637 1265 00       		.byte	0
 26638 1266 09       		.uleb128 0x9
 26639 1267 97000000 		.4byte	0x97
 26640 126b 76120000 		.4byte	0x1276
 26641 126f 0A       		.uleb128 0xa
 26642 1270 18010000 		.4byte	0x118
 26643 1274 1E       		.byte	0x1e
 26644 1275 00       		.byte	0
 26645 1276 09       		.uleb128 0x9
 26646 1277 97000000 		.4byte	0x97
 26647 127b 86120000 		.4byte	0x1286
 26648 127f 0A       		.uleb128 0xa
 26649 1280 18010000 		.4byte	0x118
 26650 1284 08       		.byte	0x8
 26651 1285 00       		.byte	0
 26652 1286 09       		.uleb128 0x9
 26653 1287 97000000 		.4byte	0x97
 26654 128b 96120000 		.4byte	0x1296
 26655 128f 0A       		.uleb128 0xa
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 584


 26656 1290 18010000 		.4byte	0x118
 26657 1294 11       		.byte	0x11
 26658 1295 00       		.byte	0
 26659 1296 21       		.uleb128 0x21
 26660 1297 8B030000 		.4byte	.LASF251
 26661 129b 01       		.byte	0x1
 26662 129c C804     		.2byte	0x4c8
 26663 129e 00000000 		.4byte	.LFB69
 26664 12a2 80140000 		.4byte	.LFE69-.LFB69
 26665 12a6 01       		.uleb128 0x1
 26666 12a7 9C       		.byte	0x9c
 26667 12a8 38130000 		.4byte	0x1338
 26668 12ac 24       		.uleb128 0x24
 26669 12ad 95060000 		.4byte	.LASF242
 26670 12b1 01       		.byte	0x1
 26671 12b2 C804     		.2byte	0x4c8
 26672 12b4 A3000000 		.4byte	0xa3
 26673 12b8 02       		.uleb128 0x2
 26674 12b9 91       		.byte	0x91
 26675 12ba 56       		.sleb128 -42
 26676 12bb 25       		.uleb128 0x25
 26677 12bc 6900     		.ascii	"i\000"
 26678 12be 01       		.byte	0x1
 26679 12bf CA04     		.2byte	0x4ca
 26680 12c1 97000000 		.4byte	0x97
 26681 12c5 02       		.uleb128 0x2
 26682 12c6 91       		.byte	0x91
 26683 12c7 67       		.sleb128 -25
 26684 12c8 25       		.uleb128 0x25
 26685 12c9 6A00     		.ascii	"j\000"
 26686 12cb 01       		.byte	0x1
 26687 12cc CA04     		.2byte	0x4ca
 26688 12ce 97000000 		.4byte	0x97
 26689 12d2 02       		.uleb128 0x2
 26690 12d3 91       		.byte	0x91
 26691 12d4 66       		.sleb128 -26
 26692 12d5 22       		.uleb128 0x22
 26693 12d6 D80B0000 		.4byte	.LASF252
 26694 12da 01       		.byte	0x1
 26695 12db CB04     		.2byte	0x4cb
 26696 12dd 97000000 		.4byte	0x97
 26697 12e1 02       		.uleb128 0x2
 26698 12e2 91       		.byte	0x91
 26699 12e3 62       		.sleb128 -30
 26700 12e4 22       		.uleb128 0x22
 26701 12e5 62120000 		.4byte	.LASF232
 26702 12e9 01       		.byte	0x1
 26703 12ea CC04     		.2byte	0x4cc
 26704 12ec EB000000 		.4byte	0xeb
 26705 12f0 02       		.uleb128 0x2
 26706 12f1 91       		.byte	0x91
 26707 12f2 5C       		.sleb128 -36
 26708 12f3 22       		.uleb128 0x22
 26709 12f4 64030000 		.4byte	.LASF253
 26710 12f8 01       		.byte	0x1
 26711 12f9 CC04     		.2byte	0x4cc
 26712 12fb EB000000 		.4byte	0xeb
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 585


 26713 12ff 02       		.uleb128 0x2
 26714 1300 91       		.byte	0x91
 26715 1301 58       		.sleb128 -40
 26716 1302 22       		.uleb128 0x22
 26717 1303 100D0000 		.4byte	.LASF237
 26718 1307 01       		.byte	0x1
 26719 1308 CE04     		.2byte	0x4ce
 26720 130a 97000000 		.4byte	0x97
 26721 130e 02       		.uleb128 0x2
 26722 130f 91       		.byte	0x91
 26723 1310 64       		.sleb128 -28
 26724 1311 22       		.uleb128 0x22
 26725 1312 13010000 		.4byte	.LASF238
 26726 1316 01       		.byte	0x1
 26727 1317 CF04     		.2byte	0x4cf
 26728 1319 97000000 		.4byte	0x97
 26729 131d 02       		.uleb128 0x2
 26730 131e 91       		.byte	0x91
 26731 131f 63       		.sleb128 -29
 26732 1320 1E       		.uleb128 0x1e
 26733 1321 F40A0000 		.4byte	.LBB15
 26734 1325 26000000 		.4byte	.LBE15-.LBB15
 26735 1329 25       		.uleb128 0x25
 26736 132a 6900     		.ascii	"i\000"
 26737 132c 01       		.byte	0x1
 26738 132d 7605     		.2byte	0x576
 26739 132f 97000000 		.4byte	0x97
 26740 1333 02       		.uleb128 0x2
 26741 1334 91       		.byte	0x91
 26742 1335 65       		.sleb128 -27
 26743 1336 00       		.byte	0
 26744 1337 00       		.byte	0
 26745 1338 21       		.uleb128 0x21
 26746 1339 96080000 		.4byte	.LASF254
 26747 133d 01       		.byte	0x1
 26748 133e 1606     		.2byte	0x616
 26749 1340 00000000 		.4byte	.LFB70
 26750 1344 F40D0000 		.4byte	.LFE70-.LFB70
 26751 1348 01       		.uleb128 0x1
 26752 1349 9C       		.byte	0x9c
 26753 134a C7140000 		.4byte	0x14c7
 26754 134e 24       		.uleb128 0x24
 26755 134f 95060000 		.4byte	.LASF242
 26756 1353 01       		.byte	0x1
 26757 1354 1606     		.2byte	0x616
 26758 1356 A3000000 		.4byte	0xa3
 26759 135a 03       		.uleb128 0x3
 26760 135b 91       		.byte	0x91
 26761 135c CE72     		.sleb128 -1714
 26762 135e 22       		.uleb128 0x22
 26763 135f 8A050000 		.4byte	.LASF227
 26764 1363 01       		.byte	0x1
 26765 1364 1906     		.2byte	0x619
 26766 1366 C7140000 		.4byte	0x14c7
 26767 136a 03       		.uleb128 0x3
 26768 136b 91       		.byte	0x91
 26769 136c DC74     		.sleb128 -1444
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 586


 26770 136e 22       		.uleb128 0x22
 26771 136f DD100000 		.4byte	.LASF255
 26772 1373 01       		.byte	0x1
 26773 1374 2006     		.2byte	0x620
 26774 1376 A3000000 		.4byte	0xa3
 26775 137a 02       		.uleb128 0x2
 26776 137b 91       		.byte	0x91
 26777 137c 62       		.sleb128 -30
 26778 137d 22       		.uleb128 0x22
 26779 137e 02050000 		.4byte	.LASF256
 26780 1382 01       		.byte	0x1
 26781 1383 2106     		.2byte	0x621
 26782 1385 A3000000 		.4byte	0xa3
 26783 1389 02       		.uleb128 0x2
 26784 138a 91       		.byte	0x91
 26785 138b 6E       		.sleb128 -18
 26786 138c 22       		.uleb128 0x22
 26787 138d B7080000 		.4byte	.LASF257
 26788 1391 01       		.byte	0x1
 26789 1392 2206     		.2byte	0x622
 26790 1394 A3000000 		.4byte	0xa3
 26791 1398 02       		.uleb128 0x2
 26792 1399 91       		.byte	0x91
 26793 139a 60       		.sleb128 -32
 26794 139b 22       		.uleb128 0x22
 26795 139c 36080000 		.4byte	.LASF258
 26796 13a0 01       		.byte	0x1
 26797 13a1 2306     		.2byte	0x623
 26798 13a3 A3000000 		.4byte	0xa3
 26799 13a7 02       		.uleb128 0x2
 26800 13a8 91       		.byte	0x91
 26801 13a9 5E       		.sleb128 -34
 26802 13aa 25       		.uleb128 0x25
 26803 13ab 6900     		.ascii	"i\000"
 26804 13ad 01       		.byte	0x1
 26805 13ae 2B06     		.2byte	0x62b
 26806 13b0 A3000000 		.4byte	0xa3
 26807 13b4 02       		.uleb128 0x2
 26808 13b5 91       		.byte	0x91
 26809 13b6 6C       		.sleb128 -20
 26810 13b7 25       		.uleb128 0x25
 26811 13b8 6A00     		.ascii	"j\000"
 26812 13ba 01       		.byte	0x1
 26813 13bb 2B06     		.2byte	0x62b
 26814 13bd A3000000 		.4byte	0xa3
 26815 13c1 02       		.uleb128 0x2
 26816 13c2 91       		.byte	0x91
 26817 13c3 6A       		.sleb128 -22
 26818 13c4 25       		.uleb128 0x25
 26819 13c5 6B00     		.ascii	"k\000"
 26820 13c7 01       		.byte	0x1
 26821 13c8 2B06     		.2byte	0x62b
 26822 13ca A3000000 		.4byte	0xa3
 26823 13ce 02       		.uleb128 0x2
 26824 13cf 91       		.byte	0x91
 26825 13d0 68       		.sleb128 -24
 26826 13d1 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 587


 26827 13d2 6800     		.ascii	"h\000"
 26828 13d4 01       		.byte	0x1
 26829 13d5 2B06     		.2byte	0x62b
 26830 13d7 A3000000 		.4byte	0xa3
 26831 13db 02       		.uleb128 0x2
 26832 13dc 91       		.byte	0x91
 26833 13dd 66       		.sleb128 -26
 26834 13de 22       		.uleb128 0x22
 26835 13df F7040000 		.4byte	.LASF259
 26836 13e3 01       		.byte	0x1
 26837 13e4 2C06     		.2byte	0x62c
 26838 13e6 A3000000 		.4byte	0xa3
 26839 13ea 02       		.uleb128 0x2
 26840 13eb 91       		.byte	0x91
 26841 13ec 5C       		.sleb128 -36
 26842 13ed 22       		.uleb128 0x22
 26843 13ee 250D0000 		.4byte	.LASF260
 26844 13f2 01       		.byte	0x1
 26845 13f3 2F06     		.2byte	0x62f
 26846 13f5 30010000 		.4byte	0x130
 26847 13f9 03       		.uleb128 0x3
 26848 13fa 91       		.byte	0x91
 26849 13fb C074     		.sleb128 -1472
 26850 13fd 22       		.uleb128 0x22
 26851 13fe A4100000 		.4byte	.LASF261
 26852 1402 01       		.byte	0x1
 26853 1403 3006     		.2byte	0x630
 26854 1405 D8140000 		.4byte	0x14d8
 26855 1409 03       		.uleb128 0x3
 26856 140a 91       		.byte	0x91
 26857 140b B474     		.sleb128 -1484
 26858 140d 22       		.uleb128 0x22
 26859 140e 13070000 		.4byte	.LASF262
 26860 1412 01       		.byte	0x1
 26861 1413 3106     		.2byte	0x631
 26862 1415 E8140000 		.4byte	0x14e8
 26863 1419 03       		.uleb128 0x3
 26864 141a 91       		.byte	0x91
 26865 141b A074     		.sleb128 -1504
 26866 141d 22       		.uleb128 0x22
 26867 141e 09000000 		.4byte	.LASF263
 26868 1422 01       		.byte	0x1
 26869 1423 3206     		.2byte	0x632
 26870 1425 F8140000 		.4byte	0x14f8
 26871 1429 03       		.uleb128 0x3
 26872 142a 91       		.byte	0x91
 26873 142b 9074     		.sleb128 -1520
 26874 142d 22       		.uleb128 0x22
 26875 142e F80D0000 		.4byte	.LASF264
 26876 1432 01       		.byte	0x1
 26877 1433 3306     		.2byte	0x633
 26878 1435 08150000 		.4byte	0x1508
 26879 1439 03       		.uleb128 0x3
 26880 143a 91       		.byte	0x91
 26881 143b E473     		.sleb128 -1564
 26882 143d 22       		.uleb128 0x22
 26883 143e 0A020000 		.4byte	.LASF265
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 588


 26884 1442 01       		.byte	0x1
 26885 1443 3406     		.2byte	0x634
 26886 1445 30010000 		.4byte	0x130
 26887 1449 03       		.uleb128 0x3
 26888 144a 91       		.byte	0x91
 26889 144b C873     		.sleb128 -1592
 26890 144d 22       		.uleb128 0x22
 26891 144e 84010000 		.4byte	.LASF266
 26892 1452 01       		.byte	0x1
 26893 1453 3706     		.2byte	0x637
 26894 1455 97000000 		.4byte	0x97
 26895 1459 02       		.uleb128 0x2
 26896 145a 91       		.byte	0x91
 26897 145b 5B       		.sleb128 -37
 26898 145c 22       		.uleb128 0x22
 26899 145d 88040000 		.4byte	.LASF267
 26900 1461 01       		.byte	0x1
 26901 1462 3806     		.2byte	0x638
 26902 1464 97000000 		.4byte	0x97
 26903 1468 02       		.uleb128 0x2
 26904 1469 91       		.byte	0x91
 26905 146a 5A       		.sleb128 -38
 26906 146b 22       		.uleb128 0x22
 26907 146c 4C100000 		.4byte	.LASF268
 26908 1470 01       		.byte	0x1
 26909 1471 3906     		.2byte	0x639
 26910 1473 97000000 		.4byte	0x97
 26911 1477 02       		.uleb128 0x2
 26912 1478 91       		.byte	0x91
 26913 1479 59       		.sleb128 -39
 26914 147a 22       		.uleb128 0x22
 26915 147b CB100000 		.4byte	.LASF269
 26916 147f 01       		.byte	0x1
 26917 1480 3A06     		.2byte	0x63a
 26918 1482 97000000 		.4byte	0x97
 26919 1486 02       		.uleb128 0x2
 26920 1487 91       		.byte	0x91
 26921 1488 58       		.sleb128 -40
 26922 1489 22       		.uleb128 0x22
 26923 148a 96040000 		.4byte	.LASF270
 26924 148e 01       		.byte	0x1
 26925 148f 3B06     		.2byte	0x63b
 26926 1491 97000000 		.4byte	0x97
 26927 1495 02       		.uleb128 0x2
 26928 1496 91       		.byte	0x91
 26929 1497 57       		.sleb128 -41
 26930 1498 22       		.uleb128 0x22
 26931 1499 D2000000 		.4byte	.LASF271
 26932 149d 01       		.byte	0x1
 26933 149e 3C06     		.2byte	0x63c
 26934 14a0 97000000 		.4byte	0x97
 26935 14a4 02       		.uleb128 0x2
 26936 14a5 91       		.byte	0x91
 26937 14a6 65       		.sleb128 -27
 26938 14a7 22       		.uleb128 0x22
 26939 14a8 B7130000 		.4byte	.LASF245
 26940 14ac 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 589


 26941 14ad 3E06     		.2byte	0x63e
 26942 14af 46120000 		.4byte	0x1246
 26943 14b3 03       		.uleb128 0x3
 26944 14b4 91       		.byte	0x91
 26945 14b5 D072     		.sleb128 -1712
 26946 14b7 22       		.uleb128 0x22
 26947 14b8 78030000 		.4byte	.LASF272
 26948 14bc 01       		.byte	0x1
 26949 14bd 3F06     		.2byte	0x63f
 26950 14bf 97000000 		.4byte	0x97
 26951 14c3 02       		.uleb128 0x2
 26952 14c4 91       		.byte	0x91
 26953 14c5 56       		.sleb128 -42
 26954 14c6 00       		.byte	0
 26955 14c7 09       		.uleb128 0x9
 26956 14c8 97000000 		.4byte	0x97
 26957 14cc D8140000 		.4byte	0x14d8
 26958 14d0 23       		.uleb128 0x23
 26959 14d1 18010000 		.4byte	0x118
 26960 14d5 7805     		.2byte	0x578
 26961 14d7 00       		.byte	0
 26962 14d8 09       		.uleb128 0x9
 26963 14d9 F9000000 		.4byte	0xf9
 26964 14dd E8140000 		.4byte	0x14e8
 26965 14e1 0A       		.uleb128 0xa
 26966 14e2 18010000 		.4byte	0x118
 26967 14e6 0A       		.byte	0xa
 26968 14e7 00       		.byte	0
 26969 14e8 09       		.uleb128 0x9
 26970 14e9 F9000000 		.4byte	0xf9
 26971 14ed F8140000 		.4byte	0x14f8
 26972 14f1 0A       		.uleb128 0xa
 26973 14f2 18010000 		.4byte	0x118
 26974 14f6 13       		.byte	0x13
 26975 14f7 00       		.byte	0
 26976 14f8 09       		.uleb128 0x9
 26977 14f9 F9000000 		.4byte	0xf9
 26978 14fd 08150000 		.4byte	0x1508
 26979 1501 0A       		.uleb128 0xa
 26980 1502 18010000 		.4byte	0x118
 26981 1506 0F       		.byte	0xf
 26982 1507 00       		.byte	0
 26983 1508 09       		.uleb128 0x9
 26984 1509 F9000000 		.4byte	0xf9
 26985 150d 18150000 		.4byte	0x1518
 26986 1511 0A       		.uleb128 0xa
 26987 1512 18010000 		.4byte	0x118
 26988 1516 29       		.byte	0x29
 26989 1517 00       		.byte	0
 26990 1518 26       		.uleb128 0x26
 26991 1519 E1020000 		.4byte	.LASF304
 26992 151d 01       		.byte	0x1
 26993 151e 0507     		.2byte	0x705
 26994 1520 00000000 		.4byte	.LFB71
 26995 1524 84000000 		.4byte	.LFE71-.LFB71
 26996 1528 01       		.uleb128 0x1
 26997 1529 9C       		.byte	0x9c
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 590


 26998 152a 49150000 		.4byte	0x1549
 26999 152e 25       		.uleb128 0x25
 27000 152f 6900     		.ascii	"i\000"
 27001 1531 01       		.byte	0x1
 27002 1532 0707     		.2byte	0x707
 27003 1534 97000000 		.4byte	0x97
 27004 1538 02       		.uleb128 0x2
 27005 1539 91       		.byte	0x91
 27006 153a 6F       		.sleb128 -17
 27007 153b 25       		.uleb128 0x25
 27008 153c 6A00     		.ascii	"j\000"
 27009 153e 01       		.byte	0x1
 27010 153f 0707     		.2byte	0x707
 27011 1541 97000000 		.4byte	0x97
 27012 1545 02       		.uleb128 0x2
 27013 1546 91       		.byte	0x91
 27014 1547 6E       		.sleb128 -18
 27015 1548 00       		.byte	0
 27016 1549 21       		.uleb128 0x21
 27017 154a F2000000 		.4byte	.LASF273
 27018 154e 01       		.byte	0x1
 27019 154f 1807     		.2byte	0x718
 27020 1551 00000000 		.4byte	.LFB72
 27021 1555 6C1B0000 		.4byte	.LFE72-.LFB72
 27022 1559 01       		.uleb128 0x1
 27023 155a 9C       		.byte	0x9c
 27024 155b F4150000 		.4byte	0x15f4
 27025 155f 24       		.uleb128 0x24
 27026 1560 2F0D0000 		.4byte	.LASF274
 27027 1564 01       		.byte	0x1
 27028 1565 1807     		.2byte	0x718
 27029 1567 1F010000 		.4byte	0x11f
 27030 156b 03       		.uleb128 0x3
 27031 156c 91       		.byte	0x91
 27032 156d D47E     		.sleb128 -172
 27033 156f 25       		.uleb128 0x25
 27034 1570 6900     		.ascii	"i\000"
 27035 1572 01       		.byte	0x1
 27036 1573 1A07     		.2byte	0x71a
 27037 1575 73000000 		.4byte	0x73
 27038 1579 02       		.uleb128 0x2
 27039 157a 91       		.byte	0x91
 27040 157b 54       		.sleb128 -44
 27041 157c 22       		.uleb128 0x22
 27042 157d 19030000 		.4byte	.LASF244
 27043 1581 01       		.byte	0x1
 27044 1582 1C07     		.2byte	0x71c
 27045 1584 10120000 		.4byte	0x1210
 27046 1588 02       		.uleb128 0x2
 27047 1589 91       		.byte	0x91
 27048 158a 4C       		.sleb128 -52
 27049 158b 1E       		.uleb128 0x1e
 27050 158c 1C000000 		.4byte	.LBB16
 27051 1590 081B0000 		.4byte	.LBE16-.LBB16
 27052 1594 25       		.uleb128 0x25
 27053 1595 73747200 		.ascii	"str\000"
 27054 1599 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 591


 27055 159a 1F07     		.2byte	0x71f
 27056 159c F4150000 		.4byte	0x15f4
 27057 15a0 03       		.uleb128 0x3
 27058 15a1 91       		.byte	0x91
 27059 15a2 DC7E     		.sleb128 -164
 27060 15a4 1E       		.uleb128 0x1e
 27061 15a5 F2020000 		.4byte	.LBB17
 27062 15a9 AA100000 		.4byte	.LBE17-.LBB17
 27063 15ad 25       		.uleb128 0x25
 27064 15ae 6B00     		.ascii	"k\000"
 27065 15b0 01       		.byte	0x1
 27066 15b1 4F07     		.2byte	0x74f
 27067 15b3 97000000 		.4byte	0x97
 27068 15b7 02       		.uleb128 0x2
 27069 15b8 91       		.byte	0x91
 27070 15b9 53       		.sleb128 -45
 27071 15ba 1E       		.uleb128 0x1e
 27072 15bb 3C030000 		.4byte	.LBB18
 27073 15bf 44100000 		.4byte	.LBE18-.LBB18
 27074 15c3 22       		.uleb128 0x22
 27075 15c4 100D0000 		.4byte	.LASF237
 27076 15c8 01       		.byte	0x1
 27077 15c9 5107     		.2byte	0x751
 27078 15cb 97000000 		.4byte	0x97
 27079 15cf 02       		.uleb128 0x2
 27080 15d0 91       		.byte	0x91
 27081 15d1 4B       		.sleb128 -53
 27082 15d2 25       		.uleb128 0x25
 27083 15d3 4D4F5400 		.ascii	"MOT\000"
 27084 15d7 01       		.byte	0x1
 27085 15d8 5207     		.2byte	0x752
 27086 15da 04160000 		.4byte	0x1604
 27087 15de 02       		.uleb128 0x2
 27088 15df 91       		.byte	0x91
 27089 15e0 44       		.sleb128 -60
 27090 15e1 22       		.uleb128 0x22
 27091 15e2 1F130000 		.4byte	.LASF275
 27092 15e6 01       		.byte	0x1
 27093 15e7 5307     		.2byte	0x753
 27094 15e9 97000000 		.4byte	0x97
 27095 15ed 02       		.uleb128 0x2
 27096 15ee 91       		.byte	0x91
 27097 15ef 43       		.sleb128 -61
 27098 15f0 00       		.byte	0
 27099 15f1 00       		.byte	0
 27100 15f2 00       		.byte	0
 27101 15f3 00       		.byte	0
 27102 15f4 09       		.uleb128 0x9
 27103 15f5 F9000000 		.4byte	0xf9
 27104 15f9 04160000 		.4byte	0x1604
 27105 15fd 0A       		.uleb128 0xa
 27106 15fe 18010000 		.4byte	0x118
 27107 1602 63       		.byte	0x63
 27108 1603 00       		.byte	0
 27109 1604 07       		.uleb128 0x7
 27110 1605 04       		.byte	0x4
 27111 1606 CE050000 		.4byte	0x5ce
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 592


 27112 160a 21       		.uleb128 0x21
 27113 160b 2B0E0000 		.4byte	.LASF276
 27114 160f 01       		.byte	0x1
 27115 1610 E708     		.2byte	0x8e7
 27116 1612 00000000 		.4byte	.LFB73
 27117 1616 B4030000 		.4byte	.LFE73-.LFB73
 27118 161a 01       		.uleb128 0x1
 27119 161b 9C       		.byte	0x9c
 27120 161c 8A160000 		.4byte	0x168a
 27121 1620 24       		.uleb128 0x24
 27122 1621 2F0D0000 		.4byte	.LASF274
 27123 1625 01       		.byte	0x1
 27124 1626 E708     		.2byte	0x8e7
 27125 1628 1F010000 		.4byte	0x11f
 27126 162c 03       		.uleb128 0x3
 27127 162d 91       		.byte	0x91
 27128 162e EC7E     		.sleb128 -148
 27129 1630 25       		.uleb128 0x25
 27130 1631 73747200 		.ascii	"str\000"
 27131 1635 01       		.byte	0x1
 27132 1636 E908     		.2byte	0x8e9
 27133 1638 F4150000 		.4byte	0x15f4
 27134 163c 03       		.uleb128 0x3
 27135 163d 91       		.byte	0x91
 27136 163e F07E     		.sleb128 -144
 27137 1640 25       		.uleb128 0x25
 27138 1641 6900     		.ascii	"i\000"
 27139 1643 01       		.byte	0x1
 27140 1644 EA08     		.2byte	0x8ea
 27141 1646 73000000 		.4byte	0x73
 27142 164a 02       		.uleb128 0x2
 27143 164b 91       		.byte	0x91
 27144 164c 64       		.sleb128 -28
 27145 164d 22       		.uleb128 0x22
 27146 164e 25040000 		.4byte	.LASF277
 27147 1652 01       		.byte	0x1
 27148 1653 EB08     		.2byte	0x8eb
 27149 1655 73000000 		.4byte	0x73
 27150 1659 02       		.uleb128 0x2
 27151 165a 91       		.byte	0x91
 27152 165b 54       		.sleb128 -44
 27153 165c 22       		.uleb128 0x22
 27154 165d 19030000 		.4byte	.LASF244
 27155 1661 01       		.byte	0x1
 27156 1662 ED08     		.2byte	0x8ed
 27157 1664 10120000 		.4byte	0x1210
 27158 1668 02       		.uleb128 0x2
 27159 1669 91       		.byte	0x91
 27160 166a 60       		.sleb128 -32
 27161 166b 25       		.uleb128 0x25
 27162 166c 4D4F5400 		.ascii	"MOT\000"
 27163 1670 01       		.byte	0x1
 27164 1671 EE08     		.2byte	0x8ee
 27165 1673 04160000 		.4byte	0x1604
 27166 1677 02       		.uleb128 0x2
 27167 1678 91       		.byte	0x91
 27168 1679 5C       		.sleb128 -36
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 593


 27169 167a 22       		.uleb128 0x22
 27170 167b 1F130000 		.4byte	.LASF275
 27171 167f 01       		.byte	0x1
 27172 1680 EF08     		.2byte	0x8ef
 27173 1682 97000000 		.4byte	0x97
 27174 1686 02       		.uleb128 0x2
 27175 1687 91       		.byte	0x91
 27176 1688 5B       		.sleb128 -37
 27177 1689 00       		.byte	0
 27178 168a 21       		.uleb128 0x21
 27179 168b 8C0E0000 		.4byte	.LASF278
 27180 168f 01       		.byte	0x1
 27181 1690 2909     		.2byte	0x929
 27182 1692 00000000 		.4byte	.LFB74
 27183 1696 7C120000 		.4byte	.LFE74-.LFB74
 27184 169a 01       		.uleb128 0x1
 27185 169b 9C       		.byte	0x9c
 27186 169c 2B170000 		.4byte	0x172b
 27187 16a0 24       		.uleb128 0x24
 27188 16a1 2F0D0000 		.4byte	.LASF274
 27189 16a5 01       		.byte	0x1
 27190 16a6 2909     		.2byte	0x929
 27191 16a8 1F010000 		.4byte	0x11f
 27192 16ac 03       		.uleb128 0x3
 27193 16ad 91       		.byte	0x91
 27194 16ae D47E     		.sleb128 -172
 27195 16b0 25       		.uleb128 0x25
 27196 16b1 73747200 		.ascii	"str\000"
 27197 16b5 01       		.byte	0x1
 27198 16b6 2B09     		.2byte	0x92b
 27199 16b8 F4150000 		.4byte	0x15f4
 27200 16bc 03       		.uleb128 0x3
 27201 16bd 91       		.byte	0x91
 27202 16be DC7E     		.sleb128 -164
 27203 16c0 25       		.uleb128 0x25
 27204 16c1 6900     		.ascii	"i\000"
 27205 16c3 01       		.byte	0x1
 27206 16c4 2C09     		.2byte	0x92c
 27207 16c6 73000000 		.4byte	0x73
 27208 16ca 02       		.uleb128 0x2
 27209 16cb 91       		.byte	0x91
 27210 16cc 54       		.sleb128 -44
 27211 16cd 22       		.uleb128 0x22
 27212 16ce 19030000 		.4byte	.LASF244
 27213 16d2 01       		.byte	0x1
 27214 16d3 3009     		.2byte	0x930
 27215 16d5 10120000 		.4byte	0x1210
 27216 16d9 02       		.uleb128 0x2
 27217 16da 91       		.byte	0x91
 27218 16db 4C       		.sleb128 -52
 27219 16dc 1E       		.uleb128 0x1e
 27220 16dd 08010000 		.4byte	.LBB19
 27221 16e1 D40C0000 		.4byte	.LBE19-.LBB19
 27222 16e5 25       		.uleb128 0x25
 27223 16e6 6B00     		.ascii	"k\000"
 27224 16e8 01       		.byte	0x1
 27225 16e9 4509     		.2byte	0x945
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 594


 27226 16eb 97000000 		.4byte	0x97
 27227 16ef 02       		.uleb128 0x2
 27228 16f0 91       		.byte	0x91
 27229 16f1 53       		.sleb128 -45
 27230 16f2 1E       		.uleb128 0x1e
 27231 16f3 12010000 		.4byte	.LBB20
 27232 16f7 AE0C0000 		.4byte	.LBE20-.LBB20
 27233 16fb 22       		.uleb128 0x22
 27234 16fc 100D0000 		.4byte	.LASF237
 27235 1700 01       		.byte	0x1
 27236 1701 4709     		.2byte	0x947
 27237 1703 97000000 		.4byte	0x97
 27238 1707 02       		.uleb128 0x2
 27239 1708 91       		.byte	0x91
 27240 1709 4B       		.sleb128 -53
 27241 170a 25       		.uleb128 0x25
 27242 170b 4D4F5400 		.ascii	"MOT\000"
 27243 170f 01       		.byte	0x1
 27244 1710 4809     		.2byte	0x948
 27245 1712 04160000 		.4byte	0x1604
 27246 1716 02       		.uleb128 0x2
 27247 1717 91       		.byte	0x91
 27248 1718 44       		.sleb128 -60
 27249 1719 22       		.uleb128 0x22
 27250 171a 1F130000 		.4byte	.LASF275
 27251 171e 01       		.byte	0x1
 27252 171f 4909     		.2byte	0x949
 27253 1721 97000000 		.4byte	0x97
 27254 1725 02       		.uleb128 0x2
 27255 1726 91       		.byte	0x91
 27256 1727 43       		.sleb128 -61
 27257 1728 00       		.byte	0
 27258 1729 00       		.byte	0
 27259 172a 00       		.byte	0
 27260 172b 21       		.uleb128 0x21
 27261 172c EB0A0000 		.4byte	.LASF279
 27262 1730 01       		.byte	0x1
 27263 1731 310A     		.2byte	0xa31
 27264 1733 00000000 		.4byte	.LFB75
 27265 1737 C8000000 		.4byte	.LFE75-.LFB75
 27266 173b 01       		.uleb128 0x1
 27267 173c 9C       		.byte	0x9c
 27268 173d 6F170000 		.4byte	0x176f
 27269 1741 24       		.uleb128 0x24
 27270 1742 2F0D0000 		.4byte	.LASF274
 27271 1746 01       		.byte	0x1
 27272 1747 310A     		.2byte	0xa31
 27273 1749 1F010000 		.4byte	0x11f
 27274 174d 03       		.uleb128 0x3
 27275 174e 91       		.byte	0x91
 27276 174f 847F     		.sleb128 -124
 27277 1751 25       		.uleb128 0x25
 27278 1752 73747200 		.ascii	"str\000"
 27279 1756 01       		.byte	0x1
 27280 1757 330A     		.2byte	0xa33
 27281 1759 F4150000 		.4byte	0x15f4
 27282 175d 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 595


 27283 175e 91       		.byte	0x91
 27284 175f 887F     		.sleb128 -120
 27285 1761 25       		.uleb128 0x25
 27286 1762 6900     		.ascii	"i\000"
 27287 1764 01       		.byte	0x1
 27288 1765 340A     		.2byte	0xa34
 27289 1767 73000000 		.4byte	0x73
 27290 176b 02       		.uleb128 0x2
 27291 176c 91       		.byte	0x91
 27292 176d 6C       		.sleb128 -20
 27293 176e 00       		.byte	0
 27294 176f 21       		.uleb128 0x21
 27295 1770 3B0D0000 		.4byte	.LASF280
 27296 1774 01       		.byte	0x1
 27297 1775 480A     		.2byte	0xa48
 27298 1777 00000000 		.4byte	.LFB76
 27299 177b 30010000 		.4byte	.LFE76-.LFB76
 27300 177f 01       		.uleb128 0x1
 27301 1780 9C       		.byte	0x9c
 27302 1781 B3170000 		.4byte	0x17b3
 27303 1785 24       		.uleb128 0x24
 27304 1786 2F0D0000 		.4byte	.LASF274
 27305 178a 01       		.byte	0x1
 27306 178b 480A     		.2byte	0xa48
 27307 178d 1F010000 		.4byte	0x11f
 27308 1791 03       		.uleb128 0x3
 27309 1792 91       		.byte	0x91
 27310 1793 847F     		.sleb128 -124
 27311 1795 25       		.uleb128 0x25
 27312 1796 73747200 		.ascii	"str\000"
 27313 179a 01       		.byte	0x1
 27314 179b 4A0A     		.2byte	0xa4a
 27315 179d F4150000 		.4byte	0x15f4
 27316 17a1 03       		.uleb128 0x3
 27317 17a2 91       		.byte	0x91
 27318 17a3 887F     		.sleb128 -120
 27319 17a5 25       		.uleb128 0x25
 27320 17a6 6900     		.ascii	"i\000"
 27321 17a8 01       		.byte	0x1
 27322 17a9 4B0A     		.2byte	0xa4b
 27323 17ab 73000000 		.4byte	0x73
 27324 17af 02       		.uleb128 0x2
 27325 17b0 91       		.byte	0x91
 27326 17b1 6C       		.sleb128 -20
 27327 17b2 00       		.byte	0
 27328 17b3 21       		.uleb128 0x21
 27329 17b4 31140000 		.4byte	.LASF281
 27330 17b8 01       		.byte	0x1
 27331 17b9 6F0A     		.2byte	0xa6f
 27332 17bb 00000000 		.4byte	.LFB77
 27333 17bf 74030000 		.4byte	.LFE77-.LFB77
 27334 17c3 01       		.uleb128 0x1
 27335 17c4 9C       		.byte	0x9c
 27336 17c5 F7170000 		.4byte	0x17f7
 27337 17c9 24       		.uleb128 0x24
 27338 17ca 2F0D0000 		.4byte	.LASF274
 27339 17ce 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 596


 27340 17cf 6F0A     		.2byte	0xa6f
 27341 17d1 1F010000 		.4byte	0x11f
 27342 17d5 03       		.uleb128 0x3
 27343 17d6 91       		.byte	0x91
 27344 17d7 AC7D     		.sleb128 -340
 27345 17d9 25       		.uleb128 0x25
 27346 17da 73747200 		.ascii	"str\000"
 27347 17de 01       		.byte	0x1
 27348 17df 710A     		.2byte	0xa71
 27349 17e1 F7170000 		.4byte	0x17f7
 27350 17e5 03       		.uleb128 0x3
 27351 17e6 91       		.byte	0x91
 27352 17e7 B07D     		.sleb128 -336
 27353 17e9 25       		.uleb128 0x25
 27354 17ea 6900     		.ascii	"i\000"
 27355 17ec 01       		.byte	0x1
 27356 17ed 720A     		.2byte	0xa72
 27357 17ef 73000000 		.4byte	0x73
 27358 17f3 02       		.uleb128 0x2
 27359 17f4 91       		.byte	0x91
 27360 17f5 5C       		.sleb128 -36
 27361 17f6 00       		.byte	0
 27362 17f7 09       		.uleb128 0x9
 27363 17f8 F9000000 		.4byte	0xf9
 27364 17fc 08180000 		.4byte	0x1808
 27365 1800 23       		.uleb128 0x23
 27366 1801 18010000 		.4byte	0x118
 27367 1805 2B01     		.2byte	0x12b
 27368 1807 00       		.byte	0
 27369 1808 21       		.uleb128 0x21
 27370 1809 560E0000 		.4byte	.LASF282
 27371 180d 01       		.byte	0x1
 27372 180e 9A0A     		.2byte	0xa9a
 27373 1810 00000000 		.4byte	.LFB78
 27374 1814 84000000 		.4byte	.LFE78-.LFB78
 27375 1818 01       		.uleb128 0x1
 27376 1819 9C       		.byte	0x9c
 27377 181a 5B180000 		.4byte	0x185b
 27378 181e 24       		.uleb128 0x24
 27379 181f 8A050000 		.4byte	.LASF227
 27380 1823 01       		.byte	0x1
 27381 1824 9A0A     		.2byte	0xa9a
 27382 1826 15100000 		.4byte	0x1015
 27383 182a 02       		.uleb128 0x2
 27384 182b 91       		.byte	0x91
 27385 182c 6C       		.sleb128 -20
 27386 182d 24       		.uleb128 0x24
 27387 182e CA0A0000 		.4byte	.LASF228
 27388 1832 01       		.byte	0x1
 27389 1833 9A0A     		.2byte	0xa9a
 27390 1835 A3000000 		.4byte	0xa3
 27391 1839 02       		.uleb128 0x2
 27392 183a 91       		.byte	0x91
 27393 183b 6A       		.sleb128 -22
 27394 183c 24       		.uleb128 0x24
 27395 183d BE0E0000 		.4byte	.LASF283
 27396 1841 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 597


 27397 1842 9A0A     		.2byte	0xa9a
 27398 1844 97000000 		.4byte	0x97
 27399 1848 02       		.uleb128 0x2
 27400 1849 91       		.byte	0x91
 27401 184a 69       		.sleb128 -23
 27402 184b 22       		.uleb128 0x22
 27403 184c 95060000 		.4byte	.LASF242
 27404 1850 01       		.byte	0x1
 27405 1851 9C0A     		.2byte	0xa9c
 27406 1853 A3000000 		.4byte	0xa3
 27407 1857 02       		.uleb128 0x2
 27408 1858 91       		.byte	0x91
 27409 1859 76       		.sleb128 -10
 27410 185a 00       		.byte	0
 27411 185b 21       		.uleb128 0x21
 27412 185c AF050000 		.4byte	.LASF284
 27413 1860 01       		.byte	0x1
 27414 1861 B60A     		.2byte	0xab6
 27415 1863 00000000 		.4byte	.LFB79
 27416 1867 88000000 		.4byte	.LFE79-.LFB79
 27417 186b 01       		.uleb128 0x1
 27418 186c 9C       		.byte	0x9c
 27419 186d 9F180000 		.4byte	0x189f
 27420 1871 24       		.uleb128 0x24
 27421 1872 8A050000 		.4byte	.LASF227
 27422 1876 01       		.byte	0x1
 27423 1877 B60A     		.2byte	0xab6
 27424 1879 15100000 		.4byte	0x1015
 27425 187d 02       		.uleb128 0x2
 27426 187e 91       		.byte	0x91
 27427 187f 6C       		.sleb128 -20
 27428 1880 24       		.uleb128 0x24
 27429 1881 CA0A0000 		.4byte	.LASF228
 27430 1885 01       		.byte	0x1
 27431 1886 B60A     		.2byte	0xab6
 27432 1888 A3000000 		.4byte	0xa3
 27433 188c 02       		.uleb128 0x2
 27434 188d 91       		.byte	0x91
 27435 188e 6A       		.sleb128 -22
 27436 188f 22       		.uleb128 0x22
 27437 1890 95060000 		.4byte	.LASF242
 27438 1894 01       		.byte	0x1
 27439 1895 B80A     		.2byte	0xab8
 27440 1897 A3000000 		.4byte	0xa3
 27441 189b 02       		.uleb128 0x2
 27442 189c 91       		.byte	0x91
 27443 189d 76       		.sleb128 -10
 27444 189e 00       		.byte	0
 27445 189f 21       		.uleb128 0x21
 27446 18a0 560B0000 		.4byte	.LASF285
 27447 18a4 01       		.byte	0x1
 27448 18a5 D20A     		.2byte	0xad2
 27449 18a7 00000000 		.4byte	.LFB80
 27450 18ab A0000000 		.4byte	.LFE80-.LFB80
 27451 18af 01       		.uleb128 0x1
 27452 18b0 9C       		.byte	0x9c
 27453 18b1 F2180000 		.4byte	0x18f2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 598


 27454 18b5 24       		.uleb128 0x24
 27455 18b6 8A050000 		.4byte	.LASF227
 27456 18ba 01       		.byte	0x1
 27457 18bb D20A     		.2byte	0xad2
 27458 18bd 15100000 		.4byte	0x1015
 27459 18c1 02       		.uleb128 0x2
 27460 18c2 91       		.byte	0x91
 27461 18c3 74       		.sleb128 -12
 27462 18c4 24       		.uleb128 0x24
 27463 18c5 CA0A0000 		.4byte	.LASF228
 27464 18c9 01       		.byte	0x1
 27465 18ca D20A     		.2byte	0xad2
 27466 18cc A3000000 		.4byte	0xa3
 27467 18d0 02       		.uleb128 0x2
 27468 18d1 91       		.byte	0x91
 27469 18d2 72       		.sleb128 -14
 27470 18d3 27       		.uleb128 0x27
 27471 18d4 696400   		.ascii	"id\000"
 27472 18d7 01       		.byte	0x1
 27473 18d8 D20A     		.2byte	0xad2
 27474 18da 97000000 		.4byte	0x97
 27475 18de 02       		.uleb128 0x2
 27476 18df 91       		.byte	0x91
 27477 18e0 71       		.sleb128 -15
 27478 18e1 25       		.uleb128 0x25
 27479 18e2 6900     		.ascii	"i\000"
 27480 18e4 01       		.byte	0x1
 27481 18e5 D40A     		.2byte	0xad4
 27482 18e7 A3000000 		.4byte	0xa3
 27483 18eb 05       		.uleb128 0x5
 27484 18ec 03       		.byte	0x3
 27485 18ed 00000000 		.4byte	i.11185
 27486 18f1 00       		.byte	0
 27487 18f2 28       		.uleb128 0x28
 27488 18f3 CF120000 		.4byte	.LASF291
 27489 18f7 01       		.byte	0x1
 27490 18f8 F00A     		.2byte	0xaf0
 27491 18fa 97000000 		.4byte	0x97
 27492 18fe 00000000 		.4byte	.LFB81
 27493 1902 3E000000 		.4byte	.LFE81-.LFB81
 27494 1906 01       		.uleb128 0x1
 27495 1907 9C       		.byte	0x9c
 27496 1908 47190000 		.4byte	0x1947
 27497 190c 24       		.uleb128 0x24
 27498 190d A30A0000 		.4byte	.LASF286
 27499 1911 01       		.byte	0x1
 27500 1912 F00A     		.2byte	0xaf0
 27501 1914 15100000 		.4byte	0x1015
 27502 1918 02       		.uleb128 0x2
 27503 1919 91       		.byte	0x91
 27504 191a 6C       		.sleb128 -20
 27505 191b 24       		.uleb128 0x24
 27506 191c 5F050000 		.4byte	.LASF287
 27507 1920 01       		.byte	0x1
 27508 1921 F00A     		.2byte	0xaf0
 27509 1923 97000000 		.4byte	0x97
 27510 1927 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 599


 27511 1928 91       		.byte	0x91
 27512 1929 6B       		.sleb128 -21
 27513 192a 25       		.uleb128 0x25
 27514 192b 6900     		.ascii	"i\000"
 27515 192d 01       		.byte	0x1
 27516 192e F20A     		.2byte	0xaf2
 27517 1930 97000000 		.4byte	0x97
 27518 1934 02       		.uleb128 0x2
 27519 1935 91       		.byte	0x91
 27520 1936 77       		.sleb128 -9
 27521 1937 22       		.uleb128 0x22
 27522 1938 8F0C0000 		.4byte	.LASF288
 27523 193c 01       		.byte	0x1
 27524 193d F30A     		.2byte	0xaf3
 27525 193f 97000000 		.4byte	0x97
 27526 1943 02       		.uleb128 0x2
 27527 1944 91       		.byte	0x91
 27528 1945 76       		.sleb128 -10
 27529 1946 00       		.byte	0
 27530 1947 21       		.uleb128 0x21
 27531 1948 D80A0000 		.4byte	.LASF289
 27532 194c 01       		.byte	0x1
 27533 194d 000B     		.2byte	0xb00
 27534 194f 00000000 		.4byte	.LFB82
 27535 1953 2E000000 		.4byte	.LFE82-.LFB82
 27536 1957 01       		.uleb128 0x1
 27537 1958 9C       		.byte	0x9c
 27538 1959 8B190000 		.4byte	0x198b
 27539 195d 24       		.uleb128 0x24
 27540 195e A8040000 		.4byte	.LASF290
 27541 1962 01       		.byte	0x1
 27542 1963 000B     		.2byte	0xb00
 27543 1965 97000000 		.4byte	0x97
 27544 1969 02       		.uleb128 0x2
 27545 196a 91       		.byte	0x91
 27546 196b 6F       		.sleb128 -17
 27547 196c 22       		.uleb128 0x22
 27548 196d CA0A0000 		.4byte	.LASF228
 27549 1971 01       		.byte	0x1
 27550 1972 010B     		.2byte	0xb01
 27551 1974 73000000 		.4byte	0x73
 27552 1978 02       		.uleb128 0x2
 27553 1979 91       		.byte	0x91
 27554 197a 74       		.sleb128 -12
 27555 197b 22       		.uleb128 0x22
 27556 197c 8A050000 		.4byte	.LASF227
 27557 1980 01       		.byte	0x1
 27558 1981 020B     		.2byte	0xb02
 27559 1983 7A080000 		.4byte	0x87a
 27560 1987 02       		.uleb128 0x2
 27561 1988 91       		.byte	0x91
 27562 1989 70       		.sleb128 -16
 27563 198a 00       		.byte	0
 27564 198b 29       		.uleb128 0x29
 27565 198c D9030000 		.4byte	.LASF292
 27566 1990 01       		.byte	0x1
 27567 1991 0F0B     		.2byte	0xb0f
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 600


 27568 1993 97000000 		.4byte	0x97
 27569 1997 00000000 		.4byte	.LFB83
 27570 199b 98000000 		.4byte	.LFE83-.LFB83
 27571 199f 01       		.uleb128 0x1
 27572 19a0 9C       		.byte	0x9c
 27573 19a1 EF190000 		.4byte	0x19ef
 27574 19a5 24       		.uleb128 0x24
 27575 19a6 52050000 		.4byte	.LASF293
 27576 19aa 01       		.byte	0x1
 27577 19ab 0F0B     		.2byte	0xb0f
 27578 19ad 73000000 		.4byte	0x73
 27579 19b1 02       		.uleb128 0x2
 27580 19b2 91       		.byte	0x91
 27581 19b3 64       		.sleb128 -28
 27582 19b4 25       		.uleb128 0x25
 27583 19b5 6900     		.ascii	"i\000"
 27584 19b7 01       		.byte	0x1
 27585 19b8 110B     		.2byte	0xb11
 27586 19ba 73000000 		.4byte	0x73
 27587 19be 02       		.uleb128 0x2
 27588 19bf 91       		.byte	0x91
 27589 19c0 74       		.sleb128 -12
 27590 19c1 22       		.uleb128 0x22
 27591 19c2 99000000 		.4byte	.LASF294
 27592 19c6 01       		.byte	0x1
 27593 19c7 120B     		.2byte	0xb12
 27594 19c9 97000000 		.4byte	0x97
 27595 19cd 02       		.uleb128 0x2
 27596 19ce 91       		.byte	0x91
 27597 19cf 6B       		.sleb128 -21
 27598 19d0 22       		.uleb128 0x22
 27599 19d1 CB050000 		.4byte	.LASF295
 27600 19d5 01       		.byte	0x1
 27601 19d6 130B     		.2byte	0xb13
 27602 19d8 73000000 		.4byte	0x73
 27603 19dc 02       		.uleb128 0x2
 27604 19dd 91       		.byte	0x91
 27605 19de 6C       		.sleb128 -20
 27606 19df 22       		.uleb128 0x22
 27607 19e0 E6040000 		.4byte	.LASF296
 27608 19e4 01       		.byte	0x1
 27609 19e5 140B     		.2byte	0xb14
 27610 19e7 97000000 		.4byte	0x97
 27611 19eb 02       		.uleb128 0x2
 27612 19ec 91       		.byte	0x91
 27613 19ed 73       		.sleb128 -13
 27614 19ee 00       		.byte	0
 27615 19ef 21       		.uleb128 0x21
 27616 19f0 CA0D0000 		.4byte	.LASF297
 27617 19f4 01       		.byte	0x1
 27618 19f5 390B     		.2byte	0xb39
 27619 19f7 00000000 		.4byte	.LFB84
 27620 19fb 80000000 		.4byte	.LFE84-.LFB84
 27621 19ff 01       		.uleb128 0x1
 27622 1a00 9C       		.byte	0x9c
 27623 1a01 131A0000 		.4byte	0x1a13
 27624 1a05 25       		.uleb128 0x25
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 601


 27625 1a06 6900     		.ascii	"i\000"
 27626 1a08 01       		.byte	0x1
 27627 1a09 3B0B     		.2byte	0xb3b
 27628 1a0b A3000000 		.4byte	0xa3
 27629 1a0f 02       		.uleb128 0x2
 27630 1a10 91       		.byte	0x91
 27631 1a11 76       		.sleb128 -10
 27632 1a12 00       		.byte	0
 27633 1a13 29       		.uleb128 0x29
 27634 1a14 1A0D0000 		.4byte	.LASF298
 27635 1a18 01       		.byte	0x1
 27636 1a19 520B     		.2byte	0xb52
 27637 1a1b 97000000 		.4byte	0x97
 27638 1a1f 00000000 		.4byte	.LFB85
 27639 1a23 5C000000 		.4byte	.LFE85-.LFB85
 27640 1a27 01       		.uleb128 0x1
 27641 1a28 9C       		.byte	0x9c
 27642 1a29 3B1A0000 		.4byte	0x1a3b
 27643 1a2d 25       		.uleb128 0x25
 27644 1a2e 6900     		.ascii	"i\000"
 27645 1a30 01       		.byte	0x1
 27646 1a31 530B     		.2byte	0xb53
 27647 1a33 A3000000 		.4byte	0xa3
 27648 1a37 02       		.uleb128 0x2
 27649 1a38 91       		.byte	0x91
 27650 1a39 76       		.sleb128 -10
 27651 1a3a 00       		.byte	0
 27652 1a3b 29       		.uleb128 0x29
 27653 1a3c D1050000 		.4byte	.LASF299
 27654 1a40 01       		.byte	0x1
 27655 1a41 650B     		.2byte	0xb65
 27656 1a43 97000000 		.4byte	0x97
 27657 1a47 00000000 		.4byte	.LFB86
 27658 1a4b 0C060000 		.4byte	.LFE86-.LFB86
 27659 1a4f 01       		.uleb128 0x1
 27660 1a50 9C       		.byte	0x9c
 27661 1a51 701A0000 		.4byte	0x1a70
 27662 1a55 25       		.uleb128 0x25
 27663 1a56 6900     		.ascii	"i\000"
 27664 1a58 01       		.byte	0x1
 27665 1a59 670B     		.2byte	0xb67
 27666 1a5b 97000000 		.4byte	0x97
 27667 1a5f 02       		.uleb128 0x2
 27668 1a60 91       		.byte	0x91
 27669 1a61 77       		.sleb128 -9
 27670 1a62 25       		.uleb128 0x25
 27671 1a63 6A00     		.ascii	"j\000"
 27672 1a65 01       		.byte	0x1
 27673 1a66 670B     		.2byte	0xb67
 27674 1a68 97000000 		.4byte	0x97
 27675 1a6c 02       		.uleb128 0x2
 27676 1a6d 91       		.byte	0x91
 27677 1a6e 76       		.sleb128 -10
 27678 1a6f 00       		.byte	0
 27679 1a70 2A       		.uleb128 0x2a
 27680 1a71 75080000 		.4byte	.LASF300
 27681 1a75 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 602


 27682 1a76 030C     		.2byte	0xc03
 27683 1a78 00000000 		.4byte	.LFB87
 27684 1a7c 38020000 		.4byte	.LFE87-.LFB87
 27685 1a80 01       		.uleb128 0x1
 27686 1a81 9C       		.byte	0x9c
 27687 1a82 AD1A0000 		.4byte	0x1aad
 27688 1a86 22       		.uleb128 0x22
 27689 1a87 100D0000 		.4byte	.LASF237
 27690 1a8b 01       		.byte	0x1
 27691 1a8c 050C     		.2byte	0xc05
 27692 1a8e 97000000 		.4byte	0x97
 27693 1a92 02       		.uleb128 0x2
 27694 1a93 91       		.byte	0x91
 27695 1a94 73       		.sleb128 -13
 27696 1a95 1E       		.uleb128 0x1e
 27697 1a96 FA000000 		.4byte	.LBB21
 27698 1a9a 6A000000 		.4byte	.LBE21-.LBB21
 27699 1a9e 25       		.uleb128 0x25
 27700 1a9f 6900     		.ascii	"i\000"
 27701 1aa1 01       		.byte	0x1
 27702 1aa2 160C     		.2byte	0xc16
 27703 1aa4 73000000 		.4byte	0x73
 27704 1aa8 02       		.uleb128 0x2
 27705 1aa9 91       		.byte	0x91
 27706 1aaa 74       		.sleb128 -12
 27707 1aab 00       		.byte	0
 27708 1aac 00       		.byte	0
 27709 1aad 2B       		.uleb128 0x2b
 27710 1aae BB0A0000 		.4byte	.LASF301
 27711 1ab2 01       		.byte	0x1
 27712 1ab3 350C     		.2byte	0xc35
 27713 1ab5 00000000 		.4byte	.LFB88
 27714 1ab9 28000000 		.4byte	.LFE88-.LFB88
 27715 1abd 01       		.uleb128 0x1
 27716 1abe 9C       		.byte	0x9c
 27717 1abf 2B       		.uleb128 0x2b
 27718 1ac0 36100000 		.4byte	.LASF302
 27719 1ac4 01       		.byte	0x1
 27720 1ac5 410C     		.2byte	0xc41
 27721 1ac7 00000000 		.4byte	.LFB89
 27722 1acb 78000000 		.4byte	.LFE89-.LFB89
 27723 1acf 01       		.uleb128 0x1
 27724 1ad0 9C       		.byte	0x9c
 27725 1ad1 2B       		.uleb128 0x2b
 27726 1ad2 9C030000 		.4byte	.LASF303
 27727 1ad6 01       		.byte	0x1
 27728 1ad7 570C     		.2byte	0xc57
 27729 1ad9 00000000 		.4byte	.LFB90
 27730 1add B0000000 		.4byte	.LFE90-.LFB90
 27731 1ae1 01       		.uleb128 0x1
 27732 1ae2 9C       		.byte	0x9c
 27733 1ae3 26       		.uleb128 0x26
 27734 1ae4 12060000 		.4byte	.LASF305
 27735 1ae8 01       		.byte	0x1
 27736 1ae9 780C     		.2byte	0xc78
 27737 1aeb 00000000 		.4byte	.LFB91
 27738 1aef B4000000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 603


 27739 1af3 01       		.uleb128 0x1
 27740 1af4 9C       		.byte	0x9c
 27741 1af5 271B0000 		.4byte	0x1b27
 27742 1af9 22       		.uleb128 0x22
 27743 1afa 95060000 		.4byte	.LASF242
 27744 1afe 01       		.byte	0x1
 27745 1aff 7A0C     		.2byte	0xc7a
 27746 1b01 97000000 		.4byte	0x97
 27747 1b05 02       		.uleb128 0x2
 27748 1b06 91       		.byte	0x91
 27749 1b07 6F       		.sleb128 -17
 27750 1b08 22       		.uleb128 0x22
 27751 1b09 F0100000 		.4byte	.LASF233
 27752 1b0d 01       		.byte	0x1
 27753 1b0e 7B0C     		.2byte	0xc7b
 27754 1b10 C7000000 		.4byte	0xc7
 27755 1b14 02       		.uleb128 0x2
 27756 1b15 91       		.byte	0x91
 27757 1b16 6C       		.sleb128 -20
 27758 1b17 22       		.uleb128 0x22
 27759 1b18 8A050000 		.4byte	.LASF227
 27760 1b1c 01       		.byte	0x1
 27761 1b1d 7E0C     		.2byte	0xc7e
 27762 1b1f 0B080000 		.4byte	0x80b
 27763 1b23 02       		.uleb128 0x2
 27764 1b24 91       		.byte	0x91
 27765 1b25 64       		.sleb128 -28
 27766 1b26 00       		.byte	0
 27767 1b27 26       		.uleb128 0x26
 27768 1b28 B70D0000 		.4byte	.LASF306
 27769 1b2c 01       		.byte	0x1
 27770 1b2d 910C     		.2byte	0xc91
 27771 1b2f 00000000 		.4byte	.LFB92
 27772 1b33 B8000000 		.4byte	.LFE92-.LFB92
 27773 1b37 01       		.uleb128 0x1
 27774 1b38 9C       		.byte	0x9c
 27775 1b39 6B1B0000 		.4byte	0x1b6b
 27776 1b3d 22       		.uleb128 0x22
 27777 1b3e 95060000 		.4byte	.LASF242
 27778 1b42 01       		.byte	0x1
 27779 1b43 930C     		.2byte	0xc93
 27780 1b45 97000000 		.4byte	0x97
 27781 1b49 02       		.uleb128 0x2
 27782 1b4a 91       		.byte	0x91
 27783 1b4b 6F       		.sleb128 -17
 27784 1b4c 22       		.uleb128 0x22
 27785 1b4d F0100000 		.4byte	.LASF233
 27786 1b51 01       		.byte	0x1
 27787 1b52 940C     		.2byte	0xc94
 27788 1b54 C7000000 		.4byte	0xc7
 27789 1b58 02       		.uleb128 0x2
 27790 1b59 91       		.byte	0x91
 27791 1b5a 6C       		.sleb128 -20
 27792 1b5b 22       		.uleb128 0x22
 27793 1b5c 8A050000 		.4byte	.LASF227
 27794 1b60 01       		.byte	0x1
 27795 1b61 980C     		.2byte	0xc98
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 604


 27796 1b63 0B080000 		.4byte	0x80b
 27797 1b67 02       		.uleb128 0x2
 27798 1b68 91       		.byte	0x91
 27799 1b69 64       		.sleb128 -28
 27800 1b6a 00       		.byte	0
 27801 1b6b 26       		.uleb128 0x26
 27802 1b6c C1010000 		.4byte	.LASF307
 27803 1b70 01       		.byte	0x1
 27804 1b71 AA0C     		.2byte	0xcaa
 27805 1b73 00000000 		.4byte	.LFB93
 27806 1b77 B8000000 		.4byte	.LFE93-.LFB93
 27807 1b7b 01       		.uleb128 0x1
 27808 1b7c 9C       		.byte	0x9c
 27809 1b7d AF1B0000 		.4byte	0x1baf
 27810 1b81 22       		.uleb128 0x22
 27811 1b82 95060000 		.4byte	.LASF242
 27812 1b86 01       		.byte	0x1
 27813 1b87 AC0C     		.2byte	0xcac
 27814 1b89 97000000 		.4byte	0x97
 27815 1b8d 02       		.uleb128 0x2
 27816 1b8e 91       		.byte	0x91
 27817 1b8f 6F       		.sleb128 -17
 27818 1b90 22       		.uleb128 0x22
 27819 1b91 F0100000 		.4byte	.LASF233
 27820 1b95 01       		.byte	0x1
 27821 1b96 AD0C     		.2byte	0xcad
 27822 1b98 C7000000 		.4byte	0xc7
 27823 1b9c 02       		.uleb128 0x2
 27824 1b9d 91       		.byte	0x91
 27825 1b9e 6C       		.sleb128 -20
 27826 1b9f 22       		.uleb128 0x22
 27827 1ba0 8A050000 		.4byte	.LASF227
 27828 1ba4 01       		.byte	0x1
 27829 1ba5 B10C     		.2byte	0xcb1
 27830 1ba7 0B080000 		.4byte	0x80b
 27831 1bab 02       		.uleb128 0x2
 27832 1bac 91       		.byte	0x91
 27833 1bad 64       		.sleb128 -28
 27834 1bae 00       		.byte	0
 27835 1baf 26       		.uleb128 0x26
 27836 1bb0 76090000 		.4byte	.LASF308
 27837 1bb4 01       		.byte	0x1
 27838 1bb5 C30C     		.2byte	0xcc3
 27839 1bb7 00000000 		.4byte	.LFB94
 27840 1bbb 5C000000 		.4byte	.LFE94-.LFB94
 27841 1bbf 01       		.uleb128 0x1
 27842 1bc0 9C       		.byte	0x9c
 27843 1bc1 E41B0000 		.4byte	0x1be4
 27844 1bc5 22       		.uleb128 0x22
 27845 1bc6 F0100000 		.4byte	.LASF233
 27846 1bca 01       		.byte	0x1
 27847 1bcb C50C     		.2byte	0xcc5
 27848 1bcd C7000000 		.4byte	0xc7
 27849 1bd1 02       		.uleb128 0x2
 27850 1bd2 91       		.byte	0x91
 27851 1bd3 76       		.sleb128 -10
 27852 1bd4 22       		.uleb128 0x22
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 605


 27853 1bd5 8A050000 		.4byte	.LASF227
 27854 1bd9 01       		.byte	0x1
 27855 1bda C90C     		.2byte	0xcc9
 27856 1bdc 31090000 		.4byte	0x931
 27857 1be0 02       		.uleb128 0x2
 27858 1be1 91       		.byte	0x91
 27859 1be2 70       		.sleb128 -16
 27860 1be3 00       		.byte	0
 27861 1be4 2C       		.uleb128 0x2c
 27862 1be5 200B0000 		.4byte	.LASF309
 27863 1be9 01       		.byte	0x1
 27864 1bea DB0C     		.2byte	0xcdb
 27865 1bec 00000000 		.4byte	.LFB95
 27866 1bf0 44020000 		.4byte	.LFE95-.LFB95
 27867 1bf4 01       		.uleb128 0x1
 27868 1bf5 9C       		.byte	0x9c
 27869 1bf6 4E1C0000 		.4byte	0x1c4e
 27870 1bfa 22       		.uleb128 0x22
 27871 1bfb F0100000 		.4byte	.LASF233
 27872 1bff 01       		.byte	0x1
 27873 1c00 DE0C     		.2byte	0xcde
 27874 1c02 4E1C0000 		.4byte	0x1c4e
 27875 1c06 02       		.uleb128 0x2
 27876 1c07 91       		.byte	0x91
 27877 1c08 70       		.sleb128 -16
 27878 1c09 22       		.uleb128 0x22
 27879 1c0a 57060000 		.4byte	.LASF310
 27880 1c0e 01       		.byte	0x1
 27881 1c0f DF0C     		.2byte	0xcdf
 27882 1c11 4E1C0000 		.4byte	0x1c4e
 27883 1c15 05       		.uleb128 0x5
 27884 1c16 03       		.byte	0x3
 27885 1c17 04000000 		.4byte	last_aux_int16.11316
 27886 1c1b 2D       		.uleb128 0x2d
 27887 1c1c 2E000000 		.4byte	.LBB22
 27888 1c20 50000000 		.4byte	.LBE22-.LBB22
 27889 1c24 361C0000 		.4byte	0x1c36
 27890 1c28 25       		.uleb128 0x25
 27891 1c29 6900     		.ascii	"i\000"
 27892 1c2b 01       		.byte	0x1
 27893 1c2c E60C     		.2byte	0xce6
 27894 1c2e 97000000 		.4byte	0x97
 27895 1c32 02       		.uleb128 0x2
 27896 1c33 91       		.byte	0x91
 27897 1c34 77       		.sleb128 -9
 27898 1c35 00       		.byte	0
 27899 1c36 1E       		.uleb128 0x1e
 27900 1c37 88000000 		.4byte	.LBB23
 27901 1c3b 98010000 		.4byte	.LBE23-.LBB23
 27902 1c3f 25       		.uleb128 0x25
 27903 1c40 6900     		.ascii	"i\000"
 27904 1c42 01       		.byte	0x1
 27905 1c43 F00C     		.2byte	0xcf0
 27906 1c45 97000000 		.4byte	0x97
 27907 1c49 02       		.uleb128 0x2
 27908 1c4a 91       		.byte	0x91
 27909 1c4b 76       		.sleb128 -10
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 606


 27910 1c4c 00       		.byte	0
 27911 1c4d 00       		.byte	0
 27912 1c4e 09       		.uleb128 0x9
 27913 1c4f C7000000 		.4byte	0xc7
 27914 1c53 5E1C0000 		.4byte	0x1c5e
 27915 1c57 0A       		.uleb128 0xa
 27916 1c58 18010000 		.4byte	0x118
 27917 1c5c 01       		.byte	0x1
 27918 1c5d 00       		.byte	0
 27919 1c5e 26       		.uleb128 0x26
 27920 1c5f A0130000 		.4byte	.LASF311
 27921 1c63 01       		.byte	0x1
 27922 1c64 0B0D     		.2byte	0xd0b
 27923 1c66 00000000 		.4byte	.LFB96
 27924 1c6a BC000000 		.4byte	.LFE96-.LFB96
 27925 1c6e 01       		.uleb128 0x1
 27926 1c6f 9C       		.byte	0x9c
 27927 1c70 841C0000 		.4byte	0x1c84
 27928 1c74 25       		.uleb128 0x25
 27929 1c75 61757800 		.ascii	"aux\000"
 27930 1c79 01       		.byte	0x1
 27931 1c7a 0E0D     		.2byte	0xd0e
 27932 1c7c 97000000 		.4byte	0x97
 27933 1c80 02       		.uleb128 0x2
 27934 1c81 91       		.byte	0x91
 27935 1c82 77       		.sleb128 -9
 27936 1c83 00       		.byte	0
 27937 1c84 26       		.uleb128 0x26
 27938 1c85 7E0B0000 		.4byte	.LASF312
 27939 1c89 01       		.byte	0x1
 27940 1c8a 300D     		.2byte	0xd30
 27941 1c8c 00000000 		.4byte	.LFB97
 27942 1c90 5C000000 		.4byte	.LFE97-.LFB97
 27943 1c94 01       		.uleb128 0x1
 27944 1c95 9C       		.byte	0x9c
 27945 1c96 AA1C0000 		.4byte	0x1caa
 27946 1c9a 22       		.uleb128 0x22
 27947 1c9b 8A050000 		.4byte	.LASF227
 27948 1c9f 01       		.byte	0x1
 27949 1ca0 320D     		.2byte	0xd32
 27950 1ca2 BE050000 		.4byte	0x5be
 27951 1ca6 02       		.uleb128 0x2
 27952 1ca7 91       		.byte	0x91
 27953 1ca8 74       		.sleb128 -12
 27954 1ca9 00       		.byte	0
 27955 1caa 26       		.uleb128 0x26
 27956 1cab F70E0000 		.4byte	.LASF313
 27957 1caf 01       		.byte	0x1
 27958 1cb0 470D     		.2byte	0xd47
 27959 1cb2 00000000 		.4byte	.LFB98
 27960 1cb6 38010000 		.4byte	.LFE98-.LFB98
 27961 1cba 01       		.uleb128 0x1
 27962 1cbb 9C       		.byte	0x9c
 27963 1cbc EE1C0000 		.4byte	0x1cee
 27964 1cc0 22       		.uleb128 0x22
 27965 1cc1 95060000 		.4byte	.LASF242
 27966 1cc5 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 607


 27967 1cc6 490D     		.2byte	0xd49
 27968 1cc8 97000000 		.4byte	0x97
 27969 1ccc 02       		.uleb128 0x2
 27970 1ccd 91       		.byte	0x91
 27971 1cce 6F       		.sleb128 -17
 27972 1ccf 22       		.uleb128 0x22
 27973 1cd0 F0100000 		.4byte	.LASF233
 27974 1cd4 01       		.byte	0x1
 27975 1cd5 4A0D     		.2byte	0xd4a
 27976 1cd7 C7000000 		.4byte	0xc7
 27977 1cdb 02       		.uleb128 0x2
 27978 1cdc 91       		.byte	0x91
 27979 1cdd 6C       		.sleb128 -20
 27980 1cde 22       		.uleb128 0x22
 27981 1cdf 8A050000 		.4byte	.LASF227
 27982 1ce3 01       		.byte	0x1
 27983 1ce4 4E0D     		.2byte	0xd4e
 27984 1ce6 41090000 		.4byte	0x941
 27985 1cea 02       		.uleb128 0x2
 27986 1ceb 91       		.byte	0x91
 27987 1cec 60       		.sleb128 -32
 27988 1ced 00       		.byte	0
 27989 1cee 26       		.uleb128 0x26
 27990 1cef E0090000 		.4byte	.LASF314
 27991 1cf3 01       		.byte	0x1
 27992 1cf4 6E0D     		.2byte	0xd6e
 27993 1cf6 00000000 		.4byte	.LFB99
 27994 1cfa EC000000 		.4byte	.LFE99-.LFB99
 27995 1cfe 01       		.uleb128 0x1
 27996 1cff 9C       		.byte	0x9c
 27997 1d00 231D0000 		.4byte	0x1d23
 27998 1d04 22       		.uleb128 0x22
 27999 1d05 8A050000 		.4byte	.LASF227
 28000 1d09 01       		.byte	0x1
 28001 1d0a 720D     		.2byte	0xd72
 28002 1d0c 31090000 		.4byte	0x931
 28003 1d10 02       		.uleb128 0x2
 28004 1d11 91       		.byte	0x91
 28005 1d12 68       		.sleb128 -24
 28006 1d13 22       		.uleb128 0x22
 28007 1d14 F0100000 		.4byte	.LASF233
 28008 1d18 01       		.byte	0x1
 28009 1d19 730D     		.2byte	0xd73
 28010 1d1b C7000000 		.4byte	0xc7
 28011 1d1f 02       		.uleb128 0x2
 28012 1d20 91       		.byte	0x91
 28013 1d21 66       		.sleb128 -26
 28014 1d22 00       		.byte	0
 28015 1d23 26       		.uleb128 0x26
 28016 1d24 F9060000 		.4byte	.LASF315
 28017 1d28 01       		.byte	0x1
 28018 1d29 940D     		.2byte	0xd94
 28019 1d2b 00000000 		.4byte	.LFB100
 28020 1d2f 64000000 		.4byte	.LFE100-.LFB100
 28021 1d33 01       		.uleb128 0x1
 28022 1d34 9C       		.byte	0x9c
 28023 1d35 581D0000 		.4byte	0x1d58
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 608


 28024 1d39 22       		.uleb128 0x22
 28025 1d3a 8A050000 		.4byte	.LASF227
 28026 1d3e 01       		.byte	0x1
 28027 1d3f 980D     		.2byte	0xd98
 28028 1d41 5C0A0000 		.4byte	0xa5c
 28029 1d45 02       		.uleb128 0x2
 28030 1d46 91       		.byte	0x91
 28031 1d47 74       		.sleb128 -12
 28032 1d48 22       		.uleb128 0x22
 28033 1d49 F0100000 		.4byte	.LASF233
 28034 1d4d 01       		.byte	0x1
 28035 1d4e 990D     		.2byte	0xd99
 28036 1d50 C7000000 		.4byte	0xc7
 28037 1d54 02       		.uleb128 0x2
 28038 1d55 91       		.byte	0x91
 28039 1d56 72       		.sleb128 -14
 28040 1d57 00       		.byte	0
 28041 1d58 2E       		.uleb128 0x2e
 28042 1d59 E3060000 		.4byte	.LASF316
 28043 1d5d 01       		.byte	0x1
 28044 1d5e AE0D     		.2byte	0xdae
 28045 1d60 C7000000 		.4byte	0xc7
 28046 1d64 00000000 		.4byte	.LFB101
 28047 1d68 A8000000 		.4byte	.LFE101-.LFB101
 28048 1d6c 01       		.uleb128 0x1
 28049 1d6d 9C       		.byte	0x9c
 28050 1d6e CD1D0000 		.4byte	0x1dcd
 28051 1d72 22       		.uleb128 0x22
 28052 1d73 8A050000 		.4byte	.LASF227
 28053 1d77 01       		.byte	0x1
 28054 1d78 B00D     		.2byte	0xdb0
 28055 1d7a CD1D0000 		.4byte	0x1dcd
 28056 1d7e 02       		.uleb128 0x2
 28057 1d7f 91       		.byte	0x91
 28058 1d80 5C       		.sleb128 -36
 28059 1d81 22       		.uleb128 0x22
 28060 1d82 CA0A0000 		.4byte	.LASF228
 28061 1d86 01       		.byte	0x1
 28062 1d87 B10D     		.2byte	0xdb1
 28063 1d89 97000000 		.4byte	0x97
 28064 1d8d 02       		.uleb128 0x2
 28065 1d8e 91       		.byte	0x91
 28066 1d8f 74       		.sleb128 -12
 28067 1d90 22       		.uleb128 0x22
 28068 1d91 A20E0000 		.4byte	.LASF317
 28069 1d95 01       		.byte	0x1
 28070 1d96 B20D     		.2byte	0xdb2
 28071 1d98 C7000000 		.4byte	0xc7
 28072 1d9c 02       		.uleb128 0x2
 28073 1d9d 91       		.byte	0x91
 28074 1d9e 76       		.sleb128 -10
 28075 1d9f 22       		.uleb128 0x22
 28076 1da0 86020000 		.4byte	.LASF318
 28077 1da4 01       		.byte	0x1
 28078 1da5 B30D     		.2byte	0xdb3
 28079 1da7 AF000000 		.4byte	0xaf
 28080 1dab 02       		.uleb128 0x2
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 609


 28081 1dac 91       		.byte	0x91
 28082 1dad 70       		.sleb128 -16
 28083 1dae 22       		.uleb128 0x22
 28084 1daf 97120000 		.4byte	.LASF319
 28085 1db3 01       		.byte	0x1
 28086 1db4 B30D     		.2byte	0xdb3
 28087 1db6 AF000000 		.4byte	0xaf
 28088 1dba 02       		.uleb128 0x2
 28089 1dbb 91       		.byte	0x91
 28090 1dbc 6C       		.sleb128 -20
 28091 1dbd 22       		.uleb128 0x22
 28092 1dbe 04040000 		.4byte	.LASF320
 28093 1dc2 01       		.byte	0x1
 28094 1dc3 B40D     		.2byte	0xdb4
 28095 1dc5 97000000 		.4byte	0x97
 28096 1dc9 02       		.uleb128 0x2
 28097 1dca 91       		.byte	0x91
 28098 1dcb 75       		.sleb128 -11
 28099 1dcc 00       		.byte	0
 28100 1dcd 09       		.uleb128 0x9
 28101 1dce 97000000 		.4byte	0x97
 28102 1dd2 DD1D0000 		.4byte	0x1ddd
 28103 1dd6 0A       		.uleb128 0xa
 28104 1dd7 18010000 		.4byte	0x118
 28105 1ddb 0F       		.byte	0xf
 28106 1ddc 00       		.byte	0
 28107 1ddd 2F       		.uleb128 0x2f
 28108 1dde AC000000 		.4byte	.LASF340
 28109 1de2 01       		.byte	0x1
 28110 1de3 D10D     		.2byte	0xdd1
 28111 1de5 00000000 		.4byte	.LFB102
 28112 1de9 34000000 		.4byte	.LFE102-.LFB102
 28113 1ded 01       		.uleb128 0x1
 28114 1dee 9C       		.byte	0x9c
 28115 1def 26       		.uleb128 0x26
 28116 1df0 6F030000 		.4byte	.LASF321
 28117 1df4 01       		.byte	0x1
 28118 1df5 DF0D     		.2byte	0xddf
 28119 1df7 00000000 		.4byte	.LFB103
 28120 1dfb 20000000 		.4byte	.LFE103-.LFB103
 28121 1dff 01       		.uleb128 0x1
 28122 1e00 9C       		.byte	0x9c
 28123 1e01 151E0000 		.4byte	0x1e15
 28124 1e05 22       		.uleb128 0x22
 28125 1e06 8A050000 		.4byte	.LASF227
 28126 1e0a 01       		.byte	0x1
 28127 1e0b E10D     		.2byte	0xde1
 28128 1e0d 7A080000 		.4byte	0x87a
 28129 1e11 02       		.uleb128 0x2
 28130 1e12 91       		.byte	0x91
 28131 1e13 74       		.sleb128 -12
 28132 1e14 00       		.byte	0
 28133 1e15 26       		.uleb128 0x26
 28134 1e16 24010000 		.4byte	.LASF322
 28135 1e1a 01       		.byte	0x1
 28136 1e1b ED0D     		.2byte	0xded
 28137 1e1d 00000000 		.4byte	.LFB104
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 610


 28138 1e21 6C000000 		.4byte	.LFE104-.LFB104
 28139 1e25 01       		.uleb128 0x1
 28140 1e26 9C       		.byte	0x9c
 28141 1e27 4A1E0000 		.4byte	0x1e4a
 28142 1e2b 22       		.uleb128 0x22
 28143 1e2c 8A050000 		.4byte	.LASF227
 28144 1e30 01       		.byte	0x1
 28145 1e31 F10D     		.2byte	0xdf1
 28146 1e33 31090000 		.4byte	0x931
 28147 1e37 02       		.uleb128 0x2
 28148 1e38 91       		.byte	0x91
 28149 1e39 70       		.sleb128 -16
 28150 1e3a 22       		.uleb128 0x22
 28151 1e3b F0100000 		.4byte	.LASF233
 28152 1e3f 01       		.byte	0x1
 28153 1e40 F20D     		.2byte	0xdf2
 28154 1e42 C7000000 		.4byte	0xc7
 28155 1e46 02       		.uleb128 0x2
 28156 1e47 91       		.byte	0x91
 28157 1e48 6E       		.sleb128 -18
 28158 1e49 00       		.byte	0
 28159 1e4a 26       		.uleb128 0x26
 28160 1e4b C00F0000 		.4byte	.LASF323
 28161 1e4f 01       		.byte	0x1
 28162 1e50 030E     		.2byte	0xe03
 28163 1e52 00000000 		.4byte	.LFB105
 28164 1e56 BC010000 		.4byte	.LFE105-.LFB105
 28165 1e5a 01       		.uleb128 0x1
 28166 1e5b 9C       		.byte	0x9c
 28167 1e5c AC1E0000 		.4byte	0x1eac
 28168 1e60 22       		.uleb128 0x22
 28169 1e61 3C0B0000 		.4byte	.LASF324
 28170 1e65 01       		.byte	0x1
 28171 1e66 060E     		.2byte	0xe06
 28172 1e68 AF000000 		.4byte	0xaf
 28173 1e6c 02       		.uleb128 0x2
 28174 1e6d 91       		.byte	0x91
 28175 1e6e 70       		.sleb128 -16
 28176 1e6f 22       		.uleb128 0x22
 28177 1e70 240E0000 		.4byte	.LASF325
 28178 1e74 01       		.byte	0x1
 28179 1e75 070E     		.2byte	0xe07
 28180 1e77 EB000000 		.4byte	0xeb
 28181 1e7b 02       		.uleb128 0x2
 28182 1e7c 91       		.byte	0x91
 28183 1e7d 6C       		.sleb128 -20
 28184 1e7e 22       		.uleb128 0x22
 28185 1e7f CA0A0000 		.4byte	.LASF228
 28186 1e83 01       		.byte	0x1
 28187 1e84 080E     		.2byte	0xe08
 28188 1e86 97000000 		.4byte	0x97
 28189 1e8a 02       		.uleb128 0x2
 28190 1e8b 91       		.byte	0x91
 28191 1e8c 77       		.sleb128 -9
 28192 1e8d 22       		.uleb128 0x22
 28193 1e8e 8A050000 		.4byte	.LASF227
 28194 1e92 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 611


 28195 1e93 090E     		.2byte	0xe09
 28196 1e95 7A080000 		.4byte	0x87a
 28197 1e99 02       		.uleb128 0x2
 28198 1e9a 91       		.byte	0x91
 28199 1e9b 68       		.sleb128 -24
 28200 1e9c 22       		.uleb128 0x22
 28201 1e9d BE0E0000 		.4byte	.LASF283
 28202 1ea1 01       		.byte	0x1
 28203 1ea2 0A0E     		.2byte	0xe0a
 28204 1ea4 97000000 		.4byte	0x97
 28205 1ea8 02       		.uleb128 0x2
 28206 1ea9 91       		.byte	0x91
 28207 1eaa 6B       		.sleb128 -21
 28208 1eab 00       		.byte	0
 28209 1eac 26       		.uleb128 0x26
 28210 1ead D7010000 		.4byte	.LASF326
 28211 1eb1 01       		.byte	0x1
 28212 1eb2 440E     		.2byte	0xe44
 28213 1eb4 00000000 		.4byte	.LFB106
 28214 1eb8 60000000 		.4byte	.LFE106-.LFB106
 28215 1ebc 01       		.uleb128 0x1
 28216 1ebd 9C       		.byte	0x9c
 28217 1ebe E11E0000 		.4byte	0x1ee1
 28218 1ec2 22       		.uleb128 0x22
 28219 1ec3 8A050000 		.4byte	.LASF227
 28220 1ec7 01       		.byte	0x1
 28221 1ec8 460E     		.2byte	0xe46
 28222 1eca 31090000 		.4byte	0x931
 28223 1ece 02       		.uleb128 0x2
 28224 1ecf 91       		.byte	0x91
 28225 1ed0 70       		.sleb128 -16
 28226 1ed1 22       		.uleb128 0x22
 28227 1ed2 F0100000 		.4byte	.LASF233
 28228 1ed6 01       		.byte	0x1
 28229 1ed7 470E     		.2byte	0xe47
 28230 1ed9 C7000000 		.4byte	0xc7
 28231 1edd 02       		.uleb128 0x2
 28232 1ede 91       		.byte	0x91
 28233 1edf 6E       		.sleb128 -18
 28234 1ee0 00       		.byte	0
 28235 1ee1 26       		.uleb128 0x26
 28236 1ee2 60010000 		.4byte	.LASF327
 28237 1ee6 01       		.byte	0x1
 28238 1ee7 5A0E     		.2byte	0xe5a
 28239 1ee9 00000000 		.4byte	.LFB107
 28240 1eed 98050000 		.4byte	.LFE107-.LFB107
 28241 1ef1 01       		.uleb128 0x1
 28242 1ef2 9C       		.byte	0x9c
 28243 1ef3 6E1F0000 		.4byte	0x1f6e
 28244 1ef7 22       		.uleb128 0x22
 28245 1ef8 DB120000 		.4byte	.LASF328
 28246 1efc 01       		.byte	0x1
 28247 1efd 5D0E     		.2byte	0xe5d
 28248 1eff 97000000 		.4byte	0x97
 28249 1f03 02       		.uleb128 0x2
 28250 1f04 91       		.byte	0x91
 28251 1f05 6F       		.sleb128 -17
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 612


 28252 1f06 25       		.uleb128 0x25
 28253 1f07 6300     		.ascii	"c\000"
 28254 1f09 01       		.byte	0x1
 28255 1f0a 5E0E     		.2byte	0xe5e
 28256 1f0c A3000000 		.4byte	0xa3
 28257 1f10 02       		.uleb128 0x2
 28258 1f11 91       		.byte	0x91
 28259 1f12 6C       		.sleb128 -20
 28260 1f13 25       		.uleb128 0x25
 28261 1f14 6B00     		.ascii	"k\000"
 28262 1f16 01       		.byte	0x1
 28263 1f17 5F0E     		.2byte	0xe5f
 28264 1f19 97000000 		.4byte	0x97
 28265 1f1d 02       		.uleb128 0x2
 28266 1f1e 91       		.byte	0x91
 28267 1f1f 6B       		.sleb128 -21
 28268 1f20 22       		.uleb128 0x22
 28269 1f21 26000000 		.4byte	.LASF329
 28270 1f25 01       		.byte	0x1
 28271 1f26 600E     		.2byte	0xe60
 28272 1f28 A3000000 		.4byte	0xa3
 28273 1f2c 02       		.uleb128 0x2
 28274 1f2d 91       		.byte	0x91
 28275 1f2e 68       		.sleb128 -24
 28276 1f2f 22       		.uleb128 0x22
 28277 1f30 F0100000 		.4byte	.LASF233
 28278 1f34 01       		.byte	0x1
 28279 1f35 610E     		.2byte	0xe61
 28280 1f37 C7000000 		.4byte	0xc7
 28281 1f3b 02       		.uleb128 0x2
 28282 1f3c 91       		.byte	0x91
 28283 1f3d 66       		.sleb128 -26
 28284 1f3e 22       		.uleb128 0x22
 28285 1f3f 62120000 		.4byte	.LASF232
 28286 1f43 01       		.byte	0x1
 28287 1f44 620E     		.2byte	0xe62
 28288 1f46 EB000000 		.4byte	0xeb
 28289 1f4a 02       		.uleb128 0x2
 28290 1f4b 91       		.byte	0x91
 28291 1f4c 60       		.sleb128 -32
 28292 1f4d 22       		.uleb128 0x22
 28293 1f4e 8A050000 		.4byte	.LASF227
 28294 1f52 01       		.byte	0x1
 28295 1f53 650E     		.2byte	0xe65
 28296 1f55 6E1F0000 		.4byte	0x1f6e
 28297 1f59 03       		.uleb128 0x3
 28298 1f5a 91       		.byte	0x91
 28299 1f5b 807D     		.sleb128 -384
 28300 1f5d 22       		.uleb128 0x22
 28301 1f5e A9080000 		.4byte	.LASF330
 28302 1f62 01       		.byte	0x1
 28303 1f63 660E     		.2byte	0xe66
 28304 1f65 7F1F0000 		.4byte	0x1f7f
 28305 1f69 03       		.uleb128 0x3
 28306 1f6a 91       		.byte	0x91
 28307 1f6b E07C     		.sleb128 -416
 28308 1f6d 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 613


 28309 1f6e 09       		.uleb128 0x9
 28310 1f6f 97000000 		.4byte	0x97
 28311 1f73 7F1F0000 		.4byte	0x1f7f
 28312 1f77 23       		.uleb128 0x23
 28313 1f78 18010000 		.4byte	0x118
 28314 1f7c 5D01     		.2byte	0x15d
 28315 1f7e 00       		.byte	0
 28316 1f7f 09       		.uleb128 0x9
 28317 1f80 97000000 		.4byte	0x97
 28318 1f84 8F1F0000 		.4byte	0x1f8f
 28319 1f88 0A       		.uleb128 0xa
 28320 1f89 18010000 		.4byte	0x118
 28321 1f8d 1F       		.byte	0x1f
 28322 1f8e 00       		.byte	0
 28323 1f8f 26       		.uleb128 0x26
 28324 1f90 3D120000 		.4byte	.LASF331
 28325 1f94 01       		.byte	0x1
 28326 1f95 C90E     		.2byte	0xec9
 28327 1f97 00000000 		.4byte	.LFB108
 28328 1f9b 8C000000 		.4byte	.LFE108-.LFB108
 28329 1f9f 01       		.uleb128 0x1
 28330 1fa0 9C       		.byte	0x9c
 28331 1fa1 CF1F0000 		.4byte	0x1fcf
 28332 1fa5 22       		.uleb128 0x22
 28333 1fa6 8A050000 		.4byte	.LASF227
 28334 1faa 01       		.byte	0x1
 28335 1fab CC0E     		.2byte	0xecc
 28336 1fad 0A0A0000 		.4byte	0xa0a
 28337 1fb1 02       		.uleb128 0x2
 28338 1fb2 91       		.byte	0x91
 28339 1fb3 60       		.sleb128 -32
 28340 1fb4 25       		.uleb128 0x25
 28341 1fb5 6900     		.ascii	"i\000"
 28342 1fb7 01       		.byte	0x1
 28343 1fb8 CD0E     		.2byte	0xecd
 28344 1fba 97000000 		.4byte	0x97
 28345 1fbe 02       		.uleb128 0x2
 28346 1fbf 91       		.byte	0x91
 28347 1fc0 6F       		.sleb128 -17
 28348 1fc1 25       		.uleb128 0x25
 28349 1fc2 6A00     		.ascii	"j\000"
 28350 1fc4 01       		.byte	0x1
 28351 1fc5 CD0E     		.2byte	0xecd
 28352 1fc7 97000000 		.4byte	0x97
 28353 1fcb 02       		.uleb128 0x2
 28354 1fcc 91       		.byte	0x91
 28355 1fcd 6E       		.sleb128 -18
 28356 1fce 00       		.byte	0
 28357 1fcf 26       		.uleb128 0x26
 28358 1fd0 FA0F0000 		.4byte	.LASF332
 28359 1fd4 01       		.byte	0x1
 28360 1fd5 E20E     		.2byte	0xee2
 28361 1fd7 00000000 		.4byte	.LFB109
 28362 1fdb EC000000 		.4byte	.LFE109-.LFB109
 28363 1fdf 01       		.uleb128 0x1
 28364 1fe0 9C       		.byte	0x9c
 28365 1fe1 2D200000 		.4byte	0x202d
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 614


 28366 1fe5 22       		.uleb128 0x22
 28367 1fe6 8A050000 		.4byte	.LASF227
 28368 1fea 01       		.byte	0x1
 28369 1feb E50E     		.2byte	0xee5
 28370 1fed 2D200000 		.4byte	0x202d
 28371 1ff1 02       		.uleb128 0x2
 28372 1ff2 91       		.byte	0x91
 28373 1ff3 54       		.sleb128 -44
 28374 1ff4 25       		.uleb128 0x25
 28375 1ff5 6900     		.ascii	"i\000"
 28376 1ff7 01       		.byte	0x1
 28377 1ff8 E60E     		.2byte	0xee6
 28378 1ffa 97000000 		.4byte	0x97
 28379 1ffe 02       		.uleb128 0x2
 28380 1fff 91       		.byte	0x91
 28381 2000 6F       		.sleb128 -17
 28382 2001 25       		.uleb128 0x25
 28383 2002 6A00     		.ascii	"j\000"
 28384 2004 01       		.byte	0x1
 28385 2005 E60E     		.2byte	0xee6
 28386 2007 97000000 		.4byte	0x97
 28387 200b 02       		.uleb128 0x2
 28388 200c 91       		.byte	0x91
 28389 200d 6E       		.sleb128 -18
 28390 200e 25       		.uleb128 0x25
 28391 200f 69647800 		.ascii	"idx\000"
 28392 2013 01       		.byte	0x1
 28393 2014 E60E     		.2byte	0xee6
 28394 2016 97000000 		.4byte	0x97
 28395 201a 02       		.uleb128 0x2
 28396 201b 91       		.byte	0x91
 28397 201c 6D       		.sleb128 -19
 28398 201d 22       		.uleb128 0x22
 28399 201e F50B0000 		.4byte	.LASF234
 28400 2022 01       		.byte	0x1
 28401 2023 E70E     		.2byte	0xee7
 28402 2025 A3000000 		.4byte	0xa3
 28403 2029 02       		.uleb128 0x2
 28404 202a 91       		.byte	0x91
 28405 202b 52       		.sleb128 -46
 28406 202c 00       		.byte	0
 28407 202d 09       		.uleb128 0x9
 28408 202e 97000000 		.4byte	0x97
 28409 2032 3D200000 		.4byte	0x203d
 28410 2036 0A       		.uleb128 0xa
 28411 2037 18010000 		.4byte	0x118
 28412 203b 15       		.byte	0x15
 28413 203c 00       		.byte	0
 28414 203d 26       		.uleb128 0x26
 28415 203e 27030000 		.4byte	.LASF333
 28416 2042 01       		.byte	0x1
 28417 2043 000F     		.2byte	0xf00
 28418 2045 00000000 		.4byte	.LFB110
 28419 2049 5C000000 		.4byte	.LFE110-.LFB110
 28420 204d 01       		.uleb128 0x1
 28421 204e 9C       		.byte	0x9c
 28422 204f 70200000 		.4byte	0x2070
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 615


 28423 2053 22       		.uleb128 0x22
 28424 2054 8A050000 		.4byte	.LASF227
 28425 2058 01       		.byte	0x1
 28426 2059 030F     		.2byte	0xf03
 28427 205b E50B0000 		.4byte	0xbe5
 28428 205f 02       		.uleb128 0x2
 28429 2060 91       		.byte	0x91
 28430 2061 68       		.sleb128 -24
 28431 2062 25       		.uleb128 0x25
 28432 2063 6900     		.ascii	"i\000"
 28433 2065 01       		.byte	0x1
 28434 2066 040F     		.2byte	0xf04
 28435 2068 97000000 		.4byte	0x97
 28436 206c 02       		.uleb128 0x2
 28437 206d 91       		.byte	0x91
 28438 206e 77       		.sleb128 -9
 28439 206f 00       		.byte	0
 28440 2070 26       		.uleb128 0x26
 28441 2071 54030000 		.4byte	.LASF334
 28442 2075 01       		.byte	0x1
 28443 2076 170F     		.2byte	0xf17
 28444 2078 00000000 		.4byte	.LFB111
 28445 207c C0000000 		.4byte	.LFE111-.LFB111
 28446 2080 01       		.uleb128 0x1
 28447 2081 9C       		.byte	0x9c
 28448 2082 C1200000 		.4byte	0x20c1
 28449 2086 22       		.uleb128 0x22
 28450 2087 8A050000 		.4byte	.LASF227
 28451 208b 01       		.byte	0x1
 28452 208c 1A0F     		.2byte	0xf1a
 28453 208e C1200000 		.4byte	0x20c1
 28454 2092 02       		.uleb128 0x2
 28455 2093 91       		.byte	0x91
 28456 2094 54       		.sleb128 -44
 28457 2095 25       		.uleb128 0x25
 28458 2096 6900     		.ascii	"i\000"
 28459 2098 01       		.byte	0x1
 28460 2099 1B0F     		.2byte	0xf1b
 28461 209b 97000000 		.4byte	0x97
 28462 209f 02       		.uleb128 0x2
 28463 20a0 91       		.byte	0x91
 28464 20a1 6F       		.sleb128 -17
 28465 20a2 25       		.uleb128 0x25
 28466 20a3 69647800 		.ascii	"idx\000"
 28467 20a7 01       		.byte	0x1
 28468 20a8 1B0F     		.2byte	0xf1b
 28469 20aa 97000000 		.4byte	0x97
 28470 20ae 02       		.uleb128 0x2
 28471 20af 91       		.byte	0x91
 28472 20b0 6E       		.sleb128 -18
 28473 20b1 22       		.uleb128 0x22
 28474 20b2 F0100000 		.4byte	.LASF233
 28475 20b6 01       		.byte	0x1
 28476 20b7 1C0F     		.2byte	0xf1c
 28477 20b9 C7000000 		.4byte	0xc7
 28478 20bd 02       		.uleb128 0x2
 28479 20be 91       		.byte	0x91
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 616


 28480 20bf 52       		.sleb128 -46
 28481 20c0 00       		.byte	0
 28482 20c1 09       		.uleb128 0x9
 28483 20c2 97000000 		.4byte	0x97
 28484 20c6 D1200000 		.4byte	0x20d1
 28485 20ca 0A       		.uleb128 0xa
 28486 20cb 18010000 		.4byte	0x118
 28487 20cf 19       		.byte	0x19
 28488 20d0 00       		.byte	0
 28489 20d1 2A       		.uleb128 0x2a
 28490 20d2 BD000000 		.4byte	.LASF335
 28491 20d6 01       		.byte	0x1
 28492 20d7 370F     		.2byte	0xf37
 28493 20d9 00000000 		.4byte	.LFB112
 28494 20dd 12000000 		.4byte	.LFE112-.LFB112
 28495 20e1 01       		.uleb128 0x1
 28496 20e2 9C       		.byte	0x9c
 28497 20e3 F7200000 		.4byte	0x20f7
 28498 20e7 24       		.uleb128 0x24
 28499 20e8 40060000 		.4byte	.LASF336
 28500 20ec 01       		.byte	0x1
 28501 20ed 370F     		.2byte	0xf37
 28502 20ef 73000000 		.4byte	0x73
 28503 20f3 02       		.uleb128 0x2
 28504 20f4 91       		.byte	0x91
 28505 20f5 74       		.sleb128 -12
 28506 20f6 00       		.byte	0
 28507 20f7 2A       		.uleb128 0x2a
 28508 20f8 31070000 		.4byte	.LASF337
 28509 20fc 01       		.byte	0x1
 28510 20fd 850F     		.2byte	0xf85
 28511 20ff 00000000 		.4byte	.LFB113
 28512 2103 12000000 		.4byte	.LFE113-.LFB113
 28513 2107 01       		.uleb128 0x1
 28514 2108 9C       		.byte	0x9c
 28515 2109 1D210000 		.4byte	0x211d
 28516 210d 24       		.uleb128 0x24
 28517 210e 40060000 		.4byte	.LASF336
 28518 2112 01       		.byte	0x1
 28519 2113 850F     		.2byte	0xf85
 28520 2115 73000000 		.4byte	0x73
 28521 2119 02       		.uleb128 0x2
 28522 211a 91       		.byte	0x91
 28523 211b 74       		.sleb128 -12
 28524 211c 00       		.byte	0
 28525 211d 2A       		.uleb128 0x2a
 28526 211e DF0C0000 		.4byte	.LASF338
 28527 2122 01       		.byte	0x1
 28528 2123 0510     		.2byte	0x1005
 28529 2125 00000000 		.4byte	.LFB114
 28530 2129 1A000000 		.4byte	.LFE114-.LFB114
 28531 212d 01       		.uleb128 0x1
 28532 212e 9C       		.byte	0x9c
 28533 212f 52210000 		.4byte	0x2152
 28534 2133 24       		.uleb128 0x24
 28535 2134 BF020000 		.4byte	.LASF339
 28536 2138 01       		.byte	0x1
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 617


 28537 2139 0510     		.2byte	0x1005
 28538 213b 97000000 		.4byte	0x97
 28539 213f 02       		.uleb128 0x2
 28540 2140 91       		.byte	0x91
 28541 2141 77       		.sleb128 -9
 28542 2142 24       		.uleb128 0x24
 28543 2143 410A0000 		.4byte	.LASF180
 28544 2147 01       		.byte	0x1
 28545 2148 0510     		.2byte	0x1005
 28546 214a 97000000 		.4byte	0x97
 28547 214e 02       		.uleb128 0x2
 28548 214f 91       		.byte	0x91
 28549 2150 76       		.sleb128 -10
 28550 2151 00       		.byte	0
 28551 2152 30       		.uleb128 0x30
 28552 2153 71000000 		.4byte	.LASF341
 28553 2157 01       		.byte	0x1
 28554 2158 2F10     		.2byte	0x102f
 28555 215a 00000000 		.4byte	.LFB115
 28556 215e 0C000000 		.4byte	.LFE115-.LFB115
 28557 2162 01       		.uleb128 0x1
 28558 2163 9C       		.byte	0x9c
 28559 2164 30       		.uleb128 0x30
 28560 2165 B9050000 		.4byte	.LASF342
 28561 2169 01       		.byte	0x1
 28562 216a 4510     		.2byte	0x1045
 28563 216c 00000000 		.4byte	.LFB116
 28564 2170 0C000000 		.4byte	.LFE116-.LFB116
 28565 2174 01       		.uleb128 0x1
 28566 2175 9C       		.byte	0x9c
 28567 2176 31       		.uleb128 0x31
 28568 2177 2D110000 		.4byte	.LASF343
 28569 217b 09       		.byte	0x9
 28570 217c 1207     		.2byte	0x712
 28571 217e 82210000 		.4byte	0x2182
 28572 2182 06       		.uleb128 0x6
 28573 2183 81000000 		.4byte	0x81
 28574 2187 09       		.uleb128 0x9
 28575 2188 1C030000 		.4byte	0x31c
 28576 218c 97210000 		.4byte	0x2197
 28577 2190 0A       		.uleb128 0xa
 28578 2191 18010000 		.4byte	0x118
 28579 2195 01       		.byte	0x1
 28580 2196 00       		.byte	0
 28581 2197 31       		.uleb128 0x31
 28582 2198 35130000 		.4byte	.LASF344
 28583 219c 08       		.byte	0x8
 28584 219d 1802     		.2byte	0x218
 28585 219f 87210000 		.4byte	0x2187
 28586 21a3 31       		.uleb128 0x31
 28587 21a4 4E040000 		.4byte	.LASF345
 28588 21a8 08       		.byte	0x8
 28589 21a9 1802     		.2byte	0x218
 28590 21ab 87210000 		.4byte	0x2187
 28591 21af 31       		.uleb128 0x31
 28592 21b0 980C0000 		.4byte	.LASF346
 28593 21b4 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 618


 28594 21b5 1802     		.2byte	0x218
 28595 21b7 87210000 		.4byte	0x2187
 28596 21bb 09       		.uleb128 0x9
 28597 21bc 59030000 		.4byte	0x359
 28598 21c0 CB210000 		.4byte	0x21cb
 28599 21c4 0A       		.uleb128 0xa
 28600 21c5 18010000 		.4byte	0x118
 28601 21c9 01       		.byte	0x1
 28602 21ca 00       		.byte	0
 28603 21cb 31       		.uleb128 0x31
 28604 21cc 50060000 		.4byte	.LASF347
 28605 21d0 08       		.byte	0x8
 28606 21d1 1902     		.2byte	0x219
 28607 21d3 BB210000 		.4byte	0x21bb
 28608 21d7 31       		.uleb128 0x31
 28609 21d8 88130000 		.4byte	.LASF348
 28610 21dc 08       		.byte	0x8
 28611 21dd 1902     		.2byte	0x219
 28612 21df BB210000 		.4byte	0x21bb
 28613 21e3 31       		.uleb128 0x31
 28614 21e4 FF120000 		.4byte	.LASF349
 28615 21e8 08       		.byte	0x8
 28616 21e9 1A02     		.2byte	0x21a
 28617 21eb DA030000 		.4byte	0x3da
 28618 21ef 31       		.uleb128 0x31
 28619 21f0 EC0F0000 		.4byte	.LASF350
 28620 21f4 08       		.byte	0x8
 28621 21f5 1A02     		.2byte	0x21a
 28622 21f7 DA030000 		.4byte	0x3da
 28623 21fb 31       		.uleb128 0x31
 28624 21fc A20F0000 		.4byte	.LASF351
 28625 2200 08       		.byte	0x8
 28626 2201 1B02     		.2byte	0x21b
 28627 2203 2B040000 		.4byte	0x42b
 28628 2207 31       		.uleb128 0x31
 28629 2208 8C000000 		.4byte	.LASF352
 28630 220c 08       		.byte	0x8
 28631 220d 1C02     		.2byte	0x21c
 28632 220f 44040000 		.4byte	0x444
 28633 2213 31       		.uleb128 0x31
 28634 2214 D10F0000 		.4byte	.LASF353
 28635 2218 08       		.byte	0x8
 28636 2219 1D02     		.2byte	0x21d
 28637 221b 000B0000 		.4byte	0xb00
 28638 221f 31       		.uleb128 0x31
 28639 2220 9D0A0000 		.4byte	.LASF354
 28640 2224 08       		.byte	0x8
 28641 2225 1D02     		.2byte	0x21d
 28642 2227 000B0000 		.4byte	0xb00
 28643 222b 31       		.uleb128 0x31
 28644 222c A6090000 		.4byte	.LASF355
 28645 2230 08       		.byte	0x8
 28646 2231 1E02     		.2byte	0x21e
 28647 2233 B10C0000 		.4byte	0xcb1
 28648 2237 31       		.uleb128 0x31
 28649 2238 9C020000 		.4byte	.LASF356
 28650 223c 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 619


 28651 223d 2302     		.2byte	0x223
 28652 223f A3000000 		.4byte	0xa3
 28653 2243 31       		.uleb128 0x31
 28654 2244 D40D0000 		.4byte	.LASF357
 28655 2248 08       		.byte	0x8
 28656 2249 2402     		.2byte	0x224
 28657 224b A3000000 		.4byte	0xa3
 28658 224f 31       		.uleb128 0x31
 28659 2250 060E0000 		.4byte	.LASF358
 28660 2254 08       		.byte	0x8
 28661 2255 2702     		.2byte	0x227
 28662 2257 0B040000 		.4byte	0x40b
 28663 225b 31       		.uleb128 0x31
 28664 225c 06120000 		.4byte	.LASF359
 28665 2260 08       		.byte	0x8
 28666 2261 2802     		.2byte	0x228
 28667 2263 7A080000 		.4byte	0x87a
 28668 2267 31       		.uleb128 0x31
 28669 2268 4D110000 		.4byte	.LASF360
 28670 226c 08       		.byte	0x8
 28671 226d 2B02     		.2byte	0x22b
 28672 226f 0B040000 		.4byte	0x40b
 28673 2273 31       		.uleb128 0x31
 28674 2274 4A0A0000 		.4byte	.LASF361
 28675 2278 08       		.byte	0x8
 28676 2279 3402     		.2byte	0x234
 28677 227b 97000000 		.4byte	0x97
 28678 227f 31       		.uleb128 0x31
 28679 2280 16040000 		.4byte	.LASF362
 28680 2284 08       		.byte	0x8
 28681 2285 3602     		.2byte	0x236
 28682 2287 97000000 		.4byte	0x97
 28683 228b 31       		.uleb128 0x31
 28684 228c FB090000 		.4byte	.LASF363
 28685 2290 08       		.byte	0x8
 28686 2291 3D02     		.2byte	0x23d
 28687 2293 97000000 		.4byte	0x97
 28688 2297 31       		.uleb128 0x31
 28689 2298 21070000 		.4byte	.LASF364
 28690 229c 08       		.byte	0x8
 28691 229d 3E02     		.2byte	0x23e
 28692 229f 97000000 		.4byte	0x97
 28693 22a3 09       		.uleb128 0x9
 28694 22a4 C7000000 		.4byte	0xc7
 28695 22a8 B3220000 		.4byte	0x22b3
 28696 22ac 0A       		.uleb128 0xa
 28697 22ad 18010000 		.4byte	0x118
 28698 22b1 0B       		.byte	0xb
 28699 22b2 00       		.byte	0
 28700 22b3 31       		.uleb128 0x31
 28701 22b4 0E040000 		.4byte	.LASF365
 28702 22b8 08       		.byte	0x8
 28703 22b9 4102     		.2byte	0x241
 28704 22bb A3220000 		.4byte	0x22a3
 28705 22bf 31       		.uleb128 0x31
 28706 22c0 41130000 		.4byte	.LASF366
 28707 22c4 08       		.byte	0x8
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 620


 28708 22c5 4202     		.2byte	0x242
 28709 22c7 97000000 		.4byte	0x97
 28710 22cb 09       		.uleb128 0x9
 28711 22cc AF000000 		.4byte	0xaf
 28712 22d0 DB220000 		.4byte	0x22db
 28713 22d4 0A       		.uleb128 0xa
 28714 22d5 18010000 		.4byte	0x118
 28715 22d9 04       		.byte	0x4
 28716 22da 00       		.byte	0
 28717 22db 31       		.uleb128 0x31
 28718 22dc 70060000 		.4byte	.LASF367
 28719 22e0 08       		.byte	0x8
 28720 22e1 4802     		.2byte	0x248
 28721 22e3 CB220000 		.4byte	0x22cb
 28722 22e7 31       		.uleb128 0x31
 28723 22e8 CD0E0000 		.4byte	.LASF368
 28724 22ec 08       		.byte	0x8
 28725 22ed 4902     		.2byte	0x249
 28726 22ef 7A080000 		.4byte	0x87a
 28727 22f3 09       		.uleb128 0x9
 28728 22f4 A3000000 		.4byte	0xa3
 28729 22f8 09230000 		.4byte	0x2309
 28730 22fc 0A       		.uleb128 0xa
 28731 22fd 18010000 		.4byte	0x118
 28732 2301 01       		.byte	0x1
 28733 2302 0A       		.uleb128 0xa
 28734 2303 18010000 		.4byte	0x118
 28735 2307 04       		.byte	0x4
 28736 2308 00       		.byte	0
 28737 2309 31       		.uleb128 0x31
 28738 230a 2F120000 		.4byte	.LASF369
 28739 230e 08       		.byte	0x8
 28740 230f 4A02     		.2byte	0x24a
 28741 2311 F3220000 		.4byte	0x22f3
 28742 2315 31       		.uleb128 0x31
 28743 2316 A0050000 		.4byte	.LASF370
 28744 231a 08       		.byte	0x8
 28745 231b 5102     		.2byte	0x251
 28746 231d 16030000 		.4byte	0x316
 28747 2321 31       		.uleb128 0x31
 28748 2322 77100000 		.4byte	.LASF371
 28749 2326 08       		.byte	0x8
 28750 2327 5602     		.2byte	0x256
 28751 2329 97000000 		.4byte	0x97
 28752 232d 31       		.uleb128 0x31
 28753 232e 6C120000 		.4byte	.LASF372
 28754 2332 08       		.byte	0x8
 28755 2333 5702     		.2byte	0x257
 28756 2335 EB070000 		.4byte	0x7eb
 28757 2339 31       		.uleb128 0x31
 28758 233a 1E110000 		.4byte	.LASF373
 28759 233e 08       		.byte	0x8
 28760 233f 5802     		.2byte	0x258
 28761 2341 73000000 		.4byte	0x73
 28762 2345 09       		.uleb128 0x9
 28763 2346 73000000 		.4byte	0x73
 28764 234a 55230000 		.4byte	0x2355
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 621


 28765 234e 0A       		.uleb128 0xa
 28766 234f 18010000 		.4byte	0x118
 28767 2353 04       		.byte	0x4
 28768 2354 00       		.byte	0
 28769 2355 31       		.uleb128 0x31
 28770 2356 E2030000 		.4byte	.LASF374
 28771 235a 08       		.byte	0x8
 28772 235b 5902     		.2byte	0x259
 28773 235d 45230000 		.4byte	0x2345
 28774 2361 09       		.uleb128 0x9
 28775 2362 350C0000 		.4byte	0xc35
 28776 2366 71230000 		.4byte	0x2371
 28777 236a 0A       		.uleb128 0xa
 28778 236b 18010000 		.4byte	0x118
 28779 236f 04       		.byte	0x4
 28780 2370 00       		.byte	0
 28781 2371 31       		.uleb128 0x31
 28782 2372 E0040000 		.4byte	.LASF375
 28783 2376 08       		.byte	0x8
 28784 2377 5A02     		.2byte	0x25a
 28785 2379 61230000 		.4byte	0x2361
 28786 237d 09       		.uleb128 0x9
 28787 237e 97000000 		.4byte	0x97
 28788 2382 93230000 		.4byte	0x2393
 28789 2386 0A       		.uleb128 0xa
 28790 2387 18010000 		.4byte	0x118
 28791 238b 04       		.byte	0x4
 28792 238c 0A       		.uleb128 0xa
 28793 238d 18010000 		.4byte	0x118
 28794 2391 02       		.byte	0x2
 28795 2392 00       		.byte	0
 28796 2393 31       		.uleb128 0x31
 28797 2394 FD0A0000 		.4byte	.LASF376
 28798 2398 08       		.byte	0x8
 28799 2399 5E02     		.2byte	0x25e
 28800 239b 7D230000 		.4byte	0x237d
 28801 239f 31       		.uleb128 0x31
 28802 23a0 67130000 		.4byte	.LASF377
 28803 23a4 08       		.byte	0x8
 28804 23a5 6302     		.2byte	0x263
 28805 23a7 97000000 		.4byte	0x97
 28806 23ab 32       		.uleb128 0x32
 28807 23ac FA100000 		.4byte	.LASF378
 28808 23b0 01       		.byte	0x1
 28809 23b1 33       		.byte	0x33
 28810 23b2 BC230000 		.4byte	0x23bc
 28811 23b6 05       		.uleb128 0x5
 28812 23b7 03       		.byte	0x3
 28813 23b8 00000000 		.4byte	EEPROM_ADDR
 28814 23bc 07       		.uleb128 0x7
 28815 23bd 04       		.byte	0x4
 28816 23be 00010000 		.4byte	0x100
 28817 23c2 00       		.byte	0
 28818              		.section	.debug_abbrev,"",%progbits
 28819              	.Ldebug_abbrev0:
 28820 0000 01       		.uleb128 0x1
 28821 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 622


 28822 0002 01       		.byte	0x1
 28823 0003 25       		.uleb128 0x25
 28824 0004 0E       		.uleb128 0xe
 28825 0005 13       		.uleb128 0x13
 28826 0006 0B       		.uleb128 0xb
 28827 0007 03       		.uleb128 0x3
 28828 0008 0E       		.uleb128 0xe
 28829 0009 1B       		.uleb128 0x1b
 28830 000a 0E       		.uleb128 0xe
 28831 000b 55       		.uleb128 0x55
 28832 000c 17       		.uleb128 0x17
 28833 000d 11       		.uleb128 0x11
 28834 000e 01       		.uleb128 0x1
 28835 000f 10       		.uleb128 0x10
 28836 0010 17       		.uleb128 0x17
 28837 0011 00       		.byte	0
 28838 0012 00       		.byte	0
 28839 0013 02       		.uleb128 0x2
 28840 0014 24       		.uleb128 0x24
 28841 0015 00       		.byte	0
 28842 0016 0B       		.uleb128 0xb
 28843 0017 0B       		.uleb128 0xb
 28844 0018 3E       		.uleb128 0x3e
 28845 0019 0B       		.uleb128 0xb
 28846 001a 03       		.uleb128 0x3
 28847 001b 0E       		.uleb128 0xe
 28848 001c 00       		.byte	0
 28849 001d 00       		.byte	0
 28850 001e 03       		.uleb128 0x3
 28851 001f 16       		.uleb128 0x16
 28852 0020 00       		.byte	0
 28853 0021 03       		.uleb128 0x3
 28854 0022 0E       		.uleb128 0xe
 28855 0023 3A       		.uleb128 0x3a
 28856 0024 0B       		.uleb128 0xb
 28857 0025 3B       		.uleb128 0x3b
 28858 0026 0B       		.uleb128 0xb
 28859 0027 49       		.uleb128 0x49
 28860 0028 13       		.uleb128 0x13
 28861 0029 00       		.byte	0
 28862 002a 00       		.byte	0
 28863 002b 04       		.uleb128 0x4
 28864 002c 24       		.uleb128 0x24
 28865 002d 00       		.byte	0
 28866 002e 0B       		.uleb128 0xb
 28867 002f 0B       		.uleb128 0xb
 28868 0030 3E       		.uleb128 0x3e
 28869 0031 0B       		.uleb128 0xb
 28870 0032 03       		.uleb128 0x3
 28871 0033 08       		.uleb128 0x8
 28872 0034 00       		.byte	0
 28873 0035 00       		.byte	0
 28874 0036 05       		.uleb128 0x5
 28875 0037 16       		.uleb128 0x16
 28876 0038 00       		.byte	0
 28877 0039 03       		.uleb128 0x3
 28878 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 623


 28879 003b 3A       		.uleb128 0x3a
 28880 003c 0B       		.uleb128 0xb
 28881 003d 3B       		.uleb128 0x3b
 28882 003e 05       		.uleb128 0x5
 28883 003f 49       		.uleb128 0x49
 28884 0040 13       		.uleb128 0x13
 28885 0041 00       		.byte	0
 28886 0042 00       		.byte	0
 28887 0043 06       		.uleb128 0x6
 28888 0044 35       		.uleb128 0x35
 28889 0045 00       		.byte	0
 28890 0046 49       		.uleb128 0x49
 28891 0047 13       		.uleb128 0x13
 28892 0048 00       		.byte	0
 28893 0049 00       		.byte	0
 28894 004a 07       		.uleb128 0x7
 28895 004b 0F       		.uleb128 0xf
 28896 004c 00       		.byte	0
 28897 004d 0B       		.uleb128 0xb
 28898 004e 0B       		.uleb128 0xb
 28899 004f 49       		.uleb128 0x49
 28900 0050 13       		.uleb128 0x13
 28901 0051 00       		.byte	0
 28902 0052 00       		.byte	0
 28903 0053 08       		.uleb128 0x8
 28904 0054 26       		.uleb128 0x26
 28905 0055 00       		.byte	0
 28906 0056 49       		.uleb128 0x49
 28907 0057 13       		.uleb128 0x13
 28908 0058 00       		.byte	0
 28909 0059 00       		.byte	0
 28910 005a 09       		.uleb128 0x9
 28911 005b 01       		.uleb128 0x1
 28912 005c 01       		.byte	0x1
 28913 005d 49       		.uleb128 0x49
 28914 005e 13       		.uleb128 0x13
 28915 005f 01       		.uleb128 0x1
 28916 0060 13       		.uleb128 0x13
 28917 0061 00       		.byte	0
 28918 0062 00       		.byte	0
 28919 0063 0A       		.uleb128 0xa
 28920 0064 21       		.uleb128 0x21
 28921 0065 00       		.byte	0
 28922 0066 49       		.uleb128 0x49
 28923 0067 13       		.uleb128 0x13
 28924 0068 2F       		.uleb128 0x2f
 28925 0069 0B       		.uleb128 0xb
 28926 006a 00       		.byte	0
 28927 006b 00       		.byte	0
 28928 006c 0B       		.uleb128 0xb
 28929 006d 04       		.uleb128 0x4
 28930 006e 01       		.byte	0x1
 28931 006f 03       		.uleb128 0x3
 28932 0070 0E       		.uleb128 0xe
 28933 0071 0B       		.uleb128 0xb
 28934 0072 0B       		.uleb128 0xb
 28935 0073 49       		.uleb128 0x49
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 624


 28936 0074 13       		.uleb128 0x13
 28937 0075 3A       		.uleb128 0x3a
 28938 0076 0B       		.uleb128 0xb
 28939 0077 3B       		.uleb128 0x3b
 28940 0078 0B       		.uleb128 0xb
 28941 0079 01       		.uleb128 0x1
 28942 007a 13       		.uleb128 0x13
 28943 007b 00       		.byte	0
 28944 007c 00       		.byte	0
 28945 007d 0C       		.uleb128 0xc
 28946 007e 28       		.uleb128 0x28
 28947 007f 00       		.byte	0
 28948 0080 03       		.uleb128 0x3
 28949 0081 0E       		.uleb128 0xe
 28950 0082 1C       		.uleb128 0x1c
 28951 0083 0B       		.uleb128 0xb
 28952 0084 00       		.byte	0
 28953 0085 00       		.byte	0
 28954 0086 0D       		.uleb128 0xd
 28955 0087 13       		.uleb128 0x13
 28956 0088 00       		.byte	0
 28957 0089 03       		.uleb128 0x3
 28958 008a 0E       		.uleb128 0xe
 28959 008b 3C       		.uleb128 0x3c
 28960 008c 19       		.uleb128 0x19
 28961 008d 00       		.byte	0
 28962 008e 00       		.byte	0
 28963 008f 0E       		.uleb128 0xe
 28964 0090 13       		.uleb128 0x13
 28965 0091 01       		.byte	0x1
 28966 0092 03       		.uleb128 0x3
 28967 0093 0E       		.uleb128 0xe
 28968 0094 0B       		.uleb128 0xb
 28969 0095 0B       		.uleb128 0xb
 28970 0096 3A       		.uleb128 0x3a
 28971 0097 0B       		.uleb128 0xb
 28972 0098 3B       		.uleb128 0x3b
 28973 0099 0B       		.uleb128 0xb
 28974 009a 01       		.uleb128 0x1
 28975 009b 13       		.uleb128 0x13
 28976 009c 00       		.byte	0
 28977 009d 00       		.byte	0
 28978 009e 0F       		.uleb128 0xf
 28979 009f 0D       		.uleb128 0xd
 28980 00a0 00       		.byte	0
 28981 00a1 03       		.uleb128 0x3
 28982 00a2 08       		.uleb128 0x8
 28983 00a3 3A       		.uleb128 0x3a
 28984 00a4 0B       		.uleb128 0xb
 28985 00a5 3B       		.uleb128 0x3b
 28986 00a6 0B       		.uleb128 0xb
 28987 00a7 49       		.uleb128 0x49
 28988 00a8 13       		.uleb128 0x13
 28989 00a9 38       		.uleb128 0x38
 28990 00aa 0B       		.uleb128 0xb
 28991 00ab 00       		.byte	0
 28992 00ac 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 625


 28993 00ad 10       		.uleb128 0x10
 28994 00ae 0D       		.uleb128 0xd
 28995 00af 00       		.byte	0
 28996 00b0 03       		.uleb128 0x3
 28997 00b1 0E       		.uleb128 0xe
 28998 00b2 3A       		.uleb128 0x3a
 28999 00b3 0B       		.uleb128 0xb
 29000 00b4 3B       		.uleb128 0x3b
 29001 00b5 0B       		.uleb128 0xb
 29002 00b6 49       		.uleb128 0x49
 29003 00b7 13       		.uleb128 0x13
 29004 00b8 38       		.uleb128 0x38
 29005 00b9 0B       		.uleb128 0xb
 29006 00ba 00       		.byte	0
 29007 00bb 00       		.byte	0
 29008 00bc 11       		.uleb128 0x11
 29009 00bd 13       		.uleb128 0x13
 29010 00be 01       		.byte	0x1
 29011 00bf 03       		.uleb128 0x3
 29012 00c0 0E       		.uleb128 0xe
 29013 00c1 0B       		.uleb128 0xb
 29014 00c2 0B       		.uleb128 0xb
 29015 00c3 3A       		.uleb128 0x3a
 29016 00c4 0B       		.uleb128 0xb
 29017 00c5 3B       		.uleb128 0x3b
 29018 00c6 05       		.uleb128 0x5
 29019 00c7 01       		.uleb128 0x1
 29020 00c8 13       		.uleb128 0x13
 29021 00c9 00       		.byte	0
 29022 00ca 00       		.byte	0
 29023 00cb 12       		.uleb128 0x12
 29024 00cc 0D       		.uleb128 0xd
 29025 00cd 00       		.byte	0
 29026 00ce 03       		.uleb128 0x3
 29027 00cf 0E       		.uleb128 0xe
 29028 00d0 3A       		.uleb128 0x3a
 29029 00d1 0B       		.uleb128 0xb
 29030 00d2 3B       		.uleb128 0x3b
 29031 00d3 05       		.uleb128 0x5
 29032 00d4 49       		.uleb128 0x49
 29033 00d5 13       		.uleb128 0x13
 29034 00d6 38       		.uleb128 0x38
 29035 00d7 0B       		.uleb128 0xb
 29036 00d8 00       		.byte	0
 29037 00d9 00       		.byte	0
 29038 00da 13       		.uleb128 0x13
 29039 00db 0D       		.uleb128 0xd
 29040 00dc 00       		.byte	0
 29041 00dd 03       		.uleb128 0x3
 29042 00de 08       		.uleb128 0x8
 29043 00df 3A       		.uleb128 0x3a
 29044 00e0 0B       		.uleb128 0xb
 29045 00e1 3B       		.uleb128 0x3b
 29046 00e2 05       		.uleb128 0x5
 29047 00e3 49       		.uleb128 0x49
 29048 00e4 13       		.uleb128 0x13
 29049 00e5 38       		.uleb128 0x38
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 626


 29050 00e6 0B       		.uleb128 0xb
 29051 00e7 00       		.byte	0
 29052 00e8 00       		.byte	0
 29053 00e9 14       		.uleb128 0x14
 29054 00ea 13       		.uleb128 0x13
 29055 00eb 01       		.byte	0x1
 29056 00ec 03       		.uleb128 0x3
 29057 00ed 0E       		.uleb128 0xe
 29058 00ee 0B       		.uleb128 0xb
 29059 00ef 05       		.uleb128 0x5
 29060 00f0 3A       		.uleb128 0x3a
 29061 00f1 0B       		.uleb128 0xb
 29062 00f2 3B       		.uleb128 0x3b
 29063 00f3 05       		.uleb128 0x5
 29064 00f4 01       		.uleb128 0x1
 29065 00f5 13       		.uleb128 0x13
 29066 00f6 00       		.byte	0
 29067 00f7 00       		.byte	0
 29068 00f8 15       		.uleb128 0x15
 29069 00f9 0D       		.uleb128 0xd
 29070 00fa 00       		.byte	0
 29071 00fb 03       		.uleb128 0x3
 29072 00fc 08       		.uleb128 0x8
 29073 00fd 3A       		.uleb128 0x3a
 29074 00fe 0B       		.uleb128 0xb
 29075 00ff 3B       		.uleb128 0x3b
 29076 0100 05       		.uleb128 0x5
 29077 0101 49       		.uleb128 0x49
 29078 0102 13       		.uleb128 0x13
 29079 0103 38       		.uleb128 0x38
 29080 0104 05       		.uleb128 0x5
 29081 0105 00       		.byte	0
 29082 0106 00       		.byte	0
 29083 0107 16       		.uleb128 0x16
 29084 0108 0D       		.uleb128 0xd
 29085 0109 00       		.byte	0
 29086 010a 03       		.uleb128 0x3
 29087 010b 0E       		.uleb128 0xe
 29088 010c 3A       		.uleb128 0x3a
 29089 010d 0B       		.uleb128 0xb
 29090 010e 3B       		.uleb128 0x3b
 29091 010f 05       		.uleb128 0x5
 29092 0110 49       		.uleb128 0x49
 29093 0111 13       		.uleb128 0x13
 29094 0112 38       		.uleb128 0x38
 29095 0113 05       		.uleb128 0x5
 29096 0114 00       		.byte	0
 29097 0115 00       		.byte	0
 29098 0116 17       		.uleb128 0x17
 29099 0117 2E       		.uleb128 0x2e
 29100 0118 01       		.byte	0x1
 29101 0119 03       		.uleb128 0x3
 29102 011a 0E       		.uleb128 0xe
 29103 011b 3A       		.uleb128 0x3a
 29104 011c 0B       		.uleb128 0xb
 29105 011d 3B       		.uleb128 0x3b
 29106 011e 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 627


 29107 011f 27       		.uleb128 0x27
 29108 0120 19       		.uleb128 0x19
 29109 0121 49       		.uleb128 0x49
 29110 0122 13       		.uleb128 0x13
 29111 0123 20       		.uleb128 0x20
 29112 0124 0B       		.uleb128 0xb
 29113 0125 01       		.uleb128 0x1
 29114 0126 13       		.uleb128 0x13
 29115 0127 00       		.byte	0
 29116 0128 00       		.byte	0
 29117 0129 18       		.uleb128 0x18
 29118 012a 05       		.uleb128 0x5
 29119 012b 00       		.byte	0
 29120 012c 03       		.uleb128 0x3
 29121 012d 0E       		.uleb128 0xe
 29122 012e 3A       		.uleb128 0x3a
 29123 012f 0B       		.uleb128 0xb
 29124 0130 3B       		.uleb128 0x3b
 29125 0131 05       		.uleb128 0x5
 29126 0132 49       		.uleb128 0x49
 29127 0133 13       		.uleb128 0x13
 29128 0134 00       		.byte	0
 29129 0135 00       		.byte	0
 29130 0136 19       		.uleb128 0x19
 29131 0137 34       		.uleb128 0x34
 29132 0138 00       		.byte	0
 29133 0139 03       		.uleb128 0x3
 29134 013a 0E       		.uleb128 0xe
 29135 013b 3A       		.uleb128 0x3a
 29136 013c 0B       		.uleb128 0xb
 29137 013d 3B       		.uleb128 0x3b
 29138 013e 05       		.uleb128 0x5
 29139 013f 49       		.uleb128 0x49
 29140 0140 13       		.uleb128 0x13
 29141 0141 00       		.byte	0
 29142 0142 00       		.byte	0
 29143 0143 1A       		.uleb128 0x1a
 29144 0144 2E       		.uleb128 0x2e
 29145 0145 01       		.byte	0x1
 29146 0146 3F       		.uleb128 0x3f
 29147 0147 19       		.uleb128 0x19
 29148 0148 03       		.uleb128 0x3
 29149 0149 0E       		.uleb128 0xe
 29150 014a 3A       		.uleb128 0x3a
 29151 014b 0B       		.uleb128 0xb
 29152 014c 3B       		.uleb128 0x3b
 29153 014d 0B       		.uleb128 0xb
 29154 014e 27       		.uleb128 0x27
 29155 014f 19       		.uleb128 0x19
 29156 0150 11       		.uleb128 0x11
 29157 0151 01       		.uleb128 0x1
 29158 0152 12       		.uleb128 0x12
 29159 0153 06       		.uleb128 0x6
 29160 0154 40       		.uleb128 0x40
 29161 0155 18       		.uleb128 0x18
 29162 0156 9642     		.uleb128 0x2116
 29163 0158 19       		.uleb128 0x19
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 628


 29164 0159 01       		.uleb128 0x1
 29165 015a 13       		.uleb128 0x13
 29166 015b 00       		.byte	0
 29167 015c 00       		.byte	0
 29168 015d 1B       		.uleb128 0x1b
 29169 015e 34       		.uleb128 0x34
 29170 015f 00       		.byte	0
 29171 0160 03       		.uleb128 0x3
 29172 0161 0E       		.uleb128 0xe
 29173 0162 3A       		.uleb128 0x3a
 29174 0163 0B       		.uleb128 0xb
 29175 0164 3B       		.uleb128 0x3b
 29176 0165 0B       		.uleb128 0xb
 29177 0166 49       		.uleb128 0x49
 29178 0167 13       		.uleb128 0x13
 29179 0168 02       		.uleb128 0x2
 29180 0169 18       		.uleb128 0x18
 29181 016a 00       		.byte	0
 29182 016b 00       		.byte	0
 29183 016c 1C       		.uleb128 0x1c
 29184 016d 1D       		.uleb128 0x1d
 29185 016e 01       		.byte	0x1
 29186 016f 31       		.uleb128 0x31
 29187 0170 13       		.uleb128 0x13
 29188 0171 11       		.uleb128 0x11
 29189 0172 01       		.uleb128 0x1
 29190 0173 12       		.uleb128 0x12
 29191 0174 06       		.uleb128 0x6
 29192 0175 58       		.uleb128 0x58
 29193 0176 0B       		.uleb128 0xb
 29194 0177 59       		.uleb128 0x59
 29195 0178 0B       		.uleb128 0xb
 29196 0179 01       		.uleb128 0x1
 29197 017a 13       		.uleb128 0x13
 29198 017b 00       		.byte	0
 29199 017c 00       		.byte	0
 29200 017d 1D       		.uleb128 0x1d
 29201 017e 05       		.uleb128 0x5
 29202 017f 00       		.byte	0
 29203 0180 31       		.uleb128 0x31
 29204 0181 13       		.uleb128 0x13
 29205 0182 02       		.uleb128 0x2
 29206 0183 18       		.uleb128 0x18
 29207 0184 00       		.byte	0
 29208 0185 00       		.byte	0
 29209 0186 1E       		.uleb128 0x1e
 29210 0187 0B       		.uleb128 0xb
 29211 0188 01       		.byte	0x1
 29212 0189 11       		.uleb128 0x11
 29213 018a 01       		.uleb128 0x1
 29214 018b 12       		.uleb128 0x12
 29215 018c 06       		.uleb128 0x6
 29216 018d 00       		.byte	0
 29217 018e 00       		.byte	0
 29218 018f 1F       		.uleb128 0x1f
 29219 0190 34       		.uleb128 0x34
 29220 0191 00       		.byte	0
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 629


 29221 0192 31       		.uleb128 0x31
 29222 0193 13       		.uleb128 0x13
 29223 0194 02       		.uleb128 0x2
 29224 0195 18       		.uleb128 0x18
 29225 0196 00       		.byte	0
 29226 0197 00       		.byte	0
 29227 0198 20       		.uleb128 0x20
 29228 0199 1D       		.uleb128 0x1d
 29229 019a 01       		.byte	0x1
 29230 019b 31       		.uleb128 0x31
 29231 019c 13       		.uleb128 0x13
 29232 019d 11       		.uleb128 0x11
 29233 019e 01       		.uleb128 0x1
 29234 019f 12       		.uleb128 0x12
 29235 01a0 06       		.uleb128 0x6
 29236 01a1 58       		.uleb128 0x58
 29237 01a2 0B       		.uleb128 0xb
 29238 01a3 59       		.uleb128 0x59
 29239 01a4 05       		.uleb128 0x5
 29240 01a5 00       		.byte	0
 29241 01a6 00       		.byte	0
 29242 01a7 21       		.uleb128 0x21
 29243 01a8 2E       		.uleb128 0x2e
 29244 01a9 01       		.byte	0x1
 29245 01aa 3F       		.uleb128 0x3f
 29246 01ab 19       		.uleb128 0x19
 29247 01ac 03       		.uleb128 0x3
 29248 01ad 0E       		.uleb128 0xe
 29249 01ae 3A       		.uleb128 0x3a
 29250 01af 0B       		.uleb128 0xb
 29251 01b0 3B       		.uleb128 0x3b
 29252 01b1 05       		.uleb128 0x5
 29253 01b2 27       		.uleb128 0x27
 29254 01b3 19       		.uleb128 0x19
 29255 01b4 11       		.uleb128 0x11
 29256 01b5 01       		.uleb128 0x1
 29257 01b6 12       		.uleb128 0x12
 29258 01b7 06       		.uleb128 0x6
 29259 01b8 40       		.uleb128 0x40
 29260 01b9 18       		.uleb128 0x18
 29261 01ba 9642     		.uleb128 0x2116
 29262 01bc 19       		.uleb128 0x19
 29263 01bd 01       		.uleb128 0x1
 29264 01be 13       		.uleb128 0x13
 29265 01bf 00       		.byte	0
 29266 01c0 00       		.byte	0
 29267 01c1 22       		.uleb128 0x22
 29268 01c2 34       		.uleb128 0x34
 29269 01c3 00       		.byte	0
 29270 01c4 03       		.uleb128 0x3
 29271 01c5 0E       		.uleb128 0xe
 29272 01c6 3A       		.uleb128 0x3a
 29273 01c7 0B       		.uleb128 0xb
 29274 01c8 3B       		.uleb128 0x3b
 29275 01c9 05       		.uleb128 0x5
 29276 01ca 49       		.uleb128 0x49
 29277 01cb 13       		.uleb128 0x13
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 630


 29278 01cc 02       		.uleb128 0x2
 29279 01cd 18       		.uleb128 0x18
 29280 01ce 00       		.byte	0
 29281 01cf 00       		.byte	0
 29282 01d0 23       		.uleb128 0x23
 29283 01d1 21       		.uleb128 0x21
 29284 01d2 00       		.byte	0
 29285 01d3 49       		.uleb128 0x49
 29286 01d4 13       		.uleb128 0x13
 29287 01d5 2F       		.uleb128 0x2f
 29288 01d6 05       		.uleb128 0x5
 29289 01d7 00       		.byte	0
 29290 01d8 00       		.byte	0
 29291 01d9 24       		.uleb128 0x24
 29292 01da 05       		.uleb128 0x5
 29293 01db 00       		.byte	0
 29294 01dc 03       		.uleb128 0x3
 29295 01dd 0E       		.uleb128 0xe
 29296 01de 3A       		.uleb128 0x3a
 29297 01df 0B       		.uleb128 0xb
 29298 01e0 3B       		.uleb128 0x3b
 29299 01e1 05       		.uleb128 0x5
 29300 01e2 49       		.uleb128 0x49
 29301 01e3 13       		.uleb128 0x13
 29302 01e4 02       		.uleb128 0x2
 29303 01e5 18       		.uleb128 0x18
 29304 01e6 00       		.byte	0
 29305 01e7 00       		.byte	0
 29306 01e8 25       		.uleb128 0x25
 29307 01e9 34       		.uleb128 0x34
 29308 01ea 00       		.byte	0
 29309 01eb 03       		.uleb128 0x3
 29310 01ec 08       		.uleb128 0x8
 29311 01ed 3A       		.uleb128 0x3a
 29312 01ee 0B       		.uleb128 0xb
 29313 01ef 3B       		.uleb128 0x3b
 29314 01f0 05       		.uleb128 0x5
 29315 01f1 49       		.uleb128 0x49
 29316 01f2 13       		.uleb128 0x13
 29317 01f3 02       		.uleb128 0x2
 29318 01f4 18       		.uleb128 0x18
 29319 01f5 00       		.byte	0
 29320 01f6 00       		.byte	0
 29321 01f7 26       		.uleb128 0x26
 29322 01f8 2E       		.uleb128 0x2e
 29323 01f9 01       		.byte	0x1
 29324 01fa 3F       		.uleb128 0x3f
 29325 01fb 19       		.uleb128 0x19
 29326 01fc 03       		.uleb128 0x3
 29327 01fd 0E       		.uleb128 0xe
 29328 01fe 3A       		.uleb128 0x3a
 29329 01ff 0B       		.uleb128 0xb
 29330 0200 3B       		.uleb128 0x3b
 29331 0201 05       		.uleb128 0x5
 29332 0202 11       		.uleb128 0x11
 29333 0203 01       		.uleb128 0x1
 29334 0204 12       		.uleb128 0x12
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 631


 29335 0205 06       		.uleb128 0x6
 29336 0206 40       		.uleb128 0x40
 29337 0207 18       		.uleb128 0x18
 29338 0208 9642     		.uleb128 0x2116
 29339 020a 19       		.uleb128 0x19
 29340 020b 01       		.uleb128 0x1
 29341 020c 13       		.uleb128 0x13
 29342 020d 00       		.byte	0
 29343 020e 00       		.byte	0
 29344 020f 27       		.uleb128 0x27
 29345 0210 05       		.uleb128 0x5
 29346 0211 00       		.byte	0
 29347 0212 03       		.uleb128 0x3
 29348 0213 08       		.uleb128 0x8
 29349 0214 3A       		.uleb128 0x3a
 29350 0215 0B       		.uleb128 0xb
 29351 0216 3B       		.uleb128 0x3b
 29352 0217 05       		.uleb128 0x5
 29353 0218 49       		.uleb128 0x49
 29354 0219 13       		.uleb128 0x13
 29355 021a 02       		.uleb128 0x2
 29356 021b 18       		.uleb128 0x18
 29357 021c 00       		.byte	0
 29358 021d 00       		.byte	0
 29359 021e 28       		.uleb128 0x28
 29360 021f 2E       		.uleb128 0x2e
 29361 0220 01       		.byte	0x1
 29362 0221 3F       		.uleb128 0x3f
 29363 0222 19       		.uleb128 0x19
 29364 0223 03       		.uleb128 0x3
 29365 0224 0E       		.uleb128 0xe
 29366 0225 3A       		.uleb128 0x3a
 29367 0226 0B       		.uleb128 0xb
 29368 0227 3B       		.uleb128 0x3b
 29369 0228 05       		.uleb128 0x5
 29370 0229 27       		.uleb128 0x27
 29371 022a 19       		.uleb128 0x19
 29372 022b 49       		.uleb128 0x49
 29373 022c 13       		.uleb128 0x13
 29374 022d 11       		.uleb128 0x11
 29375 022e 01       		.uleb128 0x1
 29376 022f 12       		.uleb128 0x12
 29377 0230 06       		.uleb128 0x6
 29378 0231 40       		.uleb128 0x40
 29379 0232 18       		.uleb128 0x18
 29380 0233 9742     		.uleb128 0x2117
 29381 0235 19       		.uleb128 0x19
 29382 0236 01       		.uleb128 0x1
 29383 0237 13       		.uleb128 0x13
 29384 0238 00       		.byte	0
 29385 0239 00       		.byte	0
 29386 023a 29       		.uleb128 0x29
 29387 023b 2E       		.uleb128 0x2e
 29388 023c 01       		.byte	0x1
 29389 023d 3F       		.uleb128 0x3f
 29390 023e 19       		.uleb128 0x19
 29391 023f 03       		.uleb128 0x3
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 632


 29392 0240 0E       		.uleb128 0xe
 29393 0241 3A       		.uleb128 0x3a
 29394 0242 0B       		.uleb128 0xb
 29395 0243 3B       		.uleb128 0x3b
 29396 0244 05       		.uleb128 0x5
 29397 0245 27       		.uleb128 0x27
 29398 0246 19       		.uleb128 0x19
 29399 0247 49       		.uleb128 0x49
 29400 0248 13       		.uleb128 0x13
 29401 0249 11       		.uleb128 0x11
 29402 024a 01       		.uleb128 0x1
 29403 024b 12       		.uleb128 0x12
 29404 024c 06       		.uleb128 0x6
 29405 024d 40       		.uleb128 0x40
 29406 024e 18       		.uleb128 0x18
 29407 024f 9642     		.uleb128 0x2116
 29408 0251 19       		.uleb128 0x19
 29409 0252 01       		.uleb128 0x1
 29410 0253 13       		.uleb128 0x13
 29411 0254 00       		.byte	0
 29412 0255 00       		.byte	0
 29413 0256 2A       		.uleb128 0x2a
 29414 0257 2E       		.uleb128 0x2e
 29415 0258 01       		.byte	0x1
 29416 0259 3F       		.uleb128 0x3f
 29417 025a 19       		.uleb128 0x19
 29418 025b 03       		.uleb128 0x3
 29419 025c 0E       		.uleb128 0xe
 29420 025d 3A       		.uleb128 0x3a
 29421 025e 0B       		.uleb128 0xb
 29422 025f 3B       		.uleb128 0x3b
 29423 0260 05       		.uleb128 0x5
 29424 0261 27       		.uleb128 0x27
 29425 0262 19       		.uleb128 0x19
 29426 0263 11       		.uleb128 0x11
 29427 0264 01       		.uleb128 0x1
 29428 0265 12       		.uleb128 0x12
 29429 0266 06       		.uleb128 0x6
 29430 0267 40       		.uleb128 0x40
 29431 0268 18       		.uleb128 0x18
 29432 0269 9742     		.uleb128 0x2117
 29433 026b 19       		.uleb128 0x19
 29434 026c 01       		.uleb128 0x1
 29435 026d 13       		.uleb128 0x13
 29436 026e 00       		.byte	0
 29437 026f 00       		.byte	0
 29438 0270 2B       		.uleb128 0x2b
 29439 0271 2E       		.uleb128 0x2e
 29440 0272 00       		.byte	0
 29441 0273 3F       		.uleb128 0x3f
 29442 0274 19       		.uleb128 0x19
 29443 0275 03       		.uleb128 0x3
 29444 0276 0E       		.uleb128 0xe
 29445 0277 3A       		.uleb128 0x3a
 29446 0278 0B       		.uleb128 0xb
 29447 0279 3B       		.uleb128 0x3b
 29448 027a 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 633


 29449 027b 27       		.uleb128 0x27
 29450 027c 19       		.uleb128 0x19
 29451 027d 11       		.uleb128 0x11
 29452 027e 01       		.uleb128 0x1
 29453 027f 12       		.uleb128 0x12
 29454 0280 06       		.uleb128 0x6
 29455 0281 40       		.uleb128 0x40
 29456 0282 18       		.uleb128 0x18
 29457 0283 9742     		.uleb128 0x2117
 29458 0285 19       		.uleb128 0x19
 29459 0286 00       		.byte	0
 29460 0287 00       		.byte	0
 29461 0288 2C       		.uleb128 0x2c
 29462 0289 2E       		.uleb128 0x2e
 29463 028a 01       		.byte	0x1
 29464 028b 3F       		.uleb128 0x3f
 29465 028c 19       		.uleb128 0x19
 29466 028d 03       		.uleb128 0x3
 29467 028e 0E       		.uleb128 0xe
 29468 028f 3A       		.uleb128 0x3a
 29469 0290 0B       		.uleb128 0xb
 29470 0291 3B       		.uleb128 0x3b
 29471 0292 05       		.uleb128 0x5
 29472 0293 11       		.uleb128 0x11
 29473 0294 01       		.uleb128 0x1
 29474 0295 12       		.uleb128 0x12
 29475 0296 06       		.uleb128 0x6
 29476 0297 40       		.uleb128 0x40
 29477 0298 18       		.uleb128 0x18
 29478 0299 9742     		.uleb128 0x2117
 29479 029b 19       		.uleb128 0x19
 29480 029c 01       		.uleb128 0x1
 29481 029d 13       		.uleb128 0x13
 29482 029e 00       		.byte	0
 29483 029f 00       		.byte	0
 29484 02a0 2D       		.uleb128 0x2d
 29485 02a1 0B       		.uleb128 0xb
 29486 02a2 01       		.byte	0x1
 29487 02a3 11       		.uleb128 0x11
 29488 02a4 01       		.uleb128 0x1
 29489 02a5 12       		.uleb128 0x12
 29490 02a6 06       		.uleb128 0x6
 29491 02a7 01       		.uleb128 0x1
 29492 02a8 13       		.uleb128 0x13
 29493 02a9 00       		.byte	0
 29494 02aa 00       		.byte	0
 29495 02ab 2E       		.uleb128 0x2e
 29496 02ac 2E       		.uleb128 0x2e
 29497 02ad 01       		.byte	0x1
 29498 02ae 3F       		.uleb128 0x3f
 29499 02af 19       		.uleb128 0x19
 29500 02b0 03       		.uleb128 0x3
 29501 02b1 0E       		.uleb128 0xe
 29502 02b2 3A       		.uleb128 0x3a
 29503 02b3 0B       		.uleb128 0xb
 29504 02b4 3B       		.uleb128 0x3b
 29505 02b5 05       		.uleb128 0x5
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 634


 29506 02b6 49       		.uleb128 0x49
 29507 02b7 13       		.uleb128 0x13
 29508 02b8 11       		.uleb128 0x11
 29509 02b9 01       		.uleb128 0x1
 29510 02ba 12       		.uleb128 0x12
 29511 02bb 06       		.uleb128 0x6
 29512 02bc 40       		.uleb128 0x40
 29513 02bd 18       		.uleb128 0x18
 29514 02be 9642     		.uleb128 0x2116
 29515 02c0 19       		.uleb128 0x19
 29516 02c1 01       		.uleb128 0x1
 29517 02c2 13       		.uleb128 0x13
 29518 02c3 00       		.byte	0
 29519 02c4 00       		.byte	0
 29520 02c5 2F       		.uleb128 0x2f
 29521 02c6 2E       		.uleb128 0x2e
 29522 02c7 00       		.byte	0
 29523 02c8 3F       		.uleb128 0x3f
 29524 02c9 19       		.uleb128 0x19
 29525 02ca 03       		.uleb128 0x3
 29526 02cb 0E       		.uleb128 0xe
 29527 02cc 3A       		.uleb128 0x3a
 29528 02cd 0B       		.uleb128 0xb
 29529 02ce 3B       		.uleb128 0x3b
 29530 02cf 05       		.uleb128 0x5
 29531 02d0 11       		.uleb128 0x11
 29532 02d1 01       		.uleb128 0x1
 29533 02d2 12       		.uleb128 0x12
 29534 02d3 06       		.uleb128 0x6
 29535 02d4 40       		.uleb128 0x40
 29536 02d5 18       		.uleb128 0x18
 29537 02d6 9642     		.uleb128 0x2116
 29538 02d8 19       		.uleb128 0x19
 29539 02d9 00       		.byte	0
 29540 02da 00       		.byte	0
 29541 02db 30       		.uleb128 0x30
 29542 02dc 2E       		.uleb128 0x2e
 29543 02dd 00       		.byte	0
 29544 02de 3F       		.uleb128 0x3f
 29545 02df 19       		.uleb128 0x19
 29546 02e0 03       		.uleb128 0x3
 29547 02e1 0E       		.uleb128 0xe
 29548 02e2 3A       		.uleb128 0x3a
 29549 02e3 0B       		.uleb128 0xb
 29550 02e4 3B       		.uleb128 0x3b
 29551 02e5 05       		.uleb128 0x5
 29552 02e6 11       		.uleb128 0x11
 29553 02e7 01       		.uleb128 0x1
 29554 02e8 12       		.uleb128 0x12
 29555 02e9 06       		.uleb128 0x6
 29556 02ea 40       		.uleb128 0x40
 29557 02eb 18       		.uleb128 0x18
 29558 02ec 9742     		.uleb128 0x2117
 29559 02ee 19       		.uleb128 0x19
 29560 02ef 00       		.byte	0
 29561 02f0 00       		.byte	0
 29562 02f1 31       		.uleb128 0x31
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 635


 29563 02f2 34       		.uleb128 0x34
 29564 02f3 00       		.byte	0
 29565 02f4 03       		.uleb128 0x3
 29566 02f5 0E       		.uleb128 0xe
 29567 02f6 3A       		.uleb128 0x3a
 29568 02f7 0B       		.uleb128 0xb
 29569 02f8 3B       		.uleb128 0x3b
 29570 02f9 05       		.uleb128 0x5
 29571 02fa 49       		.uleb128 0x49
 29572 02fb 13       		.uleb128 0x13
 29573 02fc 3F       		.uleb128 0x3f
 29574 02fd 19       		.uleb128 0x19
 29575 02fe 3C       		.uleb128 0x3c
 29576 02ff 19       		.uleb128 0x19
 29577 0300 00       		.byte	0
 29578 0301 00       		.byte	0
 29579 0302 32       		.uleb128 0x32
 29580 0303 34       		.uleb128 0x34
 29581 0304 00       		.byte	0
 29582 0305 03       		.uleb128 0x3
 29583 0306 0E       		.uleb128 0xe
 29584 0307 3A       		.uleb128 0x3a
 29585 0308 0B       		.uleb128 0xb
 29586 0309 3B       		.uleb128 0x3b
 29587 030a 0B       		.uleb128 0xb
 29588 030b 49       		.uleb128 0x49
 29589 030c 13       		.uleb128 0x13
 29590 030d 3F       		.uleb128 0x3f
 29591 030e 19       		.uleb128 0x19
 29592 030f 02       		.uleb128 0x2
 29593 0310 18       		.uleb128 0x18
 29594 0311 00       		.byte	0
 29595 0312 00       		.byte	0
 29596 0313 00       		.byte	0
 29597              		.section	.debug_aranges,"",%progbits
 29598 0000 BC010000 		.4byte	0x1bc
 29599 0004 0200     		.2byte	0x2
 29600 0006 00000000 		.4byte	.Ldebug_info0
 29601 000a 04       		.byte	0x4
 29602 000b 00       		.byte	0
 29603 000c 0000     		.2byte	0
 29604 000e 0000     		.2byte	0
 29605 0010 00000000 		.4byte	.LFB64
 29606 0014 E0040000 		.4byte	.LFE64-.LFB64
 29607 0018 00000000 		.4byte	.LFB65
 29608 001c 22000000 		.4byte	.LFE65-.LFB65
 29609 0020 00000000 		.4byte	.LFB66
 29610 0024 02010000 		.4byte	.LFE66-.LFB66
 29611 0028 00000000 		.4byte	.LFB67
 29612 002c E0210000 		.4byte	.LFE67-.LFB67
 29613 0030 00000000 		.4byte	.LFB68
 29614 0034 4C180000 		.4byte	.LFE68-.LFB68
 29615 0038 00000000 		.4byte	.LFB69
 29616 003c 80140000 		.4byte	.LFE69-.LFB69
 29617 0040 00000000 		.4byte	.LFB70
 29618 0044 F40D0000 		.4byte	.LFE70-.LFB70
 29619 0048 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 636


 29620 004c 84000000 		.4byte	.LFE71-.LFB71
 29621 0050 00000000 		.4byte	.LFB72
 29622 0054 6C1B0000 		.4byte	.LFE72-.LFB72
 29623 0058 00000000 		.4byte	.LFB73
 29624 005c B4030000 		.4byte	.LFE73-.LFB73
 29625 0060 00000000 		.4byte	.LFB74
 29626 0064 7C120000 		.4byte	.LFE74-.LFB74
 29627 0068 00000000 		.4byte	.LFB75
 29628 006c C8000000 		.4byte	.LFE75-.LFB75
 29629 0070 00000000 		.4byte	.LFB76
 29630 0074 30010000 		.4byte	.LFE76-.LFB76
 29631 0078 00000000 		.4byte	.LFB77
 29632 007c 74030000 		.4byte	.LFE77-.LFB77
 29633 0080 00000000 		.4byte	.LFB78
 29634 0084 84000000 		.4byte	.LFE78-.LFB78
 29635 0088 00000000 		.4byte	.LFB79
 29636 008c 88000000 		.4byte	.LFE79-.LFB79
 29637 0090 00000000 		.4byte	.LFB80
 29638 0094 A0000000 		.4byte	.LFE80-.LFB80
 29639 0098 00000000 		.4byte	.LFB81
 29640 009c 3E000000 		.4byte	.LFE81-.LFB81
 29641 00a0 00000000 		.4byte	.LFB82
 29642 00a4 2E000000 		.4byte	.LFE82-.LFB82
 29643 00a8 00000000 		.4byte	.LFB83
 29644 00ac 98000000 		.4byte	.LFE83-.LFB83
 29645 00b0 00000000 		.4byte	.LFB84
 29646 00b4 80000000 		.4byte	.LFE84-.LFB84
 29647 00b8 00000000 		.4byte	.LFB85
 29648 00bc 5C000000 		.4byte	.LFE85-.LFB85
 29649 00c0 00000000 		.4byte	.LFB86
 29650 00c4 0C060000 		.4byte	.LFE86-.LFB86
 29651 00c8 00000000 		.4byte	.LFB87
 29652 00cc 38020000 		.4byte	.LFE87-.LFB87
 29653 00d0 00000000 		.4byte	.LFB88
 29654 00d4 28000000 		.4byte	.LFE88-.LFB88
 29655 00d8 00000000 		.4byte	.LFB89
 29656 00dc 78000000 		.4byte	.LFE89-.LFB89
 29657 00e0 00000000 		.4byte	.LFB90
 29658 00e4 B0000000 		.4byte	.LFE90-.LFB90
 29659 00e8 00000000 		.4byte	.LFB91
 29660 00ec B4000000 		.4byte	.LFE91-.LFB91
 29661 00f0 00000000 		.4byte	.LFB92
 29662 00f4 B8000000 		.4byte	.LFE92-.LFB92
 29663 00f8 00000000 		.4byte	.LFB93
 29664 00fc B8000000 		.4byte	.LFE93-.LFB93
 29665 0100 00000000 		.4byte	.LFB94
 29666 0104 5C000000 		.4byte	.LFE94-.LFB94
 29667 0108 00000000 		.4byte	.LFB95
 29668 010c 44020000 		.4byte	.LFE95-.LFB95
 29669 0110 00000000 		.4byte	.LFB96
 29670 0114 BC000000 		.4byte	.LFE96-.LFB96
 29671 0118 00000000 		.4byte	.LFB97
 29672 011c 5C000000 		.4byte	.LFE97-.LFB97
 29673 0120 00000000 		.4byte	.LFB98
 29674 0124 38010000 		.4byte	.LFE98-.LFB98
 29675 0128 00000000 		.4byte	.LFB99
 29676 012c EC000000 		.4byte	.LFE99-.LFB99
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 637


 29677 0130 00000000 		.4byte	.LFB100
 29678 0134 64000000 		.4byte	.LFE100-.LFB100
 29679 0138 00000000 		.4byte	.LFB101
 29680 013c A8000000 		.4byte	.LFE101-.LFB101
 29681 0140 00000000 		.4byte	.LFB102
 29682 0144 34000000 		.4byte	.LFE102-.LFB102
 29683 0148 00000000 		.4byte	.LFB103
 29684 014c 20000000 		.4byte	.LFE103-.LFB103
 29685 0150 00000000 		.4byte	.LFB104
 29686 0154 6C000000 		.4byte	.LFE104-.LFB104
 29687 0158 00000000 		.4byte	.LFB105
 29688 015c BC010000 		.4byte	.LFE105-.LFB105
 29689 0160 00000000 		.4byte	.LFB106
 29690 0164 60000000 		.4byte	.LFE106-.LFB106
 29691 0168 00000000 		.4byte	.LFB107
 29692 016c 98050000 		.4byte	.LFE107-.LFB107
 29693 0170 00000000 		.4byte	.LFB108
 29694 0174 8C000000 		.4byte	.LFE108-.LFB108
 29695 0178 00000000 		.4byte	.LFB109
 29696 017c EC000000 		.4byte	.LFE109-.LFB109
 29697 0180 00000000 		.4byte	.LFB110
 29698 0184 5C000000 		.4byte	.LFE110-.LFB110
 29699 0188 00000000 		.4byte	.LFB111
 29700 018c C0000000 		.4byte	.LFE111-.LFB111
 29701 0190 00000000 		.4byte	.LFB112
 29702 0194 12000000 		.4byte	.LFE112-.LFB112
 29703 0198 00000000 		.4byte	.LFB113
 29704 019c 12000000 		.4byte	.LFE113-.LFB113
 29705 01a0 00000000 		.4byte	.LFB114
 29706 01a4 1A000000 		.4byte	.LFE114-.LFB114
 29707 01a8 00000000 		.4byte	.LFB115
 29708 01ac 0C000000 		.4byte	.LFE115-.LFB115
 29709 01b0 00000000 		.4byte	.LFB116
 29710 01b4 0C000000 		.4byte	.LFE116-.LFB116
 29711 01b8 00000000 		.4byte	0
 29712 01bc 00000000 		.4byte	0
 29713              		.section	.debug_ranges,"",%progbits
 29714              	.Ldebug_ranges0:
 29715 0000 00000000 		.4byte	.LFB64
 29716 0004 E0040000 		.4byte	.LFE64
 29717 0008 00000000 		.4byte	.LFB65
 29718 000c 22000000 		.4byte	.LFE65
 29719 0010 00000000 		.4byte	.LFB66
 29720 0014 02010000 		.4byte	.LFE66
 29721 0018 00000000 		.4byte	.LFB67
 29722 001c E0210000 		.4byte	.LFE67
 29723 0020 00000000 		.4byte	.LFB68
 29724 0024 4C180000 		.4byte	.LFE68
 29725 0028 00000000 		.4byte	.LFB69
 29726 002c 80140000 		.4byte	.LFE69
 29727 0030 00000000 		.4byte	.LFB70
 29728 0034 F40D0000 		.4byte	.LFE70
 29729 0038 00000000 		.4byte	.LFB71
 29730 003c 84000000 		.4byte	.LFE71
 29731 0040 00000000 		.4byte	.LFB72
 29732 0044 6C1B0000 		.4byte	.LFE72
 29733 0048 00000000 		.4byte	.LFB73
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 638


 29734 004c B4030000 		.4byte	.LFE73
 29735 0050 00000000 		.4byte	.LFB74
 29736 0054 7C120000 		.4byte	.LFE74
 29737 0058 00000000 		.4byte	.LFB75
 29738 005c C8000000 		.4byte	.LFE75
 29739 0060 00000000 		.4byte	.LFB76
 29740 0064 30010000 		.4byte	.LFE76
 29741 0068 00000000 		.4byte	.LFB77
 29742 006c 74030000 		.4byte	.LFE77
 29743 0070 00000000 		.4byte	.LFB78
 29744 0074 84000000 		.4byte	.LFE78
 29745 0078 00000000 		.4byte	.LFB79
 29746 007c 88000000 		.4byte	.LFE79
 29747 0080 00000000 		.4byte	.LFB80
 29748 0084 A0000000 		.4byte	.LFE80
 29749 0088 00000000 		.4byte	.LFB81
 29750 008c 3E000000 		.4byte	.LFE81
 29751 0090 00000000 		.4byte	.LFB82
 29752 0094 2E000000 		.4byte	.LFE82
 29753 0098 00000000 		.4byte	.LFB83
 29754 009c 98000000 		.4byte	.LFE83
 29755 00a0 00000000 		.4byte	.LFB84
 29756 00a4 80000000 		.4byte	.LFE84
 29757 00a8 00000000 		.4byte	.LFB85
 29758 00ac 5C000000 		.4byte	.LFE85
 29759 00b0 00000000 		.4byte	.LFB86
 29760 00b4 0C060000 		.4byte	.LFE86
 29761 00b8 00000000 		.4byte	.LFB87
 29762 00bc 38020000 		.4byte	.LFE87
 29763 00c0 00000000 		.4byte	.LFB88
 29764 00c4 28000000 		.4byte	.LFE88
 29765 00c8 00000000 		.4byte	.LFB89
 29766 00cc 78000000 		.4byte	.LFE89
 29767 00d0 00000000 		.4byte	.LFB90
 29768 00d4 B0000000 		.4byte	.LFE90
 29769 00d8 00000000 		.4byte	.LFB91
 29770 00dc B4000000 		.4byte	.LFE91
 29771 00e0 00000000 		.4byte	.LFB92
 29772 00e4 B8000000 		.4byte	.LFE92
 29773 00e8 00000000 		.4byte	.LFB93
 29774 00ec B8000000 		.4byte	.LFE93
 29775 00f0 00000000 		.4byte	.LFB94
 29776 00f4 5C000000 		.4byte	.LFE94
 29777 00f8 00000000 		.4byte	.LFB95
 29778 00fc 44020000 		.4byte	.LFE95
 29779 0100 00000000 		.4byte	.LFB96
 29780 0104 BC000000 		.4byte	.LFE96
 29781 0108 00000000 		.4byte	.LFB97
 29782 010c 5C000000 		.4byte	.LFE97
 29783 0110 00000000 		.4byte	.LFB98
 29784 0114 38010000 		.4byte	.LFE98
 29785 0118 00000000 		.4byte	.LFB99
 29786 011c EC000000 		.4byte	.LFE99
 29787 0120 00000000 		.4byte	.LFB100
 29788 0124 64000000 		.4byte	.LFE100
 29789 0128 00000000 		.4byte	.LFB101
 29790 012c A8000000 		.4byte	.LFE101
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 639


 29791 0130 00000000 		.4byte	.LFB102
 29792 0134 34000000 		.4byte	.LFE102
 29793 0138 00000000 		.4byte	.LFB103
 29794 013c 20000000 		.4byte	.LFE103
 29795 0140 00000000 		.4byte	.LFB104
 29796 0144 6C000000 		.4byte	.LFE104
 29797 0148 00000000 		.4byte	.LFB105
 29798 014c BC010000 		.4byte	.LFE105
 29799 0150 00000000 		.4byte	.LFB106
 29800 0154 60000000 		.4byte	.LFE106
 29801 0158 00000000 		.4byte	.LFB107
 29802 015c 98050000 		.4byte	.LFE107
 29803 0160 00000000 		.4byte	.LFB108
 29804 0164 8C000000 		.4byte	.LFE108
 29805 0168 00000000 		.4byte	.LFB109
 29806 016c EC000000 		.4byte	.LFE109
 29807 0170 00000000 		.4byte	.LFB110
 29808 0174 5C000000 		.4byte	.LFE110
 29809 0178 00000000 		.4byte	.LFB111
 29810 017c C0000000 		.4byte	.LFE111
 29811 0180 00000000 		.4byte	.LFB112
 29812 0184 12000000 		.4byte	.LFE112
 29813 0188 00000000 		.4byte	.LFB113
 29814 018c 12000000 		.4byte	.LFE113
 29815 0190 00000000 		.4byte	.LFB114
 29816 0194 1A000000 		.4byte	.LFE114
 29817 0198 00000000 		.4byte	.LFB115
 29818 019c 0C000000 		.4byte	.LFE115
 29819 01a0 00000000 		.4byte	.LFB116
 29820 01a4 0C000000 		.4byte	.LFE116
 29821 01a8 00000000 		.4byte	0
 29822 01ac 00000000 		.4byte	0
 29823              		.section	.debug_line,"",%progbits
 29824              	.Ldebug_line0:
 29825 0000 C01C0000 		.section	.debug_str,"MS",%progbits,1
 29825      0200C001 
 29825      00000201 
 29825      FB0E0D00 
 29825      01010101 
 29826              	.LASF212:
 29827 0000 696E666F 		.ascii	"infoSend\000"
 29827      53656E64 
 29827      00
 29828              	.LASF263:
 29829 0009 69645F73 		.ascii	"id_str\000"
 29829      747200
 29830              	.LASF25:
 29831 0010 73697A65 		.ascii	"sizetype\000"
 29831      74797065 
 29831      00
 29832              	.LASF33:
 29833 0019 434D445F 		.ascii	"CMD_INIT_MEM\000"
 29833      494E4954 
 29833      5F4D454D 
 29833      00
 29834              	.LASF329:
 29835 0026 676C5F63 		.ascii	"gl_c\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 640


 29835      00
 29836              	.LASF188:
 29837 002b 77726973 		.ascii	"wrist_direction_association\000"
 29837      745F6469 
 29837      72656374 
 29837      696F6E5F 
 29837      6173736F 
 29838              	.LASF63:
 29839 0047 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 29839      545F4D4F 
 29839      44455F45 
 29839      4D475F46 
 29839      4346535F 
 29840              	.LASF36:
 29841 005f 434D445F 		.ascii	"CMD_ACTIVATE\000"
 29841      41435449 
 29841      56415445 
 29841      00
 29842              	.LASF197:
 29843 006c 75736572 		.ascii	"user\000"
 29843      00
 29844              	.LASF341:
 29845 0071 73746F70 		.ascii	"stop_master_device\000"
 29845      5F6D6173 
 29845      7465725F 
 29845      64657669 
 29845      636500
 29846              	.LASF11:
 29847 0084 696E7433 		.ascii	"int32_t\000"
 29847      325F7400 
 29848              	.LASF352:
 29849 008c 675F7278 		.ascii	"g_rx\000"
 29849      00
 29850              	.LASF100:
 29851 0091 73745F64 		.ascii	"st_data\000"
 29851      61746100 
 29852              	.LASF294:
 29853 0099 77726974 		.ascii	"writeStatus\000"
 29853      65537461 
 29853      74757300 
 29854              	.LASF15:
 29855 00a5 75696E74 		.ascii	"uint32\000"
 29855      333200
 29856              	.LASF340:
 29857 00ac 636D645F 		.ascii	"cmd_set_baudrate\000"
 29857      7365745F 
 29857      62617564 
 29857      72617465 
 29857      00
 29858              	.LASF335:
 29859 00bd 6169725F 		.ascii	"air_chambers_control\000"
 29859      6368616D 
 29859      62657273 
 29859      5F636F6E 
 29859      74726F6C 
 29860              	.LASF271:
 29861 00d2 7370695F 		.ascii	"spi_read_delay_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 641


 29861      72656164 
 29861      5F64656C 
 29861      61795F73 
 29861      74725F6C 
 29862              	.LASF198:
 29863 00e9 4A4F595F 		.ascii	"JOY_spec\000"
 29863      73706563 
 29863      00
 29864              	.LASF273:
 29865 00f2 70726570 		.ascii	"prepare_generic_info\000"
 29865      6172655F 
 29865      67656E65 
 29865      7269635F 
 29865      696E666F 
 29866              	.LASF136:
 29867 0107 706F735F 		.ascii	"pos_lim_inf\000"
 29867      6C696D5F 
 29867      696E6600 
 29868              	.LASF238:
 29869 0113 5345434F 		.ascii	"SECOND_MOTOR_IDX\000"
 29869      4E445F4D 
 29869      4F544F52 
 29869      5F494458 
 29869      00
 29870              	.LASF322:
 29871 0124 636D645F 		.ascii	"cmd_get_inputs\000"
 29871      6765745F 
 29871      696E7075 
 29871      747300
 29872              	.LASF62:
 29873 0133 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 29873      545F4D4F 
 29873      44455F45 
 29873      4D475F46 
 29873      43465300 
 29874              	.LASF140:
 29875 0147 63757272 		.ascii	"curr_lookup\000"
 29875      5F6C6F6F 
 29875      6B757000 
 29876              	.LASF108:
 29877 0153 72657374 		.ascii	"rest_counter\000"
 29877      5F636F75 
 29877      6E746572 
 29877      00
 29878              	.LASF327:
 29879 0160 636D645F 		.ascii	"cmd_get_imu_readings\000"
 29879      6765745F 
 29879      696D755F 
 29879      72656164 
 29879      696E6773 
 29880              	.LASF178:
 29881 0175 73745F4D 		.ascii	"st_MASTER_spec\000"
 29881      41535445 
 29881      525F7370 
 29881      656300
 29882              	.LASF266:
 29883 0184 69645F73 		.ascii	"id_str_len\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 642


 29883      74725F6C 
 29883      656E00
 29884              	.LASF61:
 29885 018f 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 29885      545F4D4F 
 29885      44455F45 
 29885      4D475F49 
 29885      4E544547 
 29886              	.LASF240:
 29887 01a7 6D5F746D 		.ascii	"m_tmp\000"
 29887      7000
 29888              	.LASF16:
 29889 01ad 696E7438 		.ascii	"int8\000"
 29889      00
 29890              	.LASF217:
 29891 01b2 6765745F 		.ascii	"get_param_list\000"
 29891      70617261 
 29891      6D5F6C69 
 29891      737400
 29892              	.LASF307:
 29893 01c1 636D645F 		.ascii	"cmd_get_accelerations\000"
 29893      6765745F 
 29893      61636365 
 29893      6C657261 
 29893      74696F6E 
 29894              	.LASF326:
 29895 01d7 636D645F 		.ascii	"cmd_get_emg\000"
 29895      6765745F 
 29895      656D6700 
 29896              	.LASF155:
 29897 01e3 73745F65 		.ascii	"st_emg\000"
 29897      6D6700
 29898              	.LASF106:
 29899 01ea 706F7369 		.ascii	"position_hist\000"
 29899      74696F6E 
 29899      5F686973 
 29899      7400
 29900              	.LASF205:
 29901 01f8 74656D70 		.ascii	"temp_value\000"
 29901      5F76616C 
 29901      756500
 29902              	.LASF383:
 29903 0203 72657375 		.ascii	"result\000"
 29903      6C7400
 29904              	.LASF265:
 29905 020a 7370695F 		.ascii	"spi_read_delay_str\000"
 29905      72656164 
 29905      5F64656C 
 29905      61795F73 
 29905      747200
 29906              	.LASF185:
 29907 021d 73745F57 		.ascii	"st_WR_spec\000"
 29907      525F7370 
 29907      656300
 29908              	.LASF103:
 29909 0228 72656164 		.ascii	"ready\000"
 29909      7900
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 643


 29910              	.LASF152:
 29911 022e 456E635F 		.ascii	"Enc_idx_use_for_control\000"
 29911      6964785F 
 29911      7573655F 
 29911      666F725F 
 29911      636F6E74 
 29912              	.LASF49:
 29913 0246 434D445F 		.ascii	"CMD_GET_JOYSTICK\000"
 29913      4745545F 
 29913      4A4F5953 
 29913      5449434B 
 29913      00
 29914              	.LASF60:
 29915 0257 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 29915      545F4D4F 
 29915      44455F45 
 29915      4D475F50 
 29915      524F504F 
 29916              	.LASF117:
 29917 0273 7573655F 		.ascii	"use_2nd_motor_flag\000"
 29917      326E645F 
 29917      6D6F746F 
 29917      725F666C 
 29917      616700
 29918              	.LASF318:
 29919 0286 745F7374 		.ascii	"t_start\000"
 29919      61727400 
 29920              	.LASF162:
 29921 028e 72656164 		.ascii	"read_imu_flag\000"
 29921      5F696D75 
 29921      5F666C61 
 29921      6700
 29922              	.LASF356:
 29923 029c 74696D65 		.ascii	"timer_value\000"
 29923      725F7661 
 29923      6C756500 
 29924              	.LASF4:
 29925 02a8 6C6F6E67 		.ascii	"long int\000"
 29925      20696E74 
 29925      00
 29926              	.LASF195:
 29927 02b1 756E7573 		.ascii	"unused_bytes1\000"
 29927      65645F62 
 29927      79746573 
 29927      3100
 29928              	.LASF339:
 29929 02bf 6D6F746F 		.ascii	"motor_idx\000"
 29929      725F6964 
 29929      7800
 29930              	.LASF116:
 29931 02c9 72657365 		.ascii	"reset_counters\000"
 29931      745F636F 
 29931      756E7465 
 29931      727300
 29932              	.LASF172:
 29933 02d8 75736572 		.ascii	"user_emg\000"
 29933      5F656D67 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 644


 29933      00
 29934              	.LASF304:
 29935 02e1 7365745A 		.ascii	"setZeros\000"
 29935      65726F73 
 29935      00
 29936              	.LASF121:
 29937 02ea 756E7573 		.ascii	"unused_bytes\000"
 29937      65645F62 
 29937      79746573 
 29937      00
 29938              	.LASF201:
 29939 02f7 61636365 		.ascii	"accel_value\000"
 29939      6C5F7661 
 29939      6C756500 
 29940              	.LASF221:
 29941 0303 4E554D5F 		.ascii	"NUM_ITEMS\000"
 29941      4954454D 
 29941      5300
 29942              	.LASF104:
 29943 030d 73745F63 		.ascii	"st_counters\000"
 29943      6F756E74 
 29943      65727300 
 29944              	.LASF244:
 29945 0319 4D454D5F 		.ascii	"MEM_P\000"
 29945      5000
 29946              	.LASF19:
 29947 031f 666C6F61 		.ascii	"float32\000"
 29947      74333200 
 29948              	.LASF333:
 29949 0327 636D645F 		.ascii	"cmd_get_ADC_map\000"
 29949      6765745F 
 29949      4144435F 
 29949      6D617000 
 29950              	.LASF41:
 29951 0337 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 29951      4745545F 
 29951      43555252 
 29951      454E5453 
 29951      00
 29952              	.LASF105:
 29953 0348 656D675F 		.ascii	"emg_counter\000"
 29953      636F756E 
 29953      74657200 
 29954              	.LASF334:
 29955 0354 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 29955      6765745F 
 29955      4144435F 
 29955      72617700 
 29956              	.LASF253:
 29957 0364 6175785F 		.ascii	"aux_float2\000"
 29957      666C6F61 
 29957      743200
 29958              	.LASF321:
 29959 036f 636D645F 		.ascii	"cmd_ping\000"
 29959      70696E67 
 29959      00
 29960              	.LASF272:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 645


 29961 0378 7370695F 		.ascii	"spi_delay_menu_len\000"
 29961      64656C61 
 29961      795F6D65 
 29961      6E755F6C 
 29961      656E00
 29962              	.LASF251:
 29963 038b 7365745F 		.ascii	"set_custom_param\000"
 29963      63757374 
 29963      6F6D5F70 
 29963      6172616D 
 29963      00
 29964              	.LASF303:
 29965 039c 6D656D49 		.ascii	"memInit_OtbkActWristMs\000"
 29965      6E69745F 
 29965      4F74626B 
 29965      41637457 
 29965      72697374 
 29966              	.LASF0:
 29967 03b3 7369676E 		.ascii	"signed char\000"
 29967      65642063 
 29967      68617200 
 29968              	.LASF171:
 29969 03bf 75736572 		.ascii	"user_code_string\000"
 29969      5F636F64 
 29969      655F7374 
 29969      72696E67 
 29969      00
 29970              	.LASF206:
 29971 03d0 73745F63 		.ascii	"st_calib\000"
 29971      616C6962 
 29971      00
 29972              	.LASF292:
 29973 03d9 6D656D53 		.ascii	"memStore\000"
 29973      746F7265 
 29973      00
 29974              	.LASF374:
 29975 03e2 73696E67 		.ascii	"single_imu_size\000"
 29975      6C655F69 
 29975      6D755F73 
 29975      697A6500 
 29976              	.LASF71:
 29977 03f2 6D6F746F 		.ascii	"motor_supply_type\000"
 29977      725F7375 
 29977      70706C79 
 29977      5F747970 
 29977      6500
 29978              	.LASF320:
 29979 0404 72656164 		.ascii	"read_flag\000"
 29979      5F666C61 
 29979      6700
 29980              	.LASF365:
 29981 040e 4144435F 		.ascii	"ADC_buf\000"
 29981      62756600 
 29982              	.LASF362:
 29983 0416 696E7465 		.ascii	"interrupt_flag\000"
 29983      72727570 
 29983      745F666C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 646


 29983      616700
 29984              	.LASF277:
 29985 0425 73746570 		.ascii	"step\000"
 29985      00
 29986              	.LASF1:
 29987 042a 756E7369 		.ascii	"unsigned char\000"
 29987      676E6564 
 29987      20636861 
 29987      7200
 29988              	.LASF146:
 29989 0438 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 29989      72657665 
 29989      72735F6D 
 29989      6F746F72 
 29989      5F666C61 
 29990              	.LASF345:
 29991 044e 675F7265 		.ascii	"g_refNew\000"
 29991      664E6577 
 29991      00
 29992              	.LASF115:
 29993 0457 72696768 		.ascii	"right_left\000"
 29993      745F6C65 
 29993      667400
 29994              	.LASF29:
 29995 0462 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 29995      53544F52 
 29995      455F4445 
 29995      4641554C 
 29995      545F5041 
 29996              	.LASF144:
 29997 047b 656E636F 		.ascii	"encoder_line\000"
 29997      6465725F 
 29997      6C696E65 
 29997      00
 29998              	.LASF267:
 29999 0488 6E5F696D 		.ascii	"n_imu_str_len\000"
 29999      755F7374 
 29999      725F6C65 
 29999      6E00
 30000              	.LASF270:
 30001 0496 696D755F 		.ascii	"imu_table_str_len\000"
 30001      7461626C 
 30001      655F7374 
 30001      725F6C65 
 30001      6E00
 30002              	.LASF290:
 30003 04a8 76616C75 		.ascii	"value\000"
 30003      6500
 30004              	.LASF200:
 30005 04ae 666C6167 		.ascii	"flags\000"
 30005      7300
 30006              	.LASF99:
 30007 04b4 70726573 		.ascii	"pressure\000"
 30007      73757265 
 30007      00
 30008              	.LASF37:
 30009 04bd 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 647


 30009      4745545F 
 30009      41435449 
 30009      56415445 
 30009      00
 30010              	.LASF22:
 30011 04ce 63686172 		.ascii	"char\000"
 30011      00
 30012              	.LASF139:
 30013 04d3 6D61785F 		.ascii	"max_step_pos\000"
 30013      73746570 
 30013      5F706F73 
 30013      00
 30014              	.LASF375:
 30015 04e0 675F696D 		.ascii	"g_imu\000"
 30015      7500
 30016              	.LASF296:
 30017 04e6 7265745F 		.ascii	"ret_val\000"
 30017      76616C00 
 30018              	.LASF250:
 30019 04ee 6D656E75 		.ascii	"menu_idx\000"
 30019      5F696478 
 30019      00
 30020              	.LASF259:
 30021 04f7 73746172 		.ascii	"start_byte\000"
 30021      745F6279 
 30021      746500
 30022              	.LASF256:
 30023 0502 6E756D5F 		.ascii	"num_mag_cal_params\000"
 30023      6D61675F 
 30023      63616C5F 
 30023      70617261 
 30023      6D7300
 30024              	.LASF145:
 30025 0515 70776D5F 		.ascii	"pwm_rate_limiter\000"
 30025      72617465 
 30025      5F6C696D 
 30025      69746572 
 30025      00
 30026              	.LASF125:
 30027 0526 6B5F645F 		.ascii	"k_d_c\000"
 30027      6300
 30028              	.LASF98:
 30029 052c 73745F66 		.ascii	"st_fb_meas\000"
 30029      625F6D65 
 30029      617300
 30030              	.LASF214:
 30031 0537 7061636B 		.ascii	"packet_string\000"
 30031      65745F73 
 30031      7472696E 
 30031      6700
 30032              	.LASF150:
 30033 0545 6D5F6D75 		.ascii	"m_mult\000"
 30033      6C7400
 30034              	.LASF124:
 30035 054c 6B5F695F 		.ascii	"k_i_c\000"
 30035      6300
 30036              	.LASF293:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 648


 30037 0552 64697370 		.ascii	"displacement\000"
 30037      6C616365 
 30037      6D656E74 
 30037      00
 30038              	.LASF287:
 30039 055f 64617461 		.ascii	"data_length\000"
 30039      5F6C656E 
 30039      67746800 
 30040              	.LASF137:
 30041 056b 706F735F 		.ascii	"pos_lim_sup\000"
 30041      6C696D5F 
 30041      73757000 
 30042              	.LASF158:
 30043 0577 656D675F 		.ascii	"emg_speed\000"
 30043      73706565 
 30043      6400
 30044              	.LASF176:
 30045 0581 72657374 		.ascii	"rest_vel\000"
 30045      5F76656C 
 30045      00
 30046              	.LASF227:
 30047 058a 7061636B 		.ascii	"packet_data\000"
 30047      65745F64 
 30047      61746100 
 30048              	.LASF112:
 30049 0596 73745F64 		.ascii	"st_device\000"
 30049      65766963 
 30049      6500
 30050              	.LASF370:
 30051 05a0 7046696C 		.ascii	"pFile\000"
 30051      6500
 30052              	.LASF169:
 30053 05a6 4144435F 		.ascii	"ADC_conf\000"
 30053      636F6E66 
 30053      00
 30054              	.LASF284:
 30055 05af 636F6D6D 		.ascii	"commWrite\000"
 30055      57726974 
 30055      6500
 30056              	.LASF342:
 30057 05b9 64656163 		.ascii	"deactivate_slaves\000"
 30057      74697661 
 30057      74655F73 
 30057      6C617665 
 30057      7300
 30058              	.LASF295:
 30059 05cb 70616765 		.ascii	"pages\000"
 30059      7300
 30060              	.LASF299:
 30061 05d1 6D656D49 		.ascii	"memInit\000"
 30061      6E697400 
 30062              	.LASF127:
 30063 05d9 6B5F695F 		.ascii	"k_i_dl\000"
 30063      646C00
 30064              	.LASF38:
 30065 05e0 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 30065      5345545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 649


 30065      494E5055 
 30065      545300
 30066              	.LASF34:
 30067 05ef 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 30067      4745545F 
 30067      50415241 
 30067      4D5F4C49 
 30067      535400
 30068              	.LASF101:
 30069 0602 62756666 		.ascii	"buffer\000"
 30069      657200
 30070              	.LASF129:
 30071 0609 6B5F705F 		.ascii	"k_p_c_dl\000"
 30071      635F646C 
 30071      00
 30072              	.LASF305:
 30073 0612 636D645F 		.ascii	"cmd_get_measurements\000"
 30073      6765745F 
 30073      6D656173 
 30073      7572656D 
 30073      656E7473 
 30074              	.LASF209:
 30075 0627 73706565 		.ascii	"speed\000"
 30075      6400
 30076              	.LASF213:
 30077 062d 72785F63 		.ascii	"rx_cmd\000"
 30077      6D6400
 30078              	.LASF86:
 30079 0634 54595045 		.ascii	"TYPE_DOUBLE\000"
 30079      5F444F55 
 30079      424C4500 
 30080              	.LASF336:
 30081 0640 736C6176 		.ascii	"slave_motor_idx\000"
 30081      655F6D6F 
 30081      746F725F 
 30081      69647800 
 30082              	.LASF347:
 30083 0650 675F6D65 		.ascii	"g_meas\000"
 30083      617300
 30084              	.LASF310:
 30085 0657 6C617374 		.ascii	"last_aux_int16\000"
 30085      5F617578 
 30085      5F696E74 
 30085      313600
 30086              	.LASF75:
 30087 0666 41434B5F 		.ascii	"ACK_ERROR\000"
 30087      4552524F 
 30087      5200
 30088              	.LASF367:
 30089 0670 64617461 		.ascii	"data_encoder_raw\000"
 30089      5F656E63 
 30089      6F646572 
 30089      5F726177 
 30089      00
 30090              	.LASF58:
 30091 0681 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 30091      545F4D4F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 650


 30091      44455F45 
 30091      58544552 
 30091      4E414C00 
 30092              	.LASF242:
 30093 0695 696E6465 		.ascii	"index\000"
 30093      7800
 30094              	.LASF183:
 30095 069b 6D617869 		.ascii	"maximum_pressure_kPa\000"
 30095      6D756D5F 
 30095      70726573 
 30095      73757265 
 30095      5F6B5061 
 30096              	.LASF177:
 30097 06b0 72657374 		.ascii	"rest_position_flag\000"
 30097      5F706F73 
 30097      6974696F 
 30097      6E5F666C 
 30097      616700
 30098              	.LASF190:
 30099 06c3 6A6F7973 		.ascii	"joystick_closure_speed\000"
 30099      7469636B 
 30099      5F636C6F 
 30099      73757265 
 30099      5F737065 
 30100              	.LASF130:
 30101 06da 6B5F695F 		.ascii	"k_i_c_dl\000"
 30101      635F646C 
 30101      00
 30102              	.LASF316:
 30103 06e3 636F6D6D 		.ascii	"commReadResCurrFromSH\000"
 30103      52656164 
 30103      52657343 
 30103      75727246 
 30103      726F6D53 
 30104              	.LASF315:
 30105 06f9 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 30105      6765745F 
 30105      63757272 
 30105      656E7473 
 30105      5F666F72 
 30106              	.LASF262:
 30107 0713 6D61675F 		.ascii	"mag_param_str\000"
 30107      70617261 
 30107      6D5F7374 
 30107      7200
 30108              	.LASF364:
 30109 0721 72657365 		.ascii	"reset_PSoC_flag\000"
 30109      745F5053 
 30109      6F435F66 
 30109      6C616700 
 30110              	.LASF337:
 30111 0731 6F74626B 		.ascii	"otbk_act_wrist_control\000"
 30111      5F616374 
 30111      5F777269 
 30111      73745F63 
 30111      6F6E7472 
 30112              	.LASF87:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 651


 30113 0748 54595045 		.ascii	"TYPE_STRING\000"
 30113      5F535452 
 30113      494E4700 
 30114              	.LASF70:
 30115 0754 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 30115      5F414E44 
 30115      5F504F53 
 30115      5F434F4E 
 30115      54524F4C 
 30116              	.LASF28:
 30117 0769 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 30117      53544F52 
 30117      455F5041 
 30117      52414D53 
 30117      00
 30118              	.LASF224:
 30119 077a 50415241 		.ascii	"PARAMS_STR\000"
 30119      4D535F53 
 30119      545200
 30120              	.LASF207:
 30121 0785 656E6162 		.ascii	"enabled\000"
 30121      6C656400 
 30122              	.LASF7:
 30123 078d 6C6F6E67 		.ascii	"long unsigned int\000"
 30123      20756E73 
 30123      69676E65 
 30123      6420696E 
 30123      7400
 30124              	.LASF110:
 30125 079f 746F7461 		.ascii	"total_time_on\000"
 30125      6C5F7469 
 30125      6D655F6F 
 30125      6E00
 30126              	.LASF32:
 30127 07ad 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 30127      424F4F54 
 30127      4C4F4144 
 30127      455200
 30128              	.LASF192:
 30129 07bc 6A6F7973 		.ascii	"joystick_gains\000"
 30129      7469636B 
 30129      5F676169 
 30129      6E7300
 30130              	.LASF94:
 30131 07cb 686F6C64 		.ascii	"hold_curr\000"
 30131      5F637572 
 30131      7200
 30132              	.LASF64:
 30133 07d5 494E5055 		.ascii	"INPUT_MODE_JOYSTICK\000"
 30133      545F4D4F 
 30133      44455F4A 
 30133      4F595354 
 30133      49434B00 
 30134              	.LASF111:
 30135 07e9 746F7461 		.ascii	"total_time_rest\000"
 30135      6C5F7469 
 30135      6D655F72 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 652


 30135      65737400 
 30136              	.LASF216:
 30137 07f9 7374725F 		.ascii	"str_sd_data\000"
 30137      73645F64 
 30137      61746100 
 30138              	.LASF132:
 30139 0805 61637469 		.ascii	"activ\000"
 30139      7600
 30140              	.LASF226:
 30141 080b 4D454E55 		.ascii	"MENU_STR\000"
 30141      5F535452 
 30141      00
 30142              	.LASF149:
 30143 0814 6D5F6F66 		.ascii	"m_off\000"
 30143      6600
 30144              	.LASF76:
 30145 081a 41434B5F 		.ascii	"ACK_OK\000"
 30145      4F4B00
 30146              	.LASF78:
 30147 0821 54595045 		.ascii	"TYPE_FLAG\000"
 30147      5F464C41 
 30147      4700
 30148              	.LASF204:
 30149 082b 71756174 		.ascii	"quat_value\000"
 30149      5F76616C 
 30149      756500
 30150              	.LASF258:
 30151 0836 7061636B 		.ascii	"packet_length\000"
 30151      65745F6C 
 30151      656E6774 
 30151      6800
 30152              	.LASF174:
 30153 0844 72657374 		.ascii	"rest_pos\000"
 30153      5F706F73 
 30153      00
 30154              	.LASF89:
 30155 084d 63757272 		.ascii	"curr\000"
 30155      00
 30156              	.LASF142:
 30157 0852 696E7075 		.ascii	"input_mode\000"
 30157      745F6D6F 
 30157      646500
 30158              	.LASF68:
 30159 085d 434F4E54 		.ascii	"CONTROL_PWM\000"
 30159      524F4C5F 
 30159      50574D00 
 30160              	.LASF43:
 30161 0869 434D445F 		.ascii	"CMD_GET_EMG\000"
 30161      4745545F 
 30161      454D4700 
 30162              	.LASF300:
 30163 0875 6D656D49 		.ascii	"memInit_SoftHandPro\000"
 30163      6E69745F 
 30163      536F6674 
 30163      48616E64 
 30163      50726F00 
 30164              	.LASF31:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 653


 30165 0889 434D445F 		.ascii	"CMD_GET_INFO\000"
 30165      4745545F 
 30165      494E464F 
 30165      00
 30166              	.LASF254:
 30167 0896 6765745F 		.ascii	"get_IMU_param_list\000"
 30167      494D555F 
 30167      70617261 
 30167      6D5F6C69 
 30167      737400
 30168              	.LASF330:
 30169 08a9 73696E67 		.ascii	"single_packet\000"
 30169      6C655F70 
 30169      61636B65 
 30169      7400
 30170              	.LASF257:
 30171 08b7 66697273 		.ascii	"first_imu_parameter\000"
 30171      745F696D 
 30171      755F7061 
 30171      72616D65 
 30171      74657200 
 30172              	.LASF42:
 30173 08cb 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 30173      4745545F 
 30173      43555252 
 30173      5F414E44 
 30173      5F4D4541 
 30174              	.LASF379:
 30175 08e1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 30175      43313120 
 30175      352E342E 
 30175      31203230 
 30175      31363036 
 30176 0914 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 30176      20726576 
 30176      6973696F 
 30176      6E203233 
 30176      37373135 
 30177 0947 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 30177      66756E63 
 30177      74696F6E 
 30177      2D736563 
 30177      74696F6E 
 30178              	.LASF91:
 30179 096f 73745F72 		.ascii	"st_ref\000"
 30179      656600
 30180              	.LASF308:
 30181 0976 636D645F 		.ascii	"cmd_get_joystick\000"
 30181      6765745F 
 30181      6A6F7973 
 30181      7469636B 
 30181      00
 30182              	.LASF47:
 30183 0987 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 30183      5345545F 
 30183      43554646 
 30183      5F494E50 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 654


 30183      55545300 
 30184              	.LASF173:
 30185 099b 73745F53 		.ascii	"st_SH_spec\000"
 30185      485F7370 
 30185      656300
 30186              	.LASF355:
 30187 09a6 63616C69 		.ascii	"calib\000"
 30187      6200
 30188              	.LASF6:
 30189 09ac 5F5F7569 		.ascii	"__uint32_t\000"
 30189      6E743332 
 30189      5F7400
 30190              	.LASF8:
 30191 09b7 6C6F6E67 		.ascii	"long long int\000"
 30191      206C6F6E 
 30191      6720696E 
 30191      7400
 30192              	.LASF66:
 30193 09c5 53485F63 		.ascii	"SH_control_mode\000"
 30193      6F6E7472 
 30193      6F6C5F6D 
 30193      6F646500 
 30194              	.LASF80:
 30195 09d5 54595045 		.ascii	"TYPE_UINT8\000"
 30195      5F55494E 
 30195      543800
 30196              	.LASF314:
 30197 09e0 636D645F 		.ascii	"cmd_get_currents\000"
 30197      6765745F 
 30197      63757272 
 30197      656E7473 
 30197      00
 30198              	.LASF73:
 30199 09f1 4D41584F 		.ascii	"MAXON_12V\000"
 30199      4E5F3132 
 30199      5600
 30200              	.LASF363:
 30201 09fb 6368616E 		.ascii	"change_ext_ref_flag\000"
 30201      67655F65 
 30201      78745F72 
 30201      65665F66 
 30201      6C616700 
 30202              	.LASF21:
 30203 0a0f 646F7562 		.ascii	"double\000"
 30203      6C6500
 30204              	.LASF148:
 30205 0a16 456E635F 		.ascii	"Enc_raw_read_conf\000"
 30205      7261775F 
 30205      72656164 
 30205      5F636F6E 
 30205      6600
 30206              	.LASF210:
 30207 0a28 72657065 		.ascii	"repetitions\000"
 30207      74697469 
 30207      6F6E7300 
 30208              	.LASF138:
 30209 0a34 6D61785F 		.ascii	"max_step_neg\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 655


 30209      73746570 
 30209      5F6E6567 
 30209      00
 30210              	.LASF180:
 30211 0a41 736C6176 		.ascii	"slave_ID\000"
 30211      655F4944 
 30211      00
 30212              	.LASF361:
 30213 0a4a 72657365 		.ascii	"reset_last_value_flag\000"
 30213      745F6C61 
 30213      73745F76 
 30213      616C7565 
 30213      5F666C61 
 30214              	.LASF225:
 30215 0a60 43555354 		.ascii	"CUSTOM_PARAM_GET\000"
 30215      4F4D5F50 
 30215      4152414D 
 30215      5F474554 
 30215      00
 30216              	.LASF20:
 30217 0a71 666C6F61 		.ascii	"float\000"
 30217      7400
 30218              	.LASF164:
 30219 0a77 494D555F 		.ascii	"IMU_conf\000"
 30219      636F6E66 
 30219      00
 30220              	.LASF243:
 30221 0a80 50415241 		.ascii	"PARAM_IDX\000"
 30221      4D5F4944 
 30221      5800
 30222              	.LASF95:
 30223 0a8a 73745F61 		.ascii	"st_adc_meas\000"
 30223      64635F6D 
 30223      65617300 
 30224              	.LASF239:
 30225 0a96 6D5F6164 		.ascii	"m_addr\000"
 30225      647200
 30226              	.LASF354:
 30227 0a9d 635F6D65 		.ascii	"c_mem\000"
 30227      6D00
 30228              	.LASF286:
 30229 0aa3 64617461 		.ascii	"data_array\000"
 30229      5F617272 
 30229      617900
 30230              	.LASF10:
 30231 0aae 756E7369 		.ascii	"unsigned int\000"
 30231      676E6564 
 30231      20696E74 
 30231      00
 30232              	.LASF301:
 30233 0abb 6D656D49 		.ascii	"memInit_Master\000"
 30233      6E69745F 
 30233      4D617374 
 30233      657200
 30234              	.LASF228:
 30235 0aca 7061636B 		.ascii	"packet_lenght\000"
 30235      65745F6C 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 656


 30235      656E6768 
 30235      7400
 30236              	.LASF289:
 30237 0ad8 73656E64 		.ascii	"sendAcknowledgment\000"
 30237      41636B6E 
 30237      6F776C65 
 30237      64676D65 
 30237      6E7400
 30238              	.LASF279:
 30239 0aeb 70726570 		.ascii	"prepare_SD_legend\000"
 30239      6172655F 
 30239      53445F6C 
 30239      6567656E 
 30239      6400
 30240              	.LASF376:
 30241 0afd 4D616743 		.ascii	"MagCal\000"
 30241      616C00
 30242              	.LASF56:
 30243 0b04 53485F63 		.ascii	"SH_command\000"
 30243      6F6D6D61 
 30243      6E6400
 30244              	.LASF82:
 30245 0b0f 54595045 		.ascii	"TYPE_UINT16\000"
 30245      5F55494E 
 30245      54313600 
 30246              	.LASF194:
 30247 0b1b 666C6167 		.ascii	"flag\000"
 30247      00
 30248              	.LASF309:
 30249 0b20 636D645F 		.ascii	"cmd_set_inputs\000"
 30249      7365745F 
 30249      696E7075 
 30249      747300
 30250              	.LASF143:
 30251 0b2f 636F6E74 		.ascii	"control_mode\000"
 30251      726F6C5F 
 30251      6D6F6465 
 30251      00
 30252              	.LASF324:
 30253 0b3c 6F66665F 		.ascii	"off_1\000"
 30253      3100
 30254              	.LASF59:
 30255 0b42 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 30255      545F4D4F 
 30255      44455F45 
 30255      4E434F44 
 30255      45523300 
 30256              	.LASF285:
 30257 0b56 636F6D6D 		.ascii	"commWriteID\000"
 30257      57726974 
 30257      65494400 
 30258              	.LASF52:
 30259 0b62 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 30259      4745545F 
 30259      454E434F 
 30259      4445525F 
 30259      434F4E46 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 657


 30260              	.LASF161:
 30261 0b77 73745F69 		.ascii	"st_imu\000"
 30261      6D7500
 30262              	.LASF312:
 30263 0b7e 636D645F 		.ascii	"cmd_get_activate\000"
 30263      6765745F 
 30263      61637469 
 30263      76617465 
 30263      00
 30264              	.LASF186:
 30265 0b8f 77726973 		.ascii	"wrist_act_mode\000"
 30265      745F6163 
 30265      745F6D6F 
 30265      646500
 30266              	.LASF230:
 30267 0b9e 73747269 		.ascii	"string_lenght\000"
 30267      6E675F6C 
 30267      656E6768 
 30267      7400
 30268              	.LASF85:
 30269 0bac 54595045 		.ascii	"TYPE_FLOAT\000"
 30269      5F464C4F 
 30269      415400
 30270              	.LASF247:
 30271 0bb7 43555354 		.ascii	"CUSTOM_PARAM_SET_LIST\000"
 30271      4F4D5F50 
 30271      4152414D 
 30271      5F534554 
 30271      5F4C4953 
 30272              	.LASF222:
 30273 0bcd 4E554D5F 		.ascii	"NUM_STRUCT\000"
 30273      53545255 
 30273      435400
 30274              	.LASF252:
 30275 0bd8 6175785F 		.ascii	"aux_uchar\000"
 30275      75636861 
 30275      7200
 30276              	.LASF96:
 30277 0be2 6164645F 		.ascii	"add_emg\000"
 30277      656D6700 
 30278              	.LASF81:
 30279 0bea 54595045 		.ascii	"TYPE_INT16\000"
 30279      5F494E54 
 30279      313600
 30280              	.LASF234:
 30281 0bf5 6175785F 		.ascii	"aux_uint16\000"
 30281      75696E74 
 30281      313600
 30282              	.LASF156:
 30283 0c00 656D675F 		.ascii	"emg_threshold\000"
 30283      74687265 
 30283      73686F6C 
 30283      6400
 30284              	.LASF46:
 30285 0c0e 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 30285      4745545F 
 30285      43555252 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 658


 30285      5F444946 
 30285      4600
 30286              	.LASF107:
 30287 0c20 63757272 		.ascii	"current_hist\000"
 30287      656E745F 
 30287      68697374 
 30287      00
 30288              	.LASF69:
 30289 0c2d 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 30289      524F4C5F 
 30289      43555252 
 30289      454E5400 
 30290              	.LASF24:
 30291 0c3d 6C6F6E67 		.ascii	"long double\000"
 30291      20646F75 
 30291      626C6500 
 30292              	.LASF84:
 30293 0c49 54595045 		.ascii	"TYPE_UINT32\000"
 30293      5F55494E 
 30293      54333200 
 30294              	.LASF181:
 30295 0c55 73745F46 		.ascii	"st_FB_spec\000"
 30295      425F7370 
 30295      656300
 30296              	.LASF219:
 30297 0c60 5641525F 		.ascii	"VAR_P\000"
 30297      5000
 30298              	.LASF246:
 30299 0c66 43555354 		.ascii	"CUSTOM_PARAM_GET_LIST\000"
 30299      4F4D5F50 
 30299      4152414D 
 30299      5F474554 
 30299      5F4C4953 
 30300              	.LASF153:
 30301 0c7c 6D6F746F 		.ascii	"motor_handle_ratio\000"
 30301      725F6861 
 30301      6E646C65 
 30301      5F726174 
 30301      696F00
 30302              	.LASF288:
 30303 0c8f 63686563 		.ascii	"checksum\000"
 30303      6B73756D 
 30303      00
 30304              	.LASF346:
 30305 0c98 675F7265 		.ascii	"g_refOld\000"
 30305      664F6C64 
 30305      00
 30306              	.LASF35:
 30307 0ca1 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 30307      48414E44 
 30307      5F43414C 
 30307      49425241 
 30307      544500
 30308              	.LASF202:
 30309 0cb4 6779726F 		.ascii	"gyro_value\000"
 30309      5F76616C 
 30309      756500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 659


 30310              	.LASF166:
 30311 0cbf 63757272 		.ascii	"curr_time\000"
 30311      5F74696D 
 30311      6500
 30312              	.LASF151:
 30313 0cc9 646F7562 		.ascii	"double_encoder_on_off\000"
 30313      6C655F65 
 30313      6E636F64 
 30313      65725F6F 
 30313      6E5F6F66 
 30314              	.LASF338:
 30315 0cdf 64726976 		.ascii	"drive_slave\000"
 30315      655F736C 
 30315      61766500 
 30316              	.LASF163:
 30317 0ceb 5350495F 		.ascii	"SPI_read_delay\000"
 30317      72656164 
 30317      5F64656C 
 30317      617900
 30318              	.LASF74:
 30319 0cfa 61636B6E 		.ascii	"acknowledgment_values\000"
 30319      6F776C65 
 30319      64676D65 
 30319      6E745F76 
 30319      616C7565 
 30320              	.LASF237:
 30321 0d10 4D4F544F 		.ascii	"MOTOR_IDX\000"
 30321      525F4944 
 30321      5800
 30322              	.LASF298:
 30323 0d1a 6D656D52 		.ascii	"memRestore\000"
 30323      6573746F 
 30323      726500
 30324              	.LASF260:
 30325 0d25 6E5F696D 		.ascii	"n_imu_str\000"
 30325      755F7374 
 30325      7200
 30326              	.LASF274:
 30327 0d2f 696E666F 		.ascii	"info_string\000"
 30327      5F737472 
 30327      696E6700 
 30328              	.LASF280:
 30329 0d3b 70726570 		.ascii	"prepare_SD_info\000"
 30329      6172655F 
 30329      53445F69 
 30329      6E666F00 
 30330              	.LASF9:
 30331 0d4b 6C6F6E67 		.ascii	"long long unsigned int\000"
 30331      206C6F6E 
 30331      6720756E 
 30331      7369676E 
 30331      65642069 
 30332              	.LASF83:
 30333 0d62 54595045 		.ascii	"TYPE_INT32\000"
 30333      5F494E54 
 30333      333200
 30334              	.LASF236:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 660


 30335 0d6d 6175785F 		.ascii	"aux_uint32\000"
 30335      75696E74 
 30335      333200
 30336              	.LASF102:
 30337 0d78 6C656E67 		.ascii	"length\000"
 30337      746800
 30338              	.LASF248:
 30339 0d7f 55534552 		.ascii	"USER_ID_PARAM\000"
 30339      5F49445F 
 30339      50415241 
 30339      4D00
 30340              	.LASF199:
 30341 0d8d 73745F69 		.ascii	"st_imu_data\000"
 30341      6D755F64 
 30341      61746100 
 30342              	.LASF203:
 30343 0d99 6D61675F 		.ascii	"mag_value\000"
 30343      76616C75 
 30343      6500
 30344              	.LASF90:
 30345 0da3 6F6E6F66 		.ascii	"onoff\000"
 30345      6600
 30346              	.LASF45:
 30347 0da9 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 30347      4745545F 
 30347      41434345 
 30347      4C00
 30348              	.LASF306:
 30349 0db7 636D645F 		.ascii	"cmd_get_velocities\000"
 30349      6765745F 
 30349      76656C6F 
 30349      63697469 
 30349      657300
 30350              	.LASF297:
 30351 0dca 6D656D52 		.ascii	"memRecall\000"
 30351      6563616C 
 30351      6C00
 30352              	.LASF357:
 30353 0dd4 74696D65 		.ascii	"timer_value0\000"
 30353      725F7661 
 30353      6C756530 
 30353      00
 30354              	.LASF48:
 30355 0de1 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 30355      5345545F 
 30355      42415544 
 30355      52415445 
 30355      00
 30356              	.LASF123:
 30357 0df2 6B5F705F 		.ascii	"k_p_c\000"
 30357      6300
 30358              	.LASF264:
 30359 0df8 696D755F 		.ascii	"imu_table_str\000"
 30359      7461626C 
 30359      655F7374 
 30359      7200
 30360              	.LASF358:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 661


 30361 0e06 6465765F 		.ascii	"dev_tension\000"
 30361      74656E73 
 30361      696F6E00 
 30362              	.LASF134:
 30363 0e12 6D6F746F 		.ascii	"motor_driver_type\000"
 30363      725F6472 
 30363      69766572 
 30363      5F747970 
 30363      6500
 30364              	.LASF325:
 30365 0e24 6D756C74 		.ascii	"mult_1\000"
 30365      5F3100
 30366              	.LASF276:
 30367 0e2b 70726570 		.ascii	"prepare_counter_info\000"
 30367      6172655F 
 30367      636F756E 
 30367      7465725F 
 30367      696E666F 
 30368              	.LASF23:
 30369 0e40 72656738 		.ascii	"reg8\000"
 30369      00
 30370              	.LASF184:
 30371 0e45 70726F70 		.ascii	"prop_err_fb_gain\000"
 30371      5F657272 
 30371      5F66625F 
 30371      6761696E 
 30371      00
 30372              	.LASF282:
 30373 0e56 636F6D6D 		.ascii	"commWrite_old_id\000"
 30373      57726974 
 30373      655F6F6C 
 30373      645F6964 
 30373      00
 30374              	.LASF241:
 30375 0e67 6D616E61 		.ascii	"manage_param_list\000"
 30375      67655F70 
 30375      6172616D 
 30375      5F6C6973 
 30375      7400
 30376              	.LASF30:
 30377 0e79 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 30377      52455354 
 30377      4F52455F 
 30377      50415241 
 30377      4D5300
 30378              	.LASF278:
 30379 0e8c 70726570 		.ascii	"prepare_SD_param_info\000"
 30379      6172655F 
 30379      53445F70 
 30379      6172616D 
 30379      5F696E66 
 30380              	.LASF317:
 30381 0ea2 63757272 		.ascii	"curr_diff\000"
 30381      5F646966 
 30381      6600
 30382              	.LASF179:
 30383 0eac 736C6176 		.ascii	"slave_comm_active\000"
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 662


 30383      655F636F 
 30383      6D6D5F61 
 30383      63746976 
 30383      6500
 30384              	.LASF283:
 30385 0ebe 6F6C645F 		.ascii	"old_id\000"
 30385      696400
 30386              	.LASF382:
 30387 0ec5 5F5F5245 		.ascii	"__REV16\000"
 30387      56313600 
 30388              	.LASF368:
 30389 0ecd 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 30389      636F6465 
 30389      725F4C69 
 30389      6E655F43 
 30389      6F6E6E65 
 30390              	.LASF120:
 30391 0ee6 6465765F 		.ascii	"dev_type\000"
 30391      74797065 
 30391      00
 30392              	.LASF170:
 30393 0eef 73745F75 		.ascii	"st_user\000"
 30393      73657200 
 30394              	.LASF313:
 30395 0ef7 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 30395      6765745F 
 30395      63757272 
 30395      5F616E64 
 30395      5F6D6561 
 30396              	.LASF154:
 30397 0f0d 67656172 		.ascii	"gears_params\000"
 30397      735F7061 
 30397      72616D73 
 30397      00
 30398              	.LASF165:
 30399 0f1a 73745F65 		.ascii	"st_expansion\000"
 30399      7870616E 
 30399      73696F6E 
 30399      00
 30400              	.LASF159:
 30401 0f27 656D675F 		.ascii	"emg_calibration_flag\000"
 30401      63616C69 
 30401      62726174 
 30401      696F6E5F 
 30401      666C6167 
 30402              	.LASF92:
 30403 0f3c 73745F6D 		.ascii	"st_meas\000"
 30403      65617300 
 30404              	.LASF55:
 30405 0f44 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 30405      4745545F 
 30405      4144435F 
 30405      52415700 
 30406              	.LASF191:
 30407 0f54 6A6F7973 		.ascii	"joystick_threshold\000"
 30407      7469636B 
 30407      5F746872 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 663


 30407      6573686F 
 30407      6C6400
 30408              	.LASF72:
 30409 0f67 4D41584F 		.ascii	"MAXON_24V\000"
 30409      4E5F3234 
 30409      5600
 30410              	.LASF65:
 30411 0f71 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL_NC\000"
 30411      545F4D4F 
 30411      44455F45 
 30411      4D475F50 
 30411      524F504F 
 30412              	.LASF51:
 30413 0f90 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 30413      4745545F 
 30413      494D555F 
 30413      50415241 
 30413      4D00
 30414              	.LASF351:
 30415 0fa2 675F6662 		.ascii	"g_fb_meas\000"
 30415      5F6D6561 
 30415      7300
 30416              	.LASF53:
 30417 0fac 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 30417      4745545F 
 30417      454E434F 
 30417      4445525F 
 30417      52415700 
 30418              	.LASF323:
 30419 0fc0 636D645F 		.ascii	"cmd_store_params\000"
 30419      73746F72 
 30419      655F7061 
 30419      72616D73 
 30419      00
 30420              	.LASF353:
 30421 0fd1 675F6D65 		.ascii	"g_mem\000"
 30421      6D00
 30422              	.LASF40:
 30423 0fd7 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 30423      4745545F 
 30423      4D454153 
 30423      5552454D 
 30423      454E5453 
 30424              	.LASF350:
 30425 0fec 675F6164 		.ascii	"g_adc_measOld\000"
 30425      635F6D65 
 30425      61734F6C 
 30425      6400
 30426              	.LASF332:
 30427 0ffa 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 30427      6765745F 
 30427      656E636F 
 30427      6465725F 
 30427      72617700 
 30428              	.LASF13:
 30429 100e 75696E74 		.ascii	"uint8\000"
 30429      3800
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 664


 30430              	.LASF211:
 30431 1014 636F6D6D 		.ascii	"commProcess\000"
 30431      50726F63 
 30431      65737300 
 30432              	.LASF189:
 30433 1020 73745F4A 		.ascii	"st_JOY_spec\000"
 30433      4F595F73 
 30433      70656300 
 30434              	.LASF2:
 30435 102c 73686F72 		.ascii	"short int\000"
 30435      7420696E 
 30435      7400
 30436              	.LASF302:
 30437 1036 6D656D49 		.ascii	"memInit_AirChambersFb\000"
 30437      6E69745F 
 30437      41697243 
 30437      68616D62 
 30437      65727346 
 30438              	.LASF268:
 30439 104c 6964735F 		.ascii	"ids_str_len\000"
 30439      7374725F 
 30439      6C656E00 
 30440              	.LASF128:
 30441 1058 6B5F645F 		.ascii	"k_d_dl\000"
 30441      646C00
 30442              	.LASF229:
 30443 105f 6964785F 		.ascii	"idx_menu\000"
 30443      6D656E75 
 30443      00
 30444              	.LASF97:
 30445 1068 6A6F7973 		.ascii	"joystick\000"
 30445      7469636B 
 30445      00
 30446              	.LASF196:
 30447 1071 6D6F746F 		.ascii	"motor\000"
 30447      7200
 30448              	.LASF371:
 30449 1077 4E5F494D 		.ascii	"N_IMU_Connected\000"
 30449      555F436F 
 30449      6E6E6563 
 30449      74656400 
 30450              	.LASF39:
 30451 1087 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 30451      4745545F 
 30451      494E5055 
 30451      545300
 30452              	.LASF113:
 30453 1096 68775F6D 		.ascii	"hw_maint_date\000"
 30453      61696E74 
 30453      5F646174 
 30453      6500
 30454              	.LASF261:
 30455 10a4 6964735F 		.ascii	"ids_str\000"
 30455      73747200 
 30456              	.LASF54:
 30457 10ac 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 30457      4745545F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 665


 30457      4144435F 
 30457      434F4E46 
 30457      00
 30458              	.LASF27:
 30459 10bd 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 30459      5345545F 
 30459      5A45524F 
 30459      5300
 30460              	.LASF269:
 30461 10cb 6D61675F 		.ascii	"mag_param_str_len\000"
 30461      70617261 
 30461      6D5F7374 
 30461      725F6C65 
 30461      6E00
 30462              	.LASF255:
 30463 10dd 6E756D5F 		.ascii	"num_imus_id_params\000"
 30463      696D7573 
 30463      5F69645F 
 30463      70617261 
 30463      6D7300
 30464              	.LASF233:
 30465 10f0 6175785F 		.ascii	"aux_int16\000"
 30465      696E7431 
 30465      3600
 30466              	.LASF378:
 30467 10fa 45455052 		.ascii	"EEPROM_ADDR\000"
 30467      4F4D5F41 
 30467      44445200 
 30468              	.LASF114:
 30469 1106 73746174 		.ascii	"stats_period_begin_date\000"
 30469      735F7065 
 30469      72696F64 
 30469      5F626567 
 30469      696E5F64 
 30470              	.LASF373:
 30471 111e 696D7573 		.ascii	"imus_data_size\000"
 30471      5F646174 
 30471      615F7369 
 30471      7A6500
 30472              	.LASF343:
 30473 112d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 30473      52784275 
 30473      66666572 
 30473      00
 30474              	.LASF44:
 30475 113a 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 30475      4745545F 
 30475      56454C4F 
 30475      43495449 
 30475      455300
 30476              	.LASF360:
 30477 114d 706F775F 		.ascii	"pow_tension\000"
 30477      74656E73 
 30477      696F6E00 
 30478              	.LASF381:
 30479 1159 433A5C55 		.ascii	"C:\\Users\\Mattia\\Documents\\GITHUB\\SoftHandPRO-a"
 30479      73657273 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 666


 30479      5C4D6174 
 30479      7469615C 
 30479      446F6375 
 30480 1187 6E642D47 		.ascii	"nd-Generic-FW-PSoC5\\SoftHand_Pro.cydsn\000"
 30480      656E6572 
 30480      69632D46 
 30480      572D5053 
 30480      6F43355C 
 30481              	.LASF77:
 30482 11ae 64617461 		.ascii	"data_types\000"
 30482      5F747970 
 30482      657300
 30483              	.LASF17:
 30484 11b9 696E7431 		.ascii	"int16\000"
 30484      3600
 30485              	.LASF167:
 30486 11bf 72656164 		.ascii	"read_exp_port_flag\000"
 30486      5F657870 
 30486      5F706F72 
 30486      745F666C 
 30486      616700
 30487              	.LASF160:
 30488 11d2 73776974 		.ascii	"switch_emg\000"
 30488      63685F65 
 30488      6D6700
 30489              	.LASF133:
 30490 11dd 61637469 		.ascii	"activate_pwm_rescaling\000"
 30490      76617465 
 30490      5F70776D 
 30490      5F726573 
 30490      63616C69 
 30491              	.LASF126:
 30492 11f4 6B5F705F 		.ascii	"k_p_dl\000"
 30492      646C00
 30493              	.LASF93:
 30494 11fb 65737469 		.ascii	"estim_curr\000"
 30494      6D5F6375 
 30494      727200
 30495              	.LASF359:
 30496 1206 6465765F 		.ascii	"dev_pwm_limit\000"
 30496      70776D5F 
 30496      6C696D69 
 30496      7400
 30497              	.LASF168:
 30498 1214 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 30498      5F414443 
 30498      5F73656E 
 30498      736F7273 
 30498      5F706F72 
 30499              	.LASF369:
 30500 122f 456E636F 		.ascii	"Encoder_Value\000"
 30500      6465725F 
 30500      56616C75 
 30500      6500
 30501              	.LASF331:
 30502 123d 636D645F 		.ascii	"cmd_get_encoder_map\000"
 30502      6765745F 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 667


 30502      656E636F 
 30502      6465725F 
 30502      6D617000 
 30503              	.LASF119:
 30504 1251 75736572 		.ascii	"user_id\000"
 30504      5F696400 
 30505              	.LASF12:
 30506 1259 75696E74 		.ascii	"uint32_t\000"
 30506      33325F74 
 30506      00
 30507              	.LASF232:
 30508 1262 6175785F 		.ascii	"aux_float\000"
 30508      666C6F61 
 30508      7400
 30509              	.LASF372:
 30510 126c 494D555F 		.ascii	"IMU_connected\000"
 30510      636F6E6E 
 30510      65637465 
 30510      6400
 30511              	.LASF223:
 30512 127a 4E554D5F 		.ascii	"NUM_MENU\000"
 30512      4D454E55 
 30512      00
 30513              	.LASF235:
 30514 1283 6175785F 		.ascii	"aux_int32\000"
 30514      696E7433 
 30514      3200
 30515              	.LASF118:
 30516 128d 62617564 		.ascii	"baud_rate\000"
 30516      5F726174 
 30516      6500
 30517              	.LASF319:
 30518 1297 745F656E 		.ascii	"t_end\000"
 30518      6400
 30519              	.LASF187:
 30520 129d 66617374 		.ascii	"fast_act_threshold\000"
 30520      5F616374 
 30520      5F746872 
 30520      6573686F 
 30520      6C6400
 30521              	.LASF218:
 30522 12b0 696E666F 		.ascii	"info_type\000"
 30522      5F747970 
 30522      6500
 30523              	.LASF50:
 30524 12ba 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 30524      4745545F 
 30524      494D555F 
 30524      52454144 
 30524      494E4753 
 30525              	.LASF291:
 30526 12cf 4C435243 		.ascii	"LCRChecksum\000"
 30526      6865636B 
 30526      73756D00 
 30527              	.LASF328:
 30528 12db 6B5F696D 		.ascii	"k_imu\000"
 30528      7500
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 668


 30529              	.LASF3:
 30530 12e1 73686F72 		.ascii	"short unsigned int\000"
 30530      7420756E 
 30530      7369676E 
 30530      65642069 
 30530      6E7400
 30531              	.LASF147:
 30532 12f4 73745F65 		.ascii	"st_encoder\000"
 30532      6E636F64 
 30532      657200
 30533              	.LASF349:
 30534 12ff 675F6164 		.ascii	"g_adc_meas\000"
 30534      635F6D65 
 30534      617300
 30535              	.LASF182:
 30536 130a 6D61785F 		.ascii	"max_residual_current\000"
 30536      72657369 
 30536      6475616C 
 30536      5F637572 
 30536      72656E74 
 30537              	.LASF275:
 30538 131f 454E435F 		.ascii	"ENC_L\000"
 30538      4C00
 30539              	.LASF193:
 30540 1325 73745F65 		.ascii	"st_eeprom\000"
 30540      6570726F 
 30540      6D00
 30541              	.LASF220:
 30542 132f 54595045 		.ascii	"TYPES\000"
 30542      5300
 30543              	.LASF344:
 30544 1335 675F7265 		.ascii	"g_ref\000"
 30544      6600
 30545              	.LASF18:
 30546 133b 696E7433 		.ascii	"int32\000"
 30546      3200
 30547              	.LASF366:
 30548 1341 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 30548      4F465F41 
 30548      4E414C4F 
 30548      475F494E 
 30548      50555453 
 30549              	.LASF215:
 30550 1356 696E666F 		.ascii	"infoGet\000"
 30550      47657400 
 30551              	.LASF122:
 30552 135e 73745F6D 		.ascii	"st_motor\000"
 30552      6F746F72 
 30552      00
 30553              	.LASF377:
 30554 1367 6D617374 		.ascii	"master_mode\000"
 30554      65725F6D 
 30554      6F646500 
 30555              	.LASF88:
 30556 1373 46535F46 		.ascii	"FS_FILE\000"
 30556      494C4500 
 30557              	.LASF135:
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 669


 30558 137b 706F735F 		.ascii	"pos_lim_flag\000"
 30558      6C696D5F 
 30558      666C6167 
 30558      00
 30559              	.LASF348:
 30560 1388 675F6D65 		.ascii	"g_measOld\000"
 30560      61734F6C 
 30560      6400
 30561              	.LASF67:
 30562 1392 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 30562      524F4C5F 
 30562      414E474C 
 30562      4500
 30563              	.LASF311:
 30564 13a0 636D645F 		.ascii	"cmd_activate\000"
 30564      61637469 
 30564      76617465 
 30564      00
 30565              	.LASF5:
 30566 13ad 5F5F696E 		.ascii	"__int32_t\000"
 30566      7433325F 
 30566      7400
 30567              	.LASF245:
 30568 13b7 7370695F 		.ascii	"spi_delay_menu\000"
 30568      64656C61 
 30568      795F6D65 
 30568      6E7500
 30569              	.LASF109:
 30570 13c6 77697265 		.ascii	"wire_disp\000"
 30570      5F646973 
 30570      7000
 30571              	.LASF157:
 30572 13d0 656D675F 		.ascii	"emg_max_value\000"
 30572      6D61785F 
 30572      76616C75 
 30572      6500
 30573              	.LASF249:
 30574 13de 43555354 		.ascii	"CUSTOM_PARAM_SET\000"
 30574      4F4D5F50 
 30574      4152414D 
 30574      5F534554 
 30574      00
 30575              	.LASF380:
 30576 13ef 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 30576      72635C63 
 30576      6F6D6D61 
 30576      6E645F70 
 30576      726F6365 
 30577              	.LASF141:
 30578 140b 63757272 		.ascii	"current_limit\000"
 30578      656E745F 
 30578      6C696D69 
 30578      7400
 30579              	.LASF57:
 30580 1419 53485F69 		.ascii	"SH_input_mode\000"
 30580      6E707574 
 30580      5F6D6F64 
ARM GAS  C:\Users\Mattia\AppData\Local\Temp\ccEgr5Vj.s 			page 670


 30580      6500
 30581              	.LASF79:
 30582 1427 54595045 		.ascii	"TYPE_INT8\000"
 30582      5F494E54 
 30582      3800
 30583              	.LASF281:
 30584 1431 494D555F 		.ascii	"IMU_reading_info\000"
 30584      72656164 
 30584      696E675F 
 30584      696E666F 
 30584      00
 30585              	.LASF14:
 30586 1442 75696E74 		.ascii	"uint16\000"
 30586      313600
 30587              	.LASF175:
 30588 1449 72657374 		.ascii	"rest_delay\000"
 30588      5F64656C 
 30588      617900
 30589              	.LASF231:
 30590 1454 6175785F 		.ascii	"aux_str\000"
 30590      73747200 
 30591              	.LASF26:
 30592 145c 434D445F 		.ascii	"CMD_PING\000"
 30592      50494E47 
 30592      00
 30593              	.LASF131:
 30594 1465 6B5F645F 		.ascii	"k_d_c_dl\000"
 30594      635F646C 
 30594      00
 30595              	.LASF208:
 30596 146e 64697265 		.ascii	"direction\000"
 30596      6374696F 
 30596      6E00
 30597              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
