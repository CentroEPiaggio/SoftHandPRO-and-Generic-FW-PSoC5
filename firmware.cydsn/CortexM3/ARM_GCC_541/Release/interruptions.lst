ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         October 01, 2017
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** 
  49:..\src/interruptions.c **** //==============================================================================
  50:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  51:..\src/interruptions.c **** //==============================================================================
  52:..\src/interruptions.c **** // Processing RS-485 data frame:
  53:..\src/interruptions.c **** //
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 3


  54:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  55:..\src/interruptions.c **** // - 1:     Waits for ID;
  56:..\src/interruptions.c **** // - 2:     Data length;
  57:..\src/interruptions.c **** // - 3:     Receive all bytes;
  58:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  59:..\src/interruptions.c **** //
  60:..\src/interruptions.c **** //==============================================================================
  61:..\src/interruptions.c **** 
  62:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  63:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  64:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  65:..\src/interruptions.c ****                                               83,
  66:..\src/interruptions.c ****                                               78,
  67:..\src/interruptions.c ****                                               76,
  68:..\src/interruptions.c ****                                               74,
  69:..\src/interruptions.c ****                                               72,    //5 (14000)
  70:..\src/interruptions.c ****                                               70,
  71:..\src/interruptions.c ****                                               68,
  72:..\src/interruptions.c ****                                               67,
  73:..\src/interruptions.c ****                                               65,
  74:..\src/interruptions.c ****                                               64,    //10 (16500)
  75:..\src/interruptions.c ****                                               63,
  76:..\src/interruptions.c ****                                               62,
  77:..\src/interruptions.c ****                                               61,
  78:..\src/interruptions.c ****                                               60,
  79:..\src/interruptions.c ****                                               59,    //15 (19000)
  80:..\src/interruptions.c ****                                               58,
  81:..\src/interruptions.c ****                                               57,
  82:..\src/interruptions.c ****                                               56,
  83:..\src/interruptions.c ****                                               56,
  84:..\src/interruptions.c ****                                               55,    //20 (21500)
  85:..\src/interruptions.c ****                                               54,
  86:..\src/interruptions.c ****                                               54,
  87:..\src/interruptions.c ****                                               53,
  88:..\src/interruptions.c ****                                               52,
  89:..\src/interruptions.c ****                                               52,    //25 (24000)
  90:..\src/interruptions.c ****                                               52,
  91:..\src/interruptions.c ****                                               51,
  92:..\src/interruptions.c ****                                               51};   //28 (25500)
  93:..\src/interruptions.c **** 
  94:..\src/interruptions.c **** //==============================================================================
  95:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  96:..\src/interruptions.c **** //==============================================================================
  97:..\src/interruptions.c **** 
  98:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 98 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
  99:..\src/interruptions.c **** 
 100:..\src/interruptions.c ****     // Set RS485 flag
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 4


 101:..\src/interruptions.c ****     
 102:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 102 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 103:..\src/interruptions.c ****      
 104:..\src/interruptions.c **** }
  76              		.loc 1 104 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 105:..\src/interruptions.c **** 
 106:..\src/interruptions.c **** //==============================================================================
 107:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 108:..\src/interruptions.c **** //==============================================================================
 109:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 109 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c ****     // Set cycles interrupt flag
 112:..\src/interruptions.c ****     
 113:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 113 0
 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 114:..\src/interruptions.c ****     
 115:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 5


 114              		.loc 1 115 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 116:..\src/interruptions.c **** 
 117:..\src/interruptions.c **** }
 117              		.loc 1 117 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 034F0040 		.word	1073762051
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 118:..\src/interruptions.c **** 
 119:..\src/interruptions.c **** //==============================================================================
 120:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 121:..\src/interruptions.c **** //==============================================================================
 122:..\src/interruptions.c **** // Manage interrupt from RS485 
 123:..\src/interruptions.c **** //==============================================================================
 124:..\src/interruptions.c **** // Processing RS-485 data frame:
 125:..\src/interruptions.c **** //
 126:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 127:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 128:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 129:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 130:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 131:..\src/interruptions.c **** //
 132:..\src/interruptions.c **** //==============================================================================
 133:..\src/interruptions.c **** 
 134:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 134 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 6


 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 135:..\src/interruptions.c **** 
 136:..\src/interruptions.c ****     
 137:..\src/interruptions.c ****     //===========================================     local variables definition
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 140:..\src/interruptions.c ****     
 141:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 142:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 143:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 144:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 145:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 146:..\src/interruptions.c ****     //-------------------------------------------------
 147:..\src/interruptions.c **** 
 148:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 149:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 149 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 150:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 150 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 151:..\src/interruptions.c **** 
 152:..\src/interruptions.c ****     //======================================================     receive routine
 153:..\src/interruptions.c ****     
 154:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 6)){
 160              		.loc 1 154 0
 161 000e D6E0     		b	.L8
 162              	.L28:
 155:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****         // Get next char
 158:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 158 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 159:..\src/interruptions.c ****         
 160:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 160 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CE80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CD000000 		.word	.L12+1
 179 0034 1B010000 		.word	.L13+1
 180 0038 85010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 7


 161:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 162:..\src/interruptions.c ****             case WAIT_START:
 163:..\src/interruptions.c ****             
 164:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 164 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 165:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 165 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 166:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 166 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 167:..\src/interruptions.c ****                 
 168:..\src/interruptions.c ****                 // Check for header configuration package
 169:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 169 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 169 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 170:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 170 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 171:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 171 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 172:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 172 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 173:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 173 0
 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 174:..\src/interruptions.c ****                 }else
 175:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 8


 225              		.loc 1 175 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09C80 		bne	.L8
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 176 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 175:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 175 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09780 		bne	.L8
 177:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 177 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 176:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 176 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09280 		bne	.L8
 178:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 178 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 179:..\src/interruptions.c ****                 break;
 246              		.loc 1 179 0
 247 00a0 8DE0     		b	.L8
 248              	.L11:
 180:..\src/interruptions.c **** 
 181:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 182:..\src/interruptions.c ****             case  WAIT_ID:
 183:..\src/interruptions.c **** 
 184:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 185:..\src/interruptions.c ****                 if (rx_data == c_mem.dev.id || rx_data == 0)
 249              		.loc 1 185 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 252 00a8 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00aa 9A42     		cmp	r2, r3
 254 00ac 02D0     		beq	.L17
 255              		.loc 1 185 0 is_stmt 0 discriminator 1
 256 00ae 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00b0 002B     		cmp	r3, #0
 258 00b2 02D1     		bne	.L18
 259              	.L17:
 186:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 186 0 is_stmt 1
 261 00b4 0023     		movs	r3, #0
 262 00b6 FB71     		strb	r3, [r7, #7]
 263 00b8 01E0     		b	.L19
 264              	.L18:
 187:..\src/interruptions.c ****                 else                //packet is for others
 188:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 188 0
 266 00ba 0123     		movs	r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 9


 267 00bc FB71     		strb	r3, [r7, #7]
 268              	.L19:
 189:..\src/interruptions.c ****                 
 190:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 190 0
 270 00be 494B     		ldr	r3, .L31+12
 271 00c0 0022     		movs	r2, #0
 272 00c2 1A70     		strb	r2, [r3]
 191:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 191 0
 274 00c4 444B     		ldr	r3, .L31
 275 00c6 0222     		movs	r2, #2
 276 00c8 1A70     		strb	r2, [r3]
 192:..\src/interruptions.c ****                 break;
 277              		.loc 1 192 0
 278 00ca 78E0     		b	.L8
 279              	.L12:
 193:..\src/interruptions.c **** 
 194:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 195:..\src/interruptions.c ****             case  WAIT_LENGTH:
 196:..\src/interruptions.c **** 
 197:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 197 0
 281 00cc 454A     		ldr	r2, .L31+12
 282 00ce 7B79     		ldrb	r3, [r7, #5]
 283 00d0 1370     		strb	r3, [r2]
 198:..\src/interruptions.c ****                 // check validity of pack length
 199:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 199 0
 285 00d2 444B     		ldr	r3, .L31+12
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 012B     		cmp	r3, #1
 288 00d8 06D8     		bhi	.L20
 200:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 200 0
 290 00da 424B     		ldr	r3, .L31+12
 291 00dc 0022     		movs	r2, #0
 292 00de 1A70     		strb	r2, [r3]
 201:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 201 0
 294 00e0 3D4B     		ldr	r3, .L31
 295 00e2 0022     		movs	r2, #0
 296 00e4 1A70     		strb	r2, [r3]
 297 00e6 6AE0     		b	.L8
 298              	.L20:
 202:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 202 0
 300 00e8 3E4B     		ldr	r3, .L31+12
 301 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ec 802B     		cmp	r3, #128
 303 00ee 06D9     		bls	.L22
 203:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 203 0
 305 00f0 3C4B     		ldr	r3, .L31+12
 306 00f2 0022     		movs	r2, #0
 307 00f4 1A70     		strb	r2, [r3]
 204:..\src/interruptions.c ****                     state = WAIT_START;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 10


 308              		.loc 1 204 0
 309 00f6 384B     		ldr	r3, .L31
 310 00f8 0022     		movs	r2, #0
 311 00fa 1A70     		strb	r2, [r3]
 312 00fc 5FE0     		b	.L8
 313              	.L22:
 205:..\src/interruptions.c ****                 } else {
 206:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 206 0
 315 00fe 3A4B     		ldr	r3, .L31+16
 316 0100 0022     		movs	r2, #0
 317 0102 1A70     		strb	r2, [r3]
 207:..\src/interruptions.c ****                     
 208:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 208 0
 319 0104 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0106 002B     		cmp	r3, #0
 321 0108 03D1     		bne	.L23
 209:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 209 0
 323 010a 334B     		ldr	r3, .L31
 324 010c 0322     		movs	r2, #3
 325 010e 1A70     		strb	r2, [r3]
 326 0110 55E0     		b	.L8
 327              	.L23:
 210:..\src/interruptions.c ****                     else
 211:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 211 0
 329 0112 314B     		ldr	r3, .L31
 330 0114 0422     		movs	r2, #4
 331 0116 1A70     		strb	r2, [r3]
 212:..\src/interruptions.c ****                 }
 213:..\src/interruptions.c ****                 break;
 332              		.loc 1 213 0
 333 0118 51E0     		b	.L8
 334              	.L13:
 214:..\src/interruptions.c **** 
 215:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 216:..\src/interruptions.c ****             case RECEIVE:
 217:..\src/interruptions.c **** 
 218:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 218 0
 336 011a 334B     		ldr	r3, .L31+16
 337 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011e 1946     		mov	r1, r3
 339 0120 324A     		ldr	r2, .L31+20
 340 0122 7B79     		ldrb	r3, [r7, #5]
 341 0124 5354     		strb	r3, [r2, r1]
 219:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 219 0
 343 0126 304B     		ldr	r3, .L31+16
 344 0128 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 012a 0133     		adds	r3, r3, #1
 346 012c DAB2     		uxtb	r2, r3
 347 012e 2E4B     		ldr	r3, .L31+16
 348 0130 1A70     		strb	r2, [r3]
 220:..\src/interruptions.c ****                 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 11


 221:..\src/interruptions.c ****                 // check end of transmission
 222:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 222 0
 350 0132 2D4B     		ldr	r3, .L31+16
 351 0134 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0136 2B4B     		ldr	r3, .L31+12
 353 0138 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 013a 9A42     		cmp	r2, r3
 355 013c 3FD3     		bcc	.L8
 223:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 224:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 224 0
 357 013e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 0140 002B     		cmp	r3, #0
 359 0142 12D1     		bne	.L25
 225:..\src/interruptions.c ****                         // copying data from buffer to global packet
 226:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 226 0
 361 0144 274B     		ldr	r3, .L31+12
 362 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0148 1A46     		mov	r2, r3
 364 014a 2849     		ldr	r1, .L31+20
 365 014c 2848     		ldr	r0, .L31+24
 366 014e FFF7FEFF 		bl	memcpy
 227:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 227 0
 368 0152 244B     		ldr	r3, .L31+12
 369 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0156 1AB2     		sxth	r2, r3
 371 0158 254B     		ldr	r3, .L31+24
 372 015a A3F88020 		strh	r2, [r3, #128]	@ movhi
 228:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 228 0
 374 015e 244B     		ldr	r3, .L31+24
 375 0160 0122     		movs	r2, #1
 376 0162 83F88420 		strb	r2, [r3, #132]
 229:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 229 0
 378 0166 FFF7FEFF 		bl	commProcess
 379              	.L25:
 230:..\src/interruptions.c ****                     }
 231:..\src/interruptions.c ****                     
 232:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 232 0
 381 016a 1F4B     		ldr	r3, .L31+16
 382 016c 0022     		movs	r2, #0
 383 016e 1A70     		strb	r2, [r3]
 233:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 233 0
 385 0170 1C4B     		ldr	r3, .L31+12
 386 0172 0022     		movs	r2, #0
 387 0174 1A70     		strb	r2, [r3]
 234:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 234 0
 389 0176 184B     		ldr	r3, .L31
 390 0178 0022     		movs	r2, #0
 391 017a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 12


 235:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 235 0
 393 017c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017e 0133     		adds	r3, r3, #1
 395 0180 BB71     		strb	r3, [r7, #6]
 236:..\src/interruptions.c ****                 
 237:..\src/interruptions.c ****                 }
 238:..\src/interruptions.c ****                 break;
 396              		.loc 1 238 0
 397 0182 1CE0     		b	.L8
 398              	.L14:
 239:..\src/interruptions.c **** 
 240:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 241:..\src/interruptions.c ****             case UNLOAD:
 242:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 242 0
 400 0184 174B     		ldr	r3, .L31+12
 401 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0188 013B     		subs	r3, r3, #1
 403 018a DAB2     		uxtb	r2, r3
 404 018c 154B     		ldr	r3, .L31+12
 405 018e 1A70     		strb	r2, [r3]
 406 0190 144B     		ldr	r3, .L31+12
 407 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0194 002B     		cmp	r3, #0
 409 0196 11D1     		bne	.L30
 243:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 243 0
 411 0198 134B     		ldr	r3, .L31+16
 412 019a 0022     		movs	r2, #0
 413 019c 1A70     		strb	r2, [r3]
 244:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 244 0
 415 019e 114B     		ldr	r3, .L31+12
 416 01a0 0022     		movs	r2, #0
 417 01a2 1A70     		strb	r2, [r3]
 245:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 245 0
 419 01a4 0120     		movs	r0, #1
 420 01a6 FFF7FEFF 		bl	RS485_CTS_Write
 246:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 246 0
 422 01aa 0020     		movs	r0, #0
 423 01ac FFF7FEFF 		bl	RS485_CTS_Write
 247:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 247 0
 425 01b0 094B     		ldr	r3, .L31
 426 01b2 0022     		movs	r2, #0
 427 01b4 1A70     		strb	r2, [r3]
 248:..\src/interruptions.c ****                     package_count++;
 428              		.loc 1 248 0
 429 01b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b8 0133     		adds	r3, r3, #1
 431 01ba BB71     		strb	r3, [r7, #6]
 432              	.L30:
 249:..\src/interruptions.c ****                 }
 250:..\src/interruptions.c ****                 break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 13


 433              		.loc 1 250 0
 434 01bc 00BF     		nop
 435              	.L8:
 154:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 436              		.loc 1 154 0
 437 01be FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c2 0346     		mov	r3, r0
 439 01c4 002B     		cmp	r3, #0
 440 01c6 03D0     		beq	.L29
 154:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 441              		.loc 1 154 0 is_stmt 0 discriminator 1
 442 01c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01ca 052B     		cmp	r3, #5
 444 01cc 7FF620AF 		bls	.L28
 445              	.L29:
 251:..\src/interruptions.c ****         }
 252:..\src/interruptions.c ****     }
 253:..\src/interruptions.c **** }
 446              		.loc 1 253 0 is_stmt 1
 447 01d0 00BF     		nop
 448 01d2 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d4 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d6 80BD     		pop	{r7, pc}
 454              	.L32:
 455              		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.10323
 458 01dc 04000000 		.word	rx_queue.10327
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.10325
 461 01e8 08000000 		.word	data_packet_index.10324
 462 01ec 0C000000 		.word	data_packet_buffer.10326
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.global	__aeabi_i2f
 468              		.global	__aeabi_fdiv
 469              		.section	.text.function_scheduler,"ax",%progbits
 470              		.align	2
 471              		.global	function_scheduler
 472              		.thumb
 473              		.thumb_func
 474              		.type	function_scheduler, %function
 475              	function_scheduler:
 476              	.LFB67:
 254:..\src/interruptions.c **** //==============================================================================
 255:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 256:..\src/interruptions.c **** //==============================================================================
 257:..\src/interruptions.c **** // Call all the function with the right frequency
 258:..\src/interruptions.c **** //==============================================================================
 259:..\src/interruptions.c **** // Base frequency 1000 Hz
 260:..\src/interruptions.c **** //==============================================================================
 261:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 14


 262:..\src/interruptions.c **** void function_scheduler(void) {
 477              		.loc 1 262 0
 478              		.cfi_startproc
 479              		@ args = 0, pretend = 0, frame = 2504
 480              		@ frame_needed = 1, uses_anonymous_args = 0
 481 0000 B0B5     		push	{r4, r5, r7, lr}
 482              		.cfi_def_cfa_offset 16
 483              		.cfi_offset 4, -16
 484              		.cfi_offset 5, -12
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 ADF6C81D 		subw	sp, sp, #2504
 488              		.cfi_def_cfa_offset 2520
 489 0006 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
 263:..\src/interruptions.c ****  
 264:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 265:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 266:..\src/interruptions.c ****     char info_[2500] = "";
 491              		.loc 1 266 0
 492 0008 3B1D     		adds	r3, r7, #4
 493 000a 0022     		movs	r2, #0
 494 000c 1A60     		str	r2, [r3]
 495 000e 0433     		adds	r3, r3, #4
 496 0010 4FF41C62 		mov	r2, #2496
 497 0014 0021     		movs	r1, #0
 498 0016 1846     		mov	r0, r3
 499 0018 FFF7FEFF 		bl	memset
 267:..\src/interruptions.c ****     
 268:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x00);
 500              		.loc 1 268 0
 501 001c 0020     		movs	r0, #0
 502 001e FFF7FEFF 		bl	MY_TIMER_REG_Write
 269:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 503              		.loc 1 269 0
 504 0022 FFF7FEFF 		bl	MY_TIMER_ReadCounter
 505 0026 0346     		mov	r3, r0
 506 0028 1A46     		mov	r2, r3
 507 002a A14B     		ldr	r3, .L51
 508 002c 1A80     		strh	r2, [r3]	@ movhi
 270:..\src/interruptions.c **** 
 271:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 272:..\src/interruptions.c **** 
 273:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 509              		.loc 1 273 0
 510 002e 0120     		movs	r0, #1
 511 0030 FFF7FEFF 		bl	ADC_SOC_Write
 274:..\src/interruptions.c ****     
 275:..\src/interruptions.c ****     // Check Interrupt 
 276:..\src/interruptions.c **** 
 277:..\src/interruptions.c ****     if (interrupt_flag){
 512              		.loc 1 277 0
 513 0034 9F4B     		ldr	r3, .L51+4
 514 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0038 002B     		cmp	r3, #0
 516 003a 04D0     		beq	.L34
 278:..\src/interruptions.c ****         interrupt_flag = FALSE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 15


 517              		.loc 1 278 0
 518 003c 9D4B     		ldr	r3, .L51+4
 519 003e 0022     		movs	r2, #0
 520 0040 1A70     		strb	r2, [r3]
 279:..\src/interruptions.c ****         interrupt_manager();
 521              		.loc 1 279 0
 522 0042 FFF7FEFF 		bl	interrupt_manager
 523              	.L34:
 280:..\src/interruptions.c ****     }
 281:..\src/interruptions.c ****     
 282:..\src/interruptions.c **** 
 283:..\src/interruptions.c **** #ifdef SOFTHAND_FW  
 284:..\src/interruptions.c ****        
 285:..\src/interruptions.c ****     //---------------------------------- Get Encoders
 286:..\src/interruptions.c ****     
 287:..\src/interruptions.c ****     // Get CS0 encoder line for RIGHT HAND and CS1 line for LEFT HAND
 288:..\src/interruptions.c ****     if (N_Encoder_Line_Connected[c_mem.motor[0].encoder_line] > 0) {
 524              		.loc 1 288 0
 525 0046 9C4B     		ldr	r3, .L51+8
 526 0048 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 527 004c 1A46     		mov	r2, r3
 528 004e 9B4B     		ldr	r3, .L51+12
 529 0050 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 530 0052 002B     		cmp	r3, #0
 531 0054 15D0     		beq	.L35
 289:..\src/interruptions.c ****         // Change CS only if there are attached encoders on the line
 290:..\src/interruptions.c ****         Change_CS_EncoderLine(c_mem.motor[0].encoder_line);
 532              		.loc 1 290 0
 533 0056 984B     		ldr	r3, .L51+8
 534 0058 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 535 005c 1846     		mov	r0, r3
 536 005e FFF7FEFF 		bl	Change_CS_EncoderLine
 291:..\src/interruptions.c ****         
 292:..\src/interruptions.c ****         encoder_reading_SPI(c_mem.motor[0].encoder_line, 0);    // assoc_motor = 0 for SoftHand
 537              		.loc 1 292 0
 538 0062 954B     		ldr	r3, .L51+8
 539 0064 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 540 0068 0021     		movs	r1, #0
 541 006a 1846     		mov	r0, r3
 542 006c FFF7FEFF 		bl	encoder_reading_SPI
 293:..\src/interruptions.c **** 
 294:..\src/interruptions.c ****         // Check Interrupt     
 295:..\src/interruptions.c ****         
 296:..\src/interruptions.c ****         if (interrupt_flag){
 543              		.loc 1 296 0
 544 0070 904B     		ldr	r3, .L51+4
 545 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 546 0074 002B     		cmp	r3, #0
 547 0076 04D0     		beq	.L35
 297:..\src/interruptions.c ****             interrupt_flag = FALSE;
 548              		.loc 1 297 0
 549 0078 8E4B     		ldr	r3, .L51+4
 550 007a 0022     		movs	r2, #0
 551 007c 1A70     		strb	r2, [r3]
 298:..\src/interruptions.c ****             interrupt_manager();
 552              		.loc 1 298 0
 553 007e FFF7FEFF 		bl	interrupt_manager
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 16


 554              	.L35:
 299:..\src/interruptions.c ****         }
 300:..\src/interruptions.c ****     }
 301:..\src/interruptions.c ****     
 302:..\src/interruptions.c ****     //---------------------------------- Control SH Motor
 303:..\src/interruptions.c ****     
 304:..\src/interruptions.c ****     motor_control_SH();
 555              		.loc 1 304 0
 556 0082 FFF7FEFF 		bl	motor_control_SH
 305:..\src/interruptions.c **** 
 306:..\src/interruptions.c ****     // Check Interrupt 
 307:..\src/interruptions.c **** 
 308:..\src/interruptions.c ****     if (interrupt_flag){
 557              		.loc 1 308 0
 558 0086 8B4B     		ldr	r3, .L51+4
 559 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 560 008a 002B     		cmp	r3, #0
 561 008c 04D0     		beq	.L36
 309:..\src/interruptions.c ****         interrupt_flag = FALSE;
 562              		.loc 1 309 0
 563 008e 894B     		ldr	r3, .L51+4
 564 0090 0022     		movs	r2, #0
 565 0092 1A70     		strb	r2, [r3]
 310:..\src/interruptions.c ****         interrupt_manager();
 566              		.loc 1 310 0
 567 0094 FFF7FEFF 		bl	interrupt_manager
 568              	.L36:
 311:..\src/interruptions.c ****     }
 312:..\src/interruptions.c ****     
 313:..\src/interruptions.c **** #else
 314:..\src/interruptions.c ****     // GENERIC_FW
 315:..\src/interruptions.c **** 
 316:..\src/interruptions.c ****     //---------------------------------- Get Encoders
 317:..\src/interruptions.c **** 
 318:..\src/interruptions.c ****     for (uint8 i = 0; i < N_ENCODER_LINE_MAX; i++) {
 319:..\src/interruptions.c ****         if (N_Encoder_Line_Connected[i] > 0) {
 320:..\src/interruptions.c ****             // Change CS only if there are attached encoders on the line
 321:..\src/interruptions.c ****             Change_CS_EncoderLine(i);
 322:..\src/interruptions.c ****                       
 323:..\src/interruptions.c ****             if (c_mem.motor[0].encoder_line == i) {
 324:..\src/interruptions.c ****                 // Check if the line is used to control motor or not
 325:..\src/interruptions.c ****                 encoder_reading_SPI(i, 0); 
 326:..\src/interruptions.c ****             }
 327:..\src/interruptions.c ****             else {
 328:..\src/interruptions.c ****                 if (c_mem.motor[1].encoder_line == i) {
 329:..\src/interruptions.c ****                     // Check if the line is used to control motor or not
 330:..\src/interruptions.c ****                     encoder_reading_SPI(i, 1); 
 331:..\src/interruptions.c ****                 }
 332:..\src/interruptions.c ****                 else {
 333:..\src/interruptions.c ****                     // Get only raw encoder value
 334:..\src/interruptions.c ****                     ReadEncoderLine(N_Encoder_Line_Connected[i], i);
 335:..\src/interruptions.c ****                     // Values are stored in Encoder_Value[i] vector
 336:..\src/interruptions.c ****                 }
 337:..\src/interruptions.c ****             }
 338:..\src/interruptions.c **** 
 339:..\src/interruptions.c ****             // Check Interrupt     
 340:..\src/interruptions.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 17


 341:..\src/interruptions.c ****             if (interrupt_flag){
 342:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 343:..\src/interruptions.c ****                 interrupt_manager();
 344:..\src/interruptions.c ****             }
 345:..\src/interruptions.c ****         }
 346:..\src/interruptions.c ****     } 
 347:..\src/interruptions.c ****     
 348:..\src/interruptions.c ****     //---------------------------------- Control Motor
 349:..\src/interruptions.c ****     
 350:..\src/interruptions.c ****     // Control 1st motor (always active) according to motor driver type
 351:..\src/interruptions.c ****     motor_control_generic(0);
 352:..\src/interruptions.c ****     
 353:..\src/interruptions.c ****     // Check Interrupt 
 354:..\src/interruptions.c **** 
 355:..\src/interruptions.c ****     if (interrupt_flag){
 356:..\src/interruptions.c ****         interrupt_flag = FALSE;
 357:..\src/interruptions.c ****         interrupt_manager();
 358:..\src/interruptions.c ****     }
 359:..\src/interruptions.c ****     
 360:..\src/interruptions.c ****     // Control 2nd motor (if necessary) according to motor driver type
 361:..\src/interruptions.c ****     if (c_mem.dev.use_2nd_motor_flag == TRUE){
 362:..\src/interruptions.c ****         motor_control_generic(1);
 363:..\src/interruptions.c ****         
 364:..\src/interruptions.c ****         // Check Interrupt 
 365:..\src/interruptions.c **** 
 366:..\src/interruptions.c ****         if (interrupt_flag){
 367:..\src/interruptions.c ****             interrupt_flag = FALSE;
 368:..\src/interruptions.c ****             interrupt_manager();
 369:..\src/interruptions.c ****         }
 370:..\src/interruptions.c ****     }  
 371:..\src/interruptions.c **** #endif
 372:..\src/interruptions.c **** 
 373:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 374:..\src/interruptions.c **** 
 375:..\src/interruptions.c ****     analog_read_end();
 569              		.loc 1 375 0
 570 0098 FFF7FEFF 		bl	analog_read_end
 376:..\src/interruptions.c **** 
 377:..\src/interruptions.c ****     if (interrupt_flag){
 571              		.loc 1 377 0
 572 009c 854B     		ldr	r3, .L51+4
 573 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 00a0 002B     		cmp	r3, #0
 575 00a2 04D0     		beq	.L37
 378:..\src/interruptions.c ****         interrupt_flag = FALSE;
 576              		.loc 1 378 0
 577 00a4 834B     		ldr	r3, .L51+4
 578 00a6 0022     		movs	r2, #0
 579 00a8 1A70     		strb	r2, [r3]
 379:..\src/interruptions.c ****         interrupt_manager();
 580              		.loc 1 379 0
 581 00aa FFF7FEFF 		bl	interrupt_manager
 582              	.L37:
 380:..\src/interruptions.c ****     }
 381:..\src/interruptions.c **** 
 382:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 383:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 18


 384:..\src/interruptions.c ****     overcurrent_control();
 583              		.loc 1 384 0
 584 00ae FFF7FEFF 		bl	overcurrent_control
 385:..\src/interruptions.c ****     
 386:..\src/interruptions.c ****     // Check Interrupt 
 387:..\src/interruptions.c ****     
 388:..\src/interruptions.c ****     if (interrupt_flag){
 585              		.loc 1 388 0
 586 00b2 804B     		ldr	r3, .L51+4
 587 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 588 00b6 002B     		cmp	r3, #0
 589 00b8 04D0     		beq	.L38
 389:..\src/interruptions.c ****         interrupt_flag = FALSE;
 590              		.loc 1 389 0
 591 00ba 7E4B     		ldr	r3, .L51+4
 592 00bc 0022     		movs	r2, #0
 593 00be 1A70     		strb	r2, [r3]
 390:..\src/interruptions.c ****         interrupt_manager();
 594              		.loc 1 390 0
 595 00c0 FFF7FEFF 		bl	interrupt_manager
 596              	.L38:
 391:..\src/interruptions.c ****     }
 392:..\src/interruptions.c **** 
 393:..\src/interruptions.c ****     //---------------------------------- Calibration 
 394:..\src/interruptions.c **** 
 395:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 396:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 597              		.loc 1 396 0
 598 00c4 7E4B     		ldr	r3, .L51+16
 599 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 600 00c8 012B     		cmp	r3, #1
 601 00ca 0ED1     		bne	.L39
 397:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 602              		.loc 1 397 0
 603 00cc 7D4B     		ldr	r3, .L51+20
 604 00ce 1B88     		ldrh	r3, [r3]
 605 00d0 0A2B     		cmp	r3, #10
 606 00d2 04D1     		bne	.L40
 398:..\src/interruptions.c ****             calibration();
 607              		.loc 1 398 0
 608 00d4 FFF7FEFF 		bl	calibration
 399:..\src/interruptions.c ****             counter_calibration = 0;
 609              		.loc 1 399 0
 610 00d8 7A4B     		ldr	r3, .L51+20
 611 00da 0022     		movs	r2, #0
 612 00dc 1A80     		strh	r2, [r3]	@ movhi
 613              	.L40:
 400:..\src/interruptions.c ****         }
 401:..\src/interruptions.c ****         counter_calibration++;
 614              		.loc 1 401 0
 615 00de 794B     		ldr	r3, .L51+20
 616 00e0 1B88     		ldrh	r3, [r3]
 617 00e2 0133     		adds	r3, r3, #1
 618 00e4 9AB2     		uxth	r2, r3
 619 00e6 774B     		ldr	r3, .L51+20
 620 00e8 1A80     		strh	r2, [r3]	@ movhi
 621              	.L39:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 19


 402:..\src/interruptions.c ****     }
 403:..\src/interruptions.c **** 
 404:..\src/interruptions.c ****     // Check Interrupt 
 405:..\src/interruptions.c ****     
 406:..\src/interruptions.c ****     if (interrupt_flag){
 622              		.loc 1 406 0
 623 00ea 724B     		ldr	r3, .L51+4
 624 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 625 00ee 002B     		cmp	r3, #0
 626 00f0 04D0     		beq	.L41
 407:..\src/interruptions.c ****         interrupt_flag = FALSE;
 627              		.loc 1 407 0
 628 00f2 704B     		ldr	r3, .L51+4
 629 00f4 0022     		movs	r2, #0
 630 00f6 1A70     		strb	r2, [r3]
 408:..\src/interruptions.c ****         interrupt_manager();
 631              		.loc 1 408 0
 632 00f8 FFF7FEFF 		bl	interrupt_manager
 633              	.L41:
 409:..\src/interruptions.c ****     }
 410:..\src/interruptions.c ****     
 411:..\src/interruptions.c **** #ifdef SOFTHAND_FW    
 412:..\src/interruptions.c ****     
 413:..\src/interruptions.c ****     //---------------------------------- Rest position check
 414:..\src/interruptions.c **** 
 415:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 416:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE){
 634              		.loc 1 416 0
 635 00fc 6E4B     		ldr	r3, .L51+8
 636 00fe 93F84C32 		ldrb	r3, [r3, #588]	@ zero_extendqisi2
 637 0102 012B     		cmp	r3, #1
 638 0104 17D1     		bne	.L42
 417:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 639              		.loc 1 417 0
 640 0106 6F4B     		ldr	r3, .L51+20
 641 0108 1B88     		ldrh	r3, [r3]
 642 010a 0A2B     		cmp	r3, #10
 643 010c 04D1     		bne	.L43
 418:..\src/interruptions.c ****                 check_rest_position();
 644              		.loc 1 418 0
 645 010e FFF7FEFF 		bl	check_rest_position
 419:..\src/interruptions.c ****                 counter_calibration = 0;
 646              		.loc 1 419 0
 647 0112 6C4B     		ldr	r3, .L51+20
 648 0114 0022     		movs	r2, #0
 649 0116 1A80     		strh	r2, [r3]	@ movhi
 650              	.L43:
 420:..\src/interruptions.c ****         }
 421:..\src/interruptions.c ****         counter_calibration++;
 651              		.loc 1 421 0
 652 0118 6A4B     		ldr	r3, .L51+20
 653 011a 1B88     		ldrh	r3, [r3]
 654 011c 0133     		adds	r3, r3, #1
 655 011e 9AB2     		uxth	r2, r3
 656 0120 684B     		ldr	r3, .L51+20
 657 0122 1A80     		strh	r2, [r3]	@ movhi
 422:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 20


 423:..\src/interruptions.c ****         // Check Interrupt     
 424:..\src/interruptions.c ****         if (interrupt_flag){
 658              		.loc 1 424 0
 659 0124 634B     		ldr	r3, .L51+4
 660 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 661 0128 002B     		cmp	r3, #0
 662 012a 04D0     		beq	.L42
 425:..\src/interruptions.c ****             interrupt_flag = FALSE;
 663              		.loc 1 425 0
 664 012c 614B     		ldr	r3, .L51+4
 665 012e 0022     		movs	r2, #0
 666 0130 1A70     		strb	r2, [r3]
 426:..\src/interruptions.c ****             interrupt_manager();
 667              		.loc 1 426 0
 668 0132 FFF7FEFF 		bl	interrupt_manager
 669              	.L42:
 427:..\src/interruptions.c ****         }
 428:..\src/interruptions.c ****     }
 429:..\src/interruptions.c ****     
 430:..\src/interruptions.c **** #endif    
 431:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 432:..\src/interruptions.c **** 
 433:..\src/interruptions.c ****     cycles_counter_update();
 670              		.loc 1 433 0
 671 0136 FFF7FEFF 		bl	cycles_counter_update
 434:..\src/interruptions.c **** 
 435:..\src/interruptions.c ****     // Check Cycles Interrupt 
 436:..\src/interruptions.c ****     
 437:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 672              		.loc 1 437 0
 673 013a 634B     		ldr	r3, .L51+24
 674 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 675 013e 002B     		cmp	r3, #0
 676 0140 25D0     		beq	.L44
 438:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 677              		.loc 1 438 0
 678 0142 614B     		ldr	r3, .L51+24
 679 0144 0022     		movs	r2, #0
 680 0146 1A70     		strb	r2, [r3]
 439:..\src/interruptions.c **** 
 440:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 441:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 442:..\src/interruptions.c ****         if(can_write) {
 681              		.loc 1 442 0
 682 0148 604B     		ldr	r3, .L51+28
 683 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 684 014c 002B     		cmp	r3, #0
 685 014e 1ED0     		beq	.L44
 443:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 686              		.loc 1 443 0
 687 0150 5F4B     		ldr	r3, .L51+32
 688 0152 0022     		movs	r2, #0
 689 0154 1A70     		strb	r2, [r3]
 444:..\src/interruptions.c ****             
 445:..\src/interruptions.c ****             //Update time variable
 446:..\src/interruptions.c ****             g_mem.cnt.total_time_on = g_mem.cnt.total_time_on + 120;  // Add 120 seconds.
 690              		.loc 1 446 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 21


 691 0156 5F4B     		ldr	r3, .L51+36
 692 0158 9B6D     		ldr	r3, [r3, #88]
 693 015a 7833     		adds	r3, r3, #120
 694 015c 5D4A     		ldr	r2, .L51+36
 695 015e 9365     		str	r3, [r2, #88]
 447:..\src/interruptions.c ****             
 448:..\src/interruptions.c ****             if (c_mem.exp.read_exp_port_flag == EXP_SD_RTC) {
 696              		.loc 1 448 0
 697 0160 554B     		ldr	r3, .L51+8
 698 0162 93F82E32 		ldrb	r3, [r3, #558]	@ zero_extendqisi2
 699 0166 012B     		cmp	r3, #1
 700 0168 11D1     		bne	.L44
 449:..\src/interruptions.c ****                 
 450:..\src/interruptions.c ****                 store_RTC_current_time();
 701              		.loc 1 450 0
 702 016a FFF7FEFF 		bl	store_RTC_current_time
 451:..\src/interruptions.c ****                 
 452:..\src/interruptions.c ****                 //Write in SD card
 453:..\src/interruptions.c ****                 prepare_SD_info(info_);
 703              		.loc 1 453 0
 704 016e 3B1D     		adds	r3, r7, #4
 705 0170 1846     		mov	r0, r3
 706 0172 FFF7FEFF 		bl	prepare_SD_info
 454:..\src/interruptions.c ****                 FS_Write(pFile, info_, strlen(info_));
 707              		.loc 1 454 0
 708 0176 584B     		ldr	r3, .L51+40
 709 0178 1C68     		ldr	r4, [r3]
 710 017a 3B1D     		adds	r3, r7, #4
 711 017c 1846     		mov	r0, r3
 712 017e FFF7FEFF 		bl	strlen
 713 0182 0246     		mov	r2, r0
 714 0184 3B1D     		adds	r3, r7, #4
 715 0186 1946     		mov	r1, r3
 716 0188 2046     		mov	r0, r4
 717 018a FFF7FEFF 		bl	FS_Write
 718              	.L44:
 455:..\src/interruptions.c ****             }
 456:..\src/interruptions.c ****         }
 457:..\src/interruptions.c ****     }
 458:..\src/interruptions.c ****     
 459:..\src/interruptions.c ****     // Check Interrupt 
 460:..\src/interruptions.c ****     
 461:..\src/interruptions.c ****     if (interrupt_flag){
 719              		.loc 1 461 0
 720 018e 494B     		ldr	r3, .L51+4
 721 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 722 0192 002B     		cmp	r3, #0
 723 0194 04D0     		beq	.L45
 462:..\src/interruptions.c ****         interrupt_flag = FALSE;
 724              		.loc 1 462 0
 725 0196 474B     		ldr	r3, .L51+4
 726 0198 0022     		movs	r2, #0
 727 019a 1A70     		strb	r2, [r3]
 463:..\src/interruptions.c ****         interrupt_manager();
 728              		.loc 1 463 0
 729 019c FFF7FEFF 		bl	interrupt_manager
 730              	.L45:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 22


 464:..\src/interruptions.c ****     }
 465:..\src/interruptions.c ****     
 466:..\src/interruptions.c ****     
 467:..\src/interruptions.c ****     //---------------------------------- Check battery
 468:..\src/interruptions.c **** 
 469:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 470:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 731              		.loc 1 470 0
 732 01a0 4E4B     		ldr	r3, .L51+44
 733 01a2 1B88     		ldrh	r3, [r3]
 734 01a4 0A2B     		cmp	r3, #10
 735 01a6 04D1     		bne	.L46
 471:..\src/interruptions.c ****         battery_management();   
 736              		.loc 1 471 0
 737 01a8 FFF7FEFF 		bl	battery_management
 472:..\src/interruptions.c ****         counter_tension_func = 0;
 738              		.loc 1 472 0
 739 01ac 4B4B     		ldr	r3, .L51+44
 740 01ae 0022     		movs	r2, #0
 741 01b0 1A80     		strh	r2, [r3]	@ movhi
 742              	.L46:
 473:..\src/interruptions.c ****     }
 474:..\src/interruptions.c ****     counter_tension_func++;
 743              		.loc 1 474 0
 744 01b2 4A4B     		ldr	r3, .L51+44
 745 01b4 1B88     		ldrh	r3, [r3]
 746 01b6 0133     		adds	r3, r3, #1
 747 01b8 9AB2     		uxth	r2, r3
 748 01ba 484B     		ldr	r3, .L51+44
 749 01bc 1A80     		strh	r2, [r3]	@ movhi
 475:..\src/interruptions.c **** 
 476:..\src/interruptions.c ****     // Check Interrupt 
 477:..\src/interruptions.c ****     
 478:..\src/interruptions.c ****     if (interrupt_flag){
 750              		.loc 1 478 0
 751 01be 3D4B     		ldr	r3, .L51+4
 752 01c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 753 01c2 002B     		cmp	r3, #0
 754 01c4 04D0     		beq	.L47
 479:..\src/interruptions.c ****         interrupt_flag = FALSE;
 755              		.loc 1 479 0
 756 01c6 3B4B     		ldr	r3, .L51+4
 757 01c8 0022     		movs	r2, #0
 758 01ca 1A70     		strb	r2, [r3]
 480:..\src/interruptions.c ****         interrupt_manager();
 759              		.loc 1 480 0
 760 01cc FFF7FEFF 		bl	interrupt_manager
 761              	.L47:
 481:..\src/interruptions.c ****     }
 482:..\src/interruptions.c ****    
 483:..\src/interruptions.c ****     //---------------------------------- Read IMUs
 484:..\src/interruptions.c ****     if (c_mem.imu.read_imu_flag) {
 762              		.loc 1 484 0
 763 01d0 394B     		ldr	r3, .L51+8
 764 01d2 93F80032 		ldrb	r3, [r3, #512]	@ zero_extendqisi2
 765 01d6 002B     		cmp	r3, #0
 766 01d8 0AD0     		beq	.L48
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 23


 485:..\src/interruptions.c ****         ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 767              		.loc 1 485 0
 768 01da FFF7FEFF 		bl	ReadAllIMUs
 486:..\src/interruptions.c ****         
 487:..\src/interruptions.c ****         if (interrupt_flag){
 769              		.loc 1 487 0
 770 01de 354B     		ldr	r3, .L51+4
 771 01e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 772 01e2 002B     		cmp	r3, #0
 773 01e4 04D0     		beq	.L48
 488:..\src/interruptions.c ****             interrupt_flag = FALSE;
 774              		.loc 1 488 0
 775 01e6 334B     		ldr	r3, .L51+4
 776 01e8 0022     		movs	r2, #0
 777 01ea 1A70     		strb	r2, [r3]
 489:..\src/interruptions.c ****             interrupt_manager();
 778              		.loc 1 489 0
 779 01ec FFF7FEFF 		bl	interrupt_manager
 780              	.L48:
 490:..\src/interruptions.c ****         }
 491:..\src/interruptions.c ****     }
 492:..\src/interruptions.c ****    
 493:..\src/interruptions.c ****     //---------------------------------- Update States
 494:..\src/interruptions.c ****     
 495:..\src/interruptions.c ****     // Load k-1 state
 496:..\src/interruptions.c ****     memcpy( &g_emg_measOld, &g_emg_meas, sizeof(g_emg_meas) );
 781              		.loc 1 496 0
 782 01f0 3B4A     		ldr	r2, .L51+48
 783 01f2 3C4B     		ldr	r3, .L51+52
 784 01f4 1446     		mov	r4, r2
 785 01f6 1D46     		mov	r5, r3
 786 01f8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 787 01fa 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 788 01fc 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 789 0200 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 497:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 790              		.loc 1 497 0
 791 0204 384A     		ldr	r2, .L51+56
 792 0206 394B     		ldr	r3, .L51+60
 793 0208 1046     		mov	r0, r2
 794 020a 1946     		mov	r1, r3
 795 020c 6023     		movs	r3, #96
 796 020e 1A46     		mov	r2, r3
 797 0210 FFF7FEFF 		bl	memcpy
 498:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 798              		.loc 1 498 0
 799 0214 364A     		ldr	r2, .L51+64
 800 0216 374B     		ldr	r3, .L51+68
 801 0218 1446     		mov	r4, r2
 802 021a 1D46     		mov	r5, r3
 803 021c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 804 021e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 805 0220 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 806 0224 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 499:..\src/interruptions.c **** 
 500:..\src/interruptions.c ****     // Load k+1 state        
 501:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 24


 807              		.loc 1 501 0
 808 0228 324A     		ldr	r2, .L51+68
 809 022a 334B     		ldr	r3, .L51+72
 810 022c 1446     		mov	r4, r2
 811 022e 1D46     		mov	r5, r3
 812 0230 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 813 0232 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 814 0234 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 815 0238 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 502:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 816              		.loc 1 502 0
 817 023c 2F4A     		ldr	r2, .L51+76
 818 023e 304B     		ldr	r3, .L51+80
 819 0240 1046     		mov	r0, r2
 820 0242 1946     		mov	r1, r3
 821 0244 C823     		movs	r3, #200
 822 0246 1A46     		mov	r2, r3
 823 0248 FFF7FEFF 		bl	memcpy
 503:..\src/interruptions.c ****                 
 504:..\src/interruptions.c ****     if (interrupt_flag){
 824              		.loc 1 504 0
 825 024c 194B     		ldr	r3, .L51+4
 826 024e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 827 0250 002B     		cmp	r3, #0
 828 0252 04D0     		beq	.L49
 505:..\src/interruptions.c ****         interrupt_flag = FALSE;
 829              		.loc 1 505 0
 830 0254 174B     		ldr	r3, .L51+4
 831 0256 0022     		movs	r2, #0
 832 0258 1A70     		strb	r2, [r3]
 506:..\src/interruptions.c ****         interrupt_manager();
 833              		.loc 1 506 0
 834 025a FFF7FEFF 		bl	interrupt_manager
 835              	.L49:
 507:..\src/interruptions.c ****     }
 508:..\src/interruptions.c **** 
 509:..\src/interruptions.c **** #ifdef SOFTHAND_FW
 510:..\src/interruptions.c ****     if (c_mem.motor[0].input_mode == INPUT_MODE_EXTERNAL) {
 836              		.loc 1 510 0
 837 025e 164B     		ldr	r3, .L51+8
 838 0260 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 839 0264 002B     		cmp	r3, #0
 840 0266 02D1     		bne	.L50
 511:..\src/interruptions.c ****         change_ext_ref_flag = FALSE;
 841              		.loc 1 511 0
 842 0268 264B     		ldr	r3, .L51+84
 843 026a 0022     		movs	r2, #0
 844 026c 1A70     		strb	r2, [r3]
 845              	.L50:
 512:..\src/interruptions.c ****     }   
 513:..\src/interruptions.c **** #endif
 514:..\src/interruptions.c **** 
 515:..\src/interruptions.c ****     timer_value = (uint16)MY_TIMER_ReadCounter();
 846              		.loc 1 515 0
 847 026e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 848 0272 0346     		mov	r3, r0
 849 0274 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 25


 850 0276 244B     		ldr	r3, .L51+88
 851 0278 1A80     		strh	r2, [r3]	@ movhi
 516:..\src/interruptions.c ****     cycle_time = ((float)(timer_value0 - timer_value)/1000000.0);
 852              		.loc 1 516 0
 853 027a 0D4B     		ldr	r3, .L51
 854 027c 1B88     		ldrh	r3, [r3]
 855 027e 1A46     		mov	r2, r3
 856 0280 214B     		ldr	r3, .L51+88
 857 0282 1B88     		ldrh	r3, [r3]
 858 0284 D31A     		subs	r3, r2, r3
 859 0286 1846     		mov	r0, r3
 860 0288 FFF7FEFF 		bl	__aeabi_i2f
 861 028c 0346     		mov	r3, r0
 862 028e 1F49     		ldr	r1, .L51+92
 863 0290 1846     		mov	r0, r3
 864 0292 FFF7FEFF 		bl	__aeabi_fdiv
 865 0296 0346     		mov	r3, r0
 866 0298 1A46     		mov	r2, r3
 867 029a 1D4B     		ldr	r3, .L51+96
 868 029c 1A60     		str	r2, [r3]	@ float
 517:..\src/interruptions.c ****     MY_TIMER_REG_Write(0x01);   // reset timer
 869              		.loc 1 517 0
 870 029e 0120     		movs	r0, #1
 871 02a0 FFF7FEFF 		bl	MY_TIMER_REG_Write
 518:..\src/interruptions.c **** 
 519:..\src/interruptions.c **** }
 872              		.loc 1 519 0
 873 02a4 00BF     		nop
 874 02a6 07F6C817 		addw	r7, r7, #2504
 875              		.cfi_def_cfa_offset 16
 876 02aa BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 02ac B0BD     		pop	{r4, r5, r7, pc}
 880              	.L52:
 881 02ae 00BF     		.align	2
 882              	.L51:
 883 02b0 00000000 		.word	timer_value0
 884 02b4 00000000 		.word	interrupt_flag
 885 02b8 00000000 		.word	c_mem
 886 02bc 00000000 		.word	N_Encoder_Line_Connected
 887 02c0 00000000 		.word	calib
 888 02c4 00000000 		.word	counter_calibration.10343
 889 02c8 00000000 		.word	cycles_interrupt_flag
 890 02cc 00000000 		.word	can_write
 891 02d0 00000000 		.word	cycles_status
 892 02d4 00000000 		.word	g_mem
 893 02d8 00000000 		.word	pFile
 894 02dc 02000000 		.word	counter_tension_func.10344
 895 02e0 00000000 		.word	g_emg_measOld
 896 02e4 00000000 		.word	g_emg_meas
 897 02e8 00000000 		.word	g_measOld
 898 02ec 00000000 		.word	g_meas
 899 02f0 00000000 		.word	g_refOld
 900 02f4 00000000 		.word	g_ref
 901 02f8 00000000 		.word	g_refNew
 902 02fc 00000000 		.word	g_imu
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 26


 903 0300 00000000 		.word	g_imuNew
 904 0304 00000000 		.word	change_ext_ref_flag
 905 0308 00000000 		.word	timer_value
 906 030c 00247449 		.word	1232348160
 907 0310 00000000 		.word	cycle_time
 908              		.cfi_endproc
 909              	.LFE67:
 910              		.size	function_scheduler, .-function_scheduler
 911              		.section	.text.motor_control_SH,"ax",%progbits
 912              		.align	2
 913              		.global	motor_control_SH
 914              		.thumb
 915              		.thumb_func
 916              		.type	motor_control_SH, %function
 917              	motor_control_SH:
 918              	.LFB68:
 520:..\src/interruptions.c **** 
 521:..\src/interruptions.c **** //==============================================================================
 522:..\src/interruptions.c **** //                                                        MOTOR CONTROL SOFTHAND
 523:..\src/interruptions.c **** //==============================================================================
 524:..\src/interruptions.c **** #ifdef SOFTHAND_FW
 525:..\src/interruptions.c ****     
 526:..\src/interruptions.c **** void motor_control_SH() {
 919              		.loc 1 526 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 88
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923 0000 80B5     		push	{r7, lr}
 924              		.cfi_def_cfa_offset 8
 925              		.cfi_offset 7, -8
 926              		.cfi_offset 14, -4
 927 0002 96B0     		sub	sp, sp, #88
 928              		.cfi_def_cfa_offset 96
 929 0004 00AF     		add	r7, sp, #0
 930              		.cfi_def_cfa_register 7
 527:..\src/interruptions.c **** 
 528:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 931              		.loc 1 528 0
 932 0006 0023     		movs	r3, #0
 933 0008 7B65     		str	r3, [r7, #84]
 529:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 530:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 531:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
 532:..\src/interruptions.c ****     int32 CYDATA handle_value;
 533:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 534:..\src/interruptions.c **** 
 535:..\src/interruptions.c ****     struct st_motor* SH_MOT = &c_mem.motor[0];      // SoftHand default motor
 934              		.loc 1 535 0
 935 000a A54B     		ldr	r3, .L166
 936 000c 7B64     		str	r3, [r7, #68]
 536:..\src/interruptions.c ****     uint8 SH_ENC_L = SH_MOT->encoder_line;          // Associated encoder line
 937              		.loc 1 536 0
 938 000e 7B6C     		ldr	r3, [r7, #68]
 939 0010 93F86030 		ldrb	r3, [r3, #96]
 940 0014 87F84330 		strb	r3, [r7, #67]
 537:..\src/interruptions.c ****     
 538:..\src/interruptions.c ****     int32 CYDATA k_p = SH_MOT->k_p;  
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 27


 941              		.loc 1 538 0
 942 0018 7B6C     		ldr	r3, [r7, #68]
 943 001a 1B68     		ldr	r3, [r3]
 944 001c FB63     		str	r3, [r7, #60]
 539:..\src/interruptions.c ****     int32 CYDATA k_i = SH_MOT->k_i; 
 945              		.loc 1 539 0
 946 001e 7B6C     		ldr	r3, [r7, #68]
 947 0020 5B68     		ldr	r3, [r3, #4]
 948 0022 BB63     		str	r3, [r7, #56]
 540:..\src/interruptions.c ****     int32 CYDATA k_d = SH_MOT->k_d; 
 949              		.loc 1 540 0
 950 0024 7B6C     		ldr	r3, [r7, #68]
 951 0026 9B68     		ldr	r3, [r3, #8]
 952 0028 7B63     		str	r3, [r7, #52]
 541:..\src/interruptions.c **** 
 542:..\src/interruptions.c ****     int32 CYDATA k_p_c = SH_MOT->k_p_c;  
 953              		.loc 1 542 0
 954 002a 7B6C     		ldr	r3, [r7, #68]
 955 002c DB68     		ldr	r3, [r3, #12]
 956 002e 3B63     		str	r3, [r7, #48]
 543:..\src/interruptions.c ****     int32 CYDATA k_i_c = SH_MOT->k_i_c; 
 957              		.loc 1 543 0
 958 0030 7B6C     		ldr	r3, [r7, #68]
 959 0032 1B69     		ldr	r3, [r3, #16]
 960 0034 FB62     		str	r3, [r7, #44]
 544:..\src/interruptions.c ****     int32 CYDATA k_d_c = SH_MOT->k_d_c;   
 961              		.loc 1 544 0
 962 0036 7B6C     		ldr	r3, [r7, #68]
 963 0038 5B69     		ldr	r3, [r3, #20]
 964 003a BB62     		str	r3, [r7, #40]
 545:..\src/interruptions.c **** 
 546:..\src/interruptions.c ****     int32 CYDATA k_p_dl = SH_MOT->k_p_dl;  
 965              		.loc 1 546 0
 966 003c 7B6C     		ldr	r3, [r7, #68]
 967 003e 9B69     		ldr	r3, [r3, #24]
 968 0040 7B62     		str	r3, [r7, #36]
 547:..\src/interruptions.c ****     int32 CYDATA k_i_dl = SH_MOT->k_i_dl; 
 969              		.loc 1 547 0
 970 0042 7B6C     		ldr	r3, [r7, #68]
 971 0044 DB69     		ldr	r3, [r3, #28]
 972 0046 3B62     		str	r3, [r7, #32]
 548:..\src/interruptions.c ****     int32 CYDATA k_d_dl = SH_MOT->k_d_dl;
 973              		.loc 1 548 0
 974 0048 7B6C     		ldr	r3, [r7, #68]
 975 004a 1B6A     		ldr	r3, [r3, #32]
 976 004c FB61     		str	r3, [r7, #28]
 549:..\src/interruptions.c ****     
 550:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = SH_MOT->k_p_c_dl;  
 977              		.loc 1 550 0
 978 004e 7B6C     		ldr	r3, [r7, #68]
 979 0050 5B6A     		ldr	r3, [r3, #36]
 980 0052 BB61     		str	r3, [r7, #24]
 551:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = SH_MOT->k_i_c_dl; 
 981              		.loc 1 551 0
 982 0054 7B6C     		ldr	r3, [r7, #68]
 983 0056 9B6A     		ldr	r3, [r3, #40]
 984 0058 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 28


 552:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = SH_MOT->k_d_c_dl;   
 985              		.loc 1 552 0
 986 005a 7B6C     		ldr	r3, [r7, #68]
 987 005c DB6A     		ldr	r3, [r3, #44]
 988 005e 3B61     		str	r3, [r7, #16]
 553:..\src/interruptions.c **** 
 554:..\src/interruptions.c ****     // Static Variables
 555:..\src/interruptions.c **** 
 556:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
 557:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
 558:..\src/interruptions.c ****     
 559:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
 560:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
 561:..\src/interruptions.c ****     static int32 prev_pwm;
 562:..\src/interruptions.c **** 
 563:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
 564:..\src/interruptions.c ****     static uint32 position_counter = 0;
 565:..\src/interruptions.c ****     static uint8 current_emg = 0;   // 0 NONE
 566:..\src/interruptions.c ****                                     // 1 EMG 1
 567:..\src/interruptions.c ****                                     // 2 EMG 2
 568:..\src/interruptions.c ****                                     // wait for both to get down
 569:..\src/interruptions.c ****     
 570:..\src/interruptions.c **** 
 571:..\src/interruptions.c ****     err_emg_1 = g_emg_meas.emg[0] - c_mem.emg.emg_threshold[0];
 989              		.loc 1 571 0
 990 0060 904B     		ldr	r3, .L166+4
 991 0062 1B68     		ldr	r3, [r3]
 992 0064 904A     		ldr	r2, .L166+8
 993 0066 B2F8F021 		ldrh	r2, [r2, #496]
 994 006a 9B1A     		subs	r3, r3, r2
 995 006c FB60     		str	r3, [r7, #12]
 572:..\src/interruptions.c ****     err_emg_2 = g_emg_meas.emg[1] - c_mem.emg.emg_threshold[1];
 996              		.loc 1 572 0
 997 006e 8D4B     		ldr	r3, .L166+4
 998 0070 5B68     		ldr	r3, [r3, #4]
 999 0072 8D4A     		ldr	r2, .L166+8
 1000 0074 B2F8F221 		ldrh	r2, [r2, #498]
 1001 0078 9B1A     		subs	r3, r3, r2
 1002 007a BB60     		str	r3, [r7, #8]
 573:..\src/interruptions.c **** 
 574:..\src/interruptions.c ****     // =========================== POSITION INPUT ==============================            
 575:..\src/interruptions.c ****     switch(SH_MOT->input_mode) {
 1003              		.loc 1 575 0
 1004 007c 7B6C     		ldr	r3, [r7, #68]
 1005 007e 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 1006 0082 013B     		subs	r3, r3, #1
 1007 0084 042B     		cmp	r3, #4
 1008 0086 00F2A681 		bhi	.L158
 1009 008a 01A2     		adr	r2, .L56
 1010 008c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1011              		.p2align 2
 1012              	.L56:
 1013 0090 A5000000 		.word	.L55+1
 1014 0094 8B010000 		.word	.L57+1
 1015 0098 B9010000 		.word	.L58+1
 1016 009c 21020000 		.word	.L59+1
 1017 00a0 FD020000 		.word	.L60+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 29


 1018              		.p2align 1
 1019              	.L55:
 576:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 577:..\src/interruptions.c **** 
 578:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 579:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 580:..\src/interruptions.c ****             if (c_mem.enc[SH_ENC_L].double_encoder_on_off) 
 1020              		.loc 1 580 0
 1021 00a4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1022 00a8 7F49     		ldr	r1, .L166+8
 1023 00aa 1346     		mov	r3, r2
 1024 00ac 5B00     		lsls	r3, r3, #1
 1025 00ae 1344     		add	r3, r3, r2
 1026 00b0 1B01     		lsls	r3, r3, #4
 1027 00b2 0B44     		add	r3, r3, r1
 1028 00b4 03F5D873 		add	r3, r3, #432
 1029 00b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1030 00ba 002B     		cmp	r3, #0
 1031 00bc 1CD0     		beq	.L61
 581:..\src/interruptions.c ****                 handle_value = (g_meas[SH_ENC_L].pos[2] * c_mem.enc[SH_ENC_L].motor_handle_ratio) +
 1032              		.loc 1 581 0
 1033 00be 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1034 00c2 7A49     		ldr	r1, .L166+12
 1035 00c4 1346     		mov	r3, r2
 1036 00c6 5B00     		lsls	r3, r3, #1
 1037 00c8 1344     		add	r3, r3, r2
 1038 00ca 1B01     		lsls	r3, r3, #4
 1039 00cc 0B44     		add	r3, r3, r1
 1040 00ce 0833     		adds	r3, r3, #8
 1041 00d0 1968     		ldr	r1, [r3]
 1042 00d2 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1043 00d6 7448     		ldr	r0, .L166+8
 1044 00d8 1346     		mov	r3, r2
 1045 00da 5B00     		lsls	r3, r3, #1
 1046 00dc 1344     		add	r3, r3, r2
 1047 00de 1B01     		lsls	r3, r3, #4
 1048 00e0 0344     		add	r3, r3, r0
 1049 00e2 03F2B113 		addw	r3, r3, #433
 1050 00e6 93F90030 		ldrsb	r3, [r3]
 1051 00ea 03FB01F2 		mul	r2, r3, r1
 1052 00ee 7B6C     		ldr	r3, [r7, #68]
 1053 00f0 5B6B     		ldr	r3, [r3, #52]
 1054 00f2 1344     		add	r3, r3, r2
 1055 00f4 BB64     		str	r3, [r7, #72]
 1056 00f6 1BE0     		b	.L62
 1057              	.L61:
 582:..\src/interruptions.c ****             else
 583:..\src/interruptions.c ****                 handle_value = (g_meas[SH_ENC_L].pos[1] * c_mem.enc[SH_ENC_L].motor_handle_ratio) +
 1058              		.loc 1 583 0
 1059 00f8 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1060 00fc 6B49     		ldr	r1, .L166+12
 1061 00fe 1346     		mov	r3, r2
 1062 0100 5B00     		lsls	r3, r3, #1
 1063 0102 1344     		add	r3, r3, r2
 1064 0104 1B01     		lsls	r3, r3, #4
 1065 0106 0B44     		add	r3, r3, r1
 1066 0108 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 30


 1067 010a 1968     		ldr	r1, [r3]
 1068 010c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1069 0110 6548     		ldr	r0, .L166+8
 1070 0112 1346     		mov	r3, r2
 1071 0114 5B00     		lsls	r3, r3, #1
 1072 0116 1344     		add	r3, r3, r2
 1073 0118 1B01     		lsls	r3, r3, #4
 1074 011a 0344     		add	r3, r3, r0
 1075 011c 03F2B113 		addw	r3, r3, #433
 1076 0120 93F90030 		ldrsb	r3, [r3]
 1077 0124 03FB01F2 		mul	r2, r3, r1
 1078 0128 7B6C     		ldr	r3, [r7, #68]
 1079 012a 5B6B     		ldr	r3, [r3, #52]
 1080 012c 1344     		add	r3, r3, r2
 1081 012e BB64     		str	r3, [r7, #72]
 1082              	.L62:
 584:..\src/interruptions.c ****             
 585:..\src/interruptions.c **** 
 586:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 587:..\src/interruptions.c ****             if (((handle_value - g_refOld[0].pos) > SH_MOT->max_step_pos) && (SH_MOT->max_step_pos 
 1083              		.loc 1 587 0
 1084 0130 5F4B     		ldr	r3, .L166+16
 1085 0132 1B68     		ldr	r3, [r3]
 1086 0134 BA6C     		ldr	r2, [r7, #72]
 1087 0136 D21A     		subs	r2, r2, r3
 1088 0138 7B6C     		ldr	r3, [r7, #68]
 1089 013a 1B6C     		ldr	r3, [r3, #64]
 1090 013c 9A42     		cmp	r2, r3
 1091 013e 0BDD     		ble	.L63
 1092              		.loc 1 587 0 is_stmt 0 discriminator 1
 1093 0140 7B6C     		ldr	r3, [r7, #68]
 1094 0142 1B6C     		ldr	r3, [r3, #64]
 1095 0144 002B     		cmp	r3, #0
 1096 0146 07D0     		beq	.L63
 588:..\src/interruptions.c ****                 g_ref[0].pos += SH_MOT->max_step_pos;
 1097              		.loc 1 588 0 is_stmt 1
 1098 0148 5A4B     		ldr	r3, .L166+20
 1099 014a 1A68     		ldr	r2, [r3]
 1100 014c 7B6C     		ldr	r3, [r7, #68]
 1101 014e 1B6C     		ldr	r3, [r3, #64]
 1102 0150 1344     		add	r3, r3, r2
 1103 0152 584A     		ldr	r2, .L166+20
 1104 0154 1360     		str	r3, [r2]
 1105 0156 17E0     		b	.L64
 1106              	.L63:
 589:..\src/interruptions.c ****             else {
 590:..\src/interruptions.c ****                 if (((handle_value - g_refOld[0].pos) < SH_MOT->max_step_neg) && (SH_MOT->max_step_
 1107              		.loc 1 590 0
 1108 0158 554B     		ldr	r3, .L166+16
 1109 015a 1B68     		ldr	r3, [r3]
 1110 015c BA6C     		ldr	r2, [r7, #72]
 1111 015e D21A     		subs	r2, r2, r3
 1112 0160 7B6C     		ldr	r3, [r7, #68]
 1113 0162 DB6B     		ldr	r3, [r3, #60]
 1114 0164 9A42     		cmp	r2, r3
 1115 0166 0BDA     		bge	.L65
 1116              		.loc 1 590 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 31


 1117 0168 7B6C     		ldr	r3, [r7, #68]
 1118 016a DB6B     		ldr	r3, [r3, #60]
 1119 016c 002B     		cmp	r3, #0
 1120 016e 07D0     		beq	.L65
 591:..\src/interruptions.c ****                     g_ref[0].pos += SH_MOT->max_step_neg;
 1121              		.loc 1 591 0 is_stmt 1
 1122 0170 504B     		ldr	r3, .L166+20
 1123 0172 1A68     		ldr	r2, [r3]
 1124 0174 7B6C     		ldr	r3, [r7, #68]
 1125 0176 DB6B     		ldr	r3, [r3, #60]
 1126 0178 1344     		add	r3, r3, r2
 1127 017a 4E4A     		ldr	r2, .L166+20
 1128 017c 1360     		str	r3, [r2]
 1129 017e 03E0     		b	.L64
 1130              	.L65:
 592:..\src/interruptions.c ****                 else
 593:..\src/interruptions.c ****                     g_ref[0].pos = handle_value;
 1131              		.loc 1 593 0
 1132 0180 4C4A     		ldr	r2, .L166+20
 1133 0182 BB6C     		ldr	r3, [r7, #72]
 1134 0184 1360     		str	r3, [r2]
 594:..\src/interruptions.c ****             }
 595:..\src/interruptions.c ****             break;
 1135              		.loc 1 595 0
 1136 0186 29E1     		b	.L66
 1137              	.L64:
 1138 0188 28E1     		b	.L66
 1139              	.L57:
 596:..\src/interruptions.c ****             
 597:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 598:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1140              		.loc 1 598 0
 1141 018a FB68     		ldr	r3, [r7, #12]
 1142 018c 002B     		cmp	r3, #0
 1143 018e 0FDD     		ble	.L67
 599:..\src/interruptions.c ****                 g_ref[0].pos = (err_emg_1 * g_mem.motor[0].pos_lim_sup) / (1024 - c_mem.emg.emg_thr
 1144              		.loc 1 599 0
 1145 0190 494B     		ldr	r3, .L166+24
 1146 0192 D3F8E830 		ldr	r3, [r3, #232]
 1147 0196 FA68     		ldr	r2, [r7, #12]
 1148 0198 02FB03F2 		mul	r2, r2, r3
 1149 019c 424B     		ldr	r3, .L166+8
 1150 019e B3F8F031 		ldrh	r3, [r3, #496]
 1151 01a2 C3F58063 		rsb	r3, r3, #1024
 1152 01a6 92FBF3F3 		sdiv	r3, r2, r3
 1153 01aa 424A     		ldr	r2, .L166+20
 1154 01ac 1360     		str	r3, [r2]
 600:..\src/interruptions.c ****             else
 601:..\src/interruptions.c ****                 g_ref[0].pos = 0;
 602:..\src/interruptions.c ****             break;
 1155              		.loc 1 602 0
 1156 01ae 15E1     		b	.L66
 1157              	.L67:
 601:..\src/interruptions.c ****             break;
 1158              		.loc 1 601 0
 1159 01b0 404B     		ldr	r3, .L166+20
 1160 01b2 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 32


 1161 01b4 1A60     		str	r2, [r3]
 1162              		.loc 1 602 0
 1163 01b6 11E1     		b	.L66
 1164              	.L58:
 603:..\src/interruptions.c **** 
 604:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 605:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1165              		.loc 1 605 0
 1166 01b8 3D4B     		ldr	r3, .L166+16
 1167 01ba 1B68     		ldr	r3, [r3]
 1168 01bc 3D4A     		ldr	r2, .L166+20
 1169 01be 1360     		str	r3, [r2]
 606:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 1170              		.loc 1 606 0
 1171 01c0 FB68     		ldr	r3, [r7, #12]
 1172 01c2 002B     		cmp	r3, #0
 1173 01c4 13DD     		ble	.L69
 607:..\src/interruptions.c ****                 g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * (int)g_mem.emg.emg_speed * 2) / (1024
 1174              		.loc 1 607 0
 1175 01c6 3A4B     		ldr	r3, .L166+16
 1176 01c8 1A68     		ldr	r2, [r3]
 1177 01ca 3B4B     		ldr	r3, .L166+24
 1178 01cc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1179 01d0 1946     		mov	r1, r3
 1180 01d2 FB68     		ldr	r3, [r7, #12]
 1181 01d4 03FB01F3 		mul	r3, r3, r1
 1182 01d8 5900     		lsls	r1, r3, #1
 1183 01da 334B     		ldr	r3, .L166+8
 1184 01dc B3F8F031 		ldrh	r3, [r3, #496]
 1185 01e0 C3F58063 		rsb	r3, r3, #1024
 1186 01e4 91FBF3F3 		sdiv	r3, r1, r3
 1187 01e8 1344     		add	r3, r3, r2
 1188 01ea 324A     		ldr	r2, .L166+20
 1189 01ec 1360     		str	r3, [r2]
 1190              	.L69:
 608:..\src/interruptions.c ****             }
 609:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1191              		.loc 1 609 0
 1192 01ee BB68     		ldr	r3, [r7, #8]
 1193 01f0 002B     		cmp	r3, #0
 1194 01f2 40F3F280 		ble	.L159
 610:..\src/interruptions.c ****                 g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * (int)g_mem.emg.emg_speed * 2) / (1024
 1195              		.loc 1 610 0
 1196 01f6 2E4B     		ldr	r3, .L166+16
 1197 01f8 1A68     		ldr	r2, [r3]
 1198 01fa 2F4B     		ldr	r3, .L166+24
 1199 01fc 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1200 0200 1946     		mov	r1, r3
 1201 0202 BB68     		ldr	r3, [r7, #8]
 1202 0204 03FB01F3 		mul	r3, r3, r1
 1203 0208 5900     		lsls	r1, r3, #1
 1204 020a 274B     		ldr	r3, .L166+8
 1205 020c B3F8F231 		ldrh	r3, [r3, #498]
 1206 0210 C3F58063 		rsb	r3, r3, #1024
 1207 0214 91FBF3F3 		sdiv	r3, r1, r3
 1208 0218 D31A     		subs	r3, r2, r3
 1209 021a 264A     		ldr	r2, .L166+20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 33


 1210 021c 1360     		str	r3, [r2]
 611:..\src/interruptions.c ****             }
 612:..\src/interruptions.c ****             break;
 1211              		.loc 1 612 0
 1212 021e DCE0     		b	.L159
 1213              	.L59:
 613:..\src/interruptions.c **** 
 614:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 615:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1214              		.loc 1 615 0
 1215 0220 234B     		ldr	r3, .L166+16
 1216 0222 1B68     		ldr	r3, [r3]
 1217 0224 234A     		ldr	r2, .L166+20
 1218 0226 1360     		str	r3, [r2]
 616:..\src/interruptions.c ****             switch (current_emg) {
 1219              		.loc 1 616 0
 1220 0228 244B     		ldr	r3, .L166+28
 1221 022a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222 022c 012B     		cmp	r3, #1
 1223 022e 1AD0     		beq	.L72
 1224 0230 022B     		cmp	r3, #2
 1225 0232 45D0     		beq	.L73
 1226 0234 002B     		cmp	r3, #0
 1227 0236 00D0     		beq	.L74
 617:..\src/interruptions.c ****                 case 0:
 618:..\src/interruptions.c ****                     // Look for the first EMG passing the threshold
 619:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 620:..\src/interruptions.c ****                         current_emg = 1;
 621:..\src/interruptions.c ****                         break;
 622:..\src/interruptions.c ****                     }
 623:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 624:..\src/interruptions.c ****                         current_emg = 2;
 625:..\src/interruptions.c ****                         break;
 626:..\src/interruptions.c ****                     }
 627:..\src/interruptions.c ****                     break;
 628:..\src/interruptions.c **** 
 629:..\src/interruptions.c ****                 case 1:
 630:..\src/interruptions.c ****                     // EMG 1 is first
 631:..\src/interruptions.c ****                     if (err_emg_1 < 0) {
 632:..\src/interruptions.c ****                         current_emg = 0;
 633:..\src/interruptions.c ****                         break;
 634:..\src/interruptions.c ****                     }
 635:..\src/interruptions.c ****                     g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (1024
 636:..\src/interruptions.c ****                     break;
 637:..\src/interruptions.c **** 
 638:..\src/interruptions.c ****                 case 2:
 639:..\src/interruptions.c ****                     // EMG 2 is first
 640:..\src/interruptions.c ****                     if (err_emg_2 < 0) {
 641:..\src/interruptions.c ****                         current_emg = 0;
 642:..\src/interruptions.c ****                         break;
 643:..\src/interruptions.c ****                     }
 644:..\src/interruptions.c ****                     g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * g_mem.emg.emg_speed << 2) / (1024
 645:..\src/interruptions.c ****                     break;
 646:..\src/interruptions.c **** 
 647:..\src/interruptions.c ****                 default:
 648:..\src/interruptions.c ****                     break;
 1228              		.loc 1 648 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 34


 1229 0238 5FE0     		b	.L76
 1230              	.L74:
 619:..\src/interruptions.c ****                         current_emg = 1;
 1231              		.loc 1 619 0
 1232 023a FB68     		ldr	r3, [r7, #12]
 1233 023c 002B     		cmp	r3, #0
 1234 023e 07DD     		ble	.L75
 619:..\src/interruptions.c ****                         current_emg = 1;
 1235              		.loc 1 619 0 is_stmt 0 discriminator 1
 1236 0240 FA68     		ldr	r2, [r7, #12]
 1237 0242 BB68     		ldr	r3, [r7, #8]
 1238 0244 9A42     		cmp	r2, r3
 1239 0246 03DD     		ble	.L75
 620:..\src/interruptions.c ****                         break;
 1240              		.loc 1 620 0 is_stmt 1
 1241 0248 1C4B     		ldr	r3, .L166+28
 1242 024a 0122     		movs	r2, #1
 1243 024c 1A70     		strb	r2, [r3]
 621:..\src/interruptions.c ****                     }
 1244              		.loc 1 621 0
 1245 024e 54E0     		b	.L76
 1246              	.L75:
 623:..\src/interruptions.c ****                         current_emg = 2;
 1247              		.loc 1 623 0
 1248 0250 BB68     		ldr	r3, [r7, #8]
 1249 0252 002B     		cmp	r3, #0
 1250 0254 50DD     		ble	.L160
 623:..\src/interruptions.c ****                         current_emg = 2;
 1251              		.loc 1 623 0 is_stmt 0 discriminator 1
 1252 0256 BA68     		ldr	r2, [r7, #8]
 1253 0258 FB68     		ldr	r3, [r7, #12]
 1254 025a 9A42     		cmp	r2, r3
 1255 025c 4CDD     		ble	.L160
 624:..\src/interruptions.c ****                         break;
 1256              		.loc 1 624 0 is_stmt 1
 1257 025e 174B     		ldr	r3, .L166+28
 1258 0260 0222     		movs	r2, #2
 1259 0262 1A70     		strb	r2, [r3]
 625:..\src/interruptions.c ****                     }
 1260              		.loc 1 625 0
 1261 0264 49E0     		b	.L76
 1262              	.L72:
 631:..\src/interruptions.c ****                         current_emg = 0;
 1263              		.loc 1 631 0
 1264 0266 FB68     		ldr	r3, [r7, #12]
 1265 0268 002B     		cmp	r3, #0
 1266 026a 03DA     		bge	.L78
 632:..\src/interruptions.c ****                         break;
 1267              		.loc 1 632 0
 1268 026c 134B     		ldr	r3, .L166+28
 1269 026e 0022     		movs	r2, #0
 1270 0270 1A70     		strb	r2, [r3]
 633:..\src/interruptions.c ****                     }
 1271              		.loc 1 633 0
 1272 0272 42E0     		b	.L76
 1273              	.L78:
 635:..\src/interruptions.c ****                     break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 35


 1274              		.loc 1 635 0
 1275 0274 0E4B     		ldr	r3, .L166+16
 1276 0276 1A68     		ldr	r2, [r3]
 1277 0278 0F4B     		ldr	r3, .L166+24
 1278 027a 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1279 027e 1946     		mov	r1, r3
 1280 0280 FB68     		ldr	r3, [r7, #12]
 1281 0282 03FB01F3 		mul	r3, r3, r1
 1282 0286 9900     		lsls	r1, r3, #2
 1283 0288 074B     		ldr	r3, .L166+8
 1284 028a B3F8F031 		ldrh	r3, [r3, #496]
 1285 028e C3F58063 		rsb	r3, r3, #1024
 1286 0292 91FBF3F3 		sdiv	r3, r1, r3
 1287 0296 1344     		add	r3, r3, r2
 1288 0298 064A     		ldr	r2, .L166+20
 1289 029a 1360     		str	r3, [r2]
 636:..\src/interruptions.c **** 
 1290              		.loc 1 636 0
 1291 029c 2DE0     		b	.L76
 1292              	.L167:
 1293 029e 00BF     		.align	2
 1294              	.L166:
 1295 02a0 B0000000 		.word	c_mem+176
 1296 02a4 00000000 		.word	g_emg_meas
 1297 02a8 00000000 		.word	c_mem
 1298 02ac 00000000 		.word	g_meas
 1299 02b0 00000000 		.word	g_refOld
 1300 02b4 00000000 		.word	g_ref
 1301 02b8 00000000 		.word	g_mem
 1302 02bc 8C000000 		.word	current_emg.10376
 1303              	.L73:
 640:..\src/interruptions.c ****                         current_emg = 0;
 1304              		.loc 1 640 0
 1305 02c0 BB68     		ldr	r3, [r7, #8]
 1306 02c2 002B     		cmp	r3, #0
 1307 02c4 03DA     		bge	.L79
 641:..\src/interruptions.c ****                         break;
 1308              		.loc 1 641 0
 1309 02c6 A14B     		ldr	r3, .L168
 1310 02c8 0022     		movs	r2, #0
 1311 02ca 1A70     		strb	r2, [r3]
 642:..\src/interruptions.c ****                     }
 1312              		.loc 1 642 0
 1313 02cc 15E0     		b	.L76
 1314              	.L79:
 644:..\src/interruptions.c ****                     break;
 1315              		.loc 1 644 0
 1316 02ce A04B     		ldr	r3, .L168+4
 1317 02d0 1A68     		ldr	r2, [r3]
 1318 02d2 A04B     		ldr	r3, .L168+8
 1319 02d4 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1320 02d8 1946     		mov	r1, r3
 1321 02da BB68     		ldr	r3, [r7, #8]
 1322 02dc 03FB01F3 		mul	r3, r3, r1
 1323 02e0 9900     		lsls	r1, r3, #2
 1324 02e2 9D4B     		ldr	r3, .L168+12
 1325 02e4 B3F8F231 		ldrh	r3, [r3, #498]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 36


 1326 02e8 C3F58063 		rsb	r3, r3, #1024
 1327 02ec 91FBF3F3 		sdiv	r3, r1, r3
 1328 02f0 D31A     		subs	r3, r2, r3
 1329 02f2 9A4A     		ldr	r2, .L168+16
 1330 02f4 1360     		str	r3, [r2]
 645:..\src/interruptions.c **** 
 1331              		.loc 1 645 0
 1332 02f6 00E0     		b	.L76
 1333              	.L160:
 627:..\src/interruptions.c **** 
 1334              		.loc 1 627 0
 1335 02f8 00BF     		nop
 1336              	.L76:
 649:..\src/interruptions.c ****             }
 650:..\src/interruptions.c ****             break;
 1337              		.loc 1 650 0 discriminator 1
 1338 02fa 6FE0     		b	.L66
 1339              	.L60:
 651:..\src/interruptions.c **** 
 652:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 653:..\src/interruptions.c ****             g_ref[0].pos = g_refOld[0].pos;
 1340              		.loc 1 653 0
 1341 02fc 944B     		ldr	r3, .L168+4
 1342 02fe 1B68     		ldr	r3, [r3]
 1343 0300 964A     		ldr	r2, .L168+16
 1344 0302 1360     		str	r3, [r2]
 654:..\src/interruptions.c ****             switch (current_emg) {
 1345              		.loc 1 654 0
 1346 0304 914B     		ldr	r3, .L168
 1347 0306 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1348 0308 012B     		cmp	r3, #1
 1349 030a 1AD0     		beq	.L81
 1350 030c 022B     		cmp	r3, #2
 1351 030e 3AD0     		beq	.L82
 1352 0310 002B     		cmp	r3, #0
 1353 0312 00D0     		beq	.L83
 655:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 656:..\src/interruptions.c ****                 case 0:
 657:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
 658:..\src/interruptions.c ****                         current_emg = 1;
 659:..\src/interruptions.c ****                         break;
 660:..\src/interruptions.c ****                     }
 661:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
 662:..\src/interruptions.c ****                         current_emg = 2;
 663:..\src/interruptions.c ****                         break;
 664:..\src/interruptions.c ****                     }
 665:..\src/interruptions.c ****                     break;
 666:..\src/interruptions.c **** 
 667:..\src/interruptions.c ****                 // EMG 1 is first
 668:..\src/interruptions.c ****                 case 1:
 669:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 670:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 671:..\src/interruptions.c ****                         current_emg = 0;
 672:..\src/interruptions.c ****                         break;
 673:..\src/interruptions.c ****                     }
 674:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 675:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 37


 676:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
 677:..\src/interruptions.c ****                     
 678:..\src/interruptions.c ****                     break;
 679:..\src/interruptions.c **** 
 680:..\src/interruptions.c ****                 // EMG 2 is first
 681:..\src/interruptions.c ****                 case 2:
 682:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 683:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 684:..\src/interruptions.c ****                         current_emg = 0;
 685:..\src/interruptions.c ****                         break;
 686:..\src/interruptions.c ****                     }
 687:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 688:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 689:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * c_mem.emg.emg_speed << 2) / (
 690:..\src/interruptions.c ****                     }
 691:..\src/interruptions.c ****                     break;
 692:..\src/interruptions.c **** 
 693:..\src/interruptions.c ****                 default:
 694:..\src/interruptions.c ****                     break;
 1354              		.loc 1 694 0
 1355 0314 5EE0     		b	.L85
 1356              	.L83:
 657:..\src/interruptions.c ****                         current_emg = 1;
 1357              		.loc 1 657 0
 1358 0316 FB68     		ldr	r3, [r7, #12]
 1359 0318 002B     		cmp	r3, #0
 1360 031a 07DD     		ble	.L84
 657:..\src/interruptions.c ****                         current_emg = 1;
 1361              		.loc 1 657 0 is_stmt 0 discriminator 1
 1362 031c FA68     		ldr	r2, [r7, #12]
 1363 031e BB68     		ldr	r3, [r7, #8]
 1364 0320 9A42     		cmp	r2, r3
 1365 0322 03DD     		ble	.L84
 658:..\src/interruptions.c ****                         break;
 1366              		.loc 1 658 0 is_stmt 1
 1367 0324 894B     		ldr	r3, .L168
 1368 0326 0122     		movs	r2, #1
 1369 0328 1A70     		strb	r2, [r3]
 659:..\src/interruptions.c ****                     }
 1370              		.loc 1 659 0
 1371 032a 53E0     		b	.L85
 1372              	.L84:
 661:..\src/interruptions.c ****                         current_emg = 2;
 1373              		.loc 1 661 0
 1374 032c BB68     		ldr	r3, [r7, #8]
 1375 032e 002B     		cmp	r3, #0
 1376 0330 4BDD     		ble	.L161
 661:..\src/interruptions.c ****                         current_emg = 2;
 1377              		.loc 1 661 0 is_stmt 0 discriminator 1
 1378 0332 BA68     		ldr	r2, [r7, #8]
 1379 0334 FB68     		ldr	r3, [r7, #12]
 1380 0336 9A42     		cmp	r2, r3
 1381 0338 47DD     		ble	.L161
 662:..\src/interruptions.c ****                         break;
 1382              		.loc 1 662 0 is_stmt 1
 1383 033a 844B     		ldr	r3, .L168
 1384 033c 0222     		movs	r2, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 38


 1385 033e 1A70     		strb	r2, [r3]
 663:..\src/interruptions.c ****                     }
 1386              		.loc 1 663 0
 1387 0340 48E0     		b	.L85
 1388              	.L81:
 670:..\src/interruptions.c ****                         current_emg = 0;
 1389              		.loc 1 670 0
 1390 0342 FB68     		ldr	r3, [r7, #12]
 1391 0344 002B     		cmp	r3, #0
 1392 0346 06DA     		bge	.L87
 670:..\src/interruptions.c ****                         current_emg = 0;
 1393              		.loc 1 670 0 is_stmt 0 discriminator 1
 1394 0348 BB68     		ldr	r3, [r7, #8]
 1395 034a 002B     		cmp	r3, #0
 1396 034c 03DA     		bge	.L87
 671:..\src/interruptions.c ****                         break;
 1397              		.loc 1 671 0 is_stmt 1
 1398 034e 7F4B     		ldr	r3, .L168
 1399 0350 0022     		movs	r2, #0
 1400 0352 1A70     		strb	r2, [r3]
 672:..\src/interruptions.c ****                     }
 1401              		.loc 1 672 0
 1402 0354 3EE0     		b	.L85
 1403              	.L87:
 675:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
 1404              		.loc 1 675 0
 1405 0356 FB68     		ldr	r3, [r7, #12]
 1406 0358 002B     		cmp	r3, #0
 1407 035a 38DD     		ble	.L162
 676:..\src/interruptions.c ****                     
 1408              		.loc 1 676 0
 1409 035c 7C4B     		ldr	r3, .L168+4
 1410 035e 1A68     		ldr	r2, [r3]
 1411 0360 7C4B     		ldr	r3, .L168+8
 1412 0362 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1413 0366 1946     		mov	r1, r3
 1414 0368 FB68     		ldr	r3, [r7, #12]
 1415 036a 03FB01F3 		mul	r3, r3, r1
 1416 036e 9900     		lsls	r1, r3, #2
 1417 0370 794B     		ldr	r3, .L168+12
 1418 0372 B3F8F031 		ldrh	r3, [r3, #496]
 1419 0376 C3F58063 		rsb	r3, r3, #1024
 1420 037a 91FBF3F3 		sdiv	r3, r1, r3
 1421 037e 1344     		add	r3, r3, r2
 1422 0380 764A     		ldr	r2, .L168+16
 1423 0382 1360     		str	r3, [r2]
 678:..\src/interruptions.c **** 
 1424              		.loc 1 678 0
 1425 0384 23E0     		b	.L162
 1426              	.L82:
 683:..\src/interruptions.c ****                         current_emg = 0;
 1427              		.loc 1 683 0
 1428 0386 FB68     		ldr	r3, [r7, #12]
 1429 0388 002B     		cmp	r3, #0
 1430 038a 06DA     		bge	.L89
 683:..\src/interruptions.c ****                         current_emg = 0;
 1431              		.loc 1 683 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 39


 1432 038c BB68     		ldr	r3, [r7, #8]
 1433 038e 002B     		cmp	r3, #0
 1434 0390 03DA     		bge	.L89
 684:..\src/interruptions.c ****                         break;
 1435              		.loc 1 684 0 is_stmt 1
 1436 0392 6E4B     		ldr	r3, .L168
 1437 0394 0022     		movs	r2, #0
 1438 0396 1A70     		strb	r2, [r3]
 685:..\src/interruptions.c ****                     }
 1439              		.loc 1 685 0
 1440 0398 1CE0     		b	.L85
 1441              	.L89:
 688:..\src/interruptions.c ****                         g_ref[0].pos = g_refOld[0].pos - (err_emg_2 * c_mem.emg.emg_speed << 2) / (
 1442              		.loc 1 688 0
 1443 039a BB68     		ldr	r3, [r7, #8]
 1444 039c 002B     		cmp	r3, #0
 1445 039e 18DD     		ble	.L163
 689:..\src/interruptions.c ****                     }
 1446              		.loc 1 689 0
 1447 03a0 6B4B     		ldr	r3, .L168+4
 1448 03a2 1A68     		ldr	r2, [r3]
 1449 03a4 6C4B     		ldr	r3, .L168+12
 1450 03a6 93F8FC31 		ldrb	r3, [r3, #508]	@ zero_extendqisi2
 1451 03aa 1946     		mov	r1, r3
 1452 03ac BB68     		ldr	r3, [r7, #8]
 1453 03ae 03FB01F3 		mul	r3, r3, r1
 1454 03b2 9900     		lsls	r1, r3, #2
 1455 03b4 684B     		ldr	r3, .L168+12
 1456 03b6 B3F8F231 		ldrh	r3, [r3, #498]
 1457 03ba C3F58063 		rsb	r3, r3, #1024
 1458 03be 91FBF3F3 		sdiv	r3, r1, r3
 1459 03c2 D31A     		subs	r3, r2, r3
 1460 03c4 654A     		ldr	r2, .L168+16
 1461 03c6 1360     		str	r3, [r2]
 691:..\src/interruptions.c **** 
 1462              		.loc 1 691 0
 1463 03c8 03E0     		b	.L163
 1464              	.L161:
 665:..\src/interruptions.c **** 
 1465              		.loc 1 665 0
 1466 03ca 00BF     		nop
 1467 03cc 06E0     		b	.L66
 1468              	.L162:
 678:..\src/interruptions.c **** 
 1469              		.loc 1 678 0
 1470 03ce 00BF     		nop
 1471 03d0 04E0     		b	.L66
 1472              	.L163:
 691:..\src/interruptions.c **** 
 1473              		.loc 1 691 0
 1474 03d2 00BF     		nop
 1475              	.L85:
 695:..\src/interruptions.c ****             }
 696:..\src/interruptions.c ****             break;
 1476              		.loc 1 696 0 discriminator 3
 1477 03d4 02E0     		b	.L66
 1478              	.L158:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 40


 697:..\src/interruptions.c **** 
 698:..\src/interruptions.c ****         default:
 699:..\src/interruptions.c ****             break;
 1479              		.loc 1 699 0
 1480 03d6 00BF     		nop
 1481 03d8 00E0     		b	.L66
 1482              	.L159:
 612:..\src/interruptions.c **** 
 1483              		.loc 1 612 0
 1484 03da 00BF     		nop
 1485              	.L66:
 700:..\src/interruptions.c ****     }
 701:..\src/interruptions.c **** 
 702:..\src/interruptions.c ****     // Position limit saturation
 703:..\src/interruptions.c ****     if (SH_MOT->pos_lim_flag) {
 1486              		.loc 1 703 0
 1487 03dc 7B6C     		ldr	r3, [r7, #68]
 1488 03de 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 1489 03e2 002B     		cmp	r3, #0
 1490 03e4 13D0     		beq	.L91
 704:..\src/interruptions.c ****         if (g_ref[0].pos < SH_MOT->pos_lim_inf) 
 1491              		.loc 1 704 0
 1492 03e6 5D4B     		ldr	r3, .L168+16
 1493 03e8 1A68     		ldr	r2, [r3]
 1494 03ea 7B6C     		ldr	r3, [r7, #68]
 1495 03ec 5B6B     		ldr	r3, [r3, #52]
 1496 03ee 9A42     		cmp	r2, r3
 1497 03f0 03DA     		bge	.L92
 705:..\src/interruptions.c ****             g_ref[0].pos = SH_MOT->pos_lim_inf;
 1498              		.loc 1 705 0
 1499 03f2 7B6C     		ldr	r3, [r7, #68]
 1500 03f4 5B6B     		ldr	r3, [r3, #52]
 1501 03f6 594A     		ldr	r2, .L168+16
 1502 03f8 1360     		str	r3, [r2]
 1503              	.L92:
 706:..\src/interruptions.c ****         if (g_ref[0].pos > SH_MOT->pos_lim_sup) 
 1504              		.loc 1 706 0
 1505 03fa 584B     		ldr	r3, .L168+16
 1506 03fc 1A68     		ldr	r2, [r3]
 1507 03fe 7B6C     		ldr	r3, [r7, #68]
 1508 0400 9B6B     		ldr	r3, [r3, #56]
 1509 0402 9A42     		cmp	r2, r3
 1510 0404 03DD     		ble	.L91
 707:..\src/interruptions.c ****             g_ref[0].pos = SH_MOT->pos_lim_sup;
 1511              		.loc 1 707 0
 1512 0406 7B6C     		ldr	r3, [r7, #68]
 1513 0408 9B6B     		ldr	r3, [r3, #56]
 1514 040a 544A     		ldr	r2, .L168+16
 1515 040c 1360     		str	r3, [r2]
 1516              	.L91:
 708:..\src/interruptions.c ****     }
 709:..\src/interruptions.c ****     
 710:..\src/interruptions.c ****     if (battery_low_SoC == 1) {
 1517              		.loc 1 710 0
 1518 040e 544B     		ldr	r3, .L168+20
 1519 0410 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 0412 012B     		cmp	r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 41


 1521 0414 02D1     		bne	.L93
 711:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 712:..\src/interruptions.c ****         g_ref[0].pos = 0;
 1522              		.loc 1 712 0
 1523 0416 514B     		ldr	r3, .L168+16
 1524 0418 0022     		movs	r2, #0
 1525 041a 1A60     		str	r2, [r3]
 1526              	.L93:
 713:..\src/interruptions.c ****     }
 714:..\src/interruptions.c ****         
 715:..\src/interruptions.c ****     if (c_mem.SH.rest_position_flag == TRUE) {
 1527              		.loc 1 715 0
 1528 041c 4E4B     		ldr	r3, .L168+12
 1529 041e 93F84C32 		ldrb	r3, [r3, #588]	@ zero_extendqisi2
 1530 0422 012B     		cmp	r3, #1
 1531 0424 2AD1     		bne	.L94
 716:..\src/interruptions.c ****         if (rest_enabled == 1){
 1532              		.loc 1 716 0
 1533 0426 4F4B     		ldr	r3, .L168+24
 1534 0428 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1535 042a 012B     		cmp	r3, #1
 1536 042c 03D1     		bne	.L95
 717:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 718:..\src/interruptions.c ****             g_ref[0].pos = rest_pos_curr_ref;
 1537              		.loc 1 718 0
 1538 042e 4E4B     		ldr	r3, .L168+28
 1539 0430 1B68     		ldr	r3, [r3]
 1540 0432 4A4A     		ldr	r2, .L168+16
 1541 0434 1360     		str	r3, [r2]
 1542              	.L95:
 719:..\src/interruptions.c ****         }
 720:..\src/interruptions.c ****         
 721:..\src/interruptions.c ****         if (forced_open == 1) {
 1543              		.loc 1 721 0
 1544 0436 4D4B     		ldr	r3, .L168+32
 1545 0438 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1546 043a 012B     		cmp	r3, #1
 1547 043c 1ED1     		bne	.L94
 722:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 723:..\src/interruptions.c ****             if (err_emg_2 > 0)
 1548              		.loc 1 723 0
 1549 043e BB68     		ldr	r3, [r7, #8]
 1550 0440 002B     		cmp	r3, #0
 1551 0442 13DD     		ble	.L96
 724:..\src/interruptions.c ****                 g_ref[0].pos = g_mem.SH.rest_pos - (err_emg_2 * g_mem.SH.rest_pos) / (1024 - c_mem.
 1552              		.loc 1 724 0
 1553 0444 434B     		ldr	r3, .L168+8
 1554 0446 D3F84022 		ldr	r2, [r3, #576]
 1555 044a 424B     		ldr	r3, .L168+8
 1556 044c D3F84032 		ldr	r3, [r3, #576]
 1557 0450 B968     		ldr	r1, [r7, #8]
 1558 0452 01FB03F1 		mul	r1, r1, r3
 1559 0456 404B     		ldr	r3, .L168+12
 1560 0458 B3F8F231 		ldrh	r3, [r3, #498]
 1561 045c C3F58063 		rsb	r3, r3, #1024
 1562 0460 91FBF3F3 		sdiv	r3, r1, r3
 1563 0464 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 42


 1564 0466 3D4A     		ldr	r2, .L168+16
 1565 0468 1360     		str	r3, [r2]
 1566 046a 07E0     		b	.L94
 1567              	.L96:
 725:..\src/interruptions.c ****             else {
 726:..\src/interruptions.c ****                 g_ref[0].pos = g_mem.SH.rest_pos;
 1568              		.loc 1 726 0
 1569 046c 394B     		ldr	r3, .L168+8
 1570 046e D3F84032 		ldr	r3, [r3, #576]
 1571 0472 3A4A     		ldr	r2, .L168+16
 1572 0474 1360     		str	r3, [r2]
 727:..\src/interruptions.c ****                 forced_open = 0;
 1573              		.loc 1 727 0
 1574 0476 3D4B     		ldr	r3, .L168+32
 1575 0478 0022     		movs	r2, #0
 1576 047a 1A70     		strb	r2, [r3]
 1577              	.L94:
 728:..\src/interruptions.c ****             }
 729:..\src/interruptions.c ****         }
 730:..\src/interruptions.c ****     }
 731:..\src/interruptions.c **** 
 732:..\src/interruptions.c ****     switch(SH_MOT->control_mode) {
 1578              		.loc 1 732 0
 1579 047c 7B6C     		ldr	r3, [r7, #68]
 1580 047e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 1581 0482 032B     		cmp	r3, #3
 1582 0484 00F2FF81 		bhi	.L97
 1583 0488 01A2     		adr	r2, .L99
 1584 048a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1585 048e 00BF     		.p2align 2
 1586              	.L99:
 1587 0490 77060000 		.word	.L98+1
 1588 0494 4B080000 		.word	.L100+1
 1589 0498 23070000 		.word	.L101+1
 1590 049c A1040000 		.word	.L102+1
 1591              		.p2align 1
 1592              	.L102:
 733:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
 734:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
 735:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[SH_ENC_L].pos[0];
 1593              		.loc 1 735 0
 1594 04a0 2E4B     		ldr	r3, .L168+16
 1595 04a2 1968     		ldr	r1, [r3]
 1596 04a4 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1597 04a8 3148     		ldr	r0, .L168+36
 1598 04aa 1346     		mov	r3, r2
 1599 04ac 5B00     		lsls	r3, r3, #1
 1600 04ae 1344     		add	r3, r3, r2
 1601 04b0 1B01     		lsls	r3, r3, #4
 1602 04b2 0344     		add	r3, r3, r0
 1603 04b4 1B68     		ldr	r3, [r3]
 1604 04b6 CB1A     		subs	r3, r1, r3
 1605 04b8 3B65     		str	r3, [r7, #80]
 736:..\src/interruptions.c **** 
 737:..\src/interruptions.c ****             pos_error_sum += pos_error;
 1606              		.loc 1 737 0
 1607 04ba 2E4B     		ldr	r3, .L168+40
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 43


 1608 04bc 1A68     		ldr	r2, [r3]
 1609 04be 3B6D     		ldr	r3, [r7, #80]
 1610 04c0 1344     		add	r3, r3, r2
 1611 04c2 2C4A     		ldr	r2, .L168+40
 1612 04c4 1360     		str	r3, [r2]
 738:..\src/interruptions.c **** 
 739:..\src/interruptions.c ****             // error_sum saturation
 740:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 1613              		.loc 1 740 0
 1614 04c6 2B4B     		ldr	r3, .L168+40
 1615 04c8 1B68     		ldr	r3, [r3]
 1616 04ca 2B4A     		ldr	r2, .L168+44
 1617 04cc 9342     		cmp	r3, r2
 1618 04ce 03DD     		ble	.L103
 741:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 1619              		.loc 1 741 0
 1620 04d0 284B     		ldr	r3, .L168+40
 1621 04d2 294A     		ldr	r2, .L168+44
 1622 04d4 1A60     		str	r2, [r3]
 1623 04d6 07E0     		b	.L104
 1624              	.L103:
 742:..\src/interruptions.c ****             else {
 743:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 1625              		.loc 1 743 0
 1626 04d8 264B     		ldr	r3, .L168+40
 1627 04da 1B68     		ldr	r3, [r3]
 1628 04dc 274A     		ldr	r2, .L168+48
 1629 04de 9342     		cmp	r3, r2
 1630 04e0 02DA     		bge	.L104
 744:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 1631              		.loc 1 744 0
 1632 04e2 244B     		ldr	r3, .L168+40
 1633 04e4 254A     		ldr	r2, .L168+48
 1634 04e6 1A60     		str	r2, [r3]
 1635              	.L104:
 745:..\src/interruptions.c ****             }
 746:..\src/interruptions.c ****             
 747:..\src/interruptions.c ****             // ------ position PID control ------
 748:..\src/interruptions.c **** 
 749:..\src/interruptions.c ****             i_ref = 0;
 1636              		.loc 1 749 0
 1637 04e8 0023     		movs	r3, #0
 1638 04ea FB64     		str	r3, [r7, #76]
 750:..\src/interruptions.c ****             
 751:..\src/interruptions.c ****             // Proportional
 752:..\src/interruptions.c ****             if (k_p_dl != 0)
 1639              		.loc 1 752 0
 1640 04ec 7B6A     		ldr	r3, [r7, #36]
 1641 04ee 002B     		cmp	r3, #0
 1642 04f0 07D0     		beq	.L105
 753:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 1643              		.loc 1 753 0
 1644 04f2 7B6A     		ldr	r3, [r7, #36]
 1645 04f4 3A6D     		ldr	r2, [r7, #80]
 1646 04f6 02FB03F3 		mul	r3, r2, r3
 1647 04fa 1B14     		asrs	r3, r3, #16
 1648 04fc FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 44


 1649 04fe 1344     		add	r3, r3, r2
 1650 0500 FB64     		str	r3, [r7, #76]
 1651              	.L105:
 754:..\src/interruptions.c **** 
 755:..\src/interruptions.c ****             // Integral
 756:..\src/interruptions.c ****             if (k_i_dl != 0)
 1652              		.loc 1 756 0
 1653 0502 3B6A     		ldr	r3, [r7, #32]
 1654 0504 002B     		cmp	r3, #0
 1655 0506 08D0     		beq	.L106
 757:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 1656              		.loc 1 757 0
 1657 0508 1A4B     		ldr	r3, .L168+40
 1658 050a 1B68     		ldr	r3, [r3]
 1659 050c 3A6A     		ldr	r2, [r7, #32]
 1660 050e 02FB03F3 		mul	r3, r2, r3
 1661 0512 1B14     		asrs	r3, r3, #16
 1662 0514 FA6C     		ldr	r2, [r7, #76]
 1663 0516 1344     		add	r3, r3, r2
 1664 0518 FB64     		str	r3, [r7, #76]
 1665              	.L106:
 758:..\src/interruptions.c **** 
 759:..\src/interruptions.c ****             // Derivative
 760:..\src/interruptions.c ****             if (k_d_dl != 0)
 1666              		.loc 1 760 0
 1667 051a FB69     		ldr	r3, [r7, #28]
 1668 051c 002B     		cmp	r3, #0
 1669 051e 0AD0     		beq	.L107
 761:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 1670              		.loc 1 761 0
 1671 0520 174B     		ldr	r3, .L168+52
 1672 0522 1B68     		ldr	r3, [r3]
 1673 0524 3A6D     		ldr	r2, [r7, #80]
 1674 0526 D31A     		subs	r3, r2, r3
 1675 0528 FA69     		ldr	r2, [r7, #28]
 1676 052a 02FB03F3 		mul	r3, r2, r3
 1677 052e 1B14     		asrs	r3, r3, #16
 1678 0530 FA6C     		ldr	r2, [r7, #76]
 1679 0532 1344     		add	r3, r3, r2
 1680 0534 FB64     		str	r3, [r7, #76]
 1681              	.L107:
 762:..\src/interruptions.c ****                         
 763:..\src/interruptions.c ****             // Update previous position
 764:..\src/interruptions.c ****             prev_pos_err = pos_error;
 1682              		.loc 1 764 0
 1683 0536 124A     		ldr	r2, .L168+52
 1684 0538 3B6D     		ldr	r3, [r7, #80]
 1685 053a 1360     		str	r3, [r2]
 765:..\src/interruptions.c **** 
 766:..\src/interruptions.c ****             // motor direction depends on i_ref
 767:..\src/interruptions.c ****             if (i_ref >= 0)
 1686              		.loc 1 767 0
 1687 053c FB6C     		ldr	r3, [r7, #76]
 1688 053e 002B     		cmp	r3, #0
 1689 0540 22DB     		blt	.L108
 768:..\src/interruptions.c ****                 motor_dir = TRUE;
 1690              		.loc 1 768 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 45


 1691 0542 104B     		ldr	r3, .L168+56
 1692 0544 0122     		movs	r2, #1
 1693 0546 1A70     		strb	r2, [r3]
 1694 0548 21E0     		b	.L109
 1695              	.L169:
 1696 054a 00BF     		.align	2
 1697              	.L168:
 1698 054c 8C000000 		.word	current_emg.10376
 1699 0550 00000000 		.word	g_refOld
 1700 0554 00000000 		.word	g_mem
 1701 0558 00000000 		.word	c_mem
 1702 055c 00000000 		.word	g_ref
 1703 0560 00000000 		.word	battery_low_SoC
 1704 0564 00000000 		.word	rest_enabled
 1705 0568 00000000 		.word	rest_pos_curr_ref
 1706 056c 00000000 		.word	forced_open
 1707 0570 00000000 		.word	g_meas
 1708 0574 90000000 		.word	pos_error_sum.10369
 1709 0578 80F0FA02 		.word	50000000
 1710 057c 800F05FD 		.word	-50000000
 1711 0580 94000000 		.word	prev_pos_err.10371
 1712 0584 98000000 		.word	motor_dir.10374
 1713              	.L108:
 769:..\src/interruptions.c ****             else
 770:..\src/interruptions.c ****                 motor_dir = FALSE;
 1714              		.loc 1 770 0
 1715 0588 864B     		ldr	r3, .L170
 1716 058a 0022     		movs	r2, #0
 1717 058c 1A70     		strb	r2, [r3]
 1718              	.L109:
 771:..\src/interruptions.c **** 
 772:..\src/interruptions.c ****             // saturate max current
 773:..\src/interruptions.c ****             if (i_ref > SH_MOT->current_limit)
 1719              		.loc 1 773 0
 1720 058e 7B6C     		ldr	r3, [r7, #68]
 1721 0590 B3F95C30 		ldrsh	r3, [r3, #92]
 1722 0594 1A46     		mov	r2, r3
 1723 0596 FB6C     		ldr	r3, [r7, #76]
 1724 0598 9A42     		cmp	r2, r3
 1725 059a 04DA     		bge	.L110
 774:..\src/interruptions.c ****                 i_ref = SH_MOT->current_limit;
 1726              		.loc 1 774 0
 1727 059c 7B6C     		ldr	r3, [r7, #68]
 1728 059e B3F95C30 		ldrsh	r3, [r3, #92]
 1729 05a2 FB64     		str	r3, [r7, #76]
 1730 05a4 0BE0     		b	.L111
 1731              	.L110:
 775:..\src/interruptions.c ****             else {
 776:..\src/interruptions.c ****                 if (i_ref < -SH_MOT->current_limit)
 1732              		.loc 1 776 0
 1733 05a6 7B6C     		ldr	r3, [r7, #68]
 1734 05a8 B3F95C30 		ldrsh	r3, [r3, #92]
 1735 05ac 5A42     		negs	r2, r3
 1736 05ae FB6C     		ldr	r3, [r7, #76]
 1737 05b0 9A42     		cmp	r2, r3
 1738 05b2 04DD     		ble	.L111
 777:..\src/interruptions.c ****                     i_ref = -SH_MOT->current_limit;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 46


 1739              		.loc 1 777 0
 1740 05b4 7B6C     		ldr	r3, [r7, #68]
 1741 05b6 B3F95C30 		ldrsh	r3, [r3, #92]
 1742 05ba 5B42     		negs	r3, r3
 1743 05bc FB64     		str	r3, [r7, #76]
 1744              	.L111:
 778:..\src/interruptions.c ****         	}
 779:..\src/interruptions.c **** 
 780:..\src/interruptions.c ****             // current error and curr error sum
 781:..\src/interruptions.c ****             curr_error = i_ref - g_meas[SH_ENC_L].curr;
 1745              		.loc 1 781 0
 1746 05be 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1747 05c2 7949     		ldr	r1, .L170+4
 1748 05c4 1346     		mov	r3, r2
 1749 05c6 5B00     		lsls	r3, r3, #1
 1750 05c8 1344     		add	r3, r3, r2
 1751 05ca 1B01     		lsls	r3, r3, #4
 1752 05cc 0B44     		add	r3, r3, r1
 1753 05ce 0C33     		adds	r3, r3, #12
 1754 05d0 1B68     		ldr	r3, [r3]
 1755 05d2 FA6C     		ldr	r2, [r7, #76]
 1756 05d4 D31A     		subs	r3, r2, r3
 1757 05d6 7B60     		str	r3, [r7, #4]
 782:..\src/interruptions.c ****             curr_error_sum += curr_error;
 1758              		.loc 1 782 0
 1759 05d8 744B     		ldr	r3, .L170+8
 1760 05da 1A68     		ldr	r2, [r3]
 1761 05dc 7B68     		ldr	r3, [r7, #4]
 1762 05de 1344     		add	r3, r3, r2
 1763 05e0 724A     		ldr	r2, .L170+8
 1764 05e2 1360     		str	r3, [r2]
 783:..\src/interruptions.c ****             
 784:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 1765              		.loc 1 784 0
 1766 05e4 714B     		ldr	r3, .L170+8
 1767 05e6 1B68     		ldr	r3, [r3]
 1768 05e8 714A     		ldr	r2, .L170+12
 1769 05ea 9342     		cmp	r3, r2
 1770 05ec 03DD     		ble	.L112
 785:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 1771              		.loc 1 785 0
 1772 05ee 6F4B     		ldr	r3, .L170+8
 1773 05f0 6F4A     		ldr	r2, .L170+12
 1774 05f2 1A60     		str	r2, [r3]
 1775 05f4 07E0     		b	.L113
 1776              	.L112:
 786:..\src/interruptions.c ****             else {
 787:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 1777              		.loc 1 787 0
 1778 05f6 6D4B     		ldr	r3, .L170+8
 1779 05f8 1B68     		ldr	r3, [r3]
 1780 05fa 6E4A     		ldr	r2, .L170+16
 1781 05fc 9342     		cmp	r3, r2
 1782 05fe 02DA     		bge	.L113
 788:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 1783              		.loc 1 788 0
 1784 0600 6A4B     		ldr	r3, .L170+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 47


 1785 0602 6C4A     		ldr	r2, .L170+16
 1786 0604 1A60     		str	r2, [r3]
 1787              	.L113:
 789:..\src/interruptions.c ****             }
 790:..\src/interruptions.c **** 
 791:..\src/interruptions.c ****             // ----- current PID control -----
 792:..\src/interruptions.c **** 
 793:..\src/interruptions.c ****             pwm_input = 0;
 1788              		.loc 1 793 0
 1789 0606 0023     		movs	r3, #0
 1790 0608 7B65     		str	r3, [r7, #84]
 794:..\src/interruptions.c **** 
 795:..\src/interruptions.c ****             // Proportional
 796:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 1791              		.loc 1 796 0
 1792 060a BB69     		ldr	r3, [r7, #24]
 1793 060c 002B     		cmp	r3, #0
 1794 060e 07D0     		beq	.L114
 797:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 1795              		.loc 1 797 0
 1796 0610 BB69     		ldr	r3, [r7, #24]
 1797 0612 7A68     		ldr	r2, [r7, #4]
 1798 0614 02FB03F3 		mul	r3, r2, r3
 1799 0618 1B14     		asrs	r3, r3, #16
 1800 061a 7A6D     		ldr	r2, [r7, #84]
 1801 061c 1344     		add	r3, r3, r2
 1802 061e 7B65     		str	r3, [r7, #84]
 1803              	.L114:
 798:..\src/interruptions.c **** 
 799:..\src/interruptions.c ****             // Integral
 800:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 1804              		.loc 1 800 0
 1805 0620 7B69     		ldr	r3, [r7, #20]
 1806 0622 002B     		cmp	r3, #0
 1807 0624 08D0     		beq	.L115
 801:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 1808              		.loc 1 801 0
 1809 0626 614B     		ldr	r3, .L170+8
 1810 0628 1B68     		ldr	r3, [r3]
 1811 062a 7A69     		ldr	r2, [r7, #20]
 1812 062c 02FB03F3 		mul	r3, r2, r3
 1813 0630 1B14     		asrs	r3, r3, #16
 1814 0632 7A6D     		ldr	r2, [r7, #84]
 1815 0634 1344     		add	r3, r3, r2
 1816 0636 7B65     		str	r3, [r7, #84]
 1817              	.L115:
 802:..\src/interruptions.c **** 
 803:..\src/interruptions.c ****             // Derivative
 804:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 1818              		.loc 1 804 0
 1819 0638 3B69     		ldr	r3, [r7, #16]
 1820 063a 002B     		cmp	r3, #0
 1821 063c 0AD0     		beq	.L116
 805:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
 1822              		.loc 1 805 0
 1823 063e 5E4B     		ldr	r3, .L170+20
 1824 0640 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 48


 1825 0642 7A68     		ldr	r2, [r7, #4]
 1826 0644 D31A     		subs	r3, r2, r3
 1827 0646 3A69     		ldr	r2, [r7, #16]
 1828 0648 02FB03F3 		mul	r3, r2, r3
 1829 064c 1B14     		asrs	r3, r3, #16
 1830 064e 7A6D     		ldr	r2, [r7, #84]
 1831 0650 1344     		add	r3, r3, r2
 1832 0652 7B65     		str	r3, [r7, #84]
 1833              	.L116:
 806:..\src/interruptions.c **** 
 807:..\src/interruptions.c ****             // pwm_input saturation
 808:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 1834              		.loc 1 808 0
 1835 0654 7B6D     		ldr	r3, [r7, #84]
 1836 0656 13F1640F 		cmn	r3, #100
 1837 065a 03DA     		bge	.L117
 809:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 1838              		.loc 1 809 0
 1839 065c 6FF06303 		mvn	r3, #99
 1840 0660 7B65     		str	r3, [r7, #84]
 1841 0662 04E0     		b	.L118
 1842              	.L117:
 810:..\src/interruptions.c ****             else {
 811:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 1843              		.loc 1 811 0
 1844 0664 7B6D     		ldr	r3, [r7, #84]
 1845 0666 642B     		cmp	r3, #100
 1846 0668 01DD     		ble	.L118
 812:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 1847              		.loc 1 812 0
 1848 066a 6423     		movs	r3, #100
 1849 066c 7B65     		str	r3, [r7, #84]
 1850              	.L118:
 813:..\src/interruptions.c ****             }
 814:..\src/interruptions.c **** 
 815:..\src/interruptions.c ****             // Update previous current
 816:..\src/interruptions.c ****             prev_curr_err = curr_error;
 1851              		.loc 1 816 0
 1852 066e 524A     		ldr	r2, .L170+20
 1853 0670 7B68     		ldr	r3, [r7, #4]
 1854 0672 1360     		str	r3, [r2]
 817:..\src/interruptions.c **** 
 818:..\src/interruptions.c ****         break;
 1855              		.loc 1 818 0
 1856 0674 07E1     		b	.L97
 1857              	.L98:
 819:..\src/interruptions.c **** 
 820:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
 821:..\src/interruptions.c ****         case CONTROL_ANGLE:
 822:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[SH_ENC_L].pos[0];
 1858              		.loc 1 822 0
 1859 0676 514B     		ldr	r3, .L170+24
 1860 0678 1968     		ldr	r1, [r3]
 1861 067a 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 1862 067e 4A48     		ldr	r0, .L170+4
 1863 0680 1346     		mov	r3, r2
 1864 0682 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 49


 1865 0684 1344     		add	r3, r3, r2
 1866 0686 1B01     		lsls	r3, r3, #4
 1867 0688 0344     		add	r3, r3, r0
 1868 068a 1B68     		ldr	r3, [r3]
 1869 068c CB1A     		subs	r3, r1, r3
 1870 068e 3B65     		str	r3, [r7, #80]
 823:..\src/interruptions.c **** 
 824:..\src/interruptions.c ****             pos_error_sum += pos_error;
 1871              		.loc 1 824 0
 1872 0690 4B4B     		ldr	r3, .L170+28
 1873 0692 1A68     		ldr	r2, [r3]
 1874 0694 3B6D     		ldr	r3, [r7, #80]
 1875 0696 1344     		add	r3, r3, r2
 1876 0698 494A     		ldr	r2, .L170+28
 1877 069a 1360     		str	r3, [r2]
 825:..\src/interruptions.c **** 
 826:..\src/interruptions.c ****             // anti-windup (for integral control)
 827:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 1878              		.loc 1 827 0
 1879 069c 484B     		ldr	r3, .L170+28
 1880 069e 1B68     		ldr	r3, [r3]
 1881 06a0 B3F57A7F 		cmp	r3, #1000
 1882 06a4 04DD     		ble	.L119
 828:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
 1883              		.loc 1 828 0
 1884 06a6 464B     		ldr	r3, .L170+28
 1885 06a8 4FF47A72 		mov	r2, #1000
 1886 06ac 1A60     		str	r2, [r3]
 1887 06ae 07E0     		b	.L120
 1888              	.L119:
 829:..\src/interruptions.c ****             else {
 830:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
 1889              		.loc 1 830 0
 1890 06b0 434B     		ldr	r3, .L170+28
 1891 06b2 1B68     		ldr	r3, [r3]
 1892 06b4 13F57A7F 		cmn	r3, #1000
 1893 06b8 02DA     		bge	.L120
 831:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 1894              		.loc 1 831 0
 1895 06ba 414B     		ldr	r3, .L170+28
 1896 06bc 414A     		ldr	r2, .L170+32
 1897 06be 1A60     		str	r2, [r3]
 1898              	.L120:
 832:..\src/interruptions.c ****             }
 833:..\src/interruptions.c **** 
 834:..\src/interruptions.c ****             // Proportional
 835:..\src/interruptions.c ****             if (k_p != 0) 
 1899              		.loc 1 835 0
 1900 06c0 FB6B     		ldr	r3, [r7, #60]
 1901 06c2 002B     		cmp	r3, #0
 1902 06c4 05D0     		beq	.L121
 836:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 1903              		.loc 1 836 0
 1904 06c6 FB6B     		ldr	r3, [r7, #60]
 1905 06c8 3A6D     		ldr	r2, [r7, #80]
 1906 06ca 02FB03F3 		mul	r3, r2, r3
 1907 06ce 1B14     		asrs	r3, r3, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 50


 1908 06d0 7B65     		str	r3, [r7, #84]
 1909              	.L121:
 837:..\src/interruptions.c ****             
 838:..\src/interruptions.c **** 
 839:..\src/interruptions.c ****             // Integral
 840:..\src/interruptions.c ****             if (k_i != 0) 
 1910              		.loc 1 840 0
 1911 06d2 BB6B     		ldr	r3, [r7, #56]
 1912 06d4 002B     		cmp	r3, #0
 1913 06d6 08D0     		beq	.L122
 841:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 1914              		.loc 1 841 0
 1915 06d8 394B     		ldr	r3, .L170+28
 1916 06da 1B68     		ldr	r3, [r3]
 1917 06dc BA6B     		ldr	r2, [r7, #56]
 1918 06de 02FB03F3 		mul	r3, r2, r3
 1919 06e2 1B14     		asrs	r3, r3, #16
 1920 06e4 7A6D     		ldr	r2, [r7, #84]
 1921 06e6 1344     		add	r3, r3, r2
 1922 06e8 7B65     		str	r3, [r7, #84]
 1923              	.L122:
 842:..\src/interruptions.c ****             
 843:..\src/interruptions.c **** 
 844:..\src/interruptions.c ****             // Derivative
 845:..\src/interruptions.c ****             if (k_d != 0) 
 1924              		.loc 1 845 0
 1925 06ea 7B6B     		ldr	r3, [r7, #52]
 1926 06ec 002B     		cmp	r3, #0
 1927 06ee 0AD0     		beq	.L123
 846:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 1928              		.loc 1 846 0
 1929 06f0 354B     		ldr	r3, .L170+36
 1930 06f2 1B68     		ldr	r3, [r3]
 1931 06f4 3A6D     		ldr	r2, [r7, #80]
 1932 06f6 D31A     		subs	r3, r2, r3
 1933 06f8 7A6B     		ldr	r2, [r7, #52]
 1934 06fa 02FB03F3 		mul	r3, r2, r3
 1935 06fe 1B14     		asrs	r3, r3, #16
 1936 0700 7A6D     		ldr	r2, [r7, #84]
 1937 0702 1344     		add	r3, r3, r2
 1938 0704 7B65     		str	r3, [r7, #84]
 1939              	.L123:
 847:..\src/interruptions.c ****             
 848:..\src/interruptions.c **** 
 849:..\src/interruptions.c ****             // Update measure
 850:..\src/interruptions.c ****             prev_pos_err = pos_error;
 1940              		.loc 1 850 0
 1941 0706 304A     		ldr	r2, .L170+36
 1942 0708 3B6D     		ldr	r3, [r7, #80]
 1943 070a 1360     		str	r3, [r2]
 851:..\src/interruptions.c **** 
 852:..\src/interruptions.c ****             if (pwm_input > 0)
 1944              		.loc 1 852 0
 1945 070c 7B6D     		ldr	r3, [r7, #84]
 1946 070e 002B     		cmp	r3, #0
 1947 0710 03DD     		ble	.L124
 853:..\src/interruptions.c ****                 motor_dir = TRUE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 51


 1948              		.loc 1 853 0
 1949 0712 244B     		ldr	r3, .L170
 1950 0714 0122     		movs	r2, #1
 1951 0716 1A70     		strb	r2, [r3]
 854:..\src/interruptions.c ****             else
 855:..\src/interruptions.c ****                 motor_dir = FALSE;
 856:..\src/interruptions.c **** 
 857:..\src/interruptions.c ****         break;
 1952              		.loc 1 857 0
 1953 0718 B5E0     		b	.L97
 1954              	.L124:
 855:..\src/interruptions.c **** 
 1955              		.loc 1 855 0
 1956 071a 224B     		ldr	r3, .L170
 1957 071c 0022     		movs	r2, #0
 1958 071e 1A70     		strb	r2, [r3]
 1959              		.loc 1 857 0
 1960 0720 B1E0     		b	.L97
 1961              	.L101:
 858:..\src/interruptions.c **** 
 859:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
 860:..\src/interruptions.c ****         case CONTROL_CURRENT:
 861:..\src/interruptions.c ****             if(g_ref[0].onoff && tension_valid) {
 1962              		.loc 1 861 0
 1963 0722 264B     		ldr	r3, .L170+24
 1964 0724 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1965 0726 002B     		cmp	r3, #0
 1966 0728 00F0AA80 		beq	.L164
 1967              		.loc 1 861 0 is_stmt 0 discriminator 1
 1968 072c 274B     		ldr	r3, .L170+40
 1969 072e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1970 0730 002B     		cmp	r3, #0
 1971 0732 00F0A580 		beq	.L164
 862:..\src/interruptions.c ****                 
 863:..\src/interruptions.c ****                 i_ref = g_ref[0].curr;
 1972              		.loc 1 863 0 is_stmt 1
 1973 0736 214B     		ldr	r3, .L170+24
 1974 0738 5B68     		ldr	r3, [r3, #4]
 1975 073a FB64     		str	r3, [r7, #76]
 864:..\src/interruptions.c **** 
 865:..\src/interruptions.c ****                 if (i_ref > SH_MOT->current_limit) 
 1976              		.loc 1 865 0
 1977 073c 7B6C     		ldr	r3, [r7, #68]
 1978 073e B3F95C30 		ldrsh	r3, [r3, #92]
 1979 0742 1A46     		mov	r2, r3
 1980 0744 FB6C     		ldr	r3, [r7, #76]
 1981 0746 9A42     		cmp	r2, r3
 1982 0748 04DA     		bge	.L127
 866:..\src/interruptions.c ****                     i_ref = SH_MOT->current_limit;
 1983              		.loc 1 866 0
 1984 074a 7B6C     		ldr	r3, [r7, #68]
 1985 074c B3F95C30 		ldrsh	r3, [r3, #92]
 1986 0750 FB64     		str	r3, [r7, #76]
 1987 0752 0BE0     		b	.L128
 1988              	.L127:
 867:..\src/interruptions.c ****                 else {
 868:..\src/interruptions.c ****                     if (i_ref < -SH_MOT->current_limit)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 52


 1989              		.loc 1 868 0
 1990 0754 7B6C     		ldr	r3, [r7, #68]
 1991 0756 B3F95C30 		ldrsh	r3, [r3, #92]
 1992 075a 5A42     		negs	r2, r3
 1993 075c FB6C     		ldr	r3, [r7, #76]
 1994 075e 9A42     		cmp	r2, r3
 1995 0760 04DD     		ble	.L128
 869:..\src/interruptions.c ****                         i_ref = -SH_MOT->current_limit;
 1996              		.loc 1 869 0
 1997 0762 7B6C     		ldr	r3, [r7, #68]
 1998 0764 B3F95C30 		ldrsh	r3, [r3, #92]
 1999 0768 5B42     		negs	r3, r3
 2000 076a FB64     		str	r3, [r7, #76]
 2001              	.L128:
 870:..\src/interruptions.c ****                 }
 871:..\src/interruptions.c ****                 
 872:..\src/interruptions.c ****                 // current error
 873:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[SH_ENC_L].curr;            
 2002              		.loc 1 873 0
 2003 076c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2004 0770 0D49     		ldr	r1, .L170+4
 2005 0772 1346     		mov	r3, r2
 2006 0774 5B00     		lsls	r3, r3, #1
 2007 0776 1344     		add	r3, r3, r2
 2008 0778 1B01     		lsls	r3, r3, #4
 2009 077a 0B44     		add	r3, r3, r1
 2010 077c 0C33     		adds	r3, r3, #12
 2011 077e 1B68     		ldr	r3, [r3]
 2012 0780 FA6C     		ldr	r2, [r7, #76]
 2013 0782 D31A     		subs	r3, r2, r3
 2014 0784 7B60     		str	r3, [r7, #4]
 874:..\src/interruptions.c ****                 curr_error_sum += curr_error;
 2015              		.loc 1 874 0
 2016 0786 094B     		ldr	r3, .L170+8
 2017 0788 1A68     		ldr	r2, [r3]
 2018 078a 7B68     		ldr	r3, [r7, #4]
 2019 078c 1344     		add	r3, r3, r2
 2020 078e 074A     		ldr	r2, .L170+8
 2021 0790 1360     		str	r3, [r2]
 875:..\src/interruptions.c ****                 
 876:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 2022              		.loc 1 876 0
 2023 0792 064B     		ldr	r3, .L170+8
 2024 0794 1B68     		ldr	r3, [r3]
 2025 0796 064A     		ldr	r2, .L170+12
 2026 0798 9342     		cmp	r3, r2
 2027 079a 19DD     		ble	.L129
 877:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 2028              		.loc 1 877 0
 2029 079c 034B     		ldr	r3, .L170+8
 2030 079e 044A     		ldr	r2, .L170+12
 2031 07a0 1A60     		str	r2, [r3]
 2032 07a2 1DE0     		b	.L130
 2033              	.L171:
 2034              		.align	2
 2035              	.L170:
 2036 07a4 98000000 		.word	motor_dir.10374
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 53


 2037 07a8 00000000 		.word	g_meas
 2038 07ac 9C000000 		.word	curr_error_sum.10370
 2039 07b0 A0860100 		.word	100000
 2040 07b4 6079FEFF 		.word	-100000
 2041 07b8 A0000000 		.word	prev_curr_err.10372
 2042 07bc 00000000 		.word	g_ref
 2043 07c0 90000000 		.word	pos_error_sum.10369
 2044 07c4 18FCFFFF 		.word	-1000
 2045 07c8 94000000 		.word	prev_pos_err.10371
 2046 07cc 00000000 		.word	tension_valid
 2047              	.L129:
 878:..\src/interruptions.c ****                 else {
 879:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 2048              		.loc 1 879 0
 2049 07d0 A74B     		ldr	r3, .L172
 2050 07d2 1B68     		ldr	r3, [r3]
 2051 07d4 A74A     		ldr	r2, .L172+4
 2052 07d6 9342     		cmp	r3, r2
 2053 07d8 02DA     		bge	.L130
 880:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 2054              		.loc 1 880 0
 2055 07da A54B     		ldr	r3, .L172
 2056 07dc A54A     		ldr	r2, .L172+4
 2057 07de 1A60     		str	r2, [r3]
 2058              	.L130:
 881:..\src/interruptions.c ****                 }
 882:..\src/interruptions.c **** 
 883:..\src/interruptions.c ****                 pwm_input = 0;
 2059              		.loc 1 883 0
 2060 07e0 0023     		movs	r3, #0
 2061 07e2 7B65     		str	r3, [r7, #84]
 884:..\src/interruptions.c **** 
 885:..\src/interruptions.c ****                 // Proportional
 886:..\src/interruptions.c ****                 if (k_p_c != 0)
 2062              		.loc 1 886 0
 2063 07e4 3B6B     		ldr	r3, [r7, #48]
 2064 07e6 002B     		cmp	r3, #0
 2065 07e8 07D0     		beq	.L131
 887:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 2066              		.loc 1 887 0
 2067 07ea 3B6B     		ldr	r3, [r7, #48]
 2068 07ec 7A68     		ldr	r2, [r7, #4]
 2069 07ee 02FB03F3 		mul	r3, r2, r3
 2070 07f2 1B14     		asrs	r3, r3, #16
 2071 07f4 7A6D     		ldr	r2, [r7, #84]
 2072 07f6 1344     		add	r3, r3, r2
 2073 07f8 7B65     		str	r3, [r7, #84]
 2074              	.L131:
 888:..\src/interruptions.c **** 
 889:..\src/interruptions.c ****                 // Integral
 890:..\src/interruptions.c ****                 if (k_i_c != 0)
 2075              		.loc 1 890 0
 2076 07fa FB6A     		ldr	r3, [r7, #44]
 2077 07fc 002B     		cmp	r3, #0
 2078 07fe 08D0     		beq	.L132
 891:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 2079              		.loc 1 891 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 54


 2080 0800 9B4B     		ldr	r3, .L172
 2081 0802 1B68     		ldr	r3, [r3]
 2082 0804 FA6A     		ldr	r2, [r7, #44]
 2083 0806 02FB03F3 		mul	r3, r2, r3
 2084 080a 1B14     		asrs	r3, r3, #16
 2085 080c 7A6D     		ldr	r2, [r7, #84]
 2086 080e 1344     		add	r3, r3, r2
 2087 0810 7B65     		str	r3, [r7, #84]
 2088              	.L132:
 892:..\src/interruptions.c **** 
 893:..\src/interruptions.c ****                 // Derivative
 894:..\src/interruptions.c ****                 if (k_d_c != 0)
 2089              		.loc 1 894 0
 2090 0812 BB6A     		ldr	r3, [r7, #40]
 2091 0814 002B     		cmp	r3, #0
 2092 0816 0AD0     		beq	.L133
 895:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 2093              		.loc 1 895 0
 2094 0818 974B     		ldr	r3, .L172+8
 2095 081a 1B68     		ldr	r3, [r3]
 2096 081c 7A68     		ldr	r2, [r7, #4]
 2097 081e D31A     		subs	r3, r2, r3
 2098 0820 BA6A     		ldr	r2, [r7, #40]
 2099 0822 02FB03F3 		mul	r3, r2, r3
 2100 0826 1B14     		asrs	r3, r3, #16
 2101 0828 7A6D     		ldr	r2, [r7, #84]
 2102 082a 1344     		add	r3, r3, r2
 2103 082c 7B65     		str	r3, [r7, #84]
 2104              	.L133:
 896:..\src/interruptions.c ****                 
 897:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 2105              		.loc 1 897 0
 2106 082e 924A     		ldr	r2, .L172+8
 2107 0830 7B68     		ldr	r3, [r7, #4]
 2108 0832 1360     		str	r3, [r2]
 898:..\src/interruptions.c ****                 
 899:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 2109              		.loc 1 899 0
 2110 0834 7B6D     		ldr	r3, [r7, #84]
 2111 0836 002B     		cmp	r3, #0
 2112 0838 03DB     		blt	.L134
 900:..\src/interruptions.c ****                     motor_dir = TRUE;
 2113              		.loc 1 900 0
 2114 083a 904B     		ldr	r3, .L172+12
 2115 083c 0122     		movs	r2, #1
 2116 083e 1A70     		strb	r2, [r3]
 901:..\src/interruptions.c ****                 else
 902:..\src/interruptions.c ****                     motor_dir = FALSE;
 903:..\src/interruptions.c ****             }
 904:..\src/interruptions.c ****         break;
 2117              		.loc 1 904 0
 2118 0840 1EE0     		b	.L164
 2119              	.L134:
 902:..\src/interruptions.c ****             }
 2120              		.loc 1 902 0
 2121 0842 8E4B     		ldr	r3, .L172+12
 2122 0844 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 55


 2123 0846 1A70     		strb	r2, [r3]
 2124              		.loc 1 904 0
 2125 0848 1AE0     		b	.L164
 2126              	.L100:
 905:..\src/interruptions.c ****         
 906:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
 907:..\src/interruptions.c ****         case CONTROL_PWM:
 908:..\src/interruptions.c **** 
 909:..\src/interruptions.c ****             pwm_input = g_ref[0].pwm;
 2127              		.loc 1 909 0
 2128 084a 8D4B     		ldr	r3, .L172+16
 2129 084c 9B68     		ldr	r3, [r3, #8]
 2130 084e 7B65     		str	r3, [r7, #84]
 910:..\src/interruptions.c **** 
 911:..\src/interruptions.c ****             if (pwm_input > 0) 
 2131              		.loc 1 911 0
 2132 0850 7B6D     		ldr	r3, [r7, #84]
 2133 0852 002B     		cmp	r3, #0
 2134 0854 03DD     		ble	.L135
 912:..\src/interruptions.c ****                 motor_dir = TRUE;
 2135              		.loc 1 912 0
 2136 0856 894B     		ldr	r3, .L172+12
 2137 0858 0122     		movs	r2, #1
 2138 085a 1A70     		strb	r2, [r3]
 2139 085c 02E0     		b	.L136
 2140              	.L135:
 913:..\src/interruptions.c ****             else 
 914:..\src/interruptions.c ****                 motor_dir = FALSE;
 2141              		.loc 1 914 0
 2142 085e 874B     		ldr	r3, .L172+12
 2143 0860 0022     		movs	r2, #0
 2144 0862 1A70     		strb	r2, [r3]
 2145              	.L136:
 915:..\src/interruptions.c ****             
 916:..\src/interruptions.c **** 
 917:..\src/interruptions.c ****             // pwm_input saturation
 918:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 2146              		.loc 1 918 0
 2147 0864 7B6D     		ldr	r3, [r7, #84]
 2148 0866 13F1640F 		cmn	r3, #100
 2149 086a 03DA     		bge	.L137
 919:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 2150              		.loc 1 919 0
 2151 086c 6FF06303 		mvn	r3, #99
 2152 0870 7B65     		str	r3, [r7, #84]
 920:..\src/interruptions.c ****             else {
 921:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
 922:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 923:..\src/interruptions.c ****         	}
 924:..\src/interruptions.c **** 
 925:..\src/interruptions.c ****         break;
 2153              		.loc 1 925 0
 2154 0872 07E0     		b	.L165
 2155              	.L137:
 921:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 2156              		.loc 1 921 0
 2157 0874 7B6D     		ldr	r3, [r7, #84]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 56


 2158 0876 642B     		cmp	r3, #100
 2159 0878 04DD     		ble	.L165
 922:..\src/interruptions.c ****         	}
 2160              		.loc 1 922 0
 2161 087a 6423     		movs	r3, #100
 2162 087c 7B65     		str	r3, [r7, #84]
 2163              		.loc 1 925 0
 2164 087e 01E0     		b	.L165
 2165              	.L164:
 904:..\src/interruptions.c ****         
 2166              		.loc 1 904 0
 2167 0880 00BF     		nop
 2168 0882 00E0     		b	.L97
 2169              	.L165:
 2170              		.loc 1 925 0
 2171 0884 00BF     		nop
 2172              	.L97:
 926:..\src/interruptions.c ****             
 927:..\src/interruptions.c ****     }
 928:..\src/interruptions.c **** 
 929:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
 930:..\src/interruptions.c **** 
 931:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 2173              		.loc 1 931 0
 2174 0886 7B6D     		ldr	r3, [r7, #84]
 2175 0888 642B     		cmp	r3, #100
 2176 088a 01DD     		ble	.L139
 932:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 2177              		.loc 1 932 0
 2178 088c 6423     		movs	r3, #100
 2179 088e 7B65     		str	r3, [r7, #84]
 2180              	.L139:
 933:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 2181              		.loc 1 933 0
 2182 0890 7B6D     		ldr	r3, [r7, #84]
 2183 0892 13F1640F 		cmn	r3, #100
 2184 0896 02DA     		bge	.L140
 934:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 2185              		.loc 1 934 0
 2186 0898 6FF06303 		mvn	r3, #99
 2187 089c 7B65     		str	r3, [r7, #84]
 2188              	.L140:
 935:..\src/interruptions.c **** 
 936:..\src/interruptions.c ****     if (SH_MOT->control_mode != CONTROL_PWM) 
 2189              		.loc 1 936 0
 2190 089e 7B6C     		ldr	r3, [r7, #68]
 2191 08a0 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2192 08a4 012B     		cmp	r3, #1
 2193 08a6 0DD0     		beq	.L141
 937:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 2194              		.loc 1 937 0
 2195 08a8 7B6D     		ldr	r3, [r7, #84]
 2196 08aa 9B02     		lsls	r3, r3, #10
 2197 08ac 754A     		ldr	r2, .L172+20
 2198 08ae 82FB0312 		smull	r1, r2, r2, r3
 2199 08b2 5211     		asrs	r2, r2, #5
 2200 08b4 DB17     		asrs	r3, r3, #31
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 57


 2201 08b6 D31A     		subs	r3, r2, r3
 2202 08b8 734A     		ldr	r2, .L172+24
 2203 08ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2204 08bc 02FB03F3 		mul	r3, r2, r3
 2205 08c0 9B12     		asrs	r3, r3, #10
 2206 08c2 7B65     		str	r3, [r7, #84]
 2207              	.L141:
 938:..\src/interruptions.c ****  
 939:..\src/interruptions.c ****     //// RATE LIMITER ////
 940:..\src/interruptions.c ****     if(SIGN(pwm_input-prev_pwm) == SIGN(pos_error))
 2208              		.loc 1 940 0
 2209 08c4 714B     		ldr	r3, .L172+28
 2210 08c6 1B68     		ldr	r3, [r3]
 2211 08c8 7A6D     		ldr	r2, [r7, #84]
 2212 08ca D31A     		subs	r3, r2, r3
 2213 08cc 002B     		cmp	r3, #0
 2214 08ce 01DB     		blt	.L142
 2215              		.loc 1 940 0 is_stmt 0 discriminator 1
 2216 08d0 0122     		movs	r2, #1
 2217 08d2 01E0     		b	.L143
 2218              	.L142:
 2219              		.loc 1 940 0 discriminator 2
 2220 08d4 4FF0FF32 		mov	r2, #-1
 2221              	.L143:
 2222              		.loc 1 940 0 discriminator 4
 2223 08d8 3B6D     		ldr	r3, [r7, #80]
 2224 08da 002B     		cmp	r3, #0
 2225 08dc 01DB     		blt	.L144
 2226              		.loc 1 940 0 discriminator 5
 2227 08de 0123     		movs	r3, #1
 2228 08e0 01E0     		b	.L145
 2229              	.L144:
 2230              		.loc 1 940 0 discriminator 6
 2231 08e2 4FF0FF33 		mov	r3, #-1
 2232              	.L145:
 2233              		.loc 1 940 0 discriminator 8
 2234 08e6 9A42     		cmp	r2, r3
 2235 08e8 21D1     		bne	.L146
 941:..\src/interruptions.c ****     {
 942:..\src/interruptions.c ****         if((pwm_input-prev_pwm) > SH_MOT->pwm_rate_limiter)
 2236              		.loc 1 942 0 is_stmt 1
 2237 08ea 684B     		ldr	r3, .L172+28
 2238 08ec 1B68     		ldr	r3, [r3]
 2239 08ee 7A6D     		ldr	r2, [r7, #84]
 2240 08f0 D31A     		subs	r3, r2, r3
 2241 08f2 7A6C     		ldr	r2, [r7, #68]
 2242 08f4 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 2243 08f8 9342     		cmp	r3, r2
 2244 08fa 07DD     		ble	.L147
 943:..\src/interruptions.c ****             pwm_input =  prev_pwm + SH_MOT->pwm_rate_limiter;
 2245              		.loc 1 943 0
 2246 08fc 7B6C     		ldr	r3, [r7, #68]
 2247 08fe 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 2248 0902 1A46     		mov	r2, r3
 2249 0904 614B     		ldr	r3, .L172+28
 2250 0906 1B68     		ldr	r3, [r3]
 2251 0908 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 58


 2252 090a 7B65     		str	r3, [r7, #84]
 2253              	.L147:
 944:..\src/interruptions.c ****     
 945:..\src/interruptions.c ****         if((pwm_input-prev_pwm) < -SH_MOT->pwm_rate_limiter)
 2254              		.loc 1 945 0
 2255 090c 5F4B     		ldr	r3, .L172+28
 2256 090e 1B68     		ldr	r3, [r3]
 2257 0910 7A6D     		ldr	r2, [r7, #84]
 2258 0912 D21A     		subs	r2, r2, r3
 2259 0914 7B6C     		ldr	r3, [r7, #68]
 2260 0916 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 2261 091a 5B42     		negs	r3, r3
 2262 091c 9A42     		cmp	r2, r3
 2263 091e 06DA     		bge	.L146
 946:..\src/interruptions.c ****             pwm_input =  prev_pwm - SH_MOT->pwm_rate_limiter;
 2264              		.loc 1 946 0
 2265 0920 5A4B     		ldr	r3, .L172+28
 2266 0922 1B68     		ldr	r3, [r3]
 2267 0924 7A6C     		ldr	r2, [r7, #68]
 2268 0926 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 2269 092a 9B1A     		subs	r3, r3, r2
 2270 092c 7B65     		str	r3, [r7, #84]
 2271              	.L146:
 947:..\src/interruptions.c ****     }
 948:..\src/interruptions.c ****     
 949:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 2272              		.loc 1 949 0
 2273 092e 7B6D     		ldr	r3, [r7, #84]
 2274 0930 642B     		cmp	r3, #100
 2275 0932 01DD     		ble	.L148
 950:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 2276              		.loc 1 950 0
 2277 0934 6423     		movs	r3, #100
 2278 0936 7B65     		str	r3, [r7, #84]
 2279              	.L148:
 951:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 2280              		.loc 1 951 0
 2281 0938 7B6D     		ldr	r3, [r7, #84]
 2282 093a 13F1640F 		cmn	r3, #100
 2283 093e 02DA     		bge	.L149
 952:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 2284              		.loc 1 952 0
 2285 0940 6FF06303 		mvn	r3, #99
 2286 0944 7B65     		str	r3, [r7, #84]
 2287              	.L149:
 953:..\src/interruptions.c ****     
 954:..\src/interruptions.c ****     prev_pwm = pwm_input;
 2288              		.loc 1 954 0
 2289 0946 514A     		ldr	r2, .L172+28
 2290 0948 7B6D     		ldr	r3, [r7, #84]
 2291 094a 1360     		str	r3, [r2]
 955:..\src/interruptions.c **** 	
 956:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 2292              		.loc 1 956 0
 2293 094c 7B6D     		ldr	r3, [r7, #84]
 2294 094e 002B     		cmp	r3, #0
 2295 0950 01DB     		blt	.L150
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 59


 2296              		.loc 1 956 0 is_stmt 0 discriminator 1
 2297 0952 0122     		movs	r2, #1
 2298 0954 01E0     		b	.L151
 2299              	.L150:
 2300              		.loc 1 956 0 discriminator 2
 2301 0956 4FF0FF32 		mov	r2, #-1
 2302              	.L151:
 2303              		.loc 1 956 0 discriminator 4
 2304 095a 4D4B     		ldr	r3, .L172+32
 2305 095c 1A70     		strb	r2, [r3]
 957:..\src/interruptions.c ****     
 958:..\src/interruptions.c ****     if (SH_MOT->not_revers_motor_flag == TRUE) {
 2306              		.loc 1 958 0 is_stmt 1 discriminator 4
 2307 095e 7B6C     		ldr	r3, [r7, #68]
 2308 0960 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 2309 0964 012B     		cmp	r3, #1
 2310 0966 6CD1     		bne	.L152
 959:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
 960:..\src/interruptions.c ****     	if ( SH_MOT->control_mode != CONTROL_PWM && ((g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[
 2311              		.loc 1 960 0
 2312 0968 7B6C     		ldr	r3, [r7, #68]
 2313 096a 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 2314 096e 012B     		cmp	r3, #1
 2315 0970 64D0     		beq	.L153
 2316              		.loc 1 960 0 is_stmt 0 discriminator 1
 2317 0972 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2318 0976 4749     		ldr	r1, .L172+36
 2319 0978 1346     		mov	r3, r2
 2320 097a 5B00     		lsls	r3, r3, #1
 2321 097c 1344     		add	r3, r3, r2
 2322 097e 1B01     		lsls	r3, r3, #4
 2323 0980 0B44     		add	r3, r3, r1
 2324 0982 1968     		ldr	r1, [r3]
 2325 0984 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2326 0988 4348     		ldr	r0, .L172+40
 2327 098a 1346     		mov	r3, r2
 2328 098c 5B00     		lsls	r3, r3, #1
 2329 098e 1344     		add	r3, r3, r2
 2330 0990 1B01     		lsls	r3, r3, #4
 2331 0992 0344     		add	r3, r3, r0
 2332 0994 1B68     		ldr	r3, [r3]
 2333 0996 CB1A     		subs	r3, r1, r3
 2334 0998 312B     		cmp	r3, #49
 2335 099a 4FDC     		bgt	.L153
 961:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2336              		.loc 1 961 0 is_stmt 1 discriminator 2
 2337 099c 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2338 09a0 3C49     		ldr	r1, .L172+36
 2339 09a2 1346     		mov	r3, r2
 2340 09a4 5B00     		lsls	r3, r3, #1
 2341 09a6 1344     		add	r3, r3, r2
 2342 09a8 1B01     		lsls	r3, r3, #4
 2343 09aa 0B44     		add	r3, r3, r1
 2344 09ac 1968     		ldr	r1, [r3]
 2345 09ae 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2346 09b2 3948     		ldr	r0, .L172+40
 2347 09b4 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 60


 2348 09b6 5B00     		lsls	r3, r3, #1
 2349 09b8 1344     		add	r3, r3, r2
 2350 09ba 1B01     		lsls	r3, r3, #4
 2351 09bc 0344     		add	r3, r3, r0
 2352 09be 1B68     		ldr	r3, [r3]
 2353 09c0 CB1A     		subs	r3, r1, r3
 960:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2354              		.loc 1 960 0 discriminator 2
 2355 09c2 13F1310F 		cmn	r3, #49
 2356 09c6 39DB     		blt	.L153
 962:..\src/interruptions.c ****             ((g_refOld[0].pos - g_ref[0].pos) < 100 && (g_refOld[0].pos - g_ref[0].pos) > -100) ) {
 2357              		.loc 1 962 0
 2358 09c8 344B     		ldr	r3, .L172+44
 2359 09ca 1A68     		ldr	r2, [r3]
 2360 09cc 2C4B     		ldr	r3, .L172+16
 2361 09ce 1B68     		ldr	r3, [r3]
 2362 09d0 D31A     		subs	r3, r2, r3
 961:..\src/interruptions.c ****             (g_measOld[SH_ENC_L].pos[0]-g_meas[SH_ENC_L].pos[0]) > -50) && 
 2363              		.loc 1 961 0
 2364 09d2 632B     		cmp	r3, #99
 2365 09d4 32DC     		bgt	.L153
 2366              		.loc 1 962 0
 2367 09d6 314B     		ldr	r3, .L172+44
 2368 09d8 1A68     		ldr	r2, [r3]
 2369 09da 294B     		ldr	r3, .L172+16
 2370 09dc 1B68     		ldr	r3, [r3]
 2371 09de D31A     		subs	r3, r2, r3
 2372 09e0 13F1630F 		cmn	r3, #99
 2373 09e4 2ADB     		blt	.L153
 963:..\src/interruptions.c ****             position_counter++;
 2374              		.loc 1 963 0
 2375 09e6 2E4B     		ldr	r3, .L172+48
 2376 09e8 1B68     		ldr	r3, [r3]
 2377 09ea 0133     		adds	r3, r3, #1
 2378 09ec 2C4A     		ldr	r2, .L172+48
 2379 09ee 1360     		str	r3, [r2]
 964:..\src/interruptions.c ****             
 965:..\src/interruptions.c ****             if (position_counter > 250) { 
 2380              		.loc 1 965 0
 2381 09f0 2B4B     		ldr	r3, .L172+48
 2382 09f2 1B68     		ldr	r3, [r3]
 2383 09f4 FA2B     		cmp	r3, #250
 2384 09f6 24D9     		bls	.L152
 966:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 2385              		.loc 1 966 0
 2386 09f8 7B6C     		ldr	r3, [r7, #68]
 2387 09fa 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 2388 09fe 002B     		cmp	r3, #0
 2389 0a00 0ED1     		bne	.L155
 2390              		.loc 1 966 0 is_stmt 0 discriminator 1
 2391 0a02 284B     		ldr	r3, .L172+52
 2392 0a04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2393 0a06 002B     		cmp	r3, #0
 2394 0a08 0AD1     		bne	.L155
 967:..\src/interruptions.c ****                     g_refNew[0].pos = g_meas[SH_ENC_L].pos[0];       // Needed only when USB input 
 2395              		.loc 1 967 0 is_stmt 1
 2396 0a0a 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 61


 2397 0a0e 2249     		ldr	r1, .L172+40
 2398 0a10 1346     		mov	r3, r2
 2399 0a12 5B00     		lsls	r3, r3, #1
 2400 0a14 1344     		add	r3, r3, r2
 2401 0a16 1B01     		lsls	r3, r3, #4
 2402 0a18 0B44     		add	r3, r3, r1
 2403 0a1a 1B68     		ldr	r3, [r3]
 2404 0a1c 224A     		ldr	r2, .L172+56
 2405 0a1e 1360     		str	r3, [r2]
 2406              	.L155:
 968:..\src/interruptions.c ****                 }
 969:..\src/interruptions.c ****                 g_ref[0].pos = g_meas[SH_ENC_L].pos[0];
 2407              		.loc 1 969 0
 2408 0a20 97F84320 		ldrb	r2, [r7, #67]	@ zero_extendqisi2
 2409 0a24 1C49     		ldr	r1, .L172+40
 2410 0a26 1346     		mov	r3, r2
 2411 0a28 5B00     		lsls	r3, r3, #1
 2412 0a2a 1344     		add	r3, r3, r2
 2413 0a2c 1B01     		lsls	r3, r3, #4
 2414 0a2e 0B44     		add	r3, r3, r1
 2415 0a30 1B68     		ldr	r3, [r3]
 2416 0a32 134A     		ldr	r2, .L172+16
 2417 0a34 1360     		str	r3, [r2]
 970:..\src/interruptions.c ****                 pwm_input = 0;            
 2418              		.loc 1 970 0
 2419 0a36 0023     		movs	r3, #0
 2420 0a38 7B65     		str	r3, [r7, #84]
 965:..\src/interruptions.c ****                 if (SH_MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 2421              		.loc 1 965 0
 2422 0a3a 02E0     		b	.L152
 2423              	.L153:
 971:..\src/interruptions.c ****             }
 972:..\src/interruptions.c ****         }
 973:..\src/interruptions.c ****         else {
 974:..\src/interruptions.c ****             position_counter = 0;
 2424              		.loc 1 974 0
 2425 0a3c 184B     		ldr	r3, .L172+48
 2426 0a3e 0022     		movs	r2, #0
 2427 0a40 1A60     		str	r2, [r3]
 2428              	.L152:
 975:..\src/interruptions.c ****         }
 976:..\src/interruptions.c ****     }
 977:..\src/interruptions.c ****     
 978:..\src/interruptions.c ****     if (motor_dir)
 2429              		.loc 1 978 0
 2430 0a42 0E4B     		ldr	r3, .L172+12
 2431 0a44 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2432 0a46 002B     		cmp	r3, #0
 2433 0a48 03D0     		beq	.L156
 979:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x01);
 2434              		.loc 1 979 0
 2435 0a4a 0120     		movs	r0, #1
 2436 0a4c FFF7FEFF 		bl	MOTOR_DIR_1_Write
 2437 0a50 02E0     		b	.L157
 2438              	.L156:
 980:..\src/interruptions.c ****     else
 981:..\src/interruptions.c ****         MOTOR_DIR_1_Write(0x00);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 62


 2439              		.loc 1 981 0
 2440 0a52 0020     		movs	r0, #0
 2441 0a54 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 2442              	.L157:
 982:..\src/interruptions.c **** 
 983:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare1(abs(pwm_input));
 2443              		.loc 1 983 0
 2444 0a58 7B6D     		ldr	r3, [r7, #84]
 2445 0a5a 002B     		cmp	r3, #0
 2446 0a5c B8BF     		it	lt
 2447 0a5e 5B42     		rsblt	r3, r3, #0
 2448 0a60 DBB2     		uxtb	r3, r3
 2449 0a62 1846     		mov	r0, r3
 2450 0a64 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
 984:..\src/interruptions.c **** }
 2451              		.loc 1 984 0
 2452 0a68 00BF     		nop
 2453 0a6a 5837     		adds	r7, r7, #88
 2454              		.cfi_def_cfa_offset 8
 2455 0a6c BD46     		mov	sp, r7
 2456              		.cfi_def_cfa_register 13
 2457              		@ sp needed
 2458 0a6e 80BD     		pop	{r7, pc}
 2459              	.L173:
 2460              		.align	2
 2461              	.L172:
 2462 0a70 9C000000 		.word	curr_error_sum.10370
 2463 0a74 6079FEFF 		.word	-100000
 2464 0a78 A0000000 		.word	prev_curr_err.10372
 2465 0a7c 98000000 		.word	motor_dir.10374
 2466 0a80 00000000 		.word	g_ref
 2467 0a84 1F85EB51 		.word	1374389535
 2468 0a88 00000000 		.word	dev_pwm_limit
 2469 0a8c A4000000 		.word	prev_pwm.10373
 2470 0a90 00000000 		.word	pwm_sign
 2471 0a94 00000000 		.word	g_measOld
 2472 0a98 00000000 		.word	g_meas
 2473 0a9c 00000000 		.word	g_refOld
 2474 0aa0 A8000000 		.word	position_counter.10375
 2475 0aa4 00000000 		.word	change_ext_ref_flag
 2476 0aa8 00000000 		.word	g_refNew
 2477              		.cfi_endproc
 2478              	.LFE68:
 2479              		.size	motor_control_SH, .-motor_control_SH
 2480              		.section	.text.motor_control_generic,"ax",%progbits
 2481              		.align	2
 2482              		.global	motor_control_generic
 2483              		.thumb
 2484              		.thumb_func
 2485              		.type	motor_control_generic, %function
 2486              	motor_control_generic:
 2487              	.LFB69:
 985:..\src/interruptions.c **** #endif
 986:..\src/interruptions.c **** //==============================================================================
 987:..\src/interruptions.c **** //                                                         MOTOR CONTROL GENERIC
 988:..\src/interruptions.c **** //==============================================================================
 989:..\src/interruptions.c **** void motor_control_generic(uint8 idx) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 63


 2488              		.loc 1 989 0
 2489              		.cfi_startproc
 2490              		@ args = 0, pretend = 0, frame = 96
 2491              		@ frame_needed = 1, uses_anonymous_args = 0
 2492 0000 90B5     		push	{r4, r7, lr}
 2493              		.cfi_def_cfa_offset 12
 2494              		.cfi_offset 4, -12
 2495              		.cfi_offset 7, -8
 2496              		.cfi_offset 14, -4
 2497 0002 99B0     		sub	sp, sp, #100
 2498              		.cfi_def_cfa_offset 112
 2499 0004 00AF     		add	r7, sp, #0
 2500              		.cfi_def_cfa_register 7
 2501 0006 0346     		mov	r3, r0
 2502 0008 FB71     		strb	r3, [r7, #7]
 990:..\src/interruptions.c ****     
 991:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 2503              		.loc 1 991 0
 2504 000a 0023     		movs	r3, #0
 2505 000c FB65     		str	r3, [r7, #92]
 992:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 993:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 994:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
 995:..\src/interruptions.c ****     int32 CYDATA handle_value;
 996:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 997:..\src/interruptions.c **** 
 998:..\src/interruptions.c ****     struct st_motor* MOT = &c_mem.motor[idx]; // Motor struct
 2506              		.loc 1 998 0
 2507 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2508 0010 1346     		mov	r3, r2
 2509 0012 DB00     		lsls	r3, r3, #3
 2510 0014 9B1A     		subs	r3, r3, r2
 2511 0016 1B01     		lsls	r3, r3, #4
 2512 0018 B033     		adds	r3, r3, #176
 2513 001a AA4A     		ldr	r2, .L295
 2514 001c 1344     		add	r3, r3, r2
 2515 001e FB64     		str	r3, [r7, #76]
 999:..\src/interruptions.c ****     uint8 ENC_L = MOT->encoder_line;          // Associated encoder line
 2516              		.loc 1 999 0
 2517 0020 FB6C     		ldr	r3, [r7, #76]
 2518 0022 93F86030 		ldrb	r3, [r3, #96]
 2519 0026 87F84B30 		strb	r3, [r7, #75]
1000:..\src/interruptions.c ****     
1001:..\src/interruptions.c ****     int32 CYDATA k_p = MOT->k_p;  
 2520              		.loc 1 1001 0
 2521 002a FB6C     		ldr	r3, [r7, #76]
 2522 002c 1B68     		ldr	r3, [r3]
 2523 002e 7B64     		str	r3, [r7, #68]
1002:..\src/interruptions.c ****     int32 CYDATA k_i = MOT->k_i; 
 2524              		.loc 1 1002 0
 2525 0030 FB6C     		ldr	r3, [r7, #76]
 2526 0032 5B68     		ldr	r3, [r3, #4]
 2527 0034 3B64     		str	r3, [r7, #64]
1003:..\src/interruptions.c ****     int32 CYDATA k_d = MOT->k_d; 
 2528              		.loc 1 1003 0
 2529 0036 FB6C     		ldr	r3, [r7, #76]
 2530 0038 9B68     		ldr	r3, [r3, #8]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 64


 2531 003a FB63     		str	r3, [r7, #60]
1004:..\src/interruptions.c **** 
1005:..\src/interruptions.c ****     int32 CYDATA k_p_c = MOT->k_p_c;  
 2532              		.loc 1 1005 0
 2533 003c FB6C     		ldr	r3, [r7, #76]
 2534 003e DB68     		ldr	r3, [r3, #12]
 2535 0040 BB63     		str	r3, [r7, #56]
1006:..\src/interruptions.c ****     int32 CYDATA k_i_c = MOT->k_i_c; 
 2536              		.loc 1 1006 0
 2537 0042 FB6C     		ldr	r3, [r7, #76]
 2538 0044 1B69     		ldr	r3, [r3, #16]
 2539 0046 7B63     		str	r3, [r7, #52]
1007:..\src/interruptions.c ****     int32 CYDATA k_d_c = MOT->k_d_c;   
 2540              		.loc 1 1007 0
 2541 0048 FB6C     		ldr	r3, [r7, #76]
 2542 004a 5B69     		ldr	r3, [r3, #20]
 2543 004c 3B63     		str	r3, [r7, #48]
1008:..\src/interruptions.c **** 
1009:..\src/interruptions.c ****     int32 CYDATA k_p_dl = MOT->k_p_dl;  
 2544              		.loc 1 1009 0
 2545 004e FB6C     		ldr	r3, [r7, #76]
 2546 0050 9B69     		ldr	r3, [r3, #24]
 2547 0052 FB62     		str	r3, [r7, #44]
1010:..\src/interruptions.c ****     int32 CYDATA k_i_dl = MOT->k_i_dl; 
 2548              		.loc 1 1010 0
 2549 0054 FB6C     		ldr	r3, [r7, #76]
 2550 0056 DB69     		ldr	r3, [r3, #28]
 2551 0058 BB62     		str	r3, [r7, #40]
1011:..\src/interruptions.c ****     int32 CYDATA k_d_dl = MOT->k_d_dl;
 2552              		.loc 1 1011 0
 2553 005a FB6C     		ldr	r3, [r7, #76]
 2554 005c 1B6A     		ldr	r3, [r3, #32]
 2555 005e 7B62     		str	r3, [r7, #36]
1012:..\src/interruptions.c ****     
1013:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = MOT->k_p_c_dl;  
 2556              		.loc 1 1013 0
 2557 0060 FB6C     		ldr	r3, [r7, #76]
 2558 0062 5B6A     		ldr	r3, [r3, #36]
 2559 0064 3B62     		str	r3, [r7, #32]
1014:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = MOT->k_i_c_dl; 
 2560              		.loc 1 1014 0
 2561 0066 FB6C     		ldr	r3, [r7, #76]
 2562 0068 9B6A     		ldr	r3, [r3, #40]
 2563 006a FB61     		str	r3, [r7, #28]
1015:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = MOT->k_d_c_dl;   
 2564              		.loc 1 1015 0
 2565 006c FB6C     		ldr	r3, [r7, #76]
 2566 006e DB6A     		ldr	r3, [r3, #44]
 2567 0070 BB61     		str	r3, [r7, #24]
1016:..\src/interruptions.c **** 
1017:..\src/interruptions.c ****     // Static Variables
1018:..\src/interruptions.c **** 
1019:..\src/interruptions.c ****     static int32 pos_error_sum[NUM_OF_MOTORS];     // position error sum for integral
1020:..\src/interruptions.c ****     static int32 curr_error_sum[NUM_OF_MOTORS];    // current error sum for integral
1021:..\src/interruptions.c ****     
1022:..\src/interruptions.c ****     static int32 prev_pos_err[NUM_OF_MOTORS];      // previous position error for deriv. control
1023:..\src/interruptions.c ****     static int32 prev_curr_err[NUM_OF_MOTORS];     // previous current error for deriv. control
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 65


1024:..\src/interruptions.c ****     static int32 prev_pwm[NUM_OF_MOTORS];
1025:..\src/interruptions.c **** 
1026:..\src/interruptions.c ****     static CYBIT motor_dir[NUM_OF_MOTORS] = {FALSE, FALSE};
1027:..\src/interruptions.c ****     static uint32 position_counter[NUM_OF_MOTORS] = {0, 0};
1028:..\src/interruptions.c ****     static uint8 current_emg[NUM_OF_MOTORS] = {0, 0};   // 0 NONE
1029:..\src/interruptions.c ****                                                         // 1 EMG 1
1030:..\src/interruptions.c ****                                                         // 2 EMG 2
1031:..\src/interruptions.c ****                                                         // wait for both to get down
1032:..\src/interruptions.c ****     
1033:..\src/interruptions.c ****     err_emg_1 = g_emg_meas.emg[0] - c_mem.emg.emg_threshold[0];
 2568              		.loc 1 1033 0
 2569 0072 954B     		ldr	r3, .L295+4
 2570 0074 1B68     		ldr	r3, [r3]
 2571 0076 934A     		ldr	r2, .L295
 2572 0078 B2F8F021 		ldrh	r2, [r2, #496]
 2573 007c 9B1A     		subs	r3, r3, r2
 2574 007e 7B61     		str	r3, [r7, #20]
1034:..\src/interruptions.c ****     err_emg_2 = g_emg_meas.emg[1] - c_mem.emg.emg_threshold[1];
 2575              		.loc 1 1034 0
 2576 0080 914B     		ldr	r3, .L295+4
 2577 0082 5B68     		ldr	r3, [r3, #4]
 2578 0084 8F4A     		ldr	r2, .L295
 2579 0086 B2F8F221 		ldrh	r2, [r2, #498]
 2580 008a 9B1A     		subs	r3, r3, r2
 2581 008c 3B61     		str	r3, [r7, #16]
1035:..\src/interruptions.c **** 
1036:..\src/interruptions.c ****     // =========================== POSITION INPUT ==============================            
1037:..\src/interruptions.c ****     switch(MOT->input_mode) {
 2582              		.loc 1 1037 0
 2583 008e FB6C     		ldr	r3, [r7, #76]
 2584 0090 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 2585 0094 013B     		subs	r3, r3, #1
 2586 0096 042B     		cmp	r3, #4
 2587 0098 00F20682 		bhi	.L286
 2588 009c 01A2     		adr	r2, .L177
 2589 009e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2590 00a2 00BF     		.p2align 2
 2591              	.L177:
 2592 00a4 B9000000 		.word	.L176+1
 2593 00a8 C9010000 		.word	.L178+1
 2594 00ac 0F020000 		.word	.L179+1
 2595 00b0 9B020000 		.word	.L180+1
 2596 00b4 A1030000 		.word	.L181+1
 2597              		.p2align 1
 2598              	.L176:
1038:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
1039:..\src/interruptions.c **** 
1040:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
1041:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
1042:..\src/interruptions.c ****             if (c_mem.enc[ENC_L].double_encoder_on_off) 
 2599              		.loc 1 1042 0
 2600 00b8 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2601 00bc 8149     		ldr	r1, .L295
 2602 00be 1346     		mov	r3, r2
 2603 00c0 5B00     		lsls	r3, r3, #1
 2604 00c2 1344     		add	r3, r3, r2
 2605 00c4 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 66


 2606 00c6 0B44     		add	r3, r3, r1
 2607 00c8 03F5D873 		add	r3, r3, #432
 2608 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2609 00ce 002B     		cmp	r3, #0
 2610 00d0 1CD0     		beq	.L182
1043:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[2] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 2611              		.loc 1 1043 0
 2612 00d2 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2613 00d6 7D49     		ldr	r1, .L295+8
 2614 00d8 1346     		mov	r3, r2
 2615 00da 5B00     		lsls	r3, r3, #1
 2616 00dc 1344     		add	r3, r3, r2
 2617 00de 1B01     		lsls	r3, r3, #4
 2618 00e0 0B44     		add	r3, r3, r1
 2619 00e2 0833     		adds	r3, r3, #8
 2620 00e4 1968     		ldr	r1, [r3]
 2621 00e6 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2622 00ea 7648     		ldr	r0, .L295
 2623 00ec 1346     		mov	r3, r2
 2624 00ee 5B00     		lsls	r3, r3, #1
 2625 00f0 1344     		add	r3, r3, r2
 2626 00f2 1B01     		lsls	r3, r3, #4
 2627 00f4 0344     		add	r3, r3, r0
 2628 00f6 03F2B113 		addw	r3, r3, #433
 2629 00fa 93F90030 		ldrsb	r3, [r3]
 2630 00fe 03FB01F2 		mul	r2, r3, r1
 2631 0102 FB6C     		ldr	r3, [r7, #76]
 2632 0104 5B6B     		ldr	r3, [r3, #52]
 2633 0106 1344     		add	r3, r3, r2
 2634 0108 3B65     		str	r3, [r7, #80]
 2635 010a 1BE0     		b	.L183
 2636              	.L182:
1044:..\src/interruptions.c ****             else
1045:..\src/interruptions.c ****                 handle_value = (g_meas[ENC_L].pos[1] * c_mem.enc[ENC_L].motor_handle_ratio) + MOT->
 2637              		.loc 1 1045 0
 2638 010c 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2639 0110 6E49     		ldr	r1, .L295+8
 2640 0112 1346     		mov	r3, r2
 2641 0114 5B00     		lsls	r3, r3, #1
 2642 0116 1344     		add	r3, r3, r2
 2643 0118 1B01     		lsls	r3, r3, #4
 2644 011a 0B44     		add	r3, r3, r1
 2645 011c 0433     		adds	r3, r3, #4
 2646 011e 1968     		ldr	r1, [r3]
 2647 0120 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 2648 0124 6748     		ldr	r0, .L295
 2649 0126 1346     		mov	r3, r2
 2650 0128 5B00     		lsls	r3, r3, #1
 2651 012a 1344     		add	r3, r3, r2
 2652 012c 1B01     		lsls	r3, r3, #4
 2653 012e 0344     		add	r3, r3, r0
 2654 0130 03F2B113 		addw	r3, r3, #433
 2655 0134 93F90030 		ldrsb	r3, [r3]
 2656 0138 03FB01F2 		mul	r2, r3, r1
 2657 013c FB6C     		ldr	r3, [r7, #76]
 2658 013e 5B6B     		ldr	r3, [r3, #52]
 2659 0140 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 67


 2660 0142 3B65     		str	r3, [r7, #80]
 2661              	.L183:
1046:..\src/interruptions.c ****             
1047:..\src/interruptions.c **** 
1048:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
1049:..\src/interruptions.c ****             if (((handle_value - g_refOld[idx].pos) > MOT->max_step_pos) && (MOT->max_step_pos != 0
 2662              		.loc 1 1049 0
 2663 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2664 0146 624A     		ldr	r2, .L295+12
 2665 0148 1B01     		lsls	r3, r3, #4
 2666 014a 1344     		add	r3, r3, r2
 2667 014c 1B68     		ldr	r3, [r3]
 2668 014e 3A6D     		ldr	r2, [r7, #80]
 2669 0150 D21A     		subs	r2, r2, r3
 2670 0152 FB6C     		ldr	r3, [r7, #76]
 2671 0154 1B6C     		ldr	r3, [r3, #64]
 2672 0156 9A42     		cmp	r2, r3
 2673 0158 11DD     		ble	.L184
 2674              		.loc 1 1049 0 is_stmt 0 discriminator 1
 2675 015a FB6C     		ldr	r3, [r7, #76]
 2676 015c 1B6C     		ldr	r3, [r3, #64]
 2677 015e 002B     		cmp	r3, #0
 2678 0160 0DD0     		beq	.L184
1050:..\src/interruptions.c ****                 g_ref[idx].pos += MOT->max_step_pos;
 2679              		.loc 1 1050 0 is_stmt 1
 2680 0162 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2681 0164 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2682 0166 5B49     		ldr	r1, .L295+16
 2683 0168 1201     		lsls	r2, r2, #4
 2684 016a 0A44     		add	r2, r2, r1
 2685 016c 1168     		ldr	r1, [r2]
 2686 016e FA6C     		ldr	r2, [r7, #76]
 2687 0170 126C     		ldr	r2, [r2, #64]
 2688 0172 0A44     		add	r2, r2, r1
 2689 0174 5749     		ldr	r1, .L295+16
 2690 0176 1B01     		lsls	r3, r3, #4
 2691 0178 0B44     		add	r3, r3, r1
 2692 017a 1A60     		str	r2, [r3]
 2693 017c 23E0     		b	.L185
 2694              	.L184:
1051:..\src/interruptions.c ****             else {
1052:..\src/interruptions.c ****                 if (((handle_value - g_refOld[idx].pos) < MOT->max_step_neg) && (MOT->max_step_neg 
 2695              		.loc 1 1052 0
 2696 017e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2697 0180 534A     		ldr	r2, .L295+12
 2698 0182 1B01     		lsls	r3, r3, #4
 2699 0184 1344     		add	r3, r3, r2
 2700 0186 1B68     		ldr	r3, [r3]
 2701 0188 3A6D     		ldr	r2, [r7, #80]
 2702 018a D21A     		subs	r2, r2, r3
 2703 018c FB6C     		ldr	r3, [r7, #76]
 2704 018e DB6B     		ldr	r3, [r3, #60]
 2705 0190 9A42     		cmp	r2, r3
 2706 0192 11DA     		bge	.L186
 2707              		.loc 1 1052 0 is_stmt 0 discriminator 1
 2708 0194 FB6C     		ldr	r3, [r7, #76]
 2709 0196 DB6B     		ldr	r3, [r3, #60]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 68


 2710 0198 002B     		cmp	r3, #0
 2711 019a 0DD0     		beq	.L186
1053:..\src/interruptions.c ****                     g_ref[idx].pos += MOT->max_step_neg;
 2712              		.loc 1 1053 0 is_stmt 1
 2713 019c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2714 019e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2715 01a0 4C49     		ldr	r1, .L295+16
 2716 01a2 1201     		lsls	r2, r2, #4
 2717 01a4 0A44     		add	r2, r2, r1
 2718 01a6 1168     		ldr	r1, [r2]
 2719 01a8 FA6C     		ldr	r2, [r7, #76]
 2720 01aa D26B     		ldr	r2, [r2, #60]
 2721 01ac 0A44     		add	r2, r2, r1
 2722 01ae 4949     		ldr	r1, .L295+16
 2723 01b0 1B01     		lsls	r3, r3, #4
 2724 01b2 0B44     		add	r3, r3, r1
 2725 01b4 1A60     		str	r2, [r3]
 2726 01b6 06E0     		b	.L185
 2727              	.L186:
1054:..\src/interruptions.c ****                 else
1055:..\src/interruptions.c ****                     g_ref[idx].pos = handle_value;
 2728              		.loc 1 1055 0
 2729 01b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2730 01ba 464A     		ldr	r2, .L295+16
 2731 01bc 1B01     		lsls	r3, r3, #4
 2732 01be 1344     		add	r3, r3, r2
 2733 01c0 3A6D     		ldr	r2, [r7, #80]
 2734 01c2 1A60     		str	r2, [r3]
1056:..\src/interruptions.c ****             }
1057:..\src/interruptions.c ****             break;
 2735              		.loc 1 1057 0
 2736 01c4 73E1     		b	.L187
 2737              	.L185:
 2738 01c6 72E1     		b	.L187
 2739              	.L178:
1058:..\src/interruptions.c ****             
1059:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
1060:..\src/interruptions.c ****             if (err_emg_1 > 0)
 2740              		.loc 1 1060 0
 2741 01c8 7B69     		ldr	r3, [r7, #20]
 2742 01ca 002B     		cmp	r3, #0
 2743 01cc 18DD     		ble	.L188
1061:..\src/interruptions.c ****                 g_ref[idx].pos = (err_emg_1 * g_mem.motor[idx].pos_lim_sup) / (1024 - c_mem.emg.emg
 2744              		.loc 1 1061 0
 2745 01ce F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 2746 01d0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2747 01d2 4148     		ldr	r0, .L295+20
 2748 01d4 1346     		mov	r3, r2
 2749 01d6 DB00     		lsls	r3, r3, #3
 2750 01d8 9B1A     		subs	r3, r3, r2
 2751 01da 1B01     		lsls	r3, r3, #4
 2752 01dc 0344     		add	r3, r3, r0
 2753 01de E833     		adds	r3, r3, #232
 2754 01e0 1B68     		ldr	r3, [r3]
 2755 01e2 7A69     		ldr	r2, [r7, #20]
 2756 01e4 02FB03F2 		mul	r2, r2, r3
 2757 01e8 364B     		ldr	r3, .L295
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 69


 2758 01ea B3F8F031 		ldrh	r3, [r3, #496]
 2759 01ee C3F58063 		rsb	r3, r3, #1024
 2760 01f2 92FBF3F2 		sdiv	r2, r2, r3
 2761 01f6 3748     		ldr	r0, .L295+16
 2762 01f8 0B01     		lsls	r3, r1, #4
 2763 01fa 0344     		add	r3, r3, r0
 2764 01fc 1A60     		str	r2, [r3]
1062:..\src/interruptions.c ****             else
1063:..\src/interruptions.c ****                 g_ref[idx].pos = 0;
1064:..\src/interruptions.c ****             break;
 2765              		.loc 1 1064 0
 2766 01fe 56E1     		b	.L187
 2767              	.L188:
1063:..\src/interruptions.c ****             break;
 2768              		.loc 1 1063 0
 2769 0200 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2770 0202 344A     		ldr	r2, .L295+16
 2771 0204 1B01     		lsls	r3, r3, #4
 2772 0206 1344     		add	r3, r3, r2
 2773 0208 0022     		movs	r2, #0
 2774 020a 1A60     		str	r2, [r3]
 2775              		.loc 1 1064 0
 2776 020c 4FE1     		b	.L187
 2777              	.L179:
1065:..\src/interruptions.c **** 
1066:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
1067:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 2778              		.loc 1 1067 0
 2779 020e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2780 0210 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2781 0212 2F49     		ldr	r1, .L295+12
 2782 0214 1201     		lsls	r2, r2, #4
 2783 0216 0A44     		add	r2, r2, r1
 2784 0218 1268     		ldr	r2, [r2]
 2785 021a 2E49     		ldr	r1, .L295+16
 2786 021c 1B01     		lsls	r3, r3, #4
 2787 021e 0B44     		add	r3, r3, r1
 2788 0220 1A60     		str	r2, [r3]
1068:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 2789              		.loc 1 1068 0
 2790 0222 7B69     		ldr	r3, [r7, #20]
 2791 0224 002B     		cmp	r3, #0
 2792 0226 19DD     		ble	.L190
1069:..\src/interruptions.c ****                 g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * (int)g_mem.emg.emg_speed * 2) / (
 2793              		.loc 1 1069 0
 2794 0228 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2795 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2796 022c 2849     		ldr	r1, .L295+12
 2797 022e 1201     		lsls	r2, r2, #4
 2798 0230 0A44     		add	r2, r2, r1
 2799 0232 1168     		ldr	r1, [r2]
 2800 0234 284A     		ldr	r2, .L295+20
 2801 0236 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 2802 023a 1046     		mov	r0, r2
 2803 023c 7A69     		ldr	r2, [r7, #20]
 2804 023e 02FB00F2 		mul	r2, r2, r0
 2805 0242 5000     		lsls	r0, r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 70


 2806 0244 1F4A     		ldr	r2, .L295
 2807 0246 B2F8F021 		ldrh	r2, [r2, #496]
 2808 024a C2F58062 		rsb	r2, r2, #1024
 2809 024e 90FBF2F2 		sdiv	r2, r0, r2
 2810 0252 0A44     		add	r2, r2, r1
 2811 0254 1F49     		ldr	r1, .L295+16
 2812 0256 1B01     		lsls	r3, r3, #4
 2813 0258 0B44     		add	r3, r3, r1
 2814 025a 1A60     		str	r2, [r3]
 2815              	.L190:
1070:..\src/interruptions.c ****             }
1071:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 2816              		.loc 1 1071 0
 2817 025c 3B69     		ldr	r3, [r7, #16]
 2818 025e 002B     		cmp	r3, #0
 2819 0260 40F32481 		ble	.L287
1072:..\src/interruptions.c ****                 g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * (int)g_mem.emg.emg_speed * 2) / (
 2820              		.loc 1 1072 0
 2821 0264 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2822 0266 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2823 0268 1949     		ldr	r1, .L295+12
 2824 026a 1201     		lsls	r2, r2, #4
 2825 026c 0A44     		add	r2, r2, r1
 2826 026e 1168     		ldr	r1, [r2]
 2827 0270 194A     		ldr	r2, .L295+20
 2828 0272 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 2829 0276 1046     		mov	r0, r2
 2830 0278 3A69     		ldr	r2, [r7, #16]
 2831 027a 02FB00F2 		mul	r2, r2, r0
 2832 027e 5000     		lsls	r0, r2, #1
 2833 0280 104A     		ldr	r2, .L295
 2834 0282 B2F8F221 		ldrh	r2, [r2, #498]
 2835 0286 C2F58062 		rsb	r2, r2, #1024
 2836 028a 90FBF2F2 		sdiv	r2, r0, r2
 2837 028e 8A1A     		subs	r2, r1, r2
 2838 0290 1049     		ldr	r1, .L295+16
 2839 0292 1B01     		lsls	r3, r3, #4
 2840 0294 0B44     		add	r3, r3, r1
 2841 0296 1A60     		str	r2, [r3]
1073:..\src/interruptions.c ****             }
1074:..\src/interruptions.c ****             break;
 2842              		.loc 1 1074 0
 2843 0298 08E1     		b	.L287
 2844              	.L180:
1075:..\src/interruptions.c **** 
1076:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
1077:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 2845              		.loc 1 1077 0
 2846 029a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2847 029c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2848 029e 0C49     		ldr	r1, .L295+12
 2849 02a0 1201     		lsls	r2, r2, #4
 2850 02a2 0A44     		add	r2, r2, r1
 2851 02a4 1268     		ldr	r2, [r2]
 2852 02a6 0B49     		ldr	r1, .L295+16
 2853 02a8 1B01     		lsls	r3, r3, #4
 2854 02aa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 71


 2855 02ac 1A60     		str	r2, [r3]
1078:..\src/interruptions.c ****             switch (current_emg[idx]) {
 2856              		.loc 1 1078 0
 2857 02ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2858 02b0 0A4A     		ldr	r2, .L295+24
 2859 02b2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2860 02b4 012B     		cmp	r3, #1
 2861 02b6 2BD0     		beq	.L193
 2862 02b8 022B     		cmp	r3, #2
 2863 02ba 4CD0     		beq	.L194
 2864 02bc 002B     		cmp	r3, #0
 2865 02be 0FD0     		beq	.L195
1079:..\src/interruptions.c ****                 case 0:
1080:..\src/interruptions.c ****                     // Look for the first EMG passing the threshold
1081:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
1082:..\src/interruptions.c ****                         current_emg[idx] = 1;
1083:..\src/interruptions.c ****                         break;
1084:..\src/interruptions.c ****                     }
1085:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
1086:..\src/interruptions.c ****                         current_emg[idx] = 2;
1087:..\src/interruptions.c ****                         break;
1088:..\src/interruptions.c ****                     }
1089:..\src/interruptions.c ****                     break;
1090:..\src/interruptions.c **** 
1091:..\src/interruptions.c ****                 case 1:
1092:..\src/interruptions.c ****                     // EMG 1 is first
1093:..\src/interruptions.c ****                     if (err_emg_1 < 0) {
1094:..\src/interruptions.c ****                         current_emg[idx] = 0;
1095:..\src/interruptions.c ****                         break;
1096:..\src/interruptions.c ****                     }
1097:..\src/interruptions.c ****                     g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2) / (
1098:..\src/interruptions.c ****                     break;
1099:..\src/interruptions.c **** 
1100:..\src/interruptions.c ****                 case 2:
1101:..\src/interruptions.c ****                     // EMG 2 is first
1102:..\src/interruptions.c ****                     if (err_emg_2 < 0) {
1103:..\src/interruptions.c ****                         current_emg[idx] = 0;
1104:..\src/interruptions.c ****                         break;
1105:..\src/interruptions.c ****                     }
1106:..\src/interruptions.c ****                     g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * g_mem.emg.emg_speed << 2) / (
1107:..\src/interruptions.c ****                     break;
1108:..\src/interruptions.c **** 
1109:..\src/interruptions.c ****                 default:
1110:..\src/interruptions.c ****                     break;
 2866              		.loc 1 1110 0
 2867 02c0 6DE0     		b	.L197
 2868              	.L296:
 2869 02c2 00BF     		.align	2
 2870              	.L295:
 2871 02c4 00000000 		.word	c_mem
 2872 02c8 00000000 		.word	g_emg_meas
 2873 02cc 00000000 		.word	g_meas
 2874 02d0 00000000 		.word	g_refOld
 2875 02d4 00000000 		.word	g_ref
 2876 02d8 00000000 		.word	g_mem
 2877 02dc AC000000 		.word	current_emg.10430
 2878              	.L195:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 72


1081:..\src/interruptions.c ****                         current_emg[idx] = 1;
 2879              		.loc 1 1081 0
 2880 02e0 7B69     		ldr	r3, [r7, #20]
 2881 02e2 002B     		cmp	r3, #0
 2882 02e4 08DD     		ble	.L196
1081:..\src/interruptions.c ****                         current_emg[idx] = 1;
 2883              		.loc 1 1081 0 is_stmt 0 discriminator 1
 2884 02e6 7A69     		ldr	r2, [r7, #20]
 2885 02e8 3B69     		ldr	r3, [r7, #16]
 2886 02ea 9A42     		cmp	r2, r3
 2887 02ec 04DD     		ble	.L196
1082:..\src/interruptions.c ****                         break;
 2888              		.loc 1 1082 0 is_stmt 1
 2889 02ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2890 02f0 A14A     		ldr	r2, .L297
 2891 02f2 0121     		movs	r1, #1
 2892 02f4 D154     		strb	r1, [r2, r3]
1083:..\src/interruptions.c ****                     }
 2893              		.loc 1 1083 0
 2894 02f6 52E0     		b	.L197
 2895              	.L196:
1085:..\src/interruptions.c ****                         current_emg[idx] = 2;
 2896              		.loc 1 1085 0
 2897 02f8 3B69     		ldr	r3, [r7, #16]
 2898 02fa 002B     		cmp	r3, #0
 2899 02fc 4EDD     		ble	.L288
1085:..\src/interruptions.c ****                         current_emg[idx] = 2;
 2900              		.loc 1 1085 0 is_stmt 0 discriminator 1
 2901 02fe 3A69     		ldr	r2, [r7, #16]
 2902 0300 7B69     		ldr	r3, [r7, #20]
 2903 0302 9A42     		cmp	r2, r3
 2904 0304 4ADD     		ble	.L288
1086:..\src/interruptions.c ****                         break;
 2905              		.loc 1 1086 0 is_stmt 1
 2906 0306 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2907 0308 9B4A     		ldr	r2, .L297
 2908 030a 0221     		movs	r1, #2
 2909 030c D154     		strb	r1, [r2, r3]
1087:..\src/interruptions.c ****                     }
 2910              		.loc 1 1087 0
 2911 030e 46E0     		b	.L197
 2912              	.L193:
1093:..\src/interruptions.c ****                         current_emg[idx] = 0;
 2913              		.loc 1 1093 0
 2914 0310 7B69     		ldr	r3, [r7, #20]
 2915 0312 002B     		cmp	r3, #0
 2916 0314 04DA     		bge	.L199
1094:..\src/interruptions.c ****                         break;
 2917              		.loc 1 1094 0
 2918 0316 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2919 0318 974A     		ldr	r2, .L297
 2920 031a 0021     		movs	r1, #0
 2921 031c D154     		strb	r1, [r2, r3]
1095:..\src/interruptions.c ****                     }
 2922              		.loc 1 1095 0
 2923 031e 3EE0     		b	.L197
 2924              	.L199:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 73


1097:..\src/interruptions.c ****                     break;
 2925              		.loc 1 1097 0
 2926 0320 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2927 0322 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2928 0324 9549     		ldr	r1, .L297+4
 2929 0326 1201     		lsls	r2, r2, #4
 2930 0328 0A44     		add	r2, r2, r1
 2931 032a 1168     		ldr	r1, [r2]
 2932 032c 944A     		ldr	r2, .L297+8
 2933 032e 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 2934 0332 1046     		mov	r0, r2
 2935 0334 7A69     		ldr	r2, [r7, #20]
 2936 0336 02FB00F2 		mul	r2, r2, r0
 2937 033a 9000     		lsls	r0, r2, #2
 2938 033c 914A     		ldr	r2, .L297+12
 2939 033e B2F8F021 		ldrh	r2, [r2, #496]
 2940 0342 C2F58062 		rsb	r2, r2, #1024
 2941 0346 90FBF2F2 		sdiv	r2, r0, r2
 2942 034a 0A44     		add	r2, r2, r1
 2943 034c 8E49     		ldr	r1, .L297+16
 2944 034e 1B01     		lsls	r3, r3, #4
 2945 0350 0B44     		add	r3, r3, r1
 2946 0352 1A60     		str	r2, [r3]
1098:..\src/interruptions.c **** 
 2947              		.loc 1 1098 0
 2948 0354 23E0     		b	.L197
 2949              	.L194:
1102:..\src/interruptions.c ****                         current_emg[idx] = 0;
 2950              		.loc 1 1102 0
 2951 0356 3B69     		ldr	r3, [r7, #16]
 2952 0358 002B     		cmp	r3, #0
 2953 035a 04DA     		bge	.L200
1103:..\src/interruptions.c ****                         break;
 2954              		.loc 1 1103 0
 2955 035c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2956 035e 864A     		ldr	r2, .L297
 2957 0360 0021     		movs	r1, #0
 2958 0362 D154     		strb	r1, [r2, r3]
1104:..\src/interruptions.c ****                     }
 2959              		.loc 1 1104 0
 2960 0364 1BE0     		b	.L197
 2961              	.L200:
1106:..\src/interruptions.c ****                     break;
 2962              		.loc 1 1106 0
 2963 0366 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2964 0368 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2965 036a 8449     		ldr	r1, .L297+4
 2966 036c 1201     		lsls	r2, r2, #4
 2967 036e 0A44     		add	r2, r2, r1
 2968 0370 1168     		ldr	r1, [r2]
 2969 0372 834A     		ldr	r2, .L297+8
 2970 0374 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 2971 0378 1046     		mov	r0, r2
 2972 037a 3A69     		ldr	r2, [r7, #16]
 2973 037c 02FB00F2 		mul	r2, r2, r0
 2974 0380 9000     		lsls	r0, r2, #2
 2975 0382 804A     		ldr	r2, .L297+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 74


 2976 0384 B2F8F221 		ldrh	r2, [r2, #498]
 2977 0388 C2F58062 		rsb	r2, r2, #1024
 2978 038c 90FBF2F2 		sdiv	r2, r0, r2
 2979 0390 8A1A     		subs	r2, r1, r2
 2980 0392 7D49     		ldr	r1, .L297+16
 2981 0394 1B01     		lsls	r3, r3, #4
 2982 0396 0B44     		add	r3, r3, r1
 2983 0398 1A60     		str	r2, [r3]
1107:..\src/interruptions.c **** 
 2984              		.loc 1 1107 0
 2985 039a 00E0     		b	.L197
 2986              	.L288:
1089:..\src/interruptions.c **** 
 2987              		.loc 1 1089 0
 2988 039c 00BF     		nop
 2989              	.L197:
1111:..\src/interruptions.c ****             }
1112:..\src/interruptions.c ****             break;
 2990              		.loc 1 1112 0 discriminator 1
 2991 039e 86E0     		b	.L187
 2992              	.L181:
1113:..\src/interruptions.c **** 
1114:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
1115:..\src/interruptions.c ****             g_ref[idx].pos = g_refOld[idx].pos;
 2993              		.loc 1 1115 0
 2994 03a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2995 03a2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2996 03a4 7549     		ldr	r1, .L297+4
 2997 03a6 1201     		lsls	r2, r2, #4
 2998 03a8 0A44     		add	r2, r2, r1
 2999 03aa 1268     		ldr	r2, [r2]
 3000 03ac 7649     		ldr	r1, .L297+16
 3001 03ae 1B01     		lsls	r3, r3, #4
 3002 03b0 0B44     		add	r3, r3, r1
 3003 03b2 1A60     		str	r2, [r3]
1116:..\src/interruptions.c ****             switch (current_emg[idx]) {
 3004              		.loc 1 1116 0
 3005 03b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3006 03b6 704A     		ldr	r2, .L297
 3007 03b8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3008 03ba 012B     		cmp	r3, #1
 3009 03bc 1CD0     		beq	.L202
 3010 03be 022B     		cmp	r3, #2
 3011 03c0 43D0     		beq	.L203
 3012 03c2 002B     		cmp	r3, #0
 3013 03c4 00D0     		beq	.L204
1117:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
1118:..\src/interruptions.c ****                 case 0:
1119:..\src/interruptions.c ****                     if (err_emg_1 > 0 && err_emg_1 > err_emg_2) {
1120:..\src/interruptions.c ****                         current_emg[idx] = 1;
1121:..\src/interruptions.c ****                         break;
1122:..\src/interruptions.c ****                     }
1123:..\src/interruptions.c ****                     if (err_emg_2 > 0 && err_emg_2 > err_emg_1) {
1124:..\src/interruptions.c ****                         current_emg[idx] = 2;
1125:..\src/interruptions.c ****                         break;
1126:..\src/interruptions.c ****                     }
1127:..\src/interruptions.c ****                     break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 75


1128:..\src/interruptions.c **** 
1129:..\src/interruptions.c ****                 // EMG 1 is first
1130:..\src/interruptions.c ****                 case 1:
1131:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
1132:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
1133:..\src/interruptions.c ****                         current_emg[idx] = 0;
1134:..\src/interruptions.c ****                         break;
1135:..\src/interruptions.c ****                     }
1136:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
1137:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
1138:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2)
1139:..\src/interruptions.c ****                     
1140:..\src/interruptions.c ****                     break;
1141:..\src/interruptions.c **** 
1142:..\src/interruptions.c ****                 // EMG 2 is first
1143:..\src/interruptions.c ****                 case 2:
1144:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
1145:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
1146:..\src/interruptions.c ****                         current_emg[idx] = 0;
1147:..\src/interruptions.c ****                         break;
1148:..\src/interruptions.c ****                     }
1149:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
1150:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
1151:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * c_mem.emg.emg_speed << 2)
1152:..\src/interruptions.c ****                     }
1153:..\src/interruptions.c ****                     break;
1154:..\src/interruptions.c **** 
1155:..\src/interruptions.c ****                 default:
1156:..\src/interruptions.c ****                     break;
 3014              		.loc 1 1156 0
 3015 03c6 6EE0     		b	.L206
 3016              	.L204:
1119:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3017              		.loc 1 1119 0
 3018 03c8 7B69     		ldr	r3, [r7, #20]
 3019 03ca 002B     		cmp	r3, #0
 3020 03cc 08DD     		ble	.L205
1119:..\src/interruptions.c ****                         current_emg[idx] = 1;
 3021              		.loc 1 1119 0 is_stmt 0 discriminator 1
 3022 03ce 7A69     		ldr	r2, [r7, #20]
 3023 03d0 3B69     		ldr	r3, [r7, #16]
 3024 03d2 9A42     		cmp	r2, r3
 3025 03d4 04DD     		ble	.L205
1120:..\src/interruptions.c ****                         break;
 3026              		.loc 1 1120 0 is_stmt 1
 3027 03d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3028 03d8 674A     		ldr	r2, .L297
 3029 03da 0121     		movs	r1, #1
 3030 03dc D154     		strb	r1, [r2, r3]
1121:..\src/interruptions.c ****                     }
 3031              		.loc 1 1121 0
 3032 03de 62E0     		b	.L206
 3033              	.L205:
1123:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3034              		.loc 1 1123 0
 3035 03e0 3B69     		ldr	r3, [r7, #16]
 3036 03e2 002B     		cmp	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 76


 3037 03e4 5ADD     		ble	.L289
1123:..\src/interruptions.c ****                         current_emg[idx] = 2;
 3038              		.loc 1 1123 0 is_stmt 0 discriminator 1
 3039 03e6 3A69     		ldr	r2, [r7, #16]
 3040 03e8 7B69     		ldr	r3, [r7, #20]
 3041 03ea 9A42     		cmp	r2, r3
 3042 03ec 56DD     		ble	.L289
1124:..\src/interruptions.c ****                         break;
 3043              		.loc 1 1124 0 is_stmt 1
 3044 03ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3045 03f0 614A     		ldr	r2, .L297
 3046 03f2 0221     		movs	r1, #2
 3047 03f4 D154     		strb	r1, [r2, r3]
1125:..\src/interruptions.c ****                     }
 3048              		.loc 1 1125 0
 3049 03f6 56E0     		b	.L206
 3050              	.L202:
1132:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3051              		.loc 1 1132 0
 3052 03f8 7B69     		ldr	r3, [r7, #20]
 3053 03fa 002B     		cmp	r3, #0
 3054 03fc 07DA     		bge	.L208
1132:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3055              		.loc 1 1132 0 is_stmt 0 discriminator 1
 3056 03fe 3B69     		ldr	r3, [r7, #16]
 3057 0400 002B     		cmp	r3, #0
 3058 0402 04DA     		bge	.L208
1133:..\src/interruptions.c ****                         break;
 3059              		.loc 1 1133 0 is_stmt 1
 3060 0404 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3061 0406 5C4A     		ldr	r2, .L297
 3062 0408 0021     		movs	r1, #0
 3063 040a D154     		strb	r1, [r2, r3]
1134:..\src/interruptions.c ****                     }
 3064              		.loc 1 1134 0
 3065 040c 4BE0     		b	.L206
 3066              	.L208:
1137:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos + (err_emg_1 * g_mem.emg.emg_speed << 2)
 3067              		.loc 1 1137 0
 3068 040e 7B69     		ldr	r3, [r7, #20]
 3069 0410 002B     		cmp	r3, #0
 3070 0412 45DD     		ble	.L290
1138:..\src/interruptions.c ****                     
 3071              		.loc 1 1138 0
 3072 0414 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3073 0416 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3074 0418 5849     		ldr	r1, .L297+4
 3075 041a 1201     		lsls	r2, r2, #4
 3076 041c 0A44     		add	r2, r2, r1
 3077 041e 1168     		ldr	r1, [r2]
 3078 0420 574A     		ldr	r2, .L297+8
 3079 0422 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3080 0426 1046     		mov	r0, r2
 3081 0428 7A69     		ldr	r2, [r7, #20]
 3082 042a 02FB00F2 		mul	r2, r2, r0
 3083 042e 9000     		lsls	r0, r2, #2
 3084 0430 544A     		ldr	r2, .L297+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 77


 3085 0432 B2F8F021 		ldrh	r2, [r2, #496]
 3086 0436 C2F58062 		rsb	r2, r2, #1024
 3087 043a 90FBF2F2 		sdiv	r2, r0, r2
 3088 043e 0A44     		add	r2, r2, r1
 3089 0440 5149     		ldr	r1, .L297+16
 3090 0442 1B01     		lsls	r3, r3, #4
 3091 0444 0B44     		add	r3, r3, r1
 3092 0446 1A60     		str	r2, [r3]
1140:..\src/interruptions.c **** 
 3093              		.loc 1 1140 0
 3094 0448 2AE0     		b	.L290
 3095              	.L203:
1145:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3096              		.loc 1 1145 0
 3097 044a 7B69     		ldr	r3, [r7, #20]
 3098 044c 002B     		cmp	r3, #0
 3099 044e 07DA     		bge	.L210
1145:..\src/interruptions.c ****                         current_emg[idx] = 0;
 3100              		.loc 1 1145 0 is_stmt 0 discriminator 1
 3101 0450 3B69     		ldr	r3, [r7, #16]
 3102 0452 002B     		cmp	r3, #0
 3103 0454 04DA     		bge	.L210
1146:..\src/interruptions.c ****                         break;
 3104              		.loc 1 1146 0 is_stmt 1
 3105 0456 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3106 0458 474A     		ldr	r2, .L297
 3107 045a 0021     		movs	r1, #0
 3108 045c D154     		strb	r1, [r2, r3]
1147:..\src/interruptions.c ****                     }
 3109              		.loc 1 1147 0
 3110 045e 22E0     		b	.L206
 3111              	.L210:
1150:..\src/interruptions.c ****                         g_ref[idx].pos = g_refOld[idx].pos - (err_emg_2 * c_mem.emg.emg_speed << 2)
 3112              		.loc 1 1150 0
 3113 0460 3B69     		ldr	r3, [r7, #16]
 3114 0462 002B     		cmp	r3, #0
 3115 0464 1EDD     		ble	.L291
1151:..\src/interruptions.c ****                     }
 3116              		.loc 1 1151 0
 3117 0466 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3118 0468 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3119 046a 4449     		ldr	r1, .L297+4
 3120 046c 1201     		lsls	r2, r2, #4
 3121 046e 0A44     		add	r2, r2, r1
 3122 0470 1168     		ldr	r1, [r2]
 3123 0472 444A     		ldr	r2, .L297+12
 3124 0474 92F8FC21 		ldrb	r2, [r2, #508]	@ zero_extendqisi2
 3125 0478 1046     		mov	r0, r2
 3126 047a 3A69     		ldr	r2, [r7, #16]
 3127 047c 02FB00F2 		mul	r2, r2, r0
 3128 0480 9000     		lsls	r0, r2, #2
 3129 0482 404A     		ldr	r2, .L297+12
 3130 0484 B2F8F221 		ldrh	r2, [r2, #498]
 3131 0488 C2F58062 		rsb	r2, r2, #1024
 3132 048c 90FBF2F2 		sdiv	r2, r0, r2
 3133 0490 8A1A     		subs	r2, r1, r2
 3134 0492 3D49     		ldr	r1, .L297+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 78


 3135 0494 1B01     		lsls	r3, r3, #4
 3136 0496 0B44     		add	r3, r3, r1
 3137 0498 1A60     		str	r2, [r3]
1153:..\src/interruptions.c **** 
 3138              		.loc 1 1153 0
 3139 049a 03E0     		b	.L291
 3140              	.L289:
1127:..\src/interruptions.c **** 
 3141              		.loc 1 1127 0
 3142 049c 00BF     		nop
 3143 049e 06E0     		b	.L187
 3144              	.L290:
1140:..\src/interruptions.c **** 
 3145              		.loc 1 1140 0
 3146 04a0 00BF     		nop
 3147 04a2 04E0     		b	.L187
 3148              	.L291:
1153:..\src/interruptions.c **** 
 3149              		.loc 1 1153 0
 3150 04a4 00BF     		nop
 3151              	.L206:
1157:..\src/interruptions.c ****             }
1158:..\src/interruptions.c ****             break;
 3152              		.loc 1 1158 0 discriminator 3
 3153 04a6 02E0     		b	.L187
 3154              	.L286:
1159:..\src/interruptions.c **** 
1160:..\src/interruptions.c ****         default:
1161:..\src/interruptions.c ****             break;
 3155              		.loc 1 1161 0
 3156 04a8 00BF     		nop
 3157 04aa 00E0     		b	.L187
 3158              	.L287:
1074:..\src/interruptions.c **** 
 3159              		.loc 1 1074 0
 3160 04ac 00BF     		nop
 3161              	.L187:
1162:..\src/interruptions.c ****     }
1163:..\src/interruptions.c **** 
1164:..\src/interruptions.c ****     // Position limit saturation
1165:..\src/interruptions.c ****     if (MOT->pos_lim_flag) {
 3162              		.loc 1 1165 0
 3163 04ae FB6C     		ldr	r3, [r7, #76]
 3164 04b0 93F83330 		ldrb	r3, [r3, #51]	@ zero_extendqisi2
 3165 04b4 002B     		cmp	r3, #0
 3166 04b6 1FD0     		beq	.L212
1166:..\src/interruptions.c ****         if (g_ref[idx].pos < MOT->pos_lim_inf) 
 3167              		.loc 1 1166 0
 3168 04b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3169 04ba 334A     		ldr	r2, .L297+16
 3170 04bc 1B01     		lsls	r3, r3, #4
 3171 04be 1344     		add	r3, r3, r2
 3172 04c0 1A68     		ldr	r2, [r3]
 3173 04c2 FB6C     		ldr	r3, [r7, #76]
 3174 04c4 5B6B     		ldr	r3, [r3, #52]
 3175 04c6 9A42     		cmp	r2, r3
 3176 04c8 06DA     		bge	.L213
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 79


1167:..\src/interruptions.c ****             g_ref[idx].pos = MOT->pos_lim_inf;
 3177              		.loc 1 1167 0
 3178 04ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3179 04cc FA6C     		ldr	r2, [r7, #76]
 3180 04ce 526B     		ldr	r2, [r2, #52]
 3181 04d0 2D49     		ldr	r1, .L297+16
 3182 04d2 1B01     		lsls	r3, r3, #4
 3183 04d4 0B44     		add	r3, r3, r1
 3184 04d6 1A60     		str	r2, [r3]
 3185              	.L213:
1168:..\src/interruptions.c ****         if (g_ref[idx].pos > MOT->pos_lim_sup) 
 3186              		.loc 1 1168 0
 3187 04d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3188 04da 2B4A     		ldr	r2, .L297+16
 3189 04dc 1B01     		lsls	r3, r3, #4
 3190 04de 1344     		add	r3, r3, r2
 3191 04e0 1A68     		ldr	r2, [r3]
 3192 04e2 FB6C     		ldr	r3, [r7, #76]
 3193 04e4 9B6B     		ldr	r3, [r3, #56]
 3194 04e6 9A42     		cmp	r2, r3
 3195 04e8 06DD     		ble	.L212
1169:..\src/interruptions.c ****             g_ref[idx].pos = MOT->pos_lim_sup;
 3196              		.loc 1 1169 0
 3197 04ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3198 04ec FA6C     		ldr	r2, [r7, #76]
 3199 04ee 926B     		ldr	r2, [r2, #56]
 3200 04f0 2549     		ldr	r1, .L297+16
 3201 04f2 1B01     		lsls	r3, r3, #4
 3202 04f4 0B44     		add	r3, r3, r1
 3203 04f6 1A60     		str	r2, [r3]
 3204              	.L212:
1170:..\src/interruptions.c ****     }
1171:..\src/interruptions.c ****     
1172:..\src/interruptions.c ****     // SAFETY
1173:..\src/interruptions.c ****     if (battery_low_SoC == 1) {
 3205              		.loc 1 1173 0
 3206 04f8 244B     		ldr	r3, .L297+20
 3207 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3208 04fc 012B     		cmp	r3, #1
 3209 04fe 05D1     		bne	.L214
1174:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
1175:..\src/interruptions.c ****         g_ref[idx].pos = 0;
 3210              		.loc 1 1175 0
 3211 0500 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3212 0502 214A     		ldr	r2, .L297+16
 3213 0504 1B01     		lsls	r3, r3, #4
 3214 0506 1344     		add	r3, r3, r2
 3215 0508 0022     		movs	r2, #0
 3216 050a 1A60     		str	r2, [r3]
 3217              	.L214:
1176:..\src/interruptions.c ****     }        
1177:..\src/interruptions.c **** 
1178:..\src/interruptions.c ****     switch(MOT->control_mode) {
 3218              		.loc 1 1178 0
 3219 050c FB6C     		ldr	r3, [r7, #76]
 3220 050e 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3221 0512 032B     		cmp	r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 80


 3222 0514 00F25282 		bhi	.L215
 3223 0518 01A2     		adr	r2, .L217
 3224 051a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3225 051e 00BF     		.p2align 2
 3226              	.L217:
 3227 0520 39070000 		.word	.L216+1
 3228 0524 75090000 		.word	.L218+1
 3229 0528 41080000 		.word	.L219+1
 3230 052c 31050000 		.word	.L220+1
 3231              		.p2align 1
 3232              	.L220:
1179:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
1180:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
1181:..\src/interruptions.c ****             pos_error = g_ref[0].pos - g_meas[ENC_L].pos[0];
 3233              		.loc 1 1181 0
 3234 0530 154B     		ldr	r3, .L297+16
 3235 0532 1968     		ldr	r1, [r3]
 3236 0534 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3237 0538 1548     		ldr	r0, .L297+24
 3238 053a 1346     		mov	r3, r2
 3239 053c 5B00     		lsls	r3, r3, #1
 3240 053e 1344     		add	r3, r3, r2
 3241 0540 1B01     		lsls	r3, r3, #4
 3242 0542 0344     		add	r3, r3, r0
 3243 0544 1B68     		ldr	r3, [r3]
 3244 0546 CB1A     		subs	r3, r1, r3
 3245 0548 BB65     		str	r3, [r7, #88]
1182:..\src/interruptions.c **** 
1183:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 3246              		.loc 1 1183 0
 3247 054a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3248 054c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3249 054e 1149     		ldr	r1, .L297+28
 3250 0550 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3251 0554 BA6D     		ldr	r2, [r7, #88]
 3252 0556 0A44     		add	r2, r2, r1
 3253 0558 0E49     		ldr	r1, .L297+28
 3254 055a 41F82320 		str	r2, [r1, r3, lsl #2]
1184:..\src/interruptions.c **** 
1185:..\src/interruptions.c ****             // error_sum saturation
1186:..\src/interruptions.c ****             if (pos_error_sum[idx] > POS_INTEGRAL_SAT_LIMIT)
 3255              		.loc 1 1186 0
 3256 055e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3257 0560 0C4A     		ldr	r2, .L297+28
 3258 0562 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3259 0566 0C4A     		ldr	r2, .L297+32
 3260 0568 9342     		cmp	r3, r2
 3261 056a 17DD     		ble	.L221
1187:..\src/interruptions.c ****                 pos_error_sum[idx] = POS_INTEGRAL_SAT_LIMIT;
 3262              		.loc 1 1187 0
 3263 056c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3264 056e 094A     		ldr	r2, .L297+28
 3265 0570 0949     		ldr	r1, .L297+32
 3266 0572 42F82310 		str	r1, [r2, r3, lsl #2]
 3267 0576 1DE0     		b	.L222
 3268              	.L298:
 3269              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 81


 3270              	.L297:
 3271 0578 AC000000 		.word	current_emg.10430
 3272 057c 00000000 		.word	g_refOld
 3273 0580 00000000 		.word	g_mem
 3274 0584 00000000 		.word	c_mem
 3275 0588 00000000 		.word	g_ref
 3276 058c 00000000 		.word	battery_low_SoC
 3277 0590 00000000 		.word	g_meas
 3278 0594 B0000000 		.word	pos_error_sum.10423
 3279 0598 80F0FA02 		.word	50000000
 3280              	.L221:
1188:..\src/interruptions.c ****             else {
1189:..\src/interruptions.c ****                 if (pos_error_sum[idx] < -POS_INTEGRAL_SAT_LIMIT) 
 3281              		.loc 1 1189 0
 3282 059c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3283 059e 9D4A     		ldr	r2, .L299
 3284 05a0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3285 05a4 9C4A     		ldr	r2, .L299+4
 3286 05a6 9342     		cmp	r3, r2
 3287 05a8 04DA     		bge	.L222
1190:..\src/interruptions.c ****                     pos_error_sum[idx] = -POS_INTEGRAL_SAT_LIMIT;
 3288              		.loc 1 1190 0
 3289 05aa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3290 05ac 994A     		ldr	r2, .L299
 3291 05ae 9A49     		ldr	r1, .L299+4
 3292 05b0 42F82310 		str	r1, [r2, r3, lsl #2]
 3293              	.L222:
1191:..\src/interruptions.c ****             }
1192:..\src/interruptions.c ****             
1193:..\src/interruptions.c ****             // ------ position PID control ------
1194:..\src/interruptions.c **** 
1195:..\src/interruptions.c ****             i_ref = 0;
 3294              		.loc 1 1195 0
 3295 05b4 0023     		movs	r3, #0
 3296 05b6 7B65     		str	r3, [r7, #84]
1196:..\src/interruptions.c ****             
1197:..\src/interruptions.c ****             // Proportional
1198:..\src/interruptions.c ****             if (k_p_dl != 0)
 3297              		.loc 1 1198 0
 3298 05b8 FB6A     		ldr	r3, [r7, #44]
 3299 05ba 002B     		cmp	r3, #0
 3300 05bc 07D0     		beq	.L223
1199:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 3301              		.loc 1 1199 0
 3302 05be FB6A     		ldr	r3, [r7, #44]
 3303 05c0 BA6D     		ldr	r2, [r7, #88]
 3304 05c2 02FB03F3 		mul	r3, r2, r3
 3305 05c6 1B14     		asrs	r3, r3, #16
 3306 05c8 7A6D     		ldr	r2, [r7, #84]
 3307 05ca 1344     		add	r3, r3, r2
 3308 05cc 7B65     		str	r3, [r7, #84]
 3309              	.L223:
1200:..\src/interruptions.c **** 
1201:..\src/interruptions.c ****             // Integral
1202:..\src/interruptions.c ****             if (k_i_dl != 0)
 3310              		.loc 1 1202 0
 3311 05ce BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 82


 3312 05d0 002B     		cmp	r3, #0
 3313 05d2 0AD0     		beq	.L224
1203:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum[idx]) >> 16;
 3314              		.loc 1 1203 0
 3315 05d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3316 05d6 8F4A     		ldr	r2, .L299
 3317 05d8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3318 05dc BA6A     		ldr	r2, [r7, #40]
 3319 05de 02FB03F3 		mul	r3, r2, r3
 3320 05e2 1B14     		asrs	r3, r3, #16
 3321 05e4 7A6D     		ldr	r2, [r7, #84]
 3322 05e6 1344     		add	r3, r3, r2
 3323 05e8 7B65     		str	r3, [r7, #84]
 3324              	.L224:
1204:..\src/interruptions.c **** 
1205:..\src/interruptions.c ****             // Derivative
1206:..\src/interruptions.c ****             if (k_d_dl != 0)
 3325              		.loc 1 1206 0
 3326 05ea 7B6A     		ldr	r3, [r7, #36]
 3327 05ec 002B     		cmp	r3, #0
 3328 05ee 0CD0     		beq	.L225
1207:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err[idx])) >> 16;
 3329              		.loc 1 1207 0
 3330 05f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3331 05f2 8A4A     		ldr	r2, .L299+8
 3332 05f4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3333 05f8 BA6D     		ldr	r2, [r7, #88]
 3334 05fa D31A     		subs	r3, r2, r3
 3335 05fc 7A6A     		ldr	r2, [r7, #36]
 3336 05fe 02FB03F3 		mul	r3, r2, r3
 3337 0602 1B14     		asrs	r3, r3, #16
 3338 0604 7A6D     		ldr	r2, [r7, #84]
 3339 0606 1344     		add	r3, r3, r2
 3340 0608 7B65     		str	r3, [r7, #84]
 3341              	.L225:
1208:..\src/interruptions.c ****                         
1209:..\src/interruptions.c ****             // Update previous position
1210:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 3342              		.loc 1 1210 0
 3343 060a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3344 060c 8349     		ldr	r1, .L299+8
 3345 060e BA6D     		ldr	r2, [r7, #88]
 3346 0610 41F82320 		str	r2, [r1, r3, lsl #2]
1211:..\src/interruptions.c **** 
1212:..\src/interruptions.c ****             // motor direction depends on i_ref
1213:..\src/interruptions.c ****             if (i_ref >= 0)
 3347              		.loc 1 1213 0
 3348 0614 7B6D     		ldr	r3, [r7, #84]
 3349 0616 002B     		cmp	r3, #0
 3350 0618 04DB     		blt	.L226
1214:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 3351              		.loc 1 1214 0
 3352 061a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3353 061c 804A     		ldr	r2, .L299+12
 3354 061e 0121     		movs	r1, #1
 3355 0620 D154     		strb	r1, [r2, r3]
 3356 0622 03E0     		b	.L227
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 83


 3357              	.L226:
1215:..\src/interruptions.c ****             else
1216:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 3358              		.loc 1 1216 0
 3359 0624 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3360 0626 7E4A     		ldr	r2, .L299+12
 3361 0628 0021     		movs	r1, #0
 3362 062a D154     		strb	r1, [r2, r3]
 3363              	.L227:
1217:..\src/interruptions.c **** 
1218:..\src/interruptions.c ****             // saturate max current
1219:..\src/interruptions.c ****             if (i_ref > MOT->current_limit)
 3364              		.loc 1 1219 0
 3365 062c FB6C     		ldr	r3, [r7, #76]
 3366 062e B3F95C30 		ldrsh	r3, [r3, #92]
 3367 0632 1A46     		mov	r2, r3
 3368 0634 7B6D     		ldr	r3, [r7, #84]
 3369 0636 9A42     		cmp	r2, r3
 3370 0638 04DA     		bge	.L228
1220:..\src/interruptions.c ****                 i_ref = MOT->current_limit;
 3371              		.loc 1 1220 0
 3372 063a FB6C     		ldr	r3, [r7, #76]
 3373 063c B3F95C30 		ldrsh	r3, [r3, #92]
 3374 0640 7B65     		str	r3, [r7, #84]
 3375 0642 0BE0     		b	.L229
 3376              	.L228:
1221:..\src/interruptions.c ****             else {
1222:..\src/interruptions.c ****                 if (i_ref < -MOT->current_limit)
 3377              		.loc 1 1222 0
 3378 0644 FB6C     		ldr	r3, [r7, #76]
 3379 0646 B3F95C30 		ldrsh	r3, [r3, #92]
 3380 064a 5A42     		negs	r2, r3
 3381 064c 7B6D     		ldr	r3, [r7, #84]
 3382 064e 9A42     		cmp	r2, r3
 3383 0650 04DD     		ble	.L229
1223:..\src/interruptions.c ****                     i_ref = -MOT->current_limit;
 3384              		.loc 1 1223 0
 3385 0652 FB6C     		ldr	r3, [r7, #76]
 3386 0654 B3F95C30 		ldrsh	r3, [r3, #92]
 3387 0658 5B42     		negs	r3, r3
 3388 065a 7B65     		str	r3, [r7, #84]
 3389              	.L229:
1224:..\src/interruptions.c ****         	}
1225:..\src/interruptions.c **** 
1226:..\src/interruptions.c ****             // current error and curr error sum
1227:..\src/interruptions.c ****             curr_error = i_ref - g_meas[ENC_L].curr;
 3390              		.loc 1 1227 0
 3391 065c 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3392 0660 7049     		ldr	r1, .L299+16
 3393 0662 1346     		mov	r3, r2
 3394 0664 5B00     		lsls	r3, r3, #1
 3395 0666 1344     		add	r3, r3, r2
 3396 0668 1B01     		lsls	r3, r3, #4
 3397 066a 0B44     		add	r3, r3, r1
 3398 066c 0C33     		adds	r3, r3, #12
 3399 066e 1B68     		ldr	r3, [r3]
 3400 0670 7A6D     		ldr	r2, [r7, #84]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 84


 3401 0672 D31A     		subs	r3, r2, r3
 3402 0674 FB60     		str	r3, [r7, #12]
1228:..\src/interruptions.c ****             curr_error_sum[idx] += curr_error;
 3403              		.loc 1 1228 0
 3404 0676 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3405 0678 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3406 067a 6B49     		ldr	r1, .L299+20
 3407 067c 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3408 0680 FA68     		ldr	r2, [r7, #12]
 3409 0682 0A44     		add	r2, r2, r1
 3410 0684 6849     		ldr	r1, .L299+20
 3411 0686 41F82320 		str	r2, [r1, r3, lsl #2]
1229:..\src/interruptions.c ****             
1230:..\src/interruptions.c ****             if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 3412              		.loc 1 1230 0
 3413 068a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3414 068c 664A     		ldr	r2, .L299+20
 3415 068e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3416 0692 664A     		ldr	r2, .L299+24
 3417 0694 9342     		cmp	r3, r2
 3418 0696 05DD     		ble	.L230
1231:..\src/interruptions.c ****                 curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 3419              		.loc 1 1231 0
 3420 0698 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3421 069a 634A     		ldr	r2, .L299+20
 3422 069c 6349     		ldr	r1, .L299+24
 3423 069e 42F82310 		str	r1, [r2, r3, lsl #2]
 3424 06a2 0BE0     		b	.L231
 3425              	.L230:
1232:..\src/interruptions.c ****             else {
1233:..\src/interruptions.c ****                 if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT)
 3426              		.loc 1 1233 0
 3427 06a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3428 06a6 604A     		ldr	r2, .L299+20
 3429 06a8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3430 06ac 604A     		ldr	r2, .L299+28
 3431 06ae 9342     		cmp	r3, r2
 3432 06b0 04DA     		bge	.L231
1234:..\src/interruptions.c ****                     curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 3433              		.loc 1 1234 0
 3434 06b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3435 06b4 5C4A     		ldr	r2, .L299+20
 3436 06b6 5E49     		ldr	r1, .L299+28
 3437 06b8 42F82310 		str	r1, [r2, r3, lsl #2]
 3438              	.L231:
1235:..\src/interruptions.c ****             }
1236:..\src/interruptions.c **** 
1237:..\src/interruptions.c ****             // ----- current PID control -----
1238:..\src/interruptions.c **** 
1239:..\src/interruptions.c ****             pwm_input = 0;
 3439              		.loc 1 1239 0
 3440 06bc 0023     		movs	r3, #0
 3441 06be FB65     		str	r3, [r7, #92]
1240:..\src/interruptions.c **** 
1241:..\src/interruptions.c ****             // Proportional
1242:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 3442              		.loc 1 1242 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 85


 3443 06c0 3B6A     		ldr	r3, [r7, #32]
 3444 06c2 002B     		cmp	r3, #0
 3445 06c4 07D0     		beq	.L232
1243:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 3446              		.loc 1 1243 0
 3447 06c6 3B6A     		ldr	r3, [r7, #32]
 3448 06c8 FA68     		ldr	r2, [r7, #12]
 3449 06ca 02FB03F3 		mul	r3, r2, r3
 3450 06ce 1B14     		asrs	r3, r3, #16
 3451 06d0 FA6D     		ldr	r2, [r7, #92]
 3452 06d2 1344     		add	r3, r3, r2
 3453 06d4 FB65     		str	r3, [r7, #92]
 3454              	.L232:
1244:..\src/interruptions.c **** 
1245:..\src/interruptions.c ****             // Integral
1246:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 3455              		.loc 1 1246 0
 3456 06d6 FB69     		ldr	r3, [r7, #28]
 3457 06d8 002B     		cmp	r3, #0
 3458 06da 0AD0     		beq	.L233
1247:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum[idx]) >> 16;
 3459              		.loc 1 1247 0
 3460 06dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3461 06de 524A     		ldr	r2, .L299+20
 3462 06e0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3463 06e4 FA69     		ldr	r2, [r7, #28]
 3464 06e6 02FB03F3 		mul	r3, r2, r3
 3465 06ea 1B14     		asrs	r3, r3, #16
 3466 06ec FA6D     		ldr	r2, [r7, #92]
 3467 06ee 1344     		add	r3, r3, r2
 3468 06f0 FB65     		str	r3, [r7, #92]
 3469              	.L233:
1248:..\src/interruptions.c **** 
1249:..\src/interruptions.c ****             // Derivative
1250:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 3470              		.loc 1 1250 0
 3471 06f2 BB69     		ldr	r3, [r7, #24]
 3472 06f4 002B     		cmp	r3, #0
 3473 06f6 0CD0     		beq	.L234
1251:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err[idx])) >> 16;
 3474              		.loc 1 1251 0
 3475 06f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3476 06fa 4E4A     		ldr	r2, .L299+32
 3477 06fc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3478 0700 FA68     		ldr	r2, [r7, #12]
 3479 0702 D31A     		subs	r3, r2, r3
 3480 0704 BA69     		ldr	r2, [r7, #24]
 3481 0706 02FB03F3 		mul	r3, r2, r3
 3482 070a 1B14     		asrs	r3, r3, #16
 3483 070c FA6D     		ldr	r2, [r7, #92]
 3484 070e 1344     		add	r3, r3, r2
 3485 0710 FB65     		str	r3, [r7, #92]
 3486              	.L234:
1252:..\src/interruptions.c **** 
1253:..\src/interruptions.c ****             // pwm_input saturation
1254:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 3487              		.loc 1 1254 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 86


 3488 0712 FB6D     		ldr	r3, [r7, #92]
 3489 0714 13F1640F 		cmn	r3, #100
 3490 0718 03DA     		bge	.L235
1255:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 3491              		.loc 1 1255 0
 3492 071a 6FF06303 		mvn	r3, #99
 3493 071e FB65     		str	r3, [r7, #92]
 3494 0720 04E0     		b	.L236
 3495              	.L235:
1256:..\src/interruptions.c ****             else {
1257:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 3496              		.loc 1 1257 0
 3497 0722 FB6D     		ldr	r3, [r7, #92]
 3498 0724 642B     		cmp	r3, #100
 3499 0726 01DD     		ble	.L236
1258:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 3500              		.loc 1 1258 0
 3501 0728 6423     		movs	r3, #100
 3502 072a FB65     		str	r3, [r7, #92]
 3503              	.L236:
1259:..\src/interruptions.c ****             }
1260:..\src/interruptions.c **** 
1261:..\src/interruptions.c ****             // Update previous current
1262:..\src/interruptions.c ****             prev_curr_err[idx] = curr_error;
 3504              		.loc 1 1262 0
 3505 072c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3506 072e 4149     		ldr	r1, .L299+32
 3507 0730 FA68     		ldr	r2, [r7, #12]
 3508 0732 41F82320 		str	r2, [r1, r3, lsl #2]
1263:..\src/interruptions.c **** 
1264:..\src/interruptions.c ****         break;
 3509              		.loc 1 1264 0
 3510 0736 41E1     		b	.L215
 3511              	.L216:
1265:..\src/interruptions.c **** 
1266:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
1267:..\src/interruptions.c ****         case CONTROL_ANGLE:
1268:..\src/interruptions.c ****             pos_error = g_ref[idx].pos - g_meas[ENC_L].pos[0];
 3512              		.loc 1 1268 0
 3513 0738 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3514 073a 3F4A     		ldr	r2, .L299+36
 3515 073c 1B01     		lsls	r3, r3, #4
 3516 073e 1344     		add	r3, r3, r2
 3517 0740 1968     		ldr	r1, [r3]
 3518 0742 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3519 0746 3748     		ldr	r0, .L299+16
 3520 0748 1346     		mov	r3, r2
 3521 074a 5B00     		lsls	r3, r3, #1
 3522 074c 1344     		add	r3, r3, r2
 3523 074e 1B01     		lsls	r3, r3, #4
 3524 0750 0344     		add	r3, r3, r0
 3525 0752 1B68     		ldr	r3, [r3]
 3526 0754 CB1A     		subs	r3, r1, r3
 3527 0756 BB65     		str	r3, [r7, #88]
1269:..\src/interruptions.c **** 
1270:..\src/interruptions.c ****             pos_error_sum[idx] += pos_error;
 3528              		.loc 1 1270 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 87


 3529 0758 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3530 075a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3531 075c 2D49     		ldr	r1, .L299
 3532 075e 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3533 0762 BA6D     		ldr	r2, [r7, #88]
 3534 0764 0A44     		add	r2, r2, r1
 3535 0766 2B49     		ldr	r1, .L299
 3536 0768 41F82320 		str	r2, [r1, r3, lsl #2]
1271:..\src/interruptions.c **** 
1272:..\src/interruptions.c ****             // anti-windup (for integral control)
1273:..\src/interruptions.c ****             if (pos_error_sum[idx] > ANTI_WINDUP)
 3537              		.loc 1 1273 0
 3538 076c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3539 076e 294A     		ldr	r2, .L299
 3540 0770 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3541 0774 B3F57A7F 		cmp	r3, #1000
 3542 0778 06DD     		ble	.L237
1274:..\src/interruptions.c ****                 pos_error_sum[idx] = ANTI_WINDUP;
 3543              		.loc 1 1274 0
 3544 077a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3545 077c 254A     		ldr	r2, .L299
 3546 077e 4FF47A71 		mov	r1, #1000
 3547 0782 42F82310 		str	r1, [r2, r3, lsl #2]
 3548 0786 0BE0     		b	.L238
 3549              	.L237:
1275:..\src/interruptions.c ****             else {
1276:..\src/interruptions.c **** 				if (pos_error_sum[idx] < -ANTI_WINDUP)
 3550              		.loc 1 1276 0
 3551 0788 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3552 078a 224A     		ldr	r2, .L299
 3553 078c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3554 0790 13F57A7F 		cmn	r3, #1000
 3555 0794 04DA     		bge	.L238
1277:..\src/interruptions.c ****                 	pos_error_sum[idx] = -ANTI_WINDUP;
 3556              		.loc 1 1277 0
 3557 0796 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3558 0798 1E4A     		ldr	r2, .L299
 3559 079a 2849     		ldr	r1, .L299+40
 3560 079c 42F82310 		str	r1, [r2, r3, lsl #2]
 3561              	.L238:
1278:..\src/interruptions.c ****             }
1279:..\src/interruptions.c **** 
1280:..\src/interruptions.c ****             // Proportional
1281:..\src/interruptions.c ****             if (k_p != 0) 
 3562              		.loc 1 1281 0
 3563 07a0 7B6C     		ldr	r3, [r7, #68]
 3564 07a2 002B     		cmp	r3, #0
 3565 07a4 05D0     		beq	.L239
1282:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 3566              		.loc 1 1282 0
 3567 07a6 7B6C     		ldr	r3, [r7, #68]
 3568 07a8 BA6D     		ldr	r2, [r7, #88]
 3569 07aa 02FB03F3 		mul	r3, r2, r3
 3570 07ae 1B14     		asrs	r3, r3, #16
 3571 07b0 FB65     		str	r3, [r7, #92]
 3572              	.L239:
1283:..\src/interruptions.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 88


1284:..\src/interruptions.c **** 
1285:..\src/interruptions.c ****             // Integral
1286:..\src/interruptions.c ****             if (k_i != 0) 
 3573              		.loc 1 1286 0
 3574 07b2 3B6C     		ldr	r3, [r7, #64]
 3575 07b4 002B     		cmp	r3, #0
 3576 07b6 0AD0     		beq	.L240
1287:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum[idx]) >> 16;
 3577              		.loc 1 1287 0
 3578 07b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3579 07ba 164A     		ldr	r2, .L299
 3580 07bc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3581 07c0 3A6C     		ldr	r2, [r7, #64]
 3582 07c2 02FB03F3 		mul	r3, r2, r3
 3583 07c6 1B14     		asrs	r3, r3, #16
 3584 07c8 FA6D     		ldr	r2, [r7, #92]
 3585 07ca 1344     		add	r3, r3, r2
 3586 07cc FB65     		str	r3, [r7, #92]
 3587              	.L240:
1288:..\src/interruptions.c ****             
1289:..\src/interruptions.c **** 
1290:..\src/interruptions.c ****             // Derivative
1291:..\src/interruptions.c ****             if (k_d != 0) 
 3588              		.loc 1 1291 0
 3589 07ce FB6B     		ldr	r3, [r7, #60]
 3590 07d0 002B     		cmp	r3, #0
 3591 07d2 0CD0     		beq	.L241
1292:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err[idx])) >> 16;
 3592              		.loc 1 1292 0
 3593 07d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3594 07d6 114A     		ldr	r2, .L299+8
 3595 07d8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3596 07dc BA6D     		ldr	r2, [r7, #88]
 3597 07de D31A     		subs	r3, r2, r3
 3598 07e0 FA6B     		ldr	r2, [r7, #60]
 3599 07e2 02FB03F3 		mul	r3, r2, r3
 3600 07e6 1B14     		asrs	r3, r3, #16
 3601 07e8 FA6D     		ldr	r2, [r7, #92]
 3602 07ea 1344     		add	r3, r3, r2
 3603 07ec FB65     		str	r3, [r7, #92]
 3604              	.L241:
1293:..\src/interruptions.c ****             
1294:..\src/interruptions.c **** 
1295:..\src/interruptions.c ****             // Update measure
1296:..\src/interruptions.c ****             prev_pos_err[idx] = pos_error;
 3605              		.loc 1 1296 0
 3606 07ee FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3607 07f0 0A49     		ldr	r1, .L299+8
 3608 07f2 BA6D     		ldr	r2, [r7, #88]
 3609 07f4 41F82320 		str	r2, [r1, r3, lsl #2]
1297:..\src/interruptions.c **** 
1298:..\src/interruptions.c ****             if (pwm_input > 0)
 3610              		.loc 1 1298 0
 3611 07f8 FB6D     		ldr	r3, [r7, #92]
 3612 07fa 002B     		cmp	r3, #0
 3613 07fc 04DD     		ble	.L242
1299:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 89


 3614              		.loc 1 1299 0
 3615 07fe FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3616 0800 074A     		ldr	r2, .L299+12
 3617 0802 0121     		movs	r1, #1
 3618 0804 D154     		strb	r1, [r2, r3]
1300:..\src/interruptions.c ****             else
1301:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
1302:..\src/interruptions.c **** 
1303:..\src/interruptions.c ****         break;
 3619              		.loc 1 1303 0
 3620 0806 D9E0     		b	.L215
 3621              	.L242:
1301:..\src/interruptions.c **** 
 3622              		.loc 1 1301 0
 3623 0808 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3624 080a 054A     		ldr	r2, .L299+12
 3625 080c 0021     		movs	r1, #0
 3626 080e D154     		strb	r1, [r2, r3]
 3627              		.loc 1 1303 0
 3628 0810 D4E0     		b	.L215
 3629              	.L300:
 3630 0812 00BF     		.align	2
 3631              	.L299:
 3632 0814 B0000000 		.word	pos_error_sum.10423
 3633 0818 800F05FD 		.word	-50000000
 3634 081c B8000000 		.word	prev_pos_err.10425
 3635 0820 C0000000 		.word	motor_dir.10428
 3636 0824 00000000 		.word	g_meas
 3637 0828 C4000000 		.word	curr_error_sum.10424
 3638 082c A0860100 		.word	100000
 3639 0830 6079FEFF 		.word	-100000
 3640 0834 CC000000 		.word	prev_curr_err.10426
 3641 0838 00000000 		.word	g_ref
 3642 083c 18FCFFFF 		.word	-1000
 3643              	.L219:
1304:..\src/interruptions.c **** 
1305:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
1306:..\src/interruptions.c ****         case CONTROL_CURRENT:
1307:..\src/interruptions.c ****             if(g_ref[idx].onoff && tension_valid) {
 3644              		.loc 1 1307 0
 3645 0840 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3646 0842 984A     		ldr	r2, .L301
 3647 0844 1B01     		lsls	r3, r3, #4
 3648 0846 1344     		add	r3, r3, r2
 3649 0848 0C33     		adds	r3, r3, #12
 3650 084a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3651 084c 002B     		cmp	r3, #0
 3652 084e 00F0B280 		beq	.L292
 3653              		.loc 1 1307 0 is_stmt 0 discriminator 1
 3654 0852 954B     		ldr	r3, .L301+4
 3655 0854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3656 0856 002B     		cmp	r3, #0
 3657 0858 00F0AD80 		beq	.L292
1308:..\src/interruptions.c ****                 
1309:..\src/interruptions.c ****                 i_ref = g_ref[idx].curr;
 3658              		.loc 1 1309 0 is_stmt 1
 3659 085c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 90


 3660 085e 914A     		ldr	r2, .L301
 3661 0860 1B01     		lsls	r3, r3, #4
 3662 0862 1344     		add	r3, r3, r2
 3663 0864 0433     		adds	r3, r3, #4
 3664 0866 1B68     		ldr	r3, [r3]
 3665 0868 7B65     		str	r3, [r7, #84]
1310:..\src/interruptions.c **** 
1311:..\src/interruptions.c ****                 if (i_ref > MOT->current_limit) 
 3666              		.loc 1 1311 0
 3667 086a FB6C     		ldr	r3, [r7, #76]
 3668 086c B3F95C30 		ldrsh	r3, [r3, #92]
 3669 0870 1A46     		mov	r2, r3
 3670 0872 7B6D     		ldr	r3, [r7, #84]
 3671 0874 9A42     		cmp	r2, r3
 3672 0876 04DA     		bge	.L245
1312:..\src/interruptions.c ****                     i_ref = MOT->current_limit;
 3673              		.loc 1 1312 0
 3674 0878 FB6C     		ldr	r3, [r7, #76]
 3675 087a B3F95C30 		ldrsh	r3, [r3, #92]
 3676 087e 7B65     		str	r3, [r7, #84]
 3677 0880 0BE0     		b	.L246
 3678              	.L245:
1313:..\src/interruptions.c ****                 else {
1314:..\src/interruptions.c ****                     if (i_ref < -MOT->current_limit)
 3679              		.loc 1 1314 0
 3680 0882 FB6C     		ldr	r3, [r7, #76]
 3681 0884 B3F95C30 		ldrsh	r3, [r3, #92]
 3682 0888 5A42     		negs	r2, r3
 3683 088a 7B6D     		ldr	r3, [r7, #84]
 3684 088c 9A42     		cmp	r2, r3
 3685 088e 04DD     		ble	.L246
1315:..\src/interruptions.c ****                         i_ref = -MOT->current_limit;
 3686              		.loc 1 1315 0
 3687 0890 FB6C     		ldr	r3, [r7, #76]
 3688 0892 B3F95C30 		ldrsh	r3, [r3, #92]
 3689 0896 5B42     		negs	r3, r3
 3690 0898 7B65     		str	r3, [r7, #84]
 3691              	.L246:
1316:..\src/interruptions.c ****                 }
1317:..\src/interruptions.c ****                 
1318:..\src/interruptions.c ****                 // current error
1319:..\src/interruptions.c ****                 curr_error = i_ref - g_meas[ENC_L].curr;            
 3692              		.loc 1 1319 0
 3693 089a 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 3694 089e 8349     		ldr	r1, .L301+8
 3695 08a0 1346     		mov	r3, r2
 3696 08a2 5B00     		lsls	r3, r3, #1
 3697 08a4 1344     		add	r3, r3, r2
 3698 08a6 1B01     		lsls	r3, r3, #4
 3699 08a8 0B44     		add	r3, r3, r1
 3700 08aa 0C33     		adds	r3, r3, #12
 3701 08ac 1B68     		ldr	r3, [r3]
 3702 08ae 7A6D     		ldr	r2, [r7, #84]
 3703 08b0 D31A     		subs	r3, r2, r3
 3704 08b2 FB60     		str	r3, [r7, #12]
1320:..\src/interruptions.c ****                 curr_error_sum[idx] += curr_error;
 3705              		.loc 1 1320 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 91


 3706 08b4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3707 08b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 3708 08b8 7D49     		ldr	r1, .L301+12
 3709 08ba 51F82210 		ldr	r1, [r1, r2, lsl #2]
 3710 08be FA68     		ldr	r2, [r7, #12]
 3711 08c0 0A44     		add	r2, r2, r1
 3712 08c2 7B49     		ldr	r1, .L301+12
 3713 08c4 41F82320 		str	r2, [r1, r3, lsl #2]
1321:..\src/interruptions.c ****                 
1322:..\src/interruptions.c ****                 if (curr_error_sum[idx] > CURR_INTEGRAL_SAT_LIMIT)
 3714              		.loc 1 1322 0
 3715 08c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3716 08ca 794A     		ldr	r2, .L301+12
 3717 08cc 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3718 08d0 784A     		ldr	r2, .L301+16
 3719 08d2 9342     		cmp	r3, r2
 3720 08d4 05DD     		ble	.L247
1323:..\src/interruptions.c ****                     curr_error_sum[idx] = CURR_INTEGRAL_SAT_LIMIT;
 3721              		.loc 1 1323 0
 3722 08d6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3723 08d8 754A     		ldr	r2, .L301+12
 3724 08da 7649     		ldr	r1, .L301+16
 3725 08dc 42F82310 		str	r1, [r2, r3, lsl #2]
 3726 08e0 0BE0     		b	.L248
 3727              	.L247:
1324:..\src/interruptions.c ****                 else {
1325:..\src/interruptions.c ****                     if (curr_error_sum[idx] < -CURR_INTEGRAL_SAT_LIMIT) 
 3728              		.loc 1 1325 0
 3729 08e2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3730 08e4 724A     		ldr	r2, .L301+12
 3731 08e6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3732 08ea 734A     		ldr	r2, .L301+20
 3733 08ec 9342     		cmp	r3, r2
 3734 08ee 04DA     		bge	.L248
1326:..\src/interruptions.c ****                         curr_error_sum[idx] = -CURR_INTEGRAL_SAT_LIMIT;
 3735              		.loc 1 1326 0
 3736 08f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3737 08f2 6F4A     		ldr	r2, .L301+12
 3738 08f4 7049     		ldr	r1, .L301+20
 3739 08f6 42F82310 		str	r1, [r2, r3, lsl #2]
 3740              	.L248:
1327:..\src/interruptions.c ****                 }
1328:..\src/interruptions.c **** 
1329:..\src/interruptions.c ****                 pwm_input = 0;
 3741              		.loc 1 1329 0
 3742 08fa 0023     		movs	r3, #0
 3743 08fc FB65     		str	r3, [r7, #92]
1330:..\src/interruptions.c **** 
1331:..\src/interruptions.c ****                 // Proportional
1332:..\src/interruptions.c ****                 if (k_p_c != 0)
 3744              		.loc 1 1332 0
 3745 08fe BB6B     		ldr	r3, [r7, #56]
 3746 0900 002B     		cmp	r3, #0
 3747 0902 07D0     		beq	.L249
1333:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 3748              		.loc 1 1333 0
 3749 0904 BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 92


 3750 0906 FA68     		ldr	r2, [r7, #12]
 3751 0908 02FB03F3 		mul	r3, r2, r3
 3752 090c 1B14     		asrs	r3, r3, #16
 3753 090e FA6D     		ldr	r2, [r7, #92]
 3754 0910 1344     		add	r3, r3, r2
 3755 0912 FB65     		str	r3, [r7, #92]
 3756              	.L249:
1334:..\src/interruptions.c **** 
1335:..\src/interruptions.c ****                 // Integral
1336:..\src/interruptions.c ****                 if (k_i_c != 0)
 3757              		.loc 1 1336 0
 3758 0914 7B6B     		ldr	r3, [r7, #52]
 3759 0916 002B     		cmp	r3, #0
 3760 0918 0AD0     		beq	.L250
1337:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum[idx]) >> 16;
 3761              		.loc 1 1337 0
 3762 091a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3763 091c 644A     		ldr	r2, .L301+12
 3764 091e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3765 0922 7A6B     		ldr	r2, [r7, #52]
 3766 0924 02FB03F3 		mul	r3, r2, r3
 3767 0928 1B14     		asrs	r3, r3, #16
 3768 092a FA6D     		ldr	r2, [r7, #92]
 3769 092c 1344     		add	r3, r3, r2
 3770 092e FB65     		str	r3, [r7, #92]
 3771              	.L250:
1338:..\src/interruptions.c **** 
1339:..\src/interruptions.c ****                 // Derivative
1340:..\src/interruptions.c ****                 if (k_d_c != 0)
 3772              		.loc 1 1340 0
 3773 0930 3B6B     		ldr	r3, [r7, #48]
 3774 0932 002B     		cmp	r3, #0
 3775 0934 0CD0     		beq	.L251
1341:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err[idx])) >> 16;
 3776              		.loc 1 1341 0
 3777 0936 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3778 0938 604A     		ldr	r2, .L301+24
 3779 093a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3780 093e FA68     		ldr	r2, [r7, #12]
 3781 0940 D31A     		subs	r3, r2, r3
 3782 0942 3A6B     		ldr	r2, [r7, #48]
 3783 0944 02FB03F3 		mul	r3, r2, r3
 3784 0948 1B14     		asrs	r3, r3, #16
 3785 094a FA6D     		ldr	r2, [r7, #92]
 3786 094c 1344     		add	r3, r3, r2
 3787 094e FB65     		str	r3, [r7, #92]
 3788              	.L251:
1342:..\src/interruptions.c ****                 
1343:..\src/interruptions.c ****                 prev_curr_err[idx] = curr_error;
 3789              		.loc 1 1343 0
 3790 0950 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3791 0952 5A49     		ldr	r1, .L301+24
 3792 0954 FA68     		ldr	r2, [r7, #12]
 3793 0956 41F82320 		str	r2, [r1, r3, lsl #2]
1344:..\src/interruptions.c ****                 
1345:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 3794              		.loc 1 1345 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 93


 3795 095a FB6D     		ldr	r3, [r7, #92]
 3796 095c 002B     		cmp	r3, #0
 3797 095e 04DB     		blt	.L252
1346:..\src/interruptions.c ****                     motor_dir[idx] = TRUE;
 3798              		.loc 1 1346 0
 3799 0960 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3800 0962 574A     		ldr	r2, .L301+28
 3801 0964 0121     		movs	r1, #1
 3802 0966 D154     		strb	r1, [r2, r3]
1347:..\src/interruptions.c ****                 else
1348:..\src/interruptions.c ****                     motor_dir[idx] = FALSE;
1349:..\src/interruptions.c ****             }
1350:..\src/interruptions.c ****         break;
 3803              		.loc 1 1350 0
 3804 0968 25E0     		b	.L292
 3805              	.L252:
1348:..\src/interruptions.c ****             }
 3806              		.loc 1 1348 0
 3807 096a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3808 096c 544A     		ldr	r2, .L301+28
 3809 096e 0021     		movs	r1, #0
 3810 0970 D154     		strb	r1, [r2, r3]
 3811              		.loc 1 1350 0
 3812 0972 20E0     		b	.L292
 3813              	.L218:
1351:..\src/interruptions.c ****         
1352:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
1353:..\src/interruptions.c ****         case CONTROL_PWM:
1354:..\src/interruptions.c **** 
1355:..\src/interruptions.c ****             pwm_input = g_ref[idx].pwm;
 3814              		.loc 1 1355 0
 3815 0974 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3816 0976 4B4A     		ldr	r2, .L301
 3817 0978 1B01     		lsls	r3, r3, #4
 3818 097a 1344     		add	r3, r3, r2
 3819 097c 0833     		adds	r3, r3, #8
 3820 097e 1B68     		ldr	r3, [r3]
 3821 0980 FB65     		str	r3, [r7, #92]
1356:..\src/interruptions.c **** 
1357:..\src/interruptions.c ****             if (pwm_input > 0) 
 3822              		.loc 1 1357 0
 3823 0982 FB6D     		ldr	r3, [r7, #92]
 3824 0984 002B     		cmp	r3, #0
 3825 0986 04DD     		ble	.L253
1358:..\src/interruptions.c ****                 motor_dir[idx] = TRUE;
 3826              		.loc 1 1358 0
 3827 0988 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3828 098a 4D4A     		ldr	r2, .L301+28
 3829 098c 0121     		movs	r1, #1
 3830 098e D154     		strb	r1, [r2, r3]
 3831 0990 03E0     		b	.L254
 3832              	.L253:
1359:..\src/interruptions.c ****             else 
1360:..\src/interruptions.c ****                 motor_dir[idx] = FALSE;
 3833              		.loc 1 1360 0
 3834 0992 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3835 0994 4A4A     		ldr	r2, .L301+28
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 94


 3836 0996 0021     		movs	r1, #0
 3837 0998 D154     		strb	r1, [r2, r3]
 3838              	.L254:
1361:..\src/interruptions.c ****             
1362:..\src/interruptions.c **** 
1363:..\src/interruptions.c ****             // pwm_input saturation
1364:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 3839              		.loc 1 1364 0
 3840 099a FB6D     		ldr	r3, [r7, #92]
 3841 099c 13F1640F 		cmn	r3, #100
 3842 09a0 03DA     		bge	.L255
1365:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 3843              		.loc 1 1365 0
 3844 09a2 6FF06303 		mvn	r3, #99
 3845 09a6 FB65     		str	r3, [r7, #92]
1366:..\src/interruptions.c ****             else {
1367:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
1368:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
1369:..\src/interruptions.c ****         	}
1370:..\src/interruptions.c **** 
1371:..\src/interruptions.c ****         break;
 3846              		.loc 1 1371 0
 3847 09a8 07E0     		b	.L293
 3848              	.L255:
1367:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 3849              		.loc 1 1367 0
 3850 09aa FB6D     		ldr	r3, [r7, #92]
 3851 09ac 642B     		cmp	r3, #100
 3852 09ae 04DD     		ble	.L293
1368:..\src/interruptions.c ****         	}
 3853              		.loc 1 1368 0
 3854 09b0 6423     		movs	r3, #100
 3855 09b2 FB65     		str	r3, [r7, #92]
 3856              		.loc 1 1371 0
 3857 09b4 01E0     		b	.L293
 3858              	.L292:
1350:..\src/interruptions.c ****         
 3859              		.loc 1 1350 0
 3860 09b6 00BF     		nop
 3861 09b8 00E0     		b	.L215
 3862              	.L293:
 3863              		.loc 1 1371 0
 3864 09ba 00BF     		nop
 3865              	.L215:
1372:..\src/interruptions.c ****             
1373:..\src/interruptions.c ****     }
1374:..\src/interruptions.c **** 
1375:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
1376:..\src/interruptions.c ****      ////////////////////////////////////////////////////////////////////////////
1377:..\src/interruptions.c **** 
1378:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 3866              		.loc 1 1378 0
 3867 09bc FB6D     		ldr	r3, [r7, #92]
 3868 09be 642B     		cmp	r3, #100
 3869 09c0 01DD     		ble	.L257
1379:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 3870              		.loc 1 1379 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 95


 3871 09c2 6423     		movs	r3, #100
 3872 09c4 FB65     		str	r3, [r7, #92]
 3873              	.L257:
1380:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 3874              		.loc 1 1380 0
 3875 09c6 FB6D     		ldr	r3, [r7, #92]
 3876 09c8 13F1640F 		cmn	r3, #100
 3877 09cc 02DA     		bge	.L258
1381:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 3878              		.loc 1 1381 0
 3879 09ce 6FF06303 		mvn	r3, #99
 3880 09d2 FB65     		str	r3, [r7, #92]
 3881              	.L258:
1382:..\src/interruptions.c **** 
1383:..\src/interruptions.c ****     if (MOT->control_mode != CONTROL_PWM) 
 3882              		.loc 1 1383 0
 3883 09d4 FB6C     		ldr	r3, [r7, #76]
 3884 09d6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 3885 09da 012B     		cmp	r3, #1
 3886 09dc 0DD0     		beq	.L259
1384:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit[0]) >> 10;
 3887              		.loc 1 1384 0
 3888 09de FB6D     		ldr	r3, [r7, #92]
 3889 09e0 9B02     		lsls	r3, r3, #10
 3890 09e2 384A     		ldr	r2, .L301+32
 3891 09e4 82FB0312 		smull	r1, r2, r2, r3
 3892 09e8 5211     		asrs	r2, r2, #5
 3893 09ea DB17     		asrs	r3, r3, #31
 3894 09ec D31A     		subs	r3, r2, r3
 3895 09ee 364A     		ldr	r2, .L301+36
 3896 09f0 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3897 09f2 02FB03F3 		mul	r3, r2, r3
 3898 09f6 9B12     		asrs	r3, r3, #10
 3899 09f8 FB65     		str	r3, [r7, #92]
 3900              	.L259:
1385:..\src/interruptions.c ****  
1386:..\src/interruptions.c ****     //// RATE LIMITER ////
1387:..\src/interruptions.c ****     if(SIGN(pwm_input-prev_pwm[idx]) == SIGN(pos_error))
 3901              		.loc 1 1387 0
 3902 09fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3903 09fc 334A     		ldr	r2, .L301+40
 3904 09fe 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3905 0a02 FA6D     		ldr	r2, [r7, #92]
 3906 0a04 D31A     		subs	r3, r2, r3
 3907 0a06 002B     		cmp	r3, #0
 3908 0a08 01DB     		blt	.L260
 3909              		.loc 1 1387 0 is_stmt 0 discriminator 1
 3910 0a0a 0122     		movs	r2, #1
 3911 0a0c 01E0     		b	.L261
 3912              	.L260:
 3913              		.loc 1 1387 0 discriminator 2
 3914 0a0e 4FF0FF32 		mov	r2, #-1
 3915              	.L261:
 3916              		.loc 1 1387 0 discriminator 4
 3917 0a12 BB6D     		ldr	r3, [r7, #88]
 3918 0a14 002B     		cmp	r3, #0
 3919 0a16 01DB     		blt	.L262
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 96


 3920              		.loc 1 1387 0 discriminator 5
 3921 0a18 0123     		movs	r3, #1
 3922 0a1a 01E0     		b	.L263
 3923              	.L262:
 3924              		.loc 1 1387 0 discriminator 6
 3925 0a1c 4FF0FF33 		mov	r3, #-1
 3926              	.L263:
 3927              		.loc 1 1387 0 discriminator 8
 3928 0a20 9A42     		cmp	r2, r3
 3929 0a22 28D1     		bne	.L264
1388:..\src/interruptions.c ****     {
1389:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) > MOT->pwm_rate_limiter)
 3930              		.loc 1 1389 0 is_stmt 1
 3931 0a24 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3932 0a26 294A     		ldr	r2, .L301+40
 3933 0a28 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3934 0a2c FA6D     		ldr	r2, [r7, #92]
 3935 0a2e D31A     		subs	r3, r2, r3
 3936 0a30 FA6C     		ldr	r2, [r7, #76]
 3937 0a32 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3938 0a36 9342     		cmp	r3, r2
 3939 0a38 08DD     		ble	.L265
1390:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] + MOT->pwm_rate_limiter;
 3940              		.loc 1 1390 0
 3941 0a3a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3942 0a3c 234A     		ldr	r2, .L301+40
 3943 0a3e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3944 0a42 FA6C     		ldr	r2, [r7, #76]
 3945 0a44 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3946 0a48 1344     		add	r3, r3, r2
 3947 0a4a FB65     		str	r3, [r7, #92]
 3948              	.L265:
1391:..\src/interruptions.c ****     
1392:..\src/interruptions.c ****         if((pwm_input-prev_pwm[idx]) < -MOT->pwm_rate_limiter)
 3949              		.loc 1 1392 0
 3950 0a4c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3951 0a4e 1F4A     		ldr	r2, .L301+40
 3952 0a50 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3953 0a54 FA6D     		ldr	r2, [r7, #92]
 3954 0a56 D21A     		subs	r2, r2, r3
 3955 0a58 FB6C     		ldr	r3, [r7, #76]
 3956 0a5a 93F86130 		ldrb	r3, [r3, #97]	@ zero_extendqisi2
 3957 0a5e 5B42     		negs	r3, r3
 3958 0a60 9A42     		cmp	r2, r3
 3959 0a62 08DA     		bge	.L264
1393:..\src/interruptions.c ****             pwm_input =  prev_pwm[idx] - MOT->pwm_rate_limiter;
 3960              		.loc 1 1393 0
 3961 0a64 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3962 0a66 194A     		ldr	r2, .L301+40
 3963 0a68 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3964 0a6c FA6C     		ldr	r2, [r7, #76]
 3965 0a6e 92F86120 		ldrb	r2, [r2, #97]	@ zero_extendqisi2
 3966 0a72 9B1A     		subs	r3, r3, r2
 3967 0a74 FB65     		str	r3, [r7, #92]
 3968              	.L264:
1394:..\src/interruptions.c ****     }
1395:..\src/interruptions.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 97


1396:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 3969              		.loc 1 1396 0
 3970 0a76 FB6D     		ldr	r3, [r7, #92]
 3971 0a78 642B     		cmp	r3, #100
 3972 0a7a 01DD     		ble	.L266
1397:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 3973              		.loc 1 1397 0
 3974 0a7c 6423     		movs	r3, #100
 3975 0a7e FB65     		str	r3, [r7, #92]
 3976              	.L266:
1398:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 3977              		.loc 1 1398 0
 3978 0a80 FB6D     		ldr	r3, [r7, #92]
 3979 0a82 13F1640F 		cmn	r3, #100
 3980 0a86 02DA     		bge	.L267
1399:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 3981              		.loc 1 1399 0
 3982 0a88 6FF06303 		mvn	r3, #99
 3983 0a8c FB65     		str	r3, [r7, #92]
 3984              	.L267:
1400:..\src/interruptions.c ****     
1401:..\src/interruptions.c ****     prev_pwm[idx] = pwm_input;
 3985              		.loc 1 1401 0
 3986 0a8e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3987 0a90 0E49     		ldr	r1, .L301+40
 3988 0a92 FA6D     		ldr	r2, [r7, #92]
 3989 0a94 41F82320 		str	r2, [r1, r3, lsl #2]
1402:..\src/interruptions.c **** 	
1403:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);   
 3990              		.loc 1 1403 0
 3991 0a98 FB6D     		ldr	r3, [r7, #92]
 3992 0a9a 002B     		cmp	r3, #0
 3993 0a9c 18DB     		blt	.L268
 3994              		.loc 1 1403 0 is_stmt 0 discriminator 1
 3995 0a9e 0122     		movs	r2, #1
 3996 0aa0 18E0     		b	.L269
 3997              	.L302:
 3998 0aa2 00BF     		.align	2
 3999              	.L301:
 4000 0aa4 00000000 		.word	g_ref
 4001 0aa8 00000000 		.word	tension_valid
 4002 0aac 00000000 		.word	g_meas
 4003 0ab0 C4000000 		.word	curr_error_sum.10424
 4004 0ab4 A0860100 		.word	100000
 4005 0ab8 6079FEFF 		.word	-100000
 4006 0abc CC000000 		.word	prev_curr_err.10426
 4007 0ac0 C0000000 		.word	motor_dir.10428
 4008 0ac4 1F85EB51 		.word	1374389535
 4009 0ac8 00000000 		.word	dev_pwm_limit
 4010 0acc D4000000 		.word	prev_pwm.10427
 4011              	.L268:
 4012              		.loc 1 1403 0 discriminator 2
 4013 0ad0 4FF0FF32 		mov	r2, #-1
 4014              	.L269:
 4015              		.loc 1 1403 0 discriminator 4
 4016 0ad4 764B     		ldr	r3, .L303
 4017 0ad6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 98


1404:..\src/interruptions.c ****     
1405:..\src/interruptions.c ****     if (MOT->not_revers_motor_flag == TRUE) {
 4018              		.loc 1 1405 0 is_stmt 1 discriminator 4
 4019 0ad8 FB6C     		ldr	r3, [r7, #76]
 4020 0ada 93F86230 		ldrb	r3, [r3, #98]	@ zero_extendqisi2
 4021 0ade 012B     		cmp	r3, #1
 4022 0ae0 40F08F80 		bne	.L270
1406:..\src/interruptions.c ****         // Block motor with pwm = 0 to exploit not reversible motor behaviour 
1407:..\src/interruptions.c ****     	if ( MOT->control_mode != CONTROL_PWM && ((g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) <
 4023              		.loc 1 1407 0
 4024 0ae4 FB6C     		ldr	r3, [r7, #76]
 4025 0ae6 93F85F30 		ldrb	r3, [r3, #95]	@ zero_extendqisi2
 4026 0aea 012B     		cmp	r3, #1
 4027 0aec 00F08480 		beq	.L271
 4028              		.loc 1 1407 0 is_stmt 0 discriminator 1
 4029 0af0 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4030 0af4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4031 0af6 6F48     		ldr	r0, .L303+4
 4032 0af8 1346     		mov	r3, r2
 4033 0afa 5B00     		lsls	r3, r3, #1
 4034 0afc 1344     		add	r3, r3, r2
 4035 0afe 9B00     		lsls	r3, r3, #2
 4036 0b00 0B44     		add	r3, r3, r1
 4037 0b02 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4038 0b06 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4039 0b0a F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4040 0b0c 6A4C     		ldr	r4, .L303+8
 4041 0b0e 1346     		mov	r3, r2
 4042 0b10 5B00     		lsls	r3, r3, #1
 4043 0b12 1344     		add	r3, r3, r2
 4044 0b14 9B00     		lsls	r3, r3, #2
 4045 0b16 0344     		add	r3, r3, r0
 4046 0b18 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4047 0b1c CB1A     		subs	r3, r1, r3
 4048 0b1e 312B     		cmp	r3, #49
 4049 0b20 6ADC     		bgt	.L271
1408:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4050              		.loc 1 1408 0 is_stmt 1 discriminator 2
 4051 0b22 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4052 0b26 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4053 0b28 6248     		ldr	r0, .L303+4
 4054 0b2a 1346     		mov	r3, r2
 4055 0b2c 5B00     		lsls	r3, r3, #1
 4056 0b2e 1344     		add	r3, r3, r2
 4057 0b30 9B00     		lsls	r3, r3, #2
 4058 0b32 0B44     		add	r3, r3, r1
 4059 0b34 50F82310 		ldr	r1, [r0, r3, lsl #2]
 4060 0b38 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4061 0b3c F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4062 0b3e 5E4C     		ldr	r4, .L303+8
 4063 0b40 1346     		mov	r3, r2
 4064 0b42 5B00     		lsls	r3, r3, #1
 4065 0b44 1344     		add	r3, r3, r2
 4066 0b46 9B00     		lsls	r3, r3, #2
 4067 0b48 0344     		add	r3, r3, r0
 4068 0b4a 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4069 0b4e CB1A     		subs	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 99


1407:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4070              		.loc 1 1407 0 discriminator 2
 4071 0b50 13F1310F 		cmn	r3, #49
 4072 0b54 50DB     		blt	.L271
1409:..\src/interruptions.c ****             ((g_refOld[idx].pos - g_ref[idx].pos) < 100 && (g_refOld[idx].pos - g_ref[idx].pos) > -
 4073              		.loc 1 1409 0
 4074 0b56 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4075 0b58 584A     		ldr	r2, .L303+12
 4076 0b5a 1B01     		lsls	r3, r3, #4
 4077 0b5c 1344     		add	r3, r3, r2
 4078 0b5e 1A68     		ldr	r2, [r3]
 4079 0b60 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4080 0b62 5749     		ldr	r1, .L303+16
 4081 0b64 1B01     		lsls	r3, r3, #4
 4082 0b66 0B44     		add	r3, r3, r1
 4083 0b68 1B68     		ldr	r3, [r3]
 4084 0b6a D31A     		subs	r3, r2, r3
1408:..\src/interruptions.c ****             (g_measOld[ENC_L].pos[idx]-g_meas[ENC_L].pos[idx]) > -50) && 
 4085              		.loc 1 1408 0
 4086 0b6c 632B     		cmp	r3, #99
 4087 0b6e 43DC     		bgt	.L271
 4088              		.loc 1 1409 0
 4089 0b70 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4090 0b72 524A     		ldr	r2, .L303+12
 4091 0b74 1B01     		lsls	r3, r3, #4
 4092 0b76 1344     		add	r3, r3, r2
 4093 0b78 1A68     		ldr	r2, [r3]
 4094 0b7a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4095 0b7c 5049     		ldr	r1, .L303+16
 4096 0b7e 1B01     		lsls	r3, r3, #4
 4097 0b80 0B44     		add	r3, r3, r1
 4098 0b82 1B68     		ldr	r3, [r3]
 4099 0b84 D31A     		subs	r3, r2, r3
 4100 0b86 13F1630F 		cmn	r3, #99
 4101 0b8a 35DB     		blt	.L271
1410:..\src/interruptions.c ****             position_counter[idx]++;
 4102              		.loc 1 1410 0
 4103 0b8c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4104 0b8e 4D4A     		ldr	r2, .L303+20
 4105 0b90 52F82320 		ldr	r2, [r2, r3, lsl #2]
 4106 0b94 0132     		adds	r2, r2, #1
 4107 0b96 4B49     		ldr	r1, .L303+20
 4108 0b98 41F82320 		str	r2, [r1, r3, lsl #2]
1411:..\src/interruptions.c ****             
1412:..\src/interruptions.c ****             if (position_counter[idx] > 250) { 
 4109              		.loc 1 1412 0
 4110 0b9c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4111 0b9e 494A     		ldr	r2, .L303+20
 4112 0ba0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4113 0ba4 FA2B     		cmp	r3, #250
 4114 0ba6 2CD9     		bls	.L270
1413:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4115              		.loc 1 1413 0
 4116 0ba8 FB6C     		ldr	r3, [r7, #76]
 4117 0baa 93F85E30 		ldrb	r3, [r3, #94]	@ zero_extendqisi2
 4118 0bae 002B     		cmp	r3, #0
 4119 0bb0 11D1     		bne	.L273
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 100


 4120              		.loc 1 1413 0 is_stmt 0 discriminator 1
 4121 0bb2 454B     		ldr	r3, .L303+24
 4122 0bb4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4123 0bb6 002B     		cmp	r3, #0
 4124 0bb8 0DD1     		bne	.L273
1414:..\src/interruptions.c ****                     g_refNew[idx].pos = g_meas[ENC_L].pos[0];       // Needed only when USB input m
 4125              		.loc 1 1414 0 is_stmt 1
 4126 0bba F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4127 0bbc 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4128 0bc0 3D48     		ldr	r0, .L303+8
 4129 0bc2 1346     		mov	r3, r2
 4130 0bc4 5B00     		lsls	r3, r3, #1
 4131 0bc6 1344     		add	r3, r3, r2
 4132 0bc8 1B01     		lsls	r3, r3, #4
 4133 0bca 0344     		add	r3, r3, r0
 4134 0bcc 1A68     		ldr	r2, [r3]
 4135 0bce 3F48     		ldr	r0, .L303+28
 4136 0bd0 0B01     		lsls	r3, r1, #4
 4137 0bd2 0344     		add	r3, r3, r0
 4138 0bd4 1A60     		str	r2, [r3]
 4139              	.L273:
1415:..\src/interruptions.c ****                 }
1416:..\src/interruptions.c ****                 g_ref[idx].pos = g_meas[ENC_L].pos[0];
 4140              		.loc 1 1416 0
 4141 0bd6 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4142 0bd8 97F84B20 		ldrb	r2, [r7, #75]	@ zero_extendqisi2
 4143 0bdc 3648     		ldr	r0, .L303+8
 4144 0bde 1346     		mov	r3, r2
 4145 0be0 5B00     		lsls	r3, r3, #1
 4146 0be2 1344     		add	r3, r3, r2
 4147 0be4 1B01     		lsls	r3, r3, #4
 4148 0be6 0344     		add	r3, r3, r0
 4149 0be8 1A68     		ldr	r2, [r3]
 4150 0bea 3548     		ldr	r0, .L303+16
 4151 0bec 0B01     		lsls	r3, r1, #4
 4152 0bee 0344     		add	r3, r3, r0
 4153 0bf0 1A60     		str	r2, [r3]
1417:..\src/interruptions.c ****                 pwm_input = 0;            
 4154              		.loc 1 1417 0
 4155 0bf2 0023     		movs	r3, #0
 4156 0bf4 FB65     		str	r3, [r7, #92]
1412:..\src/interruptions.c ****                 if (MOT->input_mode == INPUT_MODE_EXTERNAL && change_ext_ref_flag == FALSE) {
 4157              		.loc 1 1412 0
 4158 0bf6 04E0     		b	.L270
 4159              	.L271:
1418:..\src/interruptions.c ****             }
1419:..\src/interruptions.c ****         }
1420:..\src/interruptions.c ****         else {
1421:..\src/interruptions.c ****             position_counter[idx] = 0;
 4160              		.loc 1 1421 0
 4161 0bf8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4162 0bfa 324A     		ldr	r2, .L303+20
 4163 0bfc 0021     		movs	r1, #0
 4164 0bfe 42F82310 		str	r1, [r2, r3, lsl #2]
 4165              	.L270:
1422:..\src/interruptions.c ****         }
1423:..\src/interruptions.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 101


1424:..\src/interruptions.c ****     
1425:..\src/interruptions.c ****     // Set motor direction and write pwm value
1426:..\src/interruptions.c ****     switch (idx) {
 4166              		.loc 1 1426 0
 4167 0c02 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4168 0c04 002B     		cmp	r3, #0
 4169 0c06 02D0     		beq	.L275
 4170 0c08 012B     		cmp	r3, #1
 4171 0c0a 26D0     		beq	.L276
1427:..\src/interruptions.c ****         case 0:         // Motor 1
1428:..\src/interruptions.c ****             if (motor_dir[idx])
1429:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
1430:..\src/interruptions.c ****             else
1431:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x00);
1432:..\src/interruptions.c ****             
1433:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1434:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
1435:..\src/interruptions.c ****             }
1436:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1437:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(abs(pwm_input));    
1438:..\src/interruptions.c ****             }
1439:..\src/interruptions.c ****             
1440:..\src/interruptions.c ****             break;
1441:..\src/interruptions.c ****         case 1:         // Motor 2
1442:..\src/interruptions.c ****             
1443:..\src/interruptions.c ****             if (motor_dir[idx])
1444:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
1445:..\src/interruptions.c ****             else
1446:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x00);
1447:..\src/interruptions.c ****             
1448:..\src/interruptions.c ****             if (MOT->motor_driver_type == DRIVER_VNH5019) {
1449:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
1450:..\src/interruptions.c ****             }
1451:..\src/interruptions.c ****             else {  // DRIVER_MC33887 standard
1452:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(abs(pwm_input));    
1453:..\src/interruptions.c ****             }
1454:..\src/interruptions.c ****             
1455:..\src/interruptions.c ****             break;
1456:..\src/interruptions.c ****         default:
1457:..\src/interruptions.c ****             break;
 4172              		.loc 1 1457 0
 4173 0c0c 4BE0     		b	.L281
 4174              	.L275:
1428:..\src/interruptions.c ****                 MOTOR_DIR_1_Write(0x01);
 4175              		.loc 1 1428 0
 4176 0c0e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4177 0c10 2F4A     		ldr	r2, .L303+32
 4178 0c12 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4179 0c14 002B     		cmp	r3, #0
 4180 0c16 03D0     		beq	.L277
1429:..\src/interruptions.c ****             else
 4181              		.loc 1 1429 0
 4182 0c18 0120     		movs	r0, #1
 4183 0c1a FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4184 0c1e 02E0     		b	.L278
 4185              	.L277:
1431:..\src/interruptions.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 102


 4186              		.loc 1 1431 0
 4187 0c20 0020     		movs	r0, #0
 4188 0c22 FFF7FEFF 		bl	MOTOR_DIR_1_Write
 4189              	.L278:
1433:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare1(PWM_MAX_VALUE - abs(pwm_input));
 4190              		.loc 1 1433 0
 4191 0c26 FB6C     		ldr	r3, [r7, #76]
 4192 0c28 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4193 0c2c 012B     		cmp	r3, #1
 4194 0c2e 0BD1     		bne	.L279
1434:..\src/interruptions.c ****             }
 4195              		.loc 1 1434 0
 4196 0c30 FB6D     		ldr	r3, [r7, #92]
 4197 0c32 002B     		cmp	r3, #0
 4198 0c34 B8BF     		it	lt
 4199 0c36 5B42     		rsblt	r3, r3, #0
 4200 0c38 DBB2     		uxtb	r3, r3
 4201 0c3a C3F16403 		rsb	r3, r3, #100
 4202 0c3e DBB2     		uxtb	r3, r3
 4203 0c40 1846     		mov	r0, r3
 4204 0c42 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1440:..\src/interruptions.c ****         case 1:         // Motor 2
 4205              		.loc 1 1440 0
 4206 0c46 2EE0     		b	.L281
 4207              	.L279:
1437:..\src/interruptions.c ****             }
 4208              		.loc 1 1437 0
 4209 0c48 FB6D     		ldr	r3, [r7, #92]
 4210 0c4a 002B     		cmp	r3, #0
 4211 0c4c B8BF     		it	lt
 4212 0c4e 5B42     		rsblt	r3, r3, #0
 4213 0c50 DBB2     		uxtb	r3, r3
 4214 0c52 1846     		mov	r0, r3
 4215 0c54 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
1440:..\src/interruptions.c ****         case 1:         // Motor 2
 4216              		.loc 1 1440 0
 4217 0c58 25E0     		b	.L281
 4218              	.L276:
1443:..\src/interruptions.c ****                 MOTOR_DIR_2_Write(0x01);
 4219              		.loc 1 1443 0
 4220 0c5a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4221 0c5c 1C4A     		ldr	r2, .L303+32
 4222 0c5e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4223 0c60 002B     		cmp	r3, #0
 4224 0c62 03D0     		beq	.L282
1444:..\src/interruptions.c ****             else
 4225              		.loc 1 1444 0
 4226 0c64 0120     		movs	r0, #1
 4227 0c66 FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4228 0c6a 02E0     		b	.L283
 4229              	.L282:
1446:..\src/interruptions.c ****             
 4230              		.loc 1 1446 0
 4231 0c6c 0020     		movs	r0, #0
 4232 0c6e FFF7FEFF 		bl	MOTOR_DIR_2_Write
 4233              	.L283:
1448:..\src/interruptions.c ****                 PWM_MOTORS_WriteCompare2(PWM_MAX_VALUE - abs(pwm_input));
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 103


 4234              		.loc 1 1448 0
 4235 0c72 FB6C     		ldr	r3, [r7, #76]
 4236 0c74 93F83230 		ldrb	r3, [r3, #50]	@ zero_extendqisi2
 4237 0c78 012B     		cmp	r3, #1
 4238 0c7a 0BD1     		bne	.L284
1449:..\src/interruptions.c ****             }
 4239              		.loc 1 1449 0
 4240 0c7c FB6D     		ldr	r3, [r7, #92]
 4241 0c7e 002B     		cmp	r3, #0
 4242 0c80 B8BF     		it	lt
 4243 0c82 5B42     		rsblt	r3, r3, #0
 4244 0c84 DBB2     		uxtb	r3, r3
 4245 0c86 C3F16403 		rsb	r3, r3, #100
 4246 0c8a DBB2     		uxtb	r3, r3
 4247 0c8c 1846     		mov	r0, r3
 4248 0c8e FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
1455:..\src/interruptions.c ****         default:
 4249              		.loc 1 1455 0
 4250 0c92 07E0     		b	.L294
 4251              	.L284:
1452:..\src/interruptions.c ****             }
 4252              		.loc 1 1452 0
 4253 0c94 FB6D     		ldr	r3, [r7, #92]
 4254 0c96 002B     		cmp	r3, #0
 4255 0c98 B8BF     		it	lt
 4256 0c9a 5B42     		rsblt	r3, r3, #0
 4257 0c9c DBB2     		uxtb	r3, r3
 4258 0c9e 1846     		mov	r0, r3
 4259 0ca0 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare2
 4260              	.L294:
1455:..\src/interruptions.c ****         default:
 4261              		.loc 1 1455 0
 4262 0ca4 00BF     		nop
 4263              	.L281:
1458:..\src/interruptions.c ****     }
1459:..\src/interruptions.c ****     
1460:..\src/interruptions.c **** }
 4264              		.loc 1 1460 0
 4265 0ca6 00BF     		nop
 4266 0ca8 6437     		adds	r7, r7, #100
 4267              		.cfi_def_cfa_offset 12
 4268 0caa BD46     		mov	sp, r7
 4269              		.cfi_def_cfa_register 13
 4270              		@ sp needed
 4271 0cac 90BD     		pop	{r4, r7, pc}
 4272              	.L304:
 4273 0cae 00BF     		.align	2
 4274              	.L303:
 4275 0cb0 00000000 		.word	pwm_sign
 4276 0cb4 00000000 		.word	g_measOld
 4277 0cb8 00000000 		.word	g_meas
 4278 0cbc 00000000 		.word	g_refOld
 4279 0cc0 00000000 		.word	g_ref
 4280 0cc4 DC000000 		.word	position_counter.10429
 4281 0cc8 00000000 		.word	change_ext_ref_flag
 4282 0ccc 00000000 		.word	g_refNew
 4283 0cd0 C0000000 		.word	motor_dir.10428
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 104


 4284              		.cfi_endproc
 4285              	.LFE69:
 4286              		.size	motor_control_generic, .-motor_control_generic
 4287              		.global	__aeabi_fcmpeq
 4288              		.global	__aeabi_fmul
 4289              		.global	__aeabi_f2iz
 4290              		.global	__aeabi_fcmplt
 4291              		.section	.text.encoder_reading_SPI,"ax",%progbits
 4292              		.align	2
 4293              		.global	encoder_reading_SPI
 4294              		.thumb
 4295              		.thumb_func
 4296              		.type	encoder_reading_SPI, %function
 4297              	encoder_reading_SPI:
 4298              	.LFB70:
1461:..\src/interruptions.c **** 
1462:..\src/interruptions.c **** //==============================================================================
1463:..\src/interruptions.c **** //                                                           ENCODER READING SPI
1464:..\src/interruptions.c **** //==============================================================================
1465:..\src/interruptions.c **** 
1466:..\src/interruptions.c **** void encoder_reading_SPI(uint8 n_line, uint8 assoc_motor) {
 4299              		.loc 1 1466 0
 4300              		.cfi_startproc
 4301              		@ args = 0, pretend = 0, frame = 48
 4302              		@ frame_needed = 1, uses_anonymous_args = 0
 4303 0000 B0B5     		push	{r4, r5, r7, lr}
 4304              		.cfi_def_cfa_offset 16
 4305              		.cfi_offset 4, -16
 4306              		.cfi_offset 5, -12
 4307              		.cfi_offset 7, -8
 4308              		.cfi_offset 14, -4
 4309 0002 8CB0     		sub	sp, sp, #48
 4310              		.cfi_def_cfa_offset 64
 4311 0004 00AF     		add	r7, sp, #0
 4312              		.cfi_def_cfa_register 7
 4313 0006 0346     		mov	r3, r0
 4314 0008 0A46     		mov	r2, r1
 4315 000a FB71     		strb	r3, [r7, #7]
 4316 000c 1346     		mov	r3, r2
 4317 000e BB71     		strb	r3, [r7, #6]
1467:..\src/interruptions.c **** 
1468:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 4318              		.loc 1 1468 0
 4319 0010 0023     		movs	r3, #0
 4320 0012 87F82F30 		strb	r3, [r7, #47]
1469:..\src/interruptions.c ****     
1470:..\src/interruptions.c ****     // Encoder Variables  
1471:..\src/interruptions.c ****     uint8 jj;
1472:..\src/interruptions.c ****      
1473:..\src/interruptions.c ****     uint32 aux_encoder[NUM_OF_SENSORS];
1474:..\src/interruptions.c ****     int16 tmp_value_encoder;
1475:..\src/interruptions.c ****     int32 tmp_value_encoder_32;
1476:..\src/interruptions.c ****     int32 value_encoder;
1477:..\src/interruptions.c ****     int32 speed_encoder;
1478:..\src/interruptions.c ****     int32 value_diff;
1479:..\src/interruptions.c **** 	int8 init_rot = 0;
 4321              		.loc 1 1479 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 105


 4322 0016 0023     		movs	r3, #0
 4323 0018 87F82730 		strb	r3, [r7, #39]
1480:..\src/interruptions.c **** 
1481:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1482:..\src/interruptions.c ****     static int32 comp_value_encoder[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1483:..\src/interruptions.c ****     static uint8 error[N_ENCODER_LINE_MAX][NUM_OF_SENSORS];
1484:..\src/interruptions.c ****     
1485:..\src/interruptions.c ****     static CYBIT only_first_time[N_ENCODER_LINE_MAX] = {TRUE, TRUE};
1486:..\src/interruptions.c ****     static CYBIT safe_startup_motor_activation[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1487:..\src/interruptions.c ****     static uint8 one_time_execute[N_ENCODER_LINE_MAX] = {0, 0};
1488:..\src/interruptions.c ****     static uint32 count_startup_motor[N_ENCODER_LINE_MAX] = {0, 0};
1489:..\src/interruptions.c ****     static CYBIT pos_reconstruct[N_ENCODER_LINE_MAX] = {FALSE, FALSE};
1490:..\src/interruptions.c **** 
1491:..\src/interruptions.c ****     static int32 v_value[N_ENCODER_LINE_MAX][N_ENCODERS];   //last value for velocity
1492:..\src/interruptions.c ****     static int32 vv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last value for velocity
1493:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODER_LINE_MAX][N_ENCODERS];  //last last last value for velocity
1494:..\src/interruptions.c **** //    
1495:..\src/interruptions.c ****     if (reset_last_value_flag) {
 4324              		.loc 1 1495 0
 4325 001c 8C4B     		ldr	r3, .L341
 4326 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4327 0020 002B     		cmp	r3, #0
 4328 0022 18D0     		beq	.L306
1496:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 4329              		.loc 1 1496 0
 4330 0024 0323     		movs	r3, #3
 4331 0026 87F82E30 		strb	r3, [r7, #46]
 4332 002a 0AE0     		b	.L307
 4333              	.L308:
1497:..\src/interruptions.c ****             last_value_encoder[n_line][jj] = 0;
 4334              		.loc 1 1497 0
 4335 002c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4336 002e 97F82E10 		ldrb	r1, [r7, #46]	@ zero_extendqisi2
 4337 0032 8848     		ldr	r0, .L341+4
 4338 0034 1346     		mov	r3, r2
 4339 0036 5B00     		lsls	r3, r3, #1
 4340 0038 1344     		add	r3, r3, r2
 4341 003a 0B44     		add	r3, r3, r1
 4342 003c 0022     		movs	r2, #0
 4343 003e 40F82320 		str	r2, [r0, r3, lsl #2]
 4344              	.L307:
1496:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 4345              		.loc 1 1496 0 discriminator 1
 4346 0042 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 4347 0046 5A1E     		subs	r2, r3, #1
 4348 0048 87F82E20 		strb	r2, [r7, #46]
 4349 004c 002B     		cmp	r3, #0
 4350 004e EDD1     		bne	.L308
1498:..\src/interruptions.c ****         
1499:..\src/interruptions.c ****         reset_last_value_flag = 0;
 4351              		.loc 1 1499 0
 4352 0050 7F4B     		ldr	r3, .L341
 4353 0052 0022     		movs	r2, #0
 4354 0054 1A70     		strb	r2, [r3]
 4355              	.L306:
1500:..\src/interruptions.c ****     }
1501:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 106


1502:..\src/interruptions.c ****     //======================================================     reading sensors
1503:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 4356              		.loc 1 1503 0
 4357 0056 0023     		movs	r3, #0
 4358 0058 87F82F30 		strb	r3, [r7, #47]
 4359 005c 0DE0     		b	.L309
 4360              	.L310:
1504:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4361              		.loc 1 1504 0 discriminator 3
 4362 005e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4363 0062 9B00     		lsls	r3, r3, #2
 4364 0064 07F13002 		add	r2, r7, #48
 4365 0068 1344     		add	r3, r3, r2
 4366 006a 0022     		movs	r2, #0
 4367 006c 43F8242C 		str	r2, [r3, #-36]
1503:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4368              		.loc 1 1503 0 discriminator 3
 4369 0070 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4370 0074 0133     		adds	r3, r3, #1
 4371 0076 87F82F30 		strb	r3, [r7, #47]
 4372              	.L309:
1503:..\src/interruptions.c ****         aux_encoder[index] = 0;
 4373              		.loc 1 1503 0 is_stmt 0 discriminator 1
 4374 007a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4375 007e 022B     		cmp	r3, #2
 4376 0080 EDD9     		bls	.L310
1505:..\src/interruptions.c ****     }   
1506:..\src/interruptions.c ****     
1507:..\src/interruptions.c ****     ReadEncoderLine(N_Encoder_Line_Connected[n_line] , n_line);         //CS0 for right hand
 4377              		.loc 1 1507 0 is_stmt 1
 4378 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4379 0084 744A     		ldr	r2, .L341+8
 4380 0086 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4381 0088 1A46     		mov	r2, r3
 4382 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4383 008c 1946     		mov	r1, r3
 4384 008e 1046     		mov	r0, r2
 4385 0090 FFF7FEFF 		bl	ReadEncoderLine
1508:..\src/interruptions.c ****                                                                         //CS1 for left hand
1509:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {        
 4386              		.loc 1 1509 0
 4387 0094 0023     		movs	r3, #0
 4388 0096 87F82F30 		strb	r3, [r7, #47]
 4389 009a 23E0     		b	.L311
 4390              	.L313:
1510:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 4391              		.loc 1 1510 0
 4392 009c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4393 009e 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4394 00a2 6E48     		ldr	r0, .L341+12
 4395 00a4 1346     		mov	r3, r2
 4396 00a6 9B00     		lsls	r3, r3, #2
 4397 00a8 1344     		add	r3, r3, r2
 4398 00aa 0344     		add	r3, r3, r0
 4399 00ac 0B44     		add	r3, r3, r1
 4400 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4401 00b0 0F2B     		cmp	r3, #15
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 107


 4402 00b2 12D9     		bls	.L312
1511:..\src/interruptions.c ****             aux_encoder[index] = (uint32)Encoder_Value[n_line][index];     // 00000000000000[20] XX
 4403              		.loc 1 1511 0
 4404 00b4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4405 00b8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4406 00ba 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4407 00be 684C     		ldr	r4, .L341+16
 4408 00c0 1346     		mov	r3, r2
 4409 00c2 9B00     		lsls	r3, r3, #2
 4410 00c4 1344     		add	r3, r3, r2
 4411 00c6 0344     		add	r3, r3, r0
 4412 00c8 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 4413 00cc 1A46     		mov	r2, r3
 4414 00ce 8B00     		lsls	r3, r1, #2
 4415 00d0 07F13001 		add	r1, r7, #48
 4416 00d4 0B44     		add	r3, r3, r1
 4417 00d6 43F8242C 		str	r2, [r3, #-36]
 4418              	.L312:
1509:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 4419              		.loc 1 1509 0 discriminator 2
 4420 00da 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4421 00de 0133     		adds	r3, r3, #1
 4422 00e0 87F82F30 		strb	r3, [r7, #47]
 4423              	.L311:
1509:..\src/interruptions.c ****         if (Encoder_Check[n_line][index] > 15){  // check on encoder data
 4424              		.loc 1 1509 0 is_stmt 0 discriminator 1
 4425 00e4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4426 00e8 022B     		cmp	r3, #2
 4427 00ea D7D9     		bls	.L313
1512:..\src/interruptions.c ****         }
1513:..\src/interruptions.c ****     }
1514:..\src/interruptions.c ****     
1515:..\src/interruptions.c ****     // S = SIGN BIT
1516:..\src/interruptions.c ****     // X = ENCODER VALUE BIT
1517:..\src/interruptions.c ****     // 0 = 0 BIT
1518:..\src/interruptions.c ****     // C = CONTROL BIT
1519:..\src/interruptions.c ****     
1520:..\src/interruptions.c ****     // index=0 reads SoftHand Pro encoder positioned on screw, while index=1 reads encoder position
1521:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 4428              		.loc 1 1521 0 is_stmt 1
 4429 00ec 0023     		movs	r3, #0
 4430 00ee 87F82F30 		strb	r3, [r7, #47]
 4431 00f2 12E3     		b	.L314
 4432              	.L334:
1522:..\src/interruptions.c ****         
1523:..\src/interruptions.c ****         data_encoder_raw[index] = aux_encoder[index];
 4433              		.loc 1 1523 0
 4434 00f4 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 4435 00f8 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4436 00fc 9B00     		lsls	r3, r3, #2
 4437 00fe 07F13001 		add	r1, r7, #48
 4438 0102 0B44     		add	r3, r3, r1
 4439 0104 53F8243C 		ldr	r3, [r3, #-36]
 4440 0108 5649     		ldr	r1, .L341+20
 4441 010a 41F82230 		str	r3, [r1, r2, lsl #2]
1524:..\src/interruptions.c ****         
1525:..\src/interruptions.c ****         tmp_value_encoder = (int16)(aux_encoder[index] - (uint16)g_mem.enc[n_line].m_off[index]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 108


 4442              		.loc 1 1525 0
 4443 010e 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4444 0112 9B00     		lsls	r3, r3, #2
 4445 0114 07F13002 		add	r2, r7, #48
 4446 0118 1344     		add	r3, r3, r2
 4447 011a 53F8243C 		ldr	r3, [r3, #-36]
 4448 011e 99B2     		uxth	r1, r3
 4449 0120 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4450 0122 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4451 0126 504C     		ldr	r4, .L341+24
 4452 0128 1346     		mov	r3, r2
 4453 012a 5B00     		lsls	r3, r3, #1
 4454 012c 1344     		add	r3, r3, r2
 4455 012e 9B00     		lsls	r3, r3, #2
 4456 0130 0344     		add	r3, r3, r0
 4457 0132 6633     		adds	r3, r3, #102
 4458 0134 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4459 0138 9BB2     		uxth	r3, r3
 4460 013a CB1A     		subs	r3, r1, r3
 4461 013c 9BB2     		uxth	r3, r3
 4462 013e BB85     		strh	r3, [r7, #44]	@ movhi
1526:..\src/interruptions.c ****         if (tmp_value_encoder < 0){
 4463              		.loc 1 1526 0
 4464 0140 B7F92C30 		ldrsh	r3, [r7, #44]
 4465 0144 002B     		cmp	r3, #0
 4466 0146 04DA     		bge	.L315
1527:..\src/interruptions.c ****             tmp_value_encoder = tmp_value_encoder + 4096;   //SSSS[4] XXXXXXXXXXXX[12] worst case r
 4467              		.loc 1 1527 0
 4468 0148 BB8D     		ldrh	r3, [r7, #44]
 4469 014a 03F58053 		add	r3, r3, #4096
 4470 014e 9BB2     		uxth	r3, r3
 4471 0150 BB85     		strh	r3, [r7, #44]	@ movhi
 4472              	.L315:
1528:..\src/interruptions.c ****         }       // Range [0, 4096]
1529:..\src/interruptions.c **** 
1530:..\src/interruptions.c ****         if (tmp_value_encoder >= 2048) {
 4473              		.loc 1 1530 0
 4474 0152 B7F92C30 		ldrsh	r3, [r7, #44]
 4475 0156 B3F5006F 		cmp	r3, #2048
 4476 015a 04DB     		blt	.L316
1531:..\src/interruptions.c ****            tmp_value_encoder = tmp_value_encoder - 4096;    //SSSS[4] XXXXXXXXXXXX[12] range [-2048
 4477              		.loc 1 1531 0
 4478 015c BB8D     		ldrh	r3, [r7, #44]
 4479 015e A3F58053 		sub	r3, r3, #4096
 4480 0162 9BB2     		uxth	r3, r3
 4481 0164 BB85     		strh	r3, [r7, #44]	@ movhi
 4482              	.L316:
1532:..\src/interruptions.c ****         }       // Range [-2048, 2047]
1533:..\src/interruptions.c **** 
1534:..\src/interruptions.c ****         tmp_value_encoder_32 = (((int32)(tmp_value_encoder)) << 4);     //SSSSSSSSSSSSSSSS[16] XXXX
 4483              		.loc 1 1534 0
 4484 0166 B7F92C30 		ldrsh	r3, [r7, #44]
 4485 016a 1B01     		lsls	r3, r3, #4
 4486 016c 3B62     		str	r3, [r7, #32]
1535:..\src/interruptions.c ****         comp_value_encoder[n_line][index] = tmp_value_encoder_32;
 4487              		.loc 1 1535 0
 4488 016e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 109


 4489 0170 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4490 0174 3D48     		ldr	r0, .L341+28
 4491 0176 1346     		mov	r3, r2
 4492 0178 5B00     		lsls	r3, r3, #1
 4493 017a 1344     		add	r3, r3, r2
 4494 017c 0B44     		add	r3, r3, r1
 4495 017e 3A6A     		ldr	r2, [r7, #32]
 4496 0180 40F82320 		str	r2, [r0, r3, lsl #2]
1536:..\src/interruptions.c **** 
1537:..\src/interruptions.c ****         // Initialize last_value_encoder
1538:..\src/interruptions.c ****         if (only_first_time[n_line]) {
 4497              		.loc 1 1538 0
 4498 0184 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4499 0186 3A4A     		ldr	r2, .L341+32
 4500 0188 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4501 018a 002B     		cmp	r3, #0
 4502 018c 12D0     		beq	.L317
1539:..\src/interruptions.c ****             last_value_encoder[n_line][index] = tmp_value_encoder_32;
 4503              		.loc 1 1539 0
 4504 018e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4505 0190 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4506 0194 2F48     		ldr	r0, .L341+4
 4507 0196 1346     		mov	r3, r2
 4508 0198 5B00     		lsls	r3, r3, #1
 4509 019a 1344     		add	r3, r3, r2
 4510 019c 0B44     		add	r3, r3, r1
 4511 019e 3A6A     		ldr	r2, [r7, #32]
 4512 01a0 40F82320 		str	r2, [r0, r3, lsl #2]
1540:..\src/interruptions.c ****             if (index == 2)
 4513              		.loc 1 1540 0
 4514 01a4 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4515 01a8 022B     		cmp	r3, #2
 4516 01aa 03D1     		bne	.L317
1541:..\src/interruptions.c ****                 only_first_time[n_line] = 0;
 4517              		.loc 1 1541 0
 4518 01ac FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4519 01ae 304A     		ldr	r2, .L341+32
 4520 01b0 0021     		movs	r1, #0
 4521 01b2 D154     		strb	r1, [r2, r3]
 4522              	.L317:
1542:..\src/interruptions.c ****         }
1543:..\src/interruptions.c **** 
1544:..\src/interruptions.c ****         // Take care of rotations
1545:..\src/interruptions.c ****         value_diff = tmp_value_encoder_32 - last_value_encoder[n_line][index];     // worst case SS
 4523              		.loc 1 1545 0
 4524 01b4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4525 01b6 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4526 01ba 2648     		ldr	r0, .L341+4
 4527 01bc 1346     		mov	r3, r2
 4528 01be 5B00     		lsls	r3, r3, #1
 4529 01c0 1344     		add	r3, r3, r2
 4530 01c2 0B44     		add	r3, r3, r1
 4531 01c4 50F82330 		ldr	r3, [r0, r3, lsl #2]
 4532 01c8 3A6A     		ldr	r2, [r7, #32]
 4533 01ca D31A     		subs	r3, r2, r3
 4534 01cc FB61     		str	r3, [r7, #28]
1546:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 110


1547:..\src/interruptions.c ****         // ====================== 1 TURN ======================
1548:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
1549:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
1550:..\src/interruptions.c ****         //              |                         |      |           |      |                      
1551:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
1552:..\src/interruptions.c ****         //                                               |           |
1553:..\src/interruptions.c ****         //                                           24575           -24576
1554:..\src/interruptions.c ****         //                                               |___________|
1555:..\src/interruptions.c ****         //                                                   49152
1556:..\src/interruptions.c **** 
1557:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
1558:..\src/interruptions.c ****         // and update the variable only if the difference between
1559:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
1560:..\src/interruptions.c **** 
1561:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
1562:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
1563:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
1564:..\src/interruptions.c **** 
1565:..\src/interruptions.c ****         if (value_diff > 49152)
 4535              		.loc 1 1565 0
 4536 01ce FB69     		ldr	r3, [r7, #28]
 4537 01d0 B3F5404F 		cmp	r3, #49152
 4538 01d4 1BDD     		ble	.L318
1566:..\src/interruptions.c ****             g_meas[n_line].rot[index]--;
 4539              		.loc 1 1566 0
 4540 01d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4541 01d8 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4542 01dc 2548     		ldr	r0, .L341+36
 4543 01de 1346     		mov	r3, r2
 4544 01e0 5B00     		lsls	r3, r3, #1
 4545 01e2 1344     		add	r3, r3, r2
 4546 01e4 1B01     		lsls	r3, r3, #4
 4547 01e6 0344     		add	r3, r3, r0
 4548 01e8 0B44     		add	r3, r3, r1
 4549 01ea 1433     		adds	r3, r3, #20
 4550 01ec 93F90030 		ldrsb	r3, [r3]
 4551 01f0 DBB2     		uxtb	r3, r3
 4552 01f2 013B     		subs	r3, r3, #1
 4553 01f4 DBB2     		uxtb	r3, r3
 4554 01f6 5CB2     		sxtb	r4, r3
 4555 01f8 1E48     		ldr	r0, .L341+36
 4556 01fa 1346     		mov	r3, r2
 4557 01fc 5B00     		lsls	r3, r3, #1
 4558 01fe 1344     		add	r3, r3, r2
 4559 0200 1B01     		lsls	r3, r3, #4
 4560 0202 0344     		add	r3, r3, r0
 4561 0204 0B44     		add	r3, r3, r1
 4562 0206 1433     		adds	r3, r3, #20
 4563 0208 2246     		mov	r2, r4
 4564 020a 1A70     		strb	r2, [r3]
 4565 020c 5CE0     		b	.L319
 4566              	.L318:
1567:..\src/interruptions.c ****         else{ 
1568:..\src/interruptions.c ****             if (value_diff < -49152)
 4567              		.loc 1 1568 0
 4568 020e FB69     		ldr	r3, [r7, #28]
 4569 0210 13F5404F 		cmn	r3, #49152
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 111


 4570 0214 30DA     		bge	.L320
1569:..\src/interruptions.c ****                 g_meas[n_line].rot[index]++;
 4571              		.loc 1 1569 0
 4572 0216 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4573 0218 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4574 021c 1548     		ldr	r0, .L341+36
 4575 021e 1346     		mov	r3, r2
 4576 0220 5B00     		lsls	r3, r3, #1
 4577 0222 1344     		add	r3, r3, r2
 4578 0224 1B01     		lsls	r3, r3, #4
 4579 0226 0344     		add	r3, r3, r0
 4580 0228 0B44     		add	r3, r3, r1
 4581 022a 1433     		adds	r3, r3, #20
 4582 022c 93F90030 		ldrsb	r3, [r3]
 4583 0230 DBB2     		uxtb	r3, r3
 4584 0232 0133     		adds	r3, r3, #1
 4585 0234 DBB2     		uxtb	r3, r3
 4586 0236 5CB2     		sxtb	r4, r3
 4587 0238 0E48     		ldr	r0, .L341+36
 4588 023a 1346     		mov	r3, r2
 4589 023c 5B00     		lsls	r3, r3, #1
 4590 023e 1344     		add	r3, r3, r2
 4591 0240 1B01     		lsls	r3, r3, #4
 4592 0242 0344     		add	r3, r3, r0
 4593 0244 0B44     		add	r3, r3, r1
 4594 0246 1433     		adds	r3, r3, #20
 4595 0248 2246     		mov	r2, r4
 4596 024a 1A70     		strb	r2, [r3]
 4597 024c 3CE0     		b	.L319
 4598              	.L342:
 4599 024e 00BF     		.align	2
 4600              	.L341:
 4601 0250 00000000 		.word	reset_last_value_flag
 4602 0254 E4000000 		.word	last_value_encoder.10470
 4603 0258 00000000 		.word	N_Encoder_Line_Connected
 4604 025c 00000000 		.word	Encoder_Check
 4605 0260 00000000 		.word	Encoder_Value
 4606 0264 00000000 		.word	data_encoder_raw
 4607 0268 00000000 		.word	g_mem
 4608 026c FC000000 		.word	comp_value_encoder.10471
 4609 0270 04000000 		.word	only_first_time.10473
 4610 0274 00000000 		.word	g_meas
 4611              	.L320:
1570:..\src/interruptions.c ****             else{
1571:..\src/interruptions.c ****                 if (abs(value_diff) > 16384) { // if two measure are too far
 4612              		.loc 1 1571 0
 4613 0278 FB69     		ldr	r3, [r7, #28]
 4614 027a 002B     		cmp	r3, #0
 4615 027c B8BF     		it	lt
 4616 027e 5B42     		rsblt	r3, r3, #0
 4617 0280 B3F5804F 		cmp	r3, #16384
 4618 0284 20DD     		ble	.L319
1572:..\src/interruptions.c ****                     error[n_line][index]++;
 4619              		.loc 1 1572 0
 4620 0286 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4621 0288 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4622 028c 9848     		ldr	r0, .L343
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 112


 4623 028e 1346     		mov	r3, r2
 4624 0290 5B00     		lsls	r3, r3, #1
 4625 0292 1344     		add	r3, r3, r2
 4626 0294 0344     		add	r3, r3, r0
 4627 0296 0B44     		add	r3, r3, r1
 4628 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4629 029a 0133     		adds	r3, r3, #1
 4630 029c DCB2     		uxtb	r4, r3
 4631 029e 9448     		ldr	r0, .L343
 4632 02a0 1346     		mov	r3, r2
 4633 02a2 5B00     		lsls	r3, r3, #1
 4634 02a4 1344     		add	r3, r3, r2
 4635 02a6 0344     		add	r3, r3, r0
 4636 02a8 0B44     		add	r3, r3, r1
 4637 02aa 2246     		mov	r2, r4
 4638 02ac 1A70     		strb	r2, [r3]
1573:..\src/interruptions.c ****                                 
1574:..\src/interruptions.c ****                     if (error[n_line][index] < 10)
 4639              		.loc 1 1574 0
 4640 02ae FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4641 02b0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4642 02b4 8E48     		ldr	r0, .L343
 4643 02b6 1346     		mov	r3, r2
 4644 02b8 5B00     		lsls	r3, r3, #1
 4645 02ba 1344     		add	r3, r3, r2
 4646 02bc 0344     		add	r3, r3, r0
 4647 02be 0B44     		add	r3, r3, r1
 4648 02c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4649 02c2 092B     		cmp	r3, #9
 4650 02c4 40F26882 		bls	.L340
 4651              	.L319:
1575:..\src/interruptions.c ****                         // Discard
1576:..\src/interruptions.c ****                         return;
1577:..\src/interruptions.c ****                 }
1578:..\src/interruptions.c ****             }
1579:..\src/interruptions.c ****         }
1580:..\src/interruptions.c **** 
1581:..\src/interruptions.c ****         error[n_line][index] = 0;
 4652              		.loc 1 1581 0
 4653 02c8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4654 02ca 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4655 02ce 8848     		ldr	r0, .L343
 4656 02d0 1346     		mov	r3, r2
 4657 02d2 5B00     		lsls	r3, r3, #1
 4658 02d4 1344     		add	r3, r3, r2
 4659 02d6 0344     		add	r3, r3, r0
 4660 02d8 0B44     		add	r3, r3, r1
 4661 02da 0022     		movs	r2, #0
 4662 02dc 1A70     		strb	r2, [r3]
1582:..\src/interruptions.c ****         
1583:..\src/interruptions.c ****         last_value_encoder[n_line][index] = tmp_value_encoder_32;
 4663              		.loc 1 1583 0
 4664 02de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4665 02e0 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4666 02e4 8348     		ldr	r0, .L343+4
 4667 02e6 1346     		mov	r3, r2
 4668 02e8 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 113


 4669 02ea 1344     		add	r3, r3, r2
 4670 02ec 0B44     		add	r3, r3, r1
 4671 02ee 3A6A     		ldr	r2, [r7, #32]
 4672 02f0 40F82320 		str	r2, [r0, r3, lsl #2]
1584:..\src/interruptions.c **** 
1585:..\src/interruptions.c ****         value_encoder = (int32)tmp_value_encoder_32;   // SSSSSSSSSSSSSSSS[16] XXXXXXXXXXXX[12] 000
 4673              		.loc 1 1585 0
 4674 02f4 3B6A     		ldr	r3, [r7, #32]
 4675 02f6 BB62     		str	r3, [r7, #40]
1586:..\src/interruptions.c **** 
1587:..\src/interruptions.c ****         value_encoder += ((int32)g_meas[n_line].rot[index] << 16);    
 4676              		.loc 1 1587 0
 4677 02f8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4678 02fa 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4679 02fe 7E48     		ldr	r0, .L343+8
 4680 0300 1346     		mov	r3, r2
 4681 0302 5B00     		lsls	r3, r3, #1
 4682 0304 1344     		add	r3, r3, r2
 4683 0306 1B01     		lsls	r3, r3, #4
 4684 0308 0344     		add	r3, r3, r0
 4685 030a 0B44     		add	r3, r3, r1
 4686 030c 1433     		adds	r3, r3, #20
 4687 030e 93F90030 		ldrsb	r3, [r3]
 4688 0312 1B04     		lsls	r3, r3, #16
 4689 0314 BA6A     		ldr	r2, [r7, #40]
 4690 0316 1344     		add	r3, r3, r2
 4691 0318 BB62     		str	r3, [r7, #40]
1588:..\src/interruptions.c ****         
1589:..\src/interruptions.c ****         if (c_mem.enc[n_line].m_mult[index] != 1.0) {
 4692              		.loc 1 1589 0
 4693 031a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4694 031c 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4695 0320 7648     		ldr	r0, .L343+12
 4696 0322 1346     		mov	r3, r2
 4697 0324 5B00     		lsls	r3, r3, #1
 4698 0326 1344     		add	r3, r3, r2
 4699 0328 9B00     		lsls	r3, r3, #2
 4700 032a 0B44     		add	r3, r3, r1
 4701 032c 6833     		adds	r3, r3, #104
 4702 032e 9B00     		lsls	r3, r3, #2
 4703 0330 0344     		add	r3, r3, r0
 4704 0332 5B68     		ldr	r3, [r3, #4]	@ float
 4705 0334 4FF07E51 		mov	r1, #1065353216
 4706 0338 1846     		mov	r0, r3
 4707 033a FFF7FEFF 		bl	__aeabi_fcmpeq
 4708 033e 0346     		mov	r3, r0
 4709 0340 002B     		cmp	r3, #0
 4710 0342 1AD1     		bne	.L322
1590:..\src/interruptions.c ****             value_encoder *= c_mem.enc[n_line].m_mult[index];
 4711              		.loc 1 1590 0
 4712 0344 B86A     		ldr	r0, [r7, #40]
 4713 0346 FFF7FEFF 		bl	__aeabi_i2f
 4714 034a 0446     		mov	r4, r0
 4715 034c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4716 034e 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4717 0352 6A48     		ldr	r0, .L343+12
 4718 0354 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 114


 4719 0356 5B00     		lsls	r3, r3, #1
 4720 0358 1344     		add	r3, r3, r2
 4721 035a 9B00     		lsls	r3, r3, #2
 4722 035c 0B44     		add	r3, r3, r1
 4723 035e 6833     		adds	r3, r3, #104
 4724 0360 9B00     		lsls	r3, r3, #2
 4725 0362 0344     		add	r3, r3, r0
 4726 0364 5B68     		ldr	r3, [r3, #4]	@ float
 4727 0366 1946     		mov	r1, r3
 4728 0368 2046     		mov	r0, r4
 4729 036a FFF7FEFF 		bl	__aeabi_fmul
 4730 036e 0346     		mov	r3, r0
 4731 0370 1846     		mov	r0, r3
 4732 0372 FFF7FEFF 		bl	__aeabi_f2iz
 4733 0376 0346     		mov	r3, r0
 4734 0378 BB62     		str	r3, [r7, #40]
 4735              	.L322:
1591:..\src/interruptions.c ****         }
1592:..\src/interruptions.c **** 
1593:..\src/interruptions.c **** #ifdef SOFTHAND_FW        
1594:..\src/interruptions.c ****         // Right / Left hand turn
1595:..\src/interruptions.c ****         if (index == 0) {
 4736              		.loc 1 1595 0
 4737 037a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4738 037e 002B     		cmp	r3, #0
 4739 0380 07D1     		bne	.L324
1596:..\src/interruptions.c ****             if (c_mem.dev.right_left == RIGHT_HAND){
 4740              		.loc 1 1596 0
 4741 0382 5E4B     		ldr	r3, .L343+12
 4742 0384 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 4743 0388 002B     		cmp	r3, #0
 4744 038a 02D1     		bne	.L324
1597:..\src/interruptions.c ****                 value_encoder *= -1;        
 4745              		.loc 1 1597 0
 4746 038c BB6A     		ldr	r3, [r7, #40]
 4747 038e 5B42     		negs	r3, r3
 4748 0390 BB62     		str	r3, [r7, #40]
 4749              	.L324:
1598:..\src/interruptions.c ****             }
1599:..\src/interruptions.c ****         }
1600:..\src/interruptions.c **** #endif        
1601:..\src/interruptions.c **** 
1602:..\src/interruptions.c ****         g_meas[n_line].pos[index] = value_encoder;
 4750              		.loc 1 1602 0
 4751 0392 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4752 0394 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4753 0398 5748     		ldr	r0, .L343+8
 4754 039a 1346     		mov	r3, r2
 4755 039c 5B00     		lsls	r3, r3, #1
 4756 039e 1344     		add	r3, r3, r2
 4757 03a0 9B00     		lsls	r3, r3, #2
 4758 03a2 0B44     		add	r3, r3, r1
 4759 03a4 BA6A     		ldr	r2, [r7, #40]
 4760 03a6 40F82320 		str	r2, [r0, r3, lsl #2]
1603:..\src/interruptions.c ****     
1604:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*value_encoder - 18* v_value[n_line][index] + 9 * vv_value
 4761              		.loc 1 1604 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 115


 4762 03aa BA6A     		ldr	r2, [r7, #40]
 4763 03ac 1346     		mov	r3, r2
 4764 03ae 9B00     		lsls	r3, r3, #2
 4765 03b0 1344     		add	r3, r3, r2
 4766 03b2 5B00     		lsls	r3, r3, #1
 4767 03b4 9918     		adds	r1, r3, r2
 4768 03b6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4769 03b8 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4770 03bc 504C     		ldr	r4, .L343+16
 4771 03be 1346     		mov	r3, r2
 4772 03c0 5B00     		lsls	r3, r3, #1
 4773 03c2 1344     		add	r3, r3, r2
 4774 03c4 0344     		add	r3, r3, r0
 4775 03c6 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4776 03ca 6FF01102 		mvn	r2, #17
 4777 03ce 02FB03F3 		mul	r3, r2, r3
 4778 03d2 1944     		add	r1, r1, r3
 4779 03d4 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4780 03d6 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4781 03da 4A4C     		ldr	r4, .L343+20
 4782 03dc 1346     		mov	r3, r2
 4783 03de 5B00     		lsls	r3, r3, #1
 4784 03e0 1344     		add	r3, r3, r2
 4785 03e2 0344     		add	r3, r3, r0
 4786 03e4 54F82320 		ldr	r2, [r4, r3, lsl #2]
 4787 03e8 1346     		mov	r3, r2
 4788 03ea DB00     		lsls	r3, r3, #3
 4789 03ec 1344     		add	r3, r3, r2
 4790 03ee 1944     		add	r1, r1, r3
 4791 03f0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4792 03f2 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4793 03f6 444C     		ldr	r4, .L343+24
 4794 03f8 1346     		mov	r3, r2
 4795 03fa 5B00     		lsls	r3, r3, #1
 4796 03fc 1344     		add	r3, r3, r2
 4797 03fe 0344     		add	r3, r3, r0
 4798 0400 54F82330 		ldr	r3, [r4, r3, lsl #2]
 4799 0404 5B00     		lsls	r3, r3, #1
 4800 0406 C81A     		subs	r0, r1, r3
 4801 0408 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 4802 040c DB00     		lsls	r3, r3, #3
 4803 040e 3F4A     		ldr	r2, .L343+28
 4804 0410 1344     		add	r3, r3, r2
 4805 0412 1946     		mov	r1, r3
 4806 0414 FFF7FEFF 		bl	filter
 4807 0418 0346     		mov	r3, r0
 4808 041a 1BB2     		sxth	r3, r3
 4809 041c BB61     		str	r3, [r7, #24]
1605:..\src/interruptions.c **** 
1606:..\src/interruptions.c ****         //Update current speed
1607:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 4810              		.loc 1 1607 0
 4811 041e B869     		ldr	r0, [r7, #24]
 4812 0420 FFF7FEFF 		bl	__aeabi_i2f
 4813 0424 0446     		mov	r4, r0
 4814 0426 3A4B     		ldr	r3, .L343+32
 4815 0428 1B68     		ldr	r3, [r3]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 116


 4816 042a 3A49     		ldr	r1, .L343+36
 4817 042c 1846     		mov	r0, r3
 4818 042e FFF7FEFF 		bl	__aeabi_fmul
 4819 0432 0346     		mov	r3, r0
 4820 0434 1946     		mov	r1, r3
 4821 0436 2046     		mov	r0, r4
 4822 0438 FFF7FEFF 		bl	__aeabi_fdiv
 4823 043c 0346     		mov	r3, r0
 4824 043e 1846     		mov	r0, r3
 4825 0440 FFF7FEFF 		bl	__aeabi_f2iz
 4826 0444 0346     		mov	r3, r0
 4827 0446 BB61     		str	r3, [r7, #24]
1608:..\src/interruptions.c ****         g_meas[n_line].vel[index] = speed_encoder;
 4828              		.loc 1 1608 0
 4829 0448 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4830 044a 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4831 044e 2A48     		ldr	r0, .L343+8
 4832 0450 1346     		mov	r3, r2
 4833 0452 5B00     		lsls	r3, r3, #1
 4834 0454 1344     		add	r3, r3, r2
 4835 0456 9B00     		lsls	r3, r3, #2
 4836 0458 0B44     		add	r3, r3, r1
 4837 045a 0633     		adds	r3, r3, #6
 4838 045c BA69     		ldr	r2, [r7, #24]
 4839 045e 40F82320 		str	r2, [r0, r3, lsl #2]
1609:..\src/interruptions.c **** 
1610:..\src/interruptions.c ****         // update old velocity and acceleration values
1611:..\src/interruptions.c ****         vvv_value[n_line][index] = vv_value[n_line][index];
 4840              		.loc 1 1611 0
 4841 0462 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4842 0464 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4843 0468 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4844 046a 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 4845 046e 254D     		ldr	r5, .L343+20
 4846 0470 0B46     		mov	r3, r1
 4847 0472 5B00     		lsls	r3, r3, #1
 4848 0474 0B44     		add	r3, r3, r1
 4849 0476 2344     		add	r3, r3, r4
 4850 0478 55F82310 		ldr	r1, [r5, r3, lsl #2]
 4851 047c 224C     		ldr	r4, .L343+24
 4852 047e 1346     		mov	r3, r2
 4853 0480 5B00     		lsls	r3, r3, #1
 4854 0482 1344     		add	r3, r3, r2
 4855 0484 0344     		add	r3, r3, r0
 4856 0486 44F82310 		str	r1, [r4, r3, lsl #2]
1612:..\src/interruptions.c ****         vv_value[n_line][index] = v_value[n_line][index];
 4857              		.loc 1 1612 0
 4858 048a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4859 048c 97F82F00 		ldrb	r0, [r7, #47]	@ zero_extendqisi2
 4860 0490 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 4861 0492 97F82F40 		ldrb	r4, [r7, #47]	@ zero_extendqisi2
 4862 0496 1A4D     		ldr	r5, .L343+16
 4863 0498 0B46     		mov	r3, r1
 4864 049a 5B00     		lsls	r3, r3, #1
 4865 049c 0B44     		add	r3, r3, r1
 4866 049e 2344     		add	r3, r3, r4
 4867 04a0 55F82310 		ldr	r1, [r5, r3, lsl #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 117


 4868 04a4 174C     		ldr	r4, .L343+20
 4869 04a6 1346     		mov	r3, r2
 4870 04a8 5B00     		lsls	r3, r3, #1
 4871 04aa 1344     		add	r3, r3, r2
 4872 04ac 0344     		add	r3, r3, r0
 4873 04ae 44F82310 		str	r1, [r4, r3, lsl #2]
1613:..\src/interruptions.c ****         v_value[n_line][index] = value_encoder;
 4874              		.loc 1 1613 0
 4875 04b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4876 04b4 97F82F10 		ldrb	r1, [r7, #47]	@ zero_extendqisi2
 4877 04b8 1148     		ldr	r0, .L343+16
 4878 04ba 1346     		mov	r3, r2
 4879 04bc 5B00     		lsls	r3, r3, #1
 4880 04be 1344     		add	r3, r3, r2
 4881 04c0 0B44     		add	r3, r3, r1
 4882 04c2 BA6A     		ldr	r2, [r7, #40]
 4883 04c4 40F82320 		str	r2, [r0, r3, lsl #2]
1614:..\src/interruptions.c **** 
1615:..\src/interruptions.c ****         // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
1616:..\src/interruptions.c ****         if (pos_reconstruct[n_line] == FALSE){
 4884              		.loc 1 1616 0
 4885 04c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4886 04ca 134A     		ldr	r2, .L343+40
 4887 04cc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4888 04ce 002B     		cmp	r3, #0
 4889 04d0 40F01E81 		bne	.L325
1617:..\src/interruptions.c ****             if (one_time_execute[n_line] < 34) 
 4890              		.loc 1 1617 0
 4891 04d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4892 04d6 114A     		ldr	r2, .L343+44
 4893 04d8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4894 04da 212B     		cmp	r3, #33
 4895 04dc 20D8     		bhi	.L326
1618:..\src/interruptions.c ****                 one_time_execute[n_line]++;
 4896              		.loc 1 1618 0
 4897 04de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 4898 04e0 0E4A     		ldr	r2, .L343+44
 4899 04e2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 4900 04e4 0132     		adds	r2, r2, #1
 4901 04e6 D1B2     		uxtb	r1, r2
 4902 04e8 0C4A     		ldr	r2, .L343+44
 4903 04ea D154     		strb	r1, [r2, r3]
 4904 04ec 10E1     		b	.L325
 4905              	.L344:
 4906 04ee 00BF     		.align	2
 4907              	.L343:
 4908 04f0 14010000 		.word	error.10472
 4909 04f4 E4000000 		.word	last_value_encoder.10470
 4910 04f8 00000000 		.word	g_meas
 4911 04fc 00000000 		.word	c_mem
 4912 0500 1C010000 		.word	v_value.10478
 4913 0504 34010000 		.word	vv_value.10479
 4914 0508 4C010000 		.word	vvv_value.10480
 4915 050c 00000000 		.word	filt_vel
 4916 0510 00000000 		.word	cycle_time
 4917 0514 0000C040 		.word	1086324736
 4918 0518 64010000 		.word	pos_reconstruct.10477
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 118


 4919 051c 68010000 		.word	one_time_execute.10475
 4920              	.L326:
1619:..\src/interruptions.c ****             else {
1620:..\src/interruptions.c ****                 //Double encoder translation
1621:..\src/interruptions.c ****                 if (c_mem.enc[n_line].double_encoder_on_off){
 4921              		.loc 1 1621 0
 4922 0520 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4923 0522 9F49     		ldr	r1, .L345
 4924 0524 1346     		mov	r3, r2
 4925 0526 5B00     		lsls	r3, r3, #1
 4926 0528 1344     		add	r3, r3, r2
 4927 052a 1B01     		lsls	r3, r3, #4
 4928 052c 0B44     		add	r3, r3, r1
 4929 052e 03F5D873 		add	r3, r3, #432
 4930 0532 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4931 0534 002B     		cmp	r3, #0
 4932 0536 39D0     		beq	.L327
1622:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(comp_value_encoder[n_line][0],comp_value_encoder[n_li
 4933              		.loc 1 1622 0
 4934 0538 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4935 053a 9A49     		ldr	r1, .L345+4
 4936 053c 1346     		mov	r3, r2
 4937 053e 5B00     		lsls	r3, r3, #1
 4938 0540 1344     		add	r3, r3, r2
 4939 0542 9B00     		lsls	r3, r3, #2
 4940 0544 0B44     		add	r3, r3, r1
 4941 0546 1868     		ldr	r0, [r3]
 4942 0548 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4943 054a 9649     		ldr	r1, .L345+4
 4944 054c 1346     		mov	r3, r2
 4945 054e 5B00     		lsls	r3, r3, #1
 4946 0550 1344     		add	r3, r3, r2
 4947 0552 9B00     		lsls	r3, r3, #2
 4948 0554 0B44     		add	r3, r3, r1
 4949 0556 0433     		adds	r3, r3, #4
 4950 0558 1B68     		ldr	r3, [r3]
 4951 055a 1946     		mov	r1, r3
 4952 055c FFF7FEFF 		bl	calc_turns_fcn
 4953 0560 0346     		mov	r3, r0
 4954 0562 87F82730 		strb	r3, [r7, #39]
1623:..\src/interruptions.c ****                     if (c_mem.enc[n_line].m_mult[0] < 0)
 4955              		.loc 1 1623 0
 4956 0566 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4957 0568 8D49     		ldr	r1, .L345
 4958 056a 1346     		mov	r3, r2
 4959 056c 5B00     		lsls	r3, r3, #1
 4960 056e 1344     		add	r3, r3, r2
 4961 0570 1B01     		lsls	r3, r3, #4
 4962 0572 0B44     		add	r3, r3, r1
 4963 0574 03F5D273 		add	r3, r3, #420
 4964 0578 1B68     		ldr	r3, [r3]	@ float
 4965 057a 4FF00001 		mov	r1, #0
 4966 057e 1846     		mov	r0, r3
 4967 0580 FFF7FEFF 		bl	__aeabi_fcmplt
 4968 0584 0346     		mov	r3, r0
 4969 0586 002B     		cmp	r3, #0
 4970 0588 05D0     		beq	.L328
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 119


1624:..\src/interruptions.c ****                         init_rot = -init_rot;
 4971              		.loc 1 1624 0
 4972 058a 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 4973 058e 5B42     		negs	r3, r3
 4974 0590 DBB2     		uxtb	r3, r3
 4975 0592 87F82730 		strb	r3, [r7, #39]
 4976              	.L328:
1625:..\src/interruptions.c ****                     
1626:..\src/interruptions.c ****                     g_meas[n_line].rot[0] = (int8)init_rot;
 4977              		.loc 1 1626 0
 4978 0596 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4979 0598 8349     		ldr	r1, .L345+8
 4980 059a 1346     		mov	r3, r2
 4981 059c 5B00     		lsls	r3, r3, #1
 4982 059e 1344     		add	r3, r3, r2
 4983 05a0 1B01     		lsls	r3, r3, #4
 4984 05a2 0B44     		add	r3, r3, r1
 4985 05a4 1433     		adds	r3, r3, #20
 4986 05a6 97F82720 		ldrb	r2, [r7, #39]
 4987 05aa 1A70     		strb	r2, [r3]
 4988              	.L327:
1627:..\src/interruptions.c ****                 }    
1628:..\src/interruptions.c **** 
1629:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 4989              		.loc 1 1629 0
 4990 05ac FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 4991 05ae 7C49     		ldr	r1, .L345
 4992 05b0 1346     		mov	r3, r2
 4993 05b2 5B00     		lsls	r3, r3, #1
 4994 05b4 1344     		add	r3, r3, r2
 4995 05b6 1B01     		lsls	r3, r3, #4
 4996 05b8 0B44     		add	r3, r3, r1
 4997 05ba 03F5D273 		add	r3, r3, #420
 4998 05be 1B68     		ldr	r3, [r3]	@ float
 4999 05c0 4FF07E51 		mov	r1, #1065353216
 5000 05c4 1846     		mov	r0, r3
 5001 05c6 FFF7FEFF 		bl	__aeabi_fcmpeq
 5002 05ca 0346     		mov	r3, r0
 5003 05cc 002B     		cmp	r3, #0
 5004 05ce 24D1     		bne	.L330
1630:..\src/interruptions.c ****                     g_meas[n_line].pos[0] /= c_mem.enc[n_line].m_mult[0];
 5005              		.loc 1 1630 0
 5006 05d0 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 5007 05d2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5008 05d4 7449     		ldr	r1, .L345+8
 5009 05d6 1346     		mov	r3, r2
 5010 05d8 5B00     		lsls	r3, r3, #1
 5011 05da 1344     		add	r3, r3, r2
 5012 05dc 1B01     		lsls	r3, r3, #4
 5013 05de 0B44     		add	r3, r3, r1
 5014 05e0 1B68     		ldr	r3, [r3]
 5015 05e2 1846     		mov	r0, r3
 5016 05e4 FFF7FEFF 		bl	__aeabi_i2f
 5017 05e8 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5018 05ea 6D49     		ldr	r1, .L345
 5019 05ec 1346     		mov	r3, r2
 5020 05ee 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 120


 5021 05f0 1344     		add	r3, r3, r2
 5022 05f2 1B01     		lsls	r3, r3, #4
 5023 05f4 0B44     		add	r3, r3, r1
 5024 05f6 03F5D273 		add	r3, r3, #420
 5025 05fa 1B68     		ldr	r3, [r3]	@ float
 5026 05fc 1946     		mov	r1, r3
 5027 05fe FFF7FEFF 		bl	__aeabi_fdiv
 5028 0602 0346     		mov	r3, r0
 5029 0604 1846     		mov	r0, r3
 5030 0606 FFF7FEFF 		bl	__aeabi_f2iz
 5031 060a 0146     		mov	r1, r0
 5032 060c 664A     		ldr	r2, .L345+8
 5033 060e 2346     		mov	r3, r4
 5034 0610 5B00     		lsls	r3, r3, #1
 5035 0612 2344     		add	r3, r3, r4
 5036 0614 1B01     		lsls	r3, r3, #4
 5037 0616 1344     		add	r3, r3, r2
 5038 0618 1960     		str	r1, [r3]
 5039              	.L330:
1631:..\src/interruptions.c ****                 
1632:..\src/interruptions.c ****                 g_meas[n_line].pos[0] += (int32)(init_rot << 16);
 5040              		.loc 1 1632 0
 5041 061a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5042 061c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 5043 061e 6248     		ldr	r0, .L345+8
 5044 0620 0B46     		mov	r3, r1
 5045 0622 5B00     		lsls	r3, r3, #1
 5046 0624 0B44     		add	r3, r3, r1
 5047 0626 1B01     		lsls	r3, r3, #4
 5048 0628 0344     		add	r3, r3, r0
 5049 062a 1968     		ldr	r1, [r3]
 5050 062c 97F92730 		ldrsb	r3, [r7, #39]
 5051 0630 1B04     		lsls	r3, r3, #16
 5052 0632 1944     		add	r1, r1, r3
 5053 0634 5C48     		ldr	r0, .L345+8
 5054 0636 1346     		mov	r3, r2
 5055 0638 5B00     		lsls	r3, r3, #1
 5056 063a 1344     		add	r3, r3, r2
 5057 063c 1B01     		lsls	r3, r3, #4
 5058 063e 0344     		add	r3, r3, r0
 5059 0640 1960     		str	r1, [r3]
1633:..\src/interruptions.c ****             
1634:..\src/interruptions.c ****                 if (c_mem.enc[n_line].m_mult[0] != 1.0)
 5060              		.loc 1 1634 0
 5061 0642 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5062 0644 5649     		ldr	r1, .L345
 5063 0646 1346     		mov	r3, r2
 5064 0648 5B00     		lsls	r3, r3, #1
 5065 064a 1344     		add	r3, r3, r2
 5066 064c 1B01     		lsls	r3, r3, #4
 5067 064e 0B44     		add	r3, r3, r1
 5068 0650 03F5D273 		add	r3, r3, #420
 5069 0654 1B68     		ldr	r3, [r3]	@ float
 5070 0656 4FF07E51 		mov	r1, #1065353216
 5071 065a 1846     		mov	r0, r3
 5072 065c FFF7FEFF 		bl	__aeabi_fcmpeq
 5073 0660 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 121


 5074 0662 002B     		cmp	r3, #0
 5075 0664 24D1     		bne	.L332
1635:..\src/interruptions.c ****                     g_meas[n_line].pos[0] *= c_mem.enc[n_line].m_mult[0];
 5076              		.loc 1 1635 0
 5077 0666 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 5078 0668 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5079 066a 4F49     		ldr	r1, .L345+8
 5080 066c 1346     		mov	r3, r2
 5081 066e 5B00     		lsls	r3, r3, #1
 5082 0670 1344     		add	r3, r3, r2
 5083 0672 1B01     		lsls	r3, r3, #4
 5084 0674 0B44     		add	r3, r3, r1
 5085 0676 1B68     		ldr	r3, [r3]
 5086 0678 1846     		mov	r0, r3
 5087 067a FFF7FEFF 		bl	__aeabi_i2f
 5088 067e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5089 0680 4749     		ldr	r1, .L345
 5090 0682 1346     		mov	r3, r2
 5091 0684 5B00     		lsls	r3, r3, #1
 5092 0686 1344     		add	r3, r3, r2
 5093 0688 1B01     		lsls	r3, r3, #4
 5094 068a 0B44     		add	r3, r3, r1
 5095 068c 03F5D273 		add	r3, r3, #420
 5096 0690 1B68     		ldr	r3, [r3]	@ float
 5097 0692 1946     		mov	r1, r3
 5098 0694 FFF7FEFF 		bl	__aeabi_fmul
 5099 0698 0346     		mov	r3, r0
 5100 069a 1846     		mov	r0, r3
 5101 069c FFF7FEFF 		bl	__aeabi_f2iz
 5102 06a0 0146     		mov	r1, r0
 5103 06a2 414A     		ldr	r2, .L345+8
 5104 06a4 2346     		mov	r3, r4
 5105 06a6 5B00     		lsls	r3, r3, #1
 5106 06a8 2344     		add	r3, r3, r4
 5107 06aa 1B01     		lsls	r3, r3, #4
 5108 06ac 1344     		add	r3, r3, r2
 5109 06ae 1960     		str	r1, [r3]
 5110              	.L332:
1636:..\src/interruptions.c ****             
1637:..\src/interruptions.c ****                 g_refNew[assoc_motor].pos = g_meas[n_line].pos[0];
 5111              		.loc 1 1637 0
 5112 06b0 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5113 06b2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 5114 06b4 3C48     		ldr	r0, .L345+8
 5115 06b6 1346     		mov	r3, r2
 5116 06b8 5B00     		lsls	r3, r3, #1
 5117 06ba 1344     		add	r3, r3, r2
 5118 06bc 1B01     		lsls	r3, r3, #4
 5119 06be 0344     		add	r3, r3, r0
 5120 06c0 1A68     		ldr	r2, [r3]
 5121 06c2 3A48     		ldr	r0, .L345+12
 5122 06c4 0B01     		lsls	r3, r1, #4
 5123 06c6 0344     		add	r3, r3, r0
 5124 06c8 1A60     		str	r2, [r3]
1638:..\src/interruptions.c **** 
1639:..\src/interruptions.c ****                 // If necessary activate motor
1640:..\src/interruptions.c ****     			safe_startup_motor_activation[n_line] = TRUE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 122


 5125              		.loc 1 1640 0
 5126 06ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5127 06cc 384A     		ldr	r2, .L345+16
 5128 06ce 0121     		movs	r1, #1
 5129 06d0 D154     		strb	r1, [r2, r3]
1641:..\src/interruptions.c ****                 // Activate the motor associated to this encoder line
1642:..\src/interruptions.c ****                 g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5130              		.loc 1 1642 0
 5131 06d2 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5132 06d4 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5133 06d6 3248     		ldr	r0, .L345
 5134 06d8 1346     		mov	r3, r2
 5135 06da DB00     		lsls	r3, r3, #3
 5136 06dc 9B1A     		subs	r3, r3, r2
 5137 06de 1B01     		lsls	r3, r3, #4
 5138 06e0 0344     		add	r3, r3, r0
 5139 06e2 E033     		adds	r3, r3, #224
 5140 06e4 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5141 06e6 314A     		ldr	r2, .L345+12
 5142 06e8 0B01     		lsls	r3, r1, #4
 5143 06ea 1344     		add	r3, r3, r2
 5144 06ec 0C33     		adds	r3, r3, #12
 5145 06ee 0246     		mov	r2, r0
 5146 06f0 1A70     		strb	r2, [r3]
1643:..\src/interruptions.c ****                 enable_motor(assoc_motor, g_refNew[assoc_motor].onoff);                
 5147              		.loc 1 1643 0
 5148 06f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5149 06f4 2D4A     		ldr	r2, .L345+12
 5150 06f6 1B01     		lsls	r3, r3, #4
 5151 06f8 1344     		add	r3, r3, r2
 5152 06fa 0C33     		adds	r3, r3, #12
 5153 06fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5154 06fe BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5155 0700 1146     		mov	r1, r2
 5156 0702 1846     		mov	r0, r3
 5157 0704 FFF7FEFF 		bl	enable_motor
1644:..\src/interruptions.c ****                 
1645:..\src/interruptions.c ****                 pos_reconstruct[n_line] = TRUE;
 5158              		.loc 1 1645 0
 5159 0708 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5160 070a 2A4A     		ldr	r2, .L345+20
 5161 070c 0121     		movs	r1, #1
 5162 070e D154     		strb	r1, [r2, r3]
 5163              	.L325:
1521:..\src/interruptions.c ****         
 5164              		.loc 1 1521 0 discriminator 2
 5165 0710 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5166 0714 0133     		adds	r3, r3, #1
 5167 0716 87F82F30 		strb	r3, [r7, #47]
 5168              	.L314:
1521:..\src/interruptions.c ****         
 5169              		.loc 1 1521 0 is_stmt 0 discriminator 1
 5170 071a 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 5171 071e 022B     		cmp	r3, #2
 5172 0720 7FF6E8AC 		bls	.L334
1646:..\src/interruptions.c ****             }
1647:..\src/interruptions.c ****         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 123


1648:..\src/interruptions.c ****     } 
1649:..\src/interruptions.c **** 
1650:..\src/interruptions.c **** 	
1651:..\src/interruptions.c **** 	// Wait for 35+SAFE_STARTUP_MOTOR_READINGS cycles before starting motors
1652:..\src/interruptions.c ****     if (safe_startup_motor_activation[n_line]){
 5173              		.loc 1 1652 0 is_stmt 1
 5174 0724 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5175 0726 224A     		ldr	r2, .L345+16
 5176 0728 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5177 072a 002B     		cmp	r3, #0
 5178 072c 35D0     		beq	.L305
1653:..\src/interruptions.c ****         count_startup_motor[n_line]++;
 5179              		.loc 1 1653 0
 5180 072e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5181 0730 214A     		ldr	r2, .L345+24
 5182 0732 52F82320 		ldr	r2, [r2, r3, lsl #2]
 5183 0736 0132     		adds	r2, r2, #1
 5184 0738 1F49     		ldr	r1, .L345+24
 5185 073a 41F82320 		str	r2, [r1, r3, lsl #2]
1654:..\src/interruptions.c ****         if (count_startup_motor[n_line] >= (uint32)SAFE_STARTUP_MOTOR_READINGS) {                  
 5186              		.loc 1 1654 0
 5187 073e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5188 0740 1D4A     		ldr	r2, .L345+24
 5189 0742 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5190 0746 B3F5FA5F 		cmp	r3, #8000
 5191 074a 26D3     		bcc	.L305
1655:..\src/interruptions.c ****             g_refNew[assoc_motor].pos = 0;
 5192              		.loc 1 1655 0
 5193 074c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5194 074e 174A     		ldr	r2, .L345+12
 5195 0750 1B01     		lsls	r3, r3, #4
 5196 0752 1344     		add	r3, r3, r2
 5197 0754 0022     		movs	r2, #0
 5198 0756 1A60     		str	r2, [r3]
1656:..\src/interruptions.c ****             
1657:..\src/interruptions.c ****             // Activate the motor associated to this encoder line
1658:..\src/interruptions.c ****             g_refNew[assoc_motor].onoff = c_mem.motor[assoc_motor].activ;
 5199              		.loc 1 1658 0
 5200 0758 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 5201 075a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5202 075c 1048     		ldr	r0, .L345
 5203 075e 1346     		mov	r3, r2
 5204 0760 DB00     		lsls	r3, r3, #3
 5205 0762 9B1A     		subs	r3, r3, r2
 5206 0764 1B01     		lsls	r3, r3, #4
 5207 0766 0344     		add	r3, r3, r0
 5208 0768 E033     		adds	r3, r3, #224
 5209 076a 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5210 076c 0F4A     		ldr	r2, .L345+12
 5211 076e 0B01     		lsls	r3, r1, #4
 5212 0770 1344     		add	r3, r3, r2
 5213 0772 0C33     		adds	r3, r3, #12
 5214 0774 0246     		mov	r2, r0
 5215 0776 1A70     		strb	r2, [r3]
1659:..\src/interruptions.c ****             enable_motor(assoc_motor, g_refNew[assoc_motor].onoff); 
 5216              		.loc 1 1659 0
 5217 0778 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 124


 5218 077a 0C4A     		ldr	r2, .L345+12
 5219 077c 1B01     		lsls	r3, r3, #4
 5220 077e 1344     		add	r3, r3, r2
 5221 0780 0C33     		adds	r3, r3, #12
 5222 0782 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5223 0784 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5224 0786 1146     		mov	r1, r2
 5225 0788 1846     		mov	r0, r3
 5226 078a FFF7FEFF 		bl	enable_motor
1660:..\src/interruptions.c ****                         
1661:..\src/interruptions.c ****             safe_startup_motor_activation[n_line] = FALSE;
 5227              		.loc 1 1661 0
 5228 078e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 5229 0790 074A     		ldr	r2, .L345+16
 5230 0792 0021     		movs	r1, #0
 5231 0794 D154     		strb	r1, [r2, r3]
 5232 0796 00E0     		b	.L305
 5233              	.L340:
1576:..\src/interruptions.c ****                 }
 5234              		.loc 1 1576 0
 5235 0798 00BF     		nop
 5236              	.L305:
1662:..\src/interruptions.c ****         }
1663:..\src/interruptions.c ****     }
1664:..\src/interruptions.c ****  
1665:..\src/interruptions.c **** }
 5237              		.loc 1 1665 0
 5238 079a 3037     		adds	r7, r7, #48
 5239              		.cfi_def_cfa_offset 16
 5240 079c BD46     		mov	sp, r7
 5241              		.cfi_def_cfa_register 13
 5242              		@ sp needed
 5243 079e B0BD     		pop	{r4, r5, r7, pc}
 5244              	.L346:
 5245              		.align	2
 5246              	.L345:
 5247 07a0 00000000 		.word	c_mem
 5248 07a4 FC000000 		.word	comp_value_encoder.10471
 5249 07a8 00000000 		.word	g_meas
 5250 07ac 00000000 		.word	g_refNew
 5251 07b0 6C010000 		.word	safe_startup_motor_activation.10474
 5252 07b4 64010000 		.word	pos_reconstruct.10477
 5253 07b8 70010000 		.word	count_startup_motor.10476
 5254              		.cfi_endproc
 5255              	.LFE70:
 5256              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 5257              		.section	.text.analog_read_end,"ax",%progbits
 5258              		.align	2
 5259              		.global	analog_read_end
 5260              		.thumb
 5261              		.thumb_func
 5262              		.type	analog_read_end, %function
 5263              	analog_read_end:
 5264              	.LFB71:
1666:..\src/interruptions.c **** 
1667:..\src/interruptions.c **** //==============================================================================
1668:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 125


1669:..\src/interruptions.c **** //==============================================================================
1670:..\src/interruptions.c **** 
1671:..\src/interruptions.c **** void analog_read_end() {
 5265              		.loc 1 1671 0
 5266              		.cfi_startproc
 5267              		@ args = 0, pretend = 0, frame = 8
 5268              		@ frame_needed = 1, uses_anonymous_args = 0
 5269 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 5270              		.cfi_def_cfa_offset 20
 5271              		.cfi_offset 4, -20
 5272              		.cfi_offset 5, -16
 5273              		.cfi_offset 6, -12
 5274              		.cfi_offset 7, -8
 5275              		.cfi_offset 14, -4
 5276 0002 83B0     		sub	sp, sp, #12
 5277              		.cfi_def_cfa_offset 32
 5278 0004 00AF     		add	r7, sp, #0
 5279              		.cfi_def_cfa_register 7
1672:..\src/interruptions.c **** 
1673:..\src/interruptions.c ****     /* =========================================================================
1674:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1675:..\src/interruptions.c ****     /
1676:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1677:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1678:..\src/interruptions.c ****     /
1679:..\src/interruptions.c ****     /   Definition:
1680:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1681:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1682:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1683:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1684:..\src/interruptions.c ****     /
1685:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1686:..\src/interruptions.c ****     /   and offset unit of measurement is counts, instead dev_tension and
1687:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1688:..\src/interruptions.c ****     /  =========================================================================
1689:..\src/interruptions.c ****     */
1690:..\src/interruptions.c **** 
1691:..\src/interruptions.c ****     int32 CYDATA i_aux;
1692:..\src/interruptions.c **** 
1693:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1694:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1695:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1696:..\src/interruptions.c ****     //static int32 pow_tension = 12000;       //12000 mV (12 V)
1697:..\src/interruptions.c ****     static uint16 count = 0;
1698:..\src/interruptions.c ****     static uint32 v_count = 0;
1699:..\src/interruptions.c ****     static uint8 idx = 0;
1700:..\src/interruptions.c ****     
1701:..\src/interruptions.c ****     // Wait for conversion end
1702:..\src/interruptions.c ****     
1703:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 5280              		.loc 1 1703 0
 5281 0006 08E0     		b	.L348
 5282              	.L349:
1704:..\src/interruptions.c ****         
1705:..\src/interruptions.c ****         if (interrupt_flag){
 5283              		.loc 1 1705 0
 5284 0008 A84B     		ldr	r3, .L453
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 126


 5285 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5286 000c 002B     		cmp	r3, #0
 5287 000e 04D0     		beq	.L348
1706:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5288              		.loc 1 1706 0
 5289 0010 A64B     		ldr	r3, .L453
 5290 0012 0022     		movs	r2, #0
 5291 0014 1A70     		strb	r2, [r3]
1707:..\src/interruptions.c ****             interrupt_manager();
 5292              		.loc 1 1707 0
 5293 0016 FFF7FEFF 		bl	interrupt_manager
 5294              	.L348:
1703:..\src/interruptions.c ****         
 5295              		.loc 1 1703 0
 5296 001a FFF7FEFF 		bl	ADC_STATUS_Read
 5297 001e 0346     		mov	r3, r0
 5298 0020 002B     		cmp	r3, #0
 5299 0022 F1D0     		beq	.L349
1708:..\src/interruptions.c ****         }
1709:..\src/interruptions.c ****     }
1710:..\src/interruptions.c ****     
1711:..\src/interruptions.c ****     // Convert tension read
1712:..\src/interruptions.c ****     dev_tension[0] = ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 5300              		.loc 1 1712 0
 5301 0024 A24B     		ldr	r3, .L453+4
 5302 0026 B3F90030 		ldrsh	r3, [r3]
 5303 002a A3F25563 		subw	r3, r3, #1621
 5304 002e 40F2C672 		movw	r2, #1990
 5305 0032 02FB03F3 		mul	r3, r2, r3
 5306 0036 DB11     		asrs	r3, r3, #7
 5307 0038 9E4A     		ldr	r2, .L453+8
 5308 003a 1360     		str	r3, [r2]
1713:..\src/interruptions.c ****     
1714:..\src/interruptions.c ****     // Read also 2nd power tension (if necessary)
1715:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 4) {
 5309              		.loc 1 1715 0
 5310 003c 9E4B     		ldr	r3, .L453+12
 5311 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5312 0040 042B     		cmp	r3, #4
 5313 0042 0BD9     		bls	.L350
1716:..\src/interruptions.c ****         dev_tension[1] = ((int32)(ADC_buf[4] - 1621) * 1990) >> 7;
 5314              		.loc 1 1716 0
 5315 0044 9A4B     		ldr	r3, .L453+4
 5316 0046 B3F90830 		ldrsh	r3, [r3, #8]
 5317 004a A3F25563 		subw	r3, r3, #1621
 5318 004e 40F2C672 		movw	r2, #1990
 5319 0052 02FB03F3 		mul	r3, r2, r3
 5320 0056 DB11     		asrs	r3, r3, #7
 5321 0058 964A     		ldr	r2, .L453+8
 5322 005a 5360     		str	r3, [r2, #4]
 5323              	.L350:
1717:..\src/interruptions.c ****     }
1718:..\src/interruptions.c ****     
1719:..\src/interruptions.c ****     if (interrupt_flag){
 5324              		.loc 1 1719 0
 5325 005c 934B     		ldr	r3, .L453
 5326 005e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 127


 5327 0060 002B     		cmp	r3, #0
 5328 0062 04D0     		beq	.L351
1720:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 5329              		.loc 1 1720 0
 5330 0064 914B     		ldr	r3, .L453
 5331 0066 0022     		movs	r2, #0
 5332 0068 1A70     		strb	r2, [r3]
1721:..\src/interruptions.c ****         interrupt_manager();
 5333              		.loc 1 1721 0
 5334 006a FFF7FEFF 		bl	interrupt_manager
 5335              	.L351:
1722:..\src/interruptions.c ****     }
1723:..\src/interruptions.c ****     
1724:..\src/interruptions.c ****     // VOLTAGE READING
1725:..\src/interruptions.c ****     // Once firmware starts, first_tension_valid flag is set to TRUE while tension_valid status is 
1726:..\src/interruptions.c ****     // Step 1) Wait for battery voltage stabilization and filter convergence for 1000 cycles (v_cou
1727:..\src/interruptions.c ****     // Step 2) Wait for another 1000 cycles (count counter) to decide which is full charge power te
1728:..\src/interruptions.c ****     // Low voltage condition) Whenever dev_tension ADC value is under 7000 mV, tension_valid flag i
1729:..\src/interruptions.c ****     
1730:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {     // Voltage reading (Step 2)
 5336              		.loc 1 1730 0
 5337 006e 934B     		ldr	r3, .L453+16
 5338 0070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5339 0072 002B     		cmp	r3, #0
 5340 0074 4DD0     		beq	.L352
 5341              		.loc 1 1730 0 is_stmt 0 discriminator 1
 5342 0076 924B     		ldr	r3, .L453+20
 5343 0078 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5344 007a 002B     		cmp	r3, #0
 5345 007c 49D0     		beq	.L352
1731:..\src/interruptions.c ****         count = count + 1;
 5346              		.loc 1 1731 0 is_stmt 1
 5347 007e 914B     		ldr	r3, .L453+24
 5348 0080 1B88     		ldrh	r3, [r3]
 5349 0082 0133     		adds	r3, r3, #1
 5350 0084 9AB2     		uxth	r2, r3
 5351 0086 8F4B     		ldr	r3, .L453+24
 5352 0088 1A80     		strh	r2, [r3]	@ movhi
1732:..\src/interruptions.c ****         
1733:..\src/interruptions.c ****         if (count == 1000){
 5353              		.loc 1 1733 0
 5354 008a 8E4B     		ldr	r3, .L453+24
 5355 008c 1B88     		ldrh	r3, [r3]
 5356 008e B3F57A7F 		cmp	r3, #1000
 5357 0092 3ED1     		bne	.L352
1734:..\src/interruptions.c ****             for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 5358              		.loc 1 1734 0
 5359 0094 8C4B     		ldr	r3, .L453+28
 5360 0096 0022     		movs	r2, #0
 5361 0098 1A70     		strb	r2, [r3]
 5362 009a 33E0     		b	.L353
 5363              	.L357:
1735:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5364              		.loc 1 1735 0
 5365 009c 8A4B     		ldr	r3, .L453+28
 5366 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5367 00a0 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 128


 5368 00a2 844B     		ldr	r3, .L453+8
 5369 00a4 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5370 00a8 42F22732 		movw	r2, #8999
 5371 00ac 9342     		cmp	r3, r2
 5372 00ae 08DC     		bgt	.L354
1736:..\src/interruptions.c ****                     pow_tension[idx] = 8000;
 5373              		.loc 1 1736 0
 5374 00b0 854B     		ldr	r3, .L453+28
 5375 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5376 00b4 1946     		mov	r1, r3
 5377 00b6 854B     		ldr	r3, .L453+32
 5378 00b8 4FF4FA52 		mov	r2, #8000
 5379 00bc 43F82120 		str	r2, [r3, r1, lsl #2]
 5380 00c0 1AE0     		b	.L355
 5381              	.L354:
1737:..\src/interruptions.c ****                 }
1738:..\src/interruptions.c ****                 else {      // 12 V - 24 V cases
1739:..\src/interruptions.c ****                     if (dev_tension[idx] < 13000) {
 5382              		.loc 1 1739 0
 5383 00c2 814B     		ldr	r3, .L453+28
 5384 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5385 00c6 1A46     		mov	r2, r3
 5386 00c8 7A4B     		ldr	r3, .L453+8
 5387 00ca 53F82230 		ldr	r3, [r3, r2, lsl #2]
 5388 00ce 43F2C722 		movw	r2, #12999
 5389 00d2 9342     		cmp	r3, r2
 5390 00d4 08DC     		bgt	.L356
1740:..\src/interruptions.c ****                         pow_tension[idx] = 12000;
 5391              		.loc 1 1740 0
 5392 00d6 7C4B     		ldr	r3, .L453+28
 5393 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5394 00da 1946     		mov	r1, r3
 5395 00dc 7B4B     		ldr	r3, .L453+32
 5396 00de 42F6E062 		movw	r2, #12000
 5397 00e2 43F82120 		str	r2, [r3, r1, lsl #2]
 5398 00e6 07E0     		b	.L355
 5399              	.L356:
1741:..\src/interruptions.c ****                     }
1742:..\src/interruptions.c ****                     else
1743:..\src/interruptions.c ****                         pow_tension[idx] = 24000;
 5400              		.loc 1 1743 0
 5401 00e8 774B     		ldr	r3, .L453+28
 5402 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5403 00ec 1946     		mov	r1, r3
 5404 00ee 774B     		ldr	r3, .L453+32
 5405 00f0 45F6C052 		movw	r2, #24000
 5406 00f4 43F82120 		str	r2, [r3, r1, lsl #2]
 5407              	.L355:
1734:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5408              		.loc 1 1734 0 discriminator 2
 5409 00f8 734B     		ldr	r3, .L453+28
 5410 00fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5411 00fc 0133     		adds	r3, r3, #1
 5412 00fe DAB2     		uxtb	r2, r3
 5413 0100 714B     		ldr	r3, .L453+28
 5414 0102 1A70     		strb	r2, [r3]
 5415              	.L353:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 129


1734:..\src/interruptions.c ****                 if (dev_tension[idx] < 9000) {   // 8 V case
 5416              		.loc 1 1734 0 is_stmt 0 discriminator 1
 5417 0104 704B     		ldr	r3, .L453+28
 5418 0106 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5419 0108 012B     		cmp	r3, #1
 5420 010a C7D9     		bls	.L357
1744:..\src/interruptions.c ****                 }
1745:..\src/interruptions.c ****             }
1746:..\src/interruptions.c ****             first_tension_valid = FALSE;
 5421              		.loc 1 1746 0 is_stmt 1
 5422 010c 6B4B     		ldr	r3, .L453+16
 5423 010e 0022     		movs	r2, #0
 5424 0110 1A70     		strb	r2, [r3]
 5425              	.L352:
1747:..\src/interruptions.c ****         }
1748:..\src/interruptions.c ****     }
1749:..\src/interruptions.c **** 
1750:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
1751:..\src/interruptions.c **** 
1752:..\src/interruptions.c ****     if (dev_tension[0] < 7000 && (NUM_OF_ANALOG_INPUTS<=4 || dev_tension[1] < 7000)) {       // Vol
 5426              		.loc 1 1752 0
 5427 0112 684B     		ldr	r3, .L453+8
 5428 0114 1B68     		ldr	r3, [r3]
 5429 0116 41F65732 		movw	r2, #6999
 5430 011a 9342     		cmp	r3, r2
 5431 011c 00F3E280 		bgt	.L358
 5432              		.loc 1 1752 0 is_stmt 0 discriminator 1
 5433 0120 654B     		ldr	r3, .L453+12
 5434 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5435 0124 042B     		cmp	r3, #4
 5436 0126 06D9     		bls	.L359
 5437              		.loc 1 1752 0 discriminator 2
 5438 0128 624B     		ldr	r3, .L453+8
 5439 012a 5B68     		ldr	r3, [r3, #4]
 5440 012c 41F65732 		movw	r2, #6999
 5441 0130 9342     		cmp	r3, r2
 5442 0132 00F3D780 		bgt	.L358
 5443              	.L359:
1753:..\src/interruptions.c ****         // PSoC is powered through uUSB
1754:..\src/interruptions.c ****         
1755:..\src/interruptions.c ****         tension_valid = FALSE;
 5444              		.loc 1 1755 0 is_stmt 1
 5445 0136 624B     		ldr	r3, .L453+20
 5446 0138 0022     		movs	r2, #0
 5447 013a 1A70     		strb	r2, [r3]
1756:..\src/interruptions.c ****             
1757:..\src/interruptions.c ****         if (interrupt_flag){
 5448              		.loc 1 1757 0
 5449 013c 5B4B     		ldr	r3, .L453
 5450 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5451 0140 002B     		cmp	r3, #0
 5452 0142 04D0     		beq	.L360
1758:..\src/interruptions.c ****             interrupt_flag = FALSE;
 5453              		.loc 1 1758 0
 5454 0144 594B     		ldr	r3, .L453
 5455 0146 0022     		movs	r2, #0
 5456 0148 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 130


1759:..\src/interruptions.c ****             interrupt_manager();
 5457              		.loc 1 1759 0
 5458 014a FFF7FEFF 		bl	interrupt_manager
 5459              	.L360:
1760:..\src/interruptions.c ****         }
1761:..\src/interruptions.c ****         
1762:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 5460              		.loc 1 1762 0
 5461 014e 5E4B     		ldr	r3, .L453+28
 5462 0150 0022     		movs	r2, #0
 5463 0152 1A70     		strb	r2, [r3]
 5464 0154 74E0     		b	.L361
 5465              	.L364:
1763:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5466              		.loc 1 1763 0
 5467 0156 5E4B     		ldr	r3, .L453+36
 5468 0158 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 5469 015c 002B     		cmp	r3, #0
 5470 015e 4BD0     		beq	.L362
1764:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5471              		.loc 1 1764 0
 5472 0160 594B     		ldr	r3, .L453+28
 5473 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5474 0164 1946     		mov	r1, r3
 5475 0166 5A4A     		ldr	r2, .L453+36
 5476 0168 0B46     		mov	r3, r1
 5477 016a DB00     		lsls	r3, r3, #3
 5478 016c 5B1A     		subs	r3, r3, r1
 5479 016e 1B01     		lsls	r3, r3, #4
 5480 0170 1344     		add	r3, r3, r2
 5481 0172 03F58773 		add	r3, r3, #270
 5482 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5483 0178 022B     		cmp	r3, #2
 5484 017a 29D0     		beq	.L363
1765:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5485              		.loc 1 1765 0 discriminator 1
 5486 017c 524B     		ldr	r3, .L453+28
 5487 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5488 0180 1946     		mov	r1, r3
 5489 0182 534A     		ldr	r2, .L453+36
 5490 0184 0B46     		mov	r3, r1
 5491 0186 DB00     		lsls	r3, r3, #3
 5492 0188 5B1A     		subs	r3, r3, r1
 5493 018a 1B01     		lsls	r3, r3, #4
 5494 018c 1344     		add	r3, r3, r2
 5495 018e 03F58773 		add	r3, r3, #270
 5496 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1764:..\src/interruptions.c ****                 if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 5497              		.loc 1 1764 0 discriminator 1
 5498 0194 032B     		cmp	r3, #3
 5499 0196 1BD0     		beq	.L363
1766:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5500              		.loc 1 1766 0
 5501 0198 4B4B     		ldr	r3, .L453+28
 5502 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5503 019c 1946     		mov	r1, r3
 5504 019e 4C4A     		ldr	r2, .L453+36
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 131


 5505 01a0 0B46     		mov	r3, r1
 5506 01a2 DB00     		lsls	r3, r3, #3
 5507 01a4 5B1A     		subs	r3, r3, r1
 5508 01a6 1B01     		lsls	r3, r3, #4
 5509 01a8 1344     		add	r3, r3, r2
 5510 01aa 03F58773 		add	r3, r3, #270
 5511 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1765:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 5512              		.loc 1 1765 0
 5513 01b0 042B     		cmp	r3, #4
 5514 01b2 0DD0     		beq	.L363
1767:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 5515              		.loc 1 1767 0
 5516 01b4 444B     		ldr	r3, .L453+28
 5517 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5518 01b8 1946     		mov	r1, r3
 5519 01ba 454A     		ldr	r2, .L453+36
 5520 01bc 0B46     		mov	r3, r1
 5521 01be DB00     		lsls	r3, r3, #3
 5522 01c0 5B1A     		subs	r3, r3, r1
 5523 01c2 1B01     		lsls	r3, r3, #4
 5524 01c4 1344     		add	r3, r3, r2
 5525 01c6 03F58773 		add	r3, r3, #270
 5526 01ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
1766:..\src/interruptions.c ****                     (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 5527              		.loc 1 1766 0
 5528 01cc 052B     		cmp	r3, #5
 5529 01ce 13D1     		bne	.L362
 5530              	.L363:
1768:..\src/interruptions.c ****                     g_ref[idx].onoff = 0x00;
 5531              		.loc 1 1768 0
 5532 01d0 3D4B     		ldr	r3, .L453+28
 5533 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5534 01d4 3F4A     		ldr	r2, .L453+40
 5535 01d6 1B01     		lsls	r3, r3, #4
 5536 01d8 1344     		add	r3, r3, r2
 5537 01da 0C33     		adds	r3, r3, #12
 5538 01dc 0022     		movs	r2, #0
 5539 01de 1A70     		strb	r2, [r3]
1769:..\src/interruptions.c ****                     enable_motor(idx, g_ref[idx].onoff); 
 5540              		.loc 1 1769 0
 5541 01e0 394B     		ldr	r3, .L453+28
 5542 01e2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5543 01e4 384B     		ldr	r3, .L453+28
 5544 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5545 01e8 3A4A     		ldr	r2, .L453+40
 5546 01ea 1B01     		lsls	r3, r3, #4
 5547 01ec 1344     		add	r3, r3, r2
 5548 01ee 0C33     		adds	r3, r3, #12
 5549 01f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5550 01f2 1946     		mov	r1, r3
 5551 01f4 FFF7FEFF 		bl	enable_motor
 5552              	.L362:
1770:..\src/interruptions.c ****                     
1771:..\src/interruptions.c ****                 }
1772:..\src/interruptions.c ****             }
1773:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 132


1774:..\src/interruptions.c ****             // Assign dev_tension and reset current
1775:..\src/interruptions.c ****             dev_tension[idx] = 5000;
 5553              		.loc 1 1775 0 discriminator 2
 5554 01f8 334B     		ldr	r3, .L453+28
 5555 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5556 01fc 1946     		mov	r1, r3
 5557 01fe 2D4B     		ldr	r3, .L453+8
 5558 0200 41F28832 		movw	r2, #5000
 5559 0204 43F82120 		str	r2, [r3, r1, lsl #2]
1776:..\src/interruptions.c ****             g_meas[g_mem.motor[idx].encoder_line].curr = 0;
 5560              		.loc 1 1776 0 discriminator 2
 5561 0208 2F4B     		ldr	r3, .L453+28
 5562 020a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5563 020c 1946     		mov	r1, r3
 5564 020e 324A     		ldr	r2, .L453+44
 5565 0210 0B46     		mov	r3, r1
 5566 0212 DB00     		lsls	r3, r3, #3
 5567 0214 5B1A     		subs	r3, r3, r1
 5568 0216 1B01     		lsls	r3, r3, #4
 5569 0218 1344     		add	r3, r3, r2
 5570 021a 03F58873 		add	r3, r3, #272
 5571 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5572 0220 1946     		mov	r1, r3
 5573 0222 2E4A     		ldr	r2, .L453+48
 5574 0224 0B46     		mov	r3, r1
 5575 0226 5B00     		lsls	r3, r3, #1
 5576 0228 0B44     		add	r3, r3, r1
 5577 022a 1B01     		lsls	r3, r3, #4
 5578 022c 1344     		add	r3, r3, r2
 5579 022e 0C33     		adds	r3, r3, #12
 5580 0230 0022     		movs	r2, #0
 5581 0232 1A60     		str	r2, [r3]
1762:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5582              		.loc 1 1762 0 discriminator 2
 5583 0234 244B     		ldr	r3, .L453+28
 5584 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5585 0238 0133     		adds	r3, r3, #1
 5586 023a DAB2     		uxtb	r2, r3
 5587 023c 224B     		ldr	r3, .L453+28
 5588 023e 1A70     		strb	r2, [r3]
 5589              	.L361:
1762:..\src/interruptions.c ****             if (c_mem.emg.emg_calibration_flag) {
 5590              		.loc 1 1762 0 is_stmt 0 discriminator 1
 5591 0240 214B     		ldr	r3, .L453+28
 5592 0242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5593 0244 012B     		cmp	r3, #1
 5594 0246 86D9     		bls	.L364
1777:..\src/interruptions.c ****         }
1778:..\src/interruptions.c ****         
1779:..\src/interruptions.c ****         // Reset emg
1780:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_INPUT_EMGS; idx++){
 5595              		.loc 1 1780 0 is_stmt 1
 5596 0248 1F4B     		ldr	r3, .L453+28
 5597 024a 0022     		movs	r2, #0
 5598 024c 1A70     		strb	r2, [r3]
 5599 024e 0CE0     		b	.L365
 5600              	.L366:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 133


1781:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5601              		.loc 1 1781 0 discriminator 3
 5602 0250 1D4B     		ldr	r3, .L453+28
 5603 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5604 0254 1946     		mov	r1, r3
 5605 0256 224B     		ldr	r3, .L453+52
 5606 0258 0022     		movs	r2, #0
 5607 025a 43F82120 		str	r2, [r3, r1, lsl #2]
1780:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5608              		.loc 1 1780 0 discriminator 3
 5609 025e 1A4B     		ldr	r3, .L453+28
 5610 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5611 0262 0133     		adds	r3, r3, #1
 5612 0264 DAB2     		uxtb	r2, r3
 5613 0266 184B     		ldr	r3, .L453+28
 5614 0268 1A70     		strb	r2, [r3]
 5615              	.L365:
1780:..\src/interruptions.c ****             g_emg_meas.emg[idx] = 0;
 5616              		.loc 1 1780 0 is_stmt 0 discriminator 1
 5617 026a 174B     		ldr	r3, .L453+28
 5618 026c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5619 026e 012B     		cmp	r3, #1
 5620 0270 EED9     		bls	.L366
1782:..\src/interruptions.c ****         }
1783:..\src/interruptions.c ****         for (idx = 0; c_mem.exp.read_ADC_sensors_port_flag && idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 5621              		.loc 1 1783 0 is_stmt 1
 5622 0272 154B     		ldr	r3, .L453+28
 5623 0274 0022     		movs	r2, #0
 5624 0276 1A70     		strb	r2, [r3]
 5625 0278 0CE0     		b	.L367
 5626              	.L369:
1784:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5627              		.loc 1 1784 0 discriminator 4
 5628 027a 134B     		ldr	r3, .L453+28
 5629 027c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5630 027e 184A     		ldr	r2, .L453+52
 5631 0280 0233     		adds	r3, r3, #2
 5632 0282 0021     		movs	r1, #0
 5633 0284 42F82310 		str	r1, [r2, r3, lsl #2]
1783:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5634              		.loc 1 1783 0 discriminator 4
 5635 0288 0F4B     		ldr	r3, .L453+28
 5636 028a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5637 028c 0133     		adds	r3, r3, #1
 5638 028e DAB2     		uxtb	r2, r3
 5639 0290 0D4B     		ldr	r3, .L453+28
 5640 0292 1A70     		strb	r2, [r3]
 5641              	.L367:
1783:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5642              		.loc 1 1783 0 is_stmt 0 discriminator 1
 5643 0294 0E4B     		ldr	r3, .L453+36
 5644 0296 93F82F32 		ldrb	r3, [r3, #559]	@ zero_extendqisi2
 5645 029a 002B     		cmp	r3, #0
 5646 029c 00F01382 		beq	.L442
1783:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = 0;
 5647              		.loc 1 1783 0 discriminator 3
 5648 02a0 094B     		ldr	r3, .L453+28
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 134


 5649 02a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5650 02a4 052B     		cmp	r3, #5
 5651 02a6 E8D9     		bls	.L369
1752:..\src/interruptions.c ****         // PSoC is powered through uUSB
 5652              		.loc 1 1752 0 is_stmt 1
 5653 02a8 0DE2     		b	.L442
 5654              	.L454:
 5655 02aa 00BF     		.align	2
 5656              	.L453:
 5657 02ac 00000000 		.word	interrupt_flag
 5658 02b0 00000000 		.word	ADC_buf
 5659 02b4 00000000 		.word	dev_tension
 5660 02b8 00000000 		.word	NUM_OF_ANALOG_INPUTS
 5661 02bc 06000000 		.word	first_tension_valid.10498
 5662 02c0 00000000 		.word	tension_valid
 5663 02c4 78010000 		.word	count.10499
 5664 02c8 7A010000 		.word	idx.10501
 5665 02cc 00000000 		.word	pow_tension
 5666 02d0 00000000 		.word	c_mem
 5667 02d4 00000000 		.word	g_ref
 5668 02d8 00000000 		.word	g_mem
 5669 02dc 00000000 		.word	g_meas
 5670 02e0 00000000 		.word	g_emg_meas
 5671              	.L358:
1785:..\src/interruptions.c ****         }
1786:..\src/interruptions.c ****         
1787:..\src/interruptions.c ****     }
1788:..\src/interruptions.c ****     else {
1789:..\src/interruptions.c ****         // PSoC is powered through battery or power source
1790:..\src/interruptions.c ****         // (at least > 7.36 V (92% of 8 V) that is minimum charge of smallest battery)
1791:..\src/interruptions.c ****         
1792:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
1793:..\src/interruptions.c ****         
1794:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){     // Voltage reading (Step 1)
 5672              		.loc 1 1794 0
 5673 02e4 9E4B     		ldr	r3, .L455
 5674 02e6 1B68     		ldr	r3, [r3]
 5675 02e8 B3F57A7F 		cmp	r3, #1000
 5676 02ec 0DD1     		bne	.L371
 5677              		.loc 1 1794 0 is_stmt 0 discriminator 1
 5678 02ee 9D4B     		ldr	r3, .L455+4
 5679 02f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5680 02f2 002B     		cmp	r3, #0
 5681 02f4 09D1     		bne	.L371
1795:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
1796:..\src/interruptions.c ****             tension_valid = TRUE;   
 5682              		.loc 1 1796 0 is_stmt 1
 5683 02f6 9B4B     		ldr	r3, .L455+4
 5684 02f8 0122     		movs	r2, #1
 5685 02fa 1A70     		strb	r2, [r3]
1797:..\src/interruptions.c ****             count = 0;
 5686              		.loc 1 1797 0
 5687 02fc 9A4B     		ldr	r3, .L455+8
 5688 02fe 0022     		movs	r2, #0
 5689 0300 1A80     		strh	r2, [r3]	@ movhi
1798:..\src/interruptions.c ****             v_count = 0;
 5690              		.loc 1 1798 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 135


 5691 0302 974B     		ldr	r3, .L455
 5692 0304 0022     		movs	r2, #0
 5693 0306 1A60     		str	r2, [r3]
 5694 0308 2CE0     		b	.L372
 5695              	.L371:
1799:..\src/interruptions.c ****         }
1800:..\src/interruptions.c ****         else {  
1801:..\src/interruptions.c ****             // wait for battery voltage stabilization
1802:..\src/interruptions.c ****             if (v_count < 1000) {
 5696              		.loc 1 1802 0
 5697 030a 954B     		ldr	r3, .L455
 5698 030c 1B68     		ldr	r3, [r3]
 5699 030e B3F57A7F 		cmp	r3, #1000
 5700 0312 04D2     		bcs	.L373
1803:..\src/interruptions.c ****                 v_count = v_count + 1;
 5701              		.loc 1 1803 0
 5702 0314 924B     		ldr	r3, .L455
 5703 0316 1B68     		ldr	r3, [r3]
 5704 0318 0133     		adds	r3, r3, #1
 5705 031a 914A     		ldr	r2, .L455
 5706 031c 1360     		str	r3, [r2]
 5707              	.L373:
1804:..\src/interruptions.c ****             }
1805:..\src/interruptions.c ****             for(idx = 0; idx < NUM_OF_MOTORS; idx++) {
 5708              		.loc 1 1805 0
 5709 031e 934B     		ldr	r3, .L455+12
 5710 0320 0022     		movs	r2, #0
 5711 0322 1A70     		strb	r2, [r3]
 5712 0324 1AE0     		b	.L374
 5713              	.L375:
1806:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5714              		.loc 1 1806 0 discriminator 3
 5715 0326 914B     		ldr	r3, .L455+12
 5716 0328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5717 032a 1C46     		mov	r4, r3
 5718 032c 8F4B     		ldr	r3, .L455+12
 5719 032e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5720 0330 1A46     		mov	r2, r3
 5721 0332 8F4B     		ldr	r3, .L455+16
 5722 0334 53F82200 		ldr	r0, [r3, r2, lsl #2]
 5723 0338 8C4B     		ldr	r3, .L455+12
 5724 033a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5725 033c DB00     		lsls	r3, r3, #3
 5726 033e 8D4A     		ldr	r2, .L455+20
 5727 0340 1344     		add	r3, r3, r2
 5728 0342 1946     		mov	r1, r3
 5729 0344 FFF7FEFF 		bl	filter
 5730 0348 0246     		mov	r2, r0
 5731 034a 8B4B     		ldr	r3, .L455+24
 5732 034c 43F82420 		str	r2, [r3, r4, lsl #2]
1805:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5733              		.loc 1 1805 0 discriminator 3
 5734 0350 864B     		ldr	r3, .L455+12
 5735 0352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5736 0354 0133     		adds	r3, r3, #1
 5737 0356 DAB2     		uxtb	r2, r3
 5738 0358 844B     		ldr	r3, .L455+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 136


 5739 035a 1A70     		strb	r2, [r3]
 5740              	.L374:
1805:..\src/interruptions.c ****                 dev_tension_f[idx] = filter(dev_tension[idx], &filt_v[idx]);
 5741              		.loc 1 1805 0 is_stmt 0 discriminator 1
 5742 035c 834B     		ldr	r3, .L455+12
 5743 035e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5744 0360 012B     		cmp	r3, #1
 5745 0362 E0D9     		bls	.L375
 5746              	.L372:
1807:..\src/interruptions.c ****             }
1808:..\src/interruptions.c ****         }
1809:..\src/interruptions.c **** 
1810:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_MOTORS; idx++){
 5747              		.loc 1 1810 0 is_stmt 1
 5748 0364 814B     		ldr	r3, .L455+12
 5749 0366 0022     		movs	r2, #0
 5750 0368 1A70     		strb	r2, [r3]
 5751 036a 17E0     		b	.L376
 5752              	.L378:
1811:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 5753              		.loc 1 1811 0
 5754 036c 7F4B     		ldr	r3, .L455+12
 5755 036e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 0370 1946     		mov	r1, r3
 5757 0372 824A     		ldr	r2, .L455+28
 5758 0374 0B46     		mov	r3, r1
 5759 0376 DB00     		lsls	r3, r3, #3
 5760 0378 5B1A     		subs	r3, r3, r1
 5761 037a 1B01     		lsls	r3, r3, #4
 5762 037c 1344     		add	r3, r3, r2
 5763 037e E133     		adds	r3, r3, #225
 5764 0380 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5765 0382 002B     		cmp	r3, #0
 5766 0384 04D0     		beq	.L377
1812:..\src/interruptions.c ****                 pwm_limit_search(idx);                 //only for 12V motor
 5767              		.loc 1 1812 0
 5768 0386 794B     		ldr	r3, .L455+12
 5769 0388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5770 038a 1846     		mov	r0, r3
 5771 038c FFF7FEFF 		bl	pwm_limit_search
 5772              	.L377:
1810:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 5773              		.loc 1 1810 0 discriminator 2
 5774 0390 764B     		ldr	r3, .L455+12
 5775 0392 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5776 0394 0133     		adds	r3, r3, #1
 5777 0396 DAB2     		uxtb	r2, r3
 5778 0398 744B     		ldr	r3, .L455+12
 5779 039a 1A70     		strb	r2, [r3]
 5780              	.L376:
1810:..\src/interruptions.c ****             if(g_mem.motor[idx].activate_pwm_rescaling)        //pwm rescaling is activated
 5781              		.loc 1 1810 0 is_stmt 0 discriminator 1
 5782 039c 734B     		ldr	r3, .L455+12
 5783 039e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5784 03a0 012B     		cmp	r3, #1
 5785 03a2 E3D9     		bls	.L378
1813:..\src/interruptions.c ****         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 137


1814:..\src/interruptions.c ****         
1815:..\src/interruptions.c ****         // Filter and Set currents
1816:..\src/interruptions.c ****         if (g_mem.motor[0].motor_driver_type == DRIVER_MC33887) { // [GS]
 5786              		.loc 1 1816 0 is_stmt 1
 5787 03a4 754B     		ldr	r3, .L455+28
 5788 03a6 93F8E230 		ldrb	r3, [r3, #226]	@ zero_extendqisi2
 5789 03aa 002B     		cmp	r3, #0
 5790 03ac 22D1     		bne	.L379
1817:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = filter((int16) (((int32)(ADC_buf[1] - 1648) 
 5791              		.loc 1 1817 0
 5792 03ae 734B     		ldr	r3, .L455+28
 5793 03b0 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5794 03b4 1C46     		mov	r4, r3
 5795 03b6 724B     		ldr	r3, .L455+32
 5796 03b8 B3F90230 		ldrsh	r3, [r3, #2]
 5797 03bc A3F5CE63 		sub	r3, r3, #1648
 5798 03c0 45F66A02 		movw	r2, #22634
 5799 03c4 02FB03F3 		mul	r3, r2, r3
 5800 03c8 5B13     		asrs	r3, r3, #13
 5801 03ca 1BB2     		sxth	r3, r3
 5802 03cc 1A46     		mov	r2, r3
 5803 03ce 6D4B     		ldr	r3, .L455+36
 5804 03d0 93F90030 		ldrsb	r3, [r3]
 5805 03d4 03FB02F3 		mul	r3, r3, r2
 5806 03d8 6B49     		ldr	r1, .L455+40
 5807 03da 1846     		mov	r0, r3
 5808 03dc FFF7FEFF 		bl	filter
 5809 03e0 0146     		mov	r1, r0
 5810 03e2 6A4A     		ldr	r2, .L455+44
 5811 03e4 2346     		mov	r3, r4
 5812 03e6 5B00     		lsls	r3, r3, #1
 5813 03e8 2344     		add	r3, r3, r4
 5814 03ea 1B01     		lsls	r3, r3, #4
 5815 03ec 1344     		add	r3, r3, r2
 5816 03ee 0C33     		adds	r3, r3, #12
 5817 03f0 1960     		str	r1, [r3]
 5818 03f2 1CE0     		b	.L380
 5819              	.L379:
1818:..\src/interruptions.c ****         } else { // [GS]
1819:..\src/interruptions.c ****             g_meas[g_mem.motor[0].encoder_line].curr = ((int16) ((int32)((ADC_buf[1] - 1635) * 480)
 5820              		.loc 1 1819 0
 5821 03f4 614B     		ldr	r3, .L455+28
 5822 03f6 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5823 03fa 1846     		mov	r0, r3
 5824 03fc 604B     		ldr	r3, .L455+32
 5825 03fe B3F90230 		ldrsh	r3, [r3, #2]
 5826 0402 A3F26362 		subw	r2, r3, #1635
 5827 0406 1346     		mov	r3, r2
 5828 0408 1B01     		lsls	r3, r3, #4
 5829 040a 9B1A     		subs	r3, r3, r2
 5830 040c 5B01     		lsls	r3, r3, #5
 5831 040e 1B11     		asrs	r3, r3, #4
 5832 0410 1BB2     		sxth	r3, r3
 5833 0412 1A46     		mov	r2, r3
 5834 0414 5B4B     		ldr	r3, .L455+36
 5835 0416 93F90030 		ldrsb	r3, [r3]
 5836 041a 03FB02F2 		mul	r2, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 138


 5837 041e 5B49     		ldr	r1, .L455+44
 5838 0420 0346     		mov	r3, r0
 5839 0422 5B00     		lsls	r3, r3, #1
 5840 0424 0344     		add	r3, r3, r0
 5841 0426 1B01     		lsls	r3, r3, #4
 5842 0428 0B44     		add	r3, r3, r1
 5843 042a 0C33     		adds	r3, r3, #12
 5844 042c 1A60     		str	r2, [r3]
 5845              	.L380:
1820:..\src/interruptions.c ****         }  
1821:..\src/interruptions.c **** 
1822:..\src/interruptions.c ****         // Calculate current estimation and put it in the second part of the current measurement ar
1823:..\src/interruptions.c **** 		g_meas[g_mem.motor[0].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.motor[0].en
 5846              		.loc 1 1823 0
 5847 042e 534B     		ldr	r3, .L455+28
 5848 0430 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5849 0434 1D46     		mov	r5, r3
 5850 0436 514B     		ldr	r3, .L455+28
 5851 0438 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5852 043c 1946     		mov	r1, r3
 5853 043e 534A     		ldr	r2, .L455+44
 5854 0440 0B46     		mov	r3, r1
 5855 0442 5B00     		lsls	r3, r3, #1
 5856 0444 0B44     		add	r3, r3, r1
 5857 0446 1B01     		lsls	r3, r3, #4
 5858 0448 1344     		add	r3, r3, r2
 5859 044a 0C33     		adds	r3, r3, #12
 5860 044c 1C68     		ldr	r4, [r3]
 5861 044e 4B4B     		ldr	r3, .L455+28
 5862 0450 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5863 0454 1946     		mov	r1, r3
 5864 0456 4D4A     		ldr	r2, .L455+44
 5865 0458 0B46     		mov	r3, r1
 5866 045a 5B00     		lsls	r3, r3, #1
 5867 045c 0B44     		add	r3, r3, r1
 5868 045e 1B01     		lsls	r3, r3, #4
 5869 0460 1344     		add	r3, r3, r2
 5870 0462 1A68     		ldr	r2, [r3]
 5871 0464 454B     		ldr	r3, .L455+28
 5872 0466 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5873 046a 1846     		mov	r0, r3
 5874 046c 4349     		ldr	r1, .L455+28
 5875 046e 0346     		mov	r3, r0
 5876 0470 5B00     		lsls	r3, r3, #1
 5877 0472 0344     		add	r3, r3, r0
 5878 0474 1B01     		lsls	r3, r3, #4
 5879 0476 0B44     		add	r3, r3, r1
 5880 0478 03F29513 		addw	r3, r3, #405
 5881 047c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5882 047e 42FA03F6 		asr	r6, r2, r3
 5883 0482 3E4B     		ldr	r3, .L455+28
 5884 0484 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5885 0488 1946     		mov	r1, r3
 5886 048a 404A     		ldr	r2, .L455+44
 5887 048c 0B46     		mov	r3, r1
 5888 048e 5B00     		lsls	r3, r3, #1
 5889 0490 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 139


 5890 0492 1B01     		lsls	r3, r3, #4
 5891 0494 1344     		add	r3, r3, r2
 5892 0496 1833     		adds	r3, r3, #24
 5893 0498 1A68     		ldr	r2, [r3]
 5894 049a 384B     		ldr	r3, .L455+28
 5895 049c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5896 04a0 1846     		mov	r0, r3
 5897 04a2 3649     		ldr	r1, .L455+28
 5898 04a4 0346     		mov	r3, r0
 5899 04a6 5B00     		lsls	r3, r3, #1
 5900 04a8 0344     		add	r3, r3, r0
 5901 04aa 1B01     		lsls	r3, r3, #4
 5902 04ac 0B44     		add	r3, r3, r1
 5903 04ae 03F29513 		addw	r3, r3, #405
 5904 04b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5905 04b4 42FA03FE 		asr	lr, r2, r3
 5906 04b8 354B     		ldr	r3, .L455+48
 5907 04ba 1A68     		ldr	r2, [r3]
 5908 04bc 2F4B     		ldr	r3, .L455+28
 5909 04be 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 5910 04c2 1846     		mov	r0, r3
 5911 04c4 2D49     		ldr	r1, .L455+28
 5912 04c6 0346     		mov	r3, r0
 5913 04c8 5B00     		lsls	r3, r3, #1
 5914 04ca 0344     		add	r3, r3, r0
 5915 04cc 1B01     		lsls	r3, r3, #4
 5916 04ce 0B44     		add	r3, r3, r1
 5917 04d0 03F29513 		addw	r3, r3, #405
 5918 04d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5919 04d6 42FA03F3 		asr	r3, r2, r3
 5920 04da 7246     		mov	r2, lr
 5921 04dc 3146     		mov	r1, r6
 5922 04de 0020     		movs	r0, #0
 5923 04e0 FFF7FEFF 		bl	curr_estim
 5924 04e4 0346     		mov	r3, r0
 5925 04e6 E31A     		subs	r3, r4, r3
 5926 04e8 2A49     		ldr	r1, .L455+52
 5927 04ea 1846     		mov	r0, r3
 5928 04ec FFF7FEFF 		bl	filter
 5929 04f0 0346     		mov	r3, r0
 5930 04f2 1BB2     		sxth	r3, r3
 5931 04f4 1946     		mov	r1, r3
 5932 04f6 254A     		ldr	r2, .L455+44
 5933 04f8 2B46     		mov	r3, r5
 5934 04fa 5B00     		lsls	r3, r3, #1
 5935 04fc 2B44     		add	r3, r3, r5
 5936 04fe 1B01     		lsls	r3, r3, #4
 5937 0500 1344     		add	r3, r3, r2
 5938 0502 1033     		adds	r3, r3, #16
 5939 0504 1960     		str	r1, [r3]
1824:..\src/interruptions.c ****         
1825:..\src/interruptions.c ****         // Read also 2nd power current (if necessary)
1826:..\src/interruptions.c ****         if (NUM_OF_ANALOG_INPUTS > 4) {
 5940              		.loc 1 1826 0
 5941 0506 244B     		ldr	r3, .L455+56
 5942 0508 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5943 050a 042B     		cmp	r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 140


 5944 050c 40F2D180 		bls	.L381
1827:..\src/interruptions.c ****             // Filter and Set currents
1828:..\src/interruptions.c ****             if (g_mem.motor[1].motor_driver_type == DRIVER_MC33887) { // [GS]
 5945              		.loc 1 1828 0
 5946 0510 1A4B     		ldr	r3, .L455+28
 5947 0512 93F85231 		ldrb	r3, [r3, #338]	@ zero_extendqisi2
 5948 0516 002B     		cmp	r3, #0
 5949 0518 42D1     		bne	.L382
1829:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 16
 5950              		.loc 1 1829 0
 5951 051a 184B     		ldr	r3, .L455+28
 5952 051c 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 5953 0520 1C46     		mov	r4, r3
 5954 0522 174B     		ldr	r3, .L455+32
 5955 0524 B3F90A30 		ldrsh	r3, [r3, #10]
 5956 0528 A3F5CE63 		sub	r3, r3, #1648
 5957 052c 45F66A02 		movw	r2, #22634
 5958 0530 02FB03F3 		mul	r3, r2, r3
 5959 0534 5B13     		asrs	r3, r3, #13
 5960 0536 1BB2     		sxth	r3, r3
 5961 0538 1A46     		mov	r2, r3
 5962 053a 124B     		ldr	r3, .L455+36
 5963 053c 93F90030 		ldrsb	r3, [r3]
 5964 0540 03FB02F3 		mul	r3, r3, r2
 5965 0544 1549     		ldr	r1, .L455+60
 5966 0546 1846     		mov	r0, r3
 5967 0548 FFF7FEFF 		bl	filter
 5968 054c 0146     		mov	r1, r0
 5969 054e 0F4A     		ldr	r2, .L455+44
 5970 0550 2346     		mov	r3, r4
 5971 0552 5B00     		lsls	r3, r3, #1
 5972 0554 2344     		add	r3, r3, r4
 5973 0556 1B01     		lsls	r3, r3, #4
 5974 0558 1344     		add	r3, r3, r2
 5975 055a 0C33     		adds	r3, r3, #12
 5976 055c 1960     		str	r1, [r3]
 5977 055e 3CE0     		b	.L383
 5978              	.L456:
 5979              		.align	2
 5980              	.L455:
 5981 0560 7C010000 		.word	v_count.10500
 5982 0564 00000000 		.word	tension_valid
 5983 0568 78010000 		.word	count.10499
 5984 056c 7A010000 		.word	idx.10501
 5985 0570 00000000 		.word	dev_tension
 5986 0574 00000000 		.word	filt_v
 5987 0578 00000000 		.word	dev_tension_f
 5988 057c 00000000 		.word	g_mem
 5989 0580 00000000 		.word	ADC_buf
 5990 0584 00000000 		.word	pwm_sign
 5991 0588 00000000 		.word	filt_i
 5992 058c 00000000 		.word	g_meas
 5993 0590 00000000 		.word	g_ref
 5994 0594 00000000 		.word	filt_curr_diff
 5995 0598 00000000 		.word	NUM_OF_ANALOG_INPUTS
 5996 059c 08000000 		.word	filt_i+8
 5997              	.L382:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 141


1830:..\src/interruptions.c ****             } else { // [GS]
1831:..\src/interruptions.c ****                 g_meas[g_mem.motor[1].encoder_line].curr = ((int16) ((int32)((ADC_buf[5] - 1635) * 
 5998              		.loc 1 1831 0
 5999 05a0 BC4B     		ldr	r3, .L457
 6000 05a2 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6001 05a6 1846     		mov	r0, r3
 6002 05a8 BB4B     		ldr	r3, .L457+4
 6003 05aa B3F90A30 		ldrsh	r3, [r3, #10]
 6004 05ae A3F26362 		subw	r2, r3, #1635
 6005 05b2 1346     		mov	r3, r2
 6006 05b4 1B01     		lsls	r3, r3, #4
 6007 05b6 9B1A     		subs	r3, r3, r2
 6008 05b8 5B01     		lsls	r3, r3, #5
 6009 05ba 1B11     		asrs	r3, r3, #4
 6010 05bc 1BB2     		sxth	r3, r3
 6011 05be 1A46     		mov	r2, r3
 6012 05c0 B64B     		ldr	r3, .L457+8
 6013 05c2 93F90030 		ldrsb	r3, [r3]
 6014 05c6 03FB02F2 		mul	r2, r3, r2
 6015 05ca B549     		ldr	r1, .L457+12
 6016 05cc 0346     		mov	r3, r0
 6017 05ce 5B00     		lsls	r3, r3, #1
 6018 05d0 0344     		add	r3, r3, r0
 6019 05d2 1B01     		lsls	r3, r3, #4
 6020 05d4 0B44     		add	r3, r3, r1
 6021 05d6 0C33     		adds	r3, r3, #12
 6022 05d8 1A60     		str	r2, [r3]
 6023              	.L383:
1832:..\src/interruptions.c ****             }  
1833:..\src/interruptions.c ****             //g_meas[g_mem.motor[1].encoder_line].curr = filter((int16) (((int32)(ADC_buf[5] - 1648
1834:..\src/interruptions.c ****             
1835:..\src/interruptions.c ****             g_meas[g_mem.motor[1].encoder_line].estim_curr = (int16) filter(((int32) g_meas[g_mem.m
 6024              		.loc 1 1835 0
 6025 05da AE4B     		ldr	r3, .L457
 6026 05dc 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6027 05e0 1D46     		mov	r5, r3
 6028 05e2 AC4B     		ldr	r3, .L457
 6029 05e4 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6030 05e8 1946     		mov	r1, r3
 6031 05ea AD4A     		ldr	r2, .L457+12
 6032 05ec 0B46     		mov	r3, r1
 6033 05ee 5B00     		lsls	r3, r3, #1
 6034 05f0 0B44     		add	r3, r3, r1
 6035 05f2 1B01     		lsls	r3, r3, #4
 6036 05f4 1344     		add	r3, r3, r2
 6037 05f6 0C33     		adds	r3, r3, #12
 6038 05f8 1C68     		ldr	r4, [r3]
 6039 05fa A64B     		ldr	r3, .L457
 6040 05fc 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6041 0600 1946     		mov	r1, r3
 6042 0602 A74A     		ldr	r2, .L457+12
 6043 0604 0B46     		mov	r3, r1
 6044 0606 5B00     		lsls	r3, r3, #1
 6045 0608 0B44     		add	r3, r3, r1
 6046 060a 1B01     		lsls	r3, r3, #4
 6047 060c 1344     		add	r3, r3, r2
 6048 060e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 142


 6049 0610 A04B     		ldr	r3, .L457
 6050 0612 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6051 0616 1846     		mov	r0, r3
 6052 0618 9E49     		ldr	r1, .L457
 6053 061a 0346     		mov	r3, r0
 6054 061c 5B00     		lsls	r3, r3, #1
 6055 061e 0344     		add	r3, r3, r0
 6056 0620 1B01     		lsls	r3, r3, #4
 6057 0622 0B44     		add	r3, r3, r1
 6058 0624 03F29513 		addw	r3, r3, #405
 6059 0628 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6060 062a 42FA03F6 		asr	r6, r2, r3
 6061 062e 994B     		ldr	r3, .L457
 6062 0630 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6063 0634 1946     		mov	r1, r3
 6064 0636 9A4A     		ldr	r2, .L457+12
 6065 0638 0B46     		mov	r3, r1
 6066 063a 5B00     		lsls	r3, r3, #1
 6067 063c 0B44     		add	r3, r3, r1
 6068 063e 1B01     		lsls	r3, r3, #4
 6069 0640 1344     		add	r3, r3, r2
 6070 0642 1833     		adds	r3, r3, #24
 6071 0644 1A68     		ldr	r2, [r3]
 6072 0646 934B     		ldr	r3, .L457
 6073 0648 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6074 064c 1846     		mov	r0, r3
 6075 064e 9149     		ldr	r1, .L457
 6076 0650 0346     		mov	r3, r0
 6077 0652 5B00     		lsls	r3, r3, #1
 6078 0654 0344     		add	r3, r3, r0
 6079 0656 1B01     		lsls	r3, r3, #4
 6080 0658 0B44     		add	r3, r3, r1
 6081 065a 03F29513 		addw	r3, r3, #405
 6082 065e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6083 0660 42FA03FE 		asr	lr, r2, r3
 6084 0664 8F4B     		ldr	r3, .L457+16
 6085 0666 1A69     		ldr	r2, [r3, #16]
 6086 0668 8A4B     		ldr	r3, .L457
 6087 066a 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 6088 066e 1846     		mov	r0, r3
 6089 0670 8849     		ldr	r1, .L457
 6090 0672 0346     		mov	r3, r0
 6091 0674 5B00     		lsls	r3, r3, #1
 6092 0676 0344     		add	r3, r3, r0
 6093 0678 1B01     		lsls	r3, r3, #4
 6094 067a 0B44     		add	r3, r3, r1
 6095 067c 03F29513 		addw	r3, r3, #405
 6096 0680 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6097 0682 42FA03F3 		asr	r3, r2, r3
 6098 0686 7246     		mov	r2, lr
 6099 0688 3146     		mov	r1, r6
 6100 068a 0120     		movs	r0, #1
 6101 068c FFF7FEFF 		bl	curr_estim
 6102 0690 0346     		mov	r3, r0
 6103 0692 E31A     		subs	r3, r4, r3
 6104 0694 8449     		ldr	r1, .L457+20
 6105 0696 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 143


 6106 0698 FFF7FEFF 		bl	filter
 6107 069c 0346     		mov	r3, r0
 6108 069e 1BB2     		sxth	r3, r3
 6109 06a0 1946     		mov	r1, r3
 6110 06a2 7F4A     		ldr	r2, .L457+12
 6111 06a4 2B46     		mov	r3, r5
 6112 06a6 5B00     		lsls	r3, r3, #1
 6113 06a8 2B44     		add	r3, r3, r5
 6114 06aa 1B01     		lsls	r3, r3, #4
 6115 06ac 1344     		add	r3, r3, r2
 6116 06ae 1033     		adds	r3, r3, #16
 6117 06b0 1960     		str	r1, [r3]
 6118              	.L381:
1836:..\src/interruptions.c ****         }
1837:..\src/interruptions.c ****     
1838:..\src/interruptions.c ****         // Check Interrupt 
1839:..\src/interruptions.c ****     
1840:..\src/interruptions.c ****         if (interrupt_flag){
 6119              		.loc 1 1840 0
 6120 06b2 7E4B     		ldr	r3, .L457+24
 6121 06b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6122 06b6 002B     		cmp	r3, #0
 6123 06b8 06D0     		beq	.L370
1841:..\src/interruptions.c ****             interrupt_flag = FALSE;
 6124              		.loc 1 1841 0
 6125 06ba 7C4B     		ldr	r3, .L457+24
 6126 06bc 0022     		movs	r2, #0
 6127 06be 1A70     		strb	r2, [r3]
1842:..\src/interruptions.c ****             interrupt_manager();
 6128              		.loc 1 1842 0
 6129 06c0 FFF7FEFF 		bl	interrupt_manager
 6130 06c4 00E0     		b	.L370
 6131              	.L442:
1752:..\src/interruptions.c ****         // PSoC is powered through uUSB
 6132              		.loc 1 1752 0
 6133 06c6 00BF     		nop
 6134              	.L370:
1843:..\src/interruptions.c ****         }
1844:..\src/interruptions.c **** 
1845:..\src/interruptions.c ****     }
1846:..\src/interruptions.c ****     
1847:..\src/interruptions.c ****     // Read EMG (always even if the board is not powered)
1848:..\src/interruptions.c ****         
1849:..\src/interruptions.c ****     // if calibration is not needed go to "normal execution"
1850:..\src/interruptions.c ****     if (!c_mem.emg.emg_calibration_flag){
 6135              		.loc 1 1850 0
 6136 06c8 794B     		ldr	r3, .L457+28
 6137 06ca 93F8FD31 		ldrb	r3, [r3, #509]	@ zero_extendqisi2
 6138 06ce 002B     		cmp	r3, #0
 6139 06d0 05D1     		bne	.L384
1851:..\src/interruptions.c ****         emg_1_status = NORMAL; // normal execution
 6140              		.loc 1 1851 0
 6141 06d2 784B     		ldr	r3, .L457+32
 6142 06d4 0022     		movs	r2, #0
 6143 06d6 1A70     		strb	r2, [r3]
1852:..\src/interruptions.c ****         emg_2_status = NORMAL; // normal execution
 6144              		.loc 1 1852 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 144


 6145 06d8 774B     		ldr	r3, .L457+36
 6146 06da 0022     		movs	r2, #0
 6147 06dc 1A70     		strb	r2, [r3]
 6148              	.L384:
1853:..\src/interruptions.c ****     }
1854:..\src/interruptions.c **** 
1855:..\src/interruptions.c ****     // EMG 1 calibration state machine
1856:..\src/interruptions.c ****    
1857:..\src/interruptions.c ****     // Calibration state machine
1858:..\src/interruptions.c ****     switch(emg_1_status) {
 6149              		.loc 1 1858 0
 6150 06de 754B     		ldr	r3, .L457+32
 6151 06e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6152 06e2 032B     		cmp	r3, #3
 6153 06e4 00F2CF80 		bhi	.L443
 6154 06e8 01A2     		adr	r2, .L387
 6155 06ea 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6156 06ee 00BF     		.p2align 2
 6157              	.L387:
 6158 06f0 01070000 		.word	.L386+1
 6159 06f4 8B070000 		.word	.L388+1
 6160 06f8 A1070000 		.word	.L389+1
 6161 06fc DD070000 		.word	.L390+1
 6162              		.p2align 1
 6163              	.L386:
1859:..\src/interruptions.c ****         case NORMAL: // normal execution
1860:..\src/interruptions.c ****             i_aux = ((int32)(ADC_buf[2 + c_mem.emg.switch_emg] - 1639) * 87) >> 5;  //map range to 
 6164              		.loc 1 1860 0
 6165 0700 6B4B     		ldr	r3, .L457+28
 6166 0702 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6167 0706 0233     		adds	r3, r3, #2
 6168 0708 634A     		ldr	r2, .L457+4
 6169 070a 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6170 070e A3F26763 		subw	r3, r3, #1639
 6171 0712 5722     		movs	r2, #87
 6172 0714 02FB03F3 		mul	r3, r2, r3
 6173 0718 5B11     		asrs	r3, r3, #5
 6174 071a 7B60     		str	r3, [r7, #4]
1861:..\src/interruptions.c ****             //i_aux = (int32)(ADC_buf[2 + c_mem.switch_emg]);
1862:..\src/interruptions.c ****             if (i_aux < 0) 
 6175              		.loc 1 1862 0
 6176 071c 7B68     		ldr	r3, [r7, #4]
 6177 071e 002B     		cmp	r3, #0
 6178 0720 01DA     		bge	.L391
1863:..\src/interruptions.c ****                 i_aux = 0;
 6179              		.loc 1 1863 0
 6180 0722 0023     		movs	r3, #0
 6181 0724 7B60     		str	r3, [r7, #4]
 6182              	.L391:
1864:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[0]);
 6183              		.loc 1 1864 0
 6184 0726 6549     		ldr	r1, .L457+40
 6185 0728 7868     		ldr	r0, [r7, #4]
 6186 072a FFF7FEFF 		bl	filter
 6187 072e 7860     		str	r0, [r7, #4]
1865:..\src/interruptions.c ****             i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[0];
 6188              		.loc 1 1865 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 145


 6189 0730 7B68     		ldr	r3, [r7, #4]
 6190 0732 9B02     		lsls	r3, r3, #10
 6191 0734 1A46     		mov	r2, r3
 6192 0736 574B     		ldr	r3, .L457
 6193 0738 D3F8F431 		ldr	r3, [r3, #500]
 6194 073c B2FBF3F3 		udiv	r3, r2, r3
 6195 0740 7B60     		str	r3, [r7, #4]
1866:..\src/interruptions.c **** 
1867:..\src/interruptions.c ****             if (interrupt_flag){
 6196              		.loc 1 1867 0
 6197 0742 5A4B     		ldr	r3, .L457+24
 6198 0744 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6199 0746 002B     		cmp	r3, #0
 6200 0748 04D0     		beq	.L392
1868:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6201              		.loc 1 1868 0
 6202 074a 584B     		ldr	r3, .L457+24
 6203 074c 0022     		movs	r2, #0
 6204 074e 1A70     		strb	r2, [r3]
1869:..\src/interruptions.c ****                 interrupt_manager();
 6205              		.loc 1 1869 0
 6206 0750 FFF7FEFF 		bl	interrupt_manager
 6207              	.L392:
1870:..\src/interruptions.c ****             }
1871:..\src/interruptions.c ****             //Saturation
1872:..\src/interruptions.c ****             if (i_aux < 0)
 6208              		.loc 1 1872 0
 6209 0754 7B68     		ldr	r3, [r7, #4]
 6210 0756 002B     		cmp	r3, #0
 6211 0758 02DA     		bge	.L393
1873:..\src/interruptions.c ****                 i_aux = 0;
 6212              		.loc 1 1873 0
 6213 075a 0023     		movs	r3, #0
 6214 075c 7B60     		str	r3, [r7, #4]
 6215 075e 06E0     		b	.L394
 6216              	.L393:
1874:..\src/interruptions.c ****             else 
1875:..\src/interruptions.c ****                 if (i_aux > 1024) 
 6217              		.loc 1 1875 0
 6218 0760 7B68     		ldr	r3, [r7, #4]
 6219 0762 B3F5806F 		cmp	r3, #1024
 6220 0766 02DD     		ble	.L394
1876:..\src/interruptions.c ****                     i_aux = 1024;
 6221              		.loc 1 1876 0
 6222 0768 4FF48063 		mov	r3, #1024
 6223 076c 7B60     		str	r3, [r7, #4]
 6224              	.L394:
1877:..\src/interruptions.c ****             
1878:..\src/interruptions.c ****             g_emg_meas.emg[0] = i_aux;
 6225              		.loc 1 1878 0
 6226 076e 544A     		ldr	r2, .L457+44
 6227 0770 7B68     		ldr	r3, [r7, #4]
 6228 0772 1360     		str	r3, [r2]
1879:..\src/interruptions.c **** 
1880:..\src/interruptions.c ****             if (interrupt_flag){
 6229              		.loc 1 1880 0
 6230 0774 4D4B     		ldr	r3, .L457+24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 146


 6231 0776 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6232 0778 002B     		cmp	r3, #0
 6233 077a 00F08680 		beq	.L444
1881:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6234              		.loc 1 1881 0
 6235 077e 4B4B     		ldr	r3, .L457+24
 6236 0780 0022     		movs	r2, #0
 6237 0782 1A70     		strb	r2, [r3]
1882:..\src/interruptions.c ****                 interrupt_manager();
 6238              		.loc 1 1882 0
 6239 0784 FFF7FEFF 		bl	interrupt_manager
1883:..\src/interruptions.c ****             }
1884:..\src/interruptions.c ****             
1885:..\src/interruptions.c ****             break;
 6240              		.loc 1 1885 0
 6241 0788 7FE0     		b	.L444
 6242              	.L388:
1886:..\src/interruptions.c **** 
1887:..\src/interruptions.c ****         case RESET: // reset variables
1888:..\src/interruptions.c ****             emg_counter_1 = 0;
 6243              		.loc 1 1888 0
 6244 078a 4E4B     		ldr	r3, .L457+48
 6245 078c 0022     		movs	r2, #0
 6246 078e 1A80     		strh	r2, [r3]	@ movhi
1889:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] = 0;
 6247              		.loc 1 1889 0
 6248 0790 404B     		ldr	r3, .L457
 6249 0792 0022     		movs	r2, #0
 6250 0794 C3F8F421 		str	r2, [r3, #500]
1890:..\src/interruptions.c ****             emg_1_status = DISCARD; // goto next status  
 6251              		.loc 1 1890 0
 6252 0798 464B     		ldr	r3, .L457+32
 6253 079a 0222     		movs	r2, #2
 6254 079c 1A70     		strb	r2, [r3]
1891:..\src/interruptions.c ****             break;
 6255              		.loc 1 1891 0
 6256 079e 96E0     		b	.L396
 6257              	.L389:
1892:..\src/interruptions.c **** 
1893:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1894:..\src/interruptions.c ****             emg_counter_1++;
 6258              		.loc 1 1894 0
 6259 07a0 484B     		ldr	r3, .L457+48
 6260 07a2 1B88     		ldrh	r3, [r3]
 6261 07a4 0133     		adds	r3, r3, #1
 6262 07a6 9AB2     		uxth	r2, r3
 6263 07a8 464B     		ldr	r3, .L457+48
 6264 07aa 1A80     		strh	r2, [r3]	@ movhi
1895:..\src/interruptions.c ****             if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
 6265              		.loc 1 1895 0
 6266 07ac 454B     		ldr	r3, .L457+48
 6267 07ae 1B88     		ldrh	r3, [r3]
 6268 07b0 B3F5FA7F 		cmp	r3, #500
 6269 07b4 6BD1     		bne	.L445
1896:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 6270              		.loc 1 1896 0
 6271 07b6 434B     		ldr	r3, .L457+48
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 147


 6272 07b8 0022     		movs	r2, #0
 6273 07ba 1A80     		strh	r2, [r3]	@ movhi
1897:..\src/interruptions.c ****                 LED_control(1);
 6274              		.loc 1 1897 0
 6275 07bc 0120     		movs	r0, #1
 6276 07be FFF7FEFF 		bl	LED_control
1898:..\src/interruptions.c **** 				
1899:..\src/interruptions.c ****                 if (interrupt_flag){
 6277              		.loc 1 1899 0
 6278 07c2 3A4B     		ldr	r3, .L457+24
 6279 07c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6280 07c6 002B     		cmp	r3, #0
 6281 07c8 04D0     		beq	.L398
1900:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6282              		.loc 1 1900 0
 6283 07ca 384B     		ldr	r3, .L457+24
 6284 07cc 0022     		movs	r2, #0
 6285 07ce 1A70     		strb	r2, [r3]
1901:..\src/interruptions.c ****                     interrupt_manager();
 6286              		.loc 1 1901 0
 6287 07d0 FFF7FEFF 		bl	interrupt_manager
 6288              	.L398:
1902:..\src/interruptions.c ****                 }
1903:..\src/interruptions.c ****                 
1904:..\src/interruptions.c ****                 emg_1_status = SUM_AND_MEAN;    // sum and mean status
 6289              		.loc 1 1904 0
 6290 07d4 374B     		ldr	r3, .L457+32
 6291 07d6 0322     		movs	r2, #3
 6292 07d8 1A70     		strb	r2, [r3]
1905:..\src/interruptions.c ****             }
1906:..\src/interruptions.c ****             break;
 6293              		.loc 1 1906 0
 6294 07da 58E0     		b	.L445
 6295              	.L390:
1907:..\src/interruptions.c **** 
1908:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1909:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1910:..\src/interruptions.c ****             emg_counter_1++;
 6296              		.loc 1 1910 0
 6297 07dc 394B     		ldr	r3, .L457+48
 6298 07de 1B88     		ldrh	r3, [r3]
 6299 07e0 0133     		adds	r3, r3, #1
 6300 07e2 9AB2     		uxth	r2, r3
 6301 07e4 374B     		ldr	r3, .L457+48
 6302 07e6 1A80     		strh	r2, [r3]	@ movhi
1911:..\src/interruptions.c ****             if (ADC_buf[2 + c_mem.emg.switch_emg] < 0) 
 6303              		.loc 1 1911 0
 6304 07e8 314B     		ldr	r3, .L457+28
 6305 07ea 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6306 07ee 0233     		adds	r3, r3, #2
 6307 07f0 294A     		ldr	r2, .L457+4
 6308 07f2 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6309 07f6 002B     		cmp	r3, #0
 6310 07f8 07DA     		bge	.L399
1912:..\src/interruptions.c ****                 ADC_buf[2 + c_mem.emg.switch_emg] = 0;
 6311              		.loc 1 1912 0
 6312 07fa 2D4B     		ldr	r3, .L457+28
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 148


 6313 07fc 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6314 0800 0233     		adds	r3, r3, #2
 6315 0802 254A     		ldr	r2, .L457+4
 6316 0804 0021     		movs	r1, #0
 6317 0806 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 6318              	.L399:
1913:..\src/interruptions.c ****             g_mem.emg.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.emg.switch_emg], &filt_em
 6319              		.loc 1 1913 0
 6320 080a 294B     		ldr	r3, .L457+28
 6321 080c 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6322 0810 0233     		adds	r3, r3, #2
 6323 0812 214A     		ldr	r2, .L457+4
 6324 0814 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6325 0818 2849     		ldr	r1, .L457+40
 6326 081a 1846     		mov	r0, r3
 6327 081c FFF7FEFF 		bl	filter
 6328 0820 0246     		mov	r2, r0
 6329 0822 1C4B     		ldr	r3, .L457
 6330 0824 D3F8F431 		ldr	r3, [r3, #500]
 6331 0828 1344     		add	r3, r3, r2
 6332 082a 1A4A     		ldr	r2, .L457
 6333 082c C2F8F431 		str	r3, [r2, #500]
1914:..\src/interruptions.c ****             
1915:..\src/interruptions.c ****             if (interrupt_flag){
 6334              		.loc 1 1915 0
 6335 0830 1E4B     		ldr	r3, .L457+24
 6336 0832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6337 0834 002B     		cmp	r3, #0
 6338 0836 04D0     		beq	.L400
1916:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6339              		.loc 1 1916 0
 6340 0838 1C4B     		ldr	r3, .L457+24
 6341 083a 0022     		movs	r2, #0
 6342 083c 1A70     		strb	r2, [r3]
1917:..\src/interruptions.c ****                 interrupt_manager();
 6343              		.loc 1 1917 0
 6344 083e FFF7FEFF 		bl	interrupt_manager
 6345              	.L400:
1918:..\src/interruptions.c ****             }
1919:..\src/interruptions.c ****             
1920:..\src/interruptions.c ****             if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 6346              		.loc 1 1920 0
 6347 0842 204B     		ldr	r3, .L457+48
 6348 0844 1B88     		ldrh	r3, [r3]
 6349 0846 B3F57A7F 		cmp	r3, #1000
 6350 084a 3FD1     		bne	.L446
1921:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[0] = g_mem.emg.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // 
 6351              		.loc 1 1921 0
 6352 084c 114B     		ldr	r3, .L457
 6353 084e D3F8F431 		ldr	r3, [r3, #500]
 6354 0852 1D4A     		ldr	r2, .L457+52
 6355 0854 A2FB0323 		umull	r2, r3, r2, r3
 6356 0858 9B09     		lsrs	r3, r3, #6
 6357 085a 0E4A     		ldr	r2, .L457
 6358 085c C2F8F431 		str	r3, [r2, #500]
1922:..\src/interruptions.c **** 
1923:..\src/interruptions.c ****                 if (interrupt_flag){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 149


 6359              		.loc 1 1923 0
 6360 0860 124B     		ldr	r3, .L457+24
 6361 0862 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6362 0864 002B     		cmp	r3, #0
 6363 0866 04D0     		beq	.L402
1924:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6364              		.loc 1 1924 0
 6365 0868 104B     		ldr	r3, .L457+24
 6366 086a 0022     		movs	r2, #0
 6367 086c 1A70     		strb	r2, [r3]
1925:..\src/interruptions.c ****                     interrupt_manager();
 6368              		.loc 1 1925 0
 6369 086e FFF7FEFF 		bl	interrupt_manager
 6370              	.L402:
1926:..\src/interruptions.c ****                 }                    
1927:..\src/interruptions.c ****                 
1928:..\src/interruptions.c ****                 LED_control(0);
 6371              		.loc 1 1928 0
 6372 0872 0020     		movs	r0, #0
 6373 0874 FFF7FEFF 		bl	LED_control
1929:..\src/interruptions.c **** 				
1930:..\src/interruptions.c ****                 emg_counter_1 = 0;          // reset counter
 6374              		.loc 1 1930 0
 6375 0878 124B     		ldr	r3, .L457+48
 6376 087a 0022     		movs	r2, #0
 6377 087c 1A80     		strh	r2, [r3]	@ movhi
1931:..\src/interruptions.c **** 
1932:..\src/interruptions.c ****                 emg_1_status = NORMAL;      // goto normal execution
 6378              		.loc 1 1932 0
 6379 087e 0D4B     		ldr	r3, .L457+32
 6380 0880 0022     		movs	r2, #0
 6381 0882 1A70     		strb	r2, [r3]
1933:..\src/interruptions.c ****             }
1934:..\src/interruptions.c ****             break;
 6382              		.loc 1 1934 0
 6383 0884 22E0     		b	.L446
 6384              	.L443:
1935:..\src/interruptions.c **** 
1936:..\src/interruptions.c ****         default:
1937:..\src/interruptions.c ****             break;
 6385              		.loc 1 1937 0
 6386 0886 00BF     		nop
 6387 0888 21E0     		b	.L396
 6388              	.L444:
1885:..\src/interruptions.c **** 
 6389              		.loc 1 1885 0
 6390 088a 00BF     		nop
 6391 088c 1FE0     		b	.L396
 6392              	.L445:
1906:..\src/interruptions.c **** 
 6393              		.loc 1 1906 0
 6394 088e 00BF     		nop
 6395 0890 1DE0     		b	.L396
 6396              	.L458:
 6397 0892 00BF     		.align	2
 6398              	.L457:
 6399 0894 00000000 		.word	g_mem
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 150


 6400 0898 00000000 		.word	ADC_buf
 6401 089c 00000000 		.word	pwm_sign
 6402 08a0 00000000 		.word	g_meas
 6403 08a4 00000000 		.word	g_ref
 6404 08a8 08000000 		.word	filt_curr_diff+8
 6405 08ac 00000000 		.word	interrupt_flag
 6406 08b0 00000000 		.word	c_mem
 6407 08b4 00000000 		.word	emg_1_status
 6408 08b8 00000000 		.word	emg_2_status
 6409 08bc 00000000 		.word	filt_emg
 6410 08c0 00000000 		.word	g_emg_meas
 6411 08c4 80010000 		.word	emg_counter_1.10496
 6412 08c8 D34D6210 		.word	274877907
 6413              	.L446:
1934:..\src/interruptions.c **** 
 6414              		.loc 1 1934 0
 6415 08cc 00BF     		nop
 6416              	.L396:
1938:..\src/interruptions.c ****     }
1939:..\src/interruptions.c **** 
1940:..\src/interruptions.c ****     if (interrupt_flag){
 6417              		.loc 1 1940 0
 6418 08ce 854B     		ldr	r3, .L459
 6419 08d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6420 08d2 002B     		cmp	r3, #0
 6421 08d4 04D0     		beq	.L403
1941:..\src/interruptions.c ****         interrupt_flag = FALSE;
 6422              		.loc 1 1941 0
 6423 08d6 834B     		ldr	r3, .L459
 6424 08d8 0022     		movs	r2, #0
 6425 08da 1A70     		strb	r2, [r3]
1942:..\src/interruptions.c ****         interrupt_manager();
 6426              		.loc 1 1942 0
 6427 08dc FFF7FEFF 		bl	interrupt_manager
 6428              	.L403:
1943:..\src/interruptions.c ****     }
1944:..\src/interruptions.c ****     // EMG 2 calibration state machine
1945:..\src/interruptions.c ****     switch(emg_2_status) {
 6429              		.loc 1 1945 0
 6430 08e0 814B     		ldr	r3, .L459+4
 6431 08e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6432 08e4 052B     		cmp	r3, #5
 6433 08e6 00F2A681 		bhi	.L447
 6434 08ea 01A2     		adr	r2, .L406
 6435 08ec 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6436              		.p2align 2
 6437              	.L406:
 6438 08f0 09090000 		.word	.L405+1
 6439 08f4 81090000 		.word	.L407+1
 6440 08f8 A9090000 		.word	.L408+1
 6441 08fc E7090000 		.word	.L409+1
 6442 0900 990A0000 		.word	.L410+1
 6443 0904 AB0A0000 		.word	.L411+1
 6444              		.p2align 1
 6445              	.L405:
1946:..\src/interruptions.c ****         case NORMAL: // normal execution
1947:..\src/interruptions.c ****             i_aux = ((int32)(ADC_buf[3 - c_mem.emg.switch_emg] - 1640) * 87) >> 5;  //map range to 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 151


 6446              		.loc 1 1947 0
 6447 0908 784B     		ldr	r3, .L459+8
 6448 090a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6449 090e C3F10303 		rsb	r3, r3, #3
 6450 0912 774A     		ldr	r2, .L459+12
 6451 0914 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6452 0918 A3F5CD63 		sub	r3, r3, #1640
 6453 091c 5722     		movs	r2, #87
 6454 091e 02FB03F3 		mul	r3, r2, r3
 6455 0922 5B11     		asrs	r3, r3, #5
 6456 0924 7B60     		str	r3, [r7, #4]
1948:..\src/interruptions.c ****             //i_aux = (int32)(ADC_buf[3 - c_mem.switch_emg]);
1949:..\src/interruptions.c ****                 if (i_aux < 0)
 6457              		.loc 1 1949 0
 6458 0926 7B68     		ldr	r3, [r7, #4]
 6459 0928 002B     		cmp	r3, #0
 6460 092a 01DA     		bge	.L412
1950:..\src/interruptions.c ****                     i_aux = 0;
 6461              		.loc 1 1950 0
 6462 092c 0023     		movs	r3, #0
 6463 092e 7B60     		str	r3, [r7, #4]
 6464              	.L412:
1951:..\src/interruptions.c ****                 i_aux = filter(i_aux, &filt_emg[1]);
 6465              		.loc 1 1951 0
 6466 0930 7049     		ldr	r1, .L459+16
 6467 0932 7868     		ldr	r0, [r7, #4]
 6468 0934 FFF7FEFF 		bl	filter
 6469 0938 7860     		str	r0, [r7, #4]
1952:..\src/interruptions.c ****                 i_aux = (i_aux << 10) / g_mem.emg.emg_max_value[1];
 6470              		.loc 1 1952 0
 6471 093a 7B68     		ldr	r3, [r7, #4]
 6472 093c 9B02     		lsls	r3, r3, #10
 6473 093e 1A46     		mov	r2, r3
 6474 0940 6D4B     		ldr	r3, .L459+20
 6475 0942 D3F8F831 		ldr	r3, [r3, #504]
 6476 0946 B2FBF3F3 		udiv	r3, r2, r3
 6477 094a 7B60     		str	r3, [r7, #4]
1953:..\src/interruptions.c ****     
1954:..\src/interruptions.c ****                 if (interrupt_flag){
 6478              		.loc 1 1954 0
 6479 094c 654B     		ldr	r3, .L459
 6480 094e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6481 0950 002B     		cmp	r3, #0
 6482 0952 04D0     		beq	.L413
1955:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6483              		.loc 1 1955 0
 6484 0954 634B     		ldr	r3, .L459
 6485 0956 0022     		movs	r2, #0
 6486 0958 1A70     		strb	r2, [r3]
1956:..\src/interruptions.c ****                     interrupt_manager();
 6487              		.loc 1 1956 0
 6488 095a FFF7FEFF 		bl	interrupt_manager
 6489              	.L413:
1957:..\src/interruptions.c ****                 }
1958:..\src/interruptions.c ****                 
1959:..\src/interruptions.c ****                 if (i_aux < 0) 
 6490              		.loc 1 1959 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 152


 6491 095e 7B68     		ldr	r3, [r7, #4]
 6492 0960 002B     		cmp	r3, #0
 6493 0962 02DA     		bge	.L414
1960:..\src/interruptions.c ****                     i_aux = 0;
 6494              		.loc 1 1960 0
 6495 0964 0023     		movs	r3, #0
 6496 0966 7B60     		str	r3, [r7, #4]
 6497 0968 06E0     		b	.L415
 6498              	.L414:
1961:..\src/interruptions.c ****                 else 
1962:..\src/interruptions.c ****                     if (i_aux > 1024)
 6499              		.loc 1 1962 0
 6500 096a 7B68     		ldr	r3, [r7, #4]
 6501 096c B3F5806F 		cmp	r3, #1024
 6502 0970 02DD     		ble	.L415
1963:..\src/interruptions.c ****                         i_aux = 1024;
 6503              		.loc 1 1963 0
 6504 0972 4FF48063 		mov	r3, #1024
 6505 0976 7B60     		str	r3, [r7, #4]
 6506              	.L415:
1964:..\src/interruptions.c ****                 
1965:..\src/interruptions.c ****                 g_emg_meas.emg[1] = i_aux;
 6507              		.loc 1 1965 0
 6508 0978 604A     		ldr	r2, .L459+24
 6509 097a 7B68     		ldr	r3, [r7, #4]
 6510 097c 5360     		str	r3, [r2, #4]
1966:..\src/interruptions.c **** 
1967:..\src/interruptions.c ****             break;
 6511              		.loc 1 1967 0
 6512 097e 63E1     		b	.L416
 6513              	.L407:
1968:..\src/interruptions.c **** 
1969:..\src/interruptions.c ****         case RESET: // reset variables
1970:..\src/interruptions.c ****             emg_counter_2 = 0;
 6514              		.loc 1 1970 0
 6515 0980 5F4B     		ldr	r3, .L459+28
 6516 0982 0022     		movs	r2, #0
 6517 0984 1A80     		strh	r2, [r3]	@ movhi
1971:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] = 0;
 6518              		.loc 1 1971 0
 6519 0986 5C4B     		ldr	r3, .L459+20
 6520 0988 0022     		movs	r2, #0
 6521 098a C3F8F821 		str	r2, [r3, #504]
1972:..\src/interruptions.c **** 
1973:..\src/interruptions.c ****             if (interrupt_flag){
 6522              		.loc 1 1973 0
 6523 098e 554B     		ldr	r3, .L459
 6524 0990 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6525 0992 002B     		cmp	r3, #0
 6526 0994 04D0     		beq	.L417
1974:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6527              		.loc 1 1974 0
 6528 0996 534B     		ldr	r3, .L459
 6529 0998 0022     		movs	r2, #0
 6530 099a 1A70     		strb	r2, [r3]
1975:..\src/interruptions.c ****                 interrupt_manager();
 6531              		.loc 1 1975 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 153


 6532 099c FFF7FEFF 		bl	interrupt_manager
 6533              	.L417:
1976:..\src/interruptions.c ****             }
1977:..\src/interruptions.c ****             
1978:..\src/interruptions.c ****             emg_2_status = WAIT; // wait for EMG 1 calibration
 6534              		.loc 1 1978 0
 6535 09a0 514B     		ldr	r3, .L459+4
 6536 09a2 0422     		movs	r2, #4
 6537 09a4 1A70     		strb	r2, [r3]
1979:..\src/interruptions.c ****             break;
 6538              		.loc 1 1979 0
 6539 09a6 4FE1     		b	.L416
 6540              	.L408:
1980:..\src/interruptions.c **** 
1981:..\src/interruptions.c ****         case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1982:..\src/interruptions.c ****             emg_counter_2++;
 6541              		.loc 1 1982 0
 6542 09a8 554B     		ldr	r3, .L459+28
 6543 09aa 1B88     		ldrh	r3, [r3]
 6544 09ac 0133     		adds	r3, r3, #1
 6545 09ae 9AB2     		uxth	r2, r3
 6546 09b0 534B     		ldr	r3, .L459+28
 6547 09b2 1A80     		strh	r2, [r3]	@ movhi
1983:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 6548              		.loc 1 1983 0
 6549 09b4 524B     		ldr	r3, .L459+28
 6550 09b6 1B88     		ldrh	r3, [r3]
 6551 09b8 B3F5FA7F 		cmp	r3, #500
 6552 09bc 40F03D81 		bne	.L448
1984:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6553              		.loc 1 1984 0
 6554 09c0 4F4B     		ldr	r3, .L459+28
 6555 09c2 0022     		movs	r2, #0
 6556 09c4 1A80     		strh	r2, [r3]	@ movhi
1985:..\src/interruptions.c ****                 LED_control(1);
 6557              		.loc 1 1985 0
 6558 09c6 0120     		movs	r0, #1
 6559 09c8 FFF7FEFF 		bl	LED_control
1986:..\src/interruptions.c **** 
1987:..\src/interruptions.c ****                 if (interrupt_flag){
 6560              		.loc 1 1987 0
 6561 09cc 454B     		ldr	r3, .L459
 6562 09ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6563 09d0 002B     		cmp	r3, #0
 6564 09d2 04D0     		beq	.L419
1988:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6565              		.loc 1 1988 0
 6566 09d4 434B     		ldr	r3, .L459
 6567 09d6 0022     		movs	r2, #0
 6568 09d8 1A70     		strb	r2, [r3]
1989:..\src/interruptions.c ****                     interrupt_manager();
 6569              		.loc 1 1989 0
 6570 09da FFF7FEFF 		bl	interrupt_manager
 6571              	.L419:
1990:..\src/interruptions.c ****                 }
1991:..\src/interruptions.c ****                 
1992:..\src/interruptions.c ****                 emg_2_status = SUM_AND_MEAN;           // sum and mean status
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 154


 6572              		.loc 1 1992 0
 6573 09de 424B     		ldr	r3, .L459+4
 6574 09e0 0322     		movs	r2, #3
 6575 09e2 1A70     		strb	r2, [r3]
1993:..\src/interruptions.c ****             }
1994:..\src/interruptions.c ****             break;
 6576              		.loc 1 1994 0
 6577 09e4 29E1     		b	.L448
 6578              	.L409:
1995:..\src/interruptions.c **** 
1996:..\src/interruptions.c ****         case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1997:..\src/interruptions.c ****             // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1998:..\src/interruptions.c ****             emg_counter_2++;
 6579              		.loc 1 1998 0
 6580 09e6 464B     		ldr	r3, .L459+28
 6581 09e8 1B88     		ldrh	r3, [r3]
 6582 09ea 0133     		adds	r3, r3, #1
 6583 09ec 9AB2     		uxth	r2, r3
 6584 09ee 444B     		ldr	r3, .L459+28
 6585 09f0 1A80     		strh	r2, [r3]	@ movhi
1999:..\src/interruptions.c ****             if (ADC_buf[3 - c_mem.emg.switch_emg] < 0)
 6586              		.loc 1 1999 0
 6587 09f2 3E4B     		ldr	r3, .L459+8
 6588 09f4 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6589 09f8 C3F10303 		rsb	r3, r3, #3
 6590 09fc 3C4A     		ldr	r2, .L459+12
 6591 09fe 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6592 0a02 002B     		cmp	r3, #0
 6593 0a04 08DA     		bge	.L420
2000:..\src/interruptions.c ****                 ADC_buf[3 - c_mem.emg.switch_emg] = 0;
 6594              		.loc 1 2000 0
 6595 0a06 394B     		ldr	r3, .L459+8
 6596 0a08 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6597 0a0c C3F10303 		rsb	r3, r3, #3
 6598 0a10 374A     		ldr	r2, .L459+12
 6599 0a12 0021     		movs	r1, #0
 6600 0a14 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 6601              	.L420:
2001:..\src/interruptions.c ****             g_mem.emg.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.emg.switch_emg], &filt_em
 6602              		.loc 1 2001 0
 6603 0a18 344B     		ldr	r3, .L459+8
 6604 0a1a 93F8FE31 		ldrb	r3, [r3, #510]	@ zero_extendqisi2
 6605 0a1e C3F10303 		rsb	r3, r3, #3
 6606 0a22 334A     		ldr	r2, .L459+12
 6607 0a24 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6608 0a28 3249     		ldr	r1, .L459+16
 6609 0a2a 1846     		mov	r0, r3
 6610 0a2c FFF7FEFF 		bl	filter
 6611 0a30 0246     		mov	r2, r0
 6612 0a32 314B     		ldr	r3, .L459+20
 6613 0a34 D3F8F831 		ldr	r3, [r3, #504]
 6614 0a38 1344     		add	r3, r3, r2
 6615 0a3a 2F4A     		ldr	r2, .L459+20
 6616 0a3c C2F8F831 		str	r3, [r2, #504]
2002:..\src/interruptions.c **** 
2003:..\src/interruptions.c ****             if (interrupt_flag){
 6617              		.loc 1 2003 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 155


 6618 0a40 284B     		ldr	r3, .L459
 6619 0a42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6620 0a44 002B     		cmp	r3, #0
 6621 0a46 04D0     		beq	.L421
2004:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6622              		.loc 1 2004 0
 6623 0a48 264B     		ldr	r3, .L459
 6624 0a4a 0022     		movs	r2, #0
 6625 0a4c 1A70     		strb	r2, [r3]
2005:..\src/interruptions.c ****                 interrupt_manager();
 6626              		.loc 1 2005 0
 6627 0a4e FFF7FEFF 		bl	interrupt_manager
 6628              	.L421:
2006:..\src/interruptions.c ****             }
2007:..\src/interruptions.c ****             
2008:..\src/interruptions.c ****             if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 6629              		.loc 1 2008 0
 6630 0a52 2B4B     		ldr	r3, .L459+28
 6631 0a54 1B88     		ldrh	r3, [r3]
 6632 0a56 B3F57A7F 		cmp	r3, #1000
 6633 0a5a 40F0F080 		bne	.L449
2009:..\src/interruptions.c ****                 g_mem.emg.emg_max_value[1] = g_mem.emg.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // 
 6634              		.loc 1 2009 0
 6635 0a5e 264B     		ldr	r3, .L459+20
 6636 0a60 D3F8F831 		ldr	r3, [r3, #504]
 6637 0a64 274A     		ldr	r2, .L459+32
 6638 0a66 A2FB0323 		umull	r2, r3, r2, r3
 6639 0a6a 9B09     		lsrs	r3, r3, #6
 6640 0a6c 224A     		ldr	r2, .L459+20
 6641 0a6e C2F8F831 		str	r3, [r2, #504]
2010:..\src/interruptions.c ****                 LED_control(0);
 6642              		.loc 1 2010 0
 6643 0a72 0020     		movs	r0, #0
 6644 0a74 FFF7FEFF 		bl	LED_control
2011:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6645              		.loc 1 2011 0
 6646 0a78 214B     		ldr	r3, .L459+28
 6647 0a7a 0022     		movs	r2, #0
 6648 0a7c 1A80     		strh	r2, [r3]	@ movhi
2012:..\src/interruptions.c ****             
2013:..\src/interruptions.c ****                 if (interrupt_flag){
 6649              		.loc 1 2013 0
 6650 0a7e 194B     		ldr	r3, .L459
 6651 0a80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6652 0a82 002B     		cmp	r3, #0
 6653 0a84 04D0     		beq	.L423
2014:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6654              		.loc 1 2014 0
 6655 0a86 174B     		ldr	r3, .L459
 6656 0a88 0022     		movs	r2, #0
 6657 0a8a 1A70     		strb	r2, [r3]
2015:..\src/interruptions.c ****                     interrupt_manager();
 6658              		.loc 1 2015 0
 6659 0a8c FFF7FEFF 		bl	interrupt_manager
 6660              	.L423:
2016:..\src/interruptions.c ****                 }
2017:..\src/interruptions.c ****                 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 156


2018:..\src/interruptions.c ****                 emg_2_status = WAIT_EoC;    // goto end of calibration wait
 6661              		.loc 1 2018 0
 6662 0a90 154B     		ldr	r3, .L459+4
 6663 0a92 0522     		movs	r2, #5
 6664 0a94 1A70     		strb	r2, [r3]
2019:..\src/interruptions.c ****             }
2020:..\src/interruptions.c ****             break;
 6665              		.loc 1 2020 0
 6666 0a96 D2E0     		b	.L449
 6667              	.L410:
2021:..\src/interruptions.c **** 
2022:..\src/interruptions.c ****         case WAIT: // wait for EMG calibration to be done
2023:..\src/interruptions.c ****             if (emg_1_status == NORMAL)
 6668              		.loc 1 2023 0
 6669 0a98 1B4B     		ldr	r3, .L459+36
 6670 0a9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6671 0a9c 002B     		cmp	r3, #0
 6672 0a9e 40F0D080 		bne	.L450
2024:..\src/interruptions.c ****                 emg_2_status = DISCARD;           // goto discard sample
 6673              		.loc 1 2024 0
 6674 0aa2 114B     		ldr	r3, .L459+4
 6675 0aa4 0222     		movs	r2, #2
 6676 0aa6 1A70     		strb	r2, [r3]
2025:..\src/interruptions.c ****             break;
 6677              		.loc 1 2025 0
 6678 0aa8 CBE0     		b	.L450
 6679              	.L411:
2026:..\src/interruptions.c **** 
2027:..\src/interruptions.c ****         case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reasons)
2028:..\src/interruptions.c ****             emg_counter_2++;
 6680              		.loc 1 2028 0
 6681 0aaa 154B     		ldr	r3, .L459+28
 6682 0aac 1B88     		ldrh	r3, [r3]
 6683 0aae 0133     		adds	r3, r3, #1
 6684 0ab0 9AB2     		uxth	r2, r3
 6685 0ab2 134B     		ldr	r3, .L459+28
 6686 0ab4 1A80     		strh	r2, [r3]	@ movhi
2029:..\src/interruptions.c ****             if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 6687              		.loc 1 2029 0
 6688 0ab6 124B     		ldr	r3, .L459+28
 6689 0ab8 1B88     		ldrh	r3, [r3]
 6690 0aba B3F5FA7F 		cmp	r3, #500
 6691 0abe 40F0C280 		bne	.L451
2030:..\src/interruptions.c ****                 emg_counter_2 = 0;          // reset counter
 6692              		.loc 1 2030 0
 6693 0ac2 0F4B     		ldr	r3, .L459+28
 6694 0ac4 0022     		movs	r2, #0
 6695 0ac6 1A80     		strh	r2, [r3]	@ movhi
2031:..\src/interruptions.c ****                 
2032:..\src/interruptions.c ****                 if (interrupt_flag){
 6696              		.loc 1 2032 0
 6697 0ac8 064B     		ldr	r3, .L459
 6698 0aca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6699 0acc 002B     		cmp	r3, #0
 6700 0ace 04D0     		beq	.L426
2033:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 6701              		.loc 1 2033 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 157


 6702 0ad0 044B     		ldr	r3, .L459
 6703 0ad2 0022     		movs	r2, #0
 6704 0ad4 1A70     		strb	r2, [r3]
2034:..\src/interruptions.c ****                     interrupt_manager();
 6705              		.loc 1 2034 0
 6706 0ad6 FFF7FEFF 		bl	interrupt_manager
 6707              	.L426:
2035:..\src/interruptions.c ****                 }
2036:..\src/interruptions.c ****                 
2037:..\src/interruptions.c ****                 for (idx = 0; idx < NUM_OF_MOTORS; idx++) {
 6708              		.loc 1 2037 0
 6709 0ada 0C4B     		ldr	r3, .L459+40
 6710 0adc 0022     		movs	r2, #0
 6711 0ade 1A70     		strb	r2, [r3]
 6712 0ae0 9DE0     		b	.L427
 6713              	.L460:
 6714 0ae2 00BF     		.align	2
 6715              	.L459:
 6716 0ae4 00000000 		.word	interrupt_flag
 6717 0ae8 00000000 		.word	emg_2_status
 6718 0aec 00000000 		.word	c_mem
 6719 0af0 00000000 		.word	ADC_buf
 6720 0af4 08000000 		.word	filt_emg+8
 6721 0af8 00000000 		.word	g_mem
 6722 0afc 00000000 		.word	g_emg_meas
 6723 0b00 82010000 		.word	emg_counter_2.10497
 6724 0b04 D34D6210 		.word	274877907
 6725 0b08 00000000 		.word	emg_1_status
 6726 0b0c 7A010000 		.word	idx.10501
 6727              	.L431:
2038:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6728              		.loc 1 2038 0
 6729 0b10 7F4B     		ldr	r3, .L461
 6730 0b12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6731 0b14 1946     		mov	r1, r3
 6732 0b16 7F4A     		ldr	r2, .L461+4
 6733 0b18 0B46     		mov	r3, r1
 6734 0b1a DB00     		lsls	r3, r3, #3
 6735 0b1c 5B1A     		subs	r3, r3, r1
 6736 0b1e 1B01     		lsls	r3, r3, #4
 6737 0b20 1344     		add	r3, r3, r2
 6738 0b22 03F58773 		add	r3, r3, #270
 6739 0b26 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6740 0b28 022B     		cmp	r3, #2
 6741 0b2a 29D0     		beq	.L428
2039:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6742              		.loc 1 2039 0 discriminator 1
 6743 0b2c 784B     		ldr	r3, .L461
 6744 0b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6745 0b30 1946     		mov	r1, r3
 6746 0b32 784A     		ldr	r2, .L461+4
 6747 0b34 0B46     		mov	r3, r1
 6748 0b36 DB00     		lsls	r3, r3, #3
 6749 0b38 5B1A     		subs	r3, r3, r1
 6750 0b3a 1B01     		lsls	r3, r3, #4
 6751 0b3c 1344     		add	r3, r3, r2
 6752 0b3e 03F58773 		add	r3, r3, #270
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 158


 6753 0b42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2038:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6754              		.loc 1 2038 0 discriminator 1
 6755 0b44 032B     		cmp	r3, #3
 6756 0b46 1BD0     		beq	.L428
2040:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6757              		.loc 1 2040 0
 6758 0b48 714B     		ldr	r3, .L461
 6759 0b4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6760 0b4c 1946     		mov	r1, r3
 6761 0b4e 714A     		ldr	r2, .L461+4
 6762 0b50 0B46     		mov	r3, r1
 6763 0b52 DB00     		lsls	r3, r3, #3
 6764 0b54 5B1A     		subs	r3, r3, r1
 6765 0b56 1B01     		lsls	r3, r3, #4
 6766 0b58 1344     		add	r3, r3, r2
 6767 0b5a 03F58773 		add	r3, r3, #270
 6768 0b5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2039:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 6769              		.loc 1 2039 0
 6770 0b60 042B     		cmp	r3, #4
 6771 0b62 0DD0     		beq	.L428
2041:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 6772              		.loc 1 2041 0
 6773 0b64 6A4B     		ldr	r3, .L461
 6774 0b66 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6775 0b68 1946     		mov	r1, r3
 6776 0b6a 6A4A     		ldr	r2, .L461+4
 6777 0b6c 0B46     		mov	r3, r1
 6778 0b6e DB00     		lsls	r3, r3, #3
 6779 0b70 5B1A     		subs	r3, r3, r1
 6780 0b72 1B01     		lsls	r3, r3, #4
 6781 0b74 1344     		add	r3, r3, r2
 6782 0b76 03F58773 		add	r3, r3, #270
 6783 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
2040:..\src/interruptions.c ****                         (c_mem.motor[idx].input_mode == INPUT_MODE_EMG_FCFS) ||
 6784              		.loc 1 2040 0
 6785 0b7c 052B     		cmp	r3, #5
 6786 0b7e 48D1     		bne	.L429
 6787              	.L428:
2042:..\src/interruptions.c ****                         if (c_mem.motor[idx].control_mode == CONTROL_ANGLE) {
 6788              		.loc 1 2042 0
 6789 0b80 634B     		ldr	r3, .L461
 6790 0b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6791 0b84 1946     		mov	r1, r3
 6792 0b86 634A     		ldr	r2, .L461+4
 6793 0b88 0B46     		mov	r3, r1
 6794 0b8a DB00     		lsls	r3, r3, #3
 6795 0b8c 5B1A     		subs	r3, r3, r1
 6796 0b8e 1B01     		lsls	r3, r3, #4
 6797 0b90 1344     		add	r3, r3, r2
 6798 0b92 03F20F13 		addw	r3, r3, #271
 6799 0b96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6800 0b98 002B     		cmp	r3, #0
 6801 0b9a 1AD1     		bne	.L430
2043:..\src/interruptions.c ****                             g_ref[idx].pos = g_meas[g_mem.motor[idx].encoder_line].pos[0];
 6802              		.loc 1 2043 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 159


 6803 0b9c 5C4B     		ldr	r3, .L461
 6804 0b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6805 0ba0 1846     		mov	r0, r3
 6806 0ba2 5B4B     		ldr	r3, .L461
 6807 0ba4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6808 0ba6 1946     		mov	r1, r3
 6809 0ba8 5B4A     		ldr	r2, .L461+8
 6810 0baa 0B46     		mov	r3, r1
 6811 0bac DB00     		lsls	r3, r3, #3
 6812 0bae 5B1A     		subs	r3, r3, r1
 6813 0bb0 1B01     		lsls	r3, r3, #4
 6814 0bb2 1344     		add	r3, r3, r2
 6815 0bb4 03F58873 		add	r3, r3, #272
 6816 0bb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6817 0bba 1946     		mov	r1, r3
 6818 0bbc 574A     		ldr	r2, .L461+12
 6819 0bbe 0B46     		mov	r3, r1
 6820 0bc0 5B00     		lsls	r3, r3, #1
 6821 0bc2 0B44     		add	r3, r3, r1
 6822 0bc4 1B01     		lsls	r3, r3, #4
 6823 0bc6 1344     		add	r3, r3, r2
 6824 0bc8 1A68     		ldr	r2, [r3]
 6825 0bca 5549     		ldr	r1, .L461+16
 6826 0bcc 0301     		lsls	r3, r0, #4
 6827 0bce 0B44     		add	r3, r3, r1
 6828 0bd0 1A60     		str	r2, [r3]
 6829              	.L430:
2044:..\src/interruptions.c ****                         }
2045:..\src/interruptions.c ****                         g_ref[idx].onoff = c_mem.motor[idx].activ;
 6830              		.loc 1 2045 0
 6831 0bd2 4F4B     		ldr	r3, .L461
 6832 0bd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6833 0bd6 1846     		mov	r0, r3
 6834 0bd8 4D4B     		ldr	r3, .L461
 6835 0bda 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6836 0bdc 1946     		mov	r1, r3
 6837 0bde 4D4A     		ldr	r2, .L461+4
 6838 0be0 0B46     		mov	r3, r1
 6839 0be2 DB00     		lsls	r3, r3, #3
 6840 0be4 5B1A     		subs	r3, r3, r1
 6841 0be6 1B01     		lsls	r3, r3, #4
 6842 0be8 1344     		add	r3, r3, r2
 6843 0bea E033     		adds	r3, r3, #224
 6844 0bec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6845 0bee 4C4A     		ldr	r2, .L461+16
 6846 0bf0 0301     		lsls	r3, r0, #4
 6847 0bf2 1344     		add	r3, r3, r2
 6848 0bf4 0C33     		adds	r3, r3, #12
 6849 0bf6 0A46     		mov	r2, r1
 6850 0bf8 1A70     		strb	r2, [r3]
2046:..\src/interruptions.c ****                         enable_motor(idx, g_ref[idx].onoff); 
 6851              		.loc 1 2046 0
 6852 0bfa 454B     		ldr	r3, .L461
 6853 0bfc 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6854 0bfe 444B     		ldr	r3, .L461
 6855 0c00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6856 0c02 474A     		ldr	r2, .L461+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 160


 6857 0c04 1B01     		lsls	r3, r3, #4
 6858 0c06 1344     		add	r3, r3, r2
 6859 0c08 0C33     		adds	r3, r3, #12
 6860 0c0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6861 0c0c 1946     		mov	r1, r3
 6862 0c0e FFF7FEFF 		bl	enable_motor
 6863              	.L429:
2037:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6864              		.loc 1 2037 0 discriminator 2
 6865 0c12 3F4B     		ldr	r3, .L461
 6866 0c14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6867 0c16 0133     		adds	r3, r3, #1
 6868 0c18 DAB2     		uxtb	r2, r3
 6869 0c1a 3D4B     		ldr	r3, .L461
 6870 0c1c 1A70     		strb	r2, [r3]
 6871              	.L427:
2037:..\src/interruptions.c ****                     if ((c_mem.motor[idx].input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 6872              		.loc 1 2037 0 is_stmt 0 discriminator 1
 6873 0c1e 3C4B     		ldr	r3, .L461
 6874 0c20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6875 0c22 012B     		cmp	r3, #1
 6876 0c24 7FF674AF 		bls	.L431
2047:..\src/interruptions.c ****                     }
2048:..\src/interruptions.c ****                 }
2049:..\src/interruptions.c ****                     
2050:..\src/interruptions.c ****                 memStore(0);        // Store emg_max_value
 6877              		.loc 1 2050 0 is_stmt 1
 6878 0c28 0020     		movs	r0, #0
 6879 0c2a FFF7FEFF 		bl	memStore
2051:..\src/interruptions.c ****                     
2052:..\src/interruptions.c ****                 emg_2_status = NORMAL;           // goto normal execution
 6880              		.loc 1 2052 0
 6881 0c2e 3D4B     		ldr	r3, .L461+20
 6882 0c30 0022     		movs	r2, #0
 6883 0c32 1A70     		strb	r2, [r3]
2053:..\src/interruptions.c ****             }
2054:..\src/interruptions.c ****             break;
 6884              		.loc 1 2054 0
 6885 0c34 07E0     		b	.L451
 6886              	.L447:
2055:..\src/interruptions.c ****         default:
2056:..\src/interruptions.c ****             break;
 6887              		.loc 1 2056 0
 6888 0c36 00BF     		nop
 6889 0c38 06E0     		b	.L416
 6890              	.L448:
1994:..\src/interruptions.c **** 
 6891              		.loc 1 1994 0
 6892 0c3a 00BF     		nop
 6893 0c3c 04E0     		b	.L416
 6894              	.L449:
2020:..\src/interruptions.c **** 
 6895              		.loc 1 2020 0
 6896 0c3e 00BF     		nop
 6897 0c40 02E0     		b	.L416
 6898              	.L450:
2025:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 161


 6899              		.loc 1 2025 0
 6900 0c42 00BF     		nop
 6901 0c44 00E0     		b	.L416
 6902              	.L451:
2054:..\src/interruptions.c ****         default:
 6903              		.loc 1 2054 0
 6904 0c46 00BF     		nop
 6905              	.L416:
2057:..\src/interruptions.c ****     }
2058:..\src/interruptions.c ****         
2059:..\src/interruptions.c ****     if (interrupt_flag){
 6906              		.loc 1 2059 0
 6907 0c48 374B     		ldr	r3, .L461+24
 6908 0c4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6909 0c4c 002B     		cmp	r3, #0
 6910 0c4e 04D0     		beq	.L432
2060:..\src/interruptions.c ****         interrupt_flag = FALSE;
 6911              		.loc 1 2060 0
 6912 0c50 354B     		ldr	r3, .L461+24
 6913 0c52 0022     		movs	r2, #0
 6914 0c54 1A70     		strb	r2, [r3]
2061:..\src/interruptions.c ****         interrupt_manager();
 6915              		.loc 1 2061 0
 6916 0c56 FFF7FEFF 		bl	interrupt_manager
 6917              	.L432:
2062:..\src/interruptions.c ****     }
2063:..\src/interruptions.c ****     
2064:..\src/interruptions.c ****     // Read also EMG additional sensors port
2065:..\src/interruptions.c ****     if (NUM_OF_ANALOG_INPUTS > 6) {
 6918              		.loc 1 2065 0
 6919 0c5a 344B     		ldr	r3, .L461+28
 6920 0c5c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6921 0c5e 062B     		cmp	r3, #6
 6922 0c60 52D9     		bls	.L452
2066:..\src/interruptions.c ****         
2067:..\src/interruptions.c ****         for (idx = 0; idx < NUM_OF_ADDITIONAL_EMGS; idx++){
 6923              		.loc 1 2067 0
 6924 0c62 2B4B     		ldr	r3, .L461
 6925 0c64 0022     		movs	r2, #0
 6926 0c66 1A70     		strb	r2, [r3]
 6927 0c68 4AE0     		b	.L434
 6928              	.L441:
2068:..\src/interruptions.c ****             
2069:..\src/interruptions.c ****             i_aux = (int32)(ADC_buf[6 + idx]);
 6929              		.loc 1 2069 0
 6930 0c6a 294B     		ldr	r3, .L461
 6931 0c6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6932 0c6e 0633     		adds	r3, r3, #6
 6933 0c70 2F4A     		ldr	r2, .L461+32
 6934 0c72 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 6935 0c76 7B60     		str	r3, [r7, #4]
2070:..\src/interruptions.c ****             if (i_aux < 0) 
 6936              		.loc 1 2070 0
 6937 0c78 7B68     		ldr	r3, [r7, #4]
 6938 0c7a 002B     		cmp	r3, #0
 6939 0c7c 01DA     		bge	.L435
2071:..\src/interruptions.c ****                 i_aux = 0;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 162


 6940              		.loc 1 2071 0
 6941 0c7e 0023     		movs	r3, #0
 6942 0c80 7B60     		str	r3, [r7, #4]
 6943              	.L435:
2072:..\src/interruptions.c ****             i_aux = filter(i_aux, &filt_emg[2+idx]);
 6944              		.loc 1 2072 0
 6945 0c82 234B     		ldr	r3, .L461
 6946 0c84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6947 0c86 0233     		adds	r3, r3, #2
 6948 0c88 DB00     		lsls	r3, r3, #3
 6949 0c8a 2A4A     		ldr	r2, .L461+36
 6950 0c8c 1344     		add	r3, r3, r2
 6951 0c8e 1946     		mov	r1, r3
 6952 0c90 7868     		ldr	r0, [r7, #4]
 6953 0c92 FFF7FEFF 		bl	filter
 6954 0c96 7860     		str	r0, [r7, #4]
2073:..\src/interruptions.c ****             i_aux = (i_aux << 10) / 1024;
 6955              		.loc 1 2073 0
 6956 0c98 7B68     		ldr	r3, [r7, #4]
 6957 0c9a 9B02     		lsls	r3, r3, #10
 6958 0c9c 002B     		cmp	r3, #0
 6959 0c9e 01DA     		bge	.L436
 6960 0ca0 03F2FF33 		addw	r3, r3, #1023
 6961              	.L436:
 6962 0ca4 9B12     		asrs	r3, r3, #10
 6963 0ca6 7B60     		str	r3, [r7, #4]
2074:..\src/interruptions.c **** 
2075:..\src/interruptions.c ****             if (interrupt_flag){
 6964              		.loc 1 2075 0
 6965 0ca8 1F4B     		ldr	r3, .L461+24
 6966 0caa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6967 0cac 002B     		cmp	r3, #0
 6968 0cae 04D0     		beq	.L437
2076:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 6969              		.loc 1 2076 0
 6970 0cb0 1D4B     		ldr	r3, .L461+24
 6971 0cb2 0022     		movs	r2, #0
 6972 0cb4 1A70     		strb	r2, [r3]
2077:..\src/interruptions.c ****                 interrupt_manager();
 6973              		.loc 1 2077 0
 6974 0cb6 FFF7FEFF 		bl	interrupt_manager
 6975              	.L437:
2078:..\src/interruptions.c ****             }
2079:..\src/interruptions.c ****             //Saturation
2080:..\src/interruptions.c ****             if (i_aux < 0)
 6976              		.loc 1 2080 0
 6977 0cba 7B68     		ldr	r3, [r7, #4]
 6978 0cbc 002B     		cmp	r3, #0
 6979 0cbe 02DA     		bge	.L438
2081:..\src/interruptions.c ****                 i_aux = 0;
 6980              		.loc 1 2081 0
 6981 0cc0 0023     		movs	r3, #0
 6982 0cc2 7B60     		str	r3, [r7, #4]
 6983 0cc4 06E0     		b	.L439
 6984              	.L438:
2082:..\src/interruptions.c ****             else 
2083:..\src/interruptions.c ****                 if (i_aux > 1024) 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 163


 6985              		.loc 1 2083 0
 6986 0cc6 7B68     		ldr	r3, [r7, #4]
 6987 0cc8 B3F5806F 		cmp	r3, #1024
 6988 0ccc 02DD     		ble	.L439
2084:..\src/interruptions.c ****                     i_aux = 1024;
 6989              		.loc 1 2084 0
 6990 0cce 4FF48063 		mov	r3, #1024
 6991 0cd2 7B60     		str	r3, [r7, #4]
 6992              	.L439:
2085:..\src/interruptions.c ****             
2086:..\src/interruptions.c ****             g_emg_meas.add_emg[idx] = i_aux;
 6993              		.loc 1 2086 0
 6994 0cd4 0E4B     		ldr	r3, .L461
 6995 0cd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6996 0cd8 1749     		ldr	r1, .L461+40
 6997 0cda 0233     		adds	r3, r3, #2
 6998 0cdc 7A68     		ldr	r2, [r7, #4]
 6999 0cde 41F82320 		str	r2, [r1, r3, lsl #2]
2087:..\src/interruptions.c **** 
2088:..\src/interruptions.c ****             if (interrupt_flag){
 7000              		.loc 1 2088 0
 7001 0ce2 114B     		ldr	r3, .L461+24
 7002 0ce4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7003 0ce6 002B     		cmp	r3, #0
 7004 0ce8 04D0     		beq	.L440
2089:..\src/interruptions.c ****                 interrupt_flag = FALSE;
 7005              		.loc 1 2089 0
 7006 0cea 0F4B     		ldr	r3, .L461+24
 7007 0cec 0022     		movs	r2, #0
 7008 0cee 1A70     		strb	r2, [r3]
2090:..\src/interruptions.c ****                 interrupt_manager();
 7009              		.loc 1 2090 0
 7010 0cf0 FFF7FEFF 		bl	interrupt_manager
 7011              	.L440:
2067:..\src/interruptions.c ****             
 7012              		.loc 1 2067 0 discriminator 2
 7013 0cf4 064B     		ldr	r3, .L461
 7014 0cf6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7015 0cf8 0133     		adds	r3, r3, #1
 7016 0cfa DAB2     		uxtb	r2, r3
 7017 0cfc 044B     		ldr	r3, .L461
 7018 0cfe 1A70     		strb	r2, [r3]
 7019              	.L434:
2067:..\src/interruptions.c ****             
 7020              		.loc 1 2067 0 is_stmt 0 discriminator 1
 7021 0d00 034B     		ldr	r3, .L461
 7022 0d02 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7023 0d04 052B     		cmp	r3, #5
 7024 0d06 B0D9     		bls	.L441
 7025              	.L452:
2091:..\src/interruptions.c ****             }
2092:..\src/interruptions.c ****         }
2093:..\src/interruptions.c ****     }
2094:..\src/interruptions.c ****     
2095:..\src/interruptions.c **** }
 7026              		.loc 1 2095 0 is_stmt 1
 7027 0d08 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 164


 7028 0d0a 0C37     		adds	r7, r7, #12
 7029              		.cfi_def_cfa_offset 20
 7030 0d0c BD46     		mov	sp, r7
 7031              		.cfi_def_cfa_register 13
 7032              		@ sp needed
 7033 0d0e F0BD     		pop	{r4, r5, r6, r7, pc}
 7034              	.L462:
 7035              		.align	2
 7036              	.L461:
 7037 0d10 7A010000 		.word	idx.10501
 7038 0d14 00000000 		.word	c_mem
 7039 0d18 00000000 		.word	g_mem
 7040 0d1c 00000000 		.word	g_meas
 7041 0d20 00000000 		.word	g_ref
 7042 0d24 00000000 		.word	emg_2_status
 7043 0d28 00000000 		.word	interrupt_flag
 7044 0d2c 00000000 		.word	NUM_OF_ANALOG_INPUTS
 7045 0d30 00000000 		.word	ADC_buf
 7046 0d34 00000000 		.word	filt_emg
 7047 0d38 00000000 		.word	g_emg_meas
 7048              		.cfi_endproc
 7049              	.LFE71:
 7050              		.size	analog_read_end, .-analog_read_end
 7051              		.section	.text.overcurrent_control,"ax",%progbits
 7052              		.align	2
 7053              		.global	overcurrent_control
 7054              		.thumb
 7055              		.thumb_func
 7056              		.type	overcurrent_control, %function
 7057              	overcurrent_control:
 7058              	.LFB72:
2096:..\src/interruptions.c **** 
2097:..\src/interruptions.c **** //==============================================================================
2098:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
2099:..\src/interruptions.c **** //==============================================================================
2100:..\src/interruptions.c **** 
2101:..\src/interruptions.c **** void overcurrent_control() {
 7059              		.loc 1 2101 0
 7060              		.cfi_startproc
 7061              		@ args = 0, pretend = 0, frame = 8
 7062              		@ frame_needed = 1, uses_anonymous_args = 0
 7063              		@ link register save eliminated.
 7064 0000 80B4     		push	{r7}
 7065              		.cfi_def_cfa_offset 4
 7066              		.cfi_offset 7, -4
 7067 0002 83B0     		sub	sp, sp, #12
 7068              		.cfi_def_cfa_offset 16
 7069 0004 00AF     		add	r7, sp, #0
 7070              		.cfi_def_cfa_register 7
 7071              	.LBB2:
2102:..\src/interruptions.c ****     
2103:..\src/interruptions.c ****     for (uint8 i = 0; i <NUM_OF_MOTORS; i++) {
 7072              		.loc 1 2103 0
 7073 0006 0023     		movs	r3, #0
 7074 0008 FB71     		strb	r3, [r7, #7]
 7075 000a 59E0     		b	.L464
 7076              	.L468:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 165


2104:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7077              		.loc 1 2104 0
 7078 000c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7079 000e 3049     		ldr	r1, .L470
 7080 0010 1346     		mov	r3, r2
 7081 0012 DB00     		lsls	r3, r3, #3
 7082 0014 9B1A     		subs	r3, r3, r2
 7083 0016 1B01     		lsls	r3, r3, #4
 7084 0018 0B44     		add	r3, r3, r1
 7085 001a 03F58673 		add	r3, r3, #268
 7086 001e B3F90030 		ldrsh	r3, [r3]
 7087 0022 002B     		cmp	r3, #0
 7088 0024 49D0     		beq	.L465
2105:..\src/interruptions.c ****             // if the current is over the limit
2106:..\src/interruptions.c ****             if (g_meas[i].curr > c_mem.motor[i].current_limit) {
 7089              		.loc 1 2106 0
 7090 0026 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7091 0028 2A49     		ldr	r1, .L470+4
 7092 002a 1346     		mov	r3, r2
 7093 002c 5B00     		lsls	r3, r3, #1
 7094 002e 1344     		add	r3, r3, r2
 7095 0030 1B01     		lsls	r3, r3, #4
 7096 0032 0B44     		add	r3, r3, r1
 7097 0034 0C33     		adds	r3, r3, #12
 7098 0036 1968     		ldr	r1, [r3]
 7099 0038 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7100 003a 2548     		ldr	r0, .L470
 7101 003c 1346     		mov	r3, r2
 7102 003e DB00     		lsls	r3, r3, #3
 7103 0040 9B1A     		subs	r3, r3, r2
 7104 0042 1B01     		lsls	r3, r3, #4
 7105 0044 0344     		add	r3, r3, r0
 7106 0046 03F58673 		add	r3, r3, #268
 7107 004a B3F90030 		ldrsh	r3, [r3]
 7108 004e 9942     		cmp	r1, r3
 7109 0050 07DD     		ble	.L466
2107:..\src/interruptions.c ****                 //decrease pwm_limit
2108:..\src/interruptions.c ****                 dev_pwm_limit[i]--;
 7110              		.loc 1 2108 0
 7111 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7112 0054 204A     		ldr	r2, .L470+8
 7113 0056 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7114 0058 013A     		subs	r2, r2, #1
 7115 005a D1B2     		uxtb	r1, r2
 7116 005c 1E4A     		ldr	r2, .L470+8
 7117 005e D154     		strb	r1, [r2, r3]
 7118 0060 1DE0     		b	.L469
 7119              	.L466:
2109:..\src/interruptions.c ****             // if the current is in the safe zone
2110:..\src/interruptions.c ****             } else if (g_meas[i].curr < (c_mem.motor[i].current_limit - CURRENT_HYSTERESIS)) {
 7120              		.loc 1 2110 0
 7121 0062 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7122 0064 1B49     		ldr	r1, .L470+4
 7123 0066 1346     		mov	r3, r2
 7124 0068 5B00     		lsls	r3, r3, #1
 7125 006a 1344     		add	r3, r3, r2
 7126 006c 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 166


 7127 006e 0B44     		add	r3, r3, r1
 7128 0070 0C33     		adds	r3, r3, #12
 7129 0072 1968     		ldr	r1, [r3]
 7130 0074 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7131 0076 1648     		ldr	r0, .L470
 7132 0078 1346     		mov	r3, r2
 7133 007a DB00     		lsls	r3, r3, #3
 7134 007c 9B1A     		subs	r3, r3, r2
 7135 007e 1B01     		lsls	r3, r3, #4
 7136 0080 0344     		add	r3, r3, r0
 7137 0082 03F58673 		add	r3, r3, #268
 7138 0086 B3F90030 		ldrsh	r3, [r3]
 7139 008a 0A3B     		subs	r3, r3, #10
 7140 008c 9942     		cmp	r1, r3
 7141 008e 06DA     		bge	.L469
2111:..\src/interruptions.c ****                 //increase pwm_limit
2112:..\src/interruptions.c ****                 dev_pwm_limit[i]++;
 7142              		.loc 1 2112 0
 7143 0090 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7144 0092 114A     		ldr	r2, .L470+8
 7145 0094 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7146 0096 0132     		adds	r2, r2, #1
 7147 0098 D1B2     		uxtb	r1, r2
 7148 009a 0F4A     		ldr	r2, .L470+8
 7149 009c D154     		strb	r1, [r2, r3]
 7150              	.L469:
2113:..\src/interruptions.c ****             }
2114:..\src/interruptions.c **** 
2115:..\src/interruptions.c ****             // Bound pwm_limit
2116:..\src/interruptions.c ****             if (dev_pwm_limit[i] < 0) 
2117:..\src/interruptions.c ****                 dev_pwm_limit[i] = 0;
2118:..\src/interruptions.c ****             else 
2119:..\src/interruptions.c ****                 if (dev_pwm_limit[i] > dev_pwm_sat[i]) 
 7151              		.loc 1 2119 0
 7152 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7153 00a0 0D4A     		ldr	r2, .L470+8
 7154 00a2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 7155 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7156 00a6 0D49     		ldr	r1, .L470+12
 7157 00a8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7158 00aa 9A42     		cmp	r2, r3
 7159 00ac 05D9     		bls	.L465
2120:..\src/interruptions.c ****                     dev_pwm_limit[i] = dev_pwm_sat[i];
 7160              		.loc 1 2120 0
 7161 00ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7162 00b0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7163 00b2 0A49     		ldr	r1, .L470+12
 7164 00b4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 7165 00b6 084A     		ldr	r2, .L470+8
 7166 00b8 D154     		strb	r1, [r2, r3]
 7167              	.L465:
2103:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7168              		.loc 1 2103 0 discriminator 2
 7169 00ba FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7170 00bc 0133     		adds	r3, r3, #1
 7171 00be FB71     		strb	r3, [r7, #7]
 7172              	.L464:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 167


2103:..\src/interruptions.c ****         if (c_mem.motor[i].current_limit != 0) {
 7173              		.loc 1 2103 0 is_stmt 0 discriminator 1
 7174 00c0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7175 00c2 012B     		cmp	r3, #1
 7176 00c4 A2D9     		bls	.L468
 7177              	.LBE2:
2121:..\src/interruptions.c ****         }
2122:..\src/interruptions.c ****     }
2123:..\src/interruptions.c **** }
 7178              		.loc 1 2123 0 is_stmt 1
 7179 00c6 00BF     		nop
 7180 00c8 0C37     		adds	r7, r7, #12
 7181              		.cfi_def_cfa_offset 4
 7182 00ca BD46     		mov	sp, r7
 7183              		.cfi_def_cfa_register 13
 7184              		@ sp needed
 7185 00cc 80BC     		pop	{r7}
 7186              		.cfi_restore 7
 7187              		.cfi_def_cfa_offset 0
 7188 00ce 7047     		bx	lr
 7189              	.L471:
 7190              		.align	2
 7191              	.L470:
 7192 00d0 00000000 		.word	c_mem
 7193 00d4 00000000 		.word	g_meas
 7194 00d8 00000000 		.word	dev_pwm_limit
 7195 00dc 00000000 		.word	dev_pwm_sat
 7196              		.cfi_endproc
 7197              	.LFE72:
 7198              		.size	overcurrent_control, .-overcurrent_control
 7199              		.section	.text.pwm_limit_search,"ax",%progbits
 7200              		.align	2
 7201              		.global	pwm_limit_search
 7202              		.thumb
 7203              		.thumb_func
 7204              		.type	pwm_limit_search, %function
 7205              	pwm_limit_search:
 7206              	.LFB73:
2124:..\src/interruptions.c **** 
2125:..\src/interruptions.c **** //==============================================================================
2126:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
2127:..\src/interruptions.c **** //==============================================================================
2128:..\src/interruptions.c **** 
2129:..\src/interruptions.c **** void pwm_limit_search(uint8 mot_idx) {
 7207              		.loc 1 2129 0
 7208              		.cfi_startproc
 7209              		@ args = 0, pretend = 0, frame = 16
 7210              		@ frame_needed = 1, uses_anonymous_args = 0
 7211              		@ link register save eliminated.
 7212 0000 80B4     		push	{r7}
 7213              		.cfi_def_cfa_offset 4
 7214              		.cfi_offset 7, -4
 7215 0002 85B0     		sub	sp, sp, #20
 7216              		.cfi_def_cfa_offset 24
 7217 0004 00AF     		add	r7, sp, #0
 7218              		.cfi_def_cfa_register 7
 7219 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 168


 7220 0008 FB71     		strb	r3, [r7, #7]
2130:..\src/interruptions.c **** 
2131:..\src/interruptions.c ****     uint8 CYDATA index;
2132:..\src/interruptions.c ****     uint16 CYDATA max_tension = 25500;
 7221              		.loc 1 2132 0
 7222 000a 46F29C33 		movw	r3, #25500
 7223 000e FB81     		strh	r3, [r7, #14]	@ movhi
2133:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 7224              		.loc 1 2133 0
 7225 0010 42F6EC43 		movw	r3, #11500
 7226 0014 BB81     		strh	r3, [r7, #12]	@ movhi
2134:..\src/interruptions.c ****     
2135:..\src/interruptions.c ****     if (dev_tension[mot_idx] > max_tension) {
 7227              		.loc 1 2135 0
 7228 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7229 0018 144A     		ldr	r2, .L477
 7230 001a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7231 001e FB89     		ldrh	r3, [r7, #14]
 7232 0020 9A42     		cmp	r2, r3
 7233 0022 04DD     		ble	.L473
2136:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 0;
 7234              		.loc 1 2136 0
 7235 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7236 0026 124A     		ldr	r2, .L477+4
 7237 0028 0021     		movs	r1, #0
 7238 002a D154     		strb	r1, [r2, r3]
2137:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
2138:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = 100;
2139:..\src/interruptions.c ****     } else {
2140:..\src/interruptions.c ****         index = (uint8)((dev_tension[mot_idx] - min_tension) >> 9);
2141:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
2142:..\src/interruptions.c ****     }
2143:..\src/interruptions.c **** }
 7239              		.loc 1 2143 0
 7240 002c 19E0     		b	.L476
 7241              	.L473:
2137:..\src/interruptions.c ****     } else if (dev_tension[mot_idx] < min_tension) {
 7242              		.loc 1 2137 0
 7243 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7244 0030 0E4A     		ldr	r2, .L477
 7245 0032 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7246 0036 BB89     		ldrh	r3, [r7, #12]
 7247 0038 9A42     		cmp	r2, r3
 7248 003a 04DA     		bge	.L475
2138:..\src/interruptions.c ****     } else {
 7249              		.loc 1 2138 0
 7250 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7251 003e 0C4A     		ldr	r2, .L477+4
 7252 0040 6421     		movs	r1, #100
 7253 0042 D154     		strb	r1, [r2, r3]
 7254              		.loc 1 2143 0
 7255 0044 0DE0     		b	.L476
 7256              	.L475:
2140:..\src/interruptions.c ****         dev_pwm_sat[mot_idx] = pwm_preload_values[index];
 7257              		.loc 1 2140 0
 7258 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7259 0048 084A     		ldr	r2, .L477
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 169


 7260 004a 52F82320 		ldr	r2, [r2, r3, lsl #2]
 7261 004e BB89     		ldrh	r3, [r7, #12]
 7262 0050 D31A     		subs	r3, r2, r3
 7263 0052 5B12     		asrs	r3, r3, #9
 7264 0054 FB72     		strb	r3, [r7, #11]
2141:..\src/interruptions.c ****     }
 7265              		.loc 1 2141 0
 7266 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7267 0058 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 7268 005a 0649     		ldr	r1, .L477+8
 7269 005c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 7270 005e 044A     		ldr	r2, .L477+4
 7271 0060 D154     		strb	r1, [r2, r3]
 7272              	.L476:
 7273              		.loc 1 2143 0
 7274 0062 00BF     		nop
 7275 0064 1437     		adds	r7, r7, #20
 7276              		.cfi_def_cfa_offset 4
 7277 0066 BD46     		mov	sp, r7
 7278              		.cfi_def_cfa_register 13
 7279              		@ sp needed
 7280 0068 80BC     		pop	{r7}
 7281              		.cfi_restore 7
 7282              		.cfi_def_cfa_offset 0
 7283 006a 7047     		bx	lr
 7284              	.L478:
 7285              		.align	2
 7286              	.L477:
 7287 006c 00000000 		.word	dev_tension
 7288 0070 00000000 		.word	dev_pwm_sat
 7289 0074 00000000 		.word	pwm_preload_values
 7290              		.cfi_endproc
 7291              	.LFE73:
 7292              		.size	pwm_limit_search, .-pwm_limit_search
 7293              		.section	.text.cycles_counter_update,"ax",%progbits
 7294              		.align	2
 7295              		.global	cycles_counter_update
 7296              		.thumb
 7297              		.thumb_func
 7298              		.type	cycles_counter_update, %function
 7299              	cycles_counter_update:
 7300              	.LFB74:
2144:..\src/interruptions.c **** 
2145:..\src/interruptions.c **** //==============================================================================
2146:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
2147:..\src/interruptions.c **** //==============================================================================
2148:..\src/interruptions.c **** 
2149:..\src/interruptions.c **** void cycles_counter_update() {
 7301              		.loc 1 2149 0
 7302              		.cfi_startproc
 7303              		@ args = 0, pretend = 0, frame = 24
 7304              		@ frame_needed = 1, uses_anonymous_args = 0
 7305 0000 80B5     		push	{r7, lr}
 7306              		.cfi_def_cfa_offset 8
 7307              		.cfi_offset 7, -8
 7308              		.cfi_offset 14, -4
 7309 0002 86B0     		sub	sp, sp, #24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 170


 7310              		.cfi_def_cfa_offset 32
 7311 0004 00AF     		add	r7, sp, #0
 7312              		.cfi_def_cfa_register 7
2150:..\src/interruptions.c **** 	static uint8 pos_cycle_status = STATE_INACTIVE;
2151:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
2152:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
2153:..\src/interruptions.c ****     static int32 bin_threshold = 250;
2154:..\src/interruptions.c ****     static int32 thr_pos = 0, max_pos = 0;
2155:..\src/interruptions.c ****     uint8 i, bin_st, bin_max;
2156:..\src/interruptions.c ****     int32 curr_pos, curr_off;
2157:..\src/interruptions.c ****     int32 step;
2158:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
2159:..\src/interruptions.c **** 
2160:..\src/interruptions.c ****     curr_pos = (int32)(g_meas[g_mem.motor[0].encoder_line].pos[0] >> g_mem.enc[0].res[0]);
 7313              		.loc 1 2160 0
 7314 0006 9A4B     		ldr	r3, .L519
 7315 0008 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7316 000c 1946     		mov	r1, r3
 7317 000e 994A     		ldr	r2, .L519+4
 7318 0010 0B46     		mov	r3, r1
 7319 0012 5B00     		lsls	r3, r3, #1
 7320 0014 0B44     		add	r3, r3, r1
 7321 0016 1B01     		lsls	r3, r3, #4
 7322 0018 1344     		add	r3, r3, r2
 7323 001a 1B68     		ldr	r3, [r3]
 7324 001c 944A     		ldr	r2, .L519
 7325 001e 92F89521 		ldrb	r2, [r2, #405]	@ zero_extendqisi2
 7326 0022 1341     		asrs	r3, r3, r2
 7327 0024 3B61     		str	r3, [r7, #16]
2161:..\src/interruptions.c ****     
2162:..\src/interruptions.c ****     // State machine - Evaluate position counter update
2163:..\src/interruptions.c ****     switch (pos_cycle_status){
 7328              		.loc 1 2163 0
 7329 0026 944B     		ldr	r3, .L519+8
 7330 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7331 002a 012B     		cmp	r3, #1
 7332 002c 29D0     		beq	.L481
 7333 002e 022B     		cmp	r3, #2
 7334 0030 4DD0     		beq	.L482
 7335 0032 002B     		cmp	r3, #0
 7336 0034 40F0E280 		bne	.L480
2164:..\src/interruptions.c ****         case STATE_INACTIVE:
2165:..\src/interruptions.c ****             if (pwm_sign == 1){
 7337              		.loc 1 2165 0
 7338 0038 904B     		ldr	r3, .L519+12
 7339 003a 93F90030 		ldrsb	r3, [r3]
 7340 003e 012B     		cmp	r3, #1
 7341 0040 40F0D980 		bne	.L513
2166:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 7342              		.loc 1 2166 0
 7343 0044 8E4A     		ldr	r2, .L519+16
 7344 0046 3B69     		ldr	r3, [r7, #16]
 7345 0048 1360     		str	r3, [r2]
2167:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7346              		.loc 1 2167 0
 7347 004a 8E4B     		ldr	r3, .L519+20
 7348 004c 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 171


 7349 004e 8C4B     		ldr	r3, .L519+16
 7350 0050 1B68     		ldr	r3, [r3]
 7351 0052 9A42     		cmp	r2, r3
 7352 0054 05DD     		ble	.L485
 7353              		.loc 1 2167 0 is_stmt 0 discriminator 1
 7354 0056 8B4B     		ldr	r3, .L519+20
 7355 0058 1A68     		ldr	r2, [r3]
 7356 005a 894B     		ldr	r3, .L519+16
 7357 005c 1B68     		ldr	r3, [r3]
 7358 005e D31A     		subs	r3, r2, r3
 7359 0060 04E0     		b	.L486
 7360              	.L485:
 7361              		.loc 1 2167 0 discriminator 2
 7362 0062 874B     		ldr	r3, .L519+16
 7363 0064 1A68     		ldr	r2, [r3]
 7364 0066 874B     		ldr	r3, .L519+20
 7365 0068 1B68     		ldr	r3, [r3]
 7366 006a D31A     		subs	r3, r2, r3
 7367              	.L486:
 7368              		.loc 1 2167 0 discriminator 4
 7369 006c FB60     		str	r3, [r7, #12]
2168:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum opening track
 7370              		.loc 1 2168 0 is_stmt 1 discriminator 4
 7371 006e 804B     		ldr	r3, .L519
 7372 0070 5A6D     		ldr	r2, [r3, #84]
 7373 0072 FB68     		ldr	r3, [r7, #12]
 7374 0074 1344     		add	r3, r3, r2
 7375 0076 7E4A     		ldr	r2, .L519
 7376 0078 5365     		str	r3, [r2, #84]
2169:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 7377              		.loc 1 2169 0 discriminator 4
 7378 007a 7F4B     		ldr	r3, .L519+8
 7379 007c 0122     		movs	r2, #1
 7380 007e 1A70     		strb	r2, [r3]
2170:..\src/interruptions.c ****             }
2171:..\src/interruptions.c ****             break;
 7381              		.loc 1 2171 0 discriminator 4
 7382 0080 B9E0     		b	.L513
 7383              	.L481:
2172:..\src/interruptions.c ****         case STATE_ACTIVE:
2173:..\src/interruptions.c ****             if (pwm_sign == -1){
 7384              		.loc 1 2173 0
 7385 0082 7E4B     		ldr	r3, .L519+12
 7386 0084 93F90030 		ldrsb	r3, [r3]
 7387 0088 B3F1FF3F 		cmp	r3, #-1
 7388 008c 40F0B580 		bne	.L514
2174:..\src/interruptions.c ****                 max_pos = curr_pos;
 7389              		.loc 1 2174 0
 7390 0090 7C4A     		ldr	r2, .L519+20
 7391 0092 3B69     		ldr	r3, [r7, #16]
 7392 0094 1360     		str	r3, [r2]
2175:..\src/interruptions.c ****                 curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7393              		.loc 1 2175 0
 7394 0096 7B4B     		ldr	r3, .L519+20
 7395 0098 1A68     		ldr	r2, [r3]
 7396 009a 794B     		ldr	r3, .L519+16
 7397 009c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 172


 7398 009e 9A42     		cmp	r2, r3
 7399 00a0 05DD     		ble	.L488
 7400              		.loc 1 2175 0 is_stmt 0 discriminator 1
 7401 00a2 784B     		ldr	r3, .L519+20
 7402 00a4 1A68     		ldr	r2, [r3]
 7403 00a6 764B     		ldr	r3, .L519+16
 7404 00a8 1B68     		ldr	r3, [r3]
 7405 00aa D31A     		subs	r3, r2, r3
 7406 00ac 04E0     		b	.L489
 7407              	.L488:
 7408              		.loc 1 2175 0 discriminator 2
 7409 00ae 744B     		ldr	r3, .L519+16
 7410 00b0 1A68     		ldr	r2, [r3]
 7411 00b2 744B     		ldr	r3, .L519+20
 7412 00b4 1B68     		ldr	r3, [r3]
 7413 00b6 D31A     		subs	r3, r2, r3
 7414              	.L489:
 7415              		.loc 1 2175 0 discriminator 4
 7416 00b8 FB60     		str	r3, [r7, #12]
2176:..\src/interruptions.c ****                 g_mem.cnt.wire_disp = g_mem.cnt.wire_disp + curr_off;     //sum closure track
 7417              		.loc 1 2176 0 is_stmt 1 discriminator 4
 7418 00ba 6D4B     		ldr	r3, .L519
 7419 00bc 5A6D     		ldr	r2, [r3, #84]
 7420 00be FB68     		ldr	r3, [r7, #12]
 7421 00c0 1344     		add	r3, r3, r2
 7422 00c2 6B4A     		ldr	r2, .L519
 7423 00c4 5365     		str	r3, [r2, #84]
2177:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 7424              		.loc 1 2177 0 discriminator 4
 7425 00c6 6C4B     		ldr	r3, .L519+8
 7426 00c8 0222     		movs	r2, #2
 7427 00ca 1A70     		strb	r2, [r3]
2178:..\src/interruptions.c ****             }
2179:..\src/interruptions.c ****             break;
 7428              		.loc 1 2179 0 discriminator 4
 7429 00cc 95E0     		b	.L514
 7430              	.L482:
2180:..\src/interruptions.c ****         case COUNTER_INC:
2181:..\src/interruptions.c **** 
2182:..\src/interruptions.c ****             curr_off = (max_pos>thr_pos)?(max_pos-thr_pos):(thr_pos-max_pos);
 7431              		.loc 1 2182 0
 7432 00ce 6D4B     		ldr	r3, .L519+20
 7433 00d0 1A68     		ldr	r2, [r3]
 7434 00d2 6B4B     		ldr	r3, .L519+16
 7435 00d4 1B68     		ldr	r3, [r3]
 7436 00d6 9A42     		cmp	r2, r3
 7437 00d8 05DD     		ble	.L490
 7438              		.loc 1 2182 0 is_stmt 0 discriminator 1
 7439 00da 6A4B     		ldr	r3, .L519+20
 7440 00dc 1A68     		ldr	r2, [r3]
 7441 00de 684B     		ldr	r3, .L519+16
 7442 00e0 1B68     		ldr	r3, [r3]
 7443 00e2 D31A     		subs	r3, r2, r3
 7444 00e4 04E0     		b	.L491
 7445              	.L490:
 7446              		.loc 1 2182 0 discriminator 2
 7447 00e6 664B     		ldr	r3, .L519+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 173


 7448 00e8 1A68     		ldr	r2, [r3]
 7449 00ea 664B     		ldr	r3, .L519+20
 7450 00ec 1B68     		ldr	r3, [r3]
 7451 00ee D31A     		subs	r3, r2, r3
 7452              	.L491:
 7453              		.loc 1 2182 0 discriminator 4
 7454 00f0 FB60     		str	r3, [r7, #12]
2183:..\src/interruptions.c ****             if (curr_off > bin_threshold){
 7455              		.loc 1 2183 0 is_stmt 1 discriminator 4
 7456 00f2 654B     		ldr	r3, .L519+24
 7457 00f4 1B68     		ldr	r3, [r3]
 7458 00f6 FA68     		ldr	r2, [r7, #12]
 7459 00f8 9A42     		cmp	r2, r3
 7460 00fa 78DD     		ble	.L492
2184:..\src/interruptions.c ****                 //update position histogram
2185:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].pos_lim_sup >> g_mem.enc[0].res[0]) / 10);
 7461              		.loc 1 2185 0
 7462 00fc 5C4B     		ldr	r3, .L519
 7463 00fe D3F8E830 		ldr	r3, [r3, #232]
 7464 0102 5B4A     		ldr	r2, .L519
 7465 0104 92F89521 		ldrb	r2, [r2, #405]	@ zero_extendqisi2
 7466 0108 1341     		asrs	r3, r3, r2
 7467 010a 604A     		ldr	r2, .L519+28
 7468 010c 82FB0312 		smull	r1, r2, r2, r3
 7469 0110 9210     		asrs	r2, r2, #2
 7470 0112 DB17     		asrs	r3, r3, #31
 7471 0114 D31A     		subs	r3, r2, r3
 7472 0116 BB60     		str	r3, [r7, #8]
2186:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 7473              		.loc 1 2186 0
 7474 0118 594B     		ldr	r3, .L519+16
 7475 011a 1A68     		ldr	r2, [r3]
 7476 011c BB68     		ldr	r3, [r7, #8]
 7477 011e 92FBF3F3 		sdiv	r3, r2, r3
 7478 0122 FB71     		strb	r3, [r7, #7]
2187:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 7479              		.loc 1 2187 0
 7480 0124 574B     		ldr	r3, .L519+20
 7481 0126 1A68     		ldr	r2, [r3]
 7482 0128 BB68     		ldr	r3, [r7, #8]
 7483 012a 92FBF3F3 		sdiv	r3, r2, r3
 7484 012e BB71     		strb	r3, [r7, #6]
2188:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7485              		.loc 1 2188 0
 7486 0130 FB79     		ldrb	r3, [r7, #7]
 7487 0132 FB75     		strb	r3, [r7, #23]
 7488 0134 0DE0     		b	.L493
 7489              	.L494:
2189:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while closing
2190:..\src/interruptions.c ****                     g_mem.cnt.position_hist[i] = g_mem.cnt.position_hist[i] + 1;
 7490              		.loc 1 2190 0 discriminator 3
 7491 0136 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7492 0138 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7493 013a 4D49     		ldr	r1, .L519
 7494 013c 0632     		adds	r2, r2, #6
 7495 013e 51F82220 		ldr	r2, [r1, r2, lsl #2]
 7496 0142 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 174


 7497 0144 4A49     		ldr	r1, .L519
 7498 0146 0633     		adds	r3, r3, #6
 7499 0148 41F82320 		str	r2, [r1, r3, lsl #2]
2188:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7500              		.loc 1 2188 0 discriminator 3
 7501 014c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7502 014e 0133     		adds	r3, r3, #1
 7503 0150 FB75     		strb	r3, [r7, #23]
 7504              	.L493:
2188:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 7505              		.loc 1 2188 0 is_stmt 0 discriminator 1
 7506 0152 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7507 0154 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 7508 0156 9A42     		cmp	r2, r3
 7509 0158 EDD9     		bls	.L494
2191:..\src/interruptions.c ****                 }
2192:..\src/interruptions.c ****                 
2193:..\src/interruptions.c ****                 //update current histogram
2194:..\src/interruptions.c ****                 step = ((int32)(g_mem.motor[0].current_limit) / 4);
 7510              		.loc 1 2194 0 is_stmt 1
 7511 015a 454B     		ldr	r3, .L519
 7512 015c B3F90C31 		ldrsh	r3, [r3, #268]
 7513 0160 002B     		cmp	r3, #0
 7514 0162 00DA     		bge	.L495
 7515 0164 0333     		adds	r3, r3, #3
 7516              	.L495:
 7517 0166 9B10     		asrs	r3, r3, #2
 7518 0168 1BB2     		sxth	r3, r3
 7519 016a BB60     		str	r3, [r7, #8]
2195:..\src/interruptions.c ****                 if (g_meas[g_mem.motor[0].encoder_line].curr > g_mem.motor[0].current_limit)
 7520              		.loc 1 2195 0
 7521 016c 404B     		ldr	r3, .L519
 7522 016e 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7523 0172 1946     		mov	r1, r3
 7524 0174 3F4A     		ldr	r2, .L519+4
 7525 0176 0B46     		mov	r3, r1
 7526 0178 5B00     		lsls	r3, r3, #1
 7527 017a 0B44     		add	r3, r3, r1
 7528 017c 1B01     		lsls	r3, r3, #4
 7529 017e 1344     		add	r3, r3, r2
 7530 0180 0C33     		adds	r3, r3, #12
 7531 0182 1B68     		ldr	r3, [r3]
 7532 0184 3A4A     		ldr	r2, .L519
 7533 0186 B2F90C21 		ldrsh	r2, [r2, #268]
 7534 018a 9342     		cmp	r3, r2
 7535 018c 05DD     		ble	.L496
2196:..\src/interruptions.c ****                     g_mem.cnt.current_hist[3] = g_mem.cnt.current_hist[3] + 1; 
 7536              		.loc 1 2196 0
 7537 018e 384B     		ldr	r3, .L519
 7538 0190 DB6C     		ldr	r3, [r3, #76]
 7539 0192 0133     		adds	r3, r3, #1
 7540 0194 364A     		ldr	r2, .L519
 7541 0196 D364     		str	r3, [r2, #76]
 7542 0198 29E0     		b	.L492
 7543              	.L496:
2197:..\src/interruptions.c ****                 else
2198:..\src/interruptions.c ****                     g_mem.cnt.current_hist[(uint8)(g_meas[g_mem.motor[0].encoder_line].curr/step)] 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 175


 7544              		.loc 1 2198 0
 7545 019a 354B     		ldr	r3, .L519
 7546 019c 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7547 01a0 1946     		mov	r1, r3
 7548 01a2 344A     		ldr	r2, .L519+4
 7549 01a4 0B46     		mov	r3, r1
 7550 01a6 5B00     		lsls	r3, r3, #1
 7551 01a8 0B44     		add	r3, r3, r1
 7552 01aa 1B01     		lsls	r3, r3, #4
 7553 01ac 1344     		add	r3, r3, r2
 7554 01ae 0C33     		adds	r3, r3, #12
 7555 01b0 1A68     		ldr	r2, [r3]
 7556 01b2 BB68     		ldr	r3, [r7, #8]
 7557 01b4 92FBF3F3 		sdiv	r3, r2, r3
 7558 01b8 D9B2     		uxtb	r1, r3
 7559 01ba 2D4B     		ldr	r3, .L519
 7560 01bc 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 7561 01c0 1846     		mov	r0, r3
 7562 01c2 2C4A     		ldr	r2, .L519+4
 7563 01c4 0346     		mov	r3, r0
 7564 01c6 5B00     		lsls	r3, r3, #1
 7565 01c8 0344     		add	r3, r3, r0
 7566 01ca 1B01     		lsls	r3, r3, #4
 7567 01cc 1344     		add	r3, r3, r2
 7568 01ce 0C33     		adds	r3, r3, #12
 7569 01d0 1A68     		ldr	r2, [r3]
 7570 01d2 BB68     		ldr	r3, [r7, #8]
 7571 01d4 92FBF3F3 		sdiv	r3, r2, r3
 7572 01d8 DBB2     		uxtb	r3, r3
 7573 01da 254A     		ldr	r2, .L519
 7574 01dc 1033     		adds	r3, r3, #16
 7575 01de 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7576 01e2 5A1C     		adds	r2, r3, #1
 7577 01e4 2248     		ldr	r0, .L519
 7578 01e6 01F11003 		add	r3, r1, #16
 7579 01ea 40F82320 		str	r2, [r0, r3, lsl #2]
 7580              	.L492:
2199:..\src/interruptions.c ****             }
2200:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 7581              		.loc 1 2200 0
 7582 01ee 224B     		ldr	r3, .L519+8
 7583 01f0 0022     		movs	r2, #0
 7584 01f2 1A70     		strb	r2, [r3]
2201:..\src/interruptions.c ****             break;
 7585              		.loc 1 2201 0
 7586 01f4 02E0     		b	.L480
 7587              	.L513:
2171:..\src/interruptions.c ****         case STATE_ACTIVE:
 7588              		.loc 1 2171 0
 7589 01f6 00BF     		nop
 7590 01f8 00E0     		b	.L480
 7591              	.L514:
2179:..\src/interruptions.c ****         case COUNTER_INC:
 7592              		.loc 1 2179 0
 7593 01fa 00BF     		nop
 7594              	.L480:
2202:..\src/interruptions.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 176


2203:..\src/interruptions.c ****     
2204:..\src/interruptions.c ****     // State machine - Evaluate EMG counter update
2205:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 7595              		.loc 1 2205 0
 7596 01fc 0023     		movs	r3, #0
 7597 01fe FB75     		strb	r3, [r7, #23]
 7598 0200 4EE0     		b	.L497
 7599              	.L505:
2206:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7600              		.loc 1 2206 0
 7601 0202 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7602 0204 224A     		ldr	r2, .L519+32
 7603 0206 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7604 0208 012B     		cmp	r3, #1
 7605 020a 13D0     		beq	.L499
 7606 020c 022B     		cmp	r3, #2
 7607 020e 1CD0     		beq	.L500
 7608 0210 002B     		cmp	r3, #0
 7609 0212 42D1     		bne	.L498
2207:..\src/interruptions.c ****             case STATE_INACTIVE:
2208:..\src/interruptions.c ****                 if (g_emg_meas.emg[i] > g_mem.emg.emg_threshold[i]){
 7610              		.loc 1 2208 0
 7611 0214 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7612 0216 1F4A     		ldr	r2, .L519+36
 7613 0218 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7614 021c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7615 021e 1449     		ldr	r1, .L519
 7616 0220 F832     		adds	r2, r2, #248
 7617 0222 31F81220 		ldrh	r2, [r1, r2, lsl #1]
 7618 0226 9342     		cmp	r3, r2
 7619 0228 1FDD     		ble	.L515
2209:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 7620              		.loc 1 2209 0
 7621 022a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7622 022c 184A     		ldr	r2, .L519+32
 7623 022e 0121     		movs	r1, #1
 7624 0230 D154     		strb	r1, [r2, r3]
2210:..\src/interruptions.c ****                 }
2211:..\src/interruptions.c ****                 break;
 7625              		.loc 1 2211 0
 7626 0232 1AE0     		b	.L515
 7627              	.L499:
2212:..\src/interruptions.c ****             case STATE_ACTIVE:
2213:..\src/interruptions.c ****                 if (g_emg_meas.emg[i] < 10){
 7628              		.loc 1 2213 0
 7629 0234 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7630 0236 174A     		ldr	r2, .L519+36
 7631 0238 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7632 023c 092B     		cmp	r3, #9
 7633 023e 2BDC     		bgt	.L516
2214:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 7634              		.loc 1 2214 0
 7635 0240 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7636 0242 134A     		ldr	r2, .L519+32
 7637 0244 0221     		movs	r1, #2
 7638 0246 D154     		strb	r1, [r2, r3]
2215:..\src/interruptions.c ****                 }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 177


2216:..\src/interruptions.c ****                 break;
 7639              		.loc 1 2216 0
 7640 0248 26E0     		b	.L516
 7641              	.L500:
2217:..\src/interruptions.c ****             case COUNTER_INC:
2218:..\src/interruptions.c ****                 g_mem.cnt.emg_counter[i] = g_mem.cnt.emg_counter[i] + 1;
 7642              		.loc 1 2218 0
 7643 024a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7644 024c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7645 024e 0849     		ldr	r1, .L519
 7646 0250 0432     		adds	r2, r2, #4
 7647 0252 51F82220 		ldr	r2, [r1, r2, lsl #2]
 7648 0256 0132     		adds	r2, r2, #1
 7649 0258 0549     		ldr	r1, .L519
 7650 025a 0433     		adds	r3, r3, #4
 7651 025c 41F82320 		str	r2, [r1, r3, lsl #2]
2219:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 7652              		.loc 1 2219 0
 7653 0260 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7654 0262 0B4A     		ldr	r2, .L519+32
 7655 0264 0021     		movs	r1, #0
 7656 0266 D154     		strb	r1, [r2, r3]
2220:..\src/interruptions.c ****                 break;
 7657              		.loc 1 2220 0
 7658 0268 17E0     		b	.L498
 7659              	.L515:
2211:..\src/interruptions.c ****             case STATE_ACTIVE:
 7660              		.loc 1 2211 0
 7661 026a 00BF     		nop
 7662 026c 15E0     		b	.L498
 7663              	.L520:
 7664 026e 00BF     		.align	2
 7665              	.L519:
 7666 0270 00000000 		.word	g_mem
 7667 0274 00000000 		.word	g_meas
 7668 0278 84010000 		.word	pos_cycle_status.10557
 7669 027c 00000000 		.word	pwm_sign
 7670 0280 88010000 		.word	thr_pos.10561
 7671 0284 8C010000 		.word	max_pos.10562
 7672 0288 08000000 		.word	bin_threshold.10560
 7673 028c 67666666 		.word	1717986919
 7674 0290 90010000 		.word	emg_cycle_status.10558
 7675 0294 00000000 		.word	g_emg_meas
 7676              	.L516:
2216:..\src/interruptions.c ****             case COUNTER_INC:
 7677              		.loc 1 2216 0
 7678 0298 00BF     		nop
 7679              	.L498:
2205:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7680              		.loc 1 2205 0 discriminator 2
 7681 029a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 7682 029c 0133     		adds	r3, r3, #1
 7683 029e FB75     		strb	r3, [r7, #23]
 7684              	.L497:
2205:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7685              		.loc 1 2205 0 is_stmt 0 discriminator 1
 7686 02a0 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 178


 7687 02a2 012B     		cmp	r3, #1
 7688 02a4 07D8     		bhi	.L504
2205:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7689              		.loc 1 2205 0 discriminator 3
 7690 02a6 2C4B     		ldr	r3, .L521
 7691 02a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7692 02aa 002B     		cmp	r3, #0
 7693 02ac 03D1     		bne	.L504
2205:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 7694              		.loc 1 2205 0 discriminator 4
 7695 02ae 2B4B     		ldr	r3, .L521+4
 7696 02b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7697 02b2 002B     		cmp	r3, #0
 7698 02b4 A5D0     		beq	.L505
 7699              	.L504:
2221:..\src/interruptions.c ****         }
2222:..\src/interruptions.c ****     }
2223:..\src/interruptions.c ****     
2224:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
2225:..\src/interruptions.c ****     switch (rest_cycle_status){
 7700              		.loc 1 2225 0 is_stmt 1
 7701 02b6 2A4B     		ldr	r3, .L521+8
 7702 02b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7703 02ba 012B     		cmp	r3, #1
 7704 02bc 11D0     		beq	.L507
 7705 02be 022B     		cmp	r3, #2
 7706 02c0 29D0     		beq	.L508
 7707 02c2 002B     		cmp	r3, #0
 7708 02c4 41D1     		bne	.L506
2226:..\src/interruptions.c ****         case STATE_INACTIVE:
2227:..\src/interruptions.c ****             if (rest_enabled){
 7709              		.loc 1 2227 0
 7710 02c6 274B     		ldr	r3, .L521+12
 7711 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7712 02ca 002B     		cmp	r3, #0
 7713 02cc 3AD0     		beq	.L517
2228:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 7714              		.loc 1 2228 0
 7715 02ce FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 7716 02d2 0346     		mov	r3, r0
 7717 02d4 1A46     		mov	r2, r3
 7718 02d6 244B     		ldr	r3, .L521+16
 7719 02d8 1A60     		str	r2, [r3]
2229:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 7720              		.loc 1 2229 0
 7721 02da 214B     		ldr	r3, .L521+8
 7722 02dc 0122     		movs	r2, #1
 7723 02de 1A70     		strb	r2, [r3]
2230:..\src/interruptions.c ****             }
2231:..\src/interruptions.c ****             break;
 7724              		.loc 1 2231 0
 7725 02e0 30E0     		b	.L517
 7726              	.L507:
2232:..\src/interruptions.c ****         case STATE_ACTIVE:
2233:..\src/interruptions.c ****             if (!rest_enabled){
 7727              		.loc 1 2233 0
 7728 02e2 204B     		ldr	r3, .L521+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 179


 7729 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7730 02e6 002B     		cmp	r3, #0
 7731 02e8 2ED1     		bne	.L518
2234:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 7732              		.loc 1 2234 0
 7733 02ea FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 7734 02ee 0346     		mov	r3, r0
 7735 02f0 1A46     		mov	r2, r3
 7736 02f2 1E4B     		ldr	r3, .L521+20
 7737 02f4 1A60     		str	r2, [r3]
2235:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 7738              		.loc 1 2235 0
 7739 02f6 1C4B     		ldr	r3, .L521+16
 7740 02f8 1A68     		ldr	r2, [r3]
 7741 02fa 1C4B     		ldr	r3, .L521+20
 7742 02fc 1B68     		ldr	r3, [r3]
 7743 02fe 9A42     		cmp	r2, r3
 7744 0300 05D2     		bcs	.L512
2236:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)1200;
 7745              		.loc 1 2236 0
 7746 0302 194B     		ldr	r3, .L521+16
 7747 0304 1B68     		ldr	r3, [r3]
 7748 0306 03F59663 		add	r3, r3, #1200
 7749 030a 174A     		ldr	r2, .L521+16
 7750 030c 1360     		str	r3, [r2]
 7751              	.L512:
2237:..\src/interruptions.c ****                 }
2238:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 7752              		.loc 1 2238 0
 7753 030e 144B     		ldr	r3, .L521+8
 7754 0310 0222     		movs	r2, #2
 7755 0312 1A70     		strb	r2, [r3]
2239:..\src/interruptions.c ****             }
2240:..\src/interruptions.c ****             break;
 7756              		.loc 1 2240 0
 7757 0314 18E0     		b	.L518
 7758              	.L508:
2241:..\src/interruptions.c ****         case COUNTER_INC: 
2242:..\src/interruptions.c ****             g_mem.cnt.total_time_rest = g_mem.cnt.total_time_rest + (uint32)((timer_value_s - timer
 7759              		.loc 1 2242 0
 7760 0316 164B     		ldr	r3, .L521+24
 7761 0318 DA6D     		ldr	r2, [r3, #92]
 7762 031a 134B     		ldr	r3, .L521+16
 7763 031c 1968     		ldr	r1, [r3]
 7764 031e 134B     		ldr	r3, .L521+20
 7765 0320 1B68     		ldr	r3, [r3]
 7766 0322 CB1A     		subs	r3, r1, r3
 7767 0324 1349     		ldr	r1, .L521+28
 7768 0326 A1FB0313 		umull	r1, r3, r1, r3
 7769 032a DB08     		lsrs	r3, r3, #3
 7770 032c 1344     		add	r3, r3, r2
 7771 032e 104A     		ldr	r2, .L521+24
 7772 0330 D365     		str	r3, [r2, #92]
2243:..\src/interruptions.c ****             g_mem.cnt.rest_counter = g_mem.cnt.rest_counter + 1;
 7773              		.loc 1 2243 0
 7774 0332 0F4B     		ldr	r3, .L521+24
 7775 0334 1B6D     		ldr	r3, [r3, #80]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 180


 7776 0336 0133     		adds	r3, r3, #1
 7777 0338 0D4A     		ldr	r2, .L521+24
 7778 033a 1365     		str	r3, [r2, #80]
2244:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 7779              		.loc 1 2244 0
 7780 033c 084B     		ldr	r3, .L521+8
 7781 033e 0022     		movs	r2, #0
 7782 0340 1A70     		strb	r2, [r3]
2245:..\src/interruptions.c ****             break;
 7783              		.loc 1 2245 0
 7784 0342 02E0     		b	.L506
 7785              	.L517:
2231:..\src/interruptions.c ****         case STATE_ACTIVE:
 7786              		.loc 1 2231 0
 7787 0344 00BF     		nop
 7788 0346 00E0     		b	.L506
 7789              	.L518:
2240:..\src/interruptions.c ****         case COUNTER_INC: 
 7790              		.loc 1 2240 0
 7791 0348 00BF     		nop
 7792              	.L506:
2246:..\src/interruptions.c ****     }
2247:..\src/interruptions.c ****           
2248:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
2249:..\src/interruptions.c ****     save_cycles_eeprom();
 7793              		.loc 1 2249 0
 7794 034a FFF7FEFF 		bl	save_cycles_eeprom
2250:..\src/interruptions.c ****     
2251:..\src/interruptions.c **** }
 7795              		.loc 1 2251 0
 7796 034e 00BF     		nop
 7797 0350 1837     		adds	r7, r7, #24
 7798              		.cfi_def_cfa_offset 8
 7799 0352 BD46     		mov	sp, r7
 7800              		.cfi_def_cfa_register 13
 7801              		@ sp needed
 7802 0354 80BD     		pop	{r7, pc}
 7803              	.L522:
 7804 0356 00BF     		.align	2
 7805              	.L521:
 7806 0358 00000000 		.word	emg_1_status
 7807 035c 00000000 		.word	emg_2_status
 7808 0360 92010000 		.word	rest_cycle_status.10559
 7809 0364 00000000 		.word	rest_enabled
 7810 0368 94010000 		.word	timer_value_s.10569
 7811 036c 98010000 		.word	timer_value_e.10570
 7812 0370 00000000 		.word	g_mem
 7813 0374 CDCCCCCC 		.word	-858993459
 7814              		.cfi_endproc
 7815              	.LFE74:
 7816              		.size	cycles_counter_update, .-cycles_counter_update
 7817              		.section	.text.save_cycles_eeprom,"ax",%progbits
 7818              		.align	2
 7819              		.global	save_cycles_eeprom
 7820              		.thumb
 7821              		.thumb_func
 7822              		.type	save_cycles_eeprom, %function
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 181


 7823              	save_cycles_eeprom:
 7824              	.LFB75:
2252:..\src/interruptions.c **** 
2253:..\src/interruptions.c **** //==============================================================================
2254:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
2255:..\src/interruptions.c **** //==============================================================================
2256:..\src/interruptions.c **** 
2257:..\src/interruptions.c **** void save_cycles_eeprom() {
 7825              		.loc 1 2257 0
 7826              		.cfi_startproc
 7827              		@ args = 0, pretend = 0, frame = 24
 7828              		@ frame_needed = 1, uses_anonymous_args = 0
 7829 0000 80B5     		push	{r7, lr}
 7830              		.cfi_def_cfa_offset 8
 7831              		.cfi_offset 7, -8
 7832              		.cfi_offset 14, -4
 7833 0002 86B0     		sub	sp, sp, #24
 7834              		.cfi_def_cfa_offset 32
 7835 0004 00AF     		add	r7, sp, #0
 7836              		.cfi_def_cfa_register 7
2258:..\src/interruptions.c **** 
2259:..\src/interruptions.c ****     cystatus status;
2260:..\src/interruptions.c ****     static uint8 row_number;
2261:..\src/interruptions.c ****     uint8 row_start = 1;
 7837              		.loc 1 2261 0
 7838 0006 0123     		movs	r3, #1
 7839 0008 FB75     		strb	r3, [r7, #23]
2262:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.cnt.emg_counter[0];    //Data at beginning of the row 1
 7840              		.loc 1 2262 0
 7841 000a 394B     		ldr	r3, .L539
 7842 000c 3B61     		str	r3, [r7, #16]
2263:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.cnt.emg_counter[0];
 7843              		.loc 1 2263 0
 7844 000e 394B     		ldr	r3, .L539+4
 7845 0010 FB60     		str	r3, [r7, #12]
2264:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 7846              		.loc 1 2264 0
 7847 0012 FB7D     		ldrb	r3, [r7, #23]
 7848 0014 0433     		adds	r3, r3, #4
 7849 0016 FB72     		strb	r3, [r7, #11]
2265:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
2266:..\src/interruptions.c **** 
2267:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
2268:..\src/interruptions.c ****     switch(cycles_status) {
 7850              		.loc 1 2268 0
 7851 0018 374B     		ldr	r3, .L539+8
 7852 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7853 001c 042B     		cmp	r3, #4
 7854 001e 63D8     		bhi	.L535
 7855 0020 01A2     		adr	r2, .L526
 7856 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 7857 0026 00BF     		.p2align 2
 7858              	.L526:
 7859 0028 3D000000 		.word	.L525+1
 7860 002c 5B000000 		.word	.L527+1
 7861 0030 8B000000 		.word	.L528+1
 7862 0034 C7000000 		.word	.L529+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 182


 7863 0038 DF000000 		.word	.L536+1
 7864              		.p2align 1
 7865              	.L525:
2269:..\src/interruptions.c ****         case PREPARE_DATA:
2270:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
2271:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 7866              		.loc 1 2271 0
 7867 003c 5022     		movs	r2, #80
 7868 003e 3969     		ldr	r1, [r7, #16]
 7869 0040 F868     		ldr	r0, [r7, #12]
 7870 0042 FFF7FEFF 		bl	memcpy
2272:..\src/interruptions.c ****             m_addr = addr_start;
 7871              		.loc 1 2272 0
 7872 0046 2D4A     		ldr	r2, .L539+12
 7873 0048 3B69     		ldr	r3, [r7, #16]
 7874 004a 1360     		str	r3, [r2]
2273:..\src/interruptions.c ****             row_number = row_start;
 7875              		.loc 1 2273 0
 7876 004c 2C4A     		ldr	r2, .L539+16
 7877 004e FB7D     		ldrb	r3, [r7, #23]
 7878 0050 1370     		strb	r3, [r2]
2274:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 7879              		.loc 1 2274 0
 7880 0052 294B     		ldr	r3, .L539+8
 7881 0054 0122     		movs	r2, #1
 7882 0056 1A70     		strb	r2, [r3]
2275:..\src/interruptions.c ****             break;
 7883              		.loc 1 2275 0
 7884 0058 46E0     		b	.L524
 7885              	.L527:
2276:..\src/interruptions.c ****             
2277:..\src/interruptions.c ****         case WRITE_CYCLES:
2278:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
 7886              		.loc 1 2278 0
 7887 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
2279:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 7888              		.loc 1 2279 0
 7889 005e 274B     		ldr	r3, .L539+12
 7890 0060 1A68     		ldr	r2, [r3]
 7891 0062 274B     		ldr	r3, .L539+16
 7892 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7893 0066 1946     		mov	r1, r3
 7894 0068 1046     		mov	r0, r2
 7895 006a FFF7FEFF 		bl	EEPROM_StartWrite
 7896 006e 7860     		str	r0, [r7, #4]
2280:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 7897              		.loc 1 2280 0
 7898 0070 7B68     		ldr	r3, [r7, #4]
 7899 0072 072B     		cmp	r3, #7
 7900 0074 02D0     		beq	.L531
 7901              		.loc 1 2280 0 is_stmt 0 discriminator 1
 7902 0076 7B68     		ldr	r3, [r7, #4]
 7903 0078 002B     		cmp	r3, #0
 7904 007a 32D1     		bne	.L537
 7905              	.L531:
2281:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 7906              		.loc 1 2281 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 183


 7907 007c 1E4B     		ldr	r3, .L539+8
 7908 007e 0222     		movs	r2, #2
 7909 0080 1A70     		strb	r2, [r3]
2282:..\src/interruptions.c ****                 can_write = FALSE;
 7910              		.loc 1 2282 0
 7911 0082 204B     		ldr	r3, .L539+20
 7912 0084 0022     		movs	r2, #0
 7913 0086 1A70     		strb	r2, [r3]
2283:..\src/interruptions.c ****             }
2284:..\src/interruptions.c ****             break;
 7914              		.loc 1 2284 0
 7915 0088 2BE0     		b	.L537
 7916              	.L528:
2285:..\src/interruptions.c ****             
2286:..\src/interruptions.c ****         case WAIT_QUERY:
2287:..\src/interruptions.c ****             status = EEPROM_Query();
 7917              		.loc 1 2287 0
 7918 008a FFF7FEFF 		bl	EEPROM_Query
 7919 008e 7860     		str	r0, [r7, #4]
2288:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
 7920              		.loc 1 2288 0
 7921 0090 7B68     		ldr	r3, [r7, #4]
 7922 0092 002B     		cmp	r3, #0
 7923 0094 27D1     		bne	.L538
2289:..\src/interruptions.c ****                 if (row_number < row_end) {
 7924              		.loc 1 2289 0
 7925 0096 1A4B     		ldr	r3, .L539+16
 7926 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7927 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 7928 009c 9A42     		cmp	r2, r3
 7929 009e 0ED9     		bls	.L534
2290:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 7930              		.loc 1 2290 0
 7931 00a0 164B     		ldr	r3, .L539+12
 7932 00a2 1B68     		ldr	r3, [r3]
 7933 00a4 1033     		adds	r3, r3, #16
 7934 00a6 154A     		ldr	r2, .L539+12
 7935 00a8 1360     		str	r3, [r2]
2291:..\src/interruptions.c ****                     row_number = row_number + 1;
 7936              		.loc 1 2291 0
 7937 00aa 154B     		ldr	r3, .L539+16
 7938 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7939 00ae 0133     		adds	r3, r3, #1
 7940 00b0 DAB2     		uxtb	r2, r3
 7941 00b2 134B     		ldr	r3, .L539+16
 7942 00b4 1A70     		strb	r2, [r3]
2292:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 7943              		.loc 1 2292 0
 7944 00b6 104B     		ldr	r3, .L539+8
 7945 00b8 0122     		movs	r2, #1
 7946 00ba 1A70     		strb	r2, [r3]
2293:..\src/interruptions.c ****                 }
2294:..\src/interruptions.c ****                 else {
2295:..\src/interruptions.c ****                     cycles_status = WRITE_END;
2296:..\src/interruptions.c ****                 }
2297:..\src/interruptions.c ****             }
2298:..\src/interruptions.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 184


 7947              		.loc 1 2298 0
 7948 00bc 13E0     		b	.L538
 7949              	.L534:
2295:..\src/interruptions.c ****                 }
 7950              		.loc 1 2295 0
 7951 00be 0E4B     		ldr	r3, .L539+8
 7952 00c0 0322     		movs	r2, #3
 7953 00c2 1A70     		strb	r2, [r3]
 7954              		.loc 1 2298 0
 7955 00c4 0FE0     		b	.L538
 7956              	.L529:
2299:..\src/interruptions.c ****            
2300:..\src/interruptions.c ****         case WRITE_END:
2301:..\src/interruptions.c ****             can_write = TRUE;            
 7957              		.loc 1 2301 0
 7958 00c6 0F4B     		ldr	r3, .L539+20
 7959 00c8 0122     		movs	r2, #1
 7960 00ca 1A70     		strb	r2, [r3]
2302:..\src/interruptions.c ****             cycles_status = NONE;
 7961              		.loc 1 2302 0
 7962 00cc 0A4B     		ldr	r3, .L539+8
 7963 00ce 0422     		movs	r2, #4
 7964 00d0 1A70     		strb	r2, [r3]
2303:..\src/interruptions.c ****             
2304:..\src/interruptions.c ****             // Restore data saved in c_mem structure
2305:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 7965              		.loc 1 2305 0
 7966 00d2 5022     		movs	r2, #80
 7967 00d4 F968     		ldr	r1, [r7, #12]
 7968 00d6 3869     		ldr	r0, [r7, #16]
 7969 00d8 FFF7FEFF 		bl	memcpy
2306:..\src/interruptions.c ****             break;
 7970              		.loc 1 2306 0
 7971 00dc 04E0     		b	.L524
 7972              	.L536:
2307:..\src/interruptions.c ****             
2308:..\src/interruptions.c ****         case NONE:
2309:..\src/interruptions.c ****             break;
 7973              		.loc 1 2309 0
 7974 00de 00BF     		nop
 7975 00e0 02E0     		b	.L535
 7976              	.L537:
2284:..\src/interruptions.c ****             
 7977              		.loc 1 2284 0
 7978 00e2 00BF     		nop
 7979 00e4 00E0     		b	.L535
 7980              	.L538:
2298:..\src/interruptions.c ****            
 7981              		.loc 1 2298 0
 7982 00e6 00BF     		nop
 7983              	.L524:
 7984              	.L535:
2310:..\src/interruptions.c ****     }
2311:..\src/interruptions.c ****     
2312:..\src/interruptions.c **** }
 7985              		.loc 1 2312 0
 7986 00e8 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 185


 7987 00ea 1837     		adds	r7, r7, #24
 7988              		.cfi_def_cfa_offset 8
 7989 00ec BD46     		mov	sp, r7
 7990              		.cfi_def_cfa_register 13
 7991              		@ sp needed
 7992 00ee 80BD     		pop	{r7, pc}
 7993              	.L540:
 7994              		.align	2
 7995              	.L539:
 7996 00f0 10000000 		.word	g_mem+16
 7997 00f4 10000000 		.word	c_mem+16
 7998 00f8 00000000 		.word	cycles_status
 7999 00fc 9C010000 		.word	m_addr.10597
 8000 0100 A0010000 		.word	row_number.10592
 8001 0104 00000000 		.word	can_write
 8002              		.cfi_endproc
 8003              	.LFE75:
 8004              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 8005              		.bss
 8006              	state.10323:
 8007 0000 00       		.space	1
 8008 0001 000000   		.align	2
 8009              	rx_queue.10327:
 8010 0004 000000   		.space	3
 8011              	data_packet_length.10325:
 8012 0007 00       		.space	1
 8013              	data_packet_index.10324:
 8014 0008 00       		.space	1
 8015 0009 000000   		.align	2
 8016              	data_packet_buffer.10326:
 8017 000c 00000000 		.space	128
 8017      00000000 
 8017      00000000 
 8017      00000000 
 8017      00000000 
 8018              		.data
 8019              		.align	1
 8020              		.type	counter_calibration.10343, %object
 8021              		.size	counter_calibration.10343, 2
 8022              	counter_calibration.10343:
 8023 0000 0100     		.short	1
 8024              		.align	1
 8025              		.type	counter_tension_func.10344, %object
 8026              		.size	counter_tension_func.10344, 2
 8027              	counter_tension_func.10344:
 8028 0002 0100     		.short	1
 8029              		.bss
 8030              	current_emg.10376:
 8031 008c 00       		.space	1
 8032 008d 000000   		.align	2
 8033              	pos_error_sum.10369:
 8034 0090 00000000 		.space	4
 8035              		.align	2
 8036              	prev_pos_err.10371:
 8037 0094 00000000 		.space	4
 8038              	motor_dir.10374:
 8039 0098 00       		.space	1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 186


 8040 0099 000000   		.align	2
 8041              	curr_error_sum.10370:
 8042 009c 00000000 		.space	4
 8043              		.align	2
 8044              	prev_curr_err.10372:
 8045 00a0 00000000 		.space	4
 8046              		.align	2
 8047              	prev_pwm.10373:
 8048 00a4 00000000 		.space	4
 8049              		.align	2
 8050              	position_counter.10375:
 8051 00a8 00000000 		.space	4
 8052              		.align	2
 8053              	current_emg.10430:
 8054 00ac 0000     		.space	2
 8055 00ae 0000     		.align	2
 8056              	pos_error_sum.10423:
 8057 00b0 00000000 		.space	8
 8057      00000000 
 8058              		.align	2
 8059              	prev_pos_err.10425:
 8060 00b8 00000000 		.space	8
 8060      00000000 
 8061              		.align	2
 8062              	motor_dir.10428:
 8063 00c0 0000     		.space	2
 8064 00c2 0000     		.align	2
 8065              	curr_error_sum.10424:
 8066 00c4 00000000 		.space	8
 8066      00000000 
 8067              		.align	2
 8068              	prev_curr_err.10426:
 8069 00cc 00000000 		.space	8
 8069      00000000 
 8070              		.align	2
 8071              	prev_pwm.10427:
 8072 00d4 00000000 		.space	8
 8072      00000000 
 8073              		.align	2
 8074              	position_counter.10429:
 8075 00dc 00000000 		.space	8
 8075      00000000 
 8076              		.align	2
 8077              	last_value_encoder.10470:
 8078 00e4 00000000 		.space	24
 8078      00000000 
 8078      00000000 
 8078      00000000 
 8078      00000000 
 8079              		.align	2
 8080              	comp_value_encoder.10471:
 8081 00fc 00000000 		.space	24
 8081      00000000 
 8081      00000000 
 8081      00000000 
 8081      00000000 
 8082              		.data
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 187


 8083              		.align	2
 8084              		.type	only_first_time.10473, %object
 8085              		.size	only_first_time.10473, 2
 8086              	only_first_time.10473:
 8087 0004 01       		.byte	1
 8088 0005 01       		.byte	1
 8089              		.bss
 8090              		.align	2
 8091              	error.10472:
 8092 0114 00000000 		.space	6
 8092      0000
 8093 011a 0000     		.align	2
 8094              	v_value.10478:
 8095 011c 00000000 		.space	24
 8095      00000000 
 8095      00000000 
 8095      00000000 
 8095      00000000 
 8096              		.align	2
 8097              	vv_value.10479:
 8098 0134 00000000 		.space	24
 8098      00000000 
 8098      00000000 
 8098      00000000 
 8098      00000000 
 8099              		.align	2
 8100              	vvv_value.10480:
 8101 014c 00000000 		.space	24
 8101      00000000 
 8101      00000000 
 8101      00000000 
 8101      00000000 
 8102              		.align	2
 8103              	pos_reconstruct.10477:
 8104 0164 0000     		.space	2
 8105 0166 0000     		.align	2
 8106              	one_time_execute.10475:
 8107 0168 0000     		.space	2
 8108 016a 0000     		.align	2
 8109              	safe_startup_motor_activation.10474:
 8110 016c 0000     		.space	2
 8111 016e 0000     		.align	2
 8112              	count_startup_motor.10476:
 8113 0170 00000000 		.space	8
 8113      00000000 
 8114              		.data
 8115              		.type	first_tension_valid.10498, %object
 8116              		.size	first_tension_valid.10498, 1
 8117              	first_tension_valid.10498:
 8118 0006 01       		.byte	1
 8119              		.bss
 8120              		.align	1
 8121              	count.10499:
 8122 0178 0000     		.space	2
 8123              	idx.10501:
 8124 017a 00       		.space	1
 8125 017b 00       		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 188


 8126              	v_count.10500:
 8127 017c 00000000 		.space	4
 8128              		.align	1
 8129              	emg_counter_1.10496:
 8130 0180 0000     		.space	2
 8131              		.align	1
 8132              	emg_counter_2.10497:
 8133 0182 0000     		.space	2
 8134              	pos_cycle_status.10557:
 8135 0184 00       		.space	1
 8136 0185 000000   		.align	2
 8137              	thr_pos.10561:
 8138 0188 00000000 		.space	4
 8139              		.align	2
 8140              	max_pos.10562:
 8141 018c 00000000 		.space	4
 8142              		.data
 8143 0007 00       		.align	2
 8144              		.type	bin_threshold.10560, %object
 8145              		.size	bin_threshold.10560, 4
 8146              	bin_threshold.10560:
 8147 0008 FA000000 		.word	250
 8148              		.bss
 8149              		.align	2
 8150              	emg_cycle_status.10558:
 8151 0190 0000     		.space	2
 8152              	rest_cycle_status.10559:
 8153 0192 00       		.space	1
 8154 0193 00       		.align	2
 8155              	timer_value_s.10569:
 8156 0194 00000000 		.space	4
 8157              		.align	2
 8158              	timer_value_e.10570:
 8159 0198 00000000 		.space	4
 8160              		.align	2
 8161              	m_addr.10597:
 8162 019c 00000000 		.space	4
 8163              	row_number.10592:
 8164 01a0 00       		.space	1
 8165              		.text
 8166              	.Letext0:
 8167              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 8168              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 8169              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8170              		.file 5 "..\\src\\commands.h"
 8171              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 8172              		.file 7 "..\\src\\globals.h"
 8173              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 8174              		.section	.debug_info,"",%progbits
 8175              	.Ldebug_info0:
 8176 0000 9D160000 		.4byte	0x169d
 8177 0004 0400     		.2byte	0x4
 8178 0006 00000000 		.4byte	.Ldebug_abbrev0
 8179 000a 04       		.byte	0x4
 8180 000b 01       		.uleb128 0x1
 8181 000c 88070000 		.4byte	.LASF291
 8182 0010 0C       		.byte	0xc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 189


 8183 0011 C90D0000 		.4byte	.LASF292
 8184 0015 09030000 		.4byte	.LASF293
 8185 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8186 001d 00000000 		.4byte	0
 8187 0021 00000000 		.4byte	.Ldebug_line0
 8188 0025 02       		.uleb128 0x2
 8189 0026 01       		.byte	0x1
 8190 0027 06       		.byte	0x6
 8191 0028 4E030000 		.4byte	.LASF0
 8192 002c 02       		.uleb128 0x2
 8193 002d 01       		.byte	0x1
 8194 002e 08       		.byte	0x8
 8195 002f CB030000 		.4byte	.LASF1
 8196 0033 02       		.uleb128 0x2
 8197 0034 02       		.byte	0x2
 8198 0035 05       		.byte	0x5
 8199 0036 4D0C0000 		.4byte	.LASF2
 8200 003a 02       		.uleb128 0x2
 8201 003b 02       		.byte	0x2
 8202 003c 07       		.byte	0x7
 8203 003d 9B0D0000 		.4byte	.LASF3
 8204 0041 03       		.uleb128 0x3
 8205 0042 300E0000 		.4byte	.LASF9
 8206 0046 02       		.byte	0x2
 8207 0047 3F       		.byte	0x3f
 8208 0048 4C000000 		.4byte	0x4c
 8209 004c 02       		.uleb128 0x2
 8210 004d 04       		.byte	0x4
 8211 004e 05       		.byte	0x5
 8212 004f 1D020000 		.4byte	.LASF4
 8213 0053 02       		.uleb128 0x2
 8214 0054 04       		.byte	0x4
 8215 0055 07       		.byte	0x7
 8216 0056 AB060000 		.4byte	.LASF5
 8217 005a 02       		.uleb128 0x2
 8218 005b 08       		.byte	0x8
 8219 005c 05       		.byte	0x5
 8220 005d 43080000 		.4byte	.LASF6
 8221 0061 02       		.uleb128 0x2
 8222 0062 08       		.byte	0x8
 8223 0063 07       		.byte	0x7
 8224 0064 A30A0000 		.4byte	.LASF7
 8225 0068 04       		.uleb128 0x4
 8226 0069 04       		.byte	0x4
 8227 006a 05       		.byte	0x5
 8228 006b 696E7400 		.ascii	"int\000"
 8229 006f 02       		.uleb128 0x2
 8230 0070 04       		.byte	0x4
 8231 0071 07       		.byte	0x7
 8232 0072 FA080000 		.4byte	.LASF8
 8233 0076 03       		.uleb128 0x3
 8234 0077 57000000 		.4byte	.LASF10
 8235 007b 03       		.byte	0x3
 8236 007c 2C       		.byte	0x2c
 8237 007d 41000000 		.4byte	0x41
 8238 0081 05       		.uleb128 0x5
 8239 0082 3C0C0000 		.4byte	.LASF11
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 190


 8240 0086 04       		.byte	0x4
 8241 0087 E401     		.2byte	0x1e4
 8242 0089 2C000000 		.4byte	0x2c
 8243 008d 05       		.uleb128 0x5
 8244 008e 7D0E0000 		.4byte	.LASF12
 8245 0092 04       		.byte	0x4
 8246 0093 E501     		.2byte	0x1e5
 8247 0095 3A000000 		.4byte	0x3a
 8248 0099 05       		.uleb128 0x5
 8249 009a 88000000 		.4byte	.LASF13
 8250 009e 04       		.byte	0x4
 8251 009f E601     		.2byte	0x1e6
 8252 00a1 53000000 		.4byte	0x53
 8253 00a5 05       		.uleb128 0x5
 8254 00a6 4A010000 		.4byte	.LASF14
 8255 00aa 04       		.byte	0x4
 8256 00ab E701     		.2byte	0x1e7
 8257 00ad 25000000 		.4byte	0x25
 8258 00b1 05       		.uleb128 0x5
 8259 00b2 E20C0000 		.4byte	.LASF15
 8260 00b6 04       		.byte	0x4
 8261 00b7 E801     		.2byte	0x1e8
 8262 00b9 33000000 		.4byte	0x33
 8263 00bd 05       		.uleb128 0x5
 8264 00be E00D0000 		.4byte	.LASF16
 8265 00c2 04       		.byte	0x4
 8266 00c3 E901     		.2byte	0x1e9
 8267 00c5 4C000000 		.4byte	0x4c
 8268 00c9 05       		.uleb128 0x5
 8269 00ca B0020000 		.4byte	.LASF17
 8270 00ce 04       		.byte	0x4
 8271 00cf EA01     		.2byte	0x1ea
 8272 00d1 D5000000 		.4byte	0xd5
 8273 00d5 02       		.uleb128 0x2
 8274 00d6 04       		.byte	0x4
 8275 00d7 04       		.byte	0x4
 8276 00d8 CF080000 		.4byte	.LASF18
 8277 00dc 02       		.uleb128 0x2
 8278 00dd 08       		.byte	0x8
 8279 00de 04       		.byte	0x4
 8280 00df 75080000 		.4byte	.LASF19
 8281 00e3 02       		.uleb128 0x2
 8282 00e4 01       		.byte	0x1
 8283 00e5 08       		.byte	0x8
 8284 00e6 5D040000 		.4byte	.LASF20
 8285 00ea 05       		.uleb128 0x5
 8286 00eb 33090000 		.4byte	.LASF21
 8287 00ef 04       		.byte	0x4
 8288 00f0 8602     		.2byte	0x286
 8289 00f2 53000000 		.4byte	0x53
 8290 00f6 05       		.uleb128 0x5
 8291 00f7 400B0000 		.4byte	.LASF22
 8292 00fb 04       		.byte	0x4
 8293 00fc 8E02     		.2byte	0x28e
 8294 00fe 02010000 		.4byte	0x102
 8295 0102 06       		.uleb128 0x6
 8296 0103 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 191


 8297 0107 02       		.uleb128 0x2
 8298 0108 08       		.byte	0x8
 8299 0109 04       		.byte	0x4
 8300 010a C4090000 		.4byte	.LASF23
 8301 010e 02       		.uleb128 0x2
 8302 010f 04       		.byte	0x4
 8303 0110 07       		.byte	0x7
 8304 0111 00000000 		.4byte	.LASF24
 8305 0115 07       		.uleb128 0x7
 8306 0116 E3000000 		.4byte	0xe3
 8307 011a 25010000 		.4byte	0x125
 8308 011e 08       		.uleb128 0x8
 8309 011f 0E010000 		.4byte	0x10e
 8310 0123 07       		.byte	0x7
 8311 0124 00       		.byte	0
 8312 0125 09       		.uleb128 0x9
 8313 0126 6A0E0000 		.4byte	.LASF31
 8314 012a 01       		.byte	0x1
 8315 012b 2C000000 		.4byte	0x2c
 8316 012f 05       		.byte	0x5
 8317 0130 8B       		.byte	0x8b
 8318 0131 5A010000 		.4byte	0x15a
 8319 0135 0A       		.uleb128 0xa
 8320 0136 44060000 		.4byte	.LASF25
 8321 013a 00       		.byte	0
 8322 013b 0A       		.uleb128 0xa
 8323 013c 3C090000 		.4byte	.LASF26
 8324 0140 01       		.byte	0x1
 8325 0141 0A       		.uleb128 0xa
 8326 0142 B3010000 		.4byte	.LASF27
 8327 0146 02       		.byte	0x2
 8328 0147 0A       		.uleb128 0xa
 8329 0148 18010000 		.4byte	.LASF28
 8330 014c 03       		.byte	0x3
 8331 014d 0A       		.uleb128 0xa
 8332 014e E1000000 		.4byte	.LASF29
 8333 0152 04       		.byte	0x4
 8334 0153 0A       		.uleb128 0xa
 8335 0154 1A000000 		.4byte	.LASF30
 8336 0158 05       		.byte	0x5
 8337 0159 00       		.byte	0
 8338 015a 09       		.uleb128 0x9
 8339 015b 51080000 		.4byte	.LASF32
 8340 015f 01       		.byte	0x1
 8341 0160 2C000000 		.4byte	0x2c
 8342 0164 05       		.byte	0x5
 8343 0165 9D       		.byte	0x9d
 8344 0166 83010000 		.4byte	0x183
 8345 016a 0A       		.uleb128 0xa
 8346 016b 220E0000 		.4byte	.LASF33
 8347 016f 00       		.byte	0
 8348 0170 0A       		.uleb128 0xa
 8349 0171 66070000 		.4byte	.LASF34
 8350 0175 01       		.byte	0x1
 8351 0176 0A       		.uleb128 0xa
 8352 0177 B4090000 		.4byte	.LASF35
 8353 017b 02       		.byte	0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 192


 8354 017c 0A       		.uleb128 0xa
 8355 017d 8E060000 		.4byte	.LASF36
 8356 0181 03       		.byte	0x3
 8357 0182 00       		.byte	0
 8358 0183 03       		.uleb128 0x3
 8359 0184 FB0D0000 		.4byte	.LASF37
 8360 0188 06       		.byte	0x6
 8361 0189 7E       		.byte	0x7e
 8362 018a 8E010000 		.4byte	0x18e
 8363 018e 0B       		.uleb128 0xb
 8364 018f FB0D0000 		.4byte	.LASF37
 8365 0193 0C       		.uleb128 0xc
 8366 0194 04       		.byte	0x4
 8367 0195 83010000 		.4byte	0x183
 8368 0199 0D       		.uleb128 0xd
 8369 019a 16080000 		.4byte	.LASF40
 8370 019e 10       		.byte	0x10
 8371 019f 07       		.byte	0x7
 8372 01a0 A8       		.byte	0xa8
 8373 01a1 D6010000 		.4byte	0x1d6
 8374 01a5 0E       		.uleb128 0xe
 8375 01a6 706F7300 		.ascii	"pos\000"
 8376 01aa 07       		.byte	0x7
 8377 01ab A9       		.byte	0xa9
 8378 01ac BD000000 		.4byte	0xbd
 8379 01b0 00       		.byte	0
 8380 01b1 0F       		.uleb128 0xf
 8381 01b2 41070000 		.4byte	.LASF38
 8382 01b6 07       		.byte	0x7
 8383 01b7 AA       		.byte	0xaa
 8384 01b8 BD000000 		.4byte	0xbd
 8385 01bc 04       		.byte	0x4
 8386 01bd 0E       		.uleb128 0xe
 8387 01be 70776D00 		.ascii	"pwm\000"
 8388 01c2 07       		.byte	0x7
 8389 01c3 AB       		.byte	0xab
 8390 01c4 BD000000 		.4byte	0xbd
 8391 01c8 08       		.byte	0x8
 8392 01c9 0F       		.uleb128 0xf
 8393 01ca D70A0000 		.4byte	.LASF39
 8394 01ce 07       		.byte	0x7
 8395 01cf AC       		.byte	0xac
 8396 01d0 81000000 		.4byte	0x81
 8397 01d4 0C       		.byte	0xc
 8398 01d5 00       		.byte	0
 8399 01d6 0D       		.uleb128 0xd
 8400 01d7 D50B0000 		.4byte	.LASF41
 8401 01db 30       		.byte	0x30
 8402 01dc 07       		.byte	0x7
 8403 01dd B3       		.byte	0xb3
 8404 01de 2B020000 		.4byte	0x22b
 8405 01e2 0E       		.uleb128 0xe
 8406 01e3 706F7300 		.ascii	"pos\000"
 8407 01e7 07       		.byte	0x7
 8408 01e8 B4       		.byte	0xb4
 8409 01e9 2B020000 		.4byte	0x22b
 8410 01ed 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 193


 8411 01ee 0F       		.uleb128 0xf
 8412 01ef 41070000 		.4byte	.LASF38
 8413 01f3 07       		.byte	0x7
 8414 01f4 B5       		.byte	0xb5
 8415 01f5 BD000000 		.4byte	0xbd
 8416 01f9 0C       		.byte	0xc
 8417 01fa 0F       		.uleb128 0xf
 8418 01fb 190D0000 		.4byte	.LASF42
 8419 01ff 07       		.byte	0x7
 8420 0200 B6       		.byte	0xb6
 8421 0201 BD000000 		.4byte	0xbd
 8422 0205 10       		.byte	0x10
 8423 0206 0E       		.uleb128 0xe
 8424 0207 726F7400 		.ascii	"rot\000"
 8425 020b 07       		.byte	0x7
 8426 020c B7       		.byte	0xb7
 8427 020d 3B020000 		.4byte	0x23b
 8428 0211 14       		.byte	0x14
 8429 0212 0E       		.uleb128 0xe
 8430 0213 76656C00 		.ascii	"vel\000"
 8431 0217 07       		.byte	0x7
 8432 0218 B8       		.byte	0xb8
 8433 0219 2B020000 		.4byte	0x22b
 8434 021d 18       		.byte	0x18
 8435 021e 0E       		.uleb128 0xe
 8436 021f 61636300 		.ascii	"acc\000"
 8437 0223 07       		.byte	0x7
 8438 0224 B9       		.byte	0xb9
 8439 0225 2B020000 		.4byte	0x22b
 8440 0229 24       		.byte	0x24
 8441 022a 00       		.byte	0
 8442 022b 07       		.uleb128 0x7
 8443 022c BD000000 		.4byte	0xbd
 8444 0230 3B020000 		.4byte	0x23b
 8445 0234 08       		.uleb128 0x8
 8446 0235 0E010000 		.4byte	0x10e
 8447 0239 02       		.byte	0x2
 8448 023a 00       		.byte	0
 8449 023b 07       		.uleb128 0x7
 8450 023c A5000000 		.4byte	0xa5
 8451 0240 4B020000 		.4byte	0x24b
 8452 0244 08       		.uleb128 0x8
 8453 0245 0E010000 		.4byte	0x10e
 8454 0249 02       		.byte	0x2
 8455 024a 00       		.byte	0
 8456 024b 0D       		.uleb128 0xd
 8457 024c F6090000 		.4byte	.LASF43
 8458 0250 20       		.byte	0x20
 8459 0251 07       		.byte	0x7
 8460 0252 BC       		.byte	0xbc
 8461 0253 70020000 		.4byte	0x270
 8462 0257 0E       		.uleb128 0xe
 8463 0258 656D6700 		.ascii	"emg\000"
 8464 025c 07       		.byte	0x7
 8465 025d BD       		.byte	0xbd
 8466 025e 70020000 		.4byte	0x270
 8467 0262 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 194


 8468 0263 0F       		.uleb128 0xf
 8469 0264 78090000 		.4byte	.LASF44
 8470 0268 07       		.byte	0x7
 8471 0269 BE       		.byte	0xbe
 8472 026a 80020000 		.4byte	0x280
 8473 026e 08       		.byte	0x8
 8474 026f 00       		.byte	0
 8475 0270 07       		.uleb128 0x7
 8476 0271 BD000000 		.4byte	0xbd
 8477 0275 80020000 		.4byte	0x280
 8478 0279 08       		.uleb128 0x8
 8479 027a 0E010000 		.4byte	0x10e
 8480 027e 01       		.byte	0x1
 8481 027f 00       		.byte	0
 8482 0280 07       		.uleb128 0x7
 8483 0281 BD000000 		.4byte	0xbd
 8484 0285 90020000 		.4byte	0x290
 8485 0289 08       		.uleb128 0x8
 8486 028a 0E010000 		.4byte	0x10e
 8487 028e 05       		.byte	0x5
 8488 028f 00       		.byte	0
 8489 0290 0D       		.uleb128 0xd
 8490 0291 75000000 		.4byte	.LASF45
 8491 0295 86       		.byte	0x86
 8492 0296 07       		.byte	0x7
 8493 0297 C5       		.byte	0xc5
 8494 0298 CD020000 		.4byte	0x2cd
 8495 029c 0F       		.uleb128 0xf
 8496 029d 65050000 		.4byte	.LASF46
 8497 02a1 07       		.byte	0x7
 8498 02a2 C6       		.byte	0xc6
 8499 02a3 CD020000 		.4byte	0x2cd
 8500 02a7 00       		.byte	0
 8501 02a8 0F       		.uleb128 0xf
 8502 02a9 BA0A0000 		.4byte	.LASF47
 8503 02ad 07       		.byte	0x7
 8504 02ae C7       		.byte	0xc7
 8505 02af B1000000 		.4byte	0xb1
 8506 02b3 80       		.byte	0x80
 8507 02b4 0E       		.uleb128 0xe
 8508 02b5 696E6400 		.ascii	"ind\000"
 8509 02b9 07       		.byte	0x7
 8510 02ba C8       		.byte	0xc8
 8511 02bb B1000000 		.4byte	0xb1
 8512 02bf 82       		.byte	0x82
 8513 02c0 0F       		.uleb128 0xf
 8514 02c1 9E010000 		.4byte	.LASF48
 8515 02c5 07       		.byte	0x7
 8516 02c6 C9       		.byte	0xc9
 8517 02c7 81000000 		.4byte	0x81
 8518 02cb 84       		.byte	0x84
 8519 02cc 00       		.byte	0
 8520 02cd 07       		.uleb128 0x7
 8521 02ce 81000000 		.4byte	0x81
 8522 02d2 DD020000 		.4byte	0x2dd
 8523 02d6 08       		.uleb128 0x8
 8524 02d7 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 195


 8525 02db 7F       		.byte	0x7f
 8526 02dc 00       		.byte	0
 8527 02dd 0D       		.uleb128 0xd
 8528 02de 9D020000 		.4byte	.LASF49
 8529 02e2 50       		.byte	0x50
 8530 02e3 07       		.byte	0x7
 8531 02e4 D1       		.byte	0xd1
 8532 02e5 3E030000 		.4byte	0x33e
 8533 02e9 0F       		.uleb128 0xf
 8534 02ea D2020000 		.4byte	.LASF50
 8535 02ee 07       		.byte	0x7
 8536 02ef D2       		.byte	0xd2
 8537 02f0 3E030000 		.4byte	0x33e
 8538 02f4 00       		.byte	0
 8539 02f5 0F       		.uleb128 0xf
 8540 02f6 70010000 		.4byte	.LASF51
 8541 02fa 07       		.byte	0x7
 8542 02fb D3       		.byte	0xd3
 8543 02fc 4E030000 		.4byte	0x34e
 8544 0300 08       		.byte	0x8
 8545 0301 0F       		.uleb128 0xf
 8546 0302 A7090000 		.4byte	.LASF52
 8547 0306 07       		.byte	0x7
 8548 0307 D4       		.byte	0xd4
 8549 0308 5E030000 		.4byte	0x35e
 8550 030c 30       		.byte	0x30
 8551 030d 0F       		.uleb128 0xf
 8552 030e 0B010000 		.4byte	.LASF53
 8553 0312 07       		.byte	0x7
 8554 0313 D5       		.byte	0xd5
 8555 0314 99000000 		.4byte	0x99
 8556 0318 40       		.byte	0x40
 8557 0319 0F       		.uleb128 0xf
 8558 031a 3A0E0000 		.4byte	.LASF54
 8559 031e 07       		.byte	0x7
 8560 031f D6       		.byte	0xd6
 8561 0320 99000000 		.4byte	0x99
 8562 0324 44       		.byte	0x44
 8563 0325 0F       		.uleb128 0xf
 8564 0326 BD060000 		.4byte	.LASF55
 8565 032a 07       		.byte	0x7
 8566 032b D7       		.byte	0xd7
 8567 032c 99000000 		.4byte	0x99
 8568 0330 48       		.byte	0x48
 8569 0331 0F       		.uleb128 0xf
 8570 0332 DF060000 		.4byte	.LASF56
 8571 0336 07       		.byte	0x7
 8572 0337 D8       		.byte	0xd8
 8573 0338 99000000 		.4byte	0x99
 8574 033c 4C       		.byte	0x4c
 8575 033d 00       		.byte	0
 8576 033e 07       		.uleb128 0x7
 8577 033f 99000000 		.4byte	0x99
 8578 0343 4E030000 		.4byte	0x34e
 8579 0347 08       		.uleb128 0x8
 8580 0348 0E010000 		.4byte	0x10e
 8581 034c 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 196


 8582 034d 00       		.byte	0
 8583 034e 07       		.uleb128 0x7
 8584 034f 99000000 		.4byte	0x99
 8585 0353 5E030000 		.4byte	0x35e
 8586 0357 08       		.uleb128 0x8
 8587 0358 0E010000 		.4byte	0x10e
 8588 035c 09       		.byte	0x9
 8589 035d 00       		.byte	0
 8590 035e 07       		.uleb128 0x7
 8591 035f 99000000 		.4byte	0x99
 8592 0363 6E030000 		.4byte	0x36e
 8593 0367 08       		.uleb128 0x8
 8594 0368 0E010000 		.4byte	0x10e
 8595 036c 03       		.byte	0x3
 8596 036d 00       		.byte	0
 8597 036e 0D       		.uleb128 0xd
 8598 036f A9010000 		.4byte	.LASF57
 8599 0373 10       		.byte	0x10
 8600 0374 07       		.byte	0x7
 8601 0375 DB       		.byte	0xdb
 8602 0376 DA030000 		.4byte	0x3da
 8603 037a 0E       		.uleb128 0xe
 8604 037b 696400   		.ascii	"id\000"
 8605 037e 07       		.byte	0x7
 8606 037f DC       		.byte	0xdc
 8607 0380 81000000 		.4byte	0x81
 8608 0384 00       		.byte	0
 8609 0385 0F       		.uleb128 0xf
 8610 0386 7E0C0000 		.4byte	.LASF58
 8611 038a 07       		.byte	0x7
 8612 038b DD       		.byte	0xdd
 8613 038c DA030000 		.4byte	0x3da
 8614 0390 01       		.byte	0x1
 8615 0391 0F       		.uleb128 0xf
 8616 0392 B10C0000 		.4byte	.LASF59
 8617 0396 07       		.byte	0x7
 8618 0397 DE       		.byte	0xde
 8619 0398 DA030000 		.4byte	0x3da
 8620 039c 04       		.byte	0x4
 8621 039d 0F       		.uleb128 0xf
 8622 039e 25040000 		.4byte	.LASF60
 8623 03a2 07       		.byte	0x7
 8624 03a3 DF       		.byte	0xdf
 8625 03a4 81000000 		.4byte	0x81
 8626 03a8 07       		.byte	0x7
 8627 03a9 0F       		.uleb128 0xf
 8628 03aa 3D020000 		.4byte	.LASF61
 8629 03ae 07       		.byte	0x7
 8630 03af E0       		.byte	0xe0
 8631 03b0 81000000 		.4byte	0x81
 8632 03b4 08       		.byte	0x8
 8633 03b5 0F       		.uleb128 0xf
 8634 03b6 CF010000 		.4byte	.LASF62
 8635 03ba 07       		.byte	0x7
 8636 03bb E1       		.byte	0xe1
 8637 03bc 81000000 		.4byte	0x81
 8638 03c0 09       		.byte	0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 197


 8639 03c1 0F       		.uleb128 0xf
 8640 03c2 820D0000 		.4byte	.LASF63
 8641 03c6 07       		.byte	0x7
 8642 03c7 E2       		.byte	0xe2
 8643 03c8 81000000 		.4byte	0x81
 8644 03cc 0A       		.byte	0xa
 8645 03cd 0F       		.uleb128 0xf
 8646 03ce 78020000 		.4byte	.LASF64
 8647 03d2 07       		.byte	0x7
 8648 03d3 E3       		.byte	0xe3
 8649 03d4 EA030000 		.4byte	0x3ea
 8650 03d8 0B       		.byte	0xb
 8651 03d9 00       		.byte	0
 8652 03da 07       		.uleb128 0x7
 8653 03db 81000000 		.4byte	0x81
 8654 03df EA030000 		.4byte	0x3ea
 8655 03e3 08       		.uleb128 0x8
 8656 03e4 0E010000 		.4byte	0x10e
 8657 03e8 02       		.byte	0x2
 8658 03e9 00       		.byte	0
 8659 03ea 07       		.uleb128 0x7
 8660 03eb 81000000 		.4byte	0x81
 8661 03ef FA030000 		.4byte	0x3fa
 8662 03f3 08       		.uleb128 0x8
 8663 03f4 0E010000 		.4byte	0x10e
 8664 03f8 04       		.byte	0x4
 8665 03f9 00       		.byte	0
 8666 03fa 0D       		.uleb128 0xd
 8667 03fb E4080000 		.4byte	.LASF65
 8668 03ff 70       		.byte	0x70
 8669 0400 07       		.byte	0x7
 8670 0401 E6       		.byte	0xe6
 8671 0402 5A050000 		.4byte	0x55a
 8672 0406 0E       		.uleb128 0xe
 8673 0407 6B5F7000 		.ascii	"k_p\000"
 8674 040b 07       		.byte	0x7
 8675 040c E7       		.byte	0xe7
 8676 040d BD000000 		.4byte	0xbd
 8677 0411 00       		.byte	0
 8678 0412 0E       		.uleb128 0xe
 8679 0413 6B5F6900 		.ascii	"k_i\000"
 8680 0417 07       		.byte	0x7
 8681 0418 E8       		.byte	0xe8
 8682 0419 BD000000 		.4byte	0xbd
 8683 041d 04       		.byte	0x4
 8684 041e 0E       		.uleb128 0xe
 8685 041f 6B5F6400 		.ascii	"k_d\000"
 8686 0423 07       		.byte	0x7
 8687 0424 E9       		.byte	0xe9
 8688 0425 BD000000 		.4byte	0xbd
 8689 0429 08       		.byte	0x8
 8690 042a 0F       		.uleb128 0xf
 8691 042b 130B0000 		.4byte	.LASF66
 8692 042f 07       		.byte	0x7
 8693 0430 EA       		.byte	0xea
 8694 0431 BD000000 		.4byte	0xbd
 8695 0435 0C       		.byte	0xc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 198


 8696 0436 0F       		.uleb128 0xf
 8697 0437 B5040000 		.4byte	.LASF67
 8698 043b 07       		.byte	0x7
 8699 043c EB       		.byte	0xeb
 8700 043d BD000000 		.4byte	0xbd
 8701 0441 10       		.byte	0x10
 8702 0442 0F       		.uleb128 0xf
 8703 0443 A8040000 		.4byte	.LASF68
 8704 0447 07       		.byte	0x7
 8705 0448 EC       		.byte	0xec
 8706 0449 BD000000 		.4byte	0xbd
 8707 044d 14       		.byte	0x14
 8708 044e 0F       		.uleb128 0xf
 8709 044f 120D0000 		.4byte	.LASF69
 8710 0453 07       		.byte	0x7
 8711 0454 ED       		.byte	0xed
 8712 0455 BD000000 		.4byte	0xbd
 8713 0459 18       		.byte	0x18
 8714 045a 0F       		.uleb128 0xf
 8715 045b 51050000 		.4byte	.LASF70
 8716 045f 07       		.byte	0x7
 8717 0460 EE       		.byte	0xee
 8718 0461 BD000000 		.4byte	0xbd
 8719 0465 1C       		.byte	0x1c
 8720 0466 0F       		.uleb128 0xf
 8721 0467 570C0000 		.4byte	.LASF71
 8722 046b 07       		.byte	0x7
 8723 046c EF       		.byte	0xef
 8724 046d BD000000 		.4byte	0xbd
 8725 0471 20       		.byte	0x20
 8726 0472 0F       		.uleb128 0xf
 8727 0473 6C050000 		.4byte	.LASF72
 8728 0477 07       		.byte	0x7
 8729 0478 F0       		.byte	0xf0
 8730 0479 BD000000 		.4byte	0xbd
 8731 047d 24       		.byte	0x24
 8732 047e 0F       		.uleb128 0xf
 8733 047f 77060000 		.4byte	.LASF73
 8734 0483 07       		.byte	0x7
 8735 0484 F1       		.byte	0xf1
 8736 0485 BD000000 		.4byte	0xbd
 8737 0489 28       		.byte	0x28
 8738 048a 0F       		.uleb128 0xf
 8739 048b B00E0000 		.4byte	.LASF74
 8740 048f 07       		.byte	0x7
 8741 0490 F2       		.byte	0xf2
 8742 0491 BD000000 		.4byte	0xbd
 8743 0495 2C       		.byte	0x2c
 8744 0496 0F       		.uleb128 0xf
 8745 0497 EF060000 		.4byte	.LASF75
 8746 049b 07       		.byte	0x7
 8747 049c F3       		.byte	0xf3
 8748 049d 81000000 		.4byte	0x81
 8749 04a1 30       		.byte	0x30
 8750 04a2 0F       		.uleb128 0xf
 8751 04a3 FB0C0000 		.4byte	.LASF76
 8752 04a7 07       		.byte	0x7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 199


 8753 04a8 F4       		.byte	0xf4
 8754 04a9 81000000 		.4byte	0x81
 8755 04ad 31       		.byte	0x31
 8756 04ae 0F       		.uleb128 0xf
 8757 04af 250B0000 		.4byte	.LASF77
 8758 04b3 07       		.byte	0x7
 8759 04b4 F5       		.byte	0xf5
 8760 04b5 81000000 		.4byte	0x81
 8761 04b9 32       		.byte	0x32
 8762 04ba 0F       		.uleb128 0xf
 8763 04bb 030E0000 		.4byte	.LASF78
 8764 04bf 07       		.byte	0x7
 8765 04c0 F6       		.byte	0xf6
 8766 04c1 81000000 		.4byte	0x81
 8767 04c5 33       		.byte	0x33
 8768 04c6 0F       		.uleb128 0xf
 8769 04c7 96000000 		.4byte	.LASF79
 8770 04cb 07       		.byte	0x7
 8771 04cc F7       		.byte	0xf7
 8772 04cd BD000000 		.4byte	0xbd
 8773 04d1 34       		.byte	0x34
 8774 04d2 0F       		.uleb128 0xf
 8775 04d3 E5040000 		.4byte	.LASF80
 8776 04d7 07       		.byte	0x7
 8777 04d8 F8       		.byte	0xf8
 8778 04d9 BD000000 		.4byte	0xbd
 8779 04dd 38       		.byte	0x38
 8780 04de 0F       		.uleb128 0xf
 8781 04df A9080000 		.4byte	.LASF81
 8782 04e3 07       		.byte	0x7
 8783 04e4 F9       		.byte	0xf9
 8784 04e5 BD000000 		.4byte	0xbd
 8785 04e9 3C       		.byte	0x3c
 8786 04ea 0F       		.uleb128 0xf
 8787 04eb 62040000 		.4byte	.LASF82
 8788 04ef 07       		.byte	0x7
 8789 04f0 FA       		.byte	0xfa
 8790 04f1 BD000000 		.4byte	0xbd
 8791 04f5 40       		.byte	0x40
 8792 04f6 0F       		.uleb128 0xf
 8793 04f7 F5000000 		.4byte	.LASF83
 8794 04fb 07       		.byte	0x7
 8795 04fc FB       		.byte	0xfb
 8796 04fd 5A050000 		.4byte	0x55a
 8797 0501 44       		.byte	0x44
 8798 0502 0F       		.uleb128 0xf
 8799 0503 5C0E0000 		.4byte	.LASF84
 8800 0507 07       		.byte	0x7
 8801 0508 FC       		.byte	0xfc
 8802 0509 B1000000 		.4byte	0xb1
 8803 050d 5C       		.byte	0x5c
 8804 050e 0F       		.uleb128 0xf
 8805 050f 51070000 		.4byte	.LASF85
 8806 0513 07       		.byte	0x7
 8807 0514 FD       		.byte	0xfd
 8808 0515 81000000 		.4byte	0x81
 8809 0519 5E       		.byte	0x5e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 200


 8810 051a 0F       		.uleb128 0xf
 8811 051b 26090000 		.4byte	.LASF86
 8812 051f 07       		.byte	0x7
 8813 0520 FE       		.byte	0xfe
 8814 0521 81000000 		.4byte	0x81
 8815 0525 5F       		.byte	0x5f
 8816 0526 0F       		.uleb128 0xf
 8817 0527 30040000 		.4byte	.LASF87
 8818 052b 07       		.byte	0x7
 8819 052c FF       		.byte	0xff
 8820 052d 81000000 		.4byte	0x81
 8821 0531 60       		.byte	0x60
 8822 0532 10       		.uleb128 0x10
 8823 0533 97040000 		.4byte	.LASF88
 8824 0537 07       		.byte	0x7
 8825 0538 0001     		.2byte	0x100
 8826 053a 81000000 		.4byte	0x81
 8827 053e 61       		.byte	0x61
 8828 053f 10       		.uleb128 0x10
 8829 0540 D9030000 		.4byte	.LASF89
 8830 0544 07       		.byte	0x7
 8831 0545 0101     		.2byte	0x101
 8832 0547 81000000 		.4byte	0x81
 8833 054b 62       		.byte	0x62
 8834 054c 10       		.uleb128 0x10
 8835 054d 78020000 		.4byte	.LASF64
 8836 0551 07       		.byte	0x7
 8837 0552 0201     		.2byte	0x102
 8838 0554 6A050000 		.4byte	0x56a
 8839 0558 63       		.byte	0x63
 8840 0559 00       		.byte	0
 8841 055a 07       		.uleb128 0x7
 8842 055b D5000000 		.4byte	0xd5
 8843 055f 6A050000 		.4byte	0x56a
 8844 0563 08       		.uleb128 0x8
 8845 0564 0E010000 		.4byte	0x10e
 8846 0568 05       		.byte	0x5
 8847 0569 00       		.byte	0
 8848 056a 07       		.uleb128 0x7
 8849 056b 81000000 		.4byte	0x81
 8850 056f 7A050000 		.4byte	0x57a
 8851 0573 08       		.uleb128 0x8
 8852 0574 0E010000 		.4byte	0x10e
 8853 0578 0C       		.byte	0xc
 8854 0579 00       		.byte	0
 8855 057a 11       		.uleb128 0x11
 8856 057b AE0D0000 		.4byte	.LASF90
 8857 057f 30       		.byte	0x30
 8858 0580 07       		.byte	0x7
 8859 0581 0501     		.2byte	0x105
 8860 0583 E3050000 		.4byte	0x5e3
 8861 0587 10       		.uleb128 0x10
 8862 0588 58050000 		.4byte	.LASF91
 8863 058c 07       		.byte	0x7
 8864 058d 0601     		.2byte	0x106
 8865 058f EA030000 		.4byte	0x3ea
 8866 0593 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 201


 8867 0594 12       		.uleb128 0x12
 8868 0595 72657300 		.ascii	"res\000"
 8869 0599 07       		.byte	0x7
 8870 059a 0701     		.2byte	0x107
 8871 059c DA030000 		.4byte	0x3da
 8872 05a0 05       		.byte	0x5
 8873 05a1 10       		.uleb128 0x10
 8874 05a2 11070000 		.4byte	.LASF92
 8875 05a6 07       		.byte	0x7
 8876 05a7 0801     		.2byte	0x108
 8877 05a9 2B020000 		.4byte	0x22b
 8878 05ad 08       		.byte	0x8
 8879 05ae 10       		.uleb128 0x10
 8880 05af AE040000 		.4byte	.LASF93
 8881 05b3 07       		.byte	0x7
 8882 05b4 0901     		.2byte	0x109
 8883 05b6 E3050000 		.4byte	0x5e3
 8884 05ba 14       		.byte	0x14
 8885 05bb 10       		.uleb128 0x10
 8886 05bc 4E0A0000 		.4byte	.LASF94
 8887 05c0 07       		.byte	0x7
 8888 05c1 0A01     		.2byte	0x10a
 8889 05c3 81000000 		.4byte	0x81
 8890 05c7 20       		.byte	0x20
 8891 05c8 10       		.uleb128 0x10
 8892 05c9 090A0000 		.4byte	.LASF95
 8893 05cd 07       		.byte	0x7
 8894 05ce 0B01     		.2byte	0x10b
 8895 05d0 A5000000 		.4byte	0xa5
 8896 05d4 21       		.byte	0x21
 8897 05d5 10       		.uleb128 0x10
 8898 05d6 78020000 		.4byte	.LASF64
 8899 05da 07       		.byte	0x7
 8900 05db 0C01     		.2byte	0x10c
 8901 05dd F3050000 		.4byte	0x5f3
 8902 05e1 22       		.byte	0x22
 8903 05e2 00       		.byte	0
 8904 05e3 07       		.uleb128 0x7
 8905 05e4 C9000000 		.4byte	0xc9
 8906 05e8 F3050000 		.4byte	0x5f3
 8907 05ec 08       		.uleb128 0x8
 8908 05ed 0E010000 		.4byte	0x10e
 8909 05f1 02       		.byte	0x2
 8910 05f2 00       		.byte	0
 8911 05f3 07       		.uleb128 0x7
 8912 05f4 81000000 		.4byte	0x81
 8913 05f8 03060000 		.4byte	0x603
 8914 05fc 08       		.uleb128 0x8
 8915 05fd 0E010000 		.4byte	0x10e
 8916 0601 0D       		.byte	0xd
 8917 0602 00       		.byte	0
 8918 0603 11       		.uleb128 0x11
 8919 0604 69010000 		.4byte	.LASF96
 8920 0608 10       		.byte	0x10
 8921 0609 07       		.byte	0x7
 8922 060a 0F01     		.2byte	0x10f
 8923 060c 5F060000 		.4byte	0x65f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 202


 8924 0610 10       		.uleb128 0x10
 8925 0611 86090000 		.4byte	.LASF97
 8926 0615 07       		.byte	0x7
 8927 0616 1001     		.2byte	0x110
 8928 0618 5F060000 		.4byte	0x65f
 8929 061c 00       		.byte	0
 8930 061d 10       		.uleb128 0x10
 8931 061e 4E0E0000 		.4byte	.LASF98
 8932 0622 07       		.byte	0x7
 8933 0623 1101     		.2byte	0x111
 8934 0625 3E030000 		.4byte	0x33e
 8935 0629 04       		.byte	0x4
 8936 062a 10       		.uleb128 0x10
 8937 062b FB040000 		.4byte	.LASF99
 8938 062f 07       		.byte	0x7
 8939 0630 1201     		.2byte	0x112
 8940 0632 81000000 		.4byte	0x81
 8941 0636 0C       		.byte	0xc
 8942 0637 10       		.uleb128 0x10
 8943 0638 C00B0000 		.4byte	.LASF100
 8944 063c 07       		.byte	0x7
 8945 063d 1301     		.2byte	0x113
 8946 063f 81000000 		.4byte	0x81
 8947 0643 0D       		.byte	0xd
 8948 0644 10       		.uleb128 0x10
 8949 0645 88030000 		.4byte	.LASF101
 8950 0649 07       		.byte	0x7
 8951 064a 1401     		.2byte	0x114
 8952 064c 81000000 		.4byte	0x81
 8953 0650 0E       		.byte	0xe
 8954 0651 10       		.uleb128 0x10
 8955 0652 78020000 		.4byte	.LASF64
 8956 0656 07       		.byte	0x7
 8957 0657 1501     		.2byte	0x115
 8958 0659 6F060000 		.4byte	0x66f
 8959 065d 0F       		.byte	0xf
 8960 065e 00       		.byte	0
 8961 065f 07       		.uleb128 0x7
 8962 0660 8D000000 		.4byte	0x8d
 8963 0664 6F060000 		.4byte	0x66f
 8964 0668 08       		.uleb128 0x8
 8965 0669 0E010000 		.4byte	0x10e
 8966 066d 01       		.byte	0x1
 8967 066e 00       		.byte	0
 8968 066f 07       		.uleb128 0x7
 8969 0670 81000000 		.4byte	0x81
 8970 0674 7F060000 		.4byte	0x67f
 8971 0678 08       		.uleb128 0x8
 8972 0679 0E010000 		.4byte	0x10e
 8973 067d 00       		.byte	0
 8974 067e 00       		.byte	0
 8975 067f 11       		.uleb128 0x11
 8976 0680 50090000 		.4byte	.LASF102
 8977 0684 20       		.byte	0x20
 8978 0685 07       		.byte	0x7
 8979 0686 1801     		.2byte	0x118
 8980 0688 C1060000 		.4byte	0x6c1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 203


 8981 068c 10       		.uleb128 0x10
 8982 068d EF010000 		.4byte	.LASF103
 8983 0691 07       		.byte	0x7
 8984 0692 1901     		.2byte	0x119
 8985 0694 81000000 		.4byte	0x81
 8986 0698 00       		.byte	0
 8987 0699 10       		.uleb128 0x10
 8988 069a 8C0D0000 		.4byte	.LASF104
 8989 069e 07       		.byte	0x7
 8990 069f 1A01     		.2byte	0x11a
 8991 06a1 81000000 		.4byte	0x81
 8992 06a5 01       		.byte	0x1
 8993 06a6 10       		.uleb128 0x10
 8994 06a7 D5080000 		.4byte	.LASF105
 8995 06ab 07       		.byte	0x7
 8996 06ac 1B01     		.2byte	0x11b
 8997 06ae C1060000 		.4byte	0x6c1
 8998 06b2 02       		.byte	0x2
 8999 06b3 10       		.uleb128 0x10
 9000 06b4 78020000 		.4byte	.LASF64
 9001 06b8 07       		.byte	0x7
 9002 06b9 1C01     		.2byte	0x11c
 9003 06bb EA030000 		.4byte	0x3ea
 9004 06bf 1B       		.byte	0x1b
 9005 06c0 00       		.byte	0
 9006 06c1 07       		.uleb128 0x7
 9007 06c2 81000000 		.4byte	0x81
 9008 06c6 D7060000 		.4byte	0x6d7
 9009 06ca 08       		.uleb128 0x8
 9010 06cb 0E010000 		.4byte	0x10e
 9011 06cf 04       		.byte	0x4
 9012 06d0 08       		.uleb128 0x8
 9013 06d1 0E010000 		.4byte	0x10e
 9014 06d5 04       		.byte	0x4
 9015 06d6 00       		.byte	0
 9016 06d7 11       		.uleb128 0x11
 9017 06d8 B30B0000 		.4byte	.LASF106
 9018 06dc 20       		.byte	0x20
 9019 06dd 07       		.byte	0x7
 9020 06de 1F01     		.2byte	0x11f
 9021 06e0 33070000 		.4byte	0x733
 9022 06e4 10       		.uleb128 0x10
 9023 06e5 440A0000 		.4byte	.LASF107
 9024 06e9 07       		.byte	0x7
 9025 06ea 2001     		.2byte	0x120
 9026 06ec 33070000 		.4byte	0x733
 9027 06f0 00       		.byte	0
 9028 06f1 10       		.uleb128 0x10
 9029 06f2 5A030000 		.4byte	.LASF108
 9030 06f6 07       		.byte	0x7
 9031 06f7 2101     		.2byte	0x121
 9032 06f9 15010000 		.4byte	0x115
 9033 06fd 06       		.byte	0x6
 9034 06fe 10       		.uleb128 0x10
 9035 06ff E80C0000 		.4byte	.LASF109
 9036 0703 07       		.byte	0x7
 9037 0704 2201     		.2byte	0x122
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 204


 9038 0706 81000000 		.4byte	0x81
 9039 070a 0E       		.byte	0xe
 9040 070b 10       		.uleb128 0x10
 9041 070c 32000000 		.4byte	.LASF110
 9042 0710 07       		.byte	0x7
 9043 0711 2301     		.2byte	0x123
 9044 0713 81000000 		.4byte	0x81
 9045 0717 0F       		.byte	0xf
 9046 0718 10       		.uleb128 0x10
 9047 0719 3A050000 		.4byte	.LASF111
 9048 071d 07       		.byte	0x7
 9049 071e 2401     		.2byte	0x124
 9050 0720 43070000 		.4byte	0x743
 9051 0724 10       		.byte	0x10
 9052 0725 10       		.uleb128 0x10
 9053 0726 78020000 		.4byte	.LASF64
 9054 072a 07       		.byte	0x7
 9055 072b 2501     		.2byte	0x125
 9056 072d 53070000 		.4byte	0x753
 9057 0731 1C       		.byte	0x1c
 9058 0732 00       		.byte	0
 9059 0733 07       		.uleb128 0x7
 9060 0734 81000000 		.4byte	0x81
 9061 0738 43070000 		.4byte	0x743
 9062 073c 08       		.uleb128 0x8
 9063 073d 0E010000 		.4byte	0x10e
 9064 0741 05       		.byte	0x5
 9065 0742 00       		.byte	0
 9066 0743 07       		.uleb128 0x7
 9067 0744 81000000 		.4byte	0x81
 9068 0748 53070000 		.4byte	0x753
 9069 074c 08       		.uleb128 0x8
 9070 074d 0E010000 		.4byte	0x10e
 9071 0751 0B       		.byte	0xb
 9072 0752 00       		.byte	0
 9073 0753 07       		.uleb128 0x7
 9074 0754 81000000 		.4byte	0x81
 9075 0758 63070000 		.4byte	0x763
 9076 075c 08       		.uleb128 0x8
 9077 075d 0E010000 		.4byte	0x10e
 9078 0761 03       		.byte	0x3
 9079 0762 00       		.byte	0
 9080 0763 11       		.uleb128 0x11
 9081 0764 2A080000 		.4byte	.LASF112
 9082 0768 10       		.byte	0x10
 9083 0769 07       		.byte	0x7
 9084 076a 2801     		.2byte	0x128
 9085 076c B2070000 		.4byte	0x7b2
 9086 0770 10       		.uleb128 0x10
 9087 0771 38070000 		.4byte	.LASF113
 9088 0775 07       		.byte	0x7
 9089 0776 2901     		.2byte	0x129
 9090 0778 BD000000 		.4byte	0xbd
 9091 077c 00       		.byte	0
 9092 077d 10       		.uleb128 0x10
 9093 077e 920E0000 		.4byte	.LASF114
 9094 0782 07       		.byte	0x7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 205


 9095 0783 2A01     		.2byte	0x12a
 9096 0785 BD000000 		.4byte	0xbd
 9097 0789 04       		.byte	0x4
 9098 078a 10       		.uleb128 0x10
 9099 078b 05050000 		.4byte	.LASF115
 9100 078f 07       		.byte	0x7
 9101 0790 2B01     		.2byte	0x12b
 9102 0792 BD000000 		.4byte	0xbd
 9103 0796 08       		.byte	0x8
 9104 0797 10       		.uleb128 0x10
 9105 0798 5E060000 		.4byte	.LASF116
 9106 079c 07       		.byte	0x7
 9107 079d 2C01     		.2byte	0x12c
 9108 079f 81000000 		.4byte	0x81
 9109 07a3 0C       		.byte	0xc
 9110 07a4 10       		.uleb128 0x10
 9111 07a5 78020000 		.4byte	.LASF64
 9112 07a9 07       		.byte	0x7
 9113 07aa 2D01     		.2byte	0x12d
 9114 07ac DA030000 		.4byte	0x3da
 9115 07b0 0D       		.byte	0xd
 9116 07b1 00       		.byte	0
 9117 07b2 13       		.uleb128 0x13
 9118 07b3 BF0D0000 		.4byte	.LASF117
 9119 07b7 8402     		.2byte	0x284
 9120 07b9 07       		.byte	0x7
 9121 07ba 3201     		.2byte	0x132
 9122 07bc 70080000 		.4byte	0x870
 9123 07c0 10       		.uleb128 0x10
 9124 07c1 21090000 		.4byte	.LASF118
 9125 07c5 07       		.byte	0x7
 9126 07c6 3401     		.2byte	0x134
 9127 07c8 81000000 		.4byte	0x81
 9128 07cc 00       		.byte	0
 9129 07cd 10       		.uleb128 0x10
 9130 07ce 78020000 		.4byte	.LASF64
 9131 07d2 07       		.byte	0x7
 9132 07d3 3501     		.2byte	0x135
 9133 07d5 70080000 		.4byte	0x870
 9134 07d9 01       		.byte	0x1
 9135 07da 12       		.uleb128 0x12
 9136 07db 636E7400 		.ascii	"cnt\000"
 9137 07df 07       		.byte	0x7
 9138 07e0 3601     		.2byte	0x136
 9139 07e2 DD020000 		.4byte	0x2dd
 9140 07e6 10       		.byte	0x10
 9141 07e7 10       		.uleb128 0x10
 9142 07e8 26020000 		.4byte	.LASF119
 9143 07ec 07       		.byte	0x7
 9144 07ed 3701     		.2byte	0x137
 9145 07ef 80080000 		.4byte	0x880
 9146 07f3 60       		.byte	0x60
 9147 07f4 12       		.uleb128 0x12
 9148 07f5 64657600 		.ascii	"dev\000"
 9149 07f9 07       		.byte	0x7
 9150 07fa 3801     		.2byte	0x138
 9151 07fc 6E030000 		.4byte	0x36e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 206


 9152 0800 A0       		.byte	0xa0
 9153 0801 10       		.uleb128 0x10
 9154 0802 6C0C0000 		.4byte	.LASF120
 9155 0806 07       		.byte	0x7
 9156 0807 3901     		.2byte	0x139
 9157 0809 90080000 		.4byte	0x890
 9158 080d B0       		.byte	0xb0
 9159 080e 14       		.uleb128 0x14
 9160 080f 656E6300 		.ascii	"enc\000"
 9161 0813 07       		.byte	0x7
 9162 0814 3A01     		.2byte	0x13a
 9163 0816 A0080000 		.4byte	0x8a0
 9164 081a 9001     		.2byte	0x190
 9165 081c 14       		.uleb128 0x14
 9166 081d 656D6700 		.ascii	"emg\000"
 9167 0821 07       		.byte	0x7
 9168 0822 3B01     		.2byte	0x13b
 9169 0824 03060000 		.4byte	0x603
 9170 0828 F001     		.2byte	0x1f0
 9171 082a 14       		.uleb128 0x14
 9172 082b 696D7500 		.ascii	"imu\000"
 9173 082f 07       		.byte	0x7
 9174 0830 3C01     		.2byte	0x13c
 9175 0832 7F060000 		.4byte	0x67f
 9176 0836 0002     		.2byte	0x200
 9177 0838 14       		.uleb128 0x14
 9178 0839 65787000 		.ascii	"exp\000"
 9179 083d 07       		.byte	0x7
 9180 083e 3D01     		.2byte	0x13d
 9181 0840 D7060000 		.4byte	0x6d7
 9182 0844 2002     		.2byte	0x220
 9183 0846 14       		.uleb128 0x14
 9184 0847 534800   		.ascii	"SH\000"
 9185 084a 07       		.byte	0x7
 9186 084b 4001     		.2byte	0x140
 9187 084d 63070000 		.4byte	0x763
 9188 0851 4002     		.2byte	0x240
 9189 0853 15       		.uleb128 0x15
 9190 0854 8C0C0000 		.4byte	.LASF121
 9191 0858 07       		.byte	0x7
 9192 0859 4401     		.2byte	0x144
 9193 085b 81000000 		.4byte	0x81
 9194 085f 5002     		.2byte	0x250
 9195 0861 15       		.uleb128 0x15
 9196 0862 5C070000 		.4byte	.LASF122
 9197 0866 07       		.byte	0x7
 9198 0867 4501     		.2byte	0x145
 9199 0869 B0080000 		.4byte	0x8b0
 9200 086d 5402     		.2byte	0x254
 9201 086f 00       		.byte	0
 9202 0870 07       		.uleb128 0x7
 9203 0871 81000000 		.4byte	0x81
 9204 0875 80080000 		.4byte	0x880
 9205 0879 08       		.uleb128 0x8
 9206 087a 0E010000 		.4byte	0x10e
 9207 087e 0E       		.byte	0xe
 9208 087f 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 207


 9209 0880 07       		.uleb128 0x7
 9210 0881 81000000 		.4byte	0x81
 9211 0885 90080000 		.4byte	0x890
 9212 0889 08       		.uleb128 0x8
 9213 088a 0E010000 		.4byte	0x10e
 9214 088e 3F       		.byte	0x3f
 9215 088f 00       		.byte	0
 9216 0890 07       		.uleb128 0x7
 9217 0891 FA030000 		.4byte	0x3fa
 9218 0895 A0080000 		.4byte	0x8a0
 9219 0899 08       		.uleb128 0x8
 9220 089a 0E010000 		.4byte	0x10e
 9221 089e 01       		.byte	0x1
 9222 089f 00       		.byte	0
 9223 08a0 07       		.uleb128 0x7
 9224 08a1 7A050000 		.4byte	0x57a
 9225 08a5 B0080000 		.4byte	0x8b0
 9226 08a9 08       		.uleb128 0x8
 9227 08aa 0E010000 		.4byte	0x10e
 9228 08ae 01       		.byte	0x1
 9229 08af 00       		.byte	0
 9230 08b0 07       		.uleb128 0x7
 9231 08b1 03060000 		.4byte	0x603
 9232 08b5 C0080000 		.4byte	0x8c0
 9233 08b9 08       		.uleb128 0x8
 9234 08ba 0E010000 		.4byte	0x10e
 9235 08be 02       		.byte	0x2
 9236 08bf 00       		.byte	0
 9237 08c0 11       		.uleb128 0x11
 9238 08c1 C10A0000 		.4byte	.LASF123
 9239 08c5 28       		.byte	0x28
 9240 08c6 07       		.byte	0x7
 9241 08c7 5001     		.2byte	0x150
 9242 08c9 1C090000 		.4byte	0x91c
 9243 08cd 10       		.uleb128 0x10
 9244 08ce 4A040000 		.4byte	.LASF124
 9245 08d2 07       		.byte	0x7
 9246 08d3 5101     		.2byte	0x151
 9247 08d5 81000000 		.4byte	0x81
 9248 08d9 00       		.byte	0
 9249 08da 10       		.uleb128 0x10
 9250 08db 85020000 		.4byte	.LASF125
 9251 08df 07       		.byte	0x7
 9252 08e0 5201     		.2byte	0x152
 9253 08e2 1C090000 		.4byte	0x91c
 9254 08e6 02       		.byte	0x2
 9255 08e7 10       		.uleb128 0x10
 9256 08e8 390A0000 		.4byte	.LASF126
 9257 08ec 07       		.byte	0x7
 9258 08ed 5301     		.2byte	0x153
 9259 08ef 1C090000 		.4byte	0x91c
 9260 08f3 08       		.byte	0x8
 9261 08f4 10       		.uleb128 0x10
 9262 08f5 CD0A0000 		.4byte	.LASF127
 9263 08f9 07       		.byte	0x7
 9264 08fa 5401     		.2byte	0x154
 9265 08fc 1C090000 		.4byte	0x91c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 208


 9266 0900 0E       		.byte	0xe
 9267 0901 10       		.uleb128 0x10
 9268 0902 2D070000 		.4byte	.LASF128
 9269 0906 07       		.byte	0x7
 9270 0907 5501     		.2byte	0x155
 9271 0909 2C090000 		.4byte	0x92c
 9272 090d 14       		.byte	0x14
 9273 090e 10       		.uleb128 0x10
 9274 090f 8B010000 		.4byte	.LASF129
 9275 0913 07       		.byte	0x7
 9276 0914 5601     		.2byte	0x156
 9277 0916 B1000000 		.4byte	0xb1
 9278 091a 24       		.byte	0x24
 9279 091b 00       		.byte	0
 9280 091c 07       		.uleb128 0x7
 9281 091d B1000000 		.4byte	0xb1
 9282 0921 2C090000 		.4byte	0x92c
 9283 0925 08       		.uleb128 0x8
 9284 0926 0E010000 		.4byte	0x10e
 9285 092a 02       		.byte	0x2
 9286 092b 00       		.byte	0
 9287 092c 07       		.uleb128 0x7
 9288 092d D5000000 		.4byte	0xd5
 9289 0931 3C090000 		.4byte	0x93c
 9290 0935 08       		.uleb128 0x8
 9291 0936 0E010000 		.4byte	0x10e
 9292 093a 03       		.byte	0x3
 9293 093b 00       		.byte	0
 9294 093c 11       		.uleb128 0x11
 9295 093d 9D0E0000 		.4byte	.LASF130
 9296 0941 08       		.byte	0x8
 9297 0942 07       		.byte	0x7
 9298 0943 5D01     		.2byte	0x15d
 9299 0945 64090000 		.4byte	0x964
 9300 0949 10       		.uleb128 0x10
 9301 094a F1040000 		.4byte	.LASF131
 9302 094e 07       		.byte	0x7
 9303 094f 5E01     		.2byte	0x15e
 9304 0951 BD000000 		.4byte	0xbd
 9305 0955 00       		.byte	0
 9306 0956 10       		.uleb128 0x10
 9307 0957 A4010000 		.4byte	.LASF132
 9308 095b 07       		.byte	0x7
 9309 095c 5F01     		.2byte	0x15f
 9310 095e BD000000 		.4byte	0xbd
 9311 0962 04       		.byte	0x4
 9312 0963 00       		.byte	0
 9313 0964 11       		.uleb128 0x11
 9314 0965 6B030000 		.4byte	.LASF133
 9315 0969 06       		.byte	0x6
 9316 096a 07       		.byte	0x7
 9317 096b 6601     		.2byte	0x166
 9318 096d A6090000 		.4byte	0x9a6
 9319 0971 10       		.uleb128 0x10
 9320 0972 A3060000 		.4byte	.LASF134
 9321 0976 07       		.byte	0x7
 9322 0977 6701     		.2byte	0x167
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 209


 9323 0979 81000000 		.4byte	0x81
 9324 097d 00       		.byte	0
 9325 097e 10       		.uleb128 0x10
 9326 097f B90E0000 		.4byte	.LASF135
 9327 0983 07       		.byte	0x7
 9328 0984 6801     		.2byte	0x168
 9329 0986 81000000 		.4byte	0x81
 9330 098a 01       		.byte	0x1
 9331 098b 10       		.uleb128 0x10
 9332 098c 8B050000 		.4byte	.LASF136
 9333 0990 07       		.byte	0x7
 9334 0991 6901     		.2byte	0x169
 9335 0993 B1000000 		.4byte	0xb1
 9336 0997 02       		.byte	0x2
 9337 0998 10       		.uleb128 0x10
 9338 0999 9D080000 		.4byte	.LASF137
 9339 099d 07       		.byte	0x7
 9340 099e 6A01     		.2byte	0x16a
 9341 09a0 B1000000 		.4byte	0xb1
 9342 09a4 04       		.byte	0x4
 9343 09a5 00       		.byte	0
 9344 09a6 16       		.uleb128 0x16
 9345 09a7 01       		.byte	0x1
 9346 09a8 2C000000 		.4byte	0x2c
 9347 09ac 07       		.byte	0x7
 9348 09ad 6E01     		.2byte	0x16e
 9349 09af D8090000 		.4byte	0x9d8
 9350 09b3 0A       		.uleb128 0xa
 9351 09b4 0E050000 		.4byte	.LASF138
 9352 09b8 00       		.byte	0
 9353 09b9 0A       		.uleb128 0xa
 9354 09ba 730B0000 		.4byte	.LASF139
 9355 09be 01       		.byte	0x1
 9356 09bf 0A       		.uleb128 0xa
 9357 09c0 D0090000 		.4byte	.LASF140
 9358 09c4 02       		.byte	0x2
 9359 09c5 0A       		.uleb128 0xa
 9360 09c6 E2010000 		.4byte	.LASF141
 9361 09ca 03       		.byte	0x3
 9362 09cb 0A       		.uleb128 0xa
 9363 09cc CA080000 		.4byte	.LASF142
 9364 09d0 04       		.byte	0x4
 9365 09d1 0A       		.uleb128 0xa
 9366 09d2 370B0000 		.4byte	.LASF143
 9367 09d6 05       		.byte	0x5
 9368 09d7 00       		.byte	0
 9369 09d8 05       		.uleb128 0x5
 9370 09d9 55010000 		.4byte	.LASF144
 9371 09dd 07       		.byte	0x7
 9372 09de 7601     		.2byte	0x176
 9373 09e0 A6090000 		.4byte	0x9a6
 9374 09e4 16       		.uleb128 0x16
 9375 09e5 01       		.byte	0x1
 9376 09e6 2C000000 		.4byte	0x2c
 9377 09ea 07       		.byte	0x7
 9378 09eb 7801     		.2byte	0x178
 9379 09ed 100A0000 		.4byte	0xa10
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 210


 9380 09f1 0A       		.uleb128 0xa
 9381 09f2 7E010000 		.4byte	.LASF145
 9382 09f6 00       		.byte	0
 9383 09f7 0A       		.uleb128 0xa
 9384 09f8 CB060000 		.4byte	.LASF146
 9385 09fc 01       		.byte	0x1
 9386 09fd 0A       		.uleb128 0xa
 9387 09fe 46070000 		.4byte	.LASF147
 9388 0a02 02       		.byte	0x2
 9389 0a03 0A       		.uleb128 0xa
 9390 0a04 DE020000 		.4byte	.LASF148
 9391 0a08 03       		.byte	0x3
 9392 0a09 0A       		.uleb128 0xa
 9393 0a0a 780E0000 		.4byte	.LASF149
 9394 0a0e 04       		.byte	0x4
 9395 0a0f 00       		.byte	0
 9396 0a10 05       		.uleb128 0x5
 9397 0a11 FB0B0000 		.4byte	.LASF150
 9398 0a15 07       		.byte	0x7
 9399 0a16 7F01     		.2byte	0x17f
 9400 0a18 E4090000 		.4byte	0x9e4
 9401 0a1c 17       		.uleb128 0x17
 9402 0a1d CC040000 		.4byte	.LASF151
 9403 0a21 01       		.byte	0x1
 9404 0a22 62       		.byte	0x62
 9405 0a23 00000000 		.4byte	.LFB64
 9406 0a27 18000000 		.4byte	.LFE64-.LFB64
 9407 0a2b 01       		.uleb128 0x1
 9408 0a2c 9C       		.byte	0x9c
 9409 0a2d 17       		.uleb128 0x17
 9410 0a2e 6F0D0000 		.4byte	.LASF152
 9411 0a32 01       		.byte	0x1
 9412 0a33 6D       		.byte	0x6d
 9413 0a34 00000000 		.4byte	.LFB65
 9414 0a38 20000000 		.4byte	.LFE65-.LFB65
 9415 0a3c 01       		.uleb128 0x1
 9416 0a3d 9C       		.byte	0x9c
 9417 0a3e 18       		.uleb128 0x18
 9418 0a3f 8B080000 		.4byte	.LASF164
 9419 0a43 01       		.byte	0x1
 9420 0a44 86       		.byte	0x86
 9421 0a45 00000000 		.4byte	.LFB66
 9422 0a49 F4010000 		.4byte	.LFE66-.LFB66
 9423 0a4d 01       		.uleb128 0x1
 9424 0a4e 9C       		.byte	0x9c
 9425 0a4f D30A0000 		.4byte	0xad3
 9426 0a53 19       		.uleb128 0x19
 9427 0a54 B0000000 		.4byte	.LASF153
 9428 0a58 01       		.byte	0x1
 9429 0a59 8B       		.byte	0x8b
 9430 0a5a 81000000 		.4byte	0x81
 9431 0a5e 05       		.uleb128 0x5
 9432 0a5f 03       		.byte	0x3
 9433 0a60 00000000 		.4byte	state.10323
 9434 0a64 19       		.uleb128 0x19
 9435 0a65 B0050000 		.4byte	.LASF154
 9436 0a69 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 211


 9437 0a6a 8E       		.byte	0x8e
 9438 0a6b 81000000 		.4byte	0x81
 9439 0a6f 05       		.uleb128 0x5
 9440 0a70 03       		.byte	0x3
 9441 0a71 08000000 		.4byte	data_packet_index.10324
 9442 0a75 19       		.uleb128 0x19
 9443 0a76 000B0000 		.4byte	.LASF155
 9444 0a7a 01       		.byte	0x1
 9445 0a7b 8F       		.byte	0x8f
 9446 0a7c 81000000 		.4byte	0x81
 9447 0a80 05       		.uleb128 0x5
 9448 0a81 03       		.byte	0x3
 9449 0a82 07000000 		.4byte	data_packet_length.10325
 9450 0a86 19       		.uleb128 0x19
 9451 0a87 C2050000 		.4byte	.LASF156
 9452 0a8b 01       		.byte	0x1
 9453 0a8c 90       		.byte	0x90
 9454 0a8d CD020000 		.4byte	0x2cd
 9455 0a91 05       		.uleb128 0x5
 9456 0a92 03       		.byte	0x3
 9457 0a93 0C000000 		.4byte	data_packet_buffer.10326
 9458 0a97 19       		.uleb128 0x19
 9459 0a98 63090000 		.4byte	.LASF157
 9460 0a9c 01       		.byte	0x1
 9461 0a9d 91       		.byte	0x91
 9462 0a9e DA030000 		.4byte	0x3da
 9463 0aa2 05       		.uleb128 0x5
 9464 0aa3 03       		.byte	0x3
 9465 0aa4 04000000 		.4byte	rx_queue.10327
 9466 0aa8 19       		.uleb128 0x19
 9467 0aa9 38010000 		.4byte	.LASF158
 9468 0aad 01       		.byte	0x1
 9469 0aae 94       		.byte	0x94
 9470 0aaf 81000000 		.4byte	0x81
 9471 0ab3 02       		.uleb128 0x2
 9472 0ab4 91       		.byte	0x91
 9473 0ab5 75       		.sleb128 -11
 9474 0ab6 19       		.uleb128 0x19
 9475 0ab7 75050000 		.4byte	.LASF159
 9476 0abb 01       		.byte	0x1
 9477 0abc 95       		.byte	0x95
 9478 0abd 81000000 		.4byte	0x81
 9479 0ac1 02       		.uleb128 0x2
 9480 0ac2 91       		.byte	0x91
 9481 0ac3 77       		.sleb128 -9
 9482 0ac4 19       		.uleb128 0x19
 9483 0ac5 80060000 		.4byte	.LASF160
 9484 0ac9 01       		.byte	0x1
 9485 0aca 96       		.byte	0x96
 9486 0acb 81000000 		.4byte	0x81
 9487 0acf 02       		.uleb128 0x2
 9488 0ad0 91       		.byte	0x91
 9489 0ad1 76       		.sleb128 -10
 9490 0ad2 00       		.byte	0
 9491 0ad3 1A       		.uleb128 0x1a
 9492 0ad4 950C0000 		.4byte	.LASF183
 9493 0ad8 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 212


 9494 0ad9 0601     		.2byte	0x106
 9495 0adb 00000000 		.4byte	.LFB67
 9496 0adf 14030000 		.4byte	.LFE67-.LFB67
 9497 0ae3 01       		.uleb128 0x1
 9498 0ae4 9C       		.byte	0x9c
 9499 0ae5 1E0B0000 		.4byte	0xb1e
 9500 0ae9 1B       		.uleb128 0x1b
 9501 0aea E3050000 		.4byte	.LASF161
 9502 0aee 01       		.byte	0x1
 9503 0aef 0801     		.2byte	0x108
 9504 0af1 8D000000 		.4byte	0x8d
 9505 0af5 05       		.uleb128 0x5
 9506 0af6 03       		.byte	0x3
 9507 0af7 00000000 		.4byte	counter_calibration.10343
 9508 0afb 1B       		.uleb128 0x1b
 9509 0afc 830A0000 		.4byte	.LASF162
 9510 0b00 01       		.byte	0x1
 9511 0b01 0901     		.2byte	0x109
 9512 0b03 8D000000 		.4byte	0x8d
 9513 0b07 05       		.uleb128 0x5
 9514 0b08 03       		.byte	0x3
 9515 0b09 02000000 		.4byte	counter_tension_func.10344
 9516 0b0d 1B       		.uleb128 0x1b
 9517 0b0e 4F010000 		.4byte	.LASF163
 9518 0b12 01       		.byte	0x1
 9519 0b13 0A01     		.2byte	0x10a
 9520 0b15 1E0B0000 		.4byte	0xb1e
 9521 0b19 03       		.uleb128 0x3
 9522 0b1a 91       		.byte	0x91
 9523 0b1b AC6C     		.sleb128 -2516
 9524 0b1d 00       		.byte	0
 9525 0b1e 07       		.uleb128 0x7
 9526 0b1f E3000000 		.4byte	0xe3
 9527 0b23 2F0B0000 		.4byte	0xb2f
 9528 0b27 1C       		.uleb128 0x1c
 9529 0b28 0E010000 		.4byte	0x10e
 9530 0b2c C309     		.2byte	0x9c3
 9531 0b2e 00       		.byte	0
 9532 0b2f 1D       		.uleb128 0x1d
 9533 0b30 15050000 		.4byte	.LASF165
 9534 0b34 01       		.byte	0x1
 9535 0b35 0E02     		.2byte	0x20e
 9536 0b37 00000000 		.4byte	.LFB68
 9537 0b3b AC0A0000 		.4byte	.LFE68-.LFB68
 9538 0b3f 01       		.uleb128 0x1
 9539 0b40 9C       		.byte	0x9c
 9540 0b41 180D0000 		.4byte	0xd18
 9541 0b45 1B       		.uleb128 0x1b
 9542 0b46 4D000000 		.4byte	.LASF166
 9543 0b4a 01       		.byte	0x1
 9544 0b4b 1002     		.2byte	0x210
 9545 0b4d BD000000 		.4byte	0xbd
 9546 0b51 02       		.uleb128 0x2
 9547 0b52 91       		.byte	0x91
 9548 0b53 74       		.sleb128 -12
 9549 0b54 1B       		.uleb128 0x1b
 9550 0b55 01010000 		.4byte	.LASF167
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 213


 9551 0b59 01       		.byte	0x1
 9552 0b5a 1102     		.2byte	0x211
 9553 0b5c BD000000 		.4byte	0xbd
 9554 0b60 02       		.uleb128 0x2
 9555 0b61 91       		.byte	0x91
 9556 0b62 70       		.sleb128 -16
 9557 0b63 1B       		.uleb128 0x1b
 9558 0b64 320D0000 		.4byte	.LASF168
 9559 0b68 01       		.byte	0x1
 9560 0b69 1202     		.2byte	0x212
 9561 0b6b BD000000 		.4byte	0xbd
 9562 0b6f 03       		.uleb128 0x3
 9563 0b70 91       		.byte	0x91
 9564 0b71 A47F     		.sleb128 -92
 9565 0b73 1B       		.uleb128 0x1b
 9566 0b74 80090000 		.4byte	.LASF169
 9567 0b78 01       		.byte	0x1
 9568 0b79 1302     		.2byte	0x213
 9569 0b7b BD000000 		.4byte	0xbd
 9570 0b7f 02       		.uleb128 0x2
 9571 0b80 91       		.byte	0x91
 9572 0b81 6C       		.sleb128 -20
 9573 0b82 1B       		.uleb128 0x1b
 9574 0b83 50040000 		.4byte	.LASF170
 9575 0b87 01       		.byte	0x1
 9576 0b88 1402     		.2byte	0x214
 9577 0b8a BD000000 		.4byte	0xbd
 9578 0b8e 02       		.uleb128 0x2
 9579 0b8f 91       		.byte	0x91
 9580 0b90 68       		.sleb128 -24
 9581 0b91 1B       		.uleb128 0x1b
 9582 0b92 74030000 		.4byte	.LASF171
 9583 0b96 01       		.byte	0x1
 9584 0b97 1502     		.2byte	0x215
 9585 0b99 BD000000 		.4byte	0xbd
 9586 0b9d 03       		.uleb128 0x3
 9587 0b9e 91       		.byte	0x91
 9588 0b9f AC7F     		.sleb128 -84
 9589 0ba1 1B       		.uleb128 0x1b
 9590 0ba2 7E030000 		.4byte	.LASF172
 9591 0ba6 01       		.byte	0x1
 9592 0ba7 1502     		.2byte	0x215
 9593 0ba9 BD000000 		.4byte	0xbd
 9594 0bad 03       		.uleb128 0x3
 9595 0bae 91       		.byte	0x91
 9596 0baf A87F     		.sleb128 -88
 9597 0bb1 1B       		.uleb128 0x1b
 9598 0bb2 A9020000 		.4byte	.LASF173
 9599 0bb6 01       		.byte	0x1
 9600 0bb7 1702     		.2byte	0x217
 9601 0bb9 180D0000 		.4byte	0xd18
 9602 0bbd 02       		.uleb128 0x2
 9603 0bbe 91       		.byte	0x91
 9604 0bbf 64       		.sleb128 -28
 9605 0bc0 1B       		.uleb128 0x1b
 9606 0bc1 34020000 		.4byte	.LASF174
 9607 0bc5 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 214


 9608 0bc6 1802     		.2byte	0x218
 9609 0bc8 81000000 		.4byte	0x81
 9610 0bcc 02       		.uleb128 0x2
 9611 0bcd 91       		.byte	0x91
 9612 0bce 63       		.sleb128 -29
 9613 0bcf 1E       		.uleb128 0x1e
 9614 0bd0 6B5F7000 		.ascii	"k_p\000"
 9615 0bd4 01       		.byte	0x1
 9616 0bd5 1A02     		.2byte	0x21a
 9617 0bd7 BD000000 		.4byte	0xbd
 9618 0bdb 02       		.uleb128 0x2
 9619 0bdc 91       		.byte	0x91
 9620 0bdd 5C       		.sleb128 -36
 9621 0bde 1E       		.uleb128 0x1e
 9622 0bdf 6B5F6900 		.ascii	"k_i\000"
 9623 0be3 01       		.byte	0x1
 9624 0be4 1B02     		.2byte	0x21b
 9625 0be6 BD000000 		.4byte	0xbd
 9626 0bea 02       		.uleb128 0x2
 9627 0beb 91       		.byte	0x91
 9628 0bec 58       		.sleb128 -40
 9629 0bed 1E       		.uleb128 0x1e
 9630 0bee 6B5F6400 		.ascii	"k_d\000"
 9631 0bf2 01       		.byte	0x1
 9632 0bf3 1C02     		.2byte	0x21c
 9633 0bf5 BD000000 		.4byte	0xbd
 9634 0bf9 02       		.uleb128 0x2
 9635 0bfa 91       		.byte	0x91
 9636 0bfb 54       		.sleb128 -44
 9637 0bfc 1B       		.uleb128 0x1b
 9638 0bfd 130B0000 		.4byte	.LASF66
 9639 0c01 01       		.byte	0x1
 9640 0c02 1E02     		.2byte	0x21e
 9641 0c04 BD000000 		.4byte	0xbd
 9642 0c08 02       		.uleb128 0x2
 9643 0c09 91       		.byte	0x91
 9644 0c0a 50       		.sleb128 -48
 9645 0c0b 1B       		.uleb128 0x1b
 9646 0c0c B5040000 		.4byte	.LASF67
 9647 0c10 01       		.byte	0x1
 9648 0c11 1F02     		.2byte	0x21f
 9649 0c13 BD000000 		.4byte	0xbd
 9650 0c17 02       		.uleb128 0x2
 9651 0c18 91       		.byte	0x91
 9652 0c19 4C       		.sleb128 -52
 9653 0c1a 1B       		.uleb128 0x1b
 9654 0c1b A8040000 		.4byte	.LASF68
 9655 0c1f 01       		.byte	0x1
 9656 0c20 2002     		.2byte	0x220
 9657 0c22 BD000000 		.4byte	0xbd
 9658 0c26 02       		.uleb128 0x2
 9659 0c27 91       		.byte	0x91
 9660 0c28 48       		.sleb128 -56
 9661 0c29 1B       		.uleb128 0x1b
 9662 0c2a 120D0000 		.4byte	.LASF69
 9663 0c2e 01       		.byte	0x1
 9664 0c2f 2202     		.2byte	0x222
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 215


 9665 0c31 BD000000 		.4byte	0xbd
 9666 0c35 02       		.uleb128 0x2
 9667 0c36 91       		.byte	0x91
 9668 0c37 44       		.sleb128 -60
 9669 0c38 1B       		.uleb128 0x1b
 9670 0c39 51050000 		.4byte	.LASF70
 9671 0c3d 01       		.byte	0x1
 9672 0c3e 2302     		.2byte	0x223
 9673 0c40 BD000000 		.4byte	0xbd
 9674 0c44 02       		.uleb128 0x2
 9675 0c45 91       		.byte	0x91
 9676 0c46 40       		.sleb128 -64
 9677 0c47 1B       		.uleb128 0x1b
 9678 0c48 570C0000 		.4byte	.LASF71
 9679 0c4c 01       		.byte	0x1
 9680 0c4d 2402     		.2byte	0x224
 9681 0c4f BD000000 		.4byte	0xbd
 9682 0c53 03       		.uleb128 0x3
 9683 0c54 91       		.byte	0x91
 9684 0c55 BC7F     		.sleb128 -68
 9685 0c57 1B       		.uleb128 0x1b
 9686 0c58 6C050000 		.4byte	.LASF72
 9687 0c5c 01       		.byte	0x1
 9688 0c5d 2602     		.2byte	0x226
 9689 0c5f BD000000 		.4byte	0xbd
 9690 0c63 03       		.uleb128 0x3
 9691 0c64 91       		.byte	0x91
 9692 0c65 B87F     		.sleb128 -72
 9693 0c67 1B       		.uleb128 0x1b
 9694 0c68 77060000 		.4byte	.LASF73
 9695 0c6c 01       		.byte	0x1
 9696 0c6d 2702     		.2byte	0x227
 9697 0c6f BD000000 		.4byte	0xbd
 9698 0c73 03       		.uleb128 0x3
 9699 0c74 91       		.byte	0x91
 9700 0c75 B47F     		.sleb128 -76
 9701 0c77 1B       		.uleb128 0x1b
 9702 0c78 B00E0000 		.4byte	.LASF74
 9703 0c7c 01       		.byte	0x1
 9704 0c7d 2802     		.2byte	0x228
 9705 0c7f BD000000 		.4byte	0xbd
 9706 0c83 03       		.uleb128 0x3
 9707 0c84 91       		.byte	0x91
 9708 0c85 B07F     		.sleb128 -80
 9709 0c87 1B       		.uleb128 0x1b
 9710 0c88 2C050000 		.4byte	.LASF175
 9711 0c8c 01       		.byte	0x1
 9712 0c8d 2C02     		.2byte	0x22c
 9713 0c8f BD000000 		.4byte	0xbd
 9714 0c93 05       		.uleb128 0x5
 9715 0c94 03       		.byte	0x3
 9716 0c95 90000000 		.4byte	pos_error_sum.10369
 9717 0c99 1B       		.uleb128 0x1b
 9718 0c9a BC030000 		.4byte	.LASF176
 9719 0c9e 01       		.byte	0x1
 9720 0c9f 2D02     		.2byte	0x22d
 9721 0ca1 BD000000 		.4byte	0xbd
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 216


 9722 0ca5 05       		.uleb128 0x5
 9723 0ca6 03       		.byte	0x3
 9724 0ca7 9C000000 		.4byte	curr_error_sum.10370
 9725 0cab 1B       		.uleb128 0x1b
 9726 0cac D8090000 		.4byte	.LASF177
 9727 0cb0 01       		.byte	0x1
 9728 0cb1 2F02     		.2byte	0x22f
 9729 0cb3 BD000000 		.4byte	0xbd
 9730 0cb7 05       		.uleb128 0x5
 9731 0cb8 03       		.byte	0x3
 9732 0cb9 94000000 		.4byte	prev_pos_err.10371
 9733 0cbd 1B       		.uleb128 0x1b
 9734 0cbe F20A0000 		.4byte	.LASF178
 9735 0cc2 01       		.byte	0x1
 9736 0cc3 3002     		.2byte	0x230
 9737 0cc5 BD000000 		.4byte	0xbd
 9738 0cc9 05       		.uleb128 0x5
 9739 0cca 03       		.byte	0x3
 9740 0ccb A0000000 		.4byte	prev_curr_err.10372
 9741 0ccf 1B       		.uleb128 0x1b
 9742 0cd0 A80C0000 		.4byte	.LASF179
 9743 0cd4 01       		.byte	0x1
 9744 0cd5 3102     		.2byte	0x231
 9745 0cd7 BD000000 		.4byte	0xbd
 9746 0cdb 05       		.uleb128 0x5
 9747 0cdc 03       		.byte	0x3
 9748 0cdd A4000000 		.4byte	prev_pwm.10373
 9749 0ce1 1B       		.uleb128 0x1b
 9750 0ce2 BB040000 		.4byte	.LASF180
 9751 0ce6 01       		.byte	0x1
 9752 0ce7 3302     		.2byte	0x233
 9753 0ce9 81000000 		.4byte	0x81
 9754 0ced 05       		.uleb128 0x5
 9755 0cee 03       		.byte	0x3
 9756 0cef 98000000 		.4byte	motor_dir.10374
 9757 0cf3 1B       		.uleb128 0x1b
 9758 0cf4 91050000 		.4byte	.LASF181
 9759 0cf8 01       		.byte	0x1
 9760 0cf9 3402     		.2byte	0x234
 9761 0cfb 99000000 		.4byte	0x99
 9762 0cff 05       		.uleb128 0x5
 9763 0d00 03       		.byte	0x3
 9764 0d01 A8000000 		.4byte	position_counter.10375
 9765 0d05 1B       		.uleb128 0x1b
 9766 0d06 57090000 		.4byte	.LASF182
 9767 0d0a 01       		.byte	0x1
 9768 0d0b 3502     		.2byte	0x235
 9769 0d0d 81000000 		.4byte	0x81
 9770 0d11 05       		.uleb128 0x5
 9771 0d12 03       		.byte	0x3
 9772 0d13 8C000000 		.4byte	current_emg.10376
 9773 0d17 00       		.byte	0
 9774 0d18 0C       		.uleb128 0xc
 9775 0d19 04       		.byte	0x4
 9776 0d1a FA030000 		.4byte	0x3fa
 9777 0d1e 1A       		.uleb128 0x1a
 9778 0d1f 78040000 		.4byte	.LASF184
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 217


 9779 0d23 01       		.byte	0x1
 9780 0d24 DD03     		.2byte	0x3dd
 9781 0d26 00000000 		.4byte	.LFB69
 9782 0d2a D40C0000 		.4byte	.LFE69-.LFB69
 9783 0d2e 01       		.uleb128 0x1
 9784 0d2f 9C       		.byte	0x9c
 9785 0d30 190F0000 		.4byte	0xf19
 9786 0d34 1F       		.uleb128 0x1f
 9787 0d35 69647800 		.ascii	"idx\000"
 9788 0d39 01       		.byte	0x1
 9789 0d3a DD03     		.2byte	0x3dd
 9790 0d3c 81000000 		.4byte	0x81
 9791 0d40 03       		.uleb128 0x3
 9792 0d41 91       		.byte	0x91
 9793 0d42 977F     		.sleb128 -105
 9794 0d44 1B       		.uleb128 0x1b
 9795 0d45 4D000000 		.4byte	.LASF166
 9796 0d49 01       		.byte	0x1
 9797 0d4a DF03     		.2byte	0x3df
 9798 0d4c BD000000 		.4byte	0xbd
 9799 0d50 02       		.uleb128 0x2
 9800 0d51 91       		.byte	0x91
 9801 0d52 6C       		.sleb128 -20
 9802 0d53 1B       		.uleb128 0x1b
 9803 0d54 01010000 		.4byte	.LASF167
 9804 0d58 01       		.byte	0x1
 9805 0d59 E003     		.2byte	0x3e0
 9806 0d5b BD000000 		.4byte	0xbd
 9807 0d5f 02       		.uleb128 0x2
 9808 0d60 91       		.byte	0x91
 9809 0d61 68       		.sleb128 -24
 9810 0d62 1B       		.uleb128 0x1b
 9811 0d63 320D0000 		.4byte	.LASF168
 9812 0d67 01       		.byte	0x1
 9813 0d68 E103     		.2byte	0x3e1
 9814 0d6a BD000000 		.4byte	0xbd
 9815 0d6e 03       		.uleb128 0x3
 9816 0d6f 91       		.byte	0x91
 9817 0d70 9C7F     		.sleb128 -100
 9818 0d72 1B       		.uleb128 0x1b
 9819 0d73 80090000 		.4byte	.LASF169
 9820 0d77 01       		.byte	0x1
 9821 0d78 E203     		.2byte	0x3e2
 9822 0d7a BD000000 		.4byte	0xbd
 9823 0d7e 02       		.uleb128 0x2
 9824 0d7f 91       		.byte	0x91
 9825 0d80 64       		.sleb128 -28
 9826 0d81 1B       		.uleb128 0x1b
 9827 0d82 50040000 		.4byte	.LASF170
 9828 0d86 01       		.byte	0x1
 9829 0d87 E303     		.2byte	0x3e3
 9830 0d89 BD000000 		.4byte	0xbd
 9831 0d8d 02       		.uleb128 0x2
 9832 0d8e 91       		.byte	0x91
 9833 0d8f 60       		.sleb128 -32
 9834 0d90 1B       		.uleb128 0x1b
 9835 0d91 74030000 		.4byte	.LASF171
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 218


 9836 0d95 01       		.byte	0x1
 9837 0d96 E403     		.2byte	0x3e4
 9838 0d98 BD000000 		.4byte	0xbd
 9839 0d9c 03       		.uleb128 0x3
 9840 0d9d 91       		.byte	0x91
 9841 0d9e A47F     		.sleb128 -92
 9842 0da0 1B       		.uleb128 0x1b
 9843 0da1 7E030000 		.4byte	.LASF172
 9844 0da5 01       		.byte	0x1
 9845 0da6 E403     		.2byte	0x3e4
 9846 0da8 BD000000 		.4byte	0xbd
 9847 0dac 03       		.uleb128 0x3
 9848 0dad 91       		.byte	0x91
 9849 0dae A07F     		.sleb128 -96
 9850 0db0 1E       		.uleb128 0x1e
 9851 0db1 4D4F5400 		.ascii	"MOT\000"
 9852 0db5 01       		.byte	0x1
 9853 0db6 E603     		.2byte	0x3e6
 9854 0db8 180D0000 		.4byte	0xd18
 9855 0dbc 02       		.uleb128 0x2
 9856 0dbd 91       		.byte	0x91
 9857 0dbe 5C       		.sleb128 -36
 9858 0dbf 1B       		.uleb128 0x1b
 9859 0dc0 B90D0000 		.4byte	.LASF185
 9860 0dc4 01       		.byte	0x1
 9861 0dc5 E703     		.2byte	0x3e7
 9862 0dc7 81000000 		.4byte	0x81
 9863 0dcb 02       		.uleb128 0x2
 9864 0dcc 91       		.byte	0x91
 9865 0dcd 5B       		.sleb128 -37
 9866 0dce 1E       		.uleb128 0x1e
 9867 0dcf 6B5F7000 		.ascii	"k_p\000"
 9868 0dd3 01       		.byte	0x1
 9869 0dd4 E903     		.2byte	0x3e9
 9870 0dd6 BD000000 		.4byte	0xbd
 9871 0dda 02       		.uleb128 0x2
 9872 0ddb 91       		.byte	0x91
 9873 0ddc 54       		.sleb128 -44
 9874 0ddd 1E       		.uleb128 0x1e
 9875 0dde 6B5F6900 		.ascii	"k_i\000"
 9876 0de2 01       		.byte	0x1
 9877 0de3 EA03     		.2byte	0x3ea
 9878 0de5 BD000000 		.4byte	0xbd
 9879 0de9 02       		.uleb128 0x2
 9880 0dea 91       		.byte	0x91
 9881 0deb 50       		.sleb128 -48
 9882 0dec 1E       		.uleb128 0x1e
 9883 0ded 6B5F6400 		.ascii	"k_d\000"
 9884 0df1 01       		.byte	0x1
 9885 0df2 EB03     		.2byte	0x3eb
 9886 0df4 BD000000 		.4byte	0xbd
 9887 0df8 02       		.uleb128 0x2
 9888 0df9 91       		.byte	0x91
 9889 0dfa 4C       		.sleb128 -52
 9890 0dfb 1B       		.uleb128 0x1b
 9891 0dfc 130B0000 		.4byte	.LASF66
 9892 0e00 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 219


 9893 0e01 ED03     		.2byte	0x3ed
 9894 0e03 BD000000 		.4byte	0xbd
 9895 0e07 02       		.uleb128 0x2
 9896 0e08 91       		.byte	0x91
 9897 0e09 48       		.sleb128 -56
 9898 0e0a 1B       		.uleb128 0x1b
 9899 0e0b B5040000 		.4byte	.LASF67
 9900 0e0f 01       		.byte	0x1
 9901 0e10 EE03     		.2byte	0x3ee
 9902 0e12 BD000000 		.4byte	0xbd
 9903 0e16 02       		.uleb128 0x2
 9904 0e17 91       		.byte	0x91
 9905 0e18 44       		.sleb128 -60
 9906 0e19 1B       		.uleb128 0x1b
 9907 0e1a A8040000 		.4byte	.LASF68
 9908 0e1e 01       		.byte	0x1
 9909 0e1f EF03     		.2byte	0x3ef
 9910 0e21 BD000000 		.4byte	0xbd
 9911 0e25 02       		.uleb128 0x2
 9912 0e26 91       		.byte	0x91
 9913 0e27 40       		.sleb128 -64
 9914 0e28 1B       		.uleb128 0x1b
 9915 0e29 120D0000 		.4byte	.LASF69
 9916 0e2d 01       		.byte	0x1
 9917 0e2e F103     		.2byte	0x3f1
 9918 0e30 BD000000 		.4byte	0xbd
 9919 0e34 03       		.uleb128 0x3
 9920 0e35 91       		.byte	0x91
 9921 0e36 BC7F     		.sleb128 -68
 9922 0e38 1B       		.uleb128 0x1b
 9923 0e39 51050000 		.4byte	.LASF70
 9924 0e3d 01       		.byte	0x1
 9925 0e3e F203     		.2byte	0x3f2
 9926 0e40 BD000000 		.4byte	0xbd
 9927 0e44 03       		.uleb128 0x3
 9928 0e45 91       		.byte	0x91
 9929 0e46 B87F     		.sleb128 -72
 9930 0e48 1B       		.uleb128 0x1b
 9931 0e49 570C0000 		.4byte	.LASF71
 9932 0e4d 01       		.byte	0x1
 9933 0e4e F303     		.2byte	0x3f3
 9934 0e50 BD000000 		.4byte	0xbd
 9935 0e54 03       		.uleb128 0x3
 9936 0e55 91       		.byte	0x91
 9937 0e56 B47F     		.sleb128 -76
 9938 0e58 1B       		.uleb128 0x1b
 9939 0e59 6C050000 		.4byte	.LASF72
 9940 0e5d 01       		.byte	0x1
 9941 0e5e F503     		.2byte	0x3f5
 9942 0e60 BD000000 		.4byte	0xbd
 9943 0e64 03       		.uleb128 0x3
 9944 0e65 91       		.byte	0x91
 9945 0e66 B07F     		.sleb128 -80
 9946 0e68 1B       		.uleb128 0x1b
 9947 0e69 77060000 		.4byte	.LASF73
 9948 0e6d 01       		.byte	0x1
 9949 0e6e F603     		.2byte	0x3f6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 220


 9950 0e70 BD000000 		.4byte	0xbd
 9951 0e74 03       		.uleb128 0x3
 9952 0e75 91       		.byte	0x91
 9953 0e76 AC7F     		.sleb128 -84
 9954 0e78 1B       		.uleb128 0x1b
 9955 0e79 B00E0000 		.4byte	.LASF74
 9956 0e7d 01       		.byte	0x1
 9957 0e7e F703     		.2byte	0x3f7
 9958 0e80 BD000000 		.4byte	0xbd
 9959 0e84 03       		.uleb128 0x3
 9960 0e85 91       		.byte	0x91
 9961 0e86 A87F     		.sleb128 -88
 9962 0e88 1B       		.uleb128 0x1b
 9963 0e89 2C050000 		.4byte	.LASF175
 9964 0e8d 01       		.byte	0x1
 9965 0e8e FB03     		.2byte	0x3fb
 9966 0e90 70020000 		.4byte	0x270
 9967 0e94 05       		.uleb128 0x5
 9968 0e95 03       		.byte	0x3
 9969 0e96 B0000000 		.4byte	pos_error_sum.10423
 9970 0e9a 1B       		.uleb128 0x1b
 9971 0e9b BC030000 		.4byte	.LASF176
 9972 0e9f 01       		.byte	0x1
 9973 0ea0 FC03     		.2byte	0x3fc
 9974 0ea2 70020000 		.4byte	0x270
 9975 0ea6 05       		.uleb128 0x5
 9976 0ea7 03       		.byte	0x3
 9977 0ea8 C4000000 		.4byte	curr_error_sum.10424
 9978 0eac 1B       		.uleb128 0x1b
 9979 0ead D8090000 		.4byte	.LASF177
 9980 0eb1 01       		.byte	0x1
 9981 0eb2 FE03     		.2byte	0x3fe
 9982 0eb4 70020000 		.4byte	0x270
 9983 0eb8 05       		.uleb128 0x5
 9984 0eb9 03       		.byte	0x3
 9985 0eba B8000000 		.4byte	prev_pos_err.10425
 9986 0ebe 1B       		.uleb128 0x1b
 9987 0ebf F20A0000 		.4byte	.LASF178
 9988 0ec3 01       		.byte	0x1
 9989 0ec4 FF03     		.2byte	0x3ff
 9990 0ec6 70020000 		.4byte	0x270
 9991 0eca 05       		.uleb128 0x5
 9992 0ecb 03       		.byte	0x3
 9993 0ecc CC000000 		.4byte	prev_curr_err.10426
 9994 0ed0 1B       		.uleb128 0x1b
 9995 0ed1 A80C0000 		.4byte	.LASF179
 9996 0ed5 01       		.byte	0x1
 9997 0ed6 0004     		.2byte	0x400
 9998 0ed8 70020000 		.4byte	0x270
 9999 0edc 05       		.uleb128 0x5
 10000 0edd 03       		.byte	0x3
 10001 0ede D4000000 		.4byte	prev_pwm.10427
 10002 0ee2 1B       		.uleb128 0x1b
 10003 0ee3 BB040000 		.4byte	.LASF180
 10004 0ee7 01       		.byte	0x1
 10005 0ee8 0204     		.2byte	0x402
 10006 0eea 190F0000 		.4byte	0xf19
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 221


 10007 0eee 05       		.uleb128 0x5
 10008 0eef 03       		.byte	0x3
 10009 0ef0 C0000000 		.4byte	motor_dir.10428
 10010 0ef4 1B       		.uleb128 0x1b
 10011 0ef5 91050000 		.4byte	.LASF181
 10012 0ef9 01       		.byte	0x1
 10013 0efa 0304     		.2byte	0x403
 10014 0efc 3E030000 		.4byte	0x33e
 10015 0f00 05       		.uleb128 0x5
 10016 0f01 03       		.byte	0x3
 10017 0f02 DC000000 		.4byte	position_counter.10429
 10018 0f06 1B       		.uleb128 0x1b
 10019 0f07 57090000 		.4byte	.LASF182
 10020 0f0b 01       		.byte	0x1
 10021 0f0c 0404     		.2byte	0x404
 10022 0f0e 190F0000 		.4byte	0xf19
 10023 0f12 05       		.uleb128 0x5
 10024 0f13 03       		.byte	0x3
 10025 0f14 AC000000 		.4byte	current_emg.10430
 10026 0f18 00       		.byte	0
 10027 0f19 07       		.uleb128 0x7
 10028 0f1a 81000000 		.4byte	0x81
 10029 0f1e 290F0000 		.4byte	0xf29
 10030 0f22 08       		.uleb128 0x8
 10031 0f23 0E010000 		.4byte	0x10e
 10032 0f27 01       		.byte	0x1
 10033 0f28 00       		.byte	0
 10034 0f29 1A       		.uleb128 0x1a
 10035 0f2a B8020000 		.4byte	.LASF186
 10036 0f2e 01       		.byte	0x1
 10037 0f2f BA05     		.2byte	0x5ba
 10038 0f31 00000000 		.4byte	.LFB70
 10039 0f35 BC070000 		.4byte	.LFE70-.LFB70
 10040 0f39 01       		.uleb128 0x1
 10041 0f3a 9C       		.byte	0x9c
 10042 0f3b AA100000 		.4byte	0x10aa
 10043 0f3f 20       		.uleb128 0x20
 10044 0f40 8F000000 		.4byte	.LASF187
 10045 0f44 01       		.byte	0x1
 10046 0f45 BA05     		.2byte	0x5ba
 10047 0f47 81000000 		.4byte	0x81
 10048 0f4b 02       		.uleb128 0x2
 10049 0f4c 91       		.byte	0x91
 10050 0f4d 47       		.sleb128 -57
 10051 0f4e 20       		.uleb128 0x20
 10052 0f4f 6C090000 		.4byte	.LASF188
 10053 0f53 01       		.byte	0x1
 10054 0f54 BA05     		.2byte	0x5ba
 10055 0f56 81000000 		.4byte	0x81
 10056 0f5a 02       		.uleb128 0x2
 10057 0f5b 91       		.byte	0x91
 10058 0f5c 46       		.sleb128 -58
 10059 0f5d 1B       		.uleb128 0x1b
 10060 0f5e 58060000 		.4byte	.LASF189
 10061 0f62 01       		.byte	0x1
 10062 0f63 BC05     		.2byte	0x5bc
 10063 0f65 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 222


 10064 0f69 02       		.uleb128 0x2
 10065 0f6a 91       		.byte	0x91
 10066 0f6b 6F       		.sleb128 -17
 10067 0f6c 1E       		.uleb128 0x1e
 10068 0f6d 6A6A00   		.ascii	"jj\000"
 10069 0f70 01       		.byte	0x1
 10070 0f71 BF05     		.2byte	0x5bf
 10071 0f73 81000000 		.4byte	0x81
 10072 0f77 02       		.uleb128 0x2
 10073 0f78 91       		.byte	0x91
 10074 0f79 6E       		.sleb128 -18
 10075 0f7a 1B       		.uleb128 0x1b
 10076 0f7b 91020000 		.4byte	.LASF190
 10077 0f7f 01       		.byte	0x1
 10078 0f80 C105     		.2byte	0x5c1
 10079 0f82 AA100000 		.4byte	0x10aa
 10080 0f86 02       		.uleb128 0x2
 10081 0f87 91       		.byte	0x91
 10082 0f88 4C       		.sleb128 -52
 10083 0f89 1B       		.uleb128 0x1b
 10084 0f8a 5D0D0000 		.4byte	.LASF191
 10085 0f8e 01       		.byte	0x1
 10086 0f8f C205     		.2byte	0x5c2
 10087 0f91 B1000000 		.4byte	0xb1
 10088 0f95 02       		.uleb128 0x2
 10089 0f96 91       		.byte	0x91
 10090 0f97 6C       		.sleb128 -20
 10091 0f98 1B       		.uleb128 0x1b
 10092 0f99 DD0A0000 		.4byte	.LASF192
 10093 0f9d 01       		.byte	0x1
 10094 0f9e C305     		.2byte	0x5c3
 10095 0fa0 BD000000 		.4byte	0xbd
 10096 0fa4 02       		.uleb128 0x2
 10097 0fa5 91       		.byte	0x91
 10098 0fa6 60       		.sleb128 -32
 10099 0fa7 1B       		.uleb128 0x1b
 10100 0fa8 5E0C0000 		.4byte	.LASF193
 10101 0fac 01       		.byte	0x1
 10102 0fad C405     		.2byte	0x5c4
 10103 0faf BD000000 		.4byte	0xbd
 10104 0fb3 02       		.uleb128 0x2
 10105 0fb4 91       		.byte	0x91
 10106 0fb5 68       		.sleb128 -24
 10107 0fb6 1B       		.uleb128 0x1b
 10108 0fb7 05040000 		.4byte	.LASF194
 10109 0fbb 01       		.byte	0x1
 10110 0fbc C505     		.2byte	0x5c5
 10111 0fbe BD000000 		.4byte	0xbd
 10112 0fc2 02       		.uleb128 0x2
 10113 0fc3 91       		.byte	0x91
 10114 0fc4 58       		.sleb128 -40
 10115 0fc5 1B       		.uleb128 0x1b
 10116 0fc6 420C0000 		.4byte	.LASF195
 10117 0fca 01       		.byte	0x1
 10118 0fcb C605     		.2byte	0x5c6
 10119 0fcd BD000000 		.4byte	0xbd
 10120 0fd1 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 223


 10121 0fd2 91       		.byte	0x91
 10122 0fd3 5C       		.sleb128 -36
 10123 0fd4 1B       		.uleb128 0x1b
 10124 0fd5 E5090000 		.4byte	.LASF196
 10125 0fd9 01       		.byte	0x1
 10126 0fda C705     		.2byte	0x5c7
 10127 0fdc A5000000 		.4byte	0xa5
 10128 0fe0 02       		.uleb128 0x2
 10129 0fe1 91       		.byte	0x91
 10130 0fe2 67       		.sleb128 -25
 10131 0fe3 1B       		.uleb128 0x1b
 10132 0fe4 700A0000 		.4byte	.LASF197
 10133 0fe8 01       		.byte	0x1
 10134 0fe9 C905     		.2byte	0x5c9
 10135 0feb BA100000 		.4byte	0x10ba
 10136 0fef 05       		.uleb128 0x5
 10137 0ff0 03       		.byte	0x3
 10138 0ff1 E4000000 		.4byte	last_value_encoder.10470
 10139 0ff5 1B       		.uleb128 0x1b
 10140 0ff6 1A060000 		.4byte	.LASF198
 10141 0ffa 01       		.byte	0x1
 10142 0ffb CA05     		.2byte	0x5ca
 10143 0ffd BA100000 		.4byte	0x10ba
 10144 1001 05       		.uleb128 0x5
 10145 1002 03       		.byte	0x3
 10146 1003 FC000000 		.4byte	comp_value_encoder.10471
 10147 1007 1B       		.uleb128 0x1b
 10148 1008 CC020000 		.4byte	.LASF199
 10149 100c 01       		.byte	0x1
 10150 100d CB05     		.2byte	0x5cb
 10151 100f D0100000 		.4byte	0x10d0
 10152 1013 05       		.uleb128 0x5
 10153 1014 03       		.byte	0x3
 10154 1015 14010000 		.4byte	error.10472
 10155 1019 1B       		.uleb128 0x1b
 10156 101a 2C0C0000 		.4byte	.LASF200
 10157 101e 01       		.byte	0x1
 10158 101f CD05     		.2byte	0x5cd
 10159 1021 190F0000 		.4byte	0xf19
 10160 1025 05       		.uleb128 0x5
 10161 1026 03       		.byte	0x3
 10162 1027 04000000 		.4byte	only_first_time.10473
 10163 102b 1B       		.uleb128 0x1b
 10164 102c 5A020000 		.4byte	.LASF201
 10165 1030 01       		.byte	0x1
 10166 1031 CE05     		.2byte	0x5ce
 10167 1033 190F0000 		.4byte	0xf19
 10168 1037 05       		.uleb128 0x5
 10169 1038 03       		.byte	0x3
 10170 1039 6C010000 		.4byte	safe_startup_motor_activation.10474
 10171 103d 1B       		.uleb128 0x1b
 10172 103e 64000000 		.4byte	.LASF202
 10173 1042 01       		.byte	0x1
 10174 1043 CF05     		.2byte	0x5cf
 10175 1045 190F0000 		.4byte	0xf19
 10176 1049 05       		.uleb128 0x5
 10177 104a 03       		.byte	0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 224


 10178 104b 68010000 		.4byte	one_time_execute.10475
 10179 104f 1B       		.uleb128 0x1b
 10180 1050 B6080000 		.4byte	.LASF203
 10181 1054 01       		.byte	0x1
 10182 1055 D005     		.2byte	0x5d0
 10183 1057 3E030000 		.4byte	0x33e
 10184 105b 05       		.uleb128 0x5
 10185 105c 03       		.byte	0x3
 10186 105d 70010000 		.4byte	count_startup_motor.10476
 10187 1061 1B       		.uleb128 0x1b
 10188 1062 E8020000 		.4byte	.LASF204
 10189 1066 01       		.byte	0x1
 10190 1067 D105     		.2byte	0x5d1
 10191 1069 190F0000 		.4byte	0xf19
 10192 106d 05       		.uleb128 0x5
 10193 106e 03       		.byte	0x3
 10194 106f 64010000 		.4byte	pos_reconstruct.10477
 10195 1073 1B       		.uleb128 0x1b
 10196 1074 35080000 		.4byte	.LASF205
 10197 1078 01       		.byte	0x1
 10198 1079 D305     		.2byte	0x5d3
 10199 107b BA100000 		.4byte	0x10ba
 10200 107f 05       		.uleb128 0x5
 10201 1080 03       		.byte	0x3
 10202 1081 1C010000 		.4byte	v_value.10478
 10203 1085 1B       		.uleb128 0x1b
 10204 1086 A70E0000 		.4byte	.LASF206
 10205 108a 01       		.byte	0x1
 10206 108b D405     		.2byte	0x5d4
 10207 108d BA100000 		.4byte	0x10ba
 10208 1091 05       		.uleb128 0x5
 10209 1092 03       		.byte	0x3
 10210 1093 34010000 		.4byte	vv_value.10479
 10211 1097 1B       		.uleb128 0x1b
 10212 1098 40010000 		.4byte	.LASF207
 10213 109c 01       		.byte	0x1
 10214 109d D505     		.2byte	0x5d5
 10215 109f BA100000 		.4byte	0x10ba
 10216 10a3 05       		.uleb128 0x5
 10217 10a4 03       		.byte	0x3
 10218 10a5 4C010000 		.4byte	vvv_value.10480
 10219 10a9 00       		.byte	0
 10220 10aa 07       		.uleb128 0x7
 10221 10ab 99000000 		.4byte	0x99
 10222 10af BA100000 		.4byte	0x10ba
 10223 10b3 08       		.uleb128 0x8
 10224 10b4 0E010000 		.4byte	0x10e
 10225 10b8 02       		.byte	0x2
 10226 10b9 00       		.byte	0
 10227 10ba 07       		.uleb128 0x7
 10228 10bb BD000000 		.4byte	0xbd
 10229 10bf D0100000 		.4byte	0x10d0
 10230 10c3 08       		.uleb128 0x8
 10231 10c4 0E010000 		.4byte	0x10e
 10232 10c8 01       		.byte	0x1
 10233 10c9 08       		.uleb128 0x8
 10234 10ca 0E010000 		.4byte	0x10e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 225


 10235 10ce 02       		.byte	0x2
 10236 10cf 00       		.byte	0
 10237 10d0 07       		.uleb128 0x7
 10238 10d1 81000000 		.4byte	0x81
 10239 10d5 E6100000 		.4byte	0x10e6
 10240 10d9 08       		.uleb128 0x8
 10241 10da 0E010000 		.4byte	0x10e
 10242 10de 01       		.byte	0x1
 10243 10df 08       		.uleb128 0x8
 10244 10e0 0E010000 		.4byte	0x10e
 10245 10e4 02       		.byte	0x2
 10246 10e5 00       		.byte	0
 10247 10e6 1D       		.uleb128 0x1d
 10248 10e7 790B0000 		.4byte	.LASF208
 10249 10eb 01       		.byte	0x1
 10250 10ec 8706     		.2byte	0x687
 10251 10ee 00000000 		.4byte	.LFB71
 10252 10f2 3C0D0000 		.4byte	.LFE71-.LFB71
 10253 10f6 01       		.uleb128 0x1
 10254 10f7 9C       		.byte	0x9c
 10255 10f8 78110000 		.4byte	0x1178
 10256 10fc 1B       		.uleb128 0x1b
 10257 10fd 450B0000 		.4byte	.LASF209
 10258 1101 01       		.byte	0x1
 10259 1102 9B06     		.2byte	0x69b
 10260 1104 BD000000 		.4byte	0xbd
 10261 1108 02       		.uleb128 0x2
 10262 1109 91       		.byte	0x91
 10263 110a 64       		.sleb128 -28
 10264 110b 1B       		.uleb128 0x1b
 10265 110c 100C0000 		.4byte	.LASF210
 10266 1110 01       		.byte	0x1
 10267 1111 9D06     		.2byte	0x69d
 10268 1113 8D000000 		.4byte	0x8d
 10269 1117 05       		.uleb128 0x5
 10270 1118 03       		.byte	0x3
 10271 1119 80010000 		.4byte	emg_counter_1.10496
 10272 111d 1B       		.uleb128 0x1b
 10273 111e 1E0C0000 		.4byte	.LASF211
 10274 1122 01       		.byte	0x1
 10275 1123 9E06     		.2byte	0x69e
 10276 1125 8D000000 		.4byte	0x8d
 10277 1129 05       		.uleb128 0x5
 10278 112a 03       		.byte	0x3
 10279 112b 82010000 		.4byte	emg_counter_2.10497
 10280 112f 1B       		.uleb128 0x1b
 10281 1130 FD010000 		.4byte	.LASF212
 10282 1134 01       		.byte	0x1
 10283 1135 9F06     		.2byte	0x69f
 10284 1137 81000000 		.4byte	0x81
 10285 113b 05       		.uleb128 0x5
 10286 113c 03       		.byte	0x3
 10287 113d 06000000 		.4byte	first_tension_valid.10498
 10288 1141 1B       		.uleb128 0x1b
 10289 1142 DE080000 		.4byte	.LASF213
 10290 1146 01       		.byte	0x1
 10291 1147 A106     		.2byte	0x6a1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 226


 10292 1149 8D000000 		.4byte	0x8d
 10293 114d 05       		.uleb128 0x5
 10294 114e 03       		.byte	0x3
 10295 114f 78010000 		.4byte	count.10499
 10296 1153 1B       		.uleb128 0x1b
 10297 1154 30010000 		.4byte	.LASF214
 10298 1158 01       		.byte	0x1
 10299 1159 A206     		.2byte	0x6a2
 10300 115b 99000000 		.4byte	0x99
 10301 115f 05       		.uleb128 0x5
 10302 1160 03       		.byte	0x3
 10303 1161 7C010000 		.4byte	v_count.10500
 10304 1165 1E       		.uleb128 0x1e
 10305 1166 69647800 		.ascii	"idx\000"
 10306 116a 01       		.byte	0x1
 10307 116b A306     		.2byte	0x6a3
 10308 116d 81000000 		.4byte	0x81
 10309 1171 05       		.uleb128 0x5
 10310 1172 03       		.byte	0x3
 10311 1173 7A010000 		.4byte	idx.10501
 10312 1177 00       		.byte	0
 10313 1178 21       		.uleb128 0x21
 10314 1179 560B0000 		.4byte	.LASF215
 10315 117d 01       		.byte	0x1
 10316 117e 3508     		.2byte	0x835
 10317 1180 00000000 		.4byte	.LFB72
 10318 1184 E0000000 		.4byte	.LFE72-.LFB72
 10319 1188 01       		.uleb128 0x1
 10320 1189 9C       		.byte	0x9c
 10321 118a A6110000 		.4byte	0x11a6
 10322 118e 22       		.uleb128 0x22
 10323 118f 06000000 		.4byte	.LBB2
 10324 1193 C0000000 		.4byte	.LBE2-.LBB2
 10325 1197 1E       		.uleb128 0x1e
 10326 1198 6900     		.ascii	"i\000"
 10327 119a 01       		.byte	0x1
 10328 119b 3708     		.2byte	0x837
 10329 119d 81000000 		.4byte	0x81
 10330 11a1 02       		.uleb128 0x2
 10331 11a2 91       		.byte	0x91
 10332 11a3 77       		.sleb128 -9
 10333 11a4 00       		.byte	0
 10334 11a5 00       		.byte	0
 10335 11a6 23       		.uleb128 0x23
 10336 11a7 F8020000 		.4byte	.LASF216
 10337 11ab 01       		.byte	0x1
 10338 11ac 5108     		.2byte	0x851
 10339 11ae 00000000 		.4byte	.LFB73
 10340 11b2 78000000 		.4byte	.LFE73-.LFB73
 10341 11b6 01       		.uleb128 0x1
 10342 11b7 9C       		.byte	0x9c
 10343 11b8 F9110000 		.4byte	0x11f9
 10344 11bc 20       		.uleb128 0x20
 10345 11bd EE090000 		.4byte	.LASF217
 10346 11c1 01       		.byte	0x1
 10347 11c2 5108     		.2byte	0x851
 10348 11c4 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 227


 10349 11c8 02       		.uleb128 0x2
 10350 11c9 91       		.byte	0x91
 10351 11ca 6F       		.sleb128 -17
 10352 11cb 1B       		.uleb128 0x1b
 10353 11cc 58060000 		.4byte	.LASF189
 10354 11d0 01       		.byte	0x1
 10355 11d1 5308     		.2byte	0x853
 10356 11d3 81000000 		.4byte	0x81
 10357 11d7 02       		.uleb128 0x2
 10358 11d8 91       		.byte	0x91
 10359 11d9 73       		.sleb128 -13
 10360 11da 1B       		.uleb128 0x1b
 10361 11db 640A0000 		.4byte	.LASF218
 10362 11df 01       		.byte	0x1
 10363 11e0 5408     		.2byte	0x854
 10364 11e2 8D000000 		.4byte	0x8d
 10365 11e6 02       		.uleb128 0x2
 10366 11e7 91       		.byte	0x91
 10367 11e8 76       		.sleb128 -10
 10368 11e9 1B       		.uleb128 0x1b
 10369 11ea F5060000 		.4byte	.LASF219
 10370 11ee 01       		.byte	0x1
 10371 11ef 5508     		.2byte	0x855
 10372 11f1 8D000000 		.4byte	0x8d
 10373 11f5 02       		.uleb128 0x2
 10374 11f6 91       		.byte	0x91
 10375 11f7 74       		.sleb128 -12
 10376 11f8 00       		.byte	0
 10377 11f9 1D       		.uleb128 0x1d
 10378 11fa 72070000 		.4byte	.LASF220
 10379 11fe 01       		.byte	0x1
 10380 11ff 6508     		.2byte	0x865
 10381 1201 00000000 		.4byte	.LFB74
 10382 1205 78030000 		.4byte	.LFE74-.LFB74
 10383 1209 01       		.uleb128 0x1
 10384 120a 9C       		.byte	0x9c
 10385 120b F8120000 		.4byte	0x12f8
 10386 120f 1B       		.uleb128 0x1b
 10387 1210 09000000 		.4byte	.LASF221
 10388 1214 01       		.byte	0x1
 10389 1215 6608     		.2byte	0x866
 10390 1217 81000000 		.4byte	0x81
 10391 121b 05       		.uleb128 0x5
 10392 121c 03       		.byte	0x3
 10393 121d 84010000 		.4byte	pos_cycle_status.10557
 10394 1221 1B       		.uleb128 0x1b
 10395 1222 A20B0000 		.4byte	.LASF222
 10396 1226 01       		.byte	0x1
 10397 1227 6708     		.2byte	0x867
 10398 1229 190F0000 		.4byte	0xf19
 10399 122d 05       		.uleb128 0x5
 10400 122e 03       		.byte	0x3
 10401 122f 90010000 		.4byte	emg_cycle_status.10558
 10402 1233 1B       		.uleb128 0x1b
 10403 1234 4B0D0000 		.4byte	.LASF223
 10404 1238 01       		.byte	0x1
 10405 1239 6808     		.2byte	0x868
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 228


 10406 123b 81000000 		.4byte	0x81
 10407 123f 05       		.uleb128 0x5
 10408 1240 03       		.byte	0x3
 10409 1241 92010000 		.4byte	rest_cycle_status.10559
 10410 1245 1B       		.uleb128 0x1b
 10411 1246 4C020000 		.4byte	.LASF224
 10412 124a 01       		.byte	0x1
 10413 124b 6908     		.2byte	0x869
 10414 124d BD000000 		.4byte	0xbd
 10415 1251 05       		.uleb128 0x5
 10416 1252 03       		.byte	0x3
 10417 1253 08000000 		.4byte	bin_threshold.10560
 10418 1257 1B       		.uleb128 0x1b
 10419 1258 96010000 		.4byte	.LASF225
 10420 125c 01       		.byte	0x1
 10421 125d 6A08     		.2byte	0x86a
 10422 125f BD000000 		.4byte	0xbd
 10423 1263 05       		.uleb128 0x5
 10424 1264 03       		.byte	0x3
 10425 1265 88010000 		.4byte	thr_pos.10561
 10426 1269 1B       		.uleb128 0x1b
 10427 126a 07090000 		.4byte	.LASF226
 10428 126e 01       		.byte	0x1
 10429 126f 6A08     		.2byte	0x86a
 10430 1271 BD000000 		.4byte	0xbd
 10431 1275 05       		.uleb128 0x5
 10432 1276 03       		.byte	0x3
 10433 1277 8C010000 		.4byte	max_pos.10562
 10434 127b 1E       		.uleb128 0x1e
 10435 127c 6900     		.ascii	"i\000"
 10436 127e 01       		.byte	0x1
 10437 127f 6B08     		.2byte	0x86b
 10438 1281 81000000 		.4byte	0x81
 10439 1285 02       		.uleb128 0x2
 10440 1286 91       		.byte	0x91
 10441 1287 77       		.sleb128 -9
 10442 1288 1B       		.uleb128 0x1b
 10443 1289 C5040000 		.4byte	.LASF227
 10444 128d 01       		.byte	0x1
 10445 128e 6B08     		.2byte	0x86b
 10446 1290 81000000 		.4byte	0x81
 10447 1294 02       		.uleb128 0x2
 10448 1295 91       		.byte	0x91
 10449 1296 67       		.sleb128 -25
 10450 1297 1B       		.uleb128 0x1b
 10451 1298 CC000000 		.4byte	.LASF228
 10452 129c 01       		.byte	0x1
 10453 129d 6B08     		.2byte	0x86b
 10454 129f 81000000 		.4byte	0x81
 10455 12a3 02       		.uleb128 0x2
 10456 12a4 91       		.byte	0x91
 10457 12a5 66       		.sleb128 -26
 10458 12a6 1B       		.uleb128 0x1b
 10459 12a7 6A0B0000 		.4byte	.LASF229
 10460 12ab 01       		.byte	0x1
 10461 12ac 6C08     		.2byte	0x86c
 10462 12ae BD000000 		.4byte	0xbd
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 229


 10463 12b2 02       		.uleb128 0x2
 10464 12b3 91       		.byte	0x91
 10465 12b4 70       		.sleb128 -16
 10466 12b5 1B       		.uleb128 0x1b
 10467 12b6 1C040000 		.4byte	.LASF230
 10468 12ba 01       		.byte	0x1
 10469 12bb 6C08     		.2byte	0x86c
 10470 12bd BD000000 		.4byte	0xbd
 10471 12c1 02       		.uleb128 0x2
 10472 12c2 91       		.byte	0x91
 10473 12c3 6C       		.sleb128 -20
 10474 12c4 1B       		.uleb128 0x1b
 10475 12c5 B7030000 		.4byte	.LASF231
 10476 12c9 01       		.byte	0x1
 10477 12ca 6D08     		.2byte	0x86d
 10478 12cc BD000000 		.4byte	0xbd
 10479 12d0 02       		.uleb128 0x2
 10480 12d1 91       		.byte	0x91
 10481 12d2 68       		.sleb128 -24
 10482 12d3 1B       		.uleb128 0x1b
 10483 12d4 FE050000 		.4byte	.LASF232
 10484 12d8 01       		.byte	0x1
 10485 12d9 6E08     		.2byte	0x86e
 10486 12db 99000000 		.4byte	0x99
 10487 12df 05       		.uleb128 0x5
 10488 12e0 03       		.byte	0x3
 10489 12e1 94010000 		.4byte	timer_value_s.10569
 10490 12e5 1B       		.uleb128 0x1b
 10491 12e6 A2050000 		.4byte	.LASF233
 10492 12ea 01       		.byte	0x1
 10493 12eb 6E08     		.2byte	0x86e
 10494 12ed 99000000 		.4byte	0x99
 10495 12f1 05       		.uleb128 0x5
 10496 12f2 03       		.byte	0x3
 10497 12f3 98010000 		.4byte	timer_value_e.10570
 10498 12f7 00       		.byte	0
 10499 12f8 1D       		.uleb128 0x1d
 10500 12f9 94090000 		.4byte	.LASF234
 10501 12fd 01       		.byte	0x1
 10502 12fe D108     		.2byte	0x8d1
 10503 1300 00000000 		.4byte	.LFB75
 10504 1304 08010000 		.4byte	.LFE75-.LFB75
 10505 1308 01       		.uleb128 0x1
 10506 1309 9C       		.byte	0x9c
 10507 130a 7E130000 		.4byte	0x137e
 10508 130e 1B       		.uleb128 0x1b
 10509 130f D8060000 		.4byte	.LASF235
 10510 1313 01       		.byte	0x1
 10511 1314 D308     		.2byte	0x8d3
 10512 1316 EA000000 		.4byte	0xea
 10513 131a 02       		.uleb128 0x2
 10514 131b 91       		.byte	0x91
 10515 131c 64       		.sleb128 -28
 10516 131d 1B       		.uleb128 0x1b
 10517 131e 4B0B0000 		.4byte	.LASF236
 10518 1322 01       		.byte	0x1
 10519 1323 D408     		.2byte	0x8d4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 230


 10520 1325 81000000 		.4byte	0x81
 10521 1329 05       		.uleb128 0x5
 10522 132a 03       		.byte	0x3
 10523 132b A0010000 		.4byte	row_number.10592
 10524 132f 1B       		.uleb128 0x1b
 10525 1330 EF030000 		.4byte	.LASF237
 10526 1334 01       		.byte	0x1
 10527 1335 D508     		.2byte	0x8d5
 10528 1337 81000000 		.4byte	0x81
 10529 133b 02       		.uleb128 0x2
 10530 133c 91       		.byte	0x91
 10531 133d 77       		.sleb128 -9
 10532 133e 1B       		.uleb128 0x1b
 10533 133f DD0B0000 		.4byte	.LASF238
 10534 1343 01       		.byte	0x1
 10535 1344 D608     		.2byte	0x8d6
 10536 1346 7E130000 		.4byte	0x137e
 10537 134a 02       		.uleb128 0x2
 10538 134b 91       		.byte	0x91
 10539 134c 70       		.sleb128 -16
 10540 134d 1B       		.uleb128 0x1b
 10541 134e D4000000 		.4byte	.LASF239
 10542 1352 01       		.byte	0x1
 10543 1353 D708     		.2byte	0x8d7
 10544 1355 7E130000 		.4byte	0x137e
 10545 1359 02       		.uleb128 0x2
 10546 135a 91       		.byte	0x91
 10547 135b 6C       		.sleb128 -20
 10548 135c 1B       		.uleb128 0x1b
 10549 135d 1A0E0000 		.4byte	.LASF240
 10550 1361 01       		.byte	0x1
 10551 1362 D808     		.2byte	0x8d8
 10552 1364 81000000 		.4byte	0x81
 10553 1368 02       		.uleb128 0x2
 10554 1369 91       		.byte	0x91
 10555 136a 6B       		.sleb128 -21
 10556 136b 1B       		.uleb128 0x1b
 10557 136c ED080000 		.4byte	.LASF241
 10558 1370 01       		.byte	0x1
 10559 1371 D908     		.2byte	0x8d9
 10560 1373 7E130000 		.4byte	0x137e
 10561 1377 05       		.uleb128 0x5
 10562 1378 03       		.byte	0x3
 10563 1379 9C010000 		.4byte	m_addr.10597
 10564 137d 00       		.byte	0
 10565 137e 0C       		.uleb128 0xc
 10566 137f 04       		.byte	0x4
 10567 1380 81000000 		.4byte	0x81
 10568 1384 07       		.uleb128 0x7
 10569 1385 94130000 		.4byte	0x1394
 10570 1389 94130000 		.4byte	0x1394
 10571 138d 08       		.uleb128 0x8
 10572 138e 0E010000 		.4byte	0x10e
 10573 1392 1C       		.byte	0x1c
 10574 1393 00       		.byte	0
 10575 1394 24       		.uleb128 0x24
 10576 1395 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 231


 10577 1399 19       		.uleb128 0x19
 10578 139a E80B0000 		.4byte	.LASF242
 10579 139e 01       		.byte	0x1
 10580 139f 40       		.byte	0x40
 10581 13a0 AA130000 		.4byte	0x13aa
 10582 13a4 05       		.uleb128 0x5
 10583 13a5 03       		.byte	0x3
 10584 13a6 00000000 		.4byte	pwm_preload_values
 10585 13aa 24       		.uleb128 0x24
 10586 13ab 84130000 		.4byte	0x1384
 10587 13af 25       		.uleb128 0x25
 10588 13b0 C90C0000 		.4byte	.LASF243
 10589 13b4 08       		.byte	0x8
 10590 13b5 1207     		.2byte	0x712
 10591 13b7 BB130000 		.4byte	0x13bb
 10592 13bb 06       		.uleb128 0x6
 10593 13bc 76000000 		.4byte	0x76
 10594 13c0 07       		.uleb128 0x7
 10595 13c1 99010000 		.4byte	0x199
 10596 13c5 D0130000 		.4byte	0x13d0
 10597 13c9 08       		.uleb128 0x8
 10598 13ca 0E010000 		.4byte	0x10e
 10599 13ce 01       		.byte	0x1
 10600 13cf 00       		.byte	0
 10601 13d0 25       		.uleb128 0x25
 10602 13d1 3E060000 		.4byte	.LASF244
 10603 13d5 07       		.byte	0x7
 10604 13d6 8301     		.2byte	0x183
 10605 13d8 C0130000 		.4byte	0x13c0
 10606 13dc 25       		.uleb128 0x25
 10607 13dd 13040000 		.4byte	.LASF245
 10608 13e1 07       		.byte	0x7
 10609 13e2 8301     		.2byte	0x183
 10610 13e4 C0130000 		.4byte	0x13c0
 10611 13e8 25       		.uleb128 0x25
 10612 13e9 300A0000 		.4byte	.LASF246
 10613 13ed 07       		.byte	0x7
 10614 13ee 8301     		.2byte	0x183
 10615 13f0 C0130000 		.4byte	0x13c0
 10616 13f4 07       		.uleb128 0x7
 10617 13f5 D6010000 		.4byte	0x1d6
 10618 13f9 04140000 		.4byte	0x1404
 10619 13fd 08       		.uleb128 0x8
 10620 13fe 0E010000 		.4byte	0x10e
 10621 1402 01       		.byte	0x1
 10622 1403 00       		.byte	0
 10623 1404 25       		.uleb128 0x25
 10624 1405 F7050000 		.4byte	.LASF247
 10625 1409 07       		.byte	0x7
 10626 140a 8401     		.2byte	0x184
 10627 140c F4130000 		.4byte	0x13f4
 10628 1410 25       		.uleb128 0x25
 10629 1411 100E0000 		.4byte	.LASF248
 10630 1415 07       		.byte	0x7
 10631 1416 8401     		.2byte	0x184
 10632 1418 F4130000 		.4byte	0x13f4
 10633 141c 25       		.uleb128 0x25
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 232


 10634 141d 7D000000 		.4byte	.LASF249
 10635 1421 07       		.byte	0x7
 10636 1422 8501     		.2byte	0x185
 10637 1424 4B020000 		.4byte	0x24b
 10638 1428 25       		.uleb128 0x25
 10639 1429 840E0000 		.4byte	.LASF250
 10640 142d 07       		.byte	0x7
 10641 142e 8501     		.2byte	0x185
 10642 1430 4B020000 		.4byte	0x24b
 10643 1434 25       		.uleb128 0x25
 10644 1435 5F000000 		.4byte	.LASF251
 10645 1439 07       		.byte	0x7
 10646 143a 8601     		.2byte	0x186
 10647 143c 90020000 		.4byte	0x290
 10648 1440 25       		.uleb128 0x25
 10649 1441 0A0C0000 		.4byte	.LASF252
 10650 1445 07       		.byte	0x7
 10651 1446 8701     		.2byte	0x187
 10652 1448 B2070000 		.4byte	0x7b2
 10653 144c 25       		.uleb128 0x25
 10654 144d F4080000 		.4byte	.LASF253
 10655 1451 07       		.byte	0x7
 10656 1452 8701     		.2byte	0x187
 10657 1454 B2070000 		.4byte	0x7b2
 10658 1458 25       		.uleb128 0x25
 10659 1459 3D080000 		.4byte	.LASF254
 10660 145d 07       		.byte	0x7
 10661 145e 8801     		.2byte	0x188
 10662 1460 64090000 		.4byte	0x964
 10663 1464 07       		.uleb128 0x7
 10664 1465 3C090000 		.4byte	0x93c
 10665 1469 74140000 		.4byte	0x1474
 10666 146d 08       		.uleb128 0x8
 10667 146e 0E010000 		.4byte	0x10e
 10668 1472 01       		.byte	0x1
 10669 1473 00       		.byte	0
 10670 1474 25       		.uleb128 0x25
 10671 1475 1C0A0000 		.4byte	.LASF255
 10672 1479 07       		.byte	0x7
 10673 147a 8901     		.2byte	0x189
 10674 147c 64140000 		.4byte	0x1464
 10675 1480 25       		.uleb128 0x25
 10676 1481 7C080000 		.4byte	.LASF256
 10677 1485 07       		.byte	0x7
 10678 1486 8901     		.2byte	0x189
 10679 1488 64140000 		.4byte	0x1464
 10680 148c 25       		.uleb128 0x25
 10681 148d 020A0000 		.4byte	.LASF257
 10682 1491 07       		.byte	0x7
 10683 1492 8901     		.2byte	0x189
 10684 1494 64140000 		.4byte	0x1464
 10685 1498 07       		.uleb128 0x7
 10686 1499 3C090000 		.4byte	0x93c
 10687 149d A8140000 		.4byte	0x14a8
 10688 14a1 08       		.uleb128 0x8
 10689 14a2 0E010000 		.4byte	0x10e
 10690 14a6 02       		.byte	0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 233


 10691 14a7 00       		.byte	0
 10692 14a8 25       		.uleb128 0x25
 10693 14a9 8E040000 		.4byte	.LASF258
 10694 14ad 07       		.byte	0x7
 10695 14ae 8A01     		.2byte	0x18a
 10696 14b0 98140000 		.4byte	0x1498
 10697 14b4 07       		.uleb128 0x7
 10698 14b5 3C090000 		.4byte	0x93c
 10699 14b9 C4140000 		.4byte	0x14c4
 10700 14bd 08       		.uleb128 0x8
 10701 14be 0E010000 		.4byte	0x10e
 10702 14c2 07       		.byte	0x7
 10703 14c3 00       		.byte	0
 10704 14c4 25       		.uleb128 0x25
 10705 14c5 60010000 		.4byte	.LASF259
 10706 14c9 07       		.byte	0x7
 10707 14ca 8B01     		.2byte	0x18b
 10708 14cc B4140000 		.4byte	0x14b4
 10709 14d0 25       		.uleb128 0x25
 10710 14d1 11020000 		.4byte	.LASF260
 10711 14d5 07       		.byte	0x7
 10712 14d6 8D01     		.2byte	0x18d
 10713 14d8 8D000000 		.4byte	0x8d
 10714 14dc 25       		.uleb128 0x25
 10715 14dd 1D080000 		.4byte	.LASF261
 10716 14e1 07       		.byte	0x7
 10717 14e2 8E01     		.2byte	0x18e
 10718 14e4 8D000000 		.4byte	0x8d
 10719 14e8 25       		.uleb128 0x25
 10720 14e9 980A0000 		.4byte	.LASF262
 10721 14ed 07       		.byte	0x7
 10722 14ee 8F01     		.2byte	0x18f
 10723 14f0 D5000000 		.4byte	0xd5
 10724 14f4 25       		.uleb128 0x25
 10725 14f5 190B0000 		.4byte	.LASF263
 10726 14f9 07       		.byte	0x7
 10727 14fa 9101     		.2byte	0x191
 10728 14fc 70020000 		.4byte	0x270
 10729 1500 25       		.uleb128 0x25
 10730 1501 240D0000 		.4byte	.LASF264
 10731 1505 07       		.byte	0x7
 10732 1506 9201     		.2byte	0x192
 10733 1508 190F0000 		.4byte	0xf19
 10734 150c 25       		.uleb128 0x25
 10735 150d 720C0000 		.4byte	.LASF265
 10736 1511 07       		.byte	0x7
 10737 1512 9301     		.2byte	0x193
 10738 1514 190F0000 		.4byte	0xf19
 10739 1518 25       		.uleb128 0x25
 10740 1519 43050000 		.4byte	.LASF266
 10741 151d 07       		.byte	0x7
 10742 151e 9401     		.2byte	0x194
 10743 1520 70020000 		.4byte	0x270
 10744 1524 25       		.uleb128 0x25
 10745 1525 D60C0000 		.4byte	.LASF267
 10746 1529 07       		.byte	0x7
 10747 152a 9501     		.2byte	0x195
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 234


 10748 152c 70020000 		.4byte	0x270
 10749 1530 25       		.uleb128 0x25
 10750 1531 D5050000 		.4byte	.LASF268
 10751 1535 07       		.byte	0x7
 10752 1536 9701     		.2byte	0x197
 10753 1538 100A0000 		.4byte	0xa10
 10754 153c 25       		.uleb128 0x25
 10755 153d 3D040000 		.4byte	.LASF269
 10756 1541 07       		.byte	0x7
 10757 1542 9801     		.2byte	0x198
 10758 1544 D8090000 		.4byte	0x9d8
 10759 1548 25       		.uleb128 0x25
 10760 1549 93030000 		.4byte	.LASF270
 10761 154d 07       		.byte	0x7
 10762 154e 9901     		.2byte	0x199
 10763 1550 D8090000 		.4byte	0x9d8
 10764 1554 25       		.uleb128 0x25
 10765 1555 17070000 		.4byte	.LASF271
 10766 1559 07       		.byte	0x7
 10767 155a 9C01     		.2byte	0x19c
 10768 155c 81000000 		.4byte	0x81
 10769 1560 25       		.uleb128 0x25
 10770 1561 A2000000 		.4byte	.LASF272
 10771 1565 07       		.byte	0x7
 10772 1566 9D01     		.2byte	0x19d
 10773 1568 81000000 		.4byte	0x81
 10774 156c 25       		.uleb128 0x25
 10775 156d A8030000 		.4byte	.LASF273
 10776 1571 07       		.byte	0x7
 10777 1572 9E01     		.2byte	0x19e
 10778 1574 81000000 		.4byte	0x81
 10779 1578 25       		.uleb128 0x25
 10780 1579 B6000000 		.4byte	.LASF274
 10781 157d 07       		.byte	0x7
 10782 157e 9F01     		.2byte	0x19f
 10783 1580 81000000 		.4byte	0x81
 10784 1584 25       		.uleb128 0x25
 10785 1585 440E0000 		.4byte	.LASF275
 10786 1589 07       		.byte	0x7
 10787 158a A101     		.2byte	0x1a1
 10788 158c 81000000 		.4byte	0x81
 10789 1590 25       		.uleb128 0x25
 10790 1591 230A0000 		.4byte	.LASF276
 10791 1595 07       		.byte	0x7
 10792 1596 A201     		.2byte	0x1a2
 10793 1598 81000000 		.4byte	0x81
 10794 159c 25       		.uleb128 0x25
 10795 159d F9030000 		.4byte	.LASF277
 10796 15a1 07       		.byte	0x7
 10797 15a2 A301     		.2byte	0x1a3
 10798 15a4 81000000 		.4byte	0x81
 10799 15a8 25       		.uleb128 0x25
 10800 15a9 01070000 		.4byte	.LASF278
 10801 15ad 07       		.byte	0x7
 10802 15ae A401     		.2byte	0x1a4
 10803 15b0 81000000 		.4byte	0x81
 10804 15b4 25       		.uleb128 0x25
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 235


 10805 15b5 61080000 		.4byte	.LASF279
 10806 15b9 07       		.byte	0x7
 10807 15ba A501     		.2byte	0x1a5
 10808 15bc 81000000 		.4byte	0x81
 10809 15c0 07       		.uleb128 0x7
 10810 15c1 B1000000 		.4byte	0xb1
 10811 15c5 D0150000 		.4byte	0x15d0
 10812 15c9 08       		.uleb128 0x8
 10813 15ca 0E010000 		.4byte	0x10e
 10814 15ce 0B       		.byte	0xb
 10815 15cf 00       		.byte	0
 10816 15d0 25       		.uleb128 0x25
 10817 15d1 A0030000 		.4byte	.LASF280
 10818 15d5 07       		.byte	0x7
 10819 15d6 A901     		.2byte	0x1a9
 10820 15d8 C0150000 		.4byte	0x15c0
 10821 15dc 25       		.uleb128 0x25
 10822 15dd E60D0000 		.4byte	.LASF281
 10823 15e1 07       		.byte	0x7
 10824 15e2 AA01     		.2byte	0x1aa
 10825 15e4 81000000 		.4byte	0x81
 10826 15e8 25       		.uleb128 0x25
 10827 15e9 6F040000 		.4byte	.LASF282
 10828 15ed 07       		.byte	0x7
 10829 15ee AD01     		.2byte	0x1ad
 10830 15f0 A5000000 		.4byte	0xa5
 10831 15f4 07       		.uleb128 0x7
 10832 15f5 99000000 		.4byte	0x99
 10833 15f9 04160000 		.4byte	0x1604
 10834 15fd 08       		.uleb128 0x8
 10835 15fe 0E010000 		.4byte	0x10e
 10836 1602 04       		.byte	0x4
 10837 1603 00       		.byte	0
 10838 1604 25       		.uleb128 0x25
 10839 1605 2D060000 		.4byte	.LASF283
 10840 1609 07       		.byte	0x7
 10841 160a B001     		.2byte	0x1b0
 10842 160c F4150000 		.4byte	0x15f4
 10843 1610 25       		.uleb128 0x25
 10844 1611 890B0000 		.4byte	.LASF284
 10845 1615 07       		.byte	0x7
 10846 1616 B101     		.2byte	0x1b1
 10847 1618 190F0000 		.4byte	0xf19
 10848 161c 07       		.uleb128 0x7
 10849 161d 8D000000 		.4byte	0x8d
 10850 1621 32160000 		.4byte	0x1632
 10851 1625 08       		.uleb128 0x8
 10852 1626 0E010000 		.4byte	0x10e
 10853 162a 01       		.byte	0x1
 10854 162b 08       		.uleb128 0x8
 10855 162c 0E010000 		.4byte	0x10e
 10856 1630 04       		.byte	0x4
 10857 1631 00       		.byte	0
 10858 1632 25       		.uleb128 0x25
 10859 1633 3D0D0000 		.4byte	.LASF285
 10860 1637 07       		.byte	0x7
 10861 1638 B201     		.2byte	0x1b2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 236


 10862 163a 1C160000 		.4byte	0x161c
 10863 163e 07       		.uleb128 0x7
 10864 163f 81000000 		.4byte	0x81
 10865 1643 54160000 		.4byte	0x1654
 10866 1647 08       		.uleb128 0x8
 10867 1648 0E010000 		.4byte	0x10e
 10868 164c 01       		.byte	0x1
 10869 164d 08       		.uleb128 0x8
 10870 164e 0E010000 		.4byte	0x10e
 10871 1652 04       		.byte	0x4
 10872 1653 00       		.byte	0
 10873 1654 25       		.uleb128 0x25
 10874 1655 0C060000 		.4byte	.LASF286
 10875 1659 07       		.byte	0x7
 10876 165a B301     		.2byte	0x1b3
 10877 165c 3E160000 		.4byte	0x163e
 10878 1660 25       		.uleb128 0x25
 10879 1661 0F090000 		.4byte	.LASF287
 10880 1665 07       		.byte	0x7
 10881 1666 B601     		.2byte	0x1b6
 10882 1668 BD000000 		.4byte	0xbd
 10883 166c 25       		.uleb128 0x25
 10884 166d 26050000 		.4byte	.LASF288
 10885 1671 07       		.byte	0x7
 10886 1672 B901     		.2byte	0x1b9
 10887 1674 93010000 		.4byte	0x193
 10888 1678 07       		.uleb128 0x7
 10889 1679 C0080000 		.4byte	0x8c0
 10890 167d 88160000 		.4byte	0x1688
 10891 1681 08       		.uleb128 0x8
 10892 1682 0E010000 		.4byte	0x10e
 10893 1686 04       		.byte	0x4
 10894 1687 00       		.byte	0
 10895 1688 25       		.uleb128 0x25
 10896 1689 71060000 		.4byte	.LASF289
 10897 168d 07       		.byte	0x7
 10898 168e C001     		.2byte	0x1c0
 10899 1690 78160000 		.4byte	0x1678
 10900 1694 25       		.uleb128 0x25
 10901 1695 82050000 		.4byte	.LASF290
 10902 1699 07       		.byte	0x7
 10903 169a C001     		.2byte	0x1c0
 10904 169c 78160000 		.4byte	0x1678
 10905 16a0 00       		.byte	0
 10906              		.section	.debug_abbrev,"",%progbits
 10907              	.Ldebug_abbrev0:
 10908 0000 01       		.uleb128 0x1
 10909 0001 11       		.uleb128 0x11
 10910 0002 01       		.byte	0x1
 10911 0003 25       		.uleb128 0x25
 10912 0004 0E       		.uleb128 0xe
 10913 0005 13       		.uleb128 0x13
 10914 0006 0B       		.uleb128 0xb
 10915 0007 03       		.uleb128 0x3
 10916 0008 0E       		.uleb128 0xe
 10917 0009 1B       		.uleb128 0x1b
 10918 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 237


 10919 000b 55       		.uleb128 0x55
 10920 000c 17       		.uleb128 0x17
 10921 000d 11       		.uleb128 0x11
 10922 000e 01       		.uleb128 0x1
 10923 000f 10       		.uleb128 0x10
 10924 0010 17       		.uleb128 0x17
 10925 0011 00       		.byte	0
 10926 0012 00       		.byte	0
 10927 0013 02       		.uleb128 0x2
 10928 0014 24       		.uleb128 0x24
 10929 0015 00       		.byte	0
 10930 0016 0B       		.uleb128 0xb
 10931 0017 0B       		.uleb128 0xb
 10932 0018 3E       		.uleb128 0x3e
 10933 0019 0B       		.uleb128 0xb
 10934 001a 03       		.uleb128 0x3
 10935 001b 0E       		.uleb128 0xe
 10936 001c 00       		.byte	0
 10937 001d 00       		.byte	0
 10938 001e 03       		.uleb128 0x3
 10939 001f 16       		.uleb128 0x16
 10940 0020 00       		.byte	0
 10941 0021 03       		.uleb128 0x3
 10942 0022 0E       		.uleb128 0xe
 10943 0023 3A       		.uleb128 0x3a
 10944 0024 0B       		.uleb128 0xb
 10945 0025 3B       		.uleb128 0x3b
 10946 0026 0B       		.uleb128 0xb
 10947 0027 49       		.uleb128 0x49
 10948 0028 13       		.uleb128 0x13
 10949 0029 00       		.byte	0
 10950 002a 00       		.byte	0
 10951 002b 04       		.uleb128 0x4
 10952 002c 24       		.uleb128 0x24
 10953 002d 00       		.byte	0
 10954 002e 0B       		.uleb128 0xb
 10955 002f 0B       		.uleb128 0xb
 10956 0030 3E       		.uleb128 0x3e
 10957 0031 0B       		.uleb128 0xb
 10958 0032 03       		.uleb128 0x3
 10959 0033 08       		.uleb128 0x8
 10960 0034 00       		.byte	0
 10961 0035 00       		.byte	0
 10962 0036 05       		.uleb128 0x5
 10963 0037 16       		.uleb128 0x16
 10964 0038 00       		.byte	0
 10965 0039 03       		.uleb128 0x3
 10966 003a 0E       		.uleb128 0xe
 10967 003b 3A       		.uleb128 0x3a
 10968 003c 0B       		.uleb128 0xb
 10969 003d 3B       		.uleb128 0x3b
 10970 003e 05       		.uleb128 0x5
 10971 003f 49       		.uleb128 0x49
 10972 0040 13       		.uleb128 0x13
 10973 0041 00       		.byte	0
 10974 0042 00       		.byte	0
 10975 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 238


 10976 0044 35       		.uleb128 0x35
 10977 0045 00       		.byte	0
 10978 0046 49       		.uleb128 0x49
 10979 0047 13       		.uleb128 0x13
 10980 0048 00       		.byte	0
 10981 0049 00       		.byte	0
 10982 004a 07       		.uleb128 0x7
 10983 004b 01       		.uleb128 0x1
 10984 004c 01       		.byte	0x1
 10985 004d 49       		.uleb128 0x49
 10986 004e 13       		.uleb128 0x13
 10987 004f 01       		.uleb128 0x1
 10988 0050 13       		.uleb128 0x13
 10989 0051 00       		.byte	0
 10990 0052 00       		.byte	0
 10991 0053 08       		.uleb128 0x8
 10992 0054 21       		.uleb128 0x21
 10993 0055 00       		.byte	0
 10994 0056 49       		.uleb128 0x49
 10995 0057 13       		.uleb128 0x13
 10996 0058 2F       		.uleb128 0x2f
 10997 0059 0B       		.uleb128 0xb
 10998 005a 00       		.byte	0
 10999 005b 00       		.byte	0
 11000 005c 09       		.uleb128 0x9
 11001 005d 04       		.uleb128 0x4
 11002 005e 01       		.byte	0x1
 11003 005f 03       		.uleb128 0x3
 11004 0060 0E       		.uleb128 0xe
 11005 0061 0B       		.uleb128 0xb
 11006 0062 0B       		.uleb128 0xb
 11007 0063 49       		.uleb128 0x49
 11008 0064 13       		.uleb128 0x13
 11009 0065 3A       		.uleb128 0x3a
 11010 0066 0B       		.uleb128 0xb
 11011 0067 3B       		.uleb128 0x3b
 11012 0068 0B       		.uleb128 0xb
 11013 0069 01       		.uleb128 0x1
 11014 006a 13       		.uleb128 0x13
 11015 006b 00       		.byte	0
 11016 006c 00       		.byte	0
 11017 006d 0A       		.uleb128 0xa
 11018 006e 28       		.uleb128 0x28
 11019 006f 00       		.byte	0
 11020 0070 03       		.uleb128 0x3
 11021 0071 0E       		.uleb128 0xe
 11022 0072 1C       		.uleb128 0x1c
 11023 0073 0B       		.uleb128 0xb
 11024 0074 00       		.byte	0
 11025 0075 00       		.byte	0
 11026 0076 0B       		.uleb128 0xb
 11027 0077 13       		.uleb128 0x13
 11028 0078 00       		.byte	0
 11029 0079 03       		.uleb128 0x3
 11030 007a 0E       		.uleb128 0xe
 11031 007b 3C       		.uleb128 0x3c
 11032 007c 19       		.uleb128 0x19
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 239


 11033 007d 00       		.byte	0
 11034 007e 00       		.byte	0
 11035 007f 0C       		.uleb128 0xc
 11036 0080 0F       		.uleb128 0xf
 11037 0081 00       		.byte	0
 11038 0082 0B       		.uleb128 0xb
 11039 0083 0B       		.uleb128 0xb
 11040 0084 49       		.uleb128 0x49
 11041 0085 13       		.uleb128 0x13
 11042 0086 00       		.byte	0
 11043 0087 00       		.byte	0
 11044 0088 0D       		.uleb128 0xd
 11045 0089 13       		.uleb128 0x13
 11046 008a 01       		.byte	0x1
 11047 008b 03       		.uleb128 0x3
 11048 008c 0E       		.uleb128 0xe
 11049 008d 0B       		.uleb128 0xb
 11050 008e 0B       		.uleb128 0xb
 11051 008f 3A       		.uleb128 0x3a
 11052 0090 0B       		.uleb128 0xb
 11053 0091 3B       		.uleb128 0x3b
 11054 0092 0B       		.uleb128 0xb
 11055 0093 01       		.uleb128 0x1
 11056 0094 13       		.uleb128 0x13
 11057 0095 00       		.byte	0
 11058 0096 00       		.byte	0
 11059 0097 0E       		.uleb128 0xe
 11060 0098 0D       		.uleb128 0xd
 11061 0099 00       		.byte	0
 11062 009a 03       		.uleb128 0x3
 11063 009b 08       		.uleb128 0x8
 11064 009c 3A       		.uleb128 0x3a
 11065 009d 0B       		.uleb128 0xb
 11066 009e 3B       		.uleb128 0x3b
 11067 009f 0B       		.uleb128 0xb
 11068 00a0 49       		.uleb128 0x49
 11069 00a1 13       		.uleb128 0x13
 11070 00a2 38       		.uleb128 0x38
 11071 00a3 0B       		.uleb128 0xb
 11072 00a4 00       		.byte	0
 11073 00a5 00       		.byte	0
 11074 00a6 0F       		.uleb128 0xf
 11075 00a7 0D       		.uleb128 0xd
 11076 00a8 00       		.byte	0
 11077 00a9 03       		.uleb128 0x3
 11078 00aa 0E       		.uleb128 0xe
 11079 00ab 3A       		.uleb128 0x3a
 11080 00ac 0B       		.uleb128 0xb
 11081 00ad 3B       		.uleb128 0x3b
 11082 00ae 0B       		.uleb128 0xb
 11083 00af 49       		.uleb128 0x49
 11084 00b0 13       		.uleb128 0x13
 11085 00b1 38       		.uleb128 0x38
 11086 00b2 0B       		.uleb128 0xb
 11087 00b3 00       		.byte	0
 11088 00b4 00       		.byte	0
 11089 00b5 10       		.uleb128 0x10
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 240


 11090 00b6 0D       		.uleb128 0xd
 11091 00b7 00       		.byte	0
 11092 00b8 03       		.uleb128 0x3
 11093 00b9 0E       		.uleb128 0xe
 11094 00ba 3A       		.uleb128 0x3a
 11095 00bb 0B       		.uleb128 0xb
 11096 00bc 3B       		.uleb128 0x3b
 11097 00bd 05       		.uleb128 0x5
 11098 00be 49       		.uleb128 0x49
 11099 00bf 13       		.uleb128 0x13
 11100 00c0 38       		.uleb128 0x38
 11101 00c1 0B       		.uleb128 0xb
 11102 00c2 00       		.byte	0
 11103 00c3 00       		.byte	0
 11104 00c4 11       		.uleb128 0x11
 11105 00c5 13       		.uleb128 0x13
 11106 00c6 01       		.byte	0x1
 11107 00c7 03       		.uleb128 0x3
 11108 00c8 0E       		.uleb128 0xe
 11109 00c9 0B       		.uleb128 0xb
 11110 00ca 0B       		.uleb128 0xb
 11111 00cb 3A       		.uleb128 0x3a
 11112 00cc 0B       		.uleb128 0xb
 11113 00cd 3B       		.uleb128 0x3b
 11114 00ce 05       		.uleb128 0x5
 11115 00cf 01       		.uleb128 0x1
 11116 00d0 13       		.uleb128 0x13
 11117 00d1 00       		.byte	0
 11118 00d2 00       		.byte	0
 11119 00d3 12       		.uleb128 0x12
 11120 00d4 0D       		.uleb128 0xd
 11121 00d5 00       		.byte	0
 11122 00d6 03       		.uleb128 0x3
 11123 00d7 08       		.uleb128 0x8
 11124 00d8 3A       		.uleb128 0x3a
 11125 00d9 0B       		.uleb128 0xb
 11126 00da 3B       		.uleb128 0x3b
 11127 00db 05       		.uleb128 0x5
 11128 00dc 49       		.uleb128 0x49
 11129 00dd 13       		.uleb128 0x13
 11130 00de 38       		.uleb128 0x38
 11131 00df 0B       		.uleb128 0xb
 11132 00e0 00       		.byte	0
 11133 00e1 00       		.byte	0
 11134 00e2 13       		.uleb128 0x13
 11135 00e3 13       		.uleb128 0x13
 11136 00e4 01       		.byte	0x1
 11137 00e5 03       		.uleb128 0x3
 11138 00e6 0E       		.uleb128 0xe
 11139 00e7 0B       		.uleb128 0xb
 11140 00e8 05       		.uleb128 0x5
 11141 00e9 3A       		.uleb128 0x3a
 11142 00ea 0B       		.uleb128 0xb
 11143 00eb 3B       		.uleb128 0x3b
 11144 00ec 05       		.uleb128 0x5
 11145 00ed 01       		.uleb128 0x1
 11146 00ee 13       		.uleb128 0x13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 241


 11147 00ef 00       		.byte	0
 11148 00f0 00       		.byte	0
 11149 00f1 14       		.uleb128 0x14
 11150 00f2 0D       		.uleb128 0xd
 11151 00f3 00       		.byte	0
 11152 00f4 03       		.uleb128 0x3
 11153 00f5 08       		.uleb128 0x8
 11154 00f6 3A       		.uleb128 0x3a
 11155 00f7 0B       		.uleb128 0xb
 11156 00f8 3B       		.uleb128 0x3b
 11157 00f9 05       		.uleb128 0x5
 11158 00fa 49       		.uleb128 0x49
 11159 00fb 13       		.uleb128 0x13
 11160 00fc 38       		.uleb128 0x38
 11161 00fd 05       		.uleb128 0x5
 11162 00fe 00       		.byte	0
 11163 00ff 00       		.byte	0
 11164 0100 15       		.uleb128 0x15
 11165 0101 0D       		.uleb128 0xd
 11166 0102 00       		.byte	0
 11167 0103 03       		.uleb128 0x3
 11168 0104 0E       		.uleb128 0xe
 11169 0105 3A       		.uleb128 0x3a
 11170 0106 0B       		.uleb128 0xb
 11171 0107 3B       		.uleb128 0x3b
 11172 0108 05       		.uleb128 0x5
 11173 0109 49       		.uleb128 0x49
 11174 010a 13       		.uleb128 0x13
 11175 010b 38       		.uleb128 0x38
 11176 010c 05       		.uleb128 0x5
 11177 010d 00       		.byte	0
 11178 010e 00       		.byte	0
 11179 010f 16       		.uleb128 0x16
 11180 0110 04       		.uleb128 0x4
 11181 0111 01       		.byte	0x1
 11182 0112 0B       		.uleb128 0xb
 11183 0113 0B       		.uleb128 0xb
 11184 0114 49       		.uleb128 0x49
 11185 0115 13       		.uleb128 0x13
 11186 0116 3A       		.uleb128 0x3a
 11187 0117 0B       		.uleb128 0xb
 11188 0118 3B       		.uleb128 0x3b
 11189 0119 05       		.uleb128 0x5
 11190 011a 01       		.uleb128 0x1
 11191 011b 13       		.uleb128 0x13
 11192 011c 00       		.byte	0
 11193 011d 00       		.byte	0
 11194 011e 17       		.uleb128 0x17
 11195 011f 2E       		.uleb128 0x2e
 11196 0120 00       		.byte	0
 11197 0121 3F       		.uleb128 0x3f
 11198 0122 19       		.uleb128 0x19
 11199 0123 03       		.uleb128 0x3
 11200 0124 0E       		.uleb128 0xe
 11201 0125 3A       		.uleb128 0x3a
 11202 0126 0B       		.uleb128 0xb
 11203 0127 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 242


 11204 0128 0B       		.uleb128 0xb
 11205 0129 27       		.uleb128 0x27
 11206 012a 19       		.uleb128 0x19
 11207 012b 11       		.uleb128 0x11
 11208 012c 01       		.uleb128 0x1
 11209 012d 12       		.uleb128 0x12
 11210 012e 06       		.uleb128 0x6
 11211 012f 40       		.uleb128 0x40
 11212 0130 18       		.uleb128 0x18
 11213 0131 9742     		.uleb128 0x2117
 11214 0133 19       		.uleb128 0x19
 11215 0134 00       		.byte	0
 11216 0135 00       		.byte	0
 11217 0136 18       		.uleb128 0x18
 11218 0137 2E       		.uleb128 0x2e
 11219 0138 01       		.byte	0x1
 11220 0139 3F       		.uleb128 0x3f
 11221 013a 19       		.uleb128 0x19
 11222 013b 03       		.uleb128 0x3
 11223 013c 0E       		.uleb128 0xe
 11224 013d 3A       		.uleb128 0x3a
 11225 013e 0B       		.uleb128 0xb
 11226 013f 3B       		.uleb128 0x3b
 11227 0140 0B       		.uleb128 0xb
 11228 0141 11       		.uleb128 0x11
 11229 0142 01       		.uleb128 0x1
 11230 0143 12       		.uleb128 0x12
 11231 0144 06       		.uleb128 0x6
 11232 0145 40       		.uleb128 0x40
 11233 0146 18       		.uleb128 0x18
 11234 0147 9642     		.uleb128 0x2116
 11235 0149 19       		.uleb128 0x19
 11236 014a 01       		.uleb128 0x1
 11237 014b 13       		.uleb128 0x13
 11238 014c 00       		.byte	0
 11239 014d 00       		.byte	0
 11240 014e 19       		.uleb128 0x19
 11241 014f 34       		.uleb128 0x34
 11242 0150 00       		.byte	0
 11243 0151 03       		.uleb128 0x3
 11244 0152 0E       		.uleb128 0xe
 11245 0153 3A       		.uleb128 0x3a
 11246 0154 0B       		.uleb128 0xb
 11247 0155 3B       		.uleb128 0x3b
 11248 0156 0B       		.uleb128 0xb
 11249 0157 49       		.uleb128 0x49
 11250 0158 13       		.uleb128 0x13
 11251 0159 02       		.uleb128 0x2
 11252 015a 18       		.uleb128 0x18
 11253 015b 00       		.byte	0
 11254 015c 00       		.byte	0
 11255 015d 1A       		.uleb128 0x1a
 11256 015e 2E       		.uleb128 0x2e
 11257 015f 01       		.byte	0x1
 11258 0160 3F       		.uleb128 0x3f
 11259 0161 19       		.uleb128 0x19
 11260 0162 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 243


 11261 0163 0E       		.uleb128 0xe
 11262 0164 3A       		.uleb128 0x3a
 11263 0165 0B       		.uleb128 0xb
 11264 0166 3B       		.uleb128 0x3b
 11265 0167 05       		.uleb128 0x5
 11266 0168 27       		.uleb128 0x27
 11267 0169 19       		.uleb128 0x19
 11268 016a 11       		.uleb128 0x11
 11269 016b 01       		.uleb128 0x1
 11270 016c 12       		.uleb128 0x12
 11271 016d 06       		.uleb128 0x6
 11272 016e 40       		.uleb128 0x40
 11273 016f 18       		.uleb128 0x18
 11274 0170 9642     		.uleb128 0x2116
 11275 0172 19       		.uleb128 0x19
 11276 0173 01       		.uleb128 0x1
 11277 0174 13       		.uleb128 0x13
 11278 0175 00       		.byte	0
 11279 0176 00       		.byte	0
 11280 0177 1B       		.uleb128 0x1b
 11281 0178 34       		.uleb128 0x34
 11282 0179 00       		.byte	0
 11283 017a 03       		.uleb128 0x3
 11284 017b 0E       		.uleb128 0xe
 11285 017c 3A       		.uleb128 0x3a
 11286 017d 0B       		.uleb128 0xb
 11287 017e 3B       		.uleb128 0x3b
 11288 017f 05       		.uleb128 0x5
 11289 0180 49       		.uleb128 0x49
 11290 0181 13       		.uleb128 0x13
 11291 0182 02       		.uleb128 0x2
 11292 0183 18       		.uleb128 0x18
 11293 0184 00       		.byte	0
 11294 0185 00       		.byte	0
 11295 0186 1C       		.uleb128 0x1c
 11296 0187 21       		.uleb128 0x21
 11297 0188 00       		.byte	0
 11298 0189 49       		.uleb128 0x49
 11299 018a 13       		.uleb128 0x13
 11300 018b 2F       		.uleb128 0x2f
 11301 018c 05       		.uleb128 0x5
 11302 018d 00       		.byte	0
 11303 018e 00       		.byte	0
 11304 018f 1D       		.uleb128 0x1d
 11305 0190 2E       		.uleb128 0x2e
 11306 0191 01       		.byte	0x1
 11307 0192 3F       		.uleb128 0x3f
 11308 0193 19       		.uleb128 0x19
 11309 0194 03       		.uleb128 0x3
 11310 0195 0E       		.uleb128 0xe
 11311 0196 3A       		.uleb128 0x3a
 11312 0197 0B       		.uleb128 0xb
 11313 0198 3B       		.uleb128 0x3b
 11314 0199 05       		.uleb128 0x5
 11315 019a 11       		.uleb128 0x11
 11316 019b 01       		.uleb128 0x1
 11317 019c 12       		.uleb128 0x12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 244


 11318 019d 06       		.uleb128 0x6
 11319 019e 40       		.uleb128 0x40
 11320 019f 18       		.uleb128 0x18
 11321 01a0 9642     		.uleb128 0x2116
 11322 01a2 19       		.uleb128 0x19
 11323 01a3 01       		.uleb128 0x1
 11324 01a4 13       		.uleb128 0x13
 11325 01a5 00       		.byte	0
 11326 01a6 00       		.byte	0
 11327 01a7 1E       		.uleb128 0x1e
 11328 01a8 34       		.uleb128 0x34
 11329 01a9 00       		.byte	0
 11330 01aa 03       		.uleb128 0x3
 11331 01ab 08       		.uleb128 0x8
 11332 01ac 3A       		.uleb128 0x3a
 11333 01ad 0B       		.uleb128 0xb
 11334 01ae 3B       		.uleb128 0x3b
 11335 01af 05       		.uleb128 0x5
 11336 01b0 49       		.uleb128 0x49
 11337 01b1 13       		.uleb128 0x13
 11338 01b2 02       		.uleb128 0x2
 11339 01b3 18       		.uleb128 0x18
 11340 01b4 00       		.byte	0
 11341 01b5 00       		.byte	0
 11342 01b6 1F       		.uleb128 0x1f
 11343 01b7 05       		.uleb128 0x5
 11344 01b8 00       		.byte	0
 11345 01b9 03       		.uleb128 0x3
 11346 01ba 08       		.uleb128 0x8
 11347 01bb 3A       		.uleb128 0x3a
 11348 01bc 0B       		.uleb128 0xb
 11349 01bd 3B       		.uleb128 0x3b
 11350 01be 05       		.uleb128 0x5
 11351 01bf 49       		.uleb128 0x49
 11352 01c0 13       		.uleb128 0x13
 11353 01c1 02       		.uleb128 0x2
 11354 01c2 18       		.uleb128 0x18
 11355 01c3 00       		.byte	0
 11356 01c4 00       		.byte	0
 11357 01c5 20       		.uleb128 0x20
 11358 01c6 05       		.uleb128 0x5
 11359 01c7 00       		.byte	0
 11360 01c8 03       		.uleb128 0x3
 11361 01c9 0E       		.uleb128 0xe
 11362 01ca 3A       		.uleb128 0x3a
 11363 01cb 0B       		.uleb128 0xb
 11364 01cc 3B       		.uleb128 0x3b
 11365 01cd 05       		.uleb128 0x5
 11366 01ce 49       		.uleb128 0x49
 11367 01cf 13       		.uleb128 0x13
 11368 01d0 02       		.uleb128 0x2
 11369 01d1 18       		.uleb128 0x18
 11370 01d2 00       		.byte	0
 11371 01d3 00       		.byte	0
 11372 01d4 21       		.uleb128 0x21
 11373 01d5 2E       		.uleb128 0x2e
 11374 01d6 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 245


 11375 01d7 3F       		.uleb128 0x3f
 11376 01d8 19       		.uleb128 0x19
 11377 01d9 03       		.uleb128 0x3
 11378 01da 0E       		.uleb128 0xe
 11379 01db 3A       		.uleb128 0x3a
 11380 01dc 0B       		.uleb128 0xb
 11381 01dd 3B       		.uleb128 0x3b
 11382 01de 05       		.uleb128 0x5
 11383 01df 11       		.uleb128 0x11
 11384 01e0 01       		.uleb128 0x1
 11385 01e1 12       		.uleb128 0x12
 11386 01e2 06       		.uleb128 0x6
 11387 01e3 40       		.uleb128 0x40
 11388 01e4 18       		.uleb128 0x18
 11389 01e5 9742     		.uleb128 0x2117
 11390 01e7 19       		.uleb128 0x19
 11391 01e8 01       		.uleb128 0x1
 11392 01e9 13       		.uleb128 0x13
 11393 01ea 00       		.byte	0
 11394 01eb 00       		.byte	0
 11395 01ec 22       		.uleb128 0x22
 11396 01ed 0B       		.uleb128 0xb
 11397 01ee 01       		.byte	0x1
 11398 01ef 11       		.uleb128 0x11
 11399 01f0 01       		.uleb128 0x1
 11400 01f1 12       		.uleb128 0x12
 11401 01f2 06       		.uleb128 0x6
 11402 01f3 00       		.byte	0
 11403 01f4 00       		.byte	0
 11404 01f5 23       		.uleb128 0x23
 11405 01f6 2E       		.uleb128 0x2e
 11406 01f7 01       		.byte	0x1
 11407 01f8 3F       		.uleb128 0x3f
 11408 01f9 19       		.uleb128 0x19
 11409 01fa 03       		.uleb128 0x3
 11410 01fb 0E       		.uleb128 0xe
 11411 01fc 3A       		.uleb128 0x3a
 11412 01fd 0B       		.uleb128 0xb
 11413 01fe 3B       		.uleb128 0x3b
 11414 01ff 05       		.uleb128 0x5
 11415 0200 27       		.uleb128 0x27
 11416 0201 19       		.uleb128 0x19
 11417 0202 11       		.uleb128 0x11
 11418 0203 01       		.uleb128 0x1
 11419 0204 12       		.uleb128 0x12
 11420 0205 06       		.uleb128 0x6
 11421 0206 40       		.uleb128 0x40
 11422 0207 18       		.uleb128 0x18
 11423 0208 9742     		.uleb128 0x2117
 11424 020a 19       		.uleb128 0x19
 11425 020b 01       		.uleb128 0x1
 11426 020c 13       		.uleb128 0x13
 11427 020d 00       		.byte	0
 11428 020e 00       		.byte	0
 11429 020f 24       		.uleb128 0x24
 11430 0210 26       		.uleb128 0x26
 11431 0211 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 246


 11432 0212 49       		.uleb128 0x49
 11433 0213 13       		.uleb128 0x13
 11434 0214 00       		.byte	0
 11435 0215 00       		.byte	0
 11436 0216 25       		.uleb128 0x25
 11437 0217 34       		.uleb128 0x34
 11438 0218 00       		.byte	0
 11439 0219 03       		.uleb128 0x3
 11440 021a 0E       		.uleb128 0xe
 11441 021b 3A       		.uleb128 0x3a
 11442 021c 0B       		.uleb128 0xb
 11443 021d 3B       		.uleb128 0x3b
 11444 021e 05       		.uleb128 0x5
 11445 021f 49       		.uleb128 0x49
 11446 0220 13       		.uleb128 0x13
 11447 0221 3F       		.uleb128 0x3f
 11448 0222 19       		.uleb128 0x19
 11449 0223 3C       		.uleb128 0x3c
 11450 0224 19       		.uleb128 0x19
 11451 0225 00       		.byte	0
 11452 0226 00       		.byte	0
 11453 0227 00       		.byte	0
 11454              		.section	.debug_aranges,"",%progbits
 11455 0000 74000000 		.4byte	0x74
 11456 0004 0200     		.2byte	0x2
 11457 0006 00000000 		.4byte	.Ldebug_info0
 11458 000a 04       		.byte	0x4
 11459 000b 00       		.byte	0
 11460 000c 0000     		.2byte	0
 11461 000e 0000     		.2byte	0
 11462 0010 00000000 		.4byte	.LFB64
 11463 0014 18000000 		.4byte	.LFE64-.LFB64
 11464 0018 00000000 		.4byte	.LFB65
 11465 001c 20000000 		.4byte	.LFE65-.LFB65
 11466 0020 00000000 		.4byte	.LFB66
 11467 0024 F4010000 		.4byte	.LFE66-.LFB66
 11468 0028 00000000 		.4byte	.LFB67
 11469 002c 14030000 		.4byte	.LFE67-.LFB67
 11470 0030 00000000 		.4byte	.LFB68
 11471 0034 AC0A0000 		.4byte	.LFE68-.LFB68
 11472 0038 00000000 		.4byte	.LFB69
 11473 003c D40C0000 		.4byte	.LFE69-.LFB69
 11474 0040 00000000 		.4byte	.LFB70
 11475 0044 BC070000 		.4byte	.LFE70-.LFB70
 11476 0048 00000000 		.4byte	.LFB71
 11477 004c 3C0D0000 		.4byte	.LFE71-.LFB71
 11478 0050 00000000 		.4byte	.LFB72
 11479 0054 E0000000 		.4byte	.LFE72-.LFB72
 11480 0058 00000000 		.4byte	.LFB73
 11481 005c 78000000 		.4byte	.LFE73-.LFB73
 11482 0060 00000000 		.4byte	.LFB74
 11483 0064 78030000 		.4byte	.LFE74-.LFB74
 11484 0068 00000000 		.4byte	.LFB75
 11485 006c 08010000 		.4byte	.LFE75-.LFB75
 11486 0070 00000000 		.4byte	0
 11487 0074 00000000 		.4byte	0
 11488              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 247


 11489              	.Ldebug_ranges0:
 11490 0000 00000000 		.4byte	.LFB64
 11491 0004 18000000 		.4byte	.LFE64
 11492 0008 00000000 		.4byte	.LFB65
 11493 000c 20000000 		.4byte	.LFE65
 11494 0010 00000000 		.4byte	.LFB66
 11495 0014 F4010000 		.4byte	.LFE66
 11496 0018 00000000 		.4byte	.LFB67
 11497 001c 14030000 		.4byte	.LFE67
 11498 0020 00000000 		.4byte	.LFB68
 11499 0024 AC0A0000 		.4byte	.LFE68
 11500 0028 00000000 		.4byte	.LFB69
 11501 002c D40C0000 		.4byte	.LFE69
 11502 0030 00000000 		.4byte	.LFB70
 11503 0034 BC070000 		.4byte	.LFE70
 11504 0038 00000000 		.4byte	.LFB71
 11505 003c 3C0D0000 		.4byte	.LFE71
 11506 0040 00000000 		.4byte	.LFB72
 11507 0044 E0000000 		.4byte	.LFE72
 11508 0048 00000000 		.4byte	.LFB73
 11509 004c 78000000 		.4byte	.LFE73
 11510 0050 00000000 		.4byte	.LFB74
 11511 0054 78030000 		.4byte	.LFE74
 11512 0058 00000000 		.4byte	.LFB75
 11513 005c 08010000 		.4byte	.LFE75
 11514 0060 00000000 		.4byte	0
 11515 0064 00000000 		.4byte	0
 11516              		.section	.debug_line,"",%progbits
 11517              	.Ldebug_line0:
 11518 0000 150A0000 		.section	.debug_str,"MS",%progbits,1
 11518      0200A801 
 11518      00000201 
 11518      FB0E0D00 
 11518      01010101 
 11519              	.LASF24:
 11520 0000 73697A65 		.ascii	"sizetype\000"
 11520      74797065 
 11520      00
 11521              	.LASF221:
 11522 0009 706F735F 		.ascii	"pos_cycle_status\000"
 11522      6379636C 
 11522      655F7374 
 11522      61747573 
 11522      00
 11523              	.LASF30:
 11524 001a 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 11524      545F4D4F 
 11524      44455F45 
 11524      4D475F46 
 11524      4346535F 
 11525              	.LASF110:
 11526 0032 72656164 		.ascii	"read_ADC_sensors_port_flag\000"
 11526      5F414443 
 11526      5F73656E 
 11526      736F7273 
 11526      5F706F72 
 11527              	.LASF166:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 248


 11528 004d 70776D5F 		.ascii	"pwm_input\000"
 11528      696E7075 
 11528      7400
 11529              	.LASF10:
 11530 0057 696E7433 		.ascii	"int32_t\000"
 11530      325F7400 
 11531              	.LASF251:
 11532 005f 675F7278 		.ascii	"g_rx\000"
 11532      00
 11533              	.LASF202:
 11534 0064 6F6E655F 		.ascii	"one_time_execute\000"
 11534      74696D65 
 11534      5F657865 
 11534      63757465 
 11534      00
 11535              	.LASF45:
 11536 0075 73745F64 		.ascii	"st_data\000"
 11536      61746100 
 11537              	.LASF249:
 11538 007d 675F656D 		.ascii	"g_emg_meas\000"
 11538      675F6D65 
 11538      617300
 11539              	.LASF13:
 11540 0088 75696E74 		.ascii	"uint32\000"
 11540      333200
 11541              	.LASF187:
 11542 008f 6E5F6C69 		.ascii	"n_line\000"
 11542      6E6500
 11543              	.LASF79:
 11544 0096 706F735F 		.ascii	"pos_lim_inf\000"
 11544      6C696D5F 
 11544      696E6600 
 11545              	.LASF272:
 11546 00a2 74656E73 		.ascii	"tension_valid\000"
 11546      696F6E5F 
 11546      76616C69 
 11546      6400
 11547              	.LASF153:
 11548 00b0 73746174 		.ascii	"state\000"
 11548      6500
 11549              	.LASF274:
 11550 00b6 6379636C 		.ascii	"cycles_interrupt_flag\000"
 11550      65735F69 
 11550      6E746572 
 11550      72757074 
 11550      5F666C61 
 11551              	.LASF228:
 11552 00cc 62696E5F 		.ascii	"bin_max\000"
 11552      6D617800 
 11553              	.LASF239:
 11554 00d4 61646472 		.ascii	"addr_start_c\000"
 11554      5F737461 
 11554      72745F63 
 11554      00
 11555              	.LASF29:
 11556 00e1 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 11556      545F4D4F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 249


 11556      44455F45 
 11556      4D475F46 
 11556      43465300 
 11557              	.LASF83:
 11558 00f5 63757272 		.ascii	"curr_lookup\000"
 11558      5F6C6F6F 
 11558      6B757000 
 11559              	.LASF167:
 11560 0101 706F735F 		.ascii	"pos_error\000"
 11560      6572726F 
 11560      7200
 11561              	.LASF53:
 11562 010b 72657374 		.ascii	"rest_counter\000"
 11562      5F636F75 
 11562      6E746572 
 11562      00
 11563              	.LASF28:
 11564 0118 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 11564      545F4D4F 
 11564      44455F45 
 11564      4D475F49 
 11564      4E544547 
 11565              	.LASF214:
 11566 0130 765F636F 		.ascii	"v_count\000"
 11566      756E7400 
 11567              	.LASF158:
 11568 0138 72785F64 		.ascii	"rx_data\000"
 11568      61746100 
 11569              	.LASF207:
 11570 0140 7676765F 		.ascii	"vvv_value\000"
 11570      76616C75 
 11570      6500
 11571              	.LASF14:
 11572 014a 696E7438 		.ascii	"int8\000"
 11572      00
 11573              	.LASF163:
 11574 014f 696E666F 		.ascii	"info_\000"
 11574      5F00
 11575              	.LASF144:
 11576 0155 656D675F 		.ascii	"emg_status\000"
 11576      73746174 
 11576      757300
 11577              	.LASF259:
 11578 0160 66696C74 		.ascii	"filt_emg\000"
 11578      5F656D67 
 11578      00
 11579              	.LASF96:
 11580 0169 73745F65 		.ascii	"st_emg\000"
 11580      6D6700
 11581              	.LASF51:
 11582 0170 706F7369 		.ascii	"position_hist\000"
 11582      74696F6E 
 11582      5F686973 
 11582      7400
 11583              	.LASF145:
 11584 017e 50524550 		.ascii	"PREPARE_DATA\000"
 11584      4152455F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 250


 11584      44415441 
 11584      00
 11585              	.LASF129:
 11586 018b 74656D70 		.ascii	"temp_value\000"
 11586      5F76616C 
 11586      756500
 11587              	.LASF225:
 11588 0196 7468725F 		.ascii	"thr_pos\000"
 11588      706F7300 
 11589              	.LASF48:
 11590 019e 72656164 		.ascii	"ready\000"
 11590      7900
 11591              	.LASF132:
 11592 01a4 6761696E 		.ascii	"gain\000"
 11592      00
 11593              	.LASF57:
 11594 01a9 73745F64 		.ascii	"st_device\000"
 11594      65766963 
 11594      6500
 11595              	.LASF27:
 11596 01b3 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 11596      545F4D4F 
 11596      44455F45 
 11596      4D475F50 
 11596      524F504F 
 11597              	.LASF62:
 11598 01cf 7573655F 		.ascii	"use_2nd_motor_flag\000"
 11598      326E645F 
 11598      6D6F746F 
 11598      725F666C 
 11598      616700
 11599              	.LASF141:
 11600 01e2 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 11600      414E445F 
 11600      4D45414E 
 11600      00
 11601              	.LASF103:
 11602 01ef 72656164 		.ascii	"read_imu_flag\000"
 11602      5F696D75 
 11602      5F666C61 
 11602      6700
 11603              	.LASF212:
 11604 01fd 66697273 		.ascii	"first_tension_valid\000"
 11604      745F7465 
 11604      6E73696F 
 11604      6E5F7661 
 11604      6C696400 
 11605              	.LASF260:
 11606 0211 74696D65 		.ascii	"timer_value\000"
 11606      725F7661 
 11606      6C756500 
 11607              	.LASF4:
 11608 021d 6C6F6E67 		.ascii	"long int\000"
 11608      20696E74 
 11608      00
 11609              	.LASF119:
 11610 0226 756E7573 		.ascii	"unused_bytes1\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 251


 11610      65645F62 
 11610      79746573 
 11610      3100
 11611              	.LASF174:
 11612 0234 53485F45 		.ascii	"SH_ENC_L\000"
 11612      4E435F4C 
 11612      00
 11613              	.LASF61:
 11614 023d 72657365 		.ascii	"reset_counters\000"
 11614      745F636F 
 11614      756E7465 
 11614      727300
 11615              	.LASF224:
 11616 024c 62696E5F 		.ascii	"bin_threshold\000"
 11616      74687265 
 11616      73686F6C 
 11616      6400
 11617              	.LASF201:
 11618 025a 73616665 		.ascii	"safe_startup_motor_activation\000"
 11618      5F737461 
 11618      72747570 
 11618      5F6D6F74 
 11618      6F725F61 
 11619              	.LASF64:
 11620 0278 756E7573 		.ascii	"unused_bytes\000"
 11620      65645F62 
 11620      79746573 
 11620      00
 11621              	.LASF125:
 11622 0285 61636365 		.ascii	"accel_value\000"
 11622      6C5F7661 
 11622      6C756500 
 11623              	.LASF190:
 11624 0291 6175785F 		.ascii	"aux_encoder\000"
 11624      656E636F 
 11624      64657200 
 11625              	.LASF49:
 11626 029d 73745F63 		.ascii	"st_counters\000"
 11626      6F756E74 
 11626      65727300 
 11627              	.LASF173:
 11628 02a9 53485F4D 		.ascii	"SH_MOT\000"
 11628      4F5400
 11629              	.LASF17:
 11630 02b0 666C6F61 		.ascii	"float32\000"
 11630      74333200 
 11631              	.LASF186:
 11632 02b8 656E636F 		.ascii	"encoder_reading_SPI\000"
 11632      6465725F 
 11632      72656164 
 11632      696E675F 
 11632      53504900 
 11633              	.LASF199:
 11634 02cc 6572726F 		.ascii	"error\000"
 11634      7200
 11635              	.LASF50:
 11636 02d2 656D675F 		.ascii	"emg_counter\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 252


 11636      636F756E 
 11636      74657200 
 11637              	.LASF148:
 11638 02de 57524954 		.ascii	"WRITE_END\000"
 11638      455F454E 
 11638      4400
 11639              	.LASF204:
 11640 02e8 706F735F 		.ascii	"pos_reconstruct\000"
 11640      7265636F 
 11640      6E737472 
 11640      75637400 
 11641              	.LASF216:
 11642 02f8 70776D5F 		.ascii	"pwm_limit_search\000"
 11642      6C696D69 
 11642      745F7365 
 11642      61726368 
 11642      00
 11643              	.LASF293:
 11644 0309 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Documents\\GITHUB\\SoftHand-PR"
 11644      73657273 
 11644      5C4D6174 
 11644      74696143 
 11644      505C446F 
 11645 0337 4F2D5053 		.ascii	"O-PSoC5\\firmware.cydsn\000"
 11645      6F43355C 
 11645      6669726D 
 11645      77617265 
 11645      2E637964 
 11646              	.LASF0:
 11647 034e 7369676E 		.ascii	"signed char\000"
 11647      65642063 
 11647      68617200 
 11648              	.LASF108:
 11649 035a 75736572 		.ascii	"user_code_string\000"
 11649      5F636F64 
 11649      655F7374 
 11649      72696E67 
 11649      00
 11650              	.LASF133:
 11651 036b 73745F63 		.ascii	"st_calib\000"
 11651      616C6962 
 11651      00
 11652              	.LASF171:
 11653 0374 6572725F 		.ascii	"err_emg_1\000"
 11653      656D675F 
 11653      3100
 11654              	.LASF172:
 11655 037e 6572725F 		.ascii	"err_emg_2\000"
 11655      656D675F 
 11655      3200
 11656              	.LASF101:
 11657 0388 73776974 		.ascii	"switch_emg\000"
 11657      63685F65 
 11657      6D6700
 11658              	.LASF270:
 11659 0393 656D675F 		.ascii	"emg_2_status\000"
 11659      325F7374 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 253


 11659      61747573 
 11659      00
 11660              	.LASF280:
 11661 03a0 4144435F 		.ascii	"ADC_buf\000"
 11661      62756600 
 11662              	.LASF273:
 11663 03a8 696E7465 		.ascii	"interrupt_flag\000"
 11663      72727570 
 11663      745F666C 
 11663      616700
 11664              	.LASF231:
 11665 03b7 73746570 		.ascii	"step\000"
 11665      00
 11666              	.LASF176:
 11667 03bc 63757272 		.ascii	"curr_error_sum\000"
 11667      5F657272 
 11667      6F725F73 
 11667      756D00
 11668              	.LASF1:
 11669 03cb 756E7369 		.ascii	"unsigned char\000"
 11669      676E6564 
 11669      20636861 
 11669      7200
 11670              	.LASF89:
 11671 03d9 6E6F745F 		.ascii	"not_revers_motor_flag\000"
 11671      72657665 
 11671      72735F6D 
 11671      6F746F72 
 11671      5F666C61 
 11672              	.LASF237:
 11673 03ef 726F775F 		.ascii	"row_start\000"
 11673      73746172 
 11673      7400
 11674              	.LASF277:
 11675 03f9 666F7263 		.ascii	"forced_open\000"
 11675      65645F6F 
 11675      70656E00 
 11676              	.LASF194:
 11677 0405 73706565 		.ascii	"speed_encoder\000"
 11677      645F656E 
 11677      636F6465 
 11677      7200
 11678              	.LASF245:
 11679 0413 675F7265 		.ascii	"g_refNew\000"
 11679      664E6577 
 11679      00
 11680              	.LASF230:
 11681 041c 63757272 		.ascii	"curr_off\000"
 11681      5F6F6666 
 11681      00
 11682              	.LASF60:
 11683 0425 72696768 		.ascii	"right_left\000"
 11683      745F6C65 
 11683      667400
 11684              	.LASF87:
 11685 0430 656E636F 		.ascii	"encoder_line\000"
 11685      6465725F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 254


 11685      6C696E65 
 11685      00
 11686              	.LASF269:
 11687 043d 656D675F 		.ascii	"emg_1_status\000"
 11687      315F7374 
 11687      61747573 
 11687      00
 11688              	.LASF124:
 11689 044a 666C6167 		.ascii	"flags\000"
 11689      7300
 11690              	.LASF170:
 11691 0450 68616E64 		.ascii	"handle_value\000"
 11691      6C655F76 
 11691      616C7565 
 11691      00
 11692              	.LASF20:
 11693 045d 63686172 		.ascii	"char\000"
 11693      00
 11694              	.LASF82:
 11695 0462 6D61785F 		.ascii	"max_step_pos\000"
 11695      73746570 
 11695      5F706F73 
 11695      00
 11696              	.LASF282:
 11697 046f 70776D5F 		.ascii	"pwm_sign\000"
 11697      7369676E 
 11697      00
 11698              	.LASF184:
 11699 0478 6D6F746F 		.ascii	"motor_control_generic\000"
 11699      725F636F 
 11699      6E74726F 
 11699      6C5F6765 
 11699      6E657269 
 11700              	.LASF258:
 11701 048e 66696C74 		.ascii	"filt_vel\000"
 11701      5F76656C 
 11701      00
 11702              	.LASF88:
 11703 0497 70776D5F 		.ascii	"pwm_rate_limiter\000"
 11703      72617465 
 11703      5F6C696D 
 11703      69746572 
 11703      00
 11704              	.LASF68:
 11705 04a8 6B5F645F 		.ascii	"k_d_c\000"
 11705      6300
 11706              	.LASF93:
 11707 04ae 6D5F6D75 		.ascii	"m_mult\000"
 11707      6C7400
 11708              	.LASF67:
 11709 04b5 6B5F695F 		.ascii	"k_i_c\000"
 11709      6300
 11710              	.LASF180:
 11711 04bb 6D6F746F 		.ascii	"motor_dir\000"
 11711      725F6469 
 11711      7200
 11712              	.LASF227:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 255


 11713 04c5 62696E5F 		.ascii	"bin_st\000"
 11713      737400
 11714              	.LASF151:
 11715 04cc 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 11715      52533438 
 11715      355F5258 
 11715      5F457849 
 11715      6E746572 
 11716              	.LASF80:
 11717 04e5 706F735F 		.ascii	"pos_lim_sup\000"
 11717      6C696D5F 
 11717      73757000 
 11718              	.LASF131:
 11719 04f1 6F6C645F 		.ascii	"old_value\000"
 11719      76616C75 
 11719      6500
 11720              	.LASF99:
 11721 04fb 656D675F 		.ascii	"emg_speed\000"
 11721      73706565 
 11721      6400
 11722              	.LASF115:
 11723 0505 72657374 		.ascii	"rest_vel\000"
 11723      5F76656C 
 11723      00
 11724              	.LASF138:
 11725 050e 4E4F524D 		.ascii	"NORMAL\000"
 11725      414C00
 11726              	.LASF165:
 11727 0515 6D6F746F 		.ascii	"motor_control_SH\000"
 11727      725F636F 
 11727      6E74726F 
 11727      6C5F5348 
 11727      00
 11728              	.LASF288:
 11729 0526 7046696C 		.ascii	"pFile\000"
 11729      6500
 11730              	.LASF175:
 11731 052c 706F735F 		.ascii	"pos_error_sum\000"
 11731      6572726F 
 11731      725F7375 
 11731      6D00
 11732              	.LASF111:
 11733 053a 4144435F 		.ascii	"ADC_conf\000"
 11733      636F6E66 
 11733      00
 11734              	.LASF266:
 11735 0543 6465765F 		.ascii	"dev_tension_f\000"
 11735      74656E73 
 11735      696F6E5F 
 11735      6600
 11736              	.LASF70:
 11737 0551 6B5F695F 		.ascii	"k_i_dl\000"
 11737      646C00
 11738              	.LASF91:
 11739 0558 456E636F 		.ascii	"Encoder_conf\000"
 11739      6465725F 
 11739      636F6E66 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 256


 11739      00
 11740              	.LASF46:
 11741 0565 62756666 		.ascii	"buffer\000"
 11741      657200
 11742              	.LASF72:
 11743 056c 6B5F705F 		.ascii	"k_p_c_dl\000"
 11743      635F646C 
 11743      00
 11744              	.LASF159:
 11745 0575 72785F64 		.ascii	"rx_data_type\000"
 11745      6174615F 
 11745      74797065 
 11745      00
 11746              	.LASF290:
 11747 0582 675F696D 		.ascii	"g_imuNew\000"
 11747      754E6577 
 11747      00
 11748              	.LASF136:
 11749 058b 73706565 		.ascii	"speed\000"
 11749      6400
 11750              	.LASF181:
 11751 0591 706F7369 		.ascii	"position_counter\000"
 11751      74696F6E 
 11751      5F636F75 
 11751      6E746572 
 11751      00
 11752              	.LASF233:
 11753 05a2 74696D65 		.ascii	"timer_value_e\000"
 11753      725F7661 
 11753      6C75655F 
 11753      6500
 11754              	.LASF154:
 11755 05b0 64617461 		.ascii	"data_packet_index\000"
 11755      5F706163 
 11755      6B65745F 
 11755      696E6465 
 11755      7800
 11756              	.LASF156:
 11757 05c2 64617461 		.ascii	"data_packet_buffer\000"
 11757      5F706163 
 11757      6B65745F 
 11757      62756666 
 11757      657200
 11758              	.LASF268:
 11759 05d5 6379636C 		.ascii	"cycles_status\000"
 11759      65735F73 
 11759      74617475 
 11759      7300
 11760              	.LASF161:
 11761 05e3 636F756E 		.ascii	"counter_calibration\000"
 11761      7465725F 
 11761      63616C69 
 11761      62726174 
 11761      696F6E00 
 11762              	.LASF247:
 11763 05f7 675F6D65 		.ascii	"g_meas\000"
 11763      617300
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 257


 11764              	.LASF232:
 11765 05fe 74696D65 		.ascii	"timer_value_s\000"
 11765      725F7661 
 11765      6C75655F 
 11765      7300
 11766              	.LASF286:
 11767 060c 456E636F 		.ascii	"Encoder_Check\000"
 11767      6465725F 
 11767      43686563 
 11767      6B00
 11768              	.LASF198:
 11769 061a 636F6D70 		.ascii	"comp_value_encoder\000"
 11769      5F76616C 
 11769      75655F65 
 11769      6E636F64 
 11769      657200
 11770              	.LASF283:
 11771 062d 64617461 		.ascii	"data_encoder_raw\000"
 11771      5F656E63 
 11771      6F646572 
 11771      5F726177 
 11771      00
 11772              	.LASF244:
 11773 063e 675F7265 		.ascii	"g_ref\000"
 11773      6600
 11774              	.LASF25:
 11775 0644 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 11775      545F4D4F 
 11775      44455F45 
 11775      58544552 
 11775      4E414C00 
 11776              	.LASF189:
 11777 0658 696E6465 		.ascii	"index\000"
 11777      7800
 11778              	.LASF116:
 11779 065e 72657374 		.ascii	"rest_position_flag\000"
 11779      5F706F73 
 11779      6974696F 
 11779      6E5F666C 
 11779      616700
 11780              	.LASF289:
 11781 0671 675F696D 		.ascii	"g_imu\000"
 11781      7500
 11782              	.LASF73:
 11783 0677 6B5F695F 		.ascii	"k_i_c_dl\000"
 11783      635F646C 
 11783      00
 11784              	.LASF160:
 11785 0680 7061636B 		.ascii	"package_count\000"
 11785      6167655F 
 11785      636F756E 
 11785      7400
 11786              	.LASF36:
 11787 068e 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 11787      5F414E44 
 11787      5F504F53 
 11787      5F434F4E 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 258


 11787      54524F4C 
 11788              	.LASF134:
 11789 06a3 656E6162 		.ascii	"enabled\000"
 11789      6C656400 
 11790              	.LASF5:
 11791 06ab 6C6F6E67 		.ascii	"long unsigned int\000"
 11791      20756E73 
 11791      69676E65 
 11791      6420696E 
 11791      7400
 11792              	.LASF55:
 11793 06bd 746F7461 		.ascii	"total_time_on\000"
 11793      6C5F7469 
 11793      6D655F6F 
 11793      6E00
 11794              	.LASF146:
 11795 06cb 57524954 		.ascii	"WRITE_CYCLES\000"
 11795      455F4359 
 11795      434C4553 
 11795      00
 11796              	.LASF235:
 11797 06d8 73746174 		.ascii	"status\000"
 11797      757300
 11798              	.LASF56:
 11799 06df 746F7461 		.ascii	"total_time_rest\000"
 11799      6C5F7469 
 11799      6D655F72 
 11799      65737400 
 11800              	.LASF75:
 11801 06ef 61637469 		.ascii	"activ\000"
 11801      7600
 11802              	.LASF219:
 11803 06f5 6D696E5F 		.ascii	"min_tension\000"
 11803      74656E73 
 11803      696F6E00 
 11804              	.LASF278:
 11805 0701 62617474 		.ascii	"battery_low_SoC\000"
 11805      6572795F 
 11805      6C6F775F 
 11805      536F4300 
 11806              	.LASF92:
 11807 0711 6D5F6F66 		.ascii	"m_off\000"
 11807      6600
 11808              	.LASF271:
 11809 0717 72657365 		.ascii	"reset_last_value_flag\000"
 11809      745F6C61 
 11809      73745F76 
 11809      616C7565 
 11809      5F666C61 
 11810              	.LASF128:
 11811 072d 71756174 		.ascii	"quat_value\000"
 11811      5F76616C 
 11811      756500
 11812              	.LASF113:
 11813 0738 72657374 		.ascii	"rest_pos\000"
 11813      5F706F73 
 11813      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 259


 11814              	.LASF38:
 11815 0741 63757272 		.ascii	"curr\000"
 11815      00
 11816              	.LASF147:
 11817 0746 57414954 		.ascii	"WAIT_QUERY\000"
 11817      5F515545 
 11817      525900
 11818              	.LASF85:
 11819 0751 696E7075 		.ascii	"input_mode\000"
 11819      745F6D6F 
 11819      646500
 11820              	.LASF122:
 11821 075c 70696C6F 		.ascii	"pilot_emg\000"
 11821      745F656D 
 11821      6700
 11822              	.LASF34:
 11823 0766 434F4E54 		.ascii	"CONTROL_PWM\000"
 11823      524F4C5F 
 11823      50574D00 
 11824              	.LASF220:
 11825 0772 6379636C 		.ascii	"cycles_counter_update\000"
 11825      65735F63 
 11825      6F756E74 
 11825      65725F75 
 11825      70646174 
 11826              	.LASF291:
 11827 0788 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11827      43313120 
 11827      352E342E 
 11827      31203230 
 11827      31363036 
 11828 07bb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 11828      20726576 
 11828      6973696F 
 11828      6E203233 
 11828      37373135 
 11829 07ee 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 11829      66756E63 
 11829      74696F6E 
 11829      2D736563 
 11829      74696F6E 
 11830              	.LASF40:
 11831 0816 73745F72 		.ascii	"st_ref\000"
 11831      656600
 11832              	.LASF261:
 11833 081d 74696D65 		.ascii	"timer_value0\000"
 11833      725F7661 
 11833      6C756530 
 11833      00
 11834              	.LASF112:
 11835 082a 73745F53 		.ascii	"st_SH_spec\000"
 11835      485F7370 
 11835      656300
 11836              	.LASF205:
 11837 0835 765F7661 		.ascii	"v_value\000"
 11837      6C756500 
 11838              	.LASF254:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 260


 11839 083d 63616C69 		.ascii	"calib\000"
 11839      6200
 11840              	.LASF6:
 11841 0843 6C6F6E67 		.ascii	"long long int\000"
 11841      206C6F6E 
 11841      6720696E 
 11841      7400
 11842              	.LASF32:
 11843 0851 53485F63 		.ascii	"SH_control_mode\000"
 11843      6F6E7472 
 11843      6F6C5F6D 
 11843      6F646500 
 11844              	.LASF279:
 11845 0861 6368616E 		.ascii	"change_ext_ref_flag\000"
 11845      67655F65 
 11845      78745F72 
 11845      65665F66 
 11845      6C616700 
 11846              	.LASF19:
 11847 0875 646F7562 		.ascii	"double\000"
 11847      6C6500
 11848              	.LASF256:
 11849 087c 66696C74 		.ascii	"filt_curr_diff\000"
 11849      5F637572 
 11849      725F6469 
 11849      666600
 11850              	.LASF164:
 11851 088b 696E7465 		.ascii	"interrupt_manager\000"
 11851      72727570 
 11851      745F6D61 
 11851      6E616765 
 11851      7200
 11852              	.LASF137:
 11853 089d 72657065 		.ascii	"repetitions\000"
 11853      74697469 
 11853      6F6E7300 
 11854              	.LASF81:
 11855 08a9 6D61785F 		.ascii	"max_step_neg\000"
 11855      73746570 
 11855      5F6E6567 
 11855      00
 11856              	.LASF203:
 11857 08b6 636F756E 		.ascii	"count_startup_motor\000"
 11857      745F7374 
 11857      61727475 
 11857      705F6D6F 
 11857      746F7200 
 11858              	.LASF142:
 11859 08ca 57414954 		.ascii	"WAIT\000"
 11859      00
 11860              	.LASF18:
 11861 08cf 666C6F61 		.ascii	"float\000"
 11861      7400
 11862              	.LASF105:
 11863 08d5 494D555F 		.ascii	"IMU_conf\000"
 11863      636F6E66 
 11863      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 261


 11864              	.LASF213:
 11865 08de 636F756E 		.ascii	"count\000"
 11865      7400
 11866              	.LASF65:
 11867 08e4 73745F6D 		.ascii	"st_motor\000"
 11867      6F746F72 
 11867      00
 11868              	.LASF241:
 11869 08ed 6D5F6164 		.ascii	"m_addr\000"
 11869      647200
 11870              	.LASF253:
 11871 08f4 635F6D65 		.ascii	"c_mem\000"
 11871      6D00
 11872              	.LASF8:
 11873 08fa 756E7369 		.ascii	"unsigned int\000"
 11873      676E6564 
 11873      20696E74 
 11873      00
 11874              	.LASF226:
 11875 0907 6D61785F 		.ascii	"max_pos\000"
 11875      706F7300 
 11876              	.LASF287:
 11877 090f 72657374 		.ascii	"rest_pos_curr_ref\000"
 11877      5F706F73 
 11877      5F637572 
 11877      725F7265 
 11877      6600
 11878              	.LASF118:
 11879 0921 666C6167 		.ascii	"flag\000"
 11879      00
 11880              	.LASF86:
 11881 0926 636F6E74 		.ascii	"control_mode\000"
 11881      726F6C5F 
 11881      6D6F6465 
 11881      00
 11882              	.LASF21:
 11883 0933 63797374 		.ascii	"cystatus\000"
 11883      61747573 
 11883      00
 11884              	.LASF26:
 11885 093c 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 11885      545F4D4F 
 11885      44455F45 
 11885      4E434F44 
 11885      45523300 
 11886              	.LASF102:
 11887 0950 73745F69 		.ascii	"st_imu\000"
 11887      6D7500
 11888              	.LASF182:
 11889 0957 63757272 		.ascii	"current_emg\000"
 11889      656E745F 
 11889      656D6700 
 11890              	.LASF157:
 11891 0963 72785F71 		.ascii	"rx_queue\000"
 11891      75657565 
 11891      00
 11892              	.LASF188:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 262


 11893 096c 6173736F 		.ascii	"assoc_motor\000"
 11893      635F6D6F 
 11893      746F7200 
 11894              	.LASF44:
 11895 0978 6164645F 		.ascii	"add_emg\000"
 11895      656D6700 
 11896              	.LASF169:
 11897 0980 695F7265 		.ascii	"i_ref\000"
 11897      6600
 11898              	.LASF97:
 11899 0986 656D675F 		.ascii	"emg_threshold\000"
 11899      74687265 
 11899      73686F6C 
 11899      6400
 11900              	.LASF234:
 11901 0994 73617665 		.ascii	"save_cycles_eeprom\000"
 11901      5F637963 
 11901      6C65735F 
 11901      65657072 
 11901      6F6D00
 11902              	.LASF52:
 11903 09a7 63757272 		.ascii	"current_hist\000"
 11903      656E745F 
 11903      68697374 
 11903      00
 11904              	.LASF35:
 11905 09b4 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 11905      524F4C5F 
 11905      43555252 
 11905      454E5400 
 11906              	.LASF23:
 11907 09c4 6C6F6E67 		.ascii	"long double\000"
 11907      20646F75 
 11907      626C6500 
 11908              	.LASF140:
 11909 09d0 44495343 		.ascii	"DISCARD\000"
 11909      41524400 
 11910              	.LASF177:
 11911 09d8 70726576 		.ascii	"prev_pos_err\000"
 11911      5F706F73 
 11911      5F657272 
 11911      00
 11912              	.LASF196:
 11913 09e5 696E6974 		.ascii	"init_rot\000"
 11913      5F726F74 
 11913      00
 11914              	.LASF217:
 11915 09ee 6D6F745F 		.ascii	"mot_idx\000"
 11915      69647800 
 11916              	.LASF43:
 11917 09f6 73745F65 		.ascii	"st_emg_meas\000"
 11917      6D675F6D 
 11917      65617300 
 11918              	.LASF257:
 11919 0a02 66696C74 		.ascii	"filt_i\000"
 11919      5F6900
 11920              	.LASF95:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 263


 11921 0a09 6D6F746F 		.ascii	"motor_handle_ratio\000"
 11921      725F6861 
 11921      6E646C65 
 11921      5F726174 
 11921      696F00
 11922              	.LASF255:
 11923 0a1c 66696C74 		.ascii	"filt_v\000"
 11923      5F7600
 11924              	.LASF276:
 11925 0a23 72657374 		.ascii	"rest_enabled\000"
 11925      5F656E61 
 11925      626C6564 
 11925      00
 11926              	.LASF246:
 11927 0a30 675F7265 		.ascii	"g_refOld\000"
 11927      664F6C64 
 11927      00
 11928              	.LASF126:
 11929 0a39 6779726F 		.ascii	"gyro_value\000"
 11929      5F76616C 
 11929      756500
 11930              	.LASF107:
 11931 0a44 63757272 		.ascii	"curr_time\000"
 11931      5F74696D 
 11931      6500
 11932              	.LASF94:
 11933 0a4e 646F7562 		.ascii	"double_encoder_on_off\000"
 11933      6C655F65 
 11933      6E636F64 
 11933      65725F6F 
 11933      6E5F6F66 
 11934              	.LASF218:
 11935 0a64 6D61785F 		.ascii	"max_tension\000"
 11935      74656E73 
 11935      696F6E00 
 11936              	.LASF197:
 11937 0a70 6C617374 		.ascii	"last_value_encoder\000"
 11937      5F76616C 
 11937      75655F65 
 11937      6E636F64 
 11937      657200
 11938              	.LASF162:
 11939 0a83 636F756E 		.ascii	"counter_tension_func\000"
 11939      7465725F 
 11939      74656E73 
 11939      696F6E5F 
 11939      66756E63 
 11940              	.LASF262:
 11941 0a98 6379636C 		.ascii	"cycle_time\000"
 11941      655F7469 
 11941      6D6500
 11942              	.LASF7:
 11943 0aa3 6C6F6E67 		.ascii	"long long unsigned int\000"
 11943      206C6F6E 
 11943      6720756E 
 11943      7369676E 
 11943      65642069 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 264


 11944              	.LASF47:
 11945 0aba 6C656E67 		.ascii	"length\000"
 11945      746800
 11946              	.LASF123:
 11947 0ac1 73745F69 		.ascii	"st_imu_data\000"
 11947      6D755F64 
 11947      61746100 
 11948              	.LASF127:
 11949 0acd 6D61675F 		.ascii	"mag_value\000"
 11949      76616C75 
 11949      6500
 11950              	.LASF39:
 11951 0ad7 6F6E6F66 		.ascii	"onoff\000"
 11951      6600
 11952              	.LASF192:
 11953 0add 746D705F 		.ascii	"tmp_value_encoder_32\000"
 11953      76616C75 
 11953      655F656E 
 11953      636F6465 
 11953      725F3332 
 11954              	.LASF178:
 11955 0af2 70726576 		.ascii	"prev_curr_err\000"
 11955      5F637572 
 11955      725F6572 
 11955      7200
 11956              	.LASF155:
 11957 0b00 64617461 		.ascii	"data_packet_length\000"
 11957      5F706163 
 11957      6B65745F 
 11957      6C656E67 
 11957      746800
 11958              	.LASF66:
 11959 0b13 6B5F705F 		.ascii	"k_p_c\000"
 11959      6300
 11960              	.LASF263:
 11961 0b19 6465765F 		.ascii	"dev_tension\000"
 11961      74656E73 
 11961      696F6E00 
 11962              	.LASF77:
 11963 0b25 6D6F746F 		.ascii	"motor_driver_type\000"
 11963      725F6472 
 11963      69766572 
 11963      5F747970 
 11963      6500
 11964              	.LASF143:
 11965 0b37 57414954 		.ascii	"WAIT_EoC\000"
 11965      5F456F43 
 11965      00
 11966              	.LASF22:
 11967 0b40 72656738 		.ascii	"reg8\000"
 11967      00
 11968              	.LASF209:
 11969 0b45 695F6175 		.ascii	"i_aux\000"
 11969      7800
 11970              	.LASF236:
 11971 0b4b 726F775F 		.ascii	"row_number\000"
 11971      6E756D62 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 265


 11971      657200
 11972              	.LASF215:
 11973 0b56 6F766572 		.ascii	"overcurrent_control\000"
 11973      63757272 
 11973      656E745F 
 11973      636F6E74 
 11973      726F6C00 
 11974              	.LASF229:
 11975 0b6a 63757272 		.ascii	"curr_pos\000"
 11975      5F706F73 
 11975      00
 11976              	.LASF139:
 11977 0b73 52455345 		.ascii	"RESET\000"
 11977      5400
 11978              	.LASF208:
 11979 0b79 616E616C 		.ascii	"analog_read_end\000"
 11979      6F675F72 
 11979      6561645F 
 11979      656E6400 
 11980              	.LASF284:
 11981 0b89 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 11981      636F6465 
 11981      725F4C69 
 11981      6E655F43 
 11981      6F6E6E65 
 11982              	.LASF222:
 11983 0ba2 656D675F 		.ascii	"emg_cycle_status\000"
 11983      6379636C 
 11983      655F7374 
 11983      61747573 
 11983      00
 11984              	.LASF106:
 11985 0bb3 73745F65 		.ascii	"st_expansion\000"
 11985      7870616E 
 11985      73696F6E 
 11985      00
 11986              	.LASF100:
 11987 0bc0 656D675F 		.ascii	"emg_calibration_flag\000"
 11987      63616C69 
 11987      62726174 
 11987      696F6E5F 
 11987      666C6167 
 11988              	.LASF41:
 11989 0bd5 73745F6D 		.ascii	"st_meas\000"
 11989      65617300 
 11990              	.LASF238:
 11991 0bdd 61646472 		.ascii	"addr_start\000"
 11991      5F737461 
 11991      727400
 11992              	.LASF242:
 11993 0be8 70776D5F 		.ascii	"pwm_preload_values\000"
 11993      7072656C 
 11993      6F61645F 
 11993      76616C75 
 11993      657300
 11994              	.LASF150:
 11995 0bfb 636F756E 		.ascii	"counter_status\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 266


 11995      7465725F 
 11995      73746174 
 11995      757300
 11996              	.LASF252:
 11997 0c0a 675F6D65 		.ascii	"g_mem\000"
 11997      6D00
 11998              	.LASF210:
 11999 0c10 656D675F 		.ascii	"emg_counter_1\000"
 11999      636F756E 
 11999      7465725F 
 11999      3100
 12000              	.LASF211:
 12001 0c1e 656D675F 		.ascii	"emg_counter_2\000"
 12001      636F756E 
 12001      7465725F 
 12001      3200
 12002              	.LASF200:
 12003 0c2c 6F6E6C79 		.ascii	"only_first_time\000"
 12003      5F666972 
 12003      73745F74 
 12003      696D6500 
 12004              	.LASF11:
 12005 0c3c 75696E74 		.ascii	"uint8\000"
 12005      3800
 12006              	.LASF195:
 12007 0c42 76616C75 		.ascii	"value_diff\000"
 12007      655F6469 
 12007      666600
 12008              	.LASF2:
 12009 0c4d 73686F72 		.ascii	"short int\000"
 12009      7420696E 
 12009      7400
 12010              	.LASF71:
 12011 0c57 6B5F645F 		.ascii	"k_d_dl\000"
 12011      646C00
 12012              	.LASF193:
 12013 0c5e 76616C75 		.ascii	"value_encoder\000"
 12013      655F656E 
 12013      636F6465 
 12013      7200
 12014              	.LASF120:
 12015 0c6c 6D6F746F 		.ascii	"motor\000"
 12015      7200
 12016              	.LASF265:
 12017 0c72 6465765F 		.ascii	"dev_pwm_sat\000"
 12017      70776D5F 
 12017      73617400 
 12018              	.LASF58:
 12019 0c7e 68775F6D 		.ascii	"hw_maint_date\000"
 12019      61696E74 
 12019      5F646174 
 12019      6500
 12020              	.LASF121:
 12021 0c8c 70696C6F 		.ascii	"pilot_id\000"
 12021      745F6964 
 12021      00
 12022              	.LASF183:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 267


 12023 0c95 66756E63 		.ascii	"function_scheduler\000"
 12023      74696F6E 
 12023      5F736368 
 12023      6564756C 
 12023      657200
 12024              	.LASF179:
 12025 0ca8 70726576 		.ascii	"prev_pwm\000"
 12025      5F70776D 
 12025      00
 12026              	.LASF59:
 12027 0cb1 73746174 		.ascii	"stats_period_begin_date\000"
 12027      735F7065 
 12027      72696F64 
 12027      5F626567 
 12027      696E5F64 
 12028              	.LASF243:
 12029 0cc9 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12029      52784275 
 12029      66666572 
 12029      00
 12030              	.LASF267:
 12031 0cd6 706F775F 		.ascii	"pow_tension\000"
 12031      74656E73 
 12031      696F6E00 
 12032              	.LASF15:
 12033 0ce2 696E7431 		.ascii	"int16\000"
 12033      3600
 12034              	.LASF109:
 12035 0ce8 72656164 		.ascii	"read_exp_port_flag\000"
 12035      5F657870 
 12035      5F706F72 
 12035      745F666C 
 12035      616700
 12036              	.LASF76:
 12037 0cfb 61637469 		.ascii	"activate_pwm_rescaling\000"
 12037      76617465 
 12037      5F70776D 
 12037      5F726573 
 12037      63616C69 
 12038              	.LASF69:
 12039 0d12 6B5F705F 		.ascii	"k_p_dl\000"
 12039      646C00
 12040              	.LASF42:
 12041 0d19 65737469 		.ascii	"estim_curr\000"
 12041      6D5F6375 
 12041      727200
 12042              	.LASF264:
 12043 0d24 6465765F 		.ascii	"dev_pwm_limit\000"
 12043      70776D5F 
 12043      6C696D69 
 12043      7400
 12044              	.LASF168:
 12045 0d32 63757272 		.ascii	"curr_error\000"
 12045      5F657272 
 12045      6F7200
 12046              	.LASF285:
 12047 0d3d 456E636F 		.ascii	"Encoder_Value\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 268


 12047      6465725F 
 12047      56616C75 
 12047      6500
 12048              	.LASF223:
 12049 0d4b 72657374 		.ascii	"rest_cycle_status\000"
 12049      5F637963 
 12049      6C655F73 
 12049      74617475 
 12049      7300
 12050              	.LASF191:
 12051 0d5d 746D705F 		.ascii	"tmp_value_encoder\000"
 12051      76616C75 
 12051      655F656E 
 12051      636F6465 
 12051      7200
 12052              	.LASF152:
 12053 0d6f 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 12053      4359434C 
 12053      45535F48 
 12053      616E646C 
 12053      657200
 12054              	.LASF63:
 12055 0d82 62617564 		.ascii	"baud_rate\000"
 12055      5F726174 
 12055      6500
 12056              	.LASF104:
 12057 0d8c 5350495F 		.ascii	"SPI_read_delay\000"
 12057      72656164 
 12057      5F64656C 
 12057      617900
 12058              	.LASF3:
 12059 0d9b 73686F72 		.ascii	"short unsigned int\000"
 12059      7420756E 
 12059      7369676E 
 12059      65642069 
 12059      6E7400
 12060              	.LASF90:
 12061 0dae 73745F65 		.ascii	"st_encoder\000"
 12061      6E636F64 
 12061      657200
 12062              	.LASF185:
 12063 0db9 454E435F 		.ascii	"ENC_L\000"
 12063      4C00
 12064              	.LASF117:
 12065 0dbf 73745F65 		.ascii	"st_eeprom\000"
 12065      6570726F 
 12065      6D00
 12066              	.LASF292:
 12067 0dc9 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 12067      72635C69 
 12067      6E746572 
 12067      72757074 
 12067      696F6E73 
 12068              	.LASF16:
 12069 0de0 696E7433 		.ascii	"int32\000"
 12069      3200
 12070              	.LASF281:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 269


 12071 0de6 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 12071      4F465F41 
 12071      4E414C4F 
 12071      475F494E 
 12071      50555453 
 12072              	.LASF37:
 12073 0dfb 46535F46 		.ascii	"FS_FILE\000"
 12073      494C4500 
 12074              	.LASF78:
 12075 0e03 706F735F 		.ascii	"pos_lim_flag\000"
 12075      6C696D5F 
 12075      666C6167 
 12075      00
 12076              	.LASF248:
 12077 0e10 675F6D65 		.ascii	"g_measOld\000"
 12077      61734F6C 
 12077      6400
 12078              	.LASF240:
 12079 0e1a 726F775F 		.ascii	"row_end\000"
 12079      656E6400 
 12080              	.LASF33:
 12081 0e22 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 12081      524F4C5F 
 12081      414E474C 
 12081      4500
 12082              	.LASF9:
 12083 0e30 5F5F696E 		.ascii	"__int32_t\000"
 12083      7433325F 
 12083      7400
 12084              	.LASF54:
 12085 0e3a 77697265 		.ascii	"wire_disp\000"
 12085      5F646973 
 12085      7000
 12086              	.LASF275:
 12087 0e44 63616E5F 		.ascii	"can_write\000"
 12087      77726974 
 12087      6500
 12088              	.LASF98:
 12089 0e4e 656D675F 		.ascii	"emg_max_value\000"
 12089      6D61785F 
 12089      76616C75 
 12089      6500
 12090              	.LASF84:
 12091 0e5c 63757272 		.ascii	"current_limit\000"
 12091      656E745F 
 12091      6C696D69 
 12091      7400
 12092              	.LASF31:
 12093 0e6a 53485F69 		.ascii	"SH_input_mode\000"
 12093      6E707574 
 12093      5F6D6F64 
 12093      6500
 12094              	.LASF149:
 12095 0e78 4E4F4E45 		.ascii	"NONE\000"
 12095      00
 12096              	.LASF12:
 12097 0e7d 75696E74 		.ascii	"uint16\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccMctWca.s 			page 270


 12097      313600
 12098              	.LASF250:
 12099 0e84 675F656D 		.ascii	"g_emg_measOld\000"
 12099      675F6D65 
 12099      61734F6C 
 12099      6400
 12100              	.LASF114:
 12101 0e92 72657374 		.ascii	"rest_delay\000"
 12101      5F64656C 
 12101      617900
 12102              	.LASF130:
 12103 0e9d 73745F66 		.ascii	"st_filter\000"
 12103      696C7465 
 12103      7200
 12104              	.LASF206:
 12105 0ea7 76765F76 		.ascii	"vv_value\000"
 12105      616C7565 
 12105      00
 12106              	.LASF74:
 12107 0eb0 6B5F645F 		.ascii	"k_d_c_dl\000"
 12107      635F646C 
 12107      00
 12108              	.LASF135:
 12109 0eb9 64697265 		.ascii	"direction\000"
 12109      6374696F 
 12109      6E00
 12110              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
