ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"interruptions.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              		.type	pwm_preload_values, %object
  22              		.size	pwm_preload_values, 29
  23              	pwm_preload_values:
  24 0000 64       		.byte	100
  25 0001 53       		.byte	83
  26 0002 4E       		.byte	78
  27 0003 4C       		.byte	76
  28 0004 4A       		.byte	74
  29 0005 48       		.byte	72
  30 0006 46       		.byte	70
  31 0007 44       		.byte	68
  32 0008 43       		.byte	67
  33 0009 41       		.byte	65
  34 000a 40       		.byte	64
  35 000b 3F       		.byte	63
  36 000c 3E       		.byte	62
  37 000d 3D       		.byte	61
  38 000e 3C       		.byte	60
  39 000f 3B       		.byte	59
  40 0010 3A       		.byte	58
  41 0011 39       		.byte	57
  42 0012 38       		.byte	56
  43 0013 38       		.byte	56
  44 0014 37       		.byte	55
  45 0015 36       		.byte	54
  46 0016 36       		.byte	54
  47 0017 35       		.byte	53
  48 0018 34       		.byte	52
  49 0019 34       		.byte	52
  50 001a 34       		.byte	52
  51 001b 33       		.byte	51
  52 001c 33       		.byte	51
  53              		.section	.text.ISR_RS485_RX_ExInterrupt,"ax",%progbits
  54              		.align	2
  55              		.global	ISR_RS485_RX_ExInterrupt
  56              		.thumb
  57              		.thumb_func
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 2


  58              		.type	ISR_RS485_RX_ExInterrupt, %function
  59              	ISR_RS485_RX_ExInterrupt:
  60              	.LFB64:
  61              		.file 1 "..\\src\\interruptions.c"
   1:..\src/interruptions.c **** // ----------------------------------------------------------------------------
   2:..\src/interruptions.c **** // BSD 3-Clause License
   3:..\src/interruptions.c **** 
   4:..\src/interruptions.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/interruptions.c **** // Copyright (c) 2017, Centro "E.Piaggio"
   6:..\src/interruptions.c **** // All rights reserved.
   7:..\src/interruptions.c **** 
   8:..\src/interruptions.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/interruptions.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/interruptions.c **** 
  11:..\src/interruptions.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/interruptions.c **** //   list of conditions and the following disclaimer.
  13:..\src/interruptions.c **** 
  14:..\src/interruptions.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/interruptions.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/interruptions.c **** //   and/or other materials provided with the distribution.
  17:..\src/interruptions.c **** 
  18:..\src/interruptions.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/interruptions.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/interruptions.c **** //   this software without specific prior written permission.
  21:..\src/interruptions.c **** 
  22:..\src/interruptions.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/interruptions.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  24:..\src/interruptions.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/interruptions.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/interruptions.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/interruptions.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/interruptions.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/interruptions.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/interruptions.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/interruptions.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/interruptions.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/interruptions.c **** // ----------------------------------------------------------------------------
  34:..\src/interruptions.c **** 
  35:..\src/interruptions.c **** /**
  36:..\src/interruptions.c **** * \file         interruptions.c
  37:..\src/interruptions.c **** *
  38:..\src/interruptions.c **** * \brief        Interruption handling and firmware core functions
  39:..\src/interruptions.c **** * \date         October 01, 2017
  40:..\src/interruptions.c **** * \author       _Centro "E.Piaggio"_
  41:..\src/interruptions.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  42:..\src/interruptions.c **** * \copyright    (C) 2017 Centro "E.Piaggio". All rights reserved.
  43:..\src/interruptions.c **** */
  44:..\src/interruptions.c **** 
  45:..\src/interruptions.c **** 
  46:..\src/interruptions.c **** //=================================================================     includes
  47:..\src/interruptions.c **** #include "interruptions.h"
  48:..\src/interruptions.c **** #include "command_processing.h"
  49:..\src/interruptions.c **** #include "SPI_functions.h"
  50:..\src/interruptions.c **** #include "globals.h"
  51:..\src/interruptions.c **** #include "utils.h"
  52:..\src/interruptions.c **** 
  53:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 3


  54:..\src/interruptions.c **** //==============================================================================
  55:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
  56:..\src/interruptions.c **** //==============================================================================
  57:..\src/interruptions.c **** // Processing RS-485 data frame:
  58:..\src/interruptions.c **** //
  59:..\src/interruptions.c **** // - 0:     Waits for beginning characters
  60:..\src/interruptions.c **** // - 1:     Waits for ID;
  61:..\src/interruptions.c **** // - 2:     Data length;
  62:..\src/interruptions.c **** // - 3:     Receive all bytes;
  63:..\src/interruptions.c **** // - 4:     Wait for another device end of transmission;
  64:..\src/interruptions.c **** //
  65:..\src/interruptions.c **** //==============================================================================
  66:..\src/interruptions.c **** 
  67:..\src/interruptions.c **** // PWM values needed to obtain 11.5 V given a certain input tension
  68:..\src/interruptions.c **** // Numbers are sperimentally calculated //[index] (millivolts)
  69:..\src/interruptions.c **** static const uint8 pwm_preload_values[29] = {100,    //0 (11500)
  70:..\src/interruptions.c ****                                               83,
  71:..\src/interruptions.c ****                                               78,
  72:..\src/interruptions.c ****                                               76,
  73:..\src/interruptions.c ****                                               74,
  74:..\src/interruptions.c ****                                               72,    //5 (14000)
  75:..\src/interruptions.c ****                                               70,
  76:..\src/interruptions.c ****                                               68,
  77:..\src/interruptions.c ****                                               67,
  78:..\src/interruptions.c ****                                               65,
  79:..\src/interruptions.c ****                                               64,    //10 (16500)
  80:..\src/interruptions.c ****                                               63,
  81:..\src/interruptions.c ****                                               62,
  82:..\src/interruptions.c ****                                               61,
  83:..\src/interruptions.c ****                                               60,
  84:..\src/interruptions.c ****                                               59,    //15 (19000)
  85:..\src/interruptions.c ****                                               58,
  86:..\src/interruptions.c ****                                               57,
  87:..\src/interruptions.c ****                                               56,
  88:..\src/interruptions.c ****                                               56,
  89:..\src/interruptions.c ****                                               55,    //20 (21500)
  90:..\src/interruptions.c ****                                               54,
  91:..\src/interruptions.c ****                                               54,
  92:..\src/interruptions.c ****                                               53,
  93:..\src/interruptions.c ****                                               52,
  94:..\src/interruptions.c ****                                               52,    //25 (24000)
  95:..\src/interruptions.c ****                                               52,
  96:..\src/interruptions.c ****                                               51,
  97:..\src/interruptions.c ****                                               51};   //28 (25500)
  98:..\src/interruptions.c **** 
  99:..\src/interruptions.c **** //==============================================================================
 100:..\src/interruptions.c **** //                                                            RS485 RX INTERRUPT
 101:..\src/interruptions.c **** //==============================================================================
 102:..\src/interruptions.c **** 
 103:..\src/interruptions.c **** CY_ISR(ISR_RS485_RX_ExInterrupt) {
  62              		.loc 1 103 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 1, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67 0000 80B4     		push	{r7}
  68              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 4


  69              		.cfi_offset 7, -4
  70 0002 00AF     		add	r7, sp, #0
  71              		.cfi_def_cfa_register 7
 104:..\src/interruptions.c **** 
 105:..\src/interruptions.c ****     // Set RS485 flag
 106:..\src/interruptions.c ****     
 107:..\src/interruptions.c ****     interrupt_flag = TRUE;
  72              		.loc 1 107 0
  73 0004 034B     		ldr	r3, .L2
  74 0006 0122     		movs	r2, #1
  75 0008 1A70     		strb	r2, [r3]
 108:..\src/interruptions.c ****      
 109:..\src/interruptions.c **** }
  76              		.loc 1 109 0
  77 000a 00BF     		nop
  78 000c BD46     		mov	sp, r7
  79              		.cfi_def_cfa_register 13
  80              		@ sp needed
  81 000e 80BC     		pop	{r7}
  82              		.cfi_restore 7
  83              		.cfi_def_cfa_offset 0
  84 0010 7047     		bx	lr
  85              	.L3:
  86 0012 00BF     		.align	2
  87              	.L2:
  88 0014 00000000 		.word	interrupt_flag
  89              		.cfi_endproc
  90              	.LFE64:
  91              		.size	ISR_RS485_RX_ExInterrupt, .-ISR_RS485_RX_ExInterrupt
  92              		.section	.text.ISR_CYCLES_Handler,"ax",%progbits
  93              		.align	2
  94              		.global	ISR_CYCLES_Handler
  95              		.thumb
  96              		.thumb_func
  97              		.type	ISR_CYCLES_Handler, %function
  98              	ISR_CYCLES_Handler:
  99              	.LFB65:
 110:..\src/interruptions.c **** 
 111:..\src/interruptions.c **** //==============================================================================
 112:..\src/interruptions.c **** //                                                        CYCLES TIMER INTERRUPT
 113:..\src/interruptions.c **** //==============================================================================
 114:..\src/interruptions.c **** CY_ISR(ISR_CYCLES_Handler){
 100              		.loc 1 114 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 1, uses_anonymous_args = 0
 104              		@ link register save eliminated.
 105 0000 80B4     		push	{r7}
 106              		.cfi_def_cfa_offset 4
 107              		.cfi_offset 7, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 115:..\src/interruptions.c **** 
 116:..\src/interruptions.c ****     // Set cycles interrupt flag
 117:..\src/interruptions.c ****     
 118:..\src/interruptions.c ****     cycles_interrupt_flag = TRUE;
 110              		.loc 1 118 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 5


 111 0004 044B     		ldr	r3, .L5
 112 0006 0122     		movs	r2, #1
 113 0008 1A70     		strb	r2, [r3]
 119:..\src/interruptions.c ****     
 120:..\src/interruptions.c ****     CYCLES_TIMER_STATUS;
 114              		.loc 1 120 0
 115 000a 044B     		ldr	r3, .L5+4
 116 000c 1B78     		ldrb	r3, [r3]
 121:..\src/interruptions.c **** 
 122:..\src/interruptions.c **** }
 117              		.loc 1 122 0
 118 000e 00BF     		nop
 119 0010 BD46     		mov	sp, r7
 120              		.cfi_def_cfa_register 13
 121              		@ sp needed
 122 0012 80BC     		pop	{r7}
 123              		.cfi_restore 7
 124              		.cfi_def_cfa_offset 0
 125 0014 7047     		bx	lr
 126              	.L6:
 127 0016 00BF     		.align	2
 128              	.L5:
 129 0018 00000000 		.word	cycles_interrupt_flag
 130 001c 6B650040 		.word	1073767787
 131              		.cfi_endproc
 132              	.LFE65:
 133              		.size	ISR_CYCLES_Handler, .-ISR_CYCLES_Handler
 134              		.section	.text.interrupt_manager,"ax",%progbits
 135              		.align	2
 136              		.global	interrupt_manager
 137              		.thumb
 138              		.thumb_func
 139              		.type	interrupt_manager, %function
 140              	interrupt_manager:
 141              	.LFB66:
 123:..\src/interruptions.c **** 
 124:..\src/interruptions.c **** //==============================================================================
 125:..\src/interruptions.c **** //                                                             INTERRUPT MANAGER
 126:..\src/interruptions.c **** //==============================================================================
 127:..\src/interruptions.c **** // Manage interrupt from RS485 
 128:..\src/interruptions.c **** //==============================================================================
 129:..\src/interruptions.c **** // Processing RS-485 data frame:
 130:..\src/interruptions.c **** //
 131:..\src/interruptions.c **** // - WAIT_START:    Waits for beginning characters;
 132:..\src/interruptions.c **** // - WAIT_ID:       Waits for ID;
 133:..\src/interruptions.c **** // - WAIT_LENGTH:   Data length;
 134:..\src/interruptions.c **** // - RECEIVE:       Receive all bytes;
 135:..\src/interruptions.c **** // - UNLOAD:        Wait for another device end of transmission;
 136:..\src/interruptions.c **** //
 137:..\src/interruptions.c **** //==============================================================================
 138:..\src/interruptions.c **** 
 139:..\src/interruptions.c **** void interrupt_manager(){
 142              		.loc 1 139 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 8
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 6


 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 7, -8
 149              		.cfi_offset 14, -4
 150 0002 82B0     		sub	sp, sp, #8
 151              		.cfi_def_cfa_offset 16
 152 0004 00AF     		add	r7, sp, #0
 153              		.cfi_def_cfa_register 7
 140:..\src/interruptions.c **** 
 141:..\src/interruptions.c ****     
 142:..\src/interruptions.c ****     //===========================================     local variables definition
 143:..\src/interruptions.c **** 
 144:..\src/interruptions.c ****     static uint8 CYDATA state = WAIT_START;                      // state
 145:..\src/interruptions.c ****     
 146:..\src/interruptions.c ****     //------------------------------------------------- local data packet
 147:..\src/interruptions.c ****     static uint8 CYDATA data_packet_index;
 148:..\src/interruptions.c ****     static uint8 CYDATA data_packet_length;
 149:..\src/interruptions.c ****     static uint8 data_packet_buffer[128];                     
 150:..\src/interruptions.c ****     static uint8 CYDATA rx_queue[3];                    // last 2 bytes received
 151:..\src/interruptions.c ****     //-------------------------------------------------
 152:..\src/interruptions.c **** 
 153:..\src/interruptions.c ****     uint8 CYDATA    rx_data;                            // RS485 UART rx data
 154:..\src/interruptions.c ****     CYBIT           rx_data_type = TRUE;                       // my id?
 154              		.loc 1 154 0
 155 0006 0123     		movs	r3, #1
 156 0008 FB71     		strb	r3, [r7, #7]
 155:..\src/interruptions.c ****     uint8 CYDATA    package_count = 0;                     
 157              		.loc 1 155 0
 158 000a 0023     		movs	r3, #0
 159 000c BB71     		strb	r3, [r7, #6]
 156:..\src/interruptions.c **** 
 157:..\src/interruptions.c ****     //======================================================     receive routine
 158:..\src/interruptions.c ****     
 159:..\src/interruptions.c ****     // Get data until buffer is not empty 
 160:..\src/interruptions.c ****     
 161:..\src/interruptions.c ****     while(UART_RS485_GetRxBufferSize() && (package_count < 6)){
 160              		.loc 1 161 0
 161 000e D5E0     		b	.L8
 162              	.L28:
 162:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 163:..\src/interruptions.c ****         
 164:..\src/interruptions.c ****         // Get next char
 165:..\src/interruptions.c ****         rx_data = UART_RS485_GetChar();
 163              		.loc 1 165 0
 164 0010 FFF7FEFF 		bl	UART_RS485_GetChar
 165 0014 0346     		mov	r3, r0
 166 0016 7B71     		strb	r3, [r7, #5]
 166:..\src/interruptions.c ****         
 167:..\src/interruptions.c ****         switch (state) {
 167              		.loc 1 167 0
 168 0018 6F4B     		ldr	r3, .L31
 169 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 170 001c 042B     		cmp	r3, #4
 171 001e 00F2CD80 		bhi	.L8
 172 0022 01A2     		adr	r2, .L10
 173 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 174              		.p2align 2
 175              	.L10:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 7


 176 0028 3D000000 		.word	.L9+1
 177 002c A3000000 		.word	.L11+1
 178 0030 CB000000 		.word	.L12+1
 179 0034 19010000 		.word	.L13+1
 180 0038 83010000 		.word	.L14+1
 181              		.p2align 1
 182              	.L9:
 168:..\src/interruptions.c ****             //-----     wait for frame start     -------------------------------
 169:..\src/interruptions.c ****             case WAIT_START:
 170:..\src/interruptions.c ****             
 171:..\src/interruptions.c ****                 rx_queue[0] = rx_queue[1];
 183              		.loc 1 171 0
 184 003c 674B     		ldr	r3, .L31+4
 185 003e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 186 0040 664B     		ldr	r3, .L31+4
 187 0042 1A70     		strb	r2, [r3]
 172:..\src/interruptions.c ****                 rx_queue[1] = rx_queue[2];
 188              		.loc 1 172 0
 189 0044 654B     		ldr	r3, .L31+4
 190 0046 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 191 0048 644B     		ldr	r3, .L31+4
 192 004a 5A70     		strb	r2, [r3, #1]
 173:..\src/interruptions.c ****                 rx_queue[2] = rx_data;
 193              		.loc 1 173 0
 194 004c 634A     		ldr	r2, .L31+4
 195 004e 7B79     		ldrb	r3, [r7, #5]
 196 0050 9370     		strb	r3, [r2, #2]
 174:..\src/interruptions.c ****                 
 175:..\src/interruptions.c ****                 // Check for header configuration package
 176:..\src/interruptions.c ****                 if ((rx_queue[1] == 58) && (rx_queue[2] == 58)) {
 197              		.loc 1 176 0
 198 0052 624B     		ldr	r3, .L31+4
 199 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 200 0056 3A2B     		cmp	r3, #58
 201 0058 10D1     		bne	.L15
 202              		.loc 1 176 0 is_stmt 0 discriminator 1
 203 005a 604B     		ldr	r3, .L31+4
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 3A2B     		cmp	r3, #58
 206 0060 0CD1     		bne	.L15
 177:..\src/interruptions.c ****                     rx_queue[0] = 0;
 207              		.loc 1 177 0 is_stmt 1
 208 0062 5E4B     		ldr	r3, .L31+4
 209 0064 0022     		movs	r2, #0
 210 0066 1A70     		strb	r2, [r3]
 178:..\src/interruptions.c ****                     rx_queue[1] = 0;
 211              		.loc 1 178 0
 212 0068 5C4B     		ldr	r3, .L31+4
 213 006a 0022     		movs	r2, #0
 214 006c 5A70     		strb	r2, [r3, #1]
 179:..\src/interruptions.c ****                     rx_queue[2] = 0;
 215              		.loc 1 179 0
 216 006e 5B4B     		ldr	r3, .L31+4
 217 0070 0022     		movs	r2, #0
 218 0072 9A70     		strb	r2, [r3, #2]
 180:..\src/interruptions.c ****                     state       = WAIT_ID;                    
 219              		.loc 1 180 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 8


 220 0074 584B     		ldr	r3, .L31
 221 0076 0122     		movs	r2, #1
 222 0078 1A70     		strb	r2, [r3]
 223 007a 11E0     		b	.L16
 224              	.L15:
 181:..\src/interruptions.c ****                 }else
 182:..\src/interruptions.c ****                     if ((rx_queue[0] == 63) &&      //ASCII - ?
 225              		.loc 1 182 0
 226 007c 574B     		ldr	r3, .L31+4
 227 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 228 0080 3F2B     		cmp	r3, #63
 229 0082 40F09B80 		bne	.L8
 183:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 230              		.loc 1 183 0 discriminator 1
 231 0086 554B     		ldr	r3, .L31+4
 232 0088 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 182:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 233              		.loc 1 182 0 discriminator 1
 234 008a 0D2B     		cmp	r3, #13
 235 008c 40F09680 		bne	.L8
 184:..\src/interruptions.c ****                         (rx_queue[2] == 10))        //ASCII - LF)
 236              		.loc 1 184 0
 237 0090 524B     		ldr	r3, .L31+4
 238 0092 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 183:..\src/interruptions.c ****                         (rx_queue[1] == 13) &&      //ASCII - CR
 239              		.loc 1 183 0
 240 0094 0A2B     		cmp	r3, #10
 241 0096 40F09180 		bne	.L8
 185:..\src/interruptions.c ****                         infoGet(INFO_ALL);
 242              		.loc 1 185 0
 243 009a 0020     		movs	r0, #0
 244 009c FFF7FEFF 		bl	infoGet
 245              	.L16:
 186:..\src/interruptions.c ****                 break;
 246              		.loc 1 186 0
 247 00a0 8CE0     		b	.L8
 248              	.L11:
 187:..\src/interruptions.c **** 
 188:..\src/interruptions.c ****             //-----     wait for id     ----------------------------------------
 189:..\src/interruptions.c ****             case  WAIT_ID:
 190:..\src/interruptions.c **** 
 191:..\src/interruptions.c ****                 // packet is for my ID or is broadcast
 192:..\src/interruptions.c ****                 if (rx_data == c_mem.id || rx_data == 0)
 249              		.loc 1 192 0
 250 00a2 4F4B     		ldr	r3, .L31+8
 251 00a4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 252 00a6 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 253 00a8 9A42     		cmp	r2, r3
 254 00aa 02D0     		beq	.L17
 255              		.loc 1 192 0 is_stmt 0 discriminator 1
 256 00ac 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 257 00ae 002B     		cmp	r3, #0
 258 00b0 02D1     		bne	.L18
 259              	.L17:
 193:..\src/interruptions.c ****                     rx_data_type = FALSE;
 260              		.loc 1 193 0 is_stmt 1
 261 00b2 0023     		movs	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 9


 262 00b4 FB71     		strb	r3, [r7, #7]
 263 00b6 01E0     		b	.L19
 264              	.L18:
 194:..\src/interruptions.c ****                 else                //packet is for others
 195:..\src/interruptions.c ****                     rx_data_type = TRUE;
 265              		.loc 1 195 0
 266 00b8 0123     		movs	r3, #1
 267 00ba FB71     		strb	r3, [r7, #7]
 268              	.L19:
 196:..\src/interruptions.c ****                 
 197:..\src/interruptions.c ****                 data_packet_length = 0;
 269              		.loc 1 197 0
 270 00bc 494B     		ldr	r3, .L31+12
 271 00be 0022     		movs	r2, #0
 272 00c0 1A70     		strb	r2, [r3]
 198:..\src/interruptions.c ****                 state = WAIT_LENGTH;
 273              		.loc 1 198 0
 274 00c2 454B     		ldr	r3, .L31
 275 00c4 0222     		movs	r2, #2
 276 00c6 1A70     		strb	r2, [r3]
 199:..\src/interruptions.c ****                 break;
 277              		.loc 1 199 0
 278 00c8 78E0     		b	.L8
 279              	.L12:
 200:..\src/interruptions.c **** 
 201:..\src/interruptions.c ****             //-----     wait for length     ------------------------------------
 202:..\src/interruptions.c ****             case  WAIT_LENGTH:
 203:..\src/interruptions.c **** 
 204:..\src/interruptions.c ****                 data_packet_length = rx_data;
 280              		.loc 1 204 0
 281 00ca 464A     		ldr	r2, .L31+12
 282 00cc 7B79     		ldrb	r3, [r7, #5]
 283 00ce 1370     		strb	r3, [r2]
 205:..\src/interruptions.c ****                 // check validity of pack length
 206:..\src/interruptions.c ****                 if (data_packet_length <= 1) {
 284              		.loc 1 206 0
 285 00d0 444B     		ldr	r3, .L31+12
 286 00d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d4 012B     		cmp	r3, #1
 288 00d6 06D8     		bhi	.L20
 207:..\src/interruptions.c ****                     data_packet_length = 0;
 289              		.loc 1 207 0
 290 00d8 424B     		ldr	r3, .L31+12
 291 00da 0022     		movs	r2, #0
 292 00dc 1A70     		strb	r2, [r3]
 208:..\src/interruptions.c ****                     state = WAIT_START;
 293              		.loc 1 208 0
 294 00de 3E4B     		ldr	r3, .L31
 295 00e0 0022     		movs	r2, #0
 296 00e2 1A70     		strb	r2, [r3]
 297 00e4 6AE0     		b	.L8
 298              	.L20:
 209:..\src/interruptions.c ****                 } else if (data_packet_length > 128) {
 299              		.loc 1 209 0
 300 00e6 3F4B     		ldr	r3, .L31+12
 301 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 302 00ea 802B     		cmp	r3, #128
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 10


 303 00ec 06D9     		bls	.L22
 210:..\src/interruptions.c ****                     data_packet_length = 0;
 304              		.loc 1 210 0
 305 00ee 3D4B     		ldr	r3, .L31+12
 306 00f0 0022     		movs	r2, #0
 307 00f2 1A70     		strb	r2, [r3]
 211:..\src/interruptions.c ****                     state = WAIT_START;
 308              		.loc 1 211 0
 309 00f4 384B     		ldr	r3, .L31
 310 00f6 0022     		movs	r2, #0
 311 00f8 1A70     		strb	r2, [r3]
 312 00fa 5FE0     		b	.L8
 313              	.L22:
 212:..\src/interruptions.c ****                 } else {
 213:..\src/interruptions.c ****                     data_packet_index = 0;
 314              		.loc 1 213 0
 315 00fc 3A4B     		ldr	r3, .L31+16
 316 00fe 0022     		movs	r2, #0
 317 0100 1A70     		strb	r2, [r3]
 214:..\src/interruptions.c ****                     
 215:..\src/interruptions.c ****                     if(rx_data_type == FALSE)
 318              		.loc 1 215 0
 319 0102 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 320 0104 002B     		cmp	r3, #0
 321 0106 03D1     		bne	.L23
 216:..\src/interruptions.c ****                         state = RECEIVE;          // packet for me or broadcast
 322              		.loc 1 216 0
 323 0108 334B     		ldr	r3, .L31
 324 010a 0322     		movs	r2, #3
 325 010c 1A70     		strb	r2, [r3]
 326 010e 55E0     		b	.L8
 327              	.L23:
 217:..\src/interruptions.c ****                     else
 218:..\src/interruptions.c ****                         state = UNLOAD;           // packet for others
 328              		.loc 1 218 0
 329 0110 314B     		ldr	r3, .L31
 330 0112 0422     		movs	r2, #4
 331 0114 1A70     		strb	r2, [r3]
 219:..\src/interruptions.c ****                 }
 220:..\src/interruptions.c ****                 break;
 332              		.loc 1 220 0
 333 0116 51E0     		b	.L8
 334              	.L13:
 221:..\src/interruptions.c **** 
 222:..\src/interruptions.c ****             //-----     receiving     -------------------------------------------
 223:..\src/interruptions.c ****             case RECEIVE:
 224:..\src/interruptions.c **** 
 225:..\src/interruptions.c ****                 data_packet_buffer[data_packet_index] = rx_data;
 335              		.loc 1 225 0
 336 0118 334B     		ldr	r3, .L31+16
 337 011a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 011c 1946     		mov	r1, r3
 339 011e 334A     		ldr	r2, .L31+20
 340 0120 7B79     		ldrb	r3, [r7, #5]
 341 0122 5354     		strb	r3, [r2, r1]
 226:..\src/interruptions.c ****                 data_packet_index++;
 342              		.loc 1 226 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 11


 343 0124 304B     		ldr	r3, .L31+16
 344 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 345 0128 0133     		adds	r3, r3, #1
 346 012a DAB2     		uxtb	r2, r3
 347 012c 2E4B     		ldr	r3, .L31+16
 348 012e 1A70     		strb	r2, [r3]
 227:..\src/interruptions.c ****                 
 228:..\src/interruptions.c ****                 // check end of transmission
 229:..\src/interruptions.c ****                 if (data_packet_index >= data_packet_length) {
 349              		.loc 1 229 0
 350 0130 2D4B     		ldr	r3, .L31+16
 351 0132 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 352 0134 2B4B     		ldr	r3, .L31+12
 353 0136 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 354 0138 9A42     		cmp	r2, r3
 355 013a 3FD3     		bcc	.L8
 230:..\src/interruptions.c ****                     // verify if frame ID corresponded to the device ID
 231:..\src/interruptions.c ****                     if (rx_data_type == FALSE) {
 356              		.loc 1 231 0
 357 013c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 358 013e 002B     		cmp	r3, #0
 359 0140 12D1     		bne	.L25
 232:..\src/interruptions.c ****                         // copying data from buffer to global packet
 233:..\src/interruptions.c ****                         memcpy(g_rx.buffer, data_packet_buffer, data_packet_length);
 360              		.loc 1 233 0
 361 0142 284B     		ldr	r3, .L31+12
 362 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 363 0146 1A46     		mov	r2, r3
 364 0148 2849     		ldr	r1, .L31+20
 365 014a 2948     		ldr	r0, .L31+24
 366 014c FFF7FEFF 		bl	memcpy
 234:..\src/interruptions.c ****                         g_rx.length = data_packet_length;
 367              		.loc 1 234 0
 368 0150 244B     		ldr	r3, .L31+12
 369 0152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0154 1AB2     		sxth	r2, r3
 371 0156 264B     		ldr	r3, .L31+24
 372 0158 A3F88020 		strh	r2, [r3, #128]	@ movhi
 235:..\src/interruptions.c ****                         g_rx.ready  = 1;
 373              		.loc 1 235 0
 374 015c 244B     		ldr	r3, .L31+24
 375 015e 0122     		movs	r2, #1
 376 0160 83F88420 		strb	r2, [r3, #132]
 236:..\src/interruptions.c ****                         commProcess();
 377              		.loc 1 236 0
 378 0164 FFF7FEFF 		bl	commProcess
 379              	.L25:
 237:..\src/interruptions.c ****                     }
 238:..\src/interruptions.c ****                     
 239:..\src/interruptions.c ****                     data_packet_index  = 0;
 380              		.loc 1 239 0
 381 0168 1F4B     		ldr	r3, .L31+16
 382 016a 0022     		movs	r2, #0
 383 016c 1A70     		strb	r2, [r3]
 240:..\src/interruptions.c ****                     data_packet_length = 0;
 384              		.loc 1 240 0
 385 016e 1D4B     		ldr	r3, .L31+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 12


 386 0170 0022     		movs	r2, #0
 387 0172 1A70     		strb	r2, [r3]
 241:..\src/interruptions.c ****                     state              = WAIT_START;
 388              		.loc 1 241 0
 389 0174 184B     		ldr	r3, .L31
 390 0176 0022     		movs	r2, #0
 391 0178 1A70     		strb	r2, [r3]
 242:..\src/interruptions.c ****                     package_count++;
 392              		.loc 1 242 0
 393 017a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 394 017c 0133     		adds	r3, r3, #1
 395 017e BB71     		strb	r3, [r7, #6]
 243:..\src/interruptions.c ****                 
 244:..\src/interruptions.c ****                 }
 245:..\src/interruptions.c ****                 break;
 396              		.loc 1 245 0
 397 0180 1CE0     		b	.L8
 398              	.L14:
 246:..\src/interruptions.c **** 
 247:..\src/interruptions.c ****             //-----     other device is receving     ---------------------------
 248:..\src/interruptions.c ****             case UNLOAD:
 249:..\src/interruptions.c ****                 if (!(--data_packet_length)) {
 399              		.loc 1 249 0
 400 0182 184B     		ldr	r3, .L31+12
 401 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0186 013B     		subs	r3, r3, #1
 403 0188 DAB2     		uxtb	r2, r3
 404 018a 164B     		ldr	r3, .L31+12
 405 018c 1A70     		strb	r2, [r3]
 406 018e 154B     		ldr	r3, .L31+12
 407 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 0192 002B     		cmp	r3, #0
 409 0194 11D1     		bne	.L30
 250:..\src/interruptions.c ****                     data_packet_index  = 0;
 410              		.loc 1 250 0
 411 0196 144B     		ldr	r3, .L31+16
 412 0198 0022     		movs	r2, #0
 413 019a 1A70     		strb	r2, [r3]
 251:..\src/interruptions.c ****                     data_packet_length = 0;
 414              		.loc 1 251 0
 415 019c 114B     		ldr	r3, .L31+12
 416 019e 0022     		movs	r2, #0
 417 01a0 1A70     		strb	r2, [r3]
 252:..\src/interruptions.c ****                     RS485_CTS_Write(1);
 418              		.loc 1 252 0
 419 01a2 0120     		movs	r0, #1
 420 01a4 FFF7FEFF 		bl	RS485_CTS_Write
 253:..\src/interruptions.c ****                     RS485_CTS_Write(0);
 421              		.loc 1 253 0
 422 01a8 0020     		movs	r0, #0
 423 01aa FFF7FEFF 		bl	RS485_CTS_Write
 254:..\src/interruptions.c ****                     state              = WAIT_START;
 424              		.loc 1 254 0
 425 01ae 0A4B     		ldr	r3, .L31
 426 01b0 0022     		movs	r2, #0
 427 01b2 1A70     		strb	r2, [r3]
 255:..\src/interruptions.c ****                     package_count++;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 13


 428              		.loc 1 255 0
 429 01b4 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 430 01b6 0133     		adds	r3, r3, #1
 431 01b8 BB71     		strb	r3, [r7, #6]
 432              	.L30:
 256:..\src/interruptions.c ****                 }
 257:..\src/interruptions.c ****                 break;
 433              		.loc 1 257 0
 434 01ba 00BF     		nop
 435              	.L8:
 161:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 436              		.loc 1 161 0
 437 01bc FFF7FEFF 		bl	UART_RS485_GetRxBufferSize
 438 01c0 0346     		mov	r3, r0
 439 01c2 002B     		cmp	r3, #0
 440 01c4 03D0     		beq	.L29
 161:..\src/interruptions.c ****         // 6 - estimated maximum number of packets we can read without blocking firmware execution
 441              		.loc 1 161 0 is_stmt 0 discriminator 1
 442 01c6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 443 01c8 052B     		cmp	r3, #5
 444 01ca 7FF621AF 		bls	.L28
 445              	.L29:
 258:..\src/interruptions.c ****         }
 259:..\src/interruptions.c ****     }
 260:..\src/interruptions.c **** }
 446              		.loc 1 260 0 is_stmt 1
 447 01ce 00BF     		nop
 448 01d0 0837     		adds	r7, r7, #8
 449              		.cfi_def_cfa_offset 8
 450 01d2 BD46     		mov	sp, r7
 451              		.cfi_def_cfa_register 13
 452              		@ sp needed
 453 01d4 80BD     		pop	{r7, pc}
 454              	.L32:
 455 01d6 00BF     		.align	2
 456              	.L31:
 457 01d8 00000000 		.word	state.9850
 458 01dc 04000000 		.word	rx_queue.9854
 459 01e0 00000000 		.word	c_mem
 460 01e4 07000000 		.word	data_packet_length.9852
 461 01e8 08000000 		.word	data_packet_index.9851
 462 01ec 0C000000 		.word	data_packet_buffer.9853
 463 01f0 00000000 		.word	g_rx
 464              		.cfi_endproc
 465              	.LFE66:
 466              		.size	interrupt_manager, .-interrupt_manager
 467              		.global	__aeabi_ui2d
 468              		.global	__aeabi_ddiv
 469              		.global	__aeabi_d2f
 470              		.section	.text.function_scheduler,"ax",%progbits
 471              		.align	2
 472              		.global	function_scheduler
 473              		.thumb
 474              		.thumb_func
 475              		.type	function_scheduler, %function
 476              	function_scheduler:
 477              	.LFB67:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 14


 261:..\src/interruptions.c **** //==============================================================================
 262:..\src/interruptions.c **** //                                                            FUNCTION SCHEDULER
 263:..\src/interruptions.c **** //==============================================================================
 264:..\src/interruptions.c **** // Call all the function with the right frequency
 265:..\src/interruptions.c **** //==============================================================================
 266:..\src/interruptions.c **** // Base frequency 1000 Hz
 267:..\src/interruptions.c **** //==============================================================================
 268:..\src/interruptions.c **** 
 269:..\src/interruptions.c **** void function_scheduler(void) {
 478              		.loc 1 269 0
 479              		.cfi_startproc
 480              		@ args = 0, pretend = 0, frame = 2504
 481              		@ frame_needed = 1, uses_anonymous_args = 0
 482 0000 B0B5     		push	{r4, r5, r7, lr}
 483              		.cfi_def_cfa_offset 16
 484              		.cfi_offset 4, -16
 485              		.cfi_offset 5, -12
 486              		.cfi_offset 7, -8
 487              		.cfi_offset 14, -4
 488 0002 ADF6C81D 		subw	sp, sp, #2504
 489              		.cfi_def_cfa_offset 2520
 490 0006 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 270:..\src/interruptions.c ****  
 271:..\src/interruptions.c ****     static uint16 counter_calibration = DIV_INIT_VALUE;
 272:..\src/interruptions.c ****     static uint16 counter_tension_func = DIV_INIT_VALUE;
 273:..\src/interruptions.c ****     CYBIT write_cycles = FALSE;
 492              		.loc 1 273 0
 493 0008 0023     		movs	r3, #0
 494 000a 87F8C739 		strb	r3, [r7, #2503]
 274:..\src/interruptions.c ****     timer_value0 = (uint32)MY_TIMER_ReadCounter();
 495              		.loc 1 274 0
 496 000e FFF7FEFF 		bl	MY_TIMER_ReadCounter
 497 0012 0246     		mov	r2, r0
 498 0014 BF4B     		ldr	r3, .L50
 499 0016 1A60     		str	r2, [r3]
 275:..\src/interruptions.c ****     uint8 rtc_data;
 276:..\src/interruptions.c ****     char info_[2500] = "";
 500              		.loc 1 276 0
 501 0018 3B46     		mov	r3, r7
 502 001a 0022     		movs	r2, #0
 503 001c 1A60     		str	r2, [r3]
 504 001e 0433     		adds	r3, r3, #4
 505 0020 4FF41C62 		mov	r2, #2496
 506 0024 0021     		movs	r1, #0
 507 0026 1846     		mov	r0, r3
 508 0028 FFF7FEFF 		bl	memset
 277:..\src/interruptions.c **** 
 278:..\src/interruptions.c ****     // Start ADC Conversion, SOC = 1
 279:..\src/interruptions.c **** 
 280:..\src/interruptions.c ****     ADC_SOC_Write(0x01); 
 509              		.loc 1 280 0
 510 002c 0120     		movs	r0, #1
 511 002e FFF7FEFF 		bl	ADC_SOC_Write
 281:..\src/interruptions.c ****     
 282:..\src/interruptions.c ****     // Check Interrupt 
 283:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 15


 284:..\src/interruptions.c ****     if (interrupt_flag){
 512              		.loc 1 284 0
 513 0032 B94B     		ldr	r3, .L50+4
 514 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 515 0036 002B     		cmp	r3, #0
 516 0038 07D0     		beq	.L34
 285:..\src/interruptions.c ****         interrupt_flag = FALSE;
 517              		.loc 1 285 0
 518 003a B74B     		ldr	r3, .L50+4
 519 003c 0022     		movs	r2, #0
 520 003e 1A70     		strb	r2, [r3]
 286:..\src/interruptions.c ****         interrupt_manager();
 521              		.loc 1 286 0
 522 0040 FFF7FEFF 		bl	interrupt_manager
 287:..\src/interruptions.c ****         write_cycles = TRUE;
 523              		.loc 1 287 0
 524 0044 0123     		movs	r3, #1
 525 0046 87F8C739 		strb	r3, [r7, #2503]
 526              	.L34:
 288:..\src/interruptions.c ****     }
 289:..\src/interruptions.c **** 
 290:..\src/interruptions.c ****     //---------------------------------- Get Encoders
 291:..\src/interruptions.c **** 
 292:..\src/interruptions.c ****     encoder_reading_SPI(); 
 527              		.loc 1 292 0
 528 004a FFF7FEFF 		bl	encoder_reading_SPI
 293:..\src/interruptions.c ****     
 294:..\src/interruptions.c ****     // Check Interrupt     
 295:..\src/interruptions.c ****     
 296:..\src/interruptions.c ****     if (interrupt_flag){
 529              		.loc 1 296 0
 530 004e B24B     		ldr	r3, .L50+4
 531 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 532 0052 002B     		cmp	r3, #0
 533 0054 07D0     		beq	.L35
 297:..\src/interruptions.c ****         interrupt_flag = FALSE;
 534              		.loc 1 297 0
 535 0056 B04B     		ldr	r3, .L50+4
 536 0058 0022     		movs	r2, #0
 537 005a 1A70     		strb	r2, [r3]
 298:..\src/interruptions.c ****         interrupt_manager();
 538              		.loc 1 298 0
 539 005c FFF7FEFF 		bl	interrupt_manager
 299:..\src/interruptions.c ****         write_cycles = TRUE;
 540              		.loc 1 299 0
 541 0060 0123     		movs	r3, #1
 542 0062 87F8C739 		strb	r3, [r7, #2503]
 543              	.L35:
 300:..\src/interruptions.c ****     }
 301:..\src/interruptions.c **** 
 302:..\src/interruptions.c ****     //---------------------------------- Control Motor
 303:..\src/interruptions.c ****    
 304:..\src/interruptions.c ****     motor_control();
 544              		.loc 1 304 0
 545 0066 FFF7FEFF 		bl	motor_control
 305:..\src/interruptions.c **** 
 306:..\src/interruptions.c ****     // Check Interrupt 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 16


 307:..\src/interruptions.c **** 
 308:..\src/interruptions.c ****     if (interrupt_flag){
 546              		.loc 1 308 0
 547 006a AB4B     		ldr	r3, .L50+4
 548 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549 006e 002B     		cmp	r3, #0
 550 0070 07D0     		beq	.L36
 309:..\src/interruptions.c ****         interrupt_flag = FALSE;
 551              		.loc 1 309 0
 552 0072 A94B     		ldr	r3, .L50+4
 553 0074 0022     		movs	r2, #0
 554 0076 1A70     		strb	r2, [r3]
 310:..\src/interruptions.c ****         interrupt_manager();
 555              		.loc 1 310 0
 556 0078 FFF7FEFF 		bl	interrupt_manager
 311:..\src/interruptions.c ****         write_cycles = TRUE;
 557              		.loc 1 311 0
 558 007c 0123     		movs	r3, #1
 559 007e 87F8C739 		strb	r3, [r7, #2503]
 560              	.L36:
 312:..\src/interruptions.c ****     }
 313:..\src/interruptions.c **** 
 314:..\src/interruptions.c ****     //---------------------------------- Read conversion buffer - LOCK function
 315:..\src/interruptions.c **** 
 316:..\src/interruptions.c ****     analog_read_end();
 561              		.loc 1 316 0
 562 0082 FFF7FEFF 		bl	analog_read_end
 317:..\src/interruptions.c **** 
 318:..\src/interruptions.c ****     if (interrupt_flag){
 563              		.loc 1 318 0
 564 0086 A44B     		ldr	r3, .L50+4
 565 0088 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 566 008a 002B     		cmp	r3, #0
 567 008c 07D0     		beq	.L37
 319:..\src/interruptions.c ****         interrupt_flag = FALSE;
 568              		.loc 1 319 0
 569 008e A24B     		ldr	r3, .L50+4
 570 0090 0022     		movs	r2, #0
 571 0092 1A70     		strb	r2, [r3]
 320:..\src/interruptions.c ****         interrupt_manager();
 572              		.loc 1 320 0
 573 0094 FFF7FEFF 		bl	interrupt_manager
 321:..\src/interruptions.c ****         write_cycles = TRUE;
 574              		.loc 1 321 0
 575 0098 0123     		movs	r3, #1
 576 009a 87F8C739 		strb	r3, [r7, #2503]
 577              	.L37:
 322:..\src/interruptions.c ****     }
 323:..\src/interruptions.c **** 
 324:..\src/interruptions.c ****     //---------------------------------- Control Overcurrent
 325:..\src/interruptions.c **** 
 326:..\src/interruptions.c ****     overcurrent_control();
 578              		.loc 1 326 0
 579 009e FFF7FEFF 		bl	overcurrent_control
 327:..\src/interruptions.c ****     
 328:..\src/interruptions.c ****     // Check Interrupt 
 329:..\src/interruptions.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 17


 330:..\src/interruptions.c ****     if (interrupt_flag){
 580              		.loc 1 330 0
 581 00a2 9D4B     		ldr	r3, .L50+4
 582 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 583 00a6 002B     		cmp	r3, #0
 584 00a8 07D0     		beq	.L38
 331:..\src/interruptions.c ****         interrupt_flag = FALSE;
 585              		.loc 1 331 0
 586 00aa 9B4B     		ldr	r3, .L50+4
 587 00ac 0022     		movs	r2, #0
 588 00ae 1A70     		strb	r2, [r3]
 332:..\src/interruptions.c ****         interrupt_manager();
 589              		.loc 1 332 0
 590 00b0 FFF7FEFF 		bl	interrupt_manager
 333:..\src/interruptions.c ****         write_cycles = TRUE;
 591              		.loc 1 333 0
 592 00b4 0123     		movs	r3, #1
 593 00b6 87F8C739 		strb	r3, [r7, #2503]
 594              	.L38:
 334:..\src/interruptions.c ****     }
 335:..\src/interruptions.c **** 
 336:..\src/interruptions.c ****     //---------------------------------- Calibration 
 337:..\src/interruptions.c **** 
 338:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 339:..\src/interruptions.c ****     if (calib.enabled == TRUE) {
 595              		.loc 1 339 0
 596 00ba 984B     		ldr	r3, .L50+8
 597 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 598 00be 012B     		cmp	r3, #1
 599 00c0 0ED1     		bne	.L39
 340:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 600              		.loc 1 340 0
 601 00c2 974B     		ldr	r3, .L50+12
 602 00c4 1B88     		ldrh	r3, [r3]
 603 00c6 0A2B     		cmp	r3, #10
 604 00c8 04D1     		bne	.L40
 341:..\src/interruptions.c ****             calibration();
 605              		.loc 1 341 0
 606 00ca FFF7FEFF 		bl	calibration
 342:..\src/interruptions.c ****             counter_calibration = 0;
 607              		.loc 1 342 0
 608 00ce 944B     		ldr	r3, .L50+12
 609 00d0 0022     		movs	r2, #0
 610 00d2 1A80     		strh	r2, [r3]	@ movhi
 611              	.L40:
 343:..\src/interruptions.c ****         }
 344:..\src/interruptions.c ****         counter_calibration++;
 612              		.loc 1 344 0
 613 00d4 924B     		ldr	r3, .L50+12
 614 00d6 1B88     		ldrh	r3, [r3]
 615 00d8 0133     		adds	r3, r3, #1
 616 00da 9AB2     		uxth	r2, r3
 617 00dc 904B     		ldr	r3, .L50+12
 618 00de 1A80     		strh	r2, [r3]	@ movhi
 619              	.L39:
 345:..\src/interruptions.c ****     }
 346:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 18


 347:..\src/interruptions.c ****     // Check Interrupt 
 348:..\src/interruptions.c ****     
 349:..\src/interruptions.c ****     if (interrupt_flag){
 620              		.loc 1 349 0
 621 00e0 8D4B     		ldr	r3, .L50+4
 622 00e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623 00e4 002B     		cmp	r3, #0
 624 00e6 07D0     		beq	.L41
 350:..\src/interruptions.c ****         interrupt_flag = FALSE;
 625              		.loc 1 350 0
 626 00e8 8B4B     		ldr	r3, .L50+4
 627 00ea 0022     		movs	r2, #0
 628 00ec 1A70     		strb	r2, [r3]
 351:..\src/interruptions.c ****         interrupt_manager();
 629              		.loc 1 351 0
 630 00ee FFF7FEFF 		bl	interrupt_manager
 352:..\src/interruptions.c ****         write_cycles = TRUE;
 631              		.loc 1 352 0
 632 00f2 0123     		movs	r3, #1
 633 00f4 87F8C739 		strb	r3, [r7, #2503]
 634              	.L41:
 353:..\src/interruptions.c ****     }
 354:..\src/interruptions.c ****     
 355:..\src/interruptions.c ****      
 356:..\src/interruptions.c ****     //---------------------------------- Rest position check
 357:..\src/interruptions.c ****     
 358:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 359:..\src/interruptions.c ****     if (c_mem.rest_position_flag == TRUE){
 635              		.loc 1 359 0
 636 00f8 8A4B     		ldr	r3, .L50+16
 637 00fa 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 638 00fe 012B     		cmp	r3, #1
 639 0100 1AD1     		bne	.L42
 360:..\src/interruptions.c ****         if (counter_calibration == CALIBRATION_DIV) {
 640              		.loc 1 360 0
 641 0102 874B     		ldr	r3, .L50+12
 642 0104 1B88     		ldrh	r3, [r3]
 643 0106 0A2B     		cmp	r3, #10
 644 0108 04D1     		bne	.L43
 361:..\src/interruptions.c ****                 check_rest_position();
 645              		.loc 1 361 0
 646 010a FFF7FEFF 		bl	check_rest_position
 362:..\src/interruptions.c ****                 counter_calibration = 0;
 647              		.loc 1 362 0
 648 010e 844B     		ldr	r3, .L50+12
 649 0110 0022     		movs	r2, #0
 650 0112 1A80     		strh	r2, [r3]	@ movhi
 651              	.L43:
 363:..\src/interruptions.c ****         }
 364:..\src/interruptions.c ****         counter_calibration++;
 652              		.loc 1 364 0
 653 0114 824B     		ldr	r3, .L50+12
 654 0116 1B88     		ldrh	r3, [r3]
 655 0118 0133     		adds	r3, r3, #1
 656 011a 9AB2     		uxth	r2, r3
 657 011c 804B     		ldr	r3, .L50+12
 658 011e 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 19


 365:..\src/interruptions.c **** 
 366:..\src/interruptions.c ****         // Check Interrupt     
 367:..\src/interruptions.c ****         if (interrupt_flag){
 659              		.loc 1 367 0
 660 0120 7D4B     		ldr	r3, .L50+4
 661 0122 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 662 0124 002B     		cmp	r3, #0
 663 0126 07D0     		beq	.L42
 368:..\src/interruptions.c ****             interrupt_flag = FALSE;
 664              		.loc 1 368 0
 665 0128 7B4B     		ldr	r3, .L50+4
 666 012a 0022     		movs	r2, #0
 667 012c 1A70     		strb	r2, [r3]
 369:..\src/interruptions.c ****             interrupt_manager();
 668              		.loc 1 369 0
 669 012e FFF7FEFF 		bl	interrupt_manager
 370:..\src/interruptions.c **** 			write_cycles = TRUE;
 670              		.loc 1 370 0
 671 0132 0123     		movs	r3, #1
 672 0134 87F8C739 		strb	r3, [r7, #2503]
 673              	.L42:
 371:..\src/interruptions.c ****         }
 372:..\src/interruptions.c ****     }
 373:..\src/interruptions.c ****     
 374:..\src/interruptions.c ****     //---------------------------------- Control Cycles Counter
 375:..\src/interruptions.c **** 
 376:..\src/interruptions.c ****     cycles_counter_update();
 674              		.loc 1 376 0
 675 0138 FFF7FEFF 		bl	cycles_counter_update
 377:..\src/interruptions.c **** 
 378:..\src/interruptions.c ****     // Check Cycles Interrupt 
 379:..\src/interruptions.c ****     
 380:..\src/interruptions.c ****     if (cycles_interrupt_flag){
 676              		.loc 1 380 0
 677 013c 7A4B     		ldr	r3, .L50+20
 678 013e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 679 0140 002B     		cmp	r3, #0
 680 0142 00F0C280 		beq	.L44
 381:..\src/interruptions.c ****         cycles_interrupt_flag = FALSE;
 681              		.loc 1 381 0
 682 0146 784B     		ldr	r3, .L50+20
 683 0148 0022     		movs	r2, #0
 684 014a 1A70     		strb	r2, [r3]
 382:..\src/interruptions.c **** 
 383:..\src/interruptions.c ****         // Cycles are written only every 120 seconds (CYCLES_TIMER interrupt)
 384:..\src/interruptions.c ****         // to save EEPROM writings (1M maximum)
 385:..\src/interruptions.c ****         if(can_write) {
 685              		.loc 1 385 0
 686 014c 774B     		ldr	r3, .L50+24
 687 014e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 688 0150 002B     		cmp	r3, #0
 689 0152 00F0BA80 		beq	.L44
 386:..\src/interruptions.c ****             cycles_status = PREPARE_DATA;
 690              		.loc 1 386 0
 691 0156 764B     		ldr	r3, .L50+28
 692 0158 0022     		movs	r2, #0
 693 015a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 20


 387:..\src/interruptions.c ****             
 388:..\src/interruptions.c ****             //Update time variable
 389:..\src/interruptions.c ****             g_mem.total_time_on = g_mem.total_time_on + 120;  // Add 120 seconds.
 694              		.loc 1 389 0
 695 015c 754B     		ldr	r3, .L50+32
 696 015e D3F80831 		ldr	r3, [r3, #264]
 697 0162 7833     		adds	r3, r3, #120
 698 0164 734A     		ldr	r2, .L50+32
 699 0166 C2F80831 		str	r3, [r2, #264]
 390:..\src/interruptions.c ****             
 391:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_DATE_RD);
 700              		.loc 1 391 0
 701 016a 8720     		movs	r0, #135
 702 016c FFF7FEFF 		bl	DS1302_read
 703 0170 0346     		mov	r3, r0
 704 0172 87F8C639 		strb	r3, [r7, #2502]
 392:..\src/interruptions.c ****             g_mem.curr_time[0] = (rtc_data/16) * 10 + rtc_data%16;
 705              		.loc 1 392 0
 706 0176 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 707 017a 1B09     		lsrs	r3, r3, #4
 708 017c DBB2     		uxtb	r3, r3
 709 017e 1A46     		mov	r2, r3
 710 0180 9200     		lsls	r2, r2, #2
 711 0182 1344     		add	r3, r3, r2
 712 0184 5B00     		lsls	r3, r3, #1
 713 0186 DAB2     		uxtb	r2, r3
 714 0188 97F8C639 		ldrb	r3, [r7, #2502]
 715 018c 03F00F03 		and	r3, r3, #15
 716 0190 DBB2     		uxtb	r3, r3
 717 0192 1344     		add	r3, r3, r2
 718 0194 DAB2     		uxtb	r2, r3
 719 0196 674B     		ldr	r3, .L50+32
 720 0198 83F81021 		strb	r2, [r3, #272]
 393:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_MONTH_RD);
 721              		.loc 1 393 0
 722 019c 8920     		movs	r0, #137
 723 019e FFF7FEFF 		bl	DS1302_read
 724 01a2 0346     		mov	r3, r0
 725 01a4 87F8C639 		strb	r3, [r7, #2502]
 394:..\src/interruptions.c ****             g_mem.curr_time[1] = (rtc_data/16) * 10 + rtc_data%16;
 726              		.loc 1 394 0
 727 01a8 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 728 01ac 1B09     		lsrs	r3, r3, #4
 729 01ae DBB2     		uxtb	r3, r3
 730 01b0 1A46     		mov	r2, r3
 731 01b2 9200     		lsls	r2, r2, #2
 732 01b4 1344     		add	r3, r3, r2
 733 01b6 5B00     		lsls	r3, r3, #1
 734 01b8 DAB2     		uxtb	r2, r3
 735 01ba 97F8C639 		ldrb	r3, [r7, #2502]
 736 01be 03F00F03 		and	r3, r3, #15
 737 01c2 DBB2     		uxtb	r3, r3
 738 01c4 1344     		add	r3, r3, r2
 739 01c6 DAB2     		uxtb	r2, r3
 740 01c8 5A4B     		ldr	r3, .L50+32
 741 01ca 83F81121 		strb	r2, [r3, #273]
 395:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_YEAR_RD);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 21


 742              		.loc 1 395 0
 743 01ce 8D20     		movs	r0, #141
 744 01d0 FFF7FEFF 		bl	DS1302_read
 745 01d4 0346     		mov	r3, r0
 746 01d6 87F8C639 		strb	r3, [r7, #2502]
 396:..\src/interruptions.c ****             g_mem.curr_time[2] = (rtc_data/16) * 10 + rtc_data%16;
 747              		.loc 1 396 0
 748 01da 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 749 01de 1B09     		lsrs	r3, r3, #4
 750 01e0 DBB2     		uxtb	r3, r3
 751 01e2 1A46     		mov	r2, r3
 752 01e4 9200     		lsls	r2, r2, #2
 753 01e6 1344     		add	r3, r3, r2
 754 01e8 5B00     		lsls	r3, r3, #1
 755 01ea DAB2     		uxtb	r2, r3
 756 01ec 97F8C639 		ldrb	r3, [r7, #2502]
 757 01f0 03F00F03 		and	r3, r3, #15
 758 01f4 DBB2     		uxtb	r3, r3
 759 01f6 1344     		add	r3, r3, r2
 760 01f8 DAB2     		uxtb	r2, r3
 761 01fa 4E4B     		ldr	r3, .L50+32
 762 01fc 83F81221 		strb	r2, [r3, #274]
 397:..\src/interruptions.c **** 
 398:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_HOUR_RD);
 763              		.loc 1 398 0
 764 0200 8520     		movs	r0, #133
 765 0202 FFF7FEFF 		bl	DS1302_read
 766 0206 0346     		mov	r3, r0
 767 0208 87F8C639 		strb	r3, [r7, #2502]
 399:..\src/interruptions.c ****             g_mem.curr_time[3] = (rtc_data/16) * 10 + rtc_data%16;
 768              		.loc 1 399 0
 769 020c 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 770 0210 1B09     		lsrs	r3, r3, #4
 771 0212 DBB2     		uxtb	r3, r3
 772 0214 1A46     		mov	r2, r3
 773 0216 9200     		lsls	r2, r2, #2
 774 0218 1344     		add	r3, r3, r2
 775 021a 5B00     		lsls	r3, r3, #1
 776 021c DAB2     		uxtb	r2, r3
 777 021e 97F8C639 		ldrb	r3, [r7, #2502]
 778 0222 03F00F03 		and	r3, r3, #15
 779 0226 DBB2     		uxtb	r3, r3
 780 0228 1344     		add	r3, r3, r2
 781 022a DAB2     		uxtb	r2, r3
 782 022c 414B     		ldr	r3, .L50+32
 783 022e 83F81321 		strb	r2, [r3, #275]
 400:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_MINUTES_RD);
 784              		.loc 1 400 0
 785 0232 8320     		movs	r0, #131
 786 0234 FFF7FEFF 		bl	DS1302_read
 787 0238 0346     		mov	r3, r0
 788 023a 87F8C639 		strb	r3, [r7, #2502]
 401:..\src/interruptions.c ****             g_mem.curr_time[4] = (rtc_data/16) * 10 + rtc_data%16;
 789              		.loc 1 401 0
 790 023e 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 791 0242 1B09     		lsrs	r3, r3, #4
 792 0244 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 22


 793 0246 1A46     		mov	r2, r3
 794 0248 9200     		lsls	r2, r2, #2
 795 024a 1344     		add	r3, r3, r2
 796 024c 5B00     		lsls	r3, r3, #1
 797 024e DAB2     		uxtb	r2, r3
 798 0250 97F8C639 		ldrb	r3, [r7, #2502]
 799 0254 03F00F03 		and	r3, r3, #15
 800 0258 DBB2     		uxtb	r3, r3
 801 025a 1344     		add	r3, r3, r2
 802 025c DAB2     		uxtb	r2, r3
 803 025e 354B     		ldr	r3, .L50+32
 804 0260 83F81421 		strb	r2, [r3, #276]
 402:..\src/interruptions.c ****             rtc_data = DS1302_read(DS1302_SECONDS_RD);
 805              		.loc 1 402 0
 806 0264 8120     		movs	r0, #129
 807 0266 FFF7FEFF 		bl	DS1302_read
 808 026a 0346     		mov	r3, r0
 809 026c 87F8C639 		strb	r3, [r7, #2502]
 403:..\src/interruptions.c ****             g_mem.curr_time[5] = (rtc_data/16) * 10 + rtc_data%16;
 810              		.loc 1 403 0
 811 0270 97F8C639 		ldrb	r3, [r7, #2502]	@ zero_extendqisi2
 812 0274 1B09     		lsrs	r3, r3, #4
 813 0276 DBB2     		uxtb	r3, r3
 814 0278 1A46     		mov	r2, r3
 815 027a 9200     		lsls	r2, r2, #2
 816 027c 1344     		add	r3, r3, r2
 817 027e 5B00     		lsls	r3, r3, #1
 818 0280 DAB2     		uxtb	r2, r3
 819 0282 97F8C639 		ldrb	r3, [r7, #2502]
 820 0286 03F00F03 		and	r3, r3, #15
 821 028a DBB2     		uxtb	r3, r3
 822 028c 1344     		add	r3, r3, r2
 823 028e DAB2     		uxtb	r2, r3
 824 0290 284B     		ldr	r3, .L50+32
 825 0292 83F81521 		strb	r2, [r3, #277]
 404:..\src/interruptions.c ****             
 405:..\src/interruptions.c ****             //Write in SD card
 406:..\src/interruptions.c ****             prepare_counter_info(info_);
 826              		.loc 1 406 0
 827 0296 3B46     		mov	r3, r7
 828 0298 1846     		mov	r0, r3
 829 029a FFF7FEFF 		bl	prepare_counter_info
 407:..\src/interruptions.c ****             write_bytes = FS_Write(pFile, info_, strlen(info_));
 830              		.loc 1 407 0
 831 029e 264B     		ldr	r3, .L50+36
 832 02a0 1C68     		ldr	r4, [r3]
 833 02a2 3B46     		mov	r3, r7
 834 02a4 1846     		mov	r0, r3
 835 02a6 FFF7FEFF 		bl	strlen
 836 02aa 0246     		mov	r2, r0
 837 02ac 3B46     		mov	r3, r7
 838 02ae 1946     		mov	r1, r3
 839 02b0 2046     		mov	r0, r4
 840 02b2 FFF7FEFF 		bl	FS_Write
 841 02b6 0246     		mov	r2, r0
 842 02b8 204B     		ldr	r3, .L50+40
 843 02ba 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 23


 408:..\src/interruptions.c ****             if (write_bytes == 0) {
 844              		.loc 1 408 0
 845 02bc 1F4B     		ldr	r3, .L50+40
 846 02be 1B68     		ldr	r3, [r3]
 847 02c0 002B     		cmp	r3, #0
 848 02c2 02D1     		bne	.L44
 409:..\src/interruptions.c ****                 g_refNew.onoff = 0x00;
 849              		.loc 1 409 0
 850 02c4 1E4B     		ldr	r3, .L50+44
 851 02c6 0022     		movs	r2, #0
 852 02c8 1A73     		strb	r2, [r3, #12]
 853              	.L44:
 410:..\src/interruptions.c ****             }
 411:..\src/interruptions.c ****         }
 412:..\src/interruptions.c ****     }
 413:..\src/interruptions.c ****     
 414:..\src/interruptions.c ****     // Check Interrupt 
 415:..\src/interruptions.c ****     
 416:..\src/interruptions.c ****     if (interrupt_flag){
 854              		.loc 1 416 0
 855 02ca 134B     		ldr	r3, .L50+4
 856 02cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 857 02ce 002B     		cmp	r3, #0
 858 02d0 04D0     		beq	.L45
 417:..\src/interruptions.c ****         interrupt_flag = FALSE;
 859              		.loc 1 417 0
 860 02d2 114B     		ldr	r3, .L50+4
 861 02d4 0022     		movs	r2, #0
 862 02d6 1A70     		strb	r2, [r3]
 418:..\src/interruptions.c ****         interrupt_manager();
 863              		.loc 1 418 0
 864 02d8 FFF7FEFF 		bl	interrupt_manager
 865              	.L45:
 419:..\src/interruptions.c ****     }
 420:..\src/interruptions.c ****     
 421:..\src/interruptions.c ****     
 422:..\src/interruptions.c ****     //---------------------------------- Check battery
 423:..\src/interruptions.c **** 
 424:..\src/interruptions.c ****     // Divider 10, freq = 500 Hz
 425:..\src/interruptions.c ****     if (counter_tension_func == CALIBRATION_DIV) {
 866              		.loc 1 425 0
 867 02dc 194B     		ldr	r3, .L50+48
 868 02de 1B88     		ldrh	r3, [r3]
 869 02e0 0A2B     		cmp	r3, #10
 870 02e2 04D1     		bne	.L46
 426:..\src/interruptions.c ****         battery_management();   
 871              		.loc 1 426 0
 872 02e4 FFF7FEFF 		bl	battery_management
 427:..\src/interruptions.c ****         counter_tension_func = 0;
 873              		.loc 1 427 0
 874 02e8 164B     		ldr	r3, .L50+48
 875 02ea 0022     		movs	r2, #0
 876 02ec 1A80     		strh	r2, [r3]	@ movhi
 877              	.L46:
 428:..\src/interruptions.c ****     }
 429:..\src/interruptions.c ****     counter_tension_func++;
 878              		.loc 1 429 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 24


 879 02ee 154B     		ldr	r3, .L50+48
 880 02f0 1B88     		ldrh	r3, [r3]
 881 02f2 0133     		adds	r3, r3, #1
 882 02f4 9AB2     		uxth	r2, r3
 883 02f6 134B     		ldr	r3, .L50+48
 884 02f8 1A80     		strh	r2, [r3]	@ movhi
 430:..\src/interruptions.c **** 
 431:..\src/interruptions.c ****     // Check Interrupt 
 432:..\src/interruptions.c ****     
 433:..\src/interruptions.c ****     if (interrupt_flag){
 885              		.loc 1 433 0
 886 02fa 074B     		ldr	r3, .L50+4
 887 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 888 02fe 002B     		cmp	r3, #0
 889 0300 22D0     		beq	.L47
 434:..\src/interruptions.c ****         interrupt_flag = FALSE;
 890              		.loc 1 434 0
 891 0302 054B     		ldr	r3, .L50+4
 892 0304 0022     		movs	r2, #0
 893 0306 1A70     		strb	r2, [r3]
 435:..\src/interruptions.c ****         interrupt_manager();
 894              		.loc 1 435 0
 895 0308 FFF7FEFF 		bl	interrupt_manager
 436:..\src/interruptions.c ****         write_cycles = TRUE;
 896              		.loc 1 436 0
 897 030c 0123     		movs	r3, #1
 898 030e 87F8C739 		strb	r3, [r7, #2503]
 899 0312 19E0     		b	.L51
 900              	.L52:
 901              		.align	2
 902              	.L50:
 903 0314 00000000 		.word	timer_value0
 904 0318 00000000 		.word	interrupt_flag
 905 031c 00000000 		.word	calib
 906 0320 00000000 		.word	counter_calibration.9870
 907 0324 00000000 		.word	c_mem
 908 0328 00000000 		.word	cycles_interrupt_flag
 909 032c 00000000 		.word	can_write
 910 0330 00000000 		.word	cycles_status
 911 0334 00000000 		.word	g_mem
 912 0338 00000000 		.word	pFile
 913 033c 00000000 		.word	write_bytes
 914 0340 00000000 		.word	g_refNew
 915 0344 02000000 		.word	counter_tension_func.9871
 916              	.L51:
 917              	.L47:
 437:..\src/interruptions.c ****     }
 438:..\src/interruptions.c ****    
 439:..\src/interruptions.c ****     //---------------------------------- Read IMUs
 440:..\src/interruptions.c ****     ReadAllIMUs();      // IMU reading is atomic, no RS485 request is handled
 918              		.loc 1 440 0
 919 0348 FFF7FEFF 		bl	ReadAllIMUs
 441:..\src/interruptions.c ****         
 442:..\src/interruptions.c ****     if (interrupt_flag){
 920              		.loc 1 442 0
 921 034c 2E4B     		ldr	r3, .L53+8
 922 034e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 25


 923 0350 002B     		cmp	r3, #0
 924 0352 04D0     		beq	.L48
 443:..\src/interruptions.c ****         interrupt_flag = FALSE;
 925              		.loc 1 443 0
 926 0354 2C4B     		ldr	r3, .L53+8
 927 0356 0022     		movs	r2, #0
 928 0358 1A70     		strb	r2, [r3]
 444:..\src/interruptions.c ****         interrupt_manager();
 929              		.loc 1 444 0
 930 035a FFF7FEFF 		bl	interrupt_manager
 931              	.L48:
 445:..\src/interruptions.c ****     }
 446:..\src/interruptions.c ****     //---------------------------------- Update States
 447:..\src/interruptions.c ****     
 448:..\src/interruptions.c ****     // Load k-1 state
 449:..\src/interruptions.c ****     memcpy( &g_measOld, &g_meas, sizeof(g_meas) );
 932              		.loc 1 449 0
 933 035e 2B4A     		ldr	r2, .L53+12
 934 0360 2B4B     		ldr	r3, .L53+16
 935 0362 1446     		mov	r4, r2
 936 0364 1D46     		mov	r5, r3
 937 0366 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 938 0368 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 939 036a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 940 036c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 941 036e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 942 0370 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 943 0372 95E80300 		ldmia	r5, {r0, r1}
 944 0376 84E80300 		stmia	r4, {r0, r1}
 450:..\src/interruptions.c ****     memcpy( &g_refOld, &g_ref, sizeof(g_ref) );
 945              		.loc 1 450 0
 946 037a 264A     		ldr	r2, .L53+20
 947 037c 264B     		ldr	r3, .L53+24
 948 037e 1446     		mov	r4, r2
 949 0380 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 950 0382 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 451:..\src/interruptions.c **** 
 452:..\src/interruptions.c ****     // Load k+1 state
 453:..\src/interruptions.c ****     memcpy( &g_ref, &g_refNew, sizeof(g_ref) );
 951              		.loc 1 453 0
 952 0386 244A     		ldr	r2, .L53+24
 953 0388 244B     		ldr	r3, .L53+28
 954 038a 1446     		mov	r4, r2
 955 038c 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 956 038e 84E80F00 		stmia	r4, {r0, r1, r2, r3}
 454:..\src/interruptions.c ****     memcpy( &g_imu, &g_imuNew, sizeof(g_imu) );
 957              		.loc 1 454 0
 958 0392 234A     		ldr	r2, .L53+32
 959 0394 234B     		ldr	r3, .L53+36
 960 0396 1046     		mov	r0, r2
 961 0398 1946     		mov	r1, r3
 962 039a 7823     		movs	r3, #120
 963 039c 1A46     		mov	r2, r3
 964 039e FFF7FEFF 		bl	memcpy
 455:..\src/interruptions.c ****                 
 456:..\src/interruptions.c ****     if (interrupt_flag){
 965              		.loc 1 456 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 26


 966 03a2 194B     		ldr	r3, .L53+8
 967 03a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 968 03a6 002B     		cmp	r3, #0
 969 03a8 07D0     		beq	.L49
 457:..\src/interruptions.c ****         interrupt_flag = FALSE;
 970              		.loc 1 457 0
 971 03aa 174B     		ldr	r3, .L53+8
 972 03ac 0022     		movs	r2, #0
 973 03ae 1A70     		strb	r2, [r3]
 458:..\src/interruptions.c ****         interrupt_manager();
 974              		.loc 1 458 0
 975 03b0 FFF7FEFF 		bl	interrupt_manager
 459:..\src/interruptions.c ****         write_cycles = TRUE;
 976              		.loc 1 459 0
 977 03b4 0123     		movs	r3, #1
 978 03b6 87F8C739 		strb	r3, [r7, #2503]
 979              	.L49:
 460:..\src/interruptions.c ****     }
 461:..\src/interruptions.c **** 
 462:..\src/interruptions.c ****     timer_value = (uint32)MY_TIMER_ReadCounter();
 980              		.loc 1 462 0
 981 03ba FFF7FEFF 		bl	MY_TIMER_ReadCounter
 982 03be 0246     		mov	r2, r0
 983 03c0 194B     		ldr	r3, .L53+40
 984 03c2 1A60     		str	r2, [r3]
 463:..\src/interruptions.c ****     cycle_time = (float)((timer_value0 - timer_value)/1000000.0);
 985              		.loc 1 463 0
 986 03c4 194B     		ldr	r3, .L53+44
 987 03c6 1A68     		ldr	r2, [r3]
 988 03c8 174B     		ldr	r3, .L53+40
 989 03ca 1B68     		ldr	r3, [r3]
 990 03cc D31A     		subs	r3, r2, r3
 991 03ce 1846     		mov	r0, r3
 992 03d0 FFF7FEFF 		bl	__aeabi_ui2d
 993 03d4 0AA3     		adr	r3, .L53
 994 03d6 D3E90023 		ldrd	r2, [r3]
 995 03da FFF7FEFF 		bl	__aeabi_ddiv
 996 03de 0346     		mov	r3, r0
 997 03e0 0C46     		mov	r4, r1
 998 03e2 1846     		mov	r0, r3
 999 03e4 2146     		mov	r1, r4
 1000 03e6 FFF7FEFF 		bl	__aeabi_d2f
 1001 03ea 0246     		mov	r2, r0
 1002 03ec 104B     		ldr	r3, .L53+48
 1003 03ee 1A60     		str	r2, [r3]	@ float
 464:..\src/interruptions.c ****     MY_TIMER_WriteCounter(5000000);
 1004              		.loc 1 464 0
 1005 03f0 1048     		ldr	r0, .L53+52
 1006 03f2 FFF7FEFF 		bl	MY_TIMER_WriteCounter
 465:..\src/interruptions.c **** 
 466:..\src/interruptions.c **** }
 1007              		.loc 1 466 0
 1008 03f6 00BF     		nop
 1009 03f8 07F6C817 		addw	r7, r7, #2504
 1010              		.cfi_def_cfa_offset 16
 1011 03fc BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 27


 1013              		@ sp needed
 1014 03fe B0BD     		pop	{r4, r5, r7, pc}
 1015              	.L54:
 1016              		.align	3
 1017              	.L53:
 1018 0400 00000000 		.word	0
 1019 0404 80842E41 		.word	1093567616
 1020 0408 00000000 		.word	interrupt_flag
 1021 040c 00000000 		.word	g_measOld
 1022 0410 00000000 		.word	g_meas
 1023 0414 00000000 		.word	g_refOld
 1024 0418 00000000 		.word	g_ref
 1025 041c 00000000 		.word	g_refNew
 1026 0420 00000000 		.word	g_imu
 1027 0424 00000000 		.word	g_imuNew
 1028 0428 00000000 		.word	timer_value
 1029 042c 00000000 		.word	timer_value0
 1030 0430 00000000 		.word	cycle_time
 1031 0434 404B4C00 		.word	5000000
 1032              		.cfi_endproc
 1033              	.LFE67:
 1034              		.size	function_scheduler, .-function_scheduler
 1035              		.section	.text.motor_control,"ax",%progbits
 1036              		.align	2
 1037              		.global	motor_control
 1038              		.thumb
 1039              		.thumb_func
 1040              		.type	motor_control, %function
 1041              	motor_control:
 1042              	.LFB68:
 467:..\src/interruptions.c **** 
 468:..\src/interruptions.c **** //==============================================================================
 469:..\src/interruptions.c **** //                                                                 MOTOR CONTROL
 470:..\src/interruptions.c **** //==============================================================================
 471:..\src/interruptions.c **** 
 472:..\src/interruptions.c **** void motor_control() {
 1043              		.loc 1 472 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 80
 1046              		@ frame_needed = 1, uses_anonymous_args = 0
 1047 0000 80B5     		push	{r7, lr}
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 7, -8
 1050              		.cfi_offset 14, -4
 1051 0002 94B0     		sub	sp, sp, #80
 1052              		.cfi_def_cfa_offset 88
 1053 0004 00AF     		add	r7, sp, #0
 1054              		.cfi_def_cfa_register 7
 473:..\src/interruptions.c **** 
 474:..\src/interruptions.c ****     int32 CYDATA pwm_input = 0;
 1055              		.loc 1 474 0
 1056 0006 0023     		movs	r3, #0
 1057 0008 FB64     		str	r3, [r7, #76]
 475:..\src/interruptions.c **** 
 476:..\src/interruptions.c ****     int32 CYDATA pos_error;         // position error
 477:..\src/interruptions.c ****     int32 CYDATA curr_error;        // current error
 478:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 28


 479:..\src/interruptions.c ****     int32 CYDATA i_ref;             // current reference
 480:..\src/interruptions.c ****     int32 CYDATA handle_value;
 481:..\src/interruptions.c **** 
 482:..\src/interruptions.c ****     int32 CYDATA err_emg_1, err_emg_2;
 483:..\src/interruptions.c **** 
 484:..\src/interruptions.c ****     int32 CYDATA k_p = c_mem.k_p;  
 1058              		.loc 1 484 0
 1059 000a 9E4B     		ldr	r3, .L155
 1060 000c 5B68     		ldr	r3, [r3, #4]
 1061 000e 3B64     		str	r3, [r7, #64]
 485:..\src/interruptions.c ****     int32 CYDATA k_i = c_mem.k_i; 
 1062              		.loc 1 485 0
 1063 0010 9C4B     		ldr	r3, .L155
 1064 0012 9B68     		ldr	r3, [r3, #8]
 1065 0014 FB63     		str	r3, [r7, #60]
 486:..\src/interruptions.c ****     int32 CYDATA k_d = c_mem.k_d; 
 1066              		.loc 1 486 0
 1067 0016 9B4B     		ldr	r3, .L155
 1068 0018 DB68     		ldr	r3, [r3, #12]
 1069 001a BB63     		str	r3, [r7, #56]
 487:..\src/interruptions.c **** 
 488:..\src/interruptions.c ****     int32 CYDATA k_p_c = c_mem.k_p_c;  
 1070              		.loc 1 488 0
 1071 001c 994B     		ldr	r3, .L155
 1072 001e 1B69     		ldr	r3, [r3, #16]
 1073 0020 7B63     		str	r3, [r7, #52]
 489:..\src/interruptions.c ****     int32 CYDATA k_i_c = c_mem.k_i_c; 
 1074              		.loc 1 489 0
 1075 0022 984B     		ldr	r3, .L155
 1076 0024 5B69     		ldr	r3, [r3, #20]
 1077 0026 3B63     		str	r3, [r7, #48]
 490:..\src/interruptions.c ****     int32 CYDATA k_d_c = c_mem.k_d_c;   
 1078              		.loc 1 490 0
 1079 0028 964B     		ldr	r3, .L155
 1080 002a 9B69     		ldr	r3, [r3, #24]
 1081 002c FB62     		str	r3, [r7, #44]
 491:..\src/interruptions.c **** 
 492:..\src/interruptions.c ****     int32 CYDATA k_p_dl = c_mem.k_p_dl;  
 1082              		.loc 1 492 0
 1083 002e 954B     		ldr	r3, .L155
 1084 0030 DB69     		ldr	r3, [r3, #28]
 1085 0032 BB62     		str	r3, [r7, #40]
 493:..\src/interruptions.c ****     int32 CYDATA k_i_dl = c_mem.k_i_dl; 
 1086              		.loc 1 493 0
 1087 0034 934B     		ldr	r3, .L155
 1088 0036 1B6A     		ldr	r3, [r3, #32]
 1089 0038 7B62     		str	r3, [r7, #36]
 494:..\src/interruptions.c ****     int32 CYDATA k_d_dl = c_mem.k_d_dl;
 1090              		.loc 1 494 0
 1091 003a 924B     		ldr	r3, .L155
 1092 003c 5B6A     		ldr	r3, [r3, #36]
 1093 003e 3B62     		str	r3, [r7, #32]
 495:..\src/interruptions.c ****     
 496:..\src/interruptions.c ****     int32 CYDATA k_p_c_dl = c_mem.k_p_c_dl;  
 1094              		.loc 1 496 0
 1095 0040 904B     		ldr	r3, .L155
 1096 0042 9B6A     		ldr	r3, [r3, #40]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 29


 1097 0044 FB61     		str	r3, [r7, #28]
 497:..\src/interruptions.c ****     int32 CYDATA k_i_c_dl = c_mem.k_i_c_dl; 
 1098              		.loc 1 497 0
 1099 0046 8F4B     		ldr	r3, .L155
 1100 0048 DB6A     		ldr	r3, [r3, #44]
 1101 004a BB61     		str	r3, [r7, #24]
 498:..\src/interruptions.c ****     int32 CYDATA k_d_c_dl = c_mem.k_d_c_dl;   
 1102              		.loc 1 498 0
 1103 004c 8D4B     		ldr	r3, .L155
 1104 004e 1B6B     		ldr	r3, [r3, #48]
 1105 0050 7B61     		str	r3, [r7, #20]
 499:..\src/interruptions.c **** 
 500:..\src/interruptions.c ****     // Static Variables
 501:..\src/interruptions.c **** 
 502:..\src/interruptions.c ****     static int32 pos_error_sum;     // position error sum for integral
 503:..\src/interruptions.c ****     static int32 curr_error_sum;    // current error sum for integral
 504:..\src/interruptions.c ****     
 505:..\src/interruptions.c ****     static int32 prev_pos_err;      // previous position error for deriv. control
 506:..\src/interruptions.c ****     static int32 prev_curr_err;     // previous current error for deriv. control
 507:..\src/interruptions.c **** 
 508:..\src/interruptions.c ****     static CYBIT motor_dir = FALSE;
 509:..\src/interruptions.c **** 
 510:..\src/interruptions.c ****     static uint8 current_emg = 0;   // 0 NONE
 511:..\src/interruptions.c ****                                     // 1 EMG 1
 512:..\src/interruptions.c ****                                     // 2 EMG 2
 513:..\src/interruptions.c ****                                     // wait for both to get down
 514:..\src/interruptions.c **** 
 515:..\src/interruptions.c ****     err_emg_1 = g_meas.emg[0] - c_mem.emg_threshold[0];
 1106              		.loc 1 515 0
 1107 0052 8D4B     		ldr	r3, .L155+4
 1108 0054 9B69     		ldr	r3, [r3, #24]
 1109 0056 8B4A     		ldr	r2, .L155
 1110 0058 B2F86A20 		ldrh	r2, [r2, #106]
 1111 005c 9B1A     		subs	r3, r3, r2
 1112 005e 3B61     		str	r3, [r7, #16]
 516:..\src/interruptions.c ****     err_emg_2 = g_meas.emg[1] - c_mem.emg_threshold[1];
 1113              		.loc 1 516 0
 1114 0060 894B     		ldr	r3, .L155+4
 1115 0062 DB69     		ldr	r3, [r3, #28]
 1116 0064 874A     		ldr	r2, .L155
 1117 0066 B2F86C20 		ldrh	r2, [r2, #108]
 1118 006a 9B1A     		subs	r3, r3, r2
 1119 006c FB60     		str	r3, [r7, #12]
 517:..\src/interruptions.c **** 
 518:..\src/interruptions.c ****     // =========================== POSITION INPUT ==============================
 519:..\src/interruptions.c ****     switch(c_mem.input_mode) {
 1120              		.loc 1 519 0
 1121 006e 854B     		ldr	r3, .L155
 1122 0070 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 1123 0074 013B     		subs	r3, r3, #1
 1124 0076 042B     		cmp	r3, #4
 1125 0078 00F26081 		bhi	.L147
 1126 007c 01A2     		adr	r2, .L58
 1127 007e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1128 0082 00BF     		.p2align 2
 1129              	.L58:
 1130 0084 99000000 		.word	.L57+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 30


 1131 0088 1F010000 		.word	.L59+1
 1132 008c 4B010000 		.word	.L60+1
 1133 0090 B3010000 		.word	.L61+1
 1134 0094 5D020000 		.word	.L62+1
 1135              		.p2align 1
 1136              	.L57:
 520:..\src/interruptions.c **** 
 521:..\src/interruptions.c ****         case INPUT_MODE_ENCODER3:
 522:..\src/interruptions.c **** 
 523:..\src/interruptions.c ****             // Calculate handle value based on position of handle in the
 524:..\src/interruptions.c ****             // sensor chain and multiplication factor between handle and motor position
 525:..\src/interruptions.c ****             if (c_mem.double_encoder_on_off) 
 1137              		.loc 1 525 0
 1138 0098 7A4B     		ldr	r3, .L155
 1139 009a 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
 1140 009e 002B     		cmp	r3, #0
 1141 00a0 08D0     		beq	.L63
 526:..\src/interruptions.c ****                 handle_value = g_meas.pos[2] * c_mem.motor_handle_ratio;
 1142              		.loc 1 526 0
 1143 00a2 794B     		ldr	r3, .L155+4
 1144 00a4 9B68     		ldr	r3, [r3, #8]
 1145 00a6 774A     		ldr	r2, .L155
 1146 00a8 92F97A20 		ldrsb	r2, [r2, #122]
 1147 00ac 02FB03F3 		mul	r3, r2, r3
 1148 00b0 7B64     		str	r3, [r7, #68]
 1149 00b2 07E0     		b	.L64
 1150              	.L63:
 527:..\src/interruptions.c ****             else
 528:..\src/interruptions.c ****                 handle_value = g_meas.pos[1] * c_mem.motor_handle_ratio;
 1151              		.loc 1 528 0
 1152 00b4 744B     		ldr	r3, .L155+4
 1153 00b6 5B68     		ldr	r3, [r3, #4]
 1154 00b8 724A     		ldr	r2, .L155
 1155 00ba 92F97A20 		ldrsb	r2, [r2, #122]
 1156 00be 02FB03F3 		mul	r3, r2, r3
 1157 00c2 7B64     		str	r3, [r7, #68]
 1158              	.L64:
 529:..\src/interruptions.c ****             
 530:..\src/interruptions.c **** 
 531:..\src/interruptions.c ****             // Read handle and use it as reference for the motor
 532:..\src/interruptions.c ****             if (((handle_value - g_refOld.pos) > c_mem.max_step_pos) && (c_mem.max_step_pos != 0))
 1159              		.loc 1 532 0
 1160 00c4 714B     		ldr	r3, .L155+8
 1161 00c6 1B68     		ldr	r3, [r3]
 1162 00c8 7A6C     		ldr	r2, [r7, #68]
 1163 00ca D21A     		subs	r2, r2, r3
 1164 00cc 6D4B     		ldr	r3, .L155
 1165 00ce 5B6E     		ldr	r3, [r3, #100]
 1166 00d0 9A42     		cmp	r2, r3
 1167 00d2 0BDD     		ble	.L65
 1168              		.loc 1 532 0 is_stmt 0 discriminator 1
 1169 00d4 6B4B     		ldr	r3, .L155
 1170 00d6 5B6E     		ldr	r3, [r3, #100]
 1171 00d8 002B     		cmp	r3, #0
 1172 00da 07D0     		beq	.L65
 533:..\src/interruptions.c ****                 g_ref.pos += c_mem.max_step_pos;
 1173              		.loc 1 533 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 31


 1174 00dc 6C4B     		ldr	r3, .L155+12
 1175 00de 1A68     		ldr	r2, [r3]
 1176 00e0 684B     		ldr	r3, .L155
 1177 00e2 5B6E     		ldr	r3, [r3, #100]
 1178 00e4 1344     		add	r3, r3, r2
 1179 00e6 6A4A     		ldr	r2, .L155+12
 1180 00e8 1360     		str	r3, [r2]
 1181 00ea 17E0     		b	.L66
 1182              	.L65:
 534:..\src/interruptions.c ****             else {
 535:..\src/interruptions.c ****                 if (((handle_value - g_refOld.pos) < c_mem.max_step_neg) && (c_mem.max_step_neg != 
 1183              		.loc 1 535 0
 1184 00ec 674B     		ldr	r3, .L155+8
 1185 00ee 1B68     		ldr	r3, [r3]
 1186 00f0 7A6C     		ldr	r2, [r7, #68]
 1187 00f2 D21A     		subs	r2, r2, r3
 1188 00f4 634B     		ldr	r3, .L155
 1189 00f6 1B6E     		ldr	r3, [r3, #96]
 1190 00f8 9A42     		cmp	r2, r3
 1191 00fa 0BDA     		bge	.L67
 1192              		.loc 1 535 0 is_stmt 0 discriminator 1
 1193 00fc 614B     		ldr	r3, .L155
 1194 00fe 1B6E     		ldr	r3, [r3, #96]
 1195 0100 002B     		cmp	r3, #0
 1196 0102 07D0     		beq	.L67
 536:..\src/interruptions.c ****                     g_ref.pos += c_mem.max_step_neg;
 1197              		.loc 1 536 0 is_stmt 1
 1198 0104 624B     		ldr	r3, .L155+12
 1199 0106 1A68     		ldr	r2, [r3]
 1200 0108 5E4B     		ldr	r3, .L155
 1201 010a 1B6E     		ldr	r3, [r3, #96]
 1202 010c 1344     		add	r3, r3, r2
 1203 010e 604A     		ldr	r2, .L155+12
 1204 0110 1360     		str	r3, [r2]
 1205 0112 03E0     		b	.L66
 1206              	.L67:
 537:..\src/interruptions.c ****                 else
 538:..\src/interruptions.c ****                     g_ref.pos = handle_value;
 1207              		.loc 1 538 0
 1208 0114 5E4A     		ldr	r2, .L155+12
 1209 0116 7B6C     		ldr	r3, [r7, #68]
 1210 0118 1360     		str	r3, [r2]
 539:..\src/interruptions.c ****             }
 540:..\src/interruptions.c ****             break;
 1211              		.loc 1 540 0
 1212 011a 12E1     		b	.L68
 1213              	.L66:
 1214 011c 11E1     		b	.L68
 1215              	.L59:
 541:..\src/interruptions.c **** 
 542:..\src/interruptions.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
 543:..\src/interruptions.c ****             if (err_emg_1 > 0)
 1216              		.loc 1 543 0
 1217 011e 3B69     		ldr	r3, [r7, #16]
 1218 0120 002B     		cmp	r3, #0
 1219 0122 0EDD     		ble	.L69
 544:..\src/interruptions.c ****                 g_ref.pos = (err_emg_1 * g_mem.pos_lim_sup) / (1024 - c_mem.emg_threshold[0]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 32


 1220              		.loc 1 544 0
 1221 0124 5B4B     		ldr	r3, .L155+16
 1222 0126 DB6D     		ldr	r3, [r3, #92]
 1223 0128 3A69     		ldr	r2, [r7, #16]
 1224 012a 02FB03F2 		mul	r2, r2, r3
 1225 012e 554B     		ldr	r3, .L155
 1226 0130 B3F86A30 		ldrh	r3, [r3, #106]
 1227 0134 C3F58063 		rsb	r3, r3, #1024
 1228 0138 92FBF3F3 		sdiv	r3, r2, r3
 1229 013c 544A     		ldr	r2, .L155+12
 1230 013e 1360     		str	r3, [r2]
 545:..\src/interruptions.c ****             else
 546:..\src/interruptions.c ****                 g_ref.pos = 0;
 547:..\src/interruptions.c ****             break;
 1231              		.loc 1 547 0
 1232 0140 FFE0     		b	.L68
 1233              	.L69:
 546:..\src/interruptions.c ****             break;
 1234              		.loc 1 546 0
 1235 0142 534B     		ldr	r3, .L155+12
 1236 0144 0022     		movs	r2, #0
 1237 0146 1A60     		str	r2, [r3]
 1238              		.loc 1 547 0
 1239 0148 FBE0     		b	.L68
 1240              	.L60:
 548:..\src/interruptions.c **** 
 549:..\src/interruptions.c ****         case INPUT_MODE_EMG_INTEGRAL:
 550:..\src/interruptions.c ****             g_ref.pos = g_refOld.pos;
 1241              		.loc 1 550 0
 1242 014a 504B     		ldr	r3, .L155+8
 1243 014c 1B68     		ldr	r3, [r3]
 1244 014e 504A     		ldr	r2, .L155+12
 1245 0150 1360     		str	r3, [r2]
 551:..\src/interruptions.c ****             if (err_emg_1 > 0) {
 1246              		.loc 1 551 0
 1247 0152 3B69     		ldr	r3, [r7, #16]
 1248 0154 002B     		cmp	r3, #0
 1249 0156 13DD     		ble	.L71
 552:..\src/interruptions.c ****                 g_ref.pos = g_refOld.pos + (err_emg_1 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.e
 1250              		.loc 1 552 0
 1251 0158 4C4B     		ldr	r3, .L155+8
 1252 015a 1A68     		ldr	r2, [r3]
 1253 015c 4D4B     		ldr	r3, .L155+16
 1254 015e 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1255 0162 1946     		mov	r1, r3
 1256 0164 3B69     		ldr	r3, [r7, #16]
 1257 0166 03FB01F3 		mul	r3, r3, r1
 1258 016a 5900     		lsls	r1, r3, #1
 1259 016c 454B     		ldr	r3, .L155
 1260 016e B3F86A30 		ldrh	r3, [r3, #106]
 1261 0172 C3F58063 		rsb	r3, r3, #1024
 1262 0176 91FBF3F3 		sdiv	r3, r1, r3
 1263 017a 1344     		add	r3, r3, r2
 1264 017c 444A     		ldr	r2, .L155+12
 1265 017e 1360     		str	r3, [r2]
 1266              	.L71:
 553:..\src/interruptions.c ****             }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 33


 554:..\src/interruptions.c ****             if (err_emg_2 > 0) {
 1267              		.loc 1 554 0
 1268 0180 FB68     		ldr	r3, [r7, #12]
 1269 0182 002B     		cmp	r3, #0
 1270 0184 40F3DC80 		ble	.L148
 555:..\src/interruptions.c ****                 g_ref.pos = g_refOld.pos - (err_emg_2 * (int)g_mem.emg_speed * 2) / (1024 - c_mem.e
 1271              		.loc 1 555 0
 1272 0188 404B     		ldr	r3, .L155+8
 1273 018a 1A68     		ldr	r2, [r3]
 1274 018c 414B     		ldr	r3, .L155+16
 1275 018e 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1276 0192 1946     		mov	r1, r3
 1277 0194 FB68     		ldr	r3, [r7, #12]
 1278 0196 03FB01F3 		mul	r3, r3, r1
 1279 019a 5900     		lsls	r1, r3, #1
 1280 019c 394B     		ldr	r3, .L155
 1281 019e B3F86C30 		ldrh	r3, [r3, #108]
 1282 01a2 C3F58063 		rsb	r3, r3, #1024
 1283 01a6 91FBF3F3 		sdiv	r3, r1, r3
 1284 01aa D31A     		subs	r3, r2, r3
 1285 01ac 384A     		ldr	r2, .L155+12
 1286 01ae 1360     		str	r3, [r2]
 556:..\src/interruptions.c ****             }
 557:..\src/interruptions.c ****             break;
 1287              		.loc 1 557 0
 1288 01b0 C6E0     		b	.L148
 1289              	.L61:
 558:..\src/interruptions.c **** 
 559:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS:
 560:..\src/interruptions.c ****             g_ref.pos = g_refOld.pos;
 1290              		.loc 1 560 0
 1291 01b2 364B     		ldr	r3, .L155+8
 1292 01b4 1B68     		ldr	r3, [r3]
 1293 01b6 364A     		ldr	r2, .L155+12
 1294 01b8 1360     		str	r3, [r2]
 561:..\src/interruptions.c ****             switch (current_emg) {
 1295              		.loc 1 561 0
 1296 01ba 374B     		ldr	r3, .L155+20
 1297 01bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1298 01be 012B     		cmp	r3, #1
 1299 01c0 12D0     		beq	.L74
 1300 01c2 022B     		cmp	r3, #2
 1301 01c4 2CD0     		beq	.L75
 1302 01c6 002B     		cmp	r3, #0
 1303 01c8 00D0     		beq	.L76
 562:..\src/interruptions.c ****                 case 0:
 563:..\src/interruptions.c ****                     // Look for the first EMG passing the threshold
 564:..\src/interruptions.c ****                     if (err_emg_1 > 0) {
 565:..\src/interruptions.c ****                         current_emg = 1;
 566:..\src/interruptions.c ****                         break;
 567:..\src/interruptions.c ****                     }
 568:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 569:..\src/interruptions.c ****                         current_emg = 2;
 570:..\src/interruptions.c ****                         break;
 571:..\src/interruptions.c ****                     }
 572:..\src/interruptions.c ****                     break;
 573:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 34


 574:..\src/interruptions.c ****                 case 1:
 575:..\src/interruptions.c ****                     // EMG 1 is first
 576:..\src/interruptions.c ****                     if (err_emg_1 < 0) {
 577:..\src/interruptions.c ****                         current_emg = 0;
 578:..\src/interruptions.c ****                         break;
 579:..\src/interruptions.c ****                     }
 580:..\src/interruptions.c ****                     g_ref.pos = g_refOld.pos + (err_emg_1 * g_mem.emg_speed * 2) / (1024 - c_mem.em
 581:..\src/interruptions.c ****                     break;
 582:..\src/interruptions.c **** 
 583:..\src/interruptions.c ****                 case 2:
 584:..\src/interruptions.c ****                     // EMG 2 is first
 585:..\src/interruptions.c ****                     if (err_emg_2 < 0) {
 586:..\src/interruptions.c ****                         current_emg = 0;
 587:..\src/interruptions.c ****                         break;
 588:..\src/interruptions.c ****                     }
 589:..\src/interruptions.c ****                     g_ref.pos = g_refOld.pos - (err_emg_2 * g_mem.emg_speed * 2) / (1024 - c_mem.em
 590:..\src/interruptions.c ****                     break;
 591:..\src/interruptions.c **** 
 592:..\src/interruptions.c ****                 default:
 593:..\src/interruptions.c ****                     break;
 1304              		.loc 1 593 0
 1305 01ca 46E0     		b	.L78
 1306              	.L76:
 564:..\src/interruptions.c ****                         current_emg = 1;
 1307              		.loc 1 564 0
 1308 01cc 3B69     		ldr	r3, [r7, #16]
 1309 01ce 002B     		cmp	r3, #0
 1310 01d0 03DD     		ble	.L77
 565:..\src/interruptions.c ****                         break;
 1311              		.loc 1 565 0
 1312 01d2 314B     		ldr	r3, .L155+20
 1313 01d4 0122     		movs	r2, #1
 1314 01d6 1A70     		strb	r2, [r3]
 566:..\src/interruptions.c ****                     }
 1315              		.loc 1 566 0
 1316 01d8 3FE0     		b	.L78
 1317              	.L77:
 568:..\src/interruptions.c ****                         current_emg = 2;
 1318              		.loc 1 568 0
 1319 01da FB68     		ldr	r3, [r7, #12]
 1320 01dc 002B     		cmp	r3, #0
 1321 01de 3BDD     		ble	.L149
 569:..\src/interruptions.c ****                         break;
 1322              		.loc 1 569 0
 1323 01e0 2D4B     		ldr	r3, .L155+20
 1324 01e2 0222     		movs	r2, #2
 1325 01e4 1A70     		strb	r2, [r3]
 570:..\src/interruptions.c ****                     }
 1326              		.loc 1 570 0
 1327 01e6 38E0     		b	.L78
 1328              	.L74:
 576:..\src/interruptions.c ****                         current_emg = 0;
 1329              		.loc 1 576 0
 1330 01e8 3B69     		ldr	r3, [r7, #16]
 1331 01ea 002B     		cmp	r3, #0
 1332 01ec 03DA     		bge	.L80
 577:..\src/interruptions.c ****                         break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 35


 1333              		.loc 1 577 0
 1334 01ee 2A4B     		ldr	r3, .L155+20
 1335 01f0 0022     		movs	r2, #0
 1336 01f2 1A70     		strb	r2, [r3]
 578:..\src/interruptions.c ****                     }
 1337              		.loc 1 578 0
 1338 01f4 31E0     		b	.L78
 1339              	.L80:
 580:..\src/interruptions.c ****                     break;
 1340              		.loc 1 580 0
 1341 01f6 254B     		ldr	r3, .L155+8
 1342 01f8 1A68     		ldr	r2, [r3]
 1343 01fa 264B     		ldr	r3, .L155+16
 1344 01fc 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1345 0200 1946     		mov	r1, r3
 1346 0202 3B69     		ldr	r3, [r7, #16]
 1347 0204 03FB01F3 		mul	r3, r3, r1
 1348 0208 5900     		lsls	r1, r3, #1
 1349 020a 1E4B     		ldr	r3, .L155
 1350 020c B3F86A30 		ldrh	r3, [r3, #106]
 1351 0210 C3F58063 		rsb	r3, r3, #1024
 1352 0214 91FBF3F3 		sdiv	r3, r1, r3
 1353 0218 1344     		add	r3, r3, r2
 1354 021a 1D4A     		ldr	r2, .L155+12
 1355 021c 1360     		str	r3, [r2]
 581:..\src/interruptions.c **** 
 1356              		.loc 1 581 0
 1357 021e 1CE0     		b	.L78
 1358              	.L75:
 585:..\src/interruptions.c ****                         current_emg = 0;
 1359              		.loc 1 585 0
 1360 0220 FB68     		ldr	r3, [r7, #12]
 1361 0222 002B     		cmp	r3, #0
 1362 0224 03DA     		bge	.L81
 586:..\src/interruptions.c ****                         break;
 1363              		.loc 1 586 0
 1364 0226 1C4B     		ldr	r3, .L155+20
 1365 0228 0022     		movs	r2, #0
 1366 022a 1A70     		strb	r2, [r3]
 587:..\src/interruptions.c ****                     }
 1367              		.loc 1 587 0
 1368 022c 15E0     		b	.L78
 1369              	.L81:
 589:..\src/interruptions.c ****                     break;
 1370              		.loc 1 589 0
 1371 022e 174B     		ldr	r3, .L155+8
 1372 0230 1A68     		ldr	r2, [r3]
 1373 0232 184B     		ldr	r3, .L155+16
 1374 0234 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1375 0238 1946     		mov	r1, r3
 1376 023a FB68     		ldr	r3, [r7, #12]
 1377 023c 03FB01F3 		mul	r3, r3, r1
 1378 0240 5900     		lsls	r1, r3, #1
 1379 0242 104B     		ldr	r3, .L155
 1380 0244 B3F86C30 		ldrh	r3, [r3, #108]
 1381 0248 C3F58063 		rsb	r3, r3, #1024
 1382 024c 91FBF3F3 		sdiv	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 36


 1383 0250 D31A     		subs	r3, r2, r3
 1384 0252 0F4A     		ldr	r2, .L155+12
 1385 0254 1360     		str	r3, [r2]
 590:..\src/interruptions.c **** 
 1386              		.loc 1 590 0
 1387 0256 00E0     		b	.L78
 1388              	.L149:
 572:..\src/interruptions.c **** 
 1389              		.loc 1 572 0
 1390 0258 00BF     		nop
 1391              	.L78:
 594:..\src/interruptions.c ****             }
 595:..\src/interruptions.c **** 
 596:..\src/interruptions.c ****             break;
 1392              		.loc 1 596 0 discriminator 1
 1393 025a 72E0     		b	.L68
 1394              	.L62:
 597:..\src/interruptions.c **** 
 598:..\src/interruptions.c ****         case INPUT_MODE_EMG_FCFS_ADV:
 599:..\src/interruptions.c ****             g_ref.pos = g_refOld.pos;
 1395              		.loc 1 599 0
 1396 025c 0B4B     		ldr	r3, .L155+8
 1397 025e 1B68     		ldr	r3, [r3]
 1398 0260 0B4A     		ldr	r2, .L155+12
 1399 0262 1360     		str	r3, [r2]
 600:..\src/interruptions.c ****             switch (current_emg) {
 1400              		.loc 1 600 0
 1401 0264 0C4B     		ldr	r3, .L155+20
 1402 0266 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1403 0268 012B     		cmp	r3, #1
 1404 026a 1ED0     		beq	.L83
 1405 026c 022B     		cmp	r3, #2
 1406 026e 3ED0     		beq	.L84
 1407 0270 002B     		cmp	r3, #0
 1408 0272 00D0     		beq	.L85
 601:..\src/interruptions.c ****                 // Look for the first EMG passing the threshold
 602:..\src/interruptions.c ****                 case 0:
 603:..\src/interruptions.c ****                     if (err_emg_1 > 0) {
 604:..\src/interruptions.c ****                         current_emg = 1;
 605:..\src/interruptions.c ****                         break;
 606:..\src/interruptions.c ****                     }
 607:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 608:..\src/interruptions.c ****                         current_emg = 2;
 609:..\src/interruptions.c ****                         break;
 610:..\src/interruptions.c ****                     }
 611:..\src/interruptions.c ****                     break;
 612:..\src/interruptions.c **** 
 613:..\src/interruptions.c ****                 // EMG 1 is first
 614:..\src/interruptions.c ****                 case 1:
 615:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 616:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 617:..\src/interruptions.c ****                         current_emg = 0;
 618:..\src/interruptions.c ****                         break;
 619:..\src/interruptions.c ****                     }
 620:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 621:..\src/interruptions.c ****                     if (err_emg_1 > 0) 
 622:..\src/interruptions.c ****                         g_ref.pos = g_refOld.pos + (err_emg_1 * g_mem.emg_speed << 2) / (1024 - c_m
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 37


 623:..\src/interruptions.c ****                     
 624:..\src/interruptions.c ****                     break;
 625:..\src/interruptions.c **** 
 626:..\src/interruptions.c ****                 // EMG 2 is first
 627:..\src/interruptions.c ****                 case 2:
 628:..\src/interruptions.c ****                     // If both signals are under threshold go back to status 0
 629:..\src/interruptions.c ****                     if ((err_emg_1 < 0) && (err_emg_2 < 0)) {
 630:..\src/interruptions.c ****                         current_emg = 0;
 631:..\src/interruptions.c ****                         break;
 632:..\src/interruptions.c ****                     }
 633:..\src/interruptions.c ****                     // but if the current signal come back over threshold, continue using it
 634:..\src/interruptions.c ****                     if (err_emg_2 > 0) {
 635:..\src/interruptions.c ****                         g_ref.pos = g_refOld.pos - (err_emg_2 * c_mem.emg_speed << 2) / (1024 - c_m
 636:..\src/interruptions.c ****                     }
 637:..\src/interruptions.c ****                     break;
 638:..\src/interruptions.c **** 
 639:..\src/interruptions.c ****                 default:
 640:..\src/interruptions.c ****                     break;
 1409              		.loc 1 640 0
 1410 0274 62E0     		b	.L56
 1411              	.L85:
 603:..\src/interruptions.c ****                         current_emg = 1;
 1412              		.loc 1 603 0
 1413 0276 3B69     		ldr	r3, [r7, #16]
 1414 0278 002B     		cmp	r3, #0
 1415 027a 0FDD     		ble	.L86
 604:..\src/interruptions.c ****                         break;
 1416              		.loc 1 604 0
 1417 027c 064B     		ldr	r3, .L155+20
 1418 027e 0122     		movs	r2, #1
 1419 0280 1A70     		strb	r2, [r3]
 605:..\src/interruptions.c ****                     }
 1420              		.loc 1 605 0
 1421 0282 5BE0     		b	.L56
 1422              	.L156:
 1423              		.align	2
 1424              	.L155:
 1425 0284 00000000 		.word	c_mem
 1426 0288 00000000 		.word	g_meas
 1427 028c 00000000 		.word	g_refOld
 1428 0290 00000000 		.word	g_ref
 1429 0294 00000000 		.word	g_mem
 1430 0298 8C000000 		.word	current_emg.9901
 1431              	.L86:
 607:..\src/interruptions.c ****                         current_emg = 2;
 1432              		.loc 1 607 0
 1433 029c FB68     		ldr	r3, [r7, #12]
 1434 029e 002B     		cmp	r3, #0
 1435 02a0 47DD     		ble	.L150
 608:..\src/interruptions.c ****                         break;
 1436              		.loc 1 608 0
 1437 02a2 974B     		ldr	r3, .L157
 1438 02a4 0222     		movs	r2, #2
 1439 02a6 1A70     		strb	r2, [r3]
 609:..\src/interruptions.c ****                     }
 1440              		.loc 1 609 0
 1441 02a8 48E0     		b	.L56
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 38


 1442              	.L83:
 616:..\src/interruptions.c ****                         current_emg = 0;
 1443              		.loc 1 616 0
 1444 02aa 3B69     		ldr	r3, [r7, #16]
 1445 02ac 002B     		cmp	r3, #0
 1446 02ae 06DA     		bge	.L88
 616:..\src/interruptions.c ****                         current_emg = 0;
 1447              		.loc 1 616 0 is_stmt 0 discriminator 1
 1448 02b0 FB68     		ldr	r3, [r7, #12]
 1449 02b2 002B     		cmp	r3, #0
 1450 02b4 03DA     		bge	.L88
 617:..\src/interruptions.c ****                         break;
 1451              		.loc 1 617 0 is_stmt 1
 1452 02b6 924B     		ldr	r3, .L157
 1453 02b8 0022     		movs	r2, #0
 1454 02ba 1A70     		strb	r2, [r3]
 618:..\src/interruptions.c ****                     }
 1455              		.loc 1 618 0
 1456 02bc 3EE0     		b	.L56
 1457              	.L88:
 621:..\src/interruptions.c ****                         g_ref.pos = g_refOld.pos + (err_emg_1 * g_mem.emg_speed << 2) / (1024 - c_m
 1458              		.loc 1 621 0
 1459 02be 3B69     		ldr	r3, [r7, #16]
 1460 02c0 002B     		cmp	r3, #0
 1461 02c2 38DD     		ble	.L151
 622:..\src/interruptions.c ****                     
 1462              		.loc 1 622 0
 1463 02c4 8F4B     		ldr	r3, .L157+4
 1464 02c6 1A68     		ldr	r2, [r3]
 1465 02c8 8F4B     		ldr	r3, .L157+8
 1466 02ca 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1467 02ce 1946     		mov	r1, r3
 1468 02d0 3B69     		ldr	r3, [r7, #16]
 1469 02d2 03FB01F3 		mul	r3, r3, r1
 1470 02d6 9900     		lsls	r1, r3, #2
 1471 02d8 8C4B     		ldr	r3, .L157+12
 1472 02da B3F86A30 		ldrh	r3, [r3, #106]
 1473 02de C3F58063 		rsb	r3, r3, #1024
 1474 02e2 91FBF3F3 		sdiv	r3, r1, r3
 1475 02e6 1344     		add	r3, r3, r2
 1476 02e8 894A     		ldr	r2, .L157+16
 1477 02ea 1360     		str	r3, [r2]
 624:..\src/interruptions.c **** 
 1478              		.loc 1 624 0
 1479 02ec 23E0     		b	.L151
 1480              	.L84:
 629:..\src/interruptions.c ****                         current_emg = 0;
 1481              		.loc 1 629 0
 1482 02ee 3B69     		ldr	r3, [r7, #16]
 1483 02f0 002B     		cmp	r3, #0
 1484 02f2 06DA     		bge	.L90
 629:..\src/interruptions.c ****                         current_emg = 0;
 1485              		.loc 1 629 0 is_stmt 0 discriminator 1
 1486 02f4 FB68     		ldr	r3, [r7, #12]
 1487 02f6 002B     		cmp	r3, #0
 1488 02f8 03DA     		bge	.L90
 630:..\src/interruptions.c ****                         break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 39


 1489              		.loc 1 630 0 is_stmt 1
 1490 02fa 814B     		ldr	r3, .L157
 1491 02fc 0022     		movs	r2, #0
 1492 02fe 1A70     		strb	r2, [r3]
 631:..\src/interruptions.c ****                     }
 1493              		.loc 1 631 0
 1494 0300 1CE0     		b	.L56
 1495              	.L90:
 634:..\src/interruptions.c ****                         g_ref.pos = g_refOld.pos - (err_emg_2 * c_mem.emg_speed << 2) / (1024 - c_m
 1496              		.loc 1 634 0
 1497 0302 FB68     		ldr	r3, [r7, #12]
 1498 0304 002B     		cmp	r3, #0
 1499 0306 18DD     		ble	.L152
 635:..\src/interruptions.c ****                     }
 1500              		.loc 1 635 0
 1501 0308 7E4B     		ldr	r3, .L157+4
 1502 030a 1A68     		ldr	r2, [r3]
 1503 030c 7F4B     		ldr	r3, .L157+12
 1504 030e 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 1505 0312 1946     		mov	r1, r3
 1506 0314 FB68     		ldr	r3, [r7, #12]
 1507 0316 03FB01F3 		mul	r3, r3, r1
 1508 031a 9900     		lsls	r1, r3, #2
 1509 031c 7B4B     		ldr	r3, .L157+12
 1510 031e B3F86C30 		ldrh	r3, [r3, #108]
 1511 0322 C3F58063 		rsb	r3, r3, #1024
 1512 0326 91FBF3F3 		sdiv	r3, r1, r3
 1513 032a D31A     		subs	r3, r2, r3
 1514 032c 784A     		ldr	r2, .L157+16
 1515 032e 1360     		str	r3, [r2]
 637:..\src/interruptions.c **** 
 1516              		.loc 1 637 0
 1517 0330 03E0     		b	.L152
 1518              	.L150:
 611:..\src/interruptions.c **** 
 1519              		.loc 1 611 0
 1520 0332 00BF     		nop
 1521 0334 02E0     		b	.L147
 1522              	.L151:
 624:..\src/interruptions.c **** 
 1523              		.loc 1 624 0
 1524 0336 00BF     		nop
 1525 0338 00E0     		b	.L147
 1526              	.L152:
 637:..\src/interruptions.c **** 
 1527              		.loc 1 637 0
 1528 033a 00BF     		nop
 1529              	.L56:
 1530              	.L147:
 641:..\src/interruptions.c ****             }
 642:..\src/interruptions.c **** 
 643:..\src/interruptions.c ****         default:
 644:..\src/interruptions.c ****             break;
 1531              		.loc 1 644 0
 1532 033c 00BF     		nop
 1533 033e 00E0     		b	.L68
 1534              	.L148:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 40


 557:..\src/interruptions.c **** 
 1535              		.loc 1 557 0
 1536 0340 00BF     		nop
 1537              	.L68:
 645:..\src/interruptions.c ****     }
 646:..\src/interruptions.c **** 
 647:..\src/interruptions.c ****     // Position limit saturation
 648:..\src/interruptions.c ****     if (c_mem.pos_lim_flag) {
 1538              		.loc 1 648 0
 1539 0342 724B     		ldr	r3, .L157+12
 1540 0344 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 1541 0348 002B     		cmp	r3, #0
 1542 034a 13D0     		beq	.L92
 649:..\src/interruptions.c ****         if (g_ref.pos < c_mem.pos_lim_inf) 
 1543              		.loc 1 649 0
 1544 034c 704B     		ldr	r3, .L157+16
 1545 034e 1A68     		ldr	r2, [r3]
 1546 0350 6E4B     		ldr	r3, .L157+12
 1547 0352 9B6D     		ldr	r3, [r3, #88]
 1548 0354 9A42     		cmp	r2, r3
 1549 0356 03DA     		bge	.L93
 650:..\src/interruptions.c ****             g_ref.pos = c_mem.pos_lim_inf;
 1550              		.loc 1 650 0
 1551 0358 6C4B     		ldr	r3, .L157+12
 1552 035a 9B6D     		ldr	r3, [r3, #88]
 1553 035c 6C4A     		ldr	r2, .L157+16
 1554 035e 1360     		str	r3, [r2]
 1555              	.L93:
 651:..\src/interruptions.c ****         if (g_ref.pos > c_mem.pos_lim_sup) 
 1556              		.loc 1 651 0
 1557 0360 6B4B     		ldr	r3, .L157+16
 1558 0362 1A68     		ldr	r2, [r3]
 1559 0364 694B     		ldr	r3, .L157+12
 1560 0366 DB6D     		ldr	r3, [r3, #92]
 1561 0368 9A42     		cmp	r2, r3
 1562 036a 03DD     		ble	.L92
 652:..\src/interruptions.c ****             g_ref.pos = c_mem.pos_lim_sup;
 1563              		.loc 1 652 0
 1564 036c 674B     		ldr	r3, .L157+12
 1565 036e DB6D     		ldr	r3, [r3, #92]
 1566 0370 674A     		ldr	r2, .L157+16
 1567 0372 1360     		str	r3, [r2]
 1568              	.L92:
 653:..\src/interruptions.c ****     }
 654:..\src/interruptions.c ****     
 655:..\src/interruptions.c ****     if (battery_low_SoC == 1) {
 1569              		.loc 1 655 0
 1570 0374 674B     		ldr	r3, .L157+20
 1571 0376 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 0378 012B     		cmp	r3, #1
 1573 037a 02D1     		bne	.L94
 656:..\src/interruptions.c ****         //Reopen the terminal device before disabling motor
 657:..\src/interruptions.c ****         g_ref.pos = 0;
 1574              		.loc 1 657 0
 1575 037c 644B     		ldr	r3, .L157+16
 1576 037e 0022     		movs	r2, #0
 1577 0380 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 41


 1578              	.L94:
 658:..\src/interruptions.c ****     }
 659:..\src/interruptions.c ****         
 660:..\src/interruptions.c ****     if (c_mem.rest_position_flag == TRUE) {
 1579              		.loc 1 660 0
 1580 0382 624B     		ldr	r3, .L157+12
 1581 0384 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 1582 0388 012B     		cmp	r3, #1
 1583 038a 2AD1     		bne	.L95
 661:..\src/interruptions.c ****         if (rest_enabled == 1){
 1584              		.loc 1 661 0
 1585 038c 624B     		ldr	r3, .L157+24
 1586 038e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1587 0390 012B     		cmp	r3, #1
 1588 0392 03D1     		bne	.L96
 662:..\src/interruptions.c ****             // Change position reference to drive motor to rest position smoothly
 663:..\src/interruptions.c ****             g_ref.pos = rest_pos_curr_ref;
 1589              		.loc 1 663 0
 1590 0394 614B     		ldr	r3, .L157+28
 1591 0396 1B68     		ldr	r3, [r3]
 1592 0398 5D4A     		ldr	r2, .L157+16
 1593 039a 1360     		str	r3, [r2]
 1594              	.L96:
 664:..\src/interruptions.c ****         }
 665:..\src/interruptions.c ****         
 666:..\src/interruptions.c ****         if (forced_open == 1) {
 1595              		.loc 1 666 0
 1596 039c 604B     		ldr	r3, .L157+32
 1597 039e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1598 03a0 012B     		cmp	r3, #1
 1599 03a2 1ED1     		bne	.L95
 667:..\src/interruptions.c ****             // Open the SoftHand as EMG PROPORTIONAL input mode 
 668:..\src/interruptions.c ****             if (err_emg_2 > 0)
 1600              		.loc 1 668 0
 1601 03a4 FB68     		ldr	r3, [r7, #12]
 1602 03a6 002B     		cmp	r3, #0
 1603 03a8 13DD     		ble	.L97
 669:..\src/interruptions.c ****                 g_ref.pos = g_mem.rest_pos - (err_emg_2 * g_mem.rest_pos) / (1024 - c_mem.emg_thres
 1604              		.loc 1 669 0
 1605 03aa 574B     		ldr	r3, .L157+8
 1606 03ac D3F89820 		ldr	r2, [r3, #152]
 1607 03b0 554B     		ldr	r3, .L157+8
 1608 03b2 D3F89830 		ldr	r3, [r3, #152]
 1609 03b6 F968     		ldr	r1, [r7, #12]
 1610 03b8 01FB03F1 		mul	r1, r1, r3
 1611 03bc 534B     		ldr	r3, .L157+12
 1612 03be B3F86C30 		ldrh	r3, [r3, #108]
 1613 03c2 C3F58063 		rsb	r3, r3, #1024
 1614 03c6 91FBF3F3 		sdiv	r3, r1, r3
 1615 03ca D31A     		subs	r3, r2, r3
 1616 03cc 504A     		ldr	r2, .L157+16
 1617 03ce 1360     		str	r3, [r2]
 1618 03d0 07E0     		b	.L95
 1619              	.L97:
 670:..\src/interruptions.c ****             else {
 671:..\src/interruptions.c ****                 g_ref.pos = g_mem.rest_pos;
 1620              		.loc 1 671 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 42


 1621 03d2 4D4B     		ldr	r3, .L157+8
 1622 03d4 D3F89830 		ldr	r3, [r3, #152]
 1623 03d8 4D4A     		ldr	r2, .L157+16
 1624 03da 1360     		str	r3, [r2]
 672:..\src/interruptions.c ****                 forced_open = 0;
 1625              		.loc 1 672 0
 1626 03dc 504B     		ldr	r3, .L157+32
 1627 03de 0022     		movs	r2, #0
 1628 03e0 1A70     		strb	r2, [r3]
 1629              	.L95:
 673:..\src/interruptions.c ****             }
 674:..\src/interruptions.c ****         }
 675:..\src/interruptions.c ****     }
 676:..\src/interruptions.c **** 
 677:..\src/interruptions.c ****     switch(c_mem.control_mode) {
 1630              		.loc 1 677 0
 1631 03e2 4A4B     		ldr	r3, .L157+12
 1632 03e4 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1633 03e8 032B     		cmp	r3, #3
 1634 03ea 00F2E681 		bhi	.L98
 1635 03ee 01A2     		adr	r2, .L100
 1636 03f0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1637              		.p2align 2
 1638              	.L100:
 1639 03f4 C5050000 		.word	.L99+1
 1640 03f8 4F070000 		.word	.L101+1
 1641 03fc 63060000 		.word	.L102+1
 1642 0400 05040000 		.word	.L103+1
 1643              		.p2align 1
 1644              	.L103:
 678:..\src/interruptions.c ****         // ======================= CURRENT AND POSITION CONTROL =======================
 679:..\src/interruptions.c ****         case CURR_AND_POS_CONTROL:
 680:..\src/interruptions.c ****             pos_error = g_ref.pos - g_meas.pos[0];
 1645              		.loc 1 680 0
 1646 0404 424B     		ldr	r3, .L157+16
 1647 0406 1A68     		ldr	r2, [r3]
 1648 0408 464B     		ldr	r3, .L157+36
 1649 040a 1B68     		ldr	r3, [r3]
 1650 040c D31A     		subs	r3, r2, r3
 1651 040e BB60     		str	r3, [r7, #8]
 681:..\src/interruptions.c **** 
 682:..\src/interruptions.c ****             pos_error_sum += pos_error;
 1652              		.loc 1 682 0
 1653 0410 454B     		ldr	r3, .L157+40
 1654 0412 1A68     		ldr	r2, [r3]
 1655 0414 BB68     		ldr	r3, [r7, #8]
 1656 0416 1344     		add	r3, r3, r2
 1657 0418 434A     		ldr	r2, .L157+40
 1658 041a 1360     		str	r3, [r2]
 683:..\src/interruptions.c **** 
 684:..\src/interruptions.c ****             // error_sum saturation
 685:..\src/interruptions.c ****             if (pos_error_sum > POS_INTEGRAL_SAT_LIMIT)
 1659              		.loc 1 685 0
 1660 041c 424B     		ldr	r3, .L157+40
 1661 041e 1B68     		ldr	r3, [r3]
 1662 0420 424A     		ldr	r2, .L157+44
 1663 0422 9342     		cmp	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 43


 1664 0424 03DD     		ble	.L104
 686:..\src/interruptions.c ****                 pos_error_sum = POS_INTEGRAL_SAT_LIMIT;
 1665              		.loc 1 686 0
 1666 0426 404B     		ldr	r3, .L157+40
 1667 0428 404A     		ldr	r2, .L157+44
 1668 042a 1A60     		str	r2, [r3]
 1669 042c 07E0     		b	.L105
 1670              	.L104:
 687:..\src/interruptions.c ****             else {
 688:..\src/interruptions.c ****                 if (pos_error_sum < -POS_INTEGRAL_SAT_LIMIT) 
 1671              		.loc 1 688 0
 1672 042e 3E4B     		ldr	r3, .L157+40
 1673 0430 1B68     		ldr	r3, [r3]
 1674 0432 3F4A     		ldr	r2, .L157+48
 1675 0434 9342     		cmp	r3, r2
 1676 0436 02DA     		bge	.L105
 689:..\src/interruptions.c ****                     pos_error_sum = -POS_INTEGRAL_SAT_LIMIT;
 1677              		.loc 1 689 0
 1678 0438 3B4B     		ldr	r3, .L157+40
 1679 043a 3D4A     		ldr	r2, .L157+48
 1680 043c 1A60     		str	r2, [r3]
 1681              	.L105:
 690:..\src/interruptions.c ****             }
 691:..\src/interruptions.c ****             
 692:..\src/interruptions.c ****             // ------ position PID control ------
 693:..\src/interruptions.c **** 
 694:..\src/interruptions.c ****             i_ref = 0;
 1682              		.loc 1 694 0
 1683 043e 0023     		movs	r3, #0
 1684 0440 BB64     		str	r3, [r7, #72]
 695:..\src/interruptions.c ****             
 696:..\src/interruptions.c ****             // Proportional
 697:..\src/interruptions.c ****             if (k_p_dl != 0)
 1685              		.loc 1 697 0
 1686 0442 BB6A     		ldr	r3, [r7, #40]
 1687 0444 002B     		cmp	r3, #0
 1688 0446 07D0     		beq	.L106
 698:..\src/interruptions.c ****                 i_ref += (int32)(k_p_dl * pos_error) >> 16;
 1689              		.loc 1 698 0
 1690 0448 BB6A     		ldr	r3, [r7, #40]
 1691 044a BA68     		ldr	r2, [r7, #8]
 1692 044c 02FB03F3 		mul	r3, r2, r3
 1693 0450 1B14     		asrs	r3, r3, #16
 1694 0452 BA6C     		ldr	r2, [r7, #72]
 1695 0454 1344     		add	r3, r3, r2
 1696 0456 BB64     		str	r3, [r7, #72]
 1697              	.L106:
 699:..\src/interruptions.c **** 
 700:..\src/interruptions.c ****             // Integral
 701:..\src/interruptions.c ****             if (k_i_dl != 0)
 1698              		.loc 1 701 0
 1699 0458 7B6A     		ldr	r3, [r7, #36]
 1700 045a 002B     		cmp	r3, #0
 1701 045c 08D0     		beq	.L107
 702:..\src/interruptions.c ****                 i_ref += (int32)(k_i_dl * pos_error_sum) >> 16;
 1702              		.loc 1 702 0
 1703 045e 324B     		ldr	r3, .L157+40
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 44


 1704 0460 1B68     		ldr	r3, [r3]
 1705 0462 7A6A     		ldr	r2, [r7, #36]
 1706 0464 02FB03F3 		mul	r3, r2, r3
 1707 0468 1B14     		asrs	r3, r3, #16
 1708 046a BA6C     		ldr	r2, [r7, #72]
 1709 046c 1344     		add	r3, r3, r2
 1710 046e BB64     		str	r3, [r7, #72]
 1711              	.L107:
 703:..\src/interruptions.c **** 
 704:..\src/interruptions.c ****             // Derivative
 705:..\src/interruptions.c ****             if (k_d_dl != 0)
 1712              		.loc 1 705 0
 1713 0470 3B6A     		ldr	r3, [r7, #32]
 1714 0472 002B     		cmp	r3, #0
 1715 0474 0AD0     		beq	.L108
 706:..\src/interruptions.c ****                 i_ref += (int32)(k_d_dl * (pos_error - prev_pos_err)) >> 16;
 1716              		.loc 1 706 0
 1717 0476 2F4B     		ldr	r3, .L157+52
 1718 0478 1B68     		ldr	r3, [r3]
 1719 047a BA68     		ldr	r2, [r7, #8]
 1720 047c D31A     		subs	r3, r2, r3
 1721 047e 3A6A     		ldr	r2, [r7, #32]
 1722 0480 02FB03F3 		mul	r3, r2, r3
 1723 0484 1B14     		asrs	r3, r3, #16
 1724 0486 BA6C     		ldr	r2, [r7, #72]
 1725 0488 1344     		add	r3, r3, r2
 1726 048a BB64     		str	r3, [r7, #72]
 1727              	.L108:
 707:..\src/interruptions.c ****                         
 708:..\src/interruptions.c ****             // Update previous position
 709:..\src/interruptions.c ****             prev_pos_err = pos_error;
 1728              		.loc 1 709 0
 1729 048c 294A     		ldr	r2, .L157+52
 1730 048e BB68     		ldr	r3, [r7, #8]
 1731 0490 1360     		str	r3, [r2]
 710:..\src/interruptions.c **** 
 711:..\src/interruptions.c ****             // motor direction depends on i_ref
 712:..\src/interruptions.c ****             if (i_ref >= 0)
 1732              		.loc 1 712 0
 1733 0492 BB6C     		ldr	r3, [r7, #72]
 1734 0494 002B     		cmp	r3, #0
 1735 0496 03DB     		blt	.L109
 713:..\src/interruptions.c ****                 motor_dir = TRUE;
 1736              		.loc 1 713 0
 1737 0498 274B     		ldr	r3, .L157+56
 1738 049a 0122     		movs	r2, #1
 1739 049c 1A70     		strb	r2, [r3]
 1740 049e 02E0     		b	.L110
 1741              	.L109:
 714:..\src/interruptions.c ****             else
 715:..\src/interruptions.c ****                 motor_dir = FALSE;
 1742              		.loc 1 715 0
 1743 04a0 254B     		ldr	r3, .L157+56
 1744 04a2 0022     		movs	r2, #0
 1745 04a4 1A70     		strb	r2, [r3]
 1746              	.L110:
 716:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 45


 717:..\src/interruptions.c ****             // saturate max current
 718:..\src/interruptions.c ****             if (i_ref > c_mem.current_limit)
 1747              		.loc 1 718 0
 1748 04a6 194B     		ldr	r3, .L157+12
 1749 04a8 B3F96830 		ldrsh	r3, [r3, #104]
 1750 04ac 1A46     		mov	r2, r3
 1751 04ae BB6C     		ldr	r3, [r7, #72]
 1752 04b0 9A42     		cmp	r2, r3
 1753 04b2 04DA     		bge	.L111
 719:..\src/interruptions.c ****                 i_ref = c_mem.current_limit;
 1754              		.loc 1 719 0
 1755 04b4 154B     		ldr	r3, .L157+12
 1756 04b6 B3F96830 		ldrsh	r3, [r3, #104]
 1757 04ba BB64     		str	r3, [r7, #72]
 1758 04bc 0BE0     		b	.L112
 1759              	.L111:
 720:..\src/interruptions.c ****             else {
 721:..\src/interruptions.c ****                 if (i_ref < -c_mem.current_limit)
 1760              		.loc 1 721 0
 1761 04be 134B     		ldr	r3, .L157+12
 1762 04c0 B3F96830 		ldrsh	r3, [r3, #104]
 1763 04c4 5A42     		negs	r2, r3
 1764 04c6 BB6C     		ldr	r3, [r7, #72]
 1765 04c8 9A42     		cmp	r2, r3
 1766 04ca 04DD     		ble	.L112
 722:..\src/interruptions.c ****                     i_ref = -c_mem.current_limit;
 1767              		.loc 1 722 0
 1768 04cc 0F4B     		ldr	r3, .L157+12
 1769 04ce B3F96830 		ldrsh	r3, [r3, #104]
 1770 04d2 5B42     		negs	r3, r3
 1771 04d4 BB64     		str	r3, [r7, #72]
 1772              	.L112:
 723:..\src/interruptions.c ****         	}
 724:..\src/interruptions.c **** 
 725:..\src/interruptions.c ****             // current error and curr error sum
 726:..\src/interruptions.c ****             curr_error = i_ref - g_meas.curr;
 1773              		.loc 1 726 0
 1774 04d6 134B     		ldr	r3, .L157+36
 1775 04d8 DB68     		ldr	r3, [r3, #12]
 1776 04da BA6C     		ldr	r2, [r7, #72]
 1777 04dc D31A     		subs	r3, r2, r3
 1778 04de 7B60     		str	r3, [r7, #4]
 727:..\src/interruptions.c ****             curr_error_sum += curr_error;
 1779              		.loc 1 727 0
 1780 04e0 164B     		ldr	r3, .L157+60
 1781 04e2 1A68     		ldr	r2, [r3]
 1782 04e4 7B68     		ldr	r3, [r7, #4]
 1783 04e6 1344     		add	r3, r3, r2
 1784 04e8 144A     		ldr	r2, .L157+60
 1785 04ea 1360     		str	r3, [r2]
 728:..\src/interruptions.c ****             
 729:..\src/interruptions.c ****             if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 1786              		.loc 1 729 0
 1787 04ec 134B     		ldr	r3, .L157+60
 1788 04ee 1B68     		ldr	r3, [r3]
 1789 04f0 134A     		ldr	r2, .L157+64
 1790 04f2 9342     		cmp	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 46


 1791 04f4 26DD     		ble	.L113
 730:..\src/interruptions.c ****                 curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 1792              		.loc 1 730 0
 1793 04f6 114B     		ldr	r3, .L157+60
 1794 04f8 114A     		ldr	r2, .L157+64
 1795 04fa 1A60     		str	r2, [r3]
 1796 04fc 2AE0     		b	.L114
 1797              	.L158:
 1798 04fe 00BF     		.align	2
 1799              	.L157:
 1800 0500 8C000000 		.word	current_emg.9901
 1801 0504 00000000 		.word	g_refOld
 1802 0508 00000000 		.word	g_mem
 1803 050c 00000000 		.word	c_mem
 1804 0510 00000000 		.word	g_ref
 1805 0514 00000000 		.word	battery_low_SoC
 1806 0518 00000000 		.word	rest_enabled
 1807 051c 00000000 		.word	rest_pos_curr_ref
 1808 0520 00000000 		.word	forced_open
 1809 0524 00000000 		.word	g_meas
 1810 0528 90000000 		.word	pos_error_sum.9896
 1811 052c 80F0FA02 		.word	50000000
 1812 0530 800F05FD 		.word	-50000000
 1813 0534 94000000 		.word	prev_pos_err.9898
 1814 0538 98000000 		.word	motor_dir.9900
 1815 053c 9C000000 		.word	curr_error_sum.9897
 1816 0540 A0860100 		.word	100000
 1817              	.L113:
 731:..\src/interruptions.c ****             else {
 732:..\src/interruptions.c ****                 if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT)
 1818              		.loc 1 732 0
 1819 0544 904B     		ldr	r3, .L159
 1820 0546 1B68     		ldr	r3, [r3]
 1821 0548 904A     		ldr	r2, .L159+4
 1822 054a 9342     		cmp	r3, r2
 1823 054c 02DA     		bge	.L114
 733:..\src/interruptions.c ****                     curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 1824              		.loc 1 733 0
 1825 054e 8E4B     		ldr	r3, .L159
 1826 0550 8E4A     		ldr	r2, .L159+4
 1827 0552 1A60     		str	r2, [r3]
 1828              	.L114:
 734:..\src/interruptions.c ****             }
 735:..\src/interruptions.c **** 
 736:..\src/interruptions.c ****             // ----- current PID control -----
 737:..\src/interruptions.c **** 
 738:..\src/interruptions.c ****             pwm_input = 0;
 1829              		.loc 1 738 0
 1830 0554 0023     		movs	r3, #0
 1831 0556 FB64     		str	r3, [r7, #76]
 739:..\src/interruptions.c **** 
 740:..\src/interruptions.c ****             // Proportional
 741:..\src/interruptions.c ****             if (k_p_c_dl != 0)
 1832              		.loc 1 741 0
 1833 0558 FB69     		ldr	r3, [r7, #28]
 1834 055a 002B     		cmp	r3, #0
 1835 055c 07D0     		beq	.L115
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 47


 742:..\src/interruptions.c ****                 pwm_input += (int32)(k_p_c_dl * curr_error) >> 16;
 1836              		.loc 1 742 0
 1837 055e FB69     		ldr	r3, [r7, #28]
 1838 0560 7A68     		ldr	r2, [r7, #4]
 1839 0562 02FB03F3 		mul	r3, r2, r3
 1840 0566 1B14     		asrs	r3, r3, #16
 1841 0568 FA6C     		ldr	r2, [r7, #76]
 1842 056a 1344     		add	r3, r3, r2
 1843 056c FB64     		str	r3, [r7, #76]
 1844              	.L115:
 743:..\src/interruptions.c **** 
 744:..\src/interruptions.c ****             // Integral
 745:..\src/interruptions.c ****             if (k_i_c_dl != 0)
 1845              		.loc 1 745 0
 1846 056e BB69     		ldr	r3, [r7, #24]
 1847 0570 002B     		cmp	r3, #0
 1848 0572 08D0     		beq	.L116
 746:..\src/interruptions.c ****                 pwm_input += (int32)(k_i_c_dl * curr_error_sum) >> 16;
 1849              		.loc 1 746 0
 1850 0574 844B     		ldr	r3, .L159
 1851 0576 1B68     		ldr	r3, [r3]
 1852 0578 BA69     		ldr	r2, [r7, #24]
 1853 057a 02FB03F3 		mul	r3, r2, r3
 1854 057e 1B14     		asrs	r3, r3, #16
 1855 0580 FA6C     		ldr	r2, [r7, #76]
 1856 0582 1344     		add	r3, r3, r2
 1857 0584 FB64     		str	r3, [r7, #76]
 1858              	.L116:
 747:..\src/interruptions.c **** 
 748:..\src/interruptions.c ****             // Derivative
 749:..\src/interruptions.c ****             if (k_d_c_dl != 0)
 1859              		.loc 1 749 0
 1860 0586 7B69     		ldr	r3, [r7, #20]
 1861 0588 002B     		cmp	r3, #0
 1862 058a 0AD0     		beq	.L117
 750:..\src/interruptions.c ****                 pwm_input += (int32)(k_d_c_dl * (curr_error - prev_curr_err)) >> 16;
 1863              		.loc 1 750 0
 1864 058c 804B     		ldr	r3, .L159+8
 1865 058e 1B68     		ldr	r3, [r3]
 1866 0590 7A68     		ldr	r2, [r7, #4]
 1867 0592 D31A     		subs	r3, r2, r3
 1868 0594 7A69     		ldr	r2, [r7, #20]
 1869 0596 02FB03F3 		mul	r3, r2, r3
 1870 059a 1B14     		asrs	r3, r3, #16
 1871 059c FA6C     		ldr	r2, [r7, #76]
 1872 059e 1344     		add	r3, r3, r2
 1873 05a0 FB64     		str	r3, [r7, #76]
 1874              	.L117:
 751:..\src/interruptions.c **** 
 752:..\src/interruptions.c ****             // pwm_input saturation
 753:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 1875              		.loc 1 753 0
 1876 05a2 FB6C     		ldr	r3, [r7, #76]
 1877 05a4 13F1640F 		cmn	r3, #100
 1878 05a8 03DA     		bge	.L118
 754:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 1879              		.loc 1 754 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 48


 1880 05aa 6FF06303 		mvn	r3, #99
 1881 05ae FB64     		str	r3, [r7, #76]
 1882 05b0 04E0     		b	.L119
 1883              	.L118:
 755:..\src/interruptions.c ****             else {
 756:..\src/interruptions.c ****                 if (pwm_input > PWM_MAX_VALUE)
 1884              		.loc 1 756 0
 1885 05b2 FB6C     		ldr	r3, [r7, #76]
 1886 05b4 642B     		cmp	r3, #100
 1887 05b6 01DD     		ble	.L119
 757:..\src/interruptions.c ****                     pwm_input = PWM_MAX_VALUE;
 1888              		.loc 1 757 0
 1889 05b8 6423     		movs	r3, #100
 1890 05ba FB64     		str	r3, [r7, #76]
 1891              	.L119:
 758:..\src/interruptions.c ****             }
 759:..\src/interruptions.c **** 
 760:..\src/interruptions.c ****             // Update previous current
 761:..\src/interruptions.c ****             prev_curr_err = curr_error;
 1892              		.loc 1 761 0
 1893 05bc 744A     		ldr	r2, .L159+8
 1894 05be 7B68     		ldr	r3, [r7, #4]
 1895 05c0 1360     		str	r3, [r2]
 762:..\src/interruptions.c **** 
 763:..\src/interruptions.c ****         break;
 1896              		.loc 1 763 0
 1897 05c2 FAE0     		b	.L98
 1898              	.L99:
 764:..\src/interruptions.c **** 
 765:..\src/interruptions.c ****         // ============================== POSITION CONTROL =====================
 766:..\src/interruptions.c ****         case CONTROL_ANGLE:
 767:..\src/interruptions.c ****             pos_error = g_ref.pos - g_meas.pos[0];
 1899              		.loc 1 767 0
 1900 05c4 734B     		ldr	r3, .L159+12
 1901 05c6 1A68     		ldr	r2, [r3]
 1902 05c8 734B     		ldr	r3, .L159+16
 1903 05ca 1B68     		ldr	r3, [r3]
 1904 05cc D31A     		subs	r3, r2, r3
 1905 05ce BB60     		str	r3, [r7, #8]
 768:..\src/interruptions.c **** 
 769:..\src/interruptions.c ****             pos_error_sum += pos_error;
 1906              		.loc 1 769 0
 1907 05d0 724B     		ldr	r3, .L159+20
 1908 05d2 1A68     		ldr	r2, [r3]
 1909 05d4 BB68     		ldr	r3, [r7, #8]
 1910 05d6 1344     		add	r3, r3, r2
 1911 05d8 704A     		ldr	r2, .L159+20
 1912 05da 1360     		str	r3, [r2]
 770:..\src/interruptions.c **** 
 771:..\src/interruptions.c ****             // anti-windup (for integral control)
 772:..\src/interruptions.c ****             if (pos_error_sum > ANTI_WINDUP)
 1913              		.loc 1 772 0
 1914 05dc 6F4B     		ldr	r3, .L159+20
 1915 05de 1B68     		ldr	r3, [r3]
 1916 05e0 B3F57A7F 		cmp	r3, #1000
 1917 05e4 04DD     		ble	.L120
 773:..\src/interruptions.c ****                 pos_error_sum = ANTI_WINDUP;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 49


 1918              		.loc 1 773 0
 1919 05e6 6D4B     		ldr	r3, .L159+20
 1920 05e8 4FF47A72 		mov	r2, #1000
 1921 05ec 1A60     		str	r2, [r3]
 1922 05ee 07E0     		b	.L121
 1923              	.L120:
 774:..\src/interruptions.c ****             else {
 775:..\src/interruptions.c **** 				if (pos_error_sum < -ANTI_WINDUP)
 1924              		.loc 1 775 0
 1925 05f0 6A4B     		ldr	r3, .L159+20
 1926 05f2 1B68     		ldr	r3, [r3]
 1927 05f4 13F57A7F 		cmn	r3, #1000
 1928 05f8 02DA     		bge	.L121
 776:..\src/interruptions.c ****                 	pos_error_sum = -ANTI_WINDUP;
 1929              		.loc 1 776 0
 1930 05fa 684B     		ldr	r3, .L159+20
 1931 05fc 684A     		ldr	r2, .L159+24
 1932 05fe 1A60     		str	r2, [r3]
 1933              	.L121:
 777:..\src/interruptions.c ****             }
 778:..\src/interruptions.c **** 
 779:..\src/interruptions.c ****             // Proportional
 780:..\src/interruptions.c ****             if (k_p != 0) 
 1934              		.loc 1 780 0
 1935 0600 3B6C     		ldr	r3, [r7, #64]
 1936 0602 002B     		cmp	r3, #0
 1937 0604 05D0     		beq	.L122
 781:..\src/interruptions.c ****                 pwm_input = (int32)(k_p * pos_error) >> 16;
 1938              		.loc 1 781 0
 1939 0606 3B6C     		ldr	r3, [r7, #64]
 1940 0608 BA68     		ldr	r2, [r7, #8]
 1941 060a 02FB03F3 		mul	r3, r2, r3
 1942 060e 1B14     		asrs	r3, r3, #16
 1943 0610 FB64     		str	r3, [r7, #76]
 1944              	.L122:
 782:..\src/interruptions.c ****             
 783:..\src/interruptions.c **** 
 784:..\src/interruptions.c ****             // Integral
 785:..\src/interruptions.c ****             if (k_i != 0) 
 1945              		.loc 1 785 0
 1946 0612 FB6B     		ldr	r3, [r7, #60]
 1947 0614 002B     		cmp	r3, #0
 1948 0616 08D0     		beq	.L123
 786:..\src/interruptions.c ****                 pwm_input += (int32)(k_i * pos_error_sum) >> 16;
 1949              		.loc 1 786 0
 1950 0618 604B     		ldr	r3, .L159+20
 1951 061a 1B68     		ldr	r3, [r3]
 1952 061c FA6B     		ldr	r2, [r7, #60]
 1953 061e 02FB03F3 		mul	r3, r2, r3
 1954 0622 1B14     		asrs	r3, r3, #16
 1955 0624 FA6C     		ldr	r2, [r7, #76]
 1956 0626 1344     		add	r3, r3, r2
 1957 0628 FB64     		str	r3, [r7, #76]
 1958              	.L123:
 787:..\src/interruptions.c ****             
 788:..\src/interruptions.c **** 
 789:..\src/interruptions.c ****             // Derivative
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 50


 790:..\src/interruptions.c ****             if (k_d != 0) 
 1959              		.loc 1 790 0
 1960 062a BB6B     		ldr	r3, [r7, #56]
 1961 062c 002B     		cmp	r3, #0
 1962 062e 0AD0     		beq	.L124
 791:..\src/interruptions.c ****                 pwm_input += (int32)(k_d * (pos_error - prev_pos_err)) >> 16;
 1963              		.loc 1 791 0
 1964 0630 5C4B     		ldr	r3, .L159+28
 1965 0632 1B68     		ldr	r3, [r3]
 1966 0634 BA68     		ldr	r2, [r7, #8]
 1967 0636 D31A     		subs	r3, r2, r3
 1968 0638 BA6B     		ldr	r2, [r7, #56]
 1969 063a 02FB03F3 		mul	r3, r2, r3
 1970 063e 1B14     		asrs	r3, r3, #16
 1971 0640 FA6C     		ldr	r2, [r7, #76]
 1972 0642 1344     		add	r3, r3, r2
 1973 0644 FB64     		str	r3, [r7, #76]
 1974              	.L124:
 792:..\src/interruptions.c ****             
 793:..\src/interruptions.c **** 
 794:..\src/interruptions.c ****             // Update measure
 795:..\src/interruptions.c ****             prev_pos_err = pos_error;
 1975              		.loc 1 795 0
 1976 0646 574A     		ldr	r2, .L159+28
 1977 0648 BB68     		ldr	r3, [r7, #8]
 1978 064a 1360     		str	r3, [r2]
 796:..\src/interruptions.c **** 
 797:..\src/interruptions.c ****             if (pwm_input > 0)
 1979              		.loc 1 797 0
 1980 064c FB6C     		ldr	r3, [r7, #76]
 1981 064e 002B     		cmp	r3, #0
 1982 0650 03DD     		ble	.L125
 798:..\src/interruptions.c ****                 motor_dir = TRUE;
 1983              		.loc 1 798 0
 1984 0652 554B     		ldr	r3, .L159+32
 1985 0654 0122     		movs	r2, #1
 1986 0656 1A70     		strb	r2, [r3]
 799:..\src/interruptions.c ****             else
 800:..\src/interruptions.c ****                 motor_dir = FALSE;
 801:..\src/interruptions.c **** 
 802:..\src/interruptions.c ****         break;
 1987              		.loc 1 802 0
 1988 0658 AFE0     		b	.L98
 1989              	.L125:
 800:..\src/interruptions.c **** 
 1990              		.loc 1 800 0
 1991 065a 534B     		ldr	r3, .L159+32
 1992 065c 0022     		movs	r2, #0
 1993 065e 1A70     		strb	r2, [r3]
 1994              		.loc 1 802 0
 1995 0660 ABE0     		b	.L98
 1996              	.L102:
 803:..\src/interruptions.c **** 
 804:..\src/interruptions.c ****         // ========================== CURRENT CONTROL ==========================
 805:..\src/interruptions.c ****         case CONTROL_CURRENT:
 806:..\src/interruptions.c ****             if(g_ref.onoff && tension_valid) {
 1997              		.loc 1 806 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 51


 1998 0662 4C4B     		ldr	r3, .L159+12
 1999 0664 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2000 0666 002B     		cmp	r3, #0
 2001 0668 00F08C80 		beq	.L153
 2002              		.loc 1 806 0 is_stmt 0 discriminator 1
 2003 066c 4F4B     		ldr	r3, .L159+36
 2004 066e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2005 0670 002B     		cmp	r3, #0
 2006 0672 00F08780 		beq	.L153
 807:..\src/interruptions.c ****                 
 808:..\src/interruptions.c ****                 i_ref = g_ref.curr;
 2007              		.loc 1 808 0 is_stmt 1
 2008 0676 474B     		ldr	r3, .L159+12
 2009 0678 5B68     		ldr	r3, [r3, #4]
 2010 067a BB64     		str	r3, [r7, #72]
 809:..\src/interruptions.c **** 
 810:..\src/interruptions.c ****                 if (i_ref > c_mem.current_limit) 
 2011              		.loc 1 810 0
 2012 067c 4C4B     		ldr	r3, .L159+40
 2013 067e B3F96830 		ldrsh	r3, [r3, #104]
 2014 0682 1A46     		mov	r2, r3
 2015 0684 BB6C     		ldr	r3, [r7, #72]
 2016 0686 9A42     		cmp	r2, r3
 2017 0688 04DA     		bge	.L128
 811:..\src/interruptions.c ****                     i_ref = c_mem.current_limit;
 2018              		.loc 1 811 0
 2019 068a 494B     		ldr	r3, .L159+40
 2020 068c B3F96830 		ldrsh	r3, [r3, #104]
 2021 0690 BB64     		str	r3, [r7, #72]
 2022 0692 0BE0     		b	.L129
 2023              	.L128:
 812:..\src/interruptions.c ****                 else {
 813:..\src/interruptions.c ****                     if (i_ref < -c_mem.current_limit)
 2024              		.loc 1 813 0
 2025 0694 464B     		ldr	r3, .L159+40
 2026 0696 B3F96830 		ldrsh	r3, [r3, #104]
 2027 069a 5A42     		negs	r2, r3
 2028 069c BB6C     		ldr	r3, [r7, #72]
 2029 069e 9A42     		cmp	r2, r3
 2030 06a0 04DD     		ble	.L129
 814:..\src/interruptions.c ****                         i_ref = -c_mem.current_limit;
 2031              		.loc 1 814 0
 2032 06a2 434B     		ldr	r3, .L159+40
 2033 06a4 B3F96830 		ldrsh	r3, [r3, #104]
 2034 06a8 5B42     		negs	r3, r3
 2035 06aa BB64     		str	r3, [r7, #72]
 2036              	.L129:
 815:..\src/interruptions.c ****                 }
 816:..\src/interruptions.c ****                 
 817:..\src/interruptions.c ****                 // current error
 818:..\src/interruptions.c ****                 curr_error = i_ref - g_meas.curr;            
 2037              		.loc 1 818 0
 2038 06ac 3A4B     		ldr	r3, .L159+16
 2039 06ae DB68     		ldr	r3, [r3, #12]
 2040 06b0 BA6C     		ldr	r2, [r7, #72]
 2041 06b2 D31A     		subs	r3, r2, r3
 2042 06b4 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 52


 819:..\src/interruptions.c ****                 curr_error_sum += curr_error;
 2043              		.loc 1 819 0
 2044 06b6 344B     		ldr	r3, .L159
 2045 06b8 1A68     		ldr	r2, [r3]
 2046 06ba 7B68     		ldr	r3, [r7, #4]
 2047 06bc 1344     		add	r3, r3, r2
 2048 06be 324A     		ldr	r2, .L159
 2049 06c0 1360     		str	r3, [r2]
 820:..\src/interruptions.c ****                 
 821:..\src/interruptions.c ****                 if (curr_error_sum > CURR_INTEGRAL_SAT_LIMIT)
 2050              		.loc 1 821 0
 2051 06c2 314B     		ldr	r3, .L159
 2052 06c4 1B68     		ldr	r3, [r3]
 2053 06c6 3B4A     		ldr	r2, .L159+44
 2054 06c8 9342     		cmp	r3, r2
 2055 06ca 03DD     		ble	.L130
 822:..\src/interruptions.c ****                     curr_error_sum = CURR_INTEGRAL_SAT_LIMIT;
 2056              		.loc 1 822 0
 2057 06cc 2E4B     		ldr	r3, .L159
 2058 06ce 394A     		ldr	r2, .L159+44
 2059 06d0 1A60     		str	r2, [r3]
 2060 06d2 07E0     		b	.L131
 2061              	.L130:
 823:..\src/interruptions.c ****                 else {
 824:..\src/interruptions.c ****                     if (curr_error_sum < -CURR_INTEGRAL_SAT_LIMIT) 
 2062              		.loc 1 824 0
 2063 06d4 2C4B     		ldr	r3, .L159
 2064 06d6 1B68     		ldr	r3, [r3]
 2065 06d8 2C4A     		ldr	r2, .L159+4
 2066 06da 9342     		cmp	r3, r2
 2067 06dc 02DA     		bge	.L131
 825:..\src/interruptions.c ****                         curr_error_sum = -CURR_INTEGRAL_SAT_LIMIT;
 2068              		.loc 1 825 0
 2069 06de 2A4B     		ldr	r3, .L159
 2070 06e0 2A4A     		ldr	r2, .L159+4
 2071 06e2 1A60     		str	r2, [r3]
 2072              	.L131:
 826:..\src/interruptions.c ****                 }
 827:..\src/interruptions.c **** 
 828:..\src/interruptions.c ****                 pwm_input = 0;
 2073              		.loc 1 828 0
 2074 06e4 0023     		movs	r3, #0
 2075 06e6 FB64     		str	r3, [r7, #76]
 829:..\src/interruptions.c **** 
 830:..\src/interruptions.c ****                 // Proportional
 831:..\src/interruptions.c ****                 if (k_p_c != 0)
 2076              		.loc 1 831 0
 2077 06e8 7B6B     		ldr	r3, [r7, #52]
 2078 06ea 002B     		cmp	r3, #0
 2079 06ec 07D0     		beq	.L132
 832:..\src/interruptions.c ****                     pwm_input += (int32)(k_p_c * curr_error) >> 16;
 2080              		.loc 1 832 0
 2081 06ee 7B6B     		ldr	r3, [r7, #52]
 2082 06f0 7A68     		ldr	r2, [r7, #4]
 2083 06f2 02FB03F3 		mul	r3, r2, r3
 2084 06f6 1B14     		asrs	r3, r3, #16
 2085 06f8 FA6C     		ldr	r2, [r7, #76]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 53


 2086 06fa 1344     		add	r3, r3, r2
 2087 06fc FB64     		str	r3, [r7, #76]
 2088              	.L132:
 833:..\src/interruptions.c **** 
 834:..\src/interruptions.c ****                 // Integral
 835:..\src/interruptions.c ****                 if (k_i_c != 0)
 2089              		.loc 1 835 0
 2090 06fe 3B6B     		ldr	r3, [r7, #48]
 2091 0700 002B     		cmp	r3, #0
 2092 0702 08D0     		beq	.L133
 836:..\src/interruptions.c ****                     pwm_input += (int32)(k_i_c * curr_error_sum) >> 16;
 2093              		.loc 1 836 0
 2094 0704 204B     		ldr	r3, .L159
 2095 0706 1B68     		ldr	r3, [r3]
 2096 0708 3A6B     		ldr	r2, [r7, #48]
 2097 070a 02FB03F3 		mul	r3, r2, r3
 2098 070e 1B14     		asrs	r3, r3, #16
 2099 0710 FA6C     		ldr	r2, [r7, #76]
 2100 0712 1344     		add	r3, r3, r2
 2101 0714 FB64     		str	r3, [r7, #76]
 2102              	.L133:
 837:..\src/interruptions.c **** 
 838:..\src/interruptions.c ****                 // Derivative
 839:..\src/interruptions.c ****                 if (k_d_c != 0)
 2103              		.loc 1 839 0
 2104 0716 FB6A     		ldr	r3, [r7, #44]
 2105 0718 002B     		cmp	r3, #0
 2106 071a 0AD0     		beq	.L134
 840:..\src/interruptions.c ****                     pwm_input += (int32)(k_d_c * (curr_error - prev_curr_err)) >> 16;
 2107              		.loc 1 840 0
 2108 071c 1C4B     		ldr	r3, .L159+8
 2109 071e 1B68     		ldr	r3, [r3]
 2110 0720 7A68     		ldr	r2, [r7, #4]
 2111 0722 D31A     		subs	r3, r2, r3
 2112 0724 FA6A     		ldr	r2, [r7, #44]
 2113 0726 02FB03F3 		mul	r3, r2, r3
 2114 072a 1B14     		asrs	r3, r3, #16
 2115 072c FA6C     		ldr	r2, [r7, #76]
 2116 072e 1344     		add	r3, r3, r2
 2117 0730 FB64     		str	r3, [r7, #76]
 2118              	.L134:
 841:..\src/interruptions.c ****                 
 842:..\src/interruptions.c ****                 prev_curr_err = curr_error;
 2119              		.loc 1 842 0
 2120 0732 174A     		ldr	r2, .L159+8
 2121 0734 7B68     		ldr	r3, [r7, #4]
 2122 0736 1360     		str	r3, [r2]
 843:..\src/interruptions.c ****                 
 844:..\src/interruptions.c ****                 if (pwm_input >= 0) 
 2123              		.loc 1 844 0
 2124 0738 FB6C     		ldr	r3, [r7, #76]
 2125 073a 002B     		cmp	r3, #0
 2126 073c 03DB     		blt	.L135
 845:..\src/interruptions.c ****                     motor_dir = TRUE;
 2127              		.loc 1 845 0
 2128 073e 1A4B     		ldr	r3, .L159+32
 2129 0740 0122     		movs	r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 54


 2130 0742 1A70     		strb	r2, [r3]
 846:..\src/interruptions.c ****                 else
 847:..\src/interruptions.c ****                     motor_dir = FALSE;
 848:..\src/interruptions.c ****             }
 849:..\src/interruptions.c ****         break;
 2131              		.loc 1 849 0
 2132 0744 1EE0     		b	.L153
 2133              	.L135:
 847:..\src/interruptions.c ****             }
 2134              		.loc 1 847 0
 2135 0746 184B     		ldr	r3, .L159+32
 2136 0748 0022     		movs	r2, #0
 2137 074a 1A70     		strb	r2, [r3]
 2138              		.loc 1 849 0
 2139 074c 1AE0     		b	.L153
 2140              	.L101:
 850:..\src/interruptions.c ****         
 851:..\src/interruptions.c ****         // ================= DIRECT PWM CONTROL ================================
 852:..\src/interruptions.c ****         case CONTROL_PWM:
 853:..\src/interruptions.c **** 
 854:..\src/interruptions.c ****             pwm_input = g_ref.pwm;
 2141              		.loc 1 854 0
 2142 074e 114B     		ldr	r3, .L159+12
 2143 0750 9B68     		ldr	r3, [r3, #8]
 2144 0752 FB64     		str	r3, [r7, #76]
 855:..\src/interruptions.c **** 
 856:..\src/interruptions.c ****             if (pwm_input > 0) 
 2145              		.loc 1 856 0
 2146 0754 FB6C     		ldr	r3, [r7, #76]
 2147 0756 002B     		cmp	r3, #0
 2148 0758 03DD     		ble	.L136
 857:..\src/interruptions.c ****                 motor_dir = TRUE;
 2149              		.loc 1 857 0
 2150 075a 134B     		ldr	r3, .L159+32
 2151 075c 0122     		movs	r2, #1
 2152 075e 1A70     		strb	r2, [r3]
 2153 0760 02E0     		b	.L137
 2154              	.L136:
 858:..\src/interruptions.c ****             else 
 859:..\src/interruptions.c ****                 motor_dir = FALSE;
 2155              		.loc 1 859 0
 2156 0762 114B     		ldr	r3, .L159+32
 2157 0764 0022     		movs	r2, #0
 2158 0766 1A70     		strb	r2, [r3]
 2159              	.L137:
 860:..\src/interruptions.c ****             
 861:..\src/interruptions.c **** 
 862:..\src/interruptions.c ****             // pwm_input saturation
 863:..\src/interruptions.c ****             if (pwm_input < -PWM_MAX_VALUE) 
 2160              		.loc 1 863 0
 2161 0768 FB6C     		ldr	r3, [r7, #76]
 2162 076a 13F1640F 		cmn	r3, #100
 2163 076e 03DA     		bge	.L138
 864:..\src/interruptions.c ****                 pwm_input = -PWM_MAX_VALUE;
 2164              		.loc 1 864 0
 2165 0770 6FF06303 		mvn	r3, #99
 2166 0774 FB64     		str	r3, [r7, #76]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 55


 865:..\src/interruptions.c ****             else {
 866:..\src/interruptions.c **** 				if (pwm_input > PWM_MAX_VALUE) 
 867:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 868:..\src/interruptions.c ****         	}
 869:..\src/interruptions.c **** 
 870:..\src/interruptions.c ****         break;
 2167              		.loc 1 870 0
 2168 0776 1FE0     		b	.L154
 2169              	.L138:
 866:..\src/interruptions.c ****                 	pwm_input = PWM_MAX_VALUE;
 2170              		.loc 1 866 0
 2171 0778 FB6C     		ldr	r3, [r7, #76]
 2172 077a 642B     		cmp	r3, #100
 2173 077c 1CDD     		ble	.L154
 867:..\src/interruptions.c ****         	}
 2174              		.loc 1 867 0
 2175 077e 6423     		movs	r3, #100
 2176 0780 FB64     		str	r3, [r7, #76]
 2177              		.loc 1 870 0
 2178 0782 19E0     		b	.L154
 2179              	.L153:
 849:..\src/interruptions.c ****         
 2180              		.loc 1 849 0
 2181 0784 00BF     		nop
 2182 0786 18E0     		b	.L98
 2183              	.L160:
 2184              		.align	2
 2185              	.L159:
 2186 0788 9C000000 		.word	curr_error_sum.9897
 2187 078c 6079FEFF 		.word	-100000
 2188 0790 A0000000 		.word	prev_curr_err.9899
 2189 0794 00000000 		.word	g_ref
 2190 0798 00000000 		.word	g_meas
 2191 079c 90000000 		.word	pos_error_sum.9896
 2192 07a0 18FCFFFF 		.word	-1000
 2193 07a4 94000000 		.word	prev_pos_err.9898
 2194 07a8 98000000 		.word	motor_dir.9900
 2195 07ac 00000000 		.word	tension_valid
 2196 07b0 00000000 		.word	c_mem
 2197 07b4 A0860100 		.word	100000
 2198              	.L154:
 2199              		.loc 1 870 0
 2200 07b8 00BF     		nop
 2201              	.L98:
 871:..\src/interruptions.c ****             
 872:..\src/interruptions.c ****     }
 873:..\src/interruptions.c **** 
 874:..\src/interruptions.c ****     ////////////////////////////////////////////////////////////////////////////
 875:..\src/interruptions.c **** 
 876:..\src/interruptions.c ****     if(pwm_input >  PWM_MAX_VALUE) 
 2202              		.loc 1 876 0
 2203 07ba FB6C     		ldr	r3, [r7, #76]
 2204 07bc 642B     		cmp	r3, #100
 2205 07be 01DD     		ble	.L140
 877:..\src/interruptions.c ****         pwm_input =  PWM_MAX_VALUE;
 2206              		.loc 1 877 0
 2207 07c0 6423     		movs	r3, #100
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 56


 2208 07c2 FB64     		str	r3, [r7, #76]
 2209              	.L140:
 878:..\src/interruptions.c ****     if(pwm_input < -PWM_MAX_VALUE) 
 2210              		.loc 1 878 0
 2211 07c4 FB6C     		ldr	r3, [r7, #76]
 2212 07c6 13F1640F 		cmn	r3, #100
 2213 07ca 02DA     		bge	.L141
 879:..\src/interruptions.c ****         pwm_input = -PWM_MAX_VALUE;
 2214              		.loc 1 879 0
 2215 07cc 6FF06303 		mvn	r3, #99
 2216 07d0 FB64     		str	r3, [r7, #76]
 2217              	.L141:
 880:..\src/interruptions.c **** 
 881:..\src/interruptions.c ****     if (c_mem.control_mode != CONTROL_PWM) 
 2218              		.loc 1 881 0
 2219 07d2 194B     		ldr	r3, .L161
 2220 07d4 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 2221 07d8 012B     		cmp	r3, #1
 2222 07da 0DD0     		beq	.L142
 882:..\src/interruptions.c ****         pwm_input = (((pwm_input << 10) / PWM_MAX_VALUE) * dev_pwm_limit) >> 10;
 2223              		.loc 1 882 0
 2224 07dc FB6C     		ldr	r3, [r7, #76]
 2225 07de 9B02     		lsls	r3, r3, #10
 2226 07e0 164A     		ldr	r2, .L161+4
 2227 07e2 82FB0312 		smull	r1, r2, r2, r3
 2228 07e6 5211     		asrs	r2, r2, #5
 2229 07e8 DB17     		asrs	r3, r3, #31
 2230 07ea D31A     		subs	r3, r2, r3
 2231 07ec 144A     		ldr	r2, .L161+8
 2232 07ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 2233 07f0 02FB03F3 		mul	r3, r2, r3
 2234 07f4 9B12     		asrs	r3, r3, #10
 2235 07f6 FB64     		str	r3, [r7, #76]
 2236              	.L142:
 883:..\src/interruptions.c ****  
 884:..\src/interruptions.c ****     pwm_sign = SIGN(pwm_input);
 2237              		.loc 1 884 0
 2238 07f8 FB6C     		ldr	r3, [r7, #76]
 2239 07fa 002B     		cmp	r3, #0
 2240 07fc 01DB     		blt	.L143
 2241              		.loc 1 884 0 is_stmt 0 discriminator 1
 2242 07fe 0122     		movs	r2, #1
 2243 0800 01E0     		b	.L144
 2244              	.L143:
 2245              		.loc 1 884 0 discriminator 2
 2246 0802 4FF0FF32 		mov	r2, #-1
 2247              	.L144:
 2248              		.loc 1 884 0 discriminator 4
 2249 0806 0F4B     		ldr	r3, .L161+12
 2250 0808 1A70     		strb	r2, [r3]
 885:..\src/interruptions.c **** 
 886:..\src/interruptions.c ****     if (motor_dir)
 2251              		.loc 1 886 0 is_stmt 1 discriminator 4
 2252 080a 0F4B     		ldr	r3, .L161+16
 2253 080c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2254 080e 002B     		cmp	r3, #0
 2255 0810 03D0     		beq	.L145
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 57


 887:..\src/interruptions.c ****         MOTOR_DIR_Write(0x01);
 2256              		.loc 1 887 0
 2257 0812 0120     		movs	r0, #1
 2258 0814 FFF7FEFF 		bl	MOTOR_DIR_Write
 2259 0818 02E0     		b	.L146
 2260              	.L145:
 888:..\src/interruptions.c ****     else
 889:..\src/interruptions.c ****         MOTOR_DIR_Write(0x00);
 2261              		.loc 1 889 0
 2262 081a 0020     		movs	r0, #0
 2263 081c FFF7FEFF 		bl	MOTOR_DIR_Write
 2264              	.L146:
 890:..\src/interruptions.c **** 
 891:..\src/interruptions.c ****     PWM_MOTORS_WriteCompare(abs(pwm_input));
 2265              		.loc 1 891 0
 2266 0820 FB6C     		ldr	r3, [r7, #76]
 2267 0822 002B     		cmp	r3, #0
 2268 0824 B8BF     		it	lt
 2269 0826 5B42     		rsblt	r3, r3, #0
 2270 0828 DBB2     		uxtb	r3, r3
 2271 082a 1846     		mov	r0, r3
 2272 082c FFF7FEFF 		bl	PWM_MOTORS_WriteCompare
 892:..\src/interruptions.c **** }
 2273              		.loc 1 892 0
 2274 0830 00BF     		nop
 2275 0832 5037     		adds	r7, r7, #80
 2276              		.cfi_def_cfa_offset 8
 2277 0834 BD46     		mov	sp, r7
 2278              		.cfi_def_cfa_register 13
 2279              		@ sp needed
 2280 0836 80BD     		pop	{r7, pc}
 2281              	.L162:
 2282              		.align	2
 2283              	.L161:
 2284 0838 00000000 		.word	c_mem
 2285 083c 1F85EB51 		.word	1374389535
 2286 0840 00000000 		.word	dev_pwm_limit
 2287 0844 00000000 		.word	pwm_sign
 2288 0848 98000000 		.word	motor_dir.9900
 2289              		.cfi_endproc
 2290              	.LFE68:
 2291              		.size	motor_control, .-motor_control
 2292              		.global	__aeabi_fcmpeq
 2293              		.global	__aeabi_i2f
 2294              		.global	__aeabi_fmul
 2295              		.global	__aeabi_f2iz
 2296              		.global	__aeabi_fdiv
 2297              		.global	__aeabi_fcmplt
 2298              		.section	.text.encoder_reading_SPI,"ax",%progbits
 2299              		.align	2
 2300              		.global	encoder_reading_SPI
 2301              		.thumb
 2302              		.thumb_func
 2303              		.type	encoder_reading_SPI, %function
 2304              	encoder_reading_SPI:
 2305              	.LFB69:
 893:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 58


 894:..\src/interruptions.c **** //==============================================================================
 895:..\src/interruptions.c **** //                                                           ENCODER READING SPI
 896:..\src/interruptions.c **** //==============================================================================
 897:..\src/interruptions.c **** 
 898:..\src/interruptions.c **** void encoder_reading_SPI() {
 2306              		.loc 1 898 0
 2307              		.cfi_startproc
 2308              		@ args = 0, pretend = 0, frame = 32
 2309              		@ frame_needed = 1, uses_anonymous_args = 0
 2310 0000 90B5     		push	{r4, r7, lr}
 2311              		.cfi_def_cfa_offset 12
 2312              		.cfi_offset 4, -12
 2313              		.cfi_offset 7, -8
 2314              		.cfi_offset 14, -4
 2315 0002 89B0     		sub	sp, sp, #36
 2316              		.cfi_def_cfa_offset 48
 2317 0004 00AF     		add	r7, sp, #0
 2318              		.cfi_def_cfa_register 7
 899:..\src/interruptions.c **** 
 900:..\src/interruptions.c ****     uint8 CYDATA index = 0;
 2319              		.loc 1 900 0
 2320 0006 0023     		movs	r3, #0
 2321 0008 FB77     		strb	r3, [r7, #31]
 901:..\src/interruptions.c ****     int32 aux_encoders[N_ENCODERS];
 902:..\src/interruptions.c ****     
 903:..\src/interruptions.c ****     // Encoder Variables  
 904:..\src/interruptions.c ****     int jj = 0;
 2322              		.loc 1 904 0
 2323 000a 0023     		movs	r3, #0
 2324 000c BB61     		str	r3, [r7, #24]
 905:..\src/interruptions.c ****     int32 speed_encoder;
 906:..\src/interruptions.c ****     static int32 previous_val;
 907:..\src/interruptions.c ****     int32 aux;
 908:..\src/interruptions.c **** 	int32 init_rot = 0;
 2325              		.loc 1 908 0
 2326 000e 0023     		movs	r3, #0
 2327 0010 7B61     		str	r3, [r7, #20]
 909:..\src/interruptions.c **** 
 910:..\src/interruptions.c ****     static int32 last_value_encoder[N_ENCODERS];
 911:..\src/interruptions.c **** 
 912:..\src/interruptions.c ****     static uint8 error[N_ENCODERS];
 913:..\src/interruptions.c ****     
 914:..\src/interruptions.c ****     static CYBIT only_first_time = TRUE;
 915:..\src/interruptions.c **** 
 916:..\src/interruptions.c ****     static uint8 one_time_execute = 0;
 917:..\src/interruptions.c ****     static CYBIT pos_reconstruct = FALSE;
 918:..\src/interruptions.c **** 
 919:..\src/interruptions.c ****     static int32 v_value[N_ENCODERS];   //last value for velocity
 920:..\src/interruptions.c ****     static int32 vv_value[N_ENCODERS];  //last last value for velocity
 921:..\src/interruptions.c ****     static int32 vvv_value[N_ENCODERS];  //last last last value for velocity
 922:..\src/interruptions.c ****     
 923:..\src/interruptions.c ****     if (reset_last_value_flag) {
 2328              		.loc 1 923 0
 2329 0012 5A4B     		ldr	r3, .L196
 2330 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2331 0016 002B     		cmp	r3, #0
 2332 0018 0FD0     		beq	.L164
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 59


 924:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 2333              		.loc 1 924 0
 2334 001a 0323     		movs	r3, #3
 2335 001c BB61     		str	r3, [r7, #24]
 2336 001e 04E0     		b	.L165
 2337              	.L166:
 925:..\src/interruptions.c ****             last_value_encoder[jj] = 0;
 2338              		.loc 1 925 0
 2339 0020 574A     		ldr	r2, .L196+4
 2340 0022 BB69     		ldr	r3, [r7, #24]
 2341 0024 0021     		movs	r1, #0
 2342 0026 42F82310 		str	r1, [r2, r3, lsl #2]
 2343              	.L165:
 924:..\src/interruptions.c ****         for (jj = N_ENCODERS; jj--;) 
 2344              		.loc 1 924 0 discriminator 1
 2345 002a BB69     		ldr	r3, [r7, #24]
 2346 002c 5A1E     		subs	r2, r3, #1
 2347 002e BA61     		str	r2, [r7, #24]
 2348 0030 002B     		cmp	r3, #0
 2349 0032 F5D1     		bne	.L166
 926:..\src/interruptions.c ****         
 927:..\src/interruptions.c ****         reset_last_value_flag = 0;
 2350              		.loc 1 927 0
 2351 0034 514B     		ldr	r3, .L196
 2352 0036 0022     		movs	r2, #0
 2353 0038 1A70     		strb	r2, [r3]
 2354              	.L164:
 928:..\src/interruptions.c ****     }
 929:..\src/interruptions.c **** 
 930:..\src/interruptions.c ****     //======================================================     reading sensors
 931:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 2355              		.loc 1 931 0
 2356 003a 0023     		movs	r3, #0
 2357 003c FB77     		strb	r3, [r7, #31]
 2358 003e 0AE0     		b	.L167
 2359              	.L168:
 932:..\src/interruptions.c ****         aux_encoders[index] = 0;
 2360              		.loc 1 932 0 discriminator 3
 2361 0040 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2362 0042 9B00     		lsls	r3, r3, #2
 2363 0044 07F12002 		add	r2, r7, #32
 2364 0048 1344     		add	r3, r3, r2
 2365 004a 0022     		movs	r2, #0
 2366 004c 43F8202C 		str	r2, [r3, #-32]
 931:..\src/interruptions.c ****         aux_encoders[index] = 0;
 2367              		.loc 1 931 0 discriminator 3
 2368 0050 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2369 0052 0133     		adds	r3, r3, #1
 2370 0054 FB77     		strb	r3, [r7, #31]
 2371              	.L167:
 931:..\src/interruptions.c ****         aux_encoders[index] = 0;
 2372              		.loc 1 931 0 is_stmt 0 discriminator 1
 2373 0056 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2374 0058 022B     		cmp	r3, #2
 2375 005a F1D9     		bls	.L168
 933:..\src/interruptions.c ****     }   
 934:..\src/interruptions.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 60


 935:..\src/interruptions.c ****     encoder_read(&aux_encoders[0]);
 2376              		.loc 1 935 0 is_stmt 1
 2377 005c 3B46     		mov	r3, r7
 2378 005e 1846     		mov	r0, r3
 2379 0060 FFF7FEFF 		bl	encoder_read
 936:..\src/interruptions.c **** 
 937:..\src/interruptions.c ****     for (index = 0; index < N_ENCODERS; index++) {
 2380              		.loc 1 937 0
 2381 0064 0023     		movs	r3, #0
 2382 0066 FB77     		strb	r3, [r7, #31]
 2383 0068 EBE1     		b	.L169
 2384              	.L190:
 938:..\src/interruptions.c ****         if ( (c_mem.double_encoder_on_off && index == 2) || (!c_mem.double_encoder_on_off && index 
 2385              		.loc 1 938 0
 2386 006a 464B     		ldr	r3, .L196+8
 2387 006c 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
 2388 0070 002B     		cmp	r3, #0
 2389 0072 02D0     		beq	.L170
 2390              		.loc 1 938 0 is_stmt 0 discriminator 1
 2391 0074 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2392 0076 022B     		cmp	r3, #2
 2393 0078 07D0     		beq	.L171
 2394              	.L170:
 2395              		.loc 1 938 0 discriminator 3
 2396 007a 424B     		ldr	r3, .L196+8
 2397 007c 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
 2398 0080 002B     		cmp	r3, #0
 2399 0082 1AD1     		bne	.L172
 2400              		.loc 1 938 0 discriminator 4
 2401 0084 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2402 0086 002B     		cmp	r3, #0
 2403 0088 17D0     		beq	.L172
 2404              	.L171:
 939:..\src/interruptions.c ****             // Handle measures
 940:..\src/interruptions.c ****             aux_encoders[index] = (int16)aux_encoders[index] + g_mem.m_off[index];
 2405              		.loc 1 940 0 is_stmt 1
 2406 008a F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 2407 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2408 008e 9B00     		lsls	r3, r3, #2
 2409 0090 07F12002 		add	r2, r7, #32
 2410 0094 1344     		add	r3, r3, r2
 2411 0096 53F8203C 		ldr	r3, [r3, #-32]
 2412 009a 1BB2     		sxth	r3, r3
 2413 009c 1846     		mov	r0, r3
 2414 009e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2415 00a0 394A     		ldr	r2, .L196+12
 2416 00a2 0E33     		adds	r3, r3, #14
 2417 00a4 9B00     		lsls	r3, r3, #2
 2418 00a6 1344     		add	r3, r3, r2
 2419 00a8 5B68     		ldr	r3, [r3, #4]
 2420 00aa C218     		adds	r2, r0, r3
 2421 00ac 8B00     		lsls	r3, r1, #2
 2422 00ae 07F12001 		add	r1, r7, #32
 2423 00b2 0B44     		add	r3, r3, r1
 2424 00b4 43F8202C 		str	r2, [r3, #-32]
 2425 00b8 19E0     		b	.L173
 2426              	.L172:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 61


 941:..\src/interruptions.c ****         } 
 942:..\src/interruptions.c ****         else {
 943:..\src/interruptions.c ****             // Encoder measures has to be changed in sign due to mechanical chip positioning on Sof
 944:..\src/interruptions.c ****             aux_encoders[index] = (int16) -(aux_encoders[index]) + g_mem.m_off[index];
 2427              		.loc 1 944 0
 2428 00ba F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 2429 00bc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2430 00be 9B00     		lsls	r3, r3, #2
 2431 00c0 07F12002 		add	r2, r7, #32
 2432 00c4 1344     		add	r3, r3, r2
 2433 00c6 53F8203C 		ldr	r3, [r3, #-32]
 2434 00ca 9BB2     		uxth	r3, r3
 2435 00cc 5B42     		negs	r3, r3
 2436 00ce 9BB2     		uxth	r3, r3
 2437 00d0 1BB2     		sxth	r3, r3
 2438 00d2 1846     		mov	r0, r3
 2439 00d4 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2440 00d6 2C4A     		ldr	r2, .L196+12
 2441 00d8 0E33     		adds	r3, r3, #14
 2442 00da 9B00     		lsls	r3, r3, #2
 2443 00dc 1344     		add	r3, r3, r2
 2444 00de 5B68     		ldr	r3, [r3, #4]
 2445 00e0 C218     		adds	r2, r0, r3
 2446 00e2 8B00     		lsls	r3, r1, #2
 2447 00e4 07F12001 		add	r1, r7, #32
 2448 00e8 0B44     		add	r3, r3, r1
 2449 00ea 43F8202C 		str	r2, [r3, #-32]
 2450              	.L173:
 945:..\src/interruptions.c ****         }
 946:..\src/interruptions.c **** 
 947:..\src/interruptions.c ****         // Initialize last_value_encoder
 948:..\src/interruptions.c ****         if (only_first_time) {
 2451              		.loc 1 948 0
 2452 00ee 274B     		ldr	r3, .L196+16
 2453 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2454 00f2 002B     		cmp	r3, #0
 2455 00f4 10D0     		beq	.L174
 949:..\src/interruptions.c ****             last_value_encoder[index] = aux_encoders[index];
 2456              		.loc 1 949 0
 2457 00f6 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2458 00f8 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2459 00fa 9B00     		lsls	r3, r3, #2
 2460 00fc 07F12001 		add	r1, r7, #32
 2461 0100 0B44     		add	r3, r3, r1
 2462 0102 53F8203C 		ldr	r3, [r3, #-32]
 2463 0106 1E49     		ldr	r1, .L196+4
 2464 0108 41F82230 		str	r3, [r1, r2, lsl #2]
 950:..\src/interruptions.c ****             if (index == 2)
 2465              		.loc 1 950 0
 2466 010c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2467 010e 022B     		cmp	r3, #2
 2468 0110 02D1     		bne	.L174
 951:..\src/interruptions.c ****                 only_first_time = 0;
 2469              		.loc 1 951 0
 2470 0112 1E4B     		ldr	r3, .L196+16
 2471 0114 0022     		movs	r2, #0
 2472 0116 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 62


 2473              	.L174:
 952:..\src/interruptions.c ****         }
 953:..\src/interruptions.c **** 
 954:..\src/interruptions.c ****         // Take care of rotations
 955:..\src/interruptions.c ****         aux = aux_encoders[index] - last_value_encoder[index];
 2474              		.loc 1 955 0
 2475 0118 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2476 011a 9B00     		lsls	r3, r3, #2
 2477 011c 07F12002 		add	r2, r7, #32
 2478 0120 1344     		add	r3, r3, r2
 2479 0122 53F8202C 		ldr	r2, [r3, #-32]
 2480 0126 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2481 0128 1549     		ldr	r1, .L196+4
 2482 012a 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2483 012e D31A     		subs	r3, r2, r3
 2484 0130 3B61     		str	r3, [r7, #16]
 956:..\src/interruptions.c **** 
 957:..\src/interruptions.c ****         // ====================== 1 TURN ======================
 958:..\src/interruptions.c ****         // -32768                    0                    32767 -32768                   0         
 959:..\src/interruptions.c ****         // |-------------------------|-------------------------|-------------------------|---------
 960:..\src/interruptions.c ****         //              |                         |      |           |      |                      
 961:..\src/interruptions.c ****         //           -16384                     16383    |           |   -16384                    
 962:..\src/interruptions.c ****         //                                               |           |
 963:..\src/interruptions.c ****         //                                           24575           -24576
 964:..\src/interruptions.c ****         //                                               |___________|
 965:..\src/interruptions.c ****         //                                                   49152
 966:..\src/interruptions.c **** 
 967:..\src/interruptions.c ****         // if we are in the right interval, take care of rotation
 968:..\src/interruptions.c ****         // and update the variable only if the difference between
 969:..\src/interruptions.c ****         // one measure and another is less than 1/4 of turn
 970:..\src/interruptions.c **** 
 971:..\src/interruptions.c ****         // Considering we are sampling at 1kHz, this means that our shaft needs
 972:..\src/interruptions.c ****         // to go slower than 1/4 turn every ms -> 1 turn every 4ms
 973:..\src/interruptions.c ****         // equal to 250 turn/s -> 15000 RPM
 974:..\src/interruptions.c **** 
 975:..\src/interruptions.c ****         if (aux > 49152)
 2485              		.loc 1 975 0
 2486 0132 3B69     		ldr	r3, [r7, #16]
 2487 0134 B3F5404F 		cmp	r3, #49152
 2488 0138 0DDD     		ble	.L175
 976:..\src/interruptions.c ****             g_meas.rot[index]--;
 2489              		.loc 1 976 0
 2490 013a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2491 013c 144A     		ldr	r2, .L196+20
 2492 013e 1A44     		add	r2, r2, r3
 2493 0140 92F91420 		ldrsb	r2, [r2, #20]
 2494 0144 D2B2     		uxtb	r2, r2
 2495 0146 013A     		subs	r2, r2, #1
 2496 0148 D2B2     		uxtb	r2, r2
 2497 014a 51B2     		sxtb	r1, r2
 2498 014c 104A     		ldr	r2, .L196+20
 2499 014e 1344     		add	r3, r3, r2
 2500 0150 0A46     		mov	r2, r1
 2501 0152 1A75     		strb	r2, [r3, #20]
 2502 0154 32E0     		b	.L176
 2503              	.L175:
 977:..\src/interruptions.c ****         else{ 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 63


 978:..\src/interruptions.c ****             if (aux < -49152)
 2504              		.loc 1 978 0
 2505 0156 3B69     		ldr	r3, [r7, #16]
 2506 0158 13F5404F 		cmn	r3, #49152
 2507 015c 1ADA     		bge	.L177
 979:..\src/interruptions.c ****                 g_meas.rot[index]++;
 2508              		.loc 1 979 0
 2509 015e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2510 0160 0B4A     		ldr	r2, .L196+20
 2511 0162 1A44     		add	r2, r2, r3
 2512 0164 92F91420 		ldrsb	r2, [r2, #20]
 2513 0168 D2B2     		uxtb	r2, r2
 2514 016a 0132     		adds	r2, r2, #1
 2515 016c D2B2     		uxtb	r2, r2
 2516 016e 51B2     		sxtb	r1, r2
 2517 0170 074A     		ldr	r2, .L196+20
 2518 0172 1344     		add	r3, r3, r2
 2519 0174 0A46     		mov	r2, r1
 2520 0176 1A75     		strb	r2, [r3, #20]
 2521 0178 20E0     		b	.L176
 2522              	.L197:
 2523 017a 00BF     		.align	2
 2524              	.L196:
 2525 017c 00000000 		.word	reset_last_value_flag
 2526 0180 A4000000 		.word	last_value_encoder.9933
 2527 0184 00000000 		.word	c_mem
 2528 0188 00000000 		.word	g_mem
 2529 018c 04000000 		.word	only_first_time.9935
 2530 0190 00000000 		.word	g_meas
 2531              	.L177:
 980:..\src/interruptions.c ****             else{
 981:..\src/interruptions.c ****                 if (abs(aux) > 16384) { // if two measure are too far
 2532              		.loc 1 981 0
 2533 0194 3B69     		ldr	r3, [r7, #16]
 2534 0196 002B     		cmp	r3, #0
 2535 0198 B8BF     		it	lt
 2536 019a 5B42     		rsblt	r3, r3, #0
 2537 019c B3F5804F 		cmp	r3, #16384
 2538 01a0 0CDD     		ble	.L176
 982:..\src/interruptions.c ****                     error[index]++;
 2539              		.loc 1 982 0
 2540 01a2 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2541 01a4 AB4A     		ldr	r2, .L198
 2542 01a6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2543 01a8 0132     		adds	r2, r2, #1
 2544 01aa D1B2     		uxtb	r1, r2
 2545 01ac A94A     		ldr	r2, .L198
 2546 01ae D154     		strb	r1, [r2, r3]
 983:..\src/interruptions.c ****                     if (error[index] < 10)
 2547              		.loc 1 983 0
 2548 01b0 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2549 01b2 A84A     		ldr	r2, .L198
 2550 01b4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2551 01b6 092B     		cmp	r3, #9
 2552 01b8 40F24881 		bls	.L195
 2553              	.L176:
 984:..\src/interruptions.c ****                         // Discard
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 64


 985:..\src/interruptions.c ****                         return;
 986:..\src/interruptions.c ****                 }
 987:..\src/interruptions.c ****             }
 988:..\src/interruptions.c ****         }
 989:..\src/interruptions.c **** 
 990:..\src/interruptions.c ****         error[index] = 0;
 2554              		.loc 1 990 0
 2555 01bc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2556 01be A54A     		ldr	r2, .L198
 2557 01c0 0021     		movs	r1, #0
 2558 01c2 D154     		strb	r1, [r2, r3]
 991:..\src/interruptions.c **** 
 992:..\src/interruptions.c ****         last_value_encoder[index] = aux_encoders[index];
 2559              		.loc 1 992 0
 2560 01c4 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2561 01c6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2562 01c8 9B00     		lsls	r3, r3, #2
 2563 01ca 07F12001 		add	r1, r7, #32
 2564 01ce 0B44     		add	r3, r3, r1
 2565 01d0 53F8203C 		ldr	r3, [r3, #-32]
 2566 01d4 A049     		ldr	r1, .L198+4
 2567 01d6 41F82230 		str	r3, [r1, r2, lsl #2]
 993:..\src/interruptions.c **** 
 994:..\src/interruptions.c ****         aux_encoders[index] += (int32)g_meas.rot[index] << 16;
 2568              		.loc 1 994 0
 2569 01da F97F     		ldrb	r1, [r7, #31]	@ zero_extendqisi2
 2570 01dc FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2571 01de 9B00     		lsls	r3, r3, #2
 2572 01e0 07F12002 		add	r2, r7, #32
 2573 01e4 1344     		add	r3, r3, r2
 2574 01e6 53F8202C 		ldr	r2, [r3, #-32]
 2575 01ea FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2576 01ec 9B48     		ldr	r0, .L198+8
 2577 01ee 0344     		add	r3, r3, r0
 2578 01f0 93F91430 		ldrsb	r3, [r3, #20]
 2579 01f4 1B04     		lsls	r3, r3, #16
 2580 01f6 1A44     		add	r2, r2, r3
 2581 01f8 8B00     		lsls	r3, r1, #2
 2582 01fa 07F12001 		add	r1, r7, #32
 2583 01fe 0B44     		add	r3, r3, r1
 2584 0200 43F8202C 		str	r2, [r3, #-32]
 995:..\src/interruptions.c **** 
 996:..\src/interruptions.c ****         if (c_mem.m_mult[index] != 1.0) {
 2585              		.loc 1 996 0
 2586 0204 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2587 0206 964A     		ldr	r2, .L198+12
 2588 0208 1233     		adds	r3, r3, #18
 2589 020a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2590 020e 4FF07E51 		mov	r1, #1065353216
 2591 0212 1846     		mov	r0, r3
 2592 0214 FFF7FEFF 		bl	__aeabi_fcmpeq
 2593 0218 0346     		mov	r3, r0
 2594 021a 002B     		cmp	r3, #0
 2595 021c 1DD1     		bne	.L179
 997:..\src/interruptions.c ****             aux_encoders[index] *= c_mem.m_mult[index];
 2596              		.loc 1 997 0
 2597 021e FC7F     		ldrb	r4, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 65


 2598 0220 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2599 0222 9B00     		lsls	r3, r3, #2
 2600 0224 07F12002 		add	r2, r7, #32
 2601 0228 1344     		add	r3, r3, r2
 2602 022a 53F8203C 		ldr	r3, [r3, #-32]
 2603 022e 1846     		mov	r0, r3
 2604 0230 FFF7FEFF 		bl	__aeabi_i2f
 2605 0234 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2606 0236 8A4A     		ldr	r2, .L198+12
 2607 0238 1233     		adds	r3, r3, #18
 2608 023a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2609 023e 1946     		mov	r1, r3
 2610 0240 FFF7FEFF 		bl	__aeabi_fmul
 2611 0244 0346     		mov	r3, r0
 2612 0246 1846     		mov	r0, r3
 2613 0248 FFF7FEFF 		bl	__aeabi_f2iz
 2614 024c 0246     		mov	r2, r0
 2615 024e A300     		lsls	r3, r4, #2
 2616 0250 07F12001 		add	r1, r7, #32
 2617 0254 0B44     		add	r3, r3, r1
 2618 0256 43F8202C 		str	r2, [r3, #-32]
 2619              	.L179:
 998:..\src/interruptions.c ****         }
 999:..\src/interruptions.c ****         
1000:..\src/interruptions.c ****         previous_val = (g_meas.pos[0] >> g_mem.res[0]); 
 2620              		.loc 1 1000 0
 2621 025a 804B     		ldr	r3, .L198+8
 2622 025c 1B68     		ldr	r3, [r3]
 2623 025e 814A     		ldr	r2, .L198+16
 2624 0260 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 2625 0264 1341     		asrs	r3, r3, r2
 2626 0266 804A     		ldr	r2, .L198+20
 2627 0268 1360     		str	r3, [r2]
1001:..\src/interruptions.c **** 
1002:..\src/interruptions.c ****         g_meas.pos[index] = aux_encoders[index];
 2628              		.loc 1 1002 0
 2629 026a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2630 026c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2631 026e 9B00     		lsls	r3, r3, #2
 2632 0270 07F12001 		add	r1, r7, #32
 2633 0274 0B44     		add	r3, r3, r1
 2634 0276 53F8203C 		ldr	r3, [r3, #-32]
 2635 027a 7849     		ldr	r1, .L198+8
 2636 027c 41F82230 		str	r3, [r1, r2, lsl #2]
1003:..\src/interruptions.c **** 
1004:..\src/interruptions.c **** 
1005:..\src/interruptions.c ****         speed_encoder = (int16)filter((11*aux_encoders[index] - 18* v_value[index] + 9 * vv_value[i
 2637              		.loc 1 1005 0
 2638 0280 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2639 0282 9B00     		lsls	r3, r3, #2
 2640 0284 07F12002 		add	r2, r7, #32
 2641 0288 1344     		add	r3, r3, r2
 2642 028a 53F8202C 		ldr	r2, [r3, #-32]
 2643 028e 1346     		mov	r3, r2
 2644 0290 9B00     		lsls	r3, r3, #2
 2645 0292 1344     		add	r3, r3, r2
 2646 0294 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 66


 2647 0296 1A44     		add	r2, r2, r3
 2648 0298 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2649 029a 7449     		ldr	r1, .L198+24
 2650 029c 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2651 02a0 6FF01101 		mvn	r1, #17
 2652 02a4 01FB03F3 		mul	r3, r1, r3
 2653 02a8 D118     		adds	r1, r2, r3
 2654 02aa FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2655 02ac 704A     		ldr	r2, .L198+28
 2656 02ae 52F82320 		ldr	r2, [r2, r3, lsl #2]
 2657 02b2 1346     		mov	r3, r2
 2658 02b4 DB00     		lsls	r3, r3, #3
 2659 02b6 1344     		add	r3, r3, r2
 2660 02b8 CA18     		adds	r2, r1, r3
 2661 02ba FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2662 02bc 6D49     		ldr	r1, .L198+32
 2663 02be 51F82330 		ldr	r3, [r1, r3, lsl #2]
 2664 02c2 5B00     		lsls	r3, r3, #1
 2665 02c4 D01A     		subs	r0, r2, r3
 2666 02c6 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2667 02c8 DB00     		lsls	r3, r3, #3
 2668 02ca 6B4A     		ldr	r2, .L198+36
 2669 02cc 1344     		add	r3, r3, r2
 2670 02ce 1946     		mov	r1, r3
 2671 02d0 FFF7FEFF 		bl	filter
 2672 02d4 0346     		mov	r3, r0
 2673 02d6 1BB2     		sxth	r3, r3
 2674 02d8 FB60     		str	r3, [r7, #12]
1006:..\src/interruptions.c **** 
1007:..\src/interruptions.c ****         //Update current speed
1008:..\src/interruptions.c ****         speed_encoder = speed_encoder / (6*cycle_time);
 2675              		.loc 1 1008 0
 2676 02da F868     		ldr	r0, [r7, #12]
 2677 02dc FFF7FEFF 		bl	__aeabi_i2f
 2678 02e0 0446     		mov	r4, r0
 2679 02e2 664B     		ldr	r3, .L198+40
 2680 02e4 1B68     		ldr	r3, [r3]	@ float
 2681 02e6 6649     		ldr	r1, .L198+44
 2682 02e8 1846     		mov	r0, r3
 2683 02ea FFF7FEFF 		bl	__aeabi_fmul
 2684 02ee 0346     		mov	r3, r0
 2685 02f0 1946     		mov	r1, r3
 2686 02f2 2046     		mov	r0, r4
 2687 02f4 FFF7FEFF 		bl	__aeabi_fdiv
 2688 02f8 0346     		mov	r3, r0
 2689 02fa 1846     		mov	r0, r3
 2690 02fc FFF7FEFF 		bl	__aeabi_f2iz
 2691 0300 0346     		mov	r3, r0
 2692 0302 FB60     		str	r3, [r7, #12]
1009:..\src/interruptions.c ****         g_meas.vel[index] = speed_encoder;
 2693              		.loc 1 1009 0
 2694 0304 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2695 0306 5549     		ldr	r1, .L198+8
 2696 0308 0833     		adds	r3, r3, #8
 2697 030a FA68     		ldr	r2, [r7, #12]
 2698 030c 41F82320 		str	r2, [r1, r3, lsl #2]
1010:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 67


1011:..\src/interruptions.c ****         // update old velocity and acceleration values
1012:..\src/interruptions.c ****         vvv_value[index] = vv_value[index];
 2699              		.loc 1 1012 0
 2700 0310 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2701 0312 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2702 0314 5649     		ldr	r1, .L198+28
 2703 0316 51F82220 		ldr	r2, [r1, r2, lsl #2]
 2704 031a 5649     		ldr	r1, .L198+32
 2705 031c 41F82320 		str	r2, [r1, r3, lsl #2]
1013:..\src/interruptions.c ****         vv_value[index] = v_value[index];
 2706              		.loc 1 1013 0
 2707 0320 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2708 0322 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2709 0324 5149     		ldr	r1, .L198+24
 2710 0326 51F82220 		ldr	r2, [r1, r2, lsl #2]
 2711 032a 5149     		ldr	r1, .L198+28
 2712 032c 41F82320 		str	r2, [r1, r3, lsl #2]
1014:..\src/interruptions.c ****         v_value[index] = aux_encoders[index];
 2713              		.loc 1 1014 0
 2714 0330 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 2715 0332 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2716 0334 9B00     		lsls	r3, r3, #2
 2717 0336 07F12001 		add	r1, r7, #32
 2718 033a 0B44     		add	r3, r3, r1
 2719 033c 53F8203C 		ldr	r3, [r3, #-32]
 2720 0340 4A49     		ldr	r1, .L198+24
 2721 0342 41F82230 		str	r3, [r1, r2, lsl #2]
1015:..\src/interruptions.c **** 
1016:..\src/interruptions.c ****         // wait at least 3 * max_num_of_error (10) + 5 = 35 cycles to reconstruct the right turn
1017:..\src/interruptions.c ****         if (pos_reconstruct == FALSE){
 2722              		.loc 1 1017 0
 2723 0346 4F4B     		ldr	r3, .L198+48
 2724 0348 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2725 034a 002B     		cmp	r3, #0
 2726 034c 76D1     		bne	.L181
1018:..\src/interruptions.c ****             if (one_time_execute < 34) 
 2727              		.loc 1 1018 0
 2728 034e 4E4B     		ldr	r3, .L198+52
 2729 0350 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2730 0352 212B     		cmp	r3, #33
 2731 0354 06D8     		bhi	.L182
1019:..\src/interruptions.c ****                 one_time_execute++;
 2732              		.loc 1 1019 0
 2733 0356 4C4B     		ldr	r3, .L198+52
 2734 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2735 035a 0133     		adds	r3, r3, #1
 2736 035c DAB2     		uxtb	r2, r3
 2737 035e 4A4B     		ldr	r3, .L198+52
 2738 0360 1A70     		strb	r2, [r3]
 2739 0362 6BE0     		b	.L181
 2740              	.L182:
1020:..\src/interruptions.c ****             else {
1021:..\src/interruptions.c ****                 //Double encoder translation
1022:..\src/interruptions.c ****                 if (c_mem.double_encoder_on_off){
 2741              		.loc 1 1022 0
 2742 0364 3E4B     		ldr	r3, .L198+12
 2743 0366 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 68


 2744 036a 002B     		cmp	r3, #0
 2745 036c 19D0     		beq	.L183
1023:..\src/interruptions.c **** 
1024:..\src/interruptions.c ****                     init_rot = calc_turns_fcn(g_meas.pos[0],g_meas.pos[1]);
 2746              		.loc 1 1024 0
 2747 036e 3B4B     		ldr	r3, .L198+8
 2748 0370 1A68     		ldr	r2, [r3]
 2749 0372 3A4B     		ldr	r3, .L198+8
 2750 0374 5B68     		ldr	r3, [r3, #4]
 2751 0376 1946     		mov	r1, r3
 2752 0378 1046     		mov	r0, r2
 2753 037a FFF7FEFF 		bl	calc_turns_fcn
 2754 037e 7861     		str	r0, [r7, #20]
1025:..\src/interruptions.c ****                     
1026:..\src/interruptions.c ****                     if (c_mem.m_mult[0] < 0)
 2755              		.loc 1 1026 0
 2756 0380 374B     		ldr	r3, .L198+12
 2757 0382 9B6C     		ldr	r3, [r3, #72]	@ float
 2758 0384 4FF00001 		mov	r1, #0
 2759 0388 1846     		mov	r0, r3
 2760 038a FFF7FEFF 		bl	__aeabi_fcmplt
 2761 038e 0346     		mov	r3, r0
 2762 0390 002B     		cmp	r3, #0
 2763 0392 02D0     		beq	.L184
1027:..\src/interruptions.c ****                         init_rot = -init_rot;
 2764              		.loc 1 1027 0
 2765 0394 7B69     		ldr	r3, [r7, #20]
 2766 0396 5B42     		negs	r3, r3
 2767 0398 7B61     		str	r3, [r7, #20]
 2768              	.L184:
1028:..\src/interruptions.c ****                     
1029:..\src/interruptions.c ****                     g_meas.rot[0] = (int8)init_rot;
 2769              		.loc 1 1029 0
 2770 039a 7B69     		ldr	r3, [r7, #20]
 2771 039c 5AB2     		sxtb	r2, r3
 2772 039e 2F4B     		ldr	r3, .L198+8
 2773 03a0 1A75     		strb	r2, [r3, #20]
 2774              	.L183:
1030:..\src/interruptions.c **** 
1031:..\src/interruptions.c ****                 }
1032:..\src/interruptions.c **** 
1033:..\src/interruptions.c ****                 if (c_mem.m_mult[0] != 1.0)
 2775              		.loc 1 1033 0
 2776 03a2 2F4B     		ldr	r3, .L198+12
 2777 03a4 9B6C     		ldr	r3, [r3, #72]	@ float
 2778 03a6 4FF07E51 		mov	r1, #1065353216
 2779 03aa 1846     		mov	r0, r3
 2780 03ac FFF7FEFF 		bl	__aeabi_fcmpeq
 2781 03b0 0346     		mov	r3, r0
 2782 03b2 002B     		cmp	r3, #0
 2783 03b4 12D1     		bne	.L186
1034:..\src/interruptions.c ****                     g_meas.pos[0] /= c_mem.m_mult[0];
 2784              		.loc 1 1034 0
 2785 03b6 294B     		ldr	r3, .L198+8
 2786 03b8 1B68     		ldr	r3, [r3]
 2787 03ba 1846     		mov	r0, r3
 2788 03bc FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 69


 2789 03c0 0246     		mov	r2, r0
 2790 03c2 274B     		ldr	r3, .L198+12
 2791 03c4 9B6C     		ldr	r3, [r3, #72]	@ float
 2792 03c6 1946     		mov	r1, r3
 2793 03c8 1046     		mov	r0, r2
 2794 03ca FFF7FEFF 		bl	__aeabi_fdiv
 2795 03ce 0346     		mov	r3, r0
 2796 03d0 1846     		mov	r0, r3
 2797 03d2 FFF7FEFF 		bl	__aeabi_f2iz
 2798 03d6 0246     		mov	r2, r0
 2799 03d8 204B     		ldr	r3, .L198+8
 2800 03da 1A60     		str	r2, [r3]
 2801              	.L186:
1035:..\src/interruptions.c ****                 
1036:..\src/interruptions.c ****                 g_meas.pos[0] += (int32)(init_rot << 16);
 2802              		.loc 1 1036 0
 2803 03dc 1F4B     		ldr	r3, .L198+8
 2804 03de 1A68     		ldr	r2, [r3]
 2805 03e0 7B69     		ldr	r3, [r7, #20]
 2806 03e2 1B04     		lsls	r3, r3, #16
 2807 03e4 1344     		add	r3, r3, r2
 2808 03e6 1D4A     		ldr	r2, .L198+8
 2809 03e8 1360     		str	r3, [r2]
1037:..\src/interruptions.c ****                 
1038:..\src/interruptions.c ****                 if (c_mem.m_mult[0] != 1)
 2810              		.loc 1 1038 0
 2811 03ea 1D4B     		ldr	r3, .L198+12
 2812 03ec 9B6C     		ldr	r3, [r3, #72]	@ float
 2813 03ee 4FF07E51 		mov	r1, #1065353216
 2814 03f2 1846     		mov	r0, r3
 2815 03f4 FFF7FEFF 		bl	__aeabi_fcmpeq
 2816 03f8 0346     		mov	r3, r0
 2817 03fa 002B     		cmp	r3, #0
 2818 03fc 12D1     		bne	.L188
1039:..\src/interruptions.c ****                     g_meas.pos[0] *= c_mem.m_mult[0];
 2819              		.loc 1 1039 0
 2820 03fe 174B     		ldr	r3, .L198+8
 2821 0400 1B68     		ldr	r3, [r3]
 2822 0402 1846     		mov	r0, r3
 2823 0404 FFF7FEFF 		bl	__aeabi_i2f
 2824 0408 0246     		mov	r2, r0
 2825 040a 154B     		ldr	r3, .L198+12
 2826 040c 9B6C     		ldr	r3, [r3, #72]	@ float
 2827 040e 1946     		mov	r1, r3
 2828 0410 1046     		mov	r0, r2
 2829 0412 FFF7FEFF 		bl	__aeabi_fmul
 2830 0416 0346     		mov	r3, r0
 2831 0418 1846     		mov	r0, r3
 2832 041a FFF7FEFF 		bl	__aeabi_f2iz
 2833 041e 0246     		mov	r2, r0
 2834 0420 0E4B     		ldr	r3, .L198+8
 2835 0422 1A60     		str	r2, [r3]
 2836              	.L188:
1040:..\src/interruptions.c ****                         
1041:..\src/interruptions.c ****                 g_refNew.pos = g_meas.pos[0];
 2837              		.loc 1 1041 0
 2838 0424 0D4B     		ldr	r3, .L198+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 70


 2839 0426 1B68     		ldr	r3, [r3]
 2840 0428 184A     		ldr	r2, .L198+56
 2841 042a 1360     		str	r3, [r2]
1042:..\src/interruptions.c **** 
1043:..\src/interruptions.c ****                 // If necessary activate motor
1044:..\src/interruptions.c ****                 MOTOR_ON_OFF_Write(g_ref.onoff);
 2842              		.loc 1 1044 0
 2843 042c 184B     		ldr	r3, .L198+60
 2844 042e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 2845 0430 1846     		mov	r0, r3
 2846 0432 FFF7FEFF 		bl	MOTOR_ON_OFF_Write
1045:..\src/interruptions.c ****                 
1046:..\src/interruptions.c ****                 pos_reconstruct = TRUE;
 2847              		.loc 1 1046 0
 2848 0436 134B     		ldr	r3, .L198+48
 2849 0438 0122     		movs	r2, #1
 2850 043a 1A70     		strb	r2, [r3]
 2851              	.L181:
 937:..\src/interruptions.c ****         if ( (c_mem.double_encoder_on_off && index == 2) || (!c_mem.double_encoder_on_off && index 
 2852              		.loc 1 937 0 discriminator 2
 2853 043c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2854 043e 0133     		adds	r3, r3, #1
 2855 0440 FB77     		strb	r3, [r7, #31]
 2856              	.L169:
 937:..\src/interruptions.c ****         if ( (c_mem.double_encoder_on_off && index == 2) || (!c_mem.double_encoder_on_off && index 
 2857              		.loc 1 937 0 is_stmt 0 discriminator 1
 2858 0442 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2859 0444 022B     		cmp	r3, #2
 2860 0446 7FF610AE 		bls	.L190
 2861 044a 00E0     		b	.L163
 2862              	.L195:
 985:..\src/interruptions.c ****                 }
 2863              		.loc 1 985 0 is_stmt 1
 2864 044c 00BF     		nop
 2865              	.L163:
1047:..\src/interruptions.c ****             }
1048:..\src/interruptions.c ****         }
1049:..\src/interruptions.c ****     }    
1050:..\src/interruptions.c **** }
 2866              		.loc 1 1050 0
 2867 044e 2437     		adds	r7, r7, #36
 2868              		.cfi_def_cfa_offset 12
 2869 0450 BD46     		mov	sp, r7
 2870              		.cfi_def_cfa_register 13
 2871              		@ sp needed
 2872 0452 90BD     		pop	{r4, r7, pc}
 2873              	.L199:
 2874              		.align	2
 2875              	.L198:
 2876 0454 B0000000 		.word	error.9934
 2877 0458 A4000000 		.word	last_value_encoder.9933
 2878 045c 00000000 		.word	g_meas
 2879 0460 00000000 		.word	c_mem
 2880 0464 00000000 		.word	g_mem
 2881 0468 B4000000 		.word	previous_val.9930
 2882 046c B8000000 		.word	v_value.9938
 2883 0470 C4000000 		.word	vv_value.9939
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 71


 2884 0474 D0000000 		.word	vvv_value.9940
 2885 0478 00000000 		.word	filt_vel
 2886 047c 00000000 		.word	cycle_time
 2887 0480 0000C040 		.word	1086324736
 2888 0484 DC000000 		.word	pos_reconstruct.9937
 2889 0488 DD000000 		.word	one_time_execute.9936
 2890 048c 00000000 		.word	g_refNew
 2891 0490 00000000 		.word	g_ref
 2892              		.cfi_endproc
 2893              	.LFE69:
 2894              		.size	encoder_reading_SPI, .-encoder_reading_SPI
 2895              		.section	.text.analog_read_end,"ax",%progbits
 2896              		.align	2
 2897              		.global	analog_read_end
 2898              		.thumb
 2899              		.thumb_func
 2900              		.type	analog_read_end, %function
 2901              	analog_read_end:
 2902              	.LFB70:
1051:..\src/interruptions.c **** 
1052:..\src/interruptions.c **** //==============================================================================
1053:..\src/interruptions.c **** //                                                           ANALOG MEASUREMENTS
1054:..\src/interruptions.c **** //==============================================================================
1055:..\src/interruptions.c **** 
1056:..\src/interruptions.c **** void analog_read_end() {
 2903              		.loc 1 1056 0
 2904              		.cfi_startproc
 2905              		@ args = 0, pretend = 0, frame = 8
 2906              		@ frame_needed = 1, uses_anonymous_args = 0
 2907 0000 90B5     		push	{r4, r7, lr}
 2908              		.cfi_def_cfa_offset 12
 2909              		.cfi_offset 4, -12
 2910              		.cfi_offset 7, -8
 2911              		.cfi_offset 14, -4
 2912 0002 83B0     		sub	sp, sp, #12
 2913              		.cfi_def_cfa_offset 24
 2914 0004 00AF     		add	r7, sp, #0
 2915              		.cfi_def_cfa_register 7
1057:..\src/interruptions.c **** 
1058:..\src/interruptions.c ****     /* =========================================================================
1059:..\src/interruptions.c ****     /   Ideal formulation to calculate tension and current
1060:..\src/interruptions.c ****     /
1061:..\src/interruptions.c ****     /   tension = ((read_value_mV - offset) * 101) / gain -> [mV]
1062:..\src/interruptions.c ****     /   current = ((read_value_mV - offset) * 375) / (gain * resistor) -> [mA]
1063:..\src/interruptions.c ****     /
1064:..\src/interruptions.c ****     /   Definition:
1065:..\src/interruptions.c ****     /   read_value_mV = counts_read / 0.819 -> conversion from counts to mV
1066:..\src/interruptions.c ****     /   offset = 2000 -> hardware amplifier bias in mV
1067:..\src/interruptions.c ****     /   gain = 8.086 -> amplifier gain
1068:..\src/interruptions.c ****     /   resistor = 18 -> resistor of voltage divider in KOhm 
1069:..\src/interruptions.c ****     /
1070:..\src/interruptions.c ****     /   Real formulation: tradeoff in good performance and accurancy, ADC_buf[] 
1071:..\src/interruptions.c ****     /   and offset unit of measurment is counts, instead dev_tension and
1072:..\src/interruptions.c ****     /   g_meas.curr[] are converted in properly unit.
1073:..\src/interruptions.c ****     /  =========================================================================
1074:..\src/interruptions.c ****     */
1075:..\src/interruptions.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 72


1076:..\src/interruptions.c ****     int32 CYDATA i_aux;
1077:..\src/interruptions.c **** 
1078:..\src/interruptions.c ****     static uint16 emg_counter_1 = 0;
1079:..\src/interruptions.c ****     static uint16 emg_counter_2 = 0;
1080:..\src/interruptions.c **** 	static uint8 first_tension_valid = TRUE;
1081:..\src/interruptions.c ****     static int32 pow_tension = 12000;       //12000 mV (12 V)
1082:..\src/interruptions.c ****     static uint16 count = 0;
1083:..\src/interruptions.c ****     static uint32 v_count = 0;
1084:..\src/interruptions.c ****     
1085:..\src/interruptions.c ****     // Wait for conversion end
1086:..\src/interruptions.c ****     
1087:..\src/interruptions.c ****     while(!ADC_STATUS_Read()){
 2916              		.loc 1 1087 0
 2917 0006 08E0     		b	.L201
 2918              	.L202:
1088:..\src/interruptions.c ****         if (interrupt_flag){
 2919              		.loc 1 1088 0
 2920 0008 AB4B     		ldr	r3, .L274
 2921 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2922 000c 002B     		cmp	r3, #0
 2923 000e 04D0     		beq	.L201
1089:..\src/interruptions.c ****             interrupt_flag = FALSE;
 2924              		.loc 1 1089 0
 2925 0010 A94B     		ldr	r3, .L274
 2926 0012 0022     		movs	r2, #0
 2927 0014 1A70     		strb	r2, [r3]
1090:..\src/interruptions.c ****             interrupt_manager();
 2928              		.loc 1 1090 0
 2929 0016 FFF7FEFF 		bl	interrupt_manager
 2930              	.L201:
1087:..\src/interruptions.c ****         if (interrupt_flag){
 2931              		.loc 1 1087 0
 2932 001a FFF7FEFF 		bl	ADC_STATUS_Read
 2933 001e 0346     		mov	r3, r0
 2934 0020 002B     		cmp	r3, #0
 2935 0022 F1D0     		beq	.L202
1091:..\src/interruptions.c ****         }
1092:..\src/interruptions.c ****     }
1093:..\src/interruptions.c ****     
1094:..\src/interruptions.c ****     // Convert tension read
1095:..\src/interruptions.c ****     dev_tension = ((int32)(ADC_buf[0] - 1621) * 1990) >> 7;
 2936              		.loc 1 1095 0
 2937 0024 A54B     		ldr	r3, .L274+4
 2938 0026 B3F90030 		ldrsh	r3, [r3]
 2939 002a A3F25563 		subw	r3, r3, #1621
 2940 002e 40F2C672 		movw	r2, #1990
 2941 0032 02FB03F3 		mul	r3, r2, r3
 2942 0036 DB11     		asrs	r3, r3, #7
 2943 0038 A14A     		ldr	r2, .L274+8
 2944 003a 1360     		str	r3, [r2]
1096:..\src/interruptions.c ****     
1097:..\src/interruptions.c ****     if (interrupt_flag){
 2945              		.loc 1 1097 0
 2946 003c 9E4B     		ldr	r3, .L274
 2947 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2948 0040 002B     		cmp	r3, #0
 2949 0042 04D0     		beq	.L203
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 73


1098:..\src/interruptions.c ****         interrupt_flag = FALSE;                                                                    
 2950              		.loc 1 1098 0
 2951 0044 9C4B     		ldr	r3, .L274
 2952 0046 0022     		movs	r2, #0
 2953 0048 1A70     		strb	r2, [r3]
1099:..\src/interruptions.c ****         interrupt_manager();
 2954              		.loc 1 1099 0
 2955 004a FFF7FEFF 		bl	interrupt_manager
 2956              	.L203:
1100:..\src/interruptions.c ****     }
1101:..\src/interruptions.c ****     
1102:..\src/interruptions.c **** 	if (first_tension_valid && tension_valid) {
 2957              		.loc 1 1102 0
 2958 004e 9D4B     		ldr	r3, .L274+12
 2959 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2960 0052 002B     		cmp	r3, #0
 2961 0054 2BD0     		beq	.L204
 2962              		.loc 1 1102 0 is_stmt 0 discriminator 1
 2963 0056 9C4B     		ldr	r3, .L274+16
 2964 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2965 005a 002B     		cmp	r3, #0
 2966 005c 27D0     		beq	.L204
1103:..\src/interruptions.c ****         count = count + 1;
 2967              		.loc 1 1103 0 is_stmt 1
 2968 005e 9B4B     		ldr	r3, .L274+20
 2969 0060 1B88     		ldrh	r3, [r3]
 2970 0062 0133     		adds	r3, r3, #1
 2971 0064 9AB2     		uxth	r2, r3
 2972 0066 994B     		ldr	r3, .L274+20
 2973 0068 1A80     		strh	r2, [r3]	@ movhi
1104:..\src/interruptions.c ****         
1105:..\src/interruptions.c ****         if (count == 1000){
 2974              		.loc 1 1105 0
 2975 006a 984B     		ldr	r3, .L274+20
 2976 006c 1B88     		ldrh	r3, [r3]
 2977 006e B3F57A7F 		cmp	r3, #1000
 2978 0072 1CD1     		bne	.L204
1106:..\src/interruptions.c ****             if (dev_tension < 9000) {   // 8 V case
 2979              		.loc 1 1106 0
 2980 0074 924B     		ldr	r3, .L274+8
 2981 0076 1B68     		ldr	r3, [r3]
 2982 0078 42F22732 		movw	r2, #8999
 2983 007c 9342     		cmp	r3, r2
 2984 007e 04DC     		bgt	.L205
1107:..\src/interruptions.c ****                 pow_tension = 8000;
 2985              		.loc 1 1107 0
 2986 0080 934B     		ldr	r3, .L274+24
 2987 0082 4FF4FA52 		mov	r2, #8000
 2988 0086 1A60     		str	r2, [r3]
 2989 0088 0EE0     		b	.L206
 2990              	.L205:
1108:..\src/interruptions.c ****             }
1109:..\src/interruptions.c ****             else {      // 12 V - 24 V cases
1110:..\src/interruptions.c ****                 if (dev_tension < 13000) {
 2991              		.loc 1 1110 0
 2992 008a 8D4B     		ldr	r3, .L274+8
 2993 008c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 74


 2994 008e 43F2C722 		movw	r2, #12999
 2995 0092 9342     		cmp	r3, r2
 2996 0094 04DC     		bgt	.L207
1111:..\src/interruptions.c ****                     pow_tension = 12000;
 2997              		.loc 1 1111 0
 2998 0096 8E4B     		ldr	r3, .L274+24
 2999 0098 42F6E062 		movw	r2, #12000
 3000 009c 1A60     		str	r2, [r3]
 3001 009e 03E0     		b	.L206
 3002              	.L207:
1112:..\src/interruptions.c ****                 }
1113:..\src/interruptions.c ****                 else
1114:..\src/interruptions.c ****                     pow_tension = 24000;
 3003              		.loc 1 1114 0
 3004 00a0 8B4B     		ldr	r3, .L274+24
 3005 00a2 45F6C052 		movw	r2, #24000
 3006 00a6 1A60     		str	r2, [r3]
 3007              	.L206:
1115:..\src/interruptions.c ****             }
1116:..\src/interruptions.c **** 
1117:..\src/interruptions.c ****             first_tension_valid = FALSE;
 3008              		.loc 1 1117 0
 3009 00a8 864B     		ldr	r3, .L274+12
 3010 00aa 0022     		movs	r2, #0
 3011 00ac 1A70     		strb	r2, [r3]
 3012              	.L204:
1118:..\src/interruptions.c ****         }
1119:..\src/interruptions.c ****     }
1120:..\src/interruptions.c **** 
1121:..\src/interruptions.c ****     // Until there is no valid input tension repeat this measurement
1122:..\src/interruptions.c **** 
1123:..\src/interruptions.c ****     if (dev_tension < 7000) {
 3013              		.loc 1 1123 0
 3014 00ae 844B     		ldr	r3, .L274+8
 3015 00b0 1B68     		ldr	r3, [r3]
 3016 00b2 41F65732 		movw	r2, #6999
 3017 00b6 9342     		cmp	r3, r2
 3018 00b8 3ADC     		bgt	.L208
1124:..\src/interruptions.c ****         // PSoC is powered through uUSB
1125:..\src/interruptions.c **** 
1126:..\src/interruptions.c ****         tension_valid = FALSE;
 3019              		.loc 1 1126 0
 3020 00ba 834B     		ldr	r3, .L274+16
 3021 00bc 0022     		movs	r2, #0
 3022 00be 1A70     		strb	r2, [r3]
1127:..\src/interruptions.c ****             
1128:..\src/interruptions.c ****         if (interrupt_flag){
 3023              		.loc 1 1128 0
 3024 00c0 7D4B     		ldr	r3, .L274
 3025 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3026 00c4 002B     		cmp	r3, #0
 3027 00c6 04D0     		beq	.L209
1129:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3028              		.loc 1 1129 0
 3029 00c8 7B4B     		ldr	r3, .L274
 3030 00ca 0022     		movs	r2, #0
 3031 00cc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 75


1130:..\src/interruptions.c ****             interrupt_manager();
 3032              		.loc 1 1130 0
 3033 00ce FFF7FEFF 		bl	interrupt_manager
 3034              	.L209:
1131:..\src/interruptions.c ****         }
1132:..\src/interruptions.c ****         
1133:..\src/interruptions.c ****         if (c_mem.emg_calibration_flag) {
 3035              		.loc 1 1133 0
 3036 00d2 804B     		ldr	r3, .L274+28
 3037 00d4 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 3038 00d8 002B     		cmp	r3, #0
 3039 00da 1BD0     		beq	.L210
1134:..\src/interruptions.c ****             if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3040              		.loc 1 1134 0
 3041 00dc 7D4B     		ldr	r3, .L274+28
 3042 00de 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 3043 00e2 022B     		cmp	r3, #2
 3044 00e4 0ED0     		beq	.L211
1135:..\src/interruptions.c ****                 (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3045              		.loc 1 1135 0 discriminator 1
 3046 00e6 7B4B     		ldr	r3, .L274+28
 3047 00e8 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1134:..\src/interruptions.c ****             if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3048              		.loc 1 1134 0 discriminator 1
 3049 00ec 032B     		cmp	r3, #3
 3050 00ee 09D0     		beq	.L211
1136:..\src/interruptions.c ****                 (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3051              		.loc 1 1136 0
 3052 00f0 784B     		ldr	r3, .L274+28
 3053 00f2 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1135:..\src/interruptions.c ****                 (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3054              		.loc 1 1135 0
 3055 00f6 042B     		cmp	r3, #4
 3056 00f8 04D0     		beq	.L211
1137:..\src/interruptions.c ****                 (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 3057              		.loc 1 1137 0
 3058 00fa 764B     		ldr	r3, .L274+28
 3059 00fc 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1136:..\src/interruptions.c ****                 (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3060              		.loc 1 1136 0
 3061 0100 052B     		cmp	r3, #5
 3062 0102 07D1     		bne	.L210
 3063              	.L211:
1138:..\src/interruptions.c ****                 g_ref.onoff = 0x00;
 3064              		.loc 1 1138 0
 3065 0104 744B     		ldr	r3, .L274+32
 3066 0106 0022     		movs	r2, #0
 3067 0108 1A73     		strb	r2, [r3, #12]
1139:..\src/interruptions.c ****                 MOTOR_ON_OFF_Write(g_ref.onoff);
 3068              		.loc 1 1139 0
 3069 010a 734B     		ldr	r3, .L274+32
 3070 010c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3071 010e 1846     		mov	r0, r3
 3072 0110 FFF7FEFF 		bl	MOTOR_ON_OFF_Write
 3073              	.L210:
1140:..\src/interruptions.c ****             }
1141:..\src/interruptions.c ****         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 76


1142:..\src/interruptions.c ****         
1143:..\src/interruptions.c ****         // Assign dev_tension     
1144:..\src/interruptions.c ****         dev_tension = 5000;
 3074              		.loc 1 1144 0
 3075 0114 6A4B     		ldr	r3, .L274+8
 3076 0116 41F28832 		movw	r2, #5000
 3077 011a 1A60     		str	r2, [r3]
1145:..\src/interruptions.c **** 
1146:..\src/interruptions.c ****         // Reset current
1147:..\src/interruptions.c ****         g_meas.curr = 0;
 3078              		.loc 1 1147 0
 3079 011c 6F4B     		ldr	r3, .L274+36
 3080 011e 0022     		movs	r2, #0
 3081 0120 DA60     		str	r2, [r3, #12]
1148:..\src/interruptions.c **** 
1149:..\src/interruptions.c ****         // Reset emg
1150:..\src/interruptions.c ****         g_meas.emg[0] = 0;
 3082              		.loc 1 1150 0
 3083 0122 6E4B     		ldr	r3, .L274+36
 3084 0124 0022     		movs	r2, #0
 3085 0126 9A61     		str	r2, [r3, #24]
1151:..\src/interruptions.c ****         g_meas.emg[1] = 0;
 3086              		.loc 1 1151 0
 3087 0128 6C4B     		ldr	r3, .L274+36
 3088 012a 0022     		movs	r2, #0
 3089 012c DA61     		str	r2, [r3, #28]
 3090 012e 69E0     		b	.L212
 3091              	.L208:
1152:..\src/interruptions.c ****         
1153:..\src/interruptions.c ****     }
1154:..\src/interruptions.c ****     else {
1155:..\src/interruptions.c ****         // PSoC is powered through battery or power source
1156:..\src/interruptions.c ****         // (at least > 7.36 V (92% of 8 V) that is minimum charge of smallest battery)
1157:..\src/interruptions.c ****         
1158:..\src/interruptions.c ****         // Read ADC sampled value of power source tension and motor current
1159:..\src/interruptions.c ****         
1160:..\src/interruptions.c ****         if (v_count == 1000 && !tension_valid){
 3092              		.loc 1 1160 0
 3093 0130 6B4B     		ldr	r3, .L274+40
 3094 0132 1B68     		ldr	r3, [r3]
 3095 0134 B3F57A7F 		cmp	r3, #1000
 3096 0138 0AD1     		bne	.L213
 3097              		.loc 1 1160 0 is_stmt 0 discriminator 1
 3098 013a 634B     		ldr	r3, .L274+16
 3099 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3100 013e 002B     		cmp	r3, #0
 3101 0140 06D1     		bne	.L213
1161:..\src/interruptions.c ****             // After 1000 v_count cycles, dev_tension_f is stable
1162:..\src/interruptions.c ****             tension_valid = TRUE;   
 3102              		.loc 1 1162 0 is_stmt 1
 3103 0142 614B     		ldr	r3, .L274+16
 3104 0144 0122     		movs	r2, #1
 3105 0146 1A70     		strb	r2, [r3]
1163:..\src/interruptions.c ****             count = 0;
 3106              		.loc 1 1163 0
 3107 0148 604B     		ldr	r3, .L274+20
 3108 014a 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 77


 3109 014c 1A80     		strh	r2, [r3]	@ movhi
 3110 014e 0DE0     		b	.L214
 3111              	.L213:
1164:..\src/interruptions.c ****         }
1165:..\src/interruptions.c ****         else {  
1166:..\src/interruptions.c ****             // wait for battery voltage stabilization
1167:..\src/interruptions.c ****             v_count = v_count + 1;
 3112              		.loc 1 1167 0
 3113 0150 634B     		ldr	r3, .L274+40
 3114 0152 1B68     		ldr	r3, [r3]
 3115 0154 0133     		adds	r3, r3, #1
 3116 0156 624A     		ldr	r2, .L274+40
 3117 0158 1360     		str	r3, [r2]
1168:..\src/interruptions.c ****             dev_tension_f = filter(dev_tension, &filt_v);
 3118              		.loc 1 1168 0
 3119 015a 594B     		ldr	r3, .L274+8
 3120 015c 1B68     		ldr	r3, [r3]
 3121 015e 6149     		ldr	r1, .L274+44
 3122 0160 1846     		mov	r0, r3
 3123 0162 FFF7FEFF 		bl	filter
 3124 0166 0246     		mov	r2, r0
 3125 0168 5F4B     		ldr	r3, .L274+48
 3126 016a 1A60     		str	r2, [r3]
 3127              	.L214:
1169:..\src/interruptions.c ****         }
1170:..\src/interruptions.c **** 
1171:..\src/interruptions.c ****         if(g_mem.activate_pwm_rescaling)        //pwm rescaling is activated
 3128              		.loc 1 1171 0
 3129 016c 5F4B     		ldr	r3, .L274+52
 3130 016e 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 3131 0172 002B     		cmp	r3, #0
 3132 0174 01D0     		beq	.L215
1172:..\src/interruptions.c ****             pwm_limit_search();                 //only for 12V motor
 3133              		.loc 1 1172 0
 3134 0176 FFF7FEFF 		bl	pwm_limit_search
 3135              	.L215:
1173:..\src/interruptions.c **** 
1174:..\src/interruptions.c ****         // Filter and Set currents
1175:..\src/interruptions.c ****         g_meas.curr = filter((int16) (((int32)(ADC_buf[1] - 1648) * 22634) >> 13) * pwm_sign, &filt
 3136              		.loc 1 1175 0
 3137 017a 504B     		ldr	r3, .L274+4
 3138 017c B3F90230 		ldrsh	r3, [r3, #2]
 3139 0180 A3F5CE63 		sub	r3, r3, #1648
 3140 0184 45F66A02 		movw	r2, #22634
 3141 0188 02FB03F3 		mul	r3, r2, r3
 3142 018c 5B13     		asrs	r3, r3, #13
 3143 018e 1BB2     		sxth	r3, r3
 3144 0190 1A46     		mov	r2, r3
 3145 0192 574B     		ldr	r3, .L274+56
 3146 0194 93F90030 		ldrsb	r3, [r3]
 3147 0198 03FB02F3 		mul	r3, r3, r2
 3148 019c 5549     		ldr	r1, .L274+60
 3149 019e 1846     		mov	r0, r3
 3150 01a0 FFF7FEFF 		bl	filter
 3151 01a4 0246     		mov	r2, r0
 3152 01a6 4D4B     		ldr	r3, .L274+36
 3153 01a8 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 78


1176:..\src/interruptions.c ****         
1177:..\src/interruptions.c **** 		// Calculate current estimation and put it in the second part of the current measurement array;
1178:..\src/interruptions.c **** 		g_meas.estim_curr = (int16) filter(((int32) g_meas.curr) - curr_estim(g_meas.pos[0] >> g_mem.res[
 3154              		.loc 1 1178 0
 3155 01aa 4C4B     		ldr	r3, .L274+36
 3156 01ac DC68     		ldr	r4, [r3, #12]
 3157 01ae 4B4B     		ldr	r3, .L274+36
 3158 01b0 1B68     		ldr	r3, [r3]
 3159 01b2 4E4A     		ldr	r2, .L274+52
 3160 01b4 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3161 01b8 43FA02F0 		asr	r0, r3, r2
 3162 01bc 474B     		ldr	r3, .L274+36
 3163 01be 1B6A     		ldr	r3, [r3, #32]
 3164 01c0 4A4A     		ldr	r2, .L274+52
 3165 01c2 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3166 01c6 43FA02F1 		asr	r1, r3, r2
 3167 01ca 434B     		ldr	r3, .L274+32
 3168 01cc 1B68     		ldr	r3, [r3]
 3169 01ce 474A     		ldr	r2, .L274+52
 3170 01d0 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 3171 01d4 1341     		asrs	r3, r3, r2
 3172 01d6 1A46     		mov	r2, r3
 3173 01d8 FFF7FEFF 		bl	curr_estim
 3174 01dc 0346     		mov	r3, r0
 3175 01de E31A     		subs	r3, r4, r3
 3176 01e0 4549     		ldr	r1, .L274+64
 3177 01e2 1846     		mov	r0, r3
 3178 01e4 FFF7FEFF 		bl	filter
 3179 01e8 0346     		mov	r3, r0
 3180 01ea 1BB2     		sxth	r3, r3
 3181 01ec 1A46     		mov	r2, r3
 3182 01ee 3B4B     		ldr	r3, .L274+36
 3183 01f0 1A61     		str	r2, [r3, #16]
1179:..\src/interruptions.c **** 
1180:..\src/interruptions.c ****         // Check Interrupt 
1181:..\src/interruptions.c ****     
1182:..\src/interruptions.c ****         if (interrupt_flag){
 3184              		.loc 1 1182 0
 3185 01f2 314B     		ldr	r3, .L274
 3186 01f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 01f6 002B     		cmp	r3, #0
 3188 01f8 04D0     		beq	.L212
1183:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3189              		.loc 1 1183 0
 3190 01fa 2F4B     		ldr	r3, .L274
 3191 01fc 0022     		movs	r2, #0
 3192 01fe 1A70     		strb	r2, [r3]
1184:..\src/interruptions.c ****             interrupt_manager();
 3193              		.loc 1 1184 0
 3194 0200 FFF7FEFF 		bl	interrupt_manager
 3195              	.L212:
1185:..\src/interruptions.c ****         }
1186:..\src/interruptions.c **** 
1187:..\src/interruptions.c ****     }
1188:..\src/interruptions.c ****     
1189:..\src/interruptions.c ****     
1190:..\src/interruptions.c ****     // Read EMG (if necessary)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 79


1191:..\src/interruptions.c ****     if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3196              		.loc 1 1191 0
 3197 0204 334B     		ldr	r3, .L274+28
 3198 0206 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 3199 020a 022B     		cmp	r3, #2
 3200 020c 0FD0     		beq	.L216
1192:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3201              		.loc 1 1192 0 discriminator 1
 3202 020e 314B     		ldr	r3, .L274+28
 3203 0210 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1191:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3204              		.loc 1 1191 0 discriminator 1
 3205 0214 032B     		cmp	r3, #3
 3206 0216 0AD0     		beq	.L216
1193:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3207              		.loc 1 1193 0
 3208 0218 2E4B     		ldr	r3, .L274+28
 3209 021a 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1192:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3210              		.loc 1 1192 0
 3211 021e 042B     		cmp	r3, #4
 3212 0220 05D0     		beq	.L216
1194:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 3213              		.loc 1 1194 0
 3214 0222 2C4B     		ldr	r3, .L274+28
 3215 0224 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1193:..\src/interruptions.c ****         (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3216              		.loc 1 1193 0
 3217 0228 052B     		cmp	r3, #5
 3218 022a 40F05282 		bne	.L264
 3219              	.L216:
1195:..\src/interruptions.c ****         
1196:..\src/interruptions.c ****         // if calibration is not needed go to "normal execution"
1197:..\src/interruptions.c ****         if (!c_mem.emg_calibration_flag){
 3220              		.loc 1 1197 0
 3221 022e 294B     		ldr	r3, .L274+28
 3222 0230 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 3223 0234 002B     		cmp	r3, #0
 3224 0236 05D1     		bne	.L218
1198:..\src/interruptions.c ****             emg_1_status = NORMAL; // normal execution
 3225              		.loc 1 1198 0
 3226 0238 304B     		ldr	r3, .L274+68
 3227 023a 0022     		movs	r2, #0
 3228 023c 1A70     		strb	r2, [r3]
1199:..\src/interruptions.c ****             emg_2_status = NORMAL; // normal execution
 3229              		.loc 1 1199 0
 3230 023e 304B     		ldr	r3, .L274+72
 3231 0240 0022     		movs	r2, #0
 3232 0242 1A70     		strb	r2, [r3]
 3233              	.L218:
1200:..\src/interruptions.c ****         }
1201:..\src/interruptions.c **** 
1202:..\src/interruptions.c ****         // EMG 1 calibration state machine
1203:..\src/interruptions.c ****        
1204:..\src/interruptions.c ****         // Calibration state machine
1205:..\src/interruptions.c ****         switch(emg_1_status) {
 3234              		.loc 1 1205 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 80


 3235 0244 2D4B     		ldr	r3, .L274+68
 3236 0246 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3237 0248 032B     		cmp	r3, #3
 3238 024a 00F2EB80 		bhi	.L265
 3239 024e 01A2     		adr	r2, .L221
 3240 0250 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3241              		.p2align 2
 3242              	.L221:
 3243 0254 65020000 		.word	.L220+1
 3244 0258 33030000 		.word	.L222+1
 3245 025c 47030000 		.word	.L223+1
 3246 0260 83030000 		.word	.L224+1
 3247              		.p2align 1
 3248              	.L220:
1206:..\src/interruptions.c ****             case NORMAL: // normal execution
1207:..\src/interruptions.c ****                 //i_aux = ((int32)(ADC_buf[2 + c_mem.switch_emg] - 1639) * 87) >> 5;  //map range t
1208:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[2 + c_mem.switch_emg]);
 3249              		.loc 1 1208 0
 3250 0264 1B4B     		ldr	r3, .L274+28
 3251 0266 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3252 026a 0233     		adds	r3, r3, #2
 3253 026c 134A     		ldr	r2, .L274+4
 3254 026e 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3255 0272 7B60     		str	r3, [r7, #4]
1209:..\src/interruptions.c ****                 if (i_aux < 0) 
 3256              		.loc 1 1209 0
 3257 0274 7B68     		ldr	r3, [r7, #4]
 3258 0276 002B     		cmp	r3, #0
 3259 0278 01DA     		bge	.L225
1210:..\src/interruptions.c ****                     i_aux = 0;
 3260              		.loc 1 1210 0
 3261 027a 0023     		movs	r3, #0
 3262 027c 7B60     		str	r3, [r7, #4]
 3263              	.L225:
1211:..\src/interruptions.c ****                 i_aux = filter(i_aux, &filt_emg1);
 3264              		.loc 1 1211 0
 3265 027e 2149     		ldr	r1, .L274+76
 3266 0280 7868     		ldr	r0, [r7, #4]
 3267 0282 FFF7FEFF 		bl	filter
 3268 0286 7860     		str	r0, [r7, #4]
1212:..\src/interruptions.c ****                 i_aux = (i_aux << 10) / g_mem.emg_max_value[0];
 3269              		.loc 1 1212 0
 3270 0288 7B68     		ldr	r3, [r7, #4]
 3271 028a 9B02     		lsls	r3, r3, #10
 3272 028c 1A46     		mov	r2, r3
 3273 028e 174B     		ldr	r3, .L274+52
 3274 0290 1B6F     		ldr	r3, [r3, #112]
 3275 0292 B2FBF3F3 		udiv	r3, r2, r3
 3276 0296 7B60     		str	r3, [r7, #4]
1213:..\src/interruptions.c ****     
1214:..\src/interruptions.c ****                 if (interrupt_flag){
 3277              		.loc 1 1214 0
 3278 0298 074B     		ldr	r3, .L274
 3279 029a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3280 029c 002B     		cmp	r3, #0
 3281 029e 04D0     		beq	.L226
1215:..\src/interruptions.c ****                     interrupt_flag = FALSE;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 81


 3282              		.loc 1 1215 0
 3283 02a0 054B     		ldr	r3, .L274
 3284 02a2 0022     		movs	r2, #0
 3285 02a4 1A70     		strb	r2, [r3]
1216:..\src/interruptions.c ****                     interrupt_manager();
 3286              		.loc 1 1216 0
 3287 02a6 FFF7FEFF 		bl	interrupt_manager
 3288              	.L226:
1217:..\src/interruptions.c ****                 }
1218:..\src/interruptions.c ****                 //Saturation
1219:..\src/interruptions.c ****                 if (i_aux < 0)
 3289              		.loc 1 1219 0
 3290 02aa 7B68     		ldr	r3, [r7, #4]
 3291 02ac 002B     		cmp	r3, #0
 3292 02ae 2BDA     		bge	.L227
1220:..\src/interruptions.c ****                     i_aux = 0;
 3293              		.loc 1 1220 0
 3294 02b0 0023     		movs	r3, #0
 3295 02b2 7B60     		str	r3, [r7, #4]
 3296 02b4 2FE0     		b	.L228
 3297              	.L275:
 3298 02b6 00BF     		.align	2
 3299              	.L274:
 3300 02b8 00000000 		.word	interrupt_flag
 3301 02bc 00000000 		.word	ADC_buf
 3302 02c0 00000000 		.word	dev_tension
 3303 02c4 05000000 		.word	first_tension_valid.9955
 3304 02c8 00000000 		.word	tension_valid
 3305 02cc DE000000 		.word	count.9957
 3306 02d0 08000000 		.word	pow_tension.9956
 3307 02d4 00000000 		.word	c_mem
 3308 02d8 00000000 		.word	g_ref
 3309 02dc 00000000 		.word	g_meas
 3310 02e0 E0000000 		.word	v_count.9958
 3311 02e4 00000000 		.word	filt_v
 3312 02e8 00000000 		.word	dev_tension_f
 3313 02ec 00000000 		.word	g_mem
 3314 02f0 00000000 		.word	pwm_sign
 3315 02f4 00000000 		.word	filt_i
 3316 02f8 00000000 		.word	filt_curr_diff
 3317 02fc 00000000 		.word	emg_1_status
 3318 0300 00000000 		.word	emg_2_status
 3319 0304 00000000 		.word	filt_emg1
 3320              	.L227:
1221:..\src/interruptions.c ****                 else 
1222:..\src/interruptions.c ****                     if (i_aux > 1024) 
 3321              		.loc 1 1222 0
 3322 0308 7B68     		ldr	r3, [r7, #4]
 3323 030a B3F5806F 		cmp	r3, #1024
 3324 030e 02DD     		ble	.L228
1223:..\src/interruptions.c ****                         i_aux = 1024;
 3325              		.loc 1 1223 0
 3326 0310 4FF48063 		mov	r3, #1024
 3327 0314 7B60     		str	r3, [r7, #4]
 3328              	.L228:
1224:..\src/interruptions.c ****                 
1225:..\src/interruptions.c ****                 g_meas.emg[0] = i_aux;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 82


 3329              		.loc 1 1225 0
 3330 0316 894A     		ldr	r2, .L276
 3331 0318 7B68     		ldr	r3, [r7, #4]
 3332 031a 9361     		str	r3, [r2, #24]
1226:..\src/interruptions.c ****     
1227:..\src/interruptions.c ****                 if (interrupt_flag){
 3333              		.loc 1 1227 0
 3334 031c 884B     		ldr	r3, .L276+4
 3335 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3336 0320 002B     		cmp	r3, #0
 3337 0322 00F08180 		beq	.L266
1228:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 3338              		.loc 1 1228 0
 3339 0326 864B     		ldr	r3, .L276+4
 3340 0328 0022     		movs	r2, #0
 3341 032a 1A70     		strb	r2, [r3]
1229:..\src/interruptions.c ****                     interrupt_manager();
 3342              		.loc 1 1229 0
 3343 032c FFF7FEFF 		bl	interrupt_manager
1230:..\src/interruptions.c ****                 }
1231:..\src/interruptions.c ****                 
1232:..\src/interruptions.c ****                 break;
 3344              		.loc 1 1232 0
 3345 0330 7AE0     		b	.L266
 3346              	.L222:
1233:..\src/interruptions.c **** 
1234:..\src/interruptions.c ****             case RESET: // reset variables
1235:..\src/interruptions.c ****                 emg_counter_1 = 0;
 3347              		.loc 1 1235 0
 3348 0332 844B     		ldr	r3, .L276+8
 3349 0334 0022     		movs	r2, #0
 3350 0336 1A80     		strh	r2, [r3]	@ movhi
1236:..\src/interruptions.c ****                 g_mem.emg_max_value[0] = 0;
 3351              		.loc 1 1236 0
 3352 0338 834B     		ldr	r3, .L276+12
 3353 033a 0022     		movs	r2, #0
 3354 033c 1A67     		str	r2, [r3, #112]
1237:..\src/interruptions.c ****                 emg_1_status = DISCARD; // goto next status  
 3355              		.loc 1 1237 0
 3356 033e 834B     		ldr	r3, .L276+16
 3357 0340 0222     		movs	r2, #2
 3358 0342 1A70     		strb	r2, [r3]
1238:..\src/interruptions.c ****                 break;
 3359              		.loc 1 1238 0
 3360 0344 75E0     		b	.L230
 3361              	.L223:
1239:..\src/interruptions.c **** 
1240:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1241:..\src/interruptions.c ****                 emg_counter_1++;
 3362              		.loc 1 1241 0
 3363 0346 7F4B     		ldr	r3, .L276+8
 3364 0348 1B88     		ldrh	r3, [r3]
 3365 034a 0133     		adds	r3, r3, #1
 3366 034c 9AB2     		uxth	r2, r3
 3367 034e 7D4B     		ldr	r3, .L276+8
 3368 0350 1A80     		strh	r2, [r3]	@ movhi
1242:..\src/interruptions.c ****                 if (emg_counter_1 == EMG_SAMPLE_TO_DISCARD) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 83


 3369              		.loc 1 1242 0
 3370 0352 7C4B     		ldr	r3, .L276+8
 3371 0354 1B88     		ldrh	r3, [r3]
 3372 0356 B3F5FA7F 		cmp	r3, #500
 3373 035a 67D1     		bne	.L267
1243:..\src/interruptions.c ****                     emg_counter_1 = 0;          // reset counter
 3374              		.loc 1 1243 0
 3375 035c 794B     		ldr	r3, .L276+8
 3376 035e 0022     		movs	r2, #0
 3377 0360 1A80     		strh	r2, [r3]	@ movhi
1244:..\src/interruptions.c ****                     LED_control(1);
 3378              		.loc 1 1244 0
 3379 0362 0120     		movs	r0, #1
 3380 0364 FFF7FEFF 		bl	LED_control
1245:..\src/interruptions.c **** 					
1246:..\src/interruptions.c ****                     if (interrupt_flag){
 3381              		.loc 1 1246 0
 3382 0368 754B     		ldr	r3, .L276+4
 3383 036a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3384 036c 002B     		cmp	r3, #0
 3385 036e 04D0     		beq	.L232
1247:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 3386              		.loc 1 1247 0
 3387 0370 734B     		ldr	r3, .L276+4
 3388 0372 0022     		movs	r2, #0
 3389 0374 1A70     		strb	r2, [r3]
1248:..\src/interruptions.c ****                         interrupt_manager();
 3390              		.loc 1 1248 0
 3391 0376 FFF7FEFF 		bl	interrupt_manager
 3392              	.L232:
1249:..\src/interruptions.c ****                     }
1250:..\src/interruptions.c ****                     
1251:..\src/interruptions.c ****                     emg_1_status = SUM_AND_MEAN;    // sum and mean status
 3393              		.loc 1 1251 0
 3394 037a 744B     		ldr	r3, .L276+16
 3395 037c 0322     		movs	r2, #3
 3396 037e 1A70     		strb	r2, [r3]
1252:..\src/interruptions.c ****                 }
1253:..\src/interruptions.c ****                 break;
 3397              		.loc 1 1253 0
 3398 0380 54E0     		b	.L267
 3399              	.L224:
1254:..\src/interruptions.c **** 
1255:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1256:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1257:..\src/interruptions.c ****                 emg_counter_1++;
 3400              		.loc 1 1257 0
 3401 0382 704B     		ldr	r3, .L276+8
 3402 0384 1B88     		ldrh	r3, [r3]
 3403 0386 0133     		adds	r3, r3, #1
 3404 0388 9AB2     		uxth	r2, r3
 3405 038a 6E4B     		ldr	r3, .L276+8
 3406 038c 1A80     		strh	r2, [r3]	@ movhi
1258:..\src/interruptions.c ****                 if (ADC_buf[2 + c_mem.switch_emg] < 0) 
 3407              		.loc 1 1258 0
 3408 038e 704B     		ldr	r3, .L276+20
 3409 0390 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 84


 3410 0394 0233     		adds	r3, r3, #2
 3411 0396 6F4A     		ldr	r2, .L276+24
 3412 0398 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3413 039c 002B     		cmp	r3, #0
 3414 039e 07DA     		bge	.L233
1259:..\src/interruptions.c ****                     ADC_buf[2 + c_mem.switch_emg] = 0;
 3415              		.loc 1 1259 0
 3416 03a0 6B4B     		ldr	r3, .L276+20
 3417 03a2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3418 03a6 0233     		adds	r3, r3, #2
 3419 03a8 6A4A     		ldr	r2, .L276+24
 3420 03aa 0021     		movs	r1, #0
 3421 03ac 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 3422              	.L233:
1260:..\src/interruptions.c ****                 g_mem.emg_max_value[0] += filter((int32)ADC_buf[2 + c_mem.switch_emg], &filt_emg1);
 3423              		.loc 1 1260 0
 3424 03b0 674B     		ldr	r3, .L276+20
 3425 03b2 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3426 03b6 0233     		adds	r3, r3, #2
 3427 03b8 664A     		ldr	r2, .L276+24
 3428 03ba 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3429 03be 6649     		ldr	r1, .L276+28
 3430 03c0 1846     		mov	r0, r3
 3431 03c2 FFF7FEFF 		bl	filter
 3432 03c6 0246     		mov	r2, r0
 3433 03c8 5F4B     		ldr	r3, .L276+12
 3434 03ca 1B6F     		ldr	r3, [r3, #112]
 3435 03cc 1344     		add	r3, r3, r2
 3436 03ce 5E4A     		ldr	r2, .L276+12
 3437 03d0 1367     		str	r3, [r2, #112]
1261:..\src/interruptions.c ****                 
1262:..\src/interruptions.c ****                 if (interrupt_flag){
 3438              		.loc 1 1262 0
 3439 03d2 5B4B     		ldr	r3, .L276+4
 3440 03d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3441 03d6 002B     		cmp	r3, #0
 3442 03d8 04D0     		beq	.L234
1263:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 3443              		.loc 1 1263 0
 3444 03da 594B     		ldr	r3, .L276+4
 3445 03dc 0022     		movs	r2, #0
 3446 03de 1A70     		strb	r2, [r3]
1264:..\src/interruptions.c ****                     interrupt_manager();
 3447              		.loc 1 1264 0
 3448 03e0 FFF7FEFF 		bl	interrupt_manager
 3449              	.L234:
1265:..\src/interruptions.c ****                 }
1266:..\src/interruptions.c ****                 
1267:..\src/interruptions.c ****                 if (emg_counter_1 == SAMPLES_FOR_EMG_MEAN) {
 3450              		.loc 1 1267 0
 3451 03e4 574B     		ldr	r3, .L276+8
 3452 03e6 1B88     		ldrh	r3, [r3]
 3453 03e8 B3F57A7F 		cmp	r3, #1000
 3454 03ec 20D1     		bne	.L268
1268:..\src/interruptions.c ****                     g_mem.emg_max_value[0] = g_mem.emg_max_value[0] / SAMPLES_FOR_EMG_MEAN; // calc
 3455              		.loc 1 1268 0
 3456 03ee 564B     		ldr	r3, .L276+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 85


 3457 03f0 1B6F     		ldr	r3, [r3, #112]
 3458 03f2 5A4A     		ldr	r2, .L276+32
 3459 03f4 A2FB0323 		umull	r2, r3, r2, r3
 3460 03f8 9B09     		lsrs	r3, r3, #6
 3461 03fa 534A     		ldr	r2, .L276+12
 3462 03fc 1367     		str	r3, [r2, #112]
1269:..\src/interruptions.c ****     
1270:..\src/interruptions.c ****                     if (interrupt_flag){
 3463              		.loc 1 1270 0
 3464 03fe 504B     		ldr	r3, .L276+4
 3465 0400 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3466 0402 002B     		cmp	r3, #0
 3467 0404 04D0     		beq	.L236
1271:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 3468              		.loc 1 1271 0
 3469 0406 4E4B     		ldr	r3, .L276+4
 3470 0408 0022     		movs	r2, #0
 3471 040a 1A70     		strb	r2, [r3]
1272:..\src/interruptions.c ****                         interrupt_manager();
 3472              		.loc 1 1272 0
 3473 040c FFF7FEFF 		bl	interrupt_manager
 3474              	.L236:
1273:..\src/interruptions.c ****                     }                    
1274:..\src/interruptions.c ****                     
1275:..\src/interruptions.c ****                     LED_control(0);
 3475              		.loc 1 1275 0
 3476 0410 0020     		movs	r0, #0
 3477 0412 FFF7FEFF 		bl	LED_control
1276:..\src/interruptions.c **** 					
1277:..\src/interruptions.c ****                     emg_counter_1 = 0;          // reset counter
 3478              		.loc 1 1277 0
 3479 0416 4B4B     		ldr	r3, .L276+8
 3480 0418 0022     		movs	r2, #0
 3481 041a 1A80     		strh	r2, [r3]	@ movhi
1278:..\src/interruptions.c **** 
1279:..\src/interruptions.c ****                     emg_1_status = NORMAL;      // goto normal execution
 3482              		.loc 1 1279 0
 3483 041c 4B4B     		ldr	r3, .L276+16
 3484 041e 0022     		movs	r2, #0
 3485 0420 1A70     		strb	r2, [r3]
1280:..\src/interruptions.c ****                 }
1281:..\src/interruptions.c ****                 break;
 3486              		.loc 1 1281 0
 3487 0422 05E0     		b	.L268
 3488              	.L265:
1282:..\src/interruptions.c **** 
1283:..\src/interruptions.c ****             default:
1284:..\src/interruptions.c ****                 break;
 3489              		.loc 1 1284 0
 3490 0424 00BF     		nop
 3491 0426 04E0     		b	.L230
 3492              	.L266:
1232:..\src/interruptions.c **** 
 3493              		.loc 1 1232 0
 3494 0428 00BF     		nop
 3495 042a 02E0     		b	.L230
 3496              	.L267:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 86


1253:..\src/interruptions.c **** 
 3497              		.loc 1 1253 0
 3498 042c 00BF     		nop
 3499 042e 00E0     		b	.L230
 3500              	.L268:
1281:..\src/interruptions.c **** 
 3501              		.loc 1 1281 0
 3502 0430 00BF     		nop
 3503              	.L230:
1285:..\src/interruptions.c ****         }
1286:..\src/interruptions.c ****     
1287:..\src/interruptions.c ****         if (interrupt_flag){
 3504              		.loc 1 1287 0
 3505 0432 434B     		ldr	r3, .L276+4
 3506 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3507 0436 002B     		cmp	r3, #0
 3508 0438 04D0     		beq	.L237
1288:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3509              		.loc 1 1288 0
 3510 043a 414B     		ldr	r3, .L276+4
 3511 043c 0022     		movs	r2, #0
 3512 043e 1A70     		strb	r2, [r3]
1289:..\src/interruptions.c ****             interrupt_manager();
 3513              		.loc 1 1289 0
 3514 0440 FFF7FEFF 		bl	interrupt_manager
 3515              	.L237:
1290:..\src/interruptions.c ****         }
1291:..\src/interruptions.c ****         // EMG 2 calibration state machine
1292:..\src/interruptions.c ****         switch(emg_2_status) {
 3516              		.loc 1 1292 0
 3517 0444 464B     		ldr	r3, .L276+36
 3518 0446 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3519 0448 052B     		cmp	r3, #5
 3520 044a 00F23081 		bhi	.L269
 3521 044e 01A2     		adr	r2, .L240
 3522 0450 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3523              		.p2align 2
 3524              	.L240:
 3525 0454 6D040000 		.word	.L239+1
 3526 0458 D7040000 		.word	.L241+1
 3527 045c FD040000 		.word	.L242+1
 3528 0460 6D050000 		.word	.L243+1
 3529 0464 15060000 		.word	.L244+1
 3530 0468 25060000 		.word	.L245+1
 3531              		.p2align 1
 3532              	.L239:
1293:..\src/interruptions.c ****             case NORMAL: // normal execution
1294:..\src/interruptions.c ****                 //i_aux = ((int32)(ADC_buf[3 - c_mem.switch_emg] - 1640) * 87) >> 5;  //map range t
1295:..\src/interruptions.c ****                 i_aux = (int32)(ADC_buf[3 - c_mem.switch_emg]);
 3533              		.loc 1 1295 0
 3534 046c 384B     		ldr	r3, .L276+20
 3535 046e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3536 0472 C3F10303 		rsb	r3, r3, #3
 3537 0476 374A     		ldr	r2, .L276+24
 3538 0478 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3539 047c 7B60     		str	r3, [r7, #4]
1296:..\src/interruptions.c ****                 if (i_aux < 0)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 87


 3540              		.loc 1 1296 0
 3541 047e 7B68     		ldr	r3, [r7, #4]
 3542 0480 002B     		cmp	r3, #0
 3543 0482 01DA     		bge	.L246
1297:..\src/interruptions.c ****                     i_aux = 0;
 3544              		.loc 1 1297 0
 3545 0484 0023     		movs	r3, #0
 3546 0486 7B60     		str	r3, [r7, #4]
 3547              	.L246:
1298:..\src/interruptions.c ****                 i_aux = filter(i_aux, &filt_emg2);
 3548              		.loc 1 1298 0
 3549 0488 3649     		ldr	r1, .L276+40
 3550 048a 7868     		ldr	r0, [r7, #4]
 3551 048c FFF7FEFF 		bl	filter
 3552 0490 7860     		str	r0, [r7, #4]
1299:..\src/interruptions.c ****                 i_aux = (i_aux << 10) / g_mem.emg_max_value[1];
 3553              		.loc 1 1299 0
 3554 0492 7B68     		ldr	r3, [r7, #4]
 3555 0494 9B02     		lsls	r3, r3, #10
 3556 0496 1A46     		mov	r2, r3
 3557 0498 2B4B     		ldr	r3, .L276+12
 3558 049a 5B6F     		ldr	r3, [r3, #116]
 3559 049c B2FBF3F3 		udiv	r3, r2, r3
 3560 04a0 7B60     		str	r3, [r7, #4]
1300:..\src/interruptions.c ****     
1301:..\src/interruptions.c ****                 if (interrupt_flag){
 3561              		.loc 1 1301 0
 3562 04a2 274B     		ldr	r3, .L276+4
 3563 04a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3564 04a6 002B     		cmp	r3, #0
 3565 04a8 04D0     		beq	.L247
1302:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 3566              		.loc 1 1302 0
 3567 04aa 254B     		ldr	r3, .L276+4
 3568 04ac 0022     		movs	r2, #0
 3569 04ae 1A70     		strb	r2, [r3]
1303:..\src/interruptions.c ****                     interrupt_manager();
 3570              		.loc 1 1303 0
 3571 04b0 FFF7FEFF 		bl	interrupt_manager
 3572              	.L247:
1304:..\src/interruptions.c ****                 }
1305:..\src/interruptions.c ****                 
1306:..\src/interruptions.c ****                 if (i_aux < 0) 
 3573              		.loc 1 1306 0
 3574 04b4 7B68     		ldr	r3, [r7, #4]
 3575 04b6 002B     		cmp	r3, #0
 3576 04b8 02DA     		bge	.L248
1307:..\src/interruptions.c ****                     i_aux = 0;
 3577              		.loc 1 1307 0
 3578 04ba 0023     		movs	r3, #0
 3579 04bc 7B60     		str	r3, [r7, #4]
 3580 04be 06E0     		b	.L249
 3581              	.L248:
1308:..\src/interruptions.c ****                 else 
1309:..\src/interruptions.c ****                     if (i_aux > 1024)
 3582              		.loc 1 1309 0
 3583 04c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 88


 3584 04c2 B3F5806F 		cmp	r3, #1024
 3585 04c6 02DD     		ble	.L249
1310:..\src/interruptions.c ****                         i_aux = 1024;
 3586              		.loc 1 1310 0
 3587 04c8 4FF48063 		mov	r3, #1024
 3588 04cc 7B60     		str	r3, [r7, #4]
 3589              	.L249:
1311:..\src/interruptions.c ****                 
1312:..\src/interruptions.c ****                 g_meas.emg[1] = i_aux;
 3590              		.loc 1 1312 0
 3591 04ce 1B4A     		ldr	r2, .L276
 3592 04d0 7B68     		ldr	r3, [r7, #4]
 3593 04d2 D361     		str	r3, [r2, #28]
1313:..\src/interruptions.c **** 
1314:..\src/interruptions.c ****                 break;
 3594              		.loc 1 1314 0
 3595 04d4 F4E0     		b	.L250
 3596              	.L241:
1315:..\src/interruptions.c **** 
1316:..\src/interruptions.c ****             case RESET: // reset variables
1317:..\src/interruptions.c ****                 emg_counter_2 = 0;
 3597              		.loc 1 1317 0
 3598 04d6 244B     		ldr	r3, .L276+44
 3599 04d8 0022     		movs	r2, #0
 3600 04da 1A80     		strh	r2, [r3]	@ movhi
1318:..\src/interruptions.c ****                 g_mem.emg_max_value[1] = 0;
 3601              		.loc 1 1318 0
 3602 04dc 1A4B     		ldr	r3, .L276+12
 3603 04de 0022     		movs	r2, #0
 3604 04e0 5A67     		str	r2, [r3, #116]
1319:..\src/interruptions.c ****     
1320:..\src/interruptions.c ****                 if (interrupt_flag){
 3605              		.loc 1 1320 0
 3606 04e2 174B     		ldr	r3, .L276+4
 3607 04e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3608 04e6 002B     		cmp	r3, #0
 3609 04e8 04D0     		beq	.L251
1321:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 3610              		.loc 1 1321 0
 3611 04ea 154B     		ldr	r3, .L276+4
 3612 04ec 0022     		movs	r2, #0
 3613 04ee 1A70     		strb	r2, [r3]
1322:..\src/interruptions.c ****                     interrupt_manager();
 3614              		.loc 1 1322 0
 3615 04f0 FFF7FEFF 		bl	interrupt_manager
 3616              	.L251:
1323:..\src/interruptions.c ****                 }
1324:..\src/interruptions.c ****                 
1325:..\src/interruptions.c ****                 emg_2_status = WAIT; // wait for EMG 1 calibration
 3617              		.loc 1 1325 0
 3618 04f4 1A4B     		ldr	r3, .L276+36
 3619 04f6 0422     		movs	r2, #4
 3620 04f8 1A70     		strb	r2, [r3]
1326:..\src/interruptions.c ****                 break;
 3621              		.loc 1 1326 0
 3622 04fa E1E0     		b	.L250
 3623              	.L242:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 89


1327:..\src/interruptions.c **** 
1328:..\src/interruptions.c ****             case DISCARD: // discard first EMG_SAMPLE_TO_DISCARD samples
1329:..\src/interruptions.c ****                 emg_counter_2++;
 3624              		.loc 1 1329 0
 3625 04fc 1A4B     		ldr	r3, .L276+44
 3626 04fe 1B88     		ldrh	r3, [r3]
 3627 0500 0133     		adds	r3, r3, #1
 3628 0502 9AB2     		uxth	r2, r3
 3629 0504 184B     		ldr	r3, .L276+44
 3630 0506 1A80     		strh	r2, [r3]	@ movhi
1330:..\src/interruptions.c ****                 if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 3631              		.loc 1 1330 0
 3632 0508 174B     		ldr	r3, .L276+44
 3633 050a 1B88     		ldrh	r3, [r3]
 3634 050c B3F5FA7F 		cmp	r3, #500
 3635 0510 40F0CF80 		bne	.L270
1331:..\src/interruptions.c ****                     emg_counter_2 = 0;          // reset counter
 3636              		.loc 1 1331 0
 3637 0514 144B     		ldr	r3, .L276+44
 3638 0516 0022     		movs	r2, #0
 3639 0518 1A80     		strh	r2, [r3]	@ movhi
1332:..\src/interruptions.c ****                     LED_control(1);
 3640              		.loc 1 1332 0
 3641 051a 0120     		movs	r0, #1
 3642 051c FFF7FEFF 		bl	LED_control
1333:..\src/interruptions.c ****     
1334:..\src/interruptions.c ****                     if (interrupt_flag){
 3643              		.loc 1 1334 0
 3644 0520 074B     		ldr	r3, .L276+4
 3645 0522 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3646 0524 002B     		cmp	r3, #0
 3647 0526 04D0     		beq	.L253
1335:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 3648              		.loc 1 1335 0
 3649 0528 054B     		ldr	r3, .L276+4
 3650 052a 0022     		movs	r2, #0
 3651 052c 1A70     		strb	r2, [r3]
1336:..\src/interruptions.c ****                         interrupt_manager();
 3652              		.loc 1 1336 0
 3653 052e FFF7FEFF 		bl	interrupt_manager
 3654              	.L253:
1337:..\src/interruptions.c ****                     }
1338:..\src/interruptions.c ****                     
1339:..\src/interruptions.c ****                     emg_2_status = SUM_AND_MEAN;           // sum and mean status
 3655              		.loc 1 1339 0
 3656 0532 0B4B     		ldr	r3, .L276+36
 3657 0534 0322     		movs	r2, #3
 3658 0536 1A70     		strb	r2, [r3]
1340:..\src/interruptions.c ****                 }
1341:..\src/interruptions.c ****                 break;
 3659              		.loc 1 1341 0
 3660 0538 BBE0     		b	.L270
 3661              	.L277:
 3662 053a 00BF     		.align	2
 3663              	.L276:
 3664 053c 00000000 		.word	g_meas
 3665 0540 00000000 		.word	interrupt_flag
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 90


 3666 0544 E4000000 		.word	emg_counter_1.9953
 3667 0548 00000000 		.word	g_mem
 3668 054c 00000000 		.word	emg_1_status
 3669 0550 00000000 		.word	c_mem
 3670 0554 00000000 		.word	ADC_buf
 3671 0558 00000000 		.word	filt_emg1
 3672 055c D34D6210 		.word	274877907
 3673 0560 00000000 		.word	emg_2_status
 3674 0564 00000000 		.word	filt_emg2
 3675 0568 E6000000 		.word	emg_counter_2.9954
 3676              	.L243:
1342:..\src/interruptions.c **** 
1343:..\src/interruptions.c ****             case SUM_AND_MEAN: // sum first SAMPLES_FOR_EMG_MEAN samples
1344:..\src/interruptions.c ****                 // NOTE max(value)*SAMPLES_FOR_EMG_MEAN must fit in 32bit
1345:..\src/interruptions.c ****                 emg_counter_2++;
 3677              		.loc 1 1345 0
 3678 056c 5B4B     		ldr	r3, .L278
 3679 056e 1B88     		ldrh	r3, [r3]
 3680 0570 0133     		adds	r3, r3, #1
 3681 0572 9AB2     		uxth	r2, r3
 3682 0574 594B     		ldr	r3, .L278
 3683 0576 1A80     		strh	r2, [r3]	@ movhi
1346:..\src/interruptions.c ****                 if (ADC_buf[3 - c_mem.switch_emg] < 0)
 3684              		.loc 1 1346 0
 3685 0578 594B     		ldr	r3, .L278+4
 3686 057a 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3687 057e C3F10303 		rsb	r3, r3, #3
 3688 0582 584A     		ldr	r2, .L278+8
 3689 0584 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3690 0588 002B     		cmp	r3, #0
 3691 058a 08DA     		bge	.L254
1347:..\src/interruptions.c ****                     ADC_buf[3 - c_mem.switch_emg] = 0;
 3692              		.loc 1 1347 0
 3693 058c 544B     		ldr	r3, .L278+4
 3694 058e 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3695 0592 C3F10303 		rsb	r3, r3, #3
 3696 0596 534A     		ldr	r2, .L278+8
 3697 0598 0021     		movs	r1, #0
 3698 059a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 3699              	.L254:
1348:..\src/interruptions.c ****                 g_mem.emg_max_value[1] += filter((int32)ADC_buf[3 - c_mem.switch_emg], &filt_emg2);
 3700              		.loc 1 1348 0
 3701 059e 504B     		ldr	r3, .L278+4
 3702 05a0 93F8A930 		ldrb	r3, [r3, #169]	@ zero_extendqisi2
 3703 05a4 C3F10303 		rsb	r3, r3, #3
 3704 05a8 4E4A     		ldr	r2, .L278+8
 3705 05aa 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 3706 05ae 4E49     		ldr	r1, .L278+12
 3707 05b0 1846     		mov	r0, r3
 3708 05b2 FFF7FEFF 		bl	filter
 3709 05b6 0246     		mov	r2, r0
 3710 05b8 4C4B     		ldr	r3, .L278+16
 3711 05ba 5B6F     		ldr	r3, [r3, #116]
 3712 05bc 1344     		add	r3, r3, r2
 3713 05be 4B4A     		ldr	r2, .L278+16
 3714 05c0 5367     		str	r3, [r2, #116]
1349:..\src/interruptions.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 91


1350:..\src/interruptions.c ****                 if (interrupt_flag){
 3715              		.loc 1 1350 0
 3716 05c2 4B4B     		ldr	r3, .L278+20
 3717 05c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3718 05c6 002B     		cmp	r3, #0
 3719 05c8 04D0     		beq	.L255
1351:..\src/interruptions.c ****                     interrupt_flag = FALSE;
 3720              		.loc 1 1351 0
 3721 05ca 494B     		ldr	r3, .L278+20
 3722 05cc 0022     		movs	r2, #0
 3723 05ce 1A70     		strb	r2, [r3]
1352:..\src/interruptions.c ****                     interrupt_manager();
 3724              		.loc 1 1352 0
 3725 05d0 FFF7FEFF 		bl	interrupt_manager
 3726              	.L255:
1353:..\src/interruptions.c ****                 }
1354:..\src/interruptions.c ****                 
1355:..\src/interruptions.c ****                 if (emg_counter_2 == SAMPLES_FOR_EMG_MEAN) {
 3727              		.loc 1 1355 0
 3728 05d4 414B     		ldr	r3, .L278
 3729 05d6 1B88     		ldrh	r3, [r3]
 3730 05d8 B3F57A7F 		cmp	r3, #1000
 3731 05dc 6BD1     		bne	.L271
1356:..\src/interruptions.c ****                     g_mem.emg_max_value[1] = g_mem.emg_max_value[1] / SAMPLES_FOR_EMG_MEAN; // calc
 3732              		.loc 1 1356 0
 3733 05de 434B     		ldr	r3, .L278+16
 3734 05e0 5B6F     		ldr	r3, [r3, #116]
 3735 05e2 444A     		ldr	r2, .L278+24
 3736 05e4 A2FB0323 		umull	r2, r3, r2, r3
 3737 05e8 9B09     		lsrs	r3, r3, #6
 3738 05ea 404A     		ldr	r2, .L278+16
 3739 05ec 5367     		str	r3, [r2, #116]
1357:..\src/interruptions.c ****                     LED_control(0);
 3740              		.loc 1 1357 0
 3741 05ee 0020     		movs	r0, #0
 3742 05f0 FFF7FEFF 		bl	LED_control
1358:..\src/interruptions.c ****                     emg_counter_2 = 0;          // reset counter
 3743              		.loc 1 1358 0
 3744 05f4 394B     		ldr	r3, .L278
 3745 05f6 0022     		movs	r2, #0
 3746 05f8 1A80     		strh	r2, [r3]	@ movhi
1359:..\src/interruptions.c ****                 
1360:..\src/interruptions.c ****                     if (interrupt_flag){
 3747              		.loc 1 1360 0
 3748 05fa 3D4B     		ldr	r3, .L278+20
 3749 05fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3750 05fe 002B     		cmp	r3, #0
 3751 0600 04D0     		beq	.L257
1361:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 3752              		.loc 1 1361 0
 3753 0602 3B4B     		ldr	r3, .L278+20
 3754 0604 0022     		movs	r2, #0
 3755 0606 1A70     		strb	r2, [r3]
1362:..\src/interruptions.c ****                         interrupt_manager();
 3756              		.loc 1 1362 0
 3757 0608 FFF7FEFF 		bl	interrupt_manager
 3758              	.L257:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 92


1363:..\src/interruptions.c ****                     }
1364:..\src/interruptions.c ****                     
1365:..\src/interruptions.c ****                     emg_2_status = WAIT_EoC;    // goto end of calibration wait
 3759              		.loc 1 1365 0
 3760 060c 3A4B     		ldr	r3, .L278+28
 3761 060e 0522     		movs	r2, #5
 3762 0610 1A70     		strb	r2, [r3]
1366:..\src/interruptions.c ****                 }
1367:..\src/interruptions.c ****                 break;
 3763              		.loc 1 1367 0
 3764 0612 50E0     		b	.L271
 3765              	.L244:
1368:..\src/interruptions.c **** 
1369:..\src/interruptions.c ****             case WAIT: // wait for EMG calibration to be done
1370:..\src/interruptions.c ****                 if (emg_1_status == NORMAL)
 3766              		.loc 1 1370 0
 3767 0614 394B     		ldr	r3, .L278+32
 3768 0616 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3769 0618 002B     		cmp	r3, #0
 3770 061a 4ED1     		bne	.L272
1371:..\src/interruptions.c ****                     emg_2_status = DISCARD;           // goto discard sample
 3771              		.loc 1 1371 0
 3772 061c 364B     		ldr	r3, .L278+28
 3773 061e 0222     		movs	r2, #2
 3774 0620 1A70     		strb	r2, [r3]
1372:..\src/interruptions.c ****                 break;
 3775              		.loc 1 1372 0
 3776 0622 4AE0     		b	.L272
 3777              	.L245:
1373:..\src/interruptions.c **** 
1374:..\src/interruptions.c ****             case WAIT_EoC:  // wait for end of calibration procedure (only for LED visibility reaso
1375:..\src/interruptions.c ****                 emg_counter_2++;
 3778              		.loc 1 1375 0
 3779 0624 2D4B     		ldr	r3, .L278
 3780 0626 1B88     		ldrh	r3, [r3]
 3781 0628 0133     		adds	r3, r3, #1
 3782 062a 9AB2     		uxth	r2, r3
 3783 062c 2B4B     		ldr	r3, .L278
 3784 062e 1A80     		strh	r2, [r3]	@ movhi
1376:..\src/interruptions.c ****                 if (emg_counter_2 == EMG_SAMPLE_TO_DISCARD) {
 3785              		.loc 1 1376 0
 3786 0630 2A4B     		ldr	r3, .L278
 3787 0632 1B88     		ldrh	r3, [r3]
 3788 0634 B3F5FA7F 		cmp	r3, #500
 3789 0638 41D1     		bne	.L273
1377:..\src/interruptions.c ****                     emg_counter_2 = 0;          // reset counter
 3790              		.loc 1 1377 0
 3791 063a 284B     		ldr	r3, .L278
 3792 063c 0022     		movs	r2, #0
 3793 063e 1A80     		strh	r2, [r3]	@ movhi
1378:..\src/interruptions.c ****                     
1379:..\src/interruptions.c ****                     if (interrupt_flag){
 3794              		.loc 1 1379 0
 3795 0640 2B4B     		ldr	r3, .L278+20
 3796 0642 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 0644 002B     		cmp	r3, #0
 3798 0646 04D0     		beq	.L260
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 93


1380:..\src/interruptions.c ****                         interrupt_flag = FALSE;
 3799              		.loc 1 1380 0
 3800 0648 294B     		ldr	r3, .L278+20
 3801 064a 0022     		movs	r2, #0
 3802 064c 1A70     		strb	r2, [r3]
1381:..\src/interruptions.c ****                         interrupt_manager();
 3803              		.loc 1 1381 0
 3804 064e FFF7FEFF 		bl	interrupt_manager
 3805              	.L260:
1382:..\src/interruptions.c ****                     }
1383:..\src/interruptions.c ****                     
1384:..\src/interruptions.c ****                     // if EMG control mode active, activate motor accordingly with startup value
1385:..\src/interruptions.c ****                     if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 3806              		.loc 1 1385 0
 3807 0652 234B     		ldr	r3, .L278+4
 3808 0654 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 3809 0658 022B     		cmp	r3, #2
 3810 065a 0ED0     		beq	.L261
1386:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3811              		.loc 1 1386 0 discriminator 1
 3812 065c 204B     		ldr	r3, .L278+4
 3813 065e 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1385:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3814              		.loc 1 1385 0 discriminator 1
 3815 0662 032B     		cmp	r3, #3
 3816 0664 09D0     		beq	.L261
1387:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3817              		.loc 1 1387 0
 3818 0666 1E4B     		ldr	r3, .L278+4
 3819 0668 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1386:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 3820              		.loc 1 1386 0
 3821 066c 042B     		cmp	r3, #4
 3822 066e 04D0     		beq	.L261
1388:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 3823              		.loc 1 1388 0
 3824 0670 1B4B     		ldr	r3, .L278+4
 3825 0672 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1387:..\src/interruptions.c ****                         (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 3826              		.loc 1 1387 0
 3827 0676 052B     		cmp	r3, #5
 3828 0678 12D1     		bne	.L262
 3829              	.L261:
1389:..\src/interruptions.c ****                         if (c_mem.control_mode == CONTROL_ANGLE) {
 3830              		.loc 1 1389 0
 3831 067a 194B     		ldr	r3, .L278+4
 3832 067c 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3833 0680 002B     		cmp	r3, #0
 3834 0682 03D1     		bne	.L263
1390:..\src/interruptions.c ****                             g_ref.pos = g_meas.pos[0];
 3835              		.loc 1 1390 0
 3836 0684 1E4B     		ldr	r3, .L278+36
 3837 0686 1B68     		ldr	r3, [r3]
 3838 0688 1E4A     		ldr	r2, .L278+40
 3839 068a 1360     		str	r3, [r2]
 3840              	.L263:
1391:..\src/interruptions.c ****                         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 94


1392:..\src/interruptions.c ****                         g_ref.onoff = c_mem.activ;
 3841              		.loc 1 1392 0
 3842 068c 144B     		ldr	r3, .L278+4
 3843 068e 93F83420 		ldrb	r2, [r3, #52]	@ zero_extendqisi2
 3844 0692 1C4B     		ldr	r3, .L278+40
 3845 0694 1A73     		strb	r2, [r3, #12]
1393:..\src/interruptions.c ****                         MOTOR_ON_OFF_Write(g_ref.onoff);
 3846              		.loc 1 1393 0
 3847 0696 1B4B     		ldr	r3, .L278+40
 3848 0698 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 3849 069a 1846     		mov	r0, r3
 3850 069c FFF7FEFF 		bl	MOTOR_ON_OFF_Write
 3851              	.L262:
1394:..\src/interruptions.c ****                     }
1395:..\src/interruptions.c ****                         
1396:..\src/interruptions.c ****                     memStore(0);        // Store emg_max_value
 3852              		.loc 1 1396 0
 3853 06a0 0020     		movs	r0, #0
 3854 06a2 FFF7FEFF 		bl	memStore
1397:..\src/interruptions.c ****                         
1398:..\src/interruptions.c ****                     emg_2_status = NORMAL;           // goto normal execution
 3855              		.loc 1 1398 0
 3856 06a6 144B     		ldr	r3, .L278+28
 3857 06a8 0022     		movs	r2, #0
 3858 06aa 1A70     		strb	r2, [r3]
1399:..\src/interruptions.c ****                 }
1400:..\src/interruptions.c ****                 break;
 3859              		.loc 1 1400 0
 3860 06ac 07E0     		b	.L273
 3861              	.L269:
1401:..\src/interruptions.c ****             default:
1402:..\src/interruptions.c ****                 break;
 3862              		.loc 1 1402 0
 3863 06ae 00BF     		nop
 3864 06b0 06E0     		b	.L250
 3865              	.L270:
1341:..\src/interruptions.c **** 
 3866              		.loc 1 1341 0
 3867 06b2 00BF     		nop
 3868 06b4 04E0     		b	.L250
 3869              	.L271:
1367:..\src/interruptions.c **** 
 3870              		.loc 1 1367 0
 3871 06b6 00BF     		nop
 3872 06b8 02E0     		b	.L250
 3873              	.L272:
1372:..\src/interruptions.c **** 
 3874              		.loc 1 1372 0
 3875 06ba 00BF     		nop
 3876 06bc 00E0     		b	.L250
 3877              	.L273:
1400:..\src/interruptions.c ****             default:
 3878              		.loc 1 1400 0
 3879 06be 00BF     		nop
 3880              	.L250:
1403:..\src/interruptions.c ****         }
1404:..\src/interruptions.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 95


1405:..\src/interruptions.c ****         if (interrupt_flag){
 3881              		.loc 1 1405 0
 3882 06c0 0B4B     		ldr	r3, .L278+20
 3883 06c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3884 06c4 002B     		cmp	r3, #0
 3885 06c6 04D0     		beq	.L264
1406:..\src/interruptions.c ****             interrupt_flag = FALSE;
 3886              		.loc 1 1406 0
 3887 06c8 094B     		ldr	r3, .L278+20
 3888 06ca 0022     		movs	r2, #0
 3889 06cc 1A70     		strb	r2, [r3]
1407:..\src/interruptions.c ****             interrupt_manager();
 3890              		.loc 1 1407 0
 3891 06ce FFF7FEFF 		bl	interrupt_manager
 3892              	.L264:
1408:..\src/interruptions.c ****         }
1409:..\src/interruptions.c ****     }
1410:..\src/interruptions.c **** }
 3893              		.loc 1 1410 0
 3894 06d2 00BF     		nop
 3895 06d4 0C37     		adds	r7, r7, #12
 3896              		.cfi_def_cfa_offset 12
 3897 06d6 BD46     		mov	sp, r7
 3898              		.cfi_def_cfa_register 13
 3899              		@ sp needed
 3900 06d8 90BD     		pop	{r4, r7, pc}
 3901              	.L279:
 3902 06da 00BF     		.align	2
 3903              	.L278:
 3904 06dc E6000000 		.word	emg_counter_2.9954
 3905 06e0 00000000 		.word	c_mem
 3906 06e4 00000000 		.word	ADC_buf
 3907 06e8 00000000 		.word	filt_emg2
 3908 06ec 00000000 		.word	g_mem
 3909 06f0 00000000 		.word	interrupt_flag
 3910 06f4 D34D6210 		.word	274877907
 3911 06f8 00000000 		.word	emg_2_status
 3912 06fc 00000000 		.word	emg_1_status
 3913 0700 00000000 		.word	g_meas
 3914 0704 00000000 		.word	g_ref
 3915              		.cfi_endproc
 3916              	.LFE70:
 3917              		.size	analog_read_end, .-analog_read_end
 3918              		.section	.text.overcurrent_control,"ax",%progbits
 3919              		.align	2
 3920              		.global	overcurrent_control
 3921              		.thumb
 3922              		.thumb_func
 3923              		.type	overcurrent_control, %function
 3924              	overcurrent_control:
 3925              	.LFB71:
1411:..\src/interruptions.c **** 
1412:..\src/interruptions.c **** //==============================================================================
1413:..\src/interruptions.c **** //                                                           OVERCURRENT CONTROL
1414:..\src/interruptions.c **** //==============================================================================
1415:..\src/interruptions.c **** 
1416:..\src/interruptions.c **** void overcurrent_control() {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 96


 3926              		.loc 1 1416 0
 3927              		.cfi_startproc
 3928              		@ args = 0, pretend = 0, frame = 0
 3929              		@ frame_needed = 1, uses_anonymous_args = 0
 3930              		@ link register save eliminated.
 3931 0000 80B4     		push	{r7}
 3932              		.cfi_def_cfa_offset 4
 3933              		.cfi_offset 7, -4
 3934 0002 00AF     		add	r7, sp, #0
 3935              		.cfi_def_cfa_register 7
1417:..\src/interruptions.c ****     if (c_mem.current_limit != 0) {
 3936              		.loc 1 1417 0
 3937 0004 174B     		ldr	r3, .L286
 3938 0006 B3F96830 		ldrsh	r3, [r3, #104]
 3939 000a 002B     		cmp	r3, #0
 3940 000c 25D0     		beq	.L285
1418:..\src/interruptions.c ****         // if the current is over the limit
1419:..\src/interruptions.c ****         if (g_meas.curr > c_mem.current_limit) {
 3941              		.loc 1 1419 0
 3942 000e 164B     		ldr	r3, .L286+4
 3943 0010 DB68     		ldr	r3, [r3, #12]
 3944 0012 144A     		ldr	r2, .L286
 3945 0014 B2F96820 		ldrsh	r2, [r2, #104]
 3946 0018 9342     		cmp	r3, r2
 3947 001a 06DD     		ble	.L282
1420:..\src/interruptions.c ****             //decrease pwm_limit
1421:..\src/interruptions.c ****             dev_pwm_limit--;
 3948              		.loc 1 1421 0
 3949 001c 134B     		ldr	r3, .L286+8
 3950 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3951 0020 013B     		subs	r3, r3, #1
 3952 0022 DAB2     		uxtb	r2, r3
 3953 0024 114B     		ldr	r3, .L286+8
 3954 0026 1A70     		strb	r2, [r3]
 3955 0028 0DE0     		b	.L284
 3956              	.L282:
1422:..\src/interruptions.c ****         // if the current is in the safe zone
1423:..\src/interruptions.c ****         } else if (g_meas.curr < (c_mem.current_limit - CURRENT_HYSTERESIS)) {
 3957              		.loc 1 1423 0
 3958 002a 0F4B     		ldr	r3, .L286+4
 3959 002c DA68     		ldr	r2, [r3, #12]
 3960 002e 0D4B     		ldr	r3, .L286
 3961 0030 B3F96830 		ldrsh	r3, [r3, #104]
 3962 0034 0A3B     		subs	r3, r3, #10
 3963 0036 9A42     		cmp	r2, r3
 3964 0038 05DA     		bge	.L284
1424:..\src/interruptions.c ****             //increase pwm_limit
1425:..\src/interruptions.c ****             dev_pwm_limit++;
 3965              		.loc 1 1425 0
 3966 003a 0C4B     		ldr	r3, .L286+8
 3967 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3968 003e 0133     		adds	r3, r3, #1
 3969 0040 DAB2     		uxtb	r2, r3
 3970 0042 0A4B     		ldr	r3, .L286+8
 3971 0044 1A70     		strb	r2, [r3]
 3972              	.L284:
1426:..\src/interruptions.c ****         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 97


1427:..\src/interruptions.c **** 
1428:..\src/interruptions.c ****         // Bound pwm_limit
1429:..\src/interruptions.c ****         if (dev_pwm_limit < 0) 
1430:..\src/interruptions.c ****             dev_pwm_limit = 0;
1431:..\src/interruptions.c ****         else 
1432:..\src/interruptions.c ****             if (dev_pwm_limit > dev_pwm_sat) 
 3973              		.loc 1 1432 0
 3974 0046 094B     		ldr	r3, .L286+8
 3975 0048 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3976 004a 094B     		ldr	r3, .L286+12
 3977 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3978 004e 9A42     		cmp	r2, r3
 3979 0050 03D9     		bls	.L285
1433:..\src/interruptions.c ****                 dev_pwm_limit = dev_pwm_sat;
 3980              		.loc 1 1433 0
 3981 0052 074B     		ldr	r3, .L286+12
 3982 0054 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3983 0056 054B     		ldr	r3, .L286+8
 3984 0058 1A70     		strb	r2, [r3]
 3985              	.L285:
1434:..\src/interruptions.c ****     }
1435:..\src/interruptions.c **** }
 3986              		.loc 1 1435 0
 3987 005a 00BF     		nop
 3988 005c BD46     		mov	sp, r7
 3989              		.cfi_def_cfa_register 13
 3990              		@ sp needed
 3991 005e 80BC     		pop	{r7}
 3992              		.cfi_restore 7
 3993              		.cfi_def_cfa_offset 0
 3994 0060 7047     		bx	lr
 3995              	.L287:
 3996 0062 00BF     		.align	2
 3997              	.L286:
 3998 0064 00000000 		.word	c_mem
 3999 0068 00000000 		.word	g_meas
 4000 006c 00000000 		.word	dev_pwm_limit
 4001 0070 00000000 		.word	dev_pwm_sat
 4002              		.cfi_endproc
 4003              	.LFE71:
 4004              		.size	overcurrent_control, .-overcurrent_control
 4005              		.section	.text.pwm_limit_search,"ax",%progbits
 4006              		.align	2
 4007              		.global	pwm_limit_search
 4008              		.thumb
 4009              		.thumb_func
 4010              		.type	pwm_limit_search, %function
 4011              	pwm_limit_search:
 4012              	.LFB72:
1436:..\src/interruptions.c **** 
1437:..\src/interruptions.c **** //==============================================================================
1438:..\src/interruptions.c **** //                                                              PWM_LIMIT_SEARCH
1439:..\src/interruptions.c **** //==============================================================================
1440:..\src/interruptions.c **** 
1441:..\src/interruptions.c **** void pwm_limit_search() {
 4013              		.loc 1 1441 0
 4014              		.cfi_startproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 98


 4015              		@ args = 0, pretend = 0, frame = 8
 4016              		@ frame_needed = 1, uses_anonymous_args = 0
 4017              		@ link register save eliminated.
 4018 0000 80B4     		push	{r7}
 4019              		.cfi_def_cfa_offset 4
 4020              		.cfi_offset 7, -4
 4021 0002 83B0     		sub	sp, sp, #12
 4022              		.cfi_def_cfa_offset 16
 4023 0004 00AF     		add	r7, sp, #0
 4024              		.cfi_def_cfa_register 7
1442:..\src/interruptions.c **** 
1443:..\src/interruptions.c ****     uint8 CYDATA index;
1444:..\src/interruptions.c ****     uint16 CYDATA max_tension = 25500;
 4025              		.loc 1 1444 0
 4026 0006 46F29C33 		movw	r3, #25500
 4027 000a FB80     		strh	r3, [r7, #6]	@ movhi
1445:..\src/interruptions.c ****     uint16 CYDATA min_tension = 11500;
 4028              		.loc 1 1445 0
 4029 000c 42F6EC43 		movw	r3, #11500
 4030 0010 BB80     		strh	r3, [r7, #4]	@ movhi
1446:..\src/interruptions.c ****     
1447:..\src/interruptions.c ****     if (dev_tension > max_tension) {
 4031              		.loc 1 1447 0
 4032 0012 FA88     		ldrh	r2, [r7, #6]
 4033 0014 104B     		ldr	r3, .L293
 4034 0016 1B68     		ldr	r3, [r3]
 4035 0018 9A42     		cmp	r2, r3
 4036 001a 03DA     		bge	.L289
1448:..\src/interruptions.c ****         dev_pwm_sat = 0;
 4037              		.loc 1 1448 0
 4038 001c 0F4B     		ldr	r3, .L293+4
 4039 001e 0022     		movs	r2, #0
 4040 0020 1A70     		strb	r2, [r3]
1449:..\src/interruptions.c ****     } else if (dev_tension < min_tension) {
1450:..\src/interruptions.c ****         dev_pwm_sat = 100;
1451:..\src/interruptions.c ****     } else {
1452:..\src/interruptions.c ****         index = (uint8)((dev_tension - min_tension) >> 9);
1453:..\src/interruptions.c ****         dev_pwm_sat = pwm_preload_values[index];
1454:..\src/interruptions.c ****     }
1455:..\src/interruptions.c **** }
 4041              		.loc 1 1455 0
 4042 0022 13E0     		b	.L292
 4043              	.L289:
1449:..\src/interruptions.c ****     } else if (dev_tension < min_tension) {
 4044              		.loc 1 1449 0
 4045 0024 BA88     		ldrh	r2, [r7, #4]
 4046 0026 0C4B     		ldr	r3, .L293
 4047 0028 1B68     		ldr	r3, [r3]
 4048 002a 9A42     		cmp	r2, r3
 4049 002c 03DD     		ble	.L291
1450:..\src/interruptions.c ****     } else {
 4050              		.loc 1 1450 0
 4051 002e 0B4B     		ldr	r3, .L293+4
 4052 0030 6422     		movs	r2, #100
 4053 0032 1A70     		strb	r2, [r3]
 4054              		.loc 1 1455 0
 4055 0034 0AE0     		b	.L292
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 99


 4056              	.L291:
1452:..\src/interruptions.c ****         dev_pwm_sat = pwm_preload_values[index];
 4057              		.loc 1 1452 0
 4058 0036 084B     		ldr	r3, .L293
 4059 0038 1A68     		ldr	r2, [r3]
 4060 003a BB88     		ldrh	r3, [r7, #4]
 4061 003c D31A     		subs	r3, r2, r3
 4062 003e 5B12     		asrs	r3, r3, #9
 4063 0040 FB70     		strb	r3, [r7, #3]
1453:..\src/interruptions.c ****     }
 4064              		.loc 1 1453 0
 4065 0042 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4066 0044 064A     		ldr	r2, .L293+8
 4067 0046 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 4068 0048 044B     		ldr	r3, .L293+4
 4069 004a 1A70     		strb	r2, [r3]
 4070              	.L292:
 4071              		.loc 1 1455 0
 4072 004c 00BF     		nop
 4073 004e 0C37     		adds	r7, r7, #12
 4074              		.cfi_def_cfa_offset 4
 4075 0050 BD46     		mov	sp, r7
 4076              		.cfi_def_cfa_register 13
 4077              		@ sp needed
 4078 0052 80BC     		pop	{r7}
 4079              		.cfi_restore 7
 4080              		.cfi_def_cfa_offset 0
 4081 0054 7047     		bx	lr
 4082              	.L294:
 4083 0056 00BF     		.align	2
 4084              	.L293:
 4085 0058 00000000 		.word	dev_tension
 4086 005c 00000000 		.word	dev_pwm_sat
 4087 0060 00000000 		.word	pwm_preload_values
 4088              		.cfi_endproc
 4089              	.LFE72:
 4090              		.size	pwm_limit_search, .-pwm_limit_search
 4091              		.section	.text.cycles_counter_update,"ax",%progbits
 4092              		.align	2
 4093              		.global	cycles_counter_update
 4094              		.thumb
 4095              		.thumb_func
 4096              		.type	cycles_counter_update, %function
 4097              	cycles_counter_update:
 4098              	.LFB73:
1456:..\src/interruptions.c **** 
1457:..\src/interruptions.c **** //==============================================================================
1458:..\src/interruptions.c **** //                                                         CYCLES COUNTER UPDATE
1459:..\src/interruptions.c **** //==============================================================================
1460:..\src/interruptions.c **** 
1461:..\src/interruptions.c **** void cycles_counter_update() {
 4099              		.loc 1 1461 0
 4100              		.cfi_startproc
 4101              		@ args = 0, pretend = 0, frame = 16
 4102              		@ frame_needed = 1, uses_anonymous_args = 0
 4103 0000 80B5     		push	{r7, lr}
 4104              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 100


 4105              		.cfi_offset 7, -8
 4106              		.cfi_offset 14, -4
 4107 0002 84B0     		sub	sp, sp, #16
 4108              		.cfi_def_cfa_offset 24
 4109 0004 00AF     		add	r7, sp, #0
 4110              		.cfi_def_cfa_register 7
1462:..\src/interruptions.c ****     static uint8 pos_cycle_status = STATE_INACTIVE;
1463:..\src/interruptions.c ****     static uint8 emg_cycle_status[2] = {STATE_INACTIVE, STATE_INACTIVE};
1464:..\src/interruptions.c ****     static uint8 rest_cycle_status = STATE_INACTIVE;
1465:..\src/interruptions.c ****     static int32 bin_threshold = 250;
1466:..\src/interruptions.c ****     static int32 thr_pos = 0, max_pos = 0;
1467:..\src/interruptions.c ****     uint8 i, bin_st, bin_max;
1468:..\src/interruptions.c ****     int32 curr_pos;
1469:..\src/interruptions.c ****     int32 step;
1470:..\src/interruptions.c ****     static uint32 timer_value_s, timer_value_e;
1471:..\src/interruptions.c ****     
1472:..\src/interruptions.c ****     curr_pos = (int32)(g_meas.pos[0] >> g_mem.res[0]);
 4111              		.loc 1 1472 0
 4112 0006 AB4B     		ldr	r3, .L329
 4113 0008 1B68     		ldr	r3, [r3]
 4114 000a AB4A     		ldr	r2, .L329+4
 4115 000c 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4116 0010 1341     		asrs	r3, r3, r2
 4117 0012 BB60     		str	r3, [r7, #8]
1473:..\src/interruptions.c ****       
1474:..\src/interruptions.c ****     // State machine - Evaluate position counter update
1475:..\src/interruptions.c ****     switch (pos_cycle_status){
 4118              		.loc 1 1475 0
 4119 0014 A94B     		ldr	r3, .L329+8
 4120 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4121 0018 012B     		cmp	r3, #1
 4122 001a 20D0     		beq	.L297
 4123 001c 022B     		cmp	r3, #2
 4124 001e 3BD0     		beq	.L298
 4125 0020 002B     		cmp	r3, #0
 4126 0022 40F0A880 		bne	.L296
1476:..\src/interruptions.c ****         case STATE_INACTIVE:
1477:..\src/interruptions.c ****             if (pwm_sign == 1){
 4127              		.loc 1 1477 0
 4128 0026 A64B     		ldr	r3, .L329+12
 4129 0028 93F90030 		ldrsb	r3, [r3]
 4130 002c 012B     		cmp	r3, #1
 4131 002e 40F09F80 		bne	.L323
1478:..\src/interruptions.c ****                 thr_pos = curr_pos; 
 4132              		.loc 1 1478 0
 4133 0032 A44A     		ldr	r2, .L329+16
 4134 0034 BB68     		ldr	r3, [r7, #8]
 4135 0036 1360     		str	r3, [r2]
1479:..\src/interruptions.c ****                 g_mem.wire_disp = g_mem.wire_disp + abs(max_pos - thr_pos);     //sum opening track
 4136              		.loc 1 1479 0
 4137 0038 9F4B     		ldr	r3, .L329+4
 4138 003a D3F80431 		ldr	r3, [r3, #260]
 4139 003e A24A     		ldr	r2, .L329+20
 4140 0040 1168     		ldr	r1, [r2]
 4141 0042 A04A     		ldr	r2, .L329+16
 4142 0044 1268     		ldr	r2, [r2]
 4143 0046 8A1A     		subs	r2, r1, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 101


 4144 0048 002A     		cmp	r2, #0
 4145 004a B8BF     		it	lt
 4146 004c 5242     		rsblt	r2, r2, #0
 4147 004e 1344     		add	r3, r3, r2
 4148 0050 994A     		ldr	r2, .L329+4
 4149 0052 C2F80431 		str	r3, [r2, #260]
1480:..\src/interruptions.c ****                 pos_cycle_status = STATE_ACTIVE;
 4150              		.loc 1 1480 0
 4151 0056 994B     		ldr	r3, .L329+8
 4152 0058 0122     		movs	r2, #1
 4153 005a 1A70     		strb	r2, [r3]
1481:..\src/interruptions.c ****             }
1482:..\src/interruptions.c ****             break;
 4154              		.loc 1 1482 0
 4155 005c 88E0     		b	.L323
 4156              	.L297:
1483:..\src/interruptions.c ****         case STATE_ACTIVE:
1484:..\src/interruptions.c ****             if (pwm_sign == -1){
 4157              		.loc 1 1484 0
 4158 005e 984B     		ldr	r3, .L329+12
 4159 0060 93F90030 		ldrsb	r3, [r3]
 4160 0064 B3F1FF3F 		cmp	r3, #-1
 4161 0068 40F08480 		bne	.L324
1485:..\src/interruptions.c ****                 max_pos = curr_pos;
 4162              		.loc 1 1485 0
 4163 006c 964A     		ldr	r2, .L329+20
 4164 006e BB68     		ldr	r3, [r7, #8]
 4165 0070 1360     		str	r3, [r2]
1486:..\src/interruptions.c ****                 g_mem.wire_disp = g_mem.wire_disp + abs(max_pos - thr_pos);     //sum closure track
 4166              		.loc 1 1486 0
 4167 0072 914B     		ldr	r3, .L329+4
 4168 0074 D3F80431 		ldr	r3, [r3, #260]
 4169 0078 934A     		ldr	r2, .L329+20
 4170 007a 1168     		ldr	r1, [r2]
 4171 007c 914A     		ldr	r2, .L329+16
 4172 007e 1268     		ldr	r2, [r2]
 4173 0080 8A1A     		subs	r2, r1, r2
 4174 0082 002A     		cmp	r2, #0
 4175 0084 B8BF     		it	lt
 4176 0086 5242     		rsblt	r2, r2, #0
 4177 0088 1344     		add	r3, r3, r2
 4178 008a 8B4A     		ldr	r2, .L329+4
 4179 008c C2F80431 		str	r3, [r2, #260]
1487:..\src/interruptions.c ****                 pos_cycle_status = COUNTER_INC;
 4180              		.loc 1 1487 0
 4181 0090 8A4B     		ldr	r3, .L329+8
 4182 0092 0222     		movs	r2, #2
 4183 0094 1A70     		strb	r2, [r3]
1488:..\src/interruptions.c ****             }
1489:..\src/interruptions.c ****             break;
 4184              		.loc 1 1489 0
 4185 0096 6DE0     		b	.L324
 4186              	.L298:
1490:..\src/interruptions.c ****         case COUNTER_INC:
1491:..\src/interruptions.c ****             if (abs(max_pos - thr_pos) > bin_threshold){
 4187              		.loc 1 1491 0
 4188 0098 8B4B     		ldr	r3, .L329+20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 102


 4189 009a 1A68     		ldr	r2, [r3]
 4190 009c 894B     		ldr	r3, .L329+16
 4191 009e 1B68     		ldr	r3, [r3]
 4192 00a0 D31A     		subs	r3, r2, r3
 4193 00a2 83EAE372 		eor	r2, r3, r3, asr #31
 4194 00a6 A2EBE372 		sub	r2, r2, r3, asr #31
 4195 00aa 884B     		ldr	r3, .L329+24
 4196 00ac 1B68     		ldr	r3, [r3]
 4197 00ae 9A42     		cmp	r2, r3
 4198 00b0 5ADD     		ble	.L302
1492:..\src/interruptions.c ****                 //update position histogram
1493:..\src/interruptions.c ****                 step = ((int32)(g_mem.pos_lim_sup >> g_mem.res[0]) / 10);
 4199              		.loc 1 1493 0
 4200 00b2 814B     		ldr	r3, .L329+4
 4201 00b4 DB6D     		ldr	r3, [r3, #92]
 4202 00b6 804A     		ldr	r2, .L329+4
 4203 00b8 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4204 00bc 1341     		asrs	r3, r3, r2
 4205 00be 844A     		ldr	r2, .L329+28
 4206 00c0 82FB0312 		smull	r1, r2, r2, r3
 4207 00c4 9210     		asrs	r2, r2, #2
 4208 00c6 DB17     		asrs	r3, r3, #31
 4209 00c8 D31A     		subs	r3, r2, r3
 4210 00ca 7B60     		str	r3, [r7, #4]
1494:..\src/interruptions.c ****                 bin_st  = (uint8)(thr_pos/step);
 4211              		.loc 1 1494 0
 4212 00cc 7D4B     		ldr	r3, .L329+16
 4213 00ce 1A68     		ldr	r2, [r3]
 4214 00d0 7B68     		ldr	r3, [r7, #4]
 4215 00d2 92FBF3F3 		sdiv	r3, r2, r3
 4216 00d6 FB70     		strb	r3, [r7, #3]
1495:..\src/interruptions.c ****                 bin_max = (uint8)(max_pos/step);
 4217              		.loc 1 1495 0
 4218 00d8 7B4B     		ldr	r3, .L329+20
 4219 00da 1A68     		ldr	r2, [r3]
 4220 00dc 7B68     		ldr	r3, [r7, #4]
 4221 00de 92FBF3F3 		sdiv	r3, r2, r3
 4222 00e2 BB70     		strb	r3, [r7, #2]
1496:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 4223              		.loc 1 1496 0
 4224 00e4 FB78     		ldrb	r3, [r7, #3]
 4225 00e6 FB73     		strb	r3, [r7, #15]
 4226 00e8 0DE0     		b	.L303
 4227              	.L304:
1497:..\src/interruptions.c ****                     //position_hist counts how many times the SoftHand stays in bin while closing
1498:..\src/interruptions.c ****                     g_mem.position_hist[i] = g_mem.position_hist[i] + 1;
 4228              		.loc 1 1498 0 discriminator 3
 4229 00ea FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4230 00ec FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4231 00ee 7249     		ldr	r1, .L329+4
 4232 00f0 3232     		adds	r2, r2, #50
 4233 00f2 51F82220 		ldr	r2, [r1, r2, lsl #2]
 4234 00f6 0132     		adds	r2, r2, #1
 4235 00f8 6F49     		ldr	r1, .L329+4
 4236 00fa 3233     		adds	r3, r3, #50
 4237 00fc 41F82320 		str	r2, [r1, r3, lsl #2]
1496:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 103


 4238              		.loc 1 1496 0 discriminator 3
 4239 0100 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4240 0102 0133     		adds	r3, r3, #1
 4241 0104 FB73     		strb	r3, [r7, #15]
 4242              	.L303:
1496:..\src/interruptions.c ****                 for (i=bin_st; i<= bin_max; i++){
 4243              		.loc 1 1496 0 is_stmt 0 discriminator 1
 4244 0106 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4245 0108 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 4246 010a 9A42     		cmp	r2, r3
 4247 010c EDD9     		bls	.L304
1499:..\src/interruptions.c ****                 }
1500:..\src/interruptions.c ****                 
1501:..\src/interruptions.c ****                 //update current histogram
1502:..\src/interruptions.c ****                 step = ((int32)(g_mem.current_limit) / 4);
 4248              		.loc 1 1502 0 is_stmt 1
 4249 010e 6A4B     		ldr	r3, .L329+4
 4250 0110 B3F96830 		ldrsh	r3, [r3, #104]
 4251 0114 002B     		cmp	r3, #0
 4252 0116 00DA     		bge	.L305
 4253 0118 0333     		adds	r3, r3, #3
 4254              	.L305:
 4255 011a 9B10     		asrs	r3, r3, #2
 4256 011c 1BB2     		sxth	r3, r3
 4257 011e 7B60     		str	r3, [r7, #4]
1503:..\src/interruptions.c ****                 if (g_meas.curr > g_mem.current_limit)
 4258              		.loc 1 1503 0
 4259 0120 644B     		ldr	r3, .L329
 4260 0122 DB68     		ldr	r3, [r3, #12]
 4261 0124 644A     		ldr	r2, .L329+4
 4262 0126 B2F96820 		ldrsh	r2, [r2, #104]
 4263 012a 9342     		cmp	r3, r2
 4264 012c 07DD     		ble	.L306
1504:..\src/interruptions.c ****                     g_mem.current_hist[3] = g_mem.current_hist[3] + 1; 
 4265              		.loc 1 1504 0
 4266 012e 624B     		ldr	r3, .L329+4
 4267 0130 D3F8FC30 		ldr	r3, [r3, #252]
 4268 0134 0133     		adds	r3, r3, #1
 4269 0136 604A     		ldr	r2, .L329+4
 4270 0138 C2F8FC30 		str	r3, [r2, #252]
 4271 013c 14E0     		b	.L302
 4272              	.L306:
1505:..\src/interruptions.c ****                 else
1506:..\src/interruptions.c ****                     g_mem.current_hist[(uint8)(g_meas.curr/step)] = g_mem.current_hist[(uint8)(g_me
 4273              		.loc 1 1506 0
 4274 013e 5D4B     		ldr	r3, .L329
 4275 0140 DA68     		ldr	r2, [r3, #12]
 4276 0142 7B68     		ldr	r3, [r7, #4]
 4277 0144 92FBF3F3 		sdiv	r3, r2, r3
 4278 0148 DBB2     		uxtb	r3, r3
 4279 014a 5A4A     		ldr	r2, .L329
 4280 014c D168     		ldr	r1, [r2, #12]
 4281 014e 7A68     		ldr	r2, [r7, #4]
 4282 0150 91FBF2F2 		sdiv	r2, r1, r2
 4283 0154 D2B2     		uxtb	r2, r2
 4284 0156 5849     		ldr	r1, .L329+4
 4285 0158 3C32     		adds	r2, r2, #60
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 104


 4286 015a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 4287 015e 0132     		adds	r2, r2, #1
 4288 0160 5549     		ldr	r1, .L329+4
 4289 0162 3C33     		adds	r3, r3, #60
 4290 0164 41F82320 		str	r2, [r1, r3, lsl #2]
 4291              	.L302:
1507:..\src/interruptions.c ****             }
1508:..\src/interruptions.c ****             pos_cycle_status = STATE_INACTIVE;
 4292              		.loc 1 1508 0
 4293 0168 544B     		ldr	r3, .L329+8
 4294 016a 0022     		movs	r2, #0
 4295 016c 1A70     		strb	r2, [r3]
1509:..\src/interruptions.c ****             break;
 4296              		.loc 1 1509 0
 4297 016e 02E0     		b	.L296
 4298              	.L323:
1482:..\src/interruptions.c ****         case STATE_ACTIVE:
 4299              		.loc 1 1482 0
 4300 0170 00BF     		nop
 4301 0172 00E0     		b	.L296
 4302              	.L324:
1489:..\src/interruptions.c ****         case COUNTER_INC:
 4303              		.loc 1 1489 0
 4304 0174 00BF     		nop
 4305              	.L296:
1510:..\src/interruptions.c ****     }
1511:..\src/interruptions.c ****     
1512:..\src/interruptions.c ****     // State machine - Evaluate EMG counter update
1513:..\src/interruptions.c ****     for (i=0; i<2 && emg_1_status == NORMAL && emg_2_status == NORMAL; i++){
 4306              		.loc 1 1513 0
 4307 0176 0023     		movs	r3, #0
 4308 0178 FB73     		strb	r3, [r7, #15]
 4309 017a 3CE0     		b	.L307
 4310              	.L315:
1514:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 4311              		.loc 1 1514 0
 4312 017c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4313 017e 554A     		ldr	r2, .L329+32
 4314 0180 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4315 0182 012B     		cmp	r3, #1
 4316 0184 15D0     		beq	.L309
 4317 0186 022B     		cmp	r3, #2
 4318 0188 1FD0     		beq	.L310
 4319 018a 002B     		cmp	r3, #0
 4320 018c 30D1     		bne	.L308
1515:..\src/interruptions.c ****             case STATE_INACTIVE:
1516:..\src/interruptions.c ****                 if (g_meas.emg[i] > g_mem.emg_threshold[i]){
 4321              		.loc 1 1516 0
 4322 018e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4323 0190 484A     		ldr	r2, .L329
 4324 0192 0633     		adds	r3, r3, #6
 4325 0194 52F82320 		ldr	r2, [r2, r3, lsl #2]
 4326 0198 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4327 019a 4749     		ldr	r1, .L329+4
 4328 019c 3433     		adds	r3, r3, #52
 4329 019e 5B00     		lsls	r3, r3, #1
 4330 01a0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 105


 4331 01a2 5B88     		ldrh	r3, [r3, #2]
 4332 01a4 9A42     		cmp	r2, r3
 4333 01a6 20DD     		ble	.L325
1517:..\src/interruptions.c ****                     emg_cycle_status[i] = STATE_ACTIVE;
 4334              		.loc 1 1517 0
 4335 01a8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4336 01aa 4A4A     		ldr	r2, .L329+32
 4337 01ac 0121     		movs	r1, #1
 4338 01ae D154     		strb	r1, [r2, r3]
1518:..\src/interruptions.c ****                 }
1519:..\src/interruptions.c ****                 break;
 4339              		.loc 1 1519 0
 4340 01b0 1BE0     		b	.L325
 4341              	.L309:
1520:..\src/interruptions.c ****             case STATE_ACTIVE:
1521:..\src/interruptions.c ****                 if (g_meas.emg[i] < 10){
 4342              		.loc 1 1521 0
 4343 01b2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4344 01b4 3F4A     		ldr	r2, .L329
 4345 01b6 0633     		adds	r3, r3, #6
 4346 01b8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4347 01bc 092B     		cmp	r3, #9
 4348 01be 16DC     		bgt	.L326
1522:..\src/interruptions.c ****                     emg_cycle_status[i] = COUNTER_INC;
 4349              		.loc 1 1522 0
 4350 01c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4351 01c2 444A     		ldr	r2, .L329+32
 4352 01c4 0221     		movs	r1, #2
 4353 01c6 D154     		strb	r1, [r2, r3]
1523:..\src/interruptions.c ****                 }
1524:..\src/interruptions.c ****                 break;
 4354              		.loc 1 1524 0
 4355 01c8 11E0     		b	.L326
 4356              	.L310:
1525:..\src/interruptions.c ****             case COUNTER_INC:
1526:..\src/interruptions.c ****                 g_mem.emg_counter[i] = g_mem.emg_counter[i] + 1;
 4357              		.loc 1 1526 0
 4358 01ca FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4359 01cc FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 4360 01ce 3A49     		ldr	r1, .L329+4
 4361 01d0 3032     		adds	r2, r2, #48
 4362 01d2 51F82220 		ldr	r2, [r1, r2, lsl #2]
 4363 01d6 0132     		adds	r2, r2, #1
 4364 01d8 3749     		ldr	r1, .L329+4
 4365 01da 3033     		adds	r3, r3, #48
 4366 01dc 41F82320 		str	r2, [r1, r3, lsl #2]
1527:..\src/interruptions.c ****                 emg_cycle_status[i] = STATE_INACTIVE;
 4367              		.loc 1 1527 0
 4368 01e0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4369 01e2 3C4A     		ldr	r2, .L329+32
 4370 01e4 0021     		movs	r1, #0
 4371 01e6 D154     		strb	r1, [r2, r3]
1528:..\src/interruptions.c ****                 break;
 4372              		.loc 1 1528 0
 4373 01e8 02E0     		b	.L308
 4374              	.L325:
1519:..\src/interruptions.c ****             case STATE_ACTIVE:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 106


 4375              		.loc 1 1519 0
 4376 01ea 00BF     		nop
 4377 01ec 00E0     		b	.L308
 4378              	.L326:
1524:..\src/interruptions.c ****             case COUNTER_INC:
 4379              		.loc 1 1524 0
 4380 01ee 00BF     		nop
 4381              	.L308:
1513:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 4382              		.loc 1 1513 0 discriminator 2
 4383 01f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4384 01f2 0133     		adds	r3, r3, #1
 4385 01f4 FB73     		strb	r3, [r7, #15]
 4386              	.L307:
1513:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 4387              		.loc 1 1513 0 is_stmt 0 discriminator 1
 4388 01f6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 4389 01f8 012B     		cmp	r3, #1
 4390 01fa 07D8     		bhi	.L314
1513:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 4391              		.loc 1 1513 0 discriminator 3
 4392 01fc 364B     		ldr	r3, .L329+36
 4393 01fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4394 0200 002B     		cmp	r3, #0
 4395 0202 03D1     		bne	.L314
1513:..\src/interruptions.c ****         switch (emg_cycle_status[i]){
 4396              		.loc 1 1513 0 discriminator 4
 4397 0204 354B     		ldr	r3, .L329+40
 4398 0206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4399 0208 002B     		cmp	r3, #0
 4400 020a B7D0     		beq	.L315
 4401              	.L314:
1529:..\src/interruptions.c ****         }
1530:..\src/interruptions.c ****     }
1531:..\src/interruptions.c ****     
1532:..\src/interruptions.c ****     // State machine - Evaluate rest counter update
1533:..\src/interruptions.c ****     switch (rest_cycle_status){
 4402              		.loc 1 1533 0 is_stmt 1
 4403 020c 344B     		ldr	r3, .L329+44
 4404 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 0210 012B     		cmp	r3, #1
 4406 0212 11D0     		beq	.L317
 4407 0214 022B     		cmp	r3, #2
 4408 0216 29D0     		beq	.L318
 4409 0218 002B     		cmp	r3, #0
 4410 021a 45D1     		bne	.L316
1534:..\src/interruptions.c ****         case STATE_INACTIVE:
1535:..\src/interruptions.c ****             if (rest_enabled){
 4411              		.loc 1 1535 0
 4412 021c 314B     		ldr	r3, .L329+48
 4413 021e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4414 0220 002B     		cmp	r3, #0
 4415 0222 3ED0     		beq	.L327
1536:..\src/interruptions.c ****                 timer_value_s = (uint32)CYCLES_TIMER_ReadCounter();
 4416              		.loc 1 1536 0
 4417 0224 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 4418 0228 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 107


 4419 022a 1A46     		mov	r2, r3
 4420 022c 2E4B     		ldr	r3, .L329+52
 4421 022e 1A60     		str	r2, [r3]
1537:..\src/interruptions.c ****                 rest_cycle_status = STATE_ACTIVE;
 4422              		.loc 1 1537 0
 4423 0230 2B4B     		ldr	r3, .L329+44
 4424 0232 0122     		movs	r2, #1
 4425 0234 1A70     		strb	r2, [r3]
1538:..\src/interruptions.c ****             }
1539:..\src/interruptions.c ****             break;
 4426              		.loc 1 1539 0
 4427 0236 34E0     		b	.L327
 4428              	.L317:
1540:..\src/interruptions.c ****         case STATE_ACTIVE:
1541:..\src/interruptions.c ****             if (!rest_enabled){
 4429              		.loc 1 1541 0
 4430 0238 2A4B     		ldr	r3, .L329+48
 4431 023a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4432 023c 002B     		cmp	r3, #0
 4433 023e 32D1     		bne	.L328
1542:..\src/interruptions.c ****                 timer_value_e = (uint32)CYCLES_TIMER_ReadCounter();
 4434              		.loc 1 1542 0
 4435 0240 FFF7FEFF 		bl	CYCLES_TIMER_ReadCounter
 4436 0244 0346     		mov	r3, r0
 4437 0246 1A46     		mov	r2, r3
 4438 0248 284B     		ldr	r3, .L329+56
 4439 024a 1A60     		str	r2, [r3]
1543:..\src/interruptions.c ****                 if (timer_value_s < timer_value_e) {
 4440              		.loc 1 1543 0
 4441 024c 264B     		ldr	r3, .L329+52
 4442 024e 1A68     		ldr	r2, [r3]
 4443 0250 264B     		ldr	r3, .L329+56
 4444 0252 1B68     		ldr	r3, [r3]
 4445 0254 9A42     		cmp	r2, r3
 4446 0256 05D2     		bcs	.L322
1544:..\src/interruptions.c ****                     timer_value_s = timer_value_s + (uint32)1200;
 4447              		.loc 1 1544 0
 4448 0258 234B     		ldr	r3, .L329+52
 4449 025a 1B68     		ldr	r3, [r3]
 4450 025c 03F59663 		add	r3, r3, #1200
 4451 0260 214A     		ldr	r2, .L329+52
 4452 0262 1360     		str	r3, [r2]
 4453              	.L322:
1545:..\src/interruptions.c ****                 }
1546:..\src/interruptions.c ****                 rest_cycle_status = COUNTER_INC;
 4454              		.loc 1 1546 0
 4455 0264 1E4B     		ldr	r3, .L329+44
 4456 0266 0222     		movs	r2, #2
 4457 0268 1A70     		strb	r2, [r3]
1547:..\src/interruptions.c ****             }
1548:..\src/interruptions.c ****             break;
 4458              		.loc 1 1548 0
 4459 026a 1CE0     		b	.L328
 4460              	.L318:
1549:..\src/interruptions.c ****         case COUNTER_INC: 
1550:..\src/interruptions.c ****             g_mem.total_time_rest = g_mem.total_time_rest + (uint32)((timer_value_s - timer_value_e
 4461              		.loc 1 1550 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 108


 4462 026c 124B     		ldr	r3, .L329+4
 4463 026e D3F80C21 		ldr	r2, [r3, #268]
 4464 0272 1D4B     		ldr	r3, .L329+52
 4465 0274 1968     		ldr	r1, [r3]
 4466 0276 1D4B     		ldr	r3, .L329+56
 4467 0278 1B68     		ldr	r3, [r3]
 4468 027a CB1A     		subs	r3, r1, r3
 4469 027c 1C49     		ldr	r1, .L329+60
 4470 027e A1FB0313 		umull	r1, r3, r1, r3
 4471 0282 DB08     		lsrs	r3, r3, #3
 4472 0284 1344     		add	r3, r3, r2
 4473 0286 0C4A     		ldr	r2, .L329+4
 4474 0288 C2F80C31 		str	r3, [r2, #268]
1551:..\src/interruptions.c ****             g_mem.rest_counter = g_mem.rest_counter + 1;
 4475              		.loc 1 1551 0
 4476 028c 0A4B     		ldr	r3, .L329+4
 4477 028e D3F80031 		ldr	r3, [r3, #256]
 4478 0292 0133     		adds	r3, r3, #1
 4479 0294 084A     		ldr	r2, .L329+4
 4480 0296 C2F80031 		str	r3, [r2, #256]
1552:..\src/interruptions.c ****             rest_cycle_status = STATE_INACTIVE;
 4481              		.loc 1 1552 0
 4482 029a 114B     		ldr	r3, .L329+44
 4483 029c 0022     		movs	r2, #0
 4484 029e 1A70     		strb	r2, [r3]
1553:..\src/interruptions.c ****             break;
 4485              		.loc 1 1553 0
 4486 02a0 02E0     		b	.L316
 4487              	.L327:
1539:..\src/interruptions.c ****         case STATE_ACTIVE:
 4488              		.loc 1 1539 0
 4489 02a2 00BF     		nop
 4490 02a4 00E0     		b	.L316
 4491              	.L328:
1548:..\src/interruptions.c ****         case COUNTER_INC: 
 4492              		.loc 1 1548 0
 4493 02a6 00BF     		nop
 4494              	.L316:
1554:..\src/interruptions.c ****     }
1555:..\src/interruptions.c ****           
1556:..\src/interruptions.c ****     // This function writes rows [row_start, row_end] on EEPROM
1557:..\src/interruptions.c ****     save_cycles_eeprom();
 4495              		.loc 1 1557 0
 4496 02a8 FFF7FEFF 		bl	save_cycles_eeprom
1558:..\src/interruptions.c **** }
 4497              		.loc 1 1558 0
 4498 02ac 00BF     		nop
 4499 02ae 1037     		adds	r7, r7, #16
 4500              		.cfi_def_cfa_offset 8
 4501 02b0 BD46     		mov	sp, r7
 4502              		.cfi_def_cfa_register 13
 4503              		@ sp needed
 4504 02b2 80BD     		pop	{r7, pc}
 4505              	.L330:
 4506              		.align	2
 4507              	.L329:
 4508 02b4 00000000 		.word	g_meas
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 109


 4509 02b8 00000000 		.word	g_mem
 4510 02bc E8000000 		.word	pos_cycle_status.9985
 4511 02c0 00000000 		.word	pwm_sign
 4512 02c4 EC000000 		.word	thr_pos.9989
 4513 02c8 F0000000 		.word	max_pos.9990
 4514 02cc 0C000000 		.word	bin_threshold.9988
 4515 02d0 67666666 		.word	1717986919
 4516 02d4 F4000000 		.word	emg_cycle_status.9986
 4517 02d8 00000000 		.word	emg_1_status
 4518 02dc 00000000 		.word	emg_2_status
 4519 02e0 F6000000 		.word	rest_cycle_status.9987
 4520 02e4 00000000 		.word	rest_enabled
 4521 02e8 F8000000 		.word	timer_value_s.9996
 4522 02ec FC000000 		.word	timer_value_e.9997
 4523 02f0 CDCCCCCC 		.word	-858993459
 4524              		.cfi_endproc
 4525              	.LFE73:
 4526              		.size	cycles_counter_update, .-cycles_counter_update
 4527              		.section	.text.save_cycles_eeprom,"ax",%progbits
 4528              		.align	2
 4529              		.global	save_cycles_eeprom
 4530              		.thumb
 4531              		.thumb_func
 4532              		.type	save_cycles_eeprom, %function
 4533              	save_cycles_eeprom:
 4534              	.LFB74:
1559:..\src/interruptions.c **** 
1560:..\src/interruptions.c **** //==============================================================================
1561:..\src/interruptions.c **** //                                                            SAVE CYCLES EEPROM
1562:..\src/interruptions.c **** //==============================================================================
1563:..\src/interruptions.c **** 
1564:..\src/interruptions.c **** void save_cycles_eeprom() {
 4535              		.loc 1 1564 0
 4536              		.cfi_startproc
 4537              		@ args = 0, pretend = 0, frame = 24
 4538              		@ frame_needed = 1, uses_anonymous_args = 0
 4539 0000 80B5     		push	{r7, lr}
 4540              		.cfi_def_cfa_offset 8
 4541              		.cfi_offset 7, -8
 4542              		.cfi_offset 14, -4
 4543 0002 86B0     		sub	sp, sp, #24
 4544              		.cfi_def_cfa_offset 32
 4545 0004 00AF     		add	r7, sp, #0
 4546              		.cfi_def_cfa_register 7
1565:..\src/interruptions.c **** 
1566:..\src/interruptions.c ****     cystatus status;
1567:..\src/interruptions.c ****     static uint8 row_number;
1568:..\src/interruptions.c ****     uint8 row_start = 12;
 4547              		.loc 1 1568 0
 4548 0006 0C23     		movs	r3, #12
 4549 0008 FB75     		strb	r3, [r7, #23]
1569:..\src/interruptions.c ****     uint8* addr_start   = (uint8*)&g_mem.emg_counter[0];    //Data at beginning of the row 12
 4550              		.loc 1 1569 0
 4551 000a 394B     		ldr	r3, .L347
 4552 000c 3B61     		str	r3, [r7, #16]
1570:..\src/interruptions.c ****     uint8* addr_start_c = (uint8*)&c_mem.emg_counter[0];
 4553              		.loc 1 1570 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 110


 4554 000e 394B     		ldr	r3, .L347+4
 4555 0010 FB60     		str	r3, [r7, #12]
1571:..\src/interruptions.c ****     uint8 row_end   = row_start + EEPROM_COUNTERS_ROWS - 1;
 4556              		.loc 1 1571 0
 4557 0012 FB7D     		ldrb	r3, [r7, #23]
 4558 0014 0533     		adds	r3, r3, #5
 4559 0016 FB72     		strb	r3, [r7, #11]
1572:..\src/interruptions.c ****     static uint8* m_addr = NULL; 
1573:..\src/interruptions.c **** 
1574:..\src/interruptions.c ****     // This part of code writes rows [row_start, row_end] on EEPROM    
1575:..\src/interruptions.c ****     switch(cycles_status) {
 4560              		.loc 1 1575 0
 4561 0018 374B     		ldr	r3, .L347+8
 4562 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4563 001c 042B     		cmp	r3, #4
 4564 001e 63D8     		bhi	.L343
 4565 0020 01A2     		adr	r2, .L334
 4566 0022 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4567 0026 00BF     		.p2align 2
 4568              	.L334:
 4569 0028 3D000000 		.word	.L333+1
 4570 002c 5B000000 		.word	.L335+1
 4571 0030 8B000000 		.word	.L336+1
 4572 0034 C7000000 		.word	.L337+1
 4573 0038 DF000000 		.word	.L344+1
 4574              		.p2align 1
 4575              	.L333:
1576:..\src/interruptions.c ****         case PREPARE_DATA:
1577:..\src/interruptions.c ****             // Store data in c_mem structure to have consistent counters
1578:..\src/interruptions.c ****             memcpy( addr_start_c, addr_start, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );            
 4576              		.loc 1 1578 0
 4577 003c 6022     		movs	r2, #96
 4578 003e 3969     		ldr	r1, [r7, #16]
 4579 0040 F868     		ldr	r0, [r7, #12]
 4580 0042 FFF7FEFF 		bl	memcpy
1579:..\src/interruptions.c ****             m_addr = addr_start;
 4581              		.loc 1 1579 0
 4582 0046 2D4A     		ldr	r2, .L347+12
 4583 0048 3B69     		ldr	r3, [r7, #16]
 4584 004a 1360     		str	r3, [r2]
1580:..\src/interruptions.c ****             row_number = row_start;
 4585              		.loc 1 1580 0
 4586 004c 2C4A     		ldr	r2, .L347+16
 4587 004e FB7D     		ldrb	r3, [r7, #23]
 4588 0050 1370     		strb	r3, [r2]
1581:..\src/interruptions.c ****             cycles_status = WRITE_CYCLES;
 4589              		.loc 1 1581 0
 4590 0052 294B     		ldr	r3, .L347+8
 4591 0054 0122     		movs	r2, #1
 4592 0056 1A70     		strb	r2, [r3]
1582:..\src/interruptions.c ****             break;
 4593              		.loc 1 1582 0
 4594 0058 46E0     		b	.L332
 4595              	.L335:
1583:..\src/interruptions.c ****             
1584:..\src/interruptions.c ****         case WRITE_CYCLES:
1585:..\src/interruptions.c ****             EEPROM_UpdateTemperature();     //Check temperature of chip before writing
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 111


 4596              		.loc 1 1585 0
 4597 005a FFF7FEFF 		bl	EEPROM_UpdateTemperature
1586:..\src/interruptions.c ****             status = EEPROM_StartWrite((uint8*) m_addr, row_number);           
 4598              		.loc 1 1586 0
 4599 005e 274B     		ldr	r3, .L347+12
 4600 0060 1A68     		ldr	r2, [r3]
 4601 0062 274B     		ldr	r3, .L347+16
 4602 0064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4603 0066 1946     		mov	r1, r3
 4604 0068 1046     		mov	r0, r2
 4605 006a FFF7FEFF 		bl	EEPROM_StartWrite
 4606 006e 7860     		str	r0, [r7, #4]
1587:..\src/interruptions.c ****             if(status == CYRET_STARTED || status == CYRET_SUCCESS) {
 4607              		.loc 1 1587 0
 4608 0070 7B68     		ldr	r3, [r7, #4]
 4609 0072 072B     		cmp	r3, #7
 4610 0074 02D0     		beq	.L339
 4611              		.loc 1 1587 0 is_stmt 0 discriminator 1
 4612 0076 7B68     		ldr	r3, [r7, #4]
 4613 0078 002B     		cmp	r3, #0
 4614 007a 32D1     		bne	.L345
 4615              	.L339:
1588:..\src/interruptions.c ****                 cycles_status = WAIT_QUERY;
 4616              		.loc 1 1588 0 is_stmt 1
 4617 007c 1E4B     		ldr	r3, .L347+8
 4618 007e 0222     		movs	r2, #2
 4619 0080 1A70     		strb	r2, [r3]
1589:..\src/interruptions.c ****                 can_write = FALSE;
 4620              		.loc 1 1589 0
 4621 0082 204B     		ldr	r3, .L347+20
 4622 0084 0022     		movs	r2, #0
 4623 0086 1A70     		strb	r2, [r3]
1590:..\src/interruptions.c ****             }
1591:..\src/interruptions.c ****             break;
 4624              		.loc 1 1591 0
 4625 0088 2BE0     		b	.L345
 4626              	.L336:
1592:..\src/interruptions.c ****             
1593:..\src/interruptions.c ****         case WAIT_QUERY:
1594:..\src/interruptions.c ****             status = EEPROM_Query();
 4627              		.loc 1 1594 0
 4628 008a FFF7FEFF 		bl	EEPROM_Query
 4629 008e 7860     		str	r0, [r7, #4]
1595:..\src/interruptions.c ****             if(status == CYRET_SUCCESS) {
 4630              		.loc 1 1595 0
 4631 0090 7B68     		ldr	r3, [r7, #4]
 4632 0092 002B     		cmp	r3, #0
 4633 0094 27D1     		bne	.L346
1596:..\src/interruptions.c ****                 if (row_number < row_end) {
 4634              		.loc 1 1596 0
 4635 0096 1A4B     		ldr	r3, .L347+16
 4636 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4637 009a FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 4638 009c 9A42     		cmp	r2, r3
 4639 009e 0ED9     		bls	.L342
1597:..\src/interruptions.c ****                     m_addr = m_addr + EEPROM_BYTES_ROW;
 4640              		.loc 1 1597 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 112


 4641 00a0 164B     		ldr	r3, .L347+12
 4642 00a2 1B68     		ldr	r3, [r3]
 4643 00a4 1033     		adds	r3, r3, #16
 4644 00a6 154A     		ldr	r2, .L347+12
 4645 00a8 1360     		str	r3, [r2]
1598:..\src/interruptions.c ****                     row_number = row_number + 1;
 4646              		.loc 1 1598 0
 4647 00aa 154B     		ldr	r3, .L347+16
 4648 00ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4649 00ae 0133     		adds	r3, r3, #1
 4650 00b0 DAB2     		uxtb	r2, r3
 4651 00b2 134B     		ldr	r3, .L347+16
 4652 00b4 1A70     		strb	r2, [r3]
1599:..\src/interruptions.c ****                     cycles_status = WRITE_CYCLES;
 4653              		.loc 1 1599 0
 4654 00b6 104B     		ldr	r3, .L347+8
 4655 00b8 0122     		movs	r2, #1
 4656 00ba 1A70     		strb	r2, [r3]
1600:..\src/interruptions.c ****                 }
1601:..\src/interruptions.c ****                 else {
1602:..\src/interruptions.c ****                     cycles_status = WRITE_END;
1603:..\src/interruptions.c ****                 }
1604:..\src/interruptions.c ****             }
1605:..\src/interruptions.c ****             break;
 4657              		.loc 1 1605 0
 4658 00bc 13E0     		b	.L346
 4659              	.L342:
1602:..\src/interruptions.c ****                 }
 4660              		.loc 1 1602 0
 4661 00be 0E4B     		ldr	r3, .L347+8
 4662 00c0 0322     		movs	r2, #3
 4663 00c2 1A70     		strb	r2, [r3]
 4664              		.loc 1 1605 0
 4665 00c4 0FE0     		b	.L346
 4666              	.L337:
1606:..\src/interruptions.c ****            
1607:..\src/interruptions.c ****         case WRITE_END:
1608:..\src/interruptions.c ****             can_write = TRUE;            
 4667              		.loc 1 1608 0
 4668 00c6 0F4B     		ldr	r3, .L347+20
 4669 00c8 0122     		movs	r2, #1
 4670 00ca 1A70     		strb	r2, [r3]
1609:..\src/interruptions.c ****             cycles_status = NONE;
 4671              		.loc 1 1609 0
 4672 00cc 0A4B     		ldr	r3, .L347+8
 4673 00ce 0422     		movs	r2, #4
 4674 00d0 1A70     		strb	r2, [r3]
1610:..\src/interruptions.c ****             
1611:..\src/interruptions.c ****             // Restore data saved in c_mem structure
1612:..\src/interruptions.c ****             memcpy( addr_start, addr_start_c, EEPROM_BYTES_ROW*EEPROM_COUNTERS_ROWS );
 4675              		.loc 1 1612 0
 4676 00d2 6022     		movs	r2, #96
 4677 00d4 F968     		ldr	r1, [r7, #12]
 4678 00d6 3869     		ldr	r0, [r7, #16]
 4679 00d8 FFF7FEFF 		bl	memcpy
1613:..\src/interruptions.c ****             break;
 4680              		.loc 1 1613 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 113


 4681 00dc 04E0     		b	.L332
 4682              	.L344:
1614:..\src/interruptions.c ****             
1615:..\src/interruptions.c ****         case NONE:
1616:..\src/interruptions.c ****             break;
 4683              		.loc 1 1616 0
 4684 00de 00BF     		nop
 4685 00e0 02E0     		b	.L343
 4686              	.L345:
1591:..\src/interruptions.c ****             
 4687              		.loc 1 1591 0
 4688 00e2 00BF     		nop
 4689 00e4 00E0     		b	.L343
 4690              	.L346:
1605:..\src/interruptions.c ****            
 4691              		.loc 1 1605 0
 4692 00e6 00BF     		nop
 4693              	.L332:
 4694              	.L343:
1617:..\src/interruptions.c ****     }
1618:..\src/interruptions.c ****     
1619:..\src/interruptions.c **** }
 4695              		.loc 1 1619 0
 4696 00e8 00BF     		nop
 4697 00ea 1837     		adds	r7, r7, #24
 4698              		.cfi_def_cfa_offset 8
 4699 00ec BD46     		mov	sp, r7
 4700              		.cfi_def_cfa_register 13
 4701              		@ sp needed
 4702 00ee 80BD     		pop	{r7, pc}
 4703              	.L348:
 4704              		.align	2
 4705              	.L347:
 4706 00f0 C0000000 		.word	g_mem+192
 4707 00f4 C0000000 		.word	c_mem+192
 4708 00f8 00000000 		.word	cycles_status
 4709 00fc 00010000 		.word	m_addr.10024
 4710 0100 04010000 		.word	row_number.10019
 4711 0104 00000000 		.word	can_write
 4712              		.cfi_endproc
 4713              	.LFE74:
 4714              		.size	save_cycles_eeprom, .-save_cycles_eeprom
 4715              		.bss
 4716              	state.9850:
 4717 0000 00       		.space	1
 4718 0001 000000   		.align	2
 4719              	rx_queue.9854:
 4720 0004 000000   		.space	3
 4721              	data_packet_length.9852:
 4722 0007 00       		.space	1
 4723              	data_packet_index.9851:
 4724 0008 00       		.space	1
 4725 0009 000000   		.align	2
 4726              	data_packet_buffer.9853:
 4727 000c 00000000 		.space	128
 4727      00000000 
 4727      00000000 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 114


 4727      00000000 
 4727      00000000 
 4728              		.data
 4729              		.align	1
 4730              		.type	counter_calibration.9870, %object
 4731              		.size	counter_calibration.9870, 2
 4732              	counter_calibration.9870:
 4733 0000 0100     		.short	1
 4734              		.align	1
 4735              		.type	counter_tension_func.9871, %object
 4736              		.size	counter_tension_func.9871, 2
 4737              	counter_tension_func.9871:
 4738 0002 0100     		.short	1
 4739              		.bss
 4740              	current_emg.9901:
 4741 008c 00       		.space	1
 4742 008d 000000   		.align	2
 4743              	pos_error_sum.9896:
 4744 0090 00000000 		.space	4
 4745              		.align	2
 4746              	prev_pos_err.9898:
 4747 0094 00000000 		.space	4
 4748              	motor_dir.9900:
 4749 0098 00       		.space	1
 4750 0099 000000   		.align	2
 4751              	curr_error_sum.9897:
 4752 009c 00000000 		.space	4
 4753              		.align	2
 4754              	prev_curr_err.9899:
 4755 00a0 00000000 		.space	4
 4756              		.align	2
 4757              	last_value_encoder.9933:
 4758 00a4 00000000 		.space	12
 4758      00000000 
 4758      00000000 
 4759              		.data
 4760              		.type	only_first_time.9935, %object
 4761              		.size	only_first_time.9935, 1
 4762              	only_first_time.9935:
 4763 0004 01       		.byte	1
 4764              		.bss
 4765              		.align	2
 4766              	error.9934:
 4767 00b0 000000   		.space	3
 4768 00b3 00       		.align	2
 4769              	previous_val.9930:
 4770 00b4 00000000 		.space	4
 4771              		.align	2
 4772              	v_value.9938:
 4773 00b8 00000000 		.space	12
 4773      00000000 
 4773      00000000 
 4774              		.align	2
 4775              	vv_value.9939:
 4776 00c4 00000000 		.space	12
 4776      00000000 
 4776      00000000 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 115


 4777              		.align	2
 4778              	vvv_value.9940:
 4779 00d0 00000000 		.space	12
 4779      00000000 
 4779      00000000 
 4780              	pos_reconstruct.9937:
 4781 00dc 00       		.space	1
 4782              	one_time_execute.9936:
 4783 00dd 00       		.space	1
 4784              		.data
 4785              		.type	first_tension_valid.9955, %object
 4786              		.size	first_tension_valid.9955, 1
 4787              	first_tension_valid.9955:
 4788 0005 01       		.byte	1
 4789              		.bss
 4790              		.align	1
 4791              	count.9957:
 4792 00de 0000     		.space	2
 4793              		.data
 4794 0006 0000     		.align	2
 4795              		.type	pow_tension.9956, %object
 4796              		.size	pow_tension.9956, 4
 4797              	pow_tension.9956:
 4798 0008 E02E0000 		.word	12000
 4799              		.bss
 4800              		.align	2
 4801              	v_count.9958:
 4802 00e0 00000000 		.space	4
 4803              		.align	1
 4804              	emg_counter_1.9953:
 4805 00e4 0000     		.space	2
 4806              		.align	1
 4807              	emg_counter_2.9954:
 4808 00e6 0000     		.space	2
 4809              	pos_cycle_status.9985:
 4810 00e8 00       		.space	1
 4811 00e9 000000   		.align	2
 4812              	thr_pos.9989:
 4813 00ec 00000000 		.space	4
 4814              		.align	2
 4815              	max_pos.9990:
 4816 00f0 00000000 		.space	4
 4817              		.data
 4818              		.align	2
 4819              		.type	bin_threshold.9988, %object
 4820              		.size	bin_threshold.9988, 4
 4821              	bin_threshold.9988:
 4822 000c FA000000 		.word	250
 4823              		.bss
 4824              		.align	2
 4825              	emg_cycle_status.9986:
 4826 00f4 0000     		.space	2
 4827              	rest_cycle_status.9987:
 4828 00f6 00       		.space	1
 4829 00f7 00       		.align	2
 4830              	timer_value_s.9996:
 4831 00f8 00000000 		.space	4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 116


 4832              		.align	2
 4833              	timer_value_e.9997:
 4834 00fc 00000000 		.space	4
 4835              		.align	2
 4836              	m_addr.10024:
 4837 0100 00000000 		.space	4
 4838              	row_number.10019:
 4839 0104 00       		.space	1
 4840              		.text
 4841              	.Letext0:
 4842              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4843              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4844              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 4845              		.file 5 "..\\src\\commands.h"
 4846              		.file 6 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
 4847              		.file 7 "..\\src\\globals.h"
 4848              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 4849              		.section	.debug_info,"",%progbits
 4850              	.Ldebug_info0:
 4851 0000 18100000 		.4byte	0x1018
 4852 0004 0400     		.2byte	0x4
 4853 0006 00000000 		.4byte	.Ldebug_abbrev0
 4854 000a 04       		.byte	0x4
 4855 000b 01       		.uleb128 0x1
 4856 000c 57060000 		.4byte	.LASF245
 4857 0010 0C       		.byte	0xc
 4858 0011 8C0B0000 		.4byte	.LASF246
 4859 0015 75000000 		.4byte	.LASF247
 4860 0019 00000000 		.4byte	.Ldebug_ranges0+0
 4861 001d 00000000 		.4byte	0
 4862 0021 00000000 		.4byte	.Ldebug_line0
 4863 0025 02       		.uleb128 0x2
 4864 0026 01       		.byte	0x1
 4865 0027 06       		.byte	0x6
 4866 0028 E6020000 		.4byte	.LASF0
 4867 002c 02       		.uleb128 0x2
 4868 002d 01       		.byte	0x1
 4869 002e 08       		.byte	0x8
 4870 002f 5F030000 		.4byte	.LASF1
 4871 0033 02       		.uleb128 0x2
 4872 0034 02       		.byte	0x2
 4873 0035 05       		.byte	0x5
 4874 0036 A30A0000 		.4byte	.LASF2
 4875 003a 02       		.uleb128 0x2
 4876 003b 02       		.byte	0x2
 4877 003c 07       		.byte	0x7
 4878 003d 720B0000 		.4byte	.LASF3
 4879 0041 03       		.uleb128 0x3
 4880 0042 DE0B0000 		.4byte	.LASF9
 4881 0046 02       		.byte	0x2
 4882 0047 3F       		.byte	0x3f
 4883 0048 4C000000 		.4byte	0x4c
 4884 004c 02       		.uleb128 0x2
 4885 004d 04       		.byte	0x4
 4886 004e 05       		.byte	0x5
 4887 004f 43020000 		.4byte	.LASF4
 4888 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 117


 4889 0054 04       		.byte	0x4
 4890 0055 07       		.byte	0x7
 4891 0056 8B050000 		.4byte	.LASF5
 4892 005a 02       		.uleb128 0x2
 4893 005b 08       		.byte	0x8
 4894 005c 05       		.byte	0x5
 4895 005d 14070000 		.4byte	.LASF6
 4896 0061 02       		.uleb128 0x2
 4897 0062 08       		.byte	0x8
 4898 0063 07       		.byte	0x7
 4899 0064 3A090000 		.4byte	.LASF7
 4900 0068 04       		.uleb128 0x4
 4901 0069 04       		.byte	0x4
 4902 006a 05       		.byte	0x5
 4903 006b 696E7400 		.ascii	"int\000"
 4904 006f 02       		.uleb128 0x2
 4905 0070 04       		.byte	0x4
 4906 0071 07       		.byte	0x7
 4907 0072 A6070000 		.4byte	.LASF8
 4908 0076 03       		.uleb128 0x3
 4909 0077 48000000 		.4byte	.LASF10
 4910 007b 03       		.byte	0x3
 4911 007c 2C       		.byte	0x2c
 4912 007d 41000000 		.4byte	0x41
 4913 0081 05       		.uleb128 0x5
 4914 0082 9D0A0000 		.4byte	.LASF11
 4915 0086 04       		.byte	0x4
 4916 0087 E401     		.2byte	0x1e4
 4917 0089 2C000000 		.4byte	0x2c
 4918 008d 05       		.uleb128 0x5
 4919 008e 2B0C0000 		.4byte	.LASF12
 4920 0092 04       		.byte	0x4
 4921 0093 E501     		.2byte	0x1e5
 4922 0095 3A000000 		.4byte	0x3a
 4923 0099 05       		.uleb128 0x5
 4924 009a 6E000000 		.4byte	.LASF13
 4925 009e 04       		.byte	0x4
 4926 009f E601     		.2byte	0x1e6
 4927 00a1 53000000 		.4byte	0x53
 4928 00a5 05       		.uleb128 0x5
 4929 00a6 A2010000 		.4byte	.LASF14
 4930 00aa 04       		.byte	0x4
 4931 00ab E701     		.2byte	0x1e7
 4932 00ad 25000000 		.4byte	0x25
 4933 00b1 05       		.uleb128 0x5
 4934 00b2 EC0A0000 		.4byte	.LASF15
 4935 00b6 04       		.byte	0x4
 4936 00b7 E801     		.2byte	0x1e8
 4937 00b9 33000000 		.4byte	0x33
 4938 00bd 05       		.uleb128 0x5
 4939 00be A30B0000 		.4byte	.LASF16
 4940 00c2 04       		.byte	0x4
 4941 00c3 E901     		.2byte	0x1e9
 4942 00c5 4C000000 		.4byte	0x4c
 4943 00c9 05       		.uleb128 0x5
 4944 00ca 81020000 		.4byte	.LASF17
 4945 00ce 04       		.byte	0x4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 118


 4946 00cf EA01     		.2byte	0x1ea
 4947 00d1 D5000000 		.4byte	0xd5
 4948 00d5 02       		.uleb128 0x2
 4949 00d6 04       		.byte	0x4
 4950 00d7 04       		.byte	0x4
 4951 00d8 84070000 		.4byte	.LASF18
 4952 00dc 02       		.uleb128 0x2
 4953 00dd 08       		.byte	0x8
 4954 00de 04       		.byte	0x4
 4955 00df 3E070000 		.4byte	.LASF19
 4956 00e3 02       		.uleb128 0x2
 4957 00e4 01       		.byte	0x1
 4958 00e5 08       		.byte	0x8
 4959 00e6 D3030000 		.4byte	.LASF20
 4960 00ea 05       		.uleb128 0x5
 4961 00eb DF070000 		.4byte	.LASF21
 4962 00ef 04       		.byte	0x4
 4963 00f0 8602     		.2byte	0x286
 4964 00f2 53000000 		.4byte	0x53
 4965 00f6 05       		.uleb128 0x5
 4966 00f7 BA090000 		.4byte	.LASF22
 4967 00fb 04       		.byte	0x4
 4968 00fc 8E02     		.2byte	0x28e
 4969 00fe 02010000 		.4byte	0x102
 4970 0102 06       		.uleb128 0x6
 4971 0103 81000000 		.4byte	0x81
 4972 0107 02       		.uleb128 0x2
 4973 0108 08       		.byte	0x8
 4974 0109 04       		.byte	0x4
 4975 010a 5E080000 		.4byte	.LASF23
 4976 010e 02       		.uleb128 0x2
 4977 010f 04       		.byte	0x4
 4978 0110 07       		.byte	0x7
 4979 0111 00000000 		.4byte	.LASF24
 4980 0115 07       		.uleb128 0x7
 4981 0116 180C0000 		.4byte	.LASF31
 4982 011a 01       		.byte	0x1
 4983 011b 2C000000 		.4byte	0x2c
 4984 011f 05       		.byte	0x5
 4985 0120 84       		.byte	0x84
 4986 0121 4A010000 		.4byte	0x14a
 4987 0125 08       		.uleb128 0x8
 4988 0126 24050000 		.4byte	.LASF25
 4989 012a 00       		.byte	0
 4990 012b 08       		.uleb128 0x8
 4991 012c E8070000 		.4byte	.LASF26
 4992 0130 01       		.byte	0x1
 4993 0131 08       		.uleb128 0x8
 4994 0132 FA010000 		.4byte	.LASF27
 4995 0136 02       		.byte	0x2
 4996 0137 08       		.uleb128 0x8
 4997 0138 70010000 		.4byte	.LASF28
 4998 013c 03       		.byte	0x3
 4999 013d 08       		.uleb128 0x8
 5000 013e 39010000 		.4byte	.LASF29
 5001 0142 04       		.byte	0x4
 5002 0143 08       		.uleb128 0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 119


 5003 0144 1A000000 		.4byte	.LASF30
 5004 0148 05       		.byte	0x5
 5005 0149 00       		.byte	0
 5006 014a 07       		.uleb128 0x7
 5007 014b 22070000 		.4byte	.LASF32
 5008 014f 01       		.byte	0x1
 5009 0150 2C000000 		.4byte	0x2c
 5010 0154 05       		.byte	0x5
 5011 0155 96       		.byte	0x96
 5012 0156 73010000 		.4byte	0x173
 5013 015a 08       		.uleb128 0x8
 5014 015b D00B0000 		.4byte	.LASF33
 5015 015f 00       		.byte	0
 5016 0160 08       		.uleb128 0x8
 5017 0161 2E060000 		.4byte	.LASF34
 5018 0165 01       		.byte	0x1
 5019 0166 08       		.uleb128 0x8
 5020 0167 4E080000 		.4byte	.LASF35
 5021 016b 02       		.byte	0x2
 5022 016c 08       		.uleb128 0x8
 5023 016d 6E050000 		.4byte	.LASF36
 5024 0171 03       		.byte	0x3
 5025 0172 00       		.byte	0
 5026 0173 03       		.uleb128 0x3
 5027 0174 A90B0000 		.4byte	.LASF37
 5028 0178 06       		.byte	0x6
 5029 0179 7E       		.byte	0x7e
 5030 017a 7E010000 		.4byte	0x17e
 5031 017e 09       		.uleb128 0x9
 5032 017f A90B0000 		.4byte	.LASF37
 5033 0183 0A       		.uleb128 0xa
 5034 0184 04       		.byte	0x4
 5035 0185 73010000 		.4byte	0x173
 5036 0189 0B       		.uleb128 0xb
 5037 018a E5060000 		.4byte	.LASF40
 5038 018e 10       		.byte	0x10
 5039 018f 07       		.byte	0x7
 5040 0190 97       		.byte	0x97
 5041 0191 C6010000 		.4byte	0x1c6
 5042 0195 0C       		.uleb128 0xc
 5043 0196 706F7300 		.ascii	"pos\000"
 5044 019a 07       		.byte	0x7
 5045 019b 98       		.byte	0x98
 5046 019c BD000000 		.4byte	0xbd
 5047 01a0 00       		.byte	0
 5048 01a1 0D       		.uleb128 0xd
 5049 01a2 13060000 		.4byte	.LASF38
 5050 01a6 07       		.byte	0x7
 5051 01a7 99       		.byte	0x99
 5052 01a8 BD000000 		.4byte	0xbd
 5053 01ac 04       		.byte	0x4
 5054 01ad 0C       		.uleb128 0xc
 5055 01ae 70776D00 		.ascii	"pwm\000"
 5056 01b2 07       		.byte	0x7
 5057 01b3 9A       		.byte	0x9a
 5058 01b4 BD000000 		.4byte	0xbd
 5059 01b8 08       		.byte	0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 120


 5060 01b9 0D       		.uleb128 0xd
 5061 01ba 78090000 		.4byte	.LASF39
 5062 01be 07       		.byte	0x7
 5063 01bf 9B       		.byte	0x9b
 5064 01c0 81000000 		.4byte	0x81
 5065 01c4 0C       		.byte	0xc
 5066 01c5 00       		.byte	0
 5067 01c6 0B       		.uleb128 0xb
 5068 01c7 360A0000 		.4byte	.LASF41
 5069 01cb 38       		.byte	0x38
 5070 01cc 07       		.byte	0x7
 5071 01cd A2       		.byte	0xa2
 5072 01ce 27020000 		.4byte	0x227
 5073 01d2 0C       		.uleb128 0xc
 5074 01d3 706F7300 		.ascii	"pos\000"
 5075 01d7 07       		.byte	0x7
 5076 01d8 A3       		.byte	0xa3
 5077 01d9 27020000 		.4byte	0x227
 5078 01dd 00       		.byte	0
 5079 01de 0D       		.uleb128 0xd
 5080 01df 13060000 		.4byte	.LASF38
 5081 01e3 07       		.byte	0x7
 5082 01e4 A4       		.byte	0xa4
 5083 01e5 BD000000 		.4byte	0xbd
 5084 01e9 0C       		.byte	0xc
 5085 01ea 0D       		.uleb128 0xd
 5086 01eb 100B0000 		.4byte	.LASF42
 5087 01ef 07       		.byte	0x7
 5088 01f0 A5       		.byte	0xa5
 5089 01f1 BD000000 		.4byte	0xbd
 5090 01f5 10       		.byte	0x10
 5091 01f6 0C       		.uleb128 0xc
 5092 01f7 726F7400 		.ascii	"rot\000"
 5093 01fb 07       		.byte	0x7
 5094 01fc A6       		.byte	0xa6
 5095 01fd 37020000 		.4byte	0x237
 5096 0201 14       		.byte	0x14
 5097 0202 0C       		.uleb128 0xc
 5098 0203 656D6700 		.ascii	"emg\000"
 5099 0207 07       		.byte	0x7
 5100 0208 A8       		.byte	0xa8
 5101 0209 47020000 		.4byte	0x247
 5102 020d 18       		.byte	0x18
 5103 020e 0C       		.uleb128 0xc
 5104 020f 76656C00 		.ascii	"vel\000"
 5105 0213 07       		.byte	0x7
 5106 0214 A9       		.byte	0xa9
 5107 0215 27020000 		.4byte	0x227
 5108 0219 20       		.byte	0x20
 5109 021a 0C       		.uleb128 0xc
 5110 021b 61636300 		.ascii	"acc\000"
 5111 021f 07       		.byte	0x7
 5112 0220 AA       		.byte	0xaa
 5113 0221 27020000 		.4byte	0x227
 5114 0225 2C       		.byte	0x2c
 5115 0226 00       		.byte	0
 5116 0227 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 121


 5117 0228 BD000000 		.4byte	0xbd
 5118 022c 37020000 		.4byte	0x237
 5119 0230 0F       		.uleb128 0xf
 5120 0231 0E010000 		.4byte	0x10e
 5121 0235 02       		.byte	0x2
 5122 0236 00       		.byte	0
 5123 0237 0E       		.uleb128 0xe
 5124 0238 A5000000 		.4byte	0xa5
 5125 023c 47020000 		.4byte	0x247
 5126 0240 0F       		.uleb128 0xf
 5127 0241 0E010000 		.4byte	0x10e
 5128 0245 02       		.byte	0x2
 5129 0246 00       		.byte	0
 5130 0247 0E       		.uleb128 0xe
 5131 0248 BD000000 		.4byte	0xbd
 5132 024c 57020000 		.4byte	0x257
 5133 0250 0F       		.uleb128 0xf
 5134 0251 0E010000 		.4byte	0x10e
 5135 0255 01       		.byte	0x1
 5136 0256 00       		.byte	0
 5137 0257 0B       		.uleb128 0xb
 5138 0258 66000000 		.4byte	.LASF43
 5139 025c 86       		.byte	0x86
 5140 025d 07       		.byte	0x7
 5141 025e B1       		.byte	0xb1
 5142 025f 94020000 		.4byte	0x294
 5143 0263 0D       		.uleb128 0xd
 5144 0264 88040000 		.4byte	.LASF44
 5145 0268 07       		.byte	0x7
 5146 0269 B2       		.byte	0xb2
 5147 026a 94020000 		.4byte	0x294
 5148 026e 00       		.byte	0
 5149 026f 0D       		.uleb128 0xd
 5150 0270 5B090000 		.4byte	.LASF45
 5151 0274 07       		.byte	0x7
 5152 0275 B3       		.byte	0xb3
 5153 0276 B1000000 		.4byte	0xb1
 5154 027a 80       		.byte	0x80
 5155 027b 0C       		.uleb128 0xc
 5156 027c 696E6400 		.ascii	"ind\000"
 5157 0280 07       		.byte	0x7
 5158 0281 B4       		.byte	0xb4
 5159 0282 B1000000 		.4byte	0xb1
 5160 0286 82       		.byte	0x82
 5161 0287 0D       		.uleb128 0xd
 5162 0288 EF010000 		.4byte	.LASF46
 5163 028c 07       		.byte	0x7
 5164 028d B5       		.byte	0xb5
 5165 028e 81000000 		.4byte	0x81
 5166 0292 84       		.byte	0x84
 5167 0293 00       		.byte	0
 5168 0294 0E       		.uleb128 0xe
 5169 0295 81000000 		.4byte	0x81
 5170 0299 A4020000 		.4byte	0x2a4
 5171 029d 0F       		.uleb128 0xf
 5172 029e 0E010000 		.4byte	0x10e
 5173 02a2 7F       		.byte	0x7f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 122


 5174 02a3 00       		.byte	0
 5175 02a4 10       		.uleb128 0x10
 5176 02a5 50060000 		.4byte	.LASF47
 5177 02a9 3001     		.2byte	0x130
 5178 02ab 07       		.byte	0x7
 5179 02ac BD       		.byte	0xbd
 5180 02ad 61050000 		.4byte	0x561
 5181 02b1 0D       		.uleb128 0xd
 5182 02b2 CD070000 		.4byte	.LASF48
 5183 02b6 07       		.byte	0x7
 5184 02b7 BE       		.byte	0xbe
 5185 02b8 81000000 		.4byte	0x81
 5186 02bc 00       		.byte	0
 5187 02bd 0C       		.uleb128 0xc
 5188 02be 696400   		.ascii	"id\000"
 5189 02c1 07       		.byte	0x7
 5190 02c2 BF       		.byte	0xbf
 5191 02c3 81000000 		.4byte	0x81
 5192 02c7 01       		.byte	0x1
 5193 02c8 0C       		.uleb128 0xc
 5194 02c9 6B5F7000 		.ascii	"k_p\000"
 5195 02cd 07       		.byte	0x7
 5196 02ce C1       		.byte	0xc1
 5197 02cf BD000000 		.4byte	0xbd
 5198 02d3 04       		.byte	0x4
 5199 02d4 0C       		.uleb128 0xc
 5200 02d5 6B5F6900 		.ascii	"k_i\000"
 5201 02d9 07       		.byte	0x7
 5202 02da C2       		.byte	0xc2
 5203 02db BD000000 		.4byte	0xbd
 5204 02df 08       		.byte	0x8
 5205 02e0 0C       		.uleb128 0xc
 5206 02e1 6B5F6400 		.ascii	"k_d\000"
 5207 02e5 07       		.byte	0x7
 5208 02e6 C3       		.byte	0xc3
 5209 02e7 BD000000 		.4byte	0xbd
 5210 02eb 0C       		.byte	0xc
 5211 02ec 0D       		.uleb128 0xd
 5212 02ed 9F090000 		.4byte	.LASF49
 5213 02f1 07       		.byte	0x7
 5214 02f2 C5       		.byte	0xc5
 5215 02f3 BD000000 		.4byte	0xbd
 5216 02f7 10       		.byte	0x10
 5217 02f8 0D       		.uleb128 0xd
 5218 02f9 04040000 		.4byte	.LASF50
 5219 02fd 07       		.byte	0x7
 5220 02fe C6       		.byte	0xc6
 5221 02ff BD000000 		.4byte	0xbd
 5222 0303 14       		.byte	0x14
 5223 0304 0D       		.uleb128 0xd
 5224 0305 F7030000 		.4byte	.LASF51
 5225 0309 07       		.byte	0x7
 5226 030a C7       		.byte	0xc7
 5227 030b BD000000 		.4byte	0xbd
 5228 030f 18       		.byte	0x18
 5229 0310 0D       		.uleb128 0xd
 5230 0311 090B0000 		.4byte	.LASF52
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 123


 5231 0315 07       		.byte	0x7
 5232 0316 C8       		.byte	0xc8
 5233 0317 BD000000 		.4byte	0xbd
 5234 031b 1C       		.byte	0x1c
 5235 031c 0D       		.uleb128 0xd
 5236 031d 81040000 		.4byte	.LASF53
 5237 0321 07       		.byte	0x7
 5238 0322 CA       		.byte	0xca
 5239 0323 BD000000 		.4byte	0xbd
 5240 0327 20       		.byte	0x20
 5241 0328 0D       		.uleb128 0xd
 5242 0329 AD0A0000 		.4byte	.LASF54
 5243 032d 07       		.byte	0x7
 5244 032e CB       		.byte	0xcb
 5245 032f BD000000 		.4byte	0xbd
 5246 0333 24       		.byte	0x24
 5247 0334 0D       		.uleb128 0xd
 5248 0335 8F040000 		.4byte	.LASF55
 5249 0339 07       		.byte	0x7
 5250 033a CC       		.byte	0xcc
 5251 033b BD000000 		.4byte	0xbd
 5252 033f 28       		.byte	0x28
 5253 0340 0D       		.uleb128 0xd
 5254 0341 57050000 		.4byte	.LASF56
 5255 0345 07       		.byte	0x7
 5256 0346 CD       		.byte	0xcd
 5257 0347 BD000000 		.4byte	0xbd
 5258 034b 2C       		.byte	0x2c
 5259 034c 0D       		.uleb128 0xd
 5260 034d 500C0000 		.4byte	.LASF57
 5261 0351 07       		.byte	0x7
 5262 0352 CF       		.byte	0xcf
 5263 0353 BD000000 		.4byte	0xbd
 5264 0357 30       		.byte	0x30
 5265 0358 0D       		.uleb128 0xd
 5266 0359 DD050000 		.4byte	.LASF58
 5267 035d 07       		.byte	0x7
 5268 035e D0       		.byte	0xd0
 5269 035f 81000000 		.4byte	0x81
 5270 0363 34       		.byte	0x34
 5271 0364 0D       		.uleb128 0xd
 5272 0365 23060000 		.4byte	.LASF59
 5273 0369 07       		.byte	0x7
 5274 036a D1       		.byte	0xd1
 5275 036b 81000000 		.4byte	0x81
 5276 036f 35       		.byte	0x35
 5277 0370 0D       		.uleb128 0xd
 5278 0371 D2070000 		.4byte	.LASF60
 5279 0375 07       		.byte	0x7
 5280 0376 D2       		.byte	0xd2
 5281 0377 81000000 		.4byte	0x81
 5282 037b 36       		.byte	0x36
 5283 037c 0C       		.uleb128 0xc
 5284 037d 72657300 		.ascii	"res\000"
 5285 0381 07       		.byte	0x7
 5286 0382 D3       		.byte	0xd3
 5287 0383 61050000 		.4byte	0x561
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 124


 5288 0387 37       		.byte	0x37
 5289 0388 0D       		.uleb128 0xd
 5290 0389 E3050000 		.4byte	.LASF61
 5291 038d 07       		.byte	0x7
 5292 038e D5       		.byte	0xd5
 5293 038f 27020000 		.4byte	0x227
 5294 0393 3C       		.byte	0x3c
 5295 0394 0D       		.uleb128 0xd
 5296 0395 FD030000 		.4byte	.LASF62
 5297 0399 07       		.byte	0x7
 5298 039a D7       		.byte	0xd7
 5299 039b 71050000 		.4byte	0x571
 5300 039f 48       		.byte	0x48
 5301 03a0 0D       		.uleb128 0xd
 5302 03a1 B10B0000 		.4byte	.LASF63
 5303 03a5 07       		.byte	0x7
 5304 03a6 D9       		.byte	0xd9
 5305 03a7 81000000 		.4byte	0x81
 5306 03ab 54       		.byte	0x54
 5307 03ac 0D       		.uleb128 0xd
 5308 03ad EE000000 		.4byte	.LASF64
 5309 03b1 07       		.byte	0x7
 5310 03b2 DB       		.byte	0xdb
 5311 03b3 BD000000 		.4byte	0xbd
 5312 03b7 58       		.byte	0x58
 5313 03b8 0D       		.uleb128 0xd
 5314 03b9 2F040000 		.4byte	.LASF65
 5315 03bd 07       		.byte	0x7
 5316 03be DC       		.byte	0xdc
 5317 03bf BD000000 		.4byte	0xbd
 5318 03c3 5C       		.byte	0x5c
 5319 03c4 0D       		.uleb128 0xd
 5320 03c5 72070000 		.4byte	.LASF66
 5321 03c9 07       		.byte	0x7
 5322 03ca DE       		.byte	0xde
 5323 03cb BD000000 		.4byte	0xbd
 5324 03cf 60       		.byte	0x60
 5325 03d0 0D       		.uleb128 0xd
 5326 03d1 D8030000 		.4byte	.LASF67
 5327 03d5 07       		.byte	0x7
 5328 03d6 DF       		.byte	0xdf
 5329 03d7 BD000000 		.4byte	0xbd
 5330 03db 64       		.byte	0x64
 5331 03dc 0D       		.uleb128 0xd
 5332 03dd 0A0C0000 		.4byte	.LASF68
 5333 03e1 07       		.byte	0x7
 5334 03e2 E0       		.byte	0xe0
 5335 03e3 B1000000 		.4byte	0xb1
 5336 03e7 68       		.byte	0x68
 5337 03e8 0D       		.uleb128 0xd
 5338 03e9 17080000 		.4byte	.LASF69
 5339 03ed 07       		.byte	0x7
 5340 03ee E1       		.byte	0xe1
 5341 03ef 81050000 		.4byte	0x581
 5342 03f3 6A       		.byte	0x6a
 5343 03f4 0D       		.uleb128 0xd
 5344 03f5 210A0000 		.4byte	.LASF70
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 125


 5345 03f9 07       		.byte	0x7
 5346 03fa E2       		.byte	0xe2
 5347 03fb 81000000 		.4byte	0x81
 5348 03ff 6E       		.byte	0x6e
 5349 0400 0D       		.uleb128 0xd
 5350 0401 FC0B0000 		.4byte	.LASF71
 5351 0405 07       		.byte	0x7
 5352 0406 E5       		.byte	0xe5
 5353 0407 91050000 		.4byte	0x591
 5354 040b 70       		.byte	0x70
 5355 040c 0D       		.uleb128 0xd
 5356 040d 45040000 		.4byte	.LASF72
 5357 0411 07       		.byte	0x7
 5358 0412 E6       		.byte	0xe6
 5359 0413 81000000 		.4byte	0x81
 5360 0417 78       		.byte	0x78
 5361 0418 0D       		.uleb128 0xd
 5362 0419 E6080000 		.4byte	.LASF73
 5363 041d 07       		.byte	0x7
 5364 041e E7       		.byte	0xe7
 5365 041f 81000000 		.4byte	0x81
 5366 0423 79       		.byte	0x79
 5367 0424 0D       		.uleb128 0xd
 5368 0425 96080000 		.4byte	.LASF74
 5369 0429 07       		.byte	0x7
 5370 042a E8       		.byte	0xe8
 5371 042b A5000000 		.4byte	0xa5
 5372 042f 7A       		.byte	0x7a
 5373 0430 0D       		.uleb128 0xd
 5374 0431 F20A0000 		.4byte	.LASF75
 5375 0435 07       		.byte	0x7
 5376 0436 E9       		.byte	0xe9
 5377 0437 81000000 		.4byte	0x81
 5378 043b 7B       		.byte	0x7b
 5379 043c 0D       		.uleb128 0xd
 5380 043d 4D010000 		.4byte	.LASF76
 5381 0441 07       		.byte	0x7
 5382 0442 EA       		.byte	0xea
 5383 0443 A1050000 		.4byte	0x5a1
 5384 0447 7C       		.byte	0x7c
 5385 0448 0D       		.uleb128 0xd
 5386 0449 590B0000 		.4byte	.LASF77
 5387 044d 07       		.byte	0x7
 5388 044e ED       		.byte	0xed
 5389 044f 81000000 		.4byte	0x81
 5390 0453 94       		.byte	0x94
 5391 0454 0D       		.uleb128 0xd
 5392 0455 51090000 		.4byte	.LASF78
 5393 0459 07       		.byte	0x7
 5394 045a EE       		.byte	0xee
 5395 045b 81000000 		.4byte	0x81
 5396 045f 95       		.byte	0x95
 5397 0460 0D       		.uleb128 0xd
 5398 0461 32070000 		.4byte	.LASF79
 5399 0465 07       		.byte	0x7
 5400 0466 EF       		.byte	0xef
 5401 0467 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 126


 5402 046b 96       		.byte	0x96
 5403 046c 0D       		.uleb128 0xd
 5404 046d FC080000 		.4byte	.LASF80
 5405 0471 07       		.byte	0x7
 5406 0472 F0       		.byte	0xf0
 5407 0473 81000000 		.4byte	0x81
 5408 0477 97       		.byte	0x97
 5409 0478 0D       		.uleb128 0xd
 5410 0479 0A060000 		.4byte	.LASF81
 5411 047d 07       		.byte	0x7
 5412 047e F1       		.byte	0xf1
 5413 047f BD000000 		.4byte	0xbd
 5414 0483 98       		.byte	0x98
 5415 0484 0D       		.uleb128 0xd
 5416 0485 320C0000 		.4byte	.LASF82
 5417 0489 07       		.byte	0x7
 5418 048a F2       		.byte	0xf2
 5419 048b D5000000 		.4byte	0xd5
 5420 048f 9C       		.byte	0x9c
 5421 0490 0D       		.uleb128 0xd
 5422 0491 4F040000 		.4byte	.LASF83
 5423 0495 07       		.byte	0x7
 5424 0496 F4       		.byte	0xf4
 5425 0497 D5000000 		.4byte	0xd5
 5426 049b A0       		.byte	0xa0
 5427 049c 0D       		.uleb128 0xd
 5428 049d C6080000 		.4byte	.LASF84
 5429 04a1 07       		.byte	0x7
 5430 04a2 F5       		.byte	0xf5
 5431 04a3 D5000000 		.4byte	0xd5
 5432 04a7 A4       		.byte	0xa4
 5433 04a8 0D       		.uleb128 0xd
 5434 04a9 3E050000 		.4byte	.LASF85
 5435 04ad 07       		.byte	0x7
 5436 04ae F6       		.byte	0xf6
 5437 04af 81000000 		.4byte	0x81
 5438 04b3 A8       		.byte	0xa8
 5439 04b4 0D       		.uleb128 0xd
 5440 04b5 0F030000 		.4byte	.LASF86
 5441 04b9 07       		.byte	0x7
 5442 04ba F7       		.byte	0xf7
 5443 04bb 81000000 		.4byte	0x81
 5444 04bf A9       		.byte	0xa9
 5445 04c0 0D       		.uleb128 0xd
 5446 04c1 68020000 		.4byte	.LASF87
 5447 04c5 07       		.byte	0x7
 5448 04c6 F8       		.byte	0xf8
 5449 04c7 B1050000 		.4byte	0x5b1
 5450 04cb AA       		.byte	0xaa
 5451 04cc 0D       		.uleb128 0xd
 5452 04cd AF020000 		.4byte	.LASF88
 5453 04d1 07       		.byte	0x7
 5454 04d2 FA       		.byte	0xfa
 5455 04d3 91050000 		.4byte	0x591
 5456 04d7 C0       		.byte	0xc0
 5457 04d8 0D       		.uleb128 0xd
 5458 04d9 C1010000 		.4byte	.LASF89
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 127


 5459 04dd 07       		.byte	0x7
 5460 04de FC       		.byte	0xfc
 5461 04df C1050000 		.4byte	0x5c1
 5462 04e3 C8       		.byte	0xc8
 5463 04e4 0D       		.uleb128 0xd
 5464 04e5 41080000 		.4byte	.LASF90
 5465 04e9 07       		.byte	0x7
 5466 04ea FE       		.byte	0xfe
 5467 04eb D1050000 		.4byte	0x5d1
 5468 04ef F0       		.byte	0xf0
 5469 04f0 11       		.uleb128 0x11
 5470 04f1 63010000 		.4byte	.LASF91
 5471 04f5 07       		.byte	0x7
 5472 04f6 0001     		.2byte	0x100
 5473 04f8 99000000 		.4byte	0x99
 5474 04fc 0001     		.2byte	0x100
 5475 04fe 11       		.uleb128 0x11
 5476 04ff E80B0000 		.4byte	.LASF92
 5477 0503 07       		.byte	0x7
 5478 0504 0101     		.2byte	0x101
 5479 0506 99000000 		.4byte	0x99
 5480 050a 0401     		.2byte	0x104
 5481 050c 11       		.uleb128 0x11
 5482 050d 9D050000 		.4byte	.LASF93
 5483 0511 07       		.byte	0x7
 5484 0512 0201     		.2byte	0x102
 5485 0514 99000000 		.4byte	0x99
 5486 0518 0801     		.2byte	0x108
 5487 051a 11       		.uleb128 0x11
 5488 051b CD050000 		.4byte	.LASF94
 5489 051f 07       		.byte	0x7
 5490 0520 0301     		.2byte	0x103
 5491 0522 99000000 		.4byte	0x99
 5492 0526 0C01     		.2byte	0x10c
 5493 0528 11       		.uleb128 0x11
 5494 0529 DC080000 		.4byte	.LASF95
 5495 052d 07       		.byte	0x7
 5496 052e 0501     		.2byte	0x105
 5497 0530 E1050000 		.4byte	0x5e1
 5498 0534 1001     		.2byte	0x110
 5499 0536 11       		.uleb128 0x11
 5500 0537 4C020000 		.4byte	.LASF96
 5501 053b 07       		.byte	0x7
 5502 053c 0601     		.2byte	0x106
 5503 053e F1050000 		.4byte	0x5f1
 5504 0542 1601     		.2byte	0x116
 5505 0544 11       		.uleb128 0x11
 5506 0545 630B0000 		.4byte	.LASF97
 5507 0549 07       		.byte	0x7
 5508 054a 0901     		.2byte	0x109
 5509 054c 81000000 		.4byte	0x81
 5510 0550 2001     		.2byte	0x120
 5511 0552 11       		.uleb128 0x11
 5512 0553 8A070000 		.4byte	.LASF98
 5513 0557 07       		.byte	0x7
 5514 0558 0A01     		.2byte	0x10a
 5515 055a 01060000 		.4byte	0x601
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 128


 5516 055e 2101     		.2byte	0x121
 5517 0560 00       		.byte	0
 5518 0561 0E       		.uleb128 0xe
 5519 0562 81000000 		.4byte	0x81
 5520 0566 71050000 		.4byte	0x571
 5521 056a 0F       		.uleb128 0xf
 5522 056b 0E010000 		.4byte	0x10e
 5523 056f 02       		.byte	0x2
 5524 0570 00       		.byte	0
 5525 0571 0E       		.uleb128 0xe
 5526 0572 C9000000 		.4byte	0xc9
 5527 0576 81050000 		.4byte	0x581
 5528 057a 0F       		.uleb128 0xf
 5529 057b 0E010000 		.4byte	0x10e
 5530 057f 02       		.byte	0x2
 5531 0580 00       		.byte	0
 5532 0581 0E       		.uleb128 0xe
 5533 0582 8D000000 		.4byte	0x8d
 5534 0586 91050000 		.4byte	0x591
 5535 058a 0F       		.uleb128 0xf
 5536 058b 0E010000 		.4byte	0x10e
 5537 058f 01       		.byte	0x1
 5538 0590 00       		.byte	0
 5539 0591 0E       		.uleb128 0xe
 5540 0592 99000000 		.4byte	0x99
 5541 0596 A1050000 		.4byte	0x5a1
 5542 059a 0F       		.uleb128 0xf
 5543 059b 0E010000 		.4byte	0x10e
 5544 059f 01       		.byte	0x1
 5545 05a0 00       		.byte	0
 5546 05a1 0E       		.uleb128 0xe
 5547 05a2 D5000000 		.4byte	0xd5
 5548 05a6 B1050000 		.4byte	0x5b1
 5549 05aa 0F       		.uleb128 0xf
 5550 05ab 0E010000 		.4byte	0x10e
 5551 05af 05       		.byte	0x5
 5552 05b0 00       		.byte	0
 5553 05b1 0E       		.uleb128 0xe
 5554 05b2 81000000 		.4byte	0x81
 5555 05b6 C1050000 		.4byte	0x5c1
 5556 05ba 0F       		.uleb128 0xf
 5557 05bb 0E010000 		.4byte	0x10e
 5558 05bf 15       		.byte	0x15
 5559 05c0 00       		.byte	0
 5560 05c1 0E       		.uleb128 0xe
 5561 05c2 99000000 		.4byte	0x99
 5562 05c6 D1050000 		.4byte	0x5d1
 5563 05ca 0F       		.uleb128 0xf
 5564 05cb 0E010000 		.4byte	0x10e
 5565 05cf 09       		.byte	0x9
 5566 05d0 00       		.byte	0
 5567 05d1 0E       		.uleb128 0xe
 5568 05d2 99000000 		.4byte	0x99
 5569 05d6 E1050000 		.4byte	0x5e1
 5570 05da 0F       		.uleb128 0xf
 5571 05db 0E010000 		.4byte	0x10e
 5572 05df 03       		.byte	0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 129


 5573 05e0 00       		.byte	0
 5574 05e1 0E       		.uleb128 0xe
 5575 05e2 81000000 		.4byte	0x81
 5576 05e6 F1050000 		.4byte	0x5f1
 5577 05ea 0F       		.uleb128 0xf
 5578 05eb 0E010000 		.4byte	0x10e
 5579 05ef 05       		.byte	0x5
 5580 05f0 00       		.byte	0
 5581 05f1 0E       		.uleb128 0xe
 5582 05f2 81000000 		.4byte	0x81
 5583 05f6 01060000 		.4byte	0x601
 5584 05fa 0F       		.uleb128 0xf
 5585 05fb 0E010000 		.4byte	0x10e
 5586 05ff 09       		.byte	0x9
 5587 0600 00       		.byte	0
 5588 0601 0E       		.uleb128 0xe
 5589 0602 81000000 		.4byte	0x81
 5590 0606 17060000 		.4byte	0x617
 5591 060a 0F       		.uleb128 0xf
 5592 060b 0E010000 		.4byte	0x10e
 5593 060f 02       		.byte	0x2
 5594 0610 0F       		.uleb128 0xf
 5595 0611 0E010000 		.4byte	0x10e
 5596 0615 04       		.byte	0x4
 5597 0616 00       		.byte	0
 5598 0617 12       		.uleb128 0x12
 5599 0618 850B0000 		.4byte	.LASF99
 5600 061c 28       		.byte	0x28
 5601 061d 07       		.byte	0x7
 5602 061e 0E01     		.2byte	0x10e
 5603 0620 73060000 		.4byte	0x673
 5604 0624 13       		.uleb128 0x13
 5605 0625 C0030000 		.4byte	.LASF100
 5606 0629 07       		.byte	0x7
 5607 062a 0F01     		.2byte	0x10f
 5608 062c 81000000 		.4byte	0x81
 5609 0630 00       		.byte	0
 5610 0631 13       		.uleb128 0x13
 5611 0632 75020000 		.4byte	.LASF101
 5612 0636 07       		.byte	0x7
 5613 0637 1001     		.2byte	0x110
 5614 0639 73060000 		.4byte	0x673
 5615 063d 02       		.byte	0x2
 5616 063e 13       		.uleb128 0x13
 5617 063f D1080000 		.4byte	.LASF102
 5618 0643 07       		.byte	0x7
 5619 0644 1101     		.2byte	0x111
 5620 0646 73060000 		.4byte	0x673
 5621 064a 08       		.byte	0x8
 5622 064b 13       		.uleb128 0x13
 5623 064c 6E090000 		.4byte	.LASF103
 5624 0650 07       		.byte	0x7
 5625 0651 1201     		.2byte	0x112
 5626 0653 73060000 		.4byte	0x673
 5627 0657 0E       		.byte	0xe
 5628 0658 13       		.uleb128 0x13
 5629 0659 FF050000 		.4byte	.LASF104
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 130


 5630 065d 07       		.byte	0x7
 5631 065e 1301     		.2byte	0x113
 5632 0660 83060000 		.4byte	0x683
 5633 0664 14       		.byte	0x14
 5634 0665 13       		.uleb128 0x13
 5635 0666 DC010000 		.4byte	.LASF105
 5636 066a 07       		.byte	0x7
 5637 066b 1401     		.2byte	0x114
 5638 066d B1000000 		.4byte	0xb1
 5639 0671 24       		.byte	0x24
 5640 0672 00       		.byte	0
 5641 0673 0E       		.uleb128 0xe
 5642 0674 B1000000 		.4byte	0xb1
 5643 0678 83060000 		.4byte	0x683
 5644 067c 0F       		.uleb128 0xf
 5645 067d 0E010000 		.4byte	0x10e
 5646 0681 02       		.byte	0x2
 5647 0682 00       		.byte	0
 5648 0683 0E       		.uleb128 0xe
 5649 0684 D5000000 		.4byte	0xd5
 5650 0688 93060000 		.4byte	0x693
 5651 068c 0F       		.uleb128 0xf
 5652 068d 0E010000 		.4byte	0x10e
 5653 0691 03       		.byte	0x3
 5654 0692 00       		.byte	0
 5655 0693 12       		.uleb128 0x12
 5656 0694 3D0C0000 		.4byte	.LASF106
 5657 0698 08       		.byte	0x8
 5658 0699 07       		.byte	0x7
 5659 069a 1B01     		.2byte	0x11b
 5660 069c BB060000 		.4byte	0x6bb
 5661 06a0 13       		.uleb128 0x13
 5662 06a1 3B040000 		.4byte	.LASF107
 5663 06a5 07       		.byte	0x7
 5664 06a6 1C01     		.2byte	0x11c
 5665 06a8 BD000000 		.4byte	0xbd
 5666 06ac 00       		.byte	0
 5667 06ad 13       		.uleb128 0x13
 5668 06ae F5010000 		.4byte	.LASF108
 5669 06b2 07       		.byte	0x7
 5670 06b3 1D01     		.2byte	0x11d
 5671 06b5 BD000000 		.4byte	0xbd
 5672 06b9 04       		.byte	0x4
 5673 06ba 00       		.byte	0
 5674 06bb 12       		.uleb128 0x12
 5675 06bc F2020000 		.4byte	.LASF109
 5676 06c0 06       		.byte	0x6
 5677 06c1 07       		.byte	0x7
 5678 06c2 2401     		.2byte	0x124
 5679 06c4 FD060000 		.4byte	0x6fd
 5680 06c8 13       		.uleb128 0x13
 5681 06c9 83050000 		.4byte	.LASF110
 5682 06cd 07       		.byte	0x7
 5683 06ce 2501     		.2byte	0x125
 5684 06d0 81000000 		.4byte	0x81
 5685 06d4 00       		.byte	0
 5686 06d5 13       		.uleb128 0x13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 131


 5687 06d6 590C0000 		.4byte	.LASF111
 5688 06da 07       		.byte	0x7
 5689 06db 2601     		.2byte	0x126
 5690 06dd 81000000 		.4byte	0x81
 5691 06e1 01       		.byte	0x1
 5692 06e2 13       		.uleb128 0x13
 5693 06e3 AE040000 		.4byte	.LASF112
 5694 06e7 07       		.byte	0x7
 5695 06e8 2701     		.2byte	0x127
 5696 06ea B1000000 		.4byte	0xb1
 5697 06ee 02       		.byte	0x2
 5698 06ef 13       		.uleb128 0x13
 5699 06f0 66070000 		.4byte	.LASF113
 5700 06f4 07       		.byte	0x7
 5701 06f5 2801     		.2byte	0x128
 5702 06f7 B1000000 		.4byte	0xb1
 5703 06fb 04       		.byte	0x4
 5704 06fc 00       		.byte	0
 5705 06fd 14       		.uleb128 0x14
 5706 06fe 01       		.byte	0x1
 5707 06ff 2C000000 		.4byte	0x2c
 5708 0703 07       		.byte	0x7
 5709 0704 2C01     		.2byte	0x12c
 5710 0706 2F070000 		.4byte	0x72f
 5711 070a 08       		.uleb128 0x8
 5712 070b 58040000 		.4byte	.LASF114
 5713 070f 00       		.byte	0
 5714 0710 08       		.uleb128 0x8
 5715 0711 FA090000 		.4byte	.LASF115
 5716 0715 01       		.byte	0x1
 5717 0716 08       		.uleb128 0x8
 5718 0717 6A080000 		.4byte	.LASF116
 5719 071b 02       		.byte	0x2
 5720 071c 08       		.uleb128 0x8
 5721 071d 16020000 		.4byte	.LASF117
 5722 0721 03       		.byte	0x3
 5723 0722 08       		.uleb128 0x8
 5724 0723 7F070000 		.4byte	.LASF118
 5725 0727 04       		.byte	0x4
 5726 0728 08       		.uleb128 0x8
 5727 0729 B1090000 		.4byte	.LASF119
 5728 072d 05       		.byte	0x5
 5729 072e 00       		.byte	0
 5730 072f 05       		.uleb128 0x5
 5731 0730 AD010000 		.4byte	.LASF120
 5732 0734 07       		.byte	0x7
 5733 0735 3401     		.2byte	0x134
 5734 0737 FD060000 		.4byte	0x6fd
 5735 073b 14       		.uleb128 0x14
 5736 073c 01       		.byte	0x1
 5737 073d 2C000000 		.4byte	0x2c
 5738 0741 07       		.byte	0x7
 5739 0742 3601     		.2byte	0x136
 5740 0744 67070000 		.4byte	0x767
 5741 0748 08       		.uleb128 0x8
 5742 0749 CF010000 		.4byte	.LASF121
 5743 074d 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 132


 5744 074e 08       		.uleb128 0x8
 5745 074f AB050000 		.4byte	.LASF122
 5746 0753 01       		.byte	0x1
 5747 0754 08       		.uleb128 0x8
 5748 0755 18060000 		.4byte	.LASF123
 5749 0759 02       		.byte	0x2
 5750 075a 08       		.uleb128 0x8
 5751 075b BB020000 		.4byte	.LASF124
 5752 075f 03       		.byte	0x3
 5753 0760 08       		.uleb128 0x8
 5754 0761 260C0000 		.4byte	.LASF125
 5755 0765 04       		.byte	0x4
 5756 0766 00       		.byte	0
 5757 0767 05       		.uleb128 0x5
 5758 0768 5C0A0000 		.4byte	.LASF126
 5759 076c 07       		.byte	0x7
 5760 076d 3D01     		.2byte	0x13d
 5761 076f 3B070000 		.4byte	0x73b
 5762 0773 15       		.uleb128 0x15
 5763 0774 6D030000 		.4byte	.LASF127
 5764 0778 01       		.byte	0x1
 5765 0779 67       		.byte	0x67
 5766 077a 00000000 		.4byte	.LFB64
 5767 077e 18000000 		.4byte	.LFE64-.LFB64
 5768 0782 01       		.uleb128 0x1
 5769 0783 9C       		.byte	0x9c
 5770 0784 15       		.uleb128 0x15
 5771 0785 460B0000 		.4byte	.LASF128
 5772 0789 01       		.byte	0x1
 5773 078a 72       		.byte	0x72
 5774 078b 00000000 		.4byte	.LFB65
 5775 078f 20000000 		.4byte	.LFE65-.LFB65
 5776 0793 01       		.uleb128 0x1
 5777 0794 9C       		.byte	0x9c
 5778 0795 16       		.uleb128 0x16
 5779 0796 54070000 		.4byte	.LASF142
 5780 079a 01       		.byte	0x1
 5781 079b 8B       		.byte	0x8b
 5782 079c 00000000 		.4byte	.LFB66
 5783 07a0 F4010000 		.4byte	.LFE66-.LFB66
 5784 07a4 01       		.uleb128 0x1
 5785 07a5 9C       		.byte	0x9c
 5786 07a6 2A080000 		.4byte	0x82a
 5787 07aa 17       		.uleb128 0x17
 5788 07ab 08010000 		.4byte	.LASF129
 5789 07af 01       		.byte	0x1
 5790 07b0 90       		.byte	0x90
 5791 07b1 81000000 		.4byte	0x81
 5792 07b5 05       		.uleb128 0x5
 5793 07b6 03       		.byte	0x3
 5794 07b7 00000000 		.4byte	state.9850
 5795 07bb 17       		.uleb128 0x17
 5796 07bc C2040000 		.4byte	.LASF130
 5797 07c0 01       		.byte	0x1
 5798 07c1 93       		.byte	0x93
 5799 07c2 81000000 		.4byte	0x81
 5800 07c6 05       		.uleb128 0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 133


 5801 07c7 03       		.byte	0x3
 5802 07c8 08000000 		.4byte	data_packet_index.9851
 5803 07cc 17       		.uleb128 0x17
 5804 07cd 8C090000 		.4byte	.LASF131
 5805 07d1 01       		.byte	0x1
 5806 07d2 94       		.byte	0x94
 5807 07d3 81000000 		.4byte	0x81
 5808 07d7 05       		.uleb128 0x5
 5809 07d8 03       		.byte	0x3
 5810 07d9 07000000 		.4byte	data_packet_length.9852
 5811 07dd 17       		.uleb128 0x17
 5812 07de D4040000 		.4byte	.LASF132
 5813 07e2 01       		.byte	0x1
 5814 07e3 95       		.byte	0x95
 5815 07e4 94020000 		.4byte	0x294
 5816 07e8 05       		.uleb128 0x5
 5817 07e9 03       		.byte	0x3
 5818 07ea 0C000000 		.4byte	data_packet_buffer.9853
 5819 07ee 17       		.uleb128 0x17
 5820 07ef 08080000 		.4byte	.LASF133
 5821 07f3 01       		.byte	0x1
 5822 07f4 96       		.byte	0x96
 5823 07f5 61050000 		.4byte	0x561
 5824 07f9 05       		.uleb128 0x5
 5825 07fa 03       		.byte	0x3
 5826 07fb 04000000 		.4byte	rx_queue.9854
 5827 07ff 17       		.uleb128 0x17
 5828 0800 90010000 		.4byte	.LASF134
 5829 0804 01       		.byte	0x1
 5830 0805 99       		.byte	0x99
 5831 0806 81000000 		.4byte	0x81
 5832 080a 02       		.uleb128 0x2
 5833 080b 91       		.byte	0x91
 5834 080c 75       		.sleb128 -11
 5835 080d 17       		.uleb128 0x17
 5836 080e 98040000 		.4byte	.LASF135
 5837 0812 01       		.byte	0x1
 5838 0813 9A       		.byte	0x9a
 5839 0814 81000000 		.4byte	0x81
 5840 0818 02       		.uleb128 0x2
 5841 0819 91       		.byte	0x91
 5842 081a 77       		.sleb128 -9
 5843 081b 17       		.uleb128 0x17
 5844 081c 60050000 		.4byte	.LASF136
 5845 0820 01       		.byte	0x1
 5846 0821 9B       		.byte	0x9b
 5847 0822 81000000 		.4byte	0x81
 5848 0826 02       		.uleb128 0x2
 5849 0827 91       		.byte	0x91
 5850 0828 76       		.sleb128 -10
 5851 0829 00       		.byte	0
 5852 082a 18       		.uleb128 0x18
 5853 082b C00A0000 		.4byte	.LASF248
 5854 082f 01       		.byte	0x1
 5855 0830 0D01     		.2byte	0x10d
 5856 0832 00000000 		.4byte	.LFB67
 5857 0836 38040000 		.4byte	.LFE67-.LFB67
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 134


 5858 083a 01       		.uleb128 0x1
 5859 083b 9C       		.byte	0x9c
 5860 083c 93080000 		.4byte	0x893
 5861 0840 19       		.uleb128 0x19
 5862 0841 F5040000 		.4byte	.LASF137
 5863 0845 01       		.byte	0x1
 5864 0846 0F01     		.2byte	0x10f
 5865 0848 8D000000 		.4byte	0x8d
 5866 084c 05       		.uleb128 0x5
 5867 084d 03       		.byte	0x3
 5868 084e 00000000 		.4byte	counter_calibration.9870
 5869 0852 19       		.uleb128 0x19
 5870 0853 1A090000 		.4byte	.LASF138
 5871 0857 01       		.byte	0x1
 5872 0858 1001     		.2byte	0x110
 5873 085a 8D000000 		.4byte	0x8d
 5874 085e 05       		.uleb128 0x5
 5875 085f 03       		.byte	0x3
 5876 0860 02000000 		.4byte	counter_tension_func.9871
 5877 0864 19       		.uleb128 0x19
 5878 0865 43030000 		.4byte	.LASF139
 5879 0869 01       		.byte	0x1
 5880 086a 1101     		.2byte	0x111
 5881 086c 81000000 		.4byte	0x81
 5882 0870 02       		.uleb128 0x2
 5883 0871 91       		.byte	0x91
 5884 0872 6F       		.sleb128 -17
 5885 0873 19       		.uleb128 0x19
 5886 0874 38080000 		.4byte	.LASF140
 5887 0878 01       		.byte	0x1
 5888 0879 1301     		.2byte	0x113
 5889 087b 81000000 		.4byte	0x81
 5890 087f 02       		.uleb128 0x2
 5891 0880 91       		.byte	0x91
 5892 0881 6E       		.sleb128 -18
 5893 0882 19       		.uleb128 0x19
 5894 0883 A7010000 		.4byte	.LASF141
 5895 0887 01       		.byte	0x1
 5896 0888 1401     		.2byte	0x114
 5897 088a 93080000 		.4byte	0x893
 5898 088e 03       		.uleb128 0x3
 5899 088f 91       		.byte	0x91
 5900 0890 A86C     		.sleb128 -2520
 5901 0892 00       		.byte	0
 5902 0893 0E       		.uleb128 0xe
 5903 0894 E3000000 		.4byte	0xe3
 5904 0898 A4080000 		.4byte	0x8a4
 5905 089c 1A       		.uleb128 0x1a
 5906 089d 0E010000 		.4byte	0x10e
 5907 08a1 C309     		.2byte	0x9c3
 5908 08a3 00       		.byte	0
 5909 08a4 1B       		.uleb128 0x1b
 5910 08a5 B8050000 		.4byte	.LASF143
 5911 08a9 01       		.byte	0x1
 5912 08aa D801     		.2byte	0x1d8
 5913 08ac 00000000 		.4byte	.LFB68
 5914 08b0 4C080000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 135


 5915 08b4 01       		.uleb128 0x1
 5916 08b5 9C       		.byte	0x9c
 5917 08b6 490A0000 		.4byte	0xa49
 5918 08ba 19       		.uleb128 0x19
 5919 08bb 32000000 		.4byte	.LASF144
 5920 08bf 01       		.byte	0x1
 5921 08c0 DA01     		.2byte	0x1da
 5922 08c2 BD000000 		.4byte	0xbd
 5923 08c6 02       		.uleb128 0x2
 5924 08c7 91       		.byte	0x91
 5925 08c8 74       		.sleb128 -12
 5926 08c9 19       		.uleb128 0x19
 5927 08ca 59010000 		.4byte	.LASF145
 5928 08ce 01       		.byte	0x1
 5929 08cf DC01     		.2byte	0x1dc
 5930 08d1 BD000000 		.4byte	0xbd
 5931 08d5 03       		.uleb128 0x3
 5932 08d6 91       		.byte	0x91
 5933 08d7 B07F     		.sleb128 -80
 5934 08d9 19       		.uleb128 0x19
 5935 08da 290B0000 		.4byte	.LASF146
 5936 08de 01       		.byte	0x1
 5937 08df DD01     		.2byte	0x1dd
 5938 08e1 BD000000 		.4byte	0xbd
 5939 08e5 03       		.uleb128 0x3
 5940 08e6 91       		.byte	0x91
 5941 08e7 AC7F     		.sleb128 -84
 5942 08e9 19       		.uleb128 0x19
 5943 08ea 11080000 		.4byte	.LASF147
 5944 08ee 01       		.byte	0x1
 5945 08ef DF01     		.2byte	0x1df
 5946 08f1 BD000000 		.4byte	0xbd
 5947 08f5 02       		.uleb128 0x2
 5948 08f6 91       		.byte	0x91
 5949 08f7 70       		.sleb128 -16
 5950 08f8 19       		.uleb128 0x19
 5951 08f9 C6030000 		.4byte	.LASF148
 5952 08fd 01       		.byte	0x1
 5953 08fe E001     		.2byte	0x1e0
 5954 0900 BD000000 		.4byte	0xbd
 5955 0904 02       		.uleb128 0x2
 5956 0905 91       		.byte	0x91
 5957 0906 6C       		.sleb128 -20
 5958 0907 19       		.uleb128 0x19
 5959 0908 FB020000 		.4byte	.LASF149
 5960 090c 01       		.byte	0x1
 5961 090d E201     		.2byte	0x1e2
 5962 090f BD000000 		.4byte	0xbd
 5963 0913 03       		.uleb128 0x3
 5964 0914 91       		.byte	0x91
 5965 0915 B87F     		.sleb128 -72
 5966 0917 19       		.uleb128 0x19
 5967 0918 05030000 		.4byte	.LASF150
 5968 091c 01       		.byte	0x1
 5969 091d E201     		.2byte	0x1e2
 5970 091f BD000000 		.4byte	0xbd
 5971 0923 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 136


 5972 0924 91       		.byte	0x91
 5973 0925 B47F     		.sleb128 -76
 5974 0927 1C       		.uleb128 0x1c
 5975 0928 6B5F7000 		.ascii	"k_p\000"
 5976 092c 01       		.byte	0x1
 5977 092d E401     		.2byte	0x1e4
 5978 092f BD000000 		.4byte	0xbd
 5979 0933 02       		.uleb128 0x2
 5980 0934 91       		.byte	0x91
 5981 0935 68       		.sleb128 -24
 5982 0936 1C       		.uleb128 0x1c
 5983 0937 6B5F6900 		.ascii	"k_i\000"
 5984 093b 01       		.byte	0x1
 5985 093c E501     		.2byte	0x1e5
 5986 093e BD000000 		.4byte	0xbd
 5987 0942 02       		.uleb128 0x2
 5988 0943 91       		.byte	0x91
 5989 0944 64       		.sleb128 -28
 5990 0945 1C       		.uleb128 0x1c
 5991 0946 6B5F6400 		.ascii	"k_d\000"
 5992 094a 01       		.byte	0x1
 5993 094b E601     		.2byte	0x1e6
 5994 094d BD000000 		.4byte	0xbd
 5995 0951 02       		.uleb128 0x2
 5996 0952 91       		.byte	0x91
 5997 0953 60       		.sleb128 -32
 5998 0954 19       		.uleb128 0x19
 5999 0955 9F090000 		.4byte	.LASF49
 6000 0959 01       		.byte	0x1
 6001 095a E801     		.2byte	0x1e8
 6002 095c BD000000 		.4byte	0xbd
 6003 0960 02       		.uleb128 0x2
 6004 0961 91       		.byte	0x91
 6005 0962 5C       		.sleb128 -36
 6006 0963 19       		.uleb128 0x19
 6007 0964 04040000 		.4byte	.LASF50
 6008 0968 01       		.byte	0x1
 6009 0969 E901     		.2byte	0x1e9
 6010 096b BD000000 		.4byte	0xbd
 6011 096f 02       		.uleb128 0x2
 6012 0970 91       		.byte	0x91
 6013 0971 58       		.sleb128 -40
 6014 0972 19       		.uleb128 0x19
 6015 0973 F7030000 		.4byte	.LASF51
 6016 0977 01       		.byte	0x1
 6017 0978 EA01     		.2byte	0x1ea
 6018 097a BD000000 		.4byte	0xbd
 6019 097e 02       		.uleb128 0x2
 6020 097f 91       		.byte	0x91
 6021 0980 54       		.sleb128 -44
 6022 0981 19       		.uleb128 0x19
 6023 0982 090B0000 		.4byte	.LASF52
 6024 0986 01       		.byte	0x1
 6025 0987 EC01     		.2byte	0x1ec
 6026 0989 BD000000 		.4byte	0xbd
 6027 098d 02       		.uleb128 0x2
 6028 098e 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 137


 6029 098f 50       		.sleb128 -48
 6030 0990 19       		.uleb128 0x19
 6031 0991 81040000 		.4byte	.LASF53
 6032 0995 01       		.byte	0x1
 6033 0996 ED01     		.2byte	0x1ed
 6034 0998 BD000000 		.4byte	0xbd
 6035 099c 02       		.uleb128 0x2
 6036 099d 91       		.byte	0x91
 6037 099e 4C       		.sleb128 -52
 6038 099f 19       		.uleb128 0x19
 6039 09a0 AD0A0000 		.4byte	.LASF54
 6040 09a4 01       		.byte	0x1
 6041 09a5 EE01     		.2byte	0x1ee
 6042 09a7 BD000000 		.4byte	0xbd
 6043 09ab 02       		.uleb128 0x2
 6044 09ac 91       		.byte	0x91
 6045 09ad 48       		.sleb128 -56
 6046 09ae 19       		.uleb128 0x19
 6047 09af 8F040000 		.4byte	.LASF55
 6048 09b3 01       		.byte	0x1
 6049 09b4 F001     		.2byte	0x1f0
 6050 09b6 BD000000 		.4byte	0xbd
 6051 09ba 02       		.uleb128 0x2
 6052 09bb 91       		.byte	0x91
 6053 09bc 44       		.sleb128 -60
 6054 09bd 19       		.uleb128 0x19
 6055 09be 57050000 		.4byte	.LASF56
 6056 09c2 01       		.byte	0x1
 6057 09c3 F101     		.2byte	0x1f1
 6058 09c5 BD000000 		.4byte	0xbd
 6059 09c9 02       		.uleb128 0x2
 6060 09ca 91       		.byte	0x91
 6061 09cb 40       		.sleb128 -64
 6062 09cc 19       		.uleb128 0x19
 6063 09cd 500C0000 		.4byte	.LASF57
 6064 09d1 01       		.byte	0x1
 6065 09d2 F201     		.2byte	0x1f2
 6066 09d4 BD000000 		.4byte	0xbd
 6067 09d8 03       		.uleb128 0x3
 6068 09d9 91       		.byte	0x91
 6069 09da BC7F     		.sleb128 -68
 6070 09dc 19       		.uleb128 0x19
 6071 09dd 65040000 		.4byte	.LASF151
 6072 09e1 01       		.byte	0x1
 6073 09e2 F601     		.2byte	0x1f6
 6074 09e4 BD000000 		.4byte	0xbd
 6075 09e8 05       		.uleb128 0x5
 6076 09e9 03       		.byte	0x3
 6077 09ea 90000000 		.4byte	pos_error_sum.9896
 6078 09ee 19       		.uleb128 0x19
 6079 09ef 50030000 		.4byte	.LASF152
 6080 09f3 01       		.byte	0x1
 6081 09f4 F701     		.2byte	0x1f7
 6082 09f6 BD000000 		.4byte	0xbd
 6083 09fa 05       		.uleb128 0x5
 6084 09fb 03       		.byte	0x3
 6085 09fc 9C000000 		.4byte	curr_error_sum.9897
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 138


 6086 0a00 19       		.uleb128 0x19
 6087 0a01 72080000 		.4byte	.LASF153
 6088 0a05 01       		.byte	0x1
 6089 0a06 F901     		.2byte	0x1f9
 6090 0a08 BD000000 		.4byte	0xbd
 6091 0a0c 05       		.uleb128 0x5
 6092 0a0d 03       		.byte	0x3
 6093 0a0e 94000000 		.4byte	prev_pos_err.9898
 6094 0a12 19       		.uleb128 0x19
 6095 0a13 7E090000 		.4byte	.LASF154
 6096 0a17 01       		.byte	0x1
 6097 0a18 FA01     		.2byte	0x1fa
 6098 0a1a BD000000 		.4byte	0xbd
 6099 0a1e 05       		.uleb128 0x5
 6100 0a1f 03       		.byte	0x3
 6101 0a20 A0000000 		.4byte	prev_curr_err.9899
 6102 0a24 19       		.uleb128 0x19
 6103 0a25 0A040000 		.4byte	.LASF155
 6104 0a29 01       		.byte	0x1
 6105 0a2a FC01     		.2byte	0x1fc
 6106 0a2c 81000000 		.4byte	0x81
 6107 0a30 05       		.uleb128 0x5
 6108 0a31 03       		.byte	0x3
 6109 0a32 98000000 		.4byte	motor_dir.9900
 6110 0a36 19       		.uleb128 0x19
 6111 0a37 FC070000 		.4byte	.LASF156
 6112 0a3b 01       		.byte	0x1
 6113 0a3c FE01     		.2byte	0x1fe
 6114 0a3e 81000000 		.4byte	0x81
 6115 0a42 05       		.uleb128 0x5
 6116 0a43 03       		.byte	0x3
 6117 0a44 8C000000 		.4byte	current_emg.9901
 6118 0a48 00       		.byte	0
 6119 0a49 1B       		.uleb128 0x1b
 6120 0a4a 89020000 		.4byte	.LASF157
 6121 0a4e 01       		.byte	0x1
 6122 0a4f 8203     		.2byte	0x382
 6123 0a51 00000000 		.4byte	.LFB69
 6124 0a55 94040000 		.4byte	.LFE69-.LFB69
 6125 0a59 01       		.uleb128 0x1
 6126 0a5a 9C       		.byte	0x9c
 6127 0a5b 5B0B0000 		.4byte	0xb5b
 6128 0a5f 19       		.uleb128 0x19
 6129 0a60 38050000 		.4byte	.LASF158
 6130 0a64 01       		.byte	0x1
 6131 0a65 8403     		.2byte	0x384
 6132 0a67 81000000 		.4byte	0x81
 6133 0a6b 02       		.uleb128 0x2
 6134 0a6c 91       		.byte	0x91
 6135 0a6d 6F       		.sleb128 -17
 6136 0a6e 19       		.uleb128 0x19
 6137 0a6f C5090000 		.4byte	.LASF159
 6138 0a73 01       		.byte	0x1
 6139 0a74 8503     		.2byte	0x385
 6140 0a76 27020000 		.4byte	0x227
 6141 0a7a 02       		.uleb128 0x2
 6142 0a7b 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 139


 6143 0a7c 50       		.sleb128 -48
 6144 0a7d 1C       		.uleb128 0x1c
 6145 0a7e 6A6A00   		.ascii	"jj\000"
 6146 0a81 01       		.byte	0x1
 6147 0a82 8803     		.2byte	0x388
 6148 0a84 68000000 		.4byte	0x68
 6149 0a88 02       		.uleb128 0x2
 6150 0a89 91       		.byte	0x91
 6151 0a8a 68       		.sleb128 -24
 6152 0a8b 19       		.uleb128 0x19
 6153 0a8c 9C030000 		.4byte	.LASF160
 6154 0a90 01       		.byte	0x1
 6155 0a91 8903     		.2byte	0x389
 6156 0a93 BD000000 		.4byte	0xbd
 6157 0a97 02       		.uleb128 0x2
 6158 0a98 91       		.byte	0x91
 6159 0a99 5C       		.sleb128 -36
 6160 0a9a 19       		.uleb128 0x19
 6161 0a9b 07070000 		.4byte	.LASF161
 6162 0a9f 01       		.byte	0x1
 6163 0aa0 8A03     		.2byte	0x38a
 6164 0aa2 BD000000 		.4byte	0xbd
 6165 0aa6 05       		.uleb128 0x5
 6166 0aa7 03       		.byte	0x3
 6167 0aa8 B4000000 		.4byte	previous_val.9930
 6168 0aac 1C       		.uleb128 0x1c
 6169 0aad 61757800 		.ascii	"aux\000"
 6170 0ab1 01       		.byte	0x1
 6171 0ab2 8B03     		.2byte	0x38b
 6172 0ab4 BD000000 		.4byte	0xbd
 6173 0ab8 02       		.uleb128 0x2
 6174 0ab9 91       		.byte	0x91
 6175 0aba 60       		.sleb128 -32
 6176 0abb 19       		.uleb128 0x19
 6177 0abc B8010000 		.4byte	.LASF162
 6178 0ac0 01       		.byte	0x1
 6179 0ac1 8C03     		.2byte	0x38c
 6180 0ac3 BD000000 		.4byte	0xbd
 6181 0ac7 02       		.uleb128 0x2
 6182 0ac8 91       		.byte	0x91
 6183 0ac9 64       		.sleb128 -28
 6184 0aca 19       		.uleb128 0x19
 6185 0acb 07090000 		.4byte	.LASF163
 6186 0acf 01       		.byte	0x1
 6187 0ad0 8E03     		.2byte	0x38e
 6188 0ad2 27020000 		.4byte	0x227
 6189 0ad6 05       		.uleb128 0x5
 6190 0ad7 03       		.byte	0x3
 6191 0ad8 A4000000 		.4byte	last_value_encoder.9933
 6192 0adc 19       		.uleb128 0x19
 6193 0add A9020000 		.4byte	.LASF164
 6194 0ae1 01       		.byte	0x1
 6195 0ae2 9003     		.2byte	0x390
 6196 0ae4 61050000 		.4byte	0x561
 6197 0ae8 05       		.uleb128 0x5
 6198 0ae9 03       		.byte	0x3
 6199 0aea B0000000 		.4byte	error.9934
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 140


 6200 0aee 19       		.uleb128 0x19
 6201 0aef 8D0A0000 		.4byte	.LASF165
 6202 0af3 01       		.byte	0x1
 6203 0af4 9203     		.2byte	0x392
 6204 0af6 81000000 		.4byte	0x81
 6205 0afa 05       		.uleb128 0x5
 6206 0afb 03       		.byte	0x3
 6207 0afc 04000000 		.4byte	only_first_time.9935
 6208 0b00 19       		.uleb128 0x19
 6209 0b01 55000000 		.4byte	.LASF166
 6210 0b05 01       		.byte	0x1
 6211 0b06 9403     		.2byte	0x394
 6212 0b08 81000000 		.4byte	0x81
 6213 0b0c 05       		.uleb128 0x5
 6214 0b0d 03       		.byte	0x3
 6215 0b0e DD000000 		.4byte	one_time_execute.9936
 6216 0b12 19       		.uleb128 0x19
 6217 0b13 C5020000 		.4byte	.LASF167
 6218 0b17 01       		.byte	0x1
 6219 0b18 9503     		.2byte	0x395
 6220 0b1a 81000000 		.4byte	0x81
 6221 0b1e 05       		.uleb128 0x5
 6222 0b1f 03       		.byte	0x3
 6223 0b20 DC000000 		.4byte	pos_reconstruct.9937
 6224 0b24 19       		.uleb128 0x19
 6225 0b25 F9060000 		.4byte	.LASF168
 6226 0b29 01       		.byte	0x1
 6227 0b2a 9703     		.2byte	0x397
 6228 0b2c 27020000 		.4byte	0x227
 6229 0b30 05       		.uleb128 0x5
 6230 0b31 03       		.byte	0x3
 6231 0b32 B8000000 		.4byte	v_value.9938
 6232 0b36 19       		.uleb128 0x19
 6233 0b37 470C0000 		.4byte	.LASF169
 6234 0b3b 01       		.byte	0x1
 6235 0b3c 9803     		.2byte	0x398
 6236 0b3e 27020000 		.4byte	0x227
 6237 0b42 05       		.uleb128 0x5
 6238 0b43 03       		.byte	0x3
 6239 0b44 C4000000 		.4byte	vv_value.9939
 6240 0b48 19       		.uleb128 0x19
 6241 0b49 98010000 		.4byte	.LASF170
 6242 0b4d 01       		.byte	0x1
 6243 0b4e 9903     		.2byte	0x399
 6244 0b50 27020000 		.4byte	0x227
 6245 0b54 05       		.uleb128 0x5
 6246 0b55 03       		.byte	0x3
 6247 0b56 D0000000 		.4byte	vvv_value.9940
 6248 0b5a 00       		.byte	0
 6249 0b5b 1B       		.uleb128 0x1b
 6250 0b5c 000A0000 		.4byte	.LASF171
 6251 0b60 01       		.byte	0x1
 6252 0b61 2004     		.2byte	0x420
 6253 0b63 00000000 		.4byte	.LFB70
 6254 0b67 08070000 		.4byte	.LFE70-.LFB70
 6255 0b6b 01       		.uleb128 0x1
 6256 0b6c 9C       		.byte	0x9c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 141


 6257 0b6d ED0B0000 		.4byte	0xbed
 6258 0b71 19       		.uleb128 0x19
 6259 0b72 BF090000 		.4byte	.LASF172
 6260 0b76 01       		.byte	0x1
 6261 0b77 3404     		.2byte	0x434
 6262 0b79 BD000000 		.4byte	0xbd
 6263 0b7d 02       		.uleb128 0x2
 6264 0b7e 91       		.byte	0x91
 6265 0b7f 6C       		.sleb128 -20
 6266 0b80 19       		.uleb128 0x19
 6267 0b81 710A0000 		.4byte	.LASF173
 6268 0b85 01       		.byte	0x1
 6269 0b86 3604     		.2byte	0x436
 6270 0b88 8D000000 		.4byte	0x8d
 6271 0b8c 05       		.uleb128 0x5
 6272 0b8d 03       		.byte	0x3
 6273 0b8e E4000000 		.4byte	emg_counter_1.9953
 6274 0b92 19       		.uleb128 0x19
 6275 0b93 7F0A0000 		.4byte	.LASF174
 6276 0b97 01       		.byte	0x1
 6277 0b98 3704     		.2byte	0x437
 6278 0b9a 8D000000 		.4byte	0x8d
 6279 0b9e 05       		.uleb128 0x5
 6280 0b9f 03       		.byte	0x3
 6281 0ba0 E6000000 		.4byte	emg_counter_2.9954
 6282 0ba4 19       		.uleb128 0x19
 6283 0ba5 23020000 		.4byte	.LASF175
 6284 0ba9 01       		.byte	0x1
 6285 0baa 3804     		.2byte	0x438
 6286 0bac 81000000 		.4byte	0x81
 6287 0bb0 05       		.uleb128 0x5
 6288 0bb1 03       		.byte	0x3
 6289 0bb2 05000000 		.4byte	first_tension_valid.9955
 6290 0bb6 19       		.uleb128 0x19
 6291 0bb7 E00A0000 		.4byte	.LASF176
 6292 0bbb 01       		.byte	0x1
 6293 0bbc 3904     		.2byte	0x439
 6294 0bbe BD000000 		.4byte	0xbd
 6295 0bc2 05       		.uleb128 0x5
 6296 0bc3 03       		.byte	0x3
 6297 0bc4 08000000 		.4byte	pow_tension.9956
 6298 0bc8 19       		.uleb128 0x19
 6299 0bc9 93070000 		.4byte	.LASF177
 6300 0bcd 01       		.byte	0x1
 6301 0bce 3A04     		.2byte	0x43a
 6302 0bd0 8D000000 		.4byte	0x8d
 6303 0bd4 05       		.uleb128 0x5
 6304 0bd5 03       		.byte	0x3
 6305 0bd6 DE000000 		.4byte	count.9957
 6306 0bda 19       		.uleb128 0x19
 6307 0bdb 88010000 		.4byte	.LASF178
 6308 0bdf 01       		.byte	0x1
 6309 0be0 3B04     		.2byte	0x43b
 6310 0be2 99000000 		.4byte	0x99
 6311 0be6 05       		.uleb128 0x5
 6312 0be7 03       		.byte	0x3
 6313 0be8 E0000000 		.4byte	v_count.9958
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 142


 6314 0bec 00       		.byte	0
 6315 0bed 1D       		.uleb128 0x1d
 6316 0bee DD090000 		.4byte	.LASF249
 6317 0bf2 01       		.byte	0x1
 6318 0bf3 8805     		.2byte	0x588
 6319 0bf5 00000000 		.4byte	.LFB71
 6320 0bf9 74000000 		.4byte	.LFE71-.LFB71
 6321 0bfd 01       		.uleb128 0x1
 6322 0bfe 9C       		.byte	0x9c
 6323 0bff 1E       		.uleb128 0x1e
 6324 0c00 D5020000 		.4byte	.LASF179
 6325 0c04 01       		.byte	0x1
 6326 0c05 A105     		.2byte	0x5a1
 6327 0c07 00000000 		.4byte	.LFB72
 6328 0c0b 64000000 		.4byte	.LFE72-.LFB72
 6329 0c0f 01       		.uleb128 0x1
 6330 0c10 9C       		.byte	0x9c
 6331 0c11 430C0000 		.4byte	0xc43
 6332 0c15 19       		.uleb128 0x19
 6333 0c16 38050000 		.4byte	.LASF158
 6334 0c1a 01       		.byte	0x1
 6335 0c1b A305     		.2byte	0x5a3
 6336 0c1d 81000000 		.4byte	0x81
 6337 0c21 02       		.uleb128 0x2
 6338 0c22 91       		.byte	0x91
 6339 0c23 73       		.sleb128 -13
 6340 0c24 19       		.uleb128 0x19
 6341 0c25 3C000000 		.4byte	.LASF180
 6342 0c29 01       		.byte	0x1
 6343 0c2a A405     		.2byte	0x5a4
 6344 0c2c 8D000000 		.4byte	0x8d
 6345 0c30 02       		.uleb128 0x2
 6346 0c31 91       		.byte	0x91
 6347 0c32 76       		.sleb128 -10
 6348 0c33 19       		.uleb128 0x19
 6349 0c34 62090000 		.4byte	.LASF181
 6350 0c38 01       		.byte	0x1
 6351 0c39 A505     		.2byte	0x5a5
 6352 0c3b 8D000000 		.4byte	0x8d
 6353 0c3f 02       		.uleb128 0x2
 6354 0c40 91       		.byte	0x91
 6355 0c41 74       		.sleb128 -12
 6356 0c42 00       		.byte	0
 6357 0c43 1B       		.uleb128 0x1b
 6358 0c44 3A060000 		.4byte	.LASF182
 6359 0c48 01       		.byte	0x1
 6360 0c49 B505     		.2byte	0x5b5
 6361 0c4b 00000000 		.4byte	.LFB73
 6362 0c4f F4020000 		.4byte	.LFE73-.LFB73
 6363 0c53 01       		.uleb128 0x1
 6364 0c54 9C       		.byte	0x9c
 6365 0c55 330D0000 		.4byte	0xd33
 6366 0c59 19       		.uleb128 0x19
 6367 0c5a 09000000 		.4byte	.LASF183
 6368 0c5e 01       		.byte	0x1
 6369 0c5f B605     		.2byte	0x5b6
 6370 0c61 81000000 		.4byte	0x81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 143


 6371 0c65 05       		.uleb128 0x5
 6372 0c66 03       		.byte	0x3
 6373 0c67 E8000000 		.4byte	pos_cycle_status.9985
 6374 0c6b 19       		.uleb128 0x19
 6375 0c6c 100A0000 		.4byte	.LASF184
 6376 0c70 01       		.byte	0x1
 6377 0c71 B705     		.2byte	0x5b7
 6378 0c73 330D0000 		.4byte	0xd33
 6379 0c77 05       		.uleb128 0x5
 6380 0c78 03       		.byte	0x3
 6381 0c79 F4000000 		.4byte	emg_cycle_status.9986
 6382 0c7d 19       		.uleb128 0x19
 6383 0c7e 340B0000 		.4byte	.LASF185
 6384 0c82 01       		.byte	0x1
 6385 0c83 B805     		.2byte	0x5b8
 6386 0c85 81000000 		.4byte	0x81
 6387 0c89 05       		.uleb128 0x5
 6388 0c8a 03       		.byte	0x3
 6389 0c8b F6000000 		.4byte	rest_cycle_status.9987
 6390 0c8f 19       		.uleb128 0x19
 6391 0c90 5A020000 		.4byte	.LASF186
 6392 0c94 01       		.byte	0x1
 6393 0c95 B905     		.2byte	0x5b9
 6394 0c97 BD000000 		.4byte	0xbd
 6395 0c9b 05       		.uleb128 0x5
 6396 0c9c 03       		.byte	0x3
 6397 0c9d 0C000000 		.4byte	bin_threshold.9988
 6398 0ca1 19       		.uleb128 0x19
 6399 0ca2 E7010000 		.4byte	.LASF187
 6400 0ca6 01       		.byte	0x1
 6401 0ca7 BA05     		.2byte	0x5ba
 6402 0ca9 BD000000 		.4byte	0xbd
 6403 0cad 05       		.uleb128 0x5
 6404 0cae 03       		.byte	0x3
 6405 0caf EC000000 		.4byte	thr_pos.9989
 6406 0cb3 19       		.uleb128 0x19
 6407 0cb4 B3070000 		.4byte	.LASF188
 6408 0cb8 01       		.byte	0x1
 6409 0cb9 BA05     		.2byte	0x5ba
 6410 0cbb BD000000 		.4byte	0xbd
 6411 0cbf 05       		.uleb128 0x5
 6412 0cc0 03       		.byte	0x3
 6413 0cc1 F0000000 		.4byte	max_pos.9990
 6414 0cc5 1C       		.uleb128 0x1c
 6415 0cc6 6900     		.ascii	"i\000"
 6416 0cc8 01       		.byte	0x1
 6417 0cc9 BB05     		.2byte	0x5bb
 6418 0ccb 81000000 		.4byte	0x81
 6419 0ccf 02       		.uleb128 0x2
 6420 0cd0 91       		.byte	0x91
 6421 0cd1 77       		.sleb128 -9
 6422 0cd2 19       		.uleb128 0x19
 6423 0cd3 14040000 		.4byte	.LASF189
 6424 0cd7 01       		.byte	0x1
 6425 0cd8 BB05     		.2byte	0x5bb
 6426 0cda 81000000 		.4byte	0x81
 6427 0cde 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 144


 6428 0cdf 91       		.byte	0x91
 6429 0ce0 6B       		.sleb128 -21
 6430 0ce1 19       		.uleb128 0x19
 6431 0ce2 24010000 		.4byte	.LASF190
 6432 0ce6 01       		.byte	0x1
 6433 0ce7 BB05     		.2byte	0x5bb
 6434 0ce9 81000000 		.4byte	0x81
 6435 0ced 02       		.uleb128 0x2
 6436 0cee 91       		.byte	0x91
 6437 0cef 6A       		.sleb128 -22
 6438 0cf0 19       		.uleb128 0x19
 6439 0cf1 F1090000 		.4byte	.LASF191
 6440 0cf5 01       		.byte	0x1
 6441 0cf6 BC05     		.2byte	0x5bc
 6442 0cf8 BD000000 		.4byte	0xbd
 6443 0cfc 02       		.uleb128 0x2
 6444 0cfd 91       		.byte	0x91
 6445 0cfe 70       		.sleb128 -16
 6446 0cff 19       		.uleb128 0x19
 6447 0d00 3E030000 		.4byte	.LASF192
 6448 0d04 01       		.byte	0x1
 6449 0d05 BD05     		.2byte	0x5bd
 6450 0d07 BD000000 		.4byte	0xbd
 6451 0d0b 02       		.uleb128 0x2
 6452 0d0c 91       		.byte	0x91
 6453 0d0d 6C       		.sleb128 -20
 6454 0d0e 19       		.uleb128 0x19
 6455 0d0f 10050000 		.4byte	.LASF193
 6456 0d13 01       		.byte	0x1
 6457 0d14 BE05     		.2byte	0x5be
 6458 0d16 99000000 		.4byte	0x99
 6459 0d1a 05       		.uleb128 0x5
 6460 0d1b 03       		.byte	0x3
 6461 0d1c F8000000 		.4byte	timer_value_s.9996
 6462 0d20 19       		.uleb128 0x19
 6463 0d21 B4040000 		.4byte	.LASF194
 6464 0d25 01       		.byte	0x1
 6465 0d26 BE05     		.2byte	0x5be
 6466 0d28 99000000 		.4byte	0x99
 6467 0d2c 05       		.uleb128 0x5
 6468 0d2d 03       		.byte	0x3
 6469 0d2e FC000000 		.4byte	timer_value_e.9997
 6470 0d32 00       		.byte	0
 6471 0d33 0E       		.uleb128 0xe
 6472 0d34 81000000 		.4byte	0x81
 6473 0d38 430D0000 		.4byte	0xd43
 6474 0d3c 0F       		.uleb128 0xf
 6475 0d3d 0E010000 		.4byte	0x10e
 6476 0d41 01       		.byte	0x1
 6477 0d42 00       		.byte	0
 6478 0d43 1B       		.uleb128 0x1b
 6479 0d44 25080000 		.4byte	.LASF195
 6480 0d48 01       		.byte	0x1
 6481 0d49 1C06     		.2byte	0x61c
 6482 0d4b 00000000 		.4byte	.LFB74
 6483 0d4f 08010000 		.4byte	.LFE74-.LFB74
 6484 0d53 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 145


 6485 0d54 9C       		.byte	0x9c
 6486 0d55 C90D0000 		.4byte	0xdc9
 6487 0d59 19       		.uleb128 0x19
 6488 0d5a C6050000 		.4byte	.LASF196
 6489 0d5e 01       		.byte	0x1
 6490 0d5f 1E06     		.2byte	0x61e
 6491 0d61 EA000000 		.4byte	0xea
 6492 0d65 02       		.uleb128 0x2
 6493 0d66 91       		.byte	0x91
 6494 0d67 64       		.sleb128 -28
 6495 0d68 19       		.uleb128 0x19
 6496 0d69 D2090000 		.4byte	.LASF197
 6497 0d6d 01       		.byte	0x1
 6498 0d6e 1F06     		.2byte	0x61f
 6499 0d70 81000000 		.4byte	0x81
 6500 0d74 05       		.uleb128 0x5
 6501 0d75 03       		.byte	0x3
 6502 0d76 04010000 		.4byte	row_number.10019
 6503 0d7a 19       		.uleb128 0x19
 6504 0d7b 86030000 		.4byte	.LASF198
 6505 0d7f 01       		.byte	0x1
 6506 0d80 2006     		.2byte	0x620
 6507 0d82 81000000 		.4byte	0x81
 6508 0d86 02       		.uleb128 0x2
 6509 0d87 91       		.byte	0x91
 6510 0d88 77       		.sleb128 -9
 6511 0d89 19       		.uleb128 0x19
 6512 0d8a 3E0A0000 		.4byte	.LASF199
 6513 0d8e 01       		.byte	0x1
 6514 0d8f 2106     		.2byte	0x621
 6515 0d91 C90D0000 		.4byte	0xdc9
 6516 0d95 02       		.uleb128 0x2
 6517 0d96 91       		.byte	0x91
 6518 0d97 70       		.sleb128 -16
 6519 0d98 19       		.uleb128 0x19
 6520 0d99 2C010000 		.4byte	.LASF200
 6521 0d9d 01       		.byte	0x1
 6522 0d9e 2206     		.2byte	0x622
 6523 0da0 C90D0000 		.4byte	0xdc9
 6524 0da4 02       		.uleb128 0x2
 6525 0da5 91       		.byte	0x91
 6526 0da6 6C       		.sleb128 -20
 6527 0da7 19       		.uleb128 0x19
 6528 0da8 C80B0000 		.4byte	.LASF201
 6529 0dac 01       		.byte	0x1
 6530 0dad 2306     		.2byte	0x623
 6531 0daf 81000000 		.4byte	0x81
 6532 0db3 02       		.uleb128 0x2
 6533 0db4 91       		.byte	0x91
 6534 0db5 6B       		.sleb128 -21
 6535 0db6 19       		.uleb128 0x19
 6536 0db7 99070000 		.4byte	.LASF202
 6537 0dbb 01       		.byte	0x1
 6538 0dbc 2406     		.2byte	0x624
 6539 0dbe C90D0000 		.4byte	0xdc9
 6540 0dc2 05       		.uleb128 0x5
 6541 0dc3 03       		.byte	0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 146


 6542 0dc4 00010000 		.4byte	m_addr.10024
 6543 0dc8 00       		.byte	0
 6544 0dc9 0A       		.uleb128 0xa
 6545 0dca 04       		.byte	0x4
 6546 0dcb 81000000 		.4byte	0x81
 6547 0dcf 0E       		.uleb128 0xe
 6548 0dd0 DF0D0000 		.4byte	0xddf
 6549 0dd4 DF0D0000 		.4byte	0xddf
 6550 0dd8 0F       		.uleb128 0xf
 6551 0dd9 0E010000 		.4byte	0x10e
 6552 0ddd 1C       		.byte	0x1c
 6553 0dde 00       		.byte	0
 6554 0ddf 1F       		.uleb128 0x1f
 6555 0de0 81000000 		.4byte	0x81
 6556 0de4 17       		.uleb128 0x17
 6557 0de5 490A0000 		.4byte	.LASF203
 6558 0de9 01       		.byte	0x1
 6559 0dea 45       		.byte	0x45
 6560 0deb F50D0000 		.4byte	0xdf5
 6561 0def 05       		.uleb128 0x5
 6562 0df0 03       		.byte	0x3
 6563 0df1 00000000 		.4byte	pwm_preload_values
 6564 0df5 1F       		.uleb128 0x1f
 6565 0df6 CF0D0000 		.4byte	0xdcf
 6566 0dfa 20       		.uleb128 0x20
 6567 0dfb D30A0000 		.4byte	.LASF204
 6568 0dff 08       		.byte	0x8
 6569 0e00 1207     		.2byte	0x712
 6570 0e02 060E0000 		.4byte	0xe06
 6571 0e06 06       		.uleb128 0x6
 6572 0e07 76000000 		.4byte	0x76
 6573 0e0b 20       		.uleb128 0x20
 6574 0e0c 1E050000 		.4byte	.LASF205
 6575 0e10 07       		.byte	0x7
 6576 0e11 4101     		.2byte	0x141
 6577 0e13 89010000 		.4byte	0x189
 6578 0e17 20       		.uleb128 0x20
 6579 0e18 AA030000 		.4byte	.LASF206
 6580 0e1c 07       		.byte	0x7
 6581 0e1d 4101     		.2byte	0x141
 6582 0e1f 89010000 		.4byte	0x189
 6583 0e23 20       		.uleb128 0x20
 6584 0e24 BD080000 		.4byte	.LASF207
 6585 0e28 07       		.byte	0x7
 6586 0e29 4101     		.2byte	0x141
 6587 0e2b 89010000 		.4byte	0x189
 6588 0e2f 20       		.uleb128 0x20
 6589 0e30 09050000 		.4byte	.LASF208
 6590 0e34 07       		.byte	0x7
 6591 0e35 4201     		.2byte	0x142
 6592 0e37 C6010000 		.4byte	0x1c6
 6593 0e3b 20       		.uleb128 0x20
 6594 0e3c BE0B0000 		.4byte	.LASF209
 6595 0e40 07       		.byte	0x7
 6596 0e41 4201     		.2byte	0x142
 6597 0e43 C6010000 		.4byte	0x1c6
 6598 0e47 20       		.uleb128 0x20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 147


 6599 0e48 50000000 		.4byte	.LASF210
 6600 0e4c 07       		.byte	0x7
 6601 0e4d 4301     		.2byte	0x143
 6602 0e4f 57020000 		.4byte	0x257
 6603 0e53 20       		.uleb128 0x20
 6604 0e54 6B0A0000 		.4byte	.LASF211
 6605 0e58 07       		.byte	0x7
 6606 0e59 4401     		.2byte	0x144
 6607 0e5b A4020000 		.4byte	0x2a4
 6608 0e5f 20       		.uleb128 0x20
 6609 0e60 A0070000 		.4byte	.LASF212
 6610 0e64 07       		.byte	0x7
 6611 0e65 4401     		.2byte	0x144
 6612 0e67 A4020000 		.4byte	0x2a4
 6613 0e6b 20       		.uleb128 0x20
 6614 0e6c 01070000 		.4byte	.LASF213
 6615 0e70 07       		.byte	0x7
 6616 0e71 4501     		.2byte	0x145
 6617 0e73 BB060000 		.4byte	0x6bb
 6618 0e77 20       		.uleb128 0x20
 6619 0e78 A9080000 		.4byte	.LASF214
 6620 0e7c 07       		.byte	0x7
 6621 0e7d 4601     		.2byte	0x146
 6622 0e7f 93060000 		.4byte	0x693
 6623 0e83 20       		.uleb128 0x20
 6624 0e84 45070000 		.4byte	.LASF215
 6625 0e88 07       		.byte	0x7
 6626 0e89 4601     		.2byte	0x146
 6627 0e8b 93060000 		.4byte	0x693
 6628 0e8f 20       		.uleb128 0x20
 6629 0e90 8F080000 		.4byte	.LASF216
 6630 0e94 07       		.byte	0x7
 6631 0e95 4601     		.2byte	0x146
 6632 0e97 93060000 		.4byte	0x693
 6633 0e9b 0E       		.uleb128 0xe
 6634 0e9c 93060000 		.4byte	0x693
 6635 0ea0 AB0E0000 		.4byte	0xeab
 6636 0ea4 0F       		.uleb128 0xf
 6637 0ea5 0E010000 		.4byte	0x10e
 6638 0ea9 02       		.byte	0x2
 6639 0eaa 00       		.byte	0
 6640 0eab 20       		.uleb128 0x20
 6641 0eac EE030000 		.4byte	.LASF217
 6642 0eb0 07       		.byte	0x7
 6643 0eb1 4701     		.2byte	0x147
 6644 0eb3 9B0E0000 		.4byte	0xe9b
 6645 0eb7 20       		.uleb128 0x20
 6646 0eb8 1B040000 		.4byte	.LASF218
 6647 0ebc 07       		.byte	0x7
 6648 0ebd 4801     		.2byte	0x148
 6649 0ebf 93060000 		.4byte	0x693
 6650 0ec3 20       		.uleb128 0x20
 6651 0ec4 25040000 		.4byte	.LASF219
 6652 0ec8 07       		.byte	0x7
 6653 0ec9 4801     		.2byte	0x148
 6654 0ecb 93060000 		.4byte	0x693
 6655 0ecf 20       		.uleb128 0x20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 148


 6656 0ed0 37020000 		.4byte	.LASF220
 6657 0ed4 07       		.byte	0x7
 6658 0ed5 4A01     		.2byte	0x14a
 6659 0ed7 99000000 		.4byte	0x99
 6660 0edb 20       		.uleb128 0x20
 6661 0edc EC060000 		.4byte	.LASF221
 6662 0ee0 07       		.byte	0x7
 6663 0ee1 4B01     		.2byte	0x14b
 6664 0ee3 99000000 		.4byte	0x99
 6665 0ee7 20       		.uleb128 0x20
 6666 0ee8 2F090000 		.4byte	.LASF222
 6667 0eec 07       		.byte	0x7
 6668 0eed 4C01     		.2byte	0x14c
 6669 0eef D5000000 		.4byte	0xd5
 6670 0ef3 20       		.uleb128 0x20
 6671 0ef4 A5090000 		.4byte	.LASF223
 6672 0ef8 07       		.byte	0x7
 6673 0ef9 4E01     		.2byte	0x14e
 6674 0efb BD000000 		.4byte	0xbd
 6675 0eff 20       		.uleb128 0x20
 6676 0f00 1B0B0000 		.4byte	.LASF224
 6677 0f04 07       		.byte	0x7
 6678 0f05 4F01     		.2byte	0x14f
 6679 0f07 81000000 		.4byte	0x81
 6680 0f0b 20       		.uleb128 0x20
 6681 0f0c B40A0000 		.4byte	.LASF225
 6682 0f10 07       		.byte	0x7
 6683 0f11 5001     		.2byte	0x150
 6684 0f13 81000000 		.4byte	0x81
 6685 0f17 20       		.uleb128 0x20
 6686 0f18 73040000 		.4byte	.LASF226
 6687 0f1c 07       		.byte	0x7
 6688 0f1d 5101     		.2byte	0x151
 6689 0f1f BD000000 		.4byte	0xbd
 6690 0f23 20       		.uleb128 0x20
 6691 0f24 E7040000 		.4byte	.LASF227
 6692 0f28 07       		.byte	0x7
 6693 0f29 5401     		.2byte	0x154
 6694 0f2b 67070000 		.4byte	0x767
 6695 0f2f 20       		.uleb128 0x20
 6696 0f30 B3030000 		.4byte	.LASF228
 6697 0f34 07       		.byte	0x7
 6698 0f35 5501     		.2byte	0x155
 6699 0f37 2F070000 		.4byte	0x72f
 6700 0f3b 20       		.uleb128 0x20
 6701 0f3c 1A030000 		.4byte	.LASF229
 6702 0f40 07       		.byte	0x7
 6703 0f41 5601     		.2byte	0x156
 6704 0f43 2F070000 		.4byte	0x72f
 6705 0f47 20       		.uleb128 0x20
 6706 0f48 E9050000 		.4byte	.LASF230
 6707 0f4c 07       		.byte	0x7
 6708 0f4d 5A01     		.2byte	0x15a
 6709 0f4f 81000000 		.4byte	0x81
 6710 0f53 20       		.uleb128 0x20
 6711 0f54 FA000000 		.4byte	.LASF231
 6712 0f58 07       		.byte	0x7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 149


 6713 0f59 5B01     		.2byte	0x15b
 6714 0f5b 81000000 		.4byte	0x81
 6715 0f5f 20       		.uleb128 0x20
 6716 0f60 2F030000 		.4byte	.LASF232
 6717 0f64 07       		.byte	0x7
 6718 0f65 5C01     		.2byte	0x15c
 6719 0f67 81000000 		.4byte	0x81
 6720 0f6b 20       		.uleb128 0x20
 6721 0f6c 0E010000 		.4byte	.LASF233
 6722 0f70 07       		.byte	0x7
 6723 0f71 5D01     		.2byte	0x15d
 6724 0f73 81000000 		.4byte	0x81
 6725 0f77 20       		.uleb128 0x20
 6726 0f78 F20B0000 		.4byte	.LASF234
 6727 0f7c 07       		.byte	0x7
 6728 0f7d 5F01     		.2byte	0x15f
 6729 0f7f 81000000 		.4byte	0x81
 6730 0f83 20       		.uleb128 0x20
 6731 0f84 B0080000 		.4byte	.LASF235
 6732 0f88 07       		.byte	0x7
 6733 0f89 6001     		.2byte	0x160
 6734 0f8b 81000000 		.4byte	0x81
 6735 0f8f 20       		.uleb128 0x20
 6736 0f90 90030000 		.4byte	.LASF236
 6737 0f94 07       		.byte	0x7
 6738 0f95 6101     		.2byte	0x161
 6739 0f97 81000000 		.4byte	0x81
 6740 0f9b 20       		.uleb128 0x20
 6741 0f9c 7F080000 		.4byte	.LASF237
 6742 0fa0 07       		.byte	0x7
 6743 0fa1 6201     		.2byte	0x162
 6744 0fa3 81000000 		.4byte	0x81
 6745 0fa7 0E       		.uleb128 0xe
 6746 0fa8 B1000000 		.4byte	0xb1
 6747 0fac B70F0000 		.4byte	0xfb7
 6748 0fb0 0F       		.uleb128 0xf
 6749 0fb1 0E010000 		.4byte	0x10e
 6750 0fb5 03       		.byte	0x3
 6751 0fb6 00       		.byte	0
 6752 0fb7 20       		.uleb128 0x20
 6753 0fb8 27030000 		.4byte	.LASF238
 6754 0fbc 07       		.byte	0x7
 6755 0fbd 6601     		.2byte	0x166
 6756 0fbf A70F0000 		.4byte	0xfa7
 6757 0fc3 20       		.uleb128 0x20
 6758 0fc4 E5030000 		.4byte	.LASF239
 6759 0fc8 07       		.byte	0x7
 6760 0fc9 6A01     		.2byte	0x16a
 6761 0fcb A5000000 		.4byte	0xa5
 6762 0fcf 20       		.uleb128 0x20
 6763 0fd0 BB070000 		.4byte	.LASF240
 6764 0fd4 07       		.byte	0x7
 6765 0fd5 6E01     		.2byte	0x16e
 6766 0fd7 BD000000 		.4byte	0xbd
 6767 0fdb 20       		.uleb128 0x20
 6768 0fdc 5F040000 		.4byte	.LASF241
 6769 0fe0 07       		.byte	0x7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 150


 6770 0fe1 7101     		.2byte	0x171
 6771 0fe3 83010000 		.4byte	0x183
 6772 0fe7 20       		.uleb128 0x20
 6773 0fe8 9D020000 		.4byte	.LASF242
 6774 0fec 07       		.byte	0x7
 6775 0fed 7201     		.2byte	0x172
 6776 0fef 53000000 		.4byte	0x53
 6777 0ff3 0E       		.uleb128 0xe
 6778 0ff4 17060000 		.4byte	0x617
 6779 0ff8 03100000 		.4byte	0x1003
 6780 0ffc 0F       		.uleb128 0xf
 6781 0ffd 0E010000 		.4byte	0x10e
 6782 1001 02       		.byte	0x2
 6783 1002 00       		.byte	0
 6784 1003 20       		.uleb128 0x20
 6785 1004 51050000 		.4byte	.LASF243
 6786 1008 07       		.byte	0x7
 6787 1009 7901     		.2byte	0x179
 6788 100b F30F0000 		.4byte	0xff3
 6789 100f 20       		.uleb128 0x20
 6790 1010 A5040000 		.4byte	.LASF244
 6791 1014 07       		.byte	0x7
 6792 1015 7901     		.2byte	0x179
 6793 1017 F30F0000 		.4byte	0xff3
 6794 101b 00       		.byte	0
 6795              		.section	.debug_abbrev,"",%progbits
 6796              	.Ldebug_abbrev0:
 6797 0000 01       		.uleb128 0x1
 6798 0001 11       		.uleb128 0x11
 6799 0002 01       		.byte	0x1
 6800 0003 25       		.uleb128 0x25
 6801 0004 0E       		.uleb128 0xe
 6802 0005 13       		.uleb128 0x13
 6803 0006 0B       		.uleb128 0xb
 6804 0007 03       		.uleb128 0x3
 6805 0008 0E       		.uleb128 0xe
 6806 0009 1B       		.uleb128 0x1b
 6807 000a 0E       		.uleb128 0xe
 6808 000b 55       		.uleb128 0x55
 6809 000c 17       		.uleb128 0x17
 6810 000d 11       		.uleb128 0x11
 6811 000e 01       		.uleb128 0x1
 6812 000f 10       		.uleb128 0x10
 6813 0010 17       		.uleb128 0x17
 6814 0011 00       		.byte	0
 6815 0012 00       		.byte	0
 6816 0013 02       		.uleb128 0x2
 6817 0014 24       		.uleb128 0x24
 6818 0015 00       		.byte	0
 6819 0016 0B       		.uleb128 0xb
 6820 0017 0B       		.uleb128 0xb
 6821 0018 3E       		.uleb128 0x3e
 6822 0019 0B       		.uleb128 0xb
 6823 001a 03       		.uleb128 0x3
 6824 001b 0E       		.uleb128 0xe
 6825 001c 00       		.byte	0
 6826 001d 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 151


 6827 001e 03       		.uleb128 0x3
 6828 001f 16       		.uleb128 0x16
 6829 0020 00       		.byte	0
 6830 0021 03       		.uleb128 0x3
 6831 0022 0E       		.uleb128 0xe
 6832 0023 3A       		.uleb128 0x3a
 6833 0024 0B       		.uleb128 0xb
 6834 0025 3B       		.uleb128 0x3b
 6835 0026 0B       		.uleb128 0xb
 6836 0027 49       		.uleb128 0x49
 6837 0028 13       		.uleb128 0x13
 6838 0029 00       		.byte	0
 6839 002a 00       		.byte	0
 6840 002b 04       		.uleb128 0x4
 6841 002c 24       		.uleb128 0x24
 6842 002d 00       		.byte	0
 6843 002e 0B       		.uleb128 0xb
 6844 002f 0B       		.uleb128 0xb
 6845 0030 3E       		.uleb128 0x3e
 6846 0031 0B       		.uleb128 0xb
 6847 0032 03       		.uleb128 0x3
 6848 0033 08       		.uleb128 0x8
 6849 0034 00       		.byte	0
 6850 0035 00       		.byte	0
 6851 0036 05       		.uleb128 0x5
 6852 0037 16       		.uleb128 0x16
 6853 0038 00       		.byte	0
 6854 0039 03       		.uleb128 0x3
 6855 003a 0E       		.uleb128 0xe
 6856 003b 3A       		.uleb128 0x3a
 6857 003c 0B       		.uleb128 0xb
 6858 003d 3B       		.uleb128 0x3b
 6859 003e 05       		.uleb128 0x5
 6860 003f 49       		.uleb128 0x49
 6861 0040 13       		.uleb128 0x13
 6862 0041 00       		.byte	0
 6863 0042 00       		.byte	0
 6864 0043 06       		.uleb128 0x6
 6865 0044 35       		.uleb128 0x35
 6866 0045 00       		.byte	0
 6867 0046 49       		.uleb128 0x49
 6868 0047 13       		.uleb128 0x13
 6869 0048 00       		.byte	0
 6870 0049 00       		.byte	0
 6871 004a 07       		.uleb128 0x7
 6872 004b 04       		.uleb128 0x4
 6873 004c 01       		.byte	0x1
 6874 004d 03       		.uleb128 0x3
 6875 004e 0E       		.uleb128 0xe
 6876 004f 0B       		.uleb128 0xb
 6877 0050 0B       		.uleb128 0xb
 6878 0051 49       		.uleb128 0x49
 6879 0052 13       		.uleb128 0x13
 6880 0053 3A       		.uleb128 0x3a
 6881 0054 0B       		.uleb128 0xb
 6882 0055 3B       		.uleb128 0x3b
 6883 0056 0B       		.uleb128 0xb
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 152


 6884 0057 01       		.uleb128 0x1
 6885 0058 13       		.uleb128 0x13
 6886 0059 00       		.byte	0
 6887 005a 00       		.byte	0
 6888 005b 08       		.uleb128 0x8
 6889 005c 28       		.uleb128 0x28
 6890 005d 00       		.byte	0
 6891 005e 03       		.uleb128 0x3
 6892 005f 0E       		.uleb128 0xe
 6893 0060 1C       		.uleb128 0x1c
 6894 0061 0B       		.uleb128 0xb
 6895 0062 00       		.byte	0
 6896 0063 00       		.byte	0
 6897 0064 09       		.uleb128 0x9
 6898 0065 13       		.uleb128 0x13
 6899 0066 00       		.byte	0
 6900 0067 03       		.uleb128 0x3
 6901 0068 0E       		.uleb128 0xe
 6902 0069 3C       		.uleb128 0x3c
 6903 006a 19       		.uleb128 0x19
 6904 006b 00       		.byte	0
 6905 006c 00       		.byte	0
 6906 006d 0A       		.uleb128 0xa
 6907 006e 0F       		.uleb128 0xf
 6908 006f 00       		.byte	0
 6909 0070 0B       		.uleb128 0xb
 6910 0071 0B       		.uleb128 0xb
 6911 0072 49       		.uleb128 0x49
 6912 0073 13       		.uleb128 0x13
 6913 0074 00       		.byte	0
 6914 0075 00       		.byte	0
 6915 0076 0B       		.uleb128 0xb
 6916 0077 13       		.uleb128 0x13
 6917 0078 01       		.byte	0x1
 6918 0079 03       		.uleb128 0x3
 6919 007a 0E       		.uleb128 0xe
 6920 007b 0B       		.uleb128 0xb
 6921 007c 0B       		.uleb128 0xb
 6922 007d 3A       		.uleb128 0x3a
 6923 007e 0B       		.uleb128 0xb
 6924 007f 3B       		.uleb128 0x3b
 6925 0080 0B       		.uleb128 0xb
 6926 0081 01       		.uleb128 0x1
 6927 0082 13       		.uleb128 0x13
 6928 0083 00       		.byte	0
 6929 0084 00       		.byte	0
 6930 0085 0C       		.uleb128 0xc
 6931 0086 0D       		.uleb128 0xd
 6932 0087 00       		.byte	0
 6933 0088 03       		.uleb128 0x3
 6934 0089 08       		.uleb128 0x8
 6935 008a 3A       		.uleb128 0x3a
 6936 008b 0B       		.uleb128 0xb
 6937 008c 3B       		.uleb128 0x3b
 6938 008d 0B       		.uleb128 0xb
 6939 008e 49       		.uleb128 0x49
 6940 008f 13       		.uleb128 0x13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 153


 6941 0090 38       		.uleb128 0x38
 6942 0091 0B       		.uleb128 0xb
 6943 0092 00       		.byte	0
 6944 0093 00       		.byte	0
 6945 0094 0D       		.uleb128 0xd
 6946 0095 0D       		.uleb128 0xd
 6947 0096 00       		.byte	0
 6948 0097 03       		.uleb128 0x3
 6949 0098 0E       		.uleb128 0xe
 6950 0099 3A       		.uleb128 0x3a
 6951 009a 0B       		.uleb128 0xb
 6952 009b 3B       		.uleb128 0x3b
 6953 009c 0B       		.uleb128 0xb
 6954 009d 49       		.uleb128 0x49
 6955 009e 13       		.uleb128 0x13
 6956 009f 38       		.uleb128 0x38
 6957 00a0 0B       		.uleb128 0xb
 6958 00a1 00       		.byte	0
 6959 00a2 00       		.byte	0
 6960 00a3 0E       		.uleb128 0xe
 6961 00a4 01       		.uleb128 0x1
 6962 00a5 01       		.byte	0x1
 6963 00a6 49       		.uleb128 0x49
 6964 00a7 13       		.uleb128 0x13
 6965 00a8 01       		.uleb128 0x1
 6966 00a9 13       		.uleb128 0x13
 6967 00aa 00       		.byte	0
 6968 00ab 00       		.byte	0
 6969 00ac 0F       		.uleb128 0xf
 6970 00ad 21       		.uleb128 0x21
 6971 00ae 00       		.byte	0
 6972 00af 49       		.uleb128 0x49
 6973 00b0 13       		.uleb128 0x13
 6974 00b1 2F       		.uleb128 0x2f
 6975 00b2 0B       		.uleb128 0xb
 6976 00b3 00       		.byte	0
 6977 00b4 00       		.byte	0
 6978 00b5 10       		.uleb128 0x10
 6979 00b6 13       		.uleb128 0x13
 6980 00b7 01       		.byte	0x1
 6981 00b8 03       		.uleb128 0x3
 6982 00b9 0E       		.uleb128 0xe
 6983 00ba 0B       		.uleb128 0xb
 6984 00bb 05       		.uleb128 0x5
 6985 00bc 3A       		.uleb128 0x3a
 6986 00bd 0B       		.uleb128 0xb
 6987 00be 3B       		.uleb128 0x3b
 6988 00bf 0B       		.uleb128 0xb
 6989 00c0 01       		.uleb128 0x1
 6990 00c1 13       		.uleb128 0x13
 6991 00c2 00       		.byte	0
 6992 00c3 00       		.byte	0
 6993 00c4 11       		.uleb128 0x11
 6994 00c5 0D       		.uleb128 0xd
 6995 00c6 00       		.byte	0
 6996 00c7 03       		.uleb128 0x3
 6997 00c8 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 154


 6998 00c9 3A       		.uleb128 0x3a
 6999 00ca 0B       		.uleb128 0xb
 7000 00cb 3B       		.uleb128 0x3b
 7001 00cc 05       		.uleb128 0x5
 7002 00cd 49       		.uleb128 0x49
 7003 00ce 13       		.uleb128 0x13
 7004 00cf 38       		.uleb128 0x38
 7005 00d0 05       		.uleb128 0x5
 7006 00d1 00       		.byte	0
 7007 00d2 00       		.byte	0
 7008 00d3 12       		.uleb128 0x12
 7009 00d4 13       		.uleb128 0x13
 7010 00d5 01       		.byte	0x1
 7011 00d6 03       		.uleb128 0x3
 7012 00d7 0E       		.uleb128 0xe
 7013 00d8 0B       		.uleb128 0xb
 7014 00d9 0B       		.uleb128 0xb
 7015 00da 3A       		.uleb128 0x3a
 7016 00db 0B       		.uleb128 0xb
 7017 00dc 3B       		.uleb128 0x3b
 7018 00dd 05       		.uleb128 0x5
 7019 00de 01       		.uleb128 0x1
 7020 00df 13       		.uleb128 0x13
 7021 00e0 00       		.byte	0
 7022 00e1 00       		.byte	0
 7023 00e2 13       		.uleb128 0x13
 7024 00e3 0D       		.uleb128 0xd
 7025 00e4 00       		.byte	0
 7026 00e5 03       		.uleb128 0x3
 7027 00e6 0E       		.uleb128 0xe
 7028 00e7 3A       		.uleb128 0x3a
 7029 00e8 0B       		.uleb128 0xb
 7030 00e9 3B       		.uleb128 0x3b
 7031 00ea 05       		.uleb128 0x5
 7032 00eb 49       		.uleb128 0x49
 7033 00ec 13       		.uleb128 0x13
 7034 00ed 38       		.uleb128 0x38
 7035 00ee 0B       		.uleb128 0xb
 7036 00ef 00       		.byte	0
 7037 00f0 00       		.byte	0
 7038 00f1 14       		.uleb128 0x14
 7039 00f2 04       		.uleb128 0x4
 7040 00f3 01       		.byte	0x1
 7041 00f4 0B       		.uleb128 0xb
 7042 00f5 0B       		.uleb128 0xb
 7043 00f6 49       		.uleb128 0x49
 7044 00f7 13       		.uleb128 0x13
 7045 00f8 3A       		.uleb128 0x3a
 7046 00f9 0B       		.uleb128 0xb
 7047 00fa 3B       		.uleb128 0x3b
 7048 00fb 05       		.uleb128 0x5
 7049 00fc 01       		.uleb128 0x1
 7050 00fd 13       		.uleb128 0x13
 7051 00fe 00       		.byte	0
 7052 00ff 00       		.byte	0
 7053 0100 15       		.uleb128 0x15
 7054 0101 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 155


 7055 0102 00       		.byte	0
 7056 0103 3F       		.uleb128 0x3f
 7057 0104 19       		.uleb128 0x19
 7058 0105 03       		.uleb128 0x3
 7059 0106 0E       		.uleb128 0xe
 7060 0107 3A       		.uleb128 0x3a
 7061 0108 0B       		.uleb128 0xb
 7062 0109 3B       		.uleb128 0x3b
 7063 010a 0B       		.uleb128 0xb
 7064 010b 27       		.uleb128 0x27
 7065 010c 19       		.uleb128 0x19
 7066 010d 11       		.uleb128 0x11
 7067 010e 01       		.uleb128 0x1
 7068 010f 12       		.uleb128 0x12
 7069 0110 06       		.uleb128 0x6
 7070 0111 40       		.uleb128 0x40
 7071 0112 18       		.uleb128 0x18
 7072 0113 9742     		.uleb128 0x2117
 7073 0115 19       		.uleb128 0x19
 7074 0116 00       		.byte	0
 7075 0117 00       		.byte	0
 7076 0118 16       		.uleb128 0x16
 7077 0119 2E       		.uleb128 0x2e
 7078 011a 01       		.byte	0x1
 7079 011b 3F       		.uleb128 0x3f
 7080 011c 19       		.uleb128 0x19
 7081 011d 03       		.uleb128 0x3
 7082 011e 0E       		.uleb128 0xe
 7083 011f 3A       		.uleb128 0x3a
 7084 0120 0B       		.uleb128 0xb
 7085 0121 3B       		.uleb128 0x3b
 7086 0122 0B       		.uleb128 0xb
 7087 0123 11       		.uleb128 0x11
 7088 0124 01       		.uleb128 0x1
 7089 0125 12       		.uleb128 0x12
 7090 0126 06       		.uleb128 0x6
 7091 0127 40       		.uleb128 0x40
 7092 0128 18       		.uleb128 0x18
 7093 0129 9642     		.uleb128 0x2116
 7094 012b 19       		.uleb128 0x19
 7095 012c 01       		.uleb128 0x1
 7096 012d 13       		.uleb128 0x13
 7097 012e 00       		.byte	0
 7098 012f 00       		.byte	0
 7099 0130 17       		.uleb128 0x17
 7100 0131 34       		.uleb128 0x34
 7101 0132 00       		.byte	0
 7102 0133 03       		.uleb128 0x3
 7103 0134 0E       		.uleb128 0xe
 7104 0135 3A       		.uleb128 0x3a
 7105 0136 0B       		.uleb128 0xb
 7106 0137 3B       		.uleb128 0x3b
 7107 0138 0B       		.uleb128 0xb
 7108 0139 49       		.uleb128 0x49
 7109 013a 13       		.uleb128 0x13
 7110 013b 02       		.uleb128 0x2
 7111 013c 18       		.uleb128 0x18
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 156


 7112 013d 00       		.byte	0
 7113 013e 00       		.byte	0
 7114 013f 18       		.uleb128 0x18
 7115 0140 2E       		.uleb128 0x2e
 7116 0141 01       		.byte	0x1
 7117 0142 3F       		.uleb128 0x3f
 7118 0143 19       		.uleb128 0x19
 7119 0144 03       		.uleb128 0x3
 7120 0145 0E       		.uleb128 0xe
 7121 0146 3A       		.uleb128 0x3a
 7122 0147 0B       		.uleb128 0xb
 7123 0148 3B       		.uleb128 0x3b
 7124 0149 05       		.uleb128 0x5
 7125 014a 27       		.uleb128 0x27
 7126 014b 19       		.uleb128 0x19
 7127 014c 11       		.uleb128 0x11
 7128 014d 01       		.uleb128 0x1
 7129 014e 12       		.uleb128 0x12
 7130 014f 06       		.uleb128 0x6
 7131 0150 40       		.uleb128 0x40
 7132 0151 18       		.uleb128 0x18
 7133 0152 9642     		.uleb128 0x2116
 7134 0154 19       		.uleb128 0x19
 7135 0155 01       		.uleb128 0x1
 7136 0156 13       		.uleb128 0x13
 7137 0157 00       		.byte	0
 7138 0158 00       		.byte	0
 7139 0159 19       		.uleb128 0x19
 7140 015a 34       		.uleb128 0x34
 7141 015b 00       		.byte	0
 7142 015c 03       		.uleb128 0x3
 7143 015d 0E       		.uleb128 0xe
 7144 015e 3A       		.uleb128 0x3a
 7145 015f 0B       		.uleb128 0xb
 7146 0160 3B       		.uleb128 0x3b
 7147 0161 05       		.uleb128 0x5
 7148 0162 49       		.uleb128 0x49
 7149 0163 13       		.uleb128 0x13
 7150 0164 02       		.uleb128 0x2
 7151 0165 18       		.uleb128 0x18
 7152 0166 00       		.byte	0
 7153 0167 00       		.byte	0
 7154 0168 1A       		.uleb128 0x1a
 7155 0169 21       		.uleb128 0x21
 7156 016a 00       		.byte	0
 7157 016b 49       		.uleb128 0x49
 7158 016c 13       		.uleb128 0x13
 7159 016d 2F       		.uleb128 0x2f
 7160 016e 05       		.uleb128 0x5
 7161 016f 00       		.byte	0
 7162 0170 00       		.byte	0
 7163 0171 1B       		.uleb128 0x1b
 7164 0172 2E       		.uleb128 0x2e
 7165 0173 01       		.byte	0x1
 7166 0174 3F       		.uleb128 0x3f
 7167 0175 19       		.uleb128 0x19
 7168 0176 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 157


 7169 0177 0E       		.uleb128 0xe
 7170 0178 3A       		.uleb128 0x3a
 7171 0179 0B       		.uleb128 0xb
 7172 017a 3B       		.uleb128 0x3b
 7173 017b 05       		.uleb128 0x5
 7174 017c 11       		.uleb128 0x11
 7175 017d 01       		.uleb128 0x1
 7176 017e 12       		.uleb128 0x12
 7177 017f 06       		.uleb128 0x6
 7178 0180 40       		.uleb128 0x40
 7179 0181 18       		.uleb128 0x18
 7180 0182 9642     		.uleb128 0x2116
 7181 0184 19       		.uleb128 0x19
 7182 0185 01       		.uleb128 0x1
 7183 0186 13       		.uleb128 0x13
 7184 0187 00       		.byte	0
 7185 0188 00       		.byte	0
 7186 0189 1C       		.uleb128 0x1c
 7187 018a 34       		.uleb128 0x34
 7188 018b 00       		.byte	0
 7189 018c 03       		.uleb128 0x3
 7190 018d 08       		.uleb128 0x8
 7191 018e 3A       		.uleb128 0x3a
 7192 018f 0B       		.uleb128 0xb
 7193 0190 3B       		.uleb128 0x3b
 7194 0191 05       		.uleb128 0x5
 7195 0192 49       		.uleb128 0x49
 7196 0193 13       		.uleb128 0x13
 7197 0194 02       		.uleb128 0x2
 7198 0195 18       		.uleb128 0x18
 7199 0196 00       		.byte	0
 7200 0197 00       		.byte	0
 7201 0198 1D       		.uleb128 0x1d
 7202 0199 2E       		.uleb128 0x2e
 7203 019a 00       		.byte	0
 7204 019b 3F       		.uleb128 0x3f
 7205 019c 19       		.uleb128 0x19
 7206 019d 03       		.uleb128 0x3
 7207 019e 0E       		.uleb128 0xe
 7208 019f 3A       		.uleb128 0x3a
 7209 01a0 0B       		.uleb128 0xb
 7210 01a1 3B       		.uleb128 0x3b
 7211 01a2 05       		.uleb128 0x5
 7212 01a3 11       		.uleb128 0x11
 7213 01a4 01       		.uleb128 0x1
 7214 01a5 12       		.uleb128 0x12
 7215 01a6 06       		.uleb128 0x6
 7216 01a7 40       		.uleb128 0x40
 7217 01a8 18       		.uleb128 0x18
 7218 01a9 9742     		.uleb128 0x2117
 7219 01ab 19       		.uleb128 0x19
 7220 01ac 00       		.byte	0
 7221 01ad 00       		.byte	0
 7222 01ae 1E       		.uleb128 0x1e
 7223 01af 2E       		.uleb128 0x2e
 7224 01b0 01       		.byte	0x1
 7225 01b1 3F       		.uleb128 0x3f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 158


 7226 01b2 19       		.uleb128 0x19
 7227 01b3 03       		.uleb128 0x3
 7228 01b4 0E       		.uleb128 0xe
 7229 01b5 3A       		.uleb128 0x3a
 7230 01b6 0B       		.uleb128 0xb
 7231 01b7 3B       		.uleb128 0x3b
 7232 01b8 05       		.uleb128 0x5
 7233 01b9 11       		.uleb128 0x11
 7234 01ba 01       		.uleb128 0x1
 7235 01bb 12       		.uleb128 0x12
 7236 01bc 06       		.uleb128 0x6
 7237 01bd 40       		.uleb128 0x40
 7238 01be 18       		.uleb128 0x18
 7239 01bf 9742     		.uleb128 0x2117
 7240 01c1 19       		.uleb128 0x19
 7241 01c2 01       		.uleb128 0x1
 7242 01c3 13       		.uleb128 0x13
 7243 01c4 00       		.byte	0
 7244 01c5 00       		.byte	0
 7245 01c6 1F       		.uleb128 0x1f
 7246 01c7 26       		.uleb128 0x26
 7247 01c8 00       		.byte	0
 7248 01c9 49       		.uleb128 0x49
 7249 01ca 13       		.uleb128 0x13
 7250 01cb 00       		.byte	0
 7251 01cc 00       		.byte	0
 7252 01cd 20       		.uleb128 0x20
 7253 01ce 34       		.uleb128 0x34
 7254 01cf 00       		.byte	0
 7255 01d0 03       		.uleb128 0x3
 7256 01d1 0E       		.uleb128 0xe
 7257 01d2 3A       		.uleb128 0x3a
 7258 01d3 0B       		.uleb128 0xb
 7259 01d4 3B       		.uleb128 0x3b
 7260 01d5 05       		.uleb128 0x5
 7261 01d6 49       		.uleb128 0x49
 7262 01d7 13       		.uleb128 0x13
 7263 01d8 3F       		.uleb128 0x3f
 7264 01d9 19       		.uleb128 0x19
 7265 01da 3C       		.uleb128 0x3c
 7266 01db 19       		.uleb128 0x19
 7267 01dc 00       		.byte	0
 7268 01dd 00       		.byte	0
 7269 01de 00       		.byte	0
 7270              		.section	.debug_aranges,"",%progbits
 7271 0000 6C000000 		.4byte	0x6c
 7272 0004 0200     		.2byte	0x2
 7273 0006 00000000 		.4byte	.Ldebug_info0
 7274 000a 04       		.byte	0x4
 7275 000b 00       		.byte	0
 7276 000c 0000     		.2byte	0
 7277 000e 0000     		.2byte	0
 7278 0010 00000000 		.4byte	.LFB64
 7279 0014 18000000 		.4byte	.LFE64-.LFB64
 7280 0018 00000000 		.4byte	.LFB65
 7281 001c 20000000 		.4byte	.LFE65-.LFB65
 7282 0020 00000000 		.4byte	.LFB66
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 159


 7283 0024 F4010000 		.4byte	.LFE66-.LFB66
 7284 0028 00000000 		.4byte	.LFB67
 7285 002c 38040000 		.4byte	.LFE67-.LFB67
 7286 0030 00000000 		.4byte	.LFB68
 7287 0034 4C080000 		.4byte	.LFE68-.LFB68
 7288 0038 00000000 		.4byte	.LFB69
 7289 003c 94040000 		.4byte	.LFE69-.LFB69
 7290 0040 00000000 		.4byte	.LFB70
 7291 0044 08070000 		.4byte	.LFE70-.LFB70
 7292 0048 00000000 		.4byte	.LFB71
 7293 004c 74000000 		.4byte	.LFE71-.LFB71
 7294 0050 00000000 		.4byte	.LFB72
 7295 0054 64000000 		.4byte	.LFE72-.LFB72
 7296 0058 00000000 		.4byte	.LFB73
 7297 005c F4020000 		.4byte	.LFE73-.LFB73
 7298 0060 00000000 		.4byte	.LFB74
 7299 0064 08010000 		.4byte	.LFE74-.LFB74
 7300 0068 00000000 		.4byte	0
 7301 006c 00000000 		.4byte	0
 7302              		.section	.debug_ranges,"",%progbits
 7303              	.Ldebug_ranges0:
 7304 0000 00000000 		.4byte	.LFB64
 7305 0004 18000000 		.4byte	.LFE64
 7306 0008 00000000 		.4byte	.LFB65
 7307 000c 20000000 		.4byte	.LFE65
 7308 0010 00000000 		.4byte	.LFB66
 7309 0014 F4010000 		.4byte	.LFE66
 7310 0018 00000000 		.4byte	.LFB67
 7311 001c 38040000 		.4byte	.LFE67
 7312 0020 00000000 		.4byte	.LFB68
 7313 0024 4C080000 		.4byte	.LFE68
 7314 0028 00000000 		.4byte	.LFB69
 7315 002c 94040000 		.4byte	.LFE69
 7316 0030 00000000 		.4byte	.LFB70
 7317 0034 08070000 		.4byte	.LFE70
 7318 0038 00000000 		.4byte	.LFB71
 7319 003c 74000000 		.4byte	.LFE71
 7320 0040 00000000 		.4byte	.LFB72
 7321 0044 64000000 		.4byte	.LFE72
 7322 0048 00000000 		.4byte	.LFB73
 7323 004c F4020000 		.4byte	.LFE73
 7324 0050 00000000 		.4byte	.LFB74
 7325 0054 08010000 		.4byte	.LFE74
 7326 0058 00000000 		.4byte	0
 7327 005c 00000000 		.4byte	0
 7328              		.section	.debug_line,"",%progbits
 7329              	.Ldebug_line0:
 7330 0000 9A060000 		.section	.debug_str,"MS",%progbits,1
 7330      0200A801 
 7330      00000201 
 7330      FB0E0D00 
 7330      01010101 
 7331              	.LASF24:
 7332 0000 73697A65 		.ascii	"sizetype\000"
 7332      74797065 
 7332      00
 7333              	.LASF183:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 160


 7334 0009 706F735F 		.ascii	"pos_cycle_status\000"
 7334      6379636C 
 7334      655F7374 
 7334      61747573 
 7334      00
 7335              	.LASF30:
 7336 001a 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 7336      545F4D4F 
 7336      44455F45 
 7336      4D475F46 
 7336      4346535F 
 7337              	.LASF144:
 7338 0032 70776D5F 		.ascii	"pwm_input\000"
 7338      696E7075 
 7338      7400
 7339              	.LASF180:
 7340 003c 6D61785F 		.ascii	"max_tension\000"
 7340      74656E73 
 7340      696F6E00 
 7341              	.LASF10:
 7342 0048 696E7433 		.ascii	"int32_t\000"
 7342      325F7400 
 7343              	.LASF210:
 7344 0050 675F7278 		.ascii	"g_rx\000"
 7344      00
 7345              	.LASF166:
 7346 0055 6F6E655F 		.ascii	"one_time_execute\000"
 7346      74696D65 
 7346      5F657865 
 7346      63757465 
 7346      00
 7347              	.LASF43:
 7348 0066 73745F64 		.ascii	"st_data\000"
 7348      61746100 
 7349              	.LASF13:
 7350 006e 75696E74 		.ascii	"uint32\000"
 7350      333200
 7351              	.LASF247:
 7352 0075 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Dropbox (workgroup)\\Personal\\"
 7352      73657273 
 7352      5C4D6174 
 7352      74696143 
 7352      505C4472 
 7353 00a4 4D617474 		.ascii	"Mattia Poggiani\\FIRMWARES (local)\\SoftPro firmwar"
 7353      69612050 
 7353      6F676769 
 7353      616E695C 
 7353      4649524D 
 7354 00d5 65202850 		.ascii	"e (PSoC5)\\firmware.cydsn\000"
 7354      536F4335 
 7354      295C6669 
 7354      726D7761 
 7354      72652E63 
 7355              	.LASF64:
 7356 00ee 706F735F 		.ascii	"pos_lim_inf\000"
 7356      6C696D5F 
 7356      696E6600 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 161


 7357              	.LASF231:
 7358 00fa 74656E73 		.ascii	"tension_valid\000"
 7358      696F6E5F 
 7358      76616C69 
 7358      6400
 7359              	.LASF129:
 7360 0108 73746174 		.ascii	"state\000"
 7360      6500
 7361              	.LASF233:
 7362 010e 6379636C 		.ascii	"cycles_interrupt_flag\000"
 7362      65735F69 
 7362      6E746572 
 7362      72757074 
 7362      5F666C61 
 7363              	.LASF190:
 7364 0124 62696E5F 		.ascii	"bin_max\000"
 7364      6D617800 
 7365              	.LASF200:
 7366 012c 61646472 		.ascii	"addr_start_c\000"
 7366      5F737461 
 7366      72745F63 
 7366      00
 7367              	.LASF29:
 7368 0139 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 7368      545F4D4F 
 7368      44455F45 
 7368      4D475F46 
 7368      43465300 
 7369              	.LASF76:
 7370 014d 63757272 		.ascii	"curr_lookup\000"
 7370      5F6C6F6F 
 7370      6B757000 
 7371              	.LASF145:
 7372 0159 706F735F 		.ascii	"pos_error\000"
 7372      6572726F 
 7372      7200
 7373              	.LASF91:
 7374 0163 72657374 		.ascii	"rest_counter\000"
 7374      5F636F75 
 7374      6E746572 
 7374      00
 7375              	.LASF28:
 7376 0170 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 7376      545F4D4F 
 7376      44455F45 
 7376      4D475F49 
 7376      4E544547 
 7377              	.LASF178:
 7378 0188 765F636F 		.ascii	"v_count\000"
 7378      756E7400 
 7379              	.LASF134:
 7380 0190 72785F64 		.ascii	"rx_data\000"
 7380      61746100 
 7381              	.LASF170:
 7382 0198 7676765F 		.ascii	"vvv_value\000"
 7382      76616C75 
 7382      6500
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 162


 7383              	.LASF14:
 7384 01a2 696E7438 		.ascii	"int8\000"
 7384      00
 7385              	.LASF141:
 7386 01a7 696E666F 		.ascii	"info_\000"
 7386      5F00
 7387              	.LASF120:
 7388 01ad 656D675F 		.ascii	"emg_status\000"
 7388      73746174 
 7388      757300
 7389              	.LASF162:
 7390 01b8 696E6974 		.ascii	"init_rot\000"
 7390      5F726F74 
 7390      00
 7391              	.LASF89:
 7392 01c1 706F7369 		.ascii	"position_hist\000"
 7392      74696F6E 
 7392      5F686973 
 7392      7400
 7393              	.LASF121:
 7394 01cf 50524550 		.ascii	"PREPARE_DATA\000"
 7394      4152455F 
 7394      44415441 
 7394      00
 7395              	.LASF105:
 7396 01dc 74656D70 		.ascii	"temp_value\000"
 7396      5F76616C 
 7396      756500
 7397              	.LASF187:
 7398 01e7 7468725F 		.ascii	"thr_pos\000"
 7398      706F7300 
 7399              	.LASF46:
 7400 01ef 72656164 		.ascii	"ready\000"
 7400      7900
 7401              	.LASF108:
 7402 01f5 6761696E 		.ascii	"gain\000"
 7402      00
 7403              	.LASF27:
 7404 01fa 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 7404      545F4D4F 
 7404      44455F45 
 7404      4D475F50 
 7404      524F504F 
 7405              	.LASF117:
 7406 0216 53554D5F 		.ascii	"SUM_AND_MEAN\000"
 7406      414E445F 
 7406      4D45414E 
 7406      00
 7407              	.LASF175:
 7408 0223 66697273 		.ascii	"first_tension_valid\000"
 7408      745F7465 
 7408      6E73696F 
 7408      6E5F7661 
 7408      6C696400 
 7409              	.LASF220:
 7410 0237 74696D65 		.ascii	"timer_value\000"
 7410      725F7661 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 163


 7410      6C756500 
 7411              	.LASF4:
 7412 0243 6C6F6E67 		.ascii	"long int\000"
 7412      20696E74 
 7412      00
 7413              	.LASF96:
 7414 024c 756E7573 		.ascii	"unused_bytes1\000"
 7414      65645F62 
 7414      79746573 
 7414      3100
 7415              	.LASF186:
 7416 025a 62696E5F 		.ascii	"bin_threshold\000"
 7416      74687265 
 7416      73686F6C 
 7416      6400
 7417              	.LASF87:
 7418 0268 756E7573 		.ascii	"unused_bytes\000"
 7418      65645F62 
 7418      79746573 
 7418      00
 7419              	.LASF101:
 7420 0275 61636365 		.ascii	"accel_value\000"
 7420      6C5F7661 
 7420      6C756500 
 7421              	.LASF17:
 7422 0281 666C6F61 		.ascii	"float32\000"
 7422      74333200 
 7423              	.LASF157:
 7424 0289 656E636F 		.ascii	"encoder_reading_SPI\000"
 7424      6465725F 
 7424      72656164 
 7424      696E675F 
 7424      53504900 
 7425              	.LASF242:
 7426 029d 77726974 		.ascii	"write_bytes\000"
 7426      655F6279 
 7426      74657300 
 7427              	.LASF164:
 7428 02a9 6572726F 		.ascii	"error\000"
 7428      7200
 7429              	.LASF88:
 7430 02af 656D675F 		.ascii	"emg_counter\000"
 7430      636F756E 
 7430      74657200 
 7431              	.LASF124:
 7432 02bb 57524954 		.ascii	"WRITE_END\000"
 7432      455F454E 
 7432      4400
 7433              	.LASF167:
 7434 02c5 706F735F 		.ascii	"pos_reconstruct\000"
 7434      7265636F 
 7434      6E737472 
 7434      75637400 
 7435              	.LASF179:
 7436 02d5 70776D5F 		.ascii	"pwm_limit_search\000"
 7436      6C696D69 
 7436      745F7365 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 164


 7436      61726368 
 7436      00
 7437              	.LASF0:
 7438 02e6 7369676E 		.ascii	"signed char\000"
 7438      65642063 
 7438      68617200 
 7439              	.LASF109:
 7440 02f2 73745F63 		.ascii	"st_calib\000"
 7440      616C6962 
 7440      00
 7441              	.LASF149:
 7442 02fb 6572725F 		.ascii	"err_emg_1\000"
 7442      656D675F 
 7442      3100
 7443              	.LASF150:
 7444 0305 6572725F 		.ascii	"err_emg_2\000"
 7444      656D675F 
 7444      3200
 7445              	.LASF86:
 7446 030f 73776974 		.ascii	"switch_emg\000"
 7446      63685F65 
 7446      6D6700
 7447              	.LASF229:
 7448 031a 656D675F 		.ascii	"emg_2_status\000"
 7448      325F7374 
 7448      61747573 
 7448      00
 7449              	.LASF238:
 7450 0327 4144435F 		.ascii	"ADC_buf\000"
 7450      62756600 
 7451              	.LASF232:
 7452 032f 696E7465 		.ascii	"interrupt_flag\000"
 7452      72727570 
 7452      745F666C 
 7452      616700
 7453              	.LASF192:
 7454 033e 73746570 		.ascii	"step\000"
 7454      00
 7455              	.LASF139:
 7456 0343 77726974 		.ascii	"write_cycles\000"
 7456      655F6379 
 7456      636C6573 
 7456      00
 7457              	.LASF152:
 7458 0350 63757272 		.ascii	"curr_error_sum\000"
 7458      5F657272 
 7458      6F725F73 
 7458      756D00
 7459              	.LASF1:
 7460 035f 756E7369 		.ascii	"unsigned char\000"
 7460      676E6564 
 7460      20636861 
 7460      7200
 7461              	.LASF127:
 7462 036d 4953525F 		.ascii	"ISR_RS485_RX_ExInterrupt\000"
 7462      52533438 
 7462      355F5258 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 165


 7462      5F457849 
 7462      6E746572 
 7463              	.LASF198:
 7464 0386 726F775F 		.ascii	"row_start\000"
 7464      73746172 
 7464      7400
 7465              	.LASF236:
 7466 0390 666F7263 		.ascii	"forced_open\000"
 7466      65645F6F 
 7466      70656E00 
 7467              	.LASF160:
 7468 039c 73706565 		.ascii	"speed_encoder\000"
 7468      645F656E 
 7468      636F6465 
 7468      7200
 7469              	.LASF206:
 7470 03aa 675F7265 		.ascii	"g_refNew\000"
 7470      664E6577 
 7470      00
 7471              	.LASF228:
 7472 03b3 656D675F 		.ascii	"emg_1_status\000"
 7472      315F7374 
 7472      61747573 
 7472      00
 7473              	.LASF100:
 7474 03c0 666C6167 		.ascii	"flags\000"
 7474      7300
 7475              	.LASF148:
 7476 03c6 68616E64 		.ascii	"handle_value\000"
 7476      6C655F76 
 7476      616C7565 
 7476      00
 7477              	.LASF20:
 7478 03d3 63686172 		.ascii	"char\000"
 7478      00
 7479              	.LASF67:
 7480 03d8 6D61785F 		.ascii	"max_step_pos\000"
 7480      73746570 
 7480      5F706F73 
 7480      00
 7481              	.LASF239:
 7482 03e5 70776D5F 		.ascii	"pwm_sign\000"
 7482      7369676E 
 7482      00
 7483              	.LASF217:
 7484 03ee 66696C74 		.ascii	"filt_vel\000"
 7484      5F76656C 
 7484      00
 7485              	.LASF51:
 7486 03f7 6B5F645F 		.ascii	"k_d_c\000"
 7486      6300
 7487              	.LASF62:
 7488 03fd 6D5F6D75 		.ascii	"m_mult\000"
 7488      6C7400
 7489              	.LASF50:
 7490 0404 6B5F695F 		.ascii	"k_i_c\000"
 7490      6300
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 166


 7491              	.LASF155:
 7492 040a 6D6F746F 		.ascii	"motor_dir\000"
 7492      725F6469 
 7492      7200
 7493              	.LASF189:
 7494 0414 62696E5F 		.ascii	"bin_st\000"
 7494      737400
 7495              	.LASF218:
 7496 041b 66696C74 		.ascii	"filt_emg1\000"
 7496      5F656D67 
 7496      3100
 7497              	.LASF219:
 7498 0425 66696C74 		.ascii	"filt_emg2\000"
 7498      5F656D67 
 7498      3200
 7499              	.LASF65:
 7500 042f 706F735F 		.ascii	"pos_lim_sup\000"
 7500      6C696D5F 
 7500      73757000 
 7501              	.LASF107:
 7502 043b 6F6C645F 		.ascii	"old_value\000"
 7502      76616C75 
 7502      6500
 7503              	.LASF72:
 7504 0445 656D675F 		.ascii	"emg_speed\000"
 7504      73706565 
 7504      6400
 7505              	.LASF83:
 7506 044f 72657374 		.ascii	"rest_vel\000"
 7506      5F76656C 
 7506      00
 7507              	.LASF114:
 7508 0458 4E4F524D 		.ascii	"NORMAL\000"
 7508      414C00
 7509              	.LASF241:
 7510 045f 7046696C 		.ascii	"pFile\000"
 7510      6500
 7511              	.LASF151:
 7512 0465 706F735F 		.ascii	"pos_error_sum\000"
 7512      6572726F 
 7512      725F7375 
 7512      6D00
 7513              	.LASF226:
 7514 0473 6465765F 		.ascii	"dev_tension_f\000"
 7514      74656E73 
 7514      696F6E5F 
 7514      6600
 7515              	.LASF53:
 7516 0481 6B5F695F 		.ascii	"k_i_dl\000"
 7516      646C00
 7517              	.LASF44:
 7518 0488 62756666 		.ascii	"buffer\000"
 7518      657200
 7519              	.LASF55:
 7520 048f 6B5F705F 		.ascii	"k_p_c_dl\000"
 7520      635F646C 
 7520      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 167


 7521              	.LASF135:
 7522 0498 72785F64 		.ascii	"rx_data_type\000"
 7522      6174615F 
 7522      74797065 
 7522      00
 7523              	.LASF244:
 7524 04a5 675F696D 		.ascii	"g_imuNew\000"
 7524      754E6577 
 7524      00
 7525              	.LASF112:
 7526 04ae 73706565 		.ascii	"speed\000"
 7526      6400
 7527              	.LASF194:
 7528 04b4 74696D65 		.ascii	"timer_value_e\000"
 7528      725F7661 
 7528      6C75655F 
 7528      6500
 7529              	.LASF130:
 7530 04c2 64617461 		.ascii	"data_packet_index\000"
 7530      5F706163 
 7530      6B65745F 
 7530      696E6465 
 7530      7800
 7531              	.LASF132:
 7532 04d4 64617461 		.ascii	"data_packet_buffer\000"
 7532      5F706163 
 7532      6B65745F 
 7532      62756666 
 7532      657200
 7533              	.LASF227:
 7534 04e7 6379636C 		.ascii	"cycles_status\000"
 7534      65735F73 
 7534      74617475 
 7534      7300
 7535              	.LASF137:
 7536 04f5 636F756E 		.ascii	"counter_calibration\000"
 7536      7465725F 
 7536      63616C69 
 7536      62726174 
 7536      696F6E00 
 7537              	.LASF208:
 7538 0509 675F6D65 		.ascii	"g_meas\000"
 7538      617300
 7539              	.LASF193:
 7540 0510 74696D65 		.ascii	"timer_value_s\000"
 7540      725F7661 
 7540      6C75655F 
 7540      7300
 7541              	.LASF205:
 7542 051e 675F7265 		.ascii	"g_ref\000"
 7542      6600
 7543              	.LASF25:
 7544 0524 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 7544      545F4D4F 
 7544      44455F45 
 7544      58544552 
 7544      4E414C00 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 168


 7545              	.LASF158:
 7546 0538 696E6465 		.ascii	"index\000"
 7546      7800
 7547              	.LASF85:
 7548 053e 72657374 		.ascii	"rest_position_flag\000"
 7548      5F706F73 
 7548      6974696F 
 7548      6E5F666C 
 7548      616700
 7549              	.LASF243:
 7550 0551 675F696D 		.ascii	"g_imu\000"
 7550      7500
 7551              	.LASF56:
 7552 0557 6B5F695F 		.ascii	"k_i_c_dl\000"
 7552      635F646C 
 7552      00
 7553              	.LASF136:
 7554 0560 7061636B 		.ascii	"package_count\000"
 7554      6167655F 
 7554      636F756E 
 7554      7400
 7555              	.LASF36:
 7556 056e 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 7556      5F414E44 
 7556      5F504F53 
 7556      5F434F4E 
 7556      54524F4C 
 7557              	.LASF110:
 7558 0583 656E6162 		.ascii	"enabled\000"
 7558      6C656400 
 7559              	.LASF5:
 7560 058b 6C6F6E67 		.ascii	"long unsigned int\000"
 7560      20756E73 
 7560      69676E65 
 7560      6420696E 
 7560      7400
 7561              	.LASF93:
 7562 059d 746F7461 		.ascii	"total_time_on\000"
 7562      6C5F7469 
 7562      6D655F6F 
 7562      6E00
 7563              	.LASF122:
 7564 05ab 57524954 		.ascii	"WRITE_CYCLES\000"
 7564      455F4359 
 7564      434C4553 
 7564      00
 7565              	.LASF143:
 7566 05b8 6D6F746F 		.ascii	"motor_control\000"
 7566      725F636F 
 7566      6E74726F 
 7566      6C00
 7567              	.LASF196:
 7568 05c6 73746174 		.ascii	"status\000"
 7568      757300
 7569              	.LASF94:
 7570 05cd 746F7461 		.ascii	"total_time_rest\000"
 7570      6C5F7469 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 169


 7570      6D655F72 
 7570      65737400 
 7571              	.LASF58:
 7572 05dd 61637469 		.ascii	"activ\000"
 7572      7600
 7573              	.LASF61:
 7574 05e3 6D5F6F66 		.ascii	"m_off\000"
 7574      6600
 7575              	.LASF230:
 7576 05e9 72657365 		.ascii	"reset_last_value_flag\000"
 7576      745F6C61 
 7576      73745F76 
 7576      616C7565 
 7576      5F666C61 
 7577              	.LASF104:
 7578 05ff 71756174 		.ascii	"quat_value\000"
 7578      5F76616C 
 7578      756500
 7579              	.LASF81:
 7580 060a 72657374 		.ascii	"rest_pos\000"
 7580      5F706F73 
 7580      00
 7581              	.LASF38:
 7582 0613 63757272 		.ascii	"curr\000"
 7582      00
 7583              	.LASF123:
 7584 0618 57414954 		.ascii	"WAIT_QUERY\000"
 7584      5F515545 
 7584      525900
 7585              	.LASF59:
 7586 0623 696E7075 		.ascii	"input_mode\000"
 7586      745F6D6F 
 7586      646500
 7587              	.LASF34:
 7588 062e 434F4E54 		.ascii	"CONTROL_PWM\000"
 7588      524F4C5F 
 7588      50574D00 
 7589              	.LASF182:
 7590 063a 6379636C 		.ascii	"cycles_counter_update\000"
 7590      65735F63 
 7590      6F756E74 
 7590      65725F75 
 7590      70646174 
 7591              	.LASF47:
 7592 0650 73745F6D 		.ascii	"st_mem\000"
 7592      656D00
 7593              	.LASF245:
 7594 0657 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7594      43313120 
 7594      352E342E 
 7594      31203230 
 7594      31363036 
 7595 068a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 7595      20726576 
 7595      6973696F 
 7595      6E203233 
 7595      37373135 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 170


 7596 06bd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 7596      66756E63 
 7596      74696F6E 
 7596      2D736563 
 7596      74696F6E 
 7597              	.LASF40:
 7598 06e5 73745F72 		.ascii	"st_ref\000"
 7598      656600
 7599              	.LASF221:
 7600 06ec 74696D65 		.ascii	"timer_value0\000"
 7600      725F7661 
 7600      6C756530 
 7600      00
 7601              	.LASF168:
 7602 06f9 765F7661 		.ascii	"v_value\000"
 7602      6C756500 
 7603              	.LASF213:
 7604 0701 63616C69 		.ascii	"calib\000"
 7604      6200
 7605              	.LASF161:
 7606 0707 70726576 		.ascii	"previous_val\000"
 7606      696F7573 
 7606      5F76616C 
 7606      00
 7607              	.LASF6:
 7608 0714 6C6F6E67 		.ascii	"long long int\000"
 7608      206C6F6E 
 7608      6720696E 
 7608      7400
 7609              	.LASF32:
 7610 0722 53485F63 		.ascii	"SH_control_mode\000"
 7610      6F6E7472 
 7610      6F6C5F6D 
 7610      6F646500 
 7611              	.LASF79:
 7612 0732 6D61696E 		.ascii	"maint_month\000"
 7612      745F6D6F 
 7612      6E746800 
 7613              	.LASF19:
 7614 073e 646F7562 		.ascii	"double\000"
 7614      6C6500
 7615              	.LASF215:
 7616 0745 66696C74 		.ascii	"filt_curr_diff\000"
 7616      5F637572 
 7616      725F6469 
 7616      666600
 7617              	.LASF142:
 7618 0754 696E7465 		.ascii	"interrupt_manager\000"
 7618      72727570 
 7618      745F6D61 
 7618      6E616765 
 7618      7200
 7619              	.LASF113:
 7620 0766 72657065 		.ascii	"repetitions\000"
 7620      74697469 
 7620      6F6E7300 
 7621              	.LASF66:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 171


 7622 0772 6D61785F 		.ascii	"max_step_neg\000"
 7622      73746570 
 7622      5F6E6567 
 7622      00
 7623              	.LASF118:
 7624 077f 57414954 		.ascii	"WAIT\000"
 7624      00
 7625              	.LASF18:
 7626 0784 666C6F61 		.ascii	"float\000"
 7626      7400
 7627              	.LASF98:
 7628 078a 494D555F 		.ascii	"IMU_conf\000"
 7628      636F6E66 
 7628      00
 7629              	.LASF177:
 7630 0793 636F756E 		.ascii	"count\000"
 7630      7400
 7631              	.LASF202:
 7632 0799 6D5F6164 		.ascii	"m_addr\000"
 7632      647200
 7633              	.LASF212:
 7634 07a0 635F6D65 		.ascii	"c_mem\000"
 7634      6D00
 7635              	.LASF8:
 7636 07a6 756E7369 		.ascii	"unsigned int\000"
 7636      676E6564 
 7636      20696E74 
 7636      00
 7637              	.LASF188:
 7638 07b3 6D61785F 		.ascii	"max_pos\000"
 7638      706F7300 
 7639              	.LASF240:
 7640 07bb 72657374 		.ascii	"rest_pos_curr_ref\000"
 7640      5F706F73 
 7640      5F637572 
 7640      725F7265 
 7640      6600
 7641              	.LASF48:
 7642 07cd 666C6167 		.ascii	"flag\000"
 7642      00
 7643              	.LASF60:
 7644 07d2 636F6E74 		.ascii	"control_mode\000"
 7644      726F6C5F 
 7644      6D6F6465 
 7644      00
 7645              	.LASF21:
 7646 07df 63797374 		.ascii	"cystatus\000"
 7646      61747573 
 7646      00
 7647              	.LASF26:
 7648 07e8 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 7648      545F4D4F 
 7648      44455F45 
 7648      4E434F44 
 7648      45523300 
 7649              	.LASF156:
 7650 07fc 63757272 		.ascii	"current_emg\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 172


 7650      656E745F 
 7650      656D6700 
 7651              	.LASF133:
 7652 0808 72785F71 		.ascii	"rx_queue\000"
 7652      75657565 
 7652      00
 7653              	.LASF147:
 7654 0811 695F7265 		.ascii	"i_ref\000"
 7654      6600
 7655              	.LASF69:
 7656 0817 656D675F 		.ascii	"emg_threshold\000"
 7656      74687265 
 7656      73686F6C 
 7656      6400
 7657              	.LASF195:
 7658 0825 73617665 		.ascii	"save_cycles_eeprom\000"
 7658      5F637963 
 7658      6C65735F 
 7658      65657072 
 7658      6F6D00
 7659              	.LASF140:
 7660 0838 7274635F 		.ascii	"rtc_data\000"
 7660      64617461 
 7660      00
 7661              	.LASF90:
 7662 0841 63757272 		.ascii	"current_hist\000"
 7662      656E745F 
 7662      68697374 
 7662      00
 7663              	.LASF35:
 7664 084e 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 7664      524F4C5F 
 7664      43555252 
 7664      454E5400 
 7665              	.LASF23:
 7666 085e 6C6F6E67 		.ascii	"long double\000"
 7666      20646F75 
 7666      626C6500 
 7667              	.LASF116:
 7668 086a 44495343 		.ascii	"DISCARD\000"
 7668      41524400 
 7669              	.LASF153:
 7670 0872 70726576 		.ascii	"prev_pos_err\000"
 7670      5F706F73 
 7670      5F657272 
 7670      00
 7671              	.LASF237:
 7672 087f 62617474 		.ascii	"battery_low_SoC\000"
 7672      6572795F 
 7672      6C6F775F 
 7672      536F4300 
 7673              	.LASF216:
 7674 088f 66696C74 		.ascii	"filt_i\000"
 7674      5F6900
 7675              	.LASF74:
 7676 0896 6D6F746F 		.ascii	"motor_handle_ratio\000"
 7676      725F6861 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 173


 7676      6E646C65 
 7676      5F726174 
 7676      696F00
 7677              	.LASF214:
 7678 08a9 66696C74 		.ascii	"filt_v\000"
 7678      5F7600
 7679              	.LASF235:
 7680 08b0 72657374 		.ascii	"rest_enabled\000"
 7680      5F656E61 
 7680      626C6564 
 7680      00
 7681              	.LASF207:
 7682 08bd 675F7265 		.ascii	"g_refOld\000"
 7682      664F6C64 
 7682      00
 7683              	.LASF84:
 7684 08c6 72657374 		.ascii	"rest_ratio\000"
 7684      5F726174 
 7684      696F00
 7685              	.LASF102:
 7686 08d1 6779726F 		.ascii	"gyro_value\000"
 7686      5F76616C 
 7686      756500
 7687              	.LASF95:
 7688 08dc 63757272 		.ascii	"curr_time\000"
 7688      5F74696D 
 7688      6500
 7689              	.LASF73:
 7690 08e6 646F7562 		.ascii	"double_encoder_on_off\000"
 7690      6C655F65 
 7690      6E636F64 
 7690      65725F6F 
 7690      6E5F6F66 
 7691              	.LASF80:
 7692 08fc 6D61696E 		.ascii	"maint_year\000"
 7692      745F7965 
 7692      617200
 7693              	.LASF163:
 7694 0907 6C617374 		.ascii	"last_value_encoder\000"
 7694      5F76616C 
 7694      75655F65 
 7694      6E636F64 
 7694      657200
 7695              	.LASF138:
 7696 091a 636F756E 		.ascii	"counter_tension_func\000"
 7696      7465725F 
 7696      74656E73 
 7696      696F6E5F 
 7696      66756E63 
 7697              	.LASF222:
 7698 092f 6379636C 		.ascii	"cycle_time\000"
 7698      655F7469 
 7698      6D6500
 7699              	.LASF7:
 7700 093a 6C6F6E67 		.ascii	"long long unsigned int\000"
 7700      206C6F6E 
 7700      6720756E 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 174


 7700      7369676E 
 7700      65642069 
 7701              	.LASF78:
 7702 0951 6D61696E 		.ascii	"maint_day\000"
 7702      745F6461 
 7702      7900
 7703              	.LASF45:
 7704 095b 6C656E67 		.ascii	"length\000"
 7704      746800
 7705              	.LASF181:
 7706 0962 6D696E5F 		.ascii	"min_tension\000"
 7706      74656E73 
 7706      696F6E00 
 7707              	.LASF103:
 7708 096e 6D61675F 		.ascii	"mag_value\000"
 7708      76616C75 
 7708      6500
 7709              	.LASF39:
 7710 0978 6F6E6F66 		.ascii	"onoff\000"
 7710      6600
 7711              	.LASF154:
 7712 097e 70726576 		.ascii	"prev_curr_err\000"
 7712      5F637572 
 7712      725F6572 
 7712      7200
 7713              	.LASF131:
 7714 098c 64617461 		.ascii	"data_packet_length\000"
 7714      5F706163 
 7714      6B65745F 
 7714      6C656E67 
 7714      746800
 7715              	.LASF49:
 7716 099f 6B5F705F 		.ascii	"k_p_c\000"
 7716      6300
 7717              	.LASF223:
 7718 09a5 6465765F 		.ascii	"dev_tension\000"
 7718      74656E73 
 7718      696F6E00 
 7719              	.LASF119:
 7720 09b1 57414954 		.ascii	"WAIT_EoC\000"
 7720      5F456F43 
 7720      00
 7721              	.LASF22:
 7722 09ba 72656738 		.ascii	"reg8\000"
 7722      00
 7723              	.LASF172:
 7724 09bf 695F6175 		.ascii	"i_aux\000"
 7724      7800
 7725              	.LASF159:
 7726 09c5 6175785F 		.ascii	"aux_encoders\000"
 7726      656E636F 
 7726      64657273 
 7726      00
 7727              	.LASF197:
 7728 09d2 726F775F 		.ascii	"row_number\000"
 7728      6E756D62 
 7728      657200
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 175


 7729              	.LASF249:
 7730 09dd 6F766572 		.ascii	"overcurrent_control\000"
 7730      63757272 
 7730      656E745F 
 7730      636F6E74 
 7730      726F6C00 
 7731              	.LASF191:
 7732 09f1 63757272 		.ascii	"curr_pos\000"
 7732      5F706F73 
 7732      00
 7733              	.LASF115:
 7734 09fa 52455345 		.ascii	"RESET\000"
 7734      5400
 7735              	.LASF171:
 7736 0a00 616E616C 		.ascii	"analog_read_end\000"
 7736      6F675F72 
 7736      6561645F 
 7736      656E6400 
 7737              	.LASF184:
 7738 0a10 656D675F 		.ascii	"emg_cycle_status\000"
 7738      6379636C 
 7738      655F7374 
 7738      61747573 
 7738      00
 7739              	.LASF70:
 7740 0a21 656D675F 		.ascii	"emg_calibration_flag\000"
 7740      63616C69 
 7740      62726174 
 7740      696F6E5F 
 7740      666C6167 
 7741              	.LASF41:
 7742 0a36 73745F6D 		.ascii	"st_meas\000"
 7742      65617300 
 7743              	.LASF199:
 7744 0a3e 61646472 		.ascii	"addr_start\000"
 7744      5F737461 
 7744      727400
 7745              	.LASF203:
 7746 0a49 70776D5F 		.ascii	"pwm_preload_values\000"
 7746      7072656C 
 7746      6F61645F 
 7746      76616C75 
 7746      657300
 7747              	.LASF126:
 7748 0a5c 636F756E 		.ascii	"counter_status\000"
 7748      7465725F 
 7748      73746174 
 7748      757300
 7749              	.LASF211:
 7750 0a6b 675F6D65 		.ascii	"g_mem\000"
 7750      6D00
 7751              	.LASF173:
 7752 0a71 656D675F 		.ascii	"emg_counter_1\000"
 7752      636F756E 
 7752      7465725F 
 7752      3100
 7753              	.LASF174:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 176


 7754 0a7f 656D675F 		.ascii	"emg_counter_2\000"
 7754      636F756E 
 7754      7465725F 
 7754      3200
 7755              	.LASF165:
 7756 0a8d 6F6E6C79 		.ascii	"only_first_time\000"
 7756      5F666972 
 7756      73745F74 
 7756      696D6500 
 7757              	.LASF11:
 7758 0a9d 75696E74 		.ascii	"uint8\000"
 7758      3800
 7759              	.LASF2:
 7760 0aa3 73686F72 		.ascii	"short int\000"
 7760      7420696E 
 7760      7400
 7761              	.LASF54:
 7762 0aad 6B5F645F 		.ascii	"k_d_dl\000"
 7762      646C00
 7763              	.LASF225:
 7764 0ab4 6465765F 		.ascii	"dev_pwm_sat\000"
 7764      70776D5F 
 7764      73617400 
 7765              	.LASF248:
 7766 0ac0 66756E63 		.ascii	"function_scheduler\000"
 7766      74696F6E 
 7766      5F736368 
 7766      6564756C 
 7766      657200
 7767              	.LASF204:
 7768 0ad3 49544D5F 		.ascii	"ITM_RxBuffer\000"
 7768      52784275 
 7768      66666572 
 7768      00
 7769              	.LASF176:
 7770 0ae0 706F775F 		.ascii	"pow_tension\000"
 7770      74656E73 
 7770      696F6E00 
 7771              	.LASF15:
 7772 0aec 696E7431 		.ascii	"int16\000"
 7772      3600
 7773              	.LASF75:
 7774 0af2 61637469 		.ascii	"activate_pwm_rescaling\000"
 7774      76617465 
 7774      5F70776D 
 7774      5F726573 
 7774      63616C69 
 7775              	.LASF52:
 7776 0b09 6B5F705F 		.ascii	"k_p_dl\000"
 7776      646C00
 7777              	.LASF42:
 7778 0b10 65737469 		.ascii	"estim_curr\000"
 7778      6D5F6375 
 7778      727200
 7779              	.LASF224:
 7780 0b1b 6465765F 		.ascii	"dev_pwm_limit\000"
 7780      70776D5F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 177


 7780      6C696D69 
 7780      7400
 7781              	.LASF146:
 7782 0b29 63757272 		.ascii	"curr_error\000"
 7782      5F657272 
 7782      6F7200
 7783              	.LASF185:
 7784 0b34 72657374 		.ascii	"rest_cycle_status\000"
 7784      5F637963 
 7784      6C655F73 
 7784      74617475 
 7784      7300
 7785              	.LASF128:
 7786 0b46 4953525F 		.ascii	"ISR_CYCLES_Handler\000"
 7786      4359434C 
 7786      45535F48 
 7786      616E646C 
 7786      657200
 7787              	.LASF77:
 7788 0b59 62617564 		.ascii	"baud_rate\000"
 7788      5F726174 
 7788      6500
 7789              	.LASF97:
 7790 0b63 5350495F 		.ascii	"SPI_read_delay\000"
 7790      72656164 
 7790      5F64656C 
 7790      617900
 7791              	.LASF3:
 7792 0b72 73686F72 		.ascii	"short unsigned int\000"
 7792      7420756E 
 7792      7369676E 
 7792      65642069 
 7792      6E7400
 7793              	.LASF99:
 7794 0b85 73745F69 		.ascii	"st_imu\000"
 7794      6D7500
 7795              	.LASF246:
 7796 0b8c 2E2E5C73 		.ascii	"..\\src\\interruptions.c\000"
 7796      72635C69 
 7796      6E746572 
 7796      72757074 
 7796      696F6E73 
 7797              	.LASF16:
 7798 0ba3 696E7433 		.ascii	"int32\000"
 7798      3200
 7799              	.LASF37:
 7800 0ba9 46535F46 		.ascii	"FS_FILE\000"
 7800      494C4500 
 7801              	.LASF63:
 7802 0bb1 706F735F 		.ascii	"pos_lim_flag\000"
 7802      6C696D5F 
 7802      666C6167 
 7802      00
 7803              	.LASF209:
 7804 0bbe 675F6D65 		.ascii	"g_measOld\000"
 7804      61734F6C 
 7804      6400
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 178


 7805              	.LASF201:
 7806 0bc8 726F775F 		.ascii	"row_end\000"
 7806      656E6400 
 7807              	.LASF33:
 7808 0bd0 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 7808      524F4C5F 
 7808      414E474C 
 7808      4500
 7809              	.LASF9:
 7810 0bde 5F5F696E 		.ascii	"__int32_t\000"
 7810      7433325F 
 7810      7400
 7811              	.LASF92:
 7812 0be8 77697265 		.ascii	"wire_disp\000"
 7812      5F646973 
 7812      7000
 7813              	.LASF234:
 7814 0bf2 63616E5F 		.ascii	"can_write\000"
 7814      77726974 
 7814      6500
 7815              	.LASF71:
 7816 0bfc 656D675F 		.ascii	"emg_max_value\000"
 7816      6D61785F 
 7816      76616C75 
 7816      6500
 7817              	.LASF68:
 7818 0c0a 63757272 		.ascii	"current_limit\000"
 7818      656E745F 
 7818      6C696D69 
 7818      7400
 7819              	.LASF31:
 7820 0c18 53485F69 		.ascii	"SH_input_mode\000"
 7820      6E707574 
 7820      5F6D6F64 
 7820      6500
 7821              	.LASF125:
 7822 0c26 4E4F4E45 		.ascii	"NONE\000"
 7822      00
 7823              	.LASF12:
 7824 0c2b 75696E74 		.ascii	"uint16\000"
 7824      313600
 7825              	.LASF82:
 7826 0c32 72657374 		.ascii	"rest_delay\000"
 7826      5F64656C 
 7826      617900
 7827              	.LASF106:
 7828 0c3d 73745F66 		.ascii	"st_filter\000"
 7828      696C7465 
 7828      7200
 7829              	.LASF169:
 7830 0c47 76765F76 		.ascii	"vv_value\000"
 7830      616C7565 
 7830      00
 7831              	.LASF57:
 7832 0c50 6B5F645F 		.ascii	"k_d_c_dl\000"
 7832      635F646C 
 7832      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccIkmfGW.s 			page 179


 7833              	.LASF111:
 7834 0c59 64697265 		.ascii	"direction\000"
 7834      6374696F 
 7834      6E00
 7835              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
