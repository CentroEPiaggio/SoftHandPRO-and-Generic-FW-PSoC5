ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** 
  49:..\src/command_processing.c **** //================================================================     variables
  50:..\src/command_processing.c **** 
  51:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  52:..\src/command_processing.c **** 
  53:..\src/command_processing.c **** //==============================================================================
  54:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  55:..\src/command_processing.c **** //==============================================================================
  56:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  57:..\src/command_processing.c **** //      - Verify checksum;
  58:..\src/command_processing.c **** //      - Process commands;
  59:..\src/command_processing.c **** //==============================================================================
  60:..\src/command_processing.c **** 
  61:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 61 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 32
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 88B0     		sub	sp, sp, #32
  44              		.cfi_def_cfa_offset 40
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  62:..\src/command_processing.c **** 
  63:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
  64:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 64 0
  48 0006 E24B     		ldr	r3, .L48
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 3


  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** //==========================================================     verify checksum
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 68 0
  52 000c E04B     		ldr	r3, .L48
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DD48     		ldr	r0, .L48
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 DA4B     		ldr	r3, .L48
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D84A     		ldr	r2, .L48
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  69:..\src/command_processing.c ****         // Wrong checksum
  70:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 70 0
  70 0034 D64B     		ldr	r3, .L48
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  71:..\src/command_processing.c ****         return;
  73              		.loc 1 71 0
  74 003c 42E2     		b	.L1
  75              	.L2:
  72:..\src/command_processing.c ****     }
  73:..\src/command_processing.c **** 
  74:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 74 0
  77 003e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
  78 0040 A62B     		cmp	r3, #166
  79 0042 00F23E82 		bhi	.L47
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 67030000 		.word	.L5+1
  85 0050 49030000 		.word	.L7+1
  86 0054 C3040000 		.word	.L47+1
  87 0058 6D030000 		.word	.L8+1
  88 005c 73030000 		.word	.L9+1
  89 0060 99030000 		.word	.L10+1
  90 0064 31030000 		.word	.L11+1
  91 0068 C3040000 		.word	.L47+1
  92 006c C3040000 		.word	.L47+1
  93 0070 CD030000 		.word	.L12+1
  94 0074 B3030000 		.word	.L13+1
  95 0078 C3040000 		.word	.L47+1
  96 007c 4F030000 		.word	.L14+1
  97 0080 EF030000 		.word	.L15+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 4


  98 0084 C3040000 		.word	.L47+1
  99 0088 C3040000 		.word	.L47+1
 100 008c C3040000 		.word	.L47+1
 101 0090 C3040000 		.word	.L47+1
 102 0094 C3040000 		.word	.L47+1
 103 0098 C3040000 		.word	.L47+1
 104 009c C3040000 		.word	.L47+1
 105 00a0 C3040000 		.word	.L47+1
 106 00a4 C3040000 		.word	.L47+1
 107 00a8 C3040000 		.word	.L47+1
 108 00ac C3040000 		.word	.L47+1
 109 00b0 C3040000 		.word	.L47+1
 110 00b4 C3040000 		.word	.L47+1
 111 00b8 C3040000 		.word	.L47+1
 112 00bc C3040000 		.word	.L47+1
 113 00c0 C3040000 		.word	.L47+1
 114 00c4 C3040000 		.word	.L47+1
 115 00c8 C3040000 		.word	.L47+1
 116 00cc C3040000 		.word	.L47+1
 117 00d0 C3040000 		.word	.L47+1
 118 00d4 C3040000 		.word	.L47+1
 119 00d8 C3040000 		.word	.L47+1
 120 00dc C3040000 		.word	.L47+1
 121 00e0 C3040000 		.word	.L47+1
 122 00e4 C3040000 		.word	.L47+1
 123 00e8 C3040000 		.word	.L47+1
 124 00ec C3040000 		.word	.L47+1
 125 00f0 C3040000 		.word	.L47+1
 126 00f4 C3040000 		.word	.L47+1
 127 00f8 C3040000 		.word	.L47+1
 128 00fc C3040000 		.word	.L47+1
 129 0100 C3040000 		.word	.L47+1
 130 0104 C3040000 		.word	.L47+1
 131 0108 C3040000 		.word	.L47+1
 132 010c C3040000 		.word	.L47+1
 133 0110 C3040000 		.word	.L47+1
 134 0114 C3040000 		.word	.L47+1
 135 0118 C3040000 		.word	.L47+1
 136 011c C3040000 		.word	.L47+1
 137 0120 C3040000 		.word	.L47+1
 138 0124 C3040000 		.word	.L47+1
 139 0128 C3040000 		.word	.L47+1
 140 012c C3040000 		.word	.L47+1
 141 0130 C3040000 		.word	.L47+1
 142 0134 C3040000 		.word	.L47+1
 143 0138 C3040000 		.word	.L47+1
 144 013c C3040000 		.word	.L47+1
 145 0140 C3040000 		.word	.L47+1
 146 0144 C3040000 		.word	.L47+1
 147 0148 C3040000 		.word	.L47+1
 148 014c C3040000 		.word	.L47+1
 149 0150 C3040000 		.word	.L47+1
 150 0154 C3040000 		.word	.L47+1
 151 0158 C3040000 		.word	.L47+1
 152 015c C3040000 		.word	.L47+1
 153 0160 C3040000 		.word	.L47+1
 154 0164 C3040000 		.word	.L47+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 5


 155 0168 C3040000 		.word	.L47+1
 156 016c C3040000 		.word	.L47+1
 157 0170 C3040000 		.word	.L47+1
 158 0174 C3040000 		.word	.L47+1
 159 0178 C3040000 		.word	.L47+1
 160 017c C3040000 		.word	.L47+1
 161 0180 C3040000 		.word	.L47+1
 162 0184 C3040000 		.word	.L47+1
 163 0188 C3040000 		.word	.L47+1
 164 018c C3040000 		.word	.L47+1
 165 0190 C3040000 		.word	.L47+1
 166 0194 C3040000 		.word	.L47+1
 167 0198 C3040000 		.word	.L47+1
 168 019c C3040000 		.word	.L47+1
 169 01a0 C3040000 		.word	.L47+1
 170 01a4 C3040000 		.word	.L47+1
 171 01a8 C3040000 		.word	.L47+1
 172 01ac C3040000 		.word	.L47+1
 173 01b0 C3040000 		.word	.L47+1
 174 01b4 C3040000 		.word	.L47+1
 175 01b8 C3040000 		.word	.L47+1
 176 01bc C3040000 		.word	.L47+1
 177 01c0 C3040000 		.word	.L47+1
 178 01c4 C3040000 		.word	.L47+1
 179 01c8 C3040000 		.word	.L47+1
 180 01cc C3040000 		.word	.L47+1
 181 01d0 C3040000 		.word	.L47+1
 182 01d4 C3040000 		.word	.L47+1
 183 01d8 C3040000 		.word	.L47+1
 184 01dc C3040000 		.word	.L47+1
 185 01e0 C3040000 		.word	.L47+1
 186 01e4 C3040000 		.word	.L47+1
 187 01e8 C3040000 		.word	.L47+1
 188 01ec C3040000 		.word	.L47+1
 189 01f0 C3040000 		.word	.L47+1
 190 01f4 C3040000 		.word	.L47+1
 191 01f8 C3040000 		.word	.L47+1
 192 01fc C3040000 		.word	.L47+1
 193 0200 C3040000 		.word	.L47+1
 194 0204 C3040000 		.word	.L47+1
 195 0208 C3040000 		.word	.L47+1
 196 020c C3040000 		.word	.L47+1
 197 0210 C3040000 		.word	.L47+1
 198 0214 C3040000 		.word	.L47+1
 199 0218 C3040000 		.word	.L47+1
 200 021c C3040000 		.word	.L47+1
 201 0220 C3040000 		.word	.L47+1
 202 0224 C3040000 		.word	.L47+1
 203 0228 C3040000 		.word	.L47+1
 204 022c C3040000 		.word	.L47+1
 205 0230 C3040000 		.word	.L47+1
 206 0234 C3040000 		.word	.L47+1
 207 0238 C3040000 		.word	.L47+1
 208 023c C3040000 		.word	.L47+1
 209 0240 C3040000 		.word	.L47+1
 210 0244 C3040000 		.word	.L47+1
 211 0248 C3040000 		.word	.L47+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 6


 212 024c E9020000 		.word	.L16+1
 213 0250 1F030000 		.word	.L17+1
 214 0254 EF020000 		.word	.L18+1
 215 0258 2B030000 		.word	.L19+1
 216 025c F5020000 		.word	.L20+1
 217 0260 01030000 		.word	.L21+1
 218 0264 FB020000 		.word	.L22+1
 219 0268 C3040000 		.word	.L47+1
 220 026c 19030000 		.word	.L23+1
 221 0270 0D030000 		.word	.L24+1
 222 0274 C3040000 		.word	.L47+1
 223 0278 13030000 		.word	.L25+1
 224 027c 07030000 		.word	.L26+1
 225 0280 C3040000 		.word	.L47+1
 226 0284 C3040000 		.word	.L47+1
 227 0288 C3040000 		.word	.L47+1
 228 028c 25030000 		.word	.L27+1
 229 0290 C3040000 		.word	.L47+1
 230 0294 C3040000 		.word	.L47+1
 231 0298 C3040000 		.word	.L47+1
 232 029c C3040000 		.word	.L47+1
 233 02a0 C3040000 		.word	.L47+1
 234 02a4 C3040000 		.word	.L47+1
 235 02a8 C3040000 		.word	.L47+1
 236 02ac C3040000 		.word	.L47+1
 237 02b0 C3040000 		.word	.L47+1
 238 02b4 C3040000 		.word	.L47+1
 239 02b8 C3040000 		.word	.L47+1
 240 02bc C3040000 		.word	.L47+1
 241 02c0 C3040000 		.word	.L47+1
 242 02c4 C3040000 		.word	.L47+1
 243 02c8 C3040000 		.word	.L47+1
 244 02cc C3040000 		.word	.L47+1
 245 02d0 8D040000 		.word	.L28+1
 246 02d4 93040000 		.word	.L29+1
 247 02d8 AB040000 		.word	.L30+1
 248 02dc B1040000 		.word	.L31+1
 249 02e0 B7040000 		.word	.L32+1
 250 02e4 BD040000 		.word	.L33+1
 251              		.p2align 1
 252              	.L16:
  75:..\src/command_processing.c **** 
  76:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  77:..\src/command_processing.c ****         case CMD_ACTIVATE:
  78:..\src/command_processing.c ****             cmd_activate();
 253              		.loc 1 78 0
 254 02e8 FFF7FEFF 		bl	cmd_activate
  79:..\src/command_processing.c ****             break;
 255              		.loc 1 79 0
 256 02ec EAE0     		b	.L1
 257              	.L18:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  82:..\src/command_processing.c **** 
  83:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  84:..\src/command_processing.c ****             cmd_set_inputs();
 258              		.loc 1 84 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 7


 259 02ee FFF7FEFF 		bl	cmd_set_inputs
  85:..\src/command_processing.c ****             break;
 260              		.loc 1 85 0
 261 02f2 E7E0     		b	.L1
 262              	.L20:
  86:..\src/command_processing.c **** 
  87:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  88:..\src/command_processing.c **** 
  89:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  90:..\src/command_processing.c ****             cmd_get_measurements();
 263              		.loc 1 90 0
 264 02f4 FFF7FEFF 		bl	cmd_get_measurements
  91:..\src/command_processing.c ****             break;
 265              		.loc 1 91 0
 266 02f8 E4E0     		b	.L1
 267              	.L22:
  92:..\src/command_processing.c **** 
  93:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  94:..\src/command_processing.c **** 
  95:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
  96:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 268              		.loc 1 96 0
 269 02fa FFF7FEFF 		bl	cmd_get_curr_and_meas
  97:..\src/command_processing.c ****             break;
 270              		.loc 1 97 0
 271 02fe E1E0     		b	.L1
 272              	.L21:
  98:..\src/command_processing.c ****             
  99:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 100:..\src/command_processing.c **** 
 101:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 102:..\src/command_processing.c ****             cmd_get_currents();
 273              		.loc 1 102 0
 274 0300 FFF7FEFF 		bl	cmd_get_currents
 103:..\src/command_processing.c ****             break;
 275              		.loc 1 103 0
 276 0304 DEE0     		b	.L1
 277              	.L26:
 104:..\src/command_processing.c **** 
 105:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 106:..\src/command_processing.c ****          
 107:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 108:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 278              		.loc 1 108 0
 279 0306 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 109:..\src/command_processing.c ****             break;
 280              		.loc 1 109 0
 281 030a DBE0     		b	.L1
 282              	.L24:
 110:..\src/command_processing.c ****             
 111:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 112:..\src/command_processing.c ****         
 113:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 114:..\src/command_processing.c ****             cmd_get_velocities();
 283              		.loc 1 114 0
 284 030c FFF7FEFF 		bl	cmd_get_velocities
 115:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 8


 285              		.loc 1 115 0
 286 0310 D8E0     		b	.L1
 287              	.L25:
 116:..\src/command_processing.c ****             
 117:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 118:..\src/command_processing.c **** 
 119:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 120:..\src/command_processing.c ****             cmd_get_accelerations();
 288              		.loc 1 120 0
 289 0312 FFF7FEFF 		bl	cmd_get_accelerations
 121:..\src/command_processing.c ****             break;
 290              		.loc 1 121 0
 291 0316 D5E0     		b	.L1
 292              	.L23:
 122:..\src/command_processing.c ****             
 123:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 124:..\src/command_processing.c **** 
 125:..\src/command_processing.c ****         case CMD_GET_EMG:
 126:..\src/command_processing.c ****             cmd_get_emg();
 293              		.loc 1 126 0
 294 0318 FFF7FEFF 		bl	cmd_get_emg
 127:..\src/command_processing.c ****             break;
 295              		.loc 1 127 0
 296 031c D2E0     		b	.L1
 297              	.L17:
 128:..\src/command_processing.c ****             
 129:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 130:..\src/command_processing.c ****             
 131:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 132:..\src/command_processing.c ****             cmd_get_activate();
 298              		.loc 1 132 0
 299 031e FFF7FEFF 		bl	cmd_get_activate
 133:..\src/command_processing.c ****             break;
 300              		.loc 1 133 0
 301 0322 CFE0     		b	.L1
 302              	.L27:
 134:..\src/command_processing.c ****             
 135:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 136:..\src/command_processing.c ****             
 137:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 138:..\src/command_processing.c ****             cmd_set_baudrate();
 303              		.loc 1 138 0
 304 0324 FFF7FEFF 		bl	cmd_set_baudrate
 139:..\src/command_processing.c ****             break;  
 305              		.loc 1 139 0
 306 0328 CCE0     		b	.L1
 307              	.L19:
 140:..\src/command_processing.c ****             
 141:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 142:..\src/command_processing.c **** 
 143:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 144:..\src/command_processing.c ****             cmd_get_inputs();
 308              		.loc 1 144 0
 309 032a FFF7FEFF 		bl	cmd_get_inputs
 145:..\src/command_processing.c ****             break;
 310              		.loc 1 145 0
 311 032e C9E0     		b	.L1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 9


 312              	.L11:
 146:..\src/command_processing.c **** 
 147:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 148:..\src/command_processing.c **** 
 149:..\src/command_processing.c ****         case CMD_GET_INFO:
 150:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 313              		.loc 1 150 0
 314 0330 184B     		ldr	r3, .L48+4
 315 0332 1B88     		ldrh	r3, [r3]
 316 0334 3B61     		str	r3, [r7, #16]
 317              	.LBB8:
 318              	.LBB9:
 319              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 320              		.loc 2 792 0
 321 0336 3B69     		ldr	r3, [r7, #16]
 322              		.syntax unified
 323              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 324 0338 5BBA     		rev16 r3, r3
 325              	@ 0 "" 2
 326              		.thumb
 327              		.syntax unified
 328 033a FB60     		str	r3, [r7, #12]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 329              		.loc 2 793 0
 330 033c FB68     		ldr	r3, [r7, #12]
 331              	.LBE9:
 332              	.LBE8:
 333              		.loc 1 150 0
 334 033e 9BB2     		uxth	r3, r3
 335 0340 1846     		mov	r0, r3
 336 0342 FFF7FEFF 		bl	infoGet
 151:..\src/command_processing.c ****             break;
 337              		.loc 1 151 0
 338 0346 BDE0     		b	.L1
 339              	.L7:
 152:..\src/command_processing.c **** 
 153:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 154:..\src/command_processing.c **** 
 155:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 156:..\src/command_processing.c ****             setZeros();
 340              		.loc 1 156 0
 341 0348 FFF7FEFF 		bl	setZeros
 157:..\src/command_processing.c ****             break;
 342              		.loc 1 157 0
 343 034c BAE0     		b	.L1
 344              	.L14:
 158:..\src/command_processing.c **** 
 159:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 160:..\src/command_processing.c **** 
 161:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 162:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 345              		.loc 1 162 0
 346 034e 114B     		ldr	r3, .L48+4
 347 0350 1B88     		ldrh	r3, [r3]
 348 0352 BB61     		str	r3, [r7, #24]
 349              	.LBB10:
 350              	.LBB11:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 351              		.loc 2 792 0
 352 0354 BB69     		ldr	r3, [r7, #24]
 353              		.syntax unified
 354              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 355 0356 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 24


 356              	@ 0 "" 2
 357              		.thumb
 358              		.syntax unified
 359 0358 BB60     		str	r3, [r7, #8]
 360              		.loc 2 793 0
 361 035a BB68     		ldr	r3, [r7, #8]
 362              	.LBE11:
 363              	.LBE10:
 364              		.loc 1 162 0
 365 035c 9BB2     		uxth	r3, r3
 366 035e 1846     		mov	r0, r3
 367 0360 FFF7FEFF 		bl	manage_param_list
 163:..\src/command_processing.c ****             break;
 368              		.loc 1 163 0
 369 0364 AEE0     		b	.L1
 370              	.L5:
 164:..\src/command_processing.c **** 
 165:..\src/command_processing.c **** //=================================================================     CMD_PING
 166:..\src/command_processing.c ****             
 167:..\src/command_processing.c ****         case CMD_PING:
 168:..\src/command_processing.c ****             cmd_ping();
 371              		.loc 1 168 0
 372 0366 FFF7FEFF 		bl	cmd_ping
 169:..\src/command_processing.c ****             break;
 373              		.loc 1 169 0
 374 036a ABE0     		b	.L1
 375              	.L8:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 174:..\src/command_processing.c ****             cmd_store_params();
 376              		.loc 1 174 0
 377 036c FFF7FEFF 		bl	cmd_store_params
 175:..\src/command_processing.c ****             break;
 378              		.loc 1 175 0
 379 0370 A8E0     		b	.L1
 380              	.L9:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 178:..\src/command_processing.c **** 
 179:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 180:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 381              		.loc 1 180 0
 382 0372 3220     		movs	r0, #50
 383 0374 FFF7FEFF 		bl	memStore
 384 0378 0346     		mov	r3, r0
 385 037a 002B     		cmp	r3, #0
 386 037c 03D0     		beq	.L36
 181:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 387              		.loc 1 181 0
 388 037e 0120     		movs	r0, #1
 389 0380 FFF7FEFF 		bl	sendAcknowledgment
 182:..\src/command_processing.c ****             else
 183:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 184:..\src/command_processing.c ****             break;
 390              		.loc 1 184 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 25


 391 0384 9EE0     		b	.L1
 392              	.L36:
 183:..\src/command_processing.c ****             break;
 393              		.loc 1 183 0
 394 0386 0020     		movs	r0, #0
 395 0388 FFF7FEFF 		bl	sendAcknowledgment
 396              		.loc 1 184 0
 397 038c 9AE0     		b	.L1
 398              	.L49:
 399 038e 00BF     		.align	2
 400              	.L48:
 401 0390 00000000 		.word	g_rx
 402 0394 01000000 		.word	g_rx+1
 403              	.L10:
 185:..\src/command_processing.c **** 
 186:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 187:..\src/command_processing.c **** 
 188:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 189:..\src/command_processing.c ****             if(memRestore())
 404              		.loc 1 189 0
 405 0398 FFF7FEFF 		bl	memRestore
 406 039c 0346     		mov	r3, r0
 407 039e 002B     		cmp	r3, #0
 408 03a0 03D0     		beq	.L38
 190:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 409              		.loc 1 190 0
 410 03a2 0120     		movs	r0, #1
 411 03a4 FFF7FEFF 		bl	sendAcknowledgment
 191:..\src/command_processing.c ****             else
 192:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 193:..\src/command_processing.c ****             break;
 412              		.loc 1 193 0
 413 03a8 8CE0     		b	.L1
 414              	.L38:
 192:..\src/command_processing.c ****             break;
 415              		.loc 1 192 0
 416 03aa 0020     		movs	r0, #0
 417 03ac FFF7FEFF 		bl	sendAcknowledgment
 418              		.loc 1 193 0
 419 03b0 88E0     		b	.L1
 420              	.L13:
 194:..\src/command_processing.c **** 
 195:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 196:..\src/command_processing.c **** 
 197:..\src/command_processing.c ****         case CMD_INIT_MEM:            
 198:..\src/command_processing.c ****             if(memInit())
 421              		.loc 1 198 0
 422 03b2 FFF7FEFF 		bl	memInit
 423 03b6 0346     		mov	r3, r0
 424 03b8 002B     		cmp	r3, #0
 425 03ba 03D0     		beq	.L40
 199:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 426              		.loc 1 199 0
 427 03bc 0120     		movs	r0, #1
 428 03be FFF7FEFF 		bl	sendAcknowledgment
 200:..\src/command_processing.c ****             else
 201:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 26


 202:..\src/command_processing.c ****             break;
 429              		.loc 1 202 0
 430 03c2 7FE0     		b	.L1
 431              	.L40:
 201:..\src/command_processing.c ****             break;
 432              		.loc 1 201 0
 433 03c4 0020     		movs	r0, #0
 434 03c6 FFF7FEFF 		bl	sendAcknowledgment
 435              		.loc 1 202 0
 436 03ca 7BE0     		b	.L1
 437              	.L12:
 203:..\src/command_processing.c **** 
 204:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 205:..\src/command_processing.c **** 
 206:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 207:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 208:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 438              		.loc 1 208 0
 439 03cc 0120     		movs	r0, #1
 440 03ce FFF7FEFF 		bl	sendAcknowledgment
 209:..\src/command_processing.c ****             CyDelay(1000);
 441              		.loc 1 209 0
 442 03d2 4FF47A70 		mov	r0, #1000
 443 03d6 FFF7FEFF 		bl	CyDelay
 210:..\src/command_processing.c ****             FTDI_ENABLE_Write(0x00);
 444              		.loc 1 210 0
 445 03da 0020     		movs	r0, #0
 446 03dc FFF7FEFF 		bl	FTDI_ENABLE_Write
 211:..\src/command_processing.c ****             CyDelay(1000);
 447              		.loc 1 211 0
 448 03e0 4FF47A70 		mov	r0, #1000
 449 03e4 FFF7FEFF 		bl	CyDelay
 212:..\src/command_processing.c ****             Bootloadable_Load();
 450              		.loc 1 212 0
 451 03e8 FFF7FEFF 		bl	Bootloadable_Load
 213:..\src/command_processing.c ****             break;
 452              		.loc 1 213 0
 453 03ec 6AE0     		b	.L1
 454              	.L15:
 214:..\src/command_processing.c **** 
 215:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 216:..\src/command_processing.c **** 
 217:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 218:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 455              		.loc 1 218 0
 456 03ee 374B     		ldr	r3, .L50
 457 03f0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 458 03f2 1B02     		lsls	r3, r3, #8
 459 03f4 1AB2     		sxth	r2, r3
 460 03f6 354B     		ldr	r3, .L50
 461 03f8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 462 03fa 1BB2     		sxth	r3, r3
 463 03fc 1343     		orrs	r3, r3, r2
 464 03fe 1AB2     		sxth	r2, r3
 465 0400 334B     		ldr	r3, .L50+4
 466 0402 5A80     		strh	r2, [r3, #2]	@ movhi
 219:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 27


 467              		.loc 1 219 0
 468 0404 314B     		ldr	r3, .L50
 469 0406 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 470 0408 1B02     		lsls	r3, r3, #8
 471 040a 1AB2     		sxth	r2, r3
 472 040c 2F4B     		ldr	r3, .L50
 473 040e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 474 0410 1BB2     		sxth	r3, r3
 475 0412 1343     		orrs	r3, r3, r2
 476 0414 1AB2     		sxth	r2, r3
 477 0416 2E4B     		ldr	r3, .L50+4
 478 0418 9A80     		strh	r2, [r3, #4]	@ movhi
 220:..\src/command_processing.c ****             //calib.speed = *((int16 *) &g_rx.buffer[1]);
 221:..\src/command_processing.c ****             //calib.repetitions = *((int16 *) &g_rx.buffer[3]);
 222:..\src/command_processing.c ****             
 223:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 479              		.loc 1 223 0
 480 041a 2D4B     		ldr	r3, .L50+4
 481 041c B3F90230 		ldrsh	r3, [r3, #2]
 482 0420 B3F1FF3F 		cmp	r3, #-1
 483 0424 0FD1     		bne	.L42
 484              		.loc 1 223 0 is_stmt 0 discriminator 1
 485 0426 2A4B     		ldr	r3, .L50+4
 486 0428 B3F90430 		ldrsh	r3, [r3, #4]
 487 042c B3F1FF3F 		cmp	r3, #-1
 488 0430 09D1     		bne	.L42
 224:..\src/command_processing.c ****                 calib.enabled = FALSE;
 489              		.loc 1 224 0 is_stmt 1
 490 0432 274B     		ldr	r3, .L50+4
 491 0434 0022     		movs	r2, #0
 492 0436 1A70     		strb	r2, [r3]
 225:..\src/command_processing.c ****                 calib.speed = 0;
 493              		.loc 1 225 0
 494 0438 254B     		ldr	r3, .L50+4
 495 043a 0022     		movs	r2, #0
 496 043c 5A80     		strh	r2, [r3, #2]	@ movhi
 226:..\src/command_processing.c ****                 calib.repetitions = 0;
 497              		.loc 1 226 0
 498 043e 244B     		ldr	r3, .L50+4
 499 0440 0022     		movs	r2, #0
 500 0442 9A80     		strh	r2, [r3, #4]	@ movhi
 227:..\src/command_processing.c ****                 break;
 501              		.loc 1 227 0
 502 0444 3EE0     		b	.L1
 503              	.L42:
 228:..\src/command_processing.c ****             }
 229:..\src/command_processing.c ****             // Speed & repetitions saturations
 230:..\src/command_processing.c ****             if (calib.speed < 0) {
 504              		.loc 1 230 0
 505 0446 224B     		ldr	r3, .L50+4
 506 0448 B3F90230 		ldrsh	r3, [r3, #2]
 507 044c 002B     		cmp	r3, #0
 508 044e 03DA     		bge	.L43
 231:..\src/command_processing.c ****                 calib.speed = 0;
 509              		.loc 1 231 0
 510 0450 1F4B     		ldr	r3, .L50+4
 511 0452 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 28


 512 0454 5A80     		strh	r2, [r3, #2]	@ movhi
 513 0456 07E0     		b	.L44
 514              	.L43:
 232:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 515              		.loc 1 232 0
 516 0458 1D4B     		ldr	r3, .L50+4
 517 045a B3F90230 		ldrsh	r3, [r3, #2]
 518 045e C82B     		cmp	r3, #200
 519 0460 02DD     		ble	.L44
 233:..\src/command_processing.c ****                 calib.speed = 200;
 520              		.loc 1 233 0
 521 0462 1B4B     		ldr	r3, .L50+4
 522 0464 C822     		movs	r2, #200
 523 0466 5A80     		strh	r2, [r3, #2]	@ movhi
 524              	.L44:
 234:..\src/command_processing.c ****             }
 235:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 525              		.loc 1 235 0
 526 0468 194B     		ldr	r3, .L50+4
 527 046a B3F90430 		ldrsh	r3, [r3, #4]
 528 046e 002B     		cmp	r3, #0
 529 0470 02DA     		bge	.L45
 236:..\src/command_processing.c ****                 calib.repetitions = 0;
 530              		.loc 1 236 0
 531 0472 174B     		ldr	r3, .L50+4
 532 0474 0022     		movs	r2, #0
 533 0476 9A80     		strh	r2, [r3, #4]	@ movhi
 534              	.L45:
 237:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 238:..\src/command_processing.c ****                 calib.repetitions = 32767;
 239:..\src/command_processing.c ****             }
 240:..\src/command_processing.c ****             
 241:..\src/command_processing.c ****             g_refNew.pos = 0;
 535              		.loc 1 241 0
 536 0478 164B     		ldr	r3, .L50+8
 537 047a 0022     		movs	r2, #0
 538 047c 1A60     		str	r2, [r3]
 242:..\src/command_processing.c ****             calib.enabled = TRUE;
 539              		.loc 1 242 0
 540 047e 144B     		ldr	r3, .L50+4
 541 0480 0122     		movs	r2, #1
 542 0482 1A70     		strb	r2, [r3]
 243:..\src/command_processing.c ****          
 244:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 543              		.loc 1 244 0
 544 0484 0120     		movs	r0, #1
 545 0486 FFF7FEFF 		bl	sendAcknowledgment
 245:..\src/command_processing.c ****             break;
 546              		.loc 1 245 0
 547 048a 1BE0     		b	.L1
 548              	.L28:
 246:..\src/command_processing.c ****             
 247:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 248:..\src/command_processing.c **** 
 249:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 250:..\src/command_processing.c ****             cmd_get_imu_readings();
 549              		.loc 1 250 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 29


 550 048c FFF7FEFF 		bl	cmd_get_imu_readings
 251:..\src/command_processing.c ****             break; 
 551              		.loc 1 251 0
 552 0490 18E0     		b	.L1
 553              	.L29:
 252:..\src/command_processing.c ****             
 253:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_PARAM
 254:..\src/command_processing.c **** 
 255:..\src/command_processing.c ****         case CMD_GET_IMU_PARAM:
 256:..\src/command_processing.c ****             get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 554              		.loc 1 256 0
 555 0492 114B     		ldr	r3, .L50+12
 556 0494 1B88     		ldrh	r3, [r3]
 557 0496 7B61     		str	r3, [r7, #20]
 558              	.LBB12:
 559              	.LBB13:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 560              		.loc 2 792 0
 561 0498 7B69     		ldr	r3, [r7, #20]
 562              		.syntax unified
 563              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 564 049a 5BBA     		rev16 r3, r3
 565              	@ 0 "" 2
 566              		.thumb
 567              		.syntax unified
 568 049c 7B60     		str	r3, [r7, #4]
 569              		.loc 2 793 0
 570 049e 7B68     		ldr	r3, [r7, #4]
 571              	.LBE13:
 572              	.LBE12:
 573              		.loc 1 256 0
 574 04a0 9BB2     		uxth	r3, r3
 575 04a2 1846     		mov	r0, r3
 576 04a4 FFF7FEFF 		bl	get_IMU_param_list
 257:..\src/command_processing.c ****             break;             
 577              		.loc 1 257 0
 578 04a8 0CE0     		b	.L1
 579              	.L30:
 258:..\src/command_processing.c ****             
 259:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_CONF
 260:..\src/command_processing.c **** 
 261:..\src/command_processing.c ****         case CMD_GET_ENCODER_CONF:
 262:..\src/command_processing.c ****             cmd_get_encoder_map();
 580              		.loc 1 262 0
 581 04aa FFF7FEFF 		bl	cmd_get_encoder_map
 263:..\src/command_processing.c ****             break; 
 582              		.loc 1 263 0
 583 04ae 09E0     		b	.L1
 584              	.L31:
 264:..\src/command_processing.c **** 
 265:..\src/command_processing.c **** //=====================================================     CMD_GET_ENCODER_RAW
 266:..\src/command_processing.c **** 
 267:..\src/command_processing.c ****         case CMD_GET_ENCODER_RAW:
 268:..\src/command_processing.c ****             cmd_get_encoder_raw();
 585              		.loc 1 268 0
 586 04b0 FFF7FEFF 		bl	cmd_get_encoder_raw
 269:..\src/command_processing.c ****             break; 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 30


 587              		.loc 1 269 0
 588 04b4 06E0     		b	.L1
 589              	.L32:
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_CONF
 272:..\src/command_processing.c **** 
 273:..\src/command_processing.c ****         case CMD_GET_ADC_CONF:
 274:..\src/command_processing.c ****             cmd_get_ADC_map();
 590              		.loc 1 274 0
 591 04b6 FFF7FEFF 		bl	cmd_get_ADC_map
 275:..\src/command_processing.c ****             break; 
 592              		.loc 1 275 0
 593 04ba 03E0     		b	.L1
 594              	.L33:
 276:..\src/command_processing.c ****             
 277:..\src/command_processing.c **** //=====================================================     CMD_GET_ADC_RAW
 278:..\src/command_processing.c **** 
 279:..\src/command_processing.c ****         case CMD_GET_ADC_RAW:
 280:..\src/command_processing.c ****             cmd_get_ADC_raw();
 595              		.loc 1 280 0
 596 04bc FFF7FEFF 		bl	cmd_get_ADC_raw
 281:..\src/command_processing.c ****             break; 
 597              		.loc 1 281 0
 598 04c0 00E0     		b	.L1
 599              	.L47:
 282:..\src/command_processing.c ****             
 283:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 284:..\src/command_processing.c ****         default:
 285:..\src/command_processing.c ****             break;
 600              		.loc 1 285 0
 601 04c2 00BF     		nop
 602              	.L1:
 286:..\src/command_processing.c **** 
 287:..\src/command_processing.c ****     }
 288:..\src/command_processing.c **** }  
 603              		.loc 1 288 0
 604 04c4 2037     		adds	r7, r7, #32
 605              		.cfi_def_cfa_offset 8
 606 04c6 BD46     		mov	sp, r7
 607              		.cfi_def_cfa_register 13
 608              		@ sp needed
 609 04c8 80BD     		pop	{r7, pc}
 610              	.L51:
 611 04ca 00BF     		.align	2
 612              	.L50:
 613 04cc 00000000 		.word	g_rx
 614 04d0 00000000 		.word	calib
 615 04d4 00000000 		.word	g_refNew
 616 04d8 01000000 		.word	g_rx+1
 617              		.cfi_endproc
 618              	.LFE64:
 619              		.size	commProcess, .-commProcess
 620              		.section	.text.infoSend,"ax",%progbits
 621              		.align	2
 622              		.global	infoSend
 623              		.thumb
 624              		.thumb_func
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 31


 625              		.type	infoSend, %function
 626              	infoSend:
 627              	.LFB65:
 289:..\src/command_processing.c **** 
 290:..\src/command_processing.c **** //==============================================================================
 291:..\src/command_processing.c **** //                                                                     INFO SEND
 292:..\src/command_processing.c **** //==============================================================================
 293:..\src/command_processing.c **** 
 294:..\src/command_processing.c **** void infoSend(void){
 628              		.loc 1 294 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 1504
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632 0000 80B5     		push	{r7, lr}
 633              		.cfi_def_cfa_offset 8
 634              		.cfi_offset 7, -8
 635              		.cfi_offset 14, -4
 636 0002 ADF5BC6D 		sub	sp, sp, #1504
 637              		.cfi_def_cfa_offset 1512
 638 0006 00AF     		add	r7, sp, #0
 639              		.cfi_def_cfa_register 7
 295:..\src/command_processing.c ****     char packet_string[1500];
 296:..\src/command_processing.c ****     
 297:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 640              		.loc 1 297 0
 641 0008 3B1D     		adds	r3, r7, #4
 642 000a 1846     		mov	r0, r3
 643 000c FFF7FEFF 		bl	prepare_generic_info
 298:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 644              		.loc 1 298 0
 645 0010 3B1D     		adds	r3, r7, #4
 646 0012 1846     		mov	r0, r3
 647 0014 FFF7FEFF 		bl	UART_RS485_PutString
 299:..\src/command_processing.c **** }
 648              		.loc 1 299 0
 649 0018 00BF     		nop
 650 001a 07F5BC67 		add	r7, r7, #1504
 651              		.cfi_def_cfa_offset 8
 652 001e BD46     		mov	sp, r7
 653              		.cfi_def_cfa_register 13
 654              		@ sp needed
 655 0020 80BD     		pop	{r7, pc}
 656              		.cfi_endproc
 657              	.LFE65:
 658              		.size	infoSend, .-infoSend
 659 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 660              		.align	2
 661              		.global	infoGet
 662              		.thumb
 663              		.thumb_func
 664              		.type	infoGet, %function
 665              	infoGet:
 666              	.LFB66:
 300:..\src/command_processing.c **** 
 301:..\src/command_processing.c **** 
 302:..\src/command_processing.c **** //==============================================================================
 303:..\src/command_processing.c **** //                                                              COMMAND GET INFO
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 32


 304:..\src/command_processing.c **** //==============================================================================
 305:..\src/command_processing.c **** 
 306:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 667              		.loc 1 306 0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 4008
 670              		@ frame_needed = 1, uses_anonymous_args = 0
 671 0000 80B5     		push	{r7, lr}
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 ADF6A87D 		subw	sp, sp, #4008
 676              		.cfi_def_cfa_offset 4016
 677 0006 00AF     		add	r7, sp, #0
 678              		.cfi_def_cfa_register 7
 679 0008 0246     		mov	r2, r0
 680 000a BB1D     		adds	r3, r7, #6
 681 000c 1A80     		strh	r2, [r3]	@ movhi
 307:..\src/command_processing.c ****     char packet_string[4000] = "";
 682              		.loc 1 307 0
 683 000e 07F10803 		add	r3, r7, #8
 684 0012 0022     		movs	r2, #0
 685 0014 1A60     		str	r2, [r3]
 686 0016 0433     		adds	r3, r3, #4
 687 0018 40F69C72 		movw	r2, #3996
 688 001c 0021     		movs	r1, #0
 689 001e 1846     		mov	r0, r3
 690 0020 FFF7FEFF 		bl	memset
 308:..\src/command_processing.c ****     
 309:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 310:..\src/command_processing.c **** 
 311:..\src/command_processing.c ****     switch (info_type) {
 691              		.loc 1 311 0
 692 0024 BB1D     		adds	r3, r7, #6
 693 0026 1B88     		ldrh	r3, [r3]
 694 0028 002B     		cmp	r3, #0
 695 002a 02D0     		beq	.L55
 696 002c 012B     		cmp	r3, #1
 697 002e 0DD0     		beq	.L56
 312:..\src/command_processing.c ****         case INFO_ALL:
 313:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 314:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 315:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 316:..\src/command_processing.c ****             break;
 317:..\src/command_processing.c ****         case CYCLES_INFO:
 318:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 319:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 320:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 321:..\src/command_processing.c ****             break;
 322:..\src/command_processing.c ****         default:
 323:..\src/command_processing.c ****             break;
 698              		.loc 1 323 0
 699 0030 19E0     		b	.L57
 700              	.L55:
 313:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 701              		.loc 1 313 0
 702 0032 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 33


 703 0036 1846     		mov	r0, r3
 704 0038 FFF7FEFF 		bl	prepare_generic_info
 314:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 705              		.loc 1 314 0
 706 003c FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 315:..\src/command_processing.c ****             break;
 707              		.loc 1 315 0
 708 0040 07F10803 		add	r3, r7, #8
 709 0044 1846     		mov	r0, r3
 710 0046 FFF7FEFF 		bl	UART_RS485_PutString
 316:..\src/command_processing.c ****         case CYCLES_INFO:
 711              		.loc 1 316 0
 712 004a 0CE0     		b	.L57
 713              	.L56:
 318:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 714              		.loc 1 318 0
 715 004c 07F10803 		add	r3, r7, #8
 716 0050 1846     		mov	r0, r3
 717 0052 FFF7FEFF 		bl	prepare_counter_info
 319:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 718              		.loc 1 319 0
 719 0056 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 320:..\src/command_processing.c ****             break;
 720              		.loc 1 320 0
 721 005a 07F10803 		add	r3, r7, #8
 722 005e 1846     		mov	r0, r3
 723 0060 FFF7FEFF 		bl	UART_RS485_PutString
 321:..\src/command_processing.c ****         default:
 724              		.loc 1 321 0
 725 0064 00BF     		nop
 726              	.L57:
 324:..\src/command_processing.c ****     }
 325:..\src/command_processing.c **** }
 727              		.loc 1 325 0 discriminator 1
 728 0066 00BF     		nop
 729 0068 07F6A877 		addw	r7, r7, #4008
 730              		.cfi_def_cfa_offset 8
 731 006c BD46     		mov	sp, r7
 732              		.cfi_def_cfa_register 13
 733              		@ sp needed
 734 006e 80BD     		pop	{r7, pc}
 735              		.cfi_endproc
 736              	.LFE66:
 737              		.size	infoGet, .-infoGet
 738              		.section	.rodata
 739              		.align	2
 740              	.LC52:
 741 0000 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 741      204E6F6E 
 741      650A3120 
 741      2D3E204C 
 741      6F772028 
 742 0030 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 742      74657220 
 742      72656164 
 742      290A3220 
 742      2D3E2048 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 34


 743 0060 62697420 		.ascii	"bit register read)\012\000"
 743      72656769 
 743      73746572 
 743      20726561 
 743      64290A00 
 744              		.global	__aeabi_i2f
 745              		.global	__aeabi_fdiv
 746              		.align	2
 747              	.LC54:
 748 0074 20557362 		.ascii	" Usb\000"
 748      00
 749 0079 000000   		.align	2
 750              	.LC55:
 751 007c 2048616E 		.ascii	" Handle\000"
 751      646C6500 
 752              		.align	2
 753              	.LC56:
 754 0084 20454D47 		.ascii	" EMG proportional\000"
 754      2070726F 
 754      706F7274 
 754      696F6E61 
 754      6C00
 755 0096 0000     		.align	2
 756              	.LC57:
 757 0098 20454D47 		.ascii	" EMG integral\000"
 757      20696E74 
 757      65677261 
 757      6C00
 758 00a6 0000     		.align	2
 759              	.LC58:
 760 00a8 20454D47 		.ascii	" EMG FCFS\000"
 760      20464346 
 760      5300
 761 00b2 0000     		.align	2
 762              	.LC59:
 763 00b4 20454D47 		.ascii	" EMG FCFS Advanced\000"
 763      20464346 
 763      53204164 
 763      76616E63 
 763      656400
 764 00c7 00       		.align	2
 765              	.LC60:
 766 00c8 20506F73 		.ascii	" Position\000"
 766      6974696F 
 766      6E00
 767 00d2 0000     		.align	2
 768              	.LC61:
 769 00d4 2050574D 		.ascii	" PWM\000"
 769      00
 770 00d9 000000   		.align	2
 771              	.LC62:
 772 00dc 20437572 		.ascii	" Current\000"
 772      72656E74 
 772      00
 773 00e5 000000   		.align	2
 774              	.LC63:
 775 00e8 20506F73 		.ascii	" Position and Current\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 35


 775      6974696F 
 775      6E20616E 
 775      64204375 
 775      7272656E 
 776 00fe 0000     		.align	2
 777              	.LC64:
 778 0100 20594553 		.ascii	" YES\000\000"
 778      0000
 779 0106 0000     		.align	2
 780              	.LC65:
 781 0108 204E4F00 		.ascii	" NO\000\000"
 781      00
 782 010d 000000   		.align	2
 783              	.LC66:
 784 0110 20526967 		.ascii	" Right\000\000"
 784      68740000 
 785              		.align	2
 786              	.LC67:
 787 0118 204C6566 		.ascii	" Left\000\000"
 787      740000
 788 011f 00       		.align	2
 789              	.LC68:
 790 0120 204F4646 		.ascii	" OFF\000\000"
 790      0000
 791 0126 0000     		.align	2
 792              	.LC69:
 793 0128 204F4E00 		.ascii	" ON\000\000"
 793      00
 794 012d 000000   		.align	2
 795              	.LC70:
 796 0130 204E6F6E 		.ascii	" None\000\000"
 796      650000
 797 0137 00       		.align	2
 798              	.LC71:
 799 0138 2053442F 		.ascii	" SD/RTC board\000\000"
 799      52544320 
 799      626F6172 
 799      640000
 800 0147 00       		.align	2
 801              	.LC72:
 802 0148 20576946 		.ascii	" WiFi board [N/A]\000\000"
 802      6920626F 
 802      61726420 
 802      5B4E2F41 
 802      5D0000
 803 015b 00       		.align	2
 804              	.LC73:
 805 015c 204F7468 		.ascii	" Other [N/A]\000\000"
 805      6572205B 
 805      4E2F415D 
 805      0000
 806 016a 0000     		.align	2
 807              	.LC74:
 808 016c 204C6F77 		.ascii	" Low\000\000"
 808      0000
 809 0172 0000     		.align	2
 810              	.LC75:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 36


 811 0174 20486967 		.ascii	" High\000\000"
 811      680000
 812 017b 00       		.align	2
 813              	.LC76:
 814 017c 204D4333 		.ascii	" MC33887 (Standard)\000\000"
 814      33383837 
 814      20285374 
 814      616E6461 
 814      72642900 
 815 0191 000000   		.align	2
 816              	.LC77:
 817 0194 20564E48 		.ascii	" VNH5019 (High power)\000\000"
 817      35303139 
 817      20284869 
 817      67682070 
 817      6F776572 
 818 01ab 00       		.align	2
 819              	.LC0:
 820 01ac 02       		.byte	2
 821 01ad 07       		.byte	7
 822 01ae 07       		.byte	7
 823 01af 00       		.byte	0
 824 01b0 00       		.byte	0
 825 01b1 00       		.byte	0
 826 01b2 02       		.byte	2
 827 01b3 03       		.byte	3
 828 01b4 07       		.byte	7
 829 01b5 00       		.byte	0
 830 01b6 05       		.byte	5
 831 01b7 05       		.byte	5
 832 01b8 03       		.byte	3
 833 01b9 04       		.byte	4
 834 01ba 00       		.byte	0
 835 01bb 06       		.byte	6
 836 01bc 02       		.byte	2
 837 01bd 00       		.byte	0
 838 01be 01       		.byte	1
 839 01bf 00       		.byte	0
 840 01c0 07       		.byte	7
 841 01c1 02       		.byte	2
 842 01c2 05       		.byte	5
 843 01c3 05       		.byte	5
 844 01c4 05       		.byte	5
 845 01c5 00       		.byte	0
 846 01c6 00       		.byte	0
 847 01c7 00       		.byte	0
 848 01c8 00       		.byte	0
 849 01c9 00       		.byte	0
 850 01ca 00       		.byte	0
 851 01cb 02       		.byte	2
 852 01cc 00       		.byte	0
 853 01cd 02       		.byte	2
 854 01ce 02       		.byte	2
 855 01cf 02       		.byte	2
 856 01d0 02       		.byte	2
 857 01d1 02       		.byte	2
 858 01d2 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 37


 859 01d3 00       		.byte	0
 860 01d4 00       		.byte	0
 861 01d5 00       		.byte	0
 862 01d6 0000     		.align	2
 863              	.LC1:
 864 01d8 03       		.byte	3
 865 01d9 01       		.byte	1
 866 01da 02       		.byte	2
 867 01db 03       		.byte	3
 868 01dc 03       		.byte	3
 869 01dd 03       		.byte	3
 870 01de 03       		.byte	3
 871 01df 03       		.byte	3
 872 01e0 03       		.byte	3
 873 01e1 04       		.byte	4
 874 01e2 05       		.byte	5
 875 01e3 06       		.byte	6
 876 01e4 03       		.byte	3
 877 01e5 07       		.byte	7
 878 01e6 05       		.byte	5
 879 01e7 05       		.byte	5
 880 01e8 08       		.byte	8
 881 01e9 08       		.byte	8
 882 01ea 0000     		.align	2
 883              	.LC2:
 884 01ec 31202D20 		.ascii	"1 - Device ID:\000"
 884      44657669 
 884      63652049 
 884      443A00
 885 01fb 00       		.align	2
 886              	.LC3:
 887 01fc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 887      506F7369 
 887      74696F6E 
 887      20504944 
 887      205B502C 
 888              		.align	2
 889              	.LC4:
 890 0218 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 890      43757272 
 890      656E7420 
 890      50494420 
 890      5B502C20 
 891 0233 00       		.align	2
 892              	.LC5:
 893 0234 34202D20 		.ascii	"4 - Startup Activation:\000"
 893      53746172 
 893      74757020 
 893      41637469 
 893      76617469 
 894              		.align	2
 895              	.LC6:
 896 024c 35202D20 		.ascii	"5 - Input mode:\000"
 896      496E7075 
 896      74206D6F 
 896      64653A00 
 897              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 38


 898              	.LC7:
 899 025c 36202D20 		.ascii	"6 - Control mode:\000"
 899      436F6E74 
 899      726F6C20 
 899      6D6F6465 
 899      3A00
 900 026e 0000     		.align	2
 901              	.LC8:
 902 0270 37202D20 		.ascii	"7 - Resolutions:\000"
 902      5265736F 
 902      6C757469 
 902      6F6E733A 
 902      00
 903 0281 000000   		.align	2
 904              	.LC9:
 905 0284 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 905      4D656173 
 905      7572656D 
 905      656E7420 
 905      4F666673 
 906 029d 000000   		.align	2
 907              	.LC10:
 908 02a0 39202D20 		.ascii	"9 - Multipliers:\000"
 908      4D756C74 
 908      69706C69 
 908      6572733A 
 908      00
 909 02b1 000000   		.align	2
 910              	.LC11:
 911 02b4 3130202D 		.ascii	"10 - Pos. limit active:\000"
 911      20506F73 
 911      2E206C69 
 911      6D697420 
 911      61637469 
 912              		.align	2
 913              	.LC12:
 914 02cc 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 914      20506F73 
 914      2E206C69 
 914      6D697473 
 914      205B696E 
 915 02e9 000000   		.align	2
 916              	.LC13:
 917 02ec 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 917      204D6178 
 917      20737465 
 917      7073205B 
 917      6E65672C 
 918 0307 00       		.align	2
 919              	.LC14:
 920 0308 3133202D 		.ascii	"13 - Current limit:\000"
 920      20437572 
 920      72656E74 
 920      206C696D 
 920      69743A00 
 921              		.align	2
 922              	.LC15:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 39


 923 031c 3134202D 		.ascii	"14 - EMG thresholds:\000"
 923      20454D47 
 923      20746872 
 923      6573686F 
 923      6C64733A 
 924 0331 000000   		.align	2
 925              	.LC16:
 926 0334 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 926      20454D47 
 926      2063616C 
 926      69627261 
 926      74696F6E 
 927 0355 000000   		.align	2
 928              	.LC17:
 929 0358 3136202D 		.ascii	"16 - EMG max values:\000"
 929      20454D47 
 929      206D6178 
 929      2076616C 
 929      7565733A 
 930 036d 000000   		.align	2
 931              	.LC18:
 932 0370 3137202D 		.ascii	"17 - EMG max speed:\000"
 932      20454D47 
 932      206D6178 
 932      20737065 
 932      65643A00 
 933              		.align	2
 934              	.LC19:
 935 0384 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 935      20416273 
 935      6F6C7574 
 935      6520656E 
 935      636F6465 
 936              		.align	2
 937              	.LC20:
 938 03a4 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 938      204D6F74 
 938      6F722068 
 938      616E646C 
 938      65207261 
 939 03bd 000000   		.align	2
 940              	.LC21:
 941 03c0 3230202D 		.ascii	"20 - PWM rescaling:\000"
 941      2050574D 
 941      20726573 
 941      63616C69 
 941      6E673A00 
 942              		.align	2
 943              	.LC22:
 944 03d4 3231202D 		.ascii	"21 - Current lookup:\000"
 944      20437572 
 944      72656E74 
 944      206C6F6F 
 944      6B75703A 
 945 03e9 000000   		.align	2
 946              	.LC23:
 947 03ec 3232202D 		.ascii	"22 - Date of maintenance [D/M/Y]:\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 40


 947      20446174 
 947      65206F66 
 947      206D6169 
 947      6E74656E 
 948 040e 0000     		.align	2
 949              	.LC24:
 950 0410 3233202D 		.ascii	"23 - Rest position:\000"
 950      20526573 
 950      7420706F 
 950      73697469 
 950      6F6E3A00 
 951              		.align	2
 952              	.LC25:
 953 0424 3234202D 		.ascii	"24 - Rest position time delay (ms):\000"
 953      20526573 
 953      7420706F 
 953      73697469 
 953      6F6E2074 
 954              		.align	2
 955              	.LC26:
 956 0448 3235202D 		.ascii	"25 - Rest vel closure (ticks/sec):\000"
 956      20526573 
 956      74207665 
 956      6C20636C 
 956      6F737572 
 957 046b 00       		.align	2
 958              	.LC27:
 959 046c 3236202D 		.ascii	"26 - Rest position enabled:\000"
 959      20526573 
 959      7420706F 
 959      73697469 
 959      6F6E2065 
 960              		.align	2
 961              	.LC28:
 962 0488 3237202D 		.ascii	"27 - EMG inversion:\000"
 962      20454D47 
 962      20696E76 
 962      65727369 
 962      6F6E3A00 
 963              		.align	2
 964              	.LC29:
 965 049c 3238202D 		.ascii	"28 - Hand side:\000"
 965      2048616E 
 965      64207369 
 965      64653A00 
 966              		.align	2
 967              	.LC30:
 968 04ac 3239202D 		.ascii	"29 - Read IMUs:\000"
 968      20526561 
 968      6420494D 
 968      55733A00 
 969              		.align	2
 970              	.LC31:
 971 04bc 3330202D 		.ascii	"30 - Read Expansion port:\000"
 971      20526561 
 971      64204578 
 971      70616E73 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 41


 971      696F6E20 
 972 04d6 0000     		.align	2
 973              	.LC32:
 974 04d8 3331202D 		.ascii	"31 - Reset counters:\000"
 974      20526573 
 974      65742063 
 974      6F756E74 
 974      6572733A 
 975 04ed 000000   		.align	2
 976              	.LC33:
 977 04f0 3332202D 		.ascii	"32 - Last checked Time [D/M/Y H:M:S]:\000"
 977      204C6173 
 977      74206368 
 977      65636B65 
 977      64205469 
 978 0516 0000     		.align	2
 979              	.LC34:
 980 0518 3333202D 		.ascii	"33 - SPI read delay (IMU):\000"
 980      20535049 
 980      20726561 
 980      64206465 
 980      6C617920 
 981 0533 00       		.align	2
 982              	.LC35:
 983 0534 3334202D 		.ascii	"34 - On board IMU conf. [a,g,m,q,t]:\000"
 983      204F6E20 
 983      626F6172 
 983      6420494D 
 983      5520636F 
 984 0559 000000   		.align	2
 985              	.LC36:
 986 055c 3335202D 		.ascii	"35 - Encoder line 0:\000"
 986      20456E63 
 986      6F646572 
 986      206C696E 
 986      6520303A 
 987 0571 000000   		.align	2
 988              	.LC37:
 989 0574 3336202D 		.ascii	"36 - Encoder line 1:\000"
 989      20456E63 
 989      6F646572 
 989      206C696E 
 989      6520313A 
 990 0589 000000   		.align	2
 991              	.LC38:
 992 058c 3337202D 		.ascii	"37 - ADC channel [1-6]:\000"
 992      20414443 
 992      20636861 
 992      6E6E656C 
 992      205B312D 
 993              		.align	2
 994              	.LC39:
 995 05a4 3338202D 		.ascii	"38 - ADC channel [7-12]:\000"
 995      20414443 
 995      20636861 
 995      6E6E656C 
 995      205B372D 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 42


 996 05bd 000000   		.align	2
 997              	.LC40:
 998 05c0 3339202D 		.ascii	"39 - Read additional ADC port:\000"
 998      20526561 
 998      64206164 
 998      64697469 
 998      6F6E616C 
 999 05df 00       		.align	2
 1000              	.LC41:
 1001 05e0 3430202D 		.ascii	"40 - Use second motor:\000"
 1001      20557365 
 1001      20736563 
 1001      6F6E6420 
 1001      6D6F746F 
 1002 05f7 00       		.align	2
 1003              	.LC42:
 1004 05f8 3431202D 		.ascii	"41 - Motor 1 driver type:\000"
 1004      204D6F74 
 1004      6F722031 
 1004      20647269 
 1004      76657220 
 1005 0612 0000     		.align	2
 1006              	.LC43:
 1007 0614 3432202D 		.ascii	"42 - Motor 2 driver type:\000"
 1007      204D6F74 
 1007      6F722032 
 1007      20647269 
 1007      76657220 
 1008 062e 0000     		.align	2
 1009              	.LC45:
 1010 0630 EC010000 		.word	.LC2
 1011 0634 FC010000 		.word	.LC3
 1012 0638 18020000 		.word	.LC4
 1013 063c 34020000 		.word	.LC5
 1014 0640 4C020000 		.word	.LC6
 1015 0644 5C020000 		.word	.LC7
 1016 0648 70020000 		.word	.LC8
 1017 064c 84020000 		.word	.LC9
 1018 0650 A0020000 		.word	.LC10
 1019 0654 B4020000 		.word	.LC11
 1020 0658 CC020000 		.word	.LC12
 1021 065c EC020000 		.word	.LC13
 1022 0660 08030000 		.word	.LC14
 1023 0664 1C030000 		.word	.LC15
 1024 0668 34030000 		.word	.LC16
 1025 066c 58030000 		.word	.LC17
 1026 0670 70030000 		.word	.LC18
 1027 0674 84030000 		.word	.LC19
 1028 0678 A4030000 		.word	.LC20
 1029 067c C0030000 		.word	.LC21
 1030 0680 D4030000 		.word	.LC22
 1031 0684 EC030000 		.word	.LC23
 1032 0688 10040000 		.word	.LC24
 1033 068c 24040000 		.word	.LC25
 1034 0690 48040000 		.word	.LC26
 1035 0694 6C040000 		.word	.LC27
 1036 0698 88040000 		.word	.LC28
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 43


 1037 069c 9C040000 		.word	.LC29
 1038 06a0 AC040000 		.word	.LC30
 1039 06a4 BC040000 		.word	.LC31
 1040 06a8 D8040000 		.word	.LC32
 1041 06ac F0040000 		.word	.LC33
 1042 06b0 18050000 		.word	.LC34
 1043 06b4 34050000 		.word	.LC35
 1044 06b8 5C050000 		.word	.LC36
 1045 06bc 74050000 		.word	.LC37
 1046 06c0 8C050000 		.word	.LC38
 1047 06c4 A4050000 		.word	.LC39
 1048 06c8 C0050000 		.word	.LC40
 1049 06cc E0050000 		.word	.LC41
 1050 06d0 F8050000 		.word	.LC42
 1051 06d4 14060000 		.word	.LC43
 1052              		.align	2
 1053              	.LC46:
 1054 06d8 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 1054      20557362 
 1054      0A31202D 
 1054      3E204861 
 1054      6E646C65 
 1055 0703 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 1055      20454D47 
 1055      20496E74 
 1055      65677261 
 1055      6C0A3420 
 1056 0730 20416476 		.ascii	" Advanced\012\000"
 1056      616E6365 
 1056      640A00
 1057 073b 00       		.align	2
 1058              	.LC47:
 1059 073c 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 1059      20506F73 
 1059      6974696F 
 1059      6E0A3120 
 1059      2D3E2050 
 1060 0766 6F736974 		.ascii	"osition and Current\012\000"
 1060      696F6E20 
 1060      616E6420 
 1060      43757272 
 1060      656E740A 
 1061 077b 00       		.space	1
 1062              		.align	2
 1063              	.LC48:
 1064 077c 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 1064      20446561 
 1064      63746976 
 1064      61746520 
 1064      5B4E4F5D 
 1065 07a6 0000     		.align	2
 1066              	.LC49:
 1067 07a8 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 1067      20526967 
 1067      68740A31 
 1067      202D3E20 
 1067      4C656674 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 44


 1068 07be 0000     		.align	2
 1069              	.LC50:
 1070 07c0 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012The board will reset\012\000"
 1070      204F4646 
 1070      0A31202D 
 1070      3E204F4E 
 1070      0A546865 
 1071 07e7 000000   		.space	3
 1072 07ea 0000     		.align	2
 1073              	.LC51:
 1074 07ec 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board ["
 1074      204E6F6E 
 1074      650A3120 
 1074      2D3E2053 
 1074      442F5254 
 1075 0819 4E2F415D 		.ascii	"N/A]\0123 -> Other [N/A]\012The board will reset\012"
 1075      0A33202D 
 1075      3E204F74 
 1075      68657220 
 1075      5B4E2F41 
 1076 0844 00       		.ascii	"\000"
 1077 0845 00       		.space	1
 1078 0846 0000     		.align	2
 1079              	.LC53:
 1080 0848 30202D3E 		.ascii	"0 -> MC33887 (Standard)\0121 -> VNH5019 (High power"
 1080      204D4333 
 1080      33383837 
 1080      20285374 
 1080      616E6461 
 1081 0878 290A5468 		.ascii	")\012The board will reset\012\000"
 1081      6520626F 
 1081      61726420 
 1081      77696C6C 
 1081      20726573 
 1082              		.section	.text.get_param_list,"ax",%progbits
 1083              		.align	2
 1084              		.global	get_param_list
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	get_param_list, %function
 1088              	get_param_list:
 1089              	.LFB67:
 326:..\src/command_processing.c **** 
 327:..\src/command_processing.c **** 
 328:..\src/command_processing.c **** //==============================================================================
 329:..\src/command_processing.c **** //                                                                GET PARAM LIST
 330:..\src/command_processing.c **** //==============================================================================
 331:..\src/command_processing.c **** 
 332:..\src/command_processing.c **** void get_param_list() {
 1090              		.loc 1 332 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 3880
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1095              		.cfi_def_cfa_offset 20
 1096              		.cfi_offset 4, -20
 1097              		.cfi_offset 5, -16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 45


 1098              		.cfi_offset 6, -12
 1099              		.cfi_offset 7, -8
 1100              		.cfi_offset 14, -4
 1101 0002 ADF62C7D 		subw	sp, sp, #3884
 1102              		.cfi_def_cfa_offset 3904
 1103 0006 00AF     		add	r7, sp, #0
 1104              		.cfi_def_cfa_register 7
 333:..\src/command_processing.c ****     
 334:..\src/command_processing.c ****     //Package to be sent variables
 335:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*8 + PARAM_BYTE_SLOT] = ""
 1105              		.loc 1 335 0
 1106 0008 07F56373 		add	r3, r7, #908
 1107 000c 0022     		movs	r2, #0
 1108 000e 1A60     		str	r2, [r3]
 1109 0010 0433     		adds	r3, r3, #4
 1110 0012 40F68232 		movw	r2, #2946
 1111 0016 0021     		movs	r1, #0
 1112 0018 1846     		mov	r0, r3
 1113 001a FFF7FEFF 		bl	memset
 336:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + PARAM_MENU_SLOT*8 + PARAM_BYTE_SLOT;
 1114              		.loc 1 336 0
 1115 001e 40F68633 		movw	r3, #2950
 1116 0022 A7F81A3F 		strh	r3, [r7, #3866]	@ movhi
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c ****     //Auxiliary variables
 339:..\src/command_processing.c ****     uint8 CYDATA i, j;
 340:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1117              		.loc 1 340 0
 1118 0026 0023     		movs	r3, #0
 1119 0028 87F8253F 		strb	r3, [r7, #3877]
 341:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1120              		.loc 1 341 0
 1121 002c 0023     		movs	r3, #0
 1122 002e 87F8243F 		strb	r3, [r7, #3876]
 342:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1123              		.loc 1 342 0
 1124 0032 0023     		movs	r3, #0
 1125 0034 87F8233F 		strb	r3, [r7, #3875]
 343:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 344:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1126              		.loc 1 344 0
 1127 0038 07F55673 		add	r3, r7, #856
 1128 003c 0022     		movs	r2, #0
 1129 003e 1A60     		str	r2, [r3]
 1130 0040 0433     		adds	r3, r3, #4
 1131 0042 2E22     		movs	r2, #46
 1132 0044 0021     		movs	r1, #0
 1133 0046 1846     		mov	r0, r3
 1134 0048 FFF7FEFF 		bl	memset
 345:..\src/command_processing.c ****     uint8* m_addr = (uint8*)&(c_mem.id);
 1135              		.loc 1 345 0
 1136 004c D24B     		ldr	r3, .L231
 1137 004e C7F81C3F 		str	r3, [r7, #3868]
 346:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1138              		.loc 1 346 0
 1139 0052 D7F81C3F 		ldr	r3, [r7, #3868]
 1140 0056 C7F8143F 		str	r3, [r7, #3860]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 46


 347:..\src/command_processing.c ****     float aux_float;
 348:..\src/command_processing.c ****     int16 aux_int16;
 349:..\src/command_processing.c ****     uint16 aux_uint16;
 350:..\src/command_processing.c ****     int32 aux_int32;
 351:..\src/command_processing.c ****     uint32 aux_uint32;
 352:..\src/command_processing.c **** 
 353:..\src/command_processing.c ****     // Arrays
 354:..\src/command_processing.c ****     const uint8 TYPES[NUM_OF_PARAMS] = {
 1141              		.loc 1 354 0
 1142 005a 07F54773 		add	r3, r7, #796
 1143 005e CF4A     		ldr	r2, .L231+4
 1144 0060 1446     		mov	r4, r2
 1145 0062 1E46     		mov	r6, r3
 1146 0064 04F1200E 		add	lr, r4, #32
 1147              	.L59:
 1148 0068 3546     		mov	r5, r6
 1149 006a 2346     		mov	r3, r4
 1150 006c 1868     		ldr	r0, [r3]	@ unaligned
 1151 006e 5968     		ldr	r1, [r3, #4]	@ unaligned
 1152 0070 9A68     		ldr	r2, [r3, #8]	@ unaligned
 1153 0072 DB68     		ldr	r3, [r3, #12]	@ unaligned
 1154 0074 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 1155 0076 1034     		adds	r4, r4, #16
 1156 0078 1036     		adds	r6, r6, #16
 1157 007a 7445     		cmp	r4, lr
 1158 007c F4D1     		bne	.L59
 1159 007e 3346     		mov	r3, r6
 1160 0080 2246     		mov	r2, r4
 1161 0082 1068     		ldr	r0, [r2]	@ unaligned
 1162 0084 5168     		ldr	r1, [r2, #4]	@ unaligned
 1163 0086 03C3     		stmia	r3!, {r0, r1}
 1164 0088 1289     		ldrh	r2, [r2, #8]	@ unaligned
 1165 008a 1A80     		strh	r2, [r3]	@ unaligned
 355:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16
 356:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UIN
 357:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, TYPE_UINT8, TYPE_INT32, TYPE_INT32
 358:..\src/command_processing.c ****         TYPE_INT32, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, 
 359:..\src/command_processing.c ****         TYPE_FLAG, TYPE_UINT8, TYPE_UINT8, TYPE_UINT8, TYPE_UINT8, TYPE_UINT8, TYPE_FLAG, TYPE_FLAG
 360:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG
 361:..\src/command_processing.c ****     };
 362:..\src/command_processing.c **** 
 363:..\src/command_processing.c ****     const uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 1166              		.loc 1 363 0
 1167 008c 07F53C73 		add	r3, r7, #752
 1168 0090 0122     		movs	r2, #1
 1169 0092 1A70     		strb	r2, [r3]
 1170 0094 07F53C73 		add	r3, r7, #752
 1171 0098 0322     		movs	r2, #3
 1172 009a 5A70     		strb	r2, [r3, #1]
 1173 009c 07F53C73 		add	r3, r7, #752
 1174 00a0 0322     		movs	r2, #3
 1175 00a2 9A70     		strb	r2, [r3, #2]
 1176 00a4 07F53C73 		add	r3, r7, #752
 1177 00a8 0122     		movs	r2, #1
 1178 00aa DA70     		strb	r2, [r3, #3]
 1179 00ac 07F53C73 		add	r3, r7, #752
 1180 00b0 0122     		movs	r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 47


 1181 00b2 1A71     		strb	r2, [r3, #4]
 1182 00b4 07F53C73 		add	r3, r7, #752
 1183 00b8 0122     		movs	r2, #1
 1184 00ba 5A71     		strb	r2, [r3, #5]
 1185 00bc 07F53C73 		add	r3, r7, #752
 1186 00c0 0322     		movs	r2, #3
 1187 00c2 9A71     		strb	r2, [r3, #6]
 1188 00c4 07F53C73 		add	r3, r7, #752
 1189 00c8 0322     		movs	r2, #3
 1190 00ca DA71     		strb	r2, [r3, #7]
 1191 00cc 07F53C73 		add	r3, r7, #752
 1192 00d0 0322     		movs	r2, #3
 1193 00d2 1A72     		strb	r2, [r3, #8]
 1194 00d4 07F53C73 		add	r3, r7, #752
 1195 00d8 0122     		movs	r2, #1
 1196 00da 5A72     		strb	r2, [r3, #9]
 1197 00dc 07F53C73 		add	r3, r7, #752
 1198 00e0 0222     		movs	r2, #2
 1199 00e2 9A72     		strb	r2, [r3, #10]
 1200 00e4 07F53C73 		add	r3, r7, #752
 1201 00e8 0222     		movs	r2, #2
 1202 00ea DA72     		strb	r2, [r3, #11]
 1203 00ec 07F53C73 		add	r3, r7, #752
 1204 00f0 0122     		movs	r2, #1
 1205 00f2 1A73     		strb	r2, [r3, #12]
 1206 00f4 07F53C73 		add	r3, r7, #752
 1207 00f8 0222     		movs	r2, #2
 1208 00fa 5A73     		strb	r2, [r3, #13]
 1209 00fc 07F53C73 		add	r3, r7, #752
 1210 0100 0122     		movs	r2, #1
 1211 0102 9A73     		strb	r2, [r3, #14]
 1212 0104 07F53C73 		add	r3, r7, #752
 1213 0108 0222     		movs	r2, #2
 1214 010a DA73     		strb	r2, [r3, #15]
 1215 010c 07F53C73 		add	r3, r7, #752
 1216 0110 0122     		movs	r2, #1
 1217 0112 1A74     		strb	r2, [r3, #16]
 1218 0114 07F53C73 		add	r3, r7, #752
 1219 0118 0122     		movs	r2, #1
 1220 011a 5A74     		strb	r2, [r3, #17]
 1221 011c 07F53C73 		add	r3, r7, #752
 1222 0120 0122     		movs	r2, #1
 1223 0122 9A74     		strb	r2, [r3, #18]
 1224 0124 07F53C73 		add	r3, r7, #752
 1225 0128 0122     		movs	r2, #1
 1226 012a DA74     		strb	r2, [r3, #19]
 1227 012c 07F53C73 		add	r3, r7, #752
 1228 0130 0622     		movs	r2, #6
 1229 0132 1A75     		strb	r2, [r3, #20]
 1230 0134 07F53C73 		add	r3, r7, #752
 1231 0138 0322     		movs	r2, #3
 1232 013a 5A75     		strb	r2, [r3, #21]
 1233 013c 07F53C73 		add	r3, r7, #752
 1234 0140 0122     		movs	r2, #1
 1235 0142 9A75     		strb	r2, [r3, #22]
 1236 0144 07F53C73 		add	r3, r7, #752
 1237 0148 0122     		movs	r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 48


 1238 014a DA75     		strb	r2, [r3, #23]
 1239 014c 07F53C73 		add	r3, r7, #752
 1240 0150 0122     		movs	r2, #1
 1241 0152 1A76     		strb	r2, [r3, #24]
 1242 0154 07F53C73 		add	r3, r7, #752
 1243 0158 0122     		movs	r2, #1
 1244 015a 5A76     		strb	r2, [r3, #25]
 1245 015c 07F53C73 		add	r3, r7, #752
 1246 0160 0122     		movs	r2, #1
 1247 0162 9A76     		strb	r2, [r3, #26]
 1248 0164 07F53C73 		add	r3, r7, #752
 1249 0168 0122     		movs	r2, #1
 1250 016a DA76     		strb	r2, [r3, #27]
 1251 016c 07F53C73 		add	r3, r7, #752
 1252 0170 0122     		movs	r2, #1
 1253 0172 1A77     		strb	r2, [r3, #28]
 1254 0174 07F53C73 		add	r3, r7, #752
 1255 0178 0122     		movs	r2, #1
 1256 017a 5A77     		strb	r2, [r3, #29]
 1257 017c 07F53C73 		add	r3, r7, #752
 1258 0180 0122     		movs	r2, #1
 1259 0182 9A77     		strb	r2, [r3, #30]
 1260 0184 07F53C73 		add	r3, r7, #752
 1261 0188 0622     		movs	r2, #6
 1262 018a DA77     		strb	r2, [r3, #31]
 1263 018c 07F53C73 		add	r3, r7, #752
 1264 0190 0122     		movs	r2, #1
 1265 0192 83F82020 		strb	r2, [r3, #32]
 1266 0196 07F53C73 		add	r3, r7, #752
 1267 019a 0522     		movs	r2, #5
 1268 019c 83F82120 		strb	r2, [r3, #33]
 364:..\src/command_processing.c ****         1, 3, 3, 1, 1, 1, 3, 3,
 365:..\src/command_processing.c ****         3, 1, 2, 2, 1, 2, 1, 2,
 366:..\src/command_processing.c ****         1, 1, 1, 1, 6, 3, 1, 1,
 367:..\src/command_processing.c ****         1, 1, 1, 1, 1, 1, 1, 6,
 368:..\src/command_processing.c ****         1, 5, N_Encoder_Line_Connected[0], N_Encoder_Line_Connected[1], 6, 6, 1, 1,
 1269              		.loc 1 368 0
 1270 01a0 7F4B     		ldr	r3, .L231+8
 1271 01a2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 363:..\src/command_processing.c ****         1, 3, 3, 1, 1, 1, 3, 3,
 1272              		.loc 1 363 0
 1273 01a4 07F53C73 		add	r3, r7, #752
 1274 01a8 83F82220 		strb	r2, [r3, #34]
 1275              		.loc 1 368 0
 1276 01ac 7C4B     		ldr	r3, .L231+8
 1277 01ae 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 363:..\src/command_processing.c ****         1, 3, 3, 1, 1, 1, 3, 3,
 1278              		.loc 1 363 0
 1279 01b0 07F53C73 		add	r3, r7, #752
 1280 01b4 83F82320 		strb	r2, [r3, #35]
 1281 01b8 07F53C73 		add	r3, r7, #752
 1282 01bc 0622     		movs	r2, #6
 1283 01be 83F82420 		strb	r2, [r3, #36]
 1284 01c2 07F53C73 		add	r3, r7, #752
 1285 01c6 0622     		movs	r2, #6
 1286 01c8 83F82520 		strb	r2, [r3, #37]
 1287 01cc 07F53C73 		add	r3, r7, #752
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 49


 1288 01d0 0122     		movs	r2, #1
 1289 01d2 83F82620 		strb	r2, [r3, #38]
 1290 01d6 07F53C73 		add	r3, r7, #752
 1291 01da 0122     		movs	r2, #1
 1292 01dc 83F82720 		strb	r2, [r3, #39]
 1293 01e0 07F53C73 		add	r3, r7, #752
 1294 01e4 0122     		movs	r2, #1
 1295 01e6 83F82820 		strb	r2, [r3, #40]
 1296 01ea 07F53C73 		add	r3, r7, #752
 1297 01ee 0122     		movs	r2, #1
 1298 01f0 83F82920 		strb	r2, [r3, #41]
 369:..\src/command_processing.c ****         1, 1
 370:..\src/command_processing.c ****     };
 371:..\src/command_processing.c **** 
 372:..\src/command_processing.c ****     const uint8 NUM_MENU[18] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3, 7, 5, 5, 8, 8};
 1299              		.loc 1 372 0
 1300 01f4 07F53773 		add	r3, r7, #732
 1301 01f8 6A4A     		ldr	r2, .L231+12
 1302 01fa 1C46     		mov	r4, r3
 1303 01fc 1546     		mov	r5, r2
 1304 01fe 2868     		ldr	r0, [r5]	@ unaligned
 1305 0200 6968     		ldr	r1, [r5, #4]	@ unaligned
 1306 0202 AA68     		ldr	r2, [r5, #8]	@ unaligned
 1307 0204 EB68     		ldr	r3, [r5, #12]	@ unaligned
 1308 0206 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1309 0208 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 1310 020a 2380     		strh	r3, [r4]	@ unaligned
 373:..\src/command_processing.c ****     
 374:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 1311              		.loc 1 374 0
 1312 020c 07F50D73 		add	r3, r7, #564
 1313 0210 654A     		ldr	r2, .L231+16
 1314 0212 1846     		mov	r0, r3
 1315 0214 1146     		mov	r1, r2
 1316 0216 A823     		movs	r3, #168
 1317 0218 1A46     		mov	r2, r3
 1318 021a FFF7FEFF 		bl	memcpy
 375:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 376:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 377:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 378:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 379:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 380:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Date of maintenance [D/M/Y]:", "23 - Rest position:", "24 - R
 381:..\src/command_processing.c ****         "25 - Rest vel closure (ticks/sec):", "26 - Rest position enabled:", "27 - EMG inversion:",
 382:..\src/command_processing.c ****         "29 - Read IMUs:", "30 - Read Expansion port:", "31 - Reset counters:", "32 - Last checked 
 383:..\src/command_processing.c ****         "33 - SPI read delay (IMU):", "34 - On board IMU conf. [a,g,m,q,t]:", "35 - Encoder line 0:
 384:..\src/command_processing.c ****         "37 - ADC channel [1-6]:", "38 - ADC channel [7-12]:", "39 - Read additional ADC port:", "4
 385:..\src/command_processing.c ****         "41 - Motor 1 driver type:", "42 - Motor 2 driver type:"
 386:..\src/command_processing.c ****     };
 387:..\src/command_processing.c **** 
 388:..\src/command_processing.c ****     //Parameters menu
 389:..\src/command_processing.c ****     const char input_mode_menu[99] = "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integr
 1319              		.loc 1 389 0
 1320 021e 07F5E873 		add	r3, r7, #464
 1321 0222 624A     		ldr	r2, .L231+20
 1322 0224 1846     		mov	r0, r3
 1323 0226 1146     		mov	r1, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 50


 1324 0228 6323     		movs	r3, #99
 1325 022a 1A46     		mov	r2, r3
 1326 022c FFF7FEFF 		bl	memcpy
 390:..\src/command_processing.c ****     const char control_mode_menu[64] = "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Cu
 1327              		.loc 1 390 0
 1328 0230 07F5C876 		add	r6, r7, #400
 1329 0234 5E4B     		ldr	r3, .L231+24
 1330 0236 3446     		mov	r4, r6
 1331 0238 1D46     		mov	r5, r3
 1332 023a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1333 023c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1334 023e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1335 0240 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1336 0242 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1337 0244 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1338 0246 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1339 024a 07C4     		stmia	r4!, {r0, r1, r2}
 1340 024c 2380     		strh	r3, [r4]	@ movhi
 1341 024e 0234     		adds	r4, r4, #2
 1342 0250 1B0C     		lsrs	r3, r3, #16
 1343 0252 2370     		strb	r3, [r4]
 1344 0254 0023     		movs	r3, #0
 1345 0256 86F83F30 		strb	r3, [r6, #63]
 391:..\src/command_processing.c ****     const char yes_no_menu[42] = "0 -> Deactivate [NO]\n1 -> Activate [YES]\n";
 1346              		.loc 1 391 0
 1347 025a 07F5B273 		add	r3, r7, #356
 1348 025e 554A     		ldr	r2, .L231+28
 1349 0260 1C46     		mov	r4, r3
 1350 0262 1546     		mov	r5, r2
 1351 0264 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1352 0266 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1353 0268 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1354 026a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1355 026c 95E80700 		ldmia	r5, {r0, r1, r2}
 1356 0270 03C4     		stmia	r4!, {r0, r1}
 1357 0272 2280     		strh	r2, [r4]	@ movhi
 392:..\src/command_processing.c ****     const char right_left_menu[22] = "0 -> Right\n1 -> Left\n";
 1358              		.loc 1 392 0
 1359 0274 07F5A673 		add	r3, r7, #332
 1360 0278 4F4A     		ldr	r2, .L231+32
 1361 027a 1C46     		mov	r4, r3
 1362 027c 1546     		mov	r5, r2
 1363 027e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1364 0280 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1365 0282 95E80300 		ldmia	r5, {r0, r1}
 1366 0286 2060     		str	r0, [r4]
 1367 0288 0434     		adds	r4, r4, #4
 1368 028a 2180     		strh	r1, [r4]	@ movhi
 393:..\src/command_processing.c ****     const char on_off_menu[42] = "0 -> OFF\n1 -> ON\nThe board will reset\n";
 1369              		.loc 1 393 0
 1370 028c 07F59076 		add	r6, r7, #288
 1371 0290 4A4B     		ldr	r3, .L231+36
 1372 0292 3446     		mov	r4, r6
 1373 0294 1D46     		mov	r5, r3
 1374 0296 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1375 0298 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1376 029a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 51


 1377 029c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1378 029e 95E80300 		ldmia	r5, {r0, r1}
 1379 02a2 2060     		str	r0, [r4]
 1380 02a4 0434     		adds	r4, r4, #4
 1381 02a6 2180     		strh	r1, [r4]	@ movhi
 1382 02a8 0234     		adds	r4, r4, #2
 1383 02aa 0B0C     		lsrs	r3, r1, #16
 1384 02ac 2370     		strb	r3, [r4]
 1385 02ae 06F12703 		add	r3, r6, #39
 1386 02b2 0022     		movs	r2, #0
 1387 02b4 1A80     		strh	r2, [r3]	@ unaligned
 1388 02b6 9A70     		strb	r2, [r3, #2]
 394:..\src/command_processing.c ****     const char exp_port_menu[90] = "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board [N/A]\n3 -> Other
 1389              		.loc 1 394 0
 1390 02b8 07F1C404 		add	r4, r7, #196
 1391 02bc 404B     		ldr	r3, .L231+40
 1392 02be 2046     		mov	r0, r4
 1393 02c0 1946     		mov	r1, r3
 1394 02c2 5923     		movs	r3, #89
 1395 02c4 1A46     		mov	r2, r3
 1396 02c6 FFF7FEFF 		bl	memcpy
 1397 02ca 0023     		movs	r3, #0
 1398 02cc 84F85930 		strb	r3, [r4, #89]
 395:..\src/command_processing.c ****     char spi_delay_menu[118]    = ""; 
 1399              		.loc 1 395 0
 1400 02d0 07F14C03 		add	r3, r7, #76
 1401 02d4 0022     		movs	r2, #0
 1402 02d6 1A60     		str	r2, [r3]
 1403 02d8 0433     		adds	r3, r3, #4
 1404 02da 7222     		movs	r2, #114
 1405 02dc 0021     		movs	r1, #0
 1406 02de 1846     		mov	r0, r3
 1407 02e0 FFF7FEFF 		bl	memset
 396:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 1408              		.loc 1 396 0
 1409 02e4 07F14C00 		add	r0, r7, #76
 1410 02e8 6423     		movs	r3, #100
 1411 02ea 0A22     		movs	r2, #10
 1412 02ec 3549     		ldr	r1, .L231+44
 1413 02ee FFF7FEFF 		bl	sprintf
 397:..\src/command_processing.c ****     const char motor_driver_type_menu[72] = "0 -> MC33887 (Standard)\n1 -> VNH5019 (High power)\nTh
 1414              		.loc 1 397 0
 1415 02f2 3B1D     		adds	r3, r7, #4
 1416 02f4 344A     		ldr	r2, .L231+48
 1417 02f6 1846     		mov	r0, r3
 1418 02f8 1146     		mov	r1, r2
 1419 02fa 4823     		movs	r3, #72
 1420 02fc 1A46     		mov	r2, r3
 1421 02fe FFF7FEFF 		bl	memcpy
 398:..\src/command_processing.c ****     
 399:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1422              		.loc 1 399 0
 1423 0302 07F56373 		add	r3, r7, #908
 1424 0306 0C22     		movs	r2, #12
 1425 0308 1A70     		strb	r2, [r3]
 400:..\src/command_processing.c ****     packet_data[1] = NUM_OF_DEV_PARAMS;
 1426              		.loc 1 400 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 52


 1427 030a 07F56373 		add	r3, r7, #908
 1428 030e 2222     		movs	r2, #34
 1429 0310 5A70     		strb	r2, [r3, #1]
 401:..\src/command_processing.c ****     
 402:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_DEV_PARAMS; idx++) {
 1430              		.loc 1 402 0
 1431 0312 0023     		movs	r3, #0
 1432 0314 87F8253F 		strb	r3, [r7, #3877]
 1433 0318 01F0AAB9 		b	.L60
 1434              	.L209:
 403:..\src/command_processing.c ****         
 404:..\src/command_processing.c ****         // Add parameter type and size to packet
 405:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1435              		.loc 1 405 0
 1436 031c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1437 0320 3222     		movs	r2, #50
 1438 0322 02FB03F3 		mul	r3, r2, r3
 1439 0326 0233     		adds	r3, r3, #2
 1440 0328 97F8252F 		ldrb	r2, [r7, #3877]	@ zero_extendqisi2
 1441 032c 07F54771 		add	r1, r7, #796
 1442 0330 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1443 0332 07F56372 		add	r2, r7, #908
 1444 0336 D154     		strb	r1, [r2, r3]
 406:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1445              		.loc 1 406 0
 1446 0338 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1447 033c 3222     		movs	r2, #50
 1448 033e 02FB03F3 		mul	r3, r2, r3
 1449 0342 0333     		adds	r3, r3, #3
 1450 0344 97F8252F 		ldrb	r2, [r7, #3877]	@ zero_extendqisi2
 1451 0348 07F53C71 		add	r1, r7, #752
 1452 034c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1453 034e 07F56372 		add	r2, r7, #908
 1454 0352 D154     		strb	r1, [r2, r3]
 407:..\src/command_processing.c ****         
 408:..\src/command_processing.c ****         // Find size of data
 409:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1455              		.loc 1 409 0
 1456 0354 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1457 0358 07F54772 		add	r2, r7, #796
 1458 035c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1459 035e 072B     		cmp	r3, #7
 1460 0360 38D8     		bhi	.L61
 1461 0362 01A2     		adr	r2, .L63
 1462 0364 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1463              		.p2align 2
 1464              	.L63:
 1465 0368 89030000 		.word	.L62+1
 1466 036c 89030000 		.word	.L62+1
 1467 0370 89030000 		.word	.L62+1
 1468 0374 91030000 		.word	.L64+1
 1469 0378 91030000 		.word	.L64+1
 1470 037c CD030000 		.word	.L65+1
 1471 0380 CD030000 		.word	.L65+1
 1472 0384 CD030000 		.word	.L65+1
 1473              		.p2align 1
 1474              	.L62:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 53


 410:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8:
 411:..\src/command_processing.c ****                 sod = 1; break;
 1475              		.loc 1 411 0
 1476 0388 0123     		movs	r3, #1
 1477 038a 87F8233F 		strb	r3, [r7, #3875]
 1478 038e 21E0     		b	.L61
 1479              	.L64:
 412:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 413:..\src/command_processing.c ****                 sod = 2; break;
 1480              		.loc 1 413 0
 1481 0390 0223     		movs	r3, #2
 1482 0392 87F8233F 		strb	r3, [r7, #3875]
 1483 0396 1DE0     		b	.L61
 1484              	.L232:
 1485              		.align	2
 1486              	.L231:
 1487 0398 A1000000 		.word	c_mem+161
 1488 039c AC010000 		.word	.LC0
 1489 03a0 00000000 		.word	N_Encoder_Line_Connected
 1490 03a4 D8010000 		.word	.LC1
 1491 03a8 30060000 		.word	.LC45
 1492 03ac D8060000 		.word	.LC46
 1493 03b0 3C070000 		.word	.LC47
 1494 03b4 7C070000 		.word	.LC48
 1495 03b8 A8070000 		.word	.LC49
 1496 03bc C0070000 		.word	.LC50
 1497 03c0 EC070000 		.word	.LC51
 1498 03c4 00000000 		.word	.LC52
 1499 03c8 48080000 		.word	.LC53
 1500              	.L65:
 414:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 415:..\src/command_processing.c ****                 sod = 4; break;
 1501              		.loc 1 415 0
 1502 03cc 0423     		movs	r3, #4
 1503 03ce 87F8233F 		strb	r3, [r7, #3875]
 1504 03d2 00BF     		nop
 1505              	.L61:
 416:..\src/command_processing.c ****         }
 417:..\src/command_processing.c ****         
 418:..\src/command_processing.c ****         // Add parameter data to packet
 419:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1506              		.loc 1 419 0
 1507 03d4 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1508 03d8 07F54772 		add	r2, r7, #796
 1509 03dc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1510 03de 072B     		cmp	r3, #7
 1511 03e0 00F2B785 		bhi	.L66
 1512 03e4 01A2     		adr	r2, .L68
 1513 03e6 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1514 03ea 00BF     		.p2align 2
 1515              	.L68:
 1516 03ec 0D040000 		.word	.L67+1
 1517 03f0 73040000 		.word	.L69+1
 1518 03f4 0D040000 		.word	.L67+1
 1519 03f8 D9040000 		.word	.L70+1
 1520 03fc 07060000 		.word	.L71+1
 1521 0400 AB060000 		.word	.L72+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 54


 1522 0404 8F080000 		.word	.L73+1
 1523 0408 31090000 		.word	.L74+1
 1524              		.p2align 1
 1525              	.L67:
 420:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_UINT8:
 421:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1526              		.loc 1 421 0
 1527 040c 0023     		movs	r3, #0
 1528 040e 87F8273F 		strb	r3, [r7, #3879]
 1529 0412 23E0     		b	.L75
 1530              	.L76:
 422:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1531              		.loc 1 422 0 discriminator 3
 1532 0414 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1533 0418 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 1534 041c 02FB03F3 		mul	r3, r2, r3
 1535 0420 1A46     		mov	r2, r3
 1536 0422 D7F81C3F 		ldr	r3, [r7, #3868]
 1537 0426 1344     		add	r3, r3, r2
 1538 0428 C7F8143F 		str	r3, [r7, #3860]
 423:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1539              		.loc 1 423 0 discriminator 3
 1540 042c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1541 0430 3222     		movs	r2, #50
 1542 0432 02FB03F3 		mul	r3, r2, r3
 1543 0436 1A1D     		adds	r2, r3, #4
 1544 0438 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1545 043c 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1546 0440 01FB03F3 		mul	r3, r1, r3
 1547 0444 1344     		add	r3, r3, r2
 1548 0446 D7F8142F 		ldr	r2, [r7, #3860]
 1549 044a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1550 044c 07F56372 		add	r2, r7, #908
 1551 0450 D154     		strb	r1, [r2, r3]
 421:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1552              		.loc 1 421 0 discriminator 3
 1553 0452 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1554 0456 0133     		adds	r3, r3, #1
 1555 0458 87F8273F 		strb	r3, [r7, #3879]
 1556              	.L75:
 421:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1557              		.loc 1 421 0 is_stmt 0 discriminator 1
 1558 045c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1559 0460 07F53C72 		add	r2, r7, #752
 1560 0464 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1561 0466 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 1562 046a 9A42     		cmp	r2, r3
 1563 046c D2D3     		bcc	.L76
 424:..\src/command_processing.c ****                 }
 425:..\src/command_processing.c ****                 break;                
 1564              		.loc 1 425 0 is_stmt 1
 1565 046e 00F070BD 		b	.L66
 1566              	.L69:
 426:..\src/command_processing.c ****             case TYPE_INT8:
 427:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1567              		.loc 1 427 0
 1568 0472 0023     		movs	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 55


 1569 0474 87F8273F 		strb	r3, [r7, #3879]
 1570 0478 23E0     		b	.L77
 1571              	.L78:
 428:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1572              		.loc 1 428 0 discriminator 3
 1573 047a 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1574 047e 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 1575 0482 02FB03F3 		mul	r3, r2, r3
 1576 0486 1A46     		mov	r2, r3
 1577 0488 D7F81C3F 		ldr	r3, [r7, #3868]
 1578 048c 1344     		add	r3, r3, r2
 1579 048e C7F8143F 		str	r3, [r7, #3860]
 429:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1580              		.loc 1 429 0 discriminator 3
 1581 0492 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1582 0496 3222     		movs	r2, #50
 1583 0498 02FB03F3 		mul	r3, r2, r3
 1584 049c 1A1D     		adds	r2, r3, #4
 1585 049e 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1586 04a2 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1587 04a6 01FB03F3 		mul	r3, r1, r3
 1588 04aa 1344     		add	r3, r3, r2
 1589 04ac D7F8142F 		ldr	r2, [r7, #3860]
 1590 04b0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1591 04b2 07F56372 		add	r2, r7, #908
 1592 04b6 D154     		strb	r1, [r2, r3]
 427:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1593              		.loc 1 427 0 discriminator 3
 1594 04b8 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1595 04bc 0133     		adds	r3, r3, #1
 1596 04be 87F8273F 		strb	r3, [r7, #3879]
 1597              	.L77:
 427:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1598              		.loc 1 427 0 is_stmt 0 discriminator 1
 1599 04c2 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1600 04c6 07F53C72 		add	r2, r7, #752
 1601 04ca D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1602 04cc 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 1603 04d0 9A42     		cmp	r2, r3
 1604 04d2 D2D3     		bcc	.L78
 430:..\src/command_processing.c ****                 }
 431:..\src/command_processing.c ****                 break;
 1605              		.loc 1 431 0 is_stmt 1
 1606 04d4 00F03DBD 		b	.L66
 1607              	.L70:
 432:..\src/command_processing.c ****             case TYPE_INT16:
 433:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1608              		.loc 1 433 0
 1609 04d8 0023     		movs	r3, #0
 1610 04da 87F8273F 		strb	r3, [r7, #3879]
 1611 04de 86E0     		b	.L79
 1612              	.L86:
 434:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1613              		.loc 1 434 0
 1614 04e0 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1615 04e4 072B     		cmp	r3, #7
 1616 04e6 3ED1     		bne	.L80
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 56


 435:..\src/command_processing.c ****                         aux_int16 = (c_mem.m_off[i] >> c_mem.res[i]);
 1617              		.loc 1 435 0
 1618 04e8 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1619 04ec CA4A     		ldr	r2, .L233
 1620 04ee 3633     		adds	r3, r3, #54
 1621 04f0 9B00     		lsls	r3, r3, #2
 1622 04f2 1344     		add	r3, r3, r2
 1623 04f4 5B68     		ldr	r3, [r3, #4]
 1624 04f6 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 1625 04fa C749     		ldr	r1, .L233
 1626 04fc 0A44     		add	r2, r2, r1
 1627 04fe 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 1628 0502 1341     		asrs	r3, r3, r2
 1629 0504 1AB2     		sxth	r2, r3
 1630 0506 07F25233 		addw	r3, r7, #850
 1631 050a 1A80     		strh	r2, [r3]	@ movhi
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1632              		.loc 1 436 0
 1633 050c 0023     		movs	r3, #0
 1634 050e 87F8263F 		strb	r3, [r7, #3878]
 1635 0512 21E0     		b	.L81
 1636              	.L82:
 437:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1637              		.loc 1 437 0 discriminator 3
 1638 0514 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1639 0518 3222     		movs	r2, #50
 1640 051a 02FB03F3 		mul	r3, r2, r3
 1641 051e 1A1D     		adds	r2, r3, #4
 1642 0520 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1643 0524 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1644 0528 01FB03F3 		mul	r3, r1, r3
 1645 052c 1A44     		add	r2, r2, r3
 1646 052e 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1647 0532 1A44     		add	r2, r2, r3
 1648 0534 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1649 0538 D31A     		subs	r3, r2, r3
 1650 053a 013B     		subs	r3, r3, #1
 1651 053c 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1652 0540 07F25231 		addw	r1, r7, #850
 1653 0544 0A44     		add	r2, r2, r1
 1654 0546 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1655 0548 07F56372 		add	r2, r7, #908
 1656 054c D154     		strb	r1, [r2, r3]
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1657              		.loc 1 436 0 discriminator 3
 1658 054e 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1659 0552 0133     		adds	r3, r3, #1
 1660 0554 87F8263F 		strb	r3, [r7, #3878]
 1661              	.L81:
 436:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1662              		.loc 1 436 0 is_stmt 0 discriminator 1
 1663 0558 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1664 055c 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1665 0560 9A42     		cmp	r2, r3
 1666 0562 D7D3     		bcc	.L82
 1667 0564 3EE0     		b	.L83
 1668              	.L80:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 57


 438:..\src/command_processing.c ****                         }
 439:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = (int16) (c
 440:..\src/command_processing.c ****                     }
 441:..\src/command_processing.c ****                     else {
 442:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1669              		.loc 1 442 0 is_stmt 1
 1670 0566 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1671 056a 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 1672 056e 02FB03F3 		mul	r3, r2, r3
 1673 0572 1A46     		mov	r2, r3
 1674 0574 D7F81C3F 		ldr	r3, [r7, #3868]
 1675 0578 1344     		add	r3, r3, r2
 1676 057a C7F8143F 		str	r3, [r7, #3860]
 443:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1677              		.loc 1 443 0
 1678 057e D7F8143F 		ldr	r3, [r7, #3860]
 1679 0582 B3F90020 		ldrsh	r2, [r3]
 1680 0586 07F25233 		addw	r3, r7, #850
 1681 058a 1A80     		strh	r2, [r3]	@ movhi
 444:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1682              		.loc 1 444 0
 1683 058c 0023     		movs	r3, #0
 1684 058e 87F8263F 		strb	r3, [r7, #3878]
 1685 0592 21E0     		b	.L84
 1686              	.L85:
 445:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1687              		.loc 1 445 0 discriminator 3
 1688 0594 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1689 0598 3222     		movs	r2, #50
 1690 059a 02FB03F3 		mul	r3, r2, r3
 1691 059e 1A1D     		adds	r2, r3, #4
 1692 05a0 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1693 05a4 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1694 05a8 01FB03F3 		mul	r3, r1, r3
 1695 05ac 1A44     		add	r2, r2, r3
 1696 05ae 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1697 05b2 1A44     		add	r2, r2, r3
 1698 05b4 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1699 05b8 D31A     		subs	r3, r2, r3
 1700 05ba 013B     		subs	r3, r3, #1
 1701 05bc 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1702 05c0 07F25231 		addw	r1, r7, #850
 1703 05c4 0A44     		add	r2, r2, r1
 1704 05c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1705 05c8 07F56372 		add	r2, r7, #908
 1706 05cc D154     		strb	r1, [r2, r3]
 444:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1707              		.loc 1 444 0 discriminator 3
 1708 05ce 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1709 05d2 0133     		adds	r3, r3, #1
 1710 05d4 87F8263F 		strb	r3, [r7, #3878]
 1711              	.L84:
 444:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1712              		.loc 1 444 0 is_stmt 0 discriminator 1
 1713 05d8 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1714 05dc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1715 05e0 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 58


 1716 05e2 D7D3     		bcc	.L85
 1717              	.L83:
 433:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1718              		.loc 1 433 0 is_stmt 1 discriminator 2
 1719 05e4 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1720 05e8 0133     		adds	r3, r3, #1
 1721 05ea 87F8273F 		strb	r3, [r7, #3879]
 1722              	.L79:
 433:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1723              		.loc 1 433 0 is_stmt 0 discriminator 1
 1724 05ee 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1725 05f2 07F53C72 		add	r2, r7, #752
 1726 05f6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1727 05f8 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 1728 05fc 9A42     		cmp	r2, r3
 1729 05fe FFF46FAF 		bcc	.L86
 446:..\src/command_processing.c ****                         }
 447:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int16*)
 448:..\src/command_processing.c ****                     }
 449:..\src/command_processing.c ****                 }
 450:..\src/command_processing.c ****                 break;
 1730              		.loc 1 450 0 is_stmt 1
 1731 0602 00F0A6BC 		b	.L66
 1732              	.L71:
 451:..\src/command_processing.c ****             case TYPE_UINT16:
 452:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1733              		.loc 1 452 0
 1734 0606 0023     		movs	r3, #0
 1735 0608 87F8273F 		strb	r3, [r7, #3879]
 1736 060c 42E0     		b	.L87
 1737              	.L90:
 453:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1738              		.loc 1 453 0
 1739 060e 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1740 0612 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 1741 0616 02FB03F3 		mul	r3, r2, r3
 1742 061a 1A46     		mov	r2, r3
 1743 061c D7F81C3F 		ldr	r3, [r7, #3868]
 1744 0620 1344     		add	r3, r3, r2
 1745 0622 C7F8143F 		str	r3, [r7, #3860]
 454:..\src/command_processing.c ****                     aux_uint16 = *((uint16*)m_tmp);
 1746              		.loc 1 454 0
 1747 0626 D7F8143F 		ldr	r3, [r7, #3860]
 1748 062a 1A88     		ldrh	r2, [r3]
 1749 062c 07F55473 		add	r3, r7, #848
 1750 0630 1A80     		strh	r2, [r3]	@ movhi
 455:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1751              		.loc 1 455 0
 1752 0632 0023     		movs	r3, #0
 1753 0634 87F8263F 		strb	r3, [r7, #3878]
 1754 0638 21E0     		b	.L88
 1755              	.L89:
 456:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 1756              		.loc 1 456 0 discriminator 3
 1757 063a 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1758 063e 3222     		movs	r2, #50
 1759 0640 02FB03F3 		mul	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 59


 1760 0644 1A1D     		adds	r2, r3, #4
 1761 0646 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1762 064a 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1763 064e 01FB03F3 		mul	r3, r1, r3
 1764 0652 1A44     		add	r2, r2, r3
 1765 0654 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1766 0658 1A44     		add	r2, r2, r3
 1767 065a 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1768 065e D31A     		subs	r3, r2, r3
 1769 0660 013B     		subs	r3, r3, #1
 1770 0662 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1771 0666 07F55471 		add	r1, r7, #848
 1772 066a 0A44     		add	r2, r2, r1
 1773 066c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1774 066e 07F56372 		add	r2, r7, #908
 1775 0672 D154     		strb	r1, [r2, r3]
 455:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1776              		.loc 1 455 0 discriminator 3
 1777 0674 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1778 0678 0133     		adds	r3, r3, #1
 1779 067a 87F8263F 		strb	r3, [r7, #3878]
 1780              	.L88:
 455:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1781              		.loc 1 455 0 is_stmt 0 discriminator 1
 1782 067e 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1783 0682 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1784 0686 9A42     		cmp	r2, r3
 1785 0688 D7D3     		bcc	.L89
 452:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1786              		.loc 1 452 0 is_stmt 1 discriminator 2
 1787 068a 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1788 068e 0133     		adds	r3, r3, #1
 1789 0690 87F8273F 		strb	r3, [r7, #3879]
 1790              	.L87:
 452:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1791              		.loc 1 452 0 is_stmt 0 discriminator 1
 1792 0694 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1793 0698 07F53C72 		add	r2, r7, #752
 1794 069c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1795 069e 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 1796 06a2 9A42     		cmp	r2, r3
 1797 06a4 B3D3     		bcc	.L90
 457:..\src/command_processing.c ****                     }
 458:..\src/command_processing.c ****                     //*((uint16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint16*)m_
 459:..\src/command_processing.c ****                 }
 460:..\src/command_processing.c ****                 break;
 1798              		.loc 1 460 0 is_stmt 1
 1799 06a6 00F054BC 		b	.L66
 1800              	.L72:
 461:..\src/command_processing.c ****             case TYPE_INT32: 
 462:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1801              		.loc 1 462 0
 1802 06aa 0023     		movs	r3, #0
 1803 06ac 87F8273F 		strb	r3, [r7, #3879]
 1804 06b0 E2E0     		b	.L91
 1805              	.L104:
 463:..\src/command_processing.c ****                     switch (idx){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 60


 1806              		.loc 1 463 0
 1807 06b2 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1808 06b6 0A2B     		cmp	r3, #10
 1809 06b8 02D0     		beq	.L93
 1810 06ba 162B     		cmp	r3, #22
 1811 06bc 64D0     		beq	.L94
 1812 06be 94E0     		b	.L226
 1813              	.L93:
 464:..\src/command_processing.c ****                         case 10:    // POSITION LIMITS (param 11)
 465:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_inf >> c_mem.res[0]);
 1814              		.loc 1 465 0
 1815 06c0 554B     		ldr	r3, .L233
 1816 06c2 D3F8F830 		ldr	r3, [r3, #248]
 1817 06c6 544A     		ldr	r2, .L233
 1818 06c8 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 1819 06cc 43FA02F2 		asr	r2, r3, r2
 1820 06d0 07F55373 		add	r3, r7, #844
 1821 06d4 1A60     		str	r2, [r3]
 466:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1822              		.loc 1 466 0
 1823 06d6 0023     		movs	r3, #0
 1824 06d8 87F8263F 		strb	r3, [r7, #3878]
 1825 06dc 1AE0     		b	.L95
 1826              	.L96:
 467:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1827              		.loc 1 467 0 discriminator 3
 1828 06de 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1829 06e2 3222     		movs	r2, #50
 1830 06e4 02FB03F3 		mul	r3, r2, r3
 1831 06e8 1A1D     		adds	r2, r3, #4
 1832 06ea 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1833 06ee 1A44     		add	r2, r2, r3
 1834 06f0 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1835 06f4 D31A     		subs	r3, r2, r3
 1836 06f6 013B     		subs	r3, r3, #1
 1837 06f8 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1838 06fc 07F55371 		add	r1, r7, #844
 1839 0700 0A44     		add	r2, r2, r1
 1840 0702 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1841 0704 07F56372 		add	r2, r7, #908
 1842 0708 D154     		strb	r1, [r2, r3]
 466:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1843              		.loc 1 466 0 discriminator 3
 1844 070a 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1845 070e 0133     		adds	r3, r3, #1
 1846 0710 87F8263F 		strb	r3, [r7, #3878]
 1847              	.L95:
 466:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1848              		.loc 1 466 0 is_stmt 0 discriminator 1
 1849 0714 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1850 0718 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1851 071c 9A42     		cmp	r2, r3
 1852 071e DED3     		bcc	.L96
 468:..\src/command_processing.c ****                             }
 469:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_sup >> c_mem.res[0]);
 1853              		.loc 1 469 0 is_stmt 1
 1854 0720 3D4B     		ldr	r3, .L233
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 61


 1855 0722 D3F8FC30 		ldr	r3, [r3, #252]
 1856 0726 3C4A     		ldr	r2, .L233
 1857 0728 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 1858 072c 43FA02F2 		asr	r2, r3, r2
 1859 0730 07F55373 		add	r3, r7, #844
 1860 0734 1A60     		str	r2, [r3]
 470:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1861              		.loc 1 470 0
 1862 0736 0023     		movs	r3, #0
 1863 0738 87F8263F 		strb	r3, [r7, #3878]
 1864 073c 1DE0     		b	.L97
 1865              	.L98:
 471:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*
 1866              		.loc 1 471 0 discriminator 3
 1867 073e 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1868 0742 3222     		movs	r2, #50
 1869 0744 02FB03F3 		mul	r3, r2, r3
 1870 0748 1A1D     		adds	r2, r3, #4
 1871 074a 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1872 074e 1A44     		add	r2, r2, r3
 1873 0750 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1874 0754 1A44     		add	r2, r2, r3
 1875 0756 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1876 075a D31A     		subs	r3, r2, r3
 1877 075c 013B     		subs	r3, r3, #1
 1878 075e 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1879 0762 07F55371 		add	r1, r7, #844
 1880 0766 0A44     		add	r2, r2, r1
 1881 0768 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1882 076a 07F56372 		add	r2, r7, #908
 1883 076e D154     		strb	r1, [r2, r3]
 470:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1884              		.loc 1 470 0 discriminator 3
 1885 0770 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1886 0774 0133     		adds	r3, r3, #1
 1887 0776 87F8263F 		strb	r3, [r7, #3878]
 1888              	.L97:
 470:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1889              		.loc 1 470 0 is_stmt 0 discriminator 1
 1890 077a 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1891 077e 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1892 0782 9A42     		cmp	r2, r3
 1893 0784 DBD3     		bcc	.L98
 472:..\src/command_processing.c ****                             }
 473:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.pos_l
 474:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (c_mem
 475:..\src/command_processing.c ****                             break;
 1894              		.loc 1 475 0 is_stmt 1
 1895 0786 72E0     		b	.L99
 1896              	.L94:
 476:..\src/command_processing.c ****                         case 22:    // REST POSITION (param 22)
 477:..\src/command_processing.c ****                             aux_int32 = (c_mem.rest_pos >> c_mem.res[0]);
 1897              		.loc 1 477 0
 1898 0788 234B     		ldr	r3, .L233
 1899 078a D3F83831 		ldr	r3, [r3, #312]
 1900 078e 224A     		ldr	r2, .L233
 1901 0790 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 62


 1902 0794 43FA02F2 		asr	r2, r3, r2
 1903 0798 07F55373 		add	r3, r7, #844
 1904 079c 1A60     		str	r2, [r3]
 478:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1905              		.loc 1 478 0
 1906 079e 0023     		movs	r3, #0
 1907 07a0 87F8263F 		strb	r3, [r7, #3878]
 1908 07a4 1AE0     		b	.L100
 1909              	.L101:
 479:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1910              		.loc 1 479 0 discriminator 3
 1911 07a6 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1912 07aa 3222     		movs	r2, #50
 1913 07ac 02FB03F3 		mul	r3, r2, r3
 1914 07b0 1A1D     		adds	r2, r3, #4
 1915 07b2 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1916 07b6 1A44     		add	r2, r2, r3
 1917 07b8 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1918 07bc D31A     		subs	r3, r2, r3
 1919 07be 013B     		subs	r3, r3, #1
 1920 07c0 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1921 07c4 07F55371 		add	r1, r7, #844
 1922 07c8 0A44     		add	r2, r2, r1
 1923 07ca 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1924 07cc 07F56372 		add	r2, r7, #908
 1925 07d0 D154     		strb	r1, [r2, r3]
 478:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1926              		.loc 1 478 0 discriminator 3
 1927 07d2 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1928 07d6 0133     		adds	r3, r3, #1
 1929 07d8 87F8263F 		strb	r3, [r7, #3878]
 1930              	.L100:
 478:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1931              		.loc 1 478 0 is_stmt 0 discriminator 1
 1932 07dc 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1933 07e0 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1934 07e4 9A42     		cmp	r2, r3
 1935 07e6 DED3     		bcc	.L101
 480:..\src/command_processing.c ****                             }
 481:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.rest_
 482:..\src/command_processing.c ****                             break;
 1936              		.loc 1 482 0 is_stmt 1
 1937 07e8 41E0     		b	.L99
 1938              	.L226:
 483:..\src/command_processing.c ****                         default:
 484:..\src/command_processing.c ****                             m_tmp = m_addr + i*sod;
 1939              		.loc 1 484 0
 1940 07ea 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1941 07ee 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 1942 07f2 02FB03F3 		mul	r3, r2, r3
 1943 07f6 1A46     		mov	r2, r3
 1944 07f8 D7F81C3F 		ldr	r3, [r7, #3868]
 1945 07fc 1344     		add	r3, r3, r2
 1946 07fe C7F8143F 		str	r3, [r7, #3860]
 485:..\src/command_processing.c ****                             aux_int32 = *((int32*)m_tmp);
 1947              		.loc 1 485 0
 1948 0802 D7F8143F 		ldr	r3, [r7, #3860]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 63


 1949 0806 1A68     		ldr	r2, [r3]
 1950 0808 07F55373 		add	r3, r7, #844
 1951 080c 1A60     		str	r2, [r3]
 486:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1952              		.loc 1 486 0
 1953 080e 0023     		movs	r3, #0
 1954 0810 87F8263F 		strb	r3, [r7, #3878]
 1955 0814 24E0     		b	.L102
 1956              	.L234:
 1957 0816 00BF     		.align	2
 1958              	.L233:
 1959 0818 00000000 		.word	c_mem
 1960              	.L103:
 487:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 1961              		.loc 1 487 0 discriminator 3
 1962 081c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 1963 0820 3222     		movs	r2, #50
 1964 0822 02FB03F3 		mul	r3, r2, r3
 1965 0826 1A1D     		adds	r2, r3, #4
 1966 0828 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1967 082c 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 1968 0830 01FB03F3 		mul	r3, r1, r3
 1969 0834 1A44     		add	r2, r2, r3
 1970 0836 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1971 083a 1A44     		add	r2, r2, r3
 1972 083c 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1973 0840 D31A     		subs	r3, r2, r3
 1974 0842 013B     		subs	r3, r3, #1
 1975 0844 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1976 0848 07F55371 		add	r1, r7, #844
 1977 084c 0A44     		add	r2, r2, r1
 1978 084e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1979 0850 07F56372 		add	r2, r7, #908
 1980 0854 D154     		strb	r1, [r2, r3]
 486:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1981              		.loc 1 486 0 discriminator 3
 1982 0856 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 1983 085a 0133     		adds	r3, r3, #1
 1984 085c 87F8263F 		strb	r3, [r7, #3878]
 1985              	.L102:
 486:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1986              		.loc 1 486 0 is_stmt 0 discriminator 1
 1987 0860 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 1988 0864 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 1989 0868 9A42     		cmp	r2, r3
 1990 086a D7D3     		bcc	.L103
 488:..\src/command_processing.c ****                             }
 489:..\src/command_processing.c ****                             //*((int32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int
 490:..\src/command_processing.c ****                             break;
 1991              		.loc 1 490 0 is_stmt 1
 1992 086c 00BF     		nop
 1993              	.L99:
 462:..\src/command_processing.c ****                     switch (idx){
 1994              		.loc 1 462 0 discriminator 2
 1995 086e 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 1996 0872 0133     		adds	r3, r3, #1
 1997 0874 87F8273F 		strb	r3, [r7, #3879]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 64


 1998              	.L91:
 462:..\src/command_processing.c ****                     switch (idx){
 1999              		.loc 1 462 0 is_stmt 0 discriminator 1
 2000 0878 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2001 087c 07F53C72 		add	r2, r7, #752
 2002 0880 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2003 0882 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2004 0886 9A42     		cmp	r2, r3
 2005 0888 FFF413AF 		bcc	.L104
 491:..\src/command_processing.c ****                     }
 492:..\src/command_processing.c ****                 }
 493:..\src/command_processing.c ****                 break;
 2006              		.loc 1 493 0 is_stmt 1
 2007 088c 61E3     		b	.L66
 2008              	.L73:
 494:..\src/command_processing.c ****             case TYPE_UINT32: 
 495:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 2009              		.loc 1 495 0
 2010 088e 0023     		movs	r3, #0
 2011 0890 87F8273F 		strb	r3, [r7, #3879]
 2012 0894 42E0     		b	.L105
 2013              	.L108:
 496:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 2014              		.loc 1 496 0
 2015 0896 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2016 089a 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 2017 089e 02FB03F3 		mul	r3, r2, r3
 2018 08a2 1A46     		mov	r2, r3
 2019 08a4 D7F81C3F 		ldr	r3, [r7, #3868]
 2020 08a8 1344     		add	r3, r3, r2
 2021 08aa C7F8143F 		str	r3, [r7, #3860]
 497:..\src/command_processing.c ****                     aux_uint32 = *((uint32*)m_tmp);
 2022              		.loc 1 497 0
 2023 08ae D7F8143F 		ldr	r3, [r7, #3860]
 2024 08b2 1A68     		ldr	r2, [r3]
 2025 08b4 07F55273 		add	r3, r7, #840
 2026 08b8 1A60     		str	r2, [r3]
 498:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2027              		.loc 1 498 0
 2028 08ba 0023     		movs	r3, #0
 2029 08bc 87F8263F 		strb	r3, [r7, #3878]
 2030 08c0 21E0     		b	.L106
 2031              	.L107:
 499:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 2032              		.loc 1 499 0 discriminator 3
 2033 08c2 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2034 08c6 3222     		movs	r2, #50
 2035 08c8 02FB03F3 		mul	r3, r2, r3
 2036 08cc 1A1D     		adds	r2, r3, #4
 2037 08ce 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2038 08d2 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 2039 08d6 01FB03F3 		mul	r3, r1, r3
 2040 08da 1A44     		add	r2, r2, r3
 2041 08dc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2042 08e0 1A44     		add	r2, r2, r3
 2043 08e2 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 2044 08e6 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 65


 2045 08e8 013B     		subs	r3, r3, #1
 2046 08ea 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 2047 08ee 07F55271 		add	r1, r7, #840
 2048 08f2 0A44     		add	r2, r2, r1
 2049 08f4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2050 08f6 07F56372 		add	r2, r7, #908
 2051 08fa D154     		strb	r1, [r2, r3]
 498:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2052              		.loc 1 498 0 discriminator 3
 2053 08fc 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 2054 0900 0133     		adds	r3, r3, #1
 2055 0902 87F8263F 		strb	r3, [r7, #3878]
 2056              	.L106:
 498:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 2057              		.loc 1 498 0 is_stmt 0 discriminator 1
 2058 0906 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 2059 090a 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2060 090e 9A42     		cmp	r2, r3
 2061 0910 D7D3     		bcc	.L107
 495:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 2062              		.loc 1 495 0 is_stmt 1 discriminator 2
 2063 0912 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2064 0916 0133     		adds	r3, r3, #1
 2065 0918 87F8273F 		strb	r3, [r7, #3879]
 2066              	.L105:
 495:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 2067              		.loc 1 495 0 is_stmt 0 discriminator 1
 2068 091c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2069 0920 07F53C72 		add	r2, r7, #752
 2070 0924 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2071 0926 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2072 092a 9A42     		cmp	r2, r3
 2073 092c B3D3     		bcc	.L108
 500:..\src/command_processing.c ****                     }
 501:..\src/command_processing.c ****                     //*((uint32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint32*)m_
 502:..\src/command_processing.c ****                 }
 503:..\src/command_processing.c ****                 break;
 2074              		.loc 1 503 0 is_stmt 1
 2075 092e 10E3     		b	.L66
 2076              	.L74:
 504:..\src/command_processing.c ****                 
 505:..\src/command_processing.c ****             case TYPE_FLOAT:
 506:..\src/command_processing.c ****                 switch (idx) {
 2077              		.loc 1 506 0
 2078 0930 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2079 0934 012B     		cmp	r3, #1
 2080 0936 03D0     		beq	.L110
 2081 0938 022B     		cmp	r3, #2
 2082 093a 00F05B81 		beq	.L111
 2083 093e B6E2     		b	.L227
 2084              	.L110:
 507:..\src/command_processing.c ****                 
 508:..\src/command_processing.c ****                 case 1:     // POSITION PID (param 2)
 509:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 2085              		.loc 1 509 0
 2086 0940 D54B     		ldr	r3, .L235
 2087 0942 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 66


 2088 0946 032B     		cmp	r3, #3
 2089 0948 00F0AA80 		beq	.L112
 510:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p / 65536;
 2090              		.loc 1 510 0
 2091 094c D24B     		ldr	r3, .L235
 2092 094e D3F8A430 		ldr	r3, [r3, #164]
 2093 0952 1846     		mov	r0, r3
 2094 0954 FFF7FEFF 		bl	__aeabi_i2f
 2095 0958 0346     		mov	r3, r0
 2096 095a 4FF08F41 		mov	r1, #1199570944
 2097 095e 1846     		mov	r0, r3
 2098 0960 FFF7FEFF 		bl	__aeabi_fdiv
 2099 0964 0346     		mov	r3, r0
 2100 0966 1A46     		mov	r2, r3
 2101 0968 07F55573 		add	r3, r7, #852
 2102 096c 1A60     		str	r2, [r3]	@ float
 511:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2103              		.loc 1 511 0
 2104 096e 0023     		movs	r3, #0
 2105 0970 87F8273F 		strb	r3, [r7, #3879]
 2106 0974 1AE0     		b	.L113
 2107              	.L114:
 512:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2108              		.loc 1 512 0 discriminator 3
 2109 0976 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2110 097a 3222     		movs	r2, #50
 2111 097c 02FB03F3 		mul	r3, r2, r3
 2112 0980 1A1D     		adds	r2, r3, #4
 2113 0982 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2114 0986 1A44     		add	r2, r2, r3
 2115 0988 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2116 098c D31A     		subs	r3, r2, r3
 2117 098e 013B     		subs	r3, r3, #1
 2118 0990 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2119 0994 07F55571 		add	r1, r7, #852
 2120 0998 0A44     		add	r2, r2, r1
 2121 099a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2122 099c 07F56372 		add	r2, r7, #908
 2123 09a0 D154     		strb	r1, [r2, r3]
 511:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2124              		.loc 1 511 0 discriminator 3
 2125 09a2 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2126 09a6 0133     		adds	r3, r3, #1
 2127 09a8 87F8273F 		strb	r3, [r7, #3879]
 2128              	.L113:
 511:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2129              		.loc 1 511 0 is_stmt 0 discriminator 1
 2130 09ac 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2131 09b0 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2132 09b4 9A42     		cmp	r2, r3
 2133 09b6 DED3     		bcc	.L114
 513:..\src/command_processing.c ****                         }
 514:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i / 65536;
 2134              		.loc 1 514 0 is_stmt 1
 2135 09b8 B74B     		ldr	r3, .L235
 2136 09ba D3F8A830 		ldr	r3, [r3, #168]
 2137 09be 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 67


 2138 09c0 FFF7FEFF 		bl	__aeabi_i2f
 2139 09c4 0346     		mov	r3, r0
 2140 09c6 4FF08F41 		mov	r1, #1199570944
 2141 09ca 1846     		mov	r0, r3
 2142 09cc FFF7FEFF 		bl	__aeabi_fdiv
 2143 09d0 0346     		mov	r3, r0
 2144 09d2 1A46     		mov	r2, r3
 2145 09d4 07F55573 		add	r3, r7, #852
 2146 09d8 1A60     		str	r2, [r3]	@ float
 515:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2147              		.loc 1 515 0
 2148 09da 0023     		movs	r3, #0
 2149 09dc 87F8273F 		strb	r3, [r7, #3879]
 2150 09e0 1DE0     		b	.L115
 2151              	.L116:
 516:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2152              		.loc 1 516 0 discriminator 3
 2153 09e2 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2154 09e6 3222     		movs	r2, #50
 2155 09e8 02FB03F3 		mul	r3, r2, r3
 2156 09ec 1A1D     		adds	r2, r3, #4
 2157 09ee 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2158 09f2 1A44     		add	r2, r2, r3
 2159 09f4 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2160 09f8 1A44     		add	r2, r2, r3
 2161 09fa 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2162 09fe D31A     		subs	r3, r2, r3
 2163 0a00 013B     		subs	r3, r3, #1
 2164 0a02 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2165 0a06 07F55571 		add	r1, r7, #852
 2166 0a0a 0A44     		add	r2, r2, r1
 2167 0a0c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2168 0a0e 07F56372 		add	r2, r7, #908
 2169 0a12 D154     		strb	r1, [r2, r3]
 515:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2170              		.loc 1 515 0 discriminator 3
 2171 0a14 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2172 0a18 0133     		adds	r3, r3, #1
 2173 0a1a 87F8273F 		strb	r3, [r7, #3879]
 2174              	.L115:
 515:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2175              		.loc 1 515 0 is_stmt 0 discriminator 1
 2176 0a1e 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2177 0a22 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2178 0a26 9A42     		cmp	r2, r3
 2179 0a28 DBD3     		bcc	.L116
 517:..\src/command_processing.c ****                         }
 518:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d / 65536;
 2180              		.loc 1 518 0 is_stmt 1
 2181 0a2a 9B4B     		ldr	r3, .L235
 2182 0a2c D3F8AC30 		ldr	r3, [r3, #172]
 2183 0a30 1846     		mov	r0, r3
 2184 0a32 FFF7FEFF 		bl	__aeabi_i2f
 2185 0a36 0346     		mov	r3, r0
 2186 0a38 4FF08F41 		mov	r1, #1199570944
 2187 0a3c 1846     		mov	r0, r3
 2188 0a3e FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 68


 2189 0a42 0346     		mov	r3, r0
 2190 0a44 1A46     		mov	r2, r3
 2191 0a46 07F55573 		add	r3, r7, #852
 2192 0a4a 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2193              		.loc 1 519 0
 2194 0a4c 0023     		movs	r3, #0
 2195 0a4e 87F8273F 		strb	r3, [r7, #3879]
 2196 0a52 1EE0     		b	.L117
 2197              	.L118:
 520:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2198              		.loc 1 520 0 discriminator 3
 2199 0a54 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2200 0a58 3222     		movs	r2, #50
 2201 0a5a 02FB03F3 		mul	r3, r2, r3
 2202 0a5e 1A1D     		adds	r2, r3, #4
 2203 0a60 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2204 0a64 5B00     		lsls	r3, r3, #1
 2205 0a66 1A44     		add	r2, r2, r3
 2206 0a68 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2207 0a6c 1A44     		add	r2, r2, r3
 2208 0a6e 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2209 0a72 D31A     		subs	r3, r2, r3
 2210 0a74 013B     		subs	r3, r3, #1
 2211 0a76 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2212 0a7a 07F55571 		add	r1, r7, #852
 2213 0a7e 0A44     		add	r2, r2, r1
 2214 0a80 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2215 0a82 07F56372 		add	r2, r7, #908
 2216 0a86 D154     		strb	r1, [r2, r3]
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2217              		.loc 1 519 0 discriminator 3
 2218 0a88 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2219 0a8c 0133     		adds	r3, r3, #1
 2220 0a8e 87F8273F 		strb	r3, [r7, #3879]
 2221              	.L117:
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2222              		.loc 1 519 0 is_stmt 0 discriminator 1
 2223 0a92 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2224 0a96 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2225 0a9a 9A42     		cmp	r2, r3
 2226 0a9c DAD3     		bcc	.L118
 521:..\src/command_processing.c ****                         }
 522:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = aux_float;
 523:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 524:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 525:..\src/command_processing.c ****                     
 526:..\src/command_processing.c ****                     }
 527:..\src/command_processing.c ****                     else {
 528:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_dl / 65536;
 529:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 530:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 531:..\src/command_processing.c ****                         }
 532:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_dl / 65536;
 533:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 534:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 535:..\src/command_processing.c ****                         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 69


 536:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_dl / 65536;
 537:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 538:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 539:..\src/command_processing.c ****                         }
 540:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 541:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 542:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 543:..\src/command_processing.c ****                     }
 544:..\src/command_processing.c ****                     
 545:..\src/command_processing.c ****                     break;
 2227              		.loc 1 545 0 is_stmt 1
 2228 0a9e 57E2     		b	.L126
 2229              	.L112:
 528:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2230              		.loc 1 528 0
 2231 0aa0 7D4B     		ldr	r3, .L235
 2232 0aa2 D3F8BC30 		ldr	r3, [r3, #188]
 2233 0aa6 1846     		mov	r0, r3
 2234 0aa8 FFF7FEFF 		bl	__aeabi_i2f
 2235 0aac 0346     		mov	r3, r0
 2236 0aae 4FF08F41 		mov	r1, #1199570944
 2237 0ab2 1846     		mov	r0, r3
 2238 0ab4 FFF7FEFF 		bl	__aeabi_fdiv
 2239 0ab8 0346     		mov	r3, r0
 2240 0aba 1A46     		mov	r2, r3
 2241 0abc 07F55573 		add	r3, r7, #852
 2242 0ac0 1A60     		str	r2, [r3]	@ float
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2243              		.loc 1 529 0
 2244 0ac2 0023     		movs	r3, #0
 2245 0ac4 87F8273F 		strb	r3, [r7, #3879]
 2246 0ac8 1AE0     		b	.L120
 2247              	.L121:
 530:..\src/command_processing.c ****                         }
 2248              		.loc 1 530 0 discriminator 3
 2249 0aca 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2250 0ace 3222     		movs	r2, #50
 2251 0ad0 02FB03F3 		mul	r3, r2, r3
 2252 0ad4 1A1D     		adds	r2, r3, #4
 2253 0ad6 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2254 0ada 1A44     		add	r2, r2, r3
 2255 0adc 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2256 0ae0 D31A     		subs	r3, r2, r3
 2257 0ae2 013B     		subs	r3, r3, #1
 2258 0ae4 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2259 0ae8 07F55571 		add	r1, r7, #852
 2260 0aec 0A44     		add	r2, r2, r1
 2261 0aee 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2262 0af0 07F56372 		add	r2, r7, #908
 2263 0af4 D154     		strb	r1, [r2, r3]
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2264              		.loc 1 529 0 discriminator 3
 2265 0af6 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2266 0afa 0133     		adds	r3, r3, #1
 2267 0afc 87F8273F 		strb	r3, [r7, #3879]
 2268              	.L120:
 529:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 70


 2269              		.loc 1 529 0 is_stmt 0 discriminator 1
 2270 0b00 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2271 0b04 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2272 0b08 9A42     		cmp	r2, r3
 2273 0b0a DED3     		bcc	.L121
 532:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2274              		.loc 1 532 0 is_stmt 1
 2275 0b0c 624B     		ldr	r3, .L235
 2276 0b0e D3F8C030 		ldr	r3, [r3, #192]
 2277 0b12 1846     		mov	r0, r3
 2278 0b14 FFF7FEFF 		bl	__aeabi_i2f
 2279 0b18 0346     		mov	r3, r0
 2280 0b1a 4FF08F41 		mov	r1, #1199570944
 2281 0b1e 1846     		mov	r0, r3
 2282 0b20 FFF7FEFF 		bl	__aeabi_fdiv
 2283 0b24 0346     		mov	r3, r0
 2284 0b26 1A46     		mov	r2, r3
 2285 0b28 07F55573 		add	r3, r7, #852
 2286 0b2c 1A60     		str	r2, [r3]	@ float
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2287              		.loc 1 533 0
 2288 0b2e 0023     		movs	r3, #0
 2289 0b30 87F8273F 		strb	r3, [r7, #3879]
 2290 0b34 1DE0     		b	.L122
 2291              	.L123:
 534:..\src/command_processing.c ****                         }
 2292              		.loc 1 534 0 discriminator 3
 2293 0b36 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2294 0b3a 3222     		movs	r2, #50
 2295 0b3c 02FB03F3 		mul	r3, r2, r3
 2296 0b40 1A1D     		adds	r2, r3, #4
 2297 0b42 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2298 0b46 1A44     		add	r2, r2, r3
 2299 0b48 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2300 0b4c 1A44     		add	r2, r2, r3
 2301 0b4e 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2302 0b52 D31A     		subs	r3, r2, r3
 2303 0b54 013B     		subs	r3, r3, #1
 2304 0b56 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2305 0b5a 07F55571 		add	r1, r7, #852
 2306 0b5e 0A44     		add	r2, r2, r1
 2307 0b60 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2308 0b62 07F56372 		add	r2, r7, #908
 2309 0b66 D154     		strb	r1, [r2, r3]
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2310              		.loc 1 533 0 discriminator 3
 2311 0b68 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2312 0b6c 0133     		adds	r3, r3, #1
 2313 0b6e 87F8273F 		strb	r3, [r7, #3879]
 2314              	.L122:
 533:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2315              		.loc 1 533 0 is_stmt 0 discriminator 1
 2316 0b72 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2317 0b76 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2318 0b7a 9A42     		cmp	r2, r3
 2319 0b7c DBD3     		bcc	.L123
 536:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 71


 2320              		.loc 1 536 0 is_stmt 1
 2321 0b7e 464B     		ldr	r3, .L235
 2322 0b80 D3F8C430 		ldr	r3, [r3, #196]
 2323 0b84 1846     		mov	r0, r3
 2324 0b86 FFF7FEFF 		bl	__aeabi_i2f
 2325 0b8a 0346     		mov	r3, r0
 2326 0b8c 4FF08F41 		mov	r1, #1199570944
 2327 0b90 1846     		mov	r0, r3
 2328 0b92 FFF7FEFF 		bl	__aeabi_fdiv
 2329 0b96 0346     		mov	r3, r0
 2330 0b98 1A46     		mov	r2, r3
 2331 0b9a 07F55573 		add	r3, r7, #852
 2332 0b9e 1A60     		str	r2, [r3]	@ float
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2333              		.loc 1 537 0
 2334 0ba0 0023     		movs	r3, #0
 2335 0ba2 87F8273F 		strb	r3, [r7, #3879]
 2336 0ba6 1EE0     		b	.L124
 2337              	.L125:
 538:..\src/command_processing.c ****                         }
 2338              		.loc 1 538 0 discriminator 3
 2339 0ba8 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2340 0bac 3222     		movs	r2, #50
 2341 0bae 02FB03F3 		mul	r3, r2, r3
 2342 0bb2 1A1D     		adds	r2, r3, #4
 2343 0bb4 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2344 0bb8 5B00     		lsls	r3, r3, #1
 2345 0bba 1A44     		add	r2, r2, r3
 2346 0bbc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2347 0bc0 1A44     		add	r2, r2, r3
 2348 0bc2 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2349 0bc6 D31A     		subs	r3, r2, r3
 2350 0bc8 013B     		subs	r3, r3, #1
 2351 0bca 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2352 0bce 07F55571 		add	r1, r7, #852
 2353 0bd2 0A44     		add	r2, r2, r1
 2354 0bd4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2355 0bd6 07F56372 		add	r2, r7, #908
 2356 0bda D154     		strb	r1, [r2, r3]
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2357              		.loc 1 537 0 discriminator 3
 2358 0bdc 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2359 0be0 0133     		adds	r3, r3, #1
 2360 0be2 87F8273F 		strb	r3, [r7, #3879]
 2361              	.L124:
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2362              		.loc 1 537 0 is_stmt 0 discriminator 1
 2363 0be6 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2364 0bea 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2365 0bee 9A42     		cmp	r2, r3
 2366 0bf0 DAD3     		bcc	.L125
 2367              		.loc 1 545 0 is_stmt 1
 2368 0bf2 ADE1     		b	.L126
 2369              	.L111:
 546:..\src/command_processing.c ****                 case 2:     // POSITION PID (param 3)
 547:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 2370              		.loc 1 547 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 72


 2371 0bf4 284B     		ldr	r3, .L235
 2372 0bf6 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 2373 0bfa 032B     		cmp	r3, #3
 2374 0bfc 00F0AD80 		beq	.L127
 548:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c / 65536;
 2375              		.loc 1 548 0
 2376 0c00 254B     		ldr	r3, .L235
 2377 0c02 D3F8B030 		ldr	r3, [r3, #176]
 2378 0c06 1846     		mov	r0, r3
 2379 0c08 FFF7FEFF 		bl	__aeabi_i2f
 2380 0c0c 0346     		mov	r3, r0
 2381 0c0e 4FF08F41 		mov	r1, #1199570944
 2382 0c12 1846     		mov	r0, r3
 2383 0c14 FFF7FEFF 		bl	__aeabi_fdiv
 2384 0c18 0346     		mov	r3, r0
 2385 0c1a 1A46     		mov	r2, r3
 2386 0c1c 07F55573 		add	r3, r7, #852
 2387 0c20 1A60     		str	r2, [r3]	@ float
 549:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2388              		.loc 1 549 0
 2389 0c22 0023     		movs	r3, #0
 2390 0c24 87F8273F 		strb	r3, [r7, #3879]
 2391 0c28 1AE0     		b	.L128
 2392              	.L129:
 550:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2393              		.loc 1 550 0 discriminator 3
 2394 0c2a 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2395 0c2e 3222     		movs	r2, #50
 2396 0c30 02FB03F3 		mul	r3, r2, r3
 2397 0c34 1A1D     		adds	r2, r3, #4
 2398 0c36 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2399 0c3a 1A44     		add	r2, r2, r3
 2400 0c3c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2401 0c40 D31A     		subs	r3, r2, r3
 2402 0c42 013B     		subs	r3, r3, #1
 2403 0c44 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2404 0c48 07F55571 		add	r1, r7, #852
 2405 0c4c 0A44     		add	r2, r2, r1
 2406 0c4e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2407 0c50 07F56372 		add	r2, r7, #908
 2408 0c54 D154     		strb	r1, [r2, r3]
 549:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2409              		.loc 1 549 0 discriminator 3
 2410 0c56 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2411 0c5a 0133     		adds	r3, r3, #1
 2412 0c5c 87F8273F 		strb	r3, [r7, #3879]
 2413              	.L128:
 549:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2414              		.loc 1 549 0 is_stmt 0 discriminator 1
 2415 0c60 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2416 0c64 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2417 0c68 9A42     		cmp	r2, r3
 2418 0c6a DED3     		bcc	.L129
 551:..\src/command_processing.c ****                         }
 552:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c / 65536;
 2419              		.loc 1 552 0 is_stmt 1
 2420 0c6c 0A4B     		ldr	r3, .L235
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 73


 2421 0c6e D3F8B430 		ldr	r3, [r3, #180]
 2422 0c72 1846     		mov	r0, r3
 2423 0c74 FFF7FEFF 		bl	__aeabi_i2f
 2424 0c78 0346     		mov	r3, r0
 2425 0c7a 4FF08F41 		mov	r1, #1199570944
 2426 0c7e 1846     		mov	r0, r3
 2427 0c80 FFF7FEFF 		bl	__aeabi_fdiv
 2428 0c84 0346     		mov	r3, r0
 2429 0c86 1A46     		mov	r2, r3
 2430 0c88 07F55573 		add	r3, r7, #852
 2431 0c8c 1A60     		str	r2, [r3]	@ float
 553:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2432              		.loc 1 553 0
 2433 0c8e 0023     		movs	r3, #0
 2434 0c90 87F8273F 		strb	r3, [r7, #3879]
 2435 0c94 20E0     		b	.L130
 2436              	.L236:
 2437 0c96 00BF     		.align	2
 2438              	.L235:
 2439 0c98 00000000 		.word	c_mem
 2440              	.L131:
 554:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2441              		.loc 1 554 0 discriminator 3
 2442 0c9c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2443 0ca0 3222     		movs	r2, #50
 2444 0ca2 02FB03F3 		mul	r3, r2, r3
 2445 0ca6 1A1D     		adds	r2, r3, #4
 2446 0ca8 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2447 0cac 1A44     		add	r2, r2, r3
 2448 0cae 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2449 0cb2 1A44     		add	r2, r2, r3
 2450 0cb4 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2451 0cb8 D31A     		subs	r3, r2, r3
 2452 0cba 013B     		subs	r3, r3, #1
 2453 0cbc 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2454 0cc0 07F55571 		add	r1, r7, #852
 2455 0cc4 0A44     		add	r2, r2, r1
 2456 0cc6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2457 0cc8 07F56372 		add	r2, r7, #908
 2458 0ccc D154     		strb	r1, [r2, r3]
 553:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2459              		.loc 1 553 0 discriminator 3
 2460 0cce 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2461 0cd2 0133     		adds	r3, r3, #1
 2462 0cd4 87F8273F 		strb	r3, [r7, #3879]
 2463              	.L130:
 553:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2464              		.loc 1 553 0 is_stmt 0 discriminator 1
 2465 0cd8 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2466 0cdc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2467 0ce0 9A42     		cmp	r2, r3
 2468 0ce2 DBD3     		bcc	.L131
 555:..\src/command_processing.c ****                         }
 556:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c / 65536;
 2469              		.loc 1 556 0 is_stmt 1
 2470 0ce4 DD4B     		ldr	r3, .L237
 2471 0ce6 D3F8B830 		ldr	r3, [r3, #184]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 74


 2472 0cea 1846     		mov	r0, r3
 2473 0cec FFF7FEFF 		bl	__aeabi_i2f
 2474 0cf0 0346     		mov	r3, r0
 2475 0cf2 4FF08F41 		mov	r1, #1199570944
 2476 0cf6 1846     		mov	r0, r3
 2477 0cf8 FFF7FEFF 		bl	__aeabi_fdiv
 2478 0cfc 0346     		mov	r3, r0
 2479 0cfe 1A46     		mov	r2, r3
 2480 0d00 07F55573 		add	r3, r7, #852
 2481 0d04 1A60     		str	r2, [r3]	@ float
 557:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2482              		.loc 1 557 0
 2483 0d06 0023     		movs	r3, #0
 2484 0d08 87F8273F 		strb	r3, [r7, #3879]
 2485 0d0c 1EE0     		b	.L132
 2486              	.L133:
 558:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2487              		.loc 1 558 0 discriminator 3
 2488 0d0e 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2489 0d12 3222     		movs	r2, #50
 2490 0d14 02FB03F3 		mul	r3, r2, r3
 2491 0d18 1A1D     		adds	r2, r3, #4
 2492 0d1a 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2493 0d1e 5B00     		lsls	r3, r3, #1
 2494 0d20 1A44     		add	r2, r2, r3
 2495 0d22 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2496 0d26 1A44     		add	r2, r2, r3
 2497 0d28 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2498 0d2c D31A     		subs	r3, r2, r3
 2499 0d2e 013B     		subs	r3, r3, #1
 2500 0d30 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2501 0d34 07F55571 		add	r1, r7, #852
 2502 0d38 0A44     		add	r2, r2, r1
 2503 0d3a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2504 0d3c 07F56372 		add	r2, r7, #908
 2505 0d40 D154     		strb	r1, [r2, r3]
 557:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2506              		.loc 1 557 0 discriminator 3
 2507 0d42 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2508 0d46 0133     		adds	r3, r3, #1
 2509 0d48 87F8273F 		strb	r3, [r7, #3879]
 2510              	.L132:
 557:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2511              		.loc 1 557 0 is_stmt 0 discriminator 1
 2512 0d4c 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2513 0d50 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2514 0d54 9A42     		cmp	r2, r3
 2515 0d56 DAD3     		bcc	.L133
 559:..\src/command_processing.c ****                         }
 560:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 561:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 562:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 563:..\src/command_processing.c ****                     }
 564:..\src/command_processing.c ****                     else {
 565:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c_dl / 65536;
 566:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 567:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 75


 568:..\src/command_processing.c ****                         }
 569:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c_dl / 65536;
 570:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 571:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 572:..\src/command_processing.c ****                         }
 573:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c_dl / 65536;
 574:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 575:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 576:..\src/command_processing.c ****                         }
 577:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 578:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 579:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 580:..\src/command_processing.c ****                     }
 581:..\src/command_processing.c ****                     break;
 2516              		.loc 1 581 0 is_stmt 1
 2517 0d58 FAE0     		b	.L126
 2518              	.L127:
 565:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2519              		.loc 1 565 0
 2520 0d5a C04B     		ldr	r3, .L237
 2521 0d5c D3F8C830 		ldr	r3, [r3, #200]
 2522 0d60 1846     		mov	r0, r3
 2523 0d62 FFF7FEFF 		bl	__aeabi_i2f
 2524 0d66 0346     		mov	r3, r0
 2525 0d68 4FF08F41 		mov	r1, #1199570944
 2526 0d6c 1846     		mov	r0, r3
 2527 0d6e FFF7FEFF 		bl	__aeabi_fdiv
 2528 0d72 0346     		mov	r3, r0
 2529 0d74 1A46     		mov	r2, r3
 2530 0d76 07F55573 		add	r3, r7, #852
 2531 0d7a 1A60     		str	r2, [r3]	@ float
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2532              		.loc 1 566 0
 2533 0d7c 0023     		movs	r3, #0
 2534 0d7e 87F8273F 		strb	r3, [r7, #3879]
 2535 0d82 1AE0     		b	.L135
 2536              	.L136:
 567:..\src/command_processing.c ****                         }
 2537              		.loc 1 567 0 discriminator 3
 2538 0d84 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2539 0d88 3222     		movs	r2, #50
 2540 0d8a 02FB03F3 		mul	r3, r2, r3
 2541 0d8e 1A1D     		adds	r2, r3, #4
 2542 0d90 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2543 0d94 1A44     		add	r2, r2, r3
 2544 0d96 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2545 0d9a D31A     		subs	r3, r2, r3
 2546 0d9c 013B     		subs	r3, r3, #1
 2547 0d9e 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2548 0da2 07F55571 		add	r1, r7, #852
 2549 0da6 0A44     		add	r2, r2, r1
 2550 0da8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2551 0daa 07F56372 		add	r2, r7, #908
 2552 0dae D154     		strb	r1, [r2, r3]
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2553              		.loc 1 566 0 discriminator 3
 2554 0db0 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 76


 2555 0db4 0133     		adds	r3, r3, #1
 2556 0db6 87F8273F 		strb	r3, [r7, #3879]
 2557              	.L135:
 566:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2558              		.loc 1 566 0 is_stmt 0 discriminator 1
 2559 0dba 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2560 0dbe 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2561 0dc2 9A42     		cmp	r2, r3
 2562 0dc4 DED3     		bcc	.L136
 569:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2563              		.loc 1 569 0 is_stmt 1
 2564 0dc6 A54B     		ldr	r3, .L237
 2565 0dc8 D3F8CC30 		ldr	r3, [r3, #204]
 2566 0dcc 1846     		mov	r0, r3
 2567 0dce FFF7FEFF 		bl	__aeabi_i2f
 2568 0dd2 0346     		mov	r3, r0
 2569 0dd4 4FF08F41 		mov	r1, #1199570944
 2570 0dd8 1846     		mov	r0, r3
 2571 0dda FFF7FEFF 		bl	__aeabi_fdiv
 2572 0dde 0346     		mov	r3, r0
 2573 0de0 1A46     		mov	r2, r3
 2574 0de2 07F55573 		add	r3, r7, #852
 2575 0de6 1A60     		str	r2, [r3]	@ float
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2576              		.loc 1 570 0
 2577 0de8 0023     		movs	r3, #0
 2578 0dea 87F8273F 		strb	r3, [r7, #3879]
 2579 0dee 1DE0     		b	.L137
 2580              	.L138:
 571:..\src/command_processing.c ****                         }
 2581              		.loc 1 571 0 discriminator 3
 2582 0df0 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2583 0df4 3222     		movs	r2, #50
 2584 0df6 02FB03F3 		mul	r3, r2, r3
 2585 0dfa 1A1D     		adds	r2, r3, #4
 2586 0dfc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2587 0e00 1A44     		add	r2, r2, r3
 2588 0e02 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2589 0e06 1A44     		add	r2, r2, r3
 2590 0e08 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2591 0e0c D31A     		subs	r3, r2, r3
 2592 0e0e 013B     		subs	r3, r3, #1
 2593 0e10 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2594 0e14 07F55571 		add	r1, r7, #852
 2595 0e18 0A44     		add	r2, r2, r1
 2596 0e1a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2597 0e1c 07F56372 		add	r2, r7, #908
 2598 0e20 D154     		strb	r1, [r2, r3]
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2599              		.loc 1 570 0 discriminator 3
 2600 0e22 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2601 0e26 0133     		adds	r3, r3, #1
 2602 0e28 87F8273F 		strb	r3, [r7, #3879]
 2603              	.L137:
 570:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2604              		.loc 1 570 0 is_stmt 0 discriminator 1
 2605 0e2c 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 77


 2606 0e30 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2607 0e34 9A42     		cmp	r2, r3
 2608 0e36 DBD3     		bcc	.L138
 573:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2609              		.loc 1 573 0 is_stmt 1
 2610 0e38 884B     		ldr	r3, .L237
 2611 0e3a D3F8D030 		ldr	r3, [r3, #208]
 2612 0e3e 1846     		mov	r0, r3
 2613 0e40 FFF7FEFF 		bl	__aeabi_i2f
 2614 0e44 0346     		mov	r3, r0
 2615 0e46 4FF08F41 		mov	r1, #1199570944
 2616 0e4a 1846     		mov	r0, r3
 2617 0e4c FFF7FEFF 		bl	__aeabi_fdiv
 2618 0e50 0346     		mov	r3, r0
 2619 0e52 1A46     		mov	r2, r3
 2620 0e54 07F55573 		add	r3, r7, #852
 2621 0e58 1A60     		str	r2, [r3]	@ float
 574:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2622              		.loc 1 574 0
 2623 0e5a 0023     		movs	r3, #0
 2624 0e5c 87F8273F 		strb	r3, [r7, #3879]
 2625 0e60 1EE0     		b	.L139
 2626              	.L140:
 575:..\src/command_processing.c ****                         }
 2627              		.loc 1 575 0 discriminator 3
 2628 0e62 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2629 0e66 3222     		movs	r2, #50
 2630 0e68 02FB03F3 		mul	r3, r2, r3
 2631 0e6c 1A1D     		adds	r2, r3, #4
 2632 0e6e 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2633 0e72 5B00     		lsls	r3, r3, #1
 2634 0e74 1A44     		add	r2, r2, r3
 2635 0e76 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2636 0e7a 1A44     		add	r2, r2, r3
 2637 0e7c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2638 0e80 D31A     		subs	r3, r2, r3
 2639 0e82 013B     		subs	r3, r3, #1
 2640 0e84 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2641 0e88 07F55571 		add	r1, r7, #852
 2642 0e8c 0A44     		add	r2, r2, r1
 2643 0e8e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2644 0e90 07F56372 		add	r2, r7, #908
 2645 0e94 D154     		strb	r1, [r2, r3]
 574:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2646              		.loc 1 574 0 discriminator 3
 2647 0e96 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2648 0e9a 0133     		adds	r3, r3, #1
 2649 0e9c 87F8273F 		strb	r3, [r7, #3879]
 2650              	.L139:
 574:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2651              		.loc 1 574 0 is_stmt 0 discriminator 1
 2652 0ea0 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2653 0ea4 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2654 0ea8 9A42     		cmp	r2, r3
 2655 0eaa DAD3     		bcc	.L140
 2656              		.loc 1 581 0 is_stmt 1
 2657 0eac 50E0     		b	.L126
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 78


 2658              	.L227:
 582:..\src/command_processing.c ****                 default:
 583:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 2659              		.loc 1 583 0
 2660 0eae 0023     		movs	r3, #0
 2661 0eb0 87F8273F 		strb	r3, [r7, #3879]
 2662 0eb4 42E0     		b	.L141
 2663              	.L144:
 584:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2664              		.loc 1 584 0
 2665 0eb6 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2666 0eba 97F8232F 		ldrb	r2, [r7, #3875]	@ zero_extendqisi2
 2667 0ebe 02FB03F3 		mul	r3, r2, r3
 2668 0ec2 1A46     		mov	r2, r3
 2669 0ec4 D7F81C3F 		ldr	r3, [r7, #3868]
 2670 0ec8 1344     		add	r3, r3, r2
 2671 0eca C7F8143F 		str	r3, [r7, #3860]
 585:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 2672              		.loc 1 585 0
 2673 0ece D7F8143F 		ldr	r3, [r7, #3860]
 2674 0ed2 1A68     		ldr	r2, [r3]	@ float
 2675 0ed4 07F55573 		add	r3, r7, #852
 2676 0ed8 1A60     		str	r2, [r3]	@ float
 586:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2677              		.loc 1 586 0
 2678 0eda 0023     		movs	r3, #0
 2679 0edc 87F8263F 		strb	r3, [r7, #3878]
 2680 0ee0 21E0     		b	.L142
 2681              	.L143:
 587:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2682              		.loc 1 587 0 discriminator 3
 2683 0ee2 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2684 0ee6 3222     		movs	r2, #50
 2685 0ee8 02FB03F3 		mul	r3, r2, r3
 2686 0eec 1A1D     		adds	r2, r3, #4
 2687 0eee 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2688 0ef2 97F8231F 		ldrb	r1, [r7, #3875]	@ zero_extendqisi2
 2689 0ef6 01FB03F3 		mul	r3, r1, r3
 2690 0efa 1A44     		add	r2, r2, r3
 2691 0efc 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2692 0f00 1A44     		add	r2, r2, r3
 2693 0f02 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 2694 0f06 D31A     		subs	r3, r2, r3
 2695 0f08 013B     		subs	r3, r3, #1
 2696 0f0a 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 2697 0f0e 07F55571 		add	r1, r7, #852
 2698 0f12 0A44     		add	r2, r2, r1
 2699 0f14 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2700 0f16 07F56372 		add	r2, r7, #908
 2701 0f1a D154     		strb	r1, [r2, r3]
 586:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2702              		.loc 1 586 0 discriminator 3
 2703 0f1c 97F8263F 		ldrb	r3, [r7, #3878]	@ zero_extendqisi2
 2704 0f20 0133     		adds	r3, r3, #1
 2705 0f22 87F8263F 		strb	r3, [r7, #3878]
 2706              	.L142:
 586:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 79


 2707              		.loc 1 586 0 is_stmt 0 discriminator 1
 2708 0f26 97F8262F 		ldrb	r2, [r7, #3878]	@ zero_extendqisi2
 2709 0f2a 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 2710 0f2e 9A42     		cmp	r2, r3
 2711 0f30 D7D3     		bcc	.L143
 583:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2712              		.loc 1 583 0 is_stmt 1 discriminator 2
 2713 0f32 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 2714 0f36 0133     		adds	r3, r3, #1
 2715 0f38 87F8273F 		strb	r3, [r7, #3879]
 2716              	.L141:
 583:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2717              		.loc 1 583 0 is_stmt 0 discriminator 1
 2718 0f3c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2719 0f40 07F53C72 		add	r2, r7, #752
 2720 0f44 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2721 0f46 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 2722 0f4a 9A42     		cmp	r2, r3
 2723 0f4c B3D3     		bcc	.L144
 588:..\src/command_processing.c ****                         }
 589:..\src/command_processing.c ****                         //*((float*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((float*)
 590:..\src/command_processing.c ****                     }
 591:..\src/command_processing.c ****                     break;
 2724              		.loc 1 591 0 is_stmt 1
 2725 0f4e 00BF     		nop
 2726              	.L126:
 592:..\src/command_processing.c ****                 }
 593:..\src/command_processing.c ****                 break;          
 2727              		.loc 1 593 0 discriminator 4
 2728 0f50 00BF     		nop
 2729              	.L66:
 594:..\src/command_processing.c ****         }
 595:..\src/command_processing.c ****         
 596:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 2730              		.loc 1 596 0
 2731 0f52 97F8252F 		ldrb	r2, [r7, #3877]	@ zero_extendqisi2
 2732 0f56 07F50D73 		add	r3, r7, #564
 2733 0f5a 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2734 0f5e 07F55673 		add	r3, r7, #856
 2735 0f62 1146     		mov	r1, r2
 2736 0f64 1846     		mov	r0, r3
 2737 0f66 FFF7FEFF 		bl	sprintf
 597:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 2738              		.loc 1 597 0
 2739 0f6a 07F55673 		add	r3, r7, #856
 2740 0f6e 1846     		mov	r0, r3
 2741 0f70 FFF7FEFF 		bl	strlen
 2742 0f74 0346     		mov	r3, r0
 2743 0f76 87F8223F 		strb	r3, [r7, #3874]
 598:..\src/command_processing.c ****         
 599:..\src/command_processing.c ****         // Parameters with a menu
 600:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 2744              		.loc 1 600 0
 2745 0f7a 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 2746 0f7e 07F54772 		add	r2, r7, #796
 2747 0f82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2748 0f84 002B     		cmp	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 80


 2749 0f86 40F08B82 		bne	.L145
 601:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 2750              		.loc 1 601 0
 2751 0f8a 97F8243F 		ldrb	r3, [r7, #3876]	@ zero_extendqisi2
 2752 0f8e 07F53772 		add	r2, r7, #732
 2753 0f92 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2754 0f94 013B     		subs	r3, r3, #1
 2755 0f96 072B     		cmp	r3, #7
 2756 0f98 00F27882 		bhi	.L146
 2757 0f9c 01A2     		adr	r2, .L148
 2758 0f9e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2759 0fa2 00BF     		.p2align 2
 2760              	.L148:
 2761 0fa4 C50F0000 		.word	.L147+1
 2762 0fa8 ED100000 		.word	.L149+1
 2763 0fac AD110000 		.word	.L150+1
 2764 0fb0 F3110000 		.word	.L151+1
 2765 0fb4 49120000 		.word	.L152+1
 2766 0fb8 97120000 		.word	.L153+1
 2767 0fbc 55130000 		.word	.L154+1
 2768 0fc0 CB130000 		.word	.L155+1
 2769              		.p2align 1
 2770              	.L147:
 602:..\src/command_processing.c ****                 case 1:     // input mode menu
 603:..\src/command_processing.c ****                     switch(*m_addr) {
 2771              		.loc 1 603 0
 2772 0fc4 D7F81C3F 		ldr	r3, [r7, #3868]
 2773 0fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2774 0fca 052B     		cmp	r3, #5
 2775 0fcc 00F25982 		bhi	.L228
 2776 0fd0 01A2     		adr	r2, .L158
 2777 0fd2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2778 0fd6 00BF     		.p2align 2
 2779              	.L158:
 2780 0fd8 F10F0000 		.word	.L157+1
 2781 0fdc 11100000 		.word	.L159+1
 2782 0fe0 33100000 		.word	.L160+1
 2783 0fe4 6D100000 		.word	.L161+1
 2784 0fe8 95100000 		.word	.L162+1
 2785 0fec BB100000 		.word	.L163+1
 2786              		.p2align 1
 2787              	.L157:
 604:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 605:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 2788              		.loc 1 605 0
 2789 0ff0 07F55673 		add	r3, r7, #856
 2790 0ff4 1846     		mov	r0, r3
 2791 0ff6 FFF7FEFF 		bl	strlen
 2792 0ffa 0346     		mov	r3, r0
 2793 0ffc 1A46     		mov	r2, r3
 2794 0ffe 07F55673 		add	r3, r7, #856
 2795 1002 1344     		add	r3, r3, r2
 2796 1004 164A     		ldr	r2, .L237+4
 2797 1006 1068     		ldr	r0, [r2]	@ unaligned
 2798 1008 1860     		str	r0, [r3]	@ unaligned
 2799 100a 1279     		ldrb	r2, [r2, #4]
 2800 100c 1A71     		strb	r2, [r3, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 81


 606:..\src/command_processing.c ****                         break;
 2801              		.loc 1 606 0
 2802 100e 6CE0     		b	.L156
 2803              	.L159:
 607:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 608:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 2804              		.loc 1 608 0
 2805 1010 07F55673 		add	r3, r7, #856
 2806 1014 1846     		mov	r0, r3
 2807 1016 FFF7FEFF 		bl	strlen
 2808 101a 0346     		mov	r3, r0
 2809 101c 1A46     		mov	r2, r3
 2810 101e 07F55673 		add	r3, r7, #856
 2811 1022 1344     		add	r3, r3, r2
 2812 1024 0F49     		ldr	r1, .L237+8
 2813 1026 1A46     		mov	r2, r3
 2814 1028 0B46     		mov	r3, r1
 2815 102a 03CB     		ldmia	r3!, {r0, r1}
 2816 102c 1060     		str	r0, [r2]	@ unaligned
 2817 102e 5160     		str	r1, [r2, #4]	@ unaligned
 609:..\src/command_processing.c ****                         break;
 2818              		.loc 1 609 0
 2819 1030 5BE0     		b	.L156
 2820              	.L160:
 610:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 611:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 2821              		.loc 1 611 0
 2822 1032 07F55673 		add	r3, r7, #856
 2823 1036 1846     		mov	r0, r3
 2824 1038 FFF7FEFF 		bl	strlen
 2825 103c 0346     		mov	r3, r0
 2826 103e 1A46     		mov	r2, r3
 2827 1040 07F55673 		add	r3, r7, #856
 2828 1044 1344     		add	r3, r3, r2
 2829 1046 084A     		ldr	r2, .L237+12
 2830 1048 1D46     		mov	r5, r3
 2831 104a 1446     		mov	r4, r2
 2832 104c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2833 104e 2860     		str	r0, [r5]	@ unaligned
 2834 1050 6960     		str	r1, [r5, #4]	@ unaligned
 2835 1052 AA60     		str	r2, [r5, #8]	@ unaligned
 2836 1054 EB60     		str	r3, [r5, #12]	@ unaligned
 2837 1056 2388     		ldrh	r3, [r4]	@ unaligned
 2838 1058 2B82     		strh	r3, [r5, #16]	@ unaligned
 612:..\src/command_processing.c ****                         break;
 2839              		.loc 1 612 0
 2840 105a 46E0     		b	.L156
 2841              	.L238:
 2842              		.align	2
 2843              	.L237:
 2844 105c 00000000 		.word	c_mem
 2845 1060 74000000 		.word	.LC54
 2846 1064 7C000000 		.word	.LC55
 2847 1068 84000000 		.word	.LC56
 2848              	.L161:
 613:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 614:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 82


 2849              		.loc 1 614 0
 2850 106c 07F55673 		add	r3, r7, #856
 2851 1070 1846     		mov	r0, r3
 2852 1072 FFF7FEFF 		bl	strlen
 2853 1076 0346     		mov	r3, r0
 2854 1078 1A46     		mov	r2, r3
 2855 107a 07F55673 		add	r3, r7, #856
 2856 107e 1344     		add	r3, r3, r2
 2857 1080 D64A     		ldr	r2, .L239
 2858 1082 1C46     		mov	r4, r3
 2859 1084 1346     		mov	r3, r2
 2860 1086 07CB     		ldmia	r3!, {r0, r1, r2}
 2861 1088 2060     		str	r0, [r4]	@ unaligned
 2862 108a 6160     		str	r1, [r4, #4]	@ unaligned
 2863 108c A260     		str	r2, [r4, #8]	@ unaligned
 2864 108e 1B88     		ldrh	r3, [r3]	@ unaligned
 2865 1090 A381     		strh	r3, [r4, #12]	@ unaligned
 615:..\src/command_processing.c ****                         break;
 2866              		.loc 1 615 0
 2867 1092 2AE0     		b	.L156
 2868              	.L162:
 616:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 617:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 2869              		.loc 1 617 0
 2870 1094 07F55673 		add	r3, r7, #856
 2871 1098 1846     		mov	r0, r3
 2872 109a FFF7FEFF 		bl	strlen
 2873 109e 0346     		mov	r3, r0
 2874 10a0 1A46     		mov	r2, r3
 2875 10a2 07F55673 		add	r3, r7, #856
 2876 10a6 1344     		add	r3, r3, r2
 2877 10a8 CD49     		ldr	r1, .L239+4
 2878 10aa 1A46     		mov	r2, r3
 2879 10ac 0B46     		mov	r3, r1
 2880 10ae 03CB     		ldmia	r3!, {r0, r1}
 2881 10b0 1060     		str	r0, [r2]	@ unaligned
 2882 10b2 5160     		str	r1, [r2, #4]	@ unaligned
 2883 10b4 1B88     		ldrh	r3, [r3]	@ unaligned
 2884 10b6 1381     		strh	r3, [r2, #8]	@ unaligned
 618:..\src/command_processing.c ****                         break;
 2885              		.loc 1 618 0
 2886 10b8 17E0     		b	.L156
 2887              	.L163:
 619:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 620:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 2888              		.loc 1 620 0
 2889 10ba 07F55673 		add	r3, r7, #856
 2890 10be 1846     		mov	r0, r3
 2891 10c0 FFF7FEFF 		bl	strlen
 2892 10c4 0346     		mov	r3, r0
 2893 10c6 1A46     		mov	r2, r3
 2894 10c8 07F55673 		add	r3, r7, #856
 2895 10cc 1344     		add	r3, r3, r2
 2896 10ce C54A     		ldr	r2, .L239+8
 2897 10d0 1D46     		mov	r5, r3
 2898 10d2 1446     		mov	r4, r2
 2899 10d4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 83


 2900 10d6 2860     		str	r0, [r5]	@ unaligned
 2901 10d8 6960     		str	r1, [r5, #4]	@ unaligned
 2902 10da AA60     		str	r2, [r5, #8]	@ unaligned
 2903 10dc EB60     		str	r3, [r5, #12]	@ unaligned
 2904 10de 2388     		ldrh	r3, [r4]	@ unaligned
 2905 10e0 A278     		ldrb	r2, [r4, #2]
 2906 10e2 2B82     		strh	r3, [r5, #16]	@ unaligned
 2907 10e4 1346     		mov	r3, r2
 2908 10e6 AB74     		strb	r3, [r5, #18]
 621:..\src/command_processing.c ****                         break;
 2909              		.loc 1 621 0
 2910 10e8 00BF     		nop
 2911              	.L156:
 622:..\src/command_processing.c ****                     }
 623:..\src/command_processing.c ****                     break;
 2912              		.loc 1 623 0
 2913 10ea CAE1     		b	.L228
 2914              	.L149:
 624:..\src/command_processing.c ****                 case 2:     // control mode menu
 625:..\src/command_processing.c ****                     switch(*m_addr){
 2915              		.loc 1 625 0
 2916 10ec D7F81C3F 		ldr	r3, [r7, #3868]
 2917 10f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2918 10f2 032B     		cmp	r3, #3
 2919 10f4 00F2C781 		bhi	.L229
 2920 10f8 01A2     		adr	r2, .L166
 2921 10fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2922 10fe 00BF     		.p2align 2
 2923              	.L166:
 2924 1100 11110000 		.word	.L165+1
 2925 1104 37110000 		.word	.L167+1
 2926 1108 57110000 		.word	.L168+1
 2927 110c 7D110000 		.word	.L169+1
 2928              		.p2align 1
 2929              	.L165:
 626:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 627:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 2930              		.loc 1 627 0
 2931 1110 07F55673 		add	r3, r7, #856
 2932 1114 1846     		mov	r0, r3
 2933 1116 FFF7FEFF 		bl	strlen
 2934 111a 0346     		mov	r3, r0
 2935 111c 1A46     		mov	r2, r3
 2936 111e 07F55673 		add	r3, r7, #856
 2937 1122 1344     		add	r3, r3, r2
 2938 1124 B049     		ldr	r1, .L239+12
 2939 1126 1A46     		mov	r2, r3
 2940 1128 0B46     		mov	r3, r1
 2941 112a 03CB     		ldmia	r3!, {r0, r1}
 2942 112c 1060     		str	r0, [r2]	@ unaligned
 2943 112e 5160     		str	r1, [r2, #4]	@ unaligned
 2944 1130 1B88     		ldrh	r3, [r3]	@ unaligned
 2945 1132 1381     		strh	r3, [r2, #8]	@ unaligned
 628:..\src/command_processing.c ****                         break;
 2946              		.loc 1 628 0
 2947 1134 39E0     		b	.L164
 2948              	.L167:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 84


 629:..\src/command_processing.c ****                         case CONTROL_PWM:
 630:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 2949              		.loc 1 630 0
 2950 1136 07F55673 		add	r3, r7, #856
 2951 113a 1846     		mov	r0, r3
 2952 113c FFF7FEFF 		bl	strlen
 2953 1140 0346     		mov	r3, r0
 2954 1142 1A46     		mov	r2, r3
 2955 1144 07F55673 		add	r3, r7, #856
 2956 1148 1344     		add	r3, r3, r2
 2957 114a A84A     		ldr	r2, .L239+16
 2958 114c 1068     		ldr	r0, [r2]	@ unaligned
 2959 114e 1860     		str	r0, [r3]	@ unaligned
 2960 1150 1279     		ldrb	r2, [r2, #4]
 2961 1152 1A71     		strb	r2, [r3, #4]
 631:..\src/command_processing.c ****                         break;
 2962              		.loc 1 631 0
 2963 1154 29E0     		b	.L164
 2964              	.L168:
 632:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 633:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 2965              		.loc 1 633 0
 2966 1156 07F55673 		add	r3, r7, #856
 2967 115a 1846     		mov	r0, r3
 2968 115c FFF7FEFF 		bl	strlen
 2969 1160 0346     		mov	r3, r0
 2970 1162 1A46     		mov	r2, r3
 2971 1164 07F55673 		add	r3, r7, #856
 2972 1168 1344     		add	r3, r3, r2
 2973 116a A149     		ldr	r1, .L239+20
 2974 116c 1A46     		mov	r2, r3
 2975 116e 0B46     		mov	r3, r1
 2976 1170 03CB     		ldmia	r3!, {r0, r1}
 2977 1172 1060     		str	r0, [r2]	@ unaligned
 2978 1174 5160     		str	r1, [r2, #4]	@ unaligned
 2979 1176 1B78     		ldrb	r3, [r3]
 2980 1178 1372     		strb	r3, [r2, #8]
 634:..\src/command_processing.c ****                         break;
 2981              		.loc 1 634 0
 2982 117a 16E0     		b	.L164
 2983              	.L169:
 635:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 636:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 2984              		.loc 1 636 0
 2985 117c 07F55673 		add	r3, r7, #856
 2986 1180 1846     		mov	r0, r3
 2987 1182 FFF7FEFF 		bl	strlen
 2988 1186 0346     		mov	r3, r0
 2989 1188 1A46     		mov	r2, r3
 2990 118a 07F55673 		add	r3, r7, #856
 2991 118e 1344     		add	r3, r3, r2
 2992 1190 984A     		ldr	r2, .L239+24
 2993 1192 1D46     		mov	r5, r3
 2994 1194 1446     		mov	r4, r2
 2995 1196 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2996 1198 2860     		str	r0, [r5]	@ unaligned
 2997 119a 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 85


 2998 119c AA60     		str	r2, [r5, #8]	@ unaligned
 2999 119e EB60     		str	r3, [r5, #12]	@ unaligned
 3000 11a0 2068     		ldr	r0, [r4]	@ unaligned
 3001 11a2 2861     		str	r0, [r5, #16]	@ unaligned
 3002 11a4 A388     		ldrh	r3, [r4, #4]	@ unaligned
 3003 11a6 AB82     		strh	r3, [r5, #20]	@ unaligned
 637:..\src/command_processing.c ****                         break;
 3004              		.loc 1 637 0
 3005 11a8 00BF     		nop
 3006              	.L164:
 638:..\src/command_processing.c ****                     }
 639:..\src/command_processing.c ****                     break;
 3007              		.loc 1 639 0
 3008 11aa 6CE1     		b	.L229
 3009              	.L150:
 640:..\src/command_processing.c ****                 case 3:     // yes/no menu
 641:..\src/command_processing.c ****                     if(*m_addr){
 3010              		.loc 1 641 0
 3011 11ac D7F81C3F 		ldr	r3, [r7, #3868]
 3012 11b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3013 11b2 002B     		cmp	r3, #0
 3014 11b4 0FD0     		beq	.L170
 642:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 3015              		.loc 1 642 0
 3016 11b6 07F55673 		add	r3, r7, #856
 3017 11ba 1846     		mov	r0, r3
 3018 11bc FFF7FEFF 		bl	strlen
 3019 11c0 0346     		mov	r3, r0
 3020 11c2 1A46     		mov	r2, r3
 3021 11c4 07F55673 		add	r3, r7, #856
 3022 11c8 1344     		add	r3, r3, r2
 3023 11ca 8B4A     		ldr	r2, .L239+28
 3024 11cc 1068     		ldr	r0, [r2]	@ unaligned
 3025 11ce 1860     		str	r0, [r3]	@ unaligned
 3026 11d0 1279     		ldrb	r2, [r2, #4]
 3027 11d2 1A71     		strb	r2, [r3, #4]
 643:..\src/command_processing.c ****                     }
 644:..\src/command_processing.c ****                     else {
 645:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 646:..\src/command_processing.c ****                     }
 647:..\src/command_processing.c ****                     break;    
 3028              		.loc 1 647 0
 3029 11d4 5AE1     		b	.L146
 3030              	.L170:
 645:..\src/command_processing.c ****                     }
 3031              		.loc 1 645 0
 3032 11d6 07F55673 		add	r3, r7, #856
 3033 11da 1846     		mov	r0, r3
 3034 11dc FFF7FEFF 		bl	strlen
 3035 11e0 0346     		mov	r3, r0
 3036 11e2 1A46     		mov	r2, r3
 3037 11e4 07F55673 		add	r3, r7, #856
 3038 11e8 1344     		add	r3, r3, r2
 3039 11ea 844A     		ldr	r2, .L239+32
 3040 11ec 1068     		ldr	r0, [r2]	@ unaligned
 3041 11ee 1860     		str	r0, [r3]	@ unaligned
 3042              		.loc 1 647 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 86


 3043 11f0 4CE1     		b	.L146
 3044              	.L151:
 648:..\src/command_processing.c ****                 case 4:     // right/lef menu
 649:..\src/command_processing.c ****                     switch(*m_addr){
 3045              		.loc 1 649 0
 3046 11f2 D7F81C3F 		ldr	r3, [r7, #3868]
 3047 11f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3048 11f8 002B     		cmp	r3, #0
 3049 11fa 02D0     		beq	.L173
 3050 11fc 012B     		cmp	r3, #1
 3051 11fe 12D0     		beq	.L174
 650:..\src/command_processing.c ****                         case RIGHT_HAND:
 651:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 652:..\src/command_processing.c ****                         break;
 653:..\src/command_processing.c ****                         case LEFT_HAND:
 654:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 655:..\src/command_processing.c ****                         break;
 656:..\src/command_processing.c ****                     }
 657:..\src/command_processing.c ****                     break;
 3052              		.loc 1 657 0
 3053 1200 44E1     		b	.L146
 3054              	.L173:
 651:..\src/command_processing.c ****                         break;
 3055              		.loc 1 651 0
 3056 1202 07F55673 		add	r3, r7, #856
 3057 1206 1846     		mov	r0, r3
 3058 1208 FFF7FEFF 		bl	strlen
 3059 120c 0346     		mov	r3, r0
 3060 120e 1A46     		mov	r2, r3
 3061 1210 07F55673 		add	r3, r7, #856
 3062 1214 1344     		add	r3, r3, r2
 3063 1216 7A4A     		ldr	r2, .L239+36
 3064 1218 1068     		ldr	r0, [r2]	@ unaligned
 3065 121a 1860     		str	r0, [r3]	@ unaligned
 3066 121c 9188     		ldrh	r1, [r2, #4]	@ unaligned
 3067 121e 9279     		ldrb	r2, [r2, #6]
 3068 1220 9980     		strh	r1, [r3, #4]	@ unaligned
 3069 1222 9A71     		strb	r2, [r3, #6]
 652:..\src/command_processing.c ****                         case LEFT_HAND:
 3070              		.loc 1 652 0
 3071 1224 0FE0     		b	.L172
 3072              	.L174:
 654:..\src/command_processing.c ****                         break;
 3073              		.loc 1 654 0
 3074 1226 07F55673 		add	r3, r7, #856
 3075 122a 1846     		mov	r0, r3
 3076 122c FFF7FEFF 		bl	strlen
 3077 1230 0346     		mov	r3, r0
 3078 1232 1A46     		mov	r2, r3
 3079 1234 07F55673 		add	r3, r7, #856
 3080 1238 1344     		add	r3, r3, r2
 3081 123a 724A     		ldr	r2, .L239+40
 3082 123c 1068     		ldr	r0, [r2]	@ unaligned
 3083 123e 1860     		str	r0, [r3]	@ unaligned
 3084 1240 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3085 1242 9A80     		strh	r2, [r3, #4]	@ unaligned
 655:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 87


 3086              		.loc 1 655 0
 3087 1244 00BF     		nop
 3088              	.L172:
 3089              		.loc 1 657 0
 3090 1246 21E1     		b	.L146
 3091              	.L152:
 658:..\src/command_processing.c ****                 case 5:
 659:..\src/command_processing.c ****                     switch(*m_addr){
 3092              		.loc 1 659 0
 3093 1248 D7F81C3F 		ldr	r3, [r7, #3868]
 3094 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3095 124e 002B     		cmp	r3, #0
 3096 1250 02D0     		beq	.L176
 3097 1252 012B     		cmp	r3, #1
 3098 1254 10D0     		beq	.L177
 660:..\src/command_processing.c ****                         case 0:
 661:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 662:..\src/command_processing.c ****                         break;
 663:..\src/command_processing.c ****                         case 1:
 664:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 665:..\src/command_processing.c ****                         break;
 666:..\src/command_processing.c ****                     }
 667:..\src/command_processing.c ****                     break;
 3099              		.loc 1 667 0
 3100 1256 19E1     		b	.L146
 3101              	.L176:
 661:..\src/command_processing.c ****                         break;
 3102              		.loc 1 661 0
 3103 1258 07F55673 		add	r3, r7, #856
 3104 125c 1846     		mov	r0, r3
 3105 125e FFF7FEFF 		bl	strlen
 3106 1262 0346     		mov	r3, r0
 3107 1264 1A46     		mov	r2, r3
 3108 1266 07F55673 		add	r3, r7, #856
 3109 126a 1344     		add	r3, r3, r2
 3110 126c 664A     		ldr	r2, .L239+44
 3111 126e 1068     		ldr	r0, [r2]	@ unaligned
 3112 1270 1860     		str	r0, [r3]	@ unaligned
 3113 1272 1279     		ldrb	r2, [r2, #4]
 3114 1274 1A71     		strb	r2, [r3, #4]
 662:..\src/command_processing.c ****                         case 1:
 3115              		.loc 1 662 0
 3116 1276 0DE0     		b	.L175
 3117              	.L177:
 664:..\src/command_processing.c ****                         break;
 3118              		.loc 1 664 0
 3119 1278 07F55673 		add	r3, r7, #856
 3120 127c 1846     		mov	r0, r3
 3121 127e FFF7FEFF 		bl	strlen
 3122 1282 0346     		mov	r3, r0
 3123 1284 1A46     		mov	r2, r3
 3124 1286 07F55673 		add	r3, r7, #856
 3125 128a 1344     		add	r3, r3, r2
 3126 128c 5F4A     		ldr	r2, .L239+48
 3127 128e 1068     		ldr	r0, [r2]	@ unaligned
 3128 1290 1860     		str	r0, [r3]	@ unaligned
 665:..\src/command_processing.c ****                     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 88


 3129              		.loc 1 665 0
 3130 1292 00BF     		nop
 3131              	.L175:
 3132              		.loc 1 667 0
 3133 1294 FAE0     		b	.L146
 3134              	.L153:
 668:..\src/command_processing.c ****                 case 6:
 669:..\src/command_processing.c ****                     switch(*m_addr){
 3135              		.loc 1 669 0
 3136 1296 D7F81C3F 		ldr	r3, [r7, #3868]
 3137 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3138 129c 032B     		cmp	r3, #3
 3139 129e 00F2F480 		bhi	.L230
 3140 12a2 01A2     		adr	r2, .L180
 3141 12a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3142              		.p2align 2
 3143              	.L180:
 3144 12a8 B9120000 		.word	.L179+1
 3145 12ac D9120000 		.word	.L181+1
 3146 12b0 01130000 		.word	.L182+1
 3147 12b4 2B130000 		.word	.L183+1
 3148              		.p2align 1
 3149              	.L179:
 670:..\src/command_processing.c ****                         case EXP_NONE:
 671:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 3150              		.loc 1 671 0
 3151 12b8 07F55673 		add	r3, r7, #856
 3152 12bc 1846     		mov	r0, r3
 3153 12be FFF7FEFF 		bl	strlen
 3154 12c2 0346     		mov	r3, r0
 3155 12c4 1A46     		mov	r2, r3
 3156 12c6 07F55673 		add	r3, r7, #856
 3157 12ca 1344     		add	r3, r3, r2
 3158 12cc 504A     		ldr	r2, .L239+52
 3159 12ce 1068     		ldr	r0, [r2]	@ unaligned
 3160 12d0 1860     		str	r0, [r3]	@ unaligned
 3161 12d2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3162 12d4 9A80     		strh	r2, [r3, #4]	@ unaligned
 672:..\src/command_processing.c ****                             break;
 3163              		.loc 1 672 0
 3164 12d6 3CE0     		b	.L178
 3165              	.L181:
 673:..\src/command_processing.c ****                         case EXP_SD_RTC:
 674:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 3166              		.loc 1 674 0
 3167 12d8 07F55673 		add	r3, r7, #856
 3168 12dc 1846     		mov	r0, r3
 3169 12de FFF7FEFF 		bl	strlen
 3170 12e2 0346     		mov	r3, r0
 3171 12e4 1A46     		mov	r2, r3
 3172 12e6 07F55673 		add	r3, r7, #856
 3173 12ea 1344     		add	r3, r3, r2
 3174 12ec 494A     		ldr	r2, .L239+56
 3175 12ee 1C46     		mov	r4, r3
 3176 12f0 1346     		mov	r3, r2
 3177 12f2 07CB     		ldmia	r3!, {r0, r1, r2}
 3178 12f4 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 89


 3179 12f6 6160     		str	r1, [r4, #4]	@ unaligned
 3180 12f8 A260     		str	r2, [r4, #8]	@ unaligned
 3181 12fa 1B88     		ldrh	r3, [r3]	@ unaligned
 3182 12fc A381     		strh	r3, [r4, #12]	@ unaligned
 675:..\src/command_processing.c ****                             break;
 3183              		.loc 1 675 0
 3184 12fe 28E0     		b	.L178
 3185              	.L182:
 676:..\src/command_processing.c ****                         case EXP_WIFI:
 677:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board [N/A]\0");
 3186              		.loc 1 677 0
 3187 1300 07F55673 		add	r3, r7, #856
 3188 1304 1846     		mov	r0, r3
 3189 1306 FFF7FEFF 		bl	strlen
 3190 130a 0346     		mov	r3, r0
 3191 130c 1A46     		mov	r2, r3
 3192 130e 07F55673 		add	r3, r7, #856
 3193 1312 1344     		add	r3, r3, r2
 3194 1314 404A     		ldr	r2, .L239+60
 3195 1316 1D46     		mov	r5, r3
 3196 1318 1446     		mov	r4, r2
 3197 131a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3198 131c 2860     		str	r0, [r5]	@ unaligned
 3199 131e 6960     		str	r1, [r5, #4]	@ unaligned
 3200 1320 AA60     		str	r2, [r5, #8]	@ unaligned
 3201 1322 EB60     		str	r3, [r5, #12]	@ unaligned
 3202 1324 2388     		ldrh	r3, [r4]	@ unaligned
 3203 1326 2B82     		strh	r3, [r5, #16]	@ unaligned
 678:..\src/command_processing.c ****         					break;
 3204              		.loc 1 678 0
 3205 1328 13E0     		b	.L178
 3206              	.L183:
 679:..\src/command_processing.c ****                         case EXP_OTHER:
 680:..\src/command_processing.c ****         					strcat(aux_str, " Other [N/A]\0");
 3207              		.loc 1 680 0
 3208 132a 07F55673 		add	r3, r7, #856
 3209 132e 1846     		mov	r0, r3
 3210 1330 FFF7FEFF 		bl	strlen
 3211 1334 0346     		mov	r3, r0
 3212 1336 1A46     		mov	r2, r3
 3213 1338 07F55673 		add	r3, r7, #856
 3214 133c 1344     		add	r3, r3, r2
 3215 133e 374A     		ldr	r2, .L239+64
 3216 1340 1C46     		mov	r4, r3
 3217 1342 1346     		mov	r3, r2
 3218 1344 07CB     		ldmia	r3!, {r0, r1, r2}
 3219 1346 2060     		str	r0, [r4]	@ unaligned
 3220 1348 6160     		str	r1, [r4, #4]	@ unaligned
 3221 134a A260     		str	r2, [r4, #8]	@ unaligned
 3222 134c 1B78     		ldrb	r3, [r3]
 3223 134e 2373     		strb	r3, [r4, #12]
 681:..\src/command_processing.c ****         					break;
 3224              		.loc 1 681 0
 3225 1350 00BF     		nop
 3226              	.L178:
 682:..\src/command_processing.c ****                     }
 683:..\src/command_processing.c ****                     break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 90


 3227              		.loc 1 683 0
 3228 1352 9AE0     		b	.L230
 3229              	.L154:
 684:..\src/command_processing.c ****                 case 7:
 685:..\src/command_processing.c ****                     switch(*m_addr){
 3230              		.loc 1 685 0
 3231 1354 D7F81C3F 		ldr	r3, [r7, #3868]
 3232 1358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3233 135a 012B     		cmp	r3, #1
 3234 135c 14D0     		beq	.L185
 3235 135e 022B     		cmp	r3, #2
 3236 1360 22D0     		beq	.L186
 3237 1362 002B     		cmp	r3, #0
 3238 1364 00D0     		beq	.L187
 686:..\src/command_processing.c ****                         case 0: 
 687:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 688:..\src/command_processing.c ****                             break;
 689:..\src/command_processing.c ****                         case 1: 
 690:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 691:..\src/command_processing.c ****                             break;
 692:..\src/command_processing.c ****                         case 2: 
 693:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 694:..\src/command_processing.c ****                             break;
 695:..\src/command_processing.c ****                         default:
 696:..\src/command_processing.c ****                             break;
 3239              		.loc 1 696 0
 3240 1366 2FE0     		b	.L188
 3241              	.L187:
 687:..\src/command_processing.c ****                             break;
 3242              		.loc 1 687 0
 3243 1368 07F55673 		add	r3, r7, #856
 3244 136c 1846     		mov	r0, r3
 3245 136e FFF7FEFF 		bl	strlen
 3246 1372 0346     		mov	r3, r0
 3247 1374 1A46     		mov	r2, r3
 3248 1376 07F55673 		add	r3, r7, #856
 3249 137a 1344     		add	r3, r3, r2
 3250 137c 244A     		ldr	r2, .L239+52
 3251 137e 1068     		ldr	r0, [r2]	@ unaligned
 3252 1380 1860     		str	r0, [r3]	@ unaligned
 3253 1382 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3254 1384 9A80     		strh	r2, [r3, #4]	@ unaligned
 688:..\src/command_processing.c ****                         case 1: 
 3255              		.loc 1 688 0
 3256 1386 1FE0     		b	.L188
 3257              	.L185:
 690:..\src/command_processing.c ****                             break;
 3258              		.loc 1 690 0
 3259 1388 07F55673 		add	r3, r7, #856
 3260 138c 1846     		mov	r0, r3
 3261 138e FFF7FEFF 		bl	strlen
 3262 1392 0346     		mov	r3, r0
 3263 1394 1A46     		mov	r2, r3
 3264 1396 07F55673 		add	r3, r7, #856
 3265 139a 1344     		add	r3, r3, r2
 3266 139c 204A     		ldr	r2, .L239+68
 3267 139e 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 91


 3268 13a0 1860     		str	r0, [r3]	@ unaligned
 3269 13a2 1279     		ldrb	r2, [r2, #4]
 3270 13a4 1A71     		strb	r2, [r3, #4]
 691:..\src/command_processing.c ****                         case 2: 
 3271              		.loc 1 691 0
 3272 13a6 0FE0     		b	.L188
 3273              	.L186:
 693:..\src/command_processing.c ****                             break;
 3274              		.loc 1 693 0
 3275 13a8 07F55673 		add	r3, r7, #856
 3276 13ac 1846     		mov	r0, r3
 3277 13ae FFF7FEFF 		bl	strlen
 3278 13b2 0346     		mov	r3, r0
 3279 13b4 1A46     		mov	r2, r3
 3280 13b6 07F55673 		add	r3, r7, #856
 3281 13ba 1344     		add	r3, r3, r2
 3282 13bc 194A     		ldr	r2, .L239+72
 3283 13be 1068     		ldr	r0, [r2]	@ unaligned
 3284 13c0 1860     		str	r0, [r3]	@ unaligned
 3285 13c2 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3286 13c4 9A80     		strh	r2, [r3, #4]	@ unaligned
 694:..\src/command_processing.c ****                         default:
 3287              		.loc 1 694 0
 3288 13c6 00BF     		nop
 3289              	.L188:
 697:..\src/command_processing.c ****                     } 
 698:..\src/command_processing.c ****                     break;
 3290              		.loc 1 698 0 discriminator 6
 3291 13c8 60E0     		b	.L146
 3292              	.L155:
 699:..\src/command_processing.c ****                 case 8:
 700:..\src/command_processing.c ****                     switch(*m_addr){
 3293              		.loc 1 700 0
 3294 13ca D7F81C3F 		ldr	r3, [r7, #3868]
 3295 13ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3296 13d0 002B     		cmp	r3, #0
 3297 13d2 29D0     		beq	.L190
 3298 13d4 012B     		cmp	r3, #1
 3299 13d6 3CD0     		beq	.L191
 701:..\src/command_processing.c ****                         case 0:
 702:..\src/command_processing.c ****                             strcat(aux_str, " MC33887 (Standard)\0");
 703:..\src/command_processing.c ****                         break;
 704:..\src/command_processing.c ****                         case 1:
 705:..\src/command_processing.c ****                             strcat(aux_str, " VNH5019 (High power)\0");
 706:..\src/command_processing.c ****                         break;
 707:..\src/command_processing.c ****                     }
 708:..\src/command_processing.c ****                     break;
 3300              		.loc 1 708 0
 3301 13d8 58E0     		b	.L146
 3302              	.L240:
 3303 13da 00BF     		.align	2
 3304              	.L239:
 3305 13dc 98000000 		.word	.LC57
 3306 13e0 A8000000 		.word	.LC58
 3307 13e4 B4000000 		.word	.LC59
 3308 13e8 C8000000 		.word	.LC60
 3309 13ec D4000000 		.word	.LC61
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 92


 3310 13f0 DC000000 		.word	.LC62
 3311 13f4 E8000000 		.word	.LC63
 3312 13f8 00010000 		.word	.LC64
 3313 13fc 08010000 		.word	.LC65
 3314 1400 10010000 		.word	.LC66
 3315 1404 18010000 		.word	.LC67
 3316 1408 20010000 		.word	.LC68
 3317 140c 28010000 		.word	.LC69
 3318 1410 30010000 		.word	.LC70
 3319 1414 38010000 		.word	.LC71
 3320 1418 48010000 		.word	.LC72
 3321 141c 5C010000 		.word	.LC73
 3322 1420 6C010000 		.word	.LC74
 3323 1424 74010000 		.word	.LC75
 3324              	.L190:
 702:..\src/command_processing.c ****                         break;
 3325              		.loc 1 702 0
 3326 1428 07F55673 		add	r3, r7, #856
 3327 142c 1846     		mov	r0, r3
 3328 142e FFF7FEFF 		bl	strlen
 3329 1432 0346     		mov	r3, r0
 3330 1434 1A46     		mov	r2, r3
 3331 1436 07F55673 		add	r3, r7, #856
 3332 143a 1344     		add	r3, r3, r2
 3333 143c D14A     		ldr	r2, .L241
 3334 143e 1D46     		mov	r5, r3
 3335 1440 1446     		mov	r4, r2
 3336 1442 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3337 1444 2860     		str	r0, [r5]	@ unaligned
 3338 1446 6960     		str	r1, [r5, #4]	@ unaligned
 3339 1448 AA60     		str	r2, [r5, #8]	@ unaligned
 3340 144a EB60     		str	r3, [r5, #12]	@ unaligned
 3341 144c 2068     		ldr	r0, [r4]	@ unaligned
 3342 144e 2861     		str	r0, [r5, #16]	@ unaligned
 703:..\src/command_processing.c ****                         case 1:
 3343              		.loc 1 703 0
 3344 1450 16E0     		b	.L189
 3345              	.L191:
 705:..\src/command_processing.c ****                         break;
 3346              		.loc 1 705 0
 3347 1452 07F55673 		add	r3, r7, #856
 3348 1456 1846     		mov	r0, r3
 3349 1458 FFF7FEFF 		bl	strlen
 3350 145c 0346     		mov	r3, r0
 3351 145e 1A46     		mov	r2, r3
 3352 1460 07F55673 		add	r3, r7, #856
 3353 1464 1344     		add	r3, r3, r2
 3354 1466 C84A     		ldr	r2, .L241+4
 3355 1468 1D46     		mov	r5, r3
 3356 146a 1446     		mov	r4, r2
 3357 146c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 3358 146e 2860     		str	r0, [r5]	@ unaligned
 3359 1470 6960     		str	r1, [r5, #4]	@ unaligned
 3360 1472 AA60     		str	r2, [r5, #8]	@ unaligned
 3361 1474 EB60     		str	r3, [r5, #12]	@ unaligned
 3362 1476 2068     		ldr	r0, [r4]	@ unaligned
 3363 1478 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 93


 3364 147a A388     		ldrh	r3, [r4, #4]	@ unaligned
 3365 147c AB82     		strh	r3, [r5, #20]	@ unaligned
 706:..\src/command_processing.c ****                     }
 3366              		.loc 1 706 0
 3367 147e 00BF     		nop
 3368              	.L189:
 3369              		.loc 1 708 0
 3370 1480 04E0     		b	.L146
 3371              	.L228:
 623:..\src/command_processing.c ****                 case 2:     // control mode menu
 3372              		.loc 1 623 0
 3373 1482 00BF     		nop
 3374 1484 02E0     		b	.L146
 3375              	.L229:
 639:..\src/command_processing.c ****                 case 3:     // yes/no menu
 3376              		.loc 1 639 0
 3377 1486 00BF     		nop
 3378 1488 00E0     		b	.L146
 3379              	.L230:
 683:..\src/command_processing.c ****                 case 7:
 3380              		.loc 1 683 0
 3381 148a 00BF     		nop
 3382              	.L146:
 709:..\src/command_processing.c ****             }
 710:..\src/command_processing.c ****             //Recomputes string lenght
 711:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 3383              		.loc 1 711 0
 3384 148c 07F55673 		add	r3, r7, #856
 3385 1490 1846     		mov	r0, r3
 3386 1492 FFF7FEFF 		bl	strlen
 3387 1496 0346     		mov	r3, r0
 3388 1498 DBB2     		uxtb	r3, r3
 3389 149a 0133     		adds	r3, r3, #1
 3390 149c 87F8223F 		strb	r3, [r7, #3874]
 3391              	.L145:
 712:..\src/command_processing.c ****         }
 713:..\src/command_processing.c **** 
 714:..\src/command_processing.c ****         // Add parameter string to packet
 715:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 3392              		.loc 1 715 0
 3393 14a0 97F8223F 		ldrb	r3, [r7, #3874]
 3394 14a4 87F8273F 		strb	r3, [r7, #3879]
 3395 14a8 25E0     		b	.L192
 3396              	.L193:
 716:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3397              		.loc 1 716 0 discriminator 3
 3398 14aa 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3399 14ae 3222     		movs	r2, #50
 3400 14b0 02FB03F3 		mul	r3, r2, r3
 3401 14b4 1A1D     		adds	r2, r3, #4
 3402 14b6 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 3403 14ba 97F8251F 		ldrb	r1, [r7, #3877]	@ zero_extendqisi2
 3404 14be 07F53C70 		add	r0, r7, #752
 3405 14c2 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 3406 14c4 01FB03F3 		mul	r3, r1, r3
 3407 14c8 1A44     		add	r2, r2, r3
 3408 14ca 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 94


 3409 14ce 1A44     		add	r2, r2, r3
 3410 14d0 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3411 14d4 D31A     		subs	r3, r2, r3
 3412 14d6 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3413 14da 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3414 14de 8A1A     		subs	r2, r1, r2
 3415 14e0 07F55671 		add	r1, r7, #856
 3416 14e4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3417 14e6 07F56372 		add	r2, r7, #908
 3418 14ea D154     		strb	r1, [r2, r3]
 715:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3419              		.loc 1 715 0 discriminator 3
 3420 14ec 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3421 14f0 013B     		subs	r3, r3, #1
 3422 14f2 87F8273F 		strb	r3, [r7, #3879]
 3423              	.L192:
 715:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3424              		.loc 1 715 0 is_stmt 0 discriminator 1
 3425 14f6 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3426 14fa 002B     		cmp	r3, #0
 3427 14fc D5D1     		bne	.L193
 717:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 718:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3428              		.loc 1 718 0 is_stmt 1
 3429 14fe 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3430 1502 07F54772 		add	r2, r7, #796
 3431 1506 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3432 1508 002B     		cmp	r3, #0
 3433 150a 1FD1     		bne	.L194
 719:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 3434              		.loc 1 719 0
 3435 150c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3436 1510 3222     		movs	r2, #50
 3437 1512 02FB03F3 		mul	r3, r2, r3
 3438 1516 1A1D     		adds	r2, r3, #4
 3439 1518 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 3440 151c 97F8251F 		ldrb	r1, [r7, #3877]	@ zero_extendqisi2
 3441 1520 07F53C70 		add	r0, r7, #752
 3442 1524 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 3443 1526 01FB03F3 		mul	r3, r1, r3
 3444 152a 1A44     		add	r2, r2, r3
 3445 152c 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3446 1530 1344     		add	r3, r3, r2
 3447 1532 97F8242F 		ldrb	r2, [r7, #3876]	@ zero_extendqisi2
 3448 1536 07F53771 		add	r1, r7, #732
 3449 153a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3450 153c 07F56372 		add	r2, r7, #908
 3451 1540 D154     		strb	r1, [r2, r3]
 720:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 3452              		.loc 1 720 0
 3453 1542 97F8243F 		ldrb	r3, [r7, #3876]
 3454 1546 0133     		adds	r3, r3, #1
 3455 1548 87F8243F 		strb	r3, [r7, #3876]
 3456              	.L194:
 721:..\src/command_processing.c ****         }
 722:..\src/command_processing.c ****         
 723:..\src/command_processing.c ****         
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 95


 724:..\src/command_processing.c ****         // Adjust m_addr increment, according to c_mem structure
 725:..\src/command_processing.c ****         switch (idx) {
 3457              		.loc 1 725 0
 3458 154c 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3459 1550 232B     		cmp	r3, #35
 3460 1552 77D8     		bhi	.L195
 3461 1554 01A2     		adr	r2, .L197
 3462 1556 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3463 155a 00BF     		.p2align 2
 3464              	.L197:
 3465 155c ED150000 		.word	.L196+1
 3466 1560 45160000 		.word	.L195+1
 3467 1564 F5150000 		.word	.L198+1
 3468 1568 45160000 		.word	.L195+1
 3469 156c 45160000 		.word	.L195+1
 3470 1570 45160000 		.word	.L195+1
 3471 1574 FD150000 		.word	.L199+1
 3472 1578 05160000 		.word	.L200+1
 3473 157c 45160000 		.word	.L195+1
 3474 1580 0D160000 		.word	.L201+1
 3475 1584 45160000 		.word	.L195+1
 3476 1588 45160000 		.word	.L195+1
 3477 158c 45160000 		.word	.L195+1
 3478 1590 45160000 		.word	.L195+1
 3479 1594 15160000 		.word	.L202+1
 3480 1598 45160000 		.word	.L195+1
 3481 159c 45160000 		.word	.L195+1
 3482 15a0 45160000 		.word	.L195+1
 3483 15a4 45160000 		.word	.L195+1
 3484 15a8 45160000 		.word	.L195+1
 3485 15ac 1D160000 		.word	.L203+1
 3486 15b0 45160000 		.word	.L195+1
 3487 15b4 45160000 		.word	.L195+1
 3488 15b8 45160000 		.word	.L195+1
 3489 15bc 45160000 		.word	.L195+1
 3490 15c0 45160000 		.word	.L195+1
 3491 15c4 45160000 		.word	.L195+1
 3492 15c8 45160000 		.word	.L195+1
 3493 15cc 45160000 		.word	.L195+1
 3494 15d0 45160000 		.word	.L195+1
 3495 15d4 25160000 		.word	.L204+1
 3496 15d8 2D160000 		.word	.L205+1
 3497 15dc 45160000 		.word	.L195+1
 3498 15e0 35160000 		.word	.L206+1
 3499 15e4 45160000 		.word	.L195+1
 3500 15e8 3D160000 		.word	.L207+1
 3501              		.p2align 1
 3502              	.L196:
 726:..\src/command_processing.c ****             case 0:
 727:..\src/command_processing.c ****                 // Add 2 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 728:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.k_p;
 3503              		.loc 1 728 0
 3504 15ec 674B     		ldr	r3, .L241+8
 3505 15ee C7F81C3F 		str	r3, [r7, #3868]
 729:..\src/command_processing.c ****                 break;
 3506              		.loc 1 729 0
 3507 15f2 38E0     		b	.L208
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 96


 3508              	.L198:
 730:..\src/command_processing.c ****             case 2:
 731:..\src/command_processing.c ****                 // double loop PID controller parameters 
 732:..\src/command_processing.c ****                 //(increment after CURRENT PID parameters)
 733:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 6*sod;
 734:..\src/command_processing.c ****                 m_addr = &c_mem.activ;
 3509              		.loc 1 734 0
 3510 15f4 664B     		ldr	r3, .L241+12
 3511 15f6 C7F81C3F 		str	r3, [r7, #3868]
 735:..\src/command_processing.c ****                 break; 
 3512              		.loc 1 735 0
 3513 15fa 34E0     		b	.L208
 3514              	.L199:
 736:..\src/command_processing.c ****             case 6:
 737:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 738:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_off[0];
 3515              		.loc 1 738 0
 3516 15fc 654B     		ldr	r3, .L241+16
 3517 15fe C7F81C3F 		str	r3, [r7, #3868]
 739:..\src/command_processing.c ****                 break;
 3518              		.loc 1 739 0
 3519 1602 30E0     		b	.L208
 3520              	.L200:
 740:..\src/command_processing.c ****             case 7:
 741:..\src/command_processing.c ****                 //(increment after OFFSET parameters)
 742:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*4;     //int16->int32 conversion
 743:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_mult[0];
 3521              		.loc 1 743 0
 3522 1604 644B     		ldr	r3, .L241+20
 3523 1606 C7F81C3F 		str	r3, [r7, #3868]
 744:..\src/command_processing.c ****                 break;
 3524              		.loc 1 744 0
 3525 160a 2CE0     		b	.L208
 3526              	.L201:
 745:..\src/command_processing.c ****             case 9:
 746:..\src/command_processing.c ****                 // Add 3 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 747:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.pos_lim_inf;
 3527              		.loc 1 747 0
 3528 160c 634B     		ldr	r3, .L241+24
 3529 160e C7F81C3F 		str	r3, [r7, #3868]
 748:..\src/command_processing.c ****                 break;
 3530              		.loc 1 748 0
 3531 1612 28E0     		b	.L208
 3532              	.L202:
 749:..\src/command_processing.c ****              case 14:
 750:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 751:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.emg_max_value[0];
 3533              		.loc 1 751 0
 3534 1614 624B     		ldr	r3, .L241+28
 3535 1616 C7F81C3F 		str	r3, [r7, #3868]
 752:..\src/command_processing.c ****                 break;
 3536              		.loc 1 752 0
 3537 161a 24E0     		b	.L208
 3538              	.L203:
 753:..\src/command_processing.c ****             case 20:
 754:..\src/command_processing.c ****                 //(increment after LOOKUP TABLE parameter)
 755:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 1 + 3;   //1 = baudrate
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 97


 756:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.maint_day;
 3539              		.loc 1 756 0
 3540 161c 614B     		ldr	r3, .L241+32
 3541 161e C7F81C3F 		str	r3, [r7, #3868]
 757:..\src/command_processing.c ****                 break;
 3542              		.loc 1 757 0
 3543 1622 20E0     		b	.L208
 3544              	.L204:
 758:..\src/command_processing.c ****             case 30:
 759:..\src/command_processing.c ****                 //(increment after RESET COUNTERS parameter)
 760:..\src/command_processing.c ****                 //m_addr goes to c_mem.curr_time[0] (row 6)
 761:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.curr_time[0];
 3545              		.loc 1 761 0
 3546 1624 604B     		ldr	r3, .L241+36
 3547 1626 C7F81C3F 		str	r3, [r7, #3868]
 762:..\src/command_processing.c ****                 break;  
 3548              		.loc 1 762 0
 3549 162a 1CE0     		b	.L208
 3550              	.L205:
 763:..\src/command_processing.c ****             case 31:
 764:..\src/command_processing.c ****                 //(increment after CURR TIME parameter)
 765:..\src/command_processing.c ****                 //m_addr goes to c_mem.SPI_read_delay (row 22)
 766:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.SPI_read_delay;
 3551              		.loc 1 766 0
 3552 162c 5F4B     		ldr	r3, .L241+40
 3553 162e C7F81C3F 		str	r3, [r7, #3868]
 767:..\src/command_processing.c ****                 break;                
 3554              		.loc 1 767 0
 3555 1632 18E0     		b	.L208
 3556              	.L206:
 768:..\src/command_processing.c ****             case 33:
 769:..\src/command_processing.c ****                 //(increment after LAST CHECKED TIME parameter)
 770:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 10 + 26;   //10 = unused bytes_1, 1 = SPI 
 771:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.Encoder_conf[0][0];
 3557              		.loc 1 771 0
 3558 1634 5E4B     		ldr	r3, .L241+44
 3559 1636 C7F81C3F 		str	r3, [r7, #3868]
 772:..\src/command_processing.c ****                 break; 
 3560              		.loc 1 772 0
 3561 163a 14E0     		b	.L208
 3562              	.L207:
 773:..\src/command_processing.c ****             case 35:
 774:..\src/command_processing.c ****                 //(increment after Encoder_conf parameter)
 775:..\src/command_processing.c ****                 //m_addr = m_addr + N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX;       //2*5
 776:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.ADC_conf[0];
 3563              		.loc 1 776 0
 3564 163c 5D4B     		ldr	r3, .L241+48
 3565 163e C7F81C3F 		str	r3, [r7, #3868]
 777:..\src/command_processing.c ****                 break;                 
 3566              		.loc 1 777 0
 3567 1642 10E0     		b	.L208
 3568              	.L195:
 778:..\src/command_processing.c ****             default:
 779:..\src/command_processing.c ****                 m_addr = m_addr + NUM_ITEMS[idx]*sod;
 3569              		.loc 1 779 0
 3570 1644 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3571 1648 07F53C72 		add	r2, r7, #752
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 98


 3572 164c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3573 164e 1A46     		mov	r2, r3
 3574 1650 97F8233F 		ldrb	r3, [r7, #3875]	@ zero_extendqisi2
 3575 1654 03FB02F3 		mul	r3, r3, r2
 3576 1658 1A46     		mov	r2, r3
 3577 165a D7F81C3F 		ldr	r3, [r7, #3868]
 3578 165e 1344     		add	r3, r3, r2
 3579 1660 C7F81C3F 		str	r3, [r7, #3868]
 780:..\src/command_processing.c ****                 break;
 3580              		.loc 1 780 0
 3581 1664 00BF     		nop
 3582              	.L208:
 402:..\src/command_processing.c ****         
 3583              		.loc 1 402 0 discriminator 2
 3584 1666 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3585 166a 0133     		adds	r3, r3, #1
 3586 166c 87F8253F 		strb	r3, [r7, #3877]
 3587              	.L60:
 402:..\src/command_processing.c ****         
 3588              		.loc 1 402 0 is_stmt 0 discriminator 1
 3589 1670 97F8253F 		ldrb	r3, [r7, #3877]	@ zero_extendqisi2
 3590 1674 212B     		cmp	r3, #33
 3591 1676 7EF651AE 		bls	.L209
 781:..\src/command_processing.c ****                 
 782:..\src/command_processing.c ****             // reset counters reads g_mem.unused_bytes[0]
 783:..\src/command_processing.c ****         }
 784:..\src/command_processing.c ****     }
 785:..\src/command_processing.c **** 
 786:..\src/command_processing.c ****     string_lenght = strlen((char*)input_mode_menu);
 3592              		.loc 1 786 0 is_stmt 1
 3593 167a 07F5E873 		add	r3, r7, #464
 3594 167e 1846     		mov	r0, r3
 3595 1680 FFF7FEFF 		bl	strlen
 3596 1684 0346     		mov	r3, r0
 3597 1686 87F8223F 		strb	r3, [r7, #3874]
 787:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3598              		.loc 1 787 0
 3599 168a 97F8223F 		ldrb	r3, [r7, #3874]
 3600 168e 87F8273F 		strb	r3, [r7, #3879]
 3601 1692 16E0     		b	.L210
 3602              	.L211:
 788:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + string_lenght - i] = input_mode_menu[st
 3603              		.loc 1 788 0 discriminator 3
 3604 1694 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3605 1698 03F2A662 		addw	r2, r3, #1702
 3606 169c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3607 16a0 D31A     		subs	r3, r2, r3
 3608 16a2 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3609 16a6 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3610 16aa 8A1A     		subs	r2, r1, r2
 3611 16ac 07F5E871 		add	r1, r7, #464
 3612 16b0 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3613 16b2 07F56372 		add	r2, r7, #908
 3614 16b6 D154     		strb	r1, [r2, r3]
 787:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3615              		.loc 1 787 0 discriminator 3
 3616 16b8 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 99


 3617 16bc 013B     		subs	r3, r3, #1
 3618 16be 87F8273F 		strb	r3, [r7, #3879]
 3619              	.L210:
 787:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3620              		.loc 1 787 0 is_stmt 0 discriminator 1
 3621 16c2 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3622 16c6 002B     		cmp	r3, #0
 3623 16c8 E4D1     		bne	.L211
 789:..\src/command_processing.c **** 
 790:..\src/command_processing.c ****     string_lenght = strlen((char*)control_mode_menu);
 3624              		.loc 1 790 0 is_stmt 1
 3625 16ca 07F5C873 		add	r3, r7, #400
 3626 16ce 1846     		mov	r0, r3
 3627 16d0 FFF7FEFF 		bl	strlen
 3628 16d4 0346     		mov	r3, r0
 3629 16d6 87F8223F 		strb	r3, [r7, #3874]
 791:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3630              		.loc 1 791 0
 3631 16da 97F8223F 		ldrb	r3, [r7, #3874]
 3632 16de 87F8273F 		strb	r3, [r7, #3879]
 3633 16e2 16E0     		b	.L212
 3634              	.L213:
 792:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + PARAM_MENU_SLOT + string_lenght - i] = 
 3635              		.loc 1 792 0 discriminator 3
 3636 16e4 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3637 16e8 03F23C72 		addw	r2, r3, #1852
 3638 16ec 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3639 16f0 D31A     		subs	r3, r2, r3
 3640 16f2 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3641 16f6 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3642 16fa 8A1A     		subs	r2, r1, r2
 3643 16fc 07F5C871 		add	r1, r7, #400
 3644 1700 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3645 1702 07F56372 		add	r2, r7, #908
 3646 1706 D154     		strb	r1, [r2, r3]
 791:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3647              		.loc 1 791 0 discriminator 3
 3648 1708 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3649 170c 013B     		subs	r3, r3, #1
 3650 170e 87F8273F 		strb	r3, [r7, #3879]
 3651              	.L212:
 791:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3652              		.loc 1 791 0 is_stmt 0 discriminator 1
 3653 1712 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3654 1716 002B     		cmp	r3, #0
 3655 1718 E4D1     		bne	.L213
 793:..\src/command_processing.c **** 
 794:..\src/command_processing.c ****     string_lenght = strlen((char*)yes_no_menu);
 3656              		.loc 1 794 0 is_stmt 1
 3657 171a 07F5B273 		add	r3, r7, #356
 3658 171e 1846     		mov	r0, r3
 3659 1720 FFF7FEFF 		bl	strlen
 3660 1724 0346     		mov	r3, r0
 3661 1726 87F8223F 		strb	r3, [r7, #3874]
 795:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3662              		.loc 1 795 0
 3663 172a 97F8223F 		ldrb	r3, [r7, #3874]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 100


 3664 172e 87F8273F 		strb	r3, [r7, #3879]
 3665 1732 16E0     		b	.L214
 3666              	.L215:
 796:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 2*PARAM_MENU_SLOT + string_lenght - i] 
 3667              		.loc 1 796 0 discriminator 3
 3668 1734 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3669 1738 03F2D272 		addw	r2, r3, #2002
 3670 173c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3671 1740 D31A     		subs	r3, r2, r3
 3672 1742 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3673 1746 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3674 174a 8A1A     		subs	r2, r1, r2
 3675 174c 07F5B271 		add	r1, r7, #356
 3676 1750 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3677 1752 07F56372 		add	r2, r7, #908
 3678 1756 D154     		strb	r1, [r2, r3]
 795:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3679              		.loc 1 795 0 discriminator 3
 3680 1758 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3681 175c 013B     		subs	r3, r3, #1
 3682 175e 87F8273F 		strb	r3, [r7, #3879]
 3683              	.L214:
 795:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3684              		.loc 1 795 0 is_stmt 0 discriminator 1
 3685 1762 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3686 1766 002B     		cmp	r3, #0
 3687 1768 E4D1     		bne	.L215
 797:..\src/command_processing.c **** 
 798:..\src/command_processing.c ****     string_lenght = strlen((char*)right_left_menu);
 3688              		.loc 1 798 0 is_stmt 1
 3689 176a 07F5A673 		add	r3, r7, #332
 3690 176e 1846     		mov	r0, r3
 3691 1770 FFF7FEFF 		bl	strlen
 3692 1774 0346     		mov	r3, r0
 3693 1776 87F8223F 		strb	r3, [r7, #3874]
 799:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3694              		.loc 1 799 0
 3695 177a 97F8223F 		ldrb	r3, [r7, #3874]
 3696 177e 87F8273F 		strb	r3, [r7, #3879]
 3697 1782 30E0     		b	.L216
 3698              	.L242:
 3699              		.align	2
 3700              	.L241:
 3701 1784 7C010000 		.word	.LC76
 3702 1788 94010000 		.word	.LC77
 3703 178c A4000000 		.word	c_mem+164
 3704 1790 D4000000 		.word	c_mem+212
 3705 1794 DC000000 		.word	c_mem+220
 3706 1798 E8000000 		.word	c_mem+232
 3707 179c F8000000 		.word	c_mem+248
 3708 17a0 10010000 		.word	c_mem+272
 3709 17a4 35010000 		.word	c_mem+309
 3710 17a8 50000000 		.word	c_mem+80
 3711 17ac 50010000 		.word	c_mem+336
 3712 17b0 6A010000 		.word	c_mem+362
 3713 17b4 74010000 		.word	c_mem+372
 3714              	.L217:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 101


 800:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 3*PARAM_MENU_SLOT + string_lenght - i] 
 3715              		.loc 1 800 0 discriminator 3
 3716 17b8 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3717 17bc 03F66802 		addw	r2, r3, #2152
 3718 17c0 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3719 17c4 D31A     		subs	r3, r2, r3
 3720 17c6 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3721 17ca 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3722 17ce 8A1A     		subs	r2, r1, r2
 3723 17d0 07F5A671 		add	r1, r7, #332
 3724 17d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3725 17d6 07F56372 		add	r2, r7, #908
 3726 17da D154     		strb	r1, [r2, r3]
 799:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3727              		.loc 1 799 0 discriminator 3
 3728 17dc 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3729 17e0 013B     		subs	r3, r3, #1
 3730 17e2 87F8273F 		strb	r3, [r7, #3879]
 3731              	.L216:
 799:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3732              		.loc 1 799 0 is_stmt 0 discriminator 1
 3733 17e6 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3734 17ea 002B     		cmp	r3, #0
 3735 17ec E4D1     		bne	.L217
 801:..\src/command_processing.c **** 
 802:..\src/command_processing.c ****     string_lenght = strlen((char*)on_off_menu);
 3736              		.loc 1 802 0 is_stmt 1
 3737 17ee 07F59073 		add	r3, r7, #288
 3738 17f2 1846     		mov	r0, r3
 3739 17f4 FFF7FEFF 		bl	strlen
 3740 17f8 0346     		mov	r3, r0
 3741 17fa 87F8223F 		strb	r3, [r7, #3874]
 803:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3742              		.loc 1 803 0
 3743 17fe 97F8223F 		ldrb	r3, [r7, #3874]
 3744 1802 87F8273F 		strb	r3, [r7, #3879]
 3745 1806 16E0     		b	.L218
 3746              	.L219:
 804:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 4*PARAM_MENU_SLOT + string_lenght - i] 
 3747              		.loc 1 804 0 discriminator 3
 3748 1808 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3749 180c 03F6FE02 		addw	r2, r3, #2302
 3750 1810 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3751 1814 D31A     		subs	r3, r2, r3
 3752 1816 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3753 181a 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3754 181e 8A1A     		subs	r2, r1, r2
 3755 1820 07F59071 		add	r1, r7, #288
 3756 1824 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3757 1826 07F56372 		add	r2, r7, #908
 3758 182a D154     		strb	r1, [r2, r3]
 803:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3759              		.loc 1 803 0 discriminator 3
 3760 182c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3761 1830 013B     		subs	r3, r3, #1
 3762 1832 87F8273F 		strb	r3, [r7, #3879]
 3763              	.L218:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 102


 803:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3764              		.loc 1 803 0 is_stmt 0 discriminator 1
 3765 1836 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3766 183a 002B     		cmp	r3, #0
 3767 183c E4D1     		bne	.L219
 805:..\src/command_processing.c **** 
 806:..\src/command_processing.c ****     string_lenght = strlen((char*)exp_port_menu);
 3768              		.loc 1 806 0 is_stmt 1
 3769 183e 07F1C403 		add	r3, r7, #196
 3770 1842 1846     		mov	r0, r3
 3771 1844 FFF7FEFF 		bl	strlen
 3772 1848 0346     		mov	r3, r0
 3773 184a 87F8223F 		strb	r3, [r7, #3874]
 807:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3774              		.loc 1 807 0
 3775 184e 97F8223F 		ldrb	r3, [r7, #3874]
 3776 1852 87F8273F 		strb	r3, [r7, #3879]
 3777 1856 16E0     		b	.L220
 3778              	.L221:
 808:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 5*PARAM_MENU_SLOT + string_lenght - i] 
 3779              		.loc 1 808 0 discriminator 3
 3780 1858 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3781 185c 03F69412 		addw	r2, r3, #2452
 3782 1860 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3783 1864 D31A     		subs	r3, r2, r3
 3784 1866 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3785 186a 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3786 186e 8A1A     		subs	r2, r1, r2
 3787 1870 07F1C401 		add	r1, r7, #196
 3788 1874 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3789 1876 07F56372 		add	r2, r7, #908
 3790 187a D154     		strb	r1, [r2, r3]
 807:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3791              		.loc 1 807 0 discriminator 3
 3792 187c 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3793 1880 013B     		subs	r3, r3, #1
 3794 1882 87F8273F 		strb	r3, [r7, #3879]
 3795              	.L220:
 807:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3796              		.loc 1 807 0 is_stmt 0 discriminator 1
 3797 1886 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3798 188a 002B     		cmp	r3, #0
 3799 188c E4D1     		bne	.L221
 809:..\src/command_processing.c **** 
 810:..\src/command_processing.c ****     string_lenght = strlen((char*)spi_delay_menu);
 3800              		.loc 1 810 0 is_stmt 1
 3801 188e 07F14C03 		add	r3, r7, #76
 3802 1892 1846     		mov	r0, r3
 3803 1894 FFF7FEFF 		bl	strlen
 3804 1898 0346     		mov	r3, r0
 3805 189a 87F8223F 		strb	r3, [r7, #3874]
 811:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3806              		.loc 1 811 0
 3807 189e 97F8223F 		ldrb	r3, [r7, #3874]
 3808 18a2 87F8273F 		strb	r3, [r7, #3879]
 3809 18a6 16E0     		b	.L222
 3810              	.L223:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 103


 812:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 6*PARAM_MENU_SLOT + string_lenght - i] 
 3811              		.loc 1 812 0 discriminator 3
 3812 18a8 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3813 18ac 03F62A22 		addw	r2, r3, #2602
 3814 18b0 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3815 18b4 D31A     		subs	r3, r2, r3
 3816 18b6 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3817 18ba 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3818 18be 8A1A     		subs	r2, r1, r2
 3819 18c0 07F14C01 		add	r1, r7, #76
 3820 18c4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3821 18c6 07F56372 		add	r2, r7, #908
 3822 18ca D154     		strb	r1, [r2, r3]
 811:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3823              		.loc 1 811 0 discriminator 3
 3824 18cc 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3825 18d0 013B     		subs	r3, r3, #1
 3826 18d2 87F8273F 		strb	r3, [r7, #3879]
 3827              	.L222:
 811:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3828              		.loc 1 811 0 is_stmt 0 discriminator 1
 3829 18d6 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3830 18da 002B     		cmp	r3, #0
 3831 18dc E4D1     		bne	.L223
 813:..\src/command_processing.c **** 
 814:..\src/command_processing.c ****     string_lenght = strlen((char*)motor_driver_type_menu);
 3832              		.loc 1 814 0 is_stmt 1
 3833 18de 3B1D     		adds	r3, r7, #4
 3834 18e0 1846     		mov	r0, r3
 3835 18e2 FFF7FEFF 		bl	strlen
 3836 18e6 0346     		mov	r3, r0
 3837 18e8 87F8223F 		strb	r3, [r7, #3874]
 815:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3838              		.loc 1 815 0
 3839 18ec 97F8223F 		ldrb	r3, [r7, #3874]
 3840 18f0 87F8273F 		strb	r3, [r7, #3879]
 3841 18f4 15E0     		b	.L224
 3842              	.L225:
 816:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_DEV_PARAMS + 2 + 7*PARAM_MENU_SLOT + string_lenght - i] 
 3843              		.loc 1 816 0 discriminator 3
 3844 18f6 97F8223F 		ldrb	r3, [r7, #3874]	@ zero_extendqisi2
 3845 18fa 03F52C62 		add	r2, r3, #2752
 3846 18fe 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3847 1902 D31A     		subs	r3, r2, r3
 3848 1904 97F8221F 		ldrb	r1, [r7, #3874]	@ zero_extendqisi2
 3849 1908 97F8272F 		ldrb	r2, [r7, #3879]	@ zero_extendqisi2
 3850 190c 8A1A     		subs	r2, r1, r2
 3851 190e 391D     		adds	r1, r7, #4
 3852 1910 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3853 1912 07F56372 		add	r2, r7, #908
 3854 1916 D154     		strb	r1, [r2, r3]
 815:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3855              		.loc 1 815 0 discriminator 3
 3856 1918 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3857 191c 013B     		subs	r3, r3, #1
 3858 191e 87F8273F 		strb	r3, [r7, #3879]
 3859              	.L224:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 104


 815:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3860              		.loc 1 815 0 is_stmt 0 discriminator 1
 3861 1922 97F8273F 		ldrb	r3, [r7, #3879]	@ zero_extendqisi2
 3862 1926 002B     		cmp	r3, #0
 3863 1928 E5D1     		bne	.L225
 817:..\src/command_processing.c ****         
 818:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 3864              		.loc 1 818 0 is_stmt 1
 3865 192a B7F81A3F 		ldrh	r3, [r7, #3866]
 3866 192e 5C1E     		subs	r4, r3, #1
 3867 1930 B7F81A3F 		ldrh	r3, [r7, #3866]	@ movhi
 3868 1934 DBB2     		uxtb	r3, r3
 3869 1936 013B     		subs	r3, r3, #1
 3870 1938 DAB2     		uxtb	r2, r3
 3871 193a 07F56373 		add	r3, r7, #908
 3872 193e 1146     		mov	r1, r2
 3873 1940 1846     		mov	r0, r3
 3874 1942 FFF7FEFF 		bl	LCRChecksum
 3875 1946 0346     		mov	r3, r0
 3876 1948 1A46     		mov	r2, r3
 3877 194a 07F56373 		add	r3, r7, #908
 3878 194e 1A55     		strb	r2, [r3, r4]
 819:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 3879              		.loc 1 819 0
 3880 1950 B7F81A2F 		ldrh	r2, [r7, #3866]
 3881 1954 07F56373 		add	r3, r7, #908
 3882 1958 1146     		mov	r1, r2
 3883 195a 1846     		mov	r0, r3
 3884 195c FFF7FEFF 		bl	commWrite
 820:..\src/command_processing.c **** }
 3885              		.loc 1 820 0
 3886 1960 00BF     		nop
 3887 1962 07F62C77 		addw	r7, r7, #3884
 3888              		.cfi_def_cfa_offset 20
 3889 1966 BD46     		mov	sp, r7
 3890              		.cfi_def_cfa_register 13
 3891              		@ sp needed
 3892 1968 F0BD     		pop	{r4, r5, r6, r7, pc}
 3893              		.cfi_endproc
 3894              	.LFE67:
 3895              		.size	get_param_list, .-get_param_list
 3896              		.global	__aeabi_fmul
 3897              		.global	__aeabi_f2iz
 3898 196a 00BF     		.section	.text.manage_param_list,"ax",%progbits
 3899              		.align	2
 3900              		.global	manage_param_list
 3901              		.thumb
 3902              		.thumb_func
 3903              		.type	manage_param_list, %function
 3904              	manage_param_list:
 3905              	.LFB68:
 821:..\src/command_processing.c **** 
 822:..\src/command_processing.c **** //==============================================================================
 823:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 824:..\src/command_processing.c **** //==============================================================================
 825:..\src/command_processing.c **** 
 826:..\src/command_processing.c **** void manage_param_list(uint16 index) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 105


 3906              		.loc 1 826 0
 3907              		.cfi_startproc
 3908              		@ args = 0, pretend = 0, frame = 24
 3909              		@ frame_needed = 1, uses_anonymous_args = 0
 3910 0000 80B5     		push	{r7, lr}
 3911              		.cfi_def_cfa_offset 8
 3912              		.cfi_offset 7, -8
 3913              		.cfi_offset 14, -4
 3914 0002 86B0     		sub	sp, sp, #24
 3915              		.cfi_def_cfa_offset 32
 3916 0004 00AF     		add	r7, sp, #0
 3917              		.cfi_def_cfa_register 7
 3918 0006 0346     		mov	r3, r0
 3919 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 827:..\src/command_processing.c ****     uint8 CYDATA i, j;
 828:..\src/command_processing.c ****     uint8 aux_uchar;
 829:..\src/command_processing.c ****     float aux_float, aux_float2;
 830:..\src/command_processing.c ****     
 831:..\src/command_processing.c ****     switch(index) {
 3920              		.loc 1 831 0
 3921 000a FB88     		ldrh	r3, [r7, #6]
 3922 000c 2A2B     		cmp	r3, #42
 3923 000e 00F2C585 		bhi	.L351
 3924 0012 01A2     		adr	r2, .L246
 3925 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3926              		.p2align 2
 3927              	.L246:
 3928 0018 C5000000 		.word	.L245+1
 3929 001c CD000000 		.word	.L247+1
 3930 0020 DB000000 		.word	.L248+1
 3931 0024 B5020000 		.word	.L249+1
 3932 0028 A3040000 		.word	.L250+1
 3933 002c BF040000 		.word	.L251+1
 3934 0030 D3040000 		.word	.L252+1
 3935 0034 DF040000 		.word	.L253+1
 3936 0038 07050000 		.word	.L254+1
 3937 003c 7F050000 		.word	.L255+1
 3938 0040 D1050000 		.word	.L256+1
 3939 0044 DD050000 		.word	.L257+1
 3940 0048 6D060000 		.word	.L258+1
 3941 004c B3060000 		.word	.L259+1
 3942 0050 CD060000 		.word	.L260+1
 3943 0054 03070000 		.word	.L261+1
 3944 0058 0F070000 		.word	.L262+1
 3945 005c 59070000 		.word	.L263+1
 3946 0060 65070000 		.word	.L264+1
 3947 0064 85070000 		.word	.L265+1
 3948 0068 93070000 		.word	.L266+1
 3949 006c 9F070000 		.word	.L267+1
 3950 0070 F3070000 		.word	.L268+1
 3951 0074 13080000 		.word	.L269+1
 3952 0078 4B080000 		.word	.L270+1
 3953 007c 83080000 		.word	.L271+1
 3954 0080 A7080000 		.word	.L272+1
 3955 0084 C7080000 		.word	.L273+1
 3956 0088 D3080000 		.word	.L274+1
 3957 008c 09090000 		.word	.L275+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 106


 3958 0090 1B090000 		.word	.L276+1
 3959 0094 2D090000 		.word	.L277+1
 3960 0098 CF090000 		.word	.L278+1
 3961 009c 070A0000 		.word	.L279+1
 3962 00a0 130A0000 		.word	.L280+1
 3963 00a4 A10A0000 		.word	.L281+1
 3964 00a8 CD0A0000 		.word	.L282+1
 3965 00ac F90A0000 		.word	.L283+1
 3966 00b0 210B0000 		.word	.L284+1
 3967 00b4 4B0B0000 		.word	.L285+1
 3968 00b8 5D0B0000 		.word	.L286+1
 3969 00bc 6F0B0000 		.word	.L287+1
 3970 00c0 810B0000 		.word	.L288+1
 3971              		.p2align 1
 3972              	.L245:
 832:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
 833:..\src/command_processing.c ****             get_param_list();
 3973              		.loc 1 833 0
 3974 00c4 FFF7FEFF 		bl	get_param_list
 834:..\src/command_processing.c ****         break;
 3975              		.loc 1 834 0
 3976 00c8 00F068BD 		b	.L244
 3977              	.L247:
 835:..\src/command_processing.c **** 
 836:..\src/command_processing.c **** //===================================================================     set_id
 837:..\src/command_processing.c ****         case 1:         //ID - uint8
 838:..\src/command_processing.c ****             g_mem.id = g_rx.buffer[3];
 3978              		.loc 1 838 0
 3979 00cc B54B     		ldr	r3, .L355
 3980 00ce DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3981 00d0 B54B     		ldr	r3, .L355+4
 3982 00d2 83F8A120 		strb	r2, [r3, #161]
 839:..\src/command_processing.c ****         break;
 3983              		.loc 1 839 0
 3984 00d6 00F061BD 		b	.L244
 3985              	.L248:
 840:..\src/command_processing.c ****         
 841:..\src/command_processing.c **** //=======================================================     set_pid_parameters
 842:..\src/command_processing.c ****         case 2:         //Position PID - float[3]
 843:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 3986              		.loc 1 843 0
 3987 00da B44B     		ldr	r3, .L355+8
 3988 00dc 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 3989 00e0 032B     		cmp	r3, #3
 3990 00e2 73D0     		beq	.L289
 844:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 3991              		.loc 1 844 0
 3992 00e4 B24B     		ldr	r3, .L355+12
 3993 00e6 1B68     		ldr	r3, [r3]	@ float
 3994 00e8 3B61     		str	r3, [r7, #16]	@ float
 845:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3995              		.loc 1 845 0
 3996 00ea 0023     		movs	r3, #0
 3997 00ec BB75     		strb	r3, [r7, #22]
 3998 00ee 0EE0     		b	.L290
 3999              	.L291:
 846:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 107


 4000              		.loc 1 846 0 discriminator 3
 4001 00f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4002 00f2 C3F10303 		rsb	r3, r3, #3
 4003 00f6 07F10C02 		add	r2, r7, #12
 4004 00fa 1344     		add	r3, r3, r2
 4005 00fc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4006 00fe 07F11001 		add	r1, r7, #16
 4007 0102 0A44     		add	r2, r2, r1
 4008 0104 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4009 0106 1A70     		strb	r2, [r3]
 845:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4010              		.loc 1 845 0 discriminator 3
 4011 0108 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4012 010a 0133     		adds	r3, r3, #1
 4013 010c BB75     		strb	r3, [r7, #22]
 4014              	.L290:
 845:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4015              		.loc 1 845 0 is_stmt 0 discriminator 1
 4016 010e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4017 0110 032B     		cmp	r3, #3
 4018 0112 EDD9     		bls	.L291
 847:..\src/command_processing.c ****                 }
 848:..\src/command_processing.c ****                 g_mem.k_p = aux_float2 * 65536;
 4019              		.loc 1 848 0 is_stmt 1
 4020 0114 FB68     		ldr	r3, [r7, #12]	@ float
 4021 0116 4FF08F41 		mov	r1, #1199570944
 4022 011a 1846     		mov	r0, r3
 4023 011c FFF7FEFF 		bl	__aeabi_fmul
 4024 0120 0346     		mov	r3, r0
 4025 0122 1846     		mov	r0, r3
 4026 0124 FFF7FEFF 		bl	__aeabi_f2iz
 4027 0128 0246     		mov	r2, r0
 4028 012a 9F4B     		ldr	r3, .L355+4
 4029 012c C3F8A420 		str	r2, [r3, #164]
 849:..\src/command_processing.c ****                 //g_mem.k_p = *((float *) &g_rx.buffer[3]) * 65536;
 850:..\src/command_processing.c ****                 
 851:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 4030              		.loc 1 851 0
 4031 0130 A04B     		ldr	r3, .L355+16
 4032 0132 1B68     		ldr	r3, [r3]	@ float
 4033 0134 3B61     		str	r3, [r7, #16]	@ float
 852:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4034              		.loc 1 852 0
 4035 0136 0023     		movs	r3, #0
 4036 0138 BB75     		strb	r3, [r7, #22]
 4037 013a 0EE0     		b	.L292
 4038              	.L293:
 853:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4039              		.loc 1 853 0 discriminator 3
 4040 013c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4041 013e C3F10303 		rsb	r3, r3, #3
 4042 0142 07F10C02 		add	r2, r7, #12
 4043 0146 1344     		add	r3, r3, r2
 4044 0148 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4045 014a 07F11001 		add	r1, r7, #16
 4046 014e 0A44     		add	r2, r2, r1
 4047 0150 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 108


 4048 0152 1A70     		strb	r2, [r3]
 852:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4049              		.loc 1 852 0 discriminator 3
 4050 0154 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4051 0156 0133     		adds	r3, r3, #1
 4052 0158 BB75     		strb	r3, [r7, #22]
 4053              	.L292:
 852:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4054              		.loc 1 852 0 is_stmt 0 discriminator 1
 4055 015a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4056 015c 032B     		cmp	r3, #3
 4057 015e EDD9     		bls	.L293
 854:..\src/command_processing.c ****                 }
 855:..\src/command_processing.c ****                 g_mem.k_i = aux_float2 * 65536;
 4058              		.loc 1 855 0 is_stmt 1
 4059 0160 FB68     		ldr	r3, [r7, #12]	@ float
 4060 0162 4FF08F41 		mov	r1, #1199570944
 4061 0166 1846     		mov	r0, r3
 4062 0168 FFF7FEFF 		bl	__aeabi_fmul
 4063 016c 0346     		mov	r3, r0
 4064 016e 1846     		mov	r0, r3
 4065 0170 FFF7FEFF 		bl	__aeabi_f2iz
 4066 0174 0246     		mov	r2, r0
 4067 0176 8C4B     		ldr	r3, .L355+4
 4068 0178 C3F8A820 		str	r2, [r3, #168]
 856:..\src/command_processing.c ****                 //g_mem.k_i = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 857:..\src/command_processing.c ****                 
 858:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 4069              		.loc 1 858 0
 4070 017c 8E4B     		ldr	r3, .L355+20
 4071 017e 1B68     		ldr	r3, [r3]	@ float
 4072 0180 3B61     		str	r3, [r7, #16]	@ float
 859:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4073              		.loc 1 859 0
 4074 0182 0023     		movs	r3, #0
 4075 0184 BB75     		strb	r3, [r7, #22]
 4076 0186 0EE0     		b	.L294
 4077              	.L295:
 860:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4078              		.loc 1 860 0 discriminator 3
 4079 0188 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4080 018a C3F10303 		rsb	r3, r3, #3
 4081 018e 07F10C02 		add	r2, r7, #12
 4082 0192 1344     		add	r3, r3, r2
 4083 0194 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4084 0196 07F11001 		add	r1, r7, #16
 4085 019a 0A44     		add	r2, r2, r1
 4086 019c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4087 019e 1A70     		strb	r2, [r3]
 859:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4088              		.loc 1 859 0 discriminator 3
 4089 01a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4090 01a2 0133     		adds	r3, r3, #1
 4091 01a4 BB75     		strb	r3, [r7, #22]
 4092              	.L294:
 859:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4093              		.loc 1 859 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 109


 4094 01a6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4095 01a8 032B     		cmp	r3, #3
 4096 01aa EDD9     		bls	.L295
 861:..\src/command_processing.c ****                 }
 862:..\src/command_processing.c ****                 g_mem.k_d = aux_float2 * 65536;
 4097              		.loc 1 862 0 is_stmt 1
 4098 01ac FB68     		ldr	r3, [r7, #12]	@ float
 4099 01ae 4FF08F41 		mov	r1, #1199570944
 4100 01b2 1846     		mov	r0, r3
 4101 01b4 FFF7FEFF 		bl	__aeabi_fmul
 4102 01b8 0346     		mov	r3, r0
 4103 01ba 1846     		mov	r0, r3
 4104 01bc FFF7FEFF 		bl	__aeabi_f2iz
 4105 01c0 0246     		mov	r2, r0
 4106 01c2 794B     		ldr	r3, .L355+4
 4107 01c4 C3F8AC20 		str	r2, [r3, #172]
 863:..\src/command_processing.c ****                 //g_mem.k_d = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 864:..\src/command_processing.c ****             }
 865:..\src/command_processing.c ****             else {
 866:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 867:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 868:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 869:..\src/command_processing.c ****                 }
 870:..\src/command_processing.c ****                 g_mem.k_p_dl = aux_float2 * 65536;
 871:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 872:..\src/command_processing.c ****                 
 873:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 874:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 875:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 876:..\src/command_processing.c ****                 }
 877:..\src/command_processing.c ****                 g_mem.k_i_dl = aux_float2 * 65536;
 878:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 879:..\src/command_processing.c ****                 
 880:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 881:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 882:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 883:..\src/command_processing.c ****                 }
 884:..\src/command_processing.c ****                 g_mem.k_d_dl = aux_float2 * 65536;
 885:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 886:..\src/command_processing.c ****             }
 887:..\src/command_processing.c ****         break;
 4108              		.loc 1 887 0
 4109 01c8 00F0E8BC 		b	.L244
 4110              	.L289:
 866:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4111              		.loc 1 866 0
 4112 01cc 784B     		ldr	r3, .L355+12
 4113 01ce 1B68     		ldr	r3, [r3]	@ float
 4114 01d0 3B61     		str	r3, [r7, #16]	@ float
 867:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4115              		.loc 1 867 0
 4116 01d2 0023     		movs	r3, #0
 4117 01d4 BB75     		strb	r3, [r7, #22]
 4118 01d6 0EE0     		b	.L297
 4119              	.L298:
 868:..\src/command_processing.c ****                 }
 4120              		.loc 1 868 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 110


 4121 01d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4122 01da C3F10303 		rsb	r3, r3, #3
 4123 01de 07F10C02 		add	r2, r7, #12
 4124 01e2 1344     		add	r3, r3, r2
 4125 01e4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4126 01e6 07F11001 		add	r1, r7, #16
 4127 01ea 0A44     		add	r2, r2, r1
 4128 01ec 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4129 01ee 1A70     		strb	r2, [r3]
 867:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4130              		.loc 1 867 0 discriminator 3
 4131 01f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4132 01f2 0133     		adds	r3, r3, #1
 4133 01f4 BB75     		strb	r3, [r7, #22]
 4134              	.L297:
 867:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4135              		.loc 1 867 0 is_stmt 0 discriminator 1
 4136 01f6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4137 01f8 032B     		cmp	r3, #3
 4138 01fa EDD9     		bls	.L298
 870:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 4139              		.loc 1 870 0 is_stmt 1
 4140 01fc FB68     		ldr	r3, [r7, #12]	@ float
 4141 01fe 4FF08F41 		mov	r1, #1199570944
 4142 0202 1846     		mov	r0, r3
 4143 0204 FFF7FEFF 		bl	__aeabi_fmul
 4144 0208 0346     		mov	r3, r0
 4145 020a 1846     		mov	r0, r3
 4146 020c FFF7FEFF 		bl	__aeabi_f2iz
 4147 0210 0246     		mov	r2, r0
 4148 0212 654B     		ldr	r3, .L355+4
 4149 0214 C3F8BC20 		str	r2, [r3, #188]
 873:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4150              		.loc 1 873 0
 4151 0218 664B     		ldr	r3, .L355+16
 4152 021a 1B68     		ldr	r3, [r3]	@ float
 4153 021c 3B61     		str	r3, [r7, #16]	@ float
 874:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4154              		.loc 1 874 0
 4155 021e 0023     		movs	r3, #0
 4156 0220 BB75     		strb	r3, [r7, #22]
 4157 0222 0EE0     		b	.L299
 4158              	.L300:
 875:..\src/command_processing.c ****                 }
 4159              		.loc 1 875 0 discriminator 3
 4160 0224 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4161 0226 C3F10303 		rsb	r3, r3, #3
 4162 022a 07F10C02 		add	r2, r7, #12
 4163 022e 1344     		add	r3, r3, r2
 4164 0230 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4165 0232 07F11001 		add	r1, r7, #16
 4166 0236 0A44     		add	r2, r2, r1
 4167 0238 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4168 023a 1A70     		strb	r2, [r3]
 874:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4169              		.loc 1 874 0 discriminator 3
 4170 023c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 111


 4171 023e 0133     		adds	r3, r3, #1
 4172 0240 BB75     		strb	r3, [r7, #22]
 4173              	.L299:
 874:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4174              		.loc 1 874 0 is_stmt 0 discriminator 1
 4175 0242 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4176 0244 032B     		cmp	r3, #3
 4177 0246 EDD9     		bls	.L300
 877:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 4178              		.loc 1 877 0 is_stmt 1
 4179 0248 FB68     		ldr	r3, [r7, #12]	@ float
 4180 024a 4FF08F41 		mov	r1, #1199570944
 4181 024e 1846     		mov	r0, r3
 4182 0250 FFF7FEFF 		bl	__aeabi_fmul
 4183 0254 0346     		mov	r3, r0
 4184 0256 1846     		mov	r0, r3
 4185 0258 FFF7FEFF 		bl	__aeabi_f2iz
 4186 025c 0246     		mov	r2, r0
 4187 025e 524B     		ldr	r3, .L355+4
 4188 0260 C3F8C020 		str	r2, [r3, #192]
 880:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4189              		.loc 1 880 0
 4190 0264 544B     		ldr	r3, .L355+20
 4191 0266 1B68     		ldr	r3, [r3]	@ float
 4192 0268 3B61     		str	r3, [r7, #16]	@ float
 881:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4193              		.loc 1 881 0
 4194 026a 0023     		movs	r3, #0
 4195 026c BB75     		strb	r3, [r7, #22]
 4196 026e 0EE0     		b	.L301
 4197              	.L302:
 882:..\src/command_processing.c ****                 }
 4198              		.loc 1 882 0 discriminator 3
 4199 0270 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4200 0272 C3F10303 		rsb	r3, r3, #3
 4201 0276 07F10C02 		add	r2, r7, #12
 4202 027a 1344     		add	r3, r3, r2
 4203 027c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4204 027e 07F11001 		add	r1, r7, #16
 4205 0282 0A44     		add	r2, r2, r1
 4206 0284 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4207 0286 1A70     		strb	r2, [r3]
 881:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4208              		.loc 1 881 0 discriminator 3
 4209 0288 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4210 028a 0133     		adds	r3, r3, #1
 4211 028c BB75     		strb	r3, [r7, #22]
 4212              	.L301:
 881:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4213              		.loc 1 881 0 is_stmt 0 discriminator 1
 4214 028e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4215 0290 032B     		cmp	r3, #3
 4216 0292 EDD9     		bls	.L302
 884:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 4217              		.loc 1 884 0 is_stmt 1
 4218 0294 FB68     		ldr	r3, [r7, #12]	@ float
 4219 0296 4FF08F41 		mov	r1, #1199570944
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 112


 4220 029a 1846     		mov	r0, r3
 4221 029c FFF7FEFF 		bl	__aeabi_fmul
 4222 02a0 0346     		mov	r3, r0
 4223 02a2 1846     		mov	r0, r3
 4224 02a4 FFF7FEFF 		bl	__aeabi_f2iz
 4225 02a8 0246     		mov	r2, r0
 4226 02aa 3F4B     		ldr	r3, .L355+4
 4227 02ac C3F8C420 		str	r2, [r3, #196]
 4228              		.loc 1 887 0
 4229 02b0 00F074BC 		b	.L244
 4230              	.L249:
 888:..\src/command_processing.c **** 
 889:..\src/command_processing.c **** //==================================================     set_curr_pid_parameters
 890:..\src/command_processing.c ****         case 3:         //Current PID - float[3]
 891:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 4231              		.loc 1 891 0
 4232 02b4 3D4B     		ldr	r3, .L355+8
 4233 02b6 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 4234 02ba 032B     		cmp	r3, #3
 4235 02bc 7ED0     		beq	.L303
 892:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 4236              		.loc 1 892 0
 4237 02be 3C4B     		ldr	r3, .L355+12
 4238 02c0 1B68     		ldr	r3, [r3]	@ float
 4239 02c2 3B61     		str	r3, [r7, #16]	@ float
 893:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4240              		.loc 1 893 0
 4241 02c4 0023     		movs	r3, #0
 4242 02c6 BB75     		strb	r3, [r7, #22]
 4243 02c8 0EE0     		b	.L304
 4244              	.L305:
 894:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4245              		.loc 1 894 0 discriminator 3
 4246 02ca BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4247 02cc C3F10303 		rsb	r3, r3, #3
 4248 02d0 07F10C02 		add	r2, r7, #12
 4249 02d4 1344     		add	r3, r3, r2
 4250 02d6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4251 02d8 07F11001 		add	r1, r7, #16
 4252 02dc 0A44     		add	r2, r2, r1
 4253 02de 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4254 02e0 1A70     		strb	r2, [r3]
 893:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4255              		.loc 1 893 0 discriminator 3
 4256 02e2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4257 02e4 0133     		adds	r3, r3, #1
 4258 02e6 BB75     		strb	r3, [r7, #22]
 4259              	.L304:
 893:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4260              		.loc 1 893 0 is_stmt 0 discriminator 1
 4261 02e8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4262 02ea 032B     		cmp	r3, #3
 4263 02ec EDD9     		bls	.L305
 895:..\src/command_processing.c ****                 }
 896:..\src/command_processing.c ****                 g_mem.k_p_c = aux_float2 * 65536;
 4264              		.loc 1 896 0 is_stmt 1
 4265 02ee FB68     		ldr	r3, [r7, #12]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 113


 4266 02f0 4FF08F41 		mov	r1, #1199570944
 4267 02f4 1846     		mov	r0, r3
 4268 02f6 FFF7FEFF 		bl	__aeabi_fmul
 4269 02fa 0346     		mov	r3, r0
 4270 02fc 1846     		mov	r0, r3
 4271 02fe FFF7FEFF 		bl	__aeabi_f2iz
 4272 0302 0246     		mov	r2, r0
 4273 0304 284B     		ldr	r3, .L355+4
 4274 0306 C3F8B020 		str	r2, [r3, #176]
 897:..\src/command_processing.c ****                 //g_mem.k_p_c = *((float *) &g_rx.buffer[3]) * 65536;
 898:..\src/command_processing.c ****                 
 899:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 4275              		.loc 1 899 0
 4276 030a 2A4B     		ldr	r3, .L355+16
 4277 030c 1B68     		ldr	r3, [r3]	@ float
 4278 030e 3B61     		str	r3, [r7, #16]	@ float
 900:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4279              		.loc 1 900 0
 4280 0310 0023     		movs	r3, #0
 4281 0312 BB75     		strb	r3, [r7, #22]
 4282 0314 0EE0     		b	.L306
 4283              	.L307:
 901:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4284              		.loc 1 901 0 discriminator 3
 4285 0316 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4286 0318 C3F10303 		rsb	r3, r3, #3
 4287 031c 07F10C02 		add	r2, r7, #12
 4288 0320 1344     		add	r3, r3, r2
 4289 0322 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4290 0324 07F11001 		add	r1, r7, #16
 4291 0328 0A44     		add	r2, r2, r1
 4292 032a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4293 032c 1A70     		strb	r2, [r3]
 900:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4294              		.loc 1 900 0 discriminator 3
 4295 032e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4296 0330 0133     		adds	r3, r3, #1
 4297 0332 BB75     		strb	r3, [r7, #22]
 4298              	.L306:
 900:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4299              		.loc 1 900 0 is_stmt 0 discriminator 1
 4300 0334 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4301 0336 032B     		cmp	r3, #3
 4302 0338 EDD9     		bls	.L307
 902:..\src/command_processing.c ****                 }
 903:..\src/command_processing.c ****                 g_mem.k_i_c = aux_float2 * 65536;
 4303              		.loc 1 903 0 is_stmt 1
 4304 033a FB68     		ldr	r3, [r7, #12]	@ float
 4305 033c 4FF08F41 		mov	r1, #1199570944
 4306 0340 1846     		mov	r0, r3
 4307 0342 FFF7FEFF 		bl	__aeabi_fmul
 4308 0346 0346     		mov	r3, r0
 4309 0348 1846     		mov	r0, r3
 4310 034a FFF7FEFF 		bl	__aeabi_f2iz
 4311 034e 0246     		mov	r2, r0
 4312 0350 154B     		ldr	r3, .L355+4
 4313 0352 C3F8B420 		str	r2, [r3, #180]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 114


 904:..\src/command_processing.c ****                 //g_mem.k_i_c = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 905:..\src/command_processing.c ****                 
 906:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 4314              		.loc 1 906 0
 4315 0356 184B     		ldr	r3, .L355+20
 4316 0358 1B68     		ldr	r3, [r3]	@ float
 4317 035a 3B61     		str	r3, [r7, #16]	@ float
 907:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4318              		.loc 1 907 0
 4319 035c 0023     		movs	r3, #0
 4320 035e BB75     		strb	r3, [r7, #22]
 4321 0360 0EE0     		b	.L308
 4322              	.L309:
 908:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4323              		.loc 1 908 0 discriminator 3
 4324 0362 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4325 0364 C3F10303 		rsb	r3, r3, #3
 4326 0368 07F10C02 		add	r2, r7, #12
 4327 036c 1344     		add	r3, r3, r2
 4328 036e BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4329 0370 07F11001 		add	r1, r7, #16
 4330 0374 0A44     		add	r2, r2, r1
 4331 0376 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4332 0378 1A70     		strb	r2, [r3]
 907:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4333              		.loc 1 907 0 discriminator 3
 4334 037a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4335 037c 0133     		adds	r3, r3, #1
 4336 037e BB75     		strb	r3, [r7, #22]
 4337              	.L308:
 907:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4338              		.loc 1 907 0 is_stmt 0 discriminator 1
 4339 0380 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4340 0382 032B     		cmp	r3, #3
 4341 0384 EDD9     		bls	.L309
 909:..\src/command_processing.c ****                 }
 910:..\src/command_processing.c ****                 g_mem.k_d_c = aux_float2 * 65536;
 4342              		.loc 1 910 0 is_stmt 1
 4343 0386 FB68     		ldr	r3, [r7, #12]	@ float
 4344 0388 4FF08F41 		mov	r1, #1199570944
 4345 038c 1846     		mov	r0, r3
 4346 038e FFF7FEFF 		bl	__aeabi_fmul
 4347 0392 0346     		mov	r3, r0
 4348 0394 1846     		mov	r0, r3
 4349 0396 FFF7FEFF 		bl	__aeabi_f2iz
 4350 039a 0246     		mov	r2, r0
 4351 039c 024B     		ldr	r3, .L355+4
 4352 039e C3F8B820 		str	r2, [r3, #184]
 911:..\src/command_processing.c ****                 //g_mem.k_d_c = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 912:..\src/command_processing.c ****             }
 913:..\src/command_processing.c ****             else {
 914:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 915:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 916:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 917:..\src/command_processing.c ****                 }
 918:..\src/command_processing.c ****                 g_mem.k_p_c_dl = aux_float2 * 65536;
 919:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 115


 920:..\src/command_processing.c ****                 
 921:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 922:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 923:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 924:..\src/command_processing.c ****                 }
 925:..\src/command_processing.c ****                 g_mem.k_i_c_dl = aux_float2 * 65536;
 926:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 927:..\src/command_processing.c ****                 
 928:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 929:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 930:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 931:..\src/command_processing.c ****                 }
 932:..\src/command_processing.c ****                 g_mem.k_d_c_dl = aux_float2 * 65536;
 933:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 934:..\src/command_processing.c ****             }
 935:..\src/command_processing.c ****             
 936:..\src/command_processing.c ****         break;
 4353              		.loc 1 936 0
 4354 03a2 FBE3     		b	.L244
 4355              	.L356:
 4356              		.align	2
 4357              	.L355:
 4358 03a4 00000000 		.word	g_rx
 4359 03a8 00000000 		.word	g_mem
 4360 03ac 00000000 		.word	c_mem
 4361 03b0 03000000 		.word	g_rx+3
 4362 03b4 07000000 		.word	g_rx+7
 4363 03b8 0B000000 		.word	g_rx+11
 4364              	.L303:
 914:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4365              		.loc 1 914 0
 4366 03bc A34B     		ldr	r3, .L357
 4367 03be 1B68     		ldr	r3, [r3]	@ float
 4368 03c0 3B61     		str	r3, [r7, #16]	@ float
 915:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4369              		.loc 1 915 0
 4370 03c2 0023     		movs	r3, #0
 4371 03c4 BB75     		strb	r3, [r7, #22]
 4372 03c6 0EE0     		b	.L311
 4373              	.L312:
 916:..\src/command_processing.c ****                 }
 4374              		.loc 1 916 0 discriminator 3
 4375 03c8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4376 03ca C3F10303 		rsb	r3, r3, #3
 4377 03ce 07F10C02 		add	r2, r7, #12
 4378 03d2 1344     		add	r3, r3, r2
 4379 03d4 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4380 03d6 07F11001 		add	r1, r7, #16
 4381 03da 0A44     		add	r2, r2, r1
 4382 03dc 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4383 03de 1A70     		strb	r2, [r3]
 915:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4384              		.loc 1 915 0 discriminator 3
 4385 03e0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4386 03e2 0133     		adds	r3, r3, #1
 4387 03e4 BB75     		strb	r3, [r7, #22]
 4388              	.L311:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 116


 915:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4389              		.loc 1 915 0 is_stmt 0 discriminator 1
 4390 03e6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4391 03e8 032B     		cmp	r3, #3
 4392 03ea EDD9     		bls	.L312
 918:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 4393              		.loc 1 918 0 is_stmt 1
 4394 03ec FB68     		ldr	r3, [r7, #12]	@ float
 4395 03ee 4FF08F41 		mov	r1, #1199570944
 4396 03f2 1846     		mov	r0, r3
 4397 03f4 FFF7FEFF 		bl	__aeabi_fmul
 4398 03f8 0346     		mov	r3, r0
 4399 03fa 1846     		mov	r0, r3
 4400 03fc FFF7FEFF 		bl	__aeabi_f2iz
 4401 0400 0246     		mov	r2, r0
 4402 0402 934B     		ldr	r3, .L357+4
 4403 0404 C3F8C820 		str	r2, [r3, #200]
 921:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4404              		.loc 1 921 0
 4405 0408 924B     		ldr	r3, .L357+8
 4406 040a 1B68     		ldr	r3, [r3]	@ float
 4407 040c 3B61     		str	r3, [r7, #16]	@ float
 922:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4408              		.loc 1 922 0
 4409 040e 0023     		movs	r3, #0
 4410 0410 BB75     		strb	r3, [r7, #22]
 4411 0412 0EE0     		b	.L313
 4412              	.L314:
 923:..\src/command_processing.c ****                 }
 4413              		.loc 1 923 0 discriminator 3
 4414 0414 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4415 0416 C3F10303 		rsb	r3, r3, #3
 4416 041a 07F10C02 		add	r2, r7, #12
 4417 041e 1344     		add	r3, r3, r2
 4418 0420 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4419 0422 07F11001 		add	r1, r7, #16
 4420 0426 0A44     		add	r2, r2, r1
 4421 0428 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4422 042a 1A70     		strb	r2, [r3]
 922:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4423              		.loc 1 922 0 discriminator 3
 4424 042c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4425 042e 0133     		adds	r3, r3, #1
 4426 0430 BB75     		strb	r3, [r7, #22]
 4427              	.L313:
 922:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4428              		.loc 1 922 0 is_stmt 0 discriminator 1
 4429 0432 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4430 0434 032B     		cmp	r3, #3
 4431 0436 EDD9     		bls	.L314
 925:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 4432              		.loc 1 925 0 is_stmt 1
 4433 0438 FB68     		ldr	r3, [r7, #12]	@ float
 4434 043a 4FF08F41 		mov	r1, #1199570944
 4435 043e 1846     		mov	r0, r3
 4436 0440 FFF7FEFF 		bl	__aeabi_fmul
 4437 0444 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 117


 4438 0446 1846     		mov	r0, r3
 4439 0448 FFF7FEFF 		bl	__aeabi_f2iz
 4440 044c 0246     		mov	r2, r0
 4441 044e 804B     		ldr	r3, .L357+4
 4442 0450 C3F8CC20 		str	r2, [r3, #204]
 928:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4443              		.loc 1 928 0
 4444 0454 804B     		ldr	r3, .L357+12
 4445 0456 1B68     		ldr	r3, [r3]	@ float
 4446 0458 3B61     		str	r3, [r7, #16]	@ float
 929:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4447              		.loc 1 929 0
 4448 045a 0023     		movs	r3, #0
 4449 045c BB75     		strb	r3, [r7, #22]
 4450 045e 0EE0     		b	.L315
 4451              	.L316:
 930:..\src/command_processing.c ****                 }
 4452              		.loc 1 930 0 discriminator 3
 4453 0460 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4454 0462 C3F10303 		rsb	r3, r3, #3
 4455 0466 07F10C02 		add	r2, r7, #12
 4456 046a 1344     		add	r3, r3, r2
 4457 046c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4458 046e 07F11001 		add	r1, r7, #16
 4459 0472 0A44     		add	r2, r2, r1
 4460 0474 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4461 0476 1A70     		strb	r2, [r3]
 929:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4462              		.loc 1 929 0 discriminator 3
 4463 0478 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4464 047a 0133     		adds	r3, r3, #1
 4465 047c BB75     		strb	r3, [r7, #22]
 4466              	.L315:
 929:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4467              		.loc 1 929 0 is_stmt 0 discriminator 1
 4468 047e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4469 0480 032B     		cmp	r3, #3
 4470 0482 EDD9     		bls	.L316
 932:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 4471              		.loc 1 932 0 is_stmt 1
 4472 0484 FB68     		ldr	r3, [r7, #12]	@ float
 4473 0486 4FF08F41 		mov	r1, #1199570944
 4474 048a 1846     		mov	r0, r3
 4475 048c FFF7FEFF 		bl	__aeabi_fmul
 4476 0490 0346     		mov	r3, r0
 4477 0492 1846     		mov	r0, r3
 4478 0494 FFF7FEFF 		bl	__aeabi_f2iz
 4479 0498 0246     		mov	r2, r0
 4480 049a 6D4B     		ldr	r3, .L357+4
 4481 049c C3F8D020 		str	r2, [r3, #208]
 4482              		.loc 1 936 0
 4483 04a0 7CE3     		b	.L244
 4484              	.L250:
 937:..\src/command_processing.c **** 
 938:..\src/command_processing.c **** //===================================================     set_startup_activation        
 939:..\src/command_processing.c ****         case 4:         //Startup flag - uint8
 940:..\src/command_processing.c ****             if(g_rx.buffer[3])
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 118


 4485              		.loc 1 940 0
 4486 04a2 6E4B     		ldr	r3, .L357+16
 4487 04a4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4488 04a6 002B     		cmp	r3, #0
 4489 04a8 04D0     		beq	.L317
 941:..\src/command_processing.c ****                 g_mem.activ = 0x01;
 4490              		.loc 1 941 0
 4491 04aa 694B     		ldr	r3, .L357+4
 4492 04ac 0122     		movs	r2, #1
 4493 04ae 83F8D420 		strb	r2, [r3, #212]
 942:..\src/command_processing.c ****             else
 943:..\src/command_processing.c ****                 g_mem.activ = 0x00;
 944:..\src/command_processing.c ****         break;
 4494              		.loc 1 944 0
 4495 04b2 73E3     		b	.L244
 4496              	.L317:
 943:..\src/command_processing.c ****         break;
 4497              		.loc 1 943 0
 4498 04b4 664B     		ldr	r3, .L357+4
 4499 04b6 0022     		movs	r2, #0
 4500 04b8 83F8D420 		strb	r2, [r3, #212]
 4501              		.loc 1 944 0
 4502 04bc 6EE3     		b	.L244
 4503              	.L251:
 945:..\src/command_processing.c **** 
 946:..\src/command_processing.c **** //===========================================================     set_input_mode        
 947:..\src/command_processing.c ****         case 5:         //Input mode - uint8
 948:..\src/command_processing.c ****             g_mem.input_mode = g_rx.buffer[3];
 4504              		.loc 1 948 0
 4505 04be 674B     		ldr	r3, .L357+16
 4506 04c0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4507 04c2 634B     		ldr	r3, .L357+4
 4508 04c4 83F8D520 		strb	r2, [r3, #213]
 949:..\src/command_processing.c ****             
 950:..\src/command_processing.c ****             // Hold the actual position
 951:..\src/command_processing.c ****             g_refNew.pos = g_meas.pos[0];
 4509              		.loc 1 951 0
 4510 04c8 654B     		ldr	r3, .L357+20
 4511 04ca 1B68     		ldr	r3, [r3]
 4512 04cc 654A     		ldr	r2, .L357+24
 4513 04ce 1360     		str	r3, [r2]
 952:..\src/command_processing.c ****         break;
 4514              		.loc 1 952 0
 4515 04d0 64E3     		b	.L244
 4516              	.L252:
 953:..\src/command_processing.c ****         
 954:..\src/command_processing.c **** //=========================================================     set_control_mode
 955:..\src/command_processing.c ****         case 6:         //Control mode - uint8
 956:..\src/command_processing.c ****             g_mem.control_mode = g_rx.buffer[3];
 4517              		.loc 1 956 0
 4518 04d2 624B     		ldr	r3, .L357+16
 4519 04d4 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4520 04d6 5E4B     		ldr	r3, .L357+4
 4521 04d8 83F8D620 		strb	r2, [r3, #214]
 957:..\src/command_processing.c ****         break;
 4522              		.loc 1 957 0
 4523 04dc 5EE3     		b	.L244
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 119


 4524              	.L253:
 958:..\src/command_processing.c ****         
 959:..\src/command_processing.c **** //===========================================================     set_resolution
 960:..\src/command_processing.c ****         case 7:         //Resolution - uint8[3]
 961:..\src/command_processing.c ****             for (i =0; i < NUM_OF_SENSORS; i++) {
 4525              		.loc 1 961 0
 4526 04de 0023     		movs	r3, #0
 4527 04e0 FB75     		strb	r3, [r7, #23]
 4528 04e2 0CE0     		b	.L319
 4529              	.L320:
 962:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4530              		.loc 1 962 0 discriminator 3
 4531 04e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4532 04e6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4533 04e8 0332     		adds	r2, r2, #3
 4534 04ea 5C49     		ldr	r1, .L357+16
 4535 04ec 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4536 04ee 584A     		ldr	r2, .L357+4
 4537 04f0 1344     		add	r3, r3, r2
 4538 04f2 0A46     		mov	r2, r1
 4539 04f4 83F8D720 		strb	r2, [r3, #215]
 961:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4540              		.loc 1 961 0 discriminator 3
 4541 04f8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4542 04fa 0133     		adds	r3, r3, #1
 4543 04fc FB75     		strb	r3, [r7, #23]
 4544              	.L319:
 961:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4545              		.loc 1 961 0 is_stmt 0 discriminator 1
 4546 04fe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4547 0500 022B     		cmp	r3, #2
 4548 0502 EFD9     		bls	.L320
 963:..\src/command_processing.c ****             }
 964:..\src/command_processing.c ****         break;
 4549              		.loc 1 964 0 is_stmt 1
 4550 0504 4AE3     		b	.L244
 4551              	.L254:
 965:..\src/command_processing.c ****         
 966:..\src/command_processing.c **** //===============================================================     set_offset
 967:..\src/command_processing.c ****         case 8:         //Measurement Offset - int32[3] 
 968:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i) {
 4552              		.loc 1 968 0
 4553 0506 0023     		movs	r3, #0
 4554 0508 FB75     		strb	r3, [r7, #23]
 4555 050a 31E0     		b	.L321
 4556              	.L322:
 969:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4557              		.loc 1 969 0 discriminator 3
 4558 050c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4559 050e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4560 0510 5200     		lsls	r2, r2, #1
 4561 0512 0332     		adds	r2, r2, #3
 4562 0514 5149     		ldr	r1, .L357+16
 4563 0516 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 4564 0518 1202     		lsls	r2, r2, #8
 4565 051a 11B2     		sxth	r1, r2
 4566 051c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 120


 4567 051e 0232     		adds	r2, r2, #2
 4568 0520 5200     		lsls	r2, r2, #1
 4569 0522 4E48     		ldr	r0, .L357+16
 4570 0524 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 4571 0526 12B2     		sxth	r2, r2
 4572 0528 0A43     		orrs	r2, r2, r1
 4573 052a 12B2     		sxth	r2, r2
 4574 052c 1146     		mov	r1, r2
 4575 052e 484A     		ldr	r2, .L357+4
 4576 0530 3633     		adds	r3, r3, #54
 4577 0532 9B00     		lsls	r3, r3, #2
 4578 0534 1344     		add	r3, r3, r2
 4579 0536 5960     		str	r1, [r3, #4]
 970:..\src/command_processing.c ****                 //g_mem.m_off[i] = *((int16 *) &g_rx.buffer[3 + i * 2]);
 971:..\src/command_processing.c ****                 g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 4580              		.loc 1 971 0 discriminator 3
 4581 0538 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 4582 053a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4583 053c 444A     		ldr	r2, .L357+4
 4584 053e 3633     		adds	r3, r3, #54
 4585 0540 9B00     		lsls	r3, r3, #2
 4586 0542 1344     		add	r3, r3, r2
 4587 0544 5B68     		ldr	r3, [r3, #4]
 4588 0546 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4589 0548 4148     		ldr	r0, .L357+4
 4590 054a 0244     		add	r2, r2, r0
 4591 054c 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 4592 0550 03FA02F2 		lsl	r2, r3, r2
 4593 0554 3E48     		ldr	r0, .L357+4
 4594 0556 01F13603 		add	r3, r1, #54
 4595 055a 9B00     		lsls	r3, r3, #2
 4596 055c 0344     		add	r3, r3, r0
 4597 055e 5A60     		str	r2, [r3, #4]
 972:..\src/command_processing.c **** 
 973:..\src/command_processing.c ****                 g_meas.rot[i] = 0;
 4598              		.loc 1 973 0 discriminator 3
 4599 0560 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4600 0562 3F4A     		ldr	r2, .L357+20
 4601 0564 1344     		add	r3, r3, r2
 4602 0566 0022     		movs	r2, #0
 4603 0568 1A76     		strb	r2, [r3, #24]
 968:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4604              		.loc 1 968 0 discriminator 3
 4605 056a FB7D     		ldrb	r3, [r7, #23]
 4606 056c 0133     		adds	r3, r3, #1
 4607 056e FB75     		strb	r3, [r7, #23]
 4608              	.L321:
 968:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4609              		.loc 1 968 0 is_stmt 0 discriminator 1
 4610 0570 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4611 0572 022B     		cmp	r3, #2
 4612 0574 CAD9     		bls	.L322
 974:..\src/command_processing.c ****             }
 975:..\src/command_processing.c ****             reset_last_value_flag = 1;
 4613              		.loc 1 975 0 is_stmt 1
 4614 0576 3C4B     		ldr	r3, .L357+28
 4615 0578 0122     		movs	r2, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 121


 4616 057a 1A70     		strb	r2, [r3]
 976:..\src/command_processing.c ****         break;
 4617              		.loc 1 976 0
 4618 057c 0EE3     		b	.L244
 4619              	.L255:
 977:..\src/command_processing.c ****         
 978:..\src/command_processing.c **** //===========================================================     set_multiplier
 979:..\src/command_processing.c ****         case 9:         //Multipliers - float[3]
 980:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i){
 4620              		.loc 1 980 0
 4621 057e 0023     		movs	r3, #0
 4622 0580 FB75     		strb	r3, [r7, #23]
 4623 0582 21E0     		b	.L323
 4624              	.L326:
 981:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4625              		.loc 1 981 0
 4626 0584 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4627 0586 9B00     		lsls	r3, r3, #2
 4628 0588 0333     		adds	r3, r3, #3
 4629 058a 344A     		ldr	r2, .L357+16
 4630 058c 1344     		add	r3, r3, r2
 4631 058e 1B68     		ldr	r3, [r3]	@ float
 4632 0590 3B61     		str	r3, [r7, #16]	@ float
 982:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4633              		.loc 1 982 0
 4634 0592 0023     		movs	r3, #0
 4635 0594 BB75     		strb	r3, [r7, #22]
 4636 0596 11E0     		b	.L324
 4637              	.L325:
 983:..\src/command_processing.c ****                     ((char*)(&g_mem.m_mult[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 4638              		.loc 1 983 0 discriminator 3
 4639 0598 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4640 059a 3A33     		adds	r3, r3, #58
 4641 059c 9B00     		lsls	r3, r3, #2
 4642 059e 2C4A     		ldr	r2, .L357+4
 4643 05a0 1A44     		add	r2, r2, r3
 4644 05a2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4645 05a4 C3F10303 		rsb	r3, r3, #3
 4646 05a8 1344     		add	r3, r3, r2
 4647 05aa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4648 05ac 07F11001 		add	r1, r7, #16
 4649 05b0 0A44     		add	r2, r2, r1
 4650 05b2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4651 05b4 1A70     		strb	r2, [r3]
 982:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4652              		.loc 1 982 0 discriminator 3
 4653 05b6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4654 05b8 0133     		adds	r3, r3, #1
 4655 05ba BB75     		strb	r3, [r7, #22]
 4656              	.L324:
 982:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4657              		.loc 1 982 0 is_stmt 0 discriminator 1
 4658 05bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4659 05be 032B     		cmp	r3, #3
 4660 05c0 EAD9     		bls	.L325
 980:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4661              		.loc 1 980 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 122


 4662 05c2 FB7D     		ldrb	r3, [r7, #23]
 4663 05c4 0133     		adds	r3, r3, #1
 4664 05c6 FB75     		strb	r3, [r7, #23]
 4665              	.L323:
 980:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4666              		.loc 1 980 0 is_stmt 0 discriminator 1
 4667 05c8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4668 05ca 022B     		cmp	r3, #2
 4669 05cc DAD9     		bls	.L326
 984:..\src/command_processing.c ****                 }
 985:..\src/command_processing.c ****                 //g_mem.m_mult[i] = *((float *) &g_rx.buffer[3 + i * 4]);
 986:..\src/command_processing.c ****             }
 987:..\src/command_processing.c ****         break;
 4670              		.loc 1 987 0 is_stmt 1
 4671 05ce E5E2     		b	.L244
 4672              	.L256:
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** //=====================================================     set_pos_limit_enable
 990:..\src/command_processing.c ****         case 10:        //Position limit flag - uint8
 991:..\src/command_processing.c ****             g_mem.pos_lim_flag = *((uint8 *) &g_rx.buffer[3]);
 4673              		.loc 1 991 0
 4674 05d0 224B     		ldr	r3, .L357+16
 4675 05d2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4676 05d4 1E4B     		ldr	r3, .L357+4
 4677 05d6 83F8F420 		strb	r2, [r3, #244]
 992:..\src/command_processing.c ****         break;
 4678              		.loc 1 992 0
 4679 05da DFE2     		b	.L244
 4680              	.L257:
 993:..\src/command_processing.c **** 
 994:..\src/command_processing.c **** //============================================================     set_pos_limit
 995:..\src/command_processing.c ****         case 11:        //Position limits - int32[4]
 996:..\src/command_processing.c ****             g_mem.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 4681              		.loc 1 996 0
 4682 05dc 1F4B     		ldr	r3, .L357+16
 4683 05de DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4684 05e0 1A06     		lsls	r2, r3, #24
 4685 05e2 1E4B     		ldr	r3, .L357+16
 4686 05e4 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4687 05e6 1B04     		lsls	r3, r3, #16
 4688 05e8 1A43     		orrs	r2, r2, r3
 4689 05ea 1C4B     		ldr	r3, .L357+16
 4690 05ec 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4691 05ee 1B02     		lsls	r3, r3, #8
 4692 05f0 1343     		orrs	r3, r3, r2
 4693 05f2 1A4A     		ldr	r2, .L357+16
 4694 05f4 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4695 05f6 1343     		orrs	r3, r3, r2
 4696 05f8 154A     		ldr	r2, .L357+4
 4697 05fa C2F8F830 		str	r3, [r2, #248]
 997:..\src/command_processing.c ****             g_mem.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<8
 4698              		.loc 1 997 0
 4699 05fe 174B     		ldr	r3, .L357+16
 4700 0600 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4701 0602 1A06     		lsls	r2, r3, #24
 4702 0604 154B     		ldr	r3, .L357+16
 4703 0606 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 123


 4704 0608 1B04     		lsls	r3, r3, #16
 4705 060a 1A43     		orrs	r2, r2, r3
 4706 060c 134B     		ldr	r3, .L357+16
 4707 060e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4708 0610 1B02     		lsls	r3, r3, #8
 4709 0612 1343     		orrs	r3, r3, r2
 4710 0614 114A     		ldr	r2, .L357+16
 4711 0616 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4712 0618 1343     		orrs	r3, r3, r2
 4713 061a 0D4A     		ldr	r2, .L357+4
 4714 061c C2F8FC30 		str	r3, [r2, #252]
 998:..\src/command_processing.c ****             //g_mem.pos_lim_inf = *((int32 *) &g_rx.buffer[3]);
 999:..\src/command_processing.c ****             //g_mem.pos_lim_sup = *((int32 *) &g_rx.buffer[7]);
1000:..\src/command_processing.c **** 
1001:..\src/command_processing.c ****             g_mem.pos_lim_inf = g_mem.pos_lim_inf << g_mem.res[0];
 4715              		.loc 1 1001 0
 4716 0620 0B4B     		ldr	r3, .L357+4
 4717 0622 D3F8F830 		ldr	r3, [r3, #248]
 4718 0626 0A4A     		ldr	r2, .L357+4
 4719 0628 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 4720 062c 9340     		lsls	r3, r3, r2
 4721 062e 084A     		ldr	r2, .L357+4
 4722 0630 C2F8F830 		str	r3, [r2, #248]
1002:..\src/command_processing.c ****             g_mem.pos_lim_sup = g_mem.pos_lim_sup << g_mem.res[0];
 4723              		.loc 1 1002 0
 4724 0634 064B     		ldr	r3, .L357+4
 4725 0636 D3F8FC30 		ldr	r3, [r3, #252]
 4726 063a 054A     		ldr	r2, .L357+4
 4727 063c 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 4728 0640 9340     		lsls	r3, r3, r2
 4729 0642 034A     		ldr	r2, .L357+4
 4730 0644 C2F8FC30 		str	r3, [r2, #252]
1003:..\src/command_processing.c ****         break;
 4731              		.loc 1 1003 0
 4732 0648 A8E2     		b	.L244
 4733              	.L358:
 4734 064a 00BF     		.align	2
 4735              	.L357:
 4736 064c 03000000 		.word	g_rx+3
 4737 0650 00000000 		.word	g_mem
 4738 0654 07000000 		.word	g_rx+7
 4739 0658 0B000000 		.word	g_rx+11
 4740 065c 00000000 		.word	g_rx
 4741 0660 00000000 		.word	g_meas
 4742 0664 00000000 		.word	g_refNew
 4743 0668 00000000 		.word	reset_last_value_flag
 4744              	.L258:
1004:..\src/command_processing.c **** 
1005:..\src/command_processing.c **** //==================================================     set_max_steps_per_cycle
1006:..\src/command_processing.c ****         case 12:        //Max steps - int32[2]
1007:..\src/command_processing.c ****             g_mem.max_step_neg = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 4745              		.loc 1 1007 0
 4746 066c A24B     		ldr	r3, .L359
 4747 066e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4748 0670 1A06     		lsls	r2, r3, #24
 4749 0672 A14B     		ldr	r3, .L359
 4750 0674 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 124


 4751 0676 1B04     		lsls	r3, r3, #16
 4752 0678 1A43     		orrs	r2, r2, r3
 4753 067a 9F4B     		ldr	r3, .L359
 4754 067c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4755 067e 1B02     		lsls	r3, r3, #8
 4756 0680 1343     		orrs	r3, r3, r2
 4757 0682 9D4A     		ldr	r2, .L359
 4758 0684 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4759 0686 1343     		orrs	r3, r3, r2
 4760 0688 9C4A     		ldr	r2, .L359+4
 4761 068a C2F80031 		str	r3, [r2, #256]
1008:..\src/command_processing.c ****             g_mem.max_step_pos = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<
 4762              		.loc 1 1008 0
 4763 068e 9A4B     		ldr	r3, .L359
 4764 0690 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4765 0692 1A06     		lsls	r2, r3, #24
 4766 0694 984B     		ldr	r3, .L359
 4767 0696 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4768 0698 1B04     		lsls	r3, r3, #16
 4769 069a 1A43     		orrs	r2, r2, r3
 4770 069c 964B     		ldr	r3, .L359
 4771 069e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4772 06a0 1B02     		lsls	r3, r3, #8
 4773 06a2 1343     		orrs	r3, r3, r2
 4774 06a4 944A     		ldr	r2, .L359
 4775 06a6 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4776 06a8 1343     		orrs	r3, r3, r2
 4777 06aa 944A     		ldr	r2, .L359+4
 4778 06ac C2F80431 		str	r3, [r2, #260]
1009:..\src/command_processing.c ****             
1010:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3]);
1011:..\src/command_processing.c ****             //if (aux_int <= 0)
1012:..\src/command_processing.c ****             //    g_mem.max_step_neg = aux_int;
1013:..\src/command_processing.c **** 
1014:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3 + 4]);
1015:..\src/command_processing.c ****             //if (aux_int >= 0) 
1016:..\src/command_processing.c ****             //    g_mem.max_step_pos = aux_int;
1017:..\src/command_processing.c ****             
1018:..\src/command_processing.c ****         break;
 4779              		.loc 1 1018 0
 4780 06b0 74E2     		b	.L244
 4781              	.L259:
1019:..\src/command_processing.c ****         
1020:..\src/command_processing.c **** //========================================================     set_current_limit
1021:..\src/command_processing.c ****         case 13:        //Current limit - int16
1022:..\src/command_processing.c ****             g_mem.current_limit = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 4782              		.loc 1 1022 0
 4783 06b2 914B     		ldr	r3, .L359
 4784 06b4 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4785 06b6 1B02     		lsls	r3, r3, #8
 4786 06b8 1AB2     		sxth	r2, r3
 4787 06ba 8F4B     		ldr	r3, .L359
 4788 06bc 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4789 06be 1BB2     		sxth	r3, r3
 4790 06c0 1343     		orrs	r3, r3, r2
 4791 06c2 1AB2     		sxth	r2, r3
 4792 06c4 8D4B     		ldr	r3, .L359+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 125


 4793 06c6 A3F80821 		strh	r2, [r3, #264]	@ movhi
1023:..\src/command_processing.c ****             //g_mem.current_limit = *((int16*) &g_rx.buffer[3]);
1024:..\src/command_processing.c ****         break;
 4794              		.loc 1 1024 0
 4795 06ca 67E2     		b	.L244
 4796              	.L260:
1025:..\src/command_processing.c ****         
1026:..\src/command_processing.c **** //========================================================     set_emg_threshold
1027:..\src/command_processing.c ****         case 14:        //Emg threshold - uint16[2]
1028:..\src/command_processing.c ****             g_mem.emg_threshold[0] = (uint16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 4797              		.loc 1 1028 0
 4798 06cc 8A4B     		ldr	r3, .L359
 4799 06ce DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4800 06d0 1B02     		lsls	r3, r3, #8
 4801 06d2 1AB2     		sxth	r2, r3
 4802 06d4 884B     		ldr	r3, .L359
 4803 06d6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4804 06d8 1BB2     		sxth	r3, r3
 4805 06da 1343     		orrs	r3, r3, r2
 4806 06dc 1BB2     		sxth	r3, r3
 4807 06de 9AB2     		uxth	r2, r3
 4808 06e0 864B     		ldr	r3, .L359+4
 4809 06e2 A3F80A21 		strh	r2, [r3, #266]	@ movhi
1029:..\src/command_processing.c ****             g_mem.emg_threshold[1] = (uint16)(g_rx.buffer[5]<<8 | g_rx.buffer[6]);
 4810              		.loc 1 1029 0
 4811 06e6 844B     		ldr	r3, .L359
 4812 06e8 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4813 06ea 1B02     		lsls	r3, r3, #8
 4814 06ec 1AB2     		sxth	r2, r3
 4815 06ee 824B     		ldr	r3, .L359
 4816 06f0 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4817 06f2 1BB2     		sxth	r3, r3
 4818 06f4 1343     		orrs	r3, r3, r2
 4819 06f6 1BB2     		sxth	r3, r3
 4820 06f8 9AB2     		uxth	r2, r3
 4821 06fa 804B     		ldr	r3, .L359+4
 4822 06fc A3F80C21 		strh	r2, [r3, #268]	@ movhi
1030:..\src/command_processing.c ****             //g_mem.emg_threshold[0] = *((uint16*) &g_rx.buffer[3]);
1031:..\src/command_processing.c ****             //g_mem.emg_threshold[1] = *((uint16*) &g_rx.buffer[5]);
1032:..\src/command_processing.c ****         break;
 4823              		.loc 1 1032 0
 4824 0700 4CE2     		b	.L244
 4825              	.L261:
1033:..\src/command_processing.c ****             
1034:..\src/command_processing.c **** //=======================================================     set_emg_calib_flag
1035:..\src/command_processing.c ****         case 15:        //Emg calibration flag - uint8
1036:..\src/command_processing.c ****             g_mem.emg_calibration_flag = *((uint8*) &g_rx.buffer[3]);
 4826              		.loc 1 1036 0
 4827 0702 7D4B     		ldr	r3, .L359
 4828 0704 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4829 0706 7D4B     		ldr	r3, .L359+4
 4830 0708 83F80E21 		strb	r2, [r3, #270]
1037:..\src/command_processing.c ****         break;
 4831              		.loc 1 1037 0
 4832 070c 46E2     		b	.L244
 4833              	.L262:
1038:..\src/command_processing.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 126


1039:..\src/command_processing.c **** //========================================================     set_emg_max_value
1040:..\src/command_processing.c ****         case 16:        //Emg max value - uint32[2]
1041:..\src/command_processing.c ****             g_mem.emg_max_value[0] = (uint32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer
 4834              		.loc 1 1041 0
 4835 070e 7A4B     		ldr	r3, .L359
 4836 0710 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4837 0712 1A06     		lsls	r2, r3, #24
 4838 0714 784B     		ldr	r3, .L359
 4839 0716 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4840 0718 1B04     		lsls	r3, r3, #16
 4841 071a 1A43     		orrs	r2, r2, r3
 4842 071c 764B     		ldr	r3, .L359
 4843 071e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4844 0720 1B02     		lsls	r3, r3, #8
 4845 0722 1343     		orrs	r3, r3, r2
 4846 0724 744A     		ldr	r2, .L359
 4847 0726 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4848 0728 1343     		orrs	r3, r3, r2
 4849 072a 1A46     		mov	r2, r3
 4850 072c 734B     		ldr	r3, .L359+4
 4851 072e C3F81021 		str	r2, [r3, #272]
1042:..\src/command_processing.c ****             g_mem.emg_max_value[1] = (uint32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer
 4852              		.loc 1 1042 0
 4853 0732 714B     		ldr	r3, .L359
 4854 0734 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4855 0736 1A06     		lsls	r2, r3, #24
 4856 0738 6F4B     		ldr	r3, .L359
 4857 073a 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4858 073c 1B04     		lsls	r3, r3, #16
 4859 073e 1A43     		orrs	r2, r2, r3
 4860 0740 6D4B     		ldr	r3, .L359
 4861 0742 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4862 0744 1B02     		lsls	r3, r3, #8
 4863 0746 1343     		orrs	r3, r3, r2
 4864 0748 6B4A     		ldr	r2, .L359
 4865 074a 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4866 074c 1343     		orrs	r3, r3, r2
 4867 074e 1A46     		mov	r2, r3
 4868 0750 6A4B     		ldr	r3, .L359+4
 4869 0752 C3F81421 		str	r2, [r3, #276]
1043:..\src/command_processing.c ****             //g_mem.emg_max_value[0] = *((uint32*) &g_rx.buffer[3]);
1044:..\src/command_processing.c ****             //g_mem.emg_max_value[1] = *((uint32*) &g_rx.buffer[7]);
1045:..\src/command_processing.c ****         break;
 4870              		.loc 1 1045 0
 4871 0756 21E2     		b	.L244
 4872              	.L263:
1046:..\src/command_processing.c ****         
1047:..\src/command_processing.c **** //============================================================     set_emg_speed
1048:..\src/command_processing.c ****         case 17:        //Emg max speed - uint8
1049:..\src/command_processing.c ****             g_mem.emg_speed = *((uint8*) &g_rx.buffer[3]);
 4873              		.loc 1 1049 0
 4874 0758 674B     		ldr	r3, .L359
 4875 075a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4876 075c 674B     		ldr	r3, .L359+4
 4877 075e 83F81821 		strb	r2, [r3, #280]
1050:..\src/command_processing.c ****         break;
 4878              		.loc 1 1050 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 127


 4879 0762 1BE2     		b	.L244
 4880              	.L264:
1051:..\src/command_processing.c ****         
1052:..\src/command_processing.c **** //================================================     set_double_encoder_on_off
1053:..\src/command_processing.c ****         case 18:        //Absolute encoder flag - uint8
1054:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4881              		.loc 1 1054 0
 4882 0764 644B     		ldr	r3, .L359
 4883 0766 DB78     		ldrb	r3, [r3, #3]
 4884 0768 7B75     		strb	r3, [r7, #21]
1055:..\src/command_processing.c ****             if (aux_uchar) {
 4885              		.loc 1 1055 0
 4886 076a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4887 076c 002B     		cmp	r3, #0
 4888 076e 04D0     		beq	.L327
1056:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 1;
 4889              		.loc 1 1056 0
 4890 0770 624B     		ldr	r3, .L359+4
 4891 0772 0122     		movs	r2, #1
 4892 0774 83F81921 		strb	r2, [r3, #281]
1057:..\src/command_processing.c ****             } else {
1058:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 0;
1059:..\src/command_processing.c ****             }
1060:..\src/command_processing.c ****         break;
 4893              		.loc 1 1060 0
 4894 0778 10E2     		b	.L244
 4895              	.L327:
1058:..\src/command_processing.c ****             }
 4896              		.loc 1 1058 0
 4897 077a 604B     		ldr	r3, .L359+4
 4898 077c 0022     		movs	r2, #0
 4899 077e 83F81921 		strb	r2, [r3, #281]
 4900              		.loc 1 1060 0
 4901 0782 0BE2     		b	.L244
 4902              	.L265:
1061:..\src/command_processing.c ****         
1062:..\src/command_processing.c **** //===================================================     set_motor_handle_ratio
1063:..\src/command_processing.c ****         case 19:        //Motor handle ratio - int8
1064:..\src/command_processing.c ****             g_mem.motor_handle_ratio = *((int8*) &g_rx.buffer[3]);
 4903              		.loc 1 1064 0
 4904 0784 5E4B     		ldr	r3, .L359+8
 4905 0786 93F90020 		ldrsb	r2, [r3]
 4906 078a 5C4B     		ldr	r3, .L359+4
 4907 078c 83F81A21 		strb	r2, [r3, #282]
1065:..\src/command_processing.c ****         break;
 4908              		.loc 1 1065 0
 4909 0790 04E2     		b	.L244
 4910              	.L266:
1066:..\src/command_processing.c ****         
1067:..\src/command_processing.c **** //===================================================     set_motor_supply_type
1068:..\src/command_processing.c ****         case 20:        //Motor type - uint8
1069:..\src/command_processing.c ****             g_mem.activate_pwm_rescaling = g_rx.buffer[3];
 4911              		.loc 1 1069 0
 4912 0792 594B     		ldr	r3, .L359
 4913 0794 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4914 0796 594B     		ldr	r3, .L359+4
 4915 0798 83F81B21 		strb	r2, [r3, #283]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 128


1070:..\src/command_processing.c ****         break;
 4916              		.loc 1 1070 0
 4917 079c FEE1     		b	.L244
 4918              	.L267:
1071:..\src/command_processing.c ****             
1072:..\src/command_processing.c **** //===================================================     set_curr_lookup_table
1073:..\src/command_processing.c ****         case 21:        //Current lookup table - float
1074:..\src/command_processing.c ****             for(i = 0; i < LOOKUP_DIM; i++){
 4919              		.loc 1 1074 0
 4920 079e 0023     		movs	r3, #0
 4921 07a0 FB75     		strb	r3, [r7, #23]
 4922 07a2 22E0     		b	.L329
 4923              	.L332:
1075:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4924              		.loc 1 1075 0
 4925 07a4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4926 07a6 9B00     		lsls	r3, r3, #2
 4927 07a8 0333     		adds	r3, r3, #3
 4928 07aa 534A     		ldr	r2, .L359
 4929 07ac 1344     		add	r3, r3, r2
 4930 07ae 1B68     		ldr	r3, [r3]	@ float
 4931 07b0 3B61     		str	r3, [r7, #16]	@ float
1076:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4932              		.loc 1 1076 0
 4933 07b2 0023     		movs	r3, #0
 4934 07b4 BB75     		strb	r3, [r7, #22]
 4935 07b6 12E0     		b	.L330
 4936              	.L331:
1077:..\src/command_processing.c ****                     ((char*)(&g_mem.curr_lookup[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 4937              		.loc 1 1077 0 discriminator 3
 4938 07b8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4939 07ba 4633     		adds	r3, r3, #70
 4940 07bc 9B00     		lsls	r3, r3, #2
 4941 07be 4F4A     		ldr	r2, .L359+4
 4942 07c0 1344     		add	r3, r3, r2
 4943 07c2 1A1D     		adds	r2, r3, #4
 4944 07c4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4945 07c6 C3F10303 		rsb	r3, r3, #3
 4946 07ca 1344     		add	r3, r3, r2
 4947 07cc BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4948 07ce 07F11001 		add	r1, r7, #16
 4949 07d2 0A44     		add	r2, r2, r1
 4950 07d4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4951 07d6 1A70     		strb	r2, [r3]
1076:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4952              		.loc 1 1076 0 discriminator 3
 4953 07d8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4954 07da 0133     		adds	r3, r3, #1
 4955 07dc BB75     		strb	r3, [r7, #22]
 4956              	.L330:
1076:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4957              		.loc 1 1076 0 is_stmt 0 discriminator 1
 4958 07de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4959 07e0 032B     		cmp	r3, #3
 4960 07e2 E9D9     		bls	.L331
1074:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4961              		.loc 1 1074 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 129


 4962 07e4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4963 07e6 0133     		adds	r3, r3, #1
 4964 07e8 FB75     		strb	r3, [r7, #23]
 4965              	.L329:
1074:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4966              		.loc 1 1074 0 is_stmt 0 discriminator 1
 4967 07ea FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4968 07ec 052B     		cmp	r3, #5
 4969 07ee D9D9     		bls	.L332
1078:..\src/command_processing.c ****                 }
1079:..\src/command_processing.c ****                 //g_mem.curr_lookup[i] = *((float *) &g_rx.buffer[3 + i*4]);
1080:..\src/command_processing.c ****             }
1081:..\src/command_processing.c ****         break;
 4970              		.loc 1 1081 0 is_stmt 1
 4971 07f0 D4E1     		b	.L244
 4972              	.L268:
1082:..\src/command_processing.c ****  
1083:..\src/command_processing.c **** //========================================================    set_maintenance_date
1084:..\src/command_processing.c ****         case 22:         //Maintenance date - uint8[3]
1085:..\src/command_processing.c ****             g_mem.maint_day     = g_rx.buffer[3];
 4973              		.loc 1 1085 0
 4974 07f2 414B     		ldr	r3, .L359
 4975 07f4 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4976 07f6 414B     		ldr	r3, .L359+4
 4977 07f8 83F83521 		strb	r2, [r3, #309]
1086:..\src/command_processing.c ****             g_mem.maint_month   = g_rx.buffer[4];
 4978              		.loc 1 1086 0
 4979 07fc 3E4B     		ldr	r3, .L359
 4980 07fe 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 4981 0800 3E4B     		ldr	r3, .L359+4
 4982 0802 83F83621 		strb	r2, [r3, #310]
1087:..\src/command_processing.c ****             g_mem.maint_year    = g_rx.buffer[5];
 4983              		.loc 1 1087 0
 4984 0806 3C4B     		ldr	r3, .L359
 4985 0808 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 4986 080a 3C4B     		ldr	r3, .L359+4
 4987 080c 83F83721 		strb	r2, [r3, #311]
1088:..\src/command_processing.c ****         break; 
 4988              		.loc 1 1088 0
 4989 0810 C4E1     		b	.L244
 4990              	.L269:
1089:..\src/command_processing.c ****             
1090:..\src/command_processing.c **** //============================================================     set_rest_pos
1091:..\src/command_processing.c ****         case 23:        //Rest Position - int32
1092:..\src/command_processing.c ****             g_mem.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 | 
 4991              		.loc 1 1092 0
 4992 0812 394B     		ldr	r3, .L359
 4993 0814 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4994 0816 1A06     		lsls	r2, r3, #24
 4995 0818 374B     		ldr	r3, .L359
 4996 081a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4997 081c 1B04     		lsls	r3, r3, #16
 4998 081e 1A43     		orrs	r2, r2, r3
 4999 0820 354B     		ldr	r3, .L359
 5000 0822 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5001 0824 1B02     		lsls	r3, r3, #8
 5002 0826 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 130


 5003 0828 334A     		ldr	r2, .L359
 5004 082a 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 5005 082c 1343     		orrs	r3, r3, r2
 5006 082e 334A     		ldr	r2, .L359+4
 5007 0830 C2F83831 		str	r3, [r2, #312]
1093:..\src/command_processing.c ****             //g_mem.rest_pos = *((int32 *) &g_rx.buffer[3]);
1094:..\src/command_processing.c ****             g_mem.rest_pos = g_mem.rest_pos << g_mem.res[0];
 5008              		.loc 1 1094 0
 5009 0834 314B     		ldr	r3, .L359+4
 5010 0836 D3F83831 		ldr	r3, [r3, #312]
 5011 083a 304A     		ldr	r2, .L359+4
 5012 083c 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 5013 0840 9340     		lsls	r3, r3, r2
 5014 0842 2E4A     		ldr	r2, .L359+4
 5015 0844 C2F83831 		str	r3, [r2, #312]
1095:..\src/command_processing.c ****         break; 
 5016              		.loc 1 1095 0
 5017 0848 A8E1     		b	.L244
 5018              	.L270:
1096:..\src/command_processing.c ****             
1097:..\src/command_processing.c **** //============================================================     set_rest_delay_pos
1098:..\src/command_processing.c ****         case 24:        //Rest Position Time Delay - int32
1099:..\src/command_processing.c ****            g_mem.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 |
 5019              		.loc 1 1099 0
 5020 084a 2B4B     		ldr	r3, .L359
 5021 084c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5022 084e 1A06     		lsls	r2, r3, #24
 5023 0850 294B     		ldr	r3, .L359
 5024 0852 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5025 0854 1B04     		lsls	r3, r3, #16
 5026 0856 1A43     		orrs	r2, r2, r3
 5027 0858 274B     		ldr	r3, .L359
 5028 085a 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5029 085c 1B02     		lsls	r3, r3, #8
 5030 085e 1343     		orrs	r3, r3, r2
 5031 0860 254A     		ldr	r2, .L359
 5032 0862 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 5033 0864 1343     		orrs	r3, r3, r2
 5034 0866 254A     		ldr	r2, .L359+4
 5035 0868 C2F83C31 		str	r3, [r2, #316]
1100:..\src/command_processing.c ****            //g_mem.rest_delay = *((float *) &g_rx.buffer[3]);
1101:..\src/command_processing.c **** 		   if (g_mem.rest_delay < 10) g_mem.rest_delay = 10;
 5036              		.loc 1 1101 0
 5037 086c 234B     		ldr	r3, .L359+4
 5038 086e D3F83C31 		ldr	r3, [r3, #316]
 5039 0872 092B     		cmp	r3, #9
 5040 0874 00F38D81 		bgt	.L352
 5041              		.loc 1 1101 0 is_stmt 0 discriminator 1
 5042 0878 204B     		ldr	r3, .L359+4
 5043 087a 0A22     		movs	r2, #10
 5044 087c C3F83C21 		str	r2, [r3, #316]
1102:..\src/command_processing.c ****         break; 
 5045              		.loc 1 1102 0 is_stmt 1 discriminator 1
 5046 0880 87E1     		b	.L352
 5047              	.L271:
1103:..\src/command_processing.c ****             
1104:..\src/command_processing.c **** //============================================================     set_rest_vel
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 131


1105:..\src/command_processing.c ****         case 25:        //Rest Position Velocity - int32
1106:..\src/command_processing.c ****             g_mem.rest_vel = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 | 
 5048              		.loc 1 1106 0
 5049 0882 1D4B     		ldr	r3, .L359
 5050 0884 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 5051 0886 1A06     		lsls	r2, r3, #24
 5052 0888 1B4B     		ldr	r3, .L359
 5053 088a 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 5054 088c 1B04     		lsls	r3, r3, #16
 5055 088e 1A43     		orrs	r2, r2, r3
 5056 0890 194B     		ldr	r3, .L359
 5057 0892 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 5058 0894 1B02     		lsls	r3, r3, #8
 5059 0896 1343     		orrs	r3, r3, r2
 5060 0898 174A     		ldr	r2, .L359
 5061 089a 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 5062 089c 1343     		orrs	r3, r3, r2
 5063 089e 174A     		ldr	r2, .L359+4
 5064 08a0 C2F84031 		str	r3, [r2, #320]
1107:..\src/command_processing.c **** 			//g_mem.rest_vel = *((float *) &g_rx.buffer[3]);
1108:..\src/command_processing.c ****         break;  
 5065              		.loc 1 1108 0
 5066 08a4 7AE1     		b	.L244
 5067              	.L272:
1109:..\src/command_processing.c ****             
1110:..\src/command_processing.c ****             
1111:..\src/command_processing.c **** //================================================     set_rest_position_flag
1112:..\src/command_processing.c ****         case 26:        //Rest position flag - uint8
1113:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 5068              		.loc 1 1113 0
 5069 08a6 144B     		ldr	r3, .L359
 5070 08a8 DB78     		ldrb	r3, [r3, #3]
 5071 08aa 7B75     		strb	r3, [r7, #21]
1114:..\src/command_processing.c ****             if (aux_uchar) {
 5072              		.loc 1 1114 0
 5073 08ac 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5074 08ae 002B     		cmp	r3, #0
 5075 08b0 04D0     		beq	.L334
1115:..\src/command_processing.c ****                 g_mem.rest_position_flag = TRUE;
 5076              		.loc 1 1115 0
 5077 08b2 124B     		ldr	r3, .L359+4
 5078 08b4 0122     		movs	r2, #1
 5079 08b6 83F84421 		strb	r2, [r3, #324]
1116:..\src/command_processing.c ****             } else {
1117:..\src/command_processing.c ****                 g_mem.rest_position_flag = FALSE;
1118:..\src/command_processing.c ****             }
1119:..\src/command_processing.c ****         break; 
 5080              		.loc 1 1119 0
 5081 08ba 6FE1     		b	.L244
 5082              	.L334:
1117:..\src/command_processing.c ****             }
 5083              		.loc 1 1117 0
 5084 08bc 0F4B     		ldr	r3, .L359+4
 5085 08be 0022     		movs	r2, #0
 5086 08c0 83F84421 		strb	r2, [r3, #324]
 5087              		.loc 1 1119 0
 5088 08c4 6AE1     		b	.L244
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 132


 5089              	.L273:
1120:..\src/command_processing.c ****             
1121:..\src/command_processing.c **** //===================================================     set_switch_emg
1122:..\src/command_processing.c ****         case 27:        //EMG inversion - uint8
1123:..\src/command_processing.c ****             g_mem.switch_emg = g_rx.buffer[3];
 5090              		.loc 1 1123 0
 5091 08c6 0C4B     		ldr	r3, .L359
 5092 08c8 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5093 08ca 0C4B     		ldr	r3, .L359+4
 5094 08cc 83F84521 		strb	r2, [r3, #325]
1124:..\src/command_processing.c ****         break; 
 5095              		.loc 1 1124 0
 5096 08d0 64E1     		b	.L244
 5097              	.L274:
1125:..\src/command_processing.c **** //================================================     set_right_left_flag
1126:..\src/command_processing.c ****         case 28:        //Right/Left hand flag - uint8
1127:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 5098              		.loc 1 1127 0
 5099 08d2 094B     		ldr	r3, .L359
 5100 08d4 DB78     		ldrb	r3, [r3, #3]
 5101 08d6 7B75     		strb	r3, [r7, #21]
1128:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 5102              		.loc 1 1128 0
 5103 08d8 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5104 08da 002B     		cmp	r3, #0
 5105 08dc 04D0     		beq	.L336
1129:..\src/command_processing.c ****                 g_mem.right_left = LEFT_HAND;
 5106              		.loc 1 1129 0
 5107 08de 074B     		ldr	r3, .L359+4
 5108 08e0 0122     		movs	r2, #1
 5109 08e2 83F84621 		strb	r2, [r3, #326]
 5110 08e6 03E0     		b	.L337
 5111              	.L336:
1130:..\src/command_processing.c ****             } else {            // 0
1131:..\src/command_processing.c ****                 g_mem.right_left = RIGHT_HAND;
 5112              		.loc 1 1131 0
 5113 08e8 044B     		ldr	r3, .L359+4
 5114 08ea 0022     		movs	r2, #0
 5115 08ec 83F84621 		strb	r2, [r3, #326]
 5116              	.L337:
1132:..\src/command_processing.c ****             }
1133:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 5117              		.loc 1 1133 0
 5118 08f0 044B     		ldr	r3, .L359+12
 5119 08f2 0122     		movs	r2, #1
 5120 08f4 1A70     		strb	r2, [r3]
1134:..\src/command_processing.c ****         break; 
 5121              		.loc 1 1134 0
 5122 08f6 51E1     		b	.L244
 5123              	.L360:
 5124              		.align	2
 5125              	.L359:
 5126 08f8 00000000 		.word	g_rx
 5127 08fc 00000000 		.word	g_mem
 5128 0900 03000000 		.word	g_rx+3
 5129 0904 00000000 		.word	reset_last_value_flag
 5130              	.L275:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 133


1135:..\src/command_processing.c ****             
1136:..\src/command_processing.c **** //===================================================     set_read_imu_flag
1137:..\src/command_processing.c ****         case 29:        //Read IMU flag - uint8
1138:..\src/command_processing.c ****             g_mem.read_imu_flag = g_rx.buffer[3];
 5131              		.loc 1 1138 0
 5132 0908 A64B     		ldr	r3, .L361
 5133 090a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5134 090c A64B     		ldr	r3, .L361+4
 5135 090e 83F84721 		strb	r2, [r3, #327]
1139:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5136              		.loc 1 1139 0
 5137 0912 A64B     		ldr	r3, .L361+8
 5138 0914 0122     		movs	r2, #1
 5139 0916 1A70     		strb	r2, [r3]
1140:..\src/command_processing.c ****         break; 
 5140              		.loc 1 1140 0
 5141 0918 40E1     		b	.L244
 5142              	.L276:
1141:..\src/command_processing.c ****             
1142:..\src/command_processing.c **** //===================================================     set_read_exp_port_flag
1143:..\src/command_processing.c ****         case 30:        //Read Expansion Port - uint8
1144:..\src/command_processing.c ****             g_mem.read_exp_port_flag = g_rx.buffer[3];
 5143              		.loc 1 1144 0
 5144 091a A24B     		ldr	r3, .L361
 5145 091c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5146 091e A24B     		ldr	r3, .L361+4
 5147 0920 83F84821 		strb	r2, [r3, #328]
1145:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5148              		.loc 1 1145 0
 5149 0924 A14B     		ldr	r3, .L361+8
 5150 0926 0122     		movs	r2, #1
 5151 0928 1A70     		strb	r2, [r3]
1146:..\src/command_processing.c ****         break;  
 5152              		.loc 1 1146 0
 5153 092a 37E1     		b	.L244
 5154              	.L277:
1147:..\src/command_processing.c **** 
1148:..\src/command_processing.c **** //===================================================     reset_counters
1149:..\src/command_processing.c ****         case 31:        //Reset counters - uint8
1150:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 5155              		.loc 1 1150 0
 5156 092c 9D4B     		ldr	r3, .L361
 5157 092e DB78     		ldrb	r3, [r3, #3]
 5158 0930 7B75     		strb	r3, [r7, #21]
1151:..\src/command_processing.c ****             if (aux_uchar) {
 5159              		.loc 1 1151 0
 5160 0932 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5161 0934 002B     		cmp	r3, #0
 5162 0936 01D0     		beq	.L338
1152:..\src/command_processing.c ****                 reset_counters();
 5163              		.loc 1 1152 0
 5164 0938 FFF7FEFF 		bl	reset_counters
 5165              	.L338:
1153:..\src/command_processing.c ****             }
1154:..\src/command_processing.c ****             
1155:..\src/command_processing.c ****             if (c_mem.read_exp_port_flag == EXP_SD_RTC) {
 5166              		.loc 1 1155 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 134


 5167 093c 9C4B     		ldr	r3, .L361+12
 5168 093e 93F84831 		ldrb	r3, [r3, #328]	@ zero_extendqisi2
 5169 0942 012B     		cmp	r3, #1
 5170 0944 40F02781 		bne	.L353
1156:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1157:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 5171              		.loc 1 1157 0
 5172 0948 8720     		movs	r0, #135
 5173 094a FFF7FEFF 		bl	DS1302_read
 5174 094e 0346     		mov	r3, r0
 5175 0950 7B75     		strb	r3, [r7, #21]
1158:..\src/command_processing.c ****                 g_mem.maint_day = (aux_uchar/16) * 10 + aux_uchar%16;
 5176              		.loc 1 1158 0
 5177 0952 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5178 0954 1B09     		lsrs	r3, r3, #4
 5179 0956 DBB2     		uxtb	r3, r3
 5180 0958 1A46     		mov	r2, r3
 5181 095a 9200     		lsls	r2, r2, #2
 5182 095c 1344     		add	r3, r3, r2
 5183 095e 5B00     		lsls	r3, r3, #1
 5184 0960 DAB2     		uxtb	r2, r3
 5185 0962 7B7D     		ldrb	r3, [r7, #21]
 5186 0964 03F00F03 		and	r3, r3, #15
 5187 0968 DBB2     		uxtb	r3, r3
 5188 096a 1344     		add	r3, r3, r2
 5189 096c DAB2     		uxtb	r2, r3
 5190 096e 8E4B     		ldr	r3, .L361+4
 5191 0970 83F83521 		strb	r2, [r3, #309]
1159:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 5192              		.loc 1 1159 0
 5193 0974 8920     		movs	r0, #137
 5194 0976 FFF7FEFF 		bl	DS1302_read
 5195 097a 0346     		mov	r3, r0
 5196 097c 7B75     		strb	r3, [r7, #21]
1160:..\src/command_processing.c ****                 g_mem.maint_month = (aux_uchar/16) * 10 + aux_uchar%16;
 5197              		.loc 1 1160 0
 5198 097e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5199 0980 1B09     		lsrs	r3, r3, #4
 5200 0982 DBB2     		uxtb	r3, r3
 5201 0984 1A46     		mov	r2, r3
 5202 0986 9200     		lsls	r2, r2, #2
 5203 0988 1344     		add	r3, r3, r2
 5204 098a 5B00     		lsls	r3, r3, #1
 5205 098c DAB2     		uxtb	r2, r3
 5206 098e 7B7D     		ldrb	r3, [r7, #21]
 5207 0990 03F00F03 		and	r3, r3, #15
 5208 0994 DBB2     		uxtb	r3, r3
 5209 0996 1344     		add	r3, r3, r2
 5210 0998 DAB2     		uxtb	r2, r3
 5211 099a 834B     		ldr	r3, .L361+4
 5212 099c 83F83621 		strb	r2, [r3, #310]
1161:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 5213              		.loc 1 1161 0
 5214 09a0 8D20     		movs	r0, #141
 5215 09a2 FFF7FEFF 		bl	DS1302_read
 5216 09a6 0346     		mov	r3, r0
 5217 09a8 7B75     		strb	r3, [r7, #21]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 135


1162:..\src/command_processing.c ****                 g_mem.maint_year = (aux_uchar/16) * 10 + aux_uchar%16;  
 5218              		.loc 1 1162 0
 5219 09aa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 5220 09ac 1B09     		lsrs	r3, r3, #4
 5221 09ae DBB2     		uxtb	r3, r3
 5222 09b0 1A46     		mov	r2, r3
 5223 09b2 9200     		lsls	r2, r2, #2
 5224 09b4 1344     		add	r3, r3, r2
 5225 09b6 5B00     		lsls	r3, r3, #1
 5226 09b8 DAB2     		uxtb	r2, r3
 5227 09ba 7B7D     		ldrb	r3, [r7, #21]
 5228 09bc 03F00F03 		and	r3, r3, #15
 5229 09c0 DBB2     		uxtb	r3, r3
 5230 09c2 1344     		add	r3, r3, r2
 5231 09c4 DAB2     		uxtb	r2, r3
 5232 09c6 784B     		ldr	r3, .L361+4
 5233 09c8 83F83721 		strb	r2, [r3, #311]
1163:..\src/command_processing.c ****             }
1164:..\src/command_processing.c ****         break;             
 5234              		.loc 1 1164 0
 5235 09cc E3E0     		b	.L353
 5236              	.L278:
1165:..\src/command_processing.c ****             
1166:..\src/command_processing.c **** //==================================================    set_current_time
1167:..\src/command_processing.c ****         case 32:         //Current Time - uint8[3]
1168:..\src/command_processing.c ****             for (i=0; i<6; i++){
 5237              		.loc 1 1168 0
 5238 09ce 0023     		movs	r3, #0
 5239 09d0 FB75     		strb	r3, [r7, #23]
 5240 09d2 0CE0     		b	.L340
 5241              	.L341:
1169:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 5242              		.loc 1 1169 0 discriminator 3
 5243 09d4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5244 09d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5245 09d8 0332     		adds	r2, r2, #3
 5246 09da 7249     		ldr	r1, .L361
 5247 09dc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5248 09de 724A     		ldr	r2, .L361+4
 5249 09e0 1344     		add	r3, r3, r2
 5250 09e2 0A46     		mov	r2, r1
 5251 09e4 83F85020 		strb	r2, [r3, #80]
1168:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 5252              		.loc 1 1168 0 discriminator 3
 5253 09e8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5254 09ea 0133     		adds	r3, r3, #1
 5255 09ec FB75     		strb	r3, [r7, #23]
 5256              	.L340:
1168:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 5257              		.loc 1 1168 0 is_stmt 0 discriminator 1
 5258 09ee FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5259 09f0 052B     		cmp	r3, #5
 5260 09f2 EFD9     		bls	.L341
1170:..\src/command_processing.c ****             }
1171:..\src/command_processing.c ****             
1172:..\src/command_processing.c ****             if (c_mem.read_exp_port_flag == EXP_SD_RTC) {
 5261              		.loc 1 1172 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 136


 5262 09f4 6E4B     		ldr	r3, .L361+12
 5263 09f6 93F84831 		ldrb	r3, [r3, #328]	@ zero_extendqisi2
 5264 09fa 012B     		cmp	r3, #1
 5265 09fc 40F0CD80 		bne	.L354
1173:..\src/command_processing.c ****                 set_RTC_time();
 5266              		.loc 1 1173 0
 5267 0a00 FFF7FEFF 		bl	set_RTC_time
1174:..\src/command_processing.c ****             }
1175:..\src/command_processing.c ****         break;
 5268              		.loc 1 1175 0
 5269 0a04 C9E0     		b	.L354
 5270              	.L279:
1176:..\src/command_processing.c ****                 
1177:..\src/command_processing.c **** //==================================================    set_SPI_read_delay
1178:..\src/command_processing.c ****         case 33:         //SPI read delay - uint8
1179:..\src/command_processing.c ****             g_mem.SPI_read_delay = g_rx.buffer[3];  
 5271              		.loc 1 1179 0
 5272 0a06 674B     		ldr	r3, .L361
 5273 0a08 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5274 0a0a 674B     		ldr	r3, .L361+4
 5275 0a0c 83F85021 		strb	r2, [r3, #336]
1180:..\src/command_processing.c ****         break;
 5276              		.loc 1 1180 0
 5277 0a10 C4E0     		b	.L244
 5278              	.L280:
1181:..\src/command_processing.c ****                 
1182:..\src/command_processing.c **** //==================================================    set_IMU_0_conf
1183:..\src/command_processing.c ****         case 34:         //On board IMU configuration flags - uint8[5]            
1184:..\src/command_processing.c ****             //Set Imu table (On board IMU)
1185:..\src/command_processing.c ****             g_mem.IMU_conf[IMU_connected[0]][0] = g_rx.buffer[3];
 5279              		.loc 1 1185 0
 5280 0a12 684B     		ldr	r3, .L361+16
 5281 0a14 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5282 0a16 1946     		mov	r1, r3
 5283 0a18 624B     		ldr	r3, .L361
 5284 0a1a D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 5285 0a1c 624A     		ldr	r2, .L361+4
 5286 0a1e 0B46     		mov	r3, r1
 5287 0a20 9B00     		lsls	r3, r3, #2
 5288 0a22 0B44     		add	r3, r3, r1
 5289 0a24 1344     		add	r3, r3, r2
 5290 0a26 03F25113 		addw	r3, r3, #337
 5291 0a2a 0246     		mov	r2, r0
 5292 0a2c 1A70     		strb	r2, [r3]
1186:..\src/command_processing.c ****             g_mem.IMU_conf[IMU_connected[0]][1] = g_rx.buffer[4];
 5293              		.loc 1 1186 0
 5294 0a2e 614B     		ldr	r3, .L361+16
 5295 0a30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5296 0a32 1946     		mov	r1, r3
 5297 0a34 5B4B     		ldr	r3, .L361
 5298 0a36 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 5299 0a38 5B4A     		ldr	r2, .L361+4
 5300 0a3a 0B46     		mov	r3, r1
 5301 0a3c 9B00     		lsls	r3, r3, #2
 5302 0a3e 0B44     		add	r3, r3, r1
 5303 0a40 1344     		add	r3, r3, r2
 5304 0a42 03F5A973 		add	r3, r3, #338
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 137


 5305 0a46 0246     		mov	r2, r0
 5306 0a48 1A70     		strb	r2, [r3]
1187:..\src/command_processing.c ****             g_mem.IMU_conf[IMU_connected[0]][2] = g_rx.buffer[5];
 5307              		.loc 1 1187 0
 5308 0a4a 5A4B     		ldr	r3, .L361+16
 5309 0a4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5310 0a4e 1946     		mov	r1, r3
 5311 0a50 544B     		ldr	r3, .L361
 5312 0a52 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 5313 0a54 544A     		ldr	r2, .L361+4
 5314 0a56 0B46     		mov	r3, r1
 5315 0a58 9B00     		lsls	r3, r3, #2
 5316 0a5a 0B44     		add	r3, r3, r1
 5317 0a5c 1344     		add	r3, r3, r2
 5318 0a5e 03F25313 		addw	r3, r3, #339
 5319 0a62 0246     		mov	r2, r0
 5320 0a64 1A70     		strb	r2, [r3]
1188:..\src/command_processing.c ****             g_mem.IMU_conf[IMU_connected[0]][3] = g_rx.buffer[6];
 5321              		.loc 1 1188 0
 5322 0a66 534B     		ldr	r3, .L361+16
 5323 0a68 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5324 0a6a 1946     		mov	r1, r3
 5325 0a6c 4D4B     		ldr	r3, .L361
 5326 0a6e 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 5327 0a70 4D4A     		ldr	r2, .L361+4
 5328 0a72 0B46     		mov	r3, r1
 5329 0a74 9B00     		lsls	r3, r3, #2
 5330 0a76 0B44     		add	r3, r3, r1
 5331 0a78 1344     		add	r3, r3, r2
 5332 0a7a 03F5AA73 		add	r3, r3, #340
 5333 0a7e 0246     		mov	r2, r0
 5334 0a80 1A70     		strb	r2, [r3]
1189:..\src/command_processing.c ****             g_mem.IMU_conf[IMU_connected[0]][4] = g_rx.buffer[7];
 5335              		.loc 1 1189 0
 5336 0a82 4C4B     		ldr	r3, .L361+16
 5337 0a84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5338 0a86 1946     		mov	r1, r3
 5339 0a88 464B     		ldr	r3, .L361
 5340 0a8a D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 5341 0a8c 464A     		ldr	r2, .L361+4
 5342 0a8e 0B46     		mov	r3, r1
 5343 0a90 9B00     		lsls	r3, r3, #2
 5344 0a92 0B44     		add	r3, r3, r1
 5345 0a94 1344     		add	r3, r3, r2
 5346 0a96 03F25513 		addw	r3, r3, #341
 5347 0a9a 0246     		mov	r2, r0
 5348 0a9c 1A70     		strb	r2, [r3]
1190:..\src/command_processing.c ****         break;        
 5349              		.loc 1 1190 0
 5350 0a9e 7DE0     		b	.L244
 5351              	.L281:
1191:..\src/command_processing.c ****                 
1192:..\src/command_processing.c **** //==================================================    set_Encoder_conf
1193:..\src/command_processing.c ****         case 35:         //Encoder configuration flags - uint8[10]
1194:..\src/command_processing.c ****             for (i=0; i < N_Encoder_Line_Connected[0]; i++){
 5352              		.loc 1 1194 0
 5353 0aa0 0023     		movs	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 138


 5354 0aa2 FB75     		strb	r3, [r7, #23]
 5355 0aa4 0CE0     		b	.L343
 5356              	.L344:
1195:..\src/command_processing.c ****                 g_mem.Encoder_conf[0][i] = g_rx.buffer[3 + i];
 5357              		.loc 1 1195 0 discriminator 3
 5358 0aa6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5359 0aa8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5360 0aaa 0332     		adds	r2, r2, #3
 5361 0aac 3D49     		ldr	r1, .L361
 5362 0aae 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5363 0ab0 3D4A     		ldr	r2, .L361+4
 5364 0ab2 1344     		add	r3, r3, r2
 5365 0ab4 0A46     		mov	r2, r1
 5366 0ab6 83F86A21 		strb	r2, [r3, #362]
1194:..\src/command_processing.c ****                 g_mem.Encoder_conf[0][i] = g_rx.buffer[3 + i];
 5367              		.loc 1 1194 0 discriminator 3
 5368 0aba FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5369 0abc 0133     		adds	r3, r3, #1
 5370 0abe FB75     		strb	r3, [r7, #23]
 5371              	.L343:
1194:..\src/command_processing.c ****                 g_mem.Encoder_conf[0][i] = g_rx.buffer[3 + i];
 5372              		.loc 1 1194 0 is_stmt 0 discriminator 1
 5373 0ac0 3D4B     		ldr	r3, .L361+20
 5374 0ac2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5375 0ac4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5376 0ac6 9A42     		cmp	r2, r3
 5377 0ac8 EDD3     		bcc	.L344
1196:..\src/command_processing.c ****             }
1197:..\src/command_processing.c ****         break;
 5378              		.loc 1 1197 0 is_stmt 1
 5379 0aca 67E0     		b	.L244
 5380              	.L282:
1198:..\src/command_processing.c **** //==================================================    set_Encoder_conf
1199:..\src/command_processing.c ****         case 36:         //Encoder configuration flags - uint8[10]
1200:..\src/command_processing.c ****             for (i=0; i < N_Encoder_Line_Connected[1]; i++){
 5381              		.loc 1 1200 0
 5382 0acc 0023     		movs	r3, #0
 5383 0ace FB75     		strb	r3, [r7, #23]
 5384 0ad0 0CE0     		b	.L345
 5385              	.L346:
1201:..\src/command_processing.c ****                 g_mem.Encoder_conf[1][i] = g_rx.buffer[3 + i];
 5386              		.loc 1 1201 0 discriminator 3
 5387 0ad2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5388 0ad4 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5389 0ad6 0332     		adds	r2, r2, #3
 5390 0ad8 3249     		ldr	r1, .L361
 5391 0ada 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5392 0adc 324A     		ldr	r2, .L361+4
 5393 0ade 1344     		add	r3, r3, r2
 5394 0ae0 0A46     		mov	r2, r1
 5395 0ae2 83F86F21 		strb	r2, [r3, #367]
1200:..\src/command_processing.c ****                 g_mem.Encoder_conf[1][i] = g_rx.buffer[3 + i];
 5396              		.loc 1 1200 0 discriminator 3
 5397 0ae6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5398 0ae8 0133     		adds	r3, r3, #1
 5399 0aea FB75     		strb	r3, [r7, #23]
 5400              	.L345:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 139


1200:..\src/command_processing.c ****                 g_mem.Encoder_conf[1][i] = g_rx.buffer[3 + i];
 5401              		.loc 1 1200 0 is_stmt 0 discriminator 1
 5402 0aec 324B     		ldr	r3, .L361+20
 5403 0aee 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5404 0af0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5405 0af2 9A42     		cmp	r2, r3
 5406 0af4 EDD3     		bcc	.L346
1202:..\src/command_processing.c ****             }
1203:..\src/command_processing.c ****         break;
 5407              		.loc 1 1203 0 is_stmt 1
 5408 0af6 51E0     		b	.L244
 5409              	.L283:
1204:..\src/command_processing.c **** //==================================================    set_ADC_conf
1205:..\src/command_processing.c ****         case 37:        //ADC configuration flags - uint8[12]
1206:..\src/command_processing.c ****             for (i=0; i < 6; i++){
 5410              		.loc 1 1206 0
 5411 0af8 0023     		movs	r3, #0
 5412 0afa FB75     		strb	r3, [r7, #23]
 5413 0afc 0CE0     		b	.L347
 5414              	.L348:
1207:..\src/command_processing.c ****                 g_mem.ADC_conf[i] = g_rx.buffer[3 + i];
 5415              		.loc 1 1207 0 discriminator 3
 5416 0afe FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5417 0b00 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5418 0b02 0332     		adds	r2, r2, #3
 5419 0b04 2749     		ldr	r1, .L361
 5420 0b06 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5421 0b08 274A     		ldr	r2, .L361+4
 5422 0b0a 1344     		add	r3, r3, r2
 5423 0b0c 0A46     		mov	r2, r1
 5424 0b0e 83F87421 		strb	r2, [r3, #372]
1206:..\src/command_processing.c ****                 g_mem.ADC_conf[i] = g_rx.buffer[3 + i];
 5425              		.loc 1 1206 0 discriminator 3
 5426 0b12 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5427 0b14 0133     		adds	r3, r3, #1
 5428 0b16 FB75     		strb	r3, [r7, #23]
 5429              	.L347:
1206:..\src/command_processing.c ****                 g_mem.ADC_conf[i] = g_rx.buffer[3 + i];
 5430              		.loc 1 1206 0 is_stmt 0 discriminator 1
 5431 0b18 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5432 0b1a 052B     		cmp	r3, #5
 5433 0b1c EFD9     		bls	.L348
1208:..\src/command_processing.c ****             }
1209:..\src/command_processing.c ****         break;
 5434              		.loc 1 1209 0 is_stmt 1
 5435 0b1e 3DE0     		b	.L244
 5436              	.L284:
1210:..\src/command_processing.c **** //==================================================    set_ADC_conf
1211:..\src/command_processing.c ****         case 38:        //ADC configuration flags - uint8[12]
1212:..\src/command_processing.c ****             for (i=0; i < 6; i++){
 5437              		.loc 1 1212 0
 5438 0b20 0023     		movs	r3, #0
 5439 0b22 FB75     		strb	r3, [r7, #23]
 5440 0b24 0DE0     		b	.L349
 5441              	.L350:
1213:..\src/command_processing.c ****                 g_mem.ADC_conf[6+i] = g_rx.buffer[3 + i];
 5442              		.loc 1 1213 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 140


 5443 0b26 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5444 0b28 0633     		adds	r3, r3, #6
 5445 0b2a FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 5446 0b2c 0332     		adds	r2, r2, #3
 5447 0b2e 1D49     		ldr	r1, .L361
 5448 0b30 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5449 0b32 1D4A     		ldr	r2, .L361+4
 5450 0b34 1344     		add	r3, r3, r2
 5451 0b36 0A46     		mov	r2, r1
 5452 0b38 83F87421 		strb	r2, [r3, #372]
1212:..\src/command_processing.c ****                 g_mem.ADC_conf[6+i] = g_rx.buffer[3 + i];
 5453              		.loc 1 1212 0 discriminator 3
 5454 0b3c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5455 0b3e 0133     		adds	r3, r3, #1
 5456 0b40 FB75     		strb	r3, [r7, #23]
 5457              	.L349:
1212:..\src/command_processing.c ****                 g_mem.ADC_conf[6+i] = g_rx.buffer[3 + i];
 5458              		.loc 1 1212 0 is_stmt 0 discriminator 1
 5459 0b42 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 5460 0b44 052B     		cmp	r3, #5
 5461 0b46 EED9     		bls	.L350
1214:..\src/command_processing.c ****             }
1215:..\src/command_processing.c ****         break; 
 5462              		.loc 1 1215 0 is_stmt 1
 5463 0b48 28E0     		b	.L244
 5464              	.L285:
1216:..\src/command_processing.c **** //===================================================     set_emg_sensors_port_flag
1217:..\src/command_processing.c ****         case 39:        //Read EMG additional sensors port - uint8
1218:..\src/command_processing.c ****             g_mem.read_emg_sensors_port_flag = g_rx.buffer[3];
 5465              		.loc 1 1218 0
 5466 0b4a 164B     		ldr	r3, .L361
 5467 0b4c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5468 0b4e 164B     		ldr	r3, .L361+4
 5469 0b50 83F88021 		strb	r2, [r3, #384]
1219:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5470              		.loc 1 1219 0
 5471 0b54 154B     		ldr	r3, .L361+8
 5472 0b56 0122     		movs	r2, #1
 5473 0b58 1A70     		strb	r2, [r3]
1220:..\src/command_processing.c ****         break;
 5474              		.loc 1 1220 0
 5475 0b5a 1FE0     		b	.L244
 5476              	.L286:
1221:..\src/command_processing.c **** 
1222:..\src/command_processing.c **** //===================================================     use_2nd_motor_flag
1223:..\src/command_processing.c ****         case 40:        //Use 2nd motor flag - uint8
1224:..\src/command_processing.c ****             g_mem.use_2nd_motor_flag = g_rx.buffer[3];
 5477              		.loc 1 1224 0
 5478 0b5c 114B     		ldr	r3, .L361
 5479 0b5e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5480 0b60 114B     		ldr	r3, .L361+4
 5481 0b62 83F88121 		strb	r2, [r3, #385]
1225:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5482              		.loc 1 1225 0
 5483 0b66 114B     		ldr	r3, .L361+8
 5484 0b68 0122     		movs	r2, #1
 5485 0b6a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 141


1226:..\src/command_processing.c ****         break;     
 5486              		.loc 1 1226 0
 5487 0b6c 16E0     		b	.L244
 5488              	.L287:
1227:..\src/command_processing.c **** //===================================================     driver_motor_type_1
1228:..\src/command_processing.c ****         case 41:        //Driver motor type - Motor 1 - uint8
1229:..\src/command_processing.c ****             g_mem.motor_driver_type[0] = g_rx.buffer[3];
 5489              		.loc 1 1229 0
 5490 0b6e 0D4B     		ldr	r3, .L361
 5491 0b70 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5492 0b72 0D4B     		ldr	r3, .L361+4
 5493 0b74 83F88221 		strb	r2, [r3, #386]
1230:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5494              		.loc 1 1230 0
 5495 0b78 0C4B     		ldr	r3, .L361+8
 5496 0b7a 0122     		movs	r2, #1
 5497 0b7c 1A70     		strb	r2, [r3]
1231:..\src/command_processing.c ****         break;   
 5498              		.loc 1 1231 0
 5499 0b7e 0DE0     		b	.L244
 5500              	.L288:
1232:..\src/command_processing.c **** //===================================================     driver_motor_type_2
1233:..\src/command_processing.c ****         case 42:        //Driver motor type - Motor 2 - uint8
1234:..\src/command_processing.c ****             g_mem.motor_driver_type[1] = g_rx.buffer[3];
 5501              		.loc 1 1234 0
 5502 0b80 084B     		ldr	r3, .L361
 5503 0b82 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5504 0b84 084B     		ldr	r3, .L361+4
 5505 0b86 83F88321 		strb	r2, [r3, #387]
1235:..\src/command_processing.c ****             reset_PSoC_flag = TRUE;
 5506              		.loc 1 1235 0
 5507 0b8a 084B     		ldr	r3, .L361+8
 5508 0b8c 0122     		movs	r2, #1
 5509 0b8e 1A70     		strb	r2, [r3]
1236:..\src/command_processing.c ****         break;               
 5510              		.loc 1 1236 0
 5511 0b90 04E0     		b	.L244
 5512              	.L352:
1102:..\src/command_processing.c ****             
 5513              		.loc 1 1102 0
 5514 0b92 00BF     		nop
 5515 0b94 02E0     		b	.L351
 5516              	.L353:
1164:..\src/command_processing.c ****             
 5517              		.loc 1 1164 0
 5518 0b96 00BF     		nop
 5519 0b98 00E0     		b	.L351
 5520              	.L354:
1175:..\src/command_processing.c ****                 
 5521              		.loc 1 1175 0
 5522 0b9a 00BF     		nop
 5523              	.L244:
 5524              	.L351:
1237:..\src/command_processing.c ****     }                
1238:..\src/command_processing.c **** }
 5525              		.loc 1 1238 0
 5526 0b9c 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 142


 5527 0b9e 1837     		adds	r7, r7, #24
 5528              		.cfi_def_cfa_offset 8
 5529 0ba0 BD46     		mov	sp, r7
 5530              		.cfi_def_cfa_register 13
 5531              		@ sp needed
 5532 0ba2 80BD     		pop	{r7, pc}
 5533              	.L362:
 5534              		.align	2
 5535              	.L361:
 5536 0ba4 00000000 		.word	g_rx
 5537 0ba8 00000000 		.word	g_mem
 5538 0bac 00000000 		.word	reset_PSoC_flag
 5539 0bb0 00000000 		.word	c_mem
 5540 0bb4 00000000 		.word	IMU_connected
 5541 0bb8 00000000 		.word	N_Encoder_Line_Connected
 5542              		.cfi_endproc
 5543              	.LFE68:
 5544              		.size	manage_param_list, .-manage_param_list
 5545              		.section	.rodata
 5546              		.align	2
 5547              	.LC80:
 5548 0890 506F7274 		.ascii	"Port %u ID:\000"
 5548      20257520 
 5548      49443A00 
 5549              		.align	2
 5550              	.LC81:
 5551 089c 2575202D 		.ascii	"%u - Device ID:\000"
 5551      20446576 
 5551      69636520 
 5551      49443A00 
 5552              		.align	2
 5553              	.LC82:
 5554 08ac 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 5554      20494D55 
 5554      20256420 
 5554      636F6E66 
 5554      69677572 
 5555 08c7 00       		.align	2
 5556              	.LC83:
 5557 08c8 2575202D 		.ascii	"%u - SPI read delay:\000"
 5557      20535049 
 5557      20726561 
 5557      64206465 
 5557      6C61793A 
 5558 08dd 000000   		.align	2
 5559              	.LC84:
 5560 08e0 204E6F6E 		.ascii	" None\000"
 5560      6500
 5561 08e6 0000     		.align	2
 5562              	.LC85:
 5563 08e8 204C6F77 		.ascii	" Low\000"
 5563      00
 5564 08ed 000000   		.align	2
 5565              	.LC86:
 5566 08f0 20486967 		.ascii	" High\000"
 5566      6800
 5567 08f6 0000     		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 143


 5568              	.LC78:
 5569 08f8 4E756D62 		.ascii	"Number of connected IMUs:\000"
 5569      6572206F 
 5569      6620636F 
 5569      6E6E6563 
 5569      74656420 
 5570 0912 0000     		.align	2
 5571              	.LC79:
 5572 0914 4D616720 		.ascii	"Mag cal parameters:\000"
 5572      63616C20 
 5572      70617261 
 5572      6D657465 
 5572      72733A00 
 5573              		.section	.text.get_IMU_param_list,"ax",%progbits
 5574              		.align	2
 5575              		.global	get_IMU_param_list
 5576              		.thumb
 5577              		.thumb_func
 5578              		.type	get_IMU_param_list, %function
 5579              	get_IMU_param_list:
 5580              	.LFB69:
1239:..\src/command_processing.c **** 
1240:..\src/command_processing.c **** 
1241:..\src/command_processing.c **** //==============================================================================
1242:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1243:..\src/command_processing.c **** //==============================================================================
1244:..\src/command_processing.c **** 
1245:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1246:..\src/command_processing.c **** {
 5581              		.loc 1 1246 0
 5582              		.cfi_startproc
 5583              		@ args = 0, pretend = 0, frame = 1704
 5584              		@ frame_needed = 1, uses_anonymous_args = 0
 5585 0000 B0B5     		push	{r4, r5, r7, lr}
 5586              		.cfi_def_cfa_offset 16
 5587              		.cfi_offset 4, -16
 5588              		.cfi_offset 5, -12
 5589              		.cfi_offset 7, -8
 5590              		.cfi_offset 14, -4
 5591 0002 ADF5D56D 		sub	sp, sp, #1704
 5592              		.cfi_def_cfa_offset 1720
 5593 0006 00AF     		add	r7, sp, #0
 5594              		.cfi_def_cfa_register 7
 5595 0008 0246     		mov	r2, r0
 5596 000a BB1D     		adds	r3, r7, #6
 5597 000c 1A80     		strh	r2, [r3]	@ movhi
1247:..\src/command_processing.c ****     //Package to be sent variables
1248:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 5598              		.loc 1 1248 0
 5599 000e 07F58A73 		add	r3, r7, #276
 5600 0012 0022     		movs	r2, #0
 5601 0014 1A60     		str	r2, [r3]
 5602 0016 0433     		adds	r3, r3, #4
 5603 0018 40F27552 		movw	r2, #1397
 5604 001c 0021     		movs	r1, #0
 5605 001e 1846     		mov	r0, r3
 5606 0020 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 144


1249:..\src/command_processing.c ****                         7*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 7)
1250:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1251:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1252:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1253:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1254:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1255:..\src/command_processing.c ****     uint16 num_imus_id_params = 7;      //(1 port instead of 7)
 5607              		.loc 1 1255 0
 5608 0024 0723     		movs	r3, #7
 5609 0026 A7F89A36 		strh	r3, [r7, #1690]	@ movhi
1256:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 5610              		.loc 1 1256 0
 5611 002a 0023     		movs	r3, #0
 5612 002c A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1257:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 5613              		.loc 1 1257 0
 5614 0030 0223     		movs	r3, #2
 5615 0032 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1258:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 5616              		.loc 1 1258 0
 5617 0036 B7F89A36 		ldrh	r3, [r7, #1690]
 5618 003a 5A1C     		adds	r2, r3, #1
1259:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 5619              		.loc 1 1259 0
 5620 003c B7F8A636 		ldrh	r3, [r7, #1702]
 5621 0040 1344     		add	r3, r3, r2
1260:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 5622              		.loc 1 1260 0
 5623 0042 0133     		adds	r3, r3, #1
1258:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 5624              		.loc 1 1258 0
 5625 0044 9AB2     		uxth	r2, r3
 5626 0046 D24B     		ldr	r3, .L409
 5627 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5628 004a 9BB2     		uxth	r3, r3
 5629 004c 1344     		add	r3, r3, r2
 5630 004e 9BB2     		uxth	r3, r3
 5631 0050 1A46     		mov	r2, r3	@ movhi
 5632 0052 9200     		lsls	r2, r2, #2
 5633 0054 1344     		add	r3, r3, r2
 5634 0056 1A46     		mov	r2, r3	@ movhi
 5635 0058 9100     		lsls	r1, r2, #2
 5636 005a 1A46     		mov	r2, r3	@ movhi
 5637 005c 0B46     		mov	r3, r1	@ movhi
 5638 005e 1344     		add	r3, r3, r2
 5639 0060 5B00     		lsls	r3, r3, #1
 5640 0062 9BB2     		uxth	r3, r3
 5641 0064 FB33     		adds	r3, r3, #251
 5642 0066 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1261:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1262:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1263:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1264:..\src/command_processing.c **** 
1265:..\src/command_processing.c ****     //Auxiliary variables
1266:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1267:..\src/command_processing.c ****     uint16 start_byte = 0;
 5643              		.loc 1 1267 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 145


 5644 006a 0023     		movs	r3, #0
 5645 006c A7F89436 		strh	r3, [r7, #1684]	@ movhi
1268:..\src/command_processing.c **** 
1269:..\src/command_processing.c ****     //Parameters menu string definitions
1270:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 5646              		.loc 1 1270 0
 5647 0070 07F1F803 		add	r3, r7, #248
 5648 0074 C74A     		ldr	r2, .L409+4
 5649 0076 1C46     		mov	r4, r3
 5650 0078 1546     		mov	r5, r2
 5651 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5652 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5653 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 5654 0082 03C4     		stmia	r4!, {r0, r1}
 5655 0084 2280     		strh	r2, [r4]	@ movhi
1271:..\src/command_processing.c ****     char ids_str[11]            = "";
 5656              		.loc 1 1271 0
 5657 0086 07F1EC03 		add	r3, r7, #236
 5658 008a 0022     		movs	r2, #0
 5659 008c 1A60     		str	r2, [r3]
 5660 008e 0433     		adds	r3, r3, #4
 5661 0090 0022     		movs	r2, #0
 5662 0092 1A60     		str	r2, [r3]
 5663 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1272:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 5664              		.loc 1 1272 0
 5665 0098 07F1D803 		add	r3, r7, #216
 5666 009c BE4A     		ldr	r2, .L409+8
 5667 009e 1C46     		mov	r4, r3
 5668 00a0 1546     		mov	r5, r2
 5669 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5670 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5671 00a6 2B68     		ldr	r3, [r5]
 5672 00a8 2360     		str	r3, [r4]
1273:..\src/command_processing.c ****     char id_str[16]             = "";
 5673              		.loc 1 1273 0
 5674 00aa 07F1C803 		add	r3, r7, #200
 5675 00ae 0022     		movs	r2, #0
 5676 00b0 1A60     		str	r2, [r3]
 5677 00b2 0433     		adds	r3, r3, #4
 5678 00b4 0022     		movs	r2, #0
 5679 00b6 1A60     		str	r2, [r3]
 5680 00b8 5A60     		str	r2, [r3, #4]
 5681 00ba 9A60     		str	r2, [r3, #8]
1274:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 5682              		.loc 1 1274 0
 5683 00bc 07F19C03 		add	r3, r7, #156
 5684 00c0 0022     		movs	r2, #0
 5685 00c2 1A60     		str	r2, [r3]
 5686 00c4 0433     		adds	r3, r3, #4
 5687 00c6 2622     		movs	r2, #38
 5688 00c8 0021     		movs	r1, #0
 5689 00ca 1846     		mov	r0, r3
 5690 00cc FFF7FEFF 		bl	memset
1275:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 5691              		.loc 1 1275 0
 5692 00d0 07F18003 		add	r3, r7, #128
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 146


 5693 00d4 0022     		movs	r2, #0
 5694 00d6 1A60     		str	r2, [r3]
 5695 00d8 0433     		adds	r3, r3, #4
 5696 00da 0022     		movs	r2, #0
 5697 00dc 1A60     		str	r2, [r3]
 5698 00de 5A60     		str	r2, [r3, #4]
 5699 00e0 9A60     		str	r2, [r3, #8]
 5700 00e2 DA60     		str	r2, [r3, #12]
 5701 00e4 1A61     		str	r2, [r3, #16]
 5702 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1276:..\src/command_processing.c ****     
1277:..\src/command_processing.c ****     //Strings lenghts
1278:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 5703              		.loc 1 1278 0
 5704 00e8 07F1C803 		add	r3, r7, #200
 5705 00ec 1846     		mov	r0, r3
 5706 00ee FFF7FEFF 		bl	strlen
 5707 00f2 0346     		mov	r3, r0
 5708 00f4 87F89336 		strb	r3, [r7, #1683]
1279:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 5709              		.loc 1 1279 0
 5710 00f8 07F1F803 		add	r3, r7, #248
 5711 00fc 1846     		mov	r0, r3
 5712 00fe FFF7FEFF 		bl	strlen
 5713 0102 0346     		mov	r3, r0
 5714 0104 87F89236 		strb	r3, [r7, #1682]
1280:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 5715              		.loc 1 1280 0
 5716 0108 07F1EC03 		add	r3, r7, #236
 5717 010c 1846     		mov	r0, r3
 5718 010e FFF7FEFF 		bl	strlen
 5719 0112 0346     		mov	r3, r0
 5720 0114 87F89136 		strb	r3, [r7, #1681]
1281:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 5721              		.loc 1 1281 0
 5722 0118 07F1D803 		add	r3, r7, #216
 5723 011c 1846     		mov	r0, r3
 5724 011e FFF7FEFF 		bl	strlen
 5725 0122 0346     		mov	r3, r0
 5726 0124 87F89036 		strb	r3, [r7, #1680]
1282:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
 5727              		.loc 1 1282 0
 5728 0128 07F19C03 		add	r3, r7, #156
 5729 012c 1846     		mov	r0, r3
 5730 012e FFF7FEFF 		bl	strlen
 5731 0132 0346     		mov	r3, r0
 5732 0134 87F88F36 		strb	r3, [r7, #1679]
1283:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 5733              		.loc 1 1283 0
 5734 0138 07F18003 		add	r3, r7, #128
 5735 013c 1846     		mov	r0, r3
 5736 013e FFF7FEFF 		bl	strlen
 5737 0142 0346     		mov	r3, r0
 5738 0144 87F89D36 		strb	r3, [r7, #1693]
1284:..\src/command_processing.c ****     
1285:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 5739              		.loc 1 1285 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 147


 5740 0148 07F10803 		add	r3, r7, #8
 5741 014c 0022     		movs	r2, #0
 5742 014e 1A60     		str	r2, [r3]
 5743 0150 0433     		adds	r3, r3, #4
 5744 0152 7222     		movs	r2, #114
 5745 0154 0021     		movs	r1, #0
 5746 0156 1846     		mov	r0, r3
 5747 0158 FFF7FEFF 		bl	memset
1286:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1287:..\src/command_processing.c ****  
1288:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 5748              		.loc 1 1288 0
 5749 015c 07F10800 		add	r0, r7, #8
 5750 0160 6423     		movs	r3, #100
 5751 0162 0A22     		movs	r2, #10
 5752 0164 8D49     		ldr	r1, .L409+12
 5753 0166 FFF7FEFF 		bl	sprintf
1289:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 5754              		.loc 1 1289 0
 5755 016a 07F10803 		add	r3, r7, #8
 5756 016e 1846     		mov	r0, r3
 5757 0170 FFF7FEFF 		bl	strlen
 5758 0174 0346     		mov	r3, r0
 5759 0176 87F88E36 		strb	r3, [r7, #1678]
1290:..\src/command_processing.c **** 
1291:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1292:..\src/command_processing.c ****     // update packet_length
1293:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 5760              		.loc 1 1293 0
 5761 017a 854B     		ldr	r3, .L409
 5762 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5763 017e 5B08     		lsrs	r3, r3, #1
 5764 0180 DBB2     		uxtb	r3, r3
 5765 0182 A7F8A636 		strh	r3, [r7, #1702]	@ movhi
1294:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 5766              		.loc 1 1294 0
 5767 0186 824B     		ldr	r3, .L409
 5768 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5769 018a 1A46     		mov	r2, r3
 5770 018c B7F8A636 		ldrh	r3, [r7, #1702]
 5771 0190 5B00     		lsls	r3, r3, #1
 5772 0192 D31A     		subs	r3, r2, r3
 5773 0194 002B     		cmp	r3, #0
 5774 0196 04DD     		ble	.L364
 5775              		.loc 1 1294 0 is_stmt 0 discriminator 1
 5776 0198 B7F8A636 		ldrh	r3, [r7, #1702]
 5777 019c 0133     		adds	r3, r3, #1
 5778 019e A7F8A636 		strh	r3, [r7, #1702]	@ movhi
 5779              	.L364:
1295:..\src/command_processing.c ****     
1296:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 5780              		.loc 1 1296 0 is_stmt 1
 5781 01a2 B7F89A36 		ldrh	r3, [r7, #1690]
 5782 01a6 5A1C     		adds	r2, r3, #1
1297:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 5783              		.loc 1 1297 0
 5784 01a8 B7F8A636 		ldrh	r3, [r7, #1702]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 148


 5785 01ac 1344     		add	r3, r3, r2
1298:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 5786              		.loc 1 1298 0
 5787 01ae 0133     		adds	r3, r3, #1
1296:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 5788              		.loc 1 1296 0
 5789 01b0 9AB2     		uxth	r2, r3
 5790 01b2 774B     		ldr	r3, .L409
 5791 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5792 01b6 9BB2     		uxth	r3, r3
 5793 01b8 1344     		add	r3, r3, r2
 5794 01ba 9BB2     		uxth	r3, r3
 5795 01bc 1A46     		mov	r2, r3	@ movhi
 5796 01be 9200     		lsls	r2, r2, #2
 5797 01c0 1344     		add	r3, r3, r2
 5798 01c2 1A46     		mov	r2, r3	@ movhi
 5799 01c4 9100     		lsls	r1, r2, #2
 5800 01c6 1A46     		mov	r2, r3	@ movhi
 5801 01c8 0B46     		mov	r3, r1	@ movhi
 5802 01ca 1344     		add	r3, r3, r2
 5803 01cc 5B00     		lsls	r3, r3, #1
 5804 01ce 9BB2     		uxth	r3, r3
 5805 01d0 C933     		adds	r3, r3, #201
 5806 01d2 A7F89636 		strh	r3, [r7, #1686]	@ movhi
1299:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1300:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1301:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1302:..\src/command_processing.c **** 
1303:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 5807              		.loc 1 1303 0
 5808 01d6 B7F89A26 		ldrh	r2, [r7, #1690]	@ movhi
 5809 01da B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 5810 01de 1344     		add	r3, r3, r2
 5811 01e0 9BB2     		uxth	r3, r3
 5812 01e2 0333     		adds	r3, r3, #3
 5813 01e4 A7F89836 		strh	r3, [r7, #1688]	@ movhi
1304:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_PARAM;
 5814              		.loc 1 1304 0
 5815 01e8 07F58A73 		add	r3, r7, #276
 5816 01ec A222     		movs	r2, #162
 5817 01ee 1A70     		strb	r2, [r3]
1305:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 5818              		.loc 1 1305 0
 5819 01f0 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 5820 01f4 DAB2     		uxtb	r2, r3
 5821 01f6 B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 5822 01fa DBB2     		uxtb	r3, r3
 5823 01fc 1344     		add	r3, r3, r2
 5824 01fe DAB2     		uxtb	r2, r3
 5825 0200 634B     		ldr	r3, .L409
 5826 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5827 0204 1344     		add	r3, r3, r2
 5828 0206 DBB2     		uxtb	r3, r3
 5829 0208 0333     		adds	r3, r3, #3
 5830 020a DAB2     		uxtb	r2, r3
 5831 020c 07F58A73 		add	r3, r7, #276
 5832 0210 5A70     		strb	r2, [r3, #1]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 149


1306:..\src/command_processing.c **** 
1307:..\src/command_processing.c ****     switch(index) {
 5833              		.loc 1 1307 0
 5834 0212 BB1D     		adds	r3, r7, #6
 5835 0214 1B88     		ldrh	r3, [r3]
 5836 0216 002B     		cmp	r3, #0
 5837 0218 40F0D084 		bne	.L407
1308:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1309:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1310:..\src/command_processing.c ****             start_byte = 0;
 5838              		.loc 1 1310 0
 5839 021c 0023     		movs	r3, #0
 5840 021e A7F89436 		strh	r3, [r7, #1684]	@ movhi
1311:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 5841              		.loc 1 1311 0
 5842 0222 07F58A73 		add	r3, r7, #276
 5843 0226 0222     		movs	r2, #2
 5844 0228 9A70     		strb	r2, [r3, #2]
1312:..\src/command_processing.c ****             packet_data[3] = 1;
 5845              		.loc 1 1312 0
 5846 022a 07F58A73 		add	r3, r7, #276
 5847 022e 0122     		movs	r2, #1
 5848 0230 DA70     		strb	r2, [r3, #3]
1313:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 5849              		.loc 1 1313 0
 5850 0232 574B     		ldr	r3, .L409
 5851 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5852 0236 07F58A73 		add	r3, r7, #276
 5853 023a 1A71     		strb	r2, [r3, #4]
1314:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5854              		.loc 1 1314 0
 5855 023c 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 5856 0240 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 5857 0244 15E0     		b	.L367
 5858              	.L368:
1315:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 5859              		.loc 1 1315 0 discriminator 3
 5860 0246 97F89236 		ldrb	r3, [r7, #1682]	@ zero_extendqisi2
 5861 024a 5A1D     		adds	r2, r3, #5
 5862 024c B7F8A436 		ldrh	r3, [r7, #1700]
 5863 0250 D31A     		subs	r3, r2, r3
 5864 0252 97F89216 		ldrb	r1, [r7, #1682]	@ zero_extendqisi2
 5865 0256 B7F8A426 		ldrh	r2, [r7, #1700]
 5866 025a 8A1A     		subs	r2, r1, r2
 5867 025c 07F1F801 		add	r1, r7, #248
 5868 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5869 0262 07F58A72 		add	r2, r7, #276
 5870 0266 D154     		strb	r1, [r2, r3]
1314:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5871              		.loc 1 1314 0 discriminator 3
 5872 0268 B7F8A436 		ldrh	r3, [r7, #1700]
 5873 026c 013B     		subs	r3, r3, #1
 5874 026e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 5875              	.L367:
1314:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5876              		.loc 1 1314 0 is_stmt 0 discriminator 1
 5877 0272 B7F8A436 		ldrh	r3, [r7, #1700]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 150


 5878 0276 002B     		cmp	r3, #0
 5879 0278 E5D1     		bne	.L368
1316:..\src/command_processing.c ****                 
1317:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1318:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 5880              		.loc 1 1318 0 is_stmt 1
 5881 027a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 5882 027e 3233     		adds	r3, r3, #50
 5883 0280 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1319:..\src/command_processing.c ****             i = 0;
 5884              		.loc 1 1319 0
 5885 0284 0023     		movs	r3, #0
 5886 0286 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
1320:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 5887              		.loc 1 1320 0
 5888 028a 0023     		movs	r3, #0
 5889 028c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 5890 0290 B2E0     		b	.L369
 5891              	.L376:
1321:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5892              		.loc 1 1321 0
 5893 0292 B7F8A026 		ldrh	r2, [r7, #1696]
 5894 0296 07F1EC03 		add	r3, r7, #236
 5895 029a 4149     		ldr	r1, .L409+16
 5896 029c 1846     		mov	r0, r3
 5897 029e FFF7FEFF 		bl	sprintf
1322:..\src/command_processing.c ****                 h = 4;
 5898              		.loc 1 1322 0
 5899 02a2 0423     		movs	r3, #4
 5900 02a4 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1323:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 5901              		.loc 1 1323 0
 5902 02a8 07F1EC03 		add	r3, r7, #236
 5903 02ac 1846     		mov	r0, r3
 5904 02ae FFF7FEFF 		bl	strlen
 5905 02b2 0346     		mov	r3, r0
 5906 02b4 87F89136 		strb	r3, [r7, #1681]
1324:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5907              		.loc 1 1324 0
 5908 02b8 B7F89436 		ldrh	r3, [r7, #1684]
 5909 02bc 9A1C     		adds	r2, r3, #2
 5910 02be B7F8A036 		ldrh	r3, [r7, #1696]
 5911 02c2 3221     		movs	r1, #50
 5912 02c4 01FB03F3 		mul	r3, r1, r3
 5913 02c8 1344     		add	r3, r3, r2
 5914 02ca 07F58A72 		add	r2, r7, #276
 5915 02ce 0221     		movs	r1, #2
 5916 02d0 D154     		strb	r1, [r2, r3]
1325:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 5917              		.loc 1 1325 0
 5918 02d2 B7F89436 		ldrh	r3, [r7, #1684]
 5919 02d6 DA1C     		adds	r2, r3, #3
 5920 02d8 B7F8A036 		ldrh	r3, [r7, #1696]
 5921 02dc 3221     		movs	r1, #50
 5922 02de 01FB03F3 		mul	r3, r1, r3
 5923 02e2 1344     		add	r3, r3, r2
 5924 02e4 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 151


 5925 02e8 0321     		movs	r1, #3
 5926 02ea D154     		strb	r1, [r2, r3]
1326:..\src/command_processing.c ****                 
1327:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 5927              		.loc 1 1327 0
 5928 02ec B7F8A036 		ldrh	r3, [r7, #1696]	@ movhi
 5929 02f0 1A46     		mov	r2, r3	@ movhi
 5930 02f2 5200     		lsls	r2, r2, #1
 5931 02f4 1344     		add	r3, r3, r2
 5932 02f6 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 5933 02fa 39E0     		b	.L370
 5934              	.L373:
1328:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5935              		.loc 1 1328 0
 5936 02fc B7F8A436 		ldrh	r3, [r7, #1700]
 5937 0300 284A     		ldr	r2, .L409+20
 5938 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5939 0304 9BB2     		uxth	r3, r3
 5940 0306 B7F8A226 		ldrh	r2, [r7, #1698]
 5941 030a 9A42     		cmp	r2, r3
 5942 030c 17D1     		bne	.L371
1329:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 5943              		.loc 1 1329 0
 5944 030e B7F89E26 		ldrh	r2, [r7, #1694]
 5945 0312 B7F89436 		ldrh	r3, [r7, #1684]
 5946 0316 1A44     		add	r2, r2, r3
 5947 0318 B7F8A036 		ldrh	r3, [r7, #1696]
 5948 031c 3221     		movs	r1, #50
 5949 031e 01FB03F3 		mul	r3, r1, r3
 5950 0322 1344     		add	r3, r3, r2
 5951 0324 B7F8A426 		ldrh	r2, [r7, #1700]
 5952 0328 1E49     		ldr	r1, .L409+20
 5953 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5954 032c 07F58A72 		add	r2, r7, #276
 5955 0330 D154     		strb	r1, [r2, r3]
1330:..\src/command_processing.c ****                         i++;
 5956              		.loc 1 1330 0
 5957 0332 B7F8A436 		ldrh	r3, [r7, #1700]
 5958 0336 0133     		adds	r3, r3, #1
 5959 0338 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 5960 033c 0EE0     		b	.L372
 5961              	.L371:
1331:..\src/command_processing.c ****                     } 
1332:..\src/command_processing.c ****                     else {
1333:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 5962              		.loc 1 1333 0
 5963 033e B7F89E26 		ldrh	r2, [r7, #1694]
 5964 0342 B7F89436 		ldrh	r3, [r7, #1684]
 5965 0346 1A44     		add	r2, r2, r3
 5966 0348 B7F8A036 		ldrh	r3, [r7, #1696]
 5967 034c 3221     		movs	r1, #50
 5968 034e 01FB03F3 		mul	r3, r1, r3
 5969 0352 1344     		add	r3, r3, r2
 5970 0354 07F58A72 		add	r2, r7, #276
 5971 0358 FF21     		movs	r1, #255
 5972 035a D154     		strb	r1, [r2, r3]
 5973              	.L372:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 152


1334:..\src/command_processing.c ****                     }
1335:..\src/command_processing.c ****                     h++;
 5974              		.loc 1 1335 0 discriminator 2
 5975 035c B7F89E36 		ldrh	r3, [r7, #1694]
 5976 0360 0133     		adds	r3, r3, #1
 5977 0362 A7F89E36 		strh	r3, [r7, #1694]	@ movhi
1327:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5978              		.loc 1 1327 0 discriminator 2
 5979 0366 B7F8A236 		ldrh	r3, [r7, #1698]
 5980 036a 0133     		adds	r3, r3, #1
 5981 036c A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 5982              	.L370:
1327:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5983              		.loc 1 1327 0 is_stmt 0 discriminator 1
 5984 0370 B7F8A216 		ldrh	r1, [r7, #1698]
 5985 0374 B7F8A026 		ldrh	r2, [r7, #1696]
 5986 0378 1346     		mov	r3, r2
 5987 037a 5B00     		lsls	r3, r3, #1
 5988 037c 1344     		add	r3, r3, r2
 5989 037e 0233     		adds	r3, r3, #2
 5990 0380 9942     		cmp	r1, r3
 5991 0382 BBDD     		ble	.L373
1336:..\src/command_processing.c ****                 }
1337:..\src/command_processing.c **** 
1338:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1339:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 5992              		.loc 1 1339 0 is_stmt 1
 5993 0384 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 5994 0388 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 5995 038c 2BE0     		b	.L374
 5996              	.L410:
 5997 038e 00BF     		.align	2
 5998              	.L409:
 5999 0390 00000000 		.word	N_IMU_Connected
 6000 0394 F8080000 		.word	.LC78
 6001 0398 14090000 		.word	.LC79
 6002 039c 00000000 		.word	.LC52
 6003 03a0 90080000 		.word	.LC80
 6004 03a4 00000000 		.word	IMU_connected
 6005              	.L375:
1340:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 6006              		.loc 1 1340 0 discriminator 3
 6007 03a8 B7F89436 		ldrh	r3, [r7, #1684]
 6008 03ac DA1D     		adds	r2, r3, #7
 6009 03ae B7F8A036 		ldrh	r3, [r7, #1696]
 6010 03b2 3221     		movs	r1, #50
 6011 03b4 01FB03F3 		mul	r3, r1, r3
 6012 03b8 1A44     		add	r2, r2, r3
 6013 03ba 97F89136 		ldrb	r3, [r7, #1681]	@ zero_extendqisi2
 6014 03be 1A44     		add	r2, r2, r3
 6015 03c0 B7F8A236 		ldrh	r3, [r7, #1698]
 6016 03c4 D31A     		subs	r3, r2, r3
 6017 03c6 97F89116 		ldrb	r1, [r7, #1681]	@ zero_extendqisi2
 6018 03ca B7F8A226 		ldrh	r2, [r7, #1698]
 6019 03ce 8A1A     		subs	r2, r1, r2
 6020 03d0 07F1EC01 		add	r1, r7, #236
 6021 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 153


 6022 03d6 07F58A72 		add	r2, r7, #276
 6023 03da D154     		strb	r1, [r2, r3]
1339:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 6024              		.loc 1 1339 0 discriminator 3
 6025 03dc B7F8A236 		ldrh	r3, [r7, #1698]
 6026 03e0 013B     		subs	r3, r3, #1
 6027 03e2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6028              	.L374:
1339:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 6029              		.loc 1 1339 0 is_stmt 0 discriminator 1
 6030 03e6 B7F8A236 		ldrh	r3, [r7, #1698]
 6031 03ea 002B     		cmp	r3, #0
 6032 03ec DCD1     		bne	.L375
1320:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 6033              		.loc 1 1320 0 is_stmt 1 discriminator 2
 6034 03ee B7F8A036 		ldrh	r3, [r7, #1696]
 6035 03f2 0133     		adds	r3, r3, #1
 6036 03f4 A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 6037              	.L369:
1320:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 6038              		.loc 1 1320 0 is_stmt 0 discriminator 1
 6039 03f8 B7F8A026 		ldrh	r2, [r7, #1696]
 6040 03fc B7F89A36 		ldrh	r3, [r7, #1690]
 6041 0400 9A42     		cmp	r2, r3
 6042 0402 FFF446AF 		bcc	.L376
1341:..\src/command_processing.c ****             }
1342:..\src/command_processing.c ****             
1343:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1344:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 6043              		.loc 1 1344 0 is_stmt 1
 6044 0406 B7F89A36 		ldrh	r3, [r7, #1690]	@ movhi
 6045 040a 1A46     		mov	r2, r3	@ movhi
 6046 040c 9200     		lsls	r2, r2, #2
 6047 040e 1344     		add	r3, r3, r2
 6048 0410 1A46     		mov	r2, r3	@ movhi
 6049 0412 9100     		lsls	r1, r2, #2
 6050 0414 1A46     		mov	r2, r3	@ movhi
 6051 0416 0B46     		mov	r3, r1	@ movhi
 6052 0418 1344     		add	r3, r3, r2
 6053 041a 5B00     		lsls	r3, r3, #1
 6054 041c 9AB2     		uxth	r2, r3
 6055 041e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6056 0422 1344     		add	r3, r3, r2
 6057 0424 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1345:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 6058              		.loc 1 1345 0
 6059 0428 0023     		movs	r3, #0
 6060 042a A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 6061 042e 1FE1     		b	.L377
 6062              	.L384:
1346:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 6063              		.loc 1 1346 0
 6064 0430 B7F89436 		ldrh	r3, [r7, #1684]
 6065 0434 9A1C     		adds	r2, r3, #2
 6066 0436 B7F8A036 		ldrh	r3, [r7, #1696]
 6067 043a 3221     		movs	r1, #50
 6068 043c 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 154


 6069 0440 1344     		add	r3, r3, r2
 6070 0442 07F58A72 		add	r2, r7, #276
 6071 0446 0221     		movs	r1, #2
 6072 0448 D154     		strb	r1, [r2, r3]
1347:..\src/command_processing.c ****                 
1348:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 6073              		.loc 1 1348 0
 6074 044a B7F89436 		ldrh	r3, [r7, #1684]
 6075 044e DA1C     		adds	r2, r3, #3
 6076 0450 B7F8A036 		ldrh	r3, [r7, #1696]
 6077 0454 3221     		movs	r1, #50
 6078 0456 01FB03F3 		mul	r3, r1, r3
 6079 045a 1344     		add	r3, r3, r2
 6080 045c 07F58A72 		add	r2, r7, #276
 6081 0460 0321     		movs	r1, #3
 6082 0462 D154     		strb	r1, [r2, r3]
1349:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 6083              		.loc 1 1349 0
 6084 0464 B7F89436 		ldrh	r3, [r7, #1684]
 6085 0468 1A1D     		adds	r2, r3, #4
 6086 046a B7F8A036 		ldrh	r3, [r7, #1696]
 6087 046e 3221     		movs	r1, #50
 6088 0470 01FB03F3 		mul	r3, r1, r3
 6089 0474 1A44     		add	r2, r2, r3
 6090 0476 B7F8A036 		ldrh	r3, [r7, #1696]
 6091 047a 5B00     		lsls	r3, r3, #1
 6092 047c B249     		ldr	r1, .L411
 6093 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6094 0480 1846     		mov	r0, r3
 6095 0482 B249     		ldr	r1, .L411+4
 6096 0484 0346     		mov	r3, r0
 6097 0486 5B00     		lsls	r3, r3, #1
 6098 0488 0344     		add	r3, r3, r0
 6099 048a 0B44     		add	r3, r3, r1
 6100 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6101 048e 07F58A73 		add	r3, r7, #276
 6102 0492 9954     		strb	r1, [r3, r2]
1350:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 6103              		.loc 1 1350 0
 6104 0494 B7F89436 		ldrh	r3, [r7, #1684]
 6105 0498 5A1D     		adds	r2, r3, #5
 6106 049a B7F8A036 		ldrh	r3, [r7, #1696]
 6107 049e 3221     		movs	r1, #50
 6108 04a0 01FB03F3 		mul	r3, r1, r3
 6109 04a4 1A44     		add	r2, r2, r3
 6110 04a6 B7F8A036 		ldrh	r3, [r7, #1696]
 6111 04aa 5B00     		lsls	r3, r3, #1
 6112 04ac A649     		ldr	r1, .L411
 6113 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6114 04b0 1846     		mov	r0, r3
 6115 04b2 A649     		ldr	r1, .L411+4
 6116 04b4 0346     		mov	r3, r0
 6117 04b6 5B00     		lsls	r3, r3, #1
 6118 04b8 0344     		add	r3, r3, r0
 6119 04ba 0B44     		add	r3, r3, r1
 6120 04bc 0133     		adds	r3, r3, #1
 6121 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 155


 6122 04c0 07F58A73 		add	r3, r7, #276
 6123 04c4 9954     		strb	r1, [r3, r2]
1351:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 6124              		.loc 1 1351 0
 6125 04c6 B7F89436 		ldrh	r3, [r7, #1684]
 6126 04ca 9A1D     		adds	r2, r3, #6
 6127 04cc B7F8A036 		ldrh	r3, [r7, #1696]
 6128 04d0 3221     		movs	r1, #50
 6129 04d2 01FB03F3 		mul	r3, r1, r3
 6130 04d6 1A44     		add	r2, r2, r3
 6131 04d8 B7F8A036 		ldrh	r3, [r7, #1696]
 6132 04dc 5B00     		lsls	r3, r3, #1
 6133 04de 9A49     		ldr	r1, .L411
 6134 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6135 04e2 1846     		mov	r0, r3
 6136 04e4 9949     		ldr	r1, .L411+4
 6137 04e6 0346     		mov	r3, r0
 6138 04e8 5B00     		lsls	r3, r3, #1
 6139 04ea 0344     		add	r3, r3, r0
 6140 04ec 0B44     		add	r3, r3, r1
 6141 04ee 0233     		adds	r3, r3, #2
 6142 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6143 04f2 07F58A73 		add	r3, r7, #276
 6144 04f6 9954     		strb	r1, [r3, r2]
1352:..\src/command_processing.c ****                 
1353:..\src/command_processing.c ****                 // check if there is a second value
1354:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 6145              		.loc 1 1354 0
 6146 04f8 954B     		ldr	r3, .L411+8
 6147 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6148 04fc 1A46     		mov	r2, r3
 6149 04fe B7F8A036 		ldrh	r3, [r7, #1696]
 6150 0502 0133     		adds	r3, r3, #1
 6151 0504 5B00     		lsls	r3, r3, #1
 6152 0506 9A42     		cmp	r2, r3
 6153 0508 28DA     		bge	.L378
1355:..\src/command_processing.c ****                     // there is only one value
1356:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 6154              		.loc 1 1356 0
 6155 050a 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 6156 050e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6157 0512 1EE0     		b	.L379
 6158              	.L380:
1357:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 6159              		.loc 1 1357 0 discriminator 3
 6160 0514 B7F89436 		ldrh	r3, [r7, #1684]
 6161 0518 DA1D     		adds	r2, r3, #7
 6162 051a B7F8A036 		ldrh	r3, [r7, #1696]
 6163 051e 3221     		movs	r1, #50
 6164 0520 01FB03F3 		mul	r3, r1, r3
 6165 0524 1A44     		add	r2, r2, r3
 6166 0526 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 6167 052a 1A44     		add	r2, r2, r3
 6168 052c B7F8A236 		ldrh	r3, [r7, #1698]
 6169 0530 D31A     		subs	r3, r2, r3
 6170 0532 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 6171 0536 B7F8A226 		ldrh	r2, [r7, #1698]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 156


 6172 053a 8A1A     		subs	r2, r1, r2
 6173 053c 07F1D801 		add	r1, r7, #216
 6174 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6175 0542 07F58A72 		add	r2, r7, #276
 6176 0546 D154     		strb	r1, [r2, r3]
1356:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 6177              		.loc 1 1356 0 discriminator 3
 6178 0548 B7F8A236 		ldrh	r3, [r7, #1698]
 6179 054c 013B     		subs	r3, r3, #1
 6180 054e A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6181              	.L379:
1356:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 6182              		.loc 1 1356 0 is_stmt 0 discriminator 1
 6183 0552 B7F8A236 		ldrh	r3, [r7, #1698]
 6184 0556 002B     		cmp	r3, #0
 6185 0558 DCD1     		bne	.L380
 6186 055a 84E0     		b	.L381
 6187              	.L378:
1358:..\src/command_processing.c ****                 }
1359:..\src/command_processing.c ****                 else {
1360:..\src/command_processing.c ****                     // fill the second value
1361:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 6188              		.loc 1 1361 0 is_stmt 1
 6189 055c B7F89436 		ldrh	r3, [r7, #1684]
 6190 0560 DA1C     		adds	r2, r3, #3
 6191 0562 B7F8A036 		ldrh	r3, [r7, #1696]
 6192 0566 3221     		movs	r1, #50
 6193 0568 01FB03F3 		mul	r3, r1, r3
 6194 056c 1344     		add	r3, r3, r2
 6195 056e 07F58A72 		add	r2, r7, #276
 6196 0572 0621     		movs	r1, #6
 6197 0574 D154     		strb	r1, [r2, r3]
1362:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 6198              		.loc 1 1362 0
 6199 0576 B7F89436 		ldrh	r3, [r7, #1684]
 6200 057a DA1D     		adds	r2, r3, #7
 6201 057c B7F8A036 		ldrh	r3, [r7, #1696]
 6202 0580 3221     		movs	r1, #50
 6203 0582 01FB03F3 		mul	r3, r1, r3
 6204 0586 1A44     		add	r2, r2, r3
 6205 0588 B7F8A036 		ldrh	r3, [r7, #1696]
 6206 058c 5B00     		lsls	r3, r3, #1
 6207 058e 0133     		adds	r3, r3, #1
 6208 0590 6D49     		ldr	r1, .L411
 6209 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6210 0594 1846     		mov	r0, r3
 6211 0596 6D49     		ldr	r1, .L411+4
 6212 0598 0346     		mov	r3, r0
 6213 059a 5B00     		lsls	r3, r3, #1
 6214 059c 0344     		add	r3, r3, r0
 6215 059e 0B44     		add	r3, r3, r1
 6216 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6217 05a2 07F58A73 		add	r3, r7, #276
 6218 05a6 9954     		strb	r1, [r3, r2]
1363:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 6219              		.loc 1 1363 0
 6220 05a8 B7F89436 		ldrh	r3, [r7, #1684]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 157


 6221 05ac 03F10802 		add	r2, r3, #8
 6222 05b0 B7F8A036 		ldrh	r3, [r7, #1696]
 6223 05b4 3221     		movs	r1, #50
 6224 05b6 01FB03F3 		mul	r3, r1, r3
 6225 05ba 1A44     		add	r2, r2, r3
 6226 05bc B7F8A036 		ldrh	r3, [r7, #1696]
 6227 05c0 5B00     		lsls	r3, r3, #1
 6228 05c2 0133     		adds	r3, r3, #1
 6229 05c4 6049     		ldr	r1, .L411
 6230 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6231 05c8 1846     		mov	r0, r3
 6232 05ca 6049     		ldr	r1, .L411+4
 6233 05cc 0346     		mov	r3, r0
 6234 05ce 5B00     		lsls	r3, r3, #1
 6235 05d0 0344     		add	r3, r3, r0
 6236 05d2 0B44     		add	r3, r3, r1
 6237 05d4 0133     		adds	r3, r3, #1
 6238 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6239 05d8 07F58A73 		add	r3, r7, #276
 6240 05dc 9954     		strb	r1, [r3, r2]
1364:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 6241              		.loc 1 1364 0
 6242 05de B7F89436 		ldrh	r3, [r7, #1684]
 6243 05e2 03F10902 		add	r2, r3, #9
 6244 05e6 B7F8A036 		ldrh	r3, [r7, #1696]
 6245 05ea 3221     		movs	r1, #50
 6246 05ec 01FB03F3 		mul	r3, r1, r3
 6247 05f0 1A44     		add	r2, r2, r3
 6248 05f2 B7F8A036 		ldrh	r3, [r7, #1696]
 6249 05f6 5B00     		lsls	r3, r3, #1
 6250 05f8 0133     		adds	r3, r3, #1
 6251 05fa 5349     		ldr	r1, .L411
 6252 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6253 05fe 1846     		mov	r0, r3
 6254 0600 5249     		ldr	r1, .L411+4
 6255 0602 0346     		mov	r3, r0
 6256 0604 5B00     		lsls	r3, r3, #1
 6257 0606 0344     		add	r3, r3, r0
 6258 0608 0B44     		add	r3, r3, r1
 6259 060a 0233     		adds	r3, r3, #2
 6260 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6261 060e 07F58A73 		add	r3, r7, #276
 6262 0612 9954     		strb	r1, [r3, r2]
1365:..\src/command_processing.c ****                 
1366:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 6263              		.loc 1 1366 0
 6264 0614 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 6265 0618 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6266 061c 1FE0     		b	.L382
 6267              	.L383:
1367:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 6268              		.loc 1 1367 0 discriminator 3
 6269 061e B7F89436 		ldrh	r3, [r7, #1684]
 6270 0622 03F10A02 		add	r2, r3, #10
 6271 0626 B7F8A036 		ldrh	r3, [r7, #1696]
 6272 062a 3221     		movs	r1, #50
 6273 062c 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 158


 6274 0630 1A44     		add	r2, r2, r3
 6275 0632 97F89036 		ldrb	r3, [r7, #1680]	@ zero_extendqisi2
 6276 0636 1A44     		add	r2, r2, r3
 6277 0638 B7F8A236 		ldrh	r3, [r7, #1698]
 6278 063c D31A     		subs	r3, r2, r3
 6279 063e 97F89016 		ldrb	r1, [r7, #1680]	@ zero_extendqisi2
 6280 0642 B7F8A226 		ldrh	r2, [r7, #1698]
 6281 0646 8A1A     		subs	r2, r1, r2
 6282 0648 07F1D801 		add	r1, r7, #216
 6283 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6284 064e 07F58A72 		add	r2, r7, #276
 6285 0652 D154     		strb	r1, [r2, r3]
1366:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 6286              		.loc 1 1366 0 discriminator 3
 6287 0654 B7F8A236 		ldrh	r3, [r7, #1698]
 6288 0658 013B     		subs	r3, r3, #1
 6289 065a A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6290              	.L382:
1366:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 6291              		.loc 1 1366 0 is_stmt 0 discriminator 1
 6292 065e B7F8A236 		ldrh	r3, [r7, #1698]
 6293 0662 002B     		cmp	r3, #0
 6294 0664 DBD1     		bne	.L383
 6295              	.L381:
1345:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 6296              		.loc 1 1345 0 is_stmt 1 discriminator 2
 6297 0666 B7F8A036 		ldrh	r3, [r7, #1696]
 6298 066a 0133     		adds	r3, r3, #1
 6299 066c A7F8A036 		strh	r3, [r7, #1696]	@ movhi
 6300              	.L377:
1345:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 6301              		.loc 1 1345 0 is_stmt 0 discriminator 1
 6302 0670 B7F8A026 		ldrh	r2, [r7, #1696]
 6303 0674 B7F8A636 		ldrh	r3, [r7, #1702]
 6304 0678 9A42     		cmp	r2, r3
 6305 067a FFF4D9AE 		bcc	.L384
1368:..\src/command_processing.c ****                 }
1369:..\src/command_processing.c ****             }
1370:..\src/command_processing.c ****             
1371:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1372:..\src/command_processing.c ****             
1373:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 6306              		.loc 1 1373 0 is_stmt 1
 6307 067e B7F8A636 		ldrh	r3, [r7, #1702]	@ movhi
 6308 0682 1A46     		mov	r2, r3	@ movhi
 6309 0684 9200     		lsls	r2, r2, #2
 6310 0686 1344     		add	r3, r3, r2
 6311 0688 1A46     		mov	r2, r3	@ movhi
 6312 068a 9100     		lsls	r1, r2, #2
 6313 068c 1A46     		mov	r2, r3	@ movhi
 6314 068e 0B46     		mov	r3, r1	@ movhi
 6315 0690 1344     		add	r3, r3, r2
 6316 0692 5B00     		lsls	r3, r3, #1
 6317 0694 9AB2     		uxth	r2, r3
 6318 0696 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6319 069a 1344     		add	r3, r3, r2
 6320 069c A7F89436 		strh	r3, [r7, #1684]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 159


1374:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 6321              		.loc 1 1374 0
 6322 06a0 B7F89836 		ldrh	r3, [r7, #1688]
 6323 06a4 5A1E     		subs	r2, r3, #1
 6324 06a6 07F1C803 		add	r3, r7, #200
 6325 06aa 2A49     		ldr	r1, .L411+12
 6326 06ac 1846     		mov	r0, r3
 6327 06ae FFF7FEFF 		bl	sprintf
1375:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 6328              		.loc 1 1375 0
 6329 06b2 07F1C803 		add	r3, r7, #200
 6330 06b6 1846     		mov	r0, r3
 6331 06b8 FFF7FEFF 		bl	strlen
 6332 06bc 0346     		mov	r3, r0
 6333 06be 87F89336 		strb	r3, [r7, #1683]
1376:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 6334              		.loc 1 1376 0
 6335 06c2 B7F89436 		ldrh	r3, [r7, #1684]
 6336 06c6 0233     		adds	r3, r3, #2
 6337 06c8 07F58A72 		add	r2, r7, #276
 6338 06cc 0221     		movs	r1, #2
 6339 06ce D154     		strb	r1, [r2, r3]
1377:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 6340              		.loc 1 1377 0
 6341 06d0 B7F89436 		ldrh	r3, [r7, #1684]
 6342 06d4 0333     		adds	r3, r3, #3
 6343 06d6 07F58A72 		add	r2, r7, #276
 6344 06da 0121     		movs	r1, #1
 6345 06dc D154     		strb	r1, [r2, r3]
1378:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.id;
 6346              		.loc 1 1378 0
 6347 06de B7F89436 		ldrh	r3, [r7, #1684]
 6348 06e2 0433     		adds	r3, r3, #4
 6349 06e4 1C4A     		ldr	r2, .L411+16
 6350 06e6 92F8A110 		ldrb	r1, [r2, #161]	@ zero_extendqisi2
 6351 06ea 07F58A72 		add	r2, r7, #276
 6352 06ee D154     		strb	r1, [r2, r3]
1379:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 6353              		.loc 1 1379 0
 6354 06f0 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 6355 06f4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6356 06f8 18E0     		b	.L385
 6357              	.L386:
1380:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 6358              		.loc 1 1380 0 discriminator 3
 6359 06fa B7F89436 		ldrh	r3, [r7, #1684]
 6360 06fe 5A1D     		adds	r2, r3, #5
 6361 0700 97F89336 		ldrb	r3, [r7, #1683]	@ zero_extendqisi2
 6362 0704 1A44     		add	r2, r2, r3
 6363 0706 B7F8A436 		ldrh	r3, [r7, #1700]
 6364 070a D31A     		subs	r3, r2, r3
 6365 070c 97F89316 		ldrb	r1, [r7, #1683]	@ zero_extendqisi2
 6366 0710 B7F8A426 		ldrh	r2, [r7, #1700]
 6367 0714 8A1A     		subs	r2, r1, r2
 6368 0716 07F1C801 		add	r1, r7, #200
 6369 071a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6370 071c 07F58A72 		add	r2, r7, #276
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 160


 6371 0720 D154     		strb	r1, [r2, r3]
1379:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 6372              		.loc 1 1379 0 discriminator 3
 6373 0722 B7F8A436 		ldrh	r3, [r7, #1700]
 6374 0726 013B     		subs	r3, r3, #1
 6375 0728 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6376              	.L385:
1379:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 6377              		.loc 1 1379 0 is_stmt 0 discriminator 1
 6378 072c B7F8A436 		ldrh	r3, [r7, #1700]
 6379 0730 002B     		cmp	r3, #0
 6380 0732 E2D1     		bne	.L386
1381:..\src/command_processing.c ****                 
1382:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1383:..\src/command_processing.c ****             
1384:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 6381              		.loc 1 1384 0 is_stmt 1
 6382 0734 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6383 0738 3233     		adds	r3, r3, #50
 6384 073a A7F89436 		strh	r3, [r7, #1684]	@ movhi
1385:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 6385              		.loc 1 1385 0
 6386 073e 0023     		movs	r3, #0
 6387 0740 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6388 0744 38E1     		b	.L387
 6389              	.L412:
 6390 0746 00BF     		.align	2
 6391              	.L411:
 6392 0748 00000000 		.word	IMU_connected
 6393 074c 00000000 		.word	MagCal
 6394 0750 00000000 		.word	N_IMU_Connected
 6395 0754 9C080000 		.word	.LC81
 6396 0758 00000000 		.word	c_mem
 6397              	.L390:
1386:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 6398              		.loc 1 1386 0
 6399 075c B7F89826 		ldrh	r2, [r7, #1688]
 6400 0760 B7F8A436 		ldrh	r3, [r7, #1700]
 6401 0764 D118     		adds	r1, r2, r3
 6402 0766 B7F8A436 		ldrh	r3, [r7, #1700]
 6403 076a D54A     		ldr	r2, .L413
 6404 076c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6405 076e 07F19C00 		add	r0, r7, #156
 6406 0772 0A46     		mov	r2, r1
 6407 0774 D349     		ldr	r1, .L413+4
 6408 0776 FFF7FEFF 		bl	sprintf
1387:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 6409              		.loc 1 1387 0
 6410 077a 07F19C03 		add	r3, r7, #156
 6411 077e 1846     		mov	r0, r3
 6412 0780 FFF7FEFF 		bl	strlen
 6413 0784 0346     		mov	r3, r0
 6414 0786 87F88F36 		strb	r3, [r7, #1679]
1388:..\src/command_processing.c ****             
1389:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 6415              		.loc 1 1389 0
 6416 078a B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 161


 6417 078e 1A46     		mov	r2, r3	@ movhi
 6418 0790 9200     		lsls	r2, r2, #2
 6419 0792 1344     		add	r3, r3, r2
 6420 0794 1A46     		mov	r2, r3	@ movhi
 6421 0796 9100     		lsls	r1, r2, #2
 6422 0798 1A46     		mov	r2, r3	@ movhi
 6423 079a 0B46     		mov	r3, r1	@ movhi
 6424 079c 1344     		add	r3, r3, r2
 6425 079e 5B00     		lsls	r3, r3, #1
 6426 07a0 9AB2     		uxth	r2, r3
 6427 07a2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6428 07a6 1344     		add	r3, r3, r2
 6429 07a8 9BB2     		uxth	r3, r3
 6430 07aa 0233     		adds	r3, r3, #2
 6431 07ac 9BB2     		uxth	r3, r3
 6432 07ae 1A46     		mov	r2, r3
 6433 07b0 07F58A73 		add	r3, r7, #276
 6434 07b4 0221     		movs	r1, #2
 6435 07b6 9954     		strb	r1, [r3, r2]
1390:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 6436              		.loc 1 1390 0
 6437 07b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6438 07bc 1A46     		mov	r2, r3	@ movhi
 6439 07be 9200     		lsls	r2, r2, #2
 6440 07c0 1344     		add	r3, r3, r2
 6441 07c2 1A46     		mov	r2, r3	@ movhi
 6442 07c4 9100     		lsls	r1, r2, #2
 6443 07c6 1A46     		mov	r2, r3	@ movhi
 6444 07c8 0B46     		mov	r3, r1	@ movhi
 6445 07ca 1344     		add	r3, r3, r2
 6446 07cc 5B00     		lsls	r3, r3, #1
 6447 07ce 9AB2     		uxth	r2, r3
 6448 07d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6449 07d4 1344     		add	r3, r3, r2
 6450 07d6 9BB2     		uxth	r3, r3
 6451 07d8 0333     		adds	r3, r3, #3
 6452 07da 9BB2     		uxth	r3, r3
 6453 07dc 1A46     		mov	r2, r3
 6454 07de 07F58A73 		add	r3, r7, #276
 6455 07e2 0521     		movs	r1, #5
 6456 07e4 9954     		strb	r1, [r3, r2]
1391:..\src/command_processing.c ****                 
1392:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6457              		.loc 1 1392 0
 6458 07e6 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6459 07ea 1A46     		mov	r2, r3	@ movhi
 6460 07ec 9200     		lsls	r2, r2, #2
 6461 07ee 1344     		add	r3, r3, r2
 6462 07f0 1A46     		mov	r2, r3	@ movhi
 6463 07f2 9100     		lsls	r1, r2, #2
 6464 07f4 1A46     		mov	r2, r3	@ movhi
 6465 07f6 0B46     		mov	r3, r1	@ movhi
 6466 07f8 1344     		add	r3, r3, r2
 6467 07fa 5B00     		lsls	r3, r3, #1
 6468 07fc 9AB2     		uxth	r2, r3
 6469 07fe B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6470 0802 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 162


 6471 0804 9BB2     		uxth	r3, r3
 6472 0806 0433     		adds	r3, r3, #4
 6473 0808 9BB2     		uxth	r3, r3
 6474 080a 1846     		mov	r0, r3
 6475 080c B7F8A436 		ldrh	r3, [r7, #1700]
 6476 0810 AB4A     		ldr	r2, .L413
 6477 0812 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6478 0814 1946     		mov	r1, r3
 6479 0816 AC4A     		ldr	r2, .L413+8
 6480 0818 0B46     		mov	r3, r1
 6481 081a 9B00     		lsls	r3, r3, #2
 6482 081c 0B44     		add	r3, r3, r1
 6483 081e 1344     		add	r3, r3, r2
 6484 0820 03F25113 		addw	r3, r3, #337
 6485 0824 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6486 0826 07F58A73 		add	r3, r7, #276
 6487 082a 1A54     		strb	r2, [r3, r0]
1393:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6488              		.loc 1 1393 0
 6489 082c B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6490 0830 1A46     		mov	r2, r3	@ movhi
 6491 0832 9200     		lsls	r2, r2, #2
 6492 0834 1344     		add	r3, r3, r2
 6493 0836 1A46     		mov	r2, r3	@ movhi
 6494 0838 9100     		lsls	r1, r2, #2
 6495 083a 1A46     		mov	r2, r3	@ movhi
 6496 083c 0B46     		mov	r3, r1	@ movhi
 6497 083e 1344     		add	r3, r3, r2
 6498 0840 5B00     		lsls	r3, r3, #1
 6499 0842 9AB2     		uxth	r2, r3
 6500 0844 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6501 0848 1344     		add	r3, r3, r2
 6502 084a 9BB2     		uxth	r3, r3
 6503 084c 0533     		adds	r3, r3, #5
 6504 084e 9BB2     		uxth	r3, r3
 6505 0850 1846     		mov	r0, r3
 6506 0852 B7F8A436 		ldrh	r3, [r7, #1700]
 6507 0856 9A4A     		ldr	r2, .L413
 6508 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6509 085a 1946     		mov	r1, r3
 6510 085c 9A4A     		ldr	r2, .L413+8
 6511 085e 0B46     		mov	r3, r1
 6512 0860 9B00     		lsls	r3, r3, #2
 6513 0862 0B44     		add	r3, r3, r1
 6514 0864 1344     		add	r3, r3, r2
 6515 0866 03F5A973 		add	r3, r3, #338
 6516 086a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6517 086c 07F58A73 		add	r3, r7, #276
 6518 0870 1A54     		strb	r2, [r3, r0]
1394:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6519              		.loc 1 1394 0
 6520 0872 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6521 0876 1A46     		mov	r2, r3	@ movhi
 6522 0878 9200     		lsls	r2, r2, #2
 6523 087a 1344     		add	r3, r3, r2
 6524 087c 1A46     		mov	r2, r3	@ movhi
 6525 087e 9100     		lsls	r1, r2, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 163


 6526 0880 1A46     		mov	r2, r3	@ movhi
 6527 0882 0B46     		mov	r3, r1	@ movhi
 6528 0884 1344     		add	r3, r3, r2
 6529 0886 5B00     		lsls	r3, r3, #1
 6530 0888 9AB2     		uxth	r2, r3
 6531 088a B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6532 088e 1344     		add	r3, r3, r2
 6533 0890 9BB2     		uxth	r3, r3
 6534 0892 0633     		adds	r3, r3, #6
 6535 0894 9BB2     		uxth	r3, r3
 6536 0896 1846     		mov	r0, r3
 6537 0898 B7F8A436 		ldrh	r3, [r7, #1700]
 6538 089c 884A     		ldr	r2, .L413
 6539 089e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6540 08a0 1946     		mov	r1, r3
 6541 08a2 894A     		ldr	r2, .L413+8
 6542 08a4 0B46     		mov	r3, r1
 6543 08a6 9B00     		lsls	r3, r3, #2
 6544 08a8 0B44     		add	r3, r3, r1
 6545 08aa 1344     		add	r3, r3, r2
 6546 08ac 03F25313 		addw	r3, r3, #339
 6547 08b0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6548 08b2 07F58A73 		add	r3, r7, #276
 6549 08b6 1A54     		strb	r2, [r3, r0]
1395:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6550              		.loc 1 1395 0
 6551 08b8 B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6552 08bc 1A46     		mov	r2, r3	@ movhi
 6553 08be 9200     		lsls	r2, r2, #2
 6554 08c0 1344     		add	r3, r3, r2
 6555 08c2 1A46     		mov	r2, r3	@ movhi
 6556 08c4 9100     		lsls	r1, r2, #2
 6557 08c6 1A46     		mov	r2, r3	@ movhi
 6558 08c8 0B46     		mov	r3, r1	@ movhi
 6559 08ca 1344     		add	r3, r3, r2
 6560 08cc 5B00     		lsls	r3, r3, #1
 6561 08ce 9AB2     		uxth	r2, r3
 6562 08d0 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6563 08d4 1344     		add	r3, r3, r2
 6564 08d6 9BB2     		uxth	r3, r3
 6565 08d8 0733     		adds	r3, r3, #7
 6566 08da 9BB2     		uxth	r3, r3
 6567 08dc 1846     		mov	r0, r3
 6568 08de B7F8A436 		ldrh	r3, [r7, #1700]
 6569 08e2 774A     		ldr	r2, .L413
 6570 08e4 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6571 08e6 1946     		mov	r1, r3
 6572 08e8 774A     		ldr	r2, .L413+8
 6573 08ea 0B46     		mov	r3, r1
 6574 08ec 9B00     		lsls	r3, r3, #2
 6575 08ee 0B44     		add	r3, r3, r1
 6576 08f0 1344     		add	r3, r3, r2
 6577 08f2 03F5AA73 		add	r3, r3, #340
 6578 08f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6579 08f8 07F58A73 		add	r3, r7, #276
 6580 08fc 1A54     		strb	r2, [r3, r0]
1396:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 164


 6581              		.loc 1 1396 0
 6582 08fe B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6583 0902 1A46     		mov	r2, r3	@ movhi
 6584 0904 9200     		lsls	r2, r2, #2
 6585 0906 1344     		add	r3, r3, r2
 6586 0908 1A46     		mov	r2, r3	@ movhi
 6587 090a 9100     		lsls	r1, r2, #2
 6588 090c 1A46     		mov	r2, r3	@ movhi
 6589 090e 0B46     		mov	r3, r1	@ movhi
 6590 0910 1344     		add	r3, r3, r2
 6591 0912 5B00     		lsls	r3, r3, #1
 6592 0914 9AB2     		uxth	r2, r3
 6593 0916 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6594 091a 1344     		add	r3, r3, r2
 6595 091c 9BB2     		uxth	r3, r3
 6596 091e 0833     		adds	r3, r3, #8
 6597 0920 9BB2     		uxth	r3, r3
 6598 0922 1846     		mov	r0, r3
 6599 0924 B7F8A436 		ldrh	r3, [r7, #1700]
 6600 0928 654A     		ldr	r2, .L413
 6601 092a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6602 092c 1946     		mov	r1, r3
 6603 092e 664A     		ldr	r2, .L413+8
 6604 0930 0B46     		mov	r3, r1
 6605 0932 9B00     		lsls	r3, r3, #2
 6606 0934 0B44     		add	r3, r3, r1
 6607 0936 1344     		add	r3, r3, r2
 6608 0938 03F25513 		addw	r3, r3, #341
 6609 093c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6610 093e 07F58A73 		add	r3, r7, #276
 6611 0942 1A54     		strb	r2, [r3, r0]
1397:..\src/command_processing.c **** 
1398:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 6612              		.loc 1 1398 0
 6613 0944 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 6614 0948 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6615 094c 2BE0     		b	.L388
 6616              	.L389:
1399:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6617              		.loc 1 1399 0 discriminator 3
 6618 094e B7F8A436 		ldrh	r3, [r7, #1700]	@ movhi
 6619 0952 1A46     		mov	r2, r3	@ movhi
 6620 0954 9200     		lsls	r2, r2, #2
 6621 0956 1344     		add	r3, r3, r2
 6622 0958 1A46     		mov	r2, r3	@ movhi
 6623 095a 9100     		lsls	r1, r2, #2
 6624 095c 1A46     		mov	r2, r3	@ movhi
 6625 095e 0B46     		mov	r3, r1	@ movhi
 6626 0960 1344     		add	r3, r3, r2
 6627 0962 5B00     		lsls	r3, r3, #1
 6628 0964 9AB2     		uxth	r2, r3
 6629 0966 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6630 096a 1344     		add	r3, r3, r2
 6631 096c 9AB2     		uxth	r2, r3
 6632 096e 97F88F36 		ldrb	r3, [r7, #1679]	@ zero_extendqisi2
 6633 0972 9BB2     		uxth	r3, r3
 6634 0974 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 165


 6635 0976 9AB2     		uxth	r2, r3
 6636 0978 B7F8A236 		ldrh	r3, [r7, #1698]	@ movhi
 6637 097c D31A     		subs	r3, r2, r3
 6638 097e 9BB2     		uxth	r3, r3
 6639 0980 0933     		adds	r3, r3, #9
 6640 0982 9BB2     		uxth	r3, r3
 6641 0984 1946     		mov	r1, r3
 6642 0986 97F88F26 		ldrb	r2, [r7, #1679]	@ zero_extendqisi2
 6643 098a B7F8A236 		ldrh	r3, [r7, #1698]
 6644 098e D31A     		subs	r3, r2, r3
 6645 0990 07F19C02 		add	r2, r7, #156
 6646 0994 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 6647 0996 07F58A73 		add	r3, r7, #276
 6648 099a 5A54     		strb	r2, [r3, r1]
1398:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6649              		.loc 1 1398 0 discriminator 3
 6650 099c B7F8A236 		ldrh	r3, [r7, #1698]
 6651 09a0 013B     		subs	r3, r3, #1
 6652 09a2 A7F8A236 		strh	r3, [r7, #1698]	@ movhi
 6653              	.L388:
1398:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6654              		.loc 1 1398 0 is_stmt 0 discriminator 1
 6655 09a6 B7F8A236 		ldrh	r3, [r7, #1698]
 6656 09aa 002B     		cmp	r3, #0
 6657 09ac CFD1     		bne	.L389
1385:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 6658              		.loc 1 1385 0 is_stmt 1 discriminator 2
 6659 09ae B7F8A436 		ldrh	r3, [r7, #1700]
 6660 09b2 0133     		adds	r3, r3, #1
 6661 09b4 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6662              	.L387:
1385:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 6663              		.loc 1 1385 0 is_stmt 0 discriminator 1
 6664 09b8 444B     		ldr	r3, .L413+12
 6665 09ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6666 09bc 9BB2     		uxth	r3, r3
 6667 09be B7F8A426 		ldrh	r2, [r7, #1700]
 6668 09c2 9A42     		cmp	r2, r3
 6669 09c4 FFF4CAAE 		bcc	.L390
1400:..\src/command_processing.c ****             }  
1401:..\src/command_processing.c ****           
1402:..\src/command_processing.c **** 
1403:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1404:..\src/command_processing.c ****             
1405:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 6670              		.loc 1 1405 0 is_stmt 1
 6671 09c8 404B     		ldr	r3, .L413+12
 6672 09ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6673 09cc 9BB2     		uxth	r3, r3
 6674 09ce 1A46     		mov	r2, r3	@ movhi
 6675 09d0 9200     		lsls	r2, r2, #2
 6676 09d2 1344     		add	r3, r3, r2
 6677 09d4 1A46     		mov	r2, r3	@ movhi
 6678 09d6 9100     		lsls	r1, r2, #2
 6679 09d8 1A46     		mov	r2, r3	@ movhi
 6680 09da 0B46     		mov	r3, r1	@ movhi
 6681 09dc 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 166


 6682 09de 5B00     		lsls	r3, r3, #1
 6683 09e0 9AB2     		uxth	r2, r3
 6684 09e2 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6685 09e6 1344     		add	r3, r3, r2
 6686 09e8 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1406:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 6687              		.loc 1 1406 0
 6688 09ec B7F89836 		ldrh	r3, [r7, #1688]
 6689 09f0 364A     		ldr	r2, .L413+12
 6690 09f2 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6691 09f4 1A44     		add	r2, r2, r3
 6692 09f6 07F18003 		add	r3, r7, #128
 6693 09fa 3549     		ldr	r1, .L413+16
 6694 09fc 1846     		mov	r0, r3
 6695 09fe FFF7FEFF 		bl	sprintf
1407:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 6696              		.loc 1 1407 0
 6697 0a02 B7F89436 		ldrh	r3, [r7, #1684]
 6698 0a06 0233     		adds	r3, r3, #2
 6699 0a08 07F58A72 		add	r2, r7, #276
 6700 0a0c 0021     		movs	r1, #0
 6701 0a0e D154     		strb	r1, [r2, r3]
1408:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 6702              		.loc 1 1408 0
 6703 0a10 B7F89436 		ldrh	r3, [r7, #1684]
 6704 0a14 0333     		adds	r3, r3, #3
 6705 0a16 07F58A72 		add	r2, r7, #276
 6706 0a1a 0121     		movs	r1, #1
 6707 0a1c D154     		strb	r1, [r2, r3]
1409:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.SPI_read_delay;
 6708              		.loc 1 1409 0
 6709 0a1e B7F89436 		ldrh	r3, [r7, #1684]
 6710 0a22 0433     		adds	r3, r3, #4
 6711 0a24 284A     		ldr	r2, .L413+8
 6712 0a26 92F85011 		ldrb	r1, [r2, #336]	@ zero_extendqisi2
 6713 0a2a 07F58A72 		add	r2, r7, #276
 6714 0a2e D154     		strb	r1, [r2, r3]
1410:..\src/command_processing.c ****             switch(c_mem.SPI_read_delay) {
 6715              		.loc 1 1410 0
 6716 0a30 254B     		ldr	r3, .L413+8
 6717 0a32 93F85031 		ldrb	r3, [r3, #336]	@ zero_extendqisi2
 6718 0a36 012B     		cmp	r3, #1
 6719 0a38 17D0     		beq	.L392
 6720 0a3a 022B     		cmp	r3, #2
 6721 0a3c 28D0     		beq	.L393
 6722 0a3e 002B     		cmp	r3, #0
 6723 0a40 00D0     		beq	.L394
1411:..\src/command_processing.c ****                 case 0: 
1412:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1413:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1414:..\src/command_processing.c ****                     break;
1415:..\src/command_processing.c ****                 case 1: 
1416:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1417:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1418:..\src/command_processing.c ****                     break;
1419:..\src/command_processing.c ****                 case 2: 
1420:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 167


1421:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1422:..\src/command_processing.c ****                     break;
1423:..\src/command_processing.c ****                 default:
1424:..\src/command_processing.c ****                     break;
 6724              		.loc 1 1424 0
 6725 0a42 38E0     		b	.L395
 6726              	.L394:
1412:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 6727              		.loc 1 1412 0
 6728 0a44 07F18003 		add	r3, r7, #128
 6729 0a48 1846     		mov	r0, r3
 6730 0a4a FFF7FEFF 		bl	strlen
 6731 0a4e 0346     		mov	r3, r0
 6732 0a50 1A46     		mov	r2, r3
 6733 0a52 07F18003 		add	r3, r7, #128
 6734 0a56 1344     		add	r3, r3, r2
 6735 0a58 1E4A     		ldr	r2, .L413+20
 6736 0a5a 1068     		ldr	r0, [r2]	@ unaligned
 6737 0a5c 1860     		str	r0, [r3]	@ unaligned
 6738 0a5e 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6739 0a60 9A80     		strh	r2, [r3, #4]	@ unaligned
1413:..\src/command_processing.c ****                     break;
 6740              		.loc 1 1413 0
 6741 0a62 1A23     		movs	r3, #26
 6742 0a64 87F89D36 		strb	r3, [r7, #1693]
1414:..\src/command_processing.c ****                 case 1: 
 6743              		.loc 1 1414 0
 6744 0a68 25E0     		b	.L395
 6745              	.L392:
1416:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 6746              		.loc 1 1416 0
 6747 0a6a 07F18003 		add	r3, r7, #128
 6748 0a6e 1846     		mov	r0, r3
 6749 0a70 FFF7FEFF 		bl	strlen
 6750 0a74 0346     		mov	r3, r0
 6751 0a76 1A46     		mov	r2, r3
 6752 0a78 07F18003 		add	r3, r7, #128
 6753 0a7c 1344     		add	r3, r3, r2
 6754 0a7e 164A     		ldr	r2, .L413+24
 6755 0a80 1068     		ldr	r0, [r2]	@ unaligned
 6756 0a82 1860     		str	r0, [r3]	@ unaligned
 6757 0a84 1279     		ldrb	r2, [r2, #4]
 6758 0a86 1A71     		strb	r2, [r3, #4]
1417:..\src/command_processing.c ****                     break;
 6759              		.loc 1 1417 0
 6760 0a88 1923     		movs	r3, #25
 6761 0a8a 87F89D36 		strb	r3, [r7, #1693]
1418:..\src/command_processing.c ****                 case 2: 
 6762              		.loc 1 1418 0
 6763 0a8e 12E0     		b	.L395
 6764              	.L393:
1420:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 6765              		.loc 1 1420 0
 6766 0a90 07F18003 		add	r3, r7, #128
 6767 0a94 1846     		mov	r0, r3
 6768 0a96 FFF7FEFF 		bl	strlen
 6769 0a9a 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 168


 6770 0a9c 1A46     		mov	r2, r3
 6771 0a9e 07F18003 		add	r3, r7, #128
 6772 0aa2 1344     		add	r3, r3, r2
 6773 0aa4 0D4A     		ldr	r2, .L413+28
 6774 0aa6 1068     		ldr	r0, [r2]	@ unaligned
 6775 0aa8 1860     		str	r0, [r3]	@ unaligned
 6776 0aaa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6777 0aac 9A80     		strh	r2, [r3, #4]	@ unaligned
1421:..\src/command_processing.c ****                     break;
 6778              		.loc 1 1421 0
 6779 0aae 1A23     		movs	r3, #26
 6780 0ab0 87F89D36 		strb	r3, [r7, #1693]
1422:..\src/command_processing.c ****                 default:
 6781              		.loc 1 1422 0
 6782 0ab4 00BF     		nop
 6783              	.L395:
1425:..\src/command_processing.c ****             }            
1426:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 6784              		.loc 1 1426 0
 6785 0ab6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 6786 0aba A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6787 0abe 28E0     		b	.L396
 6788              	.L414:
 6789              		.align	2
 6790              	.L413:
 6791 0ac0 00000000 		.word	IMU_connected
 6792 0ac4 AC080000 		.word	.LC82
 6793 0ac8 00000000 		.word	c_mem
 6794 0acc 00000000 		.word	N_IMU_Connected
 6795 0ad0 C8080000 		.word	.LC83
 6796 0ad4 E0080000 		.word	.LC84
 6797 0ad8 E8080000 		.word	.LC85
 6798 0adc F0080000 		.word	.LC86
 6799              	.L397:
1427:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6800              		.loc 1 1427 0 discriminator 3
 6801 0ae0 B7F89436 		ldrh	r3, [r7, #1684]
 6802 0ae4 5A1D     		adds	r2, r3, #5
 6803 0ae6 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 6804 0aea 1A44     		add	r2, r2, r3
 6805 0aec B7F8A436 		ldrh	r3, [r7, #1700]
 6806 0af0 D31A     		subs	r3, r2, r3
 6807 0af2 97F89D16 		ldrb	r1, [r7, #1693]	@ zero_extendqisi2
 6808 0af6 B7F8A426 		ldrh	r2, [r7, #1700]
 6809 0afa 8A1A     		subs	r2, r1, r2
 6810 0afc 07F18001 		add	r1, r7, #128
 6811 0b00 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6812 0b02 07F58A72 		add	r2, r7, #276
 6813 0b06 D154     		strb	r1, [r2, r3]
1426:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6814              		.loc 1 1426 0 discriminator 3
 6815 0b08 B7F8A436 		ldrh	r3, [r7, #1700]
 6816 0b0c 013B     		subs	r3, r3, #1
 6817 0b0e A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6818              	.L396:
1426:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6819              		.loc 1 1426 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 169


 6820 0b12 B7F8A436 		ldrh	r3, [r7, #1700]
 6821 0b16 002B     		cmp	r3, #0
 6822 0b18 E2D1     		bne	.L397
1428:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1429:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 6823              		.loc 1 1429 0 is_stmt 1
 6824 0b1a B7F89436 		ldrh	r3, [r7, #1684]
 6825 0b1e 5A1D     		adds	r2, r3, #5
 6826 0b20 97F89D36 		ldrb	r3, [r7, #1693]	@ zero_extendqisi2
 6827 0b24 1344     		add	r3, r3, r2
 6828 0b26 07F58A72 		add	r2, r7, #276
 6829 0b2a 0121     		movs	r1, #1
 6830 0b2c D154     		strb	r1, [r2, r3]
1430:..\src/command_processing.c ****                   
1431:..\src/command_processing.c ****             
1432:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1433:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 6831              		.loc 1 1433 0
 6832 0b2e B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6833 0b32 3233     		adds	r3, r3, #50
 6834 0b34 A7F89436 		strh	r3, [r7, #1684]	@ movhi
1434:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6835              		.loc 1 1434 0
 6836 0b38 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 6837 0b3c A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6838 0b40 1AE0     		b	.L398
 6839              	.L399:
1435:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 6840              		.loc 1 1435 0 discriminator 3
 6841 0b42 B7F89436 		ldrh	r3, [r7, #1684]	@ movhi
 6842 0b46 0233     		adds	r3, r3, #2
 6843 0b48 9BB2     		uxth	r3, r3
 6844 0b4a 1A46     		mov	r2, r3
 6845 0b4c 97F88E36 		ldrb	r3, [r7, #1678]	@ zero_extendqisi2
 6846 0b50 1A44     		add	r2, r2, r3
 6847 0b52 B7F8A436 		ldrh	r3, [r7, #1700]
 6848 0b56 D31A     		subs	r3, r2, r3
 6849 0b58 97F88E16 		ldrb	r1, [r7, #1678]	@ zero_extendqisi2
 6850 0b5c B7F8A426 		ldrh	r2, [r7, #1700]
 6851 0b60 8A1A     		subs	r2, r1, r2
 6852 0b62 07F10801 		add	r1, r7, #8
 6853 0b66 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6854 0b68 07F58A72 		add	r2, r7, #276
 6855 0b6c D154     		strb	r1, [r2, r3]
1434:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6856              		.loc 1 1434 0 discriminator 3
 6857 0b6e B7F8A436 		ldrh	r3, [r7, #1700]
 6858 0b72 013B     		subs	r3, r3, #1
 6859 0b74 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 6860              	.L398:
1434:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6861              		.loc 1 1434 0 is_stmt 0 discriminator 1
 6862 0b78 B7F8A436 		ldrh	r3, [r7, #1700]
 6863 0b7c 002B     		cmp	r3, #0
 6864 0b7e E0D1     		bne	.L399
1436:..\src/command_processing.c **** 
1437:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 170


 6865              		.loc 1 1437 0 is_stmt 1
 6866 0b80 B7F89636 		ldrh	r3, [r7, #1686]
 6867 0b84 5C1E     		subs	r4, r3, #1
 6868 0b86 B7F89636 		ldrh	r3, [r7, #1686]	@ movhi
 6869 0b8a DBB2     		uxtb	r3, r3
 6870 0b8c 013B     		subs	r3, r3, #1
 6871 0b8e DAB2     		uxtb	r2, r3
 6872 0b90 07F58A73 		add	r3, r7, #276
 6873 0b94 1146     		mov	r1, r2
 6874 0b96 1846     		mov	r0, r3
 6875 0b98 FFF7FEFF 		bl	LCRChecksum
 6876 0b9c 0346     		mov	r3, r0
 6877 0b9e 1A46     		mov	r2, r3
 6878 0ba0 07F58A73 		add	r3, r7, #276
 6879 0ba4 1A55     		strb	r2, [r3, r4]
1438:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 6880              		.loc 1 1438 0
 6881 0ba6 B7F89626 		ldrh	r2, [r7, #1686]
 6882 0baa 07F58A73 		add	r3, r7, #276
 6883 0bae 1146     		mov	r1, r2
 6884 0bb0 1846     		mov	r0, r3
 6885 0bb2 FFF7FEFF 		bl	commWrite
1439:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 6886              		.loc 1 1439 0
 6887 0bb6 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1440:..\src/command_processing.c ****         break;
 6888              		.loc 1 1440 0
 6889 0bba 09E1     		b	.L400
 6890              	.L407:
1441:..\src/command_processing.c **** 
1442:..\src/command_processing.c **** //=========================================================     other_params
1443:..\src/command_processing.c ****         default: 
1444:..\src/command_processing.c ****             
1445:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 6891              		.loc 1 1445 0
 6892 0bbc BB1D     		adds	r3, r7, #6
 6893 0bbe 1A88     		ldrh	r2, [r3]
 6894 0bc0 B7F89836 		ldrh	r3, [r7, #1688]
 6895 0bc4 013B     		subs	r3, r3, #1
 6896 0bc6 9A42     		cmp	r2, r3
 6897 0bc8 C0F20181 		blt	.L408
1446:..\src/command_processing.c ****                 break;
1447:..\src/command_processing.c ****             
1448:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 6898              		.loc 1 1448 0
 6899 0bcc BB1D     		adds	r3, r7, #6
 6900 0bce 1A88     		ldrh	r2, [r3]
 6901 0bd0 B7F89836 		ldrh	r3, [r7, #1688]
 6902 0bd4 8149     		ldr	r1, .L415
 6903 0bd6 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6904 0bd8 0B44     		add	r3, r3, r1
 6905 0bda 9A42     		cmp	r2, r3
 6906 0bdc 05D1     		bne	.L402
1449:..\src/command_processing.c ****                 g_mem.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 6907              		.loc 1 1449 0
 6908 0bde 804B     		ldr	r3, .L415+4
 6909 0be0 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 171


 6910 0be2 804B     		ldr	r3, .L415+8
 6911 0be4 83F85021 		strb	r2, [r3, #336]
1450:..\src/command_processing.c ****                 break;
 6912              		.loc 1 1450 0
 6913 0be8 F2E0     		b	.L400
 6914              	.L402:
1451:..\src/command_processing.c ****             }
1452:..\src/command_processing.c ****             
1453:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 6915              		.loc 1 1453 0
 6916 0bea BB1D     		adds	r3, r7, #6
 6917 0bec 1A88     		ldrh	r2, [r3]
 6918 0bee B7F89836 		ldrh	r3, [r7, #1688]
 6919 0bf2 013B     		subs	r3, r3, #1
 6920 0bf4 9A42     		cmp	r2, r3
 6921 0bf6 05D1     		bne	.L403
1454:..\src/command_processing.c ****                 g_mem.id = g_rx.buffer[3];          //ID - uint8
 6922              		.loc 1 1454 0
 6923 0bf8 794B     		ldr	r3, .L415+4
 6924 0bfa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 6925 0bfc 794B     		ldr	r3, .L415+8
 6926 0bfe 83F8A120 		strb	r2, [r3, #161]
1455:..\src/command_processing.c ****             }
1456:..\src/command_processing.c ****             else {
1457:..\src/command_processing.c ****             
1458:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1459:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1460:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1461:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1462:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1463:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1464:..\src/command_processing.c ****                 
1465:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1466:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1467:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1468:..\src/command_processing.c ****                 {
1469:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.IMU_conf[IMU_connected[i]][0] +
1470:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1471:..\src/command_processing.c ****                 }
1472:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1473:..\src/command_processing.c ****             
1474:..\src/command_processing.c ****             }
1475:..\src/command_processing.c ****             
1476:..\src/command_processing.c ****         break;
 6927              		.loc 1 1476 0
 6928 0c02 E5E0     		b	.L400
 6929              	.L403:
1459:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 6930              		.loc 1 1459 0
 6931 0c04 BB1D     		adds	r3, r7, #6
 6932 0c06 1A88     		ldrh	r2, [r3]
 6933 0c08 B7F89836 		ldrh	r3, [r7, #1688]
 6934 0c0c D31A     		subs	r3, r2, r3
 6935 0c0e 764A     		ldr	r2, .L415+12
 6936 0c10 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6937 0c12 1946     		mov	r1, r3
 6938 0c14 724B     		ldr	r3, .L415+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 172


 6939 0c16 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 6940 0c18 724A     		ldr	r2, .L415+8
 6941 0c1a 0B46     		mov	r3, r1
 6942 0c1c 9B00     		lsls	r3, r3, #2
 6943 0c1e 0B44     		add	r3, r3, r1
 6944 0c20 1344     		add	r3, r3, r2
 6945 0c22 03F25113 		addw	r3, r3, #337
 6946 0c26 0246     		mov	r2, r0
 6947 0c28 1A70     		strb	r2, [r3]
1460:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 6948              		.loc 1 1460 0
 6949 0c2a BB1D     		adds	r3, r7, #6
 6950 0c2c 1A88     		ldrh	r2, [r3]
 6951 0c2e B7F89836 		ldrh	r3, [r7, #1688]
 6952 0c32 D31A     		subs	r3, r2, r3
 6953 0c34 6C4A     		ldr	r2, .L415+12
 6954 0c36 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6955 0c38 1946     		mov	r1, r3
 6956 0c3a 694B     		ldr	r3, .L415+4
 6957 0c3c 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 6958 0c3e 694A     		ldr	r2, .L415+8
 6959 0c40 0B46     		mov	r3, r1
 6960 0c42 9B00     		lsls	r3, r3, #2
 6961 0c44 0B44     		add	r3, r3, r1
 6962 0c46 1344     		add	r3, r3, r2
 6963 0c48 03F5A973 		add	r3, r3, #338
 6964 0c4c 0246     		mov	r2, r0
 6965 0c4e 1A70     		strb	r2, [r3]
1461:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 6966              		.loc 1 1461 0
 6967 0c50 BB1D     		adds	r3, r7, #6
 6968 0c52 1A88     		ldrh	r2, [r3]
 6969 0c54 B7F89836 		ldrh	r3, [r7, #1688]
 6970 0c58 D31A     		subs	r3, r2, r3
 6971 0c5a 634A     		ldr	r2, .L415+12
 6972 0c5c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6973 0c5e 1946     		mov	r1, r3
 6974 0c60 5F4B     		ldr	r3, .L415+4
 6975 0c62 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 6976 0c64 5F4A     		ldr	r2, .L415+8
 6977 0c66 0B46     		mov	r3, r1
 6978 0c68 9B00     		lsls	r3, r3, #2
 6979 0c6a 0B44     		add	r3, r3, r1
 6980 0c6c 1344     		add	r3, r3, r2
 6981 0c6e 03F25313 		addw	r3, r3, #339
 6982 0c72 0246     		mov	r2, r0
 6983 0c74 1A70     		strb	r2, [r3]
1462:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 6984              		.loc 1 1462 0
 6985 0c76 BB1D     		adds	r3, r7, #6
 6986 0c78 1A88     		ldrh	r2, [r3]
 6987 0c7a B7F89836 		ldrh	r3, [r7, #1688]
 6988 0c7e D31A     		subs	r3, r2, r3
 6989 0c80 594A     		ldr	r2, .L415+12
 6990 0c82 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6991 0c84 1946     		mov	r1, r3
 6992 0c86 564B     		ldr	r3, .L415+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 173


 6993 0c88 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 6994 0c8a 564A     		ldr	r2, .L415+8
 6995 0c8c 0B46     		mov	r3, r1
 6996 0c8e 9B00     		lsls	r3, r3, #2
 6997 0c90 0B44     		add	r3, r3, r1
 6998 0c92 1344     		add	r3, r3, r2
 6999 0c94 03F5AA73 		add	r3, r3, #340
 7000 0c98 0246     		mov	r2, r0
 7001 0c9a 1A70     		strb	r2, [r3]
1463:..\src/command_processing.c ****                 
 7002              		.loc 1 1463 0
 7003 0c9c BB1D     		adds	r3, r7, #6
 7004 0c9e 1A88     		ldrh	r2, [r3]
 7005 0ca0 B7F89836 		ldrh	r3, [r7, #1688]
 7006 0ca4 D31A     		subs	r3, r2, r3
 7007 0ca6 504A     		ldr	r2, .L415+12
 7008 0ca8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7009 0caa 1946     		mov	r1, r3
 7010 0cac 4C4B     		ldr	r3, .L415+4
 7011 0cae D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 7012 0cb0 4C4A     		ldr	r2, .L415+8
 7013 0cb2 0B46     		mov	r3, r1
 7014 0cb4 9B00     		lsls	r3, r3, #2
 7015 0cb6 0B44     		add	r3, r3, r1
 7016 0cb8 1344     		add	r3, r3, r2
 7017 0cba 03F25513 		addw	r3, r3, #341
 7018 0cbe 0246     		mov	r2, r0
 7019 0cc0 1A70     		strb	r2, [r3]
1466:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 7020              		.loc 1 1466 0
 7021 0cc2 4A4B     		ldr	r3, .L415+16
 7022 0cc4 0122     		movs	r2, #1
 7023 0cc6 1A60     		str	r2, [r3]
1467:..\src/command_processing.c ****                 {
 7024              		.loc 1 1467 0
 7025 0cc8 0023     		movs	r3, #0
 7026 0cca A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 7027 0cce 71E0     		b	.L405
 7028              	.L406:
1469:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 7029              		.loc 1 1469 0 discriminator 3
 7030 0cd0 B7F8A436 		ldrh	r3, [r7, #1700]
 7031 0cd4 444A     		ldr	r2, .L415+12
 7032 0cd6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7033 0cd8 1C46     		mov	r4, r3
 7034 0cda B7F8A436 		ldrh	r3, [r7, #1700]
 7035 0cde 424A     		ldr	r2, .L415+12
 7036 0ce0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7037 0ce2 1946     		mov	r1, r3
 7038 0ce4 3F4A     		ldr	r2, .L415+8
 7039 0ce6 0B46     		mov	r3, r1
 7040 0ce8 9B00     		lsls	r3, r3, #2
 7041 0cea 0B44     		add	r3, r3, r1
 7042 0cec 1344     		add	r3, r3, r2
 7043 0cee 03F25113 		addw	r3, r3, #337
 7044 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7045 0cf4 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 174


 7046 0cf6 1346     		mov	r3, r2
 7047 0cf8 5B00     		lsls	r3, r3, #1
 7048 0cfa 1344     		add	r3, r3, r2
 7049 0cfc 5B00     		lsls	r3, r3, #1
 7050 0cfe 5A1C     		adds	r2, r3, #1
 7051 0d00 B7F8A436 		ldrh	r3, [r7, #1700]
 7052 0d04 3849     		ldr	r1, .L415+12
 7053 0d06 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7054 0d08 1846     		mov	r0, r3
 7055 0d0a 3649     		ldr	r1, .L415+8
 7056 0d0c 0346     		mov	r3, r0
 7057 0d0e 9B00     		lsls	r3, r3, #2
 7058 0d10 0344     		add	r3, r3, r0
 7059 0d12 0B44     		add	r3, r3, r1
 7060 0d14 03F5A973 		add	r3, r3, #338
 7061 0d18 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7062 0d1a 1946     		mov	r1, r3
 7063 0d1c 0B46     		mov	r3, r1
 7064 0d1e 5B00     		lsls	r3, r3, #1
 7065 0d20 0B44     		add	r3, r3, r1
 7066 0d22 5B00     		lsls	r3, r3, #1
 7067 0d24 1A44     		add	r2, r2, r3
 7068 0d26 B7F8A436 		ldrh	r3, [r7, #1700]
 7069 0d2a 2F49     		ldr	r1, .L415+12
 7070 0d2c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7071 0d2e 1846     		mov	r0, r3
 7072 0d30 2C49     		ldr	r1, .L415+8
 7073 0d32 0346     		mov	r3, r0
 7074 0d34 9B00     		lsls	r3, r3, #2
 7075 0d36 0344     		add	r3, r3, r0
 7076 0d38 0B44     		add	r3, r3, r1
 7077 0d3a 03F25313 		addw	r3, r3, #339
 7078 0d3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7079 0d40 1946     		mov	r1, r3
 7080 0d42 0B46     		mov	r3, r1
 7081 0d44 5B00     		lsls	r3, r3, #1
 7082 0d46 0B44     		add	r3, r3, r1
 7083 0d48 5B00     		lsls	r3, r3, #1
 7084 0d4a 1A44     		add	r2, r2, r3
 7085 0d4c B7F8A436 		ldrh	r3, [r7, #1700]
 7086 0d50 2549     		ldr	r1, .L415+12
 7087 0d52 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7088 0d54 1846     		mov	r0, r3
 7089 0d56 2349     		ldr	r1, .L415+8
 7090 0d58 0346     		mov	r3, r0
 7091 0d5a 9B00     		lsls	r3, r3, #2
 7092 0d5c 0344     		add	r3, r3, r0
 7093 0d5e 0B44     		add	r3, r3, r1
 7094 0d60 03F5AA73 		add	r3, r3, #340
 7095 0d64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7096 0d66 1B01     		lsls	r3, r3, #4
 7097 0d68 1A44     		add	r2, r2, r3
 7098 0d6a B7F8A436 		ldrh	r3, [r7, #1700]
 7099 0d6e 1E49     		ldr	r1, .L415+12
 7100 0d70 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7101 0d72 1846     		mov	r0, r3
 7102 0d74 1B49     		ldr	r1, .L415+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 175


 7103 0d76 0346     		mov	r3, r0
 7104 0d78 9B00     		lsls	r3, r3, #2
 7105 0d7a 0344     		add	r3, r3, r0
 7106 0d7c 0B44     		add	r3, r3, r1
 7107 0d7e 03F25513 		addw	r3, r3, #341
 7108 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7109 0d84 5B00     		lsls	r3, r3, #1
 7110 0d86 1344     		add	r3, r3, r2
 7111 0d88 0133     		adds	r3, r3, #1
 7112 0d8a 194A     		ldr	r2, .L415+20
 7113 0d8c 42F82430 		str	r3, [r2, r4, lsl #2]
1470:..\src/command_processing.c ****                 }
 7114              		.loc 1 1470 0 discriminator 3
 7115 0d90 B7F8A436 		ldrh	r3, [r7, #1700]
 7116 0d94 144A     		ldr	r2, .L415+12
 7117 0d96 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 7118 0d98 1A46     		mov	r2, r3
 7119 0d9a 154B     		ldr	r3, .L415+20
 7120 0d9c 53F82220 		ldr	r2, [r3, r2, lsl #2]
 7121 0da0 124B     		ldr	r3, .L415+16
 7122 0da2 1B68     		ldr	r3, [r3]
 7123 0da4 1344     		add	r3, r3, r2
 7124 0da6 114A     		ldr	r2, .L415+16
 7125 0da8 1360     		str	r3, [r2]
1467:..\src/command_processing.c ****                 {
 7126              		.loc 1 1467 0 discriminator 3
 7127 0daa B7F8A436 		ldrh	r3, [r7, #1700]
 7128 0dae 0133     		adds	r3, r3, #1
 7129 0db0 A7F8A436 		strh	r3, [r7, #1700]	@ movhi
 7130              	.L405:
1467:..\src/command_processing.c ****                 {
 7131              		.loc 1 1467 0 is_stmt 0 discriminator 1
 7132 0db4 094B     		ldr	r3, .L415
 7133 0db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7134 0db8 9BB2     		uxth	r3, r3
 7135 0dba B7F8A426 		ldrh	r2, [r7, #1700]
 7136 0dbe 9A42     		cmp	r2, r3
 7137 0dc0 86D3     		bcc	.L406
1472:..\src/command_processing.c ****             
 7138              		.loc 1 1472 0 is_stmt 1
 7139 0dc2 0A4B     		ldr	r3, .L415+16
 7140 0dc4 1B68     		ldr	r3, [r3]
 7141 0dc6 0133     		adds	r3, r3, #1
 7142 0dc8 084A     		ldr	r2, .L415+16
 7143 0dca 1360     		str	r3, [r2]
 7144              		.loc 1 1476 0
 7145 0dcc 00E0     		b	.L400
 7146              	.L408:
1446:..\src/command_processing.c ****             
 7147              		.loc 1 1446 0
 7148 0dce 00BF     		nop
 7149              	.L400:
1477:..\src/command_processing.c ****     }
1478:..\src/command_processing.c **** }
 7150              		.loc 1 1478 0 discriminator 1
 7151 0dd0 00BF     		nop
 7152 0dd2 07F5D567 		add	r7, r7, #1704
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 176


 7153              		.cfi_def_cfa_offset 16
 7154 0dd6 BD46     		mov	sp, r7
 7155              		.cfi_def_cfa_register 13
 7156              		@ sp needed
 7157 0dd8 B0BD     		pop	{r4, r5, r7, pc}
 7158              	.L416:
 7159 0dda 00BF     		.align	2
 7160              	.L415:
 7161 0ddc 00000000 		.word	N_IMU_Connected
 7162 0de0 00000000 		.word	g_rx
 7163 0de4 00000000 		.word	g_mem
 7164 0de8 00000000 		.word	IMU_connected
 7165 0dec 00000000 		.word	imus_data_size
 7166 0df0 00000000 		.word	single_imu_size
 7167              		.cfi_endproc
 7168              	.LFE69:
 7169              		.size	get_IMU_param_list, .-get_IMU_param_list
 7170              		.section	.text.setZeros,"ax",%progbits
 7171              		.align	2
 7172              		.global	setZeros
 7173              		.thumb
 7174              		.thumb_func
 7175              		.type	setZeros, %function
 7176              	setZeros:
 7177              	.LFB70:
1479:..\src/command_processing.c **** 
1480:..\src/command_processing.c **** //==============================================================================
1481:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1482:..\src/command_processing.c **** //==============================================================================
1483:..\src/command_processing.c **** 
1484:..\src/command_processing.c **** void setZeros()
1485:..\src/command_processing.c **** {
 7178              		.loc 1 1485 0
 7179              		.cfi_startproc
 7180              		@ args = 0, pretend = 0, frame = 8
 7181              		@ frame_needed = 1, uses_anonymous_args = 0
 7182 0000 80B5     		push	{r7, lr}
 7183              		.cfi_def_cfa_offset 8
 7184              		.cfi_offset 7, -8
 7185              		.cfi_offset 14, -4
 7186 0002 82B0     		sub	sp, sp, #8
 7187              		.cfi_def_cfa_offset 16
 7188 0004 00AF     		add	r7, sp, #0
 7189              		.cfi_def_cfa_register 7
1486:..\src/command_processing.c ****     uint8 CYDATA i;        // iterator
1487:..\src/command_processing.c ****     
1488:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i) {
 7190              		.loc 1 1488 0
 7191 0006 0023     		movs	r3, #0
 7192 0008 FB71     		strb	r3, [r7, #7]
 7193 000a 12E0     		b	.L418
 7194              	.L419:
1489:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 7195              		.loc 1 1489 0 discriminator 3
 7196 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7197 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 7198 0010 0E49     		ldr	r1, .L420
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 177


 7199 0012 51F82220 		ldr	r2, [r1, r2, lsl #2]
 7200 0016 1146     		mov	r1, r2
 7201 0018 0D4A     		ldr	r2, .L420+4
 7202 001a 3633     		adds	r3, r3, #54
 7203 001c 9B00     		lsls	r3, r3, #2
 7204 001e 1344     		add	r3, r3, r2
 7205 0020 5960     		str	r1, [r3, #4]
1490:..\src/command_processing.c ****         g_meas.rot[i] = 0;
 7206              		.loc 1 1490 0 discriminator 3
 7207 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7208 0024 0B4A     		ldr	r2, .L420+8
 7209 0026 1344     		add	r3, r3, r2
 7210 0028 0022     		movs	r2, #0
 7211 002a 1A76     		strb	r2, [r3, #24]
1488:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 7212              		.loc 1 1488 0 discriminator 3
 7213 002c FB79     		ldrb	r3, [r7, #7]
 7214 002e 0133     		adds	r3, r3, #1
 7215 0030 FB71     		strb	r3, [r7, #7]
 7216              	.L418:
1488:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 7217              		.loc 1 1488 0 is_stmt 0 discriminator 1
 7218 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 7219 0034 022B     		cmp	r3, #2
 7220 0036 E9D9     		bls	.L419
1491:..\src/command_processing.c ****     }
1492:..\src/command_processing.c ****     reset_last_value_flag = 1;
 7221              		.loc 1 1492 0 is_stmt 1
 7222 0038 074B     		ldr	r3, .L420+12
 7223 003a 0122     		movs	r2, #1
 7224 003c 1A70     		strb	r2, [r3]
1493:..\src/command_processing.c **** 
1494:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 7225              		.loc 1 1494 0
 7226 003e 0120     		movs	r0, #1
 7227 0040 FFF7FEFF 		bl	sendAcknowledgment
1495:..\src/command_processing.c **** }
 7228              		.loc 1 1495 0
 7229 0044 00BF     		nop
 7230 0046 0837     		adds	r7, r7, #8
 7231              		.cfi_def_cfa_offset 8
 7232 0048 BD46     		mov	sp, r7
 7233              		.cfi_def_cfa_register 13
 7234              		@ sp needed
 7235 004a 80BD     		pop	{r7, pc}
 7236              	.L421:
 7237              		.align	2
 7238              	.L420:
 7239 004c 00000000 		.word	data_encoder_raw
 7240 0050 00000000 		.word	g_mem
 7241 0054 00000000 		.word	g_meas
 7242 0058 00000000 		.word	reset_last_value_flag
 7243              		.cfi_endproc
 7244              	.LFE70:
 7245              		.size	setZeros, .-setZeros
 7246              		.section	.rodata
 7247              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 178


 7248              	.LC87:
 7249 0928 0D0A00   		.ascii	"\015\012\000"
 7250 092b 00       		.align	2
 7251              	.LC88:
 7252 092c 4669726D 		.ascii	"Firmware version: \000"
 7252      77617265 
 7252      20766572 
 7252      73696F6E 
 7252      3A2000
 7253 093f 00       		.align	2
 7254              	.LC89:
 7255 0940 536F6674 		.ascii	"SoftHand PRO firmware v. 1.5 (PSoC5)\000"
 7255      48616E64 
 7255      2050524F 
 7255      20666972 
 7255      6D776172 
 7256 0965 000000   		.align	2
 7257              	.LC90:
 7258 0968 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 7258      0A00
 7259 096e 0000     		.align	2
 7260              	.LC91:
 7261 0970 44455649 		.ascii	"DEVICE INFO\015\012\000"
 7261      43452049 
 7261      4E464F0D 
 7261      0A00
 7262 097e 0000     		.align	2
 7263              	.LC92:
 7264 0980 49443A20 		.ascii	"ID: %d\015\012\000"
 7264      25640D0A 
 7264      00
 7265 0989 000000   		.align	2
 7266              	.LC93:
 7267 098c 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 7267      20736964 
 7267      653A2052 
 7267      49474854 
 7267      0D0A00
 7268 099f 00       		.align	2
 7269              	.LC94:
 7270 09a0 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
 7270      20736964 
 7270      653A204C 
 7270      4546540D 
 7270      0A00
 7271 09b2 0000     		.align	2
 7272              	.LC95:
 7273 09b4 50574D20 		.ascii	"PWM rescaling activation: \000"
 7273      72657363 
 7273      616C696E 
 7273      67206163 
 7273      74697661 
 7274 09cf 00       		.align	2
 7275              	.LC96:
 7276 09d0 5945530A 		.ascii	"YES\012\000"
 7276      00
 7277 09d5 000000   		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 179


 7278              	.LC97:
 7279 09d8 4E4F0A00 		.ascii	"NO\012\000"
 7280              		.align	2
 7281              	.LC98:
 7282 09dc 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 7282      4C696D69 
 7282      743A2025 
 7282      640D0A00 
 7283              		.align	2
 7284              	.LC99:
 7285 09ec 4D4F544F 		.ascii	"MOTOR INFO\015\012\000"
 7285      5220494E 
 7285      464F0D0A 
 7285      00
 7286 09f9 000000   		.align	2
 7287              	.LC100:
 7288 09fc 4D6F746F 		.ascii	"Motor reference\000"
 7288      72207265 
 7288      66657265 
 7288      6E636500 
 7289              		.align	2
 7290              	.LC101:
 7291 0a0c 202D2043 		.ascii	" - Currents: \000"
 7291      75727265 
 7291      6E74733A 
 7291      2000
 7292 0a1a 0000     		.align	2
 7293              	.LC102:
 7294 0a1c 202D2050 		.ascii	" - Pwm: \000"
 7294      776D3A20 
 7294      00
 7295 0a25 000000   		.align	2
 7296              	.LC103:
 7297 0a28 202D2050 		.ascii	" - Position: \000"
 7297      6F736974 
 7297      696F6E3A 
 7297      2000
 7298 0a36 0000     		.align	2
 7299              	.LC104:
 7300 0a38 25642000 		.ascii	"%d \000"
 7301              		.align	2
 7302              	.LC105:
 7303 0a3c 4D6F746F 		.ascii	"Motor enabled: \000"
 7303      7220656E 
 7303      61626C65 
 7303      643A2000 
 7304              		.align	2
 7305              	.LC106:
 7306 0a4c 5945530D 		.ascii	"YES\015\012\000"
 7306      0A00
 7307 0a52 0000     		.align	2
 7308              	.LC107:
 7309 0a54 4E4F0D0A 		.ascii	"NO\015\012\000"
 7309      00
 7310 0a59 000000   		.align	2
 7311              	.LC108:
 7312 0a5c 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 180


 7312      41535552 
 7312      454D454E 
 7312      54532049 
 7312      4E464F0D 
 7313 0a72 0000     		.align	2
 7314              	.LC109:
 7315 0a74 53656E73 		.ascii	"Sensor value:\015\012\000"
 7315      6F722076 
 7315      616C7565 
 7315      3A0D0A00 
 7316              		.align	2
 7317              	.LC110:
 7318 0a84 2564202D 		.ascii	"%d -> %d\000"
 7318      3E202564 
 7318      00
 7319 0a8d 000000   		.align	2
 7320              	.LC111:
 7321 0a90 42617474 		.ascii	"Battery Voltage (mV): %ld\000"
 7321      65727920 
 7321      566F6C74 
 7321      61676520 
 7321      286D5629 
 7322 0aaa 0000     		.align	2
 7323              	.LC112:
 7324 0aac 46756C6C 		.ascii	"Full charge power tension (mV): %ld\000"
 7324      20636861 
 7324      72676520 
 7324      706F7765 
 7324      72207465 
 7325              		.align	2
 7326              	.LC113:
 7327 0ad0 43757272 		.ascii	"Current (mA): %ld\000"
 7327      656E7420 
 7327      286D4129 
 7327      3A20256C 
 7327      6400
 7328 0ae2 0000     		.align	2
 7329              	.LC114:
 7330 0ae4 42617474 		.ascii	"Battery Voltage 2 (mV): %ld\000"
 7330      65727920 
 7330      566F6C74 
 7330      61676520 
 7330      3220286D 
 7331              		.align	2
 7332              	.LC115:
 7333 0b00 46756C6C 		.ascii	"Full charge power tension 2 (mV): %ld\000"
 7333      20636861 
 7333      72676520 
 7333      706F7765 
 7333      72207465 
 7334 0b26 0000     		.align	2
 7335              	.LC116:
 7336 0b28 43757272 		.ascii	"Current 2 (mA): %ld\000"
 7336      656E7420 
 7336      3220286D 
 7336      41293A20 
 7336      256C6400 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 181


 7337              		.align	2
 7338              	.LC117:
 7339 0b3c 0D0A4445 		.ascii	"\015\012DEVICE PARAMETERS\015\012\000"
 7339      56494345 
 7339      20504152 
 7339      414D4554 
 7339      4552530D 
 7340 0b52 0000     		.align	2
 7341              	.LC118:
 7342 0b54 50494420 		.ascii	"PID Controller:\015\012\000"
 7342      436F6E74 
 7342      726F6C6C 
 7342      65723A0D 
 7342      0A00
 7343              		.global	__aeabi_i2d
 7344              		.global	__aeabi_ddiv
 7345 0b66 0000     		.align	2
 7346              	.LC119:
 7347 0b68 50202D3E 		.ascii	"P -> %f  \000"
 7347      20256620 
 7347      2000
 7348 0b72 0000     		.align	2
 7349              	.LC120:
 7350 0b74 49202D3E 		.ascii	"I -> %f  \000"
 7350      20256620 
 7350      2000
 7351 0b7e 0000     		.align	2
 7352              	.LC121:
 7353 0b80 44202D3E 		.ascii	"D -> %f\015\012\000"
 7353      2025660D 
 7353      0A00
 7354 0b8a 0000     		.align	2
 7355              	.LC122:
 7356 0b8c 43757272 		.ascii	"Current PID Controller:\015\012\000"
 7356      656E7420 
 7356      50494420 
 7356      436F6E74 
 7356      726F6C6C 
 7357 0ba6 0000     		.align	2
 7358              	.LC123:
 7359 0ba8 53746172 		.ascii	"Startup activation: YES\015\012\000"
 7359      74757020 
 7359      61637469 
 7359      76617469 
 7359      6F6E3A20 
 7360 0bc2 0000     		.align	2
 7361              	.LC124:
 7362 0bc4 53746172 		.ascii	"Startup activation: NO\015\012\000"
 7362      74757020 
 7362      61637469 
 7362      76617469 
 7362      6F6E3A20 
 7363 0bdd 000000   		.align	2
 7364              	.LC125:
 7365 0be0 496E7075 		.ascii	"Input mode: USB\015\012\000"
 7365      74206D6F 
 7365      64653A20 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 182


 7365      5553420D 
 7365      0A00
 7366 0bf2 0000     		.align	2
 7367              	.LC126:
 7368 0bf4 496E7075 		.ascii	"Input mode: Handle\015\012\000"
 7368      74206D6F 
 7368      64653A20 
 7368      48616E64 
 7368      6C650D0A 
 7369 0c09 000000   		.align	2
 7370              	.LC127:
 7371 0c0c 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 7371      74206D6F 
 7371      64653A20 
 7371      454D4720 
 7371      70726F70 
 7372 0c2b 00       		.align	2
 7373              	.LC128:
 7374 0c2c 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 7374      74206D6F 
 7374      64653A20 
 7374      454D4720 
 7374      696E7465 
 7375 0c47 00       		.align	2
 7376              	.LC129:
 7377 0c48 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 7377      74206D6F 
 7377      64653A20 
 7377      454D4720 
 7377      46434653 
 7378 0c5f 00       		.align	2
 7379              	.LC130:
 7380 0c60 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 7380      74206D6F 
 7380      64653A20 
 7380      454D4720 
 7380      46434653 
 7381 0c7b 00       		.align	2
 7382              	.LC131:
 7383 0c7c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 7383      726F6C20 
 7383      6D6F6465 
 7383      3A20506F 
 7383      73697469 
 7384 0c95 000000   		.align	2
 7385              	.LC132:
 7386 0c98 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 7386      726F6C20 
 7386      6D6F6465 
 7386      3A205057 
 7386      4D0D0A00 
 7387              		.align	2
 7388              	.LC133:
 7389 0cac 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 7389      726F6C20 
 7389      6D6F6465 
 7389      3A204375 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 183


 7389      7272656E 
 7390              		.align	2
 7391              	.LC134:
 7392 0cc4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 7392      726F6C20 
 7392      6D6F6465 
 7392      3A20506F 
 7392      73697469 
 7393 0ce9 000000   		.align	2
 7394              	.LC135:
 7395 0cec 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 7395      6C757465 
 7395      20656E63 
 7395      6F646572 
 7395      20706F73 
 7396 0d0d 000000   		.align	2
 7397              	.LC136:
 7398 0d10 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 7398      6C757465 
 7398      20656E63 
 7398      6F646572 
 7398      20706F73 
 7399              		.align	2
 7400              	.LC137:
 7401 0d30 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 7401      722D4861 
 7401      6E646C65 
 7401      20526174 
 7401      696F3A20 
 7402 0d49 000000   		.align	2
 7403              	.LC138:
 7404 0d4c 53656E73 		.ascii	"Sensor resolution:\015\012\000"
 7404      6F722072 
 7404      65736F6C 
 7404      7574696F 
 7404      6E3A0D0A 
 7405 0d61 000000   		.align	2
 7406              	.LC139:
 7407 0d64 4D656173 		.ascii	"Measurement Offset:\015\012\000"
 7407      7572656D 
 7407      656E7420 
 7407      4F666673 
 7407      65743A0D 
 7408 0d7a 0000     		.align	2
 7409              	.LC140:
 7410 0d7c 2564202D 		.ascii	"%d -> %ld\000"
 7410      3E20256C 
 7410      6400
 7411 0d86 0000     		.align	2
 7412              	.LC141:
 7413 0d88 4D656173 		.ascii	"Measurement Multiplier:\015\012\000"
 7413      7572656D 
 7413      656E7420 
 7413      4D756C74 
 7413      69706C69 
 7414              		.global	__aeabi_f2d
 7415 0da2 0000     		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 184


 7416              	.LC142:
 7417 0da4 2564202D 		.ascii	"%d -> %f\000"
 7417      3E202566 
 7417      00
 7418 0dad 000000   		.align	2
 7419              	.LC143:
 7420 0db0 43757272 		.ascii	"Current lookup table:\015\012\000"
 7420      656E7420 
 7420      6C6F6F6B 
 7420      75702074 
 7420      61626C65 
 7421              		.align	2
 7422              	.LC144:
 7423 0dc8 705B305D 		.ascii	"p[0] - p[2]: %f, %f, %f\012\000"
 7423      202D2070 
 7423      5B325D3A 
 7423      2025662C 
 7423      2025662C 
 7424 0de1 000000   		.align	2
 7425              	.LC145:
 7426 0de4 705B335D 		.ascii	"p[3] - p[5]: %f, %f, %f\012\000"
 7426      202D2070 
 7426      5B355D3A 
 7426      2025662C 
 7426      2025662C 
 7427 0dfd 000000   		.align	2
 7428              	.LC146:
 7429 0e00 506F7369 		.ascii	"Position limit active: %d\000"
 7429      74696F6E 
 7429      206C696D 
 7429      69742061 
 7429      63746976 
 7430 0e1a 0000     		.align	2
 7431              	.LC147:
 7432 0e1c 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 7432      74696F6E 
 7432      206C696D 
 7432      6974206D 
 7432      6F746F72 
 7433 0e3f 00       		.align	2
 7434              	.LC148:
 7435 0e40 73757020 		.ascii	"sup -> %ld\015\012\000"
 7435      2D3E2025 
 7435      6C640D0A 
 7435      00
 7436 0e4d 000000   		.align	2
 7437              	.LC149:
 7438 0e50 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 7438      73746570 
 7438      20706F73 
 7438      20616E64 
 7438      206E6567 
 7439              		.align	2
 7440              	.LC150:
 7441 0e6c 43757272 		.ascii	"Current limit: %d\000"
 7441      656E7420 
 7441      6C696D69 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 185


 7441      743A2025 
 7441      6400
 7442 0e7e 0000     		.align	2
 7443              	.LC151:
 7444 0e80 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
 7444      74687265 
 7444      73686F6C 
 7444      6473205B 
 7444      30202D20 
 7445 0ea2 0000     		.align	2
 7446              	.LC152:
 7447 0ea4 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 7447      6D617820 
 7447      76616C75 
 7447      6573205B 
 7447      30202D20 
 7448              		.align	2
 7449              	.LC153:
 7450 0ec8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 7450      62726174 
 7450      696F6E20 
 7450      656E6162 
 7450      6C65643A 
 7451 0ee3 00       		.align	2
 7452              	.LC154:
 7453 0ee4 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 7453      62726174 
 7453      696F6E20 
 7453      656E6162 
 7453      6C65643A 
 7454 0efe 0000     		.align	2
 7455              	.LC155:
 7456 0f00 454D4720 		.ascii	"EMG max speed: %d\000"
 7456      6D617820 
 7456      73706565 
 7456      643A2025 
 7456      6400
 7457 0f12 0000     		.align	2
 7458              	.LC156:
 7459 0f14 41646469 		.ascii	"Additional EMG sensors value:\015\012\000"
 7459      74696F6E 
 7459      616C2045 
 7459      4D472073 
 7459      656E736F 
 7460              		.align	2
 7461              	.LC157:
 7462 0f34 454D4720 		.ascii	"EMG %d -> %d\000"
 7462      2564202D 
 7462      3E202564 
 7462      00
 7463 0f41 000000   		.align	2
 7464              	.LC158:
 7465 0f44 454D4720 		.ascii	"EMG input %d -> %d\000"
 7465      696E7075 
 7465      74202564 
 7465      202D3E20 
 7465      256400
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 186


 7466 0f57 00       		.align	2
 7467              	.LC159:
 7468 0f58 52657374 		.ascii	"Rest time delay (ms): %d\000"
 7468      2074696D 
 7468      65206465 
 7468      6C617920 
 7468      286D7329 
 7469 0f71 000000   		.align	2
 7470              	.LC160:
 7471 0f74 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 7471      2076656C 
 7471      6F636974 
 7471      7920636C 
 7471      6F737572 
 7472 0f9a 0000     		.align	2
 7473              	.LC161:
 7474 0f9c 52657374 		.ascii	"Rest position: %d\000"
 7474      20706F73 
 7474      6974696F 
 7474      6E3A2025 
 7474      6400
 7475 0fae 0000     		.align	2
 7476              	.LC162:
 7477 0fb0 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 7477      436F6E6E 
 7477      65637465 
 7477      643A2025 
 7477      640D0A00 
 7478              		.align	2
 7479              	.LC163:
 7480 0fc4 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 7480      20434F4E 
 7480      46494755 
 7480      52415449 
 7480      4F4E0D0A 
 7481 0fd9 000000   		.align	2
 7482              	.LC164:
 7483 0fdc 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 7483      2564200D 
 7483      0A094944 
 7483      3A202564 
 7483      0D0A00
 7484 0fef 00       		.align	2
 7485              	.LC165:
 7486 0ff0 09416363 		.ascii	"\011Accelerometers: \000"
 7486      656C6572 
 7486      6F6D6574 
 7486      6572733A 
 7486      2000
 7487 1002 0000     		.align	2
 7488              	.LC166:
 7489 1004 09477972 		.ascii	"\011Gyroscopes: \000"
 7489      6F73636F 
 7489      7065733A 
 7489      2000
 7490 1012 0000     		.align	2
 7491              	.LC167:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 187


 7492 1014 094D6167 		.ascii	"\011Magnetometers: \000"
 7492      6E65746F 
 7492      6D657465 
 7492      72733A20 
 7492      00
 7493 1025 000000   		.align	2
 7494              	.LC168:
 7495 1028 09517561 		.ascii	"\011Quaternion: \000"
 7495      7465726E 
 7495      696F6E3A 
 7495      2000
 7496 1036 0000     		.align	2
 7497              	.LC169:
 7498 1038 0954656D 		.ascii	"\011Temperature: \000"
 7498      70657261 
 7498      74757265 
 7498      3A2000
 7499 1047 00       		.align	2
 7500              	.LC170:
 7501 1048 4C617374 		.ascii	"Last FW cycle time: %u us\015\012\000"
 7501      20465720 
 7501      6379636C 
 7501      65207469 
 7501      6D653A20 
 7502              		.align	2
 7503              	.LC171:
 7504 1064 0D0A0000 		.ascii	"\015\012\000\000"
 7505              		.section	.text.prepare_generic_info,"ax",%progbits
 7506              		.align	2
 7507              		.global	prepare_generic_info
 7508              		.thumb
 7509              		.thumb_func
 7510              		.type	prepare_generic_info, %function
 7511              	prepare_generic_info:
 7512              	.LFB71:
1496:..\src/command_processing.c **** 
1497:..\src/command_processing.c **** //==============================================================================
1498:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1499:..\src/command_processing.c **** //==============================================================================
1500:..\src/command_processing.c **** 
1501:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1502:..\src/command_processing.c **** {
 7513              		.loc 1 1502 0
 7514              		.cfi_startproc
 7515              		@ args = 0, pretend = 0, frame = 112
 7516              		@ frame_needed = 1, uses_anonymous_args = 0
 7517 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7518              		.cfi_def_cfa_offset 28
 7519              		.cfi_offset 4, -28
 7520              		.cfi_offset 5, -24
 7521              		.cfi_offset 6, -20
 7522              		.cfi_offset 7, -16
 7523              		.cfi_offset 8, -12
 7524              		.cfi_offset 9, -8
 7525              		.cfi_offset 14, -4
 7526 0004 A1B0     		sub	sp, sp, #132
 7527              		.cfi_def_cfa_offset 160
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 188


 7528 0006 04AF     		add	r7, sp, #16
 7529              		.cfi_def_cfa 7, 144
 7530 0008 7860     		str	r0, [r7, #4]
1503:..\src/command_processing.c ****     int i;
1504:..\src/command_processing.c **** 
1505:..\src/command_processing.c ****     if(c_mem.id != 250){                //To avoid dummy board ping
 7531              		.loc 1 1505 0
 7532 000a B94B     		ldr	r3, .L497
 7533 000c 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 7534 0010 FA2B     		cmp	r3, #250
 7535 0012 01F08283 		beq	.L495
 7536              	.LBB14:
1506:..\src/command_processing.c ****         char str[100];
1507:..\src/command_processing.c ****         strcpy(info_string, "");
 7537              		.loc 1 1507 0
 7538 0016 7B68     		ldr	r3, [r7, #4]
 7539 0018 0022     		movs	r2, #0
 7540 001a 1A70     		strb	r2, [r3]
1508:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7541              		.loc 1 1508 0
 7542 001c 7868     		ldr	r0, [r7, #4]
 7543 001e FFF7FEFF 		bl	strlen
 7544 0022 0346     		mov	r3, r0
 7545 0024 1A46     		mov	r2, r3
 7546 0026 7B68     		ldr	r3, [r7, #4]
 7547 0028 1344     		add	r3, r3, r2
 7548 002a B24A     		ldr	r2, .L497+4
 7549 002c 1188     		ldrh	r1, [r2]	@ unaligned
 7550 002e 9278     		ldrb	r2, [r2, #2]
 7551 0030 1980     		strh	r1, [r3]	@ unaligned
 7552 0032 9A70     		strb	r2, [r3, #2]
1509:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 7553              		.loc 1 1509 0
 7554 0034 7868     		ldr	r0, [r7, #4]
 7555 0036 FFF7FEFF 		bl	strlen
 7556 003a 0346     		mov	r3, r0
 7557 003c 1A46     		mov	r2, r3
 7558 003e 7B68     		ldr	r3, [r7, #4]
 7559 0040 1344     		add	r3, r3, r2
 7560 0042 AD4A     		ldr	r2, .L497+8
 7561 0044 1D46     		mov	r5, r3
 7562 0046 1446     		mov	r4, r2
 7563 0048 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7564 004a 2860     		str	r0, [r5]	@ unaligned
 7565 004c 6960     		str	r1, [r5, #4]	@ unaligned
 7566 004e AA60     		str	r2, [r5, #8]	@ unaligned
 7567 0050 EB60     		str	r3, [r5, #12]	@ unaligned
 7568 0052 2388     		ldrh	r3, [r4]	@ unaligned
 7569 0054 A278     		ldrb	r2, [r4, #2]
 7570 0056 2B82     		strh	r3, [r5, #16]	@ unaligned
 7571 0058 1346     		mov	r3, r2
 7572 005a AB74     		strb	r3, [r5, #18]
1510:..\src/command_processing.c ****         strcat(info_string, VERSION);
 7573              		.loc 1 1510 0
 7574 005c 7868     		ldr	r0, [r7, #4]
 7575 005e FFF7FEFF 		bl	strlen
 7576 0062 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 189


 7577 0064 1A46     		mov	r2, r3
 7578 0066 7B68     		ldr	r3, [r7, #4]
 7579 0068 1344     		add	r3, r3, r2
 7580 006a A44A     		ldr	r2, .L497+12
 7581 006c 1446     		mov	r4, r2
 7582 006e 9E46     		mov	lr, r3
 7583 0070 04F1200C 		add	ip, r4, #32
 7584              	.L424:
 7585 0074 7546     		mov	r5, lr
 7586 0076 2646     		mov	r6, r4
 7587 0078 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7588 007a 2860     		str	r0, [r5]	@ unaligned
 7589 007c 6960     		str	r1, [r5, #4]	@ unaligned
 7590 007e AA60     		str	r2, [r5, #8]	@ unaligned
 7591 0080 EB60     		str	r3, [r5, #12]	@ unaligned
 7592 0082 1034     		adds	r4, r4, #16
 7593 0084 0EF1100E 		add	lr, lr, #16
 7594 0088 6445     		cmp	r4, ip
 7595 008a F3D1     		bne	.L424
 7596 008c 7346     		mov	r3, lr
 7597 008e 2246     		mov	r2, r4
 7598 0090 1068     		ldr	r0, [r2]	@ unaligned
 7599 0092 1860     		str	r0, [r3]	@ unaligned
 7600 0094 1279     		ldrb	r2, [r2, #4]
 7601 0096 1A71     		strb	r2, [r3, #4]
1511:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");
 7602              		.loc 1 1511 0
 7603 0098 7868     		ldr	r0, [r7, #4]
 7604 009a FFF7FEFF 		bl	strlen
 7605 009e 0346     		mov	r3, r0
 7606 00a0 1A46     		mov	r2, r3
 7607 00a2 7B68     		ldr	r3, [r7, #4]
 7608 00a4 1344     		add	r3, r3, r2
 7609 00a6 964A     		ldr	r2, .L497+16
 7610 00a8 1068     		ldr	r0, [r2]	@ unaligned
 7611 00aa 1860     		str	r0, [r3]	@ unaligned
 7612 00ac 9288     		ldrh	r2, [r2, #4]	@ unaligned
 7613 00ae 9A80     		strh	r2, [r3, #4]	@ unaligned
1512:..\src/command_processing.c **** 
1513:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 7614              		.loc 1 1513 0
 7615 00b0 7868     		ldr	r0, [r7, #4]
 7616 00b2 FFF7FEFF 		bl	strlen
 7617 00b6 0346     		mov	r3, r0
 7618 00b8 1A46     		mov	r2, r3
 7619 00ba 7B68     		ldr	r3, [r7, #4]
 7620 00bc 1344     		add	r3, r3, r2
 7621 00be 914A     		ldr	r2, .L497+20
 7622 00c0 1C46     		mov	r4, r3
 7623 00c2 1346     		mov	r3, r2
 7624 00c4 07CB     		ldmia	r3!, {r0, r1, r2}
 7625 00c6 2060     		str	r0, [r4]	@ unaligned
 7626 00c8 6160     		str	r1, [r4, #4]	@ unaligned
 7627 00ca A260     		str	r2, [r4, #8]	@ unaligned
 7628 00cc 1B88     		ldrh	r3, [r3]	@ unaligned
 7629 00ce A381     		strh	r3, [r4, #12]	@ unaligned
1514:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) c_mem.id);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 190


 7630              		.loc 1 1514 0
 7631 00d0 874B     		ldr	r3, .L497
 7632 00d2 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 7633 00d6 1A46     		mov	r2, r3
 7634 00d8 07F10803 		add	r3, r7, #8
 7635 00dc 8A49     		ldr	r1, .L497+24
 7636 00de 1846     		mov	r0, r3
 7637 00e0 FFF7FEFF 		bl	sprintf
1515:..\src/command_processing.c ****         strcat(info_string, str);
 7638              		.loc 1 1515 0
 7639 00e4 07F10803 		add	r3, r7, #8
 7640 00e8 1946     		mov	r1, r3
 7641 00ea 7868     		ldr	r0, [r7, #4]
 7642 00ec FFF7FEFF 		bl	strcat
1516:..\src/command_processing.c ****         switch(c_mem.right_left){
 7643              		.loc 1 1516 0
 7644 00f0 7F4B     		ldr	r3, .L497
 7645 00f2 93F84631 		ldrb	r3, [r3, #326]	@ zero_extendqisi2
 7646 00f6 002B     		cmp	r3, #0
 7647 00f8 02D0     		beq	.L426
 7648 00fa 012B     		cmp	r3, #1
 7649 00fc 15D0     		beq	.L427
 7650 00fe 26E0     		b	.L425
 7651              	.L426:
1517:..\src/command_processing.c ****             case RIGHT_HAND:
1518:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 7652              		.loc 1 1518 0
 7653 0100 7868     		ldr	r0, [r7, #4]
 7654 0102 FFF7FEFF 		bl	strlen
 7655 0106 0346     		mov	r3, r0
 7656 0108 1A46     		mov	r2, r3
 7657 010a 7B68     		ldr	r3, [r7, #4]
 7658 010c 1344     		add	r3, r3, r2
 7659 010e 7F4A     		ldr	r2, .L497+28
 7660 0110 1D46     		mov	r5, r3
 7661 0112 1446     		mov	r4, r2
 7662 0114 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7663 0116 2860     		str	r0, [r5]	@ unaligned
 7664 0118 6960     		str	r1, [r5, #4]	@ unaligned
 7665 011a AA60     		str	r2, [r5, #8]	@ unaligned
 7666 011c EB60     		str	r3, [r5, #12]	@ unaligned
 7667 011e 2388     		ldrh	r3, [r4]	@ unaligned
 7668 0120 A278     		ldrb	r2, [r4, #2]
 7669 0122 2B82     		strh	r3, [r5, #16]	@ unaligned
 7670 0124 1346     		mov	r3, r2
 7671 0126 AB74     		strb	r3, [r5, #18]
1519:..\src/command_processing.c ****                 break;
 7672              		.loc 1 1519 0
 7673 0128 11E0     		b	.L425
 7674              	.L427:
1520:..\src/command_processing.c ****             case LEFT_HAND:
1521:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 7675              		.loc 1 1521 0
 7676 012a 7868     		ldr	r0, [r7, #4]
 7677 012c FFF7FEFF 		bl	strlen
 7678 0130 0346     		mov	r3, r0
 7679 0132 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 191


 7680 0134 7B68     		ldr	r3, [r7, #4]
 7681 0136 1344     		add	r3, r3, r2
 7682 0138 754A     		ldr	r2, .L497+32
 7683 013a 1D46     		mov	r5, r3
 7684 013c 1446     		mov	r4, r2
 7685 013e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7686 0140 2860     		str	r0, [r5]	@ unaligned
 7687 0142 6960     		str	r1, [r5, #4]	@ unaligned
 7688 0144 AA60     		str	r2, [r5, #8]	@ unaligned
 7689 0146 EB60     		str	r3, [r5, #12]	@ unaligned
 7690 0148 2388     		ldrh	r3, [r4]	@ unaligned
 7691 014a 2B82     		strh	r3, [r5, #16]	@ unaligned
1522:..\src/command_processing.c ****                 break;
 7692              		.loc 1 1522 0
 7693 014c 00BF     		nop
 7694              	.L425:
1523:..\src/command_processing.c ****         }
1524:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 7695              		.loc 1 1524 0
 7696 014e 7868     		ldr	r0, [r7, #4]
 7697 0150 FFF7FEFF 		bl	strlen
 7698 0154 0346     		mov	r3, r0
 7699 0156 1A46     		mov	r2, r3
 7700 0158 7B68     		ldr	r3, [r7, #4]
 7701 015a 1344     		add	r3, r3, r2
 7702 015c 6D4A     		ldr	r2, .L497+36
 7703 015e 1D46     		mov	r5, r3
 7704 0160 1446     		mov	r4, r2
 7705 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7706 0164 2860     		str	r0, [r5]	@ unaligned
 7707 0166 6960     		str	r1, [r5, #4]	@ unaligned
 7708 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 7709 016a EB60     		str	r3, [r5, #12]	@ unaligned
 7710 016c 03CC     		ldmia	r4!, {r0, r1}
 7711 016e 2861     		str	r0, [r5, #16]	@ unaligned
 7712 0170 6961     		str	r1, [r5, #20]	@ unaligned
 7713 0172 2388     		ldrh	r3, [r4]	@ unaligned
 7714 0174 A278     		ldrb	r2, [r4, #2]
 7715 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 7716 0178 1346     		mov	r3, r2
 7717 017a AB76     		strb	r3, [r5, #26]
1525:..\src/command_processing.c ****         if(c_mem.activate_pwm_rescaling == MAXON_12V)
 7718              		.loc 1 1525 0
 7719 017c 5C4B     		ldr	r3, .L497
 7720 017e 93F81B31 		ldrb	r3, [r3, #283]	@ zero_extendqisi2
 7721 0182 012B     		cmp	r3, #1
 7722 0184 0CD1     		bne	.L428
1526:..\src/command_processing.c ****             strcat(info_string, "YES\n");
 7723              		.loc 1 1526 0
 7724 0186 7868     		ldr	r0, [r7, #4]
 7725 0188 FFF7FEFF 		bl	strlen
 7726 018c 0346     		mov	r3, r0
 7727 018e 1A46     		mov	r2, r3
 7728 0190 7B68     		ldr	r3, [r7, #4]
 7729 0192 1344     		add	r3, r3, r2
 7730 0194 604A     		ldr	r2, .L497+40
 7731 0196 1068     		ldr	r0, [r2]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 192


 7732 0198 1860     		str	r0, [r3]	@ unaligned
 7733 019a 1279     		ldrb	r2, [r2, #4]
 7734 019c 1A71     		strb	r2, [r3, #4]
 7735 019e 09E0     		b	.L429
 7736              	.L428:
1527:..\src/command_processing.c ****         else
1528:..\src/command_processing.c ****             strcat(info_string, "NO\n");
 7737              		.loc 1 1528 0
 7738 01a0 7868     		ldr	r0, [r7, #4]
 7739 01a2 FFF7FEFF 		bl	strlen
 7740 01a6 0346     		mov	r3, r0
 7741 01a8 1A46     		mov	r2, r3
 7742 01aa 7B68     		ldr	r3, [r7, #4]
 7743 01ac 1344     		add	r3, r3, r2
 7744 01ae 5B4A     		ldr	r2, .L497+44
 7745 01b0 1068     		ldr	r0, [r2]	@ unaligned
 7746 01b2 1860     		str	r0, [r3]	@ unaligned
 7747              	.L429:
1529:..\src/command_processing.c ****         
1530:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit);
 7748              		.loc 1 1530 0
 7749 01b4 5A4B     		ldr	r3, .L497+48
 7750 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7751 01b8 1A46     		mov	r2, r3
 7752 01ba 07F10803 		add	r3, r7, #8
 7753 01be 5949     		ldr	r1, .L497+52
 7754 01c0 1846     		mov	r0, r3
 7755 01c2 FFF7FEFF 		bl	sprintf
1531:..\src/command_processing.c ****         strcat(info_string, str);
 7756              		.loc 1 1531 0
 7757 01c6 07F10803 		add	r3, r7, #8
 7758 01ca 1946     		mov	r1, r3
 7759 01cc 7868     		ldr	r0, [r7, #4]
 7760 01ce FFF7FEFF 		bl	strcat
1532:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7761              		.loc 1 1532 0
 7762 01d2 7868     		ldr	r0, [r7, #4]
 7763 01d4 FFF7FEFF 		bl	strlen
 7764 01d8 0346     		mov	r3, r0
 7765 01da 1A46     		mov	r2, r3
 7766 01dc 7B68     		ldr	r3, [r7, #4]
 7767 01de 1344     		add	r3, r3, r2
 7768 01e0 444A     		ldr	r2, .L497+4
 7769 01e2 1188     		ldrh	r1, [r2]	@ unaligned
 7770 01e4 9278     		ldrb	r2, [r2, #2]
 7771 01e6 1980     		strh	r1, [r3]	@ unaligned
 7772 01e8 9A70     		strb	r2, [r3, #2]
1533:..\src/command_processing.c **** 
1534:..\src/command_processing.c ****         strcat(info_string, "MOTOR INFO\r\n");
 7773              		.loc 1 1534 0
 7774 01ea 7868     		ldr	r0, [r7, #4]
 7775 01ec FFF7FEFF 		bl	strlen
 7776 01f0 0346     		mov	r3, r0
 7777 01f2 1A46     		mov	r2, r3
 7778 01f4 7B68     		ldr	r3, [r7, #4]
 7779 01f6 1344     		add	r3, r3, r2
 7780 01f8 4B4A     		ldr	r2, .L497+56
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 193


 7781 01fa 1C46     		mov	r4, r3
 7782 01fc 1346     		mov	r3, r2
 7783 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 7784 0200 2060     		str	r0, [r4]	@ unaligned
 7785 0202 6160     		str	r1, [r4, #4]	@ unaligned
 7786 0204 A260     		str	r2, [r4, #8]	@ unaligned
 7787 0206 1B78     		ldrb	r3, [r3]
 7788 0208 2373     		strb	r3, [r4, #12]
1535:..\src/command_processing.c ****         strcat(info_string, "Motor reference");
 7789              		.loc 1 1535 0
 7790 020a 7868     		ldr	r0, [r7, #4]
 7791 020c FFF7FEFF 		bl	strlen
 7792 0210 0346     		mov	r3, r0
 7793 0212 1A46     		mov	r2, r3
 7794 0214 7B68     		ldr	r3, [r7, #4]
 7795 0216 1344     		add	r3, r3, r2
 7796 0218 444A     		ldr	r2, .L497+60
 7797 021a 1C46     		mov	r4, r3
 7798 021c 1546     		mov	r5, r2
 7799 021e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7800 0220 2060     		str	r0, [r4]	@ unaligned
 7801 0222 6160     		str	r1, [r4, #4]	@ unaligned
 7802 0224 A260     		str	r2, [r4, #8]	@ unaligned
 7803 0226 E360     		str	r3, [r4, #12]	@ unaligned
1536:..\src/command_processing.c ****         
1537:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT)
 7804              		.loc 1 1537 0
 7805 0228 414B     		ldr	r3, .L497+64
 7806 022a 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 7807 022e 022B     		cmp	r3, #2
 7808 0230 10D1     		bne	.L430
1538:..\src/command_processing.c ****             strcat(info_string," - Currents: ");
 7809              		.loc 1 1538 0
 7810 0232 7868     		ldr	r0, [r7, #4]
 7811 0234 FFF7FEFF 		bl	strlen
 7812 0238 0346     		mov	r3, r0
 7813 023a 1A46     		mov	r2, r3
 7814 023c 7B68     		ldr	r3, [r7, #4]
 7815 023e 1344     		add	r3, r3, r2
 7816 0240 3C4A     		ldr	r2, .L497+68
 7817 0242 1C46     		mov	r4, r3
 7818 0244 1346     		mov	r3, r2
 7819 0246 07CB     		ldmia	r3!, {r0, r1, r2}
 7820 0248 2060     		str	r0, [r4]	@ unaligned
 7821 024a 6160     		str	r1, [r4, #4]	@ unaligned
 7822 024c A260     		str	r2, [r4, #8]	@ unaligned
 7823 024e 1B88     		ldrh	r3, [r3]	@ unaligned
 7824 0250 A381     		strh	r3, [r4, #12]	@ unaligned
 7825 0252 24E0     		b	.L431
 7826              	.L430:
1539:..\src/command_processing.c ****         else {
1540:..\src/command_processing.c ****             if (g_mem.control_mode == CONTROL_PWM)
 7827              		.loc 1 1540 0
 7828 0254 364B     		ldr	r3, .L497+64
 7829 0256 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 7830 025a 012B     		cmp	r3, #1
 7831 025c 0FD1     		bne	.L432
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 194


1541:..\src/command_processing.c ****                 strcat(info_string," - Pwm: ");
 7832              		.loc 1 1541 0
 7833 025e 7868     		ldr	r0, [r7, #4]
 7834 0260 FFF7FEFF 		bl	strlen
 7835 0264 0346     		mov	r3, r0
 7836 0266 1A46     		mov	r2, r3
 7837 0268 7B68     		ldr	r3, [r7, #4]
 7838 026a 1344     		add	r3, r3, r2
 7839 026c 3249     		ldr	r1, .L497+72
 7840 026e 1A46     		mov	r2, r3
 7841 0270 0B46     		mov	r3, r1
 7842 0272 03CB     		ldmia	r3!, {r0, r1}
 7843 0274 1060     		str	r0, [r2]	@ unaligned
 7844 0276 5160     		str	r1, [r2, #4]	@ unaligned
 7845 0278 1B78     		ldrb	r3, [r3]
 7846 027a 1372     		strb	r3, [r2, #8]
 7847 027c 0FE0     		b	.L431
 7848              	.L432:
1542:..\src/command_processing.c ****             else
1543:..\src/command_processing.c ****                 strcat(info_string," - Position: ");
 7849              		.loc 1 1543 0
 7850 027e 7868     		ldr	r0, [r7, #4]
 7851 0280 FFF7FEFF 		bl	strlen
 7852 0284 0346     		mov	r3, r0
 7853 0286 1A46     		mov	r2, r3
 7854 0288 7B68     		ldr	r3, [r7, #4]
 7855 028a 1344     		add	r3, r3, r2
 7856 028c 2B4A     		ldr	r2, .L497+76
 7857 028e 1C46     		mov	r4, r3
 7858 0290 1346     		mov	r3, r2
 7859 0292 07CB     		ldmia	r3!, {r0, r1, r2}
 7860 0294 2060     		str	r0, [r4]	@ unaligned
 7861 0296 6160     		str	r1, [r4, #4]	@ unaligned
 7862 0298 A260     		str	r2, [r4, #8]	@ unaligned
 7863 029a 1B88     		ldrh	r3, [r3]	@ unaligned
 7864 029c A381     		strh	r3, [r4, #12]	@ unaligned
 7865              	.L431:
1544:..\src/command_processing.c ****         }
1545:..\src/command_processing.c **** 
1546:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT) {
 7866              		.loc 1 1546 0
 7867 029e 244B     		ldr	r3, .L497+64
 7868 02a0 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 7869 02a4 022B     		cmp	r3, #2
 7870 02a6 0ED1     		bne	.L433
1547:..\src/command_processing.c ****             sprintf(str, "%d ", (int)(g_refOld.curr));
 7871              		.loc 1 1547 0
 7872 02a8 254B     		ldr	r3, .L497+80
 7873 02aa 5A68     		ldr	r2, [r3, #4]
 7874 02ac 07F10803 		add	r3, r7, #8
 7875 02b0 2449     		ldr	r1, .L497+84
 7876 02b2 1846     		mov	r0, r3
 7877 02b4 FFF7FEFF 		bl	sprintf
1548:..\src/command_processing.c ****             strcat(info_string,str);
 7878              		.loc 1 1548 0
 7879 02b8 07F10803 		add	r3, r7, #8
 7880 02bc 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 195


 7881 02be 7868     		ldr	r0, [r7, #4]
 7882 02c0 FFF7FEFF 		bl	strcat
 7883 02c4 53E0     		b	.L434
 7884              	.L433:
1549:..\src/command_processing.c ****         }
1550:..\src/command_processing.c ****         else {
1551:..\src/command_processing.c ****             if(g_mem.control_mode == CONTROL_PWM) {
 7885              		.loc 1 1551 0
 7886 02c6 1A4B     		ldr	r3, .L497+64
 7887 02c8 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 7888 02cc 012B     		cmp	r3, #1
 7889 02ce 3BD1     		bne	.L435
1552:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld.pwm));
 7890              		.loc 1 1552 0
 7891 02d0 1B4B     		ldr	r3, .L497+80
 7892 02d2 9A68     		ldr	r2, [r3, #8]
 7893 02d4 07F10803 		add	r3, r7, #8
 7894 02d8 1A49     		ldr	r1, .L497+84
 7895 02da 1846     		mov	r0, r3
 7896 02dc FFF7FEFF 		bl	sprintf
1553:..\src/command_processing.c ****                 strcat(info_string,str);
 7897              		.loc 1 1553 0
 7898 02e0 07F10803 		add	r3, r7, #8
 7899 02e4 1946     		mov	r1, r3
 7900 02e6 7868     		ldr	r0, [r7, #4]
 7901 02e8 FFF7FEFF 		bl	strcat
 7902 02ec 3FE0     		b	.L434
 7903              	.L498:
 7904 02ee 00BF     		.align	2
 7905              	.L497:
 7906 02f0 00000000 		.word	c_mem
 7907 02f4 28090000 		.word	.LC87
 7908 02f8 2C090000 		.word	.LC88
 7909 02fc 40090000 		.word	.LC89
 7910 0300 68090000 		.word	.LC90
 7911 0304 70090000 		.word	.LC91
 7912 0308 80090000 		.word	.LC92
 7913 030c 8C090000 		.word	.LC93
 7914 0310 A0090000 		.word	.LC94
 7915 0314 B4090000 		.word	.LC95
 7916 0318 D0090000 		.word	.LC96
 7917 031c D8090000 		.word	.LC97
 7918 0320 00000000 		.word	dev_pwm_limit
 7919 0324 DC090000 		.word	.LC98
 7920 0328 EC090000 		.word	.LC99
 7921 032c FC090000 		.word	.LC100
 7922 0330 00000000 		.word	g_mem
 7923 0334 0C0A0000 		.word	.LC101
 7924 0338 1C0A0000 		.word	.LC102
 7925 033c 280A0000 		.word	.LC103
 7926 0340 00000000 		.word	g_refOld
 7927 0344 380A0000 		.word	.LC104
 7928              	.L435:
1554:..\src/command_processing.c ****             }
1555:..\src/command_processing.c ****             else {
1556:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld.pos >> c_mem.res[0]));
 7929              		.loc 1 1556 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 196


 7930 0348 414B     		ldr	r3, .L499
 7931 034a 1B68     		ldr	r3, [r3]
 7932 034c 414A     		ldr	r2, .L499+4
 7933 034e 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 7934 0352 43FA02F2 		asr	r2, r3, r2
 7935 0356 07F10803 		add	r3, r7, #8
 7936 035a 3F49     		ldr	r1, .L499+8
 7937 035c 1846     		mov	r0, r3
 7938 035e FFF7FEFF 		bl	sprintf
1557:..\src/command_processing.c ****                 strcat(info_string,str);
 7939              		.loc 1 1557 0
 7940 0362 07F10803 		add	r3, r7, #8
 7941 0366 1946     		mov	r1, r3
 7942 0368 7868     		ldr	r0, [r7, #4]
 7943 036a FFF7FEFF 		bl	strcat
 7944              	.L434:
1558:..\src/command_processing.c ****             }
1559:..\src/command_processing.c ****         }
1560:..\src/command_processing.c ****         strcat(info_string,"\r\n");
 7945              		.loc 1 1560 0
 7946 036e 7868     		ldr	r0, [r7, #4]
 7947 0370 FFF7FEFF 		bl	strlen
 7948 0374 0346     		mov	r3, r0
 7949 0376 1A46     		mov	r2, r3
 7950 0378 7B68     		ldr	r3, [r7, #4]
 7951 037a 1344     		add	r3, r3, r2
 7952 037c 374A     		ldr	r2, .L499+12
 7953 037e 1188     		ldrh	r1, [r2]	@ unaligned
 7954 0380 9278     		ldrb	r2, [r2, #2]
 7955 0382 1980     		strh	r1, [r3]	@ unaligned
 7956 0384 9A70     		strb	r2, [r3, #2]
1561:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7957              		.loc 1 1561 0
 7958 0386 7868     		ldr	r0, [r7, #4]
 7959 0388 FFF7FEFF 		bl	strlen
 7960 038c 0346     		mov	r3, r0
 7961 038e 1A46     		mov	r2, r3
 7962 0390 7B68     		ldr	r3, [r7, #4]
 7963 0392 1344     		add	r3, r3, r2
 7964 0394 314A     		ldr	r2, .L499+12
 7965 0396 1188     		ldrh	r1, [r2]	@ unaligned
 7966 0398 9278     		ldrb	r2, [r2, #2]
 7967 039a 1980     		strh	r1, [r3]	@ unaligned
 7968 039c 9A70     		strb	r2, [r3, #2]
1562:..\src/command_processing.c **** 
1563:..\src/command_processing.c ****         sprintf(str, "Motor enabled: ");
 7969              		.loc 1 1563 0
 7970 039e 07F10803 		add	r3, r7, #8
 7971 03a2 2F4A     		ldr	r2, .L499+16
 7972 03a4 1C46     		mov	r4, r3
 7973 03a6 1346     		mov	r3, r2
 7974 03a8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7975 03aa 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1564:..\src/command_processing.c ****         if (g_ref.onoff & 0x01) {
 7976              		.loc 1 1564 0
 7977 03ae 2D4B     		ldr	r3, .L499+20
 7978 03b0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 197


 7979 03b2 03F00103 		and	r3, r3, #1
 7980 03b6 002B     		cmp	r3, #0
 7981 03b8 0FD0     		beq	.L436
1565:..\src/command_processing.c ****             strcat(str, "YES\r\n");
 7982              		.loc 1 1565 0
 7983 03ba 07F10803 		add	r3, r7, #8
 7984 03be 1846     		mov	r0, r3
 7985 03c0 FFF7FEFF 		bl	strlen
 7986 03c4 0346     		mov	r3, r0
 7987 03c6 1A46     		mov	r2, r3
 7988 03c8 07F10803 		add	r3, r7, #8
 7989 03cc 1344     		add	r3, r3, r2
 7990 03ce 264A     		ldr	r2, .L499+24
 7991 03d0 1068     		ldr	r0, [r2]	@ unaligned
 7992 03d2 1860     		str	r0, [r3]	@ unaligned
 7993 03d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 7994 03d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 7995 03d8 0EE0     		b	.L437
 7996              	.L436:
1566:..\src/command_processing.c ****         } else {
1567:..\src/command_processing.c ****             strcat(str, "NO\r\n");
 7997              		.loc 1 1567 0
 7998 03da 07F10803 		add	r3, r7, #8
 7999 03de 1846     		mov	r0, r3
 8000 03e0 FFF7FEFF 		bl	strlen
 8001 03e4 0346     		mov	r3, r0
 8002 03e6 1A46     		mov	r2, r3
 8003 03e8 07F10803 		add	r3, r7, #8
 8004 03ec 1344     		add	r3, r3, r2
 8005 03ee 1F4A     		ldr	r2, .L499+28
 8006 03f0 1068     		ldr	r0, [r2]	@ unaligned
 8007 03f2 1860     		str	r0, [r3]	@ unaligned
 8008 03f4 1279     		ldrb	r2, [r2, #4]
 8009 03f6 1A71     		strb	r2, [r3, #4]
 8010              	.L437:
1568:..\src/command_processing.c ****         }
1569:..\src/command_processing.c ****         strcat(info_string, str);
 8011              		.loc 1 1569 0
 8012 03f8 07F10803 		add	r3, r7, #8
 8013 03fc 1946     		mov	r1, r3
 8014 03fe 7868     		ldr	r0, [r7, #4]
 8015 0400 FFF7FEFF 		bl	strcat
1570:..\src/command_processing.c **** 
1571:..\src/command_processing.c ****         strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 8016              		.loc 1 1571 0
 8017 0404 7868     		ldr	r0, [r7, #4]
 8018 0406 FFF7FEFF 		bl	strlen
 8019 040a 0346     		mov	r3, r0
 8020 040c 1A46     		mov	r2, r3
 8021 040e 7B68     		ldr	r3, [r7, #4]
 8022 0410 1344     		add	r3, r3, r2
 8023 0412 174A     		ldr	r2, .L499+32
 8024 0414 1D46     		mov	r5, r3
 8025 0416 1446     		mov	r4, r2
 8026 0418 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8027 041a 2860     		str	r0, [r5]	@ unaligned
 8028 041c 6960     		str	r1, [r5, #4]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 198


 8029 041e AA60     		str	r2, [r5, #8]	@ unaligned
 8030 0420 EB60     		str	r3, [r5, #12]	@ unaligned
 8031 0422 2068     		ldr	r0, [r4]	@ unaligned
 8032 0424 2861     		str	r0, [r5, #16]	@ unaligned
 8033 0426 A388     		ldrh	r3, [r4, #4]	@ unaligned
 8034 0428 AB82     		strh	r3, [r5, #20]	@ unaligned
1572:..\src/command_processing.c ****         strcat(info_string, "Sensor value:\r\n");
 8035              		.loc 1 1572 0
 8036 042a 7868     		ldr	r0, [r7, #4]
 8037 042c FFF7FEFF 		bl	strlen
 8038 0430 0346     		mov	r3, r0
 8039 0432 1A46     		mov	r2, r3
 8040 0434 7B68     		ldr	r3, [r7, #4]
 8041 0436 1344     		add	r3, r3, r2
 8042 0438 0E4A     		ldr	r2, .L499+36
 8043 043a 1C46     		mov	r4, r3
 8044 043c 1546     		mov	r5, r2
 8045 043e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8046 0440 2060     		str	r0, [r4]	@ unaligned
 8047 0442 6160     		str	r1, [r4, #4]	@ unaligned
 8048 0444 A260     		str	r2, [r4, #8]	@ unaligned
 8049 0446 E360     		str	r3, [r4, #12]	@ unaligned
1573:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; i++) {
 8050              		.loc 1 1573 0
 8051 0448 0023     		movs	r3, #0
 8052 044a FB66     		str	r3, [r7, #108]
 8053 044c 3BE0     		b	.L438
 8054              	.L500:
 8055 044e 00BF     		.align	2
 8056              	.L499:
 8057 0450 00000000 		.word	g_refOld
 8058 0454 00000000 		.word	c_mem
 8059 0458 380A0000 		.word	.LC104
 8060 045c 28090000 		.word	.LC87
 8061 0460 3C0A0000 		.word	.LC105
 8062 0464 00000000 		.word	g_ref
 8063 0468 4C0A0000 		.word	.LC106
 8064 046c 540A0000 		.word	.LC107
 8065 0470 5C0A0000 		.word	.LC108
 8066 0474 740A0000 		.word	.LC109
 8067              	.L439:
1574:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 8068              		.loc 1 1574 0 discriminator 3
 8069 0478 FB6E     		ldr	r3, [r7, #108]
 8070 047a 5C1C     		adds	r4, r3, #1
1575:..\src/command_processing.c ****             (int)(g_meas.pos[i] >> c_mem.res[i]));
 8071              		.loc 1 1575 0 discriminator 3
 8072 047c A04A     		ldr	r2, .L501
 8073 047e FB6E     		ldr	r3, [r7, #108]
 8074 0480 52F82330 		ldr	r3, [r2, r3, lsl #2]
 8075 0484 9F49     		ldr	r1, .L501+4
 8076 0486 FA6E     		ldr	r2, [r7, #108]
 8077 0488 0A44     		add	r2, r2, r1
 8078 048a D732     		adds	r2, r2, #215
 8079 048c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8080 048e 1341     		asrs	r3, r3, r2
1574:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 199


 8081              		.loc 1 1574 0 discriminator 3
 8082 0490 07F10800 		add	r0, r7, #8
 8083 0494 2246     		mov	r2, r4
 8084 0496 9C49     		ldr	r1, .L501+8
 8085 0498 FFF7FEFF 		bl	sprintf
1576:..\src/command_processing.c ****             strcat(info_string, str);
 8086              		.loc 1 1576 0 discriminator 3
 8087 049c 07F10803 		add	r3, r7, #8
 8088 04a0 1946     		mov	r1, r3
 8089 04a2 7868     		ldr	r0, [r7, #4]
 8090 04a4 FFF7FEFF 		bl	strcat
1577:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8091              		.loc 1 1577 0 discriminator 3
 8092 04a8 7868     		ldr	r0, [r7, #4]
 8093 04aa FFF7FEFF 		bl	strlen
 8094 04ae 0346     		mov	r3, r0
 8095 04b0 1A46     		mov	r2, r3
 8096 04b2 7B68     		ldr	r3, [r7, #4]
 8097 04b4 1344     		add	r3, r3, r2
 8098 04b6 954A     		ldr	r2, .L501+12
 8099 04b8 1188     		ldrh	r1, [r2]	@ unaligned
 8100 04ba 9278     		ldrb	r2, [r2, #2]
 8101 04bc 1980     		strh	r1, [r3]	@ unaligned
 8102 04be 9A70     		strb	r2, [r3, #2]
1573:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 8103              		.loc 1 1573 0 discriminator 3
 8104 04c0 FB6E     		ldr	r3, [r7, #108]
 8105 04c2 0133     		adds	r3, r3, #1
 8106 04c4 FB66     		str	r3, [r7, #108]
 8107              	.L438:
1573:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 8108              		.loc 1 1573 0 is_stmt 0 discriminator 1
 8109 04c6 FB6E     		ldr	r3, [r7, #108]
 8110 04c8 022B     		cmp	r3, #2
 8111 04ca D5DD     		ble	.L439
1578:..\src/command_processing.c ****         }
1579:..\src/command_processing.c **** 
1580:..\src/command_processing.c ****         sprintf(str, "Battery Voltage (mV): %ld", (int32) dev_tension[0] );
 8112              		.loc 1 1580 0 is_stmt 1
 8113 04cc 904B     		ldr	r3, .L501+16
 8114 04ce 1A68     		ldr	r2, [r3]
 8115 04d0 07F10803 		add	r3, r7, #8
 8116 04d4 8F49     		ldr	r1, .L501+20
 8117 04d6 1846     		mov	r0, r3
 8118 04d8 FFF7FEFF 		bl	sprintf
1581:..\src/command_processing.c ****         strcat(info_string, str);
 8119              		.loc 1 1581 0
 8120 04dc 07F10803 		add	r3, r7, #8
 8121 04e0 1946     		mov	r1, r3
 8122 04e2 7868     		ldr	r0, [r7, #4]
 8123 04e4 FFF7FEFF 		bl	strcat
1582:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8124              		.loc 1 1582 0
 8125 04e8 7868     		ldr	r0, [r7, #4]
 8126 04ea FFF7FEFF 		bl	strlen
 8127 04ee 0346     		mov	r3, r0
 8128 04f0 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 200


 8129 04f2 7B68     		ldr	r3, [r7, #4]
 8130 04f4 1344     		add	r3, r3, r2
 8131 04f6 854A     		ldr	r2, .L501+12
 8132 04f8 1188     		ldrh	r1, [r2]	@ unaligned
 8133 04fa 9278     		ldrb	r2, [r2, #2]
 8134 04fc 1980     		strh	r1, [r3]	@ unaligned
 8135 04fe 9A70     		strb	r2, [r3, #2]
1583:..\src/command_processing.c ****         
1584:..\src/command_processing.c ****         sprintf(str, "Full charge power tension (mV): %ld", (int32) pow_tension[0] );
 8136              		.loc 1 1584 0
 8137 0500 854B     		ldr	r3, .L501+24
 8138 0502 1A68     		ldr	r2, [r3]
 8139 0504 07F10803 		add	r3, r7, #8
 8140 0508 8449     		ldr	r1, .L501+28
 8141 050a 1846     		mov	r0, r3
 8142 050c FFF7FEFF 		bl	sprintf
1585:..\src/command_processing.c ****         strcat(info_string, str);
 8143              		.loc 1 1585 0
 8144 0510 07F10803 		add	r3, r7, #8
 8145 0514 1946     		mov	r1, r3
 8146 0516 7868     		ldr	r0, [r7, #4]
 8147 0518 FFF7FEFF 		bl	strcat
1586:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8148              		.loc 1 1586 0
 8149 051c 7868     		ldr	r0, [r7, #4]
 8150 051e FFF7FEFF 		bl	strlen
 8151 0522 0346     		mov	r3, r0
 8152 0524 1A46     		mov	r2, r3
 8153 0526 7B68     		ldr	r3, [r7, #4]
 8154 0528 1344     		add	r3, r3, r2
 8155 052a 784A     		ldr	r2, .L501+12
 8156 052c 1188     		ldrh	r1, [r2]	@ unaligned
 8157 052e 9278     		ldrb	r2, [r2, #2]
 8158 0530 1980     		strh	r1, [r3]	@ unaligned
 8159 0532 9A70     		strb	r2, [r3, #2]
1587:..\src/command_processing.c **** 
1588:..\src/command_processing.c ****         sprintf(str, "Current (mA): %ld", (int32) g_meas.curr[0] );
 8160              		.loc 1 1588 0
 8161 0534 724B     		ldr	r3, .L501
 8162 0536 DA68     		ldr	r2, [r3, #12]
 8163 0538 07F10803 		add	r3, r7, #8
 8164 053c 7849     		ldr	r1, .L501+32
 8165 053e 1846     		mov	r0, r3
 8166 0540 FFF7FEFF 		bl	sprintf
1589:..\src/command_processing.c ****         strcat(info_string, str);
 8167              		.loc 1 1589 0
 8168 0544 07F10803 		add	r3, r7, #8
 8169 0548 1946     		mov	r1, r3
 8170 054a 7868     		ldr	r0, [r7, #4]
 8171 054c FFF7FEFF 		bl	strcat
1590:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8172              		.loc 1 1590 0
 8173 0550 7868     		ldr	r0, [r7, #4]
 8174 0552 FFF7FEFF 		bl	strlen
 8175 0556 0346     		mov	r3, r0
 8176 0558 1A46     		mov	r2, r3
 8177 055a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 201


 8178 055c 1344     		add	r3, r3, r2
 8179 055e 6B4A     		ldr	r2, .L501+12
 8180 0560 1188     		ldrh	r1, [r2]	@ unaligned
 8181 0562 9278     		ldrb	r2, [r2, #2]
 8182 0564 1980     		strh	r1, [r3]	@ unaligned
 8183 0566 9A70     		strb	r2, [r3, #2]
1591:..\src/command_processing.c **** 
1592:..\src/command_processing.c ****         if (c_mem.use_2nd_motor_flag == TRUE) {
 8184              		.loc 1 1592 0
 8185 0568 664B     		ldr	r3, .L501+4
 8186 056a 93F88131 		ldrb	r3, [r3, #385]	@ zero_extendqisi2
 8187 056e 012B     		cmp	r3, #1
 8188 0570 4DD1     		bne	.L440
1593:..\src/command_processing.c ****             sprintf(str, "Battery Voltage 2 (mV): %ld", (int32) dev_tension[1] );
 8189              		.loc 1 1593 0
 8190 0572 674B     		ldr	r3, .L501+16
 8191 0574 5A68     		ldr	r2, [r3, #4]
 8192 0576 07F10803 		add	r3, r7, #8
 8193 057a 6A49     		ldr	r1, .L501+36
 8194 057c 1846     		mov	r0, r3
 8195 057e FFF7FEFF 		bl	sprintf
1594:..\src/command_processing.c ****             strcat(info_string, str);
 8196              		.loc 1 1594 0
 8197 0582 07F10803 		add	r3, r7, #8
 8198 0586 1946     		mov	r1, r3
 8199 0588 7868     		ldr	r0, [r7, #4]
 8200 058a FFF7FEFF 		bl	strcat
1595:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8201              		.loc 1 1595 0
 8202 058e 7868     		ldr	r0, [r7, #4]
 8203 0590 FFF7FEFF 		bl	strlen
 8204 0594 0346     		mov	r3, r0
 8205 0596 1A46     		mov	r2, r3
 8206 0598 7B68     		ldr	r3, [r7, #4]
 8207 059a 1344     		add	r3, r3, r2
 8208 059c 5B4A     		ldr	r2, .L501+12
 8209 059e 1188     		ldrh	r1, [r2]	@ unaligned
 8210 05a0 9278     		ldrb	r2, [r2, #2]
 8211 05a2 1980     		strh	r1, [r3]	@ unaligned
 8212 05a4 9A70     		strb	r2, [r3, #2]
1596:..\src/command_processing.c ****             
1597:..\src/command_processing.c ****             sprintf(str, "Full charge power tension 2 (mV): %ld", (int32) pow_tension[1] );
 8213              		.loc 1 1597 0
 8214 05a6 5C4B     		ldr	r3, .L501+24
 8215 05a8 5A68     		ldr	r2, [r3, #4]
 8216 05aa 07F10803 		add	r3, r7, #8
 8217 05ae 5E49     		ldr	r1, .L501+40
 8218 05b0 1846     		mov	r0, r3
 8219 05b2 FFF7FEFF 		bl	sprintf
1598:..\src/command_processing.c ****             strcat(info_string, str);
 8220              		.loc 1 1598 0
 8221 05b6 07F10803 		add	r3, r7, #8
 8222 05ba 1946     		mov	r1, r3
 8223 05bc 7868     		ldr	r0, [r7, #4]
 8224 05be FFF7FEFF 		bl	strcat
1599:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8225              		.loc 1 1599 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 202


 8226 05c2 7868     		ldr	r0, [r7, #4]
 8227 05c4 FFF7FEFF 		bl	strlen
 8228 05c8 0346     		mov	r3, r0
 8229 05ca 1A46     		mov	r2, r3
 8230 05cc 7B68     		ldr	r3, [r7, #4]
 8231 05ce 1344     		add	r3, r3, r2
 8232 05d0 4E4A     		ldr	r2, .L501+12
 8233 05d2 1188     		ldrh	r1, [r2]	@ unaligned
 8234 05d4 9278     		ldrb	r2, [r2, #2]
 8235 05d6 1980     		strh	r1, [r3]	@ unaligned
 8236 05d8 9A70     		strb	r2, [r3, #2]
1600:..\src/command_processing.c **** 
1601:..\src/command_processing.c ****             sprintf(str, "Current 2 (mA): %ld", (int32) g_meas.curr[1] );
 8237              		.loc 1 1601 0
 8238 05da 494B     		ldr	r3, .L501
 8239 05dc 1A69     		ldr	r2, [r3, #16]
 8240 05de 07F10803 		add	r3, r7, #8
 8241 05e2 5249     		ldr	r1, .L501+44
 8242 05e4 1846     		mov	r0, r3
 8243 05e6 FFF7FEFF 		bl	sprintf
1602:..\src/command_processing.c ****             strcat(info_string, str);
 8244              		.loc 1 1602 0
 8245 05ea 07F10803 		add	r3, r7, #8
 8246 05ee 1946     		mov	r1, r3
 8247 05f0 7868     		ldr	r0, [r7, #4]
 8248 05f2 FFF7FEFF 		bl	strcat
1603:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8249              		.loc 1 1603 0
 8250 05f6 7868     		ldr	r0, [r7, #4]
 8251 05f8 FFF7FEFF 		bl	strlen
 8252 05fc 0346     		mov	r3, r0
 8253 05fe 1A46     		mov	r2, r3
 8254 0600 7B68     		ldr	r3, [r7, #4]
 8255 0602 1344     		add	r3, r3, r2
 8256 0604 414A     		ldr	r2, .L501+12
 8257 0606 1188     		ldrh	r1, [r2]	@ unaligned
 8258 0608 9278     		ldrb	r2, [r2, #2]
 8259 060a 1980     		strh	r1, [r3]	@ unaligned
 8260 060c 9A70     		strb	r2, [r3, #2]
 8261              	.L440:
1604:..\src/command_processing.c ****         }
1605:..\src/command_processing.c ****         
1606:..\src/command_processing.c ****         strcat(info_string, "\r\nDEVICE PARAMETERS\r\n");
 8262              		.loc 1 1606 0
 8263 060e 7868     		ldr	r0, [r7, #4]
 8264 0610 FFF7FEFF 		bl	strlen
 8265 0614 0346     		mov	r3, r0
 8266 0616 1A46     		mov	r2, r3
 8267 0618 7B68     		ldr	r3, [r7, #4]
 8268 061a 1344     		add	r3, r3, r2
 8269 061c 444A     		ldr	r2, .L501+48
 8270 061e 1D46     		mov	r5, r3
 8271 0620 1446     		mov	r4, r2
 8272 0622 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8273 0624 2860     		str	r0, [r5]	@ unaligned
 8274 0626 6960     		str	r1, [r5, #4]	@ unaligned
 8275 0628 AA60     		str	r2, [r5, #8]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 203


 8276 062a EB60     		str	r3, [r5, #12]	@ unaligned
 8277 062c 2068     		ldr	r0, [r4]	@ unaligned
 8278 062e 2861     		str	r0, [r5, #16]	@ unaligned
 8279 0630 A388     		ldrh	r3, [r4, #4]	@ unaligned
 8280 0632 AB82     		strh	r3, [r5, #20]	@ unaligned
1607:..\src/command_processing.c **** 
1608:..\src/command_processing.c ****         strcat(info_string, "PID Controller:\r\n");
 8281              		.loc 1 1608 0
 8282 0634 7868     		ldr	r0, [r7, #4]
 8283 0636 FFF7FEFF 		bl	strlen
 8284 063a 0346     		mov	r3, r0
 8285 063c 1A46     		mov	r2, r3
 8286 063e 7B68     		ldr	r3, [r7, #4]
 8287 0640 1344     		add	r3, r3, r2
 8288 0642 3C4A     		ldr	r2, .L501+52
 8289 0644 1D46     		mov	r5, r3
 8290 0646 1446     		mov	r4, r2
 8291 0648 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8292 064a 2860     		str	r0, [r5]	@ unaligned
 8293 064c 6960     		str	r1, [r5, #4]	@ unaligned
 8294 064e AA60     		str	r2, [r5, #8]	@ unaligned
 8295 0650 EB60     		str	r3, [r5, #12]	@ unaligned
 8296 0652 2388     		ldrh	r3, [r4]	@ unaligned
 8297 0654 2B82     		strh	r3, [r5, #16]	@ unaligned
1609:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 8298              		.loc 1 1609 0
 8299 0656 2B4B     		ldr	r3, .L501+4
 8300 0658 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 8301 065c 032B     		cmp	r3, #3
 8302 065e 73D0     		beq	.L441
1610:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p / 65536));
 8303              		.loc 1 1610 0
 8304 0660 284B     		ldr	r3, .L501+4
 8305 0662 D3F8A430 		ldr	r3, [r3, #164]
 8306 0666 1846     		mov	r0, r3
 8307 0668 FFF7FEFF 		bl	__aeabi_i2d
 8308 066c 4FF00002 		mov	r2, #0
 8309 0670 314B     		ldr	r3, .L501+56
 8310 0672 FFF7FEFF 		bl	__aeabi_ddiv
 8311 0676 0346     		mov	r3, r0
 8312 0678 0C46     		mov	r4, r1
 8313 067a 07F10800 		add	r0, r7, #8
 8314 067e 1A46     		mov	r2, r3
 8315 0680 2346     		mov	r3, r4
 8316 0682 2E49     		ldr	r1, .L501+60
 8317 0684 FFF7FEFF 		bl	sprintf
1611:..\src/command_processing.c ****             strcat(info_string, str);
 8318              		.loc 1 1611 0
 8319 0688 07F10803 		add	r3, r7, #8
 8320 068c 1946     		mov	r1, r3
 8321 068e 7868     		ldr	r0, [r7, #4]
 8322 0690 FFF7FEFF 		bl	strcat
1612:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i / 65536));
 8323              		.loc 1 1612 0
 8324 0694 1B4B     		ldr	r3, .L501+4
 8325 0696 D3F8A830 		ldr	r3, [r3, #168]
 8326 069a 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 204


 8327 069c FFF7FEFF 		bl	__aeabi_i2d
 8328 06a0 4FF00002 		mov	r2, #0
 8329 06a4 244B     		ldr	r3, .L501+56
 8330 06a6 FFF7FEFF 		bl	__aeabi_ddiv
 8331 06aa 0346     		mov	r3, r0
 8332 06ac 0C46     		mov	r4, r1
 8333 06ae 07F10800 		add	r0, r7, #8
 8334 06b2 1A46     		mov	r2, r3
 8335 06b4 2346     		mov	r3, r4
 8336 06b6 2249     		ldr	r1, .L501+64
 8337 06b8 FFF7FEFF 		bl	sprintf
1613:..\src/command_processing.c ****             strcat(info_string, str);
 8338              		.loc 1 1613 0
 8339 06bc 07F10803 		add	r3, r7, #8
 8340 06c0 1946     		mov	r1, r3
 8341 06c2 7868     		ldr	r0, [r7, #4]
 8342 06c4 FFF7FEFF 		bl	strcat
1614:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d / 65536));
 8343              		.loc 1 1614 0
 8344 06c8 0E4B     		ldr	r3, .L501+4
 8345 06ca D3F8AC30 		ldr	r3, [r3, #172]
 8346 06ce 1846     		mov	r0, r3
 8347 06d0 FFF7FEFF 		bl	__aeabi_i2d
 8348 06d4 4FF00002 		mov	r2, #0
 8349 06d8 174B     		ldr	r3, .L501+56
 8350 06da FFF7FEFF 		bl	__aeabi_ddiv
 8351 06de 0346     		mov	r3, r0
 8352 06e0 0C46     		mov	r4, r1
 8353 06e2 07F10800 		add	r0, r7, #8
 8354 06e6 1A46     		mov	r2, r3
 8355 06e8 2346     		mov	r3, r4
 8356 06ea 1649     		ldr	r1, .L501+68
 8357 06ec FFF7FEFF 		bl	sprintf
1615:..\src/command_processing.c ****             strcat(info_string, str);
 8358              		.loc 1 1615 0
 8359 06f0 07F10803 		add	r3, r7, #8
 8360 06f4 1946     		mov	r1, r3
 8361 06f6 7868     		ldr	r0, [r7, #4]
 8362 06f8 FFF7FEFF 		bl	strcat
 8363 06fc 72E0     		b	.L442
 8364              	.L502:
 8365 06fe 00BF     		.align	2
 8366              	.L501:
 8367 0700 00000000 		.word	g_meas
 8368 0704 00000000 		.word	c_mem
 8369 0708 840A0000 		.word	.LC110
 8370 070c 28090000 		.word	.LC87
 8371 0710 00000000 		.word	dev_tension
 8372 0714 900A0000 		.word	.LC111
 8373 0718 00000000 		.word	pow_tension
 8374 071c AC0A0000 		.word	.LC112
 8375 0720 D00A0000 		.word	.LC113
 8376 0724 E40A0000 		.word	.LC114
 8377 0728 000B0000 		.word	.LC115
 8378 072c 280B0000 		.word	.LC116
 8379 0730 3C0B0000 		.word	.LC117
 8380 0734 540B0000 		.word	.LC118
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 205


 8381 0738 0000F040 		.word	1089470464
 8382 073c 680B0000 		.word	.LC119
 8383 0740 740B0000 		.word	.LC120
 8384 0744 800B0000 		.word	.LC121
 8385              	.L441:
1616:..\src/command_processing.c ****         }
1617:..\src/command_processing.c ****         else { 
1618:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_dl / 65536));
 8386              		.loc 1 1618 0
 8387 0748 C94B     		ldr	r3, .L503
 8388 074a D3F8BC30 		ldr	r3, [r3, #188]
 8389 074e 1846     		mov	r0, r3
 8390 0750 FFF7FEFF 		bl	__aeabi_i2d
 8391 0754 4FF00002 		mov	r2, #0
 8392 0758 C64B     		ldr	r3, .L503+4
 8393 075a FFF7FEFF 		bl	__aeabi_ddiv
 8394 075e 0346     		mov	r3, r0
 8395 0760 0C46     		mov	r4, r1
 8396 0762 07F10800 		add	r0, r7, #8
 8397 0766 1A46     		mov	r2, r3
 8398 0768 2346     		mov	r3, r4
 8399 076a C349     		ldr	r1, .L503+8
 8400 076c FFF7FEFF 		bl	sprintf
1619:..\src/command_processing.c ****             strcat(info_string, str);
 8401              		.loc 1 1619 0
 8402 0770 07F10803 		add	r3, r7, #8
 8403 0774 1946     		mov	r1, r3
 8404 0776 7868     		ldr	r0, [r7, #4]
 8405 0778 FFF7FEFF 		bl	strcat
1620:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_dl / 65536));
 8406              		.loc 1 1620 0
 8407 077c BC4B     		ldr	r3, .L503
 8408 077e D3F8C030 		ldr	r3, [r3, #192]
 8409 0782 1846     		mov	r0, r3
 8410 0784 FFF7FEFF 		bl	__aeabi_i2d
 8411 0788 4FF00002 		mov	r2, #0
 8412 078c B94B     		ldr	r3, .L503+4
 8413 078e FFF7FEFF 		bl	__aeabi_ddiv
 8414 0792 0346     		mov	r3, r0
 8415 0794 0C46     		mov	r4, r1
 8416 0796 07F10800 		add	r0, r7, #8
 8417 079a 1A46     		mov	r2, r3
 8418 079c 2346     		mov	r3, r4
 8419 079e B749     		ldr	r1, .L503+12
 8420 07a0 FFF7FEFF 		bl	sprintf
1621:..\src/command_processing.c ****             strcat(info_string, str);
 8421              		.loc 1 1621 0
 8422 07a4 07F10803 		add	r3, r7, #8
 8423 07a8 1946     		mov	r1, r3
 8424 07aa 7868     		ldr	r0, [r7, #4]
 8425 07ac FFF7FEFF 		bl	strcat
1622:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_dl / 65536));
 8426              		.loc 1 1622 0
 8427 07b0 AF4B     		ldr	r3, .L503
 8428 07b2 D3F8C430 		ldr	r3, [r3, #196]
 8429 07b6 1846     		mov	r0, r3
 8430 07b8 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 206


 8431 07bc 4FF00002 		mov	r2, #0
 8432 07c0 AC4B     		ldr	r3, .L503+4
 8433 07c2 FFF7FEFF 		bl	__aeabi_ddiv
 8434 07c6 0346     		mov	r3, r0
 8435 07c8 0C46     		mov	r4, r1
 8436 07ca 07F10800 		add	r0, r7, #8
 8437 07ce 1A46     		mov	r2, r3
 8438 07d0 2346     		mov	r3, r4
 8439 07d2 AB49     		ldr	r1, .L503+16
 8440 07d4 FFF7FEFF 		bl	sprintf
1623:..\src/command_processing.c ****             strcat(info_string, str);
 8441              		.loc 1 1623 0
 8442 07d8 07F10803 		add	r3, r7, #8
 8443 07dc 1946     		mov	r1, r3
 8444 07de 7868     		ldr	r0, [r7, #4]
 8445 07e0 FFF7FEFF 		bl	strcat
 8446              	.L442:
1624:..\src/command_processing.c ****         }
1625:..\src/command_processing.c **** 
1626:..\src/command_processing.c ****         strcat(info_string, "Current PID Controller:\r\n");
 8447              		.loc 1 1626 0
 8448 07e4 7868     		ldr	r0, [r7, #4]
 8449 07e6 FFF7FEFF 		bl	strlen
 8450 07ea 0346     		mov	r3, r0
 8451 07ec 1A46     		mov	r2, r3
 8452 07ee 7B68     		ldr	r3, [r7, #4]
 8453 07f0 1344     		add	r3, r3, r2
 8454 07f2 A44A     		ldr	r2, .L503+20
 8455 07f4 1D46     		mov	r5, r3
 8456 07f6 1446     		mov	r4, r2
 8457 07f8 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8458 07fa 2860     		str	r0, [r5]	@ unaligned
 8459 07fc 6960     		str	r1, [r5, #4]	@ unaligned
 8460 07fe AA60     		str	r2, [r5, #8]	@ unaligned
 8461 0800 EB60     		str	r3, [r5, #12]	@ unaligned
 8462 0802 03CC     		ldmia	r4!, {r0, r1}
 8463 0804 2861     		str	r0, [r5, #16]	@ unaligned
 8464 0806 6961     		str	r1, [r5, #20]	@ unaligned
 8465 0808 2388     		ldrh	r3, [r4]	@ unaligned
 8466 080a 2B83     		strh	r3, [r5, #24]	@ unaligned
1627:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 8467              		.loc 1 1627 0
 8468 080c 984B     		ldr	r3, .L503
 8469 080e 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 8470 0812 032B     		cmp	r3, #3
 8471 0814 4ED0     		beq	.L443
1628:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c / 65536));
 8472              		.loc 1 1628 0
 8473 0816 964B     		ldr	r3, .L503
 8474 0818 D3F8B030 		ldr	r3, [r3, #176]
 8475 081c 1846     		mov	r0, r3
 8476 081e FFF7FEFF 		bl	__aeabi_i2d
 8477 0822 4FF00002 		mov	r2, #0
 8478 0826 934B     		ldr	r3, .L503+4
 8479 0828 FFF7FEFF 		bl	__aeabi_ddiv
 8480 082c 0346     		mov	r3, r0
 8481 082e 0C46     		mov	r4, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 207


 8482 0830 07F10800 		add	r0, r7, #8
 8483 0834 1A46     		mov	r2, r3
 8484 0836 2346     		mov	r3, r4
 8485 0838 8F49     		ldr	r1, .L503+8
 8486 083a FFF7FEFF 		bl	sprintf
1629:..\src/command_processing.c ****             strcat(info_string, str);
 8487              		.loc 1 1629 0
 8488 083e 07F10803 		add	r3, r7, #8
 8489 0842 1946     		mov	r1, r3
 8490 0844 7868     		ldr	r0, [r7, #4]
 8491 0846 FFF7FEFF 		bl	strcat
1630:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c / 65536));
 8492              		.loc 1 1630 0
 8493 084a 894B     		ldr	r3, .L503
 8494 084c D3F8B430 		ldr	r3, [r3, #180]
 8495 0850 1846     		mov	r0, r3
 8496 0852 FFF7FEFF 		bl	__aeabi_i2d
 8497 0856 4FF00002 		mov	r2, #0
 8498 085a 864B     		ldr	r3, .L503+4
 8499 085c FFF7FEFF 		bl	__aeabi_ddiv
 8500 0860 0346     		mov	r3, r0
 8501 0862 0C46     		mov	r4, r1
 8502 0864 07F10800 		add	r0, r7, #8
 8503 0868 1A46     		mov	r2, r3
 8504 086a 2346     		mov	r3, r4
 8505 086c 8349     		ldr	r1, .L503+12
 8506 086e FFF7FEFF 		bl	sprintf
1631:..\src/command_processing.c ****             strcat(info_string, str);
 8507              		.loc 1 1631 0
 8508 0872 07F10803 		add	r3, r7, #8
 8509 0876 1946     		mov	r1, r3
 8510 0878 7868     		ldr	r0, [r7, #4]
 8511 087a FFF7FEFF 		bl	strcat
1632:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c / 65536));
 8512              		.loc 1 1632 0
 8513 087e 7C4B     		ldr	r3, .L503
 8514 0880 D3F8B830 		ldr	r3, [r3, #184]
 8515 0884 1846     		mov	r0, r3
 8516 0886 FFF7FEFF 		bl	__aeabi_i2d
 8517 088a 4FF00002 		mov	r2, #0
 8518 088e 794B     		ldr	r3, .L503+4
 8519 0890 FFF7FEFF 		bl	__aeabi_ddiv
 8520 0894 0346     		mov	r3, r0
 8521 0896 0C46     		mov	r4, r1
 8522 0898 07F10800 		add	r0, r7, #8
 8523 089c 1A46     		mov	r2, r3
 8524 089e 2346     		mov	r3, r4
 8525 08a0 7749     		ldr	r1, .L503+16
 8526 08a2 FFF7FEFF 		bl	sprintf
1633:..\src/command_processing.c ****             strcat(info_string, str);
 8527              		.loc 1 1633 0
 8528 08a6 07F10803 		add	r3, r7, #8
 8529 08aa 1946     		mov	r1, r3
 8530 08ac 7868     		ldr	r0, [r7, #4]
 8531 08ae FFF7FEFF 		bl	strcat
 8532 08b2 4DE0     		b	.L444
 8533              	.L443:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 208


1634:..\src/command_processing.c **** 
1635:..\src/command_processing.c ****         }
1636:..\src/command_processing.c ****         else {
1637:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c_dl / 65536));
 8534              		.loc 1 1637 0
 8535 08b4 6E4B     		ldr	r3, .L503
 8536 08b6 D3F8C830 		ldr	r3, [r3, #200]
 8537 08ba 1846     		mov	r0, r3
 8538 08bc FFF7FEFF 		bl	__aeabi_i2d
 8539 08c0 4FF00002 		mov	r2, #0
 8540 08c4 6B4B     		ldr	r3, .L503+4
 8541 08c6 FFF7FEFF 		bl	__aeabi_ddiv
 8542 08ca 0346     		mov	r3, r0
 8543 08cc 0C46     		mov	r4, r1
 8544 08ce 07F10800 		add	r0, r7, #8
 8545 08d2 1A46     		mov	r2, r3
 8546 08d4 2346     		mov	r3, r4
 8547 08d6 6849     		ldr	r1, .L503+8
 8548 08d8 FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             strcat(info_string, str);
 8549              		.loc 1 1638 0
 8550 08dc 07F10803 		add	r3, r7, #8
 8551 08e0 1946     		mov	r1, r3
 8552 08e2 7868     		ldr	r0, [r7, #4]
 8553 08e4 FFF7FEFF 		bl	strcat
1639:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c_dl / 65536));
 8554              		.loc 1 1639 0
 8555 08e8 614B     		ldr	r3, .L503
 8556 08ea D3F8CC30 		ldr	r3, [r3, #204]
 8557 08ee 1846     		mov	r0, r3
 8558 08f0 FFF7FEFF 		bl	__aeabi_i2d
 8559 08f4 4FF00002 		mov	r2, #0
 8560 08f8 5E4B     		ldr	r3, .L503+4
 8561 08fa FFF7FEFF 		bl	__aeabi_ddiv
 8562 08fe 0346     		mov	r3, r0
 8563 0900 0C46     		mov	r4, r1
 8564 0902 07F10800 		add	r0, r7, #8
 8565 0906 1A46     		mov	r2, r3
 8566 0908 2346     		mov	r3, r4
 8567 090a 5C49     		ldr	r1, .L503+12
 8568 090c FFF7FEFF 		bl	sprintf
1640:..\src/command_processing.c ****             strcat(info_string, str);
 8569              		.loc 1 1640 0
 8570 0910 07F10803 		add	r3, r7, #8
 8571 0914 1946     		mov	r1, r3
 8572 0916 7868     		ldr	r0, [r7, #4]
 8573 0918 FFF7FEFF 		bl	strcat
1641:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c_dl / 65536));
 8574              		.loc 1 1641 0
 8575 091c 544B     		ldr	r3, .L503
 8576 091e D3F8D030 		ldr	r3, [r3, #208]
 8577 0922 1846     		mov	r0, r3
 8578 0924 FFF7FEFF 		bl	__aeabi_i2d
 8579 0928 4FF00002 		mov	r2, #0
 8580 092c 514B     		ldr	r3, .L503+4
 8581 092e FFF7FEFF 		bl	__aeabi_ddiv
 8582 0932 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 209


 8583 0934 0C46     		mov	r4, r1
 8584 0936 07F10800 		add	r0, r7, #8
 8585 093a 1A46     		mov	r2, r3
 8586 093c 2346     		mov	r3, r4
 8587 093e 5049     		ldr	r1, .L503+16
 8588 0940 FFF7FEFF 		bl	sprintf
1642:..\src/command_processing.c ****             strcat(info_string, str);
 8589              		.loc 1 1642 0
 8590 0944 07F10803 		add	r3, r7, #8
 8591 0948 1946     		mov	r1, r3
 8592 094a 7868     		ldr	r0, [r7, #4]
 8593 094c FFF7FEFF 		bl	strcat
 8594              	.L444:
1643:..\src/command_processing.c ****         }
1644:..\src/command_processing.c **** 
1645:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8595              		.loc 1 1645 0
 8596 0950 7868     		ldr	r0, [r7, #4]
 8597 0952 FFF7FEFF 		bl	strlen
 8598 0956 0346     		mov	r3, r0
 8599 0958 1A46     		mov	r2, r3
 8600 095a 7B68     		ldr	r3, [r7, #4]
 8601 095c 1344     		add	r3, r3, r2
 8602 095e 4A4A     		ldr	r2, .L503+24
 8603 0960 1188     		ldrh	r1, [r2]	@ unaligned
 8604 0962 9278     		ldrb	r2, [r2, #2]
 8605 0964 1980     		strh	r1, [r3]	@ unaligned
 8606 0966 9A70     		strb	r2, [r3, #2]
1646:..\src/command_processing.c **** 
1647:..\src/command_processing.c ****         if (c_mem.activ == 0x01)
 8607              		.loc 1 1647 0
 8608 0968 414B     		ldr	r3, .L503
 8609 096a 93F8D430 		ldrb	r3, [r3, #212]	@ zero_extendqisi2
 8610 096e 012B     		cmp	r3, #1
 8611 0970 14D1     		bne	.L445
1648:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 8612              		.loc 1 1648 0
 8613 0972 7868     		ldr	r0, [r7, #4]
 8614 0974 FFF7FEFF 		bl	strlen
 8615 0978 0346     		mov	r3, r0
 8616 097a 1A46     		mov	r2, r3
 8617 097c 7B68     		ldr	r3, [r7, #4]
 8618 097e 1344     		add	r3, r3, r2
 8619 0980 424A     		ldr	r2, .L503+28
 8620 0982 1D46     		mov	r5, r3
 8621 0984 1446     		mov	r4, r2
 8622 0986 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8623 0988 2860     		str	r0, [r5]	@ unaligned
 8624 098a 6960     		str	r1, [r5, #4]	@ unaligned
 8625 098c AA60     		str	r2, [r5, #8]	@ unaligned
 8626 098e EB60     		str	r3, [r5, #12]	@ unaligned
 8627 0990 03CC     		ldmia	r4!, {r0, r1}
 8628 0992 2861     		str	r0, [r5, #16]	@ unaligned
 8629 0994 6961     		str	r1, [r5, #20]	@ unaligned
 8630 0996 2388     		ldrh	r3, [r4]	@ unaligned
 8631 0998 2B83     		strh	r3, [r5, #24]	@ unaligned
 8632 099a 13E0     		b	.L446
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 210


 8633              	.L445:
1649:..\src/command_processing.c ****         else
1650:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 8634              		.loc 1 1650 0
 8635 099c 7868     		ldr	r0, [r7, #4]
 8636 099e FFF7FEFF 		bl	strlen
 8637 09a2 0346     		mov	r3, r0
 8638 09a4 1A46     		mov	r2, r3
 8639 09a6 7B68     		ldr	r3, [r7, #4]
 8640 09a8 1344     		add	r3, r3, r2
 8641 09aa 394A     		ldr	r2, .L503+32
 8642 09ac 1D46     		mov	r5, r3
 8643 09ae 1446     		mov	r4, r2
 8644 09b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8645 09b2 2860     		str	r0, [r5]	@ unaligned
 8646 09b4 6960     		str	r1, [r5, #4]	@ unaligned
 8647 09b6 AA60     		str	r2, [r5, #8]	@ unaligned
 8648 09b8 EB60     		str	r3, [r5, #12]	@ unaligned
 8649 09ba 03CC     		ldmia	r4!, {r0, r1}
 8650 09bc 2861     		str	r0, [r5, #16]	@ unaligned
 8651 09be 6961     		str	r1, [r5, #20]	@ unaligned
 8652 09c0 2378     		ldrb	r3, [r4]
 8653 09c2 2B76     		strb	r3, [r5, #24]
 8654              	.L446:
1651:..\src/command_processing.c **** 
1652:..\src/command_processing.c ****         switch(c_mem.input_mode) {
 8655              		.loc 1 1652 0
 8656 09c4 2A4B     		ldr	r3, .L503
 8657 09c6 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
 8658 09ca 052B     		cmp	r3, #5
 8659 09cc 00F2AF80 		bhi	.L447
 8660 09d0 01A2     		adr	r2, .L449
 8661 09d2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8662 09d6 00BF     		.p2align 2
 8663              	.L449:
 8664 09d8 F1090000 		.word	.L448+1
 8665 09dc 150A0000 		.word	.L450+1
 8666 09e0 3D0A0000 		.word	.L451+1
 8667 09e4 A10A0000 		.word	.L452+1
 8668 09e8 D10A0000 		.word	.L453+1
 8669 09ec FF0A0000 		.word	.L454+1
 8670              		.p2align 1
 8671              	.L448:
1653:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
1654:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 8672              		.loc 1 1654 0
 8673 09f0 7868     		ldr	r0, [r7, #4]
 8674 09f2 FFF7FEFF 		bl	strlen
 8675 09f6 0346     		mov	r3, r0
 8676 09f8 1A46     		mov	r2, r3
 8677 09fa 7B68     		ldr	r3, [r7, #4]
 8678 09fc 1344     		add	r3, r3, r2
 8679 09fe 254A     		ldr	r2, .L503+36
 8680 0a00 1D46     		mov	r5, r3
 8681 0a02 1446     		mov	r4, r2
 8682 0a04 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8683 0a06 2860     		str	r0, [r5]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 211


 8684 0a08 6960     		str	r1, [r5, #4]	@ unaligned
 8685 0a0a AA60     		str	r2, [r5, #8]	@ unaligned
 8686 0a0c EB60     		str	r3, [r5, #12]	@ unaligned
 8687 0a0e 2388     		ldrh	r3, [r4]	@ unaligned
 8688 0a10 2B82     		strh	r3, [r5, #16]	@ unaligned
1655:..\src/command_processing.c ****                 break;
 8689              		.loc 1 1655 0
 8690 0a12 8CE0     		b	.L447
 8691              	.L450:
1656:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
1657:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 8692              		.loc 1 1657 0
 8693 0a14 7868     		ldr	r0, [r7, #4]
 8694 0a16 FFF7FEFF 		bl	strlen
 8695 0a1a 0346     		mov	r3, r0
 8696 0a1c 1A46     		mov	r2, r3
 8697 0a1e 7B68     		ldr	r3, [r7, #4]
 8698 0a20 1344     		add	r3, r3, r2
 8699 0a22 1D4A     		ldr	r2, .L503+40
 8700 0a24 1D46     		mov	r5, r3
 8701 0a26 1446     		mov	r4, r2
 8702 0a28 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8703 0a2a 2860     		str	r0, [r5]	@ unaligned
 8704 0a2c 6960     		str	r1, [r5, #4]	@ unaligned
 8705 0a2e AA60     		str	r2, [r5, #8]	@ unaligned
 8706 0a30 EB60     		str	r3, [r5, #12]	@ unaligned
 8707 0a32 2068     		ldr	r0, [r4]	@ unaligned
 8708 0a34 2861     		str	r0, [r5, #16]	@ unaligned
 8709 0a36 2379     		ldrb	r3, [r4, #4]
 8710 0a38 2B75     		strb	r3, [r5, #20]
1658:..\src/command_processing.c ****                 break;
 8711              		.loc 1 1658 0
 8712 0a3a 78E0     		b	.L447
 8713              	.L451:
1659:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
1660:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 8714              		.loc 1 1660 0
 8715 0a3c 7868     		ldr	r0, [r7, #4]
 8716 0a3e FFF7FEFF 		bl	strlen
 8717 0a42 0346     		mov	r3, r0
 8718 0a44 1A46     		mov	r2, r3
 8719 0a46 7B68     		ldr	r3, [r7, #4]
 8720 0a48 1344     		add	r3, r3, r2
 8721 0a4a 144A     		ldr	r2, .L503+44
 8722 0a4c 1D46     		mov	r5, r3
 8723 0a4e 1446     		mov	r4, r2
 8724 0a50 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8725 0a52 2860     		str	r0, [r5]	@ unaligned
 8726 0a54 6960     		str	r1, [r5, #4]	@ unaligned
 8727 0a56 AA60     		str	r2, [r5, #8]	@ unaligned
 8728 0a58 EB60     		str	r3, [r5, #12]	@ unaligned
 8729 0a5a 07CC     		ldmia	r4!, {r0, r1, r2}
 8730 0a5c 2861     		str	r0, [r5, #16]	@ unaligned
 8731 0a5e 6961     		str	r1, [r5, #20]	@ unaligned
 8732 0a60 AA61     		str	r2, [r5, #24]	@ unaligned
 8733 0a62 2388     		ldrh	r3, [r4]	@ unaligned
 8734 0a64 A278     		ldrb	r2, [r4, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 212


 8735 0a66 AB83     		strh	r3, [r5, #28]	@ unaligned
 8736 0a68 1346     		mov	r3, r2
 8737 0a6a AB77     		strb	r3, [r5, #30]
1661:..\src/command_processing.c ****                 break;
 8738              		.loc 1 1661 0
 8739 0a6c 5FE0     		b	.L447
 8740              	.L504:
 8741 0a6e 00BF     		.align	2
 8742              	.L503:
 8743 0a70 00000000 		.word	c_mem
 8744 0a74 0000F040 		.word	1089470464
 8745 0a78 680B0000 		.word	.LC119
 8746 0a7c 740B0000 		.word	.LC120
 8747 0a80 800B0000 		.word	.LC121
 8748 0a84 8C0B0000 		.word	.LC122
 8749 0a88 28090000 		.word	.LC87
 8750 0a8c A80B0000 		.word	.LC123
 8751 0a90 C40B0000 		.word	.LC124
 8752 0a94 E00B0000 		.word	.LC125
 8753 0a98 F40B0000 		.word	.LC126
 8754 0a9c 0C0C0000 		.word	.LC127
 8755              	.L452:
1662:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
1663:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 8756              		.loc 1 1663 0
 8757 0aa0 7868     		ldr	r0, [r7, #4]
 8758 0aa2 FFF7FEFF 		bl	strlen
 8759 0aa6 0346     		mov	r3, r0
 8760 0aa8 1A46     		mov	r2, r3
 8761 0aaa 7B68     		ldr	r3, [r7, #4]
 8762 0aac 1344     		add	r3, r3, r2
 8763 0aae C24A     		ldr	r2, .L505
 8764 0ab0 1D46     		mov	r5, r3
 8765 0ab2 1446     		mov	r4, r2
 8766 0ab4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8767 0ab6 2860     		str	r0, [r5]	@ unaligned
 8768 0ab8 6960     		str	r1, [r5, #4]	@ unaligned
 8769 0aba AA60     		str	r2, [r5, #8]	@ unaligned
 8770 0abc EB60     		str	r3, [r5, #12]	@ unaligned
 8771 0abe 03CC     		ldmia	r4!, {r0, r1}
 8772 0ac0 2861     		str	r0, [r5, #16]	@ unaligned
 8773 0ac2 6961     		str	r1, [r5, #20]	@ unaligned
 8774 0ac4 2388     		ldrh	r3, [r4]	@ unaligned
 8775 0ac6 A278     		ldrb	r2, [r4, #2]
 8776 0ac8 2B83     		strh	r3, [r5, #24]	@ unaligned
 8777 0aca 1346     		mov	r3, r2
 8778 0acc AB76     		strb	r3, [r5, #26]
1664:..\src/command_processing.c ****                 break;
 8779              		.loc 1 1664 0
 8780 0ace 2EE0     		b	.L447
 8781              	.L453:
1665:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
1666:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 8782              		.loc 1 1666 0
 8783 0ad0 7868     		ldr	r0, [r7, #4]
 8784 0ad2 FFF7FEFF 		bl	strlen
 8785 0ad6 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 213


 8786 0ad8 1A46     		mov	r2, r3
 8787 0ada 7B68     		ldr	r3, [r7, #4]
 8788 0adc 1344     		add	r3, r3, r2
 8789 0ade B74A     		ldr	r2, .L505+4
 8790 0ae0 1C46     		mov	r4, r3
 8791 0ae2 1546     		mov	r5, r2
 8792 0ae4 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8793 0ae6 2060     		str	r0, [r4]	@ unaligned
 8794 0ae8 6160     		str	r1, [r4, #4]	@ unaligned
 8795 0aea A260     		str	r2, [r4, #8]	@ unaligned
 8796 0aec E360     		str	r3, [r4, #12]	@ unaligned
 8797 0aee 2868     		ldr	r0, [r5]	@ unaligned
 8798 0af0 2061     		str	r0, [r4, #16]	@ unaligned
 8799 0af2 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 8800 0af4 AA79     		ldrb	r2, [r5, #6]
 8801 0af6 A382     		strh	r3, [r4, #20]	@ unaligned
 8802 0af8 1346     		mov	r3, r2
 8803 0afa A375     		strb	r3, [r4, #22]
1667:..\src/command_processing.c ****                 break;
 8804              		.loc 1 1667 0
 8805 0afc 17E0     		b	.L447
 8806              	.L454:
1668:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
1669:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 8807              		.loc 1 1669 0
 8808 0afe 7868     		ldr	r0, [r7, #4]
 8809 0b00 FFF7FEFF 		bl	strlen
 8810 0b04 0346     		mov	r3, r0
 8811 0b06 1A46     		mov	r2, r3
 8812 0b08 7B68     		ldr	r3, [r7, #4]
 8813 0b0a 1344     		add	r3, r3, r2
 8814 0b0c AC4A     		ldr	r2, .L505+8
 8815 0b0e 1D46     		mov	r5, r3
 8816 0b10 1446     		mov	r4, r2
 8817 0b12 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8818 0b14 2860     		str	r0, [r5]	@ unaligned
 8819 0b16 6960     		str	r1, [r5, #4]	@ unaligned
 8820 0b18 AA60     		str	r2, [r5, #8]	@ unaligned
 8821 0b1a EB60     		str	r3, [r5, #12]	@ unaligned
 8822 0b1c 03CC     		ldmia	r4!, {r0, r1}
 8823 0b1e 2861     		str	r0, [r5, #16]	@ unaligned
 8824 0b20 6961     		str	r1, [r5, #20]	@ unaligned
 8825 0b22 2388     		ldrh	r3, [r4]	@ unaligned
 8826 0b24 A278     		ldrb	r2, [r4, #2]
 8827 0b26 2B83     		strh	r3, [r5, #24]	@ unaligned
 8828 0b28 1346     		mov	r3, r2
 8829 0b2a AB76     		strb	r3, [r5, #26]
1670:..\src/command_processing.c ****                 break;
 8830              		.loc 1 1670 0
 8831 0b2c 00BF     		nop
 8832              	.L447:
1671:..\src/command_processing.c ****         }
1672:..\src/command_processing.c **** 
1673:..\src/command_processing.c ****         switch(c_mem.control_mode) {
 8833              		.loc 1 1673 0
 8834 0b2e A54B     		ldr	r3, .L505+12
 8835 0b30 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 214


 8836 0b34 032B     		cmp	r3, #3
 8837 0b36 64D8     		bhi	.L496
 8838 0b38 01A2     		adr	r2, .L457
 8839 0b3a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8840 0b3e 00BF     		.p2align 2
 8841              	.L457:
 8842 0b40 510B0000 		.word	.L456+1
 8843 0b44 7B0B0000 		.word	.L458+1
 8844 0b48 9F0B0000 		.word	.L459+1
 8845 0b4c C50B0000 		.word	.L460+1
 8846              		.p2align 1
 8847              	.L456:
1674:..\src/command_processing.c ****             case CONTROL_ANGLE:
1675:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 8848              		.loc 1 1675 0
 8849 0b50 7868     		ldr	r0, [r7, #4]
 8850 0b52 FFF7FEFF 		bl	strlen
 8851 0b56 0346     		mov	r3, r0
 8852 0b58 1A46     		mov	r2, r3
 8853 0b5a 7B68     		ldr	r3, [r7, #4]
 8854 0b5c 1344     		add	r3, r3, r2
 8855 0b5e 9A4A     		ldr	r2, .L505+16
 8856 0b60 1D46     		mov	r5, r3
 8857 0b62 1446     		mov	r4, r2
 8858 0b64 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8859 0b66 2860     		str	r0, [r5]	@ unaligned
 8860 0b68 6960     		str	r1, [r5, #4]	@ unaligned
 8861 0b6a AA60     		str	r2, [r5, #8]	@ unaligned
 8862 0b6c EB60     		str	r3, [r5, #12]	@ unaligned
 8863 0b6e 03CC     		ldmia	r4!, {r0, r1}
 8864 0b70 2861     		str	r0, [r5, #16]	@ unaligned
 8865 0b72 6961     		str	r1, [r5, #20]	@ unaligned
 8866 0b74 2378     		ldrb	r3, [r4]
 8867 0b76 2B76     		strb	r3, [r5, #24]
1676:..\src/command_processing.c ****                 break;
 8868              		.loc 1 1676 0
 8869 0b78 44E0     		b	.L461
 8870              	.L458:
1677:..\src/command_processing.c ****             case CONTROL_PWM:
1678:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 8871              		.loc 1 1678 0
 8872 0b7a 7868     		ldr	r0, [r7, #4]
 8873 0b7c FFF7FEFF 		bl	strlen
 8874 0b80 0346     		mov	r3, r0
 8875 0b82 1A46     		mov	r2, r3
 8876 0b84 7B68     		ldr	r3, [r7, #4]
 8877 0b86 1344     		add	r3, r3, r2
 8878 0b88 904A     		ldr	r2, .L505+20
 8879 0b8a 1D46     		mov	r5, r3
 8880 0b8c 1446     		mov	r4, r2
 8881 0b8e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8882 0b90 2860     		str	r0, [r5]	@ unaligned
 8883 0b92 6960     		str	r1, [r5, #4]	@ unaligned
 8884 0b94 AA60     		str	r2, [r5, #8]	@ unaligned
 8885 0b96 EB60     		str	r3, [r5, #12]	@ unaligned
 8886 0b98 2068     		ldr	r0, [r4]	@ unaligned
 8887 0b9a 2861     		str	r0, [r5, #16]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 215


1679:..\src/command_processing.c ****                 break;
 8888              		.loc 1 1679 0
 8889 0b9c 32E0     		b	.L461
 8890              	.L459:
1680:..\src/command_processing.c ****             case CONTROL_CURRENT:
1681:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 8891              		.loc 1 1681 0
 8892 0b9e 7868     		ldr	r0, [r7, #4]
 8893 0ba0 FFF7FEFF 		bl	strlen
 8894 0ba4 0346     		mov	r3, r0
 8895 0ba6 1A46     		mov	r2, r3
 8896 0ba8 7B68     		ldr	r3, [r7, #4]
 8897 0baa 1344     		add	r3, r3, r2
 8898 0bac 884A     		ldr	r2, .L505+24
 8899 0bae 1D46     		mov	r5, r3
 8900 0bb0 1446     		mov	r4, r2
 8901 0bb2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8902 0bb4 2860     		str	r0, [r5]	@ unaligned
 8903 0bb6 6960     		str	r1, [r5, #4]	@ unaligned
 8904 0bb8 AA60     		str	r2, [r5, #8]	@ unaligned
 8905 0bba EB60     		str	r3, [r5, #12]	@ unaligned
 8906 0bbc 03CC     		ldmia	r4!, {r0, r1}
 8907 0bbe 2861     		str	r0, [r5, #16]	@ unaligned
 8908 0bc0 6961     		str	r1, [r5, #20]	@ unaligned
1682:..\src/command_processing.c ****                 break;
 8909              		.loc 1 1682 0
 8910 0bc2 1FE0     		b	.L461
 8911              	.L460:
1683:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
1684:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 8912              		.loc 1 1684 0
 8913 0bc4 7868     		ldr	r0, [r7, #4]
 8914 0bc6 FFF7FEFF 		bl	strlen
 8915 0bca 0346     		mov	r3, r0
 8916 0bcc 1A46     		mov	r2, r3
 8917 0bce 7B68     		ldr	r3, [r7, #4]
 8918 0bd0 1344     		add	r3, r3, r2
 8919 0bd2 804A     		ldr	r2, .L505+28
 8920 0bd4 1446     		mov	r4, r2
 8921 0bd6 9E46     		mov	lr, r3
 8922 0bd8 04F1200C 		add	ip, r4, #32
 8923              	.L462:
 8924 0bdc 7546     		mov	r5, lr
 8925 0bde 2646     		mov	r6, r4
 8926 0be0 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8927 0be2 2860     		str	r0, [r5]	@ unaligned
 8928 0be4 6960     		str	r1, [r5, #4]	@ unaligned
 8929 0be6 AA60     		str	r2, [r5, #8]	@ unaligned
 8930 0be8 EB60     		str	r3, [r5, #12]	@ unaligned
 8931 0bea 1034     		adds	r4, r4, #16
 8932 0bec 0EF1100E 		add	lr, lr, #16
 8933 0bf0 6445     		cmp	r4, ip
 8934 0bf2 F3D1     		bne	.L462
 8935 0bf4 7346     		mov	r3, lr
 8936 0bf6 2246     		mov	r2, r4
 8937 0bf8 1068     		ldr	r0, [r2]	@ unaligned
 8938 0bfa 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 216


 8939 0bfc 1279     		ldrb	r2, [r2, #4]
 8940 0bfe 1A71     		strb	r2, [r3, #4]
1685:..\src/command_processing.c ****                 break;
 8941              		.loc 1 1685 0
 8942 0c00 00E0     		b	.L461
 8943              	.L496:
1686:..\src/command_processing.c ****             default:
1687:..\src/command_processing.c ****                 break;
 8944              		.loc 1 1687 0
 8945 0c02 00BF     		nop
 8946              	.L461:
1688:..\src/command_processing.c ****         }
1689:..\src/command_processing.c **** 
1690:..\src/command_processing.c ****         if (c_mem.double_encoder_on_off)
 8947              		.loc 1 1690 0
 8948 0c04 6F4B     		ldr	r3, .L505+12
 8949 0c06 93F81931 		ldrb	r3, [r3, #281]	@ zero_extendqisi2
 8950 0c0a 002B     		cmp	r3, #0
 8951 0c0c 1CD0     		beq	.L463
1691:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 8952              		.loc 1 1691 0
 8953 0c0e 7868     		ldr	r0, [r7, #4]
 8954 0c10 FFF7FEFF 		bl	strlen
 8955 0c14 0346     		mov	r3, r0
 8956 0c16 1A46     		mov	r2, r3
 8957 0c18 7B68     		ldr	r3, [r7, #4]
 8958 0c1a 1344     		add	r3, r3, r2
 8959 0c1c 6E4A     		ldr	r2, .L505+32
 8960 0c1e 1446     		mov	r4, r2
 8961 0c20 9E46     		mov	lr, r3
 8962 0c22 04F1200C 		add	ip, r4, #32
 8963              	.L464:
 8964 0c26 7546     		mov	r5, lr
 8965 0c28 2646     		mov	r6, r4
 8966 0c2a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8967 0c2c 2860     		str	r0, [r5]	@ unaligned
 8968 0c2e 6960     		str	r1, [r5, #4]	@ unaligned
 8969 0c30 AA60     		str	r2, [r5, #8]	@ unaligned
 8970 0c32 EB60     		str	r3, [r5, #12]	@ unaligned
 8971 0c34 1034     		adds	r4, r4, #16
 8972 0c36 0EF1100E 		add	lr, lr, #16
 8973 0c3a 6445     		cmp	r4, ip
 8974 0c3c F3D1     		bne	.L464
 8975 0c3e 7346     		mov	r3, lr
 8976 0c40 2246     		mov	r2, r4
 8977 0c42 1278     		ldrb	r2, [r2]
 8978 0c44 1A70     		strb	r2, [r3]
 8979 0c46 13E0     		b	.L465
 8980              	.L463:
1692:..\src/command_processing.c ****         else
1693:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 8981              		.loc 1 1693 0
 8982 0c48 7868     		ldr	r0, [r7, #4]
 8983 0c4a FFF7FEFF 		bl	strlen
 8984 0c4e 0346     		mov	r3, r0
 8985 0c50 1A46     		mov	r2, r3
 8986 0c52 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 217


 8987 0c54 1344     		add	r3, r3, r2
 8988 0c56 614A     		ldr	r2, .L505+36
 8989 0c58 1C46     		mov	r4, r3
 8990 0c5a 1546     		mov	r5, r2
 8991 0c5c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8992 0c5e 2060     		str	r0, [r4]	@ unaligned
 8993 0c60 6160     		str	r1, [r4, #4]	@ unaligned
 8994 0c62 A260     		str	r2, [r4, #8]	@ unaligned
 8995 0c64 E360     		str	r3, [r4, #12]	@ unaligned
 8996 0c66 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8997 0c68 2061     		str	r0, [r4, #16]	@ unaligned
 8998 0c6a 6161     		str	r1, [r4, #20]	@ unaligned
 8999 0c6c A261     		str	r2, [r4, #24]	@ unaligned
 9000 0c6e E361     		str	r3, [r4, #28]	@ unaligned
 9001              	.L465:
1694:..\src/command_processing.c **** 
1695:..\src/command_processing.c ****         sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)c_mem.motor_handle_ratio);
 9002              		.loc 1 1695 0
 9003 0c70 544B     		ldr	r3, .L505+12
 9004 0c72 93F91A31 		ldrsb	r3, [r3, #282]
 9005 0c76 1A46     		mov	r2, r3
 9006 0c78 07F10803 		add	r3, r7, #8
 9007 0c7c 5849     		ldr	r1, .L505+40
 9008 0c7e 1846     		mov	r0, r3
 9009 0c80 FFF7FEFF 		bl	sprintf
1696:..\src/command_processing.c ****         strcat(info_string, str);
 9010              		.loc 1 1696 0
 9011 0c84 07F10803 		add	r3, r7, #8
 9012 0c88 1946     		mov	r1, r3
 9013 0c8a 7868     		ldr	r0, [r7, #4]
 9014 0c8c FFF7FEFF 		bl	strcat
1697:..\src/command_processing.c **** 
1698:..\src/command_processing.c ****         strcat(info_string, "Sensor resolution:\r\n");
 9015              		.loc 1 1698 0
 9016 0c90 7868     		ldr	r0, [r7, #4]
 9017 0c92 FFF7FEFF 		bl	strlen
 9018 0c96 0346     		mov	r3, r0
 9019 0c98 1A46     		mov	r2, r3
 9020 0c9a 7B68     		ldr	r3, [r7, #4]
 9021 0c9c 1344     		add	r3, r3, r2
 9022 0c9e 514A     		ldr	r2, .L505+44
 9023 0ca0 1D46     		mov	r5, r3
 9024 0ca2 1446     		mov	r4, r2
 9025 0ca4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9026 0ca6 2860     		str	r0, [r5]	@ unaligned
 9027 0ca8 6960     		str	r1, [r5, #4]	@ unaligned
 9028 0caa AA60     		str	r2, [r5, #8]	@ unaligned
 9029 0cac EB60     		str	r3, [r5, #12]	@ unaligned
 9030 0cae 2068     		ldr	r0, [r4]	@ unaligned
 9031 0cb0 2861     		str	r0, [r5, #16]	@ unaligned
 9032 0cb2 2379     		ldrb	r3, [r4, #4]
 9033 0cb4 2B75     		strb	r3, [r5, #20]
1699:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 9034              		.loc 1 1699 0
 9035 0cb6 0023     		movs	r3, #0
 9036 0cb8 FB66     		str	r3, [r7, #108]
 9037 0cba 21E0     		b	.L466
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 218


 9038              	.L467:
1700:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 9039              		.loc 1 1700 0 discriminator 3
 9040 0cbc FB6E     		ldr	r3, [r7, #108]
 9041 0cbe 591C     		adds	r1, r3, #1
 9042 0cc0 404A     		ldr	r2, .L505+12
 9043 0cc2 FB6E     		ldr	r3, [r7, #108]
 9044 0cc4 1344     		add	r3, r3, r2
 9045 0cc6 D733     		adds	r3, r3, #215
 9046 0cc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9047 0cca 07F10800 		add	r0, r7, #8
 9048 0cce 0A46     		mov	r2, r1
 9049 0cd0 4549     		ldr	r1, .L505+48
 9050 0cd2 FFF7FEFF 		bl	sprintf
1701:..\src/command_processing.c ****             strcat(info_string, str);
 9051              		.loc 1 1701 0 discriminator 3
 9052 0cd6 07F10803 		add	r3, r7, #8
 9053 0cda 1946     		mov	r1, r3
 9054 0cdc 7868     		ldr	r0, [r7, #4]
 9055 0cde FFF7FEFF 		bl	strcat
1702:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9056              		.loc 1 1702 0 discriminator 3
 9057 0ce2 7868     		ldr	r0, [r7, #4]
 9058 0ce4 FFF7FEFF 		bl	strlen
 9059 0ce8 0346     		mov	r3, r0
 9060 0cea 1A46     		mov	r2, r3
 9061 0cec 7B68     		ldr	r3, [r7, #4]
 9062 0cee 1344     		add	r3, r3, r2
 9063 0cf0 3E4A     		ldr	r2, .L505+52
 9064 0cf2 1188     		ldrh	r1, [r2]	@ unaligned
 9065 0cf4 9278     		ldrb	r2, [r2, #2]
 9066 0cf6 1980     		strh	r1, [r3]	@ unaligned
 9067 0cf8 9A70     		strb	r2, [r3, #2]
1699:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 9068              		.loc 1 1699 0 discriminator 3
 9069 0cfa FB6E     		ldr	r3, [r7, #108]
 9070 0cfc 0133     		adds	r3, r3, #1
 9071 0cfe FB66     		str	r3, [r7, #108]
 9072              	.L466:
1699:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 9073              		.loc 1 1699 0 is_stmt 0 discriminator 1
 9074 0d00 FB6E     		ldr	r3, [r7, #108]
 9075 0d02 022B     		cmp	r3, #2
 9076 0d04 DADD     		ble	.L467
1703:..\src/command_processing.c ****         }
1704:..\src/command_processing.c **** 
1705:..\src/command_processing.c ****         strcat(info_string, "Measurement Offset:\r\n");
 9077              		.loc 1 1705 0 is_stmt 1
 9078 0d06 7868     		ldr	r0, [r7, #4]
 9079 0d08 FFF7FEFF 		bl	strlen
 9080 0d0c 0346     		mov	r3, r0
 9081 0d0e 1A46     		mov	r2, r3
 9082 0d10 7B68     		ldr	r3, [r7, #4]
 9083 0d12 1344     		add	r3, r3, r2
 9084 0d14 364A     		ldr	r2, .L505+56
 9085 0d16 1D46     		mov	r5, r3
 9086 0d18 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 219


 9087 0d1a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9088 0d1c 2860     		str	r0, [r5]	@ unaligned
 9089 0d1e 6960     		str	r1, [r5, #4]	@ unaligned
 9090 0d20 AA60     		str	r2, [r5, #8]	@ unaligned
 9091 0d22 EB60     		str	r3, [r5, #12]	@ unaligned
 9092 0d24 2068     		ldr	r0, [r4]	@ unaligned
 9093 0d26 2861     		str	r0, [r5, #16]	@ unaligned
 9094 0d28 A388     		ldrh	r3, [r4, #4]	@ unaligned
 9095 0d2a AB82     		strh	r3, [r5, #20]	@ unaligned
1706:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 9096              		.loc 1 1706 0
 9097 0d2c 0023     		movs	r3, #0
 9098 0d2e FB66     		str	r3, [r7, #108]
 9099 0d30 28E0     		b	.L468
 9100              	.L469:
1707:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 9101              		.loc 1 1707 0 discriminator 3
 9102 0d32 FB6E     		ldr	r3, [r7, #108]
 9103 0d34 5C1C     		adds	r4, r3, #1
 9104 0d36 234A     		ldr	r2, .L505+12
 9105 0d38 FB6E     		ldr	r3, [r7, #108]
 9106 0d3a 3633     		adds	r3, r3, #54
 9107 0d3c 9B00     		lsls	r3, r3, #2
 9108 0d3e 1344     		add	r3, r3, r2
 9109 0d40 5B68     		ldr	r3, [r3, #4]
 9110 0d42 2049     		ldr	r1, .L505+12
 9111 0d44 FA6E     		ldr	r2, [r7, #108]
 9112 0d46 0A44     		add	r2, r2, r1
 9113 0d48 D732     		adds	r2, r2, #215
 9114 0d4a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9115 0d4c 1341     		asrs	r3, r3, r2
 9116 0d4e 07F10800 		add	r0, r7, #8
 9117 0d52 2246     		mov	r2, r4
 9118 0d54 2749     		ldr	r1, .L505+60
 9119 0d56 FFF7FEFF 		bl	sprintf
1708:..\src/command_processing.c ****             strcat(info_string, str);
 9120              		.loc 1 1708 0 discriminator 3
 9121 0d5a 07F10803 		add	r3, r7, #8
 9122 0d5e 1946     		mov	r1, r3
 9123 0d60 7868     		ldr	r0, [r7, #4]
 9124 0d62 FFF7FEFF 		bl	strcat
1709:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9125              		.loc 1 1709 0 discriminator 3
 9126 0d66 7868     		ldr	r0, [r7, #4]
 9127 0d68 FFF7FEFF 		bl	strlen
 9128 0d6c 0346     		mov	r3, r0
 9129 0d6e 1A46     		mov	r2, r3
 9130 0d70 7B68     		ldr	r3, [r7, #4]
 9131 0d72 1344     		add	r3, r3, r2
 9132 0d74 1D4A     		ldr	r2, .L505+52
 9133 0d76 1188     		ldrh	r1, [r2]	@ unaligned
 9134 0d78 9278     		ldrb	r2, [r2, #2]
 9135 0d7a 1980     		strh	r1, [r3]	@ unaligned
 9136 0d7c 9A70     		strb	r2, [r3, #2]
1706:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 9137              		.loc 1 1706 0 discriminator 3
 9138 0d7e FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 220


 9139 0d80 0133     		adds	r3, r3, #1
 9140 0d82 FB66     		str	r3, [r7, #108]
 9141              	.L468:
1706:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 9142              		.loc 1 1706 0 is_stmt 0 discriminator 1
 9143 0d84 FB6E     		ldr	r3, [r7, #108]
 9144 0d86 022B     		cmp	r3, #2
 9145 0d88 D3DD     		ble	.L469
1710:..\src/command_processing.c ****         }
1711:..\src/command_processing.c ****             
1712:..\src/command_processing.c ****         strcat(info_string, "Measurement Multiplier:\r\n");
 9146              		.loc 1 1712 0 is_stmt 1
 9147 0d8a 7868     		ldr	r0, [r7, #4]
 9148 0d8c FFF7FEFF 		bl	strlen
 9149 0d90 0346     		mov	r3, r0
 9150 0d92 1A46     		mov	r2, r3
 9151 0d94 7B68     		ldr	r3, [r7, #4]
 9152 0d96 1344     		add	r3, r3, r2
 9153 0d98 174A     		ldr	r2, .L505+64
 9154 0d9a 1D46     		mov	r5, r3
 9155 0d9c 1446     		mov	r4, r2
 9156 0d9e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9157 0da0 2860     		str	r0, [r5]	@ unaligned
 9158 0da2 6960     		str	r1, [r5, #4]	@ unaligned
 9159 0da4 AA60     		str	r2, [r5, #8]	@ unaligned
 9160 0da6 EB60     		str	r3, [r5, #12]	@ unaligned
 9161 0da8 03CC     		ldmia	r4!, {r0, r1}
 9162 0daa 2861     		str	r0, [r5, #16]	@ unaligned
 9163 0dac 6961     		str	r1, [r5, #20]	@ unaligned
 9164 0dae 2388     		ldrh	r3, [r4]	@ unaligned
 9165 0db0 2B83     		strh	r3, [r5, #24]	@ unaligned
1713:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 9166              		.loc 1 1713 0
 9167 0db2 0023     		movs	r3, #0
 9168 0db4 FB66     		str	r3, [r7, #108]
 9169 0db6 4AE0     		b	.L470
 9170              	.L506:
 9171              		.align	2
 9172              	.L505:
 9173 0db8 2C0C0000 		.word	.LC128
 9174 0dbc 480C0000 		.word	.LC129
 9175 0dc0 600C0000 		.word	.LC130
 9176 0dc4 00000000 		.word	c_mem
 9177 0dc8 7C0C0000 		.word	.LC131
 9178 0dcc 980C0000 		.word	.LC132
 9179 0dd0 AC0C0000 		.word	.LC133
 9180 0dd4 C40C0000 		.word	.LC134
 9181 0dd8 EC0C0000 		.word	.LC135
 9182 0ddc 100D0000 		.word	.LC136
 9183 0de0 300D0000 		.word	.LC137
 9184 0de4 4C0D0000 		.word	.LC138
 9185 0de8 840A0000 		.word	.LC110
 9186 0dec 28090000 		.word	.LC87
 9187 0df0 640D0000 		.word	.LC139
 9188 0df4 7C0D0000 		.word	.LC140
 9189 0df8 880D0000 		.word	.LC141
 9190              	.L471:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 221


1714:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 9191              		.loc 1 1714 0 discriminator 3
 9192 0dfc FB6E     		ldr	r3, [r7, #108]
 9193 0dfe 5D1C     		adds	r5, r3, #1
 9194 0e00 C14A     		ldr	r2, .L507
 9195 0e02 FB6E     		ldr	r3, [r7, #108]
 9196 0e04 3A33     		adds	r3, r3, #58
 9197 0e06 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 9198 0e0a 1846     		mov	r0, r3
 9199 0e0c FFF7FEFF 		bl	__aeabi_f2d
 9200 0e10 0346     		mov	r3, r0
 9201 0e12 0C46     		mov	r4, r1
 9202 0e14 07F10800 		add	r0, r7, #8
 9203 0e18 CDE90034 		strd	r3, [sp]
 9204 0e1c 2A46     		mov	r2, r5
 9205 0e1e BB49     		ldr	r1, .L507+4
 9206 0e20 FFF7FEFF 		bl	sprintf
1715:..\src/command_processing.c ****             strcat(info_string, str);
 9207              		.loc 1 1715 0 discriminator 3
 9208 0e24 07F10803 		add	r3, r7, #8
 9209 0e28 1946     		mov	r1, r3
 9210 0e2a 7868     		ldr	r0, [r7, #4]
 9211 0e2c FFF7FEFF 		bl	strcat
1716:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 9212              		.loc 1 1716 0 discriminator 3
 9213 0e30 7868     		ldr	r0, [r7, #4]
 9214 0e32 FFF7FEFF 		bl	strlen
 9215 0e36 0346     		mov	r3, r0
 9216 0e38 1A46     		mov	r2, r3
 9217 0e3a 7B68     		ldr	r3, [r7, #4]
 9218 0e3c 1344     		add	r3, r3, r2
 9219 0e3e B44A     		ldr	r2, .L507+8
 9220 0e40 1188     		ldrh	r1, [r2]	@ unaligned
 9221 0e42 9278     		ldrb	r2, [r2, #2]
 9222 0e44 1980     		strh	r1, [r3]	@ unaligned
 9223 0e46 9A70     		strb	r2, [r3, #2]
1713:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 9224              		.loc 1 1713 0 discriminator 3
 9225 0e48 FB6E     		ldr	r3, [r7, #108]
 9226 0e4a 0133     		adds	r3, r3, #1
 9227 0e4c FB66     		str	r3, [r7, #108]
 9228              	.L470:
1713:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 9229              		.loc 1 1713 0 is_stmt 0 discriminator 1
 9230 0e4e FB6E     		ldr	r3, [r7, #108]
 9231 0e50 022B     		cmp	r3, #2
 9232 0e52 D3DD     		ble	.L471
1717:..\src/command_processing.c ****         }
1718:..\src/command_processing.c ****         
1719:..\src/command_processing.c ****         strcat(info_string, "Current lookup table:\r\n");
 9233              		.loc 1 1719 0 is_stmt 1
 9234 0e54 7868     		ldr	r0, [r7, #4]
 9235 0e56 FFF7FEFF 		bl	strlen
 9236 0e5a 0346     		mov	r3, r0
 9237 0e5c 1A46     		mov	r2, r3
 9238 0e5e 7B68     		ldr	r3, [r7, #4]
 9239 0e60 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 222


 9240 0e62 AC4A     		ldr	r2, .L507+12
 9241 0e64 1D46     		mov	r5, r3
 9242 0e66 1446     		mov	r4, r2
 9243 0e68 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9244 0e6a 2860     		str	r0, [r5]	@ unaligned
 9245 0e6c 6960     		str	r1, [r5, #4]	@ unaligned
 9246 0e6e AA60     		str	r2, [r5, #8]	@ unaligned
 9247 0e70 EB60     		str	r3, [r5, #12]	@ unaligned
 9248 0e72 03CC     		ldmia	r4!, {r0, r1}
 9249 0e74 2861     		str	r0, [r5, #16]	@ unaligned
 9250 0e76 6961     		str	r1, [r5, #20]	@ unaligned
1720:..\src/command_processing.c ****         sprintf(str, "p[0] - p[2]: %f, %f, %f\n", c_mem.curr_lookup[0], c_mem.curr_lookup[1], c_mem
 9251              		.loc 1 1720 0
 9252 0e78 A34B     		ldr	r3, .L507
 9253 0e7a D3F81C31 		ldr	r3, [r3, #284]	@ float
 9254 0e7e 1846     		mov	r0, r3
 9255 0e80 FFF7FEFF 		bl	__aeabi_f2d
 9256 0e84 8046     		mov	r8, r0
 9257 0e86 8946     		mov	r9, r1
 9258 0e88 9F4B     		ldr	r3, .L507
 9259 0e8a D3F82031 		ldr	r3, [r3, #288]	@ float
 9260 0e8e 1846     		mov	r0, r3
 9261 0e90 FFF7FEFF 		bl	__aeabi_f2d
 9262 0e94 0446     		mov	r4, r0
 9263 0e96 0D46     		mov	r5, r1
 9264 0e98 9B4B     		ldr	r3, .L507
 9265 0e9a D3F82431 		ldr	r3, [r3, #292]	@ float
 9266 0e9e 1846     		mov	r0, r3
 9267 0ea0 FFF7FEFF 		bl	__aeabi_f2d
 9268 0ea4 0246     		mov	r2, r0
 9269 0ea6 0B46     		mov	r3, r1
 9270 0ea8 07F10800 		add	r0, r7, #8
 9271 0eac CDE90223 		strd	r2, [sp, #8]
 9272 0eb0 CDE90045 		strd	r4, [sp]
 9273 0eb4 4246     		mov	r2, r8
 9274 0eb6 4B46     		mov	r3, r9
 9275 0eb8 9749     		ldr	r1, .L507+16
 9276 0eba FFF7FEFF 		bl	sprintf
1721:..\src/command_processing.c ****         strcat(info_string, str);
 9277              		.loc 1 1721 0
 9278 0ebe 07F10803 		add	r3, r7, #8
 9279 0ec2 1946     		mov	r1, r3
 9280 0ec4 7868     		ldr	r0, [r7, #4]
 9281 0ec6 FFF7FEFF 		bl	strcat
1722:..\src/command_processing.c ****         sprintf(str, "p[3] - p[5]: %f, %f, %f\n", c_mem.curr_lookup[3], c_mem.curr_lookup[4], c_mem
 9282              		.loc 1 1722 0
 9283 0eca 8F4B     		ldr	r3, .L507
 9284 0ecc D3F82831 		ldr	r3, [r3, #296]	@ float
 9285 0ed0 1846     		mov	r0, r3
 9286 0ed2 FFF7FEFF 		bl	__aeabi_f2d
 9287 0ed6 8046     		mov	r8, r0
 9288 0ed8 8946     		mov	r9, r1
 9289 0eda 8B4B     		ldr	r3, .L507
 9290 0edc D3F82C31 		ldr	r3, [r3, #300]	@ float
 9291 0ee0 1846     		mov	r0, r3
 9292 0ee2 FFF7FEFF 		bl	__aeabi_f2d
 9293 0ee6 0446     		mov	r4, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 223


 9294 0ee8 0D46     		mov	r5, r1
 9295 0eea 874B     		ldr	r3, .L507
 9296 0eec D3F83031 		ldr	r3, [r3, #304]	@ float
 9297 0ef0 1846     		mov	r0, r3
 9298 0ef2 FFF7FEFF 		bl	__aeabi_f2d
 9299 0ef6 0246     		mov	r2, r0
 9300 0ef8 0B46     		mov	r3, r1
 9301 0efa 07F10800 		add	r0, r7, #8
 9302 0efe CDE90223 		strd	r2, [sp, #8]
 9303 0f02 CDE90045 		strd	r4, [sp]
 9304 0f06 4246     		mov	r2, r8
 9305 0f08 4B46     		mov	r3, r9
 9306 0f0a 8449     		ldr	r1, .L507+20
 9307 0f0c FFF7FEFF 		bl	sprintf
1723:..\src/command_processing.c ****         strcat(info_string, str);
 9308              		.loc 1 1723 0
 9309 0f10 07F10803 		add	r3, r7, #8
 9310 0f14 1946     		mov	r1, r3
 9311 0f16 7868     		ldr	r0, [r7, #4]
 9312 0f18 FFF7FEFF 		bl	strcat
1724:..\src/command_processing.c ****         strcat(info_string,"\r\n");        
 9313              		.loc 1 1724 0
 9314 0f1c 7868     		ldr	r0, [r7, #4]
 9315 0f1e FFF7FEFF 		bl	strlen
 9316 0f22 0346     		mov	r3, r0
 9317 0f24 1A46     		mov	r2, r3
 9318 0f26 7B68     		ldr	r3, [r7, #4]
 9319 0f28 1344     		add	r3, r3, r2
 9320 0f2a 794A     		ldr	r2, .L507+8
 9321 0f2c 1188     		ldrh	r1, [r2]	@ unaligned
 9322 0f2e 9278     		ldrb	r2, [r2, #2]
 9323 0f30 1980     		strh	r1, [r3]	@ unaligned
 9324 0f32 9A70     		strb	r2, [r3, #2]
1725:..\src/command_processing.c **** 
1726:..\src/command_processing.c ****         sprintf(str, "Position limit active: %d", (int)g_mem.pos_lim_flag);
 9325              		.loc 1 1726 0
 9326 0f34 7A4B     		ldr	r3, .L507+24
 9327 0f36 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 9328 0f3a 1A46     		mov	r2, r3
 9329 0f3c 07F10803 		add	r3, r7, #8
 9330 0f40 7849     		ldr	r1, .L507+28
 9331 0f42 1846     		mov	r0, r3
 9332 0f44 FFF7FEFF 		bl	sprintf
1727:..\src/command_processing.c ****         strcat(info_string, str);
 9333              		.loc 1 1727 0
 9334 0f48 07F10803 		add	r3, r7, #8
 9335 0f4c 1946     		mov	r1, r3
 9336 0f4e 7868     		ldr	r0, [r7, #4]
 9337 0f50 FFF7FEFF 		bl	strcat
1728:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 9338              		.loc 1 1728 0
 9339 0f54 7868     		ldr	r0, [r7, #4]
 9340 0f56 FFF7FEFF 		bl	strlen
 9341 0f5a 0346     		mov	r3, r0
 9342 0f5c 1A46     		mov	r2, r3
 9343 0f5e 7B68     		ldr	r3, [r7, #4]
 9344 0f60 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 224


 9345 0f62 6B4A     		ldr	r2, .L507+8
 9346 0f64 1188     		ldrh	r1, [r2]	@ unaligned
 9347 0f66 9278     		ldrb	r2, [r2, #2]
 9348 0f68 1980     		strh	r1, [r3]	@ unaligned
 9349 0f6a 9A70     		strb	r2, [r3, #2]
1729:..\src/command_processing.c **** 
1730:..\src/command_processing.c ****         sprintf(str, "Position limit motor: inf -> %ld  ", (int32)g_mem.pos_lim_inf >> g_mem.res[0]
 9350              		.loc 1 1730 0
 9351 0f6c 6C4B     		ldr	r3, .L507+24
 9352 0f6e D3F8F830 		ldr	r3, [r3, #248]
 9353 0f72 6B4A     		ldr	r2, .L507+24
 9354 0f74 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 9355 0f78 43FA02F2 		asr	r2, r3, r2
 9356 0f7c 07F10803 		add	r3, r7, #8
 9357 0f80 6949     		ldr	r1, .L507+32
 9358 0f82 1846     		mov	r0, r3
 9359 0f84 FFF7FEFF 		bl	sprintf
1731:..\src/command_processing.c ****         strcat(info_string, str);
 9360              		.loc 1 1731 0
 9361 0f88 07F10803 		add	r3, r7, #8
 9362 0f8c 1946     		mov	r1, r3
 9363 0f8e 7868     		ldr	r0, [r7, #4]
 9364 0f90 FFF7FEFF 		bl	strcat
1732:..\src/command_processing.c ****         sprintf(str, "sup -> %ld\r\n", (int32)g_mem.pos_lim_sup >> g_mem.res[0]);
 9365              		.loc 1 1732 0
 9366 0f94 624B     		ldr	r3, .L507+24
 9367 0f96 D3F8FC30 		ldr	r3, [r3, #252]
 9368 0f9a 614A     		ldr	r2, .L507+24
 9369 0f9c 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 9370 0fa0 43FA02F2 		asr	r2, r3, r2
 9371 0fa4 07F10803 		add	r3, r7, #8
 9372 0fa8 6049     		ldr	r1, .L507+36
 9373 0faa 1846     		mov	r0, r3
 9374 0fac FFF7FEFF 		bl	sprintf
1733:..\src/command_processing.c ****         strcat(info_string, str);
 9375              		.loc 1 1733 0
 9376 0fb0 07F10803 		add	r3, r7, #8
 9377 0fb4 1946     		mov	r1, r3
 9378 0fb6 7868     		ldr	r0, [r7, #4]
 9379 0fb8 FFF7FEFF 		bl	strcat
1734:..\src/command_processing.c **** 
1735:..\src/command_processing.c ****         sprintf(str, "Max step pos and neg: %d %d", (int)g_mem.max_step_pos, (int)g_mem.max_step_ne
 9380              		.loc 1 1735 0
 9381 0fbc 584B     		ldr	r3, .L507+24
 9382 0fbe D3F80421 		ldr	r2, [r3, #260]
 9383 0fc2 574B     		ldr	r3, .L507+24
 9384 0fc4 D3F80031 		ldr	r3, [r3, #256]
 9385 0fc8 07F10800 		add	r0, r7, #8
 9386 0fcc 5849     		ldr	r1, .L507+40
 9387 0fce FFF7FEFF 		bl	sprintf
1736:..\src/command_processing.c ****         strcat(info_string, str);
 9388              		.loc 1 1736 0
 9389 0fd2 07F10803 		add	r3, r7, #8
 9390 0fd6 1946     		mov	r1, r3
 9391 0fd8 7868     		ldr	r0, [r7, #4]
 9392 0fda FFF7FEFF 		bl	strcat
1737:..\src/command_processing.c ****         strcat(info_string, "\r\n");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 225


 9393              		.loc 1 1737 0
 9394 0fde 7868     		ldr	r0, [r7, #4]
 9395 0fe0 FFF7FEFF 		bl	strlen
 9396 0fe4 0346     		mov	r3, r0
 9397 0fe6 1A46     		mov	r2, r3
 9398 0fe8 7B68     		ldr	r3, [r7, #4]
 9399 0fea 1344     		add	r3, r3, r2
 9400 0fec 484A     		ldr	r2, .L507+8
 9401 0fee 1188     		ldrh	r1, [r2]	@ unaligned
 9402 0ff0 9278     		ldrb	r2, [r2, #2]
 9403 0ff2 1980     		strh	r1, [r3]	@ unaligned
 9404 0ff4 9A70     		strb	r2, [r3, #2]
1738:..\src/command_processing.c **** 
1739:..\src/command_processing.c ****         sprintf(str, "Current limit: %d", (int)g_mem.current_limit);
 9405              		.loc 1 1739 0
 9406 0ff6 4A4B     		ldr	r3, .L507+24
 9407 0ff8 B3F90831 		ldrsh	r3, [r3, #264]
 9408 0ffc 1A46     		mov	r2, r3
 9409 0ffe 07F10803 		add	r3, r7, #8
 9410 1002 4C49     		ldr	r1, .L507+44
 9411 1004 1846     		mov	r0, r3
 9412 1006 FFF7FEFF 		bl	sprintf
1740:..\src/command_processing.c ****         strcat(info_string, str);
 9413              		.loc 1 1740 0
 9414 100a 07F10803 		add	r3, r7, #8
 9415 100e 1946     		mov	r1, r3
 9416 1010 7868     		ldr	r0, [r7, #4]
 9417 1012 FFF7FEFF 		bl	strcat
1741:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 9418              		.loc 1 1741 0
 9419 1016 7868     		ldr	r0, [r7, #4]
 9420 1018 FFF7FEFF 		bl	strlen
 9421 101c 0346     		mov	r3, r0
 9422 101e 1A46     		mov	r2, r3
 9423 1020 7B68     		ldr	r3, [r7, #4]
 9424 1022 1344     		add	r3, r3, r2
 9425 1024 3A4A     		ldr	r2, .L507+8
 9426 1026 1188     		ldrh	r1, [r2]	@ unaligned
 9427 1028 9278     		ldrb	r2, [r2, #2]
 9428 102a 1980     		strh	r1, [r3]	@ unaligned
 9429 102c 9A70     		strb	r2, [r3, #2]
1742:..\src/command_processing.c **** 
1743:..\src/command_processing.c ****         if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 9430              		.loc 1 1743 0
 9431 102e 364B     		ldr	r3, .L507
 9432 1030 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
 9433 1034 022B     		cmp	r3, #2
 9434 1036 0FD0     		beq	.L472
1744:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 9435              		.loc 1 1744 0 discriminator 1
 9436 1038 334B     		ldr	r3, .L507
 9437 103a 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
1743:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 9438              		.loc 1 1743 0 discriminator 1
 9439 103e 032B     		cmp	r3, #3
 9440 1040 0AD0     		beq	.L472
1745:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 226


 9441              		.loc 1 1745 0
 9442 1042 314B     		ldr	r3, .L507
 9443 1044 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
1744:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 9444              		.loc 1 1744 0
 9445 1048 042B     		cmp	r3, #4
 9446 104a 05D0     		beq	.L472
1746:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 9447              		.loc 1 1746 0
 9448 104c 2E4B     		ldr	r3, .L507
 9449 104e 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
1745:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 9450              		.loc 1 1745 0
 9451 1052 052B     		cmp	r3, #5
 9452 1054 40F0A680 		bne	.L473
 9453              	.L472:
1747:..\src/command_processing.c ****             sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", g_mem.emg_threshold[0], g_mem.emg_thr
 9454              		.loc 1 1747 0
 9455 1058 314B     		ldr	r3, .L507+24
 9456 105a B3F80A31 		ldrh	r3, [r3, #266]
 9457 105e 1A46     		mov	r2, r3
 9458 1060 2F4B     		ldr	r3, .L507+24
 9459 1062 B3F80C31 		ldrh	r3, [r3, #268]
 9460 1066 07F10800 		add	r0, r7, #8
 9461 106a 3349     		ldr	r1, .L507+48
 9462 106c FFF7FEFF 		bl	sprintf
1748:..\src/command_processing.c ****             strcat(info_string, str);
 9463              		.loc 1 1748 0
 9464 1070 07F10803 		add	r3, r7, #8
 9465 1074 1946     		mov	r1, r3
 9466 1076 7868     		ldr	r0, [r7, #4]
 9467 1078 FFF7FEFF 		bl	strcat
1749:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9468              		.loc 1 1749 0
 9469 107c 7868     		ldr	r0, [r7, #4]
 9470 107e FFF7FEFF 		bl	strlen
 9471 1082 0346     		mov	r3, r0
 9472 1084 1A46     		mov	r2, r3
 9473 1086 7B68     		ldr	r3, [r7, #4]
 9474 1088 1344     		add	r3, r3, r2
 9475 108a 214A     		ldr	r2, .L507+8
 9476 108c 1188     		ldrh	r1, [r2]	@ unaligned
 9477 108e 9278     		ldrb	r2, [r2, #2]
 9478 1090 1980     		strh	r1, [r3]	@ unaligned
 9479 1092 9A70     		strb	r2, [r3, #2]
1750:..\src/command_processing.c **** 
1751:..\src/command_processing.c ****             sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", g_mem.emg_max_value[0], g_mem.emg_m
 9480              		.loc 1 1751 0
 9481 1094 224B     		ldr	r3, .L507+24
 9482 1096 D3F81021 		ldr	r2, [r3, #272]
 9483 109a 214B     		ldr	r3, .L507+24
 9484 109c D3F81431 		ldr	r3, [r3, #276]
 9485 10a0 07F10800 		add	r0, r7, #8
 9486 10a4 2549     		ldr	r1, .L507+52
 9487 10a6 FFF7FEFF 		bl	sprintf
1752:..\src/command_processing.c ****             strcat(info_string, str);
 9488              		.loc 1 1752 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 227


 9489 10aa 07F10803 		add	r3, r7, #8
 9490 10ae 1946     		mov	r1, r3
 9491 10b0 7868     		ldr	r0, [r7, #4]
 9492 10b2 FFF7FEFF 		bl	strcat
1753:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9493              		.loc 1 1753 0
 9494 10b6 7868     		ldr	r0, [r7, #4]
 9495 10b8 FFF7FEFF 		bl	strlen
 9496 10bc 0346     		mov	r3, r0
 9497 10be 1A46     		mov	r2, r3
 9498 10c0 7B68     		ldr	r3, [r7, #4]
 9499 10c2 1344     		add	r3, r3, r2
 9500 10c4 124A     		ldr	r2, .L507+8
 9501 10c6 1188     		ldrh	r1, [r2]	@ unaligned
 9502 10c8 9278     		ldrb	r2, [r2, #2]
 9503 10ca 1980     		strh	r1, [r3]	@ unaligned
 9504 10cc 9A70     		strb	r2, [r3, #2]
1754:..\src/command_processing.c **** 
1755:..\src/command_processing.c ****             if (g_mem.emg_calibration_flag)
 9505              		.loc 1 1755 0
 9506 10ce 144B     		ldr	r3, .L507+24
 9507 10d0 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 9508 10d4 002B     		cmp	r3, #0
 9509 10d6 35D0     		beq	.L474
1756:..\src/command_processing.c ****                 strcat(info_string, "Calibration enabled: YES\r\n");
 9510              		.loc 1 1756 0
 9511 10d8 7868     		ldr	r0, [r7, #4]
 9512 10da FFF7FEFF 		bl	strlen
 9513 10de 0346     		mov	r3, r0
 9514 10e0 1A46     		mov	r2, r3
 9515 10e2 7B68     		ldr	r3, [r7, #4]
 9516 10e4 1344     		add	r3, r3, r2
 9517 10e6 164A     		ldr	r2, .L507+56
 9518 10e8 1D46     		mov	r5, r3
 9519 10ea 1446     		mov	r4, r2
 9520 10ec 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9521 10ee 2860     		str	r0, [r5]	@ unaligned
 9522 10f0 6960     		str	r1, [r5, #4]	@ unaligned
 9523 10f2 AA60     		str	r2, [r5, #8]	@ unaligned
 9524 10f4 EB60     		str	r3, [r5, #12]	@ unaligned
 9525 10f6 03CC     		ldmia	r4!, {r0, r1}
 9526 10f8 2861     		str	r0, [r5, #16]	@ unaligned
 9527 10fa 6961     		str	r1, [r5, #20]	@ unaligned
 9528 10fc 2388     		ldrh	r3, [r4]	@ unaligned
 9529 10fe A278     		ldrb	r2, [r4, #2]
 9530 1100 2B83     		strh	r3, [r5, #24]	@ unaligned
 9531 1102 1346     		mov	r3, r2
 9532 1104 AB76     		strb	r3, [r5, #26]
 9533 1106 31E0     		b	.L475
 9534              	.L508:
 9535              		.align	2
 9536              	.L507:
 9537 1108 00000000 		.word	c_mem
 9538 110c A40D0000 		.word	.LC142
 9539 1110 28090000 		.word	.LC87
 9540 1114 B00D0000 		.word	.LC143
 9541 1118 C80D0000 		.word	.LC144
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 228


 9542 111c E40D0000 		.word	.LC145
 9543 1120 00000000 		.word	g_mem
 9544 1124 000E0000 		.word	.LC146
 9545 1128 1C0E0000 		.word	.LC147
 9546 112c 400E0000 		.word	.LC148
 9547 1130 500E0000 		.word	.LC149
 9548 1134 6C0E0000 		.word	.LC150
 9549 1138 800E0000 		.word	.LC151
 9550 113c A40E0000 		.word	.LC152
 9551 1140 C80E0000 		.word	.LC153
 9552              	.L474:
1757:..\src/command_processing.c ****             else
1758:..\src/command_processing.c ****                 strcat(info_string, "Calibration enabled: NO\r\n");
 9553              		.loc 1 1758 0
 9554 1144 7868     		ldr	r0, [r7, #4]
 9555 1146 FFF7FEFF 		bl	strlen
 9556 114a 0346     		mov	r3, r0
 9557 114c 1A46     		mov	r2, r3
 9558 114e 7B68     		ldr	r3, [r7, #4]
 9559 1150 1344     		add	r3, r3, r2
 9560 1152 AF4A     		ldr	r2, .L509
 9561 1154 1D46     		mov	r5, r3
 9562 1156 1446     		mov	r4, r2
 9563 1158 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9564 115a 2860     		str	r0, [r5]	@ unaligned
 9565 115c 6960     		str	r1, [r5, #4]	@ unaligned
 9566 115e AA60     		str	r2, [r5, #8]	@ unaligned
 9567 1160 EB60     		str	r3, [r5, #12]	@ unaligned
 9568 1162 03CC     		ldmia	r4!, {r0, r1}
 9569 1164 2861     		str	r0, [r5, #16]	@ unaligned
 9570 1166 6961     		str	r1, [r5, #20]	@ unaligned
 9571 1168 2388     		ldrh	r3, [r4]	@ unaligned
 9572 116a 2B83     		strh	r3, [r5, #24]	@ unaligned
 9573              	.L475:
1759:..\src/command_processing.c **** 
1760:..\src/command_processing.c ****             sprintf(str, "EMG max speed: %d", (int)g_mem.emg_speed);
 9574              		.loc 1 1760 0
 9575 116c A94B     		ldr	r3, .L509+4
 9576 116e 93F81831 		ldrb	r3, [r3, #280]	@ zero_extendqisi2
 9577 1172 1A46     		mov	r2, r3
 9578 1174 07F10803 		add	r3, r7, #8
 9579 1178 A749     		ldr	r1, .L509+8
 9580 117a 1846     		mov	r0, r3
 9581 117c FFF7FEFF 		bl	sprintf
1761:..\src/command_processing.c ****             strcat(info_string, str);
 9582              		.loc 1 1761 0
 9583 1180 07F10803 		add	r3, r7, #8
 9584 1184 1946     		mov	r1, r3
 9585 1186 7868     		ldr	r0, [r7, #4]
 9586 1188 FFF7FEFF 		bl	strcat
1762:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9587              		.loc 1 1762 0
 9588 118c 7868     		ldr	r0, [r7, #4]
 9589 118e FFF7FEFF 		bl	strlen
 9590 1192 0346     		mov	r3, r0
 9591 1194 1A46     		mov	r2, r3
 9592 1196 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 229


 9593 1198 1344     		add	r3, r3, r2
 9594 119a A04A     		ldr	r2, .L509+12
 9595 119c 1188     		ldrh	r1, [r2]	@ unaligned
 9596 119e 9278     		ldrb	r2, [r2, #2]
 9597 11a0 1980     		strh	r1, [r3]	@ unaligned
 9598 11a2 9A70     		strb	r2, [r3, #2]
 9599              	.L473:
1763:..\src/command_processing.c ****         }
1764:..\src/command_processing.c ****             
1765:..\src/command_processing.c ****         if (c_mem.read_emg_sensors_port_flag == TRUE){
 9600              		.loc 1 1765 0
 9601 11a4 9E4B     		ldr	r3, .L509+16
 9602 11a6 93F88031 		ldrb	r3, [r3, #384]	@ zero_extendqisi2
 9603 11aa 012B     		cmp	r3, #1
 9604 11ac 65D1     		bne	.L476
1766:..\src/command_processing.c ****             strcat(info_string, "Additional EMG sensors value:\r\n");
 9605              		.loc 1 1766 0
 9606 11ae 7868     		ldr	r0, [r7, #4]
 9607 11b0 FFF7FEFF 		bl	strlen
 9608 11b4 0346     		mov	r3, r0
 9609 11b6 1A46     		mov	r2, r3
 9610 11b8 7B68     		ldr	r3, [r7, #4]
 9611 11ba 1344     		add	r3, r3, r2
 9612 11bc 994A     		ldr	r2, .L509+20
 9613 11be 1C46     		mov	r4, r3
 9614 11c0 1546     		mov	r5, r2
 9615 11c2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9616 11c4 2060     		str	r0, [r4]	@ unaligned
 9617 11c6 6160     		str	r1, [r4, #4]	@ unaligned
 9618 11c8 A260     		str	r2, [r4, #8]	@ unaligned
 9619 11ca E360     		str	r3, [r4, #12]	@ unaligned
 9620 11cc 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9621 11ce 2061     		str	r0, [r4, #16]	@ unaligned
 9622 11d0 6161     		str	r1, [r4, #20]	@ unaligned
 9623 11d2 A261     		str	r2, [r4, #24]	@ unaligned
 9624 11d4 E361     		str	r3, [r4, #28]	@ unaligned
1767:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_ADDITIONAL_EMGS; ++i) {
 9625              		.loc 1 1767 0
 9626 11d6 0023     		movs	r3, #0
 9627 11d8 FB66     		str	r3, [r7, #108]
 9628 11da 22E0     		b	.L477
 9629              	.L478:
1768:..\src/command_processing.c ****                 sprintf(str,"EMG %d -> %d", (int)(i + 1), (int) g_meas.add_emg[i]);
 9630              		.loc 1 1768 0 discriminator 3
 9631 11dc FB6E     		ldr	r3, [r7, #108]
 9632 11de 591C     		adds	r1, r3, #1
 9633 11e0 914A     		ldr	r2, .L509+24
 9634 11e2 FB6E     		ldr	r3, [r7, #108]
 9635 11e4 0E33     		adds	r3, r3, #14
 9636 11e6 9B00     		lsls	r3, r3, #2
 9637 11e8 1344     		add	r3, r3, r2
 9638 11ea 5B68     		ldr	r3, [r3, #4]
 9639 11ec 07F10800 		add	r0, r7, #8
 9640 11f0 0A46     		mov	r2, r1
 9641 11f2 8E49     		ldr	r1, .L509+28
 9642 11f4 FFF7FEFF 		bl	sprintf
1769:..\src/command_processing.c ****                 strcat(info_string, str);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 230


 9643              		.loc 1 1769 0 discriminator 3
 9644 11f8 07F10803 		add	r3, r7, #8
 9645 11fc 1946     		mov	r1, r3
 9646 11fe 7868     		ldr	r0, [r7, #4]
 9647 1200 FFF7FEFF 		bl	strcat
1770:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
 9648              		.loc 1 1770 0 discriminator 3
 9649 1204 7868     		ldr	r0, [r7, #4]
 9650 1206 FFF7FEFF 		bl	strlen
 9651 120a 0346     		mov	r3, r0
 9652 120c 1A46     		mov	r2, r3
 9653 120e 7B68     		ldr	r3, [r7, #4]
 9654 1210 1344     		add	r3, r3, r2
 9655 1212 824A     		ldr	r2, .L509+12
 9656 1214 1188     		ldrh	r1, [r2]	@ unaligned
 9657 1216 9278     		ldrb	r2, [r2, #2]
 9658 1218 1980     		strh	r1, [r3]	@ unaligned
 9659 121a 9A70     		strb	r2, [r3, #2]
1767:..\src/command_processing.c ****                 sprintf(str,"EMG %d -> %d", (int)(i + 1), (int) g_meas.add_emg[i]);
 9660              		.loc 1 1767 0 discriminator 3
 9661 121c FB6E     		ldr	r3, [r7, #108]
 9662 121e 0133     		adds	r3, r3, #1
 9663 1220 FB66     		str	r3, [r7, #108]
 9664              	.L477:
1767:..\src/command_processing.c ****                 sprintf(str,"EMG %d -> %d", (int)(i + 1), (int) g_meas.add_emg[i]);
 9665              		.loc 1 1767 0 is_stmt 0 discriminator 1
 9666 1222 FB6E     		ldr	r3, [r7, #108]
 9667 1224 052B     		cmp	r3, #5
 9668 1226 D9DD     		ble	.L478
1771:..\src/command_processing.c ****             }
1772:..\src/command_processing.c ****             for (i = 0; i < NUM_OF_INPUT_EMGS; ++i) {
 9669              		.loc 1 1772 0 is_stmt 1
 9670 1228 0023     		movs	r3, #0
 9671 122a FB66     		str	r3, [r7, #108]
 9672 122c 22E0     		b	.L479
 9673              	.L480:
1773:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_meas.emg[i]);
 9674              		.loc 1 1773 0 discriminator 3
 9675 122e FB6E     		ldr	r3, [r7, #108]
 9676 1230 591C     		adds	r1, r3, #1
 9677 1232 7D4A     		ldr	r2, .L509+24
 9678 1234 FB6E     		ldr	r3, [r7, #108]
 9679 1236 0633     		adds	r3, r3, #6
 9680 1238 9B00     		lsls	r3, r3, #2
 9681 123a 1344     		add	r3, r3, r2
 9682 123c 5B68     		ldr	r3, [r3, #4]
 9683 123e 07F10800 		add	r0, r7, #8
 9684 1242 0A46     		mov	r2, r1
 9685 1244 7A49     		ldr	r1, .L509+32
 9686 1246 FFF7FEFF 		bl	sprintf
1774:..\src/command_processing.c ****                 strcat(info_string, str);
 9687              		.loc 1 1774 0 discriminator 3
 9688 124a 07F10803 		add	r3, r7, #8
 9689 124e 1946     		mov	r1, r3
 9690 1250 7868     		ldr	r0, [r7, #4]
 9691 1252 FFF7FEFF 		bl	strcat
1775:..\src/command_processing.c ****                 strcat(info_string,"\r\n");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 231


 9692              		.loc 1 1775 0 discriminator 3
 9693 1256 7868     		ldr	r0, [r7, #4]
 9694 1258 FFF7FEFF 		bl	strlen
 9695 125c 0346     		mov	r3, r0
 9696 125e 1A46     		mov	r2, r3
 9697 1260 7B68     		ldr	r3, [r7, #4]
 9698 1262 1344     		add	r3, r3, r2
 9699 1264 6D4A     		ldr	r2, .L509+12
 9700 1266 1188     		ldrh	r1, [r2]	@ unaligned
 9701 1268 9278     		ldrb	r2, [r2, #2]
 9702 126a 1980     		strh	r1, [r3]	@ unaligned
 9703 126c 9A70     		strb	r2, [r3, #2]
1772:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_meas.emg[i]);
 9704              		.loc 1 1772 0 discriminator 3
 9705 126e FB6E     		ldr	r3, [r7, #108]
 9706 1270 0133     		adds	r3, r3, #1
 9707 1272 FB66     		str	r3, [r7, #108]
 9708              	.L479:
1772:..\src/command_processing.c ****                 sprintf(str,"EMG input %d -> %d", (int)(i + 1), (int) g_meas.emg[i]);
 9709              		.loc 1 1772 0 is_stmt 0 discriminator 1
 9710 1274 FB6E     		ldr	r3, [r7, #108]
 9711 1276 012B     		cmp	r3, #1
 9712 1278 D9DD     		ble	.L480
 9713              	.L476:
1776:..\src/command_processing.c ****             }
1777:..\src/command_processing.c ****         }
1778:..\src/command_processing.c ****         
1779:..\src/command_processing.c ****         if (c_mem.rest_position_flag) {
 9714              		.loc 1 1779 0 is_stmt 1
 9715 127a 694B     		ldr	r3, .L509+16
 9716 127c 93F84431 		ldrb	r3, [r3, #324]	@ zero_extendqisi2
 9717 1280 002B     		cmp	r3, #0
 9718 1282 55D0     		beq	.L481
1780:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)g_mem.rest_delay);
 9719              		.loc 1 1780 0
 9720 1284 634B     		ldr	r3, .L509+4
 9721 1286 D3F83C21 		ldr	r2, [r3, #316]
 9722 128a 07F10803 		add	r3, r7, #8
 9723 128e 6949     		ldr	r1, .L509+36
 9724 1290 1846     		mov	r0, r3
 9725 1292 FFF7FEFF 		bl	sprintf
1781:..\src/command_processing.c ****             strcat(info_string, str);
 9726              		.loc 1 1781 0
 9727 1296 07F10803 		add	r3, r7, #8
 9728 129a 1946     		mov	r1, r3
 9729 129c 7868     		ldr	r0, [r7, #4]
 9730 129e FFF7FEFF 		bl	strcat
1782:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9731              		.loc 1 1782 0
 9732 12a2 7868     		ldr	r0, [r7, #4]
 9733 12a4 FFF7FEFF 		bl	strlen
 9734 12a8 0346     		mov	r3, r0
 9735 12aa 1A46     		mov	r2, r3
 9736 12ac 7B68     		ldr	r3, [r7, #4]
 9737 12ae 1344     		add	r3, r3, r2
 9738 12b0 5A4A     		ldr	r2, .L509+12
 9739 12b2 1188     		ldrh	r1, [r2]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 232


 9740 12b4 9278     		ldrb	r2, [r2, #2]
 9741 12b6 1980     		strh	r1, [r3]	@ unaligned
 9742 12b8 9A70     		strb	r2, [r3, #2]
1783:..\src/command_processing.c ****             
1784:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)g_mem.rest_vel);
 9743              		.loc 1 1784 0
 9744 12ba 564B     		ldr	r3, .L509+4
 9745 12bc D3F84021 		ldr	r2, [r3, #320]
 9746 12c0 07F10803 		add	r3, r7, #8
 9747 12c4 5C49     		ldr	r1, .L509+40
 9748 12c6 1846     		mov	r0, r3
 9749 12c8 FFF7FEFF 		bl	sprintf
1785:..\src/command_processing.c ****             strcat(info_string, str);
 9750              		.loc 1 1785 0
 9751 12cc 07F10803 		add	r3, r7, #8
 9752 12d0 1946     		mov	r1, r3
 9753 12d2 7868     		ldr	r0, [r7, #4]
 9754 12d4 FFF7FEFF 		bl	strcat
1786:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9755              		.loc 1 1786 0
 9756 12d8 7868     		ldr	r0, [r7, #4]
 9757 12da FFF7FEFF 		bl	strlen
 9758 12de 0346     		mov	r3, r0
 9759 12e0 1A46     		mov	r2, r3
 9760 12e2 7B68     		ldr	r3, [r7, #4]
 9761 12e4 1344     		add	r3, r3, r2
 9762 12e6 4D4A     		ldr	r2, .L509+12
 9763 12e8 1188     		ldrh	r1, [r2]	@ unaligned
 9764 12ea 9278     		ldrb	r2, [r2, #2]
 9765 12ec 1980     		strh	r1, [r3]	@ unaligned
 9766 12ee 9A70     		strb	r2, [r3, #2]
1787:..\src/command_processing.c ****             
1788:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(g_mem.rest_pos >> c_mem.res[0]));
 9767              		.loc 1 1788 0
 9768 12f0 484B     		ldr	r3, .L509+4
 9769 12f2 D3F83831 		ldr	r3, [r3, #312]
 9770 12f6 4A4A     		ldr	r2, .L509+16
 9771 12f8 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 9772 12fc 43FA02F2 		asr	r2, r3, r2
 9773 1300 07F10803 		add	r3, r7, #8
 9774 1304 4D49     		ldr	r1, .L509+44
 9775 1306 1846     		mov	r0, r3
 9776 1308 FFF7FEFF 		bl	sprintf
1789:..\src/command_processing.c ****             strcat(info_string, str);
 9777              		.loc 1 1789 0
 9778 130c 07F10803 		add	r3, r7, #8
 9779 1310 1946     		mov	r1, r3
 9780 1312 7868     		ldr	r0, [r7, #4]
 9781 1314 FFF7FEFF 		bl	strcat
1790:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 9782              		.loc 1 1790 0
 9783 1318 7868     		ldr	r0, [r7, #4]
 9784 131a FFF7FEFF 		bl	strlen
 9785 131e 0346     		mov	r3, r0
 9786 1320 1A46     		mov	r2, r3
 9787 1322 7B68     		ldr	r3, [r7, #4]
 9788 1324 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 233


 9789 1326 3D4A     		ldr	r2, .L509+12
 9790 1328 1188     		ldrh	r1, [r2]	@ unaligned
 9791 132a 9278     		ldrb	r2, [r2, #2]
 9792 132c 1980     		strh	r1, [r3]	@ unaligned
 9793 132e 9A70     		strb	r2, [r3, #2]
 9794              	.L481:
1791:..\src/command_processing.c ****         }
1792:..\src/command_processing.c **** 
1793:..\src/command_processing.c ****         //prepare_counter_info(info_string);
1794:..\src/command_processing.c **** 
1795:..\src/command_processing.c ****         if (c_mem.read_imu_flag) {
 9795              		.loc 1 1795 0
 9796 1330 3B4B     		ldr	r3, .L509+16
 9797 1332 93F84731 		ldrb	r3, [r3, #327]	@ zero_extendqisi2
 9798 1336 002B     		cmp	r3, #0
 9799 1338 00F0C581 		beq	.L482
1796:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 9800              		.loc 1 1796 0
 9801 133c 404B     		ldr	r3, .L509+48
 9802 133e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9803 1340 1A46     		mov	r2, r3
 9804 1342 07F10803 		add	r3, r7, #8
 9805 1346 3F49     		ldr	r1, .L509+52
 9806 1348 1846     		mov	r0, r3
 9807 134a FFF7FEFF 		bl	sprintf
1797:..\src/command_processing.c ****             strcat(info_string, str);
 9808              		.loc 1 1797 0
 9809 134e 07F10803 		add	r3, r7, #8
 9810 1352 1946     		mov	r1, r3
 9811 1354 7868     		ldr	r0, [r7, #4]
 9812 1356 FFF7FEFF 		bl	strcat
1798:..\src/command_processing.c ****             
1799:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9813              		.loc 1 1799 0
 9814 135a 7868     		ldr	r0, [r7, #4]
 9815 135c FFF7FEFF 		bl	strlen
 9816 1360 0346     		mov	r3, r0
 9817 1362 1A46     		mov	r2, r3
 9818 1364 7B68     		ldr	r3, [r7, #4]
 9819 1366 1344     		add	r3, r3, r2
 9820 1368 2C4A     		ldr	r2, .L509+12
 9821 136a 1188     		ldrh	r1, [r2]	@ unaligned
 9822 136c 9278     		ldrb	r2, [r2, #2]
 9823 136e 1980     		strh	r1, [r3]	@ unaligned
 9824 1370 9A70     		strb	r2, [r3, #2]
1800:..\src/command_processing.c ****             
1801:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 9825              		.loc 1 1801 0
 9826 1372 7868     		ldr	r0, [r7, #4]
 9827 1374 FFF7FEFF 		bl	strlen
 9828 1378 0346     		mov	r3, r0
 9829 137a 1A46     		mov	r2, r3
 9830 137c 7B68     		ldr	r3, [r7, #4]
 9831 137e 1344     		add	r3, r3, r2
 9832 1380 314A     		ldr	r2, .L509+56
 9833 1382 1D46     		mov	r5, r3
 9834 1384 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 234


 9835 1386 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9836 1388 2860     		str	r0, [r5]	@ unaligned
 9837 138a 6960     		str	r1, [r5, #4]	@ unaligned
 9838 138c AA60     		str	r2, [r5, #8]	@ unaligned
 9839 138e EB60     		str	r3, [r5, #12]	@ unaligned
 9840 1390 2068     		ldr	r0, [r4]	@ unaligned
 9841 1392 2861     		str	r0, [r5, #16]	@ unaligned
 9842 1394 2379     		ldrb	r3, [r4, #4]
 9843 1396 2B75     		strb	r3, [r5, #20]
1802:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 9844              		.loc 1 1802 0
 9845 1398 0023     		movs	r3, #0
 9846 139a FB66     		str	r3, [r7, #108]
 9847 139c 7DE1     		b	.L483
 9848              	.L494:
1803:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9849              		.loc 1 1803 0
 9850 139e 2B4A     		ldr	r2, .L509+60
 9851 13a0 FB6E     		ldr	r3, [r7, #108]
 9852 13a2 1344     		add	r3, r3, r2
 9853 13a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9854 13a6 07F10800 		add	r0, r7, #8
 9855 13aa FA6E     		ldr	r2, [r7, #108]
 9856 13ac 2849     		ldr	r1, .L509+64
 9857 13ae FFF7FEFF 		bl	sprintf
1804:..\src/command_processing.c ****                 strcat(info_string, str);
 9858              		.loc 1 1804 0
 9859 13b2 07F10803 		add	r3, r7, #8
 9860 13b6 1946     		mov	r1, r3
 9861 13b8 7868     		ldr	r0, [r7, #4]
 9862 13ba FFF7FEFF 		bl	strcat
1805:..\src/command_processing.c ****                 
1806:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 9863              		.loc 1 1806 0
 9864 13be 07F10803 		add	r3, r7, #8
 9865 13c2 244A     		ldr	r2, .L509+68
 9866 13c4 1C46     		mov	r4, r3
 9867 13c6 1546     		mov	r5, r2
 9868 13c8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9869 13ca 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9870 13cc 2B68     		ldr	r3, [r5]
 9871 13ce 2380     		strh	r3, [r4]	@ movhi
1807:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][0]))
 9872              		.loc 1 1807 0
 9873 13d0 1E4A     		ldr	r2, .L509+60
 9874 13d2 FB6E     		ldr	r3, [r7, #108]
 9875 13d4 1344     		add	r3, r3, r2
 9876 13d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9877 13d8 1946     		mov	r1, r3
 9878 13da 114A     		ldr	r2, .L509+16
 9879 13dc 0B46     		mov	r3, r1
 9880 13de 9B00     		lsls	r3, r3, #2
 9881 13e0 0B44     		add	r3, r3, r1
 9882 13e2 1344     		add	r3, r3, r2
 9883 13e4 03F25113 		addw	r3, r3, #337
 9884 13e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9885 13ea 002B     		cmp	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 235


 9886 13ec 36D0     		beq	.L484
1808:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9887              		.loc 1 1808 0
 9888 13ee 07F10803 		add	r3, r7, #8
 9889 13f2 1846     		mov	r0, r3
 9890 13f4 FFF7FEFF 		bl	strlen
 9891 13f8 0346     		mov	r3, r0
 9892 13fa 1A46     		mov	r2, r3
 9893 13fc 07F10803 		add	r3, r7, #8
 9894 1400 1344     		add	r3, r3, r2
 9895 1402 154A     		ldr	r2, .L509+72
 9896 1404 1068     		ldr	r0, [r2]	@ unaligned
 9897 1406 1860     		str	r0, [r3]	@ unaligned
 9898 1408 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9899 140a 9A80     		strh	r2, [r3, #4]	@ unaligned
 9900 140c 35E0     		b	.L485
 9901              	.L510:
 9902 140e 00BF     		.align	2
 9903              	.L509:
 9904 1410 E40E0000 		.word	.LC154
 9905 1414 00000000 		.word	g_mem
 9906 1418 000F0000 		.word	.LC155
 9907 141c 28090000 		.word	.LC87
 9908 1420 00000000 		.word	c_mem
 9909 1424 140F0000 		.word	.LC156
 9910 1428 00000000 		.word	g_meas
 9911 142c 340F0000 		.word	.LC157
 9912 1430 440F0000 		.word	.LC158
 9913 1434 580F0000 		.word	.LC159
 9914 1438 740F0000 		.word	.LC160
 9915 143c 9C0F0000 		.word	.LC161
 9916 1440 00000000 		.word	N_IMU_Connected
 9917 1444 B00F0000 		.word	.LC162
 9918 1448 C40F0000 		.word	.LC163
 9919 144c 00000000 		.word	IMU_connected
 9920 1450 DC0F0000 		.word	.LC164
 9921 1454 F00F0000 		.word	.LC165
 9922 1458 4C0A0000 		.word	.LC106
 9923              	.L484:
1809:..\src/command_processing.c ****                 else
1810:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 9924              		.loc 1 1810 0
 9925 145c 07F10803 		add	r3, r7, #8
 9926 1460 1846     		mov	r0, r3
 9927 1462 FFF7FEFF 		bl	strlen
 9928 1466 0346     		mov	r3, r0
 9929 1468 1A46     		mov	r2, r3
 9930 146a 07F10803 		add	r3, r7, #8
 9931 146e 1344     		add	r3, r3, r2
 9932 1470 AC4A     		ldr	r2, .L511
 9933 1472 1068     		ldr	r0, [r2]	@ unaligned
 9934 1474 1860     		str	r0, [r3]	@ unaligned
 9935 1476 1279     		ldrb	r2, [r2, #4]
 9936 1478 1A71     		strb	r2, [r3, #4]
 9937              	.L485:
1811:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 9938              		.loc 1 1811 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 236


 9939 147a 07F10803 		add	r3, r7, #8
 9940 147e 1846     		mov	r0, r3
 9941 1480 FFF7FEFF 		bl	strlen
 9942 1484 0346     		mov	r3, r0
 9943 1486 1A46     		mov	r2, r3
 9944 1488 07F10803 		add	r3, r7, #8
 9945 148c 1344     		add	r3, r3, r2
 9946 148e A64A     		ldr	r2, .L511+4
 9947 1490 1C46     		mov	r4, r3
 9948 1492 1346     		mov	r3, r2
 9949 1494 07CB     		ldmia	r3!, {r0, r1, r2}
 9950 1496 2060     		str	r0, [r4]	@ unaligned
 9951 1498 6160     		str	r1, [r4, #4]	@ unaligned
 9952 149a A260     		str	r2, [r4, #8]	@ unaligned
 9953 149c 1B88     		ldrh	r3, [r3]	@ unaligned
 9954 149e A381     		strh	r3, [r4, #12]	@ unaligned
1812:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][1]))
 9955              		.loc 1 1812 0
 9956 14a0 A24A     		ldr	r2, .L511+8
 9957 14a2 FB6E     		ldr	r3, [r7, #108]
 9958 14a4 1344     		add	r3, r3, r2
 9959 14a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9960 14a8 1946     		mov	r1, r3
 9961 14aa A14A     		ldr	r2, .L511+12
 9962 14ac 0B46     		mov	r3, r1
 9963 14ae 9B00     		lsls	r3, r3, #2
 9964 14b0 0B44     		add	r3, r3, r1
 9965 14b2 1344     		add	r3, r3, r2
 9966 14b4 03F5A973 		add	r3, r3, #338
 9967 14b8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9968 14ba 002B     		cmp	r3, #0
 9969 14bc 0FD0     		beq	.L486
1813:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9970              		.loc 1 1813 0
 9971 14be 07F10803 		add	r3, r7, #8
 9972 14c2 1846     		mov	r0, r3
 9973 14c4 FFF7FEFF 		bl	strlen
 9974 14c8 0346     		mov	r3, r0
 9975 14ca 1A46     		mov	r2, r3
 9976 14cc 07F10803 		add	r3, r7, #8
 9977 14d0 1344     		add	r3, r3, r2
 9978 14d2 984A     		ldr	r2, .L511+16
 9979 14d4 1068     		ldr	r0, [r2]	@ unaligned
 9980 14d6 1860     		str	r0, [r3]	@ unaligned
 9981 14d8 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9982 14da 9A80     		strh	r2, [r3, #4]	@ unaligned
 9983 14dc 0EE0     		b	.L487
 9984              	.L486:
1814:..\src/command_processing.c ****                 else
1815:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 9985              		.loc 1 1815 0
 9986 14de 07F10803 		add	r3, r7, #8
 9987 14e2 1846     		mov	r0, r3
 9988 14e4 FFF7FEFF 		bl	strlen
 9989 14e8 0346     		mov	r3, r0
 9990 14ea 1A46     		mov	r2, r3
 9991 14ec 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 237


 9992 14f0 1344     		add	r3, r3, r2
 9993 14f2 8C4A     		ldr	r2, .L511
 9994 14f4 1068     		ldr	r0, [r2]	@ unaligned
 9995 14f6 1860     		str	r0, [r3]	@ unaligned
 9996 14f8 1279     		ldrb	r2, [r2, #4]
 9997 14fa 1A71     		strb	r2, [r3, #4]
 9998              	.L487:
1816:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 9999              		.loc 1 1816 0
 10000 14fc 07F10803 		add	r3, r7, #8
 10001 1500 1846     		mov	r0, r3
 10002 1502 FFF7FEFF 		bl	strlen
 10003 1506 0346     		mov	r3, r0
 10004 1508 1A46     		mov	r2, r3
 10005 150a 07F10803 		add	r3, r7, #8
 10006 150e 1344     		add	r3, r3, r2
 10007 1510 894A     		ldr	r2, .L511+20
 10008 1512 1D46     		mov	r5, r3
 10009 1514 1446     		mov	r4, r2
 10010 1516 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10011 1518 2860     		str	r0, [r5]	@ unaligned
 10012 151a 6960     		str	r1, [r5, #4]	@ unaligned
 10013 151c AA60     		str	r2, [r5, #8]	@ unaligned
 10014 151e EB60     		str	r3, [r5, #12]	@ unaligned
 10015 1520 2378     		ldrb	r3, [r4]
 10016 1522 2B74     		strb	r3, [r5, #16]
1817:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][2]))
 10017              		.loc 1 1817 0
 10018 1524 814A     		ldr	r2, .L511+8
 10019 1526 FB6E     		ldr	r3, [r7, #108]
 10020 1528 1344     		add	r3, r3, r2
 10021 152a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10022 152c 1946     		mov	r1, r3
 10023 152e 804A     		ldr	r2, .L511+12
 10024 1530 0B46     		mov	r3, r1
 10025 1532 9B00     		lsls	r3, r3, #2
 10026 1534 0B44     		add	r3, r3, r1
 10027 1536 1344     		add	r3, r3, r2
 10028 1538 03F25313 		addw	r3, r3, #339
 10029 153c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10030 153e 002B     		cmp	r3, #0
 10031 1540 0FD0     		beq	.L488
1818:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 10032              		.loc 1 1818 0
 10033 1542 07F10803 		add	r3, r7, #8
 10034 1546 1846     		mov	r0, r3
 10035 1548 FFF7FEFF 		bl	strlen
 10036 154c 0346     		mov	r3, r0
 10037 154e 1A46     		mov	r2, r3
 10038 1550 07F10803 		add	r3, r7, #8
 10039 1554 1344     		add	r3, r3, r2
 10040 1556 774A     		ldr	r2, .L511+16
 10041 1558 1068     		ldr	r0, [r2]	@ unaligned
 10042 155a 1860     		str	r0, [r3]	@ unaligned
 10043 155c 9288     		ldrh	r2, [r2, #4]	@ unaligned
 10044 155e 9A80     		strh	r2, [r3, #4]	@ unaligned
 10045 1560 0EE0     		b	.L489
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 238


 10046              	.L488:
1819:..\src/command_processing.c ****                 else
1820:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 10047              		.loc 1 1820 0
 10048 1562 07F10803 		add	r3, r7, #8
 10049 1566 1846     		mov	r0, r3
 10050 1568 FFF7FEFF 		bl	strlen
 10051 156c 0346     		mov	r3, r0
 10052 156e 1A46     		mov	r2, r3
 10053 1570 07F10803 		add	r3, r7, #8
 10054 1574 1344     		add	r3, r3, r2
 10055 1576 6B4A     		ldr	r2, .L511
 10056 1578 1068     		ldr	r0, [r2]	@ unaligned
 10057 157a 1860     		str	r0, [r3]	@ unaligned
 10058 157c 1279     		ldrb	r2, [r2, #4]
 10059 157e 1A71     		strb	r2, [r3, #4]
 10060              	.L489:
1821:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 10061              		.loc 1 1821 0
 10062 1580 07F10803 		add	r3, r7, #8
 10063 1584 1846     		mov	r0, r3
 10064 1586 FFF7FEFF 		bl	strlen
 10065 158a 0346     		mov	r3, r0
 10066 158c 1A46     		mov	r2, r3
 10067 158e 07F10803 		add	r3, r7, #8
 10068 1592 1344     		add	r3, r3, r2
 10069 1594 694A     		ldr	r2, .L511+24
 10070 1596 1C46     		mov	r4, r3
 10071 1598 1346     		mov	r3, r2
 10072 159a 07CB     		ldmia	r3!, {r0, r1, r2}
 10073 159c 2060     		str	r0, [r4]	@ unaligned
 10074 159e 6160     		str	r1, [r4, #4]	@ unaligned
 10075 15a0 A260     		str	r2, [r4, #8]	@ unaligned
 10076 15a2 1B88     		ldrh	r3, [r3]	@ unaligned
 10077 15a4 A381     		strh	r3, [r4, #12]	@ unaligned
1822:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][3]))
 10078              		.loc 1 1822 0
 10079 15a6 614A     		ldr	r2, .L511+8
 10080 15a8 FB6E     		ldr	r3, [r7, #108]
 10081 15aa 1344     		add	r3, r3, r2
 10082 15ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10083 15ae 1946     		mov	r1, r3
 10084 15b0 5F4A     		ldr	r2, .L511+12
 10085 15b2 0B46     		mov	r3, r1
 10086 15b4 9B00     		lsls	r3, r3, #2
 10087 15b6 0B44     		add	r3, r3, r1
 10088 15b8 1344     		add	r3, r3, r2
 10089 15ba 03F5AA73 		add	r3, r3, #340
 10090 15be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10091 15c0 002B     		cmp	r3, #0
 10092 15c2 0FD0     		beq	.L490
1823:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 10093              		.loc 1 1823 0
 10094 15c4 07F10803 		add	r3, r7, #8
 10095 15c8 1846     		mov	r0, r3
 10096 15ca FFF7FEFF 		bl	strlen
 10097 15ce 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 239


 10098 15d0 1A46     		mov	r2, r3
 10099 15d2 07F10803 		add	r3, r7, #8
 10100 15d6 1344     		add	r3, r3, r2
 10101 15d8 564A     		ldr	r2, .L511+16
 10102 15da 1068     		ldr	r0, [r2]	@ unaligned
 10103 15dc 1860     		str	r0, [r3]	@ unaligned
 10104 15de 9288     		ldrh	r2, [r2, #4]	@ unaligned
 10105 15e0 9A80     		strh	r2, [r3, #4]	@ unaligned
 10106 15e2 0EE0     		b	.L491
 10107              	.L490:
1824:..\src/command_processing.c ****                 else
1825:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 10108              		.loc 1 1825 0
 10109 15e4 07F10803 		add	r3, r7, #8
 10110 15e8 1846     		mov	r0, r3
 10111 15ea FFF7FEFF 		bl	strlen
 10112 15ee 0346     		mov	r3, r0
 10113 15f0 1A46     		mov	r2, r3
 10114 15f2 07F10803 		add	r3, r7, #8
 10115 15f6 1344     		add	r3, r3, r2
 10116 15f8 4A4A     		ldr	r2, .L511
 10117 15fa 1068     		ldr	r0, [r2]	@ unaligned
 10118 15fc 1860     		str	r0, [r3]	@ unaligned
 10119 15fe 1279     		ldrb	r2, [r2, #4]
 10120 1600 1A71     		strb	r2, [r3, #4]
 10121              	.L491:
1826:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 10122              		.loc 1 1826 0
 10123 1602 07F10803 		add	r3, r7, #8
 10124 1606 1846     		mov	r0, r3
 10125 1608 FFF7FEFF 		bl	strlen
 10126 160c 0346     		mov	r3, r0
 10127 160e 1A46     		mov	r2, r3
 10128 1610 07F10803 		add	r3, r7, #8
 10129 1614 1344     		add	r3, r3, r2
 10130 1616 4A4A     		ldr	r2, .L511+28
 10131 1618 1C46     		mov	r4, r3
 10132 161a 1346     		mov	r3, r2
 10133 161c 07CB     		ldmia	r3!, {r0, r1, r2}
 10134 161e 2060     		str	r0, [r4]	@ unaligned
 10135 1620 6160     		str	r1, [r4, #4]	@ unaligned
 10136 1622 A260     		str	r2, [r4, #8]	@ unaligned
 10137 1624 1A88     		ldrh	r2, [r3]	@ unaligned
 10138 1626 9B78     		ldrb	r3, [r3, #2]
 10139 1628 A281     		strh	r2, [r4, #12]	@ unaligned
 10140 162a A373     		strb	r3, [r4, #14]
1827:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][4]))
 10141              		.loc 1 1827 0
 10142 162c 3F4A     		ldr	r2, .L511+8
 10143 162e FB6E     		ldr	r3, [r7, #108]
 10144 1630 1344     		add	r3, r3, r2
 10145 1632 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10146 1634 1946     		mov	r1, r3
 10147 1636 3E4A     		ldr	r2, .L511+12
 10148 1638 0B46     		mov	r3, r1
 10149 163a 9B00     		lsls	r3, r3, #2
 10150 163c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 240


 10151 163e 1344     		add	r3, r3, r2
 10152 1640 03F25513 		addw	r3, r3, #341
 10153 1644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10154 1646 002B     		cmp	r3, #0
 10155 1648 0FD0     		beq	.L492
1828:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 10156              		.loc 1 1828 0
 10157 164a 07F10803 		add	r3, r7, #8
 10158 164e 1846     		mov	r0, r3
 10159 1650 FFF7FEFF 		bl	strlen
 10160 1654 0346     		mov	r3, r0
 10161 1656 1A46     		mov	r2, r3
 10162 1658 07F10803 		add	r3, r7, #8
 10163 165c 1344     		add	r3, r3, r2
 10164 165e 354A     		ldr	r2, .L511+16
 10165 1660 1068     		ldr	r0, [r2]	@ unaligned
 10166 1662 1860     		str	r0, [r3]	@ unaligned
 10167 1664 9288     		ldrh	r2, [r2, #4]	@ unaligned
 10168 1666 9A80     		strh	r2, [r3, #4]	@ unaligned
 10169 1668 0EE0     		b	.L493
 10170              	.L492:
1829:..\src/command_processing.c ****                 else
1830:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 10171              		.loc 1 1830 0
 10172 166a 07F10803 		add	r3, r7, #8
 10173 166e 1846     		mov	r0, r3
 10174 1670 FFF7FEFF 		bl	strlen
 10175 1674 0346     		mov	r3, r0
 10176 1676 1A46     		mov	r2, r3
 10177 1678 07F10803 		add	r3, r7, #8
 10178 167c 1344     		add	r3, r3, r2
 10179 167e 294A     		ldr	r2, .L511
 10180 1680 1068     		ldr	r0, [r2]	@ unaligned
 10181 1682 1860     		str	r0, [r3]	@ unaligned
 10182 1684 1279     		ldrb	r2, [r2, #4]
 10183 1686 1A71     		strb	r2, [r3, #4]
 10184              	.L493:
1831:..\src/command_processing.c ****                      
1832:..\src/command_processing.c ****                 strcat(info_string, str);
 10185              		.loc 1 1832 0 discriminator 2
 10186 1688 07F10803 		add	r3, r7, #8
 10187 168c 1946     		mov	r1, r3
 10188 168e 7868     		ldr	r0, [r7, #4]
 10189 1690 FFF7FEFF 		bl	strcat
1802:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 10190              		.loc 1 1802 0 discriminator 2
 10191 1694 FB6E     		ldr	r3, [r7, #108]
 10192 1696 0133     		adds	r3, r3, #1
 10193 1698 FB66     		str	r3, [r7, #108]
 10194              	.L483:
1802:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 10195              		.loc 1 1802 0 is_stmt 0 discriminator 1
 10196 169a 2A4B     		ldr	r3, .L511+32
 10197 169c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10198 169e 1A46     		mov	r2, r3
 10199 16a0 FB6E     		ldr	r3, [r7, #108]
 10200 16a2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 241


 10201 16a4 3FF77BAE 		bgt	.L494
1833:..\src/command_processing.c ****             }       
1834:..\src/command_processing.c ****             
1835:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 10202              		.loc 1 1835 0 is_stmt 1
 10203 16a8 7868     		ldr	r0, [r7, #4]
 10204 16aa FFF7FEFF 		bl	strlen
 10205 16ae 0346     		mov	r3, r0
 10206 16b0 1A46     		mov	r2, r3
 10207 16b2 7B68     		ldr	r3, [r7, #4]
 10208 16b4 1344     		add	r3, r3, r2
 10209 16b6 244A     		ldr	r2, .L511+36
 10210 16b8 1188     		ldrh	r1, [r2]	@ unaligned
 10211 16ba 9278     		ldrb	r2, [r2, #2]
 10212 16bc 1980     		strh	r1, [r3]	@ unaligned
 10213 16be 9A70     		strb	r2, [r3, #2]
1836:..\src/command_processing.c ****           
1837:..\src/command_processing.c ****             IMU_reading_info(info_string);
 10214              		.loc 1 1837 0
 10215 16c0 7868     		ldr	r0, [r7, #4]
 10216 16c2 FFF7FEFF 		bl	IMU_reading_info
 10217              	.L482:
1838:..\src/command_processing.c ****         }
1839:..\src/command_processing.c ****         
1840:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 10218              		.loc 1 1840 0
 10219 16c6 7868     		ldr	r0, [r7, #4]
 10220 16c8 FFF7FEFF 		bl	strlen
 10221 16cc 0346     		mov	r3, r0
 10222 16ce 1A46     		mov	r2, r3
 10223 16d0 7B68     		ldr	r3, [r7, #4]
 10224 16d2 1344     		add	r3, r3, r2
 10225 16d4 1C4A     		ldr	r2, .L511+36
 10226 16d6 1188     		ldrh	r1, [r2]	@ unaligned
 10227 16d8 9278     		ldrb	r2, [r2, #2]
 10228 16da 1980     		strh	r1, [r3]	@ unaligned
 10229 16dc 9A70     		strb	r2, [r3, #2]
1841:..\src/command_processing.c **** 
1842:..\src/command_processing.c **** #ifdef GENERIC_FW   
1843:..\src/command_processing.c ****         int j;
1844:..\src/command_processing.c ****         strcat(info_string, "ENCODER CONFIGURATION\r\n");
1845:..\src/command_processing.c ****         for (i = 0; i < N_ENCODER_LINE_MAX; i++) {
1846:..\src/command_processing.c ****             sprintf(str, "Encoder Connected Line %d: %d", (int) i, (int) N_Encoder_Line_Connected[i
1847:..\src/command_processing.c ****             strcat(info_string, str);
1848:..\src/command_processing.c ****             if (c_mem.right_left == i) {
1849:..\src/command_processing.c ****                 sprintf(str, " [%s HAND main encoder line]", (c_mem.right_left?"LEFT":"RIGHT"));
1850:..\src/command_processing.c ****                 strcat(info_string, str);
1851:..\src/command_processing.c ****             }
1852:..\src/command_processing.c ****             strcat(info_string, "\r\n");
1853:..\src/command_processing.c ****             if (N_Encoder_Line_Connected[i] > 0) {
1854:..\src/command_processing.c ****                 strcat(info_string, "Raw value [status]:\r\n");
1855:..\src/command_processing.c ****                 for (j = 0; j < N_Encoder_Line_Connected[i]; j++) {
1856:..\src/command_processing.c ****                     sprintf(str, "%d\t[%s]\r\n", (uint16) Encoder_Value[i][j], (Encoder_Check[i][j]
1857:..\src/command_processing.c ****                     strcat(info_string, str);
1858:..\src/command_processing.c ****                 }
1859:..\src/command_processing.c ****                 strcat(info_string, "\r\n");
1860:..\src/command_processing.c ****             }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 242


1861:..\src/command_processing.c ****         }
1862:..\src/command_processing.c **** #endif        
1863:..\src/command_processing.c ****         sprintf(str, "Last FW cycle time: %u us\r\n", (uint16)timer_value0 - (uint16)timer_value);
 10230              		.loc 1 1863 0
 10231 16de 1B4B     		ldr	r3, .L511+40
 10232 16e0 1B88     		ldrh	r3, [r3]
 10233 16e2 1A46     		mov	r2, r3
 10234 16e4 1A4B     		ldr	r3, .L511+44
 10235 16e6 1B88     		ldrh	r3, [r3]
 10236 16e8 D21A     		subs	r2, r2, r3
 10237 16ea 07F10803 		add	r3, r7, #8
 10238 16ee 1949     		ldr	r1, .L511+48
 10239 16f0 1846     		mov	r0, r3
 10240 16f2 FFF7FEFF 		bl	sprintf
1864:..\src/command_processing.c ****         strcat(info_string, str);
 10241              		.loc 1 1864 0
 10242 16f6 07F10803 		add	r3, r7, #8
 10243 16fa 1946     		mov	r1, r3
 10244 16fc 7868     		ldr	r0, [r7, #4]
 10245 16fe FFF7FEFF 		bl	strcat
1865:..\src/command_processing.c ****   
1866:..\src/command_processing.c ****         strcat(info_string, "\r\n\0");      // End of info_string
 10246              		.loc 1 1866 0
 10247 1702 7868     		ldr	r0, [r7, #4]
 10248 1704 FFF7FEFF 		bl	strlen
 10249 1708 0346     		mov	r3, r0
 10250 170a 1A46     		mov	r2, r3
 10251 170c 7B68     		ldr	r3, [r7, #4]
 10252 170e 1344     		add	r3, r3, r2
 10253 1710 114A     		ldr	r2, .L511+52
 10254 1712 1188     		ldrh	r1, [r2]	@ unaligned
 10255 1714 9278     		ldrb	r2, [r2, #2]
 10256 1716 1980     		strh	r1, [r3]	@ unaligned
 10257 1718 9A70     		strb	r2, [r3, #2]
 10258              	.L495:
 10259              	.LBE14:
1867:..\src/command_processing.c ****     }
1868:..\src/command_processing.c **** }
 10260              		.loc 1 1868 0
 10261 171a 00BF     		nop
 10262 171c 7437     		adds	r7, r7, #116
 10263              		.cfi_def_cfa_offset 28
 10264 171e BD46     		mov	sp, r7
 10265              		.cfi_def_cfa_register 13
 10266              		@ sp needed
 10267 1720 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 10268              	.L512:
 10269              		.align	2
 10270              	.L511:
 10271 1724 540A0000 		.word	.LC107
 10272 1728 04100000 		.word	.LC166
 10273 172c 00000000 		.word	IMU_connected
 10274 1730 00000000 		.word	c_mem
 10275 1734 4C0A0000 		.word	.LC106
 10276 1738 14100000 		.word	.LC167
 10277 173c 28100000 		.word	.LC168
 10278 1740 38100000 		.word	.LC169
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 243


 10279 1744 00000000 		.word	N_IMU_Connected
 10280 1748 28090000 		.word	.LC87
 10281 174c 00000000 		.word	timer_value0
 10282 1750 00000000 		.word	timer_value
 10283 1754 48100000 		.word	.LC170
 10284 1758 64100000 		.word	.LC171
 10285              		.cfi_endproc
 10286              	.LFE71:
 10287              		.size	prepare_generic_info, .-prepare_generic_info
 10288              		.section	.rodata
 10289              		.align	2
 10290              	.LC172:
 10291 1068 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 10291      41474520 
 10291      53544154 
 10291      49535449 
 10291      43530D0A 
 10292 107d 000000   		.align	2
 10293              	.LC173:
 10294 1080 44617465 		.ascii	"Date of maintenance: %02d/%02d/20%02d\015\012\000"
 10294      206F6620 
 10294      6D61696E 
 10294      74656E61 
 10294      6E63653A 
 10295              		.align	2
 10296              	.LC174:
 10297 10a8 4C617374 		.ascii	"Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\015"
 10297      20636865 
 10297      636B6564 
 10297      2054696D 
 10297      653A2025 
 10298 10db 0A00     		.ascii	"\012\000"
 10299 10dd 000000   		.align	2
 10300              	.LC175:
 10301 10e0 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 10301      74696F6E 
 10301      73206869 
 10301      73746F67 
 10301      72616D20 
 10302 10ff 00       		.align	2
 10303              	.LC176:
 10304 1100 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 10304      2564205B 
 10304      25642D25 
 10304      645D3A20 
 10304      256C750D 
 10305 1116 0000     		.align	2
 10306              	.LC177:
 10307 1118 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 10307      656E7420 
 10307      68697374 
 10307      6F677261 
 10307      6D20286D 
 10308 1132 0000     		.align	2
 10309              	.LC178:
 10310 1134 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 10310      73686F6C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 244


 10310      64202564 
 10310      205B2564 
 10310      2D25645D 
 10311              		.align	2
 10312              	.LC179:
 10313 1150 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 10313      61637469 
 10313      76617469 
 10313      6F6E7320 
 10313      636F756E 
 10314 1172 0000     		.align	2
 10315              	.LC180:
 10316 1174 52657374 		.ascii	"Rest position occurrences: %lu\000"
 10316      20706F73 
 10316      6974696F 
 10316      6E206F63 
 10316      63757272 
 10317 1193 00       		.align	2
 10318              	.LC181:
 10319 1194 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 10319      6520746F 
 10319      74616C20 
 10319      64697370 
 10319      6C616365 
 10320 11ba 0000     		.align	2
 10321              	.LC182:
 10322 11bc 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 10322      6C20706F 
 10322      77657220 
 10322      6F6E2074 
 10322      696D6520 
 10323 11db 00       		.align	2
 10324              	.LC183:
 10325 11dc 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 10325      6C207265 
 10325      73742070 
 10325      6F736974 
 10325      696F6E20 
 10326              		.section	.text.prepare_counter_info,"ax",%progbits
 10327              		.align	2
 10328              		.global	prepare_counter_info
 10329              		.thumb
 10330              		.thumb_func
 10331              		.type	prepare_counter_info, %function
 10332              	prepare_counter_info:
 10333              	.LFB72:
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c **** //==============================================================================
1871:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1872:..\src/command_processing.c **** //==============================================================================
1873:..\src/command_processing.c **** 
1874:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
1875:..\src/command_processing.c **** {
 10334              		.loc 1 1875 0
 10335              		.cfi_startproc
 10336              		@ args = 0, pretend = 0, frame = 120
 10337              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 245


 10338 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 10339              		.cfi_def_cfa_offset 20
 10340              		.cfi_offset 4, -20
 10341              		.cfi_offset 5, -16
 10342              		.cfi_offset 6, -12
 10343              		.cfi_offset 7, -8
 10344              		.cfi_offset 14, -4
 10345 0002 A3B0     		sub	sp, sp, #140
 10346              		.cfi_def_cfa_offset 160
 10347 0004 04AF     		add	r7, sp, #16
 10348              		.cfi_def_cfa 7, 144
 10349 0006 7860     		str	r0, [r7, #4]
1876:..\src/command_processing.c ****     char str[100];  
1877:..\src/command_processing.c ****     int i;
1878:..\src/command_processing.c ****     int step;
1879:..\src/command_processing.c **** 
1880:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 10350              		.loc 1 1880 0
 10351 0008 7868     		ldr	r0, [r7, #4]
 10352 000a FFF7FEFF 		bl	strlen
 10353 000e 0346     		mov	r3, r0
 10354 0010 1A46     		mov	r2, r3
 10355 0012 7B68     		ldr	r3, [r7, #4]
 10356 0014 1344     		add	r3, r3, r2
 10357 0016 C14A     		ldr	r2, .L519
 10358 0018 1D46     		mov	r5, r3
 10359 001a 1446     		mov	r4, r2
 10360 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10361 001e 2860     		str	r0, [r5]	@ unaligned
 10362 0020 6960     		str	r1, [r5, #4]	@ unaligned
 10363 0022 AA60     		str	r2, [r5, #8]	@ unaligned
 10364 0024 EB60     		str	r3, [r5, #12]	@ unaligned
 10365 0026 2068     		ldr	r0, [r4]	@ unaligned
 10366 0028 2861     		str	r0, [r5, #16]	@ unaligned
 10367 002a 2379     		ldrb	r3, [r4, #4]
 10368 002c 2B75     		strb	r3, [r5, #20]
1881:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10369              		.loc 1 1881 0
 10370 002e 7868     		ldr	r0, [r7, #4]
 10371 0030 FFF7FEFF 		bl	strlen
 10372 0034 0346     		mov	r3, r0
 10373 0036 1A46     		mov	r2, r3
 10374 0038 7B68     		ldr	r3, [r7, #4]
 10375 003a 1344     		add	r3, r3, r2
 10376 003c B84A     		ldr	r2, .L519+4
 10377 003e 1188     		ldrh	r1, [r2]	@ unaligned
 10378 0040 9278     		ldrb	r2, [r2, #2]
 10379 0042 1980     		strh	r1, [r3]	@ unaligned
 10380 0044 9A70     		strb	r2, [r3, #2]
1882:..\src/command_processing.c ****     
1883:..\src/command_processing.c ****     sprintf(str, "Date of maintenance: %02d/%02d/20%02d\r\n", (int)g_mem.maint_day, (int)g_mem.main
 10381              		.loc 1 1883 0
 10382 0046 B74B     		ldr	r3, .L519+8
 10383 0048 93F83531 		ldrb	r3, [r3, #309]	@ zero_extendqisi2
 10384 004c 1A46     		mov	r2, r3
 10385 004e B54B     		ldr	r3, .L519+8
 10386 0050 93F83631 		ldrb	r3, [r3, #310]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 246


 10387 0054 1946     		mov	r1, r3
 10388 0056 B34B     		ldr	r3, .L519+8
 10389 0058 93F83731 		ldrb	r3, [r3, #311]	@ zero_extendqisi2
 10390 005c 07F10C00 		add	r0, r7, #12
 10391 0060 0093     		str	r3, [sp]
 10392 0062 0B46     		mov	r3, r1
 10393 0064 B049     		ldr	r1, .L519+12
 10394 0066 FFF7FEFF 		bl	sprintf
1884:..\src/command_processing.c ****     strcat(info_string, str);
 10395              		.loc 1 1884 0
 10396 006a 07F10C03 		add	r3, r7, #12
 10397 006e 1946     		mov	r1, r3
 10398 0070 7868     		ldr	r0, [r7, #4]
 10399 0072 FFF7FEFF 		bl	strcat
1885:..\src/command_processing.c ****             
1886:..\src/command_processing.c ****     sprintf(str, "Last checked Time: %02d/%02d/20%02d %02d:%02d:%02d\r\n", (int)g_mem.curr_time[0],
 10400              		.loc 1 1886 0
 10401 0076 AB4B     		ldr	r3, .L519+8
 10402 0078 93F85030 		ldrb	r3, [r3, #80]	@ zero_extendqisi2
 10403 007c 1D46     		mov	r5, r3
 10404 007e A94B     		ldr	r3, .L519+8
 10405 0080 93F85130 		ldrb	r3, [r3, #81]	@ zero_extendqisi2
 10406 0084 1E46     		mov	r6, r3
 10407 0086 A74B     		ldr	r3, .L519+8
 10408 0088 93F85230 		ldrb	r3, [r3, #82]	@ zero_extendqisi2
 10409 008c 1A46     		mov	r2, r3
 10410 008e A54B     		ldr	r3, .L519+8
 10411 0090 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 10412 0094 1946     		mov	r1, r3
 10413 0096 A34B     		ldr	r3, .L519+8
 10414 0098 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 10415 009c 1C46     		mov	r4, r3
 10416 009e A14B     		ldr	r3, .L519+8
 10417 00a0 93F85530 		ldrb	r3, [r3, #85]	@ zero_extendqisi2
 10418 00a4 07F10C00 		add	r0, r7, #12
 10419 00a8 0393     		str	r3, [sp, #12]
 10420 00aa 0294     		str	r4, [sp, #8]
 10421 00ac 0191     		str	r1, [sp, #4]
 10422 00ae 0092     		str	r2, [sp]
 10423 00b0 3346     		mov	r3, r6
 10424 00b2 2A46     		mov	r2, r5
 10425 00b4 9D49     		ldr	r1, .L519+16
 10426 00b6 FFF7FEFF 		bl	sprintf
1887:..\src/command_processing.c ****     strcat(info_string, str);
 10427              		.loc 1 1887 0
 10428 00ba 07F10C03 		add	r3, r7, #12
 10429 00be 1946     		mov	r1, r3
 10430 00c0 7868     		ldr	r0, [r7, #4]
 10431 00c2 FFF7FEFF 		bl	strcat
1888:..\src/command_processing.c ****     
1889:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 10432              		.loc 1 1889 0
 10433 00c6 07F10C03 		add	r3, r7, #12
 10434 00ca 994A     		ldr	r2, .L519+20
 10435 00cc 1C46     		mov	r4, r3
 10436 00ce 1546     		mov	r5, r2
 10437 00d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 247


 10438 00d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10439 00d4 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 10440 00d8 07C4     		stmia	r4!, {r0, r1, r2}
 10441 00da 2380     		strh	r3, [r4]	@ movhi
 10442 00dc 0234     		adds	r4, r4, #2
 10443 00de 1B0C     		lsrs	r3, r3, #16
 10444 00e0 2370     		strb	r3, [r4]
1890:..\src/command_processing.c ****     strcat(info_string, str);
 10445              		.loc 1 1890 0
 10446 00e2 07F10C03 		add	r3, r7, #12
 10447 00e6 1946     		mov	r1, r3
 10448 00e8 7868     		ldr	r0, [r7, #4]
 10449 00ea FFF7FEFF 		bl	strcat
1891:..\src/command_processing.c ****     step = ( (int)(g_mem.pos_lim_sup >> g_mem.res[0]) / 10);
 10450              		.loc 1 1891 0
 10451 00ee 8D4B     		ldr	r3, .L519+8
 10452 00f0 D3F8FC30 		ldr	r3, [r3, #252]
 10453 00f4 8B4A     		ldr	r2, .L519+8
 10454 00f6 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 10455 00fa 1341     		asrs	r3, r3, r2
 10456 00fc 8D4A     		ldr	r2, .L519+24
 10457 00fe 82FB0312 		smull	r1, r2, r2, r3
 10458 0102 9210     		asrs	r2, r2, #2
 10459 0104 DB17     		asrs	r3, r3, #31
 10460 0106 D31A     		subs	r3, r2, r3
 10461 0108 3B67     		str	r3, [r7, #112]
1892:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 10462              		.loc 1 1892 0
 10463 010a 0123     		movs	r3, #1
 10464 010c 7B67     		str	r3, [r7, #116]
 10465 010e 21E0     		b	.L514
 10466              	.L515:
1893:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), g_mem.position_hist[i-1]
 10467              		.loc 1 1893 0 discriminator 3
 10468 0110 7B6F     		ldr	r3, [r7, #116]
 10469 0112 013B     		subs	r3, r3, #1
 10470 0114 3A6F     		ldr	r2, [r7, #112]
 10471 0116 02FB03F3 		mul	r3, r2, r3
 10472 011a 5C1C     		adds	r4, r3, #1
 10473 011c 3B6F     		ldr	r3, [r7, #112]
 10474 011e 7A6F     		ldr	r2, [r7, #116]
 10475 0120 02FB03F3 		mul	r3, r2, r3
 10476 0124 7A6F     		ldr	r2, [r7, #116]
 10477 0126 013A     		subs	r2, r2, #1
 10478 0128 7E49     		ldr	r1, .L519+8
 10479 012a 0232     		adds	r2, r2, #2
 10480 012c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 10481 0130 07F10C00 		add	r0, r7, #12
 10482 0134 0192     		str	r2, [sp, #4]
 10483 0136 0093     		str	r3, [sp]
 10484 0138 2346     		mov	r3, r4
 10485 013a 7A6F     		ldr	r2, [r7, #116]
 10486 013c 7E49     		ldr	r1, .L519+28
 10487 013e FFF7FEFF 		bl	sprintf
1894:..\src/command_processing.c ****         strcat(info_string, str);
 10488              		.loc 1 1894 0 discriminator 3
 10489 0142 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 248


 10490 0146 1946     		mov	r1, r3
 10491 0148 7868     		ldr	r0, [r7, #4]
 10492 014a FFF7FEFF 		bl	strcat
1892:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 10493              		.loc 1 1892 0 discriminator 3
 10494 014e 7B6F     		ldr	r3, [r7, #116]
 10495 0150 0133     		adds	r3, r3, #1
 10496 0152 7B67     		str	r3, [r7, #116]
 10497              	.L514:
1892:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 10498              		.loc 1 1892 0 is_stmt 0 discriminator 1
 10499 0154 7B6F     		ldr	r3, [r7, #116]
 10500 0156 0A2B     		cmp	r3, #10
 10501 0158 DADD     		ble	.L515
1895:..\src/command_processing.c ****     }
1896:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10502              		.loc 1 1896 0 is_stmt 1
 10503 015a 7868     		ldr	r0, [r7, #4]
 10504 015c FFF7FEFF 		bl	strlen
 10505 0160 0346     		mov	r3, r0
 10506 0162 1A46     		mov	r2, r3
 10507 0164 7B68     		ldr	r3, [r7, #4]
 10508 0166 1344     		add	r3, r3, r2
 10509 0168 6D4A     		ldr	r2, .L519+4
 10510 016a 1188     		ldrh	r1, [r2]	@ unaligned
 10511 016c 9278     		ldrb	r2, [r2, #2]
 10512 016e 1980     		strh	r1, [r3]	@ unaligned
 10513 0170 9A70     		strb	r2, [r3, #2]
1897:..\src/command_processing.c ****     
1898:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 10514              		.loc 1 1898 0
 10515 0172 07F10C03 		add	r3, r7, #12
 10516 0176 714A     		ldr	r2, .L519+32
 10517 0178 1C46     		mov	r4, r3
 10518 017a 1546     		mov	r5, r2
 10519 017c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 10520 017e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 10521 0180 95E80700 		ldmia	r5, {r0, r1, r2}
 10522 0184 03C4     		stmia	r4!, {r0, r1}
 10523 0186 2280     		strh	r2, [r4]	@ movhi
1899:..\src/command_processing.c ****     strcat(info_string, str);
 10524              		.loc 1 1899 0
 10525 0188 07F10C03 		add	r3, r7, #12
 10526 018c 1946     		mov	r1, r3
 10527 018e 7868     		ldr	r0, [r7, #4]
 10528 0190 FFF7FEFF 		bl	strcat
1900:..\src/command_processing.c ****     step = ( (int)(g_mem.current_limit) / 4);
 10529              		.loc 1 1900 0
 10530 0194 634B     		ldr	r3, .L519+8
 10531 0196 B3F90831 		ldrsh	r3, [r3, #264]
 10532 019a 002B     		cmp	r3, #0
 10533 019c 00DA     		bge	.L516
 10534 019e 0333     		adds	r3, r3, #3
 10535              	.L516:
 10536 01a0 9B10     		asrs	r3, r3, #2
 10537 01a2 1BB2     		sxth	r3, r3
 10538 01a4 3B67     		str	r3, [r7, #112]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 249


1901:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 10539              		.loc 1 1901 0
 10540 01a6 0123     		movs	r3, #1
 10541 01a8 7B67     		str	r3, [r7, #116]
 10542 01aa 20E0     		b	.L517
 10543              	.L518:
1902:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), g_mem.current_hist[i
 10544              		.loc 1 1902 0 discriminator 3
 10545 01ac 7B6F     		ldr	r3, [r7, #116]
 10546 01ae 013B     		subs	r3, r3, #1
 10547 01b0 3A6F     		ldr	r2, [r7, #112]
 10548 01b2 02FB03F4 		mul	r4, r2, r3
 10549 01b6 3B6F     		ldr	r3, [r7, #112]
 10550 01b8 7A6F     		ldr	r2, [r7, #116]
 10551 01ba 02FB03F3 		mul	r3, r2, r3
 10552 01be 7A6F     		ldr	r2, [r7, #116]
 10553 01c0 013A     		subs	r2, r2, #1
 10554 01c2 5849     		ldr	r1, .L519+8
 10555 01c4 0C32     		adds	r2, r2, #12
 10556 01c6 51F82220 		ldr	r2, [r1, r2, lsl #2]
 10557 01ca 07F10C00 		add	r0, r7, #12
 10558 01ce 0192     		str	r2, [sp, #4]
 10559 01d0 0093     		str	r3, [sp]
 10560 01d2 2346     		mov	r3, r4
 10561 01d4 7A6F     		ldr	r2, [r7, #116]
 10562 01d6 5A49     		ldr	r1, .L519+36
 10563 01d8 FFF7FEFF 		bl	sprintf
1903:..\src/command_processing.c ****         strcat(info_string, str);
 10564              		.loc 1 1903 0 discriminator 3
 10565 01dc 07F10C03 		add	r3, r7, #12
 10566 01e0 1946     		mov	r1, r3
 10567 01e2 7868     		ldr	r0, [r7, #4]
 10568 01e4 FFF7FEFF 		bl	strcat
1901:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 10569              		.loc 1 1901 0 discriminator 3
 10570 01e8 7B6F     		ldr	r3, [r7, #116]
 10571 01ea 0133     		adds	r3, r3, #1
 10572 01ec 7B67     		str	r3, [r7, #116]
 10573              	.L517:
1901:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 10574              		.loc 1 1901 0 is_stmt 0 discriminator 1
 10575 01ee 7B6F     		ldr	r3, [r7, #116]
 10576 01f0 042B     		cmp	r3, #4
 10577 01f2 DBDD     		ble	.L518
1904:..\src/command_processing.c ****     }
1905:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10578              		.loc 1 1905 0 is_stmt 1
 10579 01f4 7868     		ldr	r0, [r7, #4]
 10580 01f6 FFF7FEFF 		bl	strlen
 10581 01fa 0346     		mov	r3, r0
 10582 01fc 1A46     		mov	r2, r3
 10583 01fe 7B68     		ldr	r3, [r7, #4]
 10584 0200 1344     		add	r3, r3, r2
 10585 0202 474A     		ldr	r2, .L519+4
 10586 0204 1188     		ldrh	r1, [r2]	@ unaligned
 10587 0206 9278     		ldrb	r2, [r2, #2]
 10588 0208 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 250


 10589 020a 9A70     		strb	r2, [r3, #2]
1906:..\src/command_processing.c ****             
1907:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", g_mem.emg_counter[0], g_mem.emg_counter[1]);
 10590              		.loc 1 1907 0
 10591 020c 454B     		ldr	r3, .L519+8
 10592 020e 1A68     		ldr	r2, [r3]
 10593 0210 444B     		ldr	r3, .L519+8
 10594 0212 5B68     		ldr	r3, [r3, #4]
 10595 0214 07F10C00 		add	r0, r7, #12
 10596 0218 4A49     		ldr	r1, .L519+40
 10597 021a FFF7FEFF 		bl	sprintf
1908:..\src/command_processing.c ****     strcat(info_string, str);
 10598              		.loc 1 1908 0
 10599 021e 07F10C03 		add	r3, r7, #12
 10600 0222 1946     		mov	r1, r3
 10601 0224 7868     		ldr	r0, [r7, #4]
 10602 0226 FFF7FEFF 		bl	strcat
1909:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10603              		.loc 1 1909 0
 10604 022a 7868     		ldr	r0, [r7, #4]
 10605 022c FFF7FEFF 		bl	strlen
 10606 0230 0346     		mov	r3, r0
 10607 0232 1A46     		mov	r2, r3
 10608 0234 7B68     		ldr	r3, [r7, #4]
 10609 0236 1344     		add	r3, r3, r2
 10610 0238 394A     		ldr	r2, .L519+4
 10611 023a 1188     		ldrh	r1, [r2]	@ unaligned
 10612 023c 9278     		ldrb	r2, [r2, #2]
 10613 023e 1980     		strh	r1, [r3]	@ unaligned
 10614 0240 9A70     		strb	r2, [r3, #2]
1910:..\src/command_processing.c ****     
1911:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", g_mem.rest_counter);
 10615              		.loc 1 1911 0
 10616 0242 384B     		ldr	r3, .L519+8
 10617 0244 1A6C     		ldr	r2, [r3, #64]
 10618 0246 07F10C03 		add	r3, r7, #12
 10619 024a 3F49     		ldr	r1, .L519+44
 10620 024c 1846     		mov	r0, r3
 10621 024e FFF7FEFF 		bl	sprintf
1912:..\src/command_processing.c ****     strcat(info_string, str);
 10622              		.loc 1 1912 0
 10623 0252 07F10C03 		add	r3, r7, #12
 10624 0256 1946     		mov	r1, r3
 10625 0258 7868     		ldr	r0, [r7, #4]
 10626 025a FFF7FEFF 		bl	strcat
1913:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10627              		.loc 1 1913 0
 10628 025e 7868     		ldr	r0, [r7, #4]
 10629 0260 FFF7FEFF 		bl	strlen
 10630 0264 0346     		mov	r3, r0
 10631 0266 1A46     		mov	r2, r3
 10632 0268 7B68     		ldr	r3, [r7, #4]
 10633 026a 1344     		add	r3, r3, r2
 10634 026c 2C4A     		ldr	r2, .L519+4
 10635 026e 1188     		ldrh	r1, [r2]	@ unaligned
 10636 0270 9278     		ldrb	r2, [r2, #2]
 10637 0272 1980     		strh	r1, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 251


 10638 0274 9A70     		strb	r2, [r3, #2]
1914:..\src/command_processing.c ****     
1915:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", g_mem.wire_disp);
 10639              		.loc 1 1915 0
 10640 0276 2B4B     		ldr	r3, .L519+8
 10641 0278 5A6C     		ldr	r2, [r3, #68]
 10642 027a 07F10C03 		add	r3, r7, #12
 10643 027e 3349     		ldr	r1, .L519+48
 10644 0280 1846     		mov	r0, r3
 10645 0282 FFF7FEFF 		bl	sprintf
1916:..\src/command_processing.c ****     strcat(info_string, str);
 10646              		.loc 1 1916 0
 10647 0286 07F10C03 		add	r3, r7, #12
 10648 028a 1946     		mov	r1, r3
 10649 028c 7868     		ldr	r0, [r7, #4]
 10650 028e FFF7FEFF 		bl	strcat
1917:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10651              		.loc 1 1917 0
 10652 0292 7868     		ldr	r0, [r7, #4]
 10653 0294 FFF7FEFF 		bl	strlen
 10654 0298 0346     		mov	r3, r0
 10655 029a 1A46     		mov	r2, r3
 10656 029c 7B68     		ldr	r3, [r7, #4]
 10657 029e 1344     		add	r3, r3, r2
 10658 02a0 1F4A     		ldr	r2, .L519+4
 10659 02a2 1188     		ldrh	r1, [r2]	@ unaligned
 10660 02a4 9278     		ldrb	r2, [r2, #2]
 10661 02a6 1980     		strh	r1, [r3]	@ unaligned
 10662 02a8 9A70     		strb	r2, [r3, #2]
1918:..\src/command_processing.c ****     
1919:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", g_mem.total_time_on);
 10663              		.loc 1 1919 0
 10664 02aa 1E4B     		ldr	r3, .L519+8
 10665 02ac 9A6C     		ldr	r2, [r3, #72]
 10666 02ae 07F10C03 		add	r3, r7, #12
 10667 02b2 2749     		ldr	r1, .L519+52
 10668 02b4 1846     		mov	r0, r3
 10669 02b6 FFF7FEFF 		bl	sprintf
1920:..\src/command_processing.c ****     strcat(info_string, str);
 10670              		.loc 1 1920 0
 10671 02ba 07F10C03 		add	r3, r7, #12
 10672 02be 1946     		mov	r1, r3
 10673 02c0 7868     		ldr	r0, [r7, #4]
 10674 02c2 FFF7FEFF 		bl	strcat
1921:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10675              		.loc 1 1921 0
 10676 02c6 7868     		ldr	r0, [r7, #4]
 10677 02c8 FFF7FEFF 		bl	strlen
 10678 02cc 0346     		mov	r3, r0
 10679 02ce 1A46     		mov	r2, r3
 10680 02d0 7B68     		ldr	r3, [r7, #4]
 10681 02d2 1344     		add	r3, r3, r2
 10682 02d4 124A     		ldr	r2, .L519+4
 10683 02d6 1188     		ldrh	r1, [r2]	@ unaligned
 10684 02d8 9278     		ldrb	r2, [r2, #2]
 10685 02da 1980     		strh	r1, [r3]	@ unaligned
 10686 02dc 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 252


1922:..\src/command_processing.c ****     
1923:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", g_mem.total_time_rest);
 10687              		.loc 1 1923 0
 10688 02de 114B     		ldr	r3, .L519+8
 10689 02e0 DA6C     		ldr	r2, [r3, #76]
 10690 02e2 07F10C03 		add	r3, r7, #12
 10691 02e6 1B49     		ldr	r1, .L519+56
 10692 02e8 1846     		mov	r0, r3
 10693 02ea FFF7FEFF 		bl	sprintf
1924:..\src/command_processing.c ****     strcat(info_string, str);
 10694              		.loc 1 1924 0
 10695 02ee 07F10C03 		add	r3, r7, #12
 10696 02f2 1946     		mov	r1, r3
 10697 02f4 7868     		ldr	r0, [r7, #4]
 10698 02f6 FFF7FEFF 		bl	strcat
1925:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10699              		.loc 1 1925 0
 10700 02fa 7868     		ldr	r0, [r7, #4]
 10701 02fc FFF7FEFF 		bl	strlen
 10702 0300 0346     		mov	r3, r0
 10703 0302 1A46     		mov	r2, r3
 10704 0304 7B68     		ldr	r3, [r7, #4]
 10705 0306 1344     		add	r3, r3, r2
 10706 0308 054A     		ldr	r2, .L519+4
 10707 030a 1188     		ldrh	r1, [r2]	@ unaligned
 10708 030c 9278     		ldrb	r2, [r2, #2]
 10709 030e 1980     		strh	r1, [r3]	@ unaligned
 10710 0310 9A70     		strb	r2, [r3, #2]
1926:..\src/command_processing.c **** 
1927:..\src/command_processing.c **** }
 10711              		.loc 1 1927 0
 10712 0312 00BF     		nop
 10713 0314 7C37     		adds	r7, r7, #124
 10714              		.cfi_def_cfa_offset 20
 10715 0316 BD46     		mov	sp, r7
 10716              		.cfi_def_cfa_register 13
 10717              		@ sp needed
 10718 0318 F0BD     		pop	{r4, r5, r6, r7, pc}
 10719              	.L520:
 10720 031a 00BF     		.align	2
 10721              	.L519:
 10722 031c 68100000 		.word	.LC172
 10723 0320 28090000 		.word	.LC87
 10724 0324 00000000 		.word	g_mem
 10725 0328 80100000 		.word	.LC173
 10726 032c A8100000 		.word	.LC174
 10727 0330 E0100000 		.word	.LC175
 10728 0334 67666666 		.word	1717986919
 10729 0338 00110000 		.word	.LC176
 10730 033c 18110000 		.word	.LC177
 10731 0340 34110000 		.word	.LC178
 10732 0344 50110000 		.word	.LC179
 10733 0348 74110000 		.word	.LC180
 10734 034c 94110000 		.word	.LC181
 10735 0350 BC110000 		.word	.LC182
 10736 0354 DC110000 		.word	.LC183
 10737              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 253


 10738              	.LFE72:
 10739              		.size	prepare_counter_info, .-prepare_counter_info
 10740              		.section	.rodata
 10741              		.align	2
 10742              	.LC184:
 10743 1200 4669726D 		.ascii	"Firmware version: %s\015\012\000"
 10743      77617265 
 10743      20766572 
 10743      73696F6E 
 10743      3A202573 
 10744 1217 00       		.align	2
 10745              	.LC185:
 10746 1218 506F7369 		.ascii	"Position PID: \000"
 10746      74696F6E 
 10746      20504944 
 10746      3A2000
 10747 1227 00       		.align	2
 10748              	.LC186:
 10749 1228 43757272 		.ascii	"Current PID: \000"
 10749      656E7420 
 10749      5049443A 
 10749      2000
 10750 1236 0000     		.align	2
 10751              	.LC187:
 10752 1238 5265736F 		.ascii	"Resolutions:\000"
 10752      6C757469 
 10752      6F6E733A 
 10752      00
 10753 1245 000000   		.align	2
 10754              	.LC188:
 10755 1248 25640900 		.ascii	"%d\011\000"
 10756              		.align	2
 10757              	.LC189:
 10758 124c 4F666673 		.ascii	"Offsets:\000"
 10758      6574733A 
 10758      00
 10759 1255 000000   		.align	2
 10760              	.LC190:
 10761 1258 256C6409 		.ascii	"%ld\011\000"
 10761      00
 10762 125d 000000   		.align	2
 10763              	.LC191:
 10764 1260 4D756C74 		.ascii	"Multipliers:\000"
 10764      69706C69 
 10764      6572733A 
 10764      00
 10765 126d 000000   		.align	2
 10766              	.LC192:
 10767 1270 25660900 		.ascii	"%f\011\000"
 10768              		.align	2
 10769              	.LC193:
 10770 1274 506F7369 		.ascii	"Position limits: inf -> %ld, sup -> %ld\015\012\000"
 10770      74696F6E 
 10770      206C696D 
 10770      6974733A 
 10770      20696E66 
 10771              		.section	.text.prepare_SD_param_info,"ax",%progbits
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 254


 10772              		.align	2
 10773              		.global	prepare_SD_param_info
 10774              		.thumb
 10775              		.thumb_func
 10776              		.type	prepare_SD_param_info, %function
 10777              	prepare_SD_param_info:
 10778              	.LFB73:
1928:..\src/command_processing.c **** 
1929:..\src/command_processing.c **** //==============================================================================
1930:..\src/command_processing.c **** //                                                    PREPARE SD CARD PARAM INFO
1931:..\src/command_processing.c **** //==============================================================================
1932:..\src/command_processing.c **** 
1933:..\src/command_processing.c **** void prepare_SD_param_info(char *info_string)
1934:..\src/command_processing.c **** {
 10779              		.loc 1 1934 0
 10780              		.cfi_startproc
 10781              		@ args = 0, pretend = 0, frame = 112
 10782              		@ frame_needed = 1, uses_anonymous_args = 0
 10783 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 10784              		.cfi_def_cfa_offset 20
 10785              		.cfi_offset 4, -20
 10786              		.cfi_offset 5, -16
 10787              		.cfi_offset 6, -12
 10788              		.cfi_offset 7, -8
 10789              		.cfi_offset 14, -4
 10790 0002 9FB0     		sub	sp, sp, #124
 10791              		.cfi_def_cfa_offset 144
 10792 0004 02AF     		add	r7, sp, #8
 10793              		.cfi_def_cfa 7, 136
 10794 0006 7860     		str	r0, [r7, #4]
1935:..\src/command_processing.c ****     char str[100];  
1936:..\src/command_processing.c ****     int i;
1937:..\src/command_processing.c ****            
1938:..\src/command_processing.c ****     // NOTE: use g_mem structure instead of c_mem because when changing parameters c_mem struct is 
1939:..\src/command_processing.c ****     sprintf(info_string, "Firmware version: %s\r\n", VERSION);
 10795              		.loc 1 1939 0
 10796 0008 B94A     		ldr	r2, .L558
 10797 000a BA49     		ldr	r1, .L558+4
 10798 000c 7868     		ldr	r0, [r7, #4]
 10799 000e FFF7FEFF 		bl	sprintf
1940:..\src/command_processing.c ****     
1941:..\src/command_processing.c ****     sprintf(str, "ID: %d\r\n", (int) c_mem.id);
 10800              		.loc 1 1941 0
 10801 0012 B94B     		ldr	r3, .L558+8
 10802 0014 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 10803 0018 1A46     		mov	r2, r3
 10804 001a 07F10803 		add	r3, r7, #8
 10805 001e B749     		ldr	r1, .L558+12
 10806 0020 1846     		mov	r0, r3
 10807 0022 FFF7FEFF 		bl	sprintf
1942:..\src/command_processing.c ****     strcat(info_string, str);
 10808              		.loc 1 1942 0
 10809 0026 07F10803 		add	r3, r7, #8
 10810 002a 1946     		mov	r1, r3
 10811 002c 7868     		ldr	r0, [r7, #4]
 10812 002e FFF7FEFF 		bl	strcat
1943:..\src/command_processing.c ****     switch(g_mem.right_left){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 255


 10813              		.loc 1 1943 0
 10814 0032 B34B     		ldr	r3, .L558+16
 10815 0034 93F84631 		ldrb	r3, [r3, #326]	@ zero_extendqisi2
 10816 0038 002B     		cmp	r3, #0
 10817 003a 02D0     		beq	.L523
 10818 003c 012B     		cmp	r3, #1
 10819 003e 15D0     		beq	.L524
 10820 0040 26E0     		b	.L522
 10821              	.L523:
1944:..\src/command_processing.c ****         case RIGHT_HAND:
1945:..\src/command_processing.c ****             strcat(info_string, "Hand side: RIGHT\r\n");
 10822              		.loc 1 1945 0
 10823 0042 7868     		ldr	r0, [r7, #4]
 10824 0044 FFF7FEFF 		bl	strlen
 10825 0048 0346     		mov	r3, r0
 10826 004a 1A46     		mov	r2, r3
 10827 004c 7B68     		ldr	r3, [r7, #4]
 10828 004e 1344     		add	r3, r3, r2
 10829 0050 AC4A     		ldr	r2, .L558+20
 10830 0052 1D46     		mov	r5, r3
 10831 0054 1446     		mov	r4, r2
 10832 0056 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10833 0058 2860     		str	r0, [r5]	@ unaligned
 10834 005a 6960     		str	r1, [r5, #4]	@ unaligned
 10835 005c AA60     		str	r2, [r5, #8]	@ unaligned
 10836 005e EB60     		str	r3, [r5, #12]	@ unaligned
 10837 0060 2388     		ldrh	r3, [r4]	@ unaligned
 10838 0062 A278     		ldrb	r2, [r4, #2]
 10839 0064 2B82     		strh	r3, [r5, #16]	@ unaligned
 10840 0066 1346     		mov	r3, r2
 10841 0068 AB74     		strb	r3, [r5, #18]
1946:..\src/command_processing.c ****             break;
 10842              		.loc 1 1946 0
 10843 006a 11E0     		b	.L522
 10844              	.L524:
1947:..\src/command_processing.c ****         case LEFT_HAND:
1948:..\src/command_processing.c ****             strcat(info_string, "Hand side: LEFT\r\n");
 10845              		.loc 1 1948 0
 10846 006c 7868     		ldr	r0, [r7, #4]
 10847 006e FFF7FEFF 		bl	strlen
 10848 0072 0346     		mov	r3, r0
 10849 0074 1A46     		mov	r2, r3
 10850 0076 7B68     		ldr	r3, [r7, #4]
 10851 0078 1344     		add	r3, r3, r2
 10852 007a A34A     		ldr	r2, .L558+24
 10853 007c 1D46     		mov	r5, r3
 10854 007e 1446     		mov	r4, r2
 10855 0080 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 10856 0082 2860     		str	r0, [r5]	@ unaligned
 10857 0084 6960     		str	r1, [r5, #4]	@ unaligned
 10858 0086 AA60     		str	r2, [r5, #8]	@ unaligned
 10859 0088 EB60     		str	r3, [r5, #12]	@ unaligned
 10860 008a 2388     		ldrh	r3, [r4]	@ unaligned
 10861 008c 2B82     		strh	r3, [r5, #16]	@ unaligned
1949:..\src/command_processing.c ****             break;
 10862              		.loc 1 1949 0
 10863 008e 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 256


 10864              	.L522:
1950:..\src/command_processing.c ****     }
1951:..\src/command_processing.c **** 
1952:..\src/command_processing.c ****     sprintf(str, "Date of maintenance: %02d/%02d/20%02d\r\n", (int)g_mem.maint_day, (int)g_mem.main
 10865              		.loc 1 1952 0
 10866 0090 9B4B     		ldr	r3, .L558+16
 10867 0092 93F83531 		ldrb	r3, [r3, #309]	@ zero_extendqisi2
 10868 0096 1A46     		mov	r2, r3
 10869 0098 994B     		ldr	r3, .L558+16
 10870 009a 93F83631 		ldrb	r3, [r3, #310]	@ zero_extendqisi2
 10871 009e 1946     		mov	r1, r3
 10872 00a0 974B     		ldr	r3, .L558+16
 10873 00a2 93F83731 		ldrb	r3, [r3, #311]	@ zero_extendqisi2
 10874 00a6 07F10800 		add	r0, r7, #8
 10875 00aa 0093     		str	r3, [sp]
 10876 00ac 0B46     		mov	r3, r1
 10877 00ae 9749     		ldr	r1, .L558+28
 10878 00b0 FFF7FEFF 		bl	sprintf
1953:..\src/command_processing.c ****     strcat(info_string, str);
 10879              		.loc 1 1953 0
 10880 00b4 07F10803 		add	r3, r7, #8
 10881 00b8 1946     		mov	r1, r3
 10882 00ba 7868     		ldr	r0, [r7, #4]
 10883 00bc FFF7FEFF 		bl	strcat
1954:..\src/command_processing.c ****     
1955:..\src/command_processing.c ****     strcat(info_string, "Position PID: "); 
 10884              		.loc 1 1955 0
 10885 00c0 7868     		ldr	r0, [r7, #4]
 10886 00c2 FFF7FEFF 		bl	strlen
 10887 00c6 0346     		mov	r3, r0
 10888 00c8 1A46     		mov	r2, r3
 10889 00ca 7B68     		ldr	r3, [r7, #4]
 10890 00cc 1344     		add	r3, r3, r2
 10891 00ce 904A     		ldr	r2, .L558+32
 10892 00d0 1C46     		mov	r4, r3
 10893 00d2 1346     		mov	r3, r2
 10894 00d4 07CB     		ldmia	r3!, {r0, r1, r2}
 10895 00d6 2060     		str	r0, [r4]	@ unaligned
 10896 00d8 6160     		str	r1, [r4, #4]	@ unaligned
 10897 00da A260     		str	r2, [r4, #8]	@ unaligned
 10898 00dc 1A88     		ldrh	r2, [r3]	@ unaligned
 10899 00de 9B78     		ldrb	r3, [r3, #2]
 10900 00e0 A281     		strh	r2, [r4, #12]	@ unaligned
 10901 00e2 A373     		strb	r3, [r4, #14]
1956:..\src/command_processing.c ****     if(g_mem.control_mode != CURR_AND_POS_CONTROL) {
 10902              		.loc 1 1956 0
 10903 00e4 864B     		ldr	r3, .L558+16
 10904 00e6 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 10905 00ea 032B     		cmp	r3, #3
 10906 00ec 4ED0     		beq	.L525
1957:..\src/command_processing.c ****         sprintf(str, "P -> %f  ", ((double) g_mem.k_p / 65536));
 10907              		.loc 1 1957 0
 10908 00ee 844B     		ldr	r3, .L558+16
 10909 00f0 D3F8A430 		ldr	r3, [r3, #164]
 10910 00f4 1846     		mov	r0, r3
 10911 00f6 FFF7FEFF 		bl	__aeabi_i2d
 10912 00fa 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 257


 10913 00fe 854B     		ldr	r3, .L558+36
 10914 0100 FFF7FEFF 		bl	__aeabi_ddiv
 10915 0104 0346     		mov	r3, r0
 10916 0106 0C46     		mov	r4, r1
 10917 0108 07F10800 		add	r0, r7, #8
 10918 010c 1A46     		mov	r2, r3
 10919 010e 2346     		mov	r3, r4
 10920 0110 8149     		ldr	r1, .L558+40
 10921 0112 FFF7FEFF 		bl	sprintf
1958:..\src/command_processing.c ****         strcat(info_string, str);
 10922              		.loc 1 1958 0
 10923 0116 07F10803 		add	r3, r7, #8
 10924 011a 1946     		mov	r1, r3
 10925 011c 7868     		ldr	r0, [r7, #4]
 10926 011e FFF7FEFF 		bl	strcat
1959:..\src/command_processing.c ****         sprintf(str, "I -> %f  ", ((double) g_mem.k_i / 65536));
 10927              		.loc 1 1959 0
 10928 0122 774B     		ldr	r3, .L558+16
 10929 0124 D3F8A830 		ldr	r3, [r3, #168]
 10930 0128 1846     		mov	r0, r3
 10931 012a FFF7FEFF 		bl	__aeabi_i2d
 10932 012e 4FF00002 		mov	r2, #0
 10933 0132 784B     		ldr	r3, .L558+36
 10934 0134 FFF7FEFF 		bl	__aeabi_ddiv
 10935 0138 0346     		mov	r3, r0
 10936 013a 0C46     		mov	r4, r1
 10937 013c 07F10800 		add	r0, r7, #8
 10938 0140 1A46     		mov	r2, r3
 10939 0142 2346     		mov	r3, r4
 10940 0144 7549     		ldr	r1, .L558+44
 10941 0146 FFF7FEFF 		bl	sprintf
1960:..\src/command_processing.c ****         strcat(info_string, str);
 10942              		.loc 1 1960 0
 10943 014a 07F10803 		add	r3, r7, #8
 10944 014e 1946     		mov	r1, r3
 10945 0150 7868     		ldr	r0, [r7, #4]
 10946 0152 FFF7FEFF 		bl	strcat
1961:..\src/command_processing.c ****         sprintf(str, "D -> %f\r\n", ((double) g_mem.k_d / 65536));
 10947              		.loc 1 1961 0
 10948 0156 6A4B     		ldr	r3, .L558+16
 10949 0158 D3F8AC30 		ldr	r3, [r3, #172]
 10950 015c 1846     		mov	r0, r3
 10951 015e FFF7FEFF 		bl	__aeabi_i2d
 10952 0162 4FF00002 		mov	r2, #0
 10953 0166 6B4B     		ldr	r3, .L558+36
 10954 0168 FFF7FEFF 		bl	__aeabi_ddiv
 10955 016c 0346     		mov	r3, r0
 10956 016e 0C46     		mov	r4, r1
 10957 0170 07F10800 		add	r0, r7, #8
 10958 0174 1A46     		mov	r2, r3
 10959 0176 2346     		mov	r3, r4
 10960 0178 6949     		ldr	r1, .L558+48
 10961 017a FFF7FEFF 		bl	sprintf
1962:..\src/command_processing.c ****         strcat(info_string, str);
 10962              		.loc 1 1962 0
 10963 017e 07F10803 		add	r3, r7, #8
 10964 0182 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 258


 10965 0184 7868     		ldr	r0, [r7, #4]
 10966 0186 FFF7FEFF 		bl	strcat
 10967 018a 4DE0     		b	.L526
 10968              	.L525:
1963:..\src/command_processing.c ****     }
1964:..\src/command_processing.c ****     else { 
1965:..\src/command_processing.c ****         sprintf(str, "P -> %f  ", ((double) g_mem.k_p_dl / 65536));
 10969              		.loc 1 1965 0
 10970 018c 5C4B     		ldr	r3, .L558+16
 10971 018e D3F8BC30 		ldr	r3, [r3, #188]
 10972 0192 1846     		mov	r0, r3
 10973 0194 FFF7FEFF 		bl	__aeabi_i2d
 10974 0198 4FF00002 		mov	r2, #0
 10975 019c 5D4B     		ldr	r3, .L558+36
 10976 019e FFF7FEFF 		bl	__aeabi_ddiv
 10977 01a2 0346     		mov	r3, r0
 10978 01a4 0C46     		mov	r4, r1
 10979 01a6 07F10800 		add	r0, r7, #8
 10980 01aa 1A46     		mov	r2, r3
 10981 01ac 2346     		mov	r3, r4
 10982 01ae 5A49     		ldr	r1, .L558+40
 10983 01b0 FFF7FEFF 		bl	sprintf
1966:..\src/command_processing.c ****         strcat(info_string, str);
 10984              		.loc 1 1966 0
 10985 01b4 07F10803 		add	r3, r7, #8
 10986 01b8 1946     		mov	r1, r3
 10987 01ba 7868     		ldr	r0, [r7, #4]
 10988 01bc FFF7FEFF 		bl	strcat
1967:..\src/command_processing.c ****         sprintf(str, "I -> %f  ", ((double) g_mem.k_i_dl / 65536));
 10989              		.loc 1 1967 0
 10990 01c0 4F4B     		ldr	r3, .L558+16
 10991 01c2 D3F8C030 		ldr	r3, [r3, #192]
 10992 01c6 1846     		mov	r0, r3
 10993 01c8 FFF7FEFF 		bl	__aeabi_i2d
 10994 01cc 4FF00002 		mov	r2, #0
 10995 01d0 504B     		ldr	r3, .L558+36
 10996 01d2 FFF7FEFF 		bl	__aeabi_ddiv
 10997 01d6 0346     		mov	r3, r0
 10998 01d8 0C46     		mov	r4, r1
 10999 01da 07F10800 		add	r0, r7, #8
 11000 01de 1A46     		mov	r2, r3
 11001 01e0 2346     		mov	r3, r4
 11002 01e2 4E49     		ldr	r1, .L558+44
 11003 01e4 FFF7FEFF 		bl	sprintf
1968:..\src/command_processing.c ****         strcat(info_string, str);
 11004              		.loc 1 1968 0
 11005 01e8 07F10803 		add	r3, r7, #8
 11006 01ec 1946     		mov	r1, r3
 11007 01ee 7868     		ldr	r0, [r7, #4]
 11008 01f0 FFF7FEFF 		bl	strcat
1969:..\src/command_processing.c ****         sprintf(str, "D -> %f\r\n", ((double) g_mem.k_d_dl / 65536));
 11009              		.loc 1 1969 0
 11010 01f4 424B     		ldr	r3, .L558+16
 11011 01f6 D3F8C430 		ldr	r3, [r3, #196]
 11012 01fa 1846     		mov	r0, r3
 11013 01fc FFF7FEFF 		bl	__aeabi_i2d
 11014 0200 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 259


 11015 0204 434B     		ldr	r3, .L558+36
 11016 0206 FFF7FEFF 		bl	__aeabi_ddiv
 11017 020a 0346     		mov	r3, r0
 11018 020c 0C46     		mov	r4, r1
 11019 020e 07F10800 		add	r0, r7, #8
 11020 0212 1A46     		mov	r2, r3
 11021 0214 2346     		mov	r3, r4
 11022 0216 4249     		ldr	r1, .L558+48
 11023 0218 FFF7FEFF 		bl	sprintf
1970:..\src/command_processing.c ****         strcat(info_string, str);
 11024              		.loc 1 1970 0
 11025 021c 07F10803 		add	r3, r7, #8
 11026 0220 1946     		mov	r1, r3
 11027 0222 7868     		ldr	r0, [r7, #4]
 11028 0224 FFF7FEFF 		bl	strcat
 11029              	.L526:
1971:..\src/command_processing.c ****     }
1972:..\src/command_processing.c **** 
1973:..\src/command_processing.c ****     strcat(info_string, "Current PID: ");
 11030              		.loc 1 1973 0
 11031 0228 7868     		ldr	r0, [r7, #4]
 11032 022a FFF7FEFF 		bl	strlen
 11033 022e 0346     		mov	r3, r0
 11034 0230 1A46     		mov	r2, r3
 11035 0232 7B68     		ldr	r3, [r7, #4]
 11036 0234 1344     		add	r3, r3, r2
 11037 0236 3B4A     		ldr	r2, .L558+52
 11038 0238 1C46     		mov	r4, r3
 11039 023a 1346     		mov	r3, r2
 11040 023c 07CB     		ldmia	r3!, {r0, r1, r2}
 11041 023e 2060     		str	r0, [r4]	@ unaligned
 11042 0240 6160     		str	r1, [r4, #4]	@ unaligned
 11043 0242 A260     		str	r2, [r4, #8]	@ unaligned
 11044 0244 1B88     		ldrh	r3, [r3]	@ unaligned
 11045 0246 A381     		strh	r3, [r4, #12]	@ unaligned
1974:..\src/command_processing.c ****     if(g_mem.control_mode != CURR_AND_POS_CONTROL) {
 11046              		.loc 1 1974 0
 11047 0248 2D4B     		ldr	r3, .L558+16
 11048 024a 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 11049 024e 032B     		cmp	r3, #3
 11050 0250 6AD0     		beq	.L527
1975:..\src/command_processing.c ****         sprintf(str, "P -> %f  ", ((double) g_mem.k_p_c / 65536));
 11051              		.loc 1 1975 0
 11052 0252 2B4B     		ldr	r3, .L558+16
 11053 0254 D3F8B030 		ldr	r3, [r3, #176]
 11054 0258 1846     		mov	r0, r3
 11055 025a FFF7FEFF 		bl	__aeabi_i2d
 11056 025e 4FF00002 		mov	r2, #0
 11057 0262 2C4B     		ldr	r3, .L558+36
 11058 0264 FFF7FEFF 		bl	__aeabi_ddiv
 11059 0268 0346     		mov	r3, r0
 11060 026a 0C46     		mov	r4, r1
 11061 026c 07F10800 		add	r0, r7, #8
 11062 0270 1A46     		mov	r2, r3
 11063 0272 2346     		mov	r3, r4
 11064 0274 2849     		ldr	r1, .L558+40
 11065 0276 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 260


1976:..\src/command_processing.c ****         strcat(info_string, str);
 11066              		.loc 1 1976 0
 11067 027a 07F10803 		add	r3, r7, #8
 11068 027e 1946     		mov	r1, r3
 11069 0280 7868     		ldr	r0, [r7, #4]
 11070 0282 FFF7FEFF 		bl	strcat
1977:..\src/command_processing.c ****         sprintf(str, "I -> %f  ", ((double) g_mem.k_i_c / 65536));
 11071              		.loc 1 1977 0
 11072 0286 1E4B     		ldr	r3, .L558+16
 11073 0288 D3F8B430 		ldr	r3, [r3, #180]
 11074 028c 1846     		mov	r0, r3
 11075 028e FFF7FEFF 		bl	__aeabi_i2d
 11076 0292 4FF00002 		mov	r2, #0
 11077 0296 1F4B     		ldr	r3, .L558+36
 11078 0298 FFF7FEFF 		bl	__aeabi_ddiv
 11079 029c 0346     		mov	r3, r0
 11080 029e 0C46     		mov	r4, r1
 11081 02a0 07F10800 		add	r0, r7, #8
 11082 02a4 1A46     		mov	r2, r3
 11083 02a6 2346     		mov	r3, r4
 11084 02a8 1C49     		ldr	r1, .L558+44
 11085 02aa FFF7FEFF 		bl	sprintf
1978:..\src/command_processing.c ****         strcat(info_string, str);
 11086              		.loc 1 1978 0
 11087 02ae 07F10803 		add	r3, r7, #8
 11088 02b2 1946     		mov	r1, r3
 11089 02b4 7868     		ldr	r0, [r7, #4]
 11090 02b6 FFF7FEFF 		bl	strcat
1979:..\src/command_processing.c ****         sprintf(str, "D -> %f\r\n", ((double) g_mem.k_d_c / 65536));
 11091              		.loc 1 1979 0
 11092 02ba 114B     		ldr	r3, .L558+16
 11093 02bc D3F8B830 		ldr	r3, [r3, #184]
 11094 02c0 1846     		mov	r0, r3
 11095 02c2 FFF7FEFF 		bl	__aeabi_i2d
 11096 02c6 4FF00002 		mov	r2, #0
 11097 02ca 124B     		ldr	r3, .L558+36
 11098 02cc FFF7FEFF 		bl	__aeabi_ddiv
 11099 02d0 0346     		mov	r3, r0
 11100 02d2 0C46     		mov	r4, r1
 11101 02d4 07F10800 		add	r0, r7, #8
 11102 02d8 1A46     		mov	r2, r3
 11103 02da 2346     		mov	r3, r4
 11104 02dc 1049     		ldr	r1, .L558+48
 11105 02de FFF7FEFF 		bl	sprintf
1980:..\src/command_processing.c ****         strcat(info_string, str);
 11106              		.loc 1 1980 0
 11107 02e2 07F10803 		add	r3, r7, #8
 11108 02e6 1946     		mov	r1, r3
 11109 02e8 7868     		ldr	r0, [r7, #4]
 11110 02ea FFF7FEFF 		bl	strcat
 11111 02ee 69E0     		b	.L528
 11112              	.L559:
 11113              		.align	2
 11114              	.L558:
 11115 02f0 40090000 		.word	.LC89
 11116 02f4 00120000 		.word	.LC184
 11117 02f8 00000000 		.word	c_mem
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 261


 11118 02fc 80090000 		.word	.LC92
 11119 0300 00000000 		.word	g_mem
 11120 0304 8C090000 		.word	.LC93
 11121 0308 A0090000 		.word	.LC94
 11122 030c 80100000 		.word	.LC173
 11123 0310 18120000 		.word	.LC185
 11124 0314 0000F040 		.word	1089470464
 11125 0318 680B0000 		.word	.LC119
 11126 031c 740B0000 		.word	.LC120
 11127 0320 800B0000 		.word	.LC121
 11128 0324 28120000 		.word	.LC186
 11129              	.L527:
1981:..\src/command_processing.c **** 
1982:..\src/command_processing.c ****     }
1983:..\src/command_processing.c ****     else {
1984:..\src/command_processing.c ****         sprintf(str, "P -> %f  ", ((double) g_mem.k_p_c_dl / 65536));
 11130              		.loc 1 1984 0
 11131 0328 B34B     		ldr	r3, .L560
 11132 032a D3F8C830 		ldr	r3, [r3, #200]
 11133 032e 1846     		mov	r0, r3
 11134 0330 FFF7FEFF 		bl	__aeabi_i2d
 11135 0334 4FF00002 		mov	r2, #0
 11136 0338 B04B     		ldr	r3, .L560+4
 11137 033a FFF7FEFF 		bl	__aeabi_ddiv
 11138 033e 0346     		mov	r3, r0
 11139 0340 0C46     		mov	r4, r1
 11140 0342 07F10800 		add	r0, r7, #8
 11141 0346 1A46     		mov	r2, r3
 11142 0348 2346     		mov	r3, r4
 11143 034a AD49     		ldr	r1, .L560+8
 11144 034c FFF7FEFF 		bl	sprintf
1985:..\src/command_processing.c ****         strcat(info_string, str);
 11145              		.loc 1 1985 0
 11146 0350 07F10803 		add	r3, r7, #8
 11147 0354 1946     		mov	r1, r3
 11148 0356 7868     		ldr	r0, [r7, #4]
 11149 0358 FFF7FEFF 		bl	strcat
1986:..\src/command_processing.c ****         sprintf(str, "I -> %f  ", ((double) g_mem.k_i_c_dl / 65536));
 11150              		.loc 1 1986 0
 11151 035c A64B     		ldr	r3, .L560
 11152 035e D3F8CC30 		ldr	r3, [r3, #204]
 11153 0362 1846     		mov	r0, r3
 11154 0364 FFF7FEFF 		bl	__aeabi_i2d
 11155 0368 4FF00002 		mov	r2, #0
 11156 036c A34B     		ldr	r3, .L560+4
 11157 036e FFF7FEFF 		bl	__aeabi_ddiv
 11158 0372 0346     		mov	r3, r0
 11159 0374 0C46     		mov	r4, r1
 11160 0376 07F10800 		add	r0, r7, #8
 11161 037a 1A46     		mov	r2, r3
 11162 037c 2346     		mov	r3, r4
 11163 037e A149     		ldr	r1, .L560+12
 11164 0380 FFF7FEFF 		bl	sprintf
1987:..\src/command_processing.c ****         strcat(info_string, str);
 11165              		.loc 1 1987 0
 11166 0384 07F10803 		add	r3, r7, #8
 11167 0388 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 262


 11168 038a 7868     		ldr	r0, [r7, #4]
 11169 038c FFF7FEFF 		bl	strcat
1988:..\src/command_processing.c ****         sprintf(str, "D -> %f\r\n", ((double) g_mem.k_d_c_dl / 65536));
 11170              		.loc 1 1988 0
 11171 0390 994B     		ldr	r3, .L560
 11172 0392 D3F8D030 		ldr	r3, [r3, #208]
 11173 0396 1846     		mov	r0, r3
 11174 0398 FFF7FEFF 		bl	__aeabi_i2d
 11175 039c 4FF00002 		mov	r2, #0
 11176 03a0 964B     		ldr	r3, .L560+4
 11177 03a2 FFF7FEFF 		bl	__aeabi_ddiv
 11178 03a6 0346     		mov	r3, r0
 11179 03a8 0C46     		mov	r4, r1
 11180 03aa 07F10800 		add	r0, r7, #8
 11181 03ae 1A46     		mov	r2, r3
 11182 03b0 2346     		mov	r3, r4
 11183 03b2 9549     		ldr	r1, .L560+16
 11184 03b4 FFF7FEFF 		bl	sprintf
1989:..\src/command_processing.c ****         strcat(info_string, str);
 11185              		.loc 1 1989 0
 11186 03b8 07F10803 		add	r3, r7, #8
 11187 03bc 1946     		mov	r1, r3
 11188 03be 7868     		ldr	r0, [r7, #4]
 11189 03c0 FFF7FEFF 		bl	strcat
 11190              	.L528:
1990:..\src/command_processing.c ****     }
1991:..\src/command_processing.c ****     
1992:..\src/command_processing.c ****     switch(g_mem.input_mode) {
 11191              		.loc 1 1992 0
 11192 03c4 8C4B     		ldr	r3, .L560
 11193 03c6 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
 11194 03ca 052B     		cmp	r3, #5
 11195 03cc 00F29680 		bhi	.L529
 11196 03d0 01A2     		adr	r2, .L531
 11197 03d2 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 11198 03d6 00BF     		.p2align 2
 11199              	.L531:
 11200 03d8 F1030000 		.word	.L530+1
 11201 03dc 15040000 		.word	.L532+1
 11202 03e0 3D040000 		.word	.L533+1
 11203 03e4 6F040000 		.word	.L534+1
 11204 03e8 9F040000 		.word	.L535+1
 11205 03ec CD040000 		.word	.L536+1
 11206              		.p2align 1
 11207              	.L530:
1993:..\src/command_processing.c ****         case INPUT_MODE_EXTERNAL:
1994:..\src/command_processing.c ****             strcat(info_string, "Input mode: USB\r\n");
 11208              		.loc 1 1994 0
 11209 03f0 7868     		ldr	r0, [r7, #4]
 11210 03f2 FFF7FEFF 		bl	strlen
 11211 03f6 0346     		mov	r3, r0
 11212 03f8 1A46     		mov	r2, r3
 11213 03fa 7B68     		ldr	r3, [r7, #4]
 11214 03fc 1344     		add	r3, r3, r2
 11215 03fe 834A     		ldr	r2, .L560+20
 11216 0400 1D46     		mov	r5, r3
 11217 0402 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 263


 11218 0404 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11219 0406 2860     		str	r0, [r5]	@ unaligned
 11220 0408 6960     		str	r1, [r5, #4]	@ unaligned
 11221 040a AA60     		str	r2, [r5, #8]	@ unaligned
 11222 040c EB60     		str	r3, [r5, #12]	@ unaligned
 11223 040e 2388     		ldrh	r3, [r4]	@ unaligned
 11224 0410 2B82     		strh	r3, [r5, #16]	@ unaligned
1995:..\src/command_processing.c ****             break;
 11225              		.loc 1 1995 0
 11226 0412 73E0     		b	.L529
 11227              	.L532:
1996:..\src/command_processing.c ****         case INPUT_MODE_ENCODER3:
1997:..\src/command_processing.c ****             strcat(info_string, "Input mode: Handle\r\n");
 11228              		.loc 1 1997 0
 11229 0414 7868     		ldr	r0, [r7, #4]
 11230 0416 FFF7FEFF 		bl	strlen
 11231 041a 0346     		mov	r3, r0
 11232 041c 1A46     		mov	r2, r3
 11233 041e 7B68     		ldr	r3, [r7, #4]
 11234 0420 1344     		add	r3, r3, r2
 11235 0422 7B4A     		ldr	r2, .L560+24
 11236 0424 1D46     		mov	r5, r3
 11237 0426 1446     		mov	r4, r2
 11238 0428 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11239 042a 2860     		str	r0, [r5]	@ unaligned
 11240 042c 6960     		str	r1, [r5, #4]	@ unaligned
 11241 042e AA60     		str	r2, [r5, #8]	@ unaligned
 11242 0430 EB60     		str	r3, [r5, #12]	@ unaligned
 11243 0432 2068     		ldr	r0, [r4]	@ unaligned
 11244 0434 2861     		str	r0, [r5, #16]	@ unaligned
 11245 0436 2379     		ldrb	r3, [r4, #4]
 11246 0438 2B75     		strb	r3, [r5, #20]
1998:..\src/command_processing.c ****             break;
 11247              		.loc 1 1998 0
 11248 043a 5FE0     		b	.L529
 11249              	.L533:
1999:..\src/command_processing.c ****         case INPUT_MODE_EMG_PROPORTIONAL:
2000:..\src/command_processing.c ****             strcat(info_string, "Input mode: EMG proportional\r\n");
 11250              		.loc 1 2000 0
 11251 043c 7868     		ldr	r0, [r7, #4]
 11252 043e FFF7FEFF 		bl	strlen
 11253 0442 0346     		mov	r3, r0
 11254 0444 1A46     		mov	r2, r3
 11255 0446 7B68     		ldr	r3, [r7, #4]
 11256 0448 1344     		add	r3, r3, r2
 11257 044a 724A     		ldr	r2, .L560+28
 11258 044c 1D46     		mov	r5, r3
 11259 044e 1446     		mov	r4, r2
 11260 0450 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11261 0452 2860     		str	r0, [r5]	@ unaligned
 11262 0454 6960     		str	r1, [r5, #4]	@ unaligned
 11263 0456 AA60     		str	r2, [r5, #8]	@ unaligned
 11264 0458 EB60     		str	r3, [r5, #12]	@ unaligned
 11265 045a 07CC     		ldmia	r4!, {r0, r1, r2}
 11266 045c 2861     		str	r0, [r5, #16]	@ unaligned
 11267 045e 6961     		str	r1, [r5, #20]	@ unaligned
 11268 0460 AA61     		str	r2, [r5, #24]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 264


 11269 0462 2388     		ldrh	r3, [r4]	@ unaligned
 11270 0464 A278     		ldrb	r2, [r4, #2]
 11271 0466 AB83     		strh	r3, [r5, #28]	@ unaligned
 11272 0468 1346     		mov	r3, r2
 11273 046a AB77     		strb	r3, [r5, #30]
2001:..\src/command_processing.c ****             break;
 11274              		.loc 1 2001 0
 11275 046c 46E0     		b	.L529
 11276              	.L534:
2002:..\src/command_processing.c ****         case INPUT_MODE_EMG_INTEGRAL:
2003:..\src/command_processing.c ****             strcat(info_string, "Input mode: EMG integral\r\n");
 11277              		.loc 1 2003 0
 11278 046e 7868     		ldr	r0, [r7, #4]
 11279 0470 FFF7FEFF 		bl	strlen
 11280 0474 0346     		mov	r3, r0
 11281 0476 1A46     		mov	r2, r3
 11282 0478 7B68     		ldr	r3, [r7, #4]
 11283 047a 1344     		add	r3, r3, r2
 11284 047c 664A     		ldr	r2, .L560+32
 11285 047e 1D46     		mov	r5, r3
 11286 0480 1446     		mov	r4, r2
 11287 0482 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11288 0484 2860     		str	r0, [r5]	@ unaligned
 11289 0486 6960     		str	r1, [r5, #4]	@ unaligned
 11290 0488 AA60     		str	r2, [r5, #8]	@ unaligned
 11291 048a EB60     		str	r3, [r5, #12]	@ unaligned
 11292 048c 03CC     		ldmia	r4!, {r0, r1}
 11293 048e 2861     		str	r0, [r5, #16]	@ unaligned
 11294 0490 6961     		str	r1, [r5, #20]	@ unaligned
 11295 0492 2388     		ldrh	r3, [r4]	@ unaligned
 11296 0494 A278     		ldrb	r2, [r4, #2]
 11297 0496 2B83     		strh	r3, [r5, #24]	@ unaligned
 11298 0498 1346     		mov	r3, r2
 11299 049a AB76     		strb	r3, [r5, #26]
2004:..\src/command_processing.c ****             break;
 11300              		.loc 1 2004 0
 11301 049c 2EE0     		b	.L529
 11302              	.L535:
2005:..\src/command_processing.c ****         case INPUT_MODE_EMG_FCFS:
2006:..\src/command_processing.c ****             strcat(info_string, "Input mode: EMG FCFS\r\n");
 11303              		.loc 1 2006 0
 11304 049e 7868     		ldr	r0, [r7, #4]
 11305 04a0 FFF7FEFF 		bl	strlen
 11306 04a4 0346     		mov	r3, r0
 11307 04a6 1A46     		mov	r2, r3
 11308 04a8 7B68     		ldr	r3, [r7, #4]
 11309 04aa 1344     		add	r3, r3, r2
 11310 04ac 5B4A     		ldr	r2, .L560+36
 11311 04ae 1C46     		mov	r4, r3
 11312 04b0 1546     		mov	r5, r2
 11313 04b2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 11314 04b4 2060     		str	r0, [r4]	@ unaligned
 11315 04b6 6160     		str	r1, [r4, #4]	@ unaligned
 11316 04b8 A260     		str	r2, [r4, #8]	@ unaligned
 11317 04ba E360     		str	r3, [r4, #12]	@ unaligned
 11318 04bc 2868     		ldr	r0, [r5]	@ unaligned
 11319 04be 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 265


 11320 04c0 AB88     		ldrh	r3, [r5, #4]	@ unaligned
 11321 04c2 AA79     		ldrb	r2, [r5, #6]
 11322 04c4 A382     		strh	r3, [r4, #20]	@ unaligned
 11323 04c6 1346     		mov	r3, r2
 11324 04c8 A375     		strb	r3, [r4, #22]
2007:..\src/command_processing.c ****             break;
 11325              		.loc 1 2007 0
 11326 04ca 17E0     		b	.L529
 11327              	.L536:
2008:..\src/command_processing.c ****         case INPUT_MODE_EMG_FCFS_ADV:
2009:..\src/command_processing.c ****             strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 11328              		.loc 1 2009 0
 11329 04cc 7868     		ldr	r0, [r7, #4]
 11330 04ce FFF7FEFF 		bl	strlen
 11331 04d2 0346     		mov	r3, r0
 11332 04d4 1A46     		mov	r2, r3
 11333 04d6 7B68     		ldr	r3, [r7, #4]
 11334 04d8 1344     		add	r3, r3, r2
 11335 04da 514A     		ldr	r2, .L560+40
 11336 04dc 1D46     		mov	r5, r3
 11337 04de 1446     		mov	r4, r2
 11338 04e0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11339 04e2 2860     		str	r0, [r5]	@ unaligned
 11340 04e4 6960     		str	r1, [r5, #4]	@ unaligned
 11341 04e6 AA60     		str	r2, [r5, #8]	@ unaligned
 11342 04e8 EB60     		str	r3, [r5, #12]	@ unaligned
 11343 04ea 03CC     		ldmia	r4!, {r0, r1}
 11344 04ec 2861     		str	r0, [r5, #16]	@ unaligned
 11345 04ee 6961     		str	r1, [r5, #20]	@ unaligned
 11346 04f0 2388     		ldrh	r3, [r4]	@ unaligned
 11347 04f2 A278     		ldrb	r2, [r4, #2]
 11348 04f4 2B83     		strh	r3, [r5, #24]	@ unaligned
 11349 04f6 1346     		mov	r3, r2
 11350 04f8 AB76     		strb	r3, [r5, #26]
2010:..\src/command_processing.c ****             break;
 11351              		.loc 1 2010 0
 11352 04fa 00BF     		nop
 11353              	.L529:
2011:..\src/command_processing.c ****     }
2012:..\src/command_processing.c **** 
2013:..\src/command_processing.c ****     switch(g_mem.control_mode) {
 11354              		.loc 1 2013 0
 11355 04fc 3E4B     		ldr	r3, .L560
 11356 04fe 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 11357 0502 032B     		cmp	r3, #3
 11358 0504 63D8     		bhi	.L556
 11359 0506 01A2     		adr	r2, .L539
 11360 0508 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 11361              		.p2align 2
 11362              	.L539:
 11363 050c 1D050000 		.word	.L538+1
 11364 0510 47050000 		.word	.L540+1
 11365 0514 6B050000 		.word	.L541+1
 11366 0518 91050000 		.word	.L542+1
 11367              		.p2align 1
 11368              	.L538:
2014:..\src/command_processing.c ****         case CONTROL_ANGLE:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 266


2015:..\src/command_processing.c ****             strcat(info_string, "Control mode: Position\r\n");
 11369              		.loc 1 2015 0
 11370 051c 7868     		ldr	r0, [r7, #4]
 11371 051e FFF7FEFF 		bl	strlen
 11372 0522 0346     		mov	r3, r0
 11373 0524 1A46     		mov	r2, r3
 11374 0526 7B68     		ldr	r3, [r7, #4]
 11375 0528 1344     		add	r3, r3, r2
 11376 052a 3E4A     		ldr	r2, .L560+44
 11377 052c 1D46     		mov	r5, r3
 11378 052e 1446     		mov	r4, r2
 11379 0530 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11380 0532 2860     		str	r0, [r5]	@ unaligned
 11381 0534 6960     		str	r1, [r5, #4]	@ unaligned
 11382 0536 AA60     		str	r2, [r5, #8]	@ unaligned
 11383 0538 EB60     		str	r3, [r5, #12]	@ unaligned
 11384 053a 03CC     		ldmia	r4!, {r0, r1}
 11385 053c 2861     		str	r0, [r5, #16]	@ unaligned
 11386 053e 6961     		str	r1, [r5, #20]	@ unaligned
 11387 0540 2378     		ldrb	r3, [r4]
 11388 0542 2B76     		strb	r3, [r5, #24]
2016:..\src/command_processing.c ****             break;
 11389              		.loc 1 2016 0
 11390 0544 44E0     		b	.L543
 11391              	.L540:
2017:..\src/command_processing.c ****         case CONTROL_PWM:
2018:..\src/command_processing.c ****             strcat(info_string, "Control mode: PWM\r\n");
 11392              		.loc 1 2018 0
 11393 0546 7868     		ldr	r0, [r7, #4]
 11394 0548 FFF7FEFF 		bl	strlen
 11395 054c 0346     		mov	r3, r0
 11396 054e 1A46     		mov	r2, r3
 11397 0550 7B68     		ldr	r3, [r7, #4]
 11398 0552 1344     		add	r3, r3, r2
 11399 0554 344A     		ldr	r2, .L560+48
 11400 0556 1D46     		mov	r5, r3
 11401 0558 1446     		mov	r4, r2
 11402 055a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11403 055c 2860     		str	r0, [r5]	@ unaligned
 11404 055e 6960     		str	r1, [r5, #4]	@ unaligned
 11405 0560 AA60     		str	r2, [r5, #8]	@ unaligned
 11406 0562 EB60     		str	r3, [r5, #12]	@ unaligned
 11407 0564 2068     		ldr	r0, [r4]	@ unaligned
 11408 0566 2861     		str	r0, [r5, #16]	@ unaligned
2019:..\src/command_processing.c ****             break;
 11409              		.loc 1 2019 0
 11410 0568 32E0     		b	.L543
 11411              	.L541:
2020:..\src/command_processing.c ****         case CONTROL_CURRENT:
2021:..\src/command_processing.c ****             strcat(info_string, "Control mode: Current\r\n");
 11412              		.loc 1 2021 0
 11413 056a 7868     		ldr	r0, [r7, #4]
 11414 056c FFF7FEFF 		bl	strlen
 11415 0570 0346     		mov	r3, r0
 11416 0572 1A46     		mov	r2, r3
 11417 0574 7B68     		ldr	r3, [r7, #4]
 11418 0576 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 267


 11419 0578 2C4A     		ldr	r2, .L560+52
 11420 057a 1D46     		mov	r5, r3
 11421 057c 1446     		mov	r4, r2
 11422 057e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11423 0580 2860     		str	r0, [r5]	@ unaligned
 11424 0582 6960     		str	r1, [r5, #4]	@ unaligned
 11425 0584 AA60     		str	r2, [r5, #8]	@ unaligned
 11426 0586 EB60     		str	r3, [r5, #12]	@ unaligned
 11427 0588 03CC     		ldmia	r4!, {r0, r1}
 11428 058a 2861     		str	r0, [r5, #16]	@ unaligned
 11429 058c 6961     		str	r1, [r5, #20]	@ unaligned
2022:..\src/command_processing.c ****             break;
 11430              		.loc 1 2022 0
 11431 058e 1FE0     		b	.L543
 11432              	.L542:
2023:..\src/command_processing.c ****         case CURR_AND_POS_CONTROL:
2024:..\src/command_processing.c ****             strcat(info_string, "Control mode: Position and Current\r\n");
 11433              		.loc 1 2024 0
 11434 0590 7868     		ldr	r0, [r7, #4]
 11435 0592 FFF7FEFF 		bl	strlen
 11436 0596 0346     		mov	r3, r0
 11437 0598 1A46     		mov	r2, r3
 11438 059a 7B68     		ldr	r3, [r7, #4]
 11439 059c 1344     		add	r3, r3, r2
 11440 059e 244A     		ldr	r2, .L560+56
 11441 05a0 1446     		mov	r4, r2
 11442 05a2 9E46     		mov	lr, r3
 11443 05a4 04F1200C 		add	ip, r4, #32
 11444              	.L544:
 11445 05a8 7546     		mov	r5, lr
 11446 05aa 2646     		mov	r6, r4
 11447 05ac 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 11448 05ae 2860     		str	r0, [r5]	@ unaligned
 11449 05b0 6960     		str	r1, [r5, #4]	@ unaligned
 11450 05b2 AA60     		str	r2, [r5, #8]	@ unaligned
 11451 05b4 EB60     		str	r3, [r5, #12]	@ unaligned
 11452 05b6 1034     		adds	r4, r4, #16
 11453 05b8 0EF1100E 		add	lr, lr, #16
 11454 05bc 6445     		cmp	r4, ip
 11455 05be F3D1     		bne	.L544
 11456 05c0 7346     		mov	r3, lr
 11457 05c2 2246     		mov	r2, r4
 11458 05c4 1068     		ldr	r0, [r2]	@ unaligned
 11459 05c6 1860     		str	r0, [r3]	@ unaligned
 11460 05c8 1279     		ldrb	r2, [r2, #4]
 11461 05ca 1A71     		strb	r2, [r3, #4]
2025:..\src/command_processing.c ****             break;
 11462              		.loc 1 2025 0
 11463 05cc 00E0     		b	.L543
 11464              	.L556:
2026:..\src/command_processing.c ****         default:
2027:..\src/command_processing.c ****             break;
 11465              		.loc 1 2027 0
 11466 05ce 00BF     		nop
 11467              	.L543:
2028:..\src/command_processing.c ****     }
2029:..\src/command_processing.c ****      
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 268


2030:..\src/command_processing.c ****     strcat(info_string, "Resolutions:");
 11468              		.loc 1 2030 0
 11469 05d0 7868     		ldr	r0, [r7, #4]
 11470 05d2 FFF7FEFF 		bl	strlen
 11471 05d6 0346     		mov	r3, r0
 11472 05d8 1A46     		mov	r2, r3
 11473 05da 7B68     		ldr	r3, [r7, #4]
 11474 05dc 1344     		add	r3, r3, r2
 11475 05de 154A     		ldr	r2, .L560+60
 11476 05e0 1C46     		mov	r4, r3
 11477 05e2 1346     		mov	r3, r2
 11478 05e4 07CB     		ldmia	r3!, {r0, r1, r2}
 11479 05e6 2060     		str	r0, [r4]	@ unaligned
 11480 05e8 6160     		str	r1, [r4, #4]	@ unaligned
 11481 05ea A260     		str	r2, [r4, #8]	@ unaligned
 11482 05ec 1B78     		ldrb	r3, [r3]
 11483 05ee 2373     		strb	r3, [r4, #12]
2031:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11484              		.loc 1 2031 0
 11485 05f0 0023     		movs	r3, #0
 11486 05f2 FB66     		str	r3, [r7, #108]
 11487 05f4 35E0     		b	.L545
 11488              	.L561:
 11489 05f6 00BF     		.align	2
 11490              	.L560:
 11491 05f8 00000000 		.word	g_mem
 11492 05fc 0000F040 		.word	1089470464
 11493 0600 680B0000 		.word	.LC119
 11494 0604 740B0000 		.word	.LC120
 11495 0608 800B0000 		.word	.LC121
 11496 060c E00B0000 		.word	.LC125
 11497 0610 F40B0000 		.word	.LC126
 11498 0614 0C0C0000 		.word	.LC127
 11499 0618 2C0C0000 		.word	.LC128
 11500 061c 480C0000 		.word	.LC129
 11501 0620 600C0000 		.word	.LC130
 11502 0624 7C0C0000 		.word	.LC131
 11503 0628 980C0000 		.word	.LC132
 11504 062c AC0C0000 		.word	.LC133
 11505 0630 C40C0000 		.word	.LC134
 11506 0634 38120000 		.word	.LC187
 11507              	.L546:
2032:..\src/command_processing.c ****         sprintf(str, "%d\t", (int) g_mem.res[i]);
 11508              		.loc 1 2032 0 discriminator 3
 11509 0638 924A     		ldr	r2, .L562
 11510 063a FB6E     		ldr	r3, [r7, #108]
 11511 063c 1344     		add	r3, r3, r2
 11512 063e D733     		adds	r3, r3, #215
 11513 0640 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11514 0642 1A46     		mov	r2, r3
 11515 0644 07F10803 		add	r3, r7, #8
 11516 0648 8F49     		ldr	r1, .L562+4
 11517 064a 1846     		mov	r0, r3
 11518 064c FFF7FEFF 		bl	sprintf
2033:..\src/command_processing.c ****         strcat(info_string, str);
 11519              		.loc 1 2033 0 discriminator 3
 11520 0650 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 269


 11521 0654 1946     		mov	r1, r3
 11522 0656 7868     		ldr	r0, [r7, #4]
 11523 0658 FFF7FEFF 		bl	strcat
2031:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11524              		.loc 1 2031 0 discriminator 3
 11525 065c FB6E     		ldr	r3, [r7, #108]
 11526 065e 0133     		adds	r3, r3, #1
 11527 0660 FB66     		str	r3, [r7, #108]
 11528              	.L545:
2031:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11529              		.loc 1 2031 0 is_stmt 0 discriminator 1
 11530 0662 FB6E     		ldr	r3, [r7, #108]
 11531 0664 022B     		cmp	r3, #2
 11532 0666 E7DD     		ble	.L546
2034:..\src/command_processing.c ****     }
2035:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 11533              		.loc 1 2035 0 is_stmt 1
 11534 0668 7868     		ldr	r0, [r7, #4]
 11535 066a FFF7FEFF 		bl	strlen
 11536 066e 0346     		mov	r3, r0
 11537 0670 1A46     		mov	r2, r3
 11538 0672 7B68     		ldr	r3, [r7, #4]
 11539 0674 1344     		add	r3, r3, r2
 11540 0676 854A     		ldr	r2, .L562+8
 11541 0678 1188     		ldrh	r1, [r2]	@ unaligned
 11542 067a 9278     		ldrb	r2, [r2, #2]
 11543 067c 1980     		strh	r1, [r3]	@ unaligned
 11544 067e 9A70     		strb	r2, [r3, #2]
2036:..\src/command_processing.c **** 
2037:..\src/command_processing.c ****     strcat(info_string, "Offsets:");
 11545              		.loc 1 2037 0
 11546 0680 7868     		ldr	r0, [r7, #4]
 11547 0682 FFF7FEFF 		bl	strlen
 11548 0686 0346     		mov	r3, r0
 11549 0688 1A46     		mov	r2, r3
 11550 068a 7B68     		ldr	r3, [r7, #4]
 11551 068c 1344     		add	r3, r3, r2
 11552 068e 8049     		ldr	r1, .L562+12
 11553 0690 1A46     		mov	r2, r3
 11554 0692 0B46     		mov	r3, r1
 11555 0694 03CB     		ldmia	r3!, {r0, r1}
 11556 0696 1060     		str	r0, [r2]	@ unaligned
 11557 0698 5160     		str	r1, [r2, #4]	@ unaligned
 11558 069a 1B78     		ldrb	r3, [r3]
 11559 069c 1372     		strb	r3, [r2, #8]
2038:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11560              		.loc 1 2038 0
 11561 069e 0023     		movs	r3, #0
 11562 06a0 FB66     		str	r3, [r7, #108]
 11563 06a2 1BE0     		b	.L547
 11564              	.L548:
2039:..\src/command_processing.c ****         sprintf(str, "%ld\t", (int32) g_mem.m_off[i] >> g_mem.res[i]);
 11565              		.loc 1 2039 0 discriminator 3
 11566 06a4 774A     		ldr	r2, .L562
 11567 06a6 FB6E     		ldr	r3, [r7, #108]
 11568 06a8 3633     		adds	r3, r3, #54
 11569 06aa 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 270


 11570 06ac 1344     		add	r3, r3, r2
 11571 06ae 5B68     		ldr	r3, [r3, #4]
 11572 06b0 7449     		ldr	r1, .L562
 11573 06b2 FA6E     		ldr	r2, [r7, #108]
 11574 06b4 0A44     		add	r2, r2, r1
 11575 06b6 D732     		adds	r2, r2, #215
 11576 06b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11577 06ba 43FA02F2 		asr	r2, r3, r2
 11578 06be 07F10803 		add	r3, r7, #8
 11579 06c2 7449     		ldr	r1, .L562+16
 11580 06c4 1846     		mov	r0, r3
 11581 06c6 FFF7FEFF 		bl	sprintf
2040:..\src/command_processing.c ****         strcat(info_string, str);
 11582              		.loc 1 2040 0 discriminator 3
 11583 06ca 07F10803 		add	r3, r7, #8
 11584 06ce 1946     		mov	r1, r3
 11585 06d0 7868     		ldr	r0, [r7, #4]
 11586 06d2 FFF7FEFF 		bl	strcat
2038:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11587              		.loc 1 2038 0 discriminator 3
 11588 06d6 FB6E     		ldr	r3, [r7, #108]
 11589 06d8 0133     		adds	r3, r3, #1
 11590 06da FB66     		str	r3, [r7, #108]
 11591              	.L547:
2038:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11592              		.loc 1 2038 0 is_stmt 0 discriminator 1
 11593 06dc FB6E     		ldr	r3, [r7, #108]
 11594 06de 022B     		cmp	r3, #2
 11595 06e0 E0DD     		ble	.L548
2041:..\src/command_processing.c ****     }
2042:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 11596              		.loc 1 2042 0 is_stmt 1
 11597 06e2 7868     		ldr	r0, [r7, #4]
 11598 06e4 FFF7FEFF 		bl	strlen
 11599 06e8 0346     		mov	r3, r0
 11600 06ea 1A46     		mov	r2, r3
 11601 06ec 7B68     		ldr	r3, [r7, #4]
 11602 06ee 1344     		add	r3, r3, r2
 11603 06f0 664A     		ldr	r2, .L562+8
 11604 06f2 1188     		ldrh	r1, [r2]	@ unaligned
 11605 06f4 9278     		ldrb	r2, [r2, #2]
 11606 06f6 1980     		strh	r1, [r3]	@ unaligned
 11607 06f8 9A70     		strb	r2, [r3, #2]
2043:..\src/command_processing.c ****         
2044:..\src/command_processing.c ****     strcat(info_string, "Multipliers:");
 11608              		.loc 1 2044 0
 11609 06fa 7868     		ldr	r0, [r7, #4]
 11610 06fc FFF7FEFF 		bl	strlen
 11611 0700 0346     		mov	r3, r0
 11612 0702 1A46     		mov	r2, r3
 11613 0704 7B68     		ldr	r3, [r7, #4]
 11614 0706 1344     		add	r3, r3, r2
 11615 0708 634A     		ldr	r2, .L562+20
 11616 070a 1C46     		mov	r4, r3
 11617 070c 1346     		mov	r3, r2
 11618 070e 07CB     		ldmia	r3!, {r0, r1, r2}
 11619 0710 2060     		str	r0, [r4]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 271


 11620 0712 6160     		str	r1, [r4, #4]	@ unaligned
 11621 0714 A260     		str	r2, [r4, #8]	@ unaligned
 11622 0716 1B78     		ldrb	r3, [r3]
 11623 0718 2373     		strb	r3, [r4, #12]
2045:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11624              		.loc 1 2045 0
 11625 071a 0023     		movs	r3, #0
 11626 071c FB66     		str	r3, [r7, #108]
 11627 071e 19E0     		b	.L549
 11628              	.L550:
2046:..\src/command_processing.c ****         sprintf(str,"%f\t",(float) g_mem.m_mult[i]);
 11629              		.loc 1 2046 0 discriminator 3
 11630 0720 584A     		ldr	r2, .L562
 11631 0722 FB6E     		ldr	r3, [r7, #108]
 11632 0724 3A33     		adds	r3, r3, #58
 11633 0726 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 11634 072a 1846     		mov	r0, r3
 11635 072c FFF7FEFF 		bl	__aeabi_f2d
 11636 0730 0346     		mov	r3, r0
 11637 0732 0C46     		mov	r4, r1
 11638 0734 07F10800 		add	r0, r7, #8
 11639 0738 1A46     		mov	r2, r3
 11640 073a 2346     		mov	r3, r4
 11641 073c 5749     		ldr	r1, .L562+24
 11642 073e FFF7FEFF 		bl	sprintf
2047:..\src/command_processing.c ****         strcat(info_string, str);
 11643              		.loc 1 2047 0 discriminator 3
 11644 0742 07F10803 		add	r3, r7, #8
 11645 0746 1946     		mov	r1, r3
 11646 0748 7868     		ldr	r0, [r7, #4]
 11647 074a FFF7FEFF 		bl	strcat
2045:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11648              		.loc 1 2045 0 discriminator 3
 11649 074e FB6E     		ldr	r3, [r7, #108]
 11650 0750 0133     		adds	r3, r3, #1
 11651 0752 FB66     		str	r3, [r7, #108]
 11652              	.L549:
2045:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_SENSORS; ++i) {
 11653              		.loc 1 2045 0 is_stmt 0 discriminator 1
 11654 0754 FB6E     		ldr	r3, [r7, #108]
 11655 0756 022B     		cmp	r3, #2
 11656 0758 E2DD     		ble	.L550
2048:..\src/command_processing.c ****     }
2049:..\src/command_processing.c ****     strcat(info_string,"\r\n");        
 11657              		.loc 1 2049 0 is_stmt 1
 11658 075a 7868     		ldr	r0, [r7, #4]
 11659 075c FFF7FEFF 		bl	strlen
 11660 0760 0346     		mov	r3, r0
 11661 0762 1A46     		mov	r2, r3
 11662 0764 7B68     		ldr	r3, [r7, #4]
 11663 0766 1344     		add	r3, r3, r2
 11664 0768 484A     		ldr	r2, .L562+8
 11665 076a 1188     		ldrh	r1, [r2]	@ unaligned
 11666 076c 9278     		ldrb	r2, [r2, #2]
 11667 076e 1980     		strh	r1, [r3]	@ unaligned
 11668 0770 9A70     		strb	r2, [r3, #2]
2050:..\src/command_processing.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 272


2051:..\src/command_processing.c ****     sprintf(str, "Position limits: inf -> %ld, sup -> %ld\r\n", (int32)g_mem.pos_lim_inf >> g_mem.r
 11669              		.loc 1 2051 0
 11670 0772 444B     		ldr	r3, .L562
 11671 0774 D3F8F830 		ldr	r3, [r3, #248]
 11672 0778 424A     		ldr	r2, .L562
 11673 077a 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 11674 077e 43FA02F1 		asr	r1, r3, r2
 11675 0782 404B     		ldr	r3, .L562
 11676 0784 D3F8FC30 		ldr	r3, [r3, #252]
 11677 0788 3E4A     		ldr	r2, .L562
 11678 078a 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 11679 078e 1341     		asrs	r3, r3, r2
 11680 0790 07F10800 		add	r0, r7, #8
 11681 0794 0A46     		mov	r2, r1
 11682 0796 4249     		ldr	r1, .L562+28
 11683 0798 FFF7FEFF 		bl	sprintf
2052:..\src/command_processing.c ****     strcat(info_string, str);
 11684              		.loc 1 2052 0
 11685 079c 07F10803 		add	r3, r7, #8
 11686 07a0 1946     		mov	r1, r3
 11687 07a2 7868     		ldr	r0, [r7, #4]
 11688 07a4 FFF7FEFF 		bl	strcat
2053:..\src/command_processing.c ****     
2054:..\src/command_processing.c ****     if ((g_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 11689              		.loc 1 2054 0
 11690 07a8 364B     		ldr	r3, .L562
 11691 07aa 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
 11692 07ae 022B     		cmp	r3, #2
 11693 07b0 0FD0     		beq	.L551
2055:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 11694              		.loc 1 2055 0 discriminator 1
 11695 07b2 344B     		ldr	r3, .L562
 11696 07b4 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
2054:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 11697              		.loc 1 2054 0 discriminator 1
 11698 07b8 032B     		cmp	r3, #3
 11699 07ba 0AD0     		beq	.L551
2056:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 11700              		.loc 1 2056 0
 11701 07bc 314B     		ldr	r3, .L562
 11702 07be 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
2055:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 11703              		.loc 1 2055 0
 11704 07c2 042B     		cmp	r3, #4
 11705 07c4 05D0     		beq	.L551
2057:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 11706              		.loc 1 2057 0
 11707 07c6 2F4B     		ldr	r3, .L562
 11708 07c8 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
2056:..\src/command_processing.c ****         (g_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 11709              		.loc 1 2056 0
 11710 07cc 052B     		cmp	r3, #5
 11711 07ce 40F09F80 		bne	.L552
 11712              	.L551:
2058:..\src/command_processing.c ****         sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", g_mem.emg_threshold[0], g_mem.emg_thresho
 11713              		.loc 1 2058 0
 11714 07d2 2C4B     		ldr	r3, .L562
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 273


 11715 07d4 B3F80A31 		ldrh	r3, [r3, #266]
 11716 07d8 1A46     		mov	r2, r3
 11717 07da 2A4B     		ldr	r3, .L562
 11718 07dc B3F80C31 		ldrh	r3, [r3, #268]
 11719 07e0 07F10800 		add	r0, r7, #8
 11720 07e4 2F49     		ldr	r1, .L562+32
 11721 07e6 FFF7FEFF 		bl	sprintf
2059:..\src/command_processing.c ****         strcat(info_string, str);
 11722              		.loc 1 2059 0
 11723 07ea 07F10803 		add	r3, r7, #8
 11724 07ee 1946     		mov	r1, r3
 11725 07f0 7868     		ldr	r0, [r7, #4]
 11726 07f2 FFF7FEFF 		bl	strcat
2060:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11727              		.loc 1 2060 0
 11728 07f6 7868     		ldr	r0, [r7, #4]
 11729 07f8 FFF7FEFF 		bl	strlen
 11730 07fc 0346     		mov	r3, r0
 11731 07fe 1A46     		mov	r2, r3
 11732 0800 7B68     		ldr	r3, [r7, #4]
 11733 0802 1344     		add	r3, r3, r2
 11734 0804 214A     		ldr	r2, .L562+8
 11735 0806 1188     		ldrh	r1, [r2]	@ unaligned
 11736 0808 9278     		ldrb	r2, [r2, #2]
 11737 080a 1980     		strh	r1, [r3]	@ unaligned
 11738 080c 9A70     		strb	r2, [r3, #2]
2061:..\src/command_processing.c **** 
2062:..\src/command_processing.c ****         sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", g_mem.emg_max_value[0], g_mem.emg_max_v
 11739              		.loc 1 2062 0
 11740 080e 1D4B     		ldr	r3, .L562
 11741 0810 D3F81021 		ldr	r2, [r3, #272]
 11742 0814 1B4B     		ldr	r3, .L562
 11743 0816 D3F81431 		ldr	r3, [r3, #276]
 11744 081a 07F10800 		add	r0, r7, #8
 11745 081e 2249     		ldr	r1, .L562+36
 11746 0820 FFF7FEFF 		bl	sprintf
2063:..\src/command_processing.c ****         strcat(info_string, str);
 11747              		.loc 1 2063 0
 11748 0824 07F10803 		add	r3, r7, #8
 11749 0828 1946     		mov	r1, r3
 11750 082a 7868     		ldr	r0, [r7, #4]
 11751 082c FFF7FEFF 		bl	strcat
2064:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11752              		.loc 1 2064 0
 11753 0830 7868     		ldr	r0, [r7, #4]
 11754 0832 FFF7FEFF 		bl	strlen
 11755 0836 0346     		mov	r3, r0
 11756 0838 1A46     		mov	r2, r3
 11757 083a 7B68     		ldr	r3, [r7, #4]
 11758 083c 1344     		add	r3, r3, r2
 11759 083e 134A     		ldr	r2, .L562+8
 11760 0840 1188     		ldrh	r1, [r2]	@ unaligned
 11761 0842 9278     		ldrb	r2, [r2, #2]
 11762 0844 1980     		strh	r1, [r3]	@ unaligned
 11763 0846 9A70     		strb	r2, [r3, #2]
2065:..\src/command_processing.c **** 
2066:..\src/command_processing.c ****         if (g_mem.emg_calibration_flag)
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 274


 11764              		.loc 1 2066 0
 11765 0848 0E4B     		ldr	r3, .L562
 11766 084a 93F80E31 		ldrb	r3, [r3, #270]	@ zero_extendqisi2
 11767 084e 002B     		cmp	r3, #0
 11768 0850 2ED0     		beq	.L553
2067:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: YES\r\n");
 11769              		.loc 1 2067 0
 11770 0852 7868     		ldr	r0, [r7, #4]
 11771 0854 FFF7FEFF 		bl	strlen
 11772 0858 0346     		mov	r3, r0
 11773 085a 1A46     		mov	r2, r3
 11774 085c 7B68     		ldr	r3, [r7, #4]
 11775 085e 1344     		add	r3, r3, r2
 11776 0860 124A     		ldr	r2, .L562+40
 11777 0862 1D46     		mov	r5, r3
 11778 0864 1446     		mov	r4, r2
 11779 0866 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11780 0868 2860     		str	r0, [r5]	@ unaligned
 11781 086a 6960     		str	r1, [r5, #4]	@ unaligned
 11782 086c AA60     		str	r2, [r5, #8]	@ unaligned
 11783 086e EB60     		str	r3, [r5, #12]	@ unaligned
 11784 0870 03CC     		ldmia	r4!, {r0, r1}
 11785 0872 2861     		str	r0, [r5, #16]	@ unaligned
 11786 0874 6961     		str	r1, [r5, #20]	@ unaligned
 11787 0876 2388     		ldrh	r3, [r4]	@ unaligned
 11788 0878 A278     		ldrb	r2, [r4, #2]
 11789 087a 2B83     		strh	r3, [r5, #24]	@ unaligned
 11790 087c 1346     		mov	r3, r2
 11791 087e AB76     		strb	r3, [r5, #26]
 11792 0880 2AE0     		b	.L554
 11793              	.L563:
 11794 0882 00BF     		.align	2
 11795              	.L562:
 11796 0884 00000000 		.word	g_mem
 11797 0888 48120000 		.word	.LC188
 11798 088c 28090000 		.word	.LC87
 11799 0890 4C120000 		.word	.LC189
 11800 0894 58120000 		.word	.LC190
 11801 0898 60120000 		.word	.LC191
 11802 089c 70120000 		.word	.LC192
 11803 08a0 74120000 		.word	.LC193
 11804 08a4 800E0000 		.word	.LC151
 11805 08a8 A40E0000 		.word	.LC152
 11806 08ac C80E0000 		.word	.LC153
 11807              	.L553:
2068:..\src/command_processing.c ****         else
2069:..\src/command_processing.c ****             strcat(info_string, "Calibration enabled: NO\r\n");
 11808              		.loc 1 2069 0
 11809 08b0 7868     		ldr	r0, [r7, #4]
 11810 08b2 FFF7FEFF 		bl	strlen
 11811 08b6 0346     		mov	r3, r0
 11812 08b8 1A46     		mov	r2, r3
 11813 08ba 7B68     		ldr	r3, [r7, #4]
 11814 08bc 1344     		add	r3, r3, r2
 11815 08be 444A     		ldr	r2, .L564
 11816 08c0 1D46     		mov	r5, r3
 11817 08c2 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 275


 11818 08c4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 11819 08c6 2860     		str	r0, [r5]	@ unaligned
 11820 08c8 6960     		str	r1, [r5, #4]	@ unaligned
 11821 08ca AA60     		str	r2, [r5, #8]	@ unaligned
 11822 08cc EB60     		str	r3, [r5, #12]	@ unaligned
 11823 08ce 03CC     		ldmia	r4!, {r0, r1}
 11824 08d0 2861     		str	r0, [r5, #16]	@ unaligned
 11825 08d2 6961     		str	r1, [r5, #20]	@ unaligned
 11826 08d4 2388     		ldrh	r3, [r4]	@ unaligned
 11827 08d6 2B83     		strh	r3, [r5, #24]	@ unaligned
 11828              	.L554:
2070:..\src/command_processing.c **** 
2071:..\src/command_processing.c ****         sprintf(str, "EMG max speed: %d", (int)g_mem.emg_speed);
 11829              		.loc 1 2071 0
 11830 08d8 3E4B     		ldr	r3, .L564+4
 11831 08da 93F81831 		ldrb	r3, [r3, #280]	@ zero_extendqisi2
 11832 08de 1A46     		mov	r2, r3
 11833 08e0 07F10803 		add	r3, r7, #8
 11834 08e4 3C49     		ldr	r1, .L564+8
 11835 08e6 1846     		mov	r0, r3
 11836 08e8 FFF7FEFF 		bl	sprintf
2072:..\src/command_processing.c ****         strcat(info_string, str);
 11837              		.loc 1 2072 0
 11838 08ec 07F10803 		add	r3, r7, #8
 11839 08f0 1946     		mov	r1, r3
 11840 08f2 7868     		ldr	r0, [r7, #4]
 11841 08f4 FFF7FEFF 		bl	strcat
2073:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11842              		.loc 1 2073 0
 11843 08f8 7868     		ldr	r0, [r7, #4]
 11844 08fa FFF7FEFF 		bl	strlen
 11845 08fe 0346     		mov	r3, r0
 11846 0900 1A46     		mov	r2, r3
 11847 0902 7B68     		ldr	r3, [r7, #4]
 11848 0904 1344     		add	r3, r3, r2
 11849 0906 354A     		ldr	r2, .L564+12
 11850 0908 1188     		ldrh	r1, [r2]	@ unaligned
 11851 090a 9278     		ldrb	r2, [r2, #2]
 11852 090c 1980     		strh	r1, [r3]	@ unaligned
 11853 090e 9A70     		strb	r2, [r3, #2]
 11854              	.L552:
2074:..\src/command_processing.c ****     }
2075:..\src/command_processing.c ****                  
2076:..\src/command_processing.c ****     if (g_mem.rest_position_flag) {
 11855              		.loc 1 2076 0
 11856 0910 304B     		ldr	r3, .L564+4
 11857 0912 93F84431 		ldrb	r3, [r3, #324]	@ zero_extendqisi2
 11858 0916 002B     		cmp	r3, #0
 11859 0918 55D0     		beq	.L557
2077:..\src/command_processing.c **** 		sprintf(str, "Rest time delay (ms): %d", (int)g_mem.rest_delay);
 11860              		.loc 1 2077 0
 11861 091a 2E4B     		ldr	r3, .L564+4
 11862 091c D3F83C21 		ldr	r2, [r3, #316]
 11863 0920 07F10803 		add	r3, r7, #8
 11864 0924 2E49     		ldr	r1, .L564+16
 11865 0926 1846     		mov	r0, r3
 11866 0928 FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 276


2078:..\src/command_processing.c ****         strcat(info_string, str);
 11867              		.loc 1 2078 0
 11868 092c 07F10803 		add	r3, r7, #8
 11869 0930 1946     		mov	r1, r3
 11870 0932 7868     		ldr	r0, [r7, #4]
 11871 0934 FFF7FEFF 		bl	strcat
2079:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11872              		.loc 1 2079 0
 11873 0938 7868     		ldr	r0, [r7, #4]
 11874 093a FFF7FEFF 		bl	strlen
 11875 093e 0346     		mov	r3, r0
 11876 0940 1A46     		mov	r2, r3
 11877 0942 7B68     		ldr	r3, [r7, #4]
 11878 0944 1344     		add	r3, r3, r2
 11879 0946 254A     		ldr	r2, .L564+12
 11880 0948 1188     		ldrh	r1, [r2]	@ unaligned
 11881 094a 9278     		ldrb	r2, [r2, #2]
 11882 094c 1980     		strh	r1, [r3]	@ unaligned
 11883 094e 9A70     		strb	r2, [r3, #2]
2080:..\src/command_processing.c ****         
2081:..\src/command_processing.c ****         sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)g_mem.rest_vel);
 11884              		.loc 1 2081 0
 11885 0950 204B     		ldr	r3, .L564+4
 11886 0952 D3F84021 		ldr	r2, [r3, #320]
 11887 0956 07F10803 		add	r3, r7, #8
 11888 095a 2249     		ldr	r1, .L564+20
 11889 095c 1846     		mov	r0, r3
 11890 095e FFF7FEFF 		bl	sprintf
2082:..\src/command_processing.c ****         strcat(info_string, str);
 11891              		.loc 1 2082 0
 11892 0962 07F10803 		add	r3, r7, #8
 11893 0966 1946     		mov	r1, r3
 11894 0968 7868     		ldr	r0, [r7, #4]
 11895 096a FFF7FEFF 		bl	strcat
2083:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 11896              		.loc 1 2083 0
 11897 096e 7868     		ldr	r0, [r7, #4]
 11898 0970 FFF7FEFF 		bl	strlen
 11899 0974 0346     		mov	r3, r0
 11900 0976 1A46     		mov	r2, r3
 11901 0978 7B68     		ldr	r3, [r7, #4]
 11902 097a 1344     		add	r3, r3, r2
 11903 097c 174A     		ldr	r2, .L564+12
 11904 097e 1188     		ldrh	r1, [r2]	@ unaligned
 11905 0980 9278     		ldrb	r2, [r2, #2]
 11906 0982 1980     		strh	r1, [r3]	@ unaligned
 11907 0984 9A70     		strb	r2, [r3, #2]
2084:..\src/command_processing.c ****         
2085:..\src/command_processing.c ****         sprintf(str, "Rest position: %d", (int)(g_mem.rest_pos >> g_mem.res[0]));
 11908              		.loc 1 2085 0
 11909 0986 134B     		ldr	r3, .L564+4
 11910 0988 D3F83831 		ldr	r3, [r3, #312]
 11911 098c 114A     		ldr	r2, .L564+4
 11912 098e 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 11913 0992 43FA02F2 		asr	r2, r3, r2
 11914 0996 07F10803 		add	r3, r7, #8
 11915 099a 1349     		ldr	r1, .L564+24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 277


 11916 099c 1846     		mov	r0, r3
 11917 099e FFF7FEFF 		bl	sprintf
2086:..\src/command_processing.c ****         strcat(info_string, str);
 11918              		.loc 1 2086 0
 11919 09a2 07F10803 		add	r3, r7, #8
 11920 09a6 1946     		mov	r1, r3
 11921 09a8 7868     		ldr	r0, [r7, #4]
 11922 09aa FFF7FEFF 		bl	strcat
2087:..\src/command_processing.c ****         strcat(info_string, "\r\n");  
 11923              		.loc 1 2087 0
 11924 09ae 7868     		ldr	r0, [r7, #4]
 11925 09b0 FFF7FEFF 		bl	strlen
 11926 09b4 0346     		mov	r3, r0
 11927 09b6 1A46     		mov	r2, r3
 11928 09b8 7B68     		ldr	r3, [r7, #4]
 11929 09ba 1344     		add	r3, r3, r2
 11930 09bc 074A     		ldr	r2, .L564+12
 11931 09be 1188     		ldrh	r1, [r2]	@ unaligned
 11932 09c0 9278     		ldrb	r2, [r2, #2]
 11933 09c2 1980     		strh	r1, [r3]	@ unaligned
 11934 09c4 9A70     		strb	r2, [r3, #2]
 11935              	.L557:
2088:..\src/command_processing.c ****     }
2089:..\src/command_processing.c **** }
 11936              		.loc 1 2089 0
 11937 09c6 00BF     		nop
 11938 09c8 7437     		adds	r7, r7, #116
 11939              		.cfi_def_cfa_offset 20
 11940 09ca BD46     		mov	sp, r7
 11941              		.cfi_def_cfa_register 13
 11942              		@ sp needed
 11943 09cc F0BD     		pop	{r4, r5, r6, r7, pc}
 11944              	.L565:
 11945 09ce 00BF     		.align	2
 11946              	.L564:
 11947 09d0 E40E0000 		.word	.LC154
 11948 09d4 00000000 		.word	g_mem
 11949 09d8 000F0000 		.word	.LC155
 11950 09dc 28090000 		.word	.LC87
 11951 09e0 580F0000 		.word	.LC159
 11952 09e4 740F0000 		.word	.LC160
 11953 09e8 9C0F0000 		.word	.LC161
 11954              		.cfi_endproc
 11955              	.LFE73:
 11956              		.size	prepare_SD_param_info, .-prepare_SD_param_info
 11957              		.section	.rodata
 11958 129e 0000     		.align	2
 11959              	.LC194:
 11960 12a0 486F7572 		.ascii	"Hour\011Min\011Sec\011\000"
 11960      094D696E 
 11960      09536563 
 11960      0900
 11961 12ae 0000     		.align	2
 11962              	.LC195:
 11963 12b0 42696E5F 		.ascii	"Bin_%d_Pos\011\000"
 11963      25645F50 
 11963      6F730900 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 278


 11964              		.align	2
 11965              	.LC196:
 11966 12bc 42696E5F 		.ascii	"Bin_%d_Curr\011\000"
 11966      25645F43 
 11966      75727209 
 11966      00
 11967 12c9 000000   		.align	2
 11968              	.LC197:
 11969 12cc 454D475F 		.ascii	"EMG_1_act\011EMG_2_act\011Rest_times\011Wire_disp\011"
 11969      315F6163 
 11969      7409454D 
 11969      475F325F 
 11969      61637409 
 11970 12f5 546F7461 		.ascii	"Total_power_on_time\011Total_rest_time\000"
 11970      6C5F706F 
 11970      7765725F 
 11970      6F6E5F74 
 11970      696D6509 
 11971              		.section	.text.prepare_SD_legend,"ax",%progbits
 11972              		.align	2
 11973              		.global	prepare_SD_legend
 11974              		.thumb
 11975              		.thumb_func
 11976              		.type	prepare_SD_legend, %function
 11977              	prepare_SD_legend:
 11978              	.LFB74:
2090:..\src/command_processing.c **** 
2091:..\src/command_processing.c **** 
2092:..\src/command_processing.c **** //==============================================================================
2093:..\src/command_processing.c **** //                                                        PREPARE SD CARD LEGEND
2094:..\src/command_processing.c **** //==============================================================================
2095:..\src/command_processing.c **** void prepare_SD_legend(char *info_string)
2096:..\src/command_processing.c **** {
 11979              		.loc 1 2096 0
 11980              		.cfi_startproc
 11981              		@ args = 0, pretend = 0, frame = 112
 11982              		@ frame_needed = 1, uses_anonymous_args = 0
 11983 0000 90B5     		push	{r4, r7, lr}
 11984              		.cfi_def_cfa_offset 12
 11985              		.cfi_offset 4, -12
 11986              		.cfi_offset 7, -8
 11987              		.cfi_offset 14, -4
 11988 0002 9DB0     		sub	sp, sp, #116
 11989              		.cfi_def_cfa_offset 128
 11990 0004 00AF     		add	r7, sp, #0
 11991              		.cfi_def_cfa_register 7
 11992 0006 7860     		str	r0, [r7, #4]
2097:..\src/command_processing.c ****     char str[100];  
2098:..\src/command_processing.c ****     int i;
2099:..\src/command_processing.c ****         
2100:..\src/command_processing.c ****     // Legend
2101:..\src/command_processing.c ****     strcpy(info_string, "Hour\tMin\tSec\t");
 11993              		.loc 1 2101 0
 11994 0008 7B68     		ldr	r3, [r7, #4]
 11995 000a 2A4A     		ldr	r2, .L571
 11996 000c 1C46     		mov	r4, r3
 11997 000e 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 279


 11998 0010 07CB     		ldmia	r3!, {r0, r1, r2}
 11999 0012 2060     		str	r0, [r4]	@ unaligned
 12000 0014 6160     		str	r1, [r4, #4]	@ unaligned
 12001 0016 A260     		str	r2, [r4, #8]	@ unaligned
 12002 0018 1B88     		ldrh	r3, [r3]	@ unaligned
 12003 001a A381     		strh	r3, [r4, #12]	@ unaligned
2102:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 12004              		.loc 1 2102 0
 12005 001c 0123     		movs	r3, #1
 12006 001e FB66     		str	r3, [r7, #108]
 12007 0020 0FE0     		b	.L567
 12008              	.L568:
2103:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Pos\t", i); 
 12009              		.loc 1 2103 0 discriminator 3
 12010 0022 07F10803 		add	r3, r7, #8
 12011 0026 FA6E     		ldr	r2, [r7, #108]
 12012 0028 2349     		ldr	r1, .L571+4
 12013 002a 1846     		mov	r0, r3
 12014 002c FFF7FEFF 		bl	sprintf
2104:..\src/command_processing.c ****         strcat(info_string, str);
 12015              		.loc 1 2104 0 discriminator 3
 12016 0030 07F10803 		add	r3, r7, #8
 12017 0034 1946     		mov	r1, r3
 12018 0036 7868     		ldr	r0, [r7, #4]
 12019 0038 FFF7FEFF 		bl	strcat
2102:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 12020              		.loc 1 2102 0 discriminator 3
 12021 003c FB6E     		ldr	r3, [r7, #108]
 12022 003e 0133     		adds	r3, r3, #1
 12023 0040 FB66     		str	r3, [r7, #108]
 12024              	.L567:
2102:..\src/command_processing.c ****     for (i=1; i<=10;i++){       // Position bins
 12025              		.loc 1 2102 0 is_stmt 0 discriminator 1
 12026 0042 FB6E     		ldr	r3, [r7, #108]
 12027 0044 0A2B     		cmp	r3, #10
 12028 0046 ECDD     		ble	.L568
2105:..\src/command_processing.c ****     }
2106:..\src/command_processing.c ****     for (i=1; i<=4;i++){        // Current bins
 12029              		.loc 1 2106 0 is_stmt 1
 12030 0048 0123     		movs	r3, #1
 12031 004a FB66     		str	r3, [r7, #108]
 12032 004c 0FE0     		b	.L569
 12033              	.L570:
2107:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr\t", i); 
 12034              		.loc 1 2107 0 discriminator 3
 12035 004e 07F10803 		add	r3, r7, #8
 12036 0052 FA6E     		ldr	r2, [r7, #108]
 12037 0054 1949     		ldr	r1, .L571+8
 12038 0056 1846     		mov	r0, r3
 12039 0058 FFF7FEFF 		bl	sprintf
2108:..\src/command_processing.c ****         strcat(info_string, str);
 12040              		.loc 1 2108 0 discriminator 3
 12041 005c 07F10803 		add	r3, r7, #8
 12042 0060 1946     		mov	r1, r3
 12043 0062 7868     		ldr	r0, [r7, #4]
 12044 0064 FFF7FEFF 		bl	strcat
2106:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr\t", i); 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 280


 12045              		.loc 1 2106 0 discriminator 3
 12046 0068 FB6E     		ldr	r3, [r7, #108]
 12047 006a 0133     		adds	r3, r3, #1
 12048 006c FB66     		str	r3, [r7, #108]
 12049              	.L569:
2106:..\src/command_processing.c ****         sprintf(str, "Bin_%d_Curr\t", i); 
 12050              		.loc 1 2106 0 is_stmt 0 discriminator 1
 12051 006e FB6E     		ldr	r3, [r7, #108]
 12052 0070 042B     		cmp	r3, #4
 12053 0072 ECDD     		ble	.L570
2109:..\src/command_processing.c ****     }
2110:..\src/command_processing.c ****     sprintf(str, "EMG_1_act\tEMG_2_act\tRest_times\tWire_disp\tTotal_power_on_time\tTotal_rest_time
 12054              		.loc 1 2110 0 is_stmt 1
 12055 0074 07F10803 		add	r3, r7, #8
 12056 0078 114A     		ldr	r2, .L571+12
 12057 007a 1846     		mov	r0, r3
 12058 007c 1146     		mov	r1, r2
 12059 007e 4D23     		movs	r3, #77
 12060 0080 1A46     		mov	r2, r3
 12061 0082 FFF7FEFF 		bl	memcpy
2111:..\src/command_processing.c ****     strcat(info_string, str);
 12062              		.loc 1 2111 0
 12063 0086 07F10803 		add	r3, r7, #8
 12064 008a 1946     		mov	r1, r3
 12065 008c 7868     		ldr	r0, [r7, #4]
 12066 008e FFF7FEFF 		bl	strcat
2112:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 12067              		.loc 1 2112 0
 12068 0092 7868     		ldr	r0, [r7, #4]
 12069 0094 FFF7FEFF 		bl	strlen
 12070 0098 0346     		mov	r3, r0
 12071 009a 1A46     		mov	r2, r3
 12072 009c 7B68     		ldr	r3, [r7, #4]
 12073 009e 1344     		add	r3, r3, r2
 12074 00a0 084A     		ldr	r2, .L571+16
 12075 00a2 1188     		ldrh	r1, [r2]	@ unaligned
 12076 00a4 9278     		ldrb	r2, [r2, #2]
 12077 00a6 1980     		strh	r1, [r3]	@ unaligned
 12078 00a8 9A70     		strb	r2, [r3, #2]
2113:..\src/command_processing.c **** }
 12079              		.loc 1 2113 0
 12080 00aa 00BF     		nop
 12081 00ac 7437     		adds	r7, r7, #116
 12082              		.cfi_def_cfa_offset 12
 12083 00ae BD46     		mov	sp, r7
 12084              		.cfi_def_cfa_register 13
 12085              		@ sp needed
 12086 00b0 90BD     		pop	{r4, r7, pc}
 12087              	.L572:
 12088 00b2 00BF     		.align	2
 12089              	.L571:
 12090 00b4 A0120000 		.word	.LC194
 12091 00b8 B0120000 		.word	.LC195
 12092 00bc BC120000 		.word	.LC196
 12093 00c0 CC120000 		.word	.LC197
 12094 00c4 28090000 		.word	.LC87
 12095              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 281


 12096              	.LFE74:
 12097              		.size	prepare_SD_legend, .-prepare_SD_legend
 12098              		.section	.rodata
 12099 1319 000000   		.align	2
 12100              	.LC198:
 12101 131c 25303264 		.ascii	"%02d\011%02d\011%02d\011\000"
 12101      09253032 
 12101      64092530 
 12101      32640900 
 12102              		.align	2
 12103              	.LC199:
 12104 132c 256C7509 		.ascii	"%lu\011\000"
 12104      00
 12105 1331 000000   		.align	2
 12106              	.LC200:
 12107 1334 256C7509 		.ascii	"%lu\011%lu\011\000"
 12107      256C7509 
 12107      00
 12108 133d 000000   		.align	2
 12109              	.LC201:
 12110 1340 256C7509 		.ascii	"%lu\011%lu\011%lu\011%lu\000"
 12110      256C7509 
 12110      256C7509 
 12110      256C7500 
 12111              		.section	.text.prepare_SD_info,"ax",%progbits
 12112              		.align	2
 12113              		.global	prepare_SD_info
 12114              		.thumb
 12115              		.thumb_func
 12116              		.type	prepare_SD_info, %function
 12117              	prepare_SD_info:
 12118              	.LFB75:
2114:..\src/command_processing.c **** 
2115:..\src/command_processing.c **** //==============================================================================
2116:..\src/command_processing.c **** //                                                          PREPARE SD CARD INFO
2117:..\src/command_processing.c **** //==============================================================================
2118:..\src/command_processing.c **** void prepare_SD_info(char *info_string)
2119:..\src/command_processing.c **** {
 12119              		.loc 1 2119 0
 12120              		.cfi_startproc
 12121              		@ args = 0, pretend = 0, frame = 112
 12122              		@ frame_needed = 1, uses_anonymous_args = 0
 12123 0000 90B5     		push	{r4, r7, lr}
 12124              		.cfi_def_cfa_offset 12
 12125              		.cfi_offset 4, -12
 12126              		.cfi_offset 7, -8
 12127              		.cfi_offset 14, -4
 12128 0002 9FB0     		sub	sp, sp, #124
 12129              		.cfi_def_cfa_offset 136
 12130 0004 02AF     		add	r7, sp, #8
 12131              		.cfi_def_cfa 7, 128
 12132 0006 7860     		str	r0, [r7, #4]
2120:..\src/command_processing.c ****     char str[100];  
2121:..\src/command_processing.c ****     int i;
2122:..\src/command_processing.c ****             
2123:..\src/command_processing.c ****     strcpy(info_string, "");
 12133              		.loc 1 2123 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 282


 12134 0008 7B68     		ldr	r3, [r7, #4]
 12135 000a 0022     		movs	r2, #0
 12136 000c 1A70     		strb	r2, [r3]
2124:..\src/command_processing.c ****     
2125:..\src/command_processing.c ****     // Time
2126:..\src/command_processing.c ****     strcat(info_string, "");
2127:..\src/command_processing.c ****     sprintf(str, "%02d\t%02d\t%02d\t", (int)g_mem.curr_time[3], (int)g_mem.curr_time[4], (int)g_mem
 12137              		.loc 1 2127 0
 12138 000e 424B     		ldr	r3, .L578
 12139 0010 93F85330 		ldrb	r3, [r3, #83]	@ zero_extendqisi2
 12140 0014 1A46     		mov	r2, r3
 12141 0016 404B     		ldr	r3, .L578
 12142 0018 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 12143 001c 1946     		mov	r1, r3
 12144 001e 3E4B     		ldr	r3, .L578
 12145 0020 93F85530 		ldrb	r3, [r3, #85]	@ zero_extendqisi2
 12146 0024 07F10800 		add	r0, r7, #8
 12147 0028 0093     		str	r3, [sp]
 12148 002a 0B46     		mov	r3, r1
 12149 002c 3B49     		ldr	r1, .L578+4
 12150 002e FFF7FEFF 		bl	sprintf
2128:..\src/command_processing.c ****     strcat(info_string, str);
 12151              		.loc 1 2128 0
 12152 0032 07F10803 		add	r3, r7, #8
 12153 0036 1946     		mov	r1, r3
 12154 0038 7868     		ldr	r0, [r7, #4]
 12155 003a FFF7FEFF 		bl	strcat
2129:..\src/command_processing.c **** 
2130:..\src/command_processing.c ****     // Pos_Bin
2131:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 12156              		.loc 1 2131 0
 12157 003e 0123     		movs	r3, #1
 12158 0040 FB66     		str	r3, [r7, #108]
 12159 0042 14E0     		b	.L574
 12160              	.L575:
2132:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.position_hist[i-1]); 
 12161              		.loc 1 2132 0 discriminator 3
 12162 0044 FB6E     		ldr	r3, [r7, #108]
 12163 0046 013B     		subs	r3, r3, #1
 12164 0048 334A     		ldr	r2, .L578
 12165 004a 0233     		adds	r3, r3, #2
 12166 004c 52F82320 		ldr	r2, [r2, r3, lsl #2]
 12167 0050 07F10803 		add	r3, r7, #8
 12168 0054 3249     		ldr	r1, .L578+8
 12169 0056 1846     		mov	r0, r3
 12170 0058 FFF7FEFF 		bl	sprintf
2133:..\src/command_processing.c ****         strcat(info_string, str);
 12171              		.loc 1 2133 0 discriminator 3
 12172 005c 07F10803 		add	r3, r7, #8
 12173 0060 1946     		mov	r1, r3
 12174 0062 7868     		ldr	r0, [r7, #4]
 12175 0064 FFF7FEFF 		bl	strcat
2131:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.position_hist[i-1]); 
 12176              		.loc 1 2131 0 discriminator 3
 12177 0068 FB6E     		ldr	r3, [r7, #108]
 12178 006a 0133     		adds	r3, r3, #1
 12179 006c FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 283


 12180              	.L574:
2131:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.position_hist[i-1]); 
 12181              		.loc 1 2131 0 is_stmt 0 discriminator 1
 12182 006e FB6E     		ldr	r3, [r7, #108]
 12183 0070 0A2B     		cmp	r3, #10
 12184 0072 E7DD     		ble	.L575
2134:..\src/command_processing.c ****     }
2135:..\src/command_processing.c ****     
2136:..\src/command_processing.c ****     // Curr_Bin
2137:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 12185              		.loc 1 2137 0 is_stmt 1
 12186 0074 0123     		movs	r3, #1
 12187 0076 FB66     		str	r3, [r7, #108]
 12188 0078 14E0     		b	.L576
 12189              	.L577:
2138:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.current_hist[i-1]); 
 12190              		.loc 1 2138 0 discriminator 3
 12191 007a FB6E     		ldr	r3, [r7, #108]
 12192 007c 013B     		subs	r3, r3, #1
 12193 007e 264A     		ldr	r2, .L578
 12194 0080 0C33     		adds	r3, r3, #12
 12195 0082 52F82320 		ldr	r2, [r2, r3, lsl #2]
 12196 0086 07F10803 		add	r3, r7, #8
 12197 008a 2549     		ldr	r1, .L578+8
 12198 008c 1846     		mov	r0, r3
 12199 008e FFF7FEFF 		bl	sprintf
2139:..\src/command_processing.c ****         strcat(info_string, str);
 12200              		.loc 1 2139 0 discriminator 3
 12201 0092 07F10803 		add	r3, r7, #8
 12202 0096 1946     		mov	r1, r3
 12203 0098 7868     		ldr	r0, [r7, #4]
 12204 009a FFF7FEFF 		bl	strcat
2137:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.current_hist[i-1]); 
 12205              		.loc 1 2137 0 discriminator 3
 12206 009e FB6E     		ldr	r3, [r7, #108]
 12207 00a0 0133     		adds	r3, r3, #1
 12208 00a2 FB66     		str	r3, [r7, #108]
 12209              	.L576:
2137:..\src/command_processing.c ****         sprintf(str, "%lu\t", g_mem.current_hist[i-1]); 
 12210              		.loc 1 2137 0 is_stmt 0 discriminator 1
 12211 00a4 FB6E     		ldr	r3, [r7, #108]
 12212 00a6 042B     		cmp	r3, #4
 12213 00a8 E7DD     		ble	.L577
2140:..\src/command_processing.c ****     }
2141:..\src/command_processing.c ****        
2142:..\src/command_processing.c ****     // EMG_1, EMG_2
2143:..\src/command_processing.c ****     sprintf(str, "%lu\t%lu\t", g_mem.emg_counter[0], g_mem.emg_counter[1]);
 12214              		.loc 1 2143 0 is_stmt 1
 12215 00aa 1B4B     		ldr	r3, .L578
 12216 00ac 1A68     		ldr	r2, [r3]
 12217 00ae 1A4B     		ldr	r3, .L578
 12218 00b0 5B68     		ldr	r3, [r3, #4]
 12219 00b2 07F10800 		add	r0, r7, #8
 12220 00b6 1B49     		ldr	r1, .L578+12
 12221 00b8 FFF7FEFF 		bl	sprintf
2144:..\src/command_processing.c ****     strcat(info_string, str);
 12222              		.loc 1 2144 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 284


 12223 00bc 07F10803 		add	r3, r7, #8
 12224 00c0 1946     		mov	r1, r3
 12225 00c2 7868     		ldr	r0, [r7, #4]
 12226 00c4 FFF7FEFF 		bl	strcat
2145:..\src/command_processing.c ****     
2146:..\src/command_processing.c ****     // Rest_times, Wire_disp, Total_power_on_time, Total_rest_time
2147:..\src/command_processing.c ****     sprintf(str, "%lu\t%lu\t%lu\t%lu", g_mem.rest_counter, g_mem.wire_disp, g_mem.total_time_on, g_
 12227              		.loc 1 2147 0
 12228 00c8 134B     		ldr	r3, .L578
 12229 00ca 196C     		ldr	r1, [r3, #64]
 12230 00cc 124B     		ldr	r3, .L578
 12231 00ce 5C6C     		ldr	r4, [r3, #68]
 12232 00d0 114B     		ldr	r3, .L578
 12233 00d2 9B6C     		ldr	r3, [r3, #72]
 12234 00d4 104A     		ldr	r2, .L578
 12235 00d6 D26C     		ldr	r2, [r2, #76]
 12236 00d8 07F10800 		add	r0, r7, #8
 12237 00dc 0192     		str	r2, [sp, #4]
 12238 00de 0093     		str	r3, [sp]
 12239 00e0 2346     		mov	r3, r4
 12240 00e2 0A46     		mov	r2, r1
 12241 00e4 1049     		ldr	r1, .L578+16
 12242 00e6 FFF7FEFF 		bl	sprintf
2148:..\src/command_processing.c ****     strcat(info_string, str);
 12243              		.loc 1 2148 0
 12244 00ea 07F10803 		add	r3, r7, #8
 12245 00ee 1946     		mov	r1, r3
 12246 00f0 7868     		ldr	r0, [r7, #4]
 12247 00f2 FFF7FEFF 		bl	strcat
2149:..\src/command_processing.c ****     
2150:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 12248              		.loc 1 2150 0
 12249 00f6 7868     		ldr	r0, [r7, #4]
 12250 00f8 FFF7FEFF 		bl	strlen
 12251 00fc 0346     		mov	r3, r0
 12252 00fe 1A46     		mov	r2, r3
 12253 0100 7B68     		ldr	r3, [r7, #4]
 12254 0102 1344     		add	r3, r3, r2
 12255 0104 094A     		ldr	r2, .L578+20
 12256 0106 1188     		ldrh	r1, [r2]	@ unaligned
 12257 0108 9278     		ldrb	r2, [r2, #2]
 12258 010a 1980     		strh	r1, [r3]	@ unaligned
 12259 010c 9A70     		strb	r2, [r3, #2]
2151:..\src/command_processing.c **** }
 12260              		.loc 1 2151 0
 12261 010e 00BF     		nop
 12262 0110 7437     		adds	r7, r7, #116
 12263              		.cfi_def_cfa_offset 12
 12264 0112 BD46     		mov	sp, r7
 12265              		.cfi_def_cfa_register 13
 12266              		@ sp needed
 12267 0114 90BD     		pop	{r4, r7, pc}
 12268              	.L579:
 12269 0116 00BF     		.align	2
 12270              	.L578:
 12271 0118 00000000 		.word	g_mem
 12272 011c 1C130000 		.word	.LC198
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 285


 12273 0120 2C130000 		.word	.LC199
 12274 0124 34130000 		.word	.LC200
 12275 0128 40130000 		.word	.LC201
 12276 012c 28090000 		.word	.LC87
 12277              		.cfi_endproc
 12278              	.LFE75:
 12279              		.size	prepare_SD_info, .-prepare_SD_info
 12280              		.section	.rodata
 12281              		.align	2
 12282              	.LC202:
 12283 1350 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 12283      4F525320 
 12283      494E464F 
 12283      0D0A00
 12284 135f 00       		.align	2
 12285              	.LC203:
 12286 1360 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 12286      3A202564 
 12286      09256409 
 12286      25640D0A 
 12286      00
 12287 1371 000000   		.align	2
 12288              	.LC204:
 12289 1374 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 12289      6F3A2025 
 12289      64092564 
 12289      0925640D 
 12289      0A00
 12290 1386 0000     		.align	2
 12291              	.LC205:
 12292 1388 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 12292      3A202564 
 12292      09256409 
 12292      25640D0A 
 12292      00
 12293 1399 000000   		.align	2
 12294              	.LC206:
 12295 139c 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 12295      743A2025 
 12295      2E336609 
 12295      252E3366 
 12295      09252E33 
 12296 13b9 000000   		.align	2
 12297              	.LC207:
 12298 13bc 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 12298      70657261 
 12298      74757265 
 12298      3A202564 
 12298      0D0A00
 12299              		.section	.text.IMU_reading_info,"ax",%progbits
 12300              		.align	2
 12301              		.global	IMU_reading_info
 12302              		.thumb
 12303              		.thumb_func
 12304              		.type	IMU_reading_info, %function
 12305              	IMU_reading_info:
 12306              	.LFB76:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 286


2152:..\src/command_processing.c **** 
2153:..\src/command_processing.c **** //==============================================================================
2154:..\src/command_processing.c **** //                                                              IMU READING INFO
2155:..\src/command_processing.c **** //==============================================================================
2156:..\src/command_processing.c **** 
2157:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
2158:..\src/command_processing.c **** {
 12307              		.loc 1 2158 0
 12308              		.cfi_startproc
 12309              		@ args = 0, pretend = 0, frame = 312
 12310              		@ frame_needed = 1, uses_anonymous_args = 0
 12311 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 12312              		.cfi_def_cfa_offset 32
 12313              		.cfi_offset 4, -32
 12314              		.cfi_offset 5, -28
 12315              		.cfi_offset 7, -24
 12316              		.cfi_offset 8, -20
 12317              		.cfi_offset 9, -16
 12318              		.cfi_offset 10, -12
 12319              		.cfi_offset 11, -8
 12320              		.cfi_offset 14, -4
 12321 0004 D4B0     		sub	sp, sp, #336
 12322              		.cfi_def_cfa_offset 368
 12323 0006 06AF     		add	r7, sp, #24
 12324              		.cfi_def_cfa 7, 344
 12325 0008 3B1D     		adds	r3, r7, #4
 12326 000a 1860     		str	r0, [r3]
2159:..\src/command_processing.c ****     char str[300];  
2160:..\src/command_processing.c ****     int i;
2161:..\src/command_processing.c ****                  
2162:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 12327              		.loc 1 2162 0
 12328 000c 3B1D     		adds	r3, r7, #4
 12329 000e 1868     		ldr	r0, [r3]
 12330 0010 FFF7FEFF 		bl	strlen
 12331 0014 0346     		mov	r3, r0
 12332 0016 1A46     		mov	r2, r3
 12333 0018 3B1D     		adds	r3, r7, #4
 12334 001a 1B68     		ldr	r3, [r3]
 12335 001c 1344     		add	r3, r3, r2
 12336 001e C94A     		ldr	r2, .L588
 12337 0020 1C46     		mov	r4, r3
 12338 0022 1346     		mov	r3, r2
 12339 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 12340 0026 2060     		str	r0, [r4]	@ unaligned
 12341 0028 6160     		str	r1, [r4, #4]	@ unaligned
 12342 002a A260     		str	r2, [r4, #8]	@ unaligned
 12343 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 12344 002e 9B78     		ldrb	r3, [r3, #2]
 12345 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 12346 0032 A373     		strb	r3, [r4, #14]
2163:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 12347              		.loc 1 2163 0
 12348 0034 0023     		movs	r3, #0
 12349 0036 C7F83431 		str	r3, [r7, #308]
 12350 003a 66E1     		b	.L581
 12351              	.L587:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 287


2164:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 12352              		.loc 1 2164 0
 12353 003c C24A     		ldr	r2, .L588+4
 12354 003e D7F83431 		ldr	r3, [r7, #308]
 12355 0042 1344     		add	r3, r3, r2
 12356 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12357 0046 07F10800 		add	r0, r7, #8
 12358 004a D7F83421 		ldr	r2, [r7, #308]
 12359 004e BF49     		ldr	r1, .L588+8
 12360 0050 FFF7FEFF 		bl	sprintf
2165:..\src/command_processing.c ****         strcat(info_string, str);
 12361              		.loc 1 2165 0
 12362 0054 07F10802 		add	r2, r7, #8
 12363 0058 3B1D     		adds	r3, r7, #4
 12364 005a 1146     		mov	r1, r2
 12365 005c 1868     		ldr	r0, [r3]
 12366 005e FFF7FEFF 		bl	strcat
2166:..\src/command_processing.c ****         
2167:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][0])){
 12367              		.loc 1 2167 0
 12368 0062 B94A     		ldr	r2, .L588+4
 12369 0064 D7F83431 		ldr	r3, [r7, #308]
 12370 0068 1344     		add	r3, r3, r2
 12371 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12372 006c 1946     		mov	r1, r3
 12373 006e B84A     		ldr	r2, .L588+12
 12374 0070 0B46     		mov	r3, r1
 12375 0072 9B00     		lsls	r3, r3, #2
 12376 0074 0B44     		add	r3, r3, r1
 12377 0076 1344     		add	r3, r3, r2
 12378 0078 03F25113 		addw	r3, r3, #337
 12379 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12380 007e 002B     		cmp	r3, #0
 12381 0080 31D0     		beq	.L582
2168:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 12382              		.loc 1 2168 0
 12383 0082 B449     		ldr	r1, .L588+16
 12384 0084 D7F83421 		ldr	r2, [r7, #308]
 12385 0088 1346     		mov	r3, r2
 12386 008a 9B00     		lsls	r3, r3, #2
 12387 008c 1344     		add	r3, r3, r2
 12388 008e DB00     		lsls	r3, r3, #3
 12389 0090 0B44     		add	r3, r3, r1
 12390 0092 0233     		adds	r3, r3, #2
 12391 0094 B3F90030 		ldrsh	r3, [r3]
 12392 0098 1C46     		mov	r4, r3
 12393 009a AE49     		ldr	r1, .L588+16
 12394 009c D7F83421 		ldr	r2, [r7, #308]
 12395 00a0 1346     		mov	r3, r2
 12396 00a2 9B00     		lsls	r3, r3, #2
 12397 00a4 1344     		add	r3, r3, r2
 12398 00a6 DB00     		lsls	r3, r3, #3
 12399 00a8 0B44     		add	r3, r3, r1
 12400 00aa 0433     		adds	r3, r3, #4
 12401 00ac B3F90030 		ldrsh	r3, [r3]
 12402 00b0 1D46     		mov	r5, r3
 12403 00b2 A849     		ldr	r1, .L588+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 288


 12404 00b4 D7F83421 		ldr	r2, [r7, #308]
 12405 00b8 1346     		mov	r3, r2
 12406 00ba 9B00     		lsls	r3, r3, #2
 12407 00bc 1344     		add	r3, r3, r2
 12408 00be DB00     		lsls	r3, r3, #3
 12409 00c0 0B44     		add	r3, r3, r1
 12410 00c2 0633     		adds	r3, r3, #6
 12411 00c4 B3F90030 		ldrsh	r3, [r3]
 12412 00c8 07F10800 		add	r0, r7, #8
 12413 00cc 0093     		str	r3, [sp]
 12414 00ce 2B46     		mov	r3, r5
 12415 00d0 2246     		mov	r2, r4
 12416 00d2 A149     		ldr	r1, .L588+20
 12417 00d4 FFF7FEFF 		bl	sprintf
2169:..\src/command_processing.c ****             strcat(info_string, str);
 12418              		.loc 1 2169 0
 12419 00d8 07F10802 		add	r2, r7, #8
 12420 00dc 3B1D     		adds	r3, r7, #4
 12421 00de 1146     		mov	r1, r2
 12422 00e0 1868     		ldr	r0, [r3]
 12423 00e2 FFF7FEFF 		bl	strcat
 12424              	.L582:
2170:..\src/command_processing.c ****         }
2171:..\src/command_processing.c **** 
2172:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][1])){
 12425              		.loc 1 2172 0
 12426 00e6 984A     		ldr	r2, .L588+4
 12427 00e8 D7F83431 		ldr	r3, [r7, #308]
 12428 00ec 1344     		add	r3, r3, r2
 12429 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12430 00f0 1946     		mov	r1, r3
 12431 00f2 974A     		ldr	r2, .L588+12
 12432 00f4 0B46     		mov	r3, r1
 12433 00f6 9B00     		lsls	r3, r3, #2
 12434 00f8 0B44     		add	r3, r3, r1
 12435 00fa 1344     		add	r3, r3, r2
 12436 00fc 03F5A973 		add	r3, r3, #338
 12437 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12438 0102 002B     		cmp	r3, #0
 12439 0104 31D0     		beq	.L583
2173:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 12440              		.loc 1 2173 0
 12441 0106 9349     		ldr	r1, .L588+16
 12442 0108 D7F83421 		ldr	r2, [r7, #308]
 12443 010c 1346     		mov	r3, r2
 12444 010e 9B00     		lsls	r3, r3, #2
 12445 0110 1344     		add	r3, r3, r2
 12446 0112 DB00     		lsls	r3, r3, #3
 12447 0114 0B44     		add	r3, r3, r1
 12448 0116 0833     		adds	r3, r3, #8
 12449 0118 B3F90030 		ldrsh	r3, [r3]
 12450 011c 1C46     		mov	r4, r3
 12451 011e 8D49     		ldr	r1, .L588+16
 12452 0120 D7F83421 		ldr	r2, [r7, #308]
 12453 0124 1346     		mov	r3, r2
 12454 0126 9B00     		lsls	r3, r3, #2
 12455 0128 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 289


 12456 012a DB00     		lsls	r3, r3, #3
 12457 012c 0B44     		add	r3, r3, r1
 12458 012e 0A33     		adds	r3, r3, #10
 12459 0130 B3F90030 		ldrsh	r3, [r3]
 12460 0134 1D46     		mov	r5, r3
 12461 0136 8749     		ldr	r1, .L588+16
 12462 0138 D7F83421 		ldr	r2, [r7, #308]
 12463 013c 1346     		mov	r3, r2
 12464 013e 9B00     		lsls	r3, r3, #2
 12465 0140 1344     		add	r3, r3, r2
 12466 0142 DB00     		lsls	r3, r3, #3
 12467 0144 0B44     		add	r3, r3, r1
 12468 0146 0C33     		adds	r3, r3, #12
 12469 0148 B3F90030 		ldrsh	r3, [r3]
 12470 014c 07F10800 		add	r0, r7, #8
 12471 0150 0093     		str	r3, [sp]
 12472 0152 2B46     		mov	r3, r5
 12473 0154 2246     		mov	r2, r4
 12474 0156 8149     		ldr	r1, .L588+24
 12475 0158 FFF7FEFF 		bl	sprintf
2174:..\src/command_processing.c ****             strcat(info_string, str);
 12476              		.loc 1 2174 0
 12477 015c 07F10802 		add	r2, r7, #8
 12478 0160 3B1D     		adds	r3, r7, #4
 12479 0162 1146     		mov	r1, r2
 12480 0164 1868     		ldr	r0, [r3]
 12481 0166 FFF7FEFF 		bl	strcat
 12482              	.L583:
2175:..\src/command_processing.c ****         }
2176:..\src/command_processing.c **** 
2177:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][2])){
 12483              		.loc 1 2177 0
 12484 016a 774A     		ldr	r2, .L588+4
 12485 016c D7F83431 		ldr	r3, [r7, #308]
 12486 0170 1344     		add	r3, r3, r2
 12487 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12488 0174 1946     		mov	r1, r3
 12489 0176 764A     		ldr	r2, .L588+12
 12490 0178 0B46     		mov	r3, r1
 12491 017a 9B00     		lsls	r3, r3, #2
 12492 017c 0B44     		add	r3, r3, r1
 12493 017e 1344     		add	r3, r3, r2
 12494 0180 03F25313 		addw	r3, r3, #339
 12495 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12496 0186 002B     		cmp	r3, #0
 12497 0188 31D0     		beq	.L584
2178:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 12498              		.loc 1 2178 0
 12499 018a 7249     		ldr	r1, .L588+16
 12500 018c D7F83421 		ldr	r2, [r7, #308]
 12501 0190 1346     		mov	r3, r2
 12502 0192 9B00     		lsls	r3, r3, #2
 12503 0194 1344     		add	r3, r3, r2
 12504 0196 DB00     		lsls	r3, r3, #3
 12505 0198 0B44     		add	r3, r3, r1
 12506 019a 0E33     		adds	r3, r3, #14
 12507 019c B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 290


 12508 01a0 1C46     		mov	r4, r3
 12509 01a2 6C49     		ldr	r1, .L588+16
 12510 01a4 D7F83421 		ldr	r2, [r7, #308]
 12511 01a8 1346     		mov	r3, r2
 12512 01aa 9B00     		lsls	r3, r3, #2
 12513 01ac 1344     		add	r3, r3, r2
 12514 01ae DB00     		lsls	r3, r3, #3
 12515 01b0 0B44     		add	r3, r3, r1
 12516 01b2 1033     		adds	r3, r3, #16
 12517 01b4 B3F90030 		ldrsh	r3, [r3]
 12518 01b8 1D46     		mov	r5, r3
 12519 01ba 6649     		ldr	r1, .L588+16
 12520 01bc D7F83421 		ldr	r2, [r7, #308]
 12521 01c0 1346     		mov	r3, r2
 12522 01c2 9B00     		lsls	r3, r3, #2
 12523 01c4 1344     		add	r3, r3, r2
 12524 01c6 DB00     		lsls	r3, r3, #3
 12525 01c8 0B44     		add	r3, r3, r1
 12526 01ca 1233     		adds	r3, r3, #18
 12527 01cc B3F90030 		ldrsh	r3, [r3]
 12528 01d0 07F10800 		add	r0, r7, #8
 12529 01d4 0093     		str	r3, [sp]
 12530 01d6 2B46     		mov	r3, r5
 12531 01d8 2246     		mov	r2, r4
 12532 01da 6149     		ldr	r1, .L588+28
 12533 01dc FFF7FEFF 		bl	sprintf
2179:..\src/command_processing.c ****             strcat(info_string, str);
 12534              		.loc 1 2179 0
 12535 01e0 07F10802 		add	r2, r7, #8
 12536 01e4 3B1D     		adds	r3, r7, #4
 12537 01e6 1146     		mov	r1, r2
 12538 01e8 1868     		ldr	r0, [r3]
 12539 01ea FFF7FEFF 		bl	strcat
 12540              	.L584:
2180:..\src/command_processing.c ****         }
2181:..\src/command_processing.c ****         
2182:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][3])){
 12541              		.loc 1 2182 0
 12542 01ee 564A     		ldr	r2, .L588+4
 12543 01f0 D7F83431 		ldr	r3, [r7, #308]
 12544 01f4 1344     		add	r3, r3, r2
 12545 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12546 01f8 1946     		mov	r1, r3
 12547 01fa 554A     		ldr	r2, .L588+12
 12548 01fc 0B46     		mov	r3, r1
 12549 01fe 9B00     		lsls	r3, r3, #2
 12550 0200 0B44     		add	r3, r3, r1
 12551 0202 1344     		add	r3, r3, r2
 12552 0204 03F5AA73 		add	r3, r3, #340
 12553 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12554 020a 002B     		cmp	r3, #0
 12555 020c 4FD0     		beq	.L585
2183:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 12556              		.loc 1 2183 0
 12557 020e 5149     		ldr	r1, .L588+16
 12558 0210 D7F83421 		ldr	r2, [r7, #308]
 12559 0214 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 291


 12560 0216 9B00     		lsls	r3, r3, #2
 12561 0218 1344     		add	r3, r3, r2
 12562 021a DB00     		lsls	r3, r3, #3
 12563 021c 0B44     		add	r3, r3, r1
 12564 021e 1433     		adds	r3, r3, #20
 12565 0220 1B68     		ldr	r3, [r3]	@ float
 12566 0222 1846     		mov	r0, r3
 12567 0224 FFF7FEFF 		bl	__aeabi_f2d
 12568 0228 8246     		mov	r10, r0
 12569 022a 8B46     		mov	fp, r1
 12570 022c 4949     		ldr	r1, .L588+16
 12571 022e D7F83421 		ldr	r2, [r7, #308]
 12572 0232 1346     		mov	r3, r2
 12573 0234 9B00     		lsls	r3, r3, #2
 12574 0236 1344     		add	r3, r3, r2
 12575 0238 DB00     		lsls	r3, r3, #3
 12576 023a 0B44     		add	r3, r3, r1
 12577 023c 1833     		adds	r3, r3, #24
 12578 023e 1B68     		ldr	r3, [r3]	@ float
 12579 0240 1846     		mov	r0, r3
 12580 0242 FFF7FEFF 		bl	__aeabi_f2d
 12581 0246 0446     		mov	r4, r0
 12582 0248 0D46     		mov	r5, r1
 12583 024a 4249     		ldr	r1, .L588+16
 12584 024c D7F83421 		ldr	r2, [r7, #308]
 12585 0250 1346     		mov	r3, r2
 12586 0252 9B00     		lsls	r3, r3, #2
 12587 0254 1344     		add	r3, r3, r2
 12588 0256 DB00     		lsls	r3, r3, #3
 12589 0258 0B44     		add	r3, r3, r1
 12590 025a 1C33     		adds	r3, r3, #28
 12591 025c 1B68     		ldr	r3, [r3]	@ float
 12592 025e 1846     		mov	r0, r3
 12593 0260 FFF7FEFF 		bl	__aeabi_f2d
 12594 0264 8046     		mov	r8, r0
 12595 0266 8946     		mov	r9, r1
 12596 0268 3A49     		ldr	r1, .L588+16
 12597 026a D7F83421 		ldr	r2, [r7, #308]
 12598 026e 1346     		mov	r3, r2
 12599 0270 9B00     		lsls	r3, r3, #2
 12600 0272 1344     		add	r3, r3, r2
 12601 0274 DB00     		lsls	r3, r3, #3
 12602 0276 0B44     		add	r3, r3, r1
 12603 0278 2033     		adds	r3, r3, #32
 12604 027a 1B68     		ldr	r3, [r3]	@ float
 12605 027c 1846     		mov	r0, r3
 12606 027e FFF7FEFF 		bl	__aeabi_f2d
 12607 0282 0246     		mov	r2, r0
 12608 0284 0B46     		mov	r3, r1
 12609 0286 07F10800 		add	r0, r7, #8
 12610 028a CDE90423 		strd	r2, [sp, #16]
 12611 028e CDE90289 		strd	r8, [sp, #8]
 12612 0292 CDE90045 		strd	r4, [sp]
 12613 0296 5246     		mov	r2, r10
 12614 0298 5B46     		mov	r3, fp
 12615 029a 3249     		ldr	r1, .L588+32
 12616 029c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 292


2184:..\src/command_processing.c ****             strcat(info_string, str);
 12617              		.loc 1 2184 0
 12618 02a0 07F10802 		add	r2, r7, #8
 12619 02a4 3B1D     		adds	r3, r7, #4
 12620 02a6 1146     		mov	r1, r2
 12621 02a8 1868     		ldr	r0, [r3]
 12622 02aa FFF7FEFF 		bl	strcat
 12623              	.L585:
2185:..\src/command_processing.c ****         }
2186:..\src/command_processing.c ****         
2187:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][4])){
 12624              		.loc 1 2187 0
 12625 02ae 264A     		ldr	r2, .L588+4
 12626 02b0 D7F83431 		ldr	r3, [r7, #308]
 12627 02b4 1344     		add	r3, r3, r2
 12628 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12629 02b8 1946     		mov	r1, r3
 12630 02ba 254A     		ldr	r2, .L588+12
 12631 02bc 0B46     		mov	r3, r1
 12632 02be 9B00     		lsls	r3, r3, #2
 12633 02c0 0B44     		add	r3, r3, r1
 12634 02c2 1344     		add	r3, r3, r2
 12635 02c4 03F25513 		addw	r3, r3, #341
 12636 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12637 02ca 002B     		cmp	r3, #0
 12638 02cc 18D0     		beq	.L586
2188:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 12639              		.loc 1 2188 0
 12640 02ce 2149     		ldr	r1, .L588+16
 12641 02d0 D7F83421 		ldr	r2, [r7, #308]
 12642 02d4 1346     		mov	r3, r2
 12643 02d6 9B00     		lsls	r3, r3, #2
 12644 02d8 1344     		add	r3, r3, r2
 12645 02da DB00     		lsls	r3, r3, #3
 12646 02dc 0B44     		add	r3, r3, r1
 12647 02de 2433     		adds	r3, r3, #36
 12648 02e0 B3F90030 		ldrsh	r3, [r3]
 12649 02e4 1A46     		mov	r2, r3
 12650 02e6 07F10803 		add	r3, r7, #8
 12651 02ea 1F49     		ldr	r1, .L588+36
 12652 02ec 1846     		mov	r0, r3
 12653 02ee FFF7FEFF 		bl	sprintf
2189:..\src/command_processing.c ****             strcat(info_string, str);
 12654              		.loc 1 2189 0
 12655 02f2 07F10802 		add	r2, r7, #8
 12656 02f6 3B1D     		adds	r3, r7, #4
 12657 02f8 1146     		mov	r1, r2
 12658 02fa 1868     		ldr	r0, [r3]
 12659 02fc FFF7FEFF 		bl	strcat
 12660              	.L586:
2163:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 12661              		.loc 1 2163 0 discriminator 2
 12662 0300 D7F83431 		ldr	r3, [r7, #308]
 12663 0304 0133     		adds	r3, r3, #1
 12664 0306 C7F83431 		str	r3, [r7, #308]
 12665              	.L581:
2163:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 293


 12666              		.loc 1 2163 0 is_stmt 0 discriminator 1
 12667 030a 184B     		ldr	r3, .L588+40
 12668 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12669 030e 1A46     		mov	r2, r3
 12670 0310 D7F83431 		ldr	r3, [r7, #308]
 12671 0314 9A42     		cmp	r2, r3
 12672 0316 3FF791AE 		bgt	.L587
2190:..\src/command_processing.c ****         }
2191:..\src/command_processing.c ****     }
2192:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 12673              		.loc 1 2192 0 is_stmt 1
 12674 031a 3B1D     		adds	r3, r7, #4
 12675 031c 1868     		ldr	r0, [r3]
 12676 031e FFF7FEFF 		bl	strlen
 12677 0322 0346     		mov	r3, r0
 12678 0324 1A46     		mov	r2, r3
 12679 0326 3B1D     		adds	r3, r7, #4
 12680 0328 1B68     		ldr	r3, [r3]
 12681 032a 1344     		add	r3, r3, r2
 12682 032c 104A     		ldr	r2, .L588+44
 12683 032e 1188     		ldrh	r1, [r2]	@ unaligned
 12684 0330 9278     		ldrb	r2, [r2, #2]
 12685 0332 1980     		strh	r1, [r3]	@ unaligned
 12686 0334 9A70     		strb	r2, [r3, #2]
2193:..\src/command_processing.c **** }
 12687              		.loc 1 2193 0
 12688 0336 00BF     		nop
 12689 0338 07F59C77 		add	r7, r7, #312
 12690              		.cfi_def_cfa_offset 32
 12691 033c BD46     		mov	sp, r7
 12692              		.cfi_def_cfa_register 13
 12693              		@ sp needed
 12694 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 12695              	.L589:
 12696 0342 00BF     		.align	2
 12697              	.L588:
 12698 0344 50130000 		.word	.LC202
 12699 0348 00000000 		.word	IMU_connected
 12700 034c DC0F0000 		.word	.LC164
 12701 0350 00000000 		.word	c_mem
 12702 0354 00000000 		.word	g_imu
 12703 0358 60130000 		.word	.LC203
 12704 035c 74130000 		.word	.LC204
 12705 0360 88130000 		.word	.LC205
 12706 0364 9C130000 		.word	.LC206
 12707 0368 BC130000 		.word	.LC207
 12708 036c 00000000 		.word	N_IMU_Connected
 12709 0370 28090000 		.word	.LC87
 12710              		.cfi_endproc
 12711              	.LFE76:
 12712              		.size	IMU_reading_info, .-IMU_reading_info
 12713              		.section	.text.commWrite_old_id,"ax",%progbits
 12714              		.align	2
 12715              		.global	commWrite_old_id
 12716              		.thumb
 12717              		.thumb_func
 12718              		.type	commWrite_old_id, %function
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 294


 12719              	commWrite_old_id:
 12720              	.LFB77:
2194:..\src/command_processing.c **** 
2195:..\src/command_processing.c **** //==============================================================================
2196:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
2197:..\src/command_processing.c **** //==============================================================================
2198:..\src/command_processing.c **** 
2199:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
2200:..\src/command_processing.c **** {
 12721              		.loc 1 2200 0
 12722              		.cfi_startproc
 12723              		@ args = 0, pretend = 0, frame = 16
 12724              		@ frame_needed = 1, uses_anonymous_args = 0
 12725 0000 80B5     		push	{r7, lr}
 12726              		.cfi_def_cfa_offset 8
 12727              		.cfi_offset 7, -8
 12728              		.cfi_offset 14, -4
 12729 0002 84B0     		sub	sp, sp, #16
 12730              		.cfi_def_cfa_offset 24
 12731 0004 00AF     		add	r7, sp, #0
 12732              		.cfi_def_cfa_register 7
 12733 0006 7860     		str	r0, [r7, #4]
 12734 0008 0B46     		mov	r3, r1
 12735 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 12736 000c 1346     		mov	r3, r2
 12737 000e 7B70     		strb	r3, [r7, #1]
2201:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2202:..\src/command_processing.c **** 
2203:..\src/command_processing.c ****     // frame - start
2204:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12738              		.loc 1 2204 0
 12739 0010 3A20     		movs	r0, #58
 12740 0012 FFF7FEFF 		bl	UART_RS485_PutChar
2205:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12741              		.loc 1 2205 0
 12742 0016 3A20     		movs	r0, #58
 12743 0018 FFF7FEFF 		bl	UART_RS485_PutChar
2206:..\src/command_processing.c ****     // frame - ID
2207:..\src/command_processing.c ****     //if(old_id)
2208:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 12744              		.loc 1 2208 0
 12745 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 12746 001e 1846     		mov	r0, r3
 12747 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2209:..\src/command_processing.c ****     //else
2210:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
2211:..\src/command_processing.c ****         
2212:..\src/command_processing.c ****     // frame - length
2213:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 12748              		.loc 1 2213 0
 12749 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 12750 0026 DBB2     		uxtb	r3, r3
 12751 0028 1846     		mov	r0, r3
 12752 002a FFF7FEFF 		bl	UART_RS485_PutChar
2214:..\src/command_processing.c ****     // frame - packet data
2215:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 12753              		.loc 1 2215 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 295


 12754 002e 0023     		movs	r3, #0
 12755 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 12756 0032 09E0     		b	.L591
 12757              	.L592:
2216:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12758              		.loc 1 2216 0 discriminator 3
 12759 0034 FB89     		ldrh	r3, [r7, #14]
 12760 0036 7A68     		ldr	r2, [r7, #4]
 12761 0038 1344     		add	r3, r3, r2
 12762 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12763 003c 1846     		mov	r0, r3
 12764 003e FFF7FEFF 		bl	UART_RS485_PutChar
2215:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12765              		.loc 1 2215 0 discriminator 3
 12766 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 12767 0044 0133     		adds	r3, r3, #1
 12768 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 12769              	.L591:
2215:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12770              		.loc 1 2215 0 is_stmt 0 discriminator 1
 12771 0048 FA89     		ldrh	r2, [r7, #14]
 12772 004a 7B88     		ldrh	r3, [r7, #2]
 12773 004c 9A42     		cmp	r2, r3
 12774 004e F1D3     		bcc	.L592
2217:..\src/command_processing.c ****     }
2218:..\src/command_processing.c **** 
2219:..\src/command_processing.c ****     index = 0;
 12775              		.loc 1 2219 0 is_stmt 1
 12776 0050 0023     		movs	r3, #0
 12777 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2220:..\src/command_processing.c **** 
2221:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 12778              		.loc 1 2221 0
 12779 0054 00BF     		nop
 12780              	.L594:
 12781              		.loc 1 2221 0 is_stmt 0 discriminator 2
 12782 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 12783 005a 0346     		mov	r3, r0
 12784 005c 03F00103 		and	r3, r3, #1
 12785 0060 002B     		cmp	r3, #0
 12786 0062 05D1     		bne	.L593
 12787              		.loc 1 2221 0 discriminator 1
 12788 0064 FB89     		ldrh	r3, [r7, #14]
 12789 0066 5A1C     		adds	r2, r3, #1
 12790 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 12791 006a B3F57A7F 		cmp	r3, #1000
 12792 006e F2D9     		bls	.L594
 12793              	.L593:
2222:..\src/command_processing.c **** 
2223:..\src/command_processing.c ****     RS485_CTS_Write(1);
 12794              		.loc 1 2223 0 is_stmt 1
 12795 0070 0120     		movs	r0, #1
 12796 0072 FFF7FEFF 		bl	RS485_CTS_Write
2224:..\src/command_processing.c ****     RS485_CTS_Write(0);
 12797              		.loc 1 2224 0
 12798 0076 0020     		movs	r0, #0
 12799 0078 FFF7FEFF 		bl	RS485_CTS_Write
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 296


2225:..\src/command_processing.c **** }
 12800              		.loc 1 2225 0
 12801 007c 00BF     		nop
 12802 007e 1037     		adds	r7, r7, #16
 12803              		.cfi_def_cfa_offset 8
 12804 0080 BD46     		mov	sp, r7
 12805              		.cfi_def_cfa_register 13
 12806              		@ sp needed
 12807 0082 80BD     		pop	{r7, pc}
 12808              		.cfi_endproc
 12809              	.LFE77:
 12810              		.size	commWrite_old_id, .-commWrite_old_id
 12811              		.section	.text.commWrite,"ax",%progbits
 12812              		.align	2
 12813              		.global	commWrite
 12814              		.thumb
 12815              		.thumb_func
 12816              		.type	commWrite, %function
 12817              	commWrite:
 12818              	.LFB78:
2226:..\src/command_processing.c **** 
2227:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
2228:..\src/command_processing.c **** {
 12819              		.loc 1 2228 0
 12820              		.cfi_startproc
 12821              		@ args = 0, pretend = 0, frame = 16
 12822              		@ frame_needed = 1, uses_anonymous_args = 0
 12823 0000 80B5     		push	{r7, lr}
 12824              		.cfi_def_cfa_offset 8
 12825              		.cfi_offset 7, -8
 12826              		.cfi_offset 14, -4
 12827 0002 84B0     		sub	sp, sp, #16
 12828              		.cfi_def_cfa_offset 24
 12829 0004 00AF     		add	r7, sp, #0
 12830              		.cfi_def_cfa_register 7
 12831 0006 7860     		str	r0, [r7, #4]
 12832 0008 0B46     		mov	r3, r1
 12833 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2229:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2230:..\src/command_processing.c **** 
2231:..\src/command_processing.c ****     // frame - start
2232:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12834              		.loc 1 2232 0
 12835 000c 3A20     		movs	r0, #58
 12836 000e FFF7FEFF 		bl	UART_RS485_PutChar
2233:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12837              		.loc 1 2233 0
 12838 0012 3A20     		movs	r0, #58
 12839 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2234:..\src/command_processing.c ****     // frame - ID
2235:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id);
 12840              		.loc 1 2235 0
 12841 0018 1A4B     		ldr	r3, .L600
 12842 001a 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 12843 001e 1846     		mov	r0, r3
 12844 0020 FFF7FEFF 		bl	UART_RS485_PutChar
2236:..\src/command_processing.c ****     // frame - length
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 297


2237:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 12845              		.loc 1 2237 0
 12846 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 12847 0026 DBB2     		uxtb	r3, r3
 12848 0028 1846     		mov	r0, r3
 12849 002a FFF7FEFF 		bl	UART_RS485_PutChar
2238:..\src/command_processing.c ****     // frame - packet data
2239:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 12850              		.loc 1 2239 0
 12851 002e 0023     		movs	r3, #0
 12852 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 12853 0032 09E0     		b	.L596
 12854              	.L597:
2240:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12855              		.loc 1 2240 0 discriminator 3
 12856 0034 FB89     		ldrh	r3, [r7, #14]
 12857 0036 7A68     		ldr	r2, [r7, #4]
 12858 0038 1344     		add	r3, r3, r2
 12859 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12860 003c 1846     		mov	r0, r3
 12861 003e FFF7FEFF 		bl	UART_RS485_PutChar
2239:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12862              		.loc 1 2239 0 discriminator 3
 12863 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 12864 0044 0133     		adds	r3, r3, #1
 12865 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 12866              	.L596:
2239:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12867              		.loc 1 2239 0 is_stmt 0 discriminator 1
 12868 0048 FA89     		ldrh	r2, [r7, #14]
 12869 004a 7B88     		ldrh	r3, [r7, #2]
 12870 004c 9A42     		cmp	r2, r3
 12871 004e F1D3     		bcc	.L597
2241:..\src/command_processing.c ****     }
2242:..\src/command_processing.c **** 
2243:..\src/command_processing.c ****     index = 0;
 12872              		.loc 1 2243 0 is_stmt 1
 12873 0050 0023     		movs	r3, #0
 12874 0052 FB81     		strh	r3, [r7, #14]	@ movhi
2244:..\src/command_processing.c **** 
2245:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 12875              		.loc 1 2245 0
 12876 0054 00BF     		nop
 12877              	.L599:
 12878              		.loc 1 2245 0 is_stmt 0 discriminator 2
 12879 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 12880 005a 0346     		mov	r3, r0
 12881 005c 03F00103 		and	r3, r3, #1
 12882 0060 002B     		cmp	r3, #0
 12883 0062 05D1     		bne	.L598
 12884              		.loc 1 2245 0 discriminator 1
 12885 0064 FB89     		ldrh	r3, [r7, #14]
 12886 0066 5A1C     		adds	r2, r3, #1
 12887 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 12888 006a B3F57A7F 		cmp	r3, #1000
 12889 006e F2D9     		bls	.L599
 12890              	.L598:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 298


2246:..\src/command_processing.c **** 
2247:..\src/command_processing.c ****     RS485_CTS_Write(1);
 12891              		.loc 1 2247 0 is_stmt 1
 12892 0070 0120     		movs	r0, #1
 12893 0072 FFF7FEFF 		bl	RS485_CTS_Write
2248:..\src/command_processing.c ****     RS485_CTS_Write(0);
 12894              		.loc 1 2248 0
 12895 0076 0020     		movs	r0, #0
 12896 0078 FFF7FEFF 		bl	RS485_CTS_Write
2249:..\src/command_processing.c **** }
 12897              		.loc 1 2249 0
 12898 007c 00BF     		nop
 12899 007e 1037     		adds	r7, r7, #16
 12900              		.cfi_def_cfa_offset 8
 12901 0080 BD46     		mov	sp, r7
 12902              		.cfi_def_cfa_register 13
 12903              		@ sp needed
 12904 0082 80BD     		pop	{r7, pc}
 12905              	.L601:
 12906              		.align	2
 12907              	.L600:
 12908 0084 00000000 		.word	g_mem
 12909              		.cfi_endproc
 12910              	.LFE78:
 12911              		.size	commWrite, .-commWrite
 12912              		.section	.text.commWrite_to_cuff,"ax",%progbits
 12913              		.align	2
 12914              		.global	commWrite_to_cuff
 12915              		.thumb
 12916              		.thumb_func
 12917              		.type	commWrite_to_cuff, %function
 12918              	commWrite_to_cuff:
 12919              	.LFB79:
2250:..\src/command_processing.c **** 
2251:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
2252:..\src/command_processing.c **** {
 12920              		.loc 1 2252 0
 12921              		.cfi_startproc
 12922              		@ args = 0, pretend = 0, frame = 16
 12923              		@ frame_needed = 1, uses_anonymous_args = 0
 12924 0000 80B5     		push	{r7, lr}
 12925              		.cfi_def_cfa_offset 8
 12926              		.cfi_offset 7, -8
 12927              		.cfi_offset 14, -4
 12928 0002 84B0     		sub	sp, sp, #16
 12929              		.cfi_def_cfa_offset 24
 12930 0004 00AF     		add	r7, sp, #0
 12931              		.cfi_def_cfa_register 7
 12932 0006 7860     		str	r0, [r7, #4]
 12933 0008 0B46     		mov	r3, r1
 12934 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2253:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
2254:..\src/command_processing.c **** 
2255:..\src/command_processing.c ****     // frame - start
2256:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12935              		.loc 1 2256 0
 12936 000c 3A20     		movs	r0, #58
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 299


 12937 000e FFF7FEFF 		bl	UART_RS485_PutChar
2257:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 12938              		.loc 1 2257 0
 12939 0012 3A20     		movs	r0, #58
 12940 0014 FFF7FEFF 		bl	UART_RS485_PutChar
2258:..\src/command_processing.c ****     // frame - ID
2259:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id - 1);
 12941              		.loc 1 2259 0
 12942 0018 184B     		ldr	r3, .L608
 12943 001a 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 12944 001e 013B     		subs	r3, r3, #1
 12945 0020 DBB2     		uxtb	r3, r3
 12946 0022 1846     		mov	r0, r3
 12947 0024 FFF7FEFF 		bl	UART_RS485_PutChar
2260:..\src/command_processing.c ****     // frame - length
2261:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 12948              		.loc 1 2261 0
 12949 0028 7B88     		ldrh	r3, [r7, #2]	@ movhi
 12950 002a DBB2     		uxtb	r3, r3
 12951 002c 1846     		mov	r0, r3
 12952 002e FFF7FEFF 		bl	UART_RS485_PutChar
2262:..\src/command_processing.c ****     // frame - packet data
2263:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 12953              		.loc 1 2263 0
 12954 0032 0023     		movs	r3, #0
 12955 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 12956 0036 09E0     		b	.L603
 12957              	.L604:
2264:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12958              		.loc 1 2264 0 discriminator 3
 12959 0038 FB89     		ldrh	r3, [r7, #14]
 12960 003a 7A68     		ldr	r2, [r7, #4]
 12961 003c 1344     		add	r3, r3, r2
 12962 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12963 0040 1846     		mov	r0, r3
 12964 0042 FFF7FEFF 		bl	UART_RS485_PutChar
2263:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12965              		.loc 1 2263 0 discriminator 3
 12966 0046 FB89     		ldrh	r3, [r7, #14]	@ movhi
 12967 0048 0133     		adds	r3, r3, #1
 12968 004a FB81     		strh	r3, [r7, #14]	@ movhi
 12969              	.L603:
2263:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 12970              		.loc 1 2263 0 is_stmt 0 discriminator 1
 12971 004c FA89     		ldrh	r2, [r7, #14]
 12972 004e 7B88     		ldrh	r3, [r7, #2]
 12973 0050 9A42     		cmp	r2, r3
 12974 0052 F1D3     		bcc	.L604
2265:..\src/command_processing.c ****     }
2266:..\src/command_processing.c **** 
2267:..\src/command_processing.c ****     index = 0;
 12975              		.loc 1 2267 0 is_stmt 1
 12976 0054 0023     		movs	r3, #0
 12977 0056 FB81     		strh	r3, [r7, #14]	@ movhi
2268:..\src/command_processing.c **** 
2269:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 12978              		.loc 1 2269 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 300


 12979 0058 00BF     		nop
 12980              	.L606:
 12981              		.loc 1 2269 0 is_stmt 0 discriminator 2
 12982 005a FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 12983 005e 0346     		mov	r3, r0
 12984 0060 03F00103 		and	r3, r3, #1
 12985 0064 002B     		cmp	r3, #0
 12986 0066 05D1     		bne	.L607
 12987              		.loc 1 2269 0 discriminator 1
 12988 0068 FB89     		ldrh	r3, [r7, #14]
 12989 006a 5A1C     		adds	r2, r3, #1
 12990 006c FA81     		strh	r2, [r7, #14]	@ movhi
 12991 006e B3F57A7F 		cmp	r3, #1000
 12992 0072 F2D9     		bls	.L606
 12993              	.L607:
2270:..\src/command_processing.c **** }
 12994              		.loc 1 2270 0 is_stmt 1
 12995 0074 00BF     		nop
 12996 0076 1037     		adds	r7, r7, #16
 12997              		.cfi_def_cfa_offset 8
 12998 0078 BD46     		mov	sp, r7
 12999              		.cfi_def_cfa_register 13
 13000              		@ sp needed
 13001 007a 80BD     		pop	{r7, pc}
 13002              	.L609:
 13003              		.align	2
 13004              	.L608:
 13005 007c 00000000 		.word	g_mem
 13006              		.cfi_endproc
 13007              	.LFE79:
 13008              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 13009              		.section	.text.LCRChecksum,"ax",%progbits
 13010              		.align	2
 13011              		.global	LCRChecksum
 13012              		.thumb
 13013              		.thumb_func
 13014              		.type	LCRChecksum, %function
 13015              	LCRChecksum:
 13016              	.LFB80:
2271:..\src/command_processing.c **** 
2272:..\src/command_processing.c **** //==============================================================================
2273:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
2274:..\src/command_processing.c **** //==============================================================================
2275:..\src/command_processing.c **** 
2276:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
2277:..\src/command_processing.c **** 
2278:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 13017              		.loc 1 2278 0
 13018              		.cfi_startproc
 13019              		@ args = 0, pretend = 0, frame = 16
 13020              		@ frame_needed = 1, uses_anonymous_args = 0
 13021              		@ link register save eliminated.
 13022 0000 80B4     		push	{r7}
 13023              		.cfi_def_cfa_offset 4
 13024              		.cfi_offset 7, -4
 13025 0002 85B0     		sub	sp, sp, #20
 13026              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 301


 13027 0004 00AF     		add	r7, sp, #0
 13028              		.cfi_def_cfa_register 7
 13029 0006 7860     		str	r0, [r7, #4]
 13030 0008 0B46     		mov	r3, r1
 13031 000a FB70     		strb	r3, [r7, #3]
2279:..\src/command_processing.c ****     
2280:..\src/command_processing.c ****     uint8 CYDATA i;
2281:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 13032              		.loc 1 2281 0
 13033 000c 0023     		movs	r3, #0
 13034 000e BB73     		strb	r3, [r7, #14]
2282:..\src/command_processing.c ****     
2283:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 13035              		.loc 1 2283 0
 13036 0010 0023     		movs	r3, #0
 13037 0012 FB73     		strb	r3, [r7, #15]
 13038 0014 09E0     		b	.L611
 13039              	.L612:
2284:..\src/command_processing.c ****        checksum ^= data_array[i];
 13040              		.loc 1 2284 0 discriminator 3
 13041 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 13042 0018 7A68     		ldr	r2, [r7, #4]
 13043 001a 1344     		add	r3, r3, r2
 13044 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 13045 001e BB7B     		ldrb	r3, [r7, #14]
 13046 0020 5340     		eors	r3, r3, r2
 13047 0022 BB73     		strb	r3, [r7, #14]
2283:..\src/command_processing.c ****        checksum ^= data_array[i];
 13048              		.loc 1 2283 0 discriminator 3
 13049 0024 FB7B     		ldrb	r3, [r7, #15]
 13050 0026 0133     		adds	r3, r3, #1
 13051 0028 FB73     		strb	r3, [r7, #15]
 13052              	.L611:
2283:..\src/command_processing.c ****        checksum ^= data_array[i];
 13053              		.loc 1 2283 0 is_stmt 0 discriminator 1
 13054 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 13055 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 13056 002e 9A42     		cmp	r2, r3
 13057 0030 F1D3     		bcc	.L612
2285:..\src/command_processing.c ****   
2286:..\src/command_processing.c ****     return checksum;
 13058              		.loc 1 2286 0 is_stmt 1
 13059 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
2287:..\src/command_processing.c **** }
 13060              		.loc 1 2287 0
 13061 0034 1846     		mov	r0, r3
 13062 0036 1437     		adds	r7, r7, #20
 13063              		.cfi_def_cfa_offset 4
 13064 0038 BD46     		mov	sp, r7
 13065              		.cfi_def_cfa_register 13
 13066              		@ sp needed
 13067 003a 80BC     		pop	{r7}
 13068              		.cfi_restore 7
 13069              		.cfi_def_cfa_offset 0
 13070 003c 7047     		bx	lr
 13071              		.cfi_endproc
 13072              	.LFE80:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 302


 13073              		.size	LCRChecksum, .-LCRChecksum
 13074 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 13075              		.align	2
 13076              		.global	sendAcknowledgment
 13077              		.thumb
 13078              		.thumb_func
 13079              		.type	sendAcknowledgment, %function
 13080              	sendAcknowledgment:
 13081              	.LFB81:
2288:..\src/command_processing.c **** 
2289:..\src/command_processing.c **** 
2290:..\src/command_processing.c **** //==============================================================================
2291:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
2292:..\src/command_processing.c **** //==============================================================================
2293:..\src/command_processing.c **** 
2294:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
 13082              		.loc 1 2294 0
 13083              		.cfi_startproc
 13084              		@ args = 0, pretend = 0, frame = 16
 13085              		@ frame_needed = 1, uses_anonymous_args = 0
 13086 0000 80B5     		push	{r7, lr}
 13087              		.cfi_def_cfa_offset 8
 13088              		.cfi_offset 7, -8
 13089              		.cfi_offset 14, -4
 13090 0002 84B0     		sub	sp, sp, #16
 13091              		.cfi_def_cfa_offset 24
 13092 0004 00AF     		add	r7, sp, #0
 13093              		.cfi_def_cfa_register 7
 13094 0006 0346     		mov	r3, r0
 13095 0008 FB71     		strb	r3, [r7, #7]
2295:..\src/command_processing.c ****     int packet_lenght = 2;
 13096              		.loc 1 2295 0
 13097 000a 0223     		movs	r3, #2
 13098 000c FB60     		str	r3, [r7, #12]
2296:..\src/command_processing.c ****     uint8 packet_data[2];
2297:..\src/command_processing.c **** 
2298:..\src/command_processing.c ****     packet_data[0] = value;
 13099              		.loc 1 2298 0
 13100 000e FB79     		ldrb	r3, [r7, #7]
 13101 0010 3B72     		strb	r3, [r7, #8]
2299:..\src/command_processing.c ****     packet_data[1] = value;
 13102              		.loc 1 2299 0
 13103 0012 FB79     		ldrb	r3, [r7, #7]
 13104 0014 7B72     		strb	r3, [r7, #9]
2300:..\src/command_processing.c **** 
2301:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 13105              		.loc 1 2301 0
 13106 0016 FB68     		ldr	r3, [r7, #12]
 13107 0018 9AB2     		uxth	r2, r3
 13108 001a 07F10803 		add	r3, r7, #8
 13109 001e 1146     		mov	r1, r2
 13110 0020 1846     		mov	r0, r3
 13111 0022 FFF7FEFF 		bl	commWrite
2302:..\src/command_processing.c **** }
 13112              		.loc 1 2302 0
 13113 0026 00BF     		nop
 13114 0028 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 303


 13115              		.cfi_def_cfa_offset 8
 13116 002a BD46     		mov	sp, r7
 13117              		.cfi_def_cfa_register 13
 13118              		@ sp needed
 13119 002c 80BD     		pop	{r7, pc}
 13120              		.cfi_endproc
 13121              	.LFE81:
 13122              		.size	sendAcknowledgment, .-sendAcknowledgment
 13123 002e 00BF     		.section	.text.memStore,"ax",%progbits
 13124              		.align	2
 13125              		.global	memStore
 13126              		.thumb
 13127              		.thumb_func
 13128              		.type	memStore, %function
 13129              	memStore:
 13130              	.LFB82:
2303:..\src/command_processing.c **** 
2304:..\src/command_processing.c **** //==============================================================================
2305:..\src/command_processing.c **** //                                                                  STORE MEMORY
2306:..\src/command_processing.c **** //==============================================================================
2307:..\src/command_processing.c **** 
2308:..\src/command_processing.c **** 
2309:..\src/command_processing.c **** uint8 memStore(int displacement)
2310:..\src/command_processing.c **** {
 13131              		.loc 1 2310 0
 13132              		.cfi_startproc
 13133              		@ args = 0, pretend = 0, frame = 24
 13134              		@ frame_needed = 1, uses_anonymous_args = 0
 13135 0000 80B5     		push	{r7, lr}
 13136              		.cfi_def_cfa_offset 8
 13137              		.cfi_offset 7, -8
 13138              		.cfi_offset 14, -4
 13139 0002 86B0     		sub	sp, sp, #24
 13140              		.cfi_def_cfa_offset 32
 13141 0004 00AF     		add	r7, sp, #0
 13142              		.cfi_def_cfa_register 7
 13143 0006 7860     		str	r0, [r7, #4]
2311:..\src/command_processing.c ****     int i;  // iterator
2312:..\src/command_processing.c ****     uint8 writeStatus;
2313:..\src/command_processing.c ****     int pages;
2314:..\src/command_processing.c ****     uint8 ret_val = 1;
 13144              		.loc 1 2314 0
 13145 0008 0123     		movs	r3, #1
 13146 000a FB74     		strb	r3, [r7, #19]
2315:..\src/command_processing.c **** 
2316:..\src/command_processing.c ****     // Disable Interrupt
2317:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 13147              		.loc 1 2317 0
 13148 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
2318:..\src/command_processing.c **** 
2319:..\src/command_processing.c ****     // Stop motor
2320:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare1(0);
 13149              		.loc 1 2320 0
 13150 0010 0020     		movs	r0, #0
 13151 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare1
2321:..\src/command_processing.c **** 
2322:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 304


2323:..\src/command_processing.c ****     CySetTemp();
 13152              		.loc 1 2323 0
 13153 0016 FFF7FEFF 		bl	CySetTemp
2324:..\src/command_processing.c **** 
2325:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 13154              		.loc 1 2325 0
 13155 001a 1D4A     		ldr	r2, .L621
 13156 001c 1D4B     		ldr	r3, .L621+4
 13157 001e 1046     		mov	r0, r2
 13158 0020 1946     		mov	r1, r3
 13159 0022 4FF4C273 		mov	r3, #388
 13160 0026 1A46     		mov	r2, r3
 13161 0028 FFF7FEFF 		bl	memcpy
2326:..\src/command_processing.c **** 
2327:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 13162              		.loc 1 2327 0
 13163 002c 1923     		movs	r3, #25
 13164 002e FB60     		str	r3, [r7, #12]
2328:..\src/command_processing.c **** 
2329:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 13165              		.loc 1 2329 0
 13166 0030 0023     		movs	r3, #0
 13167 0032 7B61     		str	r3, [r7, #20]
 13168 0034 18E0     		b	.L616
 13169              	.L619:
2330:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.emg_counter[0] + 16 * i, i + displacement);
 13170              		.loc 1 2330 0
 13171 0036 7B69     		ldr	r3, [r7, #20]
 13172 0038 1B01     		lsls	r3, r3, #4
 13173 003a 1A46     		mov	r2, r3
 13174 003c 154B     		ldr	r3, .L621+4
 13175 003e D018     		adds	r0, r2, r3
 13176 0040 7B69     		ldr	r3, [r7, #20]
 13177 0042 DAB2     		uxtb	r2, r3
 13178 0044 7B68     		ldr	r3, [r7, #4]
 13179 0046 DBB2     		uxtb	r3, r3
 13180 0048 1344     		add	r3, r3, r2
 13181 004a DBB2     		uxtb	r3, r3
 13182 004c 1946     		mov	r1, r3
 13183 004e FFF7FEFF 		bl	EEPROM_Write
 13184 0052 0346     		mov	r3, r0
 13185 0054 FB72     		strb	r3, [r7, #11]
2331:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 13186              		.loc 1 2331 0
 13187 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 13188 0058 002B     		cmp	r3, #0
 13189 005a 02D0     		beq	.L617
2332:..\src/command_processing.c ****             ret_val = 0;
 13190              		.loc 1 2332 0
 13191 005c 0023     		movs	r3, #0
 13192 005e FB74     		strb	r3, [r7, #19]
2333:..\src/command_processing.c ****             break;
 13193              		.loc 1 2333 0
 13194 0060 06E0     		b	.L618
 13195              	.L617:
2329:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.emg_counter[0] + 16 * i, i + displacement);
 13196              		.loc 1 2329 0 discriminator 2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 305


 13197 0062 7B69     		ldr	r3, [r7, #20]
 13198 0064 0133     		adds	r3, r3, #1
 13199 0066 7B61     		str	r3, [r7, #20]
 13200              	.L616:
2329:..\src/command_processing.c ****         writeStatus = EEPROM_Write((uint8*)&g_mem.emg_counter[0] + 16 * i, i + displacement);
 13201              		.loc 1 2329 0 is_stmt 0 discriminator 1
 13202 0068 7A69     		ldr	r2, [r7, #20]
 13203 006a FB68     		ldr	r3, [r7, #12]
 13204 006c 9A42     		cmp	r2, r3
 13205 006e E2DB     		blt	.L619
 13206              	.L618:
2334:..\src/command_processing.c ****         }
2335:..\src/command_processing.c ****     }
2336:..\src/command_processing.c **** 
2337:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 13207              		.loc 1 2337 0 is_stmt 1
 13208 0070 084A     		ldr	r2, .L621+4
 13209 0072 074B     		ldr	r3, .L621
 13210 0074 1046     		mov	r0, r2
 13211 0076 1946     		mov	r1, r3
 13212 0078 4FF4C273 		mov	r3, #388
 13213 007c 1A46     		mov	r2, r3
 13214 007e FFF7FEFF 		bl	memcpy
2338:..\src/command_processing.c **** 
2339:..\src/command_processing.c ****     // Re-Enable Interrupt
2340:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 13215              		.loc 1 2340 0
 13216 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
2341:..\src/command_processing.c **** 
2342:..\src/command_processing.c ****     return ret_val;
 13217              		.loc 1 2342 0
 13218 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
2343:..\src/command_processing.c **** }
 13219              		.loc 1 2343 0
 13220 0088 1846     		mov	r0, r3
 13221 008a 1837     		adds	r7, r7, #24
 13222              		.cfi_def_cfa_offset 8
 13223 008c BD46     		mov	sp, r7
 13224              		.cfi_def_cfa_register 13
 13225              		@ sp needed
 13226 008e 80BD     		pop	{r7, pc}
 13227              	.L622:
 13228              		.align	2
 13229              	.L621:
 13230 0090 00000000 		.word	c_mem
 13231 0094 00000000 		.word	g_mem
 13232              		.cfi_endproc
 13233              	.LFE82:
 13234              		.size	memStore, .-memStore
 13235              		.section	.text.memRecall,"ax",%progbits
 13236              		.align	2
 13237              		.global	memRecall
 13238              		.thumb
 13239              		.thumb_func
 13240              		.type	memRecall, %function
 13241              	memRecall:
 13242              	.LFB83:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 306


2344:..\src/command_processing.c **** 
2345:..\src/command_processing.c **** 
2346:..\src/command_processing.c **** //==============================================================================
2347:..\src/command_processing.c **** //                                                                 RECALL MEMORY
2348:..\src/command_processing.c **** //==============================================================================
2349:..\src/command_processing.c **** 
2350:..\src/command_processing.c **** 
2351:..\src/command_processing.c **** void memRecall(void)
2352:..\src/command_processing.c **** {
 13243              		.loc 1 2352 0
 13244              		.cfi_startproc
 13245              		@ args = 0, pretend = 0, frame = 8
 13246              		@ frame_needed = 1, uses_anonymous_args = 0
 13247 0000 80B5     		push	{r7, lr}
 13248              		.cfi_def_cfa_offset 8
 13249              		.cfi_offset 7, -8
 13250              		.cfi_offset 14, -4
 13251 0002 82B0     		sub	sp, sp, #8
 13252              		.cfi_def_cfa_offset 16
 13253 0004 00AF     		add	r7, sp, #0
 13254              		.cfi_def_cfa_register 7
2353:..\src/command_processing.c ****     uint16 i;
2354:..\src/command_processing.c **** 
2355:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 13255              		.loc 1 2355 0
 13256 0006 0023     		movs	r3, #0
 13257 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 13258 000a 0CE0     		b	.L624
 13259              	.L625:
2356:..\src/command_processing.c ****         ((reg8 *) &g_mem.emg_counter[0])[i] = EEPROM_ADDR[i];
 13260              		.loc 1 2356 0 discriminator 3
 13261 000c FB88     		ldrh	r3, [r7, #6]
 13262 000e 124A     		ldr	r2, .L629
 13263 0010 1344     		add	r3, r3, r2
 13264 0012 124A     		ldr	r2, .L629+4
 13265 0014 1168     		ldr	r1, [r2]
 13266 0016 FA88     		ldrh	r2, [r7, #6]
 13267 0018 0A44     		add	r2, r2, r1
 13268 001a 1278     		ldrb	r2, [r2]
 13269 001c D2B2     		uxtb	r2, r2
 13270 001e 1A70     		strb	r2, [r3]
2355:..\src/command_processing.c ****         ((reg8 *) &g_mem.emg_counter[0])[i] = EEPROM_ADDR[i];
 13271              		.loc 1 2355 0 discriminator 3
 13272 0020 FB88     		ldrh	r3, [r7, #6]
 13273 0022 0133     		adds	r3, r3, #1
 13274 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 13275              	.L624:
2355:..\src/command_processing.c ****         ((reg8 *) &g_mem.emg_counter[0])[i] = EEPROM_ADDR[i];
 13276              		.loc 1 2355 0 is_stmt 0 discriminator 1
 13277 0026 FB88     		ldrh	r3, [r7, #6]
 13278 0028 B3F5C27F 		cmp	r3, #388
 13279 002c EED3     		bcc	.L625
2357:..\src/command_processing.c ****     }
2358:..\src/command_processing.c **** 
2359:..\src/command_processing.c ****     //check for initialization
2360:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 13280              		.loc 1 2360 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 307


 13281 002e 0A4B     		ldr	r3, .L629
 13282 0030 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13283 0034 002B     		cmp	r3, #0
 13284 0036 02D1     		bne	.L626
2361:..\src/command_processing.c ****         memRestore();
 13285              		.loc 1 2361 0
 13286 0038 FFF7FEFF 		bl	memRestore
2362:..\src/command_processing.c ****     } else {
2363:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
2364:..\src/command_processing.c ****     }
2365:..\src/command_processing.c **** }
 13287              		.loc 1 2365 0
 13288 003c 08E0     		b	.L628
 13289              	.L626:
2363:..\src/command_processing.c ****     }
 13290              		.loc 1 2363 0
 13291 003e 084A     		ldr	r2, .L629+8
 13292 0040 054B     		ldr	r3, .L629
 13293 0042 1046     		mov	r0, r2
 13294 0044 1946     		mov	r1, r3
 13295 0046 4FF4C273 		mov	r3, #388
 13296 004a 1A46     		mov	r2, r3
 13297 004c FFF7FEFF 		bl	memcpy
 13298              	.L628:
 13299              		.loc 1 2365 0
 13300 0050 00BF     		nop
 13301 0052 0837     		adds	r7, r7, #8
 13302              		.cfi_def_cfa_offset 8
 13303 0054 BD46     		mov	sp, r7
 13304              		.cfi_def_cfa_register 13
 13305              		@ sp needed
 13306 0056 80BD     		pop	{r7, pc}
 13307              	.L630:
 13308              		.align	2
 13309              	.L629:
 13310 0058 00000000 		.word	g_mem
 13311 005c 00000000 		.word	EEPROM_ADDR
 13312 0060 00000000 		.word	c_mem
 13313              		.cfi_endproc
 13314              	.LFE83:
 13315              		.size	memRecall, .-memRecall
 13316              		.section	.text.memRestore,"ax",%progbits
 13317              		.align	2
 13318              		.global	memRestore
 13319              		.thumb
 13320              		.thumb_func
 13321              		.type	memRestore, %function
 13322              	memRestore:
 13323              	.LFB84:
2366:..\src/command_processing.c **** 
2367:..\src/command_processing.c **** 
2368:..\src/command_processing.c **** //==============================================================================
2369:..\src/command_processing.c **** //                                                                RESTORE MEMORY
2370:..\src/command_processing.c **** //==============================================================================
2371:..\src/command_processing.c **** 
2372:..\src/command_processing.c **** 
2373:..\src/command_processing.c **** uint8 memRestore(void) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 308


 13324              		.loc 1 2373 0
 13325              		.cfi_startproc
 13326              		@ args = 0, pretend = 0, frame = 8
 13327              		@ frame_needed = 1, uses_anonymous_args = 0
 13328 0000 80B5     		push	{r7, lr}
 13329              		.cfi_def_cfa_offset 8
 13330              		.cfi_offset 7, -8
 13331              		.cfi_offset 14, -4
 13332 0002 82B0     		sub	sp, sp, #8
 13333              		.cfi_def_cfa_offset 16
 13334 0004 00AF     		add	r7, sp, #0
 13335              		.cfi_def_cfa_register 7
2374:..\src/command_processing.c ****     uint16 i;
2375:..\src/command_processing.c **** 
2376:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 13336              		.loc 1 2376 0
 13337 0006 0023     		movs	r3, #0
 13338 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 13339 000a 0EE0     		b	.L632
 13340              	.L633:
2377:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.emg_counter[0])[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT 
 13341              		.loc 1 2377 0 discriminator 3
 13342 000c FB88     		ldrh	r3, [r7, #6]
 13343 000e 114A     		ldr	r2, .L636
 13344 0010 1344     		add	r3, r3, r2
 13345 0012 114A     		ldr	r2, .L636+4
 13346 0014 1168     		ldr	r1, [r2]
 13347 0016 FA88     		ldrh	r2, [r7, #6]
 13348 0018 02F54872 		add	r2, r2, #800
 13349 001c 0A44     		add	r2, r2, r1
 13350 001e 1278     		ldrb	r2, [r2]
 13351 0020 D2B2     		uxtb	r2, r2
 13352 0022 1A70     		strb	r2, [r3]
2376:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.emg_counter[0])[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT 
 13353              		.loc 1 2376 0 discriminator 3
 13354 0024 FB88     		ldrh	r3, [r7, #6]
 13355 0026 0133     		adds	r3, r3, #1
 13356 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 13357              	.L632:
2376:..\src/command_processing.c ****         ((reg8 *) (uint8*)&g_mem.emg_counter[0])[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT 
 13358              		.loc 1 2376 0 is_stmt 0 discriminator 1
 13359 002a FB88     		ldrh	r3, [r7, #6]
 13360 002c B3F5C27F 		cmp	r3, #388
 13361 0030 ECD3     		bcc	.L633
2378:..\src/command_processing.c ****     }
2379:..\src/command_processing.c **** 
2380:..\src/command_processing.c ****     //check for initialization
2381:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 13362              		.loc 1 2381 0 is_stmt 1
 13363 0032 084B     		ldr	r3, .L636
 13364 0034 93F8A030 		ldrb	r3, [r3, #160]	@ zero_extendqisi2
 13365 0038 002B     		cmp	r3, #0
 13366 003a 03D1     		bne	.L634
2382:..\src/command_processing.c ****         return memInit();
 13367              		.loc 1 2382 0
 13368 003c FFF7FEFF 		bl	memInit
 13369 0040 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 309


 13370 0042 03E0     		b	.L635
 13371              	.L634:
2383:..\src/command_processing.c ****     } else {
2384:..\src/command_processing.c ****         return memStore(0);
 13372              		.loc 1 2384 0
 13373 0044 0020     		movs	r0, #0
 13374 0046 FFF7FEFF 		bl	memStore
 13375 004a 0346     		mov	r3, r0
 13376              	.L635:
2385:..\src/command_processing.c ****     }  
2386:..\src/command_processing.c **** }
 13377              		.loc 1 2386 0
 13378 004c 1846     		mov	r0, r3
 13379 004e 0837     		adds	r7, r7, #8
 13380              		.cfi_def_cfa_offset 8
 13381 0050 BD46     		mov	sp, r7
 13382              		.cfi_def_cfa_register 13
 13383              		@ sp needed
 13384 0052 80BD     		pop	{r7, pc}
 13385              	.L637:
 13386              		.align	2
 13387              	.L636:
 13388 0054 00000000 		.word	g_mem
 13389 0058 00000000 		.word	EEPROM_ADDR
 13390              		.cfi_endproc
 13391              	.LFE84:
 13392              		.size	memRestore, .-memRestore
 13393              		.section	.text.memInit,"ax",%progbits
 13394              		.align	2
 13395              		.global	memInit
 13396              		.thumb
 13397              		.thumb_func
 13398              		.type	memInit, %function
 13399              	memInit:
 13400              	.LFB85:
2387:..\src/command_processing.c **** 
2388:..\src/command_processing.c **** //==============================================================================
2389:..\src/command_processing.c **** //                                                                   MEMORY INIT
2390:..\src/command_processing.c **** //==============================================================================
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c **** uint8 memInit(void)
2393:..\src/command_processing.c **** {
 13401              		.loc 1 2393 0
 13402              		.cfi_startproc
 13403              		@ args = 0, pretend = 0, frame = 8
 13404              		@ frame_needed = 1, uses_anonymous_args = 0
 13405 0000 80B5     		push	{r7, lr}
 13406              		.cfi_def_cfa_offset 8
 13407              		.cfi_offset 7, -8
 13408              		.cfi_offset 14, -4
 13409 0002 82B0     		sub	sp, sp, #8
 13410              		.cfi_def_cfa_offset 16
 13411 0004 00AF     		add	r7, sp, #0
 13412              		.cfi_def_cfa_register 7
2394:..\src/command_processing.c ****     uint8 i, j;
2395:..\src/command_processing.c **** 
2396:..\src/command_processing.c ****     //initialize memory settings
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 310


2397:..\src/command_processing.c ****     g_mem.id            = 1;
 13413              		.loc 1 2397 0
 13414 0006 BC4B     		ldr	r3, .L661
 13415 0008 0122     		movs	r2, #1
 13416 000a 83F8A120 		strb	r2, [r3, #161]
2398:..\src/command_processing.c **** 
2399:..\src/command_processing.c ****     g_mem.k_p           =0.0165 * 65536;
 13417              		.loc 1 2399 0
 13418 000e BA4B     		ldr	r3, .L661
 13419 0010 40F23942 		movw	r2, #1081
 13420 0014 C3F8A420 		str	r2, [r3, #164]
2400:..\src/command_processing.c ****     g_mem.k_i           =     0 * 65536;
 13421              		.loc 1 2400 0
 13422 0018 B74B     		ldr	r3, .L661
 13423 001a 0022     		movs	r2, #0
 13424 001c C3F8A820 		str	r2, [r3, #168]
2401:..\src/command_processing.c ****     g_mem.k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatter, previous v
 13425              		.loc 1 2401 0
 13426 0020 B54B     		ldr	r3, .L661
 13427 0022 4FF4E572 		mov	r2, #458
 13428 0026 C3F8AC20 		str	r2, [r3, #172]
2402:..\src/command_processing.c ****     g_mem.k_p_c         =     1 * 65536;
 13429              		.loc 1 2402 0
 13430 002a B34B     		ldr	r3, .L661
 13431 002c 4FF48032 		mov	r2, #65536
 13432 0030 C3F8B020 		str	r2, [r3, #176]
2403:..\src/command_processing.c ****     g_mem.k_i_c         = 0.001 * 65536;
 13433              		.loc 1 2403 0
 13434 0034 B04B     		ldr	r3, .L661
 13435 0036 4122     		movs	r2, #65
 13436 0038 C3F8B420 		str	r2, [r3, #180]
2404:..\src/command_processing.c ****     g_mem.k_d_c         =     0 * 65536;
 13437              		.loc 1 2404 0
 13438 003c AE4B     		ldr	r3, .L661
 13439 003e 0022     		movs	r2, #0
 13440 0040 C3F8B820 		str	r2, [r3, #184]
2405:..\src/command_processing.c **** 
2406:..\src/command_processing.c ****     g_mem.k_p_dl        =   0.1 * 65536;
 13441              		.loc 1 2406 0
 13442 0044 AC4B     		ldr	r3, .L661
 13443 0046 41F69912 		movw	r2, #6553
 13444 004a C3F8BC20 		str	r2, [r3, #188]
2407:..\src/command_processing.c ****     g_mem.k_i_dl        =     0 * 65536;
 13445              		.loc 1 2407 0
 13446 004e AA4B     		ldr	r3, .L661
 13447 0050 0022     		movs	r2, #0
 13448 0052 C3F8C020 		str	r2, [r3, #192]
2408:..\src/command_processing.c ****     g_mem.k_d_dl        =     0 * 65536;
 13449              		.loc 1 2408 0
 13450 0056 A84B     		ldr	r3, .L661
 13451 0058 0022     		movs	r2, #0
 13452 005a C3F8C420 		str	r2, [r3, #196]
2409:..\src/command_processing.c ****     g_mem.k_p_c_dl      =   0.3 * 65536;
 13453              		.loc 1 2409 0
 13454 005e A64B     		ldr	r3, .L661
 13455 0060 44F6CC42 		movw	r2, #19660
 13456 0064 C3F8C820 		str	r2, [r3, #200]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 311


2410:..\src/command_processing.c ****     g_mem.k_i_c_dl      =0.0002 * 65536;
 13457              		.loc 1 2410 0
 13458 0068 A34B     		ldr	r3, .L661
 13459 006a 0D22     		movs	r2, #13
 13460 006c C3F8CC20 		str	r2, [r3, #204]
2411:..\src/command_processing.c ****     g_mem.k_d_c_dl      =     0 * 65536;
 13461              		.loc 1 2411 0
 13462 0070 A14B     		ldr	r3, .L661
 13463 0072 0022     		movs	r2, #0
 13464 0074 C3F8D020 		str	r2, [r3, #208]
2412:..\src/command_processing.c **** 
2413:..\src/command_processing.c ****     g_mem.activ         = 1;
 13465              		.loc 1 2413 0
 13466 0078 9F4B     		ldr	r3, .L661
 13467 007a 0122     		movs	r2, #1
 13468 007c 83F8D420 		strb	r2, [r3, #212]
2414:..\src/command_processing.c ****     g_mem.input_mode    = INPUT_MODE_EXTERNAL;
 13469              		.loc 1 2414 0
 13470 0080 9D4B     		ldr	r3, .L661
 13471 0082 0022     		movs	r2, #0
 13472 0084 83F8D520 		strb	r2, [r3, #213]
2415:..\src/command_processing.c ****     g_mem.control_mode  = CONTROL_ANGLE;
 13473              		.loc 1 2415 0
 13474 0088 9B4B     		ldr	r3, .L661
 13475 008a 0022     		movs	r2, #0
 13476 008c 83F8D620 		strb	r2, [r3, #214]
2416:..\src/command_processing.c **** 
2417:..\src/command_processing.c ****     g_mem.pos_lim_flag = 1;
 13477              		.loc 1 2417 0
 13478 0090 994B     		ldr	r3, .L661
 13479 0092 0122     		movs	r2, #1
 13480 0094 83F8F420 		strb	r2, [r3, #244]
2418:..\src/command_processing.c **** 
2419:..\src/command_processing.c ****     g_mem.activate_pwm_rescaling = MAXON_24V;           //rescaling active for 12V motor
 13481              		.loc 1 2419 0
 13482 0098 974B     		ldr	r3, .L661
 13483 009a 0022     		movs	r2, #0
 13484 009c 83F81B21 		strb	r2, [r3, #283]
2420:..\src/command_processing.c **** 
2421:..\src/command_processing.c ****     g_mem.pos_lim_inf = 0;
 13485              		.loc 1 2421 0
 13486 00a0 954B     		ldr	r3, .L661
 13487 00a2 0022     		movs	r2, #0
 13488 00a4 C3F8F820 		str	r2, [r3, #248]
2422:..\src/command_processing.c ****     g_mem.pos_lim_sup = (int32)19000 << g_mem.res[0];
 13489              		.loc 1 2422 0
 13490 00a8 934B     		ldr	r3, .L661
 13491 00aa 93F8D730 		ldrb	r3, [r3, #215]	@ zero_extendqisi2
 13492 00ae 1A46     		mov	r2, r3
 13493 00b0 44F63823 		movw	r3, #19000
 13494 00b4 9340     		lsls	r3, r3, r2
 13495 00b6 904A     		ldr	r2, .L661
 13496 00b8 C2F8FC30 		str	r3, [r2, #252]
2423:..\src/command_processing.c **** 
2424:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i)
 13497              		.loc 1 2424 0
 13498 00bc 0023     		movs	r3, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 312


 13499 00be FB71     		strb	r3, [r7, #7]
 13500 00c0 16E0     		b	.L639
 13501              	.L640:
2425:..\src/command_processing.c ****     {
2426:..\src/command_processing.c ****         g_mem.res[i] = 3;
 13502              		.loc 1 2426 0 discriminator 3
 13503 00c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13504 00c4 8C4A     		ldr	r2, .L661
 13505 00c6 1344     		add	r3, r3, r2
 13506 00c8 0322     		movs	r2, #3
 13507 00ca 83F8D720 		strb	r2, [r3, #215]
2427:..\src/command_processing.c ****         g_mem.m_mult[i] = 1;
 13508              		.loc 1 2427 0 discriminator 3
 13509 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13510 00d0 894A     		ldr	r2, .L661
 13511 00d2 3A33     		adds	r3, r3, #58
 13512 00d4 4FF07E51 		mov	r1, #1065353216
 13513 00d8 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
2428:..\src/command_processing.c ****         g_mem.m_off[i] = (int32)0 << g_mem.res[i];
 13514              		.loc 1 2428 0 discriminator 3
 13515 00dc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13516 00de 864A     		ldr	r2, .L661
 13517 00e0 3633     		adds	r3, r3, #54
 13518 00e2 9B00     		lsls	r3, r3, #2
 13519 00e4 1344     		add	r3, r3, r2
 13520 00e6 0022     		movs	r2, #0
 13521 00e8 5A60     		str	r2, [r3, #4]
2424:..\src/command_processing.c ****     {
 13522              		.loc 1 2424 0 discriminator 3
 13523 00ea FB79     		ldrb	r3, [r7, #7]
 13524 00ec 0133     		adds	r3, r3, #1
 13525 00ee FB71     		strb	r3, [r7, #7]
 13526              	.L639:
2424:..\src/command_processing.c ****     {
 13527              		.loc 1 2424 0 is_stmt 0 discriminator 1
 13528 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13529 00f2 022B     		cmp	r3, #2
 13530 00f4 E5D9     		bls	.L640
2429:..\src/command_processing.c ****     }
2430:..\src/command_processing.c **** 
2431:..\src/command_processing.c ****     g_mem.max_step_pos = 0;
 13531              		.loc 1 2431 0 is_stmt 1
 13532 00f6 804B     		ldr	r3, .L661
 13533 00f8 0022     		movs	r2, #0
 13534 00fa C3F80421 		str	r2, [r3, #260]
2432:..\src/command_processing.c ****     g_mem.max_step_neg = 0;
 13535              		.loc 1 2432 0
 13536 00fe 7E4B     		ldr	r3, .L661
 13537 0100 0022     		movs	r2, #0
 13538 0102 C3F80021 		str	r2, [r3, #256]
2433:..\src/command_processing.c **** 
2434:..\src/command_processing.c ****     g_mem.current_limit = DEFAULT_CURRENT_LIMIT;
 13539              		.loc 1 2434 0
 13540 0106 7C4B     		ldr	r3, .L661
 13541 0108 40F2DC52 		movw	r2, #1500
 13542 010c A3F80821 		strh	r2, [r3, #264]	@ movhi
2435:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 313


2436:..\src/command_processing.c ****     // EMG calibration disabled by default
2437:..\src/command_processing.c ****     g_mem.emg_calibration_flag = 0;
 13543              		.loc 1 2437 0
 13544 0110 794B     		ldr	r3, .L661
 13545 0112 0022     		movs	r2, #0
 13546 0114 83F80E21 		strb	r2, [r3, #270]
2438:..\src/command_processing.c **** 
2439:..\src/command_processing.c ****     g_mem.emg_max_value[0] = 1024;
 13547              		.loc 1 2439 0
 13548 0118 774B     		ldr	r3, .L661
 13549 011a 4FF48062 		mov	r2, #1024
 13550 011e C3F81021 		str	r2, [r3, #272]
2440:..\src/command_processing.c ****     g_mem.emg_max_value[1] = 1024;
 13551              		.loc 1 2440 0
 13552 0122 754B     		ldr	r3, .L661
 13553 0124 4FF48062 		mov	r2, #1024
 13554 0128 C3F81421 		str	r2, [r3, #276]
2441:..\src/command_processing.c **** 
2442:..\src/command_processing.c ****     g_mem.emg_threshold[0] = 200;
 13555              		.loc 1 2442 0
 13556 012c 724B     		ldr	r3, .L661
 13557 012e C822     		movs	r2, #200
 13558 0130 A3F80A21 		strh	r2, [r3, #266]	@ movhi
2443:..\src/command_processing.c ****     g_mem.emg_threshold[1] = 200;
 13559              		.loc 1 2443 0
 13560 0134 704B     		ldr	r3, .L661
 13561 0136 C822     		movs	r2, #200
 13562 0138 A3F80C21 		strh	r2, [r3, #268]	@ movhi
2444:..\src/command_processing.c **** 
2445:..\src/command_processing.c ****     g_mem.emg_speed = 100;
 13563              		.loc 1 2445 0
 13564 013c 6E4B     		ldr	r3, .L661
 13565 013e 6422     		movs	r2, #100
 13566 0140 83F81821 		strb	r2, [r3, #280]
2446:..\src/command_processing.c **** 
2447:..\src/command_processing.c ****     g_mem.double_encoder_on_off = FALSE;
 13567              		.loc 1 2447 0
 13568 0144 6C4B     		ldr	r3, .L661
 13569 0146 0022     		movs	r2, #0
 13570 0148 83F81921 		strb	r2, [r3, #281]
2448:..\src/command_processing.c ****     g_mem.motor_handle_ratio = 22;
 13571              		.loc 1 2448 0
 13572 014c 6A4B     		ldr	r3, .L661
 13573 014e 1622     		movs	r2, #22
 13574 0150 83F81A21 		strb	r2, [r3, #282]
2449:..\src/command_processing.c ****     
2450:..\src/command_processing.c ****     for(i = 0; i < LOOKUP_DIM; i++) {
 13575              		.loc 1 2450 0
 13576 0154 0023     		movs	r3, #0
 13577 0156 FB71     		strb	r3, [r7, #7]
 13578 0158 0AE0     		b	.L641
 13579              	.L642:
2451:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 13580              		.loc 1 2451 0 discriminator 3
 13581 015a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13582 015c 664A     		ldr	r2, .L661
 13583 015e 4633     		adds	r3, r3, #70
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 314


 13584 0160 9B00     		lsls	r3, r3, #2
 13585 0162 1344     		add	r3, r3, r2
 13586 0164 4FF00002 		mov	r2, #0
 13587 0168 5A60     		str	r2, [r3, #4]	@ float
2450:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 13588              		.loc 1 2450 0 discriminator 3
 13589 016a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13590 016c 0133     		adds	r3, r3, #1
 13591 016e FB71     		strb	r3, [r7, #7]
 13592              	.L641:
2450:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 13593              		.loc 1 2450 0 is_stmt 0 discriminator 1
 13594 0170 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13595 0172 052B     		cmp	r3, #5
 13596 0174 F1D9     		bls	.L642
2452:..\src/command_processing.c ****     }
2453:..\src/command_processing.c **** 
2454:..\src/command_processing.c ****     //Initialize rest position parameters 
2455:..\src/command_processing.c ****     g_mem.rest_position_flag = FALSE;
 13597              		.loc 1 2455 0 is_stmt 1
 13598 0176 604B     		ldr	r3, .L661
 13599 0178 0022     		movs	r2, #0
 13600 017a 83F84421 		strb	r2, [r3, #324]
2456:..\src/command_processing.c ****     g_mem.rest_pos = (int32)7000 << g_mem.res[0]; // 56000
 13601              		.loc 1 2456 0
 13602 017e 5E4B     		ldr	r3, .L661
 13603 0180 93F8D730 		ldrb	r3, [r3, #215]	@ zero_extendqisi2
 13604 0184 1A46     		mov	r2, r3
 13605 0186 41F65833 		movw	r3, #7000
 13606 018a 9340     		lsls	r3, r3, r2
 13607 018c 5A4A     		ldr	r2, .L661
 13608 018e C2F83831 		str	r3, [r2, #312]
2457:..\src/command_processing.c **** 	g_mem.rest_delay = 10;
 13609              		.loc 1 2457 0
 13610 0192 594B     		ldr	r3, .L661
 13611 0194 0A22     		movs	r2, #10
 13612 0196 C3F83C21 		str	r2, [r3, #316]
2458:..\src/command_processing.c ****     g_mem.rest_vel = 10000;
 13613              		.loc 1 2458 0
 13614 019a 574B     		ldr	r3, .L661
 13615 019c 42F21072 		movw	r2, #10000
 13616 01a0 C3F84021 		str	r2, [r3, #320]
2459:..\src/command_processing.c ****     g_mem.switch_emg = 0;
 13617              		.loc 1 2459 0
 13618 01a4 544B     		ldr	r3, .L661
 13619 01a6 0022     		movs	r2, #0
 13620 01a8 83F84521 		strb	r2, [r3, #325]
2460:..\src/command_processing.c **** 	
2461:..\src/command_processing.c ****     g_mem.right_left = RIGHT_HAND;
 13621              		.loc 1 2461 0
 13622 01ac 524B     		ldr	r3, .L661
 13623 01ae 0022     		movs	r2, #0
 13624 01b0 83F84621 		strb	r2, [r3, #326]
2462:..\src/command_processing.c ****     g_mem.read_exp_port_flag = EXP_NONE;       // 0 - None
 13625              		.loc 1 2462 0
 13626 01b4 504B     		ldr	r3, .L661
 13627 01b6 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 315


 13628 01b8 83F84821 		strb	r2, [r3, #328]
2463:..\src/command_processing.c ****     
2464:..\src/command_processing.c ****     for (i=0; i<7; i++){
 13629              		.loc 1 2464 0
 13630 01bc 0023     		movs	r3, #0
 13631 01be FB71     		strb	r3, [r7, #7]
 13632 01c0 08E0     		b	.L643
 13633              	.L644:
2465:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 13634              		.loc 1 2465 0 discriminator 3
 13635 01c2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13636 01c4 4C4A     		ldr	r2, .L661
 13637 01c6 1344     		add	r3, r3, r2
 13638 01c8 0022     		movs	r2, #0
 13639 01ca 83F84921 		strb	r2, [r3, #329]
2464:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 13640              		.loc 1 2464 0 discriminator 3
 13641 01ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13642 01d0 0133     		adds	r3, r3, #1
 13643 01d2 FB71     		strb	r3, [r7, #7]
 13644              	.L643:
2464:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 13645              		.loc 1 2464 0 is_stmt 0 discriminator 1
 13646 01d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13647 01d6 062B     		cmp	r3, #6
 13648 01d8 F3D9     		bls	.L644
2466:..\src/command_processing.c ****     }
2467:..\src/command_processing.c **** 
2468:..\src/command_processing.c ****     //Initialize counters        
2469:..\src/command_processing.c ****     reset_counters();
 13649              		.loc 1 2469 0 is_stmt 1
 13650 01da FFF7FEFF 		bl	reset_counters
2470:..\src/command_processing.c ****     for (i=0; i<74; i++){
 13651              		.loc 1 2470 0
 13652 01de 0023     		movs	r3, #0
 13653 01e0 FB71     		strb	r3, [r7, #7]
 13654 01e2 08E0     		b	.L645
 13655              	.L646:
2471:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 13656              		.loc 1 2471 0 discriminator 3
 13657 01e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13658 01e6 444A     		ldr	r2, .L661
 13659 01e8 1344     		add	r3, r3, r2
 13660 01ea 0022     		movs	r2, #0
 13661 01ec 83F85620 		strb	r2, [r3, #86]
2470:..\src/command_processing.c ****     for (i=0; i<74; i++){
 13662              		.loc 1 2470 0 discriminator 3
 13663 01f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13664 01f2 0133     		adds	r3, r3, #1
 13665 01f4 FB71     		strb	r3, [r7, #7]
 13666              	.L645:
2470:..\src/command_processing.c ****     for (i=0; i<74; i++){
 13667              		.loc 1 2470 0 is_stmt 0 discriminator 1
 13668 01f6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13669 01f8 492B     		cmp	r3, #73
 13670 01fa F3D9     		bls	.L646
2472:..\src/command_processing.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 316


2473:..\src/command_processing.c ****     
2474:..\src/command_processing.c ****     if (g_mem.read_exp_port_flag == EXP_SD_RTC) {
 13671              		.loc 1 2474 0 is_stmt 1
 13672 01fc 3E4B     		ldr	r3, .L661
 13673 01fe 93F84831 		ldrb	r3, [r3, #328]	@ zero_extendqisi2
 13674 0202 012B     		cmp	r3, #1
 13675 0204 13D1     		bne	.L647
2475:..\src/command_processing.c ****         // Set date of maintenance from RTC
2476:..\src/command_processing.c ****         store_RTC_current_time();
 13676              		.loc 1 2476 0
 13677 0206 FFF7FEFF 		bl	store_RTC_current_time
2477:..\src/command_processing.c ****         
2478:..\src/command_processing.c ****         g_mem.maint_day = g_mem.curr_time[0];
 13678              		.loc 1 2478 0
 13679 020a 3B4B     		ldr	r3, .L661
 13680 020c 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 13681 0210 394B     		ldr	r3, .L661
 13682 0212 83F83521 		strb	r2, [r3, #309]
2479:..\src/command_processing.c ****         g_mem.maint_month = g_mem.curr_time[1];
 13683              		.loc 1 2479 0
 13684 0216 384B     		ldr	r3, .L661
 13685 0218 93F85120 		ldrb	r2, [r3, #81]	@ zero_extendqisi2
 13686 021c 364B     		ldr	r3, .L661
 13687 021e 83F83621 		strb	r2, [r3, #310]
2480:..\src/command_processing.c ****         g_mem.maint_year = g_mem.curr_time[2];
 13688              		.loc 1 2480 0
 13689 0222 354B     		ldr	r3, .L661
 13690 0224 93F85220 		ldrb	r2, [r3, #82]	@ zero_extendqisi2
 13691 0228 334B     		ldr	r3, .L661
 13692 022a 83F83721 		strb	r2, [r3, #311]
 13693              	.L647:
2481:..\src/command_processing.c ****     }
2482:..\src/command_processing.c ****     
2483:..\src/command_processing.c ****     // IMU Default value
2484:..\src/command_processing.c ****     g_mem.read_imu_flag = FALSE;
 13694              		.loc 1 2484 0
 13695 022e 324B     		ldr	r3, .L661
 13696 0230 0022     		movs	r2, #0
 13697 0232 83F84721 		strb	r2, [r3, #327]
2485:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 13698              		.loc 1 2485 0
 13699 0236 0023     		movs	r3, #0
 13700 0238 FB71     		strb	r3, [r7, #7]
 13701 023a 34E0     		b	.L648
 13702              	.L649:
2486:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 13703              		.loc 1 2486 0 discriminator 3
 13704 023c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13705 023e 2E49     		ldr	r1, .L661
 13706 0240 1346     		mov	r3, r2
 13707 0242 9B00     		lsls	r3, r3, #2
 13708 0244 1344     		add	r3, r3, r2
 13709 0246 0B44     		add	r3, r3, r1
 13710 0248 03F25113 		addw	r3, r3, #337
 13711 024c 0122     		movs	r2, #1
 13712 024e 1A70     		strb	r2, [r3]
2487:..\src/command_processing.c ****         g_mem.IMU_conf[i][1] = 1;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 317


 13713              		.loc 1 2487 0 discriminator 3
 13714 0250 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13715 0252 2949     		ldr	r1, .L661
 13716 0254 1346     		mov	r3, r2
 13717 0256 9B00     		lsls	r3, r3, #2
 13718 0258 1344     		add	r3, r3, r2
 13719 025a 0B44     		add	r3, r3, r1
 13720 025c 03F5A973 		add	r3, r3, #338
 13721 0260 0122     		movs	r2, #1
 13722 0262 1A70     		strb	r2, [r3]
2488:..\src/command_processing.c ****         g_mem.IMU_conf[i][2] = 0;
 13723              		.loc 1 2488 0 discriminator 3
 13724 0264 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13725 0266 2449     		ldr	r1, .L661
 13726 0268 1346     		mov	r3, r2
 13727 026a 9B00     		lsls	r3, r3, #2
 13728 026c 1344     		add	r3, r3, r2
 13729 026e 0B44     		add	r3, r3, r1
 13730 0270 03F25313 		addw	r3, r3, #339
 13731 0274 0022     		movs	r2, #0
 13732 0276 1A70     		strb	r2, [r3]
2489:..\src/command_processing.c ****         g_mem.IMU_conf[i][3] = 0;
 13733              		.loc 1 2489 0 discriminator 3
 13734 0278 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13735 027a 1F49     		ldr	r1, .L661
 13736 027c 1346     		mov	r3, r2
 13737 027e 9B00     		lsls	r3, r3, #2
 13738 0280 1344     		add	r3, r3, r2
 13739 0282 0B44     		add	r3, r3, r1
 13740 0284 03F5AA73 		add	r3, r3, #340
 13741 0288 0022     		movs	r2, #0
 13742 028a 1A70     		strb	r2, [r3]
2490:..\src/command_processing.c ****         g_mem.IMU_conf[i][4] = 0;
 13743              		.loc 1 2490 0 discriminator 3
 13744 028c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13745 028e 1A49     		ldr	r1, .L661
 13746 0290 1346     		mov	r3, r2
 13747 0292 9B00     		lsls	r3, r3, #2
 13748 0294 1344     		add	r3, r3, r2
 13749 0296 0B44     		add	r3, r3, r1
 13750 0298 03F25513 		addw	r3, r3, #341
 13751 029c 0022     		movs	r2, #0
 13752 029e 1A70     		strb	r2, [r3]
2485:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 13753              		.loc 1 2485 0 discriminator 3
 13754 02a0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13755 02a2 0133     		adds	r3, r3, #1
 13756 02a4 FB71     		strb	r3, [r7, #7]
 13757              	.L648:
2485:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 13758              		.loc 1 2485 0 is_stmt 0 discriminator 1
 13759 02a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13760 02a8 042B     		cmp	r3, #4
 13761 02aa C7D9     		bls	.L649
2491:..\src/command_processing.c ****         //for (j=0; j< NUM_OF_DATA; j++) {
2492:..\src/command_processing.c ****         //    g_mem.IMU_conf[i][j] = 0;
2493:..\src/command_processing.c ****         //}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 318


2494:..\src/command_processing.c ****     }
2495:..\src/command_processing.c ****     g_mem.SPI_read_delay = 0;       // 0 - None
 13762              		.loc 1 2495 0 is_stmt 1
 13763 02ac 124B     		ldr	r3, .L661
 13764 02ae 0022     		movs	r2, #0
 13765 02b0 83F85021 		strb	r2, [r3, #336]
2496:..\src/command_processing.c ****     
2497:..\src/command_processing.c ****     for (i = 0; i<N_ENCODER_LINE_MAX; i++) {
 13766              		.loc 1 2497 0
 13767 02b4 0023     		movs	r3, #0
 13768 02b6 FB71     		strb	r3, [r7, #7]
 13769 02b8 17E0     		b	.L650
 13770              	.L653:
2498:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 13771              		.loc 1 2498 0
 13772 02ba 0023     		movs	r3, #0
 13773 02bc BB71     		strb	r3, [r7, #6]
 13774 02be 0EE0     		b	.L651
 13775              	.L652:
2499:..\src/command_processing.c ****             g_mem.Encoder_conf[i][j] = 0;
 13776              		.loc 1 2499 0 discriminator 3
 13777 02c0 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 13778 02c2 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 13779 02c4 0C48     		ldr	r0, .L661
 13780 02c6 1346     		mov	r3, r2
 13781 02c8 9B00     		lsls	r3, r3, #2
 13782 02ca 1344     		add	r3, r3, r2
 13783 02cc 0344     		add	r3, r3, r0
 13784 02ce 0B44     		add	r3, r3, r1
 13785 02d0 03F5B573 		add	r3, r3, #362
 13786 02d4 0022     		movs	r2, #0
 13787 02d6 1A70     		strb	r2, [r3]
2498:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 13788              		.loc 1 2498 0 discriminator 3
 13789 02d8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13790 02da 0133     		adds	r3, r3, #1
 13791 02dc BB71     		strb	r3, [r7, #6]
 13792              	.L651:
2498:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 13793              		.loc 1 2498 0 is_stmt 0 discriminator 1
 13794 02de BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 13795 02e0 042B     		cmp	r3, #4
 13796 02e2 EDD9     		bls	.L652
2497:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 13797              		.loc 1 2497 0 is_stmt 1 discriminator 2
 13798 02e4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13799 02e6 0133     		adds	r3, r3, #1
 13800 02e8 FB71     		strb	r3, [r7, #7]
 13801              	.L650:
2497:..\src/command_processing.c ****         for (j = 0; j<N_ENCODERS_PER_LINE_MAX; j++) {
 13802              		.loc 1 2497 0 is_stmt 0 discriminator 1
 13803 02ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13804 02ec 012B     		cmp	r3, #1
 13805 02ee E4D9     		bls	.L653
2500:..\src/command_processing.c ****         }
2501:..\src/command_processing.c ****     }
2502:..\src/command_processing.c ****     
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 319


2503:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ADC_CHANNELS_MAX; i++) {
 13806              		.loc 1 2503 0 is_stmt 1
 13807 02f0 0023     		movs	r3, #0
 13808 02f2 FB71     		strb	r3, [r7, #7]
 13809 02f4 0BE0     		b	.L654
 13810              	.L662:
 13811 02f6 00BF     		.align	2
 13812              	.L661:
 13813 02f8 00000000 		.word	g_mem
 13814              	.L655:
2504:..\src/command_processing.c ****         g_mem.ADC_conf[i] = 0;
 13815              		.loc 1 2504 0 discriminator 3
 13816 02fc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13817 02fe 1E4A     		ldr	r2, .L663
 13818 0300 1344     		add	r3, r3, r2
 13819 0302 0022     		movs	r2, #0
 13820 0304 83F87421 		strb	r2, [r3, #372]
2503:..\src/command_processing.c ****         g_mem.ADC_conf[i] = 0;
 13821              		.loc 1 2503 0 discriminator 3
 13822 0308 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13823 030a 0133     		adds	r3, r3, #1
 13824 030c FB71     		strb	r3, [r7, #7]
 13825              	.L654:
2503:..\src/command_processing.c ****         g_mem.ADC_conf[i] = 0;
 13826              		.loc 1 2503 0 is_stmt 0 discriminator 1
 13827 030e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13828 0310 0B2B     		cmp	r3, #11
 13829 0312 F3D9     		bls	.L655
2505:..\src/command_processing.c ****     }
2506:..\src/command_processing.c ****     
2507:..\src/command_processing.c ****     g_mem.read_emg_sensors_port_flag = FALSE;
 13830              		.loc 1 2507 0 is_stmt 1
 13831 0314 184B     		ldr	r3, .L663
 13832 0316 0022     		movs	r2, #0
 13833 0318 83F88021 		strb	r2, [r3, #384]
2508:..\src/command_processing.c ****     g_mem.use_2nd_motor_flag = FALSE;
 13834              		.loc 1 2508 0
 13835 031c 164B     		ldr	r3, .L663
 13836 031e 0022     		movs	r2, #0
 13837 0320 83F88121 		strb	r2, [r3, #385]
2509:..\src/command_processing.c ****     
2510:..\src/command_processing.c ****     for (i = 0; i< NUM_OF_MOTORS; i++){
 13838              		.loc 1 2510 0
 13839 0324 0023     		movs	r3, #0
 13840 0326 FB71     		strb	r3, [r7, #7]
 13841 0328 08E0     		b	.L656
 13842              	.L657:
2511:..\src/command_processing.c ****         g_mem.motor_driver_type[i] = DRIVER_MC33887;    //SoftHand standard driver
 13843              		.loc 1 2511 0 discriminator 3
 13844 032a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13845 032c 124A     		ldr	r2, .L663
 13846 032e 1344     		add	r3, r3, r2
 13847 0330 0022     		movs	r2, #0
 13848 0332 83F88221 		strb	r2, [r3, #386]
2510:..\src/command_processing.c ****         g_mem.motor_driver_type[i] = DRIVER_MC33887;    //SoftHand standard driver
 13849              		.loc 1 2510 0 discriminator 3
 13850 0336 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 320


 13851 0338 0133     		adds	r3, r3, #1
 13852 033a FB71     		strb	r3, [r7, #7]
 13853              	.L656:
2510:..\src/command_processing.c ****         g_mem.motor_driver_type[i] = DRIVER_MC33887;    //SoftHand standard driver
 13854              		.loc 1 2510 0 is_stmt 0 discriminator 1
 13855 033c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 13856 033e 012B     		cmp	r3, #1
 13857 0340 F3D9     		bls	.L657
2512:..\src/command_processing.c ****     }
2513:..\src/command_processing.c **** 
2514:..\src/command_processing.c **** #ifdef SOFTHAND_FW
2515:..\src/command_processing.c ****     // Override memory values with specific ones for SoftHand Pro device
2516:..\src/command_processing.c ****     memInit_SoftHand();
 13858              		.loc 1 2516 0 is_stmt 1
 13859 0342 FFF7FEFF 		bl	memInit_SoftHand
2517:..\src/command_processing.c **** #endif    
2518:..\src/command_processing.c ****     
2519:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2520:..\src/command_processing.c ****     g_mem.flag = TRUE;
 13860              		.loc 1 2520 0
 13861 0346 0C4B     		ldr	r3, .L663
 13862 0348 0122     		movs	r2, #1
 13863 034a 83F8A020 		strb	r2, [r3, #160]
2521:..\src/command_processing.c ****     
2522:..\src/command_processing.c ****     //write that configuration to EEPROM
2523:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 13864              		.loc 1 2523 0
 13865 034e 0020     		movs	r0, #0
 13866 0350 FFF7FEFF 		bl	memStore
 13867 0354 0346     		mov	r3, r0
 13868 0356 002B     		cmp	r3, #0
 13869 0358 07D0     		beq	.L658
 13870              		.loc 1 2523 0 is_stmt 0 discriminator 1
 13871 035a 3220     		movs	r0, #50
 13872 035c FFF7FEFF 		bl	memStore
 13873 0360 0346     		mov	r3, r0
 13874 0362 002B     		cmp	r3, #0
 13875 0364 01D0     		beq	.L658
 13876              		.loc 1 2523 0 discriminator 3
 13877 0366 0123     		movs	r3, #1
 13878 0368 00E0     		b	.L659
 13879              	.L658:
 13880              		.loc 1 2523 0 discriminator 4
 13881 036a 0023     		movs	r3, #0
 13882              	.L659:
 13883              		.loc 1 2523 0 discriminator 6
 13884 036c DBB2     		uxtb	r3, r3
2524:..\src/command_processing.c **** }
 13885              		.loc 1 2524 0 is_stmt 1 discriminator 6
 13886 036e 1846     		mov	r0, r3
 13887 0370 0837     		adds	r7, r7, #8
 13888              		.cfi_def_cfa_offset 8
 13889 0372 BD46     		mov	sp, r7
 13890              		.cfi_def_cfa_register 13
 13891              		@ sp needed
 13892 0374 80BD     		pop	{r7, pc}
 13893              	.L664:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 321


 13894 0376 00BF     		.align	2
 13895              	.L663:
 13896 0378 00000000 		.word	g_mem
 13897              		.cfi_endproc
 13898              	.LFE85:
 13899              		.size	memInit, .-memInit
 13900              		.section	.text.memInit_SoftHand,"ax",%progbits
 13901              		.align	2
 13902              		.global	memInit_SoftHand
 13903              		.thumb
 13904              		.thumb_func
 13905              		.type	memInit_SoftHand, %function
 13906              	memInit_SoftHand:
 13907              	.LFB86:
2525:..\src/command_processing.c **** 
2526:..\src/command_processing.c **** //==============================================================================
2527:..\src/command_processing.c **** //                                                          MEMORY INIT SOFTHAND
2528:..\src/command_processing.c **** //==============================================================================
2529:..\src/command_processing.c **** 
2530:..\src/command_processing.c **** void memInit_SoftHand(void)
2531:..\src/command_processing.c **** {
 13908              		.loc 1 2531 0
 13909              		.cfi_startproc
 13910              		@ args = 0, pretend = 0, frame = 0
 13911              		@ frame_needed = 1, uses_anonymous_args = 0
 13912              		@ link register save eliminated.
 13913 0000 80B4     		push	{r7}
 13914              		.cfi_def_cfa_offset 4
 13915              		.cfi_offset 7, -4
 13916 0002 00AF     		add	r7, sp, #0
 13917              		.cfi_def_cfa_register 7
2532:..\src/command_processing.c **** 
2533:..\src/command_processing.c ****     //initialize memory settings ( Specific for SoftHand Pro device )    
2534:..\src/command_processing.c ****     g_mem.activ         = 1;
 13918              		.loc 1 2534 0
 13919 0004 2A4B     		ldr	r3, .L666
 13920 0006 0122     		movs	r2, #1
 13921 0008 83F8D420 		strb	r2, [r3, #212]
2535:..\src/command_processing.c ****     g_mem.input_mode    = INPUT_MODE_EMG_FCFS;
 13922              		.loc 1 2535 0
 13923 000c 284B     		ldr	r3, .L666
 13924 000e 0422     		movs	r2, #4
 13925 0010 83F8D520 		strb	r2, [r3, #213]
2536:..\src/command_processing.c ****     g_mem.control_mode  = CONTROL_ANGLE;
 13926              		.loc 1 2536 0
 13927 0014 264B     		ldr	r3, .L666
 13928 0016 0022     		movs	r2, #0
 13929 0018 83F8D620 		strb	r2, [r3, #214]
2537:..\src/command_processing.c **** 
2538:..\src/command_processing.c ****     g_mem.emg_calibration_flag = 0;
 13930              		.loc 1 2538 0
 13931 001c 244B     		ldr	r3, .L666
 13932 001e 0022     		movs	r2, #0
 13933 0020 83F80E21 		strb	r2, [r3, #270]
2539:..\src/command_processing.c ****     g_mem.emg_max_value[0] = 1024;
 13934              		.loc 1 2539 0
 13935 0024 224B     		ldr	r3, .L666
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 322


 13936 0026 4FF48062 		mov	r2, #1024
 13937 002a C3F81021 		str	r2, [r3, #272]
2540:..\src/command_processing.c ****     g_mem.emg_max_value[1] = 1024;
 13938              		.loc 1 2540 0
 13939 002e 204B     		ldr	r3, .L666
 13940 0030 4FF48062 		mov	r2, #1024
 13941 0034 C3F81421 		str	r2, [r3, #276]
2541:..\src/command_processing.c ****     g_mem.emg_threshold[0] = 200;
 13942              		.loc 1 2541 0
 13943 0038 1D4B     		ldr	r3, .L666
 13944 003a C822     		movs	r2, #200
 13945 003c A3F80A21 		strh	r2, [r3, #266]	@ movhi
2542:..\src/command_processing.c ****     g_mem.emg_threshold[1] = 200;
 13946              		.loc 1 2542 0
 13947 0040 1B4B     		ldr	r3, .L666
 13948 0042 C822     		movs	r2, #200
 13949 0044 A3F80C21 		strh	r2, [r3, #268]	@ movhi
2543:..\src/command_processing.c ****     g_mem.emg_speed = 100;
 13950              		.loc 1 2543 0
 13951 0048 194B     		ldr	r3, .L666
 13952 004a 6422     		movs	r2, #100
 13953 004c 83F81821 		strb	r2, [r3, #280]
2544:..\src/command_processing.c ****     
2545:..\src/command_processing.c ****     g_mem.double_encoder_on_off = TRUE;
 13954              		.loc 1 2545 0
 13955 0050 174B     		ldr	r3, .L666
 13956 0052 0122     		movs	r2, #1
 13957 0054 83F81921 		strb	r2, [r3, #281]
2546:..\src/command_processing.c **** 
2547:..\src/command_processing.c ****     //Initialize rest position parameters  
2548:..\src/command_processing.c ****     g_mem.rest_position_flag = FALSE;
 13958              		.loc 1 2548 0
 13959 0058 154B     		ldr	r3, .L666
 13960 005a 0022     		movs	r2, #0
 13961 005c 83F84421 		strb	r2, [r3, #324]
2549:..\src/command_processing.c ****     g_mem.rest_pos = (int32)7000 << g_mem.res[0]; // 56000
 13962              		.loc 1 2549 0
 13963 0060 134B     		ldr	r3, .L666
 13964 0062 93F8D730 		ldrb	r3, [r3, #215]	@ zero_extendqisi2
 13965 0066 1A46     		mov	r2, r3
 13966 0068 41F65833 		movw	r3, #7000
 13967 006c 9340     		lsls	r3, r3, r2
 13968 006e 104A     		ldr	r2, .L666
 13969 0070 C2F83831 		str	r3, [r2, #312]
2550:..\src/command_processing.c **** 	g_mem.rest_delay = 10;
 13970              		.loc 1 2550 0
 13971 0074 0E4B     		ldr	r3, .L666
 13972 0076 0A22     		movs	r2, #10
 13973 0078 C3F83C21 		str	r2, [r3, #316]
2551:..\src/command_processing.c ****     g_mem.rest_vel = 10000;
 13974              		.loc 1 2551 0
 13975 007c 0C4B     		ldr	r3, .L666
 13976 007e 42F21072 		movw	r2, #10000
 13977 0082 C3F84021 		str	r2, [r3, #320]
2552:..\src/command_processing.c ****     g_mem.switch_emg = 0;
 13978              		.loc 1 2552 0
 13979 0086 0A4B     		ldr	r3, .L666
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 323


 13980 0088 0022     		movs	r2, #0
 13981 008a 83F84521 		strb	r2, [r3, #325]
2553:..\src/command_processing.c **** 	
2554:..\src/command_processing.c ****     g_mem.right_left = RIGHT_HAND;
 13982              		.loc 1 2554 0
 13983 008e 084B     		ldr	r3, .L666
 13984 0090 0022     		movs	r2, #0
 13985 0092 83F84621 		strb	r2, [r3, #326]
2555:..\src/command_processing.c ****     g_mem.read_imu_flag = FALSE;
 13986              		.loc 1 2555 0
 13987 0096 064B     		ldr	r3, .L666
 13988 0098 0022     		movs	r2, #0
 13989 009a 83F84721 		strb	r2, [r3, #327]
2556:..\src/command_processing.c ****     g_mem.read_exp_port_flag = EXP_NONE;       // 0 - None
 13990              		.loc 1 2556 0
 13991 009e 044B     		ldr	r3, .L666
 13992 00a0 0022     		movs	r2, #0
 13993 00a2 83F84821 		strb	r2, [r3, #328]
2557:..\src/command_processing.c **** }
 13994              		.loc 1 2557 0
 13995 00a6 00BF     		nop
 13996 00a8 BD46     		mov	sp, r7
 13997              		.cfi_def_cfa_register 13
 13998              		@ sp needed
 13999 00aa 80BC     		pop	{r7}
 14000              		.cfi_restore 7
 14001              		.cfi_def_cfa_offset 0
 14002 00ac 7047     		bx	lr
 14003              	.L667:
 14004 00ae 00BF     		.align	2
 14005              	.L666:
 14006 00b0 00000000 		.word	g_mem
 14007              		.cfi_endproc
 14008              	.LFE86:
 14009              		.size	memInit_SoftHand, .-memInit_SoftHand
 14010              		.section	.text.cmd_get_measurements,"ax",%progbits
 14011              		.align	2
 14012              		.global	cmd_get_measurements
 14013              		.thumb
 14014              		.thumb_func
 14015              		.type	cmd_get_measurements, %function
 14016              	cmd_get_measurements:
 14017              	.LFB87:
2558:..\src/command_processing.c **** 
2559:..\src/command_processing.c **** //==============================================================================
2560:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
2561:..\src/command_processing.c **** //==============================================================================
2562:..\src/command_processing.c **** /**
2563:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
2564:..\src/command_processing.c **** **/
2565:..\src/command_processing.c **** 
2566:..\src/command_processing.c **** void cmd_get_measurements(){
 14018              		.loc 1 2566 0
 14019              		.cfi_startproc
 14020              		@ args = 0, pretend = 0, frame = 16
 14021              		@ frame_needed = 1, uses_anonymous_args = 0
 14022 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 324


 14023              		.cfi_def_cfa_offset 8
 14024              		.cfi_offset 7, -8
 14025              		.cfi_offset 14, -4
 14026 0002 84B0     		sub	sp, sp, #16
 14027              		.cfi_def_cfa_offset 24
 14028 0004 00AF     		add	r7, sp, #0
 14029              		.cfi_def_cfa_register 7
2567:..\src/command_processing.c ****  
2568:..\src/command_processing.c ****     uint8 CYDATA index;
2569:..\src/command_processing.c ****     int16 aux_int16;
2570:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2571:..\src/command_processing.c ****     
2572:..\src/command_processing.c ****     uint8 packet_data[8]; 
2573:..\src/command_processing.c ****     
2574:..\src/command_processing.c ****     //Header package
2575:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 14030              		.loc 1 2575 0
 14031 0006 8423     		movs	r3, #132
 14032 0008 3B71     		strb	r3, [r7, #4]
2576:..\src/command_processing.c ****     
2577:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 14033              		.loc 1 2577 0
 14034 000a 0323     		movs	r3, #3
 14035 000c FB73     		strb	r3, [r7, #15]
 14036 000e 23E0     		b	.L669
 14037              	.L670:
2578:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 14038              		.loc 1 2578 0
 14039 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14040 0012 1C4A     		ldr	r2, .L671
 14041 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14042 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 14043 001a 1B49     		ldr	r1, .L671+4
 14044 001c 0A44     		add	r2, r2, r1
 14045 001e 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14046 0022 1341     		asrs	r3, r3, r2
 14047 0024 1BB2     		sxth	r3, r3
 14048 0026 BB81     		strh	r3, [r7, #12]	@ movhi
2579:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 14049              		.loc 1 2579 0
 14050 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14051 002a 5B00     		lsls	r3, r3, #1
 14052 002c 0233     		adds	r3, r3, #2
 14053 002e 07F10C02 		add	r2, r7, #12
 14054 0032 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 14055 0034 07F11001 		add	r1, r7, #16
 14056 0038 0B44     		add	r3, r3, r1
 14057 003a 03F80C2C 		strb	r2, [r3, #-12]
2580:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 14058              		.loc 1 2580 0
 14059 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14060 0040 5B00     		lsls	r3, r3, #1
 14061 0042 5A1C     		adds	r2, r3, #1
 14062 0044 07F10C03 		add	r3, r7, #12
 14063 0048 0133     		adds	r3, r3, #1
 14064 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 14065 004c 07F11003 		add	r3, r7, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 325


 14066 0050 1344     		add	r3, r3, r2
 14067 0052 0A46     		mov	r2, r1
 14068 0054 03F80C2C 		strb	r2, [r3, #-12]
 14069              	.L669:
2577:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 14070              		.loc 1 2577 0 discriminator 1
 14071 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14072 005a 5A1E     		subs	r2, r3, #1
 14073 005c FA73     		strb	r2, [r7, #15]
 14074 005e 002B     		cmp	r3, #0
 14075 0060 D6D1     		bne	.L670
2581:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2582:..\src/command_processing.c ****     }
2583:..\src/command_processing.c **** 
2584:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2585:..\src/command_processing.c **** 
2586:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 14076              		.loc 1 2586 0
 14077 0062 3B1D     		adds	r3, r7, #4
 14078 0064 0721     		movs	r1, #7
 14079 0066 1846     		mov	r0, r3
 14080 0068 FFF7FEFF 		bl	LCRChecksum
 14081 006c 0346     		mov	r3, r0
 14082 006e FB72     		strb	r3, [r7, #11]
2587:..\src/command_processing.c **** 
2588:..\src/command_processing.c ****     commWrite(packet_data, 8);
 14083              		.loc 1 2588 0
 14084 0070 3B1D     		adds	r3, r7, #4
 14085 0072 0821     		movs	r1, #8
 14086 0074 1846     		mov	r0, r3
 14087 0076 FFF7FEFF 		bl	commWrite
2589:..\src/command_processing.c ****    
2590:..\src/command_processing.c **** }
 14088              		.loc 1 2590 0
 14089 007a 00BF     		nop
 14090 007c 1037     		adds	r7, r7, #16
 14091              		.cfi_def_cfa_offset 8
 14092 007e BD46     		mov	sp, r7
 14093              		.cfi_def_cfa_register 13
 14094              		@ sp needed
 14095 0080 80BD     		pop	{r7, pc}
 14096              	.L672:
 14097 0082 00BF     		.align	2
 14098              	.L671:
 14099 0084 00000000 		.word	g_measOld
 14100 0088 00000000 		.word	g_mem
 14101              		.cfi_endproc
 14102              	.LFE87:
 14103              		.size	cmd_get_measurements, .-cmd_get_measurements
 14104              		.section	.text.cmd_get_velocities,"ax",%progbits
 14105              		.align	2
 14106              		.global	cmd_get_velocities
 14107              		.thumb
 14108              		.thumb_func
 14109              		.type	cmd_get_velocities, %function
 14110              	cmd_get_velocities:
 14111              	.LFB88:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 326


2591:..\src/command_processing.c **** 
2592:..\src/command_processing.c **** void cmd_get_velocities(){
 14112              		.loc 1 2592 0
 14113              		.cfi_startproc
 14114              		@ args = 0, pretend = 0, frame = 16
 14115              		@ frame_needed = 1, uses_anonymous_args = 0
 14116 0000 80B5     		push	{r7, lr}
 14117              		.cfi_def_cfa_offset 8
 14118              		.cfi_offset 7, -8
 14119              		.cfi_offset 14, -4
 14120 0002 84B0     		sub	sp, sp, #16
 14121              		.cfi_def_cfa_offset 24
 14122 0004 00AF     		add	r7, sp, #0
 14123              		.cfi_def_cfa_register 7
2593:..\src/command_processing.c ****  
2594:..\src/command_processing.c ****     uint8 CYDATA index;
2595:..\src/command_processing.c ****     int16 aux_int16;
2596:..\src/command_processing.c ****    
2597:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2598:..\src/command_processing.c ****     
2599:..\src/command_processing.c ****     uint8 packet_data[8]; 
2600:..\src/command_processing.c ****     
2601:..\src/command_processing.c ****     //Header package
2602:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 14124              		.loc 1 2602 0
 14125 0006 8923     		movs	r3, #137
 14126 0008 3B71     		strb	r3, [r7, #4]
2603:..\src/command_processing.c ****     
2604:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 14127              		.loc 1 2604 0
 14128 000a 0323     		movs	r3, #3
 14129 000c FB73     		strb	r3, [r7, #15]
 14130 000e 25E0     		b	.L674
 14131              	.L675:
2605:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 14132              		.loc 1 2605 0
 14133 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14134 0012 1D4A     		ldr	r2, .L676
 14135 0014 0833     		adds	r3, r3, #8
 14136 0016 9B00     		lsls	r3, r3, #2
 14137 0018 1344     		add	r3, r3, r2
 14138 001a 5B68     		ldr	r3, [r3, #4]
 14139 001c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 14140 001e 1B49     		ldr	r1, .L676+4
 14141 0020 0A44     		add	r2, r2, r1
 14142 0022 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14143 0026 1341     		asrs	r3, r3, r2
 14144 0028 1BB2     		sxth	r3, r3
 14145 002a BB81     		strh	r3, [r7, #12]	@ movhi
2606:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 14146              		.loc 1 2606 0
 14147 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14148 002e 5B00     		lsls	r3, r3, #1
 14149 0030 0233     		adds	r3, r3, #2
 14150 0032 07F10C02 		add	r2, r7, #12
 14151 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 14152 0038 07F11001 		add	r1, r7, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 327


 14153 003c 0B44     		add	r3, r3, r1
 14154 003e 03F80C2C 		strb	r2, [r3, #-12]
2607:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 14155              		.loc 1 2607 0
 14156 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14157 0044 5B00     		lsls	r3, r3, #1
 14158 0046 5A1C     		adds	r2, r3, #1
 14159 0048 07F10C03 		add	r3, r7, #12
 14160 004c 0133     		adds	r3, r3, #1
 14161 004e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 14162 0050 07F11003 		add	r3, r7, #16
 14163 0054 1344     		add	r3, r3, r2
 14164 0056 0A46     		mov	r2, r1
 14165 0058 03F80C2C 		strb	r2, [r3, #-12]
 14166              	.L674:
2604:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 14167              		.loc 1 2604 0 discriminator 1
 14168 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14169 005e 5A1E     		subs	r2, r3, #1
 14170 0060 FA73     		strb	r2, [r7, #15]
 14171 0062 002B     		cmp	r3, #0
 14172 0064 D4D1     		bne	.L675
2608:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16) (g_measOld.vel[index] >> g_mem.res[
2609:..\src/command_processing.c ****     }
2610:..\src/command_processing.c ****             
2611:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2612:..\src/command_processing.c **** 
2613:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 14173              		.loc 1 2613 0
 14174 0066 3B1D     		adds	r3, r7, #4
 14175 0068 0721     		movs	r1, #7
 14176 006a 1846     		mov	r0, r3
 14177 006c FFF7FEFF 		bl	LCRChecksum
 14178 0070 0346     		mov	r3, r0
 14179 0072 FB72     		strb	r3, [r7, #11]
2614:..\src/command_processing.c **** 
2615:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 14180              		.loc 1 2615 0
 14181 0074 3B1D     		adds	r3, r7, #4
 14182 0076 0821     		movs	r1, #8
 14183 0078 1846     		mov	r0, r3
 14184 007a FFF7FEFF 		bl	commWrite
2616:..\src/command_processing.c **** }
 14185              		.loc 1 2616 0
 14186 007e 00BF     		nop
 14187 0080 1037     		adds	r7, r7, #16
 14188              		.cfi_def_cfa_offset 8
 14189 0082 BD46     		mov	sp, r7
 14190              		.cfi_def_cfa_register 13
 14191              		@ sp needed
 14192 0084 80BD     		pop	{r7, pc}
 14193              	.L677:
 14194 0086 00BF     		.align	2
 14195              	.L676:
 14196 0088 00000000 		.word	g_measOld
 14197 008c 00000000 		.word	g_mem
 14198              		.cfi_endproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 328


 14199              	.LFE88:
 14200              		.size	cmd_get_velocities, .-cmd_get_velocities
 14201              		.section	.text.cmd_get_accelerations,"ax",%progbits
 14202              		.align	2
 14203              		.global	cmd_get_accelerations
 14204              		.thumb
 14205              		.thumb_func
 14206              		.type	cmd_get_accelerations, %function
 14207              	cmd_get_accelerations:
 14208              	.LFB89:
2617:..\src/command_processing.c **** 
2618:..\src/command_processing.c **** void cmd_get_accelerations(){
 14209              		.loc 1 2618 0
 14210              		.cfi_startproc
 14211              		@ args = 0, pretend = 0, frame = 16
 14212              		@ frame_needed = 1, uses_anonymous_args = 0
 14213 0000 80B5     		push	{r7, lr}
 14214              		.cfi_def_cfa_offset 8
 14215              		.cfi_offset 7, -8
 14216              		.cfi_offset 14, -4
 14217 0002 84B0     		sub	sp, sp, #16
 14218              		.cfi_def_cfa_offset 24
 14219 0004 00AF     		add	r7, sp, #0
 14220              		.cfi_def_cfa_register 7
2619:..\src/command_processing.c ****  
2620:..\src/command_processing.c ****     uint8 CYDATA index;
2621:..\src/command_processing.c ****     int16 aux_int16;
2622:..\src/command_processing.c ****     
2623:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2624:..\src/command_processing.c ****     
2625:..\src/command_processing.c ****     uint8 packet_data[8]; 
2626:..\src/command_processing.c ****     
2627:..\src/command_processing.c ****     //Header package
2628:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 14221              		.loc 1 2628 0
 14222 0006 8B23     		movs	r3, #139
 14223 0008 3B71     		strb	r3, [r7, #4]
2629:..\src/command_processing.c ****     
2630:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 14224              		.loc 1 2630 0
 14225 000a 0323     		movs	r3, #3
 14226 000c FB73     		strb	r3, [r7, #15]
 14227 000e 24E0     		b	.L679
 14228              	.L680:
2631:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 14229              		.loc 1 2631 0
 14230 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14231 0012 1C4A     		ldr	r2, .L681
 14232 0014 0C33     		adds	r3, r3, #12
 14233 0016 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14234 001a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 14235 001c 1A49     		ldr	r1, .L681+4
 14236 001e 0A44     		add	r2, r2, r1
 14237 0020 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14238 0024 1341     		asrs	r3, r3, r2
 14239 0026 1BB2     		sxth	r3, r3
 14240 0028 BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 329


2632:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 14241              		.loc 1 2632 0
 14242 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14243 002c 5B00     		lsls	r3, r3, #1
 14244 002e 0233     		adds	r3, r3, #2
 14245 0030 07F10C02 		add	r2, r7, #12
 14246 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 14247 0036 07F11001 		add	r1, r7, #16
 14248 003a 0B44     		add	r3, r3, r1
 14249 003c 03F80C2C 		strb	r2, [r3, #-12]
2633:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 14250              		.loc 1 2633 0
 14251 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14252 0042 5B00     		lsls	r3, r3, #1
 14253 0044 5A1C     		adds	r2, r3, #1
 14254 0046 07F10C03 		add	r3, r7, #12
 14255 004a 0133     		adds	r3, r3, #1
 14256 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 14257 004e 07F11003 		add	r3, r7, #16
 14258 0052 1344     		add	r3, r3, r2
 14259 0054 0A46     		mov	r2, r1
 14260 0056 03F80C2C 		strb	r2, [r3, #-12]
 14261              	.L679:
2630:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 14262              		.loc 1 2630 0 discriminator 1
 14263 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14264 005c 5A1E     		subs	r2, r3, #1
 14265 005e FA73     		strb	r2, [r7, #15]
 14266 0060 002B     		cmp	r3, #0
 14267 0062 D5D1     		bne	.L680
2634:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.acc[index] >> g_mem.res[i
2635:..\src/command_processing.c ****     }
2636:..\src/command_processing.c ****     
2637:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2638:..\src/command_processing.c **** 
2639:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 14268              		.loc 1 2639 0
 14269 0064 3B1D     		adds	r3, r7, #4
 14270 0066 0721     		movs	r1, #7
 14271 0068 1846     		mov	r0, r3
 14272 006a FFF7FEFF 		bl	LCRChecksum
 14273 006e 0346     		mov	r3, r0
 14274 0070 FB72     		strb	r3, [r7, #11]
2640:..\src/command_processing.c **** 
2641:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 14275              		.loc 1 2641 0
 14276 0072 3B1D     		adds	r3, r7, #4
 14277 0074 0821     		movs	r1, #8
 14278 0076 1846     		mov	r0, r3
 14279 0078 FFF7FEFF 		bl	commWrite
2642:..\src/command_processing.c **** }
 14280              		.loc 1 2642 0
 14281 007c 00BF     		nop
 14282 007e 1037     		adds	r7, r7, #16
 14283              		.cfi_def_cfa_offset 8
 14284 0080 BD46     		mov	sp, r7
 14285              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 330


 14286              		@ sp needed
 14287 0082 80BD     		pop	{r7, pc}
 14288              	.L682:
 14289              		.align	2
 14290              	.L681:
 14291 0084 00000000 		.word	g_measOld
 14292 0088 00000000 		.word	g_mem
 14293              		.cfi_endproc
 14294              	.LFE89:
 14295              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 14296              		.section	.text.cmd_set_inputs,"ax",%progbits
 14297              		.align	2
 14298              		.global	cmd_set_inputs
 14299              		.thumb
 14300              		.thumb_func
 14301              		.type	cmd_set_inputs, %function
 14302              	cmd_set_inputs:
 14303              	.LFB90:
2643:..\src/command_processing.c **** 
2644:..\src/command_processing.c **** void cmd_set_inputs(){
 14304              		.loc 1 2644 0
 14305              		.cfi_startproc
 14306              		@ args = 0, pretend = 0, frame = 8
 14307              		@ frame_needed = 1, uses_anonymous_args = 0
 14308              		@ link register save eliminated.
 14309 0000 80B4     		push	{r7}
 14310              		.cfi_def_cfa_offset 4
 14311              		.cfi_offset 7, -4
 14312 0002 83B0     		sub	sp, sp, #12
 14313              		.cfi_def_cfa_offset 16
 14314 0004 00AF     		add	r7, sp, #0
 14315              		.cfi_def_cfa_register 7
2645:..\src/command_processing.c ****     
2646:..\src/command_processing.c ****     // Store position setted in right variables
2647:..\src/command_processing.c ****     int16 aux_int16 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 14316              		.loc 1 2647 0
 14317 0006 2C4B     		ldr	r3, .L690
 14318 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 14319 000a 1B02     		lsls	r3, r3, #8
 14320 000c 1AB2     		sxth	r2, r3
 14321 000e 2A4B     		ldr	r3, .L690
 14322 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 14323 0012 1BB2     		sxth	r3, r3
 14324 0014 1343     		orrs	r3, r3, r2
 14325 0016 FB80     		strh	r3, [r7, #6]	@ movhi
2648:..\src/command_processing.c ****     
2649:..\src/command_processing.c ****     if(g_mem.control_mode == CONTROL_CURRENT) {
 14326              		.loc 1 2649 0
 14327 0018 284B     		ldr	r3, .L690+4
 14328 001a 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14329 001e 022B     		cmp	r3, #2
 14330 0020 04D1     		bne	.L684
2650:..\src/command_processing.c ****         g_refNew.curr = aux_int16;
 14331              		.loc 1 2650 0
 14332 0022 B7F90630 		ldrsh	r3, [r7, #6]
 14333 0026 264A     		ldr	r2, .L690+8
 14334 0028 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 331


 14335 002a 15E0     		b	.L685
 14336              	.L684:
2651:..\src/command_processing.c ****         //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2652:..\src/command_processing.c ****     }
2653:..\src/command_processing.c ****     else {
2654:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_PWM) {
 14337              		.loc 1 2654 0
 14338 002c 234B     		ldr	r3, .L690+4
 14339 002e 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14340 0032 012B     		cmp	r3, #1
 14341 0034 04D1     		bne	.L686
2655:..\src/command_processing.c ****             g_refNew.pwm = aux_int16;
 14342              		.loc 1 2655 0
 14343 0036 B7F90630 		ldrsh	r3, [r7, #6]
 14344 003a 214A     		ldr	r2, .L690+8
 14345 003c 9360     		str	r3, [r2, #8]
 14346 003e 0BE0     		b	.L685
 14347              	.L686:
2656:..\src/command_processing.c ****             //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2657:..\src/command_processing.c ****         }
2658:..\src/command_processing.c ****         else {
2659:..\src/command_processing.c ****             g_refNew.pos = aux_int16;   // motor 1
 14348              		.loc 1 2659 0
 14349 0040 B7F90630 		ldrsh	r3, [r7, #6]
 14350 0044 1E4A     		ldr	r2, .L690+8
 14351 0046 1360     		str	r3, [r2]
2660:..\src/command_processing.c ****             //g_refNew.pos = *((int16 *) &g_rx.buffer[1]);   // motor 1
2661:..\src/command_processing.c ****             g_refNew.pos = g_refNew.pos << g_mem.res[0];
 14352              		.loc 1 2661 0
 14353 0048 1D4B     		ldr	r3, .L690+8
 14354 004a 1B68     		ldr	r3, [r3]
 14355 004c 1B4A     		ldr	r2, .L690+4
 14356 004e 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14357 0052 9340     		lsls	r3, r3, r2
 14358 0054 1A4A     		ldr	r2, .L690+8
 14359 0056 1360     		str	r3, [r2]
 14360              	.L685:
2662:..\src/command_processing.c ****         }
2663:..\src/command_processing.c ****     }     
2664:..\src/command_processing.c **** 
2665:..\src/command_processing.c ****     // Check if the reference is nor higher or lower than the position limits
2666:..\src/command_processing.c ****     if (c_mem.pos_lim_flag && (g_mem.control_mode == CURR_AND_POS_CONTROL || g_mem.control_mode == 
 14361              		.loc 1 2666 0
 14362 0058 1A4B     		ldr	r3, .L690+12
 14363 005a 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 14364 005e 002B     		cmp	r3, #0
 14365 0060 21D0     		beq	.L687
 14366              		.loc 1 2666 0 is_stmt 0 discriminator 1
 14367 0062 164B     		ldr	r3, .L690+4
 14368 0064 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14369 0068 032B     		cmp	r3, #3
 14370 006a 04D0     		beq	.L688
 14371              		.loc 1 2666 0 discriminator 2
 14372 006c 134B     		ldr	r3, .L690+4
 14373 006e 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14374 0072 002B     		cmp	r3, #0
 14375 0074 17D1     		bne	.L687
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 332


 14376              	.L688:
2667:..\src/command_processing.c ****         
2668:..\src/command_processing.c ****         if (g_refNew.pos < c_mem.pos_lim_inf) 
 14377              		.loc 1 2668 0 is_stmt 1
 14378 0076 124B     		ldr	r3, .L690+8
 14379 0078 1A68     		ldr	r2, [r3]
 14380 007a 124B     		ldr	r3, .L690+12
 14381 007c D3F8F830 		ldr	r3, [r3, #248]
 14382 0080 9A42     		cmp	r2, r3
 14383 0082 04DA     		bge	.L689
2669:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_inf;
 14384              		.loc 1 2669 0
 14385 0084 0F4B     		ldr	r3, .L690+12
 14386 0086 D3F8F830 		ldr	r3, [r3, #248]
 14387 008a 0D4A     		ldr	r2, .L690+8
 14388 008c 1360     		str	r3, [r2]
 14389              	.L689:
2670:..\src/command_processing.c **** 
2671:..\src/command_processing.c ****         if (g_refNew.pos > c_mem.pos_lim_sup) 
 14390              		.loc 1 2671 0
 14391 008e 0C4B     		ldr	r3, .L690+8
 14392 0090 1A68     		ldr	r2, [r3]
 14393 0092 0C4B     		ldr	r3, .L690+12
 14394 0094 D3F8FC30 		ldr	r3, [r3, #252]
 14395 0098 9A42     		cmp	r2, r3
 14396 009a 04DD     		ble	.L687
2672:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_sup;
 14397              		.loc 1 2672 0
 14398 009c 094B     		ldr	r3, .L690+12
 14399 009e D3F8FC30 		ldr	r3, [r3, #252]
 14400 00a2 074A     		ldr	r2, .L690+8
 14401 00a4 1360     		str	r3, [r2]
 14402              	.L687:
2673:..\src/command_processing.c ****     }
2674:..\src/command_processing.c ****     
2675:..\src/command_processing.c ****     change_ext_ref_flag = TRUE;
 14403              		.loc 1 2675 0
 14404 00a6 084B     		ldr	r3, .L690+16
 14405 00a8 0122     		movs	r2, #1
 14406 00aa 1A70     		strb	r2, [r3]
2676:..\src/command_processing.c **** }
 14407              		.loc 1 2676 0
 14408 00ac 00BF     		nop
 14409 00ae 0C37     		adds	r7, r7, #12
 14410              		.cfi_def_cfa_offset 4
 14411 00b0 BD46     		mov	sp, r7
 14412              		.cfi_def_cfa_register 13
 14413              		@ sp needed
 14414 00b2 80BC     		pop	{r7}
 14415              		.cfi_restore 7
 14416              		.cfi_def_cfa_offset 0
 14417 00b4 7047     		bx	lr
 14418              	.L691:
 14419 00b6 00BF     		.align	2
 14420              	.L690:
 14421 00b8 00000000 		.word	g_rx
 14422 00bc 00000000 		.word	g_mem
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 333


 14423 00c0 00000000 		.word	g_refNew
 14424 00c4 00000000 		.word	c_mem
 14425 00c8 00000000 		.word	change_ext_ref_flag
 14426              		.cfi_endproc
 14427              	.LFE90:
 14428              		.size	cmd_set_inputs, .-cmd_set_inputs
 14429              		.section	.text.cmd_activate,"ax",%progbits
 14430              		.align	2
 14431              		.global	cmd_activate
 14432              		.thumb
 14433              		.thumb_func
 14434              		.type	cmd_activate, %function
 14435              	cmd_activate:
 14436              	.LFB91:
2677:..\src/command_processing.c **** 
2678:..\src/command_processing.c **** void cmd_activate(){
 14437              		.loc 1 2678 0
 14438              		.cfi_startproc
 14439              		@ args = 0, pretend = 0, frame = 0
 14440              		@ frame_needed = 1, uses_anonymous_args = 0
 14441 0000 80B5     		push	{r7, lr}
 14442              		.cfi_def_cfa_offset 8
 14443              		.cfi_offset 7, -8
 14444              		.cfi_offset 14, -4
 14445 0002 00AF     		add	r7, sp, #0
 14446              		.cfi_def_cfa_register 7
2679:..\src/command_processing.c ****     
2680:..\src/command_processing.c ****     // Store new value reads
2681:..\src/command_processing.c ****     g_refNew.onoff = g_rx.buffer[1];
 14447              		.loc 1 2681 0
 14448 0004 0C4B     		ldr	r3, .L695
 14449 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 14450 0008 0C4B     		ldr	r3, .L695+4
 14451 000a 1A73     		strb	r2, [r3, #12]
2682:..\src/command_processing.c ****     
2683:..\src/command_processing.c ****     // Check type of control mode enabled
2684:..\src/command_processing.c ****     if ((g_mem.control_mode == CONTROL_ANGLE) || (g_mem.control_mode == CURR_AND_POS_CONTROL)) {
 14452              		.loc 1 2684 0
 14453 000c 0C4B     		ldr	r3, .L695+8
 14454 000e 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14455 0012 002B     		cmp	r3, #0
 14456 0014 04D0     		beq	.L693
 14457              		.loc 1 2684 0 is_stmt 0 discriminator 1
 14458 0016 0A4B     		ldr	r3, .L695+8
 14459 0018 93F8D630 		ldrb	r3, [r3, #214]	@ zero_extendqisi2
 14460 001c 032B     		cmp	r3, #3
 14461 001e 03D1     		bne	.L694
 14462              	.L693:
2685:..\src/command_processing.c ****         g_refNew.pos = g_meas.pos[0];
 14463              		.loc 1 2685 0 is_stmt 1
 14464 0020 084B     		ldr	r3, .L695+12
 14465 0022 1B68     		ldr	r3, [r3]
 14466 0024 054A     		ldr	r2, .L695+4
 14467 0026 1360     		str	r3, [r2]
 14468              	.L694:
2686:..\src/command_processing.c ****     }
2687:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 334


2688:..\src/command_processing.c ****     // Activate/Disactivate motor
2689:..\src/command_processing.c ****     MOTOR_ON_OFF_1_Write(g_refNew.onoff);
 14469              		.loc 1 2689 0
 14470 0028 044B     		ldr	r3, .L695+4
 14471 002a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 14472 002c 1846     		mov	r0, r3
 14473 002e FFF7FEFF 		bl	MOTOR_ON_OFF_1_Write
2690:..\src/command_processing.c **** }
 14474              		.loc 1 2690 0
 14475 0032 00BF     		nop
 14476 0034 80BD     		pop	{r7, pc}
 14477              	.L696:
 14478 0036 00BF     		.align	2
 14479              	.L695:
 14480 0038 00000000 		.word	g_rx
 14481 003c 00000000 		.word	g_refNew
 14482 0040 00000000 		.word	g_mem
 14483 0044 00000000 		.word	g_meas
 14484              		.cfi_endproc
 14485              	.LFE91:
 14486              		.size	cmd_activate, .-cmd_activate
 14487              		.section	.text.cmd_get_activate,"ax",%progbits
 14488              		.align	2
 14489              		.global	cmd_get_activate
 14490              		.thumb
 14491              		.thumb_func
 14492              		.type	cmd_get_activate, %function
 14493              	cmd_get_activate:
 14494              	.LFB92:
2691:..\src/command_processing.c **** 
2692:..\src/command_processing.c **** void cmd_get_activate(){
 14495              		.loc 1 2692 0
 14496              		.cfi_startproc
 14497              		@ args = 0, pretend = 0, frame = 8
 14498              		@ frame_needed = 1, uses_anonymous_args = 0
 14499 0000 80B5     		push	{r7, lr}
 14500              		.cfi_def_cfa_offset 8
 14501              		.cfi_offset 7, -8
 14502              		.cfi_offset 14, -4
 14503 0002 82B0     		sub	sp, sp, #8
 14504              		.cfi_def_cfa_offset 16
 14505 0004 00AF     		add	r7, sp, #0
 14506              		.cfi_def_cfa_register 7
2693:..\src/command_processing.c ****     
2694:..\src/command_processing.c ****     uint8 packet_data[3];
2695:..\src/command_processing.c **** 
2696:..\src/command_processing.c ****     // Header        
2697:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 14507              		.loc 1 2697 0
 14508 0006 8123     		movs	r3, #129
 14509 0008 3B71     		strb	r3, [r7, #4]
2698:..\src/command_processing.c ****     
2699:..\src/command_processing.c ****     // Fill payload
2700:..\src/command_processing.c ****     packet_data[1] = g_ref.onoff;
 14510              		.loc 1 2700 0
 14511 000a 094B     		ldr	r3, .L698
 14512 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 335


 14513 000e 7B71     		strb	r3, [r7, #5]
2701:..\src/command_processing.c ****     
2702:..\src/command_processing.c ****     // Calculate checksum
2703:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 14514              		.loc 1 2703 0
 14515 0010 3B1D     		adds	r3, r7, #4
 14516 0012 0221     		movs	r1, #2
 14517 0014 1846     		mov	r0, r3
 14518 0016 FFF7FEFF 		bl	LCRChecksum
 14519 001a 0346     		mov	r3, r0
 14520 001c BB71     		strb	r3, [r7, #6]
2704:..\src/command_processing.c ****     
2705:..\src/command_processing.c ****     // Send package to UART
2706:..\src/command_processing.c ****     commWrite(packet_data, 3);
 14521              		.loc 1 2706 0
 14522 001e 3B1D     		adds	r3, r7, #4
 14523 0020 0321     		movs	r1, #3
 14524 0022 1846     		mov	r0, r3
 14525 0024 FFF7FEFF 		bl	commWrite
2707:..\src/command_processing.c **** 
2708:..\src/command_processing.c **** }
 14526              		.loc 1 2708 0
 14527 0028 00BF     		nop
 14528 002a 0837     		adds	r7, r7, #8
 14529              		.cfi_def_cfa_offset 8
 14530 002c BD46     		mov	sp, r7
 14531              		.cfi_def_cfa_register 13
 14532              		@ sp needed
 14533 002e 80BD     		pop	{r7, pc}
 14534              	.L699:
 14535              		.align	2
 14536              	.L698:
 14537 0030 00000000 		.word	g_ref
 14538              		.cfi_endproc
 14539              	.LFE92:
 14540              		.size	cmd_get_activate, .-cmd_get_activate
 14541              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 14542              		.align	2
 14543              		.global	cmd_get_curr_and_meas
 14544              		.thumb
 14545              		.thumb_func
 14546              		.type	cmd_get_curr_and_meas, %function
 14547              	cmd_get_curr_and_meas:
 14548              	.LFB93:
2709:..\src/command_processing.c **** 
2710:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 14549              		.loc 1 2710 0
 14550              		.cfi_startproc
 14551              		@ args = 0, pretend = 0, frame = 16
 14552              		@ frame_needed = 1, uses_anonymous_args = 0
 14553 0000 80B5     		push	{r7, lr}
 14554              		.cfi_def_cfa_offset 8
 14555              		.cfi_offset 7, -8
 14556              		.cfi_offset 14, -4
 14557 0002 84B0     		sub	sp, sp, #16
 14558              		.cfi_def_cfa_offset 24
 14559 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 336


 14560              		.cfi_def_cfa_register 7
2711:..\src/command_processing.c ****     
2712:..\src/command_processing.c ****     uint8 CYDATA index;
2713:..\src/command_processing.c ****     int16 aux_int16;
2714:..\src/command_processing.c ****    
2715:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
2716:..\src/command_processing.c ****     
2717:..\src/command_processing.c ****     uint8 packet_data[12]; 
2718:..\src/command_processing.c **** 
2719:..\src/command_processing.c ****     //Header package
2720:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 14561              		.loc 1 2720 0
 14562 0006 8623     		movs	r3, #134
 14563 0008 3B70     		strb	r3, [r7]
2721:..\src/command_processing.c **** 
2722:..\src/command_processing.c ****     // Currents
2723:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr[0]; //Real current motor1
 14564              		.loc 1 2723 0
 14565 000a 304B     		ldr	r3, .L705
 14566 000c DB68     		ldr	r3, [r3, #12]
 14567 000e 1BB2     		sxth	r3, r3
 14568 0010 BB81     		strh	r3, [r7, #12]	@ movhi
2724:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 14569              		.loc 1 2724 0
 14570 0012 07F10C03 		add	r3, r7, #12
 14571 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14572 0018 BB70     		strb	r3, [r7, #2]
2725:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 14573              		.loc 1 2725 0
 14574 001a 07F10C03 		add	r3, r7, #12
 14575 001e 0133     		adds	r3, r3, #1
 14576 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14577 0022 7B70     		strb	r3, [r7, #1]
2726:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2727:..\src/command_processing.c ****     
2728:..\src/command_processing.c ****     if (c_mem.use_2nd_motor_flag == TRUE) {
 14578              		.loc 1 2728 0
 14579 0024 2A4B     		ldr	r3, .L705+4
 14580 0026 93F88131 		ldrb	r3, [r3, #385]	@ zero_extendqisi2
 14581 002a 012B     		cmp	r3, #1
 14582 002c 04D1     		bne	.L701
2729:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld.curr[1]; //Real current motor 2
 14583              		.loc 1 2729 0
 14584 002e 274B     		ldr	r3, .L705
 14585 0030 1B69     		ldr	r3, [r3, #16]
 14586 0032 1BB2     		sxth	r3, r3
 14587 0034 BB81     		strh	r3, [r7, #12]	@ movhi
 14588 0036 03E0     		b	.L702
 14589              	.L701:
2730:..\src/command_processing.c ****     }
2731:..\src/command_processing.c ****     else {
2732:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 14590              		.loc 1 2732 0
 14591 0038 244B     		ldr	r3, .L705
 14592 003a 5B69     		ldr	r3, [r3, #20]
 14593 003c 1BB2     		sxth	r3, r3
 14594 003e BB81     		strh	r3, [r7, #12]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 337


 14595              	.L702:
2733:..\src/command_processing.c ****     }
2734:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 14596              		.loc 1 2734 0
 14597 0040 07F10C03 		add	r3, r7, #12
 14598 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14599 0046 3B71     		strb	r3, [r7, #4]
2735:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 14600              		.loc 1 2735 0
 14601 0048 07F10C03 		add	r3, r7, #12
 14602 004c 0133     		adds	r3, r3, #1
 14603 004e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14604 0050 FB70     		strb	r3, [r7, #3]
2736:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2737:..\src/command_processing.c **** 
2738:..\src/command_processing.c ****     // Positions
2739:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 14605              		.loc 1 2739 0
 14606 0052 0323     		movs	r3, #3
 14607 0054 FB73     		strb	r3, [r7, #15]
 14608 0056 23E0     		b	.L703
 14609              	.L704:
2740:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 14610              		.loc 1 2740 0
 14611 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14612 005a 1C4A     		ldr	r2, .L705
 14613 005c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 14614 0060 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 14615 0062 1C49     		ldr	r1, .L705+8
 14616 0064 0A44     		add	r2, r2, r1
 14617 0066 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14618 006a 1341     		asrs	r3, r3, r2
 14619 006c 1BB2     		sxth	r3, r3
 14620 006e BB81     		strh	r3, [r7, #12]	@ movhi
2741:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 14621              		.loc 1 2741 0
 14622 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14623 0072 5B00     		lsls	r3, r3, #1
 14624 0074 0633     		adds	r3, r3, #6
 14625 0076 07F10C02 		add	r2, r7, #12
 14626 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 14627 007c 07F11001 		add	r1, r7, #16
 14628 0080 0B44     		add	r3, r3, r1
 14629 0082 03F8102C 		strb	r2, [r3, #-16]
2742:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 14630              		.loc 1 2742 0
 14631 0086 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14632 0088 5B00     		lsls	r3, r3, #1
 14633 008a 5A1D     		adds	r2, r3, #5
 14634 008c 07F10C03 		add	r3, r7, #12
 14635 0090 0133     		adds	r3, r3, #1
 14636 0092 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 14637 0094 07F11003 		add	r3, r7, #16
 14638 0098 1344     		add	r3, r3, r2
 14639 009a 0A46     		mov	r2, r1
 14640 009c 03F8102C 		strb	r2, [r3, #-16]
 14641              	.L703:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 338


2739:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 14642              		.loc 1 2739 0 discriminator 1
 14643 00a0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 14644 00a2 5A1E     		subs	r2, r3, #1
 14645 00a4 FA73     		strb	r2, [r7, #15]
 14646 00a6 002B     		cmp	r3, #0
 14647 00a8 D6D1     		bne	.L704
2743:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 5]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2744:..\src/command_processing.c ****     }
2745:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2746:..\src/command_processing.c ****         
2747:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 14648              		.loc 1 2747 0
 14649 00aa 3B46     		mov	r3, r7
 14650 00ac 0B21     		movs	r1, #11
 14651 00ae 1846     		mov	r0, r3
 14652 00b0 FFF7FEFF 		bl	LCRChecksum
 14653 00b4 0346     		mov	r3, r0
 14654 00b6 FB72     		strb	r3, [r7, #11]
2748:..\src/command_processing.c ****     commWrite(packet_data, 12);
 14655              		.loc 1 2748 0
 14656 00b8 3B46     		mov	r3, r7
 14657 00ba 0C21     		movs	r1, #12
 14658 00bc 1846     		mov	r0, r3
 14659 00be FFF7FEFF 		bl	commWrite
2749:..\src/command_processing.c ****    
2750:..\src/command_processing.c **** }
 14660              		.loc 1 2750 0
 14661 00c2 00BF     		nop
 14662 00c4 1037     		adds	r7, r7, #16
 14663              		.cfi_def_cfa_offset 8
 14664 00c6 BD46     		mov	sp, r7
 14665              		.cfi_def_cfa_register 13
 14666              		@ sp needed
 14667 00c8 80BD     		pop	{r7, pc}
 14668              	.L706:
 14669 00ca 00BF     		.align	2
 14670              	.L705:
 14671 00cc 00000000 		.word	g_measOld
 14672 00d0 00000000 		.word	c_mem
 14673 00d4 00000000 		.word	g_mem
 14674              		.cfi_endproc
 14675              	.LFE93:
 14676              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 14677              		.section	.text.cmd_get_currents,"ax",%progbits
 14678              		.align	2
 14679              		.global	cmd_get_currents
 14680              		.thumb
 14681              		.thumb_func
 14682              		.type	cmd_get_currents, %function
 14683              	cmd_get_currents:
 14684              	.LFB94:
2751:..\src/command_processing.c **** 
2752:..\src/command_processing.c **** void cmd_get_currents(){
 14685              		.loc 1 2752 0
 14686              		.cfi_startproc
 14687              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 339


 14688              		@ frame_needed = 1, uses_anonymous_args = 0
 14689 0000 80B5     		push	{r7, lr}
 14690              		.cfi_def_cfa_offset 8
 14691              		.cfi_offset 7, -8
 14692              		.cfi_offset 14, -4
 14693 0002 84B0     		sub	sp, sp, #16
 14694              		.cfi_def_cfa_offset 24
 14695 0004 00AF     		add	r7, sp, #0
 14696              		.cfi_def_cfa_register 7
2753:..\src/command_processing.c ****     
2754:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2755:..\src/command_processing.c ****     
2756:..\src/command_processing.c ****     uint8 packet_data[6]; 
2757:..\src/command_processing.c ****     int16 aux_int16;
2758:..\src/command_processing.c ****     
2759:..\src/command_processing.c ****     //Header package
2760:..\src/command_processing.c **** 
2761:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 14697              		.loc 1 2761 0
 14698 0006 8523     		movs	r3, #133
 14699 0008 3B72     		strb	r3, [r7, #8]
2762:..\src/command_processing.c **** 
2763:..\src/command_processing.c ****     // Currents
2764:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr[0]; //Real current
 14700              		.loc 1 2764 0
 14701 000a 194B     		ldr	r3, .L710
 14702 000c DB68     		ldr	r3, [r3, #12]
 14703 000e 1BB2     		sxth	r3, r3
 14704 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2765:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 14705              		.loc 1 2765 0
 14706 0012 BB1D     		adds	r3, r7, #6
 14707 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14708 0016 BB72     		strb	r3, [r7, #10]
2766:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 14709              		.loc 1 2766 0
 14710 0018 BB1D     		adds	r3, r7, #6
 14711 001a 0133     		adds	r3, r3, #1
 14712 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14713 001e 7B72     		strb	r3, [r7, #9]
2767:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2768:..\src/command_processing.c ****     
2769:..\src/command_processing.c ****     if (c_mem.use_2nd_motor_flag == TRUE) {
 14714              		.loc 1 2769 0
 14715 0020 144B     		ldr	r3, .L710+4
 14716 0022 93F88131 		ldrb	r3, [r3, #385]	@ zero_extendqisi2
 14717 0026 012B     		cmp	r3, #1
 14718 0028 04D1     		bne	.L708
2770:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld.curr[1]; //Real current motor 2
 14719              		.loc 1 2770 0
 14720 002a 114B     		ldr	r3, .L710
 14721 002c 1B69     		ldr	r3, [r3, #16]
 14722 002e 1BB2     		sxth	r3, r3
 14723 0030 FB80     		strh	r3, [r7, #6]	@ movhi
 14724 0032 03E0     		b	.L709
 14725              	.L708:
2771:..\src/command_processing.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 340


2772:..\src/command_processing.c ****     else {
2773:..\src/command_processing.c ****         aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 14726              		.loc 1 2773 0
 14727 0034 0E4B     		ldr	r3, .L710
 14728 0036 5B69     		ldr	r3, [r3, #20]
 14729 0038 1BB2     		sxth	r3, r3
 14730 003a FB80     		strh	r3, [r7, #6]	@ movhi
 14731              	.L709:
2774:..\src/command_processing.c ****     }
2775:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 14732              		.loc 1 2775 0
 14733 003c BB1D     		adds	r3, r7, #6
 14734 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14735 0040 3B73     		strb	r3, [r7, #12]
2776:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 14736              		.loc 1 2776 0
 14737 0042 BB1D     		adds	r3, r7, #6
 14738 0044 0133     		adds	r3, r3, #1
 14739 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14740 0048 FB72     		strb	r3, [r7, #11]
2777:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2778:..\src/command_processing.c **** 
2779:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2780:..\src/command_processing.c **** 
2781:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 14741              		.loc 1 2781 0
 14742 004a 07F10803 		add	r3, r7, #8
 14743 004e 0521     		movs	r1, #5
 14744 0050 1846     		mov	r0, r3
 14745 0052 FFF7FEFF 		bl	LCRChecksum
 14746 0056 0346     		mov	r3, r0
 14747 0058 7B73     		strb	r3, [r7, #13]
2782:..\src/command_processing.c ****     
2783:..\src/command_processing.c ****     commWrite(packet_data, 6);
 14748              		.loc 1 2783 0
 14749 005a 07F10803 		add	r3, r7, #8
 14750 005e 0621     		movs	r1, #6
 14751 0060 1846     		mov	r0, r3
 14752 0062 FFF7FEFF 		bl	commWrite
2784:..\src/command_processing.c **** }
 14753              		.loc 1 2784 0
 14754 0066 00BF     		nop
 14755 0068 1037     		adds	r7, r7, #16
 14756              		.cfi_def_cfa_offset 8
 14757 006a BD46     		mov	sp, r7
 14758              		.cfi_def_cfa_register 13
 14759              		@ sp needed
 14760 006c 80BD     		pop	{r7, pc}
 14761              	.L711:
 14762 006e 00BF     		.align	2
 14763              	.L710:
 14764 0070 00000000 		.word	g_measOld
 14765 0074 00000000 		.word	c_mem
 14766              		.cfi_endproc
 14767              	.LFE94:
 14768              		.size	cmd_get_currents, .-cmd_get_currents
 14769              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 341


 14770              		.align	2
 14771              		.global	cmd_get_currents_for_cuff
 14772              		.thumb
 14773              		.thumb_func
 14774              		.type	cmd_get_currents_for_cuff, %function
 14775              	cmd_get_currents_for_cuff:
 14776              	.LFB95:
2785:..\src/command_processing.c **** 
2786:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 14777              		.loc 1 2786 0
 14778              		.cfi_startproc
 14779              		@ args = 0, pretend = 0, frame = 8
 14780              		@ frame_needed = 1, uses_anonymous_args = 0
 14781 0000 80B5     		push	{r7, lr}
 14782              		.cfi_def_cfa_offset 8
 14783              		.cfi_offset 7, -8
 14784              		.cfi_offset 14, -4
 14785 0002 82B0     		sub	sp, sp, #8
 14786              		.cfi_def_cfa_offset 16
 14787 0004 00AF     		add	r7, sp, #0
 14788              		.cfi_def_cfa_register 7
2787:..\src/command_processing.c ****     
2788:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2789:..\src/command_processing.c ****     
2790:..\src/command_processing.c ****     uint8 packet_data[4]; 
2791:..\src/command_processing.c ****     int16 aux_int16;
2792:..\src/command_processing.c ****     
2793:..\src/command_processing.c ****     //Header package
2794:..\src/command_processing.c **** 
2795:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 14789              		.loc 1 2795 0
 14790 0006 8E23     		movs	r3, #142
 14791 0008 3B71     		strb	r3, [r7, #4]
2796:..\src/command_processing.c **** 
2797:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated Current
 14792              		.loc 1 2797 0
 14793 000a 0D4B     		ldr	r3, .L713
 14794 000c 5B69     		ldr	r3, [r3, #20]
 14795 000e 1BB2     		sxth	r3, r3
 14796 0010 7B80     		strh	r3, [r7, #2]	@ movhi
2798:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 14797              		.loc 1 2798 0
 14798 0012 BB1C     		adds	r3, r7, #2
 14799 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14800 0016 BB71     		strb	r3, [r7, #6]
2799:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 14801              		.loc 1 2799 0
 14802 0018 BB1C     		adds	r3, r7, #2
 14803 001a 0133     		adds	r3, r3, #1
 14804 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14805 001e 7B71     		strb	r3, [r7, #5]
2800:..\src/command_processing.c ****    // *((int16 *) &packet_data[1]) = (int16) g_measOld.estim_curr; //Estimated Current
2801:..\src/command_processing.c **** 
2802:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2803:..\src/command_processing.c **** 
2804:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
 14806              		.loc 1 2804 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 342


 14807 0020 3B1D     		adds	r3, r7, #4
 14808 0022 0321     		movs	r1, #3
 14809 0024 1846     		mov	r0, r3
 14810 0026 FFF7FEFF 		bl	LCRChecksum
 14811 002a 0346     		mov	r3, r0
 14812 002c FB71     		strb	r3, [r7, #7]
2805:..\src/command_processing.c ****     
2806:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 14813              		.loc 1 2806 0
 14814 002e 3B1D     		adds	r3, r7, #4
 14815 0030 0421     		movs	r1, #4
 14816 0032 1846     		mov	r0, r3
 14817 0034 FFF7FEFF 		bl	commWrite_to_cuff
2807:..\src/command_processing.c **** }
 14818              		.loc 1 2807 0
 14819 0038 00BF     		nop
 14820 003a 0837     		adds	r7, r7, #8
 14821              		.cfi_def_cfa_offset 8
 14822 003c BD46     		mov	sp, r7
 14823              		.cfi_def_cfa_register 13
 14824              		@ sp needed
 14825 003e 80BD     		pop	{r7, pc}
 14826              	.L714:
 14827              		.align	2
 14828              	.L713:
 14829 0040 00000000 		.word	g_measOld
 14830              		.cfi_endproc
 14831              	.LFE95:
 14832              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 14833              		.section	.text.cmd_set_baudrate,"ax",%progbits
 14834              		.align	2
 14835              		.global	cmd_set_baudrate
 14836              		.thumb
 14837              		.thumb_func
 14838              		.type	cmd_set_baudrate, %function
 14839              	cmd_set_baudrate:
 14840              	.LFB96:
2808:..\src/command_processing.c **** 
2809:..\src/command_processing.c **** void cmd_set_baudrate(){
 14841              		.loc 1 2809 0
 14842              		.cfi_startproc
 14843              		@ args = 0, pretend = 0, frame = 0
 14844              		@ frame_needed = 1, uses_anonymous_args = 0
 14845 0000 80B5     		push	{r7, lr}
 14846              		.cfi_def_cfa_offset 8
 14847              		.cfi_offset 7, -8
 14848              		.cfi_offset 14, -4
 14849 0002 00AF     		add	r7, sp, #0
 14850              		.cfi_def_cfa_register 7
2810:..\src/command_processing.c ****     
2811:..\src/command_processing.c ****     // Set BaudRate
2812:..\src/command_processing.c ****     c_mem.baud_rate = g_rx.buffer[1];
 14851              		.loc 1 2812 0
 14852 0004 094B     		ldr	r3, .L720
 14853 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 14854 0008 094B     		ldr	r3, .L720+4
 14855 000a 83F83421 		strb	r2, [r3, #308]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 343


2813:..\src/command_processing.c ****     
2814:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 14856              		.loc 1 2814 0
 14857 000e 074B     		ldr	r3, .L720
 14858 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 14859 0012 0D2B     		cmp	r3, #13
 14860 0014 04D1     		bne	.L719
2815:..\src/command_processing.c ****         case 13:
2816:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 14861              		.loc 1 2816 0
 14862 0016 0121     		movs	r1, #1
 14863 0018 0C20     		movs	r0, #12
 14864 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
2817:..\src/command_processing.c ****             break;
 14865              		.loc 1 2817 0
 14866 001e 03E0     		b	.L718
 14867              	.L719:
2818:..\src/command_processing.c ****         default:
2819:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 14868              		.loc 1 2819 0
 14869 0020 0121     		movs	r1, #1
 14870 0022 0220     		movs	r0, #2
 14871 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 14872              	.L718:
2820:..\src/command_processing.c ****     }
2821:..\src/command_processing.c **** }
 14873              		.loc 1 2821 0
 14874 0028 00BF     		nop
 14875 002a 80BD     		pop	{r7, pc}
 14876              	.L721:
 14877              		.align	2
 14878              	.L720:
 14879 002c 00000000 		.word	g_rx
 14880 0030 00000000 		.word	c_mem
 14881              		.cfi_endproc
 14882              	.LFE96:
 14883              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 14884              		.section	.text.cmd_ping,"ax",%progbits
 14885              		.align	2
 14886              		.global	cmd_ping
 14887              		.thumb
 14888              		.thumb_func
 14889              		.type	cmd_ping, %function
 14890              	cmd_ping:
 14891              	.LFB97:
2822:..\src/command_processing.c **** 
2823:..\src/command_processing.c **** void cmd_ping(){
 14892              		.loc 1 2823 0
 14893              		.cfi_startproc
 14894              		@ args = 0, pretend = 0, frame = 8
 14895              		@ frame_needed = 1, uses_anonymous_args = 0
 14896 0000 80B5     		push	{r7, lr}
 14897              		.cfi_def_cfa_offset 8
 14898              		.cfi_offset 7, -8
 14899              		.cfi_offset 14, -4
 14900 0002 82B0     		sub	sp, sp, #8
 14901              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 344


 14902 0004 00AF     		add	r7, sp, #0
 14903              		.cfi_def_cfa_register 7
2824:..\src/command_processing.c **** 
2825:..\src/command_processing.c ****     uint8 packet_data[2];
2826:..\src/command_processing.c **** 
2827:..\src/command_processing.c ****     // Header
2828:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 14904              		.loc 1 2828 0
 14905 0006 0023     		movs	r3, #0
 14906 0008 3B71     		strb	r3, [r7, #4]
2829:..\src/command_processing.c ****     
2830:..\src/command_processing.c ****     // Load Payload
2831:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 14907              		.loc 1 2831 0
 14908 000a 0023     		movs	r3, #0
 14909 000c 7B71     		strb	r3, [r7, #5]
2832:..\src/command_processing.c **** 
2833:..\src/command_processing.c ****     // Send Package to uart
2834:..\src/command_processing.c ****     commWrite(packet_data, 2);
 14910              		.loc 1 2834 0
 14911 000e 3B1D     		adds	r3, r7, #4
 14912 0010 0221     		movs	r1, #2
 14913 0012 1846     		mov	r0, r3
 14914 0014 FFF7FEFF 		bl	commWrite
2835:..\src/command_processing.c **** }
 14915              		.loc 1 2835 0
 14916 0018 00BF     		nop
 14917 001a 0837     		adds	r7, r7, #8
 14918              		.cfi_def_cfa_offset 8
 14919 001c BD46     		mov	sp, r7
 14920              		.cfi_def_cfa_register 13
 14921              		@ sp needed
 14922 001e 80BD     		pop	{r7, pc}
 14923              		.cfi_endproc
 14924              	.LFE97:
 14925              		.size	cmd_ping, .-cmd_ping
 14926              		.section	.text.cmd_get_inputs,"ax",%progbits
 14927              		.align	2
 14928              		.global	cmd_get_inputs
 14929              		.thumb
 14930              		.thumb_func
 14931              		.type	cmd_get_inputs, %function
 14932              	cmd_get_inputs:
 14933              	.LFB98:
2836:..\src/command_processing.c **** 
2837:..\src/command_processing.c **** void cmd_get_inputs(){
 14934              		.loc 1 2837 0
 14935              		.cfi_startproc
 14936              		@ args = 0, pretend = 0, frame = 16
 14937              		@ frame_needed = 1, uses_anonymous_args = 0
 14938 0000 80B5     		push	{r7, lr}
 14939              		.cfi_def_cfa_offset 8
 14940              		.cfi_offset 7, -8
 14941              		.cfi_offset 14, -4
 14942 0002 84B0     		sub	sp, sp, #16
 14943              		.cfi_def_cfa_offset 24
 14944 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 345


 14945              		.cfi_def_cfa_register 7
2838:..\src/command_processing.c **** 
2839:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2840:..\src/command_processing.c **** 
2841:..\src/command_processing.c ****     uint8 packet_data[6]; 
2842:..\src/command_processing.c ****     int16 aux_int16;
2843:..\src/command_processing.c ****     
2844:..\src/command_processing.c ****     //Header package
2845:..\src/command_processing.c **** 
2846:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 14946              		.loc 1 2846 0
 14947 0006 8323     		movs	r3, #131
 14948 0008 3B72     		strb	r3, [r7, #8]
2847:..\src/command_processing.c ****         
2848:..\src/command_processing.c ****     aux_int16 = (int16) (g_refOld.pos  >> g_mem.res[0]);
 14949              		.loc 1 2848 0
 14950 000a 104B     		ldr	r3, .L724
 14951 000c 1B68     		ldr	r3, [r3]
 14952 000e 104A     		ldr	r2, .L724+4
 14953 0010 92F8D720 		ldrb	r2, [r2, #215]	@ zero_extendqisi2
 14954 0014 1341     		asrs	r3, r3, r2
 14955 0016 1BB2     		sxth	r3, r3
 14956 0018 FB80     		strh	r3, [r7, #6]	@ movhi
2849:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 14957              		.loc 1 2849 0
 14958 001a BB1D     		adds	r3, r7, #6
 14959 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14960 001e BB72     		strb	r3, [r7, #10]
2850:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 14961              		.loc 1 2850 0
 14962 0020 BB1D     		adds	r3, r7, #6
 14963 0022 0133     		adds	r3, r3, #1
 14964 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 14965 0026 7B72     		strb	r3, [r7, #9]
2851:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) (g_refOld.pos  >> g_mem.res[0]);
2852:..\src/command_processing.c ****     
2853:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2854:..\src/command_processing.c **** 
2855:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 14966              		.loc 1 2855 0
 14967 0028 07F10803 		add	r3, r7, #8
 14968 002c 0521     		movs	r1, #5
 14969 002e 1846     		mov	r0, r3
 14970 0030 FFF7FEFF 		bl	LCRChecksum
 14971 0034 0346     		mov	r3, r0
 14972 0036 7B73     		strb	r3, [r7, #13]
2856:..\src/command_processing.c **** 
2857:..\src/command_processing.c ****     commWrite(packet_data, 6);
 14973              		.loc 1 2857 0
 14974 0038 07F10803 		add	r3, r7, #8
 14975 003c 0621     		movs	r1, #6
 14976 003e 1846     		mov	r0, r3
 14977 0040 FFF7FEFF 		bl	commWrite
2858:..\src/command_processing.c **** }
 14978              		.loc 1 2858 0
 14979 0044 00BF     		nop
 14980 0046 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 346


 14981              		.cfi_def_cfa_offset 8
 14982 0048 BD46     		mov	sp, r7
 14983              		.cfi_def_cfa_register 13
 14984              		@ sp needed
 14985 004a 80BD     		pop	{r7, pc}
 14986              	.L725:
 14987              		.align	2
 14988              	.L724:
 14989 004c 00000000 		.word	g_refOld
 14990 0050 00000000 		.word	g_mem
 14991              		.cfi_endproc
 14992              	.LFE98:
 14993              		.size	cmd_get_inputs, .-cmd_get_inputs
 14994              		.section	.text.cmd_store_params,"ax",%progbits
 14995              		.align	2
 14996              		.global	cmd_store_params
 14997              		.thumb
 14998              		.thumb_func
 14999              		.type	cmd_store_params, %function
 15000              	cmd_store_params:
 15001              	.LFB99:
2859:..\src/command_processing.c **** 
2860:..\src/command_processing.c **** void cmd_store_params(){
 15002              		.loc 1 2860 0
 15003              		.cfi_startproc
 15004              		@ args = 0, pretend = 0, frame = 16
 15005              		@ frame_needed = 1, uses_anonymous_args = 0
 15006 0000 80B5     		push	{r7, lr}
 15007              		.cfi_def_cfa_offset 8
 15008              		.cfi_offset 7, -8
 15009              		.cfi_offset 14, -4
 15010 0002 84B0     		sub	sp, sp, #16
 15011              		.cfi_def_cfa_offset 24
 15012 0004 00AF     		add	r7, sp, #0
 15013              		.cfi_def_cfa_register 7
2861:..\src/command_processing.c ****     
2862:..\src/command_processing.c ****     // Check input mode enabled
2863:..\src/command_processing.c ****     uint32 off_1;
2864:..\src/command_processing.c ****     float mult_1;
2865:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 15014              		.loc 1 2865 0
 15015 0006 0223     		movs	r3, #2
 15016 0008 FB73     		strb	r3, [r7, #15]
2866:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
2867:..\src/command_processing.c ****     uint8 CYDATA old_id;
2868:..\src/command_processing.c ****     
2869:..\src/command_processing.c ****     if( c_mem.input_mode == INPUT_MODE_EXTERNAL ) {
 15017              		.loc 1 2869 0
 15018 000a 544B     		ldr	r3, .L737
 15019 000c 93F8D530 		ldrb	r3, [r3, #213]	@ zero_extendqisi2
 15020 0010 002B     		cmp	r3, #0
 15021 0012 56D1     		bne	.L727
2870:..\src/command_processing.c ****         off_1 = c_mem.m_off[0];
 15022              		.loc 1 2870 0
 15023 0014 514B     		ldr	r3, .L737
 15024 0016 D3F8DC30 		ldr	r3, [r3, #220]
 15025 001a BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 347


2871:..\src/command_processing.c ****         mult_1 = c_mem.m_mult[0];
 15026              		.loc 1 2871 0
 15027 001c 4F4B     		ldr	r3, .L737
 15028 001e D3F8E830 		ldr	r3, [r3, #232]	@ float
 15029 0022 7B60     		str	r3, [r7, #4]	@ float
2872:..\src/command_processing.c **** 
2873:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos / mult_1);
 15030              		.loc 1 2873 0
 15031 0024 4E4B     		ldr	r3, .L737+4
 15032 0026 1B68     		ldr	r3, [r3]
 15033 0028 1846     		mov	r0, r3
 15034 002a FFF7FEFF 		bl	__aeabi_i2f
 15035 002e 0346     		mov	r3, r0
 15036 0030 7968     		ldr	r1, [r7, #4]	@ float
 15037 0032 1846     		mov	r0, r3
 15038 0034 FFF7FEFF 		bl	__aeabi_fdiv
 15039 0038 0346     		mov	r3, r0
 15040 003a 1846     		mov	r0, r3
 15041 003c FFF7FEFF 		bl	__aeabi_f2iz
 15042 0040 0246     		mov	r2, r0
 15043 0042 474B     		ldr	r3, .L737+4
 15044 0044 1A60     		str	r2, [r3]
2874:..\src/command_processing.c **** 
2875:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos * g_mem.m_mult[0]);
 15045              		.loc 1 2875 0
 15046 0046 464B     		ldr	r3, .L737+4
 15047 0048 1B68     		ldr	r3, [r3]
 15048 004a 1846     		mov	r0, r3
 15049 004c FFF7FEFF 		bl	__aeabi_i2f
 15050 0050 0246     		mov	r2, r0
 15051 0052 444B     		ldr	r3, .L737+8
 15052 0054 D3F8E830 		ldr	r3, [r3, #232]	@ float
 15053 0058 1946     		mov	r1, r3
 15054 005a 1046     		mov	r0, r2
 15055 005c FFF7FEFF 		bl	__aeabi_fmul
 15056 0060 0346     		mov	r3, r0
 15057 0062 1846     		mov	r0, r3
 15058 0064 FFF7FEFF 		bl	__aeabi_f2iz
 15059 0068 0246     		mov	r2, r0
 15060 006a 3D4B     		ldr	r3, .L737+4
 15061 006c 1A60     		str	r2, [r3]
2876:..\src/command_processing.c **** 
2877:..\src/command_processing.c ****         g_refNew.pos += (g_mem.m_off[0] - off_1);
 15062              		.loc 1 2877 0
 15063 006e 3C4B     		ldr	r3, .L737+4
 15064 0070 1B68     		ldr	r3, [r3]
 15065 0072 1A46     		mov	r2, r3
 15066 0074 3B4B     		ldr	r3, .L737+8
 15067 0076 D3F8DC30 		ldr	r3, [r3, #220]
 15068 007a 1946     		mov	r1, r3
 15069 007c BB68     		ldr	r3, [r7, #8]
 15070 007e CB1A     		subs	r3, r1, r3
 15071 0080 1344     		add	r3, r3, r2
 15072 0082 1A46     		mov	r2, r3
 15073 0084 364B     		ldr	r3, .L737+4
 15074 0086 1A60     		str	r2, [r3]
2878:..\src/command_processing.c ****         
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 348


2879:..\src/command_processing.c ****         // Check position Limits
2880:..\src/command_processing.c **** 
2881:..\src/command_processing.c ****         if (c_mem.pos_lim_flag) {                   // position limiting
 15075              		.loc 1 2881 0
 15076 0088 344B     		ldr	r3, .L737
 15077 008a 93F8F430 		ldrb	r3, [r3, #244]	@ zero_extendqisi2
 15078 008e 002B     		cmp	r3, #0
 15079 0090 17D0     		beq	.L727
2882:..\src/command_processing.c ****             if (g_refNew.pos < c_mem.pos_lim_inf) 
 15080              		.loc 1 2882 0
 15081 0092 334B     		ldr	r3, .L737+4
 15082 0094 1A68     		ldr	r2, [r3]
 15083 0096 314B     		ldr	r3, .L737
 15084 0098 D3F8F830 		ldr	r3, [r3, #248]
 15085 009c 9A42     		cmp	r2, r3
 15086 009e 04DA     		bge	.L728
2883:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_inf;
 15087              		.loc 1 2883 0
 15088 00a0 2E4B     		ldr	r3, .L737
 15089 00a2 D3F8F830 		ldr	r3, [r3, #248]
 15090 00a6 2E4A     		ldr	r2, .L737+4
 15091 00a8 1360     		str	r3, [r2]
 15092              	.L728:
2884:..\src/command_processing.c **** 
2885:..\src/command_processing.c ****             if (g_refNew.pos > c_mem.pos_lim_sup) 
 15093              		.loc 1 2885 0
 15094 00aa 2D4B     		ldr	r3, .L737+4
 15095 00ac 1A68     		ldr	r2, [r3]
 15096 00ae 2B4B     		ldr	r3, .L737
 15097 00b0 D3F8FC30 		ldr	r3, [r3, #252]
 15098 00b4 9A42     		cmp	r2, r3
 15099 00b6 04DD     		ble	.L727
2886:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_sup;
 15100              		.loc 1 2886 0
 15101 00b8 284B     		ldr	r3, .L737
 15102 00ba D3F8FC30 		ldr	r3, [r3, #252]
 15103 00be 284A     		ldr	r2, .L737+4
 15104 00c0 1360     		str	r3, [r2]
 15105              	.L727:
2887:..\src/command_processing.c ****         }
2888:..\src/command_processing.c ****     }
2889:..\src/command_processing.c ****     
2890:..\src/command_processing.c ****     // If SD is used, create new param and data file
2891:..\src/command_processing.c ****     if (c_mem.read_exp_port_flag == EXP_SD_RTC) {
 15106              		.loc 1 2891 0
 15107 00c2 264B     		ldr	r3, .L737
 15108 00c4 93F84831 		ldrb	r3, [r3, #328]	@ zero_extendqisi2
 15109 00c8 012B     		cmp	r3, #1
 15110 00ca 06D1     		bne	.L729
2892:..\src/command_processing.c ****         FS_FClose(pFile);
 15111              		.loc 1 2892 0
 15112 00cc 264B     		ldr	r3, .L737+12
 15113 00ce 1B68     		ldr	r3, [r3]
 15114 00d0 1846     		mov	r0, r3
 15115 00d2 FFF7FEFF 		bl	FS_FClose
2893:..\src/command_processing.c ****         
2894:..\src/command_processing.c ****         InitSD_FS();
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 349


 15116              		.loc 1 2894 0
 15117 00d6 FFF7FEFF 		bl	InitSD_FS
 15118              	.L729:
2895:..\src/command_processing.c ****     }
2896:..\src/command_processing.c ****     
2897:..\src/command_processing.c ****     // Store params 
2898:..\src/command_processing.c **** 
2899:..\src/command_processing.c ****     if (c_mem.id != g_mem.id) {     //If a new id is going to be set we will lose communication 
 15119              		.loc 1 2899 0
 15120 00da 204B     		ldr	r3, .L737
 15121 00dc 93F8A120 		ldrb	r2, [r3, #161]	@ zero_extendqisi2
 15122 00e0 204B     		ldr	r3, .L737+8
 15123 00e2 93F8A130 		ldrb	r3, [r3, #161]	@ zero_extendqisi2
 15124 00e6 9A42     		cmp	r2, r3
 15125 00e8 21D0     		beq	.L730
2900:..\src/command_processing.c ****         old_id = c_mem.id;          //after the memstore(0) and the ACK won't be recognised
 15126              		.loc 1 2900 0
 15127 00ea 1C4B     		ldr	r3, .L737
 15128 00ec 93F8A130 		ldrb	r3, [r3, #161]
 15129 00f0 FB70     		strb	r3, [r7, #3]
2901:..\src/command_processing.c ****         if(memStore(0)) {
 15130              		.loc 1 2901 0
 15131 00f2 0020     		movs	r0, #0
 15132 00f4 FFF7FEFF 		bl	memStore
 15133 00f8 0346     		mov	r3, r0
 15134 00fa 002B     		cmp	r3, #0
 15135 00fc 0BD0     		beq	.L731
2902:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 15136              		.loc 1 2902 0
 15137 00fe 0123     		movs	r3, #1
 15138 0100 3B70     		strb	r3, [r7]
2903:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 15139              		.loc 1 2903 0
 15140 0102 0123     		movs	r3, #1
 15141 0104 7B70     		strb	r3, [r7, #1]
2904:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 15142              		.loc 1 2904 0
 15143 0106 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 15144 0108 99B2     		uxth	r1, r3
 15145 010a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 15146 010c 3B46     		mov	r3, r7
 15147 010e 1846     		mov	r0, r3
 15148 0110 FFF7FEFF 		bl	commWrite_old_id
 15149 0114 18E0     		b	.L733
 15150              	.L731:
2905:..\src/command_processing.c ****         }    
2906:..\src/command_processing.c ****         else{
2907:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
 15151              		.loc 1 2907 0
 15152 0116 0023     		movs	r3, #0
 15153 0118 3B70     		strb	r3, [r7]
2908:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 15154              		.loc 1 2908 0
 15155 011a 0023     		movs	r3, #0
 15156 011c 7B70     		strb	r3, [r7, #1]
2909:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 15157              		.loc 1 2909 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 350


 15158 011e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 15159 0120 99B2     		uxth	r1, r3
 15160 0122 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 15161 0124 3B46     		mov	r3, r7
 15162 0126 1846     		mov	r0, r3
 15163 0128 FFF7FEFF 		bl	commWrite_old_id
 15164 012c 0CE0     		b	.L733
 15165              	.L730:
2910:..\src/command_processing.c ****         }
2911:..\src/command_processing.c ****     }    
2912:..\src/command_processing.c ****     else {
2913:..\src/command_processing.c ****         if(memStore(0))
 15166              		.loc 1 2913 0
 15167 012e 0020     		movs	r0, #0
 15168 0130 FFF7FEFF 		bl	memStore
 15169 0134 0346     		mov	r3, r0
 15170 0136 002B     		cmp	r3, #0
 15171 0138 03D0     		beq	.L734
2914:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 15172              		.loc 1 2914 0
 15173 013a 0120     		movs	r0, #1
 15174 013c FFF7FEFF 		bl	sendAcknowledgment
 15175 0140 02E0     		b	.L733
 15176              	.L734:
2915:..\src/command_processing.c ****         else
2916:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
 15177              		.loc 1 2916 0
 15178 0142 0020     		movs	r0, #0
 15179 0144 FFF7FEFF 		bl	sendAcknowledgment
 15180              	.L733:
2917:..\src/command_processing.c ****     }
2918:..\src/command_processing.c ****     
2919:..\src/command_processing.c ****     // FW reset (if necessary)
2920:..\src/command_processing.c ****     if (reset_PSoC_flag == TRUE) {
 15181              		.loc 1 2920 0
 15182 0148 084B     		ldr	r3, .L737+16
 15183 014a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15184 014c 012B     		cmp	r3, #1
 15185 014e 01D1     		bne	.L736
2921:..\src/command_processing.c ****         CySoftwareReset();
 15186              		.loc 1 2921 0
 15187 0150 FFF7FEFF 		bl	CySoftwareReset
 15188              	.L736:
2922:..\src/command_processing.c ****     }
2923:..\src/command_processing.c **** }
 15189              		.loc 1 2923 0
 15190 0154 00BF     		nop
 15191 0156 1037     		adds	r7, r7, #16
 15192              		.cfi_def_cfa_offset 8
 15193 0158 BD46     		mov	sp, r7
 15194              		.cfi_def_cfa_register 13
 15195              		@ sp needed
 15196 015a 80BD     		pop	{r7, pc}
 15197              	.L738:
 15198              		.align	2
 15199              	.L737:
 15200 015c 00000000 		.word	c_mem
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 351


 15201 0160 00000000 		.word	g_refNew
 15202 0164 00000000 		.word	g_mem
 15203 0168 00000000 		.word	pFile
 15204 016c 00000000 		.word	reset_PSoC_flag
 15205              		.cfi_endproc
 15206              	.LFE99:
 15207              		.size	cmd_store_params, .-cmd_store_params
 15208              		.section	.text.cmd_get_emg,"ax",%progbits
 15209              		.align	2
 15210              		.global	cmd_get_emg
 15211              		.thumb
 15212              		.thumb_func
 15213              		.type	cmd_get_emg, %function
 15214              	cmd_get_emg:
 15215              	.LFB100:
2924:..\src/command_processing.c **** 
2925:..\src/command_processing.c **** void cmd_get_emg(){
 15216              		.loc 1 2925 0
 15217              		.cfi_startproc
 15218              		@ args = 0, pretend = 0, frame = 16
 15219              		@ frame_needed = 1, uses_anonymous_args = 0
 15220 0000 80B5     		push	{r7, lr}
 15221              		.cfi_def_cfa_offset 8
 15222              		.cfi_offset 7, -8
 15223              		.cfi_offset 14, -4
 15224 0002 84B0     		sub	sp, sp, #16
 15225              		.cfi_def_cfa_offset 24
 15226 0004 00AF     		add	r7, sp, #0
 15227              		.cfi_def_cfa_register 7
2926:..\src/command_processing.c ****     
2927:..\src/command_processing.c ****     uint8 packet_data[6];
2928:..\src/command_processing.c ****     int16 aux_int16;
2929:..\src/command_processing.c ****     
2930:..\src/command_processing.c ****     // Header        
2931:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 15228              		.loc 1 2931 0
 15229 0006 8823     		movs	r3, #136
 15230 0008 3B72     		strb	r3, [r7, #8]
2932:..\src/command_processing.c ****     
2933:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[0];
 15231              		.loc 1 2933 0
 15232 000a 144B     		ldr	r3, .L740
 15233 000c DB69     		ldr	r3, [r3, #28]
 15234 000e 1BB2     		sxth	r3, r3
 15235 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2934:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 15236              		.loc 1 2934 0
 15237 0012 BB1D     		adds	r3, r7, #6
 15238 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15239 0016 BB72     		strb	r3, [r7, #10]
2935:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 15240              		.loc 1 2935 0
 15241 0018 BB1D     		adds	r3, r7, #6
 15242 001a 0133     		adds	r3, r3, #1
 15243 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15244 001e 7B72     		strb	r3, [r7, #9]
2936:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.emg[0];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 352


2937:..\src/command_processing.c ****     
2938:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[1];
 15245              		.loc 1 2938 0
 15246 0020 0E4B     		ldr	r3, .L740
 15247 0022 1B6A     		ldr	r3, [r3, #32]
 15248 0024 1BB2     		sxth	r3, r3
 15249 0026 FB80     		strh	r3, [r7, #6]	@ movhi
2939:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 15250              		.loc 1 2939 0
 15251 0028 BB1D     		adds	r3, r7, #6
 15252 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15253 002c 3B73     		strb	r3, [r7, #12]
2940:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 15254              		.loc 1 2940 0
 15255 002e BB1D     		adds	r3, r7, #6
 15256 0030 0133     		adds	r3, r3, #1
 15257 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15258 0034 FB72     		strb	r3, [r7, #11]
2941:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.emg[1];
2942:..\src/command_processing.c **** 
2943:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 15259              		.loc 1 2943 0
 15260 0036 07F10803 		add	r3, r7, #8
 15261 003a 0521     		movs	r1, #5
 15262 003c 1846     		mov	r0, r3
 15263 003e FFF7FEFF 		bl	LCRChecksum
 15264 0042 0346     		mov	r3, r0
 15265 0044 7B73     		strb	r3, [r7, #13]
2944:..\src/command_processing.c **** 
2945:..\src/command_processing.c ****     commWrite(packet_data, 6);
 15266              		.loc 1 2945 0
 15267 0046 07F10803 		add	r3, r7, #8
 15268 004a 0621     		movs	r1, #6
 15269 004c 1846     		mov	r0, r3
 15270 004e FFF7FEFF 		bl	commWrite
2946:..\src/command_processing.c **** 
2947:..\src/command_processing.c **** }
 15271              		.loc 1 2947 0
 15272 0052 00BF     		nop
 15273 0054 1037     		adds	r7, r7, #16
 15274              		.cfi_def_cfa_offset 8
 15275 0056 BD46     		mov	sp, r7
 15276              		.cfi_def_cfa_register 13
 15277              		@ sp needed
 15278 0058 80BD     		pop	{r7, pc}
 15279              	.L741:
 15280 005a 00BF     		.align	2
 15281              	.L740:
 15282 005c 00000000 		.word	g_measOld
 15283              		.cfi_endproc
 15284              	.LFE100:
 15285              		.size	cmd_get_emg, .-cmd_get_emg
 15286              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 15287              		.align	2
 15288              		.global	cmd_get_imu_readings
 15289              		.thumb
 15290              		.thumb_func
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 353


 15291              		.type	cmd_get_imu_readings, %function
 15292              	cmd_get_imu_readings:
 15293              	.LFB101:
2948:..\src/command_processing.c **** 
2949:..\src/command_processing.c **** void cmd_get_imu_readings(){
 15294              		.loc 1 2949 0
 15295              		.cfi_startproc
 15296              		@ args = 0, pretend = 0, frame = 400
 15297              		@ frame_needed = 1, uses_anonymous_args = 0
 15298 0000 90B5     		push	{r4, r7, lr}
 15299              		.cfi_def_cfa_offset 12
 15300              		.cfi_offset 4, -12
 15301              		.cfi_offset 7, -8
 15302              		.cfi_offset 14, -4
 15303 0002 E5B0     		sub	sp, sp, #404
 15304              		.cfi_def_cfa_offset 416
 15305 0004 00AF     		add	r7, sp, #0
 15306              		.cfi_def_cfa_register 7
2950:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes, magnetometers, quaternions and temperatures readings
2951:..\src/command_processing.c ****     
2952:..\src/command_processing.c ****     uint8 k_imu;
2953:..\src/command_processing.c ****     uint16 c = 1;
 15307              		.loc 1 2953 0
 15308 0006 0123     		movs	r3, #1
 15309 0008 A7F88C31 		strh	r3, [r7, #396]	@ movhi
2954:..\src/command_processing.c ****     uint8 k = 0;
 15310              		.loc 1 2954 0
 15311 000c 0023     		movs	r3, #0
 15312 000e 87F88B31 		strb	r3, [r7, #395]
2955:..\src/command_processing.c ****     uint16 gl_c = 1;
 15313              		.loc 1 2955 0
 15314 0012 0123     		movs	r3, #1
 15315 0014 A7F88831 		strh	r3, [r7, #392]	@ movhi
2956:..\src/command_processing.c ****     int16 aux_int16;
2957:..\src/command_processing.c ****     float aux_float;
2958:..\src/command_processing.c ****     
2959:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
2960:..\src/command_processing.c ****     uint8 packet_data[350];
2961:..\src/command_processing.c ****     uint8 single_packet[32];
2962:..\src/command_processing.c ****     
2963:..\src/command_processing.c ****     //Header package 
2964:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 15316              		.loc 1 2964 0
 15317 0018 07F12003 		add	r3, r7, #32
 15318 001c A122     		movs	r2, #161
 15319 001e 1A70     		strb	r2, [r3]
2965:..\src/command_processing.c ****  
2966:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 15320              		.loc 1 2966 0
 15321 0020 0023     		movs	r3, #0
 15322 0022 87F88F31 		strb	r3, [r7, #399]
 15323 0026 82E2     		b	.L743
 15324              	.L759:
2967:..\src/command_processing.c ****     {	
2968:..\src/command_processing.c ****         
2969:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 15325              		.loc 1 2969 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 354


 15326 0028 3B46     		mov	r3, r7
 15327 002a 3A22     		movs	r2, #58
 15328 002c 1A70     		strb	r2, [r3]
2970:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][0]){
 15329              		.loc 1 2970 0
 15330 002e 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15331 0032 DB4A     		ldr	r2, .L760
 15332 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15333 0036 1946     		mov	r1, r3
 15334 0038 DA4A     		ldr	r2, .L760+4
 15335 003a 0B46     		mov	r3, r1
 15336 003c 9B00     		lsls	r3, r3, #2
 15337 003e 0B44     		add	r3, r3, r1
 15338 0040 1344     		add	r3, r3, r2
 15339 0042 03F25113 		addw	r3, r3, #337
 15340 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15341 0048 002B     		cmp	r3, #0
 15342 004a 5DD0     		beq	.L744
2971:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 15343              		.loc 1 2971 0
 15344 004c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15345 0050 D549     		ldr	r1, .L760+8
 15346 0052 1346     		mov	r3, r2
 15347 0054 9B00     		lsls	r3, r3, #2
 15348 0056 1344     		add	r3, r3, r2
 15349 0058 DB00     		lsls	r3, r3, #3
 15350 005a 0B44     		add	r3, r3, r1
 15351 005c 0233     		adds	r3, r3, #2
 15352 005e B3F90030 		ldrsh	r3, [r3]
 15353 0062 A7F88631 		strh	r3, [r7, #390]	@ movhi
2972:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 15354              		.loc 1 2972 0
 15355 0066 B7F88C31 		ldrh	r3, [r7, #396]
 15356 006a 0133     		adds	r3, r3, #1
 15357 006c 07F5C372 		add	r2, r7, #390
 15358 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15359 0072 3A46     		mov	r2, r7
 15360 0074 D154     		strb	r1, [r2, r3]
2973:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 15361              		.loc 1 2973 0
 15362 0076 B7F88C21 		ldrh	r2, [r7, #396]
 15363 007a 07F5C373 		add	r3, r7, #390
 15364 007e 0133     		adds	r3, r3, #1
 15365 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15366 0082 3B46     		mov	r3, r7
 15367 0084 9954     		strb	r1, [r3, r2]
2974:..\src/command_processing.c ****             //*((int16 *) &single_packet[c]) = (int16) g_imu[k_imu].accel_value[0];
2975:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 15368              		.loc 1 2975 0
 15369 0086 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15370 008a C749     		ldr	r1, .L760+8
 15371 008c 1346     		mov	r3, r2
 15372 008e 9B00     		lsls	r3, r3, #2
 15373 0090 1344     		add	r3, r3, r2
 15374 0092 DB00     		lsls	r3, r3, #3
 15375 0094 0B44     		add	r3, r3, r1
 15376 0096 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 355


 15377 0098 B3F90030 		ldrsh	r3, [r3]
 15378 009c A7F88631 		strh	r3, [r7, #390]	@ movhi
2976:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 15379              		.loc 1 2976 0
 15380 00a0 B7F88C31 		ldrh	r3, [r7, #396]
 15381 00a4 0333     		adds	r3, r3, #3
 15382 00a6 07F5C372 		add	r2, r7, #390
 15383 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15384 00ac 3A46     		mov	r2, r7
 15385 00ae D154     		strb	r1, [r2, r3]
2977:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 15386              		.loc 1 2977 0
 15387 00b0 B7F88C31 		ldrh	r3, [r7, #396]
 15388 00b4 9A1C     		adds	r2, r3, #2
 15389 00b6 07F5C373 		add	r3, r7, #390
 15390 00ba 0133     		adds	r3, r3, #1
 15391 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15392 00be 3B46     		mov	r3, r7
 15393 00c0 9954     		strb	r1, [r3, r2]
2978:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].accel_value[1];
2979:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 15394              		.loc 1 2979 0
 15395 00c2 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15396 00c6 B849     		ldr	r1, .L760+8
 15397 00c8 1346     		mov	r3, r2
 15398 00ca 9B00     		lsls	r3, r3, #2
 15399 00cc 1344     		add	r3, r3, r2
 15400 00ce DB00     		lsls	r3, r3, #3
 15401 00d0 0B44     		add	r3, r3, r1
 15402 00d2 0633     		adds	r3, r3, #6
 15403 00d4 B3F90030 		ldrsh	r3, [r3]
 15404 00d8 A7F88631 		strh	r3, [r7, #390]	@ movhi
2980:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 15405              		.loc 1 2980 0
 15406 00dc B7F88C31 		ldrh	r3, [r7, #396]
 15407 00e0 0533     		adds	r3, r3, #5
 15408 00e2 07F5C372 		add	r2, r7, #390
 15409 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15410 00e8 3A46     		mov	r2, r7
 15411 00ea D154     		strb	r1, [r2, r3]
2981:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 15412              		.loc 1 2981 0
 15413 00ec B7F88C31 		ldrh	r3, [r7, #396]
 15414 00f0 1A1D     		adds	r2, r3, #4
 15415 00f2 07F5C373 		add	r3, r7, #390
 15416 00f6 0133     		adds	r3, r3, #1
 15417 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15418 00fa 3B46     		mov	r3, r7
 15419 00fc 9954     		strb	r1, [r3, r2]
2982:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].accel_value[2];
2983:..\src/command_processing.c ****             c = c + 6;
 15420              		.loc 1 2983 0
 15421 00fe B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 15422 0102 0633     		adds	r3, r3, #6
 15423 0104 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 15424              	.L744:
2984:..\src/command_processing.c ****         }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 356


2985:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][1]){
 15425              		.loc 1 2985 0
 15426 0108 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15427 010c A44A     		ldr	r2, .L760
 15428 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15429 0110 1946     		mov	r1, r3
 15430 0112 A44A     		ldr	r2, .L760+4
 15431 0114 0B46     		mov	r3, r1
 15432 0116 9B00     		lsls	r3, r3, #2
 15433 0118 0B44     		add	r3, r3, r1
 15434 011a 1344     		add	r3, r3, r2
 15435 011c 03F5A973 		add	r3, r3, #338
 15436 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15437 0122 002B     		cmp	r3, #0
 15438 0124 5DD0     		beq	.L745
2986:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 15439              		.loc 1 2986 0
 15440 0126 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15441 012a 9F49     		ldr	r1, .L760+8
 15442 012c 1346     		mov	r3, r2
 15443 012e 9B00     		lsls	r3, r3, #2
 15444 0130 1344     		add	r3, r3, r2
 15445 0132 DB00     		lsls	r3, r3, #3
 15446 0134 0B44     		add	r3, r3, r1
 15447 0136 0833     		adds	r3, r3, #8
 15448 0138 B3F90030 		ldrsh	r3, [r3]
 15449 013c A7F88631 		strh	r3, [r7, #390]	@ movhi
2987:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 15450              		.loc 1 2987 0
 15451 0140 B7F88C31 		ldrh	r3, [r7, #396]
 15452 0144 0133     		adds	r3, r3, #1
 15453 0146 07F5C372 		add	r2, r7, #390
 15454 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15455 014c 3A46     		mov	r2, r7
 15456 014e D154     		strb	r1, [r2, r3]
2988:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 15457              		.loc 1 2988 0
 15458 0150 B7F88C21 		ldrh	r2, [r7, #396]
 15459 0154 07F5C373 		add	r3, r7, #390
 15460 0158 0133     		adds	r3, r3, #1
 15461 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15462 015c 3B46     		mov	r3, r7
 15463 015e 9954     		strb	r1, [r3, r2]
2989:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].gyro_value[0];
2990:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 15464              		.loc 1 2990 0
 15465 0160 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15466 0164 9049     		ldr	r1, .L760+8
 15467 0166 1346     		mov	r3, r2
 15468 0168 9B00     		lsls	r3, r3, #2
 15469 016a 1344     		add	r3, r3, r2
 15470 016c DB00     		lsls	r3, r3, #3
 15471 016e 0B44     		add	r3, r3, r1
 15472 0170 0A33     		adds	r3, r3, #10
 15473 0172 B3F90030 		ldrsh	r3, [r3]
 15474 0176 A7F88631 		strh	r3, [r7, #390]	@ movhi
2991:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 357


 15475              		.loc 1 2991 0
 15476 017a B7F88C31 		ldrh	r3, [r7, #396]
 15477 017e 0333     		adds	r3, r3, #3
 15478 0180 07F5C372 		add	r2, r7, #390
 15479 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15480 0186 3A46     		mov	r2, r7
 15481 0188 D154     		strb	r1, [r2, r3]
2992:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 15482              		.loc 1 2992 0
 15483 018a B7F88C31 		ldrh	r3, [r7, #396]
 15484 018e 9A1C     		adds	r2, r3, #2
 15485 0190 07F5C373 		add	r3, r7, #390
 15486 0194 0133     		adds	r3, r3, #1
 15487 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15488 0198 3B46     		mov	r3, r7
 15489 019a 9954     		strb	r1, [r3, r2]
2993:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].gyro_value[1];
2994:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 15490              		.loc 1 2994 0
 15491 019c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15492 01a0 8149     		ldr	r1, .L760+8
 15493 01a2 1346     		mov	r3, r2
 15494 01a4 9B00     		lsls	r3, r3, #2
 15495 01a6 1344     		add	r3, r3, r2
 15496 01a8 DB00     		lsls	r3, r3, #3
 15497 01aa 0B44     		add	r3, r3, r1
 15498 01ac 0C33     		adds	r3, r3, #12
 15499 01ae B3F90030 		ldrsh	r3, [r3]
 15500 01b2 A7F88631 		strh	r3, [r7, #390]	@ movhi
2995:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 15501              		.loc 1 2995 0
 15502 01b6 B7F88C31 		ldrh	r3, [r7, #396]
 15503 01ba 0533     		adds	r3, r3, #5
 15504 01bc 07F5C372 		add	r2, r7, #390
 15505 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15506 01c2 3A46     		mov	r2, r7
 15507 01c4 D154     		strb	r1, [r2, r3]
2996:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 15508              		.loc 1 2996 0
 15509 01c6 B7F88C31 		ldrh	r3, [r7, #396]
 15510 01ca 1A1D     		adds	r2, r3, #4
 15511 01cc 07F5C373 		add	r3, r7, #390
 15512 01d0 0133     		adds	r3, r3, #1
 15513 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15514 01d4 3B46     		mov	r3, r7
 15515 01d6 9954     		strb	r1, [r3, r2]
2997:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].gyro_value[2];
2998:..\src/command_processing.c ****             c = c + 6;
 15516              		.loc 1 2998 0
 15517 01d8 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 15518 01dc 0633     		adds	r3, r3, #6
 15519 01de A7F88C31 		strh	r3, [r7, #396]	@ movhi
 15520              	.L745:
2999:..\src/command_processing.c ****         }
3000:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][2]){
 15521              		.loc 1 3000 0
 15522 01e2 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 358


 15523 01e6 6E4A     		ldr	r2, .L760
 15524 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15525 01ea 1946     		mov	r1, r3
 15526 01ec 6D4A     		ldr	r2, .L760+4
 15527 01ee 0B46     		mov	r3, r1
 15528 01f0 9B00     		lsls	r3, r3, #2
 15529 01f2 0B44     		add	r3, r3, r1
 15530 01f4 1344     		add	r3, r3, r2
 15531 01f6 03F25313 		addw	r3, r3, #339
 15532 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15533 01fc 002B     		cmp	r3, #0
 15534 01fe 5DD0     		beq	.L746
3001:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 15535              		.loc 1 3001 0
 15536 0200 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15537 0204 6849     		ldr	r1, .L760+8
 15538 0206 1346     		mov	r3, r2
 15539 0208 9B00     		lsls	r3, r3, #2
 15540 020a 1344     		add	r3, r3, r2
 15541 020c DB00     		lsls	r3, r3, #3
 15542 020e 0B44     		add	r3, r3, r1
 15543 0210 0E33     		adds	r3, r3, #14
 15544 0212 B3F90030 		ldrsh	r3, [r3]
 15545 0216 A7F88631 		strh	r3, [r7, #390]	@ movhi
3002:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 15546              		.loc 1 3002 0
 15547 021a B7F88C31 		ldrh	r3, [r7, #396]
 15548 021e 0133     		adds	r3, r3, #1
 15549 0220 07F5C372 		add	r2, r7, #390
 15550 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15551 0226 3A46     		mov	r2, r7
 15552 0228 D154     		strb	r1, [r2, r3]
3003:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 15553              		.loc 1 3003 0
 15554 022a B7F88C21 		ldrh	r2, [r7, #396]
 15555 022e 07F5C373 		add	r3, r7, #390
 15556 0232 0133     		adds	r3, r3, #1
 15557 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15558 0236 3B46     		mov	r3, r7
 15559 0238 9954     		strb	r1, [r3, r2]
3004:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].mag_value[0];
3005:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 15560              		.loc 1 3005 0
 15561 023a 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15562 023e 5A49     		ldr	r1, .L760+8
 15563 0240 1346     		mov	r3, r2
 15564 0242 9B00     		lsls	r3, r3, #2
 15565 0244 1344     		add	r3, r3, r2
 15566 0246 DB00     		lsls	r3, r3, #3
 15567 0248 0B44     		add	r3, r3, r1
 15568 024a 1033     		adds	r3, r3, #16
 15569 024c B3F90030 		ldrsh	r3, [r3]
 15570 0250 A7F88631 		strh	r3, [r7, #390]	@ movhi
3006:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 15571              		.loc 1 3006 0
 15572 0254 B7F88C31 		ldrh	r3, [r7, #396]
 15573 0258 0333     		adds	r3, r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 359


 15574 025a 07F5C372 		add	r2, r7, #390
 15575 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15576 0260 3A46     		mov	r2, r7
 15577 0262 D154     		strb	r1, [r2, r3]
3007:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 15578              		.loc 1 3007 0
 15579 0264 B7F88C31 		ldrh	r3, [r7, #396]
 15580 0268 9A1C     		adds	r2, r3, #2
 15581 026a 07F5C373 		add	r3, r7, #390
 15582 026e 0133     		adds	r3, r3, #1
 15583 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15584 0272 3B46     		mov	r3, r7
 15585 0274 9954     		strb	r1, [r3, r2]
3008:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].mag_value[1];
3009:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 15586              		.loc 1 3009 0
 15587 0276 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15588 027a 4B49     		ldr	r1, .L760+8
 15589 027c 1346     		mov	r3, r2
 15590 027e 9B00     		lsls	r3, r3, #2
 15591 0280 1344     		add	r3, r3, r2
 15592 0282 DB00     		lsls	r3, r3, #3
 15593 0284 0B44     		add	r3, r3, r1
 15594 0286 1233     		adds	r3, r3, #18
 15595 0288 B3F90030 		ldrsh	r3, [r3]
 15596 028c A7F88631 		strh	r3, [r7, #390]	@ movhi
3010:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 15597              		.loc 1 3010 0
 15598 0290 B7F88C31 		ldrh	r3, [r7, #396]
 15599 0294 0533     		adds	r3, r3, #5
 15600 0296 07F5C372 		add	r2, r7, #390
 15601 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15602 029c 3A46     		mov	r2, r7
 15603 029e D154     		strb	r1, [r2, r3]
3011:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 15604              		.loc 1 3011 0
 15605 02a0 B7F88C31 		ldrh	r3, [r7, #396]
 15606 02a4 1A1D     		adds	r2, r3, #4
 15607 02a6 07F5C373 		add	r3, r7, #390
 15608 02aa 0133     		adds	r3, r3, #1
 15609 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15610 02ae 3B46     		mov	r3, r7
 15611 02b0 9954     		strb	r1, [r3, r2]
3012:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].mag_value[2];
3013:..\src/command_processing.c ****             c = c + 6;
 15612              		.loc 1 3013 0
 15613 02b2 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 15614 02b6 0633     		adds	r3, r3, #6
 15615 02b8 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 15616              	.L746:
3014:..\src/command_processing.c ****         }
3015:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][3]){
 15617              		.loc 1 3015 0
 15618 02bc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15619 02c0 374A     		ldr	r2, .L760
 15620 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15621 02c4 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 360


 15622 02c6 374A     		ldr	r2, .L760+4
 15623 02c8 0B46     		mov	r3, r1
 15624 02ca 9B00     		lsls	r3, r3, #2
 15625 02cc 0B44     		add	r3, r3, r1
 15626 02ce 1344     		add	r3, r3, r2
 15627 02d0 03F5AA73 		add	r3, r3, #340
 15628 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15629 02d6 002B     		cmp	r3, #0
 15630 02d8 00F0AF80 		beq	.L747
3016:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 15631              		.loc 1 3016 0
 15632 02dc 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15633 02e0 3149     		ldr	r1, .L760+8
 15634 02e2 1346     		mov	r3, r2
 15635 02e4 9B00     		lsls	r3, r3, #2
 15636 02e6 1344     		add	r3, r3, r2
 15637 02e8 DB00     		lsls	r3, r3, #3
 15638 02ea 0B44     		add	r3, r3, r1
 15639 02ec 1433     		adds	r3, r3, #20
 15640 02ee 1B68     		ldr	r3, [r3]	@ float
 15641 02f0 C7F88031 		str	r3, [r7, #384]	@ float
3017:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15642              		.loc 1 3017 0
 15643 02f4 0023     		movs	r3, #0
 15644 02f6 87F88B31 		strb	r3, [r7, #395]
 15645 02fa 13E0     		b	.L748
 15646              	.L749:
3018:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 15647              		.loc 1 3018 0 discriminator 3
 15648 02fc B7F88C31 		ldrh	r3, [r7, #396]
 15649 0300 1A1D     		adds	r2, r3, #4
 15650 0302 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15651 0306 D31A     		subs	r3, r2, r3
 15652 0308 013B     		subs	r3, r3, #1
 15653 030a 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15654 030e 07F5C071 		add	r1, r7, #384
 15655 0312 0A44     		add	r2, r2, r1
 15656 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15657 0316 3A46     		mov	r2, r7
 15658 0318 D154     		strb	r1, [r2, r3]
3017:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15659              		.loc 1 3017 0 discriminator 3
 15660 031a 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15661 031e 0133     		adds	r3, r3, #1
 15662 0320 87F88B31 		strb	r3, [r7, #395]
 15663              	.L748:
3017:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15664              		.loc 1 3017 0 is_stmt 0 discriminator 1
 15665 0324 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15666 0328 032B     		cmp	r3, #3
 15667 032a E7D9     		bls	.L749
3019:..\src/command_processing.c ****             }
3020:..\src/command_processing.c ****             //*((float *) &single_packet[c])   = (float) g_imu[k_imu].quat_value[0];
3021:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 15668              		.loc 1 3021 0 is_stmt 1
 15669 032c 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15670 0330 1D49     		ldr	r1, .L760+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 361


 15671 0332 1346     		mov	r3, r2
 15672 0334 9B00     		lsls	r3, r3, #2
 15673 0336 1344     		add	r3, r3, r2
 15674 0338 DB00     		lsls	r3, r3, #3
 15675 033a 0B44     		add	r3, r3, r1
 15676 033c 1833     		adds	r3, r3, #24
 15677 033e 1B68     		ldr	r3, [r3]	@ float
 15678 0340 C7F88031 		str	r3, [r7, #384]	@ float
3022:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15679              		.loc 1 3022 0
 15680 0344 0023     		movs	r3, #0
 15681 0346 87F88B31 		strb	r3, [r7, #395]
 15682 034a 14E0     		b	.L750
 15683              	.L751:
3023:..\src/command_processing.c ****                 single_packet[c + 8 - k -1] = ((char*)(&aux_float))[k];
 15684              		.loc 1 3023 0 discriminator 3
 15685 034c B7F88C31 		ldrh	r3, [r7, #396]
 15686 0350 03F10802 		add	r2, r3, #8
 15687 0354 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15688 0358 D31A     		subs	r3, r2, r3
 15689 035a 013B     		subs	r3, r3, #1
 15690 035c 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15691 0360 07F5C071 		add	r1, r7, #384
 15692 0364 0A44     		add	r2, r2, r1
 15693 0366 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15694 0368 3A46     		mov	r2, r7
 15695 036a D154     		strb	r1, [r2, r3]
3022:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15696              		.loc 1 3022 0 discriminator 3
 15697 036c 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15698 0370 0133     		adds	r3, r3, #1
 15699 0372 87F88B31 		strb	r3, [r7, #395]
 15700              	.L750:
3022:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15701              		.loc 1 3022 0 is_stmt 0 discriminator 1
 15702 0376 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15703 037a 032B     		cmp	r3, #3
 15704 037c E6D9     		bls	.L751
3024:..\src/command_processing.c ****             }
3025:..\src/command_processing.c ****             //*((float *) &single_packet[c+4]) = (float) g_imu[k_imu].quat_value[1];
3026:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 15705              		.loc 1 3026 0 is_stmt 1
 15706 037e 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15707 0382 0949     		ldr	r1, .L760+8
 15708 0384 1346     		mov	r3, r2
 15709 0386 9B00     		lsls	r3, r3, #2
 15710 0388 1344     		add	r3, r3, r2
 15711 038a DB00     		lsls	r3, r3, #3
 15712 038c 0B44     		add	r3, r3, r1
 15713 038e 1C33     		adds	r3, r3, #28
 15714 0390 1B68     		ldr	r3, [r3]	@ float
 15715 0392 C7F88031 		str	r3, [r7, #384]	@ float
3027:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15716              		.loc 1 3027 0
 15717 0396 0023     		movs	r3, #0
 15718 0398 87F88B31 		strb	r3, [r7, #395]
 15719 039c 1BE0     		b	.L752
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 362


 15720              	.L761:
 15721 039e 00BF     		.align	2
 15722              	.L760:
 15723 03a0 00000000 		.word	IMU_connected
 15724 03a4 00000000 		.word	c_mem
 15725 03a8 00000000 		.word	g_imu
 15726              	.L753:
3028:..\src/command_processing.c ****                 single_packet[c + 12 - k -1] = ((char*)(&aux_float))[k];
 15727              		.loc 1 3028 0 discriminator 3
 15728 03ac B7F88C31 		ldrh	r3, [r7, #396]
 15729 03b0 03F10C02 		add	r2, r3, #12
 15730 03b4 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15731 03b8 D31A     		subs	r3, r2, r3
 15732 03ba 013B     		subs	r3, r3, #1
 15733 03bc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15734 03c0 07F5C071 		add	r1, r7, #384
 15735 03c4 0A44     		add	r2, r2, r1
 15736 03c6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15737 03c8 3A46     		mov	r2, r7
 15738 03ca D154     		strb	r1, [r2, r3]
3027:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15739              		.loc 1 3027 0 discriminator 3
 15740 03cc 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15741 03d0 0133     		adds	r3, r3, #1
 15742 03d2 87F88B31 		strb	r3, [r7, #395]
 15743              	.L752:
3027:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15744              		.loc 1 3027 0 is_stmt 0 discriminator 1
 15745 03d6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15746 03da 032B     		cmp	r3, #3
 15747 03dc E6D9     		bls	.L753
3029:..\src/command_processing.c ****             }
3030:..\src/command_processing.c ****             //*((float *) &single_packet[c+8]) = (float) g_imu[k_imu].quat_value[2];
3031:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 15748              		.loc 1 3031 0 is_stmt 1
 15749 03de 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15750 03e2 6749     		ldr	r1, .L762
 15751 03e4 1346     		mov	r3, r2
 15752 03e6 9B00     		lsls	r3, r3, #2
 15753 03e8 1344     		add	r3, r3, r2
 15754 03ea DB00     		lsls	r3, r3, #3
 15755 03ec 0B44     		add	r3, r3, r1
 15756 03ee 2033     		adds	r3, r3, #32
 15757 03f0 1B68     		ldr	r3, [r3]	@ float
 15758 03f2 C7F88031 		str	r3, [r7, #384]	@ float
3032:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15759              		.loc 1 3032 0
 15760 03f6 0023     		movs	r3, #0
 15761 03f8 87F88B31 		strb	r3, [r7, #395]
 15762 03fc 14E0     		b	.L754
 15763              	.L755:
3033:..\src/command_processing.c ****                 single_packet[c + 16 - k -1] = ((char*)(&aux_float))[k];
 15764              		.loc 1 3033 0 discriminator 3
 15765 03fe B7F88C31 		ldrh	r3, [r7, #396]
 15766 0402 03F11002 		add	r2, r3, #16
 15767 0406 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15768 040a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 363


 15769 040c 013B     		subs	r3, r3, #1
 15770 040e 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15771 0412 07F5C071 		add	r1, r7, #384
 15772 0416 0A44     		add	r2, r2, r1
 15773 0418 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15774 041a 3A46     		mov	r2, r7
 15775 041c D154     		strb	r1, [r2, r3]
3032:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15776              		.loc 1 3032 0 discriminator 3
 15777 041e 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15778 0422 0133     		adds	r3, r3, #1
 15779 0424 87F88B31 		strb	r3, [r7, #395]
 15780              	.L754:
3032:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 15781              		.loc 1 3032 0 is_stmt 0 discriminator 1
 15782 0428 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15783 042c 032B     		cmp	r3, #3
 15784 042e E6D9     		bls	.L755
3034:..\src/command_processing.c ****             }
3035:..\src/command_processing.c ****             //*((float *) &single_packet[c+12]) = (float) g_imu[k_imu].quat_value[3];
3036:..\src/command_processing.c ****             c = c + 16;
 15785              		.loc 1 3036 0 is_stmt 1
 15786 0430 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 15787 0434 1033     		adds	r3, r3, #16
 15788 0436 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 15789              	.L747:
3037:..\src/command_processing.c ****         }
3038:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][4]){
 15790              		.loc 1 3038 0
 15791 043a 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15792 043e 514A     		ldr	r2, .L762+4
 15793 0440 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15794 0442 1946     		mov	r1, r3
 15795 0444 504A     		ldr	r2, .L762+8
 15796 0446 0B46     		mov	r3, r1
 15797 0448 9B00     		lsls	r3, r3, #2
 15798 044a 0B44     		add	r3, r3, r1
 15799 044c 1344     		add	r3, r3, r2
 15800 044e 03F25513 		addw	r3, r3, #341
 15801 0452 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15802 0454 002B     		cmp	r3, #0
 15803 0456 21D0     		beq	.L756
3039:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 15804              		.loc 1 3039 0
 15805 0458 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15806 045c 4849     		ldr	r1, .L762
 15807 045e 1346     		mov	r3, r2
 15808 0460 9B00     		lsls	r3, r3, #2
 15809 0462 1344     		add	r3, r3, r2
 15810 0464 DB00     		lsls	r3, r3, #3
 15811 0466 0B44     		add	r3, r3, r1
 15812 0468 2433     		adds	r3, r3, #36
 15813 046a B3F90030 		ldrsh	r3, [r3]
 15814 046e A7F88631 		strh	r3, [r7, #390]	@ movhi
3040:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 15815              		.loc 1 3040 0
 15816 0472 B7F88C31 		ldrh	r3, [r7, #396]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 364


 15817 0476 0133     		adds	r3, r3, #1
 15818 0478 07F5C372 		add	r2, r7, #390
 15819 047c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 15820 047e 3A46     		mov	r2, r7
 15821 0480 D154     		strb	r1, [r2, r3]
3041:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 15822              		.loc 1 3041 0
 15823 0482 B7F88C21 		ldrh	r2, [r7, #396]
 15824 0486 07F5C373 		add	r3, r7, #390
 15825 048a 0133     		adds	r3, r3, #1
 15826 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 15827 048e 3B46     		mov	r3, r7
 15828 0490 9954     		strb	r1, [r3, r2]
3042:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].temp_value;
3043:..\src/command_processing.c ****             c = c + 2;
 15829              		.loc 1 3043 0
 15830 0492 B7F88C31 		ldrh	r3, [r7, #396]	@ movhi
 15831 0496 0233     		adds	r3, r3, #2
 15832 0498 A7F88C31 		strh	r3, [r7, #396]	@ movhi
 15833              	.L756:
3044:..\src/command_processing.c ****         }
3045:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 15834              		.loc 1 3045 0
 15835 049c 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15836 04a0 384A     		ldr	r2, .L762+4
 15837 04a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15838 04a4 1A46     		mov	r2, r3
 15839 04a6 394B     		ldr	r3, .L762+12
 15840 04a8 53F82230 		ldr	r3, [r3, r2, lsl #2]
 15841 04ac 013B     		subs	r3, r3, #1
 15842 04ae 3A46     		mov	r2, r7
 15843 04b0 3A21     		movs	r1, #58
 15844 04b2 D154     		strb	r1, [r2, r3]
3046:..\src/command_processing.c ****         c = 1;
 15845              		.loc 1 3046 0
 15846 04b4 0123     		movs	r3, #1
 15847 04b6 A7F88C31 		strh	r3, [r7, #396]	@ movhi
3047:..\src/command_processing.c ****                
3048:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 15848              		.loc 1 3048 0
 15849 04ba 0023     		movs	r3, #0
 15850 04bc 87F88B31 		strb	r3, [r7, #395]
 15851 04c0 10E0     		b	.L757
 15852              	.L758:
3049:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 15853              		.loc 1 3049 0 discriminator 3
 15854 04c2 B7F88821 		ldrh	r2, [r7, #392]
 15855 04c6 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
 15856 04ca 1344     		add	r3, r3, r2
 15857 04cc 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15858 04d0 3946     		mov	r1, r7
 15859 04d2 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 15860 04d4 07F12002 		add	r2, r7, #32
 15861 04d8 D154     		strb	r1, [r2, r3]
3048:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 15862              		.loc 1 3048 0 discriminator 3
 15863 04da 97F88B31 		ldrb	r3, [r7, #395]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 365


 15864 04de 0133     		adds	r3, r3, #1
 15865 04e0 87F88B31 		strb	r3, [r7, #395]
 15866              	.L757:
3048:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 15867              		.loc 1 3048 0 is_stmt 0 discriminator 1
 15868 04e4 97F88B21 		ldrb	r2, [r7, #395]	@ zero_extendqisi2
 15869 04e8 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15870 04ec 2549     		ldr	r1, .L762+4
 15871 04ee CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 15872 04f0 1946     		mov	r1, r3
 15873 04f2 264B     		ldr	r3, .L762+12
 15874 04f4 53F82130 		ldr	r3, [r3, r1, lsl #2]
 15875 04f8 9A42     		cmp	r2, r3
 15876 04fa E2DB     		blt	.L758
3050:..\src/command_processing.c ****         }
3051:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 15877              		.loc 1 3051 0 is_stmt 1 discriminator 2
 15878 04fc 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15879 0500 204A     		ldr	r2, .L762+4
 15880 0502 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 15881 0504 1A46     		mov	r2, r3
 15882 0506 214B     		ldr	r3, .L762+12
 15883 0508 53F82230 		ldr	r3, [r3, r2, lsl #2]
 15884 050c 9AB2     		uxth	r2, r3
 15885 050e B7F88831 		ldrh	r3, [r7, #392]	@ movhi
 15886 0512 1344     		add	r3, r3, r2
 15887 0514 A7F88831 		strh	r3, [r7, #392]	@ movhi
3052:..\src/command_processing.c ****         
3053:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 15888              		.loc 1 3053 0 discriminator 2
 15889 0518 3B46     		mov	r3, r7
 15890 051a 2022     		movs	r2, #32
 15891 051c 0021     		movs	r1, #0
 15892 051e 1846     		mov	r0, r3
 15893 0520 FFF7FEFF 		bl	memset
2966:..\src/command_processing.c ****     {	
 15894              		.loc 1 2966 0 discriminator 2
 15895 0524 97F88F31 		ldrb	r3, [r7, #399]	@ zero_extendqisi2
 15896 0528 0133     		adds	r3, r3, #1
 15897 052a 87F88F31 		strb	r3, [r7, #399]
 15898              	.L743:
2966:..\src/command_processing.c ****     {	
 15899              		.loc 1 2966 0 is_stmt 0 discriminator 1
 15900 052e 184B     		ldr	r3, .L762+16
 15901 0530 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 15902 0532 97F88F21 		ldrb	r2, [r7, #399]	@ zero_extendqisi2
 15903 0536 9A42     		cmp	r2, r3
 15904 0538 FFF476AD 		bcc	.L759
3054:..\src/command_processing.c ****         
3055:..\src/command_processing.c ****     }
3056:..\src/command_processing.c **** 
3057:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
3058:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 15905              		.loc 1 3058 0 is_stmt 1
 15906 053c 154B     		ldr	r3, .L762+20
 15907 053e 1B68     		ldr	r3, [r3]
 15908 0540 5C1E     		subs	r4, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 366


 15909 0542 144B     		ldr	r3, .L762+20
 15910 0544 1B68     		ldr	r3, [r3]
 15911 0546 DBB2     		uxtb	r3, r3
 15912 0548 013B     		subs	r3, r3, #1
 15913 054a DAB2     		uxtb	r2, r3
 15914 054c 07F12003 		add	r3, r7, #32
 15915 0550 1146     		mov	r1, r2
 15916 0552 1846     		mov	r0, r3
 15917 0554 FFF7FEFF 		bl	LCRChecksum
 15918 0558 0346     		mov	r3, r0
 15919 055a 1A46     		mov	r2, r3
 15920 055c 07F12003 		add	r3, r7, #32
 15921 0560 1A55     		strb	r2, [r3, r4]
3059:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 15922              		.loc 1 3059 0
 15923 0562 0C4B     		ldr	r3, .L762+20
 15924 0564 1B68     		ldr	r3, [r3]
 15925 0566 9AB2     		uxth	r2, r3
 15926 0568 07F12003 		add	r3, r7, #32
 15927 056c 1146     		mov	r1, r2
 15928 056e 1846     		mov	r0, r3
 15929 0570 FFF7FEFF 		bl	commWrite
3060:..\src/command_processing.c **** }
 15930              		.loc 1 3060 0
 15931 0574 00BF     		nop
 15932 0576 07F5CA77 		add	r7, r7, #404
 15933              		.cfi_def_cfa_offset 12
 15934 057a BD46     		mov	sp, r7
 15935              		.cfi_def_cfa_register 13
 15936              		@ sp needed
 15937 057c 90BD     		pop	{r4, r7, pc}
 15938              	.L763:
 15939 057e 00BF     		.align	2
 15940              	.L762:
 15941 0580 00000000 		.word	g_imu
 15942 0584 00000000 		.word	IMU_connected
 15943 0588 00000000 		.word	c_mem
 15944 058c 00000000 		.word	single_imu_size
 15945 0590 00000000 		.word	N_IMU_Connected
 15946 0594 00000000 		.word	imus_data_size
 15947              		.cfi_endproc
 15948              	.LFE101:
 15949              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 15950              		.section	.text.cmd_get_encoder_map,"ax",%progbits
 15951              		.align	2
 15952              		.global	cmd_get_encoder_map
 15953              		.thumb
 15954              		.thumb_func
 15955              		.type	cmd_get_encoder_map, %function
 15956              	cmd_get_encoder_map:
 15957              	.LFB102:
3061:..\src/command_processing.c **** 
3062:..\src/command_processing.c **** void cmd_get_encoder_map(){
 15958              		.loc 1 3062 0
 15959              		.cfi_startproc
 15960              		@ args = 0, pretend = 0, frame = 16
 15961              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 367


 15962 0000 90B5     		push	{r4, r7, lr}
 15963              		.cfi_def_cfa_offset 12
 15964              		.cfi_offset 4, -12
 15965              		.cfi_offset 7, -8
 15966              		.cfi_offset 14, -4
 15967 0002 85B0     		sub	sp, sp, #20
 15968              		.cfi_def_cfa_offset 32
 15969 0004 00AF     		add	r7, sp, #0
 15970              		.cfi_def_cfa_register 7
3063:..\src/command_processing.c ****     //Retrieve Encoder map
3064:..\src/command_processing.c ****     
3065:..\src/command_processing.c ****     uint8 packet_data[4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3066:..\src/command_processing.c ****     uint8 CYDATA i, j;
3067:..\src/command_processing.c ****     
3068:..\src/command_processing.c ****     // Header        
3069:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_CONF;
 15971              		.loc 1 3069 0
 15972 0006 A323     		movs	r3, #163
 15973 0008 3B70     		strb	r3, [r7]
3070:..\src/command_processing.c ****     
3071:..\src/command_processing.c ****     // Fill payload
3072:..\src/command_processing.c ****     packet_data[1] = N_ENCODER_LINE_MAX;
 15974              		.loc 1 3072 0
 15975 000a 0223     		movs	r3, #2
 15976 000c 7B70     		strb	r3, [r7, #1]
3073:..\src/command_processing.c ****     packet_data[2] = N_ENCODERS_PER_LINE_MAX;
 15977              		.loc 1 3073 0
 15978 000e 0523     		movs	r3, #5
 15979 0010 BB70     		strb	r3, [r7, #2]
3074:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 15980              		.loc 1 3074 0
 15981 0012 0023     		movs	r3, #0
 15982 0014 FB73     		strb	r3, [r7, #15]
 15983 0016 22E0     		b	.L765
 15984              	.L768:
3075:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 15985              		.loc 1 3075 0
 15986 0018 0023     		movs	r3, #0
 15987 001a BB73     		strb	r3, [r7, #14]
 15988 001c 19E0     		b	.L766
 15989              	.L767:
3076:..\src/command_processing.c ****             packet_data[3 + i*N_ENCODERS_PER_LINE_MAX + j] = c_mem.Encoder_conf[i][j];
 15990              		.loc 1 3076 0 discriminator 3
 15991 001e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 15992 0020 1346     		mov	r3, r2
 15993 0022 9B00     		lsls	r3, r3, #2
 15994 0024 1344     		add	r3, r3, r2
 15995 0026 DA1C     		adds	r2, r3, #3
 15996 0028 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 15997 002a D118     		adds	r1, r2, r3
 15998 002c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 15999 002e B87B     		ldrb	r0, [r7, #14]	@ zero_extendqisi2
 16000 0030 144C     		ldr	r4, .L769
 16001 0032 1346     		mov	r3, r2
 16002 0034 9B00     		lsls	r3, r3, #2
 16003 0036 1344     		add	r3, r3, r2
 16004 0038 2344     		add	r3, r3, r4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 368


 16005 003a 0344     		add	r3, r3, r0
 16006 003c 03F5B573 		add	r3, r3, #362
 16007 0040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 16008 0042 07F11003 		add	r3, r7, #16
 16009 0046 0B44     		add	r3, r3, r1
 16010 0048 03F8102C 		strb	r2, [r3, #-16]
3075:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 16011              		.loc 1 3075 0 discriminator 3
 16012 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 16013 004e 0133     		adds	r3, r3, #1
 16014 0050 BB73     		strb	r3, [r7, #14]
 16015              	.L766:
3075:..\src/command_processing.c ****         for (j=0; j < N_ENCODERS_PER_LINE_MAX; j++) {
 16016              		.loc 1 3075 0 is_stmt 0 discriminator 1
 16017 0052 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 16018 0054 042B     		cmp	r3, #4
 16019 0056 E2D9     		bls	.L767
3074:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 16020              		.loc 1 3074 0 is_stmt 1 discriminator 2
 16021 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 16022 005a 0133     		adds	r3, r3, #1
 16023 005c FB73     		strb	r3, [r7, #15]
 16024              	.L765:
3074:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 16025              		.loc 1 3074 0 is_stmt 0 discriminator 1
 16026 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 16027 0060 012B     		cmp	r3, #1
 16028 0062 D9D9     		bls	.L768
3077:..\src/command_processing.c ****         }
3078:..\src/command_processing.c ****     }
3079:..\src/command_processing.c ****     
3080:..\src/command_processing.c ****     // Calculate checksum
3081:..\src/command_processing.c ****     packet_data[3+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX] = LCRChecksum(packet_data, 3+N_ENCODE
 16029              		.loc 1 3081 0 is_stmt 1
 16030 0064 3B46     		mov	r3, r7
 16031 0066 0D21     		movs	r1, #13
 16032 0068 1846     		mov	r0, r3
 16033 006a FFF7FEFF 		bl	LCRChecksum
 16034 006e 0346     		mov	r3, r0
 16035 0070 7B73     		strb	r3, [r7, #13]
3082:..\src/command_processing.c ****     
3083:..\src/command_processing.c ****     // Send package to UART
3084:..\src/command_processing.c ****     commWrite(packet_data, 4+N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX);
 16036              		.loc 1 3084 0
 16037 0072 3B46     		mov	r3, r7
 16038 0074 0E21     		movs	r1, #14
 16039 0076 1846     		mov	r0, r3
 16040 0078 FFF7FEFF 		bl	commWrite
3085:..\src/command_processing.c **** }
 16041              		.loc 1 3085 0
 16042 007c 00BF     		nop
 16043 007e 1437     		adds	r7, r7, #20
 16044              		.cfi_def_cfa_offset 12
 16045 0080 BD46     		mov	sp, r7
 16046              		.cfi_def_cfa_register 13
 16047              		@ sp needed
 16048 0082 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 369


 16049              	.L770:
 16050              		.align	2
 16051              	.L769:
 16052 0084 00000000 		.word	c_mem
 16053              		.cfi_endproc
 16054              	.LFE102:
 16055              		.size	cmd_get_encoder_map, .-cmd_get_encoder_map
 16056              		.section	.text.cmd_get_encoder_raw,"ax",%progbits
 16057              		.align	2
 16058              		.global	cmd_get_encoder_raw
 16059              		.thumb
 16060              		.thumb_func
 16061              		.type	cmd_get_encoder_raw, %function
 16062              	cmd_get_encoder_raw:
 16063              	.LFB103:
3086:..\src/command_processing.c **** 
3087:..\src/command_processing.c **** void cmd_get_encoder_raw(){
 16064              		.loc 1 3087 0
 16065              		.cfi_startproc
 16066              		@ args = 0, pretend = 0, frame = 32
 16067              		@ frame_needed = 1, uses_anonymous_args = 0
 16068 0000 90B5     		push	{r4, r7, lr}
 16069              		.cfi_def_cfa_offset 12
 16070              		.cfi_offset 4, -12
 16071              		.cfi_offset 7, -8
 16072              		.cfi_offset 14, -4
 16073 0002 89B0     		sub	sp, sp, #36
 16074              		.cfi_def_cfa_offset 48
 16075 0004 00AF     		add	r7, sp, #0
 16076              		.cfi_def_cfa_register 7
3088:..\src/command_processing.c ****     //Retrieve all Encoders raw values
3089:..\src/command_processing.c ****     
3090:..\src/command_processing.c ****     uint8 packet_data[2+2*N_ENCODER_LINE_MAX*N_ENCODERS_PER_LINE_MAX];
3091:..\src/command_processing.c ****     uint8 i, j, idx;
3092:..\src/command_processing.c ****     uint16 aux_uint16;
3093:..\src/command_processing.c ****     
3094:..\src/command_processing.c ****     //Header package 
3095:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ENCODER_RAW;
 16077              		.loc 1 3095 0
 16078 0006 A423     		movs	r3, #164
 16079 0008 3B71     		strb	r3, [r7, #4]
3096:..\src/command_processing.c ****  
3097:..\src/command_processing.c ****     // Fill payload
3098:..\src/command_processing.c ****     idx = 0;
 16080              		.loc 1 3098 0
 16081 000a 0023     		movs	r3, #0
 16082 000c 7B77     		strb	r3, [r7, #29]
3099:..\src/command_processing.c ****     for (i=0; i<N_ENCODER_LINE_MAX; i++) {
 16083              		.loc 1 3099 0
 16084 000e 0023     		movs	r3, #0
 16085 0010 FB77     		strb	r3, [r7, #31]
 16086 0012 3EE0     		b	.L772
 16087              	.L776:
3100:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 16088              		.loc 1 3100 0
 16089 0014 0023     		movs	r3, #0
 16090 0016 BB77     		strb	r3, [r7, #30]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 370


 16091 0018 32E0     		b	.L773
 16092              	.L775:
3101:..\src/command_processing.c ****             if (c_mem.Encoder_conf[i][j] == 1) {
 16093              		.loc 1 3101 0
 16094 001a FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 16095 001c B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 16096 001e 2F48     		ldr	r0, .L777
 16097 0020 1346     		mov	r3, r2
 16098 0022 9B00     		lsls	r3, r3, #2
 16099 0024 1344     		add	r3, r3, r2
 16100 0026 0344     		add	r3, r3, r0
 16101 0028 0B44     		add	r3, r3, r1
 16102 002a 03F5B573 		add	r3, r3, #362
 16103 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16104 0030 012B     		cmp	r3, #1
 16105 0032 22D1     		bne	.L774
3102:..\src/command_processing.c ****                 aux_uint16 = (uint16)Encoder_Value[i][j];
 16106              		.loc 1 3102 0
 16107 0034 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 16108 0036 B97F     		ldrb	r1, [r7, #30]	@ zero_extendqisi2
 16109 0038 2948     		ldr	r0, .L777+4
 16110 003a 1346     		mov	r3, r2
 16111 003c 9B00     		lsls	r3, r3, #2
 16112 003e 1344     		add	r3, r3, r2
 16113 0040 0B44     		add	r3, r3, r1
 16114 0042 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 16115 0046 7B80     		strh	r3, [r7, #2]	@ movhi
3103:..\src/command_processing.c ****                 packet_data[(idx << 1) + 2] = ((char*)(&aux_uint16))[0];
 16116              		.loc 1 3103 0
 16117 0048 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 16118 004a 5B00     		lsls	r3, r3, #1
 16119 004c 0233     		adds	r3, r3, #2
 16120 004e BA1C     		adds	r2, r7, #2
 16121 0050 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 16122 0052 07F12001 		add	r1, r7, #32
 16123 0056 0B44     		add	r3, r3, r1
 16124 0058 03F81C2C 		strb	r2, [r3, #-28]
3104:..\src/command_processing.c ****                 packet_data[(idx << 1) + 1] = ((char*)(&aux_uint16))[1];
 16125              		.loc 1 3104 0
 16126 005c 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 16127 005e 5B00     		lsls	r3, r3, #1
 16128 0060 5A1C     		adds	r2, r3, #1
 16129 0062 BB1C     		adds	r3, r7, #2
 16130 0064 0133     		adds	r3, r3, #1
 16131 0066 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 16132 0068 07F12003 		add	r3, r7, #32
 16133 006c 1344     		add	r3, r3, r2
 16134 006e 0A46     		mov	r2, r1
 16135 0070 03F81C2C 		strb	r2, [r3, #-28]
3105:..\src/command_processing.c ****                 idx++;
 16136              		.loc 1 3105 0
 16137 0074 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 16138 0076 0133     		adds	r3, r3, #1
 16139 0078 7B77     		strb	r3, [r7, #29]
 16140              	.L774:
3100:..\src/command_processing.c ****             if (c_mem.Encoder_conf[i][j] == 1) {
 16141              		.loc 1 3100 0 discriminator 2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 371


 16142 007a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16143 007c 0133     		adds	r3, r3, #1
 16144 007e BB77     		strb	r3, [r7, #30]
 16145              	.L773:
3100:..\src/command_processing.c ****             if (c_mem.Encoder_conf[i][j] == 1) {
 16146              		.loc 1 3100 0 is_stmt 0 discriminator 1
 16147 0080 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 16148 0082 184A     		ldr	r2, .L777+8
 16149 0084 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 16150 0086 BA7F     		ldrb	r2, [r7, #30]	@ zero_extendqisi2
 16151 0088 9A42     		cmp	r2, r3
 16152 008a C6D3     		bcc	.L775
3099:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 16153              		.loc 1 3099 0 is_stmt 1 discriminator 2
 16154 008c FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 16155 008e 0133     		adds	r3, r3, #1
 16156 0090 FB77     		strb	r3, [r7, #31]
 16157              	.L772:
3099:..\src/command_processing.c ****         for (j=0; j < N_Encoder_Line_Connected[i]; j++) {
 16158              		.loc 1 3099 0 is_stmt 0 discriminator 1
 16159 0092 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 16160 0094 012B     		cmp	r3, #1
 16161 0096 BDD9     		bls	.L776
3106:..\src/command_processing.c ****             }
3107:..\src/command_processing.c ****         }
3108:..\src/command_processing.c ****     }
3109:..\src/command_processing.c **** 
3110:..\src/command_processing.c ****     // Calculate checksum
3111:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 16162              		.loc 1 3111 0 is_stmt 1
 16163 0098 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 16164 009a 5B00     		lsls	r3, r3, #1
 16165 009c 5C1C     		adds	r4, r3, #1
 16166 009e 7B7F     		ldrb	r3, [r7, #29]
 16167 00a0 5B00     		lsls	r3, r3, #1
 16168 00a2 DBB2     		uxtb	r3, r3
 16169 00a4 0133     		adds	r3, r3, #1
 16170 00a6 DAB2     		uxtb	r2, r3
 16171 00a8 3B1D     		adds	r3, r7, #4
 16172 00aa 1146     		mov	r1, r2
 16173 00ac 1846     		mov	r0, r3
 16174 00ae FFF7FEFF 		bl	LCRChecksum
 16175 00b2 0346     		mov	r3, r0
 16176 00b4 1A46     		mov	r2, r3
 16177 00b6 07F12003 		add	r3, r7, #32
 16178 00ba 2344     		add	r3, r3, r4
 16179 00bc 03F81C2C 		strb	r2, [r3, #-28]
3112:..\src/command_processing.c ****     
3113:..\src/command_processing.c ****     // Send package to UART
3114:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 16180              		.loc 1 3114 0
 16181 00c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 16182 00c2 0133     		adds	r3, r3, #1
 16183 00c4 9BB2     		uxth	r3, r3
 16184 00c6 5B00     		lsls	r3, r3, #1
 16185 00c8 9AB2     		uxth	r2, r3
 16186 00ca 3B1D     		adds	r3, r7, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 372


 16187 00cc 1146     		mov	r1, r2
 16188 00ce 1846     		mov	r0, r3
 16189 00d0 FFF7FEFF 		bl	commWrite
3115:..\src/command_processing.c **** }
 16190              		.loc 1 3115 0
 16191 00d4 00BF     		nop
 16192 00d6 2437     		adds	r7, r7, #36
 16193              		.cfi_def_cfa_offset 12
 16194 00d8 BD46     		mov	sp, r7
 16195              		.cfi_def_cfa_register 13
 16196              		@ sp needed
 16197 00da 90BD     		pop	{r4, r7, pc}
 16198              	.L778:
 16199              		.align	2
 16200              	.L777:
 16201 00dc 00000000 		.word	c_mem
 16202 00e0 00000000 		.word	Encoder_Value
 16203 00e4 00000000 		.word	N_Encoder_Line_Connected
 16204              		.cfi_endproc
 16205              	.LFE103:
 16206              		.size	cmd_get_encoder_raw, .-cmd_get_encoder_raw
 16207              		.section	.text.cmd_get_ADC_map,"ax",%progbits
 16208              		.align	2
 16209              		.global	cmd_get_ADC_map
 16210              		.thumb
 16211              		.thumb_func
 16212              		.type	cmd_get_ADC_map, %function
 16213              	cmd_get_ADC_map:
 16214              	.LFB104:
3116:..\src/command_processing.c **** 
3117:..\src/command_processing.c **** void cmd_get_ADC_map(){
 16215              		.loc 1 3117 0
 16216              		.cfi_startproc
 16217              		@ args = 0, pretend = 0, frame = 16
 16218              		@ frame_needed = 1, uses_anonymous_args = 0
 16219 0000 80B5     		push	{r7, lr}
 16220              		.cfi_def_cfa_offset 8
 16221              		.cfi_offset 7, -8
 16222              		.cfi_offset 14, -4
 16223 0002 84B0     		sub	sp, sp, #16
 16224              		.cfi_def_cfa_offset 24
 16225 0004 00AF     		add	r7, sp, #0
 16226              		.cfi_def_cfa_register 7
3118:..\src/command_processing.c ****     //Retrieve Encoder map
3119:..\src/command_processing.c ****     
3120:..\src/command_processing.c ****     uint8 packet_data[3+NUM_OF_ADC_CHANNELS_MAX];
3121:..\src/command_processing.c ****     uint8 CYDATA i;
3122:..\src/command_processing.c ****     
3123:..\src/command_processing.c ****     // Header        
3124:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_CONF;
 16227              		.loc 1 3124 0
 16228 0006 A523     		movs	r3, #165
 16229 0008 3B70     		strb	r3, [r7]
3125:..\src/command_processing.c ****     
3126:..\src/command_processing.c ****     // Fill payload
3127:..\src/command_processing.c ****     packet_data[1] = NUM_OF_ADC_CHANNELS_MAX;
 16230              		.loc 1 3127 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 373


 16231 000a 0C23     		movs	r3, #12
 16232 000c 7B70     		strb	r3, [r7, #1]
3128:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 16233              		.loc 1 3128 0
 16234 000e 0023     		movs	r3, #0
 16235 0010 FB73     		strb	r3, [r7, #15]
 16236 0012 0EE0     		b	.L780
 16237              	.L781:
3129:..\src/command_processing.c ****         packet_data[2 + i] = c_mem.ADC_conf[i];
 16238              		.loc 1 3129 0 discriminator 3
 16239 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 16240 0016 0233     		adds	r3, r3, #2
 16241 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 16242 001a 0F49     		ldr	r1, .L782
 16243 001c 0A44     		add	r2, r2, r1
 16244 001e 92F87421 		ldrb	r2, [r2, #372]	@ zero_extendqisi2
 16245 0022 07F11001 		add	r1, r7, #16
 16246 0026 0B44     		add	r3, r3, r1
 16247 0028 03F8102C 		strb	r2, [r3, #-16]
3128:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 16248              		.loc 1 3128 0 discriminator 3
 16249 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 16250 002e 0133     		adds	r3, r3, #1
 16251 0030 FB73     		strb	r3, [r7, #15]
 16252              	.L780:
3128:..\src/command_processing.c ****     for (i=0; i<NUM_OF_ADC_CHANNELS_MAX; i++) {
 16253              		.loc 1 3128 0 is_stmt 0 discriminator 1
 16254 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 16255 0034 0B2B     		cmp	r3, #11
 16256 0036 EDD9     		bls	.L781
3130:..\src/command_processing.c ****     }
3131:..\src/command_processing.c ****     
3132:..\src/command_processing.c ****     // Calculate checksum
3133:..\src/command_processing.c ****     packet_data[2+NUM_OF_ADC_CHANNELS_MAX] = LCRChecksum(packet_data, 2+NUM_OF_ADC_CHANNELS_MAX);
 16257              		.loc 1 3133 0 is_stmt 1
 16258 0038 3B46     		mov	r3, r7
 16259 003a 0E21     		movs	r1, #14
 16260 003c 1846     		mov	r0, r3
 16261 003e FFF7FEFF 		bl	LCRChecksum
 16262 0042 0346     		mov	r3, r0
 16263 0044 BB73     		strb	r3, [r7, #14]
3134:..\src/command_processing.c ****     
3135:..\src/command_processing.c ****     // Send package to UART
3136:..\src/command_processing.c ****     commWrite(packet_data, 3+NUM_OF_ADC_CHANNELS_MAX);
 16264              		.loc 1 3136 0
 16265 0046 3B46     		mov	r3, r7
 16266 0048 0F21     		movs	r1, #15
 16267 004a 1846     		mov	r0, r3
 16268 004c FFF7FEFF 		bl	commWrite
3137:..\src/command_processing.c ****     
3138:..\src/command_processing.c **** }
 16269              		.loc 1 3138 0
 16270 0050 00BF     		nop
 16271 0052 1037     		adds	r7, r7, #16
 16272              		.cfi_def_cfa_offset 8
 16273 0054 BD46     		mov	sp, r7
 16274              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 374


 16275              		@ sp needed
 16276 0056 80BD     		pop	{r7, pc}
 16277              	.L783:
 16278              		.align	2
 16279              	.L782:
 16280 0058 00000000 		.word	c_mem
 16281              		.cfi_endproc
 16282              	.LFE104:
 16283              		.size	cmd_get_ADC_map, .-cmd_get_ADC_map
 16284              		.section	.text.cmd_get_ADC_raw,"ax",%progbits
 16285              		.align	2
 16286              		.global	cmd_get_ADC_raw
 16287              		.thumb
 16288              		.thumb_func
 16289              		.type	cmd_get_ADC_raw, %function
 16290              	cmd_get_ADC_raw:
 16291              	.LFB105:
3139:..\src/command_processing.c **** 
3140:..\src/command_processing.c **** void cmd_get_ADC_raw(){
 16292              		.loc 1 3140 0
 16293              		.cfi_startproc
 16294              		@ args = 0, pretend = 0, frame = 32
 16295              		@ frame_needed = 1, uses_anonymous_args = 0
 16296 0000 90B5     		push	{r4, r7, lr}
 16297              		.cfi_def_cfa_offset 12
 16298              		.cfi_offset 4, -12
 16299              		.cfi_offset 7, -8
 16300              		.cfi_offset 14, -4
 16301 0002 89B0     		sub	sp, sp, #36
 16302              		.cfi_def_cfa_offset 48
 16303 0004 00AF     		add	r7, sp, #0
 16304              		.cfi_def_cfa_register 7
3141:..\src/command_processing.c ****     //Retrieve Additional EMG port raw values
3142:..\src/command_processing.c ****     
3143:..\src/command_processing.c ****     uint8 packet_data[2+2*NUM_OF_ADC_CHANNELS_MAX];
3144:..\src/command_processing.c ****     uint8 CYDATA i, idx = 0;
 16305              		.loc 1 3144 0
 16306 0006 0023     		movs	r3, #0
 16307 0008 BB77     		strb	r3, [r7, #30]
3145:..\src/command_processing.c ****     int16 aux_int16;
3146:..\src/command_processing.c ****     
3147:..\src/command_processing.c ****     // Header        
3148:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ADC_RAW;
 16308              		.loc 1 3148 0
 16309 000a A623     		movs	r3, #166
 16310 000c 3B71     		strb	r3, [r7, #4]
3149:..\src/command_processing.c ****     
3150:..\src/command_processing.c ****     // Fill payload
3151:..\src/command_processing.c ****     for (i = 0; i < NUM_OF_ANALOG_INPUTS; i++) {       
 16311              		.loc 1 3151 0
 16312 000e 0023     		movs	r3, #0
 16313 0010 FB77     		strb	r3, [r7, #31]
 16314 0012 27E0     		b	.L785
 16315              	.L787:
3152:..\src/command_processing.c ****         if (c_mem.ADC_conf[i] == 1) {
 16316              		.loc 1 3152 0
 16317 0014 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 375


 16318 0016 274A     		ldr	r2, .L788
 16319 0018 1344     		add	r3, r3, r2
 16320 001a 93F87431 		ldrb	r3, [r3, #372]	@ zero_extendqisi2
 16321 001e 012B     		cmp	r3, #1
 16322 0020 1DD1     		bne	.L786
3153:..\src/command_processing.c ****             aux_int16 = (int16) ADC_buf[i];
 16323              		.loc 1 3153 0
 16324 0022 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 16325 0024 244A     		ldr	r2, .L788+4
 16326 0026 32F91330 		ldrsh	r3, [r2, r3, lsl #1]
 16327 002a 7B80     		strh	r3, [r7, #2]	@ movhi
3154:..\src/command_processing.c ****             packet_data[(idx << 1) + 2] = ((char*)(&aux_int16))[0];
 16328              		.loc 1 3154 0
 16329 002c BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16330 002e 5B00     		lsls	r3, r3, #1
 16331 0030 0233     		adds	r3, r3, #2
 16332 0032 BA1C     		adds	r2, r7, #2
 16333 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 16334 0036 07F12001 		add	r1, r7, #32
 16335 003a 0B44     		add	r3, r3, r1
 16336 003c 03F81C2C 		strb	r2, [r3, #-28]
3155:..\src/command_processing.c ****             packet_data[(idx << 1) + 1] = ((char*)(&aux_int16))[1];
 16337              		.loc 1 3155 0
 16338 0040 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16339 0042 5B00     		lsls	r3, r3, #1
 16340 0044 5A1C     		adds	r2, r3, #1
 16341 0046 BB1C     		adds	r3, r7, #2
 16342 0048 0133     		adds	r3, r3, #1
 16343 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 16344 004c 07F12003 		add	r3, r7, #32
 16345 0050 1344     		add	r3, r3, r2
 16346 0052 0A46     		mov	r2, r1
 16347 0054 03F81C2C 		strb	r2, [r3, #-28]
3156:..\src/command_processing.c ****             //*((int16 *) &packet_data[(idx << 1) + 1]) = (int16) (g_measOld.add_emg[i]);
3157:..\src/command_processing.c ****             idx++;
 16348              		.loc 1 3157 0
 16349 0058 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16350 005a 0133     		adds	r3, r3, #1
 16351 005c BB77     		strb	r3, [r7, #30]
 16352              	.L786:
3151:..\src/command_processing.c ****         if (c_mem.ADC_conf[i] == 1) {
 16353              		.loc 1 3151 0 discriminator 2
 16354 005e FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 16355 0060 0133     		adds	r3, r3, #1
 16356 0062 FB77     		strb	r3, [r7, #31]
 16357              	.L785:
3151:..\src/command_processing.c ****         if (c_mem.ADC_conf[i] == 1) {
 16358              		.loc 1 3151 0 is_stmt 0 discriminator 1
 16359 0064 154B     		ldr	r3, .L788+8
 16360 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 16361 0068 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 16362 006a 9A42     		cmp	r2, r3
 16363 006c D2D3     		bcc	.L787
3158:..\src/command_processing.c ****         }
3159:..\src/command_processing.c ****     }
3160:..\src/command_processing.c **** 
3161:..\src/command_processing.c ****     // Calculate checksum
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 376


3162:..\src/command_processing.c ****     packet_data[1+2*idx] = LCRChecksum(packet_data, 1+2*idx);
 16364              		.loc 1 3162 0 is_stmt 1
 16365 006e BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16366 0070 5B00     		lsls	r3, r3, #1
 16367 0072 5C1C     		adds	r4, r3, #1
 16368 0074 BB7F     		ldrb	r3, [r7, #30]
 16369 0076 5B00     		lsls	r3, r3, #1
 16370 0078 DBB2     		uxtb	r3, r3
 16371 007a 0133     		adds	r3, r3, #1
 16372 007c DAB2     		uxtb	r2, r3
 16373 007e 3B1D     		adds	r3, r7, #4
 16374 0080 1146     		mov	r1, r2
 16375 0082 1846     		mov	r0, r3
 16376 0084 FFF7FEFF 		bl	LCRChecksum
 16377 0088 0346     		mov	r3, r0
 16378 008a 1A46     		mov	r2, r3
 16379 008c 07F12003 		add	r3, r7, #32
 16380 0090 2344     		add	r3, r3, r4
 16381 0092 03F81C2C 		strb	r2, [r3, #-28]
3163:..\src/command_processing.c ****     
3164:..\src/command_processing.c ****     // Send package to UART
3165:..\src/command_processing.c ****     commWrite(packet_data, 2+2*idx);
 16382              		.loc 1 3165 0
 16383 0096 BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 16384 0098 0133     		adds	r3, r3, #1
 16385 009a 9BB2     		uxth	r3, r3
 16386 009c 5B00     		lsls	r3, r3, #1
 16387 009e 9AB2     		uxth	r2, r3
 16388 00a0 3B1D     		adds	r3, r7, #4
 16389 00a2 1146     		mov	r1, r2
 16390 00a4 1846     		mov	r0, r3
 16391 00a6 FFF7FEFF 		bl	commWrite
3166:..\src/command_processing.c **** }
 16392              		.loc 1 3166 0
 16393 00aa 00BF     		nop
 16394 00ac 2437     		adds	r7, r7, #36
 16395              		.cfi_def_cfa_offset 12
 16396 00ae BD46     		mov	sp, r7
 16397              		.cfi_def_cfa_register 13
 16398              		@ sp needed
 16399 00b0 90BD     		pop	{r4, r7, pc}
 16400              	.L789:
 16401 00b2 00BF     		.align	2
 16402              	.L788:
 16403 00b4 00000000 		.word	c_mem
 16404 00b8 00000000 		.word	ADC_buf
 16405 00bc 00000000 		.word	NUM_OF_ANALOG_INPUTS
 16406              		.cfi_endproc
 16407              	.LFE105:
 16408              		.size	cmd_get_ADC_raw, .-cmd_get_ADC_raw
 16409              		.text
 16410              	.Letext0:
 16411              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 16412              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 16413              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 16414              		.file 6 "..\\src\\commands.h"
 16415              		.file 7 "..\\emFile_V322c\\Code\\Include\\PSoC5/FS_Types.h"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 377


 16416              		.file 8 "..\\src\\globals.h"
 16417              		.file 9 "Generated_Source\\PSoC5/core_cm3.h"
 16418              		.section	.debug_info,"",%progbits
 16419              	.Ldebug_info0:
 16420 0000 EA1A0000 		.4byte	0x1aea
 16421 0004 0400     		.2byte	0x4
 16422 0006 00000000 		.4byte	.Ldebug_abbrev0
 16423 000a 04       		.byte	0x4
 16424 000b 01       		.uleb128 0x1
 16425 000c E5060000 		.4byte	.LASF302
 16426 0010 0C       		.byte	0xc
 16427 0011 A90F0000 		.4byte	.LASF303
 16428 0015 9D020000 		.4byte	.LASF304
 16429 0019 00000000 		.4byte	.Ldebug_ranges0+0
 16430 001d 00000000 		.4byte	0
 16431 0021 00000000 		.4byte	.Ldebug_line0
 16432 0025 02       		.uleb128 0x2
 16433 0026 01       		.byte	0x1
 16434 0027 06       		.byte	0x6
 16435 0028 E2020000 		.4byte	.LASF0
 16436 002c 02       		.uleb128 0x2
 16437 002d 01       		.byte	0x1
 16438 002e 08       		.byte	0x8
 16439 002f 2F030000 		.4byte	.LASF1
 16440 0033 02       		.uleb128 0x2
 16441 0034 02       		.byte	0x2
 16442 0035 05       		.byte	0x5
 16443 0036 B50C0000 		.4byte	.LASF2
 16444 003a 02       		.uleb128 0x2
 16445 003b 02       		.byte	0x2
 16446 003c 07       		.byte	0x7
 16447 003d E20E0000 		.4byte	.LASF3
 16448 0041 03       		.uleb128 0x3
 16449 0042 780F0000 		.4byte	.LASF5
 16450 0046 03       		.byte	0x3
 16451 0047 3F       		.byte	0x3f
 16452 0048 4C000000 		.4byte	0x4c
 16453 004c 02       		.uleb128 0x2
 16454 004d 04       		.byte	0x4
 16455 004e 05       		.byte	0x5
 16456 004f EE010000 		.4byte	.LASF4
 16457 0053 03       		.uleb128 0x3
 16458 0054 94070000 		.4byte	.LASF6
 16459 0058 03       		.byte	0x3
 16460 0059 41       		.byte	0x41
 16461 005a 5E000000 		.4byte	0x5e
 16462 005e 02       		.uleb128 0x2
 16463 005f 04       		.byte	0x4
 16464 0060 07       		.byte	0x7
 16465 0061 CD050000 		.4byte	.LASF7
 16466 0065 02       		.uleb128 0x2
 16467 0066 08       		.byte	0x8
 16468 0067 05       		.byte	0x5
 16469 0068 9F070000 		.4byte	.LASF8
 16470 006c 02       		.uleb128 0x2
 16471 006d 08       		.byte	0x8
 16472 006e 07       		.byte	0x7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 378


 16473 006f 920A0000 		.4byte	.LASF9
 16474 0073 04       		.uleb128 0x4
 16475 0074 04       		.byte	0x4
 16476 0075 05       		.byte	0x5
 16477 0076 696E7400 		.ascii	"int\000"
 16478 007a 02       		.uleb128 0x2
 16479 007b 04       		.byte	0x4
 16480 007c 07       		.byte	0x7
 16481 007d 67080000 		.4byte	.LASF10
 16482 0081 03       		.uleb128 0x3
 16483 0082 49000000 		.4byte	.LASF11
 16484 0086 04       		.byte	0x4
 16485 0087 2C       		.byte	0x2c
 16486 0088 41000000 		.4byte	0x41
 16487 008c 03       		.uleb128 0x3
 16488 008d 4C0E0000 		.4byte	.LASF12
 16489 0091 04       		.byte	0x4
 16490 0092 30       		.byte	0x30
 16491 0093 53000000 		.4byte	0x53
 16492 0097 05       		.uleb128 0x5
 16493 0098 A30C0000 		.4byte	.LASF13
 16494 009c 05       		.byte	0x5
 16495 009d E401     		.2byte	0x1e4
 16496 009f 2C000000 		.4byte	0x2c
 16497 00a3 05       		.uleb128 0x5
 16498 00a4 FC0F0000 		.4byte	.LASF14
 16499 00a8 05       		.byte	0x5
 16500 00a9 E501     		.2byte	0x1e5
 16501 00ab 3A000000 		.4byte	0x3a
 16502 00af 05       		.uleb128 0x5
 16503 00b0 6A000000 		.4byte	.LASF15
 16504 00b4 05       		.byte	0x5
 16505 00b5 E601     		.2byte	0x1e6
 16506 00b7 5E000000 		.4byte	0x5e
 16507 00bb 05       		.uleb128 0x5
 16508 00bc 5F010000 		.4byte	.LASF16
 16509 00c0 05       		.byte	0x5
 16510 00c1 E701     		.2byte	0x1e7
 16511 00c3 25000000 		.4byte	0x25
 16512 00c7 05       		.uleb128 0x5
 16513 00c8 CF0D0000 		.4byte	.LASF17
 16514 00cc 05       		.byte	0x5
 16515 00cd E801     		.2byte	0x1e8
 16516 00cf 33000000 		.4byte	0x33
 16517 00d3 05       		.uleb128 0x5
 16518 00d4 1B0F0000 		.4byte	.LASF18
 16519 00d8 05       		.byte	0x5
 16520 00d9 E901     		.2byte	0x1e9
 16521 00db 4C000000 		.4byte	0x4c
 16522 00df 05       		.uleb128 0x5
 16523 00e0 31020000 		.4byte	.LASF19
 16524 00e4 05       		.byte	0x5
 16525 00e5 EA01     		.2byte	0x1ea
 16526 00e7 EB000000 		.4byte	0xeb
 16527 00eb 02       		.uleb128 0x2
 16528 00ec 04       		.byte	0x4
 16529 00ed 04       		.byte	0x4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 379


 16530 00ee 40080000 		.4byte	.LASF20
 16531 00f2 02       		.uleb128 0x2
 16532 00f3 08       		.byte	0x8
 16533 00f4 04       		.byte	0x4
 16534 00f5 03080000 		.4byte	.LASF21
 16535 00f9 02       		.uleb128 0x2
 16536 00fa 01       		.byte	0x1
 16537 00fb 08       		.byte	0x8
 16538 00fc DC030000 		.4byte	.LASF22
 16539 0100 05       		.uleb128 0x5
 16540 0101 620B0000 		.4byte	.LASF23
 16541 0105 05       		.byte	0x5
 16542 0106 8E02     		.2byte	0x28e
 16543 0108 0C010000 		.4byte	0x10c
 16544 010c 06       		.uleb128 0x6
 16545 010d 97000000 		.4byte	0x97
 16546 0111 02       		.uleb128 0x2
 16547 0112 08       		.byte	0x8
 16548 0113 04       		.byte	0x4
 16549 0114 B6090000 		.4byte	.LASF24
 16550 0118 02       		.uleb128 0x2
 16551 0119 04       		.byte	0x4
 16552 011a 07       		.byte	0x7
 16553 011b 09000000 		.4byte	.LASF25
 16554 011f 07       		.uleb128 0x7
 16555 0120 04       		.byte	0x4
 16556 0121 F9000000 		.4byte	0xf9
 16557 0125 07       		.uleb128 0x7
 16558 0126 04       		.byte	0x4
 16559 0127 2B010000 		.4byte	0x12b
 16560 012b 08       		.uleb128 0x8
 16561 012c F9000000 		.4byte	0xf9
 16562 0130 09       		.uleb128 0x9
 16563 0131 F9000000 		.4byte	0xf9
 16564 0135 40010000 		.4byte	0x140
 16565 0139 0A       		.uleb128 0xa
 16566 013a 18010000 		.4byte	0x118
 16567 013e 19       		.byte	0x19
 16568 013f 00       		.byte	0
 16569 0140 0B       		.uleb128 0xb
 16570 0141 A0080000 		.4byte	.LASF55
 16571 0145 01       		.byte	0x1
 16572 0146 2C000000 		.4byte	0x2c
 16573 014a 06       		.byte	0x6
 16574 014b 42       		.byte	0x42
 16575 014c FF010000 		.4byte	0x1ff
 16576 0150 0C       		.uleb128 0xc
 16577 0151 16100000 		.4byte	.LASF26
 16578 0155 00       		.byte	0
 16579 0156 0C       		.uleb128 0xc
 16580 0157 210D0000 		.4byte	.LASF27
 16581 015b 01       		.byte	0x1
 16582 015c 0C       		.uleb128 0xc
 16583 015d A9050000 		.4byte	.LASF28
 16584 0161 03       		.byte	0x3
 16585 0162 0C       		.uleb128 0xc
 16586 0163 63030000 		.4byte	.LASF29
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 380


 16587 0167 04       		.byte	0x4
 16588 0168 0C       		.uleb128 0xc
 16589 0169 8A0B0000 		.4byte	.LASF30
 16590 016d 05       		.byte	0x5
 16591 016e 0C       		.uleb128 0xc
 16592 016f 89060000 		.4byte	.LASF31
 16593 0173 06       		.byte	0x6
 16594 0174 0C       		.uleb128 0xc
 16595 0175 ED050000 		.4byte	.LASF32
 16596 0179 09       		.byte	0x9
 16597 017a 0C       		.uleb128 0xc
 16598 017b 12000000 		.4byte	.LASF33
 16599 017f 0A       		.byte	0xa
 16600 0180 0C       		.uleb128 0xc
 16601 0181 B10D0000 		.4byte	.LASF34
 16602 0185 0C       		.byte	0xc
 16603 0186 0C       		.uleb128 0xc
 16604 0187 F3090000 		.4byte	.LASF35
 16605 018b 0D       		.byte	0xd
 16606 018c 0C       		.uleb128 0xc
 16607 018d 3C000000 		.4byte	.LASF36
 16608 0191 80       		.byte	0x80
 16609 0192 0C       		.uleb128 0xc
 16610 0193 CB030000 		.4byte	.LASF37
 16611 0197 81       		.byte	0x81
 16612 0198 0C       		.uleb128 0xc
 16613 0199 BE040000 		.4byte	.LASF38
 16614 019d 82       		.byte	0x82
 16615 019e 0C       		.uleb128 0xc
 16616 019f F90C0000 		.4byte	.LASF39
 16617 01a3 83       		.byte	0x83
 16618 01a4 0C       		.uleb128 0xc
 16619 01a5 7A0C0000 		.4byte	.LASF40
 16620 01a9 84       		.byte	0x84
 16621 01aa 0C       		.uleb128 0xc
 16622 01ab 49020000 		.4byte	.LASF41
 16623 01af 85       		.byte	0x85
 16624 01b0 0C       		.uleb128 0xc
 16625 01b1 CF060000 		.4byte	.LASF42
 16626 01b5 86       		.byte	0x86
 16627 01b6 0C       		.uleb128 0xc
 16628 01b7 7D060000 		.4byte	.LASF43
 16629 01bb 88       		.byte	0x88
 16630 01bc 0C       		.uleb128 0xc
 16631 01bd 920D0000 		.4byte	.LASF44
 16632 01c1 89       		.byte	0x89
 16633 01c2 0C       		.uleb128 0xc
 16634 01c3 E00A0000 		.4byte	.LASF45
 16635 01c7 8B       		.byte	0x8b
 16636 01c8 0C       		.uleb128 0xc
 16637 01c9 87090000 		.4byte	.LASF46
 16638 01cd 8C       		.byte	0x8c
 16639 01ce 0C       		.uleb128 0xc
 16640 01cf 7A070000 		.4byte	.LASF47
 16641 01d3 8E       		.byte	0x8e
 16642 01d4 0C       		.uleb128 0xc
 16643 01d5 180B0000 		.4byte	.LASF48
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 381


 16644 01d9 90       		.byte	0x90
 16645 01da 0C       		.uleb128 0xc
 16646 01db BB0E0000 		.4byte	.LASF49
 16647 01df A1       		.byte	0xa1
 16648 01e0 0C       		.uleb128 0xc
 16649 01e1 3D0C0000 		.4byte	.LASF50
 16650 01e5 A2       		.byte	0xa2
 16651 01e6 0C       		.uleb128 0xc
 16652 01e7 F2080000 		.4byte	.LASF51
 16653 01eb A3       		.byte	0xa3
 16654 01ec 0C       		.uleb128 0xc
 16655 01ed 4F0C0000 		.4byte	.LASF52
 16656 01f1 A4       		.byte	0xa4
 16657 01f2 0C       		.uleb128 0xc
 16658 01f3 100D0000 		.4byte	.LASF53
 16659 01f7 A5       		.byte	0xa5
 16660 01f8 0C       		.uleb128 0xc
 16661 01f9 230C0000 		.4byte	.LASF54
 16662 01fd A6       		.byte	0xa6
 16663 01fe 00       		.byte	0
 16664 01ff 0B       		.uleb128 0xb
 16665 0200 D30F0000 		.4byte	.LASF56
 16666 0204 01       		.byte	0x1
 16667 0205 2C000000 		.4byte	0x2c
 16668 0209 06       		.byte	0x6
 16669 020a 8B       		.byte	0x8b
 16670 020b 34020000 		.4byte	0x234
 16671 020f 0C       		.uleb128 0xc
 16672 0210 3A050000 		.4byte	.LASF57
 16673 0214 00       		.byte	0
 16674 0215 0C       		.uleb128 0xc
 16675 0216 DE080000 		.4byte	.LASF58
 16676 021a 01       		.byte	0x1
 16677 021b 0C       		.uleb128 0xc
 16678 021c A5010000 		.4byte	.LASF59
 16679 0220 02       		.byte	0x2
 16680 0221 0C       		.uleb128 0xc
 16681 0222 30010000 		.4byte	.LASF60
 16682 0226 03       		.byte	0x3
 16683 0227 0C       		.uleb128 0xc
 16684 0228 E3000000 		.4byte	.LASF61
 16685 022c 04       		.byte	0x4
 16686 022d 0C       		.uleb128 0xc
 16687 022e 24000000 		.4byte	.LASF62
 16688 0232 05       		.byte	0x5
 16689 0233 00       		.byte	0
 16690 0234 0B       		.uleb128 0xb
 16691 0235 AD070000 		.4byte	.LASF63
 16692 0239 01       		.byte	0x1
 16693 023a 2C000000 		.4byte	0x2c
 16694 023e 06       		.byte	0x6
 16695 023f 9D       		.byte	0x9d
 16696 0240 5D020000 		.4byte	0x25d
 16697 0244 0C       		.uleb128 0xc
 16698 0245 5D0F0000 		.4byte	.LASF64
 16699 0249 00       		.byte	0
 16700 024a 0C       		.uleb128 0xc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 382


 16701 024b 71060000 		.4byte	.LASF65
 16702 024f 01       		.byte	0x1
 16703 0250 0C       		.uleb128 0xc
 16704 0251 A6090000 		.4byte	.LASF66
 16705 0255 02       		.byte	0x2
 16706 0256 0C       		.uleb128 0xc
 16707 0257 94050000 		.4byte	.LASF67
 16708 025b 03       		.byte	0x3
 16709 025c 00       		.byte	0
 16710 025d 0B       		.uleb128 0xb
 16711 025e 10030000 		.4byte	.LASF68
 16712 0262 01       		.byte	0x1
 16713 0263 2C000000 		.4byte	0x2c
 16714 0267 06       		.byte	0x6
 16715 0268 A7       		.byte	0xa7
 16716 0269 7A020000 		.4byte	0x27a
 16717 026d 0C       		.uleb128 0xc
 16718 026e 330C0000 		.4byte	.LASF69
 16719 0272 00       		.byte	0
 16720 0273 0C       		.uleb128 0xc
 16721 0274 E5070000 		.4byte	.LASF70
 16722 0278 01       		.byte	0x1
 16723 0279 00       		.byte	0
 16724 027a 0B       		.uleb128 0xb
 16725 027b 4B0A0000 		.4byte	.LASF71
 16726 027f 01       		.byte	0x1
 16727 0280 2C000000 		.4byte	0x2c
 16728 0284 06       		.byte	0x6
 16729 0285 AC       		.byte	0xac
 16730 0286 97020000 		.4byte	0x297
 16731 028a 0C       		.uleb128 0xc
 16732 028b 1F050000 		.4byte	.LASF72
 16733 028f 00       		.byte	0
 16734 0290 0C       		.uleb128 0xc
 16735 0291 2E060000 		.4byte	.LASF73
 16736 0295 01       		.byte	0x1
 16737 0296 00       		.byte	0
 16738 0297 0B       		.uleb128 0xb
 16739 0298 C40D0000 		.4byte	.LASF74
 16740 029c 01       		.byte	0x1
 16741 029d 2C000000 		.4byte	0x2c
 16742 02a1 06       		.byte	0x6
 16743 02a2 B4       		.byte	0xb4
 16744 02a3 DE020000 		.4byte	0x2de
 16745 02a7 0C       		.uleb128 0xc
 16746 02a8 35060000 		.4byte	.LASF75
 16747 02ac 00       		.byte	0
 16748 02ad 0C       		.uleb128 0xc
 16749 02ae E10F0000 		.4byte	.LASF76
 16750 02b2 01       		.byte	0x1
 16751 02b3 0C       		.uleb128 0xc
 16752 02b4 BD070000 		.4byte	.LASF77
 16753 02b8 02       		.byte	0x2
 16754 02b9 0C       		.uleb128 0xc
 16755 02ba 55090000 		.4byte	.LASF78
 16756 02be 03       		.byte	0x3
 16757 02bf 0C       		.uleb128 0xc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 383


 16758 02c0 AB080000 		.4byte	.LASF79
 16759 02c4 04       		.byte	0x4
 16760 02c5 0C       		.uleb128 0xc
 16761 02c6 A90A0000 		.4byte	.LASF80
 16762 02ca 05       		.byte	0x5
 16763 02cb 0C       		.uleb128 0xc
 16764 02cc C2090000 		.4byte	.LASF81
 16765 02d0 06       		.byte	0x6
 16766 02d1 0C       		.uleb128 0xc
 16767 02d2 38090000 		.4byte	.LASF82
 16768 02d6 07       		.byte	0x7
 16769 02d7 0C       		.uleb128 0xc
 16770 02d8 0C050000 		.4byte	.LASF83
 16771 02dc 08       		.byte	0x8
 16772 02dd 00       		.byte	0
 16773 02de 03       		.uleb128 0x3
 16774 02df 3E0F0000 		.4byte	.LASF84
 16775 02e3 07       		.byte	0x7
 16776 02e4 7E       		.byte	0x7e
 16777 02e5 E9020000 		.4byte	0x2e9
 16778 02e9 0D       		.uleb128 0xd
 16779 02ea 3E0F0000 		.4byte	.LASF84
 16780 02ee 07       		.uleb128 0x7
 16781 02ef 04       		.byte	0x4
 16782 02f0 DE020000 		.4byte	0x2de
 16783 02f4 0E       		.uleb128 0xe
 16784 02f5 73070000 		.4byte	.LASF87
 16785 02f9 10       		.byte	0x10
 16786 02fa 08       		.byte	0x8
 16787 02fb A7       		.byte	0xa7
 16788 02fc 31030000 		.4byte	0x331
 16789 0300 0F       		.uleb128 0xf
 16790 0301 706F7300 		.ascii	"pos\000"
 16791 0305 08       		.byte	0x8
 16792 0306 A8       		.byte	0xa8
 16793 0307 D3000000 		.4byte	0xd3
 16794 030b 00       		.byte	0
 16795 030c 10       		.uleb128 0x10
 16796 030d 61060000 		.4byte	.LASF85
 16797 0311 08       		.byte	0x8
 16798 0312 A9       		.byte	0xa9
 16799 0313 D3000000 		.4byte	0xd3
 16800 0317 04       		.byte	0x4
 16801 0318 0F       		.uleb128 0xf
 16802 0319 70776D00 		.ascii	"pwm\000"
 16803 031d 08       		.byte	0x8
 16804 031e AA       		.byte	0xaa
 16805 031f D3000000 		.4byte	0xd3
 16806 0323 08       		.byte	0x8
 16807 0324 10       		.uleb128 0x10
 16808 0325 DA0A0000 		.4byte	.LASF86
 16809 0329 08       		.byte	0x8
 16810 032a AB       		.byte	0xab
 16811 032b 97000000 		.4byte	0x97
 16812 032f 0C       		.byte	0xc
 16813 0330 00       		.byte	0
 16814 0331 0E       		.uleb128 0xe
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 384


 16815 0332 1B0C0000 		.4byte	.LASF88
 16816 0336 54       		.byte	0x54
 16817 0337 08       		.byte	0x8
 16818 0338 B2       		.byte	0xb2
 16819 0339 9E030000 		.4byte	0x39e
 16820 033d 0F       		.uleb128 0xf
 16821 033e 706F7300 		.ascii	"pos\000"
 16822 0342 08       		.byte	0x8
 16823 0343 B3       		.byte	0xb3
 16824 0344 9E030000 		.4byte	0x39e
 16825 0348 00       		.byte	0
 16826 0349 10       		.uleb128 0x10
 16827 034a 61060000 		.4byte	.LASF85
 16828 034e 08       		.byte	0x8
 16829 034f B4       		.byte	0xb4
 16830 0350 AE030000 		.4byte	0x3ae
 16831 0354 0C       		.byte	0xc
 16832 0355 10       		.uleb128 0x10
 16833 0356 110E0000 		.4byte	.LASF89
 16834 035a 08       		.byte	0x8
 16835 035b B5       		.byte	0xb5
 16836 035c D3000000 		.4byte	0xd3
 16837 0360 14       		.byte	0x14
 16838 0361 0F       		.uleb128 0xf
 16839 0362 726F7400 		.ascii	"rot\000"
 16840 0366 08       		.byte	0x8
 16841 0367 B6       		.byte	0xb6
 16842 0368 BE030000 		.4byte	0x3be
 16843 036c 18       		.byte	0x18
 16844 036d 0F       		.uleb128 0xf
 16845 036e 656D6700 		.ascii	"emg\000"
 16846 0372 08       		.byte	0x8
 16847 0373 B8       		.byte	0xb8
 16848 0374 AE030000 		.4byte	0x3ae
 16849 0378 1C       		.byte	0x1c
 16850 0379 0F       		.uleb128 0xf
 16851 037a 76656C00 		.ascii	"vel\000"
 16852 037e 08       		.byte	0x8
 16853 037f B9       		.byte	0xb9
 16854 0380 9E030000 		.4byte	0x39e
 16855 0384 24       		.byte	0x24
 16856 0385 0F       		.uleb128 0xf
 16857 0386 61636300 		.ascii	"acc\000"
 16858 038a 08       		.byte	0x8
 16859 038b BA       		.byte	0xba
 16860 038c 9E030000 		.4byte	0x39e
 16861 0390 30       		.byte	0x30
 16862 0391 10       		.uleb128 0x10
 16863 0392 4D090000 		.4byte	.LASF90
 16864 0396 08       		.byte	0x8
 16865 0397 BB       		.byte	0xbb
 16866 0398 CE030000 		.4byte	0x3ce
 16867 039c 3C       		.byte	0x3c
 16868 039d 00       		.byte	0
 16869 039e 09       		.uleb128 0x9
 16870 039f D3000000 		.4byte	0xd3
 16871 03a3 AE030000 		.4byte	0x3ae
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 385


 16872 03a7 0A       		.uleb128 0xa
 16873 03a8 18010000 		.4byte	0x118
 16874 03ac 02       		.byte	0x2
 16875 03ad 00       		.byte	0
 16876 03ae 09       		.uleb128 0x9
 16877 03af D3000000 		.4byte	0xd3
 16878 03b3 BE030000 		.4byte	0x3be
 16879 03b7 0A       		.uleb128 0xa
 16880 03b8 18010000 		.4byte	0x118
 16881 03bc 01       		.byte	0x1
 16882 03bd 00       		.byte	0
 16883 03be 09       		.uleb128 0x9
 16884 03bf BB000000 		.4byte	0xbb
 16885 03c3 CE030000 		.4byte	0x3ce
 16886 03c7 0A       		.uleb128 0xa
 16887 03c8 18010000 		.4byte	0x118
 16888 03cc 02       		.byte	0x2
 16889 03cd 00       		.byte	0
 16890 03ce 09       		.uleb128 0x9
 16891 03cf D3000000 		.4byte	0xd3
 16892 03d3 DE030000 		.4byte	0x3de
 16893 03d7 0A       		.uleb128 0xa
 16894 03d8 18010000 		.4byte	0x118
 16895 03dc 05       		.byte	0x5
 16896 03dd 00       		.byte	0
 16897 03de 0E       		.uleb128 0xe
 16898 03df 56000000 		.4byte	.LASF91
 16899 03e3 86       		.byte	0x86
 16900 03e4 08       		.byte	0x8
 16901 03e5 C2       		.byte	0xc2
 16902 03e6 1B040000 		.4byte	0x41b
 16903 03ea 10       		.uleb128 0x10
 16904 03eb DA040000 		.4byte	.LASF92
 16905 03ef 08       		.byte	0x8
 16906 03f0 C3       		.byte	0xc3
 16907 03f1 1B040000 		.4byte	0x41b
 16908 03f5 00       		.byte	0
 16909 03f6 10       		.uleb128 0x10
 16910 03f7 C90A0000 		.4byte	.LASF93
 16911 03fb 08       		.byte	0x8
 16912 03fc C4       		.byte	0xc4
 16913 03fd C7000000 		.4byte	0xc7
 16914 0401 80       		.byte	0x80
 16915 0402 0F       		.uleb128 0xf
 16916 0403 696E6400 		.ascii	"ind\000"
 16917 0407 08       		.byte	0x8
 16918 0408 C5       		.byte	0xc5
 16919 0409 C7000000 		.4byte	0xc7
 16920 040d 82       		.byte	0x82
 16921 040e 10       		.uleb128 0x10
 16922 040f 9F010000 		.4byte	.LASF94
 16923 0413 08       		.byte	0x8
 16924 0414 C6       		.byte	0xc6
 16925 0415 97000000 		.4byte	0x97
 16926 0419 84       		.byte	0x84
 16927 041a 00       		.byte	0
 16928 041b 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 386


 16929 041c 97000000 		.4byte	0x97
 16930 0420 2B040000 		.4byte	0x42b
 16931 0424 0A       		.uleb128 0xa
 16932 0425 18010000 		.4byte	0x118
 16933 0429 7F       		.byte	0x7f
 16934 042a 00       		.byte	0
 16935 042b 11       		.uleb128 0x11
 16936 042c B4060000 		.4byte	.LASF95
 16937 0430 8401     		.2byte	0x184
 16938 0432 08       		.byte	0x8
 16939 0433 CE       		.byte	0xce
 16940 0434 6C070000 		.4byte	0x76c
 16941 0438 10       		.uleb128 0x10
 16942 0439 5A020000 		.4byte	.LASF96
 16943 043d 08       		.byte	0x8
 16944 043e D2       		.byte	0xd2
 16945 043f 6C070000 		.4byte	0x76c
 16946 0443 00       		.byte	0
 16947 0444 10       		.uleb128 0x10
 16948 0445 7F010000 		.4byte	.LASF97
 16949 0449 08       		.byte	0x8
 16950 044a D4       		.byte	0xd4
 16951 044b 7C070000 		.4byte	0x77c
 16952 044f 08       		.byte	0x8
 16953 0450 10       		.uleb128 0x10
 16954 0451 99090000 		.4byte	.LASF98
 16955 0455 08       		.byte	0x8
 16956 0456 D6       		.byte	0xd6
 16957 0457 8C070000 		.4byte	0x78c
 16958 045b 30       		.byte	0x30
 16959 045c 10       		.uleb128 0x10
 16960 045d 03010000 		.4byte	.LASF99
 16961 0461 08       		.byte	0x8
 16962 0462 D8       		.byte	0xd8
 16963 0463 AF000000 		.4byte	0xaf
 16964 0467 40       		.byte	0x40
 16965 0468 10       		.uleb128 0x10
 16966 0469 910F0000 		.4byte	.LASF100
 16967 046d 08       		.byte	0x8
 16968 046e D9       		.byte	0xd9
 16969 046f AF000000 		.4byte	0xaf
 16970 0473 44       		.byte	0x44
 16971 0474 10       		.uleb128 0x10
 16972 0475 DF050000 		.4byte	.LASF101
 16973 0479 08       		.byte	0x8
 16974 047a DA       		.byte	0xda
 16975 047b AF000000 		.4byte	0xaf
 16976 047f 48       		.byte	0x48
 16977 0480 10       		.uleb128 0x10
 16978 0481 12060000 		.4byte	.LASF102
 16979 0485 08       		.byte	0x8
 16980 0486 DB       		.byte	0xdb
 16981 0487 AF000000 		.4byte	0xaf
 16982 048b 4C       		.byte	0x4c
 16983 048c 10       		.uleb128 0x10
 16984 048d 110A0000 		.4byte	.LASF103
 16985 0491 08       		.byte	0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 387


 16986 0492 DD       		.byte	0xdd
 16987 0493 9C070000 		.4byte	0x79c
 16988 0497 50       		.byte	0x50
 16989 0498 10       		.uleb128 0x10
 16990 0499 F7010000 		.4byte	.LASF104
 16991 049d 08       		.byte	0x8
 16992 049e DE       		.byte	0xde
 16993 049f AC070000 		.4byte	0x7ac
 16994 04a3 56       		.byte	0x56
 16995 04a4 10       		.uleb128 0x10
 16996 04a5 B7080000 		.4byte	.LASF105
 16997 04a9 08       		.byte	0x8
 16998 04aa E3       		.byte	0xe3
 16999 04ab 97000000 		.4byte	0x97
 17000 04af A0       		.byte	0xa0
 17001 04b0 0F       		.uleb128 0xf
 17002 04b1 696400   		.ascii	"id\000"
 17003 04b4 08       		.byte	0x8
 17004 04b5 E4       		.byte	0xe4
 17005 04b6 97000000 		.4byte	0x97
 17006 04ba A1       		.byte	0xa1
 17007 04bb 0F       		.uleb128 0xf
 17008 04bc 6B5F7000 		.ascii	"k_p\000"
 17009 04c0 08       		.byte	0x8
 17010 04c1 E6       		.byte	0xe6
 17011 04c2 D3000000 		.4byte	0xd3
 17012 04c6 A4       		.byte	0xa4
 17013 04c7 0F       		.uleb128 0xf
 17014 04c8 6B5F6900 		.ascii	"k_i\000"
 17015 04cc 08       		.byte	0x8
 17016 04cd E7       		.byte	0xe7
 17017 04ce D3000000 		.4byte	0xd3
 17018 04d2 A8       		.byte	0xa8
 17019 04d3 0F       		.uleb128 0xf
 17020 04d4 6B5F6400 		.ascii	"k_d\000"
 17021 04d8 08       		.byte	0x8
 17022 04d9 E8       		.byte	0xe8
 17023 04da D3000000 		.4byte	0xd3
 17024 04de AC       		.byte	0xac
 17025 04df 10       		.uleb128 0x10
 17026 04e0 290B0000 		.4byte	.LASF106
 17027 04e4 08       		.byte	0x8
 17028 04e5 EA       		.byte	0xea
 17029 04e6 D3000000 		.4byte	0xd3
 17030 04ea B0       		.byte	0xb0
 17031 04eb 10       		.uleb128 0x10
 17032 04ec 46040000 		.4byte	.LASF107
 17033 04f0 08       		.byte	0x8
 17034 04f1 EB       		.byte	0xeb
 17035 04f2 D3000000 		.4byte	0xd3
 17036 04f6 B4       		.byte	0xb4
 17037 04f7 10       		.uleb128 0x10
 17038 04f8 2B040000 		.4byte	.LASF108
 17039 04fc 08       		.byte	0x8
 17040 04fd EC       		.byte	0xec
 17041 04fe D3000000 		.4byte	0xd3
 17042 0502 B8       		.byte	0xb8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 388


 17043 0503 10       		.uleb128 0x10
 17044 0504 0A0E0000 		.4byte	.LASF109
 17045 0508 08       		.byte	0x8
 17046 0509 ED       		.byte	0xed
 17047 050a D3000000 		.4byte	0xd3
 17048 050e BC       		.byte	0xbc
 17049 050f 10       		.uleb128 0x10
 17050 0510 B7040000 		.4byte	.LASF110
 17051 0514 08       		.byte	0x8
 17052 0515 EF       		.byte	0xef
 17053 0516 D3000000 		.4byte	0xd3
 17054 051a C0       		.byte	0xc0
 17055 051b 10       		.uleb128 0x10
 17056 051c CB0C0000 		.4byte	.LASF111
 17057 0520 08       		.byte	0x8
 17058 0521 F0       		.byte	0xf0
 17059 0522 D3000000 		.4byte	0xd3
 17060 0526 C4       		.byte	0xc4
 17061 0527 10       		.uleb128 0x10
 17062 0528 E1040000 		.4byte	.LASF112
 17063 052c 08       		.byte	0x8
 17064 052d F1       		.byte	0xf1
 17065 052e D3000000 		.4byte	0xd3
 17066 0532 C8       		.byte	0xc8
 17067 0533 10       		.uleb128 0x10
 17068 0534 6D050000 		.4byte	.LASF113
 17069 0538 08       		.byte	0x8
 17070 0539 F2       		.byte	0xf2
 17071 053a D3000000 		.4byte	0xd3
 17072 053e CC       		.byte	0xcc
 17073 053f 10       		.uleb128 0x10
 17074 0540 1F100000 		.4byte	.LASF114
 17075 0544 08       		.byte	0x8
 17076 0545 F4       		.byte	0xf4
 17077 0546 D3000000 		.4byte	0xd3
 17078 054a D0       		.byte	0xd0
 17079 054b 10       		.uleb128 0x10
 17080 054c 22060000 		.4byte	.LASF115
 17081 0550 08       		.byte	0x8
 17082 0551 F5       		.byte	0xf5
 17083 0552 97000000 		.4byte	0x97
 17084 0556 D4       		.byte	0xd4
 17085 0557 10       		.uleb128 0x10
 17086 0558 66060000 		.4byte	.LASF116
 17087 055c 08       		.byte	0x8
 17088 055d F6       		.byte	0xf6
 17089 055e 97000000 		.4byte	0x97
 17090 0562 D5       		.byte	0xd5
 17091 0563 10       		.uleb128 0x10
 17092 0564 CB080000 		.4byte	.LASF117
 17093 0568 08       		.byte	0x8
 17094 0569 F7       		.byte	0xf7
 17095 056a 97000000 		.4byte	0x97
 17096 056e D6       		.byte	0xd6
 17097 056f 0F       		.uleb128 0xf
 17098 0570 72657300 		.ascii	"res\000"
 17099 0574 08       		.byte	0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 389


 17100 0575 F8       		.byte	0xf8
 17101 0576 BC070000 		.4byte	0x7bc
 17102 057a D7       		.byte	0xd7
 17103 057b 10       		.uleb128 0x10
 17104 057c 28060000 		.4byte	.LASF118
 17105 0580 08       		.byte	0x8
 17106 0581 FA       		.byte	0xfa
 17107 0582 9E030000 		.4byte	0x39e
 17108 0586 DC       		.byte	0xdc
 17109 0587 10       		.uleb128 0x10
 17110 0588 3F040000 		.4byte	.LASF119
 17111 058c 08       		.byte	0x8
 17112 058d FC       		.byte	0xfc
 17113 058e CC070000 		.4byte	0x7cc
 17114 0592 E8       		.byte	0xe8
 17115 0593 10       		.uleb128 0x10
 17116 0594 460F0000 		.4byte	.LASF120
 17117 0598 08       		.byte	0x8
 17118 0599 FE       		.byte	0xfe
 17119 059a 97000000 		.4byte	0x97
 17120 059e F4       		.byte	0xf4
 17121 059f 12       		.uleb128 0x12
 17122 05a0 C8000000 		.4byte	.LASF121
 17123 05a4 08       		.byte	0x8
 17124 05a5 0001     		.2byte	0x100
 17125 05a7 D3000000 		.4byte	0xd3
 17126 05ab F8       		.byte	0xf8
 17127 05ac 12       		.uleb128 0x12
 17128 05ad 65040000 		.4byte	.LASF122
 17129 05b1 08       		.byte	0x8
 17130 05b2 0101     		.2byte	0x101
 17131 05b4 D3000000 		.4byte	0xd3
 17132 05b8 FC       		.byte	0xfc
 17133 05b9 13       		.uleb128 0x13
 17134 05ba 1D080000 		.4byte	.LASF123
 17135 05be 08       		.byte	0x8
 17136 05bf 0301     		.2byte	0x103
 17137 05c1 D3000000 		.4byte	0xd3
 17138 05c5 0001     		.2byte	0x100
 17139 05c7 13       		.uleb128 0x13
 17140 05c8 E1030000 		.4byte	.LASF124
 17141 05cc 08       		.byte	0x8
 17142 05cd 0401     		.2byte	0x104
 17143 05cf D3000000 		.4byte	0xd3
 17144 05d3 0401     		.2byte	0x104
 17145 05d5 13       		.uleb128 0x13
 17146 05d6 C50F0000 		.4byte	.LASF125
 17147 05da 08       		.byte	0x8
 17148 05db 0501     		.2byte	0x105
 17149 05dd C7000000 		.4byte	0xc7
 17150 05e1 0801     		.2byte	0x108
 17151 05e3 13       		.uleb128 0x13
 17152 05e4 6B090000 		.4byte	.LASF126
 17153 05e8 08       		.byte	0x8
 17154 05e9 0601     		.2byte	0x106
 17155 05eb DC070000 		.4byte	0x7dc
 17156 05ef 0A01     		.2byte	0x10a
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 390


 17157 05f1 13       		.uleb128 0x13
 17158 05f2 060C0000 		.4byte	.LASF127
 17159 05f6 08       		.byte	0x8
 17160 05f7 0701     		.2byte	0x107
 17161 05f9 97000000 		.4byte	0x97
 17162 05fd 0E01     		.2byte	0x10e
 17163 05ff 13       		.uleb128 0x13
 17164 0600 9B0F0000 		.4byte	.LASF128
 17165 0604 08       		.byte	0x8
 17166 0605 0A01     		.2byte	0x10a
 17167 0607 6C070000 		.4byte	0x76c
 17168 060b 1001     		.2byte	0x110
 17169 060d 13       		.uleb128 0x13
 17170 060e 71040000 		.4byte	.LASF129
 17171 0612 08       		.byte	0x8
 17172 0613 0B01     		.2byte	0x10b
 17173 0615 97000000 		.4byte	0x97
 17174 0619 1801     		.2byte	0x118
 17175 061b 13       		.uleb128 0x13
 17176 061c 1B0A0000 		.4byte	.LASF130
 17177 0620 08       		.byte	0x8
 17178 0621 0C01     		.2byte	0x10c
 17179 0623 97000000 		.4byte	0x97
 17180 0627 1901     		.2byte	0x119
 17181 0629 13       		.uleb128 0x13
 17182 062a CE090000 		.4byte	.LASF131
 17183 062e 08       		.byte	0x8
 17184 062f 0D01     		.2byte	0x10d
 17185 0631 BB000000 		.4byte	0xbb
 17186 0635 1A01     		.2byte	0x11a
 17187 0637 13       		.uleb128 0x13
 17188 0638 F30D0000 		.4byte	.LASF132
 17189 063c 08       		.byte	0x8
 17190 063d 0E01     		.2byte	0x10e
 17191 063f 97000000 		.4byte	0x97
 17192 0643 1B01     		.2byte	0x11b
 17193 0645 13       		.uleb128 0x13
 17194 0646 F7000000 		.4byte	.LASF133
 17195 064a 08       		.byte	0x8
 17196 064b 0F01     		.2byte	0x10f
 17197 064d EC070000 		.4byte	0x7ec
 17198 0651 1C01     		.2byte	0x11c
 17199 0653 13       		.uleb128 0x13
 17200 0654 8D0E0000 		.4byte	.LASF134
 17201 0658 08       		.byte	0x8
 17202 0659 1201     		.2byte	0x112
 17203 065b 97000000 		.4byte	0x97
 17204 065f 3401     		.2byte	0x134
 17205 0661 13       		.uleb128 0x13
 17206 0662 B40A0000 		.4byte	.LASF135
 17207 0666 08       		.byte	0x8
 17208 0667 1301     		.2byte	0x113
 17209 0669 97000000 		.4byte	0x97
 17210 066d 3501     		.2byte	0x135
 17211 066f 13       		.uleb128 0x13
 17212 0670 C8070000 		.4byte	.LASF136
 17213 0674 08       		.byte	0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 391


 17214 0675 1401     		.2byte	0x114
 17215 0677 97000000 		.4byte	0x97
 17216 067b 3601     		.2byte	0x136
 17217 067d 13       		.uleb128 0x13
 17218 067e 310A0000 		.4byte	.LASF137
 17219 0682 08       		.byte	0x8
 17220 0683 1501     		.2byte	0x115
 17221 0685 97000000 		.4byte	0x97
 17222 0689 3701     		.2byte	0x137
 17223 068b 13       		.uleb128 0x13
 17224 068c 58060000 		.4byte	.LASF138
 17225 0690 08       		.byte	0x8
 17226 0691 1601     		.2byte	0x116
 17227 0693 D3000000 		.4byte	0xd3
 17228 0697 3801     		.2byte	0x138
 17229 0699 13       		.uleb128 0x13
 17230 069a 03100000 		.4byte	.LASF139
 17231 069e 08       		.byte	0x8
 17232 069f 1701     		.2byte	0x117
 17233 06a1 D3000000 		.4byte	0xd3
 17234 06a5 3C01     		.2byte	0x13c
 17235 06a7 13       		.uleb128 0x13
 17236 06a8 7B040000 		.4byte	.LASF140
 17237 06ac 08       		.byte	0x8
 17238 06ad 1901     		.2byte	0x119
 17239 06af D3000000 		.4byte	0xd3
 17240 06b3 4001     		.2byte	0x140
 17241 06b5 13       		.uleb128 0x13
 17242 06b6 54050000 		.4byte	.LASF141
 17243 06ba 08       		.byte	0x8
 17244 06bb 1A01     		.2byte	0x11a
 17245 06bd 97000000 		.4byte	0x97
 17246 06c1 4401     		.2byte	0x144
 17247 06c3 13       		.uleb128 0x13
 17248 06c4 E80D0000 		.4byte	.LASF142
 17249 06c8 08       		.byte	0x8
 17250 06c9 1B01     		.2byte	0x11b
 17251 06cb 97000000 		.4byte	0x97
 17252 06cf 4501     		.2byte	0x145
 17253 06d1 13       		.uleb128 0x13
 17254 06d2 58030000 		.4byte	.LASF143
 17255 06d6 08       		.byte	0x8
 17256 06d7 1C01     		.2byte	0x11c
 17257 06d9 97000000 		.4byte	0x97
 17258 06dd 4601     		.2byte	0x146
 17259 06df 13       		.uleb128 0x13
 17260 06e0 D4010000 		.4byte	.LASF144
 17261 06e4 08       		.byte	0x8
 17262 06e5 1D01     		.2byte	0x11d
 17263 06e7 97000000 		.4byte	0x97
 17264 06eb 4701     		.2byte	0x147
 17265 06ed 13       		.uleb128 0x13
 17266 06ee D50D0000 		.4byte	.LASF145
 17267 06f2 08       		.byte	0x8
 17268 06f3 1E01     		.2byte	0x11e
 17269 06f5 97000000 		.4byte	0x97
 17270 06f9 4801     		.2byte	0x148
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 392


 17271 06fb 13       		.uleb128 0x13
 17272 06fc 0E020000 		.4byte	.LASF146
 17273 0700 08       		.byte	0x8
 17274 0701 1F01     		.2byte	0x11f
 17275 0703 FC070000 		.4byte	0x7fc
 17276 0707 4901     		.2byte	0x149
 17277 0709 13       		.uleb128 0x13
 17278 070a 3C0A0000 		.4byte	.LASF147
 17279 070e 08       		.byte	0x8
 17280 070f 2101     		.2byte	0x121
 17281 0711 97000000 		.4byte	0x97
 17282 0715 5001     		.2byte	0x150
 17283 0717 13       		.uleb128 0x13
 17284 0718 46080000 		.4byte	.LASF148
 17285 071c 08       		.byte	0x8
 17286 071d 2201     		.2byte	0x122
 17287 071f 0C080000 		.4byte	0x80c
 17288 0723 5101     		.2byte	0x151
 17289 0725 13       		.uleb128 0x13
 17290 0726 CD040000 		.4byte	.LASF149
 17291 072a 08       		.byte	0x8
 17292 072b 2401     		.2byte	0x124
 17293 072d 22080000 		.4byte	0x822
 17294 0731 6A01     		.2byte	0x16a
 17295 0733 13       		.uleb128 0x13
 17296 0734 96040000 		.4byte	.LASF150
 17297 0738 08       		.byte	0x8
 17298 0739 2601     		.2byte	0x126
 17299 073b 38080000 		.4byte	0x838
 17300 073f 7401     		.2byte	0x174
 17301 0741 13       		.uleb128 0x13
 17302 0742 5F0E0000 		.4byte	.LASF151
 17303 0746 08       		.byte	0x8
 17304 0747 2801     		.2byte	0x128
 17305 0749 97000000 		.4byte	0x97
 17306 074d 8001     		.2byte	0x180
 17307 074f 13       		.uleb128 0x13
 17308 0750 C1010000 		.4byte	.LASF152
 17309 0754 08       		.byte	0x8
 17310 0755 2901     		.2byte	0x129
 17311 0757 97000000 		.4byte	0x97
 17312 075b 8101     		.2byte	0x181
 17313 075d 13       		.uleb128 0x13
 17314 075e 490B0000 		.4byte	.LASF153
 17315 0762 08       		.byte	0x8
 17316 0763 2A01     		.2byte	0x12a
 17317 0765 48080000 		.4byte	0x848
 17318 0769 8201     		.2byte	0x182
 17319 076b 00       		.byte	0
 17320 076c 09       		.uleb128 0x9
 17321 076d AF000000 		.4byte	0xaf
 17322 0771 7C070000 		.4byte	0x77c
 17323 0775 0A       		.uleb128 0xa
 17324 0776 18010000 		.4byte	0x118
 17325 077a 01       		.byte	0x1
 17326 077b 00       		.byte	0
 17327 077c 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 393


 17328 077d AF000000 		.4byte	0xaf
 17329 0781 8C070000 		.4byte	0x78c
 17330 0785 0A       		.uleb128 0xa
 17331 0786 18010000 		.4byte	0x118
 17332 078a 09       		.byte	0x9
 17333 078b 00       		.byte	0
 17334 078c 09       		.uleb128 0x9
 17335 078d AF000000 		.4byte	0xaf
 17336 0791 9C070000 		.4byte	0x79c
 17337 0795 0A       		.uleb128 0xa
 17338 0796 18010000 		.4byte	0x118
 17339 079a 03       		.byte	0x3
 17340 079b 00       		.byte	0
 17341 079c 09       		.uleb128 0x9
 17342 079d 97000000 		.4byte	0x97
 17343 07a1 AC070000 		.4byte	0x7ac
 17344 07a5 0A       		.uleb128 0xa
 17345 07a6 18010000 		.4byte	0x118
 17346 07aa 05       		.byte	0x5
 17347 07ab 00       		.byte	0
 17348 07ac 09       		.uleb128 0x9
 17349 07ad 97000000 		.4byte	0x97
 17350 07b1 BC070000 		.4byte	0x7bc
 17351 07b5 0A       		.uleb128 0xa
 17352 07b6 18010000 		.4byte	0x118
 17353 07ba 49       		.byte	0x49
 17354 07bb 00       		.byte	0
 17355 07bc 09       		.uleb128 0x9
 17356 07bd 97000000 		.4byte	0x97
 17357 07c1 CC070000 		.4byte	0x7cc
 17358 07c5 0A       		.uleb128 0xa
 17359 07c6 18010000 		.4byte	0x118
 17360 07ca 02       		.byte	0x2
 17361 07cb 00       		.byte	0
 17362 07cc 09       		.uleb128 0x9
 17363 07cd DF000000 		.4byte	0xdf
 17364 07d1 DC070000 		.4byte	0x7dc
 17365 07d5 0A       		.uleb128 0xa
 17366 07d6 18010000 		.4byte	0x118
 17367 07da 02       		.byte	0x2
 17368 07db 00       		.byte	0
 17369 07dc 09       		.uleb128 0x9
 17370 07dd A3000000 		.4byte	0xa3
 17371 07e1 EC070000 		.4byte	0x7ec
 17372 07e5 0A       		.uleb128 0xa
 17373 07e6 18010000 		.4byte	0x118
 17374 07ea 01       		.byte	0x1
 17375 07eb 00       		.byte	0
 17376 07ec 09       		.uleb128 0x9
 17377 07ed EB000000 		.4byte	0xeb
 17378 07f1 FC070000 		.4byte	0x7fc
 17379 07f5 0A       		.uleb128 0xa
 17380 07f6 18010000 		.4byte	0x118
 17381 07fa 05       		.byte	0x5
 17382 07fb 00       		.byte	0
 17383 07fc 09       		.uleb128 0x9
 17384 07fd 97000000 		.4byte	0x97
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 394


 17385 0801 0C080000 		.4byte	0x80c
 17386 0805 0A       		.uleb128 0xa
 17387 0806 18010000 		.4byte	0x118
 17388 080a 06       		.byte	0x6
 17389 080b 00       		.byte	0
 17390 080c 09       		.uleb128 0x9
 17391 080d 97000000 		.4byte	0x97
 17392 0811 22080000 		.4byte	0x822
 17393 0815 0A       		.uleb128 0xa
 17394 0816 18010000 		.4byte	0x118
 17395 081a 04       		.byte	0x4
 17396 081b 0A       		.uleb128 0xa
 17397 081c 18010000 		.4byte	0x118
 17398 0820 04       		.byte	0x4
 17399 0821 00       		.byte	0
 17400 0822 09       		.uleb128 0x9
 17401 0823 97000000 		.4byte	0x97
 17402 0827 38080000 		.4byte	0x838
 17403 082b 0A       		.uleb128 0xa
 17404 082c 18010000 		.4byte	0x118
 17405 0830 01       		.byte	0x1
 17406 0831 0A       		.uleb128 0xa
 17407 0832 18010000 		.4byte	0x118
 17408 0836 04       		.byte	0x4
 17409 0837 00       		.byte	0
 17410 0838 09       		.uleb128 0x9
 17411 0839 97000000 		.4byte	0x97
 17412 083d 48080000 		.4byte	0x848
 17413 0841 0A       		.uleb128 0xa
 17414 0842 18010000 		.4byte	0x118
 17415 0846 0B       		.byte	0xb
 17416 0847 00       		.byte	0
 17417 0848 09       		.uleb128 0x9
 17418 0849 97000000 		.4byte	0x97
 17419 084d 58080000 		.4byte	0x858
 17420 0851 0A       		.uleb128 0xa
 17421 0852 18010000 		.4byte	0x118
 17422 0856 01       		.byte	0x1
 17423 0857 00       		.byte	0
 17424 0858 14       		.uleb128 0x14
 17425 0859 F50E0000 		.4byte	.LASF154
 17426 085d 28       		.byte	0x28
 17427 085e 08       		.byte	0x8
 17428 085f 2E01     		.2byte	0x12e
 17429 0861 B4080000 		.4byte	0x8b4
 17430 0865 12       		.uleb128 0x12
 17431 0866 A2030000 		.4byte	.LASF155
 17432 086a 08       		.byte	0x8
 17433 086b 2F01     		.2byte	0x12f
 17434 086d 97000000 		.4byte	0x97
 17435 0871 00       		.byte	0
 17436 0872 12       		.uleb128 0x12
 17437 0873 1B020000 		.4byte	.LASF156
 17438 0877 08       		.byte	0x8
 17439 0878 3001     		.2byte	0x130
 17440 087a B4080000 		.4byte	0x8b4
 17441 087e 02       		.byte	0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 395


 17442 087f 12       		.uleb128 0x12
 17443 0880 060A0000 		.4byte	.LASF157
 17444 0884 08       		.byte	0x8
 17445 0885 3101     		.2byte	0x131
 17446 0887 B4080000 		.4byte	0x8b4
 17447 088b 08       		.byte	0x8
 17448 088c 12       		.uleb128 0x12
 17449 088d D00A0000 		.4byte	.LASF158
 17450 0891 08       		.byte	0x8
 17451 0892 3201     		.2byte	0x132
 17452 0894 B4080000 		.4byte	0x8b4
 17453 0898 0E       		.byte	0xe
 17454 0899 12       		.uleb128 0x12
 17455 089a 3F060000 		.4byte	.LASF159
 17456 089e 08       		.byte	0x8
 17457 089f 3301     		.2byte	0x133
 17458 08a1 C4080000 		.4byte	0x8c4
 17459 08a5 14       		.byte	0x14
 17460 08a6 12       		.uleb128 0x12
 17461 08a7 8D010000 		.4byte	.LASF160
 17462 08ab 08       		.byte	0x8
 17463 08ac 3401     		.2byte	0x134
 17464 08ae C7000000 		.4byte	0xc7
 17465 08b2 24       		.byte	0x24
 17466 08b3 00       		.byte	0
 17467 08b4 09       		.uleb128 0x9
 17468 08b5 C7000000 		.4byte	0xc7
 17469 08b9 C4080000 		.4byte	0x8c4
 17470 08bd 0A       		.uleb128 0xa
 17471 08be 18010000 		.4byte	0x118
 17472 08c2 02       		.byte	0x2
 17473 08c3 00       		.byte	0
 17474 08c4 09       		.uleb128 0x9
 17475 08c5 EB000000 		.4byte	0xeb
 17476 08c9 D4080000 		.4byte	0x8d4
 17477 08cd 0A       		.uleb128 0xa
 17478 08ce 18010000 		.4byte	0x118
 17479 08d2 03       		.byte	0x3
 17480 08d3 00       		.byte	0
 17481 08d4 14       		.uleb128 0x14
 17482 08d5 EE020000 		.4byte	.LASF161
 17483 08d9 06       		.byte	0x6
 17484 08da 08       		.byte	0x8
 17485 08db 4401     		.2byte	0x144
 17486 08dd 16090000 		.4byte	0x916
 17487 08e1 12       		.uleb128 0x12
 17488 08e2 C5050000 		.4byte	.LASF162
 17489 08e6 08       		.byte	0x8
 17490 08e7 4501     		.2byte	0x145
 17491 08e9 97000000 		.4byte	0x97
 17492 08ed 00       		.byte	0
 17493 08ee 12       		.uleb128 0x12
 17494 08ef 28100000 		.4byte	.LASF163
 17495 08f3 08       		.byte	0x8
 17496 08f4 4601     		.2byte	0x146
 17497 08f6 97000000 		.4byte	0x97
 17498 08fa 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 396


 17499 08fb 12       		.uleb128 0x12
 17500 08fc FF040000 		.4byte	.LASF164
 17501 0900 08       		.byte	0x8
 17502 0901 4701     		.2byte	0x147
 17503 0903 C7000000 		.4byte	0xc7
 17504 0907 02       		.byte	0x2
 17505 0908 12       		.uleb128 0x12
 17506 0909 11080000 		.4byte	.LASF165
 17507 090d 08       		.byte	0x8
 17508 090e 4801     		.2byte	0x148
 17509 0910 C7000000 		.4byte	0xc7
 17510 0914 04       		.byte	0x4
 17511 0915 00       		.byte	0
 17512 0916 15       		.uleb128 0x15
 17513 0917 CF0B0000 		.4byte	.LASF305
 17514 091b 02       		.byte	0x2
 17515 091c 1403     		.2byte	0x314
 17516 091e 8C000000 		.4byte	0x8c
 17517 0922 03       		.byte	0x3
 17518 0923 40090000 		.4byte	0x940
 17519 0927 16       		.uleb128 0x16
 17520 0928 9C030000 		.4byte	.LASF237
 17521 092c 02       		.byte	0x2
 17522 092d 1403     		.2byte	0x314
 17523 092f 8C000000 		.4byte	0x8c
 17524 0933 17       		.uleb128 0x17
 17525 0934 98010000 		.4byte	.LASF306
 17526 0938 02       		.byte	0x2
 17527 0939 1603     		.2byte	0x316
 17528 093b 8C000000 		.4byte	0x8c
 17529 093f 00       		.byte	0
 17530 0940 18       		.uleb128 0x18
 17531 0941 A90C0000 		.4byte	.LASF166
 17532 0945 01       		.byte	0x1
 17533 0946 3D       		.byte	0x3d
 17534 0947 00000000 		.4byte	.LFB64
 17535 094b DC040000 		.4byte	.LFE64-.LFB64
 17536 094f 01       		.uleb128 0x1
 17537 0950 9C       		.byte	0x9c
 17538 0951 EB090000 		.4byte	0x9eb
 17539 0955 19       		.uleb128 0x19
 17540 0956 05050000 		.4byte	.LASF168
 17541 095a 01       		.byte	0x1
 17542 095b 3F       		.byte	0x3f
 17543 095c 97000000 		.4byte	0x97
 17544 0960 02       		.uleb128 0x2
 17545 0961 91       		.byte	0x91
 17546 0962 77       		.sleb128 -9
 17547 0963 1A       		.uleb128 0x1a
 17548 0964 16090000 		.4byte	0x916
 17549 0968 36030000 		.4byte	.LBB8
 17550 096c 08000000 		.4byte	.LBE8-.LBB8
 17551 0970 01       		.byte	0x1
 17552 0971 96       		.byte	0x96
 17553 0972 91090000 		.4byte	0x991
 17554 0976 1B       		.uleb128 0x1b
 17555 0977 27090000 		.4byte	0x927
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 397


 17556 097b 02       		.uleb128 0x2
 17557 097c 91       		.byte	0x91
 17558 097d 68       		.sleb128 -24
 17559 097e 1C       		.uleb128 0x1c
 17560 097f 36030000 		.4byte	.LBB9
 17561 0983 08000000 		.4byte	.LBE9-.LBB9
 17562 0987 1D       		.uleb128 0x1d
 17563 0988 33090000 		.4byte	0x933
 17564 098c 02       		.uleb128 0x2
 17565 098d 91       		.byte	0x91
 17566 098e 64       		.sleb128 -28
 17567 098f 00       		.byte	0
 17568 0990 00       		.byte	0
 17569 0991 1A       		.uleb128 0x1a
 17570 0992 16090000 		.4byte	0x916
 17571 0996 54030000 		.4byte	.LBB10
 17572 099a 08000000 		.4byte	.LBE10-.LBB10
 17573 099e 01       		.byte	0x1
 17574 099f A2       		.byte	0xa2
 17575 09a0 BF090000 		.4byte	0x9bf
 17576 09a4 1B       		.uleb128 0x1b
 17577 09a5 27090000 		.4byte	0x927
 17578 09a9 02       		.uleb128 0x2
 17579 09aa 91       		.byte	0x91
 17580 09ab 70       		.sleb128 -16
 17581 09ac 1C       		.uleb128 0x1c
 17582 09ad 54030000 		.4byte	.LBB11
 17583 09b1 08000000 		.4byte	.LBE11-.LBB11
 17584 09b5 1D       		.uleb128 0x1d
 17585 09b6 33090000 		.4byte	0x933
 17586 09ba 02       		.uleb128 0x2
 17587 09bb 91       		.byte	0x91
 17588 09bc 60       		.sleb128 -32
 17589 09bd 00       		.byte	0
 17590 09be 00       		.byte	0
 17591 09bf 1E       		.uleb128 0x1e
 17592 09c0 16090000 		.4byte	0x916
 17593 09c4 98040000 		.4byte	.LBB12
 17594 09c8 08000000 		.4byte	.LBE12-.LBB12
 17595 09cc 01       		.byte	0x1
 17596 09cd 0001     		.2byte	0x100
 17597 09cf 1B       		.uleb128 0x1b
 17598 09d0 27090000 		.4byte	0x927
 17599 09d4 02       		.uleb128 0x2
 17600 09d5 91       		.byte	0x91
 17601 09d6 6C       		.sleb128 -20
 17602 09d7 1C       		.uleb128 0x1c
 17603 09d8 98040000 		.4byte	.LBB13
 17604 09dc 08000000 		.4byte	.LBE13-.LBB13
 17605 09e0 1D       		.uleb128 0x1d
 17606 09e1 33090000 		.4byte	0x933
 17607 09e5 02       		.uleb128 0x2
 17608 09e6 91       		.byte	0x91
 17609 09e7 5C       		.sleb128 -36
 17610 09e8 00       		.byte	0
 17611 09e9 00       		.byte	0
 17612 09ea 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 398


 17613 09eb 1F       		.uleb128 0x1f
 17614 09ec 00000000 		.4byte	.LASF167
 17615 09f0 01       		.byte	0x1
 17616 09f1 2601     		.2byte	0x126
 17617 09f3 00000000 		.4byte	.LFB65
 17618 09f7 22000000 		.4byte	.LFE65-.LFB65
 17619 09fb 01       		.uleb128 0x1
 17620 09fc 9C       		.byte	0x9c
 17621 09fd 120A0000 		.4byte	0xa12
 17622 0a01 20       		.uleb128 0x20
 17623 0a02 31040000 		.4byte	.LASF169
 17624 0a06 01       		.byte	0x1
 17625 0a07 2701     		.2byte	0x127
 17626 0a09 120A0000 		.4byte	0xa12
 17627 0a0d 03       		.uleb128 0x3
 17628 0a0e 91       		.byte	0x91
 17629 0a0f 9C74     		.sleb128 -1508
 17630 0a11 00       		.byte	0
 17631 0a12 09       		.uleb128 0x9
 17632 0a13 F9000000 		.4byte	0xf9
 17633 0a17 230A0000 		.4byte	0xa23
 17634 0a1b 21       		.uleb128 0x21
 17635 0a1c 18010000 		.4byte	0x118
 17636 0a20 DB05     		.2byte	0x5db
 17637 0a22 00       		.byte	0
 17638 0a23 1F       		.uleb128 0x1f
 17639 0a24 360F0000 		.4byte	.LASF170
 17640 0a28 01       		.byte	0x1
 17641 0a29 3201     		.2byte	0x132
 17642 0a2b 00000000 		.4byte	.LFB66
 17643 0a2f 70000000 		.4byte	.LFE66-.LFB66
 17644 0a33 01       		.uleb128 0x1
 17645 0a34 9C       		.byte	0x9c
 17646 0a35 5A0A0000 		.4byte	0xa5a
 17647 0a39 22       		.uleb128 0x22
 17648 0a3a B10E0000 		.4byte	.LASF196
 17649 0a3e 01       		.byte	0x1
 17650 0a3f 3201     		.2byte	0x132
 17651 0a41 A3000000 		.4byte	0xa3
 17652 0a45 03       		.uleb128 0x3
 17653 0a46 91       		.byte	0x91
 17654 0a47 D660     		.sleb128 -4010
 17655 0a49 20       		.uleb128 0x20
 17656 0a4a 31040000 		.4byte	.LASF169
 17657 0a4e 01       		.byte	0x1
 17658 0a4f 3301     		.2byte	0x133
 17659 0a51 5A0A0000 		.4byte	0xa5a
 17660 0a55 03       		.uleb128 0x3
 17661 0a56 91       		.byte	0x91
 17662 0a57 D860     		.sleb128 -4008
 17663 0a59 00       		.byte	0
 17664 0a5a 09       		.uleb128 0x9
 17665 0a5b F9000000 		.4byte	0xf9
 17666 0a5f 6B0A0000 		.4byte	0xa6b
 17667 0a63 21       		.uleb128 0x21
 17668 0a64 18010000 		.4byte	0x118
 17669 0a68 9F0F     		.2byte	0xf9f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 399


 17670 0a6a 00       		.byte	0
 17671 0a6b 23       		.uleb128 0x23
 17672 0a6c 64010000 		.4byte	.LASF219
 17673 0a70 01       		.byte	0x1
 17674 0a71 4C01     		.2byte	0x14c
 17675 0a73 00000000 		.4byte	.LFB67
 17676 0a77 6A190000 		.4byte	.LFE67-.LFB67
 17677 0a7b 01       		.uleb128 0x1
 17678 0a7c 9C       		.byte	0x9c
 17679 0a7d 350C0000 		.4byte	0xc35
 17680 0a81 20       		.uleb128 0x20
 17681 0a82 84040000 		.4byte	.LASF171
 17682 0a86 01       		.byte	0x1
 17683 0a87 4F01     		.2byte	0x14f
 17684 0a89 350C0000 		.4byte	0xc35
 17685 0a8d 03       		.uleb128 0x3
 17686 0a8e 91       		.byte	0x91
 17687 0a8f CC68     		.sleb128 -2996
 17688 0a91 20       		.uleb128 0x20
 17689 0a92 A5000000 		.4byte	.LASF172
 17690 0a96 01       		.byte	0x1
 17691 0a97 5001     		.2byte	0x150
 17692 0a99 A3000000 		.4byte	0xa3
 17693 0a9d 02       		.uleb128 0x2
 17694 0a9e 91       		.byte	0x91
 17695 0a9f 5A       		.sleb128 -38
 17696 0aa0 24       		.uleb128 0x24
 17697 0aa1 6900     		.ascii	"i\000"
 17698 0aa3 01       		.byte	0x1
 17699 0aa4 5301     		.2byte	0x153
 17700 0aa6 97000000 		.4byte	0x97
 17701 0aaa 02       		.uleb128 0x2
 17702 0aab 91       		.byte	0x91
 17703 0aac 67       		.sleb128 -25
 17704 0aad 24       		.uleb128 0x24
 17705 0aae 6A00     		.ascii	"j\000"
 17706 0ab0 01       		.byte	0x1
 17707 0ab1 5301     		.2byte	0x153
 17708 0ab3 97000000 		.4byte	0x97
 17709 0ab7 02       		.uleb128 0x2
 17710 0ab8 91       		.byte	0x91
 17711 0ab9 66       		.sleb128 -26
 17712 0aba 24       		.uleb128 0x24
 17713 0abb 69647800 		.ascii	"idx\000"
 17714 0abf 01       		.byte	0x1
 17715 0ac0 5401     		.2byte	0x154
 17716 0ac2 97000000 		.4byte	0x97
 17717 0ac6 02       		.uleb128 0x2
 17718 0ac7 91       		.byte	0x91
 17719 0ac8 65       		.sleb128 -27
 17720 0ac9 20       		.uleb128 0x20
 17721 0aca D20C0000 		.4byte	.LASF173
 17722 0ace 01       		.byte	0x1
 17723 0acf 5501     		.2byte	0x155
 17724 0ad1 97000000 		.4byte	0x97
 17725 0ad5 02       		.uleb128 0x2
 17726 0ad6 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 400


 17727 0ad7 64       		.sleb128 -28
 17728 0ad8 24       		.uleb128 0x24
 17729 0ad9 736F6400 		.ascii	"sod\000"
 17730 0add 01       		.byte	0x1
 17731 0ade 5601     		.2byte	0x156
 17732 0ae0 97000000 		.4byte	0x97
 17733 0ae4 02       		.uleb128 0x2
 17734 0ae5 91       		.byte	0x91
 17735 0ae6 63       		.sleb128 -29
 17736 0ae7 20       		.uleb128 0x20
 17737 0ae8 2A090000 		.4byte	.LASF174
 17738 0aec 01       		.byte	0x1
 17739 0aed 5701     		.2byte	0x157
 17740 0aef 97000000 		.4byte	0x97
 17741 0af3 02       		.uleb128 0x2
 17742 0af4 91       		.byte	0x91
 17743 0af5 62       		.sleb128 -30
 17744 0af6 20       		.uleb128 0x20
 17745 0af7 0E100000 		.4byte	.LASF175
 17746 0afb 01       		.byte	0x1
 17747 0afc 5801     		.2byte	0x158
 17748 0afe 460C0000 		.4byte	0xc46
 17749 0b02 03       		.uleb128 0x3
 17750 0b03 91       		.byte	0x91
 17751 0b04 9868     		.sleb128 -3048
 17752 0b06 20       		.uleb128 0x20
 17753 0b07 4F080000 		.4byte	.LASF176
 17754 0b0b 01       		.byte	0x1
 17755 0b0c 5901     		.2byte	0x159
 17756 0b0e 560C0000 		.4byte	0xc56
 17757 0b12 02       		.uleb128 0x2
 17758 0b13 91       		.byte	0x91
 17759 0b14 5C       		.sleb128 -36
 17760 0b15 20       		.uleb128 0x20
 17761 0b16 48010000 		.4byte	.LASF177
 17762 0b1a 01       		.byte	0x1
 17763 0b1b 5A01     		.2byte	0x15a
 17764 0b1d 560C0000 		.4byte	0xc56
 17765 0b21 02       		.uleb128 0x2
 17766 0b22 91       		.byte	0x91
 17767 0b23 54       		.sleb128 -44
 17768 0b24 20       		.uleb128 0x20
 17769 0b25 550E0000 		.4byte	.LASF178
 17770 0b29 01       		.byte	0x1
 17771 0b2a 5B01     		.2byte	0x15b
 17772 0b2c EB000000 		.4byte	0xeb
 17773 0b30 03       		.uleb128 0x3
 17774 0b31 91       		.byte	0x91
 17775 0b32 9468     		.sleb128 -3052
 17776 0b34 20       		.uleb128 0x20
 17777 0b35 540D0000 		.4byte	.LASF179
 17778 0b39 01       		.byte	0x1
 17779 0b3a 5C01     		.2byte	0x15c
 17780 0b3c C7000000 		.4byte	0xc7
 17781 0b40 03       		.uleb128 0x3
 17782 0b41 91       		.byte	0x91
 17783 0b42 9268     		.sleb128 -3054
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 401


 17784 0b44 20       		.uleb128 0x20
 17785 0b45 60090000 		.4byte	.LASF180
 17786 0b49 01       		.byte	0x1
 17787 0b4a 5D01     		.2byte	0x15d
 17788 0b4c A3000000 		.4byte	0xa3
 17789 0b50 03       		.uleb128 0x3
 17790 0b51 91       		.byte	0x91
 17791 0b52 9068     		.sleb128 -3056
 17792 0b54 20       		.uleb128 0x20
 17793 0b55 830E0000 		.4byte	.LASF181
 17794 0b59 01       		.byte	0x1
 17795 0b5a 5E01     		.2byte	0x15e
 17796 0b5c D3000000 		.4byte	0xd3
 17797 0b60 03       		.uleb128 0x3
 17798 0b61 91       		.byte	0x91
 17799 0b62 8C68     		.sleb128 -3060
 17800 0b64 20       		.uleb128 0x20
 17801 0b65 BE0A0000 		.4byte	.LASF182
 17802 0b69 01       		.byte	0x1
 17803 0b6a 5F01     		.2byte	0x15f
 17804 0b6c AF000000 		.4byte	0xaf
 17805 0b70 03       		.uleb128 0x3
 17806 0b71 91       		.byte	0x91
 17807 0b72 8868     		.sleb128 -3064
 17808 0b74 20       		.uleb128 0x20
 17809 0b75 0F0F0000 		.4byte	.LASF183
 17810 0b79 01       		.byte	0x1
 17811 0b7a 6201     		.2byte	0x162
 17812 0b7c 710C0000 		.4byte	0xc71
 17813 0b80 03       		.uleb128 0x3
 17814 0b81 91       		.byte	0x91
 17815 0b82 DC67     		.sleb128 -3108
 17816 0b84 20       		.uleb128 0x20
 17817 0b85 27020000 		.4byte	.LASF184
 17818 0b89 01       		.byte	0x1
 17819 0b8a 6B01     		.2byte	0x16b
 17820 0b8c 760C0000 		.4byte	0xc76
 17821 0b90 03       		.uleb128 0x3
 17822 0b91 91       		.byte	0x91
 17823 0b92 B067     		.sleb128 -3152
 17824 0b94 20       		.uleb128 0x20
 17825 0b95 7A0E0000 		.4byte	.LASF185
 17826 0b99 01       		.byte	0x1
 17827 0b9a 7401     		.2byte	0x174
 17828 0b9c 8B0C0000 		.4byte	0xc8b
 17829 0ba0 03       		.uleb128 0x3
 17830 0ba1 91       		.byte	0x91
 17831 0ba2 9C67     		.sleb128 -3172
 17832 0ba4 20       		.uleb128 0x20
 17833 0ba5 BA050000 		.4byte	.LASF186
 17834 0ba9 01       		.byte	0x1
 17835 0baa 7601     		.2byte	0x176
 17836 0bac 900C0000 		.4byte	0xc90
 17837 0bb0 03       		.uleb128 0x3
 17838 0bb1 91       		.byte	0x91
 17839 0bb2 F465     		.sleb128 -3340
 17840 0bb4 20       		.uleb128 0x20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 402


 17841 0bb5 96060000 		.4byte	.LASF187
 17842 0bb9 01       		.byte	0x1
 17843 0bba 8501     		.2byte	0x185
 17844 0bbc B00C0000 		.4byte	0xcb0
 17845 0bc0 03       		.uleb128 0x3
 17846 0bc1 91       		.byte	0x91
 17847 0bc2 9065     		.sleb128 -3440
 17848 0bc4 20       		.uleb128 0x20
 17849 0bc5 46030000 		.4byte	.LASF188
 17850 0bc9 01       		.byte	0x1
 17851 0bca 8601     		.2byte	0x186
 17852 0bcc C50C0000 		.4byte	0xcc5
 17853 0bd0 03       		.uleb128 0x3
 17854 0bd1 91       		.byte	0x91
 17855 0bd2 D064     		.sleb128 -3504
 17856 0bd4 20       		.uleb128 0x20
 17857 0bd5 6A0D0000 		.4byte	.LASF189
 17858 0bd9 01       		.byte	0x1
 17859 0bda 8701     		.2byte	0x187
 17860 0bdc DA0C0000 		.4byte	0xcda
 17861 0be0 03       		.uleb128 0x3
 17862 0be1 91       		.byte	0x91
 17863 0be2 A464     		.sleb128 -3548
 17864 0be4 20       		.uleb128 0x20
 17865 0be5 BB030000 		.4byte	.LASF190
 17866 0be9 01       		.byte	0x1
 17867 0bea 8801     		.2byte	0x188
 17868 0bec EF0C0000 		.4byte	0xcef
 17869 0bf0 03       		.uleb128 0x3
 17870 0bf1 91       		.byte	0x91
 17871 0bf2 8C64     		.sleb128 -3572
 17872 0bf4 20       		.uleb128 0x20
 17873 0bf5 99000000 		.4byte	.LASF191
 17874 0bf9 01       		.byte	0x1
 17875 0bfa 8901     		.2byte	0x189
 17876 0bfc F40C0000 		.4byte	0xcf4
 17877 0c00 03       		.uleb128 0x3
 17878 0c01 91       		.byte	0x91
 17879 0c02 E063     		.sleb128 -3616
 17880 0c04 20       		.uleb128 0x20
 17881 0c05 79090000 		.4byte	.LASF192
 17882 0c09 01       		.byte	0x1
 17883 0c0a 8A01     		.2byte	0x18a
 17884 0c0c 090D0000 		.4byte	0xd09
 17885 0c10 03       		.uleb128 0x3
 17886 0c11 91       		.byte	0x91
 17887 0c12 8463     		.sleb128 -3708
 17888 0c14 20       		.uleb128 0x20
 17889 0c15 820F0000 		.4byte	.LASF193
 17890 0c19 01       		.byte	0x1
 17891 0c1a 8B01     		.2byte	0x18b
 17892 0c1c 0E0D0000 		.4byte	0xd0e
 17893 0c20 03       		.uleb128 0x3
 17894 0c21 91       		.byte	0x91
 17895 0c22 8C62     		.sleb128 -3828
 17896 0c24 20       		.uleb128 0x20
 17897 0c25 EE030000 		.4byte	.LASF194
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 403


 17898 0c29 01       		.byte	0x1
 17899 0c2a 8D01     		.2byte	0x18d
 17900 0c2c 2E0D0000 		.4byte	0xd2e
 17901 0c30 03       		.uleb128 0x3
 17902 0c31 91       		.byte	0x91
 17903 0c32 C461     		.sleb128 -3900
 17904 0c34 00       		.byte	0
 17905 0c35 09       		.uleb128 0x9
 17906 0c36 97000000 		.4byte	0x97
 17907 0c3a 460C0000 		.4byte	0xc46
 17908 0c3e 21       		.uleb128 0x21
 17909 0c3f 18010000 		.4byte	0x118
 17910 0c43 850B     		.2byte	0xb85
 17911 0c45 00       		.byte	0
 17912 0c46 09       		.uleb128 0x9
 17913 0c47 F9000000 		.4byte	0xf9
 17914 0c4b 560C0000 		.4byte	0xc56
 17915 0c4f 0A       		.uleb128 0xa
 17916 0c50 18010000 		.4byte	0x118
 17917 0c54 31       		.byte	0x31
 17918 0c55 00       		.byte	0
 17919 0c56 07       		.uleb128 0x7
 17920 0c57 04       		.byte	0x4
 17921 0c58 97000000 		.4byte	0x97
 17922 0c5c 09       		.uleb128 0x9
 17923 0c5d 6C0C0000 		.4byte	0xc6c
 17924 0c61 6C0C0000 		.4byte	0xc6c
 17925 0c65 0A       		.uleb128 0xa
 17926 0c66 18010000 		.4byte	0x118
 17927 0c6a 29       		.byte	0x29
 17928 0c6b 00       		.byte	0
 17929 0c6c 08       		.uleb128 0x8
 17930 0c6d 97000000 		.4byte	0x97
 17931 0c71 08       		.uleb128 0x8
 17932 0c72 5C0C0000 		.4byte	0xc5c
 17933 0c76 08       		.uleb128 0x8
 17934 0c77 5C0C0000 		.4byte	0xc5c
 17935 0c7b 09       		.uleb128 0x9
 17936 0c7c 6C0C0000 		.4byte	0xc6c
 17937 0c80 8B0C0000 		.4byte	0xc8b
 17938 0c84 0A       		.uleb128 0xa
 17939 0c85 18010000 		.4byte	0x118
 17940 0c89 11       		.byte	0x11
 17941 0c8a 00       		.byte	0
 17942 0c8b 08       		.uleb128 0x8
 17943 0c8c 7B0C0000 		.4byte	0xc7b
 17944 0c90 09       		.uleb128 0x9
 17945 0c91 25010000 		.4byte	0x125
 17946 0c95 A00C0000 		.4byte	0xca0
 17947 0c99 0A       		.uleb128 0xa
 17948 0c9a 18010000 		.4byte	0x118
 17949 0c9e 29       		.byte	0x29
 17950 0c9f 00       		.byte	0
 17951 0ca0 09       		.uleb128 0x9
 17952 0ca1 2B010000 		.4byte	0x12b
 17953 0ca5 B00C0000 		.4byte	0xcb0
 17954 0ca9 0A       		.uleb128 0xa
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 404


 17955 0caa 18010000 		.4byte	0x118
 17956 0cae 62       		.byte	0x62
 17957 0caf 00       		.byte	0
 17958 0cb0 08       		.uleb128 0x8
 17959 0cb1 A00C0000 		.4byte	0xca0
 17960 0cb5 09       		.uleb128 0x9
 17961 0cb6 2B010000 		.4byte	0x12b
 17962 0cba C50C0000 		.4byte	0xcc5
 17963 0cbe 0A       		.uleb128 0xa
 17964 0cbf 18010000 		.4byte	0x118
 17965 0cc3 3F       		.byte	0x3f
 17966 0cc4 00       		.byte	0
 17967 0cc5 08       		.uleb128 0x8
 17968 0cc6 B50C0000 		.4byte	0xcb5
 17969 0cca 09       		.uleb128 0x9
 17970 0ccb 2B010000 		.4byte	0x12b
 17971 0ccf DA0C0000 		.4byte	0xcda
 17972 0cd3 0A       		.uleb128 0xa
 17973 0cd4 18010000 		.4byte	0x118
 17974 0cd8 29       		.byte	0x29
 17975 0cd9 00       		.byte	0
 17976 0cda 08       		.uleb128 0x8
 17977 0cdb CA0C0000 		.4byte	0xcca
 17978 0cdf 09       		.uleb128 0x9
 17979 0ce0 2B010000 		.4byte	0x12b
 17980 0ce4 EF0C0000 		.4byte	0xcef
 17981 0ce8 0A       		.uleb128 0xa
 17982 0ce9 18010000 		.4byte	0x118
 17983 0ced 15       		.byte	0x15
 17984 0cee 00       		.byte	0
 17985 0cef 08       		.uleb128 0x8
 17986 0cf0 DF0C0000 		.4byte	0xcdf
 17987 0cf4 08       		.uleb128 0x8
 17988 0cf5 CA0C0000 		.4byte	0xcca
 17989 0cf9 09       		.uleb128 0x9
 17990 0cfa 2B010000 		.4byte	0x12b
 17991 0cfe 090D0000 		.4byte	0xd09
 17992 0d02 0A       		.uleb128 0xa
 17993 0d03 18010000 		.4byte	0x118
 17994 0d07 59       		.byte	0x59
 17995 0d08 00       		.byte	0
 17996 0d09 08       		.uleb128 0x8
 17997 0d0a F90C0000 		.4byte	0xcf9
 17998 0d0e 09       		.uleb128 0x9
 17999 0d0f F9000000 		.4byte	0xf9
 18000 0d13 1E0D0000 		.4byte	0xd1e
 18001 0d17 0A       		.uleb128 0xa
 18002 0d18 18010000 		.4byte	0x118
 18003 0d1c 75       		.byte	0x75
 18004 0d1d 00       		.byte	0
 18005 0d1e 09       		.uleb128 0x9
 18006 0d1f 2B010000 		.4byte	0x12b
 18007 0d23 2E0D0000 		.4byte	0xd2e
 18008 0d27 0A       		.uleb128 0xa
 18009 0d28 18010000 		.4byte	0x118
 18010 0d2c 47       		.byte	0x47
 18011 0d2d 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 405


 18012 0d2e 08       		.uleb128 0x8
 18013 0d2f 1E0D0000 		.4byte	0xd1e
 18014 0d33 1F       		.uleb128 0x1f
 18015 0d34 780B0000 		.4byte	.LASF195
 18016 0d38 01       		.byte	0x1
 18017 0d39 3A03     		.2byte	0x33a
 18018 0d3b 00000000 		.4byte	.LFB68
 18019 0d3f BC0B0000 		.4byte	.LFE68-.LFB68
 18020 0d43 01       		.uleb128 0x1
 18021 0d44 9C       		.byte	0x9c
 18022 0d45 A00D0000 		.4byte	0xda0
 18023 0d49 22       		.uleb128 0x22
 18024 0d4a 4E050000 		.4byte	.LASF197
 18025 0d4e 01       		.byte	0x1
 18026 0d4f 3A03     		.2byte	0x33a
 18027 0d51 A3000000 		.4byte	0xa3
 18028 0d55 02       		.uleb128 0x2
 18029 0d56 91       		.byte	0x91
 18030 0d57 66       		.sleb128 -26
 18031 0d58 24       		.uleb128 0x24
 18032 0d59 6900     		.ascii	"i\000"
 18033 0d5b 01       		.byte	0x1
 18034 0d5c 3B03     		.2byte	0x33b
 18035 0d5e 97000000 		.4byte	0x97
 18036 0d62 02       		.uleb128 0x2
 18037 0d63 91       		.byte	0x91
 18038 0d64 77       		.sleb128 -9
 18039 0d65 24       		.uleb128 0x24
 18040 0d66 6A00     		.ascii	"j\000"
 18041 0d68 01       		.byte	0x1
 18042 0d69 3B03     		.2byte	0x33b
 18043 0d6b 97000000 		.4byte	0x97
 18044 0d6f 02       		.uleb128 0x2
 18045 0d70 91       		.byte	0x91
 18046 0d71 76       		.sleb128 -10
 18047 0d72 20       		.uleb128 0x20
 18048 0d73 43090000 		.4byte	.LASF198
 18049 0d77 01       		.byte	0x1
 18050 0d78 3C03     		.2byte	0x33c
 18051 0d7a 97000000 		.4byte	0x97
 18052 0d7e 02       		.uleb128 0x2
 18053 0d7f 91       		.byte	0x91
 18054 0d80 75       		.sleb128 -11
 18055 0d81 20       		.uleb128 0x20
 18056 0d82 550E0000 		.4byte	.LASF178
 18057 0d86 01       		.byte	0x1
 18058 0d87 3D03     		.2byte	0x33d
 18059 0d89 EB000000 		.4byte	0xeb
 18060 0d8d 02       		.uleb128 0x2
 18061 0d8e 91       		.byte	0x91
 18062 0d8f 70       		.sleb128 -16
 18063 0d90 20       		.uleb128 0x20
 18064 0d91 76020000 		.4byte	.LASF199
 18065 0d95 01       		.byte	0x1
 18066 0d96 3D03     		.2byte	0x33d
 18067 0d98 EB000000 		.4byte	0xeb
 18068 0d9c 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 406


 18069 0d9d 91       		.byte	0x91
 18070 0d9e 6C       		.sleb128 -20
 18071 0d9f 00       		.byte	0
 18072 0da0 1F       		.uleb128 0x1f
 18073 0da1 FC0E0000 		.4byte	.LASF200
 18074 0da5 01       		.byte	0x1
 18075 0da6 DD04     		.2byte	0x4dd
 18076 0da8 00000000 		.4byte	.LFB69
 18077 0dac F40D0000 		.4byte	.LFE69-.LFB69
 18078 0db0 01       		.uleb128 0x1
 18079 0db1 9C       		.byte	0x9c
 18080 0db2 2F0F0000 		.4byte	0xf2f
 18081 0db6 22       		.uleb128 0x22
 18082 0db7 4E050000 		.4byte	.LASF197
 18083 0dbb 01       		.byte	0x1
 18084 0dbc DD04     		.2byte	0x4dd
 18085 0dbe A3000000 		.4byte	0xa3
 18086 0dc2 03       		.uleb128 0x3
 18087 0dc3 91       		.byte	0x91
 18088 0dc4 CE72     		.sleb128 -1714
 18089 0dc6 20       		.uleb128 0x20
 18090 0dc7 84040000 		.4byte	.LASF171
 18091 0dcb 01       		.byte	0x1
 18092 0dcc E004     		.2byte	0x4e0
 18093 0dce 2F0F0000 		.4byte	0xf2f
 18094 0dd2 03       		.uleb128 0x3
 18095 0dd3 91       		.byte	0x91
 18096 0dd4 DC74     		.sleb128 -1444
 18097 0dd6 20       		.uleb128 0x20
 18098 0dd7 410D0000 		.4byte	.LASF201
 18099 0ddb 01       		.byte	0x1
 18100 0ddc E704     		.2byte	0x4e7
 18101 0dde A3000000 		.4byte	0xa3
 18102 0de2 02       		.uleb128 0x2
 18103 0de3 91       		.byte	0x91
 18104 0de4 62       		.sleb128 -30
 18105 0de5 20       		.uleb128 0x20
 18106 0de6 18040000 		.4byte	.LASF202
 18107 0dea 01       		.byte	0x1
 18108 0deb E804     		.2byte	0x4e8
 18109 0ded A3000000 		.4byte	0xa3
 18110 0df1 02       		.uleb128 0x2
 18111 0df2 91       		.byte	0x91
 18112 0df3 6E       		.sleb128 -18
 18113 0df4 20       		.uleb128 0x20
 18114 0df5 BB060000 		.4byte	.LASF203
 18115 0df9 01       		.byte	0x1
 18116 0dfa E904     		.2byte	0x4e9
 18117 0dfc A3000000 		.4byte	0xa3
 18118 0e00 02       		.uleb128 0x2
 18119 0e01 91       		.byte	0x91
 18120 0e02 60       		.sleb128 -32
 18121 0e03 20       		.uleb128 0x20
 18122 0e04 4A060000 		.4byte	.LASF204
 18123 0e08 01       		.byte	0x1
 18124 0e09 EA04     		.2byte	0x4ea
 18125 0e0b A3000000 		.4byte	0xa3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 407


 18126 0e0f 02       		.uleb128 0x2
 18127 0e10 91       		.byte	0x91
 18128 0e11 5E       		.sleb128 -34
 18129 0e12 24       		.uleb128 0x24
 18130 0e13 6900     		.ascii	"i\000"
 18131 0e15 01       		.byte	0x1
 18132 0e16 F204     		.2byte	0x4f2
 18133 0e18 A3000000 		.4byte	0xa3
 18134 0e1c 02       		.uleb128 0x2
 18135 0e1d 91       		.byte	0x91
 18136 0e1e 6C       		.sleb128 -20
 18137 0e1f 24       		.uleb128 0x24
 18138 0e20 6A00     		.ascii	"j\000"
 18139 0e22 01       		.byte	0x1
 18140 0e23 F204     		.2byte	0x4f2
 18141 0e25 A3000000 		.4byte	0xa3
 18142 0e29 02       		.uleb128 0x2
 18143 0e2a 91       		.byte	0x91
 18144 0e2b 6A       		.sleb128 -22
 18145 0e2c 24       		.uleb128 0x24
 18146 0e2d 6B00     		.ascii	"k\000"
 18147 0e2f 01       		.byte	0x1
 18148 0e30 F204     		.2byte	0x4f2
 18149 0e32 A3000000 		.4byte	0xa3
 18150 0e36 02       		.uleb128 0x2
 18151 0e37 91       		.byte	0x91
 18152 0e38 68       		.sleb128 -24
 18153 0e39 24       		.uleb128 0x24
 18154 0e3a 6800     		.ascii	"h\000"
 18155 0e3c 01       		.byte	0x1
 18156 0e3d F204     		.2byte	0x4f2
 18157 0e3f A3000000 		.4byte	0xa3
 18158 0e43 02       		.uleb128 0x2
 18159 0e44 91       		.byte	0x91
 18160 0e45 66       		.sleb128 -26
 18161 0e46 20       		.uleb128 0x20
 18162 0e47 0D040000 		.4byte	.LASF205
 18163 0e4b 01       		.byte	0x1
 18164 0e4c F304     		.2byte	0x4f3
 18165 0e4e A3000000 		.4byte	0xa3
 18166 0e52 02       		.uleb128 0x2
 18167 0e53 91       		.byte	0x91
 18168 0e54 5C       		.sleb128 -36
 18169 0e55 20       		.uleb128 0x20
 18170 0e56 6C0A0000 		.4byte	.LASF206
 18171 0e5a 01       		.byte	0x1
 18172 0e5b F604     		.2byte	0x4f6
 18173 0e5d 30010000 		.4byte	0x130
 18174 0e61 03       		.uleb128 0x3
 18175 0e62 91       		.byte	0x91
 18176 0e63 C074     		.sleb128 -1472
 18177 0e65 20       		.uleb128 0x20
 18178 0e66 080D0000 		.4byte	.LASF207
 18179 0e6a 01       		.byte	0x1
 18180 0e6b F704     		.2byte	0x4f7
 18181 0e6d 400F0000 		.4byte	0xf40
 18182 0e71 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 408


 18183 0e72 91       		.byte	0x91
 18184 0e73 B474     		.sleb128 -1484
 18185 0e75 20       		.uleb128 0x20
 18186 0e76 76050000 		.4byte	.LASF208
 18187 0e7a 01       		.byte	0x1
 18188 0e7b F804     		.2byte	0x4f8
 18189 0e7d 500F0000 		.4byte	0xf50
 18190 0e81 03       		.uleb128 0x3
 18191 0e82 91       		.byte	0x91
 18192 0e83 A074     		.sleb128 -1504
 18193 0e85 20       		.uleb128 0x20
 18194 0e86 0A080000 		.4byte	.LASF209
 18195 0e8a 01       		.byte	0x1
 18196 0e8b F904     		.2byte	0x4f9
 18197 0e8d 600F0000 		.4byte	0xf60
 18198 0e91 03       		.uleb128 0x3
 18199 0e92 91       		.byte	0x91
 18200 0e93 9074     		.sleb128 -1520
 18201 0e95 20       		.uleb128 0x20
 18202 0e96 2F0B0000 		.4byte	.LASF210
 18203 0e9a 01       		.byte	0x1
 18204 0e9b FA04     		.2byte	0x4fa
 18205 0e9d 700F0000 		.4byte	0xf70
 18206 0ea1 03       		.uleb128 0x3
 18207 0ea2 91       		.byte	0x91
 18208 0ea3 E473     		.sleb128 -1564
 18209 0ea5 20       		.uleb128 0x20
 18210 0ea6 A8030000 		.4byte	.LASF211
 18211 0eaa 01       		.byte	0x1
 18212 0eab FB04     		.2byte	0x4fb
 18213 0ead 30010000 		.4byte	0x130
 18214 0eb1 03       		.uleb128 0x3
 18215 0eb2 91       		.byte	0x91
 18216 0eb3 C873     		.sleb128 -1592
 18217 0eb5 20       		.uleb128 0x20
 18218 0eb6 25010000 		.4byte	.LASF212
 18219 0eba 01       		.byte	0x1
 18220 0ebb FE04     		.2byte	0x4fe
 18221 0ebd 97000000 		.4byte	0x97
 18222 0ec1 02       		.uleb128 0x2
 18223 0ec2 91       		.byte	0x91
 18224 0ec3 5B       		.sleb128 -37
 18225 0ec4 20       		.uleb128 0x20
 18226 0ec5 7C030000 		.4byte	.LASF213
 18227 0ec9 01       		.byte	0x1
 18228 0eca FF04     		.2byte	0x4ff
 18229 0ecc 97000000 		.4byte	0x97
 18230 0ed0 02       		.uleb128 0x2
 18231 0ed1 91       		.byte	0x91
 18232 0ed2 5A       		.sleb128 -38
 18233 0ed3 20       		.uleb128 0x20
 18234 0ed4 BF0C0000 		.4byte	.LASF214
 18235 0ed8 01       		.byte	0x1
 18236 0ed9 0005     		.2byte	0x500
 18237 0edb 97000000 		.4byte	0x97
 18238 0edf 02       		.uleb128 0x2
 18239 0ee0 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 409


 18240 0ee1 59       		.sleb128 -39
 18241 0ee2 20       		.uleb128 0x20
 18242 0ee3 2F0D0000 		.4byte	.LASF215
 18243 0ee7 01       		.byte	0x1
 18244 0ee8 0105     		.2byte	0x501
 18245 0eea 97000000 		.4byte	0x97
 18246 0eee 02       		.uleb128 0x2
 18247 0eef 91       		.byte	0x91
 18248 0ef0 58       		.sleb128 -40
 18249 0ef1 20       		.uleb128 0x20
 18250 0ef2 8A030000 		.4byte	.LASF216
 18251 0ef6 01       		.byte	0x1
 18252 0ef7 0205     		.2byte	0x502
 18253 0ef9 97000000 		.4byte	0x97
 18254 0efd 02       		.uleb128 0x2
 18255 0efe 91       		.byte	0x91
 18256 0eff 57       		.sleb128 -41
 18257 0f00 20       		.uleb128 0x20
 18258 0f01 82000000 		.4byte	.LASF217
 18259 0f05 01       		.byte	0x1
 18260 0f06 0305     		.2byte	0x503
 18261 0f08 97000000 		.4byte	0x97
 18262 0f0c 02       		.uleb128 0x2
 18263 0f0d 91       		.byte	0x91
 18264 0f0e 65       		.sleb128 -27
 18265 0f0f 20       		.uleb128 0x20
 18266 0f10 820F0000 		.4byte	.LASF193
 18267 0f14 01       		.byte	0x1
 18268 0f15 0505     		.2byte	0x505
 18269 0f17 0E0D0000 		.4byte	0xd0e
 18270 0f1b 03       		.uleb128 0x3
 18271 0f1c 91       		.byte	0x91
 18272 0f1d D072     		.sleb128 -1712
 18273 0f1f 20       		.uleb128 0x20
 18274 0f20 8A020000 		.4byte	.LASF218
 18275 0f24 01       		.byte	0x1
 18276 0f25 0605     		.2byte	0x506
 18277 0f27 97000000 		.4byte	0x97
 18278 0f2b 02       		.uleb128 0x2
 18279 0f2c 91       		.byte	0x91
 18280 0f2d 56       		.sleb128 -42
 18281 0f2e 00       		.byte	0
 18282 0f2f 09       		.uleb128 0x9
 18283 0f30 97000000 		.4byte	0x97
 18284 0f34 400F0000 		.4byte	0xf40
 18285 0f38 21       		.uleb128 0x21
 18286 0f39 18010000 		.4byte	0x118
 18287 0f3d 7805     		.2byte	0x578
 18288 0f3f 00       		.byte	0
 18289 0f40 09       		.uleb128 0x9
 18290 0f41 F9000000 		.4byte	0xf9
 18291 0f45 500F0000 		.4byte	0xf50
 18292 0f49 0A       		.uleb128 0xa
 18293 0f4a 18010000 		.4byte	0x118
 18294 0f4e 0A       		.byte	0xa
 18295 0f4f 00       		.byte	0
 18296 0f50 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 410


 18297 0f51 F9000000 		.4byte	0xf9
 18298 0f55 600F0000 		.4byte	0xf60
 18299 0f59 0A       		.uleb128 0xa
 18300 0f5a 18010000 		.4byte	0x118
 18301 0f5e 13       		.byte	0x13
 18302 0f5f 00       		.byte	0
 18303 0f60 09       		.uleb128 0x9
 18304 0f61 F9000000 		.4byte	0xf9
 18305 0f65 700F0000 		.4byte	0xf70
 18306 0f69 0A       		.uleb128 0xa
 18307 0f6a 18010000 		.4byte	0x118
 18308 0f6e 0F       		.byte	0xf
 18309 0f6f 00       		.byte	0
 18310 0f70 09       		.uleb128 0x9
 18311 0f71 F9000000 		.4byte	0xf9
 18312 0f75 800F0000 		.4byte	0xf80
 18313 0f79 0A       		.uleb128 0xa
 18314 0f7a 18010000 		.4byte	0x118
 18315 0f7e 29       		.byte	0x29
 18316 0f7f 00       		.byte	0
 18317 0f80 23       		.uleb128 0x23
 18318 0f81 05020000 		.4byte	.LASF220
 18319 0f85 01       		.byte	0x1
 18320 0f86 CC05     		.2byte	0x5cc
 18321 0f88 00000000 		.4byte	.LFB70
 18322 0f8c 5C000000 		.4byte	.LFE70-.LFB70
 18323 0f90 01       		.uleb128 0x1
 18324 0f91 9C       		.byte	0x9c
 18325 0f92 A40F0000 		.4byte	0xfa4
 18326 0f96 24       		.uleb128 0x24
 18327 0f97 6900     		.ascii	"i\000"
 18328 0f99 01       		.byte	0x1
 18329 0f9a CE05     		.2byte	0x5ce
 18330 0f9c 97000000 		.4byte	0x97
 18331 0fa0 02       		.uleb128 0x2
 18332 0fa1 91       		.byte	0x91
 18333 0fa2 77       		.sleb128 -9
 18334 0fa3 00       		.byte	0
 18335 0fa4 1F       		.uleb128 0x1f
 18336 0fa5 B3000000 		.4byte	.LASF221
 18337 0fa9 01       		.byte	0x1
 18338 0faa DD05     		.2byte	0x5dd
 18339 0fac 00000000 		.4byte	.LFB71
 18340 0fb0 5C170000 		.4byte	.LFE71-.LFB71
 18341 0fb4 01       		.uleb128 0x1
 18342 0fb5 9C       		.byte	0x9c
 18343 0fb6 F20F0000 		.4byte	0xff2
 18344 0fba 22       		.uleb128 0x22
 18345 0fbb 760A0000 		.4byte	.LASF222
 18346 0fbf 01       		.byte	0x1
 18347 0fc0 DD05     		.2byte	0x5dd
 18348 0fc2 1F010000 		.4byte	0x11f
 18349 0fc6 03       		.uleb128 0x3
 18350 0fc7 91       		.byte	0x91
 18351 0fc8 F47E     		.sleb128 -140
 18352 0fca 24       		.uleb128 0x24
 18353 0fcb 6900     		.ascii	"i\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 411


 18354 0fcd 01       		.byte	0x1
 18355 0fce DF05     		.2byte	0x5df
 18356 0fd0 73000000 		.4byte	0x73
 18357 0fd4 02       		.uleb128 0x2
 18358 0fd5 91       		.byte	0x91
 18359 0fd6 5C       		.sleb128 -36
 18360 0fd7 1C       		.uleb128 0x1c
 18361 0fd8 16000000 		.4byte	.LBB14
 18362 0fdc 04170000 		.4byte	.LBE14-.LBB14
 18363 0fe0 24       		.uleb128 0x24
 18364 0fe1 73747200 		.ascii	"str\000"
 18365 0fe5 01       		.byte	0x1
 18366 0fe6 E205     		.2byte	0x5e2
 18367 0fe8 F20F0000 		.4byte	0xff2
 18368 0fec 03       		.uleb128 0x3
 18369 0fed 91       		.byte	0x91
 18370 0fee F87E     		.sleb128 -136
 18371 0ff0 00       		.byte	0
 18372 0ff1 00       		.byte	0
 18373 0ff2 09       		.uleb128 0x9
 18374 0ff3 F9000000 		.4byte	0xf9
 18375 0ff7 02100000 		.4byte	0x1002
 18376 0ffb 0A       		.uleb128 0xa
 18377 0ffc 18010000 		.4byte	0x118
 18378 1000 63       		.byte	0x63
 18379 1001 00       		.byte	0
 18380 1002 1F       		.uleb128 0x1f
 18381 1003 B30B0000 		.4byte	.LASF223
 18382 1007 01       		.byte	0x1
 18383 1008 5207     		.2byte	0x752
 18384 100a 00000000 		.4byte	.LFB72
 18385 100e 58030000 		.4byte	.LFE72-.LFB72
 18386 1012 01       		.uleb128 0x1
 18387 1013 9C       		.byte	0x9c
 18388 1014 55100000 		.4byte	0x1055
 18389 1018 22       		.uleb128 0x22
 18390 1019 760A0000 		.4byte	.LASF222
 18391 101d 01       		.byte	0x1
 18392 101e 5207     		.2byte	0x752
 18393 1020 1F010000 		.4byte	0x11f
 18394 1024 03       		.uleb128 0x3
 18395 1025 91       		.byte	0x91
 18396 1026 F47E     		.sleb128 -140
 18397 1028 24       		.uleb128 0x24
 18398 1029 73747200 		.ascii	"str\000"
 18399 102d 01       		.byte	0x1
 18400 102e 5407     		.2byte	0x754
 18401 1030 F20F0000 		.4byte	0xff2
 18402 1034 03       		.uleb128 0x3
 18403 1035 91       		.byte	0x91
 18404 1036 FC7E     		.sleb128 -132
 18405 1038 24       		.uleb128 0x24
 18406 1039 6900     		.ascii	"i\000"
 18407 103b 01       		.byte	0x1
 18408 103c 5507     		.2byte	0x755
 18409 103e 73000000 		.4byte	0x73
 18410 1042 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 412


 18411 1043 91       		.byte	0x91
 18412 1044 64       		.sleb128 -28
 18413 1045 20       		.uleb128 0x20
 18414 1046 2A030000 		.4byte	.LASF224
 18415 104a 01       		.byte	0x1
 18416 104b 5607     		.2byte	0x756
 18417 104d 73000000 		.4byte	0x73
 18418 1051 02       		.uleb128 0x2
 18419 1052 91       		.byte	0x91
 18420 1053 60       		.sleb128 -32
 18421 1054 00       		.byte	0
 18422 1055 1F       		.uleb128 0x1f
 18423 1056 9D0B0000 		.4byte	.LASF225
 18424 105a 01       		.byte	0x1
 18425 105b 8D07     		.2byte	0x78d
 18426 105d 00000000 		.4byte	.LFB73
 18427 1061 EC090000 		.4byte	.LFE73-.LFB73
 18428 1065 01       		.uleb128 0x1
 18429 1066 9C       		.byte	0x9c
 18430 1067 99100000 		.4byte	0x1099
 18431 106b 22       		.uleb128 0x22
 18432 106c 760A0000 		.4byte	.LASF222
 18433 1070 01       		.byte	0x1
 18434 1071 8D07     		.2byte	0x78d
 18435 1073 1F010000 		.4byte	0x11f
 18436 1077 03       		.uleb128 0x3
 18437 1078 91       		.byte	0x91
 18438 1079 FC7E     		.sleb128 -132
 18439 107b 24       		.uleb128 0x24
 18440 107c 73747200 		.ascii	"str\000"
 18441 1080 01       		.byte	0x1
 18442 1081 8F07     		.2byte	0x78f
 18443 1083 F20F0000 		.4byte	0xff2
 18444 1087 03       		.uleb128 0x3
 18445 1088 91       		.byte	0x91
 18446 1089 807F     		.sleb128 -128
 18447 108b 24       		.uleb128 0x24
 18448 108c 6900     		.ascii	"i\000"
 18449 108e 01       		.byte	0x1
 18450 108f 9007     		.2byte	0x790
 18451 1091 73000000 		.4byte	0x73
 18452 1095 02       		.uleb128 0x2
 18453 1096 91       		.byte	0x91
 18454 1097 64       		.sleb128 -28
 18455 1098 00       		.byte	0
 18456 1099 1F       		.uleb128 0x1f
 18457 109a 87080000 		.4byte	.LASF226
 18458 109e 01       		.byte	0x1
 18459 109f 2F08     		.2byte	0x82f
 18460 10a1 00000000 		.4byte	.LFB74
 18461 10a5 C8000000 		.4byte	.LFE74-.LFB74
 18462 10a9 01       		.uleb128 0x1
 18463 10aa 9C       		.byte	0x9c
 18464 10ab DD100000 		.4byte	0x10dd
 18465 10af 22       		.uleb128 0x22
 18466 10b0 760A0000 		.4byte	.LASF222
 18467 10b4 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 413


 18468 10b5 2F08     		.2byte	0x82f
 18469 10b7 1F010000 		.4byte	0x11f
 18470 10bb 03       		.uleb128 0x3
 18471 10bc 91       		.byte	0x91
 18472 10bd 847F     		.sleb128 -124
 18473 10bf 24       		.uleb128 0x24
 18474 10c0 73747200 		.ascii	"str\000"
 18475 10c4 01       		.byte	0x1
 18476 10c5 3108     		.2byte	0x831
 18477 10c7 F20F0000 		.4byte	0xff2
 18478 10cb 03       		.uleb128 0x3
 18479 10cc 91       		.byte	0x91
 18480 10cd 887F     		.sleb128 -120
 18481 10cf 24       		.uleb128 0x24
 18482 10d0 6900     		.ascii	"i\000"
 18483 10d2 01       		.byte	0x1
 18484 10d3 3208     		.2byte	0x832
 18485 10d5 73000000 		.4byte	0x73
 18486 10d9 02       		.uleb128 0x2
 18487 10da 91       		.byte	0x91
 18488 10db 6C       		.sleb128 -20
 18489 10dc 00       		.byte	0
 18490 10dd 1F       		.uleb128 0x1f
 18491 10de 820A0000 		.4byte	.LASF227
 18492 10e2 01       		.byte	0x1
 18493 10e3 4608     		.2byte	0x846
 18494 10e5 00000000 		.4byte	.LFB75
 18495 10e9 30010000 		.4byte	.LFE75-.LFB75
 18496 10ed 01       		.uleb128 0x1
 18497 10ee 9C       		.byte	0x9c
 18498 10ef 21110000 		.4byte	0x1121
 18499 10f3 22       		.uleb128 0x22
 18500 10f4 760A0000 		.4byte	.LASF222
 18501 10f8 01       		.byte	0x1
 18502 10f9 4608     		.2byte	0x846
 18503 10fb 1F010000 		.4byte	0x11f
 18504 10ff 03       		.uleb128 0x3
 18505 1100 91       		.byte	0x91
 18506 1101 847F     		.sleb128 -124
 18507 1103 24       		.uleb128 0x24
 18508 1104 73747200 		.ascii	"str\000"
 18509 1108 01       		.byte	0x1
 18510 1109 4808     		.2byte	0x848
 18511 110b F20F0000 		.4byte	0xff2
 18512 110f 03       		.uleb128 0x3
 18513 1110 91       		.byte	0x91
 18514 1111 887F     		.sleb128 -120
 18515 1113 24       		.uleb128 0x24
 18516 1114 6900     		.ascii	"i\000"
 18517 1116 01       		.byte	0x1
 18518 1117 4908     		.2byte	0x849
 18519 1119 73000000 		.4byte	0x73
 18520 111d 02       		.uleb128 0x2
 18521 111e 91       		.byte	0x91
 18522 111f 6C       		.sleb128 -20
 18523 1120 00       		.byte	0
 18524 1121 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 414


 18525 1122 EB0F0000 		.4byte	.LASF228
 18526 1126 01       		.byte	0x1
 18527 1127 6D08     		.2byte	0x86d
 18528 1129 00000000 		.4byte	.LFB76
 18529 112d 74030000 		.4byte	.LFE76-.LFB76
 18530 1131 01       		.uleb128 0x1
 18531 1132 9C       		.byte	0x9c
 18532 1133 65110000 		.4byte	0x1165
 18533 1137 22       		.uleb128 0x22
 18534 1138 760A0000 		.4byte	.LASF222
 18535 113c 01       		.byte	0x1
 18536 113d 6D08     		.2byte	0x86d
 18537 113f 1F010000 		.4byte	0x11f
 18538 1143 03       		.uleb128 0x3
 18539 1144 91       		.byte	0x91
 18540 1145 AC7D     		.sleb128 -340
 18541 1147 24       		.uleb128 0x24
 18542 1148 73747200 		.ascii	"str\000"
 18543 114c 01       		.byte	0x1
 18544 114d 6F08     		.2byte	0x86f
 18545 114f 65110000 		.4byte	0x1165
 18546 1153 03       		.uleb128 0x3
 18547 1154 91       		.byte	0x91
 18548 1155 B07D     		.sleb128 -336
 18549 1157 24       		.uleb128 0x24
 18550 1158 6900     		.ascii	"i\000"
 18551 115a 01       		.byte	0x1
 18552 115b 7008     		.2byte	0x870
 18553 115d 73000000 		.4byte	0x73
 18554 1161 02       		.uleb128 0x2
 18555 1162 91       		.byte	0x91
 18556 1163 5C       		.sleb128 -36
 18557 1164 00       		.byte	0
 18558 1165 09       		.uleb128 0x9
 18559 1166 F9000000 		.4byte	0xf9
 18560 116a 76110000 		.4byte	0x1176
 18561 116e 21       		.uleb128 0x21
 18562 116f 18010000 		.4byte	0x118
 18563 1173 2B01     		.2byte	0x12b
 18564 1175 00       		.byte	0
 18565 1176 1F       		.uleb128 0x1f
 18566 1177 670B0000 		.4byte	.LASF229
 18567 117b 01       		.byte	0x1
 18568 117c 9708     		.2byte	0x897
 18569 117e 00000000 		.4byte	.LFB77
 18570 1182 84000000 		.4byte	.LFE77-.LFB77
 18571 1186 01       		.uleb128 0x1
 18572 1187 9C       		.byte	0x9c
 18573 1188 C9110000 		.4byte	0x11c9
 18574 118c 22       		.uleb128 0x22
 18575 118d 84040000 		.4byte	.LASF171
 18576 1191 01       		.byte	0x1
 18577 1192 9708     		.2byte	0x897
 18578 1194 560C0000 		.4byte	0xc56
 18579 1198 02       		.uleb128 0x2
 18580 1199 91       		.byte	0x91
 18581 119a 6C       		.sleb128 -20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 415


 18582 119b 22       		.uleb128 0x22
 18583 119c A5000000 		.4byte	.LASF172
 18584 11a0 01       		.byte	0x1
 18585 11a1 9708     		.2byte	0x897
 18586 11a3 A3000000 		.4byte	0xa3
 18587 11a7 02       		.uleb128 0x2
 18588 11a8 91       		.byte	0x91
 18589 11a9 6A       		.sleb128 -22
 18590 11aa 22       		.uleb128 0x22
 18591 11ab C80B0000 		.4byte	.LASF230
 18592 11af 01       		.byte	0x1
 18593 11b0 9708     		.2byte	0x897
 18594 11b2 97000000 		.4byte	0x97
 18595 11b6 02       		.uleb128 0x2
 18596 11b7 91       		.byte	0x91
 18597 11b8 69       		.sleb128 -23
 18598 11b9 20       		.uleb128 0x20
 18599 11ba 4E050000 		.4byte	.LASF197
 18600 11be 01       		.byte	0x1
 18601 11bf 9908     		.2byte	0x899
 18602 11c1 A3000000 		.4byte	0xa3
 18603 11c5 02       		.uleb128 0x2
 18604 11c6 91       		.byte	0x91
 18605 11c7 76       		.sleb128 -10
 18606 11c8 00       		.byte	0
 18607 11c9 1F       		.uleb128 0x1f
 18608 11ca 9F040000 		.4byte	.LASF231
 18609 11ce 01       		.byte	0x1
 18610 11cf B308     		.2byte	0x8b3
 18611 11d1 00000000 		.4byte	.LFB78
 18612 11d5 88000000 		.4byte	.LFE78-.LFB78
 18613 11d9 01       		.uleb128 0x1
 18614 11da 9C       		.byte	0x9c
 18615 11db 0D120000 		.4byte	0x120d
 18616 11df 22       		.uleb128 0x22
 18617 11e0 84040000 		.4byte	.LASF171
 18618 11e4 01       		.byte	0x1
 18619 11e5 B308     		.2byte	0x8b3
 18620 11e7 560C0000 		.4byte	0xc56
 18621 11eb 02       		.uleb128 0x2
 18622 11ec 91       		.byte	0x91
 18623 11ed 6C       		.sleb128 -20
 18624 11ee 22       		.uleb128 0x22
 18625 11ef A5000000 		.4byte	.LASF172
 18626 11f3 01       		.byte	0x1
 18627 11f4 B308     		.2byte	0x8b3
 18628 11f6 A3000000 		.4byte	0xa3
 18629 11fa 02       		.uleb128 0x2
 18630 11fb 91       		.byte	0x91
 18631 11fc 6A       		.sleb128 -22
 18632 11fd 20       		.uleb128 0x20
 18633 11fe 4E050000 		.4byte	.LASF197
 18634 1202 01       		.byte	0x1
 18635 1203 B508     		.2byte	0x8b5
 18636 1205 A3000000 		.4byte	0xa3
 18637 1209 02       		.uleb128 0x2
 18638 120a 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 416


 18639 120b 76       		.sleb128 -10
 18640 120c 00       		.byte	0
 18641 120d 1F       		.uleb128 0x1f
 18642 120e 18090000 		.4byte	.LASF232
 18643 1212 01       		.byte	0x1
 18644 1213 CB08     		.2byte	0x8cb
 18645 1215 00000000 		.4byte	.LFB79
 18646 1219 80000000 		.4byte	.LFE79-.LFB79
 18647 121d 01       		.uleb128 0x1
 18648 121e 9C       		.byte	0x9c
 18649 121f 51120000 		.4byte	0x1251
 18650 1223 22       		.uleb128 0x22
 18651 1224 84040000 		.4byte	.LASF171
 18652 1228 01       		.byte	0x1
 18653 1229 CB08     		.2byte	0x8cb
 18654 122b 560C0000 		.4byte	0xc56
 18655 122f 02       		.uleb128 0x2
 18656 1230 91       		.byte	0x91
 18657 1231 6C       		.sleb128 -20
 18658 1232 22       		.uleb128 0x22
 18659 1233 A5000000 		.4byte	.LASF172
 18660 1237 01       		.byte	0x1
 18661 1238 CB08     		.2byte	0x8cb
 18662 123a A3000000 		.4byte	0xa3
 18663 123e 02       		.uleb128 0x2
 18664 123f 91       		.byte	0x91
 18665 1240 6A       		.sleb128 -22
 18666 1241 20       		.uleb128 0x20
 18667 1242 4E050000 		.4byte	.LASF197
 18668 1246 01       		.byte	0x1
 18669 1247 CD08     		.2byte	0x8cd
 18670 1249 A3000000 		.4byte	0xa3
 18671 124d 02       		.uleb128 0x2
 18672 124e 91       		.byte	0x91
 18673 124f 76       		.sleb128 -10
 18674 1250 00       		.byte	0
 18675 1251 25       		.uleb128 0x25
 18676 1252 D00E0000 		.4byte	.LASF238
 18677 1256 01       		.byte	0x1
 18678 1257 E608     		.2byte	0x8e6
 18679 1259 97000000 		.4byte	0x97
 18680 125d 00000000 		.4byte	.LFB80
 18681 1261 3E000000 		.4byte	.LFE80-.LFB80
 18682 1265 01       		.uleb128 0x1
 18683 1266 9C       		.byte	0x9c
 18684 1267 A6120000 		.4byte	0x12a6
 18685 126b 22       		.uleb128 0x22
 18686 126c 5C080000 		.4byte	.LASF233
 18687 1270 01       		.byte	0x1
 18688 1271 E608     		.2byte	0x8e6
 18689 1273 560C0000 		.4byte	0xc56
 18690 1277 02       		.uleb128 0x2
 18691 1278 91       		.byte	0x91
 18692 1279 6C       		.sleb128 -20
 18693 127a 22       		.uleb128 0x22
 18694 127b 59040000 		.4byte	.LASF234
 18695 127f 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 417


 18696 1280 E608     		.2byte	0x8e6
 18697 1282 97000000 		.4byte	0x97
 18698 1286 02       		.uleb128 0x2
 18699 1287 91       		.byte	0x91
 18700 1288 6B       		.sleb128 -21
 18701 1289 24       		.uleb128 0x24
 18702 128a 6900     		.ascii	"i\000"
 18703 128c 01       		.byte	0x1
 18704 128d E808     		.2byte	0x8e8
 18705 128f 97000000 		.4byte	0x97
 18706 1293 02       		.uleb128 0x2
 18707 1294 91       		.byte	0x91
 18708 1295 77       		.sleb128 -9
 18709 1296 20       		.uleb128 0x20
 18710 1297 E1090000 		.4byte	.LASF235
 18711 129b 01       		.byte	0x1
 18712 129c E908     		.2byte	0x8e9
 18713 129e 97000000 		.4byte	0x97
 18714 12a2 02       		.uleb128 0x2
 18715 12a3 91       		.byte	0x91
 18716 12a4 76       		.sleb128 -10
 18717 12a5 00       		.byte	0
 18718 12a6 1F       		.uleb128 0x1f
 18719 12a7 74080000 		.4byte	.LASF236
 18720 12ab 01       		.byte	0x1
 18721 12ac F608     		.2byte	0x8f6
 18722 12ae 00000000 		.4byte	.LFB81
 18723 12b2 2E000000 		.4byte	.LFE81-.LFB81
 18724 12b6 01       		.uleb128 0x1
 18725 12b7 9C       		.byte	0x9c
 18726 12b8 EA120000 		.4byte	0x12ea
 18727 12bc 22       		.uleb128 0x22
 18728 12bd 9C030000 		.4byte	.LASF237
 18729 12c1 01       		.byte	0x1
 18730 12c2 F608     		.2byte	0x8f6
 18731 12c4 97000000 		.4byte	0x97
 18732 12c8 02       		.uleb128 0x2
 18733 12c9 91       		.byte	0x91
 18734 12ca 6F       		.sleb128 -17
 18735 12cb 20       		.uleb128 0x20
 18736 12cc A5000000 		.4byte	.LASF172
 18737 12d0 01       		.byte	0x1
 18738 12d1 F708     		.2byte	0x8f7
 18739 12d3 73000000 		.4byte	0x73
 18740 12d7 02       		.uleb128 0x2
 18741 12d8 91       		.byte	0x91
 18742 12d9 74       		.sleb128 -12
 18743 12da 20       		.uleb128 0x20
 18744 12db 84040000 		.4byte	.LASF171
 18745 12df 01       		.byte	0x1
 18746 12e0 F808     		.2byte	0x8f8
 18747 12e2 48080000 		.4byte	0x848
 18748 12e6 02       		.uleb128 0x2
 18749 12e7 91       		.byte	0x91
 18750 12e8 70       		.sleb128 -16
 18751 12e9 00       		.byte	0
 18752 12ea 26       		.uleb128 0x26
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 418


 18753 12eb F7020000 		.4byte	.LASF239
 18754 12ef 01       		.byte	0x1
 18755 12f0 0509     		.2byte	0x905
 18756 12f2 97000000 		.4byte	0x97
 18757 12f6 00000000 		.4byte	.LFB82
 18758 12fa 98000000 		.4byte	.LFE82-.LFB82
 18759 12fe 01       		.uleb128 0x1
 18760 12ff 9C       		.byte	0x9c
 18761 1300 4E130000 		.4byte	0x134e
 18762 1304 22       		.uleb128 0x22
 18763 1305 4C040000 		.4byte	.LASF240
 18764 1309 01       		.byte	0x1
 18765 130a 0509     		.2byte	0x905
 18766 130c 73000000 		.4byte	0x73
 18767 1310 02       		.uleb128 0x2
 18768 1311 91       		.byte	0x91
 18769 1312 64       		.sleb128 -28
 18770 1313 24       		.uleb128 0x24
 18771 1314 6900     		.ascii	"i\000"
 18772 1316 01       		.byte	0x1
 18773 1317 0709     		.2byte	0x907
 18774 1319 73000000 		.4byte	0x73
 18775 131d 02       		.uleb128 0x2
 18776 131e 91       		.byte	0x91
 18777 131f 74       		.sleb128 -12
 18778 1320 20       		.uleb128 0x20
 18779 1321 5E000000 		.4byte	.LASF241
 18780 1325 01       		.byte	0x1
 18781 1326 0809     		.2byte	0x908
 18782 1328 97000000 		.4byte	0x97
 18783 132c 02       		.uleb128 0x2
 18784 132d 91       		.byte	0x91
 18785 132e 6B       		.sleb128 -21
 18786 132f 20       		.uleb128 0x20
 18787 1330 A9040000 		.4byte	.LASF242
 18788 1334 01       		.byte	0x1
 18789 1335 0909     		.2byte	0x909
 18790 1337 73000000 		.4byte	0x73
 18791 133b 02       		.uleb128 0x2
 18792 133c 91       		.byte	0x91
 18793 133d 6C       		.sleb128 -20
 18794 133e 20       		.uleb128 0x20
 18795 133f 05040000 		.4byte	.LASF243
 18796 1343 01       		.byte	0x1
 18797 1344 0A09     		.2byte	0x90a
 18798 1346 97000000 		.4byte	0x97
 18799 134a 02       		.uleb128 0x2
 18800 134b 91       		.byte	0x91
 18801 134c 73       		.sleb128 -13
 18802 134d 00       		.byte	0
 18803 134e 1F       		.uleb128 0x1f
 18804 134f 010B0000 		.4byte	.LASF244
 18805 1353 01       		.byte	0x1
 18806 1354 2F09     		.2byte	0x92f
 18807 1356 00000000 		.4byte	.LFB83
 18808 135a 64000000 		.4byte	.LFE83-.LFB83
 18809 135e 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 419


 18810 135f 9C       		.byte	0x9c
 18811 1360 72130000 		.4byte	0x1372
 18812 1364 24       		.uleb128 0x24
 18813 1365 6900     		.ascii	"i\000"
 18814 1367 01       		.byte	0x1
 18815 1368 3109     		.2byte	0x931
 18816 136a A3000000 		.4byte	0xa3
 18817 136e 02       		.uleb128 0x2
 18818 136f 91       		.byte	0x91
 18819 1370 76       		.sleb128 -10
 18820 1371 00       		.byte	0
 18821 1372 26       		.uleb128 0x26
 18822 1373 610A0000 		.4byte	.LASF245
 18823 1377 01       		.byte	0x1
 18824 1378 4509     		.2byte	0x945
 18825 137a 97000000 		.4byte	0x97
 18826 137e 00000000 		.4byte	.LFB84
 18827 1382 5C000000 		.4byte	.LFE84-.LFB84
 18828 1386 01       		.uleb128 0x1
 18829 1387 9C       		.byte	0x9c
 18830 1388 9A130000 		.4byte	0x139a
 18831 138c 24       		.uleb128 0x24
 18832 138d 6900     		.ascii	"i\000"
 18833 138f 01       		.byte	0x1
 18834 1390 4609     		.2byte	0x946
 18835 1392 A3000000 		.4byte	0xa3
 18836 1396 02       		.uleb128 0x2
 18837 1397 91       		.byte	0x91
 18838 1398 76       		.sleb128 -10
 18839 1399 00       		.byte	0
 18840 139a 26       		.uleb128 0x26
 18841 139b AF040000 		.4byte	.LASF246
 18842 139f 01       		.byte	0x1
 18843 13a0 5809     		.2byte	0x958
 18844 13a2 97000000 		.4byte	0x97
 18845 13a6 00000000 		.4byte	.LFB85
 18846 13aa 7C030000 		.4byte	.LFE85-.LFB85
 18847 13ae 01       		.uleb128 0x1
 18848 13af 9C       		.byte	0x9c
 18849 13b0 CF130000 		.4byte	0x13cf
 18850 13b4 24       		.uleb128 0x24
 18851 13b5 6900     		.ascii	"i\000"
 18852 13b7 01       		.byte	0x1
 18853 13b8 5A09     		.2byte	0x95a
 18854 13ba 97000000 		.4byte	0x97
 18855 13be 02       		.uleb128 0x2
 18856 13bf 91       		.byte	0x91
 18857 13c0 77       		.sleb128 -9
 18858 13c1 24       		.uleb128 0x24
 18859 13c2 6A00     		.ascii	"j\000"
 18860 13c4 01       		.byte	0x1
 18861 13c5 5A09     		.2byte	0x95a
 18862 13c7 97000000 		.4byte	0x97
 18863 13cb 02       		.uleb128 0x2
 18864 13cc 91       		.byte	0x91
 18865 13cd 76       		.sleb128 -10
 18866 13ce 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 420


 18867 13cf 27       		.uleb128 0x27
 18868 13d0 4E010000 		.4byte	.LASF307
 18869 13d4 01       		.byte	0x1
 18870 13d5 E209     		.2byte	0x9e2
 18871 13d7 00000000 		.4byte	.LFB86
 18872 13db B4000000 		.4byte	.LFE86-.LFB86
 18873 13df 01       		.uleb128 0x1
 18874 13e0 9C       		.byte	0x9c
 18875 13e1 23       		.uleb128 0x23
 18876 13e2 EA040000 		.4byte	.LASF247
 18877 13e6 01       		.byte	0x1
 18878 13e7 060A     		.2byte	0xa06
 18879 13e9 00000000 		.4byte	.LFB87
 18880 13ed 8C000000 		.4byte	.LFE87-.LFB87
 18881 13f1 01       		.uleb128 0x1
 18882 13f2 9C       		.byte	0x9c
 18883 13f3 25140000 		.4byte	0x1425
 18884 13f7 20       		.uleb128 0x20
 18885 13f8 4E050000 		.4byte	.LASF197
 18886 13fc 01       		.byte	0x1
 18887 13fd 080A     		.2byte	0xa08
 18888 13ff 97000000 		.4byte	0x97
 18889 1403 02       		.uleb128 0x2
 18890 1404 91       		.byte	0x91
 18891 1405 77       		.sleb128 -9
 18892 1406 20       		.uleb128 0x20
 18893 1407 540D0000 		.4byte	.LASF179
 18894 140b 01       		.byte	0x1
 18895 140c 090A     		.2byte	0xa09
 18896 140e C7000000 		.4byte	0xc7
 18897 1412 02       		.uleb128 0x2
 18898 1413 91       		.byte	0x91
 18899 1414 74       		.sleb128 -12
 18900 1415 20       		.uleb128 0x20
 18901 1416 84040000 		.4byte	.LASF171
 18902 141a 01       		.byte	0x1
 18903 141b 0C0A     		.2byte	0xa0c
 18904 141d 25140000 		.4byte	0x1425
 18905 1421 02       		.uleb128 0x2
 18906 1422 91       		.byte	0x91
 18907 1423 6C       		.sleb128 -20
 18908 1424 00       		.byte	0
 18909 1425 09       		.uleb128 0x9
 18910 1426 97000000 		.4byte	0x97
 18911 142a 35140000 		.4byte	0x1435
 18912 142e 0A       		.uleb128 0xa
 18913 142f 18010000 		.4byte	0x118
 18914 1433 07       		.byte	0x7
 18915 1434 00       		.byte	0
 18916 1435 23       		.uleb128 0x23
 18917 1436 EE0A0000 		.4byte	.LASF248
 18918 143a 01       		.byte	0x1
 18919 143b 200A     		.2byte	0xa20
 18920 143d 00000000 		.4byte	.LFB88
 18921 1441 90000000 		.4byte	.LFE88-.LFB88
 18922 1445 01       		.uleb128 0x1
 18923 1446 9C       		.byte	0x9c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 421


 18924 1447 79140000 		.4byte	0x1479
 18925 144b 20       		.uleb128 0x20
 18926 144c 4E050000 		.4byte	.LASF197
 18927 1450 01       		.byte	0x1
 18928 1451 220A     		.2byte	0xa22
 18929 1453 97000000 		.4byte	0x97
 18930 1457 02       		.uleb128 0x2
 18931 1458 91       		.byte	0x91
 18932 1459 77       		.sleb128 -9
 18933 145a 20       		.uleb128 0x20
 18934 145b 540D0000 		.4byte	.LASF179
 18935 145f 01       		.byte	0x1
 18936 1460 230A     		.2byte	0xa23
 18937 1462 C7000000 		.4byte	0xc7
 18938 1466 02       		.uleb128 0x2
 18939 1467 91       		.byte	0x91
 18940 1468 74       		.sleb128 -12
 18941 1469 20       		.uleb128 0x20
 18942 146a 84040000 		.4byte	.LASF171
 18943 146e 01       		.byte	0x1
 18944 146f 270A     		.2byte	0xa27
 18945 1471 25140000 		.4byte	0x1425
 18946 1475 02       		.uleb128 0x2
 18947 1476 91       		.byte	0x91
 18948 1477 6C       		.sleb128 -20
 18949 1478 00       		.byte	0
 18950 1479 23       		.uleb128 0x23
 18951 147a FC050000 		.4byte	.LASF249
 18952 147e 01       		.byte	0x1
 18953 147f 3A0A     		.2byte	0xa3a
 18954 1481 00000000 		.4byte	.LFB89
 18955 1485 8C000000 		.4byte	.LFE89-.LFB89
 18956 1489 01       		.uleb128 0x1
 18957 148a 9C       		.byte	0x9c
 18958 148b BD140000 		.4byte	0x14bd
 18959 148f 20       		.uleb128 0x20
 18960 1490 4E050000 		.4byte	.LASF197
 18961 1494 01       		.byte	0x1
 18962 1495 3C0A     		.2byte	0xa3c
 18963 1497 97000000 		.4byte	0x97
 18964 149b 02       		.uleb128 0x2
 18965 149c 91       		.byte	0x91
 18966 149d 77       		.sleb128 -9
 18967 149e 20       		.uleb128 0x20
 18968 149f 540D0000 		.4byte	.LASF179
 18969 14a3 01       		.byte	0x1
 18970 14a4 3D0A     		.2byte	0xa3d
 18971 14a6 C7000000 		.4byte	0xc7
 18972 14aa 02       		.uleb128 0x2
 18973 14ab 91       		.byte	0x91
 18974 14ac 74       		.sleb128 -12
 18975 14ad 20       		.uleb128 0x20
 18976 14ae 84040000 		.4byte	.LASF171
 18977 14b2 01       		.byte	0x1
 18978 14b3 410A     		.2byte	0xa41
 18979 14b5 25140000 		.4byte	0x1425
 18980 14b9 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 422


 18981 14ba 91       		.byte	0x91
 18982 14bb 6C       		.sleb128 -20
 18983 14bc 00       		.byte	0
 18984 14bd 28       		.uleb128 0x28
 18985 14be BC080000 		.4byte	.LASF250
 18986 14c2 01       		.byte	0x1
 18987 14c3 540A     		.2byte	0xa54
 18988 14c5 00000000 		.4byte	.LFB90
 18989 14c9 CC000000 		.4byte	.LFE90-.LFB90
 18990 14cd 01       		.uleb128 0x1
 18991 14ce 9C       		.byte	0x9c
 18992 14cf E3140000 		.4byte	0x14e3
 18993 14d3 20       		.uleb128 0x20
 18994 14d4 540D0000 		.4byte	.LASF179
 18995 14d8 01       		.byte	0x1
 18996 14d9 570A     		.2byte	0xa57
 18997 14db C7000000 		.4byte	0xc7
 18998 14df 02       		.uleb128 0x2
 18999 14e0 91       		.byte	0x91
 19000 14e1 76       		.sleb128 -10
 19001 14e2 00       		.byte	0
 19002 14e3 29       		.uleb128 0x29
 19003 14e4 6B0F0000 		.4byte	.LASF255
 19004 14e8 01       		.byte	0x1
 19005 14e9 760A     		.2byte	0xa76
 19006 14eb 00000000 		.4byte	.LFB91
 19007 14ef 48000000 		.4byte	.LFE91-.LFB91
 19008 14f3 01       		.uleb128 0x1
 19009 14f4 9C       		.byte	0x9c
 19010 14f5 23       		.uleb128 0x23
 19011 14f6 07090000 		.4byte	.LASF251
 19012 14fa 01       		.byte	0x1
 19013 14fb 840A     		.2byte	0xa84
 19014 14fd 00000000 		.4byte	.LFB92
 19015 1501 34000000 		.4byte	.LFE92-.LFB92
 19016 1505 01       		.uleb128 0x1
 19017 1506 9C       		.byte	0x9c
 19018 1507 1B150000 		.4byte	0x151b
 19019 150b 20       		.uleb128 0x20
 19020 150c 84040000 		.4byte	.LASF171
 19021 1510 01       		.byte	0x1
 19022 1511 860A     		.2byte	0xa86
 19023 1513 BC070000 		.4byte	0x7bc
 19024 1517 02       		.uleb128 0x2
 19025 1518 91       		.byte	0x91
 19026 1519 74       		.sleb128 -12
 19027 151a 00       		.byte	0
 19028 151b 23       		.uleb128 0x23
 19029 151c F00B0000 		.4byte	.LASF252
 19030 1520 01       		.byte	0x1
 19031 1521 960A     		.2byte	0xa96
 19032 1523 00000000 		.4byte	.LFB93
 19033 1527 D8000000 		.4byte	.LFE93-.LFB93
 19034 152b 01       		.uleb128 0x1
 19035 152c 9C       		.byte	0x9c
 19036 152d 5F150000 		.4byte	0x155f
 19037 1531 20       		.uleb128 0x20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 423


 19038 1532 4E050000 		.4byte	.LASF197
 19039 1536 01       		.byte	0x1
 19040 1537 980A     		.2byte	0xa98
 19041 1539 97000000 		.4byte	0x97
 19042 153d 02       		.uleb128 0x2
 19043 153e 91       		.byte	0x91
 19044 153f 77       		.sleb128 -9
 19045 1540 20       		.uleb128 0x20
 19046 1541 540D0000 		.4byte	.LASF179
 19047 1545 01       		.byte	0x1
 19048 1546 990A     		.2byte	0xa99
 19049 1548 C7000000 		.4byte	0xc7
 19050 154c 02       		.uleb128 0x2
 19051 154d 91       		.byte	0x91
 19052 154e 74       		.sleb128 -12
 19053 154f 20       		.uleb128 0x20
 19054 1550 84040000 		.4byte	.LASF171
 19055 1554 01       		.byte	0x1
 19056 1555 9D0A     		.2byte	0xa9d
 19057 1557 38080000 		.4byte	0x838
 19058 155b 02       		.uleb128 0x2
 19059 155c 91       		.byte	0x91
 19060 155d 68       		.sleb128 -24
 19061 155e 00       		.byte	0
 19062 155f 23       		.uleb128 0x23
 19063 1560 D4070000 		.4byte	.LASF253
 19064 1564 01       		.byte	0x1
 19065 1565 C00A     		.2byte	0xac0
 19066 1567 00000000 		.4byte	.LFB94
 19067 156b 78000000 		.4byte	.LFE94-.LFB94
 19068 156f 01       		.uleb128 0x1
 19069 1570 9C       		.byte	0x9c
 19070 1571 94150000 		.4byte	0x1594
 19071 1575 20       		.uleb128 0x20
 19072 1576 84040000 		.4byte	.LASF171
 19073 157a 01       		.byte	0x1
 19074 157b C40A     		.2byte	0xac4
 19075 157d 9C070000 		.4byte	0x79c
 19076 1581 02       		.uleb128 0x2
 19077 1582 91       		.byte	0x91
 19078 1583 70       		.sleb128 -16
 19079 1584 20       		.uleb128 0x20
 19080 1585 540D0000 		.4byte	.LASF179
 19081 1589 01       		.byte	0x1
 19082 158a C50A     		.2byte	0xac5
 19083 158c C7000000 		.4byte	0xc7
 19084 1590 02       		.uleb128 0x2
 19085 1591 91       		.byte	0x91
 19086 1592 6E       		.sleb128 -18
 19087 1593 00       		.byte	0
 19088 1594 23       		.uleb128 0x23
 19089 1595 970E0000 		.4byte	.LASF254
 19090 1599 01       		.byte	0x1
 19091 159a E20A     		.2byte	0xae2
 19092 159c 00000000 		.4byte	.LFB95
 19093 15a0 44000000 		.4byte	.LFE95-.LFB95
 19094 15a4 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 424


 19095 15a5 9C       		.byte	0x9c
 19096 15a6 C9150000 		.4byte	0x15c9
 19097 15aa 20       		.uleb128 0x20
 19098 15ab 84040000 		.4byte	.LASF171
 19099 15af 01       		.byte	0x1
 19100 15b0 E60A     		.2byte	0xae6
 19101 15b2 C9150000 		.4byte	0x15c9
 19102 15b6 02       		.uleb128 0x2
 19103 15b7 91       		.byte	0x91
 19104 15b8 74       		.sleb128 -12
 19105 15b9 20       		.uleb128 0x20
 19106 15ba 540D0000 		.4byte	.LASF179
 19107 15be 01       		.byte	0x1
 19108 15bf E70A     		.2byte	0xae7
 19109 15c1 C7000000 		.4byte	0xc7
 19110 15c5 02       		.uleb128 0x2
 19111 15c6 91       		.byte	0x91
 19112 15c7 72       		.sleb128 -14
 19113 15c8 00       		.byte	0
 19114 15c9 09       		.uleb128 0x9
 19115 15ca 97000000 		.4byte	0x97
 19116 15ce D9150000 		.4byte	0x15d9
 19117 15d2 0A       		.uleb128 0xa
 19118 15d3 18010000 		.4byte	0x118
 19119 15d7 03       		.byte	0x3
 19120 15d8 00       		.byte	0
 19121 15d9 29       		.uleb128 0x29
 19122 15da 71000000 		.4byte	.LASF256
 19123 15de 01       		.byte	0x1
 19124 15df F90A     		.2byte	0xaf9
 19125 15e1 00000000 		.4byte	.LFB96
 19126 15e5 34000000 		.4byte	.LFE96-.LFB96
 19127 15e9 01       		.uleb128 0x1
 19128 15ea 9C       		.byte	0x9c
 19129 15eb 23       		.uleb128 0x23
 19130 15ec 81020000 		.4byte	.LASF257
 19131 15f0 01       		.byte	0x1
 19132 15f1 070B     		.2byte	0xb07
 19133 15f3 00000000 		.4byte	.LFB97
 19134 15f7 20000000 		.4byte	.LFE97-.LFB97
 19135 15fb 01       		.uleb128 0x1
 19136 15fc 9C       		.byte	0x9c
 19137 15fd 11160000 		.4byte	0x1611
 19138 1601 20       		.uleb128 0x20
 19139 1602 84040000 		.4byte	.LASF171
 19140 1606 01       		.byte	0x1
 19141 1607 090B     		.2byte	0xb09
 19142 1609 48080000 		.4byte	0x848
 19143 160d 02       		.uleb128 0x2
 19144 160e 91       		.byte	0x91
 19145 160f 74       		.sleb128 -12
 19146 1610 00       		.byte	0
 19147 1611 23       		.uleb128 0x23
 19148 1612 D4000000 		.4byte	.LASF258
 19149 1616 01       		.byte	0x1
 19150 1617 150B     		.2byte	0xb15
 19151 1619 00000000 		.4byte	.LFB98
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 425


 19152 161d 54000000 		.4byte	.LFE98-.LFB98
 19153 1621 01       		.uleb128 0x1
 19154 1622 9C       		.byte	0x9c
 19155 1623 46160000 		.4byte	0x1646
 19156 1627 20       		.uleb128 0x20
 19157 1628 84040000 		.4byte	.LASF171
 19158 162c 01       		.byte	0x1
 19159 162d 190B     		.2byte	0xb19
 19160 162f 9C070000 		.4byte	0x79c
 19161 1633 02       		.uleb128 0x2
 19162 1634 91       		.byte	0x91
 19163 1635 70       		.sleb128 -16
 19164 1636 20       		.uleb128 0x20
 19165 1637 540D0000 		.4byte	.LASF179
 19166 163b 01       		.byte	0x1
 19167 163c 1A0B     		.2byte	0xb1a
 19168 163e C7000000 		.4byte	0xc7
 19169 1642 02       		.uleb128 0x2
 19170 1643 91       		.byte	0x91
 19171 1644 6E       		.sleb128 -18
 19172 1645 00       		.byte	0
 19173 1646 23       		.uleb128 0x23
 19174 1647 630C0000 		.4byte	.LASF259
 19175 164b 01       		.byte	0x1
 19176 164c 2C0B     		.2byte	0xb2c
 19177 164e 00000000 		.4byte	.LFB99
 19178 1652 70010000 		.4byte	.LFE99-.LFB99
 19179 1656 01       		.uleb128 0x1
 19180 1657 9C       		.byte	0x9c
 19181 1658 A8160000 		.4byte	0x16a8
 19182 165c 20       		.uleb128 0x20
 19183 165d D8080000 		.4byte	.LASF260
 19184 1661 01       		.byte	0x1
 19185 1662 2F0B     		.2byte	0xb2f
 19186 1664 AF000000 		.4byte	0xaf
 19187 1668 02       		.uleb128 0x2
 19188 1669 91       		.byte	0x91
 19189 166a 70       		.sleb128 -16
 19190 166b 20       		.uleb128 0x20
 19191 166c 5B0B0000 		.4byte	.LASF261
 19192 1670 01       		.byte	0x1
 19193 1671 300B     		.2byte	0xb30
 19194 1673 EB000000 		.4byte	0xeb
 19195 1677 02       		.uleb128 0x2
 19196 1678 91       		.byte	0x91
 19197 1679 6C       		.sleb128 -20
 19198 167a 20       		.uleb128 0x20
 19199 167b A5000000 		.4byte	.LASF172
 19200 167f 01       		.byte	0x1
 19201 1680 310B     		.2byte	0xb31
 19202 1682 97000000 		.4byte	0x97
 19203 1686 02       		.uleb128 0x2
 19204 1687 91       		.byte	0x91
 19205 1688 77       		.sleb128 -9
 19206 1689 20       		.uleb128 0x20
 19207 168a 84040000 		.4byte	.LASF171
 19208 168e 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 426


 19209 168f 320B     		.2byte	0xb32
 19210 1691 48080000 		.4byte	0x848
 19211 1695 02       		.uleb128 0x2
 19212 1696 91       		.byte	0x91
 19213 1697 68       		.sleb128 -24
 19214 1698 20       		.uleb128 0x20
 19215 1699 C80B0000 		.4byte	.LASF230
 19216 169d 01       		.byte	0x1
 19217 169e 330B     		.2byte	0xb33
 19218 16a0 97000000 		.4byte	0x97
 19219 16a4 02       		.uleb128 0x2
 19220 16a5 91       		.byte	0x91
 19221 16a6 6B       		.sleb128 -21
 19222 16a7 00       		.byte	0
 19223 16a8 23       		.uleb128 0x23
 19224 16a9 73010000 		.4byte	.LASF262
 19225 16ad 01       		.byte	0x1
 19226 16ae 6D0B     		.2byte	0xb6d
 19227 16b0 00000000 		.4byte	.LFB100
 19228 16b4 60000000 		.4byte	.LFE100-.LFB100
 19229 16b8 01       		.uleb128 0x1
 19230 16b9 9C       		.byte	0x9c
 19231 16ba DD160000 		.4byte	0x16dd
 19232 16be 20       		.uleb128 0x20
 19233 16bf 84040000 		.4byte	.LASF171
 19234 16c3 01       		.byte	0x1
 19235 16c4 6F0B     		.2byte	0xb6f
 19236 16c6 9C070000 		.4byte	0x79c
 19237 16ca 02       		.uleb128 0x2
 19238 16cb 91       		.byte	0x91
 19239 16cc 70       		.sleb128 -16
 19240 16cd 20       		.uleb128 0x20
 19241 16ce 540D0000 		.4byte	.LASF179
 19242 16d2 01       		.byte	0x1
 19243 16d3 700B     		.2byte	0xb70
 19244 16d5 C7000000 		.4byte	0xc7
 19245 16d9 02       		.uleb128 0x2
 19246 16da 91       		.byte	0x91
 19247 16db 6E       		.sleb128 -18
 19248 16dc 00       		.byte	0
 19249 16dd 23       		.uleb128 0x23
 19250 16de 10010000 		.4byte	.LASF263
 19251 16e2 01       		.byte	0x1
 19252 16e3 850B     		.2byte	0xb85
 19253 16e5 00000000 		.4byte	.LFB101
 19254 16e9 98050000 		.4byte	.LFE101-.LFB101
 19255 16ed 01       		.uleb128 0x1
 19256 16ee 9C       		.byte	0x9c
 19257 16ef 6A170000 		.4byte	0x176a
 19258 16f3 20       		.uleb128 0x20
 19259 16f4 DC0E0000 		.4byte	.LASF264
 19260 16f8 01       		.byte	0x1
 19261 16f9 880B     		.2byte	0xb88
 19262 16fb 97000000 		.4byte	0x97
 19263 16ff 02       		.uleb128 0x2
 19264 1700 91       		.byte	0x91
 19265 1701 6F       		.sleb128 -17
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 427


 19266 1702 24       		.uleb128 0x24
 19267 1703 6300     		.ascii	"c\000"
 19268 1705 01       		.byte	0x1
 19269 1706 890B     		.2byte	0xb89
 19270 1708 A3000000 		.4byte	0xa3
 19271 170c 02       		.uleb128 0x2
 19272 170d 91       		.byte	0x91
 19273 170e 6C       		.sleb128 -20
 19274 170f 24       		.uleb128 0x24
 19275 1710 6B00     		.ascii	"k\000"
 19276 1712 01       		.byte	0x1
 19277 1713 8A0B     		.2byte	0xb8a
 19278 1715 97000000 		.4byte	0x97
 19279 1719 02       		.uleb128 0x2
 19280 171a 91       		.byte	0x91
 19281 171b 6B       		.sleb128 -21
 19282 171c 20       		.uleb128 0x20
 19283 171d 1F000000 		.4byte	.LASF265
 19284 1721 01       		.byte	0x1
 19285 1722 8B0B     		.2byte	0xb8b
 19286 1724 A3000000 		.4byte	0xa3
 19287 1728 02       		.uleb128 0x2
 19288 1729 91       		.byte	0x91
 19289 172a 68       		.sleb128 -24
 19290 172b 20       		.uleb128 0x20
 19291 172c 540D0000 		.4byte	.LASF179
 19292 1730 01       		.byte	0x1
 19293 1731 8C0B     		.2byte	0xb8c
 19294 1733 C7000000 		.4byte	0xc7
 19295 1737 02       		.uleb128 0x2
 19296 1738 91       		.byte	0x91
 19297 1739 66       		.sleb128 -26
 19298 173a 20       		.uleb128 0x20
 19299 173b 550E0000 		.4byte	.LASF178
 19300 173f 01       		.byte	0x1
 19301 1740 8D0B     		.2byte	0xb8d
 19302 1742 EB000000 		.4byte	0xeb
 19303 1746 02       		.uleb128 0x2
 19304 1747 91       		.byte	0x91
 19305 1748 60       		.sleb128 -32
 19306 1749 20       		.uleb128 0x20
 19307 174a 84040000 		.4byte	.LASF171
 19308 174e 01       		.byte	0x1
 19309 174f 900B     		.2byte	0xb90
 19310 1751 6A170000 		.4byte	0x176a
 19311 1755 03       		.uleb128 0x3
 19312 1756 91       		.byte	0x91
 19313 1757 807D     		.sleb128 -384
 19314 1759 20       		.uleb128 0x20
 19315 175a A6060000 		.4byte	.LASF266
 19316 175e 01       		.byte	0x1
 19317 175f 910B     		.2byte	0xb91
 19318 1761 7B170000 		.4byte	0x177b
 19319 1765 03       		.uleb128 0x3
 19320 1766 91       		.byte	0x91
 19321 1767 E07C     		.sleb128 -416
 19322 1769 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 428


 19323 176a 09       		.uleb128 0x9
 19324 176b 97000000 		.4byte	0x97
 19325 176f 7B170000 		.4byte	0x177b
 19326 1773 21       		.uleb128 0x21
 19327 1774 18010000 		.4byte	0x118
 19328 1778 5D01     		.2byte	0x15d
 19329 177a 00       		.byte	0
 19330 177b 09       		.uleb128 0x9
 19331 177c 97000000 		.4byte	0x97
 19332 1780 8B170000 		.4byte	0x178b
 19333 1784 0A       		.uleb128 0xa
 19334 1785 18010000 		.4byte	0x118
 19335 1789 1F       		.byte	0x1f
 19336 178a 00       		.byte	0
 19337 178b 23       		.uleb128 0x23
 19338 178c 380E0000 		.4byte	.LASF267
 19339 1790 01       		.byte	0x1
 19340 1791 F60B     		.2byte	0xbf6
 19341 1793 00000000 		.4byte	.LFB102
 19342 1797 88000000 		.4byte	.LFE102-.LFB102
 19343 179b 01       		.uleb128 0x1
 19344 179c 9C       		.byte	0x9c
 19345 179d CB170000 		.4byte	0x17cb
 19346 17a1 20       		.uleb128 0x20
 19347 17a2 84040000 		.4byte	.LASF171
 19348 17a6 01       		.byte	0x1
 19349 17a7 F90B     		.2byte	0xbf9
 19350 17a9 CB170000 		.4byte	0x17cb
 19351 17ad 02       		.uleb128 0x2
 19352 17ae 91       		.byte	0x91
 19353 17af 60       		.sleb128 -32
 19354 17b0 24       		.uleb128 0x24
 19355 17b1 6900     		.ascii	"i\000"
 19356 17b3 01       		.byte	0x1
 19357 17b4 FA0B     		.2byte	0xbfa
 19358 17b6 97000000 		.4byte	0x97
 19359 17ba 02       		.uleb128 0x2
 19360 17bb 91       		.byte	0x91
 19361 17bc 6F       		.sleb128 -17
 19362 17bd 24       		.uleb128 0x24
 19363 17be 6A00     		.ascii	"j\000"
 19364 17c0 01       		.byte	0x1
 19365 17c1 FA0B     		.2byte	0xbfa
 19366 17c3 97000000 		.4byte	0x97
 19367 17c7 02       		.uleb128 0x2
 19368 17c8 91       		.byte	0x91
 19369 17c9 6E       		.sleb128 -18
 19370 17ca 00       		.byte	0
 19371 17cb 09       		.uleb128 0x9
 19372 17cc 97000000 		.4byte	0x97
 19373 17d0 DB170000 		.4byte	0x17db
 19374 17d4 0A       		.uleb128 0xa
 19375 17d5 18010000 		.4byte	0x118
 19376 17d9 0D       		.byte	0xd
 19377 17da 00       		.byte	0
 19378 17db 23       		.uleb128 0x23
 19379 17dc 8F0C0000 		.4byte	.LASF268
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 429


 19380 17e0 01       		.byte	0x1
 19381 17e1 0F0C     		.2byte	0xc0f
 19382 17e3 00000000 		.4byte	.LFB103
 19383 17e7 E8000000 		.4byte	.LFE103-.LFB103
 19384 17eb 01       		.uleb128 0x1
 19385 17ec 9C       		.byte	0x9c
 19386 17ed 39180000 		.4byte	0x1839
 19387 17f1 20       		.uleb128 0x20
 19388 17f2 84040000 		.4byte	.LASF171
 19389 17f6 01       		.byte	0x1
 19390 17f7 120C     		.2byte	0xc12
 19391 17f9 39180000 		.4byte	0x1839
 19392 17fd 02       		.uleb128 0x2
 19393 17fe 91       		.byte	0x91
 19394 17ff 54       		.sleb128 -44
 19395 1800 24       		.uleb128 0x24
 19396 1801 6900     		.ascii	"i\000"
 19397 1803 01       		.byte	0x1
 19398 1804 130C     		.2byte	0xc13
 19399 1806 97000000 		.4byte	0x97
 19400 180a 02       		.uleb128 0x2
 19401 180b 91       		.byte	0x91
 19402 180c 6F       		.sleb128 -17
 19403 180d 24       		.uleb128 0x24
 19404 180e 6A00     		.ascii	"j\000"
 19405 1810 01       		.byte	0x1
 19406 1811 130C     		.2byte	0xc13
 19407 1813 97000000 		.4byte	0x97
 19408 1817 02       		.uleb128 0x2
 19409 1818 91       		.byte	0x91
 19410 1819 6E       		.sleb128 -18
 19411 181a 24       		.uleb128 0x24
 19412 181b 69647800 		.ascii	"idx\000"
 19413 181f 01       		.byte	0x1
 19414 1820 130C     		.2byte	0xc13
 19415 1822 97000000 		.4byte	0x97
 19416 1826 02       		.uleb128 0x2
 19417 1827 91       		.byte	0x91
 19418 1828 6D       		.sleb128 -19
 19419 1829 20       		.uleb128 0x20
 19420 182a 60090000 		.4byte	.LASF180
 19421 182e 01       		.byte	0x1
 19422 182f 140C     		.2byte	0xc14
 19423 1831 A3000000 		.4byte	0xa3
 19424 1835 02       		.uleb128 0x2
 19425 1836 91       		.byte	0x91
 19426 1837 52       		.sleb128 -46
 19427 1838 00       		.byte	0
 19428 1839 09       		.uleb128 0x9
 19429 183a 97000000 		.4byte	0x97
 19430 183e 49180000 		.4byte	0x1849
 19431 1842 0A       		.uleb128 0xa
 19432 1843 18010000 		.4byte	0x118
 19433 1847 15       		.byte	0x15
 19434 1848 00       		.byte	0
 19435 1849 23       		.uleb128 0x23
 19436 184a 39020000 		.4byte	.LASF269
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 430


 19437 184e 01       		.byte	0x1
 19438 184f 2D0C     		.2byte	0xc2d
 19439 1851 00000000 		.4byte	.LFB104
 19440 1855 5C000000 		.4byte	.LFE104-.LFB104
 19441 1859 01       		.uleb128 0x1
 19442 185a 9C       		.byte	0x9c
 19443 185b 7C180000 		.4byte	0x187c
 19444 185f 20       		.uleb128 0x20
 19445 1860 84040000 		.4byte	.LASF171
 19446 1864 01       		.byte	0x1
 19447 1865 300C     		.2byte	0xc30
 19448 1867 7C180000 		.4byte	0x187c
 19449 186b 02       		.uleb128 0x2
 19450 186c 91       		.byte	0x91
 19451 186d 68       		.sleb128 -24
 19452 186e 24       		.uleb128 0x24
 19453 186f 6900     		.ascii	"i\000"
 19454 1871 01       		.byte	0x1
 19455 1872 310C     		.2byte	0xc31
 19456 1874 97000000 		.4byte	0x97
 19457 1878 02       		.uleb128 0x2
 19458 1879 91       		.byte	0x91
 19459 187a 77       		.sleb128 -9
 19460 187b 00       		.byte	0
 19461 187c 09       		.uleb128 0x9
 19462 187d 97000000 		.4byte	0x97
 19463 1881 8C180000 		.4byte	0x188c
 19464 1885 0A       		.uleb128 0xa
 19465 1886 18010000 		.4byte	0x118
 19466 188a 0E       		.byte	0xe
 19467 188b 00       		.byte	0
 19468 188c 23       		.uleb128 0x23
 19469 188d 66020000 		.4byte	.LASF270
 19470 1891 01       		.byte	0x1
 19471 1892 440C     		.2byte	0xc44
 19472 1894 00000000 		.4byte	.LFB105
 19473 1898 C0000000 		.4byte	.LFE105-.LFB105
 19474 189c 01       		.uleb128 0x1
 19475 189d 9C       		.byte	0x9c
 19476 189e DD180000 		.4byte	0x18dd
 19477 18a2 20       		.uleb128 0x20
 19478 18a3 84040000 		.4byte	.LASF171
 19479 18a7 01       		.byte	0x1
 19480 18a8 470C     		.2byte	0xc47
 19481 18aa DD180000 		.4byte	0x18dd
 19482 18ae 02       		.uleb128 0x2
 19483 18af 91       		.byte	0x91
 19484 18b0 54       		.sleb128 -44
 19485 18b1 24       		.uleb128 0x24
 19486 18b2 6900     		.ascii	"i\000"
 19487 18b4 01       		.byte	0x1
 19488 18b5 480C     		.2byte	0xc48
 19489 18b7 97000000 		.4byte	0x97
 19490 18bb 02       		.uleb128 0x2
 19491 18bc 91       		.byte	0x91
 19492 18bd 6F       		.sleb128 -17
 19493 18be 24       		.uleb128 0x24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 431


 19494 18bf 69647800 		.ascii	"idx\000"
 19495 18c3 01       		.byte	0x1
 19496 18c4 480C     		.2byte	0xc48
 19497 18c6 97000000 		.4byte	0x97
 19498 18ca 02       		.uleb128 0x2
 19499 18cb 91       		.byte	0x91
 19500 18cc 6E       		.sleb128 -18
 19501 18cd 20       		.uleb128 0x20
 19502 18ce 540D0000 		.4byte	.LASF179
 19503 18d2 01       		.byte	0x1
 19504 18d3 490C     		.2byte	0xc49
 19505 18d5 C7000000 		.4byte	0xc7
 19506 18d9 02       		.uleb128 0x2
 19507 18da 91       		.byte	0x91
 19508 18db 52       		.sleb128 -46
 19509 18dc 00       		.byte	0
 19510 18dd 09       		.uleb128 0x9
 19511 18de 97000000 		.4byte	0x97
 19512 18e2 ED180000 		.4byte	0x18ed
 19513 18e6 0A       		.uleb128 0xa
 19514 18e7 18010000 		.4byte	0x118
 19515 18eb 19       		.byte	0x19
 19516 18ec 00       		.byte	0
 19517 18ed 2A       		.uleb128 0x2a
 19518 18ee 850D0000 		.4byte	.LASF271
 19519 18f2 09       		.byte	0x9
 19520 18f3 1207     		.2byte	0x712
 19521 18f5 F9180000 		.4byte	0x18f9
 19522 18f9 06       		.uleb128 0x6
 19523 18fa 81000000 		.4byte	0x81
 19524 18fe 2A       		.uleb128 0x2a
 19525 18ff 150F0000 		.4byte	.LASF272
 19526 1903 08       		.byte	0x8
 19527 1904 6101     		.2byte	0x161
 19528 1906 F4020000 		.4byte	0x2f4
 19529 190a 2A       		.uleb128 0x2a
 19530 190b 3D030000 		.4byte	.LASF273
 19531 190f 08       		.byte	0x8
 19532 1910 6101     		.2byte	0x161
 19533 1912 F4020000 		.4byte	0x2f4
 19534 1916 2A       		.uleb128 0x2a
 19535 1917 EA090000 		.4byte	.LASF274
 19536 191b 08       		.byte	0x8
 19537 191c 6101     		.2byte	0x161
 19538 191e F4020000 		.4byte	0x2f4
 19539 1922 2A       		.uleb128 0x2a
 19540 1923 18050000 		.4byte	.LASF275
 19541 1927 08       		.byte	0x8
 19542 1928 6201     		.2byte	0x162
 19543 192a 31030000 		.4byte	0x331
 19544 192e 2A       		.uleb128 0x2a
 19545 192f 530F0000 		.4byte	.LASF276
 19546 1933 08       		.byte	0x8
 19547 1934 6201     		.2byte	0x162
 19548 1936 31030000 		.4byte	0x331
 19549 193a 2A       		.uleb128 0x2a
 19550 193b 51000000 		.4byte	.LASF277
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 432


 19551 193f 08       		.byte	0x8
 19552 1940 6301     		.2byte	0x163
 19553 1942 DE030000 		.4byte	0x3de
 19554 1946 2A       		.uleb128 0x2a
 19555 1947 740C0000 		.4byte	.LASF278
 19556 194b 08       		.byte	0x8
 19557 194c 6401     		.2byte	0x164
 19558 194e 2B040000 		.4byte	0x42b
 19559 1952 2A       		.uleb128 0x2a
 19560 1953 56080000 		.4byte	.LASF279
 19561 1957 08       		.byte	0x8
 19562 1958 6401     		.2byte	0x164
 19563 195a 2B040000 		.4byte	0x42b
 19564 195e 2A       		.uleb128 0x2a
 19565 195f 8E070000 		.4byte	.LASF280
 19566 1963 08       		.byte	0x8
 19567 1964 6501     		.2byte	0x165
 19568 1966 D4080000 		.4byte	0x8d4
 19569 196a 2A       		.uleb128 0x2a
 19570 196b E2010000 		.4byte	.LASF281
 19571 196f 08       		.byte	0x8
 19572 1970 6A01     		.2byte	0x16a
 19573 1972 A3000000 		.4byte	0xa3
 19574 1976 2A       		.uleb128 0x2a
 19575 1977 0B0B0000 		.4byte	.LASF282
 19576 197b 08       		.byte	0x8
 19577 197c 6B01     		.2byte	0x16b
 19578 197e A3000000 		.4byte	0xa3
 19579 1982 2A       		.uleb128 0x2a
 19580 1983 3D0B0000 		.4byte	.LASF283
 19581 1987 08       		.byte	0x8
 19582 1988 6E01     		.2byte	0x16e
 19583 198a AE030000 		.4byte	0x3ae
 19584 198e 2A       		.uleb128 0x2a
 19585 198f 1C0E0000 		.4byte	.LASF284
 19586 1993 08       		.byte	0x8
 19587 1994 6F01     		.2byte	0x16f
 19588 1996 97000000 		.4byte	0x97
 19589 199a 2A       		.uleb128 0x2a
 19590 199b A50D0000 		.4byte	.LASF285
 19591 199f 08       		.byte	0x8
 19592 19a0 7201     		.2byte	0x172
 19593 19a2 AE030000 		.4byte	0x3ae
 19594 19a6 2A       		.uleb128 0x2a
 19595 19a7 2A080000 		.4byte	.LASF286
 19596 19ab 08       		.byte	0x8
 19597 19ac 7901     		.2byte	0x179
 19598 19ae 97000000 		.4byte	0x97
 19599 19b2 2A       		.uleb128 0x2a
 19600 19b3 EF070000 		.4byte	.LASF287
 19601 19b7 08       		.byte	0x8
 19602 19b8 8201     		.2byte	0x182
 19603 19ba 97000000 		.4byte	0x97
 19604 19be 2A       		.uleb128 0x2a
 19605 19bf 84050000 		.4byte	.LASF288
 19606 19c3 08       		.byte	0x8
 19607 19c4 8301     		.2byte	0x183
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 433


 19608 19c6 97000000 		.4byte	0x97
 19609 19ca 09       		.uleb128 0x9
 19610 19cb C7000000 		.4byte	0xc7
 19611 19cf DA190000 		.4byte	0x19da
 19612 19d3 0A       		.uleb128 0xa
 19613 19d4 18010000 		.4byte	0x118
 19614 19d8 0B       		.byte	0xb
 19615 19d9 00       		.byte	0
 19616 19da 2A       		.uleb128 0x2a
 19617 19db 22030000 		.4byte	.LASF289
 19618 19df 08       		.byte	0x8
 19619 19e0 8601     		.2byte	0x186
 19620 19e2 CA190000 		.4byte	0x19ca
 19621 19e6 2A       		.uleb128 0x2a
 19622 19e7 210F0000 		.4byte	.LASF290
 19623 19eb 08       		.byte	0x8
 19624 19ec 8701     		.2byte	0x187
 19625 19ee 97000000 		.4byte	0x97
 19626 19f2 09       		.uleb128 0x9
 19627 19f3 AF000000 		.4byte	0xaf
 19628 19f7 021A0000 		.4byte	0x1a02
 19629 19fb 0A       		.uleb128 0xa
 19630 19fc 18010000 		.4byte	0x118
 19631 1a00 04       		.byte	0x4
 19632 1a01 00       		.byte	0
 19633 1a02 2A       		.uleb128 0x2a
 19634 1a03 29050000 		.4byte	.LASF291
 19635 1a07 08       		.byte	0x8
 19636 1a08 8D01     		.2byte	0x18d
 19637 1a0a F2190000 		.4byte	0x19f2
 19638 1a0e 2A       		.uleb128 0x2a
 19639 1a0f D70B0000 		.4byte	.LASF292
 19640 1a13 08       		.byte	0x8
 19641 1a14 8E01     		.2byte	0x18e
 19642 1a16 48080000 		.4byte	0x848
 19643 1a1a 09       		.uleb128 0x9
 19644 1a1b A3000000 		.4byte	0xa3
 19645 1a1f 301A0000 		.4byte	0x1a30
 19646 1a23 0A       		.uleb128 0xa
 19647 1a24 18010000 		.4byte	0x118
 19648 1a28 01       		.byte	0x1
 19649 1a29 0A       		.uleb128 0xa
 19650 1a2a 18010000 		.4byte	0x118
 19651 1a2e 04       		.byte	0x4
 19652 1a2f 00       		.byte	0
 19653 1a30 2A       		.uleb128 0x2a
 19654 1a31 2A0E0000 		.4byte	.LASF293
 19655 1a35 08       		.byte	0x8
 19656 1a36 8F01     		.2byte	0x18f
 19657 1a38 1A1A0000 		.4byte	0x1a1a
 19658 1a3c 2A       		.uleb128 0x2a
 19659 1a3d 90040000 		.4byte	.LASF294
 19660 1a41 08       		.byte	0x8
 19661 1a42 9601     		.2byte	0x196
 19662 1a44 EE020000 		.4byte	0x2ee
 19663 1a48 2A       		.uleb128 0x2a
 19664 1a49 DB0C0000 		.4byte	.LASF295
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 434


 19665 1a4d 08       		.byte	0x8
 19666 1a4e 9901     		.2byte	0x199
 19667 1a50 97000000 		.4byte	0x97
 19668 1a54 09       		.uleb128 0x9
 19669 1a55 97000000 		.4byte	0x97
 19670 1a59 641A0000 		.4byte	0x1a64
 19671 1a5d 0A       		.uleb128 0xa
 19672 1a5e 18010000 		.4byte	0x118
 19673 1a62 04       		.byte	0x4
 19674 1a63 00       		.byte	0
 19675 1a64 2A       		.uleb128 0x2a
 19676 1a65 EB0C0000 		.4byte	.LASF296
 19677 1a69 08       		.byte	0x8
 19678 1a6a 9A01     		.2byte	0x19a
 19679 1a6c 541A0000 		.4byte	0x1a54
 19680 1a70 2A       		.uleb128 0x2a
 19681 1a71 760D0000 		.4byte	.LASF297
 19682 1a75 08       		.byte	0x8
 19683 1a76 9B01     		.2byte	0x19b
 19684 1a78 73000000 		.4byte	0x73
 19685 1a7c 09       		.uleb128 0x9
 19686 1a7d 73000000 		.4byte	0x73
 19687 1a81 8C1A0000 		.4byte	0x1a8c
 19688 1a85 0A       		.uleb128 0xa
 19689 1a86 18010000 		.4byte	0x118
 19690 1a8a 04       		.byte	0x4
 19691 1a8b 00       		.byte	0
 19692 1a8c 2A       		.uleb128 0x2a
 19693 1a8d 00030000 		.4byte	.LASF298
 19694 1a91 08       		.byte	0x8
 19695 1a92 9C01     		.2byte	0x19c
 19696 1a94 7C1A0000 		.4byte	0x1a7c
 19697 1a98 09       		.uleb128 0x9
 19698 1a99 58080000 		.4byte	0x858
 19699 1a9d A81A0000 		.4byte	0x1aa8
 19700 1aa1 0A       		.uleb128 0xa
 19701 1aa2 18010000 		.4byte	0x118
 19702 1aa6 04       		.byte	0x4
 19703 1aa7 00       		.byte	0
 19704 1aa8 2A       		.uleb128 0x2a
 19705 1aa9 67050000 		.4byte	.LASF299
 19706 1aad 08       		.byte	0x8
 19707 1aae 9D01     		.2byte	0x19d
 19708 1ab0 981A0000 		.4byte	0x1a98
 19709 1ab4 09       		.uleb128 0x9
 19710 1ab5 97000000 		.4byte	0x97
 19711 1ab9 CA1A0000 		.4byte	0x1aca
 19712 1abd 0A       		.uleb128 0xa
 19713 1abe 18010000 		.4byte	0x118
 19714 1ac2 04       		.byte	0x4
 19715 1ac3 0A       		.uleb128 0xa
 19716 1ac4 18010000 		.4byte	0x118
 19717 1ac8 02       		.byte	0x2
 19718 1ac9 00       		.byte	0
 19719 1aca 2A       		.uleb128 0x2a
 19720 1acb 99080000 		.4byte	.LASF300
 19721 1acf 08       		.byte	0x8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 435


 19722 1ad0 A101     		.2byte	0x1a1
 19723 1ad2 B41A0000 		.4byte	0x1ab4
 19724 1ad6 2B       		.uleb128 0x2b
 19725 1ad7 5E0D0000 		.4byte	.LASF301
 19726 1adb 01       		.byte	0x1
 19727 1adc 33       		.byte	0x33
 19728 1add E71A0000 		.4byte	0x1ae7
 19729 1ae1 05       		.uleb128 0x5
 19730 1ae2 03       		.byte	0x3
 19731 1ae3 00000000 		.4byte	EEPROM_ADDR
 19732 1ae7 07       		.uleb128 0x7
 19733 1ae8 04       		.byte	0x4
 19734 1ae9 00010000 		.4byte	0x100
 19735 1aed 00       		.byte	0
 19736              		.section	.debug_abbrev,"",%progbits
 19737              	.Ldebug_abbrev0:
 19738 0000 01       		.uleb128 0x1
 19739 0001 11       		.uleb128 0x11
 19740 0002 01       		.byte	0x1
 19741 0003 25       		.uleb128 0x25
 19742 0004 0E       		.uleb128 0xe
 19743 0005 13       		.uleb128 0x13
 19744 0006 0B       		.uleb128 0xb
 19745 0007 03       		.uleb128 0x3
 19746 0008 0E       		.uleb128 0xe
 19747 0009 1B       		.uleb128 0x1b
 19748 000a 0E       		.uleb128 0xe
 19749 000b 55       		.uleb128 0x55
 19750 000c 17       		.uleb128 0x17
 19751 000d 11       		.uleb128 0x11
 19752 000e 01       		.uleb128 0x1
 19753 000f 10       		.uleb128 0x10
 19754 0010 17       		.uleb128 0x17
 19755 0011 00       		.byte	0
 19756 0012 00       		.byte	0
 19757 0013 02       		.uleb128 0x2
 19758 0014 24       		.uleb128 0x24
 19759 0015 00       		.byte	0
 19760 0016 0B       		.uleb128 0xb
 19761 0017 0B       		.uleb128 0xb
 19762 0018 3E       		.uleb128 0x3e
 19763 0019 0B       		.uleb128 0xb
 19764 001a 03       		.uleb128 0x3
 19765 001b 0E       		.uleb128 0xe
 19766 001c 00       		.byte	0
 19767 001d 00       		.byte	0
 19768 001e 03       		.uleb128 0x3
 19769 001f 16       		.uleb128 0x16
 19770 0020 00       		.byte	0
 19771 0021 03       		.uleb128 0x3
 19772 0022 0E       		.uleb128 0xe
 19773 0023 3A       		.uleb128 0x3a
 19774 0024 0B       		.uleb128 0xb
 19775 0025 3B       		.uleb128 0x3b
 19776 0026 0B       		.uleb128 0xb
 19777 0027 49       		.uleb128 0x49
 19778 0028 13       		.uleb128 0x13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 436


 19779 0029 00       		.byte	0
 19780 002a 00       		.byte	0
 19781 002b 04       		.uleb128 0x4
 19782 002c 24       		.uleb128 0x24
 19783 002d 00       		.byte	0
 19784 002e 0B       		.uleb128 0xb
 19785 002f 0B       		.uleb128 0xb
 19786 0030 3E       		.uleb128 0x3e
 19787 0031 0B       		.uleb128 0xb
 19788 0032 03       		.uleb128 0x3
 19789 0033 08       		.uleb128 0x8
 19790 0034 00       		.byte	0
 19791 0035 00       		.byte	0
 19792 0036 05       		.uleb128 0x5
 19793 0037 16       		.uleb128 0x16
 19794 0038 00       		.byte	0
 19795 0039 03       		.uleb128 0x3
 19796 003a 0E       		.uleb128 0xe
 19797 003b 3A       		.uleb128 0x3a
 19798 003c 0B       		.uleb128 0xb
 19799 003d 3B       		.uleb128 0x3b
 19800 003e 05       		.uleb128 0x5
 19801 003f 49       		.uleb128 0x49
 19802 0040 13       		.uleb128 0x13
 19803 0041 00       		.byte	0
 19804 0042 00       		.byte	0
 19805 0043 06       		.uleb128 0x6
 19806 0044 35       		.uleb128 0x35
 19807 0045 00       		.byte	0
 19808 0046 49       		.uleb128 0x49
 19809 0047 13       		.uleb128 0x13
 19810 0048 00       		.byte	0
 19811 0049 00       		.byte	0
 19812 004a 07       		.uleb128 0x7
 19813 004b 0F       		.uleb128 0xf
 19814 004c 00       		.byte	0
 19815 004d 0B       		.uleb128 0xb
 19816 004e 0B       		.uleb128 0xb
 19817 004f 49       		.uleb128 0x49
 19818 0050 13       		.uleb128 0x13
 19819 0051 00       		.byte	0
 19820 0052 00       		.byte	0
 19821 0053 08       		.uleb128 0x8
 19822 0054 26       		.uleb128 0x26
 19823 0055 00       		.byte	0
 19824 0056 49       		.uleb128 0x49
 19825 0057 13       		.uleb128 0x13
 19826 0058 00       		.byte	0
 19827 0059 00       		.byte	0
 19828 005a 09       		.uleb128 0x9
 19829 005b 01       		.uleb128 0x1
 19830 005c 01       		.byte	0x1
 19831 005d 49       		.uleb128 0x49
 19832 005e 13       		.uleb128 0x13
 19833 005f 01       		.uleb128 0x1
 19834 0060 13       		.uleb128 0x13
 19835 0061 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 437


 19836 0062 00       		.byte	0
 19837 0063 0A       		.uleb128 0xa
 19838 0064 21       		.uleb128 0x21
 19839 0065 00       		.byte	0
 19840 0066 49       		.uleb128 0x49
 19841 0067 13       		.uleb128 0x13
 19842 0068 2F       		.uleb128 0x2f
 19843 0069 0B       		.uleb128 0xb
 19844 006a 00       		.byte	0
 19845 006b 00       		.byte	0
 19846 006c 0B       		.uleb128 0xb
 19847 006d 04       		.uleb128 0x4
 19848 006e 01       		.byte	0x1
 19849 006f 03       		.uleb128 0x3
 19850 0070 0E       		.uleb128 0xe
 19851 0071 0B       		.uleb128 0xb
 19852 0072 0B       		.uleb128 0xb
 19853 0073 49       		.uleb128 0x49
 19854 0074 13       		.uleb128 0x13
 19855 0075 3A       		.uleb128 0x3a
 19856 0076 0B       		.uleb128 0xb
 19857 0077 3B       		.uleb128 0x3b
 19858 0078 0B       		.uleb128 0xb
 19859 0079 01       		.uleb128 0x1
 19860 007a 13       		.uleb128 0x13
 19861 007b 00       		.byte	0
 19862 007c 00       		.byte	0
 19863 007d 0C       		.uleb128 0xc
 19864 007e 28       		.uleb128 0x28
 19865 007f 00       		.byte	0
 19866 0080 03       		.uleb128 0x3
 19867 0081 0E       		.uleb128 0xe
 19868 0082 1C       		.uleb128 0x1c
 19869 0083 0B       		.uleb128 0xb
 19870 0084 00       		.byte	0
 19871 0085 00       		.byte	0
 19872 0086 0D       		.uleb128 0xd
 19873 0087 13       		.uleb128 0x13
 19874 0088 00       		.byte	0
 19875 0089 03       		.uleb128 0x3
 19876 008a 0E       		.uleb128 0xe
 19877 008b 3C       		.uleb128 0x3c
 19878 008c 19       		.uleb128 0x19
 19879 008d 00       		.byte	0
 19880 008e 00       		.byte	0
 19881 008f 0E       		.uleb128 0xe
 19882 0090 13       		.uleb128 0x13
 19883 0091 01       		.byte	0x1
 19884 0092 03       		.uleb128 0x3
 19885 0093 0E       		.uleb128 0xe
 19886 0094 0B       		.uleb128 0xb
 19887 0095 0B       		.uleb128 0xb
 19888 0096 3A       		.uleb128 0x3a
 19889 0097 0B       		.uleb128 0xb
 19890 0098 3B       		.uleb128 0x3b
 19891 0099 0B       		.uleb128 0xb
 19892 009a 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 438


 19893 009b 13       		.uleb128 0x13
 19894 009c 00       		.byte	0
 19895 009d 00       		.byte	0
 19896 009e 0F       		.uleb128 0xf
 19897 009f 0D       		.uleb128 0xd
 19898 00a0 00       		.byte	0
 19899 00a1 03       		.uleb128 0x3
 19900 00a2 08       		.uleb128 0x8
 19901 00a3 3A       		.uleb128 0x3a
 19902 00a4 0B       		.uleb128 0xb
 19903 00a5 3B       		.uleb128 0x3b
 19904 00a6 0B       		.uleb128 0xb
 19905 00a7 49       		.uleb128 0x49
 19906 00a8 13       		.uleb128 0x13
 19907 00a9 38       		.uleb128 0x38
 19908 00aa 0B       		.uleb128 0xb
 19909 00ab 00       		.byte	0
 19910 00ac 00       		.byte	0
 19911 00ad 10       		.uleb128 0x10
 19912 00ae 0D       		.uleb128 0xd
 19913 00af 00       		.byte	0
 19914 00b0 03       		.uleb128 0x3
 19915 00b1 0E       		.uleb128 0xe
 19916 00b2 3A       		.uleb128 0x3a
 19917 00b3 0B       		.uleb128 0xb
 19918 00b4 3B       		.uleb128 0x3b
 19919 00b5 0B       		.uleb128 0xb
 19920 00b6 49       		.uleb128 0x49
 19921 00b7 13       		.uleb128 0x13
 19922 00b8 38       		.uleb128 0x38
 19923 00b9 0B       		.uleb128 0xb
 19924 00ba 00       		.byte	0
 19925 00bb 00       		.byte	0
 19926 00bc 11       		.uleb128 0x11
 19927 00bd 13       		.uleb128 0x13
 19928 00be 01       		.byte	0x1
 19929 00bf 03       		.uleb128 0x3
 19930 00c0 0E       		.uleb128 0xe
 19931 00c1 0B       		.uleb128 0xb
 19932 00c2 05       		.uleb128 0x5
 19933 00c3 3A       		.uleb128 0x3a
 19934 00c4 0B       		.uleb128 0xb
 19935 00c5 3B       		.uleb128 0x3b
 19936 00c6 0B       		.uleb128 0xb
 19937 00c7 01       		.uleb128 0x1
 19938 00c8 13       		.uleb128 0x13
 19939 00c9 00       		.byte	0
 19940 00ca 00       		.byte	0
 19941 00cb 12       		.uleb128 0x12
 19942 00cc 0D       		.uleb128 0xd
 19943 00cd 00       		.byte	0
 19944 00ce 03       		.uleb128 0x3
 19945 00cf 0E       		.uleb128 0xe
 19946 00d0 3A       		.uleb128 0x3a
 19947 00d1 0B       		.uleb128 0xb
 19948 00d2 3B       		.uleb128 0x3b
 19949 00d3 05       		.uleb128 0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 439


 19950 00d4 49       		.uleb128 0x49
 19951 00d5 13       		.uleb128 0x13
 19952 00d6 38       		.uleb128 0x38
 19953 00d7 0B       		.uleb128 0xb
 19954 00d8 00       		.byte	0
 19955 00d9 00       		.byte	0
 19956 00da 13       		.uleb128 0x13
 19957 00db 0D       		.uleb128 0xd
 19958 00dc 00       		.byte	0
 19959 00dd 03       		.uleb128 0x3
 19960 00de 0E       		.uleb128 0xe
 19961 00df 3A       		.uleb128 0x3a
 19962 00e0 0B       		.uleb128 0xb
 19963 00e1 3B       		.uleb128 0x3b
 19964 00e2 05       		.uleb128 0x5
 19965 00e3 49       		.uleb128 0x49
 19966 00e4 13       		.uleb128 0x13
 19967 00e5 38       		.uleb128 0x38
 19968 00e6 05       		.uleb128 0x5
 19969 00e7 00       		.byte	0
 19970 00e8 00       		.byte	0
 19971 00e9 14       		.uleb128 0x14
 19972 00ea 13       		.uleb128 0x13
 19973 00eb 01       		.byte	0x1
 19974 00ec 03       		.uleb128 0x3
 19975 00ed 0E       		.uleb128 0xe
 19976 00ee 0B       		.uleb128 0xb
 19977 00ef 0B       		.uleb128 0xb
 19978 00f0 3A       		.uleb128 0x3a
 19979 00f1 0B       		.uleb128 0xb
 19980 00f2 3B       		.uleb128 0x3b
 19981 00f3 05       		.uleb128 0x5
 19982 00f4 01       		.uleb128 0x1
 19983 00f5 13       		.uleb128 0x13
 19984 00f6 00       		.byte	0
 19985 00f7 00       		.byte	0
 19986 00f8 15       		.uleb128 0x15
 19987 00f9 2E       		.uleb128 0x2e
 19988 00fa 01       		.byte	0x1
 19989 00fb 03       		.uleb128 0x3
 19990 00fc 0E       		.uleb128 0xe
 19991 00fd 3A       		.uleb128 0x3a
 19992 00fe 0B       		.uleb128 0xb
 19993 00ff 3B       		.uleb128 0x3b
 19994 0100 05       		.uleb128 0x5
 19995 0101 27       		.uleb128 0x27
 19996 0102 19       		.uleb128 0x19
 19997 0103 49       		.uleb128 0x49
 19998 0104 13       		.uleb128 0x13
 19999 0105 20       		.uleb128 0x20
 20000 0106 0B       		.uleb128 0xb
 20001 0107 01       		.uleb128 0x1
 20002 0108 13       		.uleb128 0x13
 20003 0109 00       		.byte	0
 20004 010a 00       		.byte	0
 20005 010b 16       		.uleb128 0x16
 20006 010c 05       		.uleb128 0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 440


 20007 010d 00       		.byte	0
 20008 010e 03       		.uleb128 0x3
 20009 010f 0E       		.uleb128 0xe
 20010 0110 3A       		.uleb128 0x3a
 20011 0111 0B       		.uleb128 0xb
 20012 0112 3B       		.uleb128 0x3b
 20013 0113 05       		.uleb128 0x5
 20014 0114 49       		.uleb128 0x49
 20015 0115 13       		.uleb128 0x13
 20016 0116 00       		.byte	0
 20017 0117 00       		.byte	0
 20018 0118 17       		.uleb128 0x17
 20019 0119 34       		.uleb128 0x34
 20020 011a 00       		.byte	0
 20021 011b 03       		.uleb128 0x3
 20022 011c 0E       		.uleb128 0xe
 20023 011d 3A       		.uleb128 0x3a
 20024 011e 0B       		.uleb128 0xb
 20025 011f 3B       		.uleb128 0x3b
 20026 0120 05       		.uleb128 0x5
 20027 0121 49       		.uleb128 0x49
 20028 0122 13       		.uleb128 0x13
 20029 0123 00       		.byte	0
 20030 0124 00       		.byte	0
 20031 0125 18       		.uleb128 0x18
 20032 0126 2E       		.uleb128 0x2e
 20033 0127 01       		.byte	0x1
 20034 0128 3F       		.uleb128 0x3f
 20035 0129 19       		.uleb128 0x19
 20036 012a 03       		.uleb128 0x3
 20037 012b 0E       		.uleb128 0xe
 20038 012c 3A       		.uleb128 0x3a
 20039 012d 0B       		.uleb128 0xb
 20040 012e 3B       		.uleb128 0x3b
 20041 012f 0B       		.uleb128 0xb
 20042 0130 27       		.uleb128 0x27
 20043 0131 19       		.uleb128 0x19
 20044 0132 11       		.uleb128 0x11
 20045 0133 01       		.uleb128 0x1
 20046 0134 12       		.uleb128 0x12
 20047 0135 06       		.uleb128 0x6
 20048 0136 40       		.uleb128 0x40
 20049 0137 18       		.uleb128 0x18
 20050 0138 9642     		.uleb128 0x2116
 20051 013a 19       		.uleb128 0x19
 20052 013b 01       		.uleb128 0x1
 20053 013c 13       		.uleb128 0x13
 20054 013d 00       		.byte	0
 20055 013e 00       		.byte	0
 20056 013f 19       		.uleb128 0x19
 20057 0140 34       		.uleb128 0x34
 20058 0141 00       		.byte	0
 20059 0142 03       		.uleb128 0x3
 20060 0143 0E       		.uleb128 0xe
 20061 0144 3A       		.uleb128 0x3a
 20062 0145 0B       		.uleb128 0xb
 20063 0146 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 441


 20064 0147 0B       		.uleb128 0xb
 20065 0148 49       		.uleb128 0x49
 20066 0149 13       		.uleb128 0x13
 20067 014a 02       		.uleb128 0x2
 20068 014b 18       		.uleb128 0x18
 20069 014c 00       		.byte	0
 20070 014d 00       		.byte	0
 20071 014e 1A       		.uleb128 0x1a
 20072 014f 1D       		.uleb128 0x1d
 20073 0150 01       		.byte	0x1
 20074 0151 31       		.uleb128 0x31
 20075 0152 13       		.uleb128 0x13
 20076 0153 11       		.uleb128 0x11
 20077 0154 01       		.uleb128 0x1
 20078 0155 12       		.uleb128 0x12
 20079 0156 06       		.uleb128 0x6
 20080 0157 58       		.uleb128 0x58
 20081 0158 0B       		.uleb128 0xb
 20082 0159 59       		.uleb128 0x59
 20083 015a 0B       		.uleb128 0xb
 20084 015b 01       		.uleb128 0x1
 20085 015c 13       		.uleb128 0x13
 20086 015d 00       		.byte	0
 20087 015e 00       		.byte	0
 20088 015f 1B       		.uleb128 0x1b
 20089 0160 05       		.uleb128 0x5
 20090 0161 00       		.byte	0
 20091 0162 31       		.uleb128 0x31
 20092 0163 13       		.uleb128 0x13
 20093 0164 02       		.uleb128 0x2
 20094 0165 18       		.uleb128 0x18
 20095 0166 00       		.byte	0
 20096 0167 00       		.byte	0
 20097 0168 1C       		.uleb128 0x1c
 20098 0169 0B       		.uleb128 0xb
 20099 016a 01       		.byte	0x1
 20100 016b 11       		.uleb128 0x11
 20101 016c 01       		.uleb128 0x1
 20102 016d 12       		.uleb128 0x12
 20103 016e 06       		.uleb128 0x6
 20104 016f 00       		.byte	0
 20105 0170 00       		.byte	0
 20106 0171 1D       		.uleb128 0x1d
 20107 0172 34       		.uleb128 0x34
 20108 0173 00       		.byte	0
 20109 0174 31       		.uleb128 0x31
 20110 0175 13       		.uleb128 0x13
 20111 0176 02       		.uleb128 0x2
 20112 0177 18       		.uleb128 0x18
 20113 0178 00       		.byte	0
 20114 0179 00       		.byte	0
 20115 017a 1E       		.uleb128 0x1e
 20116 017b 1D       		.uleb128 0x1d
 20117 017c 01       		.byte	0x1
 20118 017d 31       		.uleb128 0x31
 20119 017e 13       		.uleb128 0x13
 20120 017f 11       		.uleb128 0x11
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 442


 20121 0180 01       		.uleb128 0x1
 20122 0181 12       		.uleb128 0x12
 20123 0182 06       		.uleb128 0x6
 20124 0183 58       		.uleb128 0x58
 20125 0184 0B       		.uleb128 0xb
 20126 0185 59       		.uleb128 0x59
 20127 0186 05       		.uleb128 0x5
 20128 0187 00       		.byte	0
 20129 0188 00       		.byte	0
 20130 0189 1F       		.uleb128 0x1f
 20131 018a 2E       		.uleb128 0x2e
 20132 018b 01       		.byte	0x1
 20133 018c 3F       		.uleb128 0x3f
 20134 018d 19       		.uleb128 0x19
 20135 018e 03       		.uleb128 0x3
 20136 018f 0E       		.uleb128 0xe
 20137 0190 3A       		.uleb128 0x3a
 20138 0191 0B       		.uleb128 0xb
 20139 0192 3B       		.uleb128 0x3b
 20140 0193 05       		.uleb128 0x5
 20141 0194 27       		.uleb128 0x27
 20142 0195 19       		.uleb128 0x19
 20143 0196 11       		.uleb128 0x11
 20144 0197 01       		.uleb128 0x1
 20145 0198 12       		.uleb128 0x12
 20146 0199 06       		.uleb128 0x6
 20147 019a 40       		.uleb128 0x40
 20148 019b 18       		.uleb128 0x18
 20149 019c 9642     		.uleb128 0x2116
 20150 019e 19       		.uleb128 0x19
 20151 019f 01       		.uleb128 0x1
 20152 01a0 13       		.uleb128 0x13
 20153 01a1 00       		.byte	0
 20154 01a2 00       		.byte	0
 20155 01a3 20       		.uleb128 0x20
 20156 01a4 34       		.uleb128 0x34
 20157 01a5 00       		.byte	0
 20158 01a6 03       		.uleb128 0x3
 20159 01a7 0E       		.uleb128 0xe
 20160 01a8 3A       		.uleb128 0x3a
 20161 01a9 0B       		.uleb128 0xb
 20162 01aa 3B       		.uleb128 0x3b
 20163 01ab 05       		.uleb128 0x5
 20164 01ac 49       		.uleb128 0x49
 20165 01ad 13       		.uleb128 0x13
 20166 01ae 02       		.uleb128 0x2
 20167 01af 18       		.uleb128 0x18
 20168 01b0 00       		.byte	0
 20169 01b1 00       		.byte	0
 20170 01b2 21       		.uleb128 0x21
 20171 01b3 21       		.uleb128 0x21
 20172 01b4 00       		.byte	0
 20173 01b5 49       		.uleb128 0x49
 20174 01b6 13       		.uleb128 0x13
 20175 01b7 2F       		.uleb128 0x2f
 20176 01b8 05       		.uleb128 0x5
 20177 01b9 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 443


 20178 01ba 00       		.byte	0
 20179 01bb 22       		.uleb128 0x22
 20180 01bc 05       		.uleb128 0x5
 20181 01bd 00       		.byte	0
 20182 01be 03       		.uleb128 0x3
 20183 01bf 0E       		.uleb128 0xe
 20184 01c0 3A       		.uleb128 0x3a
 20185 01c1 0B       		.uleb128 0xb
 20186 01c2 3B       		.uleb128 0x3b
 20187 01c3 05       		.uleb128 0x5
 20188 01c4 49       		.uleb128 0x49
 20189 01c5 13       		.uleb128 0x13
 20190 01c6 02       		.uleb128 0x2
 20191 01c7 18       		.uleb128 0x18
 20192 01c8 00       		.byte	0
 20193 01c9 00       		.byte	0
 20194 01ca 23       		.uleb128 0x23
 20195 01cb 2E       		.uleb128 0x2e
 20196 01cc 01       		.byte	0x1
 20197 01cd 3F       		.uleb128 0x3f
 20198 01ce 19       		.uleb128 0x19
 20199 01cf 03       		.uleb128 0x3
 20200 01d0 0E       		.uleb128 0xe
 20201 01d1 3A       		.uleb128 0x3a
 20202 01d2 0B       		.uleb128 0xb
 20203 01d3 3B       		.uleb128 0x3b
 20204 01d4 05       		.uleb128 0x5
 20205 01d5 11       		.uleb128 0x11
 20206 01d6 01       		.uleb128 0x1
 20207 01d7 12       		.uleb128 0x12
 20208 01d8 06       		.uleb128 0x6
 20209 01d9 40       		.uleb128 0x40
 20210 01da 18       		.uleb128 0x18
 20211 01db 9642     		.uleb128 0x2116
 20212 01dd 19       		.uleb128 0x19
 20213 01de 01       		.uleb128 0x1
 20214 01df 13       		.uleb128 0x13
 20215 01e0 00       		.byte	0
 20216 01e1 00       		.byte	0
 20217 01e2 24       		.uleb128 0x24
 20218 01e3 34       		.uleb128 0x34
 20219 01e4 00       		.byte	0
 20220 01e5 03       		.uleb128 0x3
 20221 01e6 08       		.uleb128 0x8
 20222 01e7 3A       		.uleb128 0x3a
 20223 01e8 0B       		.uleb128 0xb
 20224 01e9 3B       		.uleb128 0x3b
 20225 01ea 05       		.uleb128 0x5
 20226 01eb 49       		.uleb128 0x49
 20227 01ec 13       		.uleb128 0x13
 20228 01ed 02       		.uleb128 0x2
 20229 01ee 18       		.uleb128 0x18
 20230 01ef 00       		.byte	0
 20231 01f0 00       		.byte	0
 20232 01f1 25       		.uleb128 0x25
 20233 01f2 2E       		.uleb128 0x2e
 20234 01f3 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 444


 20235 01f4 3F       		.uleb128 0x3f
 20236 01f5 19       		.uleb128 0x19
 20237 01f6 03       		.uleb128 0x3
 20238 01f7 0E       		.uleb128 0xe
 20239 01f8 3A       		.uleb128 0x3a
 20240 01f9 0B       		.uleb128 0xb
 20241 01fa 3B       		.uleb128 0x3b
 20242 01fb 05       		.uleb128 0x5
 20243 01fc 27       		.uleb128 0x27
 20244 01fd 19       		.uleb128 0x19
 20245 01fe 49       		.uleb128 0x49
 20246 01ff 13       		.uleb128 0x13
 20247 0200 11       		.uleb128 0x11
 20248 0201 01       		.uleb128 0x1
 20249 0202 12       		.uleb128 0x12
 20250 0203 06       		.uleb128 0x6
 20251 0204 40       		.uleb128 0x40
 20252 0205 18       		.uleb128 0x18
 20253 0206 9742     		.uleb128 0x2117
 20254 0208 19       		.uleb128 0x19
 20255 0209 01       		.uleb128 0x1
 20256 020a 13       		.uleb128 0x13
 20257 020b 00       		.byte	0
 20258 020c 00       		.byte	0
 20259 020d 26       		.uleb128 0x26
 20260 020e 2E       		.uleb128 0x2e
 20261 020f 01       		.byte	0x1
 20262 0210 3F       		.uleb128 0x3f
 20263 0211 19       		.uleb128 0x19
 20264 0212 03       		.uleb128 0x3
 20265 0213 0E       		.uleb128 0xe
 20266 0214 3A       		.uleb128 0x3a
 20267 0215 0B       		.uleb128 0xb
 20268 0216 3B       		.uleb128 0x3b
 20269 0217 05       		.uleb128 0x5
 20270 0218 27       		.uleb128 0x27
 20271 0219 19       		.uleb128 0x19
 20272 021a 49       		.uleb128 0x49
 20273 021b 13       		.uleb128 0x13
 20274 021c 11       		.uleb128 0x11
 20275 021d 01       		.uleb128 0x1
 20276 021e 12       		.uleb128 0x12
 20277 021f 06       		.uleb128 0x6
 20278 0220 40       		.uleb128 0x40
 20279 0221 18       		.uleb128 0x18
 20280 0222 9642     		.uleb128 0x2116
 20281 0224 19       		.uleb128 0x19
 20282 0225 01       		.uleb128 0x1
 20283 0226 13       		.uleb128 0x13
 20284 0227 00       		.byte	0
 20285 0228 00       		.byte	0
 20286 0229 27       		.uleb128 0x27
 20287 022a 2E       		.uleb128 0x2e
 20288 022b 00       		.byte	0
 20289 022c 3F       		.uleb128 0x3f
 20290 022d 19       		.uleb128 0x19
 20291 022e 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 445


 20292 022f 0E       		.uleb128 0xe
 20293 0230 3A       		.uleb128 0x3a
 20294 0231 0B       		.uleb128 0xb
 20295 0232 3B       		.uleb128 0x3b
 20296 0233 05       		.uleb128 0x5
 20297 0234 27       		.uleb128 0x27
 20298 0235 19       		.uleb128 0x19
 20299 0236 11       		.uleb128 0x11
 20300 0237 01       		.uleb128 0x1
 20301 0238 12       		.uleb128 0x12
 20302 0239 06       		.uleb128 0x6
 20303 023a 40       		.uleb128 0x40
 20304 023b 18       		.uleb128 0x18
 20305 023c 9742     		.uleb128 0x2117
 20306 023e 19       		.uleb128 0x19
 20307 023f 00       		.byte	0
 20308 0240 00       		.byte	0
 20309 0241 28       		.uleb128 0x28
 20310 0242 2E       		.uleb128 0x2e
 20311 0243 01       		.byte	0x1
 20312 0244 3F       		.uleb128 0x3f
 20313 0245 19       		.uleb128 0x19
 20314 0246 03       		.uleb128 0x3
 20315 0247 0E       		.uleb128 0xe
 20316 0248 3A       		.uleb128 0x3a
 20317 0249 0B       		.uleb128 0xb
 20318 024a 3B       		.uleb128 0x3b
 20319 024b 05       		.uleb128 0x5
 20320 024c 11       		.uleb128 0x11
 20321 024d 01       		.uleb128 0x1
 20322 024e 12       		.uleb128 0x12
 20323 024f 06       		.uleb128 0x6
 20324 0250 40       		.uleb128 0x40
 20325 0251 18       		.uleb128 0x18
 20326 0252 9742     		.uleb128 0x2117
 20327 0254 19       		.uleb128 0x19
 20328 0255 01       		.uleb128 0x1
 20329 0256 13       		.uleb128 0x13
 20330 0257 00       		.byte	0
 20331 0258 00       		.byte	0
 20332 0259 29       		.uleb128 0x29
 20333 025a 2E       		.uleb128 0x2e
 20334 025b 00       		.byte	0
 20335 025c 3F       		.uleb128 0x3f
 20336 025d 19       		.uleb128 0x19
 20337 025e 03       		.uleb128 0x3
 20338 025f 0E       		.uleb128 0xe
 20339 0260 3A       		.uleb128 0x3a
 20340 0261 0B       		.uleb128 0xb
 20341 0262 3B       		.uleb128 0x3b
 20342 0263 05       		.uleb128 0x5
 20343 0264 11       		.uleb128 0x11
 20344 0265 01       		.uleb128 0x1
 20345 0266 12       		.uleb128 0x12
 20346 0267 06       		.uleb128 0x6
 20347 0268 40       		.uleb128 0x40
 20348 0269 18       		.uleb128 0x18
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 446


 20349 026a 9642     		.uleb128 0x2116
 20350 026c 19       		.uleb128 0x19
 20351 026d 00       		.byte	0
 20352 026e 00       		.byte	0
 20353 026f 2A       		.uleb128 0x2a
 20354 0270 34       		.uleb128 0x34
 20355 0271 00       		.byte	0
 20356 0272 03       		.uleb128 0x3
 20357 0273 0E       		.uleb128 0xe
 20358 0274 3A       		.uleb128 0x3a
 20359 0275 0B       		.uleb128 0xb
 20360 0276 3B       		.uleb128 0x3b
 20361 0277 05       		.uleb128 0x5
 20362 0278 49       		.uleb128 0x49
 20363 0279 13       		.uleb128 0x13
 20364 027a 3F       		.uleb128 0x3f
 20365 027b 19       		.uleb128 0x19
 20366 027c 3C       		.uleb128 0x3c
 20367 027d 19       		.uleb128 0x19
 20368 027e 00       		.byte	0
 20369 027f 00       		.byte	0
 20370 0280 2B       		.uleb128 0x2b
 20371 0281 34       		.uleb128 0x34
 20372 0282 00       		.byte	0
 20373 0283 03       		.uleb128 0x3
 20374 0284 0E       		.uleb128 0xe
 20375 0285 3A       		.uleb128 0x3a
 20376 0286 0B       		.uleb128 0xb
 20377 0287 3B       		.uleb128 0x3b
 20378 0288 0B       		.uleb128 0xb
 20379 0289 49       		.uleb128 0x49
 20380 028a 13       		.uleb128 0x13
 20381 028b 3F       		.uleb128 0x3f
 20382 028c 19       		.uleb128 0x19
 20383 028d 02       		.uleb128 0x2
 20384 028e 18       		.uleb128 0x18
 20385 028f 00       		.byte	0
 20386 0290 00       		.byte	0
 20387 0291 00       		.byte	0
 20388              		.section	.debug_aranges,"",%progbits
 20389 0000 64010000 		.4byte	0x164
 20390 0004 0200     		.2byte	0x2
 20391 0006 00000000 		.4byte	.Ldebug_info0
 20392 000a 04       		.byte	0x4
 20393 000b 00       		.byte	0
 20394 000c 0000     		.2byte	0
 20395 000e 0000     		.2byte	0
 20396 0010 00000000 		.4byte	.LFB64
 20397 0014 DC040000 		.4byte	.LFE64-.LFB64
 20398 0018 00000000 		.4byte	.LFB65
 20399 001c 22000000 		.4byte	.LFE65-.LFB65
 20400 0020 00000000 		.4byte	.LFB66
 20401 0024 70000000 		.4byte	.LFE66-.LFB66
 20402 0028 00000000 		.4byte	.LFB67
 20403 002c 6A190000 		.4byte	.LFE67-.LFB67
 20404 0030 00000000 		.4byte	.LFB68
 20405 0034 BC0B0000 		.4byte	.LFE68-.LFB68
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 447


 20406 0038 00000000 		.4byte	.LFB69
 20407 003c F40D0000 		.4byte	.LFE69-.LFB69
 20408 0040 00000000 		.4byte	.LFB70
 20409 0044 5C000000 		.4byte	.LFE70-.LFB70
 20410 0048 00000000 		.4byte	.LFB71
 20411 004c 5C170000 		.4byte	.LFE71-.LFB71
 20412 0050 00000000 		.4byte	.LFB72
 20413 0054 58030000 		.4byte	.LFE72-.LFB72
 20414 0058 00000000 		.4byte	.LFB73
 20415 005c EC090000 		.4byte	.LFE73-.LFB73
 20416 0060 00000000 		.4byte	.LFB74
 20417 0064 C8000000 		.4byte	.LFE74-.LFB74
 20418 0068 00000000 		.4byte	.LFB75
 20419 006c 30010000 		.4byte	.LFE75-.LFB75
 20420 0070 00000000 		.4byte	.LFB76
 20421 0074 74030000 		.4byte	.LFE76-.LFB76
 20422 0078 00000000 		.4byte	.LFB77
 20423 007c 84000000 		.4byte	.LFE77-.LFB77
 20424 0080 00000000 		.4byte	.LFB78
 20425 0084 88000000 		.4byte	.LFE78-.LFB78
 20426 0088 00000000 		.4byte	.LFB79
 20427 008c 80000000 		.4byte	.LFE79-.LFB79
 20428 0090 00000000 		.4byte	.LFB80
 20429 0094 3E000000 		.4byte	.LFE80-.LFB80
 20430 0098 00000000 		.4byte	.LFB81
 20431 009c 2E000000 		.4byte	.LFE81-.LFB81
 20432 00a0 00000000 		.4byte	.LFB82
 20433 00a4 98000000 		.4byte	.LFE82-.LFB82
 20434 00a8 00000000 		.4byte	.LFB83
 20435 00ac 64000000 		.4byte	.LFE83-.LFB83
 20436 00b0 00000000 		.4byte	.LFB84
 20437 00b4 5C000000 		.4byte	.LFE84-.LFB84
 20438 00b8 00000000 		.4byte	.LFB85
 20439 00bc 7C030000 		.4byte	.LFE85-.LFB85
 20440 00c0 00000000 		.4byte	.LFB86
 20441 00c4 B4000000 		.4byte	.LFE86-.LFB86
 20442 00c8 00000000 		.4byte	.LFB87
 20443 00cc 8C000000 		.4byte	.LFE87-.LFB87
 20444 00d0 00000000 		.4byte	.LFB88
 20445 00d4 90000000 		.4byte	.LFE88-.LFB88
 20446 00d8 00000000 		.4byte	.LFB89
 20447 00dc 8C000000 		.4byte	.LFE89-.LFB89
 20448 00e0 00000000 		.4byte	.LFB90
 20449 00e4 CC000000 		.4byte	.LFE90-.LFB90
 20450 00e8 00000000 		.4byte	.LFB91
 20451 00ec 48000000 		.4byte	.LFE91-.LFB91
 20452 00f0 00000000 		.4byte	.LFB92
 20453 00f4 34000000 		.4byte	.LFE92-.LFB92
 20454 00f8 00000000 		.4byte	.LFB93
 20455 00fc D8000000 		.4byte	.LFE93-.LFB93
 20456 0100 00000000 		.4byte	.LFB94
 20457 0104 78000000 		.4byte	.LFE94-.LFB94
 20458 0108 00000000 		.4byte	.LFB95
 20459 010c 44000000 		.4byte	.LFE95-.LFB95
 20460 0110 00000000 		.4byte	.LFB96
 20461 0114 34000000 		.4byte	.LFE96-.LFB96
 20462 0118 00000000 		.4byte	.LFB97
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 448


 20463 011c 20000000 		.4byte	.LFE97-.LFB97
 20464 0120 00000000 		.4byte	.LFB98
 20465 0124 54000000 		.4byte	.LFE98-.LFB98
 20466 0128 00000000 		.4byte	.LFB99
 20467 012c 70010000 		.4byte	.LFE99-.LFB99
 20468 0130 00000000 		.4byte	.LFB100
 20469 0134 60000000 		.4byte	.LFE100-.LFB100
 20470 0138 00000000 		.4byte	.LFB101
 20471 013c 98050000 		.4byte	.LFE101-.LFB101
 20472 0140 00000000 		.4byte	.LFB102
 20473 0144 88000000 		.4byte	.LFE102-.LFB102
 20474 0148 00000000 		.4byte	.LFB103
 20475 014c E8000000 		.4byte	.LFE103-.LFB103
 20476 0150 00000000 		.4byte	.LFB104
 20477 0154 5C000000 		.4byte	.LFE104-.LFB104
 20478 0158 00000000 		.4byte	.LFB105
 20479 015c C0000000 		.4byte	.LFE105-.LFB105
 20480 0160 00000000 		.4byte	0
 20481 0164 00000000 		.4byte	0
 20482              		.section	.debug_ranges,"",%progbits
 20483              	.Ldebug_ranges0:
 20484 0000 00000000 		.4byte	.LFB64
 20485 0004 DC040000 		.4byte	.LFE64
 20486 0008 00000000 		.4byte	.LFB65
 20487 000c 22000000 		.4byte	.LFE65
 20488 0010 00000000 		.4byte	.LFB66
 20489 0014 70000000 		.4byte	.LFE66
 20490 0018 00000000 		.4byte	.LFB67
 20491 001c 6A190000 		.4byte	.LFE67
 20492 0020 00000000 		.4byte	.LFB68
 20493 0024 BC0B0000 		.4byte	.LFE68
 20494 0028 00000000 		.4byte	.LFB69
 20495 002c F40D0000 		.4byte	.LFE69
 20496 0030 00000000 		.4byte	.LFB70
 20497 0034 5C000000 		.4byte	.LFE70
 20498 0038 00000000 		.4byte	.LFB71
 20499 003c 5C170000 		.4byte	.LFE71
 20500 0040 00000000 		.4byte	.LFB72
 20501 0044 58030000 		.4byte	.LFE72
 20502 0048 00000000 		.4byte	.LFB73
 20503 004c EC090000 		.4byte	.LFE73
 20504 0050 00000000 		.4byte	.LFB74
 20505 0054 C8000000 		.4byte	.LFE74
 20506 0058 00000000 		.4byte	.LFB75
 20507 005c 30010000 		.4byte	.LFE75
 20508 0060 00000000 		.4byte	.LFB76
 20509 0064 74030000 		.4byte	.LFE76
 20510 0068 00000000 		.4byte	.LFB77
 20511 006c 84000000 		.4byte	.LFE77
 20512 0070 00000000 		.4byte	.LFB78
 20513 0074 88000000 		.4byte	.LFE78
 20514 0078 00000000 		.4byte	.LFB79
 20515 007c 80000000 		.4byte	.LFE79
 20516 0080 00000000 		.4byte	.LFB80
 20517 0084 3E000000 		.4byte	.LFE80
 20518 0088 00000000 		.4byte	.LFB81
 20519 008c 2E000000 		.4byte	.LFE81
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 449


 20520 0090 00000000 		.4byte	.LFB82
 20521 0094 98000000 		.4byte	.LFE82
 20522 0098 00000000 		.4byte	.LFB83
 20523 009c 64000000 		.4byte	.LFE83
 20524 00a0 00000000 		.4byte	.LFB84
 20525 00a4 5C000000 		.4byte	.LFE84
 20526 00a8 00000000 		.4byte	.LFB85
 20527 00ac 7C030000 		.4byte	.LFE85
 20528 00b0 00000000 		.4byte	.LFB86
 20529 00b4 B4000000 		.4byte	.LFE86
 20530 00b8 00000000 		.4byte	.LFB87
 20531 00bc 8C000000 		.4byte	.LFE87
 20532 00c0 00000000 		.4byte	.LFB88
 20533 00c4 90000000 		.4byte	.LFE88
 20534 00c8 00000000 		.4byte	.LFB89
 20535 00cc 8C000000 		.4byte	.LFE89
 20536 00d0 00000000 		.4byte	.LFB90
 20537 00d4 CC000000 		.4byte	.LFE90
 20538 00d8 00000000 		.4byte	.LFB91
 20539 00dc 48000000 		.4byte	.LFE91
 20540 00e0 00000000 		.4byte	.LFB92
 20541 00e4 34000000 		.4byte	.LFE92
 20542 00e8 00000000 		.4byte	.LFB93
 20543 00ec D8000000 		.4byte	.LFE93
 20544 00f0 00000000 		.4byte	.LFB94
 20545 00f4 78000000 		.4byte	.LFE94
 20546 00f8 00000000 		.4byte	.LFB95
 20547 00fc 44000000 		.4byte	.LFE95
 20548 0100 00000000 		.4byte	.LFB96
 20549 0104 34000000 		.4byte	.LFE96
 20550 0108 00000000 		.4byte	.LFB97
 20551 010c 20000000 		.4byte	.LFE97
 20552 0110 00000000 		.4byte	.LFB98
 20553 0114 54000000 		.4byte	.LFE98
 20554 0118 00000000 		.4byte	.LFB99
 20555 011c 70010000 		.4byte	.LFE99
 20556 0120 00000000 		.4byte	.LFB100
 20557 0124 60000000 		.4byte	.LFE100
 20558 0128 00000000 		.4byte	.LFB101
 20559 012c 98050000 		.4byte	.LFE101
 20560 0130 00000000 		.4byte	.LFB102
 20561 0134 88000000 		.4byte	.LFE102
 20562 0138 00000000 		.4byte	.LFB103
 20563 013c E8000000 		.4byte	.LFE103
 20564 0140 00000000 		.4byte	.LFB104
 20565 0144 5C000000 		.4byte	.LFE104
 20566 0148 00000000 		.4byte	.LFB105
 20567 014c C0000000 		.4byte	.LFE105
 20568 0150 00000000 		.4byte	0
 20569 0154 00000000 		.4byte	0
 20570              		.section	.debug_line,"",%progbits
 20571              	.Ldebug_line0:
 20572 0000 A9140000 		.section	.debug_str,"MS",%progbits,1
 20572      0200BC01 
 20572      00000201 
 20572      FB0E0D00 
 20572      01010101 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 450


 20573              	.LASF167:
 20574 0000 696E666F 		.ascii	"infoSend\000"
 20574      53656E64 
 20574      00
 20575              	.LASF25:
 20576 0009 73697A65 		.ascii	"sizetype\000"
 20576      74797065 
 20576      00
 20577              	.LASF33:
 20578 0012 434D445F 		.ascii	"CMD_INIT_MEM\000"
 20578      494E4954 
 20578      5F4D454D 
 20578      00
 20579              	.LASF265:
 20580 001f 676C5F63 		.ascii	"gl_c\000"
 20580      00
 20581              	.LASF62:
 20582 0024 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 20582      545F4D4F 
 20582      44455F45 
 20582      4D475F46 
 20582      4346535F 
 20583              	.LASF36:
 20584 003c 434D445F 		.ascii	"CMD_ACTIVATE\000"
 20584      41435449 
 20584      56415445 
 20584      00
 20585              	.LASF11:
 20586 0049 696E7433 		.ascii	"int32_t\000"
 20586      325F7400 
 20587              	.LASF277:
 20588 0051 675F7278 		.ascii	"g_rx\000"
 20588      00
 20589              	.LASF91:
 20590 0056 73745F64 		.ascii	"st_data\000"
 20590      61746100 
 20591              	.LASF241:
 20592 005e 77726974 		.ascii	"writeStatus\000"
 20592      65537461 
 20592      74757300 
 20593              	.LASF15:
 20594 006a 75696E74 		.ascii	"uint32\000"
 20594      333200
 20595              	.LASF256:
 20596 0071 636D645F 		.ascii	"cmd_set_baudrate\000"
 20596      7365745F 
 20596      62617564 
 20596      72617465 
 20596      00
 20597              	.LASF217:
 20598 0082 7370695F 		.ascii	"spi_read_delay_str_len\000"
 20598      72656164 
 20598      5F64656C 
 20598      61795F73 
 20598      74725F6C 
 20599              	.LASF191:
 20600 0099 6F6E5F6F 		.ascii	"on_off_menu\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 451


 20600      66665F6D 
 20600      656E7500 
 20601              	.LASF172:
 20602 00a5 7061636B 		.ascii	"packet_lenght\000"
 20602      65745F6C 
 20602      656E6768 
 20602      7400
 20603              	.LASF221:
 20604 00b3 70726570 		.ascii	"prepare_generic_info\000"
 20604      6172655F 
 20604      67656E65 
 20604      7269635F 
 20604      696E666F 
 20605              	.LASF121:
 20606 00c8 706F735F 		.ascii	"pos_lim_inf\000"
 20606      6C696D5F 
 20606      696E6600 
 20607              	.LASF258:
 20608 00d4 636D645F 		.ascii	"cmd_get_inputs\000"
 20608      6765745F 
 20608      696E7075 
 20608      747300
 20609              	.LASF61:
 20610 00e3 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 20610      545F4D4F 
 20610      44455F45 
 20610      4D475F46 
 20610      43465300 
 20611              	.LASF133:
 20612 00f7 63757272 		.ascii	"curr_lookup\000"
 20612      5F6C6F6F 
 20612      6B757000 
 20613              	.LASF99:
 20614 0103 72657374 		.ascii	"rest_counter\000"
 20614      5F636F75 
 20614      6E746572 
 20614      00
 20615              	.LASF263:
 20616 0110 636D645F 		.ascii	"cmd_get_imu_readings\000"
 20616      6765745F 
 20616      696D755F 
 20616      72656164 
 20616      696E6773 
 20617              	.LASF212:
 20618 0125 69645F73 		.ascii	"id_str_len\000"
 20618      74725F6C 
 20618      656E00
 20619              	.LASF60:
 20620 0130 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 20620      545F4D4F 
 20620      44455F45 
 20620      4D475F49 
 20620      4E544547 
 20621              	.LASF177:
 20622 0148 6D5F746D 		.ascii	"m_tmp\000"
 20622      7000
 20623              	.LASF307:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 452


 20624 014e 6D656D49 		.ascii	"memInit_SoftHand\000"
 20624      6E69745F 
 20624      536F6674 
 20624      48616E64 
 20624      00
 20625              	.LASF16:
 20626 015f 696E7438 		.ascii	"int8\000"
 20626      00
 20627              	.LASF219:
 20628 0164 6765745F 		.ascii	"get_param_list\000"
 20628      70617261 
 20628      6D5F6C69 
 20628      737400
 20629              	.LASF262:
 20630 0173 636D645F 		.ascii	"cmd_get_emg\000"
 20630      6765745F 
 20630      656D6700 
 20631              	.LASF97:
 20632 017f 706F7369 		.ascii	"position_hist\000"
 20632      74696F6E 
 20632      5F686973 
 20632      7400
 20633              	.LASF160:
 20634 018d 74656D70 		.ascii	"temp_value\000"
 20634      5F76616C 
 20634      756500
 20635              	.LASF306:
 20636 0198 72657375 		.ascii	"result\000"
 20636      6C7400
 20637              	.LASF94:
 20638 019f 72656164 		.ascii	"ready\000"
 20638      7900
 20639              	.LASF59:
 20640 01a5 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 20640      545F4D4F 
 20640      44455F45 
 20640      4D475F50 
 20640      524F504F 
 20641              	.LASF152:
 20642 01c1 7573655F 		.ascii	"use_2nd_motor_flag\000"
 20642      326E645F 
 20642      6D6F746F 
 20642      725F666C 
 20642      616700
 20643              	.LASF144:
 20644 01d4 72656164 		.ascii	"read_imu_flag\000"
 20644      5F696D75 
 20644      5F666C61 
 20644      6700
 20645              	.LASF281:
 20646 01e2 74696D65 		.ascii	"timer_value\000"
 20646      725F7661 
 20646      6C756500 
 20647              	.LASF4:
 20648 01ee 6C6F6E67 		.ascii	"long int\000"
 20648      20696E74 
 20648      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 453


 20649              	.LASF104:
 20650 01f7 756E7573 		.ascii	"unused_bytes1\000"
 20650      65645F62 
 20650      79746573 
 20650      3100
 20651              	.LASF220:
 20652 0205 7365745A 		.ascii	"setZeros\000"
 20652      65726F73 
 20652      00
 20653              	.LASF146:
 20654 020e 756E7573 		.ascii	"unused_bytes\000"
 20654      65645F62 
 20654      79746573 
 20654      00
 20655              	.LASF156:
 20656 021b 61636365 		.ascii	"accel_value\000"
 20656      6C5F7661 
 20656      6C756500 
 20657              	.LASF184:
 20658 0227 4E554D5F 		.ascii	"NUM_ITEMS\000"
 20658      4954454D 
 20658      5300
 20659              	.LASF19:
 20660 0231 666C6F61 		.ascii	"float32\000"
 20660      74333200 
 20661              	.LASF269:
 20662 0239 636D645F 		.ascii	"cmd_get_ADC_map\000"
 20662      6765745F 
 20662      4144435F 
 20662      6D617000 
 20663              	.LASF41:
 20664 0249 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 20664      4745545F 
 20664      43555252 
 20664      454E5453 
 20664      00
 20665              	.LASF96:
 20666 025a 656D675F 		.ascii	"emg_counter\000"
 20666      636F756E 
 20666      74657200 
 20667              	.LASF270:
 20668 0266 636D645F 		.ascii	"cmd_get_ADC_raw\000"
 20668      6765745F 
 20668      4144435F 
 20668      72617700 
 20669              	.LASF199:
 20670 0276 6175785F 		.ascii	"aux_float2\000"
 20670      666C6F61 
 20670      743200
 20671              	.LASF257:
 20672 0281 636D645F 		.ascii	"cmd_ping\000"
 20672      70696E67 
 20672      00
 20673              	.LASF218:
 20674 028a 7370695F 		.ascii	"spi_delay_menu_len\000"
 20674      64656C61 
 20674      795F6D65 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 454


 20674      6E755F6C 
 20674      656E00
 20675              	.LASF304:
 20676 029d 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Documents\\GITHUB\\SoftHand-PR"
 20676      73657273 
 20676      5C4D6174 
 20676      74696143 
 20676      505C446F 
 20677 02cb 4F2D5053 		.ascii	"O-PSoC5\\firmware.cydsn\000"
 20677      6F43355C 
 20677      6669726D 
 20677      77617265 
 20677      2E637964 
 20678              	.LASF0:
 20679 02e2 7369676E 		.ascii	"signed char\000"
 20679      65642063 
 20679      68617200 
 20680              	.LASF161:
 20681 02ee 73745F63 		.ascii	"st_calib\000"
 20681      616C6962 
 20681      00
 20682              	.LASF239:
 20683 02f7 6D656D53 		.ascii	"memStore\000"
 20683      746F7265 
 20683      00
 20684              	.LASF298:
 20685 0300 73696E67 		.ascii	"single_imu_size\000"
 20685      6C655F69 
 20685      6D755F73 
 20685      697A6500 
 20686              	.LASF68:
 20687 0310 6D6F746F 		.ascii	"motor_supply_type\000"
 20687      725F7375 
 20687      70706C79 
 20687      5F747970 
 20687      6500
 20688              	.LASF289:
 20689 0322 4144435F 		.ascii	"ADC_buf\000"
 20689      62756600 
 20690              	.LASF224:
 20691 032a 73746570 		.ascii	"step\000"
 20691      00
 20692              	.LASF1:
 20693 032f 756E7369 		.ascii	"unsigned char\000"
 20693      676E6564 
 20693      20636861 
 20693      7200
 20694              	.LASF273:
 20695 033d 675F7265 		.ascii	"g_refNew\000"
 20695      664E6577 
 20695      00
 20696              	.LASF188:
 20697 0346 636F6E74 		.ascii	"control_mode_menu\000"
 20697      726F6C5F 
 20697      6D6F6465 
 20697      5F6D656E 
 20697      7500
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 455


 20698              	.LASF143:
 20699 0358 72696768 		.ascii	"right_left\000"
 20699      745F6C65 
 20699      667400
 20700              	.LASF29:
 20701 0363 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 20701      53544F52 
 20701      455F4445 
 20701      4641554C 
 20701      545F5041 
 20702              	.LASF213:
 20703 037c 6E5F696D 		.ascii	"n_imu_str_len\000"
 20703      755F7374 
 20703      725F6C65 
 20703      6E00
 20704              	.LASF216:
 20705 038a 696D755F 		.ascii	"imu_table_str_len\000"
 20705      7461626C 
 20705      655F7374 
 20705      725F6C65 
 20705      6E00
 20706              	.LASF237:
 20707 039c 76616C75 		.ascii	"value\000"
 20707      6500
 20708              	.LASF155:
 20709 03a2 666C6167 		.ascii	"flags\000"
 20709      7300
 20710              	.LASF211:
 20711 03a8 7370695F 		.ascii	"spi_read_delay_str\000"
 20711      72656164 
 20711      5F64656C 
 20711      61795F73 
 20711      747200
 20712              	.LASF190:
 20713 03bb 72696768 		.ascii	"right_left_menu\000"
 20713      745F6C65 
 20713      66745F6D 
 20713      656E7500 
 20714              	.LASF37:
 20715 03cb 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 20715      4745545F 
 20715      41435449 
 20715      56415445 
 20715      00
 20716              	.LASF22:
 20717 03dc 63686172 		.ascii	"char\000"
 20717      00
 20718              	.LASF124:
 20719 03e1 6D61785F 		.ascii	"max_step_pos\000"
 20719      73746570 
 20719      5F706F73 
 20719      00
 20720              	.LASF194:
 20721 03ee 6D6F746F 		.ascii	"motor_driver_type_menu\000"
 20721      725F6472 
 20721      69766572 
 20721      5F747970 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 456


 20721      655F6D65 
 20722              	.LASF243:
 20723 0405 7265745F 		.ascii	"ret_val\000"
 20723      76616C00 
 20724              	.LASF205:
 20725 040d 73746172 		.ascii	"start_byte\000"
 20725      745F6279 
 20725      746500
 20726              	.LASF202:
 20727 0418 6E756D5F 		.ascii	"num_mag_cal_params\000"
 20727      6D61675F 
 20727      63616C5F 
 20727      70617261 
 20727      6D7300
 20728              	.LASF108:
 20729 042b 6B5F645F 		.ascii	"k_d_c\000"
 20729      6300
 20730              	.LASF169:
 20731 0431 7061636B 		.ascii	"packet_string\000"
 20731      65745F73 
 20731      7472696E 
 20731      6700
 20732              	.LASF119:
 20733 043f 6D5F6D75 		.ascii	"m_mult\000"
 20733      6C7400
 20734              	.LASF107:
 20735 0446 6B5F695F 		.ascii	"k_i_c\000"
 20735      6300
 20736              	.LASF240:
 20737 044c 64697370 		.ascii	"displacement\000"
 20737      6C616365 
 20737      6D656E74 
 20737      00
 20738              	.LASF234:
 20739 0459 64617461 		.ascii	"data_length\000"
 20739      5F6C656E 
 20739      67746800 
 20740              	.LASF122:
 20741 0465 706F735F 		.ascii	"pos_lim_sup\000"
 20741      6C696D5F 
 20741      73757000 
 20742              	.LASF129:
 20743 0471 656D675F 		.ascii	"emg_speed\000"
 20743      73706565 
 20743      6400
 20744              	.LASF140:
 20745 047b 72657374 		.ascii	"rest_vel\000"
 20745      5F76656C 
 20745      00
 20746              	.LASF171:
 20747 0484 7061636B 		.ascii	"packet_data\000"
 20747      65745F64 
 20747      61746100 
 20748              	.LASF294:
 20749 0490 7046696C 		.ascii	"pFile\000"
 20749      6500
 20750              	.LASF150:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 457


 20751 0496 4144435F 		.ascii	"ADC_conf\000"
 20751      636F6E66 
 20751      00
 20752              	.LASF231:
 20753 049f 636F6D6D 		.ascii	"commWrite\000"
 20753      57726974 
 20753      6500
 20754              	.LASF242:
 20755 04a9 70616765 		.ascii	"pages\000"
 20755      7300
 20756              	.LASF246:
 20757 04af 6D656D49 		.ascii	"memInit\000"
 20757      6E697400 
 20758              	.LASF110:
 20759 04b7 6B5F695F 		.ascii	"k_i_dl\000"
 20759      646C00
 20760              	.LASF38:
 20761 04be 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 20761      5345545F 
 20761      494E5055 
 20761      545300
 20762              	.LASF149:
 20763 04cd 456E636F 		.ascii	"Encoder_conf\000"
 20763      6465725F 
 20763      636F6E66 
 20763      00
 20764              	.LASF92:
 20765 04da 62756666 		.ascii	"buffer\000"
 20765      657200
 20766              	.LASF112:
 20767 04e1 6B5F705F 		.ascii	"k_p_c_dl\000"
 20767      635F646C 
 20767      00
 20768              	.LASF247:
 20769 04ea 636D645F 		.ascii	"cmd_get_measurements\000"
 20769      6765745F 
 20769      6D656173 
 20769      7572656D 
 20769      656E7473 
 20770              	.LASF164:
 20771 04ff 73706565 		.ascii	"speed\000"
 20771      6400
 20772              	.LASF168:
 20773 0505 72785F63 		.ascii	"rx_cmd\000"
 20773      6D6400
 20774              	.LASF83:
 20775 050c 54595045 		.ascii	"TYPE_DOUBLE\000"
 20775      5F444F55 
 20775      424C4500 
 20776              	.LASF275:
 20777 0518 675F6D65 		.ascii	"g_meas\000"
 20777      617300
 20778              	.LASF72:
 20779 051f 41434B5F 		.ascii	"ACK_ERROR\000"
 20779      4552524F 
 20779      5200
 20780              	.LASF291:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 458


 20781 0529 64617461 		.ascii	"data_encoder_raw\000"
 20781      5F656E63 
 20781      6F646572 
 20781      5F726177 
 20781      00
 20782              	.LASF57:
 20783 053a 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 20783      545F4D4F 
 20783      44455F45 
 20783      58544552 
 20783      4E414C00 
 20784              	.LASF197:
 20785 054e 696E6465 		.ascii	"index\000"
 20785      7800
 20786              	.LASF141:
 20787 0554 72657374 		.ascii	"rest_position_flag\000"
 20787      5F706F73 
 20787      6974696F 
 20787      6E5F666C 
 20787      616700
 20788              	.LASF299:
 20789 0567 675F696D 		.ascii	"g_imu\000"
 20789      7500
 20790              	.LASF113:
 20791 056d 6B5F695F 		.ascii	"k_i_c_dl\000"
 20791      635F646C 
 20791      00
 20792              	.LASF208:
 20793 0576 6D61675F 		.ascii	"mag_param_str\000"
 20793      70617261 
 20793      6D5F7374 
 20793      7200
 20794              	.LASF288:
 20795 0584 72657365 		.ascii	"reset_PSoC_flag\000"
 20795      745F5053 
 20795      6F435F66 
 20795      6C616700 
 20796              	.LASF67:
 20797 0594 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 20797      5F414E44 
 20797      5F504F53 
 20797      5F434F4E 
 20797      54524F4C 
 20798              	.LASF28:
 20799 05a9 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 20799      53544F52 
 20799      455F5041 
 20799      52414D53 
 20799      00
 20800              	.LASF186:
 20801 05ba 50415241 		.ascii	"PARAMS_STR\000"
 20801      4D535F53 
 20801      545200
 20802              	.LASF162:
 20803 05c5 656E6162 		.ascii	"enabled\000"
 20803      6C656400 
 20804              	.LASF7:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 459


 20805 05cd 6C6F6E67 		.ascii	"long unsigned int\000"
 20805      20756E73 
 20805      69676E65 
 20805      6420696E 
 20805      7400
 20806              	.LASF101:
 20807 05df 746F7461 		.ascii	"total_time_on\000"
 20807      6C5F7469 
 20807      6D655F6F 
 20807      6E00
 20808              	.LASF32:
 20809 05ed 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 20809      424F4F54 
 20809      4C4F4144 
 20809      455200
 20810              	.LASF249:
 20811 05fc 636D645F 		.ascii	"cmd_get_accelerations\000"
 20811      6765745F 
 20811      61636365 
 20811      6C657261 
 20811      74696F6E 
 20812              	.LASF102:
 20813 0612 746F7461 		.ascii	"total_time_rest\000"
 20813      6C5F7469 
 20813      6D655F72 
 20813      65737400 
 20814              	.LASF115:
 20815 0622 61637469 		.ascii	"activ\000"
 20815      7600
 20816              	.LASF118:
 20817 0628 6D5F6F66 		.ascii	"m_off\000"
 20817      6600
 20818              	.LASF73:
 20819 062e 41434B5F 		.ascii	"ACK_OK\000"
 20819      4F4B00
 20820              	.LASF75:
 20821 0635 54595045 		.ascii	"TYPE_FLAG\000"
 20821      5F464C41 
 20821      4700
 20822              	.LASF159:
 20823 063f 71756174 		.ascii	"quat_value\000"
 20823      5F76616C 
 20823      756500
 20824              	.LASF204:
 20825 064a 7061636B 		.ascii	"packet_length\000"
 20825      65745F6C 
 20825      656E6774 
 20825      6800
 20826              	.LASF138:
 20827 0658 72657374 		.ascii	"rest_pos\000"
 20827      5F706F73 
 20827      00
 20828              	.LASF85:
 20829 0661 63757272 		.ascii	"curr\000"
 20829      00
 20830              	.LASF116:
 20831 0666 696E7075 		.ascii	"input_mode\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 460


 20831      745F6D6F 
 20831      646500
 20832              	.LASF65:
 20833 0671 434F4E54 		.ascii	"CONTROL_PWM\000"
 20833      524F4C5F 
 20833      50574D00 
 20834              	.LASF43:
 20835 067d 434D445F 		.ascii	"CMD_GET_EMG\000"
 20835      4745545F 
 20835      454D4700 
 20836              	.LASF31:
 20837 0689 434D445F 		.ascii	"CMD_GET_INFO\000"
 20837      4745545F 
 20837      494E464F 
 20837      00
 20838              	.LASF187:
 20839 0696 696E7075 		.ascii	"input_mode_menu\000"
 20839      745F6D6F 
 20839      64655F6D 
 20839      656E7500 
 20840              	.LASF266:
 20841 06a6 73696E67 		.ascii	"single_packet\000"
 20841      6C655F70 
 20841      61636B65 
 20841      7400
 20842              	.LASF95:
 20843 06b4 73745F6D 		.ascii	"st_mem\000"
 20843      656D00
 20844              	.LASF203:
 20845 06bb 66697273 		.ascii	"first_imu_parameter\000"
 20845      745F696D 
 20845      755F7061 
 20845      72616D65 
 20845      74657200 
 20846              	.LASF42:
 20847 06cf 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 20847      4745545F 
 20847      43555252 
 20847      5F414E44 
 20847      5F4D4541 
 20848              	.LASF302:
 20849 06e5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 20849      43313120 
 20849      352E342E 
 20849      31203230 
 20849      31363036 
 20850 0718 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 20850      20726576 
 20850      6973696F 
 20850      6E203233 
 20850      37373135 
 20851 074b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 20851      66756E63 
 20851      74696F6E 
 20851      2D736563 
 20851      74696F6E 
 20852              	.LASF87:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 461


 20853 0773 73745F72 		.ascii	"st_ref\000"
 20853      656600
 20854              	.LASF47:
 20855 077a 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 20855      5345545F 
 20855      43554646 
 20855      5F494E50 
 20855      55545300 
 20856              	.LASF280:
 20857 078e 63616C69 		.ascii	"calib\000"
 20857      6200
 20858              	.LASF6:
 20859 0794 5F5F7569 		.ascii	"__uint32_t\000"
 20859      6E743332 
 20859      5F7400
 20860              	.LASF8:
 20861 079f 6C6F6E67 		.ascii	"long long int\000"
 20861      206C6F6E 
 20861      6720696E 
 20861      7400
 20862              	.LASF63:
 20863 07ad 53485F63 		.ascii	"SH_control_mode\000"
 20863      6F6E7472 
 20863      6F6C5F6D 
 20863      6F646500 
 20864              	.LASF77:
 20865 07bd 54595045 		.ascii	"TYPE_UINT8\000"
 20865      5F55494E 
 20865      543800
 20866              	.LASF136:
 20867 07c8 6D61696E 		.ascii	"maint_month\000"
 20867      745F6D6F 
 20867      6E746800 
 20868              	.LASF253:
 20869 07d4 636D645F 		.ascii	"cmd_get_currents\000"
 20869      6765745F 
 20869      63757272 
 20869      656E7473 
 20869      00
 20870              	.LASF70:
 20871 07e5 4D41584F 		.ascii	"MAXON_12V\000"
 20871      4E5F3132 
 20871      5600
 20872              	.LASF287:
 20873 07ef 6368616E 		.ascii	"change_ext_ref_flag\000"
 20873      67655F65 
 20873      78745F72 
 20873      65665F66 
 20873      6C616700 
 20874              	.LASF21:
 20875 0803 646F7562 		.ascii	"double\000"
 20875      6C6500
 20876              	.LASF209:
 20877 080a 69645F73 		.ascii	"id_str\000"
 20877      747200
 20878              	.LASF165:
 20879 0811 72657065 		.ascii	"repetitions\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 462


 20879      74697469 
 20879      6F6E7300 
 20880              	.LASF123:
 20881 081d 6D61785F 		.ascii	"max_step_neg\000"
 20881      73746570 
 20881      5F6E6567 
 20881      00
 20882              	.LASF286:
 20883 082a 72657365 		.ascii	"reset_last_value_flag\000"
 20883      745F6C61 
 20883      73745F76 
 20883      616C7565 
 20883      5F666C61 
 20884              	.LASF20:
 20885 0840 666C6F61 		.ascii	"float\000"
 20885      7400
 20886              	.LASF148:
 20887 0846 494D555F 		.ascii	"IMU_conf\000"
 20887      636F6E66 
 20887      00
 20888              	.LASF176:
 20889 084f 6D5F6164 		.ascii	"m_addr\000"
 20889      647200
 20890              	.LASF279:
 20891 0856 635F6D65 		.ascii	"c_mem\000"
 20891      6D00
 20892              	.LASF233:
 20893 085c 64617461 		.ascii	"data_array\000"
 20893      5F617272 
 20893      617900
 20894              	.LASF10:
 20895 0867 756E7369 		.ascii	"unsigned int\000"
 20895      676E6564 
 20895      20696E74 
 20895      00
 20896              	.LASF236:
 20897 0874 73656E64 		.ascii	"sendAcknowledgment\000"
 20897      41636B6E 
 20897      6F776C65 
 20897      64676D65 
 20897      6E7400
 20898              	.LASF226:
 20899 0887 70726570 		.ascii	"prepare_SD_legend\000"
 20899      6172655F 
 20899      53445F6C 
 20899      6567656E 
 20899      6400
 20900              	.LASF300:
 20901 0899 4D616743 		.ascii	"MagCal\000"
 20901      616C00
 20902              	.LASF55:
 20903 08a0 53485F63 		.ascii	"SH_command\000"
 20903      6F6D6D61 
 20903      6E6400
 20904              	.LASF79:
 20905 08ab 54595045 		.ascii	"TYPE_UINT16\000"
 20905      5F55494E 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 463


 20905      54313600 
 20906              	.LASF105:
 20907 08b7 666C6167 		.ascii	"flag\000"
 20907      00
 20908              	.LASF250:
 20909 08bc 636D645F 		.ascii	"cmd_set_inputs\000"
 20909      7365745F 
 20909      696E7075 
 20909      747300
 20910              	.LASF117:
 20911 08cb 636F6E74 		.ascii	"control_mode\000"
 20911      726F6C5F 
 20911      6D6F6465 
 20911      00
 20912              	.LASF260:
 20913 08d8 6F66665F 		.ascii	"off_1\000"
 20913      3100
 20914              	.LASF58:
 20915 08de 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 20915      545F4D4F 
 20915      44455F45 
 20915      4E434F44 
 20915      45523300 
 20916              	.LASF51:
 20917 08f2 434D445F 		.ascii	"CMD_GET_ENCODER_CONF\000"
 20917      4745545F 
 20917      454E434F 
 20917      4445525F 
 20917      434F4E46 
 20918              	.LASF251:
 20919 0907 636D645F 		.ascii	"cmd_get_activate\000"
 20919      6765745F 
 20919      61637469 
 20919      76617465 
 20919      00
 20920              	.LASF232:
 20921 0918 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 20921      57726974 
 20921      655F746F 
 20921      5F637566 
 20921      6600
 20922              	.LASF174:
 20923 092a 73747269 		.ascii	"string_lenght\000"
 20923      6E675F6C 
 20923      656E6768 
 20923      7400
 20924              	.LASF82:
 20925 0938 54595045 		.ascii	"TYPE_FLOAT\000"
 20925      5F464C4F 
 20925      415400
 20926              	.LASF198:
 20927 0943 6175785F 		.ascii	"aux_uchar\000"
 20927      75636861 
 20927      7200
 20928              	.LASF90:
 20929 094d 6164645F 		.ascii	"add_emg\000"
 20929      656D6700 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 464


 20930              	.LASF78:
 20931 0955 54595045 		.ascii	"TYPE_INT16\000"
 20931      5F494E54 
 20931      313600
 20932              	.LASF180:
 20933 0960 6175785F 		.ascii	"aux_uint16\000"
 20933      75696E74 
 20933      313600
 20934              	.LASF126:
 20935 096b 656D675F 		.ascii	"emg_threshold\000"
 20935      74687265 
 20935      73686F6C 
 20935      6400
 20936              	.LASF192:
 20937 0979 6578705F 		.ascii	"exp_port_menu\000"
 20937      706F7274 
 20937      5F6D656E 
 20937      7500
 20938              	.LASF46:
 20939 0987 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 20939      4745545F 
 20939      43555252 
 20939      5F444946 
 20939      4600
 20940              	.LASF98:
 20941 0999 63757272 		.ascii	"current_hist\000"
 20941      656E745F 
 20941      68697374 
 20941      00
 20942              	.LASF66:
 20943 09a6 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 20943      524F4C5F 
 20943      43555252 
 20943      454E5400 
 20944              	.LASF24:
 20945 09b6 6C6F6E67 		.ascii	"long double\000"
 20945      20646F75 
 20945      626C6500 
 20946              	.LASF81:
 20947 09c2 54595045 		.ascii	"TYPE_UINT32\000"
 20947      5F55494E 
 20947      54333200 
 20948              	.LASF131:
 20949 09ce 6D6F746F 		.ascii	"motor_handle_ratio\000"
 20949      725F6861 
 20949      6E646C65 
 20949      5F726174 
 20949      696F00
 20950              	.LASF235:
 20951 09e1 63686563 		.ascii	"checksum\000"
 20951      6B73756D 
 20951      00
 20952              	.LASF274:
 20953 09ea 675F7265 		.ascii	"g_refOld\000"
 20953      664F6C64 
 20953      00
 20954              	.LASF35:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 465


 20955 09f3 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 20955      48414E44 
 20955      5F43414C 
 20955      49425241 
 20955      544500
 20956              	.LASF157:
 20957 0a06 6779726F 		.ascii	"gyro_value\000"
 20957      5F76616C 
 20957      756500
 20958              	.LASF103:
 20959 0a11 63757272 		.ascii	"curr_time\000"
 20959      5F74696D 
 20959      6500
 20960              	.LASF130:
 20961 0a1b 646F7562 		.ascii	"double_encoder_on_off\000"
 20961      6C655F65 
 20961      6E636F64 
 20961      65725F6F 
 20961      6E5F6F66 
 20962              	.LASF137:
 20963 0a31 6D61696E 		.ascii	"maint_year\000"
 20963      745F7965 
 20963      617200
 20964              	.LASF147:
 20965 0a3c 5350495F 		.ascii	"SPI_read_delay\000"
 20965      72656164 
 20965      5F64656C 
 20965      617900
 20966              	.LASF71:
 20967 0a4b 61636B6E 		.ascii	"acknowledgment_values\000"
 20967      6F776C65 
 20967      64676D65 
 20967      6E745F76 
 20967      616C7565 
 20968              	.LASF245:
 20969 0a61 6D656D52 		.ascii	"memRestore\000"
 20969      6573746F 
 20969      726500
 20970              	.LASF206:
 20971 0a6c 6E5F696D 		.ascii	"n_imu_str\000"
 20971      755F7374 
 20971      7200
 20972              	.LASF222:
 20973 0a76 696E666F 		.ascii	"info_string\000"
 20973      5F737472 
 20973      696E6700 
 20974              	.LASF227:
 20975 0a82 70726570 		.ascii	"prepare_SD_info\000"
 20975      6172655F 
 20975      53445F69 
 20975      6E666F00 
 20976              	.LASF9:
 20977 0a92 6C6F6E67 		.ascii	"long long unsigned int\000"
 20977      206C6F6E 
 20977      6720756E 
 20977      7369676E 
 20977      65642069 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 466


 20978              	.LASF80:
 20979 0aa9 54595045 		.ascii	"TYPE_INT32\000"
 20979      5F494E54 
 20979      333200
 20980              	.LASF135:
 20981 0ab4 6D61696E 		.ascii	"maint_day\000"
 20981      745F6461 
 20981      7900
 20982              	.LASF182:
 20983 0abe 6175785F 		.ascii	"aux_uint32\000"
 20983      75696E74 
 20983      333200
 20984              	.LASF93:
 20985 0ac9 6C656E67 		.ascii	"length\000"
 20985      746800
 20986              	.LASF158:
 20987 0ad0 6D61675F 		.ascii	"mag_value\000"
 20987      76616C75 
 20987      6500
 20988              	.LASF86:
 20989 0ada 6F6E6F66 		.ascii	"onoff\000"
 20989      6600
 20990              	.LASF45:
 20991 0ae0 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 20991      4745545F 
 20991      41434345 
 20991      4C00
 20992              	.LASF248:
 20993 0aee 636D645F 		.ascii	"cmd_get_velocities\000"
 20993      6765745F 
 20993      76656C6F 
 20993      63697469 
 20993      657300
 20994              	.LASF244:
 20995 0b01 6D656D52 		.ascii	"memRecall\000"
 20995      6563616C 
 20995      6C00
 20996              	.LASF282:
 20997 0b0b 74696D65 		.ascii	"timer_value0\000"
 20997      725F7661 
 20997      6C756530 
 20997      00
 20998              	.LASF48:
 20999 0b18 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 20999      5345545F 
 20999      42415544 
 20999      52415445 
 20999      00
 21000              	.LASF106:
 21001 0b29 6B5F705F 		.ascii	"k_p_c\000"
 21001      6300
 21002              	.LASF210:
 21003 0b2f 696D755F 		.ascii	"imu_table_str\000"
 21003      7461626C 
 21003      655F7374 
 21003      7200
 21004              	.LASF283:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 467


 21005 0b3d 6465765F 		.ascii	"dev_tension\000"
 21005      74656E73 
 21005      696F6E00 
 21006              	.LASF153:
 21007 0b49 6D6F746F 		.ascii	"motor_driver_type\000"
 21007      725F6472 
 21007      69766572 
 21007      5F747970 
 21007      6500
 21008              	.LASF261:
 21009 0b5b 6D756C74 		.ascii	"mult_1\000"
 21009      5F3100
 21010              	.LASF23:
 21011 0b62 72656738 		.ascii	"reg8\000"
 21011      00
 21012              	.LASF229:
 21013 0b67 636F6D6D 		.ascii	"commWrite_old_id\000"
 21013      57726974 
 21013      655F6F6C 
 21013      645F6964 
 21013      00
 21014              	.LASF195:
 21015 0b78 6D616E61 		.ascii	"manage_param_list\000"
 21015      67655F70 
 21015      6172616D 
 21015      5F6C6973 
 21015      7400
 21016              	.LASF30:
 21017 0b8a 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 21017      52455354 
 21017      4F52455F 
 21017      50415241 
 21017      4D5300
 21018              	.LASF225:
 21019 0b9d 70726570 		.ascii	"prepare_SD_param_info\000"
 21019      6172655F 
 21019      53445F70 
 21019      6172616D 
 21019      5F696E66 
 21020              	.LASF223:
 21021 0bb3 70726570 		.ascii	"prepare_counter_info\000"
 21021      6172655F 
 21021      636F756E 
 21021      7465725F 
 21021      696E666F 
 21022              	.LASF230:
 21023 0bc8 6F6C645F 		.ascii	"old_id\000"
 21023      696400
 21024              	.LASF305:
 21025 0bcf 5F5F5245 		.ascii	"__REV16\000"
 21025      56313600 
 21026              	.LASF292:
 21027 0bd7 4E5F456E 		.ascii	"N_Encoder_Line_Connected\000"
 21027      636F6465 
 21027      725F4C69 
 21027      6E655F43 
 21027      6F6E6E65 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 468


 21028              	.LASF252:
 21029 0bf0 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 21029      6765745F 
 21029      63757272 
 21029      5F616E64 
 21029      5F6D6561 
 21030              	.LASF127:
 21031 0c06 656D675F 		.ascii	"emg_calibration_flag\000"
 21031      63616C69 
 21031      62726174 
 21031      696F6E5F 
 21031      666C6167 
 21032              	.LASF88:
 21033 0c1b 73745F6D 		.ascii	"st_meas\000"
 21033      65617300 
 21034              	.LASF54:
 21035 0c23 434D445F 		.ascii	"CMD_GET_ADC_RAW\000"
 21035      4745545F 
 21035      4144435F 
 21035      52415700 
 21036              	.LASF69:
 21037 0c33 4D41584F 		.ascii	"MAXON_24V\000"
 21037      4E5F3234 
 21037      5600
 21038              	.LASF50:
 21039 0c3d 434D445F 		.ascii	"CMD_GET_IMU_PARAM\000"
 21039      4745545F 
 21039      494D555F 
 21039      50415241 
 21039      4D00
 21040              	.LASF52:
 21041 0c4f 434D445F 		.ascii	"CMD_GET_ENCODER_RAW\000"
 21041      4745545F 
 21041      454E434F 
 21041      4445525F 
 21041      52415700 
 21042              	.LASF259:
 21043 0c63 636D645F 		.ascii	"cmd_store_params\000"
 21043      73746F72 
 21043      655F7061 
 21043      72616D73 
 21043      00
 21044              	.LASF278:
 21045 0c74 675F6D65 		.ascii	"g_mem\000"
 21045      6D00
 21046              	.LASF40:
 21047 0c7a 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 21047      4745545F 
 21047      4D454153 
 21047      5552454D 
 21047      454E5453 
 21048              	.LASF268:
 21049 0c8f 636D645F 		.ascii	"cmd_get_encoder_raw\000"
 21049      6765745F 
 21049      656E636F 
 21049      6465725F 
 21049      72617700 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 469


 21050              	.LASF13:
 21051 0ca3 75696E74 		.ascii	"uint8\000"
 21051      3800
 21052              	.LASF166:
 21053 0ca9 636F6D6D 		.ascii	"commProcess\000"
 21053      50726F63 
 21053      65737300 
 21054              	.LASF2:
 21055 0cb5 73686F72 		.ascii	"short int\000"
 21055      7420696E 
 21055      7400
 21056              	.LASF214:
 21057 0cbf 6964735F 		.ascii	"ids_str_len\000"
 21057      7374725F 
 21057      6C656E00 
 21058              	.LASF111:
 21059 0ccb 6B5F645F 		.ascii	"k_d_dl\000"
 21059      646C00
 21060              	.LASF173:
 21061 0cd2 6964785F 		.ascii	"idx_menu\000"
 21061      6D656E75 
 21061      00
 21062              	.LASF295:
 21063 0cdb 4E5F494D 		.ascii	"N_IMU_Connected\000"
 21063      555F436F 
 21063      6E6E6563 
 21063      74656400 
 21064              	.LASF296:
 21065 0ceb 494D555F 		.ascii	"IMU_connected\000"
 21065      636F6E6E 
 21065      65637465 
 21065      6400
 21066              	.LASF39:
 21067 0cf9 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 21067      4745545F 
 21067      494E5055 
 21067      545300
 21068              	.LASF207:
 21069 0d08 6964735F 		.ascii	"ids_str\000"
 21069      73747200 
 21070              	.LASF53:
 21071 0d10 434D445F 		.ascii	"CMD_GET_ADC_CONF\000"
 21071      4745545F 
 21071      4144435F 
 21071      434F4E46 
 21071      00
 21072              	.LASF27:
 21073 0d21 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 21073      5345545F 
 21073      5A45524F 
 21073      5300
 21074              	.LASF215:
 21075 0d2f 6D61675F 		.ascii	"mag_param_str_len\000"
 21075      70617261 
 21075      6D5F7374 
 21075      725F6C65 
 21075      6E00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 470


 21076              	.LASF201:
 21077 0d41 6E756D5F 		.ascii	"num_imus_id_params\000"
 21077      696D7573 
 21077      5F69645F 
 21077      70617261 
 21077      6D7300
 21078              	.LASF179:
 21079 0d54 6175785F 		.ascii	"aux_int16\000"
 21079      696E7431 
 21079      3600
 21080              	.LASF301:
 21081 0d5e 45455052 		.ascii	"EEPROM_ADDR\000"
 21081      4F4D5F41 
 21081      44445200 
 21082              	.LASF189:
 21083 0d6a 7965735F 		.ascii	"yes_no_menu\000"
 21083      6E6F5F6D 
 21083      656E7500 
 21084              	.LASF297:
 21085 0d76 696D7573 		.ascii	"imus_data_size\000"
 21085      5F646174 
 21085      615F7369 
 21085      7A6500
 21086              	.LASF271:
 21087 0d85 49544D5F 		.ascii	"ITM_RxBuffer\000"
 21087      52784275 
 21087      66666572 
 21087      00
 21088              	.LASF44:
 21089 0d92 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 21089      4745545F 
 21089      56454C4F 
 21089      43495449 
 21089      455300
 21090              	.LASF285:
 21091 0da5 706F775F 		.ascii	"pow_tension\000"
 21091      74656E73 
 21091      696F6E00 
 21092              	.LASF34:
 21093 0db1 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 21093      4745545F 
 21093      50415241 
 21093      4D5F4C49 
 21093      535400
 21094              	.LASF74:
 21095 0dc4 64617461 		.ascii	"data_types\000"
 21095      5F747970 
 21095      657300
 21096              	.LASF17:
 21097 0dcf 696E7431 		.ascii	"int16\000"
 21097      3600
 21098              	.LASF145:
 21099 0dd5 72656164 		.ascii	"read_exp_port_flag\000"
 21099      5F657870 
 21099      5F706F72 
 21099      745F666C 
 21099      616700
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 471


 21100              	.LASF142:
 21101 0de8 73776974 		.ascii	"switch_emg\000"
 21101      63685F65 
 21101      6D6700
 21102              	.LASF132:
 21103 0df3 61637469 		.ascii	"activate_pwm_rescaling\000"
 21103      76617465 
 21103      5F70776D 
 21103      5F726573 
 21103      63616C69 
 21104              	.LASF109:
 21105 0e0a 6B5F705F 		.ascii	"k_p_dl\000"
 21105      646C00
 21106              	.LASF89:
 21107 0e11 65737469 		.ascii	"estim_curr\000"
 21107      6D5F6375 
 21107      727200
 21108              	.LASF284:
 21109 0e1c 6465765F 		.ascii	"dev_pwm_limit\000"
 21109      70776D5F 
 21109      6C696D69 
 21109      7400
 21110              	.LASF293:
 21111 0e2a 456E636F 		.ascii	"Encoder_Value\000"
 21111      6465725F 
 21111      56616C75 
 21111      6500
 21112              	.LASF267:
 21113 0e38 636D645F 		.ascii	"cmd_get_encoder_map\000"
 21113      6765745F 
 21113      656E636F 
 21113      6465725F 
 21113      6D617000 
 21114              	.LASF12:
 21115 0e4c 75696E74 		.ascii	"uint32_t\000"
 21115      33325F74 
 21115      00
 21116              	.LASF178:
 21117 0e55 6175785F 		.ascii	"aux_float\000"
 21117      666C6F61 
 21117      7400
 21118              	.LASF151:
 21119 0e5f 72656164 		.ascii	"read_emg_sensors_port_flag\000"
 21119      5F656D67 
 21119      5F73656E 
 21119      736F7273 
 21119      5F706F72 
 21120              	.LASF185:
 21121 0e7a 4E554D5F 		.ascii	"NUM_MENU\000"
 21121      4D454E55 
 21121      00
 21122              	.LASF181:
 21123 0e83 6175785F 		.ascii	"aux_int32\000"
 21123      696E7433 
 21123      3200
 21124              	.LASF134:
 21125 0e8d 62617564 		.ascii	"baud_rate\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 472


 21125      5F726174 
 21125      6500
 21126              	.LASF254:
 21127 0e97 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 21127      6765745F 
 21127      63757272 
 21127      656E7473 
 21127      5F666F72 
 21128              	.LASF196:
 21129 0eb1 696E666F 		.ascii	"info_type\000"
 21129      5F747970 
 21129      6500
 21130              	.LASF49:
 21131 0ebb 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 21131      4745545F 
 21131      494D555F 
 21131      52454144 
 21131      494E4753 
 21132              	.LASF238:
 21133 0ed0 4C435243 		.ascii	"LCRChecksum\000"
 21133      6865636B 
 21133      73756D00 
 21134              	.LASF264:
 21135 0edc 6B5F696D 		.ascii	"k_imu\000"
 21135      7500
 21136              	.LASF3:
 21137 0ee2 73686F72 		.ascii	"short unsigned int\000"
 21137      7420756E 
 21137      7369676E 
 21137      65642069 
 21137      6E7400
 21138              	.LASF154:
 21139 0ef5 73745F69 		.ascii	"st_imu\000"
 21139      6D7500
 21140              	.LASF200:
 21141 0efc 6765745F 		.ascii	"get_IMU_param_list\000"
 21141      494D555F 
 21141      70617261 
 21141      6D5F6C69 
 21141      737400
 21142              	.LASF183:
 21143 0f0f 54595045 		.ascii	"TYPES\000"
 21143      5300
 21144              	.LASF272:
 21145 0f15 675F7265 		.ascii	"g_ref\000"
 21145      6600
 21146              	.LASF18:
 21147 0f1b 696E7433 		.ascii	"int32\000"
 21147      3200
 21148              	.LASF290:
 21149 0f21 4E554D5F 		.ascii	"NUM_OF_ANALOG_INPUTS\000"
 21149      4F465F41 
 21149      4E414C4F 
 21149      475F494E 
 21149      50555453 
 21150              	.LASF170:
 21151 0f36 696E666F 		.ascii	"infoGet\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 473


 21151      47657400 
 21152              	.LASF84:
 21153 0f3e 46535F46 		.ascii	"FS_FILE\000"
 21153      494C4500 
 21154              	.LASF120:
 21155 0f46 706F735F 		.ascii	"pos_lim_flag\000"
 21155      6C696D5F 
 21155      666C6167 
 21155      00
 21156              	.LASF276:
 21157 0f53 675F6D65 		.ascii	"g_measOld\000"
 21157      61734F6C 
 21157      6400
 21158              	.LASF64:
 21159 0f5d 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 21159      524F4C5F 
 21159      414E474C 
 21159      4500
 21160              	.LASF255:
 21161 0f6b 636D645F 		.ascii	"cmd_activate\000"
 21161      61637469 
 21161      76617465 
 21161      00
 21162              	.LASF5:
 21163 0f78 5F5F696E 		.ascii	"__int32_t\000"
 21163      7433325F 
 21163      7400
 21164              	.LASF193:
 21165 0f82 7370695F 		.ascii	"spi_delay_menu\000"
 21165      64656C61 
 21165      795F6D65 
 21165      6E7500
 21166              	.LASF100:
 21167 0f91 77697265 		.ascii	"wire_disp\000"
 21167      5F646973 
 21167      7000
 21168              	.LASF128:
 21169 0f9b 656D675F 		.ascii	"emg_max_value\000"
 21169      6D61785F 
 21169      76616C75 
 21169      6500
 21170              	.LASF303:
 21171 0fa9 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 21171      72635C63 
 21171      6F6D6D61 
 21171      6E645F70 
 21171      726F6365 
 21172              	.LASF125:
 21173 0fc5 63757272 		.ascii	"current_limit\000"
 21173      656E745F 
 21173      6C696D69 
 21173      7400
 21174              	.LASF56:
 21175 0fd3 53485F69 		.ascii	"SH_input_mode\000"
 21175      6E707574 
 21175      5F6D6F64 
 21175      6500
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccH4xQQo.s 			page 474


 21176              	.LASF76:
 21177 0fe1 54595045 		.ascii	"TYPE_INT8\000"
 21177      5F494E54 
 21177      3800
 21178              	.LASF228:
 21179 0feb 494D555F 		.ascii	"IMU_reading_info\000"
 21179      72656164 
 21179      696E675F 
 21179      696E666F 
 21179      00
 21180              	.LASF14:
 21181 0ffc 75696E74 		.ascii	"uint16\000"
 21181      313600
 21182              	.LASF139:
 21183 1003 72657374 		.ascii	"rest_delay\000"
 21183      5F64656C 
 21183      617900
 21184              	.LASF175:
 21185 100e 6175785F 		.ascii	"aux_str\000"
 21185      73747200 
 21186              	.LASF26:
 21187 1016 434D445F 		.ascii	"CMD_PING\000"
 21187      50494E47 
 21187      00
 21188              	.LASF114:
 21189 101f 6B5F645F 		.ascii	"k_d_c_dl\000"
 21189      635F646C 
 21189      00
 21190              	.LASF163:
 21191 1028 64697265 		.ascii	"direction\000"
 21191      6374696F 
 21191      6E00
 21192              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
