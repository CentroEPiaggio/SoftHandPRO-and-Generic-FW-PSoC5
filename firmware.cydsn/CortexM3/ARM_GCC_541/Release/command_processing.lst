ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"command_processing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	EEPROM_ADDR
  20              		.data
  21              		.align	2
  22              		.type	EEPROM_ADDR, %object
  23              		.size	EEPROM_ADDR, 4
  24              	EEPROM_ADDR:
  25 0000 00800040 		.word	1073774592
  26              		.section	.text.commProcess,"ax",%progbits
  27              		.align	2
  28              		.global	commProcess
  29              		.thumb
  30              		.thumb_func
  31              		.type	commProcess, %function
  32              	commProcess:
  33              	.LFB64:
  34              		.file 1 "..\\src\\command_processing.c"
   1:..\src/command_processing.c **** // ----------------------------------------------------------------------------
   2:..\src/command_processing.c **** // BSD 3-Clause License
   3:..\src/command_processing.c **** 
   4:..\src/command_processing.c **** // Copyright (c) 2016, qbrobotics
   5:..\src/command_processing.c **** // Copyright (c) 2017-2019, Centro "E.Piaggio"
   6:..\src/command_processing.c **** // All rights reserved.
   7:..\src/command_processing.c **** 
   8:..\src/command_processing.c **** // Redistribution and use in source and binary forms, with or without
   9:..\src/command_processing.c **** // modification, are permitted provided that the following conditions are met:
  10:..\src/command_processing.c **** 
  11:..\src/command_processing.c **** // * Redistributions of source code must retain the above copyright notice, this
  12:..\src/command_processing.c **** //   list of conditions and the following disclaimer.
  13:..\src/command_processing.c **** 
  14:..\src/command_processing.c **** // * Redistributions in binary form must reproduce the above copyright notice,
  15:..\src/command_processing.c **** //   this list of conditions and the following disclaimer in the documentation
  16:..\src/command_processing.c **** //   and/or other materials provided with the distribution.
  17:..\src/command_processing.c **** 
  18:..\src/command_processing.c **** // * Neither the name of the copyright holder nor the names of its
  19:..\src/command_processing.c **** //   contributors may be used to endorse or promote products derived from
  20:..\src/command_processing.c **** //   this software without specific prior written permission.
  21:..\src/command_processing.c **** 
  22:..\src/command_processing.c **** // THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  23:..\src/command_processing.c **** // AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 2


  24:..\src/command_processing.c **** // IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  25:..\src/command_processing.c **** // DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  26:..\src/command_processing.c **** // FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  27:..\src/command_processing.c **** // DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  28:..\src/command_processing.c **** // SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  29:..\src/command_processing.c **** // CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  30:..\src/command_processing.c **** // OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  31:..\src/command_processing.c **** // OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  32:..\src/command_processing.c **** // POSSIBILITY OF SUCH DAMAGE.
  33:..\src/command_processing.c **** // ----------------------------------------------------------------------------
  34:..\src/command_processing.c **** 
  35:..\src/command_processing.c **** 
  36:..\src/command_processing.c **** /**
  37:..\src/command_processing.c **** * \file         command_processing.c
  38:..\src/command_processing.c **** *
  39:..\src/command_processing.c **** 
  40:..\src/command_processing.c **** * \brief        Command processing functions.
  41:..\src/command_processing.c **** * \date         October 01, 2017
  42:..\src/command_processing.c **** * \author       _Centro "E.Piaggio"_
  43:..\src/command_processing.c **** * \copyright    (C) 2012-2016 qbrobotics. All rights reserved.
  44:..\src/command_processing.c **** * \copyright    (C) 2017-2019 Centro "E.Piaggio". All rights reserved.
  45:..\src/command_processing.c **** */
  46:..\src/command_processing.c **** //=================================================================     includes
  47:..\src/command_processing.c **** #include "command_processing.h"
  48:..\src/command_processing.c **** #include "interruptions.h"
  49:..\src/command_processing.c **** #include "SPI_functions.h"
  50:..\src/command_processing.c **** #include <STDIO.H>
  51:..\src/command_processing.c **** #include "utils.h"
  52:..\src/command_processing.c **** #include "commands.h"
  53:..\src/command_processing.c **** 
  54:..\src/command_processing.c **** //================================================================     variables
  55:..\src/command_processing.c **** 
  56:..\src/command_processing.c **** reg8 * EEPROM_ADDR = (reg8 *) CYDEV_EE_BASE;
  57:..\src/command_processing.c **** 
  58:..\src/command_processing.c **** //==============================================================================
  59:..\src/command_processing.c **** //                                                            RX DATA PROCESSING
  60:..\src/command_processing.c **** //==============================================================================
  61:..\src/command_processing.c **** //  This function checks for the availability of a data packet and process it:
  62:..\src/command_processing.c **** //      - Verify checksum;
  63:..\src/command_processing.c **** //      - Process commands;
  64:..\src/command_processing.c **** //==============================================================================
  65:..\src/command_processing.c **** 
  66:..\src/command_processing.c **** void commProcess(void){
  35              		.loc 1 66 0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 24
  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 86B0     		sub	sp, sp, #24
  44              		.cfi_def_cfa_offset 32
  45 0004 00AF     		add	r7, sp, #0
  46              		.cfi_def_cfa_register 7
  67:..\src/command_processing.c **** 
  68:..\src/command_processing.c ****     uint8 CYDATA rx_cmd;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 3


  69:..\src/command_processing.c ****     rx_cmd = g_rx.buffer[0];
  47              		.loc 1 69 0
  48 0006 E14B     		ldr	r3, .L42
  49 0008 1B78     		ldrb	r3, [r3]
  50 000a FB75     		strb	r3, [r7, #23]
  70:..\src/command_processing.c **** 
  71:..\src/command_processing.c **** //==========================================================     verify checksum
  72:..\src/command_processing.c **** 
  73:..\src/command_processing.c ****     if (!(LCRChecksum(g_rx.buffer, g_rx.length - 1) == g_rx.buffer[g_rx.length - 1])){
  51              		.loc 1 73 0
  52 000c DF4B     		ldr	r3, .L42
  53 000e B3F98030 		ldrsh	r3, [r3, #128]
  54 0012 DBB2     		uxtb	r3, r3
  55 0014 013B     		subs	r3, r3, #1
  56 0016 DBB2     		uxtb	r3, r3
  57 0018 1946     		mov	r1, r3
  58 001a DC48     		ldr	r0, .L42
  59 001c FFF7FEFF 		bl	LCRChecksum
  60 0020 0346     		mov	r3, r0
  61 0022 1946     		mov	r1, r3
  62 0024 D94B     		ldr	r3, .L42
  63 0026 B3F98030 		ldrsh	r3, [r3, #128]
  64 002a 013B     		subs	r3, r3, #1
  65 002c D74A     		ldr	r2, .L42
  66 002e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
  67 0030 9942     		cmp	r1, r3
  68 0032 04D0     		beq	.L2
  74:..\src/command_processing.c ****         // Wrong checksum
  75:..\src/command_processing.c ****         g_rx.ready = 0;
  69              		.loc 1 75 0
  70 0034 D54B     		ldr	r3, .L42
  71 0036 0022     		movs	r2, #0
  72 0038 83F88420 		strb	r2, [r3, #132]
  76:..\src/command_processing.c ****         return;
  73              		.loc 1 76 0
  74 003c 1FE2     		b	.L1
  75              	.L2:
  77:..\src/command_processing.c ****     }
  78:..\src/command_processing.c **** 
  79:..\src/command_processing.c ****     switch(rx_cmd) {
  76              		.loc 1 79 0
  77 003e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  78 0040 A12B     		cmp	r3, #161
  79 0042 00F21B82 		bhi	.L41
  80 0046 01A2     		adr	r2, .L6
  81 0048 52F823F0 		ldr	pc, [r2, r3, lsl #2]
  82              		.p2align 2
  83              	.L6:
  84 004c 53030000 		.word	.L5+1
  85 0050 35030000 		.word	.L7+1
  86 0054 7D040000 		.word	.L41+1
  87 0058 59030000 		.word	.L8+1
  88 005c 5F030000 		.word	.L9+1
  89 0060 7B030000 		.word	.L10+1
  90 0064 1D030000 		.word	.L11+1
  91 0068 7D040000 		.word	.L41+1
  92 006c 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 4


  93 0070 B7030000 		.word	.L12+1
  94 0074 9D030000 		.word	.L13+1
  95 0078 7D040000 		.word	.L41+1
  96 007c 3B030000 		.word	.L14+1
  97 0080 D9030000 		.word	.L15+1
  98 0084 7D040000 		.word	.L41+1
  99 0088 7D040000 		.word	.L41+1
 100 008c 7D040000 		.word	.L41+1
 101 0090 7D040000 		.word	.L41+1
 102 0094 7D040000 		.word	.L41+1
 103 0098 7D040000 		.word	.L41+1
 104 009c 7D040000 		.word	.L41+1
 105 00a0 7D040000 		.word	.L41+1
 106 00a4 7D040000 		.word	.L41+1
 107 00a8 7D040000 		.word	.L41+1
 108 00ac 7D040000 		.word	.L41+1
 109 00b0 7D040000 		.word	.L41+1
 110 00b4 7D040000 		.word	.L41+1
 111 00b8 7D040000 		.word	.L41+1
 112 00bc 7D040000 		.word	.L41+1
 113 00c0 7D040000 		.word	.L41+1
 114 00c4 7D040000 		.word	.L41+1
 115 00c8 7D040000 		.word	.L41+1
 116 00cc 7D040000 		.word	.L41+1
 117 00d0 7D040000 		.word	.L41+1
 118 00d4 7D040000 		.word	.L41+1
 119 00d8 7D040000 		.word	.L41+1
 120 00dc 7D040000 		.word	.L41+1
 121 00e0 7D040000 		.word	.L41+1
 122 00e4 7D040000 		.word	.L41+1
 123 00e8 7D040000 		.word	.L41+1
 124 00ec 7D040000 		.word	.L41+1
 125 00f0 7D040000 		.word	.L41+1
 126 00f4 7D040000 		.word	.L41+1
 127 00f8 7D040000 		.word	.L41+1
 128 00fc 7D040000 		.word	.L41+1
 129 0100 7D040000 		.word	.L41+1
 130 0104 7D040000 		.word	.L41+1
 131 0108 7D040000 		.word	.L41+1
 132 010c 7D040000 		.word	.L41+1
 133 0110 7D040000 		.word	.L41+1
 134 0114 7D040000 		.word	.L41+1
 135 0118 7D040000 		.word	.L41+1
 136 011c 7D040000 		.word	.L41+1
 137 0120 7D040000 		.word	.L41+1
 138 0124 7D040000 		.word	.L41+1
 139 0128 7D040000 		.word	.L41+1
 140 012c 7D040000 		.word	.L41+1
 141 0130 7D040000 		.word	.L41+1
 142 0134 7D040000 		.word	.L41+1
 143 0138 7D040000 		.word	.L41+1
 144 013c 7D040000 		.word	.L41+1
 145 0140 7D040000 		.word	.L41+1
 146 0144 7D040000 		.word	.L41+1
 147 0148 7D040000 		.word	.L41+1
 148 014c 7D040000 		.word	.L41+1
 149 0150 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 5


 150 0154 7D040000 		.word	.L41+1
 151 0158 7D040000 		.word	.L41+1
 152 015c 7D040000 		.word	.L41+1
 153 0160 7D040000 		.word	.L41+1
 154 0164 7D040000 		.word	.L41+1
 155 0168 7D040000 		.word	.L41+1
 156 016c 7D040000 		.word	.L41+1
 157 0170 7D040000 		.word	.L41+1
 158 0174 7D040000 		.word	.L41+1
 159 0178 7D040000 		.word	.L41+1
 160 017c 7D040000 		.word	.L41+1
 161 0180 7D040000 		.word	.L41+1
 162 0184 7D040000 		.word	.L41+1
 163 0188 7D040000 		.word	.L41+1
 164 018c 7D040000 		.word	.L41+1
 165 0190 7D040000 		.word	.L41+1
 166 0194 7D040000 		.word	.L41+1
 167 0198 7D040000 		.word	.L41+1
 168 019c 7D040000 		.word	.L41+1
 169 01a0 7D040000 		.word	.L41+1
 170 01a4 7D040000 		.word	.L41+1
 171 01a8 7D040000 		.word	.L41+1
 172 01ac 7D040000 		.word	.L41+1
 173 01b0 7D040000 		.word	.L41+1
 174 01b4 7D040000 		.word	.L41+1
 175 01b8 7D040000 		.word	.L41+1
 176 01bc 7D040000 		.word	.L41+1
 177 01c0 7D040000 		.word	.L41+1
 178 01c4 7D040000 		.word	.L41+1
 179 01c8 7D040000 		.word	.L41+1
 180 01cc 7D040000 		.word	.L41+1
 181 01d0 7D040000 		.word	.L41+1
 182 01d4 7D040000 		.word	.L41+1
 183 01d8 7D040000 		.word	.L41+1
 184 01dc 7D040000 		.word	.L41+1
 185 01e0 7D040000 		.word	.L41+1
 186 01e4 7D040000 		.word	.L41+1
 187 01e8 7D040000 		.word	.L41+1
 188 01ec 7D040000 		.word	.L41+1
 189 01f0 7D040000 		.word	.L41+1
 190 01f4 7D040000 		.word	.L41+1
 191 01f8 7D040000 		.word	.L41+1
 192 01fc 7D040000 		.word	.L41+1
 193 0200 7D040000 		.word	.L41+1
 194 0204 7D040000 		.word	.L41+1
 195 0208 7D040000 		.word	.L41+1
 196 020c 7D040000 		.word	.L41+1
 197 0210 7D040000 		.word	.L41+1
 198 0214 7D040000 		.word	.L41+1
 199 0218 7D040000 		.word	.L41+1
 200 021c 7D040000 		.word	.L41+1
 201 0220 7D040000 		.word	.L41+1
 202 0224 7D040000 		.word	.L41+1
 203 0228 7D040000 		.word	.L41+1
 204 022c 7D040000 		.word	.L41+1
 205 0230 7D040000 		.word	.L41+1
 206 0234 7D040000 		.word	.L41+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 6


 207 0238 7D040000 		.word	.L41+1
 208 023c 7D040000 		.word	.L41+1
 209 0240 7D040000 		.word	.L41+1
 210 0244 7D040000 		.word	.L41+1
 211 0248 7D040000 		.word	.L41+1
 212 024c D5020000 		.word	.L16+1
 213 0250 0B030000 		.word	.L17+1
 214 0254 DB020000 		.word	.L18+1
 215 0258 17030000 		.word	.L19+1
 216 025c E1020000 		.word	.L20+1
 217 0260 ED020000 		.word	.L21+1
 218 0264 E7020000 		.word	.L22+1
 219 0268 7D040000 		.word	.L41+1
 220 026c 05030000 		.word	.L23+1
 221 0270 F9020000 		.word	.L24+1
 222 0274 7D040000 		.word	.L41+1
 223 0278 FF020000 		.word	.L25+1
 224 027c F3020000 		.word	.L26+1
 225 0280 7D040000 		.word	.L41+1
 226 0284 7D040000 		.word	.L41+1
 227 0288 7D040000 		.word	.L41+1
 228 028c 11030000 		.word	.L27+1
 229 0290 7D040000 		.word	.L41+1
 230 0294 7D040000 		.word	.L41+1
 231 0298 7D040000 		.word	.L41+1
 232 029c 7D040000 		.word	.L41+1
 233 02a0 7D040000 		.word	.L41+1
 234 02a4 7D040000 		.word	.L41+1
 235 02a8 7D040000 		.word	.L41+1
 236 02ac 7D040000 		.word	.L41+1
 237 02b0 7D040000 		.word	.L41+1
 238 02b4 7D040000 		.word	.L41+1
 239 02b8 7D040000 		.word	.L41+1
 240 02bc 7D040000 		.word	.L41+1
 241 02c0 7D040000 		.word	.L41+1
 242 02c4 7D040000 		.word	.L41+1
 243 02c8 7D040000 		.word	.L41+1
 244 02cc 7D040000 		.word	.L41+1
 245 02d0 77040000 		.word	.L28+1
 246              		.p2align 1
 247              	.L16:
  80:..\src/command_processing.c **** 
  81:..\src/command_processing.c **** //=============================================================     CMD_ACTIVATE
  82:..\src/command_processing.c ****         case CMD_ACTIVATE:
  83:..\src/command_processing.c ****             cmd_activate();
 248              		.loc 1 83 0
 249 02d4 FFF7FEFF 		bl	cmd_activate
  84:..\src/command_processing.c ****             break;
 250              		.loc 1 84 0
 251 02d8 D1E0     		b	.L1
 252              	.L18:
  85:..\src/command_processing.c **** 
  86:..\src/command_processing.c **** //===========================================================     CMD_SET_INPUTS
  87:..\src/command_processing.c **** 
  88:..\src/command_processing.c ****         case CMD_SET_INPUTS:
  89:..\src/command_processing.c ****             cmd_set_inputs();
 253              		.loc 1 89 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 7


 254 02da FFF7FEFF 		bl	cmd_set_inputs
  90:..\src/command_processing.c ****             break;
 255              		.loc 1 90 0
 256 02de CEE0     		b	.L1
 257              	.L20:
  91:..\src/command_processing.c **** 
  92:..\src/command_processing.c **** //=====================================================     CMD_GET_MEASUREMENTS
  93:..\src/command_processing.c **** 
  94:..\src/command_processing.c ****         case CMD_GET_MEASUREMENTS:
  95:..\src/command_processing.c ****             cmd_get_measurements();
 258              		.loc 1 95 0
 259 02e0 FFF7FEFF 		bl	cmd_get_measurements
  96:..\src/command_processing.c ****             break;
 260              		.loc 1 96 0
 261 02e4 CBE0     		b	.L1
 262              	.L22:
  97:..\src/command_processing.c **** 
  98:..\src/command_processing.c **** //=====================================================     CMD_GET_CURR_AND_MEAS
  99:..\src/command_processing.c **** 
 100:..\src/command_processing.c ****         case CMD_GET_CURR_AND_MEAS:
 101:..\src/command_processing.c ****             cmd_get_curr_and_meas();
 263              		.loc 1 101 0
 264 02e6 FFF7FEFF 		bl	cmd_get_curr_and_meas
 102:..\src/command_processing.c ****             break;
 265              		.loc 1 102 0
 266 02ea C8E0     		b	.L1
 267              	.L21:
 103:..\src/command_processing.c ****             
 104:..\src/command_processing.c **** //=========================================================     CMD_GET_CURRENTS
 105:..\src/command_processing.c **** 
 106:..\src/command_processing.c ****         case CMD_GET_CURRENTS:
 107:..\src/command_processing.c ****             cmd_get_currents();
 268              		.loc 1 107 0
 269 02ec FFF7FEFF 		bl	cmd_get_currents
 108:..\src/command_processing.c ****             break;
 270              		.loc 1 108 0
 271 02f0 C5E0     		b	.L1
 272              	.L26:
 109:..\src/command_processing.c **** 
 110:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 111:..\src/command_processing.c ****          
 112:..\src/command_processing.c ****         case CMD_GET_CURR_DIFF:
 113:..\src/command_processing.c ****             cmd_get_currents_for_cuff();
 273              		.loc 1 113 0
 274 02f2 FFF7FEFF 		bl	cmd_get_currents_for_cuff
 114:..\src/command_processing.c ****             break;
 275              		.loc 1 114 0
 276 02f6 C2E0     		b	.L1
 277              	.L24:
 115:..\src/command_processing.c ****             
 116:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 117:..\src/command_processing.c ****         
 118:..\src/command_processing.c ****         case CMD_GET_VELOCITIES:
 119:..\src/command_processing.c ****             cmd_get_velocities();
 278              		.loc 1 119 0
 279 02f8 FFF7FEFF 		bl	cmd_get_velocities
 120:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 8


 280              		.loc 1 120 0
 281 02fc BFE0     		b	.L1
 282              	.L25:
 121:..\src/command_processing.c ****             
 122:..\src/command_processing.c **** //=========================================================     CMD_GET_CURR_DIFF
 123:..\src/command_processing.c **** 
 124:..\src/command_processing.c ****         case CMD_GET_ACCEL:
 125:..\src/command_processing.c ****             cmd_get_accelerations();
 283              		.loc 1 125 0
 284 02fe FFF7FEFF 		bl	cmd_get_accelerations
 126:..\src/command_processing.c ****             break;
 285              		.loc 1 126 0
 286 0302 BCE0     		b	.L1
 287              	.L23:
 127:..\src/command_processing.c ****             
 128:..\src/command_processing.c **** //=========================================================     CMD_GET_EMG
 129:..\src/command_processing.c **** 
 130:..\src/command_processing.c ****         case CMD_GET_EMG:
 131:..\src/command_processing.c ****             cmd_get_emg();
 288              		.loc 1 131 0
 289 0304 FFF7FEFF 		bl	cmd_get_emg
 132:..\src/command_processing.c ****             break;
 290              		.loc 1 132 0
 291 0308 B9E0     		b	.L1
 292              	.L17:
 133:..\src/command_processing.c ****             
 134:..\src/command_processing.c **** //=========================================================     CMD_GET_ACTIVATE
 135:..\src/command_processing.c ****             
 136:..\src/command_processing.c ****         case CMD_GET_ACTIVATE:
 137:..\src/command_processing.c ****             cmd_get_activate();
 293              		.loc 1 137 0
 294 030a FFF7FEFF 		bl	cmd_get_activate
 138:..\src/command_processing.c ****             break;
 295              		.loc 1 138 0
 296 030e B6E0     		b	.L1
 297              	.L27:
 139:..\src/command_processing.c ****             
 140:..\src/command_processing.c **** //=========================================================     CMD_SET_BAUDRATE
 141:..\src/command_processing.c ****             
 142:..\src/command_processing.c ****         case CMD_SET_BAUDRATE:
 143:..\src/command_processing.c ****             cmd_set_baudrate();
 298              		.loc 1 143 0
 299 0310 FFF7FEFF 		bl	cmd_set_baudrate
 144:..\src/command_processing.c ****             break;  
 300              		.loc 1 144 0
 301 0314 B3E0     		b	.L1
 302              	.L19:
 145:..\src/command_processing.c ****             
 146:..\src/command_processing.c **** //============================================================     CMD_GET_INPUT
 147:..\src/command_processing.c **** 
 148:..\src/command_processing.c ****         case CMD_GET_INPUTS:
 149:..\src/command_processing.c ****             cmd_get_inputs();
 303              		.loc 1 149 0
 304 0316 FFF7FEFF 		bl	cmd_get_inputs
 150:..\src/command_processing.c ****             break;
 305              		.loc 1 150 0
 306 031a B0E0     		b	.L1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 9


 307              	.L11:
 151:..\src/command_processing.c **** 
 152:..\src/command_processing.c **** //=============================================================     CMD_GET_INFO
 153:..\src/command_processing.c **** 
 154:..\src/command_processing.c ****         case CMD_GET_INFO:
 155:..\src/command_processing.c ****             infoGet(  __REV16(*((uint16 *) &g_rx.buffer[1])) );
 308              		.loc 1 155 0
 309 031c 1C4B     		ldr	r3, .L42+4
 310 031e 1B88     		ldrh	r3, [r3]
 311 0320 FB60     		str	r3, [r7, #12]
 312              	.LBB6:
 313              	.LBB7:
 314              		.file 2 "Generated_Source\\PSoC5/cmsis_gcc.h"
   1:Generated_Source\PSoC5/cmsis_gcc.h **** /**************************************************************************//**
   2:Generated_Source\PSoC5/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Generated_Source\PSoC5/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Generated_Source\PSoC5/cmsis_gcc.h ****  * @version  V5.00
   5:Generated_Source\PSoC5/cmsis_gcc.h ****  * @date     28. October 2016
   6:Generated_Source\PSoC5/cmsis_gcc.h ****  ******************************************************************************/
   7:Generated_Source\PSoC5/cmsis_gcc.h **** /*
   8:Generated_Source\PSoC5/cmsis_gcc.h ****  * Copyright (c) 2009-2016 ARM Limited. All rights reserved.
   9:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  10:Generated_Source\PSoC5/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  12:Generated_Source\PSoC5/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Generated_Source\PSoC5/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Generated_Source\PSoC5/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  16:Generated_Source\PSoC5/cmsis_gcc.h ****  * http://www.apache.org/licenses/LICENSE-2.0
  17:Generated_Source\PSoC5/cmsis_gcc.h ****  *
  18:Generated_Source\PSoC5/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Generated_Source\PSoC5/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Generated_Source\PSoC5/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Generated_Source\PSoC5/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Generated_Source\PSoC5/cmsis_gcc.h ****  * limitations under the License.
  23:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  24:Generated_Source\PSoC5/cmsis_gcc.h **** 
  25:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Generated_Source\PSoC5/cmsis_gcc.h **** 
  28:Generated_Source\PSoC5/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Generated_Source\PSoC5/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Generated_Source\PSoC5/cmsis_gcc.h **** 
  34:Generated_Source\PSoC5/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  35:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ASM
  36:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ASM                     __asm
  37:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  38:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __INLINE
  39:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __INLINE                  inline
  40:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  41:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  42:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __STATIC_INLINE           static inline
  43:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  44:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 10


  45:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __NO_RETURN               __attribute__((noreturn))
  46:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  47:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __USED
  48:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __USED                    __attribute__((used))
  49:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  50:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   _WEAK
  51:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __WEAK                    __attribute__((weak))
  52:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  53:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32
  54:Generated_Source\PSoC5/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  55:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)     (((struct T_UINT32 *)(x))->v)
  56:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  57:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __ALIGNED
  58:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __ALIGNED(x)              __attribute__((aligned(x)))
  59:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  60:Generated_Source\PSoC5/cmsis_gcc.h **** #ifndef   __PACKED
  61:Generated_Source\PSoC5/cmsis_gcc.h ****   #define __PACKED                  __attribute__((packed, aligned(1)))
  62:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
  63:Generated_Source\PSoC5/cmsis_gcc.h **** 
  64:Generated_Source\PSoC5/cmsis_gcc.h **** 
  65:Generated_Source\PSoC5/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  66:Generated_Source\PSoC5/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  67:Generated_Source\PSoC5/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  68:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
  69:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  70:Generated_Source\PSoC5/cmsis_gcc.h **** 
  71:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  72:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  73:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  74:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  75:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  76:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_irq(void)
  77:Generated_Source\PSoC5/cmsis_gcc.h **** {
  78:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  79:Generated_Source\PSoC5/cmsis_gcc.h **** }
  80:Generated_Source\PSoC5/cmsis_gcc.h **** 
  81:Generated_Source\PSoC5/cmsis_gcc.h **** 
  82:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  83:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  84:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  85:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  86:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  87:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
  88:Generated_Source\PSoC5/cmsis_gcc.h **** {
  89:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  90:Generated_Source\PSoC5/cmsis_gcc.h **** }
  91:Generated_Source\PSoC5/cmsis_gcc.h **** 
  92:Generated_Source\PSoC5/cmsis_gcc.h **** 
  93:Generated_Source\PSoC5/cmsis_gcc.h **** /**
  94:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register
  95:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  96:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Control Register value
  97:Generated_Source\PSoC5/cmsis_gcc.h ****  */
  98:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_CONTROL(void)
  99:Generated_Source\PSoC5/cmsis_gcc.h **** {
 100:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 101:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 11


 102:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 103:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 104:Generated_Source\PSoC5/cmsis_gcc.h **** }
 105:Generated_Source\PSoC5/cmsis_gcc.h **** 
 106:Generated_Source\PSoC5/cmsis_gcc.h **** 
 107:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 108:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 109:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 110:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 111:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               non-secure Control Register value
 112:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 113:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_CONTROL_NS(void)
 114:Generated_Source\PSoC5/cmsis_gcc.h **** {
 115:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 116:Generated_Source\PSoC5/cmsis_gcc.h **** 
 117:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 118:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 119:Generated_Source\PSoC5/cmsis_gcc.h **** }
 120:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 121:Generated_Source\PSoC5/cmsis_gcc.h **** 
 122:Generated_Source\PSoC5/cmsis_gcc.h **** 
 123:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 124:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register
 125:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 126:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 127:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 128:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_CONTROL(uint32_t control)
 129:Generated_Source\PSoC5/cmsis_gcc.h **** {
 130:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 131:Generated_Source\PSoC5/cmsis_gcc.h **** }
 132:Generated_Source\PSoC5/cmsis_gcc.h **** 
 133:Generated_Source\PSoC5/cmsis_gcc.h **** 
 134:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 135:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 136:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 137:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 138:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 139:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 140:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_CONTROL_NS(uint32_t control)
 141:Generated_Source\PSoC5/cmsis_gcc.h **** {
 142:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 143:Generated_Source\PSoC5/cmsis_gcc.h **** }
 144:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 145:Generated_Source\PSoC5/cmsis_gcc.h **** 
 146:Generated_Source\PSoC5/cmsis_gcc.h **** 
 147:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 148:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get IPSR Register
 149:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 150:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               IPSR Register value
 151:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 152:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_IPSR(void)
 153:Generated_Source\PSoC5/cmsis_gcc.h **** {
 154:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 155:Generated_Source\PSoC5/cmsis_gcc.h **** 
 156:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 157:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 158:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 12


 159:Generated_Source\PSoC5/cmsis_gcc.h **** 
 160:Generated_Source\PSoC5/cmsis_gcc.h **** 
 161:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 162:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get APSR Register
 163:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 164:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               APSR Register value
 165:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 166:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_APSR(void)
 167:Generated_Source\PSoC5/cmsis_gcc.h **** {
 168:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 169:Generated_Source\PSoC5/cmsis_gcc.h **** 
 170:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 171:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 172:Generated_Source\PSoC5/cmsis_gcc.h **** }
 173:Generated_Source\PSoC5/cmsis_gcc.h **** 
 174:Generated_Source\PSoC5/cmsis_gcc.h **** 
 175:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 176:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get xPSR Register
 177:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 178:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               xPSR Register value
 179:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 180:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_xPSR(void)
 181:Generated_Source\PSoC5/cmsis_gcc.h **** {
 182:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 183:Generated_Source\PSoC5/cmsis_gcc.h **** 
 184:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 185:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 186:Generated_Source\PSoC5/cmsis_gcc.h **** }
 187:Generated_Source\PSoC5/cmsis_gcc.h **** 
 188:Generated_Source\PSoC5/cmsis_gcc.h **** 
 189:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 190:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 191:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 192:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 193:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 194:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSP(void)
 195:Generated_Source\PSoC5/cmsis_gcc.h **** {
 196:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 197:Generated_Source\PSoC5/cmsis_gcc.h **** 
 198:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 199:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 200:Generated_Source\PSoC5/cmsis_gcc.h **** }
 201:Generated_Source\PSoC5/cmsis_gcc.h **** 
 202:Generated_Source\PSoC5/cmsis_gcc.h **** 
 203:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 204:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 205:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 206:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 207:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSP Register value
 208:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 209:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSP_NS(void)
 210:Generated_Source\PSoC5/cmsis_gcc.h **** {
 211:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 212:Generated_Source\PSoC5/cmsis_gcc.h **** 
 213:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 214:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 215:Generated_Source\PSoC5/cmsis_gcc.h **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 13


 216:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 217:Generated_Source\PSoC5/cmsis_gcc.h **** 
 218:Generated_Source\PSoC5/cmsis_gcc.h **** 
 219:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 220:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 221:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 222:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 223:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 224:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 225:Generated_Source\PSoC5/cmsis_gcc.h **** {
 226:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : "sp");
 227:Generated_Source\PSoC5/cmsis_gcc.h **** }
 228:Generated_Source\PSoC5/cmsis_gcc.h **** 
 229:Generated_Source\PSoC5/cmsis_gcc.h **** 
 230:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 231:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 232:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 233:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 234:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 235:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 236:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 237:Generated_Source\PSoC5/cmsis_gcc.h **** {
 238:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : "sp");
 239:Generated_Source\PSoC5/cmsis_gcc.h **** }
 240:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 241:Generated_Source\PSoC5/cmsis_gcc.h **** 
 242:Generated_Source\PSoC5/cmsis_gcc.h **** 
 243:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 244:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 245:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 246:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 247:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 248:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSP(void)
 249:Generated_Source\PSoC5/cmsis_gcc.h **** {
 250:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 251:Generated_Source\PSoC5/cmsis_gcc.h **** 
 252:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 253:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 254:Generated_Source\PSoC5/cmsis_gcc.h **** }
 255:Generated_Source\PSoC5/cmsis_gcc.h **** 
 256:Generated_Source\PSoC5/cmsis_gcc.h **** 
 257:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 258:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 259:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 260:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 261:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSP Register value
 262:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 263:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSP_NS(void)
 264:Generated_Source\PSoC5/cmsis_gcc.h **** {
 265:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 266:Generated_Source\PSoC5/cmsis_gcc.h **** 
 267:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 268:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 269:Generated_Source\PSoC5/cmsis_gcc.h **** }
 270:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 271:Generated_Source\PSoC5/cmsis_gcc.h **** 
 272:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 14


 273:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 274:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 275:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 276:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 277:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 278:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 279:Generated_Source\PSoC5/cmsis_gcc.h **** {
 280:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : "sp");
 281:Generated_Source\PSoC5/cmsis_gcc.h **** }
 282:Generated_Source\PSoC5/cmsis_gcc.h **** 
 283:Generated_Source\PSoC5/cmsis_gcc.h **** 
 284:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 285:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 286:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 287:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 288:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 289:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 290:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 291:Generated_Source\PSoC5/cmsis_gcc.h **** {
 292:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : "sp");
 293:Generated_Source\PSoC5/cmsis_gcc.h **** }
 294:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 295:Generated_Source\PSoC5/cmsis_gcc.h **** 
 296:Generated_Source\PSoC5/cmsis_gcc.h **** 
 297:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 298:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask
 299:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 300:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 301:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 302:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 303:Generated_Source\PSoC5/cmsis_gcc.h **** {
 304:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 305:Generated_Source\PSoC5/cmsis_gcc.h **** 
 306:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 307:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 308:Generated_Source\PSoC5/cmsis_gcc.h **** }
 309:Generated_Source\PSoC5/cmsis_gcc.h **** 
 310:Generated_Source\PSoC5/cmsis_gcc.h **** 
 311:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 312:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 313:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 314:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 315:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Priority Mask value
 316:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 317:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PRIMASK_NS(void)
 318:Generated_Source\PSoC5/cmsis_gcc.h **** {
 319:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 320:Generated_Source\PSoC5/cmsis_gcc.h **** 
 321:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 322:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 323:Generated_Source\PSoC5/cmsis_gcc.h **** }
 324:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 325:Generated_Source\PSoC5/cmsis_gcc.h **** 
 326:Generated_Source\PSoC5/cmsis_gcc.h **** 
 327:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 328:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask
 329:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 15


 330:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 331:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 332:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 333:Generated_Source\PSoC5/cmsis_gcc.h **** {
 334:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 335:Generated_Source\PSoC5/cmsis_gcc.h **** }
 336:Generated_Source\PSoC5/cmsis_gcc.h **** 
 337:Generated_Source\PSoC5/cmsis_gcc.h **** 
 338:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 339:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 340:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 341:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 342:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 343:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 344:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 345:Generated_Source\PSoC5/cmsis_gcc.h **** {
 346:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 347:Generated_Source\PSoC5/cmsis_gcc.h **** }
 348:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 349:Generated_Source\PSoC5/cmsis_gcc.h **** 
 350:Generated_Source\PSoC5/cmsis_gcc.h **** 
 351:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 352:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 353:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 354:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 355:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Enable FIQ
 356:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 357:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 358:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 359:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __enable_fault_irq(void)
 360:Generated_Source\PSoC5/cmsis_gcc.h **** {
 361:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 362:Generated_Source\PSoC5/cmsis_gcc.h **** }
 363:Generated_Source\PSoC5/cmsis_gcc.h **** 
 364:Generated_Source\PSoC5/cmsis_gcc.h **** 
 365:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 366:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Disable FIQ
 367:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 368:Generated_Source\PSoC5/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 369:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 370:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __disable_fault_irq(void)
 371:Generated_Source\PSoC5/cmsis_gcc.h **** {
 372:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 373:Generated_Source\PSoC5/cmsis_gcc.h **** }
 374:Generated_Source\PSoC5/cmsis_gcc.h **** 
 375:Generated_Source\PSoC5/cmsis_gcc.h **** 
 376:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 377:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority
 378:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 379:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 380:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 381:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 382:Generated_Source\PSoC5/cmsis_gcc.h **** {
 383:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 384:Generated_Source\PSoC5/cmsis_gcc.h **** 
 385:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 386:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 16


 387:Generated_Source\PSoC5/cmsis_gcc.h **** }
 388:Generated_Source\PSoC5/cmsis_gcc.h **** 
 389:Generated_Source\PSoC5/cmsis_gcc.h **** 
 390:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 391:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 392:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 393:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 394:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Base Priority register value
 395:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 396:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_BASEPRI_NS(void)
 397:Generated_Source\PSoC5/cmsis_gcc.h **** {
 398:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 399:Generated_Source\PSoC5/cmsis_gcc.h **** 
 400:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 401:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 402:Generated_Source\PSoC5/cmsis_gcc.h **** }
 403:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 404:Generated_Source\PSoC5/cmsis_gcc.h **** 
 405:Generated_Source\PSoC5/cmsis_gcc.h **** 
 406:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 407:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority
 408:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 409:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 410:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 411:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI(uint32_t basePri)
 412:Generated_Source\PSoC5/cmsis_gcc.h **** {
 413:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 414:Generated_Source\PSoC5/cmsis_gcc.h **** }
 415:Generated_Source\PSoC5/cmsis_gcc.h **** 
 416:Generated_Source\PSoC5/cmsis_gcc.h **** 
 417:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 419:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 420:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 421:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 422:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 423:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 424:Generated_Source\PSoC5/cmsis_gcc.h **** {
 425:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 426:Generated_Source\PSoC5/cmsis_gcc.h **** }
 427:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 428:Generated_Source\PSoC5/cmsis_gcc.h **** 
 429:Generated_Source\PSoC5/cmsis_gcc.h **** 
 430:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 431:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 432:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 433:Generated_Source\PSoC5/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 434:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 435:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 436:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t basePri)
 437:Generated_Source\PSoC5/cmsis_gcc.h **** {
 438:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 439:Generated_Source\PSoC5/cmsis_gcc.h **** }
 440:Generated_Source\PSoC5/cmsis_gcc.h **** 
 441:Generated_Source\PSoC5/cmsis_gcc.h **** 
 442:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 443:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 17


 444:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 445:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 446:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 447:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 448:Generated_Source\PSoC5/cmsis_gcc.h **** {
 449:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 450:Generated_Source\PSoC5/cmsis_gcc.h **** 
 451:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 452:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 453:Generated_Source\PSoC5/cmsis_gcc.h **** }
 454:Generated_Source\PSoC5/cmsis_gcc.h **** 
 455:Generated_Source\PSoC5/cmsis_gcc.h **** 
 456:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 457:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 458:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 459:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 460:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Fault Mask register value
 461:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 462:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 463:Generated_Source\PSoC5/cmsis_gcc.h **** {
 464:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 465:Generated_Source\PSoC5/cmsis_gcc.h **** 
 466:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 467:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 468:Generated_Source\PSoC5/cmsis_gcc.h **** }
 469:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 470:Generated_Source\PSoC5/cmsis_gcc.h **** 
 471:Generated_Source\PSoC5/cmsis_gcc.h **** 
 472:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 473:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask
 474:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 475:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 476:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 477:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 478:Generated_Source\PSoC5/cmsis_gcc.h **** {
 479:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 480:Generated_Source\PSoC5/cmsis_gcc.h **** }
 481:Generated_Source\PSoC5/cmsis_gcc.h **** 
 482:Generated_Source\PSoC5/cmsis_gcc.h **** 
 483:Generated_Source\PSoC5/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 484:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 485:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 486:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 487:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 488:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 489:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 490:Generated_Source\PSoC5/cmsis_gcc.h **** {
 491:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 492:Generated_Source\PSoC5/cmsis_gcc.h **** }
 493:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 494:Generated_Source\PSoC5/cmsis_gcc.h **** 
 495:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 496:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 497:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 498:Generated_Source\PSoC5/cmsis_gcc.h **** 
 499:Generated_Source\PSoC5/cmsis_gcc.h **** 
 500:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 18


 501:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    )
 502:Generated_Source\PSoC5/cmsis_gcc.h **** 
 503:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 504:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 505:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 506:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 507:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 508:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_PSPLIM(void)
 509:Generated_Source\PSoC5/cmsis_gcc.h **** {
 510:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 511:Generated_Source\PSoC5/cmsis_gcc.h **** 
 512:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 513:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 514:Generated_Source\PSoC5/cmsis_gcc.h **** }
 515:Generated_Source\PSoC5/cmsis_gcc.h **** 
 516:Generated_Source\PSoC5/cmsis_gcc.h **** 
 517:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 518:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 519:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 520:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 521:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 522:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               PSPLIM Register value
 523:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 524:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_PSPLIM_NS(void)
 525:Generated_Source\PSoC5/cmsis_gcc.h **** {
 526:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 527:Generated_Source\PSoC5/cmsis_gcc.h **** 
 528:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 529:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 530:Generated_Source\PSoC5/cmsis_gcc.h **** }
 531:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 532:Generated_Source\PSoC5/cmsis_gcc.h **** 
 533:Generated_Source\PSoC5/cmsis_gcc.h **** 
 534:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 535:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 536:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 537:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 538:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 539:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 540:Generated_Source\PSoC5/cmsis_gcc.h **** {
 541:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 542:Generated_Source\PSoC5/cmsis_gcc.h **** }
 543:Generated_Source\PSoC5/cmsis_gcc.h **** 
 544:Generated_Source\PSoC5/cmsis_gcc.h **** 
 545:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 546:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 547:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 548:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 549:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 550:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 551:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 552:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 553:Generated_Source\PSoC5/cmsis_gcc.h **** {
 554:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 555:Generated_Source\PSoC5/cmsis_gcc.h **** }
 556:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 557:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 19


 558:Generated_Source\PSoC5/cmsis_gcc.h **** 
 559:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 560:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 561:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 562:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 563:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 564:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_MSPLIM(void)
 565:Generated_Source\PSoC5/cmsis_gcc.h **** {
 566:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 567:Generated_Source\PSoC5/cmsis_gcc.h **** 
 568:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 569:Generated_Source\PSoC5/cmsis_gcc.h **** 
 570:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 571:Generated_Source\PSoC5/cmsis_gcc.h **** }
 572:Generated_Source\PSoC5/cmsis_gcc.h **** 
 573:Generated_Source\PSoC5/cmsis_gcc.h **** 
 574:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 575:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 576:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 577:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 578:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 579:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               MSPLIM Register value
 580:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 581:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __TZ_get_MSPLIM_NS(void)
 582:Generated_Source\PSoC5/cmsis_gcc.h **** {
 583:Generated_Source\PSoC5/cmsis_gcc.h ****   register uint32_t result;
 584:Generated_Source\PSoC5/cmsis_gcc.h **** 
 585:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 586:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 587:Generated_Source\PSoC5/cmsis_gcc.h **** }
 588:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 589:Generated_Source\PSoC5/cmsis_gcc.h **** 
 590:Generated_Source\PSoC5/cmsis_gcc.h **** 
 591:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 592:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 593:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 594:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 595:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 596:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 597:Generated_Source\PSoC5/cmsis_gcc.h **** {
 598:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 599:Generated_Source\PSoC5/cmsis_gcc.h **** }
 600:Generated_Source\PSoC5/cmsis_gcc.h **** 
 601:Generated_Source\PSoC5/cmsis_gcc.h **** 
 602:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3)) && \
 603:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 604:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 605:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 606:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 607:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 608:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 609:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 610:Generated_Source\PSoC5/cmsis_gcc.h **** {
 611:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 612:Generated_Source\PSoC5/cmsis_gcc.h **** }
 613:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 614:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 20


 615:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1U)) || \
 616:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1U))    ) */
 617:Generated_Source\PSoC5/cmsis_gcc.h **** 
 618:Generated_Source\PSoC5/cmsis_gcc.h **** 
 619:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 620:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 621:Generated_Source\PSoC5/cmsis_gcc.h **** 
 622:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 623:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Get FPSCR
 624:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 625:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 626:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 627:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __get_FPSCR(void)
 628:Generated_Source\PSoC5/cmsis_gcc.h **** {
 629:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 630:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 631:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 632:Generated_Source\PSoC5/cmsis_gcc.h **** 
 633:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                 /* Empty asm statement works as a scheduling
 634:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 635:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 636:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 637:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 638:Generated_Source\PSoC5/cmsis_gcc.h ****    return(0U);
 639:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 640:Generated_Source\PSoC5/cmsis_gcc.h **** }
 641:Generated_Source\PSoC5/cmsis_gcc.h **** 
 642:Generated_Source\PSoC5/cmsis_gcc.h **** 
 643:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 644:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Set FPSCR
 645:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 646:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 647:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 648:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 649:Generated_Source\PSoC5/cmsis_gcc.h **** {
 650:Generated_Source\PSoC5/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 651:Generated_Source\PSoC5/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 652:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");                                           /* Empty asm statement works as a 
 653:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 654:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("");
 655:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 656:Generated_Source\PSoC5/cmsis_gcc.h **** }
 657:Generated_Source\PSoC5/cmsis_gcc.h **** 
 658:Generated_Source\PSoC5/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 659:Generated_Source\PSoC5/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 660:Generated_Source\PSoC5/cmsis_gcc.h **** 
 661:Generated_Source\PSoC5/cmsis_gcc.h **** 
 662:Generated_Source\PSoC5/cmsis_gcc.h **** 
 663:Generated_Source\PSoC5/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 664:Generated_Source\PSoC5/cmsis_gcc.h **** 
 665:Generated_Source\PSoC5/cmsis_gcc.h **** 
 666:Generated_Source\PSoC5/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 667:Generated_Source\PSoC5/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 668:Generated_Source\PSoC5/cmsis_gcc.h ****   Access to dedicated instructions
 669:Generated_Source\PSoC5/cmsis_gcc.h ****   @{
 670:Generated_Source\PSoC5/cmsis_gcc.h **** */
 671:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 21


 672:Generated_Source\PSoC5/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 673:Generated_Source\PSoC5/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 674:Generated_Source\PSoC5/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 675:Generated_Source\PSoC5/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 676:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 677:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 678:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 679:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 680:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 681:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 682:Generated_Source\PSoC5/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 683:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 684:Generated_Source\PSoC5/cmsis_gcc.h **** 
 685:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 686:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   No Operation
 687:Generated_Source\PSoC5/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 688:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 689:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 690:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 691:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("nop");
 692:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 693:Generated_Source\PSoC5/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")       /* This implementation gen
 694:Generated_Source\PSoC5/cmsis_gcc.h **** 
 695:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 696:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Interrupt
 697:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 698:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 699:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 700:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 701:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfi");
 702:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 703:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")       /* This implementation gen
 704:Generated_Source\PSoC5/cmsis_gcc.h **** 
 705:Generated_Source\PSoC5/cmsis_gcc.h **** 
 706:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 707:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Wait For Event
 708:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 709:Generated_Source\PSoC5/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 710:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 711:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 712:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 713:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("wfe");
 714:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 715:Generated_Source\PSoC5/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")       /* This implementation gen
 716:Generated_Source\PSoC5/cmsis_gcc.h **** 
 717:Generated_Source\PSoC5/cmsis_gcc.h **** 
 718:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 719:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Send Event
 720:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 721:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 722:Generated_Source\PSoC5/cmsis_gcc.h **** //__attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 723:Generated_Source\PSoC5/cmsis_gcc.h **** //{
 724:Generated_Source\PSoC5/cmsis_gcc.h **** //  __ASM volatile ("sev");
 725:Generated_Source\PSoC5/cmsis_gcc.h **** //}
 726:Generated_Source\PSoC5/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")       /* This implementation gen
 727:Generated_Source\PSoC5/cmsis_gcc.h **** 
 728:Generated_Source\PSoC5/cmsis_gcc.h **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 22


 729:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 730:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 731:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 732:Generated_Source\PSoC5/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 733:Generated_Source\PSoC5/cmsis_gcc.h ****            after the instruction has been completed.
 734:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 735:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 736:Generated_Source\PSoC5/cmsis_gcc.h **** {
 737:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 738:Generated_Source\PSoC5/cmsis_gcc.h **** }
 739:Generated_Source\PSoC5/cmsis_gcc.h **** 
 740:Generated_Source\PSoC5/cmsis_gcc.h **** 
 741:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 742:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 743:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 744:Generated_Source\PSoC5/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 745:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 746:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 747:Generated_Source\PSoC5/cmsis_gcc.h **** {
 748:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 749:Generated_Source\PSoC5/cmsis_gcc.h **** }
 750:Generated_Source\PSoC5/cmsis_gcc.h **** 
 751:Generated_Source\PSoC5/cmsis_gcc.h **** 
 752:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 753:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Data Memory Barrier
 754:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 755:Generated_Source\PSoC5/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 756:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 757:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 758:Generated_Source\PSoC5/cmsis_gcc.h **** {
 759:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 760:Generated_Source\PSoC5/cmsis_gcc.h **** }
 761:Generated_Source\PSoC5/cmsis_gcc.h **** 
 762:Generated_Source\PSoC5/cmsis_gcc.h **** 
 763:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 764:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 765:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 766:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 767:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 768:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 769:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 770:Generated_Source\PSoC5/cmsis_gcc.h **** {
 771:Generated_Source\PSoC5/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 772:Generated_Source\PSoC5/cmsis_gcc.h ****   return __builtin_bswap32(value);
 773:Generated_Source\PSoC5/cmsis_gcc.h **** #else
 774:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 775:Generated_Source\PSoC5/cmsis_gcc.h **** 
 776:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 777:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 778:Generated_Source\PSoC5/cmsis_gcc.h **** #endif
 779:Generated_Source\PSoC5/cmsis_gcc.h **** }
 780:Generated_Source\PSoC5/cmsis_gcc.h **** 
 781:Generated_Source\PSoC5/cmsis_gcc.h **** 
 782:Generated_Source\PSoC5/cmsis_gcc.h **** /**
 783:Generated_Source\PSoC5/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 784:Generated_Source\PSoC5/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 785:Generated_Source\PSoC5/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 23


 786:Generated_Source\PSoC5/cmsis_gcc.h ****   \return               Reversed value
 787:Generated_Source\PSoC5/cmsis_gcc.h ****  */
 788:Generated_Source\PSoC5/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 789:Generated_Source\PSoC5/cmsis_gcc.h **** {
 790:Generated_Source\PSoC5/cmsis_gcc.h ****   uint32_t result;
 791:Generated_Source\PSoC5/cmsis_gcc.h **** 
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 315              		.loc 2 792 0
 316 0322 FB68     		ldr	r3, [r7, #12]
 317              		.syntax unified
 318              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 319 0324 5BBA     		rev16 r3, r3
 320              	@ 0 "" 2
 321              		.thumb
 322              		.syntax unified
 323 0326 BB60     		str	r3, [r7, #8]
 793:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 324              		.loc 2 793 0
 325 0328 BB68     		ldr	r3, [r7, #8]
 326              	.LBE7:
 327              	.LBE6:
 328              		.loc 1 155 0
 329 032a 9BB2     		uxth	r3, r3
 330 032c 1846     		mov	r0, r3
 331 032e FFF7FEFF 		bl	infoGet
 156:..\src/command_processing.c ****             break;
 332              		.loc 1 156 0
 333 0332 A4E0     		b	.L1
 334              	.L7:
 157:..\src/command_processing.c **** 
 158:..\src/command_processing.c **** //============================================================     CMD_SET_PARAM
 159:..\src/command_processing.c **** 
 160:..\src/command_processing.c ****         case CMD_SET_ZEROS:
 161:..\src/command_processing.c ****             setZeros();
 335              		.loc 1 161 0
 336 0334 FFF7FEFF 		bl	setZeros
 162:..\src/command_processing.c ****             break;
 337              		.loc 1 162 0
 338 0338 A1E0     		b	.L1
 339              	.L14:
 163:..\src/command_processing.c **** 
 164:..\src/command_processing.c **** //============================================================     CMD_GET_PARAM
 165:..\src/command_processing.c **** 
 166:..\src/command_processing.c ****         case CMD_GET_PARAM_LIST:
 167:..\src/command_processing.c ****             manage_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 340              		.loc 1 167 0
 341 033a 154B     		ldr	r3, .L42+4
 342 033c 1B88     		ldrh	r3, [r3]
 343 033e 3B61     		str	r3, [r7, #16]
 344              	.LBB8:
 345              	.LBB9:
 792:Generated_Source\PSoC5/cmsis_gcc.h ****   return(result);
 346              		.loc 2 792 0
 347 0340 3B69     		ldr	r3, [r7, #16]
 348              		.syntax unified
 349              	@ 792 "Generated_Source\PSoC5/cmsis_gcc.h" 1
 350 0342 5BBA     		rev16 r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 24


 351              	@ 0 "" 2
 352              		.thumb
 353              		.syntax unified
 354 0344 7B60     		str	r3, [r7, #4]
 355              		.loc 2 793 0
 356 0346 7B68     		ldr	r3, [r7, #4]
 357              	.LBE9:
 358              	.LBE8:
 359              		.loc 1 167 0
 360 0348 9BB2     		uxth	r3, r3
 361 034a 1846     		mov	r0, r3
 362 034c FFF7FEFF 		bl	manage_param_list
 168:..\src/command_processing.c ****             //get_IMU_param_list( __REV16(*((uint16 *) &g_rx.buffer[1])) );
 169:..\src/command_processing.c ****             break;
 363              		.loc 1 169 0
 364 0350 95E0     		b	.L1
 365              	.L5:
 170:..\src/command_processing.c **** 
 171:..\src/command_processing.c **** //=================================================================     CMD_PING
 172:..\src/command_processing.c ****             
 173:..\src/command_processing.c ****         case CMD_PING:
 174:..\src/command_processing.c ****             cmd_ping();
 366              		.loc 1 174 0
 367 0352 FFF7FEFF 		bl	cmd_ping
 175:..\src/command_processing.c ****             break;
 368              		.loc 1 175 0
 369 0356 92E0     		b	.L1
 370              	.L8:
 176:..\src/command_processing.c **** 
 177:..\src/command_processing.c **** //=========================================================     CMD_STORE_PARAMS
 178:..\src/command_processing.c ****             
 179:..\src/command_processing.c ****         case CMD_STORE_PARAMS:
 180:..\src/command_processing.c ****             cmd_store_params();
 371              		.loc 1 180 0
 372 0358 FFF7FEFF 		bl	cmd_store_params
 181:..\src/command_processing.c ****             break;
 373              		.loc 1 181 0
 374 035c 8FE0     		b	.L1
 375              	.L9:
 182:..\src/command_processing.c **** 
 183:..\src/command_processing.c **** //=================================================     CMD_STORE_DEFAULT_PARAMS
 184:..\src/command_processing.c **** 
 185:..\src/command_processing.c ****         case CMD_STORE_DEFAULT_PARAMS:
 186:..\src/command_processing.c ****             if(memStore(DEFAULT_EEPROM_DISPLACEMENT))
 376              		.loc 1 186 0
 377 035e 3220     		movs	r0, #50
 378 0360 FFF7FEFF 		bl	memStore
 379 0364 0346     		mov	r3, r0
 380 0366 002B     		cmp	r3, #0
 381 0368 03D0     		beq	.L31
 187:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 382              		.loc 1 187 0
 383 036a 0120     		movs	r0, #1
 384 036c FFF7FEFF 		bl	sendAcknowledgment
 188:..\src/command_processing.c ****             else
 189:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 190:..\src/command_processing.c ****             break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 25


 385              		.loc 1 190 0
 386 0370 85E0     		b	.L1
 387              	.L31:
 189:..\src/command_processing.c ****             break;
 388              		.loc 1 189 0
 389 0372 0020     		movs	r0, #0
 390 0374 FFF7FEFF 		bl	sendAcknowledgment
 391              		.loc 1 190 0
 392 0378 81E0     		b	.L1
 393              	.L10:
 191:..\src/command_processing.c **** 
 192:..\src/command_processing.c **** //=======================================================     CMD_RESTORE_PARAMS
 193:..\src/command_processing.c **** 
 194:..\src/command_processing.c ****         case CMD_RESTORE_PARAMS:
 195:..\src/command_processing.c ****             if(memRestore())
 394              		.loc 1 195 0
 395 037a FFF7FEFF 		bl	memRestore
 396 037e 0346     		mov	r3, r0
 397 0380 002B     		cmp	r3, #0
 398 0382 07D0     		beq	.L33
 196:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 399              		.loc 1 196 0
 400 0384 0120     		movs	r0, #1
 401 0386 FFF7FEFF 		bl	sendAcknowledgment
 197:..\src/command_processing.c ****             else
 198:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 199:..\src/command_processing.c ****             break;
 402              		.loc 1 199 0
 403 038a 78E0     		b	.L1
 404              	.L43:
 405              		.align	2
 406              	.L42:
 407 038c 00000000 		.word	g_rx
 408 0390 01000000 		.word	g_rx+1
 409              	.L33:
 198:..\src/command_processing.c ****             break;
 410              		.loc 1 198 0
 411 0394 0020     		movs	r0, #0
 412 0396 FFF7FEFF 		bl	sendAcknowledgment
 413              		.loc 1 199 0
 414 039a 70E0     		b	.L1
 415              	.L13:
 200:..\src/command_processing.c **** 
 201:..\src/command_processing.c **** //=============================================================     CMD_INIT_MEM
 202:..\src/command_processing.c **** 
 203:..\src/command_processing.c ****         case CMD_INIT_MEM:
 204:..\src/command_processing.c ****             if(memInit())
 416              		.loc 1 204 0
 417 039c FFF7FEFF 		bl	memInit
 418 03a0 0346     		mov	r3, r0
 419 03a2 002B     		cmp	r3, #0
 420 03a4 03D0     		beq	.L35
 205:..\src/command_processing.c ****                 sendAcknowledgment(ACK_OK);
 421              		.loc 1 205 0
 422 03a6 0120     		movs	r0, #1
 423 03a8 FFF7FEFF 		bl	sendAcknowledgment
 206:..\src/command_processing.c ****             else
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 26


 207:..\src/command_processing.c ****                 sendAcknowledgment(ACK_ERROR);
 208:..\src/command_processing.c ****             break;
 424              		.loc 1 208 0
 425 03ac 67E0     		b	.L1
 426              	.L35:
 207:..\src/command_processing.c ****             break;
 427              		.loc 1 207 0
 428 03ae 0020     		movs	r0, #0
 429 03b0 FFF7FEFF 		bl	sendAcknowledgment
 430              		.loc 1 208 0
 431 03b4 63E0     		b	.L1
 432              	.L12:
 209:..\src/command_processing.c **** 
 210:..\src/command_processing.c **** //===========================================================     CMD_BOOTLOADER
 211:..\src/command_processing.c **** 
 212:..\src/command_processing.c ****         case CMD_BOOTLOADER:
 213:..\src/command_processing.c ****             //Not sure if ACK_OK is correct, should check
 214:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 433              		.loc 1 214 0
 434 03b6 0120     		movs	r0, #1
 435 03b8 FFF7FEFF 		bl	sendAcknowledgment
 215:..\src/command_processing.c ****             CyDelay(1000);
 436              		.loc 1 215 0
 437 03bc 4FF47A70 		mov	r0, #1000
 438 03c0 FFF7FEFF 		bl	CyDelay
 216:..\src/command_processing.c ****             FTDI_ENABLE_REG_Write(0x00);
 439              		.loc 1 216 0
 440 03c4 0020     		movs	r0, #0
 441 03c6 FFF7FEFF 		bl	FTDI_ENABLE_REG_Write
 217:..\src/command_processing.c ****             CyDelay(1000);
 442              		.loc 1 217 0
 443 03ca 4FF47A70 		mov	r0, #1000
 444 03ce FFF7FEFF 		bl	CyDelay
 218:..\src/command_processing.c ****             Bootloadable_Load();
 445              		.loc 1 218 0
 446 03d2 FFF7FEFF 		bl	Bootloadable_Load
 219:..\src/command_processing.c ****             break;
 447              		.loc 1 219 0
 448 03d6 52E0     		b	.L1
 449              	.L15:
 220:..\src/command_processing.c **** 
 221:..\src/command_processing.c **** //============================================================     CMD_HAND_CALIBRATE
 222:..\src/command_processing.c **** 
 223:..\src/command_processing.c ****         case CMD_HAND_CALIBRATE:
 224:..\src/command_processing.c ****             calib.speed = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 450              		.loc 1 224 0
 451 03d8 2A4B     		ldr	r3, .L44
 452 03da 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 453 03dc 1B02     		lsls	r3, r3, #8
 454 03de 1AB2     		sxth	r2, r3
 455 03e0 284B     		ldr	r3, .L44
 456 03e2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 457 03e4 1BB2     		sxth	r3, r3
 458 03e6 1343     		orrs	r3, r3, r2
 459 03e8 1AB2     		sxth	r2, r3
 460 03ea 274B     		ldr	r3, .L44+4
 461 03ec 5A80     		strh	r2, [r3, #2]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 27


 225:..\src/command_processing.c ****             calib.repetitions = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 462              		.loc 1 225 0
 463 03ee 254B     		ldr	r3, .L44
 464 03f0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 465 03f2 1B02     		lsls	r3, r3, #8
 466 03f4 1AB2     		sxth	r2, r3
 467 03f6 234B     		ldr	r3, .L44
 468 03f8 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 469 03fa 1BB2     		sxth	r3, r3
 470 03fc 1343     		orrs	r3, r3, r2
 471 03fe 1AB2     		sxth	r2, r3
 472 0400 214B     		ldr	r3, .L44+4
 473 0402 9A80     		strh	r2, [r3, #4]	@ movhi
 226:..\src/command_processing.c ****             //calib.speed = *((int16 *) &g_rx.buffer[1]);
 227:..\src/command_processing.c ****             //calib.repetitions = *((int16 *) &g_rx.buffer[3]);
 228:..\src/command_processing.c ****             
 229:..\src/command_processing.c ****             if(calib.speed == -1 && calib.repetitions == -1) {
 474              		.loc 1 229 0
 475 0404 204B     		ldr	r3, .L44+4
 476 0406 B3F90230 		ldrsh	r3, [r3, #2]
 477 040a B3F1FF3F 		cmp	r3, #-1
 478 040e 0FD1     		bne	.L37
 479              		.loc 1 229 0 is_stmt 0 discriminator 1
 480 0410 1D4B     		ldr	r3, .L44+4
 481 0412 B3F90430 		ldrsh	r3, [r3, #4]
 482 0416 B3F1FF3F 		cmp	r3, #-1
 483 041a 09D1     		bne	.L37
 230:..\src/command_processing.c ****                 calib.enabled = FALSE;
 484              		.loc 1 230 0 is_stmt 1
 485 041c 1A4B     		ldr	r3, .L44+4
 486 041e 0022     		movs	r2, #0
 487 0420 1A70     		strb	r2, [r3]
 231:..\src/command_processing.c ****                 calib.speed = 0;
 488              		.loc 1 231 0
 489 0422 194B     		ldr	r3, .L44+4
 490 0424 0022     		movs	r2, #0
 491 0426 5A80     		strh	r2, [r3, #2]	@ movhi
 232:..\src/command_processing.c ****                 calib.repetitions = 0;
 492              		.loc 1 232 0
 493 0428 174B     		ldr	r3, .L44+4
 494 042a 0022     		movs	r2, #0
 495 042c 9A80     		strh	r2, [r3, #4]	@ movhi
 233:..\src/command_processing.c ****                 break;
 496              		.loc 1 233 0
 497 042e 26E0     		b	.L1
 498              	.L37:
 234:..\src/command_processing.c ****             }
 235:..\src/command_processing.c ****             // Speed & repetitions saturations
 236:..\src/command_processing.c ****             if (calib.speed < 0) {
 499              		.loc 1 236 0
 500 0430 154B     		ldr	r3, .L44+4
 501 0432 B3F90230 		ldrsh	r3, [r3, #2]
 502 0436 002B     		cmp	r3, #0
 503 0438 03DA     		bge	.L38
 237:..\src/command_processing.c ****                 calib.speed = 0;
 504              		.loc 1 237 0
 505 043a 134B     		ldr	r3, .L44+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 28


 506 043c 0022     		movs	r2, #0
 507 043e 5A80     		strh	r2, [r3, #2]	@ movhi
 508 0440 07E0     		b	.L39
 509              	.L38:
 238:..\src/command_processing.c ****             } else if (calib.speed > 200) {
 510              		.loc 1 238 0
 511 0442 114B     		ldr	r3, .L44+4
 512 0444 B3F90230 		ldrsh	r3, [r3, #2]
 513 0448 C82B     		cmp	r3, #200
 514 044a 02DD     		ble	.L39
 239:..\src/command_processing.c ****                 calib.speed = 200;
 515              		.loc 1 239 0
 516 044c 0E4B     		ldr	r3, .L44+4
 517 044e C822     		movs	r2, #200
 518 0450 5A80     		strh	r2, [r3, #2]	@ movhi
 519              	.L39:
 240:..\src/command_processing.c ****             }
 241:..\src/command_processing.c ****             if (calib.repetitions < 0) {
 520              		.loc 1 241 0
 521 0452 0D4B     		ldr	r3, .L44+4
 522 0454 B3F90430 		ldrsh	r3, [r3, #4]
 523 0458 002B     		cmp	r3, #0
 524 045a 02DA     		bge	.L40
 242:..\src/command_processing.c ****                 calib.repetitions = 0;
 525              		.loc 1 242 0
 526 045c 0A4B     		ldr	r3, .L44+4
 527 045e 0022     		movs	r2, #0
 528 0460 9A80     		strh	r2, [r3, #4]	@ movhi
 529              	.L40:
 243:..\src/command_processing.c ****             } else if (calib.repetitions > 32767) {
 244:..\src/command_processing.c ****                 calib.repetitions = 32767;
 245:..\src/command_processing.c ****             }
 246:..\src/command_processing.c ****             
 247:..\src/command_processing.c ****             g_refNew.pos = 0;
 530              		.loc 1 247 0
 531 0462 0A4B     		ldr	r3, .L44+8
 532 0464 0022     		movs	r2, #0
 533 0466 1A60     		str	r2, [r3]
 248:..\src/command_processing.c ****             calib.enabled = TRUE;
 534              		.loc 1 248 0
 535 0468 074B     		ldr	r3, .L44+4
 536 046a 0122     		movs	r2, #1
 537 046c 1A70     		strb	r2, [r3]
 249:..\src/command_processing.c ****          
 250:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 538              		.loc 1 250 0
 539 046e 0120     		movs	r0, #1
 540 0470 FFF7FEFF 		bl	sendAcknowledgment
 251:..\src/command_processing.c ****             break;
 541              		.loc 1 251 0
 542 0474 03E0     		b	.L1
 543              	.L28:
 252:..\src/command_processing.c ****             
 253:..\src/command_processing.c **** //=====================================================     CMD_GET_IMU_READINGS
 254:..\src/command_processing.c **** 
 255:..\src/command_processing.c ****         case CMD_GET_IMU_READINGS:
 256:..\src/command_processing.c ****             cmd_get_imu_readings();
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 29


 544              		.loc 1 256 0
 545 0476 FFF7FEFF 		bl	cmd_get_imu_readings
 257:..\src/command_processing.c ****             break;    
 546              		.loc 1 257 0
 547 047a 00E0     		b	.L1
 548              	.L41:
 258:..\src/command_processing.c ****             
 259:..\src/command_processing.c **** //=========================================================== ALL OTHER COMMANDS
 260:..\src/command_processing.c ****         default:
 261:..\src/command_processing.c ****             break;
 549              		.loc 1 261 0
 550 047c 00BF     		nop
 551              	.L1:
 262:..\src/command_processing.c **** 
 263:..\src/command_processing.c ****     }
 264:..\src/command_processing.c **** }
 552              		.loc 1 264 0
 553 047e 1837     		adds	r7, r7, #24
 554              		.cfi_def_cfa_offset 8
 555 0480 BD46     		mov	sp, r7
 556              		.cfi_def_cfa_register 13
 557              		@ sp needed
 558 0482 80BD     		pop	{r7, pc}
 559              	.L45:
 560              		.align	2
 561              	.L44:
 562 0484 00000000 		.word	g_rx
 563 0488 00000000 		.word	calib
 564 048c 00000000 		.word	g_refNew
 565              		.cfi_endproc
 566              	.LFE64:
 567              		.size	commProcess, .-commProcess
 568              		.section	.text.infoSend,"ax",%progbits
 569              		.align	2
 570              		.global	infoSend
 571              		.thumb
 572              		.thumb_func
 573              		.type	infoSend, %function
 574              	infoSend:
 575              	.LFB65:
 265:..\src/command_processing.c **** 
 266:..\src/command_processing.c **** 
 267:..\src/command_processing.c **** //==============================================================================
 268:..\src/command_processing.c **** //                                                                     INFO SEND
 269:..\src/command_processing.c **** //==============================================================================
 270:..\src/command_processing.c **** 
 271:..\src/command_processing.c **** void infoSend(void){
 576              		.loc 1 271 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 1504
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 80B5     		push	{r7, lr}
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 7, -8
 583              		.cfi_offset 14, -4
 584 0002 ADF5BC6D 		sub	sp, sp, #1504
 585              		.cfi_def_cfa_offset 1512
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 30


 586 0006 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 272:..\src/command_processing.c ****     char packet_string[1500];
 273:..\src/command_processing.c ****     
 274:..\src/command_processing.c ****     prepare_generic_info(packet_string);
 588              		.loc 1 274 0
 589 0008 3B1D     		adds	r3, r7, #4
 590 000a 1846     		mov	r0, r3
 591 000c FFF7FEFF 		bl	prepare_generic_info
 275:..\src/command_processing.c ****     UART_RS485_PutString(packet_string);
 592              		.loc 1 275 0
 593 0010 3B1D     		adds	r3, r7, #4
 594 0012 1846     		mov	r0, r3
 595 0014 FFF7FEFF 		bl	UART_RS485_PutString
 276:..\src/command_processing.c **** }
 596              		.loc 1 276 0
 597 0018 00BF     		nop
 598 001a 07F5BC67 		add	r7, r7, #1504
 599              		.cfi_def_cfa_offset 8
 600 001e BD46     		mov	sp, r7
 601              		.cfi_def_cfa_register 13
 602              		@ sp needed
 603 0020 80BD     		pop	{r7, pc}
 604              		.cfi_endproc
 605              	.LFE65:
 606              		.size	infoSend, .-infoSend
 607 0022 00BF     		.section	.text.infoGet,"ax",%progbits
 608              		.align	2
 609              		.global	infoGet
 610              		.thumb
 611              		.thumb_func
 612              		.type	infoGet, %function
 613              	infoGet:
 614              	.LFB66:
 277:..\src/command_processing.c **** 
 278:..\src/command_processing.c **** 
 279:..\src/command_processing.c **** //==============================================================================
 280:..\src/command_processing.c **** //                                                              COMMAND GET INFO
 281:..\src/command_processing.c **** //==============================================================================
 282:..\src/command_processing.c **** 
 283:..\src/command_processing.c **** void infoGet(uint16 info_type) {
 615              		.loc 1 283 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 4008
 618              		@ frame_needed = 1, uses_anonymous_args = 0
 619 0000 80B5     		push	{r7, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 7, -8
 622              		.cfi_offset 14, -4
 623 0002 ADF6A87D 		subw	sp, sp, #4008
 624              		.cfi_def_cfa_offset 4016
 625 0006 00AF     		add	r7, sp, #0
 626              		.cfi_def_cfa_register 7
 627 0008 0246     		mov	r2, r0
 628 000a BB1D     		adds	r3, r7, #6
 629 000c 1A80     		strh	r2, [r3]	@ movhi
 284:..\src/command_processing.c ****     char packet_string[4000] = "";
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 31


 630              		.loc 1 284 0
 631 000e 07F10803 		add	r3, r7, #8
 632 0012 0022     		movs	r2, #0
 633 0014 1A60     		str	r2, [r3]
 634 0016 0433     		adds	r3, r3, #4
 635 0018 40F69C72 		movw	r2, #3996
 636 001c 0021     		movs	r1, #0
 637 001e 1846     		mov	r0, r3
 638 0020 FFF7FEFF 		bl	memset
 285:..\src/command_processing.c ****     
 286:..\src/command_processing.c ****     //==================================     choose info type and prepare string
 287:..\src/command_processing.c **** 
 288:..\src/command_processing.c ****     switch (info_type) {
 639              		.loc 1 288 0
 640 0024 BB1D     		adds	r3, r7, #6
 641 0026 1B88     		ldrh	r3, [r3]
 642 0028 002B     		cmp	r3, #0
 643 002a 02D0     		beq	.L49
 644 002c 012B     		cmp	r3, #1
 645 002e 0DD0     		beq	.L50
 289:..\src/command_processing.c ****         case INFO_ALL:
 290:..\src/command_processing.c ****             prepare_generic_info(packet_string);
 291:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 292:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 293:..\src/command_processing.c ****             break;
 294:..\src/command_processing.c ****         case CYCLES_INFO:
 295:..\src/command_processing.c ****             prepare_counter_info(packet_string);
 296:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 297:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 298:..\src/command_processing.c ****             break;
 299:..\src/command_processing.c ****         default:
 300:..\src/command_processing.c ****             break;
 646              		.loc 1 300 0
 647 0030 19E0     		b	.L51
 648              	.L49:
 290:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer(); 
 649              		.loc 1 290 0
 650 0032 07F10803 		add	r3, r7, #8
 651 0036 1846     		mov	r0, r3
 652 0038 FFF7FEFF 		bl	prepare_generic_info
 291:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 653              		.loc 1 291 0
 654 003c FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 292:..\src/command_processing.c ****             break;
 655              		.loc 1 292 0
 656 0040 07F10803 		add	r3, r7, #8
 657 0044 1846     		mov	r0, r3
 658 0046 FFF7FEFF 		bl	UART_RS485_PutString
 293:..\src/command_processing.c ****         case CYCLES_INFO:
 659              		.loc 1 293 0
 660 004a 0CE0     		b	.L51
 661              	.L50:
 295:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 662              		.loc 1 295 0
 663 004c 07F10803 		add	r3, r7, #8
 664 0050 1846     		mov	r0, r3
 665 0052 FFF7FEFF 		bl	prepare_counter_info
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 32


 296:..\src/command_processing.c ****             UART_RS485_PutString(packet_string);
 666              		.loc 1 296 0
 667 0056 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
 297:..\src/command_processing.c ****             break;
 668              		.loc 1 297 0
 669 005a 07F10803 		add	r3, r7, #8
 670 005e 1846     		mov	r0, r3
 671 0060 FFF7FEFF 		bl	UART_RS485_PutString
 298:..\src/command_processing.c ****         default:
 672              		.loc 1 298 0
 673 0064 00BF     		nop
 674              	.L51:
 301:..\src/command_processing.c ****     }
 302:..\src/command_processing.c **** }
 675              		.loc 1 302 0 discriminator 1
 676 0066 00BF     		nop
 677 0068 07F6A877 		addw	r7, r7, #4008
 678              		.cfi_def_cfa_offset 8
 679 006c BD46     		mov	sp, r7
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 006e 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE66:
 685              		.size	infoGet, .-infoGet
 686              		.section	.rodata
 687              		.align	2
 688              	.LC42:
 689 0000 30202D3E 		.ascii	"0 -> None\0121 -> Low (%u us delay for each 8-bit r"
 689      204E6F6E 
 689      650A3120 
 689      2D3E204C 
 689      6F772028 
 690 0030 65676973 		.ascii	"egister read)\0122 -> High (%u us delay for each 8-"
 690      74657220 
 690      72656164 
 690      290A3220 
 690      2D3E2048 
 691 0060 62697420 		.ascii	"bit register read)\012\000"
 691      72656769 
 691      73746572 
 691      20726561 
 691      64290A00 
 692              		.global	__aeabi_i2f
 693              		.global	__aeabi_fdiv
 694              		.align	2
 695              	.LC43:
 696 0074 20557362 		.ascii	" Usb\000"
 696      00
 697 0079 000000   		.align	2
 698              	.LC44:
 699 007c 2048616E 		.ascii	" Handle\000"
 699      646C6500 
 700              		.align	2
 701              	.LC45:
 702 0084 20454D47 		.ascii	" EMG proportional\000"
 702      2070726F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 33


 702      706F7274 
 702      696F6E61 
 702      6C00
 703 0096 0000     		.align	2
 704              	.LC46:
 705 0098 20454D47 		.ascii	" EMG integral\000"
 705      20696E74 
 705      65677261 
 705      6C00
 706 00a6 0000     		.align	2
 707              	.LC47:
 708 00a8 20454D47 		.ascii	" EMG FCFS\000"
 708      20464346 
 708      5300
 709 00b2 0000     		.align	2
 710              	.LC48:
 711 00b4 20454D47 		.ascii	" EMG FCFS Advanced\000"
 711      20464346 
 711      53204164 
 711      76616E63 
 711      656400
 712 00c7 00       		.align	2
 713              	.LC49:
 714 00c8 20506F73 		.ascii	" Position\000"
 714      6974696F 
 714      6E00
 715 00d2 0000     		.align	2
 716              	.LC50:
 717 00d4 2050574D 		.ascii	" PWM\000"
 717      00
 718 00d9 000000   		.align	2
 719              	.LC51:
 720 00dc 20437572 		.ascii	" Current\000"
 720      72656E74 
 720      00
 721 00e5 000000   		.align	2
 722              	.LC52:
 723 00e8 20506F73 		.ascii	" Position and Current\000"
 723      6974696F 
 723      6E20616E 
 723      64204375 
 723      7272656E 
 724 00fe 0000     		.align	2
 725              	.LC53:
 726 0100 20594553 		.ascii	" YES\000\000"
 726      0000
 727 0106 0000     		.align	2
 728              	.LC54:
 729 0108 204E4F00 		.ascii	" NO\000\000"
 729      00
 730 010d 000000   		.align	2
 731              	.LC55:
 732 0110 20526967 		.ascii	" Right\000\000"
 732      68740000 
 733              		.align	2
 734              	.LC56:
 735 0118 204C6566 		.ascii	" Left\000\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 34


 735      740000
 736 011f 00       		.align	2
 737              	.LC57:
 738 0120 204F4646 		.ascii	" OFF\000\000"
 738      0000
 739 0126 0000     		.align	2
 740              	.LC58:
 741 0128 204F4E00 		.ascii	" ON\000\000"
 741      00
 742 012d 000000   		.align	2
 743              	.LC59:
 744 0130 204E6F6E 		.ascii	" None\000\000"
 744      650000
 745 0137 00       		.align	2
 746              	.LC60:
 747 0138 2053442F 		.ascii	" SD/RTC board\000\000"
 747      52544320 
 747      626F6172 
 747      640000
 748 0147 00       		.align	2
 749              	.LC61:
 750 0148 20576946 		.ascii	" WiFi board\000\000"
 750      6920626F 
 750      61726400 
 750      00
 751 0155 000000   		.align	2
 752              	.LC62:
 753 0158 204F7468 		.ascii	" Other\000\000"
 753      65720000 
 754              		.align	2
 755              	.LC63:
 756 0160 204C6F77 		.ascii	" Low\000\000"
 756      0000
 757 0166 0000     		.align	2
 758              	.LC64:
 759 0168 20486967 		.ascii	" High\000\000"
 759      680000
 760 016f 00       		.align	2
 761              	.LC65:
 762 0170 20556E64 		.ascii	" Undefined\000\000"
 762      6566696E 
 762      65640000 
 763              		.align	2
 764              	.LC0:
 765 017c 02       		.byte	2
 766 017d 07       		.byte	7
 767 017e 07       		.byte	7
 768 017f 00       		.byte	0
 769 0180 00       		.byte	0
 770 0181 00       		.byte	0
 771 0182 02       		.byte	2
 772 0183 03       		.byte	3
 773 0184 07       		.byte	7
 774 0185 00       		.byte	0
 775 0186 05       		.byte	5
 776 0187 05       		.byte	5
 777 0188 03       		.byte	3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 35


 778 0189 04       		.byte	4
 779 018a 00       		.byte	0
 780 018b 06       		.byte	6
 781 018c 02       		.byte	2
 782 018d 00       		.byte	0
 783 018e 01       		.byte	1
 784 018f 00       		.byte	0
 785 0190 07       		.byte	7
 786 0191 05       		.byte	5
 787 0192 05       		.byte	5
 788 0193 05       		.byte	5
 789 0194 00       		.byte	0
 790 0195 00       		.byte	0
 791 0196 00       		.byte	0
 792 0197 00       		.byte	0
 793 0198 00       		.byte	0
 794 0199 00       		.byte	0
 795 019a 02       		.byte	2
 796 019b 00       		.align	2
 797              	.LC1:
 798 019c 01       		.byte	1
 799 019d 03       		.byte	3
 800 019e 03       		.byte	3
 801 019f 01       		.byte	1
 802 01a0 01       		.byte	1
 803 01a1 01       		.byte	1
 804 01a2 03       		.byte	3
 805 01a3 03       		.byte	3
 806 01a4 03       		.byte	3
 807 01a5 01       		.byte	1
 808 01a6 02       		.byte	2
 809 01a7 02       		.byte	2
 810 01a8 01       		.byte	1
 811 01a9 02       		.byte	2
 812 01aa 01       		.byte	1
 813 01ab 02       		.byte	2
 814 01ac 01       		.byte	1
 815 01ad 01       		.byte	1
 816 01ae 01       		.byte	1
 817 01af 01       		.byte	1
 818 01b0 06       		.byte	6
 819 01b1 01       		.byte	1
 820 01b2 01       		.byte	1
 821 01b3 01       		.byte	1
 822 01b4 01       		.byte	1
 823 01b5 01       		.byte	1
 824 01b6 01       		.byte	1
 825 01b7 01       		.byte	1
 826 01b8 01       		.byte	1
 827 01b9 01       		.byte	1
 828 01ba 06       		.byte	6
 829 01bb 00       		.align	2
 830              	.LC2:
 831 01bc 03       		.byte	3
 832 01bd 01       		.byte	1
 833 01be 02       		.byte	2
 834 01bf 03       		.byte	3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 36


 835 01c0 03       		.byte	3
 836 01c1 03       		.byte	3
 837 01c2 03       		.byte	3
 838 01c3 03       		.byte	3
 839 01c4 03       		.byte	3
 840 01c5 04       		.byte	4
 841 01c6 05       		.byte	5
 842 01c7 06       		.byte	6
 843 01c8 03       		.byte	3
 844 01c9 000000   		.align	2
 845              	.LC3:
 846 01cc 31202D20 		.ascii	"1 - Device ID:\000"
 846      44657669 
 846      63652049 
 846      443A00
 847 01db 00       		.align	2
 848              	.LC4:
 849 01dc 32202D20 		.ascii	"2 - Position PID [P, I, D]:\000"
 849      506F7369 
 849      74696F6E 
 849      20504944 
 849      205B502C 
 850              		.align	2
 851              	.LC5:
 852 01f8 33202D20 		.ascii	"3 - Current PID [P, I, D]:\000"
 852      43757272 
 852      656E7420 
 852      50494420 
 852      5B502C20 
 853 0213 00       		.align	2
 854              	.LC6:
 855 0214 34202D20 		.ascii	"4 - Startup Activation:\000"
 855      53746172 
 855      74757020 
 855      41637469 
 855      76617469 
 856              		.align	2
 857              	.LC7:
 858 022c 35202D20 		.ascii	"5 - Input mode:\000"
 858      496E7075 
 858      74206D6F 
 858      64653A00 
 859              		.align	2
 860              	.LC8:
 861 023c 36202D20 		.ascii	"6 - Control mode:\000"
 861      436F6E74 
 861      726F6C20 
 861      6D6F6465 
 861      3A00
 862 024e 0000     		.align	2
 863              	.LC9:
 864 0250 37202D20 		.ascii	"7 - Resolutions:\000"
 864      5265736F 
 864      6C757469 
 864      6F6E733A 
 864      00
 865 0261 000000   		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 37


 866              	.LC10:
 867 0264 38202D20 		.ascii	"8 - Measurement Offsets:\000"
 867      4D656173 
 867      7572656D 
 867      656E7420 
 867      4F666673 
 868 027d 000000   		.align	2
 869              	.LC11:
 870 0280 39202D20 		.ascii	"9 - Multipliers:\000"
 870      4D756C74 
 870      69706C69 
 870      6572733A 
 870      00
 871 0291 000000   		.align	2
 872              	.LC12:
 873 0294 3130202D 		.ascii	"10 - Pos. limit active:\000"
 873      20506F73 
 873      2E206C69 
 873      6D697420 
 873      61637469 
 874              		.align	2
 875              	.LC13:
 876 02ac 3131202D 		.ascii	"11 - Pos. limits [inf, sup]:\000"
 876      20506F73 
 876      2E206C69 
 876      6D697473 
 876      205B696E 
 877 02c9 000000   		.align	2
 878              	.LC14:
 879 02cc 3132202D 		.ascii	"12 - Max steps [neg, pos]:\000"
 879      204D6178 
 879      20737465 
 879      7073205B 
 879      6E65672C 
 880 02e7 00       		.align	2
 881              	.LC15:
 882 02e8 3133202D 		.ascii	"13 - Current limit:\000"
 882      20437572 
 882      72656E74 
 882      206C696D 
 882      69743A00 
 883              		.align	2
 884              	.LC16:
 885 02fc 3134202D 		.ascii	"14 - EMG thresholds:\000"
 885      20454D47 
 885      20746872 
 885      6573686F 
 885      6C64733A 
 886 0311 000000   		.align	2
 887              	.LC17:
 888 0314 3135202D 		.ascii	"15 - EMG calibration on startup:\000"
 888      20454D47 
 888      2063616C 
 888      69627261 
 888      74696F6E 
 889 0335 000000   		.align	2
 890              	.LC18:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 38


 891 0338 3136202D 		.ascii	"16 - EMG max values:\000"
 891      20454D47 
 891      206D6178 
 891      2076616C 
 891      7565733A 
 892 034d 000000   		.align	2
 893              	.LC19:
 894 0350 3137202D 		.ascii	"17 - EMG max speed:\000"
 894      20454D47 
 894      206D6178 
 894      20737065 
 894      65643A00 
 895              		.align	2
 896              	.LC20:
 897 0364 3138202D 		.ascii	"18 - Absolute encoder position:\000"
 897      20416273 
 897      6F6C7574 
 897      6520656E 
 897      636F6465 
 898              		.align	2
 899              	.LC21:
 900 0384 3139202D 		.ascii	"19 - Motor handle ratio:\000"
 900      204D6F74 
 900      6F722068 
 900      616E646C 
 900      65207261 
 901 039d 000000   		.align	2
 902              	.LC22:
 903 03a0 3230202D 		.ascii	"20 - PWM rescaling:\000"
 903      2050574D 
 903      20726573 
 903      63616C69 
 903      6E673A00 
 904              		.align	2
 905              	.LC23:
 906 03b4 3231202D 		.ascii	"21 - Current lookup:\000"
 906      20437572 
 906      72656E74 
 906      206C6F6F 
 906      6B75703A 
 907 03c9 000000   		.align	2
 908              	.LC24:
 909 03cc 3232202D 		.ascii	"22 - Rest position:\000"
 909      20526573 
 909      7420706F 
 909      73697469 
 909      6F6E3A00 
 910              		.align	2
 911              	.LC25:
 912 03e0 3233202D 		.ascii	"23 - Rest position time delay (ms):\000"
 912      20526573 
 912      7420706F 
 912      73697469 
 912      6F6E2074 
 913              		.align	2
 914              	.LC26:
 915 0404 3234202D 		.ascii	"24 - Rest vel closure (ticks/sec):\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 39


 915      20526573 
 915      74207665 
 915      6C20636C 
 915      6F737572 
 916 0427 00       		.align	2
 917              	.LC27:
 918 0428 3235202D 		.ascii	"25 - Rest position enabled:\000"
 918      20526573 
 918      7420706F 
 918      73697469 
 918      6F6E2065 
 919              		.align	2
 920              	.LC28:
 921 0444 3236202D 		.ascii	"26 - EMG inversion:\000"
 921      20454D47 
 921      20696E76 
 921      65727369 
 921      6F6E3A00 
 922              		.align	2
 923              	.LC29:
 924 0458 3237202D 		.ascii	"27 - Hand side:\000"
 924      2048616E 
 924      64207369 
 924      64653A00 
 925              		.align	2
 926              	.LC30:
 927 0468 3238202D 		.ascii	"28 - Read all IMUs:\000"
 927      20526561 
 927      6420616C 
 927      6C20494D 
 927      55733A00 
 928              		.align	2
 929              	.LC31:
 930 047c 3239202D 		.ascii	"29 - Read Expansion port:\000"
 930      20526561 
 930      64204578 
 930      70616E73 
 930      696F6E20 
 931 0496 0000     		.align	2
 932              	.LC32:
 933 0498 3330202D 		.ascii	"30 - Reset counters:\000"
 933      20526573 
 933      65742063 
 933      6F756E74 
 933      6572733A 
 934 04ad 000000   		.align	2
 935              	.LC33:
 936 04b0 3331202D 		.ascii	"31 - Current Time [DD/MM/YY HH:MM:SS]:\000"
 936      20437572 
 936      72656E74 
 936      2054696D 
 936      65205B44 
 937 04d7 00       		.align	2
 938              	.LC35:
 939 04d8 CC010000 		.word	.LC3
 940 04dc DC010000 		.word	.LC4
 941 04e0 F8010000 		.word	.LC5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 40


 942 04e4 14020000 		.word	.LC6
 943 04e8 2C020000 		.word	.LC7
 944 04ec 3C020000 		.word	.LC8
 945 04f0 50020000 		.word	.LC9
 946 04f4 64020000 		.word	.LC10
 947 04f8 80020000 		.word	.LC11
 948 04fc 94020000 		.word	.LC12
 949 0500 AC020000 		.word	.LC13
 950 0504 CC020000 		.word	.LC14
 951 0508 E8020000 		.word	.LC15
 952 050c FC020000 		.word	.LC16
 953 0510 14030000 		.word	.LC17
 954 0514 38030000 		.word	.LC18
 955 0518 50030000 		.word	.LC19
 956 051c 64030000 		.word	.LC20
 957 0520 84030000 		.word	.LC21
 958 0524 A0030000 		.word	.LC22
 959 0528 B4030000 		.word	.LC23
 960 052c CC030000 		.word	.LC24
 961 0530 E0030000 		.word	.LC25
 962 0534 04040000 		.word	.LC26
 963 0538 28040000 		.word	.LC27
 964 053c 44040000 		.word	.LC28
 965 0540 58040000 		.word	.LC29
 966 0544 68040000 		.word	.LC30
 967 0548 7C040000 		.word	.LC31
 968 054c 98040000 		.word	.LC32
 969 0550 B0040000 		.word	.LC33
 970              		.align	2
 971              	.LC36:
 972 0554 30202D3E 		.ascii	"0 -> Usb\0121 -> Handle\0122 -> EMG proportional\012"
 972      20557362 
 972      0A31202D 
 972      3E204861 
 972      6E646C65 
 973 057f 33202D3E 		.ascii	"3 -> EMG Integral\0124 -> EMG FCFS\0125 -> EMG FCFS"
 973      20454D47 
 973      20496E74 
 973      65677261 
 973      6C0A3420 
 974 05ac 20416476 		.ascii	" Advanced\012\000"
 974      616E6365 
 974      640A00
 975 05b7 00       		.align	2
 976              	.LC37:
 977 05b8 30202D3E 		.ascii	"0 -> Position\0121 -> PWM\0122 -> Current\0123 -> P"
 977      20506F73 
 977      6974696F 
 977      6E0A3120 
 977      2D3E2050 
 978 05e2 6F736974 		.ascii	"osition and Current\012\000"
 978      696F6E20 
 978      616E6420 
 978      43757272 
 978      656E740A 
 979 05f7 00       		.space	1
 980              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 41


 981              	.LC38:
 982 05f8 30202D3E 		.ascii	"0 -> Deactivate [NO]\0121 -> Activate [YES]\012\000"
 982      20446561 
 982      63746976 
 982      61746520 
 982      5B4E4F5D 
 983 0622 0000     		.align	2
 984              	.LC39:
 985 0624 30202D3E 		.ascii	"0 -> Right\0121 -> Left\012\000"
 985      20526967 
 985      68740A31 
 985      202D3E20 
 985      4C656674 
 986 063a 0000     		.align	2
 987              	.LC40:
 988 063c 30202D3E 		.ascii	"0 -> OFF\0121 -> ON\012You must restart the board n"
 988      204F4646 
 988      0A31202D 
 988      3E204F4E 
 988      0A596F75 
 989 0669 6F770A00 		.ascii	"ow\012\000"
 990 066d 0000     		.space	2
 991 066f 00       		.align	2
 992              	.LC41:
 993 0670 30202D3E 		.ascii	"0 -> None\0121 -> SD/RTC board\0122 -> WiFi board\012"
 993      204E6F6E 
 993      650A3120 
 993      2D3E2053 
 993      442F5254 
 994 069c 33202D3E 		.ascii	"3 -> Other\012You must restart the board now\012\000"
 994      204F7468 
 994      65720A59 
 994      6F75206D 
 994      75737420 
 995              		.section	.text.get_param_list,"ax",%progbits
 996              		.align	2
 997              		.global	get_param_list
 998              		.thumb
 999              		.thumb_func
 1000              		.type	get_param_list, %function
 1001              	get_param_list:
 1002              	.LFB67:
 303:..\src/command_processing.c **** 
 304:..\src/command_processing.c **** 
 305:..\src/command_processing.c **** //==============================================================================
 306:..\src/command_processing.c **** //                                                                GET PARAM LIST
 307:..\src/command_processing.c **** //==============================================================================
 308:..\src/command_processing.c **** 
 309:..\src/command_processing.c **** void get_param_list() {
 1003              		.loc 1 309 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 3440
 1006              		@ frame_needed = 1, uses_anonymous_args = 0
 1007 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1008              		.cfi_def_cfa_offset 20
 1009              		.cfi_offset 4, -20
 1010              		.cfi_offset 5, -16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 42


 1011              		.cfi_offset 6, -12
 1012              		.cfi_offset 7, -8
 1013              		.cfi_offset 14, -4
 1014 0002 ADF6745D 		subw	sp, sp, #3444
 1015              		.cfi_def_cfa_offset 3464
 1016 0006 00AF     		add	r7, sp, #0
 1017              		.cfi_def_cfa_register 7
 310:..\src/command_processing.c ****     
 311:..\src/command_processing.c ****     //Package to be sent variables
 312:..\src/command_processing.c ****     uint8 packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + PARAM_MENU_SLOT*7 + PARAM_BYTE_SLOT] = "";   
 1018              		.loc 1 312 0
 1019 0008 07F54073 		add	r3, r7, #768
 1020 000c 0022     		movs	r2, #0
 1021 000e 1A60     		str	r2, [r3]
 1022 0010 0433     		adds	r3, r3, #4
 1023 0012 40F65622 		movw	r2, #2646
 1024 0016 0021     		movs	r1, #0
 1025 0018 1846     		mov	r0, r3
 1026 001a FFF7FEFF 		bl	memset
 313:..\src/command_processing.c ****     uint16 packet_lenght = PARAM_BYTE_SLOT*NUM_OF_PARAMS + PARAM_MENU_SLOT*7 + PARAM_BYTE_SLOT;
 1027              		.loc 1 313 0
 1028 001e 40F65A23 		movw	r3, #2650
 1029 0022 A7F8623D 		strh	r3, [r7, #3426]	@ movhi
 314:..\src/command_processing.c **** 
 315:..\src/command_processing.c ****     //Auxiliary variables
 316:..\src/command_processing.c ****     uint8 CYDATA i, j;
 317:..\src/command_processing.c ****     uint8 CYDATA idx = 0;       //Parameter number
 1030              		.loc 1 317 0
 1031 0026 0023     		movs	r3, #0
 1032 0028 87F86D3D 		strb	r3, [r7, #3437]
 318:..\src/command_processing.c ****     uint8 CYDATA idx_menu = 0;
 1033              		.loc 1 318 0
 1034 002c 0023     		movs	r3, #0
 1035 002e 87F86C3D 		strb	r3, [r7, #3436]
 319:..\src/command_processing.c ****     uint8 CYDATA sod = 0;       //sizeof data
 1036              		.loc 1 319 0
 1037 0032 0023     		movs	r3, #0
 1038 0034 87F86B3D 		strb	r3, [r7, #3435]
 320:..\src/command_processing.c ****     uint8 CYDATA string_lenght;
 321:..\src/command_processing.c ****     char CYDATA aux_str[50] = "";
 1039              		.loc 1 321 0
 1040 0038 07F53373 		add	r3, r7, #716
 1041 003c 0022     		movs	r2, #0
 1042 003e 1A60     		str	r2, [r3]
 1043 0040 0433     		adds	r3, r3, #4
 1044 0042 2E22     		movs	r2, #46
 1045 0044 0021     		movs	r1, #0
 1046 0046 1846     		mov	r0, r3
 1047 0048 FFF7FEFF 		bl	memset
 322:..\src/command_processing.c ****     uint8* m_addr = (uint8*)&(c_mem.id);
 1048              		.loc 1 322 0
 1049 004c C74B     		ldr	r3, .L216
 1050 004e C7F8643D 		str	r3, [r7, #3428]
 323:..\src/command_processing.c ****     uint8* m_tmp = m_addr;
 1051              		.loc 1 323 0
 1052 0052 D7F8643D 		ldr	r3, [r7, #3428]
 1053 0056 C7F85C3D 		str	r3, [r7, #3420]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 43


 324:..\src/command_processing.c ****     float aux_float;
 325:..\src/command_processing.c ****     int16 aux_int16;
 326:..\src/command_processing.c ****     uint16 aux_uint16;
 327:..\src/command_processing.c ****     int32 aux_int32;
 328:..\src/command_processing.c ****     uint32 aux_uint32;
 329:..\src/command_processing.c **** 
 330:..\src/command_processing.c ****     // Arrays
 331:..\src/command_processing.c ****     const uint8 TYPES[NUM_OF_PARAMS] = {
 1054              		.loc 1 331 0
 1055 005a 07F52773 		add	r3, r7, #668
 1056 005e C44A     		ldr	r2, .L216+4
 1057 0060 1C46     		mov	r4, r3
 1058 0062 1546     		mov	r5, r2
 1059 0064 2868     		ldr	r0, [r5]	@ unaligned
 1060 0066 6968     		ldr	r1, [r5, #4]	@ unaligned
 1061 0068 AA68     		ldr	r2, [r5, #8]	@ unaligned
 1062 006a EB68     		ldr	r3, [r5, #12]	@ unaligned
 1063 006c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1064 006e 2869     		ldr	r0, [r5, #16]	@ unaligned
 1065 0070 6969     		ldr	r1, [r5, #20]	@ unaligned
 1066 0072 AA69     		ldr	r2, [r5, #24]	@ unaligned
 1067 0074 07C4     		stmia	r4!, {r0, r1, r2}
 1068 0076 AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 1069 0078 AA7F     		ldrb	r2, [r5, #30]
 1070 007a 2380     		strh	r3, [r4]	@ unaligned
 1071 007c 1346     		mov	r3, r2
 1072 007e A370     		strb	r3, [r4, #2]
 332:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLOAT, TYPE_FLOAT, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8, TYPE_INT16
 333:..\src/command_processing.c ****         TYPE_FLOAT, TYPE_FLAG, TYPE_INT32, TYPE_INT32, TYPE_INT16, TYPE_UINT16, TYPE_FLAG, TYPE_UIN
 334:..\src/command_processing.c ****         TYPE_UINT8, TYPE_FLAG, TYPE_INT8, TYPE_FLAG, TYPE_FLOAT, TYPE_INT32, TYPE_INT32, TYPE_INT32
 335:..\src/command_processing.c ****         TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_FLAG, TYPE_UINT8
 336:..\src/command_processing.c ****     };
 337:..\src/command_processing.c **** 
 338:..\src/command_processing.c ****     const uint8 NUM_ITEMS[NUM_OF_PARAMS] = {
 1073              		.loc 1 338 0
 1074 0080 07F51F73 		add	r3, r7, #636
 1075 0084 BB4A     		ldr	r2, .L216+8
 1076 0086 1C46     		mov	r4, r3
 1077 0088 1546     		mov	r5, r2
 1078 008a 2868     		ldr	r0, [r5]	@ unaligned
 1079 008c 6968     		ldr	r1, [r5, #4]	@ unaligned
 1080 008e AA68     		ldr	r2, [r5, #8]	@ unaligned
 1081 0090 EB68     		ldr	r3, [r5, #12]	@ unaligned
 1082 0092 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1083 0094 2869     		ldr	r0, [r5, #16]	@ unaligned
 1084 0096 6969     		ldr	r1, [r5, #20]	@ unaligned
 1085 0098 AA69     		ldr	r2, [r5, #24]	@ unaligned
 1086 009a 07C4     		stmia	r4!, {r0, r1, r2}
 1087 009c AB8B     		ldrh	r3, [r5, #28]	@ unaligned
 1088 009e AA7F     		ldrb	r2, [r5, #30]
 1089 00a0 2380     		strh	r3, [r4]	@ unaligned
 1090 00a2 1346     		mov	r3, r2
 1091 00a4 A370     		strb	r3, [r4, #2]
 339:..\src/command_processing.c ****         1, 3, 3, 1, 1, 1, 3, 3,
 340:..\src/command_processing.c ****         3, 1, 2, 2, 1, 2, 1, 2,
 341:..\src/command_processing.c ****         1, 1, 1, 1, 6, 1, 1, 1,
 342:..\src/command_processing.c ****         1, 1, 1, 1, 1, 1, 6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 44


 343:..\src/command_processing.c ****     };
 344:..\src/command_processing.c **** 
 345:..\src/command_processing.c ****     const uint8 NUM_MENU[13] = {3, 1, 2, 3, 3, 3, 3, 3, 3, 4, 5, 6, 3};
 1092              		.loc 1 345 0
 1093 00a6 07F51B73 		add	r3, r7, #620
 1094 00aa B34A     		ldr	r2, .L216+12
 1095 00ac 1446     		mov	r4, r2
 1096 00ae 2068     		ldr	r0, [r4]	@ unaligned
 1097 00b0 6168     		ldr	r1, [r4, #4]	@ unaligned
 1098 00b2 A268     		ldr	r2, [r4, #8]	@ unaligned
 1099 00b4 07C3     		stmia	r3!, {r0, r1, r2}
 1100 00b6 227B     		ldrb	r2, [r4, #12]
 1101 00b8 1A70     		strb	r2, [r3]
 346:..\src/command_processing.c ****     
 347:..\src/command_processing.c ****     const char* PARAMS_STR[NUM_OF_PARAMS] = {
 1102              		.loc 1 347 0
 1103 00ba 07F5F873 		add	r3, r7, #496
 1104 00be AF4A     		ldr	r2, .L216+16
 1105 00c0 1846     		mov	r0, r3
 1106 00c2 1146     		mov	r1, r2
 1107 00c4 7C23     		movs	r3, #124
 1108 00c6 1A46     		mov	r2, r3
 1109 00c8 FFF7FEFF 		bl	memcpy
 348:..\src/command_processing.c ****         "1 - Device ID:", "2 - Position PID [P, I, D]:", "3 - Current PID [P, I, D]:", "4 - Startup
 349:..\src/command_processing.c ****         "5 - Input mode:", "6 - Control mode:", "7 - Resolutions:", "8 - Measurement Offsets:", 
 350:..\src/command_processing.c ****         "9 - Multipliers:", "10 - Pos. limit active:", "11 - Pos. limits [inf, sup]:", "12 - Max st
 351:..\src/command_processing.c ****         "13 - Current limit:", "14 - EMG thresholds:", "15 - EMG calibration on startup:", "16 - EM
 352:..\src/command_processing.c ****         "17 - EMG max speed:", "18 - Absolute encoder position:", "19 - Motor handle ratio:", "20 -
 353:..\src/command_processing.c ****         "21 - Current lookup:", "22 - Rest position:", "23 - Rest position time delay (ms):", "24 -
 354:..\src/command_processing.c ****         "25 - Rest position enabled:", "26 - EMG inversion:",  "27 - Hand side:", "28 - Read all IM
 355:..\src/command_processing.c ****         "29 - Read Expansion port:", "30 - Reset counters:", "31 - Current Time [DD/MM/YY HH:MM:SS]
 356:..\src/command_processing.c ****     };
 357:..\src/command_processing.c **** 
 358:..\src/command_processing.c ****     //Parameters menu
 359:..\src/command_processing.c ****     const char input_mode_menu[99] = "0 -> Usb\n1 -> Handle\n2 -> EMG proportional\n3 -> EMG Integr
 1110              		.loc 1 359 0
 1111 00cc 07F5C673 		add	r3, r7, #396
 1112 00d0 AB4A     		ldr	r2, .L216+20
 1113 00d2 1846     		mov	r0, r3
 1114 00d4 1146     		mov	r1, r2
 1115 00d6 6323     		movs	r3, #99
 1116 00d8 1A46     		mov	r2, r3
 1117 00da FFF7FEFF 		bl	memcpy
 360:..\src/command_processing.c ****     const char control_mode_menu[64] = "0 -> Position\n1 -> PWM\n2 -> Current\n3 -> Position and Cu
 1118              		.loc 1 360 0
 1119 00de 07F5A676 		add	r6, r7, #332
 1120 00e2 A84B     		ldr	r3, .L216+24
 1121 00e4 3446     		mov	r4, r6
 1122 00e6 1D46     		mov	r5, r3
 1123 00e8 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1124 00ea 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1125 00ec 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1126 00ee 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1127 00f0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1128 00f2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1129 00f4 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 1130 00f8 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 45


 1131 00fa 2380     		strh	r3, [r4]	@ movhi
 1132 00fc 0234     		adds	r4, r4, #2
 1133 00fe 1B0C     		lsrs	r3, r3, #16
 1134 0100 2370     		strb	r3, [r4]
 1135 0102 0023     		movs	r3, #0
 1136 0104 86F83F30 		strb	r3, [r6, #63]
 361:..\src/command_processing.c ****     const char yes_no_menu[42] = "0 -> Deactivate [NO]\n1 -> Activate [YES]\n";
 1137              		.loc 1 361 0
 1138 0108 07F59073 		add	r3, r7, #288
 1139 010c 9E4A     		ldr	r2, .L216+28
 1140 010e 1C46     		mov	r4, r3
 1141 0110 1546     		mov	r5, r2
 1142 0112 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1143 0114 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1144 0116 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1145 0118 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1146 011a 95E80700 		ldmia	r5, {r0, r1, r2}
 1147 011e 03C4     		stmia	r4!, {r0, r1}
 1148 0120 2280     		strh	r2, [r4]	@ movhi
 362:..\src/command_processing.c ****     const char right_left_menu[22] = "0 -> Right\n1 -> Left\n";
 1149              		.loc 1 362 0
 1150 0122 07F58473 		add	r3, r7, #264
 1151 0126 994A     		ldr	r2, .L216+32
 1152 0128 1C46     		mov	r4, r3
 1153 012a 1546     		mov	r5, r2
 1154 012c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1155 012e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1156 0130 95E80300 		ldmia	r5, {r0, r1}
 1157 0134 2060     		str	r0, [r4]
 1158 0136 0434     		adds	r4, r4, #4
 1159 0138 2180     		strh	r1, [r4]	@ movhi
 363:..\src/command_processing.c ****     const char on_off_menu[51] = "0 -> OFF\n1 -> ON\nYou must restart the board now\n";
 1160              		.loc 1 363 0
 1161 013a 07F1D406 		add	r6, r7, #212
 1162 013e 944B     		ldr	r3, .L216+36
 1163 0140 3446     		mov	r4, r6
 1164 0142 1D46     		mov	r5, r3
 1165 0144 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1166 0146 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1167 0148 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1168 014a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1169 014c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 1170 014e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 1171 0150 2B68     		ldr	r3, [r5]
 1172 0152 2370     		strb	r3, [r4]
 1173 0154 06F13103 		add	r3, r6, #49
 1174 0158 0022     		movs	r2, #0
 1175 015a 1A80     		strh	r2, [r3]	@ unaligned
 364:..\src/command_processing.c ****     const char exp_port_menu[87] = "0 -> None\n1 -> SD/RTC board\n2 -> WiFi board\n3 -> Other\nYou 
 1176              		.loc 1 364 0
 1177 015c 07F17C03 		add	r3, r7, #124
 1178 0160 8C4A     		ldr	r2, .L216+40
 1179 0162 1846     		mov	r0, r3
 1180 0164 1146     		mov	r1, r2
 1181 0166 5723     		movs	r3, #87
 1182 0168 1A46     		mov	r2, r3
 1183 016a FFF7FEFF 		bl	memcpy
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 46


 365:..\src/command_processing.c ****     char spi_delay_menu[118] = " ";
 1184              		.loc 1 365 0
 1185 016e 3B1D     		adds	r3, r7, #4
 1186 0170 2022     		movs	r2, #32
 1187 0172 1A60     		str	r2, [r3]
 1188 0174 0433     		adds	r3, r3, #4
 1189 0176 7222     		movs	r2, #114
 1190 0178 0021     		movs	r1, #0
 1191 017a 1846     		mov	r0, r3
 1192 017c FFF7FEFF 		bl	memset
 366:..\src/command_processing.c ****     
 367:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 1193              		.loc 1 367 0
 1194 0180 381D     		adds	r0, r7, #4
 1195 0182 6423     		movs	r3, #100
 1196 0184 0A22     		movs	r2, #10
 1197 0186 8449     		ldr	r1, .L216+44
 1198 0188 FFF7FEFF 		bl	sprintf
 368:..\src/command_processing.c ****     
 369:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 1199              		.loc 1 369 0
 1200 018c 07F54073 		add	r3, r7, #768
 1201 0190 0C22     		movs	r2, #12
 1202 0192 1A70     		strb	r2, [r3]
 370:..\src/command_processing.c ****     packet_data[1] = NUM_OF_PARAMS;
 1203              		.loc 1 370 0
 1204 0194 07F54073 		add	r3, r7, #768
 1205 0198 1F22     		movs	r2, #31
 1206 019a 5A70     		strb	r2, [r3, #1]
 371:..\src/command_processing.c ****     
 372:..\src/command_processing.c ****     for (idx = 0; idx < NUM_OF_PARAMS; idx++) {
 1207              		.loc 1 372 0
 1208 019c 0023     		movs	r3, #0
 1209 019e 87F86D3D 		strb	r3, [r7, #3437]
 1210 01a2 01F05DB9 		b	.L53
 1211              	.L195:
 373:..\src/command_processing.c ****         
 374:..\src/command_processing.c ****         // Add parameter type and size to packet
 375:..\src/command_processing.c ****         packet_data[2 + PARAM_BYTE_SLOT*idx] = TYPES[idx];
 1212              		.loc 1 375 0
 1213 01a6 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1214 01aa 3222     		movs	r2, #50
 1215 01ac 02FB03F3 		mul	r3, r2, r3
 1216 01b0 0233     		adds	r3, r3, #2
 1217 01b2 97F86D2D 		ldrb	r2, [r7, #3437]	@ zero_extendqisi2
 1218 01b6 07F52771 		add	r1, r7, #668
 1219 01ba 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1220 01bc 07F54072 		add	r2, r7, #768
 1221 01c0 D154     		strb	r1, [r2, r3]
 376:..\src/command_processing.c ****         packet_data[3 + PARAM_BYTE_SLOT*idx] = NUM_ITEMS[idx];
 1222              		.loc 1 376 0
 1223 01c2 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1224 01c6 3222     		movs	r2, #50
 1225 01c8 02FB03F3 		mul	r3, r2, r3
 1226 01cc 0333     		adds	r3, r3, #3
 1227 01ce 97F86D2D 		ldrb	r2, [r7, #3437]	@ zero_extendqisi2
 1228 01d2 07F51F71 		add	r1, r7, #636
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 47


 1229 01d6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1230 01d8 07F54072 		add	r2, r7, #768
 1231 01dc D154     		strb	r1, [r2, r3]
 377:..\src/command_processing.c ****         
 378:..\src/command_processing.c ****         // Find size of data
 379:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1232              		.loc 1 379 0
 1233 01de 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1234 01e2 07F52772 		add	r2, r7, #668
 1235 01e6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1236 01e8 072B     		cmp	r3, #7
 1237 01ea 1FD8     		bhi	.L54
 1238 01ec 01A2     		adr	r2, .L56
 1239 01ee 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1240 01f2 00BF     		.p2align 2
 1241              	.L56:
 1242 01f4 15020000 		.word	.L55+1
 1243 01f8 15020000 		.word	.L55+1
 1244 01fc 15020000 		.word	.L55+1
 1245 0200 1D020000 		.word	.L57+1
 1246 0204 1D020000 		.word	.L57+1
 1247 0208 25020000 		.word	.L58+1
 1248 020c 25020000 		.word	.L58+1
 1249 0210 25020000 		.word	.L58+1
 1250              		.p2align 1
 1251              	.L55:
 380:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_INT8: case TYPE_UINT8:
 381:..\src/command_processing.c ****                 sod = 1; break;
 1252              		.loc 1 381 0
 1253 0214 0123     		movs	r3, #1
 1254 0216 87F86B3D 		strb	r3, [r7, #3435]
 1255 021a 07E0     		b	.L54
 1256              	.L57:
 382:..\src/command_processing.c ****             case TYPE_INT16: case TYPE_UINT16:
 383:..\src/command_processing.c ****                 sod = 2; break;
 1257              		.loc 1 383 0
 1258 021c 0223     		movs	r3, #2
 1259 021e 87F86B3D 		strb	r3, [r7, #3435]
 1260 0222 03E0     		b	.L54
 1261              	.L58:
 384:..\src/command_processing.c ****             case TYPE_INT32: case TYPE_UINT32: case TYPE_FLOAT:
 385:..\src/command_processing.c ****                 sod = 4; break;
 1262              		.loc 1 385 0
 1263 0224 0423     		movs	r3, #4
 1264 0226 87F86B3D 		strb	r3, [r7, #3435]
 1265 022a 00BF     		nop
 1266              	.L54:
 386:..\src/command_processing.c ****         }
 387:..\src/command_processing.c ****         
 388:..\src/command_processing.c ****         // Add parameter data to packet
 389:..\src/command_processing.c ****         switch (TYPES[idx]) {
 1267              		.loc 1 389 0
 1268 022c 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1269 0230 07F52772 		add	r2, r7, #668
 1270 0234 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1271 0236 072B     		cmp	r3, #7
 1272 0238 00F2C185 		bhi	.L59
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 48


 1273 023c 01A2     		adr	r2, .L61
 1274 023e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1275 0242 00BF     		.p2align 2
 1276              	.L61:
 1277 0244 65020000 		.word	.L60+1
 1278 0248 CB020000 		.word	.L62+1
 1279 024c 65020000 		.word	.L60+1
 1280 0250 31030000 		.word	.L63+1
 1281 0254 93040000 		.word	.L64+1
 1282 0258 37050000 		.word	.L65+1
 1283 025c 11070000 		.word	.L66+1
 1284 0260 B3070000 		.word	.L67+1
 1285              		.p2align 1
 1286              	.L60:
 390:..\src/command_processing.c ****             case TYPE_FLAG: case TYPE_UINT8:
 391:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1287              		.loc 1 391 0
 1288 0264 0023     		movs	r3, #0
 1289 0266 87F86F3D 		strb	r3, [r7, #3439]
 1290 026a 23E0     		b	.L68
 1291              	.L69:
 392:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1292              		.loc 1 392 0 discriminator 3
 1293 026c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1294 0270 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1295 0274 02FB03F3 		mul	r3, r2, r3
 1296 0278 1A46     		mov	r2, r3
 1297 027a D7F8643D 		ldr	r3, [r7, #3428]
 1298 027e 1344     		add	r3, r3, r2
 1299 0280 C7F85C3D 		str	r3, [r7, #3420]
 393:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1300              		.loc 1 393 0 discriminator 3
 1301 0284 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1302 0288 3222     		movs	r2, #50
 1303 028a 02FB03F3 		mul	r3, r2, r3
 1304 028e 1A1D     		adds	r2, r3, #4
 1305 0290 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1306 0294 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1307 0298 01FB03F3 		mul	r3, r1, r3
 1308 029c 1344     		add	r3, r3, r2
 1309 029e D7F85C2D 		ldr	r2, [r7, #3420]
 1310 02a2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1311 02a4 07F54072 		add	r2, r7, #768
 1312 02a8 D154     		strb	r1, [r2, r3]
 391:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1313              		.loc 1 391 0 discriminator 3
 1314 02aa 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1315 02ae 0133     		adds	r3, r3, #1
 1316 02b0 87F86F3D 		strb	r3, [r7, #3439]
 1317              	.L68:
 391:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1318              		.loc 1 391 0 is_stmt 0 discriminator 1
 1319 02b4 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1320 02b8 07F51F72 		add	r2, r7, #636
 1321 02bc D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1322 02be 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1323 02c2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 49


 1324 02c4 D2D3     		bcc	.L69
 394:..\src/command_processing.c ****                 }
 395:..\src/command_processing.c ****                 break;                
 1325              		.loc 1 395 0 is_stmt 1
 1326 02c6 00F07ABD 		b	.L59
 1327              	.L62:
 396:..\src/command_processing.c ****             case TYPE_INT8:
 397:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1328              		.loc 1 397 0
 1329 02ca 0023     		movs	r3, #0
 1330 02cc 87F86F3D 		strb	r3, [r7, #3439]
 1331 02d0 23E0     		b	.L70
 1332              	.L71:
 398:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1333              		.loc 1 398 0 discriminator 3
 1334 02d2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1335 02d6 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1336 02da 02FB03F3 		mul	r3, r2, r3
 1337 02de 1A46     		mov	r2, r3
 1338 02e0 D7F8643D 		ldr	r3, [r7, #3428]
 1339 02e4 1344     		add	r3, r3, r2
 1340 02e6 C7F85C3D 		str	r3, [r7, #3420]
 399:..\src/command_processing.c ****                     packet_data[4 + PARAM_BYTE_SLOT*idx + i*sod] = *m_tmp;
 1341              		.loc 1 399 0 discriminator 3
 1342 02ea 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1343 02ee 3222     		movs	r2, #50
 1344 02f0 02FB03F3 		mul	r3, r2, r3
 1345 02f4 1A1D     		adds	r2, r3, #4
 1346 02f6 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1347 02fa 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1348 02fe 01FB03F3 		mul	r3, r1, r3
 1349 0302 1344     		add	r3, r3, r2
 1350 0304 D7F85C2D 		ldr	r2, [r7, #3420]
 1351 0308 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1352 030a 07F54072 		add	r2, r7, #768
 1353 030e D154     		strb	r1, [r2, r3]
 397:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1354              		.loc 1 397 0 discriminator 3
 1355 0310 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1356 0314 0133     		adds	r3, r3, #1
 1357 0316 87F86F3D 		strb	r3, [r7, #3439]
 1358              	.L70:
 397:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1359              		.loc 1 397 0 is_stmt 0 discriminator 1
 1360 031a 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1361 031e 07F51F72 		add	r2, r7, #636
 1362 0322 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1363 0324 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1364 0328 9A42     		cmp	r2, r3
 1365 032a D2D3     		bcc	.L71
 400:..\src/command_processing.c ****                 }
 401:..\src/command_processing.c ****                 break;
 1366              		.loc 1 401 0 is_stmt 1
 1367 032c 00F047BD 		b	.L59
 1368              	.L63:
 402:..\src/command_processing.c ****             case TYPE_INT16:
 403:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 50


 1369              		.loc 1 403 0
 1370 0330 0023     		movs	r3, #0
 1371 0332 87F86F3D 		strb	r3, [r7, #3439]
 1372 0336 A0E0     		b	.L72
 1373              	.L79:
 404:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1374              		.loc 1 404 0
 1375 0338 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1376 033c 072B     		cmp	r3, #7
 1377 033e 58D1     		bne	.L73
 405:..\src/command_processing.c ****                         aux_int16 = (c_mem.m_off[i] >> c_mem.res[i]);
 1378              		.loc 1 405 0
 1379 0340 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1380 0344 154A     		ldr	r2, .L216+48
 1381 0346 0E33     		adds	r3, r3, #14
 1382 0348 9B00     		lsls	r3, r3, #2
 1383 034a 1344     		add	r3, r3, r2
 1384 034c 5B68     		ldr	r3, [r3, #4]
 1385 034e 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1386 0352 1249     		ldr	r1, .L216+48
 1387 0354 0A44     		add	r2, r2, r1
 1388 0356 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1389 035a 1341     		asrs	r3, r3, r2
 1390 035c 1AB2     		sxth	r2, r3
 1391 035e 07F2C623 		addw	r3, r7, #710
 1392 0362 1A80     		strh	r2, [r3]	@ movhi
 406:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1393              		.loc 1 406 0
 1394 0364 0023     		movs	r3, #0
 1395 0366 87F86E3D 		strb	r3, [r7, #3438]
 1396 036a 3BE0     		b	.L74
 1397              	.L217:
 1398              		.align	2
 1399              	.L216:
 1400 036c 01000000 		.word	c_mem+1
 1401 0370 7C010000 		.word	.LC0
 1402 0374 9C010000 		.word	.LC1
 1403 0378 BC010000 		.word	.LC2
 1404 037c D8040000 		.word	.LC35
 1405 0380 54050000 		.word	.LC36
 1406 0384 B8050000 		.word	.LC37
 1407 0388 F8050000 		.word	.LC38
 1408 038c 24060000 		.word	.LC39
 1409 0390 3C060000 		.word	.LC40
 1410 0394 70060000 		.word	.LC41
 1411 0398 00000000 		.word	.LC42
 1412 039c 00000000 		.word	c_mem
 1413              	.L75:
 407:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1414              		.loc 1 407 0 discriminator 3
 1415 03a0 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1416 03a4 3222     		movs	r2, #50
 1417 03a6 02FB03F3 		mul	r3, r2, r3
 1418 03aa 1A1D     		adds	r2, r3, #4
 1419 03ac 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1420 03b0 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1421 03b4 01FB03F3 		mul	r3, r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 51


 1422 03b8 1A44     		add	r2, r2, r3
 1423 03ba 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1424 03be 1A44     		add	r2, r2, r3
 1425 03c0 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1426 03c4 D31A     		subs	r3, r2, r3
 1427 03c6 013B     		subs	r3, r3, #1
 1428 03c8 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1429 03cc 07F2C621 		addw	r1, r7, #710
 1430 03d0 0A44     		add	r2, r2, r1
 1431 03d2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1432 03d4 07F54072 		add	r2, r7, #768
 1433 03d8 D154     		strb	r1, [r2, r3]
 406:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1434              		.loc 1 406 0 discriminator 3
 1435 03da 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1436 03de 0133     		adds	r3, r3, #1
 1437 03e0 87F86E3D 		strb	r3, [r7, #3438]
 1438              	.L74:
 406:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1439              		.loc 1 406 0 is_stmt 0 discriminator 1
 1440 03e4 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1441 03e8 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1442 03ec 9A42     		cmp	r2, r3
 1443 03ee D7D3     		bcc	.L75
 1444 03f0 3EE0     		b	.L76
 1445              	.L73:
 408:..\src/command_processing.c ****                         }
 409:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = (int16) (c
 410:..\src/command_processing.c ****                     }
 411:..\src/command_processing.c ****                     else {
 412:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 1446              		.loc 1 412 0 is_stmt 1
 1447 03f2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1448 03f6 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1449 03fa 02FB03F3 		mul	r3, r2, r3
 1450 03fe 1A46     		mov	r2, r3
 1451 0400 D7F8643D 		ldr	r3, [r7, #3428]
 1452 0404 1344     		add	r3, r3, r2
 1453 0406 C7F85C3D 		str	r3, [r7, #3420]
 413:..\src/command_processing.c ****                         aux_int16 = *((int16*)m_tmp);
 1454              		.loc 1 413 0
 1455 040a D7F85C3D 		ldr	r3, [r7, #3420]
 1456 040e B3F90020 		ldrsh	r2, [r3]
 1457 0412 07F2C623 		addw	r3, r7, #710
 1458 0416 1A80     		strh	r2, [r3]	@ movhi
 414:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1459              		.loc 1 414 0
 1460 0418 0023     		movs	r3, #0
 1461 041a 87F86E3D 		strb	r3, [r7, #3438]
 1462 041e 21E0     		b	.L77
 1463              	.L78:
 415:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 1464              		.loc 1 415 0 discriminator 3
 1465 0420 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1466 0424 3222     		movs	r2, #50
 1467 0426 02FB03F3 		mul	r3, r2, r3
 1468 042a 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 52


 1469 042c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1470 0430 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1471 0434 01FB03F3 		mul	r3, r1, r3
 1472 0438 1A44     		add	r2, r2, r3
 1473 043a 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1474 043e 1A44     		add	r2, r2, r3
 1475 0440 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1476 0444 D31A     		subs	r3, r2, r3
 1477 0446 013B     		subs	r3, r3, #1
 1478 0448 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1479 044c 07F2C621 		addw	r1, r7, #710
 1480 0450 0A44     		add	r2, r2, r1
 1481 0452 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1482 0454 07F54072 		add	r2, r7, #768
 1483 0458 D154     		strb	r1, [r2, r3]
 414:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1484              		.loc 1 414 0 discriminator 3
 1485 045a 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1486 045e 0133     		adds	r3, r3, #1
 1487 0460 87F86E3D 		strb	r3, [r7, #3438]
 1488              	.L77:
 414:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 1489              		.loc 1 414 0 is_stmt 0 discriminator 1
 1490 0464 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1491 0468 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1492 046c 9A42     		cmp	r2, r3
 1493 046e D7D3     		bcc	.L78
 1494              	.L76:
 403:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1495              		.loc 1 403 0 is_stmt 1 discriminator 2
 1496 0470 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1497 0474 0133     		adds	r3, r3, #1
 1498 0476 87F86F3D 		strb	r3, [r7, #3439]
 1499              	.L72:
 403:..\src/command_processing.c ****                     if (idx == 7) {     //Offset measurements
 1500              		.loc 1 403 0 is_stmt 0 discriminator 1
 1501 047a 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1502 047e 07F51F72 		add	r2, r7, #636
 1503 0482 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1504 0484 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1505 0488 9A42     		cmp	r2, r3
 1506 048a FFF455AF 		bcc	.L79
 416:..\src/command_processing.c ****                         }
 417:..\src/command_processing.c ****                         //*((int16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int16*)
 418:..\src/command_processing.c ****                     }
 419:..\src/command_processing.c ****                 }
 420:..\src/command_processing.c ****                 break;
 1507              		.loc 1 420 0 is_stmt 1
 1508 048e 00F096BC 		b	.L59
 1509              	.L64:
 421:..\src/command_processing.c ****             case TYPE_UINT16:
 422:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1510              		.loc 1 422 0
 1511 0492 0023     		movs	r3, #0
 1512 0494 87F86F3D 		strb	r3, [r7, #3439]
 1513 0498 42E0     		b	.L80
 1514              	.L83:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 53


 423:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1515              		.loc 1 423 0
 1516 049a 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1517 049e 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1518 04a2 02FB03F3 		mul	r3, r2, r3
 1519 04a6 1A46     		mov	r2, r3
 1520 04a8 D7F8643D 		ldr	r3, [r7, #3428]
 1521 04ac 1344     		add	r3, r3, r2
 1522 04ae C7F85C3D 		str	r3, [r7, #3420]
 424:..\src/command_processing.c ****                     aux_uint16 = *((uint16*)m_tmp);
 1523              		.loc 1 424 0
 1524 04b2 D7F85C3D 		ldr	r3, [r7, #3420]
 1525 04b6 1A88     		ldrh	r2, [r3]
 1526 04b8 07F53173 		add	r3, r7, #708
 1527 04bc 1A80     		strh	r2, [r3]	@ movhi
 425:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1528              		.loc 1 425 0
 1529 04be 0023     		movs	r3, #0
 1530 04c0 87F86E3D 		strb	r3, [r7, #3438]
 1531 04c4 21E0     		b	.L81
 1532              	.L82:
 426:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 1533              		.loc 1 426 0 discriminator 3
 1534 04c6 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1535 04ca 3222     		movs	r2, #50
 1536 04cc 02FB03F3 		mul	r3, r2, r3
 1537 04d0 1A1D     		adds	r2, r3, #4
 1538 04d2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1539 04d6 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1540 04da 01FB03F3 		mul	r3, r1, r3
 1541 04de 1A44     		add	r2, r2, r3
 1542 04e0 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1543 04e4 1A44     		add	r2, r2, r3
 1544 04e6 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1545 04ea D31A     		subs	r3, r2, r3
 1546 04ec 013B     		subs	r3, r3, #1
 1547 04ee 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1548 04f2 07F53171 		add	r1, r7, #708
 1549 04f6 0A44     		add	r2, r2, r1
 1550 04f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1551 04fa 07F54072 		add	r2, r7, #768
 1552 04fe D154     		strb	r1, [r2, r3]
 425:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1553              		.loc 1 425 0 discriminator 3
 1554 0500 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1555 0504 0133     		adds	r3, r3, #1
 1556 0506 87F86E3D 		strb	r3, [r7, #3438]
 1557              	.L81:
 425:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1558              		.loc 1 425 0 is_stmt 0 discriminator 1
 1559 050a 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1560 050e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1561 0512 9A42     		cmp	r2, r3
 1562 0514 D7D3     		bcc	.L82
 422:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1563              		.loc 1 422 0 is_stmt 1 discriminator 2
 1564 0516 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 54


 1565 051a 0133     		adds	r3, r3, #1
 1566 051c 87F86F3D 		strb	r3, [r7, #3439]
 1567              	.L80:
 422:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1568              		.loc 1 422 0 is_stmt 0 discriminator 1
 1569 0520 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1570 0524 07F51F72 		add	r2, r7, #636
 1571 0528 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1572 052a 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1573 052e 9A42     		cmp	r2, r3
 1574 0530 B3D3     		bcc	.L83
 427:..\src/command_processing.c ****                     }
 428:..\src/command_processing.c ****                     //*((uint16*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint16*)m_
 429:..\src/command_processing.c ****                 }
 430:..\src/command_processing.c ****                 break;
 1575              		.loc 1 430 0 is_stmt 1
 1576 0532 00F044BC 		b	.L59
 1577              	.L65:
 431:..\src/command_processing.c ****             case TYPE_INT32: 
 432:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1578              		.loc 1 432 0
 1579 0536 0023     		movs	r3, #0
 1580 0538 87F86F3D 		strb	r3, [r7, #3439]
 1581 053c DDE0     		b	.L84
 1582              	.L97:
 433:..\src/command_processing.c ****                     switch (idx){
 1583              		.loc 1 433 0
 1584 053e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1585 0542 0A2B     		cmp	r3, #10
 1586 0544 02D0     		beq	.L86
 1587 0546 152B     		cmp	r3, #21
 1588 0548 62D0     		beq	.L87
 1589 054a 92E0     		b	.L210
 1590              	.L86:
 434:..\src/command_processing.c ****                         case 10:    // POSITION LIMITS (param 11)
 435:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_inf >> c_mem.res[0]);
 1591              		.loc 1 435 0
 1592 054c C44B     		ldr	r3, .L218
 1593 054e 9B6D     		ldr	r3, [r3, #88]
 1594 0550 C34A     		ldr	r2, .L218
 1595 0552 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1596 0556 43FA02F2 		asr	r2, r3, r2
 1597 055a 07F53073 		add	r3, r7, #704
 1598 055e 1A60     		str	r2, [r3]
 436:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1599              		.loc 1 436 0
 1600 0560 0023     		movs	r3, #0
 1601 0562 87F86E3D 		strb	r3, [r7, #3438]
 1602 0566 1AE0     		b	.L88
 1603              	.L89:
 437:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1604              		.loc 1 437 0 discriminator 3
 1605 0568 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1606 056c 3222     		movs	r2, #50
 1607 056e 02FB03F3 		mul	r3, r2, r3
 1608 0572 1A1D     		adds	r2, r3, #4
 1609 0574 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 55


 1610 0578 1A44     		add	r2, r2, r3
 1611 057a 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1612 057e D31A     		subs	r3, r2, r3
 1613 0580 013B     		subs	r3, r3, #1
 1614 0582 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1615 0586 07F53071 		add	r1, r7, #704
 1616 058a 0A44     		add	r2, r2, r1
 1617 058c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1618 058e 07F54072 		add	r2, r7, #768
 1619 0592 D154     		strb	r1, [r2, r3]
 436:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1620              		.loc 1 436 0 discriminator 3
 1621 0594 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1622 0598 0133     		adds	r3, r3, #1
 1623 059a 87F86E3D 		strb	r3, [r7, #3438]
 1624              	.L88:
 436:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1625              		.loc 1 436 0 is_stmt 0 discriminator 1
 1626 059e 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1627 05a2 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1628 05a6 9A42     		cmp	r2, r3
 1629 05a8 DED3     		bcc	.L89
 438:..\src/command_processing.c ****                             }
 439:..\src/command_processing.c ****                             aux_int32 = (c_mem.pos_lim_sup >> c_mem.res[0]);
 1630              		.loc 1 439 0 is_stmt 1
 1631 05aa AD4B     		ldr	r3, .L218
 1632 05ac DB6D     		ldr	r3, [r3, #92]
 1633 05ae AC4A     		ldr	r2, .L218
 1634 05b0 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1635 05b4 43FA02F2 		asr	r2, r3, r2
 1636 05b8 07F53073 		add	r3, r7, #704
 1637 05bc 1A60     		str	r2, [r3]
 440:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1638              		.loc 1 440 0
 1639 05be 0023     		movs	r3, #0
 1640 05c0 87F86E3D 		strb	r3, [r7, #3438]
 1641 05c4 1DE0     		b	.L90
 1642              	.L91:
 441:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - j -1] = ((char*
 1643              		.loc 1 441 0 discriminator 3
 1644 05c6 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1645 05ca 3222     		movs	r2, #50
 1646 05cc 02FB03F3 		mul	r3, r2, r3
 1647 05d0 1A1D     		adds	r2, r3, #4
 1648 05d2 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1649 05d6 1A44     		add	r2, r2, r3
 1650 05d8 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1651 05dc 1A44     		add	r2, r2, r3
 1652 05de 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1653 05e2 D31A     		subs	r3, r2, r3
 1654 05e4 013B     		subs	r3, r3, #1
 1655 05e6 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1656 05ea 07F53071 		add	r1, r7, #704
 1657 05ee 0A44     		add	r2, r2, r1
 1658 05f0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1659 05f2 07F54072 		add	r2, r7, #768
 1660 05f6 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 56


 440:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1661              		.loc 1 440 0 discriminator 3
 1662 05f8 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1663 05fc 0133     		adds	r3, r3, #1
 1664 05fe 87F86E3D 		strb	r3, [r7, #3438]
 1665              	.L90:
 440:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1666              		.loc 1 440 0 is_stmt 0 discriminator 1
 1667 0602 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1668 0606 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1669 060a 9A42     		cmp	r2, r3
 1670 060c DBD3     		bcc	.L91
 442:..\src/command_processing.c ****                             }
 443:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.pos_l
 444:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (c_mem
 445:..\src/command_processing.c ****                             break;
 1671              		.loc 1 445 0 is_stmt 1
 1672 060e 6FE0     		b	.L92
 1673              	.L87:
 446:..\src/command_processing.c ****                         case 21:    // REST POSITION (param 22)
 447:..\src/command_processing.c ****                             aux_int32 = (c_mem.rest_pos >> c_mem.res[0]);
 1674              		.loc 1 447 0
 1675 0610 934B     		ldr	r3, .L218
 1676 0612 D3F89830 		ldr	r3, [r3, #152]
 1677 0616 924A     		ldr	r2, .L218
 1678 0618 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 1679 061c 43FA02F2 		asr	r2, r3, r2
 1680 0620 07F53073 		add	r3, r7, #704
 1681 0624 1A60     		str	r2, [r3]
 448:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1682              		.loc 1 448 0
 1683 0626 0023     		movs	r3, #0
 1684 0628 87F86E3D 		strb	r3, [r7, #3438]
 1685 062c 1AE0     		b	.L93
 1686              	.L94:
 449:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - j -1] = ((char*)(&aux
 1687              		.loc 1 449 0 discriminator 3
 1688 062e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1689 0632 3222     		movs	r2, #50
 1690 0634 02FB03F3 		mul	r3, r2, r3
 1691 0638 1A1D     		adds	r2, r3, #4
 1692 063a 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1693 063e 1A44     		add	r2, r2, r3
 1694 0640 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1695 0644 D31A     		subs	r3, r2, r3
 1696 0646 013B     		subs	r3, r3, #1
 1697 0648 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1698 064c 07F53071 		add	r1, r7, #704
 1699 0650 0A44     		add	r2, r2, r1
 1700 0652 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1701 0654 07F54072 		add	r2, r7, #768
 1702 0658 D154     		strb	r1, [r2, r3]
 448:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1703              		.loc 1 448 0 discriminator 3
 1704 065a 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1705 065e 0133     		adds	r3, r3, #1
 1706 0660 87F86E3D 		strb	r3, [r7, #3438]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 57


 1707              	.L93:
 448:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1708              		.loc 1 448 0 is_stmt 0 discriminator 1
 1709 0664 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1710 0668 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1711 066c 9A42     		cmp	r2, r3
 1712 066e DED3     		bcc	.L94
 450:..\src/command_processing.c ****                             }
 451:..\src/command_processing.c ****                             //*((int32 *)( packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (c_mem.rest_
 452:..\src/command_processing.c ****                             break;
 1713              		.loc 1 452 0 is_stmt 1
 1714 0670 3EE0     		b	.L92
 1715              	.L210:
 453:..\src/command_processing.c ****                         default:
 454:..\src/command_processing.c ****                             m_tmp = m_addr + i*sod;
 1716              		.loc 1 454 0
 1717 0672 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1718 0676 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1719 067a 02FB03F3 		mul	r3, r2, r3
 1720 067e 1A46     		mov	r2, r3
 1721 0680 D7F8643D 		ldr	r3, [r7, #3428]
 1722 0684 1344     		add	r3, r3, r2
 1723 0686 C7F85C3D 		str	r3, [r7, #3420]
 455:..\src/command_processing.c ****                             aux_int32 = *((int32*)m_tmp);
 1724              		.loc 1 455 0
 1725 068a D7F85C3D 		ldr	r3, [r7, #3420]
 1726 068e 1A68     		ldr	r2, [r3]
 1727 0690 07F53073 		add	r3, r7, #704
 1728 0694 1A60     		str	r2, [r3]
 456:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1729              		.loc 1 456 0
 1730 0696 0023     		movs	r3, #0
 1731 0698 87F86E3D 		strb	r3, [r7, #3438]
 1732 069c 21E0     		b	.L95
 1733              	.L96:
 457:..\src/command_processing.c ****                                 packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((cha
 1734              		.loc 1 457 0 discriminator 3
 1735 069e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1736 06a2 3222     		movs	r2, #50
 1737 06a4 02FB03F3 		mul	r3, r2, r3
 1738 06a8 1A1D     		adds	r2, r3, #4
 1739 06aa 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1740 06ae 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1741 06b2 01FB03F3 		mul	r3, r1, r3
 1742 06b6 1A44     		add	r2, r2, r3
 1743 06b8 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1744 06bc 1A44     		add	r2, r2, r3
 1745 06be 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1746 06c2 D31A     		subs	r3, r2, r3
 1747 06c4 013B     		subs	r3, r3, #1
 1748 06c6 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1749 06ca 07F53071 		add	r1, r7, #704
 1750 06ce 0A44     		add	r2, r2, r1
 1751 06d0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1752 06d2 07F54072 		add	r2, r7, #768
 1753 06d6 D154     		strb	r1, [r2, r3]
 456:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 58


 1754              		.loc 1 456 0 discriminator 3
 1755 06d8 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1756 06dc 0133     		adds	r3, r3, #1
 1757 06de 87F86E3D 		strb	r3, [r7, #3438]
 1758              	.L95:
 456:..\src/command_processing.c ****                             for(j = 0; j < sod; j++) {
 1759              		.loc 1 456 0 is_stmt 0 discriminator 1
 1760 06e2 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1761 06e6 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1762 06ea 9A42     		cmp	r2, r3
 1763 06ec D7D3     		bcc	.L96
 458:..\src/command_processing.c ****                             }
 459:..\src/command_processing.c ****                             //*((int32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((int
 460:..\src/command_processing.c ****                             break;
 1764              		.loc 1 460 0 is_stmt 1
 1765 06ee 00BF     		nop
 1766              	.L92:
 432:..\src/command_processing.c ****                     switch (idx){
 1767              		.loc 1 432 0 discriminator 2
 1768 06f0 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1769 06f4 0133     		adds	r3, r3, #1
 1770 06f6 87F86F3D 		strb	r3, [r7, #3439]
 1771              	.L84:
 432:..\src/command_processing.c ****                     switch (idx){
 1772              		.loc 1 432 0 is_stmt 0 discriminator 1
 1773 06fa 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1774 06fe 07F51F72 		add	r2, r7, #636
 1775 0702 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1776 0704 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1777 0708 9A42     		cmp	r2, r3
 1778 070a FFF418AF 		bcc	.L97
 461:..\src/command_processing.c ****                     }
 462:..\src/command_processing.c ****                 }
 463:..\src/command_processing.c ****                 break;
 1779              		.loc 1 463 0 is_stmt 1
 1780 070e 56E3     		b	.L59
 1781              	.L66:
 464:..\src/command_processing.c ****             case TYPE_UINT32: 
 465:..\src/command_processing.c ****                 for (i=0; i<NUM_ITEMS[idx]; i++){
 1782              		.loc 1 465 0
 1783 0710 0023     		movs	r3, #0
 1784 0712 87F86F3D 		strb	r3, [r7, #3439]
 1785 0716 42E0     		b	.L98
 1786              	.L101:
 466:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1787              		.loc 1 466 0
 1788 0718 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1789 071c 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 1790 0720 02FB03F3 		mul	r3, r2, r3
 1791 0724 1A46     		mov	r2, r3
 1792 0726 D7F8643D 		ldr	r3, [r7, #3428]
 1793 072a 1344     		add	r3, r3, r2
 1794 072c C7F85C3D 		str	r3, [r7, #3420]
 467:..\src/command_processing.c ****                     aux_uint32 = *((uint32*)m_tmp);
 1795              		.loc 1 467 0
 1796 0730 D7F85C3D 		ldr	r3, [r7, #3420]
 1797 0734 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 59


 1798 0736 07F52F73 		add	r3, r7, #700
 1799 073a 1A60     		str	r2, [r3]
 468:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1800              		.loc 1 468 0
 1801 073c 0023     		movs	r3, #0
 1802 073e 87F86E3D 		strb	r3, [r7, #3438]
 1803 0742 21E0     		b	.L99
 1804              	.L100:
 469:..\src/command_processing.c ****                         packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(&aux
 1805              		.loc 1 469 0 discriminator 3
 1806 0744 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1807 0748 3222     		movs	r2, #50
 1808 074a 02FB03F3 		mul	r3, r2, r3
 1809 074e 1A1D     		adds	r2, r3, #4
 1810 0750 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1811 0754 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 1812 0758 01FB03F3 		mul	r3, r1, r3
 1813 075c 1A44     		add	r2, r2, r3
 1814 075e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1815 0762 1A44     		add	r2, r2, r3
 1816 0764 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1817 0768 D31A     		subs	r3, r2, r3
 1818 076a 013B     		subs	r3, r3, #1
 1819 076c 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1820 0770 07F52F71 		add	r1, r7, #700
 1821 0774 0A44     		add	r2, r2, r1
 1822 0776 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1823 0778 07F54072 		add	r2, r7, #768
 1824 077c D154     		strb	r1, [r2, r3]
 468:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1825              		.loc 1 468 0 discriminator 3
 1826 077e 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 1827 0782 0133     		adds	r3, r3, #1
 1828 0784 87F86E3D 		strb	r3, [r7, #3438]
 1829              	.L99:
 468:..\src/command_processing.c ****                     for(j = 0; j < sod; j++) {
 1830              		.loc 1 468 0 is_stmt 0 discriminator 1
 1831 0788 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 1832 078c 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1833 0790 9A42     		cmp	r2, r3
 1834 0792 D7D3     		bcc	.L100
 465:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1835              		.loc 1 465 0 is_stmt 1 discriminator 2
 1836 0794 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1837 0798 0133     		adds	r3, r3, #1
 1838 079a 87F86F3D 		strb	r3, [r7, #3439]
 1839              	.L98:
 465:..\src/command_processing.c ****                     m_tmp = m_addr + i*sod;
 1840              		.loc 1 465 0 is_stmt 0 discriminator 1
 1841 079e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1842 07a2 07F51F72 		add	r2, r7, #636
 1843 07a6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1844 07a8 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1845 07ac 9A42     		cmp	r2, r3
 1846 07ae B3D3     		bcc	.L101
 470:..\src/command_processing.c ****                     }
 471:..\src/command_processing.c ****                     //*((uint32*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((uint32*)m_
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 60


 472:..\src/command_processing.c ****                 }
 473:..\src/command_processing.c ****                 break;
 1847              		.loc 1 473 0 is_stmt 1
 1848 07b0 05E3     		b	.L59
 1849              	.L67:
 474:..\src/command_processing.c ****                 
 475:..\src/command_processing.c ****             case TYPE_FLOAT:
 476:..\src/command_processing.c ****                 switch (idx) {
 1850              		.loc 1 476 0
 1851 07b2 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1852 07b6 012B     		cmp	r3, #1
 1853 07b8 03D0     		beq	.L103
 1854 07ba 022B     		cmp	r3, #2
 1855 07bc 00F05781 		beq	.L104
 1856 07c0 ABE2     		b	.L211
 1857              	.L103:
 477:..\src/command_processing.c ****                 
 478:..\src/command_processing.c ****                 case 1:     // POSITION PID (param 2)
 479:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 1858              		.loc 1 479 0
 1859 07c2 274B     		ldr	r3, .L218
 1860 07c4 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 1861 07c8 032B     		cmp	r3, #3
 1862 07ca 00F0A980 		beq	.L105
 480:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p / 65536;
 1863              		.loc 1 480 0
 1864 07ce 244B     		ldr	r3, .L218
 1865 07d0 5B68     		ldr	r3, [r3, #4]
 1866 07d2 1846     		mov	r0, r3
 1867 07d4 FFF7FEFF 		bl	__aeabi_i2f
 1868 07d8 0346     		mov	r3, r0
 1869 07da 4FF08F41 		mov	r1, #1199570944
 1870 07de 1846     		mov	r0, r3
 1871 07e0 FFF7FEFF 		bl	__aeabi_fdiv
 1872 07e4 0346     		mov	r3, r0
 1873 07e6 1A46     		mov	r2, r3
 1874 07e8 07F53273 		add	r3, r7, #712
 1875 07ec 1A60     		str	r2, [r3]	@ float
 481:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1876              		.loc 1 481 0
 1877 07ee 0023     		movs	r3, #0
 1878 07f0 87F86F3D 		strb	r3, [r7, #3439]
 1879 07f4 1AE0     		b	.L106
 1880              	.L107:
 482:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 1881              		.loc 1 482 0 discriminator 3
 1882 07f6 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1883 07fa 3222     		movs	r2, #50
 1884 07fc 02FB03F3 		mul	r3, r2, r3
 1885 0800 1A1D     		adds	r2, r3, #4
 1886 0802 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1887 0806 1A44     		add	r2, r2, r3
 1888 0808 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1889 080c D31A     		subs	r3, r2, r3
 1890 080e 013B     		subs	r3, r3, #1
 1891 0810 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1892 0814 07F53271 		add	r1, r7, #712
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 61


 1893 0818 0A44     		add	r2, r2, r1
 1894 081a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1895 081c 07F54072 		add	r2, r7, #768
 1896 0820 D154     		strb	r1, [r2, r3]
 481:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1897              		.loc 1 481 0 discriminator 3
 1898 0822 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1899 0826 0133     		adds	r3, r3, #1
 1900 0828 87F86F3D 		strb	r3, [r7, #3439]
 1901              	.L106:
 481:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1902              		.loc 1 481 0 is_stmt 0 discriminator 1
 1903 082c 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1904 0830 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1905 0834 9A42     		cmp	r2, r3
 1906 0836 DED3     		bcc	.L107
 483:..\src/command_processing.c ****                         }
 484:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i / 65536;
 1907              		.loc 1 484 0 is_stmt 1
 1908 0838 094B     		ldr	r3, .L218
 1909 083a 9B68     		ldr	r3, [r3, #8]
 1910 083c 1846     		mov	r0, r3
 1911 083e FFF7FEFF 		bl	__aeabi_i2f
 1912 0842 0346     		mov	r3, r0
 1913 0844 4FF08F41 		mov	r1, #1199570944
 1914 0848 1846     		mov	r0, r3
 1915 084a FFF7FEFF 		bl	__aeabi_fdiv
 1916 084e 0346     		mov	r3, r0
 1917 0850 1A46     		mov	r2, r3
 1918 0852 07F53273 		add	r3, r7, #712
 1919 0856 1A60     		str	r2, [r3]	@ float
 485:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1920              		.loc 1 485 0
 1921 0858 0023     		movs	r3, #0
 1922 085a 87F86F3D 		strb	r3, [r7, #3439]
 1923 085e 1FE0     		b	.L108
 1924              	.L219:
 1925              		.align	2
 1926              	.L218:
 1927 0860 00000000 		.word	c_mem
 1928              	.L109:
 486:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 1929              		.loc 1 486 0 discriminator 3
 1930 0864 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1931 0868 3222     		movs	r2, #50
 1932 086a 02FB03F3 		mul	r3, r2, r3
 1933 086e 1A1D     		adds	r2, r3, #4
 1934 0870 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1935 0874 1A44     		add	r2, r2, r3
 1936 0876 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1937 087a 1A44     		add	r2, r2, r3
 1938 087c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1939 0880 D31A     		subs	r3, r2, r3
 1940 0882 013B     		subs	r3, r3, #1
 1941 0884 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1942 0888 07F53271 		add	r1, r7, #712
 1943 088c 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 62


 1944 088e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1945 0890 07F54072 		add	r2, r7, #768
 1946 0894 D154     		strb	r1, [r2, r3]
 485:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1947              		.loc 1 485 0 discriminator 3
 1948 0896 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1949 089a 0133     		adds	r3, r3, #1
 1950 089c 87F86F3D 		strb	r3, [r7, #3439]
 1951              	.L108:
 485:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1952              		.loc 1 485 0 is_stmt 0 discriminator 1
 1953 08a0 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1954 08a4 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1955 08a8 9A42     		cmp	r2, r3
 1956 08aa DBD3     		bcc	.L109
 487:..\src/command_processing.c ****                         }
 488:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d / 65536;
 1957              		.loc 1 488 0 is_stmt 1
 1958 08ac D04B     		ldr	r3, .L220
 1959 08ae DB68     		ldr	r3, [r3, #12]
 1960 08b0 1846     		mov	r0, r3
 1961 08b2 FFF7FEFF 		bl	__aeabi_i2f
 1962 08b6 0346     		mov	r3, r0
 1963 08b8 4FF08F41 		mov	r1, #1199570944
 1964 08bc 1846     		mov	r0, r3
 1965 08be FFF7FEFF 		bl	__aeabi_fdiv
 1966 08c2 0346     		mov	r3, r0
 1967 08c4 1A46     		mov	r2, r3
 1968 08c6 07F53273 		add	r3, r7, #712
 1969 08ca 1A60     		str	r2, [r3]	@ float
 489:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1970              		.loc 1 489 0
 1971 08cc 0023     		movs	r3, #0
 1972 08ce 87F86F3D 		strb	r3, [r7, #3439]
 1973 08d2 1EE0     		b	.L110
 1974              	.L111:
 490:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 1975              		.loc 1 490 0 discriminator 3
 1976 08d4 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 1977 08d8 3222     		movs	r2, #50
 1978 08da 02FB03F3 		mul	r3, r2, r3
 1979 08de 1A1D     		adds	r2, r3, #4
 1980 08e0 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1981 08e4 5B00     		lsls	r3, r3, #1
 1982 08e6 1A44     		add	r2, r2, r3
 1983 08e8 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 1984 08ec 1A44     		add	r2, r2, r3
 1985 08ee 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1986 08f2 D31A     		subs	r3, r2, r3
 1987 08f4 013B     		subs	r3, r3, #1
 1988 08f6 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 1989 08fa 07F53271 		add	r1, r7, #712
 1990 08fe 0A44     		add	r2, r2, r1
 1991 0900 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1992 0902 07F54072 		add	r2, r7, #768
 1993 0906 D154     		strb	r1, [r2, r3]
 489:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 63


 1994              		.loc 1 489 0 discriminator 3
 1995 0908 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 1996 090c 0133     		adds	r3, r3, #1
 1997 090e 87F86F3D 		strb	r3, [r7, #3439]
 1998              	.L110:
 489:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 1999              		.loc 1 489 0 is_stmt 0 discriminator 1
 2000 0912 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2001 0916 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2002 091a 9A42     		cmp	r2, r3
 2003 091c DAD3     		bcc	.L111
 491:..\src/command_processing.c ****                         }
 492:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = aux_float;
 493:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 494:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 495:..\src/command_processing.c ****                     
 496:..\src/command_processing.c ****                     }
 497:..\src/command_processing.c ****                     else {
 498:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_dl / 65536;
 499:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 500:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 501:..\src/command_processing.c ****                         }
 502:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_dl / 65536;
 503:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 504:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 505:..\src/command_processing.c ****                         }
 506:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_dl / 65536;
 507:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 508:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 509:..\src/command_processing.c ****                         }
 510:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 511:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 512:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 513:..\src/command_processing.c ****                     }
 514:..\src/command_processing.c ****                     
 515:..\src/command_processing.c ****                     break;
 2004              		.loc 1 515 0 is_stmt 1
 2005 091e 4DE2     		b	.L119
 2006              	.L105:
 498:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2007              		.loc 1 498 0
 2008 0920 B34B     		ldr	r3, .L220
 2009 0922 DB69     		ldr	r3, [r3, #28]
 2010 0924 1846     		mov	r0, r3
 2011 0926 FFF7FEFF 		bl	__aeabi_i2f
 2012 092a 0346     		mov	r3, r0
 2013 092c 4FF08F41 		mov	r1, #1199570944
 2014 0930 1846     		mov	r0, r3
 2015 0932 FFF7FEFF 		bl	__aeabi_fdiv
 2016 0936 0346     		mov	r3, r0
 2017 0938 1A46     		mov	r2, r3
 2018 093a 07F53273 		add	r3, r7, #712
 2019 093e 1A60     		str	r2, [r3]	@ float
 499:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2020              		.loc 1 499 0
 2021 0940 0023     		movs	r3, #0
 2022 0942 87F86F3D 		strb	r3, [r7, #3439]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 64


 2023 0946 1AE0     		b	.L113
 2024              	.L114:
 500:..\src/command_processing.c ****                         }
 2025              		.loc 1 500 0 discriminator 3
 2026 0948 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2027 094c 3222     		movs	r2, #50
 2028 094e 02FB03F3 		mul	r3, r2, r3
 2029 0952 1A1D     		adds	r2, r3, #4
 2030 0954 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2031 0958 1A44     		add	r2, r2, r3
 2032 095a 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2033 095e D31A     		subs	r3, r2, r3
 2034 0960 013B     		subs	r3, r3, #1
 2035 0962 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2036 0966 07F53271 		add	r1, r7, #712
 2037 096a 0A44     		add	r2, r2, r1
 2038 096c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2039 096e 07F54072 		add	r2, r7, #768
 2040 0972 D154     		strb	r1, [r2, r3]
 499:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2041              		.loc 1 499 0 discriminator 3
 2042 0974 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2043 0978 0133     		adds	r3, r3, #1
 2044 097a 87F86F3D 		strb	r3, [r7, #3439]
 2045              	.L113:
 499:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2046              		.loc 1 499 0 is_stmt 0 discriminator 1
 2047 097e 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2048 0982 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2049 0986 9A42     		cmp	r2, r3
 2050 0988 DED3     		bcc	.L114
 502:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2051              		.loc 1 502 0 is_stmt 1
 2052 098a 994B     		ldr	r3, .L220
 2053 098c 1B6A     		ldr	r3, [r3, #32]
 2054 098e 1846     		mov	r0, r3
 2055 0990 FFF7FEFF 		bl	__aeabi_i2f
 2056 0994 0346     		mov	r3, r0
 2057 0996 4FF08F41 		mov	r1, #1199570944
 2058 099a 1846     		mov	r0, r3
 2059 099c FFF7FEFF 		bl	__aeabi_fdiv
 2060 09a0 0346     		mov	r3, r0
 2061 09a2 1A46     		mov	r2, r3
 2062 09a4 07F53273 		add	r3, r7, #712
 2063 09a8 1A60     		str	r2, [r3]	@ float
 503:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2064              		.loc 1 503 0
 2065 09aa 0023     		movs	r3, #0
 2066 09ac 87F86F3D 		strb	r3, [r7, #3439]
 2067 09b0 1DE0     		b	.L115
 2068              	.L116:
 504:..\src/command_processing.c ****                         }
 2069              		.loc 1 504 0 discriminator 3
 2070 09b2 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2071 09b6 3222     		movs	r2, #50
 2072 09b8 02FB03F3 		mul	r3, r2, r3
 2073 09bc 1A1D     		adds	r2, r3, #4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 65


 2074 09be 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2075 09c2 1A44     		add	r2, r2, r3
 2076 09c4 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2077 09c8 1A44     		add	r2, r2, r3
 2078 09ca 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2079 09ce D31A     		subs	r3, r2, r3
 2080 09d0 013B     		subs	r3, r3, #1
 2081 09d2 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2082 09d6 07F53271 		add	r1, r7, #712
 2083 09da 0A44     		add	r2, r2, r1
 2084 09dc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2085 09de 07F54072 		add	r2, r7, #768
 2086 09e2 D154     		strb	r1, [r2, r3]
 503:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2087              		.loc 1 503 0 discriminator 3
 2088 09e4 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2089 09e8 0133     		adds	r3, r3, #1
 2090 09ea 87F86F3D 		strb	r3, [r7, #3439]
 2091              	.L115:
 503:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2092              		.loc 1 503 0 is_stmt 0 discriminator 1
 2093 09ee 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2094 09f2 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2095 09f6 9A42     		cmp	r2, r3
 2096 09f8 DBD3     		bcc	.L116
 506:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2097              		.loc 1 506 0 is_stmt 1
 2098 09fa 7D4B     		ldr	r3, .L220
 2099 09fc 5B6A     		ldr	r3, [r3, #36]
 2100 09fe 1846     		mov	r0, r3
 2101 0a00 FFF7FEFF 		bl	__aeabi_i2f
 2102 0a04 0346     		mov	r3, r0
 2103 0a06 4FF08F41 		mov	r1, #1199570944
 2104 0a0a 1846     		mov	r0, r3
 2105 0a0c FFF7FEFF 		bl	__aeabi_fdiv
 2106 0a10 0346     		mov	r3, r0
 2107 0a12 1A46     		mov	r2, r3
 2108 0a14 07F53273 		add	r3, r7, #712
 2109 0a18 1A60     		str	r2, [r3]	@ float
 507:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2110              		.loc 1 507 0
 2111 0a1a 0023     		movs	r3, #0
 2112 0a1c 87F86F3D 		strb	r3, [r7, #3439]
 2113 0a20 1EE0     		b	.L117
 2114              	.L118:
 508:..\src/command_processing.c ****                         }
 2115              		.loc 1 508 0 discriminator 3
 2116 0a22 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2117 0a26 3222     		movs	r2, #50
 2118 0a28 02FB03F3 		mul	r3, r2, r3
 2119 0a2c 1A1D     		adds	r2, r3, #4
 2120 0a2e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2121 0a32 5B00     		lsls	r3, r3, #1
 2122 0a34 1A44     		add	r2, r2, r3
 2123 0a36 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2124 0a3a 1A44     		add	r2, r2, r3
 2125 0a3c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 66


 2126 0a40 D31A     		subs	r3, r2, r3
 2127 0a42 013B     		subs	r3, r3, #1
 2128 0a44 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2129 0a48 07F53271 		add	r1, r7, #712
 2130 0a4c 0A44     		add	r2, r2, r1
 2131 0a4e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2132 0a50 07F54072 		add	r2, r7, #768
 2133 0a54 D154     		strb	r1, [r2, r3]
 507:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2134              		.loc 1 507 0 discriminator 3
 2135 0a56 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2136 0a5a 0133     		adds	r3, r3, #1
 2137 0a5c 87F86F3D 		strb	r3, [r7, #3439]
 2138              	.L117:
 507:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2139              		.loc 1 507 0 is_stmt 0 discriminator 1
 2140 0a60 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2141 0a64 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2142 0a68 9A42     		cmp	r2, r3
 2143 0a6a DAD3     		bcc	.L118
 2144              		.loc 1 515 0 is_stmt 1
 2145 0a6c A6E1     		b	.L119
 2146              	.L104:
 516:..\src/command_processing.c ****                 case 2:     // POSITION PID (param 3)
 517:..\src/command_processing.c ****                     if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 2147              		.loc 1 517 0
 2148 0a6e 604B     		ldr	r3, .L220
 2149 0a70 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 2150 0a74 032B     		cmp	r3, #3
 2151 0a76 00F0A780 		beq	.L120
 518:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c / 65536;
 2152              		.loc 1 518 0
 2153 0a7a 5D4B     		ldr	r3, .L220
 2154 0a7c 1B69     		ldr	r3, [r3, #16]
 2155 0a7e 1846     		mov	r0, r3
 2156 0a80 FFF7FEFF 		bl	__aeabi_i2f
 2157 0a84 0346     		mov	r3, r0
 2158 0a86 4FF08F41 		mov	r1, #1199570944
 2159 0a8a 1846     		mov	r0, r3
 2160 0a8c FFF7FEFF 		bl	__aeabi_fdiv
 2161 0a90 0346     		mov	r3, r0
 2162 0a92 1A46     		mov	r2, r3
 2163 0a94 07F53273 		add	r3, r7, #712
 2164 0a98 1A60     		str	r2, [r3]	@ float
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2165              		.loc 1 519 0
 2166 0a9a 0023     		movs	r3, #0
 2167 0a9c 87F86F3D 		strb	r3, [r7, #3439]
 2168 0aa0 1AE0     		b	.L121
 2169              	.L122:
 520:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2170              		.loc 1 520 0 discriminator 3
 2171 0aa2 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2172 0aa6 3222     		movs	r2, #50
 2173 0aa8 02FB03F3 		mul	r3, r2, r3
 2174 0aac 1A1D     		adds	r2, r3, #4
 2175 0aae 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 67


 2176 0ab2 1A44     		add	r2, r2, r3
 2177 0ab4 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2178 0ab8 D31A     		subs	r3, r2, r3
 2179 0aba 013B     		subs	r3, r3, #1
 2180 0abc 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2181 0ac0 07F53271 		add	r1, r7, #712
 2182 0ac4 0A44     		add	r2, r2, r1
 2183 0ac6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2184 0ac8 07F54072 		add	r2, r7, #768
 2185 0acc D154     		strb	r1, [r2, r3]
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2186              		.loc 1 519 0 discriminator 3
 2187 0ace 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2188 0ad2 0133     		adds	r3, r3, #1
 2189 0ad4 87F86F3D 		strb	r3, [r7, #3439]
 2190              	.L121:
 519:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2191              		.loc 1 519 0 is_stmt 0 discriminator 1
 2192 0ad8 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2193 0adc 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2194 0ae0 9A42     		cmp	r2, r3
 2195 0ae2 DED3     		bcc	.L122
 521:..\src/command_processing.c ****                         }
 522:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c / 65536;
 2196              		.loc 1 522 0 is_stmt 1
 2197 0ae4 424B     		ldr	r3, .L220
 2198 0ae6 5B69     		ldr	r3, [r3, #20]
 2199 0ae8 1846     		mov	r0, r3
 2200 0aea FFF7FEFF 		bl	__aeabi_i2f
 2201 0aee 0346     		mov	r3, r0
 2202 0af0 4FF08F41 		mov	r1, #1199570944
 2203 0af4 1846     		mov	r0, r3
 2204 0af6 FFF7FEFF 		bl	__aeabi_fdiv
 2205 0afa 0346     		mov	r3, r0
 2206 0afc 1A46     		mov	r2, r3
 2207 0afe 07F53273 		add	r3, r7, #712
 2208 0b02 1A60     		str	r2, [r3]	@ float
 523:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2209              		.loc 1 523 0
 2210 0b04 0023     		movs	r3, #0
 2211 0b06 87F86F3D 		strb	r3, [r7, #3439]
 2212 0b0a 1DE0     		b	.L123
 2213              	.L124:
 524:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2214              		.loc 1 524 0 discriminator 3
 2215 0b0c 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2216 0b10 3222     		movs	r2, #50
 2217 0b12 02FB03F3 		mul	r3, r2, r3
 2218 0b16 1A1D     		adds	r2, r3, #4
 2219 0b18 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2220 0b1c 1A44     		add	r2, r2, r3
 2221 0b1e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2222 0b22 1A44     		add	r2, r2, r3
 2223 0b24 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2224 0b28 D31A     		subs	r3, r2, r3
 2225 0b2a 013B     		subs	r3, r3, #1
 2226 0b2c 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 68


 2227 0b30 07F53271 		add	r1, r7, #712
 2228 0b34 0A44     		add	r2, r2, r1
 2229 0b36 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2230 0b38 07F54072 		add	r2, r7, #768
 2231 0b3c D154     		strb	r1, [r2, r3]
 523:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2232              		.loc 1 523 0 discriminator 3
 2233 0b3e 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2234 0b42 0133     		adds	r3, r3, #1
 2235 0b44 87F86F3D 		strb	r3, [r7, #3439]
 2236              	.L123:
 523:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2237              		.loc 1 523 0 is_stmt 0 discriminator 1
 2238 0b48 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2239 0b4c 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2240 0b50 9A42     		cmp	r2, r3
 2241 0b52 DBD3     		bcc	.L124
 525:..\src/command_processing.c ****                         }
 526:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c / 65536;
 2242              		.loc 1 526 0 is_stmt 1
 2243 0b54 264B     		ldr	r3, .L220
 2244 0b56 9B69     		ldr	r3, [r3, #24]
 2245 0b58 1846     		mov	r0, r3
 2246 0b5a FFF7FEFF 		bl	__aeabi_i2f
 2247 0b5e 0346     		mov	r3, r0
 2248 0b60 4FF08F41 		mov	r1, #1199570944
 2249 0b64 1846     		mov	r0, r3
 2250 0b66 FFF7FEFF 		bl	__aeabi_fdiv
 2251 0b6a 0346     		mov	r3, r0
 2252 0b6c 1A46     		mov	r2, r3
 2253 0b6e 07F53273 		add	r3, r7, #712
 2254 0b72 1A60     		str	r2, [r3]	@ float
 527:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2255              		.loc 1 527 0
 2256 0b74 0023     		movs	r3, #0
 2257 0b76 87F86F3D 		strb	r3, [r7, #3439]
 2258 0b7a 1EE0     		b	.L125
 2259              	.L126:
 528:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2260              		.loc 1 528 0 discriminator 3
 2261 0b7c 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2262 0b80 3222     		movs	r2, #50
 2263 0b82 02FB03F3 		mul	r3, r2, r3
 2264 0b86 1A1D     		adds	r2, r3, #4
 2265 0b88 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2266 0b8c 5B00     		lsls	r3, r3, #1
 2267 0b8e 1A44     		add	r2, r2, r3
 2268 0b90 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2269 0b94 1A44     		add	r2, r2, r3
 2270 0b96 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2271 0b9a D31A     		subs	r3, r2, r3
 2272 0b9c 013B     		subs	r3, r3, #1
 2273 0b9e 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2274 0ba2 07F53271 		add	r1, r7, #712
 2275 0ba6 0A44     		add	r2, r2, r1
 2276 0ba8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2277 0baa 07F54072 		add	r2, r7, #768
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 69


 2278 0bae D154     		strb	r1, [r2, r3]
 527:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2279              		.loc 1 527 0 discriminator 3
 2280 0bb0 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2281 0bb4 0133     		adds	r3, r3, #1
 2282 0bb6 87F86F3D 		strb	r3, [r7, #3439]
 2283              	.L125:
 527:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2284              		.loc 1 527 0 is_stmt 0 discriminator 1
 2285 0bba 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2286 0bbe 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2287 0bc2 9A42     		cmp	r2, r3
 2288 0bc4 DAD3     		bcc	.L126
 529:..\src/command_processing.c ****                         }
 530:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 531:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 532:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 533:..\src/command_processing.c ****                     }
 534:..\src/command_processing.c ****                     else {
 535:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_p_c_dl / 65536;
 536:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 537:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 538:..\src/command_processing.c ****                         }
 539:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_i_c_dl / 65536;
 540:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 541:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 542:..\src/command_processing.c ****                         }
 543:..\src/command_processing.c ****                         aux_float = (float) c_mem.k_d_c_dl / 65536;
 544:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 545:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 546:..\src/command_processing.c ****                         }
 547:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx))) = (float) c_mem.k_
 548:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + sod)) = (float) c_
 549:..\src/command_processing.c ****                         //*((float *) (packet_data + (4 + PARAM_BYTE_SLOT*idx) + 2*sod)) = (float) 
 550:..\src/command_processing.c ****                     }
 551:..\src/command_processing.c ****                     break;
 2289              		.loc 1 551 0 is_stmt 1
 2290 0bc6 F9E0     		b	.L119
 2291              	.L120:
 535:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2292              		.loc 1 535 0
 2293 0bc8 094B     		ldr	r3, .L220
 2294 0bca 9B6A     		ldr	r3, [r3, #40]
 2295 0bcc 1846     		mov	r0, r3
 2296 0bce FFF7FEFF 		bl	__aeabi_i2f
 2297 0bd2 0346     		mov	r3, r0
 2298 0bd4 4FF08F41 		mov	r1, #1199570944
 2299 0bd8 1846     		mov	r0, r3
 2300 0bda FFF7FEFF 		bl	__aeabi_fdiv
 2301 0bde 0346     		mov	r3, r0
 2302 0be0 1A46     		mov	r2, r3
 2303 0be2 07F53273 		add	r3, r7, #712
 2304 0be6 1A60     		str	r2, [r3]	@ float
 536:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2305              		.loc 1 536 0
 2306 0be8 0023     		movs	r3, #0
 2307 0bea 87F86F3D 		strb	r3, [r7, #3439]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 70


 2308 0bee 1CE0     		b	.L128
 2309              	.L221:
 2310              		.align	2
 2311              	.L220:
 2312 0bf0 00000000 		.word	c_mem
 2313              	.L129:
 537:..\src/command_processing.c ****                         }
 2314              		.loc 1 537 0 discriminator 3
 2315 0bf4 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2316 0bf8 3222     		movs	r2, #50
 2317 0bfa 02FB03F3 		mul	r3, r2, r3
 2318 0bfe 1A1D     		adds	r2, r3, #4
 2319 0c00 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2320 0c04 1A44     		add	r2, r2, r3
 2321 0c06 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2322 0c0a D31A     		subs	r3, r2, r3
 2323 0c0c 013B     		subs	r3, r3, #1
 2324 0c0e 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2325 0c12 07F53271 		add	r1, r7, #712
 2326 0c16 0A44     		add	r2, r2, r1
 2327 0c18 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2328 0c1a 07F54072 		add	r2, r7, #768
 2329 0c1e D154     		strb	r1, [r2, r3]
 536:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2330              		.loc 1 536 0 discriminator 3
 2331 0c20 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2332 0c24 0133     		adds	r3, r3, #1
 2333 0c26 87F86F3D 		strb	r3, [r7, #3439]
 2334              	.L128:
 536:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx) + sod - i -1] = ((char*)(&aux_flo
 2335              		.loc 1 536 0 is_stmt 0 discriminator 1
 2336 0c2a 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2337 0c2e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2338 0c32 9A42     		cmp	r2, r3
 2339 0c34 DED3     		bcc	.L129
 539:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2340              		.loc 1 539 0 is_stmt 1
 2341 0c36 DE4B     		ldr	r3, .L222
 2342 0c38 DB6A     		ldr	r3, [r3, #44]
 2343 0c3a 1846     		mov	r0, r3
 2344 0c3c FFF7FEFF 		bl	__aeabi_i2f
 2345 0c40 0346     		mov	r3, r0
 2346 0c42 4FF08F41 		mov	r1, #1199570944
 2347 0c46 1846     		mov	r0, r3
 2348 0c48 FFF7FEFF 		bl	__aeabi_fdiv
 2349 0c4c 0346     		mov	r3, r0
 2350 0c4e 1A46     		mov	r2, r3
 2351 0c50 07F53273 		add	r3, r7, #712
 2352 0c54 1A60     		str	r2, [r3]	@ float
 540:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2353              		.loc 1 540 0
 2354 0c56 0023     		movs	r3, #0
 2355 0c58 87F86F3D 		strb	r3, [r7, #3439]
 2356 0c5c 1DE0     		b	.L130
 2357              	.L131:
 541:..\src/command_processing.c ****                         }
 2358              		.loc 1 541 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 71


 2359 0c5e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2360 0c62 3222     		movs	r2, #50
 2361 0c64 02FB03F3 		mul	r3, r2, r3
 2362 0c68 1A1D     		adds	r2, r3, #4
 2363 0c6a 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2364 0c6e 1A44     		add	r2, r2, r3
 2365 0c70 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2366 0c74 1A44     		add	r2, r2, r3
 2367 0c76 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2368 0c7a D31A     		subs	r3, r2, r3
 2369 0c7c 013B     		subs	r3, r3, #1
 2370 0c7e 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2371 0c82 07F53271 		add	r1, r7, #712
 2372 0c86 0A44     		add	r2, r2, r1
 2373 0c88 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2374 0c8a 07F54072 		add	r2, r7, #768
 2375 0c8e D154     		strb	r1, [r2, r3]
 540:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2376              		.loc 1 540 0 discriminator 3
 2377 0c90 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2378 0c94 0133     		adds	r3, r3, #1
 2379 0c96 87F86F3D 		strb	r3, [r7, #3439]
 2380              	.L130:
 540:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + sod) + sod - i -1] = ((char*)(&a
 2381              		.loc 1 540 0 is_stmt 0 discriminator 1
 2382 0c9a 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2383 0c9e 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2384 0ca2 9A42     		cmp	r2, r3
 2385 0ca4 DBD3     		bcc	.L131
 543:..\src/command_processing.c ****                         for(i = 0; i < sod; i++) {
 2386              		.loc 1 543 0 is_stmt 1
 2387 0ca6 C24B     		ldr	r3, .L222
 2388 0ca8 1B6B     		ldr	r3, [r3, #48]
 2389 0caa 1846     		mov	r0, r3
 2390 0cac FFF7FEFF 		bl	__aeabi_i2f
 2391 0cb0 0346     		mov	r3, r0
 2392 0cb2 4FF08F41 		mov	r1, #1199570944
 2393 0cb6 1846     		mov	r0, r3
 2394 0cb8 FFF7FEFF 		bl	__aeabi_fdiv
 2395 0cbc 0346     		mov	r3, r0
 2396 0cbe 1A46     		mov	r2, r3
 2397 0cc0 07F53273 		add	r3, r7, #712
 2398 0cc4 1A60     		str	r2, [r3]	@ float
 544:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2399              		.loc 1 544 0
 2400 0cc6 0023     		movs	r3, #0
 2401 0cc8 87F86F3D 		strb	r3, [r7, #3439]
 2402 0ccc 1EE0     		b	.L132
 2403              	.L133:
 545:..\src/command_processing.c ****                         }
 2404              		.loc 1 545 0 discriminator 3
 2405 0cce 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2406 0cd2 3222     		movs	r2, #50
 2407 0cd4 02FB03F3 		mul	r3, r2, r3
 2408 0cd8 1A1D     		adds	r2, r3, #4
 2409 0cda 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2410 0cde 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 72


 2411 0ce0 1A44     		add	r2, r2, r3
 2412 0ce2 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2413 0ce6 1A44     		add	r2, r2, r3
 2414 0ce8 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2415 0cec D31A     		subs	r3, r2, r3
 2416 0cee 013B     		subs	r3, r3, #1
 2417 0cf0 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2418 0cf4 07F53271 		add	r1, r7, #712
 2419 0cf8 0A44     		add	r2, r2, r1
 2420 0cfa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2421 0cfc 07F54072 		add	r2, r7, #768
 2422 0d00 D154     		strb	r1, [r2, r3]
 544:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2423              		.loc 1 544 0 discriminator 3
 2424 0d02 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2425 0d06 0133     		adds	r3, r3, #1
 2426 0d08 87F86F3D 		strb	r3, [r7, #3439]
 2427              	.L132:
 544:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + 2*sod) + sod - i -1] = ((char*)(
 2428              		.loc 1 544 0 is_stmt 0 discriminator 1
 2429 0d0c 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2430 0d10 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2431 0d14 9A42     		cmp	r2, r3
 2432 0d16 DAD3     		bcc	.L133
 2433              		.loc 1 551 0 is_stmt 1
 2434 0d18 50E0     		b	.L119
 2435              	.L211:
 552:..\src/command_processing.c ****                 default:
 553:..\src/command_processing.c ****                     for (i=0; i<NUM_ITEMS[idx]; i++){
 2436              		.loc 1 553 0
 2437 0d1a 0023     		movs	r3, #0
 2438 0d1c 87F86F3D 		strb	r3, [r7, #3439]
 2439 0d20 42E0     		b	.L134
 2440              	.L137:
 554:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2441              		.loc 1 554 0
 2442 0d22 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2443 0d26 97F86B2D 		ldrb	r2, [r7, #3435]	@ zero_extendqisi2
 2444 0d2a 02FB03F3 		mul	r3, r2, r3
 2445 0d2e 1A46     		mov	r2, r3
 2446 0d30 D7F8643D 		ldr	r3, [r7, #3428]
 2447 0d34 1344     		add	r3, r3, r2
 2448 0d36 C7F85C3D 		str	r3, [r7, #3420]
 555:..\src/command_processing.c ****                         aux_float = *((float*)m_tmp);
 2449              		.loc 1 555 0
 2450 0d3a D7F85C3D 		ldr	r3, [r7, #3420]
 2451 0d3e 1A68     		ldr	r2, [r3]	@ float
 2452 0d40 07F53273 		add	r3, r7, #712
 2453 0d44 1A60     		str	r2, [r3]	@ float
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2454              		.loc 1 556 0
 2455 0d46 0023     		movs	r3, #0
 2456 0d48 87F86E3D 		strb	r3, [r7, #3438]
 2457 0d4c 21E0     		b	.L135
 2458              	.L136:
 557:..\src/command_processing.c ****                             packet_data[(4 + PARAM_BYTE_SLOT*idx + i*sod) + sod - j -1] = ((char*)(
 2459              		.loc 1 557 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 73


 2460 0d4e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2461 0d52 3222     		movs	r2, #50
 2462 0d54 02FB03F3 		mul	r3, r2, r3
 2463 0d58 1A1D     		adds	r2, r3, #4
 2464 0d5a 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2465 0d5e 97F86B1D 		ldrb	r1, [r7, #3435]	@ zero_extendqisi2
 2466 0d62 01FB03F3 		mul	r3, r1, r3
 2467 0d66 1A44     		add	r2, r2, r3
 2468 0d68 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2469 0d6c 1A44     		add	r2, r2, r3
 2470 0d6e 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 2471 0d72 D31A     		subs	r3, r2, r3
 2472 0d74 013B     		subs	r3, r3, #1
 2473 0d76 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 2474 0d7a 07F53271 		add	r1, r7, #712
 2475 0d7e 0A44     		add	r2, r2, r1
 2476 0d80 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2477 0d82 07F54072 		add	r2, r7, #768
 2478 0d86 D154     		strb	r1, [r2, r3]
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2479              		.loc 1 556 0 discriminator 3
 2480 0d88 97F86E3D 		ldrb	r3, [r7, #3438]	@ zero_extendqisi2
 2481 0d8c 0133     		adds	r3, r3, #1
 2482 0d8e 87F86E3D 		strb	r3, [r7, #3438]
 2483              	.L135:
 556:..\src/command_processing.c ****                         for(j = 0; j < sod; j++) {
 2484              		.loc 1 556 0 is_stmt 0 discriminator 1
 2485 0d92 97F86E2D 		ldrb	r2, [r7, #3438]	@ zero_extendqisi2
 2486 0d96 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 2487 0d9a 9A42     		cmp	r2, r3
 2488 0d9c D7D3     		bcc	.L136
 553:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2489              		.loc 1 553 0 is_stmt 1 discriminator 2
 2490 0d9e 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 2491 0da2 0133     		adds	r3, r3, #1
 2492 0da4 87F86F3D 		strb	r3, [r7, #3439]
 2493              	.L134:
 553:..\src/command_processing.c ****                         m_tmp = m_addr + i*sod;
 2494              		.loc 1 553 0 is_stmt 0 discriminator 1
 2495 0da8 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2496 0dac 07F51F72 		add	r2, r7, #636
 2497 0db0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2498 0db2 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 2499 0db6 9A42     		cmp	r2, r3
 2500 0db8 B3D3     		bcc	.L137
 558:..\src/command_processing.c ****                         }
 559:..\src/command_processing.c ****                         //*((float*)(packet_data + (4 + PARAM_BYTE_SLOT*idx) + i*sod)) = *((float*)
 560:..\src/command_processing.c ****                     }
 561:..\src/command_processing.c ****                     break;
 2501              		.loc 1 561 0 is_stmt 1
 2502 0dba 00BF     		nop
 2503              	.L119:
 562:..\src/command_processing.c ****                 }
 563:..\src/command_processing.c ****                 break;          
 2504              		.loc 1 563 0 discriminator 4
 2505 0dbc 00BF     		nop
 2506              	.L59:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 74


 564:..\src/command_processing.c ****         }
 565:..\src/command_processing.c ****         
 566:..\src/command_processing.c ****         sprintf(aux_str, (char*)PARAMS_STR[idx]);
 2507              		.loc 1 566 0
 2508 0dbe 97F86D2D 		ldrb	r2, [r7, #3437]	@ zero_extendqisi2
 2509 0dc2 07F5F873 		add	r3, r7, #496
 2510 0dc6 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2511 0dca 07F53373 		add	r3, r7, #716
 2512 0dce 1146     		mov	r1, r2
 2513 0dd0 1846     		mov	r0, r3
 2514 0dd2 FFF7FEFF 		bl	sprintf
 567:..\src/command_processing.c ****         string_lenght = strlen(aux_str);
 2515              		.loc 1 567 0
 2516 0dd6 07F53373 		add	r3, r7, #716
 2517 0dda 1846     		mov	r0, r3
 2518 0ddc FFF7FEFF 		bl	strlen
 2519 0de0 0346     		mov	r3, r0
 2520 0de2 87F86A3D 		strb	r3, [r7, #3434]
 568:..\src/command_processing.c ****         
 569:..\src/command_processing.c ****         // Parameters with a menu
 570:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 2521              		.loc 1 570 0
 2522 0de6 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 2523 0dea 07F52772 		add	r2, r7, #668
 2524 0dee D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2525 0df0 002B     		cmp	r3, #0
 2526 0df2 40F04882 		bne	.L138
 571:..\src/command_processing.c ****             switch(NUM_MENU[idx_menu]){
 2527              		.loc 1 571 0
 2528 0df6 97F86C3D 		ldrb	r3, [r7, #3436]	@ zero_extendqisi2
 2529 0dfa 07F51B72 		add	r2, r7, #620
 2530 0dfe D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2531 0e00 013B     		subs	r3, r3, #1
 2532 0e02 062B     		cmp	r3, #6
 2533 0e04 00F23582 		bhi	.L139
 2534 0e08 01A2     		adr	r2, .L141
 2535 0e0a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2536 0e0e 00BF     		.p2align 2
 2537              	.L141:
 2538 0e10 2D0E0000 		.word	.L140+1
 2539 0e14 450F0000 		.word	.L142+1
 2540 0e18 2B100000 		.word	.L143+1
 2541 0e1c 71100000 		.word	.L144+1
 2542 0e20 C7100000 		.word	.L145+1
 2543 0e24 15110000 		.word	.L146+1
 2544 0e28 CB110000 		.word	.L147+1
 2545              		.p2align 1
 2546              	.L140:
 572:..\src/command_processing.c ****                 case 1:     // input mode menu
 573:..\src/command_processing.c ****                     switch(*m_addr) {
 2547              		.loc 1 573 0
 2548 0e2c D7F8643D 		ldr	r3, [r7, #3428]
 2549 0e30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2550 0e32 052B     		cmp	r3, #5
 2551 0e34 00F21882 		bhi	.L213
 2552 0e38 01A2     		adr	r2, .L150
 2553 0e3a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 75


 2554 0e3e 00BF     		.p2align 2
 2555              	.L150:
 2556 0e40 590E0000 		.word	.L149+1
 2557 0e44 790E0000 		.word	.L151+1
 2558 0e48 9B0E0000 		.word	.L152+1
 2559 0e4c C50E0000 		.word	.L153+1
 2560 0e50 ED0E0000 		.word	.L154+1
 2561 0e54 130F0000 		.word	.L155+1
 2562              		.p2align 1
 2563              	.L149:
 574:..\src/command_processing.c ****                         case INPUT_MODE_EXTERNAL:
 575:..\src/command_processing.c ****                             strcat(aux_str, " Usb");
 2564              		.loc 1 575 0
 2565 0e58 07F53373 		add	r3, r7, #716
 2566 0e5c 1846     		mov	r0, r3
 2567 0e5e FFF7FEFF 		bl	strlen
 2568 0e62 0346     		mov	r3, r0
 2569 0e64 1A46     		mov	r2, r3
 2570 0e66 07F53373 		add	r3, r7, #716
 2571 0e6a 1344     		add	r3, r3, r2
 2572 0e6c 514A     		ldr	r2, .L222+4
 2573 0e6e 1068     		ldr	r0, [r2]	@ unaligned
 2574 0e70 1860     		str	r0, [r3]	@ unaligned
 2575 0e72 1279     		ldrb	r2, [r2, #4]
 2576 0e74 1A71     		strb	r2, [r3, #4]
 576:..\src/command_processing.c ****                         break;
 2577              		.loc 1 576 0
 2578 0e76 64E0     		b	.L148
 2579              	.L151:
 577:..\src/command_processing.c ****                         case INPUT_MODE_ENCODER3:
 578:..\src/command_processing.c ****                             strcat(aux_str, " Handle");
 2580              		.loc 1 578 0
 2581 0e78 07F53373 		add	r3, r7, #716
 2582 0e7c 1846     		mov	r0, r3
 2583 0e7e FFF7FEFF 		bl	strlen
 2584 0e82 0346     		mov	r3, r0
 2585 0e84 1A46     		mov	r2, r3
 2586 0e86 07F53373 		add	r3, r7, #716
 2587 0e8a 1344     		add	r3, r3, r2
 2588 0e8c 4A49     		ldr	r1, .L222+8
 2589 0e8e 1A46     		mov	r2, r3
 2590 0e90 0B46     		mov	r3, r1
 2591 0e92 03CB     		ldmia	r3!, {r0, r1}
 2592 0e94 1060     		str	r0, [r2]	@ unaligned
 2593 0e96 5160     		str	r1, [r2, #4]	@ unaligned
 579:..\src/command_processing.c ****                         break;
 2594              		.loc 1 579 0
 2595 0e98 53E0     		b	.L148
 2596              	.L152:
 580:..\src/command_processing.c ****                         case INPUT_MODE_EMG_PROPORTIONAL:
 581:..\src/command_processing.c ****                             strcat(aux_str, " EMG proportional");
 2597              		.loc 1 581 0
 2598 0e9a 07F53373 		add	r3, r7, #716
 2599 0e9e 1846     		mov	r0, r3
 2600 0ea0 FFF7FEFF 		bl	strlen
 2601 0ea4 0346     		mov	r3, r0
 2602 0ea6 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 76


 2603 0ea8 07F53373 		add	r3, r7, #716
 2604 0eac 1344     		add	r3, r3, r2
 2605 0eae 434A     		ldr	r2, .L222+12
 2606 0eb0 1D46     		mov	r5, r3
 2607 0eb2 1446     		mov	r4, r2
 2608 0eb4 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2609 0eb6 2860     		str	r0, [r5]	@ unaligned
 2610 0eb8 6960     		str	r1, [r5, #4]	@ unaligned
 2611 0eba AA60     		str	r2, [r5, #8]	@ unaligned
 2612 0ebc EB60     		str	r3, [r5, #12]	@ unaligned
 2613 0ebe 2388     		ldrh	r3, [r4]	@ unaligned
 2614 0ec0 2B82     		strh	r3, [r5, #16]	@ unaligned
 582:..\src/command_processing.c ****                         break;
 2615              		.loc 1 582 0
 2616 0ec2 3EE0     		b	.L148
 2617              	.L153:
 583:..\src/command_processing.c ****                         case INPUT_MODE_EMG_INTEGRAL:
 584:..\src/command_processing.c ****                             strcat(aux_str, " EMG integral");
 2618              		.loc 1 584 0
 2619 0ec4 07F53373 		add	r3, r7, #716
 2620 0ec8 1846     		mov	r0, r3
 2621 0eca FFF7FEFF 		bl	strlen
 2622 0ece 0346     		mov	r3, r0
 2623 0ed0 1A46     		mov	r2, r3
 2624 0ed2 07F53373 		add	r3, r7, #716
 2625 0ed6 1344     		add	r3, r3, r2
 2626 0ed8 394A     		ldr	r2, .L222+16
 2627 0eda 1C46     		mov	r4, r3
 2628 0edc 1346     		mov	r3, r2
 2629 0ede 07CB     		ldmia	r3!, {r0, r1, r2}
 2630 0ee0 2060     		str	r0, [r4]	@ unaligned
 2631 0ee2 6160     		str	r1, [r4, #4]	@ unaligned
 2632 0ee4 A260     		str	r2, [r4, #8]	@ unaligned
 2633 0ee6 1B88     		ldrh	r3, [r3]	@ unaligned
 2634 0ee8 A381     		strh	r3, [r4, #12]	@ unaligned
 585:..\src/command_processing.c ****                         break;
 2635              		.loc 1 585 0
 2636 0eea 2AE0     		b	.L148
 2637              	.L154:
 586:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS:
 587:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS");
 2638              		.loc 1 587 0
 2639 0eec 07F53373 		add	r3, r7, #716
 2640 0ef0 1846     		mov	r0, r3
 2641 0ef2 FFF7FEFF 		bl	strlen
 2642 0ef6 0346     		mov	r3, r0
 2643 0ef8 1A46     		mov	r2, r3
 2644 0efa 07F53373 		add	r3, r7, #716
 2645 0efe 1344     		add	r3, r3, r2
 2646 0f00 3049     		ldr	r1, .L222+20
 2647 0f02 1A46     		mov	r2, r3
 2648 0f04 0B46     		mov	r3, r1
 2649 0f06 03CB     		ldmia	r3!, {r0, r1}
 2650 0f08 1060     		str	r0, [r2]	@ unaligned
 2651 0f0a 5160     		str	r1, [r2, #4]	@ unaligned
 2652 0f0c 1B88     		ldrh	r3, [r3]	@ unaligned
 2653 0f0e 1381     		strh	r3, [r2, #8]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 77


 588:..\src/command_processing.c ****                         break;
 2654              		.loc 1 588 0
 2655 0f10 17E0     		b	.L148
 2656              	.L155:
 589:..\src/command_processing.c ****                         case INPUT_MODE_EMG_FCFS_ADV:
 590:..\src/command_processing.c ****                             strcat(aux_str, " EMG FCFS Advanced");
 2657              		.loc 1 590 0
 2658 0f12 07F53373 		add	r3, r7, #716
 2659 0f16 1846     		mov	r0, r3
 2660 0f18 FFF7FEFF 		bl	strlen
 2661 0f1c 0346     		mov	r3, r0
 2662 0f1e 1A46     		mov	r2, r3
 2663 0f20 07F53373 		add	r3, r7, #716
 2664 0f24 1344     		add	r3, r3, r2
 2665 0f26 284A     		ldr	r2, .L222+24
 2666 0f28 1D46     		mov	r5, r3
 2667 0f2a 1446     		mov	r4, r2
 2668 0f2c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2669 0f2e 2860     		str	r0, [r5]	@ unaligned
 2670 0f30 6960     		str	r1, [r5, #4]	@ unaligned
 2671 0f32 AA60     		str	r2, [r5, #8]	@ unaligned
 2672 0f34 EB60     		str	r3, [r5, #12]	@ unaligned
 2673 0f36 2388     		ldrh	r3, [r4]	@ unaligned
 2674 0f38 A278     		ldrb	r2, [r4, #2]
 2675 0f3a 2B82     		strh	r3, [r5, #16]	@ unaligned
 2676 0f3c 1346     		mov	r3, r2
 2677 0f3e AB74     		strb	r3, [r5, #18]
 591:..\src/command_processing.c ****                         break;
 2678              		.loc 1 591 0
 2679 0f40 00BF     		nop
 2680              	.L148:
 592:..\src/command_processing.c ****                     }
 593:..\src/command_processing.c ****                     break;
 2681              		.loc 1 593 0
 2682 0f42 91E1     		b	.L213
 2683              	.L142:
 594:..\src/command_processing.c ****                 case 2:     // control mode menu
 595:..\src/command_processing.c ****                     switch(*m_addr){
 2684              		.loc 1 595 0
 2685 0f44 D7F8643D 		ldr	r3, [r7, #3428]
 2686 0f48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2687 0f4a 032B     		cmp	r3, #3
 2688 0f4c 00F28E81 		bhi	.L214
 2689 0f50 01A2     		adr	r2, .L158
 2690 0f52 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2691 0f56 00BF     		.p2align 2
 2692              	.L158:
 2693 0f58 690F0000 		.word	.L157+1
 2694 0f5c 8F0F0000 		.word	.L159+1
 2695 0f60 D50F0000 		.word	.L160+1
 2696 0f64 FB0F0000 		.word	.L161+1
 2697              		.p2align 1
 2698              	.L157:
 596:..\src/command_processing.c ****                         case CONTROL_ANGLE:
 597:..\src/command_processing.c ****                             strcat(aux_str, " Position");
 2699              		.loc 1 597 0
 2700 0f68 07F53373 		add	r3, r7, #716
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 78


 2701 0f6c 1846     		mov	r0, r3
 2702 0f6e FFF7FEFF 		bl	strlen
 2703 0f72 0346     		mov	r3, r0
 2704 0f74 1A46     		mov	r2, r3
 2705 0f76 07F53373 		add	r3, r7, #716
 2706 0f7a 1344     		add	r3, r3, r2
 2707 0f7c 1349     		ldr	r1, .L222+28
 2708 0f7e 1A46     		mov	r2, r3
 2709 0f80 0B46     		mov	r3, r1
 2710 0f82 03CB     		ldmia	r3!, {r0, r1}
 2711 0f84 1060     		str	r0, [r2]	@ unaligned
 2712 0f86 5160     		str	r1, [r2, #4]	@ unaligned
 2713 0f88 1B88     		ldrh	r3, [r3]	@ unaligned
 2714 0f8a 1381     		strh	r3, [r2, #8]	@ unaligned
 598:..\src/command_processing.c ****                         break;
 2715              		.loc 1 598 0
 2716 0f8c 4CE0     		b	.L156
 2717              	.L159:
 599:..\src/command_processing.c ****                         case CONTROL_PWM:
 600:..\src/command_processing.c ****                             strcat(aux_str, " PWM");
 2718              		.loc 1 600 0
 2719 0f8e 07F53373 		add	r3, r7, #716
 2720 0f92 1846     		mov	r0, r3
 2721 0f94 FFF7FEFF 		bl	strlen
 2722 0f98 0346     		mov	r3, r0
 2723 0f9a 1A46     		mov	r2, r3
 2724 0f9c 07F53373 		add	r3, r7, #716
 2725 0fa0 1344     		add	r3, r3, r2
 2726 0fa2 0B4A     		ldr	r2, .L222+32
 2727 0fa4 1068     		ldr	r0, [r2]	@ unaligned
 2728 0fa6 1860     		str	r0, [r3]	@ unaligned
 2729 0fa8 1279     		ldrb	r2, [r2, #4]
 2730 0faa 1A71     		strb	r2, [r3, #4]
 601:..\src/command_processing.c ****                         break;
 2731              		.loc 1 601 0
 2732 0fac 3CE0     		b	.L156
 2733              	.L223:
 2734 0fae 00BF     		.align	2
 2735              	.L222:
 2736 0fb0 00000000 		.word	c_mem
 2737 0fb4 74000000 		.word	.LC43
 2738 0fb8 7C000000 		.word	.LC44
 2739 0fbc 84000000 		.word	.LC45
 2740 0fc0 98000000 		.word	.LC46
 2741 0fc4 A8000000 		.word	.LC47
 2742 0fc8 B4000000 		.word	.LC48
 2743 0fcc C8000000 		.word	.LC49
 2744 0fd0 D4000000 		.word	.LC50
 2745              	.L160:
 602:..\src/command_processing.c ****                         case CONTROL_CURRENT:
 603:..\src/command_processing.c ****                             strcat(aux_str, " Current");
 2746              		.loc 1 603 0
 2747 0fd4 07F53373 		add	r3, r7, #716
 2748 0fd8 1846     		mov	r0, r3
 2749 0fda FFF7FEFF 		bl	strlen
 2750 0fde 0346     		mov	r3, r0
 2751 0fe0 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 79


 2752 0fe2 07F53373 		add	r3, r7, #716
 2753 0fe6 1344     		add	r3, r3, r2
 2754 0fe8 A949     		ldr	r1, .L224
 2755 0fea 1A46     		mov	r2, r3
 2756 0fec 0B46     		mov	r3, r1
 2757 0fee 03CB     		ldmia	r3!, {r0, r1}
 2758 0ff0 1060     		str	r0, [r2]	@ unaligned
 2759 0ff2 5160     		str	r1, [r2, #4]	@ unaligned
 2760 0ff4 1B78     		ldrb	r3, [r3]
 2761 0ff6 1372     		strb	r3, [r2, #8]
 604:..\src/command_processing.c ****                         break;
 2762              		.loc 1 604 0
 2763 0ff8 16E0     		b	.L156
 2764              	.L161:
 605:..\src/command_processing.c ****                         case CURR_AND_POS_CONTROL:
 606:..\src/command_processing.c ****                             strcat(aux_str, " Position and Current");
 2765              		.loc 1 606 0
 2766 0ffa 07F53373 		add	r3, r7, #716
 2767 0ffe 1846     		mov	r0, r3
 2768 1000 FFF7FEFF 		bl	strlen
 2769 1004 0346     		mov	r3, r0
 2770 1006 1A46     		mov	r2, r3
 2771 1008 07F53373 		add	r3, r7, #716
 2772 100c 1344     		add	r3, r3, r2
 2773 100e A14A     		ldr	r2, .L224+4
 2774 1010 1D46     		mov	r5, r3
 2775 1012 1446     		mov	r4, r2
 2776 1014 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 2777 1016 2860     		str	r0, [r5]	@ unaligned
 2778 1018 6960     		str	r1, [r5, #4]	@ unaligned
 2779 101a AA60     		str	r2, [r5, #8]	@ unaligned
 2780 101c EB60     		str	r3, [r5, #12]	@ unaligned
 2781 101e 2068     		ldr	r0, [r4]	@ unaligned
 2782 1020 2861     		str	r0, [r5, #16]	@ unaligned
 2783 1022 A388     		ldrh	r3, [r4, #4]	@ unaligned
 2784 1024 AB82     		strh	r3, [r5, #20]	@ unaligned
 607:..\src/command_processing.c ****                         break;
 2785              		.loc 1 607 0
 2786 1026 00BF     		nop
 2787              	.L156:
 608:..\src/command_processing.c ****                     }
 609:..\src/command_processing.c ****                     break;
 2788              		.loc 1 609 0
 2789 1028 20E1     		b	.L214
 2790              	.L143:
 610:..\src/command_processing.c ****                 case 3:     // yes/no menu
 611:..\src/command_processing.c ****                     if(*m_addr){
 2791              		.loc 1 611 0
 2792 102a D7F8643D 		ldr	r3, [r7, #3428]
 2793 102e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2794 1030 002B     		cmp	r3, #0
 2795 1032 0FD0     		beq	.L162
 612:..\src/command_processing.c ****                         strcat(aux_str, " YES\0");
 2796              		.loc 1 612 0
 2797 1034 07F53373 		add	r3, r7, #716
 2798 1038 1846     		mov	r0, r3
 2799 103a FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 80


 2800 103e 0346     		mov	r3, r0
 2801 1040 1A46     		mov	r2, r3
 2802 1042 07F53373 		add	r3, r7, #716
 2803 1046 1344     		add	r3, r3, r2
 2804 1048 934A     		ldr	r2, .L224+8
 2805 104a 1068     		ldr	r0, [r2]	@ unaligned
 2806 104c 1860     		str	r0, [r3]	@ unaligned
 2807 104e 1279     		ldrb	r2, [r2, #4]
 2808 1050 1A71     		strb	r2, [r3, #4]
 613:..\src/command_processing.c ****                     }
 614:..\src/command_processing.c ****                     else {
 615:..\src/command_processing.c ****                         strcat(aux_str, " NO\0");
 616:..\src/command_processing.c ****                     }
 617:..\src/command_processing.c ****                     break;    
 2809              		.loc 1 617 0
 2810 1052 0EE1     		b	.L139
 2811              	.L162:
 615:..\src/command_processing.c ****                     }
 2812              		.loc 1 615 0
 2813 1054 07F53373 		add	r3, r7, #716
 2814 1058 1846     		mov	r0, r3
 2815 105a FFF7FEFF 		bl	strlen
 2816 105e 0346     		mov	r3, r0
 2817 1060 1A46     		mov	r2, r3
 2818 1062 07F53373 		add	r3, r7, #716
 2819 1066 1344     		add	r3, r3, r2
 2820 1068 8C4A     		ldr	r2, .L224+12
 2821 106a 1068     		ldr	r0, [r2]	@ unaligned
 2822 106c 1860     		str	r0, [r3]	@ unaligned
 2823              		.loc 1 617 0
 2824 106e 00E1     		b	.L139
 2825              	.L144:
 618:..\src/command_processing.c ****                 case 4:     // right/lef menu
 619:..\src/command_processing.c ****                     switch(*m_addr){
 2826              		.loc 1 619 0
 2827 1070 D7F8643D 		ldr	r3, [r7, #3428]
 2828 1074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2829 1076 002B     		cmp	r3, #0
 2830 1078 02D0     		beq	.L165
 2831 107a 012B     		cmp	r3, #1
 2832 107c 12D0     		beq	.L166
 620:..\src/command_processing.c ****                         case RIGHT_HAND:
 621:..\src/command_processing.c ****                             strcat(aux_str, " Right\0");
 622:..\src/command_processing.c ****                         break;
 623:..\src/command_processing.c ****                         case LEFT_HAND:
 624:..\src/command_processing.c ****                             strcat(aux_str, " Left\0");
 625:..\src/command_processing.c ****                         break;
 626:..\src/command_processing.c ****                     }
 627:..\src/command_processing.c ****                     break;
 2833              		.loc 1 627 0
 2834 107e F8E0     		b	.L139
 2835              	.L165:
 621:..\src/command_processing.c ****                         break;
 2836              		.loc 1 621 0
 2837 1080 07F53373 		add	r3, r7, #716
 2838 1084 1846     		mov	r0, r3
 2839 1086 FFF7FEFF 		bl	strlen
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 81


 2840 108a 0346     		mov	r3, r0
 2841 108c 1A46     		mov	r2, r3
 2842 108e 07F53373 		add	r3, r7, #716
 2843 1092 1344     		add	r3, r3, r2
 2844 1094 824A     		ldr	r2, .L224+16
 2845 1096 1068     		ldr	r0, [r2]	@ unaligned
 2846 1098 1860     		str	r0, [r3]	@ unaligned
 2847 109a 9188     		ldrh	r1, [r2, #4]	@ unaligned
 2848 109c 9279     		ldrb	r2, [r2, #6]
 2849 109e 9980     		strh	r1, [r3, #4]	@ unaligned
 2850 10a0 9A71     		strb	r2, [r3, #6]
 622:..\src/command_processing.c ****                         case LEFT_HAND:
 2851              		.loc 1 622 0
 2852 10a2 0FE0     		b	.L164
 2853              	.L166:
 624:..\src/command_processing.c ****                         break;
 2854              		.loc 1 624 0
 2855 10a4 07F53373 		add	r3, r7, #716
 2856 10a8 1846     		mov	r0, r3
 2857 10aa FFF7FEFF 		bl	strlen
 2858 10ae 0346     		mov	r3, r0
 2859 10b0 1A46     		mov	r2, r3
 2860 10b2 07F53373 		add	r3, r7, #716
 2861 10b6 1344     		add	r3, r3, r2
 2862 10b8 7A4A     		ldr	r2, .L224+20
 2863 10ba 1068     		ldr	r0, [r2]	@ unaligned
 2864 10bc 1860     		str	r0, [r3]	@ unaligned
 2865 10be 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2866 10c0 9A80     		strh	r2, [r3, #4]	@ unaligned
 625:..\src/command_processing.c ****                     }
 2867              		.loc 1 625 0
 2868 10c2 00BF     		nop
 2869              	.L164:
 2870              		.loc 1 627 0
 2871 10c4 D5E0     		b	.L139
 2872              	.L145:
 628:..\src/command_processing.c ****                 case 5:
 629:..\src/command_processing.c ****                     switch(*m_addr){
 2873              		.loc 1 629 0
 2874 10c6 D7F8643D 		ldr	r3, [r7, #3428]
 2875 10ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2876 10cc 002B     		cmp	r3, #0
 2877 10ce 02D0     		beq	.L168
 2878 10d0 012B     		cmp	r3, #1
 2879 10d2 10D0     		beq	.L169
 630:..\src/command_processing.c ****                         case 0:
 631:..\src/command_processing.c ****                             strcat(aux_str, " OFF\0");
 632:..\src/command_processing.c ****                         break;
 633:..\src/command_processing.c ****                         case 1:
 634:..\src/command_processing.c ****                             strcat(aux_str, " ON\0");
 635:..\src/command_processing.c ****                         break;
 636:..\src/command_processing.c ****                     }
 637:..\src/command_processing.c ****                     break;
 2880              		.loc 1 637 0
 2881 10d4 CDE0     		b	.L139
 2882              	.L168:
 631:..\src/command_processing.c ****                         break;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 82


 2883              		.loc 1 631 0
 2884 10d6 07F53373 		add	r3, r7, #716
 2885 10da 1846     		mov	r0, r3
 2886 10dc FFF7FEFF 		bl	strlen
 2887 10e0 0346     		mov	r3, r0
 2888 10e2 1A46     		mov	r2, r3
 2889 10e4 07F53373 		add	r3, r7, #716
 2890 10e8 1344     		add	r3, r3, r2
 2891 10ea 6F4A     		ldr	r2, .L224+24
 2892 10ec 1068     		ldr	r0, [r2]	@ unaligned
 2893 10ee 1860     		str	r0, [r3]	@ unaligned
 2894 10f0 1279     		ldrb	r2, [r2, #4]
 2895 10f2 1A71     		strb	r2, [r3, #4]
 632:..\src/command_processing.c ****                         case 1:
 2896              		.loc 1 632 0
 2897 10f4 0DE0     		b	.L167
 2898              	.L169:
 634:..\src/command_processing.c ****                         break;
 2899              		.loc 1 634 0
 2900 10f6 07F53373 		add	r3, r7, #716
 2901 10fa 1846     		mov	r0, r3
 2902 10fc FFF7FEFF 		bl	strlen
 2903 1100 0346     		mov	r3, r0
 2904 1102 1A46     		mov	r2, r3
 2905 1104 07F53373 		add	r3, r7, #716
 2906 1108 1344     		add	r3, r3, r2
 2907 110a 684A     		ldr	r2, .L224+28
 2908 110c 1068     		ldr	r0, [r2]	@ unaligned
 2909 110e 1860     		str	r0, [r3]	@ unaligned
 635:..\src/command_processing.c ****                     }
 2910              		.loc 1 635 0
 2911 1110 00BF     		nop
 2912              	.L167:
 2913              		.loc 1 637 0
 2914 1112 AEE0     		b	.L139
 2915              	.L146:
 638:..\src/command_processing.c ****                 case 6:
 639:..\src/command_processing.c ****                     switch(*m_addr){
 2916              		.loc 1 639 0
 2917 1114 D7F8643D 		ldr	r3, [r7, #3428]
 2918 1118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2919 111a 032B     		cmp	r3, #3
 2920 111c 00F2A880 		bhi	.L215
 2921 1120 01A2     		adr	r2, .L172
 2922 1122 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2923 1126 00BF     		.p2align 2
 2924              	.L172:
 2925 1128 39110000 		.word	.L171+1
 2926 112c 59110000 		.word	.L173+1
 2927 1130 81110000 		.word	.L174+1
 2928 1134 A5110000 		.word	.L175+1
 2929              		.p2align 1
 2930              	.L171:
 640:..\src/command_processing.c ****                         case EXP_NONE:
 641:..\src/command_processing.c ****                             strcat(aux_str, " None\0");
 2931              		.loc 1 641 0
 2932 1138 07F53373 		add	r3, r7, #716
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 83


 2933 113c 1846     		mov	r0, r3
 2934 113e FFF7FEFF 		bl	strlen
 2935 1142 0346     		mov	r3, r0
 2936 1144 1A46     		mov	r2, r3
 2937 1146 07F53373 		add	r3, r7, #716
 2938 114a 1344     		add	r3, r3, r2
 2939 114c 584A     		ldr	r2, .L224+32
 2940 114e 1068     		ldr	r0, [r2]	@ unaligned
 2941 1150 1860     		str	r0, [r3]	@ unaligned
 2942 1152 9288     		ldrh	r2, [r2, #4]	@ unaligned
 2943 1154 9A80     		strh	r2, [r3, #4]	@ unaligned
 642:..\src/command_processing.c ****                             break;
 2944              		.loc 1 642 0
 2945 1156 37E0     		b	.L170
 2946              	.L173:
 643:..\src/command_processing.c ****                         case EXP_SD_RTC:
 644:..\src/command_processing.c ****                             strcat(aux_str, " SD/RTC board\0");
 2947              		.loc 1 644 0
 2948 1158 07F53373 		add	r3, r7, #716
 2949 115c 1846     		mov	r0, r3
 2950 115e FFF7FEFF 		bl	strlen
 2951 1162 0346     		mov	r3, r0
 2952 1164 1A46     		mov	r2, r3
 2953 1166 07F53373 		add	r3, r7, #716
 2954 116a 1344     		add	r3, r3, r2
 2955 116c 514A     		ldr	r2, .L224+36
 2956 116e 1C46     		mov	r4, r3
 2957 1170 1346     		mov	r3, r2
 2958 1172 07CB     		ldmia	r3!, {r0, r1, r2}
 2959 1174 2060     		str	r0, [r4]	@ unaligned
 2960 1176 6160     		str	r1, [r4, #4]	@ unaligned
 2961 1178 A260     		str	r2, [r4, #8]	@ unaligned
 2962 117a 1B88     		ldrh	r3, [r3]	@ unaligned
 2963 117c A381     		strh	r3, [r4, #12]	@ unaligned
 645:..\src/command_processing.c ****                             break;
 2964              		.loc 1 645 0
 2965 117e 23E0     		b	.L170
 2966              	.L174:
 646:..\src/command_processing.c ****                         case EXP_WIFI:
 647:..\src/command_processing.c ****         					strcat(aux_str, " WiFi board\0");
 2967              		.loc 1 647 0
 2968 1180 07F53373 		add	r3, r7, #716
 2969 1184 1846     		mov	r0, r3
 2970 1186 FFF7FEFF 		bl	strlen
 2971 118a 0346     		mov	r3, r0
 2972 118c 1A46     		mov	r2, r3
 2973 118e 07F53373 		add	r3, r7, #716
 2974 1192 1344     		add	r3, r3, r2
 2975 1194 484A     		ldr	r2, .L224+40
 2976 1196 1C46     		mov	r4, r3
 2977 1198 1346     		mov	r3, r2
 2978 119a 07CB     		ldmia	r3!, {r0, r1, r2}
 2979 119c 2060     		str	r0, [r4]	@ unaligned
 2980 119e 6160     		str	r1, [r4, #4]	@ unaligned
 2981 11a0 A260     		str	r2, [r4, #8]	@ unaligned
 648:..\src/command_processing.c ****         					break;
 2982              		.loc 1 648 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 84


 2983 11a2 11E0     		b	.L170
 2984              	.L175:
 649:..\src/command_processing.c ****                         case EXP_OTHER:
 650:..\src/command_processing.c ****         					strcat(aux_str, " Other\0");
 2985              		.loc 1 650 0
 2986 11a4 07F53373 		add	r3, r7, #716
 2987 11a8 1846     		mov	r0, r3
 2988 11aa FFF7FEFF 		bl	strlen
 2989 11ae 0346     		mov	r3, r0
 2990 11b0 1A46     		mov	r2, r3
 2991 11b2 07F53373 		add	r3, r7, #716
 2992 11b6 1344     		add	r3, r3, r2
 2993 11b8 404A     		ldr	r2, .L224+44
 2994 11ba 1068     		ldr	r0, [r2]	@ unaligned
 2995 11bc 1860     		str	r0, [r3]	@ unaligned
 2996 11be 9188     		ldrh	r1, [r2, #4]	@ unaligned
 2997 11c0 9279     		ldrb	r2, [r2, #6]
 2998 11c2 9980     		strh	r1, [r3, #4]	@ unaligned
 2999 11c4 9A71     		strb	r2, [r3, #6]
 651:..\src/command_processing.c ****         					break;
 3000              		.loc 1 651 0
 3001 11c6 00BF     		nop
 3002              	.L170:
 652:..\src/command_processing.c ****                     }
 653:..\src/command_processing.c ****                     break;
 3003              		.loc 1 653 0
 3004 11c8 52E0     		b	.L215
 3005              	.L147:
 654:..\src/command_processing.c ****                 case 7:
 655:..\src/command_processing.c ****                     switch(*m_addr){
 3006              		.loc 1 655 0
 3007 11ca D7F8643D 		ldr	r3, [r7, #3428]
 3008 11ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3009 11d0 012B     		cmp	r3, #1
 3010 11d2 13D0     		beq	.L177
 3011 11d4 022B     		cmp	r3, #2
 3012 11d6 21D0     		beq	.L178
 3013 11d8 002B     		cmp	r3, #0
 3014 11da 2FD1     		bne	.L212
 656:..\src/command_processing.c ****                         case 0: 
 657:..\src/command_processing.c ****                             strcat(aux_str, " None\0"); 
 3015              		.loc 1 657 0
 3016 11dc 07F53373 		add	r3, r7, #716
 3017 11e0 1846     		mov	r0, r3
 3018 11e2 FFF7FEFF 		bl	strlen
 3019 11e6 0346     		mov	r3, r0
 3020 11e8 1A46     		mov	r2, r3
 3021 11ea 07F53373 		add	r3, r7, #716
 3022 11ee 1344     		add	r3, r3, r2
 3023 11f0 2F4A     		ldr	r2, .L224+32
 3024 11f2 1068     		ldr	r0, [r2]	@ unaligned
 3025 11f4 1860     		str	r0, [r3]	@ unaligned
 3026 11f6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3027 11f8 9A80     		strh	r2, [r3, #4]	@ unaligned
 658:..\src/command_processing.c ****                             break;
 3028              		.loc 1 658 0
 3029 11fa 34E0     		b	.L180
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 85


 3030              	.L177:
 659:..\src/command_processing.c ****                         case 1: 
 660:..\src/command_processing.c ****                             strcat(aux_str, " Low\0"); 
 3031              		.loc 1 660 0
 3032 11fc 07F53373 		add	r3, r7, #716
 3033 1200 1846     		mov	r0, r3
 3034 1202 FFF7FEFF 		bl	strlen
 3035 1206 0346     		mov	r3, r0
 3036 1208 1A46     		mov	r2, r3
 3037 120a 07F53373 		add	r3, r7, #716
 3038 120e 1344     		add	r3, r3, r2
 3039 1210 2B4A     		ldr	r2, .L224+48
 3040 1212 1068     		ldr	r0, [r2]	@ unaligned
 3041 1214 1860     		str	r0, [r3]	@ unaligned
 3042 1216 1279     		ldrb	r2, [r2, #4]
 3043 1218 1A71     		strb	r2, [r3, #4]
 661:..\src/command_processing.c ****                             break;
 3044              		.loc 1 661 0
 3045 121a 24E0     		b	.L180
 3046              	.L178:
 662:..\src/command_processing.c ****                         case 2: 
 663:..\src/command_processing.c ****                             strcat(aux_str, " High\0");
 3047              		.loc 1 663 0
 3048 121c 07F53373 		add	r3, r7, #716
 3049 1220 1846     		mov	r0, r3
 3050 1222 FFF7FEFF 		bl	strlen
 3051 1226 0346     		mov	r3, r0
 3052 1228 1A46     		mov	r2, r3
 3053 122a 07F53373 		add	r3, r7, #716
 3054 122e 1344     		add	r3, r3, r2
 3055 1230 244A     		ldr	r2, .L224+52
 3056 1232 1068     		ldr	r0, [r2]	@ unaligned
 3057 1234 1860     		str	r0, [r3]	@ unaligned
 3058 1236 9288     		ldrh	r2, [r2, #4]	@ unaligned
 3059 1238 9A80     		strh	r2, [r3, #4]	@ unaligned
 664:..\src/command_processing.c ****                             break;
 3060              		.loc 1 664 0
 3061 123a 14E0     		b	.L180
 3062              	.L212:
 665:..\src/command_processing.c ****                         default:
 666:..\src/command_processing.c ****         					strcat(aux_str, " Undefined\0");
 3063              		.loc 1 666 0
 3064 123c 07F53373 		add	r3, r7, #716
 3065 1240 1846     		mov	r0, r3
 3066 1242 FFF7FEFF 		bl	strlen
 3067 1246 0346     		mov	r3, r0
 3068 1248 1A46     		mov	r2, r3
 3069 124a 07F53373 		add	r3, r7, #716
 3070 124e 1344     		add	r3, r3, r2
 3071 1250 1D49     		ldr	r1, .L224+56
 3072 1252 1A46     		mov	r2, r3
 3073 1254 0B46     		mov	r3, r1
 3074 1256 03CB     		ldmia	r3!, {r0, r1}
 3075 1258 1060     		str	r0, [r2]	@ unaligned
 3076 125a 5160     		str	r1, [r2, #4]	@ unaligned
 3077 125c 1988     		ldrh	r1, [r3]	@ unaligned
 3078 125e 9B78     		ldrb	r3, [r3, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 86


 3079 1260 1181     		strh	r1, [r2, #8]	@ unaligned
 3080 1262 9372     		strb	r3, [r2, #10]
 667:..\src/command_processing.c ****                             break;
 3081              		.loc 1 667 0
 3082 1264 00BF     		nop
 3083              	.L180:
 668:..\src/command_processing.c ****                     }
 669:..\src/command_processing.c ****                     break;
 3084              		.loc 1 669 0
 3085 1266 04E0     		b	.L139
 3086              	.L213:
 593:..\src/command_processing.c ****                 case 2:     // control mode menu
 3087              		.loc 1 593 0
 3088 1268 00BF     		nop
 3089 126a 02E0     		b	.L139
 3090              	.L214:
 609:..\src/command_processing.c ****                 case 3:     // yes/no menu
 3091              		.loc 1 609 0
 3092 126c 00BF     		nop
 3093 126e 00E0     		b	.L139
 3094              	.L215:
 653:..\src/command_processing.c ****                 case 7:
 3095              		.loc 1 653 0
 3096 1270 00BF     		nop
 3097              	.L139:
 670:..\src/command_processing.c ****             }
 671:..\src/command_processing.c ****             //Recomputes string lenght
 672:..\src/command_processing.c ****             string_lenght = strlen(aux_str)+1;
 3098              		.loc 1 672 0
 3099 1272 07F53373 		add	r3, r7, #716
 3100 1276 1846     		mov	r0, r3
 3101 1278 FFF7FEFF 		bl	strlen
 3102 127c 0346     		mov	r3, r0
 3103 127e DBB2     		uxtb	r3, r3
 3104 1280 0133     		adds	r3, r3, #1
 3105 1282 87F86A3D 		strb	r3, [r7, #3434]
 3106              	.L138:
 673:..\src/command_processing.c ****         }
 674:..\src/command_processing.c **** 
 675:..\src/command_processing.c ****         // Add parameter string to packet
 676:..\src/command_processing.c ****         for(i = string_lenght; i != 0; i--)
 3107              		.loc 1 676 0
 3108 1286 97F86A3D 		ldrb	r3, [r7, #3434]
 3109 128a 87F86F3D 		strb	r3, [r7, #3439]
 3110 128e 43E0     		b	.L181
 3111              	.L225:
 3112              		.align	2
 3113              	.L224:
 3114 1290 DC000000 		.word	.LC51
 3115 1294 E8000000 		.word	.LC52
 3116 1298 00010000 		.word	.LC53
 3117 129c 08010000 		.word	.LC54
 3118 12a0 10010000 		.word	.LC55
 3119 12a4 18010000 		.word	.LC56
 3120 12a8 20010000 		.word	.LC57
 3121 12ac 28010000 		.word	.LC58
 3122 12b0 30010000 		.word	.LC59
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 87


 3123 12b4 38010000 		.word	.LC60
 3124 12b8 48010000 		.word	.LC61
 3125 12bc 58010000 		.word	.LC62
 3126 12c0 60010000 		.word	.LC63
 3127 12c4 68010000 		.word	.LC64
 3128 12c8 70010000 		.word	.LC65
 3129              	.L182:
 677:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3130              		.loc 1 677 0 discriminator 3
 3131 12cc 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3132 12d0 3222     		movs	r2, #50
 3133 12d2 02FB03F3 		mul	r3, r2, r3
 3134 12d6 1A1D     		adds	r2, r3, #4
 3135 12d8 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 3136 12dc 97F86D1D 		ldrb	r1, [r7, #3437]	@ zero_extendqisi2
 3137 12e0 07F51F70 		add	r0, r7, #636
 3138 12e4 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 3139 12e6 01FB03F3 		mul	r3, r1, r3
 3140 12ea 1A44     		add	r2, r2, r3
 3141 12ec 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3142 12f0 1A44     		add	r2, r2, r3
 3143 12f2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3144 12f6 D31A     		subs	r3, r2, r3
 3145 12f8 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3146 12fc 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3147 1300 8A1A     		subs	r2, r1, r2
 3148 1302 07F53371 		add	r1, r7, #716
 3149 1306 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3150 1308 07F54072 		add	r2, r7, #768
 3151 130c D154     		strb	r1, [r2, r3]
 676:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3152              		.loc 1 676 0 discriminator 3
 3153 130e 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3154 1312 013B     		subs	r3, r3, #1
 3155 1314 87F86F3D 		strb	r3, [r7, #3439]
 3156              	.L181:
 676:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght - i] = aux
 3157              		.loc 1 676 0 is_stmt 0 discriminator 1
 3158 1318 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3159 131c 002B     		cmp	r3, #0
 3160 131e D5D1     		bne	.L182
 678:..\src/command_processing.c ****         //The following byte indicates the number of menus at the end of the packet to send
 679:..\src/command_processing.c ****         if (TYPES[idx] == TYPE_FLAG){
 3161              		.loc 1 679 0 is_stmt 1
 3162 1320 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3163 1324 07F52772 		add	r2, r7, #668
 3164 1328 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3165 132a 002B     		cmp	r3, #0
 3166 132c 1FD1     		bne	.L183
 680:..\src/command_processing.c ****             packet_data[(4 + PARAM_BYTE_SLOT*idx) + (sod*NUM_ITEMS[idx]) + string_lenght] = NUM_MEN
 3167              		.loc 1 680 0
 3168 132e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3169 1332 3222     		movs	r2, #50
 3170 1334 02FB03F3 		mul	r3, r2, r3
 3171 1338 1A1D     		adds	r2, r3, #4
 3172 133a 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 3173 133e 97F86D1D 		ldrb	r1, [r7, #3437]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 88


 3174 1342 07F51F70 		add	r0, r7, #636
 3175 1346 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 3176 1348 01FB03F3 		mul	r3, r1, r3
 3177 134c 1A44     		add	r2, r2, r3
 3178 134e 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3179 1352 1344     		add	r3, r3, r2
 3180 1354 97F86C2D 		ldrb	r2, [r7, #3436]	@ zero_extendqisi2
 3181 1358 07F51B71 		add	r1, r7, #620
 3182 135c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3183 135e 07F54072 		add	r2, r7, #768
 3184 1362 D154     		strb	r1, [r2, r3]
 681:..\src/command_processing.c ****             idx_menu = idx_menu + 1;
 3185              		.loc 1 681 0
 3186 1364 97F86C3D 		ldrb	r3, [r7, #3436]
 3187 1368 0133     		adds	r3, r3, #1
 3188 136a 87F86C3D 		strb	r3, [r7, #3436]
 3189              	.L183:
 682:..\src/command_processing.c ****         }
 683:..\src/command_processing.c ****         
 684:..\src/command_processing.c ****         
 685:..\src/command_processing.c ****         // Adjust m_addr increment, according to c_mem structure
 686:..\src/command_processing.c ****         switch (idx) {
 3190              		.loc 1 686 0
 3191 136e 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3192 1372 1D2B     		cmp	r3, #29
 3193 1374 5ED8     		bhi	.L184
 3194 1376 01A2     		adr	r2, .L186
 3195 1378 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3196              		.p2align 2
 3197              	.L186:
 3198 137c F5130000 		.word	.L185+1
 3199 1380 35140000 		.word	.L184+1
 3200 1384 FD130000 		.word	.L187+1
 3201 1388 35140000 		.word	.L184+1
 3202 138c 35140000 		.word	.L184+1
 3203 1390 35140000 		.word	.L184+1
 3204 1394 05140000 		.word	.L188+1
 3205 1398 0D140000 		.word	.L189+1
 3206 139c 35140000 		.word	.L184+1
 3207 13a0 15140000 		.word	.L190+1
 3208 13a4 35140000 		.word	.L184+1
 3209 13a8 35140000 		.word	.L184+1
 3210 13ac 35140000 		.word	.L184+1
 3211 13b0 35140000 		.word	.L184+1
 3212 13b4 1D140000 		.word	.L191+1
 3213 13b8 35140000 		.word	.L184+1
 3214 13bc 35140000 		.word	.L184+1
 3215 13c0 35140000 		.word	.L184+1
 3216 13c4 35140000 		.word	.L184+1
 3217 13c8 35140000 		.word	.L184+1
 3218 13cc 25140000 		.word	.L192+1
 3219 13d0 35140000 		.word	.L184+1
 3220 13d4 35140000 		.word	.L184+1
 3221 13d8 35140000 		.word	.L184+1
 3222 13dc 35140000 		.word	.L184+1
 3223 13e0 35140000 		.word	.L184+1
 3224 13e4 35140000 		.word	.L184+1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 89


 3225 13e8 35140000 		.word	.L184+1
 3226 13ec 35140000 		.word	.L184+1
 3227 13f0 2D140000 		.word	.L193+1
 3228              		.p2align 1
 3229              	.L185:
 687:..\src/command_processing.c ****             case 0:
 688:..\src/command_processing.c ****                 // Add 2 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 689:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.k_p;
 3230              		.loc 1 689 0
 3231 13f4 B84B     		ldr	r3, .L226
 3232 13f6 C7F8643D 		str	r3, [r7, #3428]
 690:..\src/command_processing.c ****                 break;
 3233              		.loc 1 690 0
 3234 13fa 2CE0     		b	.L194
 3235              	.L187:
 691:..\src/command_processing.c ****             case 2:
 692:..\src/command_processing.c ****                 // double loop PID controller parameters 
 693:..\src/command_processing.c ****                 //(increment after CURRENT PID parameters)
 694:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 6*sod;
 695:..\src/command_processing.c ****                 m_addr = &c_mem.activ;
 3236              		.loc 1 695 0
 3237 13fc B74B     		ldr	r3, .L226+4
 3238 13fe C7F8643D 		str	r3, [r7, #3428]
 696:..\src/command_processing.c ****                 break; 
 3239              		.loc 1 696 0
 3240 1402 28E0     		b	.L194
 3241              	.L188:
 697:..\src/command_processing.c ****             case 6:
 698:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 699:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_off[0];
 3242              		.loc 1 699 0
 3243 1404 B64B     		ldr	r3, .L226+8
 3244 1406 C7F8643D 		str	r3, [r7, #3428]
 700:..\src/command_processing.c ****                 break;
 3245              		.loc 1 700 0
 3246 140a 24E0     		b	.L194
 3247              	.L189:
 701:..\src/command_processing.c ****             case 7:
 702:..\src/command_processing.c ****                 //(increment after OFFSET parameters)
 703:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*4;     //int16->int32 conversion
 704:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.m_mult[0];
 3248              		.loc 1 704 0
 3249 140c B54B     		ldr	r3, .L226+12
 3250 140e C7F8643D 		str	r3, [r7, #3428]
 705:..\src/command_processing.c ****                 break;
 3251              		.loc 1 705 0
 3252 1412 20E0     		b	.L194
 3253              	.L190:
 706:..\src/command_processing.c ****             case 9:
 707:..\src/command_processing.c ****                 // Add 3 bytes free, since PSOC5 ARM memory is 4-bytes aligned
 708:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.pos_lim_inf;
 3254              		.loc 1 708 0
 3255 1414 B44B     		ldr	r3, .L226+16
 3256 1416 C7F8643D 		str	r3, [r7, #3428]
 709:..\src/command_processing.c ****                 break;
 3257              		.loc 1 709 0
 3258 141a 1CE0     		b	.L194
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 90


 3259              	.L191:
 710:..\src/command_processing.c ****              case 14:
 711:..\src/command_processing.c ****                 // Add 1 byte free, since PSOC5 ARM memory is 4-bytes aligned
 712:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.emg_max_value[0];
 3260              		.loc 1 712 0
 3261 141c B34B     		ldr	r3, .L226+20
 3262 141e C7F8643D 		str	r3, [r7, #3428]
 713:..\src/command_processing.c ****                 break;
 3263              		.loc 1 713 0
 3264 1422 18E0     		b	.L194
 3265              	.L192:
 714:..\src/command_processing.c ****             case 20:
 715:..\src/command_processing.c ****                 //(increment after LOOKUP TABLE parameter)
 716:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 1 + 3;   //1 = baudrate, 3 = maintenance d
 717:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.rest_pos;
 3266              		.loc 1 717 0
 3267 1424 B24B     		ldr	r3, .L226+24
 3268 1426 C7F8643D 		str	r3, [r7, #3428]
 718:..\src/command_processing.c ****                 break;
 3269              		.loc 1 718 0
 3270 142a 14E0     		b	.L194
 3271              	.L193:
 719:..\src/command_processing.c ****             case 29:
 720:..\src/command_processing.c ****                 //(increment after RESET COUNTERS parameter)
 721:..\src/command_processing.c ****                 //m_addr = m_addr + NUM_ITEMS[idx]*sod + 25 + 80;   //25 = unused bytes, 80 = 20*4 
 722:..\src/command_processing.c ****                 m_addr = (uint8*)&c_mem.curr_time[0];
 3272              		.loc 1 722 0
 3273 142c B14B     		ldr	r3, .L226+28
 3274 142e C7F8643D 		str	r3, [r7, #3428]
 723:..\src/command_processing.c ****                 break;                
 3275              		.loc 1 723 0
 3276 1432 10E0     		b	.L194
 3277              	.L184:
 724:..\src/command_processing.c ****             default:
 725:..\src/command_processing.c ****                 m_addr = m_addr + NUM_ITEMS[idx]*sod;
 3278              		.loc 1 725 0
 3279 1434 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3280 1438 07F51F72 		add	r2, r7, #636
 3281 143c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3282 143e 1A46     		mov	r2, r3
 3283 1440 97F86B3D 		ldrb	r3, [r7, #3435]	@ zero_extendqisi2
 3284 1444 03FB02F3 		mul	r3, r3, r2
 3285 1448 1A46     		mov	r2, r3
 3286 144a D7F8643D 		ldr	r3, [r7, #3428]
 3287 144e 1344     		add	r3, r3, r2
 3288 1450 C7F8643D 		str	r3, [r7, #3428]
 726:..\src/command_processing.c ****                 break;
 3289              		.loc 1 726 0
 3290 1454 00BF     		nop
 3291              	.L194:
 372:..\src/command_processing.c ****         
 3292              		.loc 1 372 0 discriminator 2
 3293 1456 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3294 145a 0133     		adds	r3, r3, #1
 3295 145c 87F86D3D 		strb	r3, [r7, #3437]
 3296              	.L53:
 372:..\src/command_processing.c ****         
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 91


 3297              		.loc 1 372 0 is_stmt 0 discriminator 1
 3298 1460 97F86D3D 		ldrb	r3, [r7, #3437]	@ zero_extendqisi2
 3299 1464 1E2B     		cmp	r3, #30
 3300 1466 7EF69EAE 		bls	.L195
 727:..\src/command_processing.c ****                 
 728:..\src/command_processing.c ****             // reset counters reads g_mem.unused_bytes[0]
 729:..\src/command_processing.c ****         }
 730:..\src/command_processing.c ****     }
 731:..\src/command_processing.c **** 
 732:..\src/command_processing.c ****     string_lenght = strlen((char*)input_mode_menu);
 3301              		.loc 1 732 0 is_stmt 1
 3302 146a 07F5C673 		add	r3, r7, #396
 3303 146e 1846     		mov	r0, r3
 3304 1470 FFF7FEFF 		bl	strlen
 3305 1474 0346     		mov	r3, r0
 3306 1476 87F86A3D 		strb	r3, [r7, #3434]
 733:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3307              		.loc 1 733 0
 3308 147a 97F86A3D 		ldrb	r3, [r7, #3434]
 3309 147e 87F86F3D 		strb	r3, [r7, #3439]
 3310 1482 16E0     		b	.L196
 3311              	.L197:
 734:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + string_lenght - i] = input_mode_menu[string
 3312              		.loc 1 734 0 discriminator 3
 3313 1484 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3314 1488 03F5C262 		add	r2, r3, #1552
 3315 148c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3316 1490 D31A     		subs	r3, r2, r3
 3317 1492 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3318 1496 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3319 149a 8A1A     		subs	r2, r1, r2
 3320 149c 07F5C671 		add	r1, r7, #396
 3321 14a0 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3322 14a2 07F54072 		add	r2, r7, #768
 3323 14a6 D154     		strb	r1, [r2, r3]
 733:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3324              		.loc 1 733 0 discriminator 3
 3325 14a8 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3326 14ac 013B     		subs	r3, r3, #1
 3327 14ae 87F86F3D 		strb	r3, [r7, #3439]
 3328              	.L196:
 733:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3329              		.loc 1 733 0 is_stmt 0 discriminator 1
 3330 14b2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3331 14b6 002B     		cmp	r3, #0
 3332 14b8 E4D1     		bne	.L197
 735:..\src/command_processing.c **** 
 736:..\src/command_processing.c ****     string_lenght = strlen((char*)control_mode_menu);
 3333              		.loc 1 736 0 is_stmt 1
 3334 14ba 07F5A673 		add	r3, r7, #332
 3335 14be 1846     		mov	r0, r3
 3336 14c0 FFF7FEFF 		bl	strlen
 3337 14c4 0346     		mov	r3, r0
 3338 14c6 87F86A3D 		strb	r3, [r7, #3434]
 737:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3339              		.loc 1 737 0
 3340 14ca 97F86A3D 		ldrb	r3, [r7, #3434]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 92


 3341 14ce 87F86F3D 		strb	r3, [r7, #3439]
 3342 14d2 16E0     		b	.L198
 3343              	.L199:
 738:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + PARAM_MENU_SLOT + string_lenght - i] = cont
 3344              		.loc 1 738 0 discriminator 3
 3345 14d4 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3346 14d8 03F2A662 		addw	r2, r3, #1702
 3347 14dc 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3348 14e0 D31A     		subs	r3, r2, r3
 3349 14e2 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3350 14e6 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3351 14ea 8A1A     		subs	r2, r1, r2
 3352 14ec 07F5A671 		add	r1, r7, #332
 3353 14f0 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3354 14f2 07F54072 		add	r2, r7, #768
 3355 14f6 D154     		strb	r1, [r2, r3]
 737:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3356              		.loc 1 737 0 discriminator 3
 3357 14f8 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3358 14fc 013B     		subs	r3, r3, #1
 3359 14fe 87F86F3D 		strb	r3, [r7, #3439]
 3360              	.L198:
 737:..\src/command_processing.c ****     for(i = string_lenght; i != 0; i--)
 3361              		.loc 1 737 0 is_stmt 0 discriminator 1
 3362 1502 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3363 1506 002B     		cmp	r3, #0
 3364 1508 E4D1     		bne	.L199
 739:..\src/command_processing.c **** 
 740:..\src/command_processing.c ****     string_lenght = strlen((char*)yes_no_menu);
 3365              		.loc 1 740 0 is_stmt 1
 3366 150a 07F59073 		add	r3, r7, #288
 3367 150e 1846     		mov	r0, r3
 3368 1510 FFF7FEFF 		bl	strlen
 3369 1514 0346     		mov	r3, r0
 3370 1516 87F86A3D 		strb	r3, [r7, #3434]
 741:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3371              		.loc 1 741 0
 3372 151a 97F86A3D 		ldrb	r3, [r7, #3434]
 3373 151e 87F86F3D 		strb	r3, [r7, #3439]
 3374 1522 16E0     		b	.L200
 3375              	.L201:
 742:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 2*PARAM_MENU_SLOT + string_lenght - i] = ye
 3376              		.loc 1 742 0 discriminator 3
 3377 1524 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3378 1528 03F23C72 		addw	r2, r3, #1852
 3379 152c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3380 1530 D31A     		subs	r3, r2, r3
 3381 1532 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3382 1536 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3383 153a 8A1A     		subs	r2, r1, r2
 3384 153c 07F59071 		add	r1, r7, #288
 3385 1540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3386 1542 07F54072 		add	r2, r7, #768
 3387 1546 D154     		strb	r1, [r2, r3]
 741:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3388              		.loc 1 741 0 discriminator 3
 3389 1548 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 93


 3390 154c 013B     		subs	r3, r3, #1
 3391 154e 87F86F3D 		strb	r3, [r7, #3439]
 3392              	.L200:
 741:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3393              		.loc 1 741 0 is_stmt 0 discriminator 1
 3394 1552 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3395 1556 002B     		cmp	r3, #0
 3396 1558 E4D1     		bne	.L201
 743:..\src/command_processing.c **** 
 744:..\src/command_processing.c ****     string_lenght = strlen((char*)right_left_menu);
 3397              		.loc 1 744 0 is_stmt 1
 3398 155a 07F58473 		add	r3, r7, #264
 3399 155e 1846     		mov	r0, r3
 3400 1560 FFF7FEFF 		bl	strlen
 3401 1564 0346     		mov	r3, r0
 3402 1566 87F86A3D 		strb	r3, [r7, #3434]
 745:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3403              		.loc 1 745 0
 3404 156a 97F86A3D 		ldrb	r3, [r7, #3434]
 3405 156e 87F86F3D 		strb	r3, [r7, #3439]
 3406 1572 16E0     		b	.L202
 3407              	.L203:
 746:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 3*PARAM_MENU_SLOT + string_lenght - i] = ri
 3408              		.loc 1 746 0 discriminator 3
 3409 1574 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3410 1578 03F2D272 		addw	r2, r3, #2002
 3411 157c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3412 1580 D31A     		subs	r3, r2, r3
 3413 1582 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3414 1586 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3415 158a 8A1A     		subs	r2, r1, r2
 3416 158c 07F58471 		add	r1, r7, #264
 3417 1590 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3418 1592 07F54072 		add	r2, r7, #768
 3419 1596 D154     		strb	r1, [r2, r3]
 745:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3420              		.loc 1 745 0 discriminator 3
 3421 1598 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3422 159c 013B     		subs	r3, r3, #1
 3423 159e 87F86F3D 		strb	r3, [r7, #3439]
 3424              	.L202:
 745:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3425              		.loc 1 745 0 is_stmt 0 discriminator 1
 3426 15a2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3427 15a6 002B     		cmp	r3, #0
 3428 15a8 E4D1     		bne	.L203
 747:..\src/command_processing.c **** 
 748:..\src/command_processing.c ****     string_lenght = strlen((char*)on_off_menu);
 3429              		.loc 1 748 0 is_stmt 1
 3430 15aa 07F1D403 		add	r3, r7, #212
 3431 15ae 1846     		mov	r0, r3
 3432 15b0 FFF7FEFF 		bl	strlen
 3433 15b4 0346     		mov	r3, r0
 3434 15b6 87F86A3D 		strb	r3, [r7, #3434]
 749:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3435              		.loc 1 749 0
 3436 15ba 97F86A3D 		ldrb	r3, [r7, #3434]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 94


 3437 15be 87F86F3D 		strb	r3, [r7, #3439]
 3438 15c2 16E0     		b	.L204
 3439              	.L205:
 750:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 4*PARAM_MENU_SLOT + string_lenght - i] = on
 3440              		.loc 1 750 0 discriminator 3
 3441 15c4 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3442 15c8 03F66802 		addw	r2, r3, #2152
 3443 15cc 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3444 15d0 D31A     		subs	r3, r2, r3
 3445 15d2 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3446 15d6 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3447 15da 8A1A     		subs	r2, r1, r2
 3448 15dc 07F1D401 		add	r1, r7, #212
 3449 15e0 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3450 15e2 07F54072 		add	r2, r7, #768
 3451 15e6 D154     		strb	r1, [r2, r3]
 749:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3452              		.loc 1 749 0 discriminator 3
 3453 15e8 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3454 15ec 013B     		subs	r3, r3, #1
 3455 15ee 87F86F3D 		strb	r3, [r7, #3439]
 3456              	.L204:
 749:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3457              		.loc 1 749 0 is_stmt 0 discriminator 1
 3458 15f2 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3459 15f6 002B     		cmp	r3, #0
 3460 15f8 E4D1     		bne	.L205
 751:..\src/command_processing.c **** 
 752:..\src/command_processing.c ****     string_lenght = strlen((char*)exp_port_menu);
 3461              		.loc 1 752 0 is_stmt 1
 3462 15fa 07F17C03 		add	r3, r7, #124
 3463 15fe 1846     		mov	r0, r3
 3464 1600 FFF7FEFF 		bl	strlen
 3465 1604 0346     		mov	r3, r0
 3466 1606 87F86A3D 		strb	r3, [r7, #3434]
 753:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3467              		.loc 1 753 0
 3468 160a 97F86A3D 		ldrb	r3, [r7, #3434]
 3469 160e 87F86F3D 		strb	r3, [r7, #3439]
 3470 1612 16E0     		b	.L206
 3471              	.L207:
 754:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 5*PARAM_MENU_SLOT + string_lenght - i] = ex
 3472              		.loc 1 754 0 discriminator 3
 3473 1614 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3474 1618 03F6FE02 		addw	r2, r3, #2302
 3475 161c 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3476 1620 D31A     		subs	r3, r2, r3
 3477 1622 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3478 1626 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3479 162a 8A1A     		subs	r2, r1, r2
 3480 162c 07F17C01 		add	r1, r7, #124
 3481 1630 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3482 1632 07F54072 		add	r2, r7, #768
 3483 1636 D154     		strb	r1, [r2, r3]
 753:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3484              		.loc 1 753 0 discriminator 3
 3485 1638 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 95


 3486 163c 013B     		subs	r3, r3, #1
 3487 163e 87F86F3D 		strb	r3, [r7, #3439]
 3488              	.L206:
 753:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3489              		.loc 1 753 0 is_stmt 0 discriminator 1
 3490 1642 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3491 1646 002B     		cmp	r3, #0
 3492 1648 E4D1     		bne	.L207
 755:..\src/command_processing.c **** 
 756:..\src/command_processing.c ****     string_lenght = strlen((char*)spi_delay_menu);
 3493              		.loc 1 756 0 is_stmt 1
 3494 164a 3B1D     		adds	r3, r7, #4
 3495 164c 1846     		mov	r0, r3
 3496 164e FFF7FEFF 		bl	strlen
 3497 1652 0346     		mov	r3, r0
 3498 1654 87F86A3D 		strb	r3, [r7, #3434]
 757:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3499              		.loc 1 757 0
 3500 1658 97F86A3D 		ldrb	r3, [r7, #3434]
 3501 165c 87F86F3D 		strb	r3, [r7, #3439]
 3502 1660 15E0     		b	.L208
 3503              	.L209:
 758:..\src/command_processing.c ****         packet_data[PARAM_BYTE_SLOT*NUM_OF_PARAMS + 2 + 6*PARAM_MENU_SLOT + string_lenght - i] = sp
 3504              		.loc 1 758 0 discriminator 3
 3505 1662 97F86A3D 		ldrb	r3, [r7, #3434]	@ zero_extendqisi2
 3506 1666 03F69412 		addw	r2, r3, #2452
 3507 166a 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3508 166e D31A     		subs	r3, r2, r3
 3509 1670 97F86A1D 		ldrb	r1, [r7, #3434]	@ zero_extendqisi2
 3510 1674 97F86F2D 		ldrb	r2, [r7, #3439]	@ zero_extendqisi2
 3511 1678 8A1A     		subs	r2, r1, r2
 3512 167a 391D     		adds	r1, r7, #4
 3513 167c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3514 167e 07F54072 		add	r2, r7, #768
 3515 1682 D154     		strb	r1, [r2, r3]
 757:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3516              		.loc 1 757 0 discriminator 3
 3517 1684 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3518 1688 013B     		subs	r3, r3, #1
 3519 168a 87F86F3D 		strb	r3, [r7, #3439]
 3520              	.L208:
 757:..\src/command_processing.c ****     for(i = string_lenght; i!= 0; i--)
 3521              		.loc 1 757 0 is_stmt 0 discriminator 1
 3522 168e 97F86F3D 		ldrb	r3, [r7, #3439]	@ zero_extendqisi2
 3523 1692 002B     		cmp	r3, #0
 3524 1694 E5D1     		bne	.L209
 759:..\src/command_processing.c ****                 
 760:..\src/command_processing.c ****     packet_data[packet_lenght - 1] = LCRChecksum(packet_data,packet_lenght - 1);
 3525              		.loc 1 760 0 is_stmt 1
 3526 1696 B7F8623D 		ldrh	r3, [r7, #3426]
 3527 169a 5C1E     		subs	r4, r3, #1
 3528 169c B7F8623D 		ldrh	r3, [r7, #3426]	@ movhi
 3529 16a0 DBB2     		uxtb	r3, r3
 3530 16a2 013B     		subs	r3, r3, #1
 3531 16a4 DAB2     		uxtb	r2, r3
 3532 16a6 07F54073 		add	r3, r7, #768
 3533 16aa 1146     		mov	r1, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 96


 3534 16ac 1846     		mov	r0, r3
 3535 16ae FFF7FEFF 		bl	LCRChecksum
 3536 16b2 0346     		mov	r3, r0
 3537 16b4 1A46     		mov	r2, r3
 3538 16b6 07F54073 		add	r3, r7, #768
 3539 16ba 1A55     		strb	r2, [r3, r4]
 761:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 3540              		.loc 1 761 0
 3541 16bc B7F8622D 		ldrh	r2, [r7, #3426]
 3542 16c0 07F54073 		add	r3, r7, #768
 3543 16c4 1146     		mov	r1, r2
 3544 16c6 1846     		mov	r0, r3
 3545 16c8 FFF7FEFF 		bl	commWrite
 762:..\src/command_processing.c **** }
 3546              		.loc 1 762 0
 3547 16cc 00BF     		nop
 3548 16ce 07F67457 		addw	r7, r7, #3444
 3549              		.cfi_def_cfa_offset 20
 3550 16d2 BD46     		mov	sp, r7
 3551              		.cfi_def_cfa_register 13
 3552              		@ sp needed
 3553 16d4 F0BD     		pop	{r4, r5, r6, r7, pc}
 3554              	.L227:
 3555 16d6 00BF     		.align	2
 3556              	.L226:
 3557 16d8 04000000 		.word	c_mem+4
 3558 16dc 34000000 		.word	c_mem+52
 3559 16e0 3C000000 		.word	c_mem+60
 3560 16e4 48000000 		.word	c_mem+72
 3561 16e8 58000000 		.word	c_mem+88
 3562 16ec 70000000 		.word	c_mem+112
 3563 16f0 98000000 		.word	c_mem+152
 3564 16f4 10010000 		.word	c_mem+272
 3565              		.cfi_endproc
 3566              	.LFE67:
 3567              		.size	get_param_list, .-get_param_list
 3568              		.global	__aeabi_fmul
 3569              		.global	__aeabi_f2iz
 3570              		.section	.text.manage_param_list,"ax",%progbits
 3571              		.align	2
 3572              		.global	manage_param_list
 3573              		.thumb
 3574              		.thumb_func
 3575              		.type	manage_param_list, %function
 3576              	manage_param_list:
 3577              	.LFB68:
 763:..\src/command_processing.c **** 
 764:..\src/command_processing.c **** //==============================================================================
 765:..\src/command_processing.c **** //                                                             MANAGE PARAM LIST
 766:..\src/command_processing.c **** //==============================================================================
 767:..\src/command_processing.c **** 
 768:..\src/command_processing.c **** void manage_param_list(uint16 index) {
 3578              		.loc 1 768 0
 3579              		.cfi_startproc
 3580              		@ args = 0, pretend = 0, frame = 24
 3581              		@ frame_needed = 1, uses_anonymous_args = 0
 3582 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 97


 3583              		.cfi_def_cfa_offset 8
 3584              		.cfi_offset 7, -8
 3585              		.cfi_offset 14, -4
 3586 0002 86B0     		sub	sp, sp, #24
 3587              		.cfi_def_cfa_offset 32
 3588 0004 00AF     		add	r7, sp, #0
 3589              		.cfi_def_cfa_register 7
 3590 0006 0346     		mov	r3, r0
 3591 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 769:..\src/command_processing.c ****     uint8 CYDATA i, j;
 770:..\src/command_processing.c ****     uint8 aux_uchar;
 771:..\src/command_processing.c ****     float aux_float, aux_float2;
 772:..\src/command_processing.c ****     
 773:..\src/command_processing.c ****     switch(index) {
 3592              		.loc 1 773 0
 3593 000a FB88     		ldrh	r3, [r7, #6]
 3594 000c 1F2B     		cmp	r3, #31
 3595 000e 00F26785 		bhi	.L317
 3596 0012 01A2     		adr	r2, .L231
 3597 0014 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3598              		.p2align 2
 3599              	.L231:
 3600 0018 99000000 		.word	.L230+1
 3601 001c A1000000 		.word	.L232+1
 3602 0020 AD000000 		.word	.L233+1
 3603 0024 7B020000 		.word	.L234+1
 3604 0028 5D040000 		.word	.L235+1
 3605 002c 79040000 		.word	.L236+1
 3606 0030 8D040000 		.word	.L237+1
 3607 0034 99040000 		.word	.L238+1
 3608 0038 C1040000 		.word	.L239+1
 3609 003c 39050000 		.word	.L240+1
 3610 0040 8B050000 		.word	.L241+1
 3611 0044 97050000 		.word	.L242+1
 3612 0048 19060000 		.word	.L243+1
 3613 004c 5B060000 		.word	.L244+1
 3614 0050 75060000 		.word	.L245+1
 3615 0054 AB060000 		.word	.L246+1
 3616 0058 B7060000 		.word	.L247+1
 3617 005c FD060000 		.word	.L248+1
 3618 0060 09070000 		.word	.L249+1
 3619 0064 29070000 		.word	.L250+1
 3620 0068 37070000 		.word	.L251+1
 3621 006c 43070000 		.word	.L252+1
 3622 0070 97070000 		.word	.L253+1
 3623 0074 CF070000 		.word	.L254+1
 3624 0078 07080000 		.word	.L255+1
 3625 007c 2B080000 		.word	.L256+1
 3626 0080 4B080000 		.word	.L257+1
 3627 0084 57080000 		.word	.L258+1
 3628 0088 7D080000 		.word	.L259+1
 3629 008c 89080000 		.word	.L260+1
 3630 0090 A5080000 		.word	.L261+1
 3631 0094 47090000 		.word	.L262+1
 3632              		.p2align 1
 3633              	.L230:
 774:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 98


 775:..\src/command_processing.c ****             get_param_list();
 3634              		.loc 1 775 0
 3635 0098 FFF7FEFF 		bl	get_param_list
 776:..\src/command_processing.c ****         break;
 3636              		.loc 1 776 0
 3637 009c 00F020BD 		b	.L229
 3638              	.L232:
 777:..\src/command_processing.c **** 
 778:..\src/command_processing.c **** //===================================================================     set_id
 779:..\src/command_processing.c ****         case 1:         //ID - uint8
 780:..\src/command_processing.c ****             g_mem.id = g_rx.buffer[3];
 3639              		.loc 1 780 0
 3640 00a0 B04B     		ldr	r3, .L321
 3641 00a2 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 3642 00a4 B04B     		ldr	r3, .L321+4
 3643 00a6 5A70     		strb	r2, [r3, #1]
 781:..\src/command_processing.c ****         break;
 3644              		.loc 1 781 0
 3645 00a8 00F01ABD 		b	.L229
 3646              	.L233:
 782:..\src/command_processing.c ****         
 783:..\src/command_processing.c **** //=======================================================     set_pid_parameters
 784:..\src/command_processing.c ****         case 2:         //Position PID - float[3]
 785:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 3647              		.loc 1 785 0
 3648 00ac AF4B     		ldr	r3, .L321+8
 3649 00ae 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3650 00b2 032B     		cmp	r3, #3
 3651 00b4 70D0     		beq	.L263
 786:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 3652              		.loc 1 786 0
 3653 00b6 AE4B     		ldr	r3, .L321+12
 3654 00b8 1B68     		ldr	r3, [r3]	@ float
 3655 00ba 3B61     		str	r3, [r7, #16]	@ float
 787:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3656              		.loc 1 787 0
 3657 00bc 0023     		movs	r3, #0
 3658 00be BB75     		strb	r3, [r7, #22]
 3659 00c0 0EE0     		b	.L264
 3660              	.L265:
 788:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3661              		.loc 1 788 0 discriminator 3
 3662 00c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3663 00c4 C3F10303 		rsb	r3, r3, #3
 3664 00c8 07F10C02 		add	r2, r7, #12
 3665 00cc 1344     		add	r3, r3, r2
 3666 00ce BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3667 00d0 07F11001 		add	r1, r7, #16
 3668 00d4 0A44     		add	r2, r2, r1
 3669 00d6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3670 00d8 1A70     		strb	r2, [r3]
 787:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3671              		.loc 1 787 0 discriminator 3
 3672 00da BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3673 00dc 0133     		adds	r3, r3, #1
 3674 00de BB75     		strb	r3, [r7, #22]
 3675              	.L264:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 99


 787:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3676              		.loc 1 787 0 is_stmt 0 discriminator 1
 3677 00e0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3678 00e2 032B     		cmp	r3, #3
 3679 00e4 EDD9     		bls	.L265
 789:..\src/command_processing.c ****                 }
 790:..\src/command_processing.c ****                 g_mem.k_p = aux_float2 * 65536;
 3680              		.loc 1 790 0 is_stmt 1
 3681 00e6 FB68     		ldr	r3, [r7, #12]	@ float
 3682 00e8 4FF08F41 		mov	r1, #1199570944
 3683 00ec 1846     		mov	r0, r3
 3684 00ee FFF7FEFF 		bl	__aeabi_fmul
 3685 00f2 0346     		mov	r3, r0
 3686 00f4 1846     		mov	r0, r3
 3687 00f6 FFF7FEFF 		bl	__aeabi_f2iz
 3688 00fa 0246     		mov	r2, r0
 3689 00fc 9A4B     		ldr	r3, .L321+4
 3690 00fe 5A60     		str	r2, [r3, #4]
 791:..\src/command_processing.c ****                 //g_mem.k_p = *((float *) &g_rx.buffer[3]) * 65536;
 792:..\src/command_processing.c ****                 
 793:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 3691              		.loc 1 793 0
 3692 0100 9C4B     		ldr	r3, .L321+16
 3693 0102 1B68     		ldr	r3, [r3]	@ float
 3694 0104 3B61     		str	r3, [r7, #16]	@ float
 794:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3695              		.loc 1 794 0
 3696 0106 0023     		movs	r3, #0
 3697 0108 BB75     		strb	r3, [r7, #22]
 3698 010a 0EE0     		b	.L266
 3699              	.L267:
 795:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3700              		.loc 1 795 0 discriminator 3
 3701 010c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3702 010e C3F10303 		rsb	r3, r3, #3
 3703 0112 07F10C02 		add	r2, r7, #12
 3704 0116 1344     		add	r3, r3, r2
 3705 0118 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3706 011a 07F11001 		add	r1, r7, #16
 3707 011e 0A44     		add	r2, r2, r1
 3708 0120 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3709 0122 1A70     		strb	r2, [r3]
 794:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3710              		.loc 1 794 0 discriminator 3
 3711 0124 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3712 0126 0133     		adds	r3, r3, #1
 3713 0128 BB75     		strb	r3, [r7, #22]
 3714              	.L266:
 794:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3715              		.loc 1 794 0 is_stmt 0 discriminator 1
 3716 012a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3717 012c 032B     		cmp	r3, #3
 3718 012e EDD9     		bls	.L267
 796:..\src/command_processing.c ****                 }
 797:..\src/command_processing.c ****                 g_mem.k_i = aux_float2 * 65536;
 3719              		.loc 1 797 0 is_stmt 1
 3720 0130 FB68     		ldr	r3, [r7, #12]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 100


 3721 0132 4FF08F41 		mov	r1, #1199570944
 3722 0136 1846     		mov	r0, r3
 3723 0138 FFF7FEFF 		bl	__aeabi_fmul
 3724 013c 0346     		mov	r3, r0
 3725 013e 1846     		mov	r0, r3
 3726 0140 FFF7FEFF 		bl	__aeabi_f2iz
 3727 0144 0246     		mov	r2, r0
 3728 0146 884B     		ldr	r3, .L321+4
 3729 0148 9A60     		str	r2, [r3, #8]
 798:..\src/command_processing.c ****                 //g_mem.k_i = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 799:..\src/command_processing.c ****                 
 800:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 3730              		.loc 1 800 0
 3731 014a 8B4B     		ldr	r3, .L321+20
 3732 014c 1B68     		ldr	r3, [r3]	@ float
 3733 014e 3B61     		str	r3, [r7, #16]	@ float
 801:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3734              		.loc 1 801 0
 3735 0150 0023     		movs	r3, #0
 3736 0152 BB75     		strb	r3, [r7, #22]
 3737 0154 0EE0     		b	.L268
 3738              	.L269:
 802:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3739              		.loc 1 802 0 discriminator 3
 3740 0156 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3741 0158 C3F10303 		rsb	r3, r3, #3
 3742 015c 07F10C02 		add	r2, r7, #12
 3743 0160 1344     		add	r3, r3, r2
 3744 0162 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3745 0164 07F11001 		add	r1, r7, #16
 3746 0168 0A44     		add	r2, r2, r1
 3747 016a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3748 016c 1A70     		strb	r2, [r3]
 801:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3749              		.loc 1 801 0 discriminator 3
 3750 016e BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3751 0170 0133     		adds	r3, r3, #1
 3752 0172 BB75     		strb	r3, [r7, #22]
 3753              	.L268:
 801:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3754              		.loc 1 801 0 is_stmt 0 discriminator 1
 3755 0174 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3756 0176 032B     		cmp	r3, #3
 3757 0178 EDD9     		bls	.L269
 803:..\src/command_processing.c ****                 }
 804:..\src/command_processing.c ****                 g_mem.k_d = aux_float2 * 65536;
 3758              		.loc 1 804 0 is_stmt 1
 3759 017a FB68     		ldr	r3, [r7, #12]	@ float
 3760 017c 4FF08F41 		mov	r1, #1199570944
 3761 0180 1846     		mov	r0, r3
 3762 0182 FFF7FEFF 		bl	__aeabi_fmul
 3763 0186 0346     		mov	r3, r0
 3764 0188 1846     		mov	r0, r3
 3765 018a FFF7FEFF 		bl	__aeabi_f2iz
 3766 018e 0246     		mov	r2, r0
 3767 0190 754B     		ldr	r3, .L321+4
 3768 0192 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 101


 805:..\src/command_processing.c ****                 //g_mem.k_d = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 806:..\src/command_processing.c ****             }
 807:..\src/command_processing.c ****             else {
 808:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 809:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 810:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 811:..\src/command_processing.c ****                 }
 812:..\src/command_processing.c ****                 g_mem.k_p_dl = aux_float2 * 65536;
 813:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 814:..\src/command_processing.c ****                 
 815:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 816:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 817:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 818:..\src/command_processing.c ****                 }
 819:..\src/command_processing.c ****                 g_mem.k_i_dl = aux_float2 * 65536;
 820:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 821:..\src/command_processing.c ****                 
 822:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 823:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 824:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 825:..\src/command_processing.c ****                 }
 826:..\src/command_processing.c ****                 g_mem.k_d_dl = aux_float2 * 65536;
 827:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 828:..\src/command_processing.c ****             }
 829:..\src/command_processing.c ****         break;
 3769              		.loc 1 829 0
 3770 0194 00F0A4BC 		b	.L229
 3771              	.L263:
 808:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3772              		.loc 1 808 0
 3773 0198 754B     		ldr	r3, .L321+12
 3774 019a 1B68     		ldr	r3, [r3]	@ float
 3775 019c 3B61     		str	r3, [r7, #16]	@ float
 809:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3776              		.loc 1 809 0
 3777 019e 0023     		movs	r3, #0
 3778 01a0 BB75     		strb	r3, [r7, #22]
 3779 01a2 0EE0     		b	.L271
 3780              	.L272:
 810:..\src/command_processing.c ****                 }
 3781              		.loc 1 810 0 discriminator 3
 3782 01a4 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3783 01a6 C3F10303 		rsb	r3, r3, #3
 3784 01aa 07F10C02 		add	r2, r7, #12
 3785 01ae 1344     		add	r3, r3, r2
 3786 01b0 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3787 01b2 07F11001 		add	r1, r7, #16
 3788 01b6 0A44     		add	r2, r2, r1
 3789 01b8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3790 01ba 1A70     		strb	r2, [r3]
 809:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3791              		.loc 1 809 0 discriminator 3
 3792 01bc BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3793 01be 0133     		adds	r3, r3, #1
 3794 01c0 BB75     		strb	r3, [r7, #22]
 3795              	.L271:
 809:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 102


 3796              		.loc 1 809 0 is_stmt 0 discriminator 1
 3797 01c2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3798 01c4 032B     		cmp	r3, #3
 3799 01c6 EDD9     		bls	.L272
 812:..\src/command_processing.c ****                 //g_mem.k_p_dl = *((float *) &g_rx.buffer[3]) * 65536;
 3800              		.loc 1 812 0 is_stmt 1
 3801 01c8 FB68     		ldr	r3, [r7, #12]	@ float
 3802 01ca 4FF08F41 		mov	r1, #1199570944
 3803 01ce 1846     		mov	r0, r3
 3804 01d0 FFF7FEFF 		bl	__aeabi_fmul
 3805 01d4 0346     		mov	r3, r0
 3806 01d6 1846     		mov	r0, r3
 3807 01d8 FFF7FEFF 		bl	__aeabi_f2iz
 3808 01dc 0246     		mov	r2, r0
 3809 01de 624B     		ldr	r3, .L321+4
 3810 01e0 DA61     		str	r2, [r3, #28]
 815:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3811              		.loc 1 815 0
 3812 01e2 644B     		ldr	r3, .L321+16
 3813 01e4 1B68     		ldr	r3, [r3]	@ float
 3814 01e6 3B61     		str	r3, [r7, #16]	@ float
 816:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3815              		.loc 1 816 0
 3816 01e8 0023     		movs	r3, #0
 3817 01ea BB75     		strb	r3, [r7, #22]
 3818 01ec 0EE0     		b	.L273
 3819              	.L274:
 817:..\src/command_processing.c ****                 }
 3820              		.loc 1 817 0 discriminator 3
 3821 01ee BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3822 01f0 C3F10303 		rsb	r3, r3, #3
 3823 01f4 07F10C02 		add	r2, r7, #12
 3824 01f8 1344     		add	r3, r3, r2
 3825 01fa BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3826 01fc 07F11001 		add	r1, r7, #16
 3827 0200 0A44     		add	r2, r2, r1
 3828 0202 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3829 0204 1A70     		strb	r2, [r3]
 816:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3830              		.loc 1 816 0 discriminator 3
 3831 0206 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3832 0208 0133     		adds	r3, r3, #1
 3833 020a BB75     		strb	r3, [r7, #22]
 3834              	.L273:
 816:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3835              		.loc 1 816 0 is_stmt 0 discriminator 1
 3836 020c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3837 020e 032B     		cmp	r3, #3
 3838 0210 EDD9     		bls	.L274
 819:..\src/command_processing.c ****                 //g_mem.k_i_dl = *((float *) &g_rx.buffer[3 + 4]);
 3839              		.loc 1 819 0 is_stmt 1
 3840 0212 FB68     		ldr	r3, [r7, #12]	@ float
 3841 0214 4FF08F41 		mov	r1, #1199570944
 3842 0218 1846     		mov	r0, r3
 3843 021a FFF7FEFF 		bl	__aeabi_fmul
 3844 021e 0346     		mov	r3, r0
 3845 0220 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 103


 3846 0222 FFF7FEFF 		bl	__aeabi_f2iz
 3847 0226 0246     		mov	r2, r0
 3848 0228 4F4B     		ldr	r3, .L321+4
 3849 022a 1A62     		str	r2, [r3, #32]
 822:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3850              		.loc 1 822 0
 3851 022c 524B     		ldr	r3, .L321+20
 3852 022e 1B68     		ldr	r3, [r3]	@ float
 3853 0230 3B61     		str	r3, [r7, #16]	@ float
 823:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3854              		.loc 1 823 0
 3855 0232 0023     		movs	r3, #0
 3856 0234 BB75     		strb	r3, [r7, #22]
 3857 0236 0EE0     		b	.L275
 3858              	.L276:
 824:..\src/command_processing.c ****                 }
 3859              		.loc 1 824 0 discriminator 3
 3860 0238 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3861 023a C3F10303 		rsb	r3, r3, #3
 3862 023e 07F10C02 		add	r2, r7, #12
 3863 0242 1344     		add	r3, r3, r2
 3864 0244 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3865 0246 07F11001 		add	r1, r7, #16
 3866 024a 0A44     		add	r2, r2, r1
 3867 024c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3868 024e 1A70     		strb	r2, [r3]
 823:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3869              		.loc 1 823 0 discriminator 3
 3870 0250 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3871 0252 0133     		adds	r3, r3, #1
 3872 0254 BB75     		strb	r3, [r7, #22]
 3873              	.L275:
 823:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3874              		.loc 1 823 0 is_stmt 0 discriminator 1
 3875 0256 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3876 0258 032B     		cmp	r3, #3
 3877 025a EDD9     		bls	.L276
 826:..\src/command_processing.c ****                 //g_mem.k_d_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 3878              		.loc 1 826 0 is_stmt 1
 3879 025c FB68     		ldr	r3, [r7, #12]	@ float
 3880 025e 4FF08F41 		mov	r1, #1199570944
 3881 0262 1846     		mov	r0, r3
 3882 0264 FFF7FEFF 		bl	__aeabi_fmul
 3883 0268 0346     		mov	r3, r0
 3884 026a 1846     		mov	r0, r3
 3885 026c FFF7FEFF 		bl	__aeabi_f2iz
 3886 0270 0246     		mov	r2, r0
 3887 0272 3D4B     		ldr	r3, .L321+4
 3888 0274 5A62     		str	r2, [r3, #36]
 3889              		.loc 1 829 0
 3890 0276 00F033BC 		b	.L229
 3891              	.L234:
 830:..\src/command_processing.c **** 
 831:..\src/command_processing.c **** //==================================================     set_curr_pid_parameters
 832:..\src/command_processing.c ****         case 3:         //Current PID - float[3]
 833:..\src/command_processing.c ****             if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 3892              		.loc 1 833 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 104


 3893 027a 3C4B     		ldr	r3, .L321+8
 3894 027c 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3895 0280 032B     		cmp	r3, #3
 3896 0282 7BD0     		beq	.L277
 834:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 3897              		.loc 1 834 0
 3898 0284 3A4B     		ldr	r3, .L321+12
 3899 0286 1B68     		ldr	r3, [r3]	@ float
 3900 0288 3B61     		str	r3, [r7, #16]	@ float
 835:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3901              		.loc 1 835 0
 3902 028a 0023     		movs	r3, #0
 3903 028c BB75     		strb	r3, [r7, #22]
 3904 028e 0EE0     		b	.L278
 3905              	.L279:
 836:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3906              		.loc 1 836 0 discriminator 3
 3907 0290 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3908 0292 C3F10303 		rsb	r3, r3, #3
 3909 0296 07F10C02 		add	r2, r7, #12
 3910 029a 1344     		add	r3, r3, r2
 3911 029c BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3912 029e 07F11001 		add	r1, r7, #16
 3913 02a2 0A44     		add	r2, r2, r1
 3914 02a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3915 02a6 1A70     		strb	r2, [r3]
 835:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3916              		.loc 1 835 0 discriminator 3
 3917 02a8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3918 02aa 0133     		adds	r3, r3, #1
 3919 02ac BB75     		strb	r3, [r7, #22]
 3920              	.L278:
 835:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3921              		.loc 1 835 0 is_stmt 0 discriminator 1
 3922 02ae BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3923 02b0 032B     		cmp	r3, #3
 3924 02b2 EDD9     		bls	.L279
 837:..\src/command_processing.c ****                 }
 838:..\src/command_processing.c ****                 g_mem.k_p_c = aux_float2 * 65536;
 3925              		.loc 1 838 0 is_stmt 1
 3926 02b4 FB68     		ldr	r3, [r7, #12]	@ float
 3927 02b6 4FF08F41 		mov	r1, #1199570944
 3928 02ba 1846     		mov	r0, r3
 3929 02bc FFF7FEFF 		bl	__aeabi_fmul
 3930 02c0 0346     		mov	r3, r0
 3931 02c2 1846     		mov	r0, r3
 3932 02c4 FFF7FEFF 		bl	__aeabi_f2iz
 3933 02c8 0246     		mov	r2, r0
 3934 02ca 274B     		ldr	r3, .L321+4
 3935 02cc 1A61     		str	r2, [r3, #16]
 839:..\src/command_processing.c ****                 //g_mem.k_p_c = *((float *) &g_rx.buffer[3]) * 65536;
 840:..\src/command_processing.c ****                 
 841:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 3936              		.loc 1 841 0
 3937 02ce 294B     		ldr	r3, .L321+16
 3938 02d0 1B68     		ldr	r3, [r3]	@ float
 3939 02d2 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 105


 842:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3940              		.loc 1 842 0
 3941 02d4 0023     		movs	r3, #0
 3942 02d6 BB75     		strb	r3, [r7, #22]
 3943 02d8 0EE0     		b	.L280
 3944              	.L281:
 843:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3945              		.loc 1 843 0 discriminator 3
 3946 02da BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3947 02dc C3F10303 		rsb	r3, r3, #3
 3948 02e0 07F10C02 		add	r2, r7, #12
 3949 02e4 1344     		add	r3, r3, r2
 3950 02e6 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3951 02e8 07F11001 		add	r1, r7, #16
 3952 02ec 0A44     		add	r2, r2, r1
 3953 02ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3954 02f0 1A70     		strb	r2, [r3]
 842:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3955              		.loc 1 842 0 discriminator 3
 3956 02f2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3957 02f4 0133     		adds	r3, r3, #1
 3958 02f6 BB75     		strb	r3, [r7, #22]
 3959              	.L280:
 842:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3960              		.loc 1 842 0 is_stmt 0 discriminator 1
 3961 02f8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3962 02fa 032B     		cmp	r3, #3
 3963 02fc EDD9     		bls	.L281
 844:..\src/command_processing.c ****                 }
 845:..\src/command_processing.c ****                 g_mem.k_i_c = aux_float2 * 65536;
 3964              		.loc 1 845 0 is_stmt 1
 3965 02fe FB68     		ldr	r3, [r7, #12]	@ float
 3966 0300 4FF08F41 		mov	r1, #1199570944
 3967 0304 1846     		mov	r0, r3
 3968 0306 FFF7FEFF 		bl	__aeabi_fmul
 3969 030a 0346     		mov	r3, r0
 3970 030c 1846     		mov	r0, r3
 3971 030e FFF7FEFF 		bl	__aeabi_f2iz
 3972 0312 0246     		mov	r2, r0
 3973 0314 144B     		ldr	r3, .L321+4
 3974 0316 5A61     		str	r2, [r3, #20]
 846:..\src/command_processing.c ****                 //g_mem.k_i_c = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 847:..\src/command_processing.c ****                 
 848:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 3975              		.loc 1 848 0
 3976 0318 174B     		ldr	r3, .L321+20
 3977 031a 1B68     		ldr	r3, [r3]	@ float
 3978 031c 3B61     		str	r3, [r7, #16]	@ float
 849:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3979              		.loc 1 849 0
 3980 031e 0023     		movs	r3, #0
 3981 0320 BB75     		strb	r3, [r7, #22]
 3982 0322 0EE0     		b	.L282
 3983              	.L283:
 850:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 3984              		.loc 1 850 0 discriminator 3
 3985 0324 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 106


 3986 0326 C3F10303 		rsb	r3, r3, #3
 3987 032a 07F10C02 		add	r2, r7, #12
 3988 032e 1344     		add	r3, r3, r2
 3989 0330 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 3990 0332 07F11001 		add	r1, r7, #16
 3991 0336 0A44     		add	r2, r2, r1
 3992 0338 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 3993 033a 1A70     		strb	r2, [r3]
 849:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3994              		.loc 1 849 0 discriminator 3
 3995 033c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 3996 033e 0133     		adds	r3, r3, #1
 3997 0340 BB75     		strb	r3, [r7, #22]
 3998              	.L282:
 849:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 3999              		.loc 1 849 0 is_stmt 0 discriminator 1
 4000 0342 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4001 0344 032B     		cmp	r3, #3
 4002 0346 EDD9     		bls	.L283
 851:..\src/command_processing.c ****                 }
 852:..\src/command_processing.c ****                 g_mem.k_d_c = aux_float2 * 65536;
 4003              		.loc 1 852 0 is_stmt 1
 4004 0348 FB68     		ldr	r3, [r7, #12]	@ float
 4005 034a 4FF08F41 		mov	r1, #1199570944
 4006 034e 1846     		mov	r0, r3
 4007 0350 FFF7FEFF 		bl	__aeabi_fmul
 4008 0354 0346     		mov	r3, r0
 4009 0356 1846     		mov	r0, r3
 4010 0358 FFF7FEFF 		bl	__aeabi_f2iz
 4011 035c 0246     		mov	r2, r0
 4012 035e 024B     		ldr	r3, .L321+4
 4013 0360 9A61     		str	r2, [r3, #24]
 853:..\src/command_processing.c ****                 //g_mem.k_d_c = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 854:..\src/command_processing.c ****             }
 855:..\src/command_processing.c ****             else {
 856:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3]);
 857:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 858:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 859:..\src/command_processing.c ****                 }
 860:..\src/command_processing.c ****                 g_mem.k_p_c_dl = aux_float2 * 65536;
 861:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 862:..\src/command_processing.c ****                 
 863:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 4]);
 864:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 865:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 866:..\src/command_processing.c ****                 }
 867:..\src/command_processing.c ****                 g_mem.k_i_c_dl = aux_float2 * 65536;
 868:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 869:..\src/command_processing.c ****                 
 870:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + 8]);
 871:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 872:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 873:..\src/command_processing.c ****                 }
 874:..\src/command_processing.c ****                 g_mem.k_d_c_dl = aux_float2 * 65536;
 875:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 876:..\src/command_processing.c ****             }
 877:..\src/command_processing.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 107


 878:..\src/command_processing.c ****         break;
 4014              		.loc 1 878 0
 4015 0362 BDE3     		b	.L229
 4016              	.L322:
 4017              		.align	2
 4018              	.L321:
 4019 0364 00000000 		.word	g_rx
 4020 0368 00000000 		.word	g_mem
 4021 036c 00000000 		.word	c_mem
 4022 0370 03000000 		.word	g_rx+3
 4023 0374 07000000 		.word	g_rx+7
 4024 0378 0B000000 		.word	g_rx+11
 4025              	.L277:
 856:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4026              		.loc 1 856 0
 4027 037c 9E4B     		ldr	r3, .L323
 4028 037e 1B68     		ldr	r3, [r3]	@ float
 4029 0380 3B61     		str	r3, [r7, #16]	@ float
 857:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4030              		.loc 1 857 0
 4031 0382 0023     		movs	r3, #0
 4032 0384 BB75     		strb	r3, [r7, #22]
 4033 0386 0EE0     		b	.L285
 4034              	.L286:
 858:..\src/command_processing.c ****                 }
 4035              		.loc 1 858 0 discriminator 3
 4036 0388 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4037 038a C3F10303 		rsb	r3, r3, #3
 4038 038e 07F10C02 		add	r2, r7, #12
 4039 0392 1344     		add	r3, r3, r2
 4040 0394 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4041 0396 07F11001 		add	r1, r7, #16
 4042 039a 0A44     		add	r2, r2, r1
 4043 039c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4044 039e 1A70     		strb	r2, [r3]
 857:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4045              		.loc 1 857 0 discriminator 3
 4046 03a0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4047 03a2 0133     		adds	r3, r3, #1
 4048 03a4 BB75     		strb	r3, [r7, #22]
 4049              	.L285:
 857:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4050              		.loc 1 857 0 is_stmt 0 discriminator 1
 4051 03a6 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4052 03a8 032B     		cmp	r3, #3
 4053 03aa EDD9     		bls	.L286
 860:..\src/command_processing.c ****                 //g_mem.k_p_c_dl = *((float *) &g_rx.buffer[3]) * 65536;
 4054              		.loc 1 860 0 is_stmt 1
 4055 03ac FB68     		ldr	r3, [r7, #12]	@ float
 4056 03ae 4FF08F41 		mov	r1, #1199570944
 4057 03b2 1846     		mov	r0, r3
 4058 03b4 FFF7FEFF 		bl	__aeabi_fmul
 4059 03b8 0346     		mov	r3, r0
 4060 03ba 1846     		mov	r0, r3
 4061 03bc FFF7FEFF 		bl	__aeabi_f2iz
 4062 03c0 0246     		mov	r2, r0
 4063 03c2 8E4B     		ldr	r3, .L323+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 108


 4064 03c4 9A62     		str	r2, [r3, #40]
 863:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4065              		.loc 1 863 0
 4066 03c6 8E4B     		ldr	r3, .L323+8
 4067 03c8 1B68     		ldr	r3, [r3]	@ float
 4068 03ca 3B61     		str	r3, [r7, #16]	@ float
 864:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4069              		.loc 1 864 0
 4070 03cc 0023     		movs	r3, #0
 4071 03ce BB75     		strb	r3, [r7, #22]
 4072 03d0 0EE0     		b	.L287
 4073              	.L288:
 865:..\src/command_processing.c ****                 }
 4074              		.loc 1 865 0 discriminator 3
 4075 03d2 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4076 03d4 C3F10303 		rsb	r3, r3, #3
 4077 03d8 07F10C02 		add	r2, r7, #12
 4078 03dc 1344     		add	r3, r3, r2
 4079 03de BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4080 03e0 07F11001 		add	r1, r7, #16
 4081 03e4 0A44     		add	r2, r2, r1
 4082 03e6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4083 03e8 1A70     		strb	r2, [r3]
 864:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4084              		.loc 1 864 0 discriminator 3
 4085 03ea BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4086 03ec 0133     		adds	r3, r3, #1
 4087 03ee BB75     		strb	r3, [r7, #22]
 4088              	.L287:
 864:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4089              		.loc 1 864 0 is_stmt 0 discriminator 1
 4090 03f0 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4091 03f2 032B     		cmp	r3, #3
 4092 03f4 EDD9     		bls	.L288
 867:..\src/command_processing.c ****                 //g_mem.k_i_c_dl = *((float *) &g_rx.buffer[3 + 4]) * 65536;
 4093              		.loc 1 867 0 is_stmt 1
 4094 03f6 FB68     		ldr	r3, [r7, #12]	@ float
 4095 03f8 4FF08F41 		mov	r1, #1199570944
 4096 03fc 1846     		mov	r0, r3
 4097 03fe FFF7FEFF 		bl	__aeabi_fmul
 4098 0402 0346     		mov	r3, r0
 4099 0404 1846     		mov	r0, r3
 4100 0406 FFF7FEFF 		bl	__aeabi_f2iz
 4101 040a 0246     		mov	r2, r0
 4102 040c 7B4B     		ldr	r3, .L323+4
 4103 040e DA62     		str	r2, [r3, #44]
 870:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4104              		.loc 1 870 0
 4105 0410 7C4B     		ldr	r3, .L323+12
 4106 0412 1B68     		ldr	r3, [r3]	@ float
 4107 0414 3B61     		str	r3, [r7, #16]	@ float
 871:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4108              		.loc 1 871 0
 4109 0416 0023     		movs	r3, #0
 4110 0418 BB75     		strb	r3, [r7, #22]
 4111 041a 0EE0     		b	.L289
 4112              	.L290:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 109


 872:..\src/command_processing.c ****                 }
 4113              		.loc 1 872 0 discriminator 3
 4114 041c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4115 041e C3F10303 		rsb	r3, r3, #3
 4116 0422 07F10C02 		add	r2, r7, #12
 4117 0426 1344     		add	r3, r3, r2
 4118 0428 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4119 042a 07F11001 		add	r1, r7, #16
 4120 042e 0A44     		add	r2, r2, r1
 4121 0430 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4122 0432 1A70     		strb	r2, [r3]
 871:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4123              		.loc 1 871 0 discriminator 3
 4124 0434 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4125 0436 0133     		adds	r3, r3, #1
 4126 0438 BB75     		strb	r3, [r7, #22]
 4127              	.L289:
 871:..\src/command_processing.c ****                     ((char*)(&aux_float2))[4 - j -1] = ((char*)(&aux_float))[j];
 4128              		.loc 1 871 0 is_stmt 0 discriminator 1
 4129 043a BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4130 043c 032B     		cmp	r3, #3
 4131 043e EDD9     		bls	.L290
 874:..\src/command_processing.c ****                 //g_mem.k_d_c_dl = *((float *) &g_rx.buffer[3 + 8]) * 65536;
 4132              		.loc 1 874 0 is_stmt 1
 4133 0440 FB68     		ldr	r3, [r7, #12]	@ float
 4134 0442 4FF08F41 		mov	r1, #1199570944
 4135 0446 1846     		mov	r0, r3
 4136 0448 FFF7FEFF 		bl	__aeabi_fmul
 4137 044c 0346     		mov	r3, r0
 4138 044e 1846     		mov	r0, r3
 4139 0450 FFF7FEFF 		bl	__aeabi_f2iz
 4140 0454 0246     		mov	r2, r0
 4141 0456 694B     		ldr	r3, .L323+4
 4142 0458 1A63     		str	r2, [r3, #48]
 4143              		.loc 1 878 0
 4144 045a 41E3     		b	.L229
 4145              	.L235:
 879:..\src/command_processing.c **** 
 880:..\src/command_processing.c **** //===================================================     set_startup_activation        
 881:..\src/command_processing.c ****         case 4:         //Startup flag - uint8
 882:..\src/command_processing.c ****             if(g_rx.buffer[3])
 4146              		.loc 1 882 0
 4147 045c 6A4B     		ldr	r3, .L323+16
 4148 045e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4149 0460 002B     		cmp	r3, #0
 4150 0462 04D0     		beq	.L291
 883:..\src/command_processing.c ****                 g_mem.activ = 0x01;
 4151              		.loc 1 883 0
 4152 0464 654B     		ldr	r3, .L323+4
 4153 0466 0122     		movs	r2, #1
 4154 0468 83F83420 		strb	r2, [r3, #52]
 884:..\src/command_processing.c ****             else
 885:..\src/command_processing.c ****                 g_mem.activ = 0x00;
 886:..\src/command_processing.c ****         break;
 4155              		.loc 1 886 0
 4156 046c 38E3     		b	.L229
 4157              	.L291:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 110


 885:..\src/command_processing.c ****         break;
 4158              		.loc 1 885 0
 4159 046e 634B     		ldr	r3, .L323+4
 4160 0470 0022     		movs	r2, #0
 4161 0472 83F83420 		strb	r2, [r3, #52]
 4162              		.loc 1 886 0
 4163 0476 33E3     		b	.L229
 4164              	.L236:
 887:..\src/command_processing.c **** 
 888:..\src/command_processing.c **** //===========================================================     set_input_mode        
 889:..\src/command_processing.c ****         case 5:         //Input mode - uint8
 890:..\src/command_processing.c ****             g_mem.input_mode = g_rx.buffer[3];
 4165              		.loc 1 890 0
 4166 0478 634B     		ldr	r3, .L323+16
 4167 047a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4168 047c 5F4B     		ldr	r3, .L323+4
 4169 047e 83F83520 		strb	r2, [r3, #53]
 891:..\src/command_processing.c ****             
 892:..\src/command_processing.c ****             // Hold the actual position
 893:..\src/command_processing.c ****             g_refNew.pos = g_meas.pos[0];
 4170              		.loc 1 893 0
 4171 0482 624B     		ldr	r3, .L323+20
 4172 0484 1B68     		ldr	r3, [r3]
 4173 0486 624A     		ldr	r2, .L323+24
 4174 0488 1360     		str	r3, [r2]
 894:..\src/command_processing.c ****         break;
 4175              		.loc 1 894 0
 4176 048a 29E3     		b	.L229
 4177              	.L237:
 895:..\src/command_processing.c ****         
 896:..\src/command_processing.c **** //=========================================================     set_control_mode
 897:..\src/command_processing.c ****         case 6:         //Control mode - uint8
 898:..\src/command_processing.c ****             g_mem.control_mode = g_rx.buffer[3];
 4178              		.loc 1 898 0
 4179 048c 5E4B     		ldr	r3, .L323+16
 4180 048e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4181 0490 5A4B     		ldr	r3, .L323+4
 4182 0492 83F83620 		strb	r2, [r3, #54]
 899:..\src/command_processing.c ****         break;
 4183              		.loc 1 899 0
 4184 0496 23E3     		b	.L229
 4185              	.L238:
 900:..\src/command_processing.c ****         
 901:..\src/command_processing.c **** //===========================================================     set_resolution
 902:..\src/command_processing.c ****         case 7:         //Resolution - uint8[3]
 903:..\src/command_processing.c ****             for (i =0; i < NUM_OF_SENSORS; i++) {
 4186              		.loc 1 903 0
 4187 0498 0023     		movs	r3, #0
 4188 049a FB75     		strb	r3, [r7, #23]
 4189 049c 0CE0     		b	.L293
 4190              	.L294:
 904:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4191              		.loc 1 904 0 discriminator 3
 4192 049e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4193 04a0 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4194 04a2 0332     		adds	r2, r2, #3
 4195 04a4 5849     		ldr	r1, .L323+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 111


 4196 04a6 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4197 04a8 544A     		ldr	r2, .L323+4
 4198 04aa 1344     		add	r3, r3, r2
 4199 04ac 0A46     		mov	r2, r1
 4200 04ae 83F83720 		strb	r2, [r3, #55]
 903:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4201              		.loc 1 903 0 discriminator 3
 4202 04b2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4203 04b4 0133     		adds	r3, r3, #1
 4204 04b6 FB75     		strb	r3, [r7, #23]
 4205              	.L293:
 903:..\src/command_processing.c ****                 g_mem.res[i] = g_rx.buffer[i+3];
 4206              		.loc 1 903 0 is_stmt 0 discriminator 1
 4207 04b8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4208 04ba 022B     		cmp	r3, #2
 4209 04bc EFD9     		bls	.L294
 905:..\src/command_processing.c ****             }
 906:..\src/command_processing.c ****         break;
 4210              		.loc 1 906 0 is_stmt 1
 4211 04be 0FE3     		b	.L229
 4212              	.L239:
 907:..\src/command_processing.c ****         
 908:..\src/command_processing.c **** //===============================================================     set_offset
 909:..\src/command_processing.c ****         case 8:         //Measurement Offset - int32[3] 
 910:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i) {
 4213              		.loc 1 910 0
 4214 04c0 0023     		movs	r3, #0
 4215 04c2 FB75     		strb	r3, [r7, #23]
 4216 04c4 31E0     		b	.L295
 4217              	.L296:
 911:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4218              		.loc 1 911 0 discriminator 3
 4219 04c6 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4220 04c8 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4221 04ca 5200     		lsls	r2, r2, #1
 4222 04cc 0332     		adds	r2, r2, #3
 4223 04ce 4E49     		ldr	r1, .L323+16
 4224 04d0 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 4225 04d2 1202     		lsls	r2, r2, #8
 4226 04d4 11B2     		sxth	r1, r2
 4227 04d6 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4228 04d8 0232     		adds	r2, r2, #2
 4229 04da 5200     		lsls	r2, r2, #1
 4230 04dc 4A48     		ldr	r0, .L323+16
 4231 04de 825C     		ldrb	r2, [r0, r2]	@ zero_extendqisi2
 4232 04e0 12B2     		sxth	r2, r2
 4233 04e2 0A43     		orrs	r2, r2, r1
 4234 04e4 12B2     		sxth	r2, r2
 4235 04e6 1146     		mov	r1, r2
 4236 04e8 444A     		ldr	r2, .L323+4
 4237 04ea 0E33     		adds	r3, r3, #14
 4238 04ec 9B00     		lsls	r3, r3, #2
 4239 04ee 1344     		add	r3, r3, r2
 4240 04f0 5960     		str	r1, [r3, #4]
 912:..\src/command_processing.c ****                 //g_mem.m_off[i] = *((int16 *) &g_rx.buffer[3 + i * 2]);
 913:..\src/command_processing.c ****                 g_mem.m_off[i] = g_mem.m_off[i] << g_mem.res[i];
 4241              		.loc 1 913 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 112


 4242 04f2 F97D     		ldrb	r1, [r7, #23]	@ zero_extendqisi2
 4243 04f4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4244 04f6 414A     		ldr	r2, .L323+4
 4245 04f8 0E33     		adds	r3, r3, #14
 4246 04fa 9B00     		lsls	r3, r3, #2
 4247 04fc 1344     		add	r3, r3, r2
 4248 04fe 5B68     		ldr	r3, [r3, #4]
 4249 0500 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4250 0502 3E48     		ldr	r0, .L323+4
 4251 0504 0244     		add	r2, r2, r0
 4252 0506 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4253 050a 03FA02F2 		lsl	r2, r3, r2
 4254 050e 3B48     		ldr	r0, .L323+4
 4255 0510 01F10E03 		add	r3, r1, #14
 4256 0514 9B00     		lsls	r3, r3, #2
 4257 0516 0344     		add	r3, r3, r0
 4258 0518 5A60     		str	r2, [r3, #4]
 914:..\src/command_processing.c **** 
 915:..\src/command_processing.c ****                 g_meas.rot[i] = 0;
 4259              		.loc 1 915 0 discriminator 3
 4260 051a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4261 051c 3B4A     		ldr	r2, .L323+20
 4262 051e 1344     		add	r3, r3, r2
 4263 0520 0022     		movs	r2, #0
 4264 0522 1A75     		strb	r2, [r3, #20]
 910:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4265              		.loc 1 910 0 discriminator 3
 4266 0524 FB7D     		ldrb	r3, [r7, #23]
 4267 0526 0133     		adds	r3, r3, #1
 4268 0528 FB75     		strb	r3, [r7, #23]
 4269              	.L295:
 910:..\src/command_processing.c ****                 g_mem.m_off[i] = (int16)(g_rx.buffer[3 + i*2]<<8 | g_rx.buffer[4 + i*2]);
 4270              		.loc 1 910 0 is_stmt 0 discriminator 1
 4271 052a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4272 052c 022B     		cmp	r3, #2
 4273 052e CAD9     		bls	.L296
 916:..\src/command_processing.c ****             }
 917:..\src/command_processing.c ****             reset_last_value_flag = 1;
 4274              		.loc 1 917 0 is_stmt 1
 4275 0530 384B     		ldr	r3, .L323+28
 4276 0532 0122     		movs	r2, #1
 4277 0534 1A70     		strb	r2, [r3]
 918:..\src/command_processing.c ****         break;
 4278              		.loc 1 918 0
 4279 0536 D3E2     		b	.L229
 4280              	.L240:
 919:..\src/command_processing.c ****         
 920:..\src/command_processing.c **** //===========================================================     set_multiplier
 921:..\src/command_processing.c ****         case 9:         //Multipliers - float[3]
 922:..\src/command_processing.c ****             for(i = 0; i < NUM_OF_SENSORS; ++i){
 4281              		.loc 1 922 0
 4282 0538 0023     		movs	r3, #0
 4283 053a FB75     		strb	r3, [r7, #23]
 4284 053c 21E0     		b	.L297
 4285              	.L300:
 923:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4286              		.loc 1 923 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 113


 4287 053e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4288 0540 9B00     		lsls	r3, r3, #2
 4289 0542 0333     		adds	r3, r3, #3
 4290 0544 304A     		ldr	r2, .L323+16
 4291 0546 1344     		add	r3, r3, r2
 4292 0548 1B68     		ldr	r3, [r3]	@ float
 4293 054a 3B61     		str	r3, [r7, #16]	@ float
 924:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4294              		.loc 1 924 0
 4295 054c 0023     		movs	r3, #0
 4296 054e BB75     		strb	r3, [r7, #22]
 4297 0550 11E0     		b	.L298
 4298              	.L299:
 925:..\src/command_processing.c ****                     ((char*)(&g_mem.m_mult[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 4299              		.loc 1 925 0 discriminator 3
 4300 0552 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4301 0554 1233     		adds	r3, r3, #18
 4302 0556 9B00     		lsls	r3, r3, #2
 4303 0558 284A     		ldr	r2, .L323+4
 4304 055a 1A44     		add	r2, r2, r3
 4305 055c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4306 055e C3F10303 		rsb	r3, r3, #3
 4307 0562 1344     		add	r3, r3, r2
 4308 0564 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4309 0566 07F11001 		add	r1, r7, #16
 4310 056a 0A44     		add	r2, r2, r1
 4311 056c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4312 056e 1A70     		strb	r2, [r3]
 924:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4313              		.loc 1 924 0 discriminator 3
 4314 0570 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4315 0572 0133     		adds	r3, r3, #1
 4316 0574 BB75     		strb	r3, [r7, #22]
 4317              	.L298:
 924:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4318              		.loc 1 924 0 is_stmt 0 discriminator 1
 4319 0576 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4320 0578 032B     		cmp	r3, #3
 4321 057a EAD9     		bls	.L299
 922:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4322              		.loc 1 922 0 is_stmt 1 discriminator 2
 4323 057c FB7D     		ldrb	r3, [r7, #23]
 4324 057e 0133     		adds	r3, r3, #1
 4325 0580 FB75     		strb	r3, [r7, #23]
 4326              	.L297:
 922:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4327              		.loc 1 922 0 is_stmt 0 discriminator 1
 4328 0582 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4329 0584 022B     		cmp	r3, #2
 4330 0586 DAD9     		bls	.L300
 926:..\src/command_processing.c ****                 }
 927:..\src/command_processing.c ****                 //g_mem.m_mult[i] = *((float *) &g_rx.buffer[3 + i * 4]);
 928:..\src/command_processing.c ****             }
 929:..\src/command_processing.c ****         break;
 4331              		.loc 1 929 0 is_stmt 1
 4332 0588 AAE2     		b	.L229
 4333              	.L241:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 114


 930:..\src/command_processing.c ****         
 931:..\src/command_processing.c **** //=====================================================     set_pos_limit_enable
 932:..\src/command_processing.c ****         case 10:        //Position limit flag - uint8
 933:..\src/command_processing.c ****             g_mem.pos_lim_flag = *((uint8 *) &g_rx.buffer[3]);
 4334              		.loc 1 933 0
 4335 058a 1F4B     		ldr	r3, .L323+16
 4336 058c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4337 058e 1B4B     		ldr	r3, .L323+4
 4338 0590 83F85420 		strb	r2, [r3, #84]
 934:..\src/command_processing.c ****         break;
 4339              		.loc 1 934 0
 4340 0594 A4E2     		b	.L229
 4341              	.L242:
 935:..\src/command_processing.c **** 
 936:..\src/command_processing.c **** //============================================================     set_pos_limit
 937:..\src/command_processing.c ****         case 11:        //Position limits - int32[4]
 938:..\src/command_processing.c ****             g_mem.pos_lim_inf = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8
 4342              		.loc 1 938 0
 4343 0596 1C4B     		ldr	r3, .L323+16
 4344 0598 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4345 059a 1A06     		lsls	r2, r3, #24
 4346 059c 1A4B     		ldr	r3, .L323+16
 4347 059e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4348 05a0 1B04     		lsls	r3, r3, #16
 4349 05a2 1A43     		orrs	r2, r2, r3
 4350 05a4 184B     		ldr	r3, .L323+16
 4351 05a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4352 05a8 1B02     		lsls	r3, r3, #8
 4353 05aa 1343     		orrs	r3, r3, r2
 4354 05ac 164A     		ldr	r2, .L323+16
 4355 05ae 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4356 05b0 1343     		orrs	r3, r3, r2
 4357 05b2 124A     		ldr	r2, .L323+4
 4358 05b4 9365     		str	r3, [r2, #88]
 939:..\src/command_processing.c ****             g_mem.pos_lim_sup = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<8
 4359              		.loc 1 939 0
 4360 05b6 144B     		ldr	r3, .L323+16
 4361 05b8 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4362 05ba 1A06     		lsls	r2, r3, #24
 4363 05bc 124B     		ldr	r3, .L323+16
 4364 05be 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4365 05c0 1B04     		lsls	r3, r3, #16
 4366 05c2 1A43     		orrs	r2, r2, r3
 4367 05c4 104B     		ldr	r3, .L323+16
 4368 05c6 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4369 05c8 1B02     		lsls	r3, r3, #8
 4370 05ca 1343     		orrs	r3, r3, r2
 4371 05cc 0E4A     		ldr	r2, .L323+16
 4372 05ce 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4373 05d0 1343     		orrs	r3, r3, r2
 4374 05d2 0A4A     		ldr	r2, .L323+4
 4375 05d4 D365     		str	r3, [r2, #92]
 940:..\src/command_processing.c ****             //g_mem.pos_lim_inf = *((int32 *) &g_rx.buffer[3]);
 941:..\src/command_processing.c ****             //g_mem.pos_lim_sup = *((int32 *) &g_rx.buffer[7]);
 942:..\src/command_processing.c **** 
 943:..\src/command_processing.c ****             g_mem.pos_lim_inf = g_mem.pos_lim_inf << g_mem.res[0];
 4376              		.loc 1 943 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 115


 4377 05d6 094B     		ldr	r3, .L323+4
 4378 05d8 9B6D     		ldr	r3, [r3, #88]
 4379 05da 084A     		ldr	r2, .L323+4
 4380 05dc 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4381 05e0 9340     		lsls	r3, r3, r2
 4382 05e2 064A     		ldr	r2, .L323+4
 4383 05e4 9365     		str	r3, [r2, #88]
 944:..\src/command_processing.c ****             g_mem.pos_lim_sup = g_mem.pos_lim_sup << g_mem.res[0];
 4384              		.loc 1 944 0
 4385 05e6 054B     		ldr	r3, .L323+4
 4386 05e8 DB6D     		ldr	r3, [r3, #92]
 4387 05ea 044A     		ldr	r2, .L323+4
 4388 05ec 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4389 05f0 9340     		lsls	r3, r3, r2
 4390 05f2 024A     		ldr	r2, .L323+4
 4391 05f4 D365     		str	r3, [r2, #92]
 945:..\src/command_processing.c ****         break;
 4392              		.loc 1 945 0
 4393 05f6 73E2     		b	.L229
 4394              	.L324:
 4395              		.align	2
 4396              	.L323:
 4397 05f8 03000000 		.word	g_rx+3
 4398 05fc 00000000 		.word	g_mem
 4399 0600 07000000 		.word	g_rx+7
 4400 0604 0B000000 		.word	g_rx+11
 4401 0608 00000000 		.word	g_rx
 4402 060c 00000000 		.word	g_meas
 4403 0610 00000000 		.word	g_refNew
 4404 0614 00000000 		.word	reset_last_value_flag
 4405              	.L243:
 946:..\src/command_processing.c **** 
 947:..\src/command_processing.c **** //==================================================     set_max_steps_per_cycle
 948:..\src/command_processing.c ****         case 12:        //Max steps - int32[2]
 949:..\src/command_processing.c ****             g_mem.max_step_neg = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<
 4406              		.loc 1 949 0
 4407 0618 9E4B     		ldr	r3, .L325
 4408 061a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4409 061c 1A06     		lsls	r2, r3, #24
 4410 061e 9D4B     		ldr	r3, .L325
 4411 0620 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4412 0622 1B04     		lsls	r3, r3, #16
 4413 0624 1A43     		orrs	r2, r2, r3
 4414 0626 9B4B     		ldr	r3, .L325
 4415 0628 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4416 062a 1B02     		lsls	r3, r3, #8
 4417 062c 1343     		orrs	r3, r3, r2
 4418 062e 994A     		ldr	r2, .L325
 4419 0630 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4420 0632 1343     		orrs	r3, r3, r2
 4421 0634 984A     		ldr	r2, .L325+4
 4422 0636 1366     		str	r3, [r2, #96]
 950:..\src/command_processing.c ****             g_mem.max_step_pos = (int32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer[9]<<
 4423              		.loc 1 950 0
 4424 0638 964B     		ldr	r3, .L325
 4425 063a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4426 063c 1A06     		lsls	r2, r3, #24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 116


 4427 063e 954B     		ldr	r3, .L325
 4428 0640 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4429 0642 1B04     		lsls	r3, r3, #16
 4430 0644 1A43     		orrs	r2, r2, r3
 4431 0646 934B     		ldr	r3, .L325
 4432 0648 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4433 064a 1B02     		lsls	r3, r3, #8
 4434 064c 1343     		orrs	r3, r3, r2
 4435 064e 914A     		ldr	r2, .L325
 4436 0650 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4437 0652 1343     		orrs	r3, r3, r2
 4438 0654 904A     		ldr	r2, .L325+4
 4439 0656 5366     		str	r3, [r2, #100]
 951:..\src/command_processing.c ****             
 952:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3]);
 953:..\src/command_processing.c ****             //if (aux_int <= 0)
 954:..\src/command_processing.c ****             //    g_mem.max_step_neg = aux_int;
 955:..\src/command_processing.c **** 
 956:..\src/command_processing.c ****             //aux_int = *((int32 *) &g_rx.buffer[3 + 4]);
 957:..\src/command_processing.c ****             //if (aux_int >= 0) 
 958:..\src/command_processing.c ****             //    g_mem.max_step_pos = aux_int;
 959:..\src/command_processing.c ****             
 960:..\src/command_processing.c ****         break;
 4440              		.loc 1 960 0
 4441 0658 42E2     		b	.L229
 4442              	.L244:
 961:..\src/command_processing.c ****         
 962:..\src/command_processing.c **** //========================================================     set_current_limit
 963:..\src/command_processing.c ****         case 13:        //Current limit - int16
 964:..\src/command_processing.c ****             g_mem.current_limit = (int16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 4443              		.loc 1 964 0
 4444 065a 8E4B     		ldr	r3, .L325
 4445 065c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4446 065e 1B02     		lsls	r3, r3, #8
 4447 0660 1AB2     		sxth	r2, r3
 4448 0662 8C4B     		ldr	r3, .L325
 4449 0664 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4450 0666 1BB2     		sxth	r3, r3
 4451 0668 1343     		orrs	r3, r3, r2
 4452 066a 1AB2     		sxth	r2, r3
 4453 066c 8A4B     		ldr	r3, .L325+4
 4454 066e A3F86820 		strh	r2, [r3, #104]	@ movhi
 965:..\src/command_processing.c ****             //g_mem.current_limit = *((int16*) &g_rx.buffer[3]);
 966:..\src/command_processing.c ****         break;
 4455              		.loc 1 966 0
 4456 0672 35E2     		b	.L229
 4457              	.L245:
 967:..\src/command_processing.c ****         
 968:..\src/command_processing.c **** //========================================================     set_emg_threshold
 969:..\src/command_processing.c ****         case 14:        //Emg threshold - uint16[2]
 970:..\src/command_processing.c ****             g_mem.emg_threshold[0] = (uint16)(g_rx.buffer[3]<<8 | g_rx.buffer[4]);
 4458              		.loc 1 970 0
 4459 0674 874B     		ldr	r3, .L325
 4460 0676 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4461 0678 1B02     		lsls	r3, r3, #8
 4462 067a 1AB2     		sxth	r2, r3
 4463 067c 854B     		ldr	r3, .L325
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 117


 4464 067e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4465 0680 1BB2     		sxth	r3, r3
 4466 0682 1343     		orrs	r3, r3, r2
 4467 0684 1BB2     		sxth	r3, r3
 4468 0686 9AB2     		uxth	r2, r3
 4469 0688 834B     		ldr	r3, .L325+4
 4470 068a A3F86A20 		strh	r2, [r3, #106]	@ movhi
 971:..\src/command_processing.c ****             g_mem.emg_threshold[1] = (uint16)(g_rx.buffer[5]<<8 | g_rx.buffer[6]);
 4471              		.loc 1 971 0
 4472 068e 814B     		ldr	r3, .L325
 4473 0690 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4474 0692 1B02     		lsls	r3, r3, #8
 4475 0694 1AB2     		sxth	r2, r3
 4476 0696 7F4B     		ldr	r3, .L325
 4477 0698 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 4478 069a 1BB2     		sxth	r3, r3
 4479 069c 1343     		orrs	r3, r3, r2
 4480 069e 1BB2     		sxth	r3, r3
 4481 06a0 9AB2     		uxth	r2, r3
 4482 06a2 7D4B     		ldr	r3, .L325+4
 4483 06a4 A3F86C20 		strh	r2, [r3, #108]	@ movhi
 972:..\src/command_processing.c ****             //g_mem.emg_threshold[0] = *((uint16*) &g_rx.buffer[3]);
 973:..\src/command_processing.c ****             //g_mem.emg_threshold[1] = *((uint16*) &g_rx.buffer[5]);
 974:..\src/command_processing.c ****         break;
 4484              		.loc 1 974 0
 4485 06a8 1AE2     		b	.L229
 4486              	.L246:
 975:..\src/command_processing.c ****             
 976:..\src/command_processing.c **** //=======================================================     set_emg_calib_flag
 977:..\src/command_processing.c ****         case 15:        //Emg calibration flag - uint8
 978:..\src/command_processing.c ****             g_mem.emg_calibration_flag = *((uint8*) &g_rx.buffer[3]);
 4487              		.loc 1 978 0
 4488 06aa 7A4B     		ldr	r3, .L325
 4489 06ac DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4490 06ae 7A4B     		ldr	r3, .L325+4
 4491 06b0 83F86E20 		strb	r2, [r3, #110]
 979:..\src/command_processing.c ****         break;
 4492              		.loc 1 979 0
 4493 06b4 14E2     		b	.L229
 4494              	.L247:
 980:..\src/command_processing.c ****             
 981:..\src/command_processing.c **** //========================================================     set_emg_max_value
 982:..\src/command_processing.c ****         case 16:        //Emg max value - uint32[2]
 983:..\src/command_processing.c ****             g_mem.emg_max_value[0] = (uint32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer
 4495              		.loc 1 983 0
 4496 06b6 774B     		ldr	r3, .L325
 4497 06b8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4498 06ba 1A06     		lsls	r2, r3, #24
 4499 06bc 754B     		ldr	r3, .L325
 4500 06be 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4501 06c0 1B04     		lsls	r3, r3, #16
 4502 06c2 1A43     		orrs	r2, r2, r3
 4503 06c4 734B     		ldr	r3, .L325
 4504 06c6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4505 06c8 1B02     		lsls	r3, r3, #8
 4506 06ca 1343     		orrs	r3, r3, r2
 4507 06cc 714A     		ldr	r2, .L325
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 118


 4508 06ce 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4509 06d0 1343     		orrs	r3, r3, r2
 4510 06d2 1A46     		mov	r2, r3
 4511 06d4 704B     		ldr	r3, .L325+4
 4512 06d6 1A67     		str	r2, [r3, #112]
 984:..\src/command_processing.c ****             g_mem.emg_max_value[1] = (uint32)(g_rx.buffer[7]<<24 | g_rx.buffer[8]<<16 | g_rx.buffer
 4513              		.loc 1 984 0
 4514 06d8 6E4B     		ldr	r3, .L325
 4515 06da DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 4516 06dc 1A06     		lsls	r2, r3, #24
 4517 06de 6D4B     		ldr	r3, .L325
 4518 06e0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 4519 06e2 1B04     		lsls	r3, r3, #16
 4520 06e4 1A43     		orrs	r2, r2, r3
 4521 06e6 6B4B     		ldr	r3, .L325
 4522 06e8 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 4523 06ea 1B02     		lsls	r3, r3, #8
 4524 06ec 1343     		orrs	r3, r3, r2
 4525 06ee 694A     		ldr	r2, .L325
 4526 06f0 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 4527 06f2 1343     		orrs	r3, r3, r2
 4528 06f4 1A46     		mov	r2, r3
 4529 06f6 684B     		ldr	r3, .L325+4
 4530 06f8 5A67     		str	r2, [r3, #116]
 985:..\src/command_processing.c ****             //g_mem.emg_max_value[0] = *((uint32*) &g_rx.buffer[3]);
 986:..\src/command_processing.c ****             //g_mem.emg_max_value[1] = *((uint32*) &g_rx.buffer[7]);
 987:..\src/command_processing.c ****         break;
 4531              		.loc 1 987 0
 4532 06fa F1E1     		b	.L229
 4533              	.L248:
 988:..\src/command_processing.c ****         
 989:..\src/command_processing.c **** //============================================================     set_emg_speed
 990:..\src/command_processing.c ****         case 17:        //Emg max speed - uint8
 991:..\src/command_processing.c ****             g_mem.emg_speed = *((uint8*) &g_rx.buffer[3]);
 4534              		.loc 1 991 0
 4535 06fc 654B     		ldr	r3, .L325
 4536 06fe DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4537 0700 654B     		ldr	r3, .L325+4
 4538 0702 83F87820 		strb	r2, [r3, #120]
 992:..\src/command_processing.c ****         break;
 4539              		.loc 1 992 0
 4540 0706 EBE1     		b	.L229
 4541              	.L249:
 993:..\src/command_processing.c ****         
 994:..\src/command_processing.c **** //================================================     set_double_encoder_on_off
 995:..\src/command_processing.c ****         case 18:        //Absolute encoder flag - uint8
 996:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4542              		.loc 1 996 0
 4543 0708 624B     		ldr	r3, .L325
 4544 070a DB78     		ldrb	r3, [r3, #3]
 4545 070c 7B75     		strb	r3, [r7, #21]
 997:..\src/command_processing.c ****             if (aux_uchar) {
 4546              		.loc 1 997 0
 4547 070e 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4548 0710 002B     		cmp	r3, #0
 4549 0712 04D0     		beq	.L301
 998:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 1;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 119


 4550              		.loc 1 998 0
 4551 0714 604B     		ldr	r3, .L325+4
 4552 0716 0122     		movs	r2, #1
 4553 0718 83F87920 		strb	r2, [r3, #121]
 999:..\src/command_processing.c ****             } else {
1000:..\src/command_processing.c ****                 g_mem.double_encoder_on_off = 0;
1001:..\src/command_processing.c ****             }
1002:..\src/command_processing.c ****         break;
 4554              		.loc 1 1002 0
 4555 071c E0E1     		b	.L229
 4556              	.L301:
1000:..\src/command_processing.c ****             }
 4557              		.loc 1 1000 0
 4558 071e 5E4B     		ldr	r3, .L325+4
 4559 0720 0022     		movs	r2, #0
 4560 0722 83F87920 		strb	r2, [r3, #121]
 4561              		.loc 1 1002 0
 4562 0726 DBE1     		b	.L229
 4563              	.L250:
1003:..\src/command_processing.c ****         
1004:..\src/command_processing.c **** //===================================================     set_motor_handle_ratio
1005:..\src/command_processing.c ****         case 19:        //Motor handle ratio - int8
1006:..\src/command_processing.c ****             g_mem.motor_handle_ratio = *((int8*) &g_rx.buffer[3]);
 4564              		.loc 1 1006 0
 4565 0728 5C4B     		ldr	r3, .L325+8
 4566 072a 93F90020 		ldrsb	r2, [r3]
 4567 072e 5A4B     		ldr	r3, .L325+4
 4568 0730 83F87A20 		strb	r2, [r3, #122]
1007:..\src/command_processing.c ****         break;
 4569              		.loc 1 1007 0
 4570 0734 D4E1     		b	.L229
 4571              	.L251:
1008:..\src/command_processing.c ****         
1009:..\src/command_processing.c **** //===================================================     set_motor_supply_type
1010:..\src/command_processing.c ****         case 20:        //Motor type - uint8
1011:..\src/command_processing.c ****             g_mem.activate_pwm_rescaling = g_rx.buffer[3];
 4572              		.loc 1 1011 0
 4573 0736 574B     		ldr	r3, .L325
 4574 0738 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4575 073a 574B     		ldr	r3, .L325+4
 4576 073c 83F87B20 		strb	r2, [r3, #123]
1012:..\src/command_processing.c ****         break;
 4577              		.loc 1 1012 0
 4578 0740 CEE1     		b	.L229
 4579              	.L252:
1013:..\src/command_processing.c ****             
1014:..\src/command_processing.c **** //===================================================     set_curr_lookup_table
1015:..\src/command_processing.c ****         case 21:        //Current lookup table - float
1016:..\src/command_processing.c ****             for(i = 0; i < LOOKUP_DIM; i++){
 4580              		.loc 1 1016 0
 4581 0742 0023     		movs	r3, #0
 4582 0744 FB75     		strb	r3, [r7, #23]
 4583 0746 22E0     		b	.L303
 4584              	.L306:
1017:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4585              		.loc 1 1017 0
 4586 0748 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 120


 4587 074a 9B00     		lsls	r3, r3, #2
 4588 074c 0333     		adds	r3, r3, #3
 4589 074e 514A     		ldr	r2, .L325
 4590 0750 1344     		add	r3, r3, r2
 4591 0752 1B68     		ldr	r3, [r3]	@ float
 4592 0754 3B61     		str	r3, [r7, #16]	@ float
1018:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4593              		.loc 1 1018 0
 4594 0756 0023     		movs	r3, #0
 4595 0758 BB75     		strb	r3, [r7, #22]
 4596 075a 12E0     		b	.L304
 4597              	.L305:
1019:..\src/command_processing.c ****                     ((char*)(&g_mem.curr_lookup[i]))[4 - j -1] = ((char*)(&aux_float))[j];
 4598              		.loc 1 1019 0 discriminator 3
 4599 075c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4600 075e 1E33     		adds	r3, r3, #30
 4601 0760 9B00     		lsls	r3, r3, #2
 4602 0762 4D4A     		ldr	r2, .L325+4
 4603 0764 1344     		add	r3, r3, r2
 4604 0766 1A1D     		adds	r2, r3, #4
 4605 0768 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4606 076a C3F10303 		rsb	r3, r3, #3
 4607 076e 1344     		add	r3, r3, r2
 4608 0770 BA7D     		ldrb	r2, [r7, #22]	@ zero_extendqisi2
 4609 0772 07F11001 		add	r1, r7, #16
 4610 0776 0A44     		add	r2, r2, r1
 4611 0778 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 4612 077a 1A70     		strb	r2, [r3]
1018:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4613              		.loc 1 1018 0 discriminator 3
 4614 077c BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4615 077e 0133     		adds	r3, r3, #1
 4616 0780 BB75     		strb	r3, [r7, #22]
 4617              	.L304:
1018:..\src/command_processing.c ****                 for(j = 0; j < 4; j++) {
 4618              		.loc 1 1018 0 is_stmt 0 discriminator 1
 4619 0782 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 4620 0784 032B     		cmp	r3, #3
 4621 0786 E9D9     		bls	.L305
1016:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4622              		.loc 1 1016 0 is_stmt 1 discriminator 2
 4623 0788 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4624 078a 0133     		adds	r3, r3, #1
 4625 078c FB75     		strb	r3, [r7, #23]
 4626              	.L303:
1016:..\src/command_processing.c ****                 aux_float = *((float *) &g_rx.buffer[3 + i*4]);
 4627              		.loc 1 1016 0 is_stmt 0 discriminator 1
 4628 078e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4629 0790 052B     		cmp	r3, #5
 4630 0792 D9D9     		bls	.L306
1020:..\src/command_processing.c ****                 }
1021:..\src/command_processing.c ****                 //g_mem.curr_lookup[i] = *((float *) &g_rx.buffer[3 + i*4]);
1022:..\src/command_processing.c ****             }
1023:..\src/command_processing.c ****         break;
 4631              		.loc 1 1023 0 is_stmt 1
 4632 0794 A4E1     		b	.L229
 4633              	.L253:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 121


1024:..\src/command_processing.c ****             
1025:..\src/command_processing.c **** //============================================================     set_rest_pos
1026:..\src/command_processing.c ****         case 22:        //Rest Position - int32
1027:..\src/command_processing.c ****             g_mem.rest_pos = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 | 
 4634              		.loc 1 1027 0
 4635 0796 3F4B     		ldr	r3, .L325
 4636 0798 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4637 079a 1A06     		lsls	r2, r3, #24
 4638 079c 3D4B     		ldr	r3, .L325
 4639 079e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4640 07a0 1B04     		lsls	r3, r3, #16
 4641 07a2 1A43     		orrs	r2, r2, r3
 4642 07a4 3B4B     		ldr	r3, .L325
 4643 07a6 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4644 07a8 1B02     		lsls	r3, r3, #8
 4645 07aa 1343     		orrs	r3, r3, r2
 4646 07ac 394A     		ldr	r2, .L325
 4647 07ae 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4648 07b0 1343     		orrs	r3, r3, r2
 4649 07b2 394A     		ldr	r2, .L325+4
 4650 07b4 C2F89830 		str	r3, [r2, #152]
1028:..\src/command_processing.c ****             //g_mem.rest_pos = *((int32 *) &g_rx.buffer[3]);
1029:..\src/command_processing.c ****             g_mem.rest_pos = g_mem.rest_pos << g_mem.res[0];
 4651              		.loc 1 1029 0
 4652 07b8 374B     		ldr	r3, .L325+4
 4653 07ba D3F89830 		ldr	r3, [r3, #152]
 4654 07be 364A     		ldr	r2, .L325+4
 4655 07c0 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 4656 07c4 9340     		lsls	r3, r3, r2
 4657 07c6 344A     		ldr	r2, .L325+4
 4658 07c8 C2F89830 		str	r3, [r2, #152]
1030:..\src/command_processing.c ****         break; 
 4659              		.loc 1 1030 0
 4660 07cc 88E1     		b	.L229
 4661              	.L254:
1031:..\src/command_processing.c ****             
1032:..\src/command_processing.c **** //============================================================     set_rest_delay_pos
1033:..\src/command_processing.c ****         case 23:        //Rest Position Time Delay - int32
1034:..\src/command_processing.c ****            g_mem.rest_delay = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 |
 4662              		.loc 1 1034 0
 4663 07ce 314B     		ldr	r3, .L325
 4664 07d0 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4665 07d2 1A06     		lsls	r2, r3, #24
 4666 07d4 2F4B     		ldr	r3, .L325
 4667 07d6 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4668 07d8 1B04     		lsls	r3, r3, #16
 4669 07da 1A43     		orrs	r2, r2, r3
 4670 07dc 2D4B     		ldr	r3, .L325
 4671 07de 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4672 07e0 1B02     		lsls	r3, r3, #8
 4673 07e2 1343     		orrs	r3, r3, r2
 4674 07e4 2B4A     		ldr	r2, .L325
 4675 07e6 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4676 07e8 1343     		orrs	r3, r3, r2
 4677 07ea 2B4A     		ldr	r2, .L325+4
 4678 07ec C2F89C30 		str	r3, [r2, #156]
1035:..\src/command_processing.c ****            //g_mem.rest_delay = *((float *) &g_rx.buffer[3]);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 122


1036:..\src/command_processing.c **** 		   if (g_mem.rest_delay < 10) g_mem.rest_delay = 10;
 4679              		.loc 1 1036 0
 4680 07f0 294B     		ldr	r3, .L325+4
 4681 07f2 D3F89C30 		ldr	r3, [r3, #156]
 4682 07f6 092B     		cmp	r3, #9
 4683 07f8 00F36D81 		bgt	.L318
 4684              		.loc 1 1036 0 is_stmt 0 discriminator 1
 4685 07fc 264B     		ldr	r3, .L325+4
 4686 07fe 0A22     		movs	r2, #10
 4687 0800 C3F89C20 		str	r2, [r3, #156]
1037:..\src/command_processing.c ****         break; 
 4688              		.loc 1 1037 0 is_stmt 1 discriminator 1
 4689 0804 67E1     		b	.L318
 4690              	.L255:
1038:..\src/command_processing.c ****             
1039:..\src/command_processing.c **** //============================================================     set_rest_vel
1040:..\src/command_processing.c ****         case 24:        //Rest Position Velocity - int32
1041:..\src/command_processing.c ****             g_mem.rest_vel = (int32)(g_rx.buffer[3]<<24 | g_rx.buffer[4]<<16 | g_rx.buffer[5]<<8 | 
 4691              		.loc 1 1041 0
 4692 0806 234B     		ldr	r3, .L325
 4693 0808 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 4694 080a 1A06     		lsls	r2, r3, #24
 4695 080c 214B     		ldr	r3, .L325
 4696 080e 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 4697 0810 1B04     		lsls	r3, r3, #16
 4698 0812 1A43     		orrs	r2, r2, r3
 4699 0814 1F4B     		ldr	r3, .L325
 4700 0816 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 4701 0818 1B02     		lsls	r3, r3, #8
 4702 081a 1343     		orrs	r3, r3, r2
 4703 081c 1D4A     		ldr	r2, .L325
 4704 081e 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 4705 0820 1343     		orrs	r3, r3, r2
 4706 0822 1D4A     		ldr	r2, .L325+4
 4707 0824 C2F8A030 		str	r3, [r2, #160]
1042:..\src/command_processing.c **** 			//g_mem.rest_vel = *((float *) &g_rx.buffer[3]);
1043:..\src/command_processing.c ****         break;  
 4708              		.loc 1 1043 0
 4709 0828 5AE1     		b	.L229
 4710              	.L256:
1044:..\src/command_processing.c ****             
1045:..\src/command_processing.c ****             
1046:..\src/command_processing.c **** //================================================     set_rest_position_flag
1047:..\src/command_processing.c ****         case 25:        //Rest position flag - uint8
1048:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4711              		.loc 1 1048 0
 4712 082a 1A4B     		ldr	r3, .L325
 4713 082c DB78     		ldrb	r3, [r3, #3]
 4714 082e 7B75     		strb	r3, [r7, #21]
1049:..\src/command_processing.c ****             if (aux_uchar) {
 4715              		.loc 1 1049 0
 4716 0830 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4717 0832 002B     		cmp	r3, #0
 4718 0834 04D0     		beq	.L308
1050:..\src/command_processing.c ****                 g_mem.rest_position_flag = TRUE;
 4719              		.loc 1 1050 0
 4720 0836 184B     		ldr	r3, .L325+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 123


 4721 0838 0122     		movs	r2, #1
 4722 083a 83F8A420 		strb	r2, [r3, #164]
1051:..\src/command_processing.c ****             } else {
1052:..\src/command_processing.c ****                 g_mem.rest_position_flag = FALSE;
1053:..\src/command_processing.c ****             }
1054:..\src/command_processing.c ****         break; 
 4723              		.loc 1 1054 0
 4724 083e 4FE1     		b	.L229
 4725              	.L308:
1052:..\src/command_processing.c ****             }
 4726              		.loc 1 1052 0
 4727 0840 154B     		ldr	r3, .L325+4
 4728 0842 0022     		movs	r2, #0
 4729 0844 83F8A420 		strb	r2, [r3, #164]
 4730              		.loc 1 1054 0
 4731 0848 4AE1     		b	.L229
 4732              	.L257:
1055:..\src/command_processing.c ****             
1056:..\src/command_processing.c **** //===================================================     set_switch_emg
1057:..\src/command_processing.c ****         case 26:        //EMG inversion - uint8
1058:..\src/command_processing.c ****             g_mem.switch_emg = g_rx.buffer[3];
 4733              		.loc 1 1058 0
 4734 084a 124B     		ldr	r3, .L325
 4735 084c DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4736 084e 124B     		ldr	r3, .L325+4
 4737 0850 83F8A520 		strb	r2, [r3, #165]
1059:..\src/command_processing.c ****         break; 
 4738              		.loc 1 1059 0
 4739 0854 44E1     		b	.L229
 4740              	.L258:
1060:..\src/command_processing.c **** //================================================     set_right_left_flag
1061:..\src/command_processing.c ****         case 27:        //Right/Left hand flag - uint8
1062:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4741              		.loc 1 1062 0
 4742 0856 0F4B     		ldr	r3, .L325
 4743 0858 DB78     		ldrb	r3, [r3, #3]
 4744 085a 7B75     		strb	r3, [r7, #21]
1063:..\src/command_processing.c ****             if (aux_uchar) {    // 1
 4745              		.loc 1 1063 0
 4746 085c 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4747 085e 002B     		cmp	r3, #0
 4748 0860 04D0     		beq	.L310
1064:..\src/command_processing.c ****                 g_mem.right_left = LEFT_HAND;
 4749              		.loc 1 1064 0
 4750 0862 0D4B     		ldr	r3, .L325+4
 4751 0864 0122     		movs	r2, #1
 4752 0866 83F8A620 		strb	r2, [r3, #166]
 4753 086a 03E0     		b	.L311
 4754              	.L310:
1065:..\src/command_processing.c ****             } else {            // 0
1066:..\src/command_processing.c ****                 g_mem.right_left = RIGHT_HAND;
 4755              		.loc 1 1066 0
 4756 086c 0A4B     		ldr	r3, .L325+4
 4757 086e 0022     		movs	r2, #0
 4758 0870 83F8A620 		strb	r2, [r3, #166]
 4759              	.L311:
1067:..\src/command_processing.c ****             }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 124


1068:..\src/command_processing.c **** 			reset_last_value_flag = 1;
 4760              		.loc 1 1068 0
 4761 0874 0A4B     		ldr	r3, .L325+12
 4762 0876 0122     		movs	r2, #1
 4763 0878 1A70     		strb	r2, [r3]
1069:..\src/command_processing.c ****         break; 
 4764              		.loc 1 1069 0
 4765 087a 31E1     		b	.L229
 4766              	.L259:
1070:..\src/command_processing.c ****             
1071:..\src/command_processing.c **** //===================================================     set_read_imu_flag
1072:..\src/command_processing.c ****         case 28:        //Read IMU flag - uint8
1073:..\src/command_processing.c ****             g_mem.read_imu_flag = g_rx.buffer[3];
 4767              		.loc 1 1073 0
 4768 087c 054B     		ldr	r3, .L325
 4769 087e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4770 0880 054B     		ldr	r3, .L325+4
 4771 0882 83F8A720 		strb	r2, [r3, #167]
1074:..\src/command_processing.c ****         break; 
 4772              		.loc 1 1074 0
 4773 0886 2BE1     		b	.L229
 4774              	.L260:
1075:..\src/command_processing.c ****             
1076:..\src/command_processing.c **** //===================================================     set_read_exp_port
1077:..\src/command_processing.c ****         case 29:        //Read Expansion Port - uint8
1078:..\src/command_processing.c ****             g_mem.read_exp_port_flag = g_rx.buffer[3];
 4775              		.loc 1 1078 0
 4776 0888 024B     		ldr	r3, .L325
 4777 088a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 4778 088c 024B     		ldr	r3, .L325+4
 4779 088e 83F8A820 		strb	r2, [r3, #168]
1079:..\src/command_processing.c ****         break; 
 4780              		.loc 1 1079 0
 4781 0892 25E1     		b	.L229
 4782              	.L326:
 4783              		.align	2
 4784              	.L325:
 4785 0894 00000000 		.word	g_rx
 4786 0898 00000000 		.word	g_mem
 4787 089c 03000000 		.word	g_rx+3
 4788 08a0 00000000 		.word	reset_last_value_flag
 4789              	.L261:
1080:..\src/command_processing.c ****             
1081:..\src/command_processing.c **** //===================================================     reset_counters
1082:..\src/command_processing.c ****         case 30:        //Reset counters - uint8
1083:..\src/command_processing.c ****             aux_uchar = *((uint8*) &g_rx.buffer[3]);
 4790              		.loc 1 1083 0
 4791 08a4 904B     		ldr	r3, .L327
 4792 08a6 DB78     		ldrb	r3, [r3, #3]
 4793 08a8 7B75     		strb	r3, [r7, #21]
1084:..\src/command_processing.c ****             if (aux_uchar) {
 4794              		.loc 1 1084 0
 4795 08aa 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4796 08ac 002B     		cmp	r3, #0
 4797 08ae 01D0     		beq	.L312
1085:..\src/command_processing.c ****                 reset_counters();
 4798              		.loc 1 1085 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 125


 4799 08b0 FFF7FEFF 		bl	reset_counters
 4800              	.L312:
1086:..\src/command_processing.c ****             }
1087:..\src/command_processing.c ****             
1088:..\src/command_processing.c ****             if (c_mem.read_exp_port_flag == EXP_SD_RTC) {
 4801              		.loc 1 1088 0
 4802 08b4 8D4B     		ldr	r3, .L327+4
 4803 08b6 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 4804 08ba 012B     		cmp	r3, #1
 4805 08bc 40F00D81 		bne	.L319
1089:..\src/command_processing.c ****                 // Set date of maintenance from RTC
1090:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_DATE_RD);
 4806              		.loc 1 1090 0
 4807 08c0 8720     		movs	r0, #135
 4808 08c2 FFF7FEFF 		bl	DS1302_read
 4809 08c6 0346     		mov	r3, r0
 4810 08c8 7B75     		strb	r3, [r7, #21]
1091:..\src/command_processing.c ****                 g_mem.maint_day = (aux_uchar/16) * 10 + aux_uchar%16;
 4811              		.loc 1 1091 0
 4812 08ca 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4813 08cc 1B09     		lsrs	r3, r3, #4
 4814 08ce DBB2     		uxtb	r3, r3
 4815 08d0 1A46     		mov	r2, r3
 4816 08d2 9200     		lsls	r2, r2, #2
 4817 08d4 1344     		add	r3, r3, r2
 4818 08d6 5B00     		lsls	r3, r3, #1
 4819 08d8 DAB2     		uxtb	r2, r3
 4820 08da 7B7D     		ldrb	r3, [r7, #21]
 4821 08dc 03F00F03 		and	r3, r3, #15
 4822 08e0 DBB2     		uxtb	r3, r3
 4823 08e2 1344     		add	r3, r3, r2
 4824 08e4 DAB2     		uxtb	r2, r3
 4825 08e6 824B     		ldr	r3, .L327+8
 4826 08e8 83F89520 		strb	r2, [r3, #149]
1092:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_MONTH_RD);
 4827              		.loc 1 1092 0
 4828 08ec 8920     		movs	r0, #137
 4829 08ee FFF7FEFF 		bl	DS1302_read
 4830 08f2 0346     		mov	r3, r0
 4831 08f4 7B75     		strb	r3, [r7, #21]
1093:..\src/command_processing.c ****                 g_mem.maint_month = (aux_uchar/16) * 10 + aux_uchar%16;
 4832              		.loc 1 1093 0
 4833 08f6 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4834 08f8 1B09     		lsrs	r3, r3, #4
 4835 08fa DBB2     		uxtb	r3, r3
 4836 08fc 1A46     		mov	r2, r3
 4837 08fe 9200     		lsls	r2, r2, #2
 4838 0900 1344     		add	r3, r3, r2
 4839 0902 5B00     		lsls	r3, r3, #1
 4840 0904 DAB2     		uxtb	r2, r3
 4841 0906 7B7D     		ldrb	r3, [r7, #21]
 4842 0908 03F00F03 		and	r3, r3, #15
 4843 090c DBB2     		uxtb	r3, r3
 4844 090e 1344     		add	r3, r3, r2
 4845 0910 DAB2     		uxtb	r2, r3
 4846 0912 774B     		ldr	r3, .L327+8
 4847 0914 83F89620 		strb	r2, [r3, #150]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 126


1094:..\src/command_processing.c ****                 aux_uchar = DS1302_read(DS1302_YEAR_RD);
 4848              		.loc 1 1094 0
 4849 0918 8D20     		movs	r0, #141
 4850 091a FFF7FEFF 		bl	DS1302_read
 4851 091e 0346     		mov	r3, r0
 4852 0920 7B75     		strb	r3, [r7, #21]
1095:..\src/command_processing.c ****                 g_mem.maint_year = (aux_uchar/16) * 10 + aux_uchar%16;  
 4853              		.loc 1 1095 0
 4854 0922 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 4855 0924 1B09     		lsrs	r3, r3, #4
 4856 0926 DBB2     		uxtb	r3, r3
 4857 0928 1A46     		mov	r2, r3
 4858 092a 9200     		lsls	r2, r2, #2
 4859 092c 1344     		add	r3, r3, r2
 4860 092e 5B00     		lsls	r3, r3, #1
 4861 0930 DAB2     		uxtb	r2, r3
 4862 0932 7B7D     		ldrb	r3, [r7, #21]
 4863 0934 03F00F03 		and	r3, r3, #15
 4864 0938 DBB2     		uxtb	r3, r3
 4865 093a 1344     		add	r3, r3, r2
 4866 093c DAB2     		uxtb	r2, r3
 4867 093e 6C4B     		ldr	r3, .L327+8
 4868 0940 83F89720 		strb	r2, [r3, #151]
1096:..\src/command_processing.c ****             }
1097:..\src/command_processing.c ****         break;             
 4869              		.loc 1 1097 0
 4870 0944 C9E0     		b	.L319
 4871              	.L262:
1098:..\src/command_processing.c ****             
1099:..\src/command_processing.c **** //==================================================    set_current_time
1100:..\src/command_processing.c ****         case 31:         //Current Time - uint8[3]
1101:..\src/command_processing.c ****             for (i=0; i<6; i++){
 4872              		.loc 1 1101 0
 4873 0946 0023     		movs	r3, #0
 4874 0948 FB75     		strb	r3, [r7, #23]
 4875 094a 0CE0     		b	.L314
 4876              	.L315:
1102:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4877              		.loc 1 1102 0 discriminator 3
 4878 094c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4879 094e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 4880 0950 0332     		adds	r2, r2, #3
 4881 0952 6549     		ldr	r1, .L327
 4882 0954 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 4883 0956 664A     		ldr	r2, .L327+8
 4884 0958 1344     		add	r3, r3, r2
 4885 095a 0A46     		mov	r2, r1
 4886 095c 83F81021 		strb	r2, [r3, #272]
1101:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4887              		.loc 1 1101 0 discriminator 3
 4888 0960 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 4889 0962 0133     		adds	r3, r3, #1
 4890 0964 FB75     		strb	r3, [r7, #23]
 4891              	.L314:
1101:..\src/command_processing.c ****                 g_mem.curr_time[i] = g_rx.buffer[3 + i];
 4892              		.loc 1 1101 0 is_stmt 0 discriminator 1
 4893 0966 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 127


 4894 0968 052B     		cmp	r3, #5
 4895 096a EFD9     		bls	.L315
1103:..\src/command_processing.c ****             }
1104:..\src/command_processing.c ****             
1105:..\src/command_processing.c ****             if (c_mem.read_exp_port_flag == EXP_SD_RTC) {
 4896              		.loc 1 1105 0 is_stmt 1
 4897 096c 5F4B     		ldr	r3, .L327+4
 4898 096e 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 4899 0972 012B     		cmp	r3, #1
 4900 0974 40F0B380 		bne	.L320
1106:..\src/command_processing.c ****                 DS1302_write(DS1302_DATE_WR, (((g_mem.curr_time[0] / 10)*16) + (g_mem.curr_time[0] 
 4901              		.loc 1 1106 0
 4902 0978 5D4B     		ldr	r3, .L327+8
 4903 097a 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 4904 097e 5D4A     		ldr	r2, .L327+12
 4905 0980 A2FB0323 		umull	r2, r3, r2, r3
 4906 0984 DB08     		lsrs	r3, r3, #3
 4907 0986 DBB2     		uxtb	r3, r3
 4908 0988 1B01     		lsls	r3, r3, #4
 4909 098a D8B2     		uxtb	r0, r3
 4910 098c 584B     		ldr	r3, .L327+8
 4911 098e 93F81021 		ldrb	r2, [r3, #272]	@ zero_extendqisi2
 4912 0992 584B     		ldr	r3, .L327+12
 4913 0994 A3FB0213 		umull	r1, r3, r3, r2
 4914 0998 D908     		lsrs	r1, r3, #3
 4915 099a 0B46     		mov	r3, r1
 4916 099c 9B00     		lsls	r3, r3, #2
 4917 099e 0B44     		add	r3, r3, r1
 4918 09a0 5B00     		lsls	r3, r3, #1
 4919 09a2 D31A     		subs	r3, r2, r3
 4920 09a4 DBB2     		uxtb	r3, r3
 4921 09a6 0344     		add	r3, r3, r0
 4922 09a8 DBB2     		uxtb	r3, r3
 4923 09aa 1946     		mov	r1, r3
 4924 09ac 8620     		movs	r0, #134
 4925 09ae FFF7FEFF 		bl	DS1302_write
1107:..\src/command_processing.c ****                 DS1302_write(DS1302_MONTH_WR, (((g_mem.curr_time[1] / 10)*16) + (g_mem.curr_time[1]
 4926              		.loc 1 1107 0
 4927 09b2 4F4B     		ldr	r3, .L327+8
 4928 09b4 93F81131 		ldrb	r3, [r3, #273]	@ zero_extendqisi2
 4929 09b8 4E4A     		ldr	r2, .L327+12
 4930 09ba A2FB0323 		umull	r2, r3, r2, r3
 4931 09be DB08     		lsrs	r3, r3, #3
 4932 09c0 DBB2     		uxtb	r3, r3
 4933 09c2 1B01     		lsls	r3, r3, #4
 4934 09c4 D8B2     		uxtb	r0, r3
 4935 09c6 4A4B     		ldr	r3, .L327+8
 4936 09c8 93F81121 		ldrb	r2, [r3, #273]	@ zero_extendqisi2
 4937 09cc 494B     		ldr	r3, .L327+12
 4938 09ce A3FB0213 		umull	r1, r3, r3, r2
 4939 09d2 D908     		lsrs	r1, r3, #3
 4940 09d4 0B46     		mov	r3, r1
 4941 09d6 9B00     		lsls	r3, r3, #2
 4942 09d8 0B44     		add	r3, r3, r1
 4943 09da 5B00     		lsls	r3, r3, #1
 4944 09dc D31A     		subs	r3, r2, r3
 4945 09de DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 128


 4946 09e0 0344     		add	r3, r3, r0
 4947 09e2 DBB2     		uxtb	r3, r3
 4948 09e4 1946     		mov	r1, r3
 4949 09e6 8820     		movs	r0, #136
 4950 09e8 FFF7FEFF 		bl	DS1302_write
1108:..\src/command_processing.c ****                 DS1302_write(DS1302_YEAR_WR, (((g_mem.curr_time[2] / 10)*16) + (g_mem.curr_time[2] 
 4951              		.loc 1 1108 0
 4952 09ec 404B     		ldr	r3, .L327+8
 4953 09ee 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 4954 09f2 404A     		ldr	r2, .L327+12
 4955 09f4 A2FB0323 		umull	r2, r3, r2, r3
 4956 09f8 DB08     		lsrs	r3, r3, #3
 4957 09fa DBB2     		uxtb	r3, r3
 4958 09fc 1B01     		lsls	r3, r3, #4
 4959 09fe D8B2     		uxtb	r0, r3
 4960 0a00 3B4B     		ldr	r3, .L327+8
 4961 0a02 93F81221 		ldrb	r2, [r3, #274]	@ zero_extendqisi2
 4962 0a06 3B4B     		ldr	r3, .L327+12
 4963 0a08 A3FB0213 		umull	r1, r3, r3, r2
 4964 0a0c D908     		lsrs	r1, r3, #3
 4965 0a0e 0B46     		mov	r3, r1
 4966 0a10 9B00     		lsls	r3, r3, #2
 4967 0a12 0B44     		add	r3, r3, r1
 4968 0a14 5B00     		lsls	r3, r3, #1
 4969 0a16 D31A     		subs	r3, r2, r3
 4970 0a18 DBB2     		uxtb	r3, r3
 4971 0a1a 0344     		add	r3, r3, r0
 4972 0a1c DBB2     		uxtb	r3, r3
 4973 0a1e 1946     		mov	r1, r3
 4974 0a20 8C20     		movs	r0, #140
 4975 0a22 FFF7FEFF 		bl	DS1302_write
1109:..\src/command_processing.c ****                 DS1302_write(DS1302_HOUR_WR, (((g_mem.curr_time[3] / 10)*16) + (g_mem.curr_time[3] 
 4976              		.loc 1 1109 0
 4977 0a26 324B     		ldr	r3, .L327+8
 4978 0a28 93F81331 		ldrb	r3, [r3, #275]	@ zero_extendqisi2
 4979 0a2c 314A     		ldr	r2, .L327+12
 4980 0a2e A2FB0323 		umull	r2, r3, r2, r3
 4981 0a32 DB08     		lsrs	r3, r3, #3
 4982 0a34 DBB2     		uxtb	r3, r3
 4983 0a36 1B01     		lsls	r3, r3, #4
 4984 0a38 D8B2     		uxtb	r0, r3
 4985 0a3a 2D4B     		ldr	r3, .L327+8
 4986 0a3c 93F81321 		ldrb	r2, [r3, #275]	@ zero_extendqisi2
 4987 0a40 2C4B     		ldr	r3, .L327+12
 4988 0a42 A3FB0213 		umull	r1, r3, r3, r2
 4989 0a46 D908     		lsrs	r1, r3, #3
 4990 0a48 0B46     		mov	r3, r1
 4991 0a4a 9B00     		lsls	r3, r3, #2
 4992 0a4c 0B44     		add	r3, r3, r1
 4993 0a4e 5B00     		lsls	r3, r3, #1
 4994 0a50 D31A     		subs	r3, r2, r3
 4995 0a52 DBB2     		uxtb	r3, r3
 4996 0a54 0344     		add	r3, r3, r0
 4997 0a56 DBB2     		uxtb	r3, r3
 4998 0a58 1946     		mov	r1, r3
 4999 0a5a 8420     		movs	r0, #132
 5000 0a5c FFF7FEFF 		bl	DS1302_write
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 129


1110:..\src/command_processing.c ****                 DS1302_write(DS1302_MINUTES_WR, (((g_mem.curr_time[4] / 10)*16) + (g_mem.curr_time[
 5001              		.loc 1 1110 0
 5002 0a60 234B     		ldr	r3, .L327+8
 5003 0a62 93F81431 		ldrb	r3, [r3, #276]	@ zero_extendqisi2
 5004 0a66 234A     		ldr	r2, .L327+12
 5005 0a68 A2FB0323 		umull	r2, r3, r2, r3
 5006 0a6c DB08     		lsrs	r3, r3, #3
 5007 0a6e DBB2     		uxtb	r3, r3
 5008 0a70 1B01     		lsls	r3, r3, #4
 5009 0a72 D8B2     		uxtb	r0, r3
 5010 0a74 1E4B     		ldr	r3, .L327+8
 5011 0a76 93F81421 		ldrb	r2, [r3, #276]	@ zero_extendqisi2
 5012 0a7a 1E4B     		ldr	r3, .L327+12
 5013 0a7c A3FB0213 		umull	r1, r3, r3, r2
 5014 0a80 D908     		lsrs	r1, r3, #3
 5015 0a82 0B46     		mov	r3, r1
 5016 0a84 9B00     		lsls	r3, r3, #2
 5017 0a86 0B44     		add	r3, r3, r1
 5018 0a88 5B00     		lsls	r3, r3, #1
 5019 0a8a D31A     		subs	r3, r2, r3
 5020 0a8c DBB2     		uxtb	r3, r3
 5021 0a8e 0344     		add	r3, r3, r0
 5022 0a90 DBB2     		uxtb	r3, r3
 5023 0a92 1946     		mov	r1, r3
 5024 0a94 8220     		movs	r0, #130
 5025 0a96 FFF7FEFF 		bl	DS1302_write
1111:..\src/command_processing.c ****                 DS1302_write(DS1302_SECONDS_WR, (((g_mem.curr_time[5] / 10)*16) + (g_mem.curr_time[
 5026              		.loc 1 1111 0
 5027 0a9a 154B     		ldr	r3, .L327+8
 5028 0a9c 93F81531 		ldrb	r3, [r3, #277]	@ zero_extendqisi2
 5029 0aa0 144A     		ldr	r2, .L327+12
 5030 0aa2 A2FB0323 		umull	r2, r3, r2, r3
 5031 0aa6 DB08     		lsrs	r3, r3, #3
 5032 0aa8 DBB2     		uxtb	r3, r3
 5033 0aaa 1B01     		lsls	r3, r3, #4
 5034 0aac D8B2     		uxtb	r0, r3
 5035 0aae 104B     		ldr	r3, .L327+8
 5036 0ab0 93F81521 		ldrb	r2, [r3, #277]	@ zero_extendqisi2
 5037 0ab4 0F4B     		ldr	r3, .L327+12
 5038 0ab6 A3FB0213 		umull	r1, r3, r3, r2
 5039 0aba D908     		lsrs	r1, r3, #3
 5040 0abc 0B46     		mov	r3, r1
 5041 0abe 9B00     		lsls	r3, r3, #2
 5042 0ac0 0B44     		add	r3, r3, r1
 5043 0ac2 5B00     		lsls	r3, r3, #1
 5044 0ac4 D31A     		subs	r3, r2, r3
 5045 0ac6 DBB2     		uxtb	r3, r3
 5046 0ac8 0344     		add	r3, r3, r0
 5047 0aca DBB2     		uxtb	r3, r3
 5048 0acc 1946     		mov	r1, r3
 5049 0ace 8020     		movs	r0, #128
 5050 0ad0 FFF7FEFF 		bl	DS1302_write
1112:..\src/command_processing.c ****             }
1113:..\src/command_processing.c ****         break;  
 5051              		.loc 1 1113 0
 5052 0ad4 03E0     		b	.L320
 5053              	.L318:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 130


1037:..\src/command_processing.c ****             
 5054              		.loc 1 1037 0
 5055 0ad6 00BF     		nop
 5056 0ad8 02E0     		b	.L317
 5057              	.L319:
1097:..\src/command_processing.c ****             
 5058              		.loc 1 1097 0
 5059 0ada 00BF     		nop
 5060 0adc 00E0     		b	.L317
 5061              	.L320:
 5062              		.loc 1 1113 0
 5063 0ade 00BF     		nop
 5064              	.L229:
 5065              	.L317:
1114:..\src/command_processing.c ****     }                
1115:..\src/command_processing.c **** }
 5066              		.loc 1 1115 0
 5067 0ae0 00BF     		nop
 5068 0ae2 1837     		adds	r7, r7, #24
 5069              		.cfi_def_cfa_offset 8
 5070 0ae4 BD46     		mov	sp, r7
 5071              		.cfi_def_cfa_register 13
 5072              		@ sp needed
 5073 0ae6 80BD     		pop	{r7, pc}
 5074              	.L328:
 5075              		.align	2
 5076              	.L327:
 5077 0ae8 00000000 		.word	g_rx
 5078 0aec 00000000 		.word	c_mem
 5079 0af0 00000000 		.word	g_mem
 5080 0af4 CDCCCCCC 		.word	-858993459
 5081              		.cfi_endproc
 5082              	.LFE68:
 5083              		.size	manage_param_list, .-manage_param_list
 5084              		.section	.rodata
 5085 06c7 00       		.align	2
 5086              	.LC68:
 5087 06c8 506F7274 		.ascii	"Port %u ID:\000"
 5087      20257520 
 5087      49443A00 
 5088              		.align	2
 5089              	.LC69:
 5090 06d4 2575202D 		.ascii	"%u - Device ID:\000"
 5090      20446576 
 5090      69636520 
 5090      49443A00 
 5091              		.align	2
 5092              	.LC70:
 5093 06e4 2575202D 		.ascii	"%u - IMU %d configuration:\000"
 5093      20494D55 
 5093      20256420 
 5093      636F6E66 
 5093      69677572 
 5094 06ff 00       		.align	2
 5095              	.LC71:
 5096 0700 2575202D 		.ascii	"%u - SPI read delay:\000"
 5096      20535049 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 131


 5096      20726561 
 5096      64206465 
 5096      6C61793A 
 5097 0715 000000   		.align	2
 5098              	.LC72:
 5099 0718 204E6F6E 		.ascii	" None\000"
 5099      6500
 5100 071e 0000     		.align	2
 5101              	.LC73:
 5102 0720 204C6F77 		.ascii	" Low\000"
 5102      00
 5103 0725 000000   		.align	2
 5104              	.LC74:
 5105 0728 20486967 		.ascii	" High\000"
 5105      6800
 5106 072e 0000     		.align	2
 5107              	.LC66:
 5108 0730 4E756D62 		.ascii	"Number of connected IMUs:\000"
 5108      6572206F 
 5108      6620636F 
 5108      6E6E6563 
 5108      74656420 
 5109 074a 0000     		.align	2
 5110              	.LC67:
 5111 074c 4D616720 		.ascii	"Mag cal parameters:\000"
 5111      63616C20 
 5111      70617261 
 5111      6D657465 
 5111      72733A00 
 5112              		.section	.text.get_IMU_param_list,"ax",%progbits
 5113              		.align	2
 5114              		.global	get_IMU_param_list
 5115              		.thumb
 5116              		.thumb_func
 5117              		.type	get_IMU_param_list, %function
 5118              	get_IMU_param_list:
 5119              	.LFB69:
1116:..\src/command_processing.c **** 
1117:..\src/command_processing.c **** 
1118:..\src/command_processing.c **** //==============================================================================
1119:..\src/command_processing.c **** //                                                        GET IMU PARAMETER LIST
1120:..\src/command_processing.c **** //==============================================================================
1121:..\src/command_processing.c **** 
1122:..\src/command_processing.c **** void get_IMU_param_list(uint16 index)
1123:..\src/command_processing.c **** {
 5120              		.loc 1 1123 0
 5121              		.cfi_startproc
 5122              		@ args = 0, pretend = 0, frame = 1560
 5123              		@ frame_needed = 1, uses_anonymous_args = 0
 5124 0000 B0B5     		push	{r4, r5, r7, lr}
 5125              		.cfi_def_cfa_offset 16
 5126              		.cfi_offset 4, -16
 5127              		.cfi_offset 5, -12
 5128              		.cfi_offset 7, -8
 5129              		.cfi_offset 14, -4
 5130 0002 ADF5C36D 		sub	sp, sp, #1560
 5131              		.cfi_def_cfa_offset 1576
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 132


 5132 0006 00AF     		add	r7, sp, #0
 5133              		.cfi_def_cfa_register 7
 5134 0008 0246     		mov	r2, r0
 5135 000a BB1D     		adds	r3, r7, #6
 5136 000c 1A80     		strh	r2, [r3]	@ movhi
1124:..\src/command_processing.c ****     //Package to be sent variables
1125:..\src/command_processing.c ****     uint8 packet_data[  PARAM_BYTE_SLOT   +     // Number of connected IMUs
 5137              		.loc 1 1125 0
 5138 000e 07F58C73 		add	r3, r7, #280
 5139 0012 0022     		movs	r2, #0
 5140 0014 1A60     		str	r2, [r3]
 5141 0016 0433     		adds	r3, r3, #4
 5142 0018 40F2DF42 		movw	r2, #1247
 5143 001c 0021     		movs	r1, #0
 5144 001e 1846     		mov	r0, r3
 5145 0020 FFF7FEFF 		bl	memset
1126:..\src/command_processing.c ****                         6*PARAM_BYTE_SLOT +     // IMUs ID  (1 port instead of 6)
1127:..\src/command_processing.c ****                         9*PARAM_BYTE_SLOT +     // Mag cal parameters (1 row instead of 9)
1128:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // 1 - Device ID
1129:..\src/command_processing.c ****                         PARAM_BYTE_SLOT*N_IMU_MAX + // IMU configurations
1130:..\src/command_processing.c ****                         PARAM_BYTE_SLOT   +     // SPI read delay
1131:..\src/command_processing.c ****                         PARAM_MENU_SLOT   + PARAM_BYTE_SLOT + 1 ] = "";
1132:..\src/command_processing.c ****     uint16 num_imus_id_params = 6;      //(1 port instead of 6)
 5146              		.loc 1 1132 0
 5147 0024 0623     		movs	r3, #6
 5148 0026 A7F80A36 		strh	r3, [r7, #1546]	@ movhi
1133:..\src/command_processing.c ****     uint16 num_mag_cal_params = 0;
 5149              		.loc 1 1133 0
 5150 002a 0023     		movs	r3, #0
 5151 002c A7F81636 		strh	r3, [r7, #1558]	@ movhi
1134:..\src/command_processing.c ****     uint16 first_imu_parameter = 2;
 5152              		.loc 1 1134 0
 5153 0030 0223     		movs	r3, #2
 5154 0032 A7F80836 		strh	r3, [r7, #1544]	@ movhi
1135:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 5155              		.loc 1 1135 0
 5156 0036 B7F80A36 		ldrh	r3, [r7, #1546]
 5157 003a 5A1C     		adds	r2, r3, #1
1136:..\src/command_processing.c ****                            num_imus_id_params*PARAM_BYTE_SLOT +
 5158              		.loc 1 1136 0
 5159 003c B7F81636 		ldrh	r3, [r7, #1558]
 5160 0040 1344     		add	r3, r3, r2
1137:..\src/command_processing.c ****                            num_mag_cal_params*PARAM_BYTE_SLOT +
 5161              		.loc 1 1137 0
 5162 0042 0133     		adds	r3, r3, #1
1135:..\src/command_processing.c ****     uint16 packet_length = PARAM_BYTE_SLOT +
 5163              		.loc 1 1135 0
 5164 0044 9AB2     		uxth	r2, r3
 5165 0046 D24B     		ldr	r3, .L375
 5166 0048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5167 004a 9BB2     		uxth	r3, r3
 5168 004c 1344     		add	r3, r3, r2
 5169 004e 9BB2     		uxth	r3, r3
 5170 0050 1A46     		mov	r2, r3	@ movhi
 5171 0052 9200     		lsls	r2, r2, #2
 5172 0054 1344     		add	r3, r3, r2
 5173 0056 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 133


 5174 0058 9100     		lsls	r1, r2, #2
 5175 005a 1A46     		mov	r2, r3	@ movhi
 5176 005c 0B46     		mov	r3, r1	@ movhi
 5177 005e 1344     		add	r3, r3, r2
 5178 0060 5B00     		lsls	r3, r3, #1
 5179 0062 9BB2     		uxth	r3, r3
 5180 0064 FB33     		adds	r3, r3, #251
 5181 0066 A7F80636 		strh	r3, [r7, #1542]	@ movhi
1138:..\src/command_processing.c ****                            PARAM_BYTE_SLOT   + 
1139:..\src/command_processing.c ****                            (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1140:..\src/command_processing.c ****                            PARAM_BYTE_SLOT + PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1141:..\src/command_processing.c **** 
1142:..\src/command_processing.c ****     //Auxiliary variables
1143:..\src/command_processing.c ****     uint16 CYDATA i, j, k, h;
1144:..\src/command_processing.c ****     uint16 start_byte = 0;
 5182              		.loc 1 1144 0
 5183 006a 0023     		movs	r3, #0
 5184 006c A7F80436 		strh	r3, [r7, #1540]	@ movhi
1145:..\src/command_processing.c **** 
1146:..\src/command_processing.c ****     //Parameters menu string definitions
1147:..\src/command_processing.c ****     char n_imu_str[26]          = "Number of connected IMUs:";
 5185              		.loc 1 1147 0
 5186 0070 07F1FC03 		add	r3, r7, #252
 5187 0074 C74A     		ldr	r2, .L375+4
 5188 0076 1C46     		mov	r4, r3
 5189 0078 1546     		mov	r5, r2
 5190 007a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5191 007c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5192 007e 95E80700 		ldmia	r5, {r0, r1, r2}
 5193 0082 03C4     		stmia	r4!, {r0, r1}
 5194 0084 2280     		strh	r2, [r4]	@ movhi
1148:..\src/command_processing.c ****     char ids_str[11]            = "";
 5195              		.loc 1 1148 0
 5196 0086 07F1F003 		add	r3, r7, #240
 5197 008a 0022     		movs	r2, #0
 5198 008c 1A60     		str	r2, [r3]
 5199 008e 0433     		adds	r3, r3, #4
 5200 0090 0022     		movs	r2, #0
 5201 0092 1A60     		str	r2, [r3]
 5202 0094 C3F80320 		str	r2, [r3, #3]	@ unaligned
1149:..\src/command_processing.c ****     char mag_param_str[20]      = "Mag cal parameters:";
 5203              		.loc 1 1149 0
 5204 0098 07F1DC03 		add	r3, r7, #220
 5205 009c BE4A     		ldr	r2, .L375+8
 5206 009e 1C46     		mov	r4, r3
 5207 00a0 1546     		mov	r5, r2
 5208 00a2 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 5209 00a4 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 5210 00a6 2B68     		ldr	r3, [r5]
 5211 00a8 2360     		str	r3, [r4]
1150:..\src/command_processing.c ****     char id_str[16]             = "";
 5212              		.loc 1 1150 0
 5213 00aa 07F1CC03 		add	r3, r7, #204
 5214 00ae 0022     		movs	r2, #0
 5215 00b0 1A60     		str	r2, [r3]
 5216 00b2 0433     		adds	r3, r3, #4
 5217 00b4 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 134


 5218 00b6 1A60     		str	r2, [r3]
 5219 00b8 5A60     		str	r2, [r3, #4]
 5220 00ba 9A60     		str	r2, [r3, #8]
1151:..\src/command_processing.c ****     char imu_table_str[42]      = "";
 5221              		.loc 1 1151 0
 5222 00bc 07F1A003 		add	r3, r7, #160
 5223 00c0 0022     		movs	r2, #0
 5224 00c2 1A60     		str	r2, [r3]
 5225 00c4 0433     		adds	r3, r3, #4
 5226 00c6 2622     		movs	r2, #38
 5227 00c8 0021     		movs	r1, #0
 5228 00ca 1846     		mov	r0, r3
 5229 00cc FFF7FEFF 		bl	memset
1152:..\src/command_processing.c ****     char spi_read_delay_str[26] = "";
 5230              		.loc 1 1152 0
 5231 00d0 07F18403 		add	r3, r7, #132
 5232 00d4 0022     		movs	r2, #0
 5233 00d6 1A60     		str	r2, [r3]
 5234 00d8 0433     		adds	r3, r3, #4
 5235 00da 0022     		movs	r2, #0
 5236 00dc 1A60     		str	r2, [r3]
 5237 00de 5A60     		str	r2, [r3, #4]
 5238 00e0 9A60     		str	r2, [r3, #8]
 5239 00e2 DA60     		str	r2, [r3, #12]
 5240 00e4 1A61     		str	r2, [r3, #16]
 5241 00e6 9A82     		strh	r2, [r3, #20]	@ movhi
1153:..\src/command_processing.c ****     
1154:..\src/command_processing.c ****     //Strings lenghts
1155:..\src/command_processing.c ****     uint8 CYDATA id_str_len = strlen(id_str);
 5242              		.loc 1 1155 0
 5243 00e8 07F1CC03 		add	r3, r7, #204
 5244 00ec 1846     		mov	r0, r3
 5245 00ee FFF7FEFF 		bl	strlen
 5246 00f2 0346     		mov	r3, r0
 5247 00f4 87F80336 		strb	r3, [r7, #1539]
1156:..\src/command_processing.c ****     uint8 CYDATA n_imu_str_len = strlen(n_imu_str);
 5248              		.loc 1 1156 0
 5249 00f8 07F1FC03 		add	r3, r7, #252
 5250 00fc 1846     		mov	r0, r3
 5251 00fe FFF7FEFF 		bl	strlen
 5252 0102 0346     		mov	r3, r0
 5253 0104 87F80236 		strb	r3, [r7, #1538]
1157:..\src/command_processing.c ****     uint8 CYDATA ids_str_len = strlen(ids_str);
 5254              		.loc 1 1157 0
 5255 0108 07F1F003 		add	r3, r7, #240
 5256 010c 1846     		mov	r0, r3
 5257 010e FFF7FEFF 		bl	strlen
 5258 0112 0346     		mov	r3, r0
 5259 0114 87F80136 		strb	r3, [r7, #1537]
1158:..\src/command_processing.c ****     uint8 CYDATA mag_param_str_len = strlen(mag_param_str);
 5260              		.loc 1 1158 0
 5261 0118 07F1DC03 		add	r3, r7, #220
 5262 011c 1846     		mov	r0, r3
 5263 011e FFF7FEFF 		bl	strlen
 5264 0122 0346     		mov	r3, r0
 5265 0124 87F80036 		strb	r3, [r7, #1536]
1159:..\src/command_processing.c ****     uint8 CYDATA imu_table_str_len = strlen(imu_table_str);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 135


 5266              		.loc 1 1159 0
 5267 0128 07F1A003 		add	r3, r7, #160
 5268 012c 1846     		mov	r0, r3
 5269 012e FFF7FEFF 		bl	strlen
 5270 0132 0346     		mov	r3, r0
 5271 0134 87F8FF35 		strb	r3, [r7, #1535]
1160:..\src/command_processing.c ****     uint8 CYDATA spi_read_delay_str_len = strlen(spi_read_delay_str);
 5272              		.loc 1 1160 0
 5273 0138 07F18403 		add	r3, r7, #132
 5274 013c 1846     		mov	r0, r3
 5275 013e FFF7FEFF 		bl	strlen
 5276 0142 0346     		mov	r3, r0
 5277 0144 87F80D36 		strb	r3, [r7, #1549]
1161:..\src/command_processing.c ****     
1162:..\src/command_processing.c ****     char spi_delay_menu[118]    = "";
 5278              		.loc 1 1162 0
 5279 0148 07F10C03 		add	r3, r7, #12
 5280 014c 0022     		movs	r2, #0
 5281 014e 1A60     		str	r2, [r3]
 5282 0150 0433     		adds	r3, r3, #4
 5283 0152 7222     		movs	r2, #114
 5284 0154 0021     		movs	r1, #0
 5285 0156 1846     		mov	r0, r3
 5286 0158 FFF7FEFF 		bl	memset
1163:..\src/command_processing.c ****     uint8 CYDATA spi_delay_menu_len;
1164:..\src/command_processing.c ****  
1165:..\src/command_processing.c ****     sprintf(spi_delay_menu, "0 -> None\n1 -> Low (%u us delay for each 8-bit register read)\n2 -> H
 5287              		.loc 1 1165 0
 5288 015c 07F10C00 		add	r0, r7, #12
 5289 0160 6423     		movs	r3, #100
 5290 0162 0A22     		movs	r2, #10
 5291 0164 8D49     		ldr	r1, .L375+12
 5292 0166 FFF7FEFF 		bl	sprintf
1166:..\src/command_processing.c ****     spi_delay_menu_len = strlen(spi_delay_menu);
 5293              		.loc 1 1166 0
 5294 016a 07F10C03 		add	r3, r7, #12
 5295 016e 1846     		mov	r0, r3
 5296 0170 FFF7FEFF 		bl	strlen
 5297 0174 0346     		mov	r3, r0
 5298 0176 87F8FE35 		strb	r3, [r7, #1534]
1167:..\src/command_processing.c **** 
1168:..\src/command_processing.c ****     // Compute number of read parameters depending on N_IMU_Connected and
1169:..\src/command_processing.c ****     // update packet_length
1170:..\src/command_processing.c ****     num_mag_cal_params = (uint16)(N_IMU_Connected / 2);
 5299              		.loc 1 1170 0
 5300 017a 854B     		ldr	r3, .L375
 5301 017c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5302 017e 5B08     		lsrs	r3, r3, #1
 5303 0180 DBB2     		uxtb	r3, r3
 5304 0182 A7F81636 		strh	r3, [r7, #1558]	@ movhi
1171:..\src/command_processing.c ****     if ( (N_IMU_Connected - num_mag_cal_params*2) > 0 ) num_mag_cal_params++;
 5305              		.loc 1 1171 0
 5306 0186 824B     		ldr	r3, .L375
 5307 0188 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5308 018a 1A46     		mov	r2, r3
 5309 018c B7F81636 		ldrh	r3, [r7, #1558]
 5310 0190 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 136


 5311 0192 D31A     		subs	r3, r2, r3
 5312 0194 002B     		cmp	r3, #0
 5313 0196 04DD     		ble	.L330
 5314              		.loc 1 1171 0 is_stmt 0 discriminator 1
 5315 0198 B7F81636 		ldrh	r3, [r7, #1558]
 5316 019c 0133     		adds	r3, r3, #1
 5317 019e A7F81636 		strh	r3, [r7, #1558]	@ movhi
 5318              	.L330:
1172:..\src/command_processing.c ****     
1173:..\src/command_processing.c ****     packet_length = PARAM_BYTE_SLOT +
 5319              		.loc 1 1173 0 is_stmt 1
 5320 01a2 B7F80A36 		ldrh	r3, [r7, #1546]
 5321 01a6 5A1C     		adds	r2, r3, #1
1174:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 5322              		.loc 1 1174 0
 5323 01a8 B7F81636 		ldrh	r3, [r7, #1558]
 5324 01ac 1344     		add	r3, r3, r2
1175:..\src/command_processing.c ****                     num_mag_cal_params*PARAM_BYTE_SLOT +
 5325              		.loc 1 1175 0
 5326 01ae 0133     		adds	r3, r3, #1
1173:..\src/command_processing.c ****                     num_imus_id_params*PARAM_BYTE_SLOT +
 5327              		.loc 1 1173 0
 5328 01b0 9AB2     		uxth	r2, r3
 5329 01b2 774B     		ldr	r3, .L375
 5330 01b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5331 01b6 9BB2     		uxth	r3, r3
 5332 01b8 1344     		add	r3, r3, r2
 5333 01ba 9BB2     		uxth	r3, r3
 5334 01bc 1A46     		mov	r2, r3	@ movhi
 5335 01be 9200     		lsls	r2, r2, #2
 5336 01c0 1344     		add	r3, r3, r2
 5337 01c2 1A46     		mov	r2, r3	@ movhi
 5338 01c4 9100     		lsls	r1, r2, #2
 5339 01c6 1A46     		mov	r2, r3	@ movhi
 5340 01c8 0B46     		mov	r3, r1	@ movhi
 5341 01ca 1344     		add	r3, r3, r2
 5342 01cc 5B00     		lsls	r3, r3, #1
 5343 01ce 9BB2     		uxth	r3, r3
 5344 01d0 C933     		adds	r3, r3, #201
 5345 01d2 A7F80636 		strh	r3, [r7, #1542]	@ movhi
1176:..\src/command_processing.c ****                     PARAM_BYTE_SLOT   + 
1177:..\src/command_processing.c ****                     (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected) +
1178:..\src/command_processing.c ****                     PARAM_MENU_SLOT + PARAM_BYTE_SLOT + 1;
1179:..\src/command_processing.c **** 
1180:..\src/command_processing.c ****     first_imu_parameter = 1 + num_imus_id_params + num_mag_cal_params + 2;
 5346              		.loc 1 1180 0
 5347 01d6 B7F80A26 		ldrh	r2, [r7, #1546]	@ movhi
 5348 01da B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 5349 01de 1344     		add	r3, r3, r2
 5350 01e0 9BB2     		uxth	r3, r3
 5351 01e2 0333     		adds	r3, r3, #3
 5352 01e4 A7F80836 		strh	r3, [r7, #1544]	@ movhi
1181:..\src/command_processing.c ****     packet_data[0] = CMD_GET_PARAM_LIST;
 5353              		.loc 1 1181 0
 5354 01e8 07F58C73 		add	r3, r7, #280
 5355 01ec 0C22     		movs	r2, #12
 5356 01ee 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 137


1182:..\src/command_processing.c ****     packet_data[1] = 1 + num_imus_id_params + num_mag_cal_params + 1 + (uint8)N_IMU_Connected + 1; 
 5357              		.loc 1 1182 0
 5358 01f0 B7F80A36 		ldrh	r3, [r7, #1546]	@ movhi
 5359 01f4 DAB2     		uxtb	r2, r3
 5360 01f6 B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 5361 01fa DBB2     		uxtb	r3, r3
 5362 01fc 1344     		add	r3, r3, r2
 5363 01fe DAB2     		uxtb	r2, r3
 5364 0200 634B     		ldr	r3, .L375
 5365 0202 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5366 0204 1344     		add	r3, r3, r2
 5367 0206 DBB2     		uxtb	r3, r3
 5368 0208 0333     		adds	r3, r3, #3
 5369 020a DAB2     		uxtb	r2, r3
 5370 020c 07F58C73 		add	r3, r7, #280
 5371 0210 5A70     		strb	r2, [r3, #1]
1183:..\src/command_processing.c **** 
1184:..\src/command_processing.c ****     switch(index) {
 5372              		.loc 1 1184 0
 5373 0212 BB1D     		adds	r3, r7, #6
 5374 0214 1B88     		ldrh	r3, [r3]
 5375 0216 002B     		cmp	r3, #0
 5376 0218 40F0CE84 		bne	.L373
1185:..\src/command_processing.c ****         case 0:         //List of all parameters with relative types
1186:..\src/command_processing.c ****             /*-------------N IMU--------------*/
1187:..\src/command_processing.c ****             start_byte = 0;
 5377              		.loc 1 1187 0
 5378 021c 0023     		movs	r3, #0
 5379 021e A7F80436 		strh	r3, [r7, #1540]	@ movhi
1188:..\src/command_processing.c ****             packet_data[2] = TYPE_UINT8;
 5380              		.loc 1 1188 0
 5381 0222 07F58C73 		add	r3, r7, #280
 5382 0226 0222     		movs	r2, #2
 5383 0228 9A70     		strb	r2, [r3, #2]
1189:..\src/command_processing.c ****             packet_data[3] = 1;
 5384              		.loc 1 1189 0
 5385 022a 07F58C73 		add	r3, r7, #280
 5386 022e 0122     		movs	r2, #1
 5387 0230 DA70     		strb	r2, [r3, #3]
1190:..\src/command_processing.c ****             packet_data[4] = (uint8)N_IMU_Connected;
 5388              		.loc 1 1190 0
 5389 0232 574B     		ldr	r3, .L375
 5390 0234 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5391 0236 07F58C73 		add	r3, r7, #280
 5392 023a 1A71     		strb	r2, [r3, #4]
1191:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5393              		.loc 1 1191 0
 5394 023c 97F80236 		ldrb	r3, [r7, #1538]	@ zero_extendqisi2
 5395 0240 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5396 0244 15E0     		b	.L333
 5397              	.L334:
1192:..\src/command_processing.c ****                 packet_data[5 + n_imu_str_len - i] = n_imu_str[n_imu_str_len - i];
 5398              		.loc 1 1192 0 discriminator 3
 5399 0246 97F80236 		ldrb	r3, [r7, #1538]	@ zero_extendqisi2
 5400 024a 5A1D     		adds	r2, r3, #5
 5401 024c B7F81436 		ldrh	r3, [r7, #1556]
 5402 0250 D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 138


 5403 0252 97F80216 		ldrb	r1, [r7, #1538]	@ zero_extendqisi2
 5404 0256 B7F81426 		ldrh	r2, [r7, #1556]
 5405 025a 8A1A     		subs	r2, r1, r2
 5406 025c 07F1FC01 		add	r1, r7, #252
 5407 0260 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5408 0262 07F58C72 		add	r2, r7, #280
 5409 0266 D154     		strb	r1, [r2, r3]
1191:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5410              		.loc 1 1191 0 discriminator 3
 5411 0268 B7F81436 		ldrh	r3, [r7, #1556]
 5412 026c 013B     		subs	r3, r3, #1
 5413 026e A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5414              	.L333:
1191:..\src/command_processing.c ****             for(i = n_imu_str_len; i != 0; i--)
 5415              		.loc 1 1191 0 is_stmt 0 discriminator 1
 5416 0272 B7F81436 		ldrh	r3, [r7, #1556]
 5417 0276 002B     		cmp	r3, #0
 5418 0278 E5D1     		bne	.L334
1193:..\src/command_processing.c ****                 
1194:..\src/command_processing.c ****             /*-------------IMUS ID--------------*/
1195:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 5419              		.loc 1 1195 0 is_stmt 1
 5420 027a B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5421 027e 3233     		adds	r3, r3, #50
 5422 0280 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1196:..\src/command_processing.c ****             i = 0;
 5423              		.loc 1 1196 0
 5424 0284 0023     		movs	r3, #0
 5425 0286 A7F81436 		strh	r3, [r7, #1556]	@ movhi
1197:..\src/command_processing.c ****             for (k = 0; k < num_imus_id_params; k++){
 5426              		.loc 1 1197 0
 5427 028a 0023     		movs	r3, #0
 5428 028c A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5429 0290 B2E0     		b	.L335
 5430              	.L342:
1198:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5431              		.loc 1 1198 0
 5432 0292 B7F81026 		ldrh	r2, [r7, #1552]
 5433 0296 07F1F003 		add	r3, r7, #240
 5434 029a 4149     		ldr	r1, .L375+16
 5435 029c 1846     		mov	r0, r3
 5436 029e FFF7FEFF 		bl	sprintf
1199:..\src/command_processing.c ****                 h = 4;
 5437              		.loc 1 1199 0
 5438 02a2 0423     		movs	r3, #4
 5439 02a4 A7F80E36 		strh	r3, [r7, #1550]	@ movhi
1200:..\src/command_processing.c ****                 ids_str_len = strlen(ids_str);
 5440              		.loc 1 1200 0
 5441 02a8 07F1F003 		add	r3, r7, #240
 5442 02ac 1846     		mov	r0, r3
 5443 02ae FFF7FEFF 		bl	strlen
 5444 02b2 0346     		mov	r3, r0
 5445 02b4 87F80136 		strb	r3, [r7, #1537]
1201:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5446              		.loc 1 1201 0
 5447 02b8 B7F80436 		ldrh	r3, [r7, #1540]
 5448 02bc 9A1C     		adds	r2, r3, #2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 139


 5449 02be B7F81036 		ldrh	r3, [r7, #1552]
 5450 02c2 3221     		movs	r1, #50
 5451 02c4 01FB03F3 		mul	r3, r1, r3
 5452 02c8 1344     		add	r3, r3, r2
 5453 02ca 07F58C72 		add	r2, r7, #280
 5454 02ce 0221     		movs	r1, #2
 5455 02d0 D154     		strb	r1, [r2, r3]
1202:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 5456              		.loc 1 1202 0
 5457 02d2 B7F80436 		ldrh	r3, [r7, #1540]
 5458 02d6 DA1C     		adds	r2, r3, #3
 5459 02d8 B7F81036 		ldrh	r3, [r7, #1552]
 5460 02dc 3221     		movs	r1, #50
 5461 02de 01FB03F3 		mul	r3, r1, r3
 5462 02e2 1344     		add	r3, r3, r2
 5463 02e4 07F58C72 		add	r2, r7, #280
 5464 02e8 0321     		movs	r1, #3
 5465 02ea D154     		strb	r1, [r2, r3]
1203:..\src/command_processing.c ****                 
1204:..\src/command_processing.c ****                 for (j = 3*k; j <= 3*k+2; j++) {  // for each possible imu on port k
 5466              		.loc 1 1204 0
 5467 02ec B7F81036 		ldrh	r3, [r7, #1552]	@ movhi
 5468 02f0 1A46     		mov	r2, r3	@ movhi
 5469 02f2 5200     		lsls	r2, r2, #1
 5470 02f4 1344     		add	r3, r3, r2
 5471 02f6 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5472 02fa 39E0     		b	.L336
 5473              	.L339:
1205:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5474              		.loc 1 1205 0
 5475 02fc B7F81436 		ldrh	r3, [r7, #1556]
 5476 0300 284A     		ldr	r2, .L375+20
 5477 0302 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5478 0304 9BB2     		uxth	r3, r3
 5479 0306 B7F81226 		ldrh	r2, [r7, #1554]
 5480 030a 9A42     		cmp	r2, r3
 5481 030c 17D1     		bne	.L337
1206:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = (uint8)IMU_connected[i];   
 5482              		.loc 1 1206 0
 5483 030e B7F80E26 		ldrh	r2, [r7, #1550]
 5484 0312 B7F80436 		ldrh	r3, [r7, #1540]
 5485 0316 1A44     		add	r2, r2, r3
 5486 0318 B7F81036 		ldrh	r3, [r7, #1552]
 5487 031c 3221     		movs	r1, #50
 5488 031e 01FB03F3 		mul	r3, r1, r3
 5489 0322 1344     		add	r3, r3, r2
 5490 0324 B7F81426 		ldrh	r2, [r7, #1556]
 5491 0328 1E49     		ldr	r1, .L375+20
 5492 032a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5493 032c 07F58C72 		add	r2, r7, #280
 5494 0330 D154     		strb	r1, [r2, r3]
1207:..\src/command_processing.c ****                         i++;
 5495              		.loc 1 1207 0
 5496 0332 B7F81436 		ldrh	r3, [r7, #1556]
 5497 0336 0133     		adds	r3, r3, #1
 5498 0338 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5499 033c 0EE0     		b	.L338
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 140


 5500              	.L337:
1208:..\src/command_processing.c ****                     } 
1209:..\src/command_processing.c ****                     else {
1210:..\src/command_processing.c ****                         packet_data[h+start_byte + PARAM_BYTE_SLOT*k] = 255;
 5501              		.loc 1 1210 0
 5502 033e B7F80E26 		ldrh	r2, [r7, #1550]
 5503 0342 B7F80436 		ldrh	r3, [r7, #1540]
 5504 0346 1A44     		add	r2, r2, r3
 5505 0348 B7F81036 		ldrh	r3, [r7, #1552]
 5506 034c 3221     		movs	r1, #50
 5507 034e 01FB03F3 		mul	r3, r1, r3
 5508 0352 1344     		add	r3, r3, r2
 5509 0354 07F58C72 		add	r2, r7, #280
 5510 0358 FF21     		movs	r1, #255
 5511 035a D154     		strb	r1, [r2, r3]
 5512              	.L338:
1211:..\src/command_processing.c ****                     }
1212:..\src/command_processing.c ****                     h++;
 5513              		.loc 1 1212 0 discriminator 2
 5514 035c B7F80E36 		ldrh	r3, [r7, #1550]
 5515 0360 0133     		adds	r3, r3, #1
 5516 0362 A7F80E36 		strh	r3, [r7, #1550]	@ movhi
1204:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5517              		.loc 1 1204 0 discriminator 2
 5518 0366 B7F81236 		ldrh	r3, [r7, #1554]
 5519 036a 0133     		adds	r3, r3, #1
 5520 036c A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5521              	.L336:
1204:..\src/command_processing.c ****                     if (IMU_connected[i] == j) {
 5522              		.loc 1 1204 0 is_stmt 0 discriminator 1
 5523 0370 B7F81216 		ldrh	r1, [r7, #1554]
 5524 0374 B7F81026 		ldrh	r2, [r7, #1552]
 5525 0378 1346     		mov	r3, r2
 5526 037a 5B00     		lsls	r3, r3, #1
 5527 037c 1344     		add	r3, r3, r2
 5528 037e 0233     		adds	r3, r3, #2
 5529 0380 9942     		cmp	r1, r3
 5530 0382 BBDD     		ble	.L339
1213:..\src/command_processing.c ****                 }
1214:..\src/command_processing.c **** 
1215:..\src/command_processing.c ****                 //if (IMU_connected[i] >= 3*k && IMU_connected[i] <= 3*k + 2)
1216:..\src/command_processing.c ****                 for(j = ids_str_len; j != 0; j--)
 5531              		.loc 1 1216 0 is_stmt 1
 5532 0384 97F80136 		ldrb	r3, [r7, #1537]	@ zero_extendqisi2
 5533 0388 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5534 038c 2BE0     		b	.L340
 5535              	.L376:
 5536 038e 00BF     		.align	2
 5537              	.L375:
 5538 0390 00000000 		.word	N_IMU_Connected
 5539 0394 30070000 		.word	.LC66
 5540 0398 4C070000 		.word	.LC67
 5541 039c 00000000 		.word	.LC42
 5542 03a0 C8060000 		.word	.LC68
 5543 03a4 00000000 		.word	IMU_connected
 5544              	.L341:
1217:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 141


 5545              		.loc 1 1217 0 discriminator 3
 5546 03a8 B7F80436 		ldrh	r3, [r7, #1540]
 5547 03ac DA1D     		adds	r2, r3, #7
 5548 03ae B7F81036 		ldrh	r3, [r7, #1552]
 5549 03b2 3221     		movs	r1, #50
 5550 03b4 01FB03F3 		mul	r3, r1, r3
 5551 03b8 1A44     		add	r2, r2, r3
 5552 03ba 97F80136 		ldrb	r3, [r7, #1537]	@ zero_extendqisi2
 5553 03be 1A44     		add	r2, r2, r3
 5554 03c0 B7F81236 		ldrh	r3, [r7, #1554]
 5555 03c4 D31A     		subs	r3, r2, r3
 5556 03c6 97F80116 		ldrb	r1, [r7, #1537]	@ zero_extendqisi2
 5557 03ca B7F81226 		ldrh	r2, [r7, #1554]
 5558 03ce 8A1A     		subs	r2, r1, r2
 5559 03d0 07F1F001 		add	r1, r7, #240
 5560 03d4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5561 03d6 07F58C72 		add	r2, r7, #280
 5562 03da D154     		strb	r1, [r2, r3]
1216:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 5563              		.loc 1 1216 0 discriminator 3
 5564 03dc B7F81236 		ldrh	r3, [r7, #1554]
 5565 03e0 013B     		subs	r3, r3, #1
 5566 03e2 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5567              	.L340:
1216:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k + ids_str_len - j] = ids_str[ids_s
 5568              		.loc 1 1216 0 is_stmt 0 discriminator 1
 5569 03e6 B7F81236 		ldrh	r3, [r7, #1554]
 5570 03ea 002B     		cmp	r3, #0
 5571 03ec DCD1     		bne	.L341
1197:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5572              		.loc 1 1197 0 is_stmt 1 discriminator 2
 5573 03ee B7F81036 		ldrh	r3, [r7, #1552]
 5574 03f2 0133     		adds	r3, r3, #1
 5575 03f4 A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5576              	.L335:
1197:..\src/command_processing.c ****                 sprintf(ids_str, "Port %u ID:", k);
 5577              		.loc 1 1197 0 is_stmt 0 discriminator 1
 5578 03f8 B7F81026 		ldrh	r2, [r7, #1552]
 5579 03fc B7F80A36 		ldrh	r3, [r7, #1546]
 5580 0400 9A42     		cmp	r2, r3
 5581 0402 FFF446AF 		bcc	.L342
1218:..\src/command_processing.c ****             }
1219:..\src/command_processing.c ****             
1220:..\src/command_processing.c ****             /*-------------GET MAG PARAM--------------*/
1221:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_imus_id_params;
 5582              		.loc 1 1221 0 is_stmt 1
 5583 0406 B7F80A36 		ldrh	r3, [r7, #1546]	@ movhi
 5584 040a 1A46     		mov	r2, r3	@ movhi
 5585 040c 9200     		lsls	r2, r2, #2
 5586 040e 1344     		add	r3, r3, r2
 5587 0410 1A46     		mov	r2, r3	@ movhi
 5588 0412 9100     		lsls	r1, r2, #2
 5589 0414 1A46     		mov	r2, r3	@ movhi
 5590 0416 0B46     		mov	r3, r1	@ movhi
 5591 0418 1344     		add	r3, r3, r2
 5592 041a 5B00     		lsls	r3, r3, #1
 5593 041c 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 142


 5594 041e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5595 0422 1344     		add	r3, r3, r2
 5596 0424 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1222:..\src/command_processing.c ****             for (k = 0; k < num_mag_cal_params; k++){
 5597              		.loc 1 1222 0
 5598 0428 0023     		movs	r3, #0
 5599 042a A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5600 042e 1FE1     		b	.L343
 5601              	.L350:
1223:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5602              		.loc 1 1223 0
 5603 0430 B7F80436 		ldrh	r3, [r7, #1540]
 5604 0434 9A1C     		adds	r2, r3, #2
 5605 0436 B7F81036 		ldrh	r3, [r7, #1552]
 5606 043a 3221     		movs	r1, #50
 5607 043c 01FB03F3 		mul	r3, r1, r3
 5608 0440 1344     		add	r3, r3, r2
 5609 0442 07F58C72 		add	r2, r7, #280
 5610 0446 0221     		movs	r1, #2
 5611 0448 D154     		strb	r1, [r2, r3]
1224:..\src/command_processing.c ****                 
1225:..\src/command_processing.c ****                 packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 3;
 5612              		.loc 1 1225 0
 5613 044a B7F80436 		ldrh	r3, [r7, #1540]
 5614 044e DA1C     		adds	r2, r3, #3
 5615 0450 B7F81036 		ldrh	r3, [r7, #1552]
 5616 0454 3221     		movs	r1, #50
 5617 0456 01FB03F3 		mul	r3, r1, r3
 5618 045a 1344     		add	r3, r3, r2
 5619 045c 07F58C72 		add	r2, r7, #280
 5620 0460 0321     		movs	r1, #3
 5621 0462 D154     		strb	r1, [r2, r3]
1226:..\src/command_processing.c ****                 packet_data[4+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5622              		.loc 1 1226 0
 5623 0464 B7F80436 		ldrh	r3, [r7, #1540]
 5624 0468 1A1D     		adds	r2, r3, #4
 5625 046a B7F81036 		ldrh	r3, [r7, #1552]
 5626 046e 3221     		movs	r1, #50
 5627 0470 01FB03F3 		mul	r3, r1, r3
 5628 0474 1A44     		add	r2, r2, r3
 5629 0476 B7F81036 		ldrh	r3, [r7, #1552]
 5630 047a 5B00     		lsls	r3, r3, #1
 5631 047c B149     		ldr	r1, .L377
 5632 047e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5633 0480 1846     		mov	r0, r3
 5634 0482 B149     		ldr	r1, .L377+4
 5635 0484 0346     		mov	r3, r0
 5636 0486 5B00     		lsls	r3, r3, #1
 5637 0488 0344     		add	r3, r3, r0
 5638 048a 0B44     		add	r3, r3, r1
 5639 048c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5640 048e 07F58C73 		add	r3, r7, #280
 5641 0492 9954     		strb	r1, [r3, r2]
1227:..\src/command_processing.c ****                 packet_data[5+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5642              		.loc 1 1227 0
 5643 0494 B7F80436 		ldrh	r3, [r7, #1540]
 5644 0498 5A1D     		adds	r2, r3, #5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 143


 5645 049a B7F81036 		ldrh	r3, [r7, #1552]
 5646 049e 3221     		movs	r1, #50
 5647 04a0 01FB03F3 		mul	r3, r1, r3
 5648 04a4 1A44     		add	r2, r2, r3
 5649 04a6 B7F81036 		ldrh	r3, [r7, #1552]
 5650 04aa 5B00     		lsls	r3, r3, #1
 5651 04ac A549     		ldr	r1, .L377
 5652 04ae CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5653 04b0 1846     		mov	r0, r3
 5654 04b2 A549     		ldr	r1, .L377+4
 5655 04b4 0346     		mov	r3, r0
 5656 04b6 5B00     		lsls	r3, r3, #1
 5657 04b8 0344     		add	r3, r3, r0
 5658 04ba 0B44     		add	r3, r3, r1
 5659 04bc 0133     		adds	r3, r3, #1
 5660 04be 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5661 04c0 07F58C73 		add	r3, r7, #280
 5662 04c4 9954     		strb	r1, [r3, r2]
1228:..\src/command_processing.c ****                 packet_data[6+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*k]][
 5663              		.loc 1 1228 0
 5664 04c6 B7F80436 		ldrh	r3, [r7, #1540]
 5665 04ca 9A1D     		adds	r2, r3, #6
 5666 04cc B7F81036 		ldrh	r3, [r7, #1552]
 5667 04d0 3221     		movs	r1, #50
 5668 04d2 01FB03F3 		mul	r3, r1, r3
 5669 04d6 1A44     		add	r2, r2, r3
 5670 04d8 B7F81036 		ldrh	r3, [r7, #1552]
 5671 04dc 5B00     		lsls	r3, r3, #1
 5672 04de 9949     		ldr	r1, .L377
 5673 04e0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5674 04e2 1846     		mov	r0, r3
 5675 04e4 9849     		ldr	r1, .L377+4
 5676 04e6 0346     		mov	r3, r0
 5677 04e8 5B00     		lsls	r3, r3, #1
 5678 04ea 0344     		add	r3, r3, r0
 5679 04ec 0B44     		add	r3, r3, r1
 5680 04ee 0233     		adds	r3, r3, #2
 5681 04f0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5682 04f2 07F58C73 		add	r3, r7, #280
 5683 04f6 9954     		strb	r1, [r3, r2]
1229:..\src/command_processing.c ****                 
1230:..\src/command_processing.c ****                 // check if there is a second value
1231:..\src/command_processing.c ****                 if ( N_IMU_Connected < 2*(k+1) ) {
 5684              		.loc 1 1231 0
 5685 04f8 944B     		ldr	r3, .L377+8
 5686 04fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5687 04fc 1A46     		mov	r2, r3
 5688 04fe B7F81036 		ldrh	r3, [r7, #1552]
 5689 0502 0133     		adds	r3, r3, #1
 5690 0504 5B00     		lsls	r3, r3, #1
 5691 0506 9A42     		cmp	r2, r3
 5692 0508 28DA     		bge	.L344
1232:..\src/command_processing.c ****                     // there is only one value
1233:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 5693              		.loc 1 1233 0
 5694 050a 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5695 050e A7F81236 		strh	r3, [r7, #1554]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 144


 5696 0512 1EE0     		b	.L345
 5697              	.L346:
1234:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5698              		.loc 1 1234 0 discriminator 3
 5699 0514 B7F80436 		ldrh	r3, [r7, #1540]
 5700 0518 DA1D     		adds	r2, r3, #7
 5701 051a B7F81036 		ldrh	r3, [r7, #1552]
 5702 051e 3221     		movs	r1, #50
 5703 0520 01FB03F3 		mul	r3, r1, r3
 5704 0524 1A44     		add	r2, r2, r3
 5705 0526 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5706 052a 1A44     		add	r2, r2, r3
 5707 052c B7F81236 		ldrh	r3, [r7, #1554]
 5708 0530 D31A     		subs	r3, r2, r3
 5709 0532 97F80016 		ldrb	r1, [r7, #1536]	@ zero_extendqisi2
 5710 0536 B7F81226 		ldrh	r2, [r7, #1554]
 5711 053a 8A1A     		subs	r2, r1, r2
 5712 053c 07F1DC01 		add	r1, r7, #220
 5713 0540 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5714 0542 07F58C72 		add	r2, r7, #280
 5715 0546 D154     		strb	r1, [r2, r3]
1233:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5716              		.loc 1 1233 0 discriminator 3
 5717 0548 B7F81236 		ldrh	r3, [r7, #1554]
 5718 054c 013B     		subs	r3, r3, #1
 5719 054e A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5720              	.L345:
1233:..\src/command_processing.c ****                         packet_data[7+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = mag
 5721              		.loc 1 1233 0 is_stmt 0 discriminator 1
 5722 0552 B7F81236 		ldrh	r3, [r7, #1554]
 5723 0556 002B     		cmp	r3, #0
 5724 0558 DCD1     		bne	.L346
 5725 055a 84E0     		b	.L347
 5726              	.L344:
1235:..\src/command_processing.c ****                 }
1236:..\src/command_processing.c ****                 else {
1237:..\src/command_processing.c ****                     // fill the second value
1238:..\src/command_processing.c ****                     packet_data[3+start_byte + PARAM_BYTE_SLOT*k] = 6;
 5727              		.loc 1 1238 0 is_stmt 1
 5728 055c B7F80436 		ldrh	r3, [r7, #1540]
 5729 0560 DA1C     		adds	r2, r3, #3
 5730 0562 B7F81036 		ldrh	r3, [r7, #1552]
 5731 0566 3221     		movs	r1, #50
 5732 0568 01FB03F3 		mul	r3, r1, r3
 5733 056c 1344     		add	r3, r3, r2
 5734 056e 07F58C72 		add	r2, r7, #280
 5735 0572 0621     		movs	r1, #6
 5736 0574 D154     		strb	r1, [r2, r3]
1239:..\src/command_processing.c ****                     packet_data[7+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5737              		.loc 1 1239 0
 5738 0576 B7F80436 		ldrh	r3, [r7, #1540]
 5739 057a DA1D     		adds	r2, r3, #7
 5740 057c B7F81036 		ldrh	r3, [r7, #1552]
 5741 0580 3221     		movs	r1, #50
 5742 0582 01FB03F3 		mul	r3, r1, r3
 5743 0586 1A44     		add	r2, r2, r3
 5744 0588 B7F81036 		ldrh	r3, [r7, #1552]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 145


 5745 058c 5B00     		lsls	r3, r3, #1
 5746 058e 0133     		adds	r3, r3, #1
 5747 0590 6C49     		ldr	r1, .L377
 5748 0592 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5749 0594 1846     		mov	r0, r3
 5750 0596 6C49     		ldr	r1, .L377+4
 5751 0598 0346     		mov	r3, r0
 5752 059a 5B00     		lsls	r3, r3, #1
 5753 059c 0344     		add	r3, r3, r0
 5754 059e 0B44     		add	r3, r3, r1
 5755 05a0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5756 05a2 07F58C73 		add	r3, r7, #280
 5757 05a6 9954     		strb	r1, [r3, r2]
1240:..\src/command_processing.c ****                     packet_data[8+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5758              		.loc 1 1240 0
 5759 05a8 B7F80436 		ldrh	r3, [r7, #1540]
 5760 05ac 03F10802 		add	r2, r3, #8
 5761 05b0 B7F81036 		ldrh	r3, [r7, #1552]
 5762 05b4 3221     		movs	r1, #50
 5763 05b6 01FB03F3 		mul	r3, r1, r3
 5764 05ba 1A44     		add	r2, r2, r3
 5765 05bc B7F81036 		ldrh	r3, [r7, #1552]
 5766 05c0 5B00     		lsls	r3, r3, #1
 5767 05c2 0133     		adds	r3, r3, #1
 5768 05c4 5F49     		ldr	r1, .L377
 5769 05c6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5770 05c8 1846     		mov	r0, r3
 5771 05ca 5F49     		ldr	r1, .L377+4
 5772 05cc 0346     		mov	r3, r0
 5773 05ce 5B00     		lsls	r3, r3, #1
 5774 05d0 0344     		add	r3, r3, r0
 5775 05d2 0B44     		add	r3, r3, r1
 5776 05d4 0133     		adds	r3, r3, #1
 5777 05d6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5778 05d8 07F58C73 		add	r3, r7, #280
 5779 05dc 9954     		strb	r1, [r3, r2]
1241:..\src/command_processing.c ****                     packet_data[9+start_byte + PARAM_BYTE_SLOT*k] = (uint8) MagCal[IMU_connected[2*
 5780              		.loc 1 1241 0
 5781 05de B7F80436 		ldrh	r3, [r7, #1540]
 5782 05e2 03F10902 		add	r2, r3, #9
 5783 05e6 B7F81036 		ldrh	r3, [r7, #1552]
 5784 05ea 3221     		movs	r1, #50
 5785 05ec 01FB03F3 		mul	r3, r1, r3
 5786 05f0 1A44     		add	r2, r2, r3
 5787 05f2 B7F81036 		ldrh	r3, [r7, #1552]
 5788 05f6 5B00     		lsls	r3, r3, #1
 5789 05f8 0133     		adds	r3, r3, #1
 5790 05fa 5249     		ldr	r1, .L377
 5791 05fc CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5792 05fe 1846     		mov	r0, r3
 5793 0600 5149     		ldr	r1, .L377+4
 5794 0602 0346     		mov	r3, r0
 5795 0604 5B00     		lsls	r3, r3, #1
 5796 0606 0344     		add	r3, r3, r0
 5797 0608 0B44     		add	r3, r3, r1
 5798 060a 0233     		adds	r3, r3, #2
 5799 060c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 146


 5800 060e 07F58C73 		add	r3, r7, #280
 5801 0612 9954     		strb	r1, [r3, r2]
1242:..\src/command_processing.c ****                 
1243:..\src/command_processing.c ****                     for(j = mag_param_str_len; j != 0; j--)
 5802              		.loc 1 1243 0
 5803 0614 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5804 0618 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5805 061c 1FE0     		b	.L348
 5806              	.L349:
1244:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5807              		.loc 1 1244 0 discriminator 3
 5808 061e B7F80436 		ldrh	r3, [r7, #1540]
 5809 0622 03F10A02 		add	r2, r3, #10
 5810 0626 B7F81036 		ldrh	r3, [r7, #1552]
 5811 062a 3221     		movs	r1, #50
 5812 062c 01FB03F3 		mul	r3, r1, r3
 5813 0630 1A44     		add	r2, r2, r3
 5814 0632 97F80036 		ldrb	r3, [r7, #1536]	@ zero_extendqisi2
 5815 0636 1A44     		add	r2, r2, r3
 5816 0638 B7F81236 		ldrh	r3, [r7, #1554]
 5817 063c D31A     		subs	r3, r2, r3
 5818 063e 97F80016 		ldrb	r1, [r7, #1536]	@ zero_extendqisi2
 5819 0642 B7F81226 		ldrh	r2, [r7, #1554]
 5820 0646 8A1A     		subs	r2, r1, r2
 5821 0648 07F1DC01 		add	r1, r7, #220
 5822 064c 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5823 064e 07F58C72 		add	r2, r7, #280
 5824 0652 D154     		strb	r1, [r2, r3]
1243:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5825              		.loc 1 1243 0 discriminator 3
 5826 0654 B7F81236 		ldrh	r3, [r7, #1554]
 5827 0658 013B     		subs	r3, r3, #1
 5828 065a A7F81236 		strh	r3, [r7, #1554]	@ movhi
 5829              	.L348:
1243:..\src/command_processing.c ****                         packet_data[10+start_byte + PARAM_BYTE_SLOT*k + mag_param_str_len - j] = ma
 5830              		.loc 1 1243 0 is_stmt 0 discriminator 1
 5831 065e B7F81236 		ldrh	r3, [r7, #1554]
 5832 0662 002B     		cmp	r3, #0
 5833 0664 DBD1     		bne	.L349
 5834              	.L347:
1222:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5835              		.loc 1 1222 0 is_stmt 1 discriminator 2
 5836 0666 B7F81036 		ldrh	r3, [r7, #1552]
 5837 066a 0133     		adds	r3, r3, #1
 5838 066c A7F81036 		strh	r3, [r7, #1552]	@ movhi
 5839              	.L343:
1222:..\src/command_processing.c ****                 packet_data[2+start_byte + PARAM_BYTE_SLOT*k] = TYPE_UINT8;
 5840              		.loc 1 1222 0 is_stmt 0 discriminator 1
 5841 0670 B7F81026 		ldrh	r2, [r7, #1552]
 5842 0674 B7F81636 		ldrh	r3, [r7, #1558]
 5843 0678 9A42     		cmp	r2, r3
 5844 067a FFF4D9AE 		bcc	.L350
1245:..\src/command_processing.c ****                 }
1246:..\src/command_processing.c ****             }
1247:..\src/command_processing.c ****             
1248:..\src/command_processing.c ****             /*-----------------ID-----------------*/
1249:..\src/command_processing.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 147


1250:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT*num_mag_cal_params;
 5845              		.loc 1 1250 0 is_stmt 1
 5846 067e B7F81636 		ldrh	r3, [r7, #1558]	@ movhi
 5847 0682 1A46     		mov	r2, r3	@ movhi
 5848 0684 9200     		lsls	r2, r2, #2
 5849 0686 1344     		add	r3, r3, r2
 5850 0688 1A46     		mov	r2, r3	@ movhi
 5851 068a 9100     		lsls	r1, r2, #2
 5852 068c 1A46     		mov	r2, r3	@ movhi
 5853 068e 0B46     		mov	r3, r1	@ movhi
 5854 0690 1344     		add	r3, r3, r2
 5855 0692 5B00     		lsls	r3, r3, #1
 5856 0694 9AB2     		uxth	r2, r3
 5857 0696 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5858 069a 1344     		add	r3, r3, r2
 5859 069c A7F80436 		strh	r3, [r7, #1540]	@ movhi
1251:..\src/command_processing.c ****             sprintf(id_str, "%u - Device ID:", first_imu_parameter-1);
 5860              		.loc 1 1251 0
 5861 06a0 B7F80836 		ldrh	r3, [r7, #1544]
 5862 06a4 5A1E     		subs	r2, r3, #1
 5863 06a6 07F1CC03 		add	r3, r7, #204
 5864 06aa 2949     		ldr	r1, .L377+12
 5865 06ac 1846     		mov	r0, r3
 5866 06ae FFF7FEFF 		bl	sprintf
1252:..\src/command_processing.c ****             id_str_len = strlen(id_str);
 5867              		.loc 1 1252 0
 5868 06b2 07F1CC03 		add	r3, r7, #204
 5869 06b6 1846     		mov	r0, r3
 5870 06b8 FFF7FEFF 		bl	strlen
 5871 06bc 0346     		mov	r3, r0
 5872 06be 87F80336 		strb	r3, [r7, #1539]
1253:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_UINT8;
 5873              		.loc 1 1253 0
 5874 06c2 B7F80436 		ldrh	r3, [r7, #1540]
 5875 06c6 0233     		adds	r3, r3, #2
 5876 06c8 07F58C72 		add	r2, r7, #280
 5877 06cc 0221     		movs	r1, #2
 5878 06ce D154     		strb	r1, [r2, r3]
1254:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 5879              		.loc 1 1254 0
 5880 06d0 B7F80436 		ldrh	r3, [r7, #1540]
 5881 06d4 0333     		adds	r3, r3, #3
 5882 06d6 07F58C72 		add	r2, r7, #280
 5883 06da 0121     		movs	r1, #1
 5884 06dc D154     		strb	r1, [r2, r3]
1255:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.id;
 5885              		.loc 1 1255 0
 5886 06de B7F80436 		ldrh	r3, [r7, #1540]
 5887 06e2 0433     		adds	r3, r3, #4
 5888 06e4 1B4A     		ldr	r2, .L377+16
 5889 06e6 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 5890 06e8 07F58C72 		add	r2, r7, #280
 5891 06ec D154     		strb	r1, [r2, r3]
1256:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5892              		.loc 1 1256 0
 5893 06ee 97F80336 		ldrb	r3, [r7, #1539]	@ zero_extendqisi2
 5894 06f2 A7F81436 		strh	r3, [r7, #1556]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 148


 5895 06f6 18E0     		b	.L351
 5896              	.L352:
1257:..\src/command_processing.c ****                 packet_data[5+start_byte + id_str_len - i] = id_str[id_str_len - i];
 5897              		.loc 1 1257 0 discriminator 3
 5898 06f8 B7F80436 		ldrh	r3, [r7, #1540]
 5899 06fc 5A1D     		adds	r2, r3, #5
 5900 06fe 97F80336 		ldrb	r3, [r7, #1539]	@ zero_extendqisi2
 5901 0702 1A44     		add	r2, r2, r3
 5902 0704 B7F81436 		ldrh	r3, [r7, #1556]
 5903 0708 D31A     		subs	r3, r2, r3
 5904 070a 97F80316 		ldrb	r1, [r7, #1539]	@ zero_extendqisi2
 5905 070e B7F81426 		ldrh	r2, [r7, #1556]
 5906 0712 8A1A     		subs	r2, r1, r2
 5907 0714 07F1CC01 		add	r1, r7, #204
 5908 0718 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 5909 071a 07F58C72 		add	r2, r7, #280
 5910 071e D154     		strb	r1, [r2, r3]
1256:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5911              		.loc 1 1256 0 discriminator 3
 5912 0720 B7F81436 		ldrh	r3, [r7, #1556]
 5913 0724 013B     		subs	r3, r3, #1
 5914 0726 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5915              	.L351:
1256:..\src/command_processing.c ****             for(i = id_str_len; i != 0; i--)
 5916              		.loc 1 1256 0 is_stmt 0 discriminator 1
 5917 072a B7F81436 		ldrh	r3, [r7, #1556]
 5918 072e 002B     		cmp	r3, #0
 5919 0730 E2D1     		bne	.L352
1258:..\src/command_processing.c ****                 
1259:..\src/command_processing.c ****             /*-------------GET IMUS MODE-------------*/
1260:..\src/command_processing.c ****             
1261:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 5920              		.loc 1 1261 0 is_stmt 1
 5921 0732 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5922 0736 3233     		adds	r3, r3, #50
 5923 0738 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1262:..\src/command_processing.c ****             for (i = 0; i < (uint8)N_IMU_Connected; i++){
 5924              		.loc 1 1262 0
 5925 073c 0023     		movs	r3, #0
 5926 073e A7F81436 		strh	r3, [r7, #1556]	@ movhi
 5927 0742 37E1     		b	.L353
 5928              	.L378:
 5929              		.align	2
 5930              	.L377:
 5931 0744 00000000 		.word	IMU_connected
 5932 0748 00000000 		.word	MagCal
 5933 074c 00000000 		.word	N_IMU_Connected
 5934 0750 D4060000 		.word	.LC69
 5935 0754 00000000 		.word	c_mem
 5936              	.L356:
1263:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 5937              		.loc 1 1263 0
 5938 0758 B7F80826 		ldrh	r2, [r7, #1544]
 5939 075c B7F81436 		ldrh	r3, [r7, #1556]
 5940 0760 D118     		adds	r1, r2, r3
 5941 0762 B7F81436 		ldrh	r3, [r7, #1556]
 5942 0766 D54A     		ldr	r2, .L379
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 149


 5943 0768 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 5944 076a 07F1A000 		add	r0, r7, #160
 5945 076e 0A46     		mov	r2, r1
 5946 0770 D349     		ldr	r1, .L379+4
 5947 0772 FFF7FEFF 		bl	sprintf
1264:..\src/command_processing.c ****                 imu_table_str_len = strlen(imu_table_str);
 5948              		.loc 1 1264 0
 5949 0776 07F1A003 		add	r3, r7, #160
 5950 077a 1846     		mov	r0, r3
 5951 077c FFF7FEFF 		bl	strlen
 5952 0780 0346     		mov	r3, r0
 5953 0782 87F8FF35 		strb	r3, [r7, #1535]
1265:..\src/command_processing.c ****             
1266:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte + PARAM_BYTE_SLOT*i)] = TYPE_UINT8;
 5954              		.loc 1 1266 0
 5955 0786 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5956 078a 1A46     		mov	r2, r3	@ movhi
 5957 078c 9200     		lsls	r2, r2, #2
 5958 078e 1344     		add	r3, r3, r2
 5959 0790 1A46     		mov	r2, r3	@ movhi
 5960 0792 9100     		lsls	r1, r2, #2
 5961 0794 1A46     		mov	r2, r3	@ movhi
 5962 0796 0B46     		mov	r3, r1	@ movhi
 5963 0798 1344     		add	r3, r3, r2
 5964 079a 5B00     		lsls	r3, r3, #1
 5965 079c 9AB2     		uxth	r2, r3
 5966 079e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5967 07a2 1344     		add	r3, r3, r2
 5968 07a4 9BB2     		uxth	r3, r3
 5969 07a6 0233     		adds	r3, r3, #2
 5970 07a8 9BB2     		uxth	r3, r3
 5971 07aa 1A46     		mov	r2, r3
 5972 07ac 07F58C73 		add	r3, r7, #280
 5973 07b0 0221     		movs	r1, #2
 5974 07b2 9954     		strb	r1, [r3, r2]
1267:..\src/command_processing.c ****                 packet_data[(uint16)(3 + start_byte + PARAM_BYTE_SLOT*i)] = 5;
 5975              		.loc 1 1267 0
 5976 07b4 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5977 07b8 1A46     		mov	r2, r3	@ movhi
 5978 07ba 9200     		lsls	r2, r2, #2
 5979 07bc 1344     		add	r3, r3, r2
 5980 07be 1A46     		mov	r2, r3	@ movhi
 5981 07c0 9100     		lsls	r1, r2, #2
 5982 07c2 1A46     		mov	r2, r3	@ movhi
 5983 07c4 0B46     		mov	r3, r1	@ movhi
 5984 07c6 1344     		add	r3, r3, r2
 5985 07c8 5B00     		lsls	r3, r3, #1
 5986 07ca 9AB2     		uxth	r2, r3
 5987 07cc B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 5988 07d0 1344     		add	r3, r3, r2
 5989 07d2 9BB2     		uxth	r3, r3
 5990 07d4 0333     		adds	r3, r3, #3
 5991 07d6 9BB2     		uxth	r3, r3
 5992 07d8 1A46     		mov	r2, r3
 5993 07da 07F58C73 		add	r3, r7, #280
 5994 07de 0521     		movs	r1, #5
 5995 07e0 9954     		strb	r1, [r3, r2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 150


1268:..\src/command_processing.c ****                 
1269:..\src/command_processing.c ****                 packet_data[(uint16)(4 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 5996              		.loc 1 1269 0
 5997 07e2 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 5998 07e6 1A46     		mov	r2, r3	@ movhi
 5999 07e8 9200     		lsls	r2, r2, #2
 6000 07ea 1344     		add	r3, r3, r2
 6001 07ec 1A46     		mov	r2, r3	@ movhi
 6002 07ee 9100     		lsls	r1, r2, #2
 6003 07f0 1A46     		mov	r2, r3	@ movhi
 6004 07f2 0B46     		mov	r3, r1	@ movhi
 6005 07f4 1344     		add	r3, r3, r2
 6006 07f6 5B00     		lsls	r3, r3, #1
 6007 07f8 9AB2     		uxth	r2, r3
 6008 07fa B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6009 07fe 1344     		add	r3, r3, r2
 6010 0800 9BB2     		uxth	r3, r3
 6011 0802 0433     		adds	r3, r3, #4
 6012 0804 9BB2     		uxth	r3, r3
 6013 0806 1846     		mov	r0, r3
 6014 0808 B7F81436 		ldrh	r3, [r7, #1556]
 6015 080c AB4A     		ldr	r2, .L379
 6016 080e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6017 0810 1946     		mov	r1, r3
 6018 0812 AC4A     		ldr	r2, .L379+8
 6019 0814 0B46     		mov	r3, r1
 6020 0816 9B00     		lsls	r3, r3, #2
 6021 0818 0B44     		add	r3, r3, r1
 6022 081a 1344     		add	r3, r3, r2
 6023 081c 03F22113 		addw	r3, r3, #289
 6024 0820 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6025 0822 07F58C73 		add	r3, r7, #280
 6026 0826 1A54     		strb	r2, [r3, r0]
1270:..\src/command_processing.c ****                 packet_data[(uint16)(5 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6027              		.loc 1 1270 0
 6028 0828 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 6029 082c 1A46     		mov	r2, r3	@ movhi
 6030 082e 9200     		lsls	r2, r2, #2
 6031 0830 1344     		add	r3, r3, r2
 6032 0832 1A46     		mov	r2, r3	@ movhi
 6033 0834 9100     		lsls	r1, r2, #2
 6034 0836 1A46     		mov	r2, r3	@ movhi
 6035 0838 0B46     		mov	r3, r1	@ movhi
 6036 083a 1344     		add	r3, r3, r2
 6037 083c 5B00     		lsls	r3, r3, #1
 6038 083e 9AB2     		uxth	r2, r3
 6039 0840 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6040 0844 1344     		add	r3, r3, r2
 6041 0846 9BB2     		uxth	r3, r3
 6042 0848 0533     		adds	r3, r3, #5
 6043 084a 9BB2     		uxth	r3, r3
 6044 084c 1846     		mov	r0, r3
 6045 084e B7F81436 		ldrh	r3, [r7, #1556]
 6046 0852 9A4A     		ldr	r2, .L379
 6047 0854 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6048 0856 1946     		mov	r1, r3
 6049 0858 9A4A     		ldr	r2, .L379+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 151


 6050 085a 0B46     		mov	r3, r1
 6051 085c 9B00     		lsls	r3, r3, #2
 6052 085e 0B44     		add	r3, r3, r1
 6053 0860 1344     		add	r3, r3, r2
 6054 0862 03F59173 		add	r3, r3, #290
 6055 0866 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6056 0868 07F58C73 		add	r3, r7, #280
 6057 086c 1A54     		strb	r2, [r3, r0]
1271:..\src/command_processing.c ****                 packet_data[(uint16)(6 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6058              		.loc 1 1271 0
 6059 086e B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 6060 0872 1A46     		mov	r2, r3	@ movhi
 6061 0874 9200     		lsls	r2, r2, #2
 6062 0876 1344     		add	r3, r3, r2
 6063 0878 1A46     		mov	r2, r3	@ movhi
 6064 087a 9100     		lsls	r1, r2, #2
 6065 087c 1A46     		mov	r2, r3	@ movhi
 6066 087e 0B46     		mov	r3, r1	@ movhi
 6067 0880 1344     		add	r3, r3, r2
 6068 0882 5B00     		lsls	r3, r3, #1
 6069 0884 9AB2     		uxth	r2, r3
 6070 0886 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6071 088a 1344     		add	r3, r3, r2
 6072 088c 9BB2     		uxth	r3, r3
 6073 088e 0633     		adds	r3, r3, #6
 6074 0890 9BB2     		uxth	r3, r3
 6075 0892 1846     		mov	r0, r3
 6076 0894 B7F81436 		ldrh	r3, [r7, #1556]
 6077 0898 884A     		ldr	r2, .L379
 6078 089a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6079 089c 1946     		mov	r1, r3
 6080 089e 894A     		ldr	r2, .L379+8
 6081 08a0 0B46     		mov	r3, r1
 6082 08a2 9B00     		lsls	r3, r3, #2
 6083 08a4 0B44     		add	r3, r3, r1
 6084 08a6 1344     		add	r3, r3, r2
 6085 08a8 03F22313 		addw	r3, r3, #291
 6086 08ac 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6087 08ae 07F58C73 		add	r3, r7, #280
 6088 08b2 1A54     		strb	r2, [r3, r0]
1272:..\src/command_processing.c ****                 packet_data[(uint16)(7 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6089              		.loc 1 1272 0
 6090 08b4 B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 6091 08b8 1A46     		mov	r2, r3	@ movhi
 6092 08ba 9200     		lsls	r2, r2, #2
 6093 08bc 1344     		add	r3, r3, r2
 6094 08be 1A46     		mov	r2, r3	@ movhi
 6095 08c0 9100     		lsls	r1, r2, #2
 6096 08c2 1A46     		mov	r2, r3	@ movhi
 6097 08c4 0B46     		mov	r3, r1	@ movhi
 6098 08c6 1344     		add	r3, r3, r2
 6099 08c8 5B00     		lsls	r3, r3, #1
 6100 08ca 9AB2     		uxth	r2, r3
 6101 08cc B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6102 08d0 1344     		add	r3, r3, r2
 6103 08d2 9BB2     		uxth	r3, r3
 6104 08d4 0733     		adds	r3, r3, #7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 152


 6105 08d6 9BB2     		uxth	r3, r3
 6106 08d8 1846     		mov	r0, r3
 6107 08da B7F81436 		ldrh	r3, [r7, #1556]
 6108 08de 774A     		ldr	r2, .L379
 6109 08e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6110 08e2 1946     		mov	r1, r3
 6111 08e4 774A     		ldr	r2, .L379+8
 6112 08e6 0B46     		mov	r3, r1
 6113 08e8 9B00     		lsls	r3, r3, #2
 6114 08ea 0B44     		add	r3, r3, r1
 6115 08ec 1344     		add	r3, r3, r2
 6116 08ee 03F59273 		add	r3, r3, #292
 6117 08f2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6118 08f4 07F58C73 		add	r3, r7, #280
 6119 08f8 1A54     		strb	r2, [r3, r0]
1273:..\src/command_processing.c ****                 packet_data[(uint16)(8 + start_byte + PARAM_BYTE_SLOT*i)] = (uint8)(c_mem.IMU_conf[
 6120              		.loc 1 1273 0
 6121 08fa B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
 6122 08fe 1A46     		mov	r2, r3	@ movhi
 6123 0900 9200     		lsls	r2, r2, #2
 6124 0902 1344     		add	r3, r3, r2
 6125 0904 1A46     		mov	r2, r3	@ movhi
 6126 0906 9100     		lsls	r1, r2, #2
 6127 0908 1A46     		mov	r2, r3	@ movhi
 6128 090a 0B46     		mov	r3, r1	@ movhi
 6129 090c 1344     		add	r3, r3, r2
 6130 090e 5B00     		lsls	r3, r3, #1
 6131 0910 9AB2     		uxth	r2, r3
 6132 0912 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6133 0916 1344     		add	r3, r3, r2
 6134 0918 9BB2     		uxth	r3, r3
 6135 091a 0833     		adds	r3, r3, #8
 6136 091c 9BB2     		uxth	r3, r3
 6137 091e 1846     		mov	r0, r3
 6138 0920 B7F81436 		ldrh	r3, [r7, #1556]
 6139 0924 654A     		ldr	r2, .L379
 6140 0926 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6141 0928 1946     		mov	r1, r3
 6142 092a 664A     		ldr	r2, .L379+8
 6143 092c 0B46     		mov	r3, r1
 6144 092e 9B00     		lsls	r3, r3, #2
 6145 0930 0B44     		add	r3, r3, r1
 6146 0932 1344     		add	r3, r3, r2
 6147 0934 03F22513 		addw	r3, r3, #293
 6148 0938 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6149 093a 07F58C73 		add	r3, r7, #280
 6150 093e 1A54     		strb	r2, [r3, r0]
1274:..\src/command_processing.c **** 
1275:..\src/command_processing.c ****                 for(j = imu_table_str_len; j != 0; j--)
 6151              		.loc 1 1275 0
 6152 0940 97F8FF35 		ldrb	r3, [r7, #1535]	@ zero_extendqisi2
 6153 0944 A7F81236 		strh	r3, [r7, #1554]	@ movhi
 6154 0948 2BE0     		b	.L354
 6155              	.L355:
1276:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6156              		.loc 1 1276 0 discriminator 3
 6157 094a B7F81436 		ldrh	r3, [r7, #1556]	@ movhi
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 153


 6158 094e 1A46     		mov	r2, r3	@ movhi
 6159 0950 9200     		lsls	r2, r2, #2
 6160 0952 1344     		add	r3, r3, r2
 6161 0954 1A46     		mov	r2, r3	@ movhi
 6162 0956 9100     		lsls	r1, r2, #2
 6163 0958 1A46     		mov	r2, r3	@ movhi
 6164 095a 0B46     		mov	r3, r1	@ movhi
 6165 095c 1344     		add	r3, r3, r2
 6166 095e 5B00     		lsls	r3, r3, #1
 6167 0960 9AB2     		uxth	r2, r3
 6168 0962 B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6169 0966 1344     		add	r3, r3, r2
 6170 0968 9AB2     		uxth	r2, r3
 6171 096a 97F8FF35 		ldrb	r3, [r7, #1535]	@ zero_extendqisi2
 6172 096e 9BB2     		uxth	r3, r3
 6173 0970 1344     		add	r3, r3, r2
 6174 0972 9AB2     		uxth	r2, r3
 6175 0974 B7F81236 		ldrh	r3, [r7, #1554]	@ movhi
 6176 0978 D31A     		subs	r3, r2, r3
 6177 097a 9BB2     		uxth	r3, r3
 6178 097c 0933     		adds	r3, r3, #9
 6179 097e 9BB2     		uxth	r3, r3
 6180 0980 1946     		mov	r1, r3
 6181 0982 97F8FF25 		ldrb	r2, [r7, #1535]	@ zero_extendqisi2
 6182 0986 B7F81236 		ldrh	r3, [r7, #1554]
 6183 098a D31A     		subs	r3, r2, r3
 6184 098c 07F1A002 		add	r2, r7, #160
 6185 0990 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 6186 0992 07F58C73 		add	r3, r7, #280
 6187 0996 5A54     		strb	r2, [r3, r1]
1275:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6188              		.loc 1 1275 0 discriminator 3
 6189 0998 B7F81236 		ldrh	r3, [r7, #1554]
 6190 099c 013B     		subs	r3, r3, #1
 6191 099e A7F81236 		strh	r3, [r7, #1554]	@ movhi
 6192              	.L354:
1275:..\src/command_processing.c ****                     packet_data[(uint16)(9 + start_byte + PARAM_BYTE_SLOT*i + imu_table_str_len - j
 6193              		.loc 1 1275 0 is_stmt 0 discriminator 1
 6194 09a2 B7F81236 		ldrh	r3, [r7, #1554]
 6195 09a6 002B     		cmp	r3, #0
 6196 09a8 CFD1     		bne	.L355
1262:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 6197              		.loc 1 1262 0 is_stmt 1 discriminator 2
 6198 09aa B7F81436 		ldrh	r3, [r7, #1556]
 6199 09ae 0133     		adds	r3, r3, #1
 6200 09b0 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6201              	.L353:
1262:..\src/command_processing.c ****                 sprintf(imu_table_str, "%u - IMU %d configuration:", first_imu_parameter + i, (int)
 6202              		.loc 1 1262 0 is_stmt 0 discriminator 1
 6203 09b4 444B     		ldr	r3, .L379+12
 6204 09b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6205 09b8 9BB2     		uxth	r3, r3
 6206 09ba B7F81426 		ldrh	r2, [r7, #1556]
 6207 09be 9A42     		cmp	r2, r3
 6208 09c0 FFF4CAAE 		bcc	.L356
1277:..\src/command_processing.c ****             }  
1278:..\src/command_processing.c ****           
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 154


1279:..\src/command_processing.c **** 
1280:..\src/command_processing.c ****             /*-----------------SPI DELAY-----------------*/
1281:..\src/command_processing.c ****             
1282:..\src/command_processing.c ****             start_byte = start_byte + (uint16)(PARAM_BYTE_SLOT*N_IMU_Connected);
 6209              		.loc 1 1282 0 is_stmt 1
 6210 09c4 404B     		ldr	r3, .L379+12
 6211 09c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6212 09c8 9BB2     		uxth	r3, r3
 6213 09ca 1A46     		mov	r2, r3	@ movhi
 6214 09cc 9200     		lsls	r2, r2, #2
 6215 09ce 1344     		add	r3, r3, r2
 6216 09d0 1A46     		mov	r2, r3	@ movhi
 6217 09d2 9100     		lsls	r1, r2, #2
 6218 09d4 1A46     		mov	r2, r3	@ movhi
 6219 09d6 0B46     		mov	r3, r1	@ movhi
 6220 09d8 1344     		add	r3, r3, r2
 6221 09da 5B00     		lsls	r3, r3, #1
 6222 09dc 9AB2     		uxth	r2, r3
 6223 09de B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6224 09e2 1344     		add	r3, r3, r2
 6225 09e4 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1283:..\src/command_processing.c ****             sprintf(spi_read_delay_str, "%u - SPI read delay:", first_imu_parameter+N_IMU_Connected
 6226              		.loc 1 1283 0
 6227 09e8 B7F80836 		ldrh	r3, [r7, #1544]
 6228 09ec 364A     		ldr	r2, .L379+12
 6229 09ee 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6230 09f0 1A44     		add	r2, r2, r3
 6231 09f2 07F18403 		add	r3, r7, #132
 6232 09f6 3549     		ldr	r1, .L379+16
 6233 09f8 1846     		mov	r0, r3
 6234 09fa FFF7FEFF 		bl	sprintf
1284:..\src/command_processing.c ****             packet_data[2+start_byte] = TYPE_FLAG;
 6235              		.loc 1 1284 0
 6236 09fe B7F80436 		ldrh	r3, [r7, #1540]
 6237 0a02 0233     		adds	r3, r3, #2
 6238 0a04 07F58C72 		add	r2, r7, #280
 6239 0a08 0021     		movs	r1, #0
 6240 0a0a D154     		strb	r1, [r2, r3]
1285:..\src/command_processing.c ****             packet_data[3+start_byte] = 1;
 6241              		.loc 1 1285 0
 6242 0a0c B7F80436 		ldrh	r3, [r7, #1540]
 6243 0a10 0333     		adds	r3, r3, #3
 6244 0a12 07F58C72 		add	r2, r7, #280
 6245 0a16 0121     		movs	r1, #1
 6246 0a18 D154     		strb	r1, [r2, r3]
1286:..\src/command_processing.c ****             packet_data[4+start_byte] = c_mem.SPI_read_delay;
 6247              		.loc 1 1286 0
 6248 0a1a B7F80436 		ldrh	r3, [r7, #1540]
 6249 0a1e 0433     		adds	r3, r3, #4
 6250 0a20 284A     		ldr	r2, .L379+8
 6251 0a22 92F82011 		ldrb	r1, [r2, #288]	@ zero_extendqisi2
 6252 0a26 07F58C72 		add	r2, r7, #280
 6253 0a2a D154     		strb	r1, [r2, r3]
1287:..\src/command_processing.c ****             switch(c_mem.SPI_read_delay) {
 6254              		.loc 1 1287 0
 6255 0a2c 254B     		ldr	r3, .L379+8
 6256 0a2e 93F82031 		ldrb	r3, [r3, #288]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 155


 6257 0a32 012B     		cmp	r3, #1
 6258 0a34 17D0     		beq	.L358
 6259 0a36 022B     		cmp	r3, #2
 6260 0a38 28D0     		beq	.L359
 6261 0a3a 002B     		cmp	r3, #0
 6262 0a3c 00D0     		beq	.L360
1288:..\src/command_processing.c ****                 case 0: 
1289:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " None"); 
1290:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1291:..\src/command_processing.c ****                     break;
1292:..\src/command_processing.c ****                 case 1: 
1293:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " Low"); 
1294:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
1295:..\src/command_processing.c ****                     break;
1296:..\src/command_processing.c ****                 case 2: 
1297:..\src/command_processing.c ****                     strcat(spi_read_delay_str, " High");
1298:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
1299:..\src/command_processing.c ****                     break;
1300:..\src/command_processing.c ****                 default:
1301:..\src/command_processing.c ****                     break;
 6263              		.loc 1 1301 0
 6264 0a3e 38E0     		b	.L361
 6265              	.L360:
1289:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 6266              		.loc 1 1289 0
 6267 0a40 07F18403 		add	r3, r7, #132
 6268 0a44 1846     		mov	r0, r3
 6269 0a46 FFF7FEFF 		bl	strlen
 6270 0a4a 0346     		mov	r3, r0
 6271 0a4c 1A46     		mov	r2, r3
 6272 0a4e 07F18403 		add	r3, r7, #132
 6273 0a52 1344     		add	r3, r3, r2
 6274 0a54 1E4A     		ldr	r2, .L379+20
 6275 0a56 1068     		ldr	r0, [r2]	@ unaligned
 6276 0a58 1860     		str	r0, [r3]	@ unaligned
 6277 0a5a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6278 0a5c 9A80     		strh	r2, [r3, #4]	@ unaligned
1290:..\src/command_processing.c ****                     break;
 6279              		.loc 1 1290 0
 6280 0a5e 1A23     		movs	r3, #26
 6281 0a60 87F80D36 		strb	r3, [r7, #1549]
1291:..\src/command_processing.c ****                 case 1: 
 6282              		.loc 1 1291 0
 6283 0a64 25E0     		b	.L361
 6284              	.L358:
1293:..\src/command_processing.c ****                     spi_read_delay_str_len = 25;
 6285              		.loc 1 1293 0
 6286 0a66 07F18403 		add	r3, r7, #132
 6287 0a6a 1846     		mov	r0, r3
 6288 0a6c FFF7FEFF 		bl	strlen
 6289 0a70 0346     		mov	r3, r0
 6290 0a72 1A46     		mov	r2, r3
 6291 0a74 07F18403 		add	r3, r7, #132
 6292 0a78 1344     		add	r3, r3, r2
 6293 0a7a 164A     		ldr	r2, .L379+24
 6294 0a7c 1068     		ldr	r0, [r2]	@ unaligned
 6295 0a7e 1860     		str	r0, [r3]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 156


 6296 0a80 1279     		ldrb	r2, [r2, #4]
 6297 0a82 1A71     		strb	r2, [r3, #4]
1294:..\src/command_processing.c ****                     break;
 6298              		.loc 1 1294 0
 6299 0a84 1923     		movs	r3, #25
 6300 0a86 87F80D36 		strb	r3, [r7, #1549]
1295:..\src/command_processing.c ****                 case 2: 
 6301              		.loc 1 1295 0
 6302 0a8a 12E0     		b	.L361
 6303              	.L359:
1297:..\src/command_processing.c ****                     spi_read_delay_str_len = 26;
 6304              		.loc 1 1297 0
 6305 0a8c 07F18403 		add	r3, r7, #132
 6306 0a90 1846     		mov	r0, r3
 6307 0a92 FFF7FEFF 		bl	strlen
 6308 0a96 0346     		mov	r3, r0
 6309 0a98 1A46     		mov	r2, r3
 6310 0a9a 07F18403 		add	r3, r7, #132
 6311 0a9e 1344     		add	r3, r3, r2
 6312 0aa0 0D4A     		ldr	r2, .L379+28
 6313 0aa2 1068     		ldr	r0, [r2]	@ unaligned
 6314 0aa4 1860     		str	r0, [r3]	@ unaligned
 6315 0aa6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 6316 0aa8 9A80     		strh	r2, [r3, #4]	@ unaligned
1298:..\src/command_processing.c ****                     break;
 6317              		.loc 1 1298 0
 6318 0aaa 1A23     		movs	r3, #26
 6319 0aac 87F80D36 		strb	r3, [r7, #1549]
1299:..\src/command_processing.c ****                 default:
 6320              		.loc 1 1299 0
 6321 0ab0 00BF     		nop
 6322              	.L361:
1302:..\src/command_processing.c ****             }            
1303:..\src/command_processing.c ****             for(i = spi_read_delay_str_len; i != 0; i--)
 6323              		.loc 1 1303 0
 6324 0ab2 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 6325 0ab6 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6326 0aba 28E0     		b	.L362
 6327              	.L380:
 6328              		.align	2
 6329              	.L379:
 6330 0abc 00000000 		.word	IMU_connected
 6331 0ac0 E4060000 		.word	.LC70
 6332 0ac4 00000000 		.word	c_mem
 6333 0ac8 00000000 		.word	N_IMU_Connected
 6334 0acc 00070000 		.word	.LC71
 6335 0ad0 18070000 		.word	.LC72
 6336 0ad4 20070000 		.word	.LC73
 6337 0ad8 28070000 		.word	.LC74
 6338              	.L363:
1304:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6339              		.loc 1 1304 0 discriminator 3
 6340 0adc B7F80436 		ldrh	r3, [r7, #1540]
 6341 0ae0 5A1D     		adds	r2, r3, #5
 6342 0ae2 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 6343 0ae6 1A44     		add	r2, r2, r3
 6344 0ae8 B7F81436 		ldrh	r3, [r7, #1556]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 157


 6345 0aec D31A     		subs	r3, r2, r3
 6346 0aee 97F80D16 		ldrb	r1, [r7, #1549]	@ zero_extendqisi2
 6347 0af2 B7F81426 		ldrh	r2, [r7, #1556]
 6348 0af6 8A1A     		subs	r2, r1, r2
 6349 0af8 07F18401 		add	r1, r7, #132
 6350 0afc 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6351 0afe 07F58C72 		add	r2, r7, #280
 6352 0b02 D154     		strb	r1, [r2, r3]
1303:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6353              		.loc 1 1303 0 discriminator 3
 6354 0b04 B7F81436 		ldrh	r3, [r7, #1556]
 6355 0b08 013B     		subs	r3, r3, #1
 6356 0b0a A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6357              	.L362:
1303:..\src/command_processing.c ****                 packet_data[5+start_byte + spi_read_delay_str_len - i] = spi_read_delay_str[spi_rea
 6358              		.loc 1 1303 0 is_stmt 0 discriminator 1
 6359 0b0e B7F81436 		ldrh	r3, [r7, #1556]
 6360 0b12 002B     		cmp	r3, #0
 6361 0b14 E2D1     		bne	.L363
1305:..\src/command_processing.c ****             //The following byte indicates the number of menus at the end of the packet to send
1306:..\src/command_processing.c ****             packet_data[5+start_byte + spi_read_delay_str_len] = 1;
 6362              		.loc 1 1306 0 is_stmt 1
 6363 0b16 B7F80436 		ldrh	r3, [r7, #1540]
 6364 0b1a 5A1D     		adds	r2, r3, #5
 6365 0b1c 97F80D36 		ldrb	r3, [r7, #1549]	@ zero_extendqisi2
 6366 0b20 1344     		add	r3, r3, r2
 6367 0b22 07F58C72 		add	r2, r7, #280
 6368 0b26 0121     		movs	r1, #1
 6369 0b28 D154     		strb	r1, [r2, r3]
1307:..\src/command_processing.c ****                   
1308:..\src/command_processing.c ****             
1309:..\src/command_processing.c ****             /*------------PARAMETERS MENU-----------*/
1310:..\src/command_processing.c ****             start_byte = start_byte + PARAM_BYTE_SLOT;
 6370              		.loc 1 1310 0
 6371 0b2a B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6372 0b2e 3233     		adds	r3, r3, #50
 6373 0b30 A7F80436 		strh	r3, [r7, #1540]	@ movhi
1311:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6374              		.loc 1 1311 0
 6375 0b34 97F8FE35 		ldrb	r3, [r7, #1534]	@ zero_extendqisi2
 6376 0b38 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6377 0b3c 1AE0     		b	.L364
 6378              	.L365:
1312:..\src/command_processing.c ****                 packet_data[(uint16)(2 + start_byte) + spi_delay_menu_len - i] = spi_delay_menu[spi
 6379              		.loc 1 1312 0 discriminator 3
 6380 0b3e B7F80436 		ldrh	r3, [r7, #1540]	@ movhi
 6381 0b42 0233     		adds	r3, r3, #2
 6382 0b44 9BB2     		uxth	r3, r3
 6383 0b46 1A46     		mov	r2, r3
 6384 0b48 97F8FE35 		ldrb	r3, [r7, #1534]	@ zero_extendqisi2
 6385 0b4c 1A44     		add	r2, r2, r3
 6386 0b4e B7F81436 		ldrh	r3, [r7, #1556]
 6387 0b52 D31A     		subs	r3, r2, r3
 6388 0b54 97F8FE15 		ldrb	r1, [r7, #1534]	@ zero_extendqisi2
 6389 0b58 B7F81426 		ldrh	r2, [r7, #1556]
 6390 0b5c 8A1A     		subs	r2, r1, r2
 6391 0b5e 07F10C01 		add	r1, r7, #12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 158


 6392 0b62 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6393 0b64 07F58C72 		add	r2, r7, #280
 6394 0b68 D154     		strb	r1, [r2, r3]
1311:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6395              		.loc 1 1311 0 discriminator 3
 6396 0b6a B7F81436 		ldrh	r3, [r7, #1556]
 6397 0b6e 013B     		subs	r3, r3, #1
 6398 0b70 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6399              	.L364:
1311:..\src/command_processing.c ****             for(i = spi_delay_menu_len; i!= 0; i--)
 6400              		.loc 1 1311 0 is_stmt 0 discriminator 1
 6401 0b74 B7F81436 		ldrh	r3, [r7, #1556]
 6402 0b78 002B     		cmp	r3, #0
 6403 0b7a E0D1     		bne	.L365
1313:..\src/command_processing.c **** 
1314:..\src/command_processing.c ****             packet_data[packet_length - 1] = LCRChecksum(packet_data,packet_length - 1);
 6404              		.loc 1 1314 0 is_stmt 1
 6405 0b7c B7F80636 		ldrh	r3, [r7, #1542]
 6406 0b80 5C1E     		subs	r4, r3, #1
 6407 0b82 B7F80636 		ldrh	r3, [r7, #1542]	@ movhi
 6408 0b86 DBB2     		uxtb	r3, r3
 6409 0b88 013B     		subs	r3, r3, #1
 6410 0b8a DAB2     		uxtb	r2, r3
 6411 0b8c 07F58C73 		add	r3, r7, #280
 6412 0b90 1146     		mov	r1, r2
 6413 0b92 1846     		mov	r0, r3
 6414 0b94 FFF7FEFF 		bl	LCRChecksum
 6415 0b98 0346     		mov	r3, r0
 6416 0b9a 1A46     		mov	r2, r3
 6417 0b9c 07F58C73 		add	r3, r7, #280
 6418 0ba0 1A55     		strb	r2, [r3, r4]
1315:..\src/command_processing.c ****             commWrite(packet_data, packet_length);
 6419              		.loc 1 1315 0
 6420 0ba2 B7F80626 		ldrh	r2, [r7, #1542]
 6421 0ba6 07F58C73 		add	r3, r7, #280
 6422 0baa 1146     		mov	r1, r2
 6423 0bac 1846     		mov	r0, r3
 6424 0bae FFF7FEFF 		bl	commWrite
1316:..\src/command_processing.c ****             UART_RS485_ClearTxBuffer();
 6425              		.loc 1 1316 0
 6426 0bb2 FFF7FEFF 		bl	UART_RS485_ClearTxBuffer
1317:..\src/command_processing.c ****         break;
 6427              		.loc 1 1317 0
 6428 0bb6 08E1     		b	.L366
 6429              	.L373:
1318:..\src/command_processing.c **** 
1319:..\src/command_processing.c **** //=========================================================     other_params
1320:..\src/command_processing.c ****         default: 
1321:..\src/command_processing.c ****             
1322:..\src/command_processing.c ****             if (index < first_imu_parameter-1)
 6430              		.loc 1 1322 0
 6431 0bb8 BB1D     		adds	r3, r7, #6
 6432 0bba 1A88     		ldrh	r2, [r3]
 6433 0bbc B7F80836 		ldrh	r3, [r7, #1544]
 6434 0bc0 013B     		subs	r3, r3, #1
 6435 0bc2 9A42     		cmp	r2, r3
 6436 0bc4 C0F20081 		blt	.L374
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 159


1323:..\src/command_processing.c ****                 break;
1324:..\src/command_processing.c ****             
1325:..\src/command_processing.c ****             if (index == first_imu_parameter+N_IMU_Connected) {
 6437              		.loc 1 1325 0
 6438 0bc8 BB1D     		adds	r3, r7, #6
 6439 0bca 1A88     		ldrh	r2, [r3]
 6440 0bcc B7F80836 		ldrh	r3, [r7, #1544]
 6441 0bd0 8049     		ldr	r1, .L381
 6442 0bd2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 6443 0bd4 0B44     		add	r3, r3, r1
 6444 0bd6 9A42     		cmp	r2, r3
 6445 0bd8 05D1     		bne	.L368
1326:..\src/command_processing.c ****                 g_mem.SPI_read_delay = g_rx.buffer[3];  //SPI read delay - uint8
 6446              		.loc 1 1326 0
 6447 0bda 7F4B     		ldr	r3, .L381+4
 6448 0bdc DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 6449 0bde 7F4B     		ldr	r3, .L381+8
 6450 0be0 83F82021 		strb	r2, [r3, #288]
1327:..\src/command_processing.c ****                 break;
 6451              		.loc 1 1327 0
 6452 0be4 F1E0     		b	.L366
 6453              	.L368:
1328:..\src/command_processing.c ****             }
1329:..\src/command_processing.c ****             
1330:..\src/command_processing.c ****             if (index == first_imu_parameter-1) {
 6454              		.loc 1 1330 0
 6455 0be6 BB1D     		adds	r3, r7, #6
 6456 0be8 1A88     		ldrh	r2, [r3]
 6457 0bea B7F80836 		ldrh	r3, [r7, #1544]
 6458 0bee 013B     		subs	r3, r3, #1
 6459 0bf0 9A42     		cmp	r2, r3
 6460 0bf2 04D1     		bne	.L369
1331:..\src/command_processing.c ****                 g_mem.id = g_rx.buffer[3];          //ID - uint8
 6461              		.loc 1 1331 0
 6462 0bf4 784B     		ldr	r3, .L381+4
 6463 0bf6 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 6464 0bf8 784B     		ldr	r3, .L381+8
 6465 0bfa 5A70     		strb	r2, [r3, #1]
1332:..\src/command_processing.c ****             }
1333:..\src/command_processing.c ****             else {
1334:..\src/command_processing.c ****             
1335:..\src/command_processing.c ****                 //Set Imu table (index > = first_imu_parameter)
1336:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][0] = g_rx.buffer[3];
1337:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
1338:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
1339:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
1340:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
1341:..\src/command_processing.c ****                 
1342:..\src/command_processing.c ****                 // Recompute IMU packets dimension
1343:..\src/command_processing.c ****                 imus_data_size = 1; //header    
1344:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
1345:..\src/command_processing.c ****                 {
1346:..\src/command_processing.c ****                     single_imu_size[IMU_connected[i]] = 1 + 6*g_mem.IMU_conf[IMU_connected[i]][0] +
1347:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
1348:..\src/command_processing.c ****                 }
1349:..\src/command_processing.c ****                 imus_data_size = imus_data_size + 1;    //checksum
1350:..\src/command_processing.c ****             
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 160


1351:..\src/command_processing.c ****             }
1352:..\src/command_processing.c ****             
1353:..\src/command_processing.c ****         break;
 6466              		.loc 1 1353 0
 6467 0bfc E5E0     		b	.L366
 6468              	.L369:
1336:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][1] = g_rx.buffer[4];
 6469              		.loc 1 1336 0
 6470 0bfe BB1D     		adds	r3, r7, #6
 6471 0c00 1A88     		ldrh	r2, [r3]
 6472 0c02 B7F80836 		ldrh	r3, [r7, #1544]
 6473 0c06 D31A     		subs	r3, r2, r3
 6474 0c08 754A     		ldr	r2, .L381+12
 6475 0c0a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6476 0c0c 1946     		mov	r1, r3
 6477 0c0e 724B     		ldr	r3, .L381+4
 6478 0c10 D878     		ldrb	r0, [r3, #3]	@ zero_extendqisi2
 6479 0c12 724A     		ldr	r2, .L381+8
 6480 0c14 0B46     		mov	r3, r1
 6481 0c16 9B00     		lsls	r3, r3, #2
 6482 0c18 0B44     		add	r3, r3, r1
 6483 0c1a 1344     		add	r3, r3, r2
 6484 0c1c 03F22113 		addw	r3, r3, #289
 6485 0c20 0246     		mov	r2, r0
 6486 0c22 1A70     		strb	r2, [r3]
1337:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][2] = g_rx.buffer[5];
 6487              		.loc 1 1337 0
 6488 0c24 BB1D     		adds	r3, r7, #6
 6489 0c26 1A88     		ldrh	r2, [r3]
 6490 0c28 B7F80836 		ldrh	r3, [r7, #1544]
 6491 0c2c D31A     		subs	r3, r2, r3
 6492 0c2e 6C4A     		ldr	r2, .L381+12
 6493 0c30 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6494 0c32 1946     		mov	r1, r3
 6495 0c34 684B     		ldr	r3, .L381+4
 6496 0c36 1879     		ldrb	r0, [r3, #4]	@ zero_extendqisi2
 6497 0c38 684A     		ldr	r2, .L381+8
 6498 0c3a 0B46     		mov	r3, r1
 6499 0c3c 9B00     		lsls	r3, r3, #2
 6500 0c3e 0B44     		add	r3, r3, r1
 6501 0c40 1344     		add	r3, r3, r2
 6502 0c42 03F59173 		add	r3, r3, #290
 6503 0c46 0246     		mov	r2, r0
 6504 0c48 1A70     		strb	r2, [r3]
1338:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][3] = g_rx.buffer[6];
 6505              		.loc 1 1338 0
 6506 0c4a BB1D     		adds	r3, r7, #6
 6507 0c4c 1A88     		ldrh	r2, [r3]
 6508 0c4e B7F80836 		ldrh	r3, [r7, #1544]
 6509 0c52 D31A     		subs	r3, r2, r3
 6510 0c54 624A     		ldr	r2, .L381+12
 6511 0c56 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6512 0c58 1946     		mov	r1, r3
 6513 0c5a 5F4B     		ldr	r3, .L381+4
 6514 0c5c 5879     		ldrb	r0, [r3, #5]	@ zero_extendqisi2
 6515 0c5e 5F4A     		ldr	r2, .L381+8
 6516 0c60 0B46     		mov	r3, r1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 161


 6517 0c62 9B00     		lsls	r3, r3, #2
 6518 0c64 0B44     		add	r3, r3, r1
 6519 0c66 1344     		add	r3, r3, r2
 6520 0c68 03F22313 		addw	r3, r3, #291
 6521 0c6c 0246     		mov	r2, r0
 6522 0c6e 1A70     		strb	r2, [r3]
1339:..\src/command_processing.c ****                 g_mem.IMU_conf[IMU_connected[index-first_imu_parameter]][4] = g_rx.buffer[7];
 6523              		.loc 1 1339 0
 6524 0c70 BB1D     		adds	r3, r7, #6
 6525 0c72 1A88     		ldrh	r2, [r3]
 6526 0c74 B7F80836 		ldrh	r3, [r7, #1544]
 6527 0c78 D31A     		subs	r3, r2, r3
 6528 0c7a 594A     		ldr	r2, .L381+12
 6529 0c7c D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6530 0c7e 1946     		mov	r1, r3
 6531 0c80 554B     		ldr	r3, .L381+4
 6532 0c82 9879     		ldrb	r0, [r3, #6]	@ zero_extendqisi2
 6533 0c84 554A     		ldr	r2, .L381+8
 6534 0c86 0B46     		mov	r3, r1
 6535 0c88 9B00     		lsls	r3, r3, #2
 6536 0c8a 0B44     		add	r3, r3, r1
 6537 0c8c 1344     		add	r3, r3, r2
 6538 0c8e 03F59273 		add	r3, r3, #292
 6539 0c92 0246     		mov	r2, r0
 6540 0c94 1A70     		strb	r2, [r3]
1340:..\src/command_processing.c ****                 
 6541              		.loc 1 1340 0
 6542 0c96 BB1D     		adds	r3, r7, #6
 6543 0c98 1A88     		ldrh	r2, [r3]
 6544 0c9a B7F80836 		ldrh	r3, [r7, #1544]
 6545 0c9e D31A     		subs	r3, r2, r3
 6546 0ca0 4F4A     		ldr	r2, .L381+12
 6547 0ca2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6548 0ca4 1946     		mov	r1, r3
 6549 0ca6 4C4B     		ldr	r3, .L381+4
 6550 0ca8 D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 6551 0caa 4C4A     		ldr	r2, .L381+8
 6552 0cac 0B46     		mov	r3, r1
 6553 0cae 9B00     		lsls	r3, r3, #2
 6554 0cb0 0B44     		add	r3, r3, r1
 6555 0cb2 1344     		add	r3, r3, r2
 6556 0cb4 03F22513 		addw	r3, r3, #293
 6557 0cb8 0246     		mov	r2, r0
 6558 0cba 1A70     		strb	r2, [r3]
1343:..\src/command_processing.c ****                 for (i = 0; i < N_IMU_Connected; i++)
 6559              		.loc 1 1343 0
 6560 0cbc 494B     		ldr	r3, .L381+16
 6561 0cbe 0122     		movs	r2, #1
 6562 0cc0 1A60     		str	r2, [r3]
1344:..\src/command_processing.c ****                 {
 6563              		.loc 1 1344 0
 6564 0cc2 0023     		movs	r3, #0
 6565 0cc4 A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6566 0cc8 71E0     		b	.L371
 6567              	.L372:
1346:..\src/command_processing.c ****                     imus_data_size = imus_data_size + single_imu_size[IMU_connected[i]];
 6568              		.loc 1 1346 0 discriminator 3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 162


 6569 0cca B7F81436 		ldrh	r3, [r7, #1556]
 6570 0cce 444A     		ldr	r2, .L381+12
 6571 0cd0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6572 0cd2 1C46     		mov	r4, r3
 6573 0cd4 B7F81436 		ldrh	r3, [r7, #1556]
 6574 0cd8 414A     		ldr	r2, .L381+12
 6575 0cda D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6576 0cdc 1946     		mov	r1, r3
 6577 0cde 3F4A     		ldr	r2, .L381+8
 6578 0ce0 0B46     		mov	r3, r1
 6579 0ce2 9B00     		lsls	r3, r3, #2
 6580 0ce4 0B44     		add	r3, r3, r1
 6581 0ce6 1344     		add	r3, r3, r2
 6582 0ce8 03F22113 		addw	r3, r3, #289
 6583 0cec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6584 0cee 1A46     		mov	r2, r3
 6585 0cf0 1346     		mov	r3, r2
 6586 0cf2 5B00     		lsls	r3, r3, #1
 6587 0cf4 1344     		add	r3, r3, r2
 6588 0cf6 5B00     		lsls	r3, r3, #1
 6589 0cf8 5A1C     		adds	r2, r3, #1
 6590 0cfa B7F81436 		ldrh	r3, [r7, #1556]
 6591 0cfe 3849     		ldr	r1, .L381+12
 6592 0d00 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6593 0d02 1846     		mov	r0, r3
 6594 0d04 3549     		ldr	r1, .L381+8
 6595 0d06 0346     		mov	r3, r0
 6596 0d08 9B00     		lsls	r3, r3, #2
 6597 0d0a 0344     		add	r3, r3, r0
 6598 0d0c 0B44     		add	r3, r3, r1
 6599 0d0e 03F59173 		add	r3, r3, #290
 6600 0d12 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6601 0d14 1946     		mov	r1, r3
 6602 0d16 0B46     		mov	r3, r1
 6603 0d18 5B00     		lsls	r3, r3, #1
 6604 0d1a 0B44     		add	r3, r3, r1
 6605 0d1c 5B00     		lsls	r3, r3, #1
 6606 0d1e 1A44     		add	r2, r2, r3
 6607 0d20 B7F81436 		ldrh	r3, [r7, #1556]
 6608 0d24 2E49     		ldr	r1, .L381+12
 6609 0d26 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6610 0d28 1846     		mov	r0, r3
 6611 0d2a 2C49     		ldr	r1, .L381+8
 6612 0d2c 0346     		mov	r3, r0
 6613 0d2e 9B00     		lsls	r3, r3, #2
 6614 0d30 0344     		add	r3, r3, r0
 6615 0d32 0B44     		add	r3, r3, r1
 6616 0d34 03F22313 		addw	r3, r3, #291
 6617 0d38 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6618 0d3a 1946     		mov	r1, r3
 6619 0d3c 0B46     		mov	r3, r1
 6620 0d3e 5B00     		lsls	r3, r3, #1
 6621 0d40 0B44     		add	r3, r3, r1
 6622 0d42 5B00     		lsls	r3, r3, #1
 6623 0d44 1A44     		add	r2, r2, r3
 6624 0d46 B7F81436 		ldrh	r3, [r7, #1556]
 6625 0d4a 2549     		ldr	r1, .L381+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 163


 6626 0d4c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6627 0d4e 1846     		mov	r0, r3
 6628 0d50 2249     		ldr	r1, .L381+8
 6629 0d52 0346     		mov	r3, r0
 6630 0d54 9B00     		lsls	r3, r3, #2
 6631 0d56 0344     		add	r3, r3, r0
 6632 0d58 0B44     		add	r3, r3, r1
 6633 0d5a 03F59273 		add	r3, r3, #292
 6634 0d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6635 0d60 1B01     		lsls	r3, r3, #4
 6636 0d62 1A44     		add	r2, r2, r3
 6637 0d64 B7F81436 		ldrh	r3, [r7, #1556]
 6638 0d68 1D49     		ldr	r1, .L381+12
 6639 0d6a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6640 0d6c 1846     		mov	r0, r3
 6641 0d6e 1B49     		ldr	r1, .L381+8
 6642 0d70 0346     		mov	r3, r0
 6643 0d72 9B00     		lsls	r3, r3, #2
 6644 0d74 0344     		add	r3, r3, r0
 6645 0d76 0B44     		add	r3, r3, r1
 6646 0d78 03F22513 		addw	r3, r3, #293
 6647 0d7c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6648 0d7e 5B00     		lsls	r3, r3, #1
 6649 0d80 1344     		add	r3, r3, r2
 6650 0d82 0133     		adds	r3, r3, #1
 6651 0d84 184A     		ldr	r2, .L381+20
 6652 0d86 42F82430 		str	r3, [r2, r4, lsl #2]
1347:..\src/command_processing.c ****                 }
 6653              		.loc 1 1347 0 discriminator 3
 6654 0d8a B7F81436 		ldrh	r3, [r7, #1556]
 6655 0d8e 144A     		ldr	r2, .L381+12
 6656 0d90 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 6657 0d92 1A46     		mov	r2, r3
 6658 0d94 144B     		ldr	r3, .L381+20
 6659 0d96 53F82220 		ldr	r2, [r3, r2, lsl #2]
 6660 0d9a 124B     		ldr	r3, .L381+16
 6661 0d9c 1B68     		ldr	r3, [r3]
 6662 0d9e 1344     		add	r3, r3, r2
 6663 0da0 104A     		ldr	r2, .L381+16
 6664 0da2 1360     		str	r3, [r2]
1344:..\src/command_processing.c ****                 {
 6665              		.loc 1 1344 0 discriminator 3
 6666 0da4 B7F81436 		ldrh	r3, [r7, #1556]
 6667 0da8 0133     		adds	r3, r3, #1
 6668 0daa A7F81436 		strh	r3, [r7, #1556]	@ movhi
 6669              	.L371:
1344:..\src/command_processing.c ****                 {
 6670              		.loc 1 1344 0 is_stmt 0 discriminator 1
 6671 0dae 094B     		ldr	r3, .L381
 6672 0db0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6673 0db2 9BB2     		uxth	r3, r3
 6674 0db4 B7F81426 		ldrh	r2, [r7, #1556]
 6675 0db8 9A42     		cmp	r2, r3
 6676 0dba 86D3     		bcc	.L372
1349:..\src/command_processing.c ****             
 6677              		.loc 1 1349 0 is_stmt 1
 6678 0dbc 094B     		ldr	r3, .L381+16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 164


 6679 0dbe 1B68     		ldr	r3, [r3]
 6680 0dc0 0133     		adds	r3, r3, #1
 6681 0dc2 084A     		ldr	r2, .L381+16
 6682 0dc4 1360     		str	r3, [r2]
 6683              		.loc 1 1353 0
 6684 0dc6 00E0     		b	.L366
 6685              	.L374:
1323:..\src/command_processing.c ****             
 6686              		.loc 1 1323 0
 6687 0dc8 00BF     		nop
 6688              	.L366:
1354:..\src/command_processing.c ****     }
1355:..\src/command_processing.c **** }
 6689              		.loc 1 1355 0 discriminator 1
 6690 0dca 00BF     		nop
 6691 0dcc 07F5C367 		add	r7, r7, #1560
 6692              		.cfi_def_cfa_offset 16
 6693 0dd0 BD46     		mov	sp, r7
 6694              		.cfi_def_cfa_register 13
 6695              		@ sp needed
 6696 0dd2 B0BD     		pop	{r4, r5, r7, pc}
 6697              	.L382:
 6698              		.align	2
 6699              	.L381:
 6700 0dd4 00000000 		.word	N_IMU_Connected
 6701 0dd8 00000000 		.word	g_rx
 6702 0ddc 00000000 		.word	g_mem
 6703 0de0 00000000 		.word	IMU_connected
 6704 0de4 00000000 		.word	imus_data_size
 6705 0de8 00000000 		.word	single_imu_size
 6706              		.cfi_endproc
 6707              	.LFE69:
 6708              		.size	get_IMU_param_list, .-get_IMU_param_list
 6709              		.section	.text.setZeros,"ax",%progbits
 6710              		.align	2
 6711              		.global	setZeros
 6712              		.thumb
 6713              		.thumb_func
 6714              		.type	setZeros, %function
 6715              	setZeros:
 6716              	.LFB70:
1356:..\src/command_processing.c **** 
1357:..\src/command_processing.c **** //==============================================================================
1358:..\src/command_processing.c **** //                                                            COMMAND SET ZEROS
1359:..\src/command_processing.c **** //==============================================================================
1360:..\src/command_processing.c **** 
1361:..\src/command_processing.c **** void setZeros()
1362:..\src/command_processing.c **** {
 6717              		.loc 1 1362 0
 6718              		.cfi_startproc
 6719              		@ args = 0, pretend = 0, frame = 8
 6720              		@ frame_needed = 1, uses_anonymous_args = 0
 6721 0000 80B5     		push	{r7, lr}
 6722              		.cfi_def_cfa_offset 8
 6723              		.cfi_offset 7, -8
 6724              		.cfi_offset 14, -4
 6725 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 165


 6726              		.cfi_def_cfa_offset 16
 6727 0004 00AF     		add	r7, sp, #0
 6728              		.cfi_def_cfa_register 7
1363:..\src/command_processing.c ****     uint8 CYDATA i;        // iterator
1364:..\src/command_processing.c ****     
1365:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i) {
 6729              		.loc 1 1365 0
 6730 0006 0023     		movs	r3, #0
 6731 0008 FB71     		strb	r3, [r7, #7]
 6732 000a 12E0     		b	.L384
 6733              	.L385:
1366:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 6734              		.loc 1 1366 0 discriminator 3
 6735 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6736 000e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 6737 0010 0E49     		ldr	r1, .L386
 6738 0012 51F82220 		ldr	r2, [r1, r2, lsl #2]
 6739 0016 1146     		mov	r1, r2
 6740 0018 0D4A     		ldr	r2, .L386+4
 6741 001a 0E33     		adds	r3, r3, #14
 6742 001c 9B00     		lsls	r3, r3, #2
 6743 001e 1344     		add	r3, r3, r2
 6744 0020 5960     		str	r1, [r3, #4]
1367:..\src/command_processing.c ****         g_meas.rot[i] = 0;
 6745              		.loc 1 1367 0 discriminator 3
 6746 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6747 0024 0B4A     		ldr	r2, .L386+8
 6748 0026 1344     		add	r3, r3, r2
 6749 0028 0022     		movs	r2, #0
 6750 002a 1A75     		strb	r2, [r3, #20]
1365:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 6751              		.loc 1 1365 0 discriminator 3
 6752 002c FB79     		ldrb	r3, [r7, #7]
 6753 002e 0133     		adds	r3, r3, #1
 6754 0030 FB71     		strb	r3, [r7, #7]
 6755              	.L384:
1365:..\src/command_processing.c ****         g_mem.m_off[i] = data_encoder_raw[i];
 6756              		.loc 1 1365 0 is_stmt 0 discriminator 1
 6757 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 6758 0034 022B     		cmp	r3, #2
 6759 0036 E9D9     		bls	.L385
1368:..\src/command_processing.c ****     }
1369:..\src/command_processing.c ****     reset_last_value_flag = 1;
 6760              		.loc 1 1369 0 is_stmt 1
 6761 0038 074B     		ldr	r3, .L386+12
 6762 003a 0122     		movs	r2, #1
 6763 003c 1A70     		strb	r2, [r3]
1370:..\src/command_processing.c **** 
1371:..\src/command_processing.c ****     sendAcknowledgment(ACK_OK);
 6764              		.loc 1 1371 0
 6765 003e 0120     		movs	r0, #1
 6766 0040 FFF7FEFF 		bl	sendAcknowledgment
1372:..\src/command_processing.c **** }
 6767              		.loc 1 1372 0
 6768 0044 00BF     		nop
 6769 0046 0837     		adds	r7, r7, #8
 6770              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 166


 6771 0048 BD46     		mov	sp, r7
 6772              		.cfi_def_cfa_register 13
 6773              		@ sp needed
 6774 004a 80BD     		pop	{r7, pc}
 6775              	.L387:
 6776              		.align	2
 6777              	.L386:
 6778 004c 00000000 		.word	data_encoder_raw
 6779 0050 00000000 		.word	g_mem
 6780 0054 00000000 		.word	g_meas
 6781 0058 00000000 		.word	reset_last_value_flag
 6782              		.cfi_endproc
 6783              	.LFE70:
 6784              		.size	setZeros, .-setZeros
 6785              		.section	.rodata
 6786              		.align	2
 6787              	.LC75:
 6788 0760 0D0A00   		.ascii	"\015\012\000"
 6789 0763 00       		.align	2
 6790              	.LC76:
 6791 0764 4669726D 		.ascii	"Firmware version: \000"
 6791      77617265 
 6791      20766572 
 6791      73696F6E 
 6791      3A2000
 6792 0777 00       		.align	2
 6793              	.LC77:
 6794 0778 536F6674 		.ascii	"SoftHand PRO firmware v. 1.4.1 (PSoC5)\000"
 6794      48616E64 
 6794      2050524F 
 6794      20666972 
 6794      6D776172 
 6795 079f 00       		.align	2
 6796              	.LC78:
 6797 07a0 2E0D0A0D 		.ascii	".\015\012\015\012\000"
 6797      0A00
 6798 07a6 0000     		.align	2
 6799              	.LC79:
 6800 07a8 44455649 		.ascii	"DEVICE INFO\015\012\000"
 6800      43452049 
 6800      4E464F0D 
 6800      0A00
 6801 07b6 0000     		.align	2
 6802              	.LC80:
 6803 07b8 49443A20 		.ascii	"ID: %d\015\012\000"
 6803      25640D0A 
 6803      00
 6804 07c1 000000   		.align	2
 6805              	.LC81:
 6806 07c4 48616E64 		.ascii	"Hand side: RIGHT\015\012\000"
 6806      20736964 
 6806      653A2052 
 6806      49474854 
 6806      0D0A00
 6807 07d7 00       		.align	2
 6808              	.LC82:
 6809 07d8 48616E64 		.ascii	"Hand side: LEFT\015\012\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 167


 6809      20736964 
 6809      653A204C 
 6809      4546540D 
 6809      0A00
 6810 07ea 0000     		.align	2
 6811              	.LC83:
 6812 07ec 50574D20 		.ascii	"PWM rescaling activation: \000"
 6812      72657363 
 6812      616C696E 
 6812      67206163 
 6812      74697661 
 6813 0807 00       		.align	2
 6814              	.LC84:
 6815 0808 5945530A 		.ascii	"YES\012\000"
 6815      00
 6816 080d 000000   		.align	2
 6817              	.LC85:
 6818 0810 4E4F0A00 		.ascii	"NO\012\000"
 6819              		.align	2
 6820              	.LC86:
 6821 0814 50574D20 		.ascii	"PWM Limit: %d\015\012\000"
 6821      4C696D69 
 6821      743A2025 
 6821      640D0A00 
 6822              		.align	2
 6823              	.LC87:
 6824 0824 4D4F544F 		.ascii	"MOTOR INFO\015\012\000"
 6824      5220494E 
 6824      464F0D0A 
 6824      00
 6825 0831 000000   		.align	2
 6826              	.LC88:
 6827 0834 4D6F746F 		.ascii	"Motor reference\000"
 6827      72207265 
 6827      66657265 
 6827      6E636500 
 6828              		.align	2
 6829              	.LC89:
 6830 0844 202D2043 		.ascii	" - Currents: \000"
 6830      75727265 
 6830      6E74733A 
 6830      2000
 6831 0852 0000     		.align	2
 6832              	.LC90:
 6833 0854 202D2050 		.ascii	" - Pwm: \000"
 6833      776D3A20 
 6833      00
 6834 085d 000000   		.align	2
 6835              	.LC91:
 6836 0860 202D2050 		.ascii	" - Position: \000"
 6836      6F736974 
 6836      696F6E3A 
 6836      2000
 6837 086e 0000     		.align	2
 6838              	.LC92:
 6839 0870 25642000 		.ascii	"%d \000"
 6840              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 168


 6841              	.LC93:
 6842 0874 4D6F746F 		.ascii	"Motor enabled: \000"
 6842      7220656E 
 6842      61626C65 
 6842      643A2000 
 6843              		.align	2
 6844              	.LC94:
 6845 0884 5945530D 		.ascii	"YES\015\012\000"
 6845      0A00
 6846 088a 0000     		.align	2
 6847              	.LC95:
 6848 088c 4E4F0D0A 		.ascii	"NO\015\012\000"
 6848      00
 6849 0891 000000   		.align	2
 6850              	.LC96:
 6851 0894 0D0A4D45 		.ascii	"\015\012MEASUREMENTS INFO\015\012\000"
 6851      41535552 
 6851      454D454E 
 6851      54532049 
 6851      4E464F0D 
 6852 08aa 0000     		.align	2
 6853              	.LC97:
 6854 08ac 53656E73 		.ascii	"Sensor value:\015\012\000"
 6854      6F722076 
 6854      616C7565 
 6854      3A0D0A00 
 6855              		.align	2
 6856              	.LC98:
 6857 08bc 2564202D 		.ascii	"%d -> %d\000"
 6857      3E202564 
 6857      00
 6858 08c5 000000   		.align	2
 6859              	.LC99:
 6860 08c8 42617474 		.ascii	"Battery Voltage (mV): %ld\000"
 6860      65727920 
 6860      566F6C74 
 6860      61676520 
 6860      286D5629 
 6861 08e2 0000     		.align	2
 6862              	.LC100:
 6863 08e4 46756C6C 		.ascii	"Full charge power tension (mV): %ld\000"
 6863      20636861 
 6863      72676520 
 6863      706F7765 
 6863      72207465 
 6864              		.align	2
 6865              	.LC101:
 6866 0908 43757272 		.ascii	"Current (mA): %ld\000"
 6866      656E7420 
 6866      286D4129 
 6866      3A20256C 
 6866      6400
 6867 091a 0000     		.align	2
 6868              	.LC102:
 6869 091c 0D0A4445 		.ascii	"\015\012DEVICE PARAMETERS\015\012\000"
 6869      56494345 
 6869      20504152 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 169


 6869      414D4554 
 6869      4552530D 
 6870 0932 0000     		.align	2
 6871              	.LC103:
 6872 0934 50494420 		.ascii	"PID Controller:\015\012\000"
 6872      436F6E74 
 6872      726F6C6C 
 6872      65723A0D 
 6872      0A00
 6873              		.global	__aeabi_i2d
 6874              		.global	__aeabi_ddiv
 6875 0946 0000     		.align	2
 6876              	.LC104:
 6877 0948 50202D3E 		.ascii	"P -> %f  \000"
 6877      20256620 
 6877      2000
 6878 0952 0000     		.align	2
 6879              	.LC105:
 6880 0954 49202D3E 		.ascii	"I -> %f  \000"
 6880      20256620 
 6880      2000
 6881 095e 0000     		.align	2
 6882              	.LC106:
 6883 0960 44202D3E 		.ascii	"D -> %f\015\012\000"
 6883      2025660D 
 6883      0A00
 6884 096a 0000     		.align	2
 6885              	.LC107:
 6886 096c 43757272 		.ascii	"Current PID Controller:\015\012\000"
 6886      656E7420 
 6886      50494420 
 6886      436F6E74 
 6886      726F6C6C 
 6887 0986 0000     		.align	2
 6888              	.LC108:
 6889 0988 53746172 		.ascii	"Startup activation: YES\015\012\000"
 6889      74757020 
 6889      61637469 
 6889      76617469 
 6889      6F6E3A20 
 6890 09a2 0000     		.align	2
 6891              	.LC109:
 6892 09a4 53746172 		.ascii	"Startup activation: NO\015\012\000"
 6892      74757020 
 6892      61637469 
 6892      76617469 
 6892      6F6E3A20 
 6893 09bd 000000   		.align	2
 6894              	.LC110:
 6895 09c0 496E7075 		.ascii	"Input mode: USB\015\012\000"
 6895      74206D6F 
 6895      64653A20 
 6895      5553420D 
 6895      0A00
 6896 09d2 0000     		.align	2
 6897              	.LC111:
 6898 09d4 496E7075 		.ascii	"Input mode: Handle\015\012\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 170


 6898      74206D6F 
 6898      64653A20 
 6898      48616E64 
 6898      6C650D0A 
 6899 09e9 000000   		.align	2
 6900              	.LC112:
 6901 09ec 496E7075 		.ascii	"Input mode: EMG proportional\015\012\000"
 6901      74206D6F 
 6901      64653A20 
 6901      454D4720 
 6901      70726F70 
 6902 0a0b 00       		.align	2
 6903              	.LC113:
 6904 0a0c 496E7075 		.ascii	"Input mode: EMG integral\015\012\000"
 6904      74206D6F 
 6904      64653A20 
 6904      454D4720 
 6904      696E7465 
 6905 0a27 00       		.align	2
 6906              	.LC114:
 6907 0a28 496E7075 		.ascii	"Input mode: EMG FCFS\015\012\000"
 6907      74206D6F 
 6907      64653A20 
 6907      454D4720 
 6907      46434653 
 6908 0a3f 00       		.align	2
 6909              	.LC115:
 6910 0a40 496E7075 		.ascii	"Input mode: EMG FCFS ADV\015\012\000"
 6910      74206D6F 
 6910      64653A20 
 6910      454D4720 
 6910      46434653 
 6911 0a5b 00       		.align	2
 6912              	.LC116:
 6913 0a5c 436F6E74 		.ascii	"Control mode: Position\015\012\000"
 6913      726F6C20 
 6913      6D6F6465 
 6913      3A20506F 
 6913      73697469 
 6914 0a75 000000   		.align	2
 6915              	.LC117:
 6916 0a78 436F6E74 		.ascii	"Control mode: PWM\015\012\000"
 6916      726F6C20 
 6916      6D6F6465 
 6916      3A205057 
 6916      4D0D0A00 
 6917              		.align	2
 6918              	.LC118:
 6919 0a8c 436F6E74 		.ascii	"Control mode: Current\015\012\000"
 6919      726F6C20 
 6919      6D6F6465 
 6919      3A204375 
 6919      7272656E 
 6920              		.align	2
 6921              	.LC119:
 6922 0aa4 436F6E74 		.ascii	"Control mode: Position and Current\015\012\000"
 6922      726F6C20 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 171


 6922      6D6F6465 
 6922      3A20506F 
 6922      73697469 
 6923 0ac9 000000   		.align	2
 6924              	.LC120:
 6925 0acc 4162736F 		.ascii	"Absolute encoder position: YES\015\012\000"
 6925      6C757465 
 6925      20656E63 
 6925      6F646572 
 6925      20706F73 
 6926 0aed 000000   		.align	2
 6927              	.LC121:
 6928 0af0 4162736F 		.ascii	"Absolute encoder position: NO\015\012\000"
 6928      6C757465 
 6928      20656E63 
 6928      6F646572 
 6928      20706F73 
 6929              		.align	2
 6930              	.LC122:
 6931 0b10 4D6F746F 		.ascii	"Motor-Handle Ratio: %d\015\012\000"
 6931      722D4861 
 6931      6E646C65 
 6931      20526174 
 6931      696F3A20 
 6932 0b29 000000   		.align	2
 6933              	.LC123:
 6934 0b2c 53656E73 		.ascii	"Sensor resolution:\015\012\000"
 6934      6F722072 
 6934      65736F6C 
 6934      7574696F 
 6934      6E3A0D0A 
 6935 0b41 000000   		.align	2
 6936              	.LC124:
 6937 0b44 4D656173 		.ascii	"Measurement Offset:\015\012\000"
 6937      7572656D 
 6937      656E7420 
 6937      4F666673 
 6937      65743A0D 
 6938 0b5a 0000     		.align	2
 6939              	.LC125:
 6940 0b5c 2564202D 		.ascii	"%d -> %ld\000"
 6940      3E20256C 
 6940      6400
 6941 0b66 0000     		.align	2
 6942              	.LC126:
 6943 0b68 4D656173 		.ascii	"Measurement Multiplier:\015\012\000"
 6943      7572656D 
 6943      656E7420 
 6943      4D756C74 
 6943      69706C69 
 6944              		.global	__aeabi_f2d
 6945 0b82 0000     		.align	2
 6946              	.LC127:
 6947 0b84 2564202D 		.ascii	"%d -> %f\000"
 6947      3E202566 
 6947      00
 6948 0b8d 000000   		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 172


 6949              	.LC128:
 6950 0b90 43757272 		.ascii	"Current lookup table:\015\012\000"
 6950      656E7420 
 6950      6C6F6F6B 
 6950      75702074 
 6950      61626C65 
 6951              		.align	2
 6952              	.LC129:
 6953 0ba8 705B305D 		.ascii	"p[0] - p[2]: %f, %f, %f\012\000"
 6953      202D2070 
 6953      5B325D3A 
 6953      2025662C 
 6953      2025662C 
 6954 0bc1 000000   		.align	2
 6955              	.LC130:
 6956 0bc4 705B335D 		.ascii	"p[3] - p[5]: %f, %f, %f\012\000"
 6956      202D2070 
 6956      5B355D3A 
 6956      2025662C 
 6956      2025662C 
 6957 0bdd 000000   		.align	2
 6958              	.LC131:
 6959 0be0 506F7369 		.ascii	"Position limit active: %d\000"
 6959      74696F6E 
 6959      206C696D 
 6959      69742061 
 6959      63746976 
 6960 0bfa 0000     		.align	2
 6961              	.LC132:
 6962 0bfc 506F7369 		.ascii	"Position limit motor: inf -> %ld  \000"
 6962      74696F6E 
 6962      206C696D 
 6962      6974206D 
 6962      6F746F72 
 6963 0c1f 00       		.align	2
 6964              	.LC133:
 6965 0c20 73757020 		.ascii	"sup -> %ld\015\012\000"
 6965      2D3E2025 
 6965      6C640D0A 
 6965      00
 6966 0c2d 000000   		.align	2
 6967              	.LC134:
 6968 0c30 4D617820 		.ascii	"Max step pos and neg: %d %d\000"
 6968      73746570 
 6968      20706F73 
 6968      20616E64 
 6968      206E6567 
 6969              		.align	2
 6970              	.LC135:
 6971 0c4c 43757272 		.ascii	"Current limit: %d\000"
 6971      656E7420 
 6971      6C696D69 
 6971      743A2025 
 6971      6400
 6972 0c5e 0000     		.align	2
 6973              	.LC136:
 6974 0c60 454D4720 		.ascii	"EMG thresholds [0 - 1024]: %u, %u\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 173


 6974      74687265 
 6974      73686F6C 
 6974      6473205B 
 6974      30202D20 
 6975 0c82 0000     		.align	2
 6976              	.LC137:
 6977 0c84 454D4720 		.ascii	"EMG max values [0 - 4096]: %lu, %lu\000"
 6977      6D617820 
 6977      76616C75 
 6977      6573205B 
 6977      30202D20 
 6978              		.align	2
 6979              	.LC138:
 6980 0ca8 43616C69 		.ascii	"Calibration enabled: YES\015\012\000"
 6980      62726174 
 6980      696F6E20 
 6980      656E6162 
 6980      6C65643A 
 6981 0cc3 00       		.align	2
 6982              	.LC139:
 6983 0cc4 43616C69 		.ascii	"Calibration enabled: NO\015\012\000"
 6983      62726174 
 6983      696F6E20 
 6983      656E6162 
 6983      6C65643A 
 6984 0cde 0000     		.align	2
 6985              	.LC140:
 6986 0ce0 454D4720 		.ascii	"EMG max speed: %d\000"
 6986      6D617820 
 6986      73706565 
 6986      643A2025 
 6986      6400
 6987 0cf2 0000     		.align	2
 6988              	.LC141:
 6989 0cf4 52657374 		.ascii	"Rest time delay (ms): %d\000"
 6989      2074696D 
 6989      65206465 
 6989      6C617920 
 6989      286D7329 
 6990 0d0d 000000   		.align	2
 6991              	.LC142:
 6992 0d10 52657374 		.ascii	"Rest velocity closure (ticks/sec): %d\000"
 6992      2076656C 
 6992      6F636974 
 6992      7920636C 
 6992      6F737572 
 6993 0d36 0000     		.align	2
 6994              	.LC143:
 6995 0d38 52657374 		.ascii	"Rest position: %d\000"
 6995      20706F73 
 6995      6974696F 
 6995      6E3A2025 
 6995      6400
 6996 0d4a 0000     		.align	2
 6997              	.LC144:
 6998 0d4c 494D5520 		.ascii	"IMU Connected: %d\015\012\000"
 6998      436F6E6E 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 174


 6998      65637465 
 6998      643A2025 
 6998      640D0A00 
 6999              		.align	2
 7000              	.LC145:
 7001 0d60 494D5573 		.ascii	"IMUs CONFIGURATION\015\012\000"
 7001      20434F4E 
 7001      46494755 
 7001      52415449 
 7001      4F4E0D0A 
 7002 0d75 000000   		.align	2
 7003              	.LC146:
 7004 0d78 496D7520 		.ascii	"Imu %d \015\012\011ID: %d\015\012\000"
 7004      2564200D 
 7004      0A094944 
 7004      3A202564 
 7004      0D0A00
 7005 0d8b 00       		.align	2
 7006              	.LC147:
 7007 0d8c 09416363 		.ascii	"\011Accelerometers: \000"
 7007      656C6572 
 7007      6F6D6574 
 7007      6572733A 
 7007      2000
 7008 0d9e 0000     		.align	2
 7009              	.LC148:
 7010 0da0 09477972 		.ascii	"\011Gyroscopes: \000"
 7010      6F73636F 
 7010      7065733A 
 7010      2000
 7011 0dae 0000     		.align	2
 7012              	.LC149:
 7013 0db0 094D6167 		.ascii	"\011Magnetometers: \000"
 7013      6E65746F 
 7013      6D657465 
 7013      72733A20 
 7013      00
 7014 0dc1 000000   		.align	2
 7015              	.LC150:
 7016 0dc4 09517561 		.ascii	"\011Quaternion: \000"
 7016      7465726E 
 7016      696F6E3A 
 7016      2000
 7017 0dd2 0000     		.align	2
 7018              	.LC151:
 7019 0dd4 0954656D 		.ascii	"\011Temperature: \000"
 7019      70657261 
 7019      74757265 
 7019      3A2000
 7020 0de3 00       		.align	2
 7021              	.LC152:
 7022 0de4 64656275 		.ascii	"debug: %ld\015\012\000"
 7022      673A2025 
 7022      6C640D0A 
 7022      00
 7023              		.section	.text.prepare_generic_info,"ax",%progbits
 7024              		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 175


 7025              		.global	prepare_generic_info
 7026              		.thumb
 7027              		.thumb_func
 7028              		.type	prepare_generic_info, %function
 7029              	prepare_generic_info:
 7030              	.LFB71:
1373:..\src/command_processing.c **** 
1374:..\src/command_processing.c **** //==============================================================================
1375:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1376:..\src/command_processing.c **** //==============================================================================
1377:..\src/command_processing.c **** 
1378:..\src/command_processing.c **** void prepare_generic_info(char *info_string)
1379:..\src/command_processing.c **** {
 7031              		.loc 1 1379 0
 7032              		.cfi_startproc
 7033              		@ args = 0, pretend = 0, frame = 112
 7034              		@ frame_needed = 1, uses_anonymous_args = 0
 7035 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 7036              		.cfi_def_cfa_offset 28
 7037              		.cfi_offset 4, -28
 7038              		.cfi_offset 5, -24
 7039              		.cfi_offset 6, -20
 7040              		.cfi_offset 7, -16
 7041              		.cfi_offset 8, -12
 7042              		.cfi_offset 9, -8
 7043              		.cfi_offset 14, -4
 7044 0004 A1B0     		sub	sp, sp, #132
 7045              		.cfi_def_cfa_offset 160
 7046 0006 04AF     		add	r7, sp, #16
 7047              		.cfi_def_cfa 7, 144
 7048 0008 7860     		str	r0, [r7, #4]
1380:..\src/command_processing.c ****     int i;
1381:..\src/command_processing.c **** 
1382:..\src/command_processing.c ****     if(c_mem.id != 250){                //To avoid dummy board ping
 7049              		.loc 1 1382 0
 7050 000a B94B     		ldr	r3, .L457
 7051 000c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7052 000e FA2B     		cmp	r3, #250
 7053 0010 01F09982 		beq	.L455
 7054              	.LBB10:
1383:..\src/command_processing.c ****         char str[100];
1384:..\src/command_processing.c ****         strcpy(info_string, "");
 7055              		.loc 1 1384 0
 7056 0014 7B68     		ldr	r3, [r7, #4]
 7057 0016 0022     		movs	r2, #0
 7058 0018 1A70     		strb	r2, [r3]
1385:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7059              		.loc 1 1385 0
 7060 001a 7868     		ldr	r0, [r7, #4]
 7061 001c FFF7FEFF 		bl	strlen
 7062 0020 0346     		mov	r3, r0
 7063 0022 1A46     		mov	r2, r3
 7064 0024 7B68     		ldr	r3, [r7, #4]
 7065 0026 1344     		add	r3, r3, r2
 7066 0028 B24A     		ldr	r2, .L457+4
 7067 002a 1188     		ldrh	r1, [r2]	@ unaligned
 7068 002c 9278     		ldrb	r2, [r2, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 176


 7069 002e 1980     		strh	r1, [r3]	@ unaligned
 7070 0030 9A70     		strb	r2, [r3, #2]
1386:..\src/command_processing.c ****         strcat(info_string, "Firmware version: ");
 7071              		.loc 1 1386 0
 7072 0032 7868     		ldr	r0, [r7, #4]
 7073 0034 FFF7FEFF 		bl	strlen
 7074 0038 0346     		mov	r3, r0
 7075 003a 1A46     		mov	r2, r3
 7076 003c 7B68     		ldr	r3, [r7, #4]
 7077 003e 1344     		add	r3, r3, r2
 7078 0040 AD4A     		ldr	r2, .L457+8
 7079 0042 1D46     		mov	r5, r3
 7080 0044 1446     		mov	r4, r2
 7081 0046 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7082 0048 2860     		str	r0, [r5]	@ unaligned
 7083 004a 6960     		str	r1, [r5, #4]	@ unaligned
 7084 004c AA60     		str	r2, [r5, #8]	@ unaligned
 7085 004e EB60     		str	r3, [r5, #12]	@ unaligned
 7086 0050 2388     		ldrh	r3, [r4]	@ unaligned
 7087 0052 A278     		ldrb	r2, [r4, #2]
 7088 0054 2B82     		strh	r3, [r5, #16]	@ unaligned
 7089 0056 1346     		mov	r3, r2
 7090 0058 AB74     		strb	r3, [r5, #18]
1387:..\src/command_processing.c ****         strcat(info_string, VERSION);
 7091              		.loc 1 1387 0
 7092 005a 7868     		ldr	r0, [r7, #4]
 7093 005c FFF7FEFF 		bl	strlen
 7094 0060 0346     		mov	r3, r0
 7095 0062 1A46     		mov	r2, r3
 7096 0064 7B68     		ldr	r3, [r7, #4]
 7097 0066 1344     		add	r3, r3, r2
 7098 0068 A44A     		ldr	r2, .L457+12
 7099 006a 1446     		mov	r4, r2
 7100 006c 9E46     		mov	lr, r3
 7101 006e 04F1200C 		add	ip, r4, #32
 7102              	.L390:
 7103 0072 7546     		mov	r5, lr
 7104 0074 2646     		mov	r6, r4
 7105 0076 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 7106 0078 2860     		str	r0, [r5]	@ unaligned
 7107 007a 6960     		str	r1, [r5, #4]	@ unaligned
 7108 007c AA60     		str	r2, [r5, #8]	@ unaligned
 7109 007e EB60     		str	r3, [r5, #12]	@ unaligned
 7110 0080 1034     		adds	r4, r4, #16
 7111 0082 0EF1100E 		add	lr, lr, #16
 7112 0086 6445     		cmp	r4, ip
 7113 0088 F3D1     		bne	.L390
 7114 008a 7346     		mov	r3, lr
 7115 008c 2246     		mov	r2, r4
 7116 008e 1068     		ldr	r0, [r2]	@ unaligned
 7117 0090 1860     		str	r0, [r3]	@ unaligned
 7118 0092 9188     		ldrh	r1, [r2, #4]	@ unaligned
 7119 0094 9279     		ldrb	r2, [r2, #6]
 7120 0096 9980     		strh	r1, [r3, #4]	@ unaligned
 7121 0098 9A71     		strb	r2, [r3, #6]
1388:..\src/command_processing.c ****         strcat(info_string, ".\r\n\r\n");
 7122              		.loc 1 1388 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 177


 7123 009a 7868     		ldr	r0, [r7, #4]
 7124 009c FFF7FEFF 		bl	strlen
 7125 00a0 0346     		mov	r3, r0
 7126 00a2 1A46     		mov	r2, r3
 7127 00a4 7B68     		ldr	r3, [r7, #4]
 7128 00a6 1344     		add	r3, r3, r2
 7129 00a8 954A     		ldr	r2, .L457+16
 7130 00aa 1068     		ldr	r0, [r2]	@ unaligned
 7131 00ac 1860     		str	r0, [r3]	@ unaligned
 7132 00ae 9288     		ldrh	r2, [r2, #4]	@ unaligned
 7133 00b0 9A80     		strh	r2, [r3, #4]	@ unaligned
1389:..\src/command_processing.c **** 
1390:..\src/command_processing.c ****         strcat(info_string, "DEVICE INFO\r\n");
 7134              		.loc 1 1390 0
 7135 00b2 7868     		ldr	r0, [r7, #4]
 7136 00b4 FFF7FEFF 		bl	strlen
 7137 00b8 0346     		mov	r3, r0
 7138 00ba 1A46     		mov	r2, r3
 7139 00bc 7B68     		ldr	r3, [r7, #4]
 7140 00be 1344     		add	r3, r3, r2
 7141 00c0 904A     		ldr	r2, .L457+20
 7142 00c2 1C46     		mov	r4, r3
 7143 00c4 1346     		mov	r3, r2
 7144 00c6 07CB     		ldmia	r3!, {r0, r1, r2}
 7145 00c8 2060     		str	r0, [r4]	@ unaligned
 7146 00ca 6160     		str	r1, [r4, #4]	@ unaligned
 7147 00cc A260     		str	r2, [r4, #8]	@ unaligned
 7148 00ce 1B88     		ldrh	r3, [r3]	@ unaligned
 7149 00d0 A381     		strh	r3, [r4, #12]	@ unaligned
1391:..\src/command_processing.c ****         sprintf(str, "ID: %d\r\n", (int) c_mem.id);
 7150              		.loc 1 1391 0
 7151 00d2 874B     		ldr	r3, .L457
 7152 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7153 00d6 1A46     		mov	r2, r3
 7154 00d8 07F10803 		add	r3, r7, #8
 7155 00dc 8A49     		ldr	r1, .L457+24
 7156 00de 1846     		mov	r0, r3
 7157 00e0 FFF7FEFF 		bl	sprintf
1392:..\src/command_processing.c ****         strcat(info_string, str);
 7158              		.loc 1 1392 0
 7159 00e4 07F10803 		add	r3, r7, #8
 7160 00e8 1946     		mov	r1, r3
 7161 00ea 7868     		ldr	r0, [r7, #4]
 7162 00ec FFF7FEFF 		bl	strcat
1393:..\src/command_processing.c ****         switch(c_mem.right_left){
 7163              		.loc 1 1393 0
 7164 00f0 7F4B     		ldr	r3, .L457
 7165 00f2 93F8A630 		ldrb	r3, [r3, #166]	@ zero_extendqisi2
 7166 00f6 002B     		cmp	r3, #0
 7167 00f8 02D0     		beq	.L392
 7168 00fa 012B     		cmp	r3, #1
 7169 00fc 15D0     		beq	.L393
 7170 00fe 26E0     		b	.L391
 7171              	.L392:
1394:..\src/command_processing.c ****             case RIGHT_HAND:
1395:..\src/command_processing.c ****                 strcat(info_string, "Hand side: RIGHT\r\n");
 7172              		.loc 1 1395 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 178


 7173 0100 7868     		ldr	r0, [r7, #4]
 7174 0102 FFF7FEFF 		bl	strlen
 7175 0106 0346     		mov	r3, r0
 7176 0108 1A46     		mov	r2, r3
 7177 010a 7B68     		ldr	r3, [r7, #4]
 7178 010c 1344     		add	r3, r3, r2
 7179 010e 7F4A     		ldr	r2, .L457+28
 7180 0110 1D46     		mov	r5, r3
 7181 0112 1446     		mov	r4, r2
 7182 0114 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7183 0116 2860     		str	r0, [r5]	@ unaligned
 7184 0118 6960     		str	r1, [r5, #4]	@ unaligned
 7185 011a AA60     		str	r2, [r5, #8]	@ unaligned
 7186 011c EB60     		str	r3, [r5, #12]	@ unaligned
 7187 011e 2388     		ldrh	r3, [r4]	@ unaligned
 7188 0120 A278     		ldrb	r2, [r4, #2]
 7189 0122 2B82     		strh	r3, [r5, #16]	@ unaligned
 7190 0124 1346     		mov	r3, r2
 7191 0126 AB74     		strb	r3, [r5, #18]
1396:..\src/command_processing.c ****                 break;
 7192              		.loc 1 1396 0
 7193 0128 11E0     		b	.L391
 7194              	.L393:
1397:..\src/command_processing.c ****             case LEFT_HAND:
1398:..\src/command_processing.c ****                 strcat(info_string, "Hand side: LEFT\r\n");
 7195              		.loc 1 1398 0
 7196 012a 7868     		ldr	r0, [r7, #4]
 7197 012c FFF7FEFF 		bl	strlen
 7198 0130 0346     		mov	r3, r0
 7199 0132 1A46     		mov	r2, r3
 7200 0134 7B68     		ldr	r3, [r7, #4]
 7201 0136 1344     		add	r3, r3, r2
 7202 0138 754A     		ldr	r2, .L457+32
 7203 013a 1D46     		mov	r5, r3
 7204 013c 1446     		mov	r4, r2
 7205 013e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7206 0140 2860     		str	r0, [r5]	@ unaligned
 7207 0142 6960     		str	r1, [r5, #4]	@ unaligned
 7208 0144 AA60     		str	r2, [r5, #8]	@ unaligned
 7209 0146 EB60     		str	r3, [r5, #12]	@ unaligned
 7210 0148 2388     		ldrh	r3, [r4]	@ unaligned
 7211 014a 2B82     		strh	r3, [r5, #16]	@ unaligned
1399:..\src/command_processing.c ****                 break;
 7212              		.loc 1 1399 0
 7213 014c 00BF     		nop
 7214              	.L391:
1400:..\src/command_processing.c ****         }
1401:..\src/command_processing.c ****         strcat(info_string, "PWM rescaling activation: ");
 7215              		.loc 1 1401 0
 7216 014e 7868     		ldr	r0, [r7, #4]
 7217 0150 FFF7FEFF 		bl	strlen
 7218 0154 0346     		mov	r3, r0
 7219 0156 1A46     		mov	r2, r3
 7220 0158 7B68     		ldr	r3, [r7, #4]
 7221 015a 1344     		add	r3, r3, r2
 7222 015c 6D4A     		ldr	r2, .L457+36
 7223 015e 1D46     		mov	r5, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 179


 7224 0160 1446     		mov	r4, r2
 7225 0162 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7226 0164 2860     		str	r0, [r5]	@ unaligned
 7227 0166 6960     		str	r1, [r5, #4]	@ unaligned
 7228 0168 AA60     		str	r2, [r5, #8]	@ unaligned
 7229 016a EB60     		str	r3, [r5, #12]	@ unaligned
 7230 016c 03CC     		ldmia	r4!, {r0, r1}
 7231 016e 2861     		str	r0, [r5, #16]	@ unaligned
 7232 0170 6961     		str	r1, [r5, #20]	@ unaligned
 7233 0172 2388     		ldrh	r3, [r4]	@ unaligned
 7234 0174 A278     		ldrb	r2, [r4, #2]
 7235 0176 2B83     		strh	r3, [r5, #24]	@ unaligned
 7236 0178 1346     		mov	r3, r2
 7237 017a AB76     		strb	r3, [r5, #26]
1402:..\src/command_processing.c ****         if(c_mem.activate_pwm_rescaling == MAXON_12V)
 7238              		.loc 1 1402 0
 7239 017c 5C4B     		ldr	r3, .L457
 7240 017e 93F87B30 		ldrb	r3, [r3, #123]	@ zero_extendqisi2
 7241 0182 012B     		cmp	r3, #1
 7242 0184 0CD1     		bne	.L394
1403:..\src/command_processing.c ****             strcat(info_string, "YES\n");
 7243              		.loc 1 1403 0
 7244 0186 7868     		ldr	r0, [r7, #4]
 7245 0188 FFF7FEFF 		bl	strlen
 7246 018c 0346     		mov	r3, r0
 7247 018e 1A46     		mov	r2, r3
 7248 0190 7B68     		ldr	r3, [r7, #4]
 7249 0192 1344     		add	r3, r3, r2
 7250 0194 604A     		ldr	r2, .L457+40
 7251 0196 1068     		ldr	r0, [r2]	@ unaligned
 7252 0198 1860     		str	r0, [r3]	@ unaligned
 7253 019a 1279     		ldrb	r2, [r2, #4]
 7254 019c 1A71     		strb	r2, [r3, #4]
 7255 019e 09E0     		b	.L395
 7256              	.L394:
1404:..\src/command_processing.c ****         else
1405:..\src/command_processing.c ****             strcat(info_string, "NO\n");
 7257              		.loc 1 1405 0
 7258 01a0 7868     		ldr	r0, [r7, #4]
 7259 01a2 FFF7FEFF 		bl	strlen
 7260 01a6 0346     		mov	r3, r0
 7261 01a8 1A46     		mov	r2, r3
 7262 01aa 7B68     		ldr	r3, [r7, #4]
 7263 01ac 1344     		add	r3, r3, r2
 7264 01ae 5B4A     		ldr	r2, .L457+44
 7265 01b0 1068     		ldr	r0, [r2]	@ unaligned
 7266 01b2 1860     		str	r0, [r3]	@ unaligned
 7267              	.L395:
1406:..\src/command_processing.c ****         
1407:..\src/command_processing.c ****         sprintf(str, "PWM Limit: %d\r\n", (int) dev_pwm_limit);
 7268              		.loc 1 1407 0
 7269 01b4 5A4B     		ldr	r3, .L457+48
 7270 01b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7271 01b8 1A46     		mov	r2, r3
 7272 01ba 07F10803 		add	r3, r7, #8
 7273 01be 5949     		ldr	r1, .L457+52
 7274 01c0 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 180


 7275 01c2 FFF7FEFF 		bl	sprintf
1408:..\src/command_processing.c ****         strcat(info_string, str);
 7276              		.loc 1 1408 0
 7277 01c6 07F10803 		add	r3, r7, #8
 7278 01ca 1946     		mov	r1, r3
 7279 01cc 7868     		ldr	r0, [r7, #4]
 7280 01ce FFF7FEFF 		bl	strcat
1409:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7281              		.loc 1 1409 0
 7282 01d2 7868     		ldr	r0, [r7, #4]
 7283 01d4 FFF7FEFF 		bl	strlen
 7284 01d8 0346     		mov	r3, r0
 7285 01da 1A46     		mov	r2, r3
 7286 01dc 7B68     		ldr	r3, [r7, #4]
 7287 01de 1344     		add	r3, r3, r2
 7288 01e0 444A     		ldr	r2, .L457+4
 7289 01e2 1188     		ldrh	r1, [r2]	@ unaligned
 7290 01e4 9278     		ldrb	r2, [r2, #2]
 7291 01e6 1980     		strh	r1, [r3]	@ unaligned
 7292 01e8 9A70     		strb	r2, [r3, #2]
1410:..\src/command_processing.c **** 
1411:..\src/command_processing.c ****         strcat(info_string, "MOTOR INFO\r\n");
 7293              		.loc 1 1411 0
 7294 01ea 7868     		ldr	r0, [r7, #4]
 7295 01ec FFF7FEFF 		bl	strlen
 7296 01f0 0346     		mov	r3, r0
 7297 01f2 1A46     		mov	r2, r3
 7298 01f4 7B68     		ldr	r3, [r7, #4]
 7299 01f6 1344     		add	r3, r3, r2
 7300 01f8 4B4A     		ldr	r2, .L457+56
 7301 01fa 1C46     		mov	r4, r3
 7302 01fc 1346     		mov	r3, r2
 7303 01fe 07CB     		ldmia	r3!, {r0, r1, r2}
 7304 0200 2060     		str	r0, [r4]	@ unaligned
 7305 0202 6160     		str	r1, [r4, #4]	@ unaligned
 7306 0204 A260     		str	r2, [r4, #8]	@ unaligned
 7307 0206 1B78     		ldrb	r3, [r3]
 7308 0208 2373     		strb	r3, [r4, #12]
1412:..\src/command_processing.c ****         strcat(info_string, "Motor reference");
 7309              		.loc 1 1412 0
 7310 020a 7868     		ldr	r0, [r7, #4]
 7311 020c FFF7FEFF 		bl	strlen
 7312 0210 0346     		mov	r3, r0
 7313 0212 1A46     		mov	r2, r3
 7314 0214 7B68     		ldr	r3, [r7, #4]
 7315 0216 1344     		add	r3, r3, r2
 7316 0218 444A     		ldr	r2, .L457+60
 7317 021a 1C46     		mov	r4, r3
 7318 021c 1546     		mov	r5, r2
 7319 021e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7320 0220 2060     		str	r0, [r4]	@ unaligned
 7321 0222 6160     		str	r1, [r4, #4]	@ unaligned
 7322 0224 A260     		str	r2, [r4, #8]	@ unaligned
 7323 0226 E360     		str	r3, [r4, #12]	@ unaligned
1413:..\src/command_processing.c ****         
1414:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT)
 7324              		.loc 1 1414 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 181


 7325 0228 414B     		ldr	r3, .L457+64
 7326 022a 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7327 022e 022B     		cmp	r3, #2
 7328 0230 10D1     		bne	.L396
1415:..\src/command_processing.c ****             strcat(info_string," - Currents: ");
 7329              		.loc 1 1415 0
 7330 0232 7868     		ldr	r0, [r7, #4]
 7331 0234 FFF7FEFF 		bl	strlen
 7332 0238 0346     		mov	r3, r0
 7333 023a 1A46     		mov	r2, r3
 7334 023c 7B68     		ldr	r3, [r7, #4]
 7335 023e 1344     		add	r3, r3, r2
 7336 0240 3C4A     		ldr	r2, .L457+68
 7337 0242 1C46     		mov	r4, r3
 7338 0244 1346     		mov	r3, r2
 7339 0246 07CB     		ldmia	r3!, {r0, r1, r2}
 7340 0248 2060     		str	r0, [r4]	@ unaligned
 7341 024a 6160     		str	r1, [r4, #4]	@ unaligned
 7342 024c A260     		str	r2, [r4, #8]	@ unaligned
 7343 024e 1B88     		ldrh	r3, [r3]	@ unaligned
 7344 0250 A381     		strh	r3, [r4, #12]	@ unaligned
 7345 0252 24E0     		b	.L397
 7346              	.L396:
1416:..\src/command_processing.c ****         else {
1417:..\src/command_processing.c ****             if (g_mem.control_mode == CONTROL_PWM)
 7347              		.loc 1 1417 0
 7348 0254 364B     		ldr	r3, .L457+64
 7349 0256 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7350 025a 012B     		cmp	r3, #1
 7351 025c 0FD1     		bne	.L398
1418:..\src/command_processing.c ****                 strcat(info_string," - Pwm: ");
 7352              		.loc 1 1418 0
 7353 025e 7868     		ldr	r0, [r7, #4]
 7354 0260 FFF7FEFF 		bl	strlen
 7355 0264 0346     		mov	r3, r0
 7356 0266 1A46     		mov	r2, r3
 7357 0268 7B68     		ldr	r3, [r7, #4]
 7358 026a 1344     		add	r3, r3, r2
 7359 026c 3249     		ldr	r1, .L457+72
 7360 026e 1A46     		mov	r2, r3
 7361 0270 0B46     		mov	r3, r1
 7362 0272 03CB     		ldmia	r3!, {r0, r1}
 7363 0274 1060     		str	r0, [r2]	@ unaligned
 7364 0276 5160     		str	r1, [r2, #4]	@ unaligned
 7365 0278 1B78     		ldrb	r3, [r3]
 7366 027a 1372     		strb	r3, [r2, #8]
 7367 027c 0FE0     		b	.L397
 7368              	.L398:
1419:..\src/command_processing.c ****             else
1420:..\src/command_processing.c ****                 strcat(info_string," - Position: ");
 7369              		.loc 1 1420 0
 7370 027e 7868     		ldr	r0, [r7, #4]
 7371 0280 FFF7FEFF 		bl	strlen
 7372 0284 0346     		mov	r3, r0
 7373 0286 1A46     		mov	r2, r3
 7374 0288 7B68     		ldr	r3, [r7, #4]
 7375 028a 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 182


 7376 028c 2B4A     		ldr	r2, .L457+76
 7377 028e 1C46     		mov	r4, r3
 7378 0290 1346     		mov	r3, r2
 7379 0292 07CB     		ldmia	r3!, {r0, r1, r2}
 7380 0294 2060     		str	r0, [r4]	@ unaligned
 7381 0296 6160     		str	r1, [r4, #4]	@ unaligned
 7382 0298 A260     		str	r2, [r4, #8]	@ unaligned
 7383 029a 1B88     		ldrh	r3, [r3]	@ unaligned
 7384 029c A381     		strh	r3, [r4, #12]	@ unaligned
 7385              	.L397:
1421:..\src/command_processing.c ****         }
1422:..\src/command_processing.c **** 
1423:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_CURRENT) {
 7386              		.loc 1 1423 0
 7387 029e 244B     		ldr	r3, .L457+64
 7388 02a0 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7389 02a4 022B     		cmp	r3, #2
 7390 02a6 0ED1     		bne	.L399
1424:..\src/command_processing.c ****             sprintf(str, "%d ", (int)(g_refOld.curr));
 7391              		.loc 1 1424 0
 7392 02a8 254B     		ldr	r3, .L457+80
 7393 02aa 5A68     		ldr	r2, [r3, #4]
 7394 02ac 07F10803 		add	r3, r7, #8
 7395 02b0 2449     		ldr	r1, .L457+84
 7396 02b2 1846     		mov	r0, r3
 7397 02b4 FFF7FEFF 		bl	sprintf
1425:..\src/command_processing.c ****             strcat(info_string,str);
 7398              		.loc 1 1425 0
 7399 02b8 07F10803 		add	r3, r7, #8
 7400 02bc 1946     		mov	r1, r3
 7401 02be 7868     		ldr	r0, [r7, #4]
 7402 02c0 FFF7FEFF 		bl	strcat
 7403 02c4 53E0     		b	.L400
 7404              	.L399:
1426:..\src/command_processing.c ****         }
1427:..\src/command_processing.c ****         else {
1428:..\src/command_processing.c ****             if(g_mem.control_mode == CONTROL_PWM) {
 7405              		.loc 1 1428 0
 7406 02c6 1A4B     		ldr	r3, .L457+64
 7407 02c8 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7408 02cc 012B     		cmp	r3, #1
 7409 02ce 3BD1     		bne	.L401
1429:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld.pwm));
 7410              		.loc 1 1429 0
 7411 02d0 1B4B     		ldr	r3, .L457+80
 7412 02d2 9A68     		ldr	r2, [r3, #8]
 7413 02d4 07F10803 		add	r3, r7, #8
 7414 02d8 1A49     		ldr	r1, .L457+84
 7415 02da 1846     		mov	r0, r3
 7416 02dc FFF7FEFF 		bl	sprintf
1430:..\src/command_processing.c ****                 strcat(info_string,str);
 7417              		.loc 1 1430 0
 7418 02e0 07F10803 		add	r3, r7, #8
 7419 02e4 1946     		mov	r1, r3
 7420 02e6 7868     		ldr	r0, [r7, #4]
 7421 02e8 FFF7FEFF 		bl	strcat
 7422 02ec 3FE0     		b	.L400
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 183


 7423              	.L458:
 7424 02ee 00BF     		.align	2
 7425              	.L457:
 7426 02f0 00000000 		.word	c_mem
 7427 02f4 60070000 		.word	.LC75
 7428 02f8 64070000 		.word	.LC76
 7429 02fc 78070000 		.word	.LC77
 7430 0300 A0070000 		.word	.LC78
 7431 0304 A8070000 		.word	.LC79
 7432 0308 B8070000 		.word	.LC80
 7433 030c C4070000 		.word	.LC81
 7434 0310 D8070000 		.word	.LC82
 7435 0314 EC070000 		.word	.LC83
 7436 0318 08080000 		.word	.LC84
 7437 031c 10080000 		.word	.LC85
 7438 0320 00000000 		.word	dev_pwm_limit
 7439 0324 14080000 		.word	.LC86
 7440 0328 24080000 		.word	.LC87
 7441 032c 34080000 		.word	.LC88
 7442 0330 00000000 		.word	g_mem
 7443 0334 44080000 		.word	.LC89
 7444 0338 54080000 		.word	.LC90
 7445 033c 60080000 		.word	.LC91
 7446 0340 00000000 		.word	g_refOld
 7447 0344 70080000 		.word	.LC92
 7448              	.L401:
1431:..\src/command_processing.c ****             }
1432:..\src/command_processing.c ****             else {
1433:..\src/command_processing.c ****                 sprintf(str, "%d ", (int)(g_refOld.pos >> c_mem.res[0]));
 7449              		.loc 1 1433 0
 7450 0348 B74B     		ldr	r3, .L459
 7451 034a 1B68     		ldr	r3, [r3]
 7452 034c B74A     		ldr	r2, .L459+4
 7453 034e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 7454 0352 43FA02F2 		asr	r2, r3, r2
 7455 0356 07F10803 		add	r3, r7, #8
 7456 035a B549     		ldr	r1, .L459+8
 7457 035c 1846     		mov	r0, r3
 7458 035e FFF7FEFF 		bl	sprintf
1434:..\src/command_processing.c ****                 strcat(info_string,str);
 7459              		.loc 1 1434 0
 7460 0362 07F10803 		add	r3, r7, #8
 7461 0366 1946     		mov	r1, r3
 7462 0368 7868     		ldr	r0, [r7, #4]
 7463 036a FFF7FEFF 		bl	strcat
 7464              	.L400:
1435:..\src/command_processing.c ****             }
1436:..\src/command_processing.c ****         }
1437:..\src/command_processing.c ****         strcat(info_string,"\r\n");
 7465              		.loc 1 1437 0
 7466 036e 7868     		ldr	r0, [r7, #4]
 7467 0370 FFF7FEFF 		bl	strlen
 7468 0374 0346     		mov	r3, r0
 7469 0376 1A46     		mov	r2, r3
 7470 0378 7B68     		ldr	r3, [r7, #4]
 7471 037a 1344     		add	r3, r3, r2
 7472 037c AD4A     		ldr	r2, .L459+12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 184


 7473 037e 1188     		ldrh	r1, [r2]	@ unaligned
 7474 0380 9278     		ldrb	r2, [r2, #2]
 7475 0382 1980     		strh	r1, [r3]	@ unaligned
 7476 0384 9A70     		strb	r2, [r3, #2]
1438:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7477              		.loc 1 1438 0
 7478 0386 7868     		ldr	r0, [r7, #4]
 7479 0388 FFF7FEFF 		bl	strlen
 7480 038c 0346     		mov	r3, r0
 7481 038e 1A46     		mov	r2, r3
 7482 0390 7B68     		ldr	r3, [r7, #4]
 7483 0392 1344     		add	r3, r3, r2
 7484 0394 A74A     		ldr	r2, .L459+12
 7485 0396 1188     		ldrh	r1, [r2]	@ unaligned
 7486 0398 9278     		ldrb	r2, [r2, #2]
 7487 039a 1980     		strh	r1, [r3]	@ unaligned
 7488 039c 9A70     		strb	r2, [r3, #2]
1439:..\src/command_processing.c **** 
1440:..\src/command_processing.c ****         sprintf(str, "Motor enabled: ");
 7489              		.loc 1 1440 0
 7490 039e 07F10803 		add	r3, r7, #8
 7491 03a2 A54A     		ldr	r2, .L459+16
 7492 03a4 1C46     		mov	r4, r3
 7493 03a6 1346     		mov	r3, r2
 7494 03a8 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 7495 03aa 84E80F00 		stmia	r4, {r0, r1, r2, r3}
1441:..\src/command_processing.c ****         if (g_ref.onoff & 0x01) {
 7496              		.loc 1 1441 0
 7497 03ae A34B     		ldr	r3, .L459+20
 7498 03b0 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 7499 03b2 03F00103 		and	r3, r3, #1
 7500 03b6 002B     		cmp	r3, #0
 7501 03b8 0FD0     		beq	.L402
1442:..\src/command_processing.c ****             strcat(str, "YES\r\n");
 7502              		.loc 1 1442 0
 7503 03ba 07F10803 		add	r3, r7, #8
 7504 03be 1846     		mov	r0, r3
 7505 03c0 FFF7FEFF 		bl	strlen
 7506 03c4 0346     		mov	r3, r0
 7507 03c6 1A46     		mov	r2, r3
 7508 03c8 07F10803 		add	r3, r7, #8
 7509 03cc 1344     		add	r3, r3, r2
 7510 03ce 9C4A     		ldr	r2, .L459+24
 7511 03d0 1068     		ldr	r0, [r2]	@ unaligned
 7512 03d2 1860     		str	r0, [r3]	@ unaligned
 7513 03d4 9288     		ldrh	r2, [r2, #4]	@ unaligned
 7514 03d6 9A80     		strh	r2, [r3, #4]	@ unaligned
 7515 03d8 0EE0     		b	.L403
 7516              	.L402:
1443:..\src/command_processing.c ****         } else {
1444:..\src/command_processing.c ****             strcat(str, "NO\r\n");
 7517              		.loc 1 1444 0
 7518 03da 07F10803 		add	r3, r7, #8
 7519 03de 1846     		mov	r0, r3
 7520 03e0 FFF7FEFF 		bl	strlen
 7521 03e4 0346     		mov	r3, r0
 7522 03e6 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 185


 7523 03e8 07F10803 		add	r3, r7, #8
 7524 03ec 1344     		add	r3, r3, r2
 7525 03ee 954A     		ldr	r2, .L459+28
 7526 03f0 1068     		ldr	r0, [r2]	@ unaligned
 7527 03f2 1860     		str	r0, [r3]	@ unaligned
 7528 03f4 1279     		ldrb	r2, [r2, #4]
 7529 03f6 1A71     		strb	r2, [r3, #4]
 7530              	.L403:
1445:..\src/command_processing.c ****         }
1446:..\src/command_processing.c ****         strcat(info_string, str);
 7531              		.loc 1 1446 0
 7532 03f8 07F10803 		add	r3, r7, #8
 7533 03fc 1946     		mov	r1, r3
 7534 03fe 7868     		ldr	r0, [r7, #4]
 7535 0400 FFF7FEFF 		bl	strcat
1447:..\src/command_processing.c **** 
1448:..\src/command_processing.c ****         strcat(info_string, "\r\nMEASUREMENTS INFO\r\n");
 7536              		.loc 1 1448 0
 7537 0404 7868     		ldr	r0, [r7, #4]
 7538 0406 FFF7FEFF 		bl	strlen
 7539 040a 0346     		mov	r3, r0
 7540 040c 1A46     		mov	r2, r3
 7541 040e 7B68     		ldr	r3, [r7, #4]
 7542 0410 1344     		add	r3, r3, r2
 7543 0412 8D4A     		ldr	r2, .L459+32
 7544 0414 1D46     		mov	r5, r3
 7545 0416 1446     		mov	r4, r2
 7546 0418 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7547 041a 2860     		str	r0, [r5]	@ unaligned
 7548 041c 6960     		str	r1, [r5, #4]	@ unaligned
 7549 041e AA60     		str	r2, [r5, #8]	@ unaligned
 7550 0420 EB60     		str	r3, [r5, #12]	@ unaligned
 7551 0422 2068     		ldr	r0, [r4]	@ unaligned
 7552 0424 2861     		str	r0, [r5, #16]	@ unaligned
 7553 0426 A388     		ldrh	r3, [r4, #4]	@ unaligned
 7554 0428 AB82     		strh	r3, [r5, #20]	@ unaligned
1449:..\src/command_processing.c ****         strcat(info_string, "Sensor value:\r\n");
 7555              		.loc 1 1449 0
 7556 042a 7868     		ldr	r0, [r7, #4]
 7557 042c FFF7FEFF 		bl	strlen
 7558 0430 0346     		mov	r3, r0
 7559 0432 1A46     		mov	r2, r3
 7560 0434 7B68     		ldr	r3, [r7, #4]
 7561 0436 1344     		add	r3, r3, r2
 7562 0438 844A     		ldr	r2, .L459+36
 7563 043a 1C46     		mov	r4, r3
 7564 043c 1546     		mov	r5, r2
 7565 043e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 7566 0440 2060     		str	r0, [r4]	@ unaligned
 7567 0442 6160     		str	r1, [r4, #4]	@ unaligned
 7568 0444 A260     		str	r2, [r4, #8]	@ unaligned
 7569 0446 E360     		str	r3, [r4, #12]	@ unaligned
1450:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; i++) {
 7570              		.loc 1 1450 0
 7571 0448 0023     		movs	r3, #0
 7572 044a FB66     		str	r3, [r7, #108]
 7573 044c 26E0     		b	.L404
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 186


 7574              	.L405:
1451:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7575              		.loc 1 1451 0 discriminator 3
 7576 044e FB6E     		ldr	r3, [r7, #108]
 7577 0450 5C1C     		adds	r4, r3, #1
1452:..\src/command_processing.c ****             (int)(g_meas.pos[i] >> c_mem.res[i]));
 7578              		.loc 1 1452 0 discriminator 3
 7579 0452 7F4A     		ldr	r2, .L459+40
 7580 0454 FB6E     		ldr	r3, [r7, #108]
 7581 0456 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7582 045a 7449     		ldr	r1, .L459+4
 7583 045c FA6E     		ldr	r2, [r7, #108]
 7584 045e 0A44     		add	r2, r2, r1
 7585 0460 3732     		adds	r2, r2, #55
 7586 0462 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7587 0464 1341     		asrs	r3, r3, r2
1451:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7588              		.loc 1 1451 0 discriminator 3
 7589 0466 07F10800 		add	r0, r7, #8
 7590 046a 2246     		mov	r2, r4
 7591 046c 7949     		ldr	r1, .L459+44
 7592 046e FFF7FEFF 		bl	sprintf
1453:..\src/command_processing.c ****             strcat(info_string, str);
 7593              		.loc 1 1453 0 discriminator 3
 7594 0472 07F10803 		add	r3, r7, #8
 7595 0476 1946     		mov	r1, r3
 7596 0478 7868     		ldr	r0, [r7, #4]
 7597 047a FFF7FEFF 		bl	strcat
1454:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 7598              		.loc 1 1454 0 discriminator 3
 7599 047e 7868     		ldr	r0, [r7, #4]
 7600 0480 FFF7FEFF 		bl	strlen
 7601 0484 0346     		mov	r3, r0
 7602 0486 1A46     		mov	r2, r3
 7603 0488 7B68     		ldr	r3, [r7, #4]
 7604 048a 1344     		add	r3, r3, r2
 7605 048c 694A     		ldr	r2, .L459+12
 7606 048e 1188     		ldrh	r1, [r2]	@ unaligned
 7607 0490 9278     		ldrb	r2, [r2, #2]
 7608 0492 1980     		strh	r1, [r3]	@ unaligned
 7609 0494 9A70     		strb	r2, [r3, #2]
1450:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7610              		.loc 1 1450 0 discriminator 3
 7611 0496 FB6E     		ldr	r3, [r7, #108]
 7612 0498 0133     		adds	r3, r3, #1
 7613 049a FB66     		str	r3, [r7, #108]
 7614              	.L404:
1450:..\src/command_processing.c ****             sprintf(str, "%d -> %d", i+1,
 7615              		.loc 1 1450 0 is_stmt 0 discriminator 1
 7616 049c FB6E     		ldr	r3, [r7, #108]
 7617 049e 022B     		cmp	r3, #2
 7618 04a0 D5DD     		ble	.L405
1455:..\src/command_processing.c ****         }
1456:..\src/command_processing.c **** 
1457:..\src/command_processing.c ****         sprintf(str, "Battery Voltage (mV): %ld", (int32) dev_tension );
 7619              		.loc 1 1457 0 is_stmt 1
 7620 04a2 6D4B     		ldr	r3, .L459+48
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 187


 7621 04a4 1A68     		ldr	r2, [r3]
 7622 04a6 07F10803 		add	r3, r7, #8
 7623 04aa 6C49     		ldr	r1, .L459+52
 7624 04ac 1846     		mov	r0, r3
 7625 04ae FFF7FEFF 		bl	sprintf
1458:..\src/command_processing.c ****         strcat(info_string, str);
 7626              		.loc 1 1458 0
 7627 04b2 07F10803 		add	r3, r7, #8
 7628 04b6 1946     		mov	r1, r3
 7629 04b8 7868     		ldr	r0, [r7, #4]
 7630 04ba FFF7FEFF 		bl	strcat
1459:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7631              		.loc 1 1459 0
 7632 04be 7868     		ldr	r0, [r7, #4]
 7633 04c0 FFF7FEFF 		bl	strlen
 7634 04c4 0346     		mov	r3, r0
 7635 04c6 1A46     		mov	r2, r3
 7636 04c8 7B68     		ldr	r3, [r7, #4]
 7637 04ca 1344     		add	r3, r3, r2
 7638 04cc 594A     		ldr	r2, .L459+12
 7639 04ce 1188     		ldrh	r1, [r2]	@ unaligned
 7640 04d0 9278     		ldrb	r2, [r2, #2]
 7641 04d2 1980     		strh	r1, [r3]	@ unaligned
 7642 04d4 9A70     		strb	r2, [r3, #2]
1460:..\src/command_processing.c ****         
1461:..\src/command_processing.c ****         sprintf(str, "Full charge power tension (mV): %ld", (int32) pow_tension );
 7643              		.loc 1 1461 0
 7644 04d6 624B     		ldr	r3, .L459+56
 7645 04d8 1A68     		ldr	r2, [r3]
 7646 04da 07F10803 		add	r3, r7, #8
 7647 04de 6149     		ldr	r1, .L459+60
 7648 04e0 1846     		mov	r0, r3
 7649 04e2 FFF7FEFF 		bl	sprintf
1462:..\src/command_processing.c ****         strcat(info_string, str);
 7650              		.loc 1 1462 0
 7651 04e6 07F10803 		add	r3, r7, #8
 7652 04ea 1946     		mov	r1, r3
 7653 04ec 7868     		ldr	r0, [r7, #4]
 7654 04ee FFF7FEFF 		bl	strcat
1463:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7655              		.loc 1 1463 0
 7656 04f2 7868     		ldr	r0, [r7, #4]
 7657 04f4 FFF7FEFF 		bl	strlen
 7658 04f8 0346     		mov	r3, r0
 7659 04fa 1A46     		mov	r2, r3
 7660 04fc 7B68     		ldr	r3, [r7, #4]
 7661 04fe 1344     		add	r3, r3, r2
 7662 0500 4C4A     		ldr	r2, .L459+12
 7663 0502 1188     		ldrh	r1, [r2]	@ unaligned
 7664 0504 9278     		ldrb	r2, [r2, #2]
 7665 0506 1980     		strh	r1, [r3]	@ unaligned
 7666 0508 9A70     		strb	r2, [r3, #2]
1464:..\src/command_processing.c **** 
1465:..\src/command_processing.c ****         sprintf(str, "Current (mA): %ld", (int32) g_meas.curr );
 7667              		.loc 1 1465 0
 7668 050a 514B     		ldr	r3, .L459+40
 7669 050c DA68     		ldr	r2, [r3, #12]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 188


 7670 050e 07F10803 		add	r3, r7, #8
 7671 0512 5549     		ldr	r1, .L459+64
 7672 0514 1846     		mov	r0, r3
 7673 0516 FFF7FEFF 		bl	sprintf
1466:..\src/command_processing.c ****         strcat(info_string, str);
 7674              		.loc 1 1466 0
 7675 051a 07F10803 		add	r3, r7, #8
 7676 051e 1946     		mov	r1, r3
 7677 0520 7868     		ldr	r0, [r7, #4]
 7678 0522 FFF7FEFF 		bl	strcat
1467:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 7679              		.loc 1 1467 0
 7680 0526 7868     		ldr	r0, [r7, #4]
 7681 0528 FFF7FEFF 		bl	strlen
 7682 052c 0346     		mov	r3, r0
 7683 052e 1A46     		mov	r2, r3
 7684 0530 7B68     		ldr	r3, [r7, #4]
 7685 0532 1344     		add	r3, r3, r2
 7686 0534 3F4A     		ldr	r2, .L459+12
 7687 0536 1188     		ldrh	r1, [r2]	@ unaligned
 7688 0538 9278     		ldrb	r2, [r2, #2]
 7689 053a 1980     		strh	r1, [r3]	@ unaligned
 7690 053c 9A70     		strb	r2, [r3, #2]
1468:..\src/command_processing.c **** 
1469:..\src/command_processing.c ****         strcat(info_string, "\r\nDEVICE PARAMETERS\r\n");
 7691              		.loc 1 1469 0
 7692 053e 7868     		ldr	r0, [r7, #4]
 7693 0540 FFF7FEFF 		bl	strlen
 7694 0544 0346     		mov	r3, r0
 7695 0546 1A46     		mov	r2, r3
 7696 0548 7B68     		ldr	r3, [r7, #4]
 7697 054a 1344     		add	r3, r3, r2
 7698 054c 474A     		ldr	r2, .L459+68
 7699 054e 1D46     		mov	r5, r3
 7700 0550 1446     		mov	r4, r2
 7701 0552 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7702 0554 2860     		str	r0, [r5]	@ unaligned
 7703 0556 6960     		str	r1, [r5, #4]	@ unaligned
 7704 0558 AA60     		str	r2, [r5, #8]	@ unaligned
 7705 055a EB60     		str	r3, [r5, #12]	@ unaligned
 7706 055c 2068     		ldr	r0, [r4]	@ unaligned
 7707 055e 2861     		str	r0, [r5, #16]	@ unaligned
 7708 0560 A388     		ldrh	r3, [r4, #4]	@ unaligned
 7709 0562 AB82     		strh	r3, [r5, #20]	@ unaligned
1470:..\src/command_processing.c **** 
1471:..\src/command_processing.c ****         strcat(info_string, "PID Controller:\r\n");
 7710              		.loc 1 1471 0
 7711 0564 7868     		ldr	r0, [r7, #4]
 7712 0566 FFF7FEFF 		bl	strlen
 7713 056a 0346     		mov	r3, r0
 7714 056c 1A46     		mov	r2, r3
 7715 056e 7B68     		ldr	r3, [r7, #4]
 7716 0570 1344     		add	r3, r3, r2
 7717 0572 3F4A     		ldr	r2, .L459+72
 7718 0574 1D46     		mov	r5, r3
 7719 0576 1446     		mov	r4, r2
 7720 0578 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 189


 7721 057a 2860     		str	r0, [r5]	@ unaligned
 7722 057c 6960     		str	r1, [r5, #4]	@ unaligned
 7723 057e AA60     		str	r2, [r5, #8]	@ unaligned
 7724 0580 EB60     		str	r3, [r5, #12]	@ unaligned
 7725 0582 2388     		ldrh	r3, [r4]	@ unaligned
 7726 0584 2B82     		strh	r3, [r5, #16]	@ unaligned
1472:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 7727              		.loc 1 1472 0
 7728 0586 294B     		ldr	r3, .L459+4
 7729 0588 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7730 058c 032B     		cmp	r3, #3
 7731 058e 79D0     		beq	.L406
1473:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p / 65536));
 7732              		.loc 1 1473 0
 7733 0590 264B     		ldr	r3, .L459+4
 7734 0592 5B68     		ldr	r3, [r3, #4]
 7735 0594 1846     		mov	r0, r3
 7736 0596 FFF7FEFF 		bl	__aeabi_i2d
 7737 059a 4FF00002 		mov	r2, #0
 7738 059e 354B     		ldr	r3, .L459+76
 7739 05a0 FFF7FEFF 		bl	__aeabi_ddiv
 7740 05a4 0346     		mov	r3, r0
 7741 05a6 0C46     		mov	r4, r1
 7742 05a8 07F10800 		add	r0, r7, #8
 7743 05ac 1A46     		mov	r2, r3
 7744 05ae 2346     		mov	r3, r4
 7745 05b0 3149     		ldr	r1, .L459+80
 7746 05b2 FFF7FEFF 		bl	sprintf
1474:..\src/command_processing.c ****             strcat(info_string, str);
 7747              		.loc 1 1474 0
 7748 05b6 07F10803 		add	r3, r7, #8
 7749 05ba 1946     		mov	r1, r3
 7750 05bc 7868     		ldr	r0, [r7, #4]
 7751 05be FFF7FEFF 		bl	strcat
1475:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i / 65536));
 7752              		.loc 1 1475 0
 7753 05c2 1A4B     		ldr	r3, .L459+4
 7754 05c4 9B68     		ldr	r3, [r3, #8]
 7755 05c6 1846     		mov	r0, r3
 7756 05c8 FFF7FEFF 		bl	__aeabi_i2d
 7757 05cc 4FF00002 		mov	r2, #0
 7758 05d0 284B     		ldr	r3, .L459+76
 7759 05d2 FFF7FEFF 		bl	__aeabi_ddiv
 7760 05d6 0346     		mov	r3, r0
 7761 05d8 0C46     		mov	r4, r1
 7762 05da 07F10800 		add	r0, r7, #8
 7763 05de 1A46     		mov	r2, r3
 7764 05e0 2346     		mov	r3, r4
 7765 05e2 2649     		ldr	r1, .L459+84
 7766 05e4 FFF7FEFF 		bl	sprintf
1476:..\src/command_processing.c ****             strcat(info_string, str);
 7767              		.loc 1 1476 0
 7768 05e8 07F10803 		add	r3, r7, #8
 7769 05ec 1946     		mov	r1, r3
 7770 05ee 7868     		ldr	r0, [r7, #4]
 7771 05f0 FFF7FEFF 		bl	strcat
1477:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d / 65536));
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 190


 7772              		.loc 1 1477 0
 7773 05f4 0D4B     		ldr	r3, .L459+4
 7774 05f6 DB68     		ldr	r3, [r3, #12]
 7775 05f8 1846     		mov	r0, r3
 7776 05fa FFF7FEFF 		bl	__aeabi_i2d
 7777 05fe 4FF00002 		mov	r2, #0
 7778 0602 1C4B     		ldr	r3, .L459+76
 7779 0604 FFF7FEFF 		bl	__aeabi_ddiv
 7780 0608 0346     		mov	r3, r0
 7781 060a 0C46     		mov	r4, r1
 7782 060c 07F10800 		add	r0, r7, #8
 7783 0610 1A46     		mov	r2, r3
 7784 0612 2346     		mov	r3, r4
 7785 0614 1A49     		ldr	r1, .L459+88
 7786 0616 FFF7FEFF 		bl	sprintf
1478:..\src/command_processing.c ****             strcat(info_string, str);
 7787              		.loc 1 1478 0
 7788 061a 07F10803 		add	r3, r7, #8
 7789 061e 1946     		mov	r1, r3
 7790 0620 7868     		ldr	r0, [r7, #4]
 7791 0622 FFF7FEFF 		bl	strcat
 7792 0626 78E0     		b	.L407
 7793              	.L460:
 7794              		.align	2
 7795              	.L459:
 7796 0628 00000000 		.word	g_refOld
 7797 062c 00000000 		.word	c_mem
 7798 0630 70080000 		.word	.LC92
 7799 0634 60070000 		.word	.LC75
 7800 0638 74080000 		.word	.LC93
 7801 063c 00000000 		.word	g_ref
 7802 0640 84080000 		.word	.LC94
 7803 0644 8C080000 		.word	.LC95
 7804 0648 94080000 		.word	.LC96
 7805 064c AC080000 		.word	.LC97
 7806 0650 00000000 		.word	g_meas
 7807 0654 BC080000 		.word	.LC98
 7808 0658 00000000 		.word	dev_tension
 7809 065c C8080000 		.word	.LC99
 7810 0660 00000000 		.word	pow_tension
 7811 0664 E4080000 		.word	.LC100
 7812 0668 08090000 		.word	.LC101
 7813 066c 1C090000 		.word	.LC102
 7814 0670 34090000 		.word	.LC103
 7815 0674 0000F040 		.word	1089470464
 7816 0678 48090000 		.word	.LC104
 7817 067c 54090000 		.word	.LC105
 7818 0680 60090000 		.word	.LC106
 7819              	.L406:
1479:..\src/command_processing.c ****         }
1480:..\src/command_processing.c ****         else { 
1481:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_dl / 65536));
 7820              		.loc 1 1481 0
 7821 0684 C44B     		ldr	r3, .L461
 7822 0686 DB69     		ldr	r3, [r3, #28]
 7823 0688 1846     		mov	r0, r3
 7824 068a FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 191


 7825 068e 4FF00002 		mov	r2, #0
 7826 0692 C24B     		ldr	r3, .L461+4
 7827 0694 FFF7FEFF 		bl	__aeabi_ddiv
 7828 0698 0346     		mov	r3, r0
 7829 069a 0C46     		mov	r4, r1
 7830 069c 07F10800 		add	r0, r7, #8
 7831 06a0 1A46     		mov	r2, r3
 7832 06a2 2346     		mov	r3, r4
 7833 06a4 BE49     		ldr	r1, .L461+8
 7834 06a6 FFF7FEFF 		bl	sprintf
1482:..\src/command_processing.c ****             strcat(info_string, str);
 7835              		.loc 1 1482 0
 7836 06aa 07F10803 		add	r3, r7, #8
 7837 06ae 1946     		mov	r1, r3
 7838 06b0 7868     		ldr	r0, [r7, #4]
 7839 06b2 FFF7FEFF 		bl	strcat
1483:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_dl / 65536));
 7840              		.loc 1 1483 0
 7841 06b6 B84B     		ldr	r3, .L461
 7842 06b8 1B6A     		ldr	r3, [r3, #32]
 7843 06ba 1846     		mov	r0, r3
 7844 06bc FFF7FEFF 		bl	__aeabi_i2d
 7845 06c0 4FF00002 		mov	r2, #0
 7846 06c4 B54B     		ldr	r3, .L461+4
 7847 06c6 FFF7FEFF 		bl	__aeabi_ddiv
 7848 06ca 0346     		mov	r3, r0
 7849 06cc 0C46     		mov	r4, r1
 7850 06ce 07F10800 		add	r0, r7, #8
 7851 06d2 1A46     		mov	r2, r3
 7852 06d4 2346     		mov	r3, r4
 7853 06d6 B349     		ldr	r1, .L461+12
 7854 06d8 FFF7FEFF 		bl	sprintf
1484:..\src/command_processing.c ****             strcat(info_string, str);
 7855              		.loc 1 1484 0
 7856 06dc 07F10803 		add	r3, r7, #8
 7857 06e0 1946     		mov	r1, r3
 7858 06e2 7868     		ldr	r0, [r7, #4]
 7859 06e4 FFF7FEFF 		bl	strcat
1485:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_dl / 65536));
 7860              		.loc 1 1485 0
 7861 06e8 AB4B     		ldr	r3, .L461
 7862 06ea 5B6A     		ldr	r3, [r3, #36]
 7863 06ec 1846     		mov	r0, r3
 7864 06ee FFF7FEFF 		bl	__aeabi_i2d
 7865 06f2 4FF00002 		mov	r2, #0
 7866 06f6 A94B     		ldr	r3, .L461+4
 7867 06f8 FFF7FEFF 		bl	__aeabi_ddiv
 7868 06fc 0346     		mov	r3, r0
 7869 06fe 0C46     		mov	r4, r1
 7870 0700 07F10800 		add	r0, r7, #8
 7871 0704 1A46     		mov	r2, r3
 7872 0706 2346     		mov	r3, r4
 7873 0708 A749     		ldr	r1, .L461+16
 7874 070a FFF7FEFF 		bl	sprintf
1486:..\src/command_processing.c ****             strcat(info_string, str);
 7875              		.loc 1 1486 0
 7876 070e 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 192


 7877 0712 1946     		mov	r1, r3
 7878 0714 7868     		ldr	r0, [r7, #4]
 7879 0716 FFF7FEFF 		bl	strcat
 7880              	.L407:
1487:..\src/command_processing.c ****         }
1488:..\src/command_processing.c **** 
1489:..\src/command_processing.c ****         strcat(info_string, "Current PID Controller:\r\n");
 7881              		.loc 1 1489 0
 7882 071a 7868     		ldr	r0, [r7, #4]
 7883 071c FFF7FEFF 		bl	strlen
 7884 0720 0346     		mov	r3, r0
 7885 0722 1A46     		mov	r2, r3
 7886 0724 7B68     		ldr	r3, [r7, #4]
 7887 0726 1344     		add	r3, r3, r2
 7888 0728 A04A     		ldr	r2, .L461+20
 7889 072a 1D46     		mov	r5, r3
 7890 072c 1446     		mov	r4, r2
 7891 072e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 7892 0730 2860     		str	r0, [r5]	@ unaligned
 7893 0732 6960     		str	r1, [r5, #4]	@ unaligned
 7894 0734 AA60     		str	r2, [r5, #8]	@ unaligned
 7895 0736 EB60     		str	r3, [r5, #12]	@ unaligned
 7896 0738 03CC     		ldmia	r4!, {r0, r1}
 7897 073a 2861     		str	r0, [r5, #16]	@ unaligned
 7898 073c 6961     		str	r1, [r5, #20]	@ unaligned
 7899 073e 2388     		ldrh	r3, [r4]	@ unaligned
 7900 0740 2B83     		strh	r3, [r5, #24]	@ unaligned
1490:..\src/command_processing.c ****         if(c_mem.control_mode != CURR_AND_POS_CONTROL) {
 7901              		.loc 1 1490 0
 7902 0742 954B     		ldr	r3, .L461
 7903 0744 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 7904 0748 032B     		cmp	r3, #3
 7905 074a 4BD0     		beq	.L408
1491:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c / 65536));
 7906              		.loc 1 1491 0
 7907 074c 924B     		ldr	r3, .L461
 7908 074e 1B69     		ldr	r3, [r3, #16]
 7909 0750 1846     		mov	r0, r3
 7910 0752 FFF7FEFF 		bl	__aeabi_i2d
 7911 0756 4FF00002 		mov	r2, #0
 7912 075a 904B     		ldr	r3, .L461+4
 7913 075c FFF7FEFF 		bl	__aeabi_ddiv
 7914 0760 0346     		mov	r3, r0
 7915 0762 0C46     		mov	r4, r1
 7916 0764 07F10800 		add	r0, r7, #8
 7917 0768 1A46     		mov	r2, r3
 7918 076a 2346     		mov	r3, r4
 7919 076c 8C49     		ldr	r1, .L461+8
 7920 076e FFF7FEFF 		bl	sprintf
1492:..\src/command_processing.c ****             strcat(info_string, str);
 7921              		.loc 1 1492 0
 7922 0772 07F10803 		add	r3, r7, #8
 7923 0776 1946     		mov	r1, r3
 7924 0778 7868     		ldr	r0, [r7, #4]
 7925 077a FFF7FEFF 		bl	strcat
1493:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c / 65536));
 7926              		.loc 1 1493 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 193


 7927 077e 864B     		ldr	r3, .L461
 7928 0780 5B69     		ldr	r3, [r3, #20]
 7929 0782 1846     		mov	r0, r3
 7930 0784 FFF7FEFF 		bl	__aeabi_i2d
 7931 0788 4FF00002 		mov	r2, #0
 7932 078c 834B     		ldr	r3, .L461+4
 7933 078e FFF7FEFF 		bl	__aeabi_ddiv
 7934 0792 0346     		mov	r3, r0
 7935 0794 0C46     		mov	r4, r1
 7936 0796 07F10800 		add	r0, r7, #8
 7937 079a 1A46     		mov	r2, r3
 7938 079c 2346     		mov	r3, r4
 7939 079e 8149     		ldr	r1, .L461+12
 7940 07a0 FFF7FEFF 		bl	sprintf
1494:..\src/command_processing.c ****             strcat(info_string, str);
 7941              		.loc 1 1494 0
 7942 07a4 07F10803 		add	r3, r7, #8
 7943 07a8 1946     		mov	r1, r3
 7944 07aa 7868     		ldr	r0, [r7, #4]
 7945 07ac FFF7FEFF 		bl	strcat
1495:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c / 65536));
 7946              		.loc 1 1495 0
 7947 07b0 794B     		ldr	r3, .L461
 7948 07b2 9B69     		ldr	r3, [r3, #24]
 7949 07b4 1846     		mov	r0, r3
 7950 07b6 FFF7FEFF 		bl	__aeabi_i2d
 7951 07ba 4FF00002 		mov	r2, #0
 7952 07be 774B     		ldr	r3, .L461+4
 7953 07c0 FFF7FEFF 		bl	__aeabi_ddiv
 7954 07c4 0346     		mov	r3, r0
 7955 07c6 0C46     		mov	r4, r1
 7956 07c8 07F10800 		add	r0, r7, #8
 7957 07cc 1A46     		mov	r2, r3
 7958 07ce 2346     		mov	r3, r4
 7959 07d0 7549     		ldr	r1, .L461+16
 7960 07d2 FFF7FEFF 		bl	sprintf
1496:..\src/command_processing.c ****             strcat(info_string, str);
 7961              		.loc 1 1496 0
 7962 07d6 07F10803 		add	r3, r7, #8
 7963 07da 1946     		mov	r1, r3
 7964 07dc 7868     		ldr	r0, [r7, #4]
 7965 07de FFF7FEFF 		bl	strcat
 7966 07e2 4AE0     		b	.L409
 7967              	.L408:
1497:..\src/command_processing.c **** 
1498:..\src/command_processing.c ****         }
1499:..\src/command_processing.c ****         else {
1500:..\src/command_processing.c ****             sprintf(str, "P -> %f  ", ((double) c_mem.k_p_c_dl / 65536));
 7968              		.loc 1 1500 0
 7969 07e4 6C4B     		ldr	r3, .L461
 7970 07e6 9B6A     		ldr	r3, [r3, #40]
 7971 07e8 1846     		mov	r0, r3
 7972 07ea FFF7FEFF 		bl	__aeabi_i2d
 7973 07ee 4FF00002 		mov	r2, #0
 7974 07f2 6A4B     		ldr	r3, .L461+4
 7975 07f4 FFF7FEFF 		bl	__aeabi_ddiv
 7976 07f8 0346     		mov	r3, r0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 194


 7977 07fa 0C46     		mov	r4, r1
 7978 07fc 07F10800 		add	r0, r7, #8
 7979 0800 1A46     		mov	r2, r3
 7980 0802 2346     		mov	r3, r4
 7981 0804 6649     		ldr	r1, .L461+8
 7982 0806 FFF7FEFF 		bl	sprintf
1501:..\src/command_processing.c ****             strcat(info_string, str);
 7983              		.loc 1 1501 0
 7984 080a 07F10803 		add	r3, r7, #8
 7985 080e 1946     		mov	r1, r3
 7986 0810 7868     		ldr	r0, [r7, #4]
 7987 0812 FFF7FEFF 		bl	strcat
1502:..\src/command_processing.c ****             sprintf(str, "I -> %f  ", ((double) c_mem.k_i_c_dl / 65536));
 7988              		.loc 1 1502 0
 7989 0816 604B     		ldr	r3, .L461
 7990 0818 DB6A     		ldr	r3, [r3, #44]
 7991 081a 1846     		mov	r0, r3
 7992 081c FFF7FEFF 		bl	__aeabi_i2d
 7993 0820 4FF00002 		mov	r2, #0
 7994 0824 5D4B     		ldr	r3, .L461+4
 7995 0826 FFF7FEFF 		bl	__aeabi_ddiv
 7996 082a 0346     		mov	r3, r0
 7997 082c 0C46     		mov	r4, r1
 7998 082e 07F10800 		add	r0, r7, #8
 7999 0832 1A46     		mov	r2, r3
 8000 0834 2346     		mov	r3, r4
 8001 0836 5B49     		ldr	r1, .L461+12
 8002 0838 FFF7FEFF 		bl	sprintf
1503:..\src/command_processing.c ****             strcat(info_string, str);
 8003              		.loc 1 1503 0
 8004 083c 07F10803 		add	r3, r7, #8
 8005 0840 1946     		mov	r1, r3
 8006 0842 7868     		ldr	r0, [r7, #4]
 8007 0844 FFF7FEFF 		bl	strcat
1504:..\src/command_processing.c ****             sprintf(str, "D -> %f\r\n", ((double) c_mem.k_d_c_dl / 65536));
 8008              		.loc 1 1504 0
 8009 0848 534B     		ldr	r3, .L461
 8010 084a 1B6B     		ldr	r3, [r3, #48]
 8011 084c 1846     		mov	r0, r3
 8012 084e FFF7FEFF 		bl	__aeabi_i2d
 8013 0852 4FF00002 		mov	r2, #0
 8014 0856 514B     		ldr	r3, .L461+4
 8015 0858 FFF7FEFF 		bl	__aeabi_ddiv
 8016 085c 0346     		mov	r3, r0
 8017 085e 0C46     		mov	r4, r1
 8018 0860 07F10800 		add	r0, r7, #8
 8019 0864 1A46     		mov	r2, r3
 8020 0866 2346     		mov	r3, r4
 8021 0868 4F49     		ldr	r1, .L461+16
 8022 086a FFF7FEFF 		bl	sprintf
1505:..\src/command_processing.c ****             strcat(info_string, str);
 8023              		.loc 1 1505 0
 8024 086e 07F10803 		add	r3, r7, #8
 8025 0872 1946     		mov	r1, r3
 8026 0874 7868     		ldr	r0, [r7, #4]
 8027 0876 FFF7FEFF 		bl	strcat
 8028              	.L409:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 195


1506:..\src/command_processing.c ****         }
1507:..\src/command_processing.c **** 
1508:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8029              		.loc 1 1508 0
 8030 087a 7868     		ldr	r0, [r7, #4]
 8031 087c FFF7FEFF 		bl	strlen
 8032 0880 0346     		mov	r3, r0
 8033 0882 1A46     		mov	r2, r3
 8034 0884 7B68     		ldr	r3, [r7, #4]
 8035 0886 1344     		add	r3, r3, r2
 8036 0888 494A     		ldr	r2, .L461+24
 8037 088a 1188     		ldrh	r1, [r2]	@ unaligned
 8038 088c 9278     		ldrb	r2, [r2, #2]
 8039 088e 1980     		strh	r1, [r3]	@ unaligned
 8040 0890 9A70     		strb	r2, [r3, #2]
1509:..\src/command_processing.c **** 
1510:..\src/command_processing.c ****         if (c_mem.activ == 0x01)
 8041              		.loc 1 1510 0
 8042 0892 414B     		ldr	r3, .L461
 8043 0894 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 8044 0898 012B     		cmp	r3, #1
 8045 089a 14D1     		bne	.L410
1511:..\src/command_processing.c ****             strcat(info_string, "Startup activation: YES\r\n");
 8046              		.loc 1 1511 0
 8047 089c 7868     		ldr	r0, [r7, #4]
 8048 089e FFF7FEFF 		bl	strlen
 8049 08a2 0346     		mov	r3, r0
 8050 08a4 1A46     		mov	r2, r3
 8051 08a6 7B68     		ldr	r3, [r7, #4]
 8052 08a8 1344     		add	r3, r3, r2
 8053 08aa 424A     		ldr	r2, .L461+28
 8054 08ac 1D46     		mov	r5, r3
 8055 08ae 1446     		mov	r4, r2
 8056 08b0 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8057 08b2 2860     		str	r0, [r5]	@ unaligned
 8058 08b4 6960     		str	r1, [r5, #4]	@ unaligned
 8059 08b6 AA60     		str	r2, [r5, #8]	@ unaligned
 8060 08b8 EB60     		str	r3, [r5, #12]	@ unaligned
 8061 08ba 03CC     		ldmia	r4!, {r0, r1}
 8062 08bc 2861     		str	r0, [r5, #16]	@ unaligned
 8063 08be 6961     		str	r1, [r5, #20]	@ unaligned
 8064 08c0 2388     		ldrh	r3, [r4]	@ unaligned
 8065 08c2 2B83     		strh	r3, [r5, #24]	@ unaligned
 8066 08c4 13E0     		b	.L411
 8067              	.L410:
1512:..\src/command_processing.c ****         else
1513:..\src/command_processing.c ****             strcat(info_string, "Startup activation: NO\r\n");
 8068              		.loc 1 1513 0
 8069 08c6 7868     		ldr	r0, [r7, #4]
 8070 08c8 FFF7FEFF 		bl	strlen
 8071 08cc 0346     		mov	r3, r0
 8072 08ce 1A46     		mov	r2, r3
 8073 08d0 7B68     		ldr	r3, [r7, #4]
 8074 08d2 1344     		add	r3, r3, r2
 8075 08d4 384A     		ldr	r2, .L461+32
 8076 08d6 1D46     		mov	r5, r3
 8077 08d8 1446     		mov	r4, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 196


 8078 08da 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8079 08dc 2860     		str	r0, [r5]	@ unaligned
 8080 08de 6960     		str	r1, [r5, #4]	@ unaligned
 8081 08e0 AA60     		str	r2, [r5, #8]	@ unaligned
 8082 08e2 EB60     		str	r3, [r5, #12]	@ unaligned
 8083 08e4 03CC     		ldmia	r4!, {r0, r1}
 8084 08e6 2861     		str	r0, [r5, #16]	@ unaligned
 8085 08e8 6961     		str	r1, [r5, #20]	@ unaligned
 8086 08ea 2378     		ldrb	r3, [r4]
 8087 08ec 2B76     		strb	r3, [r5, #24]
 8088              	.L411:
1514:..\src/command_processing.c **** 
1515:..\src/command_processing.c ****         switch(c_mem.input_mode) {
 8089              		.loc 1 1515 0
 8090 08ee 2A4B     		ldr	r3, .L461
 8091 08f0 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 8092 08f4 052B     		cmp	r3, #5
 8093 08f6 00F2AE80 		bhi	.L412
 8094 08fa 01A2     		adr	r2, .L414
 8095 08fc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8096              		.p2align 2
 8097              	.L414:
 8098 0900 19090000 		.word	.L413+1
 8099 0904 3D090000 		.word	.L415+1
 8100 0908 65090000 		.word	.L416+1
 8101 090c C9090000 		.word	.L417+1
 8102 0910 F9090000 		.word	.L418+1
 8103 0914 270A0000 		.word	.L419+1
 8104              		.p2align 1
 8105              	.L413:
1516:..\src/command_processing.c ****             case INPUT_MODE_EXTERNAL:
1517:..\src/command_processing.c ****                 strcat(info_string, "Input mode: USB\r\n");
 8106              		.loc 1 1517 0
 8107 0918 7868     		ldr	r0, [r7, #4]
 8108 091a FFF7FEFF 		bl	strlen
 8109 091e 0346     		mov	r3, r0
 8110 0920 1A46     		mov	r2, r3
 8111 0922 7B68     		ldr	r3, [r7, #4]
 8112 0924 1344     		add	r3, r3, r2
 8113 0926 254A     		ldr	r2, .L461+36
 8114 0928 1D46     		mov	r5, r3
 8115 092a 1446     		mov	r4, r2
 8116 092c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8117 092e 2860     		str	r0, [r5]	@ unaligned
 8118 0930 6960     		str	r1, [r5, #4]	@ unaligned
 8119 0932 AA60     		str	r2, [r5, #8]	@ unaligned
 8120 0934 EB60     		str	r3, [r5, #12]	@ unaligned
 8121 0936 2388     		ldrh	r3, [r4]	@ unaligned
 8122 0938 2B82     		strh	r3, [r5, #16]	@ unaligned
1518:..\src/command_processing.c ****                 break;
 8123              		.loc 1 1518 0
 8124 093a 8CE0     		b	.L412
 8125              	.L415:
1519:..\src/command_processing.c ****             case INPUT_MODE_ENCODER3:
1520:..\src/command_processing.c ****                 strcat(info_string, "Input mode: Handle\r\n");
 8126              		.loc 1 1520 0
 8127 093c 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 197


 8128 093e FFF7FEFF 		bl	strlen
 8129 0942 0346     		mov	r3, r0
 8130 0944 1A46     		mov	r2, r3
 8131 0946 7B68     		ldr	r3, [r7, #4]
 8132 0948 1344     		add	r3, r3, r2
 8133 094a 1D4A     		ldr	r2, .L461+40
 8134 094c 1D46     		mov	r5, r3
 8135 094e 1446     		mov	r4, r2
 8136 0950 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8137 0952 2860     		str	r0, [r5]	@ unaligned
 8138 0954 6960     		str	r1, [r5, #4]	@ unaligned
 8139 0956 AA60     		str	r2, [r5, #8]	@ unaligned
 8140 0958 EB60     		str	r3, [r5, #12]	@ unaligned
 8141 095a 2068     		ldr	r0, [r4]	@ unaligned
 8142 095c 2861     		str	r0, [r5, #16]	@ unaligned
 8143 095e 2379     		ldrb	r3, [r4, #4]
 8144 0960 2B75     		strb	r3, [r5, #20]
1521:..\src/command_processing.c ****                 break;
 8145              		.loc 1 1521 0
 8146 0962 78E0     		b	.L412
 8147              	.L416:
1522:..\src/command_processing.c ****             case INPUT_MODE_EMG_PROPORTIONAL:
1523:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG proportional\r\n");
 8148              		.loc 1 1523 0
 8149 0964 7868     		ldr	r0, [r7, #4]
 8150 0966 FFF7FEFF 		bl	strlen
 8151 096a 0346     		mov	r3, r0
 8152 096c 1A46     		mov	r2, r3
 8153 096e 7B68     		ldr	r3, [r7, #4]
 8154 0970 1344     		add	r3, r3, r2
 8155 0972 144A     		ldr	r2, .L461+44
 8156 0974 1D46     		mov	r5, r3
 8157 0976 1446     		mov	r4, r2
 8158 0978 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8159 097a 2860     		str	r0, [r5]	@ unaligned
 8160 097c 6960     		str	r1, [r5, #4]	@ unaligned
 8161 097e AA60     		str	r2, [r5, #8]	@ unaligned
 8162 0980 EB60     		str	r3, [r5, #12]	@ unaligned
 8163 0982 07CC     		ldmia	r4!, {r0, r1, r2}
 8164 0984 2861     		str	r0, [r5, #16]	@ unaligned
 8165 0986 6961     		str	r1, [r5, #20]	@ unaligned
 8166 0988 AA61     		str	r2, [r5, #24]	@ unaligned
 8167 098a 2388     		ldrh	r3, [r4]	@ unaligned
 8168 098c A278     		ldrb	r2, [r4, #2]
 8169 098e AB83     		strh	r3, [r5, #28]	@ unaligned
 8170 0990 1346     		mov	r3, r2
 8171 0992 AB77     		strb	r3, [r5, #30]
1524:..\src/command_processing.c ****                 break;
 8172              		.loc 1 1524 0
 8173 0994 5FE0     		b	.L412
 8174              	.L462:
 8175 0996 00BF     		.align	2
 8176              	.L461:
 8177 0998 00000000 		.word	c_mem
 8178 099c 0000F040 		.word	1089470464
 8179 09a0 48090000 		.word	.LC104
 8180 09a4 54090000 		.word	.LC105
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 198


 8181 09a8 60090000 		.word	.LC106
 8182 09ac 6C090000 		.word	.LC107
 8183 09b0 60070000 		.word	.LC75
 8184 09b4 88090000 		.word	.LC108
 8185 09b8 A4090000 		.word	.LC109
 8186 09bc C0090000 		.word	.LC110
 8187 09c0 D4090000 		.word	.LC111
 8188 09c4 EC090000 		.word	.LC112
 8189              	.L417:
1525:..\src/command_processing.c ****             case INPUT_MODE_EMG_INTEGRAL:
1526:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG integral\r\n");
 8190              		.loc 1 1526 0
 8191 09c8 7868     		ldr	r0, [r7, #4]
 8192 09ca FFF7FEFF 		bl	strlen
 8193 09ce 0346     		mov	r3, r0
 8194 09d0 1A46     		mov	r2, r3
 8195 09d2 7B68     		ldr	r3, [r7, #4]
 8196 09d4 1344     		add	r3, r3, r2
 8197 09d6 C24A     		ldr	r2, .L463
 8198 09d8 1D46     		mov	r5, r3
 8199 09da 1446     		mov	r4, r2
 8200 09dc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8201 09de 2860     		str	r0, [r5]	@ unaligned
 8202 09e0 6960     		str	r1, [r5, #4]	@ unaligned
 8203 09e2 AA60     		str	r2, [r5, #8]	@ unaligned
 8204 09e4 EB60     		str	r3, [r5, #12]	@ unaligned
 8205 09e6 03CC     		ldmia	r4!, {r0, r1}
 8206 09e8 2861     		str	r0, [r5, #16]	@ unaligned
 8207 09ea 6961     		str	r1, [r5, #20]	@ unaligned
 8208 09ec 2388     		ldrh	r3, [r4]	@ unaligned
 8209 09ee A278     		ldrb	r2, [r4, #2]
 8210 09f0 2B83     		strh	r3, [r5, #24]	@ unaligned
 8211 09f2 1346     		mov	r3, r2
 8212 09f4 AB76     		strb	r3, [r5, #26]
1527:..\src/command_processing.c ****                 break;
 8213              		.loc 1 1527 0
 8214 09f6 2EE0     		b	.L412
 8215              	.L418:
1528:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS:
1529:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS\r\n");
 8216              		.loc 1 1529 0
 8217 09f8 7868     		ldr	r0, [r7, #4]
 8218 09fa FFF7FEFF 		bl	strlen
 8219 09fe 0346     		mov	r3, r0
 8220 0a00 1A46     		mov	r2, r3
 8221 0a02 7B68     		ldr	r3, [r7, #4]
 8222 0a04 1344     		add	r3, r3, r2
 8223 0a06 B74A     		ldr	r2, .L463+4
 8224 0a08 1C46     		mov	r4, r3
 8225 0a0a 1546     		mov	r5, r2
 8226 0a0c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8227 0a0e 2060     		str	r0, [r4]	@ unaligned
 8228 0a10 6160     		str	r1, [r4, #4]	@ unaligned
 8229 0a12 A260     		str	r2, [r4, #8]	@ unaligned
 8230 0a14 E360     		str	r3, [r4, #12]	@ unaligned
 8231 0a16 2868     		ldr	r0, [r5]	@ unaligned
 8232 0a18 2061     		str	r0, [r4, #16]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 199


 8233 0a1a AB88     		ldrh	r3, [r5, #4]	@ unaligned
 8234 0a1c AA79     		ldrb	r2, [r5, #6]
 8235 0a1e A382     		strh	r3, [r4, #20]	@ unaligned
 8236 0a20 1346     		mov	r3, r2
 8237 0a22 A375     		strb	r3, [r4, #22]
1530:..\src/command_processing.c ****                 break;
 8238              		.loc 1 1530 0
 8239 0a24 17E0     		b	.L412
 8240              	.L419:
1531:..\src/command_processing.c ****             case INPUT_MODE_EMG_FCFS_ADV:
1532:..\src/command_processing.c ****                 strcat(info_string, "Input mode: EMG FCFS ADV\r\n");
 8241              		.loc 1 1532 0
 8242 0a26 7868     		ldr	r0, [r7, #4]
 8243 0a28 FFF7FEFF 		bl	strlen
 8244 0a2c 0346     		mov	r3, r0
 8245 0a2e 1A46     		mov	r2, r3
 8246 0a30 7B68     		ldr	r3, [r7, #4]
 8247 0a32 1344     		add	r3, r3, r2
 8248 0a34 AC4A     		ldr	r2, .L463+8
 8249 0a36 1D46     		mov	r5, r3
 8250 0a38 1446     		mov	r4, r2
 8251 0a3a 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8252 0a3c 2860     		str	r0, [r5]	@ unaligned
 8253 0a3e 6960     		str	r1, [r5, #4]	@ unaligned
 8254 0a40 AA60     		str	r2, [r5, #8]	@ unaligned
 8255 0a42 EB60     		str	r3, [r5, #12]	@ unaligned
 8256 0a44 03CC     		ldmia	r4!, {r0, r1}
 8257 0a46 2861     		str	r0, [r5, #16]	@ unaligned
 8258 0a48 6961     		str	r1, [r5, #20]	@ unaligned
 8259 0a4a 2388     		ldrh	r3, [r4]	@ unaligned
 8260 0a4c A278     		ldrb	r2, [r4, #2]
 8261 0a4e 2B83     		strh	r3, [r5, #24]	@ unaligned
 8262 0a50 1346     		mov	r3, r2
 8263 0a52 AB76     		strb	r3, [r5, #26]
1533:..\src/command_processing.c ****                 break;
 8264              		.loc 1 1533 0
 8265 0a54 00BF     		nop
 8266              	.L412:
1534:..\src/command_processing.c ****         }
1535:..\src/command_processing.c **** 
1536:..\src/command_processing.c ****         switch(c_mem.control_mode) {
 8267              		.loc 1 1536 0
 8268 0a56 A54B     		ldr	r3, .L463+12
 8269 0a58 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 8270 0a5c 032B     		cmp	r3, #3
 8271 0a5e 64D8     		bhi	.L456
 8272 0a60 01A2     		adr	r2, .L422
 8273 0a62 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 8274 0a66 00BF     		.p2align 2
 8275              	.L422:
 8276 0a68 790A0000 		.word	.L421+1
 8277 0a6c A30A0000 		.word	.L423+1
 8278 0a70 C70A0000 		.word	.L424+1
 8279 0a74 ED0A0000 		.word	.L425+1
 8280              		.p2align 1
 8281              	.L421:
1537:..\src/command_processing.c ****             case CONTROL_ANGLE:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 200


1538:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position\r\n");
 8282              		.loc 1 1538 0
 8283 0a78 7868     		ldr	r0, [r7, #4]
 8284 0a7a FFF7FEFF 		bl	strlen
 8285 0a7e 0346     		mov	r3, r0
 8286 0a80 1A46     		mov	r2, r3
 8287 0a82 7B68     		ldr	r3, [r7, #4]
 8288 0a84 1344     		add	r3, r3, r2
 8289 0a86 9A4A     		ldr	r2, .L463+16
 8290 0a88 1D46     		mov	r5, r3
 8291 0a8a 1446     		mov	r4, r2
 8292 0a8c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8293 0a8e 2860     		str	r0, [r5]	@ unaligned
 8294 0a90 6960     		str	r1, [r5, #4]	@ unaligned
 8295 0a92 AA60     		str	r2, [r5, #8]	@ unaligned
 8296 0a94 EB60     		str	r3, [r5, #12]	@ unaligned
 8297 0a96 03CC     		ldmia	r4!, {r0, r1}
 8298 0a98 2861     		str	r0, [r5, #16]	@ unaligned
 8299 0a9a 6961     		str	r1, [r5, #20]	@ unaligned
 8300 0a9c 2378     		ldrb	r3, [r4]
 8301 0a9e 2B76     		strb	r3, [r5, #24]
1539:..\src/command_processing.c ****                 break;
 8302              		.loc 1 1539 0
 8303 0aa0 44E0     		b	.L426
 8304              	.L423:
1540:..\src/command_processing.c ****             case CONTROL_PWM:
1541:..\src/command_processing.c ****                 strcat(info_string, "Control mode: PWM\r\n");
 8305              		.loc 1 1541 0
 8306 0aa2 7868     		ldr	r0, [r7, #4]
 8307 0aa4 FFF7FEFF 		bl	strlen
 8308 0aa8 0346     		mov	r3, r0
 8309 0aaa 1A46     		mov	r2, r3
 8310 0aac 7B68     		ldr	r3, [r7, #4]
 8311 0aae 1344     		add	r3, r3, r2
 8312 0ab0 904A     		ldr	r2, .L463+20
 8313 0ab2 1D46     		mov	r5, r3
 8314 0ab4 1446     		mov	r4, r2
 8315 0ab6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8316 0ab8 2860     		str	r0, [r5]	@ unaligned
 8317 0aba 6960     		str	r1, [r5, #4]	@ unaligned
 8318 0abc AA60     		str	r2, [r5, #8]	@ unaligned
 8319 0abe EB60     		str	r3, [r5, #12]	@ unaligned
 8320 0ac0 2068     		ldr	r0, [r4]	@ unaligned
 8321 0ac2 2861     		str	r0, [r5, #16]	@ unaligned
1542:..\src/command_processing.c ****                 break;
 8322              		.loc 1 1542 0
 8323 0ac4 32E0     		b	.L426
 8324              	.L424:
1543:..\src/command_processing.c ****             case CONTROL_CURRENT:
1544:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Current\r\n");
 8325              		.loc 1 1544 0
 8326 0ac6 7868     		ldr	r0, [r7, #4]
 8327 0ac8 FFF7FEFF 		bl	strlen
 8328 0acc 0346     		mov	r3, r0
 8329 0ace 1A46     		mov	r2, r3
 8330 0ad0 7B68     		ldr	r3, [r7, #4]
 8331 0ad2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 201


 8332 0ad4 884A     		ldr	r2, .L463+24
 8333 0ad6 1D46     		mov	r5, r3
 8334 0ad8 1446     		mov	r4, r2
 8335 0ada 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8336 0adc 2860     		str	r0, [r5]	@ unaligned
 8337 0ade 6960     		str	r1, [r5, #4]	@ unaligned
 8338 0ae0 AA60     		str	r2, [r5, #8]	@ unaligned
 8339 0ae2 EB60     		str	r3, [r5, #12]	@ unaligned
 8340 0ae4 03CC     		ldmia	r4!, {r0, r1}
 8341 0ae6 2861     		str	r0, [r5, #16]	@ unaligned
 8342 0ae8 6961     		str	r1, [r5, #20]	@ unaligned
1545:..\src/command_processing.c ****                 break;
 8343              		.loc 1 1545 0
 8344 0aea 1FE0     		b	.L426
 8345              	.L425:
1546:..\src/command_processing.c ****             case CURR_AND_POS_CONTROL:
1547:..\src/command_processing.c ****                 strcat(info_string, "Control mode: Position and Current\r\n");
 8346              		.loc 1 1547 0
 8347 0aec 7868     		ldr	r0, [r7, #4]
 8348 0aee FFF7FEFF 		bl	strlen
 8349 0af2 0346     		mov	r3, r0
 8350 0af4 1A46     		mov	r2, r3
 8351 0af6 7B68     		ldr	r3, [r7, #4]
 8352 0af8 1344     		add	r3, r3, r2
 8353 0afa 804A     		ldr	r2, .L463+28
 8354 0afc 1446     		mov	r4, r2
 8355 0afe 9E46     		mov	lr, r3
 8356 0b00 04F1200C 		add	ip, r4, #32
 8357              	.L427:
 8358 0b04 7546     		mov	r5, lr
 8359 0b06 2646     		mov	r6, r4
 8360 0b08 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8361 0b0a 2860     		str	r0, [r5]	@ unaligned
 8362 0b0c 6960     		str	r1, [r5, #4]	@ unaligned
 8363 0b0e AA60     		str	r2, [r5, #8]	@ unaligned
 8364 0b10 EB60     		str	r3, [r5, #12]	@ unaligned
 8365 0b12 1034     		adds	r4, r4, #16
 8366 0b14 0EF1100E 		add	lr, lr, #16
 8367 0b18 6445     		cmp	r4, ip
 8368 0b1a F3D1     		bne	.L427
 8369 0b1c 7346     		mov	r3, lr
 8370 0b1e 2246     		mov	r2, r4
 8371 0b20 1068     		ldr	r0, [r2]	@ unaligned
 8372 0b22 1860     		str	r0, [r3]	@ unaligned
 8373 0b24 1279     		ldrb	r2, [r2, #4]
 8374 0b26 1A71     		strb	r2, [r3, #4]
1548:..\src/command_processing.c ****                 break;
 8375              		.loc 1 1548 0
 8376 0b28 00E0     		b	.L426
 8377              	.L456:
1549:..\src/command_processing.c ****             default:
1550:..\src/command_processing.c ****                 break;
 8378              		.loc 1 1550 0
 8379 0b2a 00BF     		nop
 8380              	.L426:
1551:..\src/command_processing.c ****         }
1552:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 202


1553:..\src/command_processing.c ****         if (c_mem.double_encoder_on_off)
 8381              		.loc 1 1553 0
 8382 0b2c 6F4B     		ldr	r3, .L463+12
 8383 0b2e 93F87930 		ldrb	r3, [r3, #121]	@ zero_extendqisi2
 8384 0b32 002B     		cmp	r3, #0
 8385 0b34 1CD0     		beq	.L428
1554:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: YES\r\n");
 8386              		.loc 1 1554 0
 8387 0b36 7868     		ldr	r0, [r7, #4]
 8388 0b38 FFF7FEFF 		bl	strlen
 8389 0b3c 0346     		mov	r3, r0
 8390 0b3e 1A46     		mov	r2, r3
 8391 0b40 7B68     		ldr	r3, [r7, #4]
 8392 0b42 1344     		add	r3, r3, r2
 8393 0b44 6E4A     		ldr	r2, .L463+32
 8394 0b46 1446     		mov	r4, r2
 8395 0b48 9E46     		mov	lr, r3
 8396 0b4a 04F1200C 		add	ip, r4, #32
 8397              	.L429:
 8398 0b4e 7546     		mov	r5, lr
 8399 0b50 2646     		mov	r6, r4
 8400 0b52 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 8401 0b54 2860     		str	r0, [r5]	@ unaligned
 8402 0b56 6960     		str	r1, [r5, #4]	@ unaligned
 8403 0b58 AA60     		str	r2, [r5, #8]	@ unaligned
 8404 0b5a EB60     		str	r3, [r5, #12]	@ unaligned
 8405 0b5c 1034     		adds	r4, r4, #16
 8406 0b5e 0EF1100E 		add	lr, lr, #16
 8407 0b62 6445     		cmp	r4, ip
 8408 0b64 F3D1     		bne	.L429
 8409 0b66 7346     		mov	r3, lr
 8410 0b68 2246     		mov	r2, r4
 8411 0b6a 1278     		ldrb	r2, [r2]
 8412 0b6c 1A70     		strb	r2, [r3]
 8413 0b6e 13E0     		b	.L430
 8414              	.L428:
1555:..\src/command_processing.c ****         else
1556:..\src/command_processing.c ****             strcat(info_string, "Absolute encoder position: NO\r\n");
 8415              		.loc 1 1556 0
 8416 0b70 7868     		ldr	r0, [r7, #4]
 8417 0b72 FFF7FEFF 		bl	strlen
 8418 0b76 0346     		mov	r3, r0
 8419 0b78 1A46     		mov	r2, r3
 8420 0b7a 7B68     		ldr	r3, [r7, #4]
 8421 0b7c 1344     		add	r3, r3, r2
 8422 0b7e 614A     		ldr	r2, .L463+36
 8423 0b80 1C46     		mov	r4, r3
 8424 0b82 1546     		mov	r5, r2
 8425 0b84 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8426 0b86 2060     		str	r0, [r4]	@ unaligned
 8427 0b88 6160     		str	r1, [r4, #4]	@ unaligned
 8428 0b8a A260     		str	r2, [r4, #8]	@ unaligned
 8429 0b8c E360     		str	r3, [r4, #12]	@ unaligned
 8430 0b8e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 8431 0b90 2061     		str	r0, [r4, #16]	@ unaligned
 8432 0b92 6161     		str	r1, [r4, #20]	@ unaligned
 8433 0b94 A261     		str	r2, [r4, #24]	@ unaligned
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 203


 8434 0b96 E361     		str	r3, [r4, #28]	@ unaligned
 8435              	.L430:
1557:..\src/command_processing.c **** 
1558:..\src/command_processing.c ****         sprintf(str, "Motor-Handle Ratio: %d\r\n", (int)c_mem.motor_handle_ratio);
 8436              		.loc 1 1558 0
 8437 0b98 544B     		ldr	r3, .L463+12
 8438 0b9a 93F97A30 		ldrsb	r3, [r3, #122]
 8439 0b9e 1A46     		mov	r2, r3
 8440 0ba0 07F10803 		add	r3, r7, #8
 8441 0ba4 5849     		ldr	r1, .L463+40
 8442 0ba6 1846     		mov	r0, r3
 8443 0ba8 FFF7FEFF 		bl	sprintf
1559:..\src/command_processing.c ****         strcat(info_string, str);
 8444              		.loc 1 1559 0
 8445 0bac 07F10803 		add	r3, r7, #8
 8446 0bb0 1946     		mov	r1, r3
 8447 0bb2 7868     		ldr	r0, [r7, #4]
 8448 0bb4 FFF7FEFF 		bl	strcat
1560:..\src/command_processing.c **** 
1561:..\src/command_processing.c ****         strcat(info_string, "Sensor resolution:\r\n");
 8449              		.loc 1 1561 0
 8450 0bb8 7868     		ldr	r0, [r7, #4]
 8451 0bba FFF7FEFF 		bl	strlen
 8452 0bbe 0346     		mov	r3, r0
 8453 0bc0 1A46     		mov	r2, r3
 8454 0bc2 7B68     		ldr	r3, [r7, #4]
 8455 0bc4 1344     		add	r3, r3, r2
 8456 0bc6 514A     		ldr	r2, .L463+44
 8457 0bc8 1D46     		mov	r5, r3
 8458 0bca 1446     		mov	r4, r2
 8459 0bcc 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8460 0bce 2860     		str	r0, [r5]	@ unaligned
 8461 0bd0 6960     		str	r1, [r5, #4]	@ unaligned
 8462 0bd2 AA60     		str	r2, [r5, #8]	@ unaligned
 8463 0bd4 EB60     		str	r3, [r5, #12]	@ unaligned
 8464 0bd6 2068     		ldr	r0, [r4]	@ unaligned
 8465 0bd8 2861     		str	r0, [r5, #16]	@ unaligned
 8466 0bda 2379     		ldrb	r3, [r4, #4]
 8467 0bdc 2B75     		strb	r3, [r5, #20]
1562:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 8468              		.loc 1 1562 0
 8469 0bde 0023     		movs	r3, #0
 8470 0be0 FB66     		str	r3, [r7, #108]
 8471 0be2 21E0     		b	.L431
 8472              	.L432:
1563:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 8473              		.loc 1 1563 0 discriminator 3
 8474 0be4 FB6E     		ldr	r3, [r7, #108]
 8475 0be6 591C     		adds	r1, r3, #1
 8476 0be8 404A     		ldr	r2, .L463+12
 8477 0bea FB6E     		ldr	r3, [r7, #108]
 8478 0bec 1344     		add	r3, r3, r2
 8479 0bee 3733     		adds	r3, r3, #55
 8480 0bf0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8481 0bf2 07F10800 		add	r0, r7, #8
 8482 0bf6 0A46     		mov	r2, r1
 8483 0bf8 4549     		ldr	r1, .L463+48
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 204


 8484 0bfa FFF7FEFF 		bl	sprintf
1564:..\src/command_processing.c ****             strcat(info_string, str);
 8485              		.loc 1 1564 0 discriminator 3
 8486 0bfe 07F10803 		add	r3, r7, #8
 8487 0c02 1946     		mov	r1, r3
 8488 0c04 7868     		ldr	r0, [r7, #4]
 8489 0c06 FFF7FEFF 		bl	strcat
1565:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8490              		.loc 1 1565 0 discriminator 3
 8491 0c0a 7868     		ldr	r0, [r7, #4]
 8492 0c0c FFF7FEFF 		bl	strlen
 8493 0c10 0346     		mov	r3, r0
 8494 0c12 1A46     		mov	r2, r3
 8495 0c14 7B68     		ldr	r3, [r7, #4]
 8496 0c16 1344     		add	r3, r3, r2
 8497 0c18 3E4A     		ldr	r2, .L463+52
 8498 0c1a 1188     		ldrh	r1, [r2]	@ unaligned
 8499 0c1c 9278     		ldrb	r2, [r2, #2]
 8500 0c1e 1980     		strh	r1, [r3]	@ unaligned
 8501 0c20 9A70     		strb	r2, [r3, #2]
1562:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 8502              		.loc 1 1562 0 discriminator 3
 8503 0c22 FB6E     		ldr	r3, [r7, #108]
 8504 0c24 0133     		adds	r3, r3, #1
 8505 0c26 FB66     		str	r3, [r7, #108]
 8506              	.L431:
1562:..\src/command_processing.c ****             sprintf(str, "%d -> %d", (int) (i + 1), (int) c_mem.res[i]);
 8507              		.loc 1 1562 0 is_stmt 0 discriminator 1
 8508 0c28 FB6E     		ldr	r3, [r7, #108]
 8509 0c2a 022B     		cmp	r3, #2
 8510 0c2c DADD     		ble	.L432
1566:..\src/command_processing.c ****         }
1567:..\src/command_processing.c **** 
1568:..\src/command_processing.c ****         strcat(info_string, "Measurement Offset:\r\n");
 8511              		.loc 1 1568 0 is_stmt 1
 8512 0c2e 7868     		ldr	r0, [r7, #4]
 8513 0c30 FFF7FEFF 		bl	strlen
 8514 0c34 0346     		mov	r3, r0
 8515 0c36 1A46     		mov	r2, r3
 8516 0c38 7B68     		ldr	r3, [r7, #4]
 8517 0c3a 1344     		add	r3, r3, r2
 8518 0c3c 364A     		ldr	r2, .L463+56
 8519 0c3e 1D46     		mov	r5, r3
 8520 0c40 1446     		mov	r4, r2
 8521 0c42 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8522 0c44 2860     		str	r0, [r5]	@ unaligned
 8523 0c46 6960     		str	r1, [r5, #4]	@ unaligned
 8524 0c48 AA60     		str	r2, [r5, #8]	@ unaligned
 8525 0c4a EB60     		str	r3, [r5, #12]	@ unaligned
 8526 0c4c 2068     		ldr	r0, [r4]	@ unaligned
 8527 0c4e 2861     		str	r0, [r5, #16]	@ unaligned
 8528 0c50 A388     		ldrh	r3, [r4, #4]	@ unaligned
 8529 0c52 AB82     		strh	r3, [r5, #20]	@ unaligned
1569:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 8530              		.loc 1 1569 0
 8531 0c54 0023     		movs	r3, #0
 8532 0c56 FB66     		str	r3, [r7, #108]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 205


 8533 0c58 28E0     		b	.L433
 8534              	.L434:
1570:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 8535              		.loc 1 1570 0 discriminator 3
 8536 0c5a FB6E     		ldr	r3, [r7, #108]
 8537 0c5c 5C1C     		adds	r4, r3, #1
 8538 0c5e 234A     		ldr	r2, .L463+12
 8539 0c60 FB6E     		ldr	r3, [r7, #108]
 8540 0c62 0E33     		adds	r3, r3, #14
 8541 0c64 9B00     		lsls	r3, r3, #2
 8542 0c66 1344     		add	r3, r3, r2
 8543 0c68 5B68     		ldr	r3, [r3, #4]
 8544 0c6a 2049     		ldr	r1, .L463+12
 8545 0c6c FA6E     		ldr	r2, [r7, #108]
 8546 0c6e 0A44     		add	r2, r2, r1
 8547 0c70 3732     		adds	r2, r2, #55
 8548 0c72 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8549 0c74 1341     		asrs	r3, r3, r2
 8550 0c76 07F10800 		add	r0, r7, #8
 8551 0c7a 2246     		mov	r2, r4
 8552 0c7c 2749     		ldr	r1, .L463+60
 8553 0c7e FFF7FEFF 		bl	sprintf
1571:..\src/command_processing.c ****             strcat(info_string, str);
 8554              		.loc 1 1571 0 discriminator 3
 8555 0c82 07F10803 		add	r3, r7, #8
 8556 0c86 1946     		mov	r1, r3
 8557 0c88 7868     		ldr	r0, [r7, #4]
 8558 0c8a FFF7FEFF 		bl	strcat
1572:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8559              		.loc 1 1572 0 discriminator 3
 8560 0c8e 7868     		ldr	r0, [r7, #4]
 8561 0c90 FFF7FEFF 		bl	strlen
 8562 0c94 0346     		mov	r3, r0
 8563 0c96 1A46     		mov	r2, r3
 8564 0c98 7B68     		ldr	r3, [r7, #4]
 8565 0c9a 1344     		add	r3, r3, r2
 8566 0c9c 1D4A     		ldr	r2, .L463+52
 8567 0c9e 1188     		ldrh	r1, [r2]	@ unaligned
 8568 0ca0 9278     		ldrb	r2, [r2, #2]
 8569 0ca2 1980     		strh	r1, [r3]	@ unaligned
 8570 0ca4 9A70     		strb	r2, [r3, #2]
1569:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 8571              		.loc 1 1569 0 discriminator 3
 8572 0ca6 FB6E     		ldr	r3, [r7, #108]
 8573 0ca8 0133     		adds	r3, r3, #1
 8574 0caa FB66     		str	r3, [r7, #108]
 8575              	.L433:
1569:..\src/command_processing.c ****             sprintf(str, "%d -> %ld", (int) (i + 1), (int32) c_mem.m_off[i] >> c_mem.res[i]);
 8576              		.loc 1 1569 0 is_stmt 0 discriminator 1
 8577 0cac FB6E     		ldr	r3, [r7, #108]
 8578 0cae 022B     		cmp	r3, #2
 8579 0cb0 D3DD     		ble	.L434
1573:..\src/command_processing.c ****         }
1574:..\src/command_processing.c ****             
1575:..\src/command_processing.c ****         strcat(info_string, "Measurement Multiplier:\r\n");
 8580              		.loc 1 1575 0 is_stmt 1
 8581 0cb2 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 206


 8582 0cb4 FFF7FEFF 		bl	strlen
 8583 0cb8 0346     		mov	r3, r0
 8584 0cba 1A46     		mov	r2, r3
 8585 0cbc 7B68     		ldr	r3, [r7, #4]
 8586 0cbe 1344     		add	r3, r3, r2
 8587 0cc0 174A     		ldr	r2, .L463+64
 8588 0cc2 1D46     		mov	r5, r3
 8589 0cc4 1446     		mov	r4, r2
 8590 0cc6 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8591 0cc8 2860     		str	r0, [r5]	@ unaligned
 8592 0cca 6960     		str	r1, [r5, #4]	@ unaligned
 8593 0ccc AA60     		str	r2, [r5, #8]	@ unaligned
 8594 0cce EB60     		str	r3, [r5, #12]	@ unaligned
 8595 0cd0 03CC     		ldmia	r4!, {r0, r1}
 8596 0cd2 2861     		str	r0, [r5, #16]	@ unaligned
 8597 0cd4 6961     		str	r1, [r5, #20]	@ unaligned
 8598 0cd6 2388     		ldrh	r3, [r4]	@ unaligned
 8599 0cd8 2B83     		strh	r3, [r5, #24]	@ unaligned
1576:..\src/command_processing.c ****         for (i = 0; i < NUM_OF_SENSORS; ++i) {
 8600              		.loc 1 1576 0
 8601 0cda 0023     		movs	r3, #0
 8602 0cdc FB66     		str	r3, [r7, #108]
 8603 0cde 4AE0     		b	.L435
 8604              	.L464:
 8605              		.align	2
 8606              	.L463:
 8607 0ce0 0C0A0000 		.word	.LC113
 8608 0ce4 280A0000 		.word	.LC114
 8609 0ce8 400A0000 		.word	.LC115
 8610 0cec 00000000 		.word	c_mem
 8611 0cf0 5C0A0000 		.word	.LC116
 8612 0cf4 780A0000 		.word	.LC117
 8613 0cf8 8C0A0000 		.word	.LC118
 8614 0cfc A40A0000 		.word	.LC119
 8615 0d00 CC0A0000 		.word	.LC120
 8616 0d04 F00A0000 		.word	.LC121
 8617 0d08 100B0000 		.word	.LC122
 8618 0d0c 2C0B0000 		.word	.LC123
 8619 0d10 BC080000 		.word	.LC98
 8620 0d14 60070000 		.word	.LC75
 8621 0d18 440B0000 		.word	.LC124
 8622 0d1c 5C0B0000 		.word	.LC125
 8623 0d20 680B0000 		.word	.LC126
 8624              	.L436:
1577:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8625              		.loc 1 1577 0 discriminator 3
 8626 0d24 FB6E     		ldr	r3, [r7, #108]
 8627 0d26 5D1C     		adds	r5, r3, #1
 8628 0d28 BE4A     		ldr	r2, .L465
 8629 0d2a FB6E     		ldr	r3, [r7, #108]
 8630 0d2c 1233     		adds	r3, r3, #18
 8631 0d2e 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 8632 0d32 1846     		mov	r0, r3
 8633 0d34 FFF7FEFF 		bl	__aeabi_f2d
 8634 0d38 0346     		mov	r3, r0
 8635 0d3a 0C46     		mov	r4, r1
 8636 0d3c 07F10800 		add	r0, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 207


 8637 0d40 CDE90034 		strd	r3, [sp]
 8638 0d44 2A46     		mov	r2, r5
 8639 0d46 B849     		ldr	r1, .L465+4
 8640 0d48 FFF7FEFF 		bl	sprintf
1578:..\src/command_processing.c ****             strcat(info_string, str);
 8641              		.loc 1 1578 0 discriminator 3
 8642 0d4c 07F10803 		add	r3, r7, #8
 8643 0d50 1946     		mov	r1, r3
 8644 0d52 7868     		ldr	r0, [r7, #4]
 8645 0d54 FFF7FEFF 		bl	strcat
1579:..\src/command_processing.c ****             strcat(info_string,"\r\n");
 8646              		.loc 1 1579 0 discriminator 3
 8647 0d58 7868     		ldr	r0, [r7, #4]
 8648 0d5a FFF7FEFF 		bl	strlen
 8649 0d5e 0346     		mov	r3, r0
 8650 0d60 1A46     		mov	r2, r3
 8651 0d62 7B68     		ldr	r3, [r7, #4]
 8652 0d64 1344     		add	r3, r3, r2
 8653 0d66 B14A     		ldr	r2, .L465+8
 8654 0d68 1188     		ldrh	r1, [r2]	@ unaligned
 8655 0d6a 9278     		ldrb	r2, [r2, #2]
 8656 0d6c 1980     		strh	r1, [r3]	@ unaligned
 8657 0d6e 9A70     		strb	r2, [r3, #2]
1576:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8658              		.loc 1 1576 0 discriminator 3
 8659 0d70 FB6E     		ldr	r3, [r7, #108]
 8660 0d72 0133     		adds	r3, r3, #1
 8661 0d74 FB66     		str	r3, [r7, #108]
 8662              	.L435:
1576:..\src/command_processing.c ****             sprintf(str,"%d -> %f", (int)(i + 1), (float) c_mem.m_mult[i]);
 8663              		.loc 1 1576 0 is_stmt 0 discriminator 1
 8664 0d76 FB6E     		ldr	r3, [r7, #108]
 8665 0d78 022B     		cmp	r3, #2
 8666 0d7a D3DD     		ble	.L436
1580:..\src/command_processing.c ****         }
1581:..\src/command_processing.c ****         
1582:..\src/command_processing.c ****         strcat(info_string, "Current lookup table:\r\n");
 8667              		.loc 1 1582 0 is_stmt 1
 8668 0d7c 7868     		ldr	r0, [r7, #4]
 8669 0d7e FFF7FEFF 		bl	strlen
 8670 0d82 0346     		mov	r3, r0
 8671 0d84 1A46     		mov	r2, r3
 8672 0d86 7B68     		ldr	r3, [r7, #4]
 8673 0d88 1344     		add	r3, r3, r2
 8674 0d8a A94A     		ldr	r2, .L465+12
 8675 0d8c 1D46     		mov	r5, r3
 8676 0d8e 1446     		mov	r4, r2
 8677 0d90 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8678 0d92 2860     		str	r0, [r5]	@ unaligned
 8679 0d94 6960     		str	r1, [r5, #4]	@ unaligned
 8680 0d96 AA60     		str	r2, [r5, #8]	@ unaligned
 8681 0d98 EB60     		str	r3, [r5, #12]	@ unaligned
 8682 0d9a 03CC     		ldmia	r4!, {r0, r1}
 8683 0d9c 2861     		str	r0, [r5, #16]	@ unaligned
 8684 0d9e 6961     		str	r1, [r5, #20]	@ unaligned
1583:..\src/command_processing.c ****         sprintf(str, "p[0] - p[2]: %f, %f, %f\n", c_mem.curr_lookup[0], c_mem.curr_lookup[1], c_mem
 8685              		.loc 1 1583 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 208


 8686 0da0 A04B     		ldr	r3, .L465
 8687 0da2 DB6F     		ldr	r3, [r3, #124]	@ float
 8688 0da4 1846     		mov	r0, r3
 8689 0da6 FFF7FEFF 		bl	__aeabi_f2d
 8690 0daa 8046     		mov	r8, r0
 8691 0dac 8946     		mov	r9, r1
 8692 0dae 9D4B     		ldr	r3, .L465
 8693 0db0 D3F88030 		ldr	r3, [r3, #128]	@ float
 8694 0db4 1846     		mov	r0, r3
 8695 0db6 FFF7FEFF 		bl	__aeabi_f2d
 8696 0dba 0446     		mov	r4, r0
 8697 0dbc 0D46     		mov	r5, r1
 8698 0dbe 994B     		ldr	r3, .L465
 8699 0dc0 D3F88430 		ldr	r3, [r3, #132]	@ float
 8700 0dc4 1846     		mov	r0, r3
 8701 0dc6 FFF7FEFF 		bl	__aeabi_f2d
 8702 0dca 0246     		mov	r2, r0
 8703 0dcc 0B46     		mov	r3, r1
 8704 0dce 07F10800 		add	r0, r7, #8
 8705 0dd2 CDE90223 		strd	r2, [sp, #8]
 8706 0dd6 CDE90045 		strd	r4, [sp]
 8707 0dda 4246     		mov	r2, r8
 8708 0ddc 4B46     		mov	r3, r9
 8709 0dde 9549     		ldr	r1, .L465+16
 8710 0de0 FFF7FEFF 		bl	sprintf
1584:..\src/command_processing.c ****         strcat(info_string, str);
 8711              		.loc 1 1584 0
 8712 0de4 07F10803 		add	r3, r7, #8
 8713 0de8 1946     		mov	r1, r3
 8714 0dea 7868     		ldr	r0, [r7, #4]
 8715 0dec FFF7FEFF 		bl	strcat
1585:..\src/command_processing.c ****         sprintf(str, "p[3] - p[5]: %f, %f, %f\n", c_mem.curr_lookup[3], c_mem.curr_lookup[4], c_mem
 8716              		.loc 1 1585 0
 8717 0df0 8C4B     		ldr	r3, .L465
 8718 0df2 D3F88830 		ldr	r3, [r3, #136]	@ float
 8719 0df6 1846     		mov	r0, r3
 8720 0df8 FFF7FEFF 		bl	__aeabi_f2d
 8721 0dfc 8046     		mov	r8, r0
 8722 0dfe 8946     		mov	r9, r1
 8723 0e00 884B     		ldr	r3, .L465
 8724 0e02 D3F88C30 		ldr	r3, [r3, #140]	@ float
 8725 0e06 1846     		mov	r0, r3
 8726 0e08 FFF7FEFF 		bl	__aeabi_f2d
 8727 0e0c 0446     		mov	r4, r0
 8728 0e0e 0D46     		mov	r5, r1
 8729 0e10 844B     		ldr	r3, .L465
 8730 0e12 D3F89030 		ldr	r3, [r3, #144]	@ float
 8731 0e16 1846     		mov	r0, r3
 8732 0e18 FFF7FEFF 		bl	__aeabi_f2d
 8733 0e1c 0246     		mov	r2, r0
 8734 0e1e 0B46     		mov	r3, r1
 8735 0e20 07F10800 		add	r0, r7, #8
 8736 0e24 CDE90223 		strd	r2, [sp, #8]
 8737 0e28 CDE90045 		strd	r4, [sp]
 8738 0e2c 4246     		mov	r2, r8
 8739 0e2e 4B46     		mov	r3, r9
 8740 0e30 8149     		ldr	r1, .L465+20
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 209


 8741 0e32 FFF7FEFF 		bl	sprintf
1586:..\src/command_processing.c ****         strcat(info_string, str);
 8742              		.loc 1 1586 0
 8743 0e36 07F10803 		add	r3, r7, #8
 8744 0e3a 1946     		mov	r1, r3
 8745 0e3c 7868     		ldr	r0, [r7, #4]
 8746 0e3e FFF7FEFF 		bl	strcat
1587:..\src/command_processing.c ****         strcat(info_string,"\r\n");        
 8747              		.loc 1 1587 0
 8748 0e42 7868     		ldr	r0, [r7, #4]
 8749 0e44 FFF7FEFF 		bl	strlen
 8750 0e48 0346     		mov	r3, r0
 8751 0e4a 1A46     		mov	r2, r3
 8752 0e4c 7B68     		ldr	r3, [r7, #4]
 8753 0e4e 1344     		add	r3, r3, r2
 8754 0e50 764A     		ldr	r2, .L465+8
 8755 0e52 1188     		ldrh	r1, [r2]	@ unaligned
 8756 0e54 9278     		ldrb	r2, [r2, #2]
 8757 0e56 1980     		strh	r1, [r3]	@ unaligned
 8758 0e58 9A70     		strb	r2, [r3, #2]
1588:..\src/command_processing.c **** 
1589:..\src/command_processing.c ****         sprintf(str, "Position limit active: %d", (int)g_mem.pos_lim_flag);
 8759              		.loc 1 1589 0
 8760 0e5a 784B     		ldr	r3, .L465+24
 8761 0e5c 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 8762 0e60 1A46     		mov	r2, r3
 8763 0e62 07F10803 		add	r3, r7, #8
 8764 0e66 7649     		ldr	r1, .L465+28
 8765 0e68 1846     		mov	r0, r3
 8766 0e6a FFF7FEFF 		bl	sprintf
1590:..\src/command_processing.c ****         strcat(info_string, str);
 8767              		.loc 1 1590 0
 8768 0e6e 07F10803 		add	r3, r7, #8
 8769 0e72 1946     		mov	r1, r3
 8770 0e74 7868     		ldr	r0, [r7, #4]
 8771 0e76 FFF7FEFF 		bl	strcat
1591:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8772              		.loc 1 1591 0
 8773 0e7a 7868     		ldr	r0, [r7, #4]
 8774 0e7c FFF7FEFF 		bl	strlen
 8775 0e80 0346     		mov	r3, r0
 8776 0e82 1A46     		mov	r2, r3
 8777 0e84 7B68     		ldr	r3, [r7, #4]
 8778 0e86 1344     		add	r3, r3, r2
 8779 0e88 684A     		ldr	r2, .L465+8
 8780 0e8a 1188     		ldrh	r1, [r2]	@ unaligned
 8781 0e8c 9278     		ldrb	r2, [r2, #2]
 8782 0e8e 1980     		strh	r1, [r3]	@ unaligned
 8783 0e90 9A70     		strb	r2, [r3, #2]
1592:..\src/command_processing.c **** 
1593:..\src/command_processing.c ****         sprintf(str, "Position limit motor: inf -> %ld  ", (int32)g_mem.pos_lim_inf >> g_mem.res[0]
 8784              		.loc 1 1593 0
 8785 0e92 6A4B     		ldr	r3, .L465+24
 8786 0e94 9B6D     		ldr	r3, [r3, #88]
 8787 0e96 694A     		ldr	r2, .L465+24
 8788 0e98 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 8789 0e9c 43FA02F2 		asr	r2, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 210


 8790 0ea0 07F10803 		add	r3, r7, #8
 8791 0ea4 6749     		ldr	r1, .L465+32
 8792 0ea6 1846     		mov	r0, r3
 8793 0ea8 FFF7FEFF 		bl	sprintf
1594:..\src/command_processing.c ****         strcat(info_string, str);
 8794              		.loc 1 1594 0
 8795 0eac 07F10803 		add	r3, r7, #8
 8796 0eb0 1946     		mov	r1, r3
 8797 0eb2 7868     		ldr	r0, [r7, #4]
 8798 0eb4 FFF7FEFF 		bl	strcat
1595:..\src/command_processing.c ****         sprintf(str, "sup -> %ld\r\n", (int32)g_mem.pos_lim_sup >> g_mem.res[0]);
 8799              		.loc 1 1595 0
 8800 0eb8 604B     		ldr	r3, .L465+24
 8801 0eba DB6D     		ldr	r3, [r3, #92]
 8802 0ebc 5F4A     		ldr	r2, .L465+24
 8803 0ebe 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 8804 0ec2 43FA02F2 		asr	r2, r3, r2
 8805 0ec6 07F10803 		add	r3, r7, #8
 8806 0eca 5F49     		ldr	r1, .L465+36
 8807 0ecc 1846     		mov	r0, r3
 8808 0ece FFF7FEFF 		bl	sprintf
1596:..\src/command_processing.c ****         strcat(info_string, str);
 8809              		.loc 1 1596 0
 8810 0ed2 07F10803 		add	r3, r7, #8
 8811 0ed6 1946     		mov	r1, r3
 8812 0ed8 7868     		ldr	r0, [r7, #4]
 8813 0eda FFF7FEFF 		bl	strcat
1597:..\src/command_processing.c **** 
1598:..\src/command_processing.c ****         sprintf(str, "Max step pos and neg: %d %d", (int)g_mem.max_step_pos, (int)g_mem.max_step_ne
 8814              		.loc 1 1598 0
 8815 0ede 574B     		ldr	r3, .L465+24
 8816 0ee0 5A6E     		ldr	r2, [r3, #100]
 8817 0ee2 564B     		ldr	r3, .L465+24
 8818 0ee4 1B6E     		ldr	r3, [r3, #96]
 8819 0ee6 07F10800 		add	r0, r7, #8
 8820 0eea 5849     		ldr	r1, .L465+40
 8821 0eec FFF7FEFF 		bl	sprintf
1599:..\src/command_processing.c ****         strcat(info_string, str);
 8822              		.loc 1 1599 0
 8823 0ef0 07F10803 		add	r3, r7, #8
 8824 0ef4 1946     		mov	r1, r3
 8825 0ef6 7868     		ldr	r0, [r7, #4]
 8826 0ef8 FFF7FEFF 		bl	strcat
1600:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8827              		.loc 1 1600 0
 8828 0efc 7868     		ldr	r0, [r7, #4]
 8829 0efe FFF7FEFF 		bl	strlen
 8830 0f02 0346     		mov	r3, r0
 8831 0f04 1A46     		mov	r2, r3
 8832 0f06 7B68     		ldr	r3, [r7, #4]
 8833 0f08 1344     		add	r3, r3, r2
 8834 0f0a 484A     		ldr	r2, .L465+8
 8835 0f0c 1188     		ldrh	r1, [r2]	@ unaligned
 8836 0f0e 9278     		ldrb	r2, [r2, #2]
 8837 0f10 1980     		strh	r1, [r3]	@ unaligned
 8838 0f12 9A70     		strb	r2, [r3, #2]
1601:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 211


1602:..\src/command_processing.c ****         sprintf(str, "Current limit: %d", (int)g_mem.current_limit);
 8839              		.loc 1 1602 0
 8840 0f14 494B     		ldr	r3, .L465+24
 8841 0f16 B3F96830 		ldrsh	r3, [r3, #104]
 8842 0f1a 1A46     		mov	r2, r3
 8843 0f1c 07F10803 		add	r3, r7, #8
 8844 0f20 4B49     		ldr	r1, .L465+44
 8845 0f22 1846     		mov	r0, r3
 8846 0f24 FFF7FEFF 		bl	sprintf
1603:..\src/command_processing.c ****         strcat(info_string, str);
 8847              		.loc 1 1603 0
 8848 0f28 07F10803 		add	r3, r7, #8
 8849 0f2c 1946     		mov	r1, r3
 8850 0f2e 7868     		ldr	r0, [r7, #4]
 8851 0f30 FFF7FEFF 		bl	strcat
1604:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 8852              		.loc 1 1604 0
 8853 0f34 7868     		ldr	r0, [r7, #4]
 8854 0f36 FFF7FEFF 		bl	strlen
 8855 0f3a 0346     		mov	r3, r0
 8856 0f3c 1A46     		mov	r2, r3
 8857 0f3e 7B68     		ldr	r3, [r7, #4]
 8858 0f40 1344     		add	r3, r3, r2
 8859 0f42 3A4A     		ldr	r2, .L465+8
 8860 0f44 1188     		ldrh	r1, [r2]	@ unaligned
 8861 0f46 9278     		ldrb	r2, [r2, #2]
 8862 0f48 1980     		strh	r1, [r3]	@ unaligned
 8863 0f4a 9A70     		strb	r2, [r3, #2]
1605:..\src/command_processing.c **** 
1606:..\src/command_processing.c ****         if ((c_mem.input_mode == INPUT_MODE_EMG_PROPORTIONAL) ||
 8864              		.loc 1 1606 0
 8865 0f4c 354B     		ldr	r3, .L465
 8866 0f4e 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 8867 0f52 022B     		cmp	r3, #2
 8868 0f54 0FD0     		beq	.L437
1607:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8869              		.loc 1 1607 0 discriminator 1
 8870 0f56 334B     		ldr	r3, .L465
 8871 0f58 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1606:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8872              		.loc 1 1606 0 discriminator 1
 8873 0f5c 032B     		cmp	r3, #3
 8874 0f5e 0AD0     		beq	.L437
1608:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 8875              		.loc 1 1608 0
 8876 0f60 304B     		ldr	r3, .L465
 8877 0f62 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1607:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_INTEGRAL) ||
 8878              		.loc 1 1607 0
 8879 0f66 042B     		cmp	r3, #4
 8880 0f68 05D0     		beq	.L437
1609:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS_ADV)) {
 8881              		.loc 1 1609 0
 8882 0f6a 2E4B     		ldr	r3, .L465
 8883 0f6c 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
1608:..\src/command_processing.c ****             (c_mem.input_mode == INPUT_MODE_EMG_FCFS) ||
 8884              		.loc 1 1608 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 212


 8885 0f70 052B     		cmp	r3, #5
 8886 0f72 40F0A580 		bne	.L438
 8887              	.L437:
1610:..\src/command_processing.c ****             sprintf(str, "EMG thresholds [0 - 1024]: %u, %u", g_mem.emg_threshold[0], g_mem.emg_thr
 8888              		.loc 1 1610 0
 8889 0f76 314B     		ldr	r3, .L465+24
 8890 0f78 B3F86A30 		ldrh	r3, [r3, #106]
 8891 0f7c 1A46     		mov	r2, r3
 8892 0f7e 2F4B     		ldr	r3, .L465+24
 8893 0f80 B3F86C30 		ldrh	r3, [r3, #108]
 8894 0f84 07F10800 		add	r0, r7, #8
 8895 0f88 3249     		ldr	r1, .L465+48
 8896 0f8a FFF7FEFF 		bl	sprintf
1611:..\src/command_processing.c ****             strcat(info_string, str);
 8897              		.loc 1 1611 0
 8898 0f8e 07F10803 		add	r3, r7, #8
 8899 0f92 1946     		mov	r1, r3
 8900 0f94 7868     		ldr	r0, [r7, #4]
 8901 0f96 FFF7FEFF 		bl	strcat
1612:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8902              		.loc 1 1612 0
 8903 0f9a 7868     		ldr	r0, [r7, #4]
 8904 0f9c FFF7FEFF 		bl	strlen
 8905 0fa0 0346     		mov	r3, r0
 8906 0fa2 1A46     		mov	r2, r3
 8907 0fa4 7B68     		ldr	r3, [r7, #4]
 8908 0fa6 1344     		add	r3, r3, r2
 8909 0fa8 204A     		ldr	r2, .L465+8
 8910 0faa 1188     		ldrh	r1, [r2]	@ unaligned
 8911 0fac 9278     		ldrb	r2, [r2, #2]
 8912 0fae 1980     		strh	r1, [r3]	@ unaligned
 8913 0fb0 9A70     		strb	r2, [r3, #2]
1613:..\src/command_processing.c **** 
1614:..\src/command_processing.c ****             sprintf(str, "EMG max values [0 - 4096]: %lu, %lu", g_mem.emg_max_value[0], g_mem.emg_m
 8914              		.loc 1 1614 0
 8915 0fb2 224B     		ldr	r3, .L465+24
 8916 0fb4 1A6F     		ldr	r2, [r3, #112]
 8917 0fb6 214B     		ldr	r3, .L465+24
 8918 0fb8 5B6F     		ldr	r3, [r3, #116]
 8919 0fba 07F10800 		add	r0, r7, #8
 8920 0fbe 2649     		ldr	r1, .L465+52
 8921 0fc0 FFF7FEFF 		bl	sprintf
1615:..\src/command_processing.c ****             strcat(info_string, str);
 8922              		.loc 1 1615 0
 8923 0fc4 07F10803 		add	r3, r7, #8
 8924 0fc8 1946     		mov	r1, r3
 8925 0fca 7868     		ldr	r0, [r7, #4]
 8926 0fcc FFF7FEFF 		bl	strcat
1616:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 8927              		.loc 1 1616 0
 8928 0fd0 7868     		ldr	r0, [r7, #4]
 8929 0fd2 FFF7FEFF 		bl	strlen
 8930 0fd6 0346     		mov	r3, r0
 8931 0fd8 1A46     		mov	r2, r3
 8932 0fda 7B68     		ldr	r3, [r7, #4]
 8933 0fdc 1344     		add	r3, r3, r2
 8934 0fde 134A     		ldr	r2, .L465+8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 213


 8935 0fe0 1188     		ldrh	r1, [r2]	@ unaligned
 8936 0fe2 9278     		ldrb	r2, [r2, #2]
 8937 0fe4 1980     		strh	r1, [r3]	@ unaligned
 8938 0fe6 9A70     		strb	r2, [r3, #2]
1617:..\src/command_processing.c **** 
1618:..\src/command_processing.c ****             if (g_mem.emg_calibration_flag)
 8939              		.loc 1 1618 0
 8940 0fe8 144B     		ldr	r3, .L465+24
 8941 0fea 93F86E30 		ldrb	r3, [r3, #110]	@ zero_extendqisi2
 8942 0fee 002B     		cmp	r3, #0
 8943 0ff0 36D0     		beq	.L439
1619:..\src/command_processing.c ****                 strcat(info_string, "Calibration enabled: YES\r\n");
 8944              		.loc 1 1619 0
 8945 0ff2 7868     		ldr	r0, [r7, #4]
 8946 0ff4 FFF7FEFF 		bl	strlen
 8947 0ff8 0346     		mov	r3, r0
 8948 0ffa 1A46     		mov	r2, r3
 8949 0ffc 7B68     		ldr	r3, [r7, #4]
 8950 0ffe 1344     		add	r3, r3, r2
 8951 1000 164A     		ldr	r2, .L465+56
 8952 1002 1D46     		mov	r5, r3
 8953 1004 1446     		mov	r4, r2
 8954 1006 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8955 1008 2860     		str	r0, [r5]	@ unaligned
 8956 100a 6960     		str	r1, [r5, #4]	@ unaligned
 8957 100c AA60     		str	r2, [r5, #8]	@ unaligned
 8958 100e EB60     		str	r3, [r5, #12]	@ unaligned
 8959 1010 03CC     		ldmia	r4!, {r0, r1}
 8960 1012 2861     		str	r0, [r5, #16]	@ unaligned
 8961 1014 6961     		str	r1, [r5, #20]	@ unaligned
 8962 1016 2388     		ldrh	r3, [r4]	@ unaligned
 8963 1018 A278     		ldrb	r2, [r4, #2]
 8964 101a 2B83     		strh	r3, [r5, #24]	@ unaligned
 8965 101c 1346     		mov	r3, r2
 8966 101e AB76     		strb	r3, [r5, #26]
 8967 1020 32E0     		b	.L440
 8968              	.L466:
 8969 1022 00BF     		.align	2
 8970              	.L465:
 8971 1024 00000000 		.word	c_mem
 8972 1028 840B0000 		.word	.LC127
 8973 102c 60070000 		.word	.LC75
 8974 1030 900B0000 		.word	.LC128
 8975 1034 A80B0000 		.word	.LC129
 8976 1038 C40B0000 		.word	.LC130
 8977 103c 00000000 		.word	g_mem
 8978 1040 E00B0000 		.word	.LC131
 8979 1044 FC0B0000 		.word	.LC132
 8980 1048 200C0000 		.word	.LC133
 8981 104c 300C0000 		.word	.LC134
 8982 1050 4C0C0000 		.word	.LC135
 8983 1054 600C0000 		.word	.LC136
 8984 1058 840C0000 		.word	.LC137
 8985 105c A80C0000 		.word	.LC138
 8986              	.L439:
1620:..\src/command_processing.c ****             else
1621:..\src/command_processing.c ****                 strcat(info_string, "Calibration enabled: NO\r\n");
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 214


 8987              		.loc 1 1621 0
 8988 1060 7868     		ldr	r0, [r7, #4]
 8989 1062 FFF7FEFF 		bl	strlen
 8990 1066 0346     		mov	r3, r0
 8991 1068 1A46     		mov	r2, r3
 8992 106a 7B68     		ldr	r3, [r7, #4]
 8993 106c 1344     		add	r3, r3, r2
 8994 106e BC4A     		ldr	r2, .L467
 8995 1070 1D46     		mov	r5, r3
 8996 1072 1446     		mov	r4, r2
 8997 1074 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 8998 1076 2860     		str	r0, [r5]	@ unaligned
 8999 1078 6960     		str	r1, [r5, #4]	@ unaligned
 9000 107a AA60     		str	r2, [r5, #8]	@ unaligned
 9001 107c EB60     		str	r3, [r5, #12]	@ unaligned
 9002 107e 03CC     		ldmia	r4!, {r0, r1}
 9003 1080 2861     		str	r0, [r5, #16]	@ unaligned
 9004 1082 6961     		str	r1, [r5, #20]	@ unaligned
 9005 1084 2388     		ldrh	r3, [r4]	@ unaligned
 9006 1086 2B83     		strh	r3, [r5, #24]	@ unaligned
 9007              	.L440:
1622:..\src/command_processing.c **** 
1623:..\src/command_processing.c ****             sprintf(str, "EMG max speed: %d", (int)g_mem.emg_speed);
 9008              		.loc 1 1623 0
 9009 1088 B64B     		ldr	r3, .L467+4
 9010 108a 93F87830 		ldrb	r3, [r3, #120]	@ zero_extendqisi2
 9011 108e 1A46     		mov	r2, r3
 9012 1090 07F10803 		add	r3, r7, #8
 9013 1094 B449     		ldr	r1, .L467+8
 9014 1096 1846     		mov	r0, r3
 9015 1098 FFF7FEFF 		bl	sprintf
1624:..\src/command_processing.c ****             strcat(info_string, str);
 9016              		.loc 1 1624 0
 9017 109c 07F10803 		add	r3, r7, #8
 9018 10a0 1946     		mov	r1, r3
 9019 10a2 7868     		ldr	r0, [r7, #4]
 9020 10a4 FFF7FEFF 		bl	strcat
1625:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9021              		.loc 1 1625 0
 9022 10a8 7868     		ldr	r0, [r7, #4]
 9023 10aa FFF7FEFF 		bl	strlen
 9024 10ae 0346     		mov	r3, r0
 9025 10b0 1A46     		mov	r2, r3
 9026 10b2 7B68     		ldr	r3, [r7, #4]
 9027 10b4 1344     		add	r3, r3, r2
 9028 10b6 AD4A     		ldr	r2, .L467+12
 9029 10b8 1188     		ldrh	r1, [r2]	@ unaligned
 9030 10ba 9278     		ldrb	r2, [r2, #2]
 9031 10bc 1980     		strh	r1, [r3]	@ unaligned
 9032 10be 9A70     		strb	r2, [r3, #2]
 9033              	.L438:
1626:..\src/command_processing.c ****         }
1627:..\src/command_processing.c ****         
1628:..\src/command_processing.c ****         if (c_mem.rest_position_flag) {
 9034              		.loc 1 1628 0
 9035 10c0 AB4B     		ldr	r3, .L467+16
 9036 10c2 93F8A430 		ldrb	r3, [r3, #164]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 215


 9037 10c6 002B     		cmp	r3, #0
 9038 10c8 55D0     		beq	.L441
1629:..\src/command_processing.c ****     		sprintf(str, "Rest time delay (ms): %d", (int)g_mem.rest_delay);
 9039              		.loc 1 1629 0
 9040 10ca A64B     		ldr	r3, .L467+4
 9041 10cc D3F89C20 		ldr	r2, [r3, #156]
 9042 10d0 07F10803 		add	r3, r7, #8
 9043 10d4 A749     		ldr	r1, .L467+20
 9044 10d6 1846     		mov	r0, r3
 9045 10d8 FFF7FEFF 		bl	sprintf
1630:..\src/command_processing.c ****             strcat(info_string, str);
 9046              		.loc 1 1630 0
 9047 10dc 07F10803 		add	r3, r7, #8
 9048 10e0 1946     		mov	r1, r3
 9049 10e2 7868     		ldr	r0, [r7, #4]
 9050 10e4 FFF7FEFF 		bl	strcat
1631:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9051              		.loc 1 1631 0
 9052 10e8 7868     		ldr	r0, [r7, #4]
 9053 10ea FFF7FEFF 		bl	strlen
 9054 10ee 0346     		mov	r3, r0
 9055 10f0 1A46     		mov	r2, r3
 9056 10f2 7B68     		ldr	r3, [r7, #4]
 9057 10f4 1344     		add	r3, r3, r2
 9058 10f6 9D4A     		ldr	r2, .L467+12
 9059 10f8 1188     		ldrh	r1, [r2]	@ unaligned
 9060 10fa 9278     		ldrb	r2, [r2, #2]
 9061 10fc 1980     		strh	r1, [r3]	@ unaligned
 9062 10fe 9A70     		strb	r2, [r3, #2]
1632:..\src/command_processing.c ****             
1633:..\src/command_processing.c ****             sprintf(str, "Rest velocity closure (ticks/sec): %d", (int)g_mem.rest_vel);
 9063              		.loc 1 1633 0
 9064 1100 984B     		ldr	r3, .L467+4
 9065 1102 D3F8A020 		ldr	r2, [r3, #160]
 9066 1106 07F10803 		add	r3, r7, #8
 9067 110a 9B49     		ldr	r1, .L467+24
 9068 110c 1846     		mov	r0, r3
 9069 110e FFF7FEFF 		bl	sprintf
1634:..\src/command_processing.c ****             strcat(info_string, str);
 9070              		.loc 1 1634 0
 9071 1112 07F10803 		add	r3, r7, #8
 9072 1116 1946     		mov	r1, r3
 9073 1118 7868     		ldr	r0, [r7, #4]
 9074 111a FFF7FEFF 		bl	strcat
1635:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9075              		.loc 1 1635 0
 9076 111e 7868     		ldr	r0, [r7, #4]
 9077 1120 FFF7FEFF 		bl	strlen
 9078 1124 0346     		mov	r3, r0
 9079 1126 1A46     		mov	r2, r3
 9080 1128 7B68     		ldr	r3, [r7, #4]
 9081 112a 1344     		add	r3, r3, r2
 9082 112c 8F4A     		ldr	r2, .L467+12
 9083 112e 1188     		ldrh	r1, [r2]	@ unaligned
 9084 1130 9278     		ldrb	r2, [r2, #2]
 9085 1132 1980     		strh	r1, [r3]	@ unaligned
 9086 1134 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 216


1636:..\src/command_processing.c ****             
1637:..\src/command_processing.c ****             sprintf(str, "Rest position: %d", (int)(g_mem.rest_pos >> c_mem.res[0]));
 9087              		.loc 1 1637 0
 9088 1136 8B4B     		ldr	r3, .L467+4
 9089 1138 D3F89830 		ldr	r3, [r3, #152]
 9090 113c 8C4A     		ldr	r2, .L467+16
 9091 113e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 9092 1142 43FA02F2 		asr	r2, r3, r2
 9093 1146 07F10803 		add	r3, r7, #8
 9094 114a 8C49     		ldr	r1, .L467+28
 9095 114c 1846     		mov	r0, r3
 9096 114e FFF7FEFF 		bl	sprintf
1638:..\src/command_processing.c ****             strcat(info_string, str);
 9097              		.loc 1 1638 0
 9098 1152 07F10803 		add	r3, r7, #8
 9099 1156 1946     		mov	r1, r3
 9100 1158 7868     		ldr	r0, [r7, #4]
 9101 115a FFF7FEFF 		bl	strcat
1639:..\src/command_processing.c ****             strcat(info_string, "\r\n");  
 9102              		.loc 1 1639 0
 9103 115e 7868     		ldr	r0, [r7, #4]
 9104 1160 FFF7FEFF 		bl	strlen
 9105 1164 0346     		mov	r3, r0
 9106 1166 1A46     		mov	r2, r3
 9107 1168 7B68     		ldr	r3, [r7, #4]
 9108 116a 1344     		add	r3, r3, r2
 9109 116c 7F4A     		ldr	r2, .L467+12
 9110 116e 1188     		ldrh	r1, [r2]	@ unaligned
 9111 1170 9278     		ldrb	r2, [r2, #2]
 9112 1172 1980     		strh	r1, [r3]	@ unaligned
 9113 1174 9A70     		strb	r2, [r3, #2]
 9114              	.L441:
1640:..\src/command_processing.c ****         }
1641:..\src/command_processing.c **** 
1642:..\src/command_processing.c ****         prepare_counter_info(info_string);
 9115              		.loc 1 1642 0
 9116 1176 7868     		ldr	r0, [r7, #4]
 9117 1178 FFF7FEFF 		bl	prepare_counter_info
1643:..\src/command_processing.c **** 
1644:..\src/command_processing.c ****         if (c_mem.read_imu_flag) {
 9118              		.loc 1 1644 0
 9119 117c 7C4B     		ldr	r3, .L467+16
 9120 117e 93F8A730 		ldrb	r3, [r3, #167]	@ zero_extendqisi2
 9121 1182 002B     		cmp	r3, #0
 9122 1184 00F0C281 		beq	.L442
1645:..\src/command_processing.c ****             sprintf(str, "IMU Connected: %d\r\n", (int) N_IMU_Connected);
 9123              		.loc 1 1645 0
 9124 1188 7D4B     		ldr	r3, .L467+32
 9125 118a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9126 118c 1A46     		mov	r2, r3
 9127 118e 07F10803 		add	r3, r7, #8
 9128 1192 7C49     		ldr	r1, .L467+36
 9129 1194 1846     		mov	r0, r3
 9130 1196 FFF7FEFF 		bl	sprintf
1646:..\src/command_processing.c ****             strcat(info_string, str);
 9131              		.loc 1 1646 0
 9132 119a 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 217


 9133 119e 1946     		mov	r1, r3
 9134 11a0 7868     		ldr	r0, [r7, #4]
 9135 11a2 FFF7FEFF 		bl	strcat
1647:..\src/command_processing.c ****             
1648:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9136              		.loc 1 1648 0
 9137 11a6 7868     		ldr	r0, [r7, #4]
 9138 11a8 FFF7FEFF 		bl	strlen
 9139 11ac 0346     		mov	r3, r0
 9140 11ae 1A46     		mov	r2, r3
 9141 11b0 7B68     		ldr	r3, [r7, #4]
 9142 11b2 1344     		add	r3, r3, r2
 9143 11b4 6D4A     		ldr	r2, .L467+12
 9144 11b6 1188     		ldrh	r1, [r2]	@ unaligned
 9145 11b8 9278     		ldrb	r2, [r2, #2]
 9146 11ba 1980     		strh	r1, [r3]	@ unaligned
 9147 11bc 9A70     		strb	r2, [r3, #2]
1649:..\src/command_processing.c ****             
1650:..\src/command_processing.c ****             strcat(info_string, "IMUs CONFIGURATION\r\n");
 9148              		.loc 1 1650 0
 9149 11be 7868     		ldr	r0, [r7, #4]
 9150 11c0 FFF7FEFF 		bl	strlen
 9151 11c4 0346     		mov	r3, r0
 9152 11c6 1A46     		mov	r2, r3
 9153 11c8 7B68     		ldr	r3, [r7, #4]
 9154 11ca 1344     		add	r3, r3, r2
 9155 11cc 6E4A     		ldr	r2, .L467+40
 9156 11ce 1D46     		mov	r5, r3
 9157 11d0 1446     		mov	r4, r2
 9158 11d2 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9159 11d4 2860     		str	r0, [r5]	@ unaligned
 9160 11d6 6960     		str	r1, [r5, #4]	@ unaligned
 9161 11d8 AA60     		str	r2, [r5, #8]	@ unaligned
 9162 11da EB60     		str	r3, [r5, #12]	@ unaligned
 9163 11dc 2068     		ldr	r0, [r4]	@ unaligned
 9164 11de 2861     		str	r0, [r5, #16]	@ unaligned
 9165 11e0 2379     		ldrb	r3, [r4, #4]
 9166 11e2 2B75     		strb	r3, [r5, #20]
1651:..\src/command_processing.c ****             for (i=0; i<N_IMU_Connected; i++){
 9167              		.loc 1 1651 0
 9168 11e4 0023     		movs	r3, #0
 9169 11e6 FB66     		str	r3, [r7, #108]
 9170 11e8 7AE1     		b	.L443
 9171              	.L454:
1652:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9172              		.loc 1 1652 0
 9173 11ea 684A     		ldr	r2, .L467+44
 9174 11ec FB6E     		ldr	r3, [r7, #108]
 9175 11ee 1344     		add	r3, r3, r2
 9176 11f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9177 11f2 07F10800 		add	r0, r7, #8
 9178 11f6 FA6E     		ldr	r2, [r7, #108]
 9179 11f8 6549     		ldr	r1, .L467+48
 9180 11fa FFF7FEFF 		bl	sprintf
1653:..\src/command_processing.c ****                 strcat(info_string, str);
 9181              		.loc 1 1653 0
 9182 11fe 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 218


 9183 1202 1946     		mov	r1, r3
 9184 1204 7868     		ldr	r0, [r7, #4]
 9185 1206 FFF7FEFF 		bl	strcat
1654:..\src/command_processing.c ****                 
1655:..\src/command_processing.c ****                 sprintf(str, "\tAccelerometers: ");
 9186              		.loc 1 1655 0
 9187 120a 07F10803 		add	r3, r7, #8
 9188 120e 614A     		ldr	r2, .L467+52
 9189 1210 1C46     		mov	r4, r3
 9190 1212 1546     		mov	r5, r2
 9191 1214 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9192 1216 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9193 1218 2B68     		ldr	r3, [r5]
 9194 121a 2380     		strh	r3, [r4]	@ movhi
1656:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][0]))
 9195              		.loc 1 1656 0
 9196 121c 5B4A     		ldr	r2, .L467+44
 9197 121e FB6E     		ldr	r3, [r7, #108]
 9198 1220 1344     		add	r3, r3, r2
 9199 1222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9200 1224 1946     		mov	r1, r3
 9201 1226 524A     		ldr	r2, .L467+16
 9202 1228 0B46     		mov	r3, r1
 9203 122a 9B00     		lsls	r3, r3, #2
 9204 122c 0B44     		add	r3, r3, r1
 9205 122e 1344     		add	r3, r3, r2
 9206 1230 03F22113 		addw	r3, r3, #289
 9207 1234 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9208 1236 002B     		cmp	r3, #0
 9209 1238 0FD0     		beq	.L444
1657:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9210              		.loc 1 1657 0
 9211 123a 07F10803 		add	r3, r7, #8
 9212 123e 1846     		mov	r0, r3
 9213 1240 FFF7FEFF 		bl	strlen
 9214 1244 0346     		mov	r3, r0
 9215 1246 1A46     		mov	r2, r3
 9216 1248 07F10803 		add	r3, r7, #8
 9217 124c 1344     		add	r3, r3, r2
 9218 124e 524A     		ldr	r2, .L467+56
 9219 1250 1068     		ldr	r0, [r2]	@ unaligned
 9220 1252 1860     		str	r0, [r3]	@ unaligned
 9221 1254 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9222 1256 9A80     		strh	r2, [r3, #4]	@ unaligned
 9223 1258 0EE0     		b	.L445
 9224              	.L444:
1658:..\src/command_processing.c ****                 else
1659:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
 9225              		.loc 1 1659 0
 9226 125a 07F10803 		add	r3, r7, #8
 9227 125e 1846     		mov	r0, r3
 9228 1260 FFF7FEFF 		bl	strlen
 9229 1264 0346     		mov	r3, r0
 9230 1266 1A46     		mov	r2, r3
 9231 1268 07F10803 		add	r3, r7, #8
 9232 126c 1344     		add	r3, r3, r2
 9233 126e 4B4A     		ldr	r2, .L467+60
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 219


 9234 1270 1068     		ldr	r0, [r2]	@ unaligned
 9235 1272 1860     		str	r0, [r3]	@ unaligned
 9236 1274 1279     		ldrb	r2, [r2, #4]
 9237 1276 1A71     		strb	r2, [r3, #4]
 9238              	.L445:
1660:..\src/command_processing.c ****                 strcat(str, "\tGyroscopes: ");
 9239              		.loc 1 1660 0
 9240 1278 07F10803 		add	r3, r7, #8
 9241 127c 1846     		mov	r0, r3
 9242 127e FFF7FEFF 		bl	strlen
 9243 1282 0346     		mov	r3, r0
 9244 1284 1A46     		mov	r2, r3
 9245 1286 07F10803 		add	r3, r7, #8
 9246 128a 1344     		add	r3, r3, r2
 9247 128c 444A     		ldr	r2, .L467+64
 9248 128e 1C46     		mov	r4, r3
 9249 1290 1346     		mov	r3, r2
 9250 1292 07CB     		ldmia	r3!, {r0, r1, r2}
 9251 1294 2060     		str	r0, [r4]	@ unaligned
 9252 1296 6160     		str	r1, [r4, #4]	@ unaligned
 9253 1298 A260     		str	r2, [r4, #8]	@ unaligned
 9254 129a 1B88     		ldrh	r3, [r3]	@ unaligned
 9255 129c A381     		strh	r3, [r4, #12]	@ unaligned
1661:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][1]))
 9256              		.loc 1 1661 0
 9257 129e 3B4A     		ldr	r2, .L467+44
 9258 12a0 FB6E     		ldr	r3, [r7, #108]
 9259 12a2 1344     		add	r3, r3, r2
 9260 12a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9261 12a6 1946     		mov	r1, r3
 9262 12a8 314A     		ldr	r2, .L467+16
 9263 12aa 0B46     		mov	r3, r1
 9264 12ac 9B00     		lsls	r3, r3, #2
 9265 12ae 0B44     		add	r3, r3, r1
 9266 12b0 1344     		add	r3, r3, r2
 9267 12b2 03F59173 		add	r3, r3, #290
 9268 12b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9269 12b8 002B     		cmp	r3, #0
 9270 12ba 0FD0     		beq	.L446
1662:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9271              		.loc 1 1662 0
 9272 12bc 07F10803 		add	r3, r7, #8
 9273 12c0 1846     		mov	r0, r3
 9274 12c2 FFF7FEFF 		bl	strlen
 9275 12c6 0346     		mov	r3, r0
 9276 12c8 1A46     		mov	r2, r3
 9277 12ca 07F10803 		add	r3, r7, #8
 9278 12ce 1344     		add	r3, r3, r2
 9279 12d0 314A     		ldr	r2, .L467+56
 9280 12d2 1068     		ldr	r0, [r2]	@ unaligned
 9281 12d4 1860     		str	r0, [r3]	@ unaligned
 9282 12d6 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9283 12d8 9A80     		strh	r2, [r3, #4]	@ unaligned
 9284 12da 0EE0     		b	.L447
 9285              	.L446:
1663:..\src/command_processing.c ****                 else
1664:..\src/command_processing.c ****                     strcat(str, "NO\r\n"); 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 220


 9286              		.loc 1 1664 0
 9287 12dc 07F10803 		add	r3, r7, #8
 9288 12e0 1846     		mov	r0, r3
 9289 12e2 FFF7FEFF 		bl	strlen
 9290 12e6 0346     		mov	r3, r0
 9291 12e8 1A46     		mov	r2, r3
 9292 12ea 07F10803 		add	r3, r7, #8
 9293 12ee 1344     		add	r3, r3, r2
 9294 12f0 2A4A     		ldr	r2, .L467+60
 9295 12f2 1068     		ldr	r0, [r2]	@ unaligned
 9296 12f4 1860     		str	r0, [r3]	@ unaligned
 9297 12f6 1279     		ldrb	r2, [r2, #4]
 9298 12f8 1A71     		strb	r2, [r3, #4]
 9299              	.L447:
1665:..\src/command_processing.c ****                 strcat(str, "\tMagnetometers: ");
 9300              		.loc 1 1665 0
 9301 12fa 07F10803 		add	r3, r7, #8
 9302 12fe 1846     		mov	r0, r3
 9303 1300 FFF7FEFF 		bl	strlen
 9304 1304 0346     		mov	r3, r0
 9305 1306 1A46     		mov	r2, r3
 9306 1308 07F10803 		add	r3, r7, #8
 9307 130c 1344     		add	r3, r3, r2
 9308 130e 254A     		ldr	r2, .L467+68
 9309 1310 1D46     		mov	r5, r3
 9310 1312 1446     		mov	r4, r2
 9311 1314 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9312 1316 2860     		str	r0, [r5]	@ unaligned
 9313 1318 6960     		str	r1, [r5, #4]	@ unaligned
 9314 131a AA60     		str	r2, [r5, #8]	@ unaligned
 9315 131c EB60     		str	r3, [r5, #12]	@ unaligned
 9316 131e 2378     		ldrb	r3, [r4]
 9317 1320 2B74     		strb	r3, [r5, #16]
1666:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][2]))
 9318              		.loc 1 1666 0
 9319 1322 1A4A     		ldr	r2, .L467+44
 9320 1324 FB6E     		ldr	r3, [r7, #108]
 9321 1326 1344     		add	r3, r3, r2
 9322 1328 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9323 132a 1946     		mov	r1, r3
 9324 132c 104A     		ldr	r2, .L467+16
 9325 132e 0B46     		mov	r3, r1
 9326 1330 9B00     		lsls	r3, r3, #2
 9327 1332 0B44     		add	r3, r3, r1
 9328 1334 1344     		add	r3, r3, r2
 9329 1336 03F22313 		addw	r3, r3, #291
 9330 133a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9331 133c 002B     		cmp	r3, #0
 9332 133e 33D0     		beq	.L448
1667:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9333              		.loc 1 1667 0
 9334 1340 07F10803 		add	r3, r7, #8
 9335 1344 1846     		mov	r0, r3
 9336 1346 FFF7FEFF 		bl	strlen
 9337 134a 0346     		mov	r3, r0
 9338 134c 1A46     		mov	r2, r3
 9339 134e 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 221


 9340 1352 1344     		add	r3, r3, r2
 9341 1354 104A     		ldr	r2, .L467+56
 9342 1356 1068     		ldr	r0, [r2]	@ unaligned
 9343 1358 1860     		str	r0, [r3]	@ unaligned
 9344 135a 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9345 135c 9A80     		strh	r2, [r3, #4]	@ unaligned
 9346 135e 32E0     		b	.L449
 9347              	.L468:
 9348              		.align	2
 9349              	.L467:
 9350 1360 C40C0000 		.word	.LC139
 9351 1364 00000000 		.word	g_mem
 9352 1368 E00C0000 		.word	.LC140
 9353 136c 60070000 		.word	.LC75
 9354 1370 00000000 		.word	c_mem
 9355 1374 F40C0000 		.word	.LC141
 9356 1378 100D0000 		.word	.LC142
 9357 137c 380D0000 		.word	.LC143
 9358 1380 00000000 		.word	N_IMU_Connected
 9359 1384 4C0D0000 		.word	.LC144
 9360 1388 600D0000 		.word	.LC145
 9361 138c 00000000 		.word	IMU_connected
 9362 1390 780D0000 		.word	.LC146
 9363 1394 8C0D0000 		.word	.LC147
 9364 1398 84080000 		.word	.LC94
 9365 139c 8C080000 		.word	.LC95
 9366 13a0 A00D0000 		.word	.LC148
 9367 13a4 B00D0000 		.word	.LC149
 9368              	.L448:
1668:..\src/command_processing.c ****                 else
1669:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 9369              		.loc 1 1669 0
 9370 13a8 07F10803 		add	r3, r7, #8
 9371 13ac 1846     		mov	r0, r3
 9372 13ae FFF7FEFF 		bl	strlen
 9373 13b2 0346     		mov	r3, r0
 9374 13b4 1A46     		mov	r2, r3
 9375 13b6 07F10803 		add	r3, r7, #8
 9376 13ba 1344     		add	r3, r3, r2
 9377 13bc 644A     		ldr	r2, .L469
 9378 13be 1068     		ldr	r0, [r2]	@ unaligned
 9379 13c0 1860     		str	r0, [r3]	@ unaligned
 9380 13c2 1279     		ldrb	r2, [r2, #4]
 9381 13c4 1A71     		strb	r2, [r3, #4]
 9382              	.L449:
1670:..\src/command_processing.c ****                 strcat(str, "\tQuaternion: ");                
 9383              		.loc 1 1670 0
 9384 13c6 07F10803 		add	r3, r7, #8
 9385 13ca 1846     		mov	r0, r3
 9386 13cc FFF7FEFF 		bl	strlen
 9387 13d0 0346     		mov	r3, r0
 9388 13d2 1A46     		mov	r2, r3
 9389 13d4 07F10803 		add	r3, r7, #8
 9390 13d8 1344     		add	r3, r3, r2
 9391 13da 5E4A     		ldr	r2, .L469+4
 9392 13dc 1C46     		mov	r4, r3
 9393 13de 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 222


 9394 13e0 07CB     		ldmia	r3!, {r0, r1, r2}
 9395 13e2 2060     		str	r0, [r4]	@ unaligned
 9396 13e4 6160     		str	r1, [r4, #4]	@ unaligned
 9397 13e6 A260     		str	r2, [r4, #8]	@ unaligned
 9398 13e8 1B88     		ldrh	r3, [r3]	@ unaligned
 9399 13ea A381     		strh	r3, [r4, #12]	@ unaligned
1671:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][3]))
 9400              		.loc 1 1671 0
 9401 13ec 5A4A     		ldr	r2, .L469+8
 9402 13ee FB6E     		ldr	r3, [r7, #108]
 9403 13f0 1344     		add	r3, r3, r2
 9404 13f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9405 13f4 1946     		mov	r1, r3
 9406 13f6 594A     		ldr	r2, .L469+12
 9407 13f8 0B46     		mov	r3, r1
 9408 13fa 9B00     		lsls	r3, r3, #2
 9409 13fc 0B44     		add	r3, r3, r1
 9410 13fe 1344     		add	r3, r3, r2
 9411 1400 03F59273 		add	r3, r3, #292
 9412 1404 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9413 1406 002B     		cmp	r3, #0
 9414 1408 0FD0     		beq	.L450
1672:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9415              		.loc 1 1672 0
 9416 140a 07F10803 		add	r3, r7, #8
 9417 140e 1846     		mov	r0, r3
 9418 1410 FFF7FEFF 		bl	strlen
 9419 1414 0346     		mov	r3, r0
 9420 1416 1A46     		mov	r2, r3
 9421 1418 07F10803 		add	r3, r7, #8
 9422 141c 1344     		add	r3, r3, r2
 9423 141e 504A     		ldr	r2, .L469+16
 9424 1420 1068     		ldr	r0, [r2]	@ unaligned
 9425 1422 1860     		str	r0, [r3]	@ unaligned
 9426 1424 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9427 1426 9A80     		strh	r2, [r3, #4]	@ unaligned
 9428 1428 0EE0     		b	.L451
 9429              	.L450:
1673:..\src/command_processing.c ****                 else
1674:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 9430              		.loc 1 1674 0
 9431 142a 07F10803 		add	r3, r7, #8
 9432 142e 1846     		mov	r0, r3
 9433 1430 FFF7FEFF 		bl	strlen
 9434 1434 0346     		mov	r3, r0
 9435 1436 1A46     		mov	r2, r3
 9436 1438 07F10803 		add	r3, r7, #8
 9437 143c 1344     		add	r3, r3, r2
 9438 143e 444A     		ldr	r2, .L469
 9439 1440 1068     		ldr	r0, [r2]	@ unaligned
 9440 1442 1860     		str	r0, [r3]	@ unaligned
 9441 1444 1279     		ldrb	r2, [r2, #4]
 9442 1446 1A71     		strb	r2, [r3, #4]
 9443              	.L451:
1675:..\src/command_processing.c ****                 strcat(str, "\tTemperature: ");
 9444              		.loc 1 1675 0
 9445 1448 07F10803 		add	r3, r7, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 223


 9446 144c 1846     		mov	r0, r3
 9447 144e FFF7FEFF 		bl	strlen
 9448 1452 0346     		mov	r3, r0
 9449 1454 1A46     		mov	r2, r3
 9450 1456 07F10803 		add	r3, r7, #8
 9451 145a 1344     		add	r3, r3, r2
 9452 145c 414A     		ldr	r2, .L469+20
 9453 145e 1C46     		mov	r4, r3
 9454 1460 1346     		mov	r3, r2
 9455 1462 07CB     		ldmia	r3!, {r0, r1, r2}
 9456 1464 2060     		str	r0, [r4]	@ unaligned
 9457 1466 6160     		str	r1, [r4, #4]	@ unaligned
 9458 1468 A260     		str	r2, [r4, #8]	@ unaligned
 9459 146a 1A88     		ldrh	r2, [r3]	@ unaligned
 9460 146c 9B78     		ldrb	r3, [r3, #2]
 9461 146e A281     		strh	r2, [r4, #12]	@ unaligned
 9462 1470 A373     		strb	r3, [r4, #14]
1676:..\src/command_processing.c ****                 if ((c_mem.IMU_conf[IMU_connected[i]][4]))
 9463              		.loc 1 1676 0
 9464 1472 394A     		ldr	r2, .L469+8
 9465 1474 FB6E     		ldr	r3, [r7, #108]
 9466 1476 1344     		add	r3, r3, r2
 9467 1478 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9468 147a 1946     		mov	r1, r3
 9469 147c 374A     		ldr	r2, .L469+12
 9470 147e 0B46     		mov	r3, r1
 9471 1480 9B00     		lsls	r3, r3, #2
 9472 1482 0B44     		add	r3, r3, r1
 9473 1484 1344     		add	r3, r3, r2
 9474 1486 03F22513 		addw	r3, r3, #293
 9475 148a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9476 148c 002B     		cmp	r3, #0
 9477 148e 0FD0     		beq	.L452
1677:..\src/command_processing.c ****                     strcat(str, "YES\r\n");
 9478              		.loc 1 1677 0
 9479 1490 07F10803 		add	r3, r7, #8
 9480 1494 1846     		mov	r0, r3
 9481 1496 FFF7FEFF 		bl	strlen
 9482 149a 0346     		mov	r3, r0
 9483 149c 1A46     		mov	r2, r3
 9484 149e 07F10803 		add	r3, r7, #8
 9485 14a2 1344     		add	r3, r3, r2
 9486 14a4 2E4A     		ldr	r2, .L469+16
 9487 14a6 1068     		ldr	r0, [r2]	@ unaligned
 9488 14a8 1860     		str	r0, [r3]	@ unaligned
 9489 14aa 9288     		ldrh	r2, [r2, #4]	@ unaligned
 9490 14ac 9A80     		strh	r2, [r3, #4]	@ unaligned
 9491 14ae 0EE0     		b	.L453
 9492              	.L452:
1678:..\src/command_processing.c ****                 else
1679:..\src/command_processing.c ****                     strcat(str, "NO\r\n");
 9493              		.loc 1 1679 0
 9494 14b0 07F10803 		add	r3, r7, #8
 9495 14b4 1846     		mov	r0, r3
 9496 14b6 FFF7FEFF 		bl	strlen
 9497 14ba 0346     		mov	r3, r0
 9498 14bc 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 224


 9499 14be 07F10803 		add	r3, r7, #8
 9500 14c2 1344     		add	r3, r3, r2
 9501 14c4 224A     		ldr	r2, .L469
 9502 14c6 1068     		ldr	r0, [r2]	@ unaligned
 9503 14c8 1860     		str	r0, [r3]	@ unaligned
 9504 14ca 1279     		ldrb	r2, [r2, #4]
 9505 14cc 1A71     		strb	r2, [r3, #4]
 9506              	.L453:
1680:..\src/command_processing.c ****                      
1681:..\src/command_processing.c ****                 strcat(info_string, str);
 9507              		.loc 1 1681 0 discriminator 2
 9508 14ce 07F10803 		add	r3, r7, #8
 9509 14d2 1946     		mov	r1, r3
 9510 14d4 7868     		ldr	r0, [r7, #4]
 9511 14d6 FFF7FEFF 		bl	strcat
1651:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9512              		.loc 1 1651 0 discriminator 2
 9513 14da FB6E     		ldr	r3, [r7, #108]
 9514 14dc 0133     		adds	r3, r3, #1
 9515 14de FB66     		str	r3, [r7, #108]
 9516              	.L443:
1651:..\src/command_processing.c ****                 sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 9517              		.loc 1 1651 0 is_stmt 0 discriminator 1
 9518 14e0 214B     		ldr	r3, .L469+24
 9519 14e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9520 14e4 1A46     		mov	r2, r3
 9521 14e6 FB6E     		ldr	r3, [r7, #108]
 9522 14e8 9A42     		cmp	r2, r3
 9523 14ea 3FF77EAE 		bgt	.L454
1682:..\src/command_processing.c ****             }       
1683:..\src/command_processing.c ****             
1684:..\src/command_processing.c ****             strcat(info_string, "\r\n");
 9524              		.loc 1 1684 0 is_stmt 1
 9525 14ee 7868     		ldr	r0, [r7, #4]
 9526 14f0 FFF7FEFF 		bl	strlen
 9527 14f4 0346     		mov	r3, r0
 9528 14f6 1A46     		mov	r2, r3
 9529 14f8 7B68     		ldr	r3, [r7, #4]
 9530 14fa 1344     		add	r3, r3, r2
 9531 14fc 1B4A     		ldr	r2, .L469+28
 9532 14fe 1188     		ldrh	r1, [r2]	@ unaligned
 9533 1500 9278     		ldrb	r2, [r2, #2]
 9534 1502 1980     		strh	r1, [r3]	@ unaligned
 9535 1504 9A70     		strb	r2, [r3, #2]
1685:..\src/command_processing.c ****           
1686:..\src/command_processing.c ****             IMU_reading_info(info_string);
 9536              		.loc 1 1686 0
 9537 1506 7868     		ldr	r0, [r7, #4]
 9538 1508 FFF7FEFF 		bl	IMU_reading_info
 9539              	.L442:
1687:..\src/command_processing.c ****         }
1688:..\src/command_processing.c ****         
1689:..\src/command_processing.c ****         sprintf(str, "debug: %ld\r\n", (uint32)timer_value0 - (uint32)timer_value);
 9540              		.loc 1 1689 0
 9541 150c 184B     		ldr	r3, .L469+32
 9542 150e 1A68     		ldr	r2, [r3]
 9543 1510 184B     		ldr	r3, .L469+36
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 225


 9544 1512 1B68     		ldr	r3, [r3]
 9545 1514 D21A     		subs	r2, r2, r3
 9546 1516 07F10803 		add	r3, r7, #8
 9547 151a 1749     		ldr	r1, .L469+40
 9548 151c 1846     		mov	r0, r3
 9549 151e FFF7FEFF 		bl	sprintf
1690:..\src/command_processing.c ****         strcat(info_string, str);
 9550              		.loc 1 1690 0
 9551 1522 07F10803 		add	r3, r7, #8
 9552 1526 1946     		mov	r1, r3
 9553 1528 7868     		ldr	r0, [r7, #4]
 9554 152a FFF7FEFF 		bl	strcat
1691:..\src/command_processing.c ****       
1692:..\src/command_processing.c ****         strcat(info_string, "\r\n");
 9555              		.loc 1 1692 0
 9556 152e 7868     		ldr	r0, [r7, #4]
 9557 1530 FFF7FEFF 		bl	strlen
 9558 1534 0346     		mov	r3, r0
 9559 1536 1A46     		mov	r2, r3
 9560 1538 7B68     		ldr	r3, [r7, #4]
 9561 153a 1344     		add	r3, r3, r2
 9562 153c 0B4A     		ldr	r2, .L469+28
 9563 153e 1188     		ldrh	r1, [r2]	@ unaligned
 9564 1540 9278     		ldrb	r2, [r2, #2]
 9565 1542 1980     		strh	r1, [r3]	@ unaligned
 9566 1544 9A70     		strb	r2, [r3, #2]
 9567              	.L455:
 9568              	.LBE10:
1693:..\src/command_processing.c ****         
1694:..\src/command_processing.c ****     }
1695:..\src/command_processing.c **** }
 9569              		.loc 1 1695 0
 9570 1546 00BF     		nop
 9571 1548 7437     		adds	r7, r7, #116
 9572              		.cfi_def_cfa_offset 28
 9573 154a BD46     		mov	sp, r7
 9574              		.cfi_def_cfa_register 13
 9575              		@ sp needed
 9576 154c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 9577              	.L470:
 9578              		.align	2
 9579              	.L469:
 9580 1550 8C080000 		.word	.LC95
 9581 1554 C40D0000 		.word	.LC150
 9582 1558 00000000 		.word	IMU_connected
 9583 155c 00000000 		.word	c_mem
 9584 1560 84080000 		.word	.LC94
 9585 1564 D40D0000 		.word	.LC151
 9586 1568 00000000 		.word	N_IMU_Connected
 9587 156c 60070000 		.word	.LC75
 9588 1570 00000000 		.word	timer_value0
 9589 1574 00000000 		.word	timer_value
 9590 1578 E40D0000 		.word	.LC152
 9591              		.cfi_endproc
 9592              	.LFE71:
 9593              		.size	prepare_generic_info, .-prepare_generic_info
 9594              		.section	.rodata
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 226


 9595 0df1 000000   		.align	2
 9596              	.LC153:
 9597 0df4 0D0A5553 		.ascii	"\015\012USAGE STATISTICS\015\012\000"
 9597      41474520 
 9597      53544154 
 9597      49535449 
 9597      43530D0A 
 9598 0e09 000000   		.align	2
 9599              	.LC154:
 9600 0e0c 44617465 		.ascii	"Date of maintenance: %d/%d/20%d\015\012\000"
 9600      206F6620 
 9600      6D61696E 
 9600      74656E61 
 9600      6E63653A 
 9601 0e2e 0000     		.align	2
 9602              	.LC155:
 9603 0e30 4C617374 		.ascii	"Last save Time: %d/%d/20%d %d:%d:%d\015\012\000"
 9603      20736176 
 9603      65205469 
 9603      6D653A20 
 9603      25642F25 
 9604 0e56 0000     		.align	2
 9605              	.LC156:
 9606 0e58 506F7369 		.ascii	"Positions histogram (ticks):\015\012\000"
 9606      74696F6E 
 9606      73206869 
 9606      73746F67 
 9606      72616D20 
 9607 0e77 00       		.align	2
 9608              	.LC157:
 9609 0e78 42696E20 		.ascii	"Bin %d [%d-%d]: %lu\015\012\000"
 9609      2564205B 
 9609      25642D25 
 9609      645D3A20 
 9609      256C750D 
 9610 0e8e 0000     		.align	2
 9611              	.LC158:
 9612 0e90 43757272 		.ascii	"Current histogram (mA):\015\012\000"
 9612      656E7420 
 9612      68697374 
 9612      6F677261 
 9612      6D20286D 
 9613 0eaa 0000     		.align	2
 9614              	.LC159:
 9615 0eac 54687265 		.ascii	"Threshold %d [%d-%d]: %lu\015\012\000"
 9615      73686F6C 
 9615      64202564 
 9615      205B2564 
 9615      2D25645D 
 9616              		.align	2
 9617              	.LC160:
 9618 0ec8 454D4720 		.ascii	"EMG activations counter: %lu, %lu\000"
 9618      61637469 
 9618      76617469 
 9618      6F6E7320 
 9618      636F756E 
 9619 0eea 0000     		.align	2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 227


 9620              	.LC161:
 9621 0eec 52657374 		.ascii	"Rest position occurrences: %lu\000"
 9621      20706F73 
 9621      6974696F 
 9621      6E206F63 
 9621      63757272 
 9622 0f0b 00       		.align	2
 9623              	.LC162:
 9624 0f0c 416E676C 		.ascii	"Angle total displacement (ticks): %lu\000"
 9624      6520746F 
 9624      74616C20 
 9624      64697370 
 9624      6C616365 
 9625 0f32 0000     		.align	2
 9626              	.LC163:
 9627 0f34 546F7461 		.ascii	"Total power on time (sec): %lu\000"
 9627      6C20706F 
 9627      77657220 
 9627      6F6E2074 
 9627      696D6520 
 9628 0f53 00       		.align	2
 9629              	.LC164:
 9630 0f54 546F7461 		.ascii	"Total rest position time (sec): %lu\000"
 9630      6C207265 
 9630      73742070 
 9630      6F736974 
 9630      696F6E20 
 9631              		.section	.text.prepare_counter_info,"ax",%progbits
 9632              		.align	2
 9633              		.global	prepare_counter_info
 9634              		.thumb
 9635              		.thumb_func
 9636              		.type	prepare_counter_info, %function
 9637              	prepare_counter_info:
 9638              	.LFB72:
1696:..\src/command_processing.c **** 
1697:..\src/command_processing.c **** //==============================================================================
1698:..\src/command_processing.c **** //                                                   PREPARE GENERIC DEVICE INFO
1699:..\src/command_processing.c **** //==============================================================================
1700:..\src/command_processing.c **** 
1701:..\src/command_processing.c **** void prepare_counter_info(char *info_string)
1702:..\src/command_processing.c **** {
 9639              		.loc 1 1702 0
 9640              		.cfi_startproc
 9641              		@ args = 0, pretend = 0, frame = 120
 9642              		@ frame_needed = 1, uses_anonymous_args = 0
 9643 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9644              		.cfi_def_cfa_offset 20
 9645              		.cfi_offset 4, -20
 9646              		.cfi_offset 5, -16
 9647              		.cfi_offset 6, -12
 9648              		.cfi_offset 7, -8
 9649              		.cfi_offset 14, -4
 9650 0002 A3B0     		sub	sp, sp, #140
 9651              		.cfi_def_cfa_offset 160
 9652 0004 04AF     		add	r7, sp, #16
 9653              		.cfi_def_cfa 7, 144
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 228


 9654 0006 7860     		str	r0, [r7, #4]
1703:..\src/command_processing.c ****     char str[100];  
1704:..\src/command_processing.c ****     int i;
1705:..\src/command_processing.c ****     int step;
1706:..\src/command_processing.c **** 
1707:..\src/command_processing.c ****     strcat(info_string, "\r\nUSAGE STATISTICS\r\n");
 9655              		.loc 1 1707 0
 9656 0008 7868     		ldr	r0, [r7, #4]
 9657 000a FFF7FEFF 		bl	strlen
 9658 000e 0346     		mov	r3, r0
 9659 0010 1A46     		mov	r2, r3
 9660 0012 7B68     		ldr	r3, [r7, #4]
 9661 0014 1344     		add	r3, r3, r2
 9662 0016 C34A     		ldr	r2, .L477
 9663 0018 1D46     		mov	r5, r3
 9664 001a 1446     		mov	r4, r2
 9665 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 9666 001e 2860     		str	r0, [r5]	@ unaligned
 9667 0020 6960     		str	r1, [r5, #4]	@ unaligned
 9668 0022 AA60     		str	r2, [r5, #8]	@ unaligned
 9669 0024 EB60     		str	r3, [r5, #12]	@ unaligned
 9670 0026 2068     		ldr	r0, [r4]	@ unaligned
 9671 0028 2861     		str	r0, [r5, #16]	@ unaligned
 9672 002a 2379     		ldrb	r3, [r4, #4]
 9673 002c 2B75     		strb	r3, [r5, #20]
1708:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9674              		.loc 1 1708 0
 9675 002e 7868     		ldr	r0, [r7, #4]
 9676 0030 FFF7FEFF 		bl	strlen
 9677 0034 0346     		mov	r3, r0
 9678 0036 1A46     		mov	r2, r3
 9679 0038 7B68     		ldr	r3, [r7, #4]
 9680 003a 1344     		add	r3, r3, r2
 9681 003c BA4A     		ldr	r2, .L477+4
 9682 003e 1188     		ldrh	r1, [r2]	@ unaligned
 9683 0040 9278     		ldrb	r2, [r2, #2]
 9684 0042 1980     		strh	r1, [r3]	@ unaligned
 9685 0044 9A70     		strb	r2, [r3, #2]
1709:..\src/command_processing.c ****     
1710:..\src/command_processing.c ****     sprintf(str, "Date of maintenance: %d/%d/20%d\r\n", (int)g_mem.maint_day, (int)g_mem.maint_mont
 9686              		.loc 1 1710 0
 9687 0046 B94B     		ldr	r3, .L477+8
 9688 0048 93F89530 		ldrb	r3, [r3, #149]	@ zero_extendqisi2
 9689 004c 1A46     		mov	r2, r3
 9690 004e B74B     		ldr	r3, .L477+8
 9691 0050 93F89630 		ldrb	r3, [r3, #150]	@ zero_extendqisi2
 9692 0054 1946     		mov	r1, r3
 9693 0056 B54B     		ldr	r3, .L477+8
 9694 0058 93F89730 		ldrb	r3, [r3, #151]	@ zero_extendqisi2
 9695 005c 07F10C00 		add	r0, r7, #12
 9696 0060 0093     		str	r3, [sp]
 9697 0062 0B46     		mov	r3, r1
 9698 0064 B249     		ldr	r1, .L477+12
 9699 0066 FFF7FEFF 		bl	sprintf
1711:..\src/command_processing.c ****     strcat(info_string, str);
 9700              		.loc 1 1711 0
 9701 006a 07F10C03 		add	r3, r7, #12
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 229


 9702 006e 1946     		mov	r1, r3
 9703 0070 7868     		ldr	r0, [r7, #4]
 9704 0072 FFF7FEFF 		bl	strcat
1712:..\src/command_processing.c ****             
1713:..\src/command_processing.c ****     sprintf(str, "Last save Time: %d/%d/20%d %d:%d:%d\r\n", (int)g_mem.curr_time[0], (int)g_mem.cur
 9705              		.loc 1 1713 0
 9706 0076 AD4B     		ldr	r3, .L477+8
 9707 0078 93F81031 		ldrb	r3, [r3, #272]	@ zero_extendqisi2
 9708 007c 1D46     		mov	r5, r3
 9709 007e AB4B     		ldr	r3, .L477+8
 9710 0080 93F81131 		ldrb	r3, [r3, #273]	@ zero_extendqisi2
 9711 0084 1E46     		mov	r6, r3
 9712 0086 A94B     		ldr	r3, .L477+8
 9713 0088 93F81231 		ldrb	r3, [r3, #274]	@ zero_extendqisi2
 9714 008c 1A46     		mov	r2, r3
 9715 008e A74B     		ldr	r3, .L477+8
 9716 0090 93F81331 		ldrb	r3, [r3, #275]	@ zero_extendqisi2
 9717 0094 1946     		mov	r1, r3
 9718 0096 A54B     		ldr	r3, .L477+8
 9719 0098 93F81431 		ldrb	r3, [r3, #276]	@ zero_extendqisi2
 9720 009c 1C46     		mov	r4, r3
 9721 009e A34B     		ldr	r3, .L477+8
 9722 00a0 93F81531 		ldrb	r3, [r3, #277]	@ zero_extendqisi2
 9723 00a4 07F10C00 		add	r0, r7, #12
 9724 00a8 0393     		str	r3, [sp, #12]
 9725 00aa 0294     		str	r4, [sp, #8]
 9726 00ac 0191     		str	r1, [sp, #4]
 9727 00ae 0092     		str	r2, [sp]
 9728 00b0 3346     		mov	r3, r6
 9729 00b2 2A46     		mov	r2, r5
 9730 00b4 9F49     		ldr	r1, .L477+16
 9731 00b6 FFF7FEFF 		bl	sprintf
1714:..\src/command_processing.c ****     strcat(info_string, str);
 9732              		.loc 1 1714 0
 9733 00ba 07F10C03 		add	r3, r7, #12
 9734 00be 1946     		mov	r1, r3
 9735 00c0 7868     		ldr	r0, [r7, #4]
 9736 00c2 FFF7FEFF 		bl	strcat
1715:..\src/command_processing.c ****     
1716:..\src/command_processing.c ****     sprintf(str, "Positions histogram (ticks):\r\n");
 9737              		.loc 1 1716 0
 9738 00c6 07F10C03 		add	r3, r7, #12
 9739 00ca 9B4A     		ldr	r2, .L477+20
 9740 00cc 1C46     		mov	r4, r3
 9741 00ce 1546     		mov	r5, r2
 9742 00d0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9743 00d2 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9744 00d4 95E80F00 		ldmia	r5, {r0, r1, r2, r3}
 9745 00d8 07C4     		stmia	r4!, {r0, r1, r2}
 9746 00da 2380     		strh	r3, [r4]	@ movhi
 9747 00dc 0234     		adds	r4, r4, #2
 9748 00de 1B0C     		lsrs	r3, r3, #16
 9749 00e0 2370     		strb	r3, [r4]
1717:..\src/command_processing.c ****     strcat(info_string, str);
 9750              		.loc 1 1717 0
 9751 00e2 07F10C03 		add	r3, r7, #12
 9752 00e6 1946     		mov	r1, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 230


 9753 00e8 7868     		ldr	r0, [r7, #4]
 9754 00ea FFF7FEFF 		bl	strcat
1718:..\src/command_processing.c ****     step = ( (int)(g_mem.pos_lim_sup >> g_mem.res[0]) / 10);
 9755              		.loc 1 1718 0
 9756 00ee 8F4B     		ldr	r3, .L477+8
 9757 00f0 DB6D     		ldr	r3, [r3, #92]
 9758 00f2 8E4A     		ldr	r2, .L477+8
 9759 00f4 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 9760 00f8 1341     		asrs	r3, r3, r2
 9761 00fa 904A     		ldr	r2, .L477+24
 9762 00fc 82FB0312 		smull	r1, r2, r2, r3
 9763 0100 9210     		asrs	r2, r2, #2
 9764 0102 DB17     		asrs	r3, r3, #31
 9765 0104 D31A     		subs	r3, r2, r3
 9766 0106 3B67     		str	r3, [r7, #112]
1719:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 9767              		.loc 1 1719 0
 9768 0108 0123     		movs	r3, #1
 9769 010a 7B67     		str	r3, [r7, #116]
 9770 010c 21E0     		b	.L472
 9771              	.L473:
1720:..\src/command_processing.c ****         sprintf(str, "Bin %d [%d-%d]: %lu\r\n", i, step*(i-1)+1, step*(i), g_mem.position_hist[i-1]
 9772              		.loc 1 1720 0 discriminator 3
 9773 010e 7B6F     		ldr	r3, [r7, #116]
 9774 0110 013B     		subs	r3, r3, #1
 9775 0112 3A6F     		ldr	r2, [r7, #112]
 9776 0114 02FB03F3 		mul	r3, r2, r3
 9777 0118 5C1C     		adds	r4, r3, #1
 9778 011a 3B6F     		ldr	r3, [r7, #112]
 9779 011c 7A6F     		ldr	r2, [r7, #116]
 9780 011e 02FB03F3 		mul	r3, r2, r3
 9781 0122 7A6F     		ldr	r2, [r7, #116]
 9782 0124 013A     		subs	r2, r2, #1
 9783 0126 8149     		ldr	r1, .L477+8
 9784 0128 3232     		adds	r2, r2, #50
 9785 012a 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9786 012e 07F10C00 		add	r0, r7, #12
 9787 0132 0192     		str	r2, [sp, #4]
 9788 0134 0093     		str	r3, [sp]
 9789 0136 2346     		mov	r3, r4
 9790 0138 7A6F     		ldr	r2, [r7, #116]
 9791 013a 8149     		ldr	r1, .L477+28
 9792 013c FFF7FEFF 		bl	sprintf
1721:..\src/command_processing.c ****         strcat(info_string, str);
 9793              		.loc 1 1721 0 discriminator 3
 9794 0140 07F10C03 		add	r3, r7, #12
 9795 0144 1946     		mov	r1, r3
 9796 0146 7868     		ldr	r0, [r7, #4]
 9797 0148 FFF7FEFF 		bl	strcat
1719:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 9798              		.loc 1 1719 0 discriminator 3
 9799 014c 7B6F     		ldr	r3, [r7, #116]
 9800 014e 0133     		adds	r3, r3, #1
 9801 0150 7B67     		str	r3, [r7, #116]
 9802              	.L472:
1719:..\src/command_processing.c ****     for (i=1; i<=10;i++){
 9803              		.loc 1 1719 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 231


 9804 0152 7B6F     		ldr	r3, [r7, #116]
 9805 0154 0A2B     		cmp	r3, #10
 9806 0156 DADD     		ble	.L473
1722:..\src/command_processing.c ****     }
1723:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9807              		.loc 1 1723 0 is_stmt 1
 9808 0158 7868     		ldr	r0, [r7, #4]
 9809 015a FFF7FEFF 		bl	strlen
 9810 015e 0346     		mov	r3, r0
 9811 0160 1A46     		mov	r2, r3
 9812 0162 7B68     		ldr	r3, [r7, #4]
 9813 0164 1344     		add	r3, r3, r2
 9814 0166 704A     		ldr	r2, .L477+4
 9815 0168 1188     		ldrh	r1, [r2]	@ unaligned
 9816 016a 9278     		ldrb	r2, [r2, #2]
 9817 016c 1980     		strh	r1, [r3]	@ unaligned
 9818 016e 9A70     		strb	r2, [r3, #2]
1724:..\src/command_processing.c ****     
1725:..\src/command_processing.c ****     sprintf(str, "Current histogram (mA):\r\n");
 9819              		.loc 1 1725 0
 9820 0170 07F10C03 		add	r3, r7, #12
 9821 0174 734A     		ldr	r2, .L477+32
 9822 0176 1C46     		mov	r4, r3
 9823 0178 1546     		mov	r5, r2
 9824 017a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 9825 017c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 9826 017e 95E80700 		ldmia	r5, {r0, r1, r2}
 9827 0182 03C4     		stmia	r4!, {r0, r1}
 9828 0184 2280     		strh	r2, [r4]	@ movhi
1726:..\src/command_processing.c ****     strcat(info_string, str);
 9829              		.loc 1 1726 0
 9830 0186 07F10C03 		add	r3, r7, #12
 9831 018a 1946     		mov	r1, r3
 9832 018c 7868     		ldr	r0, [r7, #4]
 9833 018e FFF7FEFF 		bl	strcat
1727:..\src/command_processing.c ****     step = ( (int)(g_mem.current_limit) / 4);
 9834              		.loc 1 1727 0
 9835 0192 664B     		ldr	r3, .L477+8
 9836 0194 B3F96830 		ldrsh	r3, [r3, #104]
 9837 0198 002B     		cmp	r3, #0
 9838 019a 00DA     		bge	.L474
 9839 019c 0333     		adds	r3, r3, #3
 9840              	.L474:
 9841 019e 9B10     		asrs	r3, r3, #2
 9842 01a0 1BB2     		sxth	r3, r3
 9843 01a2 3B67     		str	r3, [r7, #112]
1728:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9844              		.loc 1 1728 0
 9845 01a4 0123     		movs	r3, #1
 9846 01a6 7B67     		str	r3, [r7, #116]
 9847 01a8 20E0     		b	.L475
 9848              	.L476:
1729:..\src/command_processing.c ****         sprintf(str, "Threshold %d [%d-%d]: %lu\r\n", i, step*(i-1), step*(i), g_mem.current_hist[i
 9849              		.loc 1 1729 0 discriminator 3
 9850 01aa 7B6F     		ldr	r3, [r7, #116]
 9851 01ac 013B     		subs	r3, r3, #1
 9852 01ae 3A6F     		ldr	r2, [r7, #112]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 232


 9853 01b0 02FB03F4 		mul	r4, r2, r3
 9854 01b4 3B6F     		ldr	r3, [r7, #112]
 9855 01b6 7A6F     		ldr	r2, [r7, #116]
 9856 01b8 02FB03F3 		mul	r3, r2, r3
 9857 01bc 7A6F     		ldr	r2, [r7, #116]
 9858 01be 013A     		subs	r2, r2, #1
 9859 01c0 5A49     		ldr	r1, .L477+8
 9860 01c2 3C32     		adds	r2, r2, #60
 9861 01c4 51F82220 		ldr	r2, [r1, r2, lsl #2]
 9862 01c8 07F10C00 		add	r0, r7, #12
 9863 01cc 0192     		str	r2, [sp, #4]
 9864 01ce 0093     		str	r3, [sp]
 9865 01d0 2346     		mov	r3, r4
 9866 01d2 7A6F     		ldr	r2, [r7, #116]
 9867 01d4 5C49     		ldr	r1, .L477+36
 9868 01d6 FFF7FEFF 		bl	sprintf
1730:..\src/command_processing.c ****         strcat(info_string, str);
 9869              		.loc 1 1730 0 discriminator 3
 9870 01da 07F10C03 		add	r3, r7, #12
 9871 01de 1946     		mov	r1, r3
 9872 01e0 7868     		ldr	r0, [r7, #4]
 9873 01e2 FFF7FEFF 		bl	strcat
1728:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9874              		.loc 1 1728 0 discriminator 3
 9875 01e6 7B6F     		ldr	r3, [r7, #116]
 9876 01e8 0133     		adds	r3, r3, #1
 9877 01ea 7B67     		str	r3, [r7, #116]
 9878              	.L475:
1728:..\src/command_processing.c ****     for (i=1; i<=4;i++){
 9879              		.loc 1 1728 0 is_stmt 0 discriminator 1
 9880 01ec 7B6F     		ldr	r3, [r7, #116]
 9881 01ee 042B     		cmp	r3, #4
 9882 01f0 DBDD     		ble	.L476
1731:..\src/command_processing.c ****     }
1732:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9883              		.loc 1 1732 0 is_stmt 1
 9884 01f2 7868     		ldr	r0, [r7, #4]
 9885 01f4 FFF7FEFF 		bl	strlen
 9886 01f8 0346     		mov	r3, r0
 9887 01fa 1A46     		mov	r2, r3
 9888 01fc 7B68     		ldr	r3, [r7, #4]
 9889 01fe 1344     		add	r3, r3, r2
 9890 0200 494A     		ldr	r2, .L477+4
 9891 0202 1188     		ldrh	r1, [r2]	@ unaligned
 9892 0204 9278     		ldrb	r2, [r2, #2]
 9893 0206 1980     		strh	r1, [r3]	@ unaligned
 9894 0208 9A70     		strb	r2, [r3, #2]
1733:..\src/command_processing.c ****             
1734:..\src/command_processing.c ****     sprintf(str, "EMG activations counter: %lu, %lu", g_mem.emg_counter[0], g_mem.emg_counter[1]);
 9895              		.loc 1 1734 0
 9896 020a 484B     		ldr	r3, .L477+8
 9897 020c D3F8C020 		ldr	r2, [r3, #192]
 9898 0210 464B     		ldr	r3, .L477+8
 9899 0212 D3F8C430 		ldr	r3, [r3, #196]
 9900 0216 07F10C00 		add	r0, r7, #12
 9901 021a 4C49     		ldr	r1, .L477+40
 9902 021c FFF7FEFF 		bl	sprintf
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 233


1735:..\src/command_processing.c ****     strcat(info_string, str);
 9903              		.loc 1 1735 0
 9904 0220 07F10C03 		add	r3, r7, #12
 9905 0224 1946     		mov	r1, r3
 9906 0226 7868     		ldr	r0, [r7, #4]
 9907 0228 FFF7FEFF 		bl	strcat
1736:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9908              		.loc 1 1736 0
 9909 022c 7868     		ldr	r0, [r7, #4]
 9910 022e FFF7FEFF 		bl	strlen
 9911 0232 0346     		mov	r3, r0
 9912 0234 1A46     		mov	r2, r3
 9913 0236 7B68     		ldr	r3, [r7, #4]
 9914 0238 1344     		add	r3, r3, r2
 9915 023a 3B4A     		ldr	r2, .L477+4
 9916 023c 1188     		ldrh	r1, [r2]	@ unaligned
 9917 023e 9278     		ldrb	r2, [r2, #2]
 9918 0240 1980     		strh	r1, [r3]	@ unaligned
 9919 0242 9A70     		strb	r2, [r3, #2]
1737:..\src/command_processing.c ****     
1738:..\src/command_processing.c ****     sprintf(str, "Rest position occurrences: %lu", g_mem.rest_counter);
 9920              		.loc 1 1738 0
 9921 0244 394B     		ldr	r3, .L477+8
 9922 0246 D3F80021 		ldr	r2, [r3, #256]
 9923 024a 07F10C03 		add	r3, r7, #12
 9924 024e 4049     		ldr	r1, .L477+44
 9925 0250 1846     		mov	r0, r3
 9926 0252 FFF7FEFF 		bl	sprintf
1739:..\src/command_processing.c ****     strcat(info_string, str);
 9927              		.loc 1 1739 0
 9928 0256 07F10C03 		add	r3, r7, #12
 9929 025a 1946     		mov	r1, r3
 9930 025c 7868     		ldr	r0, [r7, #4]
 9931 025e FFF7FEFF 		bl	strcat
1740:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9932              		.loc 1 1740 0
 9933 0262 7868     		ldr	r0, [r7, #4]
 9934 0264 FFF7FEFF 		bl	strlen
 9935 0268 0346     		mov	r3, r0
 9936 026a 1A46     		mov	r2, r3
 9937 026c 7B68     		ldr	r3, [r7, #4]
 9938 026e 1344     		add	r3, r3, r2
 9939 0270 2D4A     		ldr	r2, .L477+4
 9940 0272 1188     		ldrh	r1, [r2]	@ unaligned
 9941 0274 9278     		ldrb	r2, [r2, #2]
 9942 0276 1980     		strh	r1, [r3]	@ unaligned
 9943 0278 9A70     		strb	r2, [r3, #2]
1741:..\src/command_processing.c ****     
1742:..\src/command_processing.c ****     sprintf(str, "Angle total displacement (ticks): %lu", g_mem.wire_disp);
 9944              		.loc 1 1742 0
 9945 027a 2C4B     		ldr	r3, .L477+8
 9946 027c D3F80421 		ldr	r2, [r3, #260]
 9947 0280 07F10C03 		add	r3, r7, #12
 9948 0284 3349     		ldr	r1, .L477+48
 9949 0286 1846     		mov	r0, r3
 9950 0288 FFF7FEFF 		bl	sprintf
1743:..\src/command_processing.c ****     strcat(info_string, str);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 234


 9951              		.loc 1 1743 0
 9952 028c 07F10C03 		add	r3, r7, #12
 9953 0290 1946     		mov	r1, r3
 9954 0292 7868     		ldr	r0, [r7, #4]
 9955 0294 FFF7FEFF 		bl	strcat
1744:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9956              		.loc 1 1744 0
 9957 0298 7868     		ldr	r0, [r7, #4]
 9958 029a FFF7FEFF 		bl	strlen
 9959 029e 0346     		mov	r3, r0
 9960 02a0 1A46     		mov	r2, r3
 9961 02a2 7B68     		ldr	r3, [r7, #4]
 9962 02a4 1344     		add	r3, r3, r2
 9963 02a6 204A     		ldr	r2, .L477+4
 9964 02a8 1188     		ldrh	r1, [r2]	@ unaligned
 9965 02aa 9278     		ldrb	r2, [r2, #2]
 9966 02ac 1980     		strh	r1, [r3]	@ unaligned
 9967 02ae 9A70     		strb	r2, [r3, #2]
1745:..\src/command_processing.c ****     
1746:..\src/command_processing.c ****     sprintf(str, "Total power on time (sec): %lu", g_mem.total_time_on);
 9968              		.loc 1 1746 0
 9969 02b0 1E4B     		ldr	r3, .L477+8
 9970 02b2 D3F80821 		ldr	r2, [r3, #264]
 9971 02b6 07F10C03 		add	r3, r7, #12
 9972 02ba 2749     		ldr	r1, .L477+52
 9973 02bc 1846     		mov	r0, r3
 9974 02be FFF7FEFF 		bl	sprintf
1747:..\src/command_processing.c ****     strcat(info_string, str);
 9975              		.loc 1 1747 0
 9976 02c2 07F10C03 		add	r3, r7, #12
 9977 02c6 1946     		mov	r1, r3
 9978 02c8 7868     		ldr	r0, [r7, #4]
 9979 02ca FFF7FEFF 		bl	strcat
1748:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 9980              		.loc 1 1748 0
 9981 02ce 7868     		ldr	r0, [r7, #4]
 9982 02d0 FFF7FEFF 		bl	strlen
 9983 02d4 0346     		mov	r3, r0
 9984 02d6 1A46     		mov	r2, r3
 9985 02d8 7B68     		ldr	r3, [r7, #4]
 9986 02da 1344     		add	r3, r3, r2
 9987 02dc 124A     		ldr	r2, .L477+4
 9988 02de 1188     		ldrh	r1, [r2]	@ unaligned
 9989 02e0 9278     		ldrb	r2, [r2, #2]
 9990 02e2 1980     		strh	r1, [r3]	@ unaligned
 9991 02e4 9A70     		strb	r2, [r3, #2]
1749:..\src/command_processing.c ****     
1750:..\src/command_processing.c ****     sprintf(str, "Total rest position time (sec): %lu", g_mem.total_time_rest);
 9992              		.loc 1 1750 0
 9993 02e6 114B     		ldr	r3, .L477+8
 9994 02e8 D3F80C21 		ldr	r2, [r3, #268]
 9995 02ec 07F10C03 		add	r3, r7, #12
 9996 02f0 1A49     		ldr	r1, .L477+56
 9997 02f2 1846     		mov	r0, r3
 9998 02f4 FFF7FEFF 		bl	sprintf
1751:..\src/command_processing.c ****     strcat(info_string, str);
 9999              		.loc 1 1751 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 235


 10000 02f8 07F10C03 		add	r3, r7, #12
 10001 02fc 1946     		mov	r1, r3
 10002 02fe 7868     		ldr	r0, [r7, #4]
 10003 0300 FFF7FEFF 		bl	strcat
1752:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10004              		.loc 1 1752 0
 10005 0304 7868     		ldr	r0, [r7, #4]
 10006 0306 FFF7FEFF 		bl	strlen
 10007 030a 0346     		mov	r3, r0
 10008 030c 1A46     		mov	r2, r3
 10009 030e 7B68     		ldr	r3, [r7, #4]
 10010 0310 1344     		add	r3, r3, r2
 10011 0312 054A     		ldr	r2, .L477+4
 10012 0314 1188     		ldrh	r1, [r2]	@ unaligned
 10013 0316 9278     		ldrb	r2, [r2, #2]
 10014 0318 1980     		strh	r1, [r3]	@ unaligned
 10015 031a 9A70     		strb	r2, [r3, #2]
1753:..\src/command_processing.c **** 
1754:..\src/command_processing.c **** }
 10016              		.loc 1 1754 0
 10017 031c 00BF     		nop
 10018 031e 7C37     		adds	r7, r7, #124
 10019              		.cfi_def_cfa_offset 20
 10020 0320 BD46     		mov	sp, r7
 10021              		.cfi_def_cfa_register 13
 10022              		@ sp needed
 10023 0322 F0BD     		pop	{r4, r5, r6, r7, pc}
 10024              	.L478:
 10025              		.align	2
 10026              	.L477:
 10027 0324 F40D0000 		.word	.LC153
 10028 0328 60070000 		.word	.LC75
 10029 032c 00000000 		.word	g_mem
 10030 0330 0C0E0000 		.word	.LC154
 10031 0334 300E0000 		.word	.LC155
 10032 0338 580E0000 		.word	.LC156
 10033 033c 67666666 		.word	1717986919
 10034 0340 780E0000 		.word	.LC157
 10035 0344 900E0000 		.word	.LC158
 10036 0348 AC0E0000 		.word	.LC159
 10037 034c C80E0000 		.word	.LC160
 10038 0350 EC0E0000 		.word	.LC161
 10039 0354 0C0F0000 		.word	.LC162
 10040 0358 340F0000 		.word	.LC163
 10041 035c 540F0000 		.word	.LC164
 10042              		.cfi_endproc
 10043              	.LFE72:
 10044              		.size	prepare_counter_info, .-prepare_counter_info
 10045              		.section	.rodata
 10046              		.align	2
 10047              	.LC165:
 10048 0f78 53454E53 		.ascii	"SENSORS INFO\015\012\000"
 10048      4F525320 
 10048      494E464F 
 10048      0D0A00
 10049 0f87 00       		.align	2
 10050              	.LC166:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 236


 10051 0f88 09416363 		.ascii	"\011Acc: %d\011%d\011%d\015\012\000"
 10051      3A202564 
 10051      09256409 
 10051      25640D0A 
 10051      00
 10052 0f99 000000   		.align	2
 10053              	.LC167:
 10054 0f9c 09477972 		.ascii	"\011Gyro: %d\011%d\011%d\015\012\000"
 10054      6F3A2025 
 10054      64092564 
 10054      0925640D 
 10054      0A00
 10055 0fae 0000     		.align	2
 10056              	.LC168:
 10057 0fb0 094D6167 		.ascii	"\011Mag: %d\011%d\011%d\015\012\000"
 10057      3A202564 
 10057      09256409 
 10057      25640D0A 
 10057      00
 10058 0fc1 000000   		.align	2
 10059              	.LC169:
 10060 0fc4 09517561 		.ascii	"\011Quat: %.3f\011%.3f\011%.3f\011%.3f\015\012\000"
 10060      743A2025 
 10060      2E336609 
 10060      252E3366 
 10060      09252E33 
 10061 0fe1 000000   		.align	2
 10062              	.LC170:
 10063 0fe4 0954656D 		.ascii	"\011Temperature: %d\015\012\000"
 10063      70657261 
 10063      74757265 
 10063      3A202564 
 10063      0D0A00
 10064              		.section	.text.IMU_reading_info,"ax",%progbits
 10065              		.align	2
 10066              		.global	IMU_reading_info
 10067              		.thumb
 10068              		.thumb_func
 10069              		.type	IMU_reading_info, %function
 10070              	IMU_reading_info:
 10071              	.LFB73:
1755:..\src/command_processing.c **** 
1756:..\src/command_processing.c **** //==============================================================================
1757:..\src/command_processing.c **** //                                                              IMU READING INFO
1758:..\src/command_processing.c **** //==============================================================================
1759:..\src/command_processing.c **** 
1760:..\src/command_processing.c **** void IMU_reading_info(char *info_string)
1761:..\src/command_processing.c **** {
 10072              		.loc 1 1761 0
 10073              		.cfi_startproc
 10074              		@ args = 0, pretend = 0, frame = 312
 10075              		@ frame_needed = 1, uses_anonymous_args = 0
 10076 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 10077              		.cfi_def_cfa_offset 32
 10078              		.cfi_offset 4, -32
 10079              		.cfi_offset 5, -28
 10080              		.cfi_offset 7, -24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 237


 10081              		.cfi_offset 8, -20
 10082              		.cfi_offset 9, -16
 10083              		.cfi_offset 10, -12
 10084              		.cfi_offset 11, -8
 10085              		.cfi_offset 14, -4
 10086 0004 D4B0     		sub	sp, sp, #336
 10087              		.cfi_def_cfa_offset 368
 10088 0006 06AF     		add	r7, sp, #24
 10089              		.cfi_def_cfa 7, 344
 10090 0008 3B1D     		adds	r3, r7, #4
 10091 000a 1860     		str	r0, [r3]
1762:..\src/command_processing.c ****     char str[300];  
1763:..\src/command_processing.c ****     int i;
1764:..\src/command_processing.c ****                  
1765:..\src/command_processing.c ****     strcat(info_string, "SENSORS INFO\r\n");
 10092              		.loc 1 1765 0
 10093 000c 3B1D     		adds	r3, r7, #4
 10094 000e 1868     		ldr	r0, [r3]
 10095 0010 FFF7FEFF 		bl	strlen
 10096 0014 0346     		mov	r3, r0
 10097 0016 1A46     		mov	r2, r3
 10098 0018 3B1D     		adds	r3, r7, #4
 10099 001a 1B68     		ldr	r3, [r3]
 10100 001c 1344     		add	r3, r3, r2
 10101 001e C94A     		ldr	r2, .L487
 10102 0020 1C46     		mov	r4, r3
 10103 0022 1346     		mov	r3, r2
 10104 0024 07CB     		ldmia	r3!, {r0, r1, r2}
 10105 0026 2060     		str	r0, [r4]	@ unaligned
 10106 0028 6160     		str	r1, [r4, #4]	@ unaligned
 10107 002a A260     		str	r2, [r4, #8]	@ unaligned
 10108 002c 1A88     		ldrh	r2, [r3]	@ unaligned
 10109 002e 9B78     		ldrb	r3, [r3, #2]
 10110 0030 A281     		strh	r2, [r4, #12]	@ unaligned
 10111 0032 A373     		strb	r3, [r4, #14]
1766:..\src/command_processing.c ****     for (i=0; i<N_IMU_Connected; i++){
 10112              		.loc 1 1766 0
 10113 0034 0023     		movs	r3, #0
 10114 0036 C7F83431 		str	r3, [r7, #308]
 10115 003a 66E1     		b	.L480
 10116              	.L486:
1767:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 10117              		.loc 1 1767 0
 10118 003c C24A     		ldr	r2, .L487+4
 10119 003e D7F83431 		ldr	r3, [r7, #308]
 10120 0042 1344     		add	r3, r3, r2
 10121 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10122 0046 07F10800 		add	r0, r7, #8
 10123 004a D7F83421 		ldr	r2, [r7, #308]
 10124 004e BF49     		ldr	r1, .L487+8
 10125 0050 FFF7FEFF 		bl	sprintf
1768:..\src/command_processing.c ****         strcat(info_string, str);
 10126              		.loc 1 1768 0
 10127 0054 07F10802 		add	r2, r7, #8
 10128 0058 3B1D     		adds	r3, r7, #4
 10129 005a 1146     		mov	r1, r2
 10130 005c 1868     		ldr	r0, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 238


 10131 005e FFF7FEFF 		bl	strcat
1769:..\src/command_processing.c ****         
1770:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][0])){
 10132              		.loc 1 1770 0
 10133 0062 B94A     		ldr	r2, .L487+4
 10134 0064 D7F83431 		ldr	r3, [r7, #308]
 10135 0068 1344     		add	r3, r3, r2
 10136 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10137 006c 1946     		mov	r1, r3
 10138 006e B84A     		ldr	r2, .L487+12
 10139 0070 0B46     		mov	r3, r1
 10140 0072 9B00     		lsls	r3, r3, #2
 10141 0074 0B44     		add	r3, r3, r1
 10142 0076 1344     		add	r3, r3, r2
 10143 0078 03F22113 		addw	r3, r3, #289
 10144 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10145 007e 002B     		cmp	r3, #0
 10146 0080 31D0     		beq	.L481
1771:..\src/command_processing.c ****             sprintf(str, "\tAcc: %d\t%d\t%d\r\n", (int16) g_imu[i].accel_value[0], (int16) g_imu[i]
 10147              		.loc 1 1771 0
 10148 0082 B449     		ldr	r1, .L487+16
 10149 0084 D7F83421 		ldr	r2, [r7, #308]
 10150 0088 1346     		mov	r3, r2
 10151 008a 9B00     		lsls	r3, r3, #2
 10152 008c 1344     		add	r3, r3, r2
 10153 008e DB00     		lsls	r3, r3, #3
 10154 0090 0B44     		add	r3, r3, r1
 10155 0092 0233     		adds	r3, r3, #2
 10156 0094 B3F90030 		ldrsh	r3, [r3]
 10157 0098 1C46     		mov	r4, r3
 10158 009a AE49     		ldr	r1, .L487+16
 10159 009c D7F83421 		ldr	r2, [r7, #308]
 10160 00a0 1346     		mov	r3, r2
 10161 00a2 9B00     		lsls	r3, r3, #2
 10162 00a4 1344     		add	r3, r3, r2
 10163 00a6 DB00     		lsls	r3, r3, #3
 10164 00a8 0B44     		add	r3, r3, r1
 10165 00aa 0433     		adds	r3, r3, #4
 10166 00ac B3F90030 		ldrsh	r3, [r3]
 10167 00b0 1D46     		mov	r5, r3
 10168 00b2 A849     		ldr	r1, .L487+16
 10169 00b4 D7F83421 		ldr	r2, [r7, #308]
 10170 00b8 1346     		mov	r3, r2
 10171 00ba 9B00     		lsls	r3, r3, #2
 10172 00bc 1344     		add	r3, r3, r2
 10173 00be DB00     		lsls	r3, r3, #3
 10174 00c0 0B44     		add	r3, r3, r1
 10175 00c2 0633     		adds	r3, r3, #6
 10176 00c4 B3F90030 		ldrsh	r3, [r3]
 10177 00c8 07F10800 		add	r0, r7, #8
 10178 00cc 0093     		str	r3, [sp]
 10179 00ce 2B46     		mov	r3, r5
 10180 00d0 2246     		mov	r2, r4
 10181 00d2 A149     		ldr	r1, .L487+20
 10182 00d4 FFF7FEFF 		bl	sprintf
1772:..\src/command_processing.c ****             strcat(info_string, str);
 10183              		.loc 1 1772 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 239


 10184 00d8 07F10802 		add	r2, r7, #8
 10185 00dc 3B1D     		adds	r3, r7, #4
 10186 00de 1146     		mov	r1, r2
 10187 00e0 1868     		ldr	r0, [r3]
 10188 00e2 FFF7FEFF 		bl	strcat
 10189              	.L481:
1773:..\src/command_processing.c ****         }
1774:..\src/command_processing.c **** 
1775:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][1])){
 10190              		.loc 1 1775 0
 10191 00e6 984A     		ldr	r2, .L487+4
 10192 00e8 D7F83431 		ldr	r3, [r7, #308]
 10193 00ec 1344     		add	r3, r3, r2
 10194 00ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10195 00f0 1946     		mov	r1, r3
 10196 00f2 974A     		ldr	r2, .L487+12
 10197 00f4 0B46     		mov	r3, r1
 10198 00f6 9B00     		lsls	r3, r3, #2
 10199 00f8 0B44     		add	r3, r3, r1
 10200 00fa 1344     		add	r3, r3, r2
 10201 00fc 03F59173 		add	r3, r3, #290
 10202 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10203 0102 002B     		cmp	r3, #0
 10204 0104 31D0     		beq	.L482
1776:..\src/command_processing.c ****             sprintf(str, "\tGyro: %d\t%d\t%d\r\n", (int16) g_imu[i].gyro_value[0], (int16) g_imu[i]
 10205              		.loc 1 1776 0
 10206 0106 9349     		ldr	r1, .L487+16
 10207 0108 D7F83421 		ldr	r2, [r7, #308]
 10208 010c 1346     		mov	r3, r2
 10209 010e 9B00     		lsls	r3, r3, #2
 10210 0110 1344     		add	r3, r3, r2
 10211 0112 DB00     		lsls	r3, r3, #3
 10212 0114 0B44     		add	r3, r3, r1
 10213 0116 0833     		adds	r3, r3, #8
 10214 0118 B3F90030 		ldrsh	r3, [r3]
 10215 011c 1C46     		mov	r4, r3
 10216 011e 8D49     		ldr	r1, .L487+16
 10217 0120 D7F83421 		ldr	r2, [r7, #308]
 10218 0124 1346     		mov	r3, r2
 10219 0126 9B00     		lsls	r3, r3, #2
 10220 0128 1344     		add	r3, r3, r2
 10221 012a DB00     		lsls	r3, r3, #3
 10222 012c 0B44     		add	r3, r3, r1
 10223 012e 0A33     		adds	r3, r3, #10
 10224 0130 B3F90030 		ldrsh	r3, [r3]
 10225 0134 1D46     		mov	r5, r3
 10226 0136 8749     		ldr	r1, .L487+16
 10227 0138 D7F83421 		ldr	r2, [r7, #308]
 10228 013c 1346     		mov	r3, r2
 10229 013e 9B00     		lsls	r3, r3, #2
 10230 0140 1344     		add	r3, r3, r2
 10231 0142 DB00     		lsls	r3, r3, #3
 10232 0144 0B44     		add	r3, r3, r1
 10233 0146 0C33     		adds	r3, r3, #12
 10234 0148 B3F90030 		ldrsh	r3, [r3]
 10235 014c 07F10800 		add	r0, r7, #8
 10236 0150 0093     		str	r3, [sp]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 240


 10237 0152 2B46     		mov	r3, r5
 10238 0154 2246     		mov	r2, r4
 10239 0156 8149     		ldr	r1, .L487+24
 10240 0158 FFF7FEFF 		bl	sprintf
1777:..\src/command_processing.c ****             strcat(info_string, str);
 10241              		.loc 1 1777 0
 10242 015c 07F10802 		add	r2, r7, #8
 10243 0160 3B1D     		adds	r3, r7, #4
 10244 0162 1146     		mov	r1, r2
 10245 0164 1868     		ldr	r0, [r3]
 10246 0166 FFF7FEFF 		bl	strcat
 10247              	.L482:
1778:..\src/command_processing.c ****         }
1779:..\src/command_processing.c **** 
1780:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][2])){
 10248              		.loc 1 1780 0
 10249 016a 774A     		ldr	r2, .L487+4
 10250 016c D7F83431 		ldr	r3, [r7, #308]
 10251 0170 1344     		add	r3, r3, r2
 10252 0172 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10253 0174 1946     		mov	r1, r3
 10254 0176 764A     		ldr	r2, .L487+12
 10255 0178 0B46     		mov	r3, r1
 10256 017a 9B00     		lsls	r3, r3, #2
 10257 017c 0B44     		add	r3, r3, r1
 10258 017e 1344     		add	r3, r3, r2
 10259 0180 03F22313 		addw	r3, r3, #291
 10260 0184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10261 0186 002B     		cmp	r3, #0
 10262 0188 31D0     		beq	.L483
1781:..\src/command_processing.c ****             sprintf(str, "\tMag: %d\t%d\t%d\r\n", (int16) g_imu[i].mag_value[0], (int16) g_imu[i].m
 10263              		.loc 1 1781 0
 10264 018a 7249     		ldr	r1, .L487+16
 10265 018c D7F83421 		ldr	r2, [r7, #308]
 10266 0190 1346     		mov	r3, r2
 10267 0192 9B00     		lsls	r3, r3, #2
 10268 0194 1344     		add	r3, r3, r2
 10269 0196 DB00     		lsls	r3, r3, #3
 10270 0198 0B44     		add	r3, r3, r1
 10271 019a 0E33     		adds	r3, r3, #14
 10272 019c B3F90030 		ldrsh	r3, [r3]
 10273 01a0 1C46     		mov	r4, r3
 10274 01a2 6C49     		ldr	r1, .L487+16
 10275 01a4 D7F83421 		ldr	r2, [r7, #308]
 10276 01a8 1346     		mov	r3, r2
 10277 01aa 9B00     		lsls	r3, r3, #2
 10278 01ac 1344     		add	r3, r3, r2
 10279 01ae DB00     		lsls	r3, r3, #3
 10280 01b0 0B44     		add	r3, r3, r1
 10281 01b2 1033     		adds	r3, r3, #16
 10282 01b4 B3F90030 		ldrsh	r3, [r3]
 10283 01b8 1D46     		mov	r5, r3
 10284 01ba 6649     		ldr	r1, .L487+16
 10285 01bc D7F83421 		ldr	r2, [r7, #308]
 10286 01c0 1346     		mov	r3, r2
 10287 01c2 9B00     		lsls	r3, r3, #2
 10288 01c4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 241


 10289 01c6 DB00     		lsls	r3, r3, #3
 10290 01c8 0B44     		add	r3, r3, r1
 10291 01ca 1233     		adds	r3, r3, #18
 10292 01cc B3F90030 		ldrsh	r3, [r3]
 10293 01d0 07F10800 		add	r0, r7, #8
 10294 01d4 0093     		str	r3, [sp]
 10295 01d6 2B46     		mov	r3, r5
 10296 01d8 2246     		mov	r2, r4
 10297 01da 6149     		ldr	r1, .L487+28
 10298 01dc FFF7FEFF 		bl	sprintf
1782:..\src/command_processing.c ****             strcat(info_string, str);
 10299              		.loc 1 1782 0
 10300 01e0 07F10802 		add	r2, r7, #8
 10301 01e4 3B1D     		adds	r3, r7, #4
 10302 01e6 1146     		mov	r1, r2
 10303 01e8 1868     		ldr	r0, [r3]
 10304 01ea FFF7FEFF 		bl	strcat
 10305              	.L483:
1783:..\src/command_processing.c ****         }
1784:..\src/command_processing.c ****         
1785:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][3])){
 10306              		.loc 1 1785 0
 10307 01ee 564A     		ldr	r2, .L487+4
 10308 01f0 D7F83431 		ldr	r3, [r7, #308]
 10309 01f4 1344     		add	r3, r3, r2
 10310 01f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10311 01f8 1946     		mov	r1, r3
 10312 01fa 554A     		ldr	r2, .L487+12
 10313 01fc 0B46     		mov	r3, r1
 10314 01fe 9B00     		lsls	r3, r3, #2
 10315 0200 0B44     		add	r3, r3, r1
 10316 0202 1344     		add	r3, r3, r2
 10317 0204 03F59273 		add	r3, r3, #292
 10318 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10319 020a 002B     		cmp	r3, #0
 10320 020c 4FD0     		beq	.L484
1786:..\src/command_processing.c ****             sprintf(str, "\tQuat: %.3f\t%.3f\t%.3f\t%.3f\r\n", (float) g_imu[i].quat_value[0], (flo
 10321              		.loc 1 1786 0
 10322 020e 5149     		ldr	r1, .L487+16
 10323 0210 D7F83421 		ldr	r2, [r7, #308]
 10324 0214 1346     		mov	r3, r2
 10325 0216 9B00     		lsls	r3, r3, #2
 10326 0218 1344     		add	r3, r3, r2
 10327 021a DB00     		lsls	r3, r3, #3
 10328 021c 0B44     		add	r3, r3, r1
 10329 021e 1433     		adds	r3, r3, #20
 10330 0220 1B68     		ldr	r3, [r3]	@ float
 10331 0222 1846     		mov	r0, r3
 10332 0224 FFF7FEFF 		bl	__aeabi_f2d
 10333 0228 8246     		mov	r10, r0
 10334 022a 8B46     		mov	fp, r1
 10335 022c 4949     		ldr	r1, .L487+16
 10336 022e D7F83421 		ldr	r2, [r7, #308]
 10337 0232 1346     		mov	r3, r2
 10338 0234 9B00     		lsls	r3, r3, #2
 10339 0236 1344     		add	r3, r3, r2
 10340 0238 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 242


 10341 023a 0B44     		add	r3, r3, r1
 10342 023c 1833     		adds	r3, r3, #24
 10343 023e 1B68     		ldr	r3, [r3]	@ float
 10344 0240 1846     		mov	r0, r3
 10345 0242 FFF7FEFF 		bl	__aeabi_f2d
 10346 0246 0446     		mov	r4, r0
 10347 0248 0D46     		mov	r5, r1
 10348 024a 4249     		ldr	r1, .L487+16
 10349 024c D7F83421 		ldr	r2, [r7, #308]
 10350 0250 1346     		mov	r3, r2
 10351 0252 9B00     		lsls	r3, r3, #2
 10352 0254 1344     		add	r3, r3, r2
 10353 0256 DB00     		lsls	r3, r3, #3
 10354 0258 0B44     		add	r3, r3, r1
 10355 025a 1C33     		adds	r3, r3, #28
 10356 025c 1B68     		ldr	r3, [r3]	@ float
 10357 025e 1846     		mov	r0, r3
 10358 0260 FFF7FEFF 		bl	__aeabi_f2d
 10359 0264 8046     		mov	r8, r0
 10360 0266 8946     		mov	r9, r1
 10361 0268 3A49     		ldr	r1, .L487+16
 10362 026a D7F83421 		ldr	r2, [r7, #308]
 10363 026e 1346     		mov	r3, r2
 10364 0270 9B00     		lsls	r3, r3, #2
 10365 0272 1344     		add	r3, r3, r2
 10366 0274 DB00     		lsls	r3, r3, #3
 10367 0276 0B44     		add	r3, r3, r1
 10368 0278 2033     		adds	r3, r3, #32
 10369 027a 1B68     		ldr	r3, [r3]	@ float
 10370 027c 1846     		mov	r0, r3
 10371 027e FFF7FEFF 		bl	__aeabi_f2d
 10372 0282 0246     		mov	r2, r0
 10373 0284 0B46     		mov	r3, r1
 10374 0286 07F10800 		add	r0, r7, #8
 10375 028a CDE90423 		strd	r2, [sp, #16]
 10376 028e CDE90289 		strd	r8, [sp, #8]
 10377 0292 CDE90045 		strd	r4, [sp]
 10378 0296 5246     		mov	r2, r10
 10379 0298 5B46     		mov	r3, fp
 10380 029a 3249     		ldr	r1, .L487+32
 10381 029c FFF7FEFF 		bl	sprintf
1787:..\src/command_processing.c ****             strcat(info_string, str);
 10382              		.loc 1 1787 0
 10383 02a0 07F10802 		add	r2, r7, #8
 10384 02a4 3B1D     		adds	r3, r7, #4
 10385 02a6 1146     		mov	r1, r2
 10386 02a8 1868     		ldr	r0, [r3]
 10387 02aa FFF7FEFF 		bl	strcat
 10388              	.L484:
1788:..\src/command_processing.c ****         }
1789:..\src/command_processing.c ****         
1790:..\src/command_processing.c ****         if ((c_mem.IMU_conf[IMU_connected[i]][4])){
 10389              		.loc 1 1790 0
 10390 02ae 264A     		ldr	r2, .L487+4
 10391 02b0 D7F83431 		ldr	r3, [r7, #308]
 10392 02b4 1344     		add	r3, r3, r2
 10393 02b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 243


 10394 02b8 1946     		mov	r1, r3
 10395 02ba 254A     		ldr	r2, .L487+12
 10396 02bc 0B46     		mov	r3, r1
 10397 02be 9B00     		lsls	r3, r3, #2
 10398 02c0 0B44     		add	r3, r3, r1
 10399 02c2 1344     		add	r3, r3, r2
 10400 02c4 03F22513 		addw	r3, r3, #293
 10401 02c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10402 02ca 002B     		cmp	r3, #0
 10403 02cc 18D0     		beq	.L485
1791:..\src/command_processing.c ****             sprintf(str, "\tTemperature: %d\r\n", (int16) g_imu[i].temp_value);
 10404              		.loc 1 1791 0
 10405 02ce 2149     		ldr	r1, .L487+16
 10406 02d0 D7F83421 		ldr	r2, [r7, #308]
 10407 02d4 1346     		mov	r3, r2
 10408 02d6 9B00     		lsls	r3, r3, #2
 10409 02d8 1344     		add	r3, r3, r2
 10410 02da DB00     		lsls	r3, r3, #3
 10411 02dc 0B44     		add	r3, r3, r1
 10412 02de 2433     		adds	r3, r3, #36
 10413 02e0 B3F90030 		ldrsh	r3, [r3]
 10414 02e4 1A46     		mov	r2, r3
 10415 02e6 07F10803 		add	r3, r7, #8
 10416 02ea 1F49     		ldr	r1, .L487+36
 10417 02ec 1846     		mov	r0, r3
 10418 02ee FFF7FEFF 		bl	sprintf
1792:..\src/command_processing.c ****             strcat(info_string, str);
 10419              		.loc 1 1792 0
 10420 02f2 07F10802 		add	r2, r7, #8
 10421 02f6 3B1D     		adds	r3, r7, #4
 10422 02f8 1146     		mov	r1, r2
 10423 02fa 1868     		ldr	r0, [r3]
 10424 02fc FFF7FEFF 		bl	strcat
 10425              	.L485:
1766:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 10426              		.loc 1 1766 0 discriminator 2
 10427 0300 D7F83431 		ldr	r3, [r7, #308]
 10428 0304 0133     		adds	r3, r3, #1
 10429 0306 C7F83431 		str	r3, [r7, #308]
 10430              	.L480:
1766:..\src/command_processing.c ****         sprintf(str, "Imu %d \r\n\tID: %d\r\n", i, (int) IMU_connected[i]);
 10431              		.loc 1 1766 0 is_stmt 0 discriminator 1
 10432 030a 184B     		ldr	r3, .L487+40
 10433 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10434 030e 1A46     		mov	r2, r3
 10435 0310 D7F83431 		ldr	r3, [r7, #308]
 10436 0314 9A42     		cmp	r2, r3
 10437 0316 3FF791AE 		bgt	.L486
1793:..\src/command_processing.c ****         }
1794:..\src/command_processing.c ****     }
1795:..\src/command_processing.c ****     strcat(info_string, "\r\n");
 10438              		.loc 1 1795 0 is_stmt 1
 10439 031a 3B1D     		adds	r3, r7, #4
 10440 031c 1868     		ldr	r0, [r3]
 10441 031e FFF7FEFF 		bl	strlen
 10442 0322 0346     		mov	r3, r0
 10443 0324 1A46     		mov	r2, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 244


 10444 0326 3B1D     		adds	r3, r7, #4
 10445 0328 1B68     		ldr	r3, [r3]
 10446 032a 1344     		add	r3, r3, r2
 10447 032c 104A     		ldr	r2, .L487+44
 10448 032e 1188     		ldrh	r1, [r2]	@ unaligned
 10449 0330 9278     		ldrb	r2, [r2, #2]
 10450 0332 1980     		strh	r1, [r3]	@ unaligned
 10451 0334 9A70     		strb	r2, [r3, #2]
1796:..\src/command_processing.c **** }
 10452              		.loc 1 1796 0
 10453 0336 00BF     		nop
 10454 0338 07F59C77 		add	r7, r7, #312
 10455              		.cfi_def_cfa_offset 32
 10456 033c BD46     		mov	sp, r7
 10457              		.cfi_def_cfa_register 13
 10458              		@ sp needed
 10459 033e BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 10460              	.L488:
 10461 0342 00BF     		.align	2
 10462              	.L487:
 10463 0344 780F0000 		.word	.LC165
 10464 0348 00000000 		.word	IMU_connected
 10465 034c 780D0000 		.word	.LC146
 10466 0350 00000000 		.word	c_mem
 10467 0354 00000000 		.word	g_imu
 10468 0358 880F0000 		.word	.LC166
 10469 035c 9C0F0000 		.word	.LC167
 10470 0360 B00F0000 		.word	.LC168
 10471 0364 C40F0000 		.word	.LC169
 10472 0368 E40F0000 		.word	.LC170
 10473 036c 00000000 		.word	N_IMU_Connected
 10474 0370 60070000 		.word	.LC75
 10475              		.cfi_endproc
 10476              	.LFE73:
 10477              		.size	IMU_reading_info, .-IMU_reading_info
 10478              		.section	.text.commWrite_old_id,"ax",%progbits
 10479              		.align	2
 10480              		.global	commWrite_old_id
 10481              		.thumb
 10482              		.thumb_func
 10483              		.type	commWrite_old_id, %function
 10484              	commWrite_old_id:
 10485              	.LFB74:
1797:..\src/command_processing.c **** 
1798:..\src/command_processing.c **** //==============================================================================
1799:..\src/command_processing.c **** //                                                     WRITE FUNCTIONS FOR RS485
1800:..\src/command_processing.c **** //==============================================================================
1801:..\src/command_processing.c **** 
1802:..\src/command_processing.c **** void commWrite_old_id(uint8 *packet_data, uint16 packet_lenght, uint8 old_id)
1803:..\src/command_processing.c **** {
 10486              		.loc 1 1803 0
 10487              		.cfi_startproc
 10488              		@ args = 0, pretend = 0, frame = 16
 10489              		@ frame_needed = 1, uses_anonymous_args = 0
 10490 0000 80B5     		push	{r7, lr}
 10491              		.cfi_def_cfa_offset 8
 10492              		.cfi_offset 7, -8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 245


 10493              		.cfi_offset 14, -4
 10494 0002 84B0     		sub	sp, sp, #16
 10495              		.cfi_def_cfa_offset 24
 10496 0004 00AF     		add	r7, sp, #0
 10497              		.cfi_def_cfa_register 7
 10498 0006 7860     		str	r0, [r7, #4]
 10499 0008 0B46     		mov	r3, r1
 10500 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 10501 000c 1346     		mov	r3, r2
 10502 000e 7B70     		strb	r3, [r7, #1]
1804:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1805:..\src/command_processing.c **** 
1806:..\src/command_processing.c ****     // frame - start
1807:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10503              		.loc 1 1807 0
 10504 0010 3A20     		movs	r0, #58
 10505 0012 FFF7FEFF 		bl	UART_RS485_PutChar
1808:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10506              		.loc 1 1808 0
 10507 0016 3A20     		movs	r0, #58
 10508 0018 FFF7FEFF 		bl	UART_RS485_PutChar
1809:..\src/command_processing.c ****     // frame - ID
1810:..\src/command_processing.c ****     //if(old_id)
1811:..\src/command_processing.c ****         UART_RS485_PutChar(old_id);
 10509              		.loc 1 1811 0
 10510 001c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 10511 001e 1846     		mov	r0, r3
 10512 0020 FFF7FEFF 		bl	UART_RS485_PutChar
1812:..\src/command_processing.c ****     //else
1813:..\src/command_processing.c ****         //UART_RS485_PutChar(g_mem.id);
1814:..\src/command_processing.c ****         
1815:..\src/command_processing.c ****     // frame - length
1816:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 10513              		.loc 1 1816 0
 10514 0024 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10515 0026 DBB2     		uxtb	r3, r3
 10516 0028 1846     		mov	r0, r3
 10517 002a FFF7FEFF 		bl	UART_RS485_PutChar
1817:..\src/command_processing.c ****     // frame - packet data
1818:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 10518              		.loc 1 1818 0
 10519 002e 0023     		movs	r3, #0
 10520 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 10521 0032 09E0     		b	.L490
 10522              	.L491:
1819:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10523              		.loc 1 1819 0 discriminator 3
 10524 0034 FB89     		ldrh	r3, [r7, #14]
 10525 0036 7A68     		ldr	r2, [r7, #4]
 10526 0038 1344     		add	r3, r3, r2
 10527 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10528 003c 1846     		mov	r0, r3
 10529 003e FFF7FEFF 		bl	UART_RS485_PutChar
1818:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10530              		.loc 1 1818 0 discriminator 3
 10531 0042 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10532 0044 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 246


 10533 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 10534              	.L490:
1818:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10535              		.loc 1 1818 0 is_stmt 0 discriminator 1
 10536 0048 FA89     		ldrh	r2, [r7, #14]
 10537 004a 7B88     		ldrh	r3, [r7, #2]
 10538 004c 9A42     		cmp	r2, r3
 10539 004e F1D3     		bcc	.L491
1820:..\src/command_processing.c ****     }
1821:..\src/command_processing.c **** 
1822:..\src/command_processing.c ****     index = 0;
 10540              		.loc 1 1822 0 is_stmt 1
 10541 0050 0023     		movs	r3, #0
 10542 0052 FB81     		strh	r3, [r7, #14]	@ movhi
1823:..\src/command_processing.c **** 
1824:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 10543              		.loc 1 1824 0
 10544 0054 00BF     		nop
 10545              	.L493:
 10546              		.loc 1 1824 0 is_stmt 0 discriminator 2
 10547 0056 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 10548 005a 0346     		mov	r3, r0
 10549 005c 03F00103 		and	r3, r3, #1
 10550 0060 002B     		cmp	r3, #0
 10551 0062 05D1     		bne	.L492
 10552              		.loc 1 1824 0 discriminator 1
 10553 0064 FB89     		ldrh	r3, [r7, #14]
 10554 0066 5A1C     		adds	r2, r3, #1
 10555 0068 FA81     		strh	r2, [r7, #14]	@ movhi
 10556 006a B3F57A7F 		cmp	r3, #1000
 10557 006e F2D9     		bls	.L493
 10558              	.L492:
1825:..\src/command_processing.c **** 
1826:..\src/command_processing.c ****     RS485_CTS_Write(1);
 10559              		.loc 1 1826 0 is_stmt 1
 10560 0070 0120     		movs	r0, #1
 10561 0072 FFF7FEFF 		bl	RS485_CTS_Write
1827:..\src/command_processing.c ****     RS485_CTS_Write(0);
 10562              		.loc 1 1827 0
 10563 0076 0020     		movs	r0, #0
 10564 0078 FFF7FEFF 		bl	RS485_CTS_Write
1828:..\src/command_processing.c **** }
 10565              		.loc 1 1828 0
 10566 007c 00BF     		nop
 10567 007e 1037     		adds	r7, r7, #16
 10568              		.cfi_def_cfa_offset 8
 10569 0080 BD46     		mov	sp, r7
 10570              		.cfi_def_cfa_register 13
 10571              		@ sp needed
 10572 0082 80BD     		pop	{r7, pc}
 10573              		.cfi_endproc
 10574              	.LFE74:
 10575              		.size	commWrite_old_id, .-commWrite_old_id
 10576              		.section	.text.commWrite,"ax",%progbits
 10577              		.align	2
 10578              		.global	commWrite
 10579              		.thumb
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 247


 10580              		.thumb_func
 10581              		.type	commWrite, %function
 10582              	commWrite:
 10583              	.LFB75:
1829:..\src/command_processing.c **** 
1830:..\src/command_processing.c **** void commWrite(uint8 *packet_data, uint16 packet_lenght)
1831:..\src/command_processing.c **** {
 10584              		.loc 1 1831 0
 10585              		.cfi_startproc
 10586              		@ args = 0, pretend = 0, frame = 16
 10587              		@ frame_needed = 1, uses_anonymous_args = 0
 10588 0000 80B5     		push	{r7, lr}
 10589              		.cfi_def_cfa_offset 8
 10590              		.cfi_offset 7, -8
 10591              		.cfi_offset 14, -4
 10592 0002 84B0     		sub	sp, sp, #16
 10593              		.cfi_def_cfa_offset 24
 10594 0004 00AF     		add	r7, sp, #0
 10595              		.cfi_def_cfa_register 7
 10596 0006 7860     		str	r0, [r7, #4]
 10597 0008 0B46     		mov	r3, r1
 10598 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1832:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1833:..\src/command_processing.c **** 
1834:..\src/command_processing.c ****     // frame - start
1835:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10599              		.loc 1 1835 0
 10600 000c 3A20     		movs	r0, #58
 10601 000e FFF7FEFF 		bl	UART_RS485_PutChar
1836:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10602              		.loc 1 1836 0
 10603 0012 3A20     		movs	r0, #58
 10604 0014 FFF7FEFF 		bl	UART_RS485_PutChar
1837:..\src/command_processing.c ****     // frame - ID
1838:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id);
 10605              		.loc 1 1838 0
 10606 0018 1A4B     		ldr	r3, .L499
 10607 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10608 001c 1846     		mov	r0, r3
 10609 001e FFF7FEFF 		bl	UART_RS485_PutChar
1839:..\src/command_processing.c ****     // frame - length
1840:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
 10610              		.loc 1 1840 0
 10611 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10612 0024 DBB2     		uxtb	r3, r3
 10613 0026 1846     		mov	r0, r3
 10614 0028 FFF7FEFF 		bl	UART_RS485_PutChar
1841:..\src/command_processing.c ****     // frame - packet data
1842:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 10615              		.loc 1 1842 0
 10616 002c 0023     		movs	r3, #0
 10617 002e FB81     		strh	r3, [r7, #14]	@ movhi
 10618 0030 09E0     		b	.L495
 10619              	.L496:
1843:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10620              		.loc 1 1843 0 discriminator 3
 10621 0032 FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 248


 10622 0034 7A68     		ldr	r2, [r7, #4]
 10623 0036 1344     		add	r3, r3, r2
 10624 0038 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10625 003a 1846     		mov	r0, r3
 10626 003c FFF7FEFF 		bl	UART_RS485_PutChar
1842:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10627              		.loc 1 1842 0 discriminator 3
 10628 0040 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10629 0042 0133     		adds	r3, r3, #1
 10630 0044 FB81     		strh	r3, [r7, #14]	@ movhi
 10631              	.L495:
1842:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10632              		.loc 1 1842 0 is_stmt 0 discriminator 1
 10633 0046 FA89     		ldrh	r2, [r7, #14]
 10634 0048 7B88     		ldrh	r3, [r7, #2]
 10635 004a 9A42     		cmp	r2, r3
 10636 004c F1D3     		bcc	.L496
1844:..\src/command_processing.c ****     }
1845:..\src/command_processing.c **** 
1846:..\src/command_processing.c ****     index = 0;
 10637              		.loc 1 1846 0 is_stmt 1
 10638 004e 0023     		movs	r3, #0
 10639 0050 FB81     		strh	r3, [r7, #14]	@ movhi
1847:..\src/command_processing.c **** 
1848:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 10640              		.loc 1 1848 0
 10641 0052 00BF     		nop
 10642              	.L498:
 10643              		.loc 1 1848 0 is_stmt 0 discriminator 2
 10644 0054 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 10645 0058 0346     		mov	r3, r0
 10646 005a 03F00103 		and	r3, r3, #1
 10647 005e 002B     		cmp	r3, #0
 10648 0060 05D1     		bne	.L497
 10649              		.loc 1 1848 0 discriminator 1
 10650 0062 FB89     		ldrh	r3, [r7, #14]
 10651 0064 5A1C     		adds	r2, r3, #1
 10652 0066 FA81     		strh	r2, [r7, #14]	@ movhi
 10653 0068 B3F57A7F 		cmp	r3, #1000
 10654 006c F2D9     		bls	.L498
 10655              	.L497:
1849:..\src/command_processing.c **** 
1850:..\src/command_processing.c ****     RS485_CTS_Write(1);
 10656              		.loc 1 1850 0 is_stmt 1
 10657 006e 0120     		movs	r0, #1
 10658 0070 FFF7FEFF 		bl	RS485_CTS_Write
1851:..\src/command_processing.c ****     RS485_CTS_Write(0);
 10659              		.loc 1 1851 0
 10660 0074 0020     		movs	r0, #0
 10661 0076 FFF7FEFF 		bl	RS485_CTS_Write
1852:..\src/command_processing.c **** }
 10662              		.loc 1 1852 0
 10663 007a 00BF     		nop
 10664 007c 1037     		adds	r7, r7, #16
 10665              		.cfi_def_cfa_offset 8
 10666 007e BD46     		mov	sp, r7
 10667              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 249


 10668              		@ sp needed
 10669 0080 80BD     		pop	{r7, pc}
 10670              	.L500:
 10671 0082 00BF     		.align	2
 10672              	.L499:
 10673 0084 00000000 		.word	g_mem
 10674              		.cfi_endproc
 10675              	.LFE75:
 10676              		.size	commWrite, .-commWrite
 10677              		.section	.text.commWrite_to_cuff,"ax",%progbits
 10678              		.align	2
 10679              		.global	commWrite_to_cuff
 10680              		.thumb
 10681              		.thumb_func
 10682              		.type	commWrite_to_cuff, %function
 10683              	commWrite_to_cuff:
 10684              	.LFB76:
1853:..\src/command_processing.c **** 
1854:..\src/command_processing.c **** void commWrite_to_cuff(uint8 *packet_data, uint16 packet_lenght)
1855:..\src/command_processing.c **** {
 10685              		.loc 1 1855 0
 10686              		.cfi_startproc
 10687              		@ args = 0, pretend = 0, frame = 16
 10688              		@ frame_needed = 1, uses_anonymous_args = 0
 10689 0000 80B5     		push	{r7, lr}
 10690              		.cfi_def_cfa_offset 8
 10691              		.cfi_offset 7, -8
 10692              		.cfi_offset 14, -4
 10693 0002 84B0     		sub	sp, sp, #16
 10694              		.cfi_def_cfa_offset 24
 10695 0004 00AF     		add	r7, sp, #0
 10696              		.cfi_def_cfa_register 7
 10697 0006 7860     		str	r0, [r7, #4]
 10698 0008 0B46     		mov	r3, r1
 10699 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1856:..\src/command_processing.c ****     uint16 CYDATA index;    // iterator
1857:..\src/command_processing.c **** 
1858:..\src/command_processing.c ****     // frame - start
1859:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10700              		.loc 1 1859 0
 10701 000c 3A20     		movs	r0, #58
 10702 000e FFF7FEFF 		bl	UART_RS485_PutChar
1860:..\src/command_processing.c ****     UART_RS485_PutChar(':');
 10703              		.loc 1 1860 0
 10704 0012 3A20     		movs	r0, #58
 10705 0014 FFF7FEFF 		bl	UART_RS485_PutChar
1861:..\src/command_processing.c ****     // frame - ID
1862:..\src/command_processing.c ****     UART_RS485_PutChar(g_mem.id - 1);
 10706              		.loc 1 1862 0
 10707 0018 184B     		ldr	r3, .L507
 10708 001a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 10709 001c 013B     		subs	r3, r3, #1
 10710 001e DBB2     		uxtb	r3, r3
 10711 0020 1846     		mov	r0, r3
 10712 0022 FFF7FEFF 		bl	UART_RS485_PutChar
1863:..\src/command_processing.c ****     // frame - length
1864:..\src/command_processing.c ****     UART_RS485_PutChar((uint8)packet_lenght);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 250


 10713              		.loc 1 1864 0
 10714 0026 7B88     		ldrh	r3, [r7, #2]	@ movhi
 10715 0028 DBB2     		uxtb	r3, r3
 10716 002a 1846     		mov	r0, r3
 10717 002c FFF7FEFF 		bl	UART_RS485_PutChar
1865:..\src/command_processing.c ****     // frame - packet data
1866:..\src/command_processing.c ****     for(index = 0; index < packet_lenght; ++index) {
 10718              		.loc 1 1866 0
 10719 0030 0023     		movs	r3, #0
 10720 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 10721 0034 09E0     		b	.L502
 10722              	.L503:
1867:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10723              		.loc 1 1867 0 discriminator 3
 10724 0036 FB89     		ldrh	r3, [r7, #14]
 10725 0038 7A68     		ldr	r2, [r7, #4]
 10726 003a 1344     		add	r3, r3, r2
 10727 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10728 003e 1846     		mov	r0, r3
 10729 0040 FFF7FEFF 		bl	UART_RS485_PutChar
1866:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10730              		.loc 1 1866 0 discriminator 3
 10731 0044 FB89     		ldrh	r3, [r7, #14]	@ movhi
 10732 0046 0133     		adds	r3, r3, #1
 10733 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 10734              	.L502:
1866:..\src/command_processing.c ****         UART_RS485_PutChar(packet_data[index]);
 10735              		.loc 1 1866 0 is_stmt 0 discriminator 1
 10736 004a FA89     		ldrh	r2, [r7, #14]
 10737 004c 7B88     		ldrh	r3, [r7, #2]
 10738 004e 9A42     		cmp	r2, r3
 10739 0050 F1D3     		bcc	.L503
1868:..\src/command_processing.c ****     }
1869:..\src/command_processing.c **** 
1870:..\src/command_processing.c ****     index = 0;
 10740              		.loc 1 1870 0 is_stmt 1
 10741 0052 0023     		movs	r3, #0
 10742 0054 FB81     		strh	r3, [r7, #14]	@ movhi
1871:..\src/command_processing.c **** 
1872:..\src/command_processing.c ****     while(!(UART_RS485_ReadTxStatus() & UART_RS485_TX_STS_COMPLETE) && index++ <= 1000){}
 10743              		.loc 1 1872 0
 10744 0056 00BF     		nop
 10745              	.L505:
 10746              		.loc 1 1872 0 is_stmt 0 discriminator 2
 10747 0058 FFF7FEFF 		bl	UART_RS485_ReadTxStatus
 10748 005c 0346     		mov	r3, r0
 10749 005e 03F00103 		and	r3, r3, #1
 10750 0062 002B     		cmp	r3, #0
 10751 0064 05D1     		bne	.L506
 10752              		.loc 1 1872 0 discriminator 1
 10753 0066 FB89     		ldrh	r3, [r7, #14]
 10754 0068 5A1C     		adds	r2, r3, #1
 10755 006a FA81     		strh	r2, [r7, #14]	@ movhi
 10756 006c B3F57A7F 		cmp	r3, #1000
 10757 0070 F2D9     		bls	.L505
 10758              	.L506:
1873:..\src/command_processing.c **** }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 251


 10759              		.loc 1 1873 0 is_stmt 1
 10760 0072 00BF     		nop
 10761 0074 1037     		adds	r7, r7, #16
 10762              		.cfi_def_cfa_offset 8
 10763 0076 BD46     		mov	sp, r7
 10764              		.cfi_def_cfa_register 13
 10765              		@ sp needed
 10766 0078 80BD     		pop	{r7, pc}
 10767              	.L508:
 10768 007a 00BF     		.align	2
 10769              	.L507:
 10770 007c 00000000 		.word	g_mem
 10771              		.cfi_endproc
 10772              	.LFE76:
 10773              		.size	commWrite_to_cuff, .-commWrite_to_cuff
 10774              		.section	.text.LCRChecksum,"ax",%progbits
 10775              		.align	2
 10776              		.global	LCRChecksum
 10777              		.thumb
 10778              		.thumb_func
 10779              		.type	LCRChecksum, %function
 10780              	LCRChecksum:
 10781              	.LFB77:
1874:..\src/command_processing.c **** 
1875:..\src/command_processing.c **** //==============================================================================
1876:..\src/command_processing.c **** //                                                             CHECKSUM FUNCTION
1877:..\src/command_processing.c **** //==============================================================================
1878:..\src/command_processing.c **** 
1879:..\src/command_processing.c **** // Performs a XOR byte by byte on the entire vector
1880:..\src/command_processing.c **** 
1881:..\src/command_processing.c **** uint8 LCRChecksum(uint8 *data_array, uint8 data_length) {
 10782              		.loc 1 1881 0
 10783              		.cfi_startproc
 10784              		@ args = 0, pretend = 0, frame = 16
 10785              		@ frame_needed = 1, uses_anonymous_args = 0
 10786              		@ link register save eliminated.
 10787 0000 80B4     		push	{r7}
 10788              		.cfi_def_cfa_offset 4
 10789              		.cfi_offset 7, -4
 10790 0002 85B0     		sub	sp, sp, #20
 10791              		.cfi_def_cfa_offset 24
 10792 0004 00AF     		add	r7, sp, #0
 10793              		.cfi_def_cfa_register 7
 10794 0006 7860     		str	r0, [r7, #4]
 10795 0008 0B46     		mov	r3, r1
 10796 000a FB70     		strb	r3, [r7, #3]
1882:..\src/command_processing.c ****     
1883:..\src/command_processing.c ****     uint8 CYDATA i;
1884:..\src/command_processing.c ****     uint8 CYDATA checksum = 0x00;
 10797              		.loc 1 1884 0
 10798 000c 0023     		movs	r3, #0
 10799 000e BB73     		strb	r3, [r7, #14]
1885:..\src/command_processing.c ****     
1886:..\src/command_processing.c ****     for(i = 0; i < data_length; ++i)
 10800              		.loc 1 1886 0
 10801 0010 0023     		movs	r3, #0
 10802 0012 FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 252


 10803 0014 09E0     		b	.L510
 10804              	.L511:
1887:..\src/command_processing.c ****        checksum ^= data_array[i];
 10805              		.loc 1 1887 0 discriminator 3
 10806 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 10807 0018 7A68     		ldr	r2, [r7, #4]
 10808 001a 1344     		add	r3, r3, r2
 10809 001c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10810 001e BB7B     		ldrb	r3, [r7, #14]
 10811 0020 5340     		eors	r3, r3, r2
 10812 0022 BB73     		strb	r3, [r7, #14]
1886:..\src/command_processing.c ****        checksum ^= data_array[i];
 10813              		.loc 1 1886 0 discriminator 3
 10814 0024 FB7B     		ldrb	r3, [r7, #15]
 10815 0026 0133     		adds	r3, r3, #1
 10816 0028 FB73     		strb	r3, [r7, #15]
 10817              	.L510:
1886:..\src/command_processing.c ****        checksum ^= data_array[i];
 10818              		.loc 1 1886 0 is_stmt 0 discriminator 1
 10819 002a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 10820 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 10821 002e 9A42     		cmp	r2, r3
 10822 0030 F1D3     		bcc	.L511
1888:..\src/command_processing.c ****   
1889:..\src/command_processing.c ****     return checksum;
 10823              		.loc 1 1889 0 is_stmt 1
 10824 0032 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
1890:..\src/command_processing.c **** }
 10825              		.loc 1 1890 0
 10826 0034 1846     		mov	r0, r3
 10827 0036 1437     		adds	r7, r7, #20
 10828              		.cfi_def_cfa_offset 4
 10829 0038 BD46     		mov	sp, r7
 10830              		.cfi_def_cfa_register 13
 10831              		@ sp needed
 10832 003a 80BC     		pop	{r7}
 10833              		.cfi_restore 7
 10834              		.cfi_def_cfa_offset 0
 10835 003c 7047     		bx	lr
 10836              		.cfi_endproc
 10837              	.LFE77:
 10838              		.size	LCRChecksum, .-LCRChecksum
 10839 003e 00BF     		.section	.text.sendAcknowledgment,"ax",%progbits
 10840              		.align	2
 10841              		.global	sendAcknowledgment
 10842              		.thumb
 10843              		.thumb_func
 10844              		.type	sendAcknowledgment, %function
 10845              	sendAcknowledgment:
 10846              	.LFB78:
1891:..\src/command_processing.c **** 
1892:..\src/command_processing.c **** 
1893:..\src/command_processing.c **** //==============================================================================
1894:..\src/command_processing.c **** //                                                       ACKNOWLEDGMENT FUNCTION
1895:..\src/command_processing.c **** //==============================================================================
1896:..\src/command_processing.c **** 
1897:..\src/command_processing.c **** void sendAcknowledgment(uint8 value) {
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 253


 10847              		.loc 1 1897 0
 10848              		.cfi_startproc
 10849              		@ args = 0, pretend = 0, frame = 16
 10850              		@ frame_needed = 1, uses_anonymous_args = 0
 10851 0000 80B5     		push	{r7, lr}
 10852              		.cfi_def_cfa_offset 8
 10853              		.cfi_offset 7, -8
 10854              		.cfi_offset 14, -4
 10855 0002 84B0     		sub	sp, sp, #16
 10856              		.cfi_def_cfa_offset 24
 10857 0004 00AF     		add	r7, sp, #0
 10858              		.cfi_def_cfa_register 7
 10859 0006 0346     		mov	r3, r0
 10860 0008 FB71     		strb	r3, [r7, #7]
1898:..\src/command_processing.c ****     int packet_lenght = 2;
 10861              		.loc 1 1898 0
 10862 000a 0223     		movs	r3, #2
 10863 000c FB60     		str	r3, [r7, #12]
1899:..\src/command_processing.c ****     uint8 packet_data[2];
1900:..\src/command_processing.c **** 
1901:..\src/command_processing.c ****     packet_data[0] = value;
 10864              		.loc 1 1901 0
 10865 000e FB79     		ldrb	r3, [r7, #7]
 10866 0010 3B72     		strb	r3, [r7, #8]
1902:..\src/command_processing.c ****     packet_data[1] = value;
 10867              		.loc 1 1902 0
 10868 0012 FB79     		ldrb	r3, [r7, #7]
 10869 0014 7B72     		strb	r3, [r7, #9]
1903:..\src/command_processing.c **** 
1904:..\src/command_processing.c ****     commWrite(packet_data, packet_lenght);
 10870              		.loc 1 1904 0
 10871 0016 FB68     		ldr	r3, [r7, #12]
 10872 0018 9AB2     		uxth	r2, r3
 10873 001a 07F10803 		add	r3, r7, #8
 10874 001e 1146     		mov	r1, r2
 10875 0020 1846     		mov	r0, r3
 10876 0022 FFF7FEFF 		bl	commWrite
1905:..\src/command_processing.c **** }
 10877              		.loc 1 1905 0
 10878 0026 00BF     		nop
 10879 0028 1037     		adds	r7, r7, #16
 10880              		.cfi_def_cfa_offset 8
 10881 002a BD46     		mov	sp, r7
 10882              		.cfi_def_cfa_register 13
 10883              		@ sp needed
 10884 002c 80BD     		pop	{r7, pc}
 10885              		.cfi_endproc
 10886              	.LFE78:
 10887              		.size	sendAcknowledgment, .-sendAcknowledgment
 10888 002e 00BF     		.section	.text.memStore,"ax",%progbits
 10889              		.align	2
 10890              		.global	memStore
 10891              		.thumb
 10892              		.thumb_func
 10893              		.type	memStore, %function
 10894              	memStore:
 10895              	.LFB79:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 254


1906:..\src/command_processing.c **** 
1907:..\src/command_processing.c **** //==============================================================================
1908:..\src/command_processing.c **** //                                                                  STORE MEMORY
1909:..\src/command_processing.c **** //==============================================================================
1910:..\src/command_processing.c **** 
1911:..\src/command_processing.c **** 
1912:..\src/command_processing.c **** uint8 memStore(int displacement)
1913:..\src/command_processing.c **** {
 10896              		.loc 1 1913 0
 10897              		.cfi_startproc
 10898              		@ args = 0, pretend = 0, frame = 24
 10899              		@ frame_needed = 1, uses_anonymous_args = 0
 10900 0000 80B5     		push	{r7, lr}
 10901              		.cfi_def_cfa_offset 8
 10902              		.cfi_offset 7, -8
 10903              		.cfi_offset 14, -4
 10904 0002 86B0     		sub	sp, sp, #24
 10905              		.cfi_def_cfa_offset 32
 10906 0004 00AF     		add	r7, sp, #0
 10907              		.cfi_def_cfa_register 7
 10908 0006 7860     		str	r0, [r7, #4]
1914:..\src/command_processing.c ****     int i;  // iterator
1915:..\src/command_processing.c ****     uint8 writeStatus;
1916:..\src/command_processing.c ****     int pages;
1917:..\src/command_processing.c ****     uint8 ret_val = 1;
 10909              		.loc 1 1917 0
 10910 0008 0123     		movs	r3, #1
 10911 000a FB74     		strb	r3, [r7, #19]
1918:..\src/command_processing.c **** 
1919:..\src/command_processing.c ****     // Disable Interrupt
1920:..\src/command_processing.c ****     ISR_RS485_RX_Disable();
 10912              		.loc 1 1920 0
 10913 000c FFF7FEFF 		bl	ISR_RS485_RX_Disable
1921:..\src/command_processing.c **** 
1922:..\src/command_processing.c ****     // Stop motor
1923:..\src/command_processing.c ****     PWM_MOTORS_WriteCompare(0);
 10914              		.loc 1 1923 0
 10915 0010 0020     		movs	r0, #0
 10916 0012 FFF7FEFF 		bl	PWM_MOTORS_WriteCompare
1924:..\src/command_processing.c **** 
1925:..\src/command_processing.c ****     // Retrieve temperature for better writing performance
1926:..\src/command_processing.c ****     CySetTemp();
 10917              		.loc 1 1926 0
 10918 0016 FFF7FEFF 		bl	CySetTemp
1927:..\src/command_processing.c **** 
1928:..\src/command_processing.c ****     memcpy( &c_mem, &g_mem, sizeof(g_mem) );
 10919              		.loc 1 1928 0
 10920 001a 1D4A     		ldr	r2, .L520
 10921 001c 1D4B     		ldr	r3, .L520+4
 10922 001e 1046     		mov	r0, r2
 10923 0020 1946     		mov	r1, r3
 10924 0022 4FF49873 		mov	r3, #304
 10925 0026 1A46     		mov	r2, r3
 10926 0028 FFF7FEFF 		bl	memcpy
1929:..\src/command_processing.c **** 
1930:..\src/command_processing.c ****     pages = sizeof(g_mem) / 16 + (sizeof(g_mem) % 16 > 0);
 10927              		.loc 1 1930 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 255


 10928 002c 1323     		movs	r3, #19
 10929 002e FB60     		str	r3, [r7, #12]
1931:..\src/command_processing.c **** 
1932:..\src/command_processing.c ****     for(i = 0; i < pages; ++i) {
 10930              		.loc 1 1932 0
 10931 0030 0023     		movs	r3, #0
 10932 0032 7B61     		str	r3, [r7, #20]
 10933 0034 18E0     		b	.L515
 10934              	.L518:
1933:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10935              		.loc 1 1933 0
 10936 0036 7B69     		ldr	r3, [r7, #20]
 10937 0038 1B01     		lsls	r3, r3, #4
 10938 003a 1A46     		mov	r2, r3
 10939 003c 154B     		ldr	r3, .L520+4
 10940 003e D018     		adds	r0, r2, r3
 10941 0040 7B69     		ldr	r3, [r7, #20]
 10942 0042 DAB2     		uxtb	r2, r3
 10943 0044 7B68     		ldr	r3, [r7, #4]
 10944 0046 DBB2     		uxtb	r3, r3
 10945 0048 1344     		add	r3, r3, r2
 10946 004a DBB2     		uxtb	r3, r3
 10947 004c 1946     		mov	r1, r3
 10948 004e FFF7FEFF 		bl	EEPROM_Write
 10949 0052 0346     		mov	r3, r0
 10950 0054 FB72     		strb	r3, [r7, #11]
1934:..\src/command_processing.c ****         if(writeStatus != CYRET_SUCCESS) {
 10951              		.loc 1 1934 0
 10952 0056 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 10953 0058 002B     		cmp	r3, #0
 10954 005a 02D0     		beq	.L516
1935:..\src/command_processing.c ****             ret_val = 0;
 10955              		.loc 1 1935 0
 10956 005c 0023     		movs	r3, #0
 10957 005e FB74     		strb	r3, [r7, #19]
1936:..\src/command_processing.c ****             break;
 10958              		.loc 1 1936 0
 10959 0060 06E0     		b	.L517
 10960              	.L516:
1932:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10961              		.loc 1 1932 0 discriminator 2
 10962 0062 7B69     		ldr	r3, [r7, #20]
 10963 0064 0133     		adds	r3, r3, #1
 10964 0066 7B61     		str	r3, [r7, #20]
 10965              	.L515:
1932:..\src/command_processing.c ****         writeStatus = EEPROM_Write(&g_mem.flag + 16 * i, i + displacement);
 10966              		.loc 1 1932 0 is_stmt 0 discriminator 1
 10967 0068 7A69     		ldr	r2, [r7, #20]
 10968 006a FB68     		ldr	r3, [r7, #12]
 10969 006c 9A42     		cmp	r2, r3
 10970 006e E2DB     		blt	.L518
 10971              	.L517:
1937:..\src/command_processing.c ****         }
1938:..\src/command_processing.c ****     }
1939:..\src/command_processing.c **** 
1940:..\src/command_processing.c ****     memcpy( &g_mem, &c_mem, sizeof(g_mem) );
 10972              		.loc 1 1940 0 is_stmt 1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 256


 10973 0070 084A     		ldr	r2, .L520+4
 10974 0072 074B     		ldr	r3, .L520
 10975 0074 1046     		mov	r0, r2
 10976 0076 1946     		mov	r1, r3
 10977 0078 4FF49873 		mov	r3, #304
 10978 007c 1A46     		mov	r2, r3
 10979 007e FFF7FEFF 		bl	memcpy
1941:..\src/command_processing.c **** 
1942:..\src/command_processing.c ****     // Re-Enable Interrupt
1943:..\src/command_processing.c ****     ISR_RS485_RX_Enable();
 10980              		.loc 1 1943 0
 10981 0082 FFF7FEFF 		bl	ISR_RS485_RX_Enable
1944:..\src/command_processing.c **** 
1945:..\src/command_processing.c ****     return ret_val;
 10982              		.loc 1 1945 0
 10983 0086 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
1946:..\src/command_processing.c **** }
 10984              		.loc 1 1946 0
 10985 0088 1846     		mov	r0, r3
 10986 008a 1837     		adds	r7, r7, #24
 10987              		.cfi_def_cfa_offset 8
 10988 008c BD46     		mov	sp, r7
 10989              		.cfi_def_cfa_register 13
 10990              		@ sp needed
 10991 008e 80BD     		pop	{r7, pc}
 10992              	.L521:
 10993              		.align	2
 10994              	.L520:
 10995 0090 00000000 		.word	c_mem
 10996 0094 00000000 		.word	g_mem
 10997              		.cfi_endproc
 10998              	.LFE79:
 10999              		.size	memStore, .-memStore
 11000              		.section	.text.memRecall,"ax",%progbits
 11001              		.align	2
 11002              		.global	memRecall
 11003              		.thumb
 11004              		.thumb_func
 11005              		.type	memRecall, %function
 11006              	memRecall:
 11007              	.LFB80:
1947:..\src/command_processing.c **** 
1948:..\src/command_processing.c **** 
1949:..\src/command_processing.c **** //==============================================================================
1950:..\src/command_processing.c **** //                                                                 RECALL MEMORY
1951:..\src/command_processing.c **** //==============================================================================
1952:..\src/command_processing.c **** 
1953:..\src/command_processing.c **** 
1954:..\src/command_processing.c **** void memRecall(void)
1955:..\src/command_processing.c **** {
 11008              		.loc 1 1955 0
 11009              		.cfi_startproc
 11010              		@ args = 0, pretend = 0, frame = 8
 11011              		@ frame_needed = 1, uses_anonymous_args = 0
 11012 0000 80B5     		push	{r7, lr}
 11013              		.cfi_def_cfa_offset 8
 11014              		.cfi_offset 7, -8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 257


 11015              		.cfi_offset 14, -4
 11016 0002 82B0     		sub	sp, sp, #8
 11017              		.cfi_def_cfa_offset 16
 11018 0004 00AF     		add	r7, sp, #0
 11019              		.cfi_def_cfa_register 7
1956:..\src/command_processing.c ****     uint16 i;
1957:..\src/command_processing.c **** 
1958:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 11020              		.loc 1 1958 0
 11021 0006 0023     		movs	r3, #0
 11022 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 11023 000a 0CE0     		b	.L523
 11024              	.L524:
1959:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 11025              		.loc 1 1959 0 discriminator 3
 11026 000c FB88     		ldrh	r3, [r7, #6]
 11027 000e 124A     		ldr	r2, .L528
 11028 0010 1344     		add	r3, r3, r2
 11029 0012 124A     		ldr	r2, .L528+4
 11030 0014 1168     		ldr	r1, [r2]
 11031 0016 FA88     		ldrh	r2, [r7, #6]
 11032 0018 0A44     		add	r2, r2, r1
 11033 001a 1278     		ldrb	r2, [r2]
 11034 001c D2B2     		uxtb	r2, r2
 11035 001e 1A70     		strb	r2, [r3]
1958:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 11036              		.loc 1 1958 0 discriminator 3
 11037 0020 FB88     		ldrh	r3, [r7, #6]
 11038 0022 0133     		adds	r3, r3, #1
 11039 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 11040              	.L523:
1958:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i];
 11041              		.loc 1 1958 0 is_stmt 0 discriminator 1
 11042 0026 FB88     		ldrh	r3, [r7, #6]
 11043 0028 B3F5987F 		cmp	r3, #304
 11044 002c EED3     		bcc	.L524
1960:..\src/command_processing.c ****     }
1961:..\src/command_processing.c **** 
1962:..\src/command_processing.c ****     //check for initialization
1963:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 11045              		.loc 1 1963 0 is_stmt 1
 11046 002e 0A4B     		ldr	r3, .L528
 11047 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11048 0032 002B     		cmp	r3, #0
 11049 0034 02D1     		bne	.L525
1964:..\src/command_processing.c ****         memRestore();
 11050              		.loc 1 1964 0
 11051 0036 FFF7FEFF 		bl	memRestore
1965:..\src/command_processing.c ****     } else {
1966:..\src/command_processing.c ****         memcpy( &c_mem, &g_mem, sizeof(g_mem) );
1967:..\src/command_processing.c ****     }
1968:..\src/command_processing.c **** }
 11052              		.loc 1 1968 0
 11053 003a 08E0     		b	.L527
 11054              	.L525:
1966:..\src/command_processing.c ****     }
 11055              		.loc 1 1966 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 258


 11056 003c 084A     		ldr	r2, .L528+8
 11057 003e 064B     		ldr	r3, .L528
 11058 0040 1046     		mov	r0, r2
 11059 0042 1946     		mov	r1, r3
 11060 0044 4FF49873 		mov	r3, #304
 11061 0048 1A46     		mov	r2, r3
 11062 004a FFF7FEFF 		bl	memcpy
 11063              	.L527:
 11064              		.loc 1 1968 0
 11065 004e 00BF     		nop
 11066 0050 0837     		adds	r7, r7, #8
 11067              		.cfi_def_cfa_offset 8
 11068 0052 BD46     		mov	sp, r7
 11069              		.cfi_def_cfa_register 13
 11070              		@ sp needed
 11071 0054 80BD     		pop	{r7, pc}
 11072              	.L529:
 11073 0056 00BF     		.align	2
 11074              	.L528:
 11075 0058 00000000 		.word	g_mem
 11076 005c 00000000 		.word	EEPROM_ADDR
 11077 0060 00000000 		.word	c_mem
 11078              		.cfi_endproc
 11079              	.LFE80:
 11080              		.size	memRecall, .-memRecall
 11081              		.section	.text.memRestore,"ax",%progbits
 11082              		.align	2
 11083              		.global	memRestore
 11084              		.thumb
 11085              		.thumb_func
 11086              		.type	memRestore, %function
 11087              	memRestore:
 11088              	.LFB81:
1969:..\src/command_processing.c **** 
1970:..\src/command_processing.c **** 
1971:..\src/command_processing.c **** //==============================================================================
1972:..\src/command_processing.c **** //                                                                RESTORE MEMORY
1973:..\src/command_processing.c **** //==============================================================================
1974:..\src/command_processing.c **** 
1975:..\src/command_processing.c **** 
1976:..\src/command_processing.c **** uint8 memRestore(void) {
 11089              		.loc 1 1976 0
 11090              		.cfi_startproc
 11091              		@ args = 0, pretend = 0, frame = 8
 11092              		@ frame_needed = 1, uses_anonymous_args = 0
 11093 0000 80B5     		push	{r7, lr}
 11094              		.cfi_def_cfa_offset 8
 11095              		.cfi_offset 7, -8
 11096              		.cfi_offset 14, -4
 11097 0002 82B0     		sub	sp, sp, #8
 11098              		.cfi_def_cfa_offset 16
 11099 0004 00AF     		add	r7, sp, #0
 11100              		.cfi_def_cfa_register 7
1977:..\src/command_processing.c ****     uint16 i;
1978:..\src/command_processing.c **** 
1979:..\src/command_processing.c ****     for (i = 0; i < sizeof(g_mem); i++) {
 11101              		.loc 1 1979 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 259


 11102 0006 0023     		movs	r3, #0
 11103 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 11104 000a 0EE0     		b	.L531
 11105              	.L532:
1980:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 11106              		.loc 1 1980 0 discriminator 3
 11107 000c FB88     		ldrh	r3, [r7, #6]
 11108 000e 114A     		ldr	r2, .L535
 11109 0010 1344     		add	r3, r3, r2
 11110 0012 114A     		ldr	r2, .L535+4
 11111 0014 1168     		ldr	r1, [r2]
 11112 0016 FA88     		ldrh	r2, [r7, #6]
 11113 0018 02F54872 		add	r2, r2, #800
 11114 001c 0A44     		add	r2, r2, r1
 11115 001e 1278     		ldrb	r2, [r2]
 11116 0020 D2B2     		uxtb	r2, r2
 11117 0022 1A70     		strb	r2, [r3]
1979:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 11118              		.loc 1 1979 0 discriminator 3
 11119 0024 FB88     		ldrh	r3, [r7, #6]
 11120 0026 0133     		adds	r3, r3, #1
 11121 0028 FB80     		strh	r3, [r7, #6]	@ movhi
 11122              	.L531:
1979:..\src/command_processing.c ****         ((reg8 *) &g_mem.flag)[i] = EEPROM_ADDR[i + (DEFAULT_EEPROM_DISPLACEMENT * 16)];
 11123              		.loc 1 1979 0 is_stmt 0 discriminator 1
 11124 002a FB88     		ldrh	r3, [r7, #6]
 11125 002c B3F5987F 		cmp	r3, #304
 11126 0030 ECD3     		bcc	.L532
1981:..\src/command_processing.c ****     }
1982:..\src/command_processing.c **** 
1983:..\src/command_processing.c ****     //check for initialization
1984:..\src/command_processing.c ****     if (g_mem.flag == FALSE) {
 11127              		.loc 1 1984 0 is_stmt 1
 11128 0032 084B     		ldr	r3, .L535
 11129 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 11130 0036 002B     		cmp	r3, #0
 11131 0038 03D1     		bne	.L533
1985:..\src/command_processing.c ****         return memInit();
 11132              		.loc 1 1985 0
 11133 003a FFF7FEFF 		bl	memInit
 11134 003e 0346     		mov	r3, r0
 11135 0040 03E0     		b	.L534
 11136              	.L533:
1986:..\src/command_processing.c ****     } else {
1987:..\src/command_processing.c ****         return memStore(0);
 11137              		.loc 1 1987 0
 11138 0042 0020     		movs	r0, #0
 11139 0044 FFF7FEFF 		bl	memStore
 11140 0048 0346     		mov	r3, r0
 11141              	.L534:
1988:..\src/command_processing.c ****     }
1989:..\src/command_processing.c **** }
 11142              		.loc 1 1989 0
 11143 004a 1846     		mov	r0, r3
 11144 004c 0837     		adds	r7, r7, #8
 11145              		.cfi_def_cfa_offset 8
 11146 004e BD46     		mov	sp, r7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 260


 11147              		.cfi_def_cfa_register 13
 11148              		@ sp needed
 11149 0050 80BD     		pop	{r7, pc}
 11150              	.L536:
 11151 0052 00BF     		.align	2
 11152              	.L535:
 11153 0054 00000000 		.word	g_mem
 11154 0058 00000000 		.word	EEPROM_ADDR
 11155              		.cfi_endproc
 11156              	.LFE81:
 11157              		.size	memRestore, .-memRestore
 11158              		.section	.text.memInit,"ax",%progbits
 11159              		.align	2
 11160              		.global	memInit
 11161              		.thumb
 11162              		.thumb_func
 11163              		.type	memInit, %function
 11164              	memInit:
 11165              	.LFB82:
1990:..\src/command_processing.c **** 
1991:..\src/command_processing.c **** //==============================================================================
1992:..\src/command_processing.c **** //                                                                   MEMORY INIT
1993:..\src/command_processing.c **** //==============================================================================
1994:..\src/command_processing.c **** 
1995:..\src/command_processing.c **** uint8 memInit(void)
1996:..\src/command_processing.c **** {
 11166              		.loc 1 1996 0
 11167              		.cfi_startproc
 11168              		@ args = 0, pretend = 0, frame = 8
 11169              		@ frame_needed = 1, uses_anonymous_args = 0
 11170 0000 80B5     		push	{r7, lr}
 11171              		.cfi_def_cfa_offset 8
 11172              		.cfi_offset 7, -8
 11173              		.cfi_offset 14, -4
 11174 0002 82B0     		sub	sp, sp, #8
 11175              		.cfi_def_cfa_offset 16
 11176 0004 00AF     		add	r7, sp, #0
 11177              		.cfi_def_cfa_register 7
1997:..\src/command_processing.c ****     uint8 i;
1998:..\src/command_processing.c **** 
1999:..\src/command_processing.c ****     //initialize memory settings
2000:..\src/command_processing.c ****     g_mem.id            = 1;
 11178              		.loc 1 2000 0
 11179 0006 BD4B     		ldr	r3, .L552
 11180 0008 0122     		movs	r2, #1
 11181 000a 5A70     		strb	r2, [r3, #1]
2001:..\src/command_processing.c **** 
2002:..\src/command_processing.c ****     g_mem.k_p           =0.0165 * 65536;
 11182              		.loc 1 2002 0
 11183 000c BB4B     		ldr	r3, .L552
 11184 000e 40F23942 		movw	r2, #1081
 11185 0012 5A60     		str	r2, [r3, #4]
2003:..\src/command_processing.c ****     g_mem.k_i           =     0 * 65536;
 11186              		.loc 1 2003 0
 11187 0014 B94B     		ldr	r3, .L552
 11188 0016 0022     		movs	r2, #0
 11189 0018 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 261


2004:..\src/command_processing.c ****     g_mem.k_d           = 0.007 * 65536;  // changed in order to avoid metallic clatter, previous v
 11190              		.loc 1 2004 0
 11191 001a B84B     		ldr	r3, .L552
 11192 001c 4FF4E572 		mov	r2, #458
 11193 0020 DA60     		str	r2, [r3, #12]
2005:..\src/command_processing.c ****     g_mem.k_p_c         =     1 * 65536;
 11194              		.loc 1 2005 0
 11195 0022 B64B     		ldr	r3, .L552
 11196 0024 4FF48032 		mov	r2, #65536
 11197 0028 1A61     		str	r2, [r3, #16]
2006:..\src/command_processing.c ****     g_mem.k_i_c         = 0.001 * 65536;
 11198              		.loc 1 2006 0
 11199 002a B44B     		ldr	r3, .L552
 11200 002c 4122     		movs	r2, #65
 11201 002e 5A61     		str	r2, [r3, #20]
2007:..\src/command_processing.c ****     g_mem.k_d_c         =     0 * 65536;
 11202              		.loc 1 2007 0
 11203 0030 B24B     		ldr	r3, .L552
 11204 0032 0022     		movs	r2, #0
 11205 0034 9A61     		str	r2, [r3, #24]
2008:..\src/command_processing.c **** 
2009:..\src/command_processing.c ****     g_mem.k_p_dl        =   0.1 * 65536;
 11206              		.loc 1 2009 0
 11207 0036 B14B     		ldr	r3, .L552
 11208 0038 41F69912 		movw	r2, #6553
 11209 003c DA61     		str	r2, [r3, #28]
2010:..\src/command_processing.c ****     g_mem.k_i_dl        =     0 * 65536;
 11210              		.loc 1 2010 0
 11211 003e AF4B     		ldr	r3, .L552
 11212 0040 0022     		movs	r2, #0
 11213 0042 1A62     		str	r2, [r3, #32]
2011:..\src/command_processing.c ****     g_mem.k_d_dl        =     0 * 65536;
 11214              		.loc 1 2011 0
 11215 0044 AD4B     		ldr	r3, .L552
 11216 0046 0022     		movs	r2, #0
 11217 0048 5A62     		str	r2, [r3, #36]
2012:..\src/command_processing.c ****     g_mem.k_p_c_dl      =   0.3 * 65536;
 11218              		.loc 1 2012 0
 11219 004a AC4B     		ldr	r3, .L552
 11220 004c 44F6CC42 		movw	r2, #19660
 11221 0050 9A62     		str	r2, [r3, #40]
2013:..\src/command_processing.c ****     g_mem.k_i_c_dl      =0.0002 * 65536;
 11222              		.loc 1 2013 0
 11223 0052 AA4B     		ldr	r3, .L552
 11224 0054 0D22     		movs	r2, #13
 11225 0056 DA62     		str	r2, [r3, #44]
2014:..\src/command_processing.c ****     g_mem.k_d_c_dl      =     0 * 65536;
 11226              		.loc 1 2014 0
 11227 0058 A84B     		ldr	r3, .L552
 11228 005a 0022     		movs	r2, #0
 11229 005c 1A63     		str	r2, [r3, #48]
2015:..\src/command_processing.c **** 
2016:..\src/command_processing.c ****     g_mem.activ         = 1;
 11230              		.loc 1 2016 0
 11231 005e A74B     		ldr	r3, .L552
 11232 0060 0122     		movs	r2, #1
 11233 0062 83F83420 		strb	r2, [r3, #52]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 262


2017:..\src/command_processing.c ****     g_mem.input_mode    = INPUT_MODE_EXTERNAL;
 11234              		.loc 1 2017 0
 11235 0066 A54B     		ldr	r3, .L552
 11236 0068 0022     		movs	r2, #0
 11237 006a 83F83520 		strb	r2, [r3, #53]
2018:..\src/command_processing.c ****     g_mem.control_mode  = CONTROL_ANGLE;
 11238              		.loc 1 2018 0
 11239 006e A34B     		ldr	r3, .L552
 11240 0070 0022     		movs	r2, #0
 11241 0072 83F83620 		strb	r2, [r3, #54]
2019:..\src/command_processing.c **** 
2020:..\src/command_processing.c ****     g_mem.pos_lim_flag = 1;
 11242              		.loc 1 2020 0
 11243 0076 A14B     		ldr	r3, .L552
 11244 0078 0122     		movs	r2, #1
 11245 007a 83F85420 		strb	r2, [r3, #84]
2021:..\src/command_processing.c **** 
2022:..\src/command_processing.c ****     g_mem.activate_pwm_rescaling = MAXON_24V;           //rescaling active for 12V motor
 11246              		.loc 1 2022 0
 11247 007e 9F4B     		ldr	r3, .L552
 11248 0080 0022     		movs	r2, #0
 11249 0082 83F87B20 		strb	r2, [r3, #123]
2023:..\src/command_processing.c **** 
2024:..\src/command_processing.c ****     g_mem.pos_lim_inf = 0;
 11250              		.loc 1 2024 0
 11251 0086 9D4B     		ldr	r3, .L552
 11252 0088 0022     		movs	r2, #0
 11253 008a 9A65     		str	r2, [r3, #88]
2025:..\src/command_processing.c ****     g_mem.pos_lim_sup = (int32)22000 << g_mem.res[0];
 11254              		.loc 1 2025 0
 11255 008c 9B4B     		ldr	r3, .L552
 11256 008e 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 11257 0092 1A46     		mov	r2, r3
 11258 0094 45F2F053 		movw	r3, #22000
 11259 0098 9340     		lsls	r3, r3, r2
 11260 009a 984A     		ldr	r2, .L552
 11261 009c D365     		str	r3, [r2, #92]
2026:..\src/command_processing.c **** 
2027:..\src/command_processing.c ****     for(i = 0; i < NUM_OF_SENSORS; ++i)
 11262              		.loc 1 2027 0
 11263 009e 0023     		movs	r3, #0
 11264 00a0 FB71     		strb	r3, [r7, #7]
 11265 00a2 16E0     		b	.L538
 11266              	.L539:
2028:..\src/command_processing.c ****     {
2029:..\src/command_processing.c ****         g_mem.res[i] = 3;
 11267              		.loc 1 2029 0 discriminator 3
 11268 00a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11269 00a6 954A     		ldr	r2, .L552
 11270 00a8 1344     		add	r3, r3, r2
 11271 00aa 0322     		movs	r2, #3
 11272 00ac 83F83720 		strb	r2, [r3, #55]
2030:..\src/command_processing.c ****         g_mem.m_mult[i] = 1;
 11273              		.loc 1 2030 0 discriminator 3
 11274 00b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11275 00b2 924A     		ldr	r2, .L552
 11276 00b4 1233     		adds	r3, r3, #18
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 263


 11277 00b6 4FF07E51 		mov	r1, #1065353216
 11278 00ba 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
2031:..\src/command_processing.c ****         g_mem.m_off[i] = (int32)0 << g_mem.res[i];
 11279              		.loc 1 2031 0 discriminator 3
 11280 00be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11281 00c0 8E4A     		ldr	r2, .L552
 11282 00c2 0E33     		adds	r3, r3, #14
 11283 00c4 9B00     		lsls	r3, r3, #2
 11284 00c6 1344     		add	r3, r3, r2
 11285 00c8 0022     		movs	r2, #0
 11286 00ca 5A60     		str	r2, [r3, #4]
2027:..\src/command_processing.c ****     {
 11287              		.loc 1 2027 0 discriminator 3
 11288 00cc FB79     		ldrb	r3, [r7, #7]
 11289 00ce 0133     		adds	r3, r3, #1
 11290 00d0 FB71     		strb	r3, [r7, #7]
 11291              	.L538:
2027:..\src/command_processing.c ****     {
 11292              		.loc 1 2027 0 is_stmt 0 discriminator 1
 11293 00d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11294 00d4 022B     		cmp	r3, #2
 11295 00d6 E5D9     		bls	.L539
2032:..\src/command_processing.c ****     }
2033:..\src/command_processing.c **** 
2034:..\src/command_processing.c ****     g_mem.max_step_pos = 0;
 11296              		.loc 1 2034 0 is_stmt 1
 11297 00d8 884B     		ldr	r3, .L552
 11298 00da 0022     		movs	r2, #0
 11299 00dc 5A66     		str	r2, [r3, #100]
2035:..\src/command_processing.c ****     g_mem.max_step_neg = 0;
 11300              		.loc 1 2035 0
 11301 00de 874B     		ldr	r3, .L552
 11302 00e0 0022     		movs	r2, #0
 11303 00e2 1A66     		str	r2, [r3, #96]
2036:..\src/command_processing.c **** 
2037:..\src/command_processing.c ****     g_mem.current_limit = DEFAULT_CURRENT_LIMIT;
 11304              		.loc 1 2037 0
 11305 00e4 854B     		ldr	r3, .L552
 11306 00e6 40F2DC52 		movw	r2, #1500
 11307 00ea A3F86820 		strh	r2, [r3, #104]	@ movhi
2038:..\src/command_processing.c **** 
2039:..\src/command_processing.c ****     // EMG calibration enabled by default
2040:..\src/command_processing.c ****     g_mem.emg_calibration_flag = 0;
 11308              		.loc 1 2040 0
 11309 00ee 834B     		ldr	r3, .L552
 11310 00f0 0022     		movs	r2, #0
 11311 00f2 83F86E20 		strb	r2, [r3, #110]
2041:..\src/command_processing.c **** 
2042:..\src/command_processing.c ****     g_mem.emg_max_value[0] = 1024;
 11312              		.loc 1 2042 0
 11313 00f6 814B     		ldr	r3, .L552
 11314 00f8 4FF48062 		mov	r2, #1024
 11315 00fc 1A67     		str	r2, [r3, #112]
2043:..\src/command_processing.c ****     g_mem.emg_max_value[1] = 1024;
 11316              		.loc 1 2043 0
 11317 00fe 7F4B     		ldr	r3, .L552
 11318 0100 4FF48062 		mov	r2, #1024
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 264


 11319 0104 5A67     		str	r2, [r3, #116]
2044:..\src/command_processing.c **** 
2045:..\src/command_processing.c ****     g_mem.emg_threshold[0] = 200;
 11320              		.loc 1 2045 0
 11321 0106 7D4B     		ldr	r3, .L552
 11322 0108 C822     		movs	r2, #200
 11323 010a A3F86A20 		strh	r2, [r3, #106]	@ movhi
2046:..\src/command_processing.c ****     g_mem.emg_threshold[1] = 200;
 11324              		.loc 1 2046 0
 11325 010e 7B4B     		ldr	r3, .L552
 11326 0110 C822     		movs	r2, #200
 11327 0112 A3F86C20 		strh	r2, [r3, #108]	@ movhi
2047:..\src/command_processing.c **** 
2048:..\src/command_processing.c ****     g_mem.emg_speed = 100;
 11328              		.loc 1 2048 0
 11329 0116 794B     		ldr	r3, .L552
 11330 0118 6422     		movs	r2, #100
 11331 011a 83F87820 		strb	r2, [r3, #120]
2049:..\src/command_processing.c **** 
2050:..\src/command_processing.c ****     g_mem.double_encoder_on_off = 0;
 11332              		.loc 1 2050 0
 11333 011e 774B     		ldr	r3, .L552
 11334 0120 0022     		movs	r2, #0
 11335 0122 83F87920 		strb	r2, [r3, #121]
2051:..\src/command_processing.c ****     g_mem.motor_handle_ratio = 22;
 11336              		.loc 1 2051 0
 11337 0126 754B     		ldr	r3, .L552
 11338 0128 1622     		movs	r2, #22
 11339 012a 83F87A20 		strb	r2, [r3, #122]
2052:..\src/command_processing.c ****     
2053:..\src/command_processing.c ****     for(i = 0; i < LOOKUP_DIM; i++) {
 11340              		.loc 1 2053 0
 11341 012e 0023     		movs	r3, #0
 11342 0130 FB71     		strb	r3, [r7, #7]
 11343 0132 0AE0     		b	.L540
 11344              	.L541:
2054:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 11345              		.loc 1 2054 0 discriminator 3
 11346 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11347 0136 714A     		ldr	r2, .L552
 11348 0138 1E33     		adds	r3, r3, #30
 11349 013a 9B00     		lsls	r3, r3, #2
 11350 013c 1344     		add	r3, r3, r2
 11351 013e 4FF00002 		mov	r2, #0
 11352 0142 5A60     		str	r2, [r3, #4]	@ float
2053:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 11353              		.loc 1 2053 0 discriminator 3
 11354 0144 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11355 0146 0133     		adds	r3, r3, #1
 11356 0148 FB71     		strb	r3, [r7, #7]
 11357              	.L540:
2053:..\src/command_processing.c ****         g_mem.curr_lookup[i] = 0;
 11358              		.loc 1 2053 0 is_stmt 0 discriminator 1
 11359 014a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11360 014c 052B     		cmp	r3, #5
 11361 014e F1D9     		bls	.L541
2055:..\src/command_processing.c ****     }
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 265


2056:..\src/command_processing.c **** 
2057:..\src/command_processing.c ****     //Initialize rest position parameters        
2058:..\src/command_processing.c ****     g_mem.rest_pos = (int32)7000 << g_mem.res[0]; // 56000
 11362              		.loc 1 2058 0 is_stmt 1
 11363 0150 6A4B     		ldr	r3, .L552
 11364 0152 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 11365 0156 1A46     		mov	r2, r3
 11366 0158 41F65833 		movw	r3, #7000
 11367 015c 9340     		lsls	r3, r3, r2
 11368 015e 674A     		ldr	r2, .L552
 11369 0160 C2F89830 		str	r3, [r2, #152]
2059:..\src/command_processing.c **** 	g_mem.rest_delay = 10;
 11370              		.loc 1 2059 0
 11371 0164 654B     		ldr	r3, .L552
 11372 0166 0A22     		movs	r2, #10
 11373 0168 C3F89C20 		str	r2, [r3, #156]
2060:..\src/command_processing.c ****     g_mem.rest_vel = 10000;
 11374              		.loc 1 2060 0
 11375 016c 634B     		ldr	r3, .L552
 11376 016e 42F21072 		movw	r2, #10000
 11377 0172 C3F8A020 		str	r2, [r3, #160]
2061:..\src/command_processing.c ****     g_mem.switch_emg = 0;
 11378              		.loc 1 2061 0
 11379 0176 614B     		ldr	r3, .L552
 11380 0178 0022     		movs	r2, #0
 11381 017a 83F8A520 		strb	r2, [r3, #165]
2062:..\src/command_processing.c **** 	
2063:..\src/command_processing.c ****     g_mem.right_left = RIGHT_HAND;
 11382              		.loc 1 2063 0
 11383 017e 5F4B     		ldr	r3, .L552
 11384 0180 0022     		movs	r2, #0
 11385 0182 83F8A620 		strb	r2, [r3, #166]
2064:..\src/command_processing.c ****     g_mem.read_imu_flag = FALSE;
 11386              		.loc 1 2064 0
 11387 0186 5D4B     		ldr	r3, .L552
 11388 0188 0022     		movs	r2, #0
 11389 018a 83F8A720 		strb	r2, [r3, #167]
2065:..\src/command_processing.c ****     g_mem.read_exp_port_flag = EXP_NONE;       // 0 - None
 11390              		.loc 1 2065 0
 11391 018e 5B4B     		ldr	r3, .L552
 11392 0190 0022     		movs	r2, #0
 11393 0192 83F8A820 		strb	r2, [r3, #168]
2066:..\src/command_processing.c ****     
2067:..\src/command_processing.c ****     for (i=0; i<23; i++){
 11394              		.loc 1 2067 0
 11395 0196 0023     		movs	r3, #0
 11396 0198 FB71     		strb	r3, [r7, #7]
 11397 019a 08E0     		b	.L542
 11398              	.L543:
2068:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 11399              		.loc 1 2068 0 discriminator 3
 11400 019c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11401 019e 574A     		ldr	r2, .L552
 11402 01a0 1344     		add	r3, r3, r2
 11403 01a2 0022     		movs	r2, #0
 11404 01a4 83F8A920 		strb	r2, [r3, #169]
2067:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 266


 11405              		.loc 1 2067 0 discriminator 3
 11406 01a8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11407 01aa 0133     		adds	r3, r3, #1
 11408 01ac FB71     		strb	r3, [r7, #7]
 11409              	.L542:
2067:..\src/command_processing.c ****         g_mem.unused_bytes[i] = 0;
 11410              		.loc 1 2067 0 is_stmt 0 discriminator 1
 11411 01ae FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11412 01b0 162B     		cmp	r3, #22
 11413 01b2 F3D9     		bls	.L543
2069:..\src/command_processing.c ****     }
2070:..\src/command_processing.c **** 
2071:..\src/command_processing.c ****     //Initialize counters        
2072:..\src/command_processing.c ****     reset_counters();
 11414              		.loc 1 2072 0 is_stmt 1
 11415 01b4 FFF7FEFF 		bl	reset_counters
2073:..\src/command_processing.c ****     for (i=0; i<10; i++){
 11416              		.loc 1 2073 0
 11417 01b8 0023     		movs	r3, #0
 11418 01ba FB71     		strb	r3, [r7, #7]
 11419 01bc 08E0     		b	.L544
 11420              	.L545:
2074:..\src/command_processing.c ****         g_mem.unused_bytes1[i] = 0;
 11421              		.loc 1 2074 0 discriminator 3
 11422 01be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11423 01c0 4E4A     		ldr	r2, .L552
 11424 01c2 1344     		add	r3, r3, r2
 11425 01c4 0022     		movs	r2, #0
 11426 01c6 83F81621 		strb	r2, [r3, #278]
2073:..\src/command_processing.c ****     for (i=0; i<10; i++){
 11427              		.loc 1 2073 0 discriminator 3
 11428 01ca FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11429 01cc 0133     		adds	r3, r3, #1
 11430 01ce FB71     		strb	r3, [r7, #7]
 11431              	.L544:
2073:..\src/command_processing.c ****     for (i=0; i<10; i++){
 11432              		.loc 1 2073 0 is_stmt 0 discriminator 1
 11433 01d0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11434 01d2 092B     		cmp	r3, #9
 11435 01d4 F3D9     		bls	.L545
2075:..\src/command_processing.c ****     }
2076:..\src/command_processing.c ****     
2077:..\src/command_processing.c ****     if (g_mem.read_exp_port_flag == EXP_SD_RTC) {
 11436              		.loc 1 2077 0 is_stmt 1
 11437 01d6 494B     		ldr	r3, .L552
 11438 01d8 93F8A830 		ldrb	r3, [r3, #168]	@ zero_extendqisi2
 11439 01dc 012B     		cmp	r3, #1
 11440 01de 41D1     		bne	.L546
2078:..\src/command_processing.c ****         // Set date of maintenance from RTC
2079:..\src/command_processing.c ****         i = DS1302_read(DS1302_DATE_RD);
 11441              		.loc 1 2079 0
 11442 01e0 8720     		movs	r0, #135
 11443 01e2 FFF7FEFF 		bl	DS1302_read
 11444 01e6 0346     		mov	r3, r0
 11445 01e8 FB71     		strb	r3, [r7, #7]
2080:..\src/command_processing.c ****         g_mem.maint_day = (i/16) * 10 + i%16;
 11446              		.loc 1 2080 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 267


 11447 01ea FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11448 01ec 1B09     		lsrs	r3, r3, #4
 11449 01ee DBB2     		uxtb	r3, r3
 11450 01f0 1A46     		mov	r2, r3
 11451 01f2 9200     		lsls	r2, r2, #2
 11452 01f4 1344     		add	r3, r3, r2
 11453 01f6 5B00     		lsls	r3, r3, #1
 11454 01f8 DAB2     		uxtb	r2, r3
 11455 01fa FB79     		ldrb	r3, [r7, #7]
 11456 01fc 03F00F03 		and	r3, r3, #15
 11457 0200 DBB2     		uxtb	r3, r3
 11458 0202 1344     		add	r3, r3, r2
 11459 0204 DAB2     		uxtb	r2, r3
 11460 0206 3D4B     		ldr	r3, .L552
 11461 0208 83F89520 		strb	r2, [r3, #149]
2081:..\src/command_processing.c ****         i = DS1302_read(DS1302_MONTH_RD);
 11462              		.loc 1 2081 0
 11463 020c 8920     		movs	r0, #137
 11464 020e FFF7FEFF 		bl	DS1302_read
 11465 0212 0346     		mov	r3, r0
 11466 0214 FB71     		strb	r3, [r7, #7]
2082:..\src/command_processing.c ****         g_mem.maint_month = (i/16) * 10 + i%16;
 11467              		.loc 1 2082 0
 11468 0216 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11469 0218 1B09     		lsrs	r3, r3, #4
 11470 021a DBB2     		uxtb	r3, r3
 11471 021c 1A46     		mov	r2, r3
 11472 021e 9200     		lsls	r2, r2, #2
 11473 0220 1344     		add	r3, r3, r2
 11474 0222 5B00     		lsls	r3, r3, #1
 11475 0224 DAB2     		uxtb	r2, r3
 11476 0226 FB79     		ldrb	r3, [r7, #7]
 11477 0228 03F00F03 		and	r3, r3, #15
 11478 022c DBB2     		uxtb	r3, r3
 11479 022e 1344     		add	r3, r3, r2
 11480 0230 DAB2     		uxtb	r2, r3
 11481 0232 324B     		ldr	r3, .L552
 11482 0234 83F89620 		strb	r2, [r3, #150]
2083:..\src/command_processing.c ****         i = DS1302_read(DS1302_YEAR_RD);
 11483              		.loc 1 2083 0
 11484 0238 8D20     		movs	r0, #141
 11485 023a FFF7FEFF 		bl	DS1302_read
 11486 023e 0346     		mov	r3, r0
 11487 0240 FB71     		strb	r3, [r7, #7]
2084:..\src/command_processing.c ****         g_mem.maint_year = (i/16) * 10 + i%16;
 11488              		.loc 1 2084 0
 11489 0242 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11490 0244 1B09     		lsrs	r3, r3, #4
 11491 0246 DBB2     		uxtb	r3, r3
 11492 0248 1A46     		mov	r2, r3
 11493 024a 9200     		lsls	r2, r2, #2
 11494 024c 1344     		add	r3, r3, r2
 11495 024e 5B00     		lsls	r3, r3, #1
 11496 0250 DAB2     		uxtb	r2, r3
 11497 0252 FB79     		ldrb	r3, [r7, #7]
 11498 0254 03F00F03 		and	r3, r3, #15
 11499 0258 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 268


 11500 025a 1344     		add	r3, r3, r2
 11501 025c DAB2     		uxtb	r2, r3
 11502 025e 274B     		ldr	r3, .L552
 11503 0260 83F89720 		strb	r2, [r3, #151]
 11504              	.L546:
2085:..\src/command_processing.c ****     }
2086:..\src/command_processing.c ****     
2087:..\src/command_processing.c ****     // IMU Default value
2088:..\src/command_processing.c ****     for (i = 0; i< N_IMU_MAX; i++){
 11505              		.loc 1 2088 0
 11506 0264 0023     		movs	r3, #0
 11507 0266 FB71     		strb	r3, [r7, #7]
 11508 0268 34E0     		b	.L547
 11509              	.L548:
2089:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 11510              		.loc 1 2089 0 discriminator 3
 11511 026a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 11512 026c 2349     		ldr	r1, .L552
 11513 026e 1346     		mov	r3, r2
 11514 0270 9B00     		lsls	r3, r3, #2
 11515 0272 1344     		add	r3, r3, r2
 11516 0274 0B44     		add	r3, r3, r1
 11517 0276 03F22113 		addw	r3, r3, #289
 11518 027a 0122     		movs	r2, #1
 11519 027c 1A70     		strb	r2, [r3]
2090:..\src/command_processing.c ****         g_mem.IMU_conf[i][1] = 1;
 11520              		.loc 1 2090 0 discriminator 3
 11521 027e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 11522 0280 1E49     		ldr	r1, .L552
 11523 0282 1346     		mov	r3, r2
 11524 0284 9B00     		lsls	r3, r3, #2
 11525 0286 1344     		add	r3, r3, r2
 11526 0288 0B44     		add	r3, r3, r1
 11527 028a 03F59173 		add	r3, r3, #290
 11528 028e 0122     		movs	r2, #1
 11529 0290 1A70     		strb	r2, [r3]
2091:..\src/command_processing.c ****         g_mem.IMU_conf[i][2] = 0;
 11530              		.loc 1 2091 0 discriminator 3
 11531 0292 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 11532 0294 1949     		ldr	r1, .L552
 11533 0296 1346     		mov	r3, r2
 11534 0298 9B00     		lsls	r3, r3, #2
 11535 029a 1344     		add	r3, r3, r2
 11536 029c 0B44     		add	r3, r3, r1
 11537 029e 03F22313 		addw	r3, r3, #291
 11538 02a2 0022     		movs	r2, #0
 11539 02a4 1A70     		strb	r2, [r3]
2092:..\src/command_processing.c ****         g_mem.IMU_conf[i][3] = 0;
 11540              		.loc 1 2092 0 discriminator 3
 11541 02a6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 11542 02a8 1449     		ldr	r1, .L552
 11543 02aa 1346     		mov	r3, r2
 11544 02ac 9B00     		lsls	r3, r3, #2
 11545 02ae 1344     		add	r3, r3, r2
 11546 02b0 0B44     		add	r3, r3, r1
 11547 02b2 03F59273 		add	r3, r3, #292
 11548 02b6 0022     		movs	r2, #0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 269


 11549 02b8 1A70     		strb	r2, [r3]
2093:..\src/command_processing.c ****         g_mem.IMU_conf[i][4] = 0;
 11550              		.loc 1 2093 0 discriminator 3
 11551 02ba FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 11552 02bc 0F49     		ldr	r1, .L552
 11553 02be 1346     		mov	r3, r2
 11554 02c0 9B00     		lsls	r3, r3, #2
 11555 02c2 1344     		add	r3, r3, r2
 11556 02c4 0B44     		add	r3, r3, r1
 11557 02c6 03F22513 		addw	r3, r3, #293
 11558 02ca 0022     		movs	r2, #0
 11559 02cc 1A70     		strb	r2, [r3]
2088:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 11560              		.loc 1 2088 0 discriminator 3
 11561 02ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11562 02d0 0133     		adds	r3, r3, #1
 11563 02d2 FB71     		strb	r3, [r7, #7]
 11564              	.L547:
2088:..\src/command_processing.c ****         g_mem.IMU_conf[i][0] = 1;
 11565              		.loc 1 2088 0 is_stmt 0 discriminator 1
 11566 02d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 11567 02d6 022B     		cmp	r3, #2
 11568 02d8 C7D9     		bls	.L548
2094:..\src/command_processing.c ****         //for (j=0; j< NUM_OF_DATA; j++) {
2095:..\src/command_processing.c ****         //    g_mem.IMU_conf[i][j] = 0;
2096:..\src/command_processing.c ****         //}
2097:..\src/command_processing.c ****     }
2098:..\src/command_processing.c ****     
2099:..\src/command_processing.c ****     // set the initialized flag to show EEPROM has been populated
2100:..\src/command_processing.c ****     g_mem.flag = TRUE;
 11569              		.loc 1 2100 0 is_stmt 1
 11570 02da 084B     		ldr	r3, .L552
 11571 02dc 0122     		movs	r2, #1
 11572 02de 1A70     		strb	r2, [r3]
2101:..\src/command_processing.c ****     
2102:..\src/command_processing.c ****     //write that configuration to EEPROM
2103:..\src/command_processing.c ****     return ( memStore(0) && memStore(DEFAULT_EEPROM_DISPLACEMENT) );
 11573              		.loc 1 2103 0
 11574 02e0 0020     		movs	r0, #0
 11575 02e2 FFF7FEFF 		bl	memStore
 11576 02e6 0346     		mov	r3, r0
 11577 02e8 002B     		cmp	r3, #0
 11578 02ea 09D0     		beq	.L549
 11579              		.loc 1 2103 0 is_stmt 0 discriminator 1
 11580 02ec 3220     		movs	r0, #50
 11581 02ee FFF7FEFF 		bl	memStore
 11582 02f2 0346     		mov	r3, r0
 11583 02f4 002B     		cmp	r3, #0
 11584 02f6 03D0     		beq	.L549
 11585              		.loc 1 2103 0 discriminator 3
 11586 02f8 0123     		movs	r3, #1
 11587 02fa 02E0     		b	.L550
 11588              	.L553:
 11589              		.align	2
 11590              	.L552:
 11591 02fc 00000000 		.word	g_mem
 11592              	.L549:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 270


 11593              		.loc 1 2103 0 discriminator 4
 11594 0300 0023     		movs	r3, #0
 11595              	.L550:
 11596              		.loc 1 2103 0 discriminator 6
 11597 0302 DBB2     		uxtb	r3, r3
2104:..\src/command_processing.c **** }
 11598              		.loc 1 2104 0 is_stmt 1 discriminator 6
 11599 0304 1846     		mov	r0, r3
 11600 0306 0837     		adds	r7, r7, #8
 11601              		.cfi_def_cfa_offset 8
 11602 0308 BD46     		mov	sp, r7
 11603              		.cfi_def_cfa_register 13
 11604              		@ sp needed
 11605 030a 80BD     		pop	{r7, pc}
 11606              		.cfi_endproc
 11607              	.LFE82:
 11608              		.size	memInit, .-memInit
 11609              		.section	.text.cmd_get_measurements,"ax",%progbits
 11610              		.align	2
 11611              		.global	cmd_get_measurements
 11612              		.thumb
 11613              		.thumb_func
 11614              		.type	cmd_get_measurements, %function
 11615              	cmd_get_measurements:
 11616              	.LFB83:
2105:..\src/command_processing.c **** 
2106:..\src/command_processing.c **** //==============================================================================
2107:..\src/command_processing.c **** //                                                    ROUTINE INTERRUPT FUNCTION
2108:..\src/command_processing.c **** //==============================================================================
2109:..\src/command_processing.c **** /**
2110:..\src/command_processing.c **** * Bunch of functions used on request from UART communication
2111:..\src/command_processing.c **** **/
2112:..\src/command_processing.c **** 
2113:..\src/command_processing.c **** void cmd_get_measurements(){
 11617              		.loc 1 2113 0
 11618              		.cfi_startproc
 11619              		@ args = 0, pretend = 0, frame = 16
 11620              		@ frame_needed = 1, uses_anonymous_args = 0
 11621 0000 80B5     		push	{r7, lr}
 11622              		.cfi_def_cfa_offset 8
 11623              		.cfi_offset 7, -8
 11624              		.cfi_offset 14, -4
 11625 0002 84B0     		sub	sp, sp, #16
 11626              		.cfi_def_cfa_offset 24
 11627 0004 00AF     		add	r7, sp, #0
 11628              		.cfi_def_cfa_register 7
2114:..\src/command_processing.c ****  
2115:..\src/command_processing.c ****     uint8 CYDATA index;
2116:..\src/command_processing.c ****     int16 aux_int16;
2117:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2118:..\src/command_processing.c ****     
2119:..\src/command_processing.c ****     uint8 packet_data[8]; 
2120:..\src/command_processing.c ****     
2121:..\src/command_processing.c ****     //Header package
2122:..\src/command_processing.c ****     packet_data[0] = CMD_GET_MEASUREMENTS;   
 11629              		.loc 1 2122 0
 11630 0006 8423     		movs	r3, #132
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 271


 11631 0008 3B71     		strb	r3, [r7, #4]
2123:..\src/command_processing.c ****     
2124:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11632              		.loc 1 2124 0
 11633 000a 0323     		movs	r3, #3
 11634 000c FB73     		strb	r3, [r7, #15]
 11635 000e 23E0     		b	.L555
 11636              	.L556:
2125:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11637              		.loc 1 2125 0
 11638 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11639 0012 1C4A     		ldr	r2, .L557
 11640 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11641 0018 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11642 001a 1B49     		ldr	r1, .L557+4
 11643 001c 0A44     		add	r2, r2, r1
 11644 001e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11645 0022 1341     		asrs	r3, r3, r2
 11646 0024 1BB2     		sxth	r3, r3
 11647 0026 BB81     		strh	r3, [r7, #12]	@ movhi
2126:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11648              		.loc 1 2126 0
 11649 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11650 002a 5B00     		lsls	r3, r3, #1
 11651 002c 0233     		adds	r3, r3, #2
 11652 002e 07F10C02 		add	r2, r7, #12
 11653 0032 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11654 0034 07F11001 		add	r1, r7, #16
 11655 0038 0B44     		add	r3, r3, r1
 11656 003a 03F80C2C 		strb	r2, [r3, #-12]
2127:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11657              		.loc 1 2127 0
 11658 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11659 0040 5B00     		lsls	r3, r3, #1
 11660 0042 5A1C     		adds	r2, r3, #1
 11661 0044 07F10C03 		add	r3, r7, #12
 11662 0048 0133     		adds	r3, r3, #1
 11663 004a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11664 004c 07F11003 		add	r3, r7, #16
 11665 0050 1344     		add	r3, r3, r2
 11666 0052 0A46     		mov	r2, r1
 11667 0054 03F80C2C 		strb	r2, [r3, #-12]
 11668              	.L555:
2124:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 11669              		.loc 1 2124 0 discriminator 1
 11670 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11671 005a 5A1E     		subs	r2, r3, #1
 11672 005c FA73     		strb	r2, [r7, #15]
 11673 005e 002B     		cmp	r3, #0
 11674 0060 D6D1     		bne	.L556
2128:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2129:..\src/command_processing.c ****     }
2130:..\src/command_processing.c **** 
2131:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2132:..\src/command_processing.c **** 
2133:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11675              		.loc 1 2133 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 272


 11676 0062 3B1D     		adds	r3, r7, #4
 11677 0064 0721     		movs	r1, #7
 11678 0066 1846     		mov	r0, r3
 11679 0068 FFF7FEFF 		bl	LCRChecksum
 11680 006c 0346     		mov	r3, r0
 11681 006e FB72     		strb	r3, [r7, #11]
2134:..\src/command_processing.c **** 
2135:..\src/command_processing.c ****     commWrite(packet_data, 8);
 11682              		.loc 1 2135 0
 11683 0070 3B1D     		adds	r3, r7, #4
 11684 0072 0821     		movs	r1, #8
 11685 0074 1846     		mov	r0, r3
 11686 0076 FFF7FEFF 		bl	commWrite
2136:..\src/command_processing.c ****    
2137:..\src/command_processing.c **** }
 11687              		.loc 1 2137 0
 11688 007a 00BF     		nop
 11689 007c 1037     		adds	r7, r7, #16
 11690              		.cfi_def_cfa_offset 8
 11691 007e BD46     		mov	sp, r7
 11692              		.cfi_def_cfa_register 13
 11693              		@ sp needed
 11694 0080 80BD     		pop	{r7, pc}
 11695              	.L558:
 11696 0082 00BF     		.align	2
 11697              	.L557:
 11698 0084 00000000 		.word	g_measOld
 11699 0088 00000000 		.word	g_mem
 11700              		.cfi_endproc
 11701              	.LFE83:
 11702              		.size	cmd_get_measurements, .-cmd_get_measurements
 11703              		.section	.text.cmd_get_velocities,"ax",%progbits
 11704              		.align	2
 11705              		.global	cmd_get_velocities
 11706              		.thumb
 11707              		.thumb_func
 11708              		.type	cmd_get_velocities, %function
 11709              	cmd_get_velocities:
 11710              	.LFB84:
2138:..\src/command_processing.c **** 
2139:..\src/command_processing.c **** void cmd_get_velocities(){
 11711              		.loc 1 2139 0
 11712              		.cfi_startproc
 11713              		@ args = 0, pretend = 0, frame = 16
 11714              		@ frame_needed = 1, uses_anonymous_args = 0
 11715 0000 80B5     		push	{r7, lr}
 11716              		.cfi_def_cfa_offset 8
 11717              		.cfi_offset 7, -8
 11718              		.cfi_offset 14, -4
 11719 0002 84B0     		sub	sp, sp, #16
 11720              		.cfi_def_cfa_offset 24
 11721 0004 00AF     		add	r7, sp, #0
 11722              		.cfi_def_cfa_register 7
2140:..\src/command_processing.c ****  
2141:..\src/command_processing.c ****     uint8 CYDATA index;
2142:..\src/command_processing.c ****     int16 aux_int16;
2143:..\src/command_processing.c ****    
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 273


2144:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2145:..\src/command_processing.c ****     
2146:..\src/command_processing.c ****     uint8 packet_data[8]; 
2147:..\src/command_processing.c ****     
2148:..\src/command_processing.c ****     //Header package
2149:..\src/command_processing.c ****     packet_data[0] = CMD_GET_VELOCITIES;
 11723              		.loc 1 2149 0
 11724 0006 8923     		movs	r3, #137
 11725 0008 3B71     		strb	r3, [r7, #4]
2150:..\src/command_processing.c ****     
2151:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11726              		.loc 1 2151 0
 11727 000a 0323     		movs	r3, #3
 11728 000c FB73     		strb	r3, [r7, #15]
 11729 000e 24E0     		b	.L560
 11730              	.L561:
2152:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 11731              		.loc 1 2152 0
 11732 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11733 0012 1C4A     		ldr	r2, .L562
 11734 0014 0833     		adds	r3, r3, #8
 11735 0016 52F82330 		ldr	r3, [r2, r3, lsl #2]
 11736 001a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11737 001c 1A49     		ldr	r1, .L562+4
 11738 001e 0A44     		add	r2, r2, r1
 11739 0020 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11740 0024 1341     		asrs	r3, r3, r2
 11741 0026 1BB2     		sxth	r3, r3
 11742 0028 BB81     		strh	r3, [r7, #12]	@ movhi
2153:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11743              		.loc 1 2153 0
 11744 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11745 002c 5B00     		lsls	r3, r3, #1
 11746 002e 0233     		adds	r3, r3, #2
 11747 0030 07F10C02 		add	r2, r7, #12
 11748 0034 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11749 0036 07F11001 		add	r1, r7, #16
 11750 003a 0B44     		add	r3, r3, r1
 11751 003c 03F80C2C 		strb	r2, [r3, #-12]
2154:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11752              		.loc 1 2154 0
 11753 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11754 0042 5B00     		lsls	r3, r3, #1
 11755 0044 5A1C     		adds	r2, r3, #1
 11756 0046 07F10C03 		add	r3, r7, #12
 11757 004a 0133     		adds	r3, r3, #1
 11758 004c 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 11759 004e 07F11003 		add	r3, r7, #16
 11760 0052 1344     		add	r3, r3, r2
 11761 0054 0A46     		mov	r2, r1
 11762 0056 03F80C2C 		strb	r2, [r3, #-12]
 11763              	.L560:
2151:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.vel[index] >> g_mem.res[index]);
 11764              		.loc 1 2151 0 discriminator 1
 11765 005a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11766 005c 5A1E     		subs	r2, r3, #1
 11767 005e FA73     		strb	r2, [r7, #15]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 274


 11768 0060 002B     		cmp	r3, #0
 11769 0062 D5D1     		bne	.L561
2155:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16) (g_measOld.vel[index] >> g_mem.res[
2156:..\src/command_processing.c ****     }
2157:..\src/command_processing.c ****             
2158:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2159:..\src/command_processing.c **** 
2160:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11770              		.loc 1 2160 0
 11771 0064 3B1D     		adds	r3, r7, #4
 11772 0066 0721     		movs	r1, #7
 11773 0068 1846     		mov	r0, r3
 11774 006a FFF7FEFF 		bl	LCRChecksum
 11775 006e 0346     		mov	r3, r0
 11776 0070 FB72     		strb	r3, [r7, #11]
2161:..\src/command_processing.c **** 
2162:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 11777              		.loc 1 2162 0
 11778 0072 3B1D     		adds	r3, r7, #4
 11779 0074 0821     		movs	r1, #8
 11780 0076 1846     		mov	r0, r3
 11781 0078 FFF7FEFF 		bl	commWrite
2163:..\src/command_processing.c **** }
 11782              		.loc 1 2163 0
 11783 007c 00BF     		nop
 11784 007e 1037     		adds	r7, r7, #16
 11785              		.cfi_def_cfa_offset 8
 11786 0080 BD46     		mov	sp, r7
 11787              		.cfi_def_cfa_register 13
 11788              		@ sp needed
 11789 0082 80BD     		pop	{r7, pc}
 11790              	.L563:
 11791              		.align	2
 11792              	.L562:
 11793 0084 00000000 		.word	g_measOld
 11794 0088 00000000 		.word	g_mem
 11795              		.cfi_endproc
 11796              	.LFE84:
 11797              		.size	cmd_get_velocities, .-cmd_get_velocities
 11798              		.section	.text.cmd_get_accelerations,"ax",%progbits
 11799              		.align	2
 11800              		.global	cmd_get_accelerations
 11801              		.thumb
 11802              		.thumb_func
 11803              		.type	cmd_get_accelerations, %function
 11804              	cmd_get_accelerations:
 11805              	.LFB85:
2164:..\src/command_processing.c **** 
2165:..\src/command_processing.c **** void cmd_get_accelerations(){
 11806              		.loc 1 2165 0
 11807              		.cfi_startproc
 11808              		@ args = 0, pretend = 0, frame = 16
 11809              		@ frame_needed = 1, uses_anonymous_args = 0
 11810 0000 80B5     		push	{r7, lr}
 11811              		.cfi_def_cfa_offset 8
 11812              		.cfi_offset 7, -8
 11813              		.cfi_offset 14, -4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 275


 11814 0002 84B0     		sub	sp, sp, #16
 11815              		.cfi_def_cfa_offset 24
 11816 0004 00AF     		add	r7, sp, #0
 11817              		.cfi_def_cfa_register 7
2166:..\src/command_processing.c ****  
2167:..\src/command_processing.c ****     uint8 CYDATA index;
2168:..\src/command_processing.c ****     int16 aux_int16;
2169:..\src/command_processing.c ****     
2170:..\src/command_processing.c ****     // Packet: header + measure(int16) + crc
2171:..\src/command_processing.c ****     
2172:..\src/command_processing.c ****     uint8 packet_data[8]; 
2173:..\src/command_processing.c ****     
2174:..\src/command_processing.c ****     //Header package
2175:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACCEL;   
 11818              		.loc 1 2175 0
 11819 0006 8B23     		movs	r3, #139
 11820 0008 3B71     		strb	r3, [r7, #4]
2176:..\src/command_processing.c ****     
2177:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 11821              		.loc 1 2177 0
 11822 000a 0323     		movs	r3, #3
 11823 000c FB73     		strb	r3, [r7, #15]
 11824 000e 25E0     		b	.L565
 11825              	.L566:
2178:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 11826              		.loc 1 2178 0
 11827 0010 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11828 0012 1D4A     		ldr	r2, .L567
 11829 0014 0A33     		adds	r3, r3, #10
 11830 0016 9B00     		lsls	r3, r3, #2
 11831 0018 1344     		add	r3, r3, r2
 11832 001a 5B68     		ldr	r3, [r3, #4]
 11833 001c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 11834 001e 1B49     		ldr	r1, .L567+4
 11835 0020 0A44     		add	r2, r2, r1
 11836 0022 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11837 0026 1341     		asrs	r3, r3, r2
 11838 0028 1BB2     		sxth	r3, r3
 11839 002a BB81     		strh	r3, [r7, #12]	@ movhi
2179:..\src/command_processing.c ****         packet_data[(index << 1) + 2] = ((char*)(&aux_int16))[0];
 11840              		.loc 1 2179 0
 11841 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11842 002e 5B00     		lsls	r3, r3, #1
 11843 0030 0233     		adds	r3, r3, #2
 11844 0032 07F10C02 		add	r2, r7, #12
 11845 0036 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 11846 0038 07F11001 		add	r1, r7, #16
 11847 003c 0B44     		add	r3, r3, r1
 11848 003e 03F80C2C 		strb	r2, [r3, #-12]
2180:..\src/command_processing.c ****         packet_data[(index << 1) + 1] = ((char*)(&aux_int16))[1];
 11849              		.loc 1 2180 0
 11850 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11851 0044 5B00     		lsls	r3, r3, #1
 11852 0046 5A1C     		adds	r2, r3, #1
 11853 0048 07F10C03 		add	r3, r7, #12
 11854 004c 0133     		adds	r3, r3, #1
 11855 004e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 276


 11856 0050 07F11003 		add	r3, r7, #16
 11857 0054 1344     		add	r3, r3, r2
 11858 0056 0A46     		mov	r2, r1
 11859 0058 03F80C2C 		strb	r2, [r3, #-12]
 11860              	.L565:
2177:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.acc[index] >> g_mem.res[index]);
 11861              		.loc 1 2177 0 discriminator 1
 11862 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 11863 005e 5A1E     		subs	r2, r3, #1
 11864 0060 FA73     		strb	r2, [r7, #15]
 11865 0062 002B     		cmp	r3, #0
 11866 0064 D4D1     		bne	.L566
2181:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 1]) = (int16)(g_measOld.acc[index] >> g_mem.res[i
2182:..\src/command_processing.c ****     }
2183:..\src/command_processing.c ****     
2184:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2185:..\src/command_processing.c **** 
2186:..\src/command_processing.c ****     packet_data[7] = LCRChecksum (packet_data, 7);
 11867              		.loc 1 2186 0
 11868 0066 3B1D     		adds	r3, r7, #4
 11869 0068 0721     		movs	r1, #7
 11870 006a 1846     		mov	r0, r3
 11871 006c FFF7FEFF 		bl	LCRChecksum
 11872 0070 0346     		mov	r3, r0
 11873 0072 FB72     		strb	r3, [r7, #11]
2187:..\src/command_processing.c **** 
2188:..\src/command_processing.c ****     commWrite(packet_data, 8); 
 11874              		.loc 1 2188 0
 11875 0074 3B1D     		adds	r3, r7, #4
 11876 0076 0821     		movs	r1, #8
 11877 0078 1846     		mov	r0, r3
 11878 007a FFF7FEFF 		bl	commWrite
2189:..\src/command_processing.c **** }
 11879              		.loc 1 2189 0
 11880 007e 00BF     		nop
 11881 0080 1037     		adds	r7, r7, #16
 11882              		.cfi_def_cfa_offset 8
 11883 0082 BD46     		mov	sp, r7
 11884              		.cfi_def_cfa_register 13
 11885              		@ sp needed
 11886 0084 80BD     		pop	{r7, pc}
 11887              	.L568:
 11888 0086 00BF     		.align	2
 11889              	.L567:
 11890 0088 00000000 		.word	g_measOld
 11891 008c 00000000 		.word	g_mem
 11892              		.cfi_endproc
 11893              	.LFE85:
 11894              		.size	cmd_get_accelerations, .-cmd_get_accelerations
 11895              		.section	.text.cmd_set_inputs,"ax",%progbits
 11896              		.align	2
 11897              		.global	cmd_set_inputs
 11898              		.thumb
 11899              		.thumb_func
 11900              		.type	cmd_set_inputs, %function
 11901              	cmd_set_inputs:
 11902              	.LFB86:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 277


2190:..\src/command_processing.c **** 
2191:..\src/command_processing.c **** void cmd_set_inputs(){
 11903              		.loc 1 2191 0
 11904              		.cfi_startproc
 11905              		@ args = 0, pretend = 0, frame = 8
 11906              		@ frame_needed = 1, uses_anonymous_args = 0
 11907              		@ link register save eliminated.
 11908 0000 80B4     		push	{r7}
 11909              		.cfi_def_cfa_offset 4
 11910              		.cfi_offset 7, -4
 11911 0002 83B0     		sub	sp, sp, #12
 11912              		.cfi_def_cfa_offset 16
 11913 0004 00AF     		add	r7, sp, #0
 11914              		.cfi_def_cfa_register 7
2192:..\src/command_processing.c ****     
2193:..\src/command_processing.c ****     // Store position setted in right variables
2194:..\src/command_processing.c ****     int16 aux_int16 = (int16)(g_rx.buffer[1]<<8 | g_rx.buffer[2]);
 11915              		.loc 1 2194 0
 11916 0006 2A4B     		ldr	r3, .L576
 11917 0008 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 11918 000a 1B02     		lsls	r3, r3, #8
 11919 000c 1AB2     		sxth	r2, r3
 11920 000e 284B     		ldr	r3, .L576
 11921 0010 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 11922 0012 1BB2     		sxth	r3, r3
 11923 0014 1343     		orrs	r3, r3, r2
 11924 0016 FB80     		strh	r3, [r7, #6]	@ movhi
2195:..\src/command_processing.c ****     
2196:..\src/command_processing.c ****     if(g_mem.control_mode == CONTROL_CURRENT) {
 11925              		.loc 1 2196 0
 11926 0018 264B     		ldr	r3, .L576+4
 11927 001a 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11928 001e 022B     		cmp	r3, #2
 11929 0020 04D1     		bne	.L570
2197:..\src/command_processing.c ****         g_refNew.curr = aux_int16;
 11930              		.loc 1 2197 0
 11931 0022 B7F90630 		ldrsh	r3, [r7, #6]
 11932 0026 244A     		ldr	r2, .L576+8
 11933 0028 5360     		str	r3, [r2, #4]
 11934 002a 15E0     		b	.L571
 11935              	.L570:
2198:..\src/command_processing.c ****         //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2199:..\src/command_processing.c ****     }
2200:..\src/command_processing.c ****     else {
2201:..\src/command_processing.c ****         if(g_mem.control_mode == CONTROL_PWM) {
 11936              		.loc 1 2201 0
 11937 002c 214B     		ldr	r3, .L576+4
 11938 002e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11939 0032 012B     		cmp	r3, #1
 11940 0034 04D1     		bne	.L572
2202:..\src/command_processing.c ****             g_refNew.pwm = aux_int16;
 11941              		.loc 1 2202 0
 11942 0036 B7F90630 		ldrsh	r3, [r7, #6]
 11943 003a 1F4A     		ldr	r2, .L576+8
 11944 003c 9360     		str	r3, [r2, #8]
 11945 003e 0BE0     		b	.L571
 11946              	.L572:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 278


2203:..\src/command_processing.c ****             //g_refNew.pwm = *((int16 *) &g_rx.buffer[1]);
2204:..\src/command_processing.c ****         }
2205:..\src/command_processing.c ****         else {
2206:..\src/command_processing.c ****             g_refNew.pos = aux_int16;   // motor 1
 11947              		.loc 1 2206 0
 11948 0040 B7F90630 		ldrsh	r3, [r7, #6]
 11949 0044 1C4A     		ldr	r2, .L576+8
 11950 0046 1360     		str	r3, [r2]
2207:..\src/command_processing.c ****             //g_refNew.pos = *((int16 *) &g_rx.buffer[1]);   // motor 1
2208:..\src/command_processing.c ****             g_refNew.pos = g_refNew.pos << g_mem.res[0];
 11951              		.loc 1 2208 0
 11952 0048 1B4B     		ldr	r3, .L576+8
 11953 004a 1B68     		ldr	r3, [r3]
 11954 004c 194A     		ldr	r2, .L576+4
 11955 004e 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 11956 0052 9340     		lsls	r3, r3, r2
 11957 0054 184A     		ldr	r2, .L576+8
 11958 0056 1360     		str	r3, [r2]
 11959              	.L571:
2209:..\src/command_processing.c ****         }
2210:..\src/command_processing.c ****     }     
2211:..\src/command_processing.c **** 
2212:..\src/command_processing.c ****     // Check if the reference is nor higher or lower than the position limits
2213:..\src/command_processing.c ****     if (c_mem.pos_lim_flag && (g_mem.control_mode == CURR_AND_POS_CONTROL || g_mem.control_mode == 
 11960              		.loc 1 2213 0
 11961 0058 184B     		ldr	r3, .L576+12
 11962 005a 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 11963 005e 002B     		cmp	r3, #0
 11964 0060 1DD0     		beq	.L573
 11965              		.loc 1 2213 0 is_stmt 0 discriminator 1
 11966 0062 144B     		ldr	r3, .L576+4
 11967 0064 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11968 0068 032B     		cmp	r3, #3
 11969 006a 04D0     		beq	.L574
 11970              		.loc 1 2213 0 discriminator 2
 11971 006c 114B     		ldr	r3, .L576+4
 11972 006e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 11973 0072 002B     		cmp	r3, #0
 11974 0074 13D1     		bne	.L573
 11975              	.L574:
2214:..\src/command_processing.c ****         
2215:..\src/command_processing.c ****         if (g_refNew.pos < c_mem.pos_lim_inf) 
 11976              		.loc 1 2215 0 is_stmt 1
 11977 0076 104B     		ldr	r3, .L576+8
 11978 0078 1A68     		ldr	r2, [r3]
 11979 007a 104B     		ldr	r3, .L576+12
 11980 007c 9B6D     		ldr	r3, [r3, #88]
 11981 007e 9A42     		cmp	r2, r3
 11982 0080 03DA     		bge	.L575
2216:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_inf;
 11983              		.loc 1 2216 0
 11984 0082 0E4B     		ldr	r3, .L576+12
 11985 0084 9B6D     		ldr	r3, [r3, #88]
 11986 0086 0C4A     		ldr	r2, .L576+8
 11987 0088 1360     		str	r3, [r2]
 11988              	.L575:
2217:..\src/command_processing.c **** 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 279


2218:..\src/command_processing.c ****         if (g_refNew.pos > c_mem.pos_lim_sup) 
 11989              		.loc 1 2218 0
 11990 008a 0B4B     		ldr	r3, .L576+8
 11991 008c 1A68     		ldr	r2, [r3]
 11992 008e 0B4B     		ldr	r3, .L576+12
 11993 0090 DB6D     		ldr	r3, [r3, #92]
 11994 0092 9A42     		cmp	r2, r3
 11995 0094 03DD     		ble	.L573
2219:..\src/command_processing.c ****             g_refNew.pos = c_mem.pos_lim_sup;
 11996              		.loc 1 2219 0
 11997 0096 094B     		ldr	r3, .L576+12
 11998 0098 DB6D     		ldr	r3, [r3, #92]
 11999 009a 074A     		ldr	r2, .L576+8
 12000 009c 1360     		str	r3, [r2]
 12001              	.L573:
2220:..\src/command_processing.c ****     }
2221:..\src/command_processing.c ****     
2222:..\src/command_processing.c ****     change_ext_ref_flag = TRUE;
 12002              		.loc 1 2222 0
 12003 009e 084B     		ldr	r3, .L576+16
 12004 00a0 0122     		movs	r2, #1
 12005 00a2 1A70     		strb	r2, [r3]
2223:..\src/command_processing.c **** }
 12006              		.loc 1 2223 0
 12007 00a4 00BF     		nop
 12008 00a6 0C37     		adds	r7, r7, #12
 12009              		.cfi_def_cfa_offset 4
 12010 00a8 BD46     		mov	sp, r7
 12011              		.cfi_def_cfa_register 13
 12012              		@ sp needed
 12013 00aa 80BC     		pop	{r7}
 12014              		.cfi_restore 7
 12015              		.cfi_def_cfa_offset 0
 12016 00ac 7047     		bx	lr
 12017              	.L577:
 12018 00ae 00BF     		.align	2
 12019              	.L576:
 12020 00b0 00000000 		.word	g_rx
 12021 00b4 00000000 		.word	g_mem
 12022 00b8 00000000 		.word	g_refNew
 12023 00bc 00000000 		.word	c_mem
 12024 00c0 00000000 		.word	change_ext_ref_flag
 12025              		.cfi_endproc
 12026              	.LFE86:
 12027              		.size	cmd_set_inputs, .-cmd_set_inputs
 12028              		.section	.text.cmd_activate,"ax",%progbits
 12029              		.align	2
 12030              		.global	cmd_activate
 12031              		.thumb
 12032              		.thumb_func
 12033              		.type	cmd_activate, %function
 12034              	cmd_activate:
 12035              	.LFB87:
2224:..\src/command_processing.c **** 
2225:..\src/command_processing.c **** void cmd_activate(){
 12036              		.loc 1 2225 0
 12037              		.cfi_startproc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 280


 12038              		@ args = 0, pretend = 0, frame = 0
 12039              		@ frame_needed = 1, uses_anonymous_args = 0
 12040 0000 80B5     		push	{r7, lr}
 12041              		.cfi_def_cfa_offset 8
 12042              		.cfi_offset 7, -8
 12043              		.cfi_offset 14, -4
 12044 0002 00AF     		add	r7, sp, #0
 12045              		.cfi_def_cfa_register 7
2226:..\src/command_processing.c ****     
2227:..\src/command_processing.c ****     // Store new value reads
2228:..\src/command_processing.c ****     g_refNew.onoff = g_rx.buffer[1];
 12046              		.loc 1 2228 0
 12047 0004 0C4B     		ldr	r3, .L581
 12048 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 12049 0008 0C4B     		ldr	r3, .L581+4
 12050 000a 1A73     		strb	r2, [r3, #12]
2229:..\src/command_processing.c ****     
2230:..\src/command_processing.c ****     // Check type of control mode enabled
2231:..\src/command_processing.c ****     if ((g_mem.control_mode == CONTROL_ANGLE) || (g_mem.control_mode == CURR_AND_POS_CONTROL)) {
 12051              		.loc 1 2231 0
 12052 000c 0C4B     		ldr	r3, .L581+8
 12053 000e 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 12054 0012 002B     		cmp	r3, #0
 12055 0014 04D0     		beq	.L579
 12056              		.loc 1 2231 0 is_stmt 0 discriminator 1
 12057 0016 0A4B     		ldr	r3, .L581+8
 12058 0018 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 12059 001c 032B     		cmp	r3, #3
 12060 001e 03D1     		bne	.L580
 12061              	.L579:
2232:..\src/command_processing.c ****         g_refNew.pos = g_meas.pos[0];
 12062              		.loc 1 2232 0 is_stmt 1
 12063 0020 084B     		ldr	r3, .L581+12
 12064 0022 1B68     		ldr	r3, [r3]
 12065 0024 054A     		ldr	r2, .L581+4
 12066 0026 1360     		str	r3, [r2]
 12067              	.L580:
2233:..\src/command_processing.c ****     }
2234:..\src/command_processing.c **** 
2235:..\src/command_processing.c ****     // Activate/Disactivate motor
2236:..\src/command_processing.c ****     MOTOR_ON_OFF_Write(g_refNew.onoff);
 12068              		.loc 1 2236 0
 12069 0028 044B     		ldr	r3, .L581+4
 12070 002a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 12071 002c 1846     		mov	r0, r3
 12072 002e FFF7FEFF 		bl	MOTOR_ON_OFF_Write
2237:..\src/command_processing.c **** }
 12073              		.loc 1 2237 0
 12074 0032 00BF     		nop
 12075 0034 80BD     		pop	{r7, pc}
 12076              	.L582:
 12077 0036 00BF     		.align	2
 12078              	.L581:
 12079 0038 00000000 		.word	g_rx
 12080 003c 00000000 		.word	g_refNew
 12081 0040 00000000 		.word	g_mem
 12082 0044 00000000 		.word	g_meas
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 281


 12083              		.cfi_endproc
 12084              	.LFE87:
 12085              		.size	cmd_activate, .-cmd_activate
 12086              		.section	.text.cmd_get_activate,"ax",%progbits
 12087              		.align	2
 12088              		.global	cmd_get_activate
 12089              		.thumb
 12090              		.thumb_func
 12091              		.type	cmd_get_activate, %function
 12092              	cmd_get_activate:
 12093              	.LFB88:
2238:..\src/command_processing.c **** 
2239:..\src/command_processing.c **** void cmd_get_activate(){
 12094              		.loc 1 2239 0
 12095              		.cfi_startproc
 12096              		@ args = 0, pretend = 0, frame = 8
 12097              		@ frame_needed = 1, uses_anonymous_args = 0
 12098 0000 80B5     		push	{r7, lr}
 12099              		.cfi_def_cfa_offset 8
 12100              		.cfi_offset 7, -8
 12101              		.cfi_offset 14, -4
 12102 0002 82B0     		sub	sp, sp, #8
 12103              		.cfi_def_cfa_offset 16
 12104 0004 00AF     		add	r7, sp, #0
 12105              		.cfi_def_cfa_register 7
2240:..\src/command_processing.c ****     
2241:..\src/command_processing.c ****     uint8 packet_data[3];
2242:..\src/command_processing.c **** 
2243:..\src/command_processing.c ****     // Header        
2244:..\src/command_processing.c ****     packet_data[0] = CMD_GET_ACTIVATE;
 12106              		.loc 1 2244 0
 12107 0006 8123     		movs	r3, #129
 12108 0008 3B71     		strb	r3, [r7, #4]
2245:..\src/command_processing.c ****     
2246:..\src/command_processing.c ****     // Fill payload
2247:..\src/command_processing.c ****     packet_data[1] = g_ref.onoff;
 12109              		.loc 1 2247 0
 12110 000a 094B     		ldr	r3, .L584
 12111 000c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 12112 000e 7B71     		strb	r3, [r7, #5]
2248:..\src/command_processing.c ****     
2249:..\src/command_processing.c ****     // Calculate checksum
2250:..\src/command_processing.c ****     packet_data[2] = LCRChecksum(packet_data, 2);
 12113              		.loc 1 2250 0
 12114 0010 3B1D     		adds	r3, r7, #4
 12115 0012 0221     		movs	r1, #2
 12116 0014 1846     		mov	r0, r3
 12117 0016 FFF7FEFF 		bl	LCRChecksum
 12118 001a 0346     		mov	r3, r0
 12119 001c BB71     		strb	r3, [r7, #6]
2251:..\src/command_processing.c ****     
2252:..\src/command_processing.c ****     // Send package to UART
2253:..\src/command_processing.c ****     commWrite(packet_data, 3);
 12120              		.loc 1 2253 0
 12121 001e 3B1D     		adds	r3, r7, #4
 12122 0020 0321     		movs	r1, #3
 12123 0022 1846     		mov	r0, r3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 282


 12124 0024 FFF7FEFF 		bl	commWrite
2254:..\src/command_processing.c **** 
2255:..\src/command_processing.c **** }
 12125              		.loc 1 2255 0
 12126 0028 00BF     		nop
 12127 002a 0837     		adds	r7, r7, #8
 12128              		.cfi_def_cfa_offset 8
 12129 002c BD46     		mov	sp, r7
 12130              		.cfi_def_cfa_register 13
 12131              		@ sp needed
 12132 002e 80BD     		pop	{r7, pc}
 12133              	.L585:
 12134              		.align	2
 12135              	.L584:
 12136 0030 00000000 		.word	g_ref
 12137              		.cfi_endproc
 12138              	.LFE88:
 12139              		.size	cmd_get_activate, .-cmd_get_activate
 12140              		.section	.text.cmd_get_curr_and_meas,"ax",%progbits
 12141              		.align	2
 12142              		.global	cmd_get_curr_and_meas
 12143              		.thumb
 12144              		.thumb_func
 12145              		.type	cmd_get_curr_and_meas, %function
 12146              	cmd_get_curr_and_meas:
 12147              	.LFB89:
2256:..\src/command_processing.c **** 
2257:..\src/command_processing.c **** void cmd_get_curr_and_meas(){
 12148              		.loc 1 2257 0
 12149              		.cfi_startproc
 12150              		@ args = 0, pretend = 0, frame = 16
 12151              		@ frame_needed = 1, uses_anonymous_args = 0
 12152 0000 80B5     		push	{r7, lr}
 12153              		.cfi_def_cfa_offset 8
 12154              		.cfi_offset 7, -8
 12155              		.cfi_offset 14, -4
 12156 0002 84B0     		sub	sp, sp, #16
 12157              		.cfi_def_cfa_offset 24
 12158 0004 00AF     		add	r7, sp, #0
 12159              		.cfi_def_cfa_register 7
2258:..\src/command_processing.c ****     
2259:..\src/command_processing.c ****     uint8 CYDATA index;
2260:..\src/command_processing.c ****     int16 aux_int16;
2261:..\src/command_processing.c ****    
2262:..\src/command_processing.c ****     //Packet: header + curr_meas(int16) + pos_meas(int16) + CRC
2263:..\src/command_processing.c ****     
2264:..\src/command_processing.c ****     uint8 packet_data[12]; 
2265:..\src/command_processing.c **** 
2266:..\src/command_processing.c ****     //Header package
2267:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURR_AND_MEAS;
 12160              		.loc 1 2267 0
 12161 0006 8623     		movs	r3, #134
 12162 0008 3B70     		strb	r3, [r7]
2268:..\src/command_processing.c **** 
2269:..\src/command_processing.c ****     // Currents
2270:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr; //Real current
 12163              		.loc 1 2270 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 283


 12164 000a 2B4B     		ldr	r3, .L589
 12165 000c DB68     		ldr	r3, [r3, #12]
 12166 000e 1BB2     		sxth	r3, r3
 12167 0010 BB81     		strh	r3, [r7, #12]	@ movhi
2271:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12168              		.loc 1 2271 0
 12169 0012 07F10C03 		add	r3, r7, #12
 12170 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12171 0018 BB70     		strb	r3, [r7, #2]
2272:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12172              		.loc 1 2272 0
 12173 001a 07F10C03 		add	r3, r7, #12
 12174 001e 0133     		adds	r3, r3, #1
 12175 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12176 0022 7B70     		strb	r3, [r7, #1]
2273:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2274:..\src/command_processing.c ****     
2275:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 12177              		.loc 1 2275 0
 12178 0024 244B     		ldr	r3, .L589
 12179 0026 1B69     		ldr	r3, [r3, #16]
 12180 0028 1BB2     		sxth	r3, r3
 12181 002a BB81     		strh	r3, [r7, #12]	@ movhi
2276:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 12182              		.loc 1 2276 0
 12183 002c 07F10C03 		add	r3, r7, #12
 12184 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12185 0032 3B71     		strb	r3, [r7, #4]
2277:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 12186              		.loc 1 2277 0
 12187 0034 07F10C03 		add	r3, r7, #12
 12188 0038 0133     		adds	r3, r3, #1
 12189 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12190 003c FB70     		strb	r3, [r7, #3]
2278:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2279:..\src/command_processing.c **** 
2280:..\src/command_processing.c ****     // Positions
2281:..\src/command_processing.c ****     for (index = NUM_OF_SENSORS; index--;) {
 12191              		.loc 1 2281 0
 12192 003e 0323     		movs	r3, #3
 12193 0040 FB73     		strb	r3, [r7, #15]
 12194 0042 23E0     		b	.L587
 12195              	.L588:
2282:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 12196              		.loc 1 2282 0
 12197 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12198 0046 1C4A     		ldr	r2, .L589
 12199 0048 52F82330 		ldr	r3, [r2, r3, lsl #2]
 12200 004c FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 12201 004e 1B49     		ldr	r1, .L589+4
 12202 0050 0A44     		add	r2, r2, r1
 12203 0052 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 12204 0056 1341     		asrs	r3, r3, r2
 12205 0058 1BB2     		sxth	r3, r3
 12206 005a BB81     		strh	r3, [r7, #12]	@ movhi
2283:..\src/command_processing.c ****         packet_data[(index << 1) + 6] = ((char*)(&aux_int16))[0];
 12207              		.loc 1 2283 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 284


 12208 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12209 005e 5B00     		lsls	r3, r3, #1
 12210 0060 0633     		adds	r3, r3, #6
 12211 0062 07F10C02 		add	r2, r7, #12
 12212 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 12213 0068 07F11001 		add	r1, r7, #16
 12214 006c 0B44     		add	r3, r3, r1
 12215 006e 03F8102C 		strb	r2, [r3, #-16]
2284:..\src/command_processing.c ****         packet_data[(index << 1) + 5] = ((char*)(&aux_int16))[1];
 12216              		.loc 1 2284 0
 12217 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12218 0074 5B00     		lsls	r3, r3, #1
 12219 0076 5A1D     		adds	r2, r3, #5
 12220 0078 07F10C03 		add	r3, r7, #12
 12221 007c 0133     		adds	r3, r3, #1
 12222 007e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12223 0080 07F11003 		add	r3, r7, #16
 12224 0084 1344     		add	r3, r3, r2
 12225 0086 0A46     		mov	r2, r1
 12226 0088 03F8102C 		strb	r2, [r3, #-16]
 12227              	.L587:
2281:..\src/command_processing.c ****         aux_int16 = (int16)(g_measOld.pos[index] >> g_mem.res[index]);
 12228              		.loc 1 2281 0 discriminator 1
 12229 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12230 008e 5A1E     		subs	r2, r3, #1
 12231 0090 FA73     		strb	r2, [r7, #15]
 12232 0092 002B     		cmp	r3, #0
 12233 0094 D6D1     		bne	.L588
2285:..\src/command_processing.c ****         //*((int16 *) &packet_data[(index << 1) + 5]) = (int16)(g_measOld.pos[index] >> g_mem.res[i
2286:..\src/command_processing.c ****     }
2287:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2288:..\src/command_processing.c ****         
2289:..\src/command_processing.c ****     packet_data[11] = LCRChecksum (packet_data, 11);
 12234              		.loc 1 2289 0
 12235 0096 3B46     		mov	r3, r7
 12236 0098 0B21     		movs	r1, #11
 12237 009a 1846     		mov	r0, r3
 12238 009c FFF7FEFF 		bl	LCRChecksum
 12239 00a0 0346     		mov	r3, r0
 12240 00a2 FB72     		strb	r3, [r7, #11]
2290:..\src/command_processing.c ****     commWrite(packet_data, 12);
 12241              		.loc 1 2290 0
 12242 00a4 3B46     		mov	r3, r7
 12243 00a6 0C21     		movs	r1, #12
 12244 00a8 1846     		mov	r0, r3
 12245 00aa FFF7FEFF 		bl	commWrite
2291:..\src/command_processing.c ****    
2292:..\src/command_processing.c **** }
 12246              		.loc 1 2292 0
 12247 00ae 00BF     		nop
 12248 00b0 1037     		adds	r7, r7, #16
 12249              		.cfi_def_cfa_offset 8
 12250 00b2 BD46     		mov	sp, r7
 12251              		.cfi_def_cfa_register 13
 12252              		@ sp needed
 12253 00b4 80BD     		pop	{r7, pc}
 12254              	.L590:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 285


 12255 00b6 00BF     		.align	2
 12256              	.L589:
 12257 00b8 00000000 		.word	g_measOld
 12258 00bc 00000000 		.word	g_mem
 12259              		.cfi_endproc
 12260              	.LFE89:
 12261              		.size	cmd_get_curr_and_meas, .-cmd_get_curr_and_meas
 12262              		.section	.text.cmd_get_currents,"ax",%progbits
 12263              		.align	2
 12264              		.global	cmd_get_currents
 12265              		.thumb
 12266              		.thumb_func
 12267              		.type	cmd_get_currents, %function
 12268              	cmd_get_currents:
 12269              	.LFB90:
2293:..\src/command_processing.c **** 
2294:..\src/command_processing.c **** void cmd_get_currents(){
 12270              		.loc 1 2294 0
 12271              		.cfi_startproc
 12272              		@ args = 0, pretend = 0, frame = 16
 12273              		@ frame_needed = 1, uses_anonymous_args = 0
 12274 0000 80B5     		push	{r7, lr}
 12275              		.cfi_def_cfa_offset 8
 12276              		.cfi_offset 7, -8
 12277              		.cfi_offset 14, -4
 12278 0002 84B0     		sub	sp, sp, #16
 12279              		.cfi_def_cfa_offset 24
 12280 0004 00AF     		add	r7, sp, #0
 12281              		.cfi_def_cfa_register 7
2295:..\src/command_processing.c ****     
2296:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2297:..\src/command_processing.c ****     
2298:..\src/command_processing.c ****     uint8 packet_data[6]; 
2299:..\src/command_processing.c ****     int16 aux_int16;
2300:..\src/command_processing.c ****     
2301:..\src/command_processing.c ****     //Header package
2302:..\src/command_processing.c **** 
2303:..\src/command_processing.c ****     packet_data[0] = CMD_GET_CURRENTS;
 12282              		.loc 1 2303 0
 12283 0006 8523     		movs	r3, #133
 12284 0008 3B72     		strb	r3, [r7, #8]
2304:..\src/command_processing.c **** 
2305:..\src/command_processing.c ****     // Currents
2306:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.curr; //Real current
 12285              		.loc 1 2306 0
 12286 000a 144B     		ldr	r3, .L592
 12287 000c DB68     		ldr	r3, [r3, #12]
 12288 000e 1BB2     		sxth	r3, r3
 12289 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2307:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12290              		.loc 1 2307 0
 12291 0012 BB1D     		adds	r3, r7, #6
 12292 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12293 0016 BB72     		strb	r3, [r7, #10]
2308:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12294              		.loc 1 2308 0
 12295 0018 BB1D     		adds	r3, r7, #6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 286


 12296 001a 0133     		adds	r3, r3, #1
 12297 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12298 001e 7B72     		strb	r3, [r7, #9]
2309:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.curr; //Real current
2310:..\src/command_processing.c ****     
2311:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated current
 12299              		.loc 1 2311 0
 12300 0020 0E4B     		ldr	r3, .L592
 12301 0022 1B69     		ldr	r3, [r3, #16]
 12302 0024 1BB2     		sxth	r3, r3
 12303 0026 FB80     		strh	r3, [r7, #6]	@ movhi
2312:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 12304              		.loc 1 2312 0
 12305 0028 BB1D     		adds	r3, r7, #6
 12306 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12307 002c 3B73     		strb	r3, [r7, #12]
2313:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 12308              		.loc 1 2313 0
 12309 002e BB1D     		adds	r3, r7, #6
 12310 0030 0133     		adds	r3, r3, #1
 12311 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12312 0034 FB72     		strb	r3, [r7, #11]
2314:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.estim_curr; //Estimated current
2315:..\src/command_processing.c **** 
2316:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2317:..\src/command_processing.c **** 
2318:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 12313              		.loc 1 2318 0
 12314 0036 07F10803 		add	r3, r7, #8
 12315 003a 0521     		movs	r1, #5
 12316 003c 1846     		mov	r0, r3
 12317 003e FFF7FEFF 		bl	LCRChecksum
 12318 0042 0346     		mov	r3, r0
 12319 0044 7B73     		strb	r3, [r7, #13]
2319:..\src/command_processing.c ****     
2320:..\src/command_processing.c ****     commWrite(packet_data, 6);
 12320              		.loc 1 2320 0
 12321 0046 07F10803 		add	r3, r7, #8
 12322 004a 0621     		movs	r1, #6
 12323 004c 1846     		mov	r0, r3
 12324 004e FFF7FEFF 		bl	commWrite
2321:..\src/command_processing.c **** }
 12325              		.loc 1 2321 0
 12326 0052 00BF     		nop
 12327 0054 1037     		adds	r7, r7, #16
 12328              		.cfi_def_cfa_offset 8
 12329 0056 BD46     		mov	sp, r7
 12330              		.cfi_def_cfa_register 13
 12331              		@ sp needed
 12332 0058 80BD     		pop	{r7, pc}
 12333              	.L593:
 12334 005a 00BF     		.align	2
 12335              	.L592:
 12336 005c 00000000 		.word	g_measOld
 12337              		.cfi_endproc
 12338              	.LFE90:
 12339              		.size	cmd_get_currents, .-cmd_get_currents
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 287


 12340              		.section	.text.cmd_get_currents_for_cuff,"ax",%progbits
 12341              		.align	2
 12342              		.global	cmd_get_currents_for_cuff
 12343              		.thumb
 12344              		.thumb_func
 12345              		.type	cmd_get_currents_for_cuff, %function
 12346              	cmd_get_currents_for_cuff:
 12347              	.LFB91:
2322:..\src/command_processing.c **** 
2323:..\src/command_processing.c **** void cmd_get_currents_for_cuff(){
 12348              		.loc 1 2323 0
 12349              		.cfi_startproc
 12350              		@ args = 0, pretend = 0, frame = 8
 12351              		@ frame_needed = 1, uses_anonymous_args = 0
 12352 0000 80B5     		push	{r7, lr}
 12353              		.cfi_def_cfa_offset 8
 12354              		.cfi_offset 7, -8
 12355              		.cfi_offset 14, -4
 12356 0002 82B0     		sub	sp, sp, #8
 12357              		.cfi_def_cfa_offset 16
 12358 0004 00AF     		add	r7, sp, #0
 12359              		.cfi_def_cfa_register 7
2324:..\src/command_processing.c ****     
2325:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2326:..\src/command_processing.c ****     
2327:..\src/command_processing.c ****     uint8 packet_data[4]; 
2328:..\src/command_processing.c ****     int16 aux_int16;
2329:..\src/command_processing.c ****     
2330:..\src/command_processing.c ****     //Header package
2331:..\src/command_processing.c **** 
2332:..\src/command_processing.c ****     packet_data[0] = CMD_SET_CUFF_INPUTS;
 12360              		.loc 1 2332 0
 12361 0006 8E23     		movs	r3, #142
 12362 0008 3B71     		strb	r3, [r7, #4]
2333:..\src/command_processing.c **** 
2334:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.estim_curr; //Estimated Current
 12363              		.loc 1 2334 0
 12364 000a 0D4B     		ldr	r3, .L595
 12365 000c 1B69     		ldr	r3, [r3, #16]
 12366 000e 1BB2     		sxth	r3, r3
 12367 0010 7B80     		strh	r3, [r7, #2]	@ movhi
2335:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12368              		.loc 1 2335 0
 12369 0012 BB1C     		adds	r3, r7, #2
 12370 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12371 0016 BB71     		strb	r3, [r7, #6]
2336:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12372              		.loc 1 2336 0
 12373 0018 BB1C     		adds	r3, r7, #2
 12374 001a 0133     		adds	r3, r3, #1
 12375 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12376 001e 7B71     		strb	r3, [r7, #5]
2337:..\src/command_processing.c ****    // *((int16 *) &packet_data[1]) = (int16) g_measOld.estim_curr; //Estimated Current
2338:..\src/command_processing.c **** 
2339:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2340:..\src/command_processing.c **** 
2341:..\src/command_processing.c ****     packet_data[3] = LCRChecksum (packet_data, 3);
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 288


 12377              		.loc 1 2341 0
 12378 0020 3B1D     		adds	r3, r7, #4
 12379 0022 0321     		movs	r1, #3
 12380 0024 1846     		mov	r0, r3
 12381 0026 FFF7FEFF 		bl	LCRChecksum
 12382 002a 0346     		mov	r3, r0
 12383 002c FB71     		strb	r3, [r7, #7]
2342:..\src/command_processing.c ****     
2343:..\src/command_processing.c ****     commWrite_to_cuff(packet_data, 4);
 12384              		.loc 1 2343 0
 12385 002e 3B1D     		adds	r3, r7, #4
 12386 0030 0421     		movs	r1, #4
 12387 0032 1846     		mov	r0, r3
 12388 0034 FFF7FEFF 		bl	commWrite_to_cuff
2344:..\src/command_processing.c **** }
 12389              		.loc 1 2344 0
 12390 0038 00BF     		nop
 12391 003a 0837     		adds	r7, r7, #8
 12392              		.cfi_def_cfa_offset 8
 12393 003c BD46     		mov	sp, r7
 12394              		.cfi_def_cfa_register 13
 12395              		@ sp needed
 12396 003e 80BD     		pop	{r7, pc}
 12397              	.L596:
 12398              		.align	2
 12399              	.L595:
 12400 0040 00000000 		.word	g_measOld
 12401              		.cfi_endproc
 12402              	.LFE91:
 12403              		.size	cmd_get_currents_for_cuff, .-cmd_get_currents_for_cuff
 12404              		.section	.text.cmd_set_baudrate,"ax",%progbits
 12405              		.align	2
 12406              		.global	cmd_set_baudrate
 12407              		.thumb
 12408              		.thumb_func
 12409              		.type	cmd_set_baudrate, %function
 12410              	cmd_set_baudrate:
 12411              	.LFB92:
2345:..\src/command_processing.c **** 
2346:..\src/command_processing.c **** void cmd_set_baudrate(){
 12412              		.loc 1 2346 0
 12413              		.cfi_startproc
 12414              		@ args = 0, pretend = 0, frame = 0
 12415              		@ frame_needed = 1, uses_anonymous_args = 0
 12416 0000 80B5     		push	{r7, lr}
 12417              		.cfi_def_cfa_offset 8
 12418              		.cfi_offset 7, -8
 12419              		.cfi_offset 14, -4
 12420 0002 00AF     		add	r7, sp, #0
 12421              		.cfi_def_cfa_register 7
2347:..\src/command_processing.c ****     
2348:..\src/command_processing.c ****     // Set BaudRate
2349:..\src/command_processing.c ****     c_mem.baud_rate = g_rx.buffer[1];
 12422              		.loc 1 2349 0
 12423 0004 094B     		ldr	r3, .L602
 12424 0006 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 12425 0008 094B     		ldr	r3, .L602+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 289


 12426 000a 83F89420 		strb	r2, [r3, #148]
2350:..\src/command_processing.c ****     
2351:..\src/command_processing.c ****     switch(g_rx.buffer[1]){
 12427              		.loc 1 2351 0
 12428 000e 074B     		ldr	r3, .L602
 12429 0010 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 12430 0012 0D2B     		cmp	r3, #13
 12431 0014 04D1     		bne	.L601
2352:..\src/command_processing.c ****         case 13:
2353:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(13);
 12432              		.loc 1 2353 0
 12433 0016 0121     		movs	r1, #1
 12434 0018 0C20     		movs	r0, #12
 12435 001a FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
2354:..\src/command_processing.c ****             break;
 12436              		.loc 1 2354 0
 12437 001e 03E0     		b	.L600
 12438              	.L601:
2355:..\src/command_processing.c ****         default:
2356:..\src/command_processing.c ****             CLOCK_UART_SetDividerValue(3);
 12439              		.loc 1 2356 0
 12440 0020 0121     		movs	r1, #1
 12441 0022 0220     		movs	r0, #2
 12442 0024 FFF7FEFF 		bl	CLOCK_UART_SetDividerRegister
 12443              	.L600:
2357:..\src/command_processing.c ****     }
2358:..\src/command_processing.c **** }
 12444              		.loc 1 2358 0
 12445 0028 00BF     		nop
 12446 002a 80BD     		pop	{r7, pc}
 12447              	.L603:
 12448              		.align	2
 12449              	.L602:
 12450 002c 00000000 		.word	g_rx
 12451 0030 00000000 		.word	c_mem
 12452              		.cfi_endproc
 12453              	.LFE92:
 12454              		.size	cmd_set_baudrate, .-cmd_set_baudrate
 12455              		.section	.text.cmd_ping,"ax",%progbits
 12456              		.align	2
 12457              		.global	cmd_ping
 12458              		.thumb
 12459              		.thumb_func
 12460              		.type	cmd_ping, %function
 12461              	cmd_ping:
 12462              	.LFB93:
2359:..\src/command_processing.c **** 
2360:..\src/command_processing.c **** void cmd_ping(){
 12463              		.loc 1 2360 0
 12464              		.cfi_startproc
 12465              		@ args = 0, pretend = 0, frame = 8
 12466              		@ frame_needed = 1, uses_anonymous_args = 0
 12467 0000 80B5     		push	{r7, lr}
 12468              		.cfi_def_cfa_offset 8
 12469              		.cfi_offset 7, -8
 12470              		.cfi_offset 14, -4
 12471 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 290


 12472              		.cfi_def_cfa_offset 16
 12473 0004 00AF     		add	r7, sp, #0
 12474              		.cfi_def_cfa_register 7
2361:..\src/command_processing.c **** 
2362:..\src/command_processing.c ****     uint8 packet_data[2];
2363:..\src/command_processing.c **** 
2364:..\src/command_processing.c ****     // Header
2365:..\src/command_processing.c ****     packet_data[0] = CMD_PING;
 12475              		.loc 1 2365 0
 12476 0006 0023     		movs	r3, #0
 12477 0008 3B71     		strb	r3, [r7, #4]
2366:..\src/command_processing.c ****     
2367:..\src/command_processing.c ****     // Load Payload
2368:..\src/command_processing.c ****     packet_data[1] = CMD_PING;
 12478              		.loc 1 2368 0
 12479 000a 0023     		movs	r3, #0
 12480 000c 7B71     		strb	r3, [r7, #5]
2369:..\src/command_processing.c **** 
2370:..\src/command_processing.c ****     // Send Package to uart
2371:..\src/command_processing.c ****     commWrite(packet_data, 2);
 12481              		.loc 1 2371 0
 12482 000e 3B1D     		adds	r3, r7, #4
 12483 0010 0221     		movs	r1, #2
 12484 0012 1846     		mov	r0, r3
 12485 0014 FFF7FEFF 		bl	commWrite
2372:..\src/command_processing.c **** }
 12486              		.loc 1 2372 0
 12487 0018 00BF     		nop
 12488 001a 0837     		adds	r7, r7, #8
 12489              		.cfi_def_cfa_offset 8
 12490 001c BD46     		mov	sp, r7
 12491              		.cfi_def_cfa_register 13
 12492              		@ sp needed
 12493 001e 80BD     		pop	{r7, pc}
 12494              		.cfi_endproc
 12495              	.LFE93:
 12496              		.size	cmd_ping, .-cmd_ping
 12497              		.section	.text.cmd_get_inputs,"ax",%progbits
 12498              		.align	2
 12499              		.global	cmd_get_inputs
 12500              		.thumb
 12501              		.thumb_func
 12502              		.type	cmd_get_inputs, %function
 12503              	cmd_get_inputs:
 12504              	.LFB94:
2373:..\src/command_processing.c **** 
2374:..\src/command_processing.c **** void cmd_get_inputs(){
 12505              		.loc 1 2374 0
 12506              		.cfi_startproc
 12507              		@ args = 0, pretend = 0, frame = 16
 12508              		@ frame_needed = 1, uses_anonymous_args = 0
 12509 0000 80B5     		push	{r7, lr}
 12510              		.cfi_def_cfa_offset 8
 12511              		.cfi_offset 7, -8
 12512              		.cfi_offset 14, -4
 12513 0002 84B0     		sub	sp, sp, #16
 12514              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 291


 12515 0004 00AF     		add	r7, sp, #0
 12516              		.cfi_def_cfa_register 7
2375:..\src/command_processing.c **** 
2376:..\src/command_processing.c ****     // Packet: header + motor_measure(int16) + crc
2377:..\src/command_processing.c **** 
2378:..\src/command_processing.c ****     uint8 packet_data[6]; 
2379:..\src/command_processing.c ****     int16 aux_int16;
2380:..\src/command_processing.c ****     
2381:..\src/command_processing.c ****     //Header package
2382:..\src/command_processing.c **** 
2383:..\src/command_processing.c ****     packet_data[0] = CMD_GET_INPUTS;
 12517              		.loc 1 2383 0
 12518 0006 8323     		movs	r3, #131
 12519 0008 3B72     		strb	r3, [r7, #8]
2384:..\src/command_processing.c ****         
2385:..\src/command_processing.c ****     aux_int16 = (int16) (g_refOld.pos  >> g_mem.res[0]);
 12520              		.loc 1 2385 0
 12521 000a 104B     		ldr	r3, .L606
 12522 000c 1B68     		ldr	r3, [r3]
 12523 000e 104A     		ldr	r2, .L606+4
 12524 0010 92F83720 		ldrb	r2, [r2, #55]	@ zero_extendqisi2
 12525 0014 1341     		asrs	r3, r3, r2
 12526 0016 1BB2     		sxth	r3, r3
 12527 0018 FB80     		strh	r3, [r7, #6]	@ movhi
2386:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12528              		.loc 1 2386 0
 12529 001a BB1D     		adds	r3, r7, #6
 12530 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12531 001e BB72     		strb	r3, [r7, #10]
2387:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12532              		.loc 1 2387 0
 12533 0020 BB1D     		adds	r3, r7, #6
 12534 0022 0133     		adds	r3, r3, #1
 12535 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12536 0026 7B72     		strb	r3, [r7, #9]
2388:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) (g_refOld.pos  >> g_mem.res[0]);
2389:..\src/command_processing.c ****     
2390:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2391:..\src/command_processing.c **** 
2392:..\src/command_processing.c ****     packet_data[5] = LCRChecksum(packet_data, 5);
 12537              		.loc 1 2392 0
 12538 0028 07F10803 		add	r3, r7, #8
 12539 002c 0521     		movs	r1, #5
 12540 002e 1846     		mov	r0, r3
 12541 0030 FFF7FEFF 		bl	LCRChecksum
 12542 0034 0346     		mov	r3, r0
 12543 0036 7B73     		strb	r3, [r7, #13]
2393:..\src/command_processing.c **** 
2394:..\src/command_processing.c ****     commWrite(packet_data, 6);
 12544              		.loc 1 2394 0
 12545 0038 07F10803 		add	r3, r7, #8
 12546 003c 0621     		movs	r1, #6
 12547 003e 1846     		mov	r0, r3
 12548 0040 FFF7FEFF 		bl	commWrite
2395:..\src/command_processing.c **** }
 12549              		.loc 1 2395 0
 12550 0044 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 292


 12551 0046 1037     		adds	r7, r7, #16
 12552              		.cfi_def_cfa_offset 8
 12553 0048 BD46     		mov	sp, r7
 12554              		.cfi_def_cfa_register 13
 12555              		@ sp needed
 12556 004a 80BD     		pop	{r7, pc}
 12557              	.L607:
 12558              		.align	2
 12559              	.L606:
 12560 004c 00000000 		.word	g_refOld
 12561 0050 00000000 		.word	g_mem
 12562              		.cfi_endproc
 12563              	.LFE94:
 12564              		.size	cmd_get_inputs, .-cmd_get_inputs
 12565              		.section	.text.cmd_store_params,"ax",%progbits
 12566              		.align	2
 12567              		.global	cmd_store_params
 12568              		.thumb
 12569              		.thumb_func
 12570              		.type	cmd_store_params, %function
 12571              	cmd_store_params:
 12572              	.LFB95:
2396:..\src/command_processing.c **** 
2397:..\src/command_processing.c **** void cmd_store_params(){
 12573              		.loc 1 2397 0
 12574              		.cfi_startproc
 12575              		@ args = 0, pretend = 0, frame = 16
 12576              		@ frame_needed = 1, uses_anonymous_args = 0
 12577 0000 80B5     		push	{r7, lr}
 12578              		.cfi_def_cfa_offset 8
 12579              		.cfi_offset 7, -8
 12580              		.cfi_offset 14, -4
 12581 0002 84B0     		sub	sp, sp, #16
 12582              		.cfi_def_cfa_offset 24
 12583 0004 00AF     		add	r7, sp, #0
 12584              		.cfi_def_cfa_register 7
2398:..\src/command_processing.c ****     
2399:..\src/command_processing.c ****     // Check input mode enabled
2400:..\src/command_processing.c ****     uint32 off_1;
2401:..\src/command_processing.c ****     float mult_1;
2402:..\src/command_processing.c ****     uint8 CYDATA packet_lenght = 2;
 12585              		.loc 1 2402 0
 12586 0006 0223     		movs	r3, #2
 12587 0008 FB73     		strb	r3, [r7, #15]
2403:..\src/command_processing.c ****     uint8 CYDATA packet_data[2];
2404:..\src/command_processing.c ****     uint8 CYDATA old_id;
2405:..\src/command_processing.c ****     
2406:..\src/command_processing.c ****     if( c_mem.input_mode == INPUT_MODE_EXTERNAL ) {
 12588              		.loc 1 2406 0
 12589 000a 464B     		ldr	r3, .L617
 12590 000c 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 12591 0010 002B     		cmp	r3, #0
 12592 0012 4ED1     		bne	.L609
2407:..\src/command_processing.c ****         off_1 = c_mem.m_off[0];
 12593              		.loc 1 2407 0
 12594 0014 434B     		ldr	r3, .L617
 12595 0016 DB6B     		ldr	r3, [r3, #60]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 293


 12596 0018 BB60     		str	r3, [r7, #8]
2408:..\src/command_processing.c ****         mult_1 = c_mem.m_mult[0];
 12597              		.loc 1 2408 0
 12598 001a 424B     		ldr	r3, .L617
 12599 001c 9B6C     		ldr	r3, [r3, #72]	@ float
 12600 001e 7B60     		str	r3, [r7, #4]	@ float
2409:..\src/command_processing.c **** 
2410:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos / mult_1);
 12601              		.loc 1 2410 0
 12602 0020 414B     		ldr	r3, .L617+4
 12603 0022 1B68     		ldr	r3, [r3]
 12604 0024 1846     		mov	r0, r3
 12605 0026 FFF7FEFF 		bl	__aeabi_i2f
 12606 002a 0346     		mov	r3, r0
 12607 002c 7968     		ldr	r1, [r7, #4]	@ float
 12608 002e 1846     		mov	r0, r3
 12609 0030 FFF7FEFF 		bl	__aeabi_fdiv
 12610 0034 0346     		mov	r3, r0
 12611 0036 1846     		mov	r0, r3
 12612 0038 FFF7FEFF 		bl	__aeabi_f2iz
 12613 003c 0246     		mov	r2, r0
 12614 003e 3A4B     		ldr	r3, .L617+4
 12615 0040 1A60     		str	r2, [r3]
2411:..\src/command_processing.c **** 
2412:..\src/command_processing.c ****         g_refNew.pos = (int32)((float)g_refNew.pos * g_mem.m_mult[0]);
 12616              		.loc 1 2412 0
 12617 0042 394B     		ldr	r3, .L617+4
 12618 0044 1B68     		ldr	r3, [r3]
 12619 0046 1846     		mov	r0, r3
 12620 0048 FFF7FEFF 		bl	__aeabi_i2f
 12621 004c 0246     		mov	r2, r0
 12622 004e 374B     		ldr	r3, .L617+8
 12623 0050 9B6C     		ldr	r3, [r3, #72]	@ float
 12624 0052 1946     		mov	r1, r3
 12625 0054 1046     		mov	r0, r2
 12626 0056 FFF7FEFF 		bl	__aeabi_fmul
 12627 005a 0346     		mov	r3, r0
 12628 005c 1846     		mov	r0, r3
 12629 005e FFF7FEFF 		bl	__aeabi_f2iz
 12630 0062 0246     		mov	r2, r0
 12631 0064 304B     		ldr	r3, .L617+4
 12632 0066 1A60     		str	r2, [r3]
2413:..\src/command_processing.c **** 
2414:..\src/command_processing.c ****         g_refNew.pos += (g_mem.m_off[0] - off_1);
 12633              		.loc 1 2414 0
 12634 0068 2F4B     		ldr	r3, .L617+4
 12635 006a 1B68     		ldr	r3, [r3]
 12636 006c 1A46     		mov	r2, r3
 12637 006e 2F4B     		ldr	r3, .L617+8
 12638 0070 DB6B     		ldr	r3, [r3, #60]
 12639 0072 1946     		mov	r1, r3
 12640 0074 BB68     		ldr	r3, [r7, #8]
 12641 0076 CB1A     		subs	r3, r1, r3
 12642 0078 1344     		add	r3, r3, r2
 12643 007a 1A46     		mov	r2, r3
 12644 007c 2A4B     		ldr	r3, .L617+4
 12645 007e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 294


2415:..\src/command_processing.c ****         
2416:..\src/command_processing.c ****         // Check position Limits
2417:..\src/command_processing.c **** 
2418:..\src/command_processing.c ****         if (c_mem.pos_lim_flag) {                   // position limiting
 12646              		.loc 1 2418 0
 12647 0080 284B     		ldr	r3, .L617
 12648 0082 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
 12649 0086 002B     		cmp	r3, #0
 12650 0088 13D0     		beq	.L609
2419:..\src/command_processing.c ****             if (g_refNew.pos < c_mem.pos_lim_inf) 
 12651              		.loc 1 2419 0
 12652 008a 274B     		ldr	r3, .L617+4
 12653 008c 1A68     		ldr	r2, [r3]
 12654 008e 254B     		ldr	r3, .L617
 12655 0090 9B6D     		ldr	r3, [r3, #88]
 12656 0092 9A42     		cmp	r2, r3
 12657 0094 03DA     		bge	.L610
2420:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_inf;
 12658              		.loc 1 2420 0
 12659 0096 234B     		ldr	r3, .L617
 12660 0098 9B6D     		ldr	r3, [r3, #88]
 12661 009a 234A     		ldr	r2, .L617+4
 12662 009c 1360     		str	r3, [r2]
 12663              	.L610:
2421:..\src/command_processing.c **** 
2422:..\src/command_processing.c ****             if (g_refNew.pos > c_mem.pos_lim_sup) 
 12664              		.loc 1 2422 0
 12665 009e 224B     		ldr	r3, .L617+4
 12666 00a0 1A68     		ldr	r2, [r3]
 12667 00a2 204B     		ldr	r3, .L617
 12668 00a4 DB6D     		ldr	r3, [r3, #92]
 12669 00a6 9A42     		cmp	r2, r3
 12670 00a8 03DD     		ble	.L609
2423:..\src/command_processing.c ****                 g_refNew.pos = c_mem.pos_lim_sup;
 12671              		.loc 1 2423 0
 12672 00aa 1E4B     		ldr	r3, .L617
 12673 00ac DB6D     		ldr	r3, [r3, #92]
 12674 00ae 1E4A     		ldr	r2, .L617+4
 12675 00b0 1360     		str	r3, [r2]
 12676              	.L609:
2424:..\src/command_processing.c ****         }
2425:..\src/command_processing.c ****     }
2426:..\src/command_processing.c ****     // Store params 
2427:..\src/command_processing.c **** 
2428:..\src/command_processing.c ****     if (c_mem.id != g_mem.id) {     //If a new id is going to be set we will lose communication 
 12677              		.loc 1 2428 0
 12678 00b2 1C4B     		ldr	r3, .L617
 12679 00b4 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 12680 00b6 1D4B     		ldr	r3, .L617+8
 12681 00b8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 12682 00ba 9A42     		cmp	r2, r3
 12683 00bc 20D0     		beq	.L611
2429:..\src/command_processing.c ****         old_id = c_mem.id;          //after the memstore(0) and the ACK won't be recognised
 12684              		.loc 1 2429 0
 12685 00be 194B     		ldr	r3, .L617
 12686 00c0 5B78     		ldrb	r3, [r3, #1]
 12687 00c2 FB70     		strb	r3, [r7, #3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 295


2430:..\src/command_processing.c ****         if(memStore(0)) {
 12688              		.loc 1 2430 0
 12689 00c4 0020     		movs	r0, #0
 12690 00c6 FFF7FEFF 		bl	memStore
 12691 00ca 0346     		mov	r3, r0
 12692 00cc 002B     		cmp	r3, #0
 12693 00ce 0BD0     		beq	.L612
2431:..\src/command_processing.c ****             packet_data[0] = ACK_OK;
 12694              		.loc 1 2431 0
 12695 00d0 0123     		movs	r3, #1
 12696 00d2 3B70     		strb	r3, [r7]
2432:..\src/command_processing.c ****             packet_data[1] = ACK_OK;
 12697              		.loc 1 2432 0
 12698 00d4 0123     		movs	r3, #1
 12699 00d6 7B70     		strb	r3, [r7, #1]
2433:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 12700              		.loc 1 2433 0
 12701 00d8 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12702 00da 99B2     		uxth	r1, r3
 12703 00dc FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 12704 00de 3B46     		mov	r3, r7
 12705 00e0 1846     		mov	r0, r3
 12706 00e2 FFF7FEFF 		bl	commWrite_old_id
2434:..\src/command_processing.c ****         }    
2435:..\src/command_processing.c ****         else{
2436:..\src/command_processing.c ****             packet_data[0] = ACK_ERROR;
2437:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
2438:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
2439:..\src/command_processing.c ****         }
2440:..\src/command_processing.c ****     }    
2441:..\src/command_processing.c ****     else {
2442:..\src/command_processing.c ****         if(memStore(0))
2443:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
2444:..\src/command_processing.c ****         else
2445:..\src/command_processing.c ****             sendAcknowledgment(ACK_ERROR);
2446:..\src/command_processing.c ****     }
2447:..\src/command_processing.c **** }
 12707              		.loc 1 2447 0
 12708 00e6 18E0     		b	.L616
 12709              	.L612:
2436:..\src/command_processing.c ****             packet_data[1] = ACK_ERROR;
 12710              		.loc 1 2436 0
 12711 00e8 0023     		movs	r3, #0
 12712 00ea 3B70     		strb	r3, [r7]
2437:..\src/command_processing.c ****             commWrite_old_id(packet_data, packet_lenght, old_id);
 12713              		.loc 1 2437 0
 12714 00ec 0023     		movs	r3, #0
 12715 00ee 7B70     		strb	r3, [r7, #1]
2438:..\src/command_processing.c ****         }
 12716              		.loc 1 2438 0
 12717 00f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 12718 00f2 99B2     		uxth	r1, r3
 12719 00f4 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 12720 00f6 3B46     		mov	r3, r7
 12721 00f8 1846     		mov	r0, r3
 12722 00fa FFF7FEFF 		bl	commWrite_old_id
 12723              		.loc 1 2447 0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 296


 12724 00fe 0CE0     		b	.L616
 12725              	.L611:
2442:..\src/command_processing.c ****             sendAcknowledgment(ACK_OK);
 12726              		.loc 1 2442 0
 12727 0100 0020     		movs	r0, #0
 12728 0102 FFF7FEFF 		bl	memStore
 12729 0106 0346     		mov	r3, r0
 12730 0108 002B     		cmp	r3, #0
 12731 010a 03D0     		beq	.L615
2443:..\src/command_processing.c ****         else
 12732              		.loc 1 2443 0
 12733 010c 0120     		movs	r0, #1
 12734 010e FFF7FEFF 		bl	sendAcknowledgment
 12735              		.loc 1 2447 0
 12736 0112 02E0     		b	.L616
 12737              	.L615:
2445:..\src/command_processing.c ****     }
 12738              		.loc 1 2445 0
 12739 0114 0020     		movs	r0, #0
 12740 0116 FFF7FEFF 		bl	sendAcknowledgment
 12741              	.L616:
 12742              		.loc 1 2447 0
 12743 011a 00BF     		nop
 12744 011c 1037     		adds	r7, r7, #16
 12745              		.cfi_def_cfa_offset 8
 12746 011e BD46     		mov	sp, r7
 12747              		.cfi_def_cfa_register 13
 12748              		@ sp needed
 12749 0120 80BD     		pop	{r7, pc}
 12750              	.L618:
 12751 0122 00BF     		.align	2
 12752              	.L617:
 12753 0124 00000000 		.word	c_mem
 12754 0128 00000000 		.word	g_refNew
 12755 012c 00000000 		.word	g_mem
 12756              		.cfi_endproc
 12757              	.LFE95:
 12758              		.size	cmd_store_params, .-cmd_store_params
 12759              		.section	.text.cmd_get_emg,"ax",%progbits
 12760              		.align	2
 12761              		.global	cmd_get_emg
 12762              		.thumb
 12763              		.thumb_func
 12764              		.type	cmd_get_emg, %function
 12765              	cmd_get_emg:
 12766              	.LFB96:
2448:..\src/command_processing.c **** 
2449:..\src/command_processing.c **** void cmd_get_emg(){
 12767              		.loc 1 2449 0
 12768              		.cfi_startproc
 12769              		@ args = 0, pretend = 0, frame = 16
 12770              		@ frame_needed = 1, uses_anonymous_args = 0
 12771 0000 80B5     		push	{r7, lr}
 12772              		.cfi_def_cfa_offset 8
 12773              		.cfi_offset 7, -8
 12774              		.cfi_offset 14, -4
 12775 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 297


 12776              		.cfi_def_cfa_offset 24
 12777 0004 00AF     		add	r7, sp, #0
 12778              		.cfi_def_cfa_register 7
2450:..\src/command_processing.c ****     
2451:..\src/command_processing.c ****     uint8 packet_data[6];
2452:..\src/command_processing.c ****     int16 aux_int16;
2453:..\src/command_processing.c ****     
2454:..\src/command_processing.c ****     // Header        
2455:..\src/command_processing.c ****     packet_data[0] = CMD_GET_EMG;
 12779              		.loc 1 2455 0
 12780 0006 8823     		movs	r3, #136
 12781 0008 3B72     		strb	r3, [r7, #8]
2456:..\src/command_processing.c ****     
2457:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[0];
 12782              		.loc 1 2457 0
 12783 000a 144B     		ldr	r3, .L620
 12784 000c 9B69     		ldr	r3, [r3, #24]
 12785 000e 1BB2     		sxth	r3, r3
 12786 0010 FB80     		strh	r3, [r7, #6]	@ movhi
2458:..\src/command_processing.c ****     packet_data[2] = ((char*)(&aux_int16))[0];
 12787              		.loc 1 2458 0
 12788 0012 BB1D     		adds	r3, r7, #6
 12789 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12790 0016 BB72     		strb	r3, [r7, #10]
2459:..\src/command_processing.c ****     packet_data[1] = ((char*)(&aux_int16))[1];
 12791              		.loc 1 2459 0
 12792 0018 BB1D     		adds	r3, r7, #6
 12793 001a 0133     		adds	r3, r3, #1
 12794 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12795 001e 7B72     		strb	r3, [r7, #9]
2460:..\src/command_processing.c ****     //*((int16 *) &packet_data[1]) = (int16) g_measOld.emg[0];
2461:..\src/command_processing.c ****     
2462:..\src/command_processing.c ****     aux_int16 = (int16) g_measOld.emg[1];
 12796              		.loc 1 2462 0
 12797 0020 0E4B     		ldr	r3, .L620
 12798 0022 DB69     		ldr	r3, [r3, #28]
 12799 0024 1BB2     		sxth	r3, r3
 12800 0026 FB80     		strh	r3, [r7, #6]	@ movhi
2463:..\src/command_processing.c ****     packet_data[4] = ((char*)(&aux_int16))[0];
 12801              		.loc 1 2463 0
 12802 0028 BB1D     		adds	r3, r7, #6
 12803 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12804 002c 3B73     		strb	r3, [r7, #12]
2464:..\src/command_processing.c ****     packet_data[3] = ((char*)(&aux_int16))[1];
 12805              		.loc 1 2464 0
 12806 002e BB1D     		adds	r3, r7, #6
 12807 0030 0133     		adds	r3, r3, #1
 12808 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12809 0034 FB72     		strb	r3, [r7, #11]
2465:..\src/command_processing.c ****     //*((int16 *) &packet_data[3]) = (int16) g_measOld.emg[1];
2466:..\src/command_processing.c **** 
2467:..\src/command_processing.c ****     packet_data[5] = LCRChecksum (packet_data, 5);
 12810              		.loc 1 2467 0
 12811 0036 07F10803 		add	r3, r7, #8
 12812 003a 0521     		movs	r1, #5
 12813 003c 1846     		mov	r0, r3
 12814 003e FFF7FEFF 		bl	LCRChecksum
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 298


 12815 0042 0346     		mov	r3, r0
 12816 0044 7B73     		strb	r3, [r7, #13]
2468:..\src/command_processing.c **** 
2469:..\src/command_processing.c ****     commWrite(packet_data, 6);
 12817              		.loc 1 2469 0
 12818 0046 07F10803 		add	r3, r7, #8
 12819 004a 0621     		movs	r1, #6
 12820 004c 1846     		mov	r0, r3
 12821 004e FFF7FEFF 		bl	commWrite
2470:..\src/command_processing.c **** 
2471:..\src/command_processing.c **** }
 12822              		.loc 1 2471 0
 12823 0052 00BF     		nop
 12824 0054 1037     		adds	r7, r7, #16
 12825              		.cfi_def_cfa_offset 8
 12826 0056 BD46     		mov	sp, r7
 12827              		.cfi_def_cfa_register 13
 12828              		@ sp needed
 12829 0058 80BD     		pop	{r7, pc}
 12830              	.L621:
 12831 005a 00BF     		.align	2
 12832              	.L620:
 12833 005c 00000000 		.word	g_measOld
 12834              		.cfi_endproc
 12835              	.LFE96:
 12836              		.size	cmd_get_emg, .-cmd_get_emg
 12837              		.section	.text.cmd_get_imu_readings,"ax",%progbits
 12838              		.align	2
 12839              		.global	cmd_get_imu_readings
 12840              		.thumb
 12841              		.thumb_func
 12842              		.type	cmd_get_imu_readings, %function
 12843              	cmd_get_imu_readings:
 12844              	.LFB97:
2472:..\src/command_processing.c **** 
2473:..\src/command_processing.c **** 
2474:..\src/command_processing.c **** void cmd_get_imu_readings(){
 12845              		.loc 1 2474 0
 12846              		.cfi_startproc
 12847              		@ args = 0, pretend = 0, frame = 392
 12848              		@ frame_needed = 1, uses_anonymous_args = 0
 12849 0000 90B5     		push	{r4, r7, lr}
 12850              		.cfi_def_cfa_offset 12
 12851              		.cfi_offset 4, -12
 12852              		.cfi_offset 7, -8
 12853              		.cfi_offset 14, -4
 12854 0002 E3B0     		sub	sp, sp, #396
 12855              		.cfi_def_cfa_offset 408
 12856 0004 00AF     		add	r7, sp, #0
 12857              		.cfi_def_cfa_register 7
2475:..\src/command_processing.c ****     //Retrieve accelerometers, gyroscopes and magnetometers readings
2476:..\src/command_processing.c ****     
2477:..\src/command_processing.c ****     uint8 k_imu;
2478:..\src/command_processing.c ****     uint8 c = 1;
 12858              		.loc 1 2478 0
 12859 0006 0123     		movs	r3, #1
 12860 0008 87F88631 		strb	r3, [r7, #390]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 299


2479:..\src/command_processing.c ****     uint8 k = 0;
 12861              		.loc 1 2479 0
 12862 000c 0023     		movs	r3, #0
 12863 000e 87F88531 		strb	r3, [r7, #389]
2480:..\src/command_processing.c ****     uint8 gl_c = 1;
 12864              		.loc 1 2480 0
 12865 0012 0123     		movs	r3, #1
 12866 0014 87F88431 		strb	r3, [r7, #388]
2481:..\src/command_processing.c ****     int16 aux_int16;
2482:..\src/command_processing.c ****     float aux_float;
2483:..\src/command_processing.c ****     
2484:..\src/command_processing.c ****     // Packet: header + imu id(uint8) + imu flags(uint8) + crc  
2485:..\src/command_processing.c ****     uint8 packet_data[350];
2486:..\src/command_processing.c ****     uint8 single_packet[22];
2487:..\src/command_processing.c ****     
2488:..\src/command_processing.c ****     //Header package 
2489:..\src/command_processing.c ****     packet_data[0] = CMD_GET_IMU_READINGS;
 12867              		.loc 1 2489 0
 12868 0018 07F11C03 		add	r3, r7, #28
 12869 001c A122     		movs	r2, #161
 12870 001e 1A70     		strb	r2, [r3]
2490:..\src/command_processing.c ****  
2491:..\src/command_processing.c ****     for (k_imu = 0; k_imu < N_IMU_Connected; k_imu++) 
 12871              		.loc 1 2491 0
 12872 0020 0023     		movs	r3, #0
 12873 0022 87F88731 		strb	r3, [r7, #391]
 12874 0026 7EE2     		b	.L623
 12875              	.L639:
2492:..\src/command_processing.c ****     {	
2493:..\src/command_processing.c ****         
2494:..\src/command_processing.c ****         single_packet[0] = (uint8) 0x3A; //':';
 12876              		.loc 1 2494 0
 12877 0028 3B1D     		adds	r3, r7, #4
 12878 002a 3A22     		movs	r2, #58
 12879 002c 1A70     		strb	r2, [r3]
2495:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][0]){
 12880              		.loc 1 2495 0
 12881 002e 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12882 0032 DA4A     		ldr	r2, .L640
 12883 0034 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12884 0036 1946     		mov	r1, r3
 12885 0038 D94A     		ldr	r2, .L640+4
 12886 003a 0B46     		mov	r3, r1
 12887 003c 9B00     		lsls	r3, r3, #2
 12888 003e 0B44     		add	r3, r3, r1
 12889 0040 1344     		add	r3, r3, r2
 12890 0042 03F22113 		addw	r3, r3, #289
 12891 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12892 0048 002B     		cmp	r3, #0
 12893 004a 5DD0     		beq	.L624
2496:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[0];
 12894              		.loc 1 2496 0
 12895 004c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12896 0050 D449     		ldr	r1, .L640+8
 12897 0052 1346     		mov	r3, r2
 12898 0054 9B00     		lsls	r3, r3, #2
 12899 0056 1344     		add	r3, r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 300


 12900 0058 DB00     		lsls	r3, r3, #3
 12901 005a 0B44     		add	r3, r3, r1
 12902 005c 0233     		adds	r3, r3, #2
 12903 005e B3F90030 		ldrsh	r3, [r3]
 12904 0062 A7F88231 		strh	r3, [r7, #386]	@ movhi
2497:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 12905              		.loc 1 2497 0
 12906 0066 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12907 006a 0133     		adds	r3, r3, #1
 12908 006c 07F5C172 		add	r2, r7, #386
 12909 0070 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12910 0072 3A1D     		adds	r2, r7, #4
 12911 0074 D154     		strb	r1, [r2, r3]
2498:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 12912              		.loc 1 2498 0
 12913 0076 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 12914 007a 07F5C173 		add	r3, r7, #386
 12915 007e 0133     		adds	r3, r3, #1
 12916 0080 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12917 0082 3B1D     		adds	r3, r7, #4
 12918 0084 9954     		strb	r1, [r3, r2]
2499:..\src/command_processing.c ****             //*((int16 *) &single_packet[c]) = (int16) g_imu[k_imu].accel_value[0];
2500:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[1];
 12919              		.loc 1 2500 0
 12920 0086 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12921 008a C649     		ldr	r1, .L640+8
 12922 008c 1346     		mov	r3, r2
 12923 008e 9B00     		lsls	r3, r3, #2
 12924 0090 1344     		add	r3, r3, r2
 12925 0092 DB00     		lsls	r3, r3, #3
 12926 0094 0B44     		add	r3, r3, r1
 12927 0096 0433     		adds	r3, r3, #4
 12928 0098 B3F90030 		ldrsh	r3, [r3]
 12929 009c A7F88231 		strh	r3, [r7, #386]	@ movhi
2501:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 12930              		.loc 1 2501 0
 12931 00a0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12932 00a4 0333     		adds	r3, r3, #3
 12933 00a6 07F5C172 		add	r2, r7, #386
 12934 00aa 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12935 00ac 3A1D     		adds	r2, r7, #4
 12936 00ae D154     		strb	r1, [r2, r3]
2502:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 12937              		.loc 1 2502 0
 12938 00b0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12939 00b4 9A1C     		adds	r2, r3, #2
 12940 00b6 07F5C173 		add	r3, r7, #386
 12941 00ba 0133     		adds	r3, r3, #1
 12942 00bc 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12943 00be 3B1D     		adds	r3, r7, #4
 12944 00c0 9954     		strb	r1, [r3, r2]
2503:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].accel_value[1];
2504:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].accel_value[2];
 12945              		.loc 1 2504 0
 12946 00c2 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12947 00c6 B749     		ldr	r1, .L640+8
 12948 00c8 1346     		mov	r3, r2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 301


 12949 00ca 9B00     		lsls	r3, r3, #2
 12950 00cc 1344     		add	r3, r3, r2
 12951 00ce DB00     		lsls	r3, r3, #3
 12952 00d0 0B44     		add	r3, r3, r1
 12953 00d2 0633     		adds	r3, r3, #6
 12954 00d4 B3F90030 		ldrsh	r3, [r3]
 12955 00d8 A7F88231 		strh	r3, [r7, #386]	@ movhi
2505:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 12956              		.loc 1 2505 0
 12957 00dc 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12958 00e0 0533     		adds	r3, r3, #5
 12959 00e2 07F5C172 		add	r2, r7, #386
 12960 00e6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 12961 00e8 3A1D     		adds	r2, r7, #4
 12962 00ea D154     		strb	r1, [r2, r3]
2506:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 12963              		.loc 1 2506 0
 12964 00ec 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 12965 00f0 1A1D     		adds	r2, r3, #4
 12966 00f2 07F5C173 		add	r3, r7, #386
 12967 00f6 0133     		adds	r3, r3, #1
 12968 00f8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 12969 00fa 3B1D     		adds	r3, r7, #4
 12970 00fc 9954     		strb	r1, [r3, r2]
2507:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].accel_value[2];
2508:..\src/command_processing.c ****             c = c + 6;
 12971              		.loc 1 2508 0
 12972 00fe 97F88631 		ldrb	r3, [r7, #390]
 12973 0102 0633     		adds	r3, r3, #6
 12974 0104 87F88631 		strb	r3, [r7, #390]
 12975              	.L624:
2509:..\src/command_processing.c ****         }
2510:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][1]){
 12976              		.loc 1 2510 0
 12977 0108 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 12978 010c A34A     		ldr	r2, .L640
 12979 010e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 12980 0110 1946     		mov	r1, r3
 12981 0112 A34A     		ldr	r2, .L640+4
 12982 0114 0B46     		mov	r3, r1
 12983 0116 9B00     		lsls	r3, r3, #2
 12984 0118 0B44     		add	r3, r3, r1
 12985 011a 1344     		add	r3, r3, r2
 12986 011c 03F59173 		add	r3, r3, #290
 12987 0120 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 12988 0122 002B     		cmp	r3, #0
 12989 0124 5DD0     		beq	.L625
2511:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[0];
 12990              		.loc 1 2511 0
 12991 0126 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 12992 012a 9E49     		ldr	r1, .L640+8
 12993 012c 1346     		mov	r3, r2
 12994 012e 9B00     		lsls	r3, r3, #2
 12995 0130 1344     		add	r3, r3, r2
 12996 0132 DB00     		lsls	r3, r3, #3
 12997 0134 0B44     		add	r3, r3, r1
 12998 0136 0833     		adds	r3, r3, #8
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 302


 12999 0138 B3F90030 		ldrsh	r3, [r3]
 13000 013c A7F88231 		strh	r3, [r7, #386]	@ movhi
2512:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 13001              		.loc 1 2512 0
 13002 0140 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13003 0144 0133     		adds	r3, r3, #1
 13004 0146 07F5C172 		add	r2, r7, #386
 13005 014a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13006 014c 3A1D     		adds	r2, r7, #4
 13007 014e D154     		strb	r1, [r2, r3]
2513:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 13008              		.loc 1 2513 0
 13009 0150 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 13010 0154 07F5C173 		add	r3, r7, #386
 13011 0158 0133     		adds	r3, r3, #1
 13012 015a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13013 015c 3B1D     		adds	r3, r7, #4
 13014 015e 9954     		strb	r1, [r3, r2]
2514:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].gyro_value[0];
2515:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[1];
 13015              		.loc 1 2515 0
 13016 0160 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13017 0164 8F49     		ldr	r1, .L640+8
 13018 0166 1346     		mov	r3, r2
 13019 0168 9B00     		lsls	r3, r3, #2
 13020 016a 1344     		add	r3, r3, r2
 13021 016c DB00     		lsls	r3, r3, #3
 13022 016e 0B44     		add	r3, r3, r1
 13023 0170 0A33     		adds	r3, r3, #10
 13024 0172 B3F90030 		ldrsh	r3, [r3]
 13025 0176 A7F88231 		strh	r3, [r7, #386]	@ movhi
2516:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 13026              		.loc 1 2516 0
 13027 017a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13028 017e 0333     		adds	r3, r3, #3
 13029 0180 07F5C172 		add	r2, r7, #386
 13030 0184 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13031 0186 3A1D     		adds	r2, r7, #4
 13032 0188 D154     		strb	r1, [r2, r3]
2517:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 13033              		.loc 1 2517 0
 13034 018a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13035 018e 9A1C     		adds	r2, r3, #2
 13036 0190 07F5C173 		add	r3, r7, #386
 13037 0194 0133     		adds	r3, r3, #1
 13038 0196 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13039 0198 3B1D     		adds	r3, r7, #4
 13040 019a 9954     		strb	r1, [r3, r2]
2518:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].gyro_value[1];
2519:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].gyro_value[2];
 13041              		.loc 1 2519 0
 13042 019c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13043 01a0 8049     		ldr	r1, .L640+8
 13044 01a2 1346     		mov	r3, r2
 13045 01a4 9B00     		lsls	r3, r3, #2
 13046 01a6 1344     		add	r3, r3, r2
 13047 01a8 DB00     		lsls	r3, r3, #3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 303


 13048 01aa 0B44     		add	r3, r3, r1
 13049 01ac 0C33     		adds	r3, r3, #12
 13050 01ae B3F90030 		ldrsh	r3, [r3]
 13051 01b2 A7F88231 		strh	r3, [r7, #386]	@ movhi
2520:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 13052              		.loc 1 2520 0
 13053 01b6 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13054 01ba 0533     		adds	r3, r3, #5
 13055 01bc 07F5C172 		add	r2, r7, #386
 13056 01c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13057 01c2 3A1D     		adds	r2, r7, #4
 13058 01c4 D154     		strb	r1, [r2, r3]
2521:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 13059              		.loc 1 2521 0
 13060 01c6 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13061 01ca 1A1D     		adds	r2, r3, #4
 13062 01cc 07F5C173 		add	r3, r7, #386
 13063 01d0 0133     		adds	r3, r3, #1
 13064 01d2 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13065 01d4 3B1D     		adds	r3, r7, #4
 13066 01d6 9954     		strb	r1, [r3, r2]
2522:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].gyro_value[2];
2523:..\src/command_processing.c ****             c = c + 6;
 13067              		.loc 1 2523 0
 13068 01d8 97F88631 		ldrb	r3, [r7, #390]
 13069 01dc 0633     		adds	r3, r3, #6
 13070 01de 87F88631 		strb	r3, [r7, #390]
 13071              	.L625:
2524:..\src/command_processing.c ****         }
2525:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][2]){
 13072              		.loc 1 2525 0
 13073 01e2 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13074 01e6 6D4A     		ldr	r2, .L640
 13075 01e8 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13076 01ea 1946     		mov	r1, r3
 13077 01ec 6C4A     		ldr	r2, .L640+4
 13078 01ee 0B46     		mov	r3, r1
 13079 01f0 9B00     		lsls	r3, r3, #2
 13080 01f2 0B44     		add	r3, r3, r1
 13081 01f4 1344     		add	r3, r3, r2
 13082 01f6 03F22313 		addw	r3, r3, #291
 13083 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13084 01fc 002B     		cmp	r3, #0
 13085 01fe 5DD0     		beq	.L626
2526:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[0];
 13086              		.loc 1 2526 0
 13087 0200 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13088 0204 6749     		ldr	r1, .L640+8
 13089 0206 1346     		mov	r3, r2
 13090 0208 9B00     		lsls	r3, r3, #2
 13091 020a 1344     		add	r3, r3, r2
 13092 020c DB00     		lsls	r3, r3, #3
 13093 020e 0B44     		add	r3, r3, r1
 13094 0210 0E33     		adds	r3, r3, #14
 13095 0212 B3F90030 		ldrsh	r3, [r3]
 13096 0216 A7F88231 		strh	r3, [r7, #386]	@ movhi
2527:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 304


 13097              		.loc 1 2527 0
 13098 021a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13099 021e 0133     		adds	r3, r3, #1
 13100 0220 07F5C172 		add	r2, r7, #386
 13101 0224 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13102 0226 3A1D     		adds	r2, r7, #4
 13103 0228 D154     		strb	r1, [r2, r3]
2528:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 13104              		.loc 1 2528 0
 13105 022a 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 13106 022e 07F5C173 		add	r3, r7, #386
 13107 0232 0133     		adds	r3, r3, #1
 13108 0234 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13109 0236 3B1D     		adds	r3, r7, #4
 13110 0238 9954     		strb	r1, [r3, r2]
2529:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].mag_value[0];
2530:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[1];
 13111              		.loc 1 2530 0
 13112 023a 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13113 023e 5949     		ldr	r1, .L640+8
 13114 0240 1346     		mov	r3, r2
 13115 0242 9B00     		lsls	r3, r3, #2
 13116 0244 1344     		add	r3, r3, r2
 13117 0246 DB00     		lsls	r3, r3, #3
 13118 0248 0B44     		add	r3, r3, r1
 13119 024a 1033     		adds	r3, r3, #16
 13120 024c B3F90030 		ldrsh	r3, [r3]
 13121 0250 A7F88231 		strh	r3, [r7, #386]	@ movhi
2531:..\src/command_processing.c ****             single_packet[c + 3] = ((char*)(&aux_int16))[0];
 13122              		.loc 1 2531 0
 13123 0254 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13124 0258 0333     		adds	r3, r3, #3
 13125 025a 07F5C172 		add	r2, r7, #386
 13126 025e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13127 0260 3A1D     		adds	r2, r7, #4
 13128 0262 D154     		strb	r1, [r2, r3]
2532:..\src/command_processing.c ****             single_packet[c + 2] = ((char*)(&aux_int16))[1];
 13129              		.loc 1 2532 0
 13130 0264 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13131 0268 9A1C     		adds	r2, r3, #2
 13132 026a 07F5C173 		add	r3, r7, #386
 13133 026e 0133     		adds	r3, r3, #1
 13134 0270 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13135 0272 3B1D     		adds	r3, r7, #4
 13136 0274 9954     		strb	r1, [r3, r2]
2533:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+2]) = (int16) g_imu[k_imu].mag_value[1];
2534:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].mag_value[2];
 13137              		.loc 1 2534 0
 13138 0276 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13139 027a 4A49     		ldr	r1, .L640+8
 13140 027c 1346     		mov	r3, r2
 13141 027e 9B00     		lsls	r3, r3, #2
 13142 0280 1344     		add	r3, r3, r2
 13143 0282 DB00     		lsls	r3, r3, #3
 13144 0284 0B44     		add	r3, r3, r1
 13145 0286 1233     		adds	r3, r3, #18
 13146 0288 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 305


 13147 028c A7F88231 		strh	r3, [r7, #386]	@ movhi
2535:..\src/command_processing.c ****             single_packet[c + 5] = ((char*)(&aux_int16))[0];
 13148              		.loc 1 2535 0
 13149 0290 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13150 0294 0533     		adds	r3, r3, #5
 13151 0296 07F5C172 		add	r2, r7, #386
 13152 029a 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13153 029c 3A1D     		adds	r2, r7, #4
 13154 029e D154     		strb	r1, [r2, r3]
2536:..\src/command_processing.c ****             single_packet[c + 4] = ((char*)(&aux_int16))[1];
 13155              		.loc 1 2536 0
 13156 02a0 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13157 02a4 1A1D     		adds	r2, r3, #4
 13158 02a6 07F5C173 		add	r3, r7, #386
 13159 02aa 0133     		adds	r3, r3, #1
 13160 02ac 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13161 02ae 3B1D     		adds	r3, r7, #4
 13162 02b0 9954     		strb	r1, [r3, r2]
2537:..\src/command_processing.c ****             //*((int16 *) &single_packet[c+4]) = (int16) g_imu[k_imu].mag_value[2];
2538:..\src/command_processing.c ****             c = c + 6;
 13163              		.loc 1 2538 0
 13164 02b2 97F88631 		ldrb	r3, [r7, #390]
 13165 02b6 0633     		adds	r3, r3, #6
 13166 02b8 87F88631 		strb	r3, [r7, #390]
 13167              	.L626:
2539:..\src/command_processing.c ****         }
2540:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][3]){
 13168              		.loc 1 2540 0
 13169 02bc 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13170 02c0 364A     		ldr	r2, .L640
 13171 02c2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13172 02c4 1946     		mov	r1, r3
 13173 02c6 364A     		ldr	r2, .L640+4
 13174 02c8 0B46     		mov	r3, r1
 13175 02ca 9B00     		lsls	r3, r3, #2
 13176 02cc 0B44     		add	r3, r3, r1
 13177 02ce 1344     		add	r3, r3, r2
 13178 02d0 03F59273 		add	r3, r3, #292
 13179 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13180 02d6 002B     		cmp	r3, #0
 13181 02d8 00F0AB80 		beq	.L627
2541:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[0];
 13182              		.loc 1 2541 0
 13183 02dc 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13184 02e0 3049     		ldr	r1, .L640+8
 13185 02e2 1346     		mov	r3, r2
 13186 02e4 9B00     		lsls	r3, r3, #2
 13187 02e6 1344     		add	r3, r3, r2
 13188 02e8 DB00     		lsls	r3, r3, #3
 13189 02ea 0B44     		add	r3, r3, r1
 13190 02ec 1433     		adds	r3, r3, #20
 13191 02ee 1B68     		ldr	r3, [r3]	@ float
 13192 02f0 C7F87C31 		str	r3, [r7, #380]	@ float
2542:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13193              		.loc 1 2542 0
 13194 02f4 0023     		movs	r3, #0
 13195 02f6 87F88531 		strb	r3, [r7, #389]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 306


 13196 02fa 13E0     		b	.L628
 13197              	.L629:
2543:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 13198              		.loc 1 2543 0 discriminator 3
 13199 02fc 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13200 0300 1A1D     		adds	r2, r3, #4
 13201 0302 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13202 0306 D31A     		subs	r3, r2, r3
 13203 0308 013B     		subs	r3, r3, #1
 13204 030a 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13205 030e 07F5BE71 		add	r1, r7, #380
 13206 0312 0A44     		add	r2, r2, r1
 13207 0314 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13208 0316 3A1D     		adds	r2, r7, #4
 13209 0318 D154     		strb	r1, [r2, r3]
2542:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13210              		.loc 1 2542 0 discriminator 3
 13211 031a 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13212 031e 0133     		adds	r3, r3, #1
 13213 0320 87F88531 		strb	r3, [r7, #389]
 13214              	.L628:
2542:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13215              		.loc 1 2542 0 is_stmt 0 discriminator 1
 13216 0324 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13217 0328 032B     		cmp	r3, #3
 13218 032a E7D9     		bls	.L629
2544:..\src/command_processing.c ****             }
2545:..\src/command_processing.c ****             //*((float *) &single_packet[c])   = (float) g_imu[k_imu].quat_value[0];
2546:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[1];
 13219              		.loc 1 2546 0 is_stmt 1
 13220 032c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13221 0330 1C49     		ldr	r1, .L640+8
 13222 0332 1346     		mov	r3, r2
 13223 0334 9B00     		lsls	r3, r3, #2
 13224 0336 1344     		add	r3, r3, r2
 13225 0338 DB00     		lsls	r3, r3, #3
 13226 033a 0B44     		add	r3, r3, r1
 13227 033c 1833     		adds	r3, r3, #24
 13228 033e 1B68     		ldr	r3, [r3]	@ float
 13229 0340 C7F87C31 		str	r3, [r7, #380]	@ float
2547:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13230              		.loc 1 2547 0
 13231 0344 0023     		movs	r3, #0
 13232 0346 87F88531 		strb	r3, [r7, #389]
 13233 034a 13E0     		b	.L630
 13234              	.L631:
2548:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 13235              		.loc 1 2548 0 discriminator 3
 13236 034c 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13237 0350 1A1D     		adds	r2, r3, #4
 13238 0352 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13239 0356 D31A     		subs	r3, r2, r3
 13240 0358 013B     		subs	r3, r3, #1
 13241 035a 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13242 035e 07F5BE71 		add	r1, r7, #380
 13243 0362 0A44     		add	r2, r2, r1
 13244 0364 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 307


 13245 0366 3A1D     		adds	r2, r7, #4
 13246 0368 D154     		strb	r1, [r2, r3]
2547:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13247              		.loc 1 2547 0 discriminator 3
 13248 036a 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13249 036e 0133     		adds	r3, r3, #1
 13250 0370 87F88531 		strb	r3, [r7, #389]
 13251              	.L630:
2547:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13252              		.loc 1 2547 0 is_stmt 0 discriminator 1
 13253 0374 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13254 0378 032B     		cmp	r3, #3
 13255 037a E7D9     		bls	.L631
2549:..\src/command_processing.c ****             }
2550:..\src/command_processing.c ****             //*((float *) &single_packet[c+4]) = (float) g_imu[k_imu].quat_value[1];
2551:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[2];
 13256              		.loc 1 2551 0 is_stmt 1
 13257 037c 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13258 0380 0849     		ldr	r1, .L640+8
 13259 0382 1346     		mov	r3, r2
 13260 0384 9B00     		lsls	r3, r3, #2
 13261 0386 1344     		add	r3, r3, r2
 13262 0388 DB00     		lsls	r3, r3, #3
 13263 038a 0B44     		add	r3, r3, r1
 13264 038c 1C33     		adds	r3, r3, #28
 13265 038e 1B68     		ldr	r3, [r3]	@ float
 13266 0390 C7F87C31 		str	r3, [r7, #380]	@ float
2552:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13267              		.loc 1 2552 0
 13268 0394 0023     		movs	r3, #0
 13269 0396 87F88531 		strb	r3, [r7, #389]
 13270 039a 19E0     		b	.L632
 13271              	.L641:
 13272              		.align	2
 13273              	.L640:
 13274 039c 00000000 		.word	IMU_connected
 13275 03a0 00000000 		.word	c_mem
 13276 03a4 00000000 		.word	g_imu
 13277              	.L633:
2553:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 13278              		.loc 1 2553 0 discriminator 3
 13279 03a8 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13280 03ac 1A1D     		adds	r2, r3, #4
 13281 03ae 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13282 03b2 D31A     		subs	r3, r2, r3
 13283 03b4 013B     		subs	r3, r3, #1
 13284 03b6 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13285 03ba 07F5BE71 		add	r1, r7, #380
 13286 03be 0A44     		add	r2, r2, r1
 13287 03c0 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13288 03c2 3A1D     		adds	r2, r7, #4
 13289 03c4 D154     		strb	r1, [r2, r3]
2552:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13290              		.loc 1 2552 0 discriminator 3
 13291 03c6 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13292 03ca 0133     		adds	r3, r3, #1
 13293 03cc 87F88531 		strb	r3, [r7, #389]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 308


 13294              	.L632:
2552:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13295              		.loc 1 2552 0 is_stmt 0 discriminator 1
 13296 03d0 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13297 03d4 032B     		cmp	r3, #3
 13298 03d6 E7D9     		bls	.L633
2554:..\src/command_processing.c ****             }
2555:..\src/command_processing.c ****             //*((float *) &single_packet[c+8]) = (float) g_imu[k_imu].quat_value[2];
2556:..\src/command_processing.c ****             aux_float = (float) g_imu[k_imu].quat_value[3];
 13299              		.loc 1 2556 0 is_stmt 1
 13300 03d8 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13301 03dc 6649     		ldr	r1, .L642
 13302 03de 1346     		mov	r3, r2
 13303 03e0 9B00     		lsls	r3, r3, #2
 13304 03e2 1344     		add	r3, r3, r2
 13305 03e4 DB00     		lsls	r3, r3, #3
 13306 03e6 0B44     		add	r3, r3, r1
 13307 03e8 2033     		adds	r3, r3, #32
 13308 03ea 1B68     		ldr	r3, [r3]	@ float
 13309 03ec C7F87C31 		str	r3, [r7, #380]	@ float
2557:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13310              		.loc 1 2557 0
 13311 03f0 0023     		movs	r3, #0
 13312 03f2 87F88531 		strb	r3, [r7, #389]
 13313 03f6 13E0     		b	.L634
 13314              	.L635:
2558:..\src/command_processing.c ****                 single_packet[c + 4 - k -1] = ((char*)(&aux_float))[k];
 13315              		.loc 1 2558 0 discriminator 3
 13316 03f8 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13317 03fc 1A1D     		adds	r2, r3, #4
 13318 03fe 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13319 0402 D31A     		subs	r3, r2, r3
 13320 0404 013B     		subs	r3, r3, #1
 13321 0406 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13322 040a 07F5BE71 		add	r1, r7, #380
 13323 040e 0A44     		add	r2, r2, r1
 13324 0410 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13325 0412 3A1D     		adds	r2, r7, #4
 13326 0414 D154     		strb	r1, [r2, r3]
2557:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13327              		.loc 1 2557 0 discriminator 3
 13328 0416 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13329 041a 0133     		adds	r3, r3, #1
 13330 041c 87F88531 		strb	r3, [r7, #389]
 13331              	.L634:
2557:..\src/command_processing.c ****             for(k = 0; k < 4; k++) {
 13332              		.loc 1 2557 0 is_stmt 0 discriminator 1
 13333 0420 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13334 0424 032B     		cmp	r3, #3
 13335 0426 E7D9     		bls	.L635
2559:..\src/command_processing.c ****             }
2560:..\src/command_processing.c ****             //*((float *) &single_packet[c+12]) = (float) g_imu[k_imu].quat_value[3];
2561:..\src/command_processing.c ****             c = c + 16;
 13336              		.loc 1 2561 0 is_stmt 1
 13337 0428 97F88631 		ldrb	r3, [r7, #390]
 13338 042c 1033     		adds	r3, r3, #16
 13339 042e 87F88631 		strb	r3, [r7, #390]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 309


 13340              	.L627:
2562:..\src/command_processing.c ****         }
2563:..\src/command_processing.c ****         if (c_mem.IMU_conf[IMU_connected[k_imu]][4]){
 13341              		.loc 1 2563 0
 13342 0432 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13343 0436 514A     		ldr	r2, .L642+4
 13344 0438 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13345 043a 1946     		mov	r1, r3
 13346 043c 504A     		ldr	r2, .L642+8
 13347 043e 0B46     		mov	r3, r1
 13348 0440 9B00     		lsls	r3, r3, #2
 13349 0442 0B44     		add	r3, r3, r1
 13350 0444 1344     		add	r3, r3, r2
 13351 0446 03F22513 		addw	r3, r3, #293
 13352 044a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13353 044c 002B     		cmp	r3, #0
 13354 044e 21D0     		beq	.L636
2564:..\src/command_processing.c ****             aux_int16 = (int16) g_imu[k_imu].temp_value;
 13355              		.loc 1 2564 0
 13356 0450 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13357 0454 4849     		ldr	r1, .L642
 13358 0456 1346     		mov	r3, r2
 13359 0458 9B00     		lsls	r3, r3, #2
 13360 045a 1344     		add	r3, r3, r2
 13361 045c DB00     		lsls	r3, r3, #3
 13362 045e 0B44     		add	r3, r3, r1
 13363 0460 2433     		adds	r3, r3, #36
 13364 0462 B3F90030 		ldrsh	r3, [r3]
 13365 0466 A7F88231 		strh	r3, [r7, #386]	@ movhi
2565:..\src/command_processing.c ****             single_packet[c + 1] = ((char*)(&aux_int16))[0];
 13366              		.loc 1 2565 0
 13367 046a 97F88631 		ldrb	r3, [r7, #390]	@ zero_extendqisi2
 13368 046e 0133     		adds	r3, r3, #1
 13369 0470 07F5C172 		add	r2, r7, #386
 13370 0474 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 13371 0476 3A1D     		adds	r2, r7, #4
 13372 0478 D154     		strb	r1, [r2, r3]
2566:..\src/command_processing.c ****             single_packet[c] = ((char*)(&aux_int16))[1];
 13373              		.loc 1 2566 0
 13374 047a 97F88621 		ldrb	r2, [r7, #390]	@ zero_extendqisi2
 13375 047e 07F5C173 		add	r3, r7, #386
 13376 0482 0133     		adds	r3, r3, #1
 13377 0484 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 13378 0486 3B1D     		adds	r3, r7, #4
 13379 0488 9954     		strb	r1, [r3, r2]
2567:..\src/command_processing.c ****             //*((int16 *) &single_packet[c])   = (int16) g_imu[k_imu].temp_value;
2568:..\src/command_processing.c ****             c = c + 2;
 13380              		.loc 1 2568 0
 13381 048a 97F88631 		ldrb	r3, [r7, #390]
 13382 048e 0233     		adds	r3, r3, #2
 13383 0490 87F88631 		strb	r3, [r7, #390]
 13384              	.L636:
2569:..\src/command_processing.c ****         }
2570:..\src/command_processing.c ****         single_packet[single_imu_size[IMU_connected[k_imu]] - 1] = (uint8) 0x3A; //':';
 13385              		.loc 1 2570 0
 13386 0494 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13387 0498 384A     		ldr	r2, .L642+4
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 310


 13388 049a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13389 049c 1A46     		mov	r2, r3
 13390 049e 394B     		ldr	r3, .L642+12
 13391 04a0 53F82230 		ldr	r3, [r3, r2, lsl #2]
 13392 04a4 013B     		subs	r3, r3, #1
 13393 04a6 3A1D     		adds	r2, r7, #4
 13394 04a8 3A21     		movs	r1, #58
 13395 04aa D154     		strb	r1, [r2, r3]
2571:..\src/command_processing.c ****         c = 1;
 13396              		.loc 1 2571 0
 13397 04ac 0123     		movs	r3, #1
 13398 04ae 87F88631 		strb	r3, [r7, #390]
2572:..\src/command_processing.c ****                
2573:..\src/command_processing.c ****         for(k=0; k < single_imu_size[IMU_connected[k_imu]]; k++) {
 13399              		.loc 1 2573 0
 13400 04b2 0023     		movs	r3, #0
 13401 04b4 87F88531 		strb	r3, [r7, #389]
 13402 04b8 10E0     		b	.L637
 13403              	.L638:
2574:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 13404              		.loc 1 2574 0 discriminator 3
 13405 04ba 97F88421 		ldrb	r2, [r7, #388]	@ zero_extendqisi2
 13406 04be 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13407 04c2 1344     		add	r3, r3, r2
 13408 04c4 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13409 04c8 391D     		adds	r1, r7, #4
 13410 04ca 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 13411 04cc 07F11C02 		add	r2, r7, #28
 13412 04d0 D154     		strb	r1, [r2, r3]
2573:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 13413              		.loc 1 2573 0 discriminator 3
 13414 04d2 97F88531 		ldrb	r3, [r7, #389]	@ zero_extendqisi2
 13415 04d6 0133     		adds	r3, r3, #1
 13416 04d8 87F88531 		strb	r3, [r7, #389]
 13417              	.L637:
2573:..\src/command_processing.c ****             packet_data[gl_c + k] = (uint8) single_packet[k]; 
 13418              		.loc 1 2573 0 is_stmt 0 discriminator 1
 13419 04dc 97F88521 		ldrb	r2, [r7, #389]	@ zero_extendqisi2
 13420 04e0 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13421 04e4 2549     		ldr	r1, .L642+4
 13422 04e6 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 13423 04e8 1946     		mov	r1, r3
 13424 04ea 264B     		ldr	r3, .L642+12
 13425 04ec 53F82130 		ldr	r3, [r3, r1, lsl #2]
 13426 04f0 9A42     		cmp	r2, r3
 13427 04f2 E2DB     		blt	.L638
2575:..\src/command_processing.c ****         }
2576:..\src/command_processing.c ****         gl_c = gl_c + single_imu_size[IMU_connected[k_imu]];  
 13428              		.loc 1 2576 0 is_stmt 1 discriminator 2
 13429 04f4 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13430 04f8 204A     		ldr	r2, .L642+4
 13431 04fa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 13432 04fc 1A46     		mov	r2, r3
 13433 04fe 214B     		ldr	r3, .L642+12
 13434 0500 53F82230 		ldr	r3, [r3, r2, lsl #2]
 13435 0504 DAB2     		uxtb	r2, r3
 13436 0506 97F88431 		ldrb	r3, [r7, #388]
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 311


 13437 050a 1344     		add	r3, r3, r2
 13438 050c 87F88431 		strb	r3, [r7, #388]
2577:..\src/command_processing.c ****         
2578:..\src/command_processing.c ****         memset(&single_packet, 0, sizeof(single_packet));     
 13439              		.loc 1 2578 0 discriminator 2
 13440 0510 3B1D     		adds	r3, r7, #4
 13441 0512 1622     		movs	r2, #22
 13442 0514 0021     		movs	r1, #0
 13443 0516 1846     		mov	r0, r3
 13444 0518 FFF7FEFF 		bl	memset
2491:..\src/command_processing.c ****     {	
 13445              		.loc 1 2491 0 discriminator 2
 13446 051c 97F88731 		ldrb	r3, [r7, #391]	@ zero_extendqisi2
 13447 0520 0133     		adds	r3, r3, #1
 13448 0522 87F88731 		strb	r3, [r7, #391]
 13449              	.L623:
2491:..\src/command_processing.c ****     {	
 13450              		.loc 1 2491 0 is_stmt 0 discriminator 1
 13451 0526 184B     		ldr	r3, .L642+16
 13452 0528 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 13453 052a 97F88721 		ldrb	r2, [r7, #391]	@ zero_extendqisi2
 13454 052e 9A42     		cmp	r2, r3
 13455 0530 FFF47AAD 		bcc	.L639
2579:..\src/command_processing.c ****         
2580:..\src/command_processing.c ****     }
2581:..\src/command_processing.c **** 
2582:..\src/command_processing.c ****     // Calculate Checksum and send message to UART 
2583:..\src/command_processing.c ****     packet_data[imus_data_size-1] = LCRChecksum (packet_data, imus_data_size-1);
 13456              		.loc 1 2583 0 is_stmt 1
 13457 0534 154B     		ldr	r3, .L642+20
 13458 0536 1B68     		ldr	r3, [r3]
 13459 0538 5C1E     		subs	r4, r3, #1
 13460 053a 144B     		ldr	r3, .L642+20
 13461 053c 1B68     		ldr	r3, [r3]
 13462 053e DBB2     		uxtb	r3, r3
 13463 0540 013B     		subs	r3, r3, #1
 13464 0542 DAB2     		uxtb	r2, r3
 13465 0544 07F11C03 		add	r3, r7, #28
 13466 0548 1146     		mov	r1, r2
 13467 054a 1846     		mov	r0, r3
 13468 054c FFF7FEFF 		bl	LCRChecksum
 13469 0550 0346     		mov	r3, r0
 13470 0552 1A46     		mov	r2, r3
 13471 0554 07F11C03 		add	r3, r7, #28
 13472 0558 1A55     		strb	r2, [r3, r4]
2584:..\src/command_processing.c ****     commWrite(packet_data, imus_data_size);
 13473              		.loc 1 2584 0
 13474 055a 0C4B     		ldr	r3, .L642+20
 13475 055c 1B68     		ldr	r3, [r3]
 13476 055e 9AB2     		uxth	r2, r3
 13477 0560 07F11C03 		add	r3, r7, #28
 13478 0564 1146     		mov	r1, r2
 13479 0566 1846     		mov	r0, r3
 13480 0568 FFF7FEFF 		bl	commWrite
2585:..\src/command_processing.c **** }
 13481              		.loc 1 2585 0
 13482 056c 00BF     		nop
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 312


 13483 056e 07F5C677 		add	r7, r7, #396
 13484              		.cfi_def_cfa_offset 12
 13485 0572 BD46     		mov	sp, r7
 13486              		.cfi_def_cfa_register 13
 13487              		@ sp needed
 13488 0574 90BD     		pop	{r4, r7, pc}
 13489              	.L643:
 13490 0576 00BF     		.align	2
 13491              	.L642:
 13492 0578 00000000 		.word	g_imu
 13493 057c 00000000 		.word	IMU_connected
 13494 0580 00000000 		.word	c_mem
 13495 0584 00000000 		.word	single_imu_size
 13496 0588 00000000 		.word	N_IMU_Connected
 13497 058c 00000000 		.word	imus_data_size
 13498              		.cfi_endproc
 13499              	.LFE97:
 13500              		.size	cmd_get_imu_readings, .-cmd_get_imu_readings
 13501              		.text
 13502              	.Letext0:
 13503              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 13504              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 13505              		.file 5 "Generated_Source\\PSoC5/cytypes.h"
 13506              		.file 6 "..\\src\\commands.h"
 13507              		.file 7 "..\\src\\globals.h"
 13508              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 13509              		.section	.debug_info,"",%progbits
 13510              	.Ldebug_info0:
 13511 0000 12170000 		.4byte	0x1712
 13512 0004 0400     		.2byte	0x4
 13513 0006 00000000 		.4byte	.Ldebug_abbrev0
 13514 000a 04       		.byte	0x4
 13515 000b 01       		.uleb128 0x1
 13516 000c 56060000 		.4byte	.LASF276
 13517 0010 0C       		.byte	0xc
 13518 0011 E50D0000 		.4byte	.LASF277
 13519 0015 59020000 		.4byte	.LASF278
 13520 0019 00000000 		.4byte	.Ldebug_ranges0+0
 13521 001d 00000000 		.4byte	0
 13522 0021 00000000 		.4byte	.Ldebug_line0
 13523 0025 02       		.uleb128 0x2
 13524 0026 01       		.byte	0x1
 13525 0027 06       		.byte	0x6
 13526 0028 9E020000 		.4byte	.LASF0
 13527 002c 02       		.uleb128 0x2
 13528 002d 01       		.byte	0x1
 13529 002e 08       		.byte	0x8
 13530 002f E3020000 		.4byte	.LASF1
 13531 0033 02       		.uleb128 0x2
 13532 0034 02       		.byte	0x2
 13533 0035 05       		.byte	0x5
 13534 0036 5C0B0000 		.4byte	.LASF2
 13535 003a 02       		.uleb128 0x2
 13536 003b 02       		.byte	0x2
 13537 003c 07       		.byte	0x7
 13538 003d 3B0D0000 		.4byte	.LASF3
 13539 0041 03       		.uleb128 0x3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 313


 13540 0042 B40D0000 		.4byte	.LASF5
 13541 0046 03       		.byte	0x3
 13542 0047 3F       		.byte	0x3f
 13543 0048 4C000000 		.4byte	0x4c
 13544 004c 02       		.uleb128 0x2
 13545 004d 04       		.byte	0x4
 13546 004e 05       		.byte	0x5
 13547 004f CA010000 		.4byte	.LASF4
 13548 0053 03       		.uleb128 0x3
 13549 0054 05070000 		.4byte	.LASF6
 13550 0058 03       		.byte	0x3
 13551 0059 41       		.byte	0x41
 13552 005a 5E000000 		.4byte	0x5e
 13553 005e 02       		.uleb128 0x2
 13554 005f 04       		.byte	0x4
 13555 0060 07       		.byte	0x7
 13556 0061 3E050000 		.4byte	.LASF7
 13557 0065 02       		.uleb128 0x2
 13558 0066 08       		.byte	0x8
 13559 0067 05       		.byte	0x5
 13560 0068 10070000 		.4byte	.LASF8
 13561 006c 02       		.uleb128 0x2
 13562 006d 08       		.byte	0x8
 13563 006e 07       		.byte	0x7
 13564 006f C4090000 		.4byte	.LASF9
 13565 0073 04       		.uleb128 0x4
 13566 0074 04       		.byte	0x4
 13567 0075 05       		.byte	0x5
 13568 0076 696E7400 		.ascii	"int\000"
 13569 007a 02       		.uleb128 0x2
 13570 007b 04       		.byte	0x4
 13571 007c 07       		.byte	0x7
 13572 007d D8070000 		.4byte	.LASF10
 13573 0081 03       		.uleb128 0x3
 13574 0082 49000000 		.4byte	.LASF11
 13575 0086 04       		.byte	0x4
 13576 0087 2C       		.byte	0x2c
 13577 0088 41000000 		.4byte	0x41
 13578 008c 03       		.uleb128 0x3
 13579 008d B20C0000 		.4byte	.LASF12
 13580 0091 04       		.byte	0x4
 13581 0092 30       		.byte	0x30
 13582 0093 53000000 		.4byte	0x53
 13583 0097 05       		.uleb128 0x5
 13584 0098 4A0B0000 		.4byte	.LASF13
 13585 009c 05       		.byte	0x5
 13586 009d E401     		.2byte	0x1e4
 13587 009f 2C000000 		.4byte	0x2c
 13588 00a3 05       		.uleb128 0x5
 13589 00a4 380E0000 		.4byte	.LASF14
 13590 00a8 05       		.byte	0x5
 13591 00a9 E501     		.2byte	0x1e5
 13592 00ab 3A000000 		.4byte	0x3a
 13593 00af 05       		.uleb128 0x5
 13594 00b0 6A000000 		.4byte	.LASF15
 13595 00b4 05       		.byte	0x5
 13596 00b5 E601     		.2byte	0x1e6
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 314


 13597 00b7 5E000000 		.4byte	0x5e
 13598 00bb 05       		.uleb128 0x5
 13599 00bc 4E010000 		.4byte	.LASF16
 13600 00c0 05       		.byte	0x5
 13601 00c1 E701     		.2byte	0x1e7
 13602 00c3 25000000 		.4byte	0x25
 13603 00c7 05       		.uleb128 0x5
 13604 00c8 570C0000 		.4byte	.LASF17
 13605 00cc 05       		.byte	0x5
 13606 00cd E801     		.2byte	0x1e8
 13607 00cf 33000000 		.4byte	0x33
 13608 00d3 05       		.uleb128 0x5
 13609 00d4 740D0000 		.4byte	.LASF18
 13610 00d8 05       		.byte	0x5
 13611 00d9 E901     		.2byte	0x1e9
 13612 00db 4C000000 		.4byte	0x4c
 13613 00df 05       		.uleb128 0x5
 13614 00e0 0D020000 		.4byte	.LASF19
 13615 00e4 05       		.byte	0x5
 13616 00e5 EA01     		.2byte	0x1ea
 13617 00e7 EB000000 		.4byte	0xeb
 13618 00eb 02       		.uleb128 0x2
 13619 00ec 04       		.byte	0x4
 13620 00ed 04       		.byte	0x4
 13621 00ee B1070000 		.4byte	.LASF20
 13622 00f2 02       		.uleb128 0x2
 13623 00f3 08       		.byte	0x8
 13624 00f4 04       		.byte	0x4
 13625 00f5 74070000 		.4byte	.LASF21
 13626 00f9 02       		.uleb128 0x2
 13627 00fa 01       		.byte	0x1
 13628 00fb 08       		.byte	0x8
 13629 00fc 90030000 		.4byte	.LASF22
 13630 0100 05       		.uleb128 0x5
 13631 0101 820A0000 		.4byte	.LASF23
 13632 0105 05       		.byte	0x5
 13633 0106 8E02     		.2byte	0x28e
 13634 0108 0C010000 		.4byte	0x10c
 13635 010c 06       		.uleb128 0x6
 13636 010d 97000000 		.4byte	0x97
 13637 0111 02       		.uleb128 0x2
 13638 0112 08       		.byte	0x8
 13639 0113 04       		.byte	0x4
 13640 0114 F8080000 		.4byte	.LASF24
 13641 0118 02       		.uleb128 0x2
 13642 0119 04       		.byte	0x4
 13643 011a 07       		.byte	0x7
 13644 011b 09000000 		.4byte	.LASF25
 13645 011f 07       		.uleb128 0x7
 13646 0120 04       		.byte	0x4
 13647 0121 F9000000 		.4byte	0xf9
 13648 0125 07       		.uleb128 0x7
 13649 0126 04       		.byte	0x4
 13650 0127 2B010000 		.4byte	0x12b
 13651 012b 08       		.uleb128 0x8
 13652 012c F9000000 		.4byte	0xf9
 13653 0130 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 315


 13654 0131 F9000000 		.4byte	0xf9
 13655 0135 40010000 		.4byte	0x140
 13656 0139 0A       		.uleb128 0xa
 13657 013a 18010000 		.4byte	0x118
 13658 013e 19       		.byte	0x19
 13659 013f 00       		.byte	0
 13660 0140 0B       		.uleb128 0xb
 13661 0141 FF070000 		.4byte	.LASF50
 13662 0145 01       		.byte	0x1
 13663 0146 2C000000 		.4byte	0x2c
 13664 014a 06       		.byte	0x6
 13665 014b 42       		.byte	0x42
 13666 014c E1010000 		.4byte	0x1e1
 13667 0150 0C       		.uleb128 0xc
 13668 0151 520E0000 		.4byte	.LASF26
 13669 0155 00       		.byte	0
 13670 0156 0C       		.uleb128 0xc
 13671 0157 A90B0000 		.4byte	.LASF27
 13672 015b 01       		.byte	0x1
 13673 015c 0C       		.uleb128 0xc
 13674 015d 1A050000 		.4byte	.LASF28
 13675 0161 03       		.byte	0x3
 13676 0162 0C       		.uleb128 0xc
 13677 0163 17030000 		.4byte	.LASF29
 13678 0167 04       		.byte	0x4
 13679 0168 0C       		.uleb128 0xc
 13680 0169 AA0A0000 		.4byte	.LASF30
 13681 016d 05       		.byte	0x5
 13682 016e 0C       		.uleb128 0xc
 13683 016f FA050000 		.4byte	.LASF31
 13684 0173 06       		.byte	0x6
 13685 0174 0C       		.uleb128 0xc
 13686 0175 5E050000 		.4byte	.LASF32
 13687 0179 09       		.byte	0x9
 13688 017a 0C       		.uleb128 0xc
 13689 017b 12000000 		.4byte	.LASF33
 13690 017f 0A       		.byte	0xa
 13691 0180 0C       		.uleb128 0xc
 13692 0181 390C0000 		.4byte	.LASF34
 13693 0185 0C       		.byte	0xc
 13694 0186 0C       		.uleb128 0xc
 13695 0187 35090000 		.4byte	.LASF35
 13696 018b 0D       		.byte	0xd
 13697 018c 0C       		.uleb128 0xc
 13698 018d 3C000000 		.4byte	.LASF36
 13699 0191 80       		.byte	0x80
 13700 0192 0C       		.uleb128 0xc
 13701 0193 7F030000 		.4byte	.LASF37
 13702 0197 81       		.byte	0x81
 13703 0198 0C       		.uleb128 0xc
 13704 0199 4C040000 		.4byte	.LASF38
 13705 019d 82       		.byte	0x82
 13706 019e 0C       		.uleb128 0xc
 13707 019f 920B0000 		.4byte	.LASF39
 13708 01a3 83       		.byte	0x83
 13709 01a4 0C       		.uleb128 0xc
 13710 01a5 350B0000 		.4byte	.LASF40
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 316


 13711 01a9 84       		.byte	0x84
 13712 01aa 0C       		.uleb128 0xc
 13713 01ab 15020000 		.4byte	.LASF41
 13714 01af 85       		.byte	0x85
 13715 01b0 0C       		.uleb128 0xc
 13716 01b1 40060000 		.4byte	.LASF42
 13717 01b5 86       		.byte	0x86
 13718 01b6 0C       		.uleb128 0xc
 13719 01b7 EE050000 		.4byte	.LASF43
 13720 01bb 88       		.byte	0x88
 13721 01bc 0C       		.uleb128 0xc
 13722 01bd 1A0C0000 		.4byte	.LASF44
 13723 01c1 89       		.byte	0x89
 13724 01c2 0C       		.uleb128 0xc
 13725 01c3 120A0000 		.4byte	.LASF45
 13726 01c7 8B       		.byte	0x8b
 13727 01c8 0C       		.uleb128 0xc
 13728 01c9 C9080000 		.4byte	.LASF46
 13729 01cd 8C       		.byte	0x8c
 13730 01ce 0C       		.uleb128 0xc
 13731 01cf EB060000 		.4byte	.LASF47
 13732 01d3 8E       		.byte	0x8e
 13733 01d4 0C       		.uleb128 0xc
 13734 01d5 4A0A0000 		.4byte	.LASF48
 13735 01d9 90       		.byte	0x90
 13736 01da 0C       		.uleb128 0xc
 13737 01db 140D0000 		.4byte	.LASF49
 13738 01df A1       		.byte	0xa1
 13739 01e0 00       		.byte	0
 13740 01e1 0B       		.uleb128 0xb
 13741 01e2 0F0E0000 		.4byte	.LASF51
 13742 01e6 01       		.byte	0x1
 13743 01e7 2C000000 		.4byte	0x2c
 13744 01eb 06       		.byte	0x6
 13745 01ec 84       		.byte	0x84
 13746 01ed 16020000 		.4byte	0x216
 13747 01f1 0C       		.uleb128 0xc
 13748 01f2 BB040000 		.4byte	.LASF52
 13749 01f6 00       		.byte	0
 13750 01f7 0C       		.uleb128 0xc
 13751 01f8 3D080000 		.4byte	.LASF53
 13752 01fc 01       		.byte	0x1
 13753 01fd 0C       		.uleb128 0xc
 13754 01fe 94010000 		.4byte	.LASF54
 13755 0202 02       		.byte	0x2
 13756 0203 0C       		.uleb128 0xc
 13757 0204 30010000 		.4byte	.LASF55
 13758 0208 03       		.byte	0x3
 13759 0209 0C       		.uleb128 0xc
 13760 020a E3000000 		.4byte	.LASF56
 13761 020e 04       		.byte	0x4
 13762 020f 0C       		.uleb128 0xc
 13763 0210 24000000 		.4byte	.LASF57
 13764 0214 05       		.byte	0x5
 13765 0215 00       		.byte	0
 13766 0216 0B       		.uleb128 0xb
 13767 0217 1E070000 		.4byte	.LASF58
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 317


 13768 021b 01       		.byte	0x1
 13769 021c 2C000000 		.4byte	0x2c
 13770 0220 06       		.byte	0x6
 13771 0221 96       		.byte	0x96
 13772 0222 3F020000 		.4byte	0x23f
 13773 0226 0C       		.uleb128 0xc
 13774 0227 990D0000 		.4byte	.LASF59
 13775 022b 00       		.byte	0
 13776 022c 0C       		.uleb128 0xc
 13777 022d E2050000 		.4byte	.LASF60
 13778 0231 01       		.byte	0x1
 13779 0232 0C       		.uleb128 0xc
 13780 0233 E8080000 		.4byte	.LASF61
 13781 0237 02       		.byte	0x2
 13782 0238 0C       		.uleb128 0xc
 13783 0239 05050000 		.4byte	.LASF62
 13784 023d 03       		.byte	0x3
 13785 023e 00       		.byte	0
 13786 023f 0B       		.uleb128 0xb
 13787 0240 CC020000 		.4byte	.LASF63
 13788 0244 01       		.byte	0x1
 13789 0245 2C000000 		.4byte	0x2c
 13790 0249 06       		.byte	0x6
 13791 024a A0       		.byte	0xa0
 13792 024b 5C020000 		.4byte	0x25c
 13793 024f 0C       		.uleb128 0xc
 13794 0250 140B0000 		.4byte	.LASF64
 13795 0254 00       		.byte	0
 13796 0255 0C       		.uleb128 0xc
 13797 0256 56070000 		.4byte	.LASF65
 13798 025a 01       		.byte	0x1
 13799 025b 00       		.byte	0
 13800 025c 0B       		.uleb128 0xb
 13801 025d 8D090000 		.4byte	.LASF66
 13802 0261 01       		.byte	0x1
 13803 0262 2C000000 		.4byte	0x2c
 13804 0266 06       		.byte	0x6
 13805 0267 A5       		.byte	0xa5
 13806 0268 79020000 		.4byte	0x279
 13807 026c 0C       		.uleb128 0xc
 13808 026d A0040000 		.4byte	.LASF67
 13809 0271 00       		.byte	0
 13810 0272 0C       		.uleb128 0xc
 13811 0273 9F050000 		.4byte	.LASF68
 13812 0277 01       		.byte	0x1
 13813 0278 00       		.byte	0
 13814 0279 0B       		.uleb128 0xb
 13815 027a 4C0C0000 		.4byte	.LASF69
 13816 027e 01       		.byte	0x1
 13817 027f 2C000000 		.4byte	0x2c
 13818 0283 06       		.byte	0x6
 13819 0284 AD       		.byte	0xad
 13820 0285 C0020000 		.4byte	0x2c0
 13821 0289 0C       		.uleb128 0xc
 13822 028a A6050000 		.4byte	.LASF70
 13823 028e 00       		.byte	0
 13824 028f 0C       		.uleb128 0xc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 318


 13825 0290 1D0E0000 		.4byte	.LASF71
 13826 0294 01       		.byte	0x1
 13827 0295 0C       		.uleb128 0xc
 13828 0296 2E070000 		.4byte	.LASF72
 13829 029a 02       		.byte	0x2
 13830 029b 0C       		.uleb128 0xc
 13831 029c 97080000 		.4byte	.LASF73
 13832 02a0 03       		.byte	0x3
 13833 02a1 0C       		.uleb128 0xc
 13834 02a2 0A080000 		.4byte	.LASF74
 13835 02a6 04       		.byte	0x4
 13836 02a7 0C       		.uleb128 0xc
 13837 02a8 DB090000 		.4byte	.LASF75
 13838 02ac 05       		.byte	0x5
 13839 02ad 0C       		.uleb128 0xc
 13840 02ae 04090000 		.4byte	.LASF76
 13841 02b2 06       		.byte	0x6
 13842 02b3 0C       		.uleb128 0xc
 13843 02b4 82080000 		.4byte	.LASF77
 13844 02b8 07       		.byte	0x7
 13845 02b9 0C       		.uleb128 0xc
 13846 02ba 8D040000 		.4byte	.LASF78
 13847 02be 08       		.byte	0x8
 13848 02bf 00       		.byte	0
 13849 02c0 0D       		.uleb128 0xd
 13850 02c1 E4060000 		.4byte	.LASF81
 13851 02c5 10       		.byte	0x10
 13852 02c6 07       		.byte	0x7
 13853 02c7 A2       		.byte	0xa2
 13854 02c8 FD020000 		.4byte	0x2fd
 13855 02cc 0E       		.uleb128 0xe
 13856 02cd 706F7300 		.ascii	"pos\000"
 13857 02d1 07       		.byte	0x7
 13858 02d2 A3       		.byte	0xa3
 13859 02d3 D3000000 		.4byte	0xd3
 13860 02d7 00       		.byte	0
 13861 02d8 0F       		.uleb128 0xf
 13862 02d9 D2050000 		.4byte	.LASF79
 13863 02dd 07       		.byte	0x7
 13864 02de A4       		.byte	0xa4
 13865 02df D3000000 		.4byte	0xd3
 13866 02e3 04       		.byte	0x4
 13867 02e4 0E       		.uleb128 0xe
 13868 02e5 70776D00 		.ascii	"pwm\000"
 13869 02e9 07       		.byte	0x7
 13870 02ea A5       		.byte	0xa5
 13871 02eb D3000000 		.4byte	0xd3
 13872 02ef 08       		.byte	0x8
 13873 02f0 0F       		.uleb128 0xf
 13874 02f1 0C0A0000 		.4byte	.LASF80
 13875 02f5 07       		.byte	0x7
 13876 02f6 A6       		.byte	0xa6
 13877 02f7 97000000 		.4byte	0x97
 13878 02fb 0C       		.byte	0xc
 13879 02fc 00       		.byte	0
 13880 02fd 0D       		.uleb128 0xd
 13881 02fe 0C0B0000 		.4byte	.LASF82
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 319


 13882 0302 38       		.byte	0x38
 13883 0303 07       		.byte	0x7
 13884 0304 AD       		.byte	0xad
 13885 0305 5E030000 		.4byte	0x35e
 13886 0309 0E       		.uleb128 0xe
 13887 030a 706F7300 		.ascii	"pos\000"
 13888 030e 07       		.byte	0x7
 13889 030f AE       		.byte	0xae
 13890 0310 5E030000 		.4byte	0x35e
 13891 0314 00       		.byte	0
 13892 0315 0F       		.uleb128 0xf
 13893 0316 D2050000 		.4byte	.LASF79
 13894 031a 07       		.byte	0x7
 13895 031b AF       		.byte	0xaf
 13896 031c D3000000 		.4byte	0xd3
 13897 0320 0C       		.byte	0xc
 13898 0321 0F       		.uleb128 0xf
 13899 0322 990C0000 		.4byte	.LASF83
 13900 0326 07       		.byte	0x7
 13901 0327 B0       		.byte	0xb0
 13902 0328 D3000000 		.4byte	0xd3
 13903 032c 10       		.byte	0x10
 13904 032d 0E       		.uleb128 0xe
 13905 032e 726F7400 		.ascii	"rot\000"
 13906 0332 07       		.byte	0x7
 13907 0333 B1       		.byte	0xb1
 13908 0334 6E030000 		.4byte	0x36e
 13909 0338 14       		.byte	0x14
 13910 0339 0E       		.uleb128 0xe
 13911 033a 656D6700 		.ascii	"emg\000"
 13912 033e 07       		.byte	0x7
 13913 033f B3       		.byte	0xb3
 13914 0340 7E030000 		.4byte	0x37e
 13915 0344 18       		.byte	0x18
 13916 0345 0E       		.uleb128 0xe
 13917 0346 76656C00 		.ascii	"vel\000"
 13918 034a 07       		.byte	0x7
 13919 034b B4       		.byte	0xb4
 13920 034c 5E030000 		.4byte	0x35e
 13921 0350 20       		.byte	0x20
 13922 0351 0E       		.uleb128 0xe
 13923 0352 61636300 		.ascii	"acc\000"
 13924 0356 07       		.byte	0x7
 13925 0357 B5       		.byte	0xb5
 13926 0358 5E030000 		.4byte	0x35e
 13927 035c 2C       		.byte	0x2c
 13928 035d 00       		.byte	0
 13929 035e 09       		.uleb128 0x9
 13930 035f D3000000 		.4byte	0xd3
 13931 0363 6E030000 		.4byte	0x36e
 13932 0367 0A       		.uleb128 0xa
 13933 0368 18010000 		.4byte	0x118
 13934 036c 02       		.byte	0x2
 13935 036d 00       		.byte	0
 13936 036e 09       		.uleb128 0x9
 13937 036f BB000000 		.4byte	0xbb
 13938 0373 7E030000 		.4byte	0x37e
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 320


 13939 0377 0A       		.uleb128 0xa
 13940 0378 18010000 		.4byte	0x118
 13941 037c 02       		.byte	0x2
 13942 037d 00       		.byte	0
 13943 037e 09       		.uleb128 0x9
 13944 037f D3000000 		.4byte	0xd3
 13945 0383 8E030000 		.4byte	0x38e
 13946 0387 0A       		.uleb128 0xa
 13947 0388 18010000 		.4byte	0x118
 13948 038c 01       		.byte	0x1
 13949 038d 00       		.byte	0
 13950 038e 0D       		.uleb128 0xd
 13951 038f 56000000 		.4byte	.LASF84
 13952 0393 86       		.byte	0x86
 13953 0394 07       		.byte	0x7
 13954 0395 BC       		.byte	0xbc
 13955 0396 CB030000 		.4byte	0x3cb
 13956 039a 0F       		.uleb128 0xf
 13957 039b 5B040000 		.4byte	.LASF85
 13958 039f 07       		.byte	0x7
 13959 03a0 BD       		.byte	0xbd
 13960 03a1 CB030000 		.4byte	0x3cb
 13961 03a5 00       		.byte	0
 13962 03a6 0F       		.uleb128 0xf
 13963 03a7 FB090000 		.4byte	.LASF86
 13964 03ab 07       		.byte	0x7
 13965 03ac BE       		.byte	0xbe
 13966 03ad C7000000 		.4byte	0xc7
 13967 03b1 80       		.byte	0x80
 13968 03b2 0E       		.uleb128 0xe
 13969 03b3 696E6400 		.ascii	"ind\000"
 13970 03b7 07       		.byte	0x7
 13971 03b8 BF       		.byte	0xbf
 13972 03b9 C7000000 		.4byte	0xc7
 13973 03bd 82       		.byte	0x82
 13974 03be 0F       		.uleb128 0xf
 13975 03bf 8E010000 		.4byte	.LASF87
 13976 03c3 07       		.byte	0x7
 13977 03c4 C0       		.byte	0xc0
 13978 03c5 97000000 		.4byte	0x97
 13979 03c9 84       		.byte	0x84
 13980 03ca 00       		.byte	0
 13981 03cb 09       		.uleb128 0x9
 13982 03cc 97000000 		.4byte	0x97
 13983 03d0 DB030000 		.4byte	0x3db
 13984 03d4 0A       		.uleb128 0xa
 13985 03d5 18010000 		.4byte	0x118
 13986 03d9 7F       		.byte	0x7f
 13987 03da 00       		.byte	0
 13988 03db 10       		.uleb128 0x10
 13989 03dc 25060000 		.4byte	.LASF88
 13990 03e0 3001     		.2byte	0x130
 13991 03e2 07       		.byte	0x7
 13992 03e3 C8       		.byte	0xc8
 13993 03e4 B9060000 		.4byte	0x6b9
 13994 03e8 0F       		.uleb128 0xf
 13995 03e9 16080000 		.4byte	.LASF89
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 321


 13996 03ed 07       		.byte	0x7
 13997 03ee C9       		.byte	0xc9
 13998 03ef 97000000 		.4byte	0x97
 13999 03f3 00       		.byte	0
 14000 03f4 0E       		.uleb128 0xe
 14001 03f5 696400   		.ascii	"id\000"
 14002 03f8 07       		.byte	0x7
 14003 03f9 CA       		.byte	0xca
 14004 03fa 97000000 		.4byte	0x97
 14005 03fe 01       		.byte	0x1
 14006 03ff 0E       		.uleb128 0xe
 14007 0400 6B5F7000 		.ascii	"k_p\000"
 14008 0404 07       		.byte	0x7
 14009 0405 CC       		.byte	0xcc
 14010 0406 D3000000 		.4byte	0xd3
 14011 040a 04       		.byte	0x4
 14012 040b 0E       		.uleb128 0xe
 14013 040c 6B5F6900 		.ascii	"k_i\000"
 14014 0410 07       		.byte	0x7
 14015 0411 CD       		.byte	0xcd
 14016 0412 D3000000 		.4byte	0xd3
 14017 0416 08       		.byte	0x8
 14018 0417 0E       		.uleb128 0xe
 14019 0418 6B5F6400 		.ascii	"k_d\000"
 14020 041c 07       		.byte	0x7
 14021 041d CE       		.byte	0xce
 14022 041e D3000000 		.4byte	0xd3
 14023 0422 0C       		.byte	0xc
 14024 0423 0F       		.uleb128 0xf
 14025 0424 5B0A0000 		.4byte	.LASF90
 14026 0428 07       		.byte	0x7
 14027 0429 D0       		.byte	0xd0
 14028 042a D3000000 		.4byte	0xd3
 14029 042e 10       		.byte	0x10
 14030 042f 0F       		.uleb128 0xf
 14031 0430 E3030000 		.4byte	.LASF91
 14032 0434 07       		.byte	0x7
 14033 0435 D1       		.byte	0xd1
 14034 0436 D3000000 		.4byte	0xd3
 14035 043a 14       		.byte	0x14
 14036 043b 0F       		.uleb128 0xf
 14037 043c C8030000 		.4byte	.LASF92
 14038 0440 07       		.byte	0x7
 14039 0441 D2       		.byte	0xd2
 14040 0442 D3000000 		.4byte	0xd3
 14041 0446 18       		.byte	0x18
 14042 0447 0F       		.uleb128 0xf
 14043 0448 920C0000 		.4byte	.LASF93
 14044 044c 07       		.byte	0x7
 14045 044d D3       		.byte	0xd3
 14046 044e D3000000 		.4byte	0xd3
 14047 0452 1C       		.byte	0x1c
 14048 0453 0F       		.uleb128 0xf
 14049 0454 45040000 		.4byte	.LASF94
 14050 0458 07       		.byte	0x7
 14051 0459 D5       		.byte	0xd5
 14052 045a D3000000 		.4byte	0xd3
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 322


 14053 045e 20       		.byte	0x20
 14054 045f 0F       		.uleb128 0xf
 14055 0460 720B0000 		.4byte	.LASF95
 14056 0464 07       		.byte	0x7
 14057 0465 D6       		.byte	0xd6
 14058 0466 D3000000 		.4byte	0xd3
 14059 046a 24       		.byte	0x24
 14060 046b 0F       		.uleb128 0xf
 14061 046c 62040000 		.4byte	.LASF96
 14062 0470 07       		.byte	0x7
 14063 0471 D7       		.byte	0xd7
 14064 0472 D3000000 		.4byte	0xd3
 14065 0476 28       		.byte	0x28
 14066 0477 0F       		.uleb128 0xf
 14067 0478 EE040000 		.4byte	.LASF97
 14068 047c 07       		.byte	0x7
 14069 047d D8       		.byte	0xd8
 14070 047e D3000000 		.4byte	0xd3
 14071 0482 2C       		.byte	0x2c
 14072 0483 0F       		.uleb128 0xf
 14073 0484 5B0E0000 		.4byte	.LASF98
 14074 0488 07       		.byte	0x7
 14075 0489 DA       		.byte	0xda
 14076 048a D3000000 		.4byte	0xd3
 14077 048e 30       		.byte	0x30
 14078 048f 0F       		.uleb128 0xf
 14079 0490 93050000 		.4byte	.LASF99
 14080 0494 07       		.byte	0x7
 14081 0495 DB       		.byte	0xdb
 14082 0496 97000000 		.4byte	0x97
 14083 049a 34       		.byte	0x34
 14084 049b 0F       		.uleb128 0xf
 14085 049c D7050000 		.4byte	.LASF100
 14086 04a0 07       		.byte	0x7
 14087 04a1 DC       		.byte	0xdc
 14088 04a2 97000000 		.4byte	0x97
 14089 04a6 35       		.byte	0x35
 14090 04a7 0F       		.uleb128 0xf
 14091 04a8 2A080000 		.4byte	.LASF101
 14092 04ac 07       		.byte	0x7
 14093 04ad DD       		.byte	0xdd
 14094 04ae 97000000 		.4byte	0x97
 14095 04b2 36       		.byte	0x36
 14096 04b3 0E       		.uleb128 0xe
 14097 04b4 72657300 		.ascii	"res\000"
 14098 04b8 07       		.byte	0x7
 14099 04b9 DE       		.byte	0xde
 14100 04ba B9060000 		.4byte	0x6b9
 14101 04be 37       		.byte	0x37
 14102 04bf 0F       		.uleb128 0xf
 14103 04c0 99050000 		.4byte	.LASF102
 14104 04c4 07       		.byte	0x7
 14105 04c5 E0       		.byte	0xe0
 14106 04c6 5E030000 		.4byte	0x35e
 14107 04ca 3C       		.byte	0x3c
 14108 04cb 0F       		.uleb128 0xf
 14109 04cc DC030000 		.4byte	.LASF103
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 323


 14110 04d0 07       		.byte	0x7
 14111 04d1 E2       		.byte	0xe2
 14112 04d2 C9060000 		.4byte	0x6c9
 14113 04d6 48       		.byte	0x48
 14114 04d7 0F       		.uleb128 0xf
 14115 04d8 820D0000 		.4byte	.LASF104
 14116 04dc 07       		.byte	0x7
 14117 04dd E4       		.byte	0xe4
 14118 04de 97000000 		.4byte	0x97
 14119 04e2 54       		.byte	0x54
 14120 04e3 0F       		.uleb128 0xf
 14121 04e4 C8000000 		.4byte	.LASF105
 14122 04e8 07       		.byte	0x7
 14123 04e9 E6       		.byte	0xe6
 14124 04ea D3000000 		.4byte	0xd3
 14125 04ee 58       		.byte	0x58
 14126 04ef 0F       		.uleb128 0xf
 14127 04f0 02040000 		.4byte	.LASF106
 14128 04f4 07       		.byte	0x7
 14129 04f5 E7       		.byte	0xe7
 14130 04f6 D3000000 		.4byte	0xd3
 14131 04fa 5C       		.byte	0x5c
 14132 04fb 0F       		.uleb128 0xf
 14133 04fc 8E070000 		.4byte	.LASF107
 14134 0500 07       		.byte	0x7
 14135 0501 E9       		.byte	0xe9
 14136 0502 D3000000 		.4byte	0xd3
 14137 0506 60       		.byte	0x60
 14138 0507 0F       		.uleb128 0xf
 14139 0508 95030000 		.4byte	.LASF108
 14140 050c 07       		.byte	0x7
 14141 050d EA       		.byte	0xea
 14142 050e D3000000 		.4byte	0xd3
 14143 0512 64       		.byte	0x64
 14144 0513 0F       		.uleb128 0xf
 14145 0514 010E0000 		.4byte	.LASF109
 14146 0518 07       		.byte	0x7
 14147 0519 EB       		.byte	0xeb
 14148 051a C7000000 		.4byte	0xc7
 14149 051e 68       		.byte	0x68
 14150 051f 0F       		.uleb128 0xf
 14151 0520 AD080000 		.4byte	.LASF110
 14152 0524 07       		.byte	0x7
 14153 0525 EC       		.byte	0xec
 14154 0526 D9060000 		.4byte	0x6d9
 14155 052a 6A       		.byte	0x6a
 14156 052b 0F       		.uleb128 0xf
 14157 052c F70A0000 		.4byte	.LASF111
 14158 0530 07       		.byte	0x7
 14159 0531 ED       		.byte	0xed
 14160 0532 97000000 		.4byte	0x97
 14161 0536 6E       		.byte	0x6e
 14162 0537 0F       		.uleb128 0xf
 14163 0538 D70D0000 		.4byte	.LASF112
 14164 053c 07       		.byte	0x7
 14165 053d F0       		.byte	0xf0
 14166 053e E9060000 		.4byte	0x6e9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 324


 14167 0542 70       		.byte	0x70
 14168 0543 0F       		.uleb128 0xf
 14169 0544 0E040000 		.4byte	.LASF113
 14170 0548 07       		.byte	0x7
 14171 0549 F1       		.byte	0xf1
 14172 054a 97000000 		.4byte	0x97
 14173 054e 78       		.byte	0x78
 14174 054f 0F       		.uleb128 0xf
 14175 0550 5D090000 		.4byte	.LASF114
 14176 0554 07       		.byte	0x7
 14177 0555 F2       		.byte	0xf2
 14178 0556 97000000 		.4byte	0x97
 14179 055a 79       		.byte	0x79
 14180 055b 0F       		.uleb128 0xf
 14181 055c 10090000 		.4byte	.LASF115
 14182 0560 07       		.byte	0x7
 14183 0561 F3       		.byte	0xf3
 14184 0562 BB000000 		.4byte	0xbb
 14185 0566 7A       		.byte	0x7a
 14186 0567 0F       		.uleb128 0xf
 14187 0568 7B0C0000 		.4byte	.LASF116
 14188 056c 07       		.byte	0x7
 14189 056d F4       		.byte	0xf4
 14190 056e 97000000 		.4byte	0x97
 14191 0572 7B       		.byte	0x7b
 14192 0573 0F       		.uleb128 0xf
 14193 0574 F7000000 		.4byte	.LASF117
 14194 0578 07       		.byte	0x7
 14195 0579 F5       		.byte	0xf5
 14196 057a F9060000 		.4byte	0x6f9
 14197 057e 7C       		.byte	0x7c
 14198 057f 0F       		.uleb128 0xf
 14199 0580 E60C0000 		.4byte	.LASF118
 14200 0584 07       		.byte	0x7
 14201 0585 F8       		.byte	0xf8
 14202 0586 97000000 		.4byte	0x97
 14203 058a 94       		.byte	0x94
 14204 058b 0F       		.uleb128 0xf
 14205 058c E6090000 		.4byte	.LASF119
 14206 0590 07       		.byte	0x7
 14207 0591 F9       		.byte	0xf9
 14208 0592 97000000 		.4byte	0x97
 14209 0596 95       		.byte	0x95
 14210 0597 0F       		.uleb128 0xf
 14211 0598 39070000 		.4byte	.LASF120
 14212 059c 07       		.byte	0x7
 14213 059d FA       		.byte	0xfa
 14214 059e 97000000 		.4byte	0x97
 14215 05a2 96       		.byte	0x96
 14216 05a3 0F       		.uleb128 0xf
 14217 05a4 73090000 		.4byte	.LASF121
 14218 05a8 07       		.byte	0x7
 14219 05a9 FB       		.byte	0xfb
 14220 05aa 97000000 		.4byte	0x97
 14221 05ae 97       		.byte	0x97
 14222 05af 0F       		.uleb128 0xf
 14223 05b0 C9050000 		.4byte	.LASF122
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 325


 14224 05b4 07       		.byte	0x7
 14225 05b5 FC       		.byte	0xfc
 14226 05b6 D3000000 		.4byte	0xd3
 14227 05ba 98       		.byte	0x98
 14228 05bb 0F       		.uleb128 0xf
 14229 05bc 3F0E0000 		.4byte	.LASF123
 14230 05c0 07       		.byte	0x7
 14231 05c1 FD       		.byte	0xfd
 14232 05c2 D3000000 		.4byte	0xd3
 14233 05c6 9C       		.byte	0x9c
 14234 05c7 0F       		.uleb128 0xf
 14235 05c8 18040000 		.4byte	.LASF124
 14236 05cc 07       		.byte	0x7
 14237 05cd FF       		.byte	0xff
 14238 05ce D3000000 		.4byte	0xd3
 14239 05d2 A0       		.byte	0xa0
 14240 05d3 11       		.uleb128 0x11
 14241 05d4 D5040000 		.4byte	.LASF125
 14242 05d8 07       		.byte	0x7
 14243 05d9 0001     		.2byte	0x100
 14244 05db 97000000 		.4byte	0x97
 14245 05df A4       		.byte	0xa4
 14246 05e0 11       		.uleb128 0x11
 14247 05e1 700C0000 		.4byte	.LASF126
 14248 05e5 07       		.byte	0x7
 14249 05e6 0101     		.2byte	0x101
 14250 05e8 97000000 		.4byte	0x97
 14251 05ec A5       		.byte	0xa5
 14252 05ed 11       		.uleb128 0x11
 14253 05ee 0C030000 		.4byte	.LASF127
 14254 05f2 07       		.byte	0x7
 14255 05f3 0201     		.2byte	0x102
 14256 05f5 97000000 		.4byte	0x97
 14257 05f9 A6       		.byte	0xa6
 14258 05fa 11       		.uleb128 0x11
 14259 05fb B0010000 		.4byte	.LASF128
 14260 05ff 07       		.byte	0x7
 14261 0600 0301     		.2byte	0x103
 14262 0602 97000000 		.4byte	0x97
 14263 0606 A7       		.byte	0xa7
 14264 0607 11       		.uleb128 0x11
 14265 0608 5D0C0000 		.4byte	.LASF129
 14266 060c 07       		.byte	0x7
 14267 060d 0401     		.2byte	0x104
 14268 060f 97000000 		.4byte	0x97
 14269 0613 A8       		.byte	0xa8
 14270 0614 11       		.uleb128 0x11
 14271 0615 EA010000 		.4byte	.LASF130
 14272 0619 07       		.byte	0x7
 14273 061a 0501     		.2byte	0x105
 14274 061c 09070000 		.4byte	0x709
 14275 0620 A9       		.byte	0xa9
 14276 0621 11       		.uleb128 0x11
 14277 0622 26020000 		.4byte	.LASF131
 14278 0626 07       		.byte	0x7
 14279 0627 0701     		.2byte	0x107
 14280 0629 E9060000 		.4byte	0x6e9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 326


 14281 062d C0       		.byte	0xc0
 14282 062e 11       		.uleb128 0x11
 14283 062f 6E010000 		.4byte	.LASF132
 14284 0633 07       		.byte	0x7
 14285 0634 0901     		.2byte	0x109
 14286 0636 19070000 		.4byte	0x719
 14287 063a C8       		.byte	0xc8
 14288 063b 11       		.uleb128 0x11
 14289 063c DB080000 		.4byte	.LASF133
 14290 0640 07       		.byte	0x7
 14291 0641 0B01     		.2byte	0x10b
 14292 0643 29070000 		.4byte	0x729
 14293 0647 F0       		.byte	0xf0
 14294 0648 12       		.uleb128 0x12
 14295 0649 03010000 		.4byte	.LASF134
 14296 064d 07       		.byte	0x7
 14297 064e 0D01     		.2byte	0x10d
 14298 0650 AF000000 		.4byte	0xaf
 14299 0654 0001     		.2byte	0x100
 14300 0656 12       		.uleb128 0x12
 14301 0657 CD0D0000 		.4byte	.LASF135
 14302 065b 07       		.byte	0x7
 14303 065c 0E01     		.2byte	0x10e
 14304 065e AF000000 		.4byte	0xaf
 14305 0662 0401     		.2byte	0x104
 14306 0664 12       		.uleb128 0x12
 14307 0665 50050000 		.4byte	.LASF136
 14308 0669 07       		.byte	0x7
 14309 066a 0F01     		.2byte	0x10f
 14310 066c AF000000 		.4byte	0xaf
 14311 0670 0801     		.2byte	0x108
 14312 0672 12       		.uleb128 0x12
 14313 0673 83050000 		.4byte	.LASF137
 14314 0677 07       		.byte	0x7
 14315 0678 1001     		.2byte	0x110
 14316 067a AF000000 		.4byte	0xaf
 14317 067e 0C01     		.2byte	0x10c
 14318 0680 12       		.uleb128 0x12
 14319 0681 53090000 		.4byte	.LASF138
 14320 0685 07       		.byte	0x7
 14321 0686 1201     		.2byte	0x112
 14322 0688 39070000 		.4byte	0x739
 14323 068c 1001     		.2byte	0x110
 14324 068e 12       		.uleb128 0x12
 14325 068f D3010000 		.4byte	.LASF139
 14326 0693 07       		.byte	0x7
 14327 0694 1301     		.2byte	0x113
 14328 0696 49070000 		.4byte	0x749
 14329 069a 1601     		.2byte	0x116
 14330 069c 12       		.uleb128 0x12
 14331 069d 7E090000 		.4byte	.LASF140
 14332 06a1 07       		.byte	0x7
 14333 06a2 1601     		.2byte	0x116
 14334 06a4 97000000 		.4byte	0x97
 14335 06a8 2001     		.2byte	0x120
 14336 06aa 12       		.uleb128 0x12
 14337 06ab B7070000 		.4byte	.LASF141
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 327


 14338 06af 07       		.byte	0x7
 14339 06b0 1701     		.2byte	0x117
 14340 06b2 59070000 		.4byte	0x759
 14341 06b6 2101     		.2byte	0x121
 14342 06b8 00       		.byte	0
 14343 06b9 09       		.uleb128 0x9
 14344 06ba 97000000 		.4byte	0x97
 14345 06be C9060000 		.4byte	0x6c9
 14346 06c2 0A       		.uleb128 0xa
 14347 06c3 18010000 		.4byte	0x118
 14348 06c7 02       		.byte	0x2
 14349 06c8 00       		.byte	0
 14350 06c9 09       		.uleb128 0x9
 14351 06ca DF000000 		.4byte	0xdf
 14352 06ce D9060000 		.4byte	0x6d9
 14353 06d2 0A       		.uleb128 0xa
 14354 06d3 18010000 		.4byte	0x118
 14355 06d7 02       		.byte	0x2
 14356 06d8 00       		.byte	0
 14357 06d9 09       		.uleb128 0x9
 14358 06da A3000000 		.4byte	0xa3
 14359 06de E9060000 		.4byte	0x6e9
 14360 06e2 0A       		.uleb128 0xa
 14361 06e3 18010000 		.4byte	0x118
 14362 06e7 01       		.byte	0x1
 14363 06e8 00       		.byte	0
 14364 06e9 09       		.uleb128 0x9
 14365 06ea AF000000 		.4byte	0xaf
 14366 06ee F9060000 		.4byte	0x6f9
 14367 06f2 0A       		.uleb128 0xa
 14368 06f3 18010000 		.4byte	0x118
 14369 06f7 01       		.byte	0x1
 14370 06f8 00       		.byte	0
 14371 06f9 09       		.uleb128 0x9
 14372 06fa EB000000 		.4byte	0xeb
 14373 06fe 09070000 		.4byte	0x709
 14374 0702 0A       		.uleb128 0xa
 14375 0703 18010000 		.4byte	0x118
 14376 0707 05       		.byte	0x5
 14377 0708 00       		.byte	0
 14378 0709 09       		.uleb128 0x9
 14379 070a 97000000 		.4byte	0x97
 14380 070e 19070000 		.4byte	0x719
 14381 0712 0A       		.uleb128 0xa
 14382 0713 18010000 		.4byte	0x118
 14383 0717 16       		.byte	0x16
 14384 0718 00       		.byte	0
 14385 0719 09       		.uleb128 0x9
 14386 071a AF000000 		.4byte	0xaf
 14387 071e 29070000 		.4byte	0x729
 14388 0722 0A       		.uleb128 0xa
 14389 0723 18010000 		.4byte	0x118
 14390 0727 09       		.byte	0x9
 14391 0728 00       		.byte	0
 14392 0729 09       		.uleb128 0x9
 14393 072a AF000000 		.4byte	0xaf
 14394 072e 39070000 		.4byte	0x739
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 328


 14395 0732 0A       		.uleb128 0xa
 14396 0733 18010000 		.4byte	0x118
 14397 0737 03       		.byte	0x3
 14398 0738 00       		.byte	0
 14399 0739 09       		.uleb128 0x9
 14400 073a 97000000 		.4byte	0x97
 14401 073e 49070000 		.4byte	0x749
 14402 0742 0A       		.uleb128 0xa
 14403 0743 18010000 		.4byte	0x118
 14404 0747 05       		.byte	0x5
 14405 0748 00       		.byte	0
 14406 0749 09       		.uleb128 0x9
 14407 074a 97000000 		.4byte	0x97
 14408 074e 59070000 		.4byte	0x759
 14409 0752 0A       		.uleb128 0xa
 14410 0753 18010000 		.4byte	0x118
 14411 0757 09       		.byte	0x9
 14412 0758 00       		.byte	0
 14413 0759 09       		.uleb128 0x9
 14414 075a 97000000 		.4byte	0x97
 14415 075e 6F070000 		.4byte	0x76f
 14416 0762 0A       		.uleb128 0xa
 14417 0763 18010000 		.4byte	0x118
 14418 0767 02       		.byte	0x2
 14419 0768 0A       		.uleb128 0xa
 14420 0769 18010000 		.4byte	0x118
 14421 076d 04       		.byte	0x4
 14422 076e 00       		.byte	0
 14423 076f 13       		.uleb128 0x13
 14424 0770 4E0D0000 		.4byte	.LASF142
 14425 0774 28       		.byte	0x28
 14426 0775 07       		.byte	0x7
 14427 0776 1B01     		.2byte	0x11b
 14428 0778 CB070000 		.4byte	0x7cb
 14429 077c 11       		.uleb128 0x11
 14430 077d 56030000 		.4byte	.LASF143
 14431 0781 07       		.byte	0x7
 14432 0782 1C01     		.2byte	0x11c
 14433 0784 97000000 		.4byte	0x97
 14434 0788 00       		.byte	0
 14435 0789 11       		.uleb128 0x11
 14436 078a F7010000 		.4byte	.LASF144
 14437 078e 07       		.byte	0x7
 14438 078f 1D01     		.2byte	0x11d
 14439 0791 CB070000 		.4byte	0x7cb
 14440 0795 02       		.byte	0x2
 14441 0796 11       		.uleb128 0x11
 14442 0797 48090000 		.4byte	.LASF145
 14443 079b 07       		.byte	0x7
 14444 079c 1E01     		.2byte	0x11e
 14445 079e CB070000 		.4byte	0x7cb
 14446 07a2 08       		.byte	0x8
 14447 07a3 11       		.uleb128 0x11
 14448 07a4 020A0000 		.4byte	.LASF146
 14449 07a8 07       		.byte	0x7
 14450 07a9 1F01     		.2byte	0x11f
 14451 07ab CB070000 		.4byte	0x7cb
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 329


 14452 07af 0E       		.byte	0xe
 14453 07b0 11       		.uleb128 0x11
 14454 07b1 B0050000 		.4byte	.LASF147
 14455 07b5 07       		.byte	0x7
 14456 07b6 2001     		.2byte	0x120
 14457 07b8 DB070000 		.4byte	0x7db
 14458 07bc 14       		.byte	0x14
 14459 07bd 11       		.uleb128 0x11
 14460 07be 7C010000 		.4byte	.LASF148
 14461 07c2 07       		.byte	0x7
 14462 07c3 2101     		.2byte	0x121
 14463 07c5 C7000000 		.4byte	0xc7
 14464 07c9 24       		.byte	0x24
 14465 07ca 00       		.byte	0
 14466 07cb 09       		.uleb128 0x9
 14467 07cc C7000000 		.4byte	0xc7
 14468 07d0 DB070000 		.4byte	0x7db
 14469 07d4 0A       		.uleb128 0xa
 14470 07d5 18010000 		.4byte	0x118
 14471 07d9 02       		.byte	0x2
 14472 07da 00       		.byte	0
 14473 07db 09       		.uleb128 0x9
 14474 07dc EB000000 		.4byte	0xeb
 14475 07e0 EB070000 		.4byte	0x7eb
 14476 07e4 0A       		.uleb128 0xa
 14477 07e5 18010000 		.4byte	0x118
 14478 07e9 03       		.byte	0x3
 14479 07ea 00       		.byte	0
 14480 07eb 13       		.uleb128 0x13
 14481 07ec AA020000 		.4byte	.LASF149
 14482 07f0 06       		.byte	0x6
 14483 07f1 07       		.byte	0x7
 14484 07f2 3101     		.2byte	0x131
 14485 07f4 2D080000 		.4byte	0x82d
 14486 07f8 11       		.uleb128 0x11
 14487 07f9 36050000 		.4byte	.LASF150
 14488 07fd 07       		.byte	0x7
 14489 07fe 3201     		.2byte	0x132
 14490 0800 97000000 		.4byte	0x97
 14491 0804 00       		.byte	0
 14492 0805 11       		.uleb128 0x11
 14493 0806 640E0000 		.4byte	.LASF151
 14494 080a 07       		.byte	0x7
 14495 080b 3301     		.2byte	0x133
 14496 080d 97000000 		.4byte	0x97
 14497 0811 01       		.byte	0x1
 14498 0812 11       		.uleb128 0x11
 14499 0813 80040000 		.4byte	.LASF152
 14500 0817 07       		.byte	0x7
 14501 0818 3401     		.2byte	0x134
 14502 081a C7000000 		.4byte	0xc7
 14503 081e 02       		.byte	0x2
 14504 081f 11       		.uleb128 0x11
 14505 0820 82070000 		.4byte	.LASF153
 14506 0824 07       		.byte	0x7
 14507 0825 3501     		.2byte	0x135
 14508 0827 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 330


 14509 082b 04       		.byte	0x4
 14510 082c 00       		.byte	0
 14511 082d 14       		.uleb128 0x14
 14512 082e D90A0000 		.4byte	.LASF279
 14513 0832 02       		.byte	0x2
 14514 0833 1403     		.2byte	0x314
 14515 0835 8C000000 		.4byte	0x8c
 14516 0839 03       		.byte	0x3
 14517 083a 57080000 		.4byte	0x857
 14518 083e 15       		.uleb128 0x15
 14519 083f 50030000 		.4byte	.LASF221
 14520 0843 02       		.byte	0x2
 14521 0844 1403     		.2byte	0x314
 14522 0846 8C000000 		.4byte	0x8c
 14523 084a 16       		.uleb128 0x16
 14524 084b 87010000 		.4byte	.LASF280
 14525 084f 02       		.byte	0x2
 14526 0850 1603     		.2byte	0x316
 14527 0852 8C000000 		.4byte	0x8c
 14528 0856 00       		.byte	0
 14529 0857 17       		.uleb128 0x17
 14530 0858 500B0000 		.4byte	.LASF154
 14531 085c 01       		.byte	0x1
 14532 085d 42       		.byte	0x42
 14533 085e 00000000 		.4byte	.LFB64
 14534 0862 90040000 		.4byte	.LFE64-.LFB64
 14535 0866 01       		.uleb128 0x1
 14536 0867 9C       		.byte	0x9c
 14537 0868 D3080000 		.4byte	0x8d3
 14538 086c 18       		.uleb128 0x18
 14539 086d 86040000 		.4byte	.LASF156
 14540 0871 01       		.byte	0x1
 14541 0872 44       		.byte	0x44
 14542 0873 97000000 		.4byte	0x97
 14543 0877 02       		.uleb128 0x2
 14544 0878 91       		.byte	0x91
 14545 0879 77       		.sleb128 -9
 14546 087a 19       		.uleb128 0x19
 14547 087b 2D080000 		.4byte	0x82d
 14548 087f 22030000 		.4byte	.LBB6
 14549 0883 08000000 		.4byte	.LBE6-.LBB6
 14550 0887 01       		.byte	0x1
 14551 0888 9B       		.byte	0x9b
 14552 0889 A8080000 		.4byte	0x8a8
 14553 088d 1A       		.uleb128 0x1a
 14554 088e 3E080000 		.4byte	0x83e
 14555 0892 02       		.uleb128 0x2
 14556 0893 91       		.byte	0x91
 14557 0894 6C       		.sleb128 -20
 14558 0895 1B       		.uleb128 0x1b
 14559 0896 22030000 		.4byte	.LBB7
 14560 089a 08000000 		.4byte	.LBE7-.LBB7
 14561 089e 1C       		.uleb128 0x1c
 14562 089f 4A080000 		.4byte	0x84a
 14563 08a3 02       		.uleb128 0x2
 14564 08a4 91       		.byte	0x91
 14565 08a5 68       		.sleb128 -24
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 331


 14566 08a6 00       		.byte	0
 14567 08a7 00       		.byte	0
 14568 08a8 1D       		.uleb128 0x1d
 14569 08a9 2D080000 		.4byte	0x82d
 14570 08ad 40030000 		.4byte	.LBB8
 14571 08b1 08000000 		.4byte	.LBE8-.LBB8
 14572 08b5 01       		.byte	0x1
 14573 08b6 A7       		.byte	0xa7
 14574 08b7 1A       		.uleb128 0x1a
 14575 08b8 3E080000 		.4byte	0x83e
 14576 08bc 02       		.uleb128 0x2
 14577 08bd 91       		.byte	0x91
 14578 08be 70       		.sleb128 -16
 14579 08bf 1B       		.uleb128 0x1b
 14580 08c0 40030000 		.4byte	.LBB9
 14581 08c4 08000000 		.4byte	.LBE9-.LBB9
 14582 08c8 1C       		.uleb128 0x1c
 14583 08c9 4A080000 		.4byte	0x84a
 14584 08cd 02       		.uleb128 0x2
 14585 08ce 91       		.byte	0x91
 14586 08cf 64       		.sleb128 -28
 14587 08d0 00       		.byte	0
 14588 08d1 00       		.byte	0
 14589 08d2 00       		.byte	0
 14590 08d3 1E       		.uleb128 0x1e
 14591 08d4 00000000 		.4byte	.LASF155
 14592 08d8 01       		.byte	0x1
 14593 08d9 0F01     		.2byte	0x10f
 14594 08db 00000000 		.4byte	.LFB65
 14595 08df 22000000 		.4byte	.LFE65-.LFB65
 14596 08e3 01       		.uleb128 0x1
 14597 08e4 9C       		.byte	0x9c
 14598 08e5 FA080000 		.4byte	0x8fa
 14599 08e9 1F       		.uleb128 0x1f
 14600 08ea CE030000 		.4byte	.LASF157
 14601 08ee 01       		.byte	0x1
 14602 08ef 1001     		.2byte	0x110
 14603 08f1 FA080000 		.4byte	0x8fa
 14604 08f5 03       		.uleb128 0x3
 14605 08f6 91       		.byte	0x91
 14606 08f7 9C74     		.sleb128 -1508
 14607 08f9 00       		.byte	0
 14608 08fa 09       		.uleb128 0x9
 14609 08fb F9000000 		.4byte	0xf9
 14610 08ff 0B090000 		.4byte	0x90b
 14611 0903 20       		.uleb128 0x20
 14612 0904 18010000 		.4byte	0x118
 14613 0908 DB05     		.2byte	0x5db
 14614 090a 00       		.byte	0
 14615 090b 1E       		.uleb128 0x1e
 14616 090c 7A0D0000 		.4byte	.LASF158
 14617 0910 01       		.byte	0x1
 14618 0911 1B01     		.2byte	0x11b
 14619 0913 00000000 		.4byte	.LFB66
 14620 0917 70000000 		.4byte	.LFE66-.LFB66
 14621 091b 01       		.uleb128 0x1
 14622 091c 9C       		.byte	0x9c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 332


 14623 091d 42090000 		.4byte	0x942
 14624 0921 21       		.uleb128 0x21
 14625 0922 0A0D0000 		.4byte	.LASF183
 14626 0926 01       		.byte	0x1
 14627 0927 1B01     		.2byte	0x11b
 14628 0929 A3000000 		.4byte	0xa3
 14629 092d 03       		.uleb128 0x3
 14630 092e 91       		.byte	0x91
 14631 092f D660     		.sleb128 -4010
 14632 0931 1F       		.uleb128 0x1f
 14633 0932 CE030000 		.4byte	.LASF157
 14634 0936 01       		.byte	0x1
 14635 0937 1C01     		.2byte	0x11c
 14636 0939 42090000 		.4byte	0x942
 14637 093d 03       		.uleb128 0x3
 14638 093e 91       		.byte	0x91
 14639 093f D860     		.sleb128 -4008
 14640 0941 00       		.byte	0
 14641 0942 09       		.uleb128 0x9
 14642 0943 F9000000 		.4byte	0xf9
 14643 0947 53090000 		.4byte	0x953
 14644 094b 20       		.uleb128 0x20
 14645 094c 18010000 		.4byte	0x118
 14646 0950 9F0F     		.2byte	0xf9f
 14647 0952 00       		.byte	0
 14648 0953 22       		.uleb128 0x22
 14649 0954 53010000 		.4byte	.LASF206
 14650 0958 01       		.byte	0x1
 14651 0959 3501     		.2byte	0x135
 14652 095b 00000000 		.4byte	.LFB67
 14653 095f F8160000 		.4byte	.LFE67-.LFB67
 14654 0963 01       		.uleb128 0x1
 14655 0964 9C       		.byte	0x9c
 14656 0965 0D0B0000 		.4byte	0xb0d
 14657 0969 1F       		.uleb128 0x1f
 14658 096a 21040000 		.4byte	.LASF159
 14659 096e 01       		.byte	0x1
 14660 096f 3801     		.2byte	0x138
 14661 0971 0D0B0000 		.4byte	0xb0d
 14662 0975 03       		.uleb128 0x3
 14663 0976 91       		.byte	0x91
 14664 0977 F86A     		.sleb128 -2696
 14665 0979 1F       		.uleb128 0x1f
 14666 097a A5000000 		.4byte	.LASF160
 14667 097e 01       		.byte	0x1
 14668 097f 3901     		.2byte	0x139
 14669 0981 A3000000 		.4byte	0xa3
 14670 0985 02       		.uleb128 0x2
 14671 0986 91       		.byte	0x91
 14672 0987 5A       		.sleb128 -38
 14673 0988 23       		.uleb128 0x23
 14674 0989 6900     		.ascii	"i\000"
 14675 098b 01       		.byte	0x1
 14676 098c 3C01     		.2byte	0x13c
 14677 098e 97000000 		.4byte	0x97
 14678 0992 02       		.uleb128 0x2
 14679 0993 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 333


 14680 0994 67       		.sleb128 -25
 14681 0995 23       		.uleb128 0x23
 14682 0996 6A00     		.ascii	"j\000"
 14683 0998 01       		.byte	0x1
 14684 0999 3C01     		.2byte	0x13c
 14685 099b 97000000 		.4byte	0x97
 14686 099f 02       		.uleb128 0x2
 14687 09a0 91       		.byte	0x91
 14688 09a1 66       		.sleb128 -26
 14689 09a2 23       		.uleb128 0x23
 14690 09a3 69647800 		.ascii	"idx\000"
 14691 09a7 01       		.byte	0x1
 14692 09a8 3D01     		.2byte	0x13d
 14693 09aa 97000000 		.4byte	0x97
 14694 09ae 02       		.uleb128 0x2
 14695 09af 91       		.byte	0x91
 14696 09b0 65       		.sleb128 -27
 14697 09b1 1F       		.uleb128 0x1f
 14698 09b2 790B0000 		.4byte	.LASF161
 14699 09b6 01       		.byte	0x1
 14700 09b7 3E01     		.2byte	0x13e
 14701 09b9 97000000 		.4byte	0x97
 14702 09bd 02       		.uleb128 0x2
 14703 09be 91       		.byte	0x91
 14704 09bf 64       		.sleb128 -28
 14705 09c0 23       		.uleb128 0x23
 14706 09c1 736F6400 		.ascii	"sod\000"
 14707 09c5 01       		.byte	0x1
 14708 09c6 3F01     		.2byte	0x13f
 14709 09c8 97000000 		.4byte	0x97
 14710 09cc 02       		.uleb128 0x2
 14711 09cd 91       		.byte	0x91
 14712 09ce 63       		.sleb128 -29
 14713 09cf 1F       		.uleb128 0x1f
 14714 09d0 74080000 		.4byte	.LASF162
 14715 09d4 01       		.byte	0x1
 14716 09d5 4001     		.2byte	0x140
 14717 09d7 97000000 		.4byte	0x97
 14718 09db 02       		.uleb128 0x2
 14719 09dc 91       		.byte	0x91
 14720 09dd 62       		.sleb128 -30
 14721 09de 1F       		.uleb128 0x1f
 14722 09df 4A0E0000 		.4byte	.LASF163
 14723 09e3 01       		.byte	0x1
 14724 09e4 4101     		.2byte	0x141
 14725 09e6 1E0B0000 		.4byte	0xb1e
 14726 09ea 03       		.uleb128 0x3
 14727 09eb 91       		.byte	0x91
 14728 09ec C46A     		.sleb128 -2748
 14729 09ee 1F       		.uleb128 0x1f
 14730 09ef C0070000 		.4byte	.LASF164
 14731 09f3 01       		.byte	0x1
 14732 09f4 4201     		.2byte	0x142
 14733 09f6 2E0B0000 		.4byte	0xb2e
 14734 09fa 02       		.uleb128 0x2
 14735 09fb 91       		.byte	0x91
 14736 09fc 5C       		.sleb128 -36
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 334


 14737 09fd 1F       		.uleb128 0x1f
 14738 09fe 48010000 		.4byte	.LASF165
 14739 0a02 01       		.byte	0x1
 14740 0a03 4301     		.2byte	0x143
 14741 0a05 2E0B0000 		.4byte	0xb2e
 14742 0a09 02       		.uleb128 0x2
 14743 0a0a 91       		.byte	0x91
 14744 0a0b 54       		.sleb128 -44
 14745 0a0c 1F       		.uleb128 0x1f
 14746 0a0d BB0C0000 		.4byte	.LASF166
 14747 0a11 01       		.byte	0x1
 14748 0a12 4401     		.2byte	0x144
 14749 0a14 EB000000 		.4byte	0xeb
 14750 0a18 03       		.uleb128 0x3
 14751 0a19 91       		.byte	0x91
 14752 0a1a C06A     		.sleb128 -2752
 14753 0a1c 1F       		.uleb128 0x1f
 14754 0a1d DC0B0000 		.4byte	.LASF167
 14755 0a21 01       		.byte	0x1
 14756 0a22 4501     		.2byte	0x145
 14757 0a24 C7000000 		.4byte	0xc7
 14758 0a28 03       		.uleb128 0x3
 14759 0a29 91       		.byte	0x91
 14760 0a2a BE6A     		.sleb128 -2754
 14761 0a2c 1F       		.uleb128 0x1f
 14762 0a2d A2080000 		.4byte	.LASF168
 14763 0a31 01       		.byte	0x1
 14764 0a32 4601     		.2byte	0x146
 14765 0a34 A3000000 		.4byte	0xa3
 14766 0a38 03       		.uleb128 0x3
 14767 0a39 91       		.byte	0x91
 14768 0a3a BC6A     		.sleb128 -2756
 14769 0a3c 1F       		.uleb128 0x1f
 14770 0a3d DC0C0000 		.4byte	.LASF169
 14771 0a41 01       		.byte	0x1
 14772 0a42 4701     		.2byte	0x147
 14773 0a44 D3000000 		.4byte	0xd3
 14774 0a48 03       		.uleb128 0x3
 14775 0a49 91       		.byte	0x91
 14776 0a4a B86A     		.sleb128 -2760
 14777 0a4c 1F       		.uleb128 0x1f
 14778 0a4d F0090000 		.4byte	.LASF170
 14779 0a51 01       		.byte	0x1
 14780 0a52 4801     		.2byte	0x148
 14781 0a54 AF000000 		.4byte	0xaf
 14782 0a58 03       		.uleb128 0x3
 14783 0a59 91       		.byte	0x91
 14784 0a5a B46A     		.sleb128 -2764
 14785 0a5c 1F       		.uleb128 0x1f
 14786 0a5d 680D0000 		.4byte	.LASF171
 14787 0a61 01       		.byte	0x1
 14788 0a62 4B01     		.2byte	0x14b
 14789 0a64 490B0000 		.4byte	0xb49
 14790 0a68 03       		.uleb128 0x3
 14791 0a69 91       		.byte	0x91
 14792 0a6a 946A     		.sleb128 -2796
 14793 0a6c 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 335


 14794 0a6d 03020000 		.4byte	.LASF172
 14795 0a71 01       		.byte	0x1
 14796 0a72 5201     		.2byte	0x152
 14797 0a74 4E0B0000 		.4byte	0xb4e
 14798 0a78 03       		.uleb128 0x3
 14799 0a79 91       		.byte	0x91
 14800 0a7a F469     		.sleb128 -2828
 14801 0a7c 1F       		.uleb128 0x1f
 14802 0a7d D30C0000 		.4byte	.LASF173
 14803 0a81 01       		.byte	0x1
 14804 0a82 5901     		.2byte	0x159
 14805 0a84 630B0000 		.4byte	0xb63
 14806 0a88 03       		.uleb128 0x3
 14807 0a89 91       		.byte	0x91
 14808 0a8a E469     		.sleb128 -2844
 14809 0a8c 1F       		.uleb128 0x1f
 14810 0a8d 2B050000 		.4byte	.LASF174
 14811 0a91 01       		.byte	0x1
 14812 0a92 5B01     		.2byte	0x15b
 14813 0a94 680B0000 		.4byte	0xb68
 14814 0a98 03       		.uleb128 0x3
 14815 0a99 91       		.byte	0x91
 14816 0a9a E868     		.sleb128 -2968
 14817 0a9c 1F       		.uleb128 0x1f
 14818 0a9d 07060000 		.4byte	.LASF175
 14819 0aa1 01       		.byte	0x1
 14820 0aa2 6701     		.2byte	0x167
 14821 0aa4 880B0000 		.4byte	0xb88
 14822 0aa8 03       		.uleb128 0x3
 14823 0aa9 91       		.byte	0x91
 14824 0aaa 8468     		.sleb128 -3068
 14825 0aac 1F       		.uleb128 0x1f
 14826 0aad FA020000 		.4byte	.LASF176
 14827 0ab1 01       		.byte	0x1
 14828 0ab2 6801     		.2byte	0x168
 14829 0ab4 9D0B0000 		.4byte	0xb9d
 14830 0ab8 03       		.uleb128 0x3
 14831 0ab9 91       		.byte	0x91
 14832 0aba C467     		.sleb128 -3132
 14833 0abc 1F       		.uleb128 0x1f
 14834 0abd F20B0000 		.4byte	.LASF177
 14835 0ac1 01       		.byte	0x1
 14836 0ac2 6901     		.2byte	0x169
 14837 0ac4 B20B0000 		.4byte	0xbb2
 14838 0ac8 03       		.uleb128 0x3
 14839 0ac9 91       		.byte	0x91
 14840 0aca 9867     		.sleb128 -3176
 14841 0acc 1F       		.uleb128 0x1f
 14842 0acd 6F030000 		.4byte	.LASF178
 14843 0ad1 01       		.byte	0x1
 14844 0ad2 6A01     		.2byte	0x16a
 14845 0ad4 C70B0000 		.4byte	0xbc7
 14846 0ad8 03       		.uleb128 0x3
 14847 0ad9 91       		.byte	0x91
 14848 0ada 8067     		.sleb128 -3200
 14849 0adc 1F       		.uleb128 0x1f
 14850 0add 99000000 		.4byte	.LASF179
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 336


 14851 0ae1 01       		.byte	0x1
 14852 0ae2 6B01     		.2byte	0x16b
 14853 0ae4 DC0B0000 		.4byte	0xbdc
 14854 0ae8 03       		.uleb128 0x3
 14855 0ae9 91       		.byte	0x91
 14856 0aea CC66     		.sleb128 -3252
 14857 0aec 1F       		.uleb128 0x1f
 14858 0aed BB080000 		.4byte	.LASF180
 14859 0af1 01       		.byte	0x1
 14860 0af2 6C01     		.2byte	0x16c
 14861 0af4 F10B0000 		.4byte	0xbf1
 14862 0af8 03       		.uleb128 0x3
 14863 0af9 91       		.byte	0x91
 14864 0afa F465     		.sleb128 -3340
 14865 0afc 1F       		.uleb128 0x1f
 14866 0afd BE0D0000 		.4byte	.LASF181
 14867 0b01 01       		.byte	0x1
 14868 0b02 6D01     		.2byte	0x16d
 14869 0b04 F60B0000 		.4byte	0xbf6
 14870 0b08 03       		.uleb128 0x3
 14871 0b09 91       		.byte	0x91
 14872 0b0a FC64     		.sleb128 -3460
 14873 0b0c 00       		.byte	0
 14874 0b0d 09       		.uleb128 0x9
 14875 0b0e 97000000 		.4byte	0x97
 14876 0b12 1E0B0000 		.4byte	0xb1e
 14877 0b16 20       		.uleb128 0x20
 14878 0b17 18010000 		.4byte	0x118
 14879 0b1b 590A     		.2byte	0xa59
 14880 0b1d 00       		.byte	0
 14881 0b1e 09       		.uleb128 0x9
 14882 0b1f F9000000 		.4byte	0xf9
 14883 0b23 2E0B0000 		.4byte	0xb2e
 14884 0b27 0A       		.uleb128 0xa
 14885 0b28 18010000 		.4byte	0x118
 14886 0b2c 31       		.byte	0x31
 14887 0b2d 00       		.byte	0
 14888 0b2e 07       		.uleb128 0x7
 14889 0b2f 04       		.byte	0x4
 14890 0b30 97000000 		.4byte	0x97
 14891 0b34 09       		.uleb128 0x9
 14892 0b35 440B0000 		.4byte	0xb44
 14893 0b39 440B0000 		.4byte	0xb44
 14894 0b3d 0A       		.uleb128 0xa
 14895 0b3e 18010000 		.4byte	0x118
 14896 0b42 1E       		.byte	0x1e
 14897 0b43 00       		.byte	0
 14898 0b44 08       		.uleb128 0x8
 14899 0b45 97000000 		.4byte	0x97
 14900 0b49 08       		.uleb128 0x8
 14901 0b4a 340B0000 		.4byte	0xb34
 14902 0b4e 08       		.uleb128 0x8
 14903 0b4f 340B0000 		.4byte	0xb34
 14904 0b53 09       		.uleb128 0x9
 14905 0b54 440B0000 		.4byte	0xb44
 14906 0b58 630B0000 		.4byte	0xb63
 14907 0b5c 0A       		.uleb128 0xa
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 337


 14908 0b5d 18010000 		.4byte	0x118
 14909 0b61 0C       		.byte	0xc
 14910 0b62 00       		.byte	0
 14911 0b63 08       		.uleb128 0x8
 14912 0b64 530B0000 		.4byte	0xb53
 14913 0b68 09       		.uleb128 0x9
 14914 0b69 25010000 		.4byte	0x125
 14915 0b6d 780B0000 		.4byte	0xb78
 14916 0b71 0A       		.uleb128 0xa
 14917 0b72 18010000 		.4byte	0x118
 14918 0b76 1E       		.byte	0x1e
 14919 0b77 00       		.byte	0
 14920 0b78 09       		.uleb128 0x9
 14921 0b79 2B010000 		.4byte	0x12b
 14922 0b7d 880B0000 		.4byte	0xb88
 14923 0b81 0A       		.uleb128 0xa
 14924 0b82 18010000 		.4byte	0x118
 14925 0b86 62       		.byte	0x62
 14926 0b87 00       		.byte	0
 14927 0b88 08       		.uleb128 0x8
 14928 0b89 780B0000 		.4byte	0xb78
 14929 0b8d 09       		.uleb128 0x9
 14930 0b8e 2B010000 		.4byte	0x12b
 14931 0b92 9D0B0000 		.4byte	0xb9d
 14932 0b96 0A       		.uleb128 0xa
 14933 0b97 18010000 		.4byte	0x118
 14934 0b9b 3F       		.byte	0x3f
 14935 0b9c 00       		.byte	0
 14936 0b9d 08       		.uleb128 0x8
 14937 0b9e 8D0B0000 		.4byte	0xb8d
 14938 0ba2 09       		.uleb128 0x9
 14939 0ba3 2B010000 		.4byte	0x12b
 14940 0ba7 B20B0000 		.4byte	0xbb2
 14941 0bab 0A       		.uleb128 0xa
 14942 0bac 18010000 		.4byte	0x118
 14943 0bb0 29       		.byte	0x29
 14944 0bb1 00       		.byte	0
 14945 0bb2 08       		.uleb128 0x8
 14946 0bb3 A20B0000 		.4byte	0xba2
 14947 0bb7 09       		.uleb128 0x9
 14948 0bb8 2B010000 		.4byte	0x12b
 14949 0bbc C70B0000 		.4byte	0xbc7
 14950 0bc0 0A       		.uleb128 0xa
 14951 0bc1 18010000 		.4byte	0x118
 14952 0bc5 15       		.byte	0x15
 14953 0bc6 00       		.byte	0
 14954 0bc7 08       		.uleb128 0x8
 14955 0bc8 B70B0000 		.4byte	0xbb7
 14956 0bcc 09       		.uleb128 0x9
 14957 0bcd 2B010000 		.4byte	0x12b
 14958 0bd1 DC0B0000 		.4byte	0xbdc
 14959 0bd5 0A       		.uleb128 0xa
 14960 0bd6 18010000 		.4byte	0x118
 14961 0bda 32       		.byte	0x32
 14962 0bdb 00       		.byte	0
 14963 0bdc 08       		.uleb128 0x8
 14964 0bdd CC0B0000 		.4byte	0xbcc
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 338


 14965 0be1 09       		.uleb128 0x9
 14966 0be2 2B010000 		.4byte	0x12b
 14967 0be6 F10B0000 		.4byte	0xbf1
 14968 0bea 0A       		.uleb128 0xa
 14969 0beb 18010000 		.4byte	0x118
 14970 0bef 56       		.byte	0x56
 14971 0bf0 00       		.byte	0
 14972 0bf1 08       		.uleb128 0x8
 14973 0bf2 E10B0000 		.4byte	0xbe1
 14974 0bf6 09       		.uleb128 0x9
 14975 0bf7 F9000000 		.4byte	0xf9
 14976 0bfb 060C0000 		.4byte	0xc06
 14977 0bff 0A       		.uleb128 0xa
 14978 0c00 18010000 		.4byte	0x118
 14979 0c04 75       		.byte	0x75
 14980 0c05 00       		.byte	0
 14981 0c06 1E       		.uleb128 0x1e
 14982 0c07 980A0000 		.4byte	.LASF182
 14983 0c0b 01       		.byte	0x1
 14984 0c0c 0003     		.2byte	0x300
 14985 0c0e 00000000 		.4byte	.LFB68
 14986 0c12 F80A0000 		.4byte	.LFE68-.LFB68
 14987 0c16 01       		.uleb128 0x1
 14988 0c17 9C       		.byte	0x9c
 14989 0c18 730C0000 		.4byte	0xc73
 14990 0c1c 21       		.uleb128 0x21
 14991 0c1d CF040000 		.4byte	.LASF184
 14992 0c21 01       		.byte	0x1
 14993 0c22 0003     		.2byte	0x300
 14994 0c24 A3000000 		.4byte	0xa3
 14995 0c28 02       		.uleb128 0x2
 14996 0c29 91       		.byte	0x91
 14997 0c2a 66       		.sleb128 -26
 14998 0c2b 23       		.uleb128 0x23
 14999 0c2c 6900     		.ascii	"i\000"
 15000 0c2e 01       		.byte	0x1
 15001 0c2f 0103     		.2byte	0x301
 15002 0c31 97000000 		.4byte	0x97
 15003 0c35 02       		.uleb128 0x2
 15004 0c36 91       		.byte	0x91
 15005 0c37 77       		.sleb128 -9
 15006 0c38 23       		.uleb128 0x23
 15007 0c39 6A00     		.ascii	"j\000"
 15008 0c3b 01       		.byte	0x1
 15009 0c3c 0103     		.2byte	0x301
 15010 0c3e 97000000 		.4byte	0x97
 15011 0c42 02       		.uleb128 0x2
 15012 0c43 91       		.byte	0x91
 15013 0c44 76       		.sleb128 -10
 15014 0c45 1F       		.uleb128 0x1f
 15015 0c46 8D080000 		.4byte	.LASF185
 15016 0c4a 01       		.byte	0x1
 15017 0c4b 0203     		.2byte	0x302
 15018 0c4d 97000000 		.4byte	0x97
 15019 0c51 02       		.uleb128 0x2
 15020 0c52 91       		.byte	0x91
 15021 0c53 75       		.sleb128 -11
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 339


 15022 0c54 1F       		.uleb128 0x1f
 15023 0c55 BB0C0000 		.4byte	.LASF166
 15024 0c59 01       		.byte	0x1
 15025 0c5a 0303     		.2byte	0x303
 15026 0c5c EB000000 		.4byte	0xeb
 15027 0c60 02       		.uleb128 0x2
 15028 0c61 91       		.byte	0x91
 15029 0c62 70       		.sleb128 -16
 15030 0c63 1F       		.uleb128 0x1f
 15031 0c64 32020000 		.4byte	.LASF186
 15032 0c68 01       		.byte	0x1
 15033 0c69 0303     		.2byte	0x303
 15034 0c6b EB000000 		.4byte	0xeb
 15035 0c6f 02       		.uleb128 0x2
 15036 0c70 91       		.byte	0x91
 15037 0c71 6C       		.sleb128 -20
 15038 0c72 00       		.byte	0
 15039 0c73 1E       		.uleb128 0x1e
 15040 0c74 550D0000 		.4byte	.LASF187
 15041 0c78 01       		.byte	0x1
 15042 0c79 6204     		.2byte	0x462
 15043 0c7b 00000000 		.4byte	.LFB69
 15044 0c7f EC0D0000 		.4byte	.LFE69-.LFB69
 15045 0c83 01       		.uleb128 0x1
 15046 0c84 9C       		.byte	0x9c
 15047 0c85 020E0000 		.4byte	0xe02
 15048 0c89 21       		.uleb128 0x21
 15049 0c8a CF040000 		.4byte	.LASF184
 15050 0c8e 01       		.byte	0x1
 15051 0c8f 6204     		.2byte	0x462
 15052 0c91 A3000000 		.4byte	0xa3
 15053 0c95 03       		.uleb128 0x3
 15054 0c96 91       		.byte	0x91
 15055 0c97 DE73     		.sleb128 -1570
 15056 0c99 1F       		.uleb128 0x1f
 15057 0c9a 21040000 		.4byte	.LASF159
 15058 0c9e 01       		.byte	0x1
 15059 0c9f 6504     		.2byte	0x465
 15060 0ca1 020E0000 		.4byte	0xe02
 15061 0ca5 03       		.uleb128 0x3
 15062 0ca6 91       		.byte	0x91
 15063 0ca7 F075     		.sleb128 -1296
 15064 0ca9 1F       		.uleb128 0x1f
 15065 0caa C90B0000 		.4byte	.LASF188
 15066 0cae 01       		.byte	0x1
 15067 0caf 6C04     		.2byte	0x46c
 15068 0cb1 A3000000 		.4byte	0xa3
 15069 0cb5 02       		.uleb128 0x2
 15070 0cb6 91       		.byte	0x91
 15071 0cb7 62       		.sleb128 -30
 15072 0cb8 1F       		.uleb128 0x1f
 15073 0cb9 B5030000 		.4byte	.LASF189
 15074 0cbd 01       		.byte	0x1
 15075 0cbe 6D04     		.2byte	0x46d
 15076 0cc0 A3000000 		.4byte	0xa3
 15077 0cc4 02       		.uleb128 0x2
 15078 0cc5 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 340


 15079 0cc6 6E       		.sleb128 -18
 15080 0cc7 1F       		.uleb128 0x1f
 15081 0cc8 2C060000 		.4byte	.LASF190
 15082 0ccc 01       		.byte	0x1
 15083 0ccd 6E04     		.2byte	0x46e
 15084 0ccf A3000000 		.4byte	0xa3
 15085 0cd3 02       		.uleb128 0x2
 15086 0cd4 91       		.byte	0x91
 15087 0cd5 60       		.sleb128 -32
 15088 0cd6 1F       		.uleb128 0x1f
 15089 0cd7 BB050000 		.4byte	.LASF191
 15090 0cdb 01       		.byte	0x1
 15091 0cdc 6F04     		.2byte	0x46f
 15092 0cde A3000000 		.4byte	0xa3
 15093 0ce2 02       		.uleb128 0x2
 15094 0ce3 91       		.byte	0x91
 15095 0ce4 5E       		.sleb128 -34
 15096 0ce5 23       		.uleb128 0x23
 15097 0ce6 6900     		.ascii	"i\000"
 15098 0ce8 01       		.byte	0x1
 15099 0ce9 7704     		.2byte	0x477
 15100 0ceb A3000000 		.4byte	0xa3
 15101 0cef 02       		.uleb128 0x2
 15102 0cf0 91       		.byte	0x91
 15103 0cf1 6C       		.sleb128 -20
 15104 0cf2 23       		.uleb128 0x23
 15105 0cf3 6A00     		.ascii	"j\000"
 15106 0cf5 01       		.byte	0x1
 15107 0cf6 7704     		.2byte	0x477
 15108 0cf8 A3000000 		.4byte	0xa3
 15109 0cfc 02       		.uleb128 0x2
 15110 0cfd 91       		.byte	0x91
 15111 0cfe 6A       		.sleb128 -22
 15112 0cff 23       		.uleb128 0x23
 15113 0d00 6B00     		.ascii	"k\000"
 15114 0d02 01       		.byte	0x1
 15115 0d03 7704     		.2byte	0x477
 15116 0d05 A3000000 		.4byte	0xa3
 15117 0d09 02       		.uleb128 0x2
 15118 0d0a 91       		.byte	0x91
 15119 0d0b 68       		.sleb128 -24
 15120 0d0c 23       		.uleb128 0x23
 15121 0d0d 6800     		.ascii	"h\000"
 15122 0d0f 01       		.byte	0x1
 15123 0d10 7704     		.2byte	0x477
 15124 0d12 A3000000 		.4byte	0xa3
 15125 0d16 02       		.uleb128 0x2
 15126 0d17 91       		.byte	0x91
 15127 0d18 66       		.sleb128 -26
 15128 0d19 1F       		.uleb128 0x1f
 15129 0d1a AA030000 		.4byte	.LASF192
 15130 0d1e 01       		.byte	0x1
 15131 0d1f 7804     		.2byte	0x478
 15132 0d21 A3000000 		.4byte	0xa3
 15133 0d25 02       		.uleb128 0x2
 15134 0d26 91       		.byte	0x91
 15135 0d27 5C       		.sleb128 -36
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 341


 15136 0d28 1F       		.uleb128 0x1f
 15137 0d29 AE090000 		.4byte	.LASF193
 15138 0d2d 01       		.byte	0x1
 15139 0d2e 7B04     		.2byte	0x47b
 15140 0d30 30010000 		.4byte	0x130
 15141 0d34 03       		.uleb128 0x3
 15142 0d35 91       		.byte	0x91
 15143 0d36 D475     		.sleb128 -1324
 15144 0d38 1F       		.uleb128 0x1f
 15145 0d39 A10B0000 		.4byte	.LASF194
 15146 0d3d 01       		.byte	0x1
 15147 0d3e 7C04     		.2byte	0x47c
 15148 0d40 130E0000 		.4byte	0xe13
 15149 0d44 03       		.uleb128 0x3
 15150 0d45 91       		.byte	0x91
 15151 0d46 C875     		.sleb128 -1336
 15152 0d48 1F       		.uleb128 0x1f
 15153 0d49 F7040000 		.4byte	.LASF195
 15154 0d4d 01       		.byte	0x1
 15155 0d4e 7D04     		.2byte	0x47d
 15156 0d50 230E0000 		.4byte	0xe23
 15157 0d54 03       		.uleb128 0x3
 15158 0d55 91       		.byte	0x91
 15159 0d56 B475     		.sleb128 -1356
 15160 0d58 1F       		.uleb128 0x1f
 15161 0d59 7B070000 		.4byte	.LASF196
 15162 0d5d 01       		.byte	0x1
 15163 0d5e 7E04     		.2byte	0x47e
 15164 0d60 330E0000 		.4byte	0xe33
 15165 0d64 03       		.uleb128 0x3
 15166 0d65 91       		.byte	0x91
 15167 0d66 A475     		.sleb128 -1372
 15168 0d68 1F       		.uleb128 0x1f
 15169 0d69 610A0000 		.4byte	.LASF197
 15170 0d6d 01       		.byte	0x1
 15171 0d6e 7F04     		.2byte	0x47f
 15172 0d70 430E0000 		.4byte	0xe43
 15173 0d74 03       		.uleb128 0x3
 15174 0d75 91       		.byte	0x91
 15175 0d76 F874     		.sleb128 -1416
 15176 0d78 1F       		.uleb128 0x1f
 15177 0d79 5C030000 		.4byte	.LASF198
 15178 0d7d 01       		.byte	0x1
 15179 0d7e 8004     		.2byte	0x480
 15180 0d80 30010000 		.4byte	0x130
 15181 0d84 03       		.uleb128 0x3
 15182 0d85 91       		.byte	0x91
 15183 0d86 DC74     		.sleb128 -1444
 15184 0d88 1F       		.uleb128 0x1f
 15185 0d89 25010000 		.4byte	.LASF199
 15186 0d8d 01       		.byte	0x1
 15187 0d8e 8304     		.2byte	0x483
 15188 0d90 97000000 		.4byte	0x97
 15189 0d94 02       		.uleb128 0x2
 15190 0d95 91       		.byte	0x91
 15191 0d96 5B       		.sleb128 -37
 15192 0d97 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 342


 15193 0d98 30030000 		.4byte	.LASF200
 15194 0d9c 01       		.byte	0x1
 15195 0d9d 8404     		.2byte	0x484
 15196 0d9f 97000000 		.4byte	0x97
 15197 0da3 02       		.uleb128 0x2
 15198 0da4 91       		.byte	0x91
 15199 0da5 5A       		.sleb128 -38
 15200 0da6 1F       		.uleb128 0x1f
 15201 0da7 660B0000 		.4byte	.LASF201
 15202 0dab 01       		.byte	0x1
 15203 0dac 8504     		.2byte	0x485
 15204 0dae 97000000 		.4byte	0x97
 15205 0db2 02       		.uleb128 0x2
 15206 0db3 91       		.byte	0x91
 15207 0db4 59       		.sleb128 -39
 15208 0db5 1F       		.uleb128 0x1f
 15209 0db6 B70B0000 		.4byte	.LASF202
 15210 0dba 01       		.byte	0x1
 15211 0dbb 8604     		.2byte	0x486
 15212 0dbd 97000000 		.4byte	0x97
 15213 0dc1 02       		.uleb128 0x2
 15214 0dc2 91       		.byte	0x91
 15215 0dc3 58       		.sleb128 -40
 15216 0dc4 1F       		.uleb128 0x1f
 15217 0dc5 3E030000 		.4byte	.LASF203
 15218 0dc9 01       		.byte	0x1
 15219 0dca 8704     		.2byte	0x487
 15220 0dcc 97000000 		.4byte	0x97
 15221 0dd0 02       		.uleb128 0x2
 15222 0dd1 91       		.byte	0x91
 15223 0dd2 57       		.sleb128 -41
 15224 0dd3 1F       		.uleb128 0x1f
 15225 0dd4 82000000 		.4byte	.LASF204
 15226 0dd8 01       		.byte	0x1
 15227 0dd9 8804     		.2byte	0x488
 15228 0ddb 97000000 		.4byte	0x97
 15229 0ddf 02       		.uleb128 0x2
 15230 0de0 91       		.byte	0x91
 15231 0de1 65       		.sleb128 -27
 15232 0de2 1F       		.uleb128 0x1f
 15233 0de3 BE0D0000 		.4byte	.LASF181
 15234 0de7 01       		.byte	0x1
 15235 0de8 8A04     		.2byte	0x48a
 15236 0dea F60B0000 		.4byte	0xbf6
 15237 0dee 03       		.uleb128 0x3
 15238 0def 91       		.byte	0x91
 15239 0df0 E473     		.sleb128 -1564
 15240 0df2 1F       		.uleb128 0x1f
 15241 0df3 46020000 		.4byte	.LASF205
 15242 0df7 01       		.byte	0x1
 15243 0df8 8B04     		.2byte	0x48b
 15244 0dfa 97000000 		.4byte	0x97
 15245 0dfe 02       		.uleb128 0x2
 15246 0dff 91       		.byte	0x91
 15247 0e00 56       		.sleb128 -42
 15248 0e01 00       		.byte	0
 15249 0e02 09       		.uleb128 0x9
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 343


 15250 0e03 97000000 		.4byte	0x97
 15251 0e07 130E0000 		.4byte	0xe13
 15252 0e0b 20       		.uleb128 0x20
 15253 0e0c 18010000 		.4byte	0x118
 15254 0e10 E204     		.2byte	0x4e2
 15255 0e12 00       		.byte	0
 15256 0e13 09       		.uleb128 0x9
 15257 0e14 F9000000 		.4byte	0xf9
 15258 0e18 230E0000 		.4byte	0xe23
 15259 0e1c 0A       		.uleb128 0xa
 15260 0e1d 18010000 		.4byte	0x118
 15261 0e21 0A       		.byte	0xa
 15262 0e22 00       		.byte	0
 15263 0e23 09       		.uleb128 0x9
 15264 0e24 F9000000 		.4byte	0xf9
 15265 0e28 330E0000 		.4byte	0xe33
 15266 0e2c 0A       		.uleb128 0xa
 15267 0e2d 18010000 		.4byte	0x118
 15268 0e31 13       		.byte	0x13
 15269 0e32 00       		.byte	0
 15270 0e33 09       		.uleb128 0x9
 15271 0e34 F9000000 		.4byte	0xf9
 15272 0e38 430E0000 		.4byte	0xe43
 15273 0e3c 0A       		.uleb128 0xa
 15274 0e3d 18010000 		.4byte	0x118
 15275 0e41 0F       		.byte	0xf
 15276 0e42 00       		.byte	0
 15277 0e43 09       		.uleb128 0x9
 15278 0e44 F9000000 		.4byte	0xf9
 15279 0e48 530E0000 		.4byte	0xe53
 15280 0e4c 0A       		.uleb128 0xa
 15281 0e4d 18010000 		.4byte	0x118
 15282 0e51 29       		.byte	0x29
 15283 0e52 00       		.byte	0
 15284 0e53 22       		.uleb128 0x22
 15285 0e54 E1010000 		.4byte	.LASF207
 15286 0e58 01       		.byte	0x1
 15287 0e59 5105     		.2byte	0x551
 15288 0e5b 00000000 		.4byte	.LFB70
 15289 0e5f 5C000000 		.4byte	.LFE70-.LFB70
 15290 0e63 01       		.uleb128 0x1
 15291 0e64 9C       		.byte	0x9c
 15292 0e65 770E0000 		.4byte	0xe77
 15293 0e69 23       		.uleb128 0x23
 15294 0e6a 6900     		.ascii	"i\000"
 15295 0e6c 01       		.byte	0x1
 15296 0e6d 5305     		.2byte	0x553
 15297 0e6f 97000000 		.4byte	0x97
 15298 0e73 02       		.uleb128 0x2
 15299 0e74 91       		.byte	0x91
 15300 0e75 77       		.sleb128 -9
 15301 0e76 00       		.byte	0
 15302 0e77 1E       		.uleb128 0x1e
 15303 0e78 B3000000 		.4byte	.LASF208
 15304 0e7c 01       		.byte	0x1
 15305 0e7d 6205     		.2byte	0x562
 15306 0e7f 00000000 		.4byte	.LFB71
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 344


 15307 0e83 7C150000 		.4byte	.LFE71-.LFB71
 15308 0e87 01       		.uleb128 0x1
 15309 0e88 9C       		.byte	0x9c
 15310 0e89 C50E0000 		.4byte	0xec5
 15311 0e8d 21       		.uleb128 0x21
 15312 0e8e B8090000 		.4byte	.LASF209
 15313 0e92 01       		.byte	0x1
 15314 0e93 6205     		.2byte	0x562
 15315 0e95 1F010000 		.4byte	0x11f
 15316 0e99 03       		.uleb128 0x3
 15317 0e9a 91       		.byte	0x91
 15318 0e9b F47E     		.sleb128 -140
 15319 0e9d 23       		.uleb128 0x23
 15320 0e9e 6900     		.ascii	"i\000"
 15321 0ea0 01       		.byte	0x1
 15322 0ea1 6405     		.2byte	0x564
 15323 0ea3 73000000 		.4byte	0x73
 15324 0ea7 02       		.uleb128 0x2
 15325 0ea8 91       		.byte	0x91
 15326 0ea9 5C       		.sleb128 -36
 15327 0eaa 1B       		.uleb128 0x1b
 15328 0eab 14000000 		.4byte	.LBB10
 15329 0eaf 32150000 		.4byte	.LBE10-.LBB10
 15330 0eb3 23       		.uleb128 0x23
 15331 0eb4 73747200 		.ascii	"str\000"
 15332 0eb8 01       		.byte	0x1
 15333 0eb9 6705     		.2byte	0x567
 15334 0ebb C50E0000 		.4byte	0xec5
 15335 0ebf 03       		.uleb128 0x3
 15336 0ec0 91       		.byte	0x91
 15337 0ec1 F87E     		.sleb128 -136
 15338 0ec3 00       		.byte	0
 15339 0ec4 00       		.byte	0
 15340 0ec5 09       		.uleb128 0x9
 15341 0ec6 F9000000 		.4byte	0xf9
 15342 0eca D50E0000 		.4byte	0xed5
 15343 0ece 0A       		.uleb128 0xa
 15344 0ecf 18010000 		.4byte	0x118
 15345 0ed3 63       		.byte	0x63
 15346 0ed4 00       		.byte	0
 15347 0ed5 1E       		.uleb128 0x1e
 15348 0ed6 BD0A0000 		.4byte	.LASF210
 15349 0eda 01       		.byte	0x1
 15350 0edb A506     		.2byte	0x6a5
 15351 0edd 00000000 		.4byte	.LFB72
 15352 0ee1 60030000 		.4byte	.LFE72-.LFB72
 15353 0ee5 01       		.uleb128 0x1
 15354 0ee6 9C       		.byte	0x9c
 15355 0ee7 280F0000 		.4byte	0xf28
 15356 0eeb 21       		.uleb128 0x21
 15357 0eec B8090000 		.4byte	.LASF209
 15358 0ef0 01       		.byte	0x1
 15359 0ef1 A506     		.2byte	0x6a5
 15360 0ef3 1F010000 		.4byte	0x11f
 15361 0ef7 03       		.uleb128 0x3
 15362 0ef8 91       		.byte	0x91
 15363 0ef9 F47E     		.sleb128 -140
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 345


 15364 0efb 23       		.uleb128 0x23
 15365 0efc 73747200 		.ascii	"str\000"
 15366 0f00 01       		.byte	0x1
 15367 0f01 A706     		.2byte	0x6a7
 15368 0f03 C50E0000 		.4byte	0xec5
 15369 0f07 03       		.uleb128 0x3
 15370 0f08 91       		.byte	0x91
 15371 0f09 FC7E     		.sleb128 -132
 15372 0f0b 23       		.uleb128 0x23
 15373 0f0c 6900     		.ascii	"i\000"
 15374 0f0e 01       		.byte	0x1
 15375 0f0f A806     		.2byte	0x6a8
 15376 0f11 73000000 		.4byte	0x73
 15377 0f15 02       		.uleb128 0x2
 15378 0f16 91       		.byte	0x91
 15379 0f17 64       		.sleb128 -28
 15380 0f18 1F       		.uleb128 0x1f
 15381 0f19 DE020000 		.4byte	.LASF211
 15382 0f1d 01       		.byte	0x1
 15383 0f1e A906     		.2byte	0x6a9
 15384 0f20 73000000 		.4byte	0x73
 15385 0f24 02       		.uleb128 0x2
 15386 0f25 91       		.byte	0x91
 15387 0f26 60       		.sleb128 -32
 15388 0f27 00       		.byte	0
 15389 0f28 1E       		.uleb128 0x1e
 15390 0f29 270E0000 		.4byte	.LASF212
 15391 0f2d 01       		.byte	0x1
 15392 0f2e E006     		.2byte	0x6e0
 15393 0f30 00000000 		.4byte	.LFB73
 15394 0f34 74030000 		.4byte	.LFE73-.LFB73
 15395 0f38 01       		.uleb128 0x1
 15396 0f39 9C       		.byte	0x9c
 15397 0f3a 6C0F0000 		.4byte	0xf6c
 15398 0f3e 21       		.uleb128 0x21
 15399 0f3f B8090000 		.4byte	.LASF209
 15400 0f43 01       		.byte	0x1
 15401 0f44 E006     		.2byte	0x6e0
 15402 0f46 1F010000 		.4byte	0x11f
 15403 0f4a 03       		.uleb128 0x3
 15404 0f4b 91       		.byte	0x91
 15405 0f4c AC7D     		.sleb128 -340
 15406 0f4e 23       		.uleb128 0x23
 15407 0f4f 73747200 		.ascii	"str\000"
 15408 0f53 01       		.byte	0x1
 15409 0f54 E206     		.2byte	0x6e2
 15410 0f56 6C0F0000 		.4byte	0xf6c
 15411 0f5a 03       		.uleb128 0x3
 15412 0f5b 91       		.byte	0x91
 15413 0f5c B07D     		.sleb128 -336
 15414 0f5e 23       		.uleb128 0x23
 15415 0f5f 6900     		.ascii	"i\000"
 15416 0f61 01       		.byte	0x1
 15417 0f62 E306     		.2byte	0x6e3
 15418 0f64 73000000 		.4byte	0x73
 15419 0f68 02       		.uleb128 0x2
 15420 0f69 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 346


 15421 0f6a 5C       		.sleb128 -36
 15422 0f6b 00       		.byte	0
 15423 0f6c 09       		.uleb128 0x9
 15424 0f6d F9000000 		.4byte	0xf9
 15425 0f71 7D0F0000 		.4byte	0xf7d
 15426 0f75 20       		.uleb128 0x20
 15427 0f76 18010000 		.4byte	0x118
 15428 0f7a 2B01     		.2byte	0x12b
 15429 0f7c 00       		.byte	0
 15430 0f7d 1E       		.uleb128 0x1e
 15431 0f7e 870A0000 		.4byte	.LASF213
 15432 0f82 01       		.byte	0x1
 15433 0f83 0A07     		.2byte	0x70a
 15434 0f85 00000000 		.4byte	.LFB74
 15435 0f89 84000000 		.4byte	.LFE74-.LFB74
 15436 0f8d 01       		.uleb128 0x1
 15437 0f8e 9C       		.byte	0x9c
 15438 0f8f D00F0000 		.4byte	0xfd0
 15439 0f93 21       		.uleb128 0x21
 15440 0f94 21040000 		.4byte	.LASF159
 15441 0f98 01       		.byte	0x1
 15442 0f99 0A07     		.2byte	0x70a
 15443 0f9b 2E0B0000 		.4byte	0xb2e
 15444 0f9f 02       		.uleb128 0x2
 15445 0fa0 91       		.byte	0x91
 15446 0fa1 6C       		.sleb128 -20
 15447 0fa2 21       		.uleb128 0x21
 15448 0fa3 A5000000 		.4byte	.LASF160
 15449 0fa7 01       		.byte	0x1
 15450 0fa8 0A07     		.2byte	0x70a
 15451 0faa A3000000 		.4byte	0xa3
 15452 0fae 02       		.uleb128 0x2
 15453 0faf 91       		.byte	0x91
 15454 0fb0 6A       		.sleb128 -22
 15455 0fb1 21       		.uleb128 0x21
 15456 0fb2 D20A0000 		.4byte	.LASF214
 15457 0fb6 01       		.byte	0x1
 15458 0fb7 0A07     		.2byte	0x70a
 15459 0fb9 97000000 		.4byte	0x97
 15460 0fbd 02       		.uleb128 0x2
 15461 0fbe 91       		.byte	0x91
 15462 0fbf 69       		.sleb128 -23
 15463 0fc0 1F       		.uleb128 0x1f
 15464 0fc1 CF040000 		.4byte	.LASF184
 15465 0fc5 01       		.byte	0x1
 15466 0fc6 0C07     		.2byte	0x70c
 15467 0fc8 A3000000 		.4byte	0xa3
 15468 0fcc 02       		.uleb128 0x2
 15469 0fcd 91       		.byte	0x91
 15470 0fce 76       		.sleb128 -10
 15471 0fcf 00       		.byte	0
 15472 0fd0 1E       		.uleb128 0x1e
 15473 0fd1 2D040000 		.4byte	.LASF215
 15474 0fd5 01       		.byte	0x1
 15475 0fd6 2607     		.2byte	0x726
 15476 0fd8 00000000 		.4byte	.LFB75
 15477 0fdc 88000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 347


 15478 0fe0 01       		.uleb128 0x1
 15479 0fe1 9C       		.byte	0x9c
 15480 0fe2 14100000 		.4byte	0x1014
 15481 0fe6 21       		.uleb128 0x21
 15482 0fe7 21040000 		.4byte	.LASF159
 15483 0feb 01       		.byte	0x1
 15484 0fec 2607     		.2byte	0x726
 15485 0fee 2E0B0000 		.4byte	0xb2e
 15486 0ff2 02       		.uleb128 0x2
 15487 0ff3 91       		.byte	0x91
 15488 0ff4 6C       		.sleb128 -20
 15489 0ff5 21       		.uleb128 0x21
 15490 0ff6 A5000000 		.4byte	.LASF160
 15491 0ffa 01       		.byte	0x1
 15492 0ffb 2607     		.2byte	0x726
 15493 0ffd A3000000 		.4byte	0xa3
 15494 1001 02       		.uleb128 0x2
 15495 1002 91       		.byte	0x91
 15496 1003 6A       		.sleb128 -22
 15497 1004 1F       		.uleb128 0x1f
 15498 1005 CF040000 		.4byte	.LASF184
 15499 1009 01       		.byte	0x1
 15500 100a 2807     		.2byte	0x728
 15501 100c A3000000 		.4byte	0xa3
 15502 1010 02       		.uleb128 0x2
 15503 1011 91       		.byte	0x91
 15504 1012 76       		.sleb128 -10
 15505 1013 00       		.byte	0
 15506 1014 1E       		.uleb128 0x1e
 15507 1015 62080000 		.4byte	.LASF216
 15508 1019 01       		.byte	0x1
 15509 101a 3E07     		.2byte	0x73e
 15510 101c 00000000 		.4byte	.LFB76
 15511 1020 80000000 		.4byte	.LFE76-.LFB76
 15512 1024 01       		.uleb128 0x1
 15513 1025 9C       		.byte	0x9c
 15514 1026 58100000 		.4byte	0x1058
 15515 102a 21       		.uleb128 0x21
 15516 102b 21040000 		.4byte	.LASF159
 15517 102f 01       		.byte	0x1
 15518 1030 3E07     		.2byte	0x73e
 15519 1032 2E0B0000 		.4byte	0xb2e
 15520 1036 02       		.uleb128 0x2
 15521 1037 91       		.byte	0x91
 15522 1038 6C       		.sleb128 -20
 15523 1039 21       		.uleb128 0x21
 15524 103a A5000000 		.4byte	.LASF160
 15525 103e 01       		.byte	0x1
 15526 103f 3E07     		.2byte	0x73e
 15527 1041 A3000000 		.4byte	0xa3
 15528 1045 02       		.uleb128 0x2
 15529 1046 91       		.byte	0x91
 15530 1047 6A       		.sleb128 -22
 15531 1048 1F       		.uleb128 0x1f
 15532 1049 CF040000 		.4byte	.LASF184
 15533 104d 01       		.byte	0x1
 15534 104e 4007     		.2byte	0x740
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 348


 15535 1050 A3000000 		.4byte	0xa3
 15536 1054 02       		.uleb128 0x2
 15537 1055 91       		.byte	0x91
 15538 1056 76       		.sleb128 -10
 15539 1057 00       		.byte	0
 15540 1058 24       		.uleb128 0x24
 15541 1059 290D0000 		.4byte	.LASF222
 15542 105d 01       		.byte	0x1
 15543 105e 5907     		.2byte	0x759
 15544 1060 97000000 		.4byte	0x97
 15545 1064 00000000 		.4byte	.LFB77
 15546 1068 3E000000 		.4byte	.LFE77-.LFB77
 15547 106c 01       		.uleb128 0x1
 15548 106d 9C       		.byte	0x9c
 15549 106e AD100000 		.4byte	0x10ad
 15550 1072 21       		.uleb128 0x21
 15551 1073 CD070000 		.4byte	.LASF217
 15552 1077 01       		.byte	0x1
 15553 1078 5907     		.2byte	0x759
 15554 107a 2E0B0000 		.4byte	0xb2e
 15555 107e 02       		.uleb128 0x2
 15556 107f 91       		.byte	0x91
 15557 1080 6C       		.sleb128 -20
 15558 1081 21       		.uleb128 0x21
 15559 1082 F6030000 		.4byte	.LASF218
 15560 1086 01       		.byte	0x1
 15561 1087 5907     		.2byte	0x759
 15562 1089 97000000 		.4byte	0x97
 15563 108d 02       		.uleb128 0x2
 15564 108e 91       		.byte	0x91
 15565 108f 6B       		.sleb128 -21
 15566 1090 23       		.uleb128 0x23
 15567 1091 6900     		.ascii	"i\000"
 15568 1093 01       		.byte	0x1
 15569 1094 5B07     		.2byte	0x75b
 15570 1096 97000000 		.4byte	0x97
 15571 109a 02       		.uleb128 0x2
 15572 109b 91       		.byte	0x91
 15573 109c 77       		.sleb128 -9
 15574 109d 1F       		.uleb128 0x1f
 15575 109e 23090000 		.4byte	.LASF219
 15576 10a2 01       		.byte	0x1
 15577 10a3 5C07     		.2byte	0x75c
 15578 10a5 97000000 		.4byte	0x97
 15579 10a9 02       		.uleb128 0x2
 15580 10aa 91       		.byte	0x91
 15581 10ab 76       		.sleb128 -10
 15582 10ac 00       		.byte	0
 15583 10ad 1E       		.uleb128 0x1e
 15584 10ae E5070000 		.4byte	.LASF220
 15585 10b2 01       		.byte	0x1
 15586 10b3 6907     		.2byte	0x769
 15587 10b5 00000000 		.4byte	.LFB78
 15588 10b9 2E000000 		.4byte	.LFE78-.LFB78
 15589 10bd 01       		.uleb128 0x1
 15590 10be 9C       		.byte	0x9c
 15591 10bf F1100000 		.4byte	0x10f1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 349


 15592 10c3 21       		.uleb128 0x21
 15593 10c4 50030000 		.4byte	.LASF221
 15594 10c8 01       		.byte	0x1
 15595 10c9 6907     		.2byte	0x769
 15596 10cb 97000000 		.4byte	0x97
 15597 10cf 02       		.uleb128 0x2
 15598 10d0 91       		.byte	0x91
 15599 10d1 6F       		.sleb128 -17
 15600 10d2 1F       		.uleb128 0x1f
 15601 10d3 A5000000 		.4byte	.LASF160
 15602 10d7 01       		.byte	0x1
 15603 10d8 6A07     		.2byte	0x76a
 15604 10da 73000000 		.4byte	0x73
 15605 10de 02       		.uleb128 0x2
 15606 10df 91       		.byte	0x91
 15607 10e0 74       		.sleb128 -12
 15608 10e1 1F       		.uleb128 0x1f
 15609 10e2 21040000 		.4byte	.LASF159
 15610 10e6 01       		.byte	0x1
 15611 10e7 6B07     		.2byte	0x76b
 15612 10e9 F1100000 		.4byte	0x10f1
 15613 10ed 02       		.uleb128 0x2
 15614 10ee 91       		.byte	0x91
 15615 10ef 70       		.sleb128 -16
 15616 10f0 00       		.byte	0
 15617 10f1 09       		.uleb128 0x9
 15618 10f2 97000000 		.4byte	0x97
 15619 10f6 01110000 		.4byte	0x1101
 15620 10fa 0A       		.uleb128 0xa
 15621 10fb 18010000 		.4byte	0x118
 15622 10ff 01       		.byte	0x1
 15623 1100 00       		.byte	0
 15624 1101 25       		.uleb128 0x25
 15625 1102 B3020000 		.4byte	.LASF223
 15626 1106 01       		.byte	0x1
 15627 1107 7807     		.2byte	0x778
 15628 1109 97000000 		.4byte	0x97
 15629 110d 00000000 		.4byte	.LFB79
 15630 1111 98000000 		.4byte	.LFE79-.LFB79
 15631 1115 01       		.uleb128 0x1
 15632 1116 9C       		.byte	0x9c
 15633 1117 65110000 		.4byte	0x1165
 15634 111b 21       		.uleb128 0x21
 15635 111c E9030000 		.4byte	.LASF224
 15636 1120 01       		.byte	0x1
 15637 1121 7807     		.2byte	0x778
 15638 1123 73000000 		.4byte	0x73
 15639 1127 02       		.uleb128 0x2
 15640 1128 91       		.byte	0x91
 15641 1129 64       		.sleb128 -28
 15642 112a 23       		.uleb128 0x23
 15643 112b 6900     		.ascii	"i\000"
 15644 112d 01       		.byte	0x1
 15645 112e 7A07     		.2byte	0x77a
 15646 1130 73000000 		.4byte	0x73
 15647 1134 02       		.uleb128 0x2
 15648 1135 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 350


 15649 1136 74       		.sleb128 -12
 15650 1137 1F       		.uleb128 0x1f
 15651 1138 5E000000 		.4byte	.LASF225
 15652 113c 01       		.byte	0x1
 15653 113d 7B07     		.2byte	0x77b
 15654 113f 97000000 		.4byte	0x97
 15655 1143 02       		.uleb128 0x2
 15656 1144 91       		.byte	0x91
 15657 1145 6B       		.sleb128 -21
 15658 1146 1F       		.uleb128 0x1f
 15659 1147 37040000 		.4byte	.LASF226
 15660 114b 01       		.byte	0x1
 15661 114c 7C07     		.2byte	0x77c
 15662 114e 73000000 		.4byte	0x73
 15663 1152 02       		.uleb128 0x2
 15664 1153 91       		.byte	0x91
 15665 1154 6C       		.sleb128 -20
 15666 1155 1F       		.uleb128 0x1f
 15667 1156 A2030000 		.4byte	.LASF227
 15668 115a 01       		.byte	0x1
 15669 115b 7D07     		.2byte	0x77d
 15670 115d 97000000 		.4byte	0x97
 15671 1161 02       		.uleb128 0x2
 15672 1162 91       		.byte	0x91
 15673 1163 73       		.sleb128 -13
 15674 1164 00       		.byte	0
 15675 1165 1E       		.uleb128 0x1e
 15676 1166 330A0000 		.4byte	.LASF228
 15677 116a 01       		.byte	0x1
 15678 116b A207     		.2byte	0x7a2
 15679 116d 00000000 		.4byte	.LFB80
 15680 1171 64000000 		.4byte	.LFE80-.LFB80
 15681 1175 01       		.uleb128 0x1
 15682 1176 9C       		.byte	0x9c
 15683 1177 89110000 		.4byte	0x1189
 15684 117b 23       		.uleb128 0x23
 15685 117c 6900     		.ascii	"i\000"
 15686 117e 01       		.byte	0x1
 15687 117f A407     		.2byte	0x7a4
 15688 1181 A3000000 		.4byte	0xa3
 15689 1185 02       		.uleb128 0x2
 15690 1186 91       		.byte	0x91
 15691 1187 76       		.sleb128 -10
 15692 1188 00       		.byte	0
 15693 1189 25       		.uleb128 0x25
 15694 118a A3090000 		.4byte	.LASF229
 15695 118e 01       		.byte	0x1
 15696 118f B807     		.2byte	0x7b8
 15697 1191 97000000 		.4byte	0x97
 15698 1195 00000000 		.4byte	.LFB81
 15699 1199 5C000000 		.4byte	.LFE81-.LFB81
 15700 119d 01       		.uleb128 0x1
 15701 119e 9C       		.byte	0x9c
 15702 119f B1110000 		.4byte	0x11b1
 15703 11a3 23       		.uleb128 0x23
 15704 11a4 6900     		.ascii	"i\000"
 15705 11a6 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 351


 15706 11a7 B907     		.2byte	0x7b9
 15707 11a9 A3000000 		.4byte	0xa3
 15708 11ad 02       		.uleb128 0x2
 15709 11ae 91       		.byte	0x91
 15710 11af 76       		.sleb128 -10
 15711 11b0 00       		.byte	0
 15712 11b1 25       		.uleb128 0x25
 15713 11b2 3D040000 		.4byte	.LASF230
 15714 11b6 01       		.byte	0x1
 15715 11b7 CB07     		.2byte	0x7cb
 15716 11b9 97000000 		.4byte	0x97
 15717 11bd 00000000 		.4byte	.LFB82
 15718 11c1 0C030000 		.4byte	.LFE82-.LFB82
 15719 11c5 01       		.uleb128 0x1
 15720 11c6 9C       		.byte	0x9c
 15721 11c7 D9110000 		.4byte	0x11d9
 15722 11cb 23       		.uleb128 0x23
 15723 11cc 6900     		.ascii	"i\000"
 15724 11ce 01       		.byte	0x1
 15725 11cf CD07     		.2byte	0x7cd
 15726 11d1 97000000 		.4byte	0x97
 15727 11d5 02       		.uleb128 0x2
 15728 11d6 91       		.byte	0x91
 15729 11d7 77       		.sleb128 -9
 15730 11d8 00       		.byte	0
 15731 11d9 22       		.uleb128 0x22
 15732 11da 6B040000 		.4byte	.LASF231
 15733 11de 01       		.byte	0x1
 15734 11df 4108     		.2byte	0x841
 15735 11e1 00000000 		.4byte	.LFB83
 15736 11e5 8C000000 		.4byte	.LFE83-.LFB83
 15737 11e9 01       		.uleb128 0x1
 15738 11ea 9C       		.byte	0x9c
 15739 11eb 1D120000 		.4byte	0x121d
 15740 11ef 1F       		.uleb128 0x1f
 15741 11f0 CF040000 		.4byte	.LASF184
 15742 11f4 01       		.byte	0x1
 15743 11f5 4308     		.2byte	0x843
 15744 11f7 97000000 		.4byte	0x97
 15745 11fb 02       		.uleb128 0x2
 15746 11fc 91       		.byte	0x91
 15747 11fd 77       		.sleb128 -9
 15748 11fe 1F       		.uleb128 0x1f
 15749 11ff DC0B0000 		.4byte	.LASF167
 15750 1203 01       		.byte	0x1
 15751 1204 4408     		.2byte	0x844
 15752 1206 C7000000 		.4byte	0xc7
 15753 120a 02       		.uleb128 0x2
 15754 120b 91       		.byte	0x91
 15755 120c 74       		.sleb128 -12
 15756 120d 1F       		.uleb128 0x1f
 15757 120e 21040000 		.4byte	.LASF159
 15758 1212 01       		.byte	0x1
 15759 1213 4708     		.2byte	0x847
 15760 1215 1D120000 		.4byte	0x121d
 15761 1219 02       		.uleb128 0x2
 15762 121a 91       		.byte	0x91
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 352


 15763 121b 6C       		.sleb128 -20
 15764 121c 00       		.byte	0
 15765 121d 09       		.uleb128 0x9
 15766 121e 97000000 		.4byte	0x97
 15767 1222 2D120000 		.4byte	0x122d
 15768 1226 0A       		.uleb128 0xa
 15769 1227 18010000 		.4byte	0x118
 15770 122b 07       		.byte	0x7
 15771 122c 00       		.byte	0
 15772 122d 22       		.uleb128 0x22
 15773 122e 200A0000 		.4byte	.LASF232
 15774 1232 01       		.byte	0x1
 15775 1233 5B08     		.2byte	0x85b
 15776 1235 00000000 		.4byte	.LFB84
 15777 1239 8C000000 		.4byte	.LFE84-.LFB84
 15778 123d 01       		.uleb128 0x1
 15779 123e 9C       		.byte	0x9c
 15780 123f 71120000 		.4byte	0x1271
 15781 1243 1F       		.uleb128 0x1f
 15782 1244 CF040000 		.4byte	.LASF184
 15783 1248 01       		.byte	0x1
 15784 1249 5D08     		.2byte	0x85d
 15785 124b 97000000 		.4byte	0x97
 15786 124f 02       		.uleb128 0x2
 15787 1250 91       		.byte	0x91
 15788 1251 77       		.sleb128 -9
 15789 1252 1F       		.uleb128 0x1f
 15790 1253 DC0B0000 		.4byte	.LASF167
 15791 1257 01       		.byte	0x1
 15792 1258 5E08     		.2byte	0x85e
 15793 125a C7000000 		.4byte	0xc7
 15794 125e 02       		.uleb128 0x2
 15795 125f 91       		.byte	0x91
 15796 1260 74       		.sleb128 -12
 15797 1261 1F       		.uleb128 0x1f
 15798 1262 21040000 		.4byte	.LASF159
 15799 1266 01       		.byte	0x1
 15800 1267 6208     		.2byte	0x862
 15801 1269 1D120000 		.4byte	0x121d
 15802 126d 02       		.uleb128 0x2
 15803 126e 91       		.byte	0x91
 15804 126f 6C       		.sleb128 -20
 15805 1270 00       		.byte	0
 15806 1271 22       		.uleb128 0x22
 15807 1272 6D050000 		.4byte	.LASF233
 15808 1276 01       		.byte	0x1
 15809 1277 7508     		.2byte	0x875
 15810 1279 00000000 		.4byte	.LFB85
 15811 127d 90000000 		.4byte	.LFE85-.LFB85
 15812 1281 01       		.uleb128 0x1
 15813 1282 9C       		.byte	0x9c
 15814 1283 B5120000 		.4byte	0x12b5
 15815 1287 1F       		.uleb128 0x1f
 15816 1288 CF040000 		.4byte	.LASF184
 15817 128c 01       		.byte	0x1
 15818 128d 7708     		.2byte	0x877
 15819 128f 97000000 		.4byte	0x97
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 353


 15820 1293 02       		.uleb128 0x2
 15821 1294 91       		.byte	0x91
 15822 1295 77       		.sleb128 -9
 15823 1296 1F       		.uleb128 0x1f
 15824 1297 DC0B0000 		.4byte	.LASF167
 15825 129b 01       		.byte	0x1
 15826 129c 7808     		.2byte	0x878
 15827 129e C7000000 		.4byte	0xc7
 15828 12a2 02       		.uleb128 0x2
 15829 12a3 91       		.byte	0x91
 15830 12a4 74       		.sleb128 -12
 15831 12a5 1F       		.uleb128 0x1f
 15832 12a6 21040000 		.4byte	.LASF159
 15833 12aa 01       		.byte	0x1
 15834 12ab 7C08     		.2byte	0x87c
 15835 12ad 1D120000 		.4byte	0x121d
 15836 12b1 02       		.uleb128 0x2
 15837 12b2 91       		.byte	0x91
 15838 12b3 6C       		.sleb128 -20
 15839 12b4 00       		.byte	0
 15840 12b5 26       		.uleb128 0x26
 15841 12b6 1B080000 		.4byte	.LASF234
 15842 12ba 01       		.byte	0x1
 15843 12bb 8F08     		.2byte	0x88f
 15844 12bd 00000000 		.4byte	.LFB86
 15845 12c1 C4000000 		.4byte	.LFE86-.LFB86
 15846 12c5 01       		.uleb128 0x1
 15847 12c6 9C       		.byte	0x9c
 15848 12c7 DB120000 		.4byte	0x12db
 15849 12cb 1F       		.uleb128 0x1f
 15850 12cc DC0B0000 		.4byte	.LASF167
 15851 12d0 01       		.byte	0x1
 15852 12d1 9208     		.2byte	0x892
 15853 12d3 C7000000 		.4byte	0xc7
 15854 12d7 02       		.uleb128 0x2
 15855 12d8 91       		.byte	0x91
 15856 12d9 76       		.sleb128 -10
 15857 12da 00       		.byte	0
 15858 12db 27       		.uleb128 0x27
 15859 12dc A70D0000 		.4byte	.LASF239
 15860 12e0 01       		.byte	0x1
 15861 12e1 B108     		.2byte	0x8b1
 15862 12e3 00000000 		.4byte	.LFB87
 15863 12e7 48000000 		.4byte	.LFE87-.LFB87
 15864 12eb 01       		.uleb128 0x1
 15865 12ec 9C       		.byte	0x9c
 15866 12ed 22       		.uleb128 0x22
 15867 12ee 51080000 		.4byte	.LASF235
 15868 12f2 01       		.byte	0x1
 15869 12f3 BF08     		.2byte	0x8bf
 15870 12f5 00000000 		.4byte	.LFB88
 15871 12f9 34000000 		.4byte	.LFE88-.LFB88
 15872 12fd 01       		.uleb128 0x1
 15873 12fe 9C       		.byte	0x9c
 15874 12ff 13130000 		.4byte	0x1313
 15875 1303 1F       		.uleb128 0x1f
 15876 1304 21040000 		.4byte	.LASF159
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 354


 15877 1308 01       		.byte	0x1
 15878 1309 C108     		.2byte	0x8c1
 15879 130b B9060000 		.4byte	0x6b9
 15880 130f 02       		.uleb128 0x2
 15881 1310 91       		.byte	0x91
 15882 1311 74       		.sleb128 -12
 15883 1312 00       		.byte	0
 15884 1313 22       		.uleb128 0x22
 15885 1314 E10A0000 		.4byte	.LASF236
 15886 1318 01       		.byte	0x1
 15887 1319 D108     		.2byte	0x8d1
 15888 131b 00000000 		.4byte	.LFB89
 15889 131f C0000000 		.4byte	.LFE89-.LFB89
 15890 1323 01       		.uleb128 0x1
 15891 1324 9C       		.byte	0x9c
 15892 1325 57130000 		.4byte	0x1357
 15893 1329 1F       		.uleb128 0x1f
 15894 132a CF040000 		.4byte	.LASF184
 15895 132e 01       		.byte	0x1
 15896 132f D308     		.2byte	0x8d3
 15897 1331 97000000 		.4byte	0x97
 15898 1335 02       		.uleb128 0x2
 15899 1336 91       		.byte	0x91
 15900 1337 77       		.sleb128 -9
 15901 1338 1F       		.uleb128 0x1f
 15902 1339 DC0B0000 		.4byte	.LASF167
 15903 133d 01       		.byte	0x1
 15904 133e D408     		.2byte	0x8d4
 15905 1340 C7000000 		.4byte	0xc7
 15906 1344 02       		.uleb128 0x2
 15907 1345 91       		.byte	0x91
 15908 1346 74       		.sleb128 -12
 15909 1347 1F       		.uleb128 0x1f
 15910 1348 21040000 		.4byte	.LASF159
 15911 134c 01       		.byte	0x1
 15912 134d D808     		.2byte	0x8d8
 15913 134f 57130000 		.4byte	0x1357
 15914 1353 02       		.uleb128 0x2
 15915 1354 91       		.byte	0x91
 15916 1355 68       		.sleb128 -24
 15917 1356 00       		.byte	0
 15918 1357 09       		.uleb128 0x9
 15919 1358 97000000 		.4byte	0x97
 15920 135c 67130000 		.4byte	0x1367
 15921 1360 0A       		.uleb128 0xa
 15922 1361 18010000 		.4byte	0x118
 15923 1365 0B       		.byte	0xb
 15924 1366 00       		.byte	0
 15925 1367 22       		.uleb128 0x22
 15926 1368 45070000 		.4byte	.LASF237
 15927 136c 01       		.byte	0x1
 15928 136d F608     		.2byte	0x8f6
 15929 136f 00000000 		.4byte	.LFB90
 15930 1373 60000000 		.4byte	.LFE90-.LFB90
 15931 1377 01       		.uleb128 0x1
 15932 1378 9C       		.byte	0x9c
 15933 1379 9C130000 		.4byte	0x139c
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 355


 15934 137d 1F       		.uleb128 0x1f
 15935 137e 21040000 		.4byte	.LASF159
 15936 1382 01       		.byte	0x1
 15937 1383 FA08     		.2byte	0x8fa
 15938 1385 39070000 		.4byte	0x739
 15939 1389 02       		.uleb128 0x2
 15940 138a 91       		.byte	0x91
 15941 138b 70       		.sleb128 -16
 15942 138c 1F       		.uleb128 0x1f
 15943 138d DC0B0000 		.4byte	.LASF167
 15944 1391 01       		.byte	0x1
 15945 1392 FB08     		.2byte	0x8fb
 15946 1394 C7000000 		.4byte	0xc7
 15947 1398 02       		.uleb128 0x2
 15948 1399 91       		.byte	0x91
 15949 139a 6E       		.sleb128 -18
 15950 139b 00       		.byte	0
 15951 139c 22       		.uleb128 0x22
 15952 139d F00C0000 		.4byte	.LASF238
 15953 13a1 01       		.byte	0x1
 15954 13a2 1309     		.2byte	0x913
 15955 13a4 00000000 		.4byte	.LFB91
 15956 13a8 44000000 		.4byte	.LFE91-.LFB91
 15957 13ac 01       		.uleb128 0x1
 15958 13ad 9C       		.byte	0x9c
 15959 13ae D1130000 		.4byte	0x13d1
 15960 13b2 1F       		.uleb128 0x1f
 15961 13b3 21040000 		.4byte	.LASF159
 15962 13b7 01       		.byte	0x1
 15963 13b8 1709     		.2byte	0x917
 15964 13ba D1130000 		.4byte	0x13d1
 15965 13be 02       		.uleb128 0x2
 15966 13bf 91       		.byte	0x91
 15967 13c0 74       		.sleb128 -12
 15968 13c1 1F       		.uleb128 0x1f
 15969 13c2 DC0B0000 		.4byte	.LASF167
 15970 13c6 01       		.byte	0x1
 15971 13c7 1809     		.2byte	0x918
 15972 13c9 C7000000 		.4byte	0xc7
 15973 13cd 02       		.uleb128 0x2
 15974 13ce 91       		.byte	0x91
 15975 13cf 72       		.sleb128 -14
 15976 13d0 00       		.byte	0
 15977 13d1 09       		.uleb128 0x9
 15978 13d2 97000000 		.4byte	0x97
 15979 13d6 E1130000 		.4byte	0x13e1
 15980 13da 0A       		.uleb128 0xa
 15981 13db 18010000 		.4byte	0x118
 15982 13df 03       		.byte	0x3
 15983 13e0 00       		.byte	0
 15984 13e1 27       		.uleb128 0x27
 15985 13e2 71000000 		.4byte	.LASF240
 15986 13e6 01       		.byte	0x1
 15987 13e7 2A09     		.2byte	0x92a
 15988 13e9 00000000 		.4byte	.LFB92
 15989 13ed 34000000 		.4byte	.LFE92-.LFB92
 15990 13f1 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 356


 15991 13f2 9C       		.byte	0x9c
 15992 13f3 22       		.uleb128 0x22
 15993 13f4 3D020000 		.4byte	.LASF241
 15994 13f8 01       		.byte	0x1
 15995 13f9 3809     		.2byte	0x938
 15996 13fb 00000000 		.4byte	.LFB93
 15997 13ff 20000000 		.4byte	.LFE93-.LFB93
 15998 1403 01       		.uleb128 0x1
 15999 1404 9C       		.byte	0x9c
 16000 1405 19140000 		.4byte	0x1419
 16001 1409 1F       		.uleb128 0x1f
 16002 140a 21040000 		.4byte	.LASF159
 16003 140e 01       		.byte	0x1
 16004 140f 3A09     		.2byte	0x93a
 16005 1411 F1100000 		.4byte	0x10f1
 16006 1415 02       		.uleb128 0x2
 16007 1416 91       		.byte	0x91
 16008 1417 74       		.sleb128 -12
 16009 1418 00       		.byte	0
 16010 1419 22       		.uleb128 0x22
 16011 141a D4000000 		.4byte	.LASF242
 16012 141e 01       		.byte	0x1
 16013 141f 4609     		.2byte	0x946
 16014 1421 00000000 		.4byte	.LFB94
 16015 1425 54000000 		.4byte	.LFE94-.LFB94
 16016 1429 01       		.uleb128 0x1
 16017 142a 9C       		.byte	0x9c
 16018 142b 4E140000 		.4byte	0x144e
 16019 142f 1F       		.uleb128 0x1f
 16020 1430 21040000 		.4byte	.LASF159
 16021 1434 01       		.byte	0x1
 16022 1435 4A09     		.2byte	0x94a
 16023 1437 39070000 		.4byte	0x739
 16024 143b 02       		.uleb128 0x2
 16025 143c 91       		.byte	0x91
 16026 143d 70       		.sleb128 -16
 16027 143e 1F       		.uleb128 0x1f
 16028 143f DC0B0000 		.4byte	.LASF167
 16029 1443 01       		.byte	0x1
 16030 1444 4B09     		.2byte	0x94b
 16031 1446 C7000000 		.4byte	0xc7
 16032 144a 02       		.uleb128 0x2
 16033 144b 91       		.byte	0x91
 16034 144c 6E       		.sleb128 -18
 16035 144d 00       		.byte	0
 16036 144e 22       		.uleb128 0x22
 16037 144f 1E0B0000 		.4byte	.LASF243
 16038 1453 01       		.byte	0x1
 16039 1454 5D09     		.2byte	0x95d
 16040 1456 00000000 		.4byte	.LFB95
 16041 145a 30010000 		.4byte	.LFE95-.LFB95
 16042 145e 01       		.uleb128 0x1
 16043 145f 9C       		.byte	0x9c
 16044 1460 B0140000 		.4byte	0x14b0
 16045 1464 1F       		.uleb128 0x1f
 16046 1465 37080000 		.4byte	.LASF244
 16047 1469 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 357


 16048 146a 6009     		.2byte	0x960
 16049 146c AF000000 		.4byte	0xaf
 16050 1470 02       		.uleb128 0x2
 16051 1471 91       		.byte	0x91
 16052 1472 70       		.sleb128 -16
 16053 1473 1F       		.uleb128 0x1f
 16054 1474 7B0A0000 		.4byte	.LASF245
 16055 1478 01       		.byte	0x1
 16056 1479 6109     		.2byte	0x961
 16057 147b EB000000 		.4byte	0xeb
 16058 147f 02       		.uleb128 0x2
 16059 1480 91       		.byte	0x91
 16060 1481 6C       		.sleb128 -20
 16061 1482 1F       		.uleb128 0x1f
 16062 1483 A5000000 		.4byte	.LASF160
 16063 1487 01       		.byte	0x1
 16064 1488 6209     		.2byte	0x962
 16065 148a 97000000 		.4byte	0x97
 16066 148e 02       		.uleb128 0x2
 16067 148f 91       		.byte	0x91
 16068 1490 77       		.sleb128 -9
 16069 1491 1F       		.uleb128 0x1f
 16070 1492 21040000 		.4byte	.LASF159
 16071 1496 01       		.byte	0x1
 16072 1497 6309     		.2byte	0x963
 16073 1499 F1100000 		.4byte	0x10f1
 16074 149d 02       		.uleb128 0x2
 16075 149e 91       		.byte	0x91
 16076 149f 68       		.sleb128 -24
 16077 14a0 1F       		.uleb128 0x1f
 16078 14a1 D20A0000 		.4byte	.LASF214
 16079 14a5 01       		.byte	0x1
 16080 14a6 6409     		.2byte	0x964
 16081 14a8 97000000 		.4byte	0x97
 16082 14ac 02       		.uleb128 0x2
 16083 14ad 91       		.byte	0x91
 16084 14ae 6B       		.sleb128 -21
 16085 14af 00       		.byte	0
 16086 14b0 22       		.uleb128 0x22
 16087 14b1 62010000 		.4byte	.LASF246
 16088 14b5 01       		.byte	0x1
 16089 14b6 9109     		.2byte	0x991
 16090 14b8 00000000 		.4byte	.LFB96
 16091 14bc 60000000 		.4byte	.LFE96-.LFB96
 16092 14c0 01       		.uleb128 0x1
 16093 14c1 9C       		.byte	0x9c
 16094 14c2 E5140000 		.4byte	0x14e5
 16095 14c6 1F       		.uleb128 0x1f
 16096 14c7 21040000 		.4byte	.LASF159
 16097 14cb 01       		.byte	0x1
 16098 14cc 9309     		.2byte	0x993
 16099 14ce 39070000 		.4byte	0x739
 16100 14d2 02       		.uleb128 0x2
 16101 14d3 91       		.byte	0x91
 16102 14d4 70       		.sleb128 -16
 16103 14d5 1F       		.uleb128 0x1f
 16104 14d6 DC0B0000 		.4byte	.LASF167
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 358


 16105 14da 01       		.byte	0x1
 16106 14db 9409     		.2byte	0x994
 16107 14dd C7000000 		.4byte	0xc7
 16108 14e1 02       		.uleb128 0x2
 16109 14e2 91       		.byte	0x91
 16110 14e3 6E       		.sleb128 -18
 16111 14e4 00       		.byte	0
 16112 14e5 22       		.uleb128 0x22
 16113 14e6 10010000 		.4byte	.LASF247
 16114 14ea 01       		.byte	0x1
 16115 14eb AA09     		.2byte	0x9aa
 16116 14ed 00000000 		.4byte	.LFB97
 16117 14f1 90050000 		.4byte	.LFE97-.LFB97
 16118 14f5 01       		.uleb128 0x1
 16119 14f6 9C       		.byte	0x9c
 16120 14f7 72150000 		.4byte	0x1572
 16121 14fb 1F       		.uleb128 0x1f
 16122 14fc 350D0000 		.4byte	.LASF248
 16123 1500 01       		.byte	0x1
 16124 1501 AD09     		.2byte	0x9ad
 16125 1503 97000000 		.4byte	0x97
 16126 1507 02       		.uleb128 0x2
 16127 1508 91       		.byte	0x91
 16128 1509 6F       		.sleb128 -17
 16129 150a 23       		.uleb128 0x23
 16130 150b 6300     		.ascii	"c\000"
 16131 150d 01       		.byte	0x1
 16132 150e AE09     		.2byte	0x9ae
 16133 1510 97000000 		.4byte	0x97
 16134 1514 02       		.uleb128 0x2
 16135 1515 91       		.byte	0x91
 16136 1516 6E       		.sleb128 -18
 16137 1517 23       		.uleb128 0x23
 16138 1518 6B00     		.ascii	"k\000"
 16139 151a 01       		.byte	0x1
 16140 151b AF09     		.2byte	0x9af
 16141 151d 97000000 		.4byte	0x97
 16142 1521 02       		.uleb128 0x2
 16143 1522 91       		.byte	0x91
 16144 1523 6D       		.sleb128 -19
 16145 1524 1F       		.uleb128 0x1f
 16146 1525 1F000000 		.4byte	.LASF249
 16147 1529 01       		.byte	0x1
 16148 152a B009     		.2byte	0x9b0
 16149 152c 97000000 		.4byte	0x97
 16150 1530 02       		.uleb128 0x2
 16151 1531 91       		.byte	0x91
 16152 1532 6C       		.sleb128 -20
 16153 1533 1F       		.uleb128 0x1f
 16154 1534 DC0B0000 		.4byte	.LASF167
 16155 1538 01       		.byte	0x1
 16156 1539 B109     		.2byte	0x9b1
 16157 153b C7000000 		.4byte	0xc7
 16158 153f 02       		.uleb128 0x2
 16159 1540 91       		.byte	0x91
 16160 1541 6A       		.sleb128 -22
 16161 1542 1F       		.uleb128 0x1f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 359


 16162 1543 BB0C0000 		.4byte	.LASF166
 16163 1547 01       		.byte	0x1
 16164 1548 B209     		.2byte	0x9b2
 16165 154a EB000000 		.4byte	0xeb
 16166 154e 02       		.uleb128 0x2
 16167 154f 91       		.byte	0x91
 16168 1550 64       		.sleb128 -28
 16169 1551 1F       		.uleb128 0x1f
 16170 1552 21040000 		.4byte	.LASF159
 16171 1556 01       		.byte	0x1
 16172 1557 B509     		.2byte	0x9b5
 16173 1559 72150000 		.4byte	0x1572
 16174 155d 03       		.uleb128 0x3
 16175 155e 91       		.byte	0x91
 16176 155f 847D     		.sleb128 -380
 16177 1561 1F       		.uleb128 0x1f
 16178 1562 17060000 		.4byte	.LASF250
 16179 1566 01       		.byte	0x1
 16180 1567 B609     		.2byte	0x9b6
 16181 1569 83150000 		.4byte	0x1583
 16182 156d 03       		.uleb128 0x3
 16183 156e 91       		.byte	0x91
 16184 156f EC7C     		.sleb128 -404
 16185 1571 00       		.byte	0
 16186 1572 09       		.uleb128 0x9
 16187 1573 97000000 		.4byte	0x97
 16188 1577 83150000 		.4byte	0x1583
 16189 157b 20       		.uleb128 0x20
 16190 157c 18010000 		.4byte	0x118
 16191 1580 5D01     		.2byte	0x15d
 16192 1582 00       		.byte	0
 16193 1583 09       		.uleb128 0x9
 16194 1584 97000000 		.4byte	0x97
 16195 1588 93150000 		.4byte	0x1593
 16196 158c 0A       		.uleb128 0xa
 16197 158d 18010000 		.4byte	0x118
 16198 1591 15       		.byte	0x15
 16199 1592 00       		.byte	0
 16200 1593 28       		.uleb128 0x28
 16201 1594 0D0C0000 		.4byte	.LASF251
 16202 1598 08       		.byte	0x8
 16203 1599 1207     		.2byte	0x712
 16204 159b 9F150000 		.4byte	0x159f
 16205 159f 06       		.uleb128 0x6
 16206 15a0 81000000 		.4byte	0x81
 16207 15a4 28       		.uleb128 0x28
 16208 15a5 6E0D0000 		.4byte	.LASF252
 16209 15a9 07       		.byte	0x7
 16210 15aa 4E01     		.2byte	0x14e
 16211 15ac C0020000 		.4byte	0x2c0
 16212 15b0 28       		.uleb128 0x28
 16213 15b1 F1020000 		.4byte	.LASF253
 16214 15b5 07       		.byte	0x7
 16215 15b6 4E01     		.2byte	0x14e
 16216 15b8 C0020000 		.4byte	0x2c0
 16217 15bc 28       		.uleb128 0x28
 16218 15bd 2C090000 		.4byte	.LASF254
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 360


 16219 15c1 07       		.byte	0x7
 16220 15c2 4E01     		.2byte	0x14e
 16221 15c4 C0020000 		.4byte	0x2c0
 16222 15c8 28       		.uleb128 0x28
 16223 15c9 99040000 		.4byte	.LASF255
 16224 15cd 07       		.byte	0x7
 16225 15ce 4F01     		.2byte	0x14f
 16226 15d0 FD020000 		.4byte	0x2fd
 16227 15d4 28       		.uleb128 0x28
 16228 15d5 8F0D0000 		.4byte	.LASF256
 16229 15d9 07       		.byte	0x7
 16230 15da 4F01     		.2byte	0x14f
 16231 15dc FD020000 		.4byte	0x2fd
 16232 15e0 28       		.uleb128 0x28
 16233 15e1 51000000 		.4byte	.LASF257
 16234 15e5 07       		.byte	0x7
 16235 15e6 5001     		.2byte	0x150
 16236 15e8 8E030000 		.4byte	0x38e
 16237 15ec 28       		.uleb128 0x28
 16238 15ed 2F0B0000 		.4byte	.LASF258
 16239 15f1 07       		.byte	0x7
 16240 15f2 5101     		.2byte	0x151
 16241 15f4 DB030000 		.4byte	0x3db
 16242 15f8 28       		.uleb128 0x28
 16243 15f9 C7070000 		.4byte	.LASF259
 16244 15fd 07       		.byte	0x7
 16245 15fe 5101     		.2byte	0x151
 16246 1600 DB030000 		.4byte	0x3db
 16247 1604 28       		.uleb128 0x28
 16248 1605 FF060000 		.4byte	.LASF260
 16249 1609 07       		.byte	0x7
 16250 160a 5201     		.2byte	0x152
 16251 160c EB070000 		.4byte	0x7eb
 16252 1610 28       		.uleb128 0x28
 16253 1611 BE010000 		.4byte	.LASF261
 16254 1615 07       		.byte	0x7
 16255 1616 5701     		.2byte	0x157
 16256 1618 AF000000 		.4byte	0xaf
 16257 161c 28       		.uleb128 0x28
 16258 161d 3D0A0000 		.4byte	.LASF262
 16259 1621 07       		.byte	0x7
 16260 1622 5801     		.2byte	0x158
 16261 1624 AF000000 		.4byte	0xaf
 16262 1628 28       		.uleb128 0x28
 16263 1629 6F0A0000 		.4byte	.LASF263
 16264 162d 07       		.byte	0x7
 16265 162e 5B01     		.2byte	0x15b
 16266 1630 D3000000 		.4byte	0xd3
 16267 1634 28       		.uleb128 0x28
 16268 1635 A40C0000 		.4byte	.LASF264
 16269 1639 07       		.byte	0x7
 16270 163a 5C01     		.2byte	0x15c
 16271 163c 97000000 		.4byte	0x97
 16272 1640 28       		.uleb128 0x28
 16273 1641 2D0C0000 		.4byte	.LASF265
 16274 1645 07       		.byte	0x7
 16275 1646 5F01     		.2byte	0x15f
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 361


 16276 1648 D3000000 		.4byte	0xd3
 16277 164c 28       		.uleb128 0x28
 16278 164d 9B070000 		.4byte	.LASF266
 16279 1651 07       		.byte	0x7
 16280 1652 6601     		.2byte	0x166
 16281 1654 97000000 		.4byte	0x97
 16282 1658 28       		.uleb128 0x28
 16283 1659 60070000 		.4byte	.LASF267
 16284 165d 07       		.byte	0x7
 16285 165e 6F01     		.2byte	0x16f
 16286 1660 97000000 		.4byte	0x97
 16287 1664 09       		.uleb128 0x9
 16288 1665 AF000000 		.4byte	0xaf
 16289 1669 74160000 		.4byte	0x1674
 16290 166d 0A       		.uleb128 0xa
 16291 166e 18010000 		.4byte	0x118
 16292 1672 02       		.byte	0x2
 16293 1673 00       		.byte	0
 16294 1674 28       		.uleb128 0x28
 16295 1675 AA040000 		.4byte	.LASF268
 16296 1679 07       		.byte	0x7
 16297 167a 7901     		.2byte	0x179
 16298 167c 64160000 		.4byte	0x1664
 16299 1680 28       		.uleb128 0x28
 16300 1681 820B0000 		.4byte	.LASF269
 16301 1685 07       		.byte	0x7
 16302 1686 8301     		.2byte	0x183
 16303 1688 97000000 		.4byte	0x97
 16304 168c 28       		.uleb128 0x28
 16305 168d C50C0000 		.4byte	.LASF270
 16306 1691 07       		.byte	0x7
 16307 1692 8401     		.2byte	0x184
 16308 1694 B9060000 		.4byte	0x6b9
 16309 1698 28       		.uleb128 0x28
 16310 1699 FE0B0000 		.4byte	.LASF271
 16311 169d 07       		.byte	0x7
 16312 169e 8501     		.2byte	0x185
 16313 16a0 73000000 		.4byte	0x73
 16314 16a4 09       		.uleb128 0x9
 16315 16a5 73000000 		.4byte	0x73
 16316 16a9 B4160000 		.4byte	0x16b4
 16317 16ad 0A       		.uleb128 0xa
 16318 16ae 18010000 		.4byte	0x118
 16319 16b2 02       		.byte	0x2
 16320 16b3 00       		.byte	0
 16321 16b4 28       		.uleb128 0x28
 16322 16b5 BC020000 		.4byte	.LASF272
 16323 16b9 07       		.byte	0x7
 16324 16ba 8601     		.2byte	0x186
 16325 16bc A4160000 		.4byte	0x16a4
 16326 16c0 09       		.uleb128 0x9
 16327 16c1 6F070000 		.4byte	0x76f
 16328 16c5 D0160000 		.4byte	0x16d0
 16329 16c9 0A       		.uleb128 0xa
 16330 16ca 18010000 		.4byte	0x118
 16331 16ce 02       		.byte	0x2
 16332 16cf 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 362


 16333 16d0 28       		.uleb128 0x28
 16334 16d1 E8040000 		.4byte	.LASF273
 16335 16d5 07       		.byte	0x7
 16336 16d6 8701     		.2byte	0x187
 16337 16d8 C0160000 		.4byte	0x16c0
 16338 16dc 09       		.uleb128 0x9
 16339 16dd 97000000 		.4byte	0x97
 16340 16e1 F2160000 		.4byte	0x16f2
 16341 16e5 0A       		.uleb128 0xa
 16342 16e6 18010000 		.4byte	0x118
 16343 16ea 02       		.byte	0x2
 16344 16eb 0A       		.uleb128 0xa
 16345 16ec 18010000 		.4byte	0x118
 16346 16f0 02       		.byte	0x2
 16347 16f1 00       		.byte	0
 16348 16f2 28       		.uleb128 0x28
 16349 16f3 F8070000 		.4byte	.LASF274
 16350 16f7 07       		.byte	0x7
 16351 16f8 8C01     		.2byte	0x18c
 16352 16fa DC160000 		.4byte	0x16dc
 16353 16fe 29       		.uleb128 0x29
 16354 16ff E60B0000 		.4byte	.LASF275
 16355 1703 01       		.byte	0x1
 16356 1704 38       		.byte	0x38
 16357 1705 0F170000 		.4byte	0x170f
 16358 1709 05       		.uleb128 0x5
 16359 170a 03       		.byte	0x3
 16360 170b 00000000 		.4byte	EEPROM_ADDR
 16361 170f 07       		.uleb128 0x7
 16362 1710 04       		.byte	0x4
 16363 1711 00010000 		.4byte	0x100
 16364 1715 00       		.byte	0
 16365              		.section	.debug_abbrev,"",%progbits
 16366              	.Ldebug_abbrev0:
 16367 0000 01       		.uleb128 0x1
 16368 0001 11       		.uleb128 0x11
 16369 0002 01       		.byte	0x1
 16370 0003 25       		.uleb128 0x25
 16371 0004 0E       		.uleb128 0xe
 16372 0005 13       		.uleb128 0x13
 16373 0006 0B       		.uleb128 0xb
 16374 0007 03       		.uleb128 0x3
 16375 0008 0E       		.uleb128 0xe
 16376 0009 1B       		.uleb128 0x1b
 16377 000a 0E       		.uleb128 0xe
 16378 000b 55       		.uleb128 0x55
 16379 000c 17       		.uleb128 0x17
 16380 000d 11       		.uleb128 0x11
 16381 000e 01       		.uleb128 0x1
 16382 000f 10       		.uleb128 0x10
 16383 0010 17       		.uleb128 0x17
 16384 0011 00       		.byte	0
 16385 0012 00       		.byte	0
 16386 0013 02       		.uleb128 0x2
 16387 0014 24       		.uleb128 0x24
 16388 0015 00       		.byte	0
 16389 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 363


 16390 0017 0B       		.uleb128 0xb
 16391 0018 3E       		.uleb128 0x3e
 16392 0019 0B       		.uleb128 0xb
 16393 001a 03       		.uleb128 0x3
 16394 001b 0E       		.uleb128 0xe
 16395 001c 00       		.byte	0
 16396 001d 00       		.byte	0
 16397 001e 03       		.uleb128 0x3
 16398 001f 16       		.uleb128 0x16
 16399 0020 00       		.byte	0
 16400 0021 03       		.uleb128 0x3
 16401 0022 0E       		.uleb128 0xe
 16402 0023 3A       		.uleb128 0x3a
 16403 0024 0B       		.uleb128 0xb
 16404 0025 3B       		.uleb128 0x3b
 16405 0026 0B       		.uleb128 0xb
 16406 0027 49       		.uleb128 0x49
 16407 0028 13       		.uleb128 0x13
 16408 0029 00       		.byte	0
 16409 002a 00       		.byte	0
 16410 002b 04       		.uleb128 0x4
 16411 002c 24       		.uleb128 0x24
 16412 002d 00       		.byte	0
 16413 002e 0B       		.uleb128 0xb
 16414 002f 0B       		.uleb128 0xb
 16415 0030 3E       		.uleb128 0x3e
 16416 0031 0B       		.uleb128 0xb
 16417 0032 03       		.uleb128 0x3
 16418 0033 08       		.uleb128 0x8
 16419 0034 00       		.byte	0
 16420 0035 00       		.byte	0
 16421 0036 05       		.uleb128 0x5
 16422 0037 16       		.uleb128 0x16
 16423 0038 00       		.byte	0
 16424 0039 03       		.uleb128 0x3
 16425 003a 0E       		.uleb128 0xe
 16426 003b 3A       		.uleb128 0x3a
 16427 003c 0B       		.uleb128 0xb
 16428 003d 3B       		.uleb128 0x3b
 16429 003e 05       		.uleb128 0x5
 16430 003f 49       		.uleb128 0x49
 16431 0040 13       		.uleb128 0x13
 16432 0041 00       		.byte	0
 16433 0042 00       		.byte	0
 16434 0043 06       		.uleb128 0x6
 16435 0044 35       		.uleb128 0x35
 16436 0045 00       		.byte	0
 16437 0046 49       		.uleb128 0x49
 16438 0047 13       		.uleb128 0x13
 16439 0048 00       		.byte	0
 16440 0049 00       		.byte	0
 16441 004a 07       		.uleb128 0x7
 16442 004b 0F       		.uleb128 0xf
 16443 004c 00       		.byte	0
 16444 004d 0B       		.uleb128 0xb
 16445 004e 0B       		.uleb128 0xb
 16446 004f 49       		.uleb128 0x49
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 364


 16447 0050 13       		.uleb128 0x13
 16448 0051 00       		.byte	0
 16449 0052 00       		.byte	0
 16450 0053 08       		.uleb128 0x8
 16451 0054 26       		.uleb128 0x26
 16452 0055 00       		.byte	0
 16453 0056 49       		.uleb128 0x49
 16454 0057 13       		.uleb128 0x13
 16455 0058 00       		.byte	0
 16456 0059 00       		.byte	0
 16457 005a 09       		.uleb128 0x9
 16458 005b 01       		.uleb128 0x1
 16459 005c 01       		.byte	0x1
 16460 005d 49       		.uleb128 0x49
 16461 005e 13       		.uleb128 0x13
 16462 005f 01       		.uleb128 0x1
 16463 0060 13       		.uleb128 0x13
 16464 0061 00       		.byte	0
 16465 0062 00       		.byte	0
 16466 0063 0A       		.uleb128 0xa
 16467 0064 21       		.uleb128 0x21
 16468 0065 00       		.byte	0
 16469 0066 49       		.uleb128 0x49
 16470 0067 13       		.uleb128 0x13
 16471 0068 2F       		.uleb128 0x2f
 16472 0069 0B       		.uleb128 0xb
 16473 006a 00       		.byte	0
 16474 006b 00       		.byte	0
 16475 006c 0B       		.uleb128 0xb
 16476 006d 04       		.uleb128 0x4
 16477 006e 01       		.byte	0x1
 16478 006f 03       		.uleb128 0x3
 16479 0070 0E       		.uleb128 0xe
 16480 0071 0B       		.uleb128 0xb
 16481 0072 0B       		.uleb128 0xb
 16482 0073 49       		.uleb128 0x49
 16483 0074 13       		.uleb128 0x13
 16484 0075 3A       		.uleb128 0x3a
 16485 0076 0B       		.uleb128 0xb
 16486 0077 3B       		.uleb128 0x3b
 16487 0078 0B       		.uleb128 0xb
 16488 0079 01       		.uleb128 0x1
 16489 007a 13       		.uleb128 0x13
 16490 007b 00       		.byte	0
 16491 007c 00       		.byte	0
 16492 007d 0C       		.uleb128 0xc
 16493 007e 28       		.uleb128 0x28
 16494 007f 00       		.byte	0
 16495 0080 03       		.uleb128 0x3
 16496 0081 0E       		.uleb128 0xe
 16497 0082 1C       		.uleb128 0x1c
 16498 0083 0B       		.uleb128 0xb
 16499 0084 00       		.byte	0
 16500 0085 00       		.byte	0
 16501 0086 0D       		.uleb128 0xd
 16502 0087 13       		.uleb128 0x13
 16503 0088 01       		.byte	0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 365


 16504 0089 03       		.uleb128 0x3
 16505 008a 0E       		.uleb128 0xe
 16506 008b 0B       		.uleb128 0xb
 16507 008c 0B       		.uleb128 0xb
 16508 008d 3A       		.uleb128 0x3a
 16509 008e 0B       		.uleb128 0xb
 16510 008f 3B       		.uleb128 0x3b
 16511 0090 0B       		.uleb128 0xb
 16512 0091 01       		.uleb128 0x1
 16513 0092 13       		.uleb128 0x13
 16514 0093 00       		.byte	0
 16515 0094 00       		.byte	0
 16516 0095 0E       		.uleb128 0xe
 16517 0096 0D       		.uleb128 0xd
 16518 0097 00       		.byte	0
 16519 0098 03       		.uleb128 0x3
 16520 0099 08       		.uleb128 0x8
 16521 009a 3A       		.uleb128 0x3a
 16522 009b 0B       		.uleb128 0xb
 16523 009c 3B       		.uleb128 0x3b
 16524 009d 0B       		.uleb128 0xb
 16525 009e 49       		.uleb128 0x49
 16526 009f 13       		.uleb128 0x13
 16527 00a0 38       		.uleb128 0x38
 16528 00a1 0B       		.uleb128 0xb
 16529 00a2 00       		.byte	0
 16530 00a3 00       		.byte	0
 16531 00a4 0F       		.uleb128 0xf
 16532 00a5 0D       		.uleb128 0xd
 16533 00a6 00       		.byte	0
 16534 00a7 03       		.uleb128 0x3
 16535 00a8 0E       		.uleb128 0xe
 16536 00a9 3A       		.uleb128 0x3a
 16537 00aa 0B       		.uleb128 0xb
 16538 00ab 3B       		.uleb128 0x3b
 16539 00ac 0B       		.uleb128 0xb
 16540 00ad 49       		.uleb128 0x49
 16541 00ae 13       		.uleb128 0x13
 16542 00af 38       		.uleb128 0x38
 16543 00b0 0B       		.uleb128 0xb
 16544 00b1 00       		.byte	0
 16545 00b2 00       		.byte	0
 16546 00b3 10       		.uleb128 0x10
 16547 00b4 13       		.uleb128 0x13
 16548 00b5 01       		.byte	0x1
 16549 00b6 03       		.uleb128 0x3
 16550 00b7 0E       		.uleb128 0xe
 16551 00b8 0B       		.uleb128 0xb
 16552 00b9 05       		.uleb128 0x5
 16553 00ba 3A       		.uleb128 0x3a
 16554 00bb 0B       		.uleb128 0xb
 16555 00bc 3B       		.uleb128 0x3b
 16556 00bd 0B       		.uleb128 0xb
 16557 00be 01       		.uleb128 0x1
 16558 00bf 13       		.uleb128 0x13
 16559 00c0 00       		.byte	0
 16560 00c1 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 366


 16561 00c2 11       		.uleb128 0x11
 16562 00c3 0D       		.uleb128 0xd
 16563 00c4 00       		.byte	0
 16564 00c5 03       		.uleb128 0x3
 16565 00c6 0E       		.uleb128 0xe
 16566 00c7 3A       		.uleb128 0x3a
 16567 00c8 0B       		.uleb128 0xb
 16568 00c9 3B       		.uleb128 0x3b
 16569 00ca 05       		.uleb128 0x5
 16570 00cb 49       		.uleb128 0x49
 16571 00cc 13       		.uleb128 0x13
 16572 00cd 38       		.uleb128 0x38
 16573 00ce 0B       		.uleb128 0xb
 16574 00cf 00       		.byte	0
 16575 00d0 00       		.byte	0
 16576 00d1 12       		.uleb128 0x12
 16577 00d2 0D       		.uleb128 0xd
 16578 00d3 00       		.byte	0
 16579 00d4 03       		.uleb128 0x3
 16580 00d5 0E       		.uleb128 0xe
 16581 00d6 3A       		.uleb128 0x3a
 16582 00d7 0B       		.uleb128 0xb
 16583 00d8 3B       		.uleb128 0x3b
 16584 00d9 05       		.uleb128 0x5
 16585 00da 49       		.uleb128 0x49
 16586 00db 13       		.uleb128 0x13
 16587 00dc 38       		.uleb128 0x38
 16588 00dd 05       		.uleb128 0x5
 16589 00de 00       		.byte	0
 16590 00df 00       		.byte	0
 16591 00e0 13       		.uleb128 0x13
 16592 00e1 13       		.uleb128 0x13
 16593 00e2 01       		.byte	0x1
 16594 00e3 03       		.uleb128 0x3
 16595 00e4 0E       		.uleb128 0xe
 16596 00e5 0B       		.uleb128 0xb
 16597 00e6 0B       		.uleb128 0xb
 16598 00e7 3A       		.uleb128 0x3a
 16599 00e8 0B       		.uleb128 0xb
 16600 00e9 3B       		.uleb128 0x3b
 16601 00ea 05       		.uleb128 0x5
 16602 00eb 01       		.uleb128 0x1
 16603 00ec 13       		.uleb128 0x13
 16604 00ed 00       		.byte	0
 16605 00ee 00       		.byte	0
 16606 00ef 14       		.uleb128 0x14
 16607 00f0 2E       		.uleb128 0x2e
 16608 00f1 01       		.byte	0x1
 16609 00f2 03       		.uleb128 0x3
 16610 00f3 0E       		.uleb128 0xe
 16611 00f4 3A       		.uleb128 0x3a
 16612 00f5 0B       		.uleb128 0xb
 16613 00f6 3B       		.uleb128 0x3b
 16614 00f7 05       		.uleb128 0x5
 16615 00f8 27       		.uleb128 0x27
 16616 00f9 19       		.uleb128 0x19
 16617 00fa 49       		.uleb128 0x49
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 367


 16618 00fb 13       		.uleb128 0x13
 16619 00fc 20       		.uleb128 0x20
 16620 00fd 0B       		.uleb128 0xb
 16621 00fe 01       		.uleb128 0x1
 16622 00ff 13       		.uleb128 0x13
 16623 0100 00       		.byte	0
 16624 0101 00       		.byte	0
 16625 0102 15       		.uleb128 0x15
 16626 0103 05       		.uleb128 0x5
 16627 0104 00       		.byte	0
 16628 0105 03       		.uleb128 0x3
 16629 0106 0E       		.uleb128 0xe
 16630 0107 3A       		.uleb128 0x3a
 16631 0108 0B       		.uleb128 0xb
 16632 0109 3B       		.uleb128 0x3b
 16633 010a 05       		.uleb128 0x5
 16634 010b 49       		.uleb128 0x49
 16635 010c 13       		.uleb128 0x13
 16636 010d 00       		.byte	0
 16637 010e 00       		.byte	0
 16638 010f 16       		.uleb128 0x16
 16639 0110 34       		.uleb128 0x34
 16640 0111 00       		.byte	0
 16641 0112 03       		.uleb128 0x3
 16642 0113 0E       		.uleb128 0xe
 16643 0114 3A       		.uleb128 0x3a
 16644 0115 0B       		.uleb128 0xb
 16645 0116 3B       		.uleb128 0x3b
 16646 0117 05       		.uleb128 0x5
 16647 0118 49       		.uleb128 0x49
 16648 0119 13       		.uleb128 0x13
 16649 011a 00       		.byte	0
 16650 011b 00       		.byte	0
 16651 011c 17       		.uleb128 0x17
 16652 011d 2E       		.uleb128 0x2e
 16653 011e 01       		.byte	0x1
 16654 011f 3F       		.uleb128 0x3f
 16655 0120 19       		.uleb128 0x19
 16656 0121 03       		.uleb128 0x3
 16657 0122 0E       		.uleb128 0xe
 16658 0123 3A       		.uleb128 0x3a
 16659 0124 0B       		.uleb128 0xb
 16660 0125 3B       		.uleb128 0x3b
 16661 0126 0B       		.uleb128 0xb
 16662 0127 27       		.uleb128 0x27
 16663 0128 19       		.uleb128 0x19
 16664 0129 11       		.uleb128 0x11
 16665 012a 01       		.uleb128 0x1
 16666 012b 12       		.uleb128 0x12
 16667 012c 06       		.uleb128 0x6
 16668 012d 40       		.uleb128 0x40
 16669 012e 18       		.uleb128 0x18
 16670 012f 9642     		.uleb128 0x2116
 16671 0131 19       		.uleb128 0x19
 16672 0132 01       		.uleb128 0x1
 16673 0133 13       		.uleb128 0x13
 16674 0134 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 368


 16675 0135 00       		.byte	0
 16676 0136 18       		.uleb128 0x18
 16677 0137 34       		.uleb128 0x34
 16678 0138 00       		.byte	0
 16679 0139 03       		.uleb128 0x3
 16680 013a 0E       		.uleb128 0xe
 16681 013b 3A       		.uleb128 0x3a
 16682 013c 0B       		.uleb128 0xb
 16683 013d 3B       		.uleb128 0x3b
 16684 013e 0B       		.uleb128 0xb
 16685 013f 49       		.uleb128 0x49
 16686 0140 13       		.uleb128 0x13
 16687 0141 02       		.uleb128 0x2
 16688 0142 18       		.uleb128 0x18
 16689 0143 00       		.byte	0
 16690 0144 00       		.byte	0
 16691 0145 19       		.uleb128 0x19
 16692 0146 1D       		.uleb128 0x1d
 16693 0147 01       		.byte	0x1
 16694 0148 31       		.uleb128 0x31
 16695 0149 13       		.uleb128 0x13
 16696 014a 11       		.uleb128 0x11
 16697 014b 01       		.uleb128 0x1
 16698 014c 12       		.uleb128 0x12
 16699 014d 06       		.uleb128 0x6
 16700 014e 58       		.uleb128 0x58
 16701 014f 0B       		.uleb128 0xb
 16702 0150 59       		.uleb128 0x59
 16703 0151 0B       		.uleb128 0xb
 16704 0152 01       		.uleb128 0x1
 16705 0153 13       		.uleb128 0x13
 16706 0154 00       		.byte	0
 16707 0155 00       		.byte	0
 16708 0156 1A       		.uleb128 0x1a
 16709 0157 05       		.uleb128 0x5
 16710 0158 00       		.byte	0
 16711 0159 31       		.uleb128 0x31
 16712 015a 13       		.uleb128 0x13
 16713 015b 02       		.uleb128 0x2
 16714 015c 18       		.uleb128 0x18
 16715 015d 00       		.byte	0
 16716 015e 00       		.byte	0
 16717 015f 1B       		.uleb128 0x1b
 16718 0160 0B       		.uleb128 0xb
 16719 0161 01       		.byte	0x1
 16720 0162 11       		.uleb128 0x11
 16721 0163 01       		.uleb128 0x1
 16722 0164 12       		.uleb128 0x12
 16723 0165 06       		.uleb128 0x6
 16724 0166 00       		.byte	0
 16725 0167 00       		.byte	0
 16726 0168 1C       		.uleb128 0x1c
 16727 0169 34       		.uleb128 0x34
 16728 016a 00       		.byte	0
 16729 016b 31       		.uleb128 0x31
 16730 016c 13       		.uleb128 0x13
 16731 016d 02       		.uleb128 0x2
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 369


 16732 016e 18       		.uleb128 0x18
 16733 016f 00       		.byte	0
 16734 0170 00       		.byte	0
 16735 0171 1D       		.uleb128 0x1d
 16736 0172 1D       		.uleb128 0x1d
 16737 0173 01       		.byte	0x1
 16738 0174 31       		.uleb128 0x31
 16739 0175 13       		.uleb128 0x13
 16740 0176 11       		.uleb128 0x11
 16741 0177 01       		.uleb128 0x1
 16742 0178 12       		.uleb128 0x12
 16743 0179 06       		.uleb128 0x6
 16744 017a 58       		.uleb128 0x58
 16745 017b 0B       		.uleb128 0xb
 16746 017c 59       		.uleb128 0x59
 16747 017d 0B       		.uleb128 0xb
 16748 017e 00       		.byte	0
 16749 017f 00       		.byte	0
 16750 0180 1E       		.uleb128 0x1e
 16751 0181 2E       		.uleb128 0x2e
 16752 0182 01       		.byte	0x1
 16753 0183 3F       		.uleb128 0x3f
 16754 0184 19       		.uleb128 0x19
 16755 0185 03       		.uleb128 0x3
 16756 0186 0E       		.uleb128 0xe
 16757 0187 3A       		.uleb128 0x3a
 16758 0188 0B       		.uleb128 0xb
 16759 0189 3B       		.uleb128 0x3b
 16760 018a 05       		.uleb128 0x5
 16761 018b 27       		.uleb128 0x27
 16762 018c 19       		.uleb128 0x19
 16763 018d 11       		.uleb128 0x11
 16764 018e 01       		.uleb128 0x1
 16765 018f 12       		.uleb128 0x12
 16766 0190 06       		.uleb128 0x6
 16767 0191 40       		.uleb128 0x40
 16768 0192 18       		.uleb128 0x18
 16769 0193 9642     		.uleb128 0x2116
 16770 0195 19       		.uleb128 0x19
 16771 0196 01       		.uleb128 0x1
 16772 0197 13       		.uleb128 0x13
 16773 0198 00       		.byte	0
 16774 0199 00       		.byte	0
 16775 019a 1F       		.uleb128 0x1f
 16776 019b 34       		.uleb128 0x34
 16777 019c 00       		.byte	0
 16778 019d 03       		.uleb128 0x3
 16779 019e 0E       		.uleb128 0xe
 16780 019f 3A       		.uleb128 0x3a
 16781 01a0 0B       		.uleb128 0xb
 16782 01a1 3B       		.uleb128 0x3b
 16783 01a2 05       		.uleb128 0x5
 16784 01a3 49       		.uleb128 0x49
 16785 01a4 13       		.uleb128 0x13
 16786 01a5 02       		.uleb128 0x2
 16787 01a6 18       		.uleb128 0x18
 16788 01a7 00       		.byte	0
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 370


 16789 01a8 00       		.byte	0
 16790 01a9 20       		.uleb128 0x20
 16791 01aa 21       		.uleb128 0x21
 16792 01ab 00       		.byte	0
 16793 01ac 49       		.uleb128 0x49
 16794 01ad 13       		.uleb128 0x13
 16795 01ae 2F       		.uleb128 0x2f
 16796 01af 05       		.uleb128 0x5
 16797 01b0 00       		.byte	0
 16798 01b1 00       		.byte	0
 16799 01b2 21       		.uleb128 0x21
 16800 01b3 05       		.uleb128 0x5
 16801 01b4 00       		.byte	0
 16802 01b5 03       		.uleb128 0x3
 16803 01b6 0E       		.uleb128 0xe
 16804 01b7 3A       		.uleb128 0x3a
 16805 01b8 0B       		.uleb128 0xb
 16806 01b9 3B       		.uleb128 0x3b
 16807 01ba 05       		.uleb128 0x5
 16808 01bb 49       		.uleb128 0x49
 16809 01bc 13       		.uleb128 0x13
 16810 01bd 02       		.uleb128 0x2
 16811 01be 18       		.uleb128 0x18
 16812 01bf 00       		.byte	0
 16813 01c0 00       		.byte	0
 16814 01c1 22       		.uleb128 0x22
 16815 01c2 2E       		.uleb128 0x2e
 16816 01c3 01       		.byte	0x1
 16817 01c4 3F       		.uleb128 0x3f
 16818 01c5 19       		.uleb128 0x19
 16819 01c6 03       		.uleb128 0x3
 16820 01c7 0E       		.uleb128 0xe
 16821 01c8 3A       		.uleb128 0x3a
 16822 01c9 0B       		.uleb128 0xb
 16823 01ca 3B       		.uleb128 0x3b
 16824 01cb 05       		.uleb128 0x5
 16825 01cc 11       		.uleb128 0x11
 16826 01cd 01       		.uleb128 0x1
 16827 01ce 12       		.uleb128 0x12
 16828 01cf 06       		.uleb128 0x6
 16829 01d0 40       		.uleb128 0x40
 16830 01d1 18       		.uleb128 0x18
 16831 01d2 9642     		.uleb128 0x2116
 16832 01d4 19       		.uleb128 0x19
 16833 01d5 01       		.uleb128 0x1
 16834 01d6 13       		.uleb128 0x13
 16835 01d7 00       		.byte	0
 16836 01d8 00       		.byte	0
 16837 01d9 23       		.uleb128 0x23
 16838 01da 34       		.uleb128 0x34
 16839 01db 00       		.byte	0
 16840 01dc 03       		.uleb128 0x3
 16841 01dd 08       		.uleb128 0x8
 16842 01de 3A       		.uleb128 0x3a
 16843 01df 0B       		.uleb128 0xb
 16844 01e0 3B       		.uleb128 0x3b
 16845 01e1 05       		.uleb128 0x5
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 371


 16846 01e2 49       		.uleb128 0x49
 16847 01e3 13       		.uleb128 0x13
 16848 01e4 02       		.uleb128 0x2
 16849 01e5 18       		.uleb128 0x18
 16850 01e6 00       		.byte	0
 16851 01e7 00       		.byte	0
 16852 01e8 24       		.uleb128 0x24
 16853 01e9 2E       		.uleb128 0x2e
 16854 01ea 01       		.byte	0x1
 16855 01eb 3F       		.uleb128 0x3f
 16856 01ec 19       		.uleb128 0x19
 16857 01ed 03       		.uleb128 0x3
 16858 01ee 0E       		.uleb128 0xe
 16859 01ef 3A       		.uleb128 0x3a
 16860 01f0 0B       		.uleb128 0xb
 16861 01f1 3B       		.uleb128 0x3b
 16862 01f2 05       		.uleb128 0x5
 16863 01f3 27       		.uleb128 0x27
 16864 01f4 19       		.uleb128 0x19
 16865 01f5 49       		.uleb128 0x49
 16866 01f6 13       		.uleb128 0x13
 16867 01f7 11       		.uleb128 0x11
 16868 01f8 01       		.uleb128 0x1
 16869 01f9 12       		.uleb128 0x12
 16870 01fa 06       		.uleb128 0x6
 16871 01fb 40       		.uleb128 0x40
 16872 01fc 18       		.uleb128 0x18
 16873 01fd 9742     		.uleb128 0x2117
 16874 01ff 19       		.uleb128 0x19
 16875 0200 01       		.uleb128 0x1
 16876 0201 13       		.uleb128 0x13
 16877 0202 00       		.byte	0
 16878 0203 00       		.byte	0
 16879 0204 25       		.uleb128 0x25
 16880 0205 2E       		.uleb128 0x2e
 16881 0206 01       		.byte	0x1
 16882 0207 3F       		.uleb128 0x3f
 16883 0208 19       		.uleb128 0x19
 16884 0209 03       		.uleb128 0x3
 16885 020a 0E       		.uleb128 0xe
 16886 020b 3A       		.uleb128 0x3a
 16887 020c 0B       		.uleb128 0xb
 16888 020d 3B       		.uleb128 0x3b
 16889 020e 05       		.uleb128 0x5
 16890 020f 27       		.uleb128 0x27
 16891 0210 19       		.uleb128 0x19
 16892 0211 49       		.uleb128 0x49
 16893 0212 13       		.uleb128 0x13
 16894 0213 11       		.uleb128 0x11
 16895 0214 01       		.uleb128 0x1
 16896 0215 12       		.uleb128 0x12
 16897 0216 06       		.uleb128 0x6
 16898 0217 40       		.uleb128 0x40
 16899 0218 18       		.uleb128 0x18
 16900 0219 9642     		.uleb128 0x2116
 16901 021b 19       		.uleb128 0x19
 16902 021c 01       		.uleb128 0x1
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 372


 16903 021d 13       		.uleb128 0x13
 16904 021e 00       		.byte	0
 16905 021f 00       		.byte	0
 16906 0220 26       		.uleb128 0x26
 16907 0221 2E       		.uleb128 0x2e
 16908 0222 01       		.byte	0x1
 16909 0223 3F       		.uleb128 0x3f
 16910 0224 19       		.uleb128 0x19
 16911 0225 03       		.uleb128 0x3
 16912 0226 0E       		.uleb128 0xe
 16913 0227 3A       		.uleb128 0x3a
 16914 0228 0B       		.uleb128 0xb
 16915 0229 3B       		.uleb128 0x3b
 16916 022a 05       		.uleb128 0x5
 16917 022b 11       		.uleb128 0x11
 16918 022c 01       		.uleb128 0x1
 16919 022d 12       		.uleb128 0x12
 16920 022e 06       		.uleb128 0x6
 16921 022f 40       		.uleb128 0x40
 16922 0230 18       		.uleb128 0x18
 16923 0231 9742     		.uleb128 0x2117
 16924 0233 19       		.uleb128 0x19
 16925 0234 01       		.uleb128 0x1
 16926 0235 13       		.uleb128 0x13
 16927 0236 00       		.byte	0
 16928 0237 00       		.byte	0
 16929 0238 27       		.uleb128 0x27
 16930 0239 2E       		.uleb128 0x2e
 16931 023a 00       		.byte	0
 16932 023b 3F       		.uleb128 0x3f
 16933 023c 19       		.uleb128 0x19
 16934 023d 03       		.uleb128 0x3
 16935 023e 0E       		.uleb128 0xe
 16936 023f 3A       		.uleb128 0x3a
 16937 0240 0B       		.uleb128 0xb
 16938 0241 3B       		.uleb128 0x3b
 16939 0242 05       		.uleb128 0x5
 16940 0243 11       		.uleb128 0x11
 16941 0244 01       		.uleb128 0x1
 16942 0245 12       		.uleb128 0x12
 16943 0246 06       		.uleb128 0x6
 16944 0247 40       		.uleb128 0x40
 16945 0248 18       		.uleb128 0x18
 16946 0249 9642     		.uleb128 0x2116
 16947 024b 19       		.uleb128 0x19
 16948 024c 00       		.byte	0
 16949 024d 00       		.byte	0
 16950 024e 28       		.uleb128 0x28
 16951 024f 34       		.uleb128 0x34
 16952 0250 00       		.byte	0
 16953 0251 03       		.uleb128 0x3
 16954 0252 0E       		.uleb128 0xe
 16955 0253 3A       		.uleb128 0x3a
 16956 0254 0B       		.uleb128 0xb
 16957 0255 3B       		.uleb128 0x3b
 16958 0256 05       		.uleb128 0x5
 16959 0257 49       		.uleb128 0x49
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 373


 16960 0258 13       		.uleb128 0x13
 16961 0259 3F       		.uleb128 0x3f
 16962 025a 19       		.uleb128 0x19
 16963 025b 3C       		.uleb128 0x3c
 16964 025c 19       		.uleb128 0x19
 16965 025d 00       		.byte	0
 16966 025e 00       		.byte	0
 16967 025f 29       		.uleb128 0x29
 16968 0260 34       		.uleb128 0x34
 16969 0261 00       		.byte	0
 16970 0262 03       		.uleb128 0x3
 16971 0263 0E       		.uleb128 0xe
 16972 0264 3A       		.uleb128 0x3a
 16973 0265 0B       		.uleb128 0xb
 16974 0266 3B       		.uleb128 0x3b
 16975 0267 0B       		.uleb128 0xb
 16976 0268 49       		.uleb128 0x49
 16977 0269 13       		.uleb128 0x13
 16978 026a 3F       		.uleb128 0x3f
 16979 026b 19       		.uleb128 0x19
 16980 026c 02       		.uleb128 0x2
 16981 026d 18       		.uleb128 0x18
 16982 026e 00       		.byte	0
 16983 026f 00       		.byte	0
 16984 0270 00       		.byte	0
 16985              		.section	.debug_aranges,"",%progbits
 16986 0000 24010000 		.4byte	0x124
 16987 0004 0200     		.2byte	0x2
 16988 0006 00000000 		.4byte	.Ldebug_info0
 16989 000a 04       		.byte	0x4
 16990 000b 00       		.byte	0
 16991 000c 0000     		.2byte	0
 16992 000e 0000     		.2byte	0
 16993 0010 00000000 		.4byte	.LFB64
 16994 0014 90040000 		.4byte	.LFE64-.LFB64
 16995 0018 00000000 		.4byte	.LFB65
 16996 001c 22000000 		.4byte	.LFE65-.LFB65
 16997 0020 00000000 		.4byte	.LFB66
 16998 0024 70000000 		.4byte	.LFE66-.LFB66
 16999 0028 00000000 		.4byte	.LFB67
 17000 002c F8160000 		.4byte	.LFE67-.LFB67
 17001 0030 00000000 		.4byte	.LFB68
 17002 0034 F80A0000 		.4byte	.LFE68-.LFB68
 17003 0038 00000000 		.4byte	.LFB69
 17004 003c EC0D0000 		.4byte	.LFE69-.LFB69
 17005 0040 00000000 		.4byte	.LFB70
 17006 0044 5C000000 		.4byte	.LFE70-.LFB70
 17007 0048 00000000 		.4byte	.LFB71
 17008 004c 7C150000 		.4byte	.LFE71-.LFB71
 17009 0050 00000000 		.4byte	.LFB72
 17010 0054 60030000 		.4byte	.LFE72-.LFB72
 17011 0058 00000000 		.4byte	.LFB73
 17012 005c 74030000 		.4byte	.LFE73-.LFB73
 17013 0060 00000000 		.4byte	.LFB74
 17014 0064 84000000 		.4byte	.LFE74-.LFB74
 17015 0068 00000000 		.4byte	.LFB75
 17016 006c 88000000 		.4byte	.LFE75-.LFB75
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 374


 17017 0070 00000000 		.4byte	.LFB76
 17018 0074 80000000 		.4byte	.LFE76-.LFB76
 17019 0078 00000000 		.4byte	.LFB77
 17020 007c 3E000000 		.4byte	.LFE77-.LFB77
 17021 0080 00000000 		.4byte	.LFB78
 17022 0084 2E000000 		.4byte	.LFE78-.LFB78
 17023 0088 00000000 		.4byte	.LFB79
 17024 008c 98000000 		.4byte	.LFE79-.LFB79
 17025 0090 00000000 		.4byte	.LFB80
 17026 0094 64000000 		.4byte	.LFE80-.LFB80
 17027 0098 00000000 		.4byte	.LFB81
 17028 009c 5C000000 		.4byte	.LFE81-.LFB81
 17029 00a0 00000000 		.4byte	.LFB82
 17030 00a4 0C030000 		.4byte	.LFE82-.LFB82
 17031 00a8 00000000 		.4byte	.LFB83
 17032 00ac 8C000000 		.4byte	.LFE83-.LFB83
 17033 00b0 00000000 		.4byte	.LFB84
 17034 00b4 8C000000 		.4byte	.LFE84-.LFB84
 17035 00b8 00000000 		.4byte	.LFB85
 17036 00bc 90000000 		.4byte	.LFE85-.LFB85
 17037 00c0 00000000 		.4byte	.LFB86
 17038 00c4 C4000000 		.4byte	.LFE86-.LFB86
 17039 00c8 00000000 		.4byte	.LFB87
 17040 00cc 48000000 		.4byte	.LFE87-.LFB87
 17041 00d0 00000000 		.4byte	.LFB88
 17042 00d4 34000000 		.4byte	.LFE88-.LFB88
 17043 00d8 00000000 		.4byte	.LFB89
 17044 00dc C0000000 		.4byte	.LFE89-.LFB89
 17045 00e0 00000000 		.4byte	.LFB90
 17046 00e4 60000000 		.4byte	.LFE90-.LFB90
 17047 00e8 00000000 		.4byte	.LFB91
 17048 00ec 44000000 		.4byte	.LFE91-.LFB91
 17049 00f0 00000000 		.4byte	.LFB92
 17050 00f4 34000000 		.4byte	.LFE92-.LFB92
 17051 00f8 00000000 		.4byte	.LFB93
 17052 00fc 20000000 		.4byte	.LFE93-.LFB93
 17053 0100 00000000 		.4byte	.LFB94
 17054 0104 54000000 		.4byte	.LFE94-.LFB94
 17055 0108 00000000 		.4byte	.LFB95
 17056 010c 30010000 		.4byte	.LFE95-.LFB95
 17057 0110 00000000 		.4byte	.LFB96
 17058 0114 60000000 		.4byte	.LFE96-.LFB96
 17059 0118 00000000 		.4byte	.LFB97
 17060 011c 90050000 		.4byte	.LFE97-.LFB97
 17061 0120 00000000 		.4byte	0
 17062 0124 00000000 		.4byte	0
 17063              		.section	.debug_ranges,"",%progbits
 17064              	.Ldebug_ranges0:
 17065 0000 00000000 		.4byte	.LFB64
 17066 0004 90040000 		.4byte	.LFE64
 17067 0008 00000000 		.4byte	.LFB65
 17068 000c 22000000 		.4byte	.LFE65
 17069 0010 00000000 		.4byte	.LFB66
 17070 0014 70000000 		.4byte	.LFE66
 17071 0018 00000000 		.4byte	.LFB67
 17072 001c F8160000 		.4byte	.LFE67
 17073 0020 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 375


 17074 0024 F80A0000 		.4byte	.LFE68
 17075 0028 00000000 		.4byte	.LFB69
 17076 002c EC0D0000 		.4byte	.LFE69
 17077 0030 00000000 		.4byte	.LFB70
 17078 0034 5C000000 		.4byte	.LFE70
 17079 0038 00000000 		.4byte	.LFB71
 17080 003c 7C150000 		.4byte	.LFE71
 17081 0040 00000000 		.4byte	.LFB72
 17082 0044 60030000 		.4byte	.LFE72
 17083 0048 00000000 		.4byte	.LFB73
 17084 004c 74030000 		.4byte	.LFE73
 17085 0050 00000000 		.4byte	.LFB74
 17086 0054 84000000 		.4byte	.LFE74
 17087 0058 00000000 		.4byte	.LFB75
 17088 005c 88000000 		.4byte	.LFE75
 17089 0060 00000000 		.4byte	.LFB76
 17090 0064 80000000 		.4byte	.LFE76
 17091 0068 00000000 		.4byte	.LFB77
 17092 006c 3E000000 		.4byte	.LFE77
 17093 0070 00000000 		.4byte	.LFB78
 17094 0074 2E000000 		.4byte	.LFE78
 17095 0078 00000000 		.4byte	.LFB79
 17096 007c 98000000 		.4byte	.LFE79
 17097 0080 00000000 		.4byte	.LFB80
 17098 0084 64000000 		.4byte	.LFE80
 17099 0088 00000000 		.4byte	.LFB81
 17100 008c 5C000000 		.4byte	.LFE81
 17101 0090 00000000 		.4byte	.LFB82
 17102 0094 0C030000 		.4byte	.LFE82
 17103 0098 00000000 		.4byte	.LFB83
 17104 009c 8C000000 		.4byte	.LFE83
 17105 00a0 00000000 		.4byte	.LFB84
 17106 00a4 8C000000 		.4byte	.LFE84
 17107 00a8 00000000 		.4byte	.LFB85
 17108 00ac 90000000 		.4byte	.LFE85
 17109 00b0 00000000 		.4byte	.LFB86
 17110 00b4 C4000000 		.4byte	.LFE86
 17111 00b8 00000000 		.4byte	.LFB87
 17112 00bc 48000000 		.4byte	.LFE87
 17113 00c0 00000000 		.4byte	.LFB88
 17114 00c4 34000000 		.4byte	.LFE88
 17115 00c8 00000000 		.4byte	.LFB89
 17116 00cc C0000000 		.4byte	.LFE89
 17117 00d0 00000000 		.4byte	.LFB90
 17118 00d4 60000000 		.4byte	.LFE90
 17119 00d8 00000000 		.4byte	.LFB91
 17120 00dc 44000000 		.4byte	.LFE91
 17121 00e0 00000000 		.4byte	.LFB92
 17122 00e4 34000000 		.4byte	.LFE92
 17123 00e8 00000000 		.4byte	.LFB93
 17124 00ec 20000000 		.4byte	.LFE93
 17125 00f0 00000000 		.4byte	.LFB94
 17126 00f4 54000000 		.4byte	.LFE94
 17127 00f8 00000000 		.4byte	.LFB95
 17128 00fc 30010000 		.4byte	.LFE95
 17129 0100 00000000 		.4byte	.LFB96
 17130 0104 60000000 		.4byte	.LFE96
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 376


 17131 0108 00000000 		.4byte	.LFB97
 17132 010c 90050000 		.4byte	.LFE97
 17133 0110 00000000 		.4byte	0
 17134 0114 00000000 		.4byte	0
 17135              		.section	.debug_line,"",%progbits
 17136              	.Ldebug_line0:
 17137 0000 DE100000 		.section	.debug_str,"MS",%progbits,1
 17137      02008B01 
 17137      00000201 
 17137      FB0E0D00 
 17137      01010101 
 17138              	.LASF155:
 17139 0000 696E666F 		.ascii	"infoSend\000"
 17139      53656E64 
 17139      00
 17140              	.LASF25:
 17141 0009 73697A65 		.ascii	"sizetype\000"
 17141      74797065 
 17141      00
 17142              	.LASF33:
 17143 0012 434D445F 		.ascii	"CMD_INIT_MEM\000"
 17143      494E4954 
 17143      5F4D454D 
 17143      00
 17144              	.LASF249:
 17145 001f 676C5F63 		.ascii	"gl_c\000"
 17145      00
 17146              	.LASF57:
 17147 0024 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS_ADV\000"
 17147      545F4D4F 
 17147      44455F45 
 17147      4D475F46 
 17147      4346535F 
 17148              	.LASF36:
 17149 003c 434D445F 		.ascii	"CMD_ACTIVATE\000"
 17149      41435449 
 17149      56415445 
 17149      00
 17150              	.LASF11:
 17151 0049 696E7433 		.ascii	"int32_t\000"
 17151      325F7400 
 17152              	.LASF257:
 17153 0051 675F7278 		.ascii	"g_rx\000"
 17153      00
 17154              	.LASF84:
 17155 0056 73745F64 		.ascii	"st_data\000"
 17155      61746100 
 17156              	.LASF225:
 17157 005e 77726974 		.ascii	"writeStatus\000"
 17157      65537461 
 17157      74757300 
 17158              	.LASF15:
 17159 006a 75696E74 		.ascii	"uint32\000"
 17159      333200
 17160              	.LASF240:
 17161 0071 636D645F 		.ascii	"cmd_set_baudrate\000"
 17161      7365745F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 377


 17161      62617564 
 17161      72617465 
 17161      00
 17162              	.LASF204:
 17163 0082 7370695F 		.ascii	"spi_read_delay_str_len\000"
 17163      72656164 
 17163      5F64656C 
 17163      61795F73 
 17163      74725F6C 
 17164              	.LASF179:
 17165 0099 6F6E5F6F 		.ascii	"on_off_menu\000"
 17165      66665F6D 
 17165      656E7500 
 17166              	.LASF160:
 17167 00a5 7061636B 		.ascii	"packet_lenght\000"
 17167      65745F6C 
 17167      656E6768 
 17167      7400
 17168              	.LASF208:
 17169 00b3 70726570 		.ascii	"prepare_generic_info\000"
 17169      6172655F 
 17169      67656E65 
 17169      7269635F 
 17169      696E666F 
 17170              	.LASF105:
 17171 00c8 706F735F 		.ascii	"pos_lim_inf\000"
 17171      6C696D5F 
 17171      696E6600 
 17172              	.LASF242:
 17173 00d4 636D645F 		.ascii	"cmd_get_inputs\000"
 17173      6765745F 
 17173      696E7075 
 17173      747300
 17174              	.LASF56:
 17175 00e3 494E5055 		.ascii	"INPUT_MODE_EMG_FCFS\000"
 17175      545F4D4F 
 17175      44455F45 
 17175      4D475F46 
 17175      43465300 
 17176              	.LASF117:
 17177 00f7 63757272 		.ascii	"curr_lookup\000"
 17177      5F6C6F6F 
 17177      6B757000 
 17178              	.LASF134:
 17179 0103 72657374 		.ascii	"rest_counter\000"
 17179      5F636F75 
 17179      6E746572 
 17179      00
 17180              	.LASF247:
 17181 0110 636D645F 		.ascii	"cmd_get_imu_readings\000"
 17181      6765745F 
 17181      696D755F 
 17181      72656164 
 17181      696E6773 
 17182              	.LASF199:
 17183 0125 69645F73 		.ascii	"id_str_len\000"
 17183      74725F6C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 378


 17183      656E00
 17184              	.LASF55:
 17185 0130 494E5055 		.ascii	"INPUT_MODE_EMG_INTEGRAL\000"
 17185      545F4D4F 
 17185      44455F45 
 17185      4D475F49 
 17185      4E544547 
 17186              	.LASF165:
 17187 0148 6D5F746D 		.ascii	"m_tmp\000"
 17187      7000
 17188              	.LASF16:
 17189 014e 696E7438 		.ascii	"int8\000"
 17189      00
 17190              	.LASF206:
 17191 0153 6765745F 		.ascii	"get_param_list\000"
 17191      70617261 
 17191      6D5F6C69 
 17191      737400
 17192              	.LASF246:
 17193 0162 636D645F 		.ascii	"cmd_get_emg\000"
 17193      6765745F 
 17193      656D6700 
 17194              	.LASF132:
 17195 016e 706F7369 		.ascii	"position_hist\000"
 17195      74696F6E 
 17195      5F686973 
 17195      7400
 17196              	.LASF148:
 17197 017c 74656D70 		.ascii	"temp_value\000"
 17197      5F76616C 
 17197      756500
 17198              	.LASF280:
 17199 0187 72657375 		.ascii	"result\000"
 17199      6C7400
 17200              	.LASF87:
 17201 018e 72656164 		.ascii	"ready\000"
 17201      7900
 17202              	.LASF54:
 17203 0194 494E5055 		.ascii	"INPUT_MODE_EMG_PROPORTIONAL\000"
 17203      545F4D4F 
 17203      44455F45 
 17203      4D475F50 
 17203      524F504F 
 17204              	.LASF128:
 17205 01b0 72656164 		.ascii	"read_imu_flag\000"
 17205      5F696D75 
 17205      5F666C61 
 17205      6700
 17206              	.LASF261:
 17207 01be 74696D65 		.ascii	"timer_value\000"
 17207      725F7661 
 17207      6C756500 
 17208              	.LASF4:
 17209 01ca 6C6F6E67 		.ascii	"long int\000"
 17209      20696E74 
 17209      00
 17210              	.LASF139:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 379


 17211 01d3 756E7573 		.ascii	"unused_bytes1\000"
 17211      65645F62 
 17211      79746573 
 17211      3100
 17212              	.LASF207:
 17213 01e1 7365745A 		.ascii	"setZeros\000"
 17213      65726F73 
 17213      00
 17214              	.LASF130:
 17215 01ea 756E7573 		.ascii	"unused_bytes\000"
 17215      65645F62 
 17215      79746573 
 17215      00
 17216              	.LASF144:
 17217 01f7 61636365 		.ascii	"accel_value\000"
 17217      6C5F7661 
 17217      6C756500 
 17218              	.LASF172:
 17219 0203 4E554D5F 		.ascii	"NUM_ITEMS\000"
 17219      4954454D 
 17219      5300
 17220              	.LASF19:
 17221 020d 666C6F61 		.ascii	"float32\000"
 17221      74333200 
 17222              	.LASF41:
 17223 0215 434D445F 		.ascii	"CMD_GET_CURRENTS\000"
 17223      4745545F 
 17223      43555252 
 17223      454E5453 
 17223      00
 17224              	.LASF131:
 17225 0226 656D675F 		.ascii	"emg_counter\000"
 17225      636F756E 
 17225      74657200 
 17226              	.LASF186:
 17227 0232 6175785F 		.ascii	"aux_float2\000"
 17227      666C6F61 
 17227      743200
 17228              	.LASF241:
 17229 023d 636D645F 		.ascii	"cmd_ping\000"
 17229      70696E67 
 17229      00
 17230              	.LASF205:
 17231 0246 7370695F 		.ascii	"spi_delay_menu_len\000"
 17231      64656C61 
 17231      795F6D65 
 17231      6E755F6C 
 17231      656E00
 17232              	.LASF278:
 17233 0259 433A5C55 		.ascii	"C:\\Users\\MattiaCP\\Documents\\GITHUB\\SoftHand-PR"
 17233      73657273 
 17233      5C4D6174 
 17233      74696143 
 17233      505C446F 
 17234 0287 4F2D5053 		.ascii	"O-PSoC5\\firmware.cydsn\000"
 17234      6F43355C 
 17234      6669726D 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 380


 17234      77617265 
 17234      2E637964 
 17235              	.LASF0:
 17236 029e 7369676E 		.ascii	"signed char\000"
 17236      65642063 
 17236      68617200 
 17237              	.LASF149:
 17238 02aa 73745F63 		.ascii	"st_calib\000"
 17238      616C6962 
 17238      00
 17239              	.LASF223:
 17240 02b3 6D656D53 		.ascii	"memStore\000"
 17240      746F7265 
 17240      00
 17241              	.LASF272:
 17242 02bc 73696E67 		.ascii	"single_imu_size\000"
 17242      6C655F69 
 17242      6D755F73 
 17242      697A6500 
 17243              	.LASF63:
 17244 02cc 6D6F746F 		.ascii	"motor_supply_type\000"
 17244      725F7375 
 17244      70706C79 
 17244      5F747970 
 17244      6500
 17245              	.LASF211:
 17246 02de 73746570 		.ascii	"step\000"
 17246      00
 17247              	.LASF1:
 17248 02e3 756E7369 		.ascii	"unsigned char\000"
 17248      676E6564 
 17248      20636861 
 17248      7200
 17249              	.LASF253:
 17250 02f1 675F7265 		.ascii	"g_refNew\000"
 17250      664E6577 
 17250      00
 17251              	.LASF176:
 17252 02fa 636F6E74 		.ascii	"control_mode_menu\000"
 17252      726F6C5F 
 17252      6D6F6465 
 17252      5F6D656E 
 17252      7500
 17253              	.LASF127:
 17254 030c 72696768 		.ascii	"right_left\000"
 17254      745F6C65 
 17254      667400
 17255              	.LASF29:
 17256 0317 434D445F 		.ascii	"CMD_STORE_DEFAULT_PARAMS\000"
 17256      53544F52 
 17256      455F4445 
 17256      4641554C 
 17256      545F5041 
 17257              	.LASF200:
 17258 0330 6E5F696D 		.ascii	"n_imu_str_len\000"
 17258      755F7374 
 17258      725F6C65 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 381


 17258      6E00
 17259              	.LASF203:
 17260 033e 696D755F 		.ascii	"imu_table_str_len\000"
 17260      7461626C 
 17260      655F7374 
 17260      725F6C65 
 17260      6E00
 17261              	.LASF221:
 17262 0350 76616C75 		.ascii	"value\000"
 17262      6500
 17263              	.LASF143:
 17264 0356 666C6167 		.ascii	"flags\000"
 17264      7300
 17265              	.LASF198:
 17266 035c 7370695F 		.ascii	"spi_read_delay_str\000"
 17266      72656164 
 17266      5F64656C 
 17266      61795F73 
 17266      747200
 17267              	.LASF178:
 17268 036f 72696768 		.ascii	"right_left_menu\000"
 17268      745F6C65 
 17268      66745F6D 
 17268      656E7500 
 17269              	.LASF37:
 17270 037f 434D445F 		.ascii	"CMD_GET_ACTIVATE\000"
 17270      4745545F 
 17270      41435449 
 17270      56415445 
 17270      00
 17271              	.LASF22:
 17272 0390 63686172 		.ascii	"char\000"
 17272      00
 17273              	.LASF108:
 17274 0395 6D61785F 		.ascii	"max_step_pos\000"
 17274      73746570 
 17274      5F706F73 
 17274      00
 17275              	.LASF227:
 17276 03a2 7265745F 		.ascii	"ret_val\000"
 17276      76616C00 
 17277              	.LASF192:
 17278 03aa 73746172 		.ascii	"start_byte\000"
 17278      745F6279 
 17278      746500
 17279              	.LASF189:
 17280 03b5 6E756D5F 		.ascii	"num_mag_cal_params\000"
 17280      6D61675F 
 17280      63616C5F 
 17280      70617261 
 17280      6D7300
 17281              	.LASF92:
 17282 03c8 6B5F645F 		.ascii	"k_d_c\000"
 17282      6300
 17283              	.LASF157:
 17284 03ce 7061636B 		.ascii	"packet_string\000"
 17284      65745F73 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 382


 17284      7472696E 
 17284      6700
 17285              	.LASF103:
 17286 03dc 6D5F6D75 		.ascii	"m_mult\000"
 17286      6C7400
 17287              	.LASF91:
 17288 03e3 6B5F695F 		.ascii	"k_i_c\000"
 17288      6300
 17289              	.LASF224:
 17290 03e9 64697370 		.ascii	"displacement\000"
 17290      6C616365 
 17290      6D656E74 
 17290      00
 17291              	.LASF218:
 17292 03f6 64617461 		.ascii	"data_length\000"
 17292      5F6C656E 
 17292      67746800 
 17293              	.LASF106:
 17294 0402 706F735F 		.ascii	"pos_lim_sup\000"
 17294      6C696D5F 
 17294      73757000 
 17295              	.LASF113:
 17296 040e 656D675F 		.ascii	"emg_speed\000"
 17296      73706565 
 17296      6400
 17297              	.LASF124:
 17298 0418 72657374 		.ascii	"rest_vel\000"
 17298      5F76656C 
 17298      00
 17299              	.LASF159:
 17300 0421 7061636B 		.ascii	"packet_data\000"
 17300      65745F64 
 17300      61746100 
 17301              	.LASF215:
 17302 042d 636F6D6D 		.ascii	"commWrite\000"
 17302      57726974 
 17302      6500
 17303              	.LASF226:
 17304 0437 70616765 		.ascii	"pages\000"
 17304      7300
 17305              	.LASF230:
 17306 043d 6D656D49 		.ascii	"memInit\000"
 17306      6E697400 
 17307              	.LASF94:
 17308 0445 6B5F695F 		.ascii	"k_i_dl\000"
 17308      646C00
 17309              	.LASF38:
 17310 044c 434D445F 		.ascii	"CMD_SET_INPUTS\000"
 17310      5345545F 
 17310      494E5055 
 17310      545300
 17311              	.LASF85:
 17312 045b 62756666 		.ascii	"buffer\000"
 17312      657200
 17313              	.LASF96:
 17314 0462 6B5F705F 		.ascii	"k_p_c_dl\000"
 17314      635F646C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 383


 17314      00
 17315              	.LASF231:
 17316 046b 636D645F 		.ascii	"cmd_get_measurements\000"
 17316      6765745F 
 17316      6D656173 
 17316      7572656D 
 17316      656E7473 
 17317              	.LASF152:
 17318 0480 73706565 		.ascii	"speed\000"
 17318      6400
 17319              	.LASF156:
 17320 0486 72785F63 		.ascii	"rx_cmd\000"
 17320      6D6400
 17321              	.LASF78:
 17322 048d 54595045 		.ascii	"TYPE_DOUBLE\000"
 17322      5F444F55 
 17322      424C4500 
 17323              	.LASF255:
 17324 0499 675F6D65 		.ascii	"g_meas\000"
 17324      617300
 17325              	.LASF67:
 17326 04a0 41434B5F 		.ascii	"ACK_ERROR\000"
 17326      4552524F 
 17326      5200
 17327              	.LASF268:
 17328 04aa 64617461 		.ascii	"data_encoder_raw\000"
 17328      5F656E63 
 17328      6F646572 
 17328      5F726177 
 17328      00
 17329              	.LASF52:
 17330 04bb 494E5055 		.ascii	"INPUT_MODE_EXTERNAL\000"
 17330      545F4D4F 
 17330      44455F45 
 17330      58544552 
 17330      4E414C00 
 17331              	.LASF184:
 17332 04cf 696E6465 		.ascii	"index\000"
 17332      7800
 17333              	.LASF125:
 17334 04d5 72657374 		.ascii	"rest_position_flag\000"
 17334      5F706F73 
 17334      6974696F 
 17334      6E5F666C 
 17334      616700
 17335              	.LASF273:
 17336 04e8 675F696D 		.ascii	"g_imu\000"
 17336      7500
 17337              	.LASF97:
 17338 04ee 6B5F695F 		.ascii	"k_i_c_dl\000"
 17338      635F646C 
 17338      00
 17339              	.LASF195:
 17340 04f7 6D61675F 		.ascii	"mag_param_str\000"
 17340      70617261 
 17340      6D5F7374 
 17340      7200
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 384


 17341              	.LASF62:
 17342 0505 43555252 		.ascii	"CURR_AND_POS_CONTROL\000"
 17342      5F414E44 
 17342      5F504F53 
 17342      5F434F4E 
 17342      54524F4C 
 17343              	.LASF28:
 17344 051a 434D445F 		.ascii	"CMD_STORE_PARAMS\000"
 17344      53544F52 
 17344      455F5041 
 17344      52414D53 
 17344      00
 17345              	.LASF174:
 17346 052b 50415241 		.ascii	"PARAMS_STR\000"
 17346      4D535F53 
 17346      545200
 17347              	.LASF150:
 17348 0536 656E6162 		.ascii	"enabled\000"
 17348      6C656400 
 17349              	.LASF7:
 17350 053e 6C6F6E67 		.ascii	"long unsigned int\000"
 17350      20756E73 
 17350      69676E65 
 17350      6420696E 
 17350      7400
 17351              	.LASF136:
 17352 0550 746F7461 		.ascii	"total_time_on\000"
 17352      6C5F7469 
 17352      6D655F6F 
 17352      6E00
 17353              	.LASF32:
 17354 055e 434D445F 		.ascii	"CMD_BOOTLOADER\000"
 17354      424F4F54 
 17354      4C4F4144 
 17354      455200
 17355              	.LASF233:
 17356 056d 636D645F 		.ascii	"cmd_get_accelerations\000"
 17356      6765745F 
 17356      61636365 
 17356      6C657261 
 17356      74696F6E 
 17357              	.LASF137:
 17358 0583 746F7461 		.ascii	"total_time_rest\000"
 17358      6C5F7469 
 17358      6D655F72 
 17358      65737400 
 17359              	.LASF99:
 17360 0593 61637469 		.ascii	"activ\000"
 17360      7600
 17361              	.LASF102:
 17362 0599 6D5F6F66 		.ascii	"m_off\000"
 17362      6600
 17363              	.LASF68:
 17364 059f 41434B5F 		.ascii	"ACK_OK\000"
 17364      4F4B00
 17365              	.LASF70:
 17366 05a6 54595045 		.ascii	"TYPE_FLAG\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 385


 17366      5F464C41 
 17366      4700
 17367              	.LASF147:
 17368 05b0 71756174 		.ascii	"quat_value\000"
 17368      5F76616C 
 17368      756500
 17369              	.LASF191:
 17370 05bb 7061636B 		.ascii	"packet_length\000"
 17370      65745F6C 
 17370      656E6774 
 17370      6800
 17371              	.LASF122:
 17372 05c9 72657374 		.ascii	"rest_pos\000"
 17372      5F706F73 
 17372      00
 17373              	.LASF79:
 17374 05d2 63757272 		.ascii	"curr\000"
 17374      00
 17375              	.LASF100:
 17376 05d7 696E7075 		.ascii	"input_mode\000"
 17376      745F6D6F 
 17376      646500
 17377              	.LASF60:
 17378 05e2 434F4E54 		.ascii	"CONTROL_PWM\000"
 17378      524F4C5F 
 17378      50574D00 
 17379              	.LASF43:
 17380 05ee 434D445F 		.ascii	"CMD_GET_EMG\000"
 17380      4745545F 
 17380      454D4700 
 17381              	.LASF31:
 17382 05fa 434D445F 		.ascii	"CMD_GET_INFO\000"
 17382      4745545F 
 17382      494E464F 
 17382      00
 17383              	.LASF175:
 17384 0607 696E7075 		.ascii	"input_mode_menu\000"
 17384      745F6D6F 
 17384      64655F6D 
 17384      656E7500 
 17385              	.LASF250:
 17386 0617 73696E67 		.ascii	"single_packet\000"
 17386      6C655F70 
 17386      61636B65 
 17386      7400
 17387              	.LASF88:
 17388 0625 73745F6D 		.ascii	"st_mem\000"
 17388      656D00
 17389              	.LASF190:
 17390 062c 66697273 		.ascii	"first_imu_parameter\000"
 17390      745F696D 
 17390      755F7061 
 17390      72616D65 
 17390      74657200 
 17391              	.LASF42:
 17392 0640 434D445F 		.ascii	"CMD_GET_CURR_AND_MEAS\000"
 17392      4745545F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 386


 17392      43555252 
 17392      5F414E44 
 17392      5F4D4541 
 17393              	.LASF276:
 17394 0656 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 17394      43313120 
 17394      352E342E 
 17394      31203230 
 17394      31363036 
 17395 0689 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 17395      20726576 
 17395      6973696F 
 17395      6E203233 
 17395      37373135 
 17396 06bc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 17396      66756E63 
 17396      74696F6E 
 17396      2D736563 
 17396      74696F6E 
 17397              	.LASF81:
 17398 06e4 73745F72 		.ascii	"st_ref\000"
 17398      656600
 17399              	.LASF47:
 17400 06eb 434D445F 		.ascii	"CMD_SET_CUFF_INPUTS\000"
 17400      5345545F 
 17400      43554646 
 17400      5F494E50 
 17400      55545300 
 17401              	.LASF260:
 17402 06ff 63616C69 		.ascii	"calib\000"
 17402      6200
 17403              	.LASF6:
 17404 0705 5F5F7569 		.ascii	"__uint32_t\000"
 17404      6E743332 
 17404      5F7400
 17405              	.LASF8:
 17406 0710 6C6F6E67 		.ascii	"long long int\000"
 17406      206C6F6E 
 17406      6720696E 
 17406      7400
 17407              	.LASF58:
 17408 071e 53485F63 		.ascii	"SH_control_mode\000"
 17408      6F6E7472 
 17408      6F6C5F6D 
 17408      6F646500 
 17409              	.LASF72:
 17410 072e 54595045 		.ascii	"TYPE_UINT8\000"
 17410      5F55494E 
 17410      543800
 17411              	.LASF120:
 17412 0739 6D61696E 		.ascii	"maint_month\000"
 17412      745F6D6F 
 17412      6E746800 
 17413              	.LASF237:
 17414 0745 636D645F 		.ascii	"cmd_get_currents\000"
 17414      6765745F 
 17414      63757272 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 387


 17414      656E7473 
 17414      00
 17415              	.LASF65:
 17416 0756 4D41584F 		.ascii	"MAXON_12V\000"
 17416      4E5F3132 
 17416      5600
 17417              	.LASF267:
 17418 0760 6368616E 		.ascii	"change_ext_ref_flag\000"
 17418      67655F65 
 17418      78745F72 
 17418      65665F66 
 17418      6C616700 
 17419              	.LASF21:
 17420 0774 646F7562 		.ascii	"double\000"
 17420      6C6500
 17421              	.LASF196:
 17422 077b 69645F73 		.ascii	"id_str\000"
 17422      747200
 17423              	.LASF153:
 17424 0782 72657065 		.ascii	"repetitions\000"
 17424      74697469 
 17424      6F6E7300 
 17425              	.LASF107:
 17426 078e 6D61785F 		.ascii	"max_step_neg\000"
 17426      73746570 
 17426      5F6E6567 
 17426      00
 17427              	.LASF266:
 17428 079b 72657365 		.ascii	"reset_last_value_flag\000"
 17428      745F6C61 
 17428      73745F76 
 17428      616C7565 
 17428      5F666C61 
 17429              	.LASF20:
 17430 07b1 666C6F61 		.ascii	"float\000"
 17430      7400
 17431              	.LASF141:
 17432 07b7 494D555F 		.ascii	"IMU_conf\000"
 17432      636F6E66 
 17432      00
 17433              	.LASF164:
 17434 07c0 6D5F6164 		.ascii	"m_addr\000"
 17434      647200
 17435              	.LASF259:
 17436 07c7 635F6D65 		.ascii	"c_mem\000"
 17436      6D00
 17437              	.LASF217:
 17438 07cd 64617461 		.ascii	"data_array\000"
 17438      5F617272 
 17438      617900
 17439              	.LASF10:
 17440 07d8 756E7369 		.ascii	"unsigned int\000"
 17440      676E6564 
 17440      20696E74 
 17440      00
 17441              	.LASF220:
 17442 07e5 73656E64 		.ascii	"sendAcknowledgment\000"
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 388


 17442      41636B6E 
 17442      6F776C65 
 17442      64676D65 
 17442      6E7400
 17443              	.LASF274:
 17444 07f8 4D616743 		.ascii	"MagCal\000"
 17444      616C00
 17445              	.LASF50:
 17446 07ff 53485F63 		.ascii	"SH_command\000"
 17446      6F6D6D61 
 17446      6E6400
 17447              	.LASF74:
 17448 080a 54595045 		.ascii	"TYPE_UINT16\000"
 17448      5F55494E 
 17448      54313600 
 17449              	.LASF89:
 17450 0816 666C6167 		.ascii	"flag\000"
 17450      00
 17451              	.LASF234:
 17452 081b 636D645F 		.ascii	"cmd_set_inputs\000"
 17452      7365745F 
 17452      696E7075 
 17452      747300
 17453              	.LASF101:
 17454 082a 636F6E74 		.ascii	"control_mode\000"
 17454      726F6C5F 
 17454      6D6F6465 
 17454      00
 17455              	.LASF244:
 17456 0837 6F66665F 		.ascii	"off_1\000"
 17456      3100
 17457              	.LASF53:
 17458 083d 494E5055 		.ascii	"INPUT_MODE_ENCODER3\000"
 17458      545F4D4F 
 17458      44455F45 
 17458      4E434F44 
 17458      45523300 
 17459              	.LASF235:
 17460 0851 636D645F 		.ascii	"cmd_get_activate\000"
 17460      6765745F 
 17460      61637469 
 17460      76617465 
 17460      00
 17461              	.LASF216:
 17462 0862 636F6D6D 		.ascii	"commWrite_to_cuff\000"
 17462      57726974 
 17462      655F746F 
 17462      5F637566 
 17462      6600
 17463              	.LASF162:
 17464 0874 73747269 		.ascii	"string_lenght\000"
 17464      6E675F6C 
 17464      656E6768 
 17464      7400
 17465              	.LASF77:
 17466 0882 54595045 		.ascii	"TYPE_FLOAT\000"
 17466      5F464C4F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 389


 17466      415400
 17467              	.LASF185:
 17468 088d 6175785F 		.ascii	"aux_uchar\000"
 17468      75636861 
 17468      7200
 17469              	.LASF73:
 17470 0897 54595045 		.ascii	"TYPE_INT16\000"
 17470      5F494E54 
 17470      313600
 17471              	.LASF168:
 17472 08a2 6175785F 		.ascii	"aux_uint16\000"
 17472      75696E74 
 17472      313600
 17473              	.LASF110:
 17474 08ad 656D675F 		.ascii	"emg_threshold\000"
 17474      74687265 
 17474      73686F6C 
 17474      6400
 17475              	.LASF180:
 17476 08bb 6578705F 		.ascii	"exp_port_menu\000"
 17476      706F7274 
 17476      5F6D656E 
 17476      7500
 17477              	.LASF46:
 17478 08c9 434D445F 		.ascii	"CMD_GET_CURR_DIFF\000"
 17478      4745545F 
 17478      43555252 
 17478      5F444946 
 17478      4600
 17479              	.LASF133:
 17480 08db 63757272 		.ascii	"current_hist\000"
 17480      656E745F 
 17480      68697374 
 17480      00
 17481              	.LASF61:
 17482 08e8 434F4E54 		.ascii	"CONTROL_CURRENT\000"
 17482      524F4C5F 
 17482      43555252 
 17482      454E5400 
 17483              	.LASF24:
 17484 08f8 6C6F6E67 		.ascii	"long double\000"
 17484      20646F75 
 17484      626C6500 
 17485              	.LASF76:
 17486 0904 54595045 		.ascii	"TYPE_UINT32\000"
 17486      5F55494E 
 17486      54333200 
 17487              	.LASF115:
 17488 0910 6D6F746F 		.ascii	"motor_handle_ratio\000"
 17488      725F6861 
 17488      6E646C65 
 17488      5F726174 
 17488      696F00
 17489              	.LASF219:
 17490 0923 63686563 		.ascii	"checksum\000"
 17490      6B73756D 
 17490      00
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 390


 17491              	.LASF254:
 17492 092c 675F7265 		.ascii	"g_refOld\000"
 17492      664F6C64 
 17492      00
 17493              	.LASF35:
 17494 0935 434D445F 		.ascii	"CMD_HAND_CALIBRATE\000"
 17494      48414E44 
 17494      5F43414C 
 17494      49425241 
 17494      544500
 17495              	.LASF145:
 17496 0948 6779726F 		.ascii	"gyro_value\000"
 17496      5F76616C 
 17496      756500
 17497              	.LASF138:
 17498 0953 63757272 		.ascii	"curr_time\000"
 17498      5F74696D 
 17498      6500
 17499              	.LASF114:
 17500 095d 646F7562 		.ascii	"double_encoder_on_off\000"
 17500      6C655F65 
 17500      6E636F64 
 17500      65725F6F 
 17500      6E5F6F66 
 17501              	.LASF121:
 17502 0973 6D61696E 		.ascii	"maint_year\000"
 17502      745F7965 
 17502      617200
 17503              	.LASF140:
 17504 097e 5350495F 		.ascii	"SPI_read_delay\000"
 17504      72656164 
 17504      5F64656C 
 17504      617900
 17505              	.LASF66:
 17506 098d 61636B6E 		.ascii	"acknowledgment_values\000"
 17506      6F776C65 
 17506      64676D65 
 17506      6E745F76 
 17506      616C7565 
 17507              	.LASF229:
 17508 09a3 6D656D52 		.ascii	"memRestore\000"
 17508      6573746F 
 17508      726500
 17509              	.LASF193:
 17510 09ae 6E5F696D 		.ascii	"n_imu_str\000"
 17510      755F7374 
 17510      7200
 17511              	.LASF209:
 17512 09b8 696E666F 		.ascii	"info_string\000"
 17512      5F737472 
 17512      696E6700 
 17513              	.LASF9:
 17514 09c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 17514      206C6F6E 
 17514      6720756E 
 17514      7369676E 
 17514      65642069 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 391


 17515              	.LASF75:
 17516 09db 54595045 		.ascii	"TYPE_INT32\000"
 17516      5F494E54 
 17516      333200
 17517              	.LASF119:
 17518 09e6 6D61696E 		.ascii	"maint_day\000"
 17518      745F6461 
 17518      7900
 17519              	.LASF170:
 17520 09f0 6175785F 		.ascii	"aux_uint32\000"
 17520      75696E74 
 17520      333200
 17521              	.LASF86:
 17522 09fb 6C656E67 		.ascii	"length\000"
 17522      746800
 17523              	.LASF146:
 17524 0a02 6D61675F 		.ascii	"mag_value\000"
 17524      76616C75 
 17524      6500
 17525              	.LASF80:
 17526 0a0c 6F6E6F66 		.ascii	"onoff\000"
 17526      6600
 17527              	.LASF45:
 17528 0a12 434D445F 		.ascii	"CMD_GET_ACCEL\000"
 17528      4745545F 
 17528      41434345 
 17528      4C00
 17529              	.LASF232:
 17530 0a20 636D645F 		.ascii	"cmd_get_velocities\000"
 17530      6765745F 
 17530      76656C6F 
 17530      63697469 
 17530      657300
 17531              	.LASF228:
 17532 0a33 6D656D52 		.ascii	"memRecall\000"
 17532      6563616C 
 17532      6C00
 17533              	.LASF262:
 17534 0a3d 74696D65 		.ascii	"timer_value0\000"
 17534      725F7661 
 17534      6C756530 
 17534      00
 17535              	.LASF48:
 17536 0a4a 434D445F 		.ascii	"CMD_SET_BAUDRATE\000"
 17536      5345545F 
 17536      42415544 
 17536      52415445 
 17536      00
 17537              	.LASF90:
 17538 0a5b 6B5F705F 		.ascii	"k_p_c\000"
 17538      6300
 17539              	.LASF197:
 17540 0a61 696D755F 		.ascii	"imu_table_str\000"
 17540      7461626C 
 17540      655F7374 
 17540      7200
 17541              	.LASF263:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 392


 17542 0a6f 6465765F 		.ascii	"dev_tension\000"
 17542      74656E73 
 17542      696F6E00 
 17543              	.LASF245:
 17544 0a7b 6D756C74 		.ascii	"mult_1\000"
 17544      5F3100
 17545              	.LASF23:
 17546 0a82 72656738 		.ascii	"reg8\000"
 17546      00
 17547              	.LASF213:
 17548 0a87 636F6D6D 		.ascii	"commWrite_old_id\000"
 17548      57726974 
 17548      655F6F6C 
 17548      645F6964 
 17548      00
 17549              	.LASF182:
 17550 0a98 6D616E61 		.ascii	"manage_param_list\000"
 17550      67655F70 
 17550      6172616D 
 17550      5F6C6973 
 17550      7400
 17551              	.LASF30:
 17552 0aaa 434D445F 		.ascii	"CMD_RESTORE_PARAMS\000"
 17552      52455354 
 17552      4F52455F 
 17552      50415241 
 17552      4D5300
 17553              	.LASF210:
 17554 0abd 70726570 		.ascii	"prepare_counter_info\000"
 17554      6172655F 
 17554      636F756E 
 17554      7465725F 
 17554      696E666F 
 17555              	.LASF214:
 17556 0ad2 6F6C645F 		.ascii	"old_id\000"
 17556      696400
 17557              	.LASF279:
 17558 0ad9 5F5F5245 		.ascii	"__REV16\000"
 17558      56313600 
 17559              	.LASF236:
 17560 0ae1 636D645F 		.ascii	"cmd_get_curr_and_meas\000"
 17560      6765745F 
 17560      63757272 
 17560      5F616E64 
 17560      5F6D6561 
 17561              	.LASF111:
 17562 0af7 656D675F 		.ascii	"emg_calibration_flag\000"
 17562      63616C69 
 17562      62726174 
 17562      696F6E5F 
 17562      666C6167 
 17563              	.LASF82:
 17564 0b0c 73745F6D 		.ascii	"st_meas\000"
 17564      65617300 
 17565              	.LASF64:
 17566 0b14 4D41584F 		.ascii	"MAXON_24V\000"
 17566      4E5F3234 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 393


 17566      5600
 17567              	.LASF243:
 17568 0b1e 636D645F 		.ascii	"cmd_store_params\000"
 17568      73746F72 
 17568      655F7061 
 17568      72616D73 
 17568      00
 17569              	.LASF258:
 17570 0b2f 675F6D65 		.ascii	"g_mem\000"
 17570      6D00
 17571              	.LASF40:
 17572 0b35 434D445F 		.ascii	"CMD_GET_MEASUREMENTS\000"
 17572      4745545F 
 17572      4D454153 
 17572      5552454D 
 17572      454E5453 
 17573              	.LASF13:
 17574 0b4a 75696E74 		.ascii	"uint8\000"
 17574      3800
 17575              	.LASF154:
 17576 0b50 636F6D6D 		.ascii	"commProcess\000"
 17576      50726F63 
 17576      65737300 
 17577              	.LASF2:
 17578 0b5c 73686F72 		.ascii	"short int\000"
 17578      7420696E 
 17578      7400
 17579              	.LASF201:
 17580 0b66 6964735F 		.ascii	"ids_str_len\000"
 17580      7374725F 
 17580      6C656E00 
 17581              	.LASF95:
 17582 0b72 6B5F645F 		.ascii	"k_d_dl\000"
 17582      646C00
 17583              	.LASF161:
 17584 0b79 6964785F 		.ascii	"idx_menu\000"
 17584      6D656E75 
 17584      00
 17585              	.LASF269:
 17586 0b82 4E5F494D 		.ascii	"N_IMU_Connected\000"
 17586      555F436F 
 17586      6E6E6563 
 17586      74656400 
 17587              	.LASF39:
 17588 0b92 434D445F 		.ascii	"CMD_GET_INPUTS\000"
 17588      4745545F 
 17588      494E5055 
 17588      545300
 17589              	.LASF194:
 17590 0ba1 6964735F 		.ascii	"ids_str\000"
 17590      73747200 
 17591              	.LASF27:
 17592 0ba9 434D445F 		.ascii	"CMD_SET_ZEROS\000"
 17592      5345545F 
 17592      5A45524F 
 17592      5300
 17593              	.LASF202:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 394


 17594 0bb7 6D61675F 		.ascii	"mag_param_str_len\000"
 17594      70617261 
 17594      6D5F7374 
 17594      725F6C65 
 17594      6E00
 17595              	.LASF188:
 17596 0bc9 6E756D5F 		.ascii	"num_imus_id_params\000"
 17596      696D7573 
 17596      5F69645F 
 17596      70617261 
 17596      6D7300
 17597              	.LASF167:
 17598 0bdc 6175785F 		.ascii	"aux_int16\000"
 17598      696E7431 
 17598      3600
 17599              	.LASF275:
 17600 0be6 45455052 		.ascii	"EEPROM_ADDR\000"
 17600      4F4D5F41 
 17600      44445200 
 17601              	.LASF177:
 17602 0bf2 7965735F 		.ascii	"yes_no_menu\000"
 17602      6E6F5F6D 
 17602      656E7500 
 17603              	.LASF271:
 17604 0bfe 696D7573 		.ascii	"imus_data_size\000"
 17604      5F646174 
 17604      615F7369 
 17604      7A6500
 17605              	.LASF251:
 17606 0c0d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 17606      52784275 
 17606      66666572 
 17606      00
 17607              	.LASF44:
 17608 0c1a 434D445F 		.ascii	"CMD_GET_VELOCITIES\000"
 17608      4745545F 
 17608      56454C4F 
 17608      43495449 
 17608      455300
 17609              	.LASF265:
 17610 0c2d 706F775F 		.ascii	"pow_tension\000"
 17610      74656E73 
 17610      696F6E00 
 17611              	.LASF34:
 17612 0c39 434D445F 		.ascii	"CMD_GET_PARAM_LIST\000"
 17612      4745545F 
 17612      50415241 
 17612      4D5F4C49 
 17612      535400
 17613              	.LASF69:
 17614 0c4c 64617461 		.ascii	"data_types\000"
 17614      5F747970 
 17614      657300
 17615              	.LASF17:
 17616 0c57 696E7431 		.ascii	"int16\000"
 17616      3600
 17617              	.LASF129:
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 395


 17618 0c5d 72656164 		.ascii	"read_exp_port_flag\000"
 17618      5F657870 
 17618      5F706F72 
 17618      745F666C 
 17618      616700
 17619              	.LASF126:
 17620 0c70 73776974 		.ascii	"switch_emg\000"
 17620      63685F65 
 17620      6D6700
 17621              	.LASF116:
 17622 0c7b 61637469 		.ascii	"activate_pwm_rescaling\000"
 17622      76617465 
 17622      5F70776D 
 17622      5F726573 
 17622      63616C69 
 17623              	.LASF93:
 17624 0c92 6B5F705F 		.ascii	"k_p_dl\000"
 17624      646C00
 17625              	.LASF83:
 17626 0c99 65737469 		.ascii	"estim_curr\000"
 17626      6D5F6375 
 17626      727200
 17627              	.LASF264:
 17628 0ca4 6465765F 		.ascii	"dev_pwm_limit\000"
 17628      70776D5F 
 17628      6C696D69 
 17628      7400
 17629              	.LASF12:
 17630 0cb2 75696E74 		.ascii	"uint32_t\000"
 17630      33325F74 
 17630      00
 17631              	.LASF166:
 17632 0cbb 6175785F 		.ascii	"aux_float\000"
 17632      666C6F61 
 17632      7400
 17633              	.LASF270:
 17634 0cc5 494D555F 		.ascii	"IMU_connected\000"
 17634      636F6E6E 
 17634      65637465 
 17634      6400
 17635              	.LASF173:
 17636 0cd3 4E554D5F 		.ascii	"NUM_MENU\000"
 17636      4D454E55 
 17636      00
 17637              	.LASF169:
 17638 0cdc 6175785F 		.ascii	"aux_int32\000"
 17638      696E7433 
 17638      3200
 17639              	.LASF118:
 17640 0ce6 62617564 		.ascii	"baud_rate\000"
 17640      5F726174 
 17640      6500
 17641              	.LASF238:
 17642 0cf0 636D645F 		.ascii	"cmd_get_currents_for_cuff\000"
 17642      6765745F 
 17642      63757272 
 17642      656E7473 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 396


 17642      5F666F72 
 17643              	.LASF183:
 17644 0d0a 696E666F 		.ascii	"info_type\000"
 17644      5F747970 
 17644      6500
 17645              	.LASF49:
 17646 0d14 434D445F 		.ascii	"CMD_GET_IMU_READINGS\000"
 17646      4745545F 
 17646      494D555F 
 17646      52454144 
 17646      494E4753 
 17647              	.LASF222:
 17648 0d29 4C435243 		.ascii	"LCRChecksum\000"
 17648      6865636B 
 17648      73756D00 
 17649              	.LASF248:
 17650 0d35 6B5F696D 		.ascii	"k_imu\000"
 17650      7500
 17651              	.LASF3:
 17652 0d3b 73686F72 		.ascii	"short unsigned int\000"
 17652      7420756E 
 17652      7369676E 
 17652      65642069 
 17652      6E7400
 17653              	.LASF142:
 17654 0d4e 73745F69 		.ascii	"st_imu\000"
 17654      6D7500
 17655              	.LASF187:
 17656 0d55 6765745F 		.ascii	"get_IMU_param_list\000"
 17656      494D555F 
 17656      70617261 
 17656      6D5F6C69 
 17656      737400
 17657              	.LASF171:
 17658 0d68 54595045 		.ascii	"TYPES\000"
 17658      5300
 17659              	.LASF252:
 17660 0d6e 675F7265 		.ascii	"g_ref\000"
 17660      6600
 17661              	.LASF18:
 17662 0d74 696E7433 		.ascii	"int32\000"
 17662      3200
 17663              	.LASF158:
 17664 0d7a 696E666F 		.ascii	"infoGet\000"
 17664      47657400 
 17665              	.LASF104:
 17666 0d82 706F735F 		.ascii	"pos_lim_flag\000"
 17666      6C696D5F 
 17666      666C6167 
 17666      00
 17667              	.LASF256:
 17668 0d8f 675F6D65 		.ascii	"g_measOld\000"
 17668      61734F6C 
 17668      6400
 17669              	.LASF59:
 17670 0d99 434F4E54 		.ascii	"CONTROL_ANGLE\000"
 17670      524F4C5F 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 397


 17670      414E474C 
 17670      4500
 17671              	.LASF239:
 17672 0da7 636D645F 		.ascii	"cmd_activate\000"
 17672      61637469 
 17672      76617465 
 17672      00
 17673              	.LASF5:
 17674 0db4 5F5F696E 		.ascii	"__int32_t\000"
 17674      7433325F 
 17674      7400
 17675              	.LASF181:
 17676 0dbe 7370695F 		.ascii	"spi_delay_menu\000"
 17676      64656C61 
 17676      795F6D65 
 17676      6E7500
 17677              	.LASF135:
 17678 0dcd 77697265 		.ascii	"wire_disp\000"
 17678      5F646973 
 17678      7000
 17679              	.LASF112:
 17680 0dd7 656D675F 		.ascii	"emg_max_value\000"
 17680      6D61785F 
 17680      76616C75 
 17680      6500
 17681              	.LASF277:
 17682 0de5 2E2E5C73 		.ascii	"..\\src\\command_processing.c\000"
 17682      72635C63 
 17682      6F6D6D61 
 17682      6E645F70 
 17682      726F6365 
 17683              	.LASF109:
 17684 0e01 63757272 		.ascii	"current_limit\000"
 17684      656E745F 
 17684      6C696D69 
 17684      7400
 17685              	.LASF51:
 17686 0e0f 53485F69 		.ascii	"SH_input_mode\000"
 17686      6E707574 
 17686      5F6D6F64 
 17686      6500
 17687              	.LASF71:
 17688 0e1d 54595045 		.ascii	"TYPE_INT8\000"
 17688      5F494E54 
 17688      3800
 17689              	.LASF212:
 17690 0e27 494D555F 		.ascii	"IMU_reading_info\000"
 17690      72656164 
 17690      696E675F 
 17690      696E666F 
 17690      00
 17691              	.LASF14:
 17692 0e38 75696E74 		.ascii	"uint16\000"
 17692      313600
 17693              	.LASF123:
 17694 0e3f 72657374 		.ascii	"rest_delay\000"
 17694      5F64656C 
ARM GAS  C:\Users\MattiaCP\AppData\Local\Temp\ccJzvCR5.s 			page 398


 17694      617900
 17695              	.LASF163:
 17696 0e4a 6175785F 		.ascii	"aux_str\000"
 17696      73747200 
 17697              	.LASF26:
 17698 0e52 434D445F 		.ascii	"CMD_PING\000"
 17698      50494E47 
 17698      00
 17699              	.LASF98:
 17700 0e5b 6B5F645F 		.ascii	"k_d_c_dl\000"
 17700      635F646C 
 17700      00
 17701              	.LASF151:
 17702 0e64 64697265 		.ascii	"direction\000"
 17702      6374696F 
 17702      6E00
 17703              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
